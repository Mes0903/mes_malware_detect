
692977edc91d57e84fbe2dd6b964952abe32db1534538920b6ebb0f276fc4bcb.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	(bad)  
  411001:	push   eax
  411002:	mov    WORD PTR [esi-0x3],ss
  411005:	or     BYTE PTR [edx-0x4341f425],bl
  41100b:	pop    ebp
  41100c:	call   0x6a133867
  411011:	inc    eax
  411012:	dec    edi
  411013:	xor    eax,DWORD PTR [ecx-0x1b1213c7]
  411019:	(bad)  [ecx]
  41101b:	push   0xfd95a09c
  411020:	aad    0xcd
  411022:	call   0x51156f67
  411027:	push   0x242dccaa
  41102c:	fwait
  41102d:	mov    dl,0xfc
  41102f:	das    
  411030:	sbb    DWORD PTR [edx-0x5d],edx
  411033:	sbb    al,0xdb
  411035:	push   ecx
  411036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411037:	repz int 0xe9
  41103a:	add    esi,DWORD PTR [eax+0x72]
  41103d:	call   0xe8669f3f
  411042:	cmp    eax,0x753c34b8
  411047:	sub    esp,DWORD PTR [edx]
  411049:	retf   0x2760
  41104c:	jp     0x4110cb
  41104e:	pop    fs
  411050:	push   ecx
  411051:	cli    
  411052:	xor    eax,0x5f394890
  411057:	stos   BYTE PTR es:[edi],al
  411058:	jbe    0x4110bb
  41105a:	adc    ah,BYTE PTR ds:0x5605b52
  411060:	mov    ds:0x8e3d5021,al
  411065:	clc    
  411066:	loopne 0x411067
  411068:	lods   al,BYTE PTR ds:[esi]
  411069:	pop    ebx
  41106a:	(bad)  
  41106b:	imul   edx,DWORD PTR [ebx-0x1],0x2caae9de
  411072:	sbb    eax,0xe3518e3
  411077:	add    eax,0x4ed08e2d
  41107c:	xchg   edx,eax
  41107d:	loop   0x4110df
  41107f:	daa    
  411080:	inc    ecx
  411081:	in     al,dx
  411082:	cli    
  411083:	jmp    FWORD PTR [ecx+0x43]
  411086:	cmp    eax,0x428f69d6
  41108b:	shr    BYTE PTR [edi],0xae
  41108e:	mov    ecx,0x32a826e3
  411093:	push   edx
  411094:	(bad)
  411098:	cmp    al,0x63
  41109a:	scas   al,BYTE PTR es:[edi]
  41109b:	inc    esi
  41109c:	sbb    dl,0x5
  41109f:	icebp  
  4110a0:	sahf   
  4110a1:	or     BYTE PTR [esi+0x1620dc40],al
  4110a7:	mov    edi,0xb297aa8b
  4110ac:	jo     0x4110d2
  4110ae:	dec    ebx
  4110af:	jmp    0xdbf4:0x9a7aa71d
  4110b6:	or     dh,BYTE PTR [eax+0x28]
  4110b9:	sub    eax,0x75e3c727
  4110be:	mov    ebx,0x260b0fdc
  4110c3:	inc    esp
  4110c4:	cdq    
  4110c5:	bound  ecx,QWORD PTR [esi+0x2e896279]
  4110cb:	call   FWORD PTR [edx]
  4110cd:	sub    DWORD PTR [ecx-0x5f9510b3],0xcb8ba54
  4110d7:	call   0xb978:0x5db1d39b
  4110de:	jmp    0xca3:0xf17a5a1c
  4110e5:	div    BYTE PTR [edx]
  4110e7:	adc    eax,0xcb061fd3
  4110ec:	call   0x7d2:0xe619d83a
  4110f3:	add    eax,0x261e9900
  4110f8:	xchg   DWORD PTR [ebx],esp
  4110fa:	dec    esp
  4110fb:	mov    fs,WORD PTR [ebx-0x783d5303]
  411101:	out    0x3d,al
  411103:	push   es
  411104:	call   0x94fe4b2e
  411109:	dec    esi
  41110a:	sahf   
  41110b:	adc    eax,0x586e2ad7
  411110:	mov    cl,0xd2
  411112:	enter  0x1eea,0x77
  411116:	outs   dx,BYTE PTR ds:[esi]
  411117:	adc    eax,0x1b4592ce
  41111c:	daa    
  41111d:	jle    0x4110a6
  41111f:	push   edi
  411120:	sbb    ch,al
  411122:	xchg   ebp,eax
  411123:	in     eax,dx
  411124:	pop    ds
  411125:	or     al,0x57
  411127:	(bad)  
  411128:	popf   
  411129:	lods   eax,DWORD PTR ds:[esi]
  41112a:	pusha  
  41112b:	out    0x23,al
  41112d:	pop    es
  41112e:	jecxz  0x411136
  411130:	lods   eax,DWORD PTR ds:[esi]
  411131:	jp     0x411167
  411133:	enter  0x5c99,0x87
  411137:	(bad)  
  411138:	push   edi
  411139:	shr    DWORD PTR [eax+0x38],1
  41113c:	sub    al,0x34
  41113e:	mov    esp,0x7f2fd20d
  411143:	xor    eax,0xb44cedc5
  411148:	pusha  
  411149:	cmp    al,0xa
  41114b:	shr    DWORD PTR [edi+0x1bc846e6],cl
  411151:	sbb    cl,BYTE PTR [eax]
  411153:	jmp    0x4306:0x2c64c323
  41115a:	ds mov eax,0xb324ab75
  411160:	daa    
  411161:	push   esp
  411162:	mov    fs,WORD PTR [eax-0x3b82ec8]
  411168:	aas    
  411169:	dec    esp
  41116a:	neg    bh
  41116c:	and    ebp,DWORD PTR [esi]
  41116e:	sbb    eax,ecx
  411170:	arpl   di,bp
  411172:	xchg   esp,eax
  411173:	clc    
  411174:	push   0xe255c2b1
  411179:	mov    al,BYTE PTR [edi+0x25ea7f8a]
  41117f:	sbb    ecx,DWORD PTR [ecx-0x1]
  411182:	clc    
  411183:	not    BYTE PTR [edi-0x7dc2b93]
  411189:	jo     0x4111ba
  41118b:	out    dx,al
  41118c:	pushf  
  41118d:	ins    BYTE PTR es:[edi],dx
  41118e:	mov    ah,0x50
  411190:	push   ecx
  411191:	sbb    ebp,DWORD PTR [ecx-0xc]
  411194:	aaa    
  411195:	push   eax
  411196:	leave  
  411197:	xor    eax,0x4ab49568
  41119c:	or     al,0x92
  41119e:	jmp    0xb9d1c9bc
  4111a3:	add    eax,0x3e97c5b5
  4111a8:	mov    ah,0x7e
  4111aa:	jo     0x4111fe
  4111ac:	ds icebp 
  4111ae:	shl    BYTE PTR [esi-0xfc37b3b],0x76
  4111b5:	adc    eax,0x8fbe08d7
  4111ba:	xor    al,0xbc
  4111bc:	mov    ?,WORD PTR [edx+0x1194d6c5]
  4111c2:	sub    BYTE PTR [edx-0x15],al
  4111c5:	cld    
  4111c6:	stos   DWORD PTR es:[edi],eax
  4111c7:	mov    ch,BYTE PTR [eax-0x1447223f]
  4111cd:	adc    eax,DWORD PTR [ecx+0x6d7cc23c]
  4111d3:	in     al,0xd1
  4111d5:	ins    BYTE PTR es:[edi],dx
  4111d6:	(bad)  
  4111d7:	(bad)  
  4111d8:	in     eax,0xe2
  4111da:	ja     0x411202
  4111dc:	xchg   DWORD PTR [eax+eax*2],ebp
  4111df:	inc    esp
  4111e0:	das    
  4111e1:	es data16 add al,0xb2
  4111e5:	or     DWORD PTR [esi+edi*1-0x71325c92],esp
  4111ec:	nop    DWORD PTR es:[edx+0x6c3e5143]
  4111f4:	inc    esp
  4111f5:	pop    ss
  4111f6:	clc    
  4111f7:	fs inc edi
  4111f9:	leave  
  4111fa:	xchg   esi,eax
  4111fb:	popa   
  4111fc:	pop    esp
  4111fd:	push   ebx
  4111fe:	dec    ebx
  4111ff:	xor    eax,0x2c1cff88
  411204:	test   eax,esi
  411206:	fs cs push cs
  411209:	aas    
  41120a:	xchg   BYTE PTR [esi],cl
  41120c:	fstp   QWORD PTR [esi]
  41120e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41120f:	xchg   BYTE PTR [edi-0x24f564a1],ah
  411215:	ret    0x2183
  411218:	scas   eax,DWORD PTR es:[edi]
  411219:	jo     0x41122a
  41121b:	mov    dh,0x71
  41121d:	iret   
  41121e:	adc    DWORD PTR [eax],0xffc5f845
  411224:	jns    0x41127c
  411226:	lods   eax,DWORD PTR ds:[esi]
  411227:	dec    ecx
  411228:	push   es
  411229:	jge    0x4111b3
  41122b:	and    al,BYTE PTR [esi]
  41122d:	xchg   bl,dh
  41122f:	jle    0x4111ef
  411231:	in     eax,0x30
  411233:	out    0x5c,al
  411235:	push   ds
  411236:	cmp    dh,BYTE PTR [esi+0x68317c96]
  41123c:	mov    ebp,0x942ae1e5
  411241:	addr16 pop esp
  411243:	jecxz  0x411214
  411245:	repz or DWORD PTR [ebx+0x34],edx
  411249:	or     eax,edi
  41124b:	inc    edx
  41124c:	lahf   
  41124d:	out    dx,al
  41124e:	shr    BYTE PTR [esi+0x70],0x44
  411252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411253:	mov    eax,0xc801d0b1
  411258:	test   al,0x3e
  41125a:	mov    WORD PTR [edi-0x7],?
  41125d:	(bad)  [esi+0x0]
  411260:	or     al,bl
  411262:	dec    edx
  411263:	cdq    
  411264:	ja     0x4111ec
  411266:	scas   eax,DWORD PTR es:[edi]
  411267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411268:	popf   
  411269:	jo     0x41129a
  41126b:	or     eax,ecx
  41126d:	(bad)  
  41126e:	enter  0xaba8,0xfa
  411272:	dec    edx
  411273:	add    esp,DWORD PTR [eax+0x6f413169]
  411279:	shl    DWORD PTR [ebx+eiz*2],0x49
  41127d:	ins    DWORD PTR es:[edi],dx
  41127e:	pop    ebp
  41127f:	mov    bh,0x89
  411281:	fsub   DWORD PTR [eax+edx*4]
  411284:	into   
  411285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411286:	jmp    0xbe2510da
  41128b:	jo     0x4112dc
  41128d:	adc    ah,ah
  41128f:	xchg   DWORD PTR [edx],esi
  411291:	jnp    0x41126a
  411293:	cmp    eax,0xec745c13
  411298:	jmp    0x8587:0x818b5bda
  41129f:	jo     0x4112ef
  4112a1:	jo     0x41122f
  4112a3:	jmp    0x707318bc
  4112a8:	sbb    bh,dh
  4112aa:	xor    ebx,DWORD PTR [edx+0x130476d5]
  4112b0:	test   eax,0x88e93af4
  4112b5:	pop    ebp
  4112b6:	daa    
  4112b7:	into   
  4112b8:	in     al,dx
  4112b9:	ficomp DWORD PTR [esi-0x28bd5575]
  4112bf:	std    
  4112c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112c1:	adc    eax,0xea4cfb7c
  4112c6:	push   ss
  4112c7:	(bad)  
  4112c8:	sub    eax,0x22e00134
  4112cd:	adc    eax,0xb1738fd9
  4112d2:	sub    edi,esi
  4112d4:	jmp    0x411355
  4112d6:	enter  0x511,0x12
  4112da:	cwde   
  4112db:	test   DWORD PTR [edi+esi*2+0x193f6dbd],esi
  4112e2:	in     al,dx
  4112e3:	add    BYTE PTR [edi-0x4472bd2e],0xcd
  4112ea:	icebp  
  4112eb:	inc    edi
  4112ec:	mov    DWORD PTR [ebp+0x13],edi
  4112ef:	or     eax,0xf9c07b6b
  4112f4:	leave  
  4112f5:	(bad)  
  4112f6:	xchg   ebx,eax
  4112f7:	out    0xeb,eax
  4112f9:	stos   BYTE PTR es:[edi],al
  4112fa:	rcl    BYTE PTR [ebx],0xb6
  4112fd:	sub    DWORD PTR [ecx-0x48],esi
  411300:	fwait
  411301:	push   esi
  411302:	stos   DWORD PTR es:[edi],eax
  411303:	lds    eax,FWORD PTR [edx-0x62]
  411306:	push   cs
  411307:	dec    esi
  411308:	(bad)  
  411309:	jp     0x41128e
  41130b:	call   0x24c35cdd
  411310:	xchg   ecx,eax
  411311:	mov    ds:0xf8411b5a,al
  411316:	sub    eax,0x2399d4c9
  41131b:	das    
  41131c:	adc    al,ch
  41131e:	and    bl,dh
  411320:	mov    edx,0x459092d4
  411325:	fcmovnbe st,st(4)
  411327:	loopne 0x411309
  411329:	and    ebp,0xffffff9b
  41132c:	test   BYTE PTR [ecx+0x23],al
  41132f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411330:	call   0xd7b63896
  411335:	inc    edi
  411336:	in     al,dx
  411337:	push   ds
  411338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411339:	mov    ebx,0x52781b35
  41133e:	mov    DWORD PTR [ebx],eax
  411340:	dec    esi
  411341:	dec    ebx
  411342:	dec    edx
  411343:	and    BYTE PTR [ebp+0x32],dh
  411346:	ds dec esp
  411348:	xchg   ebp,eax
  411349:	test   DWORD PTR [edx-0x77c71749],ecx
  41134f:	adc    esi,esi
  411351:	bound  eax,QWORD PTR [edx+0xd614e5a]
  411357:	hlt    
  411358:	test   edx,edi
  41135a:	add    BYTE PTR [edx],dl
  41135c:	or     DWORD PTR [edi-0x2411116c],edx
  411362:	les    ebp,FWORD PTR [eax]
  411364:	pop    eax
  411365:	jp     0x411326
  411367:	cmp    eax,0x86d421a
  41136c:	cmp    eax,0x1388b650
  411371:	fs ret 0xe59a
  411375:	push   esi
  411376:	mov    BYTE PTR [edx],dh
  411378:	loop   0x411348
  41137a:	ficom  DWORD PTR [esi+0x444ae862]
  411380:	inc    edx
  411381:	in     eax,0x97
  411383:	adc    bl,bh
  411385:	out    dx,al
  411386:	and    ecx,ebp
  411388:	es retf 0x735f
  41138c:	lock jge 0x4113eb
  41138f:	add    ah,BYTE PTR [esp+ecx*1+0xe4a2d1c]
  411396:	xor    BYTE PTR [ecx-0x7cb91348],bl
  41139c:	test   DWORD PTR [eax-0xe393caa],ebp
  4113a2:	adc    DWORD PTR [eax-0x4f0ff3a9],edx
  4113a8:	nop
  4113a9:	(bad)  
  4113aa:	push   ebx
  4113ab:	aad    0xdb
  4113ad:	clc    
  4113ae:	adc    ebx,ecx
  4113b0:	dec    edi
  4113b1:	mov    eax,ds:0x5c60c467
  4113b6:	call   0x826b:0x934b741b
  4113bd:	out    0x41,al
  4113bf:	pusha  
  4113c0:	jge    0x4113c0
  4113c2:	pop    ebp
  4113c3:	outs   dx,BYTE PTR ds:[esi]
  4113c4:	mov    ecx,0xdd926cd2
  4113c9:	or     edi,DWORD PTR [ebx]
  4113cb:	jmp    DWORD PTR [ebx+0x37]
  4113ce:	push   ds
  4113cf:	jb     0x41144f
  4113d1:	xchg   DWORD PTR [eax-0x7],edx
  4113d4:	neg    dl
  4113d6:	sbb    BYTE PTR [ecx-0x1e457cd3],dl
  4113dc:	mov    dh,0x16
  4113de:	mov    esi,0x1c28f806
  4113e3:	stos   BYTE PTR es:[edi],al
  4113e4:	cmp    eax,0x189788b
  4113e9:	sahf   
  4113ea:	jp     0x411439
  4113ec:	sbb    BYTE PTR [edi+0x11],bl
  4113ef:	dec    ebx
  4113f0:	mov    cl,0x27
  4113f2:	lods   eax,DWORD PTR ds:[esi]
  4113f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113f5:	fmul   QWORD PTR [edi-0x41]
  4113f8:	aas    
  4113f9:	xchg   ebx,eax
  4113fa:	pop    ebp
  4113fb:	or     esp,DWORD PTR [ebp+0x3a841dd6]
  411401:	loop   0x411421
  411403:	inc    esi
  411404:	mov    al,ds:0x435f5320
  411409:	cmp    BYTE PTR [ecx],dh
  41140b:	in     al,0x50
  41140d:	sbb    dx,WORD PTR [ebx-0x689eaa05]
  411414:	ret    0xf6c3
  411417:	dec    ebp
  411418:	cmp    BYTE PTR [ecx+0x57],dl
  41141b:	sub    ch,BYTE PTR [ecx+0x3c1b78be]
  411421:	mov    BYTE PTR [ebx+0x7a],ah
  411424:	mov    BYTE PTR [esi],dl
  411426:	outs   dx,DWORD PTR ds:[esi]
  411427:	ss aaa 
  411429:	inc    edi
  41142a:	(bad)  
  41142b:	mov    al,0x33
  41142d:	mov    ds:0x2e602f49,eax
  411432:	or     ch,bh
  411434:	dec    edx
  411435:	jecxz  0x411449
  411437:	inc    DWORD PTR [ecx+0x6e115638]
  41143d:	pop    ebx
  41143e:	sbb    ch,ch
  411440:	leave  
  411441:	repnz and dl,BYTE PTR [edx-0x64]
  411445:	jp     0x4114ad
  411447:	call   0xbee4:0x18027601
  41144e:	lds    esp,FWORD PTR [edi]
  411450:	pop    esi
  411451:	pop    ebx
  411452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411453:	dec    eax
  411454:	dec    edi
  411455:	repz xlat BYTE PTR ds:[ebx]
  411457:	(bad)  
  411459:	icebp  
  41145a:	mov    esp,0x7790c39d
  41145f:	js     0x41140d
  411461:	loop   0x4114af
  411463:	addr16 fs std 
  411466:	sub    al,0x54
  411468:	aad    0x63
  41146a:	jnp    0x4114c8
  41146c:	(bad)  
  41146d:	cmp    eax,0xa5ecf888
  411472:	mov    ecx,0x4553066e
  411477:	sub    al,0x13
  411479:	sub    BYTE PTR [eax],dl
  41147b:	retf   
  41147c:	test   al,0x4e
  41147e:	inc    edi
  41147f:	xor    ebp,ebp
  411481:	dec    esp
  411482:	add    DWORD PTR [ebp-0x14],ecx
  411485:	push   esp
  411486:	mov    al,BYTE PTR [edi]
  411488:	xchg   edx,eax
  411489:	cmp    cl,BYTE PTR [ebx]
  41148b:	mov    eax,0xe385c501
  411490:	sub    esp,DWORD PTR [esi]
  411492:	xchg   bl,ah
  411494:	xchg   edi,eax
  411495:	int3   
  411496:	pop    esp
  411497:	xor    dh,bh
  411499:	adc    esi,DWORD PTR ds:0xa74cc291
  41149f:	lods   al,BYTE PTR ds:[esi]
  4114a0:	mov    ah,0x47
  4114a2:	out    dx,eax
  4114a3:	adc    DWORD PTR [edx+0x25f2e10a],ebp
  4114a9:	jecxz  0x411458
  4114ab:	mov    esi,0x4aa8b904
  4114b0:	jnp    0x4114f6
  4114b2:	sbb    dl,0xef
  4114b5:	mov    esp,0x5dd0a9a1
  4114ba:	test   al,0x86
  4114bc:	aas    
  4114bd:	push   ecx
  4114be:	cmp    eax,0xcb198228
  4114c3:	sub    eax,0xaddb945f
  4114c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114c9:	retf   0xee53
  4114cc:	not    BYTE PTR [ecx]
  4114ce:	mov    ch,BYTE PTR [ecx]
  4114d0:	push   edx
  4114d1:	dec    eax
  4114d2:	sub    al,BYTE PTR [edx+0x6a7189ad]
  4114d8:	mov    ebp,0x644098b5
  4114dd:	jno    0x411512
  4114df:	aas    
  4114e0:	fild   QWORD PTR [eax+0x68]
  4114e3:	push   ebp
  4114e4:	inc    esi
  4114e5:	and    DWORD PTR [edx-0x681aaa82],ebp
  4114eb:	mov    esi,ecx
  4114ed:	and    BYTE PTR es:[esi-0x15],al
  4114f1:	xchg   BYTE PTR [esi],ah
  4114f3:	push   0xffffffdc
  4114f5:	mov    DWORD PTR [ebp-0x4f9bf737],esp
  4114fb:	mov    ecx,0x12699237
  411500:	stos   DWORD PTR es:[edi],eax
  411501:	repz jmp 0xd731bd69
  411507:	fld    QWORD PTR [edx+0x76311eb8]
  41150d:	mov    edi,0x8e062543
  411512:	sub    BYTE PTR [edx-0x18d4ba09],ah
  411518:	aam    0x7f
  41151a:	or     al,0xc9
  41151c:	lahf   
  41151d:	scas   eax,DWORD PTR es:[edi]
  41151e:	push   DWORD PTR [eax-0x27f8d7a]
  411524:	arpl   WORD PTR [ecx+esi*2+0x675c7e2a],bp
  41152b:	add    BYTE PTR ds:0x57976c2b,dl
  411531:	stos   BYTE PTR es:[edi],al
  411532:	call   0x9f0c:0x1f603dd
  411539:	push   es
  41153a:	jbe    0x41159c
  41153c:	sahf   
  41153d:	cdq    
  41153e:	daa    
  41153f:	mov    al,BYTE PTR [esi-0x3d8ed274]
  411545:	push   es
  411546:	sub    al,BYTE PTR [eax-0x6a]
  411549:	cli    
  41154a:	pop    ebx
  41154b:	cdq    
  41154c:	fist   WORD PTR [edx]
  41154e:	xchg   ebx,eax
  41154f:	push   ebx
  411550:	push   ds
  411551:	cmp    al,0x39
  411553:	iret   
  411554:	cmp    BYTE PTR [ebx-0x5adcb344],dh
  41155a:	mov    ebx,fs
  41155c:	and    DWORD PTR [edx-0x77fe2d9d],ecx
  411562:	jl     0x411573
  411564:	aaa    
  411565:	pop    ss
  411566:	or     eax,0x7bb6ab5f
  41156b:	pop    esi
  41156c:	pop    edi
  41156d:	pop    ebp
  41156e:	mov    fs,WORD PTR [esp+ebp*4-0x66]
  411572:	(bad)  
  411574:	fwait
  411575:	arpl   WORD PTR [ebx+0x4baf62aa],bp
  41157b:	push   cs
  41157c:	daa    
  41157d:	ud2    
  41157f:	mov    edx,edx
  411581:	jmp    0x4115dd
  411583:	sub    DWORD PTR [eax+0x25],edi
  411586:	mov    edi,0xf3552d17
  41158b:	fst    DWORD PTR [esi]
  41158d:	mov    ebx,0x54a1a546
  411592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411593:	push   0x15c5118e
  411598:	mul    DWORD PTR [edx+0x6b30d6ba]
  41159e:	jp     0x41155b
  4115a0:	les    edi,FWORD PTR [eax+edx*2-0x54]
  4115a4:	scas   eax,DWORD PTR es:[edi]
  4115a5:	dec    ebp
  4115a6:	icebp  
  4115a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115a8:	adc    eax,0xd20c8a13
  4115ad:	imul   ebx,DWORD PTR [edi+0x60],0x7b
  4115b1:	mov    edi,0x9ac87293
  4115b6:	icebp  
  4115b7:	sti    
  4115b8:	inc    ecx
  4115b9:	in     eax,0x31
  4115bb:	ret    
  4115bc:	je     0x4115f5
  4115be:	adc    dh,BYTE PTR [edi+0x27358ad4]
  4115c4:	mov    WORD PTR [edx+edx*8-0x76],es
  4115c8:	jae    0x411647
  4115ca:	ret    
  4115cb:	mov    bl,0x9b
  4115cd:	cmp    al,0x58
  4115cf:	mov    esi,0xddbcf4dc
  4115d4:	mov    ch,0xb5
  4115d6:	nop
  4115d7:	dec    esi
  4115d8:	mov    cs,WORD PTR [ecx]
  4115da:	push   esi
  4115db:	out    0xa1,eax
  4115dd:	pop    ebx
  4115de:	icebp  
  4115df:	retf   0x44d5
  4115e2:	jns    0x41163d
  4115e4:	push   esi
  4115e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115e6:	mov    DWORD PTR [edx+0x3a7cb329],esi
  4115ec:	xor    ah,dl
  4115ee:	mov    al,0x7
  4115f0:	sub    ecx,0xffffffb7
  4115f3:	jb     0x411632
  4115f5:	scas   al,BYTE PTR es:[edi]
  4115f6:	out    dx,eax
  4115f7:	cdq    
  4115f8:	nop
  4115f9:	push   esi
  4115fa:	adc    edx,DWORD PTR [edx]
  4115fc:	mov    ch,BYTE PTR [ebp-0x7b]
  4115ff:	repnz sahf 
  411601:	jno    0x4115bb
  411603:	into   
  411604:	clc    
  411605:	aaa    
  411606:	adc    edi,DWORD PTR [ebx]
  411608:	adc    al,0x3
  41160a:	mov    ds:0x949c8acb,al
  41160f:	adc    ecx,DWORD PTR [ebx]
  411611:	cmp    esi,DWORD PTR [ecx-0x27]
  411614:	test   bh,ah
  411616:	imul   eax,edx,0xffffffd9
  411619:	sub    BYTE PTR [eax-0x6f],dl
  41161c:	das    
  41161d:	mov    al,0x2
  41161f:	or     dh,BYTE PTR [ecx]
  411621:	ret    0x7e1
  411624:	cmp    BYTE PTR [edx+0x4485c6fb],ch
  41162a:	mov    edx,0x107da5ff
  41162f:	dec    ebp
  411630:	mov    ecx,0x3bbce253
  411635:	imul   BYTE PTR [edi+edi*2-0x7c077e1e]
  41163c:	inc    ebx
  41163d:	div    BYTE PTR [edx]
  41163f:	xchg   ebx,eax
  411640:	cwde   
  411641:	lea    edi,[ecx]
  411643:	lods   al,BYTE PTR ds:[esi]
  411644:	aas    
  411645:	jbe    0x411639
  411647:	clc    
  411648:	and    bl,ch
  41164a:	xor    esi,ecx
  41164c:	fild   WORD PTR [esi+0x3fc691f2]
  411652:	jmp    0x3ce4:0xbdc1ebdf
  411659:	fdivr  QWORD PTR [eax+0x6f08175a]
  41165f:	push   esp
  411660:	or     eax,0xe9387979
  411665:	mov    edx,ecx
  411667:	push   esp
  411668:	js     0x411629
  41166a:	aam    0x6a
  41166c:	sar    DWORD PTR [ecx+edi*2],1
  41166f:	mov    edx,0x262ec9
  411674:	(bad)  
  411675:	(bad)  
  411677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411678:	jno    0x411600
  41167a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41167b:	ficom  DWORD PTR [ecx+0x71ff83f8]
  411681:	int    0x95
  411683:	(bad)  
  411684:	invd   
  411686:	rcr    bh,1
  411688:	jl     0x4116fb
  41168a:	sbb    al,0xd9
  41168c:	ss das 
  41168e:	push   esp
  41168f:	pop    es
  411690:	pop    ecx
  411691:	mov    ebx,0xc8b464df
  411696:	(bad)  
  411698:	jecxz  0x4116f7
  41169a:	imul   ebp,DWORD PTR [edx-0x71121644],0xd5dfa5b4
  4116a4:	fsubrp st(0),st
  4116a6:	sti    
  4116a7:	jb     0x411679
  4116a9:	adc    ebx,DWORD PTR [esi+0x605163b9]
  4116af:	pop    ebp
  4116b0:	out    dx,eax
  4116b1:	(bad)  
  4116b2:	xchg   edx,eax
  4116b3:	shr    bh,cl
  4116b5:	in     eax,0xd5
  4116b7:	out    dx,eax
  4116b8:	xchg   edi,eax
  4116b9:	dec    edi
  4116ba:	sub    DWORD PTR [ebx-0x6dad06cf],edx
  4116c0:	push   edx
  4116c1:	cmp    edi,DWORD PTR [esi-0x40a955c9]
  4116c7:	in     eax,0x76
  4116c9:	mov    edi,?
  4116cb:	sahf   
  4116cc:	fld    DWORD PTR [eax-0x73]
  4116cf:	int    0xac
  4116d1:	imul   ebx,DWORD PTR [ecx+0x65c1c6f0],0xffffffd6
  4116d8:	lea    ebp,[ecx+eiz*8+0x3ac9fcff]
  4116df:	add    eax,0xa4f73689
  4116e4:	aaa    
  4116e5:	cmp    DWORD PTR [ebx-0x2645d00f],esi
  4116eb:	(bad)  
  4116ed:	shl    edi,1
  4116ef:	and    eax,0xc5192660
  4116f4:	and    DWORD PTR [ebx-0x68],0xffffffd1
  4116f8:	scas   al,BYTE PTR es:[edi]
  4116f9:	jnp    0x411697
  4116fb:	xor    edi,DWORD PTR [edi-0xd]
  4116fe:	cmp    DWORD PTR [ebx+0xce7f5d0],edi
  411704:	ins    DWORD PTR es:[edi],dx
  411705:	das    
  411706:	pushf  
  411707:	into   
  411708:	add    al,0xf2
  41170a:	push   ebp
  41170b:	pop    esi
  41170c:	pop    ss
  41170d:	scas   al,BYTE PTR es:[edi]
  41170e:	xchg   esp,eax
  41170f:	pop    esp
  411710:	aaa    
  411711:	sbb    DWORD PTR [edx+0x3b87578a],ebp
  411717:	mov    fs,WORD PTR [eax]
  411719:	and    ah,BYTE PTR [ecx+eax*1-0x52]
  41171d:	(bad)  [ecx]
  41171f:	inc    ebp
  411720:	scas   al,BYTE PTR es:[edi]
  411721:	sub    al,0x5f
  411723:	pop    es
  411724:	dec    DWORD PTR [ecx-0x6c93e095]
  41172a:	sahf   
  41172b:	xchg   esi,eax
  41172c:	mov    bl,0xc3
  41172e:	leave  
  41172f:	dec    ecx
  411730:	sub    dh,BYTE PTR [edi]
  411732:	shl    ch,cl
  411734:	mov    BYTE PTR [ebp-0x5c],dl
  411737:	mov    edx,eax
  411739:	loope  0x41179f
  41173b:	mov    eax,ds:0x9daab2bd
  411740:	cs xchg ebp,eax
  411742:	dec    ecx
  411743:	idiv   DWORD PTR [ebx]
  411745:	add    ebx,DWORD PTR [ecx-0x14a3b4ce]
  41174b:	(bad)  
  41174c:	jle    0x4116da
  41174e:	cmp    al,0xb9
  411750:	and    BYTE PTR [edi+edi*4-0x7c08a445],al
  411757:	push   0x40ccf0e3
  41175c:	dec    dh
  41175e:	ret    0x808b
  411761:	push   esp
  411762:	leave  
  411763:	push   cs
  411764:	lea    edx,[esi]
  411766:	and    BYTE PTR [ebx],bl
  411768:	mov    cl,0x6b
  41176a:	dec    esp
  41176b:	push   esi
  41176c:	mov    ds:0x519eed04,al
  411771:	lods   eax,DWORD PTR ds:[esi]
  411772:	mov    al,0x12
  411774:	xor    eax,0xf4360fc3
  411779:	dec    ecx
  41177a:	shr    BYTE PTR [esi+0x26],1
  41177d:	ret    0xfe56
  411780:	loope  0x411741
  411782:	push   ss
  411783:	(bad)  
  411784:	lahf   
  411785:	shl    BYTE PTR ds:0x6fd508b3,cl
  41178b:	inc    DWORD PTR [esi+0x5f]
  41178e:	fadd   QWORD PTR [eax+ebx*4]
  411791:	idiv   edi
  411793:	xchg   edi,eax
  411794:	and    al,0x3c
  411796:	mov    esp,DWORD PTR [ecx-0x761a8073]
  41179c:	lods   eax,DWORD PTR ds:[esi]
  41179d:	push   esp
  41179e:	sbb    ecx,DWORD PTR ds:0xc724fdcb
  4117a4:	jl     0x411750
  4117a6:	ja     0x411764
  4117a8:	test   eax,0x8c0875c1
  4117ad:	scas   al,BYTE PTR es:[edi]
  4117ae:	adc    edi,ebx
  4117b0:	(bad)  
  4117b1:	mov    ecx,0xf6b19297
  4117b6:	lahf   
  4117b7:	icebp  
  4117b8:	outs   dx,DWORD PTR ds:[esi]
  4117b9:	out    0xcc,al
  4117bb:	scas   eax,DWORD PTR es:[edi]
  4117bc:	repz in eax,0x76
  4117bf:	adc    esp,DWORD PTR [esi-0x66fc9150]
  4117c5:	pop    ebx
  4117c6:	adc    DWORD PTR [eax-0x609afe6b],edx
  4117cc:	push   edi
  4117cd:	or     DWORD PTR [edi+0x699c9539],edi
  4117d3:	inc    edi
  4117d4:	stos   DWORD PTR es:[edi],eax
  4117d5:	push   0x59
  4117d7:	gs xchg ecx,eax
  4117d9:	daa    
  4117da:	stos   DWORD PTR es:[edi],eax
  4117db:	cmp    eax,0x284ca979
  4117e0:	cmc    
  4117e1:	push   cs
  4117e2:	retf   
  4117e3:	pop    ebx
  4117e4:	pushf  
  4117e5:	xchg   BYTE PTR [ebx],bl
  4117e7:	(bad)  
  4117e8:	mov    esi,0x31983ef7
  4117ed:	jmp    FWORD PTR [edx+edi*8+0x76]
  4117f1:	iret   
  4117f2:	mov    ch,0xf0
  4117f4:	sbb    eax,0x4d966033
  4117f9:	inc    eax
  4117fa:	fs mov cl,0x62
  4117fd:	or     edi,DWORD PTR [ecx+0x42]
  411800:	fidivr DWORD PTR [edi+0x7f]
  411803:	add    dh,dl
  411805:	fmulp  st(5),st
  411807:	add    BYTE PTR gs:[edx+0x10f5c8ae],dl
  41180e:	adc    al,0x5e
  411810:	push   es
  411811:	outs   dx,DWORD PTR ds:[esi]
  411812:	add    BYTE PTR [eax],bh
  411814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411815:	fidiv  WORD PTR [edx+0x58]
  411818:	push   ds
  411819:	aaa    
  41181a:	lahf   
  41181b:	xor    eax,0x88f568db
  411820:	inc    edi
  411821:	push   es
  411822:	ds (bad) 
  411824:	sbb    DWORD PTR cs:[ecx-0x645be3db],ebx
  41182b:	aam    0xd4
  41182d:	test   DWORD PTR [ebx],ecx
  41182f:	js     0x4118a0
  411831:	cmp    cl,dh
  411833:	dec    esi
  411834:	inc    ecx
  411835:	outs   dx,BYTE PTR ds:[esi]
  411836:	outs   dx,DWORD PTR ds:[esi]
  411837:	sbb    al,0xb1
  411839:	gs mov bl,0x52
  41183c:	leave  
  41183d:	mov    esi,0x242c7db1
  411842:	out    dx,al
  411843:	in     eax,0xc4
  411845:	loope  0x411858
  411847:	les    edi,FWORD PTR ss:[ebp+0x79]
  41184b:	and    ecx,DWORD PTR [ebp+0x1bc25e5c]
  411851:	cwde   
  411852:	sub    al,0xaf
  411854:	mov    dl,0xdf
  411856:	fwait
  411857:	out    0xf4,al
  411859:	into   
  41185a:	and    bl,ah
  41185c:	adc    eax,0xebc1dd2d
  411861:	mov    WORD PTR [edx],ss
  411863:	xor    al,0x84
  411865:	jno    0x41185b
  411867:	xor    eax,0x4fea42fe
  41186c:	push   ds
  41186d:	sar    DWORD PTR [edx+0x57f51c2c],0x4b
  411874:	mov    eax,ds:0x3aa88557
  411879:	je     0x411880
  41187b:	jg     0x4118e5
  41187d:	(bad)  
  41187e:	scas   al,BYTE PTR es:[edi]
  41187f:	in     eax,dx
  411880:	out    0xa3,eax
  411882:	ja     0x41184d
  411884:	stc    
  411885:	mov    cl,0x74
  411887:	rol    DWORD PTR [edx-0x2a8a5dbc],0xe
  41188e:	sbb    DWORD PTR [eax-0x6f127a22],ecx
  411894:	cmp    ah,0x9
  411897:	repnz adc ebx,edi
  41189a:	mov    bh,0xe3
  41189c:	inc    ecx
  41189d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41189e:	mov    ch,0x66
  4118a0:	and    BYTE PTR [edi-0x1f5182b0],0x1d
  4118a7:	shl    BYTE PTR [ecx-0x8ff9690],cl
  4118ad:	fnsave [ecx-0x4787fc22]
  4118b3:	sar    DWORD PTR [ecx+0x538ab144],1
  4118b9:	or     BYTE PTR [eax],ch
  4118bb:	cmp    eax,0xf929a9ed
  4118c0:	call   0x12bf53d5
  4118c5:	sbb    edi,DWORD PTR [ecx]
  4118c7:	lahf   
  4118c8:	add    esp,edi
  4118ca:	dec    eax
  4118cb:	push   ecx
  4118cc:	and    esp,edx
  4118ce:	add    al,cl
  4118d0:	mov    eax,0x875b246f
  4118d5:	jae    0x411879
  4118d7:	cmp    bl,BYTE PTR [esi]
  4118d9:	adc    eax,0xef1df9eb
  4118de:	loopne 0x4118d4
  4118e0:	rcl    BYTE PTR ds:[esi-0x6e],cl
  4118e4:	pop    ss
  4118e5:	jmp    0x411917
  4118e7:	int3   
  4118e8:	cli    
  4118e9:	fmul   st,st(1)
  4118eb:	in     al,0xd9
  4118ed:	std    
  4118ee:	mov    ch,0x87
  4118f0:	sti    
  4118f1:	fwait
  4118f2:	and    eax,0x9ce734a
  4118f7:	add    DWORD PTR [esp+ebx*4+0x6cb44b98],eax
  4118fe:	inc    ebx
  4118ff:	or     eax,0x16590c6b
  411904:	mov    dl,0x1f
  411906:	retf   
  411907:	push   es
  411908:	ret    
  411909:	jbe    0x411897
  41190b:	outs   dx,BYTE PTR ds:[esi]
  41190c:	add    bh,BYTE PTR [eax+0x53]
  41190f:	das    
  411910:	jle    0x4118e1
  411912:	lods   eax,DWORD PTR ds:[esi]
  411913:	fst    DWORD PTR [ebx]
  411915:	enter  0x4a5a,0x72
  411919:	xchg   esp,eax
  41191a:	mov    ch,BYTE PTR [esi+0x61]
  41191d:	xchg   ecx,eax
  41191e:	cmp    esp,esp
  411920:	or     al,0xa3
  411922:	sub    al,al
  411924:	push   0xffffffe1
  411926:	pop    esp
  411927:	push   ebp
  411928:	push   esp
  411929:	fwait
  41192a:	inc    edi
  41192b:	and    ah,BYTE PTR [esi+0x1743b6e2]
  411931:	pop    ebx
  411932:	mov    WORD PTR [eax],fs
  411934:	mov    edx,0x112b2559
  411939:	mov    ecx,0xcb24e853
  41193e:	out    0x6d,al
  411940:	outs   dx,DWORD PTR ds:[esi]
  411941:	(bad)  
  411942:	push   ss
  411943:	push   ebp
  411944:	test   DWORD PTR ds:0xf8bdd57e,edi
  41194a:	push   eax
  41194b:	fistp  DWORD PTR [esi-0x2f]
  41194e:	mov    dh,0x54
  411950:	dec    edi
  411951:	jb     0x4118fe
  411953:	xchg   ebx,eax
  411954:	sub    ah,0xe1
  411957:	mov    ebp,0x8b37b012
  41195c:	out    dx,al
  41195d:	loop   0x411952
  41195f:	sbb    BYTE PTR [eax-0x28c0021e],al
  411965:	loope  0x4119cd
  411967:	push   esi
  411968:	stos   DWORD PTR es:[edi],eax
  411969:	sbb    edi,0x6ce30310
  41196f:	jbe    0x4119a9
  411971:	sti    
  411972:	pusha  
  411973:	popf   
  411974:	shr    BYTE PTR [ecx-0x2d],1
  411977:	int3   
  411978:	jl     0x41194a
  41197a:	mov    DWORD PTR [eax-0x21],eax
  41197d:	test   al,0x36
  41197f:	stc    
  411980:	sub    esi,DWORD PTR [esi+0x1a]
  411983:	push   cs
  411984:	xchg   BYTE PTR [edi],bh
  411986:	push   ds
  411987:	or     bl,al
  411989:	xor    eax,0x93cf22bc
  41198e:	sub    ch,BYTE PTR [edx]
  411990:	jp     0x411939
  411992:	add    ebp,esi
  411994:	adc    BYTE PTR [edi],dl
  411996:	push   0x1a798e82
  41199b:	push   0x63
  41199d:	jnp    0x411935
  41199f:	pop    ds
  4119a0:	aaa    
  4119a1:	shr    BYTE PTR [esi+ebx*1-0x31],cl
  4119a5:	das    
  4119a6:	jmp    0x2dd3:0x9eab3a2d
  4119ad:	xchg   esp,eax
  4119ae:	fldl2e 
  4119b0:	inc    edi
  4119b1:	and    BYTE PTR [edx-0x3],ah
  4119b4:	mov    esi,0xf100ca3e
  4119b9:	jmp    0x1514:0xf5b81181
  4119c0:	mov    ds:0x57ae9c7f,eax
  4119c5:	xor    ecx,ebx
  4119c7:	fdivr  QWORD PTR [ecx]
  4119c9:	or     al,0x8c
  4119cb:	push   ecx
  4119cc:	pop    eax
  4119cd:	dec    eax
  4119ce:	repnz fidiv DWORD PTR [ebp+0x296f32ce]
  4119d5:	pop    ecx
  4119d6:	pop    esp
  4119d7:	mov    ds:0x8c3528b1,eax
  4119dc:	dec    ebp
  4119dd:	fdivr  QWORD PTR [ecx-0x5ef77bef]
  4119e3:	jae    0x411a5a
  4119e5:	fs mov edi,0x2b2cc3ff
  4119eb:	ds cdq 
  4119ed:	ja     0x411a04
  4119ef:	adc    DWORD PTR [edx],ebx
  4119f1:	mul    esp
  4119f3:	and    eax,0x2ae90b75
  4119f8:	enter  0xe52e,0x8e
  4119fc:	sub    ah,BYTE PTR [ecx]
  4119fe:	fcomp  st(0)
  411a00:	sbb    eax,0x712fd996
  411a05:	ss inc ecx
  411a07:	xor    al,0x33
  411a09:	xor    ch,al
  411a0b:	pop    eax
  411a0c:	out    0xe8,al
  411a0e:	in     eax,dx
  411a0f:	fcmovnu st,st(3)
  411a11:	mov    ds:0x76dcfac1,al
  411a16:	scas   al,BYTE PTR es:[edi]
  411a17:	xor    dh,0x2d
  411a1a:	mov    edi,0xaf790fea
  411a1f:	retf   0xd2d5
  411a22:	mov    eax,0x847815b9
  411a27:	dec    ebx
  411a28:	and    cl,BYTE PTR [esi+0x507850c4]
  411a2e:	shr    edx,1
  411a30:	push   ss
  411a31:	les    esp,FWORD PTR [ebx]
  411a33:	adc    eax,0x8db5ff83
  411a38:	into   
  411a39:	xchg   BYTE PTR ds:0x3cec1435,al
  411a3f:	test   al,0xd4
  411a41:	cs add ebx,esp
  411a44:	cmp    bl,BYTE PTR [eax+0x4995c7ee]
  411a4a:	sbb    esi,0x9605051d
  411a50:	sbb    esp,eax
  411a52:	adc    esi,ebx
  411a54:	cdq    
  411a55:	(bad)  
  411a56:	call   0x71e69df7
  411a5b:	inc    esi
  411a5c:	pop    eax
  411a5d:	fistp  QWORD PTR [ebx]
  411a5f:	jle    0x4119e3
  411a61:	or     DWORD PTR [edx+0x750e7702],edi
  411a67:	test   al,0x1a
  411a69:	add    eax,0xd5b256f
  411a6e:	popf   
  411a6f:	fcmovnu st,st(6)
  411a71:	loopne 0x411a20
  411a73:	call   0xfe01bf42
  411a78:	lahf   
  411a79:	enter  0x6b5f,0x32
  411a7d:	xchg   ecx,eax
  411a7e:	int3   
  411a7f:	jnp    0x411ad1
  411a81:	push   ebp
  411a82:	icebp  
  411a83:	mov    dh,0xe5
  411a85:	push   esi
  411a86:	test   DWORD PTR [ebp+0x7751237e],esi
  411a8c:	cmp    dl,al
  411a8e:	retf   0x8989
  411a91:	cmc    
  411a92:	xchg   esp,eax
  411a93:	lahf   
  411a94:	xchg   ecx,eax
  411a95:	adc    eax,0x2362c235
  411a9a:	sub    bh,dl
  411a9c:	jb     0x411b19
  411a9e:	out    0x35,eax
  411aa0:	add    BYTE PTR [ebx-0x69991fee],0xcc
  411aa7:	nop
  411aa8:	xchg   ecx,edx
  411aaa:	jbe    0x411ad1
  411aac:	in     al,dx
  411aad:	or     al,0x80
  411aaf:	mov    edx,0x18dbaed8
  411ab4:	xchg   ecx,eax
  411ab5:	dec    edi
  411ab6:	xor    BYTE PTR [edx-0x11feb9],cl
  411abc:	mov    bh,0x74
  411abe:	mov    ah,0xfc
  411ac0:	jmp    0x411b3f
  411ac2:	dec    esi
  411ac3:	add    eax,0x71926b7a
  411ac8:	or     ah,dl
  411aca:	enter  0x681e,0x2
  411ace:	cmp    eax,DWORD PTR [eax-0x7]
  411ad1:	jl     0x411a63
  411ad3:	pop    es
  411ad4:	xchg   DWORD PTR [ebp-0x74],ecx
  411ad7:	push   es
  411ad8:	jmp    0x4ccd7c90
  411add:	mov    dl,0x51
  411adf:	das    
  411ae0:	shl    DWORD PTR [edi+esi*4],cl
  411ae3:	adc    al,0xca
  411ae5:	add    dl,BYTE PTR [ebp-0x71137fc7]
  411aeb:	ins    BYTE PTR es:[edi],dx
  411aec:	es pop esi
  411aee:	ret    0xdd39
  411af1:	popa   
  411af2:	jmp    0x80368ce1
  411af7:	xor    al,0x4e
  411af9:	push   ebx
  411afa:	cmp    BYTE PTR [esp+eiz*4-0x63],bh
  411afe:	xor    BYTE PTR [edx+0x5d],dl
  411b01:	push   ebp
  411b02:	aas    
  411b03:	stos   DWORD PTR es:[edi],eax
  411b04:	mov    al,0xa8
  411b06:	idiv   DWORD PTR [ebx+0x0]
  411b09:	repnz arpl WORD PTR [esp+ecx*4],sp
  411b0d:	adc    DWORD PTR [ebp+0x9],eax
  411b10:	iret   
  411b11:	pushf  
  411b12:	scas   al,BYTE PTR es:[edi]
  411b13:	in     al,0xbc
  411b15:	cmc    
  411b16:	jae    0x411b4a
  411b18:	and    al,0xca
  411b1a:	adc    al,0xd0
  411b1c:	adc    esp,DWORD PTR [edx+0x2ea21bf0]
  411b22:	mov    al,ds:0xe096c4b6
  411b27:	lock push ecx
  411b29:	dec    ecx
  411b2a:	call   0x85074fb
  411b2f:	cmp    bh,dl
  411b31:	nop
  411b32:	ss pop edi
  411b34:	ss ja  0x411ad6
  411b37:	inc    eax
  411b38:	or     esp,DWORD PTR [ecx+0x7cb4e0]
  411b3e:	mov    al,ds:0x85c5a569
  411b43:	std    
  411b44:	in     eax,dx
  411b45:	retf   
  411b46:	inc    edx
  411b47:	aad    0x18
  411b49:	xlat   BYTE PTR ds:[ebx]
  411b4a:	and    eax,DWORD PTR [ecx]
  411b4c:	sub    ecx,esp
  411b4e:	and    eax,0x2368cea6
  411b53:	stos   BYTE PTR es:[edi],al
  411b54:	ins    BYTE PTR es:[edi],dx
  411b55:	sub    ch,BYTE PTR [eax+ebp*4+0xf]
  411b59:	arpl   WORD PTR [ecx],cx
  411b5b:	cwde   
  411b5c:	stos   BYTE PTR es:[edi],al
  411b5d:	dec    esi
  411b5e:	fbld   TBYTE PTR [ebx]
  411b60:	jns    0x411af9
  411b62:	xchg   ecx,eax
  411b63:	sbb    BYTE PTR [ecx+0x5c],0xac
  411b67:	retf   0x24e3
  411b6a:	lds    ebx,FWORD PTR [edx-0x4]
  411b6d:	cmp    DWORD PTR [ebp-0x1f],esp
  411b70:	daa    
  411b71:	into   
  411b72:	mov    ss,esp
  411b74:	mov    ebx,0xc4563ace
  411b79:	xor    ecx,ecx
  411b7b:	fidiv  DWORD PTR [edx+0x6b]
  411b7e:	jb     0x411bfb
  411b80:	lds    edx,FWORD PTR [edi-0x79]
  411b83:	rcl    DWORD PTR [ecx],cl
  411b85:	mov    dh,0x20
  411b87:	pop    esi
  411b88:	and    ebx,esi
  411b8a:	out    0xb6,eax
  411b8c:	cmp    BYTE PTR [ecx],0xaa
  411b8f:	aam    0x7
  411b91:	sbb    BYTE PTR [edx],ch
  411b93:	jmp    0x618833e2
  411b98:	jbe    0x411bb5
  411b9a:	mov    esi,0x4aaf922d
  411b9f:	lods   al,BYTE PTR ds:[esi]
  411ba0:	ds out dx,al
  411ba2:	sbb    eax,0xcee6a409
  411ba7:	cmp    edi,ebx
  411ba9:	dec    ebp
  411baa:	inc    esp
  411bab:	pop    ecx
  411bac:	dec    ebp
  411bad:	mov    ds:0x7447c56f,al
  411bb2:	outs   dx,BYTE PTR ds:[esi]
  411bb3:	xor    ch,ch
  411bb5:	sbb    al,0xe8
  411bb7:	call   0xcbbd:0x7513a641
  411bbe:	or     BYTE PTR [esi],ch
  411bc0:	sub    al,0x2e
  411bc2:	mov    bl,0x8c
  411bc4:	jb     0x411b8e
  411bc6:	push   ds
  411bc7:	ins    DWORD PTR es:[edi],dx
  411bc8:	pop    ecx
  411bc9:	jl     0x411b54
  411bcb:	pop    esp
  411bcc:	sub    DWORD PTR [esi-0x6f],0xffffff91
  411bd0:	rcr    esi,1
  411bd2:	inc    ebx
  411bd3:	mov    esi,0x98dfc88f
  411bd8:	and    DWORD PTR [edi],eax
  411bda:	mov    esi,0xb8e0c693
  411bdf:	sbb    DWORD PTR [edx],ebp
  411be1:	sbb    dh,ch
  411be3:	push   cs
  411be4:	mov    bh,0xb7
  411be6:	jmp    0x47c22910
  411beb:	(bad)  
  411bec:	std    
  411bed:	xchg   esi,eax
  411bee:	jnp    0x411c10
  411bf0:	cmp    esi,DWORD PTR [ebx+edx*1+0x68]
  411bf4:	jmp    0x411be6
  411bf6:	sbb    DWORD PTR ds:0x906d223b,0xffffffd3
  411bfd:	or     eax,0x3c217834
  411c02:	jge    0x411bd8
  411c04:	dec    ebx
  411c05:	ins    DWORD PTR es:[edi],dx
  411c06:	dec    edi
  411c07:	js     0x411bd9
  411c09:	xor    DWORD PTR [esi+eax*1+0x7d],edi
  411c0d:	inc    ecx
  411c0e:	adc    DWORD PTR [ecx],ecx
  411c10:	call   0x27b631e
  411c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c16:	in     eax,dx
  411c17:	lds    ebx,FWORD PTR [ecx]
  411c19:	jmp    FWORD PTR [ebp+0x39]
  411c1c:	(bad)  
  411c1d:	push   ds
  411c1e:	js     0x411be3
  411c20:	mov    DWORD PTR [edx+0x4e],ebx
  411c23:	pmaddwd mm6,QWORD PTR [ecx+0x1c546792]
  411c2a:	in     al,dx
  411c2b:	xchg   edx,eax
  411c2c:	jbe    0x411c3b
  411c2e:	push   ds
  411c2f:	and    al,0x93
  411c31:	dec    ebx
  411c32:	pop    esi
  411c33:	fild   QWORD PTR [edi-0x26b50e45]
  411c39:	sbb    BYTE PTR [edx+edx*1],bl
  411c3c:	add    al,0x94
  411c3e:	adc    DWORD PTR [edx-0x12],esi
  411c41:	cmp    eax,0x80ca87a7
  411c46:	sub    eax,0x25a726fc
  411c4b:	jmp    0x411cb4
  411c4d:	push   ecx
  411c4e:	jecxz  0x411c4a
  411c50:	imul   ecx,DWORD PTR [edi],0x435244b
  411c56:	fdivrp st(1),st
  411c58:	dec    edx
  411c59:	cmp    eax,0x91e34e81
  411c5e:	sti    
  411c5f:	xor    cl,BYTE PTR [ebp-0x80]
  411c62:	(bad)  
  411c64:	mov    cl,0x68
  411c66:	test   BYTE PTR [esi*1-0x3fdf16dc],0xcd
  411c6e:	push   eax
  411c6f:	xchg   esp,eax
  411c70:	mov    eax,0x19e7159b
  411c75:	(bad)
  411c78:	and    al,0xa7
  411c7a:	cs jae 0x411cf4
  411c7d:	ror    DWORD PTR [esi+0x56],0xa8
  411c81:	call   0x7da86f75
  411c86:	inc    ebp
  411c87:	push   esp
  411c88:	xchg   esp,eax
  411c89:	mov    gs,WORD PTR [edi+0x6c]
  411c8c:	and    al,0xa7
  411c8e:	mov    ebx,0xa2895bd3
  411c93:	ds aam 0x56
  411c96:	jecxz  0x411c80
  411c98:	or     al,0x8
  411c9a:	mov    cl,0x6c
  411c9c:	sbb    ah,cl
  411c9e:	jp     0x411c72
  411ca0:	adc    eax,0x42967bfa
  411ca5:	xchg   ebp,eax
  411ca6:	or     esi,DWORD PTR [edx]
  411ca8:	test   eax,esp
  411caa:	jbe    0x411c46
  411cac:	sub    DWORD PTR [esi+edi*1-0xa],edx
  411cb0:	daa    
  411cb1:	jle    0x411d1f
  411cb3:	jnp    0x411ceb
  411cb5:	add    ebx,edx
  411cb7:	inc    ebx
  411cb8:	clc    
  411cb9:	pop    ebp
  411cba:	rol    DWORD PTR [edx+ebx*8-0x51],0x25
  411cbf:	in     eax,dx
  411cc0:	dec    esi
  411cc1:	shl    ch,cl
  411cc3:	pushf  
  411cc4:	sub    esp,0x6
  411cc7:	xchg   edx,eax
  411cc8:	jne    0x411ce1
  411cca:	cld    
  411ccb:	sub    eax,0x21c470ff
  411cd0:	sar    edi,1
  411cd2:	cmc    
  411cd3:	pop    edi
  411cd4:	cmc    
  411cd5:	(bad)  
  411cd6:	dec    BYTE PTR [ebp+0x5]
  411cd9:	dec    edi
  411cda:	nop
  411cdb:	cmp    eax,0xaab8ff68
  411ce0:	xor    DWORD PTR [ebp+0x77c43a27],esi
  411ce6:	jno    0x411cf6
  411ce8:	and    eax,0x4aafb23f
  411ced:	ret    
  411cee:	push   ss
  411cef:	and    DWORD PTR [edx+0x34],ecx
  411cf2:	dec    esi
  411cf3:	adc    DWORD PTR [esi-0x68cc5237],ebx
  411cf9:	(bad)  
  411cfa:	je     0x411cd7
  411cfc:	scas   al,BYTE PTR es:[edi]
  411cfd:	xlat   BYTE PTR ds:[ebx]
  411cfe:	sbb    eax,0x28b8e68
  411d03:	ds jo  0x411d02
  411d06:	xchg   edx,eax
  411d07:	fild   QWORD PTR [edx]
  411d09:	sub    edx,DWORD PTR [ebp-0x70]
  411d0c:	div    dh
  411d0e:	mov    al,ds:0xcde56ad3
  411d13:	loopne 0x411d7d
  411d15:	das    
  411d16:	out    0x98,al
  411d18:	fldcw  WORD PTR [ecx+eiz*1]
  411d1b:	bound  ecx,QWORD PTR [eax+ebx*2]
  411d1e:	lods   al,BYTE PTR ds:[esi]
  411d1f:	jns    0x411cad
  411d21:	loopne 0x411cd6
  411d23:	mov    ebx,0xe54640d
  411d28:	jbe    0x411d3c
  411d2a:	sbb    BYTE PTR [eax-0x7e],al
  411d2d:	lea    ecx,[esi-0x2fe9016d]
  411d33:	adc    eax,0xfc1b80c9
  411d38:	xchg   DWORD PTR [ebp+0x3d],ebx
  411d3b:	mov    ch,0x4c
  411d3d:	out    dx,eax
  411d3e:	cmp    al,0xfd
  411d40:	add    DWORD PTR [ebx],ebp
  411d42:	into   
  411d43:	pop    ecx
  411d44:	daa    
  411d45:	dec    ebx
  411d46:	bound  edx,QWORD PTR [edi+0x5b]
  411d49:	ucomiss xmm4,DWORD PTR [ebx]
  411d4c:	add    bh,BYTE PTR [ebp+0xa]
  411d4f:	loope  0x411d47
  411d51:	es imul esi,esi,0xfaa3716f
  411d58:	das    
  411d59:	aad    0x8e
  411d5b:	push   0xffffffd5
  411d5d:	int3   
  411d5e:	jl     0x411d6a
  411d60:	mov    esp,0xe2d2d5b3
  411d65:	out    dx,eax
  411d66:	lds    ebx,FWORD PTR [edi]
  411d68:	adc    al,0x5c
  411d6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d6b:	in     al,dx
  411d6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d6d:	test   al,0x1
  411d6f:	cmp    al,0x94
  411d71:	cmp    ebp,DWORD PTR [ebx+0x0]
  411d74:	out    0xc7,eax
  411d76:	sub    edx,DWORD PTR [ecx+0x54]
  411d79:	xchg   esi,eax
  411d7a:	xor    eax,0x80be8cad
  411d7f:	cld    
  411d80:	jmp    0x64ca:0x6c1df0a5
  411d87:	sub    bl,ch
  411d89:	arpl   WORD PTR [esi-0x49],bx
  411d8c:	add    al,0xf4
  411d8e:	cmp    DWORD PTR [esi],edi
  411d90:	mov    cs,WORD PTR [edi+0xa]
  411d93:	jae    0x411d44
  411d95:	sub    DWORD PTR [esi-0x801cc20],0xfffffffa
  411d9c:	mov    eax,esp
  411d9e:	mov    DWORD PTR [edi],ebx
  411da0:	shr    DWORD PTR [esi+0x4e8d24c8],1
  411da6:	pop    ebp
  411da7:	push   ecx
  411da8:	dec    ecx
  411da9:	push   esp
  411daa:	xor    al,0x4d
  411dac:	mov    dl,0xe8
  411dae:	test   eax,0x130e9751
  411db3:	cmp    al,0x6a
  411db5:	xchg   ebx,eax
  411db6:	mov    ebx,0x10eee22
  411dbb:	(bad)  [esi-0x28970f43]
  411dc1:	leave  
  411dc2:	dec    edi
  411dc3:	and    DWORD PTR ds:0xfd205764,edx
  411dc9:	iret   
  411dca:	sbb    al,0x88
  411dcc:	push   DWORD PTR [esi+0x36b9eb3d]
  411dd2:	push   esi
  411dd3:	pop    edx
  411dd4:	sti    
  411dd5:	jae    0x411dfe
  411dd7:	mov    edx,0xb4e0e7de
  411ddc:	push   ebp
  411ddd:	hlt    
  411dde:	xor    ch,bh
  411de0:	or     al,0x35
  411de2:	pop    esp
  411de3:	xchg   BYTE PTR [esp+ecx*2+0x4e9cb353],dh
  411dea:	call   0x1cc8238e
  411def:	dec    esp
  411df0:	mov    bl,0x9f
  411df2:	fistp  WORD PTR [ecx-0x59]
  411df5:	mov    dh,0x59
  411df7:	jmp    0x486a7223
  411dfc:	mov    WORD PTR [ebx+0x118959ec],ds
  411e02:	push   ecx
  411e03:	inc    esp
  411e04:	and    edx,esi
  411e06:	dec    ebx
  411e07:	test   al,0xc0
  411e09:	mov    dl,0x4c
  411e0b:	enter  0x37d0,0xc3
  411e0f:	sub    al,0xd1
  411e11:	push   cs
  411e12:	fcomp  DWORD PTR [edx]
  411e14:	mov    esp,0x13eae69
  411e19:	fs in  eax,dx
  411e1b:	out    dx,eax
  411e1c:	jl     0xaf194f5d
  411e22:	call   0xd8046371
  411e27:	or     DWORD PTR [ebx+edi*2-0x7a43a519],edx
  411e2e:	cli    
  411e2f:	test   edi,ecx
  411e31:	pop    esp
  411e32:	stc    
  411e33:	dec    edi
  411e34:	shr    DWORD PTR [eax+0x5f],cl
  411e37:	mov    al,0x61
  411e39:	dec    eax
  411e3a:	pop    edx
  411e3b:	(bad)  
  411e3c:	in     al,dx
  411e3d:	js     0x411e8f
  411e3f:	int3   
  411e40:	mov    eax,ds:0x5be9e6a1
  411e46:	inc    eax
  411e47:	jae    0x411e78
  411e49:	es adc eax,0x28166b15
  411e4f:	jle    0x411ddf
  411e51:	dec    edx
  411e52:	int    0x36
  411e54:	jae    0x411e30
  411e56:	ins    DWORD PTR es:[edi],dx
  411e57:	cmp    DWORD PTR [edi+0x137fff7],esp
  411e5d:	xor    BYTE PTR ds:0x732dd2af,dh
  411e63:	enter  0x2297,0x5a
  411e67:	in     al,0xae
  411e69:	psubb  mm5,mm6
  411e6c:	shr    BYTE PTR [ecx+0x764b9065],cl
  411e72:	rol    DWORD PTR [ecx*4-0x29b556b],cl
  411e79:	mov    WORD PTR [eax],cs
  411e7b:	add    DWORD PTR [ebp+0x2b3933c1],esi
  411e81:	mov    edx,0x175ce18d
  411e86:	adc    DWORD PTR [ecx+0x29],0x30
  411e8a:	ja     0x411e64
  411e8c:	lods   eax,DWORD PTR ds:[esi]
  411e8d:	sbb    al,0x79
  411e8f:	pushf  
  411e90:	loope  0x411ef6
  411e92:	(bad)  
  411e93:	push   cs
  411e94:	jge    0x411ef9
  411e96:	mov    dh,0x1c
  411e98:	call   0xbb12:0x638f8244
  411e9f:	inc    ebp
  411ea0:	inc    ebx
  411ea1:	fmul   st(5),st
  411ea3:	test   DWORD PTR [edx+0x3496428f],eax
  411ea9:	pop    esp
  411eaa:	mov    al,BYTE PTR [edx+0x7e324e27]
  411eb0:	clc    
  411eb1:	data16 jmp 0x411ece
  411eb4:	push   cs
  411eb5:	cmp    DWORD PTR [eax+edx*1],0xb066266e
  411ebc:	ja     0x411ec2
  411ebe:	ret    
  411ebf:	outs   dx,DWORD PTR ds:[esi]
  411ec0:	lahf   
  411ec1:	mov    ebx,0x9d442ef5
  411ec6:	pop    ds
  411ec7:	sahf   
  411ec8:	scas   al,BYTE PTR es:[edi]
  411ec9:	into   
  411eca:	enter  0x1a7d,0xd2
  411ece:	adc    ebp,DWORD PTR [eax]
  411ed0:	fisubr DWORD PTR [ecx]
  411ed2:	shl    BYTE PTR [ecx],1
  411ed4:	fld    DWORD PTR [ebx]
  411ed6:	adc    al,0x47
  411ed8:	icebp  
  411ed9:	out    0x35,al
  411edb:	arpl   ax,sp
  411edd:	push   es
  411ede:	mov    BYTE PTR [ebx+0x18],cl
  411ee1:	jmp    0x568d2fd5
  411ee6:	adc    ch,ah
  411ee8:	mov    esp,DWORD PTR [eax+0x2d]
  411eeb:	xchg   ebp,eax
  411eec:	daa    
  411eed:	imul   ecx,DWORD PTR [edi+0x70],0x7d520d71
  411ef4:	pusha  
  411ef5:	cmp    BYTE PTR [ebx],ah
  411ef7:	ss int3 
  411ef9:	imul   ebx,DWORD PTR [edx],0x1e
  411efc:	sbb    BYTE PTR [eax+ebp*8],bl
  411eff:	arpl   dx,si
  411f01:	mov    edi,0x552d1fec
  411f06:	jae    0x411f71
  411f08:	sub    esp,DWORD PTR [edx-0x2d]
  411f0b:	dec    eax
  411f0c:	js     0x411f59
  411f0e:	loope  0x411ea5
  411f10:	mov    bh,BYTE PTR [ebx-0x68cfad76]
  411f16:	shl    BYTE PTR ds:0xce83febb,1
  411f1c:	addr16 dec eax
  411f1e:	jnp    0x411eed
  411f20:	loope  0x411f5c
  411f22:	repnz bound di,DWORD PTR [esp+eiz*4-0x31]
  411f28:	jae    0x411f3e
  411f2a:	int3   
  411f2b:	call   0x8f2b1cf3
  411f30:	retf   0x9a33
  411f33:	push   eax
  411f34:	inc    eax
  411f35:	dec    eax
  411f36:	push   ebx
  411f37:	or     ch,0x4d
  411f3a:	or     eax,0x3ca9cc88
  411f3f:	cwde   
  411f40:	jp     0x411f86
  411f42:	shl    DWORD PTR [ebp-0x6e],0x71
  411f46:	jg     0x411fa0
  411f48:	dec    ebp
  411f49:	mov    esi,0x5a838a0a
  411f4e:	out    0xe8,al
  411f50:	lds    esi,FWORD PTR [esi+0x69562e40]
  411f56:	(bad)  
  411f57:	pop    edi
  411f58:	mov    esi,DWORD PTR [ebx-0x7b]
  411f5b:	push   esi
  411f5c:	pop    ebp
  411f5d:	lea    ebx,[esi]
  411f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f60:	inc    esp
  411f61:	out    dx,al
  411f62:	push   ebx
  411f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f64:	or     BYTE PTR [ecx-0x3d],0x5f
  411f68:	ret    
  411f69:	hlt    
  411f6a:	sub    eax,0x9593d39b
  411f6f:	ds push 0x471e6d9
  411f75:	mov    al,ds:0x78a92c7a
  411f7a:	test   eax,0xf00dc0c9
  411f7f:	sbb    BYTE PTR gs:[esi+0x3562770a],cl
  411f86:	pop    ss
  411f87:	mov    ch,0xcf
  411f89:	stos   DWORD PTR es:[edi],eax
  411f8a:	adc    al,BYTE PTR [esi]
  411f8c:	inc    ebx
  411f8d:	sti    
  411f8e:	xlat   BYTE PTR ds:[ebx]
  411f8f:	adc    dh,BYTE PTR [ebp+0x59c987f8]
  411f95:	mov    ebx,0x5a2af29d
  411f9a:	cmc    
  411f9b:	aad    0xe8
  411f9d:	or     al,0xb3
  411f9f:	dec    esi
  411fa0:	loopne 0x411ff1
  411fa2:	es mov dl,0xf8
  411fa5:	inc    edx
  411fa6:	jp     0x411f91
  411fa8:	mov    bl,0x54
  411faa:	push   ebx
  411fab:	push   ss
  411fac:	cwde   
  411fad:	or     edi,DWORD PTR [ecx]
  411faf:	jle    0x411f51
  411fb1:	and    al,0x77
  411fb3:	ds jl  0x411fc7
  411fb6:	out    0x83,al
  411fb8:	and    al,0x40
  411fba:	add    al,0x0
  411fbc:	lahf   
  411fbd:	test   DWORD PTR [esi+0x22],edi
  411fc0:	push   ebp
  411fc1:	push   ebp
  411fc2:	jb     0x411fa6
  411fc4:	mov    ah,0xb8
  411fc6:	das    
  411fc7:	cmp    eax,0x7e3e8706
  411fcc:	jmp    0xa448cd99
  411fd1:	mov    ah,0x72
  411fd3:	rcr    BYTE PTR [eax+0x6d],cl
  411fd6:	stos   BYTE PTR es:[edi],al
  411fd7:	shl    DWORD PTR [esi],1
  411fd9:	jo     0x411fcc
  411fdb:	push   0xffffffe7
  411fdd:	mov    edi,0x62400606
  411fe2:	gs out 0x2b,al
  411fe5:	mov    dh,0x54
  411fe7:	mov    bh,0x5
  411fe9:	jl     0x411ff8
  411feb:	bndldx bnd2,[eax+0x63]
  411fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ff0:	sbb    al,0x1
  411ff2:	cmp    DWORD PTR [ebx-0x76],esi
  411ff5:	mov    al,0x92
  411ff7:	pop    esi
  411ff8:	sbb    eax,DWORD PTR [esi-0x6b343a4c]
  411ffe:	fsubr  QWORD PTR [ebp+0x59]
  412001:	cwde   
  412002:	inc    ebx
  412003:	iret   
  412004:	sub    al,0x99
  412006:	das    
  412007:	cmp    DWORD PTR [ecx-0x49],eax
  41200a:	push   edi
  41200b:	pop    ds
  41200c:	mov    cl,0xaf
  41200e:	mov    dh,0xec
  412010:	push   eax
  412011:	scas   al,BYTE PTR es:[edi]
  412012:	mov    bl,0xa4
  412014:	jmp    0x67d5:0x221299
  41201b:	not    DWORD PTR ds:0xabd57aeb
  412021:	or     al,0x9d
  412023:	xchg   edi,eax
  412024:	lahf   
  412025:	cli    
  412026:	adc    eax,0x59906e26
  41202b:	lahf   
  41202c:	mov    esp,0x2ae6e3ea
  412031:	dec    esi
  412032:	hlt    
  412033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412034:	shl    DWORD PTR [eax],0xa4
  412037:	inc    esp
  412038:	cmp    eax,0xed5ba67a
  41203d:	sub    DWORD PTR [ebx-0x70a23cde],0x9ed193f0
  412047:	mov    ebx,0x71cd20c7
  41204c:	dec    esp
  41204d:	and    BYTE PTR [edx+0x22],ah
  412050:	xchg   edx,eax
  412051:	leave  
  412052:	and    BYTE PTR [eax+0x1d],ah
  412055:	mov    bl,0xef
  412057:	cmp    al,0x12
  412059:	xchg   esi,eax
  41205a:	jno    0x412085
  41205c:	xlat   BYTE PTR ds:[ebx]
  41205d:	clc    
  41205e:	pop    esi
  41205f:	xor    eax,0x17bcc0be
  412064:	imul   esi,eax,0x943dc257
  41206a:	outs   dx,DWORD PTR ds:[esi]
  41206b:	xor    al,0xb5
  41206d:	jp     0x412042
  41206f:	push   eax
  412070:	cmp    cl,BYTE PTR [edi+0x57ad0133]
  412076:	xchg   edi,eax
  412077:	lods   al,BYTE PTR ds:[esi]
  412078:	inc    ecx
  412079:	xchg   esi,eax
  41207a:	ds int3 
  41207c:	pushf  
  41207d:	sar    ah,cl
  41207f:	(bad)  
  412080:	fwait
  412081:	ja     0x412045
  412083:	and    ebp,DWORD PTR [edx+eiz*1+0xb5b2527]
  41208a:	out    0xd6,al
  41208c:	das    
  41208d:	and    al,dl
  41208f:	out    0x5e,eax
  412091:	mov    ebx,0x9f189f64
  412096:	xchg   esp,eax
  412097:	inc    ecx
  412098:	les    edi,FWORD PTR [eax]
  41209a:	mov    ch,0x6a
  41209c:	mov    bl,0x5d
  41209e:	scas   eax,DWORD PTR es:[edi]
  41209f:	inc    esi
  4120a0:	loope  0x412062
  4120a2:	outs   dx,DWORD PTR ds:[esi]
  4120a3:	mov    esp,0x89af15bd
  4120a8:	push   0x3d
  4120aa:	test   eax,0xfd12ad5a
  4120af:	shl    BYTE PTR [edx-0xffddff6],cl
  4120b5:	cmp    BYTE PTR [edi],bh
  4120b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120b8:	mov    edx,0xdadc79e7
  4120bd:	cld    
  4120be:	repnz mov ah,BYTE PTR [ebx]
  4120c1:	pop    ds
  4120c2:	xor    al,0x1e
  4120c4:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4120c6:	aas    
  4120c7:	loope  0x4120e1
  4120c9:	adc    ebx,DWORD PTR [edx]
  4120cb:	inc    ebp
  4120cc:	test   BYTE PTR [ebp-0x2f],dl
  4120cf:	mov    esp,0xdb161f2e
  4120d4:	lock lods al,BYTE PTR ds:[esi]
  4120d6:	adc    esi,DWORD PTR [ebx]
  4120d8:	aaa    
  4120d9:	and    DWORD PTR [edi],0xf2dfb78c
  4120df:	sbb    al,0x7b
  4120e1:	fld    TBYTE PTR [edx]
  4120e3:	adc    eax,0xb597750b
  4120e8:	xchg   ebp,eax
  4120e9:	out    dx,al
  4120ea:	sbb    al,BYTE PTR [eax-0x5a]
  4120ed:	xchg   esp,eax
  4120ee:	pop    ebx
  4120ef:	out    0x9e,ax
  4120f2:	jmp    0x4120c8
  4120f4:	mov    dh,0x91
  4120f6:	cmc    
  4120f7:	jmp    0x41208c
  4120f9:	fcomp  DWORD PTR [ecx+esi*2-0x2534a539]
  412100:	push   es
  412101:	inc    edx
  412102:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412103:	cmp    DWORD PTR [eax+0x7cfa83c1],edx
  412109:	jno    0x41209a
  41210b:	(bad)  ss:[ebp-0x14830a]
  412112:	mov    al,0xee
  412114:	stos   BYTE PTR es:[edi],al
  412115:	xor    cl,ch
  412117:	fnsave [ebx]
  412119:	aam    0xd9
  41211b:	sub    al,0x5f
  41211d:	imul   edi,edx,0x51
  412120:	inc    ebp
  412121:	in     al,0x98
  412123:	jae    0x41215d
  412125:	arpl   ax,bx
  412127:	xor    ah,bh
  412129:	mov    edx,ebp
  41212b:	cs jge 0x4120cf
  41212e:	enter  0x6b6c,0x81
  412132:	in     al,0xe
  412134:	lahf   
  412135:	and    ch,BYTE PTR [ecx-0x4a]
  412138:	xlat   BYTE PTR ds:[ebx]
  412139:	and    dh,BYTE PTR [edi-0x15]
  41213c:	xor    DWORD PTR [edi+esi*4-0x68cb5a6e],edx
  412143:	cmc    
  412144:	fcomp  DWORD PTR [esi-0x374de5d7]
  41214a:	mov    edx,0x1bcfa13d
  41214f:	push   edx
  412150:	and    DWORD PTR ds:0x5814e154,ebp
  412156:	adc    cl,BYTE PTR [ebp+0x12]
  412159:	int    0x65
  41215b:	inc    eax
  41215c:	fdiv   DWORD PTR [ebx+0x770801d2]
  412162:	pop    ss
  412163:	test   al,0xeb
  412165:	add    edx,DWORD PTR [edx+0x75adf799]
  41216b:	pop    ss
  41216c:	daa    
  41216d:	lock ja 0x412186
  412170:	mov    edi,0x3585ae48
  412175:	jg     0x412179
  412177:	gs push eax
  412179:	or     al,0x4a
  41217b:	stc    
  41217c:	sub    DWORD PTR [esi+0x42ea71da],ebx
  412182:	(bad)  
  412183:	push   0x2d
  412185:	addr16 mov eax,0xc7a9336f
  41218b:	add    DWORD PTR [eax+0x3c],0xffffffcc
  41218f:	std    
  412190:	mov    cl,0xbc
  412192:	cmp    ebp,DWORD PTR [esi+0x69]
  412195:	or     eax,0x1dbfb183
  41219a:	mov    cs,ecx
  41219c:	push   ds
  41219d:	lock inc esi
  41219f:	or     BYTE PTR [ebp-0x22],0xf7
  4121a3:	stos   DWORD PTR es:[edi],eax
  4121a4:	or     BYTE PTR [eax+0x359f5ea2],0x4f
  4121ab:	mov    BYTE PTR [edi],ah
  4121ad:	(bad)  
  4121ae:	or     esi,DWORD PTR [edi+esi*8]
  4121b1:	inc    esp
  4121b2:	inc    eax
  4121b3:	test   al,0xc9
  4121b5:	mov    al,ds:0xff3217cb
  4121ba:	pusha  
  4121bb:	into   
  4121bc:	push   ds
  4121bd:	add    DWORD PTR [esi],esp
  4121bf:	dec    ebp
  4121c0:	pop    es
  4121c1:	push   ds
  4121c2:	mov    bl,0x1c
  4121c4:	sahf   
  4121c5:	push   ds
  4121c6:	or     eax,0xc36701bf
  4121cb:	xor    eax,0x5fb7cc0b
  4121d0:	or     ebp,DWORD PTR [ebp+0x759d7a8c]
  4121d6:	xchg   esp,eax
  4121d7:	stc    
  4121d8:	add    eax,0x2e39e6e7
  4121dd:	or     al,BYTE PTR [edi+0x2b]
  4121e0:	cli    
  4121e1:	pop    eax
  4121e2:	aaa    
  4121e3:	or     al,dl
  4121e5:	rcl    DWORD PTR [edi],0x7e
  4121e8:	test   BYTE PTR [esi-0x25],dl
  4121eb:	push   es
  4121ec:	lock jecxz 0x4121b7
  4121ef:	sbb    eax,0xdaae5dc9
  4121f4:	cmp    BYTE PTR [edi+0x27],bh
  4121f7:	sub    eax,0xac0acf3e
  4121fc:	ret    0xa688
  4121ff:	js     0x412243
  412201:	sub    esp,DWORD PTR [ecx]
  412203:	(bad)  
  412204:	int3   
  412205:	and    edi,esi
  412207:	xchg   DWORD PTR [edi+0xbadaae7],edx
  41220d:	aas    
  41220e:	add    DWORD PTR [edi],ecx
  412210:	lahf   
  412211:	rep outs dx,DWORD PTR ds:[esi]
  412213:	repz mov ch,0xbd
  412216:	in     al,0x0
  412218:	push   eax
  412219:	hlt    
  41221a:	adc    eax,0xb94cdb10
  41221f:	or     BYTE PTR [eax+0x7c],0xc3
  412223:	mov    ds:0xcd5cffb0,al
  412228:	mov    al,0xe6
  41222a:	cmp    eax,0x8607b6a3
  41222f:	aas    
  412230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412231:	adc    eax,0x568138d6
  412236:	push   edx
  412237:	outs   dx,DWORD PTR ds:[esi]
  412238:	add    bh,BYTE PTR [edi]
  41223a:	and    al,0x0
  41223c:	(bad)  
  41223d:	adc    eax,0x9a856167
  412242:	pop    ebx
  412243:	stc    
  412244:	xchg   DWORD PTR [edi],ebx
  412246:	adc    al,0x14
  412248:	daa    
  412249:	pop    esi
  41224a:	mov    WORD PTR [edi-0x5420da9],gs
  412250:	dec    edi
  412251:	xchg   edx,eax
  412252:	sbb    eax,0x4898494f
  412257:	mov    esp,0xf9c54e76
  41225c:	and    DWORD PTR [edi+edx*1+0x732553a1],edx
  412263:	js     0x412230
  412265:	sub    ebp,DWORD PTR [esi+0x58b7e888]
  41226b:	leave  
  41226c:	pop    edi
  41226d:	(bad)  
  41226e:	retf   
  41226f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412270:	sub    cl,BYTE PTR [ebx-0x131213bb]
  412276:	das    
  412277:	or     DWORD PTR [edx],esi
  412279:	mov    ecx,0xa815e789
  41227e:	mov    eax,DWORD PTR [ebp-0x54]
  412281:	mov    di,0x6e0a
  412285:	or     al,0xd3
  412287:	mov    bl,0x32
  412289:	call   0x735d:0x85e497b4
  412290:	shl    DWORD PTR [edi],1
  412292:	iret   
  412293:	in     al,dx
  412294:	pop    ss
  412295:	sti    
  412296:	dec    ebp
  412297:	imul   edx,DWORD PTR [ecx+0x9],0xffffffca
  41229b:	and    eax,0x507f632
  4122a0:	mov    WORD PTR [esi+0x47e46364],es
  4122a6:	imul   ecx,ebp,0x5b
  4122a9:	test   DWORD PTR [esi],esp
  4122ab:	push   esi
  4122ac:	jl     0x4122c7
  4122ae:	cmp    DWORD PTR [ebx],esp
  4122b0:	or     BYTE PTR [esp+ebp*1-0x2e],dl
  4122b4:	cmp    esp,DWORD PTR [eax+ebp*4]
  4122b7:	push   ds
  4122b8:	outs   dx,BYTE PTR ds:[esi]
  4122b9:	mov    edi,0xfa39e698
  4122be:	shl    BYTE PTR [ebx-0x62b4fae0],cl
  4122c4:	push   ds
  4122c5:	cwde   
  4122c6:	jae    0x412264
  4122c8:	into   
  4122c9:	sbb    al,0x6d
  4122cb:	sbb    eax,0x30154609
  4122d0:	bound  ecx,QWORD PTR [edi]
  4122d2:	jnp    0x412254
  4122d4:	test   cl,cl
  4122d6:	jecxz  0x41226d
  4122d8:	icebp  
  4122d9:	pop    es
  4122da:	sahf   
  4122db:	jno    0x4122dc
  4122dd:	bound  edi,QWORD PTR [ebx+0x4528b33d]
  4122e3:	fcmove st,st(5)
  4122e5:	iret   
  4122e6:	mov    dl,0x7c
  4122e8:	push   eax
  4122e9:	pop    esi
  4122ea:	adc    eax,0x63d3c3dc
  4122ef:	jae    0x41228e
  4122f1:	gs xchg esi,eax
  4122f3:	fist   DWORD PTR [esi]
  4122f5:	cmp    eax,0xe87b7cd
  4122fa:	popa   
  4122fb:	loopne 0x4122e6
  4122fd:	jmp    DWORD PTR [eax-0x1a]
  412300:	repnz cld 
  412302:	push   ds
  412303:	pop    ecx
  412304:	scas   eax,DWORD PTR es:[edi]
  412305:	add    BYTE PTR [edi+0x10],0x4e
  412309:	sub    eax,0xadbf8d26
  41230e:	ret    0x470b
  412311:	mov    ds:0xc146c2f7,al
  412316:	jbe    0x4122ef
  412318:	inc    ecx
  412319:	ret    
  41231a:	repnz adc esi,DWORD PTR [edi]
  41231d:	pop    esi
  41231e:	cli    
  41231f:	fwait
  412320:	jmp    0xb6caccbe
  412325:	sub    DWORD PTR [eax-0x12],ecx
  412328:	adc    edi,DWORD PTR es:[edx+esi*4-0x4a4110cd]
  412330:	into   
  412331:	mov    ch,0x2e
  412333:	xor    DWORD PTR [esi+0x3c],eax
  412336:	pop    esp
  412337:	mov    cl,0xaa
  412339:	jmp    0xc484:0x567058f8
  412340:	(bad)
  412343:	ins    DWORD PTR es:[edi],dx
  412344:	xlat   BYTE PTR ds:[ebx]
  412345:	inc    edi
  412346:	retf   
  412347:	pop    es
  412348:	std    
  412349:	cmp    DWORD PTR [ebx-0x10],0xffffff83
  41234d:	add    bl,bh
  41234f:	outs   dx,BYTE PTR ds:[esi]
  412350:	xchg   DWORD PTR [edi],eax
  412352:	(bad)  
  412353:	pop    ecx
  412354:	add    BYTE PTR [edi],ch
  412356:	xchg   edi,eax
  412357:	cdq    
  412358:	push   ebp
  412359:	fs pushw es
  41235c:	xor    eax,0x1c8617e
  412361:	or     eax,0x9f71ca3d
  412366:	sahf   
  412367:	inc    ecx
  412368:	stos   DWORD PTR es:[edi],eax
  412369:	jecxz  0x4123bd
  41236b:	int3   
  41236c:	and    edx,DWORD PTR [ecx+0x1b360ee0]
  412372:	jae    0x4123e3
  412374:	aaa    
  412375:	int    0xec
  412377:	mov    ch,0x7c
  412379:	pop    eax
  41237a:	popf   
  41237b:	xor    al,0x59
  41237d:	std    
  41237e:	mov    ebp,0xba710743
  412383:	pusha  
  412384:	dec    ebp
  412385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412386:	or     DWORD PTR [esi+0x68],ecx
  412389:	(bad)
  41238d:	cmp    dl,BYTE PTR ds:[ebp-0x6d]
  412391:	cmp    BYTE PTR [eax],cl
  412393:	es (bad) 
  412395:	cwde   
  412396:	pop    edi
  412397:	pushf  
  412398:	iret   
  412399:	aad    0xe6
  41239b:	inc    eax
  41239c:	inc    edi
  41239d:	(bad)  
  41239e:	jecxz  0x412370
  4123a0:	inc    eax
  4123a1:	xchg   edx,eax
  4123a2:	jmp    0xafc5:0xd3792f4d
  4123a9:	xchg   esp,eax
  4123aa:	scas   al,BYTE PTR es:[edi]
  4123ab:	mov    cl,0xa
  4123ad:	in     al,dx
  4123ae:	dec    edx
  4123af:	sar    BYTE PTR [ecx-0x3877d825],0x31
  4123b6:	out    0x2d,eax
  4123b8:	call   0x93d39508
  4123bd:	dec    esp
  4123be:	xchg   ebx,eax
  4123bf:	outs   dx,DWORD PTR ds:[esi]
  4123c0:	sub    bh,BYTE PTR [bp+si-0x7c]
  4123c4:	push   ds
  4123c5:	imul   ebp,DWORD PTR [ebx+0x5a]
  4123c9:	inc    eax
  4123ca:	cs push ebx
  4123cc:	adc    ebx,edi
  4123ce:	cwde   
  4123cf:	addr16 inc ecx
  4123d1:	pusha  
  4123d2:	gs xchg edi,eax
  4123d4:	bound  esp,QWORD PTR [eax]
  4123d6:	es aad 0x3b
  4123d9:	mov    DWORD PTR [ebx+0x44],eax
  4123dc:	stos   DWORD PTR es:[edi],eax
  4123dd:	mov    cl,0x9e
  4123df:	fidiv  WORD PTR [eax+0x288076b4]
  4123e5:	push   esp
  4123e6:	jns    0x4123de
  4123e8:	sar    BYTE PTR [ebp+0x6d],1
  4123eb:	mov    ds:0xea4551b7,al
  4123f0:	sub    BYTE PTR [ebx-0x5287aa03],ah
  4123f6:	fstp   QWORD PTR [edi-0x6a88b195]
  4123fc:	and    bl,bh
  4123fe:	adc    BYTE PTR [esi+0x77160d7c],dh
  412404:	sbb    eax,0x41fd07a7
  412409:	nop
  41240a:	aas    
  41240b:	bndstx [ebp+0x30],bnd2
  41240f:	out    0xe8,eax
  412411:	jb     0x4123c0
  412413:	(bad)  
  412416:	ins    DWORD PTR es:[edi],dx
  412417:	jbe    0x4123f1
  412419:	pop    edi
  41241a:	rcr    DWORD PTR [edx+0x3156a0f3],cl
  412420:	dec    ecx
  412421:	cmp    al,0xe5
  412423:	push   eax
  412424:	test   eax,0x5cabb1bc
  412429:	stos   DWORD PTR es:[edi],eax
  41242a:	inc    eax
  41242b:	cs jno 0x4123f5
  41242e:	retf   0x1058
  412431:	outs   dx,BYTE PTR ds:[esi]
  412432:	out    dx,al
  412433:	jl     0x4123bc
  412435:	push   ss
  412436:	rcr    BYTE PTR [esi-0x6ebbbc9d],1
  41243c:	test   eax,0x411ba65d
  412441:	ins    BYTE PTR es:[edi],dx
  412442:	call   0xc3163f5f
  412447:	adc    ebp,0x520ab974
  41244d:	(bad)  
  41244f:	pop    esi
  412450:	repnz sbb eax,0xf0643040
  412456:	out    dx,eax
  412457:	or     al,0x24
  412459:	push   0xb
  41245b:	jmp    0x412487
  41245d:	mov    ds:0x1995c33,eax
  412462:	sbb    edi,DWORD PTR [edx]
  412464:	inc    ebx
  412465:	fs xor eax,0x45d2703f
  41246b:	ficomp DWORD PTR [ebx+0x47]
  41246e:	arpl   WORD PTR [edx+0x63],bx
  412471:	jmp    0x41246c
  412473:	(bad)  
  412474:	mov    esi,0x6d94781a
  412479:	xor    eax,0x89b788d8
  41247e:	jecxz  0x41245c
  412480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412481:	outs   dx,DWORD PTR ds:[esi]
  412482:	out    0x64,eax
  412484:	xlat   BYTE PTR ds:[ebx]
  412485:	add    esp,DWORD PTR [ebp-0x1db301ff]
  41248b:	jge    0x4124e3
  41248d:	js     0x412451
  41248f:	or     BYTE PTR [ecx],dh
  412491:	jmp    0x4124a4
  412493:	mov    esp,0x4e6c8ec3
  412498:	sahf   
  412499:	icebp  
  41249a:	and    eax,0x7510b4ae
  41249f:	sub    ebp,DWORD PTR [ebp+0x1c]
  4124a2:	outs   dx,BYTE PTR ds:[esi]
  4124a3:	scas   al,BYTE PTR es:[edi]
  4124a4:	mov    DWORD PTR [eax],edi
  4124a6:	xor    BYTE PTR [eax+0x2ca9e83e],0xb5
  4124ad:	mov    cl,0x97
  4124af:	pop    esp
  4124b0:	mov    ah,0xcc
  4124b2:	xchg   edx,eax
  4124b3:	div    BYTE PTR [ebx+esi*2]
  4124b6:	push   edi
  4124b7:	xchg   esp,eax
  4124b8:	rcl    DWORD PTR [edx-0x5f559926],cl
  4124be:	gs jmp 0xa04c:0x548c8e36
  4124c6:	inc    edi
  4124c7:	test   BYTE PTR [edx+0x402ef862],cl
  4124cd:	cmp    edi,DWORD PTR [edx-0x2b]
  4124d0:	outs   dx,DWORD PTR ds:[esi]
  4124d1:	mov    ch,0xe3
  4124d3:	lock add eax,0x827710e4
  4124d9:	stos   DWORD PTR es:[edi],eax
  4124da:	pop    ecx
  4124db:	add    al,0x54
  4124dd:	sahf   
  4124de:	pop    edx
  4124df:	push   esi
  4124e0:	dec    edx
  4124e1:	cmp    esp,DWORD PTR [edx+0x18]
  4124e4:	add    BYTE PTR [edx-0x3e0636],al
  4124ea:	leave  
  4124eb:	jo     0x41255d
  4124ed:	pop    ebx
  4124ee:	out    dx,eax
  4124ef:	mov    esi,edx
  4124f1:	shr    DWORD PTR [edi-0x1d],1
  4124f4:	xchg   BYTE PTR [ebx-0x5b],ch
  4124f7:	gs push es
  4124f9:	repz jnp 0x4124d5
  4124fc:	fisubr DWORD PTR [ebp-0x7]
  4124ff:	sahf   
  412500:	inc    ecx
  412501:	sbb    al,0x70
  412503:	test   BYTE PTR es:[esi],ch
  412506:	outs   dx,DWORD PTR ds:[esi]
  412507:	dec    ecx
  412508:	and    DWORD PTR [ebx],esi
  41250a:	jle    0x41257b
  41250c:	not    DWORD PTR [eax-0x59ab2708]
  412512:	jge    0x41255b
  412514:	mov    ebp,0x27a29028
  412519:	push   es
  41251a:	or     al,0x50
  41251c:	mov    esi,0x7025a2d2
  412521:	push   eax
  412522:	mov    fs:0xce71e8ea,eax
  412528:	add    BYTE PTR [edi+0x5ef774e5],al
  41252e:	dec    esp
  41252f:	xor    al,0x17
  412531:	into   
  412532:	sbb    ebp,eax
  412534:	mov    al,0x4c
  412536:	stos   DWORD PTR es:[edi],eax
  412537:	lods   eax,DWORD PTR ds:[esi]
  412538:	enter  0x40f0,0x12
  41253c:	mov    bl,0x79
  41253e:	jl     0x41250a
  412540:	pop    ds
  412541:	pop    ecx
  412542:	sbb    esp,DWORD PTR [ebp-0x36]
  412545:	inc    ebp
  412546:	mov    fs,esi
  412548:	or     eax,0x437ce6fc
  41254d:	mov    eax,0x8a4f7359
  412552:	adc    eax,0x8223371b
  412557:	std    
  412558:	lds    esi,FWORD PTR [esi]
  41255a:	sahf   
  41255b:	or     BYTE PTR [edi],al
  41255d:	mov    ebp,0x416f6f66
  412562:	add    BYTE PTR [edx-0x1a790506],dl
  412568:	sbb    eax,0x450e1b39
  41256d:	xlat   BYTE PTR ds:[ebx]
  41256e:	inc    esi
  41256f:	jo     0x4125ec
  412571:	pop    edx
  412572:	jge    0x412527
  412574:	add    al,0xbb
  412576:	push   esp
  412577:	and    esi,esi
  412579:	jle    0x41250a
  41257b:	mov    ah,0x29
  41257d:	sti    
  41257e:	mov    esp,0x68043fe0
  412583:	cmc    
  412584:	xchg   ecx,eax
  412585:	mov    bl,0x8
  412587:	pop    ecx
  412588:	(bad)  
  412589:	mul    DWORD PTR [esi-0x43]
  41258c:	add    eax,0xb43417d6
  412591:	mov    esi,ecx
  412593:	push   edx
  412594:	imul   ecx,DWORD PTR [edi],0x23
  412597:	jns    0x41256e
  412599:	lods   eax,DWORD PTR ds:[esi]
  41259a:	jo     0x412589
  41259c:	stos   DWORD PTR es:[edi],eax
  41259d:	test   edx,edi
  41259f:	push   cs
  4125a0:	test   al,0x6b
  4125a2:	out    dx,eax
  4125a3:	mov    al,0x87
  4125a5:	dec    esi
  4125a6:	icebp  
  4125a7:	into   
  4125a8:	je     0x4125a0
  4125aa:	mov    dl,BYTE PTR [ebp+0x7e493e02]
  4125b0:	ja     0x4125c2
  4125b2:	or     DWORD PTR [eax],edi
  4125b4:	cld    
  4125b5:	xchg   edi,eax
  4125b6:	pusha  
  4125b7:	add    BYTE PTR [edx+0x6a],0x37
  4125bb:	loopne 0x412566
  4125bd:	ins    BYTE PTR es:[edi],dx
  4125be:	into   
  4125bf:	cmp    BYTE PTR [ecx-0x1f],dh
  4125c2:	jg     0x4125b5
  4125c4:	jecxz  0x412595
  4125c6:	adc    BYTE PTR [esi-0x76],cl
  4125c9:	xlat   BYTE PTR ds:[ebx]
  4125ca:	sub    al,0xcf
  4125cd:	xchg   BYTE PTR [edi-0x352eb0ab],bl
  4125d3:	xor    eax,0x9a2908a6
  4125d8:	push   eax
  4125d9:	lods   eax,DWORD PTR ds:[esi]
  4125da:	jno    0x41258b
  4125dc:	out    0xe4,al
  4125de:	add    eax,0x22ea22a1
  4125e3:	or     eax,0xe003818b
  4125e8:	cmp    ecx,DWORD PTR [ebx]
  4125ea:	push   edx
  4125eb:	push   ecx
  4125ec:	outs   dx,BYTE PTR ds:[esi]
  4125ed:	adc    bl,BYTE PTR [edx+0x2f3e8ead]
  4125f3:	push   ecx
  4125f4:	mov    ebx,0xf96c1e64
  4125f9:	push   ds
  4125fa:	data16 jns 0x412665
  4125fd:	sbb    al,ch
  4125ff:	fnstsw WORD PTR [ecx]
  412601:	mov    ch,0x7e
  412603:	jl     0x41262f
  412605:	(bad)  
  412606:	scas   eax,DWORD PTR es:[edi]
  412607:	cmp    bh,BYTE PTR [ecx+0x454b570e]
  41260d:	mov    fs,WORD PTR [ebx-0x5d1bd780]
  412613:	cmp    al,0xbc
  412615:	fcomi  st,st(6)
  412617:	mov    eax,ds:0x50220456
  41261c:	mov    ds:0x14fbb4e9,eax
  412621:	jg     0x412670
  412623:	je     0x412641
  412625:	xchg   esp,eax
  412626:	test   edi,edi
  412628:	cmp    al,0xca
  41262a:	jnp    0x412623
  41262c:	ins    DWORD PTR es:[edi],dx
  41262d:	ss fs mov al,0x36
  412631:	pop    es
  412632:	inc    ebx
  412633:	dec    esi
  412634:	pop    ebx
  412635:	pop    ebx
  412636:	ja     0x41268c
  412638:	mov    dl,BYTE PTR [esi-0x28]
  41263b:	mov    edi,0xb283aede
  412640:	jae    0x412643
  412642:	sub    DWORD PTR [ebx-0x1518cac9],0xffffffbd
  412649:	out    dx,al
  41264a:	jmp    0x867c050f
  41264f:	cmp    BYTE PTR [edx+0x2f844cd0],bl
  412655:	dec    esi
  412656:	dec    eax
  412657:	test   al,0xc5
  412659:	mov    bh,0x82
  41265b:	xchg   edx,eax
  41265c:	cmp    ebp,edx
  41265e:	pop    ebx
  41265f:	paddb  mm0,QWORD PTR [ebx+ebp*2+0x31]
  412664:	test   al,0xf9
  412666:	mov    cl,0xd8
  412668:	js     0x4126e4
  41266a:	fadd   QWORD PTR [eax+0x42]
  41266d:	in     al,dx
  41266e:	xor    eax,0x91d43017
  412673:	dec    ecx
  412674:	ja     0x412630
  412676:	rcl    DWORD PTR [eax],1
  412678:	repnz cdq 
  41267a:	ins    BYTE PTR es:[edi],dx
  41267b:	sahf   
  41267c:	mov    al,ds:0x10fc85bb
  412681:	(bad)  
  412682:	xchg   esi,eax
  412683:	adc    al,0xe5
  412685:	push   0x6a97e9b9
  41268a:	fbld   TBYTE PTR [esi]
  41268c:	scas   al,BYTE PTR es:[edi]
  41268d:	pop    esp
  41268e:	mov    gs,ecx
  412690:	test   eax,0x22c58c5d
  412695:	fwait
  412696:	lock mov al,ds:0x2c10c48f
  41269c:	loopne 0x41262b
  41269e:	rol    DWORD PTR [ebx-0xda14fcd],0x13
  4126a5:	add    al,0xff
  4126a7:	push   cs
  4126a8:	and    eax,0x240d53fa
  4126ad:	arpl   cx,ax
  4126af:	repz sti 
  4126b1:	pop    ds
  4126b2:	adc    edi,DWORD PTR [ebx+0x2b]
  4126b5:	xchg   esp,eax
  4126b6:	retf   0x315e
  4126b9:	sbb    eax,0x7f15144c
  4126be:	pusha  
  4126bf:	ja     0x412740
  4126c1:	aaa    
  4126c2:	xchg   edx,eax
  4126c3:	xchg   ebp,eax
  4126c4:	push   ecx
  4126c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126c6:	dec    ebp
  4126c7:	mov    esi,0x99168660
  4126cc:	mov    bl,BYTE PTR [ebp-0x2e5b8c5c]
  4126d2:	cs jecxz 0x4126e2
  4126d5:	sub    BYTE PTR [esi+0x16b059d7],ch
  4126db:	rol    BYTE PTR [edi],1
  4126dd:	xlat   BYTE PTR ds:[ebx]
  4126de:	xchg   esi,eax
  4126df:	push   ecx
  4126e0:	jle    0x412703
  4126e2:	lock pop es
  4126e4:	ins    DWORD PTR es:[edi],dx
  4126e5:	ins    BYTE PTR es:[edi],dx
  4126e6:	fwait
  4126e7:	lods   al,BYTE PTR ds:[esi]
  4126e8:	jmp    0xc15d:0xf02014a0
  4126ef:	inc    ebp
  4126f0:	std    
  4126f1:	(bad)  
  4126f2:	cmc    
  4126f3:	xlat   BYTE PTR ds:[ebx]
  4126f4:	ins    DWORD PTR es:[edi],dx
  4126f5:	and    DWORD PTR [edi],esi
  4126f7:	push   cs
  4126f8:	(bad)  
  4126f9:	jo     0x41269d
  4126fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126fc:	fisttp QWORD PTR [eax]
  4126fe:	in     al,0xaa
  412700:	inc    esi
  412701:	jb     0x412694
  412703:	xor    BYTE PTR [edx-0x52],0xa1
  412707:	rcl    BYTE PTR [ecx+0x1d216613],1
  41270d:	jmp    0x41277b
  41270f:	adc    BYTE PTR [ebx],bl
  412711:	call   0x1b22043e
  412716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412717:	add    eax,DWORD PTR [esi+0x36148029]
  41271d:	mov    WORD PTR [ebp-0x3f],es
  412720:	dec    edi
  412721:	mov    dl,dh
  412723:	xchg   ebx,eax
  412724:	pop    ebx
  412725:	mov    ebx,0xfdf171aa
  41272a:	sti    
  41272b:	mov    DWORD PTR [esi],eax
  41272d:	cmp    al,0x6b
  41272f:	jmp    0x934c3611
  412734:	shl    bh,1
  412736:	add    BYTE PTR [eax+0x71],ah
  412739:	rcl    edi,0x7d
  41273c:	std    
  41273d:	pop    edi
  41273e:	mov    ds:0xd7d5b110,al
  412743:	jno    0x4127a5
  412745:	mov    ah,0x58
  412747:	inc    esp
  412748:	lea    esp,[edi-0x3e6ff320]
  41274e:	mov    edi,0x55952757
  412753:	push   ebp
  412754:	and    eax,0x6d3d6261
  412759:	mov    ch,0xe6
  41275b:	sbb    BYTE PTR [esi],0x5a
  41275e:	xor    dh,bh
  412760:	and    BYTE PTR [eax],bl
  412762:	jnp    0x412762
  412764:	inc    ecx
  412765:	shl    cl,1
  412767:	add    DWORD PTR [ecx],0xc
  41276a:	fldcw  WORD PTR [edx+ecx*4]
  41276d:	lds    esi,FWORD PTR [edi-0x58f1c1fb]
  412773:	mov    al,ds:0x2e8f4899
  412778:	mov    al,0x33
  41277a:	sar    BYTE PTR [ecx-0xd0af9df],0xc6
  412781:	pop    ebx
  412782:	mov    al,dl
  412784:	out    dx,eax
  412785:	xchg   esi,eax
  412786:	jno    0x4127ac
  412788:	xor    al,0x9a
  41278a:	test   al,0xcb
  41278c:	and    eax,0xfaa6a4de
  412791:	xor    DWORD PTR [ecx-0x4a1cacd8],eax
  412797:	or     al,0xfc
  412799:	or     eax,DWORD PTR [esp+esi*1-0xb]
  41279d:	jl     0x4127c2
  41279f:	out    dx,al
  4127a0:	mov    eax,0xc3425992
  4127a5:	sub    al,0x5d
  4127a7:	mov    ecx,0xc4e316f9
  4127ac:	dec    eax
  4127ad:	jle    0x4127de
  4127af:	mov    fs,edi
  4127b1:	call   0x7ad7c13c
  4127b6:	inc    ebp
  4127b7:	fwait
  4127b8:	pop    ss
  4127b9:	pop    ebp
  4127ba:	fcom   QWORD PTR [ebp-0x3b4592c8]
  4127c0:	test   eax,0x375fde60
  4127c5:	xchg   BYTE PTR [ebp-0x6f],dl
  4127c8:	pop    es
  4127c9:	enter  0x8188,0x5d
  4127cd:	pop    ebx
  4127ce:	dec    esi
  4127cf:	je     0x412802
  4127d1:	jmp    0x41283e
  4127d3:	rol    BYTE PTR [edx+eax*2-0x400a393b],1
  4127da:	test   al,0xc0
  4127dc:	jecxz  0x4127ae
  4127de:	fnstsw WORD PTR [eax+0x66998986]
  4127e4:	sbb    bh,BYTE PTR [ebx+eiz*2+0x67]
  4127e8:	xchg   BYTE PTR [esi+0x6],al
  4127eb:	imul   ebx,DWORD PTR [eax+0x1a94feea],0x44f2273d
  4127f5:	ds sti 
  4127f7:	dec    ecx
  4127f9:	lds    esp,FWORD PTR [edi-0x2567fc5d]
  4127ff:	dec    ebp
  412800:	lahf   
  412801:	sub    ch,BYTE PTR [ecx-0x3b]
  412804:	sub    edi,ebx
  412806:	xchg   ebx,eax
  412807:	enter  0x2dd4,0xf5
  41280b:	cld    
  41280c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41280d:	xor    eax,DWORD PTR [ebx+0x16b0bff0]
  412813:	test   DWORD PTR [ecx-0x1a3f4f75],edx
  412819:	xchg   esi,eax
  41281a:	mov    al,ds:0x3bfaa7d3
  41281f:	push   esi
  412820:	pusha  
  412821:	pop    ebp
  412822:	into   
  412823:	repnz and DWORD PTR [ebp+0x25],0xeb4d35ee
  41282b:	mov    dh,0x4c
  41282d:	inc    ebx
  41282e:	cdq    
  41282f:	imul   edx,DWORD PTR [edi+0x2ea0fff1],0x730611d7
  412839:	add    ah,BYTE PTR [esi+0xd0d7b03]
  41283f:	(bad)  
  412840:	mov    ebp,0xd743f3a8
  412845:	retf   
  412846:	sub    eax,0x6a6e4ab3
  41284b:	pop    ecx
  41284c:	jg     0x412895
  41284e:	nop
  41284f:	fild   DWORD PTR [ebx]
  412851:	in     al,0x58
  412853:	push   cs
  412854:	fild   WORD PTR [ebx]
  412856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412857:	cmc    
  412858:	daa    
  412859:	lods   al,BYTE PTR ds:[esi]
  41285a:	pop    ss
  41285b:	rol    BYTE PTR [eax+0x11b266a8],0xab
  412862:	push   ebx
  412863:	out    dx,al
  412864:	mov    eax,ds:0xed3c6ae7
  412869:	inc    ecx
  41286a:	xchg   ebp,eax
  41286b:	mov    ebx,0x73054744
  412870:	mov    BYTE PTR [edx+ebx*2+0x7297f25f],bl
  412877:	lods   al,BYTE PTR ds:[esi]
  412878:	mov    ch,0x3
  41287a:	jno    0x4128cb
  41287c:	popf   
  41287d:	xchg   DWORD PTR [eax-0x5b],ebx
  412880:	and    al,BYTE PTR [esi+0x50bc5a1d]
  412886:	test   al,0x15
  412888:	mov    ebp,0xac00f0f
  41288d:	xor    al,BYTE PTR [eax+0x2b]
  412890:	test   BYTE PTR [ebx+0x1973e369],0x52
  412897:	jp     0x412898
  412899:	cmp    ch,BYTE PTR [edi-0x72b24fee]
  41289f:	or     ebx,edi
  4128a1:	sahf   
  4128a2:	mov    ds:0x105d6649,al
  4128a7:	xor    BYTE PTR [edi],0x1c
  4128aa:	push   ebp
  4128ab:	imul   eax,DWORD PTR [edi+0x4f],0x3b08ae54
  4128b2:	sub    BYTE PTR [edi],bl
  4128b4:	add    al,0x76
  4128b6:	mov    edx,0x7d1df6bb
  4128bb:	or     BYTE PTR [ebx+ebp*1-0x25ef9362],ch
  4128c2:	sbb    BYTE PTR [esi-0x49c181d0],ch
  4128c8:	xchg   ebp,eax
  4128c9:	jo     0x412880
  4128cb:	stc    
  4128cc:	dec    ebp
  4128cd:	mov    eax,DWORD PTR [edi+0x6c94e81a]
  4128d3:	or     BYTE PTR [ecx],ah
  4128d5:	jp     0x412916
  4128d7:	outs   dx,DWORD PTR ds:[esi]
  4128d8:	mov    ebp,0xc474f43e
  4128dd:	pop    ds
  4128de:	loop   0x412935
  4128e0:	ja     0x412932
  4128e2:	add    al,0x80
  4128e5:	adc    DWORD PTR [edx],ebx
  4128e7:	enter  0x6e62,0x22
  4128eb:	es cmp dl,dh
  4128ee:	push   0x52
  4128f0:	push   0xffffff81
  4128f2:	lahf   
  4128f3:	(bad)  
  4128f4:	xor    eax,0xefe237f7
  4128f9:	adc    bl,bl
  4128fb:	sbb    al,0x7f
  4128fd:	cmp    BYTE PTR [ebp+0x1e],cl
  412900:	das    
  412901:	add    dl,cl
  412903:	inc    edx
  412904:	pop    ebx
  412905:	push   cs
  412906:	dec    edx
  412907:	or     ebp,DWORD PTR [eax]
  412909:	stos   BYTE PTR es:[edi],al
  41290a:	je     0x41295e
  41290c:	hlt    
  41290d:	mov    ebx,0xda3663d7
  412912:	mov    ebx,0xab2c754
  412917:	mov    ebx,0x318155a2
  41291c:	dec    edi
  41291d:	inc    ecx
  41291e:	dec    edx
  41291f:	cmp    DWORD PTR [ebx-0x7e26c5c9],esi
  412925:	mov    BYTE PTR [bx+di+0x9f8],ah
  41292a:	jl     0x412952
  41292c:	xchg   esp,eax
  41292d:	out    0x44,al
  41292f:	jno    0x412981
  412931:	xchg   ebx,eax
  412932:	pushf  
  412933:	xchg   edi,eax
  412934:	mov    edi,0x2dfa7abf
  412939:	inc    ecx
  41293a:	dec    ebp
  41293b:	rol    DWORD PTR [ebp+0x7c],cl
  41293e:	inc    edx
  41293f:	addr16 into 
  412941:	(bad)  
  412942:	mov    esp,0x2d94454b
  412947:	push   ds
  412948:	rcr    DWORD PTR [ebp+0x2c456c89],0x2
  41294f:	(bad)  
  412950:	(bad)  
  412951:	loopne 0x41297d
  412953:	shl    esp,cl
  412955:	pop    eax
  412956:	add    eax,0xe7e880e0
  41295b:	mov    ch,0x8b
  41295d:	pusha  
  41295e:	or     ebx,DWORD PTR [eax+0x38]
  412961:	lock scas al,BYTE PTR es:[edi]
  412963:	sbb    DWORD PTR [edi+eiz*1],ebp
  412966:	push   esp
  412967:	jb     0x4128f5
  412969:	xchg   edi,eax
  41296a:	jo     0x412962
  41296c:	repnz jecxz 0x412904
  41296f:	jno    0x412974
  412971:	jge    0x41299c
  412973:	das    
  412974:	dec    edx
  412975:	call   0x375b4ce7
  41297a:	or     ebp,edi
  41297c:	fisttp WORD PTR [edi-0x7d1a1ce5]
  412982:	sahf   
  412983:	and    ebp,DWORD PTR [edx-0x96092c9]
  412989:	std    
  41298a:	sub    DWORD PTR [edx+0x62],edi
  41298d:	sbb    edx,ebx
  41298f:	jo     0x412975
  412991:	or     BYTE PTR [ebx-0x7d366ea2],dl
  412997:	stc    
  412998:	xor    BYTE PTR [ebx-0x7480bd4c],0x11
  41299f:	jmp    0x3639:0x9cd80f0b
  4129a6:	xor    BYTE PTR [ecx+0x56],dl
  4129a9:	push   0x113758a7
  4129ae:	(bad)  
  4129af:	push   esp
  4129b0:	dec    ebx
  4129b1:	xlat   BYTE PTR ds:[ebx]
  4129b2:	adc    edi,DWORD PTR [edi]
  4129b4:	sub    bh,BYTE PTR [edi-0x2218b673]
  4129ba:	mov    eax,0x96ab294f
  4129bf:	test   DWORD PTR [eax],edx
  4129c1:	lods   al,BYTE PTR ds:[esi]
  4129c2:	jge    0x412a2c
  4129c4:	push   cs
  4129c5:	dec    edi
  4129c6:	das    
  4129c7:	(bad)  
  4129c8:	in     al,dx
  4129c9:	push   0x54e0ba1b
  4129ce:	mov    ch,BYTE PTR [esi]
  4129d0:	jnp    0x412968
  4129d2:	pop    esp
  4129d3:	sbb    BYTE PTR [ebx+0x3859a77d],0x6d
  4129da:	xchg   esp,eax
  4129db:	mov    ebx,esi
  4129dd:	aaa    
  4129de:	retf   
  4129df:	mul    DWORD PTR ds:0xaccbe3c8
  4129e5:	shr    DWORD PTR [ecx],1
  4129e7:	cmp    ecx,ebp
  4129e9:	sub    al,0xe0
  4129eb:	xchg   dl,bl
  4129ed:	loop   0x412a41
  4129ef:	cli    
  4129f0:	mov    ch,0x69
  4129f2:	pop    ebp
  4129f3:	ror    DWORD PTR [edx-0x79],cl
  4129f6:	ret    0x3bd
  4129f9:	xor    BYTE PTR [esi],dl
  4129fb:	outs   dx,DWORD PTR ds:[esi]
  4129fc:	inc    ecx
  4129fd:	in     al,dx
  4129fe:	xchg   ecx,eax
  4129ff:	jnp    0x412a27
  412a01:	mov    esi,0xe1237571
  412a06:	ficom  DWORD PTR [edi]
  412a08:	mov    al,ds:0x9d7e42bf
  412a0d:	loope  0x412a64
  412a0f:	mov    bh,BYTE PTR [ebx]
  412a11:	int3   
  412a12:	leave  
  412a13:	xor    DWORD PTR [ecx],0x17
  412a16:	pop    edi
  412a17:	lahf   
  412a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a19:	jo     0x412a80
  412a1b:	mov    ch,0x5d
  412a1d:	lea    edx,[esi+0x710a9fe2]
  412a23:	mov    cl,0x89
  412a25:	repnz cmp DWORD PTR cs:[ebx+0x120bff28],edx
  412a2d:	popa   
  412a2e:	and    al,0x22
  412a30:	std    
  412a31:	cmp    DWORD PTR [edx-0x52],esi
  412a34:	ins    BYTE PTR es:[edi],dx
  412a35:	popf   
  412a36:	xor    ch,BYTE PTR [edi+0x38]
  412a39:	aaa    
  412a3a:	push   esi
  412a3b:	lock pop eax
  412a3d:	ja     0x412a2a
  412a3f:	sub    DWORD PTR ds:0xce50e5a1,ebx
  412a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a46:	lock (bad) 
  412a48:	icebp  
  412a49:	mov    ah,dl
  412a4b:	mov    ah,0x1c
  412a4d:	sub    DWORD PTR [edx+ecx*2],edi
  412a50:	inc    esp
  412a51:	and    BYTE PTR [ecx+edi*8-0x146a9c68],bh
  412a58:	std    
  412a59:	inc    edx
  412a5a:	and    ecx,DWORD PTR [edi+0x68ef505]
  412a60:	push   ecx
  412a61:	mov    ds:0x792bb231,eax
  412a66:	push   ebx
  412a67:	xchg   ebp,eax
  412a68:	mov    al,0x54
  412a6a:	cwde   
  412a6b:	mov    dl,BYTE PTR [edx]
  412a6d:	(bad)  
  412a6f:	xor    DWORD PTR ds:0xbefd8876,ebx
  412a75:	push   es
  412a76:	xchg   edx,eax
  412a77:	sub    edx,DWORD PTR [esi+0x3914bb3d]
  412a7d:	int    0x46
  412a7f:	div    BYTE PTR [esi+edx*2]
  412a82:	nop
  412a83:	ins    DWORD PTR es:[edi],dx
  412a84:	aas    
  412a85:	xchg   esi,eax
  412a86:	pushf  
  412a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a88:	lds    ecx,FWORD PTR [esi]
  412a8a:	push   0xfffffffd
  412a8c:	in     eax,0xc4
  412a8e:	mov    ds:0xbc3a151a,eax
  412a93:	and    al,0x23
  412a95:	sub    al,0x25
  412a97:	dec    esp
  412a98:	scas   eax,DWORD PTR es:[edi]
  412a99:	mov    esp,0xaf18e3da
  412a9e:	data16 sub bh,BYTE PTR [eax]
  412aa1:	mov    ds:0xbfbd28cd,al
  412aa6:	inc    esp
  412aa7:	daa    
  412aa8:	and    al,0x5d
  412aaa:	pop    ds
  412aab:	pop    ss
  412aac:	scas   eax,DWORD PTR es:[edi]
  412aad:	cmp    bl,0x5c
  412ab0:	mov    ?,WORD PTR [ecx]
  412ab2:	or     ecx,DWORD PTR [edx]
  412ab4:	sar    esp,1
  412ab6:	mul    ch
  412ab8:	xchg   ebp,eax
  412ab9:	retf   
  412aba:	mov    esp,0x952580bd
  412abf:	imul   esi,DWORD PTR [eax+0x2f],0x80f8b410
  412ac6:	scas   eax,DWORD PTR es:[edi]
  412ac7:	jbe    0x412aaf
  412ac9:	(bad)  
  412acb:	not    BYTE PTR [eax+0x7e]
  412ace:	push   edi
  412acf:	mov    ebx,0x16100ca0
  412ad4:	bswap  eax
  412ad6:	jo     0x412a71
  412ad8:	mov    edi,0x1e75c5eb
  412add:	pop    esp
  412ade:	mov    eax,0x3a1e6593
  412ae3:	sti    
  412ae4:	add    eax,0x69f2b3f8
  412ae9:	arpl   WORD PTR [eax+0x6],cx
  412aec:	arpl   WORD PTR [edx+0xf],bx
  412aef:	adc    DWORD PTR ds:0xc8cf21a6,0xa0ac1d08
  412af9:	add    ecx,DWORD PTR [ebx+0x2c0f7394]
  412aff:	sbb    al,0x6d
  412b01:	or     eax,0x476e0c93
  412b06:	or     al,BYTE PTR [esi]
  412b08:	ror    DWORD PTR [edx],0x81
  412b0b:	xor    esp,DWORD PTR [ebp-0x60e9ff8f]
  412b11:	stos   BYTE PTR es:[edi],al
  412b12:	cmp    eax,0xe0d66ac0
  412b17:	adc    bl,0x18
  412b1a:	ror    DWORD PTR [eax-0x46bb5fb8],cl
  412b20:	sub    eax,0xc7763ffd
  412b25:	in     al,0x95
  412b27:	mov    DWORD PTR ds:0x3052fba5,ebp
  412b2d:	push   ebp
  412b2e:	cmp    BYTE PTR [edx],0x6
  412b31:	mov    edx,DWORD PTR [edx-0x5e3bdb8c]
  412b37:	jo     0x412aec
  412b39:	bound  ebx,QWORD PTR [edx+edi*8+0x36d4f155]
  412b40:	and    cl,bl
  412b42:	mov    edx,0x3ad0c5f8
  412b47:	in     eax,dx
  412b48:	bound  eax,QWORD PTR [eax+esi*4]
  412b4b:	ds inc ecx
  412b4d:	sti    
  412b4e:	and    eax,0xd5d05dc7
  412b53:	outs   dx,BYTE PTR ds:[esi]
  412b54:	cmc    
  412b55:	popf   
  412b56:	sub    ecx,DWORD PTR [edx+0x243638d0]
  412b5c:	add    cl,BYTE PTR [eax+0x20383700]
  412b62:	push   esi
  412b63:	push   0xffffffe9
  412b65:	push   ecx
  412b66:	nop
  412b67:	aas    
  412b68:	loope  0x412b59
  412b6a:	push   0xfffffff3
  412b6c:	fs pop edi
  412b6e:	inc    esp
  412b6f:	dec    edx
  412b70:	and    al,0x96
  412b72:	jo     0x412b9b
  412b74:	mov    al,0x91
  412b76:	xchg   edi,eax
  412b77:	loopne 0x412b5c
  412b79:	sub    BYTE PTR [ebp-0x27e2968c],dh
  412b7f:	sub    ah,bl
  412b81:	and    al,0x24
  412b83:	and    eax,0xa839bc4f
  412b88:	mov    bx,0x1f83
  412b8c:	ror    al,1
  412b8e:	xchg   BYTE PTR [edi+0x59c0c257],bl
  412b94:	jae    0x412b64
  412b96:	inc    esi
  412b97:	jmp    0x412ba7
  412b99:	and    ecx,0x55
  412b9c:	jnp    0x412b56
  412b9e:	je     0x412c1b
  412ba0:	loopne 0x412bc0
  412ba2:	clc    
  412ba3:	mov    ebp,0xd3b70ce6
  412ba8:	mov    BYTE PTR [edx+0x193aafc4],ch
  412bae:	jne    0x412b8b
  412bb0:	mov    al,ds:0x7033f7e
  412bb5:	push   ds
  412bb6:	lahf   
  412bb7:	clc    
  412bb8:	scas   al,BYTE PTR es:[edi]
  412bb9:	(bad)  
  412bba:	xchg   ebp,eax
  412bbb:	sbb    al,0x4f
  412bbd:	enter  0xedfc,0x72
  412bc1:	inc    ebx
  412bc2:	jno    0x412c22
  412bc4:	shl    DWORD PTR [ebp+ebp*2+0x2ca9494b],0xef
  412bcc:	xor    cl,BYTE PTR [esp+ebx*8+0x20]
  412bd0:	inc    ecx
  412bd1:	xor    edx,DWORD PTR [edi+0x6e]
  412bd4:	(bad)  
  412bd5:	(bad)  
  412bd6:	jae    0x412bb2
  412bd8:	dec    esp
  412bd9:	rcr    DWORD PTR [edx],0x69
  412bdc:	jbe    0x412c56
  412bde:	inc    esi
  412bdf:	rcl    ch,cl
  412be1:	fld    QWORD PTR [ecx]
  412be3:	dec    ebx
  412be4:	loopne 0x412c08
  412be6:	sti    
  412be7:	mov    DWORD PTR [ebp-0x2],ebx
  412bea:	jg     0x412c1b
  412bec:	cmp    al,0x45
  412bee:	adc    dh,BYTE PTR [ebx]
  412bf0:	xchg   BYTE PTR ds:0x5a00591b,bh
  412bf6:	pop    ebx
  412bf7:	call   0x90d0:0x38560050
  412bfe:	sbb    eax,0x67182c2e
  412c03:	jl     0x412b88
  412c05:	mov    ah,0x59
  412c07:	dec    ecx
  412c08:	test   bl,dh
  412c0a:	enter  0xa777,0xc1
  412c0e:	jle    0x412c1c
  412c10:	cmp    DWORD PTR [eax-0x39],ebp
  412c13:	clc    
  412c14:	mov    edx,0xd132f31d
  412c19:	jge    0x412c39
  412c1b:	xchg   BYTE PTR [ebx-0x6],bl
  412c1e:	sub    eax,0x1ac5158b
  412c23:	push   cs
  412c24:	daa    
  412c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c26:	clc    
  412c27:	adc    DWORD PTR [edx+0x5f1ff63e],esi
  412c2d:	test   BYTE PTR [eax],0xce
  412c30:	enter  0xf237,0xc4
  412c34:	xlat   BYTE PTR ds:[ebx]
  412c35:	inc    ebp
  412c36:	test   DWORD PTR [eax-0x39ed6298],ebp
  412c3c:	stos   BYTE PTR es:[edi],al
  412c3d:	lea    edi,[ecx+0x58]
  412c40:	imul   eax,DWORD PTR [edi-0x4f71b84f],0x99b0c9bf
  412c4a:	push   ebx
  412c4b:	sub    edx,ebx
  412c4d:	dec    edx
  412c4e:	inc    ebp
  412c4f:	inc    edx
  412c50:	sbb    ecx,DWORD PTR [ebx]
  412c52:	mov    ds:0x86b4cb09,al
  412c57:	dec    esi
  412c58:	and    edi,esp
  412c5a:	push   ebx
  412c5b:	add    al,0xac
  412c5d:	addr16 ss adc eax,0x17979d1
  412c64:	lock xchg edi,eax
  412c66:	jno    0x412cb4
  412c68:	fs int3 
  412c6a:	loope  0x412c60
  412c6c:	shl    dl,cl
  412c6e:	xor    al,BYTE PTR [eax-0x27]
  412c71:	sbb    eax,0x9575f156
  412c76:	pop    ebp
  412c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c78:	cwde   
  412c79:	xchg   esi,eax
  412c7a:	xchg   DWORD PTR [edi+0x4ffc6098],eax
  412c80:	sub    eax,0x93c7ffd0
  412c85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c86:	ja     0x412c38
  412c88:	dec    edx
  412c89:	xor    al,0xb4
  412c8b:	mov    esi,0xbd87d332
  412c90:	adc    eax,DWORD PTR [ebx-0x38]
  412c93:	ins    BYTE PTR es:[edi],dx
  412c94:	xor    DWORD PTR [ebp-0x2c],edx
  412c97:	out    dx,al
  412c98:	imul   ecx,DWORD PTR [ebx],0xffffffc1
  412c9b:	inc    ebp
  412c9c:	push   ebp
  412c9d:	add    al,0x60
  412c9f:	psubusb mm7,QWORD PTR [edx]
  412ca2:	rcr    DWORD PTR [ebx+edi*1-0x4c],1
  412ca6:	cmp    ecx,DWORD PTR [ecx+0x509430d5]
  412cac:	pusha  
  412cad:	repnz add ah,0xca
  412cb1:	shr    BYTE PTR [ebp-0x34],0x5b
  412cb5:	fprem1 
  412cb7:	loopne 0x412c65
  412cb9:	imul   esi,DWORD PTR [edx],0x263a3a57
  412cbf:	dec    ebp
  412cc0:	lea    esi,[edi-0x39]
  412cc3:	sbb    eax,0xe24234fe
  412cc8:	dec    eax
  412cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cca:	mov    ah,0xf0
  412ccc:	leave  
  412ccd:	ffreep st(5)
  412ccf:	xchg   ebp,eax
  412cd0:	push   esi
  412cd1:	shr    DWORD PTR [ebx+0x38437a42],0xfb
  412cd8:	dec    edx
  412cd9:	(bad)  
  412cda:	dec    ecx
  412cdb:	xchg   ebx,eax
  412cdc:	xlat   BYTE PTR ds:[ebx]
  412cdd:	out    0x3d,eax
  412cdf:	jmp    0xe32d:0x8e9a627b
  412ce6:	xor    bh,BYTE PTR [ecx]
  412ce8:	and    al,0x61
  412cea:	inc    esp
  412ceb:	(bad)  
  412cec:	call   FWORD PTR [edx-0xe]
  412cef:	pop    esi
  412cf0:	cli    
  412cf1:	sub    eax,0x44713d3f
  412cf6:	shl    bh,0xcc
  412cf9:	xchg   BYTE PTR [ebp+0x6f9d9acb],dl
  412cff:	(bad)  
  412d00:	repz repnz push ss
  412d03:	(bad)  
  412d04:	iret   
  412d05:	pop    es
  412d06:	cmp    eax,0x300c890b
  412d0b:	int    0xbe
  412d0d:	icebp  
  412d0e:	(bad)  
  412d0f:	sbb    al,0x1e
  412d11:	adc    al,0xaf
  412d13:	dec    edx
  412d14:	jne    0x412d55
  412d16:	add    ecx,ebp
  412d18:	(bad)  
  412d19:	jg     0x412d3d
  412d1b:	lahf   
  412d1c:	adc    al,0xf
  412d1e:	mov    edi,0xc2399cb1
  412d23:	aas    
  412d24:	sar    al,1
  412d26:	outs   dx,BYTE PTR ds:[esi]
  412d27:	pop    esi
  412d28:	xchg   ebp,eax
  412d29:	push   esi
  412d2a:	push   edx
  412d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d2c:	(bad)  
  412d2d:	repz sar BYTE PTR [eax*1+0x615171c5],0x90
  412d36:	push   0x26c650da
  412d3b:	je     0x412d24
  412d3d:	and    eax,0x3ab72532
  412d42:	outs   dx,BYTE PTR ds:[esi]
  412d43:	push   esp
  412d44:	pop    ds
  412d45:	stos   DWORD PTR es:[edi],eax
  412d46:	xchg   edx,eax
  412d47:	fnstenv [edx+0x67eaaf70]
  412d4d:	outs   dx,BYTE PTR ds:[esi]
  412d4e:	push   0xdfe5652
  412d53:	push   edi
  412d54:	sbb    eax,0x5fb3f602
  412d59:	cmp    cl,0x90
  412d5c:	cld    
  412d5d:	inc    eax
  412d5e:	xchg   edx,eax
  412d5f:	adc    edi,edi
  412d61:	mov    ah,0xbf
  412d63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d64:	test   BYTE PTR [ebx],cl
  412d66:	or     eax,0x91489262
  412d6b:	or     al,BYTE PTR [edx]
  412d6d:	and    bh,BYTE PTR [ecx-0x11]
  412d70:	cld    
  412d71:	mov    ecx,0xbdb92d34
  412d76:	cmp    esi,DWORD PTR [esi-0x3b508ee9]
  412d7c:	shr    BYTE PTR [ebx-0x11697ba6],1
  412d82:	mov    esp,0x33daf430
  412d87:	mov    eax,ds:0x2bc9bdc6
  412d8c:	repnz stos BYTE PTR es:[edi],al
  412d8e:	daa    
  412d8f:	mov    bl,0xba
  412d91:	dec    esp
  412d92:	ins    DWORD PTR es:[edi],dx
  412d93:	in     al,0xe9
  412d95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d96:	adc    al,0x91
  412d99:	sub    al,0xb6
  412d9b:	jp     0x412dc6
  412d9d:	out    dx,eax
  412d9e:	jecxz  0x412dc3
  412da0:	call   0xae5b:0x81a65c6d
  412da7:	in     al,dx
  412da8:	iret   
  412da9:	pop    eax
  412daa:	dec    edx
  412dab:	adc    BYTE PTR [edx-0x67e6b131],al
  412db1:	data16 xor ah,0xe4
  412db5:	sbb    eax,0x3abb0dab
  412dba:	leave  
  412dbb:	pop    esi
  412dbc:	xor    al,0x6
  412dbe:	test   al,0xd3
  412dc0:	push   ecx
  412dc1:	mov    ecx,0xf7ad0332
  412dc6:	or     cl,al
  412dc8:	mov    BYTE PTR [ecx-0x2],ah
  412dcb:	push   eax
  412dcc:	ja     0x412de1
  412dce:	pop    ebp
  412dcf:	and    dh,BYTE PTR [ebx-0x27]
  412dd2:	push   0x5c
  412dd4:	adc    ebp,ebx
  412dd6:	sbb    BYTE PTR [ecx+0x67],dh
  412dd9:	cmp    BYTE PTR [edi-0x4d],dl
  412ddc:	mov    eax,ds:0x4ec83a2
  412de1:	and    dl,dl
  412de3:	mov    DWORD PTR [esi+0x46],esi
  412de6:	add    eax,0x74425de5
  412deb:	jno    0x412dc4
  412ded:	pop    esp
  412dee:	adc    DWORD PTR [ebp-0x57],edi
  412df1:	mov    bl,0xa2
  412df3:	retf   
  412df4:	cmp    esp,ebx
  412df6:	add    DWORD PTR [ebx],0x1
  412df9:	into   
  412dfa:	xlat   BYTE PTR ds:[ebx]
  412dfb:	pop    eax
  412dfc:	pop    ebx
  412dfd:	or     dl,BYTE PTR [esi+0x16]
  412e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e01:	xchg   esp,eax
  412e02:	jbe    0x412e00
  412e04:	push   eax
  412e05:	mov    ebp,0xb807e7ad
  412e0a:	dec    ecx
  412e0b:	lods   al,BYTE PTR ds:[esi]
  412e0c:	or     DWORD PTR [edi-0x74],esi
  412e0f:	stos   BYTE PTR es:[edi],al
  412e10:	and    al,0x6e
  412e12:	sbb    DWORD PTR [esi],ebp
  412e14:	mov    eax,ds:0x9f92481d
  412e19:	dec    eax
  412e1a:	or     esi,DWORD PTR [ebx-0x73f7cb4c]
  412e20:	pop    ds
  412e21:	aas    
  412e22:	sub    DWORD PTR [ebx-0x39],0xffffffc0
  412e26:	sub    al,0x7
  412e28:	sbb    DWORD PTR [ecx],edi
  412e2a:	leave  
  412e2b:	pop    ss
  412e2c:	scas   eax,DWORD PTR es:[edi]
  412e2d:	aaa    
  412e2e:	push   ds
  412e2f:	inc    edx
  412e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e31:	ret    0x68a7
  412e34:	cld    
  412e35:	dec    DWORD PTR [ecx-0x72]
  412e38:	jae    0x412ddf
  412e3a:	sub    DWORD PTR [edi+0x222e1f3e],edx
  412e40:	adc    al,0xf2
  412e42:	fwait
  412e43:	sahf   
  412e44:	push   esi
  412e45:	jbe    0x412dc8
  412e47:	jo     0x412de3
  412e49:	dec    ecx
  412e4a:	clc    
  412e4b:	in     al,dx
  412e4c:	jb     0x412e3e
  412e4e:	sahf   
  412e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e50:	adc    ebp,DWORD PTR [ebx]
  412e52:	jmp    DWORD PTR [ebx-0x6f]
  412e55:	mov    al,ds:0xe5803659
  412e5a:	aad    0xbb
  412e5c:	sub    ebp,DWORD PTR [ebx+ebx*4]
  412e5f:	xchg   DWORD PTR [edx+0x24],esi
  412e62:	es inc esi
  412e64:	mov    ds:0x1cd46792,eax
  412e69:	or     ecx,DWORD PTR [edx]
  412e6b:	ret    
  412e6c:	arpl   WORD PTR [ecx-0x5b],cx
  412e6f:	pop    esp
  412e70:	add    BYTE PTR [ebp-0x2d54ee7f],0xda
  412e77:	sbb    al,0x88
  412e79:	test   esp,ecx
  412e7b:	pop    ss
  412e7c:	out    dx,eax
  412e7d:	push   es
  412e7e:	scas   al,BYTE PTR es:[edi]
  412e7f:	leave  
  412e80:	and    eax,0xfffffffe
  412e83:	(bad)  
  412e84:	lahf   
  412e85:	call   0xb0b1:0xd2f1c685
  412e8c:	stc    
  412e8d:	icebp  
  412e8e:	jmp    0x412eae
  412e90:	and    eax,0x8987d57c
  412e95:	(bad)  
  412e96:	int    0x60
  412e98:	retf   0xd9fd
  412e9b:	imul   esp,DWORD PTR fs:[ecx-0x5f],0x1ecdbdc5
  412ea3:	inc    eax
  412ea4:	dec    esp
  412ea5:	das    
  412ea6:	push   0x22
  412ea8:	nop
  412ea9:	ret    0xe0b9
  412eac:	in     al,dx
  412ead:	inc    ebx
  412eae:	loop   0x412e5a
  412eb0:	fnsave [ecx+0x74]
  412eb3:	sub    dh,BYTE PTR [esp+ebx*8]
  412eb6:	ds out 0x46,eax
  412eb9:	lahf   
  412eba:	mov    eax,ds:0xcf20dd1d
  412ebf:	and    bh,dh
  412ec1:	loop   0x412ec2
  412ec3:	loopne 0x412f19
  412ec5:	test   DWORD PTR [edi-0x7f41472b],edi
  412ecb:	pushf  
  412ecc:	push   ecx
  412ecd:	nop
  412ece:	mov    esi,0x25b8d74b
  412ed3:	dec    ebp
  412ed4:	add    al,0x84
  412ed6:	in     eax,0xbb
  412ed8:	(bad)  
  412ed9:	pop    edx
  412eda:	xchg   DWORD PTR [ebx+ebx*4-0x52],esi
  412ede:	scas   al,BYTE PTR es:[edi]
  412edf:	jae    0x412ebd
  412ee1:	in     eax,0x50
  412ee3:	adc    eax,0xc7723809
  412ee8:	popa   
  412ee9:	or     ebp,DWORD PTR [esi]
  412eeb:	mov    dl,0x47
  412eed:	jno    0x412f63
  412eef:	cld    
  412ef0:	add    al,0xe1
  412ef2:	sub    BYTE PTR ds:0x3caa7a6a,ch
  412ef8:	inc    ecx
  412ef9:	les    ebx,FWORD PTR [edi-0x75]
  412efc:	popf   
  412efd:	jae    0x412e81
  412eff:	add    ch,BYTE PTR [ebx]
  412f01:	adc    ecx,DWORD PTR [ecx+0x29373f7]
  412f07:	je     0x412ef0
  412f09:	xchg   ebx,eax
  412f0a:	push   cs
  412f0b:	jg     0x412eca
  412f0d:	and    dl,BYTE PTR [edx]
  412f0f:	inc    edx
  412f10:	idiv   esp
  412f12:	xor    BYTE PTR [edx-0x33],ch
  412f15:	or     BYTE PTR [eax-0x46],al
  412f18:	(bad)  
  412f19:	pop    ds
  412f1a:	xor    ch,ch
  412f1c:	jnp    0x412f2d
  412f1e:	mov    ds:0x981ea478,al
  412f23:	inc    esp
  412f24:	addr16 mov ss,ecx
  412f27:	inc    esi
  412f28:	add    al,0x29
  412f2a:	inc    ebx
  412f2b:	ds push ds
  412f2d:	shl    DWORD PTR [esi+0x6d],1
  412f30:	test   DWORD PTR [edx],ebx
  412f32:	stos   DWORD PTR es:[edi],eax
  412f33:	pop    edi
  412f34:	idiv   DWORD PTR [ebp*1+0x3c45ae33]
  412f3b:	leave  
  412f3c:	sub    eax,0xa1b5171a
  412f41:	clc    
  412f42:	add    ebp,DWORD PTR [edx+0x72553d4]
  412f48:	push   ds
  412f49:	mov    ch,BYTE PTR [edx+0x37]
  412f4c:	mov    ds:0x2c271b20,al
  412f51:	sbb    ch,BYTE PTR [edx+0x4e]
  412f54:	aas    
  412f55:	push   0x34
  412f57:	std    
  412f58:	int3   
  412f59:	repnz mov cl,0xe9
  412f5c:	dec    edi
  412f5d:	ja     0x412efb
  412f5f:	mov    ?,WORD PTR [edi-0x5b]
  412f62:	hlt    
  412f63:	mov    ebp,0x6f1bf42d
  412f68:	shl    BYTE PTR [edi],1
  412f6a:	jae    0x412f5e
  412f6c:	add    al,0x14
  412f6e:	repnz dec edx
  412f70:	pop    ds
  412f71:	mov    ah,0x71
  412f73:	cmc    
  412f74:	(bad)  
  412f75:	fadd   DWORD PTR [ebp+0xd]
  412f78:	gs or  al,0x5f
  412f7b:	fisubr WORD PTR [edi-0x4478480a]
  412f81:	pop    es
  412f82:	pop    eax
  412f83:	(bad)  
  412f85:	adc    eax,DWORD PTR [edx+esi*1]
  412f88:	in     eax,0xa8
  412f8a:	loop   0x412f68
  412f8c:	mov    edx,0xc1431e66
  412f91:	in     eax,dx
  412f92:	fs in  eax,0xe0
  412f95:	add    eax,0x74025d05
  412f9a:	sub    edx,DWORD PTR [eax]
  412f9c:	and    BYTE PTR [ecx+esi*8],dl
  412f9f:	or     ch,al
  412fa1:	jmp    0xf5a:0x9ab094f
  412fa8:	push   DWORD PTR [si+0x70]
  412fac:	xor    DWORD PTR [ebp+0x5],esp
  412faf:	arpl   WORD PTR [edi+0x1fff3ebd],sp
  412fb5:	test   dh,ch
  412fb7:	xor    dh,bh
  412fb9:	pop    es
  412fba:	sub    bl,al
  412fbc:	add    DWORD PTR [edx+eax*4-0x723cd847],ecx
  412fc3:	xchg   edi,eax
  412fc4:	sub    eax,0x665ab17c
  412fc9:	xchg   esi,eax
  412fca:	adc    DWORD PTR ds:0xd127f9ae,ebx
  412fd0:	add    eax,0x49adf7d0
  412fd5:	ins    BYTE PTR es:[edi],dx
  412fd6:	push   edi
  412fd7:	sti    
  412fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fd9:	pop    ds
  412fda:	push   esp
  412fdb:	std    
  412fdc:	mov    ecx,0x224e48e3
  412fe1:	xor    cl,BYTE PTR [ecx+0x3f]
  412fe4:	pop    ebp
  412fe5:	in     eax,0xfb
  412fe7:	mov    esp,0xd5a62002
  412fec:	ret    0x8816
  412fef:	push   edx
  412ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff1:	add    eax,0x91d5aa58
  412ff6:	pop    edx
  412ff7:	jg     0x413036
  412ff9:	aam    0x67
  412ffb:	adc    bl,0x3a
  412ffe:	and    BYTE PTR [ecx-0x3b6166a1],bh
  413004:	sti    
  413005:	jo     0x412f96
  413007:	rcl    BYTE PTR [ecx+esi*8+0x78],1
  41300b:	into   
  41300c:	pop    edi
  41300d:	and    eax,0x2e4825d8
  413012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413013:	mov    ds:0xe563f51c,eax
  413018:	test   BYTE PTR [ebx-0x43ed1d1c],ch
  41301e:	data16 cmp al,0xe0
  413021:	daa    
  413022:	int3   
  413023:	push   ss
  413024:	or     BYTE PTR [eax-0x5c8a4315],ch
  41302a:	sub    eax,DWORD PTR [ebx]
  41302c:	push   cs
  41302d:	mov    al,BYTE PTR es:[ebx-0x72]
  413031:	mov    esi,0xb513f2b5
  413036:	repnz ss test eax,0xcf92c379
  41303d:	xchg   edx,eax
  41303e:	cld    
  41303f:	sbb    al,0x94
  413041:	pop    ecx
  413042:	add    al,bl
  413044:	mov    bh,0xe3
  413046:	(bad)  
  413047:	mov    ebx,0xb46bc674
  41304c:	jo     0x4130be
  41304e:	and    cl,cl
  413050:	inc    ebp
  413051:	inc    ebp
  413052:	leave  
  413053:	in     al,dx
  413054:	mov    cl,0x67
  413056:	mov    ds:0xc976cf1a,al
  41305b:	sub    DWORD PTR ds:0x44277e2d,edx
  413061:	xchg   DWORD PTR [esi+0x71],esp
  413064:	inc    eax
  413065:	popf   
  413066:	sub    al,0xbb
  413068:	mov    BYTE PTR [esi-0x1e143891],ch
  41306e:	cwde   
  41306f:	ins    DWORD PTR es:[edi],dx
  413070:	ja     0x413052
  413072:	int3   
  413073:	dec    eax
  413074:	pop    ss
  413075:	push   eax
  413076:	xchg   edx,eax
  413077:	or     esp,ebx
  413079:	pop    ss
  41307a:	mov    BYTE PTR [ebx],bl
  41307c:	aam    0xab
  41307e:	cmp    edx,ebx
  413080:	fmul   DWORD PTR [ecx-0x4334b702]
  413086:	mov    WORD PTR [edx+0x4b],?
  413089:	add    ebp,DWORD PTR [esi]
  41308b:	mov    cl,0x17
  41308d:	push   ss
  41308e:	mov    eax,ds:0x6411e7d0
  413093:	jne    0x41308b
  413095:	mov    ebx,0xe37ea28e
  41309a:	das    
  41309b:	gs je  0x4130bb
  41309e:	ds mov edi,cs
  4130a1:	adc    eax,0x43ef2461
  4130a6:	(bad)  
  4130a8:	jp     0x413032
  4130aa:	xchg   ecx,eax
  4130ab:	pop    eax
  4130ac:	cmp    al,0xf3
  4130ae:	das    
  4130af:	pop    ds
  4130b0:	xor    ecx,ecx
  4130b2:	pop    ebp
  4130b3:	es (bad) 
  4130b6:	es inc ecx
  4130b8:	aad    0xec
  4130ba:	pop    ss
  4130bb:	mov    al,ds:0x283b3cb5
  4130c0:	push   edx
  4130c1:	mov    al,ds:0xe6d54cac
  4130c6:	mov    dl,0x1b
  4130c8:	sub    esi,edi
  4130ca:	mov    edi,0x562b5bd3
  4130cf:	fs scas al,BYTE PTR es:[edi]
  4130d1:	jp     0x41307e
  4130d3:	xchg   edi,eax
  4130d4:	pusha  
  4130d5:	inc    esp
  4130d6:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130d8:	mov    bh,0xf2
  4130da:	or     al,0x3e
  4130dc:	jnp    0x4130a8
  4130de:	retf   
  4130df:	sar    BYTE PTR [eax],1
  4130e1:	std    
  4130e2:	mov    ebx,0x7452bb4d
  4130e7:	aad    0x15
  4130e9:	icebp  
  4130ea:	pop    ebp
  4130eb:	xrelease mov BYTE PTR [ebx],bl
  4130ee:	repnz loopne 0x41310a
  4130f1:	or     edx,DWORD PTR [ecx]
  4130f3:	push   edx
  4130f4:	call   0x347380d3
  4130f9:	mov    eax,ds:0xb0be4134
  4130fe:	jge    0x4130bb
  413100:	jo     0x413145
  413102:	mov    edx,0xe4f023f8
  413107:	inc    edi
  413108:	(bad)  
  413109:	sbb    al,0xf1
  41310b:	jnp    0x4130e9
  41310d:	xchg   ebp,eax
  41310e:	loop   0x4130b6
  413110:	sahf   
  413111:	xchg   esi,eax
  413112:	xor    eax,0xf7bf8725
  413117:	ret    0x1965
  41311a:	das    
  41311b:	es xor eax,0x12b03b31
  413121:	mov    cl,0x47
  413123:	inc    esp
  413124:	call   0x4ebb:0xb1d30320
  41312b:	adc    al,0x3d
  41312d:	sub    eax,0xc2eca796
  413132:	mov    ebp,0x76a0a93
  413137:	mov    ebx,0xdf40714c
  41313c:	xor    BYTE PTR [edi-0x78],dh
  41313f:	shr    DWORD PTR [esi+0x38],cl
  413142:	call   0xf7ac:0xc98cc4b4
  413149:	int    0x11
  41314b:	adc    bl,al
  41314d:	fist   WORD PTR [eax+0x70]
  413150:	jmp    0x413170
  413152:	push   ebp
  413153:	mov    ds:0x351f989c,al
  413158:	enter  0xdfb1,0xa6
  41315c:	sub    DWORD PTR ds:0x7e2cc872,edx
  413162:	mov    edx,DWORD PTR [ecx+edx*1]
  413165:	mov    WORD PTR [eax+0x6485b08a],gs
  41316b:	adc    eax,0x971959a4
  413170:	mov    cs,WORD PTR [esi+esi*2+0x104e1c94]
  413177:	pop    ebp
  413178:	ins    DWORD PTR es:[edi],dx
  413179:	retf   
  41317a:	xchg   esi,eax
  41317b:	jne    0x4131d2
  41317d:	pop    ss
  41317e:	aas    
  41317f:	call   0x20c:0x58f10f52
  413186:	pop    esp
  413187:	xchg   ebx,eax
  413188:	and    eax,0x69b34b7a
  41318e:	sub    BYTE PTR [edx-0x76],0xd6
  413192:	ret    
  413193:	sar    BYTE PTR [eax+edx*4-0x69b5863e],1
  41319a:	and    dh,BYTE PTR [ebp+0x5ec266ec]
  4131a0:	cmp    ebx,ebp
  4131a2:	inc    ebx
  4131a3:	jp     0x413198
  4131a5:	pop    ds
  4131a6:	inc    esi
  4131a7:	dec    ebx
  4131a8:	mov    esp,?
  4131aa:	cdq    
  4131ab:	lods   eax,DWORD PTR ds:[esi]
  4131ac:	add    DWORD PTR [edx-0x12f5fcc8],esp
  4131b2:	lods   eax,DWORD PTR ds:[esi]
  4131b3:	mov    bl,0xa0
  4131b5:	adc    DWORD PTR [edi+esi*4],edi
  4131b8:	iret   
  4131b9:	sub    DWORD PTR [eax+0xa],ebx
  4131bc:	inc    esi
  4131bd:	lds    eax,FWORD PTR [edx+0x20]
  4131c0:	mul    dl
  4131c2:	adc    bh,cl
  4131c4:	lods   eax,DWORD PTR ds:[esi]
  4131c5:	(bad)  
  4131c6:	lea    ebp,[ecx+ebx*1-0x73]
  4131ca:	pop    ds
  4131cb:	int3   
  4131cc:	cdq    
  4131cd:	add    al,0xb4
  4131d0:	adc    eax,0xa7e5f21d
  4131d5:	dec    edi
  4131d6:	ss int3 
  4131d8:	icebp  
  4131d9:	mov    ds:0x7fb59c84,eax
  4131de:	cli    
  4131df:	and    al,0x25
  4131e1:	dec    esp
  4131e2:	or     eax,0x66724098
  4131e7:	jmp    0x4131fd
  4131e9:	xor    al,0xa9
  4131eb:	cs xchg esi,eax
  4131ed:	or     DWORD PTR [ebx+ecx*1-0x7aab8b6b],eax
  4131f4:	xor    DWORD PTR [ecx],eax
  4131f6:	sub    ebp,DWORD PTR [eax-0xe]
  4131f9:	mov    ebx,edx
  4131fb:	sbb    BYTE PTR [edi],0x73
  4131fe:	inc    BYTE PTR [ecx+0x54]
  413201:	mov    BYTE PTR [esi+0x41],cl
  413204:	pop    esp
  413205:	mov    esi,0x1650687
  41320a:	lea    eax,[esi]
  41320c:	jl     0x413259
  41320e:	(bad)  
  41320f:	cs stos BYTE PTR es:[edi],al
  413211:	aam    0x14
  413213:	dec    esi
  413214:	or     cl,BYTE PTR [edx+0x4b9697a4]
  41321a:	jns    0x4131cf
  41321c:	add    bh,BYTE PTR [edi-0x3d]
  41321f:	mov    ds,WORD PTR [ecx+0x7]
  413222:	mov    ch,BYTE PTR [esi-0x47f22972]
  413228:	inc    BYTE PTR [ecx+ebx*2-0x26]
  41322c:	sahf   
  41322d:	inc    ecx
  41322e:	nop
  41322f:	cmp    eax,0x60bdee99
  413234:	retf   0xb980
  413237:	adc    al,0x9f
  413239:	or     edi,DWORD PTR [ecx+eiz*2-0x7ac0b4d1]
  413240:	(bad)  
  413241:	inc    ecx
  413242:	xchg   edx,eax
  413243:	adc    eax,0x6e5cddc7
  413248:	and    eax,0x8a5a9f6e
  41324d:	psrlq  mm1,mm3
  413250:	rcr    bh,1
  413252:	adc    eax,0x71dbb314
  413257:	jb     0x413267
  413259:	pop    ss
  41325a:	retf   0xb52d
  41325d:	mov    esi,eax
  41325f:	mov    ah,ch
  413261:	xor    eax,0x3266720
  413266:	adc    eax,0x5871d339
  41326b:	mov    dl,0x35
  41326d:	hlt    
  41326e:	retf   0xcf98
  413271:	loop   0x41322c
  413273:	mov    bh,0xc5
  413275:	mov    edx,esp
  413277:	dec    ecx
  413278:	cwde   
  413279:	pop    ebx
  41327a:	push   es
  41327b:	in     al,0xe5
  41327d:	retf   0x8396
  413280:	(bad)  
  413281:	xchg   ebx,eax
  413282:	inc    ebp
  413283:	call   0x61a6:0xed251955
  41328a:	mov    ebp,0x1a2c3f42
  41328f:	adc    al,0xe2
  413291:	retf   
  413292:	ja     0x413256
  413294:	xor    eax,DWORD PTR [edi+0x3a]
  413297:	mov    edx,0x1474da65
  41329c:	out    0xf3,eax
  41329e:	cmp    esi,DWORD PTR [eax+eiz*2]
  4132a1:	dec    ebx
  4132a2:	add    al,0x35
  4132a4:	inc    ebp
  4132a5:	or     BYTE PTR [eax+ebp*4+0x2d],dl
  4132a9:	mov    ecx,0x9f669d07
  4132ae:	(bad)  
  4132af:	(bad)  
  4132b0:	ficomp DWORD PTR [edx+0x5c]
  4132b3:	test   DWORD PTR ds:0x3b7d84cd,0xc46a73d7
  4132bd:	out    0x90,eax
  4132bf:	fadd   st,st(6)
  4132c1:	push   eax
  4132c2:	mov    ecx,0x69d96c5e
  4132c7:	push   eax
  4132c8:	call   0x117e108f
  4132cd:	call   0xc434f329
  4132d2:	xchg   esi,eax
  4132d3:	xchg   edx,eax
  4132d4:	int3   
  4132d5:	bound  ebx,QWORD PTR [ebx+0x60093991]
  4132db:	jnp    0x41330f
  4132dd:	mov    dh,0x82
  4132df:	mov    bh,0x52
  4132e1:	adc    al,0xd7
  4132e3:	ds jmp 0x4132f8
  4132e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132e7:	ret    
  4132e8:	xor    edi,ebx
  4132ea:	sub    DWORD PTR [edi-0x49],eax
  4132ed:	xchg   dh,bh
  4132ef:	xor    al,0x85
  4132f1:	dec    esp
  4132f2:	jns    0x4132a5
  4132f4:	mov    cl,BYTE PTR [esi]
  4132f6:	inc    edi
  4132f7:	mov    al,ds:0xd1637c52
  4132fc:	dec    eax
  4132fd:	imul   DWORD PTR [ebx-0x18d0e904]
  413303:	in     ax,dx
  413305:	fisub  DWORD PTR [edx-0x76]
  413308:	dec    DWORD PTR [ebp-0x6d480e92]
  41330e:	(bad)  
  41330f:	retf   0x2384
  413312:	adc    cl,BYTE PTR [ebx]
  413314:	jle    0x413360
  413316:	retf   
  413317:	mov    edi,0x581062a5
  41331c:	sbb    eax,0xa26efdf0
  413321:	fucomip st,st(0)
  413323:	ja     0x4132d7
  413325:	cwde   
  413326:	lock ret 0xc228
  41332a:	cli    
  41332b:	mov    ecx,0xe320415
  413330:	adc    al,0x2e
  413332:	mov    ds:0xdff01ce5,al
  413337:	xlat   BYTE PTR ds:[ebx]
  413338:	sbb    BYTE PTR [esi+edi*4-0x55],0xd9
  41333d:	add    edx,edi
  41333f:	and    BYTE PTR [edi],bl
  413341:	out    0x44,al
  413343:	test   DWORD PTR [edx+ecx*8-0x4],ebx
  413347:	sbb    eax,0x2e9b1550
  41334c:	mov    dh,0xe0
  41334e:	pop    edi
  41334f:	mov    BYTE PTR ds:0x40ca6031,0x15
  413356:	aad    0x38
  413358:	or     eax,0xe6d00f6a
  41335d:	ins    DWORD PTR es:[edi],dx
  41335e:	cmp    esp,DWORD PTR [ebx+0x4c4e6015]
  413364:	in     al,0x83
  413366:	jo     0x4133d1
  413368:	xor    edx,esp
  41336a:	loopne 0x413376
  41336c:	xor    DWORD PTR [esi+edx*8-0x1761a112],0x832614ab
  413377:	out    dx,eax
  413378:	inc    ebx
  413379:	lock pop ecx
  41337b:	add    al,0xd5
  41337d:	push   ebp
  41337e:	xor    al,0x0
  413380:	ror    BYTE PTR [ebp-0x6d],cl
  413383:	pop    ebp
  413384:	jbe    0x413385
  413386:	into   
  413387:	xchg   ebx,eax
  413388:	dec    edi
  413389:	test   eax,0x1223eb32
  41338e:	and    ebx,DWORD PTR [ebx+0x7e]
  413391:	add    DWORD PTR [edx-0xce4f2df],ecx
  413397:	out    dx,eax
  413398:	jge    0x41333c
  41339a:	rcl    DWORD PTR [eax+esi*2],cl
  41339d:	dec    edx
  41339e:	and    DWORD PTR [ebp+0x3c],esp
  4133a1:	je     0x413406
  4133a3:	pop    edx
  4133a4:	daa    
  4133a5:	adc    BYTE PTR [edx],0x4b
  4133a8:	pop    ebp
  4133a9:	or     DWORD PTR [esi],ecx
  4133ab:	call   0x8cc26f75
  4133b0:	ficom  DWORD PTR [esi+0x2b]
  4133b3:	and    BYTE PTR [ecx-0x40720fc6],bh
  4133b9:	call   DWORD PTR [ecx+0x22]
  4133bc:	adc    al,0x76
  4133be:	std    
  4133bf:	inc    eax
  4133c0:	sbb    DWORD PTR [ebp-0x406f1fcf],ebp
  4133c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133c7:	adc    DWORD PTR [ebx-0xe],ebx
  4133ca:	push   cs
  4133cb:	rcr    BYTE PTR [eax-0x557179a7],0xe6
  4133d2:	aad    0x45
  4133d4:	(bad)  [edx]
  4133d6:	ficom  DWORD PTR [edi+edx*1+0x2fcae2b4]
  4133dd:	inc    ebx
  4133de:	xchg   ecx,eax
  4133df:	int3   
  4133e0:	pop    ecx
  4133e1:	aad    0x5f
  4133e3:	dec    ebx
  4133e4:	add    al,0xf2
  4133e6:	inc    esp
  4133e7:	aam    0x13
  4133e9:	retf   0x6522
  4133ec:	pop    ebp
  4133ed:	inc    ebx
  4133ee:	push   eax
  4133ef:	jno    0x4133dc
  4133f1:	ret    0xc333
  4133f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133f5:	push   edx
  4133f6:	and    edx,eax
  4133f8:	mov    ebp,DWORD PTR ds:0x9f71c533
  4133fe:	fbld   TBYTE PTR [ecx]
  413400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413401:	mov    ah,0x8a
  413403:	repnz cmp eax,0x429a60d9
  413409:	mov    ecx,DWORD PTR [esi]
  41340b:	lock cmp BYTE PTR [edi+0x20],0x1d
  413410:	or     BYTE PTR [edx],dl
  413412:	adc    eax,0x815bd2a2
  413417:	xchg   esp,eax
  413418:	ja     0x413427
  41341a:	data16 jae 0x413438
  41341d:	ror    DWORD PTR [esi],1
  41341f:	pop    esp
  413420:	fild   QWORD PTR ds:[ecx+0x6d53bb2e]
  413427:	xchg   edi,eax
  413428:	dec    edi
  413429:	shl    BYTE PTR [esi],0x6
  41342c:	lods   eax,DWORD PTR ds:[esi]
  41342d:	mov    ds:0x6928ef97,al
  413432:	pop    edi
  413433:	push   ebx
  413434:	pusha  
  413435:	shl    ch,cl
  413437:	pop    ebp
  413438:	dec    edx
  413439:	cmc    
  41343a:	jge    0x413472
  41343c:	cld    
  41343d:	aaa    
  41343e:	or     BYTE PTR [edi],bh
  413440:	je     0x413460
  413442:	fdivr  DWORD PTR [ecx+0x33]
  413445:	sbb    DWORD PTR [ecx+0x64174c44],esi
  41344b:	cmp    ch,BYTE PTR [ebx+ecx*2-0x43]
  41344f:	xor    ch,ch
  413451:	leave  
  413452:	stc    
  413453:	lods   al,BYTE PTR ds:[esi]
  413454:	adc    BYTE PTR [ebx+0x5b1da50d],ch
  41345a:	sub    DWORD PTR ds:0x6257a23,esi
  413460:	jns    0x413436
  413462:	loopne 0x4134ac
  413464:	push   esi
  413465:	jmp    0x4133ef
  413467:	xchg   ebp,eax
  413468:	jmp    0xf46c:0xb27fb423
  41346f:	repz call 0x801bda2e
  413475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413476:	sti    
  413477:	sbb    al,0xa9
  413479:	xchg   esi,eax
  41347a:	nop
  41347b:	push   ebp
  41347c:	out    dx,al
  41347d:	ss es add eax,0xd9b32f29
  413484:	mov    esi,DWORD PTR [ebx-0xf]
  413487:	imul   DWORD PTR [edi]
  413489:	jnp    0x413413
  41348b:	cld    
  41348c:	dec    esp
  41348d:	xor    BYTE PTR [edi+eiz*8],al
  413490:	sti    
  413491:	gs jne 0x413473
  413494:	pop    eax
  413495:	or     bh,cl
  413497:	dec    edx
  413498:	add    al,0x22
  41349a:	xor    dl,0xd
  41349d:	jnp    0x413445
  41349f:	stos   BYTE PTR es:[edi],al
  4134a0:	cmc    
  4134a1:	pushf  
  4134a2:	and    bh,ch
  4134a4:	out    0xfd,eax
  4134a6:	clc    
  4134a7:	add    dl,BYTE PTR [edx-0x5c9c3646]
  4134ad:	js     0x413439
  4134af:	out    dx,eax
  4134b0:	ret    
  4134b1:	in     al,0xe4
  4134b3:	jo     0x41345b
  4134b5:	daa    
  4134b6:	jmp    0x41346f
  4134b8:	xlat   BYTE PTR ds:[ebx]
  4134b9:	or     ecx,DWORD PTR gs:[ebx]
  4134bc:	(bad)  
  4134be:	jmp    0x35df:0xac8e02db
  4134c5:	jbe    0x4134f3
  4134c7:	push   0xfffffffe
  4134c9:	shl    BYTE PTR [edx],1
  4134cb:	inc    edi
  4134cc:	in     eax,0x88
  4134ce:	push   esi
  4134cf:	scas   eax,DWORD PTR es:[edi]
  4134d0:	cmp    al,0x5b
  4134d2:	das    
  4134d3:	sbb    BYTE PTR [ecx],ah
  4134d5:	in     eax,dx
  4134d6:	aaa    
  4134d7:	cmp    al,al
  4134d9:	xchg   ebx,eax
  4134da:	scas   al,BYTE PTR es:[edi]
  4134db:	push   ds
  4134dc:	in     eax,dx
  4134dd:	and    cx,WORD PTR [ecx+eax*2+0x6b]
  4134e2:	int3   
  4134e3:	retf   
  4134e4:	push   ss
  4134e5:	and    al,0xcc
  4134e7:	pusha  
  4134e8:	(bad)  
  4134e9:	mov    bl,0x93
  4134eb:	imul   eax,ecx,0x52
  4134ee:	aad    0xa7
  4134f0:	push   eax
  4134f1:	stos   BYTE PTR es:[edi],al
  4134f2:	pop    eax
  4134f3:	push   ebx
  4134f4:	ins    BYTE PTR es:[edi],dx
  4134f5:	adc    DWORD PTR [ebx],edi
  4134f7:	jo     0x4134ff
  4134f9:	pop    edx
  4134fa:	sbb    eax,0xa9fc5019
  4134ff:	mov    BYTE PTR [eax+0x53],0x81
  413503:	or     al,0x6d
  413505:	fwait
  413506:	nop
  413507:	xor    edi,esi
  413509:	jo     0x413566
  41350b:	int    0x64
  41350d:	pushf  
  41350e:	jmp    0xee82c85f
  413513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413514:	pop    ss
  413515:	test   eax,0xc46660f2
  41351a:	xchg   esp,eax
  41351b:	mov    ah,0xf
  41351d:	hlt    
  41351e:	pusha  
  41351f:	mov    ch,0xd
  413521:	jne    0x413573
  413523:	sub    eax,0x7202599b
  413528:	adc    eax,0xeabaadb
  41352d:	mov    BYTE PTR [eax+0x496b870d],dl
  413533:	cwde   
  413534:	pusha  
  413535:	mov    ebp,0x20da9d3c
  41353a:	retf   0x8b3f
  41353d:	call   0x2066:0x1da94513
  413544:	push   ecx
  413545:	out    dx,eax
  413546:	jge    0x4134d0
  413548:	jnp    0x41352f
  41354a:	push   ds
  41354b:	fiadd  DWORD PTR [edi]
  41354d:	int    0xdb
  41354f:	mov    ah,0xec
  413551:	pop    es
  413552:	popa   
  413553:	lea    esi,[esp+ebp*4-0x7d]
  413557:	outs   dx,DWORD PTR ds:[esi]
  413558:	pop    DWORD PTR [esi-0x3dba1c26]
  41355e:	jae    0x4135cb
  413560:	xchg   eax,esp
  413562:	jp     0x413543
  413564:	jmp    DWORD PTR [ebp+0x1d39ba64]
  41356a:	push   ds
  41356b:	ins    DWORD PTR es:[edi],dx
  41356c:	test   eax,0x3cbaf716
  413571:	push   edx
  413572:	(bad)  
  413573:	sub    edi,DWORD PTR [ebp-0x2873e8da]
  413579:	add    al,0x5f
  41357b:	dec    edi
  41357c:	add    edx,0xffffffab
  41357f:	xlat   BYTE PTR ds:[ebx]
  413580:	add    eax,0x9c3b929c
  413585:	int    0x9b
  413587:	mov    edx,0x4733839f
  41358c:	psubb  mm1,QWORD PTR [edx]
  41358f:	ds pop edi
  413591:	sbb    bh,BYTE PTR [ecx-0x3d92368a]
  413597:	xor    eax,0x4734c92a
  41359c:	sbb    BYTE PTR [ebx+edi*8+0x54b22f43],ch
  4135a3:	aad    0xf
  4135a5:	mov    ds:0x3fb58a5e,al
  4135aa:	or     edi,DWORD PTR [edx+0x5d]
  4135ad:	cmc    
  4135ae:	call   0x925e:0x1777c069
  4135b5:	push   es
  4135b6:	and    DWORD PTR [eax+0x1a],ebx
  4135b9:	cwde   
  4135ba:	in     al,0x6d
  4135bc:	rcr    BYTE PTR [edi+ecx*1+0x343c6e4b],0x7c
  4135c4:	imul   esp,ebp,0xa699755b
  4135ca:	(bad)  
  4135cb:	sub    DWORD PTR [eax+0xbe0cbb6],ecx
  4135d1:	sub    al,BYTE PTR [edx+0x66582dfc]
  4135d7:	test   ah,al
  4135d9:	sbb    eax,0x23ecbd66
  4135de:	pop    ss
  4135df:	cmp    bl,cl
  4135e1:	xor    ch,dl
  4135e3:	add    ebx,DWORD PTR [bp+di+0x6060]
  4135e8:	sti    
  4135e9:	mov    ebx,0x790a0a0e
  4135ee:	dec    ebx
  4135ef:	stos   BYTE PTR es:[edi],al
  4135f0:	repz sub eax,0x9a4fcea9
  4135f6:	cmp    dh,bh
  4135f8:	cmc    
  4135f9:	add    ebp,DWORD PTR [eax+0x1e9b8024]
  4135ff:	xor    ebx,ebp
  413601:	stos   BYTE PTR es:[edi],al
  413602:	dec    ebx
  413603:	adc    al,0x29
  413605:	xchg   esi,eax
  413606:	cmp    DWORD PTR [ebx],eax
  413608:	sbb    ebx,edx
  41360a:	push   es
  41360b:	mov    edi,0x9f667216
  413610:	push   ecx
  413611:	test   al,0x86
  413613:	and    BYTE PTR [edi+0x48],al
  413616:	or     al,0x97
  413618:	aam    0xa5
  41361a:	inc    ecx
  41361b:	int    0x91
  41361d:	in     eax,0x28
  41361f:	ss inc esp
  413621:	cmp    DWORD PTR [esi],edx
  413623:	pop    esp
  413624:	ss jge 0x41363a
  413627:	leave  
  413628:	push   ss
  413629:	cwde   
  41362a:	mov    bl,0xfa
  41362c:	(bad)  
  41362d:	cld    
  41362e:	sbb    edx,DWORD PTR [edi+0x15e28f75]
  413634:	mov    esi,0x72c2b2fb
  413639:	lahf   
  41363a:	or     BYTE PTR [esi+0x48849dd5],dl
  413640:	int    0x4a
  413642:	dec    esp
  413643:	jno    0x4135e9
  413645:	sbb    esp,DWORD PTR [edx]
  413647:	pop    ebx
  413648:	xchg   DWORD PTR ds:0xc6a8f1c4,ecx
  41364e:	sbb    bh,ch
  413650:	mov    ebp,0x41278374
  413655:	rcl    ebp,1
  413657:	sub    eax,0x84ce0e4a
  41365c:	mov    esi,fs
  41365e:	out    0xb,eax
  413660:	mov    edx,0x61b13345
  413665:	and    dh,BYTE PTR fs:[edx]
  413668:	aas    
  413669:	js     0x41362d
  41366b:	xchg   edx,eax
  41366c:	mov    WORD PTR [edi-0x43235449],?
  413672:	xchg   esp,eax
  413673:	mov    ?,WORD PTR [ebp-0xa7357a8]
  413679:	or     esi,edx
  41367b:	mov    ds:0x47ea6ea1,eax
  413680:	inc    eax
  413681:	sahf   
  413682:	inc    edi
  413683:	out    0x97,eax
  413685:	xchg   eax,eax
  413687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413689:	sar    DWORD PTR [edi-0x22f6e6e2],1
  41368f:	cmp    al,0xa4
  413691:	xchg   ebx,eax
  413692:	dec    esp
  413693:	sbb    BYTE PTR [eax],ah
  413695:	xor    dl,BYTE PTR [esi]
  413697:	sbb    DWORD PTR [ebx],edx
  413699:	xor    al,0x78
  41369b:	and    DWORD PTR [esi+edi*1-0xb3d68df],ebp
  4136a2:	test   DWORD PTR [ebx-0x7ff77f46],ebp
  4136a8:	mov    ebx,0x4bf1f9f7
  4136ad:	adc    edi,0x9e5a8795
  4136b3:	cs call 0xeaa0:0xca57d490
  4136bb:	pusha  
  4136bc:	(bad)  
  4136bd:	ds call 0x54a7a75e
  4136c3:	dec    ebx
  4136c4:	lahf   
  4136c5:	push   ds
  4136c6:	aaa    
  4136c7:	jge    0x413655
  4136c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136ca:	leave  
  4136cb:	outs   dx,DWORD PTR ds:[esi]
  4136cc:	mov    dl,0x15
  4136ce:	or     bl,ch
  4136d0:	adc    DWORD PTR [ebx-0x34dd3033],edi
  4136d6:	aam    0xb7
  4136d8:	dec    ecx
  4136d9:	div    DWORD PTR [edi-0x1c]
  4136dc:	or     al,0xc0
  4136de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136df:	pop    ss
  4136e0:	or     al,0xfb
  4136e2:	sbb    al,0xc7
  4136e4:	cs and eax,0xc3d113b2
  4136ea:	mov    ds:0xd873cd99,al
  4136ef:	cs cmp eax,0xabc7f7f2
  4136f5:	pop    edi
  4136f6:	adc    BYTE PTR [esp+eiz*4],dh
  4136f9:	mov    bl,0x4b
  4136fb:	push   ds
  4136fc:	dec    esi
  4136fd:	xor    DWORD PTR [esi],0x8ddd133d
  413703:	and    edx,DWORD PTR [eax+0x61]
  413706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413707:	in     al,dx
  413708:	xchg   ebp,eax
  413709:	adc    bl,BYTE PTR [esi]
  41370b:	idiv   DWORD PTR [edi]
  41370d:	xor    eax,0xcb20eeff
  413712:	int    0xec
  413714:	jecxz  0x4136e6
  413716:	mov    BYTE PTR [ebp+0x3b],al
  413719:	xchg   esp,esi
  41371b:	adc    eax,0xf15cfef3
  413720:	fidivr DWORD PTR [ebp+eax*4+0x0]
  413724:	retf   0x6f2c
  413727:	push   edx
  413728:	fdiv   DWORD PTR [esi+0x6b00c5e0]
  41372e:	bound  esi,QWORD PTR [ebx]
  413730:	int    0xf9
  413732:	mov    ds:0x7de8c484,al
  413737:	hlt    
  413738:	in     eax,0x39
  41373a:	cli    
  41373b:	ins    BYTE PTR es:[edi],dx
  41373c:	mov    al,bl
  41373e:	imul   esp
  413740:	mov    bh,0x12
  413742:	test   BYTE PTR [edx-0x6a7c60b0],0xe4
  413749:	dec    esp
  41374a:	mov    bl,0xcd
  41374c:	addr16 jne 0x41379b
  41374f:	test   eax,0x220a0964
  413754:	and    BYTE PTR [edx+0x7ce8babc],dl
  41375a:	mov    dh,0x3b
  41375c:	pusha  
  41375d:	push   eax
  41375e:	push   ss
  41375f:	xor    DWORD PTR [eax+0x5ce89c56],ebp
  413765:	cmp    BYTE PTR [esi],0xa5
  413768:	and    BYTE PTR [edx+0x4e],0xe6
  41376c:	mov    ds:0x6e4efe9e,eax
  413771:	dec    edx
  413772:	dec    ebx
  413773:	adc    esi,DWORD PTR [edx]
  413775:	inc    eax
  413776:	aad    0xcb
  413778:	jp     0x4137e6
  41377a:	xlat   BYTE PTR ds:[ebx]
  41377b:	leave  
  41377c:	jo     0x4136ff
  41377e:	pop    ds
  41377f:	adc    dl,BYTE PTR [esi+esi*1-0x48]
  413783:	repnz enter 0xed8c,0x36
  413788:	cmp    esi,DWORD PTR [edx+0x2e]
  41378b:	push   es
  41378c:	jg     0x413730
  41378e:	sub    bh,BYTE PTR [ebx+ebx*1-0x74]
  413792:	ficomp DWORD PTR [eax-0x2a]
  413795:	xchg   BYTE PTR [ebx-0x15829422],bl
  41379b:	popf   
  41379c:	xchg   DWORD PTR [esi],eax
  41379e:	cmp    ebp,DWORD PTR [eax-0x77e89103]
  4137a4:	fst    DWORD PTR [esi-0xadb242d]
  4137aa:	jne    0x41380b
  4137ac:	js     0x4137ee
  4137ae:	cli    
  4137af:	mov    edi,0x692fcdf6
  4137b4:	pop    edx
  4137b5:	popa   
  4137b6:	inc    edi
  4137b7:	mov    cl,0xad
  4137b9:	and    al,ch
  4137bb:	push   ss
  4137bc:	rcr    BYTE PTR [ebx+0xd],1
  4137bf:	sub    bl,BYTE PTR [edi+edx*1]
  4137c2:	stos   BYTE PTR es:[edi],al
  4137c3:	jne    0x4137e6
  4137c5:	xor    dl,al
  4137c7:	icebp  
  4137c8:	jge    0x41383a
  4137ca:	aad    0x4a
  4137cc:	inc    eax
  4137cd:	popa   
  4137ce:	cli    
  4137cf:	inc    ecx
  4137d0:	es je  0x4137b2
  4137d3:	test   BYTE PTR [ebx],0xfa
  4137d6:	ret    
  4137d7:	or     ch,BYTE PTR [eax]
  4137d9:	test   al,0xc7
  4137db:	sbb    ecx,esi
  4137dd:	jg     0x413774
  4137df:	push   ebx
  4137e0:	adc    ebp,esp
  4137e2:	ja     0x413781
  4137e4:	(bad)  
  4137e5:	and    DWORD PTR [edi-0x34],ebx
  4137e8:	test   al,0x38
  4137ea:	pop    ebp
  4137eb:	sbb    bh,BYTE PTR ds:0x18cc0b34
  4137f1:	mov    ?,WORD PTR [ecx]
  4137f3:	fnstsw WORD PTR [esi-0x5f]
  4137f6:	inc    ecx
  4137f7:	xchg   ebp,eax
  4137f8:	sub    DWORD PTR es:[eax+0x7a],ebx
  4137fc:	jl     0x4137ea
  4137fe:	cmp    ebp,eax
  413800:	inc    eax
  413801:	push   esp
  413802:	sub    eax,0x4ecf3130
  413807:	ret    
  413808:	push   0xffffff8c
  41380a:	bound  esi,QWORD PTR [ebx]
  41380c:	sahf   
  41380d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41380e:	mov    esp,0xa4440ca4
  413813:	ror    DWORD PTR [eax+0x76],0x65
  413817:	sbb    eax,0x98d3602a
  41381c:	icebp  
  41381d:	or     ebx,DWORD PTR [esi-0x7abeed9e]
  413823:	int3   
  413824:	xchg   DWORD PTR [edi],esi
  413826:	in     al,0x9
  413828:	fsubr  QWORD PTR ds:0x28a7dd22
  41382e:	sbb    al,0xe4
  413830:	out    0x40,eax
  413832:	pushf  
  413833:	push   cs
  413834:	cmp    eax,DWORD PTR [ecx]
  413836:	ret    
  413837:	sub    BYTE PTR [ebx],dh
  413839:	mov    ah,0xd9
  41383b:	out    0x7c,eax
  41383d:	inc    esi
  41383e:	pop    eax
  41383f:	sub    al,BYTE PTR [esi]
  413841:	or     DWORD PTR [edi+0x75997a77],0x98eded1f
  41384b:	daa    
  41384c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41384d:	inc    ebx
  41384e:	aaa    
  41384f:	sbb    eax,0x6d401b6b
  413854:	cli    
  413855:	mov    esi,es
  413857:	cli    
  413858:	inc    eax
  413859:	cmp    eax,0x73fdd0e8
  41385e:	mov    ds:0x7b2cdccd,eax
  413863:	int3   
  413864:	jge    0x4138c7
  413866:	std    
  413867:	mov    ebx,0x5af7097e
  41386c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41386d:	cld    
  41386e:	mov    ebp,0x629c2607
  413873:	(bad)  [eax-0x43]
  413876:	sar    al,1
  413878:	cmp    ch,BYTE PTR [esi]
  41387a:	or     DWORD PTR [esi-0x30],esi
  41387d:	stc    
  41387e:	jbe    0x4138d5
  413880:	ss dec ebx
  413882:	adc    DWORD PTR [esi-0x22],ecx
  413885:	pop    es
  413886:	add    esp,DWORD PTR [esi-0x42]
  413889:	inc    esp
  41388a:	push   0x3f8deeb6
  41388f:	ja     0x413875
  413891:	add    BYTE PTR [edx+0x4f],0xad
  413895:	fdiv   DWORD PTR [esi+0x2f341744]
  41389b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41389c:	xor    bh,BYTE PTR [edi]
  41389e:	fcom   QWORD PTR [edx+0x502278c0]
  4138a4:	add    DWORD PTR [ebx+ecx*1+0x24c26d8c],edi
  4138ab:	int    0x22
  4138ad:	pop    ecx
  4138ae:	cs jo  0x4138d7
  4138b1:	add    bh,BYTE PTR ds:0x994d06f5
  4138b7:	int    0xb0
  4138b9:	add    edx,DWORD PTR [edx+0x1d]
  4138bc:	pop    edx
  4138bd:	loop   0x413905
  4138bf:	push   ebx
  4138c0:	(bad)  
  4138c1:	push   ss
  4138c2:	push   ss
  4138c3:	xor    al,0x16
  4138c5:	lods   al,BYTE PTR ds:[esi]
  4138c6:	push   es
  4138c7:	push   ss
  4138c8:	jae    0x413908
  4138ca:	je     0x413872
  4138cc:	test   DWORD PTR [edx],0x6de793ca
  4138d2:	sbb    eax,0x4cea9794
  4138d7:	repnz mov edx,DWORD PTR [edi-0x4630acf3]
  4138de:	mov    ebp,ebx
  4138e0:	icebp  
  4138e1:	ret    0x208b
  4138e4:	mov    edi,0xc239732c
  4138e9:	jbe    0x4138fd
  4138eb:	loope  0x4138ac
  4138ed:	jmp    0x380b:0x43c23b80
  4138f4:	sub    DWORD PTR [edi-0x76],edx
  4138f7:	add    dl,bh
  4138f9:	jae    0x41389d
  4138fb:	shr    DWORD PTR [ebp+0x10],cl
  4138fe:	push   ecx
  4138ff:	jle    0x4138f3
  413901:	rcr    BYTE PTR [ebx-0x79],0x7c
  413905:	cmc    
  413906:	or     al,ah
  413908:	repnz outs dx,BYTE PTR ds:[esi]
  41390a:	xor    dl,BYTE PTR [edx]
  41390c:	bound  ecx,QWORD PTR [esi]
  41390e:	adc    ecx,edx
  413910:	mov    WORD PTR [esp+ecx*1],?
  413913:	out    0x19,eax
  413915:	fadd   QWORD PTR [esi+0x77e9baa3]
  41391b:	xor    eax,0x20
  41391e:	repnz inc esp
  413920:	jnp    0x413913
  413922:	add    edi,DWORD PTR [edi]
  413924:	mul    cl
  413926:	jno    0x41397b
  413928:	lock dec eax
  41392a:	retf   0xd8ae
  41392d:	or     al,cl
  41392f:	lods   al,BYTE PTR ds:[esi]
  413930:	mov    dl,0x40
  413932:	je     0x413935
  413934:	xchg   ebp,eax
  413935:	sahf   
  413936:	mov    ah,0x74
  413938:	in     eax,0xe6
  41393a:	les    edx,FWORD PTR [ecx]
  41393c:	add    DWORD PTR [eax-0x3974346f],eax
  413942:	xchg   edx,eax
  413943:	push   edi
  413944:	push   0xf91f15eb
  413949:	xor    DWORD PTR [edx],edi
  41394b:	xlat   BYTE PTR ds:[ebx]
  41394c:	mov    ?,WORD PTR [ecx+0x24d09f94]
  413952:	or     dh,BYTE PTR [ecx]
  413954:	jbe    0x413945
  413956:	sbb    BYTE PTR [ebx-0x582eeb96],ch
  41395c:	jecxz  0x4139c9
  41395e:	stos   BYTE PTR es:[edi],al
  41395f:	icebp  
  413960:	in     al,0xb4
  413962:	outs   dx,DWORD PTR ds:[esi]
  413963:	pop    edi
  413964:	fldcw  WORD PTR [esi-0x1a]
  413967:	inc    eax
  413968:	jmp    0x4139b4
  41396a:	push   esp
  41396b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41396c:	mov    WORD PTR [eax],?
  41396e:	adc    al,0xa2
  413970:	mov    ecx,DWORD PTR [eax+0x6c]
  413973:	das    
  413974:	sub    al,0x7a
  413976:	mov    dl,0x72
  413978:	in     al,0xcf
  41397a:	mov    al,bl
  41397c:	push   cs
  41397d:	lods   al,BYTE PTR ds:[esi]
  41397e:	or     DWORD PTR [ebx+0x5110a2cd],eax
  413984:	retf   
  413985:	lock iret 
  413987:	test   BYTE PTR es:[edi+0x37719e4a],ch
  41398e:	fwait
  41398f:	repnz sbb DWORD PTR [esi],0x46
  413993:	imul   edx,edi,0xe7e5e5dd
  413999:	xlat   BYTE PTR ds:[ebx]
  41399a:	fwait
  41399b:	dec    esi
  41399c:	jns    0x413928
  41399e:	sbb    esp,DWORD PTR [ecx+eax*4-0x23816bf3]
  4139a5:	test   eax,0x7cfdb8f0
  4139aa:	stos   BYTE PTR es:[edi],al
  4139ab:	xchg   edi,eax
  4139ac:	rol    esp,1
  4139ae:	ficom  DWORD PTR [ebx+0x1]
  4139b1:	sar    BYTE PTR [esi+0x612d02af],cl
  4139b7:	jno    0x413996
  4139b9:	sbb    dl,cl
  4139bb:	div    BYTE PTR cs:[edx-0x65]
  4139bf:	(bad)  
  4139c0:	sbb    al,0xb8
  4139c2:	retf   0x4bf6
  4139c5:	push   es
  4139c6:	std    
  4139c7:	mov    ah,0xf1
  4139c9:	into   
  4139ca:	add    eax,0xc1feb777
  4139cf:	je     0x41396b
  4139d1:	cdq    
  4139d2:	mov    al,BYTE PTR ds:0x3e43d664
  4139d8:	jbe    0x413a03
  4139da:	jmp    0x9b71:0x4e0e206a
  4139e1:	xor    al,0x32
  4139e3:	fnstsw WORD PTR [ebx-0x41fe9988]
  4139e9:	repz push ds
  4139eb:	fsub   QWORD PTR [edi-0x3d1aea28]
  4139f1:	mov    bl,0x8e
  4139f3:	cli    
  4139f4:	cdq    
  4139f5:	sbb    al,0x92
  4139f7:	aad    0x77
  4139f9:	inc    edi
  4139fa:	add    eax,0x212d3dc0
  4139ff:	mov    WORD PTR [ebp+0x607be357],gs
  413a05:	in     al,dx
  413a06:	add    esp,DWORD PTR [edx]
  413a08:	jno    0x413a2e
  413a0a:	js     0x4139e4
  413a0c:	mov    dl,0x1e
  413a0e:	mov    ebp,DWORD PTR [esi-0xb]
  413a11:	push   esi
  413a12:	les    eax,FWORD PTR [eax]
  413a14:	mov    gs,WORD PTR [edx]
  413a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a17:	loope  0x413a2d
  413a19:	enter  0x2a76,0x35
  413a1d:	mov    bh,cl
  413a1f:	jns    0x413a60
  413a21:	cmp    ch,ah
  413a23:	inc    esi
  413a24:	pop    es
  413a25:	je     0x4139ce
  413a27:	push   ebp
  413a28:	pop    ss
  413a29:	inc    edi
  413a2a:	xchg   esp,eax
  413a2b:	push   ecx
  413a2c:	pop    ebp
  413a2d:	(bad)  
  413a2f:	fnsave [edx]
  413a31:	inc    esi
  413a32:	dec    edx
  413a33:	cmp    BYTE PTR [edi+0x7c],bh
  413a36:	sub    BYTE PTR [ebp-0x3c],ch
  413a39:	cs jae 0x413a77
  413a3c:	inc    esi
  413a3d:	push   edi
  413a3e:	mov    esp,0x2f10e7dd
  413a43:	in     eax,dx
  413a44:	cmp    al,0x8e
  413a46:	adc    BYTE PTR [ecx-0x73],dh
  413a49:	inc    esp
  413a4b:	jge    0x413a78
  413a4d:	stos   BYTE PTR es:[edi],al
  413a4e:	dec    esi
  413a4f:	pop    edx
  413a50:	sbb    esi,DWORD PTR [eax]
  413a52:	scas   eax,DWORD PTR es:[edi]
  413a53:	std    
  413a54:	pop    esi
  413a55:	ins    DWORD PTR es:[edi],dx
  413a56:	(bad)  [ecx+0x2e]
  413a59:	inc    esp
  413a5a:	pop    esi
  413a5b:	(bad)  
  413a5d:	jns    0x413a70
  413a5f:	push   0x979503df
  413a64:	add    bl,bh
  413a66:	ret    
  413a67:	into   
  413a68:	retf   0x5e84
  413a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a6c:	dec    ebp
  413a6d:	sbb    al,0xc3
  413a6f:	cdq    
  413a70:	add    BYTE PTR [eax],dh
  413a72:	push   ebp
  413a73:	inc    ecx
  413a74:	jno    0x413a85
  413a76:	xchg   edx,eax
  413a77:	mov    bl,dl
  413a79:	adc    al,0xe5
  413a7b:	cwde   
  413a7c:	out    dx,eax
  413a7d:	fwait
  413a7e:	cli    
  413a7f:	cmc    
  413a80:	cmc    
  413a81:	mov    edi,0x787376e4
  413a86:	mov    ds:0x120f9fc,eax
  413a8b:	xlat   BYTE PTR ds:[ebx]
  413a8c:	in     al,0xe4
  413a8e:	jns    0x413a92
  413a90:	out    dx,eax
  413a91:	or     bh,BYTE PTR gs:[ecx-0x1b]
  413a95:	cmp    DWORD PTR [edi-0x70],ebp
  413a98:	pop    eax
  413a99:	jns    0x413a40
  413a9b:	inc    eax
  413a9c:	or     DWORD PTR [eax+0x235da048],edx
  413aa2:	cmc    
  413aa3:	adc    al,dl
  413aa5:	dec    ebx
  413aa6:	std    
  413aa7:	sbb    edx,0x297964cc
  413aad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aae:	out    dx,eax
  413aaf:	fiadd  WORD PTR [esi-0x3153365]
  413ab5:	lea    esp,[edi+0x3c5fe598]
  413abb:	call   0xfdc67de7
  413ac0:	inc    edi
  413ac1:	dec    esi
  413ac2:	fsubr  QWORD PTR [ebx]
  413ac4:	pop    ebp
  413ac5:	xchg   ecx,eax
  413ac6:	or     BYTE PTR [ebx-0x37],0x77
  413aca:	inc    eax
  413acb:	iret   
  413acc:	(bad)  
  413ace:	inc    ebx
  413acf:	mov    al,0xe1
  413ad1:	sbb    eax,0xad391020
  413ad6:	sbb    BYTE PTR [edx],dl
  413ad8:	mov    bh,0xa9
  413ada:	jmp    FWORD PTR [ebx]
  413adc:	push   edx
  413add:	mov    ds:0xdb498210,al
  413ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ae3:	xlat   BYTE PTR ds:[ebx]
  413ae4:	lahf   
  413ae5:	mov    ah,0x39
  413ae7:	(bad)  
  413ae8:	ins    DWORD PTR es:[edi],dx
  413ae9:	das    
  413aea:	mov    WORD PTR [edx-0x32],?
  413aed:	vpxor  ymm7,ymm2,YMMWORD PTR [ecx+ebp*1]
  413af2:	pop    ds
  413af3:	iret   
  413af4:	sbb    eax,0x2ce38107
  413af9:	add    eax,0x898b5e1d
  413afe:	or     ch,BYTE PTR gs:[esi-0xa]
  413b02:	fiadd  DWORD PTR [esi-0x5a]
  413b05:	iret   
  413b06:	fdiv   QWORD PTR [esi]
  413b08:	push   edi
  413b09:	xlat   BYTE PTR ds:[ebx]
  413b0a:	adc    eax,0x2aa32ccd
  413b0f:	mov    DWORD PTR [edx+esi*1],ecx
  413b12:	js     0x413adb
  413b14:	dec    edi
  413b15:	hlt    
  413b16:	lds    ebx,FWORD PTR [eax+0x4868b147]
  413b1c:	mov    ecx,0xe009a2f9
  413b21:	add    al,0xed
  413b23:	ret    
  413b24:	push   eax
  413b25:	pop    eax
  413b26:	sbb    edi,DWORD PTR cs:[ecx]
  413b29:	mov    ebp,0x23158a0e
  413b2e:	push   edi
  413b2f:	in     eax,0x88
  413b31:	mov    eax,ds:0x505c1820
  413b36:	mov    WORD PTR [ebx+0x77],ss
  413b39:	mov    al,ds:0xd6285fa9
  413b3e:	stos   DWORD PTR es:[edi],eax
  413b3f:	(bad)  
  413b41:	add    eax,0x47f25a19
  413b46:	inc    ebx
  413b47:	stc    
  413b48:	retf   0x83be
  413b4b:	aad    0xa8
  413b4d:	adc    eax,0x130ac5bb
  413b52:	dec    edx
  413b53:	mov    edx,0x146bd3fc
  413b58:	jle    0x413b33
  413b5a:	adc    DWORD PTR ss:[edi+0x3a],ebp
  413b5e:	mov    edx,0xa63c4f19
  413b63:	(bad)  
  413b65:	call   0x7c12eb5e
  413b6a:	and    DWORD PTR [eax-0x2120f2df],edi
  413b70:	cmp    DWORD PTR [edi-0x27],edi
  413b73:	adc    BYTE PTR [ebx+0xbe4d528],cl
  413b79:	mov    dh,0xfa
  413b7b:	dec    edi
  413b7c:	repnz fldcw WORD PTR gs:[esi+0x78]
  413b81:	or     eax,0xc7441fc4
  413b86:	lds    esi,FWORD PTR [edx-0x59]
  413b89:	mov    bl,0x82
  413b8b:	jbe    0x413b57
  413b8d:	ss in  eax,0x4f
  413b90:	pop    edi
  413b91:	push   ecx
  413b92:	dec    esi
  413b93:	lods   al,BYTE PTR ds:[esi]
  413b94:	leave  
  413b95:	push   edx
  413b96:	xor    al,0x6d
  413b98:	jmp    0x880ff4b3
  413b9d:	xchg   ebx,eax
  413b9e:	mov    edx,0xdbaaca52
  413ba3:	xchg   ebp,eax
  413ba4:	(bad)  [edx+0x2d]
  413ba7:	std    
  413ba8:	dec    esi
  413ba9:	ret    
  413baa:	dec    ebx
  413bab:	push   ds
  413bac:	in     al,dx
  413bad:	fprem  
  413baf:	jno    0x413ba4
  413bb1:	ficomp DWORD PTR [esi-0x4c]
  413bb4:	mov    eax,ds:0xff089ac7
  413bb9:	or     ebx,DWORD PTR [ecx-0x234f11e8]
  413bbf:	mov    DWORD PTR [edx+0x3f],ebx
  413bc2:	test   al,0xf
  413bc4:	ss dec ebp
  413bc6:	and    dh,bh
  413bc8:	xlat   BYTE PTR ds:[ebx]
  413bc9:	fisttp WORD PTR [esi]
  413bcb:	pop    ds
  413bcc:	(bad)  
  413bcd:	fistp  QWORD PTR [edi-0x31836ea6]
  413bd3:	inc    esp
  413bd4:	inc    BYTE PTR [ebp-0x71]
  413bd7:	fstp   TBYTE PTR [edi-0x29]
  413bda:	in     al,0x35
  413bdc:	fbld   TBYTE PTR [edx+ebp*2-0x40]
  413be0:	lods   eax,DWORD PTR ds:[esi]
  413be1:	js     0x413c1d
  413be3:	in     al,dx
  413be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413be5:	dec    edi
  413be6:	pushf  
  413be7:	mov    al,0x2b
  413be9:	cmp    eax,0x3a7277cf
  413bee:	in     eax,dx
  413bef:	lds    ebx,FWORD PTR [eax+eax*1-0x52]
  413bf3:	xor    esi,DWORD PTR [eax+0x38e0f147]
  413bf9:	xchg   BYTE PTR [esi-0xbff2753],al
  413bff:	test   BYTE PTR [ebp+0x2af74bb2],al
  413c05:	aas    
  413c06:	dec    edi
  413c07:	ss (bad) 
  413c09:	sbb    ebp,DWORD PTR [eax]
  413c0b:	inc    ecx
  413c0c:	inc    ebx
  413c0d:	repz ret 0x7edc
  413c11:	out    dx,eax
  413c12:	cs ins BYTE PTR es:[edi],dx
  413c14:	jmp    0x43f6:0xe532529c
  413c1b:	fadd   st,st(6)
  413c1d:	xor    al,0x90
  413c1f:	not    BYTE PTR [ecx]
  413c21:	mov    dh,0xf7
  413c23:	xlat   BYTE PTR ds:[ebx]
  413c24:	sbb    esi,DWORD PTR [ebx+0x2f]
  413c27:	das    
  413c28:	or     BYTE PTR [edi+0x13],ah
  413c2b:	test   esp,ebp
  413c2d:	xor    eax,0x38e4f72f
  413c32:	pop    esi
  413c33:	rcr    DWORD PTR [edi+ebp*8],1
  413c36:	add    eax,0xc0bf1ea2
  413c3b:	ja     0x413bc2
  413c3d:	cmp    BYTE PTR [eax+ebp*8+0x18df97bb],0xfe
  413c45:	sub    ebx,DWORD PTR ds:0x4a36acab
  413c4b:	adc    DWORD PTR [esi],ebp
  413c4d:	dec    eax
  413c4e:	jns    0x413bff
  413c50:	mov    eax,0xee47a1d9
  413c55:	push   0xc35cdf64
  413c5a:	imul   esp,DWORD PTR [ecx],0xbb0fcee1
  413c60:	popf   
  413c61:	mov    ds:0xc4f142d9,eax
  413c66:	pop    edi
  413c67:	ret    
  413c68:	scas   eax,DWORD PTR es:[edi]
  413c69:	push   es
  413c6a:	jmp    0x413c97
  413c6c:	mov    al,0xa8
  413c6e:	push   cs
  413c6f:	icebp  
  413c70:	mov    dh,0x67
  413c72:	inc    ebp
  413c73:	sub    DWORD PTR [edi-0x36b020a8],ecx
  413c79:	loop   0x413c4b
  413c7b:	or     DWORD PTR [eax],eax
  413c7d:	xchg   esi,eax
  413c7e:	mov    DWORD PTR [edx],ebp
  413c80:	push   0x79
  413c82:	mov    cl,0x95
  413c84:	cmp    BYTE PTR [eax+0x3d],cl
  413c87:	add    dl,ah
  413c89:	xlat   BYTE PTR ds:[ebx]
  413c8a:	xchg   edi,eax
  413c8b:	sahf   
  413c8c:	pop    edi
  413c8d:	cli    
  413c8e:	push   ds
  413c8f:	mov    esi,0x12cd48d5
  413c94:	fisub  DWORD PTR [ebx-0x28164cc4]
  413c9a:	mov    eax,ds:0xa55b790c
  413c9f:	ss jne 0x413c5e
  413ca2:	mov    BYTE PTR [edx-0x4e],dl
  413ca5:	test   al,0xc8
  413ca7:	dec    edx
  413ca8:	lods   eax,DWORD PTR ds:[esi]
  413ca9:	stos   BYTE PTR es:[edi],al
  413caa:	(bad)  
  413cac:	xchg   ebx,eax
  413cad:	vpavgw ymm6{k3}{z},ymm2,DWORD PTR [ebp+0x108]{1to8}
  413cb4:	jns    0x413d22
  413cb6:	or     BYTE PTR [edx],ah
  413cb8:	in     eax,dx
  413cb9:	jnp    0x413c67
  413cbb:	cmp    DWORD PTR [edx+0x1f421f71],edx
  413cc1:	push   esp
  413cc2:	(bad)  ss:0x2eb3bf8c
  413cc9:	call   0xec82:0xb1834694
  413cd0:	jns    0x413d42
  413cd2:	loop   0x413cc2
  413cd4:	std    
  413cd5:	rcl    bh,cl
  413cd7:	test   al,0xd0
  413cd9:	(bad)  
  413cdb:	outs   dx,BYTE PTR ds:[esi]
  413cdc:	out    0x45,al
  413cde:	clc    
  413cdf:	jnp    0x413ca8
  413ce1:	mov    cl,0xdc
  413ce3:	imul   ecx,ecx,0x12bc4455
  413ce9:	sub    ch,BYTE PTR [esi+0x661d33bc]
  413cef:	shl    DWORD PTR [ebx+ebx*2],1
  413cf2:	dec    esp
  413cf3:	aad    0x5b
  413cf5:	ja     0x413c93
  413cf7:	test   DWORD PTR [ecx-0x71],0xf5c3580e
  413cfe:	nop
  413cff:	sahf   
  413d00:	jp     0x413d26
  413d02:	jne    0x413c9b
  413d04:	jge    0x413d5c
  413d06:	mov    al,ds:0x2ab3e691
  413d0b:	push   esi
  413d0c:	xchg   esp,eax
  413d0d:	popf   
  413d0e:	cld    
  413d0f:	ins    BYTE PTR es:[edi],dx
  413d10:	mov    ebx,0x460e7526
  413d15:	add    ebp,eax
  413d17:	fadd   DWORD PTR [ebx+0x66bd7aab]
  413d1d:	mov    al,0xbe
  413d1f:	shl    BYTE PTR [edx+0x60ca537f],cl
  413d25:	das    
  413d26:	test   eax,0x410bf409
  413d2b:	add    edi,ebp
  413d2d:	test   eax,0xa08361e2
  413d32:	mov    bl,0xeb
  413d34:	push   edx
  413d35:	imul   BYTE PTR [ebx+0x30]
  413d38:	push   0x23
  413d3a:	cmp    BYTE PTR [esi],dl
  413d3c:	and    al,0xc9
  413d3e:	bound  edx,QWORD PTR [ecx]
  413d40:	shr    BYTE PTR [ebx],0x8
  413d43:	out    dx,al
  413d44:	inc    edi
  413d45:	push   es
  413d46:	cli    
  413d47:	daa    
  413d48:	ret    0xad91
  413d4b:	addr16 aad 0x9e
  413d4e:	mov    ds:0x85a6fe57,al
  413d53:	or     BYTE PTR [ebp+esi*4+0x4c],0x45
  413d58:	mov    ds:0xa6eb6624,eax
  413d5d:	push   ds
  413d5e:	dec    edi
  413d5f:	mov    ebp,0x3b23ba11
  413d64:	and    eax,DWORD PTR [esp+eax*2-0x28]
  413d68:	sub    bh,ch
  413d6a:	mov    dl,0x5c
  413d6c:	cbw    
  413d6e:	ret    
  413d6f:	adc    eax,0xd7b64cc3
  413d74:	int3   
  413d75:	jp     0x413d7a
  413d77:	fcomp  DWORD PTR [eax-0x7d]
  413d7a:	(bad)  
  413d7d:	mov    ah,0x2c
  413d7f:	fs shl esp,1
  413d82:	shr    BYTE PTR [edi],1
  413d84:	outs   dx,BYTE PTR cs:[esi]
  413d86:	mov    ch,0x28
  413d88:	mov    ecx,DWORD PTR [edi]
  413d8a:	jl     0x413d96
  413d8c:	ret    0x1d72
  413d8f:	pop    edx
  413d90:	mov    bl,0x7e
  413d92:	push   edi
  413d93:	inc    ecx
  413d94:	out    dx,eax
  413d95:	and    BYTE PTR [edx+0x613c2ac0],bl
  413d9b:	out    0xbf,al
  413d9d:	call   0x7f62:0xa6b78cfc
  413da4:	scas   eax,DWORD PTR es:[edi]
  413da5:	and    BYTE PTR [edx+0x60940391],dh
  413dab:	xchg   cl,dh
  413dad:	sub    eax,0xb31fc4f
  413db2:	mov    ch,BYTE PTR [edi]
  413db4:	cmp    ecx,DWORD PTR [edi-0x27]
  413db7:	stos   BYTE PTR es:[edi],al
  413db8:	inc    edi
  413db9:	xor    eax,esi
  413dbb:	adc    al,0xaa
  413dbd:	sar    DWORD PTR [edx-0x1a9ecb81],0x7
  413dc4:	(bad)  
  413dc5:	aad    0x8a
  413dc7:	cld    
  413dc8:	shl    dl,1
  413dca:	ret    
  413dcb:	mov    ebx,0xb7dc447
  413dd0:	push   eax
  413dd1:	add    eax,0x4979f839
  413dd6:	push   esp
  413dd7:	or     eax,0x497e4f27
  413ddc:	mov    ecx,0x48fc26b1
  413de1:	cs and cl,0x22
  413de5:	cwde   
  413de6:	xor    al,0x92
  413de8:	sbb    ah,ah
  413dea:	add    edx,ebp
  413dec:	add    al,0x9e
  413dee:	shl    DWORD PTR [ebx],cl
  413df0:	pushf  
  413df1:	popa   
  413df2:	rcr    esp,1
  413df4:	cmp    eax,0x15399d42
  413df9:	mov    dl,0x2a
  413dfb:	add    DWORD PTR [ecx-0xf7d79c4],ebx
  413e01:	ins    BYTE PTR es:[edi],dx
  413e02:	push   ebp
  413e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e04:	pop    eax
  413e05:	xchg   ecx,eax
  413e06:	into   
  413e07:	lods   eax,DWORD PTR ds:[esi]
  413e08:	std    
  413e09:	fild   QWORD PTR [ecx+0x14]
  413e0c:	cmp    al,bl
  413e0e:	cld    
  413e0f:	icebp  
  413e10:	nop
  413e11:	repz test DWORD PTR [ecx+esi*1-0x2d],ebp
  413e16:	and    DWORD PTR [edi],ebx
  413e18:	mov    dl,0xf3
  413e1a:	addr16 jne 0x413dd1
  413e1d:	rcl    DWORD PTR gs:[esi+0x101d7c6c],0x4
  413e25:	mov    ebp,0x6313a343
  413e2a:	jns    0x413e6b
  413e2c:	(bad)  
  413e2d:	mov    al,0x89
  413e2f:	mov    edi,0x93e185ca
  413e34:	lods   al,BYTE PTR ds:[esi]
  413e35:	add    eax,0xc650929e
  413e3a:	mov    al,ds:0x7499077c
  413e3f:	dec    eax
  413e40:	xor    DWORD PTR [ebp+0x66],0xffffffd7
  413e44:	shr    BYTE PTR [ebx+0x2d],cl
  413e47:	mov    ebx,0x845f45a6
  413e4c:	out    0x2a,eax
  413e4e:	push   ds
  413e4f:	jbe    0x413dfa
  413e51:	sub    BYTE PTR [ecx],0x40
  413e54:	mov    cl,0xf1
  413e56:	mov    edx,0x195d5631
  413e5b:	xor    BYTE PTR [edi-0x69],al
  413e5e:	mov    ah,0xa7
  413e60:	jbe    0x413e2e
  413e62:	shl    DWORD PTR [edx-0x12],1
  413e65:	int3   
  413e66:	clc    
  413e67:	mov    ch,0x72
  413e69:	ins    DWORD PTR es:[edi],dx
  413e6a:	rcl    BYTE PTR [esi+0x6c],0x19
  413e6e:	pop    edx
  413e6f:	jnp    0x413ecc
  413e71:	int    0x89
  413e73:	fs sub ebx,ecx
  413e76:	test   al,0xfb
  413e78:	adc    eax,0x1a7f2367
  413e7d:	sub    bh,BYTE PTR [ecx+0x3]
  413e80:	outs   dx,DWORD PTR ds:[esi]
  413e81:	cwde   
  413e82:	in     eax,0x71
  413e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e85:	and    dh,0xcb
  413e88:	frstor [ecx-0x10b1cab2]
  413e8e:	adc    al,0x42
  413e90:	or     eax,0x5b53c0c8
  413e95:	adc    BYTE PTR [ecx+0x3d],ch
  413e98:	lds    ecx,FWORD PTR [eax+0x7bf654cd]
  413e9e:	adc    ebx,DWORD PTR [ebp+0x2b2abe5]
  413ea4:	fwait
  413ea5:	pop    ebp
  413ea6:	ret    0x5830
  413ea9:	ss push ebp
  413eab:	cmp    esi,edx
  413ead:	mov    ds:0xb07b50b0,eax
  413eb2:	dec    esi
  413eb3:	popa   
  413eb4:	rol    DWORD PTR [edx-0xa2af472],0x49
  413ebb:	push   edi
  413ebc:	retf   0xb9f2
  413ebf:	enter  0x92f2,0x9a
  413ec3:	sub    al,0x7e
  413ec5:	test   BYTE PTR [edi+ecx*4-0x68f67b64],0x2c
  413ecd:	jmp    0xf368:0x81ed5147
  413ed4:	shl    DWORD PTR [edi+0x1f0782ff],cl
  413eda:	sti    
  413edb:	adc    cl,ah
  413edd:	out    dx,al
  413ede:	sar    BYTE PTR [ecx],cl
  413ee0:	fisub  WORD PTR ss:[eax-0x5a]
  413ee4:	call   0x5489:0x83696e18
  413eeb:	inc    esp
  413eec:	call   0xd05c622f
  413ef1:	pop    esp
  413ef2:	add    DWORD PTR [eax],edi
  413ef4:	outs   dx,DWORD PTR ds:[esi]
  413ef5:	or     BYTE PTR [edi],bh
  413ef7:	ret    0x6f9c
  413efa:	cvtps2pi mm1,QWORD PTR [eax-0x2a]
  413efe:	pop    edi
  413eff:	fmul   DWORD PTR [edx-0x4f]
  413f02:	jl     0x413f33
  413f04:	xchg   ebp,eax
  413f05:	pop    esi
  413f06:	(bad)  
  413f07:	daa    
  413f08:	sub    DWORD PTR [esi-0x1a437427],esp
  413f0e:	xchg   edx,eax
  413f0f:	shr    DWORD PTR [edx+0x5614a7a8],0x84
  413f16:	js     0x413f58
  413f18:	adc    dh,BYTE PTR [esi]
  413f1a:	or     al,0xfb
  413f1c:	loopne 0x413eca
  413f1e:	ins    BYTE PTR es:[edi],dx
  413f1f:	pop    ds
  413f20:	mov    BYTE PTR [ebp-0x6c],dl
  413f23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f24:	xchg   DWORD PTR [edx-0x5],esi
  413f27:	push   0xffffffe7
  413f29:	and    BYTE PTR [esi-0x30],ah
  413f2c:	imul   edi,ebx,0xffffffd5
  413f2f:	or     DWORD PTR [eax+0x107b5752],edx
  413f35:	sub    edi,DWORD PTR [esi+0x64]
  413f38:	retf   
  413f39:	rcr    DWORD PTR [edi+0x9f95266],0x7b
  413f40:	push   0xffffffe3
  413f42:	and    bl,BYTE PTR [ebx+0x20]
  413f45:	push   edi
  413f46:	add    eax,0x10625837
  413f4b:	mov    ah,0x4a
  413f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f4e:	pop    edx
  413f4f:	jo     0x413f21
  413f51:	out    0x20,eax
  413f53:	out    dx,eax
  413f54:	and    DWORD PTR [ecx],0xfffffff9
  413f57:	xor    eax,DWORD PTR [esi-0x72b6e935]
  413f5d:	pusha  
  413f5e:	pusha  
  413f5f:	call   FWORD PTR [edx+0x2634e4c3]
  413f65:	ret    0xf39a
  413f68:	sub    BYTE PTR [eax+0x4f7d8eed],bh
  413f6e:	cmp    eax,0x6d7601d4
  413f73:	mul    dh
  413f75:	mov    esp,0x8f171c9d
  413f7a:	scas   eax,DWORD PTR es:[edi]
  413f7b:	jle    0x413fd2
  413f7d:	dec    ebx
  413f7e:	push   ds
  413f7f:	xor    bl,dh
  413f81:	aam    0xb7
  413f83:	fwait
  413f84:	and    eax,0xa7d4d81
  413f89:	rcl    BYTE PTR [edi-0x71],cl
  413f8c:	and    eax,0xd9936e0b
  413f91:	mov    ch,0xae
  413f93:	sbb    esp,DWORD PTR [eax-0x7]
  413f96:	lods   al,BYTE PTR ds:[esi]
  413f97:	mov    esp,0x73ffcbf2
  413f9c:	xor    al,0xc4
  413f9e:	shr    DWORD PTR [ebp+esi*2-0x18a2066e],cl
  413fa5:	lods   al,BYTE PTR ds:[esi]
  413fa6:	xchg   ebp,eax
  413fa7:	shl    bl,cl
  413fa9:	xor    esi,DWORD PTR [ebp+0x18]
  413fac:	inc    esi
  413fad:	mov    BYTE PTR [edx-0x66],0x1b
  413fb1:	adc    al,dl
  413fb3:	mov    ds:0x567a38cc,al
  413fb8:	daa    
  413fb9:	fs popf 
  413fbb:	test   BYTE PTR [ecx+0x407188b5],bl
  413fc1:	inc    esi
  413fc2:	outs   dx,DWORD PTR ss:[si]
  413fc5:	scas   eax,DWORD PTR es:[edi]
  413fc6:	sbb    ah,al
  413fc8:	nop
  413fc9:	xchg   edi,eax
  413fca:	jp     0x413f9a
  413fcc:	sar    DWORD PTR [edx],0xdf
  413fcf:	lods   al,BYTE PTR ds:[esi]
  413fd0:	jne    0x413f81
  413fd2:	pop    es
  413fd3:	sahf   
  413fd4:	or     DWORD PTR [ebx],edi
  413fd6:	add    DWORD PTR ds:0x17c279fe,esp
  413fdc:	dec    edx
  413fdd:	mov    eax,0x3b69e0e6
  413fe2:	pop    ebp
  413fe3:	xlat   BYTE PTR ds:[ebx]
  413fe4:	mov    ds:0xc5d6368c,eax
  413fe9:	or     BYTE PTR [ecx-0x3],ah
  413fec:	xchg   edx,eax
  413fed:	sbb    eax,DWORD PTR [ecx+0x4]
  413ff0:	enter  0x4991,0x0
  413ff4:	daa    
  413ff5:	adc    BYTE PTR [ecx+0x5a80007f],cl
  413ffb:	in     al,0x9a
  413ffd:	xor    al,0x93
  413fff:	aad    0x38
  414001:	mov    gs,esp
  414003:	and    BYTE PTR [ecx+0x46],ch
  414006:	in     al,dx
  414007:	out    0x6b,eax
  414009:	aam    0xa8
  41400b:	and    ebx,DWORD PTR ds:0x83fbc7e6
  414011:	test   DWORD PTR [ebx-0x1a],0x31e23e17
  414018:	or     dl,BYTE PTR ds:0x1215675e
  41401e:	cli    
  41401f:	mov    bh,0x3c
  414021:	aaa    
  414022:	pop    edi
  414023:	add    ebp,DWORD PTR [edi]
  414025:	jo     0x413fe1
  414027:	out    0xf1,eax
  414029:	or     al,0x9b
  41402b:	imul   ebp,DWORD PTR [ecx],0x73
  41402e:	mov    cl,0x1e
  414030:	push   cs
  414031:	mov    eax,0x983726d
  414036:	push   esi
  414037:	adc    eax,ecx
  414039:	(bad)  
  41403a:	out    0x7b,eax
  41403c:	popf   
  41403d:	or     DWORD PTR [ebp-0x77],ebx
  414040:	jmp    0xa526d117
  414045:	ror    DWORD PTR [esi-0xb40362b],1
  41404b:	add    eax,0x68bfe852
  414050:	push   ebp
  414051:	or     DWORD PTR [edx+0x25],ebp
  414054:	xchg   BYTE PTR [eax],ah
  414056:	pusha  
  414057:	ds push 0x2a0ad2b8
  41405d:	and    edi,ebp
  41405f:	dec    edi
  414060:	pop    ss
  414061:	mov    ah,ah
  414063:	and    dl,al
  414065:	int    0xb3
  414067:	and    ebp,ecx
  414069:	jnp    0x4140e5
  41406b:	jnp    0x414007
  41406d:	out    0xad,eax
  41406f:	sub    al,0xf8
  414071:	and    al,0x15
  414073:	mov    bl,BYTE PTR ds:0xba43f81a
  414079:	sbb    esp,ebp
  41407b:	pop    edx
  41407c:	fild   WORD PTR [edx]
  41407e:	adc    bl,BYTE PTR [edx+edi*1-0x67]
  414082:	push   ds
  414083:	cmp    BYTE PTR [edx+0x39cb0078],ch
  414089:	(bad)  
  41408b:	cmp    BYTE PTR [esi],0xe7
  41408e:	scas   al,BYTE PTR es:[edi]
  41408f:	mov    ds:0xba42a1af,eax
  414094:	neg    DWORD PTR [edx-0x525d3cbd]
  41409a:	test   BYTE PTR [eax+0x78],0xf6
  41409e:	push   cs
  41409f:	adc    eax,0x680cb998
  4140a4:	fwait
  4140a5:	jecxz  0x41410c
  4140a7:	push   ebx
  4140a8:	mov    eax,ds:0x7210aac2
  4140ad:	fimul  WORD PTR ds:0xb6aab4e9
  4140b3:	or     cl,BYTE PTR ds:0xdf7a6721
  4140b9:	add    BYTE PTR [ecx-0x687b48a1],bl
  4140bf:	dec    edi
  4140c0:	lods   eax,DWORD PTR ds:[esi]
  4140c1:	add    bl,dh
  4140c3:	sahf   
  4140c4:	adc    ebx,DWORD PTR [ebp+0x1]
  4140c7:	mov    ah,BYTE PTR [esi+0x40]
  4140ca:	fcomp  DWORD PTR [ecx-0x56]
  4140cd:	ja     0x414082
  4140cf:	pop    esi
  4140d0:	(bad)  
  4140d1:	pop    ebx
  4140d2:	fsubr  st(1),st
  4140d4:	scas   al,BYTE PTR es:[edi]
  4140d5:	mov    ?,WORD PTR [ebx]
  4140d7:	sub    bh,BYTE PTR [eax+esi*2-0x57305cb0]
  4140de:	(bad)  
  4140df:	out    0x5a,eax
  4140e1:	xchg   ecx,eax
  4140e2:	mov    bh,0x5a
  4140e4:	ss cmc 
  4140e6:	retf   
  4140e7:	enter  0xf100,0x62
  4140eb:	jo     0x4140e4
  4140ed:	test   BYTE PTR [ebp-0x1868de1b],cl
  4140f3:	into   
  4140f4:	gs fs call 0xa75f:0xf416dbeb
  4140fd:	adc    BYTE PTR [edi-0x783daa67],bh
  414103:	fs mov bl,0x9
  414106:	or     al,0x6
  414108:	(bad)  
  414109:	jbe    0x4140d0
  41410b:	jp     0x4140c2
  41410d:	into   
  41410e:	lea    eax,fs:[eax]
  414111:	loopne 0x414152
  414113:	scas   eax,DWORD PTR es:[edi]
  414114:	cdq    
  414115:	icebp  
  414116:	retf   
  414117:	mov    ds:0xc5a628f1,eax
  41411c:	ins    BYTE PTR es:[edi],dx
  41411d:	sbb    ch,dh
  41411f:	xlat   BYTE PTR ds:[ebx]
  414120:	or     al,0xb
  414122:	xor    eax,0x911348b8
  414127:	popf   
  414128:	enter  0xf8bc,0xec
  41412c:	sbb    bh,BYTE PTR [edx]
  41412e:	dec    edx
  41412f:	cli    
  414130:	out    dx,eax
  414131:	jae    0x41413d
  414133:	or     DWORD PTR [esi],ecx
  414135:	dec    eax
  414136:	call   0x25be29dd
  41413b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41413c:	xchg   ebx,eax
  41413d:	dec    edi
  41413e:	jg     0x414157
  414140:	adc    eax,0x6d2063f3
  414145:	in     al,0x9a
  414147:	scas   eax,DWORD PTR es:[edi]
  414148:	not    DWORD PTR [ecx-0x56e6b455]
  41414e:	or     edx,ebx
  414150:	push   ss
  414151:	dec    edx
  414152:	jb     0x4141b0
  414154:	push   edi
  414155:	or     al,0x2d
  414157:	imul   ebp,DWORD PTR ss:[ecx],0x3b
  41415b:	push   es
  41415c:	xchg   edi,eax
  41415d:	mov    al,0xf2
  41415f:	push   ebp
  414160:	cmc    
  414161:	pop    edx
  414162:	mov    ecx,esp
  414164:	aas    
  414165:	in     al,dx
  414166:	ret    0x4bb2
  414169:	push   esp
  41416a:	cwde   
  41416b:	mov    ebx,0x51751ccf
  414170:	pop    eax
  414171:	repnz inc ebp
  414173:	adc    esi,DWORD PTR [edi-0x13bd6a9c]
  414179:	inc    edi
  41417a:	jl     0x414191
  41417c:	shl    ebx,cl
  41417e:	adc    eax,0x1f035b41
  414183:	dec    ebx
  414184:	pop    ebx
  414185:	pop    ebp
  414186:	fimul  WORD PTR [eax]
  414188:	cwde   
  414189:	into   
  41418a:	sbb    dh,bh
  41418c:	cmp    bh,dh
  41418e:	lea    edx,[edx+0x68]
  414191:	inc    BYTE PTR [eax+0x59]
  414194:	ja     0x414191
  414196:	je     0x414126
  414198:	dec    eax
  414199:	jne    0x414153
  41419b:	test   eax,0x344432a4
  4141a0:	fwait
  4141a1:	adc    BYTE PTR [ebp-0x39f235f8],dl
  4141a7:	push   edi
  4141a8:	jge    0x414177
  4141aa:	cwde   
  4141ab:	mov    esp,0xbb6e0d2
  4141b0:	pop    esi
  4141b1:	jg     0x4141e9
  4141b3:	xchg   esi,eax
  4141b4:	jl     0x414214
  4141b6:	pushf  
  4141b7:	xlat   BYTE PTR ds:[ebx]
  4141b8:	and    ebp,DWORD PTR [edx+0x73]
  4141bb:	ret    
  4141bc:	xchg   edi,eax
  4141bd:	mov    eax,0xca3edf47
  4141c2:	stos   DWORD PTR es:[edi],eax
  4141c3:	and    ebp,DWORD PTR [edi+0xa8b9653]
  4141c9:	mov    es,WORD PTR [ebx-0x41141e64]
  4141cf:	sub    bl,BYTE PTR [esi+0x2d]
  4141d2:	test   eax,0xcf9a70a6
  4141d7:	push   ecx
  4141d8:	push   eax
  4141d9:	cld    
  4141da:	scas   al,BYTE PTR es:[edi]
  4141db:	jg     0x4141ee
  4141dd:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4141df:	test   dh,cl
  4141e1:	mov    edx,0xf30288f5
  4141e6:	jno    0x414178
  4141e8:	jbe    0x4141cc
  4141ea:	int    0x97
  4141ec:	int    0xfa
  4141ee:	inc    ebx
  4141ef:	sbb    ch,BYTE PTR [eax+eax*1-0x4828454a]
  4141f6:	dec    ebx
  4141f7:	(bad)  
  4141f8:	std    
  4141f9:	pusha  
  4141fa:	lahf   
  4141fb:	jno    0x41422e
  4141fd:	mov    ds:0x18c6bb5f,eax
  414202:	les    esi,FWORD PTR [edx]
  414204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414205:	cmc    
  414206:	jne    0x4141c7
  414208:	pop    ds
  414209:	mov    ch,0xf5
  41420b:	aaa    
  41420c:	icebp  
  41420d:	cwde   
  41420e:	test   al,0x28
  414210:	or     eax,0xf3d4467
  414215:	cmc    
  414216:	dec    ebx
  414217:	cld    
  414218:	push   edx
  414219:	retf   
  41421a:	aad    0x9c
  41421c:	inc    edi
  41421d:	dec    ecx
  41421e:	mov    edx,0x50c411b9
  414223:	outs   dx,BYTE PTR ds:[esi]
  414224:	mov    BYTE PTR [ebx],bl
  414226:	mov    al,0xdf
  414228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414229:	adc    cl,BYTE PTR ds:0x599e449
  41422f:	std    
  414230:	jle    0x4141e7
  414232:	popa   
  414233:	cvtdq2ps xmm6,XMMWORD PTR [esi+eiz*2]
  414237:	int    0xd1
  414239:	mov    ecx,0x90b6daa0
  41423e:	in     al,0x38
  414240:	ds aas 
  414242:	fld    TBYTE PTR [edi-0x19]
  414245:	inc    edi
  414246:	ins    BYTE PTR es:[edi],dx
  414247:	cli    
  414248:	push   es
  414249:	push   ds
  41424a:	outs   dx,DWORD PTR ds:[esi]
  41424b:	pop    edx
  41424c:	inc    ecx
  41424d:	outs   dx,DWORD PTR ds:[esi]
  41424e:	dec    eax
  41424f:	arpl   bp,ax
  414251:	push   ebp
  414252:	jnp    0x414266
  414254:	xchg   esp,eax
  414255:	pop    edx
  414256:	xor    BYTE PTR [eax+0x76],0x80
  41425a:	fnstsw WORD PTR [ebp-0x64]
  41425d:	cmp    BYTE PTR [edi-0x8],cl
  414260:	out    dx,eax
  414261:	test   BYTE PTR [ebx-0x1f],al
  414264:	jl     0x414244
  414266:	mov    esi,0x11ae2ce0
  41426b:	sub    ebp,DWORD PTR [ecx]
  41426d:	cmp    al,0x3f
  41426f:	jno    0x41421b
  414271:	sahf   
  414272:	inc    ecx
  414273:	jb     0x414207
  414275:	(bad)  
  414276:	xchg   ecx,eax
  414277:	(bad)  
  414278:	mov    ds,WORD PTR [ebx]
  41427a:	mov    bl,0x9
  41427c:	popa   
  41427d:	sbb    al,BYTE PTR [esi+0x12]
  414280:	mov    edx,0xc4fea7b3
  414285:	mov    edi,0xb0558d63
  41428a:	and    DWORD PTR [ecx+0x7f],edx
  41428d:	repz inc esi
  41428f:	imul   edx,DWORD PTR [edx+0x68],0x2
  414293:	mov    ds,WORD PTR [eax-0x5e]
  414296:	mov    ?,WORD PTR [edx]
  414298:	cmp    DWORD PTR [edx+edi*4+0x6802cdb2],ecx
  41429f:	(bad)  
  4142a0:	out    0xa9,eax
  4142a2:	or     esi,DWORD PTR [ecx]
  4142a4:	out    dx,eax
  4142a5:	cs or  edx,ebp
  4142a8:	mov    edi,0x61cd5125
  4142ad:	repnz cs mov eax,0x8db18d22
  4142b4:	cmp    bh,BYTE PTR [eax+0x54781206]
  4142ba:	xchg   ecx,eax
  4142bb:	jno    0x414253
  4142bd:	mov    ds,WORD PTR [ecx+0x2d]
  4142c0:	mov    WORD PTR [ebx+ebx*8+0x7874fe47],gs
  4142c7:	mov    edi,0xb9b7bfb2
  4142cc:	iret   
  4142cd:	jmp    0x414302
  4142cf:	fs scas al,BYTE PTR es:[edi]
  4142d1:	mov    ch,0x80
  4142d3:	pop    edx
  4142d4:	and    edx,edi
  4142d6:	popa   
  4142d7:	(bad)  
  4142d8:	xor    al,0xf7
  4142da:	xchg   ecx,eax
  4142db:	mov    BYTE PTR [edi-0x7c128a5d],cl
  4142e1:	mov    ah,0x71
  4142e3:	jno    0x41434c
  4142e5:	dec    esi
  4142e6:	out    dx,eax
  4142e7:	dec    eax
  4142e8:	mov    edx,0xf0b446c7
  4142ed:	aas    
  4142ee:	sbb    eax,0x2b3c05e5
  4142f3:	jg     0x414315
  4142f5:	sbb    esi,esi
  4142f7:	std    
  4142f8:	and    al,0x91
  4142fa:	test   eax,0x3929a4ea
  4142ff:	mov    eax,0x77be6244
  414304:	mov    ebx,0x864f850d
  414309:	pop    eax
  41430a:	or     al,0xfe
  41430c:	scas   al,BYTE PTR es:[edi]
  41430d:	push   ss
  41430e:	popa   
  41430f:	call   0x7b897e0f
  414314:	mov    eax,0x5038291f
  414319:	imul   ecx,DWORD PTR [edx],0x4fb05760
  41431f:	(bad)  
  414320:	scas   al,BYTE PTR es:[edi]
  414321:	sbb    al,0x12
  414323:	xchg   dl,ah
  414325:	cdq    
  414326:	pop    edi
  414327:	jp     0x41437c
  414329:	js     0x4142f4
  41432b:	jo     0x414318
  41432d:	test   eax,0x4ed442b3
  414332:	mov    esi,0x86ec22e3
  414337:	stc    
  414338:	inc    ebx
  414339:	jae    0x41430d
  41433b:	(bad)  
  41433c:	bound  ebp,QWORD PTR [ebx-0x3f]
  41433f:	sbb    eax,0x8c7758f3
  414344:	enter  0x352a,0xaa
  414348:	mov    cl,0x7e
  41434a:	and    ecx,DWORD PTR [ecx+ebx*2]
  41434d:	mov    esi,0x38a536b1
  414352:	push   0x2eb6489f
  414357:	mov    edi,0xf94122e5
  41435c:	xchg   ebx,ebx
  41435e:	jnp    0x414362
  414360:	sbb    eax,DWORD PTR [esi]
  414362:	shl    cl,cl
  414364:	jbe    0x414318
  414366:	ins    BYTE PTR es:[edi],dx
  414367:	add    dh,BYTE PTR [ebp+0x168a1fd8]
  41436d:	test   BYTE PTR [eax-0x5f],cl
  414370:	jg     0x41431b
  414372:	mov    esp,0x42f494ab
  414377:	pushf  
  414378:	pop    ebp
  414379:	mov    esi,0x5c7cc54f
  41437e:	mov    eax,ds:0x8e1feda
  414383:	stos   BYTE PTR es:[edi],al
  414384:	adc    eax,0xcf0ce66c
  414389:	add    edi,DWORD PTR [eax-0x2ba9f9f5]
  41438f:	into   
  414390:	das    
  414391:	xor    DWORD PTR [edx+0x3a],esp
  414394:	cmp    al,al
  414396:	xchg   ebx,eax
  414397:	shl    DWORD PTR [ecx],cl
  414399:	test   al,0x58
  41439b:	cli    
  41439c:	je     0x414413
  41439e:	pop    edi
  41439f:	sbb    ebx,DWORD PTR [ebx+0x32]
  4143a2:	scas   al,BYTE PTR es:[edi]
  4143a3:	shl    DWORD PTR [edi+0x48],0xf3
  4143a7:	xchg   esp,eax
  4143a8:	loop   0x4143cc
  4143aa:	jbe    0x41439a
  4143ac:	inc    ebx
  4143ad:	jg     0x4143b8
  4143af:	stos   BYTE PTR es:[edi],al
  4143b0:	xor    DWORD PTR [esi],ebp
  4143b2:	imul   esi,DWORD PTR [eax+0x52],0xe5d971d0
  4143b9:	mov    ebx,0x2effb445
  4143be:	aad    0xc
  4143c0:	ds (bad) 
  4143c2:	push   DWORD PTR [ecx-0x2113b6f0]
  4143c8:	mov    dl,0xc1
  4143ca:	dec    edi
  4143cb:	sar    BYTE PTR [ebx-0x2f],cl
  4143ce:	adc    DWORD PTR [eax+0x74073670],ecx
  4143d4:	mov    ecx,0xbc3cf4fe
  4143d9:	xor    DWORD PTR [ecx+edx*4],0x61
  4143dd:	enter  0xa181,0xec
  4143e1:	inc    cx
  4143e3:	int3   
  4143e4:	or     edx,ebp
  4143e6:	in     al,0x76
  4143e8:	sar    BYTE PTR ds:0xb968e8c8,1
  4143ee:	leave  
  4143ef:	pusha  
  4143f0:	outs   dx,BYTE PTR ds:[esi]
  4143f1:	dec    edi
  4143f2:	push   ds
  4143f3:	out    0xdf,al
  4143f5:	pushf  
  4143f6:	out    dx,eax
  4143f7:	push   0x21
  4143f9:	xor    al,0xcf
  4143fb:	loop   0x4143cb
  4143fd:	std    
  4143fe:	je     0x4143a7
  414400:	xor    BYTE PTR [ecx+0x4ab7c55d],0x5
  414407:	std    
  414408:	and    ah,BYTE PTR [edx]
  41440a:	mov    WORD PTR [edi+0x61],fs
  41440d:	mov    WORD PTR [edi+0x816ed5e],di
  414414:	xchg   edx,eax
  414415:	ins    DWORD PTR es:[edi],dx
  414416:	pop    esi
  414417:	cmp    al,0x62
  414419:	sbb    al,0xc2
  41441b:	pop    ecx
  41441c:	lahf   
  41441d:	jno    0x41446b
  41441f:	push   esi
  414420:	outs   dx,DWORD PTR ds:[esi]
  414421:	pop    edi
  414422:	je     0x414466
  414424:	sbb    dl,dh
  414426:	pop    edi
  414427:	mov    DWORD PTR [edi],0xc6d29ab4
  41442d:	jae    0x41447e
  41442f:	and    DWORD PTR [ecx-0x2d],ebx
  414432:	mov    BYTE PTR [eax+0x1d],ah
  414435:	fcom   DWORD PTR [eax]
  414437:	ja     0x4143ce
  414439:	fwait
  41443a:	sbb    eax,0x80611cfd
  41443f:	aas    
  414440:	mov    bh,0xfc
  414442:	es and dh,ch
  414445:	fdiv   DWORD PTR [ebp+0x49]
  414448:	push   eax
  414449:	pop    ss
  41444a:	mov    DWORD PTR [ebx],ebp
  41444c:	cwde   
  41444d:	fidiv  WORD PTR [edx+0x59]
  414450:	hlt    
  414451:	cmp    esi,DWORD PTR [ebp-0x109727ec]
  414457:	cdq    
  414458:	and    esp,DWORD PTR [ebx]
  41445a:	mov    ds:0x7bb13908,eax
  41445f:	jg     0x4144dc
  414461:	(bad)  
  414462:	rol    BYTE PTR [edi+0x7493ce00],1
  414468:	stos   DWORD PTR es:[edi],eax
  414469:	lds    edi,FWORD PTR [ecx+0x56]
  41446c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41446d:	mov    BYTE PTR [ecx-0x71],0xc9
  414471:	push   ds
  414472:	jmp    0xa3b0:0xefa5e683
  414479:	repnz lahf 
  41447b:	fld    st(3)
  41447d:	xchg   esi,eax
  41447e:	cdq    
  41447f:	mov    eax,eax
  414481:	adc    bh,BYTE PTR [eax-0x51]
  414484:	pop    ds
  414485:	pop    ecx
  414486:	test   BYTE PTR [ecx],ah
  414488:	xchg   ah,ch
  41448a:	sbb    esi,esi
  41448c:	dec    ecx
  41448d:	ret    
  41448e:	push   esi
  41448f:	icebp  
  414490:	jmp    0x3888:0xbe6b0b43
  414497:	mov    ds,ecx
  414499:	data16 or al,0x4d
  41449c:	cmp    eax,0x16cbcf3f
  4144a1:	jno    0x41445a
  4144a3:	shr    DWORD PTR [edx+0x146cbdd6],cl
  4144a9:	pop    esi
  4144aa:	pushf  
  4144ab:	clc    
  4144ac:	out    0x5b,al
  4144ae:	inc    edi
  4144af:	stos   DWORD PTR es:[edi],eax
  4144b0:	mov    eax,0x5d14fa24
  4144b5:	retf   0xfcdf
  4144b8:	ja     0x41447e
  4144ba:	lds    ebx,FWORD PTR [edx]
  4144bc:	loop   0x41450c
  4144be:	pop    edx
  4144bf:	(bad)  
  4144c0:	ss mov dh,0xc6
  4144c3:	bound  eax,QWORD PTR [ebx+ebp*2]
  4144c6:	call   0xf68a82c6
  4144cb:	loope  0x4144e5
  4144cd:	xor    ecx,ebp
  4144cf:	push   cs
  4144d0:	pop    eax
  4144d1:	adc    dh,BYTE PTR [esp+eax*8-0x4e]
  4144d5:	ss pop es
  4144d7:	clc    
  4144d8:	loop   0x41445d
  4144da:	xor    DWORD PTR [ecx-0x7402a29],0x3e8dad0d
  4144e4:	and    edx,DWORD PTR [ebx+0x6c6652df]
  4144ea:	add    eax,0x61a481d8
  4144ef:	ss hlt 
  4144f1:	cwde   
  4144f2:	and    al,0x92
  4144f4:	arpl   WORD PTR [esi-0x6b],si
  4144f7:	js     0x4144f6
  4144f9:	mov    edi,0xa0865e48
  4144fe:	lea    eax,[edi-0x2b]
  414501:	push   ecx
  414502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414503:	sub    edi,DWORD PTR [eax]
  414505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414506:	and    DWORD PTR [esi+0x7de0cc25],0xd34a35f7
  414510:	mov    bh,0x37
  414512:	hlt    
  414513:	sbb    cl,ch
  414515:	and    BYTE PTR ds:0xfacd219d,al
  41451b:	stc    
  41451c:	inc    esi
  41451d:	xor    al,0xe1
  41451f:	add    BYTE PTR [esp+esi*1+0x4da9d452],ch
  414526:	push   ebx
  414527:	sub    al,0x34
  414529:	out    0xb9,eax
  41452b:	adc    al,0xc0
  41452d:	sbb    ebx,DWORD PTR [eax-0x775a4cec]
  414533:	cmp    esi,ebx
  414535:	push   ds
  414536:	pop    esi
  414537:	in     al,0x72
  414539:	or     eax,0xf3984c4a
  41453e:	xor    DWORD PTR [ebx-0x4f],edi
  414541:	pop    ebx
  414542:	sbb    ebp,edi
  414544:	xor    bh,dl
  414546:	mov    ebx,0x37760a9d
  41454b:	add    DWORD PTR [ebx-0x125495b9],esp
  414551:	xlat   BYTE PTR ds:[ebx]
  414552:	adc    al,0x57
  414554:	xchg   edx,eax
  414555:	icebp  
  414556:	mov    esi,0x630e2071
  41455b:	je     0x4145b5
  41455d:	xor    eax,0xc4998904
  414562:	ins    BYTE PTR es:[edi],dx
  414563:	aas    
  414564:	mov    ebx,0xbcd4301d
  414569:	add    al,ch
  41456b:	dec    ebx
  41456c:	pop    edi
  41456d:	add    bl,al
  41456f:	scas   eax,DWORD PTR es:[edi]
  414570:	mov    bh,0xe6
  414572:	jg     0x4145ef
  414574:	imul   esi,DWORD PTR [esi],0xa
  414577:	aad    0x8d
  414579:	pop    ebx
  41457a:	cs or  eax,0x90b941e2
  414580:	stc    
  414581:	mov    ecx,0xd670743
  414586:	inc    eax
  414587:	jo     0x41456c
  414589:	xchg   esi,eax
  41458a:	mov    esi,0x9de973ab
  41458f:	dec    ecx
  414590:	xchg   DWORD PTR [esi+eiz*1],ecx
  414593:	inc    ebp
  414594:	and    BYTE PTR ds:[edx],cl
  414597:	scas   al,BYTE PTR es:[edi]
  414598:	into   
  414599:	push   esi
  41459a:	addr16 mov bx,0x7866
  41459f:	hlt    
  4145a0:	inc    ebx
  4145a1:	aad    0xa4
  4145a3:	cmc    
  4145a4:	inc    esi
  4145a5:	pop    eax
  4145a6:	mov    ebx,DWORD PTR [esi+0x3]
  4145a9:	pop    ss
  4145aa:	push   cs
  4145ab:	mov    eax,0x2251f3b
  4145b0:	test   BYTE PTR [ecx],0x5c
  4145b3:	push   ecx
  4145b4:	adc    DWORD PTR [edx-0x4e95a871],edi
  4145ba:	loop   0x4145de
  4145bc:	call   0x8d16:0x3b43ead0
  4145c3:	lods   al,BYTE PTR ds:[esi]
  4145c4:	adc    eax,0x3bee0548
  4145c9:	dec    edi
  4145ca:	cmp    BYTE PTR [esi-0x776a291b],bl
  4145d0:	hlt    
  4145d1:	mov    esi,esp
  4145d3:	mov    al,ds:0x27cf9f53
  4145d8:	sti    
  4145d9:	push   eax
  4145da:	(bad)  
  4145dc:	es (bad) 
  4145de:	jbe    0x414628
  4145e0:	mov    BYTE PTR [eax],dl
  4145e2:	and    al,0x39
  4145e4:	(bad)  
  4145e5:	es js  0x4145bf
  4145e8:	jecxz  0x41456b
  4145ea:	or     edx,ebp
  4145ec:	sbb    DWORD PTR [esi-0x5e],esp
  4145ef:	icebp  
  4145f0:	mov    bh,0xa4
  4145f2:	pop    ebx
  4145f3:	rcr    BYTE PTR [ebp-0x5f],cl
  4145f6:	cmp    eax,0xf50df06b
  4145fb:	lods   eax,DWORD PTR ds:[esi]
  4145fc:	jmp    0x414594
  4145fe:	or     DWORD PTR [edx+0x15],ebx
  414601:	push   0xffffffba
  414603:	mov    DWORD PTR [edi],ebp
  414605:	js     0x4145ac
  414607:	mov    eax,0x1029e873
  41460c:	push   es
  41460d:	mov    ecx,0x1d29737f
  414612:	out    0xa8,al
  414614:	jbe    0x41467c
  414616:	inc    ecx
  414617:	cmp    dh,BYTE PTR [ecx]
  414619:	lods   al,BYTE PTR ds:[esi]
  41461a:	stc    
  41461b:	sub    DWORD PTR [ecx+eax*8],ecx
  41461e:	mov    ch,0xb8
  414620:	mov    ds:0x24926bf4,eax
  414625:	jnp    0x414684
  414627:	cmp    edx,DWORD PTR [esi-0x487708c5]
  41462d:	std    
  41462e:	cmp    al,0x2f
  414630:	push   ecx
  414631:	mov    dh,0xca
  414633:	and    eax,0x3994ade2
  414638:	(bad)
  41463b:	jp     0x4145d8
  41463d:	cmp    BYTE PTR [ebx-0x11],dl
  414640:	into   
  414641:	cwde   
  414642:	mov    edx,0xcf0b31d8
  414647:	push   edi
  414648:	add    eax,0xc489ad89
  41464d:	pushf  
  41464e:	push   ebx
  41464f:	push   esi
  414650:	outs   dx,BYTE PTR ds:[esi]
  414651:	jle    0x414699
  414653:	and    al,0xd0
  414655:	sbb    BYTE PTR [ecx+0x61],dl
  414658:	inc    edi
  414659:	fisttp WORD PTR [edi+eax*8]
  41465c:	rol    BYTE PTR [eax-0x76],1
  41465f:	pop    ebx
  414660:	mov    al,ds:0x4fad723f
  414665:	xor    esi,DWORD PTR [eax+esi*1+0x65e12bf9]
  41466c:	retf   0x66a4
  41466f:	xor    eax,0x5d3dfe31
  414674:	adc    eax,0xba77c094
  414679:	ret    
  41467a:	imul   eax,eax,0x2948612c
  414680:	popa   
  414681:	dec    ebp
  414682:	cmp    ecx,ebx
  414684:	add    eax,0xbee92f29
  414689:	mov    esp,0x47c62051
  41468e:	xchg   esi,eax
  41468f:	(bad)  
  414690:	enter  0x4908,0xf0
  414694:	iret   
  414695:	xchg   ebx,eax
  414696:	xor    edi,edx
  414698:	mov    al,0xef
  41469a:	sbb    BYTE PTR [eax],dl
  41469c:	cmp    DWORD PTR [ebp-0x5203ea61],esp
  4146a2:	xchg   ecx,eax
  4146a3:	aas    
  4146a4:	fisubr DWORD PTR [ebx]
  4146a6:	push   eax
  4146a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146a8:	inc    edi
  4146a9:	int3   
  4146aa:	dec    eax
  4146ab:	pop    ecx
  4146ac:	fld    QWORD PTR [edx]
  4146ae:	mov    WORD PTR [edi],ss
  4146b0:	test   DWORD PTR [edx],0xb2aa981d
  4146b6:	leave  
  4146b7:	adc    DWORD PTR ds:0x698e5741,ecx
  4146bd:	imul   ecx,DWORD PTR [edi-0x17134dfe],0x9b65e8fd
  4146c7:	adc    BYTE PTR [ebp+0xc],ah
  4146ca:	ds jmp 0x4146d6
  4146cd:	mov    edx,DWORD PTR [ebp-0x10d102b1]
  4146d3:	out    0xf,al
  4146d5:	xor    eax,0xd4ee604f
  4146da:	jmp    0x1a62:0x37bd58d1
  4146e1:	rol    dh,1
  4146e3:	inc    edx
  4146e4:	mov    edi,0x32f68c29
  4146e9:	mov    ebx,0x4984505f
  4146ee:	sub    BYTE PTR [ebp-0x62],bl
  4146f1:	dec    edx
  4146f2:	dec    eax
  4146f3:	sub    BYTE PTR [esi-0x294aea55],dl
  4146f9:	jnp    0x414685
  4146fb:	cmp    bh,BYTE PTR [edi-0x20e24b0f]
  414701:	rcr    BYTE PTR [edx],1
  414703:	repnz mov al,0xa9
  414706:	bound  edi,QWORD PTR [ebx]
  414708:	inc    ecx
  414709:	jg     0x4146c9
  41470b:	mul    BYTE PTR [esi]
  41470d:	xchg   ebx,eax
  41470e:	add    DWORD PTR [ebx+edx*8-0xe],eax
  414712:	iret   
  414713:	inc    ebp
  414714:	adc    al,0xe6
  414716:	pop    esp
  414717:	nop
  414718:	jle    0x414733
  41471a:	or     eax,0x9cc896b6
  41471f:	sub    al,0x93
  414721:	sub    dl,al
  414723:	sub    eax,0xded2d1d6
  414728:	jmp    0x6c42:0x5b27fdb0
  41472f:	jmp    0x414769
  414731:	std    
  414732:	stos   BYTE PTR es:[edi],al
  414733:	jne    0x41471a
  414735:	test   bl,bl
  414737:	ret    0x58b7
  41473a:	cmc    
  41473b:	je     0x414728
  41473d:	sahf   
  41473e:	rcr    BYTE PTR [edi+0x6b],cl
  414741:	adc    DWORD PTR [edx+0x37],ecx
  414744:	adc    BYTE PTR [ebx+0x4a],bl
  414747:	test   eax,0x1d35b988
  41474c:	sbb    edx,edi
  41474e:	adc    dl,BYTE PTR [ecx]
  414750:	mov    al,0x4f
  414752:	(bad)  
  414753:	popf   
  414754:	jns    0x4147ad
  414756:	jno    0x4147cb
  414758:	xor    esp,edi
  41475a:	jne    0x41477f
  41475c:	(bad)  
  41475d:	fst    QWORD PTR [esi]
  41475f:	test   edx,ebp
  414761:	xchg   ebp,eax
  414762:	dec    edx
  414763:	es xor eax,0x8fa3c48
  414769:	dec    esp
  41476a:	or     ch,BYTE PTR ds:0xfcf43520
  414770:	pop    eax
  414771:	pop    ebx
  414772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414773:	mov    ebx,0xbdb34df9
  414778:	pop    eax
  414779:	aad    0x26
  41477b:	sbb    BYTE PTR ds:0x7f24e588,0x23
  414782:	xor    ch,ch
  414784:	(bad)  
  414785:	call   0xd8b0c8a1
  41478a:	inc    esp
  41478b:	stos   BYTE PTR es:[edi],al
  41478c:	dec    ebx
  41478d:	jne    0x4147d2
  41478f:	mov    al,ds:0xdbec7fc7
  414794:	cs sahf 
  414796:	dec    esi
  414797:	in     eax,0x47
  414799:	push   0x5e0cbc5e
  41479e:	outs   dx,BYTE PTR ds:[esi]
  41479f:	push   ss
  4147a0:	push   ds
  4147a1:	call   0x9aa67508
  4147a6:	loope  0x414766
  4147a8:	pop    es
  4147a9:	(bad)  [ebx-0x47477ada]
  4147af:	scas   eax,DWORD PTR es:[edi]
  4147b0:	mov    eax,0xbe6cd42a
  4147b5:	lods   al,BYTE PTR ds:[esi]
  4147b6:	test   eax,0x392e0905
  4147bb:	punpcklbw mm0,DWORD PTR ds:0x2b444128
  4147c2:	mov    ah,0x34
  4147c4:	int3   
  4147c5:	push   ebx
  4147c6:	xor    eax,0x9b950a04
  4147cb:	sbb    DWORD PTR [ebp-0x2f],edx
  4147ce:	and    cl,BYTE PTR [edi]
  4147d0:	jbe    0x4147db
  4147d2:	les    ebx,FWORD PTR [eax]
  4147d4:	mov    ds:0xe450d10e,eax
  4147d9:	enter  0x5b0b,0x4d
  4147dd:	test   BYTE PTR [ebx-0xf0979f2],dh
  4147e3:	dec    eax
  4147e4:	loop   0x41482a
  4147e6:	test   eax,0x638b44ee
  4147eb:	test   al,0x9c
  4147ed:	cmp    al,0xad
  4147ef:	enter  0x7c4,0x55
  4147f3:	xor    dh,BYTE PTR [ebp+0x5cac45a7]
  4147f9:	mov    bh,al
  4147fb:	lock fwait
  4147fd:	xor    eax,0xbc7bdb2b
  414802:	xchg   esp,eax
  414803:	stc    
  414804:	cdq    
  414805:	sub    DWORD PTR [eax+esi*4+0x45],0x4d
  41480a:	aad    0x66
  41480c:	(bad)  
  41480d:	leave  
  41480e:	push   es
  41480f:	repz jge 0x41479e
  414812:	addr16 inc ecx
  414814:	call   0x719f558f
  414819:	lock adc dh,ah
  41481c:	mov    edi,0x663991a5
  414821:	(bad)  
  414822:	push   edx
  414823:	enter  0x1c90,0x39
  414827:	push   ds
  414828:	push   edi
  414829:	dec    ecx
  41482a:	pushf  
  41482b:	pop    ds
  41482c:	not    DWORD PTR [esi]
  41482e:	jmp    0xbf04:0x2f1b2791
  414835:	xchg   ecx,eax
  414836:	dec    esi
  414837:	inc    ebp
  414838:	retf   0x17db
  41483b:	xor    al,0xf0
  41483d:	sbb    BYTE PTR [eax+0x26ec148d],ah
  414843:	add    esi,DWORD PTR [esi+0x1686577b]
  414849:	aaa    
  41484a:	push   0xe625b30f
  41484f:	mov    WORD PTR [edi],?
  414851:	adc    dl,0x4f
  414854:	sub    al,0x5a
  414856:	(bad)  
  414857:	in     eax,dx
  414858:	push   ds
  414859:	push   ds
  41485a:	jmp    0x1512782a
  41485f:	sahf   
  414860:	fwait
  414861:	(bad)  
  414862:	mov    DWORD PTR [eax+edx*1-0x1e2f1402],edx
  414869:	aas    
  41486a:	cmp    bh,BYTE PTR [esi-0x5374369f]
  414870:	pusha  
  414871:	lods   eax,DWORD PTR ds:[esi]
  414872:	xchg   ebx,eax
  414873:	mov    eax,gs
  414875:	(bad)  [esi]
  414877:	xchg   edx,eax
  414878:	ja     0x414896
  41487a:	jg     0x414839
  41487c:	lods   eax,DWORD PTR ds:[esi]
  41487d:	xor    BYTE PTR [edi-0x7d],ah
  414880:	cmp    BYTE PTR ds:0xd05ac46,bh
  414886:	scas   al,BYTE PTR es:[edi]
  414887:	add    al,0xc3
  414889:	in     al,0x51
  41488b:	adc    bh,BYTE PTR [edi]
  41488d:	(bad)  
  41488e:	loop   0x414870
  414890:	mov    al,0xa6
  414892:	push   es
  414893:	imul   DWORD PTR [ebx]
  414895:	jl     0x4148ab
  414897:	mov    ebp,0xf0415375
  41489c:	and    DWORD PTR [eax],ecx
  41489e:	jmp    0x7f65:0x2f5c5701
  4148a5:	adc    al,0xf4
  4148a7:	ss scas eax,DWORD PTR es:[edi]
  4148a9:	ja     0x414915
  4148ab:	and    BYTE PTR [ebx],ah
  4148ad:	pusha  
  4148ae:	jne    0x4148c0
  4148b0:	pop    ecx
  4148b1:	loopne 0x41490b
  4148b3:	jae    0xf0c812dd
  4148b9:	or     ch,BYTE PTR [ebx-0x8]
  4148bc:	shl    BYTE PTR [edx+edi*1+0x5b],1
  4148c0:	cmp    BYTE PTR [esi],bh
  4148c2:	retf   0x97b2
  4148c5:	sbb    BYTE PTR [ebx+0x46],bh
  4148c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148c9:	push   esp
  4148ca:	data16 jns 0x4148a1
  4148cd:	sub    edx,edx
  4148cf:	xchg   esp,eax
  4148d0:	imul   edx,DWORD PTR [ebx+0x57],0x10f6b758
  4148d7:	pop    esi
  4148d8:	xchg   edx,eax
  4148d9:	ja     0x414910
  4148db:	pusha  
  4148dc:	js     0x4148a3
  4148de:	push   esp
  4148df:	ss cmc 
  4148e1:	jns    0x4148bc
  4148e3:	push   0x7d
  4148e5:	pop    ebx
  4148e6:	(bad)  
  4148e7:	(bad)  
  4148e8:	(bad)  
  4148e9:	ja     0x41494c
  4148eb:	pop    edi
  4148ec:	inc    ebp
  4148ed:	arpl   WORD PTR [ecx+edi*8],bp
  4148f0:	mov    ah,0x89
  4148f2:	arpl   WORD PTR [ebx],cx
  4148f4:	pop    ss
  4148f5:	xchg   eax,ebp
  4148f7:	pop    eax
  4148f8:	pop    ss
  4148f9:	jle    0x41490d
  4148fb:	xchg   ecx,eax
  4148fc:	jecxz  0x4148e0
  4148fe:	rcr    DWORD PTR [eax+0x73],1
  414901:	dec    esi
  414902:	sbb    ebp,DWORD PTR [eax]
  414904:	mov    esp,0xce751fb5
  414909:	adc    cl,ah
  41490b:	outs   dx,DWORD PTR ds:[esi]
  41490c:	jl     0x414896
  41490e:	push   cs
  41490f:	loope  0x4148fd
  414911:	shl    dh,1
  414913:	inc    ebx
  414914:	rcl    DWORD PTR [ebp-0x4e],1
  414917:	pop    esp
  414918:	bound  ebx,QWORD PTR [edi-0x4b]
  41491b:	and    esi,DWORD PTR [esi-0x768d8614]
  414921:	xlat   BYTE PTR ds:[ebx]
  414922:	sub    cl,ah
  414924:	pop    ecx
  414925:	pop    ebx
  414926:	dec    ecx
  414927:	arpl   WORD PTR [ebx],di
  414929:	push   esi
  41492a:	pop    edi
  41492b:	pop    ss
  41492c:	xchg   ecx,eax
  41492d:	aas    
  41492e:	leave  
  41492f:	sahf   
  414930:	arpl   WORD PTR [ebp-0x13],ax
  414933:	test   BYTE PTR [eax-0x69],0xb6
  414937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414938:	gs push eax
  41493a:	test   DWORD PTR [ebx-0x35],edi
  41493d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41493e:	ret    
  41493f:	mov    ds:0xe1aae07,al
  414944:	or     al,0xe
  414946:	pop    ecx
  414947:	test   al,0xc3
  414949:	(bad)
  41494c:	out    dx,eax
  41494d:	pop    ss
  41494e:	leave  
  41494f:	neg    BYTE PTR [ebx+0x24]
  414952:	jmp    0xaafd:0xa71fc4ca
  414959:	or     BYTE PTR [ecx+0x7128ec72],dh
  41495f:	jns    0x414907
  414961:	lahf   
  414962:	cli    
  414963:	fbld   TBYTE PTR fs:[ecx-0x2e]
  414967:	xchg   edx,eax
  414968:	cs jg  0x414941
  41496b:	mov    al,ds:0x9d415d4b
  414970:	jbe    0x414900
  414972:	ret    0xac07
  414975:	dec    DWORD PTR [ecx-0x1c]
  414978:	push   ebp
  414979:	dec    esi
  41497a:	push   edi
  41497b:	imul   DWORD PTR [edx]
  41497d:	std    
  41497e:	jp     0x4149d8
  414980:	ret    
  414981:	add    DWORD PTR [ebx],eax
  414983:	repz add dh,dl
  414986:	scas   eax,DWORD PTR es:[edi]
  414987:	push   0x2e
  414989:	imul   esp,DWORD PTR [esi+0x42],0xffffffb1
  41498d:	mov    edi,ecx
  41498f:	scas   al,BYTE PTR es:[edi]
  414990:	mov    bh,0xfc
  414992:	jns    0x4149f4
  414994:	sbb    edx,DWORD PTR [ebx-0xc]
  414997:	imul   edx,DWORD PTR [edi],0x6d
  41499a:	dec    ebp
  41499b:	mov    esp,0x15fa9125
  4149a0:	lods   eax,DWORD PTR ds:[esi]
  4149a1:	mov    eax,0xe47bf2cf
  4149a6:	xchg   ecx,eax
  4149a7:	scas   eax,DWORD PTR es:[edi]
  4149a8:	jge    0x414a20
  4149aa:	jge    0x414933
  4149ac:	repnz fisttp DWORD PTR [ebx]
  4149af:	add    ecx,DWORD PTR [esi+0x48b02e70]
  4149b5:	or     al,0x10
  4149b7:	sub    ebp,DWORD PTR [ebx+0x1a]
  4149ba:	or     DWORD PTR [ebp+0x12],edi
  4149bd:	xchg   ebp,eax
  4149be:	dec    edx
  4149bf:	loope  0x4149dd
  4149c1:	xchg   esi,eax
  4149c2:	sub    ebp,DWORD PTR [ebx]
  4149c4:	xchg   esp,eax
  4149c5:	test   DWORD PTR [ecx+0x497174d7],ebx
  4149cb:	rcl    BYTE PTR [esi-0x42191386],1
  4149d1:	test   DWORD PTR [edi-0x21ca1370],0x1dae0a9
  4149db:	pop    esp
  4149dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149dd:	aad    0x6e
  4149df:	dec    esp
  4149e0:	je     0x414a46
  4149e2:	push   ss
  4149e3:	mov    eax,ds:0xeffb3481
  4149e8:	mov    ?,WORD PTR [edx+0x57]
  4149eb:	inc    esi
  4149ec:	leave  
  4149ed:	or     BYTE PTR [eax],cl
  4149ef:	daa    
  4149f0:	adc    al,0x5d
  4149f2:	or     al,ah
  4149f4:	mov    al,0x3b
  4149f6:	mov    dl,0x68
  4149f8:	push   ecx
  4149f9:	cwde   
  4149fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149fb:	jmp    0x414a13
  4149fd:	test   bh,cl
  4149ff:	mov    ch,0x16
  414a01:	arpl   WORD PTR [ebp+esi*8+0x5e],si
  414a05:	mov    ah,0x8f
  414a07:	mov    BYTE PTR [eax+0x51714e22],bh
  414a0d:	cld    
  414a0e:	in     al,dx
  414a0f:	push   esp
  414a10:	and    al,0xea
  414a12:	and    al,0x13
  414a14:	xchg   ecx,esp
  414a16:	adc    al,0xc0
  414a18:	mov    bh,0x48
  414a1a:	or     dl,al
  414a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a1d:	mov    BYTE PTR [ebp+0x4a],bl
  414a20:	jmp    0x414a70
  414a22:	mov    ds,ebp
  414a24:	xor    BYTE PTR [edi-0x79],0x7
  414a28:	fisubr DWORD PTR [ebx]
  414a2a:	in     al,0xc4
  414a2c:	(bad)  
  414a2d:	cmp    dh,dh
  414a2f:	and    BYTE PTR [ebx],dh
  414a31:	imul   ecx,DWORD PTR [ebx],0xd4139276
  414a37:	lods   eax,DWORD PTR ds:[esi]
  414a38:	fidiv  DWORD PTR [edi]
  414a3a:	push   eax
  414a3b:	int3   
  414a3c:	jmp    0xe8fe:0x14fa17d7
  414a43:	pusha  
  414a44:	dec    eax
  414a45:	es daa 
  414a47:	mov    esp,DWORD PTR [esi]
  414a49:	mov    ebp,0x6d6d218f
  414a4e:	lods   eax,DWORD PTR ds:[esi]
  414a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a50:	cwde   
  414a51:	jns    0x414a41
  414a53:	cs mov dl,0xd
  414a56:	das    
  414a57:	push   edi
  414a58:	call   0x278e9394
  414a5d:	add    ebx,esi
  414a5f:	or     cl,bl
  414a61:	and    al,0x8b
  414a63:	int3   
  414a64:	fst    DWORD PTR [ebx]
  414a66:	or     al,0xa2
  414a68:	not    DWORD PTR [ebp+edi*1-0x52c7a475]
  414a6f:	xchg   BYTE PTR [edx+0x2be6631],bl
  414a75:	lea    eax,[ecx]
  414a77:	xor    DWORD PTR [eax],edi
  414a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a7a:	sub    DWORD PTR [edx-0x73b0ebf],ebx
  414a80:	leave  
  414a81:	mov    eax,ds:0x5ef8cb7e
  414a86:	nop
  414a87:	inc    edi
  414a88:	call   0x7c97:0xc6b6a39e
  414a8f:	add    al,0xe4
  414a91:	shr    ch,1
  414a93:	sub    al,0x4e
  414a96:	out    0x66,eax
  414a98:	mov    dh,0xdd
  414a9a:	add    dl,BYTE PTR [esi-0x23ddd310]
  414aa0:	xchg   edi,eax
  414aa1:	popa   
  414aa2:	mov    esi,0xeeed7b93
  414aa7:	pusha  
  414aa8:	je     0x414ac1
  414aaa:	fadd   st(7),st
  414aac:	dec    edx
  414aad:	mov    ds:0xc3df854c,al
  414ab2:	loop   0x414ade
  414ab4:	in     eax,dx
  414ab5:	int3   
  414ab6:	retf   
  414ab7:	mov    ebp,0xa5b0a09d
  414abc:	fstp   DWORD PTR [ecx+0x145d035]
  414ac2:	jns    0x414a4f
  414ac4:	mov    ecx,esi
  414ac6:	mov    edi,0x765ffe89
  414acb:	(bad)  
  414acc:	in     eax,dx
  414acd:	xchg   ebx,eax
  414ace:	and    edi,ebx
  414ad0:	add    ebp,edx
  414ad2:	push   eax
  414ad3:	cs jne 0x414b16
  414ad6:	(bad)  
  414ad7:	pop    eax
  414ad8:	out    0xc,al
  414ada:	mov    esi,0x466f28ae
  414adf:	(bad)  
  414ae0:	mov    dh,0x29
  414ae2:	(bad)  
  414ae3:	div    DWORD PTR [ebp+0x43]
  414ae6:	jl     0x414adf
  414ae8:	push   edx
  414ae9:	rol    BYTE PTR [ebp+0x4d],1
  414aec:	xchg   eax,esi
  414aee:	ret    
  414aef:	xchg   edx,eax
  414af0:	sub    eax,DWORD PTR [ecx+0x77]
  414af3:	shr    BYTE PTR [ebp+0x78dcc69a],cl
  414af9:	outs   dx,DWORD PTR ds:[esi]
  414afa:	test   eax,0xaa71e179
  414aff:	(bad)  
  414b00:	sbb    eax,DWORD PTR [esi+0x20]
  414b03:	loope  0x414b7f
  414b05:	xor    al,0xcf
  414b07:	addr16 int3 
  414b09:	adc    WORD PTR [ecx+0x5500f207],0xffd7
  414b11:	mov    edx,0x976a2cac
  414b16:	aaa    
  414b17:	pminsw mm7,mm6
  414b1a:	xchg   BYTE PTR [esi-0x56f836db],dl
  414b20:	imul   esi,ebx,0x70
  414b23:	or     eax,0xabfde2d5
  414b28:	imul   esp,DWORD PTR [eax+0x13],0x339a610b
  414b2f:	test   ah,bh
  414b31:	je     0x414b3b
  414b33:	xchg   ecx,eax
  414b34:	mov    ds:0x1c39ec9a,eax
  414b39:	mov    edi,0x1e4d1dac
  414b3e:	cmp    BYTE PTR [eax+0x69f7826a],cl
  414b44:	mov    ah,0x81
  414b46:	mov    dl,0xd1
  414b48:	push   cs
  414b49:	fcomp  DWORD PTR [edi-0x2373665]
  414b4f:	test   eax,0x9c108c0b
  414b54:	mov    ah,0x26
  414b56:	imul   esi,DWORD PTR [ebx+edi*1+0x6af3f2d1],0x6e0cbfcd
  414b61:	neg    dl
  414b63:	push   ds
  414b64:	mov    dl,BYTE PTR [ecx]
  414b66:	cld    
  414b67:	shl    DWORD PTR [esi],cl
  414b69:	jp     0x414bcd
  414b6b:	loopne 0x414bbc
  414b6d:	push   edi
  414b6e:	addr16 clc 
  414b70:	arpl   WORD PTR [ebx],ax
  414b72:	(bad)  
  414b73:	repz shr BYTE PTR [edi-0x64791df1],1
  414b7a:	(bad)  
  414b7b:	jno    0x414b39
  414b7d:	add    al,0x9c
  414b7f:	pop    esi
  414b80:	mov    ds:0x4a85eb9,eax
  414b85:	and    dl,BYTE PTR [edi+0x7c]
  414b88:	es inc esp
  414b8a:	in     eax,0x56
  414b8c:	stc    
  414b8d:	stos   BYTE PTR es:[edi],al
  414b8e:	sbb    BYTE PTR [ebp+0x32e5f2d6],ch
  414b94:	dec    ebp
  414b95:	jbe    0x414b4a
  414b97:	add    dh,BYTE PTR [eax]
  414b99:	aad    0x80
  414b9b:	aam    0xe
  414b9d:	adc    al,BYTE PTR [ecx+ebp*2+0x2e]
  414ba1:	adc    BYTE PTR [eax+0x7b],dl
  414ba4:	lahf   
  414ba5:	fwait
  414ba6:	xchg   ebx,eax
  414ba7:	cmp    edx,DWORD PTR [ebx+0x7e]
  414baa:	test   eax,0x906c85
  414baf:	mov    bl,0x61
  414bb1:	ret    0x9277
  414bb4:	mov    dh,0x7
  414bb6:	test   al,0x94
  414bb8:	adc    eax,esi
  414bba:	aas    
  414bbb:	push   edx
  414bbc:	jge    0x414c20
  414bbe:	inc    eax
  414bbf:	mov    cs,WORD PTR [ebx]
  414bc1:	and    eax,0x59d7a4e4
  414bc6:	mov    bl,0x35
  414bc8:	ins    DWORD PTR es:[edi],dx
  414bc9:	dec    eax
  414bca:	adc    DWORD PTR [ebx+0x1b],0x658307dd
  414bd1:	mov    bh,0xf8
  414bd3:	or     eax,0xffff1562
  414bd8:	mov    cs,WORD PTR [ebp-0x2195ec4a]
  414bde:	mov    eax,0xc9cd0f83
  414be3:	xchg   esi,eax
  414be4:	inc    esi
  414be5:	sbb    eax,0x9027fe84
  414bea:	shl    BYTE PTR [esi+eiz*1-0x2e],cl
  414bee:	pop    ebx
  414bef:	cwde   
  414bf0:	ror    DWORD PTR [edi],cl
  414bf2:	ins    BYTE PTR es:[edi],dx
  414bf3:	adc    BYTE PTR [edi-0x1cf31ec9],bh
  414bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bfa:	mov    dl,0xc
  414bfc:	and    eax,0x25758dc
  414c01:	mov    edx,0xb3cf8d6d
  414c06:	push   0xffffff8a
  414c08:	clc    
  414c09:	dec    ebx
  414c0a:	xchg   esp,eax
  414c0b:	mov    ebx,0xfe69f1e8
  414c10:	and    ah,al
  414c12:	mov    bh,0x61
  414c14:	dec    edi
  414c15:	in     al,dx
  414c16:	loopne 0x414bb7
  414c18:	mov    bl,BYTE PTR [ebp+eiz*4-0x9]
  414c1c:	in     eax,0xfe
  414c1e:	shl    DWORD PTR [ebx-0x7d],cl
  414c21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c22:	jmp    0x730d:0xa24328b9
  414c29:	in     al,0x48
  414c2b:	sub    al,0xda
  414c2d:	mov    dh,bh
  414c2f:	call   0xc63999ae
  414c34:	mov    ah,0xed
  414c36:	xor    DWORD PTR [edi],0x774241b8
  414c3c:	push   edx
  414c3d:	dec    ebx
  414c3e:	xchg   edi,eax
  414c3f:	push   0xffffffa1
  414c41:	retf   
  414c42:	std    
  414c43:	popf   
  414c44:	out    0x22,eax
  414c46:	shr    BYTE PTR [ecx],cl
  414c48:	nop
  414c49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c4a:	inc    edx
  414c4b:	outs   dx,DWORD PTR ds:[esi]
  414c4c:	imul   ebp,DWORD PTR [edx+0x27],0xbedbdca6
  414c53:	mov    ah,0x1a
  414c55:	das    
  414c56:	jmp    0xe8f7:0x327adc9b
  414c5d:	ins    DWORD PTR es:[edi],dx
  414c5e:	pop    es
  414c5f:	test   DWORD PTR [edx],edx
  414c61:	jmp    0x414c70
  414c63:	rcr    ebx,1
  414c65:	mul    BYTE PTR [esi]
  414c67:	outs   dx,BYTE PTR ds:[esi]
  414c68:	icebp  
  414c69:	sbb    DWORD PTR [esi+ebx*8-0x63],ebx
  414c6d:	cmp    eax,0xff54604e
  414c72:	sub    BYTE PTR [edi+edx*2-0x35e527b3],al
  414c79:	repz mov ebp,0x675e9c77
  414c7f:	push   ss
  414c80:	ja     0x414c3b
  414c82:	inc    edi
  414c83:	adc    ecx,0xff0c76b8
  414c89:	mov    BYTE PTR [eax+0x3f],0xc
  414c8d:	push   eax
  414c8e:	out    0x5,eax
  414c90:	cwde   
  414c91:	sub    al,0xe2
  414c93:	stos   BYTE PTR es:[edi],al
  414c94:	jl     0x414c7c
  414c96:	enter  0x75a1,0xef
  414c9a:	cli    
  414c9b:	sbb    bl,dl
  414c9d:	xor    al,0xb7
  414c9f:	jmp    0x414c82
  414ca1:	xor    al,0xa1
  414ca3:	sub    ch,ah
  414ca5:	dec    esi
  414ca6:	xchg   edx,eax
  414ca7:	scas   al,BYTE PTR es:[edi]
  414ca8:	ins    DWORD PTR es:[edi],dx
  414ca9:	not    cl
  414cab:	call   0x7b96:0xd3897709
  414cb2:	mov    ah,0x1e
  414cb4:	out    0x80,eax
  414cb6:	fsub   QWORD PTR [ecx-0x5627a214]
  414cbc:	xchg   ebp,eax
  414cbd:	sar    BYTE PTR [edx+edi*4-0x4],0x57
  414cc2:	aaa    
  414cc3:	in     eax,dx
  414cc4:	iret   
  414cc5:	mov    eax,ds:0x36e5de04
  414cca:	call   0x7f28:0x4e328844
  414cd1:	mov    bh,0xdf
  414cd3:	outs   dx,BYTE PTR ds:[esi]
  414cd4:	sub    al,0x3
  414cd6:	xchg   edx,eax
  414cd7:	les    esp,FWORD PTR [edx+0x69]
  414cda:	pushf  
  414cdb:	xchg   ebx,eax
  414cdc:	lds    ebx,FWORD PTR [edi]
  414cde:	arpl   WORD PTR [edx-0x65],bp
  414ce1:	xor    eax,0x1e5b7d2b
  414ce6:	test   BYTE PTR [edi-0x7f09f1eb],ch
  414cec:	pop    ebp
  414ced:	inc    ebp
  414cee:	add    al,0x7d
  414cf0:	fcmovu st,st(2)
  414cf2:	mov    ds:0x192bf349,al
  414cf7:	(bad)  
  414cf9:	mov    ecx,0x961d23c
  414cfe:	xchg   BYTE PTR [ebp+0x19],al
  414d01:	jne    0x414d0f
  414d03:	loope  0x414d3d
  414d05:	nop
  414d06:	push   edx
  414d07:	mov    al,ds:0xd36062c1
  414d0c:	add    eax,DWORD PTR [edi-0x4b]
  414d0f:	pavgb  mm4,QWORD PTR [edi+0x3a]
  414d13:	xor    bh,BYTE PTR [eax+0x69b8a37d]
  414d19:	ja     0x414d19
  414d1b:	(bad)  [esi-0x2]
  414d1e:	(bad)  
  414d1f:	cdq    
  414d20:	push   ebp
  414d21:	in     eax,dx
  414d22:	das    
  414d23:	adc    eax,0x8d18f668
  414d28:	jns    0x414d2f
  414d2a:	add    cl,ch
  414d2c:	jl     0x414d21
  414d2e:	sbb    dl,BYTE PTR [ebp+eiz*2-0x6b]
  414d32:	or     DWORD PTR [ecx-0x2387b318],edi
  414d38:	shl    ch,0x51
  414d3b:	sbb    BYTE PTR [edi-0x6cf5e766],ch
  414d41:	jg     0x414d25
  414d43:	call   0x3eb46e71
  414d48:	mov    es,WORD PTR [eax+0x13]
  414d4b:	jo     0x414cdb
  414d4d:	xchg   ecx,eax
  414d4e:	jl     0x414dc2
  414d50:	mov    edx,0xe6b070c8
  414d55:	xchg   esi,eax
  414d56:	pop    ebp
  414d57:	adc    al,0x40
  414d59:	test   eax,0x759e20d4
  414d5e:	and    esp,DWORD PTR [eax]
  414d60:	mov    eax,0xedc04c2d
  414d65:	shl    BYTE PTR ds:0x482ab3cb,1
  414d6b:	mov    ecx,0x511cd5ff
  414d70:	in     al,0xfb
  414d72:	shr    DWORD PTR [esi+ecx*4+0x66],1
  414d76:	and    bh,BYTE PTR [ecx+0x12]
  414d79:	and    esi,DWORD PTR [ebp+0x11d392a6]
  414d7f:	push   esi
  414d80:	add    DWORD PTR [ebx],esi
  414d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d83:	in     al,0x5b
  414d85:	adc    BYTE PTR [edi-0x3a0674c7],0x38
  414d8c:	adc    DWORD PTR [ebp-0x77],0xfffffffc
  414d90:	mov    bh,0xaf
  414d92:	jbe    0x414db0
  414d94:	rcr    DWORD PTR [eax-0x61f1fc2b],0x3b
  414d9b:	imul   ebx,DWORD PTR [ecx+0x33ea26e5],0xd88e87b1
  414da5:	pushf  
  414da6:	nop
  414da7:	pop    ds
  414da8:	inc    eax
  414da9:	push   cs
  414daa:	cmp    cl,dh
  414dac:	sti    
  414dad:	mov    ds:0x9be434ec,eax
  414db2:	mov    bh,0x9c
  414db4:	jbe    0x414d9c
  414db6:	push   ss
  414db7:	sti    
  414db8:	push   cs
  414db9:	xchg   DWORD PTR [ebp+0x78],esp
  414dbc:	out    dx,al
  414dbd:	xacquire xchg DWORD PTR [edx],esp
  414dc0:	adc    ecx,DWORD PTR [ecx-0x5df4750b]
  414dc6:	rcr    DWORD PTR [edx],1
  414dc8:	mov    ds:0xfbe0ca34,al
  414dcd:	repz iret 
  414dcf:	and    DWORD PTR [ebx-0x4a],0xffffffd1
  414dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dd4:	jo     0x414db5
  414dd6:	js     0x414dff
  414dd8:	pop    ds
  414dd9:	sub    edx,DWORD PTR ds:0xaf949092
  414ddf:	mov    ds:0xa56f3e02,al
  414de4:	outs   dx,DWORD PTR ds:[esi]
  414de6:	in     eax,0x15
  414de8:	mov    BYTE PTR [eax-0x3e00cbd6],dh
  414dee:	push   ebx
  414def:	repnz retf 0x6c45
  414df3:	fimul  DWORD PTR [ebx]
  414df5:	fsubr  QWORD PTR [ebx+edx*2-0x5cbd1d2c]
  414dfc:	add    eax,0xe52173c8
  414e01:	push   ecx
  414e02:	sub    al,0x81
  414e04:	das    
  414e05:	sub    DWORD PTR [edi],esp
  414e07:	inc    ebx
  414e08:	inc    ecx
  414e0a:	xor    al,0xe1
  414e0c:	(bad)  
  414e0d:	test   eax,0xa46077ef
  414e12:	icebp  
  414e13:	stc    
  414e14:	rcr    DWORD PTR [ecx+0x561192fd],cl
  414e1a:	sahf   
  414e1b:	ret    0xcb47
  414e1e:	sti    
  414e1f:	fs sbb ecx,ecx
  414e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e23:	jns    0x414e4f
  414e25:	sub    ecx,DWORD PTR [ecx+0x3d1ed270]
  414e2b:	jmp    0xb14d:0xe5b3bb09
  414e32:	and    DWORD PTR [ebp+0x45],ebp
  414e35:	sbb    al,0x20
  414e37:	enter  0xc4d0,0x6
  414e3b:	mov    WORD PTR [edi],ss
  414e3d:	sub    eax,0xbec0442
  414e42:	sub    edi,DWORD PTR [ecx+0x5709dd32]
  414e48:	mov    dl,0x3
  414e4a:	push   0xfbbc6b70
  414e4f:	lods   eax,DWORD PTR ds:[esi]
  414e50:	inc    esp
  414e51:	lods   eax,DWORD PTR ds:[esi]
  414e52:	jbe    0x414e91
  414e54:	mov    bl,0xf2
  414e56:	jecxz  0x414deb
  414e58:	js     0x414e5d
  414e5a:	or     ah,BYTE PTR [ebx+0x6318828d]
  414e60:	xlat   BYTE PTR ds:[ebx]
  414e61:	dec    esp
  414e62:	ins    BYTE PTR es:[edi],dx
  414e63:	mov    eax,0x68bea74a
  414e68:	int3   
  414e69:	xchg   ebx,eax
  414e6a:	pop    ds
  414e6b:	out    0xe7,eax
  414e6d:	mov    bl,0x70
  414e6f:	fs popf 
  414e71:	bnd js 0x414e13
  414e74:	(bad)  
  414e76:	xchg   ecx,eax
  414e77:	mov    ebx,0x8d672165
  414e7c:	xlat   BYTE PTR ds:[ebx]
  414e7d:	fidiv  DWORD PTR [eax+0x25e55f3f]
  414e83:	lods   eax,DWORD PTR ds:[esi]
  414e84:	mov    edi,DWORD PTR [ebx]
  414e86:	es jb  0x414edd
  414e89:	clc    
  414e8a:	ret    0x99c3
  414e8d:	pop    eax
  414e8e:	test   BYTE PTR [edi+0x6a],bl
  414e91:	push   ebx
  414e92:	jo     0x414e79
  414e94:	mov    eax,0x8bd4b914
  414e99:	out    dx,al
  414e9a:	cwde   
  414e9b:	arpl   WORD PTR [edx],sp
  414e9d:	inc    eax
  414e9e:	sub    DWORD PTR [esi+edi*2+0x2],0xa
  414ea3:	add    esi,ecx
  414ea5:	xchg   BYTE PTR [edi],ch
  414ea7:	mov    eax,ds:0x5e75d4bf
  414eac:	in     al,0xb9
  414eae:	pop    ss
  414eaf:	jno    0x414ef8
  414eb1:	inc    esi
  414eb2:	mov    bl,0xc8
  414eb4:	xchg   BYTE PTR [esi-0x7968c8da],cl
  414eba:	ins    DWORD PTR es:[edi],dx
  414ebb:	pop    ds
  414ebc:	cli    
  414ebd:	push   DWORD PTR [ebx]
  414ebf:	push   esi
  414ec0:	call   0xc941:0xb8ac8042
  414ec7:	or     ebp,DWORD PTR [ecx-0x6c5b0e67]
  414ecd:	add    cl,BYTE PTR [ebp+0xbc8f7b0]
  414ed3:	cmp    edi,DWORD PTR [ecx-0x51f41c8a]
  414ed9:	pop    ebx
  414eda:	sbb    cl,BYTE PTR [edx+0x72]
  414edd:	cmc    
  414ede:	add    DWORD PTR [edi+0xf],eax
  414ee1:	mov    cl,BYTE PTR [edi-0x4d]
  414ee4:	pop    ecx
  414ee5:	test   eax,0xe534c21
  414eea:	addr16 pop es
  414eec:	adc    ah,BYTE PTR [eax]
  414eee:	sahf   
  414eef:	dec    edi
  414ef0:	cmp    DWORD PTR [edi+eiz*8-0x292677de],edi
  414ef7:	loop   0x414eec
  414ef9:	ja     0x414e93
  414efb:	lods   al,BYTE PTR ds:[esi]
  414efc:	add    DWORD PTR [edi+0x73cf450a],esp
  414f02:	pop    es
  414f03:	icebp  
  414f04:	jp     0x414f6e
  414f06:	out    dx,eax
  414f07:	mov    bl,0x72
  414f09:	outs   dx,DWORD PTR ds:[esi]
  414f0a:	xchg   DWORD PTR [ebp+ebp*4+0x60],edi
  414f0e:	cld    
  414f0f:	xchg   esi,eax
  414f10:	push   ss
  414f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f12:	push   esp
  414f13:	mov    edi,0x246c0b90
  414f18:	mov    dl,0xe4
  414f1a:	jb     0x864f3420
  414f20:	out    0x2,eax
  414f22:	test   al,0xcb
  414f24:	pop    eax
  414f25:	ja     0x414f42
  414f27:	popa   
  414f28:	and    esi,DWORD PTR [ebp-0x4a296887]
  414f2e:	mov    edi,0x1d9a4dbe
  414f33:	in     al,0x29
  414f35:	mov    bl,BYTE PTR [ecx+0x58]
  414f38:	jp     0x414ef6
  414f3a:	or     eax,0xdcf2fcc7
  414f3f:	fist   WORD PTR [ebx]
  414f41:	jecxz  0x414ef4
  414f43:	cs loop 0x414f71
  414f46:	stos   BYTE PTR es:[edi],al
  414f47:	cmp    al,0xb
  414f49:	ror    BYTE PTR [edx+edi*1],cl
  414f4c:	or     al,0x34
  414f4e:	ds jg  0x414f5c
  414f51:	rcl    BYTE PTR [edi-0x59995fd3],0xeb
  414f58:	mov    ds:0x8260f7a5,eax
  414f5d:	jl     0x414fbc
  414f5f:	lock or BYTE PTR [ebp+0x56],bl
  414f63:	add    dh,BYTE PTR [edx+eax*1+0x3e47c4b5]
  414f6a:	mov    dl,0x1f
  414f6c:	cli    
  414f6d:	jmp    0x71781a0b
  414f72:	outs   dx,DWORD PTR ds:[esi]
  414f73:	dec    ecx
  414f74:	pop    edi
  414f75:	push   edx
  414f76:	jmp    0xf760:0x5e029058
  414f7d:	jmp    0xb0e1:0xefe92489
  414f84:	sub    al,0xda
  414f86:	sti    
  414f87:	pop    ss
  414f88:	sbb    edx,edx
  414f8a:	xchg   ecx,eax
  414f8b:	jno    0x414feb
  414f8d:	mov    BYTE PTR [eax],0x3d
  414f90:	xchg   ebx,eax
  414f91:	or     al,0x4
  414f93:	stos   BYTE PTR es:[edi],al
  414f94:	ja     0x414fec
  414f96:	push   esp
  414f97:	or     DWORD PTR es:[ecx-0x4b0203a9],ebp
  414f9e:	sbb    eax,0xa8949950
  414fa3:	addr16 add eax,0x4f1c6446
  414fa9:	test   DWORD PTR [ecx+0x7d],0xd3d9fa04
  414fb0:	ror    BYTE PTR [ecx-0x510ede11],1
  414fb6:	jg     0x414fb7
  414fb8:	int    0xc7
  414fba:	dec    ebp
  414fbb:	repnz rol DWORD PTR [edi-0x2d415015],0x5a
  414fc3:	push   eax
  414fc4:	dec    esi
  414fc5:	mov    bh,0x3
  414fc7:	imul   edi,DWORD PTR [edi+0x63f91429],0x5c
  414fce:	add    ch,BYTE PTR ds:0xdfa964a2
  414fd4:	ins    BYTE PTR es:[edi],dx
  414fd5:	scas   al,BYTE PTR es:[edi]
  414fd6:	sar    BYTE PTR [ecx],0xc7
  414fd9:	js     0x414fb6
  414fdb:	fadd   DWORD PTR [eax+0x792c5686]
  414fe1:	mov    BYTE PTR [eax+0x7d65a82d],dh
  414fe7:	scas   al,BYTE PTR es:[edi]
  414fe8:	mov    edi,0xb3a8d6f7
  414fed:	inc    ebp
  414fee:	stos   DWORD PTR es:[edi],eax
  414fef:	dec    ecx
  414ff0:	(bad)  
  414ff2:	outs   dx,BYTE PTR ds:[esi]
  414ff3:	gs data16 mov ah,0x11
  414ff7:	add    ebp,esi
  414ff9:	imul   ebp,DWORD PTR [eax+0x8e8e117],0x40
  415000:	ss jecxz 0x415004
  415003:	push   0x1d
  415005:	pop    eax
  415006:	mov    ecx,0x2b505422
  41500b:	jno    0x414fc7
  41500d:	pop    ebp
  41500e:	xchg   ecx,eax
  41500f:	mov    BYTE PTR [ecx],bl
  415011:	push   0x616d2129
  415016:	cmp    esp,edx
  415018:	inc    edi
  41501a:	(bad)  
  41501b:	out    0x8f,al
  41501d:	js     0x414fa0
  41501f:	xor    DWORD PTR [ebx-0x32],eax
  415022:	cmp    al,0x48
  415024:	jecxz  0x414fab
  415026:	push   edi
  415027:	test   DWORD PTR ds:0x569f00cd,ecx
  41502d:	add    cl,BYTE PTR [ebp+0x1b3d5b00]
  415033:	cmp    al,0xbf
  415035:	mov    ecx,0xcb9fb15b
  41503a:	pop    esp
  41503b:	sti    
  41503c:	add    BYTE PTR [edi],0x5a
  41503f:	aaa    
  415040:	div    BYTE PTR [esi]
  415042:	cmp    ah,BYTE PTR [eax+0x7f]
  415045:	push   es
  415046:	das    
  415047:	cli    
  415048:	add    ecx,ebp
  41504a:	cmp    eax,0xd3b4cd15
  41504f:	push   esp
  415050:	mov    BYTE PTR [ebp+esi*2+0x272a1366],bl
  415057:	fild   QWORD PTR [edi]
  415059:	jmp    0x4150b4
  41505b:	and    BYTE PTR gs:[ecx-0xf],dl
  41505f:	sub    eax,0xb85f742c
  415064:	int    0x8a
  415066:	jle    0x415044
  415068:	adc    eax,0x887bbd7a
  41506d:	pop    DWORD PTR [ecx]
  41506f:	pop    ebx
  415070:	imul   eax,DWORD PTR [edx-0x2953434c],0xf03e5936
  41507a:	pusha  
  41507b:	ins    BYTE PTR es:[edi],dx
  41507c:	xchg   edx,eax
  41507d:	or     al,0x61
  41507f:	bound  ebp,QWORD PTR [edi]
  415081:	ret    
  415082:	sub    edx,ebx
  415084:	jge    0x415084
  415086:	dec    edx
  415087:	in     al,dx
  415088:	pop    ds
  415089:	pop    esp
  41508a:	jle    0x4150b5
  41508c:	adc    edi,DWORD PTR [ecx-0x12fc9f37]
  415092:	pop    edi
  415093:	repz jbe 0x41507c
  415096:	jne    0x415068
  415098:	fistp  WORD PTR [edi+0x3416f9e]
  41509e:	cld    
  41509f:	mov    bl,0xe5
  4150a1:	ret    
  4150a2:	mov    bl,0xf4
  4150a4:	cli    
  4150a5:	mov    esi,0xa63a2874
  4150aa:	inc    esp
  4150ab:	sar    BYTE PTR [ecx+0x73],cl
  4150ae:	mov    esi,0x4e44b8be
  4150b3:	or     BYTE PTR [ebx+0x2f],dl
  4150b6:	or     ebx,DWORD PTR [ebp+0x1]
  4150b9:	push   esp
  4150ba:	je     0x4150a4
  4150bc:	arpl   WORD PTR [esi],ax
  4150be:	test   BYTE PTR [esi-0x33],0x7e
  4150c2:	hlt    
  4150c3:	daa    
  4150c4:	call   0x2c9b0f45
  4150c9:	cmp    bl,al
  4150cb:	in     al,0xc7
  4150cd:	(bad)  
  4150ce:	and    al,0x8d
  4150d0:	outs   dx,BYTE PTR ds:[esi]
  4150d1:	mov    dh,0xcb
  4150d3:	add    ch,BYTE PTR [edi+0x4349f379]
  4150d9:	mov    ebx,0x3d950a43
  4150de:	(bad)  
  4150e0:	imul   ebx,DWORD PTR [edx],0x4e283ab6
  4150e6:	popf   
  4150e7:	xchg   BYTE PTR [ebp+0x30],dl
  4150ea:	js     0x415095
  4150ec:	fsubr  DWORD PTR [edi]
  4150ee:	push   ss
  4150ef:	inc    esi
  4150f0:	cmp    eax,0x55b8c9dc
  4150f5:	adc    BYTE PTR [ebp+esi*1-0x62458d30],cl
  4150fc:	jae    0x4150b8
  4150fe:	sub    ebp,DWORD PTR [edx-0x60da73ac]
  415104:	xor    al,0x34
  415106:	nop
  415107:	and    DWORD PTR [ecx],0xffffffd8
  41510a:	xchg   BYTE PTR [esi],dl
  41510c:	mov    ds:0x5c7aa335,eax
  415111:	mov    WORD PTR [esi-0x41],es
  415114:	fs add eax,0xa94f2fae
  41511a:	int    0x39
  41511c:	and    BYTE PTR [ebx],dl
  41511e:	cli    
  41511f:	inc    esp
  415120:	imul   DWORD PTR [ebp-0x36]
  415123:	in     eax,0xe4
  415125:	xchg   edx,eax
  415126:	adc    edx,esp
  415128:	ss mul ebx
  41512b:	repnz dec BYTE PTR [eax+ecx*2-0x51]
  415130:	jmp    0x41515d
  415132:	mov    dh,BYTE PTR [eax]
  415134:	adc    eax,0xc666cd00
  415139:	in     eax,dx
  41513a:	push   esi
  41513b:	test   al,0x44
  41513d:	(bad)  
  41513e:	stos   DWORD PTR es:[edi],eax
  41513f:	jno    0x4150cc
  415141:	mov    cs,WORD PTR [ebp+0x7fcfb566]
  415147:	cli    
  415148:	bound  ecx,QWORD PTR [esi+0x3148ebd4]
  41514e:	inc    edx
  41514f:	sbb    dl,BYTE PTR [esi+0x74135a7f]
  415155:	into   
  415156:	into   
  415157:	sub    eax,0x98d6a599
  41515c:	mov    BYTE PTR [esi+esi*4-0x3a1e9026],ch
  415163:	nop
  415164:	push   edx
  415165:	sti    
  415166:	pop    esi
  415167:	mov    ebx,0xbdfe9398
  41516c:	shr    BYTE PTR [eax],cl
  41516e:	int    0x90
  415170:	sbb    al,0x3d
  415172:	xchg   DWORD PTR [eax-0x1ccad31b],eax
  415178:	rcl    ecx,1
  41517a:	dec    esp
  41517b:	xchg   ebp,eax
  41517c:	loop   0x415110
  41517e:	push   cs
  41517f:	fsub   QWORD PTR [ebx]
  415181:	jbe    0x4151af
  415183:	int    0x7f
  415185:	sub    al,0x63
  415187:	cmc    
  415188:	adc    al,0xed
  41518a:	adc    esp,DWORD PTR [edi+0x6d]
  41518d:	lock iret 
  41518f:	je     0x4151cb
  415191:	inc    ebp
  415192:	xor    al,0xc1
  415194:	bound  eax,QWORD PTR [esp+ecx*8-0x42]
  415198:	add    cl,BYTE PTR [ebx]
  41519a:	(bad)  [edx-0xff15c20]
  4151a0:	es popf 
  4151a2:	shr    DWORD PTR [esi+0x73],cl
  4151a5:	cmp    eax,0x59d43ec4
  4151aa:	xchg   DWORD PTR [ecx-0x5],ebp
  4151ad:	push   esp
  4151ae:	leave  
  4151af:	mov    cs,WORD PTR [esi-0xb14c939]
  4151b5:	cmp    BYTE PTR ds:0x4f40628e,cl
  4151bb:	push   0x4dc16dd7
  4151c0:	movntq QWORD PTR [ebp+0x2c],mm6
  4151c4:	or     DWORD PTR [eax+0x1bf170ba],ebx
  4151ca:	add    al,0xe7
  4151cc:	fldcw  WORD PTR ds:0x5106e960
  4151d2:	ins    DWORD PTR es:[edi],dx
  4151d3:	inc    ebp
  4151d4:	cld    
  4151d5:	xor    DWORD PTR [esi],0xfcf579fa
  4151db:	and    bh,BYTE PTR [ebx+0x1f]
  4151de:	xor    DWORD PTR [edi],ebx
  4151e0:	ja     0x4151c0
  4151e2:	repnz mov ch,0x36
  4151e5:	sbb    ebx,DWORD PTR [ecx+0x3c]
  4151e8:	pop    ebx
  4151e9:	inc    ebx
  4151ea:	mov    esi,0x751d49c8
  4151ef:	enter  0x5346,0x1a
  4151f3:	add    al,0xf5
  4151f5:	rcr    BYTE PTR [ebx],cl
  4151f7:	rol    esi,1
  4151f9:	out    0xb1,al
  4151fb:	cmp    dh,BYTE PTR [esi]
  4151fd:	test   DWORD PTR [esp+ecx*1+0x6f4ca650],esi
  415204:	dec    ecx
  415205:	data16 (bad) 
  415207:	in     eax,dx
  415208:	gs aam 0xd
  41520b:	jge    0x415205
  41520d:	fs sub ch,bl
  415210:	(bad)  
  415211:	or     eax,0x3a34fc93
  415216:	jae    0x415228
  415218:	pop    ds
  415219:	push   0x30474af7
  41521e:	pop    ds
  41521f:	ja     0x415218
  415221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415222:	int    0x8c
  415224:	test   cl,ah
  415226:	jb     0x41524e
  415228:	leave  
  415229:	push   edx
  41522a:	sar    bl,1
  41522c:	mov    ds:0xc3ffa4c7,al
  415231:	xor    DWORD PTR [edx],ecx
  415233:	das    
  415234:	repnz hlt 
  415236:	sbb    al,0xf2
  415238:	jns    0x415234
  41523a:	in     al,dx
  41523b:	and    edx,esi
  41523d:	push   cs
  41523e:	mov    esp,0x95b5f7b
  415243:	adc    al,0xc3
  415245:	ficom  DWORD PTR [edx-0x317724f7]
  41524b:	enter  0x4b70,0x26
  41524f:	add    al,0x32
  415251:	mov    ebx,0x7b39be07
  415256:	sub    eax,0x2459e83b
  41525b:	cmp    al,0x73
  41525d:	or     BYTE PTR [eax-0x1646ff7b],bh
  415263:	iret   
  415264:	jbe    0x4152c0
  415266:	push   0x660ae054
  41526b:	in     al,dx
  41526c:	mov    ds:0xa996cac3,eax
  415271:	repnz mov cs,WORD PTR [esi-0x36]
  415275:	dec    esp
  415276:	and    eax,0x35e19690
  41527b:	stos   BYTE PTR es:[edi],al
  41527c:	(bad)  
  41527e:	in     eax,0x5f
  415280:	jo     0x41526f
  415282:	adc    dl,BYTE PTR [edi-0x3bd96586]
  415288:	pop    edi
  415289:	ficomp DWORD PTR [ecx]
  41528b:	and    esp,DWORD PTR [ebp+0x44c484ca]
  415291:	cmp    esi,esi
  415293:	mov    bh,0x4d
  415295:	jg     0x4152df
  415297:	sbb    esi,esp
  415299:	mov    edx,0xf48ab31d
  41529e:	cmp    eax,0xb6169b7
  4152a3:	mov    esi,0xed0ee8ac
  4152a8:	sbb    BYTE PTR [eax-0x30d839a1],0xd9
  4152af:	popa   
  4152b0:	jno    0x4152ae
  4152b2:	jnp    0x4152e7
  4152b4:	clc    
  4152b5:	(bad)  
  4152b6:	sub    DWORD PTR [edi+0x7aa04c51],ecx
  4152bc:	jb     0x4152bc
  4152be:	test   eax,0x59f3edc9
  4152c3:	dec    ebp
  4152c4:	jecxz  0x415343
  4152c6:	sar    DWORD PTR [edi],0xf8
  4152c9:	data16 test BYTE PTR [eax+0x4ff0be28],ah
  4152d0:	xor    cl,ah
  4152d2:	in     al,0x74
  4152d4:	test   al,0xb
  4152d6:	jle    0x4152cb
  4152d8:	mov    ebx,0x3f12903e
  4152dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152de:	xor    BYTE PTR [edi+0xf],dh
  4152e1:	cmc    
  4152e2:	call   0x9e2a:0x54f968fa
  4152e9:	cmp    esp,DWORD PTR [esp+ebx*1+0x731ddfde]
  4152f0:	mov    ah,BYTE PTR [ebp+0x1]
  4152f3:	adc    BYTE PTR [esi-0x24f44033],0x8
  4152fa:	push   ebx
  4152fb:	jl     0x41527f
  4152fd:	out    dx,al
  4152fe:	std    
  4152ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415300:	fwait
  415301:	sbb    dh,BYTE PTR [esi-0x58]
  415304:	or     BYTE PTR [eax],ch
  415306:	push   0xffffffc8
  415308:	jb     0x415311
  41530a:	push   ecx
  41530b:	jecxz  0x4152b9
  41530d:	jns    0x4152da
  41530f:	jo     0x415365
  415311:	cwde   
  415312:	pop    ss
  415313:	pop    edx
  415314:	mov    dh,0xc1
  415316:	pushf  
  415317:	call   0x5077d61
  41531c:	jge    0x4152c7
  41531e:	add    al,0x2e
  415320:	cmp    DWORD PTR [eax-0xb07ca68],edx
  415326:	imul   ecx,DWORD PTR [eax],0xffffffc5
  415329:	dec    DWORD PTR [edi+0x4443cad3]
  41532f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415330:	or     al,0x50
  415332:	push   ebx
  415333:	sbb    ah,BYTE PTR [ebx+0x77]
  415336:	test   DWORD PTR [edi],0x19edcbc1
  41533c:	stos   BYTE PTR es:[edi],al
  41533d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41533e:	fsin   
  415340:	jb     0x415321
  415342:	(bad)  
  415343:	fwait
  415344:	mov    ch,bh
  415346:	mov    al,ds:0x3347baea
  41534b:	or     BYTE PTR [edx+0x4b],cl
  41534e:	sbb    BYTE PTR [eax],bl
  415350:	in     eax,dx
  415351:	int3   
  415352:	and    al,0xc9
  415354:	nop
  415355:	xor    esi,0x21ad93de
  41535b:	test   al,0xc6
  41535d:	pop    ebx
  41535e:	inc    eax
  41535f:	xor    ecx,eax
  415361:	leave  
  415362:	sbb    BYTE PTR [eax-0x6e796b8f],al
  415368:	push   ss
  415369:	xlat   BYTE PTR ds:[ebx]
  41536a:	fimul  DWORD PTR [eax+0x7c7fbf01]
  415370:	mov    bh,0x21
  415372:	cld    
  415373:	or     BYTE PTR [bx+si],ah
  415376:	(bad)  
  415377:	call   FWORD PTR [ebx]
  415379:	sbb    al,0x1b
  41537b:	xchg   esp,eax
  41537c:	addr16 int3 
  41537e:	and    esi,ecx
  415380:	add    eax,0x211f24c7
  415385:	xchg   BYTE PTR ds:0xd88d23be,ah
  41538b:	jecxz  0x41533f
  41538d:	jb     0x41538d
  41538f:	retf   
  415390:	loop   0x4153f7
  415392:	add    DWORD PTR [esp+eax*1-0x5a269e66],eax
  415399:	xchg   ebx,eax
  41539a:	mov    esp,0x4f8a64e
  41539f:	shl    BYTE PTR [edx-0x1fc5c66],0xd5
  4153a6:	adc    ch,0x57
  4153a9:	jb     0x41534c
  4153ab:	mov    BYTE PTR [ebp+0x45],dl
  4153ae:	mov    ecx,0x8d2e8982
  4153b3:	adc    eax,0x6ae74c20
  4153b8:	repz repnz or dl,cl
  4153bc:	or     BYTE PTR [esi],dl
  4153be:	fisubr DWORD PTR [ebx+ecx*4+0x257eb055]
  4153c5:	pop    esp
  4153c6:	iret   
  4153c7:	in     al,dx
  4153c8:	dec    edi
  4153c9:	in     al,0x8
  4153cb:	xor    al,0xee
  4153cd:	jne    0x4153ff
  4153cf:	lods   al,BYTE PTR ds:[esi]
  4153d0:	fisttp WORD PTR [edi+0x3bc7a53f]
  4153d6:	fnstenv [edx-0x21]
  4153d9:	lods   al,BYTE PTR ds:[esi]
  4153da:	xchg   edx,eax
  4153dc:	or     edi,DWORD PTR [ebx-0x6d06bf39]
  4153e2:	inc    ebp
  4153e3:	ffreep st(1)
  4153e5:	loop   0x4153ea
  4153e7:	jne    0x415377
  4153e9:	sub    DWORD PTR [ebx-0xa],eax
  4153ec:	mov    ch,0x19
  4153ee:	push   eax
  4153ef:	mov    eax,ds:0x14970db2
  4153f4:	shr    DWORD PTR [ecx+0x6ffe0225],cl
  4153fa:	das    
  4153fb:	pop    esp
  4153fc:	pop    ds
  4153fd:	(bad)  
  4153ff:	stos   DWORD PTR es:[edi],eax
  415400:	push   ds
  415401:	sub    DWORD PTR [edi-0x33316d83],edi
  415407:	pushf  
  415408:	jp     0x41546e
  41540a:	icebp  
  41540b:	xchg   edx,eax
  41540c:	mov    ch,0x8e
  41540e:	fisubr DWORD PTR [esi+edi*8+0x35]
  415412:	mov    ch,0xc0
  415414:	inc    esp
  415415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415416:	loopne 0x4153ba
  415418:	inc    edi
  415419:	stos   DWORD PTR es:[edi],eax
  41541a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41541b:	fstp   DWORD PTR [eax+0x2aa50395]
  415421:	cmp    BYTE PTR [edi+esi*4],bh
  415424:	push   esi
  415425:	jb     0x4153f1
  415427:	adc    ecx,DWORD PTR [eax-0x5efd983e]
  41542d:	aaa    
  41542e:	xor    BYTE PTR [edi],bl
  415430:	loopne 0x4153bc
  415432:	in     eax,dx
  415433:	sub    eax,0xeced6327
  415438:	hlt    
  415439:	mov    dh,0x9e
  41543b:	shr    BYTE PTR [edi-0x53],1
  41543e:	arpl   bx,ax
  415440:	fcmovnbe st,st(0)
  415442:	call   0xffc0576
  415447:	imul   eax,DWORD PTR ds:0x85dbb7c4,0x54f114ba
  415451:	fmul   DWORD PTR [eax]
  415453:	xor    al,0xd9
  415455:	mov    eax,0x38ca027a
  41545a:	xor    al,0x9c
  41545c:	je     0x4154a1
  41545e:	div    DWORD PTR [edi-0x1e72ee4]
  415464:	fisttp QWORD PTR [ebx]
  415466:	pop    esp
  415467:	out    dx,eax
  415468:	sub    al,0x83
  41546a:	sub    cl,BYTE PTR [esi]
  41546c:	loop   0x415482
  41546e:	mov    BYTE PTR [esi],bh
  415470:	icebp  
  415471:	and    DWORD PTR [edi],ebp
  415473:	jp     0x4154ee
  415475:	mov    edi,?
  415477:	aas    
  415478:	out    dx,al
  415479:	jo     0x41543d
  41547b:	int3   
  41547c:	(bad)
  415480:	jecxz  0x415420
  415482:	mov    ds:0xf09657ed,al
  415487:	aaa    
  415488:	xchg   BYTE PTR [ebx-0x7b],cl
  41548b:	jle    0x27600291
  415491:	lods   al,BYTE PTR ds:[esi]
  415492:	cmp    ah,bl
  415494:	ret    
  415495:	nop
  415496:	call   0x995a3745
  41549b:	ins    DWORD PTR es:[edi],dx
  41549c:	repz or edx,ebp
  41549f:	(bad)  
  4154a0:	jmp    0x53bb1114
  4154a5:	arpl   WORD PTR [eax+eax*8-0x10],bx
  4154a9:	ret    0x722f
  4154ac:	dec    esp
  4154ad:	sbb    DWORD PTR [ecx+0x5c],ecx
  4154b0:	mov    BYTE PTR [ebp+0x5a],cl
  4154b3:	push   cs
  4154b4:	dec    ebx
  4154b5:	or     al,bh
  4154b7:	mov    bl,0x31
  4154b9:	outs   dx,BYTE PTR ds:[esi]
  4154ba:	in     eax,dx
  4154bb:	jb     0x415481
  4154bd:	out    dx,al
  4154be:	pop    es
  4154bf:	loope  0x41546d
  4154c1:	repz cli 
  4154c3:	xchg   BYTE PTR [ecx-0x80],dl
  4154c6:	xlat   BYTE PTR ds:[ebx]
  4154c7:	sbb    al,0x5
  4154c9:	inc    ebx
  4154ca:	pushf  
  4154cb:	cmp    DWORD PTR [ebp+0x6c9721f3],ebp
  4154d1:	mov    edx,0x37fa0f12
  4154d6:	push   esi
  4154d7:	push   es
  4154d8:	es clc 
  4154da:	gs aad 0xd0
  4154dd:	ins    DWORD PTR es:[edi],dx
  4154de:	(bad)  
  4154df:	and    BYTE PTR [edx+ecx*4-0x13],bl
  4154e3:	and    ebx,DWORD PTR [esi+ecx*1+0x25]
  4154e7:	test   al,0xf6
  4154e9:	mov    esp,0x8e334894
  4154ee:	add    DWORD PTR [ebx-0x2f51b764],ebx
  4154f4:	stc    
  4154f5:	int    0x7c
  4154f7:	lea    ebp,[edx-0x69]
  4154fa:	les    ebx,FWORD PTR [esi+0x4c]
  4154fd:	add    BYTE PTR [ecx+esi*4-0x30337f22],bh
  415504:	sahf   
  415505:	call   DWORD PTR [eax]
  415507:	adc    eax,0xa45c8761
  41550c:	outs   dx,DWORD PTR ds:[esi]
  41550d:	mov    ebp,0x2ef91b78
  415512:	fcomip st,st(1)
  415514:	mov    edx,0x48315701
  415519:	aam    0x7d
  41551b:	arpl   WORD PTR [edi+esi*8-0x26],si
  41551f:	(bad)  
  415520:	imul   esp,DWORD PTR [eax+0x3e044f64],0xffffffab
  415527:	sub    esp,0xa65d4674
  41552d:	ror    BYTE PTR [ebp-0x1f],1
  415530:	sbb    al,0x20
  415532:	lods   al,BYTE PTR ds:[esi]
  415533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415534:	ins    DWORD PTR es:[edi],dx
  415535:	iret   
  415536:	jecxz  0x4155b0
  415538:	cmp    ebp,eax
  41553a:	std    
  41553b:	les    ebx,FWORD PTR [ecx+0x2]
  41553e:	jp     0x415513
  415540:	adc    BYTE PTR [eax+0x5678deb1],al
  415546:	lods   al,BYTE PTR ds:[esi]
  415547:	cmc    
  415548:	pusha  
  415549:	or     ebp,edx
  41554b:	aaa    
  41554c:	int    0xf0
  41554e:	inc    esp
  41554f:	mov    eax,ds:0xea1b6ddd
  415554:	sub    ebp,edi
  415556:	jmp    0x415554
  415558:	pop    eax
  415559:	jg     0x4155c3
  41555b:	mov    ebp,0xdfdb9513
  415560:	sub    al,0x75
  415562:	hlt    
  415563:	push   edx
  415564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415565:	out    dx,eax
  415566:	shl    DWORD PTR [ebp-0x2c1e5967],0x4a
  41556d:	push   0xc
  41556f:	inc    ebx
  415570:	cmp    eax,DWORD PTR [eax-0x711d7bcb]
  415576:	xor    eax,ecx
  415578:	stos   BYTE PTR es:[edi],al
  415579:	push   edx
  41557a:	cmp    al,0x85
  41557c:	xchg   ecx,eax
  41557d:	xchg   esp,eax
  41557e:	test   bl,bh
  415580:	push   ds
  415581:	imul   edx,DWORD PTR [ebx+eiz*2],0xffffffe6
  415585:	jno    0x415517
  415587:	imul   esp,esi,0x8
  41558a:	and    DWORD PTR [eax],0x3
  41558d:	or     eax,0xea8fb50a
  415592:	adc    ebx,ebp
  415594:	dec    esi
  415595:	mov    DWORD PTR [ebp-0x50],esp
  415598:	repz repz xchg esi,eax
  41559b:	test   eax,0xf35ba5e8
  4155a0:	mov    bh,0x71
  4155a2:	hlt    
  4155a3:	call   0x979b:0xb2766e83
  4155aa:	add    BYTE PTR [ebp-0x2a53a04],ah
  4155b0:	cmp    ebx,DWORD PTR [edx]
  4155b2:	adc    eax,0xf7e9e6d0
  4155b7:	cmp    eax,0x44c811d6
  4155bc:	out    dx,eax
  4155bd:	test   al,0x7c
  4155bf:	aad    0x19
  4155c1:	ss push edi
  4155c3:	arpl   bp,bx
  4155c5:	sbb    bh,dh
  4155c7:	test   al,0x3c
  4155c9:	cmp    eax,0xa42978ce
  4155ce:	js     0x41559f
  4155d0:	popf   
  4155d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155d2:	cwde   
  4155d3:	cdq    
  4155d4:	rcr    BYTE PTR [ebx+0x4918e561],cl
  4155da:	xor    BYTE PTR [ecx+0x66],dl
  4155dd:	sub    edi,esp
  4155df:	iret   
  4155e0:	lock ins BYTE PTR es:[edi],dx
  4155e2:	cmp    cl,ch
  4155e4:	or     eax,DWORD PTR [ebp+0x98e65d7]
  4155ea:	fisub  WORD PTR [eax+edi*1]
  4155ed:	jg     0x4155d4
  4155ef:	xor    al,0xb7
  4155f1:	test   al,0xa6
  4155f3:	jp     0x415667
  4155f5:	sub    eax,0xb910de
  4155fa:	ins    BYTE PTR es:[edi],dx
  4155fb:	jl     0x415582
  4155fd:	pop    ecx
  4155fe:	mov    BYTE PTR [eax+0x20],cl
  415601:	and    al,0xa5
  415603:	ret    0xd64f
  415606:	jns    0x41561d
  415608:	inc    edx
  415609:	push   eax
  41560a:	cld    
  41560b:	cmp    al,0xbe
  41560d:	aad    0x2d
  41560f:	js     0x41562e
  415611:	add    eax,ecx
  415613:	inc    ebp
  415614:	(bad)  
  415615:	icebp  
  415616:	mov    ss,WORD PTR [esi]
  415618:	add    DWORD PTR [ecx-0x49],edi
  41561b:	mov    cl,0xf5
  41561d:	xlat   BYTE PTR ds:[ebx]
  41561e:	inc    edx
  41561f:	mov    dh,0x17
  415621:	cmp    DWORD PTR [edx+0x3a],0xb44fd1eb
  415628:	rol    BYTE PTR [edx+0x36ab00fd],cl
  41562e:	dec    edi
  41562f:	call   0x83e84928
  415634:	popa   
  415635:	xchg   ebp,eax
  415636:	mov    al,ds:0xa0966cc2
  41563b:	jns    0x415682
  41563d:	mov    esp,0x27457cb6
  415642:	clc    
  415643:	xchg   DWORD PTR fs:[esi-0x25],edx
  415647:	cmp    DWORD PTR ss:[edx],0x50
  41564b:	xchg   esp,eax
  41564c:	xchg   ebx,eax
  41564d:	mov    cl,0x77
  41564f:	addr16 push 0xd108c79b
  415655:	ret    
  415656:	les    ebp,FWORD PTR [esi+0x2d]
  415659:	pop    eax
  41565a:	or     dh,BYTE PTR [ebp+0x2c3113ba]
  415660:	and    al,0x11
  415662:	fxch   st(2)
  415664:	lods   eax,DWORD PTR ds:[esi]
  415665:	aam    0x38
  415667:	dec    ebx
  415668:	inc    ebp
  415669:	pop    es
  41566a:	int    0xe8
  41566c:	jb     0x415651
  41566e:	jl     0x415693
  415670:	xchg   ebx,eax
  415671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415672:	xchg   esp,eax
  415673:	lea    ecx,[edx-0x2309a602]
  415679:	mov    cl,0x96
  41567b:	sub    ecx,DWORD PTR [ecx-0x75]
  41567e:	out    0xea,eax
  415680:	rol    DWORD PTR [ecx],0x90
  415683:	mov    ebx,0x7a813d12
  415688:	push   ss
  415689:	jp     0x4156e3
  41568b:	xlat   BYTE PTR ds:[ebx]
  41568c:	and    ebx,DWORD PTR [esi]
  41568e:	aaa    
  41568f:	xor    BYTE PTR [ecx-0x12],dh
  415692:	test   al,0x5e
  415694:	add    ah,dh
  415696:	aas    
  415697:	addr16 adc al,0xaf
  41569a:	enter  0x5590,0xfe
  41569e:	pushf  
  41569f:	sub    ebp,DWORD PTR [edx]
  4156a1:	and    BYTE PTR [ecx],bl
  4156a3:	es loopne 0x4156ae
  4156a6:	repnz cmp esp,edi
  4156a9:	(bad)  
  4156aa:	fist   DWORD PTR [ebx-0x4f]
  4156ad:	xor    DWORD PTR fs:[esi],edx
  4156b0:	shl    DWORD PTR [ebp+0x3dc26ac0],cl
  4156b6:	push   edi
  4156b7:	dec    eax
  4156b8:	and    DWORD PTR [esi+0x41],esi
  4156bb:	inc    ebp
  4156bc:	nop
  4156bd:	ficom  WORD PTR [ebx-0x12]
  4156c0:	add    eax,0x45377616
  4156c5:	ds mov edx,0x6a155a61
  4156cb:	fiadd  WORD PTR [ebp+0x10963e09]
  4156d1:	or     DWORD PTR [ebx-0x4b],ecx
  4156d4:	mov    ebp,0x83eee107
  4156d9:	sbb    eax,DWORD PTR [esp+esi*1+0x10b054a5]
  4156e0:	stc    
  4156e1:	push   es
  4156e2:	jle    0x4156fd
  4156e4:	jmp    0x9c9b:0x900d349f
  4156eb:	xchg   ebp,eax
  4156ec:	jns    0x415701
  4156ee:	or     DWORD PTR [eax],edx
  4156f0:	(bad)  
  4156f1:	fcomip st,st(4)
  4156f3:	add    DWORD PTR [edx],ebp
  4156f5:	enter  0xccf8,0x2b
  4156f9:	and    eax,0x5991fa4
  4156fe:	add    DWORD PTR [esi-0x1a],edi
  415701:	mov    edi,DWORD PTR [edi]
  415703:	lock loope 0x415737
  415706:	jle    0x415783
  415708:	or     BYTE PTR [edx+eiz*2],dh
  41570b:	adc    ecx,ecx
  41570d:	push   es
  41570e:	into   
  41570f:	jb     0x41576e
  415711:	jnp    0x41575c
  415713:	mov    ebx,0x2f5ef1b
  415718:	mov    DWORD PTR [eax+edx*2],0xa4c42cce
  41571f:	hlt    
  415720:	pushf  
  415721:	stos   BYTE PTR es:[edi],al
  415722:	or     eax,0xdc5a3890
  415728:	dec    ecx
  415729:	pop    ebp
  41572a:	mov    cl,cl
  41572c:	scas   eax,DWORD PTR es:[edi]
  41572d:	out    0x4c,eax
  41572f:	cmp    eax,0xc449d9a8
  415734:	jl     0x415792
  415736:	cwde   
  415737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415738:	test   eax,0x2249740d
  41573d:	xor    esi,edx
  41573f:	fs inc esi
  415741:	xchg   cl,bl
  415743:	xchg   esi,eax
  415744:	arpl   WORD PTR [edi],bp
  415746:	call   0x9f78:0xfb0288d5
  41574d:	stos   DWORD PTR es:[edi],eax
  41574e:	sahf   
  41574f:	push   0x925f14a9
  415754:	stos   DWORD PTR es:[edi],eax
  415755:	push   cs
  415756:	sub    ebx,esp
  415758:	add    dh,BYTE PTR ds:[ecx+0x50]
  41575c:	mov    bh,0x29
  41575e:	loope  0x415734
  415760:	(bad)  
  415761:	stos   BYTE PTR es:[edi],al
  415762:	cwde   
  415763:	mov    bl,0x36
  415765:	je     0x415742
  415767:	(bad)
  41576b:	push   ss
  41576c:	adc    ah,BYTE PTR [ebx+0x63]
  41576f:	mov    bh,0xf9
  415771:	jp     0x415781
  415773:	push   ebp
  415774:	push   eax
  415775:	cmp    BYTE PTR [ebp+0x2b4383e],bh
  41577b:	fdiv   st(2),st
  41577d:	xchg   edi,eax
  41577e:	xchg   ecx,eax
  41577f:	pop    eax
  415780:	sbb    eax,0xe6e83a3f
  415785:	jge    0x415772
  415787:	bound  ebp,QWORD PTR [ecx-0x6f]
  41578a:	mov    edx,0xb6235541
  41578f:	sar    BYTE PTR [ebx+0x5783c5ed],cl
  415795:	jl     0x41577c
  415797:	add    al,0xef
  415799:	xchg   ebx,eax
  41579a:	in     eax,0xbf
  41579c:	sub    BYTE PTR [ebx-0x41],dh
  41579f:	push   0xffffffa1
  4157a1:	push   ebp
  4157a2:	push   cs
  4157a3:	ror    BYTE PTR [ebx+0x12e40b79],cl
  4157a9:	cdq    
  4157aa:	push   cs
  4157ab:	aam    0x5e
  4157ad:	and    eax,0x2a013b28
  4157b2:	pushf  
  4157b3:	xor    al,0x60
  4157b5:	mov    ds:0xe7c508d,al
  4157ba:	adc    BYTE PTR [ecx-0x60],al
  4157bd:	xchg   BYTE PTR [ecx+0x76],ch
  4157c0:	and    cl,BYTE PTR [ecx-0x3c]
  4157c3:	pop    ecx
  4157c4:	popf   
  4157c5:	pop    ecx
  4157c6:	cmp    DWORD PTR [ecx+0x1645d7e5],esi
  4157cc:	idiv   DWORD PTR [ebx-0x277cae50]
  4157d2:	lahf   
  4157d3:	out    dx,eax
  4157d4:	(bad)  
  4157d5:	loope  0x4157c4
  4157d7:	add    BYTE PTR [ebx],ch
  4157d9:	push   eax
  4157da:	out    0x0,al
  4157dc:	lea    eax,[ebx+edx*8]
  4157df:	fwait
  4157e0:	xchg   esp,eax
  4157e1:	cs inc ebp
  4157e3:	mov    dl,0x44
  4157e5:	jl     0x4157e2
  4157e7:	inc    edx
  4157e8:	ds iret 
  4157ea:	push   cs
  4157eb:	fst    st(0)
  4157ed:	js     0x415794
  4157ef:	push   ecx
  4157f0:	xor    BYTE PTR [edx+ecx*8+0x41166083],al
  4157f7:	div    DWORD PTR [edi]
  4157f9:	xor    BYTE PTR [edi-0x7260752a],bh
  4157ff:	inc    ebx
  415800:	and    eax,0xe04527d7
  415805:	ins    BYTE PTR es:[edi],dx
  415806:	(bad)  [ebx-0x32345042]
  41580c:	push   cs
  41580d:	lods   al,BYTE PTR ds:[esi]
  41580e:	jp     0x4157a5
  415810:	repnz sbb BYTE PTR [esi+0x63daafc1],bl
  415817:	jns    0x415861
  415819:	xchg   BYTE PTR [edx],bh
  41581b:	pop    ds
  41581c:	popa   
  41581d:	(bad)  
  41581e:	jnp    0x4157bd
  415820:	add    ch,BYTE PTR [eax-0x66]
  415823:	gs adc ah,ah
  415826:	jge    0x4157b3
  415828:	(bad)  
  415829:	jns    0x41587b
  41582b:	mov    esp,0xbe76b718
  415830:	xchg   DWORD PTR [eax],esi
  415832:	(bad)  
  415833:	out    0x42,al
  415835:	icebp  
  415836:	(bad)  
  415837:	aad    0x1b
  415839:	jge    0x4158a7
  41583b:	arpl   WORD PTR [edi+ecx*8+0x4f],ax
  41583f:	loope  0x415841
  415841:	das    
  415842:	jb     0x4158b7
  415844:	push   ebx
  415845:	arpl   WORD PTR [edx-0x4],bp
  415848:	inc    edi
  415849:	fcom   QWORD PTR [eax-0x79c03291]
  41584f:	cmp    eax,0xa7f5830c
  415854:	fiadd  DWORD PTR [eax+0xb]
  415857:	push   ecx
  415858:	xchg   esp,eax
  415859:	into   
  41585a:	aaa    
  41585b:	fisubr WORD PTR [esi+0x54e6236c]
  415861:	outs   dx,DWORD PTR ds:[esi]
  415862:	aaa    
  415863:	push   ss
  415864:	(bad)  
  415865:	les    ebp,FWORD PTR [esi]
  415867:	mov    cl,0xa7
  415869:	and    BYTE PTR [edx+0x4d6205f3],cl
  41586f:	(bad)  
  415870:	adc    bh,dl
  415872:	jno    0x4158e2
  415874:	inc    ebx
  415875:	inc    ecx
  415876:	loop   0x415872
  415878:	test   al,0x48
  41587a:	sbb    eax,0x4ff67d2d
  41587f:	push   ds
  415880:	fiadd  DWORD PTR [ebp-0x74af1179]
  415886:	xor    edi,0xc136b4e4
  41588c:	xchg   ecx,eax
  41588d:	jle    0x4158d7
  41588f:	mov    cl,0xc9
  415891:	sbb    dh,bl
  415893:	adc    esi,eax
  415895:	push   ss
  415896:	dec    eax
  415897:	and    al,ch
  415899:	dec    eax
  41589a:	call   0xa1055109
  41589f:	das    
  4158a0:	fdiv   DWORD PTR [eax+0x51aeb323]
  4158a6:	imul   DWORD PTR [ecx+0x697f4038]
  4158ac:	push   cs
  4158ad:	xor    BYTE PTR [edi*1+0x345d9ca2],dh
  4158b4:	fs fs mov esp,0x35fdb6cd
  4158bb:	xor    eax,0xcc9eefec
  4158c0:	inc    eax
  4158c1:	mov    WORD PTR [esi+0x10e71809],ds
  4158c7:	lock imul edx,DWORD PTR [edi+0x1b60ee51],0x2a
  4158cf:	push   esp
  4158d0:	pop    ss
  4158d1:	sub    bl,dh
  4158d3:	fiadd  DWORD PTR [ecx]
  4158d5:	mov    esi,0xf2bae90b
  4158da:	push   cs
  4158db:	sbb    bh,BYTE PTR [ebx+0x32]
  4158de:	(bad)  
  4158df:	aam    0x20
  4158e1:	xor    BYTE PTR [esi],al
  4158e3:	and    DWORD PTR [eax+0x51c529a],0xfd8547ae
  4158ed:	test   eax,0x2b26bb8e
  4158f2:	xchg   BYTE PTR [eax],cl
  4158f4:	mov    ds:0x63aa34bc,eax
  4158f9:	or     BYTE PTR [edx+esi*1+0x2a],al
  4158fd:	jne    0x4158ce
  4158ff:	pop    es
  415900:	mov    bh,0x82
  415902:	mov    bl,0xe
  415904:	jp     0x415962
  415906:	lods   eax,DWORD PTR ds:[esi]
  415907:	mov    ecx,0x2d1ab518
  41590c:	jmp    0x99f23b31
  415911:	retf   
  415912:	fst    QWORD PTR [edi]
  415914:	hlt    
  415915:	repnz or bh,BYTE PTR [edi+0x78]
  415919:	imul   esi,DWORD PTR [eax+0x38],0x789693f3
  415920:	mov    eax,ds:0x12ca8447
  415925:	mov    esp,0x15f03ba
  41592a:	test   al,0x9a
  41592c:	out    0xbe,al
  41592e:	push   ecx
  41592f:	fldenv [eax]
  415931:	mov    al,ds:0x5a7fe5b2
  415936:	test   BYTE PTR [eax+ecx*2],ch
  415939:	push   0x34
  41593b:	cwde   
  41593c:	mov    ds:0x138d5e8c,eax
  415941:	fs cmp ah,cl
  415944:	call   0xedf6:0x8a548d40
  41594b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41594c:	mov    edx,0x9225399f
  415951:	js     0x415910
  415953:	js     0x4158e0
  415955:	das    
  415956:	lods   al,BYTE PTR ds:[esi]
  415957:	xchg   edx,eax
  415958:	pushf  
  415959:	sub    ecx,DWORD PTR [ecx]
  41595b:	xchg   edi,eax
  41595c:	loopne 0x415942
  41595e:	xor    eax,0x36
  415961:	test   al,0xb7
  415963:	sbb    BYTE PTR [ebx],0xd2
  415966:	fwait
  415967:	test   eax,0xf545848f
  41596c:	ins    DWORD PTR es:[edi],dx
  41596d:	jb     0x415996
  41596f:	inc    edx
  415970:	aam    0x1c
  415972:	(bad)  
  415973:	mov    eax,0xe68eefa1
  415978:	imul   ebp,DWORD PTR [ecx+ebp*1],0xb9b77b4
  41597f:	fdivr  DWORD PTR [esi]
  415981:	cmp    DWORD PTR [esi],esp
  415983:	out    0x52,eax
  415985:	shl    DWORD PTR [edx],cl
  415987:	xchg   ecx,eax
  415988:	leave  
  415989:	js     0x4159fb
  41598b:	sub    edx,DWORD PTR [ecx+0x6ca87c1b]
  415991:	out    dx,eax
  415992:	popa   
  415993:	or     ecx,DWORD PTR [ebp+ebp*1-0x2e37dc81]
  41599a:	jmp    esi
  41599c:	out    0x9c,al
  41599e:	loope  0x4159de
  4159a0:	mov    cl,0xb4
  4159a2:	push   ebp
  4159a3:	adc    DWORD PTR [esi+0x1d],esp
  4159a6:	sub    edx,ebp
  4159a8:	jae    0x415a01
  4159aa:	cmp    eax,0x75dfdf57
  4159af:	mov    esi,0xeb0a83e0
  4159b4:	cmp    al,0xd7
  4159b6:	sbb    ebx,DWORD PTR [ebp-0x5f2e1127]
  4159bc:	(bad)  
  4159bd:	cmp    dl,ch
  4159bf:	inc    edx
  4159c0:	jne    0x4159b2
  4159c2:	cld    
  4159c3:	enter  0xe28d,0xff
  4159c7:	out    0x1,al
  4159c9:	shl    ecx,1
  4159cb:	xor    esi,eax
  4159cd:	cld    
  4159ce:	imul   eax,DWORD PTR [ebp+0x4f1272f2],0xffffffaf
  4159d5:	sub    al,BYTE PTR [edi+0x44]
  4159d8:	fidivr WORD PTR [edi+0x3a507481]
  4159de:	jb     0x415a18
  4159e0:	add    DWORD PTR [ebp-0x40],edi
  4159e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159e4:	mov    ebx,0x8b3acd60
  4159e9:	mov    ds:0x29f36c40,al
  4159ee:	inc    esi
  4159ef:	loop   0x4159ff
  4159f1:	cmp    DWORD PTR [esi+0x1338d171],ebp
  4159f7:	sbb    al,0x45
  4159f9:	jge    0x415a2d
  4159fb:	push   ebp
  4159fc:	adc    al,0xb8
  4159fe:	outs   dx,DWORD PTR ds:[esi]
  4159ff:	js     0x415a4d
  415a01:	mov    dh,0xc
  415a03:	sub    eax,0xb5fca58
  415a08:	adc    BYTE PTR [eax-0x1ffc0393],ch
  415a0e:	pop    ss
  415a0f:	lock fcmovne st,st(6)
  415a12:	sar    ecx,0x54
  415a15:	inc    esi
  415a16:	popf   
  415a17:	fcom   DWORD PTR [ecx+0x3385aeca]
  415a1d:	es ins BYTE PTR es:[edi],dx
  415a1f:	lods   al,BYTE PTR ds:[esi]
  415a20:	imul   edi,DWORD PTR [edi-0x27],0xdabb5b52
  415a27:	cwde   
  415a28:	fwait
  415a29:	pushf  
  415a2a:	es cmc 
  415a2c:	jb     0x4159d3
  415a2e:	dec    ebp
  415a2f:	in     eax,0x40
  415a31:	mov    ebx,0x3bef38c3
  415a36:	push   cs
  415a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a38:	xor    ah,BYTE PTR [edx+0x67]
  415a3b:	mov    dh,0x12
  415a3d:	pop    ecx
  415a3e:	aaa    
  415a3f:	lods   al,BYTE PTR ds:[esi]
  415a40:	cmp    eax,0x68df8b59
  415a45:	xor    ebp,DWORD PTR [edi]
  415a47:	outs   dx,DWORD PTR ds:[esi]
  415a48:	out    dx,al
  415a49:	out    0x40,al
  415a4b:	pop    esi
  415a4c:	sbb    al,0x6e
  415a4e:	pop    ss
  415a4f:	add    edi,DWORD PTR [ecx]
  415a51:	les    edi,FWORD PTR [esi+0x6d]
  415a54:	imul   edx,DWORD PTR [eax+0x78b86802],0x9
  415a5b:	or     al,0xc6
  415a5d:	in     eax,dx
  415a5e:	aad    0x5d
  415a60:	jl     0x4159ff
  415a62:	or     eax,0x34e4eb7c
  415a67:	adc    dl,dl
  415a69:	fdiv   DWORD PTR [ebx]
  415a6b:	mov    esi,0xbd33880f
  415a70:	adc    al,0xc5
  415a72:	test   eax,0x1261e0e8
  415a77:	loope  0x415a4a
  415a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a7a:	dec    edx
  415a7b:	xchg   edi,eax
  415a7c:	or     dl,BYTE PTR [eax]
  415a7e:	imul   ebx,ecx,0x38168505
  415a84:	clc    
  415a85:	mov    DWORD PTR [ebx-0x7],ebp
  415a88:	xchg   edi,eax
  415a89:	jmp    0xe13a:0x582fc661
  415a90:	scas   al,BYTE PTR es:[edi]
  415a91:	popa   
  415a92:	into   
  415a93:	js     0x415abb
  415a95:	clc    
  415a96:	test   ebx,0x2584a4ff
  415a9c:	inc    ebx
  415a9d:	mov    al,0xd2
  415a9f:	or     eax,0x10f043d5
  415aa4:	and    bl,BYTE PTR [ebx-0x1ef53e62]
  415aaa:	mov    al,ds:0x9995edb8
  415aaf:	ja     0x415a61
  415ab1:	sbb    BYTE PTR [edi-0x5c],ch
  415ab4:	cmp    BYTE PTR [eax],0x32
  415ab7:	test   BYTE PTR [ecx],al
  415ab9:	sbb    al,0xff
  415abb:	mov    dl,0xf6
  415abd:	jmp    DWORD PTR [ebp+0x2]
  415ac0:	lods   eax,DWORD PTR ds:[esi]
  415ac1:	or     bh,bl
  415ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ac4:	call   0x1385:0xcc6ca48a
  415acb:	jp     0x415a59
  415acd:	xor    BYTE PTR [edi],0x52
  415ad0:	pop    es
  415ad1:	dec    eax
  415ad2:	sub    ebp,DWORD PTR [eax]
  415ad4:	jmp    0x415a7c
  415ad6:	push   ecx
  415ad7:	inc    edi
  415ad8:	(bad)  
  415ad9:	outs   dx,DWORD PTR ds:[esi]
  415ada:	ja     0x415b51
  415adc:	ret    
  415add:	mov    edi,0x5e54ba04
  415ae2:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  415ae4:	inc    ecx
  415ae5:	push   ebx
  415ae6:	out    dx,eax
  415ae7:	sbb    al,0x2e
  415ae9:	and    eax,0x1619cc8d
  415aee:	(bad)  
  415aef:	adc    edi,DWORD PTR ds:0x50005fe3
  415af5:	push   ebx
  415af6:	test   BYTE PTR [eax+0x3e37f112],0xaa
  415afd:	adc    al,BYTE PTR [ebx]
  415aff:	dec    edi
  415b00:	push   es
  415b01:	(bad)  
  415b02:	stos   DWORD PTR es:[edi],eax
  415b03:	inc    esp
  415b04:	jae    0x415b6e
  415b06:	imul   esp,DWORD PTR [edi-0x6916681d],0x32fa4853
  415b10:	mov    al,ds:0x115d60f1
  415b15:	fstp   DWORD PTR [ebp-0x1ef495af]
  415b1b:	dec    ebx
  415b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b1d:	xor    BYTE PTR [edi],ch
  415b1f:	jns    0x415b39
  415b21:	and    cl,BYTE PTR [ecx-0x2b91915c]
  415b27:	cli    
  415b28:	stc    
  415b29:	pop    ss
  415b2a:	inc    eax
  415b2b:	add    esi,DWORD PTR [ebp-0x76]
  415b2e:	sub    BYTE PTR [ebp+0x5220b56e],bl
  415b34:	inc    ebx
  415b35:	inc    edi
  415b36:	inc    edx
  415b37:	out    0x2b,eax
  415b39:	vmwrite edi,ebx
  415b3c:	in     eax,dx
  415b3d:	mov    ah,0xbc
  415b3f:	xor    edx,ecx
  415b41:	(bad)  
  415b42:	lahf   
  415b43:	cmp    BYTE PTR [ecx-0x28],cl
  415b46:	add    bh,BYTE PTR [ecx-0x52]
  415b49:	xchg   ebp,eax
  415b4a:	outs   dx,BYTE PTR ds:[esi]
  415b4b:	xchg   BYTE PTR es:[ebx-0x51be1da3],al
  415b52:	mov    ss,WORD PTR [edi+eiz*8+0x3a264230]
  415b59:	sahf   
  415b5a:	dec    esp
  415b5b:	push   0xfe795db8
  415b60:	in     eax,0x68
  415b62:	(bad)  
  415b63:	es (bad) 
  415b65:	mov    eax,ds:0xa24b5b1e
  415b6a:	pop    eax
  415b6b:	retf   
  415b6c:	sbb    al,0xed
  415b6e:	add    edi,DWORD PTR [eax+0x13c6c0f8]
  415b74:	xlat   BYTE PTR ds:[ebx]
  415b75:	sub    ecx,DWORD PTR [eax]
  415b77:	push   edi
  415b78:	leave  
  415b79:	jo     0x415b76
  415b7b:	bound  esp,QWORD PTR [ebx+0x5a]
  415b7e:	dec    ebx
  415b7f:	mov    edi,0xa15a1f9e
  415b84:	cmp    ebp,eax
  415b86:	fwait
  415b87:	test   BYTE PTR [edi-0x5a],cl
  415b8a:	pop    ss
  415b8b:	adc    ebx,eax
  415b8d:	push   ebx
  415b8e:	adc    ecx,ebx
  415b90:	sbb    al,BYTE PTR [eax]
  415b92:	(bad)  
  415b93:	lds    sp,DWORD PTR [edx+esi*1]
  415b97:	jae    0x415c08
  415b99:	mov    ds:0x882ac7cf,eax
  415b9e:	(bad)  
  415b9f:	hlt    
  415ba0:	in     eax,0xdb
  415ba2:	and    edx,DWORD PTR [edx]
  415ba4:	add    bh,ah
  415ba6:	push   ss
  415ba7:	push   0xffffffb0
  415ba9:	fistp  QWORD PTR [edi+0x3fbbe153]
  415baf:	adc    edi,DWORD PTR [esi+ebp*8-0x20c628fb]
  415bb6:	cs jae 0x415c29
  415bb9:	push   ecx
  415bba:	dec    edx
  415bbb:	dec    ebx
  415bbc:	mov    WORD PTR [ebx+0x11c0fc5b],ds
  415bc2:	xchg   esp,eax
  415bc3:	push   ebx
  415bc4:	cmp    eax,0xe1e2cea4
  415bc9:	mov    esi,0x7e2b0c85
  415bce:	push   edi
  415bcf:	xchg   DWORD PTR [esi],ecx
  415bd1:	pop    esi
  415bd2:	or     BYTE PTR [edi],ch
  415bd4:	xchg   edi,eax
  415bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bd6:	adc    BYTE PTR [edi],cl
  415bd8:	retf   
  415bd9:	xor    BYTE PTR [esi],al
  415bdb:	lds    esi,FWORD PTR [ecx-0x4ff36d7b]
  415be1:	outs   dx,BYTE PTR ds:[esi]
  415be2:	mov    al,ds:0xda32827
  415be7:	sbb    BYTE PTR [ecx+0x3e],ah
  415bea:	jecxz  0x415c18
  415bec:	mov    bl,0xea
  415bee:	mov    al,0xaa
  415bf0:	jl     0x415b85
  415bf2:	jbe    0x415c42
  415bf4:	ss (bad) 
  415bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bf7:	add    eax,DWORD PTR [ecx+0x63]
  415bfa:	xor    al,0xe9
  415bfc:	(bad)  
  415bfd:	jns    0x415bd8
  415bff:	retf   
  415c00:	cmp    BYTE PTR [ebx+0x7027a4ff],bl
  415c06:	pushf  
  415c07:	push   es
  415c08:	fcmovbe st,st(5)
  415c0a:	mov    DWORD PTR [edi-0x22],ebx
  415c0d:	jge    0x415ba9
  415c0f:	xor    BYTE PTR es:[ebx+0x31de10d5],dl
  415c16:	jb     0x415c59
  415c18:	cdq    
  415c19:	(bad)  
  415c1a:	xor    BYTE PTR [ebx+0x399a6877],bl
  415c20:	iret   
  415c21:	je     0x415c4b
  415c23:	jnp    0x415c67
  415c25:	mov    ebp,0xd1d010ae
  415c2a:	mov    dh,0xae
  415c2c:	rcr    BYTE PTR [esi+edx*1+0x52ae1d19],0x20
  415c34:	int    0x19
  415c36:	mov    dh,0x8a
  415c38:	cdq    
  415c39:	shl    dh,cl
  415c3b:	push   ebp
  415c3c:	nop
  415c3d:	mov    cx,ds
  415c40:	stc    
  415c41:	dec    ecx
  415c42:	or     eax,0xfe01a8fa
  415c47:	sar    DWORD PTR [ecx+0x52],1
  415c4a:	in     eax,0xe2
  415c4c:	out    dx,eax
  415c4d:	test   eax,0x46c54928
  415c52:	mov    eax,ds:0x84a380d2
  415c57:	rep ins DWORD PTR es:[edi],dx
  415c59:	sar    BYTE PTR [esi+0x1fb8f6fe],cl
  415c5f:	cld    
  415c60:	xor    BYTE PTR [ebx+0x79],dl
  415c63:	mov    ds:0x43b584e0,eax
  415c68:	(bad)  
  415c69:	xchg   esp,eax
  415c6a:	(bad)  
  415c6b:	imul   ebx,DWORD PTR [eax-0x27],0xffffffb8
  415c6f:	sti    
  415c70:	iret   
  415c71:	daa    
  415c72:	mov    cl,0x61
  415c74:	into   
  415c75:	aaa    
  415c76:	inc    edi
  415c77:	add    BYTE PTR [eax-0x6540f6b4],bl
  415c7d:	test   BYTE PTR [esi-0x2b828cc3],ah
  415c83:	aad    0x4c
  415c85:	outs   dx,BYTE PTR ds:[esi]
  415c86:	cli    
  415c87:	mov    eax,0x957a90b9
  415c8c:	cmp    edi,DWORD PTR [edi+0x31]
  415c8f:	pop    ss
  415c90:	rcr    ebp,1
  415c92:	or     edx,DWORD PTR [edi]
  415c94:	inc    edx
  415c95:	sub    BYTE PTR [edx+0x51],0xff
  415c99:	pop    ds
  415c9a:	das    
  415c9b:	gs jnp 0x415c6e
  415c9e:	mov    eax,0x4f1fa250
  415ca3:	xor    bh,BYTE PTR [edi+0x3b26abba]
  415ca9:	outs   dx,DWORD PTR ds:[esi]
  415caa:	sbb    al,0x24
  415cac:	fwait
  415cad:	out    0x2b,eax
  415caf:	ja     0x415cca
  415cb1:	cmp    BYTE PTR [ebx-0x16],0x89
  415cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cb6:	out    0xbc,eax
  415cb8:	cmp    eax,0x23c01f44
  415cbd:	out    dx,al
  415cbe:	ins    DWORD PTR es:[edi],dx
  415cbf:	in     al,dx
  415cc0:	test   DWORD PTR [esi+eiz*8],ebx
  415cc3:	jbe    0x415d41
  415cc5:	stos   BYTE PTR es:[edi],al
  415cc6:	jae    0x415d38
  415cc8:	xchg   BYTE PTR [edi+0x44fe0a4d],ah
  415cce:	dec    edi
  415ccf:	and    BYTE PTR [eax-0x24b5b819],bl
  415cd5:	inc    bl
  415cd7:	loop   0x415d3e
  415cd9:	addr16 sti 
  415cdb:	or     eax,0x6bcfcc15
  415ce0:	addr16 mov bh,0xc0
  415ce3:	adc    ebx,DWORD PTR [esp+eax*4+0x50c59c76]
  415cea:	dec    eax
  415ceb:	jae    0x415d0f
  415ced:	mov    al,0x71
  415cef:	mov    cl,0x8b
  415cf1:	in     eax,0xbd
  415cf3:	jmp    0x83fa:0xfd997f2c
  415cfa:	mov    dl,0x8b
  415cfc:	xchg   BYTE PTR [ecx],al
  415cfe:	add    al,0x97
  415d00:	adc    bh,BYTE PTR [ebx+0x1d]
  415d03:	cmp    eax,0xf60c7946
  415d08:	cmp    al,0xfd
  415d0a:	push   ebp
  415d0b:	and    DWORD PTR [esi+0x2a],0xffffffd7
  415d0f:	aam    0xe6
  415d11:	pop    ecx
  415d12:	dec    ebp
  415d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d14:	sbb    bl,cl
  415d16:	adc    BYTE PTR [ebx+0x47],0x89
  415d1a:	mov    al,0x43
  415d1c:	and    DWORD PTR [edx+0x3d7adfbc],ecx
  415d22:	test   bl,bh
  415d24:	test   eax,0xaeffb37a
  415d29:	shr    BYTE PTR [edx+edi*8-0x49],cl
  415d2d:	mov    cl,0x67
  415d2f:	dec    ecx
  415d30:	mov    ds:0x3087c112,al
  415d35:	jbe    0x415ce8
  415d37:	xchg   ebp,eax
  415d38:	mov    BYTE PTR [esi+0x6fe2068],ch
  415d3e:	sub    BYTE PTR [ecx+eax*4+0x3d],0x3c
  415d43:	mov    eax,0x4fca1e8c
  415d48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d49:	xor    eax,0x313d25c
  415d4e:	xor    eax,0xaa5ede3a
  415d53:	mov    esi,0xfe968b72
  415d58:	std    
  415d59:	sbb    edx,ebx
  415d5b:	jge    0x415ce7
  415d5d:	popf   
  415d5e:	mov    ah,0xc8
  415d60:	(bad)  
  415d61:	sbb    eax,0x152b5c7b
  415d66:	stos   DWORD PTR es:[edi],eax
  415d67:	push   es
  415d68:	hlt    
  415d69:	inc    edx
  415d6a:	sbb    cl,BYTE PTR [ebx-0x7070d27a]
  415d70:	enter  0xa5a7,0x42
  415d74:	(bad)  
  415d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d77:	out    0x9,al
  415d79:	les    ebx,FWORD PTR [ecx]
  415d7b:	mov    edx,0xc36c0502
  415d80:	add    al,dh
  415d82:	sbb    DWORD PTR [eax+0x1f85dd07],eax
  415d88:	and    BYTE PTR [ebp-0x1038ad9b],dh
  415d8e:	fstsw  WORD PTR [edi+0x5e]
  415d92:	(bad)  
  415d94:	iret   
  415d95:	mov    al,ds:0xccd2df82
  415d9a:	xchg   BYTE PTR [edi-0x47],cl
  415d9d:	jp     0x415d6c
  415d9f:	(bad)  
  415da0:	mov    eax,ds:0xcccb2328
  415da5:	sbb    bh,BYTE PTR [ebx]
  415da7:	not    BYTE PTR ds:0x47712930
  415dad:	push   edi
  415dae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415daf:	outs   dx,DWORD PTR ds:[esi]
  415db0:	pop    ecx
  415db1:	loope  0x415dc1
  415db3:	mov    ch,0xec
  415db5:	cli    
  415db6:	ss pop esi
  415db8:	dec    ebp
  415db9:	aad    0x9b
  415dbb:	jno    0x415df5
  415dbd:	mov    ds:0xae8f2a76,eax
  415dc2:	push   esi
  415dc3:	push   edi
  415dc4:	push   cs
  415dc5:	pop    ds
  415dc6:	aam    0x9c
  415dc8:	fld    TBYTE PTR [ecx-0x2ce31660]
  415dce:	pop    esi
  415dcf:	dec    eax
  415dd0:	sbb    BYTE PTR [esi+0x3c1375ee],ah
  415dd6:	(bad)
  415ddb:	aas    
  415ddc:	push   edi
  415ddd:	pop    ds
  415dde:	dec    ebx
  415ddf:	lock push ss
  415de1:	fcom   QWORD PTR [esi-0x76fc1240]
  415de7:	add    bh,dh
  415de9:	mov    ch,0xfa
  415deb:	jge    0x415dd7
  415ded:	test   eax,0xc0d2c98c
  415df2:	repnz sbb cl,cl
  415df5:	ins    BYTE PTR es:[edi],dx
  415df6:	jmp    0xad3725fe
  415dfb:	adc    cl,cl
  415dfd:	ss push 0xffffffc4
  415e00:	ja     0x415dde
  415e02:	pop    ss
  415e03:	cli    
  415e04:	gs ds xchg esp,eax
  415e07:	call   0xa678:0xc293d903
  415e0e:	outs   dx,DWORD PTR ds:[esi]
  415e0f:	fdiv   DWORD PTR [edx]
  415e11:	and    DWORD PTR [ebp-0x6c],esp
  415e14:	jecxz  0x415dcd
  415e16:	inc    esi
  415e17:	cmc    
  415e18:	mov    cl,0x34
  415e1a:	cmp    DWORD PTR [ebp-0x2a],esi
  415e1d:	dec    ebp
  415e1e:	push   0x26
  415e20:	or     bh,BYTE PTR [ecx+esi*1]
  415e23:	lock cmps DWORD PTR es:[esi],DWORD PTR es:[edi]
  415e26:	test   DWORD PTR [eax+0x37],0xcc09d471
  415e2d:	ins    BYTE PTR es:[edi],dx
  415e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e2f:	xchg   BYTE PTR [ecx+ecx*2],al
  415e32:	clc    
  415e33:	sub    al,0x66
  415e35:	aam    0xe7
  415e37:	stos   BYTE PTR es:[edi],al
  415e38:	shl    DWORD PTR [ebp-0x1cfdc8aa],0xc7
  415e3f:	sahf   
  415e40:	dec    eax
  415e41:	jecxz  0x415e59
  415e43:	pop    eax
  415e44:	mov    ebx,0x1aafe440
  415e49:	pop    ebp
  415e4a:	xchg   edx,eax
  415e4b:	pushf  
  415e4c:	es lahf 
  415e4e:	les    esp,FWORD PTR [edi]
  415e50:	lea    ecx,[ebp+0x46]
  415e53:	hlt    
  415e54:	or     ecx,0x3
  415e57:	or     ch,bl
  415e59:	mov    ds,esp
  415e5b:	and    al,0x5a
  415e5d:	fistp  WORD PTR [esi+eiz*1]
  415e60:	push   es
  415e61:	(bad)
  415e66:	es or  al,0xaf
  415e69:	push   edi
  415e6a:	jnp    0x415ec4
  415e6c:	dec    eax
  415e6d:	sub    DWORD PTR [ebx-0x1a995a73],esi
  415e73:	test   DWORD PTR [eax+ecx*4],ebp
  415e76:	mov    dh,0xa4
  415e78:	ja     0x415ecb
  415e7a:	dec    ebp
  415e7b:	adc    DWORD PTR [ebx+0x65],0xffffffb4
  415e7f:	cmp    al,0xcf
  415e81:	pop    edx
  415e82:	ds stos BYTE PTR es:[edi],al
  415e84:	rcl    DWORD PTR [esi+eax*1+0x4c],cl
  415e88:	dec    ecx
  415e89:	outs   dx,BYTE PTR ds:[esi]
  415e8a:	xor    eax,0x2bdfe77
  415e8f:	push   esp
  415e90:	dec    esp
  415e91:	adc    BYTE PTR [edx+esi*2],dl
  415e94:	daa    
  415e95:	inc    ebx
  415e96:	call   0x67eff1d6
  415e9b:	inc    eax
  415e9c:	push   esp
  415e9d:	mov    edi,0x39df2642
  415ea2:	iret   
  415ea3:	jo     0x415e66
  415ea5:	enter  0x86fe,0x2d
  415ea9:	jne    0x415e5c
  415eab:	fisub  DWORD PTR [eax+0xa567886]
  415eb1:	sbb    al,0x25
  415eb3:	lods   eax,DWORD PTR ds:[esi]
  415eb4:	xchg   BYTE PTR [esi],ch
  415eb6:	pop    es
  415eb7:	scas   al,BYTE PTR es:[edi]
  415eb8:	sub    BYTE PTR [eax+0x2],ch
  415ebb:	iret   
  415ebc:	add    bh,cl
  415ebe:	or     BYTE PTR ds:0x5e14d05e,ah
  415ec4:	scas   eax,DWORD PTR es:[edi]
  415ec5:	mov    bh,0xd
  415ec7:	or     al,0xaa
  415ec9:	mov    ebx,0x46875401
  415ece:	adc    eax,0x4f5004a2
  415ed3:	push   ds
  415ed4:	ss sub ah,ah
  415ed7:	mov    dl,BYTE PTR [ebx-0x45b06ebf]
  415edd:	ret    0x604d
  415ee0:	not    ecx
  415ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ee3:	xchg   edx,eax
  415ee4:	adc    eax,0xdb7f5e25
  415ee9:	sub    al,0x11
  415eeb:	cs cdq 
  415eed:	inc    edi
  415eee:	lds    eax,FWORD PTR [esi-0x28]
  415ef1:	(bad)  
  415ef2:	ins    DWORD PTR es:[edi],dx
  415ef3:	adc    cl,BYTE PTR [ebx]
  415ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ef6:	ret    
  415ef7:	retf   
  415ef8:	aaa    
  415ef9:	rcl    DWORD PTR [esi+0x704b4ae4],0x69
  415f00:	int    0xd6
  415f02:	push   ds
  415f03:	jo     0x415e90
  415f05:	dec    eax
  415f06:	out    dx,al
  415f07:	and    eax,0x89ae9610
  415f0c:	sahf   
  415f0d:	pop    ss
  415f0e:	cmp    eax,0x5a58fea4
  415f13:	jo     0x415f87
  415f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f16:	je     0x415ecc
  415f18:	jno    0x415f30
  415f1a:	mov    BYTE PTR [esi+0x3104ca5f],ch
  415f20:	sub    BYTE PTR [edi-0x5d32f0a],bl
  415f26:	xchg   ebp,eax
  415f27:	rol    bl,cl
  415f29:	mov    edi,db4
  415f2c:	push   ss
  415f2d:	mov    al,0x45
  415f2f:	or     BYTE PTR [esi+0x5ddd9842],cl
  415f35:	push   0x52242de9
  415f3a:	mov    al,ds:0xeb5ace48
  415f3f:	retf   0x9fed
  415f42:	or     BYTE PTR [edx],ch
  415f44:	and    ch,0x6
  415f47:	out    dx,al
  415f48:	mov    bl,0xc9
  415f4a:	and    al,0x23
  415f4c:	lock push cs
  415f4e:	or     al,0x35
  415f50:	mov    bh,0xdf
  415f52:	add    bl,BYTE PTR [edx+ebx*8]
  415f55:	sub    bh,BYTE PTR [ebp+0x69]
  415f58:	add    DWORD PTR ds:0x37a5355e,esp
  415f5e:	jne    0x415f4c
  415f60:	(bad)  
  415f61:	lahf   
  415f62:	ror    DWORD PTR [esi],cl
  415f64:	jp     0x415fcf
  415f66:	(bad)  
  415f67:	(bad)  
  415f68:	jnp    0x415f1e
  415f6a:	in     al,dx
  415f6b:	das    
  415f6c:	cdq    
  415f6d:	ficomp WORD PTR [esi]
  415f6f:	mov    ss,WORD PTR [esi]
  415f71:	es retf 
  415f73:	dec    esi
  415f74:	fisttp DWORD PTR [edx-0xb]
  415f77:	push   ss
  415f78:	dec    ecx
  415f79:	sbb    al,0x31
  415f7b:	and    BYTE PTR [edx-0x12],0x57
  415f7f:	(bad)  
  415f80:	sbb    DWORD PTR [esi+ebx*2+0x6d1cd9f6],ebp
  415f87:	call   0x17e6:0x9a9e9f26
  415f8e:	add    bl,BYTE PTR [ebx-0x5a]
  415f91:	test   al,0xe2
  415f93:	xchg   ecx,eax
  415f94:	aaa    
  415f95:	xchg   DWORD PTR [ecx],eax
  415f97:	imul   ebx,DWORD PTR [esi+ebp*1+0x6b109bdd],0x23
  415f9f:	push   edi
  415fa0:	pop    ds
  415fa1:	xchg   BYTE PTR [edx+0x74],al
  415fa4:	mov    cs,WORD PTR [ebp+0xaabcf49]
  415faa:	fwait
  415fab:	ins    BYTE PTR es:[edi],dx
  415fac:	mov    ?,edx
  415fae:	out    0xae,al
  415fb0:	adc    al,0x94
  415fb2:	stos   DWORD PTR es:[edi],eax
  415fb3:	fistp  DWORD PTR [esi]
  415fb5:	inc    esi
  415fb6:	xchg   esp,eax
  415fb7:	xchg   ebx,eax
  415fb8:	xchg   DWORD PTR [ebx+0x68fb7ac9],edx
  415fbe:	scas   al,BYTE PTR es:[edi]
  415fbf:	lods   al,BYTE PTR ds:[esi]
  415fc0:	xlat   BYTE PTR ds:[ebx]
  415fc1:	data16 cmc 
  415fc3:	stc    
  415fc4:	and    ebx,ebp
  415fc6:	loopne 0x416014
  415fc8:	push   edi
  415fc9:	retf   
  415fca:	push   edx
  415fcb:	out    dx,eax
  415fcc:	dec    edx
  415fcd:	sub    ebx,DWORD PTR [esi+ecx*2-0x12]
  415fd1:	loop   0x415fe7
  415fd3:	xchg   esi,eax
  415fd4:	dec    esp
  415fd5:	stc    
  415fd6:	fidivr DWORD PTR [ebx-0x14ab1e5a]
  415fdc:	test   DWORD PTR [eax+0x69],0xc259e669
  415fe3:	adc    esi,edx
  415fe5:	test   DWORD PTR [eax+0x71e99363],esp
  415feb:	push   0xc
  415fed:	daa    
  415fee:	cmp    al,0xe3
  415ff0:	lods   eax,DWORD PTR ds:[esi]
  415ff1:	or     DWORD PTR [ebx+0x7bd1cf0c],0x1112be55
  415ffb:	std    
  415ffc:	cli    
  415ffd:	(bad)  
  415ffe:	sahf   
  415fff:	test   eax,0x45e080fa
  416004:	or     eax,0x5ee18eda
  416009:	dec    edx
  41600a:	mov    eax,ds:0xf9c4207d
  41600f:	clc    
  416010:	fisttp DWORD PTR [ecx+0x31]
  416013:	mov    esi,0xb39ced0e
  416018:	cmp    ecx,DWORD PTR [ebx+0x35e378dc]
  41601e:	int3   
  41601f:	(bad)  
  416021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416022:	sar    BYTE PTR [edi+0x2e187802],cl
  416028:	xchg   ebp,eax
  416029:	or     esp,ebp
  41602b:	inc    esp
  41602c:	mov    ebp,esi
  41602e:	xor    eax,edi
  416030:	adc    al,0xc
  416032:	out    0xb7,eax
  416034:	ror    DWORD PTR [ebx-0x4045a309],cl
  41603a:	outs   dx,BYTE PTR ds:[esi]
  41603b:	adc    eax,0xb819fc2d
  416040:	xor    dl,0xe5
  416043:	fnstsw WORD PTR [eax]
  416045:	sub    eax,0x9a29183f
  41604a:	pop    esp
  41604b:	jge    0x416072
  41604d:	push   0xfffffff2
  41604f:	imul   esi,eax,0x5182abd4
  416055:	add    BYTE PTR [esi-0x15],0x19
  416059:	xchg   ebp,eax
  41605a:	pop    es
  41605b:	push   esi
  41605c:	jle    0x415fe5
  41605e:	jbe    0x416030
  416060:	add    DWORD PTR [ebp+0x78300c99],0xffffffac
  416067:	shr    BYTE PTR [ebp-0x34],0x55
  41606b:	out    dx,al
  41606c:	xor    eax,0x3704d72b
  416071:	test   eax,0x493049cb
  416076:	pop    esp
  416077:	mov    ecx,0xfa0eac28
  41607c:	mov    bl,BYTE PTR [edi]
  41607e:	adc    esp,DWORD PTR [ebp-0x1]
  416081:	data16 aam 0x6b
  416084:	sub    eax,DWORD PTR [eax+0x5b04875f]
  41608a:	popf   
  41608b:	ret    
  41608c:	scas   eax,DWORD PTR es:[edi]
  41608d:	xchg   edi,eax
  41608e:	or     ah,dh
  416090:	pop    ebp
  416091:	cli    
  416092:	jne    0x4160b5
  416094:	xchg   ebx,eax
  416096:	sub    edx,esp
  416098:	lock inc ecx
  41609a:	fldenv [ecx+eiz*8+0x59]
  41609e:	lods   eax,DWORD PTR ds:[esi]
  41609f:	sbb    DWORD PTR [edi-0x77],esi
  4160a2:	rcl    BYTE PTR [eax+edi*4-0x39],0xd6
  4160a7:	enter  0x7a32,0x78
  4160ab:	into   
  4160ac:	sbb    al,0x2d
  4160ae:	jns    0x416074
  4160b0:	adc    DWORD PTR [esi-0x4d],edi
  4160b3:	aaa    
  4160b4:	fwait
  4160b5:	bnd jns 0x4160ea
  4160b8:	dec    ebx
  4160b9:	rcr    BYTE PTR [edx],cl
  4160bb:	xchg   ebp,eax
  4160bc:	mul    BYTE PTR [eax]
  4160be:	xor    cl,BYTE PTR [ecx]
  4160c0:	sbb    eax,0x7007b8bc
  4160c5:	(bad)  
  4160c7:	push   ecx
  4160c8:	test   eax,0x6b0f04fc
  4160cd:	and    bh,BYTE PTR [eax-0x9788704]
  4160d3:	adc    esi,DWORD PTR [ebx+0xa6c69c8]
  4160d9:	mov    al,0x94
  4160dc:	or     ecx,DWORD PTR [esp+ebx*8+0x7ee343f8]
  4160e3:	pop    ebx
  4160e4:	cmc    
  4160e5:	add    edx,ebx
  4160e7:	sub    esi,ecx
  4160e9:	or     edx,DWORD PTR [ebx+0x16]
  4160ec:	jle    0x4160dd
  4160ee:	cwde   
  4160ef:	fisub  WORD PTR [ebx]
  4160f1:	int3   
  4160f2:	mov    bh,0x91
  4160f4:	push   ebx
  4160f5:	mov    esi,0xa5287f35
  4160fa:	push   eax
  4160fb:	outs   dx,DWORD PTR ds:[esi]
  4160fc:	test   DWORD PTR [esi+0x1beceb5e],edi
  416102:	icebp  
  416103:	pusha  
  416104:	xchg   ecx,eax
  416105:	out    0x4e,eax
  416107:	pop    edx
  416108:	xor    BYTE PTR [ebp-0x3c],cl
  41610b:	inc    esi
  41610c:	push   ds
  41610d:	ror    DWORD PTR [ecx-0x72],1
  416110:	mov    edx,0x5bf264e2
  416115:	lahf   
  416116:	and    DWORD PTR [ecx+ecx*4-0x45],ecx
  41611a:	mov    edx,0xd8caaf73
  41611f:	arpl   WORD PTR [eax+0x42edbbe8],di
  416125:	fcomi  st,st(5)
  416127:	mov    al,0x13
  416129:	or     edx,DWORD PTR [esi+0x7c2b1d64]
  41612f:	icebp  
  416130:	mov    eax,0xbaeab677
  416135:	stos   BYTE PTR es:[edi],al
  416136:	mov    ebx,0x7fb884b3
  41613b:	in     al,0xa6
  41613d:	fadd   QWORD PTR [ebp+0x2a9c5f5b]
  416143:	pop    esp
  416144:	daa    
  416145:	in     al,dx
  416146:	mov    ecx,gs
  416148:	sbb    al,0x32
  41614a:	xor    eax,0x4c2bd211
  41614f:	inc    ebx
  416150:	not    DWORD PTR [edi]
  416152:	pop    edi
  416153:	shl    DWORD PTR [eax+0x4a],cl
  416156:	scas   al,BYTE PTR es:[edi]
  416157:	int    0x96
  416159:	or     bl,dh
  41615b:	push   eax
  41615c:	repz in eax,0x7a
  41615f:	dec    esi
  416160:	imul   eax,ebx,0x9db4e01a
  416166:	inc    edi
  416167:	dec    esi
  416168:	cmp    al,0x4
  41616a:	xor    eax,DWORD PTR [edx-0x3]
  41616d:	js     0x416125
  41616f:	mov    ecx,0x72bb40e8
  416174:	and    al,0x73
  416176:	dec    esp
  416177:	adc    ah,0xcb
  41617a:	push   esi
  41617b:	adc    BYTE PTR [edx],dl
  41617d:	aam    0x47
  41617f:	or     eax,0xd77a5573
  416184:	xor    al,0xbf
  416186:	or     ch,cl
  416188:	add    bl,BYTE PTR [edi+edx*4+0x3e0a01c1]
  41618f:	inc    esi
  416190:	mov    bl,0xa7
  416192:	inc    ecx
  416193:	push   edx
  416194:	scas   eax,DWORD PTR es:[edi]
  416195:	cmp    BYTE PTR [edx],al
  416197:	pop    ds
  416198:	rcr    ch,cl
  41619a:	inc    ebx
  41619b:	mov    al,BYTE PTR [ebp+esi*4+0x44f3aa9f]
  4161a2:	jo     0x416177
  4161a4:	pop    ecx
  4161a5:	mov    WORD PTR [ecx-0x6d],fs
  4161a8:	aaa    
  4161a9:	pop    edx
  4161aa:	sbb    BYTE PTR [edi+eiz*8],bl
  4161ad:	cld    
  4161ae:	sub    BYTE PTR [ebp-0x47],0x71
  4161b2:	aas    
  4161b3:	pop    ecx
  4161b4:	iret   
  4161b5:	pop    ds
  4161b6:	inc    edx
  4161b7:	fadd   QWORD PTR [ebx-0xfcbf422]
  4161bd:	inc    edx
  4161be:	jb     0x416165
  4161c0:	js     0x416208
  4161c2:	mov    ds:0x590c529e,al
  4161c7:	xchg   ebx,eax
  4161c8:	cmc    
  4161c9:	out    dx,al
  4161ca:	ja     0x41620c
  4161cc:	jg     0x4161e5
  4161ce:	dec    esp
  4161cf:	adc    DWORD PTR [edx-0x3e],edx
  4161d2:	call   0x4441:0x2e03c95b
  4161d9:	jle    0x4161f8
  4161db:	cwde   
  4161dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161dd:	mov    cl,BYTE PTR [ebp-0x7e158e1d]
  4161e3:	jmp    0x2e8b57d7
  4161e8:	cld    
  4161e9:	add    esp,edx
  4161eb:	addr16 pusha 
  4161ed:	and    al,0x5b
  4161ef:	jb     0x41624f
  4161f1:	hlt    
  4161f2:	push   edx
  4161f3:	mov    WORD PTR [esi+esi*8-0x12],cs
  4161f7:	xchg   edx,eax
  4161f8:	mov    ebp,0x74abf403
  4161fd:	loope  0x41617f
  4161ff:	push   es
  416200:	sbb    ecx,DWORD PTR [edi-0x2]
  416203:	jl     0x4161d4
  416205:	in     al,0xfd
  416207:	lods   eax,DWORD PTR ds:[esi]
  416208:	ret    
  416209:	pop    ds
  41620a:	mov    es,WORD PTR [eax]
  41620c:	pop    edx
  41620d:	push   esp
  41620e:	lahf   
  41620f:	gs popa 
  416211:	or     BYTE PTR [ecx],bl
  416213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416214:	and    esp,DWORD PTR [ecx-0x198c802]
  41621a:	jmp    0x416212
  41621c:	nop
  41621d:	xor    DWORD PTR [ecx],esi
  41621f:	call   0xdf7b8dc3
  416224:	mov    BYTE PTR [ebx-0x26],dh
  416227:	bound  ebx,QWORD PTR [ebx+0x3b6098c]
  41622d:	sbb    DWORD PTR [ebp-0x3838612c],edx
  416233:	div    DWORD PTR [edi-0x7c]
  416236:	shl    DWORD PTR [eax-0x63763391],cl
  41623c:	test   eax,0xf1cb5643
  416241:	pop    ebx
  416242:	ror    DWORD PTR [eax-0xa],0x34
  416246:	sbb    eax,0xb224118e
  41624b:	lods   al,BYTE PTR ds:[esi]
  41624c:	or     ch,BYTE PTR [ebx]
  41624e:	test   al,0xcc
  416250:	imul   ebp,eax,0x99b17c93
  416256:	cmp    DWORD PTR [edx+0x5fe25cc8],ebx
  41625c:	fst    QWORD PTR [esp+ebp*8-0x56]
  416260:	sub    bh,BYTE PTR [edx+0x2f]
  416263:	(bad)  
  416264:	pop    ecx
  416265:	cmp    eax,0x205dac2f
  41626a:	and    eax,0xb8d4b73f
  41626f:	cmp    al,0x43
  416271:	pop    edx
  416272:	popa   
  416273:	push   ecx
  416274:	adc    edi,DWORD PTR [ebx-0x794c2766]
  41627a:	dec    ecx
  41627b:	sub    edx,ebx
  41627d:	xchg   ebp,eax
  41627e:	jmp    0x41629d
  416280:	mov    dh,BYTE PTR [ebx-0x40]
  416283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416284:	dec    esp
  416285:	scas   eax,DWORD PTR es:[di]
  416287:	(bad)  
  416288:	pop    esp
  416289:	push   esp
  41628a:	xchg   DWORD PTR [ecx+edx*2-0x6dd61b74],edi
  416291:	lock popa 
  416293:	rcl    DWORD PTR [edi*8-0x2e1aded8],0x5e
  41629b:	push   ds
  41629c:	jo     0x41630e
  41629e:	cmp    ah,BYTE PTR [ebp+0x3318122]
  4162a4:	push   ecx
  4162a5:	adc    edx,DWORD PTR [ecx+0x823706e]
  4162ab:	or     bh,BYTE PTR ds:0x13e9db3f
  4162b1:	lds    eax,FWORD PTR [eax]
  4162b3:	cwde   
  4162b4:	xchg   BYTE PTR [edx+0x224c8c8d],dh
  4162ba:	add    al,0xe2
  4162bc:	ret    
  4162bd:	and    DWORD PTR [edi+0x6f0134a2],ecx
  4162c3:	aaa    
  4162c4:	fist   WORD PTR cs:0x405153cf
  4162cb:	in     eax,dx
  4162cc:	xchg   edx,eax
  4162cd:	cli    
  4162ce:	mov    dl,0x25
  4162d0:	push   ebp
  4162d1:	(bad)  
  4162d2:	(bad)  
  4162d4:	outs   dx,BYTE PTR ds:[esi]
  4162d5:	mov    dl,cl
  4162d7:	xchg   ebp,eax
  4162d8:	pop    ss
  4162d9:	inc    esp
  4162da:	dec    ebp
  4162db:	mov    edx,0x8fff51c8
  4162e0:	inc    edx
  4162e1:	lods   eax,DWORD PTR ds:[esi]
  4162e2:	fldcw  WORD PTR [edx+edx*4]
  4162e5:	cmp    DWORD PTR [ebx+0x3e],esp
  4162e8:	mov    esp,0x33c6b533
  4162ed:	xchg   edx,eax
  4162ee:	and    esp,esp
  4162f0:	icebp  
  4162f1:	pop    esi
  4162f2:	add    eax,0x6ecba789
  4162f7:	icebp  
  4162f8:	ret    
  4162f9:	outs   dx,DWORD PTR ds:[esi]
  4162fa:	push   esp
  4162fb:	mov    cl,0x55
  4162fd:	mov    bl,0xa4
  4162ff:	jp     0x4162df
  416301:	jns    0x41628d
  416303:	dec    ecx
  416304:	test   eax,0x28c6fe4
  416309:	jp     0x41637e
  41630b:	cli    
  41630c:	out    dx,eax
  41630d:	sbb    DWORD PTR [ebx-0x29],ebp
  416310:	loopne 0x4162f6
  416312:	add    al,0xa1
  416314:	rcl    BYTE PTR [ecx-0x13],0xcb
  416318:	fiadd  WORD PTR [ebx+0x52]
  41631b:	stc    
  41631c:	fisub  DWORD PTR [esi+0x37c75407]
  416322:	sub    DWORD PTR [esi-0x74],esi
  416325:	fld    QWORD PTR [esi-0x5ecac965]
  41632b:	scas   eax,DWORD PTR es:[edi]
  41632c:	iret   
  41632d:	das    
  41632e:	adc    ecx,DWORD PTR [eax-0x72119635]
  416334:	lds    edx,FWORD PTR [ecx+0x2dc9955d]
  41633a:	adc    ch,BYTE PTR [ebx+0x5ed875d1]
  416340:	sahf   
  416341:	inc    edi
  416342:	cs pop edi
  416344:	bound  esp,QWORD PTR [ebx+0x28]
  416347:	loope  0x41639a
  416349:	pushf  
  41634a:	sbb    BYTE PTR [edi-0x63],dh
  41634d:	das    
  41634e:	cli    
  41634f:	mov    BYTE PTR [ebp+0x12],dl
  416352:	pop    edi
  416353:	sahf   
  416354:	mov    esp,0xb3238b7
  416359:	mov    eax,0x804027c3
  41635e:	jmp    0x5d74:0xb10b184f
  416365:	enter  0xcd08,0xbb
  416369:	sahf   
  41636a:	stos   BYTE PTR es:[edi],al
  41636b:	into   
  41636c:	in     eax,0xab
  41636e:	inc    esp
  41636f:	adc    BYTE PTR [ebp+0x75],dh
  416372:	dec    esi
  416373:	pop    esi
  416374:	jbe    0x416309
  416376:	lahf   
  416377:	gs popfw 
  41637a:	pop    ds
  41637b:	arpl   WORD PTR [eax],sp
  41637d:	push   ebp
  41637e:	inc    ecx
  41637f:	mov    dh,0xd
  416381:	fcom   DWORD PTR [esi-0xecdbc14]
  416387:	in     eax,dx
  416388:	jge    0x4163d7
  41638a:	sub    DWORD PTR [edi+0x436065f7],edi
  416390:	sahf   
  416391:	mov    cs,WORD PTR [edi]
  416393:	mov    ds:0x329152b0,al
  416398:	in     eax,dx
  416399:	in     eax,0xce
  41639b:	int    0xf4
  41639d:	jmp    0x4163d1
  41639f:	push   0x5cc5c533
  4163a4:	loop   0x416358
  4163a6:	pop    edi
  4163a7:	leave  
  4163a8:	loop   0x4163fa
  4163aa:	ins    DWORD PTR es:[edi],dx
  4163ab:	rcr    DWORD PTR [ebp-0x54],cl
  4163ae:	leave  
  4163af:	shr    BYTE PTR [eax+0x7e3ad54],0xe6
  4163b6:	push   edx
  4163b7:	sub    DWORD PTR [esi],esi
  4163b9:	int    0xac
  4163bb:	mov    esp,0x5d68f258
  4163c0:	jno    0x4163d3
  4163c2:	mov    bh,0x84
  4163c4:	pop    esi
  4163c5:	das    
  4163c6:	int    0x46
  4163c8:	mov    BYTE PTR [ebp-0x20],al
  4163cb:	cmp    dl,BYTE PTR [edx]
  4163cd:	(bad)  
  4163cf:	(bad)  
  4163d0:	cmp    eax,0x250b31af
  4163d5:	pop    es
  4163d6:	xchg   ecx,eax
  4163d7:	xor    ebx,ecx
  4163d9:	cs in  eax,0xb2
  4163dc:	mov    bl,dh
  4163de:	fstp   DWORD PTR [esi+0x7f]
  4163e1:	dec    esi
  4163e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163e3:	pusha  
  4163e4:	dec    eax
  4163e5:	stos   DWORD PTR es:[edi],eax
  4163e6:	xchg   ebp,eax
  4163e7:	ret    
  4163e8:	adc    al,0x1b
  4163ea:	push   eax
  4163eb:	(bad)  
  4163ec:	stc    
  4163ed:	stos   BYTE PTR es:[edi],al
  4163ee:	fidivr WORD PTR [esi-0x66]
  4163f1:	adc    BYTE PTR [edx+edi*1],dl
  4163f4:	mov    ebx,0xf76bb97
  4163f9:	stc    
  4163fa:	sub    DWORD PTR [esi+eiz*1+0x39],0xffffff9e
  4163ff:	add    al,0x9a
  416401:	and    eax,0x7a5a32be
  416406:	lahf   
  416407:	inc    edx
  416408:	(bad)  
  416409:	xor    bh,BYTE PTR [esi+ebp*4+0x7c]
  41640d:	outs   dx,DWORD PTR ds:[esi]
  41640e:	and    ebp,DWORD PTR [edi-0x17beac10]
  416414:	fadd   QWORD PTR [ebp+0x66]
  416417:	mov    eax,ds:0xa24272d9
  41641c:	and    esp,DWORD PTR [eax-0x13124140]
  416422:	adc    cl,BYTE PTR [edi-0x4a]
  416425:	aaa    
  416426:	push   edx
  416427:	and    al,0x62
  416429:	aaa    
  41642a:	inc    esi
  41642b:	or     esi,DWORD PTR [edx-0xec162d4]
  416431:	cmp    cl,BYTE PTR ds:0x22f128ad
  416437:	js     0x41647c
  416439:	imul   esi,DWORD PTR [eax+0x703267a0],0x14499b9f
  416443:	cli    
  416444:	mov    ds:0x3dee4674,al
  416449:	jge    0x41643e
  41644b:	call   0xfce67e67
  416450:	push   ebx
  416451:	inc    ecx
  416452:	inc    esp
  416453:	repnz (bad) 
  416456:	cmp    DWORD PTR [edx+0x65],ecx
  416459:	adc    al,0x39
  41645b:	xchg   ebx,eax
  41645c:	rcl    BYTE PTR ds:0x8d4bf139,0xed
  416463:	retf   
  416464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416465:	push   esi
  416466:	jp     0x4164da
  416468:	xor    ch,BYTE PTR [esi]
  41646a:	stos   BYTE PTR es:[edi],al
  41646b:	or     al,0xf
  41646d:	adc    ch,dh
  41646f:	std    
  416470:	push   ebx
  416471:	enter  0x9057,0x58
  416475:	mov    dl,0xc7
  416477:	jge    0x4163fd
  416479:	push   es
  41647a:	sbb    al,0xd1
  41647c:	pop    ds
  41647d:	cmp    BYTE PTR [eax-0x3b],bh
  416480:	cdq    
  416481:	xchg   DWORD PTR ds:0x21102a8b,edx
  416487:	jns    0x4164b9
  416489:	xor    eax,0x7c274dab
  41648e:	xchg   esi,eax
  41648f:	sti    
  416490:	or     BYTE PTR [edx+0x36],ah
  416493:	pop    es
  416494:	addr16 cmp ecx,esp
  416497:	dec    edx
  416498:	daa    
  416499:	scas   al,BYTE PTR es:[edi]
  41649a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41649b:	in     al,dx
  41649c:	inc    esi
  41649d:	adc    edi,DWORD PTR [edx+0x64fb037d]
  4164a3:	test   al,0x73
  4164a5:	adc    eax,0xf60c1b31
  4164aa:	and    eax,0xeebd38b4
  4164af:	inc    eax
  4164b0:	sub    eax,0x53b4f5e0
  4164b5:	outs   dx,BYTE PTR ds:[esi]
  4164b6:	push   ds
  4164b7:	inc    ebp
  4164b8:	jmp    0xa78b:0xf5c4edf0
  4164bf:	call   0x17e8:0x366aae93
  4164c6:	shl    DWORD PTR [ebx+0xc],cl
  4164c9:	imul   ebp,DWORD PTR [ebx],0xefe422ca
  4164cf:	xor    DWORD PTR [edi],edi
  4164d1:	jmp    0x336d:0x7bbd3491
  4164d8:	jge    0x416535
  4164da:	and    ebp,ebx
  4164dc:	shl    BYTE PTR [ebp-0x2020e107],1
  4164e2:	jmp    0x2e0c:0x93611f14
  4164e9:	xchg   ebx,eax
  4164ea:	lock data16 and BYTE PTR [ebp+0x7dd1ee03],cl
  4164f2:	in     eax,dx
  4164f3:	(bad)  [ebx]
  4164f5:	mov    ebx,0x756886f1
  4164fa:	dec    esp
  4164fb:	dec    edi
  4164fc:	repnz rol DWORD PTR [edi+0x47334949],0x9a
  416504:	je     0x41650f
  416506:	sub    DWORD PTR [edi],ebp
  416508:	(bad)  
  416509:	nop
  41650a:	xchg   esp,eax
  41650b:	popf   
  41650c:	mov    ebp,0xc06b24be
  416511:	sub    edx,DWORD PTR ds:0x7175aad9
  416517:	cmp    al,0xe4
  416519:	jns    0x4164d5
  41651b:	enter  0xd351,0x6e
  41651f:	loopne 0x416571
  416521:	fdivp  st(7),st
  416523:	(bad)  
  416524:	hlt    
  416525:	inc    eax
  416526:	pop    es
  416527:	aas    
  416528:	lods   al,BYTE PTR ds:[esi]
  416529:	push   eax
  41652a:	add    bh,BYTE PTR [eax]
  41652c:	push   ecx
  41652d:	dec    edx
  41652e:	adc    eax,0x3dc31af
  416533:	int    0xbf
  416535:	outs   dx,DWORD PTR ds:[esi]
  416536:	mul    ch
  416538:	int    0xe0
  41653a:	call   0xe59a:0x297bd448
  416541:	sub    BYTE PTR [ebx+0x1a7f0a2c],ah
  416547:	jnp    0x416537
  416549:	or     eax,0x17587534
  41654e:	cmp    eax,0x61364f7
  416553:	in     eax,0x6e
  416555:	xor    ebx,eax
  416557:	imul   ebx,DWORD PTR ds:0xf2cc72bb,0x5f
  41655e:	in     al,dx
  41655f:	xor    DWORD PTR cs:[edi-0x5d],0x4a
  416564:	outs   dx,BYTE PTR ds:[esi]
  416565:	mov    esp,0xfaec9961
  41656a:	int3   
  41656b:	lods   eax,DWORD PTR ds:[esi]
  41656c:	jl     0x41659c
  41656e:	dec    eax
  41656f:	pusha  
  416570:	sbb    BYTE PTR [ecx-0x60],dh
  416573:	into   
  416574:	mov    cl,0xb3
  416576:	mov    esi,edi
  416578:	push   edi
  416579:	add    BYTE PTR [eax+0x2888e31b],dl
  41657f:	dec    ebx
  416580:	fidiv  WORD PTR [ebx+ecx*8-0x22]
  416584:	mov    DWORD PTR [edx-0x598a86be],ebx
  41658a:	das    
  41658b:	jg     0x4165bb
  41658d:	cld    
  41658e:	pop    eax
  41658f:	and    bh,0x9e
  416592:	inc    esi
  416593:	xor    esi,DWORD PTR [edi-0x30]
  416596:	inc    ebp
  416597:	jmp    0x882f71a4
  41659c:	push   edx
  41659d:	lds    eax,FWORD PTR [ebx-0x34]
  4165a0:	aad    0x9c
  4165a2:	aas    
  4165a3:	sub    DWORD PTR [edx+0x5e],esi
  4165a6:	push   ebp
  4165a7:	clc    
  4165a8:	inc    esp
  4165a9:	or     ecx,0x19
  4165ac:	scas   al,BYTE PTR es:[edi]
  4165ad:	lea    edx,[edi-0x3c1ebdad]
  4165b3:	inc    edi
  4165b4:	fs cld 
  4165b6:	xor    ah,BYTE PTR [esi+esi*4]
  4165b9:	pop    ss
  4165ba:	pop    eax
  4165bb:	xchg   edx,eax
  4165bc:	mov    bh,0x94
  4165be:	push   ecx
  4165bf:	jle    0x416575
  4165c1:	and    al,0xf0
  4165c3:	shl    DWORD PTR [edi-0x2bd295a5],1
  4165c9:	mov    esi,0xf6dcb636
  4165ce:	xchg   DWORD PTR [edi],esp
  4165d0:	int    0x64
  4165d2:	pop    edi
  4165d3:	xor    BYTE PTR ds:0x8fdc699e,ah
  4165d9:	xchg   DWORD PTR [ebx],ecx
  4165db:	xchg   DWORD PTR [eax-0x2a],ebp
  4165de:	sub    esp,ecx
  4165e0:	and    al,0xfb
  4165e2:	clc    
  4165e3:	call   0x82fc425e
  4165e8:	mov    esi,0x608aa5e9
  4165ed:	loope  0x416579
  4165ef:	dec    ebx
  4165f0:	das    
  4165f1:	inc    edi
  4165f2:	int    0xa
  4165f4:	cli    
  4165f5:	fild   WORD PTR [ebx+0x64961120]
  4165fb:	out    dx,al
  4165fc:	pop    ebx
  4165fd:	mov    eax,0x5d611a26
  416602:	pop    ss
  416603:	aam    0xa9
  416605:	jg     0x416686
  416607:	mov    eax,0x26f20da8
  41660c:	jnp    0x4165d2
  41660e:	pop    es
  41660f:	fcmovnbe st,st(5)
  416611:	mov    esi,0xa9a21318
  416616:	cmp    ebp,0x175daf3e
  41661c:	jnp    0x416625
  41661e:	dec    ebp
  41661f:	int3   
  416620:	xchg   ebp,eax
  416621:	xor    DWORD PTR [edx-0x50],ecx
  416624:	mov    ebx,0xb42b0ce0
  416629:	loope  0x4165bc
  41662b:	shld   DWORD PTR [eax+eiz*2],esi,0xf
  416630:	mov    ch,BYTE PTR [edi-0x74]
  416633:	mul    ebx
  416635:	push   0x19171e05
  41663a:	in     eax,0xc1
  41663c:	outs   dx,BYTE PTR ds:[esi]
  41663d:	retf   0x9b29
  416640:	fsub   QWORD PTR [edx+0x237a5bac]
  416646:	retf   
  416647:	iret   
  416648:	sub    cl,cl
  41664a:	sub    bl,bl
  41664c:	out    0x46,eax
  41664e:	stc    
  41664f:	ins    BYTE PTR es:[edi],dx
  416650:	ins    DWORD PTR es:[edi],dx
  416651:	outs   dx,BYTE PTR ds:[esi]
  416652:	jp     0x4166a4
  416654:	lock sbb eax,0x2bde54d6
  41665a:	xchg   edx,eax
  41665b:	rol    al,1
  41665d:	sbb    bl,BYTE PTR [edi+0x35]
  416660:	sbb    BYTE PTR [eax+0x723852c2],0x30
  416667:	lock in eax,0x13
  41666a:	icebp  
  41666b:	das    
  41666c:	and    BYTE PTR [ebp-0x4ef734d1],bl
  416672:	jg     0x416606
  416674:	mov    bh,0x9f
  416676:	scas   al,BYTE PTR es:[edi]
  416677:	ret    
  416678:	ja     0x416692
  41667a:	lahf   
  41667b:	fs aaa 
  41667d:	mov    ecx,0x162ee693
  416682:	jne    0x4166b7
  416684:	int3   
  416685:	cs fwait
  416687:	addr16 xor al,0xf1
  41668a:	test   eax,0xad2ec0dc
  41668f:	or     BYTE PTR [eax],al
  416691:	cmp    eax,0xb9d3b3c4
  416696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416697:	add    edx,DWORD PTR [ecx-0x5c]
  41669a:	jmp    0x416653
  41669c:	jbe    0x416683
  41669e:	push   ss
  41669f:	cmp    DWORD PTR [esi],0x9c24ce5e
  4166a5:	push   ds
  4166a6:	adc    bl,BYTE PTR [edi]
  4166a8:	ret    0x8ea1
  4166ab:	test   al,0xfe
  4166ad:	leave  
  4166ae:	lock dec edx
  4166b0:	xchg   ebx,eax
  4166b1:	or     eax,0x9c4b6761
  4166b6:	fisttp QWORD PTR ds:0x80a4c6f0
  4166bc:	xor    DWORD PTR [esp+ebp*1-0x1ab0f35f],esp
  4166c3:	cmp    BYTE PTR es:[ecx+edi*2+0x50],0x46
  4166c9:	xor    DWORD PTR [edi+ebp*8-0x41],esi
  4166cd:	cmp    al,0x63
  4166cf:	adc    DWORD PTR [esi+esi*4-0x7bdca27b],ebp
  4166d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166d7:	icebp  
  4166d8:	jl     0x416722
  4166da:	and    bh,BYTE PTR [ecx+0x7466a386]
  4166e0:	imul   esp,ecx,0x33
  4166e3:	xor    BYTE PTR [edi],cl
  4166e5:	rcr    BYTE PTR [edx],1
  4166e7:	sar    DWORD PTR [ebp+0x5bb94057],cl
  4166ed:	dec    eax
  4166ee:	inc    edx
  4166ef:	cmp    DWORD PTR [ebp+0x7e1a6847],edi
  4166f5:	or     eax,0x63433661
  4166fa:	shr    BYTE PTR [ebx],0x30
  4166fd:	jle    0x41669a
  4166ff:	sub    dl,BYTE PTR [esi]
  416701:	stos   BYTE PTR es:[edi],al
  416702:	minps  xmm7,xmm7
  416705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416706:	imul   edi,DWORD PTR [eax-0x28],0x3cdb9ce9
  41670d:	in     eax,dx
  41670e:	clc    
  41670f:	ins    BYTE PTR es:[edi],dx
  416710:	retf   
  416711:	ror    dl,0x95
  416714:	nop
  416715:	hlt    
  416716:	inc    eax
  416717:	lock lods eax,DWORD PTR ds:[esi]
  416719:	stos   DWORD PTR es:[edi],eax
  41671a:	add    dh,0x8d
  41671d:	jmp    0xe4dd0e6
  416722:	add    ch,BYTE PTR ds:0x5d8110ac
  416728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416729:	ret    0x18a5
  41672c:	cli    
  41672d:	mov    al,0x8e
  41672f:	scas   eax,DWORD PTR es:[edi]
  416730:	scas   al,BYTE PTR es:[edi]
  416731:	cdq    
  416732:	leave  
  416733:	pusha  
  416734:	sti    
  416735:	ss cmp eax,0xa0d0f413
  41673b:	scas   al,BYTE PTR es:[edi]
  41673c:	mov    eax,0x7ca4d537
  416741:	(bad)  
  416742:	mov    edi,0xd824f563
  416747:	test   BYTE PTR [ebx+0xa53a508],ah
  41674d:	stos   BYTE PTR es:[edi],al
  41674e:	adc    eax,0x54cbaf09
  416753:	stos   BYTE PTR es:[edi],al
  416754:	sbb    dl,al
  416756:	jb     0x416725
  416758:	adc    BYTE PTR [edx],cl
  41675a:	push   edx
  41675b:	mov    esi,0xb5c6686a
  416760:	(bad)  [ebp+0x2d]
  416763:	push   eax
  416764:	pop    esp
  416765:	scas   al,BYTE PTR es:[edi]
  416766:	rcr    BYTE PTR [ecx+0x14feea4],cl
  41676c:	int3   
  41676d:	dec    ebp
  41676e:	paddw  mm1,QWORD PTR [ecx+0x18d9ea31]
  416775:	xor    ebx,DWORD PTR [edx-0xba488ae]
  41677b:	push   edx
  41677c:	ins    BYTE PTR es:[edi],dx
  41677d:	xor    edx,DWORD PTR [ecx-0x7]
  416780:	jmp    0x5a1a:0x9f725f68
  416787:	fdivrp st(4),st
  416789:	fwait
  41678a:	ror    BYTE PTR [ebx+0x14],cl
  41678d:	lahf   
  41678e:	aam    0x89
  416790:	adc    BYTE PTR [esp+ecx*8-0x2ebb514b],al
  416797:	xchg   esp,eax
  416798:	sub    al,0x6d
  41679a:	or     eax,0x4d93d44d
  41679f:	test   al,0x17
  4167a1:	stc    
  4167a2:	sbb    al,0x3f
  4167a4:	push   eax
  4167a5:	jae    0x416755
  4167a7:	inc    eax
  4167a8:	stc    
  4167a9:	leave  
  4167aa:	addr16 rcl eax,1
  4167ad:	test   eax,0xab718f29
  4167b2:	sbb    eax,DWORD PTR [esi+0x45fd5cd1]
  4167b8:	push   esi
  4167b9:	pop    esp
  4167ba:	jp     0x41680e
  4167bc:	mov    ecx,0x8386c932
  4167c1:	fcmovnu st,st(4)
  4167c3:	mov    al,0xec
  4167c5:	std    
  4167c6:	pop    ds
  4167c7:	stos   DWORD PTR es:[edi],eax
  4167c8:	out    0xf9,al
  4167ca:	out    0x86,eax
  4167cc:	lods   eax,DWORD PTR ds:[esi]
  4167cd:	dec    BYTE PTR [esi-0x67]
  4167d0:	pushf  
  4167d1:	push   ebp
  4167d2:	adc    DWORD PTR [ebx-0x4c],eax
  4167d5:	add    al,0x6
  4167d7:	pop    eax
  4167d8:	push   0x8e9766c4
  4167dd:	mov    dl,0xb2
  4167df:	pusha  
  4167e0:	rcr    BYTE PTR [ecx-0x469d44ab],1
  4167e6:	adc    esi,DWORD PTR [esi+0x55]
  4167e9:	mov    bh,0x52
  4167eb:	mov    cl,0x9d
  4167ed:	outs   dx,BYTE PTR ds:[esi]
  4167ee:	pop    edx
  4167ef:	jp     0x416810
  4167f1:	(bad)  
  4167f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167f3:	cli    
  4167f4:	stos   BYTE PTR es:[edi],al
  4167f5:	xor    dl,BYTE PTR [edi]
  4167f7:	cmp    eax,0x461330eb
  4167fc:	sub    esi,0x19c2d578
  416802:	clc    
  416803:	xchg   edx,eax
  416804:	mov    DWORD PTR [eax],edi
  416806:	das    
  416807:	sbb    ah,BYTE PTR [ecx+0x5a]
  41680a:	mov    edi,0xdd12b2b4
  41680f:	sahf   
  416810:	xchg   ebp,eax
  416811:	and    bh,al
  416813:	push   esp
  416814:	push   DWORD PTR [edi+ebp*4+0x7022c471]
  41681b:	mov    cl,0x8f
  41681d:	push   edx
  41681e:	or     dl,BYTE PTR [edi+0x1933cff9]
  416824:	ds jo  0x416877
  416827:	xor    DWORD PTR [ecx+edx*4-0x48],ebx
  41682b:	xor    DWORD PTR [eax+0x4e913f20],esi
  416831:	retf   
  416832:	mov    ebx,0x151c884b
  416837:	fcomp  st(3)
  416839:	cdq    
  41683a:	sub    eax,0x31d5db01
  41683f:	retf   
  416840:	push   ebp
  416841:	jp     0x416854
  416843:	dec    edi
  416844:	fcomip st,st(0)
  416846:	mov    cs,WORD PTR [esi+ebx*1-0x260a91b5]
  41684d:	inc    edi
  41684e:	sbb    eax,0xa160a0f1
  416853:	mov    al,ds:0x4f8bf313
  416858:	and    ebp,esp
  41685a:	push   esp
  41685b:	sbb    DWORD PTR [ebp-0x11],ebp
  41685e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41685f:	dec    ah
  416861:	sub    DWORD PTR [ebp-0x22337644],esi
  416867:	jbe    0x416857
  416869:	add    eax,0x3222cbfe
  41686e:	cmp    dl,BYTE PTR [edi+ebp*1-0x4e]
  416872:	pop    esp
  416873:	push   es
  416874:	mov    eax,ds:0xb1ec9802
  416879:	ins    DWORD PTR es:[edi],dx
  41687a:	pushf  
  41687b:	jo     0x416833
  41687d:	inc    ebx
  41687e:	dec    esi
  41687f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416880:	xor    eax,0xb641e151
  416885:	in     al,dx
  416886:	mov    al,0xb4
  416888:	icebp  
  416889:	jnp    0x41682b
  41688b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41688c:	loop   0x4168d8
  41688e:	ja     0x41684e
  416890:	or     bh,al
  416892:	sar    BYTE PTR [edx+0x14],0x81
  416896:	lock xchg ecx,eax
  416898:	jle    0x41685e
  41689a:	xchg   edx,eax
  41689b:	or     al,0x48
  41689d:	push   0x4b
  41689f:	sub    al,0xa1
  4168a1:	int    0x73
  4168a3:	add    al,0xd9
  4168a5:	push   cs
  4168a6:	repz inc edi
  4168a8:	mov    ch,0xe7
  4168aa:	jo     0x416835
  4168ac:	pop    ss
  4168ad:	dec    ecx
  4168ae:	(bad)  
  4168af:	cld    
  4168b0:	pop    DWORD PTR [esp+ebp*1+0x1d]
  4168b4:	jnp    0x4168a5
  4168b6:	and    dh,BYTE PTR [ebp+esi*2-0x48]
  4168ba:	lea    edx,[eax]
  4168bc:	fld    QWORD PTR ds:[edx+0x26]
  4168c0:	gs pop ecx
  4168c2:	nop
  4168c3:	pop    ecx
  4168c4:	sub    al,0x81
  4168c6:	pushf  
  4168c7:	inc    ecx
  4168c8:	cmp    al,0x3c
  4168ca:	mov    WORD PTR [ecx+0x4e],gs
  4168cd:	ss mov ecx,0x5736291a
  4168d3:	cld    
  4168d4:	mov    BYTE PTR [ebx],ch
  4168d6:	repnz loope 0x41694c
  4168d9:	imul   ecx,DWORD PTR [ebp+0x43],0x5b
  4168dd:	add    ch,cl
  4168df:	xchg   BYTE PTR [esi+0x1],dh
  4168e2:	lods   al,BYTE PTR ds:[esi]
  4168e3:	sub    al,BYTE PTR [esi-0x61]
  4168e6:	adc    edi,ebp
  4168e8:	xor    ebp,DWORD PTR [edi-0x59]
  4168eb:	lock jmp 0x4168a2
  4168ee:	pushf  
  4168ef:	pop    ds
  4168f0:	dec    ebx
  4168f1:	pop    ds
  4168f2:	cld    
  4168f3:	and    edi,DWORD PTR [esi-0xf]
  4168f6:	in     eax,dx
  4168f7:	sbb    al,BYTE PTR [edi]
  4168f9:	clc    
  4168fa:	mov    cl,0x7d
  4168fc:	out    0xb4,eax
  4168fe:	dec    ebp
  4168ff:	pop    ds
  416900:	pop    ebx
  416901:	out    0xc7,eax
  416903:	lock loopne 0x416910
  416906:	pop    ss
  416907:	lea    eax,[eax-0x66e95b]
  41690d:	push   ecx
  41690e:	lods   al,BYTE PTR ds:[esi]
  41690f:	adc    BYTE PTR [esi-0x43e00dcf],0xb5
  416916:	and    bh,bl
  416918:	mov    esi,0x7b71aec1
  41691d:	clc    
  41691e:	push   0x9eb5fd74
  416923:	mov    ah,0xc3
  416925:	imul   ecx,DWORD PTR [eax],0x43
  416928:	sbb    esi,DWORD PTR [esp+ebx*4+0x3e]
  41692c:	jp     0x416949
  41692e:	cmp    ebx,edx
  416930:	add    al,0xec
  416932:	jl     0x416909
  416934:	push   edx
  416935:	mov    bl,dl
  416937:	aam    0x81
  416939:	nop
  41693a:	mov    edx,0xab9d6e31
  41693f:	jnp    0x41693d
  416941:	jbe    0x416919
  416943:	xchg   ecx,eax
  416944:	push   edi
  416945:	call   0xf93d35c5
  41694a:	mov    edx,0x4491ac64
  41694f:	out    0x3,eax
  416951:	inc    eax
  416952:	leave  
  416953:	dec    ah
  416955:	(bad)  
  416956:	push   0x52
  416958:	jle    0x416934
  41695a:	popf   
  41695b:	mov    bh,0x5d
  41695d:	ins    DWORD PTR es:[edi],dx
  41695e:	scas   al,BYTE PTR es:[edi]
  41695f:	hlt    
  416960:	sbb    al,0x50
  416962:	xor    dl,bl
  416964:	pusha  
  416965:	cmp    BYTE PTR [esi-0x5c],cl
  416968:	lds    eax,FWORD PTR [esi]
  41696a:	sbb    bl,bl
  41696c:	jmp    0xdbf2:0xb34c0fcc
  416973:	push   cs
  416974:	dec    eax
  416975:	repnz (bad) 
  416977:	cld    
  416978:	sub    esp,DWORD PTR [esi+esi*8]
  41697b:	xchg   ebx,eax
  41697c:	or     bh,BYTE PTR [esi+0x17320950]
  416982:	cli    
  416983:	cmp    DWORD PTR [ebx],0x68
  416986:	(bad)  
  416987:	cmp    eax,0x666e0a16
  41698c:	pop    ebx
  41698d:	xchg   ebp,ebx
  41698f:	in     eax,0x4c
  416991:	adc    al,0xdb
  416993:	xor    DWORD PTR [ebx+0x2155943b],0xffffff9a
  41699a:	cwde   
  41699b:	cld    
  41699c:	nop
  41699d:	push   ss
  41699e:	repnz xchg ebx,eax
  4169a0:	mov    bh,0x17
  4169a2:	xor    ebp,eax
  4169a4:	fdivp  st(7),st
  4169a6:	dec    eax
  4169a7:	add    esp,DWORD PTR [ecx+0x6c]
  4169aa:	test   al,0xb9
  4169ac:	aaa    
  4169ad:	dec    ecx
  4169ae:	lds    edi,FWORD PTR [ecx-0x7c]
  4169b1:	jecxz  0x4169f3
  4169b3:	mov    eax,0xc1738214
  4169b8:	add    ah,BYTE PTR [edx+0x70ee44dc]
  4169be:	cmp    DWORD PTR [eax-0x63],edi
  4169c1:	pop    esi
  4169c2:	and    DWORD PTR [eax+0x6e406b86],0x7f
  4169c9:	jb     0x41694b
  4169cb:	and    DWORD PTR [ecx],esp
  4169cd:	xchg   edx,eax
  4169ce:	pop    esp
  4169cf:	xchg   ecx,eax
  4169d0:	test   DWORD PTR [ecx+0x5f],ebx
  4169d3:	dec    ebp
  4169d4:	(bad)  
  4169d5:	push   ecx
  4169d6:	rcl    BYTE PTR [esi-0x61],1
  4169d9:	ficom  WORD PTR [ecx-0x4b]
  4169dc:	shl    DWORD PTR [eax+0x46],0x11
  4169e0:	add    eax,0x49dd4b31
  4169e5:	mov    ch,0xc1
  4169e7:	leave  
  4169e8:	outs   dx,DWORD PTR ds:[esi]
  4169e9:	mov    cl,0xdb
  4169eb:	sbb    al,0x84
  4169ed:	ins    BYTE PTR es:[edi],dx
  4169ee:	in     eax,dx
  4169ef:	xor    al,0xe6
  4169f1:	fcom   DWORD PTR [ebx]
  4169f3:	add    BYTE PTR [edi+0x78],dh
  4169f6:	add    esi,DWORD PTR es:[eax]
  4169f9:	pop    ebp
  4169fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169fb:	push   0x20037d91
  416a00:	cld    
  416a01:	xor    eax,0x5cba4b75
  416a06:	push   eax
  416a07:	daa    
  416a08:	les    esp,FWORD PTR [ecx-0x5e482b4a]
  416a0e:	ror    BYTE PTR [ecx+0x2f331ee2],0x41
  416a15:	adc    eax,0x512fb61b
  416a1a:	sub    eax,0x441ccc08
  416a1f:	adc    al,ah
  416a21:	and    DWORD PTR [ebx],edx
  416a23:	stos   DWORD PTR es:[edi],eax
  416a24:	push   esi
  416a25:	dec    edi
  416a26:	sbb    DWORD PTR [edi+0x5a98fe86],ebp
  416a2c:	stos   DWORD PTR es:[edi],eax
  416a2d:	mov    ecx,0x3085923b
  416a32:	push   edi
  416a33:	retf   0x6d60
  416a36:	ret    0x386c
  416a39:	sbb    esp,DWORD PTR [esi+0x1d957758]
  416a3f:	or     dh,BYTE PTR [edi+0x6ee02f47]
  416a45:	jnp    0x416a03
  416a47:	pop    ecx
  416a48:	popf   
  416a49:	inc    edx
  416a4a:	lock daa 
  416a4c:	dec    ebx
  416a4d:	jmp    0x9f88ace0
  416a52:	adc    DWORD PTR [ebp+0x16],0xf00c7090
  416a59:	repnz loope 0x416adb
  416a5c:	imul   edx,ecx,0xffffffab
  416a5f:	mov    dh,0xf8
  416a61:	cwde   
  416a62:	enter  0x45ff,0xfd
  416a66:	push   ecx
  416a67:	fist   DWORD PTR [ecx-0x860591f]
  416a6d:	and    eax,0xc6249631
  416a72:	hlt    
  416a73:	jmp    0x548c:0x66ea479d
  416a7a:	inc    edx
  416a7b:	xor    edi,edi
  416a7d:	mov    BYTE PTR [eax],ah
  416a7f:	aad    0x4d
  416a81:	call   0x1a8ad384
  416a86:	or     DWORD PTR [eax+esi*8],edx
  416a89:	jmp    0xd1e7:0xbace784e
  416a90:	stc    
  416a91:	push   ds
  416a92:	mov    al,ds:0x8a035e1f
  416a97:	mov    esi,0xb06e7cde
  416a9c:	aad    0x8c
  416a9e:	push   0x8e5e3721
  416aa3:	mov    cs,esp
  416aa5:	push   ss
  416aa6:	inc    ebp
  416aa7:	adc    cl,BYTE PTR [esi+0x5e0d345a]
  416aad:	mov    al,0x88
  416aaf:	cdq    
  416ab0:	add    al,0x9
  416ab2:	imul   edi,DWORD PTR [esi+0x6be7dc12],0xffffffb2
  416ab9:	xchg   edx,eax
  416aba:	xchg   edx,eax
  416abb:	lds    edi,FWORD PTR [edx-0x4b]
  416abe:	lahf   
  416abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ac0:	jae    0x416ae6
  416ac2:	fiadd  WORD PTR [esp+ebx*4+0x2a]
  416ac6:	fwait
  416ac7:	sahf   
  416ac8:	xchg   edi,eax
  416ac9:	mov    ebx,0xab8aca25
  416ace:	and    al,BYTE PTR [ebx-0x6280be52]
  416ad4:	push   edx
  416ad5:	iret   
  416ad6:	sbb    al,0xf6
  416ad8:	push   es
  416ad9:	icebp  
  416ada:	les    edi,FWORD PTR [eax+0x5da1a835]
  416ae0:	jge    0x416ae2
  416ae2:	ja     0x416afe
  416ae4:	packuswb mm3,QWORD PTR [edx+edi*2-0x2253e35b]
  416aec:	pop    eax
  416aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aee:	popa   
  416aef:	dec    esi
  416af0:	and    al,0x81
  416af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416af3:	or     esp,edi
  416af5:	mov    dh,0xae
  416af7:	sar    DWORD PTR [esi+0x58ede3a2],0x26
  416afe:	sub    DWORD PTR [ebp+esi*2+0x20],esi
  416b02:	stos   DWORD PTR es:[edi],eax
  416b03:	popf   
  416b04:	popf   
  416b05:	fisub  DWORD PTR [esi]
  416b07:	push   ebx
  416b08:	test   eax,0xf27cd876
  416b0d:	mov    ds:0x3425bfa2,al
  416b12:	xor    eax,0xbecc2d71
  416b17:	ror    DWORD PTR [edi+ebx*8],1
  416b1a:	inc    edi
  416b1b:	sti    
  416b1c:	dec    edi
  416b1d:	jecxz  0x416b2c
  416b1f:	mov    ah,0x90
  416b21:	test   eax,0xcbede58a
  416b26:	xor    eax,0xf8f02720
  416b2b:	xchg   di,ax
  416b2d:	aad    0x9a
  416b2f:	stos   DWORD PTR es:[edi],eax
  416b30:	ficom  WORD PTR [edi+ecx*8-0x6]
  416b34:	and    eax,0x400ca379
  416b39:	rol    DWORD PTR ds:0x9472d78c,cl
  416b3f:	mov    edx,0x762d5c81
  416b44:	pop    edx
  416b45:	pop    edi
  416b46:	jmp    0x488c7e25
  416b4b:	popf   
  416b4c:	pop    esi
  416b4d:	lds    edi,FWORD PTR [eax+0x49]
  416b50:	cmp    DWORD PTR [edx],esi
  416b52:	rcr    BYTE PTR [edi],cl
  416b54:	jb     0x416b0d
  416b56:	repnz dec edx
  416b58:	xchg   ebx,eax
  416b59:	inc    eax
  416b5a:	loope  0x416b8c
  416b5c:	xor    BYTE PTR [esi+0x3ac9994],0x4e
  416b63:	aam    0x77
  416b65:	fistp  DWORD PTR [eax+0x4b]
  416b68:	mov    dl,0xeb
  416b6a:	push   ebp
  416b6b:	out    dx,al
  416b6c:	or     BYTE PTR [edi+eax*2-0x1f19bf45],dh
  416b73:	mov    bh,BYTE PTR [esi-0x2f0eec2]
  416b79:	and    BYTE PTR [ebp+0x60],0x5c
  416b7d:	jl     0x416b53
  416b7f:	(bad)  
  416b81:	shl    DWORD PTR [edx+0xf],cl
  416b84:	es xchg ebx,eax
  416b86:	test   eax,0xdf0f58c6
  416b8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b8d:	xor    eax,0xa357aec1
  416b92:	outs   dx,DWORD PTR ds:[esi]
  416b93:	jg     0x416b7e
  416b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b96:	jno    0x416b8a
  416b98:	in     eax,dx
  416b99:	xor    bh,BYTE PTR [ebp+0x51]
  416b9c:	sbb    ebx,esp
  416b9e:	and    cl,cl
  416ba0:	rcr    edi,0x68
  416ba3:	pop    ds
  416ba4:	adc    eax,0xed4f4d6f
  416ba9:	cmp    eax,0xaf59dd18
  416bae:	bound  esi,QWORD PTR ds:0x47157f52
  416bb4:	fist   DWORD PTR [ecx-0x3b19b358]
  416bba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bbb:	call   0x4e01:0xa7c4ea83
  416bc2:	je     0x416b89
  416bc4:	fnstsw WORD PTR [edx+ebx*2-0xd]
  416bc8:	xchg   BYTE PTR [eax],ah
  416bca:	iret   
  416bcb:	repz mov ecx,0xb1601024
  416bd1:	loopne 0x416c22
  416bd3:	fwait
  416bd4:	sahf   
  416bd5:	test   al,0x71
  416bd7:	jns    0x416c12
  416bd9:	xor    ebx,ecx
  416bdb:	aam    0xbb
  416bdd:	out    0x73,al
  416bdf:	cmp    DWORD PTR [ebp-0x60],eax
  416be2:	test   eax,0x2413bfb2
  416be7:	cmp    DWORD PTR [edx+0x19b86a35],0x2
  416bee:	fwait
  416bef:	push   ebx
  416bf0:	lds    ebp,FWORD PTR [ecx]
  416bf2:	(bad)  
  416bf3:	ja     0x416bde
  416bf5:	pop    ebx
  416bf6:	inc    edi
  416bf7:	cwde   
  416bf8:	jg     0x416bc7
  416bfa:	lods   al,BYTE PTR ds:[esi]
  416bfb:	jl     0x416c21
  416bfd:	add    ecx,DWORD PTR [ebx]
  416bff:	jne    0x416c4b
  416c01:	mov    cl,0x77
  416c03:	(bad)  
  416c04:	sbb    eax,0xa23627c0
  416c09:	sahf   
  416c0a:	aas    
  416c0b:	dec    eax
  416c0c:	out    0x1f,al
  416c0e:	repz mov ah,al
  416c11:	adc    DWORD PTR [edi],ebx
  416c13:	mov    edi,0xdffa96b4
  416c18:	push   ecx
  416c19:	sahf   
  416c1a:	in     eax,0xae
  416c1c:	leave  
  416c1d:	cmp    al,0xce
  416c1f:	adc    BYTE PTR [esi],bh
  416c21:	fmulp  st(5),st
  416c23:	mul    ecx
  416c25:	dec    eax
  416c26:	and    BYTE PTR [ebx+0x689f494c],bh
  416c2c:	(bad)  
  416c2d:	dec    esp
  416c2e:	sahf   
  416c2f:	or     al,0x62
  416c31:	mov    edi,0x3d4bb571
  416c36:	sub    al,0x10
  416c38:	imul   esp,DWORD PTR [ebx+0x5e9e5d6c],0xffffff8f
  416c3f:	popf   
  416c40:	sbb    DWORD PTR [ecx-0x5f10a67],0xfffffff9
  416c47:	adc    DWORD PTR [edi-0x2c],0x2d701ff8
  416c4e:	nop
  416c4f:	sbb    eax,0x15e66e44
  416c54:	add    al,0xc7
  416c56:	ins    BYTE PTR es:[edi],dx
  416c57:	mov    ebp,0xe495f36e
  416c5c:	xor    eax,0x6fc0aaa7
  416c61:	push   cs
  416c62:	in     eax,0xff
  416c64:	adc    esp,DWORD PTR [edx]
  416c66:	pop    ds
  416c67:	mov    ch,0xa6
  416c69:	test   DWORD PTR [ebx-0x3021f4fa],edi
  416c6f:	push   0x18
  416c71:	sbb    eax,0xd342d38c
  416c76:	fsub   QWORD PTR [edi+0x72e9e40]
  416c7c:	test   cl,dl
  416c7e:	enter  0xc2f6,0xec
  416c82:	add    BYTE PTR [edx+edi*8+0x73be5fba],ch
  416c89:	xlat   BYTE PTR ds:[ebx]
  416c8a:	inc    ebp
  416c8b:	rcl    BYTE PTR [ecx+ebp*4],1
  416c8e:	adc    al,0xe6
  416c90:	fld    TBYTE PTR [ebx]
  416c92:	push   esp
  416c93:	jo     0x416cff
  416c95:	cwde   
  416c96:	test   DWORD PTR [esi],0x8e110511
  416c9c:	ins    BYTE PTR es:[edi],dx
  416c9d:	jns    0x416c71
  416c9f:	pushf  
  416ca0:	sub    bh,BYTE PTR [ebp+0x39ea7a87]
  416ca6:	lods   al,BYTE PTR ds:[esi]
  416ca7:	leave  
  416ca8:	sbb    eax,eax
  416caa:	mov    bl,0xce
  416cac:	sub    eax,0x248f9ce9
  416cb1:	push   edx
  416cb2:	repz or BYTE PTR [eax],bh
  416cb5:	inc    edx
  416cb6:	ins    BYTE PTR es:[edi],dx
  416cb7:	mov    BYTE PTR [eax-0x10],bh
  416cba:	xchg   DWORD PTR [ecx-0x218210b],edx
  416cc0:	cmp    dl,cl
  416cc2:	push   eax
  416cc3:	lds    eax,FWORD PTR [edi-0x643039b2]
  416cc9:	daa    
  416cca:	loop   0x416d43
  416ccc:	in     al,0xf
  416cce:	shl    esp,0x18
  416cd1:	dec    esi
  416cd2:	cmp    BYTE PTR [ebp-0x72],bh
  416cd5:	pop    ds
  416cd6:	jbe    0x416c85
  416cd8:	add    eax,0xecdd452
  416cdd:	addr16 cld 
  416cdf:	data16 sbb ah,BYTE PTR [ecx+0x3e]
  416ce3:	and    al,0x2
  416ce5:	mov    esi,0xd5b7b1b0
  416cea:	push   edi
  416ceb:	jmp    FWORD PTR [edx]
  416ced:	lock dec ecx
  416cef:	ss out dx,al
  416cf1:	pop    eax
  416cf2:	rol    DWORD PTR [ecx+0x9],0xb2
  416cf6:	mov    ah,0xe3
  416cf8:	xor    esp,DWORD PTR [ecx+0x37]
  416cfb:	aam    0x7e
  416cfd:	in     eax,dx
  416cfe:	in     al,dx
  416cff:	iret   
  416d00:	cmp    BYTE PTR [edx+0x7b],dh
  416d03:	push   eax
  416d04:	lock cmp eax,0xfe095cd1
  416d0a:	das    
  416d0b:	mov    al,ds:0xd325fc7c
  416d10:	or     DWORD PTR [esi+0x78],ebx
  416d13:	xor    al,0x86
  416d15:	stos   DWORD PTR es:[edi],eax
  416d16:	xchg   ecx,eax
  416d17:	leave  
  416d18:	adc    edi,DWORD PTR [edx+0x79d60116]
  416d1e:	pop    esi
  416d1f:	mov    ch,0x2
  416d21:	repnz cmp DWORD PTR [edi-0x30ef9978],edx
  416d28:	icebp  
  416d29:	cmp    al,0x8
  416d2b:	in     eax,dx
  416d2c:	and    ebp,DWORD PTR [eax]
  416d2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d2f:	adc    eax,0xeacf1869
  416d34:	mov    eax,0x6c5f1e22
  416d39:	pushf  
  416d3a:	dec    ebp
  416d3b:	sbb    ah,bh
  416d3d:	das    
  416d3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d3f:	mov    cl,0x6
  416d41:	pop    esp
  416d42:	int3   
  416d43:	repz lahf 
  416d45:	fmul   DWORD PTR [ebx-0x7cef36f1]
  416d4b:	outs   dx,DWORD PTR ds:[esi]
  416d4c:	jl     0x416d01
  416d4e:	cmp    DWORD PTR [edi-0x626e2b86],edi
  416d54:	ins    DWORD PTR es:[edi],dx
  416d55:	mov    DWORD PTR [ebx+ebp*4-0x1d],edx
  416d59:	into   
  416d5a:	out    dx,al
  416d5b:	idiv   BYTE PTR [ecx+0x5c23e63]
  416d61:	pop    edx
  416d62:	inc    eax
  416d63:	cmp    DWORD PTR [edx+0x142d99d6],ebp
  416d69:	(bad)  
  416d6a:	pop    eax
  416d6b:	nop
  416d6c:	xchg   DWORD PTR [edi],esi
  416d6e:	nop
  416d6f:	xor    eax,DWORD PTR ds:0x3ddfa4f1
  416d75:	or     eax,0x50bc9a43
  416d7a:	sbb    bh,BYTE PTR [edi-0x21]
  416d7d:	cdq    
  416d7e:	idiv   DWORD PTR [eax]
  416d80:	mov    ds:0x8bb4d3d6,al
  416d85:	push   esi
  416d86:	fwait
  416d87:	dec    edi
  416d88:	push   es
  416d89:	(bad)  
  416d8a:	mov    edi,0x6a4fe6cd
  416d8f:	push   0x3262485a
  416d94:	mov    WORD PTR [esi+0x615ab39e],ss
  416d9a:	pop    ebp
  416d9b:	dec    esi
  416d9c:	cmp    BYTE PTR [esi-0x33],ah
  416d9f:	and    eax,0xec66f1ca
  416da4:	outs   dx,DWORD PTR ds:[esi]
  416da5:	and    DWORD PTR [esi-0x3294d5b7],ecx
  416dab:	jmp    0x23f8:0x9c666257
  416db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416db3:	dec    ebx
  416db4:	shl    BYTE PTR [ecx+ebp*2],0xea
  416db8:	push   edx
  416db9:	add    eax,0xe6963f95
  416dbe:	xchg   DWORD PTR [esi-0x1a0fa75e],esp
  416dc4:	mov    BYTE PTR [eax-0x3eb17486],bh
  416dca:	daa    
  416dcb:	out    dx,eax
  416dcc:	loop   0x416d77
  416dce:	in     al,dx
  416dcf:	dec    ecx
  416dd0:	add    DWORD PTR [eax],esi
  416dd2:	jecxz  0x416d8f
  416dd4:	data16 add ch,ch
  416dd7:	mov    ebx,0xa67991ca
  416ddc:	cmp    al,0x54
  416dde:	jl     0x416dee
  416de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416de1:	mov    dl,0xc1
  416de3:	add    bl,BYTE PTR [edi+0x1d936f21]
  416de9:	pop    es
  416dea:	sub    esi,ecx
  416dec:	shl    DWORD PTR [edi],0x5
  416def:	jmp    0x4f27:0xfa19193b
  416df6:	lea    ebp,[eax+0x4c]
  416df9:	mov    eax,0x98932f64
  416dfe:	jl     0x416e74
  416e00:	inc    edx
  416e01:	push   0xb105fffe
  416e06:	in     al,0x84
  416e08:	gs push eax
  416e0a:	mov    bh,0xc8
  416e0c:	mov    BYTE PTR [ecx-0x5b],dh
  416e0f:	popf   
  416e10:	mov    al,0x33
  416e12:	sti    
  416e13:	iret   
  416e14:	out    dx,eax
  416e15:	cmp    BYTE PTR [ebx+0x58],cl
  416e18:	mov    BYTE PTR [ebp+0x715f9cc4],ch
  416e1e:	mov    BYTE PTR gs:[ebp-0x6319b0ff],ah
  416e25:	(bad)  
  416e26:	(bad)
  416e2b:	enter  0x1e8,0xdf
  416e2f:	pusha  
  416e30:	or     ecx,DWORD PTR [esi]
  416e32:	ret    
  416e33:	iret   
  416e34:	xchg   DWORD PTR [edx],ebx
  416e36:	popa   
  416e37:	cdq    
  416e38:	xor    DWORD PTR [ecx],edx
  416e3a:	jb     0x416e32
  416e3c:	pop    ds
  416e3d:	xor    edi,DWORD PTR [edi+0x11400f07]
  416e43:	mov    dl,0xe1
  416e45:	cs pop eax
  416e47:	dec    edx
  416e48:	aas    
  416e49:	inc    esp
  416e4a:	js     0x416dd8
  416e4c:	or     DWORD PTR [eax+0xcff1eb9],edx
  416e52:	js     0x416e0f
  416e54:	mov    dl,0x6e
  416e56:	sub    BYTE PTR [ebx+0x48],cl
  416e59:	adc    ch,BYTE PTR [ebp+0x15b4b2d2]
  416e5f:	fidivr WORD PTR [esi]
  416e61:	lods   eax,DWORD PTR ds:[esi]
  416e62:	jg     0x416e25
  416e64:	shl    BYTE PTR [ecx],1
  416e66:	into   
  416e67:	es (bad) 
  416e69:	mov    ds:0x470315db,eax
  416e6e:	cmp    al,dl
  416e70:	or     cl,dl
  416e72:	shl    BYTE PTR [edx],0xf3
  416e75:	in     eax,dx
  416e76:	or     al,0xce
  416e78:	mov    edi,0x569e606b
  416e7d:	push   eax
  416e7e:	and    eax,0x40015a92
  416e83:	xchg   esp,eax
  416e84:	jns    0x416e81
  416e86:	sbb    BYTE PTR [edi+0x63],0xce
  416e8a:	push   ecx
  416e8b:	dec    esp
  416e8c:	cmp    BYTE PTR [ecx-0x6],ch
  416e8f:	ds sbb al,0x34
  416e92:	xchg   ebp,eax
  416e93:	fisub  DWORD PTR [ecx-0x220379f3]
  416e99:	pop    eax
  416e9a:	inc    edx
  416e9b:	lea    ecx,[ecx+eax*1]
  416e9e:	popa   
  416e9f:	or     edi,DWORD PTR [esi+0x54acf755]
  416ea5:	sub    BYTE PTR [edi+0x3b63f3e3],dl
  416eab:	push   esi
  416eac:	jno    0x416ea4
  416eae:	jg     0x416e97
  416eb0:	test   BYTE PTR [esi],0x96
  416eb3:	mov    ecx,0xa3e4bde5
  416eb8:	push   eax
  416eb9:	jmp    0xdd68f621
  416ebe:	stos   BYTE PTR es:[edi],al
  416ebf:	xor    DWORD PTR [ebx],edi
  416ec1:	mov    eax,DWORD PTR ss:[eax]
  416ec4:	(bad)  
  416ec5:	scas   eax,DWORD PTR es:[edi]
  416ec6:	push   esi
  416ec7:	add    DWORD PTR [esi],esp
  416ec9:	in     eax,0x81
  416ecb:	leave  
  416ecc:	inc    eax
  416ecd:	add    al,0x4d
  416ecf:	adc    ebp,ebx
  416ed1:	aas    
  416ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ed3:	mov    ebp,0xd676b138
  416ed8:	xor    ebx,DWORD PTR [esi+0x27]
  416edb:	and    dh,dl
  416edd:	fimul  WORD PTR [ecx+esi*2]
  416ee0:	mov    cl,0x17
  416ee2:	retf   0x6dc7
  416ee5:	je     0x416e92
  416ee7:	and    ebp,eax
  416ee9:	push   ds
  416eea:	outs   dx,DWORD PTR ds:[esi]
  416eeb:	mov    sp,0x5482
  416eef:	adc    al,0xfd
  416ef1:	fwait
  416ef2:	int3   
  416ef3:	adc    esi,esp
  416ef5:	lds    ebp,FWORD PTR [esi+0x65]
  416ef8:	fwait
  416ef9:	(bad)  
  416efa:	pop    ebp
  416efb:	add    eax,0xf998c799
  416f00:	push   0x3c616864
  416f05:	outs   dx,BYTE PTR ds:[esi]
  416f06:	pushf  
  416f07:	outs   dx,DWORD PTR ds:[esi]
  416f08:	sar    DWORD PTR [edi+0x6debe3be],0xc6
  416f0f:	pusha  
  416f10:	mov    esp,?
  416f12:	add    al,0x4
  416f14:	cmp    BYTE PTR [esi-0x78027142],0x57
  416f1b:	sbb    bh,ah
  416f1d:	mov    cl,BYTE PTR [edi]
  416f1f:	hlt    
  416f20:	mov    ecx,DWORD PTR [ebx+0x670b17a7]
  416f26:	mov    ebp,0xfa8a2375
  416f2b:	cmp    al,0xb
  416f2d:	pushf  
  416f2e:	and    ebx,DWORD PTR [esi+0x25fe325b]
  416f34:	rol    esi,0x0
  416f37:	jae    0x416f17
  416f39:	(bad)  
  416f3a:	or     BYTE PTR [ecx-0x71],dl
  416f3d:	call   0xf9620fca
  416f42:	int3   
  416f43:	xchg   ecx,eax
  416f44:	dec    ecx
  416f45:	push   esi
  416f46:	pop    ecx
  416f47:	cmp    DWORD PTR [edi],edx
  416f49:	addr16 push eax
  416f4b:	ret    
  416f4c:	shl    BYTE PTR [esi-0x3e],cl
  416f4f:	cdq    
  416f50:	push   ecx
  416f51:	fidivr WORD PTR [edx]
  416f53:	cmp    dh,BYTE PTR [eax+0x6178169]
  416f59:	inc    ebp
  416f5a:	mov    edi,0x68845d63
  416f5f:	mov    bh,0xd1
  416f61:	call   0xacc:0x6733649e
  416f68:	pushf  
  416f69:	or     DWORD PTR ds:0xe4c31e5a,edi
  416f6f:	mov    ecx,?
  416f71:	adc    ebp,DWORD PTR [eax+eiz*2+0x9]
  416f75:	or     al,BYTE PTR cs:[ebx-0x35c2642d]
  416f7c:	ja     0x416f0e
  416f7e:	mov    bl,0x88
  416f80:	jle    0x416fd7
  416f82:	sbb    eax,0x514822d5
  416f87:	dec    eax
  416f88:	add    DWORD PTR [ebx+esi*1-0x29],0x13e78d0d
  416f90:	mov    ds:0xcdd6195d,eax
  416f95:	cs xchg ebp,eax
  416f97:	or     esp,DWORD PTR [ecx+edi*8-0x71]
  416f9b:	or     ah,BYTE PTR [ebx+edi*2]
  416f9e:	pop    ebx
  416f9f:	popf   
  416fa0:	push   0xffffffbe
  416fa2:	sbb    al,0xe3
  416fa4:	pop    esp
  416fa5:	inc    esp
  416fa6:	jb     0x416f6d
  416fa8:	inc    ebx
  416fa9:	sub    DWORD PTR [esi+0x79],ecx
  416fac:	outs   dx,BYTE PTR ds:[esi]
  416fad:	sar    DWORD PTR [edx-0x443b5970],1
  416fb3:	fcom   DWORD PTR [edx+0x58]
  416fb6:	dec    ebp
  416fb7:	test   ch,bl
  416fb9:	int3   
  416fba:	(bad)  
  416fbb:	fucomi st,st(7)
  416fbd:	xchg   ebx,eax
  416fbe:	arpl   WORD PTR [edx+0x3e028123],cx
  416fc4:	hlt    
  416fc5:	mov    ebp,esp
  416fc7:	cli    
  416fc8:	mov    cl,0x60
  416fca:	sahf   
  416fcb:	jp     0x41702b
  416fcd:	sar    DWORD PTR [eax-0x15b618ef],1
  416fd3:	loop   0x416ff4
  416fd5:	aaa    
  416fd6:	jnp    0x41702c
  416fd8:	push   es
  416fd9:	(bad)  
  416fda:	fnstsw WORD PTR [ebx+eiz*4]
  416fdd:	je     0x416f76
  416fdf:	cmc    
  416fe0:	add    DWORD PTR [edx],ecx
  416fe2:	xchg   BYTE PTR [edx+0x4f52db98],dh
  416fe8:	cli    
  416fe9:	mov    esp,0x6d6733de
  416fee:	je     0x416fdf
  416ff0:	pop    ecx
  416ff1:	test   al,0x64
  416ff3:	inc    esp
  416ff4:	lds    ecx,FWORD PTR [ecx+0x2f]
  416ff7:	jp     0x416fd7
  416ff9:	imul   esi,DWORD PTR [edx+0x6a],0x7303b758
  417000:	xchg   ebp,eax
  417001:	mov    eax,0xd9f6318b
  417006:	mov    ebx,0xeb319118
  41700b:	outs   dx,BYTE PTR ds:[esi]
  41700c:	jl     0x416feb
  41700e:	ss es das 
  417011:	push   eax
  417012:	les    eax,FWORD PTR [ebx-0x6]
  417015:	scas   eax,DWORD PTR es:[edi]
  417016:	pop    ss
  417017:	sub    ecx,ebp
  417019:	out    dx,eax
  41701a:	pop    esp
  41701b:	xor    ah,ah
  41701d:	pop    ss
  41701e:	rcr    DWORD PTR [esi+0x7d],0x30
  417022:	inc    edi
  417023:	add    eax,0x4bc45136
  417028:	call   DWORD PTR [ebx]
  41702a:	test   al,0xbb
  41702c:	and    esi,DWORD PTR [edx-0x63]
  41702f:	stos   BYTE PTR es:[edi],al
  417030:	sbb    eax,0x967e0300
  417035:	mov    ch,0x45
  417037:	inc    ebp
  417038:	mov    ah,0xeb
  41703a:	mov    ?,WORD PTR [ebx+0x4d204efd]
  417040:	je     0x416fd5
  417042:	sahf   
  417043:	pop    esi
  417044:	out    dx,eax
  417045:	lock push ebp
  417047:	icebp  
  417048:	pushf  
  417049:	mov    ebx,0x2c2856f1
  41704e:	out    0xff,al
  417050:	inc    eax
  417051:	iret   
  417052:	cdq    
  417053:	in     al,dx
  417054:	bound  edi,QWORD PTR [ebx]
  417056:	popf   
  417057:	enter  0xeea1,0x50
  41705b:	jns    0x417064
  41705d:	cmp    al,0xb9
  41705f:	bound  eax,QWORD PTR [edx-0x21]
  417062:	retf   0xd71c
  417065:	out    0xaf,al
  417067:	leave  
  417068:	add    ch,bh
  41706a:	scas   al,BYTE PTR es:[edi]
  41706b:	outs   dx,BYTE PTR ds:[esi]
  41706c:	xchg   edi,eax
  41706d:	adc    dl,ah
  41706f:	cmp    ch,BYTE PTR [eax-0x2ea8ff16]
  417075:	lock adc eax,0xbcb60593
  41707b:	push   esi
  41707c:	pop    esi
  41707d:	sub    esi,edx
  41707f:	nop
  417080:	add    dl,cl
  417082:	jecxz  0x41704d
  417084:	mul    ebp
  417086:	repz push esp
  417088:	jae    0x4170d2
  41708a:	mov    al,ds:0xc6382a76
  41708f:	add    esp,ecx
  417091:	test   ebp,esi
  417093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417094:	mov    ds:0xd28e6489,eax
  417099:	or     esp,esi
  41709b:	div    esi
  41709d:	mov    esi,0x14f9d427
  4170a2:	mov    dh,0xc5
  4170a4:	adc    BYTE PTR [ecx+0x55],ch
  4170a7:	mov    al,ds:0x7a71aa68
  4170ac:	mov    esi,0xe37222c1
  4170b1:	lea    ecx,[esp+eax*8]
  4170b4:	(bad)  
  4170b5:	in     eax,0x3e
  4170b7:	cmp    ebp,DWORD PTR [ebx-0x461c8095]
  4170bd:	nop
  4170be:	in     eax,dx
  4170bf:	loope  0x417110
  4170c1:	mov    dh,0x21
  4170c3:	sub    al,0xe3
  4170c5:	push   ds
  4170c6:	push   ds
  4170c7:	jns    0x417055
  4170c9:	adc    edi,DWORD PTR [edx-0x6c]
  4170cc:	xchg   ecx,eax
  4170cd:	cs inc ebx
  4170cf:	mov    edx,DWORD PTR [edx-0x13]
  4170d2:	out    0x46,al
  4170d4:	jne    0x41714e
  4170d6:	fist   DWORD PTR [eax]
  4170d8:	and    eax,0x284bf3f0
  4170dd:	or     cl,BYTE PTR [edx]
  4170df:	neg    bl
  4170e1:	rol    BYTE PTR [ebx+0x39],1
  4170e4:	xor    BYTE PTR [eax],bh
  4170e6:	jo     0x417151
  4170e8:	push   ecx
  4170e9:	or     al,0xd
  4170eb:	loopne 0x41706d
  4170ed:	outs   dx,DWORD PTR ds:[esi]
  4170ee:	sar    DWORD PTR [ebx],1
  4170f0:	bound  ebx,QWORD PTR [ebp+0x3a]
  4170f3:	aas    
  4170f4:	inc    edx
  4170f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170f6:	fist   WORD PTR ds:0x667a5735
  4170fc:	ja     0x417164
  4170fe:	cmp    eax,0x225eaa4e
  417103:	mov    bh,0x5a
  417105:	pop    esp
  417106:	enter  0x9862,0x46
  41710a:	and    esp,DWORD PTR [ebx]
  41710c:	xor    DWORD PTR [ecx+eiz*8],edi
  41710f:	jbe    0x41711c
  417111:	push   ebx
  417112:	(bad)  
  417113:	and    al,0x42
  417115:	mov    WORD PTR [esi+ecx*8+0x5acd4058],ss
  41711c:	loop   0x4170ab
  41711e:	jno    0x41716b
  417120:	pop    ebx
  417121:	fisttp QWORD PTR [esi-0x71547aa1]
  417127:	sub    ah,BYTE PTR [ebp-0x45ab0d95]
  41712d:	adc    al,0xf9
  41712f:	lahf   
  417130:	and    edi,DWORD PTR [ecx-0x73]
  417133:	dec    esp
  417134:	adc    al,0xa9
  417136:	ret    
  417137:	or     ebp,ebx
  417139:	addr16 pop ds
  41713b:	repz dec ecx
  41713d:	mov    bl,0x78
  41713f:	cwde   
  417140:	(bad)  
  417141:	hlt    
  417142:	jecxz  0x417181
  417144:	scas   al,BYTE PTR es:[edi]
  417145:	jns    0x417153
  417147:	inc    esi
  417148:	(bad)  
  41714a:	outs   dx,DWORD PTR ds:[si]
  41714c:	pop    esp
  41714d:	in     al,dx
  41714e:	mov    WORD PTR [eax+0x41685dda],ss
  417154:	in     al,0xa8
  417156:	adc    al,0x51
  417158:	in     eax,dx
  417159:	test   al,0xd0
  41715b:	and    DWORD PTR [eax-0x70bd0a58],eax
  417161:	pop    edi
  417162:	(bad)  
  417164:	ret    0x2079
  417167:	imul   eax,DWORD PTR [eax+0x43],0xd9520ac8
  41716e:	adc    al,0x40
  417170:	sbb    BYTE PTR [edi],bh
  417172:	add    DWORD PTR [edx],ebp
  417174:	jnp    0x4171eb
  417176:	in     al,dx
  417177:	ins    DWORD PTR es:[edi],dx
  417178:	(bad)  
  417179:	ror    BYTE PTR ds:0xc6b641ef,1
  41717f:	hlt    
  417180:	nop
  417181:	sbb    BYTE PTR [edi+0x47],dl
  417184:	cmp    al,al
  417186:	jb     0x4171e6
  417188:	fdivr  DWORD PTR [esi-0x64]
  41718b:	test   BYTE PTR [ebp+0xd],ah
  41718e:	daa    
  41718f:	mov    al,BYTE PTR [ecx-0x54684b28]
  417195:	mov    ah,0xb7
  417197:	xchg   esi,eax
  417198:	xor    al,0xd0
  41719a:	push   edi
  41719b:	push   0x39a8fe40
  4171a0:	scas   al,BYTE PTR es:[edi]
  4171a1:	jne    0x4171fa
  4171a3:	inc    edx
  4171a4:	dec    ebp
  4171a5:	dec    ebx
  4171a6:	xchg   BYTE PTR [edi+0x68],ch
  4171a9:	lahf   
  4171aa:	jbe    0x417174
  4171ac:	fst    DWORD PTR [eax-0x3a]
  4171af:	inc    esp
  4171b0:	call   0xa39e:0xf4f8958d
  4171b7:	out    dx,al
  4171b8:	add    DWORD PTR [edi+0x3f],0x23
  4171bc:	pop    eax
  4171bd:	add    ah,BYTE PTR [eax+0x322a9c99]
  4171c3:	xlat   BYTE PTR ds:[ebx]
  4171c4:	push   ebx
  4171c5:	repz mov ds:0xd14e1787,al
  4171cb:	push   0xd994dd34
  4171d0:	repz repz xlat BYTE PTR ds:[ebx]
  4171d3:	rcr    esi,0xc5
  4171d6:	adc    edi,esp
  4171d8:	lock out 0xdc,al
  4171db:	cmp    DWORD PTR [edi+edx*8],esi
  4171de:	clc    
  4171df:	fsub   st,st(1)
  4171e1:	loop   0x417238
  4171e3:	add    eax,edi
  4171e5:	in     al,0x4c
  4171e7:	mov    bh,0xe6
  4171e9:	clc    
  4171ea:	shl    ebp,0x51
  4171ed:	push   eax
  4171ee:	mov    dh,0x9f
  4171f0:	int3   
  4171f1:	xor    eax,0xfaef73aa
  4171f6:	and    eax,0xb40be4ce
  4171fb:	popf   
  4171fc:	loope  0x4171fe
  4171fe:	lahf   
  4171ff:	adc    al,0x4a
  417201:	sar    ch,1
  417203:	addr16 push ebx
  417205:	add    BYTE PTR [edi],al
  417207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417208:	jmp    FWORD PTR [edx+0x14]
  41720b:	arpl   sp,si
  41720d:	or     edx,DWORD PTR ds:0x6762d036
  417213:	dec    ebx
  417214:	lahf   
  417215:	hlt    
  417216:	pop    esp
  417217:	or     BYTE PTR [ecx+edi*4+0x7],dl
  41721b:	cli    
  41721c:	and    al,0x94
  41721e:	xchg   esp,eax
  41721f:	push   ebx
  417220:	xor    bh,BYTE PTR [edi-0x43]
  417223:	fld    TBYTE PTR [ebx-0x60]
  417226:	lahf   
  417227:	sub    eax,0x8fbbc30d
  41722c:	pop    es
  41722d:	pop    ecx
  41722e:	es lahf 
  417230:	rcr    al,1
  417232:	into   
  417233:	mov    bl,0xf3
  417235:	push   ebx
  417236:	test   al,0x1
  417239:	mov    bh,0xf3
  41723b:	jle    0x417233
  41723d:	adc    ax,0x80e0
  417241:	add    BYTE PTR [edi+0x61],cl
  417244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417245:	mov    ds:0x85c99060,al
  41724a:	pop    ebx
  41724b:	xor    BYTE PTR [ebx+0x5c0c5f4b],cl
  417251:	fsincos 
  417253:	out    0x7a,eax
  417255:	cwde   
  417256:	out    0xf7,eax
  417258:	stos   BYTE PTR es:[edi],al
  417259:	add    BYTE PTR [edx+0x55],ah
  41725c:	mov    ch,al
  41725e:	push   edi
  41725f:	dec    esi
  417260:	inc    ebx
  417261:	retf   
  417262:	pop    eax
  417263:	mov    bl,0xac
  417265:	xchg   ebp,eax
  417266:	pusha  
  417267:	idiv   DWORD PTR [ebx-0x780de7e7]
  41726d:	mov    esi,0x659172f3
  417272:	js     0x41721d
  417274:	inc    edx
  417275:	sahf   
  417276:	repnz sub ebp,DWORD PTR [ebx-0x5d2a7f0]
  41727d:	call   0x4603d686
  417282:	push   ds
  417283:	adc    eax,0x2cf79cf2
  417288:	(bad)  
  417289:	mov    ds:0x87e55427,eax
  41728e:	mov    esp,0xec713eb0
  417293:	adc    DWORD PTR [esp+edi*1-0x49826f78],edx
  41729a:	adc    al,cl
  41729c:	or     al,al
  41729e:	pop    ebp
  41729f:	cmp    BYTE PTR [edi+0x30],al
  4172a2:	stos   BYTE PTR es:[edi],al
  4172a3:	les    edx,FWORD PTR [esi-0x1d]
  4172a6:	push   es
  4172a7:	(bad)  
  4172a9:	pop    ds
  4172aa:	gs or  al,0x29
  4172ad:	cmp    bl,ch
  4172af:	gs sahf 
  4172b1:	aam    0x13
  4172b3:	sbb    eax,0xe9355dc2
  4172b8:	bound  edx,QWORD PTR [edi-0x7a2e84ec]
  4172be:	xchg   edx,eax
  4172bf:	sbb    al,0x1a
  4172c1:	shr    DWORD PTR [eax+ebp*8],0x39
  4172c5:	adc    BYTE PTR [esi-0x6c2a1a2e],dh
  4172cb:	add    al,0x98
  4172cd:	into   
  4172ce:	ret    0xebd4
  4172d1:	and    DWORD PTR [edi-0x7b],edx
  4172d4:	les    ecx,FWORD PTR [ecx-0x56]
  4172d7:	mov    WORD PTR ds:0x6737cc96,gs
  4172dd:	sahf   
  4172de:	int    0x13
  4172e0:	stc    
  4172e1:	xlat   BYTE PTR ds:[ebx]
  4172e2:	loopne 0x41732c
  4172e4:	cmp    ch,BYTE PTR [edi+edx*2]
  4172e7:	or     BYTE PTR [eax-0x4c],al
  4172ea:	add    eax,0xc0ab31fa
  4172ef:	push   ecx
  4172f0:	adc    ah,BYTE PTR [esi-0x5e0ac6a4]
  4172f6:	shl    DWORD PTR [ebx],cl
  4172f8:	xor    cl,ah
  4172fa:	dec    ebp
  4172fb:	outs   dx,BYTE PTR ds:[esi]
  4172fc:	outs   dx,BYTE PTR ds:[esi]
  4172fd:	jp     0x4172d4
  4172ff:	int3   
  417300:	pop    esi
  417301:	and    eax,0xfc1179f1
  417306:	dec    ecx
  417307:	(bad)  
  417308:	mov    ecx,0x95741dd3
  41730d:	fxch   st(7)
  41730f:	push   cs
  417310:	sti    
  417311:	jo     0x4172a0
  417313:	pop    ds
  417314:	dec    edi
  417315:	test   DWORD PTR [edi-0x45],esp
  417318:	loopne 0x417328
  41731a:	(bad)  
  41731b:	jb     0x417394
  41731d:	add    edx,DWORD PTR [ecx-0x67bcae5d]
  417323:	pop    edi
  417324:	ret    0xc27d
  417327:	mov    BYTE PTR [esi],ah
  417329:	cld    
  41732a:	(bad)  
  41732b:	push   edx
  41732c:	mov    edi,0x7782fbc1
  417331:	cwde   
  417332:	(bad)  
  417334:	mov    ebx,0x70f0293f
  417339:	cmp    ah,BYTE PTR [esi]
  41733b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41733c:	out    dx,eax
  41733d:	data16 jl 0x41736b
  417340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417341:	ss xor al,0x50
  417344:	push   ds
  417345:	mov    bl,0xb5
  417347:	dec    edi
  417348:	pop    ecx
  417349:	not    DWORD PTR ss:[eax-0x7fa2d323]
  417350:	sbb    edx,esp
  417352:	xchg   ecx,eax
  417353:	rol    BYTE PTR [ebp-0xa],0xc2
  417357:	adc    al,0xc9
  417359:	data16 repnz rcr BYTE PTR [esp+eax*8],0xb2
  41735f:	aas    
  417360:	mov    ecx,0xeab8459f
  417365:	popa   
  417366:	call   FWORD PTR [esi-0x27e30e5c]
  41736c:	test   BYTE PTR [ecx],ah
  41736e:	xor    ebp,DWORD PTR [ecx-0x51]
  417371:	ds ja  0x4173e0
  417374:	int3   
  417375:	(bad)  
  417378:	sub    al,0xec
  41737a:	add    esp,DWORD PTR [esi+eiz*1-0x1a9c3576]
  417381:	xlat   BYTE PTR ds:[ebx]
  417382:	jne    0x4173c2
  417384:	nop
  417385:	imul   edi,edi,0x45eedc19
  41738b:	xor    al,ah
  41738d:	jae    0x417403
  41738f:	jmp    0xe7be833c
  417394:	mov    ebp,0x790ffcdc
  417399:	inc    esi
  41739a:	sahf   
  41739b:	cdq    
  41739c:	or     BYTE PTR [esi],ah
  41739e:	jo     0x417381
  4173a0:	inc    esp
  4173a1:	jb     0x417421
  4173a3:	xor    eax,0x25db40c6
  4173a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173a9:	or     al,0xe1
  4173ab:	pop    ecx
  4173ac:	arpl   WORD PTR [edi+0x122c7499],bx
  4173b2:	pop    edx
  4173b3:	ret    
  4173b4:	mov    edx,0xec15edac
  4173b9:	and    ch,ch
  4173bb:	shl    ch,1
  4173bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173be:	adc    eax,0xeeddba96
  4173c3:	inc    ebp
  4173c4:	dec    eax
  4173c5:	pop    edi
  4173c6:	xor    esp,DWORD PTR [ecx-0x485de015]
  4173cc:	sub    eax,0x1c3bede0
  4173d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173d2:	jne    0x41744b
  4173d4:	std    
  4173d5:	ficomp WORD PTR [eax+0x27de2523]
  4173db:	fwait
  4173dc:	xchg   DWORD PTR [esi+0x47212e69],esp
  4173e2:	mov    ds:0x35ef06f1,al
  4173e7:	(bad)  
  4173e8:	xchg   ebp,eax
  4173e9:	jg     0x4173c0
  4173eb:	pop    eax
  4173ec:	mov    ebp,0x982f73b3
  4173f1:	pop    edi
  4173f2:	xor    DWORD PTR [edi+0x32cef045],0x35
  4173f9:	mov    BYTE PTR [ecx],ah
  4173fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173fc:	sub    eax,0x50dea926
  417401:	scas   eax,DWORD PTR es:[edi]
  417402:	rol    DWORD PTR cs:[eax+0x7f868061],cl
  417409:	add    BYTE PTR [esi-0x4eacf403],0xa9
  417410:	cmp    BYTE PTR [edi],al
  417412:	push   eax
  417413:	pop    ebp
  417414:	fsubr  QWORD PTR [eax-0x22]
  417417:	lods   eax,DWORD PTR es:[esi]
  417419:	push   ebx
  41741a:	lods   eax,DWORD PTR ds:[esi]
  41741b:	or     DWORD PTR [esi+0x72],edi
  41741e:	xor    DWORD PTR [eax+ecx*2],edx
  417421:	dec    BYTE PTR [ecx-0x3f2e90ed]
  417427:	rol    ch,cl
  417429:	loop   0x417438
  41742b:	add    eax,ebx
  41742d:	ins    BYTE PTR es:[edi],dx
  41742e:	aas    
  41742f:	cmp    eax,ecx
  417431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417432:	pop    esi
  417433:	(bad)  
  417434:	and    ebp,esp
  417436:	in     al,0xd3
  417438:	ja     0x4173ef
  41743a:	stos   BYTE PTR es:[edi],al
  41743b:	mov    cl,0xd5
  41743d:	(bad)  
  41743e:	mov    bh,0x19
  417440:	dec    esi
  417441:	push   ss
  417442:	ds ds inc esi
  417445:	in     eax,0x80
  417447:	ins    DWORD PTR es:[edi],dx
  417448:	(bad)  
  417449:	(bad)  
  41744a:	test   eax,0x6ce54181
  41744f:	lds    esi,FWORD PTR [ebx]
  417451:	push   esi
  417452:	sahf   
  417453:	gs popa 
  417455:	scas   al,BYTE PTR es:[edi]
  417456:	sub    BYTE PTR [edx-0x16],dh
  417459:	inc    eax
  41745a:	ins    BYTE PTR es:[edi],dx
  41745b:	xor    al,0xe1
  41745d:	add    eax,0x4f5c0372
  417462:	mov    esp,0x9371c3e5
  417467:	pop    es
  417468:	fidiv  WORD PTR ss:[eax]
  41746b:	rol    DWORD PTR [ebx],cl
  41746d:	xchg   edi,eax
  41746e:	jne    0x417470
  417470:	(bad)  
  417471:	ds mov ch,ah
  417474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417475:	scas   al,BYTE PTR es:[edi]
  417476:	and    eax,0x63fa23c1
  41747b:	bound  ebp,QWORD PTR [ebx+0x5698a4b7]
  417481:	hlt    
  417482:	sbb    DWORD PTR [edi-0x1e8468a],ebx
  417488:	adc    cl,BYTE PTR ds:0x1a7103bf
  41748e:	push   ss
  41748f:	xor    eax,0x6c1c5927
  417494:	dec    eax
  417495:	in     al,dx
  417496:	enter  0xad8a,0x73
  41749a:	ret    0x29ed
  41749d:	sbb    BYTE PTR [edx-0x4016e329],dl
  4174a3:	xchg   esi,eax
  4174a4:	movsx  esi,bh
  4174a7:	lea    ebp,[ecx-0x39024c04]
  4174ad:	das    
  4174ae:	jmp    0xdcce47a3
  4174b3:	ins    BYTE PTR es:[edi],dx
  4174b4:	push   0xc6363fe8
  4174b9:	add    eax,0x29896846
  4174be:	and    DWORD PTR [edx],esp
  4174c0:	lds    esp,FWORD PTR [edi]
  4174c2:	cmp    al,0x40
  4174c4:	ss call 0x13f2ad37
  4174ca:	shl    DWORD PTR [edx+eiz*8-0x591140c0],1
  4174d1:	sahf   
  4174d2:	shr    BYTE PTR [ebx-0x51],cl
  4174d5:	pop    esi
  4174d6:	arpl   WORD PTR [ebx-0x74b72ad2],dx
  4174dc:	mov    dl,0x32
  4174de:	push   ebp
  4174df:	dec    ebx
  4174e0:	push   0x345a9b9e
  4174e5:	push   ebp
  4174e6:	push   0x298bd653
  4174eb:	mov    ah,0x78
  4174ed:	inc    ecx
  4174ee:	test   eax,0xd4283c67
  4174f4:	rcl    BYTE PTR [edx-0x6cad73a7],1
  4174fa:	and    BYTE PTR [ecx+0x4e54f886],0xeb
  417501:	sbb    eax,0x2f2176a8
  417506:	pusha  
  417507:	mov    edx,0xda8f7237
  41750c:	cdq    
  41750d:	jg     0x4174be
  41750f:	test   eax,0x9c185acf
  417514:	adc    al,0xf4
  417516:	mov    eax,ds:0xdeb1eab4
  41751b:	push   es
  41751c:	clc    
  41751d:	push   edx
  41751e:	out    dx,eax
  41751f:	clc    
  417520:	lods   al,BYTE PTR ds:[esi]
  417521:	sub    BYTE PTR [ebx],dl
  417523:	push   ds
  417524:	mov    eax,ds:0x740df024
  417529:	dec    esi
  41752a:	add    DWORD PTR [edx],edi
  41752c:	add    BYTE PTR [esi-0x48aa1d3],al
  417532:	jmp    0xa3f4:0x1fc87178
  417539:	adc    DWORD PTR [edx+ebx*4-0x4025dc14],ebp
  417540:	xor    bl,BYTE PTR ds:0xe013aa52
  417546:	shl    BYTE PTR [esi-0x4e],0x25
  41754a:	int3   
  41754b:	rcl    DWORD PTR [edi+ebx*2-0x4a],0x29
  417550:	in     al,dx
  417551:	iret   
  417552:	adc    al,0xed
  417554:	push   0x961e5f84
  417559:	mov    ah,0x90
  41755b:	jne    0x417556
  41755d:	ror    BYTE PTR [esi-0x10],0x76
  417561:	retf   
  417562:	xchg   ecx,eax
  417563:	sbb    eax,DWORD PTR [eax]
  417565:	mov    ch,0xb6
  417567:	jb     0x417527
  417569:	data16 jnp 0x41750a
  41756c:	cmp    al,0x5b
  41756e:	push   esi
  41756f:	inc    esp
  417570:	xor    al,0x27
  417572:	mov    ds:0xce9e3d57,al
  417577:	jns    0x4175e4
  417579:	cmp    ebx,DWORD PTR [eax]
  41757b:	test   DWORD PTR [eax-0x1ebc3884],edi
  417581:	jnp    0x417525
  417583:	shl    BYTE PTR fs:[eax],cl
  417586:	cli    
  417587:	pop    eax
  417588:	lea    edi,[ebp+0x65f9738b]
  41758e:	jo     0x417599
  417590:	cmp    eax,0xabfd030b
  417595:	loop   0x417592
  417597:	mov    ah,0x87
  417599:	xchg   esp,eax
  41759a:	ret    0x62a8
  41759d:	arpl   WORD PTR [ecx-0x28c8bda2],ax
  4175a3:	div    ebx
  4175a5:	ss push ss
  4175a7:	call   0x585dc1e1
  4175ac:	repnz mov ecx,0xa700a8f2
  4175b2:	ins    BYTE PTR es:[edi],dx
  4175b3:	ds fcmovnb st,st(1)
  4175b6:	out    dx,eax
  4175b7:	pop    esp
  4175b8:	push   ebx
  4175b9:	sti    
  4175ba:	push   0x46
  4175bc:	fidivr WORD PTR [edx]
  4175be:	out    0x6a,al
  4175c0:	mov    bl,0x12
  4175c2:	(bad)
  4175c6:	adc    cl,BYTE PTR [edi-0xa]
  4175c9:	push   ecx
  4175ca:	sub    BYTE PTR [esi+0x7d4fa6e4],0xcd
  4175d1:	scas   eax,DWORD PTR es:[edi]
  4175d2:	(bad)  
  4175d4:	pop    edx
  4175d5:	xor    DWORD PTR ds:0xd4386b6,0xffffff9f
  4175dc:	jb     0x41756f
  4175de:	push   ebp
  4175df:	mov    dl,0x74
  4175e1:	loopne 0x4175aa
  4175e3:	mov    WORD PTR [ebx+0x2c],cs
  4175e6:	mov    ss,WORD PTR ss:[edi+0x6a]
  4175ea:	arpl   WORD PTR [eax+0x672cba9a],cx
  4175f0:	sahf   
  4175f1:	sbb    eax,0xc3d049a5
  4175f6:	cmp    BYTE PTR [edi+0x79],ah
  4175f9:	inc    ebp
  4175fa:	xchg   ebp,eax
  4175fb:	sub    bh,0x94
  4175fe:	imul   edi,esp,0xffffffed
  417601:	cs sub eax,esp
  417604:	jno    0x417637
  417606:	sti    
  417607:	fld    QWORD PTR [edi+0x65]
  41760a:	sbb    DWORD PTR [edi+eax*4],0xa162f741
  417611:	sbb    ah,BYTE PTR [edi-0x6d5a5dfe]
  417617:	aas    
  417618:	test   BYTE PTR [edi],dl
  41761a:	(bad)  
  41761b:	dec    eax
  41761c:	in     eax,0xc2
  41761e:	in     al,0x5c
  417620:	data16 cmp dl,BYTE PTR [ebp-0xcb1efba]
  417627:	pusha  
  417628:	xor    BYTE PTR [ebp-0x7a],ch
  41762b:	dec    edi
  41762c:	fld    QWORD PTR [ebx-0x45]
  41762f:	push   ebx
  417630:	cmp    BYTE PTR [ebp-0x3120cdd5],0x95
  417637:	jg     0x417657
  417639:	test   dh,0xa7
  41763c:	jno    0x417631
  41763e:	arpl   WORD PTR [edx],si
  417640:	sbb    al,0xe6
  417642:	iret   
  417643:	adc    ch,bl
  417645:	jb     0x41765d
  417647:	aas    
  417648:	mov    BYTE PTR [edx+0x46],ah
  41764b:	pusha  
  41764c:	repz and bl,BYTE PTR ss:[ebx]
  417650:	adc    bl,BYTE PTR [esi+ebp*1+0x5b]
  417654:	mov    ds:0xe98583bc,eax
  417659:	jle    0x4176a4
  41765b:	mov    ebp,0x318c952e
  417660:	add    BYTE PTR [eax-0x5f],0x88
  417664:	shr    BYTE PTR [eax-0x19],1
  417667:	jecxz  0x41761f
  417669:	test   esi,ebx
  41766b:	out    0xf2,eax
  41766d:	add    bl,dl
  41766f:	xchg   edx,eax
  417670:	sahf   
  417671:	repz sahf 
  417673:	add    dl,bl
  417675:	fldcw  WORD PTR [esp+edi*1+0x60]
  417679:	and    DWORD PTR [ebx+ebp*4+0x5],eax
  41767d:	mov    BYTE PTR [ebx+ebx*8],cl
  417680:	push   ecx
  417681:	xchg   edi,eax
  417682:	scas   al,BYTE PTR es:[edi]
  417683:	and    DWORD PTR [ebx],0xf56b30c7
  417689:	xor    bh,al
  41768b:	cmp    eax,0x3ed1769c
  417690:	xchg   DWORD PTR [ebx-0x5b],ebx
  417693:	aad    0xba
  417695:	pop    eax
  417696:	xchg   BYTE PTR [eax+esi*1+0x3e],ch
  41769a:	xor    eax,0x6ea595e4
  41769f:	pop    es
  4176a0:	lds    esp,FWORD PTR [ebx+esi*1]
  4176a3:	jg     0x417703
  4176a5:	add    DWORD PTR [edx-0x6e],ebp
  4176a8:	je     0x4176dd
  4176aa:	xor    ah,BYTE PTR [ebx]
  4176ac:	jns    0x417667
  4176ae:	xor    cl,BYTE PTR [edx+0x43]
  4176b1:	aam    0x92
  4176b3:	push   edi
  4176b4:	int3   
  4176b5:	push   ss
  4176b6:	pop    edx
  4176b7:	inc    esi
  4176b8:	jl     0x417739
  4176ba:	sar    DWORD PTR [ebp+0x690950dd],0xc7
  4176c1:	inc    ebx
  4176c2:	add    ch,ch
  4176c4:	js     0x417717
  4176c6:	out    dx,eax
  4176c7:	inc    ebx
  4176c8:	adc    dl,al
  4176ca:	mov    ecx,0x47351d5a
  4176cf:	push   ss
  4176d0:	lds    ecx,FWORD PTR [ebx-0x1e]
  4176d3:	bound  ebx,QWORD PTR [edi-0x52]
  4176d6:	call   0x560969a8
  4176db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176dc:	sbb    BYTE PTR [edx+0x20],ah
  4176df:	outs   dx,BYTE PTR ds:[esi]
  4176e0:	fmul   QWORD PTR [edx]
  4176e2:	sti    
  4176e3:	xchg   BYTE PTR [ebp-0x34],bh
  4176e6:	push   ds
  4176e7:	inc    edi
  4176e8:	enter  0x471d,0x6d
  4176ec:	pop    edi
  4176ed:	ror    BYTE PTR [ebx+ecx*1],1
  4176f0:	fst    QWORD PTR ds:0x5ea0a860
  4176f6:	fisubr DWORD PTR [eax]
  4176f8:	clc    
  4176f9:	mov    dh,BYTE PTR [eax+0x65b16cc5]
  4176ff:	jo     0x4176e6
  417701:	add    dl,BYTE PTR [ebp+0x373eb28e]
  417707:	jmp    0xa5dc:0xe5307f4f
  41770e:	jmp    0xdb353d33
  417713:	push   edi
  417714:	cli    
  417715:	loop   0x4176f0
  417717:	jg     0x4176eb
  417719:	(bad)  
  41771a:	push   cs
  41771b:	mov    WORD PTR [ebp-0x47],es
  41771e:	cmp    al,0x64
  417720:	and    DWORD PTR [edi+edx*4+0x6cc72f7],0xdc3c12c2
  41772b:	pop    edi
  41772c:	std    
  41772d:	sti    
  41772e:	loop   0x417755
  417730:	jmp    DWORD PTR [ebp-0x1689089f]
  417736:	icebp  
  417737:	fadd   QWORD PTR [ebp+0x4d]
  41773a:	push   esi
  41773b:	mov    bh,0xdb
  41773d:	xchg   esi,eax
  41773e:	pop    edx
  41773f:	cmp    eax,0x5dffdb95
  417744:	loopne 0x4176e4
  417746:	sub    eax,0x2844c662
  41774b:	adc    BYTE PTR fs:[eax+0x305a6572],ah
  417752:	loopne 0x417703
  417754:	pushf  
  417755:	(bad)
  417759:	or     eax,0x55796464
  41775e:	in     eax,dx
  41775f:	dec    edx
  417760:	xchg   edx,eax
  417761:	in     eax,0x28
  417763:	push   0x9d793050
  417768:	jge    0x417727
  41776a:	push   0xdc74af4e
  41776f:	lahf   
  417770:	lock xor DWORD PTR [eax],edx
  417773:	outs   dx,BYTE PTR ds:[esi]
  417774:	cmp    eax,0x1dd2aaf0
  417779:	(bad)  
  41777a:	lds    ebx,FWORD PTR [ebp+0x60]
  41777d:	push   es
  41777e:	inc    edi
  41777f:	jo     0x417706
  417781:	mov    gs,WORD PTR [ecx+0x49]
  417784:	cmp    edx,DWORD PTR [ebx+eax*1-0x3555baab]
  41778b:	mov    BYTE PTR [eax-0xd5bdd3f],0xb4
  417792:	mov    eax,ds:0xe917e48d
  417797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417798:	mov    esi,DWORD PTR [ebx-0x351a28ea]
  41779e:	aad    0x7d
  4177a0:	test   al,0xbd
  4177a2:	xchg   edi,eax
  4177a3:	sbb    ebx,DWORD PTR [eax+esi*2]
  4177a6:	add    ch,bh
  4177a8:	sbb    eax,0x2d78163f
  4177ad:	sbb    al,0xbc
  4177af:	inc    edx
  4177b0:	jmp    0xb653:0x841e175f
  4177b7:	cmp    al,0x3
  4177b9:	fs jmp 0x4177f4
  4177bc:	dec    ebx
  4177bd:	adc    DWORD PTR [ecx+0x10],0xffffffc3
  4177c1:	sbb    DWORD PTR [eax*2+0x38875bb5],edx
  4177c8:	(bad)  
  4177ca:	mov    edx,0xa5bb0c5
  4177cf:	mov    esi,0x3a796f4b
  4177d4:	push   eax
  4177d5:	jle    0x41783e
  4177d7:	mov    esp,0x4b3b9159
  4177dc:	outs   dx,BYTE PTR ds:[esi]
  4177dd:	mov    dl,0xde
  4177df:	rol    edx,1
  4177e1:	pop    es
  4177e2:	loop   0x4177e8
  4177e4:	and    bh,0x36
  4177e7:	loop   0x417815
  4177e9:	fild   QWORD PTR [ebp-0x752e1009]
  4177ef:	retf   0xa0e8
  4177f2:	rcl    BYTE PTR [eax+0x7e],1
  4177f5:	sahf   
  4177f6:	test   eax,0x4a9ee6f1
  4177fb:	cld    
  4177fc:	leave  
  4177fd:	jmp    0x49cf03f7
  417802:	mov    dh,0xb4
  417804:	sub    eax,0xa3ff8e01
  417809:	pop    ds
  41780a:	shr    DWORD PTR ds:[eax+ebp*2-0x62],cl
  41780f:	cs (bad) 
  417812:	test   al,0xe3
  417814:	scas   eax,DWORD PTR es:[edi]
  417815:	xchg   ebp,eax
  417816:	jle    0x41785d
  417818:	or     al,0x19
  41781a:	xchg   esp,esp
  41781c:	sbb    bl,BYTE PTR [eax+0x9]
  41781f:	jne    0x417838
  417821:	das    
  417822:	push   eax
  417823:	pusha  
  417824:	adc    eax,0x1a1f9806
  417829:	pop    edi
  41782a:	push   esp
  41782b:	and    BYTE PTR [ecx-0x77],0x6
  41782f:	daa    
  417830:	lock mov ebx,0xe5b96c43
  417836:	ret    0xb3f
  417839:	call   0xcc97:0xd46bc057
  417840:	fisub  DWORD PTR [edi]
  417842:	add    ecx,DWORD PTR [eax-0x6436ba82]
  417848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417849:	add    al,0xae
  41784b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41784c:	push   ebp
  41784d:	or     edx,DWORD PTR [ebp+0x1cbdf30b]
  417853:	mov    ds,ebx
  417855:	pushf  
  417856:	add    esp,esp
  417858:	push   cs
  417859:	mov    al,0x6c
  41785b:	push   ss
  41785c:	pop    esi
  41785d:	mov    esp,0x463b23bb
  417862:	scas   al,BYTE PTR es:[edi]
  417863:	jp     0x417870
  417865:	and    BYTE PTR [eax],0xe0
  417868:	add    edi,DWORD PTR [edx+edx*1]
  41786b:	imul   esi,DWORD PTR [ebp+0x1b],0x15
  41786f:	in     al,dx
  417870:	in     al,0x7e
  417872:	daa    
  417873:	mov    ebx,0x9af65b67
  417878:	daa    
  417879:	mov    ds:0x4c18f2d6,eax
  41787e:	pop    ebp
  41787f:	or     al,0xdb
  417881:	sub    eax,0xec2d4886
  417886:	popa   
  417887:	lods   eax,DWORD PTR ds:[esi]
  417888:	mov    BYTE PTR [esi],dl
  41788a:	mov    cl,0x3a
  41788c:	(bad)  
  41788d:	in     al,dx
  41788e:	out    0x2f,eax
  417890:	repnz push ebp
  417892:	shl    DWORD PTR [edi-0x7e58c379],0x99
  417899:	test   BYTE PTR [ecx+0x6d6155e6],dl
  41789f:	(bad)  
  4178a0:	dec    esp
  4178a1:	ins    BYTE PTR es:[edi],dx
  4178a2:	jb     0x417906
  4178a4:	mov    dh,0xe9
  4178a6:	mov    ecx,0x60a526ad
  4178ab:	test   BYTE PTR [esi+ebp*2-0x370329cc],ah
  4178b2:	shr    bl,cl
  4178b4:	repnz push es
  4178b6:	dec    edx
  4178b7:	mov    cx,0xc85d
  4178bb:	mov    eax,ds:0x16290451
  4178c0:	hlt    
  4178c1:	lea    esp,[ecx-0x6e]
  4178c4:	mov    dh,0x60
  4178c6:	les    eax,FWORD PTR [eax]
  4178c8:	lods   al,BYTE PTR ds:[esi]
  4178c9:	test   BYTE PTR [edx],dl
  4178cb:	jns    0x41791f
  4178cd:	mov    al,0x2e
  4178cf:	add    BYTE PTR [eax-0x979fc3c],dh
  4178d5:	mov    ds:0xf67e5652,eax
  4178da:	test   eax,0x2e14c105
  4178df:	call   0x42de:0xdbd924a2
  4178e6:	(bad)  
  4178e7:	xchg   ecx,eax
  4178e8:	lods   al,BYTE PTR ds:[esi]
  4178e9:	iret   
  4178ea:	xchg   ebp,eax
  4178eb:	mov    ebp,0x61de00a5
  4178f0:	pop    es
  4178f1:	inc    edx
  4178f2:	mov    ch,0xb
  4178f4:	mov    ecx,0x96a3c869
  4178f9:	ss jg  0x4178d0
  4178fc:	arpl   dx,ax
  4178fe:	dec    ebp
  4178ff:	lock sub edi,DWORD PTR [eax+0xc]
  417903:	gs call 0x729a5e28
  417909:	loopne 0x41790c
  41790b:	outs   dx,BYTE PTR ds:[esi]
  41790c:	jb     0x4178dc
  41790e:	(bad)  
  41790f:	pop    edi
  417910:	jg     0x4178d4
  417912:	sub    BYTE PTR [esi-0x7cc541e9],bh
  417918:	pop    esi
  417919:	jmp    0x41790a
  41791b:	fsubr  QWORD PTR [esi+edi*2+0x20]
  41791f:	cmp    eax,0x2653e434
  417924:	je     0x417952
  417926:	daa    
  417927:	sub    bh,BYTE PTR [eax-0x2b]
  41792a:	inc    ebx
  41792b:	dec    ebx
  41792c:	ret    
  41792d:	popa   
  41792e:	aaa    
  41792f:	add    DWORD PTR [ebp-0x45],esi
  417932:	pop    esp
  417933:	add    al,0xaf
  417935:	dec    edi
  417936:	xor    ebx,DWORD PTR [ebx+ebx*1-0x6ea5ae61]
  41793d:	(bad)  
  41793e:	pop    ss
  41793f:	lea    edi,ss:[esp+esi*2]
  417943:	test   BYTE PTR [ebx],bh
  417945:	inc    ebp
  417946:	fldcw  WORD PTR [edx]
  417948:	mov    cl,0x28
  41794a:	and    dh,bl
  41794c:	mov    eax,ds:0x83b0ec81
  417951:	add    DWORD PTR [esp+ebx*4-0x19],ebp
  417955:	inc    ebp
  417956:	inc    ecx
  417957:	sbb    ah,bh
  417959:	pop    esi
  41795a:	push   esi
  41795b:	and    ebp,DWORD PTR [ecx]
  41795d:	sbb    ebp,DWORD PTR [eax-0x54]
  417960:	mov    ebp,0x3f015533
  417965:	test   al,0xd5
  417967:	jae    0x4179bf
  417969:	mov    al,ds:0x9563bc84
  41796e:	mov    cl,0x96
  417970:	jle    0x417900
  417972:	in     eax,dx
  417973:	inc    edi
  417974:	add    DWORD PTR [ebp+esi*2+0x3c3a9e65],edx
  41797b:	sbb    bh,dh
  41797d:	in     eax,dx
  41797e:	and    DWORD PTR [edi-0x26],ebx
  417981:	mov    esp,0x617726a6
  417986:	out    dx,eax
  417987:	imul   BYTE PTR [eax+0x68]
  41798a:	mov    DWORD PTR [edi-0x6a],edi
  41798d:	push   0xffffffc2
  41798f:	push   esp
  417990:	sub    eax,DWORD PTR [edx+0x68c42c96]
  417996:	mov    al,0x43
  417998:	les    edi,FWORD PTR [edx+0x3c8a292c]
  41799e:	jbe    0x4179cd
  4179a0:	pop    ebx
  4179a1:	and    ah,BYTE PTR [ebx+ebp*1]
  4179a4:	(bad)  
  4179a5:	xchg   BYTE PTR [eax+0x7acef669],ch
  4179ab:	push   ebp
  4179ac:	pop    edx
  4179ad:	mov    ah,0x6e
  4179af:	cdq    
  4179b0:	je     0x417960
  4179b2:	scas   al,BYTE PTR es:[edi]
  4179b3:	dec    edi
  4179b4:	fwait
  4179b5:	jae    0x417988
  4179b7:	stc    
  4179b8:	je     0x417996
  4179ba:	lea    edi,fs:[ebx]
  4179bd:	xchg   esi,eax
  4179be:	push   edx
  4179bf:	mov    al,0x72
  4179c1:	xchg   esp,eax
  4179c2:	lock xchg esp,eax
  4179c4:	sub    eax,0xb8b8e0f
  4179c9:	shr    bl,1
  4179cb:	cmp    DWORD PTR [eax+0x5b],edx
  4179ce:	jnp    0x4179ad
  4179d0:	(bad)  
  4179d1:	fucomi st,st(0)
  4179d3:	mov    eax,ds:0x1710dee8
  4179d8:	add    eax,0x36c2f6af
  4179dd:	xor    ebp,DWORD PTR [esi+ebx*1]
  4179e0:	jmp    0x417a12
  4179e2:	mov    ?,eax
  4179e4:	pusha  
  4179e5:	sbb    al,0x1f
  4179e7:	add    ecx,DWORD PTR [esi]
  4179e9:	mov    bl,0xc5
  4179eb:	aad    0x5e
  4179ed:	and    DWORD PTR [ecx-0x6b],ebx
  4179f0:	inc    eax
  4179f1:	xlat   BYTE PTR ds:[ebx]
  4179f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179f3:	jbe    0x4179de
  4179f5:	loopne 0x4179a9
  4179f7:	lock into 
  4179f9:	jg     0x417a38
  4179fb:	fdiv   QWORD PTR [eax+esi*8+0x5fded07e]
  417a02:	aam    0x94
  417a04:	pop    eax
  417a05:	mov    dl,0x25
  417a07:	aad    0xae
  417a09:	dec    ebx
  417a0a:	icebp  
  417a0b:	imul   edi,DWORD PTR [esi-0x1ab3deea],0xa25b491d
  417a15:	xchg   esi,eax
  417a16:	call   0x2d65a980
  417a1b:	or     DWORD PTR [ecx-0x41],ebp
  417a1e:	arpl   WORD PTR [esi+0x68],bx
  417a21:	mul    dh
  417a23:	push   edx
  417a24:	push   ebp
  417a25:	addr16 jg 0x4179f2
  417a28:	mov    dl,0x24
  417a2a:	pop    eax
  417a2b:	mov    ch,0xdd
  417a2d:	jbe    0x417a22
  417a2f:	push   es
  417a30:	jae    0x417a16
  417a32:	inc    edx
  417a33:	pop    esi
  417a34:	clc    
  417a35:	imul   esp,esi,0x7f
  417a38:	inc    edx
  417a39:	lock adc edx,DWORD PTR [ecx-0x6d]
  417a3d:	pop    ebp
  417a3e:	scas   al,BYTE PTR es:[edi]
  417a3f:	jae    0x4179d1
  417a41:	inc    esp
  417a42:	pop    edx
  417a43:	aad    0x88
  417a45:	je     0x417a57
  417a47:	retf   0xe299
  417a4a:	stos   BYTE PTR es:[edi],al
  417a4b:	xchg   esi,eax
  417a4c:	enter  0xb4be,0x3c
  417a50:	inc    ecx
  417a51:	sbb    bl,cl
  417a53:	pop    esi
  417a54:	ret    
  417a55:	shr    DWORD PTR [eax+eiz*8+0x5e],0xa
  417a5a:	ja     0x417a1d
  417a5c:	xchg   BYTE PTR [ebp+0x7d070feb],dl
  417a62:	fnstsw WORD PTR [ecx+0x6dadc6bc]
  417a68:	mov    bl,0xd2
  417a6a:	ja     0x417a4f
  417a6c:	(bad)  [ebx+0xf]
  417a6f:	inc    ebx
  417a70:	hlt    
  417a71:	hlt    
  417a72:	push   es
  417a73:	pusha  
  417a74:	jae    0x417ac4
  417a76:	mov    eax,0xb9048d31
  417a7b:	mov    bh,0xd
  417a7d:	or     esi,DWORD PTR [esi]
  417a7f:	jmp    0x8f8a9024
  417a84:	jge    0x417a34
  417a86:	int    0x22
  417a88:	outs   dx,BYTE PTR ds:[esi]
  417a89:	retf   0x9b25
  417a8c:	int3   
  417a8d:	jmp    0x452175c9
  417a92:	adc    al,0x3a
  417a94:	sahf   
  417a95:	jns    0x417af2
  417a97:	ret    0x4fa1
  417a9a:	or     DWORD PTR [eax],0x4056ca1a
  417aa0:	test   BYTE PTR [esi+0x4f9b6081],bl
  417aa6:	retf   0xc7e1
  417aa9:	jae    0x417af2
  417aab:	lods   al,BYTE PTR ds:[esi]
  417aac:	mov    ecx,0xf4589c77
  417ab1:	inc    esp
  417ab2:	inc    eax
  417ab3:	out    0x57,eax
  417ab5:	in     al,0x6d
  417ab7:	jmp    0x5a8d:0xf2244556
  417abe:	retf   0x73d7
  417ac1:	pop    ebp
  417ac2:	(bad)  
  417ac4:	test   eax,0x1fe46d56
  417ac9:	(bad)  
  417aca:	pop    edi
  417acb:	adc    edx,edi
  417acd:	and    al,BYTE PTR [edi+esi*2-0x10]
  417ad1:	or     DWORD PTR [edx+ebp*8+0x158caf9d],esi
  417ad8:	jmp    0x417b1e
  417ada:	int3   
  417adb:	fmul   st,st(2)
  417add:	cmp    eax,0x8b5fd97a
  417ae2:	mov    ebp,0x34d2da63
  417ae7:	pop    ebp
  417ae8:	mov    al,ds:0x92d993f7
  417aed:	ds out 0x1e,eax
  417af0:	pop    edi
  417af1:	stos   BYTE PTR es:[edi],al
  417af2:	ret    0x422
  417af5:	mov    WORD PTR [ebx+0x34],es
  417af8:	jmp    0xf8f3ad4a
  417afd:	lods   al,BYTE PTR ds:[esi]
  417afe:	retf   0xc9af
  417b01:	mov    dh,0x54
  417b03:	ret    0x73ce
  417b06:	sar    dl,1
  417b08:	outs   dx,BYTE PTR ds:[esi]
  417b09:	(bad)  
  417b0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b0b:	clc    
  417b0c:	push   ecx
  417b0d:	int    0x7d
  417b0f:	push   ebp
  417b10:	inc    edx
  417b11:	imul   edx,DWORD PTR [edi],0x15
  417b14:	(bad)  
  417b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b16:	cmp    bl,BYTE PTR [eax-0x27]
  417b19:	jbe    0x417ab7
  417b1b:	mov    dl,0x52
  417b1d:	mov    al,bl
  417b1f:	adc    al,0x7f
  417b21:	leave  
  417b22:	(bad)
  417b25:	cmp    ebx,esp
  417b27:	hlt    
  417b28:	mov    dh,0xea
  417b2a:	inc    esi
  417b2b:	lods   eax,DWORD PTR ds:[esi]
  417b2c:	(bad)  
  417b2d:	data16 pop bx
  417b30:	push   ds
  417b31:	push   ebx
  417b32:	ret    0xb950
  417b35:	push   eax
  417b36:	nop
  417b37:	fild   DWORD PTR [edx+0x11]
  417b3a:	in     eax,dx
  417b3b:	fisttp DWORD PTR [ebp-0x10]
  417b3e:	push   ebp
  417b40:	jns    0x417b99
  417b42:	outs   dx,DWORD PTR ds:[esi]
  417b43:	xor    al,0xdf
  417b45:	jl     0x417bc6
  417b47:	call   0xe8d761b8
  417b4c:	add    ah,BYTE PTR [eax]
  417b4e:	lahf   
  417b4f:	jmp    0xf5f8ec32
  417b54:	push   edi
  417b55:	ss mov ebx,0xcef9519e
  417b5b:	xchg   edx,eax
  417b5c:	ja     0x417b62
  417b5e:	or     eax,0x61ce12ca
  417b63:	xchg   esi,eax
  417b64:	ret    
  417b65:	in     eax,0xb1
  417b67:	jnp    0x417b3c
  417b69:	(bad)  
  417b6b:	repz dec ebx
  417b6d:	add    ecx,edx
  417b6f:	fdiv   DWORD PTR [eax-0x4b]
  417b72:	fnsave [edi-0x9812f1a]
  417b78:	dec    esi
  417b79:	cmp    al,0x38
  417b7b:	popf   
  417b7c:	mov    dh,0x8f
  417b7e:	(bad)  
  417b7f:	gs inc edi
  417b81:	idiv   DWORD PTR [esi+edx*2-0x4c86603]
  417b88:	int3   
  417b89:	push   cs
  417b8a:	push   ds
  417b8b:	or     bl,al
  417b8d:	daa    
  417b8e:	ror    DWORD PTR [edx-0xa6d3c78],0x4c
  417b95:	mov    al,ds:0xd3ea68f8
  417b9a:	adc    al,0xa1
  417b9c:	mov    ds,WORD PTR [esi-0x5bb2571e]
  417ba2:	fsubr  DWORD PTR [edx+edi*4]
  417ba5:	pusha  
  417ba6:	dec    ebx
  417ba7:	sub    ecx,DWORD PTR [edx+0x2e]
  417baa:	aam    0xc8
  417bac:	push   edx
  417bad:	push   ebx
  417bae:	imul   ecx
  417bb0:	fs dec ebp
  417bb2:	cmp    al,0xc2
  417bb4:	xor    DWORD PTR [ebx],esi
  417bb6:	aam    0x1e
  417bb8:	cmp    al,0x82
  417bba:	mov    es,ebx
  417bbc:	sahf   
  417bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bbe:	cli    
  417bbf:	push   edx
  417bc0:	ja     0x417b4b
  417bc2:	jmp    0x218ca3de
  417bc7:	out    0xc8,al
  417bc9:	lahf   
  417bca:	test   eax,0x4a06c339
  417bcf:	xchg   BYTE PTR [ebp+0x4e],al
  417bd2:	pop    es
  417bd3:	inc    esi
  417bd4:	sub    ch,BYTE PTR [edi+0x69e94bcd]
  417bda:	(bad)  
  417bdc:	sub    ebx,DWORD PTR [edi-0x7afeb0af]
  417be2:	push   ds
  417be3:	mov    al,ds:0xcf7d7dfc
  417be8:	ss popa 
  417bea:	in     eax,0x2a
  417bec:	fnsave [ecx+ecx*8]
  417bef:	enter  0x9d8f,0xb1
  417bf3:	loopne 0x417bc7
  417bf5:	stos   BYTE PTR es:[edi],al
  417bf6:	push   esi
  417bf7:	pop    ebp
  417bf8:	popf   
  417bf9:	cmc    
  417bfa:	pop    edx
  417bfb:	or     ah,BYTE PTR [edi]
  417bfd:	hlt    
  417bfe:	outs   dx,DWORD PTR ds:[esi]
  417bff:	push   edi
  417c00:	clc    
  417c01:	sbb    eax,0x40986b20
  417c06:	jne    0x417be8
  417c08:	xchg   esi,eax
  417c09:	jmp    0x417c48
  417c0b:	mov    esi,cs
  417c0d:	cmp    BYTE PTR [esi-0x2f],ah
  417c10:	fld    TBYTE PTR [ebx+0x37]
  417c13:	mul    DWORD PTR [ebx-0x73]
  417c16:	inc    DWORD PTR [ebp+0x46d45f6c]
  417c1c:	fdiv   st,st(3)
  417c1e:	retf   0x5298
  417c21:	jne    0x417c86
  417c23:	jg     0x417c96
  417c25:	inc    esi
  417c26:	and    eax,0xb4eede6f
  417c2b:	and    al,0x19
  417c2d:	ret    0xca6a
  417c30:	cld    
  417c31:	in     eax,dx
  417c32:	add    dh,BYTE PTR [edx]
  417c34:	pop    edx
  417c35:	sbb    BYTE PTR [esi+0x30],dl
  417c38:	loopne 0x417be3
  417c3a:	jecxz  0x417cb7
  417c3c:	pop    ecx
  417c3d:	jg     0x417c94
  417c3f:	out    dx,al
  417c40:	retf   0x17d
  417c43:	sub    esp,DWORD PTR [edi]
  417c45:	mov    ebp,0xa11b9852
  417c4a:	(bad)  
  417c4b:	daa    
  417c4c:	and    DWORD PTR [ebp+0xd1b6f12],ebp
  417c52:	adc    BYTE PTR [ebx+0x47],dh
  417c55:	mov    ch,0x7e
  417c57:	mov    bl,0x5f
  417c59:	sar    ecx,cl
  417c5b:	push   0xacf1ee85
  417c60:	mov    eax,0xa7dcc72
  417c65:	jg     0x417cd7
  417c67:	lds    edi,FWORD PTR [ebx+0x7b]
  417c6a:	rcl    BYTE PTR [edx+0x5c],0xf9
  417c6e:	xchg   edi,eax
  417c6f:	(bad)  [ebx-0x6]
  417c72:	ror    DWORD PTR [edx-0x7f],1
  417c75:	(bad)  
  417c76:	fcomip st,st(5)
  417c78:	dec    eax
  417c79:	mov    dh,0xed
  417c7b:	and    BYTE PTR [ecx],dl
  417c7d:	sti    
  417c7e:	retf   0xa009
  417c81:	loop   0x417c4d
  417c83:	cmp    eax,DWORD PTR [edi+0x1a]
  417c86:	lea    ecx,[eax-0x26]
  417c89:	test   al,0xad
  417c8b:	sbb    ebp,eax
  417c8d:	or     BYTE PTR [edi+0x53],al
  417c90:	imul   esp,DWORD PTR ds:[esi-0x231b9999],0x8dd5f29b
  417c9b:	dec    edx
  417c9c:	and    DWORD PTR [eax],esi
  417c9e:	mov    eax,0xe563039b
  417ca3:	pop    ebp
  417ca4:	jne    0x417cb8
  417ca6:	hlt    
  417ca7:	xor    bl,BYTE PTR [ebp-0x69ea29dd]
  417cad:	jle    0x417c84
  417caf:	and    al,0xb1
  417cb1:	pop    ss
  417cb2:	stos   BYTE PTR es:[edi],al
  417cb3:	xor    edi,DWORD PTR ds:[edx]
  417cb6:	out    0x15,al
  417cb8:	rcr    esi,0x33
  417cbb:	xchg   ebp,eax
  417cbc:	loope  0x417d23
  417cbe:	cdq    
  417cbf:	(bad)  
  417cc0:	sbb    dl,BYTE PTR [ebx-0x49]
  417cc3:	sbb    dh,BYTE PTR [eax+0x2158f893]
  417cc9:	ret    
  417cca:	mov    BYTE PTR [ebp-0x2313d280],ch
  417cd0:	ins    DWORD PTR es:[edi],dx
  417cd1:	cmp    al,0xb1
  417cd3:	scas   al,BYTE PTR es:[edi]
  417cd4:	inc    edx
  417cd5:	shr    BYTE PTR [eax+0x48b5ae74],cl
  417cdb:	fimul  WORD PTR [edi+0x43207aec]
  417ce1:	aam    0x12
  417ce3:	mov    edi,0x4f38ae68
  417ce8:	mov    bl,0xf0
  417cea:	push   ecx
  417ceb:	aas    
  417cec:	out    0x43,eax
  417cee:	popa   
  417cef:	push   0xa2c8a604
  417cf4:	data16 fucom st(0)
  417cf7:	jmp    0x417cd3
  417cf9:	jo     0x417d77
  417cfb:	repz pusha 
  417cfd:	mov    fs,WORD PTR [ecx]
  417cff:	and    edx,DWORD PTR [edx-0x72263c2a]
  417d05:	mov    dh,BYTE PTR [ebx+0x3ce2791f]
  417d0b:	cmp    ebx,DWORD PTR [esi+0x48]
  417d0e:	add    DWORD PTR [ebp+0x16],eax
  417d11:	mov    edi,0x27b70233
  417d16:	and    BYTE PTR [esi-0x2fc5041a],al
  417d1c:	jg     0x417d4a
  417d1e:	repz or DWORD PTR [edx+0x60],esp
  417d22:	std    
  417d23:	push   es
  417d24:	lahf   
  417d25:	xor    DWORD PTR [eax+eax*4],eax
  417d28:	pop    ebp
  417d29:	jbe    0x417ced
  417d2b:	out    dx,al
  417d2c:	loope  0x417d28
  417d2e:	jae    0x417cc0
  417d30:	jge    0x417d02
  417d32:	xchg   BYTE PTR [esi+0x3798fcf5],ch
  417d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d39:	cli    
  417d3a:	daa    
  417d3b:	dec    edx
  417d3c:	pushf  
  417d3d:	inc    edi
  417d3e:	loope  0x417d64
  417d40:	stc    
  417d41:	fisub  DWORD PTR [ecx+0x7c]
  417d44:	out    dx,eax
  417d45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d46:	mov    eax,0x9d0d15ff
  417d4b:	mov    ebx,0xa8346e8c
  417d50:	retf   0x7048
  417d53:	sub    ebp,eax
  417d55:	push   edi
  417d56:	adc    BYTE PTR [edx+eax*8-0x3023b85e],ah
  417d5d:	pop    es
  417d5e:	repz adc DWORD PTR [ebx+0x43],ebp
  417d62:	mov    edi,0xcff0e207
  417d67:	jle    0x417dca
  417d69:	int    0x4e
  417d6b:	jb     0x417dad
  417d6d:	mov    ebx,0xb700f4a6
  417d72:	mov    edi,0x56d60551
  417d77:	adc    al,0xb3
  417d79:	jo     0x417d8d
  417d7b:	dec    edx
  417d7c:	test   al,0xa2
  417d7e:	das    
  417d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d80:	mov    ah,0xa1
  417d82:	dec    eax
  417d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d84:	in     eax,0x86
  417d86:	scas   al,BYTE PTR es:[edi]
  417d87:	push   ds
  417d88:	mov    al,0x78
  417d8a:	jg     0x417d95
  417d8c:	jnp    0x417d5e
  417d8e:	xor    al,0x78
  417d90:	mov    bl,0xd8
  417d92:	add    eax,0xe5e831f5
  417d97:	ret    0xff70
  417d9a:	sub    DWORD PTR [esi+0x6795e519],edx
  417da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417da1:	imul   esp,esp,0x7c
  417da4:	sbb    DWORD PTR [eax+eax*1-0x3e],ebp
  417da8:	outs   dx,DWORD PTR ds:[esi]
  417da9:	retf   0x6807
  417dac:	nop
  417dad:	jg     0x417dc4
  417daf:	pop    esi
  417db0:	xor    DWORD PTR [edx-0x5d547ee6],0x271b65a8
  417dba:	mov    ebx,0xec861394
  417dbf:	mov    ch,0x91
  417dc1:	xchg   DWORD PTR [ebx],ebp
  417dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dc4:	loopne 0x417e1b
  417dc6:	leave  
  417dc7:	(bad)  
  417dc8:	and    DWORD PTR [edi],esi
  417dca:	out    0x98,al
  417dcc:	fwait
  417dcd:	add    eax,0x370836fa
  417dd2:	mov    esp,0x7efd39e1
  417dd7:	je     0x417de7
  417dd9:	mov    esi,0x1f313d99
  417dde:	cmp    DWORD PTR [edx],ebp
  417de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417de1:	cmp    cl,BYTE PTR [ebp+0x7b]
  417de4:	jo     0x417dfa
  417de6:	adc    al,0x5e
  417de8:	pop    es
  417de9:	push   edi
  417dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417deb:	cmp    al,0xac
  417ded:	dec    eax
  417dee:	dec    esp
  417def:	enter  0x799d,0xa6
  417df3:	cs pushf 
  417df5:	out    dx,eax
  417df6:	cmp    al,0x68
  417df8:	mov    ebx,0x1b12549b
  417dfd:	dec    ebx
  417dfe:	(bad)  
  417dff:	pop    esi
  417e00:	arpl   WORD PTR [edi-0x6b833a9e],dx
  417e06:	in     eax,0x5
  417e08:	les    ebp,FWORD PTR [ebp-0x41ef9a8e]
  417e0e:	idiv   BYTE PTR [edx]
  417e10:	mov    cl,0xce
  417e12:	popa   
  417e13:	dec    esi
  417e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e15:	out    dx,eax
  417e16:	rcr    edi,0x7c
  417e19:	xchg   edi,eax
  417e1a:	add    BYTE PTR [edi],dh
  417e1c:	jne    0x417e6a
  417e1e:	cmc    
  417e1f:	mov    ds:0x1856101f,eax
  417e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e25:	dec    ebp
  417e26:	jnp    0x417e06
  417e28:	imul   edx,DWORD PTR [ebx-0x3f],0x94c30350
  417e2f:	dec    ebp
  417e30:	dec    ebp
  417e31:	shl    bh,cl
  417e33:	loopne 0x417e3e
  417e35:	cmp    bl,BYTE PTR [eax-0x73a4924]
  417e3b:	ror    DWORD PTR [esi],cl
  417e3d:	mov    ecx,0xbfc80afc
  417e42:	mov    ds:0x363ec389,eax
  417e47:	sub    al,0xf5
  417e49:	jecxz  0x417e2d
  417e4b:	mov    ds:0x88a5e927,al
  417e50:	push   0xf061872e
  417e55:	ret    
  417e56:	lahf   
  417e57:	out    dx,al
  417e58:	rol    DWORD PTR [edi+0x274eff9c],0xa4
  417e5f:	push   es
  417e60:	push   esi
  417e61:	ret    0x8f16
  417e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e65:	push   ss
  417e66:	sub    al,0x7a
  417e68:	mov    al,ds:0x3ad9adfa
  417e6d:	hlt    
  417e6e:	xchg   DWORD PTR [eax],edi
  417e70:	and    BYTE PTR [edi-0x5639e120],ah
  417e76:	(bad)  [esi]
  417e78:	dec    ebx
  417e79:	xor    dl,BYTE PTR [eax-0x41]
  417e7c:	mov    ebp,0xf40ee966
  417e81:	mov    BYTE PTR [ebp-0x403a7082],ah
  417e87:	inc    edx
  417e88:	movsx  ebx,WORD PTR [eax]
  417e8b:	call   0xe3b6:0x2b9b7450
  417e92:	fwait
  417e93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e94:	data16 (bad) 
  417e96:	or     al,bl
  417e98:	jge    0x417e33
  417e9a:	and    edi,esi
  417e9c:	in     al,0x1a
  417e9e:	adc    ch,BYTE PTR [ecx-0x4f]
  417ea1:	and    ebx,ebx
  417ea3:	push   ds
  417ea4:	fidiv  WORD PTR [eax+0x3f2fce5d]
  417eaa:	push   ecx
  417eab:	aas    
  417eac:	test   eax,0xa10c55ac
  417eb1:	push   0xffffff90
  417eb3:	fcmovb st,st(5)
  417eb5:	dec    esp
  417eb6:	test   BYTE PTR [esp+esi*1],bh
  417eb9:	push   ds
  417eba:	popf   
  417ebb:	aad    0x27
  417ebd:	in     eax,dx
  417ebe:	push   ebp
  417ebf:	pop    eax
  417ec0:	loop   0x417f34
  417ec2:	cwde   
  417ec3:	or     dl,bl
  417ec5:	xchg   edi,eax
  417ec6:	jno    0x417e76
  417ec8:	inc    ecx
  417ec9:	mov    BYTE PTR [edi],dl
  417ecb:	or     esp,esi
  417ecd:	pusha  
  417ece:	sub    BYTE PTR [eax],al
  417ed0:	xchg   esi,eax
  417ed1:	or     eax,0xc8458979
  417ed6:	mov    bh,0xdc
  417ed8:	pop    ss
  417ed9:	mov    al,ah
  417edb:	jb     0x417f4a
  417edd:	lea    ecx,[ebx]
  417edf:	xchg   ecx,eax
  417ee0:	add    esi,edi
  417ee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ee3:	ja     0x417ee6
  417ee5:	cmc    
  417ee6:	fisubr DWORD PTR ds:0xbdeb824f
  417eec:	rcl    DWORD PTR [esi+eiz*2+0x7c],1
  417ef0:	mov    ecx,0x9398315b
  417ef5:	push   0xe71f282b
  417efa:	jae    0x417efa
  417efc:	jmp    0x1c8a:0x9c5d3b51
  417f03:	sub    al,0x9f
  417f05:	(bad)  
  417f07:	aaa    
  417f08:	cmc    
  417f09:	test   DWORD PTR [esi-0x1711ab6b],ebx
  417f0f:	and    eax,ebx
  417f11:	dec    ecx
  417f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f13:	out    dx,al
  417f14:	pop    edx
  417f15:	in     eax,dx
  417f16:	dec    ecx
  417f17:	test   eax,0xdc39248
  417f1c:	cs int 0xd6
  417f1f:	and    dh,ah
  417f21:	sbb    edi,ecx
  417f23:	popa   
  417f24:	out    dx,al
  417f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f26:	ins    BYTE PTR es:[edi],dx
  417f27:	clc    
  417f28:	fwait
  417f29:	lods   eax,DWORD PTR ds:[esi]
  417f2a:	lods   eax,DWORD PTR ds:[esi]
  417f2b:	pop    ax
  417f2d:	fwait
  417f2e:	jecxz  0x417ed3
  417f30:	cmp    al,BYTE PTR [ebp-0x5a]
  417f33:	fistp  QWORD PTR [edx]
  417f35:	arpl   WORD PTR [esi-0x55],sp
  417f38:	add    dh,ah
  417f3a:	sub    edx,0xffffffa1
  417f3d:	stos   BYTE PTR es:[edi],al
  417f3e:	sub    edx,DWORD PTR [eax-0x44]
  417f41:	push   ecx
  417f42:	jns    0x417ede
  417f44:	mov    ecx,0x3e0c96b
  417f49:	int    0xd9
  417f4b:	mov    bh,0xd2
  417f4d:	popf   
  417f4e:	(bad)  
  417f4f:	cmp    DWORD PTR [esp+ebx*4],esi
  417f52:	fimul  DWORD PTR [eax+0x57]
  417f55:	mov    esi,0x577deb2a
  417f5a:	inc    cl
  417f5c:	stos   BYTE PTR es:[edi],al
  417f5d:	pushf  
  417f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f5f:	jecxz  0x417fba
  417f61:	fld    DWORD PTR [edi]
  417f63:	aaa    
  417f64:	cmp    cl,cl
  417f66:	push   ds
  417f67:	pop    ebx
  417f68:	sti    
  417f69:	mov    al,ds:0x7beef753
  417f6e:	loop   0x417f0f
  417f70:	dec    ebx
  417f71:	jg     0x417f37
  417f73:	ins    DWORD PTR es:[edi],dx
  417f74:	jbe    0x417f3e
  417f76:	fld    DWORD PTR [ebx+0x65]
  417f79:	clc    
  417f7a:	mov    BYTE PTR [esi],0x7a
  417f7d:	and    ebp,DWORD PTR [esi+edi*2-0x25]
  417f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f82:	sahf   
  417f83:	xor    esi,esi
  417f85:	addr16 js 0x417f72
  417f88:	lock push eax
  417f8a:	sub    edi,DWORD PTR [esi]
  417f8c:	jp     0x417f6c
  417f8e:	dec    ecx
  417f8f:	cmp    edi,DWORD PTR [ebp+0x66b41ee2]
  417f95:	lock mov BYTE PTR [esi+0x37],bh
  417f99:	sbb    ebx,edi
  417f9b:	jmp    0x3f788a14
  417fa0:	add    eax,0x2395f0be
  417fa5:	das    
  417fa6:	add    BYTE PTR [edi],0xfa
  417fa9:	and    eax,0x54584360
  417fae:	mov    cl,0x44
  417fb0:	sub    ecx,DWORD PTR [edx]
  417fb2:	adc    BYTE PTR [ebx],al
  417fb4:	xchg   ecx,eax
  417fb5:	xlat   BYTE PTR ds:[ebx]
  417fb6:	pushf  
  417fb7:	sbb    edx,DWORD PTR [ebp-0x405a6402]
  417fbd:	nop
  417fbe:	xor    al,0xbd
  417fc0:	sbb    BYTE PTR [ebx+0x1c],ch
  417fc3:	or     DWORD PTR [edx],0xb3cde4b1
  417fc9:	sbb    DWORD PTR [ebx+0x2],ebp
  417fcc:	inc    edi
  417fcd:	aas    
  417fce:	outs   dx,BYTE PTR fs:[esi]
  417fd0:	pop    ebp
  417fd1:	mov    esp,0x77f884ef
  417fd6:	sbb    dh,BYTE PTR [edx+0x4]
  417fd9:	add    ah,BYTE PTR [edx+0x4afd5047]
  417fdf:	daa    
  417fe0:	xchg   edi,eax
  417fe1:	loope  0x417fbb
  417fe3:	mov    dh,0xf1
  417fe5:	imul   esp,eax,0xffffffd6
  417fe8:	sahf   
  417fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fea:	mov    ?,WORD PTR [edx-0x1c]
  417fed:	rcr    BYTE PTR [ebp+0x13a71d9f],cl
  417ff3:	ret    
  417ff4:	fild   DWORD PTR [eax]
  417ff6:	lods   al,BYTE PTR ds:[esi]
  417ff7:	mov    bh,0xdf
  417ff9:	sbb    eax,DWORD PTR [ecx+0x27af5e50]
  417fff:	test   DWORD PTR [ebx],esi
  418001:	jbe    0x41802b
  418003:	mov    cl,0xf8
  418005:	repz xor eax,0x8cb88458
  41800b:	sbb    BYTE PTR [edi+0x54],bh
  41800e:	sub    BYTE PTR [eax+0x253a41e5],ch
  418014:	das    
  418015:	mov    DWORD PTR [ebx+0x44],edi
  418018:	psllq  mm3,QWORD PTR [edi]
  41801b:	stos   DWORD PTR es:[edi],eax
  41801c:	xor    esp,DWORD PTR [ebx-0x61]
  41801f:	cli    
  418020:	xor    ebx,DWORD PTR [edi+0x474f4664]
  418026:	cmp    al,0x5d
  418028:	aaa    
  418029:	ret    
  41802a:	adc    BYTE PTR fs:[esi-0x604dbfba],cl
  418031:	mov    BYTE PTR [ecx+0x4d139923],bh
  418037:	mov    ch,BYTE PTR [ebx+0x21ab5da8]
  41803d:	pop    es
  41803e:	in     al,0x2
  418040:	jb     0x4180b7
  418042:	js     0x41806c
  418044:	add    eax,0xa5eeab44
  418049:	test   al,0xb2
  41804b:	jp     0x41808e
  41804d:	bound  eax,QWORD PTR [ecx+0x39]
  418050:	xor    al,0x93
  418052:	aas    
  418053:	pop    ecx
  418054:	cmp    BYTE PTR [ecx+0xfa72d19],0x88
  41805b:	mov    esp,0x2f3e511e
  418060:	inc    ebp
  418061:	scas   al,BYTE PTR es:[edi]
  418062:	dec    esi
  418063:	mov    edi,0x6455fa7d
  418068:	stos   BYTE PTR es:[edi],al
  418069:	data16 xor al,0x7b
  41806c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41806d:	inc    ebp
  41806e:	or     ebp,DWORD PTR [ecx-0x71e07a5]
  418074:	or     edi,ebx
  418076:	neg    DWORD PTR [edx-0xb]
  418079:	mov    ds:0x6a960f11,eax
  41807e:	mov    ch,0xad
  418080:	ds out dx,eax
  418082:	cmp    BYTE PTR [esi-0x14],0x68
  418086:	sbb    al,0xcb
  418088:	cmp    cl,ch
  41808a:	rol    BYTE PTR [eax-0xb9e14f0],1
  418090:	test   ah,ch
  418092:	dec    ebx
  418093:	aas    
  418094:	dec    edx
  418095:	pop    ss
  418096:	cmp    al,0x3a
  418098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418099:	cmp    dl,BYTE PTR [esi]
  41809b:	inc    esi
  41809c:	sub    al,0xf4
  41809e:	push   esp
  41809f:	lds    edx,FWORD PTR [ebp+0x342eab73]
  4180a5:	and    eax,0x263bc57b
  4180aa:	mov    BYTE PTR [ecx],bh
  4180ac:	jle    0x727eefb0
  4180b2:	pop    ebx
  4180b3:	test   al,0xe9
  4180b5:	push   cs
  4180b6:	addr16 xchg esp,eax
  4180b8:	mov    ds:0x7f678739,al
  4180bd:	iret   
  4180be:	in     eax,dx
  4180bf:	in     al,dx
  4180c0:	or     eax,0xc7977d05
  4180c5:	adc    al,BYTE PTR [edx-0xe]
  4180c8:	push   eax
  4180c9:	or     DWORD PTR [ecx+eiz*4-0x2c],esp
  4180cd:	ret    0xaba8
  4180d0:	dec    esi
  4180d1:	push   esp
  4180d2:	ins    BYTE PTR es:[edi],dx
  4180d3:	xor    eax,0xea63f3d
  4180d8:	push   ds
  4180d9:	call   0xfc4f8d4d
  4180de:	into   
  4180df:	jp     0x4180cb
  4180e1:	cmc    
  4180e2:	in     al,0x94
  4180e4:	add    BYTE PTR [edx+esi*4+0x679fa7ee],0x4a
  4180ec:	push   eax
  4180ed:	sub    BYTE PTR [esi],dh
  4180ef:	and    eax,DWORD PTR [ebx+eiz*1+0x62f86a97]
  4180f6:	dec    edi
  4180f7:	cmp    ecx,ecx
  4180f9:	shl    DWORD PTR [edi+0x679ed45d],0x98
  418100:	or     al,0xcc
  418102:	mov    ebx,0xc672f266
  418107:	ja     0x4180a4
  418109:	mov    WORD PTR [edi],es
  41810b:	fmul   st,st(2)
  41810d:	push   edx
  41810e:	mov    WORD PTR ds:0xb4d46b4e,es
  418114:	aad    0x30
  418116:	xor    eax,DWORD PTR [ebx+ebp*1-0x16]
  41811a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41811b:	cmp    edi,DWORD PTR [eax+0x32]
  41811e:	repnz aad 0xfb
  418121:	jno    0x418107
  418123:	xchg   DWORD PTR [ecx+0x6],edx
  418126:	maxps  xmm3,XMMWORD PTR [ebp+0x19ecc2fb]
  41812d:	dec    esi
  41812e:	sub    al,0xce
  418130:	mov    WORD PTR [edi-0x6a],gs
  418133:	into   
  418134:	mov    al,ds:0x1773d018
  418139:	shl    BYTE PTR [edx+0x46816092],0xd5
  418140:	jbe    0x4181b1
  418142:	(bad)  
  418145:	xor    ecx,DWORD PTR [ebp+0x29]
  418148:	ret    0xf338
  41814b:	push   ebx
  41814c:	test   eax,0xb5ba49c9
  418151:	jb     0x4181d0
  418153:	std    
  418154:	retf   
  418155:	repz sub esp,DWORD PTR [eax+0x5c]
  418159:	loope  0x4181d7
  41815b:	push   cs
  41815c:	or     eax,0x10d576a3
  418161:	popf   
  418162:	sbb    esp,DWORD PTR [esi+esi*2+0x143ea460]
  418169:	push   es
  41816a:	aam    0x5f
  41816c:	push   esp
  41816d:	das    
  41816e:	pushf  
  41816f:	std    
  418170:	test   BYTE PTR [ebx-0x2c],ch
  418173:	(bad)  
  418174:	cmp    al,0x73
  418176:	push   esp
  418177:	sbb    dl,BYTE PTR [ecx-0x3296825]
  41817d:	pop    ecx
  41817e:	mov    esi,0x276d5596
  418183:	in     al,dx
  418184:	lods   al,BYTE PTR ds:[esi]
  418185:	daa    
  418186:	ret    
  418187:	jo     0x418175
  418189:	jecxz  0x418175
  41818b:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41818d:	dec    esi
  41818e:	loope  0x418137
  418190:	mov    ds:0x2561caa,eax
  418195:	aad    0x29
  418197:	and    al,0x7b
  418199:	mov    ds:0xa45fe18d,al
  41819e:	in     al,dx
  41819f:	adc    DWORD PTR [edx-0x60],edi
  4181a2:	mov    dl,BYTE PTR [ecx]
  4181a4:	or     al,0x9f
  4181a6:	outs   dx,BYTE PTR ds:[esi]
  4181a7:	das    
  4181a8:	lea    esi,[edx]
  4181aa:	stos   DWORD PTR es:[edi],eax
  4181ab:	adc    eax,0x961d5e6c
  4181b0:	pop    ebp
  4181b1:	sbb    al,0xd5
  4181b3:	stos   DWORD PTR es:[edi],eax
  4181b4:	dec    edx
  4181b5:	dec    esp
  4181b6:	push   eax
  4181b7:	ins    DWORD PTR es:[edi],dx
  4181b8:	cmp    eax,0x2d3a664d
  4181bd:	call   0x3000:0x8a791c82
  4181c4:	cld    
  4181c5:	das    
  4181c6:	(bad)  
  4181c7:	adc    dl,bh
  4181c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181ca:	adc    al,BYTE PTR [eax]
  4181cc:	xor    eax,0x77651a86
  4181d1:	test   DWORD PTR [ebp-0x71b15ad7],ecx
  4181d7:	rcl    DWORD PTR [ebp+0x49],cl
  4181da:	nop
  4181db:	xlat   BYTE PTR ds:[ebx]
  4181dc:	mov    es,WORD PTR [edi]
  4181de:	jno    0x41821d
  4181e0:	icebp  
  4181e1:	rcl    DWORD PTR [ebx+0x7e],0x4c
  4181e5:	jecxz  0x418183
  4181e7:	inc    ecx
  4181e8:	hlt    
  4181e9:	rcl    BYTE PTR [ebx+ebx*2],1
  4181ec:	shl    BYTE PTR [eax+0xf6bce5f],1
  4181f2:	nop
  4181f3:	pop    esi
  4181f4:	cmp    eax,0x8d296db5
  4181f9:	inc    edi
  4181fa:	sbb    eax,DWORD PTR [eax+edx*4+0x7e07beb7]
  418201:	popa   
  418202:	loopne 0x418281
  418204:	mov    ebp,0xac59f2ff
  418209:	cmp    esp,DWORD PTR [ebp-0x7]
  41820c:	pop    esp
  41820d:	dec    esi
  41820e:	int3   
  41820f:	add    eax,0x19c909fb
  418214:	test   DWORD PTR [esi+ecx*2+0x59],0x7075b8ba
  41821c:	fbld   TBYTE PTR [esi+0x4a3207ce]
  418222:	in     eax,dx
  418223:	dec    ecx
  418224:	xor    bl,BYTE PTR [eax-0x5e]
  418227:	call   0xc0bf:0x5cf25495
  41822e:	jno    0x41829f
  418230:	std    
  418231:	daa    
  418232:	imul   ebp,DWORD PTR [edi],0xb
  418235:	pushf  
  418236:	pop    ds
  418237:	cmc    
  418238:	(bad)  
  418239:	pop    esi
  41823a:	cmp    al,0x1d
  41823c:	pop    ss
  41823d:	popf   
  41823e:	sbb    al,0x9e
  418240:	mov    cl,0x8
  418242:	scas   al,BYTE PTR es:[edi]
  418243:	push   edx
  418244:	mov    esp,0xf3c5018
  418249:	stc    
  41824a:	jp     0x41823f
  41824c:	pop    ds
  41824d:	(bad)  [edx-0x28bc2f8d]
  418253:	cdq    
  418254:	or     BYTE PTR [edx-0x2dd946b9],bl
  41825a:	pop    esi
  41825b:	loope  0x41825c
  41825d:	mov    esi,0x312884d9
  418262:	jno    0x4182b6
  418264:	pop    esi
  418265:	mov    ecx,0x32cc7361
  41826a:	adc    edi,edi
  41826c:	inc    ecx
  41826d:	outs   dx,DWORD PTR ds:[esi]
  41826e:	cmc    
  41826f:	xor    BYTE PTR [eax-0x24638904],dh
  418275:	cwde   
  418276:	ins    DWORD PTR es:[edi],dx
  418277:	dec    ecx
  418278:	mov    eax,ds:0xbcd0d843
  41827d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41827e:	mov    eax,0x838bdd4d
  418283:	xchg   ebx,eax
  418284:	jge    0x4182fb
  418286:	sub    ebx,DWORD PTR [ebx+0xe]
  418289:	jge    0x4182de
  41828b:	lods   eax,DWORD PTR ds:[esi]
  41828c:	imul   ebx,DWORD PTR [edx+0x19],0xffffff82
  418290:	mov    ebx,?
  418292:	xchg   esi,eax
  418293:	inc    ecx
  418294:	cld    
  418295:	mov    ebx,0xf2113af8
  41829a:	dec    esi
  41829b:	dec    eax
  41829c:	xor    BYTE PTR ds:[edx+eax*1],dh
  4182a0:	aaa    
  4182a1:	out    dx,al
  4182a2:	pop    edx
  4182a3:	sti    
  4182a4:	mov    edx,0x6f7776fd
  4182a9:	call   0x3a80:0xfb86d610
  4182b0:	sub    DWORD PTR [ecx+0x7c],ebp
  4182b3:	in     al,0x22
  4182b5:	dec    edi
  4182b6:	pushf  
  4182b7:	(bad)  
  4182b8:	adc    ah,BYTE PTR [edx+0x2f]
  4182bb:	add    eax,0xfccfa248
  4182c0:	mov    al,ds:0x2804a46f
  4182c5:	loopne 0x4182f2
  4182c7:	and    esi,DWORD PTR [ecx-0x74]
  4182ca:	mov    ah,0xd6
  4182cc:	in     eax,0x92
  4182ce:	sub    eax,0xd6de22ae
  4182d3:	dec    edi
  4182d4:	daa    
  4182d5:	out    dx,al
  4182d6:	(bad)  
  4182d7:	in     al,dx
  4182d8:	mov    ebp,0xdf22bfe9
  4182dd:	ds int3 
  4182df:	xchg   esp,eax
  4182e0:	ja     0x41832f
  4182e2:	xor    eax,0xf2c91272
  4182e7:	push   0xbca1cf18
  4182ec:	adc    edi,DWORD PTR ds:0xcd63cdd1
  4182f2:	ds jge 0x418295
  4182f5:	mov    BYTE PTR [esi+0x14],dl
  4182f8:	jg     0x41836d
  4182fa:	lock pop edx
  4182fc:	pop    ecx
  4182fd:	xchg   esi,eax
  4182fe:	push   edi
  4182ff:	xor    DWORD PTR [ebx-0x2f1c6ad4],edx
  418305:	popf   
  418306:	loopne 0x4182f0
  418308:	xchg   edi,eax
  418309:	or     DWORD PTR [esp+eiz*2-0x4412af4f],edi
  418310:	inc    ebx
  418311:	ds xchg edi,eax
  418313:	cli    
  418314:	push   es
  418315:	jns    0x4182c0
  418317:	and    edx,edi
  418319:	repnz or DWORD PTR [edi+0x1353a4e9],esp
  418320:	loop   0x418327
  418322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418323:	adc    BYTE PTR [eax],bl
  418325:	push   edi
  418326:	in     eax,dx
  418327:	xchg   edx,eax
  418328:	jp     0x4182ec
  41832a:	mov    al,ds:0xf519beca
  41832f:	shl    DWORD PTR [ecx+0x1db676fb],cl
  418335:	cld    
  418336:	call   0x22271558
  41833b:	sbb    al,BYTE PTR [eax-0x5c]
  41833e:	pop    ebp
  41833f:	or     BYTE PTR [eax-0x7c],0xc
  418343:	mov    ecx,0xd4a448e7
  418348:	sub    bh,ch
  41834a:	xchg   DWORD PTR [ebx+0x6eaa32fa],ebx
  418350:	sub    DWORD PTR [eax],0xffffff82
  418353:	iret   
  418354:	test   DWORD PTR [edi+0x4e457ba6],ecx
  41835a:	mov    edx,0xc48fce65
  41835f:	dec    edx
  418360:	out    dx,al
  418361:	mov    DWORD PTR [edi-0x26],ecx
  418364:	mov    ebp,0x63e6cf7c
  418369:	and    al,0xe9
  41836b:	rcl    BYTE PTR [eax-0x48016b5],0x63
  418372:	mov    edi,DWORD PTR [esi]
  418374:	or     ch,BYTE PTR [ebp+0x19]
  418377:	adc    al,0x92
  418379:	mov    ecx,DWORD PTR [esi-0x6d]
  41837c:	mov    ebp,DWORD PTR [edx-0x4ccb15f5]
  418382:	jmp    0x41835c
  418384:	and    ch,BYTE PTR [ecx]
  418386:	in     al,0x9b
  418388:	aas    
  418389:	cwde   
  41838a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41838b:	aas    
  41838c:	stc    
  41838d:	dec    edi
  41838e:	jp     0x418404
  418390:	push   0x39
  418392:	inc    ebx
  418393:	add    cl,BYTE PTR [edi-0xc]
  418396:	mov    edi,0x387df74e
  41839b:	imul   edx,DWORD PTR [ebx-0x24544aef],0xfffffff3
  4183a2:	ret    
  4183a3:	mov    DWORD PTR [ebx+0x38],esp
  4183a6:	int    0xcd
  4183a8:	xchg   esp,eax
  4183aa:	adc    ecx,DWORD PTR [edx+0x7e]
  4183ad:	dec    esp
  4183ae:	cmp    edx,esp
  4183b0:	mov    ecx,0x66eaa995
  4183b5:	aaa    
  4183b6:	in     eax,dx
  4183b7:	xor    al,0x9c
  4183b9:	fsub   DWORD PTR [ecx]
  4183bb:	movlps QWORD PTR [ecx-0x6c132072],xmm3
  4183c2:	adc    DWORD PTR [esi+edi*1-0x53],ebx
  4183c6:	sub    ebp,DWORD PTR ds:0xa6658fdc
  4183cc:	xchg   esi,eax
  4183cd:	scas   al,BYTE PTR es:[edi]
  4183ce:	ss and al,0x73
  4183d1:	sbb    ecx,DWORD PTR [eax-0x32]
  4183d4:	rcl    DWORD PTR [ebp+0x60509289],0x7e
  4183db:	int3   
  4183dc:	mov    al,ds:0xbe4c01ed
  4183e1:	int    0x2a
  4183e3:	push   ecx
  4183e4:	jmp    FWORD PTR [eax+0x6e]
  4183e7:	or     eax,0x9b8d7ee0
  4183ec:	aaa    
  4183ed:	mov    esp,0xfc47bc61
  4183f2:	xor    ebx,DWORD PTR ds:0xdaaa6b83
  4183f8:	cmp    bh,cl
  4183fa:	arpl   WORD PTR [edx+edx*1],cx
  4183fd:	aas    
  4183fe:	int    0x5c
  418400:	or     eax,0x59b1b047
  418405:	jno    0x418419
  418407:	dec    esi
  418408:	sti    
  418409:	push   0xf9740ba3
  41840e:	je     0x4183aa
  418410:	jnp    0x4183dd
  418412:	(bad)  
  418413:	jl     0x4183af
  418415:	cli    
  418416:	cwde   
  418417:	jo     0x41842e
  418419:	rcl    cl,cl
  41841b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41841c:	push   eax
  41841d:	icebp  
  41841e:	(bad)  [ebp-0x4b8ad5e7]
  418424:	push   ebx
  418425:	xchg   ebp,eax
  418426:	push   0x4c
  418428:	cld    
  418429:	or     al,0x33
  41842b:	dec    edx
  41842c:	sbb    eax,0x52cf02ba
  418431:	sbb    al,0x10
  418433:	or     eax,0xace11bc9
  418438:	mov    DWORD PTR [edi-0x42],ecx
  41843b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41843c:	js     0x4184b7
  41843e:	push   ss
  41843f:	lahf   
  418440:	mov    ebx,0x724182c7
  418445:	mov    dh,0x93
  418447:	push   ebp
  418448:	test   DWORD PTR [eax+0x20893c08],0xcd072a6c
  418452:	out    dx,eax
  418453:	lods   eax,DWORD PTR ds:[esi]
  418454:	sbb    eax,0xfef13298
  418459:	push   ds
  41845a:	push   cs
  41845b:	xor    edi,DWORD PTR [ebx-0x2c]
  41845e:	xor    al,0xdc
  418460:	jmp    0xf079aa15
  418465:	pop    ebp
  418466:	push   ecx
  418467:	and    dh,BYTE PTR [esi+ebp*1]
  41846a:	(bad)  [edx+0x5f]
  41846d:	jge    0x418426
  41846f:	and    al,0x95
  418471:	mov    cl,0x89
  418473:	ror    BYTE PTR [edx+0x42],cl
  418476:	movups xmm3,XMMWORD PTR [edi+0x44180844]
  41847d:	and    bl,0x76
  418480:	jl     0x4184da
  418482:	loope  0x4184ef
  418484:	mov    ebp,0xc8de80e9
  418489:	push   ebx
  41848a:	cs xor al,dl
  41848d:	das    
  41848e:	lock jne 0x4184a7
  418491:	ins    DWORD PTR es:[edi],dx
  418492:	dec    ecx
  418493:	stc    
  418494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418495:	aaa    
  418496:	hlt    
  418497:	add    BYTE PTR [ebx],cl
  418499:	sbb    ch,BYTE PTR [eax-0x71]
  41849c:	int    0xd1
  41849e:	pop    DWORD PTR [ecx]
  4184a0:	popf   
  4184a1:	popa   
  4184a2:	mov    ch,0x7e
  4184a4:	mov    al,ds:0xeac7276e
  4184a9:	out    0xf0,al
  4184ab:	aad    0xbe
  4184ad:	sub    eax,0x48f750e8
  4184b2:	add    bl,BYTE PTR [ebp-0x37caeb74]
  4184b8:	lods   al,BYTE PTR ds:[esi]
  4184b9:	sub    edi,DWORD PTR [ecx+eiz*2+0x45]
  4184bd:	call   0x6d394d51
  4184c2:	mov    cl,0x23
  4184c4:	push   eax
  4184c5:	sub    BYTE PTR [edi-0x45da9811],bh
  4184cb:	xchg   ebp,eax
  4184cc:	xchg   esi,eax
  4184cd:	mov    ecx,0x439af529
  4184d2:	jns    0x4184e0
  4184d4:	in     al,dx
  4184d5:	sbb    al,0x82
  4184d7:	aaa    
  4184d8:	ror    WORD PTR [ebx+0x3ca846f2],0x4f
  4184e0:	push   esi
  4184e1:	inc    ebx
  4184e2:	dec    edx
  4184e3:	test   BYTE PTR [ecx-0x37a77abc],bl
  4184e9:	adc    dl,BYTE PTR [ebp-0x5612810f]
  4184ef:	inc    ecx
  4184f0:	int    0xe
  4184f2:	xor    BYTE PTR [esi-0x2e],dh
  4184f5:	rcl    BYTE PTR [edx],0x8c
  4184f8:	xor    edi,DWORD PTR [edx-0x5ece608]
  4184fe:	test   al,0xc3
  418500:	mov    eax,0xfe510785
  418505:	data16 fidivr WORD PTR [edi-0x77]
  418509:	dec    ebx
  41850a:	push   eax
  41850b:	mov    edi,0xce7d11d1
  418510:	(bad)  
  418511:	fsubr  DWORD PTR [ebx+0x4e3d05b1]
  418517:	xchg   BYTE PTR ds:0xd4b1acfb,ch
  41851d:	inc    edx
  41851e:	call   0x4de25857
  418523:	xor    ch,cl
  418525:	int    0x23
  418527:	shl    ebp,1
  418529:	lods   al,BYTE PTR ds:[esi]
  41852a:	and    BYTE PTR [eax],bh
  41852c:	jb     0x418557
  41852e:	sbb    eax,DWORD PTR [ebx-0x1afd746a]
  418534:	pop    ebx
  418535:	cmc    
  418536:	cli    
  418537:	pop    esp
  418538:	clc    
  418539:	in     eax,dx
  41853a:	xchg   DWORD PTR [edx-0x6b],esp
  41853d:	xchg   esp,eax
  41853e:	fiadd  DWORD PTR [eax]
  418540:	add    al,0xb9
  418542:	cmp    BYTE PTR [ebx+0x57a08329],cl
  418548:	pop    esp
  418549:	aas    
  41854a:	ds sti 
  41854c:	jne    0x4185ac
  41854e:	dec    ebx
  41854f:	leave  
  418550:	fwait
  418551:	xchg   ecx,eax
  418552:	mov    esp,0xf1b55930
  418557:	adc    cl,BYTE PTR [esi-0x4449cd60]
  41855d:	imul   esp,DWORD PTR ds:0x9d1cf30e,0xfffffff0
  418564:	int3   
  418565:	(bad)  
  418566:	arpl   ax,bp
  418568:	int3   
  418569:	pop    ss
  41856a:	aaa    
  41856b:	mov    ebx,0xc814d394
  418570:	cwde   
  418571:	cwde   
  418572:	or     eax,0x98abebfe
  418577:	ret    
  418578:	bound  eax,QWORD PTR [ebx+0x29]
  41857b:	fstp   st(5)
  41857d:	push   es
  41857e:	nop
  41857f:	shl    BYTE PTR es:[eax-0x5ff2cf47],0xbe
  418587:	dec    esi
  418588:	xchg   DWORD PTR [eax],eax
  41858a:	add    esi,ebp
  41858c:	fild   DWORD PTR [eax+0x1b]
  41858f:	mov    ebx,0x70d00304
  418594:	xchg   BYTE PTR [ecx-0x42],bl
  418597:	(bad)  
  418598:	mov    esp,0x2166e28
  41859d:	sbb    al,0x19
  41859f:	aaa    
  4185a0:	into   
  4185a1:	daa    
  4185a2:	adc    al,0xe3
  4185a4:	lea    edx,[esi]
  4185a6:	imul   edi,DWORD PTR [ebx],0x19
  4185a9:	push   es
  4185aa:	scas   al,BYTE PTR es:[edi]
  4185ab:	mov    esp,0x814b9ea9
  4185b0:	fdiv   st(4),st
  4185b2:	mov    ebx,0xacf57e0c
  4185b7:	xor    DWORD PTR [ecx+0x59461a39],edx
  4185bd:	xchg   ah,cl
  4185bf:	cwde   
  4185c0:	pop    es
  4185c1:	dec    edx
  4185c2:	add    bh,BYTE PTR [edi+0x2668675b]
  4185c8:	mov    eax,ds:0x40f000b3
  4185cd:	out    dx,al
  4185ce:	sar    DWORD PTR [edi+0x25],cl
  4185d1:	lds    eax,FWORD PTR [esi-0x21]
  4185d4:	adc    DWORD PTR [eax-0x7],0xfffffffc
  4185d8:	ds adc eax,0x29ff41b7
  4185de:	jo     0x418636
  4185e0:	fucomi st,st(1)
  4185e2:	add    ecx,DWORD PTR [edx+0x37]
  4185e5:	dec    BYTE PTR [ecx]
  4185e7:	pop    ss
  4185e8:	fsub   QWORD PTR [esi]
  4185ea:	sbb    eax,0x907f7eaa
  4185ef:	add    DWORD PTR [eax],ebp
  4185f1:	pusha  
  4185f2:	in     al,dx
  4185f3:	add    al,0x9e
  4185f5:	aas    
  4185f6:	push   esp
  4185f7:	scas   al,BYTE PTR es:[edi]
  4185f8:	and    eax,0x9a3c344d
  4185fd:	lods   al,BYTE PTR ds:[esi]
  4185fe:	xchg   ebx,eax
  4185ff:	ret    
  418600:	mov    cl,0x79
  418602:	xor    eax,DWORD PTR [edx+eiz*4]
  418605:	shr    DWORD PTR ds:0x4964d983,1
  41860b:	call   0x46de454b
  418610:	adc    BYTE PTR [edx+0x36f96ca1],dh
  418616:	pop    ss
  418617:	in     al,0x4f
  418619:	sbb    ch,dh
  41861b:	mov    ebp,0xb09cf57
  418620:	cwde   
  418621:	ins    BYTE PTR es:[edi],dx
  418622:	jecxz  0x41862a
  418624:	pop    es
  418625:	pushf  
  418626:	push   0xeb8483d9
  41862b:	push   es
  41862c:	(bad)
  41862f:	jecxz  0x418608
  418631:	dec    eax
  418632:	(bad)  [edx]
  418634:	mov    ds:0xd814f86d,eax
  418639:	adc    ebp,DWORD PTR [ebp+0x13]
  41863c:	mov    esp,edx
  41863e:	call   0xba31685
  418643:	call   0x9967:0xd338881d
  41864a:	clc    
  41864b:	mov    esi,0xc86dcf7b
  418650:	ss stos DWORD PTR es:[edi],eax
  418652:	std    
  418653:	test   eax,0xeb2c9b35
  418658:	shl    BYTE PTR [edi],1
  41865a:	neg    DWORD PTR [eax+ebx*4-0x62e0c99a]
  418661:	push   0xc1fe7300
  418666:	cmp    ebx,DWORD PTR [esi]
  418668:	jns    0x4186be
  41866a:	pop    ds
  41866b:	out    0x18,al
  41866d:	jmp    0xbc8a9f24
  418672:	mov    BYTE PTR [esi+0x3fa81466],0xe1
  418679:	jle    0x41860f
  41867b:	fmul   st,st(7)
  41867d:	stc    
  41867e:	mov    ecx,0x8cb598ad
  418683:	mov    ch,0x1d
  418685:	sub    BYTE PTR [ebx-0x1ac289c5],cl
  41868b:	bound  eax,QWORD PTR [ebx]
  41868d:	cmp    eax,0xb09abfc8
  418692:	push   ss
  418693:	push   esp
  418694:	sbb    BYTE PTR [edi],ah
  418696:	jns    0x418644
  418698:	dec    esi
  418699:	dec    ebp
  41869a:	jecxz  0x4186ff
  41869c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41869d:	enter  0x537e,0x12
  4186a1:	aad    0xb6
  4186a3:	jecxz  0x418627
  4186a5:	pop    eax
  4186a6:	xchg   edx,eax
  4186a7:	imul   DWORD PTR [ecx-0x4dea3497]
  4186ad:	or     eax,0xff825daa
  4186b2:	xor    dh,BYTE PTR [edi-0x5463f9fb]
  4186b8:	(bad)  [esi]
  4186ba:	xor    al,0xcb
  4186bc:	aas    
  4186bd:	lods   eax,DWORD PTR ds:[esi]
  4186be:	xchg   BYTE PTR [ebp+0x51],bl
  4186c1:	add    BYTE PTR [ebx+0x4d63f49c],0xc6
  4186c8:	repnz mov WORD PTR [ebx+eax*2-0x1397f3d8],gs
  4186d0:	add    eax,0x96880b98
  4186d5:	jle    0x418707
  4186d7:	adc    BYTE PTR [eax-0x6f],0x8b
  4186db:	inc    ebx
  4186dc:	pop    esi
  4186dd:	std    
  4186de:	(bad)  
  4186df:	sti    
  4186e0:	fadd   DWORD PTR [edx]
  4186e2:	loopne 0x418687
  4186e4:	ret    
  4186e5:	retw   0xc46d
  4186e9:	inc    ecx
  4186ea:	pop    es
  4186eb:	cld    
  4186ec:	pop    eax
  4186ed:	xchg   ebp,eax
  4186ee:	outs   dx,DWORD PTR ds:[esi]
  4186ef:	mov    ebp,ecx
  4186f1:	xchg   esp,eax
  4186f2:	push   ebp
  4186f3:	popf   
  4186f4:	push   eax
  4186f5:	cdq    
  4186f6:	fcmovne st,st(0)
  4186f8:	stos   BYTE PTR es:[edi],al
  4186f9:	sbb    ebx,DWORD PTR [esi]
  4186fb:	and    al,0x5b
  4186fd:	(bad)  
  4186fe:	fwait
  4186ff:	adc    al,0xf5
  418701:	jp     0x4186c8
  418703:	xchg   DWORD PTR [eax-0x591f2ed5],edi
  418709:	nop
  41870a:	shl    BYTE PTR [ecx+esi*4-0x7603446b],1
  418711:	cmp    DWORD PTR [ebx],esi
  418713:	in     eax,0xea
  418715:	mov    cl,BYTE PTR [ebp+0x5dbb9827]
  41871b:	add    DWORD PTR [ecx+ebx*2+0x28],ecx
  41871f:	sub    eax,0x7ad945d9
  418724:	mov    edx,DWORD PTR [ebx+eiz*1-0x172be7ad]
  41872b:	sti    
  41872c:	cmp    ah,0xa2
  41872f:	sbb    BYTE PTR [ecx-0x4b98c984],cl
  418735:	shl    BYTE PTR [ecx+esi*4+0x6e],1
  418739:	jmp    0xfde29ed0
  41873e:	pusha  
  41873f:	repz cmp al,0x14
  418742:	call   0xa2215560
  418747:	and    al,0x1
  418749:	push   es
  41874a:	add    DWORD PTR [eax],edi
  41874c:	mov    eax,0xf870f7fe
  418751:	cld    
  418752:	mov    eax,0x532d7dba
  418757:	xchg   esi,eax
  418758:	push   es
  418759:	adc    al,0xb7
  41875b:	lods   al,BYTE PTR ds:[esi]
  41875c:	xlat   BYTE PTR ds:[ebx]
  41875d:	mov    ecx,0x8d249050
  418762:	jl     0x418793
  418764:	sub    BYTE PTR [ecx-0x6d],cl
  418767:	push   ss
  418768:	ds jmp 0x41878e
  41876b:	repnz push esi
  41876d:	test   BYTE PTR [edx-0x7b7f2c6],al
  418773:	inc    esi
  418774:	outs   dx,DWORD PTR ds:[esi]
  418775:	int    0x45
  418777:	cwde   
  418778:	dec    edi
  418779:	mov    edx,0x2716fce9
  41877e:	inc    ebp
  41877f:	cmp    al,BYTE PTR [edi-0x5c]
  418782:	push   cs
  418783:	test   BYTE PTR [edx-0x3e],0xe
  418787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418788:	imul   esi,DWORD PTR [eax+0x772af940],0xffffffa4
  41878f:	jle    0x4187e6
  418791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418792:	es es jmp 0x41872b
  418796:	add    DWORD PTR [edi],ebp
  418798:	push   cs
  418799:	xchg   esi,eax
  41879a:	push   ebp
  41879b:	jnp    0x418725
  41879d:	pop    es
  41879e:	and    eax,0x32529050
  4187a3:	pop    ss
  4187a4:	xor    eax,0xa03c5199
  4187a9:	out    dx,al
  4187aa:	cmp    BYTE PTR [eax],al
  4187ac:	frstor [eax+0x3184633e]
  4187b2:	leave  
  4187b3:	call   0xe5676cfb
  4187b8:	pop    ebp
  4187b9:	leave  
  4187ba:	mov    ecx,0xcc71a79b
  4187bf:	sub    eax,0x67f02b01
  4187c4:	shl    BYTE PTR [eax-0x477cb1f4],cl
  4187ca:	xchg   ebp,eax
  4187cb:	mov    ah,al
  4187cd:	pushf  
  4187ce:	fisub  WORD PTR [ebx-0x3c09ef7f]
  4187d4:	xor    ah,BYTE PTR [ecx+edi*1]
  4187d7:	inc    edi
  4187d8:	mov    dl,0x64
  4187da:	in     al,0x37
  4187dc:	mov    WORD PTR [edi+eiz*2+0x1],ss
  4187e0:	aaa    
  4187e1:	pop    esp
  4187e2:	inc    ebx
  4187e3:	jmp    0x4187ab
  4187e5:	xchg   ebx,eax
  4187e6:	mov    WORD PTR [ebx-0x38],ds
  4187e9:	fcmovu st,st(5)
  4187eb:	mov    ah,0xc1
  4187ed:	in     eax,0xa8
  4187ef:	ret    0xd5be
  4187f2:	jno    0x4187ef
  4187f4:	xchg   ebp,eax
  4187f5:	mov    esp,0xeddfca73
  4187fa:	mov    cs,WORD PTR [eax]
  4187fc:	mov    edx,0xad7d4439
  418801:	push   cs
  418802:	imul   BYTE PTR [edi+0x7687412]
  418808:	jb     0x41886f
  41880a:	adc    DWORD PTR [esi+0x38],0xffffffde
  41880e:	pop    ds
  41880f:	(bad)  
  418810:	stc    
  418811:	ins    DWORD PTR es:[edi],dx
  418812:	jno    0x41879a
  418814:	lock or ah,BYTE PTR [edi+esi*2]
  418818:	js     0x4187d2
  41881a:	(bad)  
  41881b:	sub    esi,DWORD PTR [ecx+0x12]
  41881e:	cmp    ch,dl
  418820:	enter  0x1568,0x4
  418824:	test   BYTE PTR [edi-0x247d9234],dh
  41882a:	jge    0x4187da
  41882c:	stc    
  41882d:	cld    
  41882e:	mov    bh,0x73
  418830:	mov    edx,0x416287de
  418835:	outs   dx,DWORD PTR ds:[esi]
  418836:	out    0x6f,al
  418838:	std    
  418839:	retf   0xc083
  41883c:	mov    al,0x40
  41883e:	dec    esi
  41883f:	(bad)  
  418840:	jmp    0xc1d:0xb797b651
  418847:	retf   0x68a9
  41884a:	icebp  
  41884b:	jmp    0x4887fab2
  418850:	fadd   st(5),st
  418852:	xchg   ebp,eax
  418853:	leave  
  418854:	fisttp WORD PTR [edx+0x544aa298]
  41885a:	fiadd  WORD PTR [ecx+ecx*8]
  41885d:	push   ebp
  41885e:	push   esi
  41885f:	push   ss
  418860:	xor    esp,DWORD PTR [eax-0x68]
  418863:	dec    edi
  418864:	fisubr DWORD PTR [edx-0x39]
  418867:	iret   
  418868:	fwait
  418869:	inc    ebp
  41886a:	or     DWORD PTR [edx+0x61],ebx
  41886d:	ret    
  41886e:	ds pop eax
  418870:	add    DWORD PTR [eax],esp
  418872:	push   0x5f
  418874:	mov    ah,0x1e
  418876:	dec    esp
  418877:	pop    esp
  418878:	inc    ebp
  418879:	push   ds
  41887a:	cmp    eax,0xfb8c47c6
  41887f:	retf   
  418880:	ins    BYTE PTR es:[edi],dx
  418881:	shl    BYTE PTR [ecx-0x23],1
  418884:	sub    eax,0x26301e99
  418889:	add    BYTE PTR [ebx-0x16cf6aca],dl
  41888f:	pop    esp
  418890:	mov    BYTE PTR [ebx+eax*2-0x5f974b1e],cl
  418897:	sti    
  418898:	shl    eax,0x61
  41889b:	stc    
  41889c:	push   0xffffffdb
  41889e:	jg     0x4188f9
  4188a0:	jns    0x4188e6
  4188a2:	outs   dx,DWORD PTR ds:[esi]
  4188a3:	push   ss
  4188a4:	xchg   ebp,eax
  4188a5:	fmul   DWORD PTR [ebx+0x55]
  4188a8:	(bad)  
  4188aa:	and    bl,BYTE PTR [eax]
  4188ac:	out    dx,eax
  4188ad:	xor    DWORD PTR [edi],ecx
  4188af:	dec    ebx
  4188b0:	mov    ah,0xdb
  4188b2:	cmp    al,0x31
  4188b4:	pop    ds
  4188b5:	dec    ecx
  4188b6:	icebp  
  4188b7:	sar    DWORD PTR [ecx+0x2a],1
  4188ba:	popf   
  4188bb:	in     eax,0xd4
  4188bd:	call   0x76e0b1d6
  4188c2:	push   cs
  4188c3:	adc    al,0xe4
  4188c5:	aam    0x70
  4188c7:	jae    0x4188d7
  4188c9:	call   0x1042:0xe57594d3
  4188d0:	jo     0x41888c
  4188d2:	imul   esi,DWORD PTR [ebp+ecx*4-0x61],0x243ea87f
  4188da:	test   BYTE PTR [edi],dh
  4188dc:	push   ebx
  4188dd:	mov    ecx,0x8ff9d795
  4188e2:	inc    edx
  4188e3:	dec    eax
  4188e4:	mov    al,BYTE PTR [eax]
  4188e6:	dec    esp
  4188e7:	lahf   
  4188e8:	xor    DWORD PTR [ecx],edi
  4188ea:	sar    BYTE PTR [eax-0x5069bd51],1
  4188f0:	fcomp  DWORD PTR [edi-0x35bcd7f1]
  4188f6:	adc    esi,eax
  4188f8:	pusha  
  4188f9:	outs   dx,BYTE PTR ds:[esi]
  4188fa:	xor    ecx,DWORD PTR [edi]
  4188fc:	andps  xmm4,XMMWORD PTR [eax]
  4188ff:	pop    esi
  418900:	int3   
  418901:	bound  esp,QWORD PTR [edi]
  418903:	ja     0x4188f9
  418905:	js     0x418958
  418907:	hlt    
  418908:	aad    0x26
  41890a:	test   ch,cl
  41890c:	add    BYTE PTR [eax+0xf],0x22
  418910:	cmp    eax,0xd53bb0f
  418915:	push   0xa6bd9711
  41891a:	repz pop edi
  41891c:	mov    bh,bh
  41891e:	adc    dh,0x99
  418921:	fisubr WORD PTR [ebx+0x48dbff6b]
  418927:	mov    esp,0x706d2c42
  41892c:	mov    ds:0xc20b037d,al
  418931:	xor    BYTE PTR [edi],al
  418933:	cdq    
  418934:	xor    eax,0xb5f720c
  418939:	push   ebp
  41893a:	sti    
  41893b:	iret   
  41893c:	xchg   ebx,eax
  41893d:	pop    ecx
  41893e:	lea    eax,[edx+0x17]
  418941:	cmp    ecx,eax
  418943:	popa   
  418944:	cmp    al,0xf
  418946:	out    dx,eax
  418947:	jne    0x418909
  418949:	gs aaa 
  41894b:	adc    DWORD PTR [eax],eax
  41894d:	cmc    
  41894e:	dec    ebp
  41894f:	push   ds
  418950:	popa   
  418951:	int3   
  418952:	add    DWORD PTR [edx-0x50d4d47],ebp
  418958:	cmp    BYTE PTR [eax],dl
  41895a:	inc    eax
  41895b:	cld    
  41895c:	cmp    al,dl
  41895e:	dec    esi
  41895f:	mov    cl,0x74
  418961:	mov    ebp,0x73021e03
  418966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418967:	ins    BYTE PTR es:[edi],dx
  418968:	fnstsw WORD PTR [edx+0x76]
  41896b:	cmc    
  41896c:	(bad)  
  41896d:	test   DWORD PTR [eax+0xace0c65],0x40f9cd9e
  418977:	jns    0x418901
  418979:	pop    es
  41897a:	or     eax,0xbcb4b7ad
  41897f:	push   ebp
  418980:	imul   ecx,DWORD PTR [edi+0x38],0xffffffae
  418984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418985:	pop    edi
  418986:	sub    DWORD PTR [esi],ebp
  418988:	cmp    al,0x3f
  41898a:	mov    esi,0x851b09e0
  41898f:	lds    eax,FWORD PTR [esi+ebp*1]
  418992:	push   ds
  418993:	(bad)  
  418994:	sub    BYTE PTR [edx-0x42e11a5d],dl
  41899a:	pop    ebx
  41899b:	jns    0x4189df
  41899d:	test   DWORD PTR [edx+0xb],edx
  4189a0:	inc    esi
  4189a1:	jns    0x41896b
  4189a3:	mov    DWORD PTR [esi-0x13],ecx
  4189a6:	push   cs
  4189a7:	lods   al,BYTE PTR fs:[esi]
  4189a9:	or     BYTE PTR [edi-0x44],al
  4189ac:	mov    gs,WORD PTR [eax-0x5f881ef2]
  4189b2:	clc    
  4189b3:	ins    BYTE PTR es:[edi],dx
  4189b4:	jo     0x4189b5
  4189b6:	or     eax,0x1c624890
  4189bb:	inc    edx
  4189bc:	jmp    FWORD PTR [ebx+0x25661295]
  4189c2:	or     eax,0xf37b4c8a
  4189c7:	int    0xf5
  4189c9:	jno    0x418a14
  4189cb:	push   ss
  4189cc:	in     eax,dx
  4189cd:	mov    esp,0xc89aeb37
  4189d2:	push   0xbf60ccf2
  4189d7:	push   ss
  4189d8:	mov    edi,0x9b3bf449
  4189dd:	push   esp
  4189de:	aam    0x51
  4189e0:	push   ss
  4189e1:	dec    esi
  4189e2:	add    ch,BYTE PTR [ebx-0x30258214]
  4189e8:	imul   eax,DWORD PTR [esi-0x27590f55],0x7f
  4189ef:	int3   
  4189f0:	xchg   ebx,eax
  4189f1:	(bad)  
  4189f2:	sub    ah,BYTE PTR [ebx-0x454e5467]
  4189f8:	dec    edi
  4189f9:	lea    edx,[esi+0x72]
  4189fc:	sahf   
  4189fd:	les    ebp,FWORD PTR [edx+eiz*2]
  418a00:	xor    dl,al
  418a02:	push   es
  418a03:	pop    ecx
  418a04:	jno    0x418a7e
  418a06:	div    bl
  418a08:	mov    ch,0x4a
  418a0a:	fdivr  DWORD PTR [ebp+0x78a3b9b7]
  418a10:	clc    
  418a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a12:	adc    BYTE PTR [edx],dh
  418a14:	pop    edi
  418a15:	inc    edi
  418a16:	pop    ds
  418a17:	fistp  DWORD PTR [ebx-0x72236318]
  418a1d:	js     0x418a42
  418a1f:	fwait
  418a20:	in     eax,0xc1
  418a22:	popf   
  418a23:	cmp    al,0xba
  418a25:	jl     0x418a25
  418a27:	xor    eax,0xabb587f0
  418a2c:	jbe    0x418a8d
  418a2e:	aad    0x77
  418a30:	out    dx,eax
  418a31:	add    BYTE PTR [ebx+0x12715595],bh
  418a37:	mov    al,0x33
  418a39:	int    0x61
  418a3b:	xchg   ecx,eax
  418a3c:	imul   eax,DWORD PTR [edx-0x6d],0x4c27ea48
  418a43:	adc    al,0xea
  418a45:	outs   dx,BYTE PTR ds:[esi]
  418a46:	mov    eax,ds:0x6b97c52b
  418a4b:	sbb    al,0x1e
  418a4d:	call   0x8181a81c
  418a52:	mov    dl,0x31
  418a54:	arpl   WORD PTR [eax+0xb3556d1],ax
  418a5a:	cmc    
  418a5b:	inc    esp
  418a5c:	pop    ss
  418a5d:	out    dx,eax
  418a5e:	fisttp WORD PTR ds:0x114e4e37
  418a64:	lods   al,BYTE PTR ds:[esi]
  418a65:	mov    al,0xeb
  418a67:	(bad)  
  418a69:	jge    0x418a37
  418a6b:	mov    DWORD PTR [ecx+0x1eb77dac],ebx
  418a71:	push   0xfffffffb
  418a73:	inc    eax
  418a74:	sbb    DWORD PTR [ebp-0x21],esp
  418a77:	or     ebx,DWORD PTR [ecx+0x66af66bb]
  418a7d:	jg     0x418a60
  418a7f:	and    DWORD PTR [edi-0x34],eax
  418a82:	pop    eax
  418a83:	call   0x6243bf6c
  418a88:	jmp    0xed811e02
  418a8d:	inc    esp
  418a8e:	test   al,0xe7
  418a90:	add    eax,0xcec29938
  418a95:	enter  0x8868,0xfc
  418a99:	mov    WORD PTR [ebx+ecx*1],?
  418a9c:	pop    es
  418a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a9e:	sar    DWORD PTR [eax],0x34
  418aa1:	mov    ecx,0x93c02409
  418aa6:	scas   al,BYTE PTR es:[edi]
  418aa7:	mov    ecx,0xb9a5fdf
  418aac:	sbb    cl,dl
  418aae:	shr    BYTE PTR [esi],cl
  418ab0:	retf   0x8322
  418ab3:	add    DWORD PTR [edi+0x75dff3ae],eax
  418ab9:	sub    eax,0xb5c4418f
  418abe:	imul   ecx,DWORD PTR [eax-0x8],0x3e
  418ac2:	enter  0xea91,0x9d
  418ac6:	hlt    
  418ac7:	adc    DWORD PTR ds:[edx+0x55],edi
  418acb:	xor    al,0x1e
  418acd:	cmp    ebx,0x8e7c2a26
  418ad3:	push   edx
  418ad4:	push   ebx
  418ad5:	cwde   
  418ad6:	dec    ecx
  418ad7:	cmp    bh,BYTE PTR [edi+0x66]
  418ada:	inc    eax
  418adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418adc:	cmp    esp,DWORD PTR [eax+0x1621aa74]
  418ae2:	ret    0x17cb
  418ae5:	int3   
  418ae6:	cwde   
  418ae7:	lock jg 0x418b46
  418aea:	cmp    eax,0x764a60c
  418aef:	shl    BYTE PTR [ebx-0x4b300a31],0xe9
  418af6:	cmp    eax,0x57857fa3
  418afb:	in     eax,0xb4
  418afd:	fisubr DWORD PTR [esi]
  418aff:	mov    al,ds:0xcd6ded99
  418b04:	movups xmm7,xmm7
  418b07:	(bad)  [ebp-0x28f24432]
  418b0d:	fcmovu st,st(3)
  418b0f:	aam    0xbb
  418b11:	mov    ds:0x155a1a02,eax
  418b16:	fsubr  DWORD PTR [ecx+0x5a]
  418b19:	fcmovne st,st(6)
  418b1b:	or     esp,esi
  418b1d:	out    dx,eax
  418b1e:	(bad)  
  418b20:	inc    ecx
  418b21:	in     eax,0xf7
  418b23:	in     al,0x1f
  418b25:	dec    edx
  418b26:	shl    DWORD PTR [ebx-0x4fe2d9c5],cl
  418b2c:	sbb    bl,dl
  418b2e:	push   ss
  418b2f:	and    eax,0x78f0e43f
  418b34:	sbb    ebx,DWORD PTR [ebx+0xa]
  418b37:	cmovno edx,DWORD PTR [edx+0x14b30bbc]
  418b3e:	pop    esi
  418b3f:	cld    
  418b40:	mov    edi,0x3c6feb43
  418b45:	stos   DWORD PTR es:[edi],eax
  418b46:	int    0xf8
  418b48:	jmp    0x418b2c
  418b4a:	loop   0x418bc8
  418b4c:	pusha  
  418b4d:	jge    0x418b4d
  418b4f:	std    
  418b50:	sbb    dh,BYTE PTR [edi+0x4a7b438a]
  418b56:	pusha  
  418b57:	es mov bh,0xc9
  418b5a:	lds    esp,FWORD PTR [ebx]
  418b5c:	jno    0x418b2f
  418b5e:	sbb    al,0x2d
  418b60:	jnp    0x418af4
  418b62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b64:	inc    esp
  418b65:	in     al,dx
  418b66:	fnstenv [edi+0x1d]
  418b69:	jge    0x418b0e
  418b6b:	imul   ebx,ebx,0xffffff92
  418b6e:	ret    0xe980
  418b71:	pop    ss
  418b72:	push   ebp
  418b73:	push   eax
  418b74:	adc    DWORD PTR [edi-0x7a],0x621769c0
  418b7b:	cmp    edx,DWORD PTR [edx]
  418b7d:	jp     0x418b18
  418b7f:	jge    0x418b30
  418b81:	cdq    
  418b82:	dec    edx
  418b83:	dec    ecx
  418b84:	(bad)  
  418b85:	xchg   edi,eax
  418b86:	pop    ebp
  418b87:	push   edx
  418b88:	lds    esi,FWORD PTR [esi+0x77]
  418b8b:	push   ds
  418b8c:	(bad)  [ebx-0x52]
  418b8f:	adc    BYTE PTR [eax],0x3d
  418b92:	pushf  
  418b93:	loope  0x418c00
  418b95:	test   bh,ch
  418b97:	pushf  
  418b98:	pop    edx
  418b99:	xor    cl,BYTE PTR [edi+0x11]
  418b9c:	and    DWORD PTR [eax-0x19],0x3e
  418ba0:	pop    edx
  418ba1:	jno    0x418b4b
  418ba3:	pop    edx
  418ba4:	push   ebx
  418ba5:	fwait
  418ba6:	out    dx,eax
  418ba7:	adc    eax,0x50ab1bfe
  418bac:	pop    ebx
  418bad:	mov    ah,0x64
  418baf:	xor    al,0x7
  418bb1:	test   al,0x84
  418bb3:	adc    BYTE PTR [edi+0x11],0x8a
  418bb7:	lods   eax,DWORD PTR ds:[esi]
  418bb8:	je     0x418b68
  418bba:	psubw  mm2,mm1
  418bbd:	ret    0x6dd
  418bc0:	in     eax,dx
  418bc1:	retf   
  418bc2:	pop    es
  418bc3:	gs aas 
  418bc5:	ret    0xdb64
  418bc8:	ret    0x5aa
  418bcb:	mov    esp,0xe3d0b1ef
  418bd0:	(bad)  
  418bd1:	push   esi
  418bd2:	lea    ebx,[eax-0x48]
  418bd5:	ins    BYTE PTR es:[edi],dx
  418bd6:	push   0xffffffc0
  418bd8:	icebp  
  418bd9:	sub    ah,BYTE PTR [edi+0x11b20071]
  418bdf:	or     al,0x80
  418be1:	inc    ebp
  418be2:	and    edx,DWORD PTR [ebp+0xa]
  418be5:	jo     0x418ba7
  418be7:	sub    al,ah
  418be9:	leave  
  418bea:	mov    ds:0xb61d0d31,eax
  418bef:	ss push ss
  418bf1:	fbld   TBYTE PTR [ebx]
  418bf3:	adc    eax,0x66d6f3ec
  418bf8:	imul   BYTE PTR [ebx-0x220efe1d]
  418bfe:	sub    ah,0x5d
  418c01:	xchg   ecx,eax
  418c02:	ds push esp
  418c04:	and    al,0x59
  418c06:	jo     0x418b8f
  418c08:	stos   DWORD PTR es:[edi],eax
  418c09:	mov    DWORD PTR [esi-0x5f],ebx
  418c0c:	lods   eax,DWORD PTR ds:[esi]
  418c0d:	sbb    eax,0x8d00ebcb
  418c12:	scas   al,BYTE PTR es:[edi]
  418c13:	popa   
  418c14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c15:	ja     0x418bbe
  418c17:	push   esp
  418c18:	dec    BYTE PTR [ebx]
  418c1a:	ja     0x418c51
  418c1c:	psrlw  mm6,QWORD PTR [esi-0x469c525]
  418c23:	sub    edi,DWORD PTR [esi-0x1bceb69d]
  418c29:	les    ecx,FWORD PTR [edx+edx*1+0x38e4ef23]
  418c30:	sub    DWORD PTR ds:0xb0c5ff11,edx
  418c36:	mov    eax,DWORD PTR [ecx-0x295e3896]
  418c3c:	xchg   ebx,eax
  418c3d:	ja     0x418beb
  418c3f:	out    dx,al
  418c40:	repz xchg esi,eax
  418c42:	ror    BYTE PTR [ebx],0x8a
  418c45:	scas   eax,DWORD PTR es:[edi]
  418c46:	aaa    
  418c47:	jp     0x418c23
  418c49:	push   0x90a691de
  418c4e:	cmp    eax,0xf9efd4d9
  418c53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c54:	fdivr  DWORD PTR [esi+0x7]
  418c57:	jmp    0x4d3c:0x532d66ee
  418c5e:	lea    ecx,[eax-0x53]
  418c61:	xchg   DWORD PTR [ebp+0x320274b1],esi
  418c67:	out    0x9,eax
  418c69:	sub    edx,DWORD PTR ds:0x72d72c16
  418c6f:	or     dl,0x41
  418c72:	cmp    bh,ch
  418c74:	push   esp
  418c75:	and    edi,DWORD PTR [ebx+0x7c]
  418c78:	adc    ah,BYTE PTR [edx+0x6c]
  418c7b:	mov    esi,0xcbd3ac45
  418c80:	iret   
  418c81:	aas    
  418c82:	and    eax,0x7276f6c9
  418c87:	dec    esi
  418c88:	push   edi
  418c89:	(bad)  
  418c8a:	popf   
  418c8b:	adc    al,0x17
  418c8d:	add    BYTE PTR [eax],al
  418c8f:	cli    
  418c90:	push   es
  418c91:	loop   0x418c89
  418c93:	inc    edx
  418c94:	xor    bl,ah
  418c96:	or     al,0x1f
  418c98:	(bad)
  418c9b:	add    bh,BYTE PTR [edi-0x4e5a7c2f]
  418ca1:	mov    eax,ds:0x46a1cca1
  418ca6:	jle    0x418c4b
  418ca8:	call   0xce32c887
  418cad:	push   cs
  418cae:	pushf  
  418caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cb0:	arpl   WORD PTR [eax],di
  418cb2:	or     ch,BYTE PTR [esi+0x40119d35]
  418cb8:	fidiv  WORD PTR [ecx]
  418cba:	or     ecx,DWORD PTR [eax-0xb]
  418cbd:	in     eax,dx
  418cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cbf:	or     ecx,DWORD PTR [esi-0x30]
  418cc2:	outs   dx,BYTE PTR ds:[esi]
  418cc3:	hlt    
  418cc4:	sub    bh,cl
  418cc6:	inc    ecx
  418cc7:	rcr    edx,0xb8
  418cca:	je     0x418cf1
  418ccc:	outs   dx,DWORD PTR ds:[esi]
  418ccd:	add    al,0x35
  418ccf:	mov    dl,0x32
  418cd1:	sub    cl,bl
  418cd3:	fbstp  TBYTE PTR [ecx]
  418cd5:	aas    
  418cd6:	popa   
  418cd7:	test   al,0xab
  418cd9:	sub    eax,0x444d721d
  418cde:	int    0x90
  418ce0:	rcl    dl,cl
  418ce2:	mov    edx,0xa3ff0bbb
  418ce7:	adc    esi,esi
  418ce9:	inc    ebp
  418cea:	fs adc bh,bh
  418ced:	and    DWORD PTR [esi+0x57],edi
  418cf0:	sbb    ebp,DWORD PTR [esi+eiz*1-0x22f8cb8b]
  418cf7:	xchg   edi,eax
  418cf8:	out    0x5e,eax
  418cfa:	jno    0x418ce3
  418cfc:	jmp    0xa52ecddf
  418d01:	jno    0x418cd6
  418d03:	ins    BYTE PTR es:[edi],dx
  418d04:	mov    ds:0xcf3b5e8f,eax
  418d09:	out    dx,eax
  418d0a:	push   ebx
  418d0b:	stos   BYTE PTR es:[edi],al
  418d0c:	out    0x8f,al
  418d0e:	mov    WORD PTR [esi],?
  418d10:	sti    
  418d11:	add    ax,0xd235
  418d15:	push   edx
  418d16:	cmp    dl,BYTE PTR [ecx-0x37]
  418d19:	test   BYTE PTR [eax],cl
  418d1b:	cmp    DWORD PTR [edi-0x50aca54c],esi
  418d21:	retf   0xb911
  418d24:	sahf   
  418d25:	stos   DWORD PTR es:[edi],eax
  418d26:	out    0x1d,eax
  418d28:	sub    ah,dh
  418d2a:	icebp  
  418d2b:	mov    dl,0x50
  418d2d:	std    
  418d2e:	fcmovnu st,st(5)
  418d30:	jecxz  0x418ce7
  418d32:	ins    DWORD PTR es:[edi],dx
  418d33:	inc    ebx
  418d34:	cmp    ch,ch
  418d36:	sbb    ebp,DWORD PTR [esi-0x3be9e190]
  418d3c:	dec    esi
  418d3d:	stc    
  418d3e:	cld    
  418d3f:	loope  0x418cf0
  418d41:	xchg   edi,eax
  418d42:	inc    esp
  418d43:	jno    0x418cc8
  418d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d46:	getsec 
  418d48:	mov    dl,0x1
  418d4a:	test   DWORD PTR [ebx],esp
  418d4c:	ret    
  418d4d:	pusha  
  418d4e:	out    dx,al
  418d4f:	cld    
  418d50:	mov    cl,0x72
  418d52:	push   eax
  418d53:	adc    eax,0x397e61d5
  418d58:	push   esp
  418d59:	push   ebp
  418d5a:	sbb    BYTE PTR [esi+ebp*8],bh
  418d5d:	sub    DWORD PTR ds:0x8b9ebe24,0xffffffaa
  418d64:	ror    edx,cl
  418d66:	mov    edi,0x71be69a4
  418d6b:	and    eax,0x8fc91a6c
  418d70:	nop
  418d71:	xchg   DWORD PTR [ebp+0x34],esp
  418d74:	sbb    eax,esi
  418d76:	stc    
  418d77:	dec    DWORD PTR [ebx]
  418d79:	mov    bh,0xa7
  418d7b:	xor    cl,BYTE PTR [eax]
  418d7d:	fwait
  418d7e:	gs ins DWORD PTR es:[edi],dx
  418d80:	sub    cl,ah
  418d82:	cld    
  418d83:	retf   
  418d84:	and    BYTE PTR [eax+0x7046eedb],cl
  418d8a:	cmp    ch,BYTE PTR [eax]
  418d8c:	imul   esp,DWORD PTR ds:0x3ef1b6b9,0xe4fea854
  418d96:	pusha  
  418d97:	adc    al,0x5a
  418d99:	enter  0x699d,0xa1
  418d9d:	and    BYTE PTR [esi+0x73],cl
  418da0:	push   0x1c
  418da2:	jle    0x418ddc
  418da4:	dec    ebx
  418da5:	leave  
  418da6:	addr16 test cl,dh
  418da9:	retf   0x61
  418dac:	mov    esi,0x5e3dfe35
  418db1:	xchg   esp,eax
  418db2:	cmp    ebp,DWORD PTR [ecx-0x34]
  418db5:	push   ecx
  418db6:	imul   ecx,DWORD PTR [ecx],0x26
  418db9:	ret    0x8e1c
  418dbc:	ins    BYTE PTR es:[edi],dx
  418dbd:	cmp    bh,bl
  418dbf:	rol    BYTE PTR [ecx],cl
  418dc1:	in     al,dx
  418dc2:	imul   ebx,DWORD PTR [eax],0x4dbf4b48
  418dc8:	dec    eax
  418dc9:	push   ss
  418dca:	and    al,ch
  418dcc:	pop    edx
  418dcd:	push   edi
  418dce:	scas   eax,DWORD PTR es:[edi]
  418dcf:	mov    eax,0x68bd6991
  418dd4:	dec    edx
  418dd5:	mov    al,ds:0x1e1e7dc1
  418dda:	jle    0x418d82
  418ddc:	pop    esi
  418ddd:	shl    al,cl
  418ddf:	xor    al,0x31
  418de1:	mov    edx,0x10c3606
  418de6:	shl    DWORD PTR [esi-0xa],cl
  418de9:	mov    eax,ds:0x751eba2c
  418dee:	mov    ecx,0x69e74f18
  418df3:	xor    BYTE PTR [edx-0x4a],ah
  418df6:	gs imul ecx,ebp,0xffffff90
  418dfa:	into   
  418dfb:	popf   
  418dfc:	retf   0x87b3
  418dff:	test   al,0x62
  418e01:	gs call 0xe476feaf
  418e07:	mov    ebp,0xfdc9e542
  418e0c:	sar    DWORD PTR ds:0x3ef3d070,0xd7
  418e13:	rcr    DWORD PTR ss:[ecx],0x6b
  418e17:	popf   
  418e18:	cmp    eax,0x2415e712
  418e1d:	clc    
  418e1e:	sub    ah,BYTE PTR [ecx-0x57]
  418e21:	add    al,0xdc
  418e23:	data16 and BYTE PTR [eax-0x49e34985],cl
  418e2a:	lods   al,BYTE PTR ds:[esi]
  418e2b:	mov    ebx,0xe3dc54fb
  418e30:	pop    eax
  418e31:	ds mov esi,0x1cacd03f
  418e37:	push   edi
  418e38:	or     ch,bh
  418e3a:	fld    QWORD PTR [edx-0x23ff2289]
  418e40:	sub    BYTE PTR [esi-0x4b],ah
  418e43:	adc    eax,0x6dcdd01b
  418e48:	xor    bh,ch
  418e4a:	sub    BYTE PTR [esi],bl
  418e4c:	xor    al,0xbb
  418e4e:	pop    ds
  418e4f:	mov    DWORD PTR ds:0xd2b77d14,esi
  418e55:	push   esp
  418e56:	push   edx
  418e57:	fwait
  418e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e59:	ins    BYTE PTR es:[edi],dx
  418e5a:	inc    edx
  418e5b:	mov    al,0x47
  418e5d:	jnp    0x418e57
  418e5f:	aam    0x33
  418e61:	pop    edi
  418e62:	and    ebx,DWORD PTR [esi-0x17]
  418e65:	test   al,0x99
  418e67:	jp     0x418eb4
  418e69:	gs jg  0x418eb8
  418e6c:	out    0xbb,al
  418e6e:	(bad)  
  418e6f:	enter  0x532,0x63
  418e73:	pop    edx
  418e74:	pusha  
  418e75:	stos   BYTE PTR es:[edi],al
  418e76:	clc    
  418e77:	sub    al,0x7a
  418e79:	and    BYTE PTR [ecx+0x0],0x16
  418e7d:	call   0x853e:0x4aa247f
  418e84:	dec    ecx
  418e85:	sbb    ebx,DWORD PTR [esi+0x14]
  418e88:	sub    BYTE PTR [edi-0x75],ch
  418e8b:	shr    DWORD PTR [esi-0x59],cl
  418e8e:	push   ds
  418e8f:	adc    DWORD PTR [ebx],ebp
  418e91:	(bad)  ds:0xd343a739
  418e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e98:	xchg   edi,eax
  418e99:	nop
  418e9a:	sbb    edx,edx
  418e9c:	add    al,0x72
  418e9e:	mov    dl,0x9
  418ea0:	sbb    eax,0x5c681509
  418ea5:	arpl   WORD PTR [esi+0x74fac2f3],ax
  418eab:	and    esi,ebx
  418ead:	hlt    
  418eae:	adc    BYTE PTR [edx+0x762c3fb2],bh
  418eb4:	clc    
  418eb5:	mov    ds:0xd106b806,al
  418eba:	imul   esi,DWORD PTR [ecx-0x24],0xc1468d2b
  418ec1:	cmc    
  418ec2:	and    ecx,edi
  418ec4:	push   edi
  418ec5:	bound  edi,QWORD PTR ds:0xb34045ed
  418ecb:	call   FWORD PTR ds:[esi+ebx*4-0x157d0c4c]
  418ed3:	inc    DWORD PTR [edi]
  418ed5:	pop    ds
  418ed6:	xor    DWORD PTR [edx],ecx
  418ed8:	retf   0xa8e9
  418edb:	imul   ebx,ebp,0xd0a1ae16
  418ee1:	push   edi
  418ee2:	nop
  418ee3:	xor    DWORD PTR [ebx],edi
  418ee5:	out    0xae,eax
  418ee7:	sbb    eax,0xf874c578
  418eec:	add    BYTE PTR [ecx-0x3bcd0465],0xda
  418ef3:	into   
  418ef4:	fsub   st,st(4)
  418ef6:	inc    ecx
  418ef7:	jp     0x418f10
  418ef9:	dec    esi
  418efa:	clc    
  418efb:	ins    DWORD PTR es:[edi],dx
  418efc:	jmp    0x6e1d:0x19779354
  418f03:	dec    ebp
  418f04:	mov    eax,0x2a225e03
  418f09:	xor    al,0xdc
  418f0b:	adc    eax,DWORD PTR [edx]
  418f0d:	(bad)  
  418f0f:	mov    edi,0x9662469f
  418f14:	imul   esp,edi,0xcde8f6d0
  418f1a:	dec    ecx
  418f1b:	add    al,0x29
  418f1d:	popf   
  418f1e:	mov    ds:0x1dbf67f6,eax
  418f23:	mov    eax,ds:0x1f0c5749
  418f28:	sub    al,0x7f
  418f2a:	mov    al,ds:0xa0497fd8
  418f2f:	mov    ecx,0x6da610df
  418f34:	mov    esi,0xfb99700a
  418f39:	adc    bh,dh
  418f3b:	or     dl,al
  418f3d:	clc    
  418f3e:	mov    edi,0xb2b213ff
  418f43:	test   dh,cl
  418f45:	dec    edx
  418f46:	jmp    0x32e08397
  418f4b:	test   WORD PTR [edx-0x38],bp
  418f4f:	adc    BYTE PTR [ebx-0x73],ch
  418f52:	inc    ecx
  418f53:	lahf   
  418f54:	pop    es
  418f55:	xchg   edx,eax
  418f56:	(bad)  
  418f57:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f59:	lahf   
  418f5a:	dec    ebp
  418f5b:	and    BYTE PTR [edx-0xf],0x2c
  418f5f:	sub    esi,DWORD PTR [ecx-0x53966e0d]
  418f65:	mov    eax,0x7115bd3
  418f6a:	nop
  418f6b:	dec    ebp
  418f6c:	sbb    eax,DWORD PTR [esi-0x5c]
  418f6f:	xchg   esi,eax
  418f70:	pop    ecx
  418f71:	jmp    0x418f29
  418f73:	jp     0x418fa6
  418f75:	xchg   edi,eax
  418f76:	in     eax,dx
  418f77:	pop    esi
  418f78:	clc    
  418f79:	dec    edx
  418f7a:	repz and eax,0xa91cf569
  418f80:	js     0x418fe9
  418f82:	stos   BYTE PTR es:[edi],al
  418f83:	in     al,0x2c
  418f85:	popa   
  418f86:	outs   dx,BYTE PTR ds:[esi]
  418f87:	mov    cl,bl
  418f89:	dec    edi
  418f8a:	add    ebp,DWORD PTR [edx+0x4d]
  418f8d:	jg     0x418fbd
  418f8f:	dec    BYTE PTR [edx+0xe]
  418f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f93:	psubw  mm6,QWORD PTR [eax]
  418f96:	int    0x92
  418f98:	shl    BYTE PTR gs:[esi+ecx*8-0x600a3b3b],0xa
  418fa1:	and    esi,DWORD PTR [esi+0xf]
  418fa4:	out    0x81,eax
  418fa6:	imul   edi,DWORD PTR [edx-0x1f],0xe816b183
  418fad:	div    bh
  418faf:	icebp  
  418fb0:	push   0xffffff8e
  418fb2:	cmp    al,BYTE PTR [eax-0x4]
  418fb5:	int    0x91
  418fb7:	add    DWORD PTR [esi-0x33],0xffffffbb
  418fbb:	iret   
  418fbc:	fld    st(3)
  418fbe:	push   edi
  418fbf:	push   ebp
  418fc0:	inc    eax
  418fc1:	shl    DWORD PTR [ebx+eax*4-0x16558fdd],0x86
  418fc9:	pop    ebp
  418fca:	xor    eax,0x348703b2
  418fcf:	imul   ebp,DWORD PTR [esi+0x71],0x3ecafe1e
  418fd6:	add    eax,0xac47a431
  418fdb:	mov    ebp,0xd185b0fd
  418fe0:	mov    bl,0x44
  418fe2:	mov    ebx,0xbde99f6d
  418fe7:	jne    0x418fd4
  418fe9:	clc    
  418fea:	inc    ebp
  418feb:	iret   
  418fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fed:	fsubr  st(6),st
  418fef:	jp     0x418f73
  418ff1:	or     DWORD PTR [esi],ecx
  418ff3:	pop    ss
  418ff4:	jp     0x41906b
  418ff6:	xchg   BYTE PTR ds:0x94cce11,ah
  418ffc:	jle    0x41901e
  418ffe:	xchg   ebp,eax
  418fff:	adc    BYTE PTR [edx],bl
  419001:	rcl    BYTE PTR [ebp+0x66c8c63c],1
  419007:	js     0x419074
  419009:	jmp    0x4fb1afef
  41900e:	mov    edx,0xadb09700
  419013:	adc    eax,0xa397a468
  419018:	xor    ch,ch
  41901a:	push   0xffffffa1
  41901c:	outs   dx,DWORD PTR ds:[esi]
  41901d:	mov    cl,0xb7
  41901f:	xor    ecx,edx
  419021:	dec    esp
  419022:	push   ebp
  419023:	or     BYTE PTR [ebp+0x34],0xd5
  419027:	cmp    al,bl
  419029:	mov    edx,DWORD PTR [eax+0x16]
  41902c:	(bad)  
  41902d:	call   DWORD PTR [ebp+0x7ee2e37c]
  419033:	sbb    esp,DWORD PTR [edi]
  419035:	cld    
  419036:	mov    eax,ds:0xca358bc8
  41903b:	jge    0x418fd1
  41903d:	pushf  
  41903e:	cmp    al,0x79
  419040:	push   cs
  419041:	sub    eax,0x7cb6a657
  419046:	out    0x65,al
  419048:	es out 0x6b,eax
  41904b:	retf   
  41904c:	not    al
  41904e:	jecxz  0x418fe5
  419050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419051:	jns    0x419078
  419053:	pop    ebx
  419054:	ret    
  419055:	out    dx,al
  419056:	pop    ebx
  419057:	xchg   esp,eax
  419058:	mov    ebp,0xc1df0f1f
  41905d:	call   0x9924a69e
  419062:	out    0x8,eax
  419064:	jmp    0x8c2ef555
  419069:	xor    al,0xf2
  41906b:	mov    ?,WORD PTR [edx-0x78]
  41906e:	(bad)  
  41906f:	pop    esp
  419070:	ret    0x654e
  419073:	jl     0x4190ef
  419075:	(bad)  
  419076:	xor    al,0x4e
  419078:	test   eax,0xf6512f7a
  41907d:	(bad)  
  41907e:	sub    eax,0x718df176
  419083:	test   BYTE PTR [edx+0x66],al
  419086:	and    al,0xb1
  419088:	aad    0xaf
  41908a:	mov    bh,bl
  41908c:	jle    0x4190b4
  41908e:	mov    ecx,0x114da660
  419093:	inc    eax
  419094:	call   0xf79:0x55fcf7a4
  41909b:	outs   dx,DWORD PTR ds:[esi]
  41909c:	jns    0x4190ef
  41909e:	call   0xbde60348
  4190a3:	push   ebp
  4190a4:	lahf   
  4190a5:	pop    esp
  4190a6:	in     eax,0x28
  4190a8:	dec    edx
  4190a9:	sub    al,BYTE PTR ds:0xacce47b9
  4190af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190b0:	aas    
  4190b1:	xchg   esp,eax
  4190b2:	les    esp,FWORD PTR [edx+0x42c1de9]
  4190b8:	pop    es
  4190b9:	adc    edi,DWORD PTR [eax]
  4190bb:	leave  
  4190bc:	out    0x7,eax
  4190be:	repz lahf 
  4190c0:	mov    ds:0x4bc4917f,eax
  4190c5:	lea    ebp,[edi-0x25c9f40e]
  4190cb:	sbb    BYTE PTR [edx+0x26],cl
  4190ce:	push   ebx
  4190cf:	push   ebp
  4190d0:	inc    esi
  4190d1:	nop
  4190d2:	or     ah,ah
  4190d4:	cld    
  4190d5:	jmp    0x34bb:0x8a4093a1
  4190dc:	sbb    eax,0x9caa85ca
  4190e1:	imul   ecx,DWORD PTR [edi],0x27
  4190e4:	inc    edx
  4190e5:	jge    0x4190a1
  4190e7:	dec    ebx
  4190e8:	pop    ds
  4190e9:	push   ebp
  4190ea:	jns    0x41909b
  4190ec:	ins    BYTE PTR es:[edi],dx
  4190ed:	test   eax,0xde971e4
  4190f2:	sub    eax,0x443e2a79
  4190f7:	xchg   edi,eax
  4190f8:	shl    dh,0x31
  4190fb:	icebp  
  4190fc:	xlat   BYTE PTR ds:[ebx]
  4190fd:	add    edx,DWORD PTR [ebp-0x5f]
  419100:	mov    esi,0xf3ad3fcf
  419105:	sbb    BYTE PTR [ecx+0x15ce83e9],bh
  41910b:	jmp    0x4190e3
  41910d:	les    ecx,FWORD PTR [esi+0xaee3931]
  419113:	xchg   ecx,eax
  419114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419115:	scas   eax,DWORD PTR es:[edi]
  419116:	mov    edi,0x64b5b2a9
  41911b:	push   ss
  41911c:	aas    
  41911d:	and    ecx,DWORD PTR [esi-0x21f30f19]
  419123:	fwait
  419124:	push   0xffffffe5
  419126:	cmp    BYTE PTR [edi-0x5597cb35],bl
  41912c:	adc    edx,ebx
  41912e:	(bad)  
  41912f:	cs pop ebx
  419131:	aaa    
  419132:	data16 fbstp TBYTE PTR [edi-0x16125be6]
  419139:	mov    edx,0x412d8623
  41913e:	push   eax
  41913f:	jp     0x4191bf
  419141:	inc    ebp
  419142:	add    ch,ah
  419144:	cmp    cl,BYTE PTR [eax]
  419146:	int3   
  419147:	push   esp
  419148:	jb     0x41916f
  41914a:	pop    esi
  41914b:	aam    0x2b
  41914d:	inc    edx
  41914e:	dec    ebx
  41914f:	sub    eax,0x794088a8
  419154:	in     eax,0x44
  419156:	cmp    eax,0xb33de67b
  41915b:	in     eax,dx
  41915c:	fiadd  DWORD PTR [esi+0x41adb23]
  419162:	or     ch,BYTE PTR [edi-0x69fc5cb6]
  419168:	cmc    
  419169:	mov    cl,0xbf
  41916b:	ffreep st(6)
  41916d:	xor    dh,dh
  41916f:	mov    dl,0xe3
  419171:	jmp    0x68b17500
  419176:	xchg   ebx,eax
  419177:	pushf  
  419178:	(bad)  
  419179:	idiv   BYTE PTR [eax-0x31]
  41917c:	pop    es
  41917d:	jmp    0xa4a0ab81
  419182:	in     al,0x15
  419184:	adc    esi,DWORD PTR [ecx-0x6]
  419187:	jmp    0x99f3c700
  41918c:	and    BYTE PTR [edx-0x2f9213d6],bh
  419192:	es aaa 
  419194:	lock sbb al,0x3d
  419197:	nop
  419198:	add    bl,BYTE PTR [edi]
  41919a:	in     eax,0x46
  41919c:	cmp    ah,BYTE PTR [edx+0x15e0a8e2]
  4191a2:	das    
  4191a3:	push   ss
  4191a4:	inc    esi
  4191a5:	sub    eax,0x51f46a04
  4191aa:	pop    es
  4191ab:	retf   
  4191ac:	sub    edi,DWORD PTR [ecx]
  4191ae:	cs sbb al,0xe6
  4191b1:	dec    ecx
  4191b2:	adc    ebp,edi
  4191b4:	or     BYTE PTR [ebp-0x5d],ch
  4191b7:	sub    al,0x6
  4191b9:	push   0x2bcecb7f
  4191be:	sbb    eax,0xd917ed5d
  4191c3:	adc    DWORD PTR [ecx+ecx*8+0x16ced056],ebp
  4191ca:	ret    
  4191cb:	inc    esi
  4191cc:	xor    eax,0xe314aea3
  4191d1:	cmp    eax,0xc6472ff7
  4191d6:	and    edi,eax
  4191d8:	(bad)  
  4191d9:	stos   DWORD PTR es:[edi],eax
  4191da:	arpl   si,bx
  4191dc:	stc    
  4191dd:	push   cs
  4191de:	(bad)  
  4191df:	jbe    0x419257
  4191e1:	adc    bh,BYTE PTR [eax-0x7]
  4191e4:	dec    ebp
  4191e5:	add    ah,ch
  4191e7:	(bad)  
  4191e8:	mov    bl,0xc8
  4191ea:	lods   eax,DWORD PTR ds:[esi]
  4191eb:	nop
  4191ec:	xor    DWORD PTR [edi+0x5105d90a],ebx
  4191f2:	cli    
  4191f3:	mov    ebp,0x3e3cae4c
  4191f8:	out    dx,al
  4191f9:	xlat   BYTE PTR ds:[ebx]
  4191fa:	xchg   DWORD PTR [ebp+0x4f],ebx
  4191fd:	loop   0x4191f8
  4191ff:	bound  ecx,QWORD PTR [ebx+0x6c]
  419202:	cmp    ch,BYTE PTR [esi-0x5c]
  419205:	cwde   
  419206:	cmp    bl,BYTE PTR [eax-0x60c5970d]
  41920c:	stos   DWORD PTR es:[edi],eax
  41920d:	pop    ecx
  41920e:	out    dx,eax
  41920f:	mov    ecx,DWORD PTR [ecx+esi*1]
  419212:	dec    ebp
  419213:	pop    ecx
  419214:	pop    edi
  419215:	scas   eax,DWORD PTR es:[edi]
  419216:	add    ecx,DWORD PTR cs:[eax+0x56]
  41921a:	je     0x419265
  41921c:	pusha  
  41921d:	inc    edx
  41921e:	inc    esi
  41921f:	dec    edx
  419220:	mov    al,ds:0x7c30e16
  419225:	pushf  
  419226:	jecxz  0x419219
  419228:	xor    BYTE PTR [edi+ebp*8+0x2a66d77],ah
  41922f:	retf   
  419230:	cwde   
  419231:	(bad)  
  419232:	mov    ds:0x6a949d8d,eax
  419237:	mov    al,0xaf
  419239:	call   0xad513d9b
  41923e:	and    cl,BYTE PTR [edi-0x29]
  419241:	in     eax,0xc1
  419243:	push   0x5e
  419245:	add    al,0x68
  419247:	aam    0xc3
  419249:	ds mov esi,0x8ec77e99
  41924f:	and    al,0xb
  419251:	push   esp
  419252:	or     dl,BYTE PTR [eax]
  419254:	lods   al,BYTE PTR ds:[esi]
  419255:	lea    ebx,[esi+0x69]
  419258:	dec    ebp
  419259:	ins    DWORD PTR es:[edi],dx
  41925a:	(bad)  [esi-0x1f]
  41925d:	or     dl,dh
  41925f:	fimul  DWORD PTR [ecx-0x5b]
  419262:	div    esp
  419264:	hlt    
  419265:	loop   0x419264
  419267:	jl     0x419255
  419269:	jae    0x41929b
  41926b:	and    BYTE PTR [ebp-0x13df5c41],cl
  419271:	mov    eax,ds:0xc7bc3fed
  419276:	xchg   ebx,eax
  419277:	jle    0x419275
  419279:	pop    esp
  41927a:	jno    0x419270
  41927c:	jo     0x4192a2
  41927e:	xor    al,0x68
  419280:	cmp    al,0xdc
  419282:	test   DWORD PTR [eax-0x54],edi
  419285:	icebp  
  419286:	int    0x16
  419288:	popf   
  419289:	mov    al,0x39
  41928b:	test   eax,0x24430c6c
  419290:	sbb    eax,0x8ccf289a
  419295:	popaw  
  419297:	scas   al,BYTE PTR es:[edi]
  419298:	push   ecx
  419299:	push   ss
  41929a:	pop    ds
  41929b:	fwait
  41929c:	pusha  
  41929d:	repnz sbb eax,0xd5aa799e
  4192a3:	push   eax
  4192a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192a5:	add    ebp,DWORD PTR [ebp-0x5d]
  4192a8:	stos   BYTE PTR es:[edi],al
  4192a9:	add    BYTE PTR [edi-0x704e705e],0xc5
  4192b0:	arpl   ax,dx
  4192b2:	and    al,0xcd
  4192b4:	(bad)  
  4192b5:	scas   al,BYTE PTR es:[edi]
  4192b6:	pop    ss
  4192b7:	lods   al,BYTE PTR ds:[esi]
  4192b8:	loop   0x41927e
  4192ba:	jb     0x4192c4
  4192bc:	arpl   WORD PTR [ecx-0x3a5908bf],di
  4192c2:	or     eax,DWORD PTR [esi+0x69]
  4192c5:	push   eax
  4192c6:	lods   eax,DWORD PTR ds:[esi]
  4192c7:	cmp    ch,BYTE PTR [edi-0x38]
  4192ca:	push   ss
  4192cb:	xchg   dx,ax
  4192cd:	pusha  
  4192ce:	and    al,0xce
  4192d0:	aas    
  4192d1:	(bad)  
  4192d2:	ror    BYTE PTR [ebx],0x1b
  4192d5:	dec    edi
  4192d6:	dec    esi
  4192d7:	sbb    DWORD PTR [ebp-0x41fc2494],ecx
  4192dd:	loopne 0x4192d2
  4192df:	gs stos BYTE PTR es:[edi],al
  4192e1:	dec    ebx
  4192e2:	jp     0x4192d5
  4192e4:	or     edx,edi
  4192e6:	sar    DWORD PTR [edx],0x8d
  4192e9:	sub    DWORD PTR [esi+0x1e81697d],esi
  4192ef:	push   esp
  4192f0:	jecxz  0x419325
  4192f2:	mov    cl,0x27
  4192f4:	mov    dl,0xea
  4192f6:	outs   dx,BYTE PTR ds:[esi]
  4192f7:	cmp    DWORD PTR [esi],0x5c3fcb1d
  4192fd:	sahf   
  4192fe:	pop    edi
  4192ff:	je     0x419367
  419301:	sub    ch,dl
  419303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419304:	mov    bh,0x35
  419306:	pop    ds
  419307:	std    
  419308:	aam    0x69
  41930a:	fcomp  DWORD PTR [ebx-0x6c]
  41930d:	xlat   BYTE PTR ds:[ebx]
  41930e:	and    ah,ah
  419310:	test   eax,0x8cbb4d71
  419315:	es mov ebp,0xabbdb264
  41931b:	inc    ecx
  41931c:	jnp    0x419393
  41931e:	fstp   TBYTE PTR [edx-0x28]
  419321:	pop    ds
  419322:	push   cs
  419323:	leave  
  419324:	pop    esp
  419325:	(bad)  
  419326:	aas    
  419327:	and    BYTE PTR [ebx-0x7b],dh
  41932a:	and    ecx,0x9
  41932d:	and    eax,0xb6eeb181
  419332:	les    esi,FWORD PTR [edx]
  419334:	inc    ebx
  419335:	and    edi,DWORD PTR [ebp+ebp*1+0x15]
  419339:	leavew 
  41933b:	adc    ebx,edi
  41933d:	cmp    eax,0x1c0ca75
  419342:	dec    ebp
  419343:	cwde   
  419344:	cdq    
  419345:	ja     0x4193b7
  419347:	in     eax,dx
  419348:	outs   dx,BYTE PTR ds:[esi]
  419349:	xchg   ecx,ebx
  41934b:	xor    eax,0x498939a
  419350:	adc    BYTE PTR [ebx+0x12],ah
  419353:	inc    edx
  419354:	mov    ebx,0xad732104
  419359:	jb     0x419384
  41935b:	pop    edi
  41935c:	xchg   ecx,eax
  41935d:	call   0xee4f8d6
  419362:	hlt    
  419363:	test   DWORD PTR [ebx+0x4c],esp
  419366:	aas    
  419367:	fidivr WORD PTR [eax+edx*4+0x712a270b]
  41936e:	dec    BYTE PTR [ecx-0x7]
  419371:	clc    
  419372:	push   ecx
  419373:	inc    ebx
  419374:	adc    DWORD PTR [esi+0x270b524a],esi
  41937a:	mov    bh,BYTE PTR [ebx-0x759e1924]
  419380:	jns    0x419315
  419382:	and    edi,DWORD PTR [ecx+eiz*4+0x41e01d00]
  419389:	mov    bh,0xcc
  41938b:	aaa    
  41938c:	imul   edx,esi,0xf892e600
  419392:	fwait
  419393:	lds    esi,FWORD PTR [ecx]
  419395:	xchg   ecx,eax
  419396:	jge    0x419416
  419398:	lea    edx,[eax]
  41939a:	push   ecx
  41939b:	sbb    BYTE PTR [eax-0x6702a826],dl
  4193a1:	fcmovnb st,st(7)
  4193a3:	cmc    
  4193a4:	jecxz  0x419347
  4193a6:	inc    ebp
  4193a7:	jecxz  0x419392
  4193a9:	cli    
  4193aa:	sbb    eax,0x187f7262
  4193af:	xchg   ecx,eax
  4193b0:	xchg   ecx,eax
  4193b1:	iret   
  4193b2:	mov    ebx,0x7ac67c83
  4193b7:	stos   BYTE PTR es:[edi],al
  4193b8:	lods   al,BYTE PTR ds:[esi]
  4193b9:	loop   0x419347
  4193bb:	in     al,0xfa
  4193bd:	pop    ecx
  4193be:	push   ebx
  4193bf:	push   ebx
  4193c0:	jae    0x41940a
  4193c2:	stc    
  4193c3:	mov    eax,eax
  4193c5:	popf   
  4193c6:	scas   eax,DWORD PTR es:[edi]
  4193c7:	loope  0x41943e
  4193c9:	xchg   ebx,eax
  4193ca:	xchg   edx,eax
  4193cb:	mov    edi,0x668dc877
  4193d0:	aad    0x62
  4193d2:	call   eax
  4193d4:	aas    
  4193d5:	inc    esi
  4193d6:	hlt    
  4193d7:	sub    BYTE PTR [ecx-0x61],bl
  4193da:	ficom  WORD PTR [edx]
  4193dc:	or     bh,BYTE PTR [ebp-0x1d604e6c]
  4193e2:	dec    edx
  4193e3:	xchg   ecx,eax
  4193e4:	fcom   QWORD PTR [eax+0x677ae15]
  4193ea:	inc    ecx
  4193eb:	dec    ecx
  4193ec:	pop    esp
  4193ed:	add    DWORD PTR [esi],esp
  4193ef:	(bad)  
  4193f0:	mov    ah,0x1d
  4193f2:	outs   dx,DWORD PTR ds:[esi]
  4193f3:	sub    eax,0x59facbfe
  4193f8:	outs   dx,BYTE PTR ds:[esi]
  4193f9:	adc    dh,BYTE PTR [edi]
  4193fb:	mov    al,0x1
  4193fd:	jg     0x419460
  4193ff:	call   0x459a:0x76a98c9e
  419406:	mov    bl,0xf4
  419408:	clc    
  419409:	or     al,0x31
  41940b:	sub    al,0x40
  41940d:	cmp    edx,esp
  41940f:	xchg   DWORD PTR [esi-0x60a1ac72],eax
  419415:	mov    ebp,0x39323870
  41941a:	inc    ecx
  41941b:	sar    DWORD PTR gs:[edi+0x3a],0xb1
  419420:	xor    eax,0x561a1ce
  419425:	add    eax,0x4e706298
  41942a:	aas    
  41942b:	mov    esp,0x7e24e8fe
  419430:	pop    ecx
  419431:	push   esi
  419432:	lods   eax,DWORD PTR ds:[esi]
  419433:	adc    al,0xfd
  419435:	into   
  419436:	jns    0x419488
  419438:	push   ebp
  419439:	idiv   edx
  41943b:	cmp    al,0x59
  41943d:	leave  
  41943e:	mov    ebp,esp
  419440:	push   edi
  419441:	outs   dx,BYTE PTR ds:[esi]
  419442:	dec    ecx
  419443:	fwait
  419444:	mov    al,0x4b
  419446:	push   cs
  419447:	jae    0x4194ae
  419449:	outs   dx,BYTE PTR ds:[esi]
  41944a:	lea    edx,[esi+0x70223d41]
  419450:	mov    ds:0x88bddf9d,eax
  419455:	sbb    al,0xd6
  419457:	cwde   
  419458:	or     BYTE PTR [ebx+ebp*2-0x5bf86368],dh
  41945f:	dec    ebx
  419460:	jne    0x419430
  419462:	ins    BYTE PTR es:[edi],dx
  419463:	xchg   DWORD PTR [eax-0x5e],edi
  419466:	fld    DWORD PTR [edx-0x80]
  419469:	cmp    ebp,DWORD PTR [edi-0x2f41a998]
  41946f:	sbb    bh,BYTE PTR ds:0xbec88c9
  419475:	imul   esp,DWORD PTR [edi-0x1b],0x5858c16d
  41947c:	ret    
  41947d:	outs   dx,DWORD PTR ds:[esi]
  41947e:	mov    DWORD PTR [ecx],ecx
  419480:	test   al,0x6
  419482:	(bad)
  419485:	push   es
  419486:	cld    
  419487:	sub    ch,dh
  419489:	inc    ecx
  41948a:	cli    
  41948b:	ds test eax,0x15b7a907
  419491:	aad    0x29
  419493:	sbb    ebx,DWORD PTR [edx+esi*2]
  419496:	sbb    dh,BYTE PTR [edx+0x6b7b587c]
  41949c:	mov    edx,0xcdc63969
  4194a1:	adc    BYTE PTR [esi+0x5a8c9138],dl
  4194a7:	and    esp,DWORD PTR ds:0xe85bf93b
  4194ad:	xor    eax,0x4fd5e7ba
  4194b2:	sbb    DWORD PTR [ebp+ecx*4+0x12c51b1e],ebx
  4194b9:	sub    eax,0x91283124
  4194be:	bound  edi,QWORD PTR [ebx+0x56e2cebf]
  4194c4:	sub    eax,0xbaebaad8
  4194c9:	jg     0x4194ef
  4194cb:	shr    ch,0xe5
  4194ce:	retf   
  4194cf:	cmp    DWORD PTR [ecx+0xb],ecx
  4194d2:	imul   eax,DWORD PTR [edi-0x21f9d07f]
  4194d9:	jae    0x419527
  4194db:	jmp    0x165b0a50
  4194e0:	jo     0x419497
  4194e2:	mov    dl,ch
  4194e4:	(bad)  
  4194e5:	dec    eax
  4194e6:	jae    0x4194a7
  4194e8:	cmp    DWORD PTR [edi+0x658b23a],edi
  4194ee:	scas   al,BYTE PTR es:[edi]
  4194ef:	(bad)  
  4194f0:	adc    bl,BYTE PTR [edx+0x12ca7437]
  4194f6:	mov    edi,0x6800b1
  4194fb:	(bad)  
  4194fc:	int3   
  4194fd:	adc    DWORD PTR [ebx],esi
  4194ff:	bound  ebp,QWORD PTR [edx+eax*1-0x18]
  419503:	xor    edi,DWORD PTR [ebx-0x5d]
  419506:	(bad)  
  419507:	cmp    edi,DWORD PTR es:[eax-0x32]
  41950b:	inc    ebp
  41950c:	and    DWORD PTR [edi+ecx*1+0x4f70c50e],edx
  419513:	ret    0xadbb
  419516:	pop    ebp
  419517:	ja     0x41958f
  419519:	cdq    
  41951a:	out    dx,eax
  41951b:	fsub   QWORD PTR [edx-0x160c4bb3]
  419521:	jo     0x41953f
  419523:	mov    ch,0xe1
  419525:	test   BYTE PTR ds:0x572fbb7f,dl
  41952b:	mov    bl,0x8
  41952d:	mov    ds:0x28a5491b,al
  419532:	test   al,0x2
  419534:	and    al,ch
  419536:	sbb    DWORD PTR [ebx],edx
  419538:	jb     0x41954d
  41953a:	lahf   
  41953b:	jecxz  0x4195bc
  41953d:	icebp  
  41953e:	mov    ah,BYTE PTR [esi+0x3ccec588]
  419544:	retf   0xdb82
  419547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419548:	(bad)  
  419549:	fs xchg edi,eax
  41954b:	nop
  41954c:	adc    al,0x6f
  41954e:	mov    esp,DWORD PTR [edx+0x293bcfd6]
  419554:	and    BYTE PTR [eax-0x5cb03aa6],bh
  41955a:	(bad)  
  41955b:	call   0xc6e3f538
  419560:	iret   
  419561:	pop    ds
  419562:	xchg   ebp,eax
  419563:	test   eax,0xbbcb5584
  419568:	sub    al,0x9e
  41956a:	les    ebx,FWORD PTR [eax-0x44]
  41956d:	cs xchg ebx,eax
  41956f:	xor    BYTE PTR [esi+0x28],al
  419572:	test   eax,0x5d4541f
  419578:	or     BYTE PTR ds:0x15090296,dh
  41957e:	push   esp
  41957f:	lahf   
  419580:	mov    al,BYTE PTR [esi+0x2f9ffd95]
  419586:	in     eax,dx
  419587:	retf   
  419588:	cmc    
  419589:	cmp    al,0xb6
  41958b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41958c:	inc    edi
  41958d:	aas    
  41958e:	not    BYTE PTR [ebp+0x50ad9540]
  419594:	out    0x27,al
  419596:	push   ss
  419597:	sbb    edi,edi
  419599:	mov    gs,ecx
  41959b:	out    dx,eax
  41959c:	inc    ebp
  41959d:	mov    eax,DWORD PTR [ebx-0x30e29abd]
  4195a3:	cmp    eax,0xdf61f0bc
  4195a8:	pop    es
  4195a9:	les    edi,FWORD PTR [esi]
  4195ab:	aad    0xbb
  4195ad:	jecxz  0x4195d5
  4195af:	cs iret 
  4195b1:	mov    cl,0x2f
  4195b3:	in     al,dx
  4195b4:	adc    ebx,DWORD PTR [eax]
  4195b6:	and    al,0xc1
  4195b8:	cwde   
  4195b9:	sub    dh,bh
  4195bb:	das    
  4195bc:	or     al,0xf5
  4195be:	cmp    BYTE PTR [esi],ah
  4195c0:	je     0x419555
  4195c2:	test   BYTE PTR [esi],ah
  4195c4:	xor    eax,0x908196a5
  4195c9:	adc    eax,0xb2841a6c
  4195ce:	scas   al,BYTE PTR es:[edi]
  4195cf:	jno    0x4195fa
  4195d1:	rcl    BYTE PTR [ebp+0x50],0x9c
  4195d5:	mov    ebx,0x13c1e7
  4195da:	sti    
  4195db:	inc    edi
  4195dc:	les    edx,FWORD PTR [ebx+0x4c]
  4195df:	dec    ebx
  4195e1:	jecxz  0x4195d3
  4195e3:	js     0x41958a
  4195e5:	(bad)  
  4195e6:	push   es
  4195e7:	mov    esp,0xf0d53f93
  4195ec:	leave  
  4195ed:	(bad)  
  4195ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195f0:	xor    dh,BYTE PTR [ecx]
  4195f2:	lods   eax,DWORD PTR ds:[esi]
  4195f3:	sub    al,0xaa
  4195f5:	jp     0x41961f
  4195f7:	call   0xa999:0xc332a959
  4195fe:	ficom  WORD PTR [eax]
  419600:	stc    
  419601:	adc    ch,BYTE PTR [ebx-0x3a]
  419604:	pop    ebx
  419605:	ret    0xb2d8
  419608:	(bad)  
  419609:	xchg   edi,eax
  41960a:	stos   DWORD PTR es:[edi],eax
  41960b:	(bad)  
  41960c:	stos   BYTE PTR es:[edi],al
  41960d:	mov    ds:0x81d07494,al
  419612:	xchg   esi,eax
  419613:	adc    DWORD PTR [ebx+0x3bbf6b4b],0xb3feb4ba
  41961d:	ja     0x4195e1
  41961f:	fild   WORD PTR [ebx+ebx*8-0x1abc4e3e]
  419626:	jmp    0x26a7:0x4ad0e7ec
  41962d:	mov    ebx,0xcb36f6fb
  419632:	shl    BYTE PTR [ecx+0x36bf44a9],cl
  419638:	push   edi
  419639:	mov    esi,0x8b0fb518
  41963e:	stos   DWORD PTR es:[edi],eax
  41963f:	stos   BYTE PTR es:[edi],al
  419640:	out    dx,eax
  419641:	test   esi,eax
  419643:	dec    esp
  419644:	jae    0x419635
  419646:	pop    eax
  419647:	mov    cs,WORD PTR [esi]
  419649:	mov    eax,ds:0x2d9afcab
  41964e:	sub    ebx,ebp
  419650:	ds test esi,esp
  419653:	jo     0x4196c2
  419655:	push   0xffffff98
  419657:	mov    ch,0x66
  419659:	bswap  esp
  41965b:	xchg   ecx,ebx
  41965d:	retf   0x4c7b
  419660:	cmp    eax,0x76671d1f
  419665:	std    
  419666:	add    eax,0xfe9f2fae
  41966b:	jp     0x41967d
  41966d:	sub    eax,0x541b798b
  419672:	xchg   esi,eax
  419673:	fwait
  419674:	dec    ebx
  419675:	ins    DWORD PTR es:[edi],dx
  419676:	add    eax,0xb57f1515
  41967b:	adc    edx,DWORD PTR [edi+0x6070840f]
  419681:	mov    al,0x53
  419683:	out    0xba,al
  419685:	sar    DWORD PTR [ebx+0x2d80c611],1
  41968b:	cmc    
  41968c:	in     al,0xdd
  41968e:	lahf   
  41968f:	test   eax,0x2b51f53d
  419694:	xor    eax,0x4fdd26ab
  419699:	call   0xbdb121d7
  41969e:	jns    0x4196e2
  4196a0:	shr    DWORD PTR [ebx+edi*2],1
  4196a3:	into   
  4196a4:	retf   0x7246
  4196a7:	xchg   esp,eax
  4196a8:	jle    0x419636
  4196aa:	in     eax,0x63
  4196ac:	test   DWORD PTR [edi+0x3c],ecx
  4196af:	scas   eax,DWORD PTR es:[edi]
  4196b0:	pop    edx
  4196b1:	jae    0x4196be
  4196b3:	pop    ss
  4196b4:	cs mov ebx,0xd652f09e
  4196ba:	in     eax,0x6c
  4196bc:	lds    ecx,FWORD PTR [edx]
  4196be:	test   ebx,ecx
  4196c0:	pop    ebp
  4196c1:	scas   eax,DWORD PTR es:[edi]
  4196c2:	int3   
  4196c3:	(bad)  
  4196c4:	fwait
  4196c5:	aaa    
  4196c6:	cmc    
  4196c7:	fild   DWORD PTR [ebx-0x5b514a09]
  4196cd:	pop    ds
  4196ce:	inc    edi
  4196cf:	push   ss
  4196d0:	inc    ecx
  4196d1:	push   esi
  4196d2:	ss pop ds
  4196d4:	or     bl,dl
  4196d6:	adc    al,0x32
  4196d8:	or     eax,0xef41fd44
  4196dd:	enter  0x3a49,0x62
  4196e1:	pop    ecx
  4196e2:	enter  0xe90b,0x1e
  4196e6:	or     al,0xb6
  4196e8:	aaa    
  4196e9:	mov    cl,0x9d
  4196eb:	xor    eax,0x5819b4cd
  4196f0:	(bad)  
  4196f2:	cmp    edi,DWORD PTR [esi-0x52c09f70]
  4196f8:	or     esi,DWORD PTR [esi]
  4196fa:	into   
  4196fb:	lock sti 
  4196fd:	inc    edx
  4196fe:	ja     0x4196a1
  419700:	push   es
  419701:	aad    0x22
  419703:	icebp  
  419704:	(bad)  
  419705:	and    ecx,DWORD PTR [ebp-0x10]
  419708:	jl     0x4196f5
  41970a:	push   0xfaf2da62
  41970f:	cmp    eax,0xe9c46920
  419714:	jbe    0x41978e
  419716:	adc    al,ch
  419718:	xchg   BYTE PTR [ebp-0x16],ah
  41971b:	push   ds
  41971c:	push   ds
  41971d:	adc    al,0x12
  41971f:	pop    eax
  419720:	pop    edi
  419721:	mov    edx,0x637efcd2
  419726:	inc    edi
  419727:	cli    
  419728:	loope  0x4196bf
  41972a:	cld    
  41972b:	aad    0x75
  41972d:	fdiv   st,st(3)
  41972f:	nop
  419730:	les    edi,FWORD PTR [edx-0x9]
  419733:	push   ds
  419734:	in     eax,0x1f
  419736:	mov    BYTE PTR [esi-0x33],0x7e
  41973a:	pop    ebp
  41973b:	outs   dx,BYTE PTR ds:[esi]
  41973c:	mov    ah,0x9
  41973e:	sub    dl,ah
  419740:	pop    ebp
  419741:	das    
  419742:	scas   eax,DWORD PTR es:[edi]
  419743:	jnp    0x4196ec
  419745:	daa    
  419746:	push   ds
  419747:	add    DWORD PTR [ebx+0x8],0xffffffa1
  41974b:	js     0x4197bd
  41974d:	mov    ecx,0x2f544e55
  419752:	adc    eax,0x3ec80c77
  419757:	test   eax,0xb4592904
  41975c:	add    esi,DWORD PTR [esi+0x139d18f2]
  419762:	or     cl,bh
  419764:	mov    esp,0x68103afc
  419769:	mov    al,0xcd
  41976b:	or     eax,0xf6b69560
  419770:	cmp    cl,ah
  419772:	pop    ebx
  419773:	imul   edi,edx,0xc8a69265
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	lahf   
  41977b:	pop    edx
  41977c:	ret    0x8810
  41977f:	push   ebp
  419780:	jnp    0x4197b0
  419782:	mov    bh,0x6b
  419784:	or     edi,0xffffff84
  419787:	sub    BYTE PTR [ecx+0x19f9a9f9],ah
  41978d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41978e:	hlt    
  41978f:	lods   eax,DWORD PTR ds:[esi]
  419790:	fsubr  QWORD PTR [esi-0x7a]
  419793:	rcr    bh,cl
  419795:	inc    esp
  419796:	and    al,0xa0
  419798:	lahf   
  419799:	mov    eax,ds:0xf648d5aa
  41979e:	loop   0x41973a
  4197a0:	rcl    BYTE PTR [ebx-0x52],0xa5
  4197a4:	push   edi
  4197a5:	xchg   esi,eax
  4197a6:	dec    esi
  4197a7:	and    eax,0xfcfb52a8
  4197ac:	popf   
  4197ad:	dec    ebp
  4197ae:	jge    0x419761
  4197b0:	and    DWORD PTR [edi-0x142817a7],ebp
  4197b6:	adc    eax,0x40dd6862
  4197bb:	pop    esp
  4197bc:	stc    
  4197bd:	je     0x41983a
  4197bf:	or     DWORD PTR [ecx-0x11121236],ebp
  4197c5:	pushf  
  4197c6:	out    dx,al
  4197c7:	jp     0x4197d5
  4197c9:	fld    QWORD PTR [edx+edi*8-0x6b]
  4197cd:	and    DWORD PTR [esp+edi*4],esi
  4197d0:	clc    
  4197d1:	inc    edx
  4197d2:	fdivp  st(1),st
  4197d4:	mov    esi,0x2f177a71
  4197d9:	shr    esi,cl
  4197db:	jmp    0x4201f4ff
  4197e0:	xchg   ecx,eax
  4197e1:	mov    eax,0xf96ef983
  4197e6:	iret   
  4197e7:	adc    eax,0xbfbbf1bb
  4197ec:	jl     0x4197e3
  4197ee:	outs   dx,DWORD PTR ds:[esi]
  4197ef:	push   cs
  4197f0:	push   ebp
  4197f1:	add    BYTE PTR [ebx+0x6f014a24],dl
  4197f7:	cli    
  4197f8:	inc    ebp
  4197f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197fa:	nop
  4197fb:	xor    esi,eax
  4197fd:	push   ecx
  4197fe:	or     DWORD PTR cs:[ebp-0x63],ebp
  419802:	scas   al,BYTE PTR es:[edi]
  419803:	div    ebx
  419805:	sbb    BYTE PTR [esi],ah
  419807:	mov    bl,BYTE PTR ds:0x7f3a4d8c
  41980d:	sub    al,0x7f
  41980f:	fld    QWORD PTR [edi]
  419811:	mov    ds:0x9be06511,al
  419816:	sbb    BYTE PTR [ebp-0x2b93ade0],ah
  41981c:	hlt    
  41981d:	adc    DWORD PTR [ecx+0x1801af0],0x81dfe674
  419827:	scas   al,BYTE PTR es:[edi]
  419828:	call   0x1c3a7405
  41982d:	ret    0xb926
  419830:	dec    ebp
  419831:	inc    edx
  419832:	mov    cl,0x76
  419834:	shl    BYTE PTR [esi+0x59],1
  419837:	loopne 0x4198a8
  419839:	xor    al,0xe9
  41983b:	mov    edx,0x2727b74a
  419840:	retf   
  419841:	sti    
  419842:	jb     0x419846
  419844:	rcl    DWORD PTR [esi],1
  419846:	xchg   edx,eax
  419847:	daa    
  419848:	daa    
  419849:	inc    edx
  41984a:	int    0x3
  41984c:	and    ecx,ecx
  41984e:	pop    edi
  41984f:	xchg   ebx,eax
  419850:	and    dl,BYTE PTR [eax]
  419852:	sbb    dh,0x63
  419855:	aam    0x52
  419857:	xchg   edx,eax
  419858:	xor    al,0x59
  41985a:	nop
  41985b:	push   esi
  41985c:	mov    ebx,0xfd8590fd
  419861:	out    0xe8,al
  419863:	mov    ecx,0xd84dd41e
  419868:	mov    esp,0x421bbe57
  41986d:	jne    0x419890
  41986f:	daa    
  419870:	pop    ds
  419871:	ins    BYTE PTR es:[edi],dx
  419872:	xor    esp,DWORD PTR [edi]
  419874:	or     dh,BYTE PTR [edx+ebp*1-0x217a1c90]
  41987b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41987c:	xchg   edi,eax
  41987d:	sub    al,BYTE PTR [ecx+0x5f9c7a31]
  419883:	loope  0x4198a5
  419885:	retf   0xc09c
  419888:	or     al,0xd0
  41988a:	mov    bh,0x4d
  41988c:	lods   al,BYTE PTR ds:[esi]
  41988d:	or     ch,BYTE PTR [esi-0x71]
  419890:	pop    edx
  419891:	scas   al,BYTE PTR es:[edi]
  419892:	cmc    
  419893:	or     DWORD PTR [esi-0x2d],esp
  419896:	or     al,0x4e
  419898:	cdq    
  419899:	sub    al,0x93
  41989b:	jecxz  0x419855
  41989d:	lods   eax,DWORD PTR ds:[esi]
  41989e:	int    0xa8
  4198a0:	cwde   
  4198a1:	xchg   DWORD PTR [esp-0x21],ebp
  4198a5:	mov    ch,0x95
  4198a7:	and    DWORD PTR [esi],ebx
  4198a9:	dec    edx
  4198aa:	mov    ah,0xa3
  4198ac:	jmp    0x419837
  4198ae:	dec    edi
  4198af:	jg     0x4198b5
  4198b1:	inc    ebx
  4198b2:	mov    dl,0x20
  4198b4:	addr16 retf 0xa984
  4198b8:	add    eax,0x48eec9c9
  4198bd:	js     0x419869
  4198bf:	pop    ds
  4198c0:	dec    eax
  4198c1:	xchg   edx,eax
  4198c2:	cmova  eax,edi
  4198c5:	inc    ebx
  4198c6:	mov    ebx,DWORD PTR [ecx]
  4198c8:	sub    eax,0x3351c5b4
  4198cd:	add    al,0x74
  4198cf:	in     al,dx
  4198d0:	mul    BYTE PTR [ecx-0x63]
  4198d3:	dec    ecx
  4198d4:	leave  
  4198d5:	jg     0x4198d5
  4198d7:	cli    
  4198d8:	mov    dh,0x90
  4198da:	sbb    DWORD PTR [edi-0x5db2c45a],edx
  4198e0:	std    
  4198e1:	shl    bh,1
  4198e3:	push   edi
  4198e4:	test   al,0x12
  4198e6:	aas    
  4198e7:	and    eax,0x78cf38b2
  4198ec:	data16 jne 0x4198f7
  4198ef:	xchg   esp,eax
  4198f0:	pop    edx
  4198f1:	(bad)  
  4198f2:	fnclex 
  4198f4:	add    eax,0x61e28cc3
  4198f9:	add    eax,0x9ee59711
  4198fe:	add    al,0x71
  419900:	test   eax,0x525b16db
  419905:	or     BYTE PTR [edx+0x34],ch
  419908:	cmc    
  419909:	ja     0x41994b
  41990b:	ds packuswb mm3,mm6
  41990f:	cmp    ah,BYTE PTR [eax+0x17974892]
  419915:	sbb    BYTE PTR [ebp+ecx*4-0x69cc95a8],al
  41991c:	sahf   
  41991d:	sbb    eax,ebx
  41991f:	pop    ds
  419920:	mov    al,ds:0x93625496
  419925:	pop    es
  419926:	and    BYTE PTR [ebx],dh
  419928:	push   0xffffffdb
  41992a:	retf   
  41992b:	inc    ebx
  41992c:	add    ecx,DWORD PTR [edx+0x61]
  41992f:	mov    al,0xd
  419931:	sbb    ah,BYTE PTR ds:0xf6a70ceb
  419937:	pop    ecx
  419938:	jmp    0xf7d6bbb8
  41993d:	lahf   
  41993e:	xchg   edi,eax
  41993f:	fs lock sub eax,0x1a7acbc5
  419946:	lea    ebp,[esi]
  419948:	add    al,0x60
  41994a:	xor    bl,BYTE PTR [esi]
  41994c:	(bad)  
  41994d:	ss mov dl,0x35
  419950:	jbe    0x41998d
  419952:	sbb    BYTE PTR [ecx+0x69],bh
  419955:	icebp  
  419956:	cmp    edi,DWORD PTR ds:0xe2e13ea9
  41995c:	mov    BYTE PTR [ebp-0x4d19e9df],ch
  419962:	int    0x6
  419964:	mov    edx,0x78091e25
  419969:	xor    DWORD PTR [edx+0x751e7612],edx
  41996f:	xchg   esp,eax
  419970:	scas   al,BYTE PTR es:[edi]
  419971:	daa    
  419972:	inc    eax
  419973:	xor    ebp,esi
  419975:	sbb    BYTE PTR [ebx+0x4a5ccb70],al
  41997b:	lock stc 
  41997d:	push   es
  41997e:	cli    
  41997f:	jne    0x419983
  419981:	inc    eax
  419982:	adc    al,BYTE PTR [edx]
  419984:	add    DWORD PTR [ebp-0x15],edx
  419987:	pop    ss
  419988:	dec    esp
  419989:	pop    esp
  41998a:	(bad)  
  41998b:	ja     0x419910
  41998d:	repnz outs dx,BYTE PTR ds:[esi]
  41998f:	jg     0x4199ec
  419991:	push   es
  419992:	int    0x70
  419994:	cmp    al,ch
  419996:	aad    0xde
  419998:	jle    0x419922
  41999a:	jne    0x4199d0
  41999c:	mov    esp,0x105805f2
  4199a1:	add    edi,DWORD PTR [edi]
  4199a3:	inc    ebx
  4199a4:	and    eax,0x11b9581c
  4199a9:	mov    cl,0x22
  4199ab:	repz inc esp
  4199ad:	dec    eax
  4199ae:	add    eax,edi
  4199b0:	push   ebx
  4199b2:	stos   BYTE PTR es:[edi],al
  4199b3:	pop    es
  4199b4:	sti    
  4199b5:	aas    
  4199b6:	rcl    esi,cl
  4199b8:	cmp    edi,DWORD PTR [esi+0x6]
  4199bb:	pop    ds
  4199bc:	sub    ecx,edx
  4199be:	pop    esp
  4199bf:	ret    0x56a1
  4199c2:	sub    BYTE PTR [eax+0x6e256c81],0x1b
  4199c9:	int3   
  4199ca:	lea    ebx,[edx+0x1e]
  4199cd:	sbb    al,0x6
  4199cf:	retf   
  4199d0:	fmul   DWORD PTR [esi+0x1521711]
  4199d6:	mov    DWORD PTR [ebx+0x40e3c274],eax
  4199dc:	inc    esi
  4199dd:	loopne 0x419a42
  4199df:	push   edi
  4199e0:	mov    eax,0xb45171d
  4199e5:	sub    dl,cl
  4199e7:	sbb    BYTE PTR [edx+0x5a],cl
  4199ea:	je     0x4199f6
  4199ec:	jp     0x419a66
  4199ee:	pop    edx
  4199ef:	adc    BYTE PTR [ebp+0x1268bdc8],ch
  4199f5:	jl     0x4199c7
  4199f7:	mov    edi,?
  4199f9:	push   es
  4199fa:	or     dl,dh
  4199fc:	out    0x27,eax
  4199fe:	jae    0x419a00
  419a00:	outs   dx,DWORD PTR ds:[esi]
  419a01:	xor    eax,0x72b2678c
  419a06:	and    dl,BYTE PTR [ecx+0x763e2261]
  419a0c:	(bad)  
  419a0d:	or     eax,0x2f3af22c
  419a12:	call   0x6e536f95
  419a17:	enter  0x4137,0xce
  419a1b:	addr16 or eax,0x56c0d337
  419a21:	retf   0xfca7
  419a24:	add    dh,BYTE PTR [ebx+0x76]
  419a27:	xchg   esp,eax
  419a28:	cmp    eax,0x82dbd3b7
  419a2d:	dec    edx
  419a2e:	stos   DWORD PTR es:[edi],eax
  419a2f:	aam    0xa7
  419a31:	sbb    ch,BYTE PTR [esi+0x2181e912]
  419a37:	ficomp WORD PTR [eax+0x4cc76e0]
  419a3d:	mov    DWORD PTR [ebx],0xf4e12953
  419a43:	and    BYTE PTR ds:0x441201b7,0x9e
  419a4a:	in     al,0xda
  419a4c:	adc    edx,esp
  419a4e:	jo     0x4199f2
  419a50:	fst    DWORD PTR [ebp-0x6c]
  419a53:	cs nop
  419a55:	cmp    bl,ch
  419a57:	je     0x419a7d
  419a59:	dec    edx
  419a5a:	inc    esi
  419a5b:	imul   eax,DWORD PTR [ebp-0x76fb7d07],0x4a
  419a62:	adc    al,BYTE PTR [ecx-0x4ad87782]
  419a68:	add    DWORD PTR [edi-0x19],0xffffffb7
  419a6c:	pop    ss
  419a6d:	adc    eax,0x3ecb171f
  419a72:	scas   eax,DWORD PTR es:[edi]
  419a73:	sub    cl,BYTE PTR [edi-0x73]
  419a76:	lea    edx,[eax-0x27be6414]
  419a7c:	add    esi,DWORD PTR [esi+0x4ce5a3d0]
  419a82:	pop    ebx
  419a83:	add    esp,DWORD PTR [ebx+0x17df160b]
  419a89:	push   eax
  419a8a:	stos   BYTE PTR es:[edi],al
  419a8b:	sub    DWORD PTR [eax-0xf],0x3e
  419a8f:	mov    esi,0x116b0a14
  419a94:	pop    edx
  419a95:	push   ebp
  419a96:	retf   
  419a97:	ja     0x419aa3
  419a99:	mov    ah,0xfa
  419a9b:	pop    eax
  419a9c:	mov    ds:0x68032811,eax
  419aa1:	(bad)  
  419aa4:	push   0xc0a01584
  419aa9:	sbb    eax,0x134567d5
  419aae:	sub    edi,DWORD PTR [ebx+ebp*8+0x2a]
  419ab2:	jg     0x419a65
  419ab4:	cmp    BYTE PTR [eax-0x289561a8],cl
  419aba:	jmp    DWORD PTR ds:0xc26f5484
  419ac0:	jnp    0x419a7d
  419ac2:	jle    0x419b28
  419ac4:	lods   al,BYTE PTR ds:[esi]
  419ac5:	or     DWORD PTR [ecx+ebx*1],ebx
  419ac8:	sti    
  419ac9:	inc    esi
  419aca:	jnp    0x419a54
  419acc:	push   ebx
  419acd:	out    dx,al
  419ace:	fwait
  419acf:	std    
  419ad0:	adc    ch,0xfd
  419ad3:	mov    ebp,0x16f4ac34
  419ad8:	pop    esi
  419ad9:	(bad)  
  419adb:	mov    ch,0xd6
  419add:	jle    0x419b2a
  419adf:	retf   0xa3e8
  419ae2:	mul    DWORD PTR [ecx+0x7f703899]
  419ae8:	cmp    edi,DWORD PTR [ebx+eiz*1]
  419aeb:	cld    
  419aec:	push   ebx
  419aed:	jg     0x419a9f
  419aef:	adc    cl,BYTE PTR [ebx]
  419af1:	cmp    DWORD PTR [ebx+0x0],ecx
  419af4:	sbb    bh,ch
  419af6:	jl     0x419b1e
  419af8:	sar    BYTE PTR [esp+edx*8-0xacb103d],0x46
  419b00:	mov    edi,DWORD PTR [eax+0x2f]
  419b03:	push   eax
  419b04:	packuswb mm4,QWORD PTR [eax+0x20]
  419b08:	popa   
  419b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b0a:	or     bl,0xe2
  419b0d:	cmp    eax,0xb2bd2c43
  419b12:	xor    esp,eax
  419b14:	inc    edx
  419b15:	jb     0x419b2e
  419b17:	ret    
  419b18:	repnz retf 0x8a00
  419b1c:	mov    edx,0x3dc078f0
  419b21:	or     bl,ah
  419b23:	mov    esp,0xba6fc004
  419b28:	icebp  
  419b29:	scas   eax,DWORD PTR es:[edi]
  419b2a:	add    eax,0x91785525
  419b2f:	jecxz  0x419b73
  419b31:	xchg   ebp,eax
  419b32:	push   cs
  419b33:	pop    eax
  419b34:	jmp    edi
  419b36:	je     0x419b05
  419b38:	repnz popw es
  419b3b:	xor    edx,0x59
  419b3e:	mov    ?,WORD PTR [ecx+0x25]
  419b41:	in     al,0x7c
  419b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b44:	in     eax,dx
  419b45:	sbb    cl,BYTE PTR [edi]
  419b47:	imul   edi,DWORD PTR [edi+0x66a88929],0xc1ebfd7c
  419b51:	mov    ecx,0xda191fa5
  419b56:	ret    0x71c7
  419b59:	mov    eax,0xe978e07b
  419b5e:	dec    eax
  419b5f:	mov    edi,0xcd15a8e6
  419b64:	fcomp  QWORD PTR [edx-0x6f]
  419b67:	inc    esp
  419b68:	sub    eax,0xeb6962f1
  419b6d:	mov    al,ds:0x12f3eee3
  419b72:	push   ebx
  419b73:	dec    eax
  419b74:	jmp    0x301f2bbb
  419b79:	mov    ecx,DWORD PTR [bp+di]
  419b7c:	sub    eax,0x47b7cf20
  419b81:	popa   
  419b82:	(bad)  
  419b83:	les    ecx,FWORD PTR [ebx+eax*4-0x42]
  419b87:	xor    ah,BYTE PTR [ebp-0x1d]
  419b8a:	(bad)  
  419b8b:	jo     0x419bb2
  419b8d:	sbb    eax,0xef132995
  419b92:	or     BYTE PTR [edi],0xdb
  419b95:	or     edi,DWORD PTR [esi-0x2055ba54]
  419b9b:	xchg   esi,eax
  419b9c:	pop    edx
  419b9d:	jmp    0x1f85:0xaa6fe20b
  419ba4:	imul   ebp,ebx,0xc358c9e5
  419baa:	push   es
  419bab:	push   eax
  419bac:	repz mov ebp,0x21c77916
  419bb2:	cmp    edi,DWORD PTR [esi-0x7263957e]
  419bb8:	mov    edx,0x5a10fa25
  419bbe:	aaa    
  419bbf:	add    al,0xad
  419bc1:	sti    
  419bc2:	jge    0x419b92
  419bc4:	adc    ah,cl
  419bc6:	repnz mov bl,0x22
  419bc9:	inc    esi
  419bca:	mov    ch,bh
  419bcc:	fild   QWORD PTR [ecx+eiz*4+0x104aadaa]
  419bd3:	dec    esi
  419bd4:	add    ch,BYTE PTR [ecx]
  419bd6:	mov    edi,0x62445ac2
  419bdb:	loop   0x419b5e
  419bdd:	adc    DWORD PTR [ecx+0x49],edx
  419be0:	dec    ebp
  419be1:	call   0xa82bf9ac
  419be6:	test   al,0xbd
  419be8:	and    bl,BYTE PTR [bp-0x157]
  419bed:	lods   eax,DWORD PTR ds:[esi]
  419bee:	and    dh,BYTE PTR [ecx+edi*2]
  419bf1:	ret    0x739d
  419bf4:	jb     0x419b95
  419bf6:	push   cs
  419bf7:	retf   
  419bf8:	and    al,0x5b
  419bfa:	pop    ds
  419bfb:	out    0x36,al
  419bfd:	cmp    BYTE PTR [ebp-0x1e857e88],bh
  419c03:	out    dx,eax
  419c04:	push   es
  419c05:	hlt    
  419c06:	jnp    0x419c54
  419c08:	or     eax,0xea5813c9
  419c0e:	daa    
  419c0f:	xor    eax,0xccea26e7
  419c14:	sub    ah,cl
  419c16:	jbe    0x419c5f
  419c18:	mov    eax,0x1f33a469
  419c1d:	in     al,0x6
  419c1f:	lods   al,BYTE PTR ds:[esi]
  419c20:	or     ebp,DWORD PTR [ecx-0x1f0686c5]
  419c26:	in     al,dx
  419c27:	leave  
  419c28:	mov    dl,0xce
  419c2a:	int3   
  419c2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c2c:	push   ss
  419c2d:	push   ecx
  419c2e:	repz fsubp st(7),st
  419c31:	xor    edx,ebx
  419c33:	(bad)  
  419c34:	clc    
  419c35:	push   edx
  419c36:	pusha  
  419c37:	xor    eax,0x144156b
  419c3c:	scas   al,BYTE PTR es:[edi]
  419c3d:	mov    ds:0xf42c69cb,al
  419c42:	xor    al,0xa1
  419c44:	push   edx
  419c45:	pop    edi
  419c46:	jne    0x419c1a
  419c48:	inc    edx
  419c49:	jl     0x419c3a
  419c4b:	push   0x1d
  419c4d:	xchg   DWORD PTR [ecx+0x22aff107],ebp
  419c53:	and    al,0x9b
  419c55:	popf   
  419c56:	in     eax,0xb5
  419c58:	js     0x419c6a
  419c5a:	(bad)  
  419c5b:	adc    DWORD PTR ds:0x856bf1ca,edi
  419c61:	out    dx,eax
  419c62:	retf   0xdee2
  419c65:	sub    DWORD PTR ds:0x9b11607d,ebx
  419c6b:	adc    DWORD PTR [edi+0x1101a21],edx
  419c71:	pusha  
  419c72:	jg     0x419bf6
  419c74:	(bad)  
  419c75:	std    
  419c76:	mov    cs,edi
  419c78:	jae    0x419c71
  419c7a:	xchg   ecx,eax
  419c7b:	mov    cl,0xa9
  419c7d:	xchg   ecx,eax
  419c7e:	pop    ds
  419c7f:	sub    al,0xbb
  419c81:	pop    eax
  419c82:	rol    DWORD PTR [ebp-0x378ed067],0xe3
  419c89:	push   esp
  419c8a:	mov    eax,ds:0xc4896ecf
  419c8f:	icebp  
  419c90:	retf   0x504f
  419c93:	dec    ecx
  419c94:	or     eax,0xc135793
  419c99:	and    edx,DWORD PTR [esi]
  419c9b:	dec    esp
  419c9c:	xchg   ebp,eax
  419c9d:	adc    DWORD PTR [eax-0x3d],0x67527bb6
  419ca4:	pop    ebx
  419ca5:	je     0x419cd4
  419ca7:	ror    DWORD PTR [ebx],0x82
  419caa:	jae    0x419ce6
  419cac:	out    dx,eax
  419cad:	pop    esi
  419cae:	mov    ah,ah
  419cb0:	test   DWORD PTR [ecx],edi
  419cb2:	jecxz  0x419d04
  419cb4:	pop    ecx
  419cb5:	es scas eax,DWORD PTR es:[edi]
  419cb7:	xchg   DWORD PTR [ebp+ecx*2+0x54],eax
  419cbb:	mov    esi,0x820faa23
  419cc0:	imul   eax,DWORD PTR [eax-0x58],0x1d7dfab7
  419cc7:	or     bh,bl
  419cc9:	adc    eax,DWORD PTR [esi]
  419ccb:	sub    al,0xaf
  419ccd:	(bad)  
  419cce:	and    ch,BYTE PTR [ebx+0x35]
  419cd1:	sub    ebx,DWORD PTR [esi-0x66cfa7de]
  419cd7:	jo     0x419cd2
  419cd9:	mov    BYTE PTR [ebx+edx*1-0x6d],ch
  419cdd:	fwait
  419cde:	xor    BYTE PTR [ebx],0x55
  419ce1:	sub    dl,cl
  419ce3:	push   edx
  419ce4:	sub    BYTE PTR [eax+0x56],0xd5
  419ce8:	cmp    esi,esp
  419cea:	push   cs
  419ceb:	add    BYTE PTR [eax+edi*2-0x4dc1fdbd],al
  419cf2:	mov    bh,0xf5
  419cf4:	or     eax,0x4cffa5a2
  419cf9:	mov    eax,0xd1d98836
  419cfe:	(bad)  
  419d00:	mov    BYTE PTR [edx+0x3c6f3c29],bl
  419d06:	cmp    BYTE PTR [edx],ch
  419d08:	and    ch,bl
  419d0a:	in     al,dx
  419d0b:	or     dh,BYTE PTR [esi-0x47]
  419d0e:	cmp    BYTE PTR ds:0xe748b4b4,cl
  419d14:	xor    DWORD PTR [edx-0x738042d],0xffffff81
  419d1b:	sbb    eax,0x81cc94bf
  419d20:	xchg   ecx,eax
  419d21:	mov    ecx,0xab39ee9d
  419d26:	stc    
  419d27:	adc    BYTE PTR [edx+eax*8-0x1],cl
  419d2b:	push   ds
  419d2c:	mov    BYTE PTR [edi+0x3c9c2606],bh
  419d32:	sti    
  419d33:	xor    al,0x11
  419d35:	daa    
  419d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d37:	jo     0x419d73
  419d39:	(bad)  
  419d3a:	sub    bh,BYTE PTR [eax+esi*8-0x7f245c38]
  419d41:	dec    esi
  419d42:	mov    fs,WORD PTR [ebx-0x3c62d363]
  419d48:	dec    edi
  419d49:	out    dx,eax
  419d4a:	sub    al,0x67
  419d4c:	shr    DWORD PTR [edx+0x19],1
  419d4f:	add    al,0x6a
  419d51:	jmp    0xb5d:0xff5797a6
  419d58:	mov    ah,0x55
  419d5a:	das    
  419d5b:	jns    0x419d76
  419d5d:	aad    0x20
  419d5f:	dec    ecx
  419d60:	ja     0x419d4e
  419d62:	(bad)  
  419d63:	dec    esi
  419d64:	push   edx
  419d65:	inc    ebp
  419d66:	add    eax,0x2e93674e
  419d6b:	mov    al,0x14
  419d6d:	data16 lods al,BYTE PTR ds:[esi]
  419d6f:	ret    
  419d70:	xor    eax,0xe2e00194
  419d75:	mov    ?,WORD PTR [esp+eax*1]
  419d78:	jl     0x419db5
  419d7a:	xchg   edi,eax
  419d7b:	mov    eax,ds:0x6529e7ca
  419d80:	xchg   esi,eax
  419d81:	and    ah,ah
  419d83:	pop    esp
  419d84:	sub    eax,0x1d3b7c84
  419d89:	fidiv  DWORD PTR [esi+ecx*1]
  419d8c:	inc    ecx
  419d8d:	out    0x8,al
  419d8f:	cmp    BYTE PTR [ecx+edi*2+0x11],0x5d
  419d94:	jnp    0x419d5d
  419d96:	or     DWORD PTR [edx],esp
  419d98:	test   al,0xc3
  419d9a:	aam    0xb6
  419d9c:	inc    eax
  419d9d:	add    eax,ebp
  419d9f:	mov    cl,0xe3
  419da1:	in     al,0x48
  419da3:	mov    edx,DWORD PTR [edx+0x5f5acc81]
  419da9:	add    DWORD PTR [ebp+ebp*1-0x6b],edx
  419dad:	repz jge 0x419d58
  419db0:	nop
  419db1:	cmc    
  419db2:	test   BYTE PTR [esi+eax*2+0x46],0xf7
  419db7:	mov    ecx,fs
  419db9:	bound  eax,QWORD PTR [edx+ebx*8+0x7efecb5e]
  419dc0:	nop
  419dc1:	dec    esp
  419dc2:	rcl    DWORD PTR [ecx+eiz*2-0x6de0e10e],cl
  419dc9:	pop    ss
  419dca:	into   
  419dcb:	push   edx
  419dcc:	lds    eax,FWORD PTR [edi]
  419dce:	or     DWORD PTR [ecx],ebx
  419dd0:	cdq    
  419dd1:	xor    eax,0xf2cb858c
  419dd6:	pop    eax
  419dd7:	iret   
  419dd8:	push   ds
  419dd9:	or     al,0x8a
  419ddb:	xchg   ecx,ebp
  419ddd:	inc    ebp
  419dde:	in     al,dx
  419ddf:	in     al,0xb7
  419de1:	cmp    BYTE PTR [ebp+eiz*8-0x4e89c8fc],0x5a
  419de9:	popf   
  419dea:	aam    0x48
  419dec:	push   0x4edcdbd9
  419df1:	shr    dh,1
  419df3:	outs   dx,BYTE PTR ds:[esi]
  419df4:	push   ds
  419df5:	push   ds
  419df6:	sub    al,0xb4
  419df8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419df9:	push   cs
  419dfa:	or     dl,bl
  419dfc:	xor    al,0x5d
  419dfe:	stc    
  419dff:	push   0xfffffff3
  419e01:	fs (bad) 
  419e03:	mul    BYTE PTR [ebx]
  419e05:	mov    bl,0x4b
  419e07:	popa   
  419e08:	nop
  419e09:	dec    esi
  419e0a:	push   ebx
  419e0b:	inc    edi
  419e0c:	outs   dx,DWORD PTR ds:[esi]
  419e0d:	rcl    BYTE PTR [ebx+0x644ee076],cl
  419e13:	push   ecx
  419e14:	pop    esi
  419e15:	mov    edi,0xf1d6b347
  419e1a:	rol    DWORD PTR [ebp+0x6b],0x71
  419e1e:	sahf   
  419e1f:	inc    edi
  419e20:	shl    BYTE PTR [eax+0x32284209],cl
  419e26:	pop    ebp
  419e27:	push   edi
  419e28:	cmovbe esp,DWORD PTR [ecx+0x77656c1d]
  419e2f:	aad    0x16
  419e31:	imul   ebx,DWORD PTR gs:[esi+edx*1+0x4d],0xffcb98b9
  419e3a:	and    bl,ah
  419e3c:	jmp    0x419e10
  419e3e:	jae    0x419dc3
  419e40:	ss loope 0x419e4d
  419e43:	cmp    BYTE PTR [ebp+0x21],dl
  419e46:	loop   0x419de3
  419e48:	pop    edx
  419e49:	mov    cl,0xdb
  419e4b:	call   0x5d9b:0x2107a6aa
  419e52:	stc    
  419e53:	or     BYTE PTR [edi+0x29],ch
  419e56:	dec    esi
  419e57:	xchg   edi,eax
  419e58:	jns    0x419e96
  419e5a:	dec    edi
  419e5b:	stc    
  419e5c:	fistp  WORD PTR [ebx]
  419e5e:	ret    
  419e5f:	mov    ds:0xb52a13b9,al
  419e64:	add    esi,DWORD PTR [esi+edx*8+0x13d864c]
  419e6b:	push   eax
  419e6c:	data16 (bad) 
  419e6e:	stos   DWORD PTR es:[edi],eax
  419e6f:	push   esp
  419e70:	xchg   ebp,eax
  419e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e72:	xchg   esp,eax
  419e73:	(bad)  
  419e74:	cmp    ecx,DWORD PTR [edi+0x10c8e385]
  419e7a:	out    dx,eax
  419e7b:	sub    edi,ecx
  419e7d:	dec    edi
  419e7e:	not    BYTE PTR ds:0x6ed28e66
  419e84:	dec    esi
  419e85:	ja     0x419e1d
  419e87:	call   0x88523f49
  419e8c:	mov    esp,0x1fddb546
  419e91:	jne    0x419e49
  419e93:	loope  0x419e4f
  419e95:	pop    esi
  419e96:	bound  esp,QWORD PTR [esi+edi*8+0x1ba9de9]
  419e9d:	es pop ebp
  419e9f:	nop
  419ea0:	jae    0x419f02
  419ea2:	shl    BYTE PTR [edx-0x16bcc3b2],0xb4
  419ea9:	inc    eax
  419eaa:	icebp  
  419eab:	add    DWORD PTR [ebp+0x68],edi
  419eae:	xchg   edx,eax
  419eaf:	xor    al,0xbf
  419eb1:	pop    ds
  419eb2:	cdq    
  419eb3:	or     eax,0x8ec1627
  419eb8:	dec    ebx
  419eb9:	ins    BYTE PTR es:[edi],dx
  419eba:	fimul  DWORD PTR [eax]
  419ebc:	jmp    0x7795ea90
  419ec1:	xchg   ebp,eax
  419ec2:	add    al,0xdf
  419ec4:	mov    ah,0xa4
  419ec6:	fs sub al,0x85
  419ec9:	push   edi
  419eca:	jecxz  0x419ee5
  419ecc:	jmp    0x419eda
  419ece:	idiv   DWORD PTR [eax+0x5103133c]
  419ed4:	outs   dx,DWORD PTR ds:[esi]
  419ed5:	scas   al,BYTE PTR es:[edi]
  419ed6:	jo     0x419e59
  419ed8:	add    DWORD PTR [ecx*4+0x10b689aa],ecx
  419edf:	ror    cl,cl
  419ee1:	push   0xf260b20a
  419ee6:	scas   al,BYTE PTR es:[edi]
  419ee7:	mov    ch,0xa4
  419ee9:	ret    
  419eea:	xor    bl,BYTE PTR [ecx+0x2a14d064]
  419ef0:	jl     0x419f53
  419ef2:	jmp    0x26a84238
  419ef7:	pmaxub mm1,QWORD PTR [esi]
  419efa:	push   esi
  419efb:	(bad)
  419eff:	sbb    ah,BYTE PTR [ebx+0x14]
  419f02:	mov    BYTE PTR [edx],dh
  419f04:	popf   
  419f05:	sbb    ecx,DWORD PTR [esi+0x50844268]
  419f0b:	xor    dl,0x4a
  419f0e:	push   0xffffffd8
  419f10:	je     0x419f49
  419f12:	pop    ecx
  419f13:	inc    ebp
  419f14:	or     eax,0xaa3800f6
  419f19:	push   edi
  419f1a:	ror    DWORD PTR [ebx-0x38],1
  419f1d:	jge    0x419ea4
  419f1f:	push   eax
  419f20:	jno    0x419f02
  419f22:	popa   
  419f23:	inc    esi
  419f24:	xchg   BYTE PTR [ebp-0x2c354984],bl
  419f2a:	fist   WORD PTR [ecx]
  419f2c:	dec    esp
  419f2d:	dec    esi
  419f2e:	sub    bh,0x9d
  419f31:	dec    ebp
  419f32:	jmp    0x419f2c
  419f34:	push   eax
  419f35:	sub    eax,0x620d8977
  419f3a:	scas   eax,DWORD PTR es:[edi]
  419f3b:	add    BYTE PTR [esi],dl
  419f3d:	jnp    0x419f10
  419f3f:	retf   
  419f40:	jno    0x419f6f
  419f42:	mov    ch,0x30
  419f44:	ins    BYTE PTR es:[edi],dx
  419f45:	mov    dh,0xb7
  419f47:	test   al,0x4a
  419f49:	les    ecx,FWORD PTR [ebp-0x65]
  419f4c:	mov    edx,0x7ad1c04
  419f51:	add    bh,BYTE PTR [edx]
  419f53:	ror    BYTE PTR [eax],cl
  419f55:	cmove  ebx,eax
  419f58:	pop    esi
  419f59:	push   0x51
  419f5b:	xor    BYTE PTR [eax+0x31e3ccf8],ah
  419f61:	add    ch,cl
  419f63:	sbb    BYTE PTR [ecx+0x1d4c102c],dl
  419f69:	js     0x419eff
  419f6b:	shr    DWORD PTR [esi+0x24c29e96],1
  419f71:	cmc    
  419f72:	int3   
  419f73:	mov    bh,0x1
  419f75:	cmp    DWORD PTR [esi+0x42],0x6e
  419f79:	mov    al,BYTE PTR [ebp-0x2]
  419f7c:	adc    esi,DWORD PTR [edi-0x42]
  419f7f:	mov    ah,0x26
  419f81:	xor    dl,bl
  419f83:	ins    BYTE PTR es:[edi],dx
  419f84:	lds    ebx,FWORD PTR [ebx+ebp*1-0x5346659c]
  419f8b:	xor    edi,DWORD PTR [edx-0x3c]
  419f8e:	adc    al,0xd0
  419f90:	xor    al,0x79
  419f92:	xchg   ebp,eax
  419f93:	dec    edi
  419f94:	aam    0x3b
  419f96:	icebp  
  419f97:	push   esp
  419f98:	js     0x419fc0
  419f9a:	cdq    
  419f9b:	xor    eax,0xd299f0a1
  419fa0:	jno    0xb354341b
  419fa6:	(bad)  [ecx+0x71]
  419fa9:	sbb    eax,0x663b5f4c
  419fae:	xor    eax,0x3583b9b7
  419fb3:	fnstenv [ebx]
  419fb5:	mov    ds:0x959afc40,al
  419fba:	ret    0x242b
  419fbd:	nop
  419fbe:	stos   DWORD PTR es:[edi],eax
  419fbf:	les    ebp,FWORD PTR [esi+0x3677b82b]
  419fc5:	mov    edi,0x29b0bfd3
  419fca:	jmp    0xb83528b5
  419fcf:	les    ecx,FWORD PTR [ebx]
  419fd1:	xor    eax,0x5484f13c
  419fd6:	pop    ss
  419fd7:	mov    cl,0xff
  419fd9:	mov    ah,0xbc
  419fdb:	or     eax,0xfbddf09e
  419fe0:	retf   0xd1bb
  419fe3:	gs push esi
  419fe5:	fild   QWORD PTR [edx+0x77]
  419fe8:	imul   edi,DWORD PTR ds:0xfcd2e59c,0xffffffc8
  419fef:	sub    edx,ebp
  419ff1:	xchg   esi,eax
  419ff2:	retf   0x8a23
  419ff5:	inc    ebx
  419ff6:	add    al,0x70
  419ff8:	idiv   DWORD PTR [ebp+0x35]
  419ffb:	push   ecx
  419ffc:	rcl    DWORD PTR [edx],1
  419ffe:	fild   QWORD PTR [ecx-0x47]
  41a001:	icebp  
  41a002:	mov    dl,0xa7
  41a004:	jbe    0x419fd7
  41a006:	ds cdq 
  41a008:	xchg   ecx,eax
  41a009:	mov    BYTE PTR [ecx+0x916398c],dh
  41a00f:	sbb    DWORD PTR [eax+0x5f],ebx
  41a012:	adc    al,0xd0
  41a014:	call   0xde6b:0x996f2f69
  41a01b:	lds    ecx,FWORD PTR [ebx+0x18]
  41a01e:	pop    ebx
  41a01f:	jge    0x41a082
  41a021:	jno    0x41a088
  41a023:	dec    edi
  41a024:	test   BYTE PTR [eax+0x64],dh
  41a027:	sub    ch,BYTE PTR [edx-0x149230b]
  41a02d:	mov    eax,ds:0x339ceae6
  41a032:	pop    ss
  41a033:	test   BYTE PTR [ecx-0x5b80dc8e],al
  41a039:	mov    dh,0xdf
  41a03b:	outs   dx,BYTE PTR ds:[esi]
  41a03c:	iret   
  41a03d:	jno    0x41a052
  41a03f:	sub    ebx,DWORD PTR [ecx+0x26]
  41a042:	loope  0x41a022
  41a044:	into   
  41a045:	retf   0x8ed9
  41a048:	std    
  41a049:	xchg   ecx,eax
  41a04a:	jns    0x419fdb
  41a04c:	lahf   
  41a04d:	(bad)  
  41a04e:	cs out 0x1b,al
  41a051:	or     edx,eax
  41a053:	mov    eax,ds:0xd8130e56
  41a058:	bnd jb 0x41a05c
  41a05b:	cli    
  41a05c:	sahf   
  41a05d:	pop    ecx
  41a05e:	and    ah,0xa6
  41a061:	sbb    BYTE PTR [eax+0x4e63926e],0xa3
  41a068:	cmc    
  41a069:	int3   
  41a06a:	jbe    0x41a038
  41a06c:	jns    0x41a07a
  41a06e:	mov    ah,0x93
  41a070:	cwde   
  41a071:	in     eax,0x5c
  41a073:	test   eax,0x4b4b322c
  41a078:	dec    ecx
  41a079:	jno    0x41a029
  41a07b:	mov    ebp,0xa4e3fefa
  41a080:	cmp    BYTE PTR [ebx+0x17],0xa4
  41a084:	mov    ebx,0xe64165df
  41a089:	retf   
  41a08a:	push   ecx
  41a08b:	jb     0x41a0bf
  41a08d:	cmc    
  41a08e:	repz jae 0x41a069
  41a091:	mov    cl,0xba
  41a093:	call   0xc9ea:0xf627f531
  41a09a:	pop    es
  41a09b:	xor    DWORD PTR [edx],edi
  41a09d:	adc    eax,0xa71d23dd
  41a0a2:	pop    ecx
  41a0a3:	xchg   bl,ah
  41a0a5:	inc    edx
  41a0a6:	fild   QWORD PTR [esi+edx*8-0x45]
  41a0aa:	rcl    DWORD PTR [esi+ebp*8-0x13],cl
  41a0ae:	push   cs
  41a0af:	jle    0x41a0d8
  41a0b1:	xchg   edi,eax
  41a0b2:	into   
  41a0b3:	push   ebx
  41a0b4:	sbb    edx,ebx
  41a0b6:	mov    al,ds:0xe880d9b4
  41a0bb:	push   edi
  41a0bc:	sar    DWORD PTR [edi+0x4c35bb4c],0x81
  41a0c3:	push   0x84e9931c
  41a0c8:	icebp  
  41a0c9:	enter  0x4b21,0x43
  41a0cd:	aaa    
  41a0ce:	inc    esp
  41a0cf:	aad    0xab
  41a0d1:	call   0x946e78ef
  41a0d6:	mov    ah,0xca
  41a0d8:	mov    cl,0x58
  41a0da:	into   
  41a0db:	add    BYTE PTR [edx],dh
  41a0dd:	into   
  41a0de:	sbb    ah,BYTE PTR [esi-0x5c9efbbc]
  41a0e4:	scas   eax,DWORD PTR es:[edi]
  41a0e5:	outs   dx,DWORD PTR ds:[esi]
  41a0e6:	adc    al,0xeb
  41a0e8:	adc    al,0xa8
  41a0ea:	dec    edx
  41a0eb:	mov    bl,0x1a
  41a0ed:	add    ebp,DWORD PTR [edi+0x44c729b8]
  41a0f3:	or     esp,DWORD PTR [edx]
  41a0f5:	jo     0x41a164
  41a0f7:	pushf  
  41a0f8:	dec    ebx
  41a0f9:	sbb    DWORD PTR [ebp-0x44],ebx
  41a0fc:	lods   al,BYTE PTR ds:[esi]
  41a0fd:	dec    ebx
  41a0fe:	push   esi
  41a0ff:	xor    esp,ebp
  41a101:	ja     0x41a102
  41a103:	pop    esi
  41a104:	push   ss
  41a105:	xor    ebx,DWORD PTR [ebx+0x4e]
  41a108:	add    BYTE PTR [eax-0x3411f26c],al
  41a10e:	out    dx,eax
  41a10f:	stc    
  41a110:	mov    ss,WORD PTR [ecx+0x149ba9fe]
  41a116:	mov    ah,0xa8
  41a118:	dec    esp
  41a119:	sub    ebp,eax
  41a11b:	sub    esi,DWORD PTR [esi]
  41a11d:	je     0x41a178
  41a11f:	fcom   QWORD PTR [ecx]
  41a121:	cli    
  41a122:	mov    ds:0xacfe2f7c,eax
  41a127:	out    dx,al
  41a128:	mov    dl,0xb9
  41a12a:	jo     0x41a0ea
  41a12c:	loopne 0x41a101
  41a12e:	jns    0x41a117
  41a130:	fsub   QWORD PTR [ecx-0x2bc79301]
  41a136:	ret    
  41a137:	out    0xdc,eax
  41a139:	fs mov ch,0x44
  41a13c:	(bad)  
  41a13d:	lock std 
  41a13f:	outs   dx,DWORD PTR ds:[esi]
  41a140:	ror    BYTE PTR cs:[eax-0xa],cl
  41a144:	pop    es
  41a145:	and    eax,0xf80a8dd3
  41a14a:	push   ebx
  41a14b:	inc    eax
  41a14c:	jp     0x41a1cc
  41a14e:	xor    eax,0x6b0a04ec
  41a153:	ds into 
  41a155:	inc    esi
  41a156:	std    
  41a157:	sub    eax,0xd678b698
  41a15c:	(bad)  [eax]
  41a15e:	sbb    al,0xcb
  41a160:	adc    eax,0xd36a88d3
  41a165:	pop    eax
  41a166:	dec    ecx
  41a167:	push   esi
  41a168:	pop    ebp
  41a169:	push   cs
  41a16a:	and    BYTE PTR ds:0x59a92528,al
  41a171:	add    edi,DWORD PTR [ecx]
  41a173:	fldenv [edi+esi*2-0x53da5e5c]
  41a17a:	inc    esp
  41a17b:	jns    0x41a118
  41a17d:	add    al,0x87
  41a17f:	dec    ecx
  41a180:	fcomp  QWORD PTR [ebx-0x20]
  41a183:	outs   dx,BYTE PTR ds:[esi]
  41a184:	pop    esi
  41a185:	mov    ah,0x28
  41a187:	sbb    eax,0xc875c852
  41a18c:	xchg   esp,eax
  41a18d:	jg     0x41a123
  41a18f:	xor    BYTE PTR [ebx],ch
  41a191:	xor    DWORD PTR [edi+0x3e],ebp
  41a194:	dec    ebp
  41a195:	lahf   
  41a196:	imul   ebx,DWORD PTR [ecx-0x38145186],0x1f
  41a19d:	dec    eax
  41a19e:	icebp  
  41a19f:	jge    0x41a13c
  41a1a1:	mov    eax,0xc13256b7
  41a1a6:	mov    ch,0x39
  41a1a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1a9:	sahf   
  41a1aa:	xchg   esp,eax
  41a1ab:	push   ebx
  41a1ac:	sar    BYTE PTR [ebx-0x30],1
  41a1af:	mov    dh,0x2b
  41a1b1:	pop    ss
  41a1b2:	cmp    eax,ebx
  41a1b4:	pop    ss
  41a1b5:	icebp  
  41a1b6:	imul   eax,DWORD PTR [esi+0x154a7b09],0xfe96a8e4
  41a1c0:	xchg   edx,eax
  41a1c1:	push   ecx
  41a1c2:	jl     0x41a1ca
  41a1c4:	shl    DWORD PTR [ebx-0x61],1
  41a1c7:	cmp    al,0x51
  41a1c9:	sbb    ebx,0x91427618
  41a1cf:	scas   eax,DWORD PTR es:[edi]
  41a1d0:	add    eax,0x915c48b1
  41a1d5:	fisttp QWORD PTR [ecx-0x20428dd3]
  41a1db:	jl     0x41a1d4
  41a1dd:	dec    esi
  41a1de:	leave  
  41a1df:	add    ecx,edx
  41a1e1:	sbb    BYTE PTR [eax-0x40],ch
  41a1e4:	int3   
  41a1e5:	sub    bh,al
  41a1e7:	or     edi,DWORD PTR [ecx-0x4b02fb74]
  41a1ed:	in     eax,0x8
  41a1ef:	push   eax
  41a1f0:	shl    DWORD PTR [esi],1
  41a1f2:	push   ss
  41a1f3:	or     esi,edi
  41a1f5:	sbb    dl,BYTE PTR [ebx-0x77]
  41a1f8:	out    dx,al
  41a1f9:	sbb    bh,BYTE PTR ds:0x16b6f23a
  41a1ff:	int3   
  41a200:	dec    ebp
  41a201:	loope  0x41a1a2
  41a203:	scas   eax,DWORD PTR es:[edi]
  41a204:	mov    ch,0x77
  41a206:	jne    0x41a245
  41a208:	cmp    ah,BYTE PTR ds:0x88e543fd
  41a20e:	lea    ecx,[eax-0xf]
  41a211:	xchg   esi,eax
  41a212:	sbb    eax,0x3aed2603
  41a217:	in     eax,dx
  41a218:	mov    eax,0x6a692cff
  41a21d:	sbb    bp,bp
  41a220:	mov    ah,0xb6
  41a222:	dec    ebx
  41a223:	outs   dx,BYTE PTR ds:[esi]
  41a224:	enter  0xdeb7,0xa5
  41a228:	sbb    bh,BYTE PTR [edx-0x59]
  41a22b:	xlat   BYTE PTR ds:[bx]
  41a22d:	push   esp
  41a22e:	xor    esi,DWORD PTR [edi-0x2]
  41a231:	inc    ebx
  41a232:	hlt    
  41a233:	iret   
  41a234:	loopne 0x41a1d9
  41a236:	jecxz  0x41a299
  41a238:	in     al,dx
  41a239:	and    dh,dl
  41a23b:	push   esp
  41a23c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a23d:	add    al,ah
  41a23f:	xor    BYTE PTR [edx+edx*8+0x567ecf9b],dl
  41a246:	xchg   esi,eax
  41a247:	clc    
  41a248:	addr16 mov ecx,0xd4de7791
  41a24e:	jnp    0x41a296
  41a250:	out    dx,eax
  41a251:	and    ebx,edx
  41a253:	and    ch,BYTE PTR [ebp+ecx*8-0x16e84953]
  41a25a:	aas    
  41a25b:	into   
  41a25c:	pop    ss
  41a25d:	xor    BYTE PTR [edx+edx*2],al
  41a260:	imul   esp,edi,0xffffffb7
  41a263:	adc    edx,ebp
  41a265:	int3   
  41a266:	iret   
  41a267:	mov    ds:0x5d798d0a,al
  41a26c:	sbb    ah,bl
  41a26e:	mov    eax,0x843ce6a9
  41a273:	cs push ebx
  41a275:	pop    esp
  41a276:	inc    esp
  41a277:	pop    esp
  41a278:	cmp    DWORD PTR [ebx-0x6b],eax
  41a27b:	cwde   
  41a27c:	gs pop eax
  41a27e:	cli    
  41a27f:	pop    ds
  41a280:	mov    esp,0x6a327d2a
  41a285:	pop    esi
  41a286:	jp     0x41a298
  41a288:	ds push ebp
  41a28a:	ds cmp eax,0x928e6ef3
  41a290:	sub    BYTE PTR fs:[ebp-0x6e],al
  41a294:	pop    ss
  41a295:	jl     0x41a237
  41a297:	mov    esi,0xbf455b31
  41a29c:	pop    edi
  41a29d:	dec    esp
  41a29e:	dec    ecx
  41a29f:	shr    BYTE PTR [esi],cl
  41a2a1:	ss mov ch,0xf9
  41a2a4:	and    ebx,eax
  41a2a6:	repz (bad) 
  41a2a8:	jmp    0x66cf:0xde068f01
  41a2af:	or     al,0xa8
  41a2b1:	out    0x4c,al
  41a2b3:	inc    ebx
  41a2b4:	push   0xffffffca
  41a2b6:	leave  
  41a2b7:	and    ecx,esp
  41a2b9:	shl    cl,cl
  41a2bb:	sub    al,0xe7
  41a2bd:	push   eax
  41a2be:	push   edi
  41a2bf:	into   
  41a2c0:	add    ch,ch
  41a2c2:	fsubr  st(5),st
  41a2c4:	mov    dl,0x9f
  41a2c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2c7:	xchg   edx,eax
  41a2c8:	mov    ebx,0xc8530dfe
  41a2cd:	loop   0x41a28a
  41a2cf:	fs lock mov ecx,0x6f08e9a4
  41a2d6:	aas    
  41a2d7:	mov    esi,0xcc4b58c2
  41a2dc:	pusha  
  41a2dd:	ins    BYTE PTR es:[edi],dx
  41a2de:	adc    BYTE PTR [eax],bh
  41a2e0:	dec    eax
  41a2e1:	sar    BYTE PTR ds:[eax],0x51
  41a2e5:	in     al,dx
  41a2e6:	loopne 0x41a316
  41a2e8:	and    ebp,ecx
  41a2ea:	mov    ecx,0x5605b1eb
  41a2ef:	xor    bl,0x93
  41a2f2:	pop    eax
  41a2f3:	enter  0x2704,0xd4
  41a2f7:	iret   
  41a2f8:	das    
  41a2f9:	fsub   st,st(2)
  41a2fb:	cmp    bh,dh
  41a2fd:	test   al,0xd5
  41a2ff:	jo     0x41a2ba
  41a301:	out    dx,eax
  41a302:	inc    ebp
  41a303:	push   ecx
  41a304:	test   eax,0x1e80e937
  41a309:	in     eax,0xc5
  41a30b:	in     eax,dx
  41a30c:	pop    ebx
  41a30d:	(bad)  
  41a30e:	ds clc 
  41a310:	cmp    al,0x47
  41a312:	pop    edi
  41a313:	imul   ecx,DWORD PTR [edi-0x5a70ca6f],0x3970d6a1
  41a31d:	fidivr DWORD PTR [ecx+esi*1-0x59]
  41a321:	es sbb al,0x36
  41a324:	in     al,dx
  41a325:	enter  0x283a,0xab
  41a329:	fsub   DWORD PTR [ebx-0xf8e542f]
  41a32f:	xchg   ebx,eax
  41a330:	cmp    BYTE PTR [ecx],bl
  41a332:	xor    edx,edi
  41a334:	xchg   ebx,eax
  41a335:	cli    
  41a336:	repnz mov esi,DWORD PTR [edx-0x232ffa7d]
  41a33d:	icebp  
  41a33e:	rol    BYTE PTR [eax-0x14758da7],cl
  41a344:	pop    ebp
  41a345:	jo     0x41a383
  41a347:	jl     0x41a2fd
  41a349:	mov    ds:0x36b5093b,al
  41a34e:	cwde   
  41a34f:	jmp    esp
  41a351:	xchg   edi,eax
  41a352:	notrack jmp DWORD PTR [eax]
  41a355:	ja     0x41a2f6
  41a357:	pusha  
  41a358:	icebp  
  41a359:	lds    ebp,FWORD PTR ds:0x6a15c256
  41a35f:	pusha  
  41a360:	mov    ebx,0xff005864
  41a365:	lahf   
  41a366:	cli    
  41a367:	idiv   BYTE PTR [edx]
  41a369:	xor    dh,BYTE PTR [ecx-0x43]
  41a36c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a36d:	add    al,0x98
  41a36f:	dec    ebx
  41a370:	popa   
  41a371:	lahf   
  41a372:	or     al,BYTE PTR [edx]
  41a374:	and    bh,ah
  41a376:	in     eax,0x7d
  41a378:	sbb    esi,DWORD PTR [edi-0x13]
  41a37b:	sub    DWORD PTR [edx-0x23b19b11],eax
  41a381:	outs   dx,BYTE PTR ds:[esi]
  41a382:	ins    DWORD PTR es:[edi],dx
  41a383:	and    eax,0x6940246d
  41a388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a389:	push   ss
  41a38a:	fs mov bl,0xa5
  41a38d:	es mov bh,0x8f
  41a390:	sti    
  41a391:	dec    esi
  41a392:	adc    DWORD PTR [ebp+ebp*1-0x1e],0xffffffcd
  41a397:	xor    al,0xc0
  41a399:	js     0x41a3ae
  41a39b:	jmp    0x5c904c21
  41a3a0:	jns    0x41a342
  41a3a2:	mov    ebx,0x29caf0dc
  41a3a7:	mov    WORD PTR [ebx-0x38],?
  41a3aa:	(bad)  
  41a3ab:	enter  0xe188,0x65
  41a3af:	rol    DWORD PTR [edi+0x6d803a70],cl
  41a3b5:	add    DWORD PTR [ebx+0x107f94b8],ebx
  41a3bb:	dec    eax
  41a3bc:	inc    DWORD PTR [ecx]
  41a3be:	cwde   
  41a3bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3c0:	jg     0x41a420
  41a3c2:	and    ebp,DWORD PTR [esi+0x64df2ebb]
  41a3c8:	mov    WORD PTR [ebx+0x69],cs
  41a3cb:	les    edx,FWORD PTR [ecx-0x33562668]
  41a3d1:	sub    BYTE PTR [esi-0x1a],dh
  41a3d4:	cli    
  41a3d5:	sub    al,0x6f
  41a3d7:	mul    dh
  41a3d9:	push   ecx
  41a3da:	pushf  
  41a3db:	push   es
  41a3dc:	cmp    al,0x1c
  41a3de:	pushf  
  41a3df:	push   0x26
  41a3e1:	fs out dx,eax
  41a3e3:	test   dl,bh
  41a3e5:	xchg   esi,eax
  41a3e6:	push   esp
  41a3e7:	mov    al,ds:0x8ff77908
  41a3ec:	pop    ds
  41a3ed:	add    esi,DWORD PTR [ebp+0x5]
  41a3f0:	push   edx
  41a3f1:	rcl    DWORD PTR [edx+eiz*8+0x2e3bcdb7],0x57
  41a3f9:	addr16 out 0x13,al
  41a3fc:	mov    ecx,0xe16dbf2f
  41a401:	or     DWORD PTR [esi-0x40cc5a4b],esi
  41a407:	cmp    al,BYTE PTR [ecx-0x6e7e606b]
  41a40d:	xlat   BYTE PTR ds:[ebx]
  41a40e:	pop    ecx
  41a40f:	jb     0x41a3f0
  41a411:	pop    esi
  41a412:	pop    ecx
  41a413:	stos   DWORD PTR es:[edi],eax
  41a414:	sbb    al,0x71
  41a416:	mov    edi,0x3e24fdbf
  41a41b:	imul   esi,DWORD PTR [ebx+0x7a2ea93d],0xffffff9f
  41a422:	les    edx,FWORD PTR [edx]
  41a424:	es pop ss
  41a426:	inc    ebp
  41a427:	outs   dx,DWORD PTR ds:[esi]
  41a428:	mov    dl,0x54
  41a42a:	popf   
  41a42b:	inc    esi
  41a42c:	mov    ss,ebx
  41a42e:	mov    edx,0x164febe0
  41a433:	mov    ds:0xb930a198,al
  41a438:	(bad)
  41a43c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a43d:	mov    eax,ds:0x4d590179
  41a442:	xor    BYTE PTR [edi],0x4d
  41a445:	outs   dx,BYTE PTR ds:[esi]
  41a446:	push   ss
  41a447:	stos   DWORD PTR es:[edi],eax
  41a448:	adc    DWORD PTR [ebx+0x7d],edx
  41a44b:	add    bl,cl
  41a44d:	shr    BYTE PTR [esi+0x5d],1
  41a450:	pop    edi
  41a451:	xchg   ebp,eax
  41a452:	pop    eax
  41a453:	dec    edi
  41a454:	es and eax,0x2f316b7a
  41a45a:	xchg   ebp,eax
  41a45b:	pushf  
  41a45c:	mov    esi,0x5d4159b4
  41a461:	adc    al,0x3
  41a463:	ss sbb al,0x64
  41a466:	aaa    
  41a467:	pop    ebx
  41a468:	clc    
  41a469:	dec    esi
  41a46a:	xor    eax,0xaa4ea8fc
  41a46f:	rol    ah,0x8c
  41a472:	ret    
  41a473:	inc    esp
  41a474:	xchg   ebp,eax
  41a475:	clc    
  41a476:	sub    eax,0xddddd7a5
  41a47b:	enter  0x742,0xb4
  41a47f:	pusha  
  41a480:	mov    ebp,0x9626dd4d
  41a485:	push   ecx
  41a486:	cmp    eax,0x2e70e27d
  41a48b:	pop    eax
  41a48c:	shl    DWORD PTR [edx],1
  41a48e:	xor    ebp,DWORD PTR es:[ebp-0x2835975a]
  41a495:	loope  0x41a49a
  41a497:	mov    BYTE PTR [edi-0x3ef96d85],al
  41a49d:	adc    BYTE PTR [ebp+0x126ede55],ah
  41a4a3:	mov    bl,ch
  41a4a5:	add    esp,edx
  41a4a7:	jmp    0x8743:0x4c47ffb1
  41a4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4af:	sub    DWORD PTR [edi],ebx
  41a4b1:	sbb    al,bl
  41a4b3:	shl    BYTE PTR [ecx+0x69],cl
  41a4b6:	retf   0x4e98
  41a4b9:	aad    0xa6
  41a4bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4bc:	or     al,0x85
  41a4be:	mov    cl,0xa7
  41a4c0:	jg     0x41a4e4
  41a4c2:	int    0xd8
  41a4c4:	pusha  
  41a4c5:	clc    
  41a4c6:	fcmove st,st(6)
  41a4c8:	sub    esp,DWORD PTR [ecx-0x3279097d]
  41a4ce:	dec    edx
  41a4cf:	fcomip st,st(7)
  41a4d1:	clc    
  41a4d2:	dec    esi
  41a4d3:	xchg   DWORD PTR [eax+0x63],edi
  41a4d6:	push   edx
  41a4d7:	aad    0xf6
  41a4d9:	xchg   ecx,eax
  41a4da:	(bad)  
  41a4db:	xchg   edx,eax
  41a4dc:	fs or  ax,0xe1e0
  41a4e1:	call   0xb585:0x8ec34dc7
  41a4e8:	mov    eax,ds:0x89ef2db4
  41a4ed:	sub    BYTE PTR ds:0xcb9a74f6,dh
  41a4f3:	xchg   edi,eax
  41a4f4:	adc    esi,DWORD PTR [edx+0x6f2a0b3e]
  41a4fa:	stc    
  41a4fb:	and    al,0xbb
  41a4fd:	ins    DWORD PTR es:[edi],dx
  41a4fe:	jo     0x41a56a
  41a500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a501:	adc    DWORD PTR [edi],edi
  41a503:	push   es
  41a504:	bound  ebx,QWORD PTR [ecx-0xd]
  41a507:	pushaw 
  41a509:	inc    edi
  41a50a:	xlat   BYTE PTR ds:[ebx]
  41a50b:	(bad)  
  41a50c:	push   edx
  41a50d:	test   al,0xc3
  41a50f:	popa   
  41a510:	xor    ch,dh
  41a512:	imul   ebp,DWORD PTR [ebx-0x51],0x9
  41a516:	mov    ds:0xbb58c58f,eax
  41a51b:	mov    ebx,DWORD PTR [ecx+0x74db66c7]
  41a521:	add    eax,0x46513c14
  41a526:	loope  0x41a535
  41a528:	(bad)  
  41a529:	dec    esi
  41a52a:	aam    0xfb
  41a52c:	mov    ds:0x22881dc0,al
  41a531:	push   ds
  41a532:	pop    edi
  41a533:	(bad)  
  41a534:	call   0xa2469638
  41a539:	les    ebp,FWORD PTR [edi]
  41a53b:	lods   al,BYTE PTR ds:[esi]
  41a53c:	int    0xc8
  41a53e:	push   ss
  41a53f:	not    esp
  41a541:	repz les ecx,FWORD PTR [edx+0x7c5ce5f6]
  41a548:	pop    ss
  41a549:	mov    ah,0xb0
  41a54b:	mov    eax,0x40c6b676
  41a550:	add    DWORD PTR [ebx],ecx
  41a552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a553:	into   
  41a554:	mov    ch,0x6b
  41a556:	and    edi,esi
  41a558:	mov    esp,0xb27e91d1
  41a55d:	bswap  ebx
  41a55f:	jmp    0xfc6:0x5e8b731a
  41a566:	retf   
  41a567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a568:	sub    al,0x90
  41a56a:	xchg   DWORD PTR [esi+0x5fc00bae],esi
  41a570:	pop    ecx
  41a571:	lea    ecx,[eax+edi*2+0x5819025b]
  41a578:	inc    DWORD PTR [edi+0x52f67f0f]
  41a57e:	(bad)  
  41a580:	jns    0x41a51a
  41a582:	stc    
  41a583:	jb     0x41a5d9
  41a585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a586:	out    0xe4,eax
  41a588:	mov    ah,0xf8
  41a58a:	in     eax,0xba
  41a58c:	pop    edx
  41a58d:	cmp    eax,0x7d01853
  41a592:	jl     0x41a540
  41a594:	push   edi
  41a595:	adc    DWORD PTR [ebx-0x74],edx
  41a598:	cli    
  41a599:	es mov al,0xa8
  41a59c:	mov    ?,WORD PTR [ebx+0x2f2ee342]
  41a5a2:	fst    DWORD PTR [ebp-0x29]
  41a5a5:	in     eax,dx
  41a5a6:	sub    al,0xd1
  41a5a8:	loopne 0x41a5ba
  41a5aa:	sahf   
  41a5ab:	and    esp,DWORD PTR [eax-0x6f]
  41a5ae:	ins    DWORD PTR es:[edi],dx
  41a5af:	in     al,dx
  41a5b0:	js     0x41a54b
  41a5b2:	sahf   
  41a5b3:	or     BYTE PTR [eax],ah
  41a5b5:	sbb    ecx,edi
  41a5b7:	jp     0x41a628
  41a5b9:	ret    0x3534
  41a5bc:	lods   eax,DWORD PTR ds:[esi]
  41a5bd:	pop    ecx
  41a5be:	adc    dl,BYTE PTR [edx+0x5a]
  41a5c1:	push   edi
  41a5c2:	adc    edx,edx
  41a5c4:	rol    BYTE PTR [esi],cl
  41a5c6:	or     BYTE PTR [edi+0x5a],al
  41a5c9:	sbb    al,0xc4
  41a5cb:	jns    0x41a642
  41a5cd:	sub    eax,edi
  41a5cf:	mov    ebp,DWORD PTR ds:0xace47e45
  41a5d5:	ret    
  41a5d6:	inc    ebx
  41a5d7:	das    
  41a5d8:	jmp    0x41a63c
  41a5da:	fs fwait
  41a5dc:	popa   
  41a5dd:	cmc    
  41a5de:	stc    
  41a5df:	lfs    esi,FWORD PTR [edx+0x5c]
  41a5e3:	ret    
  41a5e4:	cwde   
  41a5e5:	popa   
  41a5e6:	popf   
  41a5e7:	jae    0x41a631
  41a5e9:	iret   
  41a5ea:	mov    bl,0xc7
  41a5ec:	push   edx
  41a5ed:	into   
  41a5ee:	mov    bh,0xf1
  41a5f0:	leave  
  41a5f1:	xor    eax,0xe2f8962e
  41a5f6:	add    edi,DWORD PTR [eax]
  41a5f8:	ret    
  41a5f9:	and    al,BYTE PTR [ebp+0x1aadd1a2]
  41a5ff:	fdiv   QWORD PTR [edx-0x32]
  41a602:	cmp    BYTE PTR [ebx],al
  41a604:	dec    esi
  41a605:	in     al,dx
  41a606:	sbb    ah,BYTE PTR [edx-0x22d45f5d]
  41a60c:	gs cli 
  41a60e:	dec    esp
  41a60f:	xlat   BYTE PTR ds:[ebx]
  41a610:	in     al,0xea
  41a612:	lds    esp,FWORD PTR [edx-0x44]
  41a615:	lods   al,BYTE PTR ds:[esi]
  41a616:	xor    ebx,edx
  41a618:	adc    edx,DWORD PTR [edi+0x2ae0689a]
  41a61e:	call   0x5da3:0xbce0e281
  41a625:	mov    bl,BYTE PTR [ebx]
  41a627:	jle    0x41a666
  41a629:	sub    eax,0x90288042
  41a62e:	arpl   WORD PTR [edi+0x121c0f3e],ax
  41a634:	aam    0xb4
  41a636:	jbe    0x41a65b
  41a638:	outs   dx,BYTE PTR ds:[esi]
  41a639:	jle    0x41a5d5
  41a63b:	mov    es,WORD PTR [edi]
  41a63d:	jle    0x41a5d2
  41a63f:	add    al,0xe3
  41a641:	int3   
  41a642:	xor    al,0xeb
  41a644:	fbstp  TBYTE PTR ds:[ebx+0x7ca5b9c]
  41a64b:	pop    ebp
  41a64c:	shl    DWORD PTR [edx-0x49],0x45
  41a650:	aam    0x6
  41a652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a653:	out    dx,al
  41a654:	mov    ?,WORD PTR [eax]
  41a656:	in     al,0xee
  41a658:	inc    esi
  41a659:	dec    ecx
  41a65a:	xchg   ecx,eax
  41a65b:	lahf   
  41a65c:	add    DWORD PTR [edx-0x34],esp
  41a65f:	xchg   ecx,eax
  41a660:	inc    esi
  41a661:	xchg   BYTE PTR [edx],al
  41a663:	repnz cli 
  41a665:	(bad)  
  41a666:	mov    edx,0xfa772edb
  41a66b:	aad    0xef
  41a66d:	loop   0x41a674
  41a66f:	and    eax,0xbad5c381
  41a674:	shr    DWORD PTR ss:[ebx],cl
  41a677:	ficom  WORD PTR [edx-0x2]
  41a67a:	jo     0x41a63f
  41a67c:	push   0xffffff90
  41a67e:	inc    esp
  41a67f:	sub    DWORD PTR [edi],edi
  41a681:	xchg   sp,ax
  41a683:	jnp    0x41a622
  41a685:	(bad)  
  41a686:	idiv   DWORD PTR [ebp-0x1d00d21b]
  41a68c:	ins    BYTE PTR es:[edi],dx
  41a68d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a68e:	or     ebx,DWORD PTR [edi]
  41a690:	push   0xce64598a
  41a695:	push   ss
  41a696:	sbb    eax,DWORD PTR [edi]
  41a698:	push   ebx
  41a699:	lock xor DWORD PTR [ecx+0x6a],ebp
  41a69d:	inc    edx
  41a69e:	mov    ss,WORD PTR [edx+0x74]
  41a6a1:	cmp    eax,0x31189e10
  41a6a6:	ins    DWORD PTR es:[edi],dx
  41a6a7:	xor    BYTE PTR [ebx+0x6ee9b4c6],dh
  41a6ad:	dec    eax
  41a6ae:	int    0x15
  41a6b0:	fmulp  st(3),st
  41a6b2:	jnp    0x41a68d
  41a6b4:	jo     0x41a68a
  41a6b6:	push   ebx
  41a6b7:	pop    es
  41a6b8:	and    eax,0xdf8c5cc0
  41a6bd:	sbb    eax,0x379f2444
  41a6c2:	push   ebp
  41a6c3:	add    DWORD PTR [ecx-0x7f8483cb],edi
  41a6c9:	push   eax
  41a6ca:	mov    eax,ds:0x9d69ea24
  41a6cf:	mov    bl,0xb
  41a6d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6d2:	and    al,0x14
  41a6d4:	jge    0x41a6b5
  41a6d6:	mov    WORD PTR cs:0x63a3afcd,cs
  41a6dd:	add    DWORD PTR [ebx-0x6902946f],0x1bae6566
  41a6e7:	stos   DWORD PTR es:[edi],eax
  41a6e8:	inc    ebx
  41a6e9:	loop   0x41a69f
  41a6eb:	retf   
  41a6ec:	sub    BYTE PTR [esi+ecx*2+0x756bda8],bh
  41a6f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6f4:	pop    ds
  41a6f5:	inc    esp
  41a6f6:	inc    ebp
  41a6f7:	fwait
  41a6f8:	cs aad 0x55
  41a6fb:	(bad)  
  41a6fc:	xor    al,0x31
  41a6fe:	cmp    al,0x91
  41a700:	pop    esp
  41a701:	inc    ecx
  41a702:	jne    0x41a6db
  41a704:	fstp   TBYTE PTR [ebx]
  41a706:	pop    es
  41a707:	xchg   edi,eax
  41a708:	rol    DWORD PTR [edx+0x4d0ce41],0x3d
  41a70f:	xor    eax,0x25bec45f
  41a714:	and    edi,edi
  41a716:	mov    ds:0xd01c80ce,eax
  41a71b:	sub    dl,bl
  41a71d:	nop
  41a71e:	pop    eax
  41a71f:	push   cs
  41a720:	xchg   ebx,eax
  41a721:	mov    esi,0x5436bb8
  41a726:	call   0xf4b92ab8
  41a72b:	test   cl,ch
  41a72d:	lea    esp,[edi]
  41a72f:	pop    ecx
  41a730:	cmp    DWORD PTR [edi],0x1ecc5f86
  41a736:	scas   al,BYTE PTR es:[edi]
  41a737:	imul   eax,DWORD PTR [ebx+0x4727c994],0x44
  41a73e:	sbb    eax,0xac858e27
  41a743:	mov    eax,ds:0x958ddee7
  41a748:	mov    DWORD PTR [edi-0x4b],ecx
  41a74b:	jno    0x41a6ff
  41a74d:	out    0xa3,eax
  41a74f:	xchg   esi,eax
  41a750:	aad    0x7e
  41a752:	stc    
  41a753:	test   BYTE PTR [ebx],bl
  41a755:	pop    eax
  41a756:	loope  0x41a77f
  41a758:	pop    ds
  41a759:	jg     0x41a77b
  41a75b:	lea    eax,[di]
  41a75e:	lods   al,BYTE PTR ds:[esi]
  41a75f:	(bad)  
  41a760:	sbb    al,0xa2
  41a762:	(bad)  
  41a763:	jae    0x41a77f
  41a765:	add    ch,ch
  41a767:	rcl    cl,0xd
  41a76a:	push   ebx
  41a76b:	mov    esp,0x79ae6bfc
  41a770:	neg    DWORD PTR [esi+0x5b]
  41a773:	dec    edx
  41a774:	and    bh,dl
  41a776:	mov    bl,0x6f
  41a778:	out    0x25,al
  41a77a:	lds    ecx,FWORD PTR ds:0x6f05cbf5
  41a780:	push   0xec67433e
  41a785:	sahf   
  41a786:	rol    BYTE PTR [ecx-0x1f71e60b],0x53
  41a78d:	mov    ds:0xa156cfe4,eax
  41a792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a793:	out    0xd5,al
  41a795:	loope  0x41a77c
  41a797:	leave  
  41a798:	xor    bh,al
  41a79a:	xor    eax,0x6e42dcec
  41a79f:	in     al,dx
  41a7a0:	mov    WORD PTR [ebp-0x5b],cs
  41a7a3:	and    bl,BYTE PTR [ebx+0x5f]
  41a7a6:	shl    DWORD PTR [edi+0x13013e6],1
  41a7ac:	frndint 
  41a7ae:	cdq    
  41a7af:	sbb    ebp,DWORD PTR [ebx+edx*2-0x4addec7e]
  41a7b6:	call   0x7f20:0x64d9f0
  41a7bd:	imul   eax,ebp,0xaa7c01d0
  41a7c3:	and    dh,BYTE PTR [edi+0x7aaa0ac2]
  41a7c9:	jecxz  0x41a822
  41a7cb:	or     al,0xd8
  41a7cd:	imul   ebp,DWORD PTR [edx-0x25],0xdf25f1ce
  41a7d4:	ins    DWORD PTR es:[edi],dx
  41a7d5:	add    al,0x10
  41a7d7:	sub    al,0xc9
  41a7d9:	(bad)  
  41a7da:	mov    ah,0x94
  41a7dc:	nop
  41a7dd:	mov    BYTE PTR [ebp-0x1266660],cl
  41a7e3:	inc    edx
  41a7e4:	dec    edx
  41a7e5:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41a7e7:	and    DWORD PTR [ebx+0x58],eax
  41a7ea:	push   es
  41a7eb:	pop    ecx
  41a7ec:	into   
  41a7ed:	frndint 
  41a7ef:	leave  
  41a7f0:	sub    al,0x3f
  41a7f2:	and    esi,eax
  41a7f4:	std    
  41a7f5:	lods   al,BYTE PTR ds:[esi]
  41a7f6:	sbb    al,0xed
  41a7f8:	arpl   WORD PTR [ebp+0x51],si
  41a7fb:	not    BYTE PTR [esi-0x79239225]
  41a801:	hlt    
  41a802:	xchg   edi,eax
  41a803:	xchg   esi,eax
  41a804:	rol    DWORD PTR [edi+0x61],1
  41a807:	jns    0x41a791
  41a809:	add    ecx,ebx
  41a80b:	push   ss
  41a80c:	xor    esp,edi
  41a80e:	in     al,0x3e
  41a810:	jns    0x41a7d3
  41a812:	sar    DWORD PTR [eax],1
  41a814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a815:	fmul   DWORD PTR [ebx+0x3f148c9]
  41a81b:	mov    edi,0x27bfe150
  41a820:	sub    cl,BYTE PTR [edi]
  41a822:	and    DWORD PTR [edi-0x38539859],0x4fc1f3dc
  41a82c:	aad    0xf0
  41a82e:	sub    DWORD PTR [edi+0x49e0fd52],0x4b
  41a835:	data16 jle 0x41a844
  41a838:	adc    al,0x5a
  41a83a:	(bad)  
  41a83b:	jge    0x41a895
  41a83d:	loop   0x41a7f0
  41a83f:	xor    esi,DWORD PTR [ebp-0x4a]
  41a842:	mov    ecx,0x25d6381e
  41a847:	xor    esp,DWORD PTR [ebx+0x76aeb0b]
  41a84d:	mov    ah,0x8
  41a84f:	loope  0x41a898
  41a851:	sub    al,BYTE PTR ds:0xf0bdf8ad
  41a857:	sub    edx,DWORD PTR ds:0xd0d0db8
  41a85d:	xor    dl,BYTE PTR [eax+0x73]
  41a860:	mov    es,WORD PTR [ebp+ecx*8-0xabfe501]
  41a867:	jmp    0x6686ec15
  41a86c:	stos   DWORD PTR es:[edi],eax
  41a86d:	cmc    
  41a86e:	mov    esp,0x66109b22
  41a873:	daa    
  41a874:	fucomi st,st(7)
  41a876:	arpl   WORD PTR [edi-0x384eadc5],ax
  41a87c:	daa    
  41a87d:	fld    QWORD PTR [ebx+0x74f58561]
  41a883:	mov    al,ds:0x4a74551
  41a888:	pop    eax
  41a889:	call   0x139dc4f8
  41a88e:	pop    eax
  41a88f:	pop    ecx
  41a890:	or     eax,0x35d3a118
  41a895:	mov    edx,0xf840d8ea
  41a89a:	xor    esi,ebp
  41a89c:	imul   eax,eax,0xfffffffb
  41a89f:	inc    ecx
  41a8a0:	bound  edi,QWORD PTR [edx+esi*1]
  41a8a3:	ret    0xc6ef
  41a8a6:	lea    edx,[eax]
  41a8a8:	popf   
  41a8a9:	pop    es
  41a8aa:	ficom  DWORD PTR [esi]
  41a8ac:	leave  
  41a8ad:	dec    ecx
  41a8ae:	xchg   ecx,eax
  41a8af:	pop    edi
  41a8b0:	or     edi,DWORD PTR [edx]
  41a8b2:	and    BYTE PTR [edx-0x7b],cl
  41a8b5:	inc    ebp
  41a8b6:	xor    edi,edx
  41a8b8:	cmp    eax,0xd3248fc8
  41a8bd:	push   ds
  41a8be:	inc    ecx
  41a8bf:	jl     0x41a8c9
  41a8c1:	mov    ch,0x66
  41a8c3:	(bad)  [ebx+0x2c1a37a6]
  41a8c9:	pop    es
  41a8ca:	inc    ebp
  41a8cb:	mov    edi,0xf1f4361d
  41a8d0:	sub    al,0x55
  41a8d2:	int    0xb
  41a8d4:	pop    eax
  41a8d5:	fld    DWORD PTR [eax+esi*2-0x146c095f]
  41a8dc:	mov    ebx,0x8fc08372
  41a8e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8e2:	dec    ecx
  41a8e3:	push   ebx
  41a8e4:	daa    
  41a8e5:	jne    0x41a909
  41a8e7:	sti    
  41a8e8:	mov    DWORD PTR [ebp+0x9ed16fd],0xc56a4148
  41a8f2:	mov    dl,0x0
  41a8f4:	inc    edx
  41a8f5:	repz adc ch,ah
  41a8f8:	cmp    edi,eax
  41a8fa:	(bad)  
  41a8fb:	int    0x6c
  41a8fd:	test   BYTE PTR [eax-0x47],0x68
  41a901:	ret    0xa434
  41a904:	jae    0x41a94a
  41a906:	shl    BYTE PTR [edi+0x1ac5590a],1
  41a90c:	cmp    eax,0xc4414f03
  41a911:	sbb    DWORD PTR [edi+ebp*4],edx
  41a914:	daa    
  41a915:	adc    DWORD PTR [edi+0x1007529a],esi
  41a91b:	sub    esp,DWORD PTR [ebx]
  41a91d:	addr16 xchg edi,ebp
  41a920:	(bad)  
  41a921:	jns    0x41a9a0
  41a923:	sub    BYTE PTR [eax-0x2d],al
  41a926:	xor    eax,DWORD PTR [ebp+eax*1+0x42cdaacb]
  41a92d:	std    
  41a92e:	xchg   edx,eax
  41a92f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a930:	mul    DWORD PTR [ecx]
  41a932:	ss (bad) 
  41a934:	rol    DWORD PTR [esi],cl
  41a936:	add    BYTE PTR [eax],cl
  41a938:	pop    edx
  41a939:	jle    0x41a98b
  41a93b:	adc    al,al
  41a93d:	jns    0x41a94a
  41a93f:	jo     0x41a93f
  41a941:	js     0x41a943
  41a943:	gs cli 
  41a945:	and    DWORD PTR [edx-0x40ddfdde],ebx
  41a94b:	imul   BYTE PTR [edi+0x522bdedd]
  41a951:	call   0x779e17fe
  41a956:	cmp    al,0xc4
  41a958:	loop   0x41a9a5
  41a95a:	jno    0x41a8f8
  41a95c:	sub    eax,0x6ac36466
  41a961:	aas    
  41a962:	rcr    DWORD PTR [eax-0x52],cl
  41a965:	retf   0x572a
  41a968:	or     eax,0xc303da19
  41a96d:	mov    al,0xf
  41a96f:	sbb    ah,dh
  41a971:	mov    eax,0x2ca15a6d
  41a976:	mov    ah,0xd6
  41a978:	adc    al,0xff
  41a97a:	fisttp WORD PTR [edi+0x397ef4a5]
  41a980:	xor    BYTE PTR [ebx+eax*4],ah
  41a983:	out    0x50,eax
  41a985:	push   0xf2cc7de
  41a98a:	adc    ebx,esp
  41a98c:	ror    BYTE PTR [edi+0x14ce5fbb],cl
  41a992:	adc    DWORD PTR [eax-0x7f],esp
  41a995:	add    ch,BYTE PTR [esi-0x47]
  41a998:	push   0xf28c257d
  41a99d:	or     al,0x26
  41a99f:	fnstcw WORD PTR [eax+0x4bf42661]
  41a9a5:	sbb    BYTE PTR [edi+0x23],ah
  41a9a8:	add    edx,DWORD PTR [esi-0x1981bc7e]
  41a9ae:	inc    eax
  41a9af:	xor    DWORD PTR [edx-0x6fb854ce],ebx
  41a9b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9b6:	jg     0x41a97c
  41a9b8:	dec    eax
  41a9b9:	inc    esi
  41a9ba:	repz push edx
  41a9bc:	pop    eax
  41a9bd:	in     al,0xe6
  41a9bf:	mov    DWORD PTR [edi+0x2c4b8f6f],esp
  41a9c5:	in     al,dx
  41a9c6:	mov    ecx,0xd9333d0a
  41a9cb:	add    eax,0xf04f152c
  41a9d0:	loopne 0x41a9b2
  41a9d2:	shl    BYTE PTR [edx],cl
  41a9d4:	int3   
  41a9d5:	push   es
  41a9d6:	iret   
  41a9d7:	dec    esp
  41a9d8:	adc    edx,esp
  41a9da:	lea    edx,[eax-0x56c65800]
  41a9e0:	dec    ebx
  41a9e1:	sub    BYTE PTR [edi],0x80
  41a9e4:	(bad)  
  41a9e5:	aam    0x7d
  41a9e7:	cmp    ecx,DWORD PTR [edi+0x1db1211d]
  41a9ed:	inc    ebx
  41a9ee:	pop    ss
  41a9ef:	mov    esi,0x3cac4c73
  41a9f4:	imul   ebp,DWORD PTR [ebp+ebx*8+0x2b3bfe02],0xfc6423ca
  41a9ff:	mov    ah,0x2c
  41aa01:	int    0x95
  41aa03:	imul   ecx,DWORD PTR [edi+0x3ee9308a],0xd6019b33
  41aa0d:	jp     0x41aa06
  41aa0f:	lock inc eax
  41aa11:	in     al,dx
  41aa12:	mov    al,0x3
  41aa14:	cmp    BYTE PTR [ebp-0x20],ch
  41aa17:	mov    al,0x91
  41aa19:	mov    ah,0xf3
  41aa1b:	fcom   QWORD PTR [esi+0x40726eec]
  41aa21:	mov    al,ds:0xb8511e2a
  41aa26:	push   ecx
  41aa27:	push   esp
  41aa28:	in     al,dx
  41aa29:	dec    edi
  41aa2a:	adc    eax,0x5f59ed31
  41aa2f:	sub    dl,bl
  41aa31:	or     BYTE PTR [ecx],bh
  41aa33:	jae    0x41aa4f
  41aa35:	jle    0x41a9ee
  41aa37:	sar    bh,cl
  41aa39:	push   ss
  41aa3a:	mov    ds:0x4e061bd6,eax
  41aa3f:	inc    eax
  41aa40:	hlt    
  41aa41:	mov    edi,esp
  41aa43:	test   DWORD PTR ss:[esi+ecx*1-0x7e],edi
  41aa48:	pop    es
  41aa49:	cmp    eax,DWORD PTR [ecx-0x54]
  41aa4c:	iret   
  41aa4d:	sub    dh,ch
  41aa4f:	pop    ds
  41aa50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa52:	sbb    al,0xee
  41aa54:	jo     0x41aaaa
  41aa56:	addr16 mov ds:0xb6dc,al
  41aa5a:	cdq    
  41aa5b:	sbb    al,0xf1
  41aa5d:	jmp    0xda7:0xb1f81ee8
  41aa64:	fcmovnb st,st(2)
  41aa66:	xor    ebp,DWORD PTR [ebx+edx*8-0x6459d7fd]
  41aa6d:	test   al,0xae
  41aa6f:	sbb    al,0x72
  41aa71:	add    dh,dh
  41aa73:	adc    BYTE PTR [edi+esi*1-0x418b8de9],ch
  41aa7a:	test   BYTE PTR [edi],bl
  41aa7c:	mov    edi,0x9be00849
  41aa81:	inc    eax
  41aa82:	jns    0x41aab2
  41aa84:	into   
  41aa85:	inc    esp
  41aa86:	inc    esp
  41aa87:	cmp    eax,0xddc1c5b3
  41aa8c:	(bad)  
  41aa8d:	aad    0x45
  41aa8f:	mov    edi,0x46ef2493
  41aa94:	ins    DWORD PTR es:[edi],dx
  41aa95:	mov    al,ds:0x88ebb021
  41aa9a:	fucomi st,st(5)
  41aa9c:	and    edx,DWORD PTR [ebp+0x4d929058]
  41aaa2:	pop    edx
  41aaa3:	pop    ecx
  41aaa4:	sbb    DWORD PTR ds:0x908b7db5,ebx
  41aaaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaab:	stc    
  41aaac:	mov    dl,0x1e
  41aaae:	sub    BYTE PTR [eax+ecx*2],ah
  41aab1:	xor    al,0x3c
  41aab3:	cmp    eax,DWORD PTR [esi]
  41aab5:	(bad)  
  41aab6:	stos   BYTE PTR es:[edi],al
  41aab7:	test   al,0x9d
  41aab9:	iret   
  41aaba:	mul    DWORD PTR [ebx+0x3]
  41aabd:	jno    0x41ab1c
  41aabf:	push   edx
  41aac0:	sub    edx,DWORD PTR [edx-0x2e]
  41aac3:	xor    edi,ecx
  41aac5:	scas   eax,DWORD PTR es:[edi]
  41aac6:	cmp    al,0x81
  41aac8:	sbb    edi,ebx
  41aaca:	cld    
  41aacb:	jecxz  0x41ab1e
  41aacd:	bound  esp,QWORD PTR [edi]
  41aacf:	dec    edi
  41aad0:	sub    al,0xe
  41aad2:	sub    eax,DWORD PTR [ebp-0x14]
  41aad5:	js     0x41aad6
  41aad7:	dec    esp
  41aad8:	xchg   DWORD PTR [eax],esp
  41aada:	xor    BYTE PTR [edi+ecx*1],dh
  41aadd:	leave  
  41aade:	sbb    dl,BYTE PTR [eax]
  41aae0:	iret   
  41aae1:	rcl    esp,0xad
  41aae4:	sub    edx,esi
  41aae6:	stc    
  41aae7:	pusha  
  41aae8:	mov    esp,0x9716a584
  41aaed:	rcl    BYTE PTR [ecx+0x72],cl
  41aaf0:	aam    0xba
  41aaf2:	jg     0x41aad7
  41aaf4:	lock sbb ebp,ebx
  41aaf7:	xchg   esi,eax
  41aaf8:	pop    ecx
  41aaf9:	push   ebx
  41aafa:	dec    edx
  41aafb:	outs   dx,DWORD PTR ds:[esi]
  41aafc:	or     bl,dh
  41aafe:	xchg   edx,eax
  41aaff:	adc    DWORD PTR [ebx+0x53],ebx
  41ab02:	inc    ecx
  41ab03:	js     0x41ab48
  41ab05:	mov    esi,0x3860e3f0
  41ab0a:	test   al,0xca
  41ab0c:	js     0x41aac6
  41ab0e:	fst    DWORD PTR [esi-0x1d4fd855]
  41ab14:	loope  0x41ab35
  41ab16:	push   ss
  41ab17:	cs aas 
  41ab19:	cs scas al,BYTE PTR es:[edi]
  41ab1b:	mov    al,0xc8
  41ab1d:	call   0x452a:0xbe41787a
  41ab24:	sub    ah,BYTE PTR [edi]
  41ab26:	popa   
  41ab27:	shr    DWORD PTR [ebx-0x1c422700],1
  41ab2d:	mov    edx,0x9bc77e19
  41ab32:	fimul  DWORD PTR [ebx]
  41ab34:	js     0x41aadd
  41ab36:	jecxz  0x41ab4c
  41ab38:	jl     0x41aac1
  41ab3a:	test   BYTE PTR [edx-0x76350047],cl
  41ab40:	cmp    BYTE PTR [edi-0x20],cl
  41ab43:	mov    ebx,0xbdae0a2b
  41ab48:	adc    al,0x28
  41ab4a:	fs into 
  41ab4c:	in     al,dx
  41ab4d:	and    ecx,DWORD PTR [ebp+0x4c00ff04]
  41ab53:	ins    BYTE PTR es:[edi],dx
  41ab54:	retf   
  41ab55:	jp     0x41ab7a
  41ab57:	push   esi
  41ab58:	call   DWORD PTR [eax-0x2bc725e1]
  41ab5e:	pusha  
  41ab5f:	jle    0x41abcf
  41ab61:	and    eax,0x75a106cf
  41ab66:	inc    esi
  41ab67:	rcl    BYTE PTR [edx+0x104df46b],cl
  41ab6d:	loop   0x41abe0
  41ab6f:	xlat   BYTE PTR ds:[ebx]
  41ab70:	inc    esp
  41ab71:	inc    ebp
  41ab72:	pcmpeqb mm4,QWORD PTR [ebx-0x3b085a56]
  41ab79:	mov    ch,BYTE PTR [esi+esi*1]
  41ab7c:	shl    BYTE PTR [ebp+0x6f],1
  41ab7f:	shl    BYTE PTR [ecx+eax*4+0x22],0xd2
  41ab84:	std    
  41ab85:	inc    eax
  41ab86:	push   edx
  41ab87:	push   edx
  41ab88:	(bad)  [ecx-0x6b]
  41ab8b:	lods   al,BYTE PTR ds:[esi]
  41ab8c:	adc    BYTE PTR [ebp-0x74],dl
  41ab8f:	mov    ebp,0x707a4754
  41ab94:	sub    ax,0xa482
  41ab98:	ja     0x41abad
  41ab9a:	popf   
  41ab9b:	mov    edx,0x8cc642d6
  41aba0:	mov    bh,ch
  41aba2:	test   eax,0x94cf7aa3
  41aba7:	cwde   
  41aba8:	out    0x44,eax
  41abaa:	sti    
  41abab:	pop    ecx
  41abac:	(bad)
  41abaf:	mov    esp,0x3a9c961
  41abb4:	sti    
  41abb5:	jecxz  0x41ac07
  41abb7:	adc    al,bh
  41abb9:	ror    BYTE PTR [eax+esi*2+0x40],cl
  41abbd:	test   al,0x27
  41abbf:	test   dh,0xb0
  41abc2:	dec    ecx
  41abc3:	mov    bl,0x59
  41abc5:	nop
  41abc6:	dec    edi
  41abc7:	adc    esp,ebx
  41abc9:	idiv   DWORD PTR [ebx+edx*2]
  41abcc:	pusha  
  41abcd:	jb     0x41abf5
  41abcf:	aas    
  41abd0:	mov    ch,0xc2
  41abd2:	iret   
  41abd3:	out    0x1f,al
  41abd5:	int3   
  41abd6:	sbb    ah,BYTE PTR [esi-0x7efcb531]
  41abdc:	and    esp,DWORD PTR [esi]
  41abde:	add    cl,bl
  41abe0:	in     eax,dx
  41abe1:	pop    ss
  41abe2:	adc    al,0x3e
  41abe4:	fistp  DWORD PTR [edx-0x70b54277]
  41abea:	xchg   esi,eax
  41abeb:	into   
  41abec:	mov    ds:0x3e39f025,al
  41abf1:	loop   0x41abf7
  41abf3:	das    
  41abf4:	popf   
  41abf5:	imul   edi,DWORD PTR [ecx+0x42],0x51
  41abf9:	cmc    
  41abfa:	stos   DWORD PTR es:[edi],eax
  41abfb:	mov    dh,0x2e
  41abfd:	out    0xeb,al
  41abff:	push   edi
  41ac00:	data16 and BYTE PTR [eax],ch
  41ac03:	mov    eax,DWORD PTR [ecx+ecx*8+0x18]
  41ac07:	and    edi,DWORD PTR [ebp-0x32b1b8bc]
  41ac0d:	mov    ds:0x4cbbc1e5,al
  41ac12:	(bad)  
  41ac13:	sub    al,0x25
  41ac15:	push   es
  41ac16:	shl    BYTE PTR [edx-0x461b7f36],1
  41ac1c:	sub    bl,BYTE PTR [edx]
  41ac1e:	push   ss
  41ac1f:	mov    al,0xca
  41ac21:	jnp    0x41abc9
  41ac23:	int3   
  41ac24:	(bad)  
  41ac25:	jb     0x41ac5e
  41ac27:	lock shl ebp,1
  41ac2a:	cmp    BYTE PTR ds:0x24aaa28f,bh
  41ac30:	sbb    cl,BYTE PTR [edi+0x15]
  41ac33:	xchg   edx,eax
  41ac34:	dec    esi
  41ac35:	pusha  
  41ac36:	icebp  
  41ac37:	fdiv   QWORD PTR [esi+0x2b]
  41ac3a:	mov    bl,0x9b
  41ac3c:	adc    dh,BYTE PTR [ecx-0x3d]
  41ac3f:	push   eax
  41ac40:	fist   WORD PTR [eax]
  41ac42:	sahf   
  41ac43:	and    eax,0xc7286938
  41ac48:	jne    0x41ac92
  41ac4a:	jns    0x41ac19
  41ac4c:	and    DWORD PTR [ebx+0x2269464e],ebx
  41ac52:	mov    esi,0x37a6f4de
  41ac57:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac59:	jo     0x41abeb
  41ac5b:	xor    eax,0x3be452c4
  41ac60:	adc    al,BYTE PTR [ebx+0x54]
  41ac63:	or     DWORD PTR [ebx],edi
  41ac65:	inc    ecx
  41ac66:	enter  0x8e2a,0x84
  41ac6a:	jns    0x41acb6
  41ac6c:	inc    ebx
  41ac6d:	dec    edi
  41ac6e:	dec    ebx
  41ac6f:	jmp    0x41ac79
  41ac71:	sar    BYTE PTR [ecx+edi*2+0x20],0xcf
  41ac76:	jp     0x41ac8f
  41ac78:	mov    dh,ch
  41ac7a:	out    0x18,eax
  41ac7c:	es in  al,0xe2
  41ac7f:	test   eax,0x5c641a25
  41ac84:	sub    bh,ah
  41ac86:	es in  al,0xe0
  41ac89:	call   0x7000f9d6
  41ac8e:	push   ss
  41ac8f:	cmp    ch,BYTE PTR [eax+0x67762e03]
  41ac95:	jo     0x41ac81
  41ac97:	cmp    al,0x4f
  41ac99:	pushw  0x45d
  41ac9d:	imul   eax,DWORD PTR [esi],0xffffffef
  41aca0:	mov    eax,0x54dd1a99
  41aca5:	or     dh,BYTE PTR [ecx]
  41aca7:	and    DWORD PTR [esi-0x1442d58c],0x89724545
  41acb1:	cmp    eax,0xe2bc0994
  41acb6:	add    BYTE PTR [ecx+0x7e],0x46
  41acba:	retf   
  41acbb:	push   DWORD PTR [ebx]
  41acbd:	xchg   edx,eax
  41acbe:	das    
  41acbf:	fwait
  41acc0:	sub    al,0x83
  41acc2:	sbb    DWORD PTR [ebx+0x15],edx
  41acc5:	imul   edi,DWORD PTR ss:[esi+0x76],0x5d
  41acca:	cmp    ebp,DWORD PTR [ebp-0x8]
  41accd:	jo     0x41acd6
  41accf:	add    BYTE PTR [edx+0x78],bl
  41acd2:	repnz imul ebx,DWORD PTR [edx+ebx*2-0x494e9901],0xff004365
  41acde:	ret    
  41acdf:	cmp    dh,cl
  41ace1:	imul   ebx,DWORD PTR [ecx+0xf],0xc64dc7de
  41ace8:	jmp    0xadebb19
  41aced:	inc    ebx
  41acee:	sti    
  41acef:	(bad)  
  41acf0:	(bad)  
  41acf1:	pop    ds
  41acf2:	push   es
  41acf3:	ret    
  41acf4:	sahf   
  41acf5:	add    DWORD PTR [eax],ebx
  41acf7:	sbb    eax,0xda33cac
  41acfc:	adc    al,0x33
  41acfe:	add    dh,BYTE PTR [edx+0x62c9f070]
  41ad04:	jmp    0x41acd6
  41ad06:	ret    0xf386
  41ad09:	iret   
  41ad0a:	add    DWORD PTR [edx],ebx
  41ad0c:	sbb    BYTE PTR [edx],dh
  41ad0e:	pop    esp
  41ad0f:	add    BYTE PTR ds:0x2b5164a,ch
  41ad15:	hlt    
  41ad16:	(bad)  
  41ad17:	loop   0x41ad65
  41ad19:	lds    esi,FWORD PTR [esi-0x5028f617]
  41ad1f:	sub    DWORD PTR [ecx],0x49567d08
  41ad25:	inc    ecx
  41ad26:	jns    0x41ad47
  41ad28:	push   esp
  41ad29:	fst    DWORD PTR [eax]
  41ad2b:	loop   0x41ace6
  41ad2d:	sti    
  41ad2e:	inc    ecx
  41ad2f:	cmp    DWORD PTR [ecx],ebx
  41ad31:	and    BYTE PTR [esi-0x70962a66],al
  41ad37:	or     cl,BYTE PTR [edx-0x15]
  41ad3a:	push   eax
  41ad3b:	inc    eax
  41ad3c:	daa    
  41ad3d:	xor    esi,DWORD PTR [edx]
  41ad3f:	cwde   
  41ad40:	and    al,bl
  41ad42:	ficomp WORD PTR [edi-0x1c]
  41ad45:	mov    eax,ds:0x2d854d86
  41ad4a:	mov    bl,0x5d
  41ad4c:	jae    0x41ad87
  41ad4e:	fwait
  41ad4f:	xlat   BYTE PTR ds:[ebx]
  41ad50:	fsub   DWORD PTR [ebx-0x66]
  41ad53:	lea    ebp,[ecx+ecx*2+0x4a]
  41ad57:	imul   ebp,DWORD PTR ds:0xd023881c,0x21
  41ad5e:	test   al,0x61
  41ad60:	and    DWORD PTR [edx+0x267c7d2b],ebx
  41ad66:	sub    DWORD PTR [ecx+esi*1-0x4cdeeb54],ebx
  41ad6d:	inc    edx
  41ad6e:	int3   
  41ad6f:	fwait
  41ad70:	leave  
  41ad71:	push   eax
  41ad72:	push   es
  41ad73:	mov    DWORD PTR [edi],edi
  41ad75:	jp     0x41ad59
  41ad77:	inc    esi
  41ad78:	ja     0x41ad39
  41ad7a:	pop    esp
  41ad7b:	mov    bl,0x5c
  41ad7d:	adc    edx,DWORD PTR ds:[esi]
  41ad80:	adc    eax,0x713df281
  41ad85:	jp     0x41ad9f
  41ad87:	ret    0x29f6
  41ad8a:	push   es
  41ad8b:	pusha  
  41ad8c:	dec    eax
  41ad8d:	xchg   esp,eax
  41ad8e:	ret    
  41ad8f:	arpl   WORD PTR [edx+edx*8-0xb20a80a],ax
  41ad96:	jp     0x41ada1
  41ad98:	out    0x6b,al
  41ad9a:	scas   eax,DWORD PTR es:[di]
  41ad9c:	stos   BYTE PTR es:[edi],al
  41ad9d:	sahf   
  41ad9e:	push   edx
  41ad9f:	test   BYTE PTR [ebx-0x53],ah
  41ada2:	test   al,0xb3
  41ada4:	mov    cl,0x83
  41ada6:	ins    DWORD PTR es:[edi],dx
  41ada7:	rcr    BYTE PTR [esi+0x5d],1
  41adaa:	xchg   esp,eax
  41adab:	sbb    DWORD PTR [ebx-0x6],ebx
  41adae:	jl     0x41ad7c
  41adb0:	xor    al,dl
  41adb2:	das    
  41adb3:	cmp    BYTE PTR [esi+0x1634a5f1],bl
  41adb9:	popf   
  41adba:	dec    ebp
  41adbb:	in     al,dx
  41adbc:	lea    ebp,[esi]
  41adbe:	pop    edi
  41adbf:	mov    ds:0xb966d445,eax
  41adc4:	jo     0x41ae08
  41adc6:	jecxz  0x41ad73
  41adc8:	or     DWORD PTR [eax-0xcaff762],esp
  41adce:	jmp    0x7231:0xe635d74f
  41add5:	mov    dh,bh
  41add7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41add8:	cmp    BYTE PTR [eax-0x2525adc],cl
  41adde:	xchg   esi,eax
  41addf:	lea    ecx,[ebp-0x7f]
  41ade2:	out    dx,eax
  41ade3:	ret    0xa04a
  41ade6:	and    eax,0x4e9c4cc5
  41adeb:	mov    WORD PTR [eax+0x33],?
  41adee:	(bad)  
  41adef:	mov    esp,0xa65a7365
  41adf4:	push   edi
  41adf5:	inc    esp
  41adf6:	in     al,dx
  41adf7:	pop    ebx
  41adf8:	or     BYTE PTR [bp+si-0xcac],ah
  41adfd:	jmp    0xf573b1ae
  41ae02:	out    0x1a,eax
  41ae04:	ins    DWORD PTR es:[edi],dx
  41ae05:	mov    eax,0xfaf0d87c
  41ae0a:	or     eax,0xba225ad8
  41ae0f:	xor    bl,BYTE PTR [esi]
  41ae11:	adc    BYTE PTR [ebp+0x45],dh
  41ae14:	and    ah,ch
  41ae16:	jnp    0x41ae62
  41ae18:	sub    BYTE PTR [edi],dh
  41ae1a:	stos   WORD PTR es:[edi],ax
  41ae1c:	sets   BYTE PTR [ebx-0x4a]
  41ae20:	jmp    0xb14a6307
  41ae25:	cmp    al,0xa6
  41ae27:	ds pop ds
  41ae29:	cmp    eax,0xa4d5dff8
  41ae2e:	mov    al,ds:0x33c3de83
  41ae33:	or     eax,0xa468c7ec
  41ae38:	lea    edx,[edx-0x4156eda3]
  41ae3e:	mov    edx,0xef9a387d
  41ae43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae44:	fmul   DWORD PTR ds:0x989d3161
  41ae4a:	call   DWORD PTR [eax]
  41ae4c:	cmc    
  41ae4d:	pop    ecx
  41ae4e:	lahf   
  41ae4f:	adc    edi,DWORD PTR [ebx+0x14]
  41ae52:	pop    eax
  41ae53:	xor    eax,0x8a6e9c6d
  41ae58:	mov    ecx,0x8c79a1c8
  41ae5d:	or     edi,ebp
  41ae5f:	xchg   esi,eax
  41ae60:	mov    BYTE PTR [eax],cl
  41ae62:	cmp    esi,edx
  41ae64:	loopne 0x41ae66
  41ae66:	out    0x48,al
  41ae68:	loop   0x41ae8f
  41ae6a:	pop    es
  41ae6b:	inc    ebp
  41ae6c:	mov    eax,0x59e33d66
  41ae71:	mov    bh,0xc0
  41ae73:	and    eax,0xc8da6047
  41ae78:	push   ss
  41ae79:	add    ebp,edi
  41ae7b:	out    dx,eax
  41ae7c:	dec    esp
  41ae7d:	xor    edi,DWORD PTR [edx+0x15]
  41ae80:	jecxz  0x41ae9b
  41ae82:	mov    bl,0x3a
  41ae84:	jbe    0x41ae6c
  41ae86:	adc    eax,0x7332817d
  41ae8b:	(bad)  
  41ae8c:	fdivr  st,st(2)
  41ae8e:	pop    edi
  41ae8f:	jmp    0xeb07:0x60074f0e
  41ae96:	jg     0x41aee8
  41ae98:	mov    esp,0x218eb5dc
  41ae9d:	push   eax
  41ae9e:	cld    
  41ae9f:	in     al,0x84
  41aea1:	or     eax,0xbed3bd8b
  41aea6:	sub    ebp,DWORD PTR [ebp+0x25]
  41aea9:	pop    esi
  41aeaa:	pop    esi
  41aeab:	or     eax,0xbb438562
  41aeb0:	adc    dh,al
  41aeb2:	xlat   BYTE PTR ds:[ebx]
  41aeb3:	sub    DWORD PTR [edi+0x58],ebp
  41aeb6:	out    0x69,al
  41aeb8:	and    eax,edx
  41aeba:	hlt    
  41aebb:	cdq    
  41aebc:	xchg   ecx,eax
  41aebd:	add    al,0xe6
  41aebf:	es and ch,dl
  41aec2:	repz cdq 
  41aec4:	inc    esp
  41aec5:	leave  
  41aec6:	xor    al,0x79
  41aec8:	or     BYTE PTR [edi-0x27879727],dh
  41aece:	loope  0x41aec5
  41aed0:	test   BYTE PTR [edi-0x15b837da],al
  41aed6:	inc    esp
  41aed7:	out    0x41,al
  41aed9:	push   DWORD PTR [eax-0x4c750637]
  41aedf:	mov    DWORD PTR [edx+0xb42ee07],esp
  41aee5:	jnp    0x41ae6d
  41aee7:	or     eax,0x3e51af67
  41aeec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeed:	jl     0x41aed1
  41aeef:	push   cs
  41aef0:	cli    
  41aef1:	mov    cl,0xd0
  41aef3:	pop    ecx
  41aef4:	das    
  41aef5:	stc    
  41aef6:	xchg   esp,eax
  41aef7:	sbb    ch,BYTE PTR [esi+0xf95596a]
  41aefd:	jnp    0x41ae87
  41aeff:	adc    al,cl
  41af01:	ja     0x41ae90
  41af03:	out    0x9d,al
  41af05:	in     eax,dx
  41af06:	xor    DWORD PTR ds:0x6b4e21b8,ebp
  41af0c:	jae    0x41af18
  41af0e:	fild   WORD PTR [edx-0x4d]
  41af11:	je     0x41af36
  41af13:	mov    cl,0x64
  41af15:	xor    al,0x7
  41af17:	or     cl,dh
  41af19:	dec    esp
  41af1a:	rcl    dl,cl
  41af1c:	jne    0x41af7a
  41af1e:	jge    0x41af28
  41af20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af21:	xor    DWORD PTR [edx+0xe5c2f65],eax
  41af27:	jge    0x41af46
  41af29:	lock mov cs,WORD PTR [bx+di-0x19]
  41af2e:	popf   
  41af2f:	out    0xa,eax
  41af31:	sbb    al,0x63
  41af33:	sub    al,0xa9
  41af35:	neg    BYTE PTR [esi+esi*4+0x25]
  41af39:	adc    eax,0xa1df34c8
  41af3e:	add    eax,0x1d69452e
  41af43:	and    al,BYTE PTR [ebp-0x4c]
  41af46:	xor    eax,0xca20c453
  41af4b:	ss and al,0xb4
  41af4e:	push   ebx
  41af4f:	adc    ecx,edi
  41af51:	pop    ebx
  41af52:	inc    eax
  41af53:	jae    0x41af39
  41af55:	test   eax,0xd7eaeef
  41af5a:	sbb    edx,DWORD PTR [esi+eax*4+0x61afeba0]
  41af61:	fcomip st,st(6)
  41af63:	or     al,0x4a
  41af65:	inc    edx
  41af66:	jns    0x41af3f
  41af68:	sub    bh,bl
  41af6a:	mov    eax,0x911aa06
  41af6f:	inc    esi
  41af70:	cmp    al,0x3f
  41af72:	adc    dh,BYTE PTR ds:0x74bd6920
  41af78:	in     eax,dx
  41af79:	rol    DWORD PTR [esi],0x85
  41af7c:	outs   dx,DWORD PTR ds:[esi]
  41af7d:	and    bh,BYTE PTR [ebp-0x18]
  41af80:	fistp  WORD PTR [ecx+0x3d12fc6c]
  41af86:	test   DWORD PTR [edx-0x1f],esp
  41af89:	mov    ds:0x3ed086e9,al
  41af8e:	ficom  WORD PTR [ecx-0x6e]
  41af91:	fist   WORD PTR [edx]
  41af93:	sbb    ecx,DWORD PTR [eax+0x420aa706]
  41af99:	push   0xffffffb1
  41af9b:	xchg   ebx,eax
  41af9c:	jmp    0x593c:0x8604d6c9
  41afa3:	js     0x41b00a
  41afa5:	sbb    BYTE PTR [ecx-0x23adce9a],ch
  41afab:	outs   dx,BYTE PTR ds:[esi]
  41afac:	popa   
  41afad:	fcom   DWORD PTR [edi-0x42885e77]
  41afb3:	push   esi
  41afb4:	ret    
  41afb5:	xlat   BYTE PTR ds:[ebx]
  41afb6:	ins    DWORD PTR es:[edi],dx
  41afb7:	test   BYTE PTR [edx-0x68],0x3f
  41afbb:	sti    
  41afbc:	loop   0x41afef
  41afbe:	jnp    0xdedc5f45
  41afc4:	loop   0x41b008
  41afc6:	jno    0x41affd
  41afc8:	test   DWORD PTR [edx+edi*4-0x94f7034],edx
  41afcf:	(bad)  
  41afd0:	in     eax,dx
  41afd1:	jb     0x41b04a
  41afd3:	push   0xb7d058e
  41afd8:	xchg   dl,ah
  41afda:	sbb    DWORD PTR [esi],esi
  41afdc:	mov    bh,0x47
  41afde:	je     0x41aff0
  41afe0:	jae    0x41aff1
  41afe2:	ror    BYTE PTR [edi+0x571e42bb],0x8f
  41afe9:	jns    0x41b045
  41afeb:	aad    0x84
  41afed:	fwait
  41afee:	pusha  
  41afef:	leave  
  41aff0:	sub    BYTE PTR [edi-0x3dc45462],0x79
  41aff7:	or     dh,BYTE PTR [ecx-0x3e1691b8]
  41affd:	shr    dl,1
  41afff:	mov    ecx,0x18b2734d
  41b004:	imul   eax,ebp,0xe584ae49
  41b00a:	dec    ebp
  41b00b:	icebp  
  41b00c:	dec    edx
  41b00d:	adc    eax,0xe0436fb2
  41b012:	add    eax,0x9caa06a
  41b017:	lahf   
  41b018:	jmp    0x41b08a
  41b01a:	jbe    0x41b031
  41b01c:	adc    al,bl
  41b01e:	outs   dx,DWORD PTR ds:[esi]
  41b01f:	shl    bh,0x12
  41b022:	pop    ecx
  41b023:	inc    edx
  41b024:	add    edx,edi
  41b026:	ins    DWORD PTR es:[edi],dx
  41b027:	(bad)  
  41b028:	adc    al,0x61
  41b02a:	cld    
  41b02b:	data16 jno 0x41afed
  41b02e:	in     al,0xb6
  41b030:	mov    esp,0x1bd80b31
  41b035:	adc    DWORD PTR [ebx],edi
  41b037:	mov    ds,WORD PTR [edx+0x7335290a]
  41b03d:	leave  
  41b03e:	inc    edi
  41b03f:	adc    BYTE PTR [ecx-0x79a76efb],0x2a
  41b046:	call   0xb668:0xda3d711
  41b04d:	push   es
  41b04e:	lock mov ecx,0x3d5106c6
  41b054:	cmp    esp,DWORD PTR [ebp*8+0x769399e0]
  41b05b:	jg     0x41b0a5
  41b05d:	mov    eax,ds:0x1fc3e32a
  41b062:	jmp    0x460c8e61
  41b067:	and    al,0x9e
  41b069:	mov    al,0x8c
  41b06b:	out    0x1f,eax
  41b06d:	mov    cl,0xab
  41b06f:	and    esi,DWORD PTR [esi+0x2d]
  41b072:	in     eax,dx
  41b073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b074:	and    dh,ah
  41b076:	add    DWORD PTR [esi-0x2e5d5684],esi
  41b07c:	cwde   
  41b07d:	xor    DWORD PTR [esi+0x231fef1a],0x9d4bc365
  41b087:	inc    ebp
  41b088:	jb     0x41b0f5
  41b08a:	xor    edi,DWORD PTR [ebx-0x1f]
  41b08d:	(bad)  
  41b090:	rol    BYTE PTR [edi],0x9b
  41b093:	(bad)  
  41b094:	out    dx,eax
  41b095:	adc    DWORD PTR [ebx-0x2d],esi
  41b098:	sub    DWORD PTR [edi-0x68],esp
  41b09b:	fidivr DWORD PTR [ebp+edi*4-0x77]
  41b09f:	cld    
  41b0a0:	dec    esi
  41b0a1:	dec    esi
  41b0a2:	mov    eax,ds:0x9982f355
  41b0a7:	lock push ss
  41b0a9:	add    BYTE PTR ds:0x729b08a2,bl
  41b0af:	outs   dx,BYTE PTR ds:[esi]
  41b0b0:	into   
  41b0b1:	xchg   BYTE PTR [eax],dh
  41b0b3:	retf   
  41b0b4:	jo     0x41b0d6
  41b0b6:	pop    es
  41b0b7:	mov    ecx,0x4a15e9e6
  41b0bc:	pushf  
  41b0bd:	das    
  41b0be:	dec    ecx
  41b0bf:	ja     0x41b0b2
  41b0c1:	gs sub eax,0x41c13675
  41b0c7:	mov    ebx,0xc34e2d24
  41b0cc:	(bad)  
  41b0cd:	mov    ecx,ebp
  41b0cf:	fld    QWORD PTR [edi+0xa]
  41b0d2:	inc    ebp
  41b0d3:	sbb    edx,DWORD PTR [ecx+0x48fa408e]
  41b0d9:	lods   al,BYTE PTR ds:[esi]
  41b0da:	cwde   
  41b0db:	push   edi
  41b0dc:	dec    edx
  41b0dd:	xor    al,0xf2
  41b0df:	mov    ah,0x55
  41b0e1:	mov    ah,BYTE PTR [edx-0xf850f7e]
  41b0e7:	adc    al,0x48
  41b0e9:	xor    eax,0xa694402f
  41b0ee:	sub    al,0xfe
  41b0f0:	xchg   esi,eax
  41b0f1:	(bad)  
  41b0f2:	ficomp WORD PTR [ecx+ebp*8+0x61]
  41b0f6:	push   ss
  41b0f7:	mov    esi,0xacd3dd13
  41b0fc:	sub    eax,0xf83759d6
  41b101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b102:	mov    esp,0x6ac82088
  41b107:	mov    ?,WORD PTR [edx+0x5b]
  41b10a:	outs   dx,BYTE PTR ds:[esi]
  41b10b:	sub    ebp,DWORD PTR [edx]
  41b10d:	icebp  
  41b10e:	mov    bl,0x1f
  41b110:	call   FWORD PTR [esi+0x1d]
  41b113:	inc    ebx
  41b114:	jbe    0x41b0bb
  41b116:	das    
  41b117:	pop    edx
  41b118:	repz arpl WORD PTR [ecx],bx
  41b11b:	cmc    
  41b11c:	int3   
  41b11d:	mov    ds:0x60f679c4,eax
  41b122:	cmp    eax,0x97c84df4
  41b127:	or     al,0x31
  41b129:	push   esi
  41b12a:	js     0x41b120
  41b12c:	rcl    cl,cl
  41b12e:	(bad)  
  41b12f:	mov    ah,0x20
  41b131:	imul   BYTE PTR gs:[edx+esi*4+0x69]
  41b136:	les    edi,FWORD PTR [esp+edi*8]
  41b139:	adc    eax,0xc2ac9312
  41b13e:	out    0x5d,al
  41b140:	sub    DWORD PTR ds:[edi-0x6ac9f54f],0x88127f57
  41b14b:	test   eax,0x3d231afc
  41b150:	and    eax,0xdd326b3d
  41b155:	mov    ds:0x3779be52,eax
  41b15a:	add    BYTE PTR [ebx],0xff
  41b15d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b15e:	push   0x3e
  41b160:	test   al,0x34
  41b162:	jbe    0x41b151
  41b164:	xchg   esp,eax
  41b165:	cli    
  41b166:	aam    0x26
  41b168:	xchg   edx,eax
  41b169:	push   esi
  41b16a:	inc    ebx
  41b16b:	(bad)  
  41b16c:	jmp    0x1a2b:0xd41907bc
  41b173:	jns    0x41b119
  41b175:	mov    ds:0x2226f81a,al
  41b17a:	jmp    0x25a1:0x9f88511
  41b181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b182:	daa    
  41b183:	mov    DWORD PTR [esi-0x469a959f],esi
  41b189:	lods   al,BYTE PTR ds:[esi]
  41b18a:	add    eax,0x6abc0670
  41b18f:	adc    DWORD PTR [esi],esi
  41b191:	mov    ah,0xeb
  41b193:	dec    esp
  41b194:	sub    ch,BYTE PTR [eax]
  41b196:	inc    edx
  41b197:	sti    
  41b198:	xchg   edi,eax
  41b199:	add    eax,DWORD PTR [eax-0x27f4c4d4]
  41b19f:	push   cs
  41b1a0:	fsub   QWORD PTR [ebp+0x1a]
  41b1a3:	pushf  
  41b1a4:	es dec bh
  41b1a7:	mov    ds:0xf546a60c,al
  41b1ac:	or     edi,DWORD PTR [esi-0x5d774a42]
  41b1b2:	pop    ebx
  41b1b3:	nop
  41b1b4:	pop    ecx
  41b1b5:	pushf  
  41b1b6:	jb     0x41b187
  41b1b8:	cmp    bh,BYTE PTR [eax-0xa1ba2bb]
  41b1be:	clc    
  41b1bf:	leave  
  41b1c0:	inc    esp
  41b1c1:	pop    es
  41b1c2:	and    eax,0x1666e9ef
  41b1c7:	fbld   TBYTE PTR [edi-0x3150a8a9]
  41b1cd:	into   
  41b1ce:	repnz iret 
  41b1d0:	mov    edx,DWORD PTR [edi-0x4a49f47]
  41b1d6:	js     0x41b19e
  41b1d8:	(bad)  
  41b1d9:	xchg   edx,eax
  41b1da:	cmp    al,0xc5
  41b1dc:	(bad)  
  41b1dd:	cmc    
  41b1de:	inc    ecx
  41b1df:	mov    al,ds:0x4ebf4a97
  41b1e4:	sbb    DWORD PTR [edi+edx*4-0x17],ebx
  41b1e8:	js     0x41b1e0
  41b1ea:	(bad)  
  41b1eb:	inc    ebx
  41b1ec:	aaa    
  41b1ed:	add    eax,0x9222ab04
  41b1f2:	push   ebp
  41b1f3:	loope  0x41b231
  41b1f5:	int3   
  41b1f6:	sbb    DWORD PTR [ecx+0x42],eax
  41b1f9:	outs   dx,BYTE PTR ds:[esi]
  41b1fa:	add    esp,esi
  41b1fc:	out    dx,al
  41b1fd:	mov    ch,0x9f
  41b1ff:	lea    ecx,[edx-0x67]
  41b202:	sub    eax,0x9b653c5b
  41b207:	test   eax,0x49a08270
  41b20c:	(bad)
  41b210:	ins    DWORD PTR es:[edi],dx
  41b211:	shr    DWORD PTR [ecx+ebx*8],cl
  41b214:	mul    DWORD PTR [edi]
  41b216:	out    0x57,al
  41b218:	lods   al,BYTE PTR ds:[esi]
  41b219:	icebp  
  41b21a:	fdivp  st(4),st
  41b21c:	push   ebx
  41b21d:	sbb    al,0xbf
  41b21f:	push   0x38
  41b221:	ss mov al,0x8b
  41b224:	stc    
  41b225:	mov    dl,0xa0
  41b227:	in     eax,dx
  41b228:	sub    al,0xc4
  41b22a:	jae    0x41b230
  41b22c:	pusha  
  41b22d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b22e:	(bad)  
  41b22f:	call   0xc00be0c7
  41b234:	(bad)  
  41b235:	fild   QWORD PTR [eax-0xd]
  41b238:	in     al,dx
  41b239:	stos   BYTE PTR es:[edi],al
  41b23a:	retf   
  41b23b:	mov    edi,0x499c915d
  41b240:	sub    eax,0x5ea8f41b
  41b245:	scas   al,BYTE PTR es:[edi]
  41b246:	fwait
  41b247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b248:	add    al,BYTE PTR [ebp-0x2cad5313]
  41b24e:	jl     0x41b1de
  41b250:	dec    esp
  41b251:	mov    al,ds:0x594f1142
  41b256:	push   edi
  41b257:	and    eax,eax
  41b259:	xlat   BYTE PTR ds:[ebx]
  41b25a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b25b:	stos   BYTE PTR es:[edi],al
  41b25c:	sub    al,BYTE PTR [esi+0x45]
  41b25f:	sbb    DWORD PTR [edx],eax
  41b261:	push   0x65
  41b263:	pop    ebp
  41b264:	jne    0x41b26d
  41b266:	xchg   DWORD PTR [edi+0x39],ebx
  41b269:	cmp    ebp,DWORD PTR [edi]
  41b26b:	sahf   
  41b26c:	mov    ch,0xc9
  41b26e:	xchg   esp,eax
  41b26f:	and    ecx,esp
  41b271:	cmc    
  41b272:	xchg   edx,eax
  41b273:	mov    al,0xb7
  41b275:	inc    esi
  41b276:	hlt    
  41b277:	mov    ds:0x4305c6d5,eax
  41b27c:	ss pop ebp
  41b27e:	mov    edx,0x8f094105
  41b283:	inc    ebp
  41b284:	enter  0x4355,0x7e
  41b288:	arpl   WORD PTR [ebx-0x4f0862c4],bx
  41b28e:	stc    
  41b28f:	cdq    
  41b290:	ds (bad) 
  41b292:	dec    ebx
  41b293:	xlat   BYTE PTR ds:[ebx]
  41b294:	add    BYTE PTR [edx+0x11],0x4b
  41b298:	in     eax,0x7b
  41b29a:	xor    BYTE PTR ss:[eax-0x1f5f7440],dh
  41b2a1:	xchg   ebx,eax
  41b2a2:	lock idiv DWORD PTR [ebx+0x4f99b0ef]
  41b2a9:	nop
  41b2aa:	cmp    DWORD PTR [eax-0x282c780],esi
  41b2b0:	inc    eax
  41b2b1:	call   0xa28f:0x73dc512d
  41b2b8:	xchg   DWORD PTR [eax+0x3b97b750],ebp
  41b2be:	jl     0x41b2ec
  41b2c0:	mov    edx,edx
  41b2c2:	mov    bh,0xc1
  41b2c4:	sbb    eax,0xeef33616
  41b2c9:	fdiv   DWORD PTR [ebp+eiz*2-0x4c]
  41b2cd:	dec    esp
  41b2ce:	and    bl,BYTE PTR [edx+0x17]
  41b2d1:	mov    edi,0xf17e0c58
  41b2d6:	mov    ds:0x8012b766,al
  41b2db:	push   0x7be2530
  41b2e0:	pusha  
  41b2e1:	out    dx,eax
  41b2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2e3:	fsubr  st,st(2)
  41b2e5:	push   edi
  41b2e6:	fwait
  41b2e7:	or     al,0x4a
  41b2e9:	js     0x41b2d1
  41b2eb:	jo     0x41b2e3
  41b2ed:	push   ecx
  41b2ee:	xchg   esp,eax
  41b2ef:	ds enter 0x3a23,0x2f
  41b2f4:	lods   eax,DWORD PTR ds:[esi]
  41b2f5:	loop   0x41b30d
  41b2f7:	xchg   ebp,eax
  41b2f8:	pop    ds
  41b2f9:	sbb    eax,0x9d2f8f39
  41b2fe:	add    BYTE PTR [edx-0x56754b00],0x47
  41b305:	sub    al,bl
  41b307:	pop    edx
  41b308:	adc    DWORD PTR ds:0xfbe27d31,edi
  41b30e:	push   ds
  41b30f:	gs out dx,eax
  41b311:	xlat   BYTE PTR ds:[ebx]
  41b312:	in     al,0xda
  41b314:	std    
  41b315:	cs mov bl,0x3e
  41b318:	fpatan 
  41b31a:	mov    ds:0xca1847a,eax
  41b31f:	loope  0x41b33d
  41b321:	or     bh,BYTE PTR [ebp-0x4c]
  41b324:	dec    edx
  41b325:	and    DWORD PTR [esp],ebx
  41b328:	in     eax,0xee
  41b32a:	push   ds
  41b32b:	and    DWORD PTR [edi-0x3a95db7a],0xffffffbf
  41b332:	dec    edx
  41b333:	mov    dl,0x8a
  41b335:	aad    0xc6
  41b337:	(bad)  
  41b33a:	xchg   esi,eax
  41b33b:	cmp    DWORD PTR [edx+0x17],edi
  41b33e:	xor    al,0x94
  41b340:	cmp    DWORD PTR [esi+0x30dd3aa2],edi
  41b346:	mov    eax,ds:0xe006dc2d
  41b34b:	jns    0x41b3c7
  41b34d:	push   0x8053afaf
  41b352:	out    0xde,al
  41b354:	sar    BYTE PTR [edx-0x36],0x93
  41b358:	ror    DWORD PTR [eax+0x33f9faed],1
  41b35e:	pusha  
  41b35f:	retf   0x4183
  41b362:	int3   
  41b363:	sbb    DWORD PTR gs:[ebp+0x15f758e],ecx
  41b36a:	cmc    
  41b36b:	jle    0x41b316
  41b36d:	aad    0xfa
  41b36f:	dec    edx
  41b370:	add    al,0x42
  41b372:	sbb    esi,ebx
  41b374:	psraw  mm1,QWORD PTR [ebx+0x51]
  41b378:	xchg   ecx,eax
  41b379:	mov    ebx,?
  41b37b:	mov    dl,bh
  41b37d:	xor    BYTE PTR [ebx-0x1b],ch
  41b380:	hlt    
  41b381:	js     0x41b373
  41b383:	aad    0x17
  41b385:	xchg   esp,eax
  41b386:	push   ss
  41b387:	das    
  41b388:	clc    
  41b389:	push   edx
  41b38a:	jg     0x41b3c9
  41b38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b38d:	mov    esp,DWORD PTR [esp+esi*8+0x2e]
  41b391:	loop   0x41b317
  41b393:	adc    BYTE PTR [ebx+0x6f],0x4a
  41b397:	cdq    
  41b398:	jmp    0xdab9334e
  41b39d:	test   BYTE PTR [ecx-0x39f6696e],ah
  41b3a3:	jb     0x41b329
  41b3a5:	nop
  41b3a6:	xchg   esp,eax
  41b3a7:	addr16 push 0xf517c1c6
  41b3ad:	icebp  
  41b3ae:	stc    
  41b3af:	fmulp  st(6),st
  41b3b1:	repz sbb DWORD PTR [ebx],edx
  41b3b4:	dec    esp
  41b3b5:	outs   dx,DWORD PTR ds:[esi]
  41b3b6:	loopne 0x41b3ea
  41b3b8:	ins    BYTE PTR es:[edi],dx
  41b3b9:	cld    
  41b3ba:	(bad)  
  41b3bb:	jae    0x41b34c
  41b3bd:	rol    DWORD PTR [ebp*8+0x7ec925b5],cl
  41b3c4:	es pop ebp
  41b3c6:	add    DWORD PTR [edx+0x74],0x496126b8
  41b3cd:	cmp    BYTE PTR [esi-0x2a],ah
  41b3d0:	(bad)  
  41b3d1:	xor    BYTE PTR [edi+0x57],cl
  41b3d4:	test   BYTE PTR [esi-0x43b9c3b9],dl
  41b3da:	inc    esi
  41b3db:	mov    eax,ds:0x10044c89
  41b3e0:	and    esi,DWORD PTR [eax+0x4e]
  41b3e3:	sbb    BYTE PTR [edi-0x55],ch
  41b3e6:	inc    eax
  41b3e7:	gs pop esp
  41b3e9:	mov    bl,0xc7
  41b3eb:	lods   al,BYTE PTR ds:[esi]
  41b3ec:	(bad)  
  41b3ed:	push   cs
  41b3ee:	mov    ch,0x1f
  41b3f0:	jge    0x41b453
  41b3f2:	mov    edi,0xccd02906
  41b3f7:	jmp    0x7a4decb7
  41b3fc:	cmp    DWORD PTR ds:0x9b90f369,0x5d
  41b403:	int    0xd0
  41b405:	jno    0x41b464
  41b407:	mov    ch,0xe1
  41b409:	cdq    
  41b40a:	sub    al,0xa6
  41b40c:	inc    eax
  41b40d:	push   0x297e3cd7
  41b412:	push   0xffffffa8
  41b414:	mov    DWORD PTR [ebx-0x11],esi
  41b417:	into   
  41b418:	daa    
  41b419:	imul   esp,DWORD PTR [edx+0x23],0x1
  41b41d:	sahf   
  41b41e:	jb     0x41b3ca
  41b420:	mov    bh,0x67
  41b422:	or     edi,DWORD PTR [edx-0x1]
  41b425:	push   es
  41b426:	repnz pushf 
  41b428:	lods   eax,DWORD PTR ds:[esi]
  41b429:	in     eax,dx
  41b42a:	push   cs
  41b42b:	fisubr DWORD PTR [edx]
  41b42d:	xor    bh,dh
  41b42f:	(bad)  
  41b430:	ins    BYTE PTR es:[edi],dx
  41b431:	jg     0x41b4ac
  41b433:	sub    DWORD PTR [eax+0x1781cbd9],edi
  41b439:	pop    edi
  41b43a:	aas    
  41b43b:	aad    0x8c
  41b43d:	dec    eax
  41b43e:	xor    BYTE PTR [eax+eax*4-0xa],bl
  41b442:	popf   
  41b443:	loop   0x41b416
  41b445:	aad    0x98
  41b447:	and    bh,BYTE PTR [ecx-0xe]
  41b44a:	sbb    ah,ah
  41b44c:	ret    
  41b44d:	ins    DWORD PTR es:[edi],dx
  41b44e:	idiv   dl
  41b450:	add    BYTE PTR [eax+0x3a],dh
  41b453:	push   0x63
  41b455:	sub    ah,BYTE PTR [edi-0x3d30763c]
  41b45b:	bound  esi,QWORD PTR [esi]
  41b45d:	adc    BYTE PTR [ebp+0x3a],al
  41b460:	outs   dx,BYTE PTR ds:[esi]
  41b461:	mov    al,0xba
  41b463:	and    esp,DWORD PTR [esi-0x17af985a]
  41b469:	leave  
  41b46a:	sbb    eax,DWORD PTR [eax]
  41b46c:	mov    eax,0xe9b2613
  41b471:	dec    ebp
  41b472:	mov    esp,0xeaac2144
  41b477:	inc    edi
  41b478:	pop    ss
  41b479:	ds ins DWORD PTR es:[edi],dx
  41b47b:	mov    bl,0xbf
  41b47d:	add    BYTE PTR [ecx-0x6f6b7b7b],al
  41b483:	fwait
  41b484:	clc    
  41b485:	daa    
  41b486:	out    0xe9,al
  41b488:	sbb    DWORD PTR [eax],eax
  41b48a:	add    BYTE PTR [edx],dh
  41b48c:	imul   esi,edx,0x9bc41a81
  41b492:	dec    ebx
  41b493:	les    eax,FWORD PTR [esp+edi*2]
  41b496:	int    0xc9
  41b498:	cmp    BYTE PTR [ecx+0x471586cb],cl
  41b49e:	add    ah,BYTE PTR [edi]
  41b4a0:	pop    esp
  41b4a1:	xlat   BYTE PTR ds:[ebx]
  41b4a2:	xchg   esi,eax
  41b4a3:	adc    eax,0xeabaa7e
  41b4a8:	mov    dl,0x6b
  41b4aa:	jmp    0x79da214
  41b4af:	jmp    0x41b50c
  41b4b1:	(bad)  
  41b4b2:	or     esp,DWORD PTR [eax-0x52308a33]
  41b4b8:	out    0xad,al
  41b4ba:	aas    
  41b4bb:	std    
  41b4bc:	or     al,0xad
  41b4be:	in     al,dx
  41b4bf:	and    BYTE PTR [eax-0x1e5e6c81],bh
  41b4c5:	jns    0x41b4a6
  41b4c7:	cmp    al,0x85
  41b4c9:	xor    edx,DWORD PTR [ebx]
  41b4cb:	add    DWORD PTR [edx+0x1cd9a447],esp
  41b4d1:	add    edx,DWORD PTR [ecx-0x22]
  41b4d4:	bound  esp,QWORD PTR [edx]
  41b4d6:	jne    0x41b492
  41b4d8:	js     0x41b51e
  41b4da:	pop    ebx
  41b4db:	cmp    BYTE PTR [edx-0x209e954],0x5a
  41b4e2:	push   ebx
  41b4e3:	mov    edi,DWORD PTR [ecx-0x5d]
  41b4e6:	js     0x41b552
  41b4e8:	ds imul esp,ecx,0x5a
  41b4ec:	out    0x69,al
  41b4ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4ef:	aas    
  41b4f0:	jp     0x41b488
  41b4f2:	push   edx
  41b4f3:	sub    al,0x1e
  41b4f5:	std    
  41b4f6:	pop    ebp
  41b4f7:	add    eax,0xb1d787be
  41b4fc:	(bad)  
  41b4fd:	cld    
  41b4fe:	xor    eax,0xfb7ea0ae
  41b503:	mov    bl,0x5b
  41b505:	out    dx,eax
  41b506:	dec    ebx
  41b507:	xor    BYTE PTR [edi+ebp*4+0x2a],ch
  41b50b:	pop    edx
  41b50c:	pop    esp
  41b50d:	sub    al,0xb8
  41b50f:	xchg   esi,eax
  41b510:	or     cl,bh
  41b512:	lods   eax,DWORD PTR ds:[esi]
  41b513:	add    esi,DWORD PTR [ecx]
  41b515:	cmp    edx,DWORD PTR [esi+edx*2+0x10]
  41b519:	inc    ecx
  41b51a:	bound  ecx,QWORD PTR [ebx-0x42422a87]
  41b520:	imul   ebx,ecx,0x6d
  41b523:	mov    ecx,0x8160769d
  41b528:	mov    al,ds:0x5bda3cf3
  41b52d:	xchg   edi,eax
  41b52e:	ins    BYTE PTR es:[edi],dx
  41b52f:	dec    esp
  41b530:	mov    al,ds:0xe51917b8
  41b535:	xchg   edx,eax
  41b536:	adc    al,0xb6
  41b538:	cmp    eax,0x88890076
  41b53d:	retf   
  41b53e:	pop    es
  41b53f:	lahf   
  41b540:	aad    0x6e
  41b542:	daa    
  41b543:	xor    BYTE PTR [esi-0x45],dh
  41b546:	scas   al,BYTE PTR es:[edi]
  41b547:	jae    0x41b4f2
  41b549:	inc    ecx
  41b54a:	out    0xe0,al
  41b54c:	fcom   st(6)
  41b54e:	outs   dx,BYTE PTR ds:[esi]
  41b54f:	pop    ecx
  41b550:	xchg   edx,eax
  41b551:	sub    eax,0xc036c5ef
  41b556:	ja     0x41b5bd
  41b558:	dec    ebp
  41b559:	jle    0x41b5b6
  41b55b:	xor    BYTE PTR [edx+0x9],dh
  41b55e:	stos   BYTE PTR es:[edi],al
  41b55f:	inc    ebp
  41b560:	lock push esp
  41b562:	(bad)  
  41b564:	xor    al,0xbf
  41b566:	pop    edi
  41b567:	pop    esi
  41b568:	xchg   edi,eax
  41b569:	mov    edi,0x884211ca
  41b56e:	mov    ah,0xb1
  41b570:	mov    esi,0x9569a04d
  41b575:	sub    al,0x64
  41b577:	lahf   
  41b578:	adc    eax,0xcacca759
  41b57d:	popf   
  41b57e:	jo     0x41b584
  41b580:	fwait
  41b581:	dec    esi
  41b582:	shl    BYTE PTR [edx+0x2bf3180e],cl
  41b588:	nop
  41b589:	das    
  41b58a:	call   0xade5:0x6a767afe
  41b591:	jle    0x41b602
  41b593:	aas    
  41b594:	fs mov ebp,0x21ccef75
  41b59a:	cmp    BYTE PTR [ecx],cl
  41b59c:	sub    DWORD PTR ds:0x369e1dac,ebx
  41b5a2:	enter  0x849c,0x58
  41b5a6:	hlt    
  41b5a7:	cmp    esp,esp
  41b5a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5aa:	repz inc edi
  41b5ac:	xchg   ebx,eax
  41b5ad:	(bad)  
  41b5ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5af:	retf   
  41b5b0:	bound  edi,QWORD PTR [esi-0x405fb6d1]
  41b5b6:	dec    ebp
  41b5b7:	push   esp
  41b5b8:	rcr    DWORD PTR [edi],1
  41b5ba:	mov    esi,0x214e9475
  41b5bf:	lods   eax,DWORD PTR ds:[esi]
  41b5c0:	or     BYTE PTR [ebp+0x6eba8c69],ah
  41b5c6:	cmp    al,0xd9
  41b5c8:	mov    ss,esp
  41b5ca:	mov    es,WORD PTR [ebp+0x94679bb]
  41b5d0:	dec    ebp
  41b5d1:	fsubr  DWORD PTR [eax-0x6610f47a]
  41b5d7:	xchg   ecx,eax
  41b5d8:	lods   eax,DWORD PTR ds:[esi]
  41b5d9:	sbb    bh,0xed
  41b5dc:	fbld   TBYTE PTR [ecx-0x13]
  41b5df:	inc    edi
  41b5e0:	mov    ebp,0xe4b5cee1
  41b5e5:	push   ds
  41b5e6:	and    al,dl
  41b5e8:	and    ch,bl
  41b5ea:	ins    DWORD PTR es:[edi],dx
  41b5eb:	or     bh,BYTE PTR [ebp-0x7251b34f]
  41b5f1:	aam    0x6d
  41b5f3:	int3   
  41b5f4:	cli    
  41b5f5:	stos   DWORD PTR es:[edi],eax
  41b5f6:	aas    
  41b5f7:	or     BYTE PTR [ebx],dh
  41b5f9:	pop    edx
  41b5fa:	push   cs
  41b5fb:	jl     0x41b633
  41b5fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5fe:	cmc    
  41b5ff:	pop    es
  41b600:	test   DWORD PTR [edi-0x4334030],edi
  41b606:	sbb    BYTE PTR [eax-0x3a46d5cf],0x2
  41b60d:	js     0x41b63f
  41b60f:	int3   
  41b610:	lahf   
  41b611:	inc    ecx
  41b612:	mov    esp,0xd67c5792
  41b617:	in     eax,0x44
  41b619:	mov    esp,0xb0a5b829
  41b61e:	jecxz  0x41b605
  41b620:	jne    0x41b611
  41b622:	lods   eax,DWORD PTR ds:[esi]
  41b623:	pop    es
  41b624:	sbb    bh,BYTE PTR [esp+edx*2+0x487eb6c8]
  41b62b:	mov    fs,edx
  41b62d:	jae    0x41b695
  41b62f:	add    BYTE PTR [ecx-0x1b],al
  41b632:	loope  0x41b5d0
  41b634:	daa    
  41b635:	jle    0x41b647
  41b637:	out    dx,eax
  41b638:	xlat   BYTE PTR ds:[ebx]
  41b639:	pop    ss
  41b63a:	inc    edx
  41b63b:	mov    dl,0x11
  41b63d:	adc    eax,0x636635e9
  41b642:	or     ebp,DWORD PTR [ecx]
  41b644:	ret    
  41b645:	lea    esp,[edi+0x4f346491]
  41b64b:	adc    BYTE PTR [esi+0xc],0xc8
  41b64f:	aaa    
  41b650:	jmp    0x41b646
  41b652:	and    cl,ah
  41b654:	or     al,0xd7
  41b656:	outs   dx,DWORD PTR ds:[esi]
  41b657:	sub    cl,ch
  41b659:	rol    esp,1
  41b65b:	mov    dl,0xbf
  41b65d:	jp     0x41b6c3
  41b65f:	or     ah,BYTE PTR [ecx]
  41b661:	das    
  41b662:	mov    al,ds:0x98d35897
  41b667:	jo     0x41b5fb
  41b669:	mov    eax,0xb0a6037a
  41b66e:	pop    ebx
  41b66f:	fisubr WORD PTR [edi]
  41b671:	xchg   esp,eax
  41b672:	jnp    0x41b6bb
  41b674:	call   0x9675:0x565d47ab
  41b67b:	push   ebx
  41b67c:	cmp    ch,BYTE PTR [ebx-0xdb2bdaf]
  41b682:	jmp    0x41b664
  41b684:	inc    esi
  41b685:	mov    edx,0x1239638b
  41b68a:	aas    
  41b68b:	push   cs
  41b68c:	and    BYTE PTR ds:0xd4ccae0d,ch
  41b692:	test   al,0xc
  41b694:	xchg   ecx,eax
  41b695:	mov    ebp,0x6d267a64
  41b69a:	scas   eax,DWORD PTR es:[edi]
  41b69b:	cmp    al,0xf
  41b69d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b69e:	add    esp,edx
  41b6a0:	inc    ebx
  41b6a1:	loop   0x41b707
  41b6a3:	test   DWORD PTR [ecx-0x32c3725a],edx
  41b6a9:	arpl   WORD PTR [edi+0x45575ab3],di
  41b6af:	lds    edx,FWORD PTR ds:[esi]
  41b6b2:	jo     0x41b719
  41b6b4:	push   esp
  41b6b5:	ret    0x85a0
  41b6b8:	scas   al,BYTE PTR es:[edi]
  41b6b9:	js     0x41b698
  41b6bb:	jle    0x41b658
  41b6bd:	xor    BYTE PTR [esi+esi*2],ch
  41b6c0:	jmp    0xa9742f33
  41b6c5:	idiv   DWORD PTR [ecx-0x67]
  41b6c8:	add    dl,dh
  41b6ca:	cmp    dl,BYTE PTR [ebp+ebp*4-0x130db16d]
  41b6d1:	xchg   edi,eax
  41b6d2:	retf   0x3008
  41b6d5:	pop    edi
  41b6d6:	jmp    0x41b6f5
  41b6d8:	sbb    BYTE PTR [edx-0x15],dl
  41b6db:	xchg   ebx,eax
  41b6dc:	or     al,0xac
  41b6de:	xor    BYTE PTR [edx-0x5d413c5a],ah
  41b6e4:	shl    BYTE PTR [eax],0x8a
  41b6e7:	adc    ebp,edi
  41b6e9:	inc    ecx
  41b6ea:	add    eax,esp
  41b6ec:	add    DWORD PTR [edi],ecx
  41b6ee:	(bad)  [edx]
  41b6f0:	jg     0x41b719
  41b6f2:	xlat   BYTE PTR ds:[ebx]
  41b6f3:	jmp    0x41b684
  41b6f5:	(bad)  
  41b6f6:	into   
  41b6f7:	pop    eax
  41b6f8:	fs dec ecx
  41b6fa:	je     0x41b778
  41b6fc:	aad    0x13
  41b6fe:	rcr    DWORD PTR ds:0xd425cb4f,0xde
  41b705:	imul   ebx,esi,0xfffffffe
  41b708:	xor    eax,0x7099392d
  41b70d:	or     ecx,DWORD PTR [ebp-0x6b19e435]
  41b713:	cld    
  41b714:	daa    
  41b715:	jle    0x41b6f4
  41b717:	add    al,0xac
  41b719:	popa   
  41b71a:	and    al,0xc1
  41b71c:	xor    DWORD PTR [ecx],esi
  41b71e:	xchg   edi,eax
  41b71f:	cmp    bl,BYTE PTR [edi+0x52]
  41b722:	jmp    0xc04ade00
  41b727:	addr16 push es
  41b729:	sti    
  41b72a:	mov    eax,0x4e505f43
  41b72f:	shr    BYTE PTR [edx],cl
  41b731:	icebp  
  41b732:	inc    ebx
  41b733:	cmc    
  41b734:	ins    DWORD PTR es:[edi],dx
  41b735:	lock pop ebx
  41b737:	xor    dh,BYTE PTR [eax+0x3e]
  41b73a:	sbb    ecx,ebx
  41b73c:	mov    bl,0x87
  41b73e:	or     bh,BYTE PTR [edx-0x41]
  41b741:	and    DWORD PTR [edx+esi*8-0x7511881a],ecx
  41b748:	dec    edx
  41b749:	cli    
  41b74a:	stc    
  41b74b:	mov    ebx,0xbb9c364
  41b750:	add    eax,0x24e28fb2
  41b755:	dec    esp
  41b756:	push   esi
  41b757:	dec    esp
  41b758:	(bad)
  41b75b:	retf   
  41b75c:	scas   eax,DWORD PTR es:[edi]
  41b75d:	leave  
  41b75e:	pinsrw mm1,ebx,0x57
  41b762:	aaa    
  41b763:	fwait
  41b764:	lock std 
  41b766:	dec    edi
  41b767:	xor    al,0xda
  41b769:	jb     0x41b7e1
  41b76b:	daa    
  41b76c:	aas    
  41b76d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b76e:	push   0xffffff9c
  41b770:	ins    BYTE PTR es:[edi],dx
  41b771:	sbb    al,0x3f
  41b773:	xchg   edx,eax
  41b774:	jmp    0x6d3b:0x7404656b
  41b77b:	fsub   DWORD PTR [edx+0x5f44dcc0]
  41b781:	in     eax,dx
  41b782:	mov    WORD PTR [edx-0x7a],cs
  41b785:	cmp    DWORD PTR [edx+0x20ae8bc3],esp
  41b78b:	inc    edx
  41b78c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b78d:	ret    0x2132
  41b790:	jae    0x41b73a
  41b792:	stos   BYTE PTR es:[edi],al
  41b793:	cmp    DWORD PTR [ecx],0xac0880cd
  41b799:	adc    DWORD PTR [ebx],eax
  41b79b:	push   ds
  41b79c:	adc    BYTE PTR [eax],0x87
  41b79f:	cmp    dl,al
  41b7a1:	std    
  41b7a2:	out    dx,eax
  41b7a3:	(bad)  
  41b7a4:	(bad)  [ecx+0x438d4f17]
  41b7aa:	mov    dh,0x6d
  41b7ac:	je     0x41b78a
  41b7ae:	imul   BYTE PTR [ecx-0x551fb45]
  41b7b4:	retf   0xa0d5
  41b7b7:	enter  0x3236,0xe0
  41b7bb:	dec    eax
  41b7bc:	jns    0x41b79d
  41b7be:	pop    ebp
  41b7bf:	sbb    esp,DWORD PTR [esi+eiz*4-0x5a75a77c]
  41b7c6:	jg     0x41b782
  41b7c8:	push   ecx
  41b7c9:	inc    edx
  41b7ca:	sbb    DWORD PTR [eax+0x585bc647],edx
  41b7d0:	sbb    bh,bh
  41b7d2:	retf   0xa0a0
  41b7d5:	sti    
  41b7d6:	sbb    bh,ch
  41b7d8:	retf   0xcb1e
  41b7db:	and    BYTE PTR [edx],cl
  41b7dd:	pop    ss
  41b7de:	xchg   edx,eax
  41b7df:	mov    edi,0x20b16487
  41b7e4:	add    BYTE PTR [esi],cl
  41b7e6:	xchg   esp,eax
  41b7e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7e8:	stc    
  41b7e9:	cmp    esi,DWORD PTR [edi-0x2e56548e]
  41b7ef:	in     al,0x54
  41b7f1:	adc    dl,cl
  41b7f3:	xor    eax,DWORD PTR [esi+0x788c7352]
  41b7f9:	cli    
  41b7fa:	mul    edi
  41b7fc:	ret    
  41b7fd:	popa   
  41b7fe:	mov    bl,0x6b
  41b800:	mov    al,0xde
  41b802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b803:	retf   0x4d3f
  41b806:	inc    eax
  41b807:	sbb    eax,0xdf95014c
  41b80c:	sub    al,0x77
  41b80e:	stos   BYTE PTR es:[edi],al
  41b80f:	sub    eax,0x7fe3844
  41b814:	imul   ecx,DWORD PTR [bp+0x34],0x1
  41b819:	jl     0x41b7a6
  41b81b:	cmp    ecx,DWORD PTR [edx]
  41b81d:	jns    0x41b80d
  41b81f:	nop
  41b820:	xor    edx,DWORD PTR [edx+edi*2+0x227f7417]
  41b827:	(bad)  
  41b828:	cmp    eax,DWORD PTR [eax]
  41b82a:	retf   0xc431
  41b82d:	cmp    eax,0xeb3726a3
  41b832:	enter  0x4cf6,0xbb
  41b836:	fidiv  DWORD PTR [ebx-0x70]
  41b839:	xchg   esi,eax
  41b83a:	or     dh,BYTE PTR [ecx+0x37]
  41b83d:	adc    al,0x96
  41b83f:	mov    ds:0xb16853f8,eax
  41b844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b845:	mov    eax,0xbc90d1e
  41b84a:	pushf  
  41b84b:	mov    eax,ds:0xfa7264e6
  41b850:	repz jns 0x41b83c
  41b853:	xor    al,0x9f
  41b855:	mov    ebx,0x10820975
  41b85a:	ins    DWORD PTR es:[edi],dx
  41b85b:	pushf  
  41b85c:	jmp    0x41b80f
  41b85e:	xor    eax,0xbd9b639e
  41b863:	daa    
  41b864:	shl    eax,1
  41b866:	(bad)  
  41b867:	or     BYTE PTR [ebx],cl
  41b869:	adc    BYTE PTR [eax],ch
  41b86b:	scas   al,BYTE PTR es:[edi]
  41b86c:	xchg   BYTE PTR [edx],dh
  41b86e:	and    DWORD PTR [edx],0x7b
  41b871:	sub    eax,0xb1a7d9b5
  41b876:	mov    ebp,0x41b28bb9
  41b87b:	dec    BYTE PTR [ecx]
  41b87d:	shr    DWORD PTR [edx+0x3e],cl
  41b880:	jae    0x41b891
  41b882:	hlt    
  41b883:	sbb    edx,DWORD PTR [esi+0xbbb9591]
  41b889:	and    esp,DWORD PTR [edi]
  41b88b:	push   ebx
  41b88c:	adc    BYTE PTR [esi-0x6a],dl
  41b88f:	mov    eax,ds:0x78a01081
  41b894:	jmp    0x41b90a
  41b896:	mov    ds:0xd9c7b369,al
  41b89b:	popa   
  41b89c:	stc    
  41b89d:	lds    eax,FWORD PTR [ebp-0x17]
  41b8a0:	jo     0x41b8f0
  41b8a2:	sahf   
  41b8a3:	push   ecx
  41b8a4:	xchg   ebp,eax
  41b8a5:	pop    eax
  41b8a6:	jae    0x41b87c
  41b8a8:	std    
  41b8a9:	mov    al,0x21
  41b8ab:	ja     0x41b8c2
  41b8ad:	cli    
  41b8ae:	sahf   
  41b8af:	std    
  41b8b0:	adc    al,0xcb
  41b8b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8b3:	xchg   edi,eax
  41b8b4:	sbb    dl,BYTE PTR [edi-0x24]
  41b8b7:	mov    edx,0x74e3289d
  41b8bc:	add    DWORD PTR [esi+0x71],ecx
  41b8bf:	xor    BYTE PTR [esi-0x32],bh
  41b8c2:	sub    al,0x1c
  41b8c4:	arpl   WORD PTR [ebx-0x224733b8],dx
  41b8ca:	add    eax,0x1a3ed9db
  41b8cf:	loopne 0x41b8c0
  41b8d1:	test   eax,0xe59c3b2a
  41b8d6:	rcr    DWORD PTR [ebx-0x24],1
  41b8d9:	ins    DWORD PTR es:[edi],dx
  41b8da:	jo     0x41b926
  41b8dc:	(bad)  
  41b8dd:	sub    ebx,DWORD PTR ds:0x7a73974e
  41b8e3:	lock mov ch,0xef
  41b8e6:	js     0x41b912
  41b8e8:	mov    WORD PTR [esi+0x1d],cs
  41b8eb:	add    eax,0x22d2531c
  41b8f0:	pushf  
  41b8f1:	test   DWORD PTR fs:[ecx+0x47],edi
  41b8f5:	call   0xa39:0xf35e9ea0
  41b8fc:	repz xor esi,DWORD PTR [esi+0x4b]
  41b900:	mov    al,ds:0x40022606
  41b905:	jne    0x41b8fb
  41b907:	jmp    0xfeb7:0xec98a827
  41b90e:	aad    0xf0
  41b910:	bound  edi,QWORD PTR [ecx+edx*4]
  41b913:	mov    cl,0xc2
  41b915:	xchg   esp,eax
  41b916:	inc    ecx
  41b917:	adc    BYTE PTR [edx],ah
  41b919:	addr16 sahf 
  41b91b:	xor    BYTE PTR [ecx-0x18],dl
  41b91e:	inc    esi
  41b91f:	test   BYTE PTR [esi],dl
  41b921:	sub    eax,0x906fc6e1
  41b926:	ret    
  41b927:	loop   0x41b928
  41b929:	sbb    BYTE PTR [ebx],dh
  41b92b:	les    esi,FWORD PTR [esi]
  41b92d:	xchg   edi,eax
  41b92e:	inc    esi
  41b92f:	xor    eax,0x3cc3ac0c
  41b934:	cld    
  41b935:	clc    
  41b936:	adc    ebp,ebp
  41b938:	aad    0x9b
  41b93a:	lahf   
  41b93b:	popf   
  41b93c:	pushf  
  41b93d:	sahf   
  41b93e:	mov    DWORD PTR [edi+edx*2],0x2e0baf6e
  41b945:	pop    ecx
  41b946:	sub    al,0xc7
  41b948:	fmul   st,st(6)
  41b94a:	and    DWORD PTR [ecx-0x415ca67b],eax
  41b950:	sar    DWORD PTR [edx+edx*2-0x15],1
  41b954:	inc    ebp
  41b955:	loop   0x41b8d8
  41b957:	mov    dl,0xe0
  41b959:	cli    
  41b95a:	xchg   edx,eax
  41b95b:	and    edx,0xffffffb5
  41b95e:	out    dx,eax
  41b95f:	inc    edi
  41b960:	jb     0x41b98d
  41b962:	sbb    al,0x96
  41b964:	inc    edx
  41b965:	add    ah,BYTE PTR [ebp+0x10b96e5]
  41b96b:	sbb    al,BYTE PTR [ebp+0x11fde4b5]
  41b971:	lahf   
  41b972:	int3   
  41b973:	call   0x960ad6d4
  41b978:	retf   0xb745
  41b97b:	(bad)  
  41b97c:	mov    edx,0xe89b4c64
  41b981:	jo     0x41ba00
  41b983:	mov    dh,0x4e
  41b985:	lahf   
  41b986:	xor    eax,DWORD PTR [edi+0x78103e8b]
  41b98c:	fistp  WORD PTR [ebx+0x2f]
  41b98f:	jo     0x41b987
  41b991:	cmc    
  41b992:	push   0xffffffd3
  41b994:	jo     0x41b93a
  41b996:	mov    ebp,0x834598e5
  41b99b:	push   ds
  41b99c:	fwait
  41b99d:	bound  ebp,QWORD PTR [edx+edi*4]
  41b9a0:	enter  0x4d59,0x43
  41b9a4:	dec    esi
  41b9a5:	inc    ecx
  41b9a6:	mov    eax,0xff9b32b4
  41b9ab:	aas    
  41b9ac:	fdivr  QWORD PTR [ebx-0x4c]
  41b9af:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41b9b1:	or     DWORD PTR [ecx-0x654591be],esp
  41b9b7:	fistp  DWORD PTR [esi-0x79]
  41b9ba:	test   esi,edi
  41b9bc:	sub    DWORD PTR [edx-0xf],esp
  41b9bf:	mov    ah,0x6e
  41b9c1:	pop    edi
  41b9c2:	or     eax,0x54f57619
  41b9c7:	in     eax,dx
  41b9c8:	je     0x41ba10
  41b9ca:	or     dl,ch
  41b9cc:	pop    edx
  41b9cd:	inc    esi
  41b9ce:	pop    es
  41b9cf:	sbb    cl,BYTE PTR [esi-0x11]
  41b9d2:	jb     0x41b983
  41b9d4:	and    ch,BYTE PTR [edi+edx*8-0x22]
  41b9d8:	jbe    0x41b9ba
  41b9da:	inc    ebp
  41b9db:	sub    eax,DWORD PTR [esi-0xbc4f4cf]
  41b9e1:	inc    eax
  41b9e2:	inc    ebp
  41b9e3:	leave  
  41b9e4:	shr    ecx,0x6d
  41b9e7:	sub    al,0xbb
  41b9e9:	inc    esi
  41b9ea:	gs dec ecx
  41b9ec:	xchg   edi,eax
  41b9ed:	and    BYTE PTR [eax+esi*1],0x3b
  41b9f1:	xchg   BYTE PTR [edi+0x43],dl
  41b9f4:	imul   edx,DWORD PTR [esi+0x27f2a801],0x3c8f82a1
  41b9fe:	fwait
  41b9ff:	xchg   ebx,eax
  41ba00:	cmc    
  41ba01:	out    dx,al
  41ba02:	pop    ebx
  41ba03:	add    al,0xbe
  41ba05:	mov    ecx,0x3eba767e
  41ba0a:	mov    ah,0xa0
  41ba0c:	xor    cl,BYTE PTR [edx+0x4b]
  41ba0f:	add    BYTE PTR [ebx+0x5],bl
  41ba12:	push   ebp
  41ba13:	inc    ecx
  41ba14:	leave  
  41ba15:	pop    edi
  41ba16:	inc    edi
  41ba17:	jecxz  0x41ba95
  41ba19:	or     esi,DWORD PTR [edx+0x502542c0]
  41ba1f:	leave  
  41ba20:	inc    edi
  41ba21:	sub    al,0x9
  41ba23:	dec    edx
  41ba24:	sub    dl,BYTE PTR [edx-0x54]
  41ba27:	adc    dh,bl
  41ba29:	in     al,0xe1
  41ba2b:	leave  
  41ba2c:	jae    0x41ba11
  41ba2e:	je     0x41b9f5
  41ba30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba31:	jno    0x41ba6a
  41ba33:	in     al,0x21
  41ba35:	or     ecx,edx
  41ba37:	ins    BYTE PTR es:[edi],dx
  41ba38:	mov    cl,0xf5
  41ba3a:	mov    esp,0x917e8852
  41ba3f:	mov    gs,eax
  41ba41:	pop    ebx
  41ba42:	leave  
  41ba43:	dec    esi
  41ba44:	mov    ds:0x378ad0e1,eax
  41ba49:	and    ah,BYTE PTR [esi+0x3b]
  41ba4c:	sub    DWORD PTR [edx],esp
  41ba4e:	pop    DWORD PTR [esi]
  41ba50:	cmp    dh,ah
  41ba52:	test   BYTE PTR [edx],ch
  41ba54:	je     0x41ba7c
  41ba56:	cwde   
  41ba57:	sahf   
  41ba58:	sbb    eax,0xfaa76feb
  41ba5d:	xchg   ebx,eax
  41ba5e:	in     eax,0x82
  41ba60:	out    0xd0,eax
  41ba62:	fcomp  DWORD PTR [ebx+0x5b3c72e8]
  41ba68:	fnsave [edx+0x4d]
  41ba6b:	inc    edx
  41ba6c:	hlt    
  41ba6d:	mov    cl,0xe0
  41ba6f:	push   edi
  41ba70:	icebp  
  41ba71:	mov    ds:0x72443c2b,al
  41ba76:	ds push ecx
  41ba78:	retf   0x448f
  41ba7b:	xchg   esi,eax
  41ba7c:	int3   
  41ba7d:	mov    eax,0xe33aa13a
  41ba82:	xchg   esi,eax
  41ba83:	clc    
  41ba84:	mov    bl,0x25
  41ba86:	dec    esp
  41ba87:	cmc    
  41ba88:	popf   
  41ba89:	push   ss
  41ba8a:	psubq  mm1,QWORD PTR [edx-0x42c76cfc]
  41ba91:	jno    0x41ba7c
  41ba93:	js     0x41bb11
  41ba95:	sub    ch,ah
  41ba97:	add    eax,DWORD PTR [esp+esi*8-0x36949399]
  41ba9e:	sar    bl,cl
  41baa0:	xor    ah,ch
  41baa2:	or     dl,bl
  41baa4:	outs   dx,DWORD PTR ds:[esi]
  41baa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baa6:	or     ecx,DWORD PTR [edi]
  41baa8:	mov    ch,0x2e
  41baaa:	jno    0x41ba83
  41baac:	cdq    
  41baad:	fiadd  WORD PTR [ebx-0x4f]
  41bab0:	mov    ebx,0x14e15b02
  41bab5:	fldcw  WORD PTR [ebx+0x669703ca]
  41babb:	retf   
  41babc:	xor    dh,ah
  41babe:	or     al,0xac
  41bac0:	xor    eax,0x9cc6071e
  41bac5:	push   ebp
  41bac6:	rcl    edx,cl
  41bac8:	xlat   BYTE PTR ds:[ebx]
  41bac9:	xchg   edx,eax
  41baca:	scas   al,BYTE PTR es:[edi]
  41bacb:	fimul  DWORD PTR [ecx+0x1234895b]
  41bad1:	jne    0x41bb21
  41bad3:	jg     0x41ba6b
  41bad5:	add    al,0x3c
  41bad7:	sub    ah,BYTE PTR [ecx-0x4b]
  41bada:	imul   ecx,DWORD PTR [ebx+0x7eb4b639],0x719f6c09
  41bae4:	or     eax,0xd39d986
  41bae9:	xchg   edx,eax
  41baea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baeb:	aas    
  41baec:	xor    eax,DWORD PTR [ebx-0x12]
  41baef:	mov    al,0x3d
  41baf1:	enter  0xf1f0,0xf2
  41baf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41baf6:	and    DWORD PTR [edi],esi
  41baf8:	xchg   ebx,eax
  41baf9:	repnz dec ecx
  41bafb:	xor    dh,BYTE PTR [eax+0x65]
  41bafe:	inc    edx
  41baff:	pop    ebx
  41bb00:	out    0x5c,eax
  41bb02:	pop    ebx
  41bb03:	lahf   
  41bb04:	cmp    bl,BYTE PTR [ecx]
  41bb06:	cli    
  41bb07:	(bad)  
  41bb09:	inc    ebp
  41bb0a:	sub    dh,BYTE PTR [edi+0x222b3be]
  41bb10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb11:	cmp    edi,esp
  41bb13:	lds    esi,FWORD PTR [esi+0x2c]
  41bb16:	leave  
  41bb17:	test   eax,0xa1021c69
  41bb1c:	mov    ds:0x1a8a1675,al
  41bb21:	inc    ebp
  41bb22:	dec    esi
  41bb23:	and    BYTE PTR [eax+0x7bff8412],ch
  41bb29:	dec    edx
  41bb2a:	xlat   BYTE PTR ds:[ebx]
  41bb2b:	adc    BYTE PTR [edi+0x1a],0xc5
  41bb2f:	in     al,dx
  41bb30:	or     BYTE PTR [eax+eax*4+0x49],al
  41bb34:	xor    cl,BYTE PTR [esi+0x7e270cb0]
  41bb3a:	mov    ecx,0xba5598f0
  41bb3f:	dec    ebx
  41bb40:	jno    0x41bb50
  41bb42:	out    0xf5,eax
  41bb44:	add    bl,ah
  41bb46:	shl    ecx,0x60
  41bb49:	rcl    BYTE PTR [ebx+0x1e707f33],0x2c
  41bb50:	adc    eax,0xcbcc8731
  41bb55:	pop    esi
  41bb56:	pop    ds
  41bb57:	cmp    ecx,DWORD PTR ds:0x5a9c7510
  41bb5d:	imul   ecx,DWORD PTR [edi],0x39
  41bb60:	pop    ss
  41bb61:	push   esp
  41bb62:	mov    BYTE PTR ds:0x247061ab,cl
  41bb68:	sub    BYTE PTR [edi+0x3e],cl
  41bb6b:	fsub   QWORD PTR [ecx+edi*4-0x69eddf25]
  41bb72:	mov    edx,edi
  41bb74:	rcr    DWORD PTR [eax-0x75a2612a],cl
  41bb7a:	leave  
  41bb7b:	dec    ebx
  41bb7c:	fistp  QWORD PTR [edx]
  41bb7e:	mov    esp,0x7faa5391
  41bb83:	in     al,dx
  41bb84:	adc    DWORD PTR [ebx+0x8],ecx
  41bb87:	fwait
  41bb88:	and    edi,eax
  41bb8a:	inc    ebx
  41bb8b:	stos   BYTE PTR es:[edi],al
  41bb8c:	(bad)  
  41bb8e:	scas   eax,DWORD PTR es:[edi]
  41bb8f:	mov    cl,0x24
  41bb91:	jnp    0x41bbc9
  41bb93:	faddp  st(4),st
  41bb95:	test   DWORD PTR [esi+0x4c],ebp
  41bb98:	int3   
  41bb99:	jecxz  0x41bb89
  41bb9b:	loop   0x41bbce
  41bb9d:	test   DWORD PTR [edx],esp
  41bb9f:	mov    edi,0x93e81584
  41bba4:	add    DWORD PTR [esi+0x58c3221b],esi
  41bbaa:	dec    esp
  41bbab:	jmp    0x9501:0x5f256e9a
  41bbb2:	push   esp
  41bbb3:	pop    ds
  41bbb4:	sar    BYTE PTR [eax-0x41],0x1e
  41bbb8:	call   FWORD PTR [ebx+0x7c]
  41bbbb:	test   DWORD PTR [ecx],ebx
  41bbbd:	dec    esp
  41bbbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbbf:	popf   
  41bbc0:	jbe    0x41bb9f
  41bbc2:	adc    BYTE PTR [eax-0x711d374d],ah
  41bbc8:	das    
  41bbc9:	jmp    0x5c6e:0x3cc8dd1b
  41bbd0:	dec    ebx
  41bbd1:	dec    eax
  41bbd2:	xlat   BYTE PTR ds:[ebx]
  41bbd3:	adc    al,0x66
  41bbd5:	lahf   
  41bbd6:	ins    BYTE PTR es:[edi],dx
  41bbd7:	jae    0x41bb8f
  41bbd9:	pop    esi
  41bbda:	lods   al,BYTE PTR ds:[esi]
  41bbdb:	loopne 0x41bc43
  41bbdd:	push   ds
  41bbde:	les    ebp,FWORD PTR [bx+0x48fd]
  41bbe3:	(bad)  
  41bbe4:	and    ah,dl
  41bbe6:	jg     0x41bbfe
  41bbe8:	add    DWORD PTR [ecx+ebp*8-0x281fd871],0x8
  41bbf0:	jo     0x41bc67
  41bbf2:	aad    0xd7
  41bbf4:	call   0x11d9:0x4acaa8c5
  41bbfb:	jg     0x41bbc3
  41bbfd:	xchg   edi,eax
  41bbfe:	adc    esp,edi
  41bc00:	or     DWORD PTR [ebp+0x68],edi
  41bc03:	xchg   edi,eax
  41bc04:	sub    DWORD PTR [ecx+0x7735bf23],edx
  41bc0a:	sub    BYTE PTR [edi],bh
  41bc0c:	mov    bl,0x40
  41bc0e:	push   esi
  41bc0f:	neg    BYTE PTR [esi+0x23]
  41bc12:	push   0xffffff9a
  41bc14:	lock popa 
  41bc16:	xor    ah,ah
  41bc18:	(bad)  
  41bc19:	ds mov edi,0xdfb9e8ba
  41bc1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc20:	cmc    
  41bc21:	or     eax,0x8b28e808
  41bc26:	or     eax,0x6cc65070
  41bc2b:	mov    dh,bh
  41bc2d:	mov    ds:0xc1127968,eax
  41bc32:	retf   0xa86e
  41bc35:	lods   eax,DWORD PTR ds:[esi]
  41bc36:	mov    eax,ds:0x6a045ce5
  41bc3b:	inc    edx
  41bc3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc3d:	cld    
  41bc3e:	or     eax,ebp
  41bc40:	sub    eax,0x1039e508
  41bc45:	pop    edx
  41bc46:	ror    edi,1
  41bc48:	stos   DWORD PTR es:[edi],eax
  41bc49:	and    edi,esp
  41bc4b:	fiadd  DWORD PTR [esi+0x6e451e5f]
  41bc51:	or     bh,dh
  41bc53:	lahf   
  41bc54:	add    BYTE PTR [esi+0x4f99bebd],al
  41bc5a:	jmp    0x3c24:0x4d5968c5
  41bc61:	push   cs
  41bc62:	daa    
  41bc63:	jp     0x41bc0e
  41bc65:	arpl   WORD PTR [ebx],ax
  41bc67:	jns    0x41bcd2
  41bc69:	mov    edi,0xa5aeeb2c
  41bc6e:	shl    ebp,cl
  41bc70:	mov    edi,0xd3da2bf
  41bc75:	pushf  
  41bc76:	(bad)  
  41bc77:	(bad)  
  41bc78:	into   
  41bc79:	and    al,BYTE PTR [esi+edx*2]
  41bc7c:	pop    edi
  41bc7d:	inc    edx
  41bc7e:	sub    BYTE PTR [ecx+0x252616fc],0x11
  41bc85:	sub    esi,DWORD PTR [ebx+0x30804a2e]
  41bc8b:	mov    al,0xfc
  41bc8d:	ins    BYTE PTR es:[edi],dx
  41bc8e:	ins    BYTE PTR es:[edi],dx
  41bc8f:	(bad)  
  41bc90:	out    dx,al
  41bc91:	aad    0xb2
  41bc93:	(bad)  
  41bc94:	jmp    0xdc4c:0x9d48398d
  41bc9b:	mov    ds:0x826c50ca,eax
  41bca0:	test   bh,cl
  41bca2:	daa    
  41bca3:	push   eax
  41bca4:	adc    ebp,ecx
  41bca6:	inc    esi
  41bca7:	adc    DWORD PTR [edx+0x5193e1ee],ebp
  41bcad:	mov    esi,0x890a816
  41bcb2:	xlat   BYTE PTR ds:[ebx]
  41bcb3:	or     BYTE PTR [ebx+0x2efa909b],al
  41bcb9:	out    dx,eax
  41bcba:	into   
  41bcbb:	mov    ecx,0x114bc52e
  41bcc0:	dec    esp
  41bcc1:	mov    edx,0xb1db353f
  41bcc6:	aaa    
  41bcc7:	adc    BYTE PTR [edi-0x28],al
  41bcca:	imul   eax,DWORD PTR [ebx+0x594e6b70],0xa1169bcd
  41bcd4:	xor    esp,DWORD PTR [ebp+0x57d9c40b]
  41bcda:	stc    
  41bcdb:	and    al,0x54
  41bcdd:	ss add eax,0x187babb0
  41bce3:	xchg   edi,eax
  41bce4:	push   0x619a5f3
  41bce9:	push   edi
  41bcea:	dec    esp
  41bceb:	out    dx,eax
  41bcec:	cmc    
  41bced:	das    
  41bcee:	xor    ebp,DWORD PTR [edi-0x5b]
  41bcf1:	inc    esi
  41bcf2:	add    edi,DWORD PTR [ebx-0x156f805e]
  41bcf8:	cmp    DWORD PTR [esi],edi
  41bcfa:	inc    edi
  41bcfb:	je     0x41bc9f
  41bcfd:	pusha  
  41bcfe:	test   DWORD PTR gs:[edx+0x59],ebp
  41bd02:	add    eax,0x8e77c080
  41bd07:	dec    eax
  41bd08:	xchg   ebx,eax
  41bd09:	aam    0x73
  41bd0b:	iret   
  41bd0c:	mov    BYTE PTR [edx+0x6c],dl
  41bd0f:	mov    edx,edi
  41bd11:	jle    0x41bd6e
  41bd13:	or     eax,0x9bfd8fcc
  41bd18:	sub    BYTE PTR [esi],bh
  41bd1a:	daa    
  41bd1b:	adc    cl,BYTE PTR [edx+0x36]
  41bd1e:	push   0xffffffef
  41bd20:	xchg   esp,eax
  41bd21:	mov    edi,0x79711b0b
  41bd26:	mov    dh,cl
  41bd28:	(bad)  
  41bd29:	dec    ecx
  41bd2a:	ret    0x192c
  41bd2d:	xchg   edx,eax
  41bd2e:	mov    ds:0xf5c956f9,al
  41bd33:	daa    
  41bd34:	stos   BYTE PTR es:[edi],al
  41bd35:	jns    0x41bcdd
  41bd37:	mov    al,0x7e
  41bd39:	or     bh,BYTE PTR ds:0x569594c5
  41bd3f:	mov    ds:0x7fe1a850,eax
  41bd44:	dec    eax
  41bd45:	xchg   ebp,eax
  41bd46:	xchg   edx,eax
  41bd47:	xlat   BYTE PTR ds:[ebx]
  41bd48:	add    dl,BYTE PTR [edi-0x327e2a5]
  41bd4e:	dec    ebp
  41bd4f:	jae    0x41bd2c
  41bd51:	sbb    ebx,ecx
  41bd53:	push   ebp
  41bd54:	mov    ebp,0x86e501d5
  41bd59:	sar    DWORD PTR [edi-0x6d],1
  41bd5c:	cdq    
  41bd5d:	cmp    ah,dl
  41bd5f:	dec    ecx
  41bd60:	dec    ebp
  41bd61:	push   ebx
  41bd62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd63:	and    al,0x3d
  41bd65:	mov    dh,bh
  41bd67:	jnp    0x41bd56
  41bd69:	mov    esi,ecx
  41bd6b:	mov    ecx,0xaafb618a
  41bd70:	aaa    
  41bd71:	scas   al,BYTE PTR es:[edi]
  41bd72:	ror    DWORD PTR [bx+si+0x30],0xf0
  41bd77:	mov    eax,0x21f0bf1b
  41bd7c:	sub    BYTE PTR [ebx+0x6ab01f66],0x3f
  41bd83:	push   es
  41bd84:	xor    eax,0x44145836
  41bd89:	fstp   QWORD PTR [esi+0x1ed8a5b3]
  41bd8f:	sbb    DWORD PTR [edx-0x7e],ebx
  41bd92:	neg    DWORD PTR [esi-0x33b7f610]
  41bd98:	mov    eax,ds:0x3947673f
  41bd9d:	iret   
  41bd9e:	jno    0x41bdc5
  41bda0:	inc    ebx
  41bda1:	imul   esp,edi,0x5f
  41bda4:	sub    dl,bh
  41bda6:	sub    bh,0xcc
  41bda9:	jo     0x41bd52
  41bdab:	adc    al,0x27
  41bdad:	push   ds
  41bdae:	mov    eax,0x553c4c86
  41bdb3:	call   0xdfb90674
  41bdb8:	(bad)  
  41bdb9:	es jecxz 0x41bd84
  41bdbc:	mov    ds:0x1875bbed,eax
  41bdc1:	and    DWORD PTR [ebx],ebp
  41bdc3:	or     esp,DWORD PTR [eax+ebx*4]
  41bdc6:	stos   DWORD PTR es:[edi],eax
  41bdc7:	adc    ecx,DWORD PTR [edi-0x78]
  41bdca:	addr16 inc esp
  41bdcc:	mov    esi,0xd95f0cac
  41bdd1:	inc    DWORD PTR [eax]
  41bdd3:	leave  
  41bdd4:	(bad)  
  41bdd5:	inc    ebx
  41bdd6:	out    dx,al
  41bdd7:	add    eax,0xfba03cea
  41bddc:	adc    DWORD PTR [ebp-0x3d82b169],edx
  41bde2:	cmp    BYTE PTR [esi],ah
  41bde4:	loop   0x41bd8f
  41bde6:	xor    esi,ebp
  41bde8:	mov    ds:0xb0cc8907,eax
  41bded:	xchg   BYTE PTR [ebx-0x42d62a7f],al
  41bdf3:	mov    eax,ds
  41bdf5:	sbb    al,0xf3
  41bdf7:	jb     0x41bdba
  41bdf9:	aas    
  41bdfa:	dec    edi
  41bdfb:	lods   al,BYTE PTR ds:[esi]
  41bdfc:	rcl    BYTE PTR [eax-0x7d],cl
  41bdff:	fst    QWORD PTR [edi+0x74]
  41be02:	xchg   ecx,eax
  41be03:	jb     0x41bddc
  41be05:	fistp  DWORD PTR [edx]
  41be07:	and    al,dl
  41be09:	adc    BYTE PTR [esi+0x30c1b1f9],0xcb
  41be10:	cmp    al,0x23
  41be12:	std    
  41be13:	cmc    
  41be14:	pop    ds
  41be15:	or     BYTE PTR [ecx+0xc4724ea],dh
  41be1b:	sbb    al,0xa9
  41be1d:	cmp    al,0x99
  41be1f:	jecxz  0x41bda3
  41be21:	repz bound ecx,QWORD PTR [ecx-0x5673ae10]
  41be28:	xchg   esi,eax
  41be29:	inc    edx
  41be2a:	js     0x41be43
  41be2c:	mov    bh,0xe7
  41be2e:	test   BYTE PTR [edx],bh
  41be30:	loop   0x41bea5
  41be32:	adc    eax,0x70e3871
  41be37:	sbb    BYTE PTR [edi+0x377b7870],dl
  41be3d:	iret   
  41be3e:	jle    0x41bded
  41be40:	sub    esi,DWORD PTR [edx-0x77580ed6]
  41be46:	leave  
  41be47:	mov    ecx,0xecc60007
  41be4c:	adc    eax,0x47f7f29
  41be51:	fst    st(6)
  41be53:	push   edx
  41be54:	js     0x41bed4
  41be56:	or     ecx,DWORD PTR [esi-0x8]
  41be59:	inc    ebp
  41be5a:	mov    edx,0xae304e97
  41be60:	sar    DWORD PTR [ebp+0x52],0x41
  41be64:	mov    eax,ds:0xecea237c
  41be69:	mov    edx,0x9e605188
  41be6e:	mov    ds:0x61e073b7,al
  41be73:	pop    edi
  41be74:	daa    
  41be75:	lea    esi,[ecx+0x34]
  41be78:	jmp    0x41be74
  41be7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be7b:	loope  0x41be70
  41be7d:	push   esp
  41be7e:	inc    esp
  41be7f:	scas   al,BYTE PTR es:[edi]
  41be80:	or     DWORD PTR [edx],0xe8e2e7dc
  41be86:	(bad)  
  41be87:	nop
  41be88:	call   0x7462:0xeac116e0
  41be8f:	or     bh,0x47
  41be92:	inc    edi
  41be93:	push   cs
  41be94:	in     eax,dx
  41be95:	pop    eax
  41be96:	ins    DWORD PTR es:[edi],dx
  41be97:	rol    eax,1
  41be99:	test   al,0x8c
  41be9b:	ss stc 
  41be9d:	cmp    DWORD PTR [ebp-0x4f],ecx
  41bea0:	add    eax,DWORD PTR [ecx+esi*1]
  41bea3:	imul   ecx,DWORD PTR [ebp+0xf],0xbbac13fb
  41beaa:	xchg   edx,eax
  41beab:	mov    al,ds:0x543bb57c
  41beb0:	cld    
  41beb1:	xchg   edi,eax
  41beb2:	pusha  
  41beb3:	fisub  DWORD PTR [eax]
  41beb5:	dec    esi
  41beb6:	or     cl,BYTE PTR [ebp+0x5913acc9]
  41bebc:	mov    es:0xb860f152,eax
  41bec2:	ins    BYTE PTR es:[edi],dx
  41bec3:	xor    BYTE PTR [edx],0xe5
  41bec6:	inc    ebx
  41bec7:	inc    ebp
  41bec8:	cmp    al,BYTE PTR [eax]
  41beca:	cmp    DWORD PTR [edi-0x2f6c949c],0x4665ce96
  41bed4:	ins    DWORD PTR es:[edi],dx
  41bed5:	sub    BYTE PTR [esp+eiz*8+0x45f3e2b2],dh
  41bedc:	in     al,dx
  41bedd:	scas   eax,DWORD PTR es:[edi]
  41bede:	or     bh,cl
  41bee0:	and    ebp,ebp
  41bee2:	dec    ebx
  41bee3:	outs   dx,BYTE PTR ds:[esi]
  41bee4:	pop    esp
  41bee5:	push   ebx
  41bee6:	mov    ah,ah
  41bee8:	std    
  41bee9:	call   0xe254ca79
  41beee:	fistp  WORD PTR [esi]
  41bef0:	jbe    0x41bf0e
  41bef2:	and    al,0x98
  41bef4:	loop   0x41beae
  41bef6:	lods   al,BYTE PTR ds:[esi]
  41bef7:	push   ebx
  41bef8:	test   DWORD PTR [ecx-0x49d1744e],0xaba914ff
  41bf02:	jle    0x41be9e
  41bf04:	mov    cl,0x14
  41bf06:	dec    ebx
  41bf07:	push   esp
  41bf08:	call   0x75fae005
  41bf0d:	xchg   ebp,eax
  41bf0e:	sub    eax,0xacae8e98
  41bf13:	das    
  41bf14:	arpl   cx,cx
  41bf16:	mov    ds:0x9b85da2c,eax
  41bf1b:	loope  0x41bebb
  41bf1d:	jmp    0x41bf5f
  41bf1f:	repz adc esi,DWORD PTR [eax-0x5693cb2f]
  41bf26:	cmp    cl,BYTE PTR [edx+0x70a86f78]
  41bf2c:	ja     0x41bee8
  41bf2e:	imul   DWORD PTR [ebp-0x76]
  41bf31:	lds    esi,FWORD PTR [edi]
  41bf33:	hlt    
  41bf34:	iret   
  41bf35:	int3   
  41bf36:	xor    eax,0x6600d141
  41bf3b:	in     eax,0xdc
  41bf3d:	lahf   
  41bf3e:	out    dx,al
  41bf3f:	xor    eax,0xb5073a54
  41bf44:	push   ecx
  41bf45:	sets   BYTE PTR [edx]
  41bf48:	call   DWORD PTR [edx]
  41bf4a:	clc    
  41bf4b:	cmc    
  41bf4c:	jns    0x41bef4
  41bf4e:	inc    ebx
  41bf4f:	ins    DWORD PTR es:[edi],dx
  41bf50:	add    esi,0x29a7033f
  41bf56:	stc    
  41bf57:	push   ebp
  41bf58:	arpl   WORD PTR [eax*1-0x5eeb4c2d],ax
  41bf5f:	push   ss
  41bf60:	push   eax
  41bf61:	int    0x8a
  41bf63:	lods   eax,DWORD PTR ds:[esi]
  41bf64:	mov    ds:0x7669fd96,al
  41bf69:	sbb    esp,edx
  41bf6b:	xchg   edi,eax
  41bf6c:	jo     0x41bfe1
  41bf6e:	ins    BYTE PTR es:[edi],dx
  41bf6f:	dec    esp
  41bf70:	call   0x78f1:0x1628c320
  41bf77:	push   eax
  41bf78:	add    eax,0x8de725a4
  41bf7d:	push   cs
  41bf7e:	add    DWORD PTR [ebx-0xc7573a3],ebx
  41bf84:	pushf  
  41bf85:	shr    BYTE PTR [esi-0x35baabfe],cl
  41bf8b:	cmc    
  41bf8c:	shl    DWORD PTR [esi+0x41],0xc6
  41bf90:	adc    eax,0xf8200641
  41bf95:	clc    
  41bf96:	and    al,0x9c
  41bf98:	rcr    dh,cl
  41bf9a:	mov    edx,0x8ca13dbf
  41bf9f:	test   BYTE PTR [eax+ebx*2+0x4d],al
  41bfa3:	or     eax,0xd379aaf
  41bfa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfa9:	js     0x41bf2c
  41bfab:	fisubr DWORD PTR [ecx+0x7b82ffcf]
  41bfb1:	lahf   
  41bfb2:	int    0xd7
  41bfb4:	inc    edi
  41bfb5:	dec    esp
  41bfb6:	dec    esp
  41bfb7:	adc    al,BYTE PTR [ecx-0x31ca3f0c]
  41bfbd:	adc    al,0x18
  41bfbf:	jb     0x41bf49
  41bfc1:	mov    ?,WORD PTR [edx+0x52]
  41bfc4:	retf   
  41bfc5:	cli    
  41bfc6:	pop    ecx
  41bfc7:	cli    
  41bfc8:	inc    edi
  41bfc9:	sub    edx,edi
  41bfcb:	cli    
  41bfcc:	in     eax,0x2d
  41bfce:	push   edi
  41bfcf:	mov    al,ds:0xcc182ec0
  41bfd4:	sbb    DWORD PTR [edx-0x2e],0xffffffec
  41bfd8:	jns    0x41c054
  41bfda:	jp     0x41c044
  41bfdc:	push   0xdc361e46
  41bfe1:	cmc    
  41bfe2:	dec    ecx
  41bfe3:	push   esi
  41bfe4:	ins    BYTE PTR es:[edi],dx
  41bfe5:	xchg   esi,eax
  41bfe6:	cs ret 0xa88d
  41bfea:	lock jp 0x41bf86
  41bfed:	dec    eax
  41bfee:	dec    eax
  41bfef:	fnstcw WORD PTR [edi-0x7]
  41bff2:	inc    edx
  41bff3:	out    0xd6,eax
  41bff5:	mov    edi,ebx
  41bff7:	mov    cs,WORD PTR [esp+edx*8+0x5b556d2a]
  41bffe:	stos   DWORD PTR es:[edi],eax
  41bfff:	push   eax
  41c000:	mov    ecx,0x2ad2f09a
  41c005:	cmp    al,0xb
  41c007:	shl    BYTE PTR [ecx-0x51],cl
  41c00a:	fs mov ss,edx
  41c00d:	stc    
  41c00e:	es mov ah,0xae
  41c011:	(bad)  
  41c013:	cmp    DWORD PTR [ecx],ebx
  41c015:	fcomp  QWORD PTR [esi+0x10]
  41c018:	mov    esp,0xc52deaee
  41c01d:	pop    edx
  41c01e:	sub    bh,BYTE PTR [edi+0x64]
  41c021:	adc    BYTE PTR [esi+0x178fa591],al
  41c027:	xchg   esp,eax
  41c028:	repz push edx
  41c02a:	into   
  41c02b:	inc    edx
  41c02c:	dec    BYTE PTR [eax+0x66]
  41c02f:	or     eax,0x70f9d774
  41c034:	pop    ss
  41c035:	imul   eax,edx,0x4abf00c4
  41c03b:	push   esp
  41c03c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c03d:	inc    ecx
  41c03e:	lods   al,BYTE PTR ds:[esi]
  41c03f:	leave  
  41c040:	sub    esp,DWORD PTR [esi+0x60576f3c]
  41c046:	sub    ebp,DWORD PTR [edx]
  41c048:	lea    esi,ds:0x4acde0d8
  41c04e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c04f:	and    eax,DWORD PTR [esi-0x2e]
  41c052:	imul   ecx,DWORD PTR [edx],0xffffffec
  41c055:	mov    ch,0xa7
  41c057:	push   cs
  41c058:	dec    eax
  41c059:	push   ebp
  41c05a:	sti    
  41c05b:	sub    eax,esi
  41c05d:	cmc    
  41c05e:	mov    ecx,0x6be95788
  41c063:	cld    
  41c064:	push   0x12
  41c066:	mov    edi,0x1dd09587
  41c06b:	int    0x5f
  41c06d:	cmp    al,0xd3
  41c06f:	out    dx,al
  41c070:	mov    cl,0xd9
  41c072:	xor    DWORD PTR [edi+0x6a],esp
  41c075:	mov    bh,0x18
  41c077:	jno    0x41c092
  41c079:	addr16 push ecx
  41c07b:	shl    DWORD PTR [ecx-0x5ac30ca7],cl
  41c081:	xor    dl,BYTE PTR [edi]
  41c083:	stos   DWORD PTR es:[edi],eax
  41c084:	cdq    
  41c085:	dec    esp
  41c086:	xchg   ebx,eax
  41c087:	pop    ebx
  41c088:	bound  ebx,QWORD PTR [edx-0x632185a0]
  41c08e:	and    dl,BYTE PTR [eax+edx*4]
  41c091:	pop    edi
  41c092:	cmp    BYTE PTR [eax+edx*8+0x5e50db79],al
  41c099:	push   edi
  41c09a:	cmc    
  41c09b:	lods   eax,DWORD PTR ds:[esi]
  41c09c:	cmp    BYTE PTR [ebx+edx*2-0x53],bh
  41c0a0:	inc    eax
  41c0a1:	(bad)  
  41c0a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0a4:	ja     0x41c0e0
  41c0a6:	and    ecx,DWORD PTR [eax+eiz*8-0x26]
  41c0aa:	dec    DWORD PTR [ebx+eiz*1]
  41c0ad:	fisttp DWORD PTR [esi]
  41c0af:	xchg   ebx,eax
  41c0b0:	jmp    0x626d:0x5b73d20e
  41c0b7:	pop    esp
  41c0b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0b9:	test   BYTE PTR [edx+eiz*2+0x49],dl
  41c0bd:	mov    ch,0xda
  41c0bf:	lea    ecx,[eax]
  41c0c1:	add    DWORD PTR [esi-0x4c],eax
  41c0c4:	enter  0x2430,0xa5
  41c0c8:	jne    0x41c143
  41c0ca:	dec    eax
  41c0cb:	push   esp
  41c0cc:	call   0xfd9d:0xe7cbf6e0
  41c0d3:	jmp    0x41c074
  41c0d5:	sbb    BYTE PTR [edx-0x2eecd35e],0xbc
  41c0dc:	inc    ecx
  41c0dd:	dec    ebp
  41c0de:	jecxz  0x41c100
  41c0e0:	jbe    0x41c08e
  41c0e2:	pop    ss
  41c0e3:	ror    DWORD PTR [ecx],0xbe
  41c0e6:	test   eax,0xd2a4ea9d
  41c0eb:	ins    BYTE PTR es:[edi],dx
  41c0ec:	(bad)  
  41c0ed:	jge    0x41c09b
  41c0ef:	pop    esi
  41c0f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0f1:	and    esp,DWORD PTR [ecx-0x58324902]
  41c0f7:	and    DWORD PTR [edi+0x25],edi
  41c0fa:	or     BYTE PTR [edx],bh
  41c0fc:	mov    al,0x50
  41c0fe:	sti    
  41c0ff:	xor    esi,DWORD PTR [edx+0x47]
  41c102:	addr16 dec ebx
  41c104:	mov    ds:0xd26bf141,al
  41c109:	int    0x9
  41c10b:	push   ebp
  41c10c:	sub    DWORD PTR [ebx],0xe467ad68
  41c112:	test   ecx,esp
  41c114:	lods   al,BYTE PTR ds:[esi]
  41c115:	mov    edi,0xade5dd5
  41c11a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c11b:	enter  0xd540,0x16
  41c11f:	push   esi
  41c120:	inc    edi
  41c121:	je     0x41c0b0
  41c123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c124:	xor    eax,0x6f34b069
  41c129:	fidivr DWORD PTR [eax-0xa5624f4]
  41c12f:	int    0x9e
  41c131:	nop
  41c132:	or     ebp,esp
  41c134:	fcomp  DWORD PTR [ebp+0xb]
  41c137:	shl    BYTE PTR [edi-0x3fef8d1e],1
  41c13d:	xor    eax,0xe385440e
  41c142:	mov    edx,0x41ff1871
  41c147:	rol    DWORD PTR [esi-0x8],0xa0
  41c14b:	cld    
  41c14c:	cmp    al,BYTE PTR [eax+0x70]
  41c14f:	test   edi,0x860ad612
  41c155:	repz and DWORD PTR [edi+ebp*8+0x5a],edi
  41c15a:	aaa    
  41c15b:	xor    al,0x56
  41c15d:	inc    ebx
  41c15e:	sbb    ecx,DWORD PTR [ecx]
  41c160:	hlt    
  41c161:	ret    0x5030
  41c164:	inc    ebp
  41c165:	xchg   esi,eax
  41c166:	push   0xffffffe2
  41c168:	ja     0x41c193
  41c16a:	dec    ebx
  41c16b:	fld    st(6)
  41c16d:	pop    DWORD PTR [ebp-0x581aec06]
  41c173:	inc    ebx
  41c174:	xor    DWORD PTR [ecx+0xbfabc9],esp
  41c17a:	dec    esi
  41c17b:	mov    ecx,0x220ee406
  41c180:	ds loop 0x41c109
  41c183:	pop    ss
  41c184:	add    bl,0x27
  41c187:	inc    esi
  41c188:	adc    al,0x59
  41c18a:	cwde   
  41c18b:	xchg   esp,eax
  41c18c:	push   esp
  41c18d:	xor    BYTE PTR [ebp-0x59],ah
  41c190:	cmp    edx,DWORD PTR [edi+0x4221632]
  41c196:	out    dx,al
  41c197:	test   al,0x42
  41c199:	jmp    0xc6a8b810
  41c19e:	out    0xc8,eax
  41c1a0:	adc    eax,0x37b9f16d
  41c1a5:	test   edx,esp
  41c1a7:	add    DWORD PTR [ebx-0x6de6ec90],ebp
  41c1ad:	adc    DWORD PTR [eax-0x1f7b4eb9],0xfffffff3
  41c1b4:	scas   al,BYTE PTR es:[edi]
  41c1b5:	je     0x41c172
  41c1b7:	push   edi
  41c1b8:	fidivr WORD PTR [ebp+eax*8+0x1d]
  41c1bc:	(bad)  
  41c1bd:	xlat   BYTE PTR ds:[ebx]
  41c1be:	push   ecx
  41c1bf:	xor    dh,BYTE PTR [edx]
  41c1c1:	ds test al,0xf4
  41c1c4:	mov    ch,ah
  41c1c6:	xchg   ebp,eax
  41c1c7:	mov    edx,0xffc5b570
  41c1cc:	add    dl,BYTE PTR [ecx+0x3e9c6806]
  41c1d2:	mov    eax,0xde98fec9
  41c1d7:	pop    edi
  41c1d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1d9:	push   esp
  41c1da:	mov    ch,0x36
  41c1dc:	sbb    ah,cl
  41c1de:	ds pop es
  41c1e0:	les    edi,FWORD PTR [eax+0x4d]
  41c1e3:	xor    esi,DWORD PTR [ebx+0x73]
  41c1e6:	add    esp,ecx
  41c1e8:	(bad)  
  41c1e9:	loopne 0x41c250
  41c1eb:	dec    ebx
  41c1ec:	jb     0x41c229
  41c1ee:	cwde   
  41c1ef:	and    ch,BYTE PTR [eax]
  41c1f1:	int    0x23
  41c1f3:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41c1f5:	imul   eax,DWORD PTR [ebp-0x1463a977],0xfaef0c24
  41c1ff:	xlat   BYTE PTR ds:[ebx]
  41c200:	outs   dx,BYTE PTR ds:[esi]
  41c201:	mov    edx,DWORD PTR [ecx-0x34]
  41c204:	sub    eax,eax
  41c206:	or     DWORD PTR [ebp+0x696ee6bd],ecx
  41c20c:	mov    ax,ds:0xc0e479c3
  41c212:	lock js 0x41c224
  41c215:	push   ebx
  41c216:	push   esi
  41c217:	mov    WORD PTR [ebx+edi*8+0x3432c55a],?
  41c21e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c220:	ror    esi,1
  41c222:	adc    ebp,DWORD PTR [ecx+0x5bf0de0c]
  41c228:	inc    edi
  41c229:	jg     0x41c1d8
  41c22b:	test   eax,0x9d8943af
  41c230:	adc    BYTE PTR [ebx-0x331eda27],bl
  41c236:	or     eax,0x8f232b5a
  41c23b:	push   ecx
  41c23c:	and    al,0x69
  41c23e:	aad    0x2a
  41c240:	fwait
  41c241:	stc    
  41c242:	leave  
  41c243:	arpl   WORD PTR [esi],ax
  41c245:	or     edi,DWORD PTR [esi+0x68]
  41c248:	sbb    eax,0x61710714
  41c24d:	or     al,0x52
  41c24f:	cmc    
  41c250:	das    
  41c251:	out    0x19,eax
  41c253:	sub    esp,DWORD PTR [edx-0x37]
  41c256:	mov    DWORD PTR [ecx-0x26],edi
  41c259:	adc    DWORD PTR [eax+0x1c1f0a23],ecx
  41c25f:	add    esi,DWORD PTR [edx]
  41c261:	pop    edi
  41c262:	pop    ebx
  41c263:	sub    ebp,edx
  41c265:	xor    DWORD PTR [esi+0x5eae7af4],0x64
  41c26c:	xlat   BYTE PTR ds:[ebx]
  41c26d:	(bad)  
  41c26e:	idiv   esi
  41c270:	pop    edx
  41c271:	std    
  41c272:	adc    DWORD PTR [edi+eiz*1-0x67b786ef],ebp
  41c279:	adc    al,0x81
  41c27b:	test   al,0x88
  41c27d:	leave  
  41c27e:	cmp    DWORD PTR [eax-0x5c07b3ed],edi
  41c284:	leave  
  41c285:	daa    
  41c286:	test   eax,0x904a0494
  41c28b:	arpl   ax,dx
  41c28d:	test   eax,0xe898bb55
  41c292:	std    
  41c293:	mov    DWORD PTR [edi-0x65bee2be],edi
  41c299:	inc    eax
  41c29a:	lea    esi,[ecx-0x34]
  41c29d:	pop    ss
  41c29e:	hlt    
  41c29f:	and    esi,esi
  41c2a1:	pusha  
  41c2a2:	push   0xf4a456b4
  41c2a7:	or     dh,BYTE PTR [ebp+0x18ab530a]
  41c2ad:	and    dl,BYTE PTR [esi-0x1930086e]
  41c2b3:	or     eax,0x22c56b41
  41c2b8:	inc    esp
  41c2b9:	push   ss
  41c2ba:	inc    edx
  41c2bb:	out    dx,eax
  41c2bc:	pop    eax
  41c2bd:	jnp    0x41c33a
  41c2bf:	fs lock xchg ecx,eax
  41c2c2:	mov    ah,0x61
  41c2c4:	dec    edx
  41c2c5:	sub    BYTE PTR [esi+eax*1],bl
  41c2c8:	mov    ecx,0x5309d88d
  41c2cd:	xchg   ebp,eax
  41c2ce:	sub    DWORD PTR [esi-0x45],esp
  41c2d1:	outs   dx,DWORD PTR ds:[esi]
  41c2d2:	mov    ecx,0xc7c3747b
  41c2d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2d8:	aas    
  41c2d9:	or     al,0x3
  41c2db:	mov    WORD PTR [ecx+0x45],ss
  41c2de:	xchg   esp,eax
  41c2df:	jno    0x41c2b4
  41c2e1:	push   ds
  41c2e2:	or     ebx,DWORD PTR ds:0xea662d85
  41c2e8:	push   edi
  41c2e9:	jl     0x41c324
  41c2eb:	jecxz  0x41c330
  41c2ed:	pop    ebx
  41c2ee:	mov    ds:0xa5967226,al
  41c2f3:	lahf   
  41c2f4:	std    
  41c2f5:	(bad)  
  41c2f7:	jbe    0x41c34a
  41c2f9:	or     ecx,DWORD PTR [edx]
  41c2fb:	xor    bl,BYTE PTR [esi+eiz*4-0x15eda516]
  41c302:	mov    dh,0x75
  41c304:	or     BYTE PTR gs:[eax+0x5e],al
  41c308:	fwait
  41c309:	adc    DWORD PTR [esi-0x38],ebp
  41c30c:	out    0xb1,al
  41c30e:	inc    ebp
  41c30f:	inc    ecx
  41c310:	(bad)  
  41c311:	popa   
  41c312:	fbld   TBYTE PTR [edi+ebp*2+0x682ca3d1]
  41c319:	mov    eax,0xc5cae1d7
  41c31e:	test   eax,0x1076082f
  41c323:	pop    ecx
  41c324:	xchg   edx,eax
  41c325:	sbb    al,0x92
  41c327:	mov    al,0x4c
  41c329:	cmp    BYTE PTR [edx+0x8f469b8],cl
  41c32f:	mov    edx,0x5919712e
  41c334:	je     0x41c387
  41c336:	cmp    BYTE PTR [ecx],ah
  41c338:	push   ss
  41c339:	add    edx,DWORD PTR [esi+eax*2]
  41c33c:	pop    ss
  41c33d:	adc    ebx,DWORD PTR [esi-0x6b]
  41c340:	sub    esp,DWORD PTR [edx]
  41c342:	sbb    ebp,DWORD PTR [esi+esi*2+0x1b]
  41c346:	int    0x25
  41c348:	dec    edi
  41c349:	fwait
  41c34a:	sub    al,0xa5
  41c34c:	hlt    
  41c34d:	jmp    0x2146:0x94bc145f
  41c354:	jp     0x41c317
  41c356:	adc    eax,0xb8b5d2c3
  41c35b:	aas    
  41c35c:	push   eax
  41c35d:	mov    ds:0xed9cfb28,al
  41c362:	sar    BYTE PTR [eax],cl
  41c364:	retf   0xf6b1
  41c367:	pop    esi
  41c368:	dec    edx
  41c369:	scas   al,BYTE PTR es:[edi]
  41c36a:	and    ebx,esp
  41c36c:	fidiv  DWORD PTR [eax-0x35]
  41c36f:	jo     0x41c3ce
  41c371:	pop    ebx
  41c372:	add    DWORD PTR ds:0xd51ad5af,esp
  41c378:	push   0xffffffdc
  41c37a:	mov    esp,0x5f684b77
  41c37f:	int    0x86
  41c381:	test   BYTE PTR [edx+0x4ea2aa04],dl
  41c387:	xchg   edx,eax
  41c388:	(bad)  
  41c389:	mov    ecx,0xac2cfa98
  41c38e:	dec    ecx
  41c38f:	aas    
  41c390:	retf   0x28b1
  41c393:	xlat   BYTE PTR ds:[ebx]
  41c394:	xchg   esp,eax
  41c395:	bound  ebx,QWORD PTR [eax+ecx*1]
  41c398:	add    al,0xb0
  41c39a:	out    dx,al
  41c39b:	fsub   QWORD PTR [edx+0xa]
  41c39e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c39f:	or     eax,0xa8249600
  41c3a4:	mov    eax,DWORD PTR [eax+0x2d]
  41c3a7:	push   edi
  41c3a8:	and    dl,ch
  41c3aa:	cmp    cl,BYTE PTR [edx]
  41c3ac:	rcr    DWORD PTR [eax],0x98
  41c3af:	sbb    al,0xd8
  41c3b1:	jge    0x41c3f4
  41c3b3:	xchg   edi,eax
  41c3b4:	sbb    bl,cl
  41c3b6:	mov    ds:0x5b4415c3,eax
  41c3bb:	mov    dl,0x52
  41c3bd:	rcr    DWORD PTR [edx],cl
  41c3bf:	fucomp st(4)
  41c3c1:	fnstsw WORD PTR [ecx+0x7a]
  41c3c4:	mov    cs,edi
  41c3c6:	cs push es
  41c3c8:	or     cl,bh
  41c3ca:	mov    ebx,0xeba69f1b
  41c3cf:	sub    eax,0x3b912df
  41c3d4:	inc    edx
  41c3d5:	bound  eax,QWORD PTR [esi+0x58]
  41c3d8:	or     bl,BYTE PTR [edi+0x7dcc6300]
  41c3de:	jb     0x41c3ff
  41c3e0:	dec    esp
  41c3e1:	jne    0x41c43f
  41c3e3:	jo     0x41c422
  41c3e5:	cmp    al,0x9d
  41c3e7:	imul   ecx,DWORD PTR [ecx+0x55],0xa9eaf585
  41c3ee:	pop    eax
  41c3ef:	xchg   esp,eax
  41c3f0:	mov    edi,DWORD PTR [eax+0x62feaa6e]
  41c3f6:	fadd   QWORD PTR [esi-0x5d]
  41c3f9:	retf   0xdc2e
  41c3fc:	sub    ah,cl
  41c3fe:	jno    0x41c409
  41c400:	dec    edi
  41c401:	std    
  41c402:	jp     0x41c385
  41c404:	cld    
  41c405:	sbb    BYTE PTR [esi+0x34],ah
  41c408:	adc    eax,0xfc578a6d
  41c40d:	add    DWORD PTR [ebx-0x17d3f44e],esi
  41c413:	mov    ebp,0x3c5d06a9
  41c418:	adc    ebp,DWORD PTR [ecx+0x297aea69]
  41c41e:	(bad)  
  41c41f:	call   0xdbd0:0xf46019ce
  41c426:	ds scas eax,DWORD PTR es:[edi]
  41c428:	in     al,dx
  41c429:	pop    esp
  41c42a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c42c:	jno    0x41c3ca
  41c42e:	cmp    DWORD PTR [edx-0x64b116a],ecx
  41c434:	ret    0x1674
  41c437:	neg    BYTE PTR [edi-0x45]
  41c43a:	jmp    0xc3ed1e2e
  41c43f:	adc    ah,ah
  41c441:	popa   
  41c442:	sub    eax,0x8ce7cd81
  41c447:	mov    esp,0xc99e40d6
  41c44c:	fisub  DWORD PTR [edi+0x7dc91b70]
  41c452:	nop
  41c453:	loopne 0x41c40b
  41c455:	(bad)
  41c458:	mov    bh,0x24
  41c45a:	call   FWORD PTR [ebx+0x50]
  41c45d:	sbb    DWORD PTR [edi*8-0x69993b0],edx
  41c464:	push   0xb9216d45
  41c469:	push   0xffffff81
  41c46b:	or     al,0xf8
  41c46d:	mov    ebp,DWORD PTR [esi]
  41c46f:	xchg   edi,eax
  41c470:	sub    al,0xa7
  41c472:	mov    edi,cs
  41c474:	and    eax,0x740b736d
  41c479:	lahf   
  41c47a:	jne    0x41c48e
  41c47c:	sbb    eax,0x6ff1871f
  41c481:	cmp    DWORD PTR [edi+eax*8],eax
  41c484:	in     eax,dx
  41c485:	dec    esp
  41c486:	sbb    ebx,ecx
  41c488:	add    ebx,edx
  41c48a:	xchg   edi,eax
  41c48b:	ret    0xe6a8
  41c48e:	mov    edi,esp
  41c490:	outs   dx,DWORD PTR ds:[esi]
  41c491:	xchg   dh,bl
  41c493:	mov    dl,0xa4
  41c495:	mov    dl,0xc8
  41c497:	push   0xa98d311c
  41c49c:	push   edx
  41c49d:	pop    ebx
  41c49e:	pop    ecx
  41c49f:	mov    ds:0x6e0f37d3,eax
  41c4a4:	push   ebx
  41c4a5:	cmp    eax,0xf4ecff71
  41c4aa:	shr    ah,1
  41c4ac:	jmp    0xe63c:0x3696ffcf
  41c4b3:	xchg   edi,eax
  41c4b4:	cmp    eax,0xdd7fe4e5
  41c4b9:	xor    DWORD PTR [ebx-0x89e82d0],0xffffffd9
  41c4c0:	jecxz  0x41c53b
  41c4c2:	js     0x41c541
  41c4c4:	adc    eax,0xb540eedc
  41c4c9:	push   cs
  41c4ca:	xor    eax,0x8d4665b3
  41c4cf:	maxps  xmm5,xmm2
  41c4d2:	js     0x41c54e
  41c4d4:	pop    edx
  41c4d5:	hlt    
  41c4d6:	cmp    edi,esp
  41c4d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4d9:	pop    eax
  41c4da:	call   0xad2eb740
  41c4df:	add    eax,0xd2da11e4
  41c4e4:	or     BYTE PTR [edx],bh
  41c4e6:	arpl   WORD PTR [ebx+0x2f926b86],bx
  41c4ec:	mov    ebx,0x38c2a219
  41c4f1:	fbld   TBYTE PTR [edx-0x7b]
  41c4f4:	sbb    al,0xed
  41c4f6:	out    0xc4,eax
  41c4f8:	test   DWORD PTR [ebx+0x18],esi
  41c4fb:	inc    ebx
  41c4fc:	aam    0x3b
  41c4fe:	adc    al,al
  41c500:	add    edx,DWORD PTR [esi+0x34231739]
  41c506:	lahf   
  41c507:	jmp    0x41c517
  41c509:	push   0xc293d126
  41c50e:	inc    esp
  41c50f:	sub    edx,DWORD PTR [esi-0x6cb93e13]
  41c515:	mov    edx,0x1d4d5b8b
  41c51a:	sbb    DWORD PTR [eax-0x2147de14],esi
  41c520:	(bad)  
  41c521:	sub    ecx,edx
  41c523:	adc    BYTE PTR [esp+eiz*8-0x21],al
  41c527:	mov    ah,0x3f
  41c529:	fld    TBYTE PTR [ebp+0x79]
  41c52c:	fs aam 0x95
  41c52f:	add    BYTE PTR [ebx],0x91
  41c532:	call   0x77c1:0x1bf55bb2
  41c539:	or     dh,0xb5
  41c53c:	add    esi,DWORD PTR [ecx]
  41c53e:	xor    cl,cl
  41c540:	es and BYTE PTR ds:[esi+0x61],ah
  41c545:	icebp  
  41c546:	das    
  41c547:	stos   BYTE PTR es:[edi],al
  41c548:	fcomi  st,st(5)
  41c54a:	sub    edx,esp
  41c54c:	or     bh,BYTE PTR [eax]
  41c54e:	sti    
  41c54f:	xchg   ecx,eax
  41c550:	push   es
  41c551:	push   ecx
  41c552:	mov    ds:0xc7b99412,eax
  41c557:	stos   DWORD PTR es:[edi],eax
  41c558:	aad    0x5d
  41c55a:	add    esp,DWORD PTR [esi+0x6ae909e4]
  41c560:	fs mov ah,0x2c
  41c563:	jle    0x41c5d7
  41c565:	or     edi,DWORD PTR [ebx-0x55]
  41c568:	aad    0xc4
  41c56a:	add    BYTE PTR fs:[ebx-0x7972ebc0],dl
  41c571:	(bad)  
  41c572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c573:	sbb    DWORD PTR [edi-0x6d],ebp
  41c576:	inc    esi
  41c577:	or     BYTE PTR [eax-0x2df4ee68],ah
  41c57d:	jp     0x41c569
  41c57f:	xchg   esp,eax
  41c580:	push   eax
  41c581:	enter  0x3c18,0xc9
  41c585:	dec    DWORD PTR [esi+0x58adaed7]
  41c58b:	ret    
  41c58c:	jo     0x41c53d
  41c58e:	(bad)  
  41c58f:	jmp    0x4508:0xd5c265b2
  41c596:	jp     0x41c545
  41c598:	cmp    bl,ch
  41c59a:	int    0x7
  41c59c:	cli    
  41c59d:	push   esi
  41c59e:	loope  0x41c615
  41c5a0:	stos   DWORD PTR es:[edi],eax
  41c5a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5a2:	fcomp  DWORD PTR [ebx-0x7cbecdcb]
  41c5a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5a9:	mov    WORD PTR [eax+0x8],es
  41c5ac:	jmp    0xfba5:0xf3588fd6
  41c5b3:	sub    bh,BYTE PTR [edx]
  41c5b5:	or     eax,0x714d0471
  41c5ba:	shl    edx,1
  41c5bc:	mov    eax,0xf5f9b9ce
  41c5c1:	cmp    DWORD PTR [esi+0x45],edx
  41c5c4:	fmulp  st(4),st
  41c5c6:	fmul   QWORD PTR [ebp-0x4]
  41c5c9:	mov    esi,0xdd3b8f95
  41c5ce:	inc    edx
  41c5cf:	push   0xb9c164f9
  41c5d4:	dec    edi
  41c5d5:	xchg   ebx,eax
  41c5d6:	adc    al,0x88
  41c5d8:	mov    esp,0x4d89fafa
  41c5dd:	fbstp  TBYTE PTR [esi+esi*1-0x78810a20]
  41c5e4:	push   0x6c
  41c5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5e7:	or     eax,0x73177f83
  41c5ec:	ins    BYTE PTR es:[edi],dx
  41c5ed:	push   ebp
  41c5ee:	test   al,0x24
  41c5f0:	jecxz  0x41c663
  41c5f2:	rol    BYTE PTR [ebx+0x2fad7b00],0xae
  41c5f9:	scas   eax,DWORD PTR es:[edi]
  41c5fa:	cmp    BYTE PTR [edx+ebp*1-0x25193945],0xfa
  41c602:	xor    DWORD PTR [ebx],edi
  41c604:	icebp  
  41c605:	lods   eax,DWORD PTR ds:[esi]
  41c606:	sub    ebx,0x1
  41c609:	sbb    al,0xc5
  41c60b:	dec    esi
  41c60c:	popa   
  41c60d:	call   0x1bd7:0xef6710be
  41c614:	mov    esi,0x35cd2283
  41c619:	push   DWORD PTR [ebx-0x2ee78b61]
  41c61f:	jno    0x41c5dd
  41c621:	cwde   
  41c622:	rcl    DWORD PTR [ebx+eiz*4-0x56],0x0
  41c627:	mov    bh,0xe2
  41c629:	mul    DWORD PTR [ecx+0x50]
  41c62c:	loop   0x41c615
  41c62e:	aam    0x8b
  41c630:	ret    
  41c631:	push   esp
  41c632:	push   esi
  41c633:	push   ecx
  41c634:	daa    
  41c635:	rol    BYTE PTR [edi+0x6b9103a1],cl
  41c63b:	push   ebp
  41c63c:	sar    BYTE PTR [ebx+0x45],cl
  41c63f:	sub    BYTE PTR [eax],dl
  41c641:	mov    ebx,edx
  41c643:	stos   BYTE PTR es:[edi],al
  41c644:	mov    cl,0x72
  41c646:	inc    edi
  41c647:	cmp    eax,0x87aed89b
  41c64c:	outs   dx,DWORD PTR ds:[esi]
  41c64d:	pop    ecx
  41c64e:	out    0xaa,al
  41c650:	outs   dx,BYTE PTR ds:[esi]
  41c651:	cmp    eax,0x1f43ef7b
  41c656:	mov    ds:0x51c2c658,eax
  41c65b:	inc    ebx
  41c65c:	cmp    edi,DWORD PTR [edi+0x7a49f9ae]
  41c662:	xchg   edx,eax
  41c663:	jno    0x41c67f
  41c665:	pop    ecx
  41c666:	fdiv   DWORD PTR [ebx]
  41c668:	in     al,0x16
  41c66a:	cmp    DWORD PTR [edi+ecx*1+0x352b68d],0x52266074
  41c675:	je     0x41c623
  41c677:	retf   0x51e5
  41c67a:	cmp    bl,BYTE PTR [ebp+0x44a2c46d]
  41c680:	test   DWORD PTR [edx-0x75],esp
  41c683:	sub    edx,edx
  41c685:	mov    ds:0xacd1f302,eax
  41c68a:	dec    eax
  41c68b:	rcr    BYTE PTR ss:[esi-0x8],cl
  41c68f:	(bad)  
  41c691:	dec    esi
  41c692:	sbb    bl,ah
  41c694:	mov    esi,0x8afd95c0
  41c699:	xor    dh,BYTE PTR [edi-0x49]
  41c69c:	sub    dl,ch
  41c69e:	sbb    al,0xf8
  41c6a0:	pop    ecx
  41c6a1:	dec    ebp
  41c6a2:	enter  0xdab8,0xf5
  41c6a6:	sub    edx,edx
  41c6a8:	in     eax,0x90
  41c6aa:	mov    ebx,0xa1f97ae2
  41c6af:	and    eax,0x5f565455
  41c6b4:	(bad)  
  41c6b5:	jge    0x41c6a8
  41c6b7:	sbb    BYTE PTR [edx],dl
  41c6b9:	mov    bh,0x3e
  41c6bb:	mov    esp,DWORD PTR ds:0xa684e961
  41c6c1:	aas    
  41c6c2:	mov    edi,0xcbc0dcf2
  41c6c7:	nop
  41c6c8:	inc    esp
  41c6c9:	out    dx,eax
  41c6ca:	push   ds
  41c6cb:	push   edi
  41c6cc:	xchg   edx,eax
  41c6cd:	shl    BYTE PTR [eax+0x1b],1
  41c6d0:	js     0x41c67a
  41c6d2:	mov    cl,BYTE PTR [esi-0x10bf48af]
  41c6d8:	pop    esi
  41c6d9:	jmp    0x499ceab6
  41c6de:	xchg   DWORD PTR [esi],ebx
  41c6e0:	mov    al,0xef
  41c6e2:	cmp    DWORD PTR [esi-0x28],edx
  41c6e5:	imul   BYTE PTR [edi+0x6e753999]
  41c6eb:	div    BYTE PTR [esp+ecx*2+0x7d2f28db]
  41c6f2:	lahf   
  41c6f3:	out    dx,al
  41c6f4:	loope  0x41c71d
  41c6f6:	push   edx
  41c6f7:	sti    
  41c6f8:	jle    0x41c69f
  41c6fa:	repz int 0xdb
  41c6fd:	xor    BYTE PTR [esi+0x3acb8200],bh
  41c703:	sub    al,0x8
  41c705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c707:	aaa    
  41c708:	xchg   edi,eax
  41c709:	jo     0x41c72e
  41c70b:	test   eax,0x5dba4e77
  41c710:	in     al,dx
  41c711:	cli    
  41c712:	ss sahf 
  41c714:	(bad)  
  41c715:	jb     0x41c6b8
  41c717:	into   
  41c718:	add    al,0xa6
  41c71a:	ret    
  41c71b:	and    DWORD PTR ds:0xd1571532,esi
  41c721:	lods   al,BYTE PTR ds:[esi]
  41c722:	fnstsw WORD PTR [ebp-0x1f4e1d81]
  41c728:	cmp    cl,ah
  41c72a:	stos   BYTE PTR es:[edi],al
  41c72b:	sub    DWORD PTR [edx+edi*1+0x25dc2445],ebp
  41c732:	je     0x41c79e
  41c734:	cmp    edi,DWORD PTR [eax+0x66]
  41c737:	xchg   esi,eax
  41c738:	ffree  st(4)
  41c73a:	in     al,dx
  41c73b:	mov    BYTE PTR [edi-0x73],bl
  41c73e:	adc    eax,0xb07c94c2
  41c743:	fsubr  DWORD PTR [edx+ecx*4+0x29ce84f]
  41c74a:	fcomp  DWORD PTR [edi+edx*8]
  41c74d:	mov    ds:0xa3acb63e,eax
  41c752:	into   
  41c753:	jp     0x41c781
  41c755:	and    esi,DWORD PTR [edx-0x69]
  41c758:	repnz imul esp,DWORD PTR [ecx+0x4b5498b8],0x70c12434
  41c763:	pop    es
  41c764:	(bad)  
  41c765:	shr    ah,1
  41c767:	retf   
  41c768:	loope  0x41c7cc
  41c76a:	fsub   DWORD PTR [ebx+0x60]
  41c76d:	pop    ecx
  41c76e:	inc    eax
  41c76f:	xchg   ebp,eax
  41c770:	leave  
  41c771:	test   eax,0x49c52760
  41c776:	mov    edi,0x261e9ce9
  41c77b:	jmp    FWORD PTR [esp+eax*8-0x1e]
  41c77f:	sahf   
  41c780:	push   0x1d3f2251
  41c785:	mov    ds:0x1807d7fe,al
  41c78a:	jae    0x41c7e7
  41c78c:	stos   BYTE PTR es:[edi],al
  41c78d:	ins    BYTE PTR es:[edi],dx
  41c78e:	call   0xb01:0x31d43539
  41c795:	jge    0x41c7a8
  41c797:	mov    ah,0xe2
  41c799:	not    BYTE PTR [esi]
  41c79b:	mov    esp,0x94df0ab6
  41c7a0:	dec    ecx
  41c7a1:	and    ebx,ebx
  41c7a3:	jmp    0x74cf:0x3b4086e
  41c7aa:	sbb    ch,BYTE PTR [ecx+0x27]
  41c7ad:	sbb    eax,0x37b5fdea
  41c7b2:	jg     0x41c7fc
  41c7b4:	cs xchg esi,eax
  41c7b6:	enter  0x2ca9,0x3a
  41c7ba:	xor    al,0xf2
  41c7bc:	fcomp  QWORD PTR [ecx+0x46]
  41c7bf:	pop    ebx
  41c7c0:	jno    0x41c83e
  41c7c2:	cmp    DWORD PTR [edx],ebp
  41c7c4:	ja     0x41c82d
  41c7c6:	ret    0xb9f1
  41c7c9:	outs   dx,DWORD PTR ds:[esi]
  41c7ca:	pushf  
  41c7cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7cc:	jo     0x41c842
  41c7ce:	cmp    ch,BYTE PTR [esi+0x1e124a0f]
  41c7d4:	cmc    
  41c7d5:	iret   
  41c7d6:	fstp   DWORD PTR ds:0xfd825678
  41c7dc:	and    ebp,DWORD PTR [edi]
  41c7de:	adc    dl,bh
  41c7e0:	pop    edx
  41c7e1:	cmp    dh,BYTE PTR [ebx-0x7490f1a4]
  41c7e7:	gs cmp dl,bh
  41c7ea:	das    
  41c7eb:	dec    ebp
  41c7ec:	mov    ebx,0xbc47ca5d
  41c7f1:	xchg   ecx,eax
  41c7f2:	mov    dl,0x87
  41c7f4:	cwde   
  41c7f5:	scas   eax,DWORD PTR es:[edi]
  41c7f6:	xchg   edx,eax
  41c7f7:	lds    edx,FWORD PTR [edi]
  41c7f9:	fdivr  DWORD PTR [ebx+0x3e]
  41c7fc:	jl     0x41c7e7
  41c7fe:	mov    esp,esi
  41c800:	jne    0x41c7b3
  41c802:	das    
  41c803:	adc    ecx,DWORD PTR [edx+0x3f]
  41c806:	xor    al,BYTE PTR [esi+0x27]
  41c809:	lds    ecx,FWORD PTR [eax+0x66]
  41c80c:	mov    bh,0xb3
  41c80e:	std    
  41c80f:	ret    0xde9c
  41c812:	mov    eax,0xe585742d
  41c817:	inc    esi
  41c818:	and    esp,ebx
  41c81a:	or     bh,BYTE PTR [ecx-0x2a7519fe]
  41c820:	arpl   WORD PTR [ecx],sp
  41c822:	das    
  41c823:	stos   DWORD PTR es:[edi],eax
  41c824:	xchg   edx,eax
  41c825:	jb     0x41c867
  41c827:	push   ebx
  41c828:	int3   
  41c829:	dec    edi
  41c82a:	mov    al,ds:0x92d7c637
  41c82f:	push   ecx
  41c830:	mov    ecx,0x8a114a7f
  41c835:	inc    edx
  41c836:	pop    esp
  41c837:	retf   
  41c838:	in     al,dx
  41c839:	push   eax
  41c83a:	dec    edx
  41c83b:	sti    
  41c83c:	dec    ebx
  41c83d:	popa   
  41c83e:	stos   DWORD PTR es:[edi],eax
  41c83f:	or     eax,0x14d3dee0
  41c844:	hlt    
  41c845:	mov    ebp,0xf1706c02
  41c84a:	retf   
  41c84b:	cdq    
  41c84c:	out    0x2b,al
  41c84e:	enter  0x6641,0xcb
  41c852:	repnz pop ds
  41c854:	dec    edi
  41c855:	out    dx,eax
  41c856:	adc    eax,0xfd654303
  41c85b:	(bad)  gs:[eax+0x57]
  41c85f:	out    0x17,eax
  41c861:	push   edx
  41c862:	sub    ecx,DWORD PTR [esi+ebp*1-0x24]
  41c866:	inc    eax
  41c867:	jmp    0x41c89b
  41c869:	lods   eax,DWORD PTR ds:[esi]
  41c86a:	and    esp,ebp
  41c86c:	ret    0x6ceb
  41c86f:	call   0x5c734610
  41c874:	jno    0x41c853
  41c876:	mov    ah,0x11
  41c878:	pop    edx
  41c879:	mov    ecx,0xb8ef2e8a
  41c87e:	dec    ebp
  41c87f:	test   al,0x1a
  41c881:	repnz inc esi
  41c883:	mov    bh,0x8
  41c885:	ror    dh,1
  41c887:	xor    eax,DWORD PTR [eax]
  41c889:	cmp    ebx,esi
  41c88b:	adc    edi,DWORD PTR [edx-0x2de562b9]
  41c891:	jbe    0x41c898
  41c893:	mov    esi,0x42355704
  41c898:	repnz inc eax
  41c89a:	sub    eax,0x9f3e5a97
  41c89f:	sub    ecx,DWORD PTR [ebx+eiz*8]
  41c8a2:	cmc    
  41c8a3:	sbb    edx,DWORD PTR [ecx+edi*1-0x3]
  41c8a7:	ficom  DWORD PTR [ebp-0x66]
  41c8aa:	jnp    0x41c8f0
  41c8ac:	push   0xd982a24c
  41c8b1:	add    DWORD PTR [esi+0x68bfe8f8],edx
  41c8b7:	ds inc ebp
  41c8b9:	inc    esp
  41c8ba:	push   ebx
  41c8bb:	imul   ecx,DWORD PTR [esi],0x44
  41c8be:	lock fdivr QWORD PTR [ecx+esi*8+0x75bd4c09]
  41c8c6:	and    cl,bl
  41c8c8:	cdq    
  41c8c9:	push   cs
  41c8ca:	mov    esi,0x598d3c95
  41c8cf:	add    al,0xc5
  41c8d1:	push   0x3a782f5a
  41c8d6:	lods   al,BYTE PTR ds:[esi]
  41c8d7:	inc    DWORD PTR [edi-0x5]
  41c8da:	mov    eax,0xf3be7b3d
  41c8df:	or     cl,ah
  41c8e1:	pop    ebp
  41c8e2:	aad    0xc
  41c8e4:	jle    0x41c906
  41c8e6:	mov    edi,0x5f473653
  41c8eb:	hlt    
  41c8ec:	mov    ah,0x93
  41c8ee:	icebp  
  41c8ef:	mov    edx,0xe00ba6f0
  41c8f4:	scas   eax,DWORD PTR es:[edi]
  41c8f5:	mov    ch,0xef
  41c8f7:	sbb    al,BYTE PTR [eax+0xf]
  41c8fa:	div    dh
  41c8fc:	or     eax,0x3428151d
  41c901:	test   al,0x2d
  41c903:	add    DWORD PTR [edi],ecx
  41c905:	xchg   esi,eax
  41c906:	and    eax,0x5f57bdcc
  41c90b:	add    ch,cl
  41c90d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c90e:	mov    dh,0x94
  41c910:	and    eax,0x2f
  41c913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c914:	fld    QWORD PTR [ecx+ebx*1-0x60936cec]
  41c91b:	jnp    0x41c966
  41c91d:	neg    BYTE PTR [ebp-0x37]
  41c920:	out    dx,al
  41c921:	stos   DWORD PTR es:[edi],eax
  41c922:	cmp    ecx,esp
  41c924:	xor    DWORD PTR [edi-0x34ece79b],0x260fbd79
  41c92e:	mov    esp,0xd8f76113
  41c933:	adc    BYTE PTR [edi-0x3afa7a7],0x19
  41c93a:	cwde   
  41c93b:	or     DWORD PTR [ebp-0x14534119],ebx
  41c941:	imul   ebx,eax,0x442a73b0
  41c947:	inc    eax
  41c948:	test   DWORD PTR [ecx],edx
  41c94a:	mov    al,0x9d
  41c94c:	mov    ch,0x13
  41c94e:	std    
  41c94f:	xor    eax,DWORD PTR ds:0xf043743c
  41c955:	test   eax,0xd8bef096
  41c95a:	adc    eax,0x5a40c1fb
  41c95f:	sub    al,0x45
  41c961:	pop    DWORD PTR [edx+0x2]
  41c964:	dec    esp
  41c965:	fisttp DWORD PTR [esi-0x52]
  41c968:	mov    ecx,0x3da1db8b
  41c96d:	div    DWORD PTR [edx]
  41c96f:	xchg   ebp,eax
  41c970:	js     0x41c9c5
  41c972:	push   0x67c44882
  41c977:	rol    BYTE PTR [ecx],1
  41c979:	xlat   BYTE PTR ds:[ebx]
  41c97a:	dec    esi
  41c97b:	bound  eax,QWORD PTR [ecx-0x2e]
  41c97e:	cmp    al,0x37
  41c980:	mov    edi,0xf8f99c8f
  41c985:	add    BYTE PTR [esi],al
  41c987:	fwait
  41c988:	cmp    al,cl
  41c98a:	jg     0x41c952
  41c98c:	xchg   ecx,eax
  41c98d:	inc    esi
  41c98e:	mov    ebx,0x65edfe81
  41c993:	es mov cl,0x20
  41c996:	fs xor esp,esi
  41c999:	repnz mov ?,ebp
  41c99c:	push   ebx
  41c99d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c99e:	jl     0x41ca16
  41c9a0:	or     eax,0x63a6a1c3
  41c9a5:	rcr    DWORD PTR [esi-0x27],1
  41c9a8:	aaa    
  41c9a9:	cmp    bl,cl
  41c9ab:	fld    QWORD PTR [eax]
  41c9ad:	retf   0xef61
  41c9b0:	shl    DWORD PTR [ecx+0x28],0xd3
  41c9b4:	jo     0x41ca20
  41c9b6:	sbb    dl,BYTE PTR [edi+0x74]
  41c9b9:	psubd  mm0,QWORD PTR [esi+0x13d99e99]
  41c9c0:	xor    BYTE PTR [ebx-0x7cf69b9a],al
  41c9c6:	jne    0x41ca34
  41c9c8:	sahf   
  41c9c9:	mov    al,0x72
  41c9cb:	mov    dx,0xc292
  41c9cf:	ret    0x9ff
  41c9d2:	mov    ds:0xec0299b2,eax
  41c9d7:	mov    eax,esp
  41c9d9:	sbb    BYTE PTR [esi+0x1665b706],ch
  41c9df:	sbb    cl,ah
  41c9e1:	push   ebx
  41c9e2:	pop    esi
  41c9e3:	cmp    al,0x68
  41c9e5:	cs dec ecx
  41c9e7:	mov    dl,0x16
  41c9e9:	dec    eax
  41c9ea:	popa   
  41c9eb:	push   esp
  41c9ec:	adc    BYTE PTR [ebx+0x8eadb67],cl
  41c9f2:	xchg   edi,eax
  41c9f3:	sub    eax,DWORD PTR [ecx]
  41c9f5:	cmc    
  41c9f6:	lods   eax,DWORD PTR ds:[esi]
  41c9f7:	or     ecx,DWORD PTR [ecx-0xe]
  41c9fa:	int3   
  41c9fb:	push   esi
  41c9fc:	scas   al,BYTE PTR es:[edi]
  41c9fd:	out    0x96,al
  41c9ff:	stc    
  41ca00:	sbb    BYTE PTR gs:[eax+0x7c25d144],dh
  41ca07:	jle    0x41c994
  41ca09:	clc    
  41ca0a:	mov    ebx,0xe1ab7c15
  41ca0f:	push   0xe1728be8
  41ca14:	xchg   ebp,eax
  41ca15:	in     al,dx
  41ca16:	call   0x9cb947ea
  41ca1b:	iret   
  41ca1c:	rcr    DWORD PTR [ebp+0x679983db],cl
  41ca22:	xor    bl,bl
  41ca24:	fcomp  DWORD PTR ds:0x74669a09
  41ca2a:	popf   
  41ca2b:	adc    DWORD PTR [esi+esi*1],eax
  41ca2e:	push   ecx
  41ca2f:	aad    0x59
  41ca31:	mov    ecx,0xb164808c
  41ca36:	inc    esp
  41ca37:	mov    bl,0xd4
  41ca39:	xor    BYTE PTR [esi+edi*8-0x671bbfae],0xe9
  41ca41:	xor    eax,0xd5da0832
  41ca46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca47:	(bad)  
  41ca48:	dec    ebx
  41ca49:	mov    ebp,0x227faf
  41ca4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca4f:	fs pushf 
  41ca51:	hlt    
  41ca52:	call   0x325794fd
  41ca57:	fs call 0x896fa8dc
  41ca5d:	pop    ds
  41ca5e:	retf   
  41ca5f:	fnstcw WORD PTR [edi+0x49]
  41ca62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca63:	sub    eax,0x9b01d9
  41ca68:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41ca6a:	lods   al,BYTE PTR ds:[esi]
  41ca6b:	add    esi,DWORD PTR [ebp+0x58968be8]
  41ca71:	ret    
  41ca72:	and    al,0x71
  41ca74:	mov    edx,ecx
  41ca76:	pop    ecx
  41ca77:	xchg   edx,eax
  41ca78:	xchg   ebp,eax
  41ca79:	pop    ebx
  41ca7a:	jmp    0x2f7b:0x2104df77
  41ca81:	rol    BYTE PTR [esi],1
  41ca83:	jmp    0xb964e1ed
  41ca88:	xlat   BYTE PTR ds:[ebx]
  41ca89:	mov    ah,0xab
  41ca8b:	mov    ebp,DWORD PTR [eax-0x77cb307]
  41ca91:	(bad)  
  41ca92:	pop    edx
  41ca93:	shl    DWORD PTR [ebx+edi*4],1
  41ca96:	in     al,dx
  41ca97:	(bad)
  41ca9a:	and    BYTE PTR [edx-0x7b],al
  41ca9d:	pop    ebp
  41ca9e:	or     BYTE PTR [ebx+0x4edbfff0],0x4a
  41caa5:	mov    ax,ds:0x37a494db
  41caab:	pushf  
  41caac:	ds sbb al,0x9e
  41caaf:	fistp  QWORD PTR [ebx+eax*8+0x7b]
  41cab3:	mov    dl,0xa0
  41cab5:	dec    esp
  41cab6:	popf   
  41cab7:	push   ds
  41cab8:	fbstp  TBYTE PTR [edi+0x3e]
  41cabb:	mov    al,0x35
  41cabd:	push   cs
  41cabe:	mov    dh,0x6c
  41cac0:	push   0xefbc1649
  41cac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cac6:	mov    DWORD PTR [ebx+0xf473268],0x39d562e1
  41cad0:	stc    
  41cad1:	xor    eax,0xca523112
  41cad6:	stos   BYTE PTR es:[edi],al
  41cad7:	clc    
  41cad8:	daa    
  41cad9:	repnz iret 
  41cadb:	adc    ah,BYTE PTR [ebx+0x2b]
  41cade:	jno    0x41cb48
  41cae0:	inc    esp
  41cae1:	dec    eax
  41cae2:	out    dx,al
  41cae3:	cmp    dl,dl
  41cae5:	ficom  DWORD PTR [ebp-0x30]
  41cae8:	outs   dx,DWORD PTR ds:[esi]
  41cae9:	mov    edi,0xef28ee59
  41caee:	mov    ebx,0xb3405a6b
  41caf3:	fwait
  41caf4:	jg     0x41ca7e
  41caf6:	daa    
  41caf7:	bound  esp,QWORD PTR [edi+ebp*4+0x1e]
  41cafb:	pop    ss
  41cafc:	sbb    eax,0x2c069d3f
  41cb01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb02:	mov    ebp,0xe139639e
  41cb07:	pusha  
  41cb08:	rcr    BYTE PTR [edx],cl
  41cb0a:	or     BYTE PTR [edi+0x7],ah
  41cb0d:	rol    BYTE PTR [eax-0x3],cl
  41cb10:	int3   
  41cb11:	scas   al,BYTE PTR es:[edi]
  41cb12:	or     DWORD PTR [ebx-0x1deea08c],ebx
  41cb18:	sub    al,0x74
  41cb1a:	push   eax
  41cb1b:	dec    esi
  41cb1c:	add    eax,0xbe75b75e
  41cb21:	jns    0x41cb3d
  41cb23:	push   eax
  41cb24:	cmp    DWORD PTR [edx],0x3d
  41cb27:	mov    dh,0x0
  41cb29:	or     ch,BYTE PTR [ecx]
  41cb2b:	push   eax
  41cb2c:	mov    ch,BYTE PTR [ebx+0x67c25cb4]
  41cb32:	enter  0x6ed4,0xcd
  41cb36:	hlt    
  41cb37:	ja     0x41caef
  41cb39:	adc    BYTE PTR [edx],dl
  41cb3b:	add    BYTE PTR [ebx],bh
  41cb3d:	icebp  
  41cb3e:	add    DWORD PTR [eax+0x2b32ae7],edi
  41cb44:	mov    bl,0x96
  41cb46:	outs   dx,DWORD PTR ds:[esi]
  41cb47:	pushf  
  41cb48:	or     esi,DWORD PTR [ebx+0x682a3c67]
  41cb4e:	or     ebp,0x1213e385
  41cb54:	mov    ds:0xacba0d65,al
  41cb59:	enter  0xd3c3,0x21
  41cb5d:	scas   eax,DWORD PTR es:[edi]
  41cb5e:	or     eax,0x587acc4b
  41cb63:	fmul   st,st(1)
  41cb65:	(bad)  
  41cb66:	popa   
  41cb67:	stc    
  41cb68:	ins    BYTE PTR es:[edi],dx
  41cb69:	(bad)  
  41cb6b:	or     BYTE PTR [ebx],0xfd
  41cb6e:	lea    edi,[ebp-0x1e]
  41cb71:	in     al,0x11
  41cb73:	(bad)  
  41cb74:	adc    dl,BYTE PTR [eax-0x643762eb]
  41cb7a:	dec    edi
  41cb7b:	test   BYTE PTR [ebp+eiz*8-0x740bf6a4],dh
  41cb82:	pop    esp
  41cb83:	sbb    cl,BYTE PTR [edi]
  41cb85:	outs   dx,BYTE PTR ds:[esi]
  41cb86:	sub    DWORD PTR [eax+0x1a715283],eax
  41cb8c:	inc    eax
  41cb8d:	sub    DWORD PTR [edi-0x5e],ecx
  41cb90:	shl    ebx,1
  41cb92:	cli    
  41cb93:	cmp    ecx,DWORD PTR [eax+0x43]
  41cb96:	arpl   WORD PTR [ebx-0x7b],si
  41cb99:	aad    0xae
  41cb9b:	or     eax,0x7e87a0ce
  41cba0:	cmc    
  41cba1:	and    ecx,DWORD PTR [eax+0x2a]
  41cba4:	cmc    
  41cba5:	inc    ecx
  41cba6:	ins    DWORD PTR es:[edi],dx
  41cba7:	rol    BYTE PTR [edx+0x5a],0x40
  41cbab:	add    ebp,DWORD PTR ds:0x87ea94e1
  41cbb1:	mov    bl,0x52
  41cbb3:	add    esi,DWORD PTR [edx+0x425ee03b]
  41cbb9:	or     edx,esi
  41cbbb:	mov    eax,0xa33881a4
  41cbc0:	pop    ebx
  41cbc1:	mov    dl,0x6c
  41cbc3:	push   cs
  41cbc4:	lahf   
  41cbc5:	or     al,0xfe
  41cbc7:	dec    ebp
  41cbc8:	ror    BYTE PTR [edx-0x7d1ea6ba],1
  41cbce:	pop    esp
  41cbcf:	sbb    eax,0xeabf9306
  41cbd4:	nop
  41cbd5:	ds or  eax,0xb8c22a4a
  41cbdb:	lds    eax,FWORD PTR [edx]
  41cbdd:	pop    esi
  41cbde:	stos   DWORD PTR es:[edi],eax
  41cbdf:	retf   0xb445
  41cbe2:	cs pop esp
  41cbe4:	nop
  41cbe5:	mov    al,0x36
  41cbe7:	stc    
  41cbe8:	sub    BYTE PTR [edi],0x95
  41cbeb:	loopne 0x41cbcb
  41cbed:	xor    DWORD PTR [eax+0x20],0x7dfc5be7
  41cbf4:	popf   
  41cbf5:	cmp    dh,BYTE PTR [ebx-0x3a]
  41cbf8:	out    0xee,eax
  41cbfa:	jl     0x41cc73
  41cbfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbfd:	dec    ebp
  41cbfe:	dec    edx
  41cbff:	fucomip st,st(7)
  41cc01:	jno    0x41cbb2
  41cc03:	inc    ebx
  41cc04:	jae    0x41cc5b
  41cc06:	sub    DWORD PTR [ecx+edi*8],esp
  41cc09:	mov    ebx,0xe41b4a1
  41cc0e:	lds    esi,FWORD PTR [ebx]
  41cc10:	pop    esi
  41cc11:	mov    dh,0x13
  41cc13:	xchg   ebp,eax
  41cc14:	std    
  41cc15:	add    dh,BYTE PTR [eax]
  41cc17:	or     al,0x55
  41cc19:	mov    cl,0x6c
  41cc1b:	in     al,0xc
  41cc1d:	dec    ecx
  41cc1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc1f:	or     al,0x86
  41cc21:	push   cs
  41cc22:	das    
  41cc23:	push   ds
  41cc24:	rol    DWORD PTR [esi-0x8598c84],1
  41cc2a:	ret    
  41cc2b:	mov    ds:0xfc012dff,al
  41cc30:	ja     0x41cc88
  41cc32:	ins    DWORD PTR es:[edi],dx
  41cc33:	adc    BYTE PTR [ebp+0x13cb318],al
  41cc39:	mov    esi,0x1248480f
  41cc3e:	cwde   
  41cc3f:	(bad)  
  41cc40:	lds    esp,FWORD PTR [esi-0x7b]
  41cc43:	scas   eax,DWORD PTR es:[edi]
  41cc44:	jno    0x41cc98
  41cc46:	inc    ebp
  41cc47:	jl     0x41cc02
  41cc49:	test   al,0x6d
  41cc4b:	xor    esp,DWORD PTR [ecx+0x78b53cbe]
  41cc51:	lahf   
  41cc52:	add    BYTE PTR [ecx*2-0x354d4fee],ch
  41cc59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc5a:	lea    esp,[ecx+0x16796e83]
  41cc60:	in     eax,dx
  41cc61:	add    edx,DWORD PTR [eax]
  41cc63:	mov    DWORD PTR [edx+esi*2+0x51ed669e],edx
  41cc6a:	xor    eax,0x967530fa
  41cc6f:	repnz stc 
  41cc71:	dec    ebp
  41cc72:	fsubr  DWORD PTR [esi+0x9fa58c8]
  41cc78:	cmp    ebp,ecx
  41cc7a:	pop    es
  41cc7b:	lock inc ebp
  41cc7d:	add    BYTE PTR [edi+0x34c6046f],dl
  41cc83:	aas    
  41cc84:	out    dx,eax
  41cc85:	jo     0x41ccd7
  41cc87:	xor    BYTE PTR [ebp+0x1ab26b69],al
  41cc8d:	lahf   
  41cc8e:	jle    0x41cc62
  41cc90:	cmp    DWORD PTR [eax+ebx*2],esp
  41cc93:	push   DWORD PTR [ebp-0x17]
  41cc96:	retf   
  41cc97:	xchg   edi,eax
  41cc98:	pop    edx
  41cc99:	fmul   st,st(2)
  41cc9b:	mov    edi,0x93196ff4
  41cca0:	stos   DWORD PTR es:[edi],eax
  41cca1:	sbb    dl,BYTE PTR [ebx+0x3b]
  41cca4:	sahf   
  41cca5:	or     eax,0x5abf9b94
  41ccaa:	test   BYTE PTR [ecx-0x7d],cl
  41ccad:	mov    edi,0xd9a2b11a
  41ccb2:	mov    edi,0xbf29a4fd
  41ccb7:	call   0xd02:0xf9b94bc8
  41ccbe:	cmp    DWORD PTR [eax],esi
  41ccc0:	icebp  
  41ccc1:	sbb    DWORD PTR [eax+0x35],ebp
  41ccc4:	mov    bl,0x9c
  41ccc6:	fcom   QWORD PTR [eax-0x12ba8347]
  41cccc:	out    0xa6,al
  41ccce:	std    
  41cccf:	test   DWORD PTR [ebp+0x7eb11bf9],ebp
  41ccd5:	push   esp
  41ccd6:	inc    ch
  41ccd8:	pushf  
  41ccd9:	adc    BYTE PTR [eax-0x71bd7439],ah
  41ccdf:	push   ebx
  41cce0:	ins    BYTE PTR es:[edi],dx
  41cce1:	pop    ecx
  41cce2:	(bad)  
  41cce3:	(bad)  
  41cce5:	imul   esp,esp,0x36f830f2
  41cceb:	push   ss
  41ccec:	int    0x93
  41ccee:	loope  0x41cd30
  41ccf0:	xor    esi,DWORD PTR [ebx]
  41ccf2:	sub    bh,bh
  41ccf4:	xor    edx,DWORD PTR [esi-0x4c]
  41ccf7:	pop    ss
  41ccf8:	jecxz  0x41ccbe
  41ccfa:	pop    ebx
  41ccfb:	sub    BYTE PTR [ebp-0x159baf91],al
  41cd01:	adc    BYTE PTR [ecx+0x713c5852],bh
  41cd07:	or     esp,ebp
  41cd09:	jns    0x41cd53
  41cd0b:	ja     0x41cd41
  41cd0d:	aam    0xb3
  41cd0f:	call   0x7eb26c2c
  41cd14:	ins    DWORD PTR es:[edi],dx
  41cd15:	int3   
  41cd16:	xor    dl,BYTE PTR [edx-0x3f]
  41cd19:	aaa    
  41cd1a:	push   0xffffffb7
  41cd1c:	pop    edi
  41cd1d:	mov    ecx,DWORD PTR [esi+0x62]
  41cd20:	aam    0x4e
  41cd22:	outs   dx,BYTE PTR ds:[esi]
  41cd23:	add    al,0x36
  41cd25:	jge    0x41ccff
  41cd27:	in     al,0xa8
  41cd29:	mov    al,ds:0xe619f72a
  41cd2e:	cld    
  41cd2f:	cli    
  41cd30:	jmp    0x2925f339
  41cd35:	dec    ebx
  41cd36:	cs push 0xffffffdf
  41cd39:	cmp    edi,edi
  41cd3b:	lahf   
  41cd3c:	jl     0x41cd16
  41cd3e:	cmp    ch,ah
  41cd40:	(bad)  
  41cd41:	mov    ebp,0xc0b31071
  41cd46:	and    DWORD PTR [eax],eax
  41cd48:	data16 jmp 0x41cd53
  41cd4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd4c:	sbb    DWORD PTR [eax],ebp
  41cd4e:	sub    DWORD PTR [esp+eax*2-0x2e],edx
  41cd52:	fstp   QWORD PTR [eax]
  41cd54:	xor    DWORD PTR [ebp+0x4c],ecx
  41cd57:	add    dh,BYTE PTR [esi+0xf]
  41cd5a:	sub    DWORD PTR [ecx-0x12a6622f],edx
  41cd60:	dec    ecx
  41cd61:	or     cl,BYTE PTR [edx]
  41cd63:	icebp  
  41cd64:	mov    ?,WORD PTR [esi+0x6cbe8658]
  41cd6a:	scas   eax,DWORD PTR es:[edi]
  41cd6b:	sbb    edx,DWORD PTR ss:[ebx+0xe]
  41cd6f:	fisub  DWORD PTR [ebx]
  41cd71:	or     al,0xe9
  41cd73:	adc    al,0x29
  41cd75:	mov    dh,0xd3
  41cd77:	int    0x67
  41cd79:	inc    esi
  41cd7a:	(bad)  
  41cd7b:	dec    DWORD PTR [edx]
  41cd7d:	mov    esp,0xb3a53f49
  41cd82:	(bad)  
  41cd84:	xor    ebp,edi
  41cd86:	cli    
  41cd87:	jg     0x41cd64
  41cd89:	cld    
  41cd8a:	cwde   
  41cd8b:	mov    esi,0x51d3067e
  41cd90:	nop
  41cd91:	fisubr WORD PTR [ebx+ebx*8+0x4ebdd499]
  41cd98:	call   0x8b1b:0x4813bc91
  41cd9f:	test   eax,0xfbaec077
  41cda4:	sahf   
  41cda5:	inc    esi
  41cda6:	xor    al,0xef
  41cda8:	test   DWORD PTR [edx],esp
  41cdaa:	jge    0x41cd2f
  41cdac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdad:	cmp    bh,BYTE PTR [eax]
  41cdaf:	lock inc ebx
  41cdb1:	mov    edi,0x64d06826
  41cdb6:	fbstp  TBYTE PTR [ebp+0x43]
  41cdb9:	mov    ah,0x22
  41cdbb:	enter  0xe0b,0x91
  41cdbf:	fiadd  WORD PTR [ebp+0x2bedf53]
  41cdc5:	xchg   esi,eax
  41cdc6:	push   es
  41cdc7:	mov    eax,0xf009783b
  41cdcc:	push   0x74
  41cdce:	bound  edi,QWORD PTR ds:0xd65622fd
  41cdd4:	sahf   
  41cdd5:	std    
  41cdd6:	mov    al,ds:0x76b8a6ba
  41cddb:	int3   
  41cddc:	and    BYTE PTR [ebp-0x2cdcfe87],ch
  41cde2:	jb     0x41ce5b
  41cde4:	jmp    0x41cd76
  41cde6:	xchg   ecx,eax
  41cde7:	mov    ss,WORD PTR ds:0xdd6461d2
  41cded:	rcr    DWORD PTR [esi],0xc4
  41cdf0:	cli    
  41cdf1:	push   ebp
  41cdf2:	mov    dh,0xe
  41cdf4:	mov    al,al
  41cdf6:	push   cs
  41cdf7:	outs   dx,DWORD PTR ds:[esi]
  41cdf8:	fimul  DWORD PTR [esi-0x2205dadd]
  41cdfe:	mov    ds:0x315d77d5,eax
  41ce03:	test   BYTE PTR [esi-0x44e75eee],bl
  41ce09:	or     DWORD PTR [ecx],edx
  41ce0b:	pop    ecx
  41ce0c:	and    bx,WORD PTR [ebp+ebx*2-0x26]
  41ce11:	mov    ds:0xa50c3863,al
  41ce16:	add    eax,0x76d5e0c8
  41ce1b:	push   0x1e
  41ce1d:	imul   ebp,DWORD PTR [edi],0x2a6655a2
  41ce23:	add    al,0xf6
  41ce25:	adc    esp,DWORD PTR [esi+edx*4+0xb6a7c59]
  41ce2c:	adc    eax,ebx
  41ce2e:	ret    
  41ce2f:	jmp    ecx
  41ce31:	cmc    
  41ce32:	in     al,dx
  41ce33:	loope  0x41ce31
  41ce35:	inc    ecx
  41ce36:	xchg   dl,ch
  41ce38:	xlat   BYTE PTR ds:[ebx]
  41ce39:	inc    esp
  41ce3a:	ds nop
  41ce3c:	nop
  41ce3d:	pop    ebp
  41ce3e:	xor    bh,BYTE PTR [edx+0x357f4a66]
  41ce44:	adc    al,0xba
  41ce46:	daa    
  41ce47:	test   eax,0xcb37829a
  41ce4c:	int3   
  41ce4d:	mov    gs,esi
  41ce4f:	call   0x96c2e108
  41ce54:	jl     0x41ce95
  41ce56:	dec    edx
  41ce57:	data16 stc 
  41ce59:	jg     0x41ceb3
  41ce5b:	xor    esi,DWORD PTR [edx-0x4b]
  41ce5e:	fcomp  DWORD PTR [edx+ebp*4+0x236541d0]
  41ce65:	in     al,dx
  41ce66:	inc    esp
  41ce67:	fdivr  st(5),st
  41ce69:	mov    cl,0x33
  41ce6b:	mov    DWORD PTR [esi-0x5902b336],esp
  41ce71:	and    esp,DWORD PTR [esi+0x23]
  41ce74:	cwde   
  41ce75:	scas   eax,DWORD PTR es:[edi]
  41ce76:	stc    
  41ce77:	in     al,0x33
  41ce79:	xor    al,0x10
  41ce7b:	mov    dl,bl
  41ce7d:	sub    eax,0x94220f1c
  41ce82:	jo     0x41ce53
  41ce84:	mov    eax,0xe4188857
  41ce89:	retf   
  41ce8a:	(bad)  
  41ce8b:	loop   0x41ced4
  41ce8d:	jl     0x41ce29
  41ce8f:	popf   
  41ce90:	out    dx,al
  41ce91:	or     al,0xa4
  41ce93:	and    dh,al
  41ce95:	shr    DWORD PTR [eax],cl
  41ce97:	add    eax,0x43fad8ff
  41ce9c:	adc    ebx,DWORD PTR [edi]
  41ce9e:	mov    ah,al
  41cea0:	nop
  41cea1:	mov    ecx,0xfb826a16
  41cea6:	pop    eax
  41cea7:	and    esi,eax
  41cea9:	stc    
  41ceaa:	imul   esi,DWORD PTR [edx+0x42405a6f],0xffffff86
  41ceb1:	shl    DWORD PTR [ebx+0x3e],1
  41ceb4:	or     eax,0x53b735fa
  41ceb9:	jnp    0x41ce95
  41cebb:	pop    ebp
  41cebc:	pop    es
  41cebd:	xlat   BYTE PTR ds:[ebx]
  41cebe:	pop    edx
  41cebf:	inc    ecx
  41cec0:	(bad)  
  41cec1:	das    
  41cec2:	rcl    DWORD PTR [edi+ebx*4-0x77],1
  41cec6:	test   al,0xe
  41cec8:	(bad)
  41cecc:	addr16 hlt 
  41cece:	push   ds
  41cecf:	fsub   QWORD PTR [ebx+edi*1]
  41ced2:	adc    ah,BYTE PTR [edi+0x46]
  41ced5:	sub    esi,DWORD PTR [edi+0x26d2a38f]
  41cedb:	add    BYTE PTR [eax+0x3ffda25d],bh
  41cee1:	dec    edi
  41cee2:	inc    edx
  41cee3:	push   ebx
  41cee4:	in     al,0x7b
  41cee6:	fwait
  41cee7:	ds ins BYTE PTR es:[edi],dx
  41cee9:	add    BYTE PTR [ebx],dl
  41ceeb:	mov    bl,0x73
  41ceed:	mov    ds:0xe5aaa0d2,al
  41cef2:	cli    
  41cef3:	adc    eax,0xc9aca4ac
  41cef8:	mov    ebp,0xedd26f17
  41cefd:	sbb    al,0xe8
  41ceff:	push   ecx
  41cf00:	mov    al,ds:0x3e3083d4
  41cf05:	call   0xe5497118
  41cf0a:	outs   dx,DWORD PTR ds:[esi]
  41cf0b:	test   al,0xeb
  41cf0d:	repz pop edi
  41cf0f:	sbb    DWORD PTR ds:0xd4bac23d,ebp
  41cf15:	inc    ebx
  41cf16:	test   ebx,ebx
  41cf18:	dec    esi
  41cf19:	jle    0x93eb4d31
  41cf1f:	pushf  
  41cf20:	mov    ch,bh
  41cf22:	arpl   WORD PTR [esi],sp
  41cf24:	sub    DWORD PTR [eax],ebp
  41cf26:	add    ebp,DWORD PTR [edx+0x22]
  41cf29:	cmp    al,0x79
  41cf2b:	and    edi,DWORD PTR [esi-0x5cdd7fc3]
  41cf31:	sbb    cl,bl
  41cf33:	mov    cs,WORD PTR [eax-0x3d]
  41cf36:	pop    ss
  41cf37:	or     edx,edx
  41cf39:	inc    ecx
  41cf3a:	jp     0x41cf26
  41cf3c:	test   al,0x62
  41cf3e:	(bad)  [edi-0x64158722]
  41cf44:	(bad)  
  41cf45:	and    ebx,ebp
  41cf47:	loope  0x41cf64
  41cf49:	push   0x7334e614
  41cf4e:	arpl   WORD PTR [ebp+0x2c],di
  41cf51:	shr    DWORD PTR [ebx+ebx*4],1
  41cf54:	ins    DWORD PTR es:[edi],dx
  41cf55:	icebp  
  41cf56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf57:	cs pushf 
  41cf59:	mov    BYTE PTR [edx],dl
  41cf5b:	xchg   ebx,eax
  41cf5c:	add    eax,0xbf1a808d
  41cf61:	test   dl,bl
  41cf63:	shr    BYTE PTR [esi],1
  41cf65:	lds    edx,FWORD PTR [ebp+0x7ac44ea9]
  41cf6b:	jnp    0x41cf65
  41cf6d:	sbb    edx,edx
  41cf6f:	adc    DWORD PTR [edi+0x7c],ecx
  41cf72:	xchg   esi,eax
  41cf73:	xor    DWORD PTR [ecx+eax*1],ecx
  41cf76:	or     ah,bl
  41cf78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf79:	sub    cl,BYTE PTR [edx+0x74945e0b]
  41cf7f:	mov    eax,ds:0x80cb28ed
  41cf84:	jecxz  0x41cf9f
  41cf86:	adc    edi,DWORD PTR [ebx-0xe1441f6]
  41cf8c:	lock cwde 
  41cf8e:	(bad)  
  41cf8f:	ficomp WORD PTR [edi-0x44]
  41cf92:	ins    DWORD PTR es:[edi],dx
  41cf93:	hlt    
  41cf94:	je     0x41cfe0
  41cf96:	outs   dx,DWORD PTR ds:[esi]
  41cf97:	mov    ch,0x62
  41cf99:	and    BYTE PTR [eax-0x42d1a065],al
  41cf9f:	lods   al,BYTE PTR ds:[esi]
  41cfa0:	aaa    
  41cfa1:	stos   BYTE PTR es:[edi],al
  41cfa2:	mov    ds:0x9650717,eax
  41cfa8:	leave  
  41cfa9:	lds    ecx,FWORD PTR [eax+0x257b8e2f]
  41cfaf:	jg     0x41d010
  41cfb1:	call   0xf8e9:0x93ad7e28
  41cfb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfb9:	data16 sar BYTE PTR [edx],cl
  41cfbc:	sbb    eax,0x1e4f7c8
  41cfc1:	mov    esi,0x8f950641
  41cfc6:	aam    0xd5
  41cfc8:	sub    edx,DWORD PTR [eax+ebp*2+0x1b]
  41cfcc:	ins    BYTE PTR es:[edi],dx
  41cfcd:	dec    edx
  41cfce:	pop    ebx
  41cfcf:	fnstcw WORD PTR [edx+0x43dc603e]
  41cfd5:	pop    ebx
  41cfd6:	cmp    al,0x14
  41cfd8:	cld    
  41cfd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfda:	cld    
  41cfdb:	cmp    cl,BYTE PTR [ecx+eax*2-0x4e586f12]
  41cfe2:	pushf  
  41cfe3:	xchg   ebp,eax
  41cfe4:	xchg   ebx,eax
  41cfe5:	fcom   QWORD PTR [ecx-0x5ffaae9c]
  41cfeb:	and    eax,0x67b4e42
  41cff0:	adc    ebp,DWORD PTR [ecx+esi*4]
  41cff3:	imul   eax,eax,0x7c
  41cff6:	gs dec ebx
  41cff8:	sbb    esp,DWORD PTR [edx]
  41cffa:	lahf   
  41cffb:	aam    0x76
  41cffd:	hlt    
  41cffe:	outs   dx,DWORD PTR ds:[esi]
  41cfff:	mov    edi,0xfb663db6
  41d004:	data16 mov bl,0x57
  41d007:	xor    DWORD PTR [edi+ebx*2+0x7febf75b],0xb9bc93ff
  41d012:	test   BYTE PTR [edi],bh
  41d014:	sub    eax,DWORD PTR [ecx+0x4f]
  41d017:	(bad)  
  41d018:	int    0xe7
  41d01a:	adc    al,0xe3
  41d01c:	ficomp WORD PTR gs:[edi-0x706e2f4b]
  41d023:	sbb    BYTE PTR [ebx+0x5c],dh
  41d026:	mov    ds:0xb6e6c977,eax
  41d02b:	xor    BYTE PTR [eax-0x7b7f471d],bl
  41d031:	mov    edi,0x58df6130
  41d036:	dec    esp
  41d037:	aaa    
  41d038:	in     al,0x5f
  41d03a:	xor    BYTE PTR [ebx+0x6c],dh
  41d03d:	jmp    0x41d058
  41d03f:	cld    
  41d040:	(bad)  
  41d041:	shl    BYTE PTR [ecx+ebp*4-0x80],cl
  41d045:	iret   
  41d046:	outs   dx,BYTE PTR ds:[esi]
  41d047:	dec    ebx
  41d048:	retf   
  41d049:	lahf   
  41d04a:	mov    eax,0x37f5d10c
  41d04f:	or     al,0xd0
  41d051:	sbb    al,0xba
  41d053:	jp     0x41d001
  41d055:	xchg   ebp,eax
  41d056:	pop    es
  41d057:	stc    
  41d058:	cmp    ch,BYTE PTR [edi+0x4b]
  41d05b:	in     eax,dx
  41d05c:	xchg   edx,eax
  41d05d:	repnz cmp ch,BYTE PTR [esi-0x3ac6ee77]
  41d064:	ret    0x5cd9
  41d067:	dec    esp
  41d068:	dec    ecx
  41d069:	pop    es
  41d06a:	sbb    bl,BYTE PTR [ebx+0x5]
  41d06d:	cmp    edi,esp
  41d06f:	mov    dl,0xf3
  41d071:	popf   
  41d072:	rcr    DWORD PTR [eax-0x48846305],cl
  41d078:	sub    cl,dh
  41d07a:	jg     0x41d09d
  41d07c:	xchg   edx,eax
  41d07d:	jae    0x41d0a4
  41d07f:	loop   0x41d056
  41d081:	rol    BYTE PTR [ebx],1
  41d083:	js     0x41d018
  41d085:	mov    bh,0x5e
  41d087:	jnp    0x41d0b8
  41d089:	push   0xffffffed
  41d08b:	loop   0x41d045
  41d08d:	daa    
  41d08e:	clc    
  41d08f:	arpl   sp,bx
  41d091:	(bad)  [edi-0x223ba5ac]
  41d097:	mov    edx,0xd99c126b
  41d09c:	jnp    0x41d080
  41d09e:	imul   edi,DWORD PTR [eax],0xffffffb8
  41d0a1:	dec    edi
  41d0a2:	fstp   TBYTE PTR [eax-0x1b88b89c]
  41d0a8:	jae    0x41d0c9
  41d0aa:	adc    eax,0xf2707014
  41d0af:	test   BYTE PTR [esi],ch
  41d0b1:	push   ecx
  41d0b2:	mov    ds:0x9b75ae6f,al
  41d0b7:	lods   eax,DWORD PTR ds:[esi]
  41d0b8:	and    eax,0xffa6c74
  41d0bd:	mov    eax,ds:0x28bd17ca
  41d0c2:	dec    edi
  41d0c3:	mov    ah,0x97
  41d0c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0c6:	xor    eax,0xb16c1316
  41d0cb:	pop    esp
  41d0cc:	in     al,0x42
  41d0ce:	popf   
  41d0cf:	rep stos DWORD PTR es:[edi],eax
  41d0d1:	aaa    
  41d0d2:	xchg   ebp,eax
  41d0d3:	push   ecx
  41d0d4:	into   
  41d0d5:	ins    BYTE PTR es:[edi],dx
  41d0d6:	push   ecx
  41d0d7:	sbb    esi,DWORD PTR [ebx]
  41d0d9:	jns    0x41d074
  41d0db:	add    DWORD PTR [ebx+0x72791a3c],edi
  41d0e1:	iret   
  41d0e2:	test   al,0xd6
  41d0e4:	std    
  41d0e5:	out    0xbc,al
  41d0e7:	pop    ss
  41d0e8:	pop    bp
  41d0ea:	sub    eax,0x9f844984
  41d0ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0f0:	and    BYTE PTR [esi+ebp*1-0x3363247a],ch
  41d0f7:	sbb    ebp,DWORD PTR [eax]
  41d0f9:	iret   
  41d0fa:	inc    esi
  41d0fb:	out    0xd2,eax
  41d0fd:	sub    bl,cl
  41d0ff:	stos   DWORD PTR es:[edi],eax
  41d100:	in     eax,dx
  41d101:	push   ds
  41d102:	add    BYTE PTR [edx],al
  41d104:	dec    ecx
  41d105:	imul   BYTE PTR [edx]
  41d107:	std    
  41d108:	add    BYTE PTR [esi+0x5f49de4d],cl
  41d10e:	pushf  
  41d10f:	cmp    al,BYTE PTR [esi-0xc]
  41d112:	ss es stos DWORD PTR es:[edi],eax
  41d115:	ja     0x41d0a3
  41d117:	loop   0x41d0eb
  41d119:	popf   
  41d11a:	push   esp
  41d11b:	outs   dx,BYTE PTR ds:[esi]
  41d11c:	loope  0x41d0de
  41d11e:	xlat   BYTE PTR ds:[ebx]
  41d11f:	cwde   
  41d120:	cmp    ecx,esp
  41d122:	sub    esi,esi
  41d124:	daa    
  41d125:	mov    ebp,0x1f97de12
  41d12a:	mov    cl,0xf7
  41d12c:	sub    edx,DWORD PTR [edx-0x7d]
  41d12f:	sub    esp,DWORD PTR [ebp+esi*8-0x6f8f4567]
  41d136:	repz fs fucomip st,st(2)
  41d13a:	aam    0x4d
  41d13c:	inc    eax
  41d13d:	pop    ebx
  41d13e:	sar    BYTE PTR [edx+0x30e2c9b2],1
  41d144:	push   edi
  41d145:	sbb    ebx,DWORD PTR [ecx]
  41d147:	mov    al,ds:0xfd9df966
  41d14c:	jne    0x41d1c1
  41d14e:	push   cs
  41d14f:	(bad)  [edi]
  41d151:	fwait
  41d152:	or     dh,BYTE PTR [esi-0xa]
  41d155:	adc    DWORD PTR [ebp-0x10],esp
  41d158:	loope  0x41d192
  41d15a:	dec    esi
  41d15b:	push   ebp
  41d15c:	mov    ds:0xd2dd54be,al
  41d161:	jge    0x41d144
  41d163:	sti    
  41d164:	jne    0x41d1bc
  41d166:	bound  edi,QWORD PTR [ebx]
  41d168:	test   eax,0xf5bfadb3
  41d16d:	mov    edx,0xebae7e9d
  41d172:	dec    edi
  41d173:	pop    ds
  41d174:	push   ss
  41d175:	inc    esi
  41d176:	xchg   esp,eax
  41d177:	xor    eax,DWORD PTR [ebx]
  41d179:	daa    
  41d17a:	dec    dl
  41d17c:	in     eax,0xd0
  41d17e:	aas    
  41d17f:	(bad)  
  41d182:	test   al,al
  41d184:	scas   al,BYTE PTR es:[edi]
  41d185:	cmp    eax,0x2d9df6fe
  41d18a:	jb     0x41d16f
  41d18c:	mov    ds:0xe001610d,al
  41d191:	sub    ch,cl
  41d193:	(bad)  
  41d195:	aad    0x6d
  41d197:	rol    DWORD PTR [eax],0xde
  41d19a:	sti    
  41d19b:	jle    0x41d1cf
  41d19d:	push   ebx
  41d19e:	add    BYTE PTR [edi+0x7a],ah
  41d1a1:	sbb    BYTE PTR [ebx],ah
  41d1a3:	(bad)  
  41d1a4:	nop
  41d1a5:	xlat   BYTE PTR ds:[ebx]
  41d1a6:	(bad)  
  41d1a7:	sbb    eax,0x5d6f482
  41d1ac:	cmp    ah,al
  41d1ae:	pop    ds
  41d1af:	fs scas eax,DWORD PTR es:[edi]
  41d1b1:	js     0x41d14e
  41d1b3:	jl     0x41d177
  41d1b5:	pushf  
  41d1b6:	push   0xe8ce408d
  41d1bb:	adc    al,BYTE PTR [ecx-0x48]
  41d1be:	inc    ebx
  41d1bf:	inc    esp
  41d1c0:	fbstp  TBYTE PTR [edx]
  41d1c2:	or     dl,bl
  41d1c4:	xlat   BYTE PTR ds:[ebx]
  41d1c5:	(bad)  
  41d1c6:	pop    ebp
  41d1c7:	ja     0x41d239
  41d1c9:	add    bh,BYTE PTR [ebp-0x78]
  41d1cc:	ret    0x8ea0
  41d1cf:	hlt    
  41d1d0:	and    eax,0x80bf0c7e
  41d1d5:	push   ebx
  41d1d6:	out    0xf2,al
  41d1d8:	mov    ebp,esi
  41d1da:	or     edx,DWORD PTR ds:0xaf98a134
  41d1e0:	jg     0x41d256
  41d1e2:	mov    ah,0xe1
  41d1e4:	nop
  41d1e5:	jl     0x41d24e
  41d1e7:	not    BYTE PTR [esi+0x34]
  41d1ea:	mov    ecx,0x1a13940a
  41d1ef:	xor    DWORD PTR [eax-0x17501ff2],esp
  41d1f5:	fmulp  st(6),st
  41d1f7:	push   ds
  41d1f8:	addr16 adc al,0xbf
  41d1fb:	loopne 0x41d237
  41d1fd:	aas    
  41d1fe:	mov    al,0xbc
  41d200:	call   0xfd519f3f
  41d205:	xchg   ebp,eax
  41d206:	bound  ecx,QWORD PTR [ebx]
  41d208:	aaa    
  41d209:	js     0x41d197
  41d20b:	push   ds
  41d20c:	or     cl,bh
  41d20e:	push   gs
  41d210:	lahf   
  41d211:	and    edi,edi
  41d213:	ss aas 
  41d215:	sar    DWORD PTR [eax+0x5d01e716],0x14
  41d21c:	adc    ebp,ebx
  41d21e:	ds fucomip st,st(4)
  41d221:	jmp    0x41d1e6
  41d223:	ret    0xaee0
  41d226:	sub    BYTE PTR [ebp-0x1b],0x4f
  41d22a:	dec    ecx
  41d22b:	sbb    DWORD PTR [ebx],ebx
  41d22d:	xchg   DWORD PTR [edx+ebx*1+0x57],ecx
  41d231:	repz ret 
  41d233:	jle    0x41d2a6
  41d235:	and    al,0xe2
  41d237:	adc    BYTE PTR [esi],dh
  41d239:	sbb    BYTE PTR [eax+0x66623983],ah
  41d23f:	cmp    al,0x7b
  41d241:	jbe    0x41d28f
  41d243:	add    DWORD PTR [esi+0x6b],0x513cb020
  41d24a:	(bad)  
  41d24b:	mov    ebp,0x938b035d
  41d250:	nop
  41d251:	fiadd  WORD PTR [eax]
  41d253:	rcl    ecx,cl
  41d255:	fwait
  41d256:	lea    ecx,[ebx+0x40c7b8e1]
  41d25c:	sub    BYTE PTR [eax],bh
  41d25e:	call   0xd9fb:0xdbbfcff0
  41d265:	cmp    BYTE PTR [ecx],dl
  41d267:	(bad)
  41d26a:	int3   
  41d26b:	ins    BYTE PTR es:[edi],dx
  41d26c:	ror    DWORD PTR [ebx],1
  41d26e:	sbb    BYTE PTR [ebx+esi*4+0xb],al
  41d272:	inc    esp
  41d273:	push   0xe4894223
  41d278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d279:	mov    ah,dh
  41d27b:	xor    DWORD PTR [ecx-0x3b],edi
  41d27e:	inc    edi
  41d27f:	cmp    DWORD PTR [ebp+0x7b],eax
  41d282:	imul   BYTE PTR [ebp-0x25]
  41d285:	in     eax,dx
  41d286:	aam    0xcf
  41d288:	cmp    BYTE PTR [ebp+0x210ad39c],ah
  41d28e:	push   ss
  41d28f:	inc    eax
  41d290:	int3   
  41d291:	ins    BYTE PTR es:[edi],dx
  41d292:	fiadd  WORD PTR [ecx+0x73e8f301]
  41d298:	ss pop ecx
  41d29a:	pop    ss
  41d29b:	aad    0x86
  41d29d:	or     al,BYTE PTR [esp+ecx*4+0x2c9b5a49]
  41d2a4:	aad    0xc8
  41d2a6:	jno    0x41d2ee
  41d2a8:	mov    DWORD PTR [edx+edi*8-0x58edd4a9],esp
  41d2af:	popaw  
  41d2b1:	mov    DWORD PTR [eax],0x9d6158e8
  41d2b7:	je     0x41d2e2
  41d2b9:	rol    DWORD PTR [edx],1
  41d2bb:	mov    ebp,0xc23e4c02
  41d2c0:	or     eax,0x9e3724af
  41d2c5:	aam    0xc9
  41d2c7:	je     0x41d30e
  41d2c9:	lods   eax,DWORD PTR ds:[esi]
  41d2ca:	stc    
  41d2cb:	push   esi
  41d2cc:	add    eax,0x932f3d67
  41d2d2:	in     eax,0x51
  41d2d4:	and    ch,BYTE PTR fs:[ebx+0x3c]
  41d2d8:	inc    eax
  41d2d9:	in     eax,dx
  41d2da:	mov    WORD PTR [edi-0x65e3f001],gs
  41d2e0:	mov    fs,WORD PTR [edx+0x72]
  41d2e3:	popa   
  41d2e4:	aas    
  41d2e5:	cmp    eax,0xf638ddc3
  41d2ea:	mov    cs,WORD PTR [ecx]
  41d2ec:	lods   eax,DWORD PTR ds:[esi]
  41d2ed:	mov    ebp,0x29faefa8
  41d2f2:	sub    DWORD PTR [esi-0x70],ebx
  41d2f5:	outs   dx,BYTE PTR ds:[esi]
  41d2f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2f7:	ret    0x7c70
  41d2fa:	in     al,0xbc
  41d2fc:	sbb    dl,0x8f
  41d2ff:	inc    esi
  41d300:	sbb    ebp,DWORD PTR [ebx]
  41d302:	dec    ebx
  41d303:	cmp    DWORD PTR [eax+0xe70281a],0x53
  41d30a:	paddsb mm0,QWORD PTR [eax+0x46e1bf07]
  41d311:	pusha  
  41d312:	mov    esi,0x7eaa4cb5
  41d317:	dec    ebx
  41d318:	loop   0x41d2df
  41d31a:	mov    edi,0x1474a6b1
  41d31f:	cmp    al,0x98
  41d321:	out    0x8a,eax
  41d323:	fisttp DWORD PTR [esi]
  41d325:	xchg   ebx,eax
  41d326:	cmc    
  41d327:	mov    edi,0xc6fd5f5
  41d32c:	loopne 0x41d2b0
  41d32e:	inc    edx
  41d32f:	inc    eax
  41d330:	or     esp,ebp
  41d332:	fdivp  st(1),st
  41d334:	xchg   ebp,eax
  41d335:	aad    0x2d
  41d337:	out    0xa2,eax
  41d339:	xchg   ebx,eax
  41d33a:	stos   DWORD PTR es:[edi],eax
  41d33b:	rol    DWORD PTR [esi+0xf18a9b1],cl
  41d341:	sub    edx,DWORD PTR [edx]
  41d343:	daa    
  41d344:	or     al,0x7f
  41d346:	dec    eax
  41d347:	or     al,0x88
  41d349:	inc    esp
  41d34a:	jns    0x41d373
  41d34c:	xor    ebp,eax
  41d34e:	jo     0x41d353
  41d350:	aaa    
  41d351:	and    DWORD PTR [edi],0xf4aaf58b
  41d357:	icebp  
  41d358:	lahf   
  41d359:	pop    edx
  41d35a:	in     al,0x96
  41d35c:	lock call edx
  41d35f:	mov    ds:0x6989b44b,eax
  41d364:	cmp    eax,0x630c51c6
  41d369:	stc    
  41d36a:	lock pop esp
  41d36c:	or     al,0xa1
  41d36e:	dec    esi
  41d36f:	iret   
  41d370:	in     eax,0xba
  41d372:	inc    bl
  41d374:	xor    edi,ebp
  41d376:	add    esp,eax
  41d378:	jmp    0x83ed:0xdb99d703
  41d37f:	inc    edx
  41d380:	(bad)  
  41d381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d382:	fs add eax,0xd95f1c0b
  41d388:	cmp    esp,esp
  41d38a:	dec    edi
  41d38b:	inc    ebp
  41d38c:	sub    al,0x31
  41d38e:	scas   eax,DWORD PTR es:[edi]
  41d38f:	cmp    esp,edx
  41d391:	mov    ecx,0x76236fa
  41d396:	int3   
  41d397:	or     DWORD PTR [edi-0x6601735a],eax
  41d39d:	mov    eax,0xaf9ebda8
  41d3a2:	mov    ecx,0xf7dbd3e
  41d3a7:	push   esp
  41d3a8:	pop    edx
  41d3a9:	loope  0x41d403
  41d3ab:	jl     0x41d391
  41d3ad:	lods   eax,DWORD PTR ds:[esi]
  41d3ae:	jl     0x41d401
  41d3b0:	(bad)
  41d3b3:	jmp    0x8c56920f
  41d3b8:	sub    BYTE PTR ds:0x89c3ca07,dh
  41d3be:	cli    
  41d3bf:	stc    
  41d3c0:	fwait
  41d3c1:	sub    eax,0xf92b625c
  41d3c6:	test   DWORD PTR [ebx],0x34d0e78e
  41d3cc:	push   ebx
  41d3cd:	push   ebx
  41d3ce:	sbb    DWORD PTR [esi-0x3f],esi
  41d3d1:	sbb    al,0x3e
  41d3d3:	data16 mov WORD PTR [ebx+0x56],cs
  41d3d7:	mov    WORD PTR [edx-0x79e5dfe2],ds
  41d3dd:	sub    esi,DWORD PTR [edi+0x26]
  41d3e0:	stos   BYTE PTR es:[edi],al
  41d3e1:	push   edi
  41d3e2:	imul   DWORD PTR [edx-0x45]
  41d3e5:	int3   
  41d3e6:	mov    cl,0x78
  41d3e8:	mov    ebx,0xb6ccf314
  41d3ed:	repz mov dh,BYTE PTR [eax-0x78]
  41d3f1:	(bad)  
  41d3f2:	mov    edx,0x4690f80a
  41d3f7:	or     eax,0x5acb5b19
  41d3fc:	and    ch,BYTE PTR [ebp+0x7e5be8b6]
  41d402:	xor    ch,bh
  41d404:	jno    0x41d420
  41d406:	push   ebp
  41d407:	sbb    BYTE PTR [ecx+0x6dce2e6a],al
  41d40d:	ss inc esp
  41d40f:	sbb    ch,BYTE PTR [edi]
  41d411:	mov    ebx,0x46fa51d3
  41d416:	stos   DWORD PTR es:[edi],eax
  41d417:	and    al,0x9f
  41d419:	mov    DWORD PTR [edx-0x7f6d42e8],eax
  41d41f:	xchg   eax,esi
  41d421:	rol    BYTE PTR [esi+0x78e34f75],0x9e
  41d428:	shr    esi,0xcf
  41d42b:	cld    
  41d42c:	xchg   edx,eax
  41d42d:	xor    bh,BYTE PTR [ebx]
  41d42f:	mov    BYTE PTR [edi+0x63],dh
  41d432:	or     eax,0x8526b6e4
  41d437:	in     eax,dx
  41d438:	fcmovb st,st(5)
  41d43a:	sbb    ch,BYTE PTR [esi]
  41d43c:	mov    esp,DWORD PTR [ebx]
  41d43e:	js     0x41d3e8
  41d440:	push   0xb51d5c15
  41d445:	icebp  
  41d446:	adc    BYTE PTR [eax],bh
  41d448:	ret    0x63c9
  41d44b:	sbb    ch,BYTE PTR [ebp+0x75]
  41d44e:	jnp    0x41d407
  41d450:	ficom  DWORD PTR ds:0x97d5807e
  41d456:	dec    ecx
  41d457:	test   BYTE PTR [esi-0x45],al
  41d45a:	jbe    0x41d443
  41d45c:	adc    eax,0xd69fcdf0
  41d461:	in     eax,0x66
  41d463:	fist   WORD PTR [esi+edx*4+0x373f71d8]
  41d46a:	popa   
  41d46b:	loopne 0x41d4bf
  41d46d:	push   edi
  41d46e:	dec    ebx
  41d46f:	imul   ebp,DWORD PTR [ebx+esi*8-0x61bbd084],0xffffff9c
  41d477:	mov    dh,0xc9
  41d479:	frstor [esi+0x6c753a73]
  41d47f:	pop    es
  41d480:	int    0x32
  41d482:	mov    DWORD PTR [ebp-0x6e],edi
  41d485:	mov    ecx,0x155b147b
  41d48a:	cwde   
  41d48b:	dec    ebp
  41d48c:	loope  0x41d508
  41d48e:	mov    bl,0x32
  41d490:	in     eax,dx
  41d491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d492:	mov    esp,0x2c5b6bd7
  41d497:	fwait
  41d498:	xor    eax,0xa05d2827
  41d49d:	aad    0x61
  41d49f:	xor    cl,bl
  41d4a1:	add    ebx,0xb7d0cd6e
  41d4a7:	mov    eax,ds:0x867b1140
  41d4ac:	pop    eax
  41d4ad:	pop    esi
  41d4ae:	pusha  
  41d4af:	pop    esp
  41d4b0:	lods   eax,DWORD PTR ds:[esi]
  41d4b1:	sub    al,0xb9
  41d4b3:	jl     0x41d495
  41d4b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4b6:	mov    eax,0x6dfd58b9
  41d4bb:	mov    edi,0xe37ba678
  41d4c0:	shl    BYTE PTR [edi+0x10],cl
  41d4c3:	xor    al,0x69
  41d4c5:	jb     0x41d456
  41d4c7:	enter  0xedbb,0x54
  41d4cb:	sub    edx,DWORD PTR [ebx+0x14]
  41d4ce:	mov    esp,0xd4823743
  41d4d3:	mov    bh,0xee
  41d4d5:	sub    DWORD PTR [edx+0x20b0d5de],esi
  41d4db:	lahf   
  41d4dc:	push   es
  41d4dd:	add    esi,DWORD PTR ds:0x32b18f0d
  41d4e3:	clc    
  41d4e4:	mov    eax,ds:0x52578a07
  41d4e9:	outs   dx,DWORD PTR ds:[esi]
  41d4ea:	xchg   DWORD PTR cs:[eax+eiz*2-0x745902eb],ebx
  41d4f2:	jne    0x41d4cc
  41d4f4:	pop    es
  41d4f5:	(bad)  
  41d4f6:	jb     0x41d541
  41d4f8:	leave  
  41d4f9:	ins    DWORD PTR es:[edi],dx
  41d4fa:	push   0x82fb8879
  41d4ff:	mov    ah,dh
  41d501:	lahf   
  41d502:	mov    ebx,0x911f5704
  41d507:	mov    bh,BYTE PTR [eax+0x55]
  41d50a:	test   al,ah
  41d50c:	in     eax,0xa5
  41d50e:	mov    edi,0x7933d5a6
  41d513:	je     0x41d564
  41d515:	mov    esi,0x3849a27e
  41d51a:	(bad)  
  41d51b:	mov    al,ds:0xb67e526f
  41d520:	imul   ebp,DWORD PTR [eax+0x9],0xffffffb5
  41d524:	mov    ebp,0x33e7041d
  41d529:	cmc    
  41d52a:	mov    ah,0xf8
  41d52c:	in     al,dx
  41d52d:	mov    esp,0x90fbf9cb
  41d532:	sbb    bl,cl
  41d534:	je     0x41d506
  41d536:	sahf   
  41d537:	test   al,0x2c
  41d539:	jmp    0x3c12:0x97ab0ff7
  41d540:	inc    ebx
  41d541:	rol    esi,1
  41d543:	mov    bh,0x23
  41d545:	xor    al,0xf4
  41d547:	adc    al,0xdd
  41d549:	cmp    BYTE PTR [edx+0x3fc95505],bl
  41d54f:	and    BYTE PTR [ebx-0xbbe949a],bh
  41d555:	fucomp st(1)
  41d557:	out    0xd8,eax
  41d559:	retf   0x6880
  41d55c:	mov    ch,BYTE PTR [esi]
  41d55e:	stos   DWORD PTR es:[edi],eax
  41d55f:	lea    edx,es:0x47d822ce
  41d566:	pop    esp
  41d567:	jo     0x41d522
  41d569:	mov    ch,BYTE PTR [edi+0x67]
  41d56c:	sbb    ebx,esp
  41d56e:	xchg   edx,eax
  41d56f:	mov    edi,DWORD PTR [ecx+0x3451463d]
  41d575:	jae    0x41d532
  41d577:	lock (bad) 
  41d579:	jge    0x41d5ab
  41d57b:	call   0xd465:0x93da8df7
  41d582:	sub    BYTE PTR [ebx-0x5d],0x59
  41d586:	add    DWORD PTR [ebx+0x28115d5e],ebp
  41d58c:	call   0xa5b3:0x68cf50c5
  41d593:	shl    edx,0x1f
  41d596:	loope  0x41d5c2
  41d598:	repnz push esp
  41d59a:	fcom   DWORD PTR [ebx-0xd]
  41d59d:	add    DWORD PTR [ebx-0x2d],0xa15d0755
  41d5a4:	mov    BYTE PTR [edx],bh
  41d5a6:	mov    ?,WORD PTR [esi-0x7b]
  41d5a9:	push   eax
  41d5aa:	les    esi,FWORD PTR [edx-0x67]
  41d5ad:	jbe    0x41d55f
  41d5af:	scas   al,BYTE PTR es:[edi]
  41d5b0:	mov    ah,0xf7
  41d5b2:	inc    esi
  41d5b3:	aaa    
  41d5b4:	es jne 0x41d577
  41d5b7:	inc    ecx
  41d5b8:	pusha  
  41d5b9:	cmp    BYTE PTR [edx+0x54],bh
  41d5bc:	outs   dx,DWORD PTR ds:[esi]
  41d5bd:	bound  ebp,QWORD PTR [ebp-0x2125cd3f]
  41d5c3:	push   ds
  41d5c4:	sub    BYTE PTR [ebx+0x10],0x97
  41d5c8:	fnstcw WORD PTR [edi-0x4c0a6ee1]
  41d5ce:	dec    edi
  41d5cf:	fist   WORD PTR [ecx]
  41d5d2:	or     esi,DWORD PTR [eax+edx*1]
  41d5d5:	imul   ecx,DWORD PTR [eax-0x28e5b2c7],0xfffffffe
  41d5dc:	pop    edx
  41d5dd:	xor    esp,esp
  41d5df:	mov    bl,0xee
  41d5e1:	push   eax
  41d5e2:	mov    ebx,0xf38893d0
  41d5e7:	xor    ebx,0xffffffb0
  41d5ea:	clc    
  41d5eb:	sub    eax,0x34645cc
  41d5f0:	cli    
  41d5f1:	not    edx
  41d5f3:	test   al,0xb6
  41d5f5:	mov    ds:0xe929ca45,al
  41d5fa:	dec    edx
  41d5fb:	pmulhuw mm2,mm1
  41d5fe:	dec    ecx
  41d5ff:	inc    ebp
  41d600:	in     al,0xa6
  41d602:	leave  
  41d603:	cs pop es
  41d605:	sub    eax,0x2bb22d8c
  41d60a:	jge    0x41d59c
  41d60c:	cmp    eax,0xedd791f3
  41d611:	jne    0x41d673
  41d613:	shr    edx,1
  41d615:	jl     0x41d65b
  41d617:	mov    ecx,eax
  41d619:	das    
  41d61a:	or     DWORD PTR [edx],ebx
  41d61c:	push   ebx
  41d61d:	pop    ecx
  41d61e:	xchg   esi,eax
  41d61f:	xlat   BYTE PTR ds:[bx]
  41d621:	jl     0x41d60c
  41d623:	pop    ebx
  41d624:	mov    al,0xe0
  41d626:	mov    ah,0x4e
  41d628:	(bad)  
  41d629:	jbe    0x41d614
  41d62b:	cmp    dh,BYTE PTR [edi]
  41d62d:	mul    BYTE PTR ds:0x5e309315
  41d633:	cs sbb eax,0xe3500f9f
  41d639:	lock (bad) 
  41d63b:	je     0x41d662
  41d63d:	mov    al,0xdb
  41d63f:	inc    edx
  41d640:	dec    ebp
  41d641:	das    
  41d642:	inc    esi
  41d643:	jl     0x41d61d
  41d645:	sti    
  41d646:	push   ebp
  41d647:	mov    esi,0xfa5df09
  41d64c:	movntq QWORD PTR [eax+ecx*4-0x24],mm1
  41d651:	and    ebx,DWORD PTR [eax-0x54842825]
  41d657:	sahf   
  41d658:	mov    DWORD PTR [ebp+0x4],esp
  41d65b:	(bad)  
  41d65c:	push   ds
  41d65d:	test   eax,0x34c8253c
  41d662:	xchg   ecx,eax
  41d663:	mov    ah,0x65
  41d665:	push   eax
  41d666:	ret    0xcf6c
  41d669:	call   DWORD PTR [ecx-0x13708fd]
  41d66f:	shl    esp,1
  41d671:	sbb    eax,0xb58c2f74
  41d676:	mov    dl,0x24
  41d678:	sbb    edx,edi
  41d67a:	push   ss
  41d67b:	nop
  41d67c:	imul   edx,DWORD PTR [eax+0xe049fda],0xed3b9172
  41d686:	jmp    0xf967e206
  41d68b:	pop    ds
  41d68c:	(bad)  
  41d68d:	icebp  
  41d68e:	inc    ebp
  41d68f:	push   ds
  41d690:	fsub   st,st(1)
  41d692:	dec    esp
  41d693:	pextrw esi,(bad),0xc5
  41d695:	xor    esi,DWORD PTR [ecx]
  41d697:	mov    cl,0xf
  41d699:	out    dx,al
  41d69a:	js     0x41d689
  41d69c:	xchg   DWORD PTR [esi+0x5f],ebx
  41d69f:	lds    esp,FWORD PTR ds:0xf839f1e4
  41d6a5:	imul   BYTE PTR [ecx+0x3d]
  41d6a8:	push   ds
  41d6a9:	clc    
  41d6aa:	ss stc 
  41d6ac:	or     DWORD PTR [ebx+0x6a],0xbb480347
  41d6b3:	xchg   BYTE PTR [edx],al
  41d6b5:	in     al,0x13
  41d6b7:	bound  eax,QWORD PTR [edi+0x3b]
  41d6ba:	mov    dl,0x1e
  41d6bc:	sahf   
  41d6bd:	push   esp
  41d6be:	sub    BYTE PTR ds:0xc5ebe19,bl
  41d6c4:	mov    dl,0x9
  41d6c6:	ret    
  41d6c7:	into   
  41d6c8:	xchg   ebx,eax
  41d6c9:	(bad)  [esi-0x2c843aad]
  41d6cf:	and    eax,0xcb4e519e
  41d6d4:	push   0x43
  41d6d6:	loop   0x41d6b2
  41d6d8:	jo     0x41d711
  41d6da:	(bad)  
  41d6db:	and    DWORD PTR [ecx+ebx*1-0x5b4c8bd8],esi
  41d6e2:	pusha  
  41d6e3:	stc    
  41d6e4:	fsub   DWORD PTR [eax+edi*8+0x4376f0c0]
  41d6eb:	or     bl,dh
  41d6ed:	push   ecx
  41d6ee:	add    dl,BYTE PTR [esi-0x34]
  41d6f1:	in     al,dx
  41d6f2:	pop    ss
  41d6f3:	test   al,0x3
  41d6f5:	push   esp
  41d6f6:	lds    edi,FWORD PTR [eax-0x1bf5b6b9]
  41d6fc:	jo     0x41d6f8
  41d6fe:	iret   
  41d6ff:	push   ebx
  41d700:	mov    eax,0xfc5fbf8e
  41d705:	jge    0x41d703
  41d707:	or     eax,0x45a5df67
  41d70c:	ret    0x1e2d
  41d70f:	adc    bl,dl
  41d711:	sbb    al,0xa9
  41d713:	pop    eax
  41d714:	or     al,0xb9
  41d716:	add    ah,BYTE PTR [ebp+0x16]
  41d719:	scas   al,BYTE PTR es:[edi]
  41d71a:	imul   esi,DWORD PTR [eax+ebx*4-0x52f05bb2],0xffffff8a
  41d722:	mov    gs,WORD PTR [ebx-0x181a72bb]
  41d728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d729:	mov    al,0x3e
  41d72b:	push   0x21b34248
  41d730:	in     eax,dx
  41d731:	inc    ebp
  41d732:	pop    eax
  41d733:	jecxz  0x41d70a
  41d735:	mov    al,0x51
  41d737:	test   BYTE PTR [esi+0x65461877],0x24
  41d73e:	mov    WORD PTR [eax+0xd960433],es
  41d744:	pop    edx
  41d745:	pusha  
  41d746:	in     eax,0xce
  41d748:	daa    
  41d749:	pop    edi
  41d74a:	(bad)  
  41d74b:	bound  esi,QWORD PTR [ebx]
  41d74d:	add    bl,bl
  41d74f:	daa    
  41d750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d751:	out    dx,eax
  41d752:	sbb    BYTE PTR [ecx-0x2e],bl
  41d755:	cdq    
  41d756:	loop   0x41d75d
  41d758:	adc    bh,BYTE PTR [esi-0x50b5ba7b]
  41d75e:	js     0x41d6f4
  41d760:	xor    al,0x24
  41d762:	daa    
  41d763:	inc    ecx
  41d764:	jecxz  0x41d6ed
  41d766:	(bad)  
  41d767:	fcomp  QWORD PTR [edx]
  41d769:	(bad)  
  41d76a:	int    0xe4
  41d76c:	xor    DWORD PTR [esi+0x65],edx
  41d76f:	jl     0x41d7a4
  41d771:	popa   
  41d772:	push   ebp
  41d773:	jl     0x41d774
  41d775:	mov    esi,0xe60bc289
  41d77a:	push   edx
  41d77b:	mov    ds,WORD PTR [eax]
  41d77d:	dec    ecx
  41d77e:	lds    esi,FWORD PTR [ebp+0x5]
  41d781:	in     al,0xfb
  41d783:	jnp    0x41d728
  41d785:	push   ecx
  41d786:	cmc    
  41d787:	jmp    FWORD PTR [edx-0x5e42bbed]
  41d78d:	jno    0x41d77f
  41d78f:	or     al,0xa
  41d791:	sub    ah,bh
  41d793:	repz cmp eax,0x9d0faa30
  41d799:	in     eax,0x29
  41d79b:	mov    bh,0x4f
  41d79d:	add    bh,al
  41d79f:	(bad)  
  41d7a0:	imul   edx,esi,0xffffff94
  41d7a3:	xchg   BYTE PTR [edx],dl
  41d7a5:	cmp    eax,0x60c831d6
  41d7aa:	lock mov ebx,0xadf66a3e
  41d7b0:	cwde   
  41d7b1:	dec    ebx
  41d7b2:	aaa    
  41d7b3:	inc    edx
  41d7b4:	loopne 0x41d79e
  41d7b6:	inc    edx
  41d7b7:	retf   0x78f8
  41d7ba:	cmp    edi,DWORD PTR [ecx+0x67]
  41d7bd:	and    eax,0x43793c7d
  41d7c2:	lock sti 
  41d7c4:	(bad)  
  41d7c5:	lds    edx,FWORD PTR [ebp+0x2d]
  41d7c8:	enter  0x4858,0x89
  41d7cc:	aad    0xd8
  41d7ce:	push   edi
  41d7cf:	push   eax
  41d7d0:	mov    dh,0x2d
  41d7d2:	addr16 je 0x41d75f
  41d7d5:	es mov eax,0x38a7594f
  41d7db:	inc    edx
  41d7dc:	fsubr  QWORD PTR [ebp+0x38]
  41d7df:	fs mov bl,0x9f
  41d7e2:	jle    0x41d7b2
  41d7e4:	aas    
  41d7e5:	test   al,0x67
  41d7e7:	and    esi,DWORD PTR [ecx+eax*1]
  41d7ea:	stos   BYTE PTR es:[edi],al
  41d7eb:	push   edx
  41d7ec:	fld    QWORD PTR [edi-0x28]
  41d7ef:	mov    dl,0xc4
  41d7f1:	cmp    eax,0xfc24a0a8
  41d7f6:	test   ah,0xec
  41d7f9:	cmp    DWORD PTR [edx-0x1b7de3ef],0x5dcd8597
  41d803:	dec    eax
  41d804:	adc    esi,DWORD PTR [ecx]
  41d806:	das    
  41d807:	jae    0x41d860
  41d809:	dec    ecx
  41d80a:	ret    
  41d80b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d80c:	xchg   ecx,eax
  41d80d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d80e:	mov    es,WORD PTR [ebx-0x60]
  41d811:	in     al,dx
  41d812:	inc    eax
  41d813:	test   eax,0x2358d131
  41d818:	cmp    al,dh
  41d81a:	(bad)  
  41d81b:	mov    eax,ds:0x80231bae
  41d820:	cmp    ebp,esp
  41d822:	mov    ah,0xf8
  41d824:	clc    
  41d825:	push   ecx
  41d826:	xor    DWORD PTR [ebx-0x48],eax
  41d829:	imul   eax,DWORD PTR [ebx],0x4d
  41d82c:	inc    ah
  41d82e:	add    al,0x9c
  41d830:	cmp    eax,0x3b3e278a
  41d835:	shl    BYTE PTR [edx],1
  41d837:	aas    
  41d838:	lods   eax,DWORD PTR ds:[esi]
  41d839:	pop    ss
  41d83a:	sbb    BYTE PTR [ecx-0x69],dl
  41d83d:	outs   dx,DWORD PTR ds:[esi]
  41d83e:	dec    esi
  41d83f:	int    0xaf
  41d841:	bound  edi,QWORD PTR [eiz*8-0x51bc0af8]
  41d848:	inc    esi
  41d849:	ret    
  41d84a:	inc    edx
  41d84b:	(bad)  
  41d84d:	(bad)  
  41d84e:	dec    ecx
  41d84f:	in     al,0xe9
  41d851:	pop    esi
  41d852:	dec    ebp
  41d853:	xor    eax,0x9baca244
  41d858:	sub    al,BYTE PTR [edx+0x18]
  41d85b:	inc    bx
  41d85d:	in     eax,dx
  41d85e:	shr    esi,0xf7
  41d861:	push   cs
  41d862:	scas   eax,DWORD PTR es:[edi]
  41d863:	sub    eax,0x871240cb
  41d868:	shl    bl,1
  41d86a:	mov    eax,ds:0xa12cbfa5
  41d86f:	test   al,0x69
  41d871:	jl     0x41d8a1
  41d873:	dec    esp
  41d874:	iret   
  41d875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d876:	aaa    
  41d877:	js     0x41d8a5
  41d879:	bound  ebx,QWORD PTR [edx+esi*1]
  41d87c:	add    DWORD PTR [ebx-0x2b7c493],esi
  41d882:	int3   
  41d883:	xchg   edi,eax
  41d884:	hlt    
  41d885:	jne    0x41d841
  41d887:	mov    al,BYTE PTR [edx-0x15]
  41d88a:	enter  0xb7,0x6e
  41d88e:	les    ebp,FWORD PTR [edi]
  41d890:	fiadd  DWORD PTR [edx]
  41d892:	and    BYTE PTR [eax+0x68e3a8b2],bl
  41d898:	stos   BYTE PTR es:[edi],al
  41d899:	fcomp  st(2)
  41d89b:	mov    edx,0xa247bd02
  41d8a0:	add    cl,dl
  41d8a2:	or     BYTE PTR [ecx],ch
  41d8a4:	(bad)  
  41d8a5:	xor    DWORD PTR [edi],edi
  41d8a7:	in     eax,dx
  41d8a8:	push   0x6
  41d8aa:	cmp    edx,DWORD PTR [ebp-0x74]
  41d8ad:	mov    al,0xcb
  41d8af:	ins    BYTE PTR es:[edi],dx
  41d8b0:	(bad)  
  41d8b1:	mov    cl,0xf5
  41d8b3:	jl     0x41d89d
  41d8b5:	popf   
  41d8b6:	mov    ds:0xb7fdca7c,eax
  41d8bb:	stos   DWORD PTR es:[edi],eax
  41d8bc:	shr    ah,0xbd
  41d8bf:	rcr    cl,0x4f
  41d8c2:	or     eax,0xf9f5aeb3
  41d8c7:	sbb    DWORD PTR [esi],eax
  41d8c9:	push   esi
  41d8ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8cb:	mov    dl,0x8e
  41d8cd:	mov    bh,0x3c
  41d8cf:	mov    dh,bh
  41d8d1:	and    BYTE PTR [edi+0x35230576],bh
  41d8d7:	sahf   
  41d8d8:	lods   eax,DWORD PTR ds:[esi]
  41d8d9:	loopne 0x41d87e
  41d8db:	pop    esi
  41d8dc:	test   BYTE PTR [ebp+0x6727438a],al
  41d8e2:	sub    ch,ah
  41d8e4:	nop
  41d8e5:	push   ecx
  41d8e6:	and    DWORD PTR [edx-0x615081f4],eax
  41d8ec:	sub    edx,DWORD PTR [esi]
  41d8ee:	stos   BYTE PTR es:[edi],al
  41d8ef:	push   0xffffffcb
  41d8f1:	int    0x83
  41d8f3:	add    al,0x7
  41d8f5:	bndldx (bad),[esi+0x56]
  41d8f9:	and    eax,0x25b1e49f
  41d8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8ff:	lahf   
  41d900:	xchg   edx,eax
  41d901:	jne    0x41d97f
  41d903:	jns    0x41d972
  41d905:	adc    BYTE PTR [ecx-0x6f],bl
  41d908:	pop    ecx
  41d909:	stos   BYTE PTR es:[edi],al
  41d90a:	leave  
  41d90b:	stc    
  41d90c:	mov    eax,ds:0x4c48b941
  41d911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d912:	pop    ds
  41d913:	or     eax,0x1d36b28c
  41d918:	shr    DWORD PTR [esi+ebx*4+0x52],0xca
  41d91d:	out    0x1d,eax
  41d91f:	or     al,0x88
  41d921:	(bad)  
  41d922:	jae    0x41d904
  41d924:	(bad)  
  41d925:	rcl    DWORD PTR [ecx-0x3d],1
  41d928:	jecxz  0x41d8ad
  41d92a:	mov    ecx,0x38bef8ad
  41d92f:	fisttp QWORD PTR [edi]
  41d931:	pop    edi
  41d932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d933:	dec    ebx
  41d934:	stos   DWORD PTR es:[edi],eax
  41d935:	mov    ebx,0x20555681
  41d93a:	stc    
  41d93b:	push   ebx
  41d93c:	ret    
  41d93d:	mov    ecx,DWORD PTR ds:0x90456947
  41d943:	lock xchg esp,eax
  41d945:	sbb    al,0x80
  41d947:	jecxz  0x41d937
  41d949:	add    BYTE PTR [ebx-0x13],ch
  41d94c:	add    DWORD PTR [eax-0x110f8b9c],0x78ddabf5
  41d956:	sahf   
  41d957:	out    0xd4,eax
  41d959:	gs pop eax
  41d95b:	mov    DWORD PTR [esi-0xb6bb647],eax
  41d961:	xchg   esi,eax
  41d962:	sub    eax,0x42047654
  41d967:	lock push edx
  41d969:	cmp    BYTE PTR [ecx+0x1397477],cl
  41d96f:	fisub  WORD PTR ds:0x7efe58f1
  41d975:	clc    
  41d976:	mov    ch,BYTE PTR [esi-0x5d019a5f]
  41d97c:	ins    BYTE PTR es:[edi],dx
  41d97d:	add    eax,0x1976feea
  41d982:	fwait
  41d983:	jmp    0x851eaf87
  41d988:	or     eax,edi
  41d98a:	int3   
  41d98b:	xor    BYTE PTR [ebp+0x675fe8c1],ah
  41d991:	add    al,0x9a
  41d993:	push   0x8c276a6
  41d998:	dec    ecx
  41d999:	xchg   BYTE PTR [edi],ah
  41d99b:	xor    al,0x80
  41d99d:	stos   DWORD PTR es:[edi],eax
  41d99e:	gs movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41d9a1:	popf   
  41d9a2:	inc    ecx
  41d9a3:	outs   dx,BYTE PTR ds:[esi]
  41d9a4:	(bad)
  41d9a7:	or     al,0x8d
  41d9a9:	movs   BYTE PTR es:[di],BYTE PTR gs:[si]
  41d9ac:	push   esp
  41d9ad:	inc    ecx
  41d9ae:	or     DWORD PTR [edi+0x1a],esi
  41d9b1:	outs   dx,DWORD PTR ds:[esi]
  41d9b2:	retf   
  41d9b3:	pushf  
  41d9b4:	addps  xmm5,XMMWORD PTR [edx+0x3f]
  41d9b8:	out    0xe5,al
  41d9ba:	mov    al,0xbe
  41d9bc:	aas    
  41d9bd:	popf   
  41d9be:	mov    eax,0x509c6987
  41d9c3:	jg     0x41da3f
  41d9c5:	repnz ss xchg esi,eax
  41d9c8:	int3   
  41d9c9:	dec    edi
  41d9ca:	sub    BYTE PTR [ebp+edi*8-0xd],ch
  41d9ce:	jno    0x41d96f
  41d9d0:	(bad)  [esi-0x50]
  41d9d3:	cmp    esp,eax
  41d9d5:	in     eax,dx
  41d9d6:	cmp    al,0x71
  41d9d8:	cmp    ebp,DWORD PTR [ebp-0x17]
  41d9db:	mov    eax,ds:0x450e519a
  41d9e0:	lahf   
  41d9e1:	aad    0x1
  41d9e3:	out    dx,eax
  41d9e4:	push   es
  41d9e5:	out    0x31,eax
  41d9e7:	mov    al,ds:0xc3f23dc1
  41d9ec:	popa   
  41d9ed:	std    
  41d9ee:	mov    eax,0xa47a19f6
  41d9f3:	ret    
  41d9f4:	sub    eax,0xb687f633
  41d9f9:	add    eax,0x53210d09
  41d9fe:	div    BYTE PTR [edx]
  41da00:	dec    esp
  41da01:	sub    dl,BYTE PTR ds:0xa6ff9ea0
  41da07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da08:	add    al,0xd6
  41da0a:	xor    al,0xa1
  41da0c:	neg    BYTE PTR [eax-0x2c]
  41da0f:	int3   
  41da10:	sahf   
  41da11:	push   cs
  41da12:	ja     0x41da29
  41da14:	xchg   DWORD PTR ds:0xbd58de98,edi
  41da1a:	into   
  41da1b:	push   ebp
  41da1c:	sub    ah,ch
  41da1e:	and    ebp,DWORD PTR [ebx]
  41da20:	mov    ah,0x7f
  41da22:	pop    ebx
  41da23:	add    BYTE PTR [esi+ebp*1+0x2c],al
  41da27:	push   esp
  41da28:	push   esi
  41da29:	xchg   ecx,eax
  41da2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da2b:	xor    esp,DWORD PTR [edi]
  41da2d:	mov    ds:0x663d7878,eax
  41da32:	fld    TBYTE PTR [ebx]
  41da35:	push   edx
  41da36:	sbb    ebx,DWORD PTR [ecx-0x67a482c3]
  41da3c:	cwde   
  41da3d:	int3   
  41da3e:	xchg   ebp,eax
  41da3f:	pushf  
  41da40:	in     eax,dx
  41da41:	mov    edx,0x44d7de72
  41da46:	and    eax,0xa45e1709
  41da4b:	xchg   ebx,eax
  41da4c:	and    edi,DWORD PTR [ebx-0x6c]
  41da4f:	jle    0x41da86
  41da51:	and    BYTE PTR [ecx+0x5c],ah
  41da54:	daa    
  41da55:	stos   DWORD PTR es:[edi],eax
  41da56:	sbb    cl,ch
  41da58:	mov    ebp,0x9742e13c
  41da5d:	inc    ebx
  41da5e:	pop    edx
  41da5f:	inc    DWORD PTR [eax+0x1177d444]
  41da65:	sbb    BYTE PTR [edi+0x0],ah
  41da68:	inc    esp
  41da69:	inc    esi
  41da6a:	dec    ecx
  41da6b:	test   bh,al
  41da6d:	aas    
  41da6e:	pop    esi
  41da6f:	xor    BYTE PTR [edi-0x7b483a87],al
  41da75:	add    DWORD PTR [eax-0x29],edx
  41da78:	loop   0x41da1b
  41da7a:	mov    bl,0xc9
  41da7c:	ins    DWORD PTR es:[edi],dx
  41da7d:	ins    DWORD PTR es:[di],dx
  41da7f:	(bad)  
  41da80:	cmp    esp,edi
  41da82:	jns    0x41da97
  41da84:	hlt    
  41da85:	push   ecx
  41da86:	fcmovnbe st,st(3)
  41da88:	sbb    al,0x3a
  41da8a:	jmp    0xbcf6:0x69b63ffb
  41da91:	mov    bh,BYTE PTR [bx+di-0x3a]
  41da95:	call   0x61d8b23b
  41da9a:	push   edx
  41da9b:	pop    ecx
  41da9c:	lds    ebp,FWORD PTR [ecx+0x4459ac58]
  41daa2:	js     0x41dab6
  41daa4:	ss lock mov cl,0x17
  41daa8:	and    edi,DWORD PTR ds:0x7e6b72ec
  41daae:	es enter 0x1445,0x5
  41dab3:	into   
  41dab4:	mov    ebx,ebp
  41dab6:	rcl    BYTE PTR [edx+0x53e8017f],cl
  41dabc:	fst    QWORD PTR [eax-0x7e1bf7ed]
  41dac2:	sti    
  41dac3:	repz jnp 0x41dacc
  41dac6:	xor    al,0x7a
  41dac8:	add    bl,0x8
  41dacb:	pop    esi
  41dacc:	scas   al,BYTE PTR es:[edi]
  41dacd:	enter  0x8a89,0xb4
  41dad1:	pop    ss
  41dad2:	dec    ecx
  41dad3:	mov    cl,0x93
  41dad5:	mov    edi,0x30998373
  41dada:	ins    DWORD PTR es:[edi],dx
  41dadb:	mov    ds:0x64c050d2,eax
  41dae0:	and    bl,ch
  41dae2:	jg     0x41da94
  41dae4:	adc    DWORD PTR [ebx-0x65],esp
  41dae7:	jecxz  0x41da84
  41dae9:	fsub   st,st(4)
  41daeb:	nop
  41daec:	retf   
  41daed:	(bad)  
  41daee:	mov    eax,0x905ed2e4
  41daf3:	arpl   WORD PTR [ebx+0x63],bx
  41daf6:	sub    al,0xcc
  41daf8:	ret    
  41daf9:	fist   DWORD PTR [ebx-0x16]
  41dafc:	pop    ss
  41dafd:	add    ch,BYTE PTR [ebx]
  41daff:	aaa    
  41db00:	inc    ecx
  41db01:	rcr    esp,cl
  41db03:	test   DWORD PTR [eax],eax
  41db05:	mov    eax,0xa7fd2fda
  41db0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db0b:	inc    ebp
  41db0c:	out    dx,eax
  41db0d:	rcl    ebp,1
  41db0f:	add    ch,BYTE PTR [edx+0x3dc0779d]
  41db15:	xchg   cl,bl
  41db17:	mov    edi,esi
  41db19:	cmc    
  41db1a:	or     eax,0x8f6d51b0
  41db1f:	pop    DWORD PTR [edi+0x6e]
  41db22:	es ins BYTE PTR es:[edi],dx
  41db24:	xor    bl,dh
  41db26:	stos   BYTE PTR es:[edi],al
  41db27:	imul   esp,DWORD PTR [ebp-0x60],0xa6958f78
  41db2e:	jne    0x41db33
  41db30:	lea    ebx,[ecx]
  41db32:	aas    
  41db33:	out    0x7d,al
  41db35:	sbb    DWORD PTR [esi+0x1eedc100],edi
  41db3b:	xchg   ebx,eax
  41db3c:	push   edx
  41db3d:	enter  0xd58,0x97
  41db41:	stos   BYTE PTR es:[edi],al
  41db42:	(bad)  
  41db43:	lds    esp,FWORD PTR [ebp-0x65f9777]
  41db49:	jle    0x41db37
  41db4b:	cwde   
  41db4c:	aad    0x4a
  41db4e:	ret    
  41db4f:	mov    esp,0xf190a057
  41db54:	mov    edi,DWORD PTR ds:0x93e20f88
  41db5a:	fwait
  41db5b:	(bad)  
  41db5c:	retf   0xb82a
  41db5f:	not    BYTE PTR [edi+0x4311261]
  41db65:	xor    eax,0xa87d5ed9
  41db6a:	push   esi
  41db6b:	aam    0x67
  41db6d:	in     al,dx
  41db6e:	push   esp
  41db6f:	push   es
  41db70:	inc    edi
  41db71:	inc    esp
  41db72:	pop    ebx
  41db73:	pop    esp
  41db74:	rcl    BYTE PTR [eax+eax*4-0xd36090],cl
  41db7b:	jo     0x41db3a
  41db7d:	xor    DWORD PTR [eax+0x51],ebx
  41db80:	jno    0x41db3a
  41db82:	adc    DWORD PTR [ebx+ecx*8-0x7d],0xc125adc0
  41db8a:	popf   
  41db8b:	call   0x7a2ff53b
  41db90:	fmul   DWORD PTR [ebx-0x4a]
  41db93:	cwde   
  41db94:	xchg   ebx,eax
  41db95:	popf   
  41db96:	xchg   DWORD PTR [edx-0x27],ebx
  41db99:	xor    ch,BYTE PTR [ebp+0x37]
  41db9c:	jne    0x41db75
  41db9e:	stc    
  41db9f:	mov    ebp,0xabc81923
  41dba4:	mov    esi,0xa6ede67b
  41dba9:	add    DWORD PTR [ebp+0x5c],edi
  41dbac:	jmp    0x3fa7:0x5d251ac1
  41dbb3:	inc    edx
  41dbb4:	gs xchg ebp,eax
  41dbb6:	pop    ebp
  41dbb7:	or     eax,0x62fffa59
  41dbbc:	mov    DWORD PTR [edi-0x72],ecx
  41dbbf:	jle    0x41dbfb
  41dbc1:	mov    edx,?
  41dbc3:	stc    
  41dbc4:	les    ebx,FWORD PTR [esi+0x52c114f7]
  41dbca:	cld    
  41dbcb:	repnz adc al,ah
  41dbce:	das    
  41dbcf:	push   0xffffff81
  41dbd1:	bound  eax,QWORD PTR [eax+0x64dd31f0]
  41dbd7:	xchg   DWORD PTR [eax+edx*1-0x31],ebx
  41dbdb:	aad    0x4d
  41dbdd:	jno    0x41dc57
  41dbdf:	mov    al,0x15
  41dbe1:	rcl    BYTE PTR [eax],cl
  41dbe3:	pop    ebx
  41dbe4:	ret    0x788f
  41dbe7:	retf   
  41dbe8:	pusha  
  41dbe9:	popf   
  41dbea:	adc    al,0xbd
  41dbec:	test   al,0x9f
  41dbee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbef:	xchg   edi,eax
  41dbf0:	sbb    BYTE PTR [edi-0x45],0x6e
  41dbf4:	mov    ds:0x4c5ec180,al
  41dbf9:	sbb    al,0x64
  41dbfb:	dec    eax
  41dbfc:	lea    edi,[ebx-0x2d]
  41dbff:	add    DWORD PTR [ecx-0x66f22cc2],0x115f6495
  41dc09:	push   0x876f2106
  41dc0e:	xor    eax,ecx
  41dc10:	stos   BYTE PTR es:[edi],al
  41dc11:	sbb    eax,DWORD PTR [ebx]
  41dc13:	pop    eax
  41dc14:	out    dx,al
  41dc15:	enter  0x272c,0xca
  41dc19:	inc    ebp
  41dc1a:	arpl   WORD PTR [ebx-0x6a41ddf0],cx
  41dc20:	xchg   edi,eax
  41dc21:	cmp    ch,BYTE PTR [edx+0x60a02e0e]
  41dc27:	dec    edi
  41dc28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc29:	mov    esp,0xd86ba837
  41dc2e:	outs   dx,DWORD PTR ds:[esi]
  41dc2f:	mov    al,ds:0x28294751
  41dc34:	cdq    
  41dc35:	or     BYTE PTR [esi+0x4e083bc5],bh
  41dc3b:	inc    esi
  41dc3c:	lahf   
  41dc3d:	(bad)  
  41dc3e:	jnp    0x41dc55
  41dc40:	and    eax,0x96611b3a
  41dc45:	iret   
  41dc46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc47:	in     al,dx
  41dc48:	sub    al,0x52
  41dc4a:	pop    ebp
  41dc4b:	test   al,0x54
  41dc4d:	jno    0x41dc7a
  41dc4f:	mov    DWORD PTR [esi],ebp
  41dc51:	(bad)  
  41dc53:	xchg   BYTE PTR [ecx+esi*2+0x628c1616],al
  41dc5a:	das    
  41dc5b:	aas    
  41dc5c:	add    eax,DWORD PTR [edi]
  41dc5e:	hlt    
  41dc5f:	push   ss
  41dc60:	bound  esp,QWORD PTR [esi+0x30]
  41dc63:	ret    0x712f
  41dc66:	inc    esi
  41dc67:	gs add eax,0x6257b984
  41dc6d:	push   esi
  41dc6e:	ss mov ch,0x4a
  41dc71:	loop   0x41dcea
  41dc73:	sub    DWORD PTR ds:0x554ac4c6,eax
  41dc79:	je     0x41dceb
  41dc7b:	jle    0x41dc89
  41dc7d:	loope  0x41dc7a
  41dc7f:	pop    esp
  41dc80:	retf   0xd682
  41dc83:	in     al,0x72
  41dc85:	mov    eax,ds:0xe98bcfac
  41dc8a:	mov    eax,ds:0xf03b4404
  41dc8f:	jg     0x41dc35
  41dc91:	mov    dh,0x2
  41dc93:	pop    ebx
  41dc94:	jmp    0x41dc3a
  41dc96:	mov    dh,0xef
  41dc98:	xor    eax,0xb2b24b98
  41dc9d:	ror    BYTE PTR [ecx+0x19],0x43
  41dca1:	bound  ebx,QWORD PTR [ecx-0x53]
  41dca4:	add    BYTE PTR [esi-0x46a8521],bh
  41dcaa:	repnz lds edi,FWORD PTR [bp+si]
  41dcae:	fidiv  WORD PTR [eax+0x58c52706]
  41dcb4:	inc    ebx
  41dcb5:	or     BYTE PTR [ebx-0x25],0x70
  41dcb9:	jb     0x41dc43
  41dcbb:	das    
  41dcbc:	rcl    DWORD PTR [eax-0x21],cl
  41dcbf:	pushf  
  41dcc0:	jge    0x41dd3b
  41dcc2:	out    dx,eax
  41dcc3:	imul   ebp,DWORD PTR [esi+ecx*1-0x66],0x5c051819
  41dccb:	pop    es
  41dccc:	stc    
  41dccd:	call   0x8f92:0x7223ca90
  41dcd4:	lea    eax,[edi+0x22c57eb5]
  41dcda:	ror    BYTE PTR [ecx+0x5f281171],0x87
  41dce1:	or     eax,0x1d8050f2
  41dce6:	pop    esp
  41dce7:	loopne 0x41dd46
  41dce9:	push   eax
  41dcea:	inc    edi
  41dceb:	sub    ecx,DWORD PTR [edx]
  41dced:	mov    ds:0x870383a2,eax
  41dcf2:	stos   BYTE PTR es:[edi],al
  41dcf3:	cld    
  41dcf4:	sbb    edi,esi
  41dcf6:	scas   eax,DWORD PTR es:[edi]
  41dcf7:	add    eax,0x26c5b07d
  41dcfc:	add    BYTE PTR [ebp+0x612f3670],0x87
  41dd03:	mov    ds:0x48014ebe,al
  41dd08:	pushf  
  41dd09:	shl    cl,cl
  41dd0b:	dec    esp
  41dd0c:	mov    dl,0x3c
  41dd0e:	cmp    ebp,DWORD PTR [ecx]
  41dd10:	add    BYTE PTR [ebp+eax*4-0x13f7e065],0xbd
  41dd18:	in     eax,dx
  41dd19:	or     cl,ah
  41dd1b:	cvttps2pi mm2,QWORD PTR [esi+0x5d]
  41dd1f:	sub    eax,0xcda9de62
  41dd24:	adc    edi,0xe
  41dd27:	mov    al,ds:0x964a5456
  41dd2c:	adc    DWORD PTR [edx+0x2e],edi
  41dd2f:	adc    esp,DWORD PTR fs:[ebx]
  41dd32:	shr    edi,cl
  41dd34:	mov    ebp,0x783a9869
  41dd39:	(bad)  [ecx-0x5e7b80fa]
  41dd3f:	mov    edx,0xdce0881d
  41dd44:	adc    BYTE PTR [ecx],bh
  41dd46:	sbb    BYTE PTR [esi],0xee
  41dd49:	jecxz  0x41dd72
  41dd4b:	in     eax,0x46
  41dd4d:	sbb    al,0xcc
  41dd4f:	xchg   ah,ch
  41dd51:	push   edx
  41dd52:	arpl   WORD PTR [edx+edx*8-0x46],bp
  41dd56:	adc    al,0x2c
  41dd58:	jp     0x41dd56
  41dd5a:	add    eax,0x195b21c7
  41dd5f:	fxch   st(2)
  41dd61:	pop    esi
  41dd62:	ss dec ebp
  41dd64:	xchg   esp,eax
  41dd65:	pop    ecx
  41dd67:	das    
  41dd68:	xlat   BYTE PTR ds:[ebx]
  41dd69:	iretw  
  41dd6b:	mov    dl,0x83
  41dd6d:	ror    BYTE PTR [esi+0x7c],cl
  41dd70:	daa    
  41dd71:	adc    ecx,DWORD PTR [ebx+0x19d48f68]
  41dd77:	mov    eax,ds:0xc7e9553a
  41dd7c:	inc    ebx
  41dd7d:	mov    cl,0xe2
  41dd7f:	cmp    eax,ecx
  41dd81:	push   ebx
  41dd82:	les    ebx,FWORD PTR ds:0xbfa21e10
  41dd88:	pop    ecx
  41dd89:	mov    al,ds:0x7141b871
  41dd8e:	inc    edx
  41dd8f:	aas    
  41dd90:	shl    BYTE PTR [esi],0x9e
  41dd93:	mov    ah,0xb0
  41dd95:	call   0x8cdf3e76
  41dd9a:	jp     0x41dd81
  41dd9c:	rcr    edi,cl
  41dd9e:	mov    ds:0x5b7ddf37,eax
  41dda3:	jg     0x41de0e
  41dda5:	daa    
  41dda6:	gs mov cl,0xba
  41dda9:	mov    ebx,0x164e98ef
  41ddae:	retf   0xe9af
  41ddb1:	rep outs dx,DWORD PTR ds:[esi]
  41ddb3:	mov    edi,0x920cd8e8
  41ddb8:	pop    esp
  41ddb9:	lea    esi,ds:0x77d34962
  41ddbf:	ds (bad) 
  41ddc1:	jne    0x41dd65
  41ddc3:	pop    ss
  41ddc4:	mov    eax,DWORD PTR [edx]
  41ddc6:	shl    BYTE PTR [ebp+0x376f2659],1
  41ddcc:	fistp  QWORD PTR [ebx+0x67]
  41ddcf:	lods   eax,DWORD PTR ds:[esi]
  41ddd0:	hlt    
  41ddd1:	sub    DWORD PTR [edx+0x6eb71ce9],esi
  41ddd7:	mov    dl,0xa1
  41ddd9:	scas   al,BYTE PTR es:[edi]
  41ddda:	int3   
  41dddb:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41dddd:	and    ch,dh
  41dddf:	scas   eax,DWORD PTR es:[edi]
  41dde0:	(bad)  
  41dde1:	fdivr  QWORD PTR fs:0xcb8c4fe4
  41dde8:	push   cs
  41dde9:	mov    ah,0x37
  41ddeb:	test   ebp,eax
  41dded:	xchg   BYTE PTR [edi-0x13e79ab],bl
  41ddf3:	push   es
  41ddf4:	mov    DWORD PTR [esi-0x23e8724e],edx
  41ddfa:	cmp    DWORD PTR [edi-0x2b],esp
  41ddfd:	push   esp
  41ddfe:	std    
  41ddff:	mov    eax,0x89563963
  41de04:	ret    
  41de05:	jmp    0xf079:0xc412100e
  41de0c:	out    0x48,eax
  41de0e:	ins    BYTE PTR es:[edi],dx
  41de0f:	or     BYTE PTR [edx+esi*1+0x45],bh
  41de13:	ds jno 0x41ddfa
  41de16:	adc    eax,0x45e7ded3
  41de1b:	jae    0x41de3c
  41de1d:	aaa    
  41de1e:	dec    esi
  41de1f:	inc    esp
  41de20:	or     dh,dl
  41de22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de23:	fstp   st(3)
  41de25:	packsswb mm2,QWORD PTR [eax]
  41de28:	mov    ebx,0x65d1fd2b
  41de2d:	push   eax
  41de2e:	pop    eax
  41de2f:	in     eax,0x65
  41de31:	pop    ebx
  41de32:	lock xor cl,BYTE PTR ds:[ecx+eiz*2+0x55]
  41de38:	in     eax,dx
  41de39:	or     eax,0xe8ea97a0
  41de3e:	jmp    0x32d1:0x73290817
  41de45:	fsubr  DWORD PTR ds:0x845ca571
  41de4b:	mov    cl,0x31
  41de4d:	jns    0x3de37ba1
  41de53:	idiv   BYTE PTR [edx*1-0x5269f7db]
  41de5a:	mov    al,ds:0xfbad21d8
  41de5f:	dec    edi
  41de60:	push   eax
  41de61:	repz js 0x41de86
  41de64:	popf   
  41de65:	inc    ecx
  41de66:	test   eax,0xe28597b
  41de6b:	mov    al,0x67
  41de6d:	dec    ecx
  41de6e:	ins    DWORD PTR es:[edi],dx
  41de6f:	clc    
  41de70:	jbe    0x41de5c
  41de72:	pop    eax
  41de73:	scas   eax,DWORD PTR es:[edi]
  41de74:	xor    ch,BYTE PTR [eax+0x189ad831]
  41de7a:	pop    ds
  41de7b:	jno    0x41de3e
  41de7d:	cdq    
  41de7e:	aas    
  41de7f:	ss xchg esp,eax
  41de81:	dec    edi
  41de82:	sub    al,0xab
  41de84:	adc    DWORD PTR [eax-0x1e8ce6f9],0xe968c811
  41de8e:	sbb    DWORD PTR [edx+0x55],0xffffffc0
  41de92:	dec    ebx
  41de93:	cmp    BYTE PTR [edx-0x5b],ch
  41de96:	and    bl,BYTE PTR [edx+0x0]
  41de99:	cmp    DWORD PTR [ecx-0x2e4f70ad],0xffffffbc
  41dea0:	adc    ebp,eax
  41dea2:	popf   
  41dea3:	inc    esi
  41dea4:	adc    ebx,esi
  41dea6:	and    al,0x6b
  41dea8:	lock popf 
  41deaa:	ficom  WORD PTR [ecx-0x47346490]
  41deb0:	add    al,BYTE PTR [ebx+0x599f9a8a]
  41deb6:	ror    BYTE PTR [ecx+0x37],0xaa
  41deba:	xchg   edi,eax
  41debb:	sub    eax,0x593eacb5
  41dec0:	add    BYTE PTR [ebx],dh
  41dec2:	and    dh,BYTE PTR [edi+ebx*2+0x18b2f44c]
  41dec9:	mov    ah,0xee
  41decb:	(bad)  [esi]
  41dece:	and    eax,0xabef9bdc
  41ded3:	icebp  
  41ded4:	mov    edi,0x1ec6c608
  41ded9:	ja     0x41de8e
  41dedb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dedc:	das    
  41dedd:	lds    esi,FWORD PTR [edx+0x5ef7b77a]
  41dee3:	sub    al,BYTE PTR [edx-0x16a7eb11]
  41dee9:	cmp    ebx,DWORD PTR [edx-0x57]
  41deec:	pusha  
  41deed:	jle    0x41defd
  41deef:	mov    ecx,0x31119cfb
  41def4:	cmp    esi,DWORD PTR [ebx+ebp*8-0x2c]
  41def8:	retf   0xe82b
  41defb:	ss jae 0x41df3d
  41defe:	js     0x41df3a
  41df00:	jbe    0x41df60
  41df02:	mul    DWORD PTR [ebx+0x3e]
  41df05:	or     eax,0x55b5cd5c
  41df0a:	retf   
  41df0b:	jmp    0xa32e:0xb9ee1c6e
  41df12:	jb     0x41dec3
  41df14:	and    al,0xb4
  41df16:	sbb    DWORD PTR [edx+0x34],edi
  41df19:	xchg   ebp,eax
  41df1a:	in     eax,0xc6
  41df1c:	inc    edi
  41df1d:	mov    ds:0x8e692b00,eax
  41df22:	int    0x80
  41df24:	mov    esp,0x2f9e750d
  41df29:	jno    0x41df07
  41df2b:	jle    0x41df36
  41df2d:	push   ds
  41df2e:	in     al,dx
  41df2f:	push   ebp
  41df30:	add    edx,esp
  41df32:	std    
  41df33:	push   esp
  41df34:	adc    bl,BYTE PTR [eax+0x17d9d5bd]
  41df3a:	xor    eax,DWORD PTR [eax+eiz*8-0x4b]
  41df3e:	icebp  
  41df3f:	mov    ah,0xde
  41df41:	dec    esp
  41df42:	pop    esp
  41df43:	fcom   QWORD PTR [esi]
  41df45:	push   ecx
  41df46:	mov    eax,0xb4f5824
  41df4b:	mov    eax,0x96406cc4
  41df50:	xchg   ebx,eax
  41df51:	ret    0x4bb6
  41df54:	ret    0xf715
  41df57:	jae    0x41df02
  41df59:	lods   al,BYTE PTR ds:[esi]
  41df5a:	bound  ebx,QWORD PTR [edi+0x7b]
  41df5d:	adc    DWORD PTR [ecx-0x41a01618],esi
  41df63:	fistp  WORD PTR [ebx-0x74c46c82]
  41df69:	dec    esp
  41df6a:	clc    
  41df6b:	inc    esi
  41df6c:	sbb    DWORD PTR [ecx-0x68],0xffffff8c
  41df70:	mov    al,0x1f
  41df72:	cs push es
  41df74:	(bad)  
  41df75:	lds    ebx,FWORD PTR [ecx+0x54]
  41df78:	repz adc eax,0x1326cf0f
  41df7e:	push   es
  41df7f:	test   BYTE PTR [esi-0x27989bb0],ch
  41df85:	mov    cl,BYTE PTR [ebx+0x2cbb259e]
  41df8b:	or     ecx,DWORD PTR [ecx+edi*8]
  41df8e:	push   esi
  41df8f:	pushf  
  41df90:	stos   DWORD PTR es:[edi],eax
  41df91:	push   eax
  41df92:	in     al,0x39
  41df94:	sub    esi,DWORD PTR [ebx+0x2140f8cf]
  41df9a:	fdivr  QWORD PTR [ebx+0x10]
  41df9d:	pop    esp
  41df9e:	pusha  
  41df9f:	pop    edi
  41dfa0:	je     0x41e018
  41dfa2:	jle    0x41dfda
  41dfa4:	mov    cl,0x2b
  41dfa6:	mov    ah,0x53
  41dfa8:	add    DWORD PTR [ebx],esi
  41dfaa:	out    0xb,al
  41dfac:	out    dx,eax
  41dfad:	out    dx,al
  41dfae:	or     edx,DWORD PTR [ecx-0x54]
  41dfb1:	inc    eax
  41dfb2:	ja     0x41df46
  41dfb4:	mov    al,0xc
  41dfb6:	int    0x58
  41dfb8:	shr    DWORD PTR [ebx],0xf2
  41dfbb:	cmp    DWORD PTR [edi+0x29ba763b],ebp
  41dfc1:	out    dx,al
  41dfc2:	rol    DWORD PTR [ecx+eax*2],cl
  41dfc5:	outs   dx,DWORD PTR ds:[esi]
  41dfc6:	out    0x13,eax
  41dfc8:	fwait
  41dfc9:	push   cs
  41dfca:	(bad)  
  41dfcb:	arpl   WORD PTR [edi-0x10aa469c],bx
  41dfd1:	or     eax,0x688b68c7
  41dfd6:	test   al,0x17
  41dfd8:	mov    ds:0x67adee0b,eax
  41dfdd:	sub    DWORD PTR [esi],esi
  41dfdf:	out    0xc,al
  41dfe1:	and    al,0x7e
  41dfe3:	sbb    al,0xbe
  41dfe5:	push   eax
  41dfe6:	add    DWORD PTR [eax-0x53],esp
  41dfe9:	cli    
  41dfea:	jmp    0x3c29:0xfe7364d6
  41dff1:	jbe    0x41df73
  41dff3:	popf   
  41dff4:	test   al,0x87
  41dff6:	sbb    al,0x72
  41dff8:	call   0x9e49:0x5a4b784a
  41dfff:	ror    DWORD PTR [eax+0x18f0cc5a],cl
  41e005:	stos   DWORD PTR es:[edi],eax
  41e006:	cld    
  41e007:	push   edi
  41e008:	dec    esp
  41e009:	add    BYTE PTR [edx],ah
  41e00b:	mov    cl,0xda
  41e00d:	mov    DWORD PTR [eax-0x1e620685],edi
  41e013:	jg     0x492911d3
  41e019:	add    ah,ch
  41e01b:	pop    ds
  41e01c:	lock test al,0x8b
  41e01f:	popf   
  41e020:	xor    al,0x1b
  41e022:	aam    0x80
  41e024:	das    
  41e025:	cmp    BYTE PTR [ebx+0xf],al
  41e028:	push   0xffffffee
  41e02a:	jecxz  0x41e079
  41e02c:	pop    ecx
  41e02d:	add    ch,ah
  41e02f:	lods   al,BYTE PTR ds:[esi]
  41e030:	ja     0x41dfcc
  41e032:	xchg   ebx,eax
  41e033:	and    ah,dh
  41e035:	hlt    
  41e036:	mov    ecx,0x6d784be0
  41e03b:	pushf  
  41e03c:	(bad)  
  41e03d:	jo     0x41dfe1
  41e03f:	push   0x61
  41e041:	addr16 mov esp,0xcf6cd9b6
  41e047:	nop
  41e048:	push   cs
  41e049:	pop    es
  41e04a:	les    ebp,FWORD PTR [eax]
  41e04c:	mov    eax,0x918b10ef
  41e051:	sub    edi,esi
  41e053:	adc    BYTE PTR [ecx],cl
  41e055:	pop    es
  41e056:	mov    ?,WORD PTR ds:0x75ea1de3
  41e05c:	pop    edi
  41e05d:	mov    al,ds:0x589b10d0
  41e062:	test   al,0x8
  41e064:	cmovns edx,DWORD PTR [ebp-0x60d2f787]
  41e06b:	ret    
  41e06c:	neg    BYTE PTR [eax+0x7d172ebc]
  41e072:	sbb    al,0xd1
  41e074:	cmp    BYTE PTR [ebx],0x6a
  41e077:	(bad)  
  41e078:	imul   DWORD PTR [ebx+0x679eb6f]
  41e07e:	icebp  
  41e07f:	sub    BYTE PTR [edi+0x12],cl
  41e082:	mov    cs,ebx
  41e084:	nop
  41e085:	and    BYTE PTR [eax],ah
  41e087:	cmp    edi,DWORD PTR [eax+ecx*2]
  41e08a:	mov    ds:0xde90f969,eax
  41e08f:	dec    ecx
  41e090:	arpl   WORD PTR [esp+ecx*1+0x7a],si
  41e094:	jp     0x41e081
  41e096:	into   
  41e097:	sub    al,0x9f
  41e099:	cmp    edi,DWORD PTR [edx-0xe]
  41e09c:	mov    al,ds:0xd15add63
  41e0a1:	out    0x9d,al
  41e0a3:	jg     0x41e0f8
  41e0a5:	pop    es
  41e0a6:	icebp  
  41e0a7:	jmp    0xa221:0x611ca119
  41e0ae:	add    eax,0x70ed4bd
  41e0b3:	lahf   
  41e0b4:	enter  0xb073,0xc3
  41e0b8:	fmulp  st(6),st
  41e0ba:	dec    esi
  41e0bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0bc:	mov    dh,0x97
  41e0be:	test   al,0x41
  41e0c0:	sbb    eax,ecx
  41e0c2:	scas   eax,DWORD PTR es:[edi]
  41e0c3:	pop    edi
  41e0c4:	in     eax,dx
  41e0c5:	int    0x7c
  41e0c7:	mov    DWORD PTR [ebp-0x4fc8065e],ebp
  41e0cd:	clc    
  41e0ce:	mov    bl,dl
  41e0d0:	fimul  WORD PTR [esi]
  41e0d2:	add    edx,DWORD PTR [ebp+esi*8-0x48]
  41e0d6:	sahf   
  41e0d7:	inc    ebp
  41e0d8:	cmc    
  41e0d9:	cmp    ebx,ebx
  41e0db:	mov    esp,0x93ddd9c3
  41e0e0:	dec    edx
  41e0e1:	xor    ecx,DWORD PTR [esi-0x44]
  41e0e4:	sbb    DWORD PTR [edi+ebx*1],edx
  41e0e7:	sti    
  41e0e8:	ret    
  41e0e9:	mov    dh,0x82
  41e0eb:	out    0xed,eax
  41e0ed:	jle    0x41e091
  41e0ef:	inc    esp
  41e0f0:	lods   eax,DWORD PTR ds:[esi]
  41e0f1:	mov    ds:0x3f1bfbd0,al
  41e0f6:	pop    esp
  41e0f7:	jmp    0xf4e404b8
  41e0fc:	xchg   edi,eax
  41e0fe:	or     BYTE PTR [eax-0x3375d96a],bl
  41e104:	not    BYTE PTR gs:[edi-0x5a]
  41e108:	add    DWORD PTR [edi-0x72],ebp
  41e10b:	arpl   WORD PTR [edx+0x6c],ax
  41e10e:	in     al,dx
  41e10f:	ret    0x9caa
  41e112:	and    cl,ah
  41e114:	mov    edx,ecx
  41e116:	(bad)  
  41e117:	das    
  41e118:	hlt    
  41e119:	int3   
  41e11a:	retf   
  41e11b:	(bad)  
  41e11d:	loope  0x41e0ec
  41e11f:	cmp    eax,0xc6d2622e
  41e124:	pushf  
  41e125:	xchg   BYTE PTR [esi+0x525ddff7],ch
  41e12b:	push   ss
  41e12c:	mov    eax,ds:0xb8bf0fe4
  41e131:	xchg   edx,eax
  41e132:	in     al,0x39
  41e134:	aad    0x2f
  41e136:	push   0xe692332c
  41e13b:	ja     0x41e0fb
  41e13d:	rcl    DWORD PTR [edi+0x35],1
  41e140:	dec    esp
  41e141:	popf   
  41e142:	sub    al,BYTE PTR [ecx+ecx*8-0x3a]
  41e146:	add    ecx,ebx
  41e148:	xor    al,BYTE PTR [ecx]
  41e14a:	jmp    0x41e1c7
  41e14c:	jp     0x41e1bc
  41e14e:	out    dx,eax
  41e14f:	pop    esp
  41e150:	or     ecx,esi
  41e152:	adc    DWORD PTR [ebx],esp
  41e154:	test   eax,0xc5898768
  41e159:	or     edx,DWORD PTR [edi]
  41e15b:	sub    cl,BYTE PTR [ebx]
  41e15d:	mov    DWORD PTR [eax+eiz*2+0x2e],eax
  41e161:	mov    dl,0xf2
  41e163:	or     al,0xb2
  41e165:	dec    ebx
  41e166:	mov    ebp,0x63baa8f4
  41e16b:	ss retf 0x51a0
  41e16f:	or     al,0xa9
  41e171:	add    eax,0x3541ba39
  41e176:	push   es
  41e177:	jle    0x41e1b0
  41e179:	loopne 0x41e15f
  41e17b:	adc    DWORD PTR [esi-0x2beafc6e],ebp
  41e181:	ret    0x7396
  41e184:	(bad)  
  41e186:	(bad)  
  41e188:	and    al,0x3f
  41e18a:	fnstsw WORD PTR [edx+0xb15af53]
  41e190:	and    BYTE PTR [eax+0x713cb351],bh
  41e196:	sub    BYTE PTR [eax],0x2c
  41e199:	arpl   WORD PTR [ebx-0x4b],si
  41e19c:	push   ds
  41e19d:	inc    eax
  41e19e:	cmp    DWORD PTR [edi],ebp
  41e1a0:	das    
  41e1a1:	stos   DWORD PTR es:[edi],eax
  41e1a2:	fnsave [ecx]
  41e1a4:	repz retf 0x626f
  41e1a8:	mov    ss,WORD PTR ds:0xa50ed9c9
  41e1ae:	dec    edx
  41e1af:	rcl    edx,cl
  41e1b1:	ja     0x41e224
  41e1b3:	jp     0x41e1ce
  41e1b5:	xchg   ebx,eax
  41e1b6:	xchg   ch,ch
  41e1b8:	jne    0x41e1cc
  41e1ba:	mov    ebp,0xd45d1c31
  41e1bf:	outs   dx,BYTE PTR ds:[esi]
  41e1c0:	sbb    DWORD PTR ds:0x33add51e,ebp
  41e1c6:	es aad 0xb
  41e1c9:	pop    edx
  41e1ca:	scas   al,BYTE PTR es:[edi]
  41e1cb:	add    DWORD PTR [ecx],ebp
  41e1cd:	jl     0x41e17c
  41e1cf:	sbb    ecx,DWORD PTR [esi-0x6a67197f]
  41e1d5:	jmp    0xcfca:0x5701fbec
  41e1dc:	jae    0x41e1e6
  41e1de:	push   eax
  41e1df:	ins    DWORD PTR es:[edi],dx
  41e1e0:	test   eax,0x35ed8b63
  41e1e5:	mov    dl,al
  41e1e7:	mov    cl,0x69
  41e1e9:	inc    ecx
  41e1ea:	mov    ah,0x46
  41e1ec:	mov    ?,WORD PTR [eax-0x2f]
  41e1ef:	jae    0x41e1ed
  41e1f1:	(bad)  
  41e1f2:	call   0x1db8f70b
  41e1f7:	bound  ecx,QWORD PTR [esi+0x0]
  41e1fa:	xchg   esi,eax
  41e1fb:	(bad)  
  41e1fc:	int    0x13
  41e1fe:	xor    eax,0x952b2aaa
  41e203:	movhps xmm4,QWORD PTR [edx+0x763387c9]
  41e20a:	sub    eax,0xe9332ff6
  41e20f:	aaa    
  41e210:	inc    ecx
  41e211:	mov    al,ds:0x55189c92
  41e216:	addr16 dec ebx
  41e218:	add    DWORD PTR [edx-0x2e51a8b1],0xffffffc6
  41e21f:	inc    esp
  41e220:	or     eax,DWORD PTR [esi-0x237d5e56]
  41e226:	and    esi,DWORD PTR [esi+0x2c2bc02a]
  41e22c:	loope  0x41e1c4
  41e22e:	sub    BYTE PTR [edx+0x2c23590d],0x5b
  41e235:	cmp    BYTE PTR ds:0x5c3fd0d7,ch
  41e23b:	cdq    
  41e23c:	add    esi,DWORD PTR [edi]
  41e23e:	inc    esp
  41e23f:	xor    eax,0xab403471
  41e244:	pop    esi
  41e245:	adc    esi,edx
  41e247:	xlat   BYTE PTR ds:[ebx]
  41e248:	pop    es
  41e249:	push   esp
  41e24a:	push   cs
  41e24b:	jle    0x41e290
  41e24d:	add    al,BYTE PTR [esi+0x49ae4a11]
  41e253:	ss retf 
  41e255:	dec    esi
  41e256:	cs cwde 
  41e258:	cmp    eax,0x248beb70
  41e25d:	jne    0x41e2db
  41e25f:	rcl    BYTE PTR [esi],0x3f
  41e262:	mov    ?,WORD PTR [esi+0x5d]
  41e265:	rcr    DWORD PTR ds:0xdc787b4c,1
  41e26b:	pop    ebp
  41e26c:	imul   DWORD PTR [esp+ebp*1+0x3774ab1c]
  41e273:	not    dh
  41e275:	int3   
  41e276:	and    DWORD PTR gs:[eax+0x2],eax
  41e27a:	sbb    DWORD PTR [ebx+0x73],0xb2755129
  41e281:	pop    ds
  41e282:	mov    ebp,DWORD PTR [edi+0x1c]
  41e285:	mov    DWORD PTR [eax-0x1f],eax
  41e288:	out    dx,eax
  41e289:	cmp    eax,0x7aa91777
  41e28e:	into   
  41e28f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e290:	push   ebx
  41e291:	jmp    0x6960:0xf1cfb841
  41e298:	jp     0x41e2bb
  41e29a:	dec    edi
  41e29b:	(bad)  
  41e29d:	cld    
  41e29e:	icebp  
  41e29f:	fucomi st,st(7)
  41e2a1:	dec    ecx
  41e2a2:	(bad)  
  41e2a3:	(bad)  
  41e2a4:	sti    
  41e2a5:	test   al,0x3b
  41e2a7:	call   0x49c7b558
  41e2ac:	loope  0x41e325
  41e2ae:	sbb    eax,DWORD PTR [eax-0x6eef0b0a]
  41e2b4:	xor    BYTE PTR [esi],dh
  41e2b6:	fs inc esi
  41e2b8:	add    eax,0x93b6309b
  41e2bd:	ret    0xefe4
  41e2c0:	sti    
  41e2c1:	dec    eax
  41e2c2:	pop    ecx
  41e2c3:	xchg   ebx,eax
  41e2c4:	out    dx,eax
  41e2c5:	pop    ebx
  41e2c6:	mov    bh,dh
  41e2c8:	push   ds
  41e2c9:	aam    0x97
  41e2cb:	sub    edi,0x31
  41e2ce:	cwde   
  41e2cf:	adc    eax,0x31bd2790
  41e2d4:	dec    edx
  41e2d5:	fistp  QWORD PTR [edi+0x3d2d72f8]
  41e2db:	nop
  41e2dc:	jns    0x41e2e7
  41e2de:	adc    al,0xc4
  41e2e0:	pusha  
  41e2e1:	push   es
  41e2e2:	scas   al,BYTE PTR es:[edi]
  41e2e3:	popf   
  41e2e4:	jb     0x41e337
  41e2e6:	loope  0x41e2d8
  41e2e8:	sub    DWORD PTR [ebx-0x46],esp
  41e2eb:	iret   
  41e2ec:	mov    dl,BYTE PTR [esi+0x3801e4b4]
  41e2f2:	jb     0x41e31f
  41e2f4:	sbb    DWORD PTR [edx],0x2a
  41e2f7:	push   0x5f
  41e2f9:	gs mov ebp,0x419eeda4
  41e2ff:	push   cs
  41e300:	in     eax,dx
  41e301:	leave  
  41e302:	xchg   esi,eax
  41e303:	js     0x41e377
  41e305:	(bad)  
  41e306:	dec    edx
  41e307:	mov    bh,0x3b
  41e309:	lock mov dh,0xe2
  41e30c:	push   esp
  41e30d:	cld    
  41e30e:	or     cl,BYTE PTR [ebx+0x7a63e4e]
  41e314:	jb     0x41e343
  41e316:	dec    esi
  41e317:	fwait
  41e318:	imul   DWORD PTR [edx+0x4441ad6e]
  41e31e:	jg     0x41e2bb
  41e320:	imul   edx,esp,0x10
  41e323:	push   esi
  41e324:	jnp    0x41e2f3
  41e326:	sbb    eax,ebp
  41e328:	pop    edx
  41e329:	sub    eax,0xf38fbda9
  41e32e:	mov    ebp,0xfadba57
  41e333:	adc    al,0xcc
  41e335:	aas    
  41e336:	xlat   BYTE PTR ds:[ebx]
  41e337:	mov    WORD PTR [edi+0x12a3c3e8],?
  41e33d:	mov    ch,0x50
  41e33f:	add    DWORD PTR [esi+0x3e],edx
  41e342:	ja     0x41e32b
  41e344:	imul   ebx,DWORD PTR [ebp-0x40c20ac3],0xffffffe4
  41e34b:	push   ss
  41e34c:	scas   eax,DWORD PTR es:[edi]
  41e34d:	or     edi,DWORD PTR [ebp-0x6fe079da]
  41e353:	cmp    bh,cl
  41e355:	in     eax,0x23
  41e357:	sti    
  41e358:	add    dl,BYTE PTR [ecx-0x5f4c1f41]
  41e35e:	jmp    FWORD PTR [ecx+0x771097f5]
  41e364:	imul   esi,DWORD PTR [edx+edx*8-0x4b],0xf6f6e9c9
  41e36c:	int3   
  41e36d:	push   es
  41e36e:	sub    eax,DWORD PTR [edx+eax*1]
  41e371:	call   0x924b8c73
  41e376:	stos   BYTE PTR es:[edi],al
  41e377:	jge    0x41e36a
  41e379:	call   0xc8e54e17
  41e37e:	pop    ecx
  41e37f:	jp     0x41e3fc
  41e381:	jecxz  0x41e35f
  41e383:	adc    edx,ebx
  41e385:	into   
  41e386:	in     eax,0xe8
  41e388:	xchg   edi,eax
  41e389:	and    BYTE PTR [ebp+0x12f79541],0x39
  41e390:	out    dx,eax
  41e391:	push   edx
  41e392:	sub    dl,bh
  41e394:	out    0x5b,al
  41e396:	adc    DWORD PTR [ebx],0xa30db45a
  41e39c:	test   eax,0x598320ba
  41e3a1:	repnz lods eax,DWORD PTR ds:[esi]
  41e3a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3a4:	mov    cl,0x15
  41e3a6:	cmp    BYTE PTR [esi],ch
  41e3a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3a9:	jle    0x41e405
  41e3ab:	lds    edx,FWORD PTR [edi+0x1a62cd99]
  41e3b1:	and    eax,0xbf39a532
  41e3b6:	sub    DWORD PTR [ecx+0x6bf8e24d],edi
  41e3bc:	jb     0x41e347
  41e3be:	out    0x1a,al
  41e3c0:	mov    ch,0x65
  41e3c2:	adc    edi,DWORD PTR [ebx-0x184d27f7]
  41e3c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3c9:	cmp    al,0x4d
  41e3cb:	into   
  41e3cc:	fisttp WORD PTR [ebx-0x3cc57065]
  41e3d2:	mov    ds:0x1b7e97ac,al
  41e3d7:	stc    
  41e3d8:	shl    BYTE PTR [edx],0xc2
  41e3db:	jl     0x41e42a
  41e3dd:	add    DWORD PTR [edi],esi
  41e3df:	das    
  41e3e0:	leave  
  41e3e1:	mov    bl,0x5d
  41e3e3:	nop
  41e3e4:	iret   
  41e3e5:	mov    dl,0x35
  41e3e7:	test   eax,0x76eee6f2
  41e3ec:	pop    ecx
  41e3ed:	(bad)  
  41e3ee:	fsubr  QWORD PTR [edi+0x26]
  41e3f1:	ror    DWORD PTR [ebp-0x293a7d96],cl
  41e3f7:	mov    al,0xed
  41e3f9:	out    dx,al
  41e3fa:	test   DWORD PTR [edx],0x3805b99
  41e400:	dec    esi
  41e401:	hlt    
  41e402:	repz xor ah,BYTE PTR [edx+0x25332191]
  41e409:	mov    gs,WORD PTR [ebp-0x4f]
  41e40c:	lahf   
  41e40d:	icebp  
  41e40e:	popa   
  41e40f:	lods   eax,DWORD PTR ds:[esi]
  41e410:	adc    eax,0x6927c5a9
  41e415:	(bad)  
  41e416:	jge    0x41e422
  41e418:	pop    ebx
  41e419:	nop
  41e41a:	inc    eax
  41e41b:	push   eax
  41e41c:	popf   
  41e41d:	dec    ebx
  41e41e:	imul   ebp,DWORD PTR [ecx],0xffffffb1
  41e421:	aam    0xb9
  41e423:	jl     0x41e3ea
  41e425:	ror    ebp,0x87
  41e428:	adc    al,0xc4
  41e42a:	rcl    BYTE PTR [eax-0x6c],cl
  41e42d:	and    dl,bl
  41e42f:	gs iret 
  41e431:	inc    esp
  41e432:	mov    ebp,0xa2059662
  41e437:	add    DWORD PTR [eax+ebp*4-0x5a],esi
  41e43b:	ins    DWORD PTR es:[edi],dx
  41e43c:	mov    ecx,0x4bcd7a00
  41e441:	cwde   
  41e442:	cli    
  41e443:	dec    edx
  41e444:	fldcw  WORD PTR [eax+ecx*4+0x44]
  41e448:	pop    eax
  41e449:	inc    esi
  41e44a:	inc    esi
  41e44b:	outs   dx,DWORD PTR ds:[esi]
  41e44c:	xor    BYTE PTR [edx-0x49ca6888],0xb9
  41e453:	adc    BYTE PTR [eax-0x77f0a695],ch
  41e459:	push   esi
  41e45a:	lahf   
  41e45b:	push   eax
  41e45c:	mov    ds:0x23f1fd1a,eax
  41e461:	int3   
  41e462:	jns    0x41e495
  41e464:	or     BYTE PTR [ebx-0x1a],0xf2
  41e468:	jns    0x41e417
  41e46a:	cmc    
  41e46b:	pusha  
  41e46c:	cdq    
  41e46d:	or     al,0xc7
  41e46f:	push   ss
  41e470:	xchg   esi,eax
  41e471:	(bad)  
  41e472:	xor    al,BYTE PTR es:[ebx+0x1018853e]
  41e479:	sub    esi,DWORD PTR [eax-0x76]
  41e47c:	xor    ecx,DWORD PTR [edi]
  41e47e:	adc    ebp,DWORD PTR [esi]
  41e480:	inc    esi
  41e481:	cwde   
  41e482:	adc    esp,DWORD PTR [edx+0x10c3bccb]
  41e488:	and    al,0x2b
  41e48a:	sbb    BYTE PTR [eax],0x5d
  41e48d:	test   BYTE PTR [edi-0x7c],dh
  41e490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e491:	and    al,0x61
  41e493:	push   ebx
  41e494:	sar    DWORD PTR [bx+si-0x7316],1
  41e499:	add    DWORD PTR [edi],edx
  41e49b:	mov    ebp,esp
  41e49d:	scas   al,BYTE PTR es:[edi]
  41e49e:	mov    ah,0x5f
  41e4a0:	cdq    
  41e4a1:	mov    edi,db6
  41e4a4:	data16 aas 
  41e4a6:	mov    ebx,0x14bf8e53
  41e4ab:	mov    eax,0xb750db7b
  41e4b0:	xchg   edi,eax
  41e4b1:	and    BYTE PTR [esi],al
  41e4b3:	dec    ecx
  41e4b4:	aas    
  41e4b5:	cmp    eax,0x3cffa9e1
  41e4ba:	ficomp DWORD PTR [ecx+ebp*2+0x3a09721]
  41e4c1:	ret    0xee14
  41e4c4:	aam    0x78
  41e4c6:	jecxz  0x41e4c3
  41e4c8:	sub    DWORD PTR [ebx+0x71c6bc9e],edx
  41e4ce:	add    ebp,edx
  41e4d0:	jae    0x41e476
  41e4d2:	pusha  
  41e4d3:	mov    ds:0x79379469,eax
  41e4d8:	pop    ebx
  41e4d9:	hlt    
  41e4da:	cld    
  41e4db:	outs   dx,BYTE PTR ds:[esi]
  41e4dc:	scas   al,BYTE PTR es:[edi]
  41e4dd:	jb     0x41e522
  41e4df:	or     bh,BYTE PTR [edi]
  41e4e1:	xchg   edi,eax
  41e4e2:	hlt    
  41e4e3:	cmc    
  41e4e4:	leave  
  41e4e5:	pop    edx
  41e4e6:	mov    al,0xff
  41e4e8:	jg     0x41e485
  41e4ea:	loope  0x41e543
  41e4ec:	iret   
  41e4ed:	imul   ebx,DWORD PTR [esi+0x73061091],0x98ee4fc
  41e4f7:	jg     0x41e564
  41e4f9:	sub    al,0xb3
  41e4fb:	icebp  
  41e4fc:	pop    eax
  41e4fd:	adc    eax,0x71875fc8
  41e502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e503:	std    
  41e504:	scas   eax,DWORD PTR es:[edi]
  41e505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e506:	mov    ah,0x84
  41e508:	stos   DWORD PTR es:[edi],eax
  41e509:	loop   0x41e4ab
  41e50b:	jb     0x41e4cf
  41e50d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e50e:	or     al,0x71
  41e510:	cmp    BYTE PTR [ecx-0x56457f8e],ch
  41e516:	cmp    ah,BYTE PTR [eax]
  41e518:	pop    edi
  41e519:	(bad)  
  41e51b:	cld    
  41e51c:	jb     0x41e59d
  41e51e:	push   eax
  41e51f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e520:	into   
  41e521:	out    dx,al
  41e522:	push   ds
  41e523:	loopne 0x41e4da
  41e525:	push   cs
  41e526:	cmp    DWORD PTR [ebp+0x69],ecx
  41e529:	(bad)  
  41e52a:	xchg   ecx,eax
  41e52b:	fild   DWORD PTR [ecx]
  41e52d:	repnz mov bl,0x23
  41e530:	lahf   
  41e531:	(bad)  
  41e532:	xchg   esp,eax
  41e533:	xor    BYTE PTR [ecx-0xf],cl
  41e536:	test   al,0x57
  41e538:	inc    ecx
  41e539:	cmp    al,0x4
  41e53b:	ins    BYTE PTR es:[edi],dx
  41e53c:	int    0x5e
  41e53e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e53f:	sub    al,0x1
  41e541:	adc    al,0x8c
  41e543:	add    al,BYTE PTR [edi+edi*2+0x4cc153ee]
  41e54a:	(bad)  
  41e54b:	iret   
  41e54c:	cmp    BYTE PTR [esp+ecx*2],al
  41e54f:	cmp    eax,0xda3598e0
  41e554:	push   esi
  41e555:	test   BYTE PTR [ebp+0x9dbf4d2],ah
  41e55b:	jmp    0x1e75b280
  41e560:	rol    ch,1
  41e562:	pop    ebx
  41e563:	mov    edx,DWORD PTR [edx-0x30]
  41e566:	mov    ebx,0x90d12dc6
  41e56b:	cld    
  41e56c:	ja     0x41e54d
  41e56e:	(bad)  
  41e56f:	sbb    al,0x12
  41e571:	ja     0x41e5cf
  41e573:	adc    edx,DWORD PTR [eax-0x54]
  41e576:	popf   
  41e577:	scas   eax,DWORD PTR es:[edi]
  41e578:	jno    0x41e50f
  41e57a:	clc    
  41e57b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e57c:	add    DWORD PTR [ecx+0x166807ed],0xa50deb1f
  41e586:	mul    DWORD PTR [eax]
  41e588:	jge    0x41e56d
  41e58a:	xor    edi,esi
  41e58c:	sbb    edi,DWORD PTR [ebx+esi*1-0x4c]
  41e590:	xchg   edi,eax
  41e591:	neg    DWORD PTR [ebp+0x445c898b]
  41e597:	rol    esp,0xe0
  41e59a:	(bad)  
  41e59b:	fadd   st(2),st
  41e59d:	es mov eax,0x7ad26296
  41e5a3:	pop    eax
  41e5a4:	xor    DWORD PTR [eax+0x5c],edi
  41e5a7:	inc    ebp
  41e5a8:	push   0x6f
  41e5aa:	cwde   
  41e5ab:	xchg   edx,eax
  41e5ac:	out    dx,al
  41e5ad:	dec    ebx
  41e5ae:	xchg   BYTE PTR [edx+0x44984d2c],ch
  41e5b4:	(bad)  
  41e5b5:	not    BYTE PTR [edx+0x14b60413]
  41e5bb:	ror    ah,0xc4
  41e5be:	sbb    BYTE PTR [ecx+ebp*8-0x2e],ch
  41e5c2:	es inc ebp
  41e5c4:	jno    0x41e5dd
  41e5c6:	adc    DWORD PTR [ebx],esp
  41e5c8:	loopne 0x41e591
  41e5ca:	cs jb  0x41e58a
  41e5cd:	pop    ecx
  41e5ce:	cld    
  41e5cf:	push   eax
  41e5d0:	hlt    
  41e5d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5d2:	push   0x39c6703e
  41e5d7:	sbb    eax,0xca5f58
  41e5dc:	scas   eax,DWORD PTR es:[edi]
  41e5dd:	dec    edx
  41e5de:	pop    ebx
  41e5df:	pop    eax
  41e5e0:	xor    BYTE PTR [ecx],bh
  41e5e2:	sbb    BYTE PTR [ebx+0xd],dh
  41e5e5:	out    0x60,al
  41e5e7:	and    eax,DWORD PTR [edx+0x33c1cd21]
  41e5ed:	out    0x99,al
  41e5ef:	jge    0x41e5b3
  41e5f1:	add    eax,0xc257b059
  41e5f6:	lods   al,BYTE PTR ds:[esi]
  41e5f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5f9:	add    eax,0xd32b0aba
  41e5fe:	mov    ebp,0x18aa7c53
  41e603:	ret    0x79c4
  41e606:	(bad)  
  41e607:	std    
  41e608:	inc    ebx
  41e609:	xor    cl,BYTE PTR [ecx+0x7ebcf5a]
  41e60f:	in     al,dx
  41e610:	mov    ebx,0xc2cf4ad2
  41e615:	into   
  41e616:	add    eax,0x1cd76dac
  41e61b:	xchg   esi,eax
  41e61c:	push   cs
  41e61d:	pop    edx
  41e61e:	push   edi
  41e61f:	in     al,dx
  41e620:	jns    0x41e612
  41e622:	jg     0x41e5c0
  41e624:	mov    eax,ds:0x4c0bd052
  41e629:	retf   0xb99b
  41e62c:	inc    ecx
  41e62d:	or     ecx,0x4de86bc4
  41e633:	(bad)  
  41e635:	loope  0x41e60e
  41e637:	shl    DWORD PTR [edi],1
  41e639:	cli    
  41e63a:	adc    eax,0x77cc1619
  41e63f:	xchg   ecx,eax
  41e640:	push   esp
  41e641:	mov    edi,DWORD PTR [eax]
  41e643:	sbb    al,BYTE PTR [esi+0x18d9b42d]
  41e649:	cmp    BYTE PTR [ecx-0x6ceede],cl
  41e64f:	cmp    al,0x73
  41e651:	jl     0x41e67d
  41e653:	addr16 sub eax,0x8c800f16
  41e659:	dec    eax
  41e65a:	retf   
  41e65b:	add    DWORD PTR [edx+0x6a],ecx
  41e65e:	push   esi
  41e65f:	int3   
  41e660:	xchg   esp,eax
  41e661:	dec    edx
  41e662:	(bad)  
  41e663:	daa    
  41e664:	adc    DWORD PTR ds:0x8ffe1557,esi
  41e66a:	call   0xbe61:0xdf9d74f1
  41e671:	fs mov ch,0x5a
  41e674:	jne    0x41e663
  41e676:	outs   dx,BYTE PTR ds:[esi]
  41e677:	shl    DWORD PTR [ecx+0x1469b775],0x22
  41e67e:	ret    0x30a1
  41e681:	mov    ebx,0xa7b80bab
  41e686:	addr16 xchg ch,bh
  41e689:	(bad)  
  41e68b:	add    bl,BYTE PTR [ecx]
  41e68d:	and    al,0xe0
  41e68f:	icebp  
  41e690:	mov    al,ds:0xbd6d5215
  41e695:	aad    0x4
  41e697:	pop    ss
  41e698:	test   BYTE PTR [edi],dl
  41e69a:	daa    
  41e69b:	xchg   ebp,eax
  41e69c:	xor    al,0xbc
  41e69e:	pop    edi
  41e69f:	fisttp DWORD PTR [ebx+0x5245fee1]
  41e6a5:	retf   0xb38e
  41e6a8:	repz in eax,dx
  41e6aa:	or     DWORD PTR [ebx],eax
  41e6ac:	hlt    
  41e6ad:	dec    esp
  41e6ae:	sbb    esp,DWORD PTR [eax+edi*4-0x6c8c91cf]
  41e6b5:	mov    cl,0x97
  41e6b7:	sbb    DWORD PTR [ebx+0x70],edi
  41e6ba:	dec    ebp
  41e6bb:	jmp    0x9bff:0x465262b8
  41e6c2:	loop   0x41e707
  41e6c4:	in     eax,0x42
  41e6c6:	mov    DWORD PTR [esi+0x6a],esi
  41e6c9:	push   ds
  41e6ca:	jmp    0x1e75cb73
  41e6cf:	fimul  WORD PTR [ecx]
  41e6d1:	inc    edx
  41e6d2:	and    eax,0xa87e9257
  41e6d7:	and    BYTE PTR [edx-0x296f9682],0xcb
  41e6de:	mov    dl,0x68
  41e6e0:	shr    edx,cl
  41e6e2:	cmp    al,0xfd
  41e6e4:	push   ebx
  41e6e5:	les    eax,FWORD PTR [ecx+ebp*8]
  41e6e8:	(bad)  
  41e6e9:	in     eax,dx
  41e6ea:	mov    cl,0x3b
  41e6ec:	paddsw mm2,QWORD PTR [edi+0x5c]
  41e6f0:	dec    edx
  41e6f1:	ins    DWORD PTR es:[edi],dx
  41e6f2:	and    esp,DWORD PTR [ebx]
  41e6f4:	(bad)  
  41e6f5:	mov    ecx,0x5be15468
  41e6fa:	popa   
  41e6fb:	pop    edi
  41e6fc:	sub    dh,BYTE PTR [ebp-0x26]
  41e6ff:	(bad)  
  41e700:	into   
  41e701:	dec    edi
  41e702:	sub    ch,BYTE PTR [esi+0x21]
  41e705:	mov    al,0x61
  41e707:	dec    esi
  41e708:	mov    al,ds:0xa8cbafac
  41e70d:	add    dl,BYTE PTR [esi]
  41e70f:	mov    dh,0xb1
  41e711:	mov    ds:0xe0f92613,eax
  41e716:	pop    eax
  41e717:	ins    DWORD PTR es:[edi],dx
  41e718:	mov    bl,0x5d
  41e71a:	pop    ecx
  41e71b:	test   DWORD PTR [eax+0x1820ab47],ebx
  41e721:	in     al,0x59
  41e723:	ret    0x6953
  41e726:	pop    ecx
  41e727:	mov    ds:0xed3b3511,eax
  41e72c:	loop   0x41e6d8
  41e72e:	mul    esi
  41e730:	retf   0x9e08
  41e733:	adc    ecx,DWORD PTR [eax]
  41e735:	mov    eax,0x1ea302c1
  41e73a:	xchg   ecx,ebx
  41e73c:	fild   WORD PTR [edx-0xf107c93]
  41e742:	jecxz  0x41e73d
  41e744:	jns    0x41e740
  41e746:	movlps QWORD PTR [ecx+0x4d6cd0ef],xmm7
  41e74d:	xlat   BYTE PTR ds:[ebx]
  41e74e:	inc    ebp
  41e74f:	stos   BYTE PTR es:[edi],al
  41e750:	sub    dh,cl
  41e752:	cwde   
  41e753:	sbb    eax,0xf8f2bc05
  41e758:	cmp    bl,dl
  41e75a:	stos   BYTE PTR es:[edi],al
  41e75b:	xchg   edx,eax
  41e75c:	and    DWORD PTR [ebx],eax
  41e75e:	xchg   ebx,eax
  41e75f:	xlat   BYTE PTR ds:[ebx]
  41e760:	jg     0x41e7a6
  41e762:	dec    esi
  41e763:	xchg   DWORD PTR [esp+esi*8-0x57],edi
  41e767:	test   eax,0xa26e73bf
  41e76c:	test   eax,0x5600147f
  41e771:	mov    al,ds:0xbe201299
  41e776:	int3   
  41e777:	pop    ebp
  41e778:	inc    DWORD PTR [esi]
  41e77a:	mov    al,ds:0xa9d49eda
  41e77f:	mov    cl,0x97
  41e781:	(bad)  
  41e782:	jecxz  0x41e7cb
  41e784:	ret    0x7147
  41e787:	xlat   BYTE PTR ds:[ebx]
  41e788:	jmp    FWORD PTR [esi+0x368df94]
  41e78e:	pushf  
  41e78f:	mov    bl,0x4c
  41e791:	jno    0x41e76b
  41e793:	test   al,0xa5
  41e795:	call   0x1ed0:0x546c3155
  41e79c:	gs test eax,0x93c88fc7
  41e7a2:	cmp    dl,BYTE PTR ds:0xa050a25
  41e7a8:	xor    eax,0x97695f9
  41e7ad:	adc    al,0xef
  41e7af:	das    
  41e7b0:	fist   WORD PTR [esi+0x76]
  41e7b3:	push   0xa6108388
  41e7b8:	(bad)  
  41e7b9:	neg    BYTE PTR [edx-0x55]
  41e7bc:	mov    edi,0xc56ea5
  41e7c1:	jp     0x41e809
  41e7c3:	mov    eax,0x9a5009c6
  41e7c8:	cdq    
  41e7c9:	retf   0x50b
  41e7cc:	xchg   ebp,eax
  41e7cd:	jecxz  0x41e7df
  41e7cf:	pop    ecx
  41e7d0:	pop    DWORD PTR [edi]
  41e7d2:	xchg   esp,eax
  41e7d3:	add    bl,ch
  41e7d5:	lods   eax,DWORD PTR ds:[esi]
  41e7d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7d7:	les    ebp,FWORD PTR [ebx-0x42]
  41e7da:	ret    
  41e7db:	iret   
  41e7dc:	out    dx,al
  41e7dd:	push   ebx
  41e7de:	or     DWORD PTR [edi+esi*4],0x50
  41e7e2:	dec    DWORD PTR [eax+0x7a]
  41e7e5:	aaa    
  41e7e6:	jae    0x41e807
  41e7e8:	mov    dh,0x43
  41e7ea:	pop    es
  41e7eb:	and    dh,al
  41e7ed:	in     al,dx
  41e7ee:	js     0x41e813
  41e7f0:	or     BYTE PTR [eax-0x5a783b89],0x4f
  41e7f7:	les    edi,FWORD PTR [eax+eax*1+0x7d]
  41e7fb:	ins    DWORD PTR es:[edi],dx
  41e7fc:	jns    0x41e85e
  41e7fe:	aaa    
  41e7ff:	xor    al,ch
  41e801:	dec    DWORD PTR ds:0x1726ff42
  41e807:	cdq    
  41e808:	cmc    
  41e809:	push   es
  41e80a:	cs aad 0xbc
  41e80d:	lds    edx,FWORD PTR [ebp+ecx*8+0x70]
  41e811:	fcomp  st(4)
  41e813:	cmc    
  41e814:	push   es
  41e815:	xchg   esp,eax
  41e816:	repz mov ds:0x91a91e1a,al
  41e81c:	stos   DWORD PTR es:[edi],eax
  41e81d:	push   0x9b83a134
  41e822:	dec    ecx
  41e823:	cmp    ch,BYTE PTR [eax-0x15]
  41e826:	ins    DWORD PTR es:[edi],dx
  41e827:	lods   eax,DWORD PTR ds:[esi]
  41e828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e829:	xchg   esi,eax
  41e82a:	mov    ch,0x33
  41e82c:	adc    eax,0x8b851f25
  41e831:	scas   al,BYTE PTR es:[edi]
  41e832:	imul   edx,DWORD PTR [esp+edx*1-0x2f],0xffffffba
  41e837:	add    BYTE PTR ds:[edx],dl
  41e83a:	aad    0xfe
  41e83c:	inc    eax
  41e83d:	dec    ecx
  41e83e:	ret    
  41e83f:	jnp    0x41e87b
  41e841:	cmp    cl,BYTE PTR [ebx+0x3c958e8e]
  41e847:	adc    al,0x90
  41e849:	xchg   DWORD PTR [ebx+0x29],esp
  41e84c:	push   esi
  41e84d:	int    0x26
  41e84f:	jb     0x41e8a9
  41e851:	fbld   TBYTE PTR [esi]
  41e853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e854:	aaa    
  41e855:	xchg   DWORD PTR [edi],ebp
  41e857:	xor    DWORD PTR [edx],0x24
  41e85a:	repnz imul esp,DWORD PTR [bx+di+0x3f],0x2f
  41e860:	xchg   ecx,eax
  41e861:	fdivr  st,st(0)
  41e863:	mov    bh,0xbf
  41e865:	sbb    edx,DWORD PTR [ebx]
  41e867:	frstor [esi+0x790d1290]
  41e86d:	iret   
  41e86e:	push   ecx
  41e86f:	jno    0x41e7fc
  41e871:	sbb    esp,DWORD PTR [edx+0xb]
  41e874:	push   ecx
  41e875:	cmp    eax,0xe003b2db
  41e87a:	clc    
  41e87b:	push   edi
  41e87c:	gs in  eax,0x2d
  41e87f:	mov    dh,BYTE PTR [esi-0x7f444024]
  41e885:	jmp    0x521e6808
  41e88a:	mov    eax,DWORD PTR [ecx-0x1b]
  41e88d:	jbe    0x41e874
  41e88f:	shl    al,0xb7
  41e892:	jge    0x41e875
  41e894:	mov    al,ds:0xb6dd4a6a
  41e899:	rol    BYTE PTR [ebx-0x29],0x89
  41e89d:	inc    edi
  41e89e:	jmp    0x41e855
  41e8a0:	pushf  
  41e8a1:	adc    dl,BYTE PTR [esi]
  41e8a3:	pop    es
  41e8a4:	inc    esp
  41e8a5:	rol    BYTE PTR [ebp-0x5f],0x70
  41e8a9:	idiv   BYTE PTR [ecx+0x40]
  41e8ac:	mov    al,ds:0x68292d1b
  41e8b1:	mov    esi,0x7d4e14a
  41e8b6:	jge    0x41e89c
  41e8b8:	sbb    al,0x6f
  41e8ba:	lahf   
  41e8bb:	ror    ebp,0x78
  41e8be:	push   esp
  41e8bf:	leave  
  41e8c0:	(bad)  
  41e8c1:	mov    al,0xb8
  41e8c3:	dec    edi
  41e8c4:	lock xchg esp,eax
  41e8c6:	js     0x41e8f0
  41e8c8:	std    
  41e8c9:	lock cmp al,0x1f
  41e8cc:	shl    BYTE PTR [edx],cl
  41e8ce:	daa    
  41e8cf:	fiadd  WORD PTR [ecx-0x6]
  41e8d2:	sbb    BYTE PTR [ecx-0x6c],ch
  41e8d5:	jg     0x41e901
  41e8d7:	sub    al,0x8d
  41e8d9:	mov    cl,0x58
  41e8db:	cmp    BYTE PTR [edx+edx*1+0x1e],al
  41e8df:	js     0x41e927
  41e8e1:	jne    0x41e8b6
  41e8e3:	cwde   
  41e8e4:	xor    bh,BYTE PTR [edx+0x683209e6]
  41e8ea:	js     0x41e87f
  41e8ec:	cli    
  41e8ed:	cmp    dh,bl
  41e8ef:	mov    ebp,0xd83c9608
  41e8f4:	mov    al,0x75
  41e8f6:	leave  
  41e8f7:	rcr    BYTE PTR [ebx+eax*8],0x3b
  41e8fb:	push   esi
  41e8fc:	test   BYTE PTR [edx+0x70c3aac1],0x7a
  41e903:	addr16 push eax
  41e905:	mov    ah,0x67
  41e907:	daa    
  41e908:	sub    BYTE PTR [edi-0x32a98bac],bl
  41e90e:	fwait
  41e90f:	test   DWORD PTR [eax],edx
  41e911:	retf   
  41e912:	in     eax,dx
  41e913:	in     al,dx
  41e914:	sbb    eax,0xee9c5d0d
  41e919:	call   0xdc7ee76a
  41e91e:	outs   dx,BYTE PTR cs:[esi]
  41e920:	sub    DWORD PTR [esi-0x2cebbec7],ebx
  41e926:	je     0x41e8f2
  41e928:	rol    DWORD PTR [eax],cl
  41e92a:	pusha  
  41e92b:	ror    BYTE PTR [ebp+0x5b],cl
  41e92e:	push   edx
  41e92f:	push   si
  41e931:	or     ch,ch
  41e933:	mov    ch,0x33
  41e935:	addr16 inc edi
  41e937:	pop    es
  41e938:	mov    edx,0xaaa562c9
  41e93d:	or     esi,eax
  41e93f:	jae    0x41e992
  41e941:	or     DWORD PTR ds:0xeed75271,0x3b60d2f1
  41e94b:	sbb    bh,cl
  41e94d:	inc    BYTE PTR [edx]
  41e94f:	inc    esp
  41e950:	jmp    0x41e8f3
  41e952:	aaa    
  41e953:	shl    bl,1
  41e955:	out    dx,eax
  41e956:	jmp    0x7b7be383
  41e95b:	xchg   al,ah
  41e95d:	imul   edi,DWORD PTR [eax-0x67],0x16
  41e961:	mov    WORD PTR [esi+0xd7dd914],cs
  41e967:	std    
  41e968:	sbb    DWORD PTR [edi-0x2fcd7419],edx
  41e96e:	mov    bh,0xf9
  41e970:	jns    0x41e96a
  41e972:	jns    0x41e926
  41e974:	call   0x4d02:0xb2914112
  41e97b:	or     dh,dh
  41e97d:	inc    esi
  41e97e:	fstp   QWORD PTR [eax+0x4d58ab51]
  41e984:	sbb    al,0xa7
  41e986:	cmp    eax,0x3799fa44
  41e98b:	cli    
  41e98c:	xchg   ebp,eax
  41e98d:	dec    ebp
  41e98e:	xor    DWORD PTR [ecx-0xe5992c3],esi
  41e994:	xor    DWORD PTR [ebx-0x64],0xf17b5976
  41e99b:	loopne 0x41e944
  41e99d:	test   eax,0xf848e069
  41e9a2:	popa   
  41e9a3:	xor    al,0x12
  41e9a5:	and    ch,BYTE PTR ds:[eax-0x5c]
  41e9a9:	cld    
  41e9aa:	sti    
  41e9ab:	push   ds
  41e9ac:	sub    al,0xa2
  41e9ae:	sub    eax,0x8178e8e4
  41e9b3:	clc    
  41e9b4:	dec    esp
  41e9b5:	rcr    BYTE PTR [eax+0x77],0x3
  41e9b9:	ja     0x41e9fc
  41e9bb:	add    al,BYTE PTR [edx-0x18]
  41e9be:	inc    ah
  41e9c0:	inc    esi
  41e9c1:	pop    ss
  41e9c2:	sbb    BYTE PTR [edi-0x366385c9],ch
  41e9c8:	mov    ebp,0xc3b26c1b
  41e9cd:	mov    al,0x27
  41e9cf:	push   ebx
  41e9d0:	(bad)
  41e9d4:	nop
  41e9d5:	mov    ecx,0xe19bdccf
  41e9da:	jg     0x41e999
  41e9dc:	push   0xffffffea
  41e9de:	sub    bl,cl
  41e9e0:	inc    bh
  41e9e2:	dec    edx
  41e9e3:	pop    ebp
  41e9e4:	xor    BYTE PTR [ecx],bl
  41e9e6:	in     al,0x5
  41e9e8:	push   ss
  41e9e9:	into   
  41e9ea:	sub    dl,al
  41e9ec:	out    0xc7,eax
  41e9ee:	push   ds
  41e9ef:	mov    ch,0xa7
  41e9f1:	popf   
  41e9f2:	cli    
  41e9f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9f4:	and    DWORD PTR [ecx+0x2],ebx
  41e9f7:	and    DWORD PTR cs:[ecx+0x1c],esp
  41e9fb:	sbb    al,0xec
  41e9fd:	ss popa 
  41e9ff:	push   ebp
  41ea00:	outs   dx,DWORD PTR ds:[esi]
  41ea01:	pop    esp
  41ea02:	sahf   
  41ea03:	sbb    BYTE PTR [eax-0x23],ch
  41ea06:	(bad)  
  41ea07:	mov    BYTE PTR ds:0x3608d1cb,ah
  41ea0d:	retf   0xacb8
  41ea10:	dec    eax
  41ea11:	call   FWORD PTR [edx+0x44]
  41ea14:	sbb    ebp,DWORD PTR [eax]
  41ea16:	inc    eax
  41ea17:	mov    esp,DWORD PTR [ecx-0x112c30b9]
  41ea1d:	xchg   esi,eax
  41ea1e:	mov    bh,0xf2
  41ea20:	mov    ebp,0x6248d4bc
  41ea25:	or     al,0x70
  41ea27:	test   ah,0x79
  41ea2a:	dec    eax
  41ea2b:	mov    esi,0x291f4f66
  41ea30:	jecxz  0x41ea3f
  41ea32:	(bad)  
  41ea33:	(bad)  
  41ea34:	daa    
  41ea35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea36:	push   esi
  41ea37:	mov    esp,0x7394dd2b
  41ea3c:	call   0x79cc00f5
  41ea41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea42:	cmp    al,0x10
  41ea44:	call   0x926fec0c
  41ea49:	xlat   BYTE PTR ds:[ebx]
  41ea4a:	(bad)  
  41ea4b:	aad    0xe0
  41ea4d:	retf   0x385c
  41ea50:	mov    eax,0x9c1c5b47
  41ea55:	sbb    al,0x55
  41ea57:	and    ebp,DWORD PTR [edi-0x54]
  41ea5a:	push   eax
  41ea5b:	dec    ebp
  41ea5c:	fcmovu st,st(2)
  41ea5e:	ret    0x8fbd
  41ea61:	xlat   BYTE PTR ds:[ebx]
  41ea62:	jge    0x41ea28
  41ea64:	add    BYTE PTR [edi+0x5e],bl
  41ea67:	add    ecx,DWORD PTR [edi-0x62fd1dc3]
  41ea6d:	loope  0x41ea5b
  41ea6f:	mov    edx,0xfc04e018
  41ea74:	leave  
  41ea75:	loopne 0x41ea6c
  41ea77:	hlt    
  41ea78:	mov    ch,0x6
  41ea7a:	sbb    BYTE PTR [edx],dh
  41ea7c:	ret    0x62b4
  41ea7f:	push   edx
  41ea80:	jl     0x41eac0
  41ea82:	out    0xb5,eax
  41ea84:	dec    edx
  41ea85:	xchg   esi,eax
  41ea86:	jecxz  0x41eac5
  41ea88:	and    eax,0x75ce61de
  41ea8d:	div    BYTE PTR [ebp+0x47890ba3]
  41ea93:	jp     0x41eab4
  41ea95:	jmp    0x26f2:0xb7bd1990
  41ea9c:	in     al,0xd7
  41ea9e:	xchg   ebp,eax
  41ea9f:	mov    ah,0x7e
  41eaa1:	add    eax,0x54b6b6f7
  41eaa6:	dec    esi
  41eaa7:	(bad)  ds:0x8b83e592
  41eaad:	(bad)  
  41eaae:	fld    st(5)
  41eab0:	aad    0xb4
  41eab2:	push   edx
  41eab3:	cmp    bh,dh
  41eab5:	push   esp
  41eab6:	inc    ebp
  41eab7:	sbb    DWORD PTR [edi-0x67],edx
  41eaba:	daa    
  41eabb:	push   edx
  41eabc:	leave  
  41eabd:	add    dl,BYTE PTR [edi+ebx*1-0x333b8573]
  41eac4:	mov    ?,esi
  41eac6:	mov    edx,0x3990f5ce
  41eacb:	and    BYTE PTR [edi+0x380c7aef],ch
  41ead1:	packuswb mm1,QWORD PTR [ecx]
  41ead4:	fcomp  DWORD PTR [esi-0x79d5b320]
  41eada:	in     al,0xea
  41eadc:	pushf  
  41eadd:	jp     0x41ea86
  41eadf:	add    esi,DWORD PTR [edx]
  41eae1:	int3   
  41eae2:	(bad)
  41eae5:	(bad)  [edx-0x4c]
  41eae8:	imul   ecx,esi,0x88ac0af3
  41eaee:	xor    edi,DWORD PTR ds:0xe94c5d5e
  41eaf4:	cdq    
  41eaf5:	pop    ss
  41eaf6:	imul   DWORD PTR [ebx]
  41eaf8:	mov    ah,0x4d
  41eafa:	jl     0x41eb05
  41eafc:	sbb    al,0x21
  41eafe:	sti    
  41eaff:	adc    ch,BYTE PTR [ebp-0x10]
  41eb02:	div    DWORD PTR [edi]
  41eb04:	das    
  41eb05:	call   0xefea:0xa6bb15f0
  41eb0c:	xor    DWORD PTR [eax+0x3014d2b1],ebx
  41eb12:	add    al,0xc8
  41eb14:	ins    BYTE PTR es:[edi],dx
  41eb15:	(bad)  
  41eb16:	int3   
  41eb17:	jbe    0x41ea9f
  41eb19:	add    edi,DWORD PTR [edi+0x6933c4e4]
  41eb1f:	xchg   DWORD PTR ds:0x4dadc3ec,ebx
  41eb25:	add    ah,dh
  41eb27:	mov    ah,0x82
  41eb29:	sbb    al,0xc9
  41eb2b:	retf   
  41eb2c:	inc    esi
  41eb2d:	fmul   QWORD PTR [edi+0x3e]
  41eb30:	rcl    DWORD PTR [ebx],0xd5
  41eb33:	punpckhbw mm4,QWORD PTR [esi+0x1a]
  41eb37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb38:	push   cs
  41eb39:	mov    ds:0x381ff867,eax
  41eb3e:	(bad)
  41eb43:	in     eax,0x89
  41eb45:	lock jo 0x41ebc3
  41eb48:	jecxz  0x41eb0e
  41eb4a:	inc    esi
  41eb4b:	aas    
  41eb4c:	rcr    BYTE PTR [edi-0x7],1
  41eb4f:	cmp    DWORD PTR [edx],edi
  41eb51:	sub    cl,bl
  41eb53:	ret    
  41eb54:	mov    ecx,0xec23a650
  41eb59:	mov    ds:0xece0bcc,eax
  41eb5e:	jb     0x41eb7f
  41eb60:	ins    DWORD PTR es:[edi],dx
  41eb61:	add    BYTE PTR [ebx+ecx*2],0x5
  41eb65:	sbb    BYTE PTR [edi+ecx*1-0x5b7d8a3d],0x5e
  41eb6d:	int3   
  41eb6e:	add    ch,BYTE PTR [edi-0x6f109fe6]
  41eb74:	(bad)  
  41eb75:	ds mov al,0xbb
  41eb78:	and    BYTE PTR [esp+ecx*1+0x7423fa0d],0x8e
  41eb80:	cmp    DWORD PTR [ebx+0x49173248],0xffffff89
  41eb87:	pop    edx
  41eb88:	jae    0x41eb2b
  41eb8a:	es inc edx
  41eb8c:	loop   0x41ebf0
  41eb8e:	add    BYTE PTR [edx-0x3e],bl
  41eb91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb92:	je     0x41ebb1
  41eb94:	das    
  41eb95:	mov    dl,0x12
  41eb97:	xchg   edi,eax
  41eb98:	adc    BYTE PTR [ebx-0x427bd0be],ch
  41eb9e:	sub    eax,0x4b048386
  41eba3:	xor    ebx,DWORD PTR ds:0x9eedcf
  41eba9:	das    
  41ebaa:	(bad)  
  41ebab:	xchg   eax,eax
  41ebad:	sahf   
  41ebae:	xor    ecx,DWORD PTR [ebx-0x63]
  41ebb1:	idiv   DWORD PTR [ecx]
  41ebb3:	scas   eax,DWORD PTR es:[edi]
  41ebb4:	out    0xe2,eax
  41ebb6:	cli    
  41ebb7:	loop   0x41eb59
  41ebb9:	cmp    eax,0xaddea0bf
  41ebbe:	cmp    eax,0x91103eeb
  41ebc4:	int    0x4c
  41ebc6:	lahf   
  41ebc7:	int3   
  41ebc8:	cmc    
  41ebc9:	mov    bh,0x5d
  41ebcb:	mov    ?,WORD PTR [edi+0x478f8718]
  41ebd1:	xor    al,0xc9
  41ebd3:	ss in  al,dx
  41ebd5:	js     0x41ec4e
  41ebd7:	rol    DWORD PTR [ecx+eax*1],cl
  41ebda:	out    dx,eax
  41ebdb:	pop    edx
  41ebdc:	retf   0x498b
  41ebdf:	push   ss
  41ebe0:	xchg   cl,dh
  41ebe2:	hlt    
  41ebe3:	xchg   esi,eax
  41ebe4:	int    0x57
  41ebe6:	mov    dh,0xb0
  41ebe8:	xchg   esp,eax
  41ebe9:	outs   dx,DWORD PTR ds:[esi]
  41ebea:	in     al,0x96
  41ebec:	pusha  
  41ebed:	or     al,0x39
  41ebef:	mov    dh,0xfb
  41ebf1:	push   cs
  41ebf2:	mov    ch,0x33
  41ebf4:	sbb    ecx,DWORD PTR [edx-0x6e]
  41ebf7:	or     BYTE PTR [edi+eax*4-0x4d],ah
  41ebfb:	sub    edx,DWORD PTR [ebp+0x56bc448]
  41ec01:	pop    esi
  41ec02:	push   esi
  41ec03:	pop    edx
  41ec04:	aad    0x73
  41ec06:	lea    ecx,[edx-0x18]
  41ec09:	call   0xd7ee:0x18811c2e
  41ec10:	or     BYTE PTR ss:[eax-0x37bf6976],bh
  41ec17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec18:	fisubr WORD PTR [esi-0x774d6de]
  41ec1e:	ffreep st(5)
  41ec20:	call   0x223f01c9
  41ec25:	aaa    
  41ec26:	addr16 je 0x41ebe2
  41ec29:	push   ds
  41ec2a:	adc    ecx,DWORD PTR [esi+ecx*1-0x68128c6f]
  41ec31:	mul    BYTE PTR [esi+0x64]
  41ec34:	cld    
  41ec35:	dec    ebx
  41ec36:	sahf   
  41ec37:	sbb    BYTE PTR ds:0xe86258d6,al
  41ec3d:	and    ebp,edx
  41ec3f:	jnp    0x41eca3
  41ec41:	jge    0x41ec5d
  41ec43:	inc    esp
  41ec44:	call   0x76c2:0x867b3746
  41ec4b:	ss pop edi
  41ec4d:	test   eax,0xf1cbda35
  41ec52:	and    BYTE PTR [esi],bl
  41ec54:	mov    esi,0xd2e13bbe
  41ec59:	pop    edx
  41ec5a:	mov    ch,0x7c
  41ec5c:	pop    esi
  41ec5d:	aas    
  41ec5e:	adc    DWORD PTR [ebx-0x17],ecx
  41ec61:	pusha  
  41ec62:	fwait
  41ec63:	loop   0x41ec71
  41ec65:	retf   0xfc0d
  41ec68:	std    
  41ec69:	mov    al,0x40
  41ec6b:	jne    0x41ec66
  41ec6d:	pop    ebx
  41ec6e:	(bad)  [edx]
  41ec70:	fst    QWORD PTR [edi]
  41ec72:	jns    0x41ece9
  41ec74:	test   eax,0x6161cd9c
  41ec79:	push   ecx
  41ec7a:	inc    esi
  41ec7b:	mov    bl,0x48
  41ec7d:	arpl   WORD PTR [edx+esi*8],si
  41ec80:	cmp    eax,0x528f7c5
  41ec85:	sar    BYTE PTR [edx-0xcbedcb9],1
  41ec8b:	fcom   QWORD PTR [ebp+0x5609cbb2]
  41ec91:	fadd   QWORD PTR [ecx+eax*8]
  41ec94:	lock invd 
  41ec97:	mov    dl,BYTE PTR [ebp-0x5c5006ba]
  41ec9d:	and    BYTE PTR [ecx],ah
  41ec9f:	sub    esi,edi
  41eca1:	adc    al,0x90
  41eca3:	retf   
  41eca4:	pop    ecx
  41eca5:	lea    ecx,[esi-0x18c8a0b1]
  41ecab:	mov    cl,0x9b
  41ecad:	fsub   DWORD PTR [edx]
  41ecaf:	add    bh,BYTE PTR [eax+eax*1+0x75]
  41ecb3:	inc    ebx
  41ecb4:	outs   dx,DWORD PTR ds:[esi]
  41ecb5:	mov    al,ds:0x8464a74b
  41ecba:	loopne 0x41ed11
  41ecbc:	lds    esi,FWORD PTR [ebx+0x19a05317]
  41ecc2:	data16 mov al,ds:0xdbc21fcd
  41ecc8:	push   ebp
  41ecc9:	add    ecx,DWORD PTR [edx+ebx*8-0x5c5ddb2c]
  41ecd0:	outs   dx,BYTE PTR ds:[esi]
  41ecd1:	dec    edx
  41ecd2:	out    0x40,eax
  41ecd4:	ret    0x86e8
  41ecd7:	jne    0x41ec72
  41ecd9:	and    al,0x39
  41ecdb:	rol    ebp,cl
  41ecdd:	xchg   edi,eax
  41ecde:	not    BYTE PTR [ebp+eax*4+0x27]
  41ece2:	ja     0x41ec91
  41ece4:	or     al,0x62
  41ece6:	loop   0x41ec94
  41ece8:	jnp    0x41ece6
  41ecea:	mov    WORD PTR ds:0x57bfd508,?
  41ecf0:	fild   WORD PTR [eax+0x70]
  41ecf3:	mul    DWORD PTR [esi-0x52f72384]
  41ecf9:	mov    ebp,0x22a2cfd1
  41ecfe:	fisttp DWORD PTR [edx+0x2ee8c79a]
  41ed04:	sub    al,0x0
  41ed06:	xor    DWORD PTR [esi],ecx
  41ed08:	popa   
  41ed09:	xchg   esi,eax
  41ed0a:	xchg   ebp,eax
  41ed0b:	lods   al,BYTE PTR ds:[esi]
  41ed0c:	test   ebx,edx
  41ed0e:	sahf   
  41ed0f:	retf   0x2640
  41ed12:	xlat   BYTE PTR ds:[ebx]
  41ed13:	dec    eax
  41ed14:	(bad)  
  41ed15:	mov    ds:0xac921b12,al
  41ed1a:	and    DWORD PTR [esi+0x5ec25263],eax
  41ed20:	sar    DWORD PTR [esi],1
  41ed22:	call   0xf2912624
  41ed27:	mov    eax,esi
  41ed29:	data16 mov dl,0xf0
  41ed2c:	pop    esp
  41ed2d:	dec    ebp
  41ed2e:	ds push 0x50b5c4e1
  41ed34:	call   0xd993:0x5cdaf06f
  41ed3b:	(bad)  
  41ed3c:	sbb    eax,0x52da86d8
  41ed41:	fcmovu st,st(2)
  41ed43:	sahf   
  41ed44:	out    dx,eax
  41ed45:	xor    BYTE PTR [edi],ch
  41ed47:	fsub   QWORD PTR [edx]
  41ed49:	rol    esi,cl
  41ed4b:	loopne 0x41ed1f
  41ed4d:	dec    DWORD PTR [edi]
  41ed4f:	dec    ebx
  41ed50:	and    al,0x8c
  41ed52:	ret    
  41ed53:	bound  esp,QWORD PTR [ebp-0x10f4b409]
  41ed59:	cmp    ebp,ecx
  41ed5b:	xchg   BYTE PTR [eax],al
  41ed5d:	push   0xffffffc7
  41ed5f:	mov    ecx,0x156e5a16
  41ed64:	hlt    
  41ed65:	jg     0x41ecf6
  41ed67:	push   edi
  41ed68:	into   
  41ed69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed6a:	pop    ecx
  41ed6b:	sub    eax,0x4ec8f782
  41ed70:	in     eax,dx
  41ed71:	sub    BYTE PTR es:[bx+0x8],ah
  41ed76:	and    eax,0x1b438941
  41ed7b:	gs lods al,BYTE PTR gs:[esi]
  41ed7e:	xchg   BYTE PTR [edx+ecx*1-0xc],al
  41ed82:	mov    bl,0x6e
  41ed84:	or     al,0x45
  41ed86:	iret   
  41ed87:	add    al,0xd2
  41ed89:	test   DWORD PTR [eax],ebp
  41ed8b:	(bad)  
  41ed8c:	out    0x2f,al
  41ed8e:	or     DWORD PTR [esi+0xa],ebx
  41ed91:	jle    0x41edef
  41ed93:	push   ss
  41ed94:	xor    esp,eax
  41ed96:	mov    ds:0xf84c0072,al
  41ed9b:	and    dl,BYTE PTR [edi]
  41ed9d:	dec    ecx
  41ed9e:	inc    esp
  41ed9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eda0:	fdivr  QWORD PTR [ebp-0x5a]
  41eda3:	mov    al,ds:0x235d3591
  41eda8:	cmp    BYTE PTR [ecx-0x225ff185],al
  41edae:	repz sub ch,BYTE PTR [edx+0x7a]
  41edb2:	jl     0x41eda2
  41edb4:	cmp    al,0xe3
  41edb6:	cmp    eax,0x73d6cbfe
  41edbb:	mov    al,0xad
  41edbd:	sbb    eax,0x29ff7ec6
  41edc2:	add    eax,edx
  41edc4:	jnp    0xb2ca29a8
  41edca:	sahf   
  41edcb:	not    BYTE PTR [eax]
  41edcd:	and    BYTE PTR [ecx-0x1e],dh
  41edd0:	xchg   esp,eax
  41edd1:	jno    0x41ed6d
  41edd3:	jne    0x41edb5
  41edd5:	aad    0x50
  41edd7:	(bad)  
  41edd8:	or     BYTE PTR [ecx+0x6e],0xbc
  41eddc:	fcmovb st,st(2)
  41edde:	fsubr  QWORD PTR [ecx+0x3d85ab33]
  41ede4:	mov    ecx,0x708a2d0f
  41ede9:	dec    edi
  41edea:	into   
  41edeb:	add    eax,0xbd391bfa
  41edf0:	push   0xffffff91
  41edf2:	imul   ecx,esp,0xdf8db2af
  41edf8:	out    dx,al
  41edf9:	push   ecx
  41edfa:	sbb    edx,DWORD PTR [esi]
  41edfc:	adc    BYTE PTR [eax],ch
  41edfe:	test   BYTE PTR [eax],ah
  41ee00:	lea    esp,[ebx+0x79949818]
  41ee06:	or     al,0xf1
  41ee08:	mov    eax,0x3be19cde
  41ee0d:	push   edi
  41ee0e:	je     0x41ed93
  41ee10:	jle    0x41ee45
  41ee12:	xor    DWORD PTR [edx],ebp
  41ee14:	test   DWORD PTR [ebx+0x51],edx
  41ee17:	ret    
  41ee18:	push   edx
  41ee19:	adc    cl,BYTE PTR [edx-0x66]
  41ee1c:	pushf  
  41ee1d:	pop    ss
  41ee1e:	into   
  41ee1f:	(bad)  
  41ee20:	pop    edx
  41ee21:	call   0x3cb5e762
  41ee26:	dec    edx
  41ee27:	gs (bad) 
  41ee29:	fld    QWORD PTR [esi-0x259a89db]
  41ee2f:	push   ss
  41ee30:	xchg   BYTE PTR [eax-0x71],dh
  41ee33:	pop    ds
  41ee34:	or     dh,BYTE PTR [edx+0x57]
  41ee37:	fild   QWORD PTR [edi-0x6d8caba]
  41ee3d:	mov    eax,esp
  41ee3f:	enter  0x4f1e,0x11
  41ee43:	in     eax,0x2b
  41ee45:	fistp  DWORD PTR [edx-0x43]
  41ee48:	inc    ebp
  41ee49:	mov    eax,0xb7ae9a10
  41ee4e:	shl    DWORD PTR [esi],0xcb
  41ee51:	sub    al,0x99
  41ee53:	and    DWORD PTR [ebx+ebx*8+0x7fafdd70],0xffffff92
  41ee5b:	xor    BYTE PTR [esi],0xe8
  41ee5e:	xor    eax,0x59d25864
  41ee63:	mov    ebx,0xe2277e51
  41ee68:	ds dec esp
  41ee6a:	ficom  WORD PTR [eax]
  41ee6c:	jle    0x41ee64
  41ee6e:	cmp    eax,0x503c94d8
  41ee73:	mov    eax,ds:0x66c64811
  41ee78:	ds in  al,dx
  41ee7a:	xchg   esi,eax
  41ee7b:	je     0x41ee5b
  41ee7d:	pop    ds
  41ee7e:	xor    al,0x39
  41ee80:	(bad)  
  41ee81:	in     eax,dx
  41ee82:	adc    al,0xa6
  41ee84:	fistp  DWORD PTR [ebp+0x21a218b2]
  41ee8a:	add    dl,BYTE PTR ds:0xd5fad553
  41ee90:	out    dx,eax
  41ee91:	daa    
  41ee92:	addr16 cld 
  41ee94:	mov    WORD PTR [esi+edx*4+0x24141c9],es
  41ee9b:	nop
  41ee9c:	jmp    0x87e6:0x57c61905
  41eea3:	inc    ecx
  41eea4:	add    edx,edx
  41eea6:	je     0x41ef13
  41eea8:	inc    edx
  41eea9:	pop    eax
  41eeaa:	call   0x1187fe04
  41eeaf:	dec    edx
  41eeb0:	and    al,0x42
  41eeb2:	jge    0x41ee5f
  41eeb4:	cmp    DWORD PTR [edx+0x7065b653],eax
  41eeba:	push   ecx
  41eebb:	aas    
  41eebc:	or     esi,esp
  41eebe:	sub    al,0x7d
  41eec0:	adc    ah,BYTE PTR [edx-0x4c08d47f]
  41eec6:	idiv   bh
  41eec8:	fimul  WORD PTR [edx+0x7c426e08]
  41eece:	xor    eax,0xdf6f4307
  41eed3:	arpl   cx,bp
  41eed5:	jns    0x41ee99
  41eed7:	pop    ebx
  41eed8:	jne    0x41eeab
  41eeda:	std    
  41eedb:	addr16 push ss
  41eedd:	mov    ah,0xc2
  41eedf:	call   0x9b6b:0x2a77c44e
  41eee6:	int    0xec
  41eee8:	cs xchg edi,eax
  41eeea:	or     edx,DWORD PTR [esi-0x61340c2]
  41eef0:	out    dx,eax
  41eef1:	cmp    eax,0xb1deab4e
  41eef6:	adc    al,0xe5
  41eef8:	(bad)  
  41eef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eefa:	mov    ch,0x9d
  41eefc:	out    0xb6,al
  41eefe:	gs data16 jbe 0x41ef03
  41ef02:	add    eax,0x951e8d16
  41ef07:	stc    
  41ef08:	sub    esp,esp
  41ef0a:	scas   eax,DWORD PTR es:[edi]
  41ef0b:	call   0x29233541
  41ef10:	gs ins BYTE PTR es:[edi],dx
  41ef12:	add    BYTE PTR ds:0xa468e219,ah
  41ef18:	lahf   
  41ef19:	xor    eax,0xfb9ea5bf
  41ef1e:	jmp    0x81f2:0xf5358d56
  41ef25:	mov    al,0x61
  41ef27:	or     DWORD PTR [eax+0x29],edx
  41ef2a:	push   ebp
  41ef2b:	pop    es
  41ef2c:	add    eax,0xa104b184
  41ef31:	mov    eax,0x82d03020
  41ef36:	push   ss
  41ef37:	mov    edx,0x1daf482a
  41ef3c:	or     dh,cl
  41ef3e:	mov    bh,0x5
  41ef40:	ret    0xf978
  41ef43:	int3   
  41ef44:	xor    ecx,DWORD PTR [eax-0x72]
  41ef47:	iret   
  41ef48:	xchg   ebp,eax
  41ef49:	cmp    BYTE PTR [edi+edx*8-0x1cc74018],cl
  41ef50:	ret    0x59fa
  41ef53:	sbb    BYTE PTR [edx+0x31660797],0x9
  41ef5a:	xchg   ebp,eax
  41ef5b:	shl    DWORD PTR [ebx+0xb2dc4f5],1
  41ef61:	push   esi
  41ef62:	je     0x41efa6
  41ef64:	imul   eax,DWORD PTR [eax+0x36824a96],0xffffffed
  41ef6b:	pop    es
  41ef6c:	sbb    eax,0xae226a67
  41ef71:	sbb    DWORD PTR [edx-0x728cbf2c],ecx
  41ef77:	les    edi,FWORD PTR [edi-0x561df811]
  41ef7d:	and    ebp,DWORD PTR [esi+0x4ce0b6c0]
  41ef83:	outs   dx,DWORD PTR ds:[esi]
  41ef84:	or     BYTE PTR [edx+0x3c],bh
  41ef87:	ror    ecx,0xeb
  41ef8a:	leave  
  41ef8b:	push   ds
  41ef8c:	jp     0x41ef9d
  41ef8e:	add    esp,esp
  41ef90:	(bad)  
  41ef92:	push   edi
  41ef93:	imul   edi,DWORD PTR [esi],0x91aefe44
  41ef99:	jno    0x41ef5b
  41ef9b:	add    dh,bh
  41ef9d:	add    eax,0x9f6a4e66
  41efa2:	stos   DWORD PTR es:[edi],eax
  41efa3:	cmp    BYTE PTR [eax+ecx*1+0x7c99b276],0x98
  41efab:	sti    
  41efac:	cwde   
  41efad:	cmp    ecx,DWORD PTR [esi+0x241ec83b]
  41efb3:	add    al,0x61
  41efb5:	cmp    DWORD PTR [edi+edx*1+0x56],esi
  41efb9:	mov    edx,DWORD PTR [ecx+0x2efc7b1]
  41efbf:	pop    ss
  41efc0:	ds or  al,0x55
  41efc3:	pop    ecx
  41efc4:	fild   QWORD PTR [edi+0x3c3aaf9a]
  41efca:	add    DWORD PTR ds:0xaaa7578d,ebp
  41efd0:	in     al,dx
  41efd1:	jmp    0xb131:0xe736b1bc
  41efd8:	out    dx,eax
  41efd9:	ja     0x41efda
  41efdb:	or     al,0x56
  41efdd:	das    
  41efde:	cmp    esp,DWORD PTR [edx-0x7e]
  41efe1:	push   ebp
  41efe2:	inc    esi
  41efe3:	in     eax,0x49
  41efe5:	inc    esp
  41efe6:	adc    al,0xcc
  41efe8:	adc    eax,ebp
  41efea:	cmp    edi,ecx
  41efec:	sbb    ecx,esp
  41efee:	mov    ch,0x68
  41eff0:	(bad)  [esi+0x1d]
  41eff3:	js     0x41efed
  41eff5:	xor    DWORD PTR [ebx+0x5e511943],0x26
  41effc:	adc    eax,0x2b53959
  41f001:	adc    eax,0x3b687c73
  41f006:	jg     0x41ef96
  41f008:	mov    eax,ds:0xd3d6e5ae
  41f00d:	push   cs
  41f00e:	cwde   
  41f00f:	ds pop ebx
  41f011:	dec    edx
  41f012:	fbld   TBYTE PTR [eax]
  41f014:	mov    ebp,0xdcc0f3a3
  41f019:	scas   al,BYTE PTR es:[edi]
  41f01a:	into   
  41f01b:	sub    eax,0xdbbb9679
  41f020:	repnz and BYTE PTR [esi],bl
  41f023:	ret    
  41f024:	pop    ss
  41f025:	stc    
  41f026:	jb     0x41f04c
  41f028:	push   esp
  41f029:	xor    ecx,ecx
  41f02b:	push   esi
  41f02c:	jle    0x41f08e
  41f02e:	sbb    BYTE PTR [esi],dh
  41f030:	mov    ebp,0x45de28b6
  41f035:	lock jno 0x41f03a
  41f038:	mov    bl,0xb2
  41f03a:	aad    0x62
  41f03c:	mov    ebx,DWORD PTR [ecx+esi*1+0xd]
  41f040:	(bad)  
  41f041:	sbb    al,BYTE PTR [eax+0xd]
  41f044:	nop
  41f045:	mov    bl,0xbb
  41f047:	mov    ecx,0xb9bc3cab
  41f04c:	sub    eax,0x5b9ec5f2
  41f051:	xchg   esi,eax
  41f052:	iret   
  41f053:	cmc    
  41f054:	(bad)
  41f057:	je     0x41f014
  41f059:	mov    ebx,0x8991ec40
  41f05e:	dec    BYTE PTR [edi+0x795415d3]
  41f064:	push   ecx
  41f065:	aaa    
  41f066:	out    0x93,eax
  41f068:	out    0x4b,al
  41f06a:	mov    esi,0x156c44b2
  41f06f:	sahf   
  41f070:	jmp    0xe957452e
  41f075:	ja     0x41f025
  41f077:	cdq    
  41f078:	sub    ebx,eax
  41f07a:	or     dh,BYTE PTR [ecx+0x57d7fce4]
  41f080:	fsub   QWORD PTR [esi]
  41f082:	jno    0x41f0a1
  41f084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f085:	gs out dx,eax
  41f087:	xchg   ebx,eax
  41f088:	imul   esi,esp,0xffffff90
  41f08b:	call   0x7054:0x2197464c
  41f092:	iret   
  41f093:	pop    ss
  41f094:	cli    
  41f095:	repnz add bh,dh
  41f098:	mov    ds:0xac91fbeb,al
  41f09d:	jo     0x41f106
  41f09f:	enter  0xf600,0x3a
  41f0a3:	popf   
  41f0a4:	and    eax,0x6698428
  41f0a9:	dec    ebx
  41f0aa:	xchg   ebp,eax
  41f0ab:	mov    bl,0xf3
  41f0ad:	pushf  
  41f0ae:	pop    ebx
  41f0af:	bound  esp,QWORD PTR [edx+0x56]
  41f0b2:	mov    eax,ds:0xeef2c020
  41f0b7:	lea    edx,[edi+0x73]
  41f0ba:	cld    
  41f0bb:	mov    esi,0xea04712c
  41f0c0:	hlt    
  41f0c1:	adc    BYTE PTR [ebx+0x3d],bh
  41f0c4:	in     eax,0x2e
  41f0c6:	add    eax,0x327bb825
  41f0cb:	jne    0x41f086
  41f0cd:	in     al,0x4d
  41f0cf:	imul   ebx,DWORD PTR [edi-0x2a262cae],0x1df5ab01
  41f0d9:	fistp  DWORD PTR [ebx+0x6a9b3e55]
  41f0df:	push   edi
  41f0e0:	call   0x2f65dc2a
  41f0e5:	xor    dl,bh
  41f0e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0e8:	ins    BYTE PTR es:[edi],dx
  41f0e9:	jmp    0x41f15a
  41f0eb:	sbb    bh,BYTE PTR [edx]
  41f0ed:	xchg   esp,eax
  41f0ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0ef:	rcl    DWORD PTR [ecx],cl
  41f0f1:	inc    ebx
  41f0f2:	mov    gs,esi
  41f0f4:	inc    ecx
  41f0f5:	ret    
  41f0f6:	test   ecx,edx
  41f0f8:	popf   
  41f0f9:	imul   ebp,edi,0xffffff91
  41f0fc:	ret    0x8b18
  41f0ff:	xchg   edi,eax
  41f100:	lea    ebx,[edi+0x41527303]
  41f106:	(bad)  
  41f107:	or     ecx,DWORD PTR es:[edi+edi*4]
  41f10b:	pushf  
  41f10c:	sbb    ah,BYTE PTR [esi+0x346412b3]
  41f112:	jmp    0x41f0ad
  41f114:	mov    al,0x1a
  41f116:	pop    es
  41f117:	and    al,bl
  41f119:	loope  0x41f0b1
  41f11b:	jae    0x41f150
  41f11d:	jnp    0x41f0d4
  41f11f:	sbb    cl,bl
  41f121:	rcl    BYTE PTR ds:0x704d8442,0xdd
  41f128:	pop    es
  41f129:	sbb    BYTE PTR ds:0xa9c1cf96,dh
  41f12f:	jne    0x41f168
  41f131:	(bad)  
  41f133:	shr    BYTE PTR [ecx-0x38],cl
  41f136:	mov    WORD PTR [esi-0xac682bc],ds
  41f13c:	pushf  
  41f13d:	or     BYTE PTR [edx+edx*1+0x33],ah
  41f141:	sub    al,0xfb
  41f143:	push   ebp
  41f144:	mov    edi,?
  41f146:	adc    eax,eax
  41f148:	and    BYTE PTR ds:[ebx+ecx*1+0x57],bh
  41f14d:	push   0xa23d6c25
  41f152:	mov    eax,ds:0x1f7ded53
  41f157:	cmp    al,0xc5
  41f159:	ins    BYTE PTR es:[edi],dx
  41f15a:	pop    ebx
  41f15b:	adc    BYTE PTR [edi+0x7ac63c34],dl
  41f161:	xor    BYTE PTR [ebp+0x1e],0xfe
  41f165:	mov    ecx,0x67df7cf7
  41f16a:	fiadd  WORD PTR [ebx]
  41f16c:	pop    ecx
  41f16d:	xlat   BYTE PTR ds:[ebx]
  41f16e:	leave  
  41f16f:	and    ebx,ebp
  41f171:	cli    
  41f172:	and    BYTE PTR [ecx+edi*1-0x5b4b3d81],bh
  41f179:	(bad)  
  41f17a:	pop    ds
  41f17b:	mov    cl,0x64
  41f17d:	popa   
  41f17e:	int    0x1a
  41f180:	imul   ebp,DWORD PTR [esp+0x34],0xf4fa5648
  41f188:	dec    esp
  41f189:	dec    ebx
  41f18a:	loopne 0x41f1ca
  41f18c:	sti    
  41f18d:	pop    es
  41f18e:	mov    cl,0x3c
  41f190:	nop
  41f191:	dec    eax
  41f192:	in     al,dx
  41f193:	jne    0x41f174
  41f195:	mov    BYTE PTR [ebx-0x5dbceb61],dl
  41f19b:	pop    es
  41f19c:	lahf   
  41f19d:	mov    esi,0xf1161ee7
  41f1a2:	cmp    dh,BYTE PTR [edi-0x56]
  41f1a5:	pop    ss
  41f1a6:	imul   ebx,edx,0xe
  41f1a9:	ins    DWORD PTR es:[edi],dx
  41f1aa:	test   eax,0x81e760b9
  41f1af:	fs inc ebp
  41f1b1:	mov    ds:0x430f931a,eax
  41f1b6:	add    BYTE PTR [ecx+0x1a71ffbe],dl
  41f1bc:	inc    BYTE PTR cs:0xd32bf75
  41f1c3:	xchg   ebx,eax
  41f1c4:	ret    
  41f1c5:	ins    BYTE PTR es:[edi],dx
  41f1c6:	xchg   ecx,eax
  41f1c7:	mov    WORD PTR [ecx+0x5a6d720f],ss
  41f1cd:	jl     0x41f178
  41f1cf:	les    esi,FWORD PTR [ebx+eiz*1]
  41f1d2:	and    edx,esp
  41f1d4:	push   cs
  41f1d5:	jo     0x41f233
  41f1d7:	mov    eax,ds:0x1eba8b45
  41f1dc:	adc    BYTE PTR [esp+eax*4+0x3062b6fc],ch
  41f1e3:	test   al,0x9c
  41f1e5:	lods   al,BYTE PTR ds:[esi]
  41f1e6:	mov    al,0x4b
  41f1e8:	mov    WORD PTR [ebx+eax*1],?
  41f1eb:	adc    BYTE PTR [ebx],0xf0
  41f1ee:	das    
  41f1ef:	xchg   esi,eax
  41f1f0:	arpl   WORD PTR [eax+edi*8-0x73a2fab5],bx
  41f1f7:	stc    
  41f1f8:	(bad)  
  41f1f9:	jmp    0x41f1d6
  41f1fb:	add    BYTE PTR [edx],dh
  41f1fd:	push   esi
  41f1fe:	xchg   ebx,eax
  41f1ff:	mov    cl,cl
  41f201:	popaw  
  41f203:	dec    edx
  41f204:	mov    ds:0xa8cf07a7,al
  41f209:	pop    edi
  41f20a:	fwait
  41f20b:	jae    0x41f240
  41f20d:	cmp    bh,BYTE PTR [ebp+0x3c]
  41f210:	(bad)  
  41f211:	fbld   TBYTE PTR [ebx+0x782f633e]
  41f217:	outs   dx,BYTE PTR ds:[esi]
  41f218:	add    esi,DWORD PTR [esi-0x39]
  41f21b:	repz inc esp
  41f21d:	xlat   BYTE PTR ds:[ebx]
  41f21e:	imul   BYTE PTR [ecx+ebx*1]
  41f221:	mov    dh,0xef
  41f223:	lahf   
  41f224:	sbb    DWORD PTR [eax-0x47],0x22fe0e56
  41f22b:	sbb    esp,DWORD PTR [ecx-0x2872bd93]
  41f231:	sub    eax,0x2092917d
  41f236:	push   0x66b23720
  41f23b:	jae    0x41f21b
  41f23d:	sbb    BYTE PTR [esi+0x438f6416],0x5d
  41f244:	in     al,0xaf
  41f246:	sub    DWORD PTR ds:0x94d616dd,eax
  41f24c:	in     al,0x6b
  41f24e:	mov    al,ds:0x4c8242ee
  41f253:	xor    ebx,0xffffff9e
  41f256:	out    dx,al
  41f257:	les    ebp,FWORD PTR ds:0xfd9ed7e2
  41f25d:	aad    0x6b
  41f25f:	(bad)  
  41f260:	jl     0x41f262
  41f262:	mov    ecx,DWORD PTR [esi+esi*2+0x2a0bc34e]
  41f269:	das    
  41f26a:	pop    esi
  41f26b:	bnd jmp 0x14d6ecc9
  41f271:	call   0x1363:0xf5c139b4
  41f278:	not    BYTE PTR [ebp-0x6a]
  41f27b:	pop    DWORD PTR [esi]
  41f27d:	dec    edx
  41f27e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f27f:	and    eax,ebp
  41f281:	xor    DWORD PTR [ebx],eax
  41f283:	idiv   al
  41f285:	cmc    
  41f286:	jbe    0x41f2ea
  41f288:	push   ds
  41f289:	xchg   ebp,eax
  41f28a:	push   es
  41f28b:	je     0x41f28a
  41f28d:	xor    DWORD PTR [esi-0x66],edi
  41f290:	mov    cl,0x39
  41f292:	inc    DWORD PTR [ecx]
  41f294:	(bad)  
  41f295:	fwait
  41f296:	push   es
  41f297:	xchg   esp,eax
  41f298:	push   0xbf4e6d30
  41f29d:	out    0x81,al
  41f29f:	sub    ah,bh
  41f2a1:	(bad)  
  41f2a2:	xor    BYTE PTR [ebx-0x52],ah
  41f2a5:	jp     0x41f2c6
  41f2a7:	fwait
  41f2a8:	jmp    0x2683:0xb232dc5d
  41f2af:	repnz sub BYTE PTR [esi],dl
  41f2b2:	mov    eax,0xdc4f3cd
  41f2b7:	rol    DWORD PTR [edi+0x6a],0x84
  41f2bb:	inc    esp
  41f2bc:	inc    edx
  41f2bd:	mov    esp,0x133318b8
  41f2c2:	jp     0x41f2eb
  41f2c4:	cmp    ah,BYTE PTR [edx]
  41f2c6:	or     BYTE PTR [eax-0x25],ch
  41f2c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2ca:	call   0x97aa1ae6
  41f2cf:	ret    
  41f2d0:	aaa    
  41f2d1:	loopne 0x41f34b
  41f2d3:	and    al,0x95
  41f2d5:	xor    DWORD PTR [edx],eax
  41f2d7:	out    0x1,al
  41f2d9:	push   edi
  41f2da:	std    
  41f2db:	dec    ecx
  41f2dc:	sbb    BYTE PTR [eax],0xb0
  41f2df:	es int3 
  41f2e1:	(bad)  
  41f2e2:	aaa    
  41f2e3:	stos   BYTE PTR es:[edi],al
  41f2e4:	add    DWORD PTR [ecx-0x38],edx
  41f2e7:	mov    eax,0x37b72471
  41f2ec:	in     al,0xf3
  41f2ee:	xchg   esp,eax
  41f2ef:	pop    ebp
  41f2f0:	cld    
  41f2f1:	push   ebx
  41f2f2:	xor    eax,DWORD PTR [ebx]
  41f2f4:	out    dx,eax
  41f2f5:	add    BYTE PTR [ebx],0x22
  41f2f8:	daa    
  41f2f9:	or     DWORD PTR [esi+0x7d],ebp
  41f2fc:	xchg   ebx,eax
  41f2fd:	push   ds
  41f2fe:	push   cs
  41f2ff:	mov    ds:0xa94b3f63,eax
  41f304:	in     eax,dx
  41f305:	cmp    ecx,DWORD PTR [ebp-0x51]
  41f308:	xor    eax,0xa2595656
  41f30d:	nop
  41f30e:	or     al,0xef
  41f310:	jle    0x41f380
  41f312:	icebp  
  41f313:	pusha  
  41f314:	push   esi
  41f315:	xchg   esp,eax
  41f316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f317:	and    BYTE PTR [eax],dl
  41f319:	popf   
  41f31a:	cmp    esi,edi
  41f31c:	shl    BYTE PTR [esi],1
  41f31e:	jb     0x41f2a3
  41f320:	mov    ebp,0x4ad70afb
  41f325:	adc    DWORD PTR [eax],0x9512db55
  41f32b:	add    eax,0xcd652a6
  41f330:	ficom  WORD PTR [edx]
  41f332:	adc    al,0x20
  41f334:	dec    edx
  41f335:	pop    ds
  41f336:	pushf  
  41f337:	sbb    ebp,DWORD PTR gs:[ebp+0x3051214e]
  41f33e:	test   esp,ebp
  41f340:	dec    esp
  41f341:	lea    ebx,[esi-0x356f0c36]
  41f347:	dec    ebx
  41f348:	rcl    BYTE PTR [ecx],0x1d
  41f34b:	lods   eax,DWORD PTR ds:[esi]
  41f34c:	dec    esi
  41f34d:	popf   
  41f34e:	test   al,0x38
  41f350:	mov    esi,0xd3f56dd1
  41f355:	mov    ebp,DWORD PTR [edi+ecx*1+0xb]
  41f359:	adc    DWORD PTR [ecx+edi*2-0x18becd90],eax
  41f360:	add    eax,0xc4e35144
  41f365:	jnp    0x41f308
  41f367:	arpl   WORD PTR [ecx],cx
  41f369:	mov    al,ds:0xb706dd3e
  41f36e:	mov    eax,ds:0x65d24c83
  41f373:	sub    BYTE PTR [ebp+0x3f],ch
  41f376:	inc    ebp
  41f377:	in     al,0xc4
  41f379:	es mov esp,0xebc96f73
  41f37f:	cwde   
  41f380:	jbe    0x41f33c
  41f382:	xchg   edx,eax
  41f383:	inc    ebx
  41f384:	add    al,0xc0
  41f386:	aaa    
  41f387:	pop    esp
  41f388:	sbb    DWORD PTR [eax],ebx
  41f38a:	inc    esp
  41f38b:	pusha  
  41f38c:	(bad)  
  41f38d:	loopne 0x41f40e
  41f38f:	jmp    0x7c81ca05
  41f394:	pop    ebx
  41f395:	mov    ds,WORD PTR [esi]
  41f397:	add    edx,DWORD PTR [eax]
  41f399:	(bad)  
  41f39a:	pop    ebx
  41f39b:	sub    esp,DWORD PTR [ebp+0x618146d3]
  41f3a1:	fstp   TBYTE PTR [edi+0x77]
  41f3a4:	jl     0x41f3b6
  41f3a6:	in     al,dx
  41f3a7:	out    dx,eax
  41f3a8:	pop    es
  41f3a9:	and    eax,edx
  41f3ab:	pop    ebx
  41f3ac:	iret   
  41f3ad:	gs call 0x66e84eda
  41f3b3:	call   0x3b7482bd
  41f3b8:	xchg   DWORD PTR [eax+0x5b],eax
  41f3bb:	mov    ebp,0x62071fcf
  41f3c0:	mov    esi,0xd0b2cd4a
  41f3c5:	imul   esp,eax,0x238680a3
  41f3cb:	or     BYTE PTR [ecx-0x4dc069c9],ah
  41f3d1:	ins    DWORD PTR es:[edi],dx
  41f3d2:	fs or  eax,0x3b16f918
  41f3d8:	push   ecx
  41f3d9:	enter  0x2359,0x18
  41f3dd:	inc    eax
  41f3de:	ret    
  41f3df:	cmp    al,0x16
  41f3e1:	in     eax,0xb4
  41f3e3:	xchg   ebp,eax
  41f3e4:	in     al,dx
  41f3e5:	xchg   esp,eax
  41f3e6:	inc    ebx
  41f3e7:	repnz (bad) 
  41f3e9:	push   ds
  41f3ea:	js     0x41f36c
  41f3ec:	and    esi,0xb271dcf2
  41f3f2:	pop    edx
  41f3f3:	xchg   ebx,eax
  41f3f4:	(bad)  
  41f3f5:	in     al,0x26
  41f3f7:	mov    eax,ds:0x5fdc6848
  41f3fc:	sub    dl,0xcf
  41f3ff:	pop    eax
  41f400:	dec    ebx
  41f401:	in     eax,dx
  41f402:	sahf   
  41f403:	scas   eax,DWORD PTR es:[edi]
  41f404:	adc    edx,DWORD PTR ds:0x2d6ec65d
  41f40a:	lea    ebp,[edx-0x61]
  41f40d:	dec    ebx
  41f40e:	out    dx,al
  41f40f:	push   eax
  41f410:	sub    eax,0x593da501
  41f415:	jbe    0x41f436
  41f417:	add    al,0x4
  41f419:	sub    BYTE PTR [eax-0x4c],0x95
  41f41d:	adc    ebp,esi
  41f41f:	xchg   BYTE PTR [si+0x5f80],ch
  41f424:	outs   dx,BYTE PTR ds:[esi]
  41f425:	and    ah,0x73
  41f428:	aam    0xe1
  41f42a:	ins    DWORD PTR es:[edi],dx
  41f42b:	and    dl,BYTE PTR [edi+eiz*2]
  41f42e:	nop
  41f42f:	imul   edi,DWORD PTR [edx-0x79],0x47
  41f433:	shl    DWORD PTR [ecx+0x12],0xa0
  41f437:	sahf   
  41f438:	retf   
  41f439:	dec    ecx
  41f43a:	nop
  41f43b:	push   ebp
  41f43c:	adc    DWORD PTR [ebx+eiz*2-0x30],edx
  41f440:	xlat   BYTE PTR ds:[ebx]
  41f441:	aas    
  41f442:	and    BYTE PTR [edi+0x4],bl
  41f445:	fbld   TBYTE PTR [esi+0x2b]
  41f448:	lahf   
  41f449:	sar    DWORD PTR [edi+0x78],1
  41f44c:	aaa    
  41f44d:	fs xchg esp,eax
  41f44f:	les    eax,FWORD PTR fs:[edi+0x336f3b34]
  41f456:	or     eax,0x647da7b4
  41f45b:	imul   esp,DWORD PTR [esi+0x1a],0x79
  41f45f:	push   edi
  41f460:	xor    edx,ebx
  41f462:	pop    edi
  41f463:	add    eax,0xadddb9d0
  41f468:	cs addr16 out 0xbe,eax
  41f46c:	xor    ebp,DWORD PTR [ebx-0x3b531c9c]
  41f472:	mov    al,ds:0xfdc4099
  41f477:	xor    DWORD PTR [bx],esi
  41f47a:	pop    ebp
  41f47b:	jg     0x41f484
  41f47d:	push   ebx
  41f47e:	sti    
  41f47f:	div    ah
  41f481:	mov    bh,0xe3
  41f483:	xor    eax,0xefc99590
  41f488:	arpl   WORD PTR [ecx+0xd],sp
  41f48b:	mov    ebp,0x576fee54
  41f490:	loopne 0x41f4ef
  41f492:	ins    BYTE PTR es:[edi],dx
  41f493:	aas    
  41f494:	out    dx,al
  41f495:	nop
  41f496:	das    
  41f497:	pop    ss
  41f498:	mov    esi,0xcdffc070
  41f49d:	mov    WORD PTR [ecx+0x2f839083],es
  41f4a3:	pop    esi
  41f4a4:	xchg   BYTE PTR [ebx-0x59],cl
  41f4a7:	sbb    al,0xc6
  41f4a9:	test   eax,0x5d367e84
  41f4ae:	into   
  41f4af:	push   edx
  41f4b0:	repz retf 0x8d9d
  41f4b4:	hlt    
  41f4b5:	jae    0x41f4c9
  41f4b7:	sub    ebp,DWORD PTR [ecx-0x75b3b01]
  41f4bd:	push   ss
  41f4be:	scas   al,BYTE PTR es:[edi]
  41f4bf:	inc    ebp
  41f4c0:	sar    DWORD PTR [ebx+0x1],cl
  41f4c3:	jl     0x41f510
  41f4c5:	mov    ah,0x69
  41f4c7:	pop    eax
  41f4c8:	out    0xab,al
  41f4ca:	jbe    0x41f539
  41f4cc:	dec    ebx
  41f4cd:	fidiv  WORD PTR [esi]
  41f4cf:	mov    es:0x6499358e,eax
  41f4d5:	int3   
  41f4d6:	ins    DWORD PTR es:[edi],dx
  41f4d7:	jmp    0xde6192c3
  41f4dc:	or     eax,DWORD PTR [edi+eiz*8+0x5bb17fe9]
  41f4e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4e4:	push   eax
  41f4e5:	or     al,0x98
  41f4e7:	xchg   ecx,eax
  41f4e8:	pop    ss
  41f4e9:	cmp    DWORD PTR [eax],edi
  41f4eb:	mov    dl,0x48
  41f4ed:	mov    bh,0x8a
  41f4ef:	sub    ebx,edi
  41f4f1:	sub    DWORD PTR [edx-0x7a46cb71],0xffffffca
  41f4f8:	adc    eax,ebp
  41f4fa:	jne    0x41f4f7
  41f4fc:	xchg   ecx,eax
  41f4fd:	rcr    dl,0xf9
  41f500:	outs   dx,BYTE PTR ds:[esi]
  41f501:	retf   0x6f47
  41f504:	and    ebx,DWORD PTR [ecx]
  41f506:	mov    WORD PTR ds:0x89ad93e1,ds
  41f50c:	cmp    al,al
  41f50e:	jle    0x41f529
  41f510:	sar    BYTE PTR [esi+eiz*4],0x32
  41f514:	fdivr  DWORD PTR [edi+0x70]
  41f517:	and    bh,0x35
  41f51a:	pop    edi
  41f51b:	xor    DWORD PTR [edi+0x265cf9bd],0x5f
  41f522:	rol    BYTE PTR [edx+0x677cde64],cl
  41f528:	and    DWORD PTR [edi+0xda12601],ebp
  41f52e:	addr16 int 0x27
  41f531:	data16 xlat BYTE PTR ds:[ebx]
  41f533:	scas   al,BYTE PTR es:[edi]
  41f534:	ss adc al,0x61
  41f537:	mov    dl,0x48
  41f539:	sub    DWORD PTR [esp+edi*4],esi
  41f53c:	mov    al,ds:0x37618ec7
  41f541:	cmp    DWORD PTR [eax],edi
  41f543:	sub    ah,BYTE PTR [ebp-0x61]
  41f546:	dec    esp
  41f547:	push   eax
  41f548:	mov    edi,0xd76a1da3
  41f54d:	sub    eax,0x148731ee
  41f552:	mov    al,0x43
  41f554:	jge    0x41f56b
  41f556:	cmp    eax,0x8f5c759e
  41f55b:	sub    dl,BYTE PTR [ebx-0x1b12af58]
  41f561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f562:	lea    ebp,[ecx-0x4]
  41f565:	jmp    0x41f568
  41f567:	je     0x41f52a
  41f569:	(bad)  
  41f56b:	ins    BYTE PTR es:[edi],dx
  41f56c:	icebp  
  41f56d:	mov    al,ds:0xae7217e0
  41f572:	mov    bh,0xb
  41f574:	add    cl,BYTE PTR [ebx+0x1fc05fd]
  41f57a:	gs push 0x2f
  41f57d:	into   
  41f57e:	ss test eax,0xade5a09d
  41f584:	jg     0x41f50c
  41f586:	jecxz  0x41f5c4
  41f588:	push   0x6de694e7
  41f58d:	jg     0x41f602
  41f58f:	popf   
  41f590:	add    DWORD PTR [esi],0xbf93c17d
  41f596:	sub    DWORD PTR es:[edi-0x1a827674],eax
  41f59d:	and    ah,0x68
  41f5a0:	pop    esp
  41f5a1:	stos   DWORD PTR es:[edi],eax
  41f5a2:	xor    eax,0xe8f89eea
  41f5a7:	clc    
  41f5a8:	xchg   esi,eax
  41f5a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5aa:	repz inc ebp
  41f5ac:	call   0x8a96:0x1eceac89
  41f5b3:	fs inc edx
  41f5b5:	outs   dx,DWORD PTR ds:[esi]
  41f5b6:	xchg   esp,eax
  41f5b7:	inc    ebp
  41f5b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b9:	(bad)  
  41f5bb:	xchg   DWORD PTR [ebx-0x37a2c394],edi
  41f5c1:	and    cl,BYTE PTR [eax]
  41f5c3:	mov    BYTE PTR [edx+0x1d],dl
  41f5c6:	xchg   ebx,eax
  41f5c7:	jno    0x41f61a
  41f5c9:	shl    DWORD PTR ds:0x707f3ce8,cl
  41f5cf:	push   edx
  41f5d0:	dec    esi
  41f5d2:	es mov ebp,0x427895b1
  41f5d8:	icebp  
  41f5d9:	jp     0x41f55c
  41f5db:	je     0x41f606
  41f5dd:	add    al,0xe6
  41f5df:	push   esi
  41f5e0:	add    eax,0x2e1dce57
  41f5e5:	sbb    DWORD PTR ds:0x1eebd7e5,0x6039550
  41f5ef:	jmp    0xa9da6fb1
  41f5f4:	and    eax,0x80ab12f6
  41f5fa:	sti    
  41f5fb:	sbb    al,0x63
  41f5fd:	shr    BYTE PTR [ebp-0x7a3a40fb],1
  41f603:	cmp    al,bl
  41f605:	jmp    DWORD PTR [ecx-0x72]
  41f608:	ret    0xeb6b
  41f60b:	mov    al,ds:0x51ff396b
  41f610:	outs   dx,BYTE PTR ds:[esi]
  41f611:	mov    esp,cs
  41f613:	les    ebx,FWORD PTR [edi]
  41f615:	stos   BYTE PTR es:[edi],al
  41f616:	outs   dx,DWORD PTR ds:[esi]
  41f617:	push   ebp
  41f618:	inc    ebx
  41f619:	add    DWORD PTR [eax-0x1df2de9b],0x2e
  41f620:	jmp    0x41f620
  41f622:	outs   dx,DWORD PTR ds:[esi]
  41f623:	mov    edi,0xfa2e25d6
  41f629:	mov    ebp,0x255abb1c
  41f62e:	popf   
  41f62f:	mov    bh,0xac
  41f631:	pop    ebp
  41f632:	sub    eax,0x67e96ee0
  41f637:	idiv   ebx
  41f639:	jg     0x41f697
  41f63b:	test   DWORD PTR [edi-0x80],ebx
  41f63e:	jmp    0x9bd1900a
  41f643:	xchg   BYTE PTR [ebp+0x6c],bl
  41f646:	fdivr  DWORD PTR [ecx]
  41f648:	inc    edi
  41f649:	ss js  0x41f63d
  41f64c:	push   ebx
  41f64d:	fisub  WORD PTR [ebp+0x42]
  41f650:	aam    0x5d
  41f652:	and    eax,0xc0cdc5c5
  41f657:	mov    bl,0x4
  41f659:	jne    0x41f60a
  41f65b:	and    DWORD PTR [ebp-0x4b],0x9dd0153a
  41f662:	aad    0x25
  41f664:	pop    ebx
  41f665:	rol    BYTE PTR [edx-0x5c],cl
  41f668:	pop    es
  41f669:	adc    ebx,DWORD PTR [edx+0x44]
  41f66c:	pop    ecx
  41f66d:	loopne 0x41f637
  41f66f:	fldcw  WORD PTR [edx]
  41f671:	push   eax
  41f672:	fld    TBYTE PTR [edx+0x56999df4]
  41f678:	push   cs
  41f679:	repz cmp eax,0xb28163dc
  41f67f:	aaa    
  41f680:	call   0x47268e8
  41f685:	mov    esi,0x95673d92
  41f68a:	adc    DWORD PTR [eax],esi
  41f68c:	sbb    al,0x76
  41f68e:	stos   DWORD PTR es:[edi],eax
  41f68f:	jae    0x41f6a6
  41f691:	and    bh,BYTE PTR [esi+0x3]
  41f694:	mov    ecx,0xfe71a328
  41f699:	or     eax,0x2f807b81
  41f69e:	xchg   BYTE PTR [edx],bh
  41f6a0:	and    dh,ah
  41f6a2:	std    
  41f6a3:	push   DWORD PTR [edx]
  41f6a5:	push   0x39
  41f6a7:	adc    bh,BYTE PTR [ebx-0x7c224155]
  41f6ad:	int3   
  41f6ae:	add    BYTE PTR [eax],al
  41f6b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6b1:	fwait
  41f6b2:	jp     0x41f724
  41f6b4:	fmul   st,st(1)
  41f6b6:	push   ebx
  41f6b7:	(bad)  
  41f6b8:	in     eax,0x89
  41f6ba:	pop    edi
  41f6bb:	call   0x4fe3:0x5242111d
  41f6c2:	outs   dx,BYTE PTR ds:[esi]
  41f6c3:	xchg   ebp,eax
  41f6c4:	mov    edx,0xca8cb63f
  41f6c9:	sbb    BYTE PTR [ebp-0x2e],ch
  41f6cc:	and    edx,DWORD PTR [ebx]
  41f6ce:	and    ch,cl
  41f6d0:	mov    DWORD PTR [edi+0x47],edi
  41f6d3:	push   0xffffffca
  41f6d5:	cmp    DWORD PTR [edi],0x9
  41f6d8:	dec    esp
  41f6d9:	iret   
  41f6da:	jns    0x41f674
  41f6dc:	inc    ebp
  41f6de:	(bad)  
  41f6df:	mov    edi,ebp
  41f6e1:	div    dh
  41f6e3:	gs inc ebp
  41f6e5:	jge    0x41f671
  41f6e7:	dec    ecx
  41f6e8:	aam    0x24
  41f6ea:	mov    cs,WORD PTR [ecx+0x4e]
  41f6ed:	jle    0x41f715
  41f6ef:	(bad)  
  41f6f0:	imul   esp,DWORD PTR [ebx],0xffffffd2
  41f6f3:	xchg   ebp,eax
  41f6f4:	add    BYTE PTR [ebx+eax*1-0x4c9767dd],bl
  41f6fb:	(bad)  
  41f6fc:	fdiv   QWORD PTR [edx]
  41f6fe:	xchg   BYTE PTR [edi+0x55],ah
  41f701:	idiv   bh
  41f703:	cmp    DWORD PTR [esi+0x3e7d8150],esi
  41f709:	mov    ds:0x3eda34f1,eax
  41f70e:	cwde   
  41f70f:	mov    ds:0xdbe52b26,al
  41f714:	popf   
  41f715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f716:	jnp    0x41f749
  41f718:	int3   
  41f719:	out    0xc2,al
  41f71b:	imul   ecx,DWORD PTR [eax-0x58084cfd],0x74f90578
  41f725:	jecxz  0x41f77d
  41f727:	mov    ch,0xfd
  41f729:	lods   al,BYTE PTR ds:[esi]
  41f72a:	xchg   esp,eax
  41f72b:	retf   
  41f72c:	std    
  41f72d:	shl    BYTE PTR [ebx+0x5f],1
  41f730:	stos   DWORD PTR es:[edi],eax
  41f731:	sub    ah,BYTE PTR [ebp-0x2f5a972f]
  41f737:	mov    ebp,0xc0557c76
  41f73c:	mov    ds:0xb4fe5451,al
  41f741:	nop
  41f742:	and    BYTE PTR [eax-0x76],ah
  41f745:	xor    dh,0x81
  41f748:	and    DWORD PTR [ebp-0x31],esp
  41f74b:	fisubr DWORD PTR [esi+0x59]
  41f74e:	call   0x3a26fcca
  41f753:	dec    ecx
  41f754:	jns    0x41f731
  41f756:	mov    esp,0x2df9192d
  41f75b:	repnz into 
  41f75d:	cmp    eax,0x61f98c7f
  41f762:	sbb    esp,DWORD PTR [ebx]
  41f764:	iret   
  41f765:	add    eax,0xe0bb569
  41f76a:	jbe    0x41f77b
  41f76c:	jae    0x41f7c4
  41f76e:	mov    esi,0xde5def18
  41f773:	and    eax,0xcef55c79
  41f778:	enter  0xe89f,0xab
  41f77c:	jg     0x41f707
  41f77e:	ins    BYTE PTR es:[edi],dx
  41f77f:	and    ah,ah
  41f781:	sub    ch,dh
  41f783:	mov    al,0xa2
  41f785:	inc    edx
  41f786:	test   al,0xe4
  41f788:	ins    BYTE PTR es:[edi],dx
  41f789:	mov    ecx,0x36aade5
  41f78e:	sbb    BYTE PTR [ebx-0x56],dl
  41f791:	jne    0x41f7f2
  41f793:	jmp    0x3c1c38b1
  41f798:	cmp    BYTE PTR [edi+0x45e875af],0xe9
  41f79f:	cli    
  41f7a0:	stc    
  41f7a1:	xchg   ebx,eax
  41f7a2:	into   
  41f7a3:	pop    es
  41f7a4:	push   edi
  41f7a5:	idiv   cl
  41f7a7:	sub    ecx,eax
  41f7a9:	cmp    eax,0x895e6a50
  41f7ae:	ins    DWORD PTR es:[edi],dx
  41f7af:	pop    esp
  41f7b0:	and    al,0x6c
  41f7b3:	out    0x8a,eax
  41f7b5:	in     al,dx
  41f7b6:	mov    esi,0xc9723b89
  41f7bb:	inc    ecx
  41f7bc:	xchg   esi,eax
  41f7bd:	mov    dl,0xcd
  41f7bf:	lods   al,BYTE PTR ds:[esi]
  41f7c0:	fs mov cl,0xb1
  41f7c3:	push   edi
  41f7c4:	cmp    bl,bh
  41f7c6:	xor    eax,0x9593fc58
  41f7cb:	jae    0x41f791
  41f7cd:	(bad)  
  41f7ce:	and    eax,0x37970785
  41f7d3:	xor    ecx,edi
  41f7d5:	pop    ds
  41f7d6:	aas    
  41f7d7:	add    BYTE PTR [edx],ah
  41f7d9:	mov    ds:0xf51a1a6d,eax
  41f7de:	out    dx,eax
  41f7df:	xor    DWORD PTR [eax+0x62c55955],ecx
  41f7e5:	rcl    BYTE PTR [ebx+0x7af9544b],0xd1
  41f7ec:	jle    0x41f7ba
  41f7ee:	dec    esi
  41f7ef:	rcr    bl,cl
  41f7f1:	jl     0x41f7cb
  41f7f3:	sub    DWORD PTR [esi-0x9],0xc
  41f7f7:	jge    0x41f812
  41f7f9:	inc    edi
  41f7fa:	inc    ecx
  41f7fb:	push   edi
  41f7fc:	mov    DWORD PTR [edx+0x15],ebx
  41f7ff:	mov    ebp,0x3b08c9a0
  41f804:	xchg   edi,eax
  41f805:	mov    cl,0x2c
  41f807:	mov    ebp,DWORD PTR [edx]
  41f809:	jbe    0x41f78d
  41f80b:	pop    esp
  41f80c:	mov    ecx,0xc51d9bf4
  41f811:	mov    BYTE PTR [ebp-0x18ed6bd3],ch
  41f817:	jbe    0x41f881
  41f819:	icebp  
  41f81a:	xchg   esi,eax
  41f81b:	jbe    0x41f7c4
  41f81d:	mov    ebx,0x6c96533b
  41f822:	ror    BYTE PTR [edi],0xce
  41f825:	mov    ecx,0xed09bf08
  41f82a:	paddd  mm7,QWORD PTR [eax-0x282b40]
  41f831:	shl    BYTE PTR [edx+0xc77a0ff],cl
  41f837:	mov    edi,0xf6da657e
  41f83c:	in     al,dx
  41f83d:	sub    DWORD PTR [eax+0x5e685fc2],edx
  41f843:	loopne 0x41f88e
  41f845:	inc    esi
  41f846:	push   ss
  41f847:	outs   dx,DWORD PTR ds:[esi]
  41f848:	mov    DWORD PTR [ebx-0x14],esi
  41f84b:	add    BYTE PTR [edx-0x50],bh
  41f84e:	adc    BYTE PTR [edi+0x33],dl
  41f851:	retf   0xca74
  41f854:	jmp    0x2233a7e5
  41f859:	inc    edx
  41f85a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f85b:	icebp  
  41f85c:	ds xchg ch,bl
  41f85f:	mov    cl,0x1f
  41f861:	test   edi,ecx
  41f863:	mov    eax,fs
  41f865:	inc    esp
  41f866:	test   BYTE PTR [edi-0x5],0x90
  41f86a:	fld    st(0)
  41f86c:	mov    bl,BYTE PTR [edx]
  41f86e:	inc    ebx
  41f86f:	or     BYTE PTR [ebx+0x2289ad1c],ch
  41f875:	(bad)  
  41f876:	lods   eax,DWORD PTR ds:[esi]
  41f877:	xlat   BYTE PTR ds:[ebx]
  41f878:	pop    eax
  41f879:	xor    eax,0x1e63ecb
  41f87e:	mov    dh,0x62
  41f880:	out    dx,al
  41f881:	jb     0x41f89e
  41f883:	ss scas al,BYTE PTR es:[edi]
  41f885:	mov    ecx,0x5ddba392
  41f88a:	sub    eax,0x71f3bd99
  41f88f:	fs mov esi,ecx
  41f892:	mov    ch,BYTE PTR [edx+0x26f54787]
  41f898:	les    ecx,FWORD PTR ds:0x27f490e0
  41f89e:	jb     0x41f89e
  41f8a0:	test   DWORD PTR [esi+eiz*8],edi
  41f8a3:	pop    ebp
  41f8a4:	(bad)  
  41f8a5:	cwde   
  41f8a6:	sbb    esp,DWORD PTR [edi]
  41f8a8:	pmuludq mm0,mm5
  41f8ab:	lahf   
  41f8ac:	xor    al,0x2d
  41f8ae:	aam    0x37
  41f8b0:	mov    ch,0x1e
  41f8b2:	adc    DWORD PTR [esi],0xf2601857
  41f8b8:	jmp    FWORD PTR [edi+0x65]
  41f8bb:	push   0x7cd4e387
  41f8c0:	fimul  WORD PTR [edx-0x5a9b0568]
  41f8c6:	jle    0x41f944
  41f8c8:	ret    0x38f4
  41f8cb:	push   esp
  41f8cc:	dec    esi
  41f8cd:	push   ss
  41f8ce:	add    eax,0x35da9231
  41f8d3:	stc    
  41f8d4:	enter  0x4e15,0x62
  41f8d8:	cmp    eax,0xbf361930
  41f8dd:	xchg   esp,eax
  41f8de:	shr    BYTE PTR [edx-0x7071d60c],0xa5
  41f8e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8e6:	in     al,dx
  41f8e7:	aas    
  41f8e8:	pop    ecx
  41f8e9:	push   ebx
  41f8ea:	adc    edx,DWORD PTR [edi-0x5ca059d5]
  41f8f0:	cmp    BYTE PTR [ebx-0x56],dh
  41f8f3:	pop    edx
  41f8f4:	scas   eax,DWORD PTR es:[edi]
  41f8f5:	lea    esp,ds:0xd1781923
  41f8fb:	repnz popf 
  41f8fd:	dec    edi
  41f8fe:	sbb    DWORD PTR [ecx+ecx*8-0x2e],0x8516c100
  41f906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f907:	int    0x4a
  41f909:	xchg   edi,eax
  41f90a:	shl    BYTE PTR [ebx-0x11],0x75
  41f90e:	lods   eax,DWORD PTR ds:[esi]
  41f90f:	leave  
  41f910:	ja     0x41f8f4
  41f912:	mov    bh,0x45
  41f914:	jb     0x41f8ec
  41f916:	jle    0x41f900
  41f918:	pushf  
  41f919:	or     edx,DWORD PTR ds:0xe4d0b458
  41f91f:	cli    
  41f920:	aad    0x11
  41f922:	scas   al,BYTE PTR es:[edi]
  41f923:	rol    ch,cl
  41f925:	cmp    eax,0x99e296af
  41f92a:	sbb    al,0x7
  41f92c:	mul    DWORD PTR [ecx]
  41f92e:	ins    BYTE PTR es:[edi],dx
  41f92f:	jnp    0x41f8be
  41f931:	inc    ebp
  41f932:	ja     0x41f90f
  41f934:	xor    DWORD PTR [esi],0x302ec80f
  41f93a:	mov    ebx,0x8605db6c
  41f93f:	call   0xb0fa:0x51e96717
  41f946:	and    ebx,esp
  41f948:	in     eax,dx
  41f949:	ror    DWORD PTR [ebp+0x51b25f8a],0x3a
  41f950:	pushf  
  41f951:	add    al,0xc0
  41f953:	xchg   DWORD PTR [ebx-0x5d],esi
  41f956:	pop    es
  41f957:	mov    ds:0x2239cee7,eax
  41f95c:	(bad)  [edi+0x4c]
  41f95f:	syscall 
  41f961:	jg     0x41f8f6
  41f963:	xor    DWORD PTR [esi],esp
  41f965:	lds    esi,FWORD PTR [ecx]
  41f967:	cdq    
  41f968:	cli    
  41f969:	bnd je 0x41f993
  41f96c:	(bad)  
  41f96d:	xchg   ecx,eax
  41f96e:	mov    edx,DWORD PTR [eax+ebx*2+0x7bec5d98]
  41f975:	jmp    0x97317e72
  41f97a:	inc    esp
  41f97b:	xor    esp,eax
  41f97d:	mov    dl,0xe4
  41f97f:	mov    bl,0xca
  41f981:	lahf   
  41f982:	mov    ch,BYTE PTR [edi+0x48]
  41f985:	and    edi,ecx
  41f987:	pop    ds
  41f988:	inc    eax
  41f989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f98a:	inc    edi
  41f98b:	sbb    bl,BYTE PTR [eax+0x41a84706]
  41f991:	xchg   edx,eax
  41f992:	je     0x41f9ef
  41f994:	test   eax,0x6407a149
  41f999:	xchg   esp,eax
  41f99a:	inc    eax
  41f99b:	int3   
  41f99c:	sbb    DWORD PTR [edx],eax
  41f99e:	jae    0x41f9e8
  41f9a0:	sbb    DWORD PTR [edi],esi
  41f9a2:	xchg   BYTE PTR ss:[edi+0x7a],dh
  41f9a6:	iret   
  41f9a7:	xchg   esi,eax
  41f9a8:	pop    ecx
  41f9a9:	xchg   esi,eax
  41f9aa:	lods   eax,DWORD PTR ds:[esi]
  41f9ab:	adc    al,0x6b
  41f9ad:	add    cl,BYTE PTR [ebx]
  41f9af:	sub    al,0xc3
  41f9b1:	push   ebp
  41f9b2:	cmc    
  41f9b3:	mov    edi,esp
  41f9b5:	aaa    
  41f9b6:	push   ebx
  41f9b7:	mov    bl,0xa3
  41f9b9:	mov    ecx,0x583e67e4
  41f9be:	pop    ecx
  41f9bf:	(bad)  
  41f9c0:	cmp    BYTE PTR [eax+ebp*2+0x688a19ff],bl
  41f9c7:	dec    edi
  41f9c8:	cld    
  41f9c9:	add    al,0xa7
  41f9cb:	push   0x26
  41f9cd:	and    al,0xea
  41f9cf:	jb     0x41f9be
  41f9d1:	xchg   ecx,eax
  41f9d2:	mov    bh,0xde
  41f9d4:	and    BYTE PTR [edi+0x4e],0x1c
  41f9d8:	out    0x63,al
  41f9da:	xchg   edi,eax
  41f9db:	push   ds
  41f9dc:	stos   DWORD PTR es:[edi],eax
  41f9dd:	inc    edx
  41f9de:	mov    dh,0x2c
  41f9e0:	fs jge 0x41f999
  41f9e3:	cmp    DWORD PTR [ebx+eiz*8-0x57],edx
  41f9e7:	loop   0x41fa68
  41f9e9:	pop    ebp
  41f9ea:	mov    esp,0xca4cf6dd
  41f9ef:	sbb    DWORD PTR [eax],eax
  41f9f1:	fwait
  41f9f2:	or     al,0x9
  41f9f4:	or     ah,BYTE PTR [eax-0x6dbebd18]
  41f9fa:	xchg   DWORD PTR [eax],ebx
  41f9fc:	(bad)  
  41f9fd:	test   eax,0xe52c5552
  41fa02:	mov    esp,0xbe4c2105
  41fa07:	shr    dh,0x2d
  41fa0a:	or     BYTE PTR [esp+edx*4],cl
  41fa0d:	and    edx,ecx
  41fa0f:	xchg   esp,eax
  41fa10:	xchg   ebx,eax
  41fa11:	mov    ah,0x45
  41fa13:	mov    ah,0x51
  41fa15:	adc    dh,bl
  41fa17:	bnd jae 0x41fa79
  41fa1a:	jp     0x41f9e8
  41fa1c:	pop    ds
  41fa1d:	call   0xc84:0x3a21c3ab
  41fa24:	ins    BYTE PTR es:[edi],dx
  41fa25:	test   BYTE PTR [ebx-0x2a35ed0b],cl
  41fa2b:	xchg   esp,edi
  41fa2d:	dec    edi
  41fa2e:	xchg   ebp,eax
  41fa2f:	cmc    
  41fa30:	or     eax,0xa41e0c61
  41fa35:	jle    0x41f9be
  41fa37:	or     ebp,DWORD PTR [ecx]
  41fa39:	lahf   
  41fa3a:	aam    0x90
  41fa3c:	rol    cl,0xc
  41fa3f:	xchg   edx,eax
  41fa40:	fld    st(3)
  41fa42:	(bad)  
  41fa43:	les    edx,FWORD PTR [eax+0x72]
  41fa46:	test   al,0xce
  41fa48:	aaa    
  41fa49:	out    dx,eax
  41fa4a:	jne    0x41fa77
  41fa4c:	lock push eax
  41fa4e:	or     ecx,DWORD PTR [edx]
  41fa50:	and    edi,ebp
  41fa52:	jo     0x41f9d7
  41fa54:	cmp    edx,DWORD PTR [esi]
  41fa56:	inc    eax
  41fa57:	or     ebp,edi
  41fa59:	mov    edx,0x33fdba7f
  41fa5e:	enter  0xe823,0x5a
  41fa62:	stos   BYTE PTR es:[edi],al
  41fa63:	mov    BYTE PTR [esi-0x2df0c5c5],ch
  41fa69:	in     al,0x6f
  41fa6b:	int    0xcf
  41fa6d:	mov    esp,0xfd44bef6
  41fa72:	aam    0xc5
  41fa74:	pop    edx
  41fa75:	xor    eax,0x9bffcd4b
  41fa7a:	sub    ebp,esp
  41fa7c:	aad    0x25
  41fa7e:	out    0x5b,eax
  41fa80:	xor    ecx,esp
  41fa82:	mov    BYTE PTR [ecx+0x46],dl
  41fa85:	mov    ebp,0x99eb2cdb
  41fa8a:	sti    
  41fa8b:	ins    BYTE PTR es:[edi],dx
  41fa8c:	aas    
  41fa8d:	clc    
  41fa8e:	mov    ch,0xd8
  41fa90:	data16 ins BYTE PTR es:[edi],dx
  41fa92:	pop    edx
  41fa93:	mov    cl,cl
  41fa95:	data16 mov bl,0x47
  41fa98:	leave  
  41fa99:	call   0x2bdf5555
  41fa9e:	ret    0x707d
  41faa1:	scas   eax,DWORD PTR es:[edi]
  41faa2:	aas    
  41faa3:	popf   
  41faa4:	xor    DWORD PTR [ecx+0xafba8e9],0x2104bdb3
  41faae:	push   ebx
  41faaf:	fwait
  41fab0:	cmp    DWORD PTR [edx+0x62ea86ae],edi
  41fab6:	xchg   edi,eax
  41fab7:	push   esp
  41fab8:	mov    BYTE PTR [ebp-0x26ed508b],dh
  41fabe:	daa    
  41fabf:	jnp    0x41fab0
  41fac1:	mov    dh,0xb7
  41fac3:	xor    BYTE PTR [edx],cl
  41fac5:	inc    esi
  41fac6:	push   edx
  41fac7:	adc    bl,BYTE PTR [edx+0x31]
  41faca:	outs   dx,DWORD PTR ds:[esi]
  41facb:	fldcw  WORD PTR [ebx-0x3985cbf4]
  41fad1:	stos   BYTE PTR es:[edi],al
  41fad2:	pop    es
  41fad3:	cwde   
  41fad4:	shl    DWORD PTR [eax+0x54c3bf1d],1
  41fada:	je     0x41fa72
  41fadc:	ret    
  41fadd:	sar    BYTE PTR [edi-0xb5be264],0xd
  41fae4:	repnz retf 0x6369
  41fae8:	fsub   DWORD PTR ds:0xf215d865
  41faee:	jne    0x41fb1f
  41faf0:	arpl   WORD PTR [ebx],ax
  41faf2:	sub    edx,ebx
  41faf4:	or     al,0xc7
  41faf6:	xor    al,BYTE PTR [edx-0x7c]
  41faf9:	icebp  
  41fafa:	xor    dh,BYTE PTR [esi]
  41fafc:	jg     0x41fad7
  41fafe:	mov    edx,0x3c48145c
  41fb03:	add    al,0x5b
  41fb05:	pushf  
  41fb06:	aad    0x6d
  41fb08:	dec    edi
  41fb09:	mov    dh,BYTE PTR [ecx+0x7e94f497]
  41fb0f:	cmc    
  41fb10:	pusha  
  41fb11:	xchg   esp,eax
  41fb12:	jnp    0x41fb17
  41fb14:	and    ah,BYTE PTR [ebx+0x55efa798]
  41fb1a:	mov    ?,ebx
  41fb1c:	call   0x2b3441f3
  41fb21:	mov    esp,0x6fffcb4a
  41fb26:	xor    ebx,DWORD PTR [edi-0x73]
  41fb29:	addr16 popa 
  41fb2b:	data16 repz jmp 0x41fae2
  41fb2f:	gs int3 
  41fb31:	sub    al,0x57
  41fb33:	xchg   DWORD PTR [ecx+0x380423aa],ecx
  41fb39:	mov    al,bh
  41fb3b:	mov    ah,0xde
  41fb3d:	retf   
  41fb3e:	push   ds
  41fb3f:	jg     0x41fb59
  41fb41:	shr    BYTE PTR [ebx],0xb2
  41fb44:	cmp    esp,DWORD PTR [eax]
  41fb46:	sahf   
  41fb47:	in     eax,dx
  41fb48:	dec    ecx
  41fb49:	mov    esi,0xcd43d6f0
  41fb4e:	repz ja 0x41fb70
  41fb51:	pop    ds
  41fb52:	inc    ah
  41fb54:	imul   esp,edx,0x1a
  41fb57:	out    dx,eax
  41fb58:	adc    eax,0x56abfe33
  41fb5d:	fidivr WORD PTR [ecx]
  41fb5f:	mov    ebx,0x89bde37c
  41fb64:	hlt    
  41fb65:	push   0x5c
  41fb67:	xor    esi,DWORD PTR [edi+0x606411f1]
  41fb6d:	mov    edi,0x8c6c7d7b
  41fb72:	pop    eax
  41fb73:	out    0x58,al
  41fb75:	ds gs js 0x41fba6
  41fb79:	cmp    al,0xa3
  41fb7b:	jecxz  0x41fbfb
  41fb7d:	inc    ebp
  41fb7e:	or     al,0x71
  41fb80:	jp     0x41fb70
  41fb82:	push   esi
  41fb83:	inc    ecx
  41fb84:	and    bl,cl
  41fb86:	mov    ds:0xfd5956e4,al
  41fb8b:	(bad)  
  41fb8c:	sahf   
  41fb8d:	(bad)  
  41fb8e:	push   cs
  41fb8f:	das    
  41fb90:	adc    DWORD PTR ds:0x3f8beaf0,ecx
  41fb96:	mov    cl,0xeb
  41fb98:	sbb    bh,ch
  41fb9a:	adc    DWORD PTR [edx+0x15e6afe4],eax
  41fba0:	data16 clc 
  41fba2:	cli    
  41fba3:	test   BYTE PTR [esi-0x5d625ea8],bh
  41fba9:	dec    edx
  41fbaa:	lds    esp,FWORD PTR [edx-0x7b7becb2]
  41fbb0:	hlt    
  41fbb1:	jmp    0x41fbc8
  41fbb3:	xor    DWORD PTR [ecx],edi
  41fbb5:	jge    0x41fc00
  41fbb7:	popf   
  41fbb8:	call   0x43a4:0x2b5746b3
  41fbbf:	push   ds
  41fbc0:	jmp    0x4ec3:0xfceae8f7
  41fbc7:	sbb    BYTE PTR [ecx-0x5a06c14d],bh
  41fbcd:	test   DWORD PTR [ebp-0x1fa20366],0xa35001f8
  41fbd7:	shl    DWORD PTR [ebx],1
  41fbd9:	int3   
  41fbda:	sar    DWORD PTR [ecx-0x4591ce72],1
  41fbe0:	nop
  41fbe1:	pop    ds
  41fbe2:	jbe    0x41fba1
  41fbe4:	mov    al,0xe9
  41fbe6:	inc    esp
  41fbe7:	test   BYTE PTR [ebx-0x5],bh
  41fbea:	aad    0xaa
  41fbec:	repnz cmp DWORD PTR [edx+0x56],esi
  41fbf0:	xchg   esi,eax
  41fbf1:	or     cl,BYTE PTR [ebx+0x26]
  41fbf4:	cmp    BYTE PTR [ebp-0x75],bh
  41fbf7:	cmp    al,0xfd
  41fbf9:	pop    edi
  41fbfa:	cli    
  41fbfb:	iret   
  41fbfc:	enter  0x803f,0x58
  41fc00:	add    al,BYTE PTR [edx+eiz*2+0x21eb0130]
  41fc07:	hlt    
  41fc08:	cld    
  41fc09:	icebp  
  41fc0a:	fsub   DWORD PTR ds:0x4258fe6b
  41fc10:	outs   dx,DWORD PTR ds:[esi]
  41fc11:	fcmovbe st,st(0)
  41fc13:	sbb    DWORD PTR [edi+0x64a011e4],edx
  41fc19:	pusha  
  41fc1a:	scas   eax,DWORD PTR es:[edi]
  41fc1b:	dec    esi
  41fc1c:	dec    ebx
  41fc1d:	mov    eax,eax
  41fc1f:	jo     0x41fc1e
  41fc21:	pop    eax
  41fc22:	daa    
  41fc23:	arpl   WORD PTR [edi+edx*2-0x7d],dx
  41fc27:	pop    ss
  41fc28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc29:	cmp    ch,dl
  41fc2b:	fnstcw WORD PTR [edi+0x4eba91b6]
  41fc31:	les    esi,FWORD PTR [edx]
  41fc33:	push   edx
  41fc34:	std    
  41fc35:	in     eax,0x36
  41fc37:	out    0x16,al
  41fc39:	mov    ah,0x5c
  41fc3b:	mov    WORD PTR [edi+0x60],fs
  41fc3e:	mov    edi,0xbe93204
  41fc43:	add    al,0xdf
  41fc45:	lock (bad) 
  41fc47:	and    eax,0x74670e3
  41fc4c:	adc    BYTE PTR [esi],ah
  41fc4e:	(bad)  
  41fc4f:	(bad)  
  41fc51:	sub    bl,bh
  41fc53:	sar    BYTE PTR [esi-0x5326be55],cl
  41fc59:	adc    BYTE PTR [edx+0x1d],dh
  41fc5c:	ffreep st(5)
  41fc5e:	jne    0x41fc3b
  41fc60:	jmp    0x88e0:0xe558a7b8
  41fc67:	into   
  41fc68:	scas   al,BYTE PTR es:[edi]
  41fc69:	test   DWORD PTR [esi-0xc603996],esp
  41fc6f:	sub    DWORD PTR [esi],0xffffffcc
  41fc72:	ret    
  41fc73:	jbe    0x41fc6b
  41fc75:	jp     0x41fcb6
  41fc77:	push   ebp
  41fc78:	xchg   esp,eax
  41fc79:	das    
  41fc7a:	mov    ch,0xca
  41fc7c:	stos   DWORD PTR es:[edi],eax
  41fc7d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41fc7f:	pop    esi
  41fc80:	cli    
  41fc81:	add    DWORD PTR [eax+0x48ee8602],edx
  41fc87:	leave  
  41fc88:	and    ebx,esi
  41fc8a:	mov    esp,0x16ead35c
  41fc8f:	adc    al,0x92
  41fc91:	jo     0x41fc23
  41fc93:	sub    esp,esp
  41fc95:	and    al,0x1a
  41fc97:	lds    esp,FWORD PTR [esi-0x64]
  41fc9a:	test   BYTE PTR [ecx-0x388a26f2],al
  41fca0:	inc    ecx
  41fca1:	add    al,0x6b
  41fca3:	lods   al,BYTE PTR ds:[esi]
  41fca4:	jp     0x41fcc7
  41fca6:	ror    DWORD PTR ds:0x99dc9c1e,0xa7
  41fcad:	push   cs
  41fcae:	(bad)  [esi+edx*2+0x558aa014]
  41fcb5:	xor    eax,0x38c89a48
  41fcba:	mov    esi,0xb757465c
  41fcbf:	(bad)  
  41fcc0:	fiadd  WORD PTR [edx+0x3c971817]
  41fcc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcc7:	push   ds
  41fcc8:	mov    bh,0xe5
  41fcca:	loop   0x41fd19
  41fccc:	dec    ecx
  41fccd:	aaa    
  41fcce:	dec    ebp
  41fccf:	(bad)  
  41fcd0:	fiadd  DWORD PTR [edi]
  41fcd2:	dec    esp
  41fcd3:	(bad)  
  41fcd4:	jmp    0x41fcd6
  41fcd6:	aas    
  41fcd7:	test   al,0xb7
  41fcd9:	jbe    0x41fd08
  41fcdb:	add    BYTE PTR [di],0x92
  41fcdf:	icebp  
  41fce0:	mov    ah,bh
  41fce2:	adc    eax,0xda0bb30d
  41fce7:	lahf   
  41fce8:	aad    0x70
  41fcea:	adc    esp,DWORD PTR [eax+0x52]
  41fced:	mov    al,0x41
  41fcef:	lock jge 0x41fd20
  41fcf2:	xchg   ebp,eax
  41fcf3:	outs   dx,BYTE PTR ds:[esi]
  41fcf4:	adc    BYTE PTR [ecx],dh
  41fcf6:	out    0x8b,eax
  41fcf8:	jmp    0x41fd23
  41fcfa:	(bad)  
  41fcfb:	jge    0x41fc9d
  41fcfd:	adc    al,0x41
  41fcff:	outs   dx,DWORD PTR ds:[esi]
  41fd00:	lock rcr cl,1
  41fd03:	into   
  41fd04:	ret    0xdfc8
  41fd07:	bound  ebx,QWORD PTR [edx+0x7e]
  41fd0a:	loop   0x41fd09
  41fd0c:	outs   dx,DWORD PTR ds:[esi]
  41fd0d:	ffreep st(2)
  41fd0f:	scas   al,BYTE PTR es:[edi]
  41fd10:	xlat   BYTE PTR ds:[ebx]
  41fd11:	push   ss
  41fd12:	add    al,0x93
  41fd14:	test   eax,0x9a1b0a7f
  41fd19:	mov    al,0xdb
  41fd1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd1c:	mov    ebp,0x33b40019
  41fd21:	stos   BYTE PTR es:[edi],al
  41fd22:	sbb    BYTE PTR [ebx],al
  41fd24:	cmp    BYTE PTR [ebx+0x6adb46aa],al
  41fd2a:	push   esp
  41fd2b:	nop
  41fd2c:	mov    bh,0x2f
  41fd2e:	xor    cl,BYTE PTR [ebp+edi*4+0x4c]
  41fd32:	sbb    DWORD PTR [edx],ebp
  41fd34:	cmp    al,BYTE PTR [edx+0xa]
  41fd37:	cmp    DWORD PTR [eax+0x16097e1],eax
  41fd3d:	iret   
  41fd3e:	mov    ebp,0x3e4e208d
  41fd43:	inc    edx
  41fd44:	fstp   DWORD PTR [ebx]
  41fd46:	sub    esp,DWORD PTR [edx]
  41fd48:	cmp    al,0xb9
  41fd4a:	fcom   DWORD PTR [ebx]
  41fd4c:	bt     ebx,0xdc
  41fd50:	mov    eax,0xb2f55172
  41fd55:	lahf   
  41fd56:	mov    bh,0xef
  41fd58:	xchg   ebp,eax
  41fd59:	stos   DWORD PTR es:[edi],eax
  41fd5a:	add    eax,0xfbab945f
  41fd5f:	or     esi,DWORD PTR [ebp-0x2b0233a4]
  41fd65:	call   0x1ed9092e
  41fd6a:	popa   
  41fd6b:	mov    eax,0xb714e162
  41fd70:	fcmove st,st(5)
  41fd72:	xchg   esi,eax
  41fd73:	(bad)  
  41fd74:	pop    es
  41fd75:	mov    ds:0xb25d66a6,eax
  41fd7a:	leave  
  41fd7b:	inc    edx
  41fd7c:	rcr    DWORD PTR [esi],cl
  41fd7e:	cld    
  41fd7f:	(bad)  
  41fd80:	aam    0xe7
  41fd82:	adc    edi,ebp
  41fd84:	push   es
  41fd85:	test   al,0x1a
  41fd87:	mov    al,ds:0x259358b4
  41fd8c:	or     eax,0xa6a6d3a6
  41fd91:	adc    BYTE PTR [edx+0x65],cl
  41fd94:	sbb    BYTE PTR [esi-0x4bac4c22],bl
  41fd9a:	xchg   edi,eax
  41fd9b:	jmp    0xf816cd76
  41fda0:	inc    edi
  41fda1:	cmp    eax,0xc39efa71
  41fda6:	xchg   DWORD PTR [esi-0x56],eax
  41fda9:	pop    eax
  41fdaa:	scas   al,BYTE PTR es:[edi]
  41fdab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdad:	pop    esi
  41fdae:	out    dx,al
  41fdaf:	std    
  41fdb0:	pop    edx
  41fdb1:	mov    eax,0x79bd0777
  41fdb6:	cmp    DWORD PTR [edi],eax
  41fdb8:	fstp   TBYTE PTR [esi]
  41fdba:	push   ss
  41fdbb:	add    al,0x26
  41fdbd:	test   al,0x30
  41fdbf:	(bad)  
  41fdc0:	sub    al,0xc7
  41fdc2:	leave  
  41fdc3:	sub    al,0x59
  41fdc5:	xor    cl,BYTE PTR [edx-0x72]
  41fdc8:	sub    BYTE PTR ds:0xec8f6a21,bh
  41fdce:	or     eax,0x725ee2f4
  41fdd3:	push   esp
  41fdd4:	sbb    eax,0x68135343
  41fdd9:	mov    edx,0x5c289562
  41fdde:	pop    esi
  41fddf:	lock aad 0xa9
  41fde2:	cdq    
  41fde3:	inc    esi
  41fde4:	pop    eax
  41fde5:	sub    ebp,esi
  41fde7:	addr16 out dx,eax
  41fde9:	mov    ds:0x8bd450c,eax
  41fdee:	popa   
  41fdef:	jmp    0x41fd9a
  41fdf1:	and    esp,DWORD PTR ds:0xdf1c4aed
  41fdf7:	ror    ebp,cl
  41fdf9:	add    ebx,DWORD PTR [edx]
  41fdfb:	cmp    eax,0x70f5bace
  41fe00:	nop
  41fe01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe02:	sbb    esi,DWORD PTR [ecx+0x74]
  41fe05:	(bad)  
  41fe06:	xor    BYTE PTR [edi+0x7973aa66],cl
  41fe0c:	inc    eax
  41fe0d:	xchg   DWORD PTR [ebx+0x3a],esp
  41fe10:	btr    ecx,edi
  41fe13:	mov    edx,0x514b44bb
  41fe18:	or     edx,DWORD PTR [ebx-0x7ed7fc64]
  41fe1e:	jno    0x41fe4a
  41fe20:	mov    WORD PTR [ecx+edi*8-0x4e],ss
  41fe24:	clc    
  41fe25:	mov    ds:0x1c1d84f6,eax
  41fe2a:	lods   eax,DWORD PTR ds:[esi]
  41fe2b:	stos   BYTE PTR es:[edi],al
  41fe2c:	(bad)  
  41fe2d:	rcl    BYTE PTR [eax+0x76d6df1f],0x8e
  41fe34:	hlt    
  41fe35:	mov    ds:0x9195529c,al
  41fe3a:	cmp    DWORD PTR [eax+0x70],edi
  41fe3d:	jl     0x41fe95
  41fe3f:	push   edi
  41fe40:	test   DWORD PTR [edx],edx
  41fe42:	mov    ebp,0x7d1fb5fa
  41fe47:	push   0xffffffc9
  41fe49:	push   edx
  41fe4a:	inc    ecx
  41fe4b:	lea    esi,es:[edx+0x5972dd3d]
  41fe52:	or     BYTE PTR [ebx-0x762e6a7e],bl
  41fe58:	(bad)  
  41fe59:	xor    eax,0xbc925798
  41fe5e:	outs   dx,BYTE PTR ds:[esi]
  41fe5f:	rol    BYTE PTR [ebx],1
  41fe61:	or     al,0x66
  41fe63:	je     0x41fed1
  41fe65:	mov    ds:0x5657c78,al
  41fe6a:	pop    esi
  41fe6b:	scas   eax,DWORD PTR es:[edi]
  41fe6c:	mov    bl,0x82
  41fe6e:	pop    eax
  41fe6f:	jno    0x41fead
  41fe71:	sbb    BYTE PTR [ebx],cl
  41fe73:	adc    ebx,DWORD PTR [edx]
  41fe75:	or     BYTE PTR ds:0x203b036f,dh
  41fe7b:	test   BYTE PTR [ebp+ecx*2+0xd],ah
  41fe7f:	retf   
  41fe80:	mov    bl,0xac
  41fe82:	mov    esp,cs
  41fe84:	mul    BYTE PTR [eax+0x4e986263]
  41fe8a:	mov    ds:0x5df00f0b,al
  41fe8f:	clc    
  41fe90:	or     bl,al
  41fe92:	inc    edx
  41fe93:	call   0x72489c51
  41fe98:	outs   dx,DWORD PTR ds:[esi]
  41fe99:	xchg   esi,eax
  41fe9a:	mov    al,ds:0x9ebf1851
  41fe9f:	outs   dx,BYTE PTR ds:[esi]
  41fea0:	xchg   ecx,eax
  41fea1:	push   eax
  41fea2:	sahf   
  41fea3:	aas    
  41fea4:	mov    eax,0x35cb0661
  41fea9:	ss into 
  41feab:	push   edi
  41feac:	cdq    
  41fead:	sbb    ebx,DWORD PTR [ebp+0x1eab3e64]
  41feb3:	pop    ss
  41feb4:	xchg   ebx,eax
  41feb5:	rcl    DWORD PTR [esi+0x44],0x6d
  41feb9:	mov    ah,0x93
  41febb:	adc    esp,DWORD PTR [edx]
  41febd:	jmp    0x39c711ec
  41fec2:	mov    edi,0x71eab383
  41fec7:	pushf  
  41fec8:	and    eax,0xcf7cd63
  41fecd:	mov    bl,0x2d
  41fecf:	dec    esp
  41fed0:	lods   al,BYTE PTR ds:[esi]
  41fed1:	inc    edi
  41fed2:	adc    eax,DWORD PTR [eax-0x3dba6624]
  41fed8:	push   ecx
  41fed9:	xchg   edi,eax
  41feda:	and    dh,BYTE PTR [esi-0x153173c2]
  41fee0:	icebp  
  41fee1:	mov    ah,0xd2
  41fee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fee4:	lods   eax,DWORD PTR ds:[esi]
  41fee5:	test   BYTE PTR [edx+0x277acaa0],al
  41feeb:	loop   0x41fe83
  41feed:	sub    eax,0x6d4c3173
  41fef2:	jns    0x41fed7
  41fef4:	loope  0x41ff3b
  41fef6:	or     BYTE PTR [edi-0x1e],dl
  41fef9:	inc    edx
  41fefa:	sub    esi,DWORD PTR [eax-0x61]
  41fefd:	sbb    DWORD PTR [esi+0x3a32c07c],edx
  41ff03:	xchg   DWORD PTR [esi+0x4a6db0b9],esp
  41ff09:	and    BYTE PTR [ebx],ch
  41ff0b:	dec    ecx
  41ff0c:	jno    0x41ff84
  41ff0e:	out    dx,eax
  41ff0f:	ror    BYTE PTR [edi+0x4e2b9743],0xa7
  41ff16:	pop    edi
  41ff17:	mov    eax,0x3afe338a
  41ff1c:	xchg   edi,eax
  41ff1d:	fcmovnbe st,st(7)
  41ff1f:	repnz sar BYTE PTR [ebx],1
  41ff22:	les    esp,FWORD PTR [ebp-0x7c]
  41ff25:	enter  0xf2cd,0x38
  41ff29:	inc    eax
  41ff2a:	and    al,ah
  41ff2c:	push   ebx
  41ff2d:	mov    bh,0x7f
  41ff2f:	fild   DWORD PTR [edi]
  41ff31:	arpl   cx,sp
  41ff33:	jbe    0x41feee
  41ff35:	sub    dl,dh
  41ff37:	imul   edx,DWORD PTR [edi-0x73],0xffffffe1
  41ff3b:	fild   DWORD PTR [edx]
  41ff3d:	xchg   DWORD PTR [edi-0x7c],eax
  41ff40:	xchg   ebp,eax
  41ff41:	addr16 adc eax,0x6e5daacf
  41ff47:	call   0xe58a7343
  41ff4c:	loopne 0x41ff8a
  41ff4e:	enter  0x19c1,0x9e
  41ff52:	or     edx,DWORD PTR [edx-0x65]
  41ff55:	fld    TBYTE PTR [esi]
  41ff57:	imul   edx,DWORD PTR [esi+0x71],0xd717b5c8
  41ff5e:	test   ah,bh
  41ff60:	daa    
  41ff61:	aam    0xfd
  41ff63:	rcr    BYTE PTR [eax-0x7a6195d1],cl
  41ff69:	and    DWORD PTR [edx],esp
  41ff6b:	sub    dl,ah
  41ff6d:	sub    esi,DWORD PTR [ebx-0x22564428]
  41ff73:	sar    DWORD PTR [edi+eax*4],1
  41ff76:	ret    
  41ff77:	or     BYTE PTR es:[edi-0x2e],dh
  41ff7b:	adc    DWORD PTR [esi-0x1a460388],edx
  41ff81:	jb     0x41ff09
  41ff83:	lds    ebx,FWORD PTR [ebx+0x76]
  41ff86:	fild   WORD PTR [edi-0x2c]
  41ff89:	jae    0x41ffd1
  41ff8b:	repnz add bh,BYTE PTR [eax+0x25]
  41ff8f:	mov    al,0xd5
  41ff91:	mov    edx,0xb3df47dc
  41ff96:	pop    ebx
  41ff97:	mov    dh,0x5d
  41ff99:	xchg   edx,eax
  41ff9a:	push   ecx
  41ff9b:	call   0xb8e13c92
  41ffa0:	les    edx,FWORD PTR [eax-0x8ebc26c]
  41ffa6:	aaa    
  41ffa7:	cmc    
  41ffa8:	cmp    al,BYTE PTR [edi+0x21d99c51]
  41ffae:	mov    DWORD PTR [esi],edi
  41ffb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffb1:	or     DWORD PTR [edi],0xb534f7d1
  41ffb7:	test   eax,0xd5fd2131
  41ffbc:	push   ds
  41ffbd:	pop    esi
  41ffbe:	out    0xc2,al
  41ffc0:	mov    ch,0x2c
  41ffc2:	das    
  41ffc3:	in     al,dx
  41ffc4:	mov    esi,0x1909079c
  41ffc9:	repz lea eax,[esp+edx*2+0x1]
  41ffce:	fldz   
  41ffd0:	ror    ecx,1
  41ffd2:	cs ins BYTE PTR es:[edi],dx
  41ffd4:	cmp    bl,BYTE PTR [esp+esi*1-0x63]
  41ffd8:	mov    bh,0x92
  41ffda:	adc    BYTE PTR [ecx],dl
  41ffdc:	mov    cl,0xbb
  41ffde:	imul   BYTE PTR [esi+0x9db7562]
  41ffe4:	or     eax,0xc267fff0
  41ffe9:	jp     0x420003
  41ffeb:	outs   dx,DWORD PTR ds:[esi]
  41ffec:	push   ebx
  41ffed:	xchg   edi,eax
  41ffee:	xchg   ebp,eax
  41ffef:	loopne 0x41fffb
  41fff1:	loope  0x41ffca
  41fff3:	ror    DWORD PTR [edx+0x5282b132],1
  41fff9:	aam    0x7a
  41fffb:	add    al,0xcc
  41fffd:	dec    esi
  41fffe:	ins    DWORD PTR es:[edi],dx
  41ffff:	pop    ss
  420000:	ret    
  420001:	sar    BYTE PTR [eax-0x19],cl
  420004:	inc    esp
  420005:	adc    ebx,DWORD PTR [edi+esi*2-0x1ab91d00]
  42000c:	and    ah,BYTE PTR [eax+ebp*8]
  42000f:	loop   0x41ffe8
  420011:	jb     0x41ffb4
  420013:	jb     0x41ffe3
  420015:	jl     0x420059
  420017:	sbb    BYTE PTR [ecx-0x16],ch
  42001a:	lea    edi,[eax+0x7c]
  42001d:	fwait
  42001e:	hlt    
  42001f:	push   ds
  420020:	lea    edi,[edi]
  420022:	cmc    
  420023:	nop
  420024:	mov    ds:0xde19adde,eax
  420029:	jge    0x41ffff
  42002b:	pop    es
  42002c:	pushf  
  42002d:	daa    
  42002e:	ret    
  42002f:	add    al,0xca
  420031:	shl    BYTE PTR [edx-0x59],cl
  420034:	ins    DWORD PTR es:[edi],dx
  420035:	jno    0x420078
  420037:	popf   
  420038:	ins    BYTE PTR es:[edi],dx
  420039:	(bad)  
  42003a:	or     edi,esp
  42003c:	sahf   
  42003d:	mov    edx,0x888f9a1e
  420042:	pop    esp
  420043:	inc    ebp
  420044:	mov    dh,0xd0
  420046:	aad    0x81
  420048:	mov    ecx,0x7a2ddcc2
  42004d:	ins    BYTE PTR es:[edi],dx
  42004e:	or     al,0x94
  420050:	sbb    BYTE PTR [di+0x3c],bh
  420054:	inc    edx
  420055:	fdivp  st(3),st
  420057:	data16 data16 js 0x42009a
  42005b:	sar    BYTE PTR [ecx+eax*4],cl
  42005e:	sbb    eax,0x878dd5
  420063:	pop    ebx
  420064:	pop    eax
  420065:	loop   0x42006c
  420067:	fild   DWORD PTR [ebx+0x756bdf5f]
  42006d:	sbb    edi,eax
  42006f:	add    edx,DWORD PTR [ebx+esi*2+0x7c]
  420073:	cmpxchg DWORD PTR [edx+0x5e],ecx
  420077:	xchg   ebx,eax
  420078:	fsubrp st(1),st
  42007a:	push   esi
  42007b:	add    al,0xfe
  42007d:	in     eax,0x38
  42007f:	add    BYTE PTR [ebp-0x26ffdab5],bh
  420085:	xlat   BYTE PTR fs:[ebx]
  420087:	out    0xea,al
  420089:	hlt    
  42008a:	sbb    eax,0x6e4a3e6a
  42008f:	push   es
  420090:	fcomi  st,st(3)
  420092:	leave  
  420093:	mov    dl,0x64
  420095:	fs sbb eax,0x294b553b
  42009b:	pop    esi
  42009c:	push   ecx
  42009d:	pop    ds
  42009e:	cdq    
  42009f:	(bad)
  4200a3:	int3   
  4200a4:	mov    eax,ds:0xfc10b4
  4200a9:	loope  0x4200b4
  4200ab:	clc    
  4200ac:	scas   al,BYTE PTR es:[edi]
  4200ad:	fild   WORD PTR [esi-0x3bc454d]
  4200b3:	xor    al,0x23
  4200b5:	mov    ecx,0x7984dbe9
  4200ba:	cmp    eax,0x9cf0a740
  4200bf:	xlat   BYTE PTR ds:[ebx]
  4200c0:	xor    edi,DWORD PTR [eax-0x5387b93a]
  4200c6:	outs   dx,DWORD PTR ds:[esi]
  4200c7:	sub    eax,0xe1a76ba2
  4200cc:	sub    DWORD PTR [edi-0x27],0xffffffc5
  4200d0:	mov    bh,0xba
  4200d2:	push   edx
  4200d3:	mov    ds,WORD PTR [eax]
  4200d5:	test   al,0xc0
  4200d7:	out    0xa8,al
  4200d9:	jne    0x42005d
  4200db:	jmp    0x89e8:0x655b4ff5
  4200e2:	jecxz  0x420095
  4200e4:	test   al,0x14
  4200e6:	pop    edx
  4200e7:	out    dx,eax
  4200e8:	js     0x42008a
  4200ea:	in     eax,dx
  4200eb:	out    0xde,eax
  4200ed:	fadd   QWORD PTR [edi-0x59]
  4200f0:	mov    ds:0x27bb1602,eax
  4200f5:	sbb    esi,ebp
  4200f7:	inc    eax
  4200f8:	sbb    al,BYTE PTR [edx]
  4200fa:	and    DWORD PTR [edx],esi
  4200fc:	retf   
  4200fd:	or     BYTE PTR [ebx],dh
  4200ff:	lahf   
  420100:	cmp    bh,dl
  420102:	nop
  420103:	js     0x1e6f36dd
  420109:	mov    dl,0x5b
  42010b:	repnz sub al,0x46
  42010e:	push   0x951062a8
  420113:	xor    esp,DWORD PTR [eax+0x390e34cc]
  420119:	(bad)  
  42011a:	and    edi,DWORD PTR [edx]
  42011c:	and    eax,0xa12fa2ee
  420121:	push   eax
  420122:	inc    eax
  420123:	outs   dx,BYTE PTR ds:[esi]
  420124:	stos   DWORD PTR es:[edi],eax
  420125:	or     eax,edx
  420127:	dec    ebx
  420128:	call   0xb36d6ce4
  42012d:	sbb    al,0x8
  42012f:	fidiv  WORD PTR [ebp+0x4a]
  420132:	sub    bh,bl
  420134:	ds js  0x4200c6
  420137:	(bad)  
  420138:	(bad)
  42013b:	inc    ebx
  42013c:	mov    ds:0xb9eeb5d6,al
  420141:	sub    DWORD PTR [esp+esi*2+0xe0a1599],eax
  420148:	and    DWORD PTR [edi],edx
  42014a:	sub    ebx,DWORD PTR [ecx-0x6b]
  42014d:	cmp    eax,DWORD PTR [edi-0x24]
  420150:	mov    bl,0xda
  420152:	push   edx
  420153:	mov    dl,BYTE PTR [eax*8-0x17793721]
  42015a:	pusha  
  42015b:	mov    DWORD PTR [ebx-0xe737142],edx
  420161:	mov    ds:0x49a5e0e4,al
  420166:	psubb  mm4,QWORD PTR [edx+0x6e869569]
  42016d:	fimul  WORD PTR [eax-0x3a]
  420170:	jmp    0x78d5485c
  420175:	sahf   
  420176:	xor    edi,edi
  420178:	xchg   esi,eax
  420179:	sar    bl,0xe6
  42017c:	sub    DWORD PTR [ebx],eax
  42017e:	test   BYTE PTR [edi+0x1a],bh
  420181:	push   0xa6dac071
  420186:	cmp    ah,BYTE PTR [ecx+0x34]
  420189:	stc    
  42018a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42018b:	add    ecx,ebx
  42018d:	js     0x420201
  42018f:	pop    eax
  420190:	ret    0x3b1
  420193:	xor    ch,BYTE PTR [eax+0x11]
  420196:	and    al,0x86
  420198:	aaa    
  420199:	cs pop edi
  42019b:	cmp    eax,esp
  42019d:	je     0x420149
  42019f:	stos   DWORD PTR es:[edi],eax
  4201a0:	sub    ecx,0xffffffad
  4201a3:	sti    
  4201a4:	fstp   QWORD PTR [ebx]
  4201a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201a7:	sub    BYTE PTR [esi],al
  4201a9:	int    0xd3
  4201ab:	clc    
  4201ac:	rol    DWORD PTR [edx],cl
  4201ae:	fs test eax,0xa768ad53
  4201b4:	xor    al,0x18
  4201b6:	mov    dl,0x6b
  4201b8:	xor    edx,esi
  4201ba:	les    ebp,FWORD PTR [ebx+0x6ed744d2]
  4201c0:	loopne 0x4201d9
  4201c2:	pop    ebp
  4201c3:	jb     0x4201c5
  4201c5:	pushf  
  4201c6:	pop    eax
  4201c7:	sti    
  4201c8:	bound  esp,QWORD PTR [edx]
  4201ca:	push   0x314836b4
  4201cf:	js     0x4201a1
  4201d1:	pusha  
  4201d2:	mov    ds:0x42880556,eax
  4201d7:	je     0x420253
  4201d9:	push   0x75fae460
  4201de:	mov    dh,0xdc
  4201e0:	inc    esi
  4201e1:	push   esi
  4201e2:	scas   eax,DWORD PTR es:[edi]
  4201e3:	fiadd  WORD PTR [eax+0xe]
  4201e6:	mov    ah,BYTE PTR [ecx+0x536bdb89]
  4201ec:	xor    al,BYTE PTR [edx+0x5e]
  4201ef:	mov    ch,0xb
  4201f1:	daa    
  4201f2:	scas   al,BYTE PTR es:[edi]
  4201f3:	pop    eax
  4201f4:	ror    BYTE PTR [ebx],1
  4201f6:	jnp    0x4201fc
  4201f8:	iret   
  4201f9:	mov    ebx,DWORD PTR [ecx]
  4201fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201fc:	xor    DWORD PTR [eax+0x66],0xffffff89
  420200:	ret    
  420201:	sbb    BYTE PTR [edx],al
  420203:	lahf   
  420204:	daa    
  420205:	stos   DWORD PTR es:[edi],eax
  420206:	pusha  
  420207:	in     al,dx
  420208:	lods   eax,DWORD PTR ds:[esi]
  420209:	(bad)  
  42020a:	rcl    BYTE PTR [edx],cl
  42020c:	mov    edx,0x2477e23f
  420211:	jbe    0x4201f3
  420213:	xchg   esp,eax
  420214:	packsswb mm3,QWORD PTR [eax-0x30]
  420218:	or     DWORD PTR [ebx-0x1ca6a3bb],ecx
  42021e:	mov    eax,ds:0xff75493b
  420223:	fs jmp 0x420297
  420226:	mov    eax,0xfde67b00
  42022b:	sbb    WORD PTR [edx+0x12],ax
  42022f:	mov    esp,esp
  420231:	gs push 0x64
  420234:	in     eax,dx
  420235:	retf   
  420236:	stos   DWORD PTR es:[edi],eax
  420237:	jg     0x420216
  420239:	pop    edi
  42023a:	call   DWORD PTR [edx+edi*1-0x44]
  42023e:	lock pop ss
  420240:	ret    0xa83c
  420243:	xor    BYTE PTR [edx+0x2a],cl
  420246:	cmp    eax,0x2a
  420249:	sub    eax,0x8c1d73a3
  42024e:	enter  0x4d86,0x20
  420252:	leave  
  420253:	adc    eax,0x29fd38c5
  420258:	and    DWORD PTR [ebx+esi*2],eax
  42025b:	and    DWORD PTR [ecx+0x36911722],esi
  420261:	test   DWORD PTR [ebx+0x4db7a840],esi
  420267:	rol    BYTE PTR [edx],1
  420269:	lods   al,BYTE PTR ds:[esi]
  42026a:	mov    DWORD PTR [esi+0x2c9f96e2],eax
  420270:	cs jl  0x4202b5
  420273:	scas   eax,DWORD PTR es:[edi]
  420274:	inc    esi
  420275:	push   edi
  420276:	cmp    edi,esi
  420278:	dec    ebx
  420279:	in     eax,0xeb
  42027b:	ss icebp 
  42027d:	jle    0x420254
  42027f:	mov    ebx,0x660169bd
  420284:	ret    
  420285:	adc    dh,cl
  420287:	cmc    
  420288:	in     eax,dx
  420289:	pop    ebx
  42028a:	xchg   esp,eax
  42028b:	imul   eax,DWORD PTR [ebp-0x2ab129ef],0xce61bcdd
  420295:	bound  esi,QWORD PTR [ecx+0x556d7857]
  42029b:	rol    DWORD PTR [ecx+0x2516fda9],1
  4202a1:	mov    esp,0xee73119
  4202a6:	addr16 (bad) 
  4202a8:	out    0x80,eax
  4202aa:	scas   eax,DWORD PTR es:[edi]
  4202ab:	adc    ah,0x76
  4202ae:	mov    ?,eax
  4202b0:	ins    DWORD PTR es:[edi],dx
  4202b1:	imul   ebp,DWORD PTR [ecx-0x29baeded],0xfffffff1
  4202b8:	shl    ch,cl
  4202ba:	pusha  
  4202bb:	push   cs
  4202bc:	pop    edx
  4202bd:	pop    ss
  4202be:	inc    eax
  4202bf:	loop   0x42031a
  4202c1:	dec    ebx
  4202c2:	pop    edi
  4202c3:	adc    al,0x22
  4202c5:	jle    0x420271
  4202c7:	jmp    0xb8496b5f
  4202cc:	call   DWORD PTR [edi]
  4202ce:	mov    BYTE PTR es:[ecx],bl
  4202d1:	push   ds
  4202d2:	dec    esi
  4202d3:	js     0x420318
  4202d5:	out    dx,al
  4202d6:	stos   BYTE PTR es:[edi],al
  4202d7:	push   ebx
  4202d8:	mov    eax,DWORD PTR [edi+ebp*4+0x5f5a10a5]
  4202df:	add    DWORD PTR [edx+0x28],ebp
  4202e2:	mov    ah,0xa8
  4202e4:	lock sbb DWORD PTR [ecx+0x2d],edi
  4202e8:	pop    edx
  4202e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202ea:	call   0x151eda8e
  4202ef:	mov    ch,0xe3
  4202f1:	push   esi
  4202f2:	jbe    0x42035a
  4202f4:	add    DWORD PTR [edx+0x4],0xe1fddd3
  4202fb:	jae    0x42031b
  4202fd:	mov    al,ds:0x97dade46
  420302:	test   DWORD PTR [ecx],eax
  420304:	mov    al,BYTE PTR [esi-0x46]
  420307:	xchg   DWORD PTR ds:0xfd0d9475,esp
  42030d:	lahf   
  42030e:	(bad)  
  420310:	mov    esi,0x259c89d3
  420315:	aad    0xbb
  420317:	push   edx
  420318:	ins    DWORD PTR es:[edi],dx
  420319:	dec    ecx
  42031a:	rol    BYTE PTR [esi+0x8],cl
  42031d:	dec    edx
  42031e:	jecxz  0x420398
  420320:	ror    BYTE PTR [eax],1
  420322:	xor    BYTE PTR [ebp+0x6edd7202],dh
  420328:	test   al,0xca
  42032a:	mov    cl,0x45
  42032c:	dec    edi
  42032d:	mov    edi,0x9b359079
  420332:	rcr    BYTE PTR [ebx],0xa7
  420335:	pop    esi
  420336:	cvtpi2ps xmm7,QWORD PTR [edi-0x3c7a3f1c]
  42033d:	mov    ebp,0xd1feda4
  420342:	pop    edi
  420343:	sub    DWORD PTR [esi-0x2],esi
  420346:	(bad)  
  420347:	iret   
  420348:	call   0x340c:0x759e2683
  42034f:	mov    cl,0x94
  420351:	and    DWORD PTR [di-0x6de9],edx
  420356:	mov    WORD PTR [eax+0x3e28c133],es
  42035c:	in     al,0x43
  42035e:	mov    ah,BYTE PTR gs:[ebp-0x77]
  420362:	inc    edx
  420363:	rol    DWORD PTR [ebp+0xe],1
  420366:	pop    eax
  420367:	(bad)
  42036a:	xor    edi,DWORD PTR [eax+ebx*2+0x28789dd4]
  420371:	pop    ecx
  420372:	inc    ecx
  420373:	or     al,0xc9
  420375:	cmp    dh,0x32
  420378:	cs ret 0xf7ef
  42037c:	jae    0x420372
  42037e:	jo     0x420375
  420380:	test   bl,dl
  420382:	dec    DWORD PTR [ebp-0x3b8c9b2b]
  420388:	mul    BYTE PTR [ecx-0x68e701c2]
  42038e:	je     0x4203c9
  420390:	cmp    BYTE PTR [esi+0x29],0x29
  420394:	out    0xb7,al
  420396:	jmp    0x78f9eed1
  42039b:	nop
  42039c:	adc    eax,0xd44e5269
  4203a1:	cmc    
  4203a2:	ins    BYTE PTR es:[edi],dx
  4203a3:	gs adc al,0x26
  4203a6:	sbb    eax,0x2b105d7
  4203ab:	sub    eax,0xb062fc1d
  4203b0:	mov    eax,0x19217e44
  4203b5:	mov    esi,0xba8e99bf
  4203ba:	leave  
  4203bb:	push   eax
  4203bc:	sub    al,0x8a
  4203be:	nop
  4203bf:	inc    edi
  4203c0:	mov    cl,0xcf
  4203c2:	iret   
  4203c3:	mov    ecx,0x2af982b1
  4203c8:	sub    dl,cl
  4203ca:	dec    ebp
  4203cb:	leave  
  4203cc:	dec    edx
  4203cd:	pop    ebp
  4203ce:	cmp    ch,BYTE PTR [edi]
  4203d0:	and    eax,0xd8f715ea
  4203d6:	pop    edx
  4203d7:	jne    0x42039b
  4203d9:	or     al,0x96
  4203db:	ins    BYTE PTR es:[edi],dx
  4203dc:	(bad)  
  4203dd:	fs pop ecx
  4203df:	or     esi,edx
  4203e1:	jle    0x420397
  4203e3:	lds    edi,FWORD PTR [ebp+0x79]
  4203e6:	sahf   
  4203e7:	jae    0x420456
  4203e9:	cmp    edx,edx
  4203eb:	dec    eax
  4203ec:	test   DWORD PTR [edx+0x553a3eab],esp
  4203f2:	mov    ds:0x138cbd93,al
  4203f7:	popa   
  4203f8:	repz popa 
  4203fa:	pop    eax
  4203fb:	inc    ebx
  4203fc:	sub    DWORD PTR [esi],edx
  4203fe:	mov    ?,esi
  420400:	daa    
  420401:	stc    
  420402:	jno    0x4203c6
  420404:	xchg   ebp,eax
  420405:	mov    eax,ds:0xc9e9ab70
  42040a:	fisub  DWORD PTR [ebp+0x1b]
  42040d:	jmp    0x21a0fc5d
  420412:	inc    eax
  420413:	mov    edx,0x40c84090
  420418:	sti    
  420419:	dec    ecx
  42041a:	inc    esi
  42041b:	pop    ebx
  42041c:	clc    
  42041d:	and    dh,BYTE PTR [edx+0x19]
  420420:	mov    al,0xd4
  420422:	jl     0x4203f6
  420424:	push   ss
  420425:	pop    ss
  420426:	dec    ebp
  420427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420428:	sbb    ebp,eax
  42042a:	dec    eax
  42042b:	mov    WORD PTR [esp+edi*4+0x451a3258],?
  420432:	fbld   TBYTE PTR [esi+0x79]
  420435:	jb     0x420494
  420437:	pop    eax
  420438:	outs   dx,BYTE PTR ds:[esi]
  420439:	mov    ds:0x30d9de30,al
  42043e:	test   BYTE PTR [esp+eiz*2+0x5],al
  420442:	aas    
  420443:	inc    esp
  420444:	sbb    bl,cl
  420446:	loope  0x420494
  420448:	cmp    DWORD PTR [eax-0x6590190f],edi
  42044e:	enter  0x2dd7,0x25
  420452:	inc    ecx
  420453:	movd   mm0,DWORD PTR [edi+0x33]
  420457:	mov    dh,0x1d
  420459:	fcomp  QWORD PTR [esi-0x5fe4c26a]
  42045f:	pushf  
  420460:	push   edi
  420461:	ds (bad) 
  420463:	(bad)  
  420465:	dec    ebp
  420466:	in     al,dx
  420467:	imul   ebp,DWORD PTR [ebx],0xffffff90
  42046a:	sub    al,0x54
  42046c:	cmp    ecx,eax
  42046e:	dec    ebp
  42046f:	loopne 0x42042f
  420471:	xor    BYTE PTR [ebp-0x5eb9dbdb],ah
  420477:	mov    cl,0x48
  420479:	xchg   DWORD PTR [edi+0xd],eax
  42047c:	jne    0x420480
  42047e:	popa   
  42047f:	sub    ch,dl
  420481:	and    eax,0x8a85bfc3
  420486:	cmp    BYTE PTR [ebx-0x6c],bh
  420489:	mov    bh,0xe6
  42048b:	mov    BYTE PTR [eax+eiz*1],cl
  42048e:	lahf   
  42048f:	xchg   edx,eax
  420490:	mov    al,ds:0xd8ba454e
  420495:	dec    edi
  420496:	das    
  420497:	sar    esp,0x6e
  42049a:	std    
  42049b:	mov    ds:0x1bfb869d,al
  4204a0:	add    dl,0xd8
  4204a3:	inc    esp
  4204a4:	dec    ebx
  4204a5:	sahf   
  4204a6:	inc    ebp
  4204a7:	sbb    DWORD PTR [ebp-0x48970aae],0xffffffde
  4204ae:	or     ebx,DWORD PTR [eax-0xd]
  4204b1:	sbb    al,0x5e
  4204b3:	sub    eax,0xeb1cdd09
  4204b8:	in     eax,dx
  4204b9:	jl     0x4204ea
  4204bb:	push   edi
  4204bc:	xchg   ebx,eax
  4204bd:	and    BYTE PTR [esi-0x3a],bh
  4204c0:	inc    esi
  4204c1:	mov    eax,ds:0xd54021ef
  4204c6:	ins    BYTE PTR es:[edi],dx
  4204c7:	into   
  4204c8:	loopne 0x42051d
  4204ca:	mov    al,ds:0xffb3ea7
  4204cf:	push   es
  4204d0:	shl    DWORD PTR [ebx-0x10],1
  4204d3:	mov    edx,0xc6e5c760
  4204d8:	imul   edx,ebx,0xffffffdd
  4204db:	ud1    ecx,ebx
  4204de:	ins    DWORD PTR es:[edi],dx
  4204df:	sub    ah,BYTE PTR [ecx-0x4e]
  4204e2:	jmp    0x3d197591
  4204e7:	clc    
  4204e8:	inc    esi
  4204e9:	pop    DWORD PTR [esi-0x75]
  4204ec:	cs dec edx
  4204ee:	retf   0x20da
  4204f1:	aaa    
  4204f2:	in     eax,0xae
  4204f4:	adc    edx,DWORD PTR [eax+0x1b4aa9bc]
  4204fa:	in     eax,dx
  4204fb:	test   BYTE PTR [edx+0x4c7b5068],0x1
  420502:	test   eax,0x613e22e
  420507:	cwde   
  420508:	add    DWORD PTR [ecx-0x4b6f49f3],ebp
  42050e:	and    eax,0x91e927b9
  420513:	xlat   BYTE PTR ds:[ebx]
  420514:	outs   dx,DWORD PTR ds:[esi]
  420515:	push   ds
  420516:	sub    al,0x8c
  420518:	dec    ecx
  420519:	imul   ebx,DWORD PTR [edi],0x62
  42051c:	(bad)  
  42051d:	xor    DWORD PTR [eax],esi
  42051f:	out    0x2a,al
  420521:	sub    ebp,DWORD PTR [eax]
  420523:	dec    cl
  420525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420526:	and    ch,dl
  420528:	lea    esp,[edx-0x78287e11]
  42052e:	into   
  42052f:	outs   dx,BYTE PTR ds:[esi]
  420530:	and    bl,bl
  420532:	xchg   edi,eax
  420533:	xlat   BYTE PTR ds:[ebx]
  420534:	push   eax
  420535:	ss sbb al,0x72
  420538:	sbb    ebp,DWORD PTR [ebp+edx*2-0x2]
  42053c:	inc    esi
  42053d:	xor    eax,0x4b09cc70
  420542:	mov    cl,bl
  420544:	push   edi
  420545:	jae    0x420556
  420547:	add    al,0x8d
  420549:	das    
  42054a:	(bad)  
  42054c:	sub    al,0x20
  42054e:	mov    ch,0x39
  420550:	jmp    0x420535
  420552:	icebp  
  420553:	adc    eax,0x19020b22
  420558:	cs xor al,dh
  42055b:	jmp    DWORD PTR [esi]
  42055d:	call   0x9b0a8f16
  420562:	inc    eax
  420563:	add    DWORD PTR [ecx-0x30],eax
  420566:	test   DWORD PTR [edi+0x70],ebx
  420569:	push   esp
  42056a:	jne    0x42051c
  42056c:	pop    esi
  42056d:	out    dx,al
  42056e:	stos   DWORD PTR es:[edi],eax
  42056f:	data16 arpl WORD PTR [edx+0x29],dx
  420573:	fnstcw WORD PTR [eax]
  420575:	call   0xacfa85b2
  42057a:	push   eax
  42057b:	ja     0x4205be
  42057d:	rcr    esi,cl
  42057f:	jmp    0x3b26d21b
  420584:	fisttp QWORD PTR [eax]
  420586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420587:	div    dh
  420589:	(bad)
  42058c:	ins    BYTE PTR es:[edi],dx
  42058d:	sub    al,0x1e
  42058f:	and    BYTE PTR [ebp-0x55864c2b],cl
  420595:	mov    bh,0x55
  420597:	scas   al,BYTE PTR es:[edi]
  420598:	inc    edx
  420599:	lea    ebx,[edi+ebx*8+0x4b]
  42059d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42059e:	shl    DWORD PTR [ebx-0x4b2ec3f1],1
  4205a4:	je     0x42061f
  4205a6:	mov    ds:0x53969b89,eax
  4205ab:	loope  0x420619
  4205ad:	iret   
  4205ae:	mov    ecx,0xe6e68dc7
  4205b3:	dec    ebp
  4205b4:	pop    esp
  4205b5:	dec    ecx
  4205b6:	xchg   esp,eax
  4205b7:	or     edx,esi
  4205b9:	add    al,0x5b
  4205bb:	nop
  4205bc:	jo     0x4205b2
  4205be:	sahf   
  4205bf:	aam    0x9b
  4205c1:	mov    ds:0x36879c9b,eax
  4205c6:	gs ds xchg ebx,eax
  4205c9:	push   edi
  4205ca:	sub    BYTE PTR [edi+edx*4+0x1632e3fc],bh
  4205d1:	dec    edx
  4205d2:	jo     0x420584
  4205d4:	ins    DWORD PTR es:[edi],dx
  4205d5:	cmp    BYTE PTR [ecx+0x1643361f],bh
  4205db:	mov    al,ds:0x88139419
  4205e0:	rol    BYTE PTR [ecx],cl
  4205e2:	out    dx,eax
  4205e3:	pop    esi
  4205e4:	dec    ebx
  4205e5:	retf   0xc955
  4205e8:	push   0xffffffc5
  4205ea:	xchg   edx,eax
  4205eb:	hlt    
  4205ec:	pop    ds
  4205ed:	mov    edx,0x90b0ef47
  4205f2:	fs inc edi
  4205f4:	pop    ds
  4205f5:	call   DWORD PTR [esi+edx*8+0x42]
  4205f9:	pop    edi
  4205fa:	test   ebp,ecx
  4205fc:	inc    ecx
  4205fd:	inc    ecx
  4205fe:	mov    cl,0x18
  420600:	jl     0x4205e6
  420602:	sub    al,0xb4
  420604:	(bad)  
  420605:	mov    cl,0xf4
  420607:	sbb    ch,al
  420609:	sbb    eax,0x20ba2439
  42060e:	add    DWORD PTR [ebx+edx*8],0xc03ad172
  420615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420616:	retf   0x289f
  420619:	or     esi,DWORD PTR [edi]
  42061b:	and    BYTE PTR [esi],ah
  42061d:	repnz stos DWORD PTR es:[edi],eax
  42061f:	mov    DWORD PTR [esi+ebp*4+0x50d1a12e],edx
  420626:	mov    esp,0x9fb2fc0f
  42062b:	mov    bh,0x10
  42062d:	push   eax
  42062e:	mov    cl,0x3a
  420630:	mov    dl,0x39
  420632:	push   edx
  420633:	fist   DWORD PTR [ecx+0x2c30f22c]
  420639:	sub    al,0xfe
  42063b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42063c:	lock in eax,0x78
  42063f:	test   eax,0x84f2acd2
  420644:	into   
  420645:	imul   ebx,ebp,0x1fdd68b7
  42064b:	xchg   edi,eax
  42064c:	cmp    eax,0xaaee7e25
  420651:	xchg   ebx,eax
  420652:	jmp    0xa516:0xa0488d32
  420659:	ficomp WORD PTR [edi+0x47ff4943]
  42065f:	push   ss
  420660:	cdq    
  420661:	test   eax,ebx
  420663:	mov    BYTE PTR [ecx+0x6daf7048],bh
  420669:	mov    ecx,0xc98dcb5e
  42066e:	mov    ecx,0xb8cde19
  420673:	enter  0xa4e0,0x59
  420677:	sub    DWORD PTR [esi+0x1e],ebp
  42067a:	pop    edi
  42067b:	pusha  
  42067c:	sbb    BYTE PTR [ebx-0x28],ch
  42067f:	shl    DWORD PTR [ecx+esi*4+0x64acc1f4],1
  420686:	fwait
  420687:	rcr    DWORD PTR [esi+0x292edfc],1
  42068d:	mov    fs,esi
  42068f:	pop    ss
  420690:	mov    edi,0x58b6bd30
  420695:	cld    
  420696:	in     al,0xbf
  420698:	add    BYTE PTR [ecx],dl
  42069a:	sbb    ecx,DWORD PTR [ebp+0x223956b]
  4206a0:	js     0x420641
  4206a2:	sub    BYTE PTR [ecx],bh
  4206a4:	and    eax,0xc5f7d660
  4206a9:	adc    eax,0x1d6e2940
  4206ae:	dec    eax
  4206af:	outs   dx,BYTE PTR ds:[esi]
  4206b0:	mov    al,BYTE PTR [esi-0x7c60046b]
  4206b6:	mov    ds:0xb88dd9f0,eax
  4206bb:	enter  0x76dd,0x7b
  4206bf:	pop    ss
  4206c0:	cmp    dh,BYTE PTR [eax+0x3a90ebaa]
  4206c6:	je     0x4206b8
  4206c8:	enter  0x6da8,0x7a
  4206cc:	mov    dl,0xa0
  4206ce:	shr    BYTE PTR ds:0xeb5582f0,0x1a
  4206d5:	loopne 0x420683
  4206d7:	jne    0x4206ba
  4206d9:	test   eax,0xf50f7bc7
  4206de:	outs   dx,DWORD PTR ds:[esi]
  4206df:	repnz popa 
  4206e1:	dec    edi
  4206e2:	mov    ecx,0x3337e570
  4206e7:	inc    ebp
  4206e8:	sbb    BYTE PTR [edi+eiz*1-0xe43cc0f],0xfd
  4206f0:	push   0xffffffae
  4206f2:	pop    ecx
  4206f3:	xor    eax,0xdfbab1bc
  4206f8:	jl     0x420764
  4206fa:	ret    0xfaee
  4206fd:	jno    0x42075f
  4206ff:	add    eax,0xc3b6e122
  420704:	or     eax,ecx
  420706:	(bad)  
  420707:	arpl   WORD PTR [esi+esi*2],sp
  42070a:	xor    DWORD PTR [edx+eiz*8+0x1d],edi
  42070e:	dec    ebx
  42070f:	cmc    
  420710:	push   0x5838bde8
  420715:	mov    DWORD PTR [ecx],ebp
  420717:	stos   BYTE PTR es:[edi],al
  420718:	cmp    BYTE PTR [ecx],ch
  42071a:	sub    ebp,DWORD PTR [ebx-0x1ab662fc]
  420720:	popa   
  420721:	and    ebp,eax
  420723:	jae    0x4206c1
  420725:	mov    bh,0xf
  420727:	jl     0x420732
  420729:	mul    DWORD PTR [ecx]
  42072b:	pop    ecx
  42072c:	mov    WORD PTR [ebp+0x7a],fs
  42072f:	jo     0x4206d3
  420731:	test   eax,0x5df058e3
  420736:	cwde   
  420737:	push   ss
  420738:	pop    esp
  420739:	inc    edi
  42073a:	inc    edx
  42073b:	hlt    
  42073c:	jg     0x4206dd
  42073e:	mov    cl,0x6b
  420740:	sahf   
  420741:	mov    bh,0xc8
  420743:	lods   al,BYTE PTR ds:[esi]
  420744:	pusha  
  420745:	repnz popa 
  420747:	adc    al,0x32
  420749:	arpl   WORD PTR [eax-0x25],bp
  42074c:	mov    ecx,0xc7e70f7e
  420751:	mov    esp,0x6e4b3b65
  420756:	jo     0x42075e
  420758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420759:	mov    ds:0x85c26a0a,ax
  42075f:	(bad)  
  420760:	push   0xb129d084
  420765:	inc    ecx
  420766:	mov    ds:0x9780dc20,al
  42076b:	mov    eax,0xf8cfa221
  420770:	pop    ebp
  420771:	and    ebp,DWORD PTR [edx]
  420773:	or     ebp,DWORD PTR [ecx+0x24]
  420776:	mov    ebp,0x38702131
  42077b:	xchg   ecx,eax
  42077c:	or     cl,dl
  42077e:	or     al,0x5f
  420780:	nop
  420781:	ss jp  0x4207f3
  420784:	sub    esi,0x94dfbafd
  42078a:	xor    BYTE PTR [eax],0x27
  42078d:	or     dl,BYTE PTR [eax]
  42078f:	or     eax,0x45ae8f37
  420794:	cli    
  420795:	jecxz  0x420741
  420797:	aad    0xfc
  420799:	cli    
  42079a:	jo     0x4207c6
  42079c:	repz lock mov ebp,0xef0ebf5f
  4207a3:	add    eax,0x37c0bcbf
  4207a8:	xchg   edi,eax
  4207a9:	pop    ebp
  4207aa:	in     al,0x9c
  4207ac:	xor    bh,BYTE PTR [edx]
  4207ae:	out    0x9a,al
  4207b0:	cdq    
  4207b1:	push   esi
  4207b2:	int    0xa6
  4207b4:	lods   al,BYTE PTR ds:[esi]
  4207b5:	shl    BYTE PTR [ebx],1
  4207b7:	xlat   BYTE PTR ds:[ebx]
  4207b8:	frstor [edi]
  4207ba:	arpl   WORD PTR [edi],si
  4207bc:	mov    WORD PTR [esi],es
  4207be:	pop    ebx
  4207bf:	jg     0x420830
  4207c1:	mov    esp,0xa128ba4c
  4207c6:	test   eax,0x87ae1ea8
  4207cb:	mov    ds:0x79cbd897,al
  4207d0:	xchg   BYTE PTR [eax-0x50],ch
  4207d3:	pop    edx
  4207d4:	aam    0x4
  4207d6:	in     al,dx
  4207d7:	jecxz  0x4207d5
  4207d9:	or     al,0x81
  4207db:	dec    ecx
  4207dc:	imul   DWORD PTR [ebx+0x87324b8]
  4207e2:	test   DWORD PTR [esi-0x3b],esi
  4207e5:	jp     0x42077d
  4207e7:	imul   esi,DWORD PTR [bx+di],0x4550d88
  4207ee:	xor    dh,ah
  4207f0:	and    DWORD PTR [ebx+0x2548c956],0xfffffff5
  4207f7:	mov    edi,0x23855d03
  4207fc:	or     eax,0xf9094871
  420801:	add    DWORD PTR [ebp+edx*2-0x486478d9],0xffffffc9
  420809:	in     al,dx
  42080a:	sbb    al,0x4b
  42080c:	push   ebx
  42080d:	(bad)  
  42080e:	fwait
  42080f:	add    BYTE PTR [ecx-0x2f],bh
  420812:	mov    DWORD PTR [esi-0x52],0x7488c3b1
  420819:	or     al,bh
  42081b:	xor    al,ch
  42081d:	mov    dl,BYTE PTR [eax+eiz*4-0x3d]
  420821:	and    eax,0x856f90cb
  420826:	pop    ebp
  420827:	lds    edi,FWORD PTR [edi+0x18]
  42082a:	push   eax
  42082b:	dec    ecx
  42082c:	sub    eax,edx
  42082e:	cmp    BYTE PTR [edi-0x30],ah
  420831:	into   
  420832:	inc    ecx
  420833:	fldenv [ebx-0x9]
  420836:	mov    edi,0x662b01d1
  42083b:	pop    ss
  42083c:	push   edx
  42083d:	imul   esi,DWORD PTR [eax-0x78],0x92be6145
  420844:	pop    esp
  420845:	sub    al,0x6d
  420847:	clc    
  420848:	lahf   
  420849:	(bad)  
  42084a:	cmp    esi,esp
  42084c:	or     DWORD PTR [esi+0x63],esp
  42084f:	dec    eax
  420850:	push   0x41cf002d
  420855:	mov    ebp,0xf0e26c97
  42085a:	push   ecx
  42085b:	xor    edi,esp
  42085d:	cmp    eax,DWORD PTR [eax-0x32c1ca11]
  420863:	dec    ecx
  420864:	enter  0x7e9a,0x45
  420868:	test   DWORD PTR [eax-0xb],ecx
  42086b:	xor    eax,0xdc9df575
  420870:	push   cs
  420871:	cli    
  420872:	out    0x3a,al
  420874:	mov    ebx,DWORD PTR [esi-0x59b1d86]
  42087a:	ss jae 0x4208ca
  42087d:	dec    ecx
  42087e:	xchg   ecx,eax
  42087f:	or     edi,DWORD PTR [ecx]
  420881:	dec    edi
  420882:	add    al,ch
  420884:	fdivr  QWORD PTR [edx]
  420886:	jns    0x42089b
  420888:	leave  
  420889:	xchg   ecx,eax
  42088a:	mov    ebp,0xb74beb25
  42088f:	leave  
  420890:	mov    al,ds:0x49aa7a73
  420895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420896:	add    al,BYTE PTR gs:[edx+0x3a]
  42089a:	dec    ebx
  42089c:	imul   ebx,DWORD PTR [ebp+esi*1-0x9],0x81cb978f
  4208a4:	retf   0x8dfc
  4208a7:	imul   ebx,DWORD PTR [ebx],0x3
  4208aa:	test   DWORD PTR [edx-0xa409dfd],edx
  4208b0:	jp     0x4208a5
  4208b2:	cwde   
  4208b3:	xlat   BYTE PTR ds:[ebx]
  4208b4:	les    ebp,FWORD PTR [esi+ebx*4+0x15549689]
  4208bb:	mov    edx,0x38a15003
  4208c0:	mov    bh,0x85
  4208c2:	sar    DWORD PTR [esi-0x6ecffc47],cl
  4208c8:	aas    
  4208c9:	stc    
  4208ca:	in     al,0x92
  4208cc:	in     eax,dx
  4208cd:	je     0x420860
  4208cf:	test   DWORD PTR [edi+ebp*2-0x4c16f0ac],0x1fbb29df
  4208da:	ret    0xfef7
  4208dd:	add    al,0x93
  4208df:	sub    dh,BYTE PTR [ecx+0x262ecddf]
  4208e5:	(bad)  
  4208e6:	xor    eax,0x35b0b42
  4208eb:	cmp    ecx,DWORD PTR [eax]
  4208ed:	(bad)  
  4208ee:	mov    ebp,0x2928013e
  4208f3:	xchg   ebx,eax
  4208f4:	pop    ds
  4208f5:	rol    edi,1
  4208f7:	mov    dl,0xb0
  4208f9:	test   DWORD PTR [ebx+eax*2],edi
  4208fc:	push   esp
  4208fd:	jmp    0xf1c0:0xda3cdb5a
  420904:	sub    eax,0x5497132a
  420909:	push   es
  42090a:	xchg   ebx,eax
  42090b:	dec    ecx
  42090c:	xor    ebx,DWORD PTR [edx-0x6c403ee7]
  420912:	out    dx,eax
  420913:	push   ebp
  420914:	mov    eax,0x65e6adc5
  420919:	adc    al,0x2a
  42091b:	shr    BYTE PTR [eax],1
  42091d:	je     0x420914
  42091f:	jno    0x4208bf
  420921:	test   BYTE PTR [ebx+ebx*8],ch
  420924:	jmp    0x3203:0x8f4387a
  42092b:	mov    edi,0xbf91b74e
  420930:	cmp    DWORD PTR [edi],0xffffff91
  420933:	sub    eax,0xf88a8721
  420938:	xor    BYTE PTR [ebx-0x4c6e1d52],ch
  42093e:	(bad)  
  42093f:	inc    edx
  420940:	dec    ecx
  420941:	pop    ds
  420942:	xchg   esp,eax
  420943:	cdq    
  420944:	sbb    al,0x4f
  420946:	pop    ds
  420947:	popa   
  420948:	popf   
  420949:	jmp    0x249b:0x3d30a93e
  420950:	mov    esi,0x4c9ea18c
  420955:	sahf   
  420956:	xchg   ebp,eax
  420957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420958:	mov    BYTE PTR [edi],dl
  42095a:	dec    ebp
  42095b:	lods   al,BYTE PTR ds:[esi]
  42095c:	iret   
  42095d:	pop    es
  42095e:	loope  0x4209b6
  420960:	dec    eax
  420961:	imul   ebp,DWORD PTR [ecx+0x2070eed6],0xc6eabf9c
  42096b:	inc    eax
  42096c:	adc    ch,BYTE PTR [eax]
  42096e:	je     0x4209ba
  420970:	add    eax,0x825ffe32
  420975:	jmp    0xb5ce9213
  42097a:	lds    ebx,FWORD PTR [edi-0x416e4552]
  420980:	fmul   QWORD PTR [eax+eax*4]
  420983:	sbb    eax,0x67dbe85c
  420988:	lods   eax,DWORD PTR ds:[esi]
  420989:	push   0x29
  42098b:	cmp    al,0xf3
  42098d:	fmulp  st(4),st
  42098f:	mov    ch,0xed
  420991:	fidiv  WORD PTR [ecx-0x77844cb1]
  420997:	and    edi,DWORD PTR [edx-0x71]
  42099a:	inc    ebp
  42099b:	xlat   BYTE PTR ds:[ebx]
  42099c:	xchg   edx,eax
  42099d:	jecxz  0x420928
  42099f:	aam    0xe3
  4209a1:	cld    
  4209a2:	sub    edx,DWORD PTR [edx]
  4209a4:	sbb    BYTE PTR [edx-0x6e201e8e],dh
  4209aa:	ret    0x6000
  4209ad:	or     esp,DWORD PTR [edx+0x5]
  4209b0:	pop    es
  4209b1:	add    BYTE PTR [edx-0x75edfc68],0x75
  4209b8:	mov    BYTE PTR [ebp+0x4a],dh
  4209bb:	stos   BYTE PTR es:[edi],al
  4209bc:	cld    
  4209bd:	inc    ebx
  4209be:	and    edi,DWORD PTR [ebx]
  4209c0:	push   0xa829a086
  4209c5:	jo     0x420996
  4209c7:	(bad)  [ecx+0x42bb9c95]
  4209cd:	add    BYTE PTR [edx+ebx*1+0x55],bl
  4209d1:	mov    bl,0xdd
  4209d3:	mov    cl,0x6f
  4209d5:	rcr    BYTE PTR [ebx+0x2cfa0fa4],cl
  4209db:	inc    esp
  4209dc:	dec    ebp
  4209dd:	mov    cl,0x1b
  4209df:	jmp    0x3a21:0xf458076
  4209e6:	pop    ebx
  4209e7:	mov    edi,0xbc199aa0
  4209ec:	push   ecx
  4209ed:	mov    edx,?
  4209ef:	push   0x27378cfa
  4209f4:	(bad)  
  4209f5:	jecxz  0x420a2e
  4209f7:	xchg   esp,eax
  4209f8:	xlat   BYTE PTR ds:[ebx]
  4209f9:	dec    edi
  4209fa:	loopne 0x420a44
  4209fc:	dec    esi
  4209fd:	sar    DWORD PTR [edx],1
  4209ff:	mov    cl,0xa5
  420a01:	pushf  
  420a02:	inc    esp
  420a03:	and    bl,ah
  420a05:	jno    0x420a7a
  420a07:	cmp    ch,BYTE PTR [ebx-0x31177189]
  420a0d:	push   edx
  420a0e:	call   FWORD PTR [eax]
  420a10:	sub    dh,BYTE PTR [edx+0x82a2eed]
  420a16:	inc    edx
  420a17:	lahf   
  420a18:	test   eax,0xb9f51317
  420a1d:	aas    
  420a1e:	cli    
  420a1f:	xlat   BYTE PTR ds:[ebx]
  420a20:	outs   dx,DWORD PTR ds:[esi]
  420a21:	dec    ebx
  420a22:	add    DWORD PTR [ebx-0x21],edx
  420a25:	push   ecx
  420a26:	ins    BYTE PTR es:[edi],dx
  420a27:	mov    eax,0x5c7fbbde
  420a2c:	sub    ebp,ebp
  420a2e:	sub    cl,bh
  420a30:	or     DWORD PTR [eax+edx*8-0x29],ebx
  420a34:	(bad)  
  420a35:	mov    ebp,0x8561011c
  420a3a:	or     DWORD PTR [edx],ebp
  420a3c:	fbld   TBYTE PTR ds:0x1a4b83d3
  420a42:	or     eax,0xda935b7f
  420a47:	mov    esi,0x6a765ed1
  420a4c:	cmp    DWORD PTR [esi+0xf29054c],0xffffffbd
  420a53:	sbb    ah,BYTE PTR [esi-0x1]
  420a56:	aaa    
  420a57:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a59:	inc    edx
  420a5a:	sub    BYTE PTR [ebp-0x5],al
  420a5d:	sub    BYTE PTR [ebp+0x46],al
  420a60:	jne    0x420a94
  420a62:	addr16 aas 
  420a64:	add    ch,al
  420a66:	imul   ebx,DWORD PTR [esi+0x3be5e671],0x7607e984
  420a70:	ins    DWORD PTR es:[edi],dx
  420a71:	rcr    DWORD PTR [ecx+eax*2+0x3e],0xe3
  420a76:	das    
  420a77:	fwait
  420a78:	retf   0x584a
  420a7b:	pop    esi
  420a7c:	sti    
  420a7d:	enter  0xe885,0x6a
  420a81:	add    BYTE PTR [ebp-0x5b],cl
  420a84:	loop   0x420a92
  420a86:	mov    ds:0x2b17144f,eax
  420a8b:	repz xlat BYTE PTR ds:[ebx]
  420a8d:	loopne 0x420ab0
  420a8f:	ds push edx
  420a91:	push   es
  420a92:	mov    esp,0x975cddf
  420a97:	and    al,0x52
  420a99:	aad    0xbf
  420a9b:	push   cs
  420a9c:	fcmovne st,st(5)
  420a9e:	add    ebx,esp
  420aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420aa1:	xchg   esi,eax
  420aa2:	inc    eax
  420aa3:	leave  
  420aa4:	pop    eax
  420aa5:	call   DWORD PTR [edi+0x2237d8d2]
  420aab:	retf   0x1b08
  420aae:	sti    
  420aaf:	jbe    0x420ac3
  420ab1:	repnz in eax,dx
  420ab3:	hlt    
  420ab4:	xchg   edi,eax
  420ab5:	repnz call 0x3b91:0x6bcba77
  420abd:	ret    0x2d38
  420ac0:	mov    eax,ds:0x7c512e45
  420ac5:	xor    eax,0xe9b462f6
  420aca:	mov    edi,0xa78d6a41
  420acf:	xchg   edx,eax
  420ad0:	fild   WORD PTR [ebx-0x7d91b51]
  420ad6:	jecxz  0x420aff
  420ad8:	ret    
  420ad9:	and    al,0x5b
  420adb:	stos   DWORD PTR es:[edi],eax
  420adc:	xor    eax,0xff1df4a8
  420ae1:	(bad)  
  420ae2:	gs jmp 0xc21d:0x6d606020
  420aea:	mov    al,ds:0x7da9aaf8
  420aef:	fucomi st,st(1)
  420af1:	dec    eax
  420af2:	or     al,0x76
  420af4:	xchg   esp,eax
  420af5:	adc    eax,0x23a330f3
  420afa:	mov    esp,0x332e95df
  420aff:	mov    ecx,0xc9ef08e1
  420b04:	cmc    
  420b05:	cs adc edi,esi
  420b08:	dec    esi
  420b09:	lahf   
  420b0a:	lahf   
  420b0b:	fldenv [edx+0x3dbf3d3f]
  420b11:	mov    ?,WORD PTR [eax-0x304d6712]
  420b17:	fild   QWORD PTR [ebp+0x16]
  420b1a:	mov    bh,0x50
  420b1c:	sub    eax,0x1b3269a0
  420b21:	adc    al,0x8a
  420b23:	xchg   esp,eax
  420b24:	xchg   ebp,eax
  420b25:	mov    ebp,DWORD PTR [eax]
  420b27:	xorps  xmm4,XMMWORD PTR [ebx+edx*1]
  420b2b:	mov    ch,0xca
  420b2d:	enter  0x1a59,0x22
  420b31:	sar    BYTE PTR [di],1
  420b34:	loopne 0x420b99
  420b36:	xchg   edi,eax
  420b37:	mov    eax,ds:0xa8559611
  420b3c:	nop
  420b3d:	mov    edi,0x85ec1926
  420b42:	and    ebp,DWORD PTR [ebx+0x5ea93e20]
  420b48:	dec    eax
  420b49:	(bad)  
  420b4b:	addr16 repz je 0x420b87
  420b4f:	mov    al,0x30
  420b51:	adc    esp,DWORD PTR [esi-0x6316b868]
  420b57:	test   al,0x88
  420b59:	dec    ebx
  420b5a:	jecxz  0x420b91
  420b5c:	mov    esi,0x16fb7174
  420b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b62:	stc    
  420b63:	pop    ebp
  420b64:	push   esi
  420b65:	(bad)  
  420b66:	pop    ebx
  420b67:	cmp    edi,DWORD PTR [ebp-0x2]
  420b6a:	retf   0xd52d
  420b6d:	cld    
  420b6e:	int3   
  420b6f:	sbb    eax,0x18a5b307
  420b74:	pop    esp
  420b75:	popa   
  420b76:	mov    ch,BYTE PTR [eax+0x4b]
  420b79:	das    
  420b7a:	pop    es
  420b7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b7c:	ja     0x420b0f
  420b7e:	(bad)  
  420b7f:	cmp    edx,DWORD PTR [eax+0x8e8160]
  420b85:	cmp    ch,cl
  420b87:	loopne 0x420b0e
  420b89:	fs xchg ebp,eax
  420b8b:	xchg   ebx,eax
  420b8c:	sbb    cl,BYTE PTR [ebx+edi*4-0x5a]
  420b90:	outs   dx,DWORD PTR ds:[esi]
  420b91:	push   edi
  420b92:	aaa    
  420b93:	mov    al,ds:0x9f0c09bd
  420b98:	push   es
  420b99:	mov    bh,0x21
  420b9b:	aad    0xc2
  420b9d:	dec    esi
  420b9e:	push   esi
  420b9f:	stos   BYTE PTR es:[edi],al
  420ba0:	div    DWORD PTR [ecx-0x4b]
  420ba3:	jg     0x420b89
  420ba5:	jb     0x420b84
  420ba7:	xor    ebx,DWORD PTR [eax-0x478eddf6]
  420bad:	sbb    al,0x3
  420baf:	inc    ecx
  420bb0:	js     0x420b73
  420bb2:	mov    eax,0x89acc491
  420bb7:	dec    eax
  420bb8:	push   edi
  420bb9:	or     ch,0xbe
  420bbc:	in     eax,0xad
  420bbe:	mov    DWORD PTR [esi+0x67],ecx
  420bc1:	and    eax,0x48614044
  420bc6:	mov    dh,al
  420bc8:	clc    
  420bc9:	repnz arpl WORD PTR [eax-0x44ada136],bp
  420bd0:	or     BYTE PTR [ecx-0x1f413a57],bl
  420bd6:	aas    
  420bd7:	sbb    BYTE PTR [ecx+eiz*2+0x65873f33],al
  420bde:	and    ah,BYTE PTR [esi]
  420be0:	loope  0x420bdf
  420be2:	xor    DWORD PTR [ecx],ecx
  420be4:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420be6:	jmp    0xf9c8:0xd62934b5
  420bed:	(bad)  
  420bee:	mov    dl,0x9b
  420bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bf1:	icebp  
  420bf2:	pushf  
  420bf3:	add    BYTE PTR [ecx],al
  420bf5:	inc    ecx
  420bf6:	mov    WORD PTR [eax],ss
  420bf8:	cdq    
  420bf9:	push   eax
  420bfa:	(bad)  
  420bfb:	out    0xc4,al
  420bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bfe:	adc    DWORD PTR [ecx+edx*2],eax
  420c01:	sub    BYTE PTR [ebx-0x34],ch
  420c04:	jae    0x420bce
  420c06:	scas   al,BYTE PTR es:[edi]
  420c07:	mov    ebp,0x1ae305c2
  420c0c:	add    al,0xf8
  420c0e:	add    bl,ah
  420c10:	test   DWORD PTR [edi],0x71fe3b64
  420c16:	pop    eax
  420c17:	ja     0x420bdb
  420c19:	inc    ebx
  420c1a:	xchg   ebx,eax
  420c1b:	mov    edx,0xf37eaf2
  420c20:	sahf   
  420c21:	jae    0x420bcb
  420c23:	pop    esi
  420c24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c25:	or     eax,0xf96bd81b
  420c2a:	dec    esp
  420c2b:	push   ebx
  420c2c:	retf   0x5b1c
  420c2f:	sti    
  420c30:	push   ebx
  420c31:	lods   eax,DWORD PTR ds:[esi]
  420c32:	mov    cl,0x9f
  420c34:	shl    BYTE PTR [edx-0x39],0x2e
  420c38:	and    BYTE PTR [ecx],dh
  420c3a:	loope  0x420c5d
  420c3c:	and    bl,BYTE PTR [edi]
  420c3e:	dec    edi
  420c3f:	test   DWORD PTR [ebx-0x21],esi
  420c42:	in     eax,dx
  420c43:	sti    
  420c44:	push   es
  420c45:	add    eax,0x15c1900c
  420c4a:	(bad)  
  420c4b:	xchg   ecx,eax
  420c4c:	inc    edi
  420c4d:	clc    
  420c4e:	icebp  
  420c4f:	sub    bl,BYTE PTR [eax]
  420c51:	jmp    0xce894c4a
  420c56:	jns    0x420c36
  420c58:	(bad)  
  420c59:	jge    0x420c1c
  420c5b:	popf   
  420c5c:	mov    ebp,0x13ad9bb5
  420c61:	mov    WORD PTR [ebp+0x21],?
  420c64:	add    eax,0xf27860a
  420c69:	cmp    BYTE PTR [eax-0x785fef5b],cl
  420c6f:	(bad)  
  420c70:	mov    esp,0xa39501b8
  420c75:	out    dx,al
  420c76:	imul   esi,DWORD PTR [eax-0x38],0xcc51b5e6
  420c7d:	pop    es
  420c7e:	call   FWORD PTR [eax+0xb]
  420c81:	sub    BYTE PTR [ecx-0x5d],0xf2
  420c85:	and    al,al
  420c87:	inc    edx
  420c88:	cmp    bh,BYTE PTR ds:0xf9aee96
  420c8e:	and    BYTE PTR [esi+0x11880d9c],cl
  420c94:	daa    
  420c95:	aaa    
  420c96:	ins    DWORD PTR es:[edi],dx
  420c97:	push   cs
  420c98:	fwait
  420c99:	pop    ebp
  420c9a:	jne    0x420cc0
  420c9c:	pop    ebp
  420c9d:	mov    al,0x7d
  420c9f:	pushf  
  420ca0:	sub    cl,BYTE PTR [ebx+0x5f]
  420ca3:	mov    ah,0x9c
  420ca5:	(bad)  
  420ca6:	dec    edi
  420ca7:	mov    ?,WORD PTR [esi+0xcd33b18]
  420cad:	dec    ecx
  420cae:	sub    DWORD PTR [edx],ebx
  420cb0:	jg     0x420d14
  420cb2:	outs   dx,DWORD PTR ds:[esi]
  420cb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cb4:	pop    ds
  420cb5:	push   ecx
  420cb6:	imul   edi,DWORD PTR [edi],0x27
  420cb9:	enter  0xda44,0x9c
  420cbd:	test   dl,bh
  420cbf:	and    cl,BYTE PTR [ecx+0x31086941]
  420cc5:	mov    dh,0xda
  420cc7:	sti    
  420cc8:	pusha  
  420cc9:	pop    ebp
  420cca:	xchg   esp,eax
  420ccb:	jg     0x420d12
  420ccd:	cwde   
  420cce:	xchg   esi,eax
  420ccf:	int3   
  420cd0:	stos   BYTE PTR es:[edi],al
  420cd1:	daa    
  420cd2:	aam    0xe2
  420cd4:	sbb    esi,edi
  420cd6:	mov    al,dh
  420cd8:	inc    edx
  420cd9:	fcmovne st,st(2)
  420cdb:	xlat   BYTE PTR ds:[ebx]
  420cdc:	pop    ebx
  420cdd:	fistp  WORD PTR [ecx-0x7492d7d2]
  420ce3:	ins    DWORD PTR es:[edi],dx
  420ce4:	or     dh,BYTE PTR [edx-0x55ca25a7]
  420cea:	and    eax,0xd1e9ff16
  420cef:	std    
  420cf0:	test   BYTE PTR [edx-0x69985893],dl
  420cf6:	arpl   WORD PTR [edx+0x19],ax
  420cf9:	pop    ebp
  420cfa:	jge    0x420d18
  420cfc:	in     eax,0xa4
  420cfe:	test   DWORD PTR [edx],0x8af8f52c
  420d04:	dec    ebp
  420d05:	adc    eax,0x8cd11e86
  420d0a:	mov    al,ds:0xd6eb49dc
  420d0f:	push   ecx
  420d10:	inc    bx
  420d12:	test   DWORD PTR [edi-0x77d7a4a9],ecx
  420d18:	jl     0x420d5d
  420d1a:	mov    ah,0xf6
  420d1c:	test   DWORD PTR [ebx+0xdfae482],ecx
  420d22:	loop   0x420d2b
  420d24:	mov    esi,0x1499734a
  420d29:	jecxz  0x420d4d
  420d2b:	jne    0x420da0
  420d2d:	test   DWORD PTR [eax+0x3],edx
  420d30:	push   0x79ddc5a8
  420d35:	dec    edx
  420d36:	out    dx,eax
  420d37:	sub    al,0xe1
  420d39:	xor    al,0x49
  420d3b:	cmp    bh,BYTE PTR [ebx+0x57e38e]
  420d41:	es (bad) 
  420d43:	(bad)  
  420d44:	sub    edx,DWORD PTR [ebx]
  420d46:	test   al,0x7d
  420d48:	add    al,0xa4
  420d4a:	xchg   edx,eax
  420d4b:	and    ah,dh
  420d4d:	pop    ebp
  420d4e:	push   0x1a1615f
  420d53:	call   0x17863909
  420d58:	loopne 0x420d96
  420d5a:	aad    0xc0
  420d5c:	lods   al,BYTE PTR ds:[esi]
  420d5d:	mov    cl,0x55
  420d5f:	and    edx,DWORD PTR [ebx+0x70afc7e6]
  420d65:	mov    WORD PTR [edi],ds
  420d67:	stos   BYTE PTR es:[edi],al
  420d68:	xor    BYTE PTR ds:0xd1697b02,cl
  420d6e:	pop    esi
  420d6f:	(bad)  
  420d70:	dec    edx
  420d71:	and    eax,0x6fd537f6
  420d76:	fldcw  WORD PTR [edi+0x6c73a6da]
  420d7c:	push   ds
  420d7d:	in     eax,dx
  420d7e:	mov    ds:0xa396fad1,eax
  420d83:	inc    esi
  420d84:	sti    
  420d85:	nop
  420d86:	(bad)  gs:[esi+0x7d]
  420d8a:	push   ecx
  420d8b:	icebp  
  420d8c:	xchg   ebx,eax
  420d8d:	sti    
  420d8e:	dec    esi
  420d8f:	push   ds
  420d90:	shl    DWORD PTR [esi],0x9
  420d93:	mov    ebx,DWORD PTR [eax]
  420d95:	(bad)  
  420d96:	call   0x46752fde
  420d9b:	cwde   
  420d9c:	test   bl,bl
  420d9e:	call   0x11c89bb
  420da3:	add    dh,BYTE PTR [edi]
  420da5:	inc    esp
  420da6:	add    al,BYTE PTR [edi-0x34]
  420da9:	aad    0xbe
  420dab:	clc    
  420dac:	sub    BYTE PTR [esi+ebp*8],0x37
  420db0:	sbb    eax,0xb1835ea3
  420db5:	jb     0x420d40
  420db7:	cld    
  420db8:	aaa    
  420db9:	mov    dl,0x65
  420dbb:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dbd:	aaa    
  420dbe:	es mov ch,0x20
  420dc1:	mov    ebp,0xb5573299
  420dc6:	mov    al,ds:0x3e641bf1
  420dcb:	popf   
  420dcc:	mov    edx,0xc569c5e7
  420dd1:	push   edx
  420dd2:	push   0x2
  420dd4:	xchg   ecx,eax
  420dd5:	pop    esp
  420dd6:	ds call 0xe489:0xf1832f16
  420dde:	mov    esp,0x374cd7e8
  420de3:	mov    ecx,0x34aa531d
  420de8:	jne    0x420e28
  420dea:	xor    BYTE PTR [ebx+ebp*1+0x18],cl
  420dee:	ins    BYTE PTR es:[edi],dx
  420def:	adc    ebx,DWORD PTR [edx+0x5b4a655]
  420df5:	imul   edi,DWORD PTR [edi-0xc],0x274f7722
  420dfc:	mov    ebx,DWORD PTR [eax-0x25]
  420dff:	in     eax,dx
  420e00:	test   BYTE PTR [ecx],bh
  420e02:	pop    esp
  420e03:	in     al,0x43
  420e05:	inc    edi
  420e06:	out    dx,al
  420e07:	cmp    ecx,DWORD PTR [eax+esi*8-0x74c31af6]
  420e0e:	add    BYTE PTR [ebx],cl
  420e10:	scas   eax,DWORD PTR es:[edi]
  420e11:	imul   ecx,DWORD PTR [edi+0xd6d7578],0x940d6da5
  420e1b:	loope  0x420dc4
  420e1d:	adc    esi,DWORD PTR [edi+0x7a83d93a]
  420e23:	dec    ebp
  420e24:	xor    eax,0x3d75eb
  420e29:	and    ah,cl
  420e2b:	imul   eax,esi,0x4e
  420e2e:	mov    esp,esi
  420e30:	mov    al,ds:0xb11f10d3
  420e35:	jae    0x420e1e
  420e37:	add    ch,bh
  420e39:	pop    es
  420e3a:	fidiv  WORD PTR ds:0x270af5ec
  420e40:	add    DWORD PTR [ebx-0x43],0x2a
  420e44:	push   edx
  420e45:	adc    DWORD PTR [eax+0x154330ca],0x77099b14
  420e4f:	ins    BYTE PTR es:[edi],dx
  420e50:	push   ss
  420e51:	(bad)  
  420e52:	cdq    
  420e53:	jge    0x420e5c
  420e55:	dec    ebx
  420e56:	in     al,0x13
  420e58:	mov    edi,0xf18aa095
  420e5d:	jmp    0x9a43:0x5a2a8593
  420e64:	mov    dl,0xaf
  420e66:	(bad)  
  420e67:	fidiv  DWORD PTR [ebp+0x18a9c3f7]
  420e6d:	cli    
  420e6e:	jb     0x420e72
  420e70:	mov    ebx,0xf61b61b5
  420e75:	pop    edi
  420e76:	jne    0x420e20
  420e78:	inc    ebp
  420e79:	into   
  420e7a:	mov    ch,0x68
  420e7c:	into   
  420e7d:	mov    cx,0x19a3
  420e81:	fild   QWORD PTR [esi+esi*4-0x64]
  420e85:	stc    
  420e86:	stos   BYTE PTR es:[edi],al
  420e87:	enter  0xe722,0x11
  420e8b:	cwde   
  420e8c:	mov    ebx,DWORD PTR ss:[esi]
  420e8f:	fistp  DWORD PTR [edi]
  420e91:	aam    0x2d
  420e93:	or     eax,0x1e176c89
  420e98:	dec    esi
  420e99:	cwde   
  420e9a:	sbb    BYTE PTR [ebx],dh
  420e9c:	pushf  
  420e9d:	fnstcw WORD PTR [esi]
  420e9f:	fwait
  420ea0:	push   esi
  420ea1:	out    dx,al
  420ea2:	test   DWORD PTR [ebx],esp
  420ea4:	pop    ss
  420ea5:	pop    ebx
  420ea6:	sub    dl,bh
  420ea8:	sub    al,BYTE PTR [ebx+0x1c]
  420eab:	xchg   esp,eax
  420eac:	mov    dh,0x5c
  420eae:	push   0x18
  420eb0:	fsub   st,st(5)
  420eb2:	push   es
  420eb3:	(bad)  
  420eb5:	bound  eax,QWORD PTR [ecx-0x73]
  420eb8:	test   BYTE PTR [edi-0x7a],bh
  420ebb:	cmp    eax,0x5775200d
  420ec0:	xchg   ebp,eax
  420ec1:	adc    edi,ebx
  420ec3:	add    edx,0xffffffc8
  420ec6:	icebp  
  420ec7:	das    
  420ec8:	outs   dx,DWORD PTR ds:[esi]
  420ec9:	lods   al,BYTE PTR ds:[esi]
  420eca:	lahf   
  420ecb:	jns    0x420e63
  420ecd:	adc    DWORD PTR [edx],ebx
  420ecf:	jne    0x420ed2
  420ed1:	arpl   WORD PTR [ebx-0x59263df1],dx
  420ed7:	neg    DWORD PTR [ebx+0x7a]
  420eda:	test   DWORD PTR [eax],ecx
  420edc:	stc    
  420edd:	pop    es
  420ede:	in     al,dx
  420edf:	push   ebx
  420ee0:	sti    
  420ee1:	ins    BYTE PTR es:[edi],dx
  420ee2:	daa    
  420ee3:	in     al,dx
  420ee4:	xchg   ecx,eax
  420ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ee6:	mov    ch,0xa4
  420ee8:	fsub   QWORD PTR cs:[edx+esi*1+0x61a345c]
  420ef0:	adc    esp,ebp
  420ef2:	out    dx,eax
  420ef3:	add    eax,0x22f94386
  420ef8:	(bad)  
  420ef9:	out    0x25,al
  420efb:	arpl   WORD PTR [edx*2-0x5bda7007],sp
  420f02:	push   ss
  420f03:	(bad)  
  420f04:	inc    BYTE PTR [eax]
  420f06:	ins    BYTE PTR es:[edi],dx
  420f07:	test   BYTE PTR [ebx-0x675fa162],ah
  420f0d:	mov    dh,0xa1
  420f0f:	mov    DWORD PTR [ecx],0xa1174a6f
  420f15:	inc    ebp
  420f16:	dec    edx
  420f17:	xchg   edx,eax
  420f18:	dec    ecx
  420f19:	call   0x8999b68
  420f1e:	jecxz  0x420ebb
  420f20:	push   ebp
  420f21:	mov    DWORD PTR [ecx+0x219054c6],ebp
  420f27:	pop    esp
  420f28:	mov    ebp,0x3ad348ae
  420f2d:	inc    edx
  420f2e:	mov    bl,0xc6
  420f30:	je     0x420f37
  420f32:	dec    edx
  420f33:	cmp    eax,0x29e0ac5
  420f38:	dec    edi
  420f39:	repz pop ebx
  420f3b:	repz inc eax
  420f3d:	das    
  420f3e:	jne    0x420ef1
  420f40:	aaa    
  420f41:	add    bl,cl
  420f43:	out    dx,eax
  420f44:	outs   dx,BYTE PTR ds:[esi]
  420f45:	sti    
  420f46:	jp     0x420eef
  420f48:	sbb    BYTE PTR [ecx+ebx*4-0x39],cl
  420f4c:	add    eax,0x8e6529d9
  420f51:	mov    al,0xf
  420f53:	mov    cl,0xef
  420f55:	or     ah,dh
  420f57:	loopne 0x420f67
  420f59:	jle    0x420ef3
  420f5b:	or     eax,0xa0daa4ed
  420f60:	add    cl,dh
  420f62:	mov    edi,0xe520288d
  420f67:	or     eax,0xe227097d
  420f6c:	iret   
  420f6d:	je     0x420f81
  420f6f:	jmp    0x420f77
  420f71:	out    0xd7,al
  420f73:	clc    
  420f74:	aaa    
  420f75:	imul   ecx,DWORD PTR cs:[edi],0x31
  420f79:	lock add ecx,DWORD PTR [ecx+eiz*4+0x7f09574b]
  420f81:	lods   al,BYTE PTR ds:[esi]
  420f82:	add    edx,ebp
  420f84:	xchg   ebx,eax
  420f85:	sbb    BYTE PTR [ebx+0x4159048e],0x70
  420f8c:	pop    eax
  420f8d:	xor    BYTE PTR [ebx+0x4b95f7cf],cl
  420f93:	mov    ch,0xe3
  420f95:	call   0xe9aa2a29
  420f9a:	scas   eax,DWORD PTR es:[edi]
  420f9b:	das    
  420f9c:	xchg   DWORD PTR fs:[edx-0x3168bdbc],edi
  420fa3:	dec    esi
  420fa4:	xchg   ebp,eax
  420fa5:	dec    ebp
  420fa6:	sbb    DWORD PTR [eax+0x1],eax
  420fa9:	add    DWORD PTR [ecx-0x78],ecx
  420fac:	mov    cl,0x70
  420fae:	test   al,0x9d
  420fb0:	fxch   st(7)
  420fb2:	and    esi,DWORD PTR [edx]
  420fb4:	dec    edi
  420fb5:	(bad)  
  420fb6:	fstp   DWORD PTR [esi-0xc19e85b]
  420fbc:	rep outs dx,BYTE PTR ds:[esi]
  420fbe:	and    eax,0xe39afba9
  420fc3:	shl    DWORD PTR [ebp-0x551fec63],cl
  420fc9:	sub    DWORD PTR [ecx+0x4d37ee5b],edx
  420fcf:	jnp    0x420fd5
  420fd1:	shr    eax,1
  420fd3:	adc    DWORD PTR [eax-0x5a5f7a21],ecx
  420fd9:	pop    ecx
  420fda:	pop    ss
  420fdb:	mov    bl,0x3e
  420fdd:	add    ebx,eax
  420fdf:	mov    ah,0x20
  420fe1:	push   edi
  420fe2:	sub    edx,esi
  420fe4:	mov    al,0xcc
  420fe6:	enter  0xda01,0x42
  420fea:	add    edi,DWORD PTR [ecx]
  420fec:	jo     0x421051
  420fee:	mov    ds:0xdd19e2af,al
  420ff3:	push   0x4b68c08b
  420ff8:	mov    al,ds:0x79151d2
  420ffd:	pop    es
  420ffe:	mov    esp,0x85015fba
  421003:	popa   
  421004:	sbb    eax,0x45d8fab4
  421009:	shr    al,0x4d
  42100c:	add    ebx,DWORD PTR [edx]
  42100e:	jne    0x420fdb
  421010:	jo     0x420f99
  421012:	mov    cl,BYTE PTR [esi-0x7a]
  421015:	dec    ebx
  421016:	gs jp  0x42108f
  421019:	fs mov al,0x98
  42101c:	std    
  42101d:	addr16 inc ecx
  42101f:	shl    DWORD PTR [ebx+ebx*4],1
  421022:	sub    esp,esi
  421024:	pop    ebx
  421025:	add    al,0x19
  421027:	push   cs
  421028:	mov    cl,0x8c
  42102a:	xor    BYTE PTR [ebp-0x7f468dd5],0xf6
  421031:	ins    BYTE PTR es:[edi],dx
  421032:	pop    ds
  421033:	lds    esp,FWORD PTR [esi]
  421035:	sbb    edi,ebp
  421037:	test   al,0x6a
  421039:	jmp    0x45e4:0x4d7888d7
  421040:	daa    
  421041:	dec    ecx
  421042:	imul   ecx,DWORD PTR [esi-0x74],0x270c3962
  421049:	and    DWORD PTR [ebp+edx*8+0x5358ad22],0xae56da1a
  421054:	outs   dx,BYTE PTR ds:[esi]
  421055:	mov    ebx,0x8d6f4515
  42105a:	aam    0xbd
  42105c:	cs (bad) 
  42105e:	mov    ebp,0x4cc0b845
  421063:	ja     0x421053
  421065:	jo     0x421002
  421067:	sub    al,0x6d
  421069:	mov    bh,0x40
  42106b:	jae    0x42107c
  42106d:	lahf   
  42106e:	mov    cl,0x7b
  421070:	cmp    dh,BYTE PTR [esi+edx*4-0x685120e3]
  421077:	fwait
  421078:	pop    esi
  421079:	dec    eax
  42107a:	test   eax,0x30a3803
  42107f:	ja     0x4210f6
  421081:	xor    BYTE PTR [edx-0x51],cl
  421084:	out    0x74,eax
  421086:	or     ecx,DWORD PTR [ecx-0x221047e1]
  42108c:	mov    al,ds:0xf83d3eba
  421091:	fadd   st(0),st
  421093:	xor    esp,DWORD PTR [ecx+0x3a]
  421096:	adc    esp,DWORD PTR [ebx]
  421098:	aas    
  421099:	xchg   ebp,eax
  42109a:	and    bl,BYTE PTR [eax]
  42109c:	emms   
  42109e:	fldcw  WORD PTR [ebx+0x3259e1db]
  4210a4:	fmul   DWORD PTR [edx-0x7cf2439e]
  4210aa:	dec    esp
  4210ab:	mov    eax,ds:0x3adacf16
  4210b0:	mov    ah,0xf5
  4210b2:	xor    al,0x97
  4210b4:	test   bh,cl
  4210b6:	nop
  4210b7:	popa   
  4210b8:	pop    ebx
  4210b9:	fidivr DWORD PTR [ebx+0x4e]
  4210bc:	sbb    bh,BYTE PTR [esi]
  4210be:	stos   DWORD PTR es:[edi],eax
  4210bf:	int    0xac
  4210c1:	shr    DWORD PTR [ebp+0x7efc34e3],1
  4210c7:	add    BYTE PTR [edx],cl
  4210c9:	outs   dx,DWORD PTR ds:[esi]
  4210ca:	aaa    
  4210cb:	push   eax
  4210cc:	sbb    al,0x1c
  4210ce:	outs   dx,DWORD PTR ds:[esi]
  4210cf:	mov    eax,0x83f0ef51
  4210d4:	cmc    
  4210d5:	retf   
  4210d6:	aam    0xe4
  4210d8:	cli    
  4210d9:	add    al,0xa
  4210db:	sub    BYTE PTR [eax-0x44],cl
  4210de:	sub    dl,BYTE PTR [ebp+0x61]
  4210e1:	(bad)  
  4210e2:	lea    ebx,[ebx+ebx*1]
  4210e5:	xor    edi,DWORD PTR [edi+0x2a8988f4]
  4210eb:	mov    DWORD PTR [ebx],esi
  4210ed:	push   ebx
  4210ee:	sbb    BYTE PTR [ebx-0x1d3f3063],al
  4210f4:	push   edi
  4210f5:	adc    al,BYTE PTR [ebp+0x4b0650fe]
  4210fb:	dec    esi
  4210fc:	aam    0xb5
  4210fe:	ret    
  4210ff:	pushf  
  421100:	inc    edx
  421101:	mov    WORD PTR ds:0x4f8cd4b2,ds
  421107:	mov    fs,WORD PTR [eax]
  421109:	mov    ebx,0xbfe9c46b
  42110e:	popa   
  42110f:	mov    eax,0xee13c9aa
  421114:	lock (bad) 
  421116:	data16 out dx,al
  421118:	ins    DWORD PTR es:[edi],dx
  421119:	int3   
  42111a:	xor    BYTE PTR [esi-0x5767a7f0],ah
  421120:	mov    ah,0xd3
  421122:	mov    bh,BYTE PTR [ebx+eax*8+0x59]
  421126:	adc    ecx,DWORD PTR [ebx+0x3f]
  421129:	enter  0xd96d,0x8f
  42112d:	jmp    0x86a7:0x7a20163e
  421134:	xor    al,0x7
  421136:	mov    ch,0xef
  421138:	or     esi,DWORD PTR [ebp+0x492e6ae0]
  42113e:	add    al,0xf1
  421140:	scas   al,BYTE PTR es:[edi]
  421141:	mov    ah,ah
  421143:	mov    dl,cl
  421145:	cwde   
  421146:	aam    0xd3
  421148:	hlt    
  421149:	sbb    ebp,ebp
  42114b:	cwde   
  42114c:	or     BYTE PTR [edi-0x3155f67a],bl
  421152:	repz cmp edi,ecx
  421155:	sub    DWORD PTR [ebp+0x6d],0x5b00a051
  42115c:	mov    ebp,0x237f11d7
  421161:	adc    DWORD PTR [esp+edi*1-0x74],edi
  421165:	mov    bh,0x6c
  421167:	jo     0x421123
  421169:	cmp    eax,0x88c898d2
  42116e:	add    al,0x7c
  421170:	jns    0x421143
  421172:	adc    eax,esp
  421174:	adc    esi,DWORD PTR [eax+0x72ccda2c]
  42117a:	add    DWORD PTR [ecx+0x146b7202],esi
  421180:	test   BYTE PTR [esi],ah
  421182:	and    eax,0x2df0d15f
  421187:	cwde   
  421188:	rol    bh,1
  42118a:	js     0x42115d
  42118c:	shl    DWORD PTR [eax+0x6],1
  42118f:	scas   al,BYTE PTR es:[edi]
  421190:	ins    BYTE PTR es:[edi],dx
  421191:	rol    BYTE PTR [eax],0x30
  421194:	sub    al,0x9f
  421196:	dec    edi
  421197:	push   ecx
  421198:	rcr    ch,0xb0
  42119b:	popf   
  42119c:	neg    DWORD PTR [edi-0x33]
  42119f:	call   0x6dfd9382
  4211a4:	int3   
  4211a5:	aas    
  4211a6:	jl     0x42113c
  4211a8:	jne    0x421188
  4211aa:	sbb    eax,0x8a106345
  4211af:	sti    
  4211b0:	pushf  
  4211b1:	ror    ah,0xa5
  4211b4:	jo     0x421152
  4211b6:	xchg   esp,eax
  4211b7:	sbb    bh,BYTE PTR [esi]
  4211b9:	and    edx,DWORD PTR [eax-0x1c]
  4211bc:	xchg   edx,eax
  4211bd:	adc    bh,0xa3
  4211c0:	mov    gs,WORD PTR [ebx]
  4211c2:	add    BYTE PTR [eax+0x3],bh
  4211c5:	mov    ecx,0x3bc789a9
  4211ca:	sbb    cl,al
  4211cc:	cmp    DWORD PTR [ebp+0x24],ecx
  4211cf:	ret    0xe642
  4211d2:	dec    ebx
  4211d3:	and    edx,DWORD PTR [edx+0x40d71b05]
  4211d9:	es adc eax,0x9730e1e
  4211df:	(bad)  
  4211e1:	addr16 ret 
  4211e3:	test   DWORD PTR [ebp-0x3ccbed],ecx
  4211e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211ea:	les    esp,FWORD PTR [esi]
  4211ec:	popa   
  4211ed:	inc    esp
  4211ee:	test   esp,ecx
  4211f0:	and    BYTE PTR [edx+ecx*8-0x71f47100],ah
  4211f7:	loopne 0x4211c9
  4211f9:	and    al,0xfd
  4211fb:	mov    bh,0xb2
  4211fd:	std    
  4211fe:	nop
  4211ff:	and    al,0x82
  421202:	xor    eax,0xc025d47a
  421207:	dec    edi
  421208:	xor    BYTE PTR [esi+0x35d5db7d],ch
  42120e:	push   edi
  42120f:	inc    esp
  421210:	pop    ebp
  421211:	mov    ebx,0x97aca204
  421216:	or     dh,al
  421218:	lock test BYTE PTR [eax-0x553a8552],cl
  42121f:	push   ecx
  421220:	fnstenv [ecx-0x62]
  421223:	and    al,BYTE PTR [ecx+edi*2-0x547a117]
  42122a:	jmp    0xb532:0xada33d88
  421231:	mov    DWORD PTR [ecx-0x26eb347d],0x3524d309
  42123b:	adc    BYTE PTR [eax-0x2e035c38],bl
  421241:	fucomi st,st(2)
  421243:	lods   eax,DWORD PTR ds:[esi]
  421244:	ss nop
  421246:	mov    edx,0x81e0ac57
  42124b:	hlt    
  42124c:	fbld   TBYTE PTR [ebx-0x2b1f0a4a]
  421252:	add    eax,0xdf53df1c
  421257:	jle    0x4211fa
  421259:	mov    ecx,0x91780cb1
  42125e:	xchg   edi,eax
  42125f:	aas    
  421260:	jecxz  0x42129b
  421262:	(bad)  
  421263:	xchg   esp,eax
  421264:	mov    ebx,?
  421266:	stc    
  421267:	inc    esi
  421268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421269:	stc    
  42126a:	pushf  
  42126b:	lds    ebx,FWORD PTR [edi-0x4e4f4ff2]
  421271:	cmc    
  421272:	cld    
  421273:	(bad)  
  421274:	mov    ecx,0xb3ff7666
  421279:	xchg   ecx,eax
  42127a:	mov    edx,0x72b5cd36
  42127f:	sbb    al,0x1e
  421281:	adc    eax,0xd3bc6f8
  421286:	mov    cs,WORD PTR [esi]
  421288:	fwait
  421289:	add    esi,ebp
  42128b:	or     al,0x49
  42128d:	push   ds
  42128e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42128f:	test   edi,edx
  421291:	jl     0x4212d6
  421293:	std    
  421294:	pop    esi
  421295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421296:	jmp    0x4212c1
  421298:	mov    dl,0x95
  42129a:	enter  0x6a77,0xce
  42129e:	push   es
  42129f:	ins    DWORD PTR es:[edi],dx
  4212a0:	leave  
  4212a1:	pop    eax
  4212a2:	(bad)  
  4212a3:	mov    al,0x44
  4212a5:	and    al,0xf1
  4212a7:	jge    0x4212f4
  4212a9:	lds    esp,FWORD PTR [edx+0x271687b]
  4212af:	xchg   ebx,eax
  4212b0:	mov    eax,ds:0x15300ee6
  4212b5:	adc    DWORD PTR [edx+0x2e2684b2],ebx
  4212bb:	in     al,dx
  4212bc:	pop    edx
  4212bd:	sbb    eax,DWORD PTR [ebx+edi*4-0x36cca4f9]
  4212c4:	jge    0x421307
  4212c6:	jmp    0x88f4:0x7ecc0220
  4212cd:	nop
  4212ce:	lock cmp eax,0x58046f8c
  4212d4:	call   DWORD PTR [edx-0x6c]
  4212d7:	(bad)
  4212db:	pop    ss
  4212dc:	fdivp  st(0),st
  4212de:	fmul   QWORD PTR [edx-0x4c6007a6]
  4212e4:	xchg   ebx,eax
  4212e5:	jnp    0x42126f
  4212e7:	sub    eax,0x61e538f0
  4212ec:	dec    esp
  4212ed:	jge    0x421337
  4212ef:	dec    edi
  4212f0:	aad    0x67
  4212f2:	mov    esi,0x1e8244ee
  4212f7:	imul   BYTE PTR [edi+0x14]
  4212fa:	test   DWORD PTR [ecx+ecx*1+0x30],ebx
  4212fe:	adc    BYTE PTR [edx+eax*8-0x7f],dh
  421302:	or     al,BYTE PTR [esi]
  421304:	scas   eax,DWORD PTR es:[edi]
  421305:	aam    0xa
  421307:	push   0xfffffff8
  421309:	and    ah,al
  42130b:	fsub   DWORD PTR [ebp+0x10]
  42130e:	mov    dh,0xdc
  421310:	mov    DWORD PTR [eax-0x24d87fff],esp
  421316:	jo     0x4212af
  421318:	sub    DWORD PTR [ebp-0x5f],ecx
  42131b:	xchg   ebp,eax
  42131c:	clc    
  42131d:	adc    eax,0x1f980fed
  421322:	fcomp  DWORD PTR [esi*8-0x35ede9ed]
  421329:	fst    QWORD PTR [esi+0x22]
  42132c:	adc    eax,0xa4036d0c
  421331:	inc    ebp
  421332:	pushf  
  421333:	sar    BYTE PTR [edx-0x26],0xe4
  421337:	loop   0x421366
  421339:	push   edx
  42133a:	loopne 0x4212ed
  42133c:	mov    edx,0xda1adc76
  421341:	jb     0x4212c8
  421343:	pusha  
  421344:	mov    ecx,0x1be1271b
  421349:	je     0x421330
  42134b:	mov    ah,0x82
  42134d:	sub    edx,DWORD PTR [edx-0x209bd70e]
  421353:	push   es
  421354:	xchg   edi,eax
  421355:	xor    DWORD PTR [edi],esp
  421357:	sub    BYTE PTR [ecx-0x34],0xde
  42135b:	mov    ebx,DWORD PTR [eax]
  42135d:	jae    0x421320
  42135f:	addr16 fs int3 
  421362:	leave  
  421363:	fidiv  WORD PTR ds:0x587a5595
  421369:	fbstp  TBYTE PTR [ebp+0x3bc79ae9]
  42136f:	in     eax,0x84
  421371:	aam    0x95
  421373:	xor    DWORD PTR [edx-0x80],edx
  421376:	jno    0x421347
  421378:	push   ss
  421379:	lods   al,BYTE PTR ds:[esi]
  42137a:	jno    0x42131e
  42137c:	adc    DWORD PTR [ecx-0xb],0xb0882636
  421383:	fsin   
  421385:	fmulp  st(4),st
  421387:	adc    BYTE PTR [edi+0x68692bc9],0x21
  42138e:	dec    ebx
  42138f:	xchg   esi,eax
  421390:	lods   eax,DWORD PTR ds:[esi]
  421391:	mov    WORD PTR [eiz*8+0x59fded94],gs
  421398:	loop   0x4213c5
  42139a:	mov    ebx,0xdff57da7
  42139f:	cdq    
  4213a0:	ins    DWORD PTR es:[edi],dx
  4213a1:	xchg   edi,eax
  4213a2:	sbb    BYTE PTR [edx+0x62],ch
  4213a5:	push   ss
  4213a6:	mov    ebp,edi
  4213a8:	lods   al,BYTE PTR ds:[esi]
  4213a9:	mov    edi,0x1e75e046
  4213ae:	sub    BYTE PTR [eax+edx*1-0x66],cl
  4213b2:	mov    ds:0x836dd397,eax
  4213b7:	jle    0x4213b8
  4213b9:	jp     0x4213c1
  4213bb:	mov    ch,0x15
  4213bd:	aam    0x20
  4213bf:	sub    BYTE PTR [ecx-0x6c76fced],0x92
  4213c6:	adc    BYTE PTR [eax+0x522556da],dl
  4213cc:	or     BYTE PTR [esi-0x488df329],dl
  4213d2:	aam    0x81
  4213d4:	xor    BYTE PTR es:[edx-0x7905f552],ah
  4213db:	repz xor al,0x6c
  4213de:	sub    BYTE PTR [edi+0x2cfb386e],cl
  4213e4:	lea    esp,[esi+0x58]
  4213e7:	jg     0x4213b0
  4213e9:	fisubr WORD PTR [ebx-0x71]
  4213ec:	fst    QWORD PTR ds:0xc7d7627a
  4213f2:	ficom  WORD PTR [edi+0x53]
  4213f5:	inc    edx
  4213f6:	imul   ecx,esi,0xffffffab
  4213f9:	popa   
  4213fa:	xor    al,bl
  4213fc:	lock push es
  4213fe:	cmp    bl,0x4f
  421401:	push   ebp
  421402:	pop    es
  421403:	jecxz  0x4213f0
  421405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421406:	fidiv  DWORD PTR [eax+edx*8]
  421409:	push   esp
  42140a:	mov    ds:0xdf3dea0a,al
  42140f:	mov    eax,ds:0xf71114be
  421414:	jbe    0x42139b
  421416:	gs sbb bh,ah
  421419:	mov    dl,0xa
  42141b:	cmp    al,0x55
  42141d:	mov    dh,0x5c
  42141f:	jle    0x421412
  421421:	test   esp,0x66d7e619
  421427:	mov    edi,0x965d3bc5
  42142c:	ja     0x4213f9
  42142e:	mov    ds:0xa34ce75c,eax
  421433:	sub    bl,BYTE PTR [edi+0x5685f208]
  421439:	icebp  
  42143a:	les    esp,FWORD PTR [edx]
  42143c:	or     esi,0xffffffd4
  42143f:	pop    edx
  421440:	fnstcw WORD PTR [ebx-0x52b5366f]
  421446:	in     eax,0x15
  421448:	nop
  421449:	sbb    al,0x1f
  42144b:	out    0x88,al
  42144d:	addr16 (bad) 
  42144f:	jge    0x42149b
  421451:	and    BYTE PTR [esi-0x80],bh
  421454:	adc    al,0x1a
  421456:	cmp    eax,0x558a0906
  42145b:	lods   al,BYTE PTR ds:[esi]
  42145c:	scas   al,BYTE PTR es:[edi]
  42145d:	mov    cs,ecx
  42145f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421460:	push   edi
  421461:	sub    eax,0x947b9d97
  421466:	clc    
  421467:	int3   
  421468:	mov    bh,0xb6
  42146a:	int3   
  42146b:	repz call 0x41e4:0x7eff1366
  421473:	iret   
  421474:	inc    esp
  421475:	fist   DWORD PTR [ebp-0x73]
  421478:	inc    esi
  421479:	(bad)  
  42147a:	push   ebx
  42147b:	aas    
  42147c:	(bad)  
  42147d:	rcr    DWORD PTR [edx-0x3b48e2ea],1
  421483:	out    dx,al
  421484:	or     esp,DWORD PTR ds:0xac98162a
  42148a:	mov    esi,0x64216433
  42148f:	mov    eax,ds:0x568a4ee4
  421494:	in     eax,dx
  421495:	addr16 xchg ebx,eax
  421497:	sub    DWORD PTR [edi+ebp*2],0xffffff88
  42149b:	sbb    bl,BYTE PTR [ebx+eiz*2-0x5b06d564]
  4214a2:	stos   BYTE PTR es:[edi],al
  4214a3:	or     ebx,DWORD PTR ds:0xd816532f
  4214a9:	push   edx
  4214aa:	scas   al,BYTE PTR es:[edi]
  4214ab:	(bad)  
  4214ac:	jbe    0x42145a
  4214ae:	rcr    BYTE PTR [ecx+0x6e],0xd3
  4214b2:	leave  
  4214b3:	ds ins DWORD PTR es:[edi],dx
  4214b5:	cwde   
  4214b6:	aad    0xdc
  4214b8:	(bad)
  4214bc:	or     eax,0x81f91ad6
  4214c1:	xor    cl,BYTE PTR [eax+ebx*8+0x661ffc56]
  4214c8:	in     eax,0x33
  4214ca:	rol    bl,0x90
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0xe31ccdba
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x729e09c7
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	call   DWORD PTR [ebx-0x68]
  421830:	jmp    0xaebdca3f
  421835:	pusha  
  421836:	int    0x80
  421838:	scas   eax,DWORD PTR es:[edi]
  421839:	cli    
  42183a:	fucom  st(1)
  42183c:	ret    0xb279
  42183f:	mov    cl,0x7b
  421841:	scas   al,BYTE PTR es:[edi]
  421842:	pusha  
  421843:	leave  
  421844:	sub    BYTE PTR [edi-0x3de1dd46],0x79
  42184b:	or     dh,BYTE PTR [ecx-0x369f5185]
  421851:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421858:	or     dh,BYTE PTR [ecx-0x369f5185]
  42185e:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421865:	or     dh,BYTE PTR [ecx+0x3160ae7b]
  42186b:	sub    BYTE PTR [edi+0x78012cfa],0x77
  421872:	or     al,BYTE PTR ds:0x71416372
  421878:	and    ebx,0xaa4a0337
  42187e:	adc    BYTE PTR [ecx-0x6f],bh
  421881:	or     ebx,esp
  421883:	(bad)  
  421885:	repnz into 
  421887:	xchg   edi,eax
  421888:	add    bh,BYTE PTR [ebp-0x5d]
  42188b:	pop    ss
  42188c:	fimul  WORD PTR fs:[edi]
  42188f:	mov    es,WORD PTR [edx]
  421891:	lods   al,BYTE PTR ds:[esi]
  421892:	mov    al,ds:0x3e4c8fdd
  421897:	stos   DWORD PTR es:[edi],eax
  421898:	pop    ss
  421899:	sub    dh,ch
  42189b:	xor    al,0xfd
  42189d:	inc    eax
  42189e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42189f:	out    dx,eax
  4218a0:	retf   
  4218a1:	lahf   
  4218a2:	or     al,0x13
  4218a4:	iret   
  4218a5:	jae    0x4218d5
  4218a7:	mov    cl,0x7b
  4218a9:	scas   al,BYTE PTR es:[edi]
  4218aa:	pusha  
  4218ab:	leave  
  4218ac:	sub    BYTE PTR [edi-0x641d4403],0x3a
  4218b3:	repnz and esi,DWORD PTR [ecx-0x13]
  4218b7:	cwde   
  4218b8:	pop    ebx
  4218b9:	mov    ch,ah
  4218bb:	add    dh,BYTE PTR [eax+0x61c9a14]
  4218c1:	mov    ebx,0xc3f25624
  4218c6:	fmul   st,st(2)
  4218c8:	ret    0xdc28
  4218cb:	cmp    ch,bl
  4218cd:	add    cl,ch
  4218cf:	push   ds
  4218d0:	xchg   edi,eax
  4218d1:	push   0xffffffa1
  4218d3:	js     0x421912
  4218d5:	lock push cs
  4218d7:	nop
  4218d8:	sti    
  4218d9:	jae    0x421927
  4218db:	dec    ecx
  4218dc:	jmp    0x918b4385
  4218e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218e2:	mov    al,0xda
  4218e4:	mov    eax,cs
  4218e6:	xor    ecx,DWORD PTR [edx-0x67098e50]
  4218ec:	pop    ebx
  4218ed:	mov    ch,ah
  4218ef:	add    dh,BYTE PTR [ecx-0x677f15ec]
  4218f5:	mov    ebx,0xc3e076c4
  4218fa:	int    0x57
  4218fc:	push   0x44a74628
  421901:	add    BYTE PTR [ecx-0x6e95c37d],bh
  421907:	in     eax,0xa7
  421909:	lock pusha 
  42190b:	out    0x50,al
  42190d:	jae    0x421961
  42190f:	aam    0x74
  421911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421912:	and    dh,BYTE PTR [ecx]
  421914:	adc    ah,BYTE PTR [ebp-0x5582b458]
  42191a:	cmp    dh,dl
  42191c:	and    esi,DWORD PTR [ecx-0x52]
  42191f:	pusha  
  421920:	leave  
  421921:	sub    BYTE PTR [edi-0x6de1dd06],0x3c
  421928:	or     dh,BYTE PTR [ecx-0x369d50c9]
  42192e:	and    BYTE PTR [edi-0x6f],bh
  421931:	ins    DWORD PTR es:[edi],dx
  421932:	push   ds
  421933:	ret    0xa79
  421936:	mov    cl,0x7b
  421938:	scas   al,BYTE PTR es:[edi]
  421939:	pusha  
  42193a:	sub    DWORD PTR [eax+0x1f29fbac],eax
  421940:	enter  0xa79,0x5f
  421944:	jg     0x4218f4
  421946:	pusha  
  421947:	jne    0x4218cf
  421949:	scas   eax,DWORD PTR es:[edi]
  42194a:	cli    
  42194b:	and    bl,BYTE PTR [esi]
  42194d:	ret    0xb768
  421950:	mov    cl,0x7b
  421952:	scas   al,BYTE PTR es:[edi]
  421953:	jo     0x42191e
  421955:	sub    BYTE PTR [edi-0x3de1d806],0x79
  42195c:	dec    ebx
  42195d:	mov    cl,0x7b
  42195f:	mov    esi,0xad80c960
  421964:	cli    
  421965:	and    bl,BYTE PTR [ebx]
  421967:	ret    0xa78
  42196a:	mov    cl,0x7b
  42196c:	scas   al,BYTE PTR es:[edi]
  42196d:	pusha  
  42196e:	int3   
  42196f:	sub    BYTE PTR [esi-0x3de1dd06],0x79
  421976:	or     ah,cl
  421978:	ja     0x421928
  42197a:	pusha  
  42197b:	int    0x80
  42197d:	scas   eax,DWORD PTR es:[edi]
  42197e:	sti    
  42197f:	(bad)  
  421980:	sbb    eax,edx
  421982:	jnp    0x42198e
  421984:	mov    cl,0xfb
  421986:	scas   al,BYTE PTR es:[edi]
  421987:	pusha  
  421988:	fld    DWORD PTR [eax+0x1e22eaaf]
  42198e:	ret    0x1a79
  421991:	mov    cl,0x7b
  421993:	mov    esi,0xaf80c960
  421998:	cli    
  421999:	and    cl,BYTE PTR [esi]
  42199b:	ret    0xa79
  42199e:	mov    cl,0x7b
  4219a0:	scas   al,BYTE PTR es:[edi]
  4219a1:	pusha  
  4219a2:	leave  
  4219a3:	sub    BYTE PTR [edi-0x31d82906],0x79
  4219aa:	arpl   WORD PTR [edx+0x3960ae7b],si
  4219b0:	mov    ebp,DWORD PTR [edi-0x3de1944b]
  4219b6:	jns    0x4219c2
  4219b8:	mov    cl,0x7b
  4219ba:	scas   al,BYTE PTR es:[edi]
  4219bb:	pusha  
  4219bc:	leave  
  4219bd:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  4219c4:	or     dh,BYTE PTR [ecx-0x369f5185]
  4219ca:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  4219d1:	or     dh,BYTE PTR [ecx-0x369f5185]
  4219d7:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  4219de:	or     dh,BYTE PTR [ecx-0x369f5185]
  4219e4:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  4219eb:	or     dh,BYTE PTR [ecx-0x369f5185]
  4219f1:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  4219f8:	or     dh,BYTE PTR [ecx-0x369f5185]
  4219fe:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421a05:	or     dh,BYTE PTR [ecx-0x369f5185]
  421a0b:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421a12:	or     dh,BYTE PTR [ecx-0x369f5185]
  421a18:	sub    BYTE PTR [edi-0x3de1dd06],0x57
  421a1f:	jle    0x4219f5
  421a21:	add    ebx,edx
  421a23:	pusha  
  421a24:	leave  
  421a25:	sub    BYTE PTR [edi-0x3de1d6e6],0x69
  421a2c:	or     dh,BYTE PTR [ecx-0x369b8585]
  421a32:	sub    BYTE PTR [ebx-0x78b1dd06],0x3a
  421a39:	cmp    ch,ah
  421a3b:	xor    al,0xae
  421a3d:	pusha  
  421a3e:	leave  
  421a3f:	sub    BYTE PTR [edi-0x3de1fd06],0x99
  421a46:	and    al,0xc3
  421a48:	or     ah,bl
  421a4a:	add    ecx,ecx
  421a4c:	sub    BYTE PTR [edi-0x3de1bd06],0x79
  421a53:	cli    
  421a54:	mov    edx,0xc93aae7b
  421a59:	sub    BYTE PTR [edi-0x3de1d9de],0x79
  421a60:	or     dh,BYTE PTR [ecx-0x369f5185]
  421a66:	sub    BYTE PTR [edi-0x3dc1dd06],0x79
  421a6d:	jmp    0x80c9:0x60ae7bb1
  421a74:	scas   eax,DWORD PTR es:[edi]
  421a75:	cli    
  421a76:	and    bl,BYTE PTR [esi]
  421a78:	ret    0xa79
  421a7b:	mov    cl,0x7b
  421a7d:	scas   al,BYTE PTR es:[edi]
  421a7e:	pusha  
  421a7f:	leave  
  421a80:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421a87:	or     dh,BYTE PTR [ecx-0x369f5185]
  421a8d:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421a94:	or     dh,BYTE PTR [ecx-0x369f5185]
  421a9a:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421aa1:	or     dh,BYTE PTR [ecx-0x369f5185]
  421aa7:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421aae:	or     dh,BYTE PTR [ecx-0x369f5185]
  421ab4:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421abb:	or     dh,BYTE PTR [ecx-0x369f5185]
  421ac1:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421ac8:	or     dh,BYTE PTR [ecx-0x369f5185]
  421ace:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421ad5:	or     dh,BYTE PTR [ecx-0x369f5185]
  421adb:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421ae2:	or     dh,BYTE PTR [ecx-0x369f5185]
  421ae8:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421aef:	or     dh,BYTE PTR [ecx-0x369f5185]
  421af5:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421afc:	or     dh,BYTE PTR [ecx-0x369f5185]
  421b02:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421b09:	or     dh,BYTE PTR [ecx-0x369f5185]
  421b0f:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421b16:	or     dh,BYTE PTR [ecx-0x369f5185]
  421b1c:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421b23:	or     dh,BYTE PTR [ecx-0x369f5185]
  421b29:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421b30:	or     dh,BYTE PTR [ecx-0x369f5185]
  421b36:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421b3d:	or     dh,BYTE PTR [ecx-0x369f5185]
  421b43:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421b4a:	or     dh,BYTE PTR [ecx-0x369f5185]
  421b50:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421b57:	or     dh,BYTE PTR [ecx-0x369f5185]
  421b5d:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421b64:	or     dh,BYTE PTR [ecx-0x369f5185]
  421b6a:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421b71:	or     dh,BYTE PTR [ecx-0x369f5185]
  421b77:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421b7e:	or     dh,BYTE PTR [ecx-0x369f5185]
  421b84:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421b8b:	or     dh,BYTE PTR [ecx-0x369f5185]
  421b91:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421b98:	or     dh,BYTE PTR [ecx-0x369f5185]
  421b9e:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421ba5:	or     dh,BYTE PTR [ecx-0x369f5185]
  421bab:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421bb2:	or     dh,BYTE PTR [ecx-0x369f5185]
  421bb8:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421bbf:	or     dh,BYTE PTR [ecx-0x369f5185]
  421bc5:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421bcc:	or     dh,BYTE PTR [ecx-0x369f5185]
  421bd2:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421bd9:	or     dh,BYTE PTR [ecx-0x369f5185]
  421bdf:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421be6:	or     dh,BYTE PTR [ecx-0x369f5185]
  421bec:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421bf3:	or     dh,BYTE PTR [ecx-0x369f5185]
  421bf9:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421c00:	or     dh,BYTE PTR [ecx-0x369f5185]
  421c06:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421c0d:	or     dh,BYTE PTR [ecx-0x369f5185]
  421c13:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421c1a:	or     dh,BYTE PTR [ecx-0x369f5185]
  421c20:	sub    BYTE PTR [edi-0x3de1dd06],0x79
  421c27:	or     dh,BYTE PTR [ecx-0x369f5185]
  421c2d:	add    al,0x52
  421c30:	sub    DWORD PTR [esi],ebx
  421c32:	in     eax,dx
  421c33:	jns    0x421c3f
  421c35:	mov    eax,ds:0x6b4aae7b
  421c3a:	pop    edx
  421c3b:	ficomp WORD PTR [ebp+ebx*8+0x5afe5c33]
  421c42:	pop    esp
  421c43:	dec    ebp
  421c44:	inc    esi
  421c45:	jae    0x421cc4
  421c47:	adc    eax,0x44a68bc9
  421c4c:	ror    eax,1
  421c4e:	mov    ebp,0xea4a16a7
  421c53:	dec    eax
  421c54:	inc    esi
  421c55:	sbb    DWORD PTR [eax+0x4afb21b2],0x8c6c0045
  421c5f:	pusha  
  421c60:	out    dx,al
  421c61:	daa    
  421c62:	daa    
  421c63:	scas   eax,DWORD PTR es:[edi]
  421c64:	jae    0x421cd9
  421c66:	imul   ecx,DWORD PTR [ebx+0x37],0x6c
  421c6a:	outs   dx,DWORD PTR ds:[esi]
  421c6b:	pop    ds
  421c6c:	add    dh,al
  421c6e:	pop    esi
  421c6f:	mov    eax,DWORD PTR [ecx+0x6e]
  421c72:	int    0x7
  421c74:	push   esi
  421c75:	repnz das 
  421c77:	jno    0x421cba
  421c79:	add    al,0xe9
  421c7b:	and    esp,DWORD PTR [eax-0x78cc77f5]
  421c81:	add    DWORD PTR [eax+eiz*8+0x38],ecx
  421c85:	pusha  
  421c86:	ror    DWORD PTR [edi-0x5c982d57],1
  421c8c:	inc    esp
  421c8d:	and    BYTE PTR [esi-0x42],bh
  421c90:	xor    ecx,DWORD PTR [eax-0x3b]
  421c93:	test   al,ch
  421c95:	jo     0x421c65
  421c97:	jno    0x421cdb
  421c99:	mov    eax,0x1aed55d6
  421c9e:	push   ebx
  421c9f:	in     eax,0x87
  421ca1:	mul    BYTE PTR [eax]
  421ca3:	mov    ah,0xa5
  421ca5:	nop
  421ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ca7:	test   ch,al
  421ca9:	jno    0x421c43
  421cab:	cmp    DWORD PTR [eax+0x63b1f89f],eax
  421cb1:	dec    ebp
  421cb2:	sub    eax,0xb7276070
  421cb7:	pushf  
  421cb8:	jno    0x421ca5
  421cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cbb:	pop    esp
  421cbc:	leave  
  421cbd:	and    cl,cl
  421cbf:	inc    esi
  421cc0:	or     eax,0xf322feb6
  421cc5:	daa    
  421cc6:	sub    ch,bl
  421cc8:	in     al,0x72
  421cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ccb:	jbe    0x421d40
  421ccd:	push   es
  421cce:	jno    0x421d4f
  421cd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cd1:	sti    
  421cd2:	mov    esi,DWORD PTR [ecx+ebp*8-0x29483077]
  421cd9:	xchg   esp,eax
  421cda:	hlt    
  421cdb:	jp     0x421ce0
  421cdd:	es daa 
  421cdf:	mov    ah,BYTE PTR [ecx]
  421ce1:	or     bh,cl
  421ce3:	xchg   ebp,eax
  421ce4:	test   ebp,edi
  421ce6:	push   edi
  421ce7:	jne    0x421d19
  421ce9:	leave  
  421cea:	xor    al,0x23
  421cec:	mov    eax,0x9ec09c65
  421cf1:	sub    eax,0xe1aaff38
  421cf6:	xchg   esi,eax
  421cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cf8:	outs   dx,BYTE PTR ds:[esi]
  421cf9:	stos   BYTE PTR es:[edi],al
  421cfa:	and    DWORD PTR [eax-0x61],ecx
  421cfd:	dec    esi
  421cfe:	jae    0x421d6e
  421d00:	xor    eax,0x48fff64
  421d05:	test   BYTE PTR [edi+0x2d42730e],0x12
  421d0c:	ins    DWORD PTR es:[edi],dx
  421d0d:	stos   BYTE PTR es:[edi],al
  421d0e:	sbb    eax,0xc9fd919f
  421d13:	imul   esp,edx,0x407e2f72
  421d19:	stos   BYTE PTR es:[edi],al
  421d1a:	rcl    BYTE PTR [esi+0x451b92b3],cl
  421d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d21:	dec    edi
  421d22:	inc    eax
  421d23:	stos   DWORD PTR es:[edi],eax
  421d24:	pop    esp
  421d25:	mov    dh,0xde
  421d27:	pop    edi
  421d28:	push   esp
  421d29:	sub    eax,DWORD PTR [ebp-0x77]
  421d2c:	imul   eax,DWORD PTR [eax-0x63],0x78ec4f33
  421d33:	or     eax,0xd344aa86
  421d38:	adc    al,0xfa
  421d3a:	mov    dl,0x30
  421d3c:	and    DWORD PTR [ecx],ecx
  421d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d3f:	popa   
  421d40:	pop    ebp
  421d41:	xchg   ebx,eax
  421d42:	mov    ebp,0x2150ddbc
  421d47:	xchg   DWORD PTR [ecx-0x6c7c8584],esp
  421d4d:	arpl   WORD PTR [esi+0x53],bx
  421d50:	mul    eax
  421d52:	or     ah,BYTE PTR [ebp+0x7a]
  421d55:	(bad)  
  421d56:	cmp    ebx,DWORD PTR [esi]
  421d58:	jno    0x421d92
  421d5a:	cmc    
  421d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d5c:	fs push es
  421d5e:	mov    eax,0x68f14a3b
  421d63:	in     eax,0x88
  421d65:	icebp  
  421d66:	dec    eax
  421d67:	aam    0xf8
  421d69:	pop    ecx
  421d6a:	xor    ecx,eax
  421d6c:	repz adc BYTE PTR [edx+0x60],ch
  421d70:	gs jae 0x421de7
  421d73:	fidiv  DWORD PTR [esi+ebp*8-0x25d1e8d6]
  421d7a:	iret   
  421d7b:	(bad)  
  421d7c:	loop   0x421d48
  421d7e:	clc    
  421d7f:	or     al,0xc6
  421d81:	or     BYTE PTR [edx],bl
  421d83:	xor    DWORD PTR [edi+0x55bf91de],edi
  421d89:	sahf   
  421d8a:	enter  0x5da2,0xb0
  421d8e:	out    dx,al
  421d8f:	out    0x52,al
  421d91:	out    0x9c,al
  421d93:	rcr    ecx,1
  421d95:	je     0x421d88
  421d97:	repnz mov ds,WORD PTR [ecx-0x6ddb50a9]
  421d9e:	add    DWORD PTR [eax-0x34],edx
  421da1:	fmul   QWORD PTR [edi+ebx*1]
  421da4:	add    esi,DWORD PTR [esi+0x1c]
  421da7:	add    eax,0x8953e67c
  421dac:	inc    edi
  421dad:	jl     0x421dbf
  421daf:	mov    edi,0xd7ed35d0
  421db4:	sti    
  421db5:	xlat   BYTE PTR ds:[ebx]
  421db6:	sub    al,0x97
  421db8:	(bad)  
  421db9:	in     al,0x56
  421dbb:	sbb    ebp,DWORD PTR [edx-0xc189959]
  421dc1:	adc    BYTE PTR [edx+edx*2],al
  421dc4:	push   esi
  421dc5:	mov    ebp,0x2fff9bcf
  421dca:	sbb    DWORD PTR [eax-0x47],ebp
  421dcd:	repnz push 0xbb3c26bc
  421dd3:	shr    BYTE PTR [eax],cl
  421dd5:	shl    BYTE PTR [edx-0x7c],cl
  421dd8:	pop    ebp
  421dd9:	rol    WORD PTR es:[ebx+0x4b],1
  421dde:	pushf  
  421ddf:	leave  
  421de0:	cmp    al,0x6c
  421de2:	sar    ch,0x3c
  421de5:	lahf   
  421de6:	mov    al,ds:0xf416d521
  421deb:	cmp    al,0x89
  421ded:	add    al,0x98
  421def:	shl    BYTE PTR [ebx+ebp*8+0x6e],1
  421df3:	xor    eax,0xa864078d
  421df8:	sbb    al,0x87
  421dfa:	jmp    0xc770cf71
  421dff:	out    0xd,eax
  421e01:	push   esi
  421e02:	mov    fs,WORD PTR [ecx+edi*8-0x6d]
  421e06:	vaddsubps ymm0,ymm2,YMMWORD PTR [esi]
  421e0a:	ins    DWORD PTR es:[edi],dx
  421e0b:	(bad)  
  421e0c:	sti    
  421e0d:	jbe    0x421e65
  421e0f:	xor    bh,dh
  421e11:	dec    esp
  421e12:	jbe    0x421e8c
  421e14:	adc    esp,edx
  421e16:	jmp    0x421e1f
  421e18:	jbe    0x421e54
  421e1a:	mov    WORD PTR [ebp+0x2e],?
  421e1d:	gs jno 0x421e4d
  421e20:	cmp    ecx,eax
  421e22:	mov    eax,ds:0xaf7bf7fd
  421e27:	mov    edx,0xc0d2d642
  421e2c:	adc    ebp,DWORD PTR [edi]
  421e2e:	in     al,0x86
  421e30:	jg     0x421ddc
  421e32:	aad    0x12
  421e34:	inc    ecx
  421e35:	clc    
  421e36:	daa    
  421e37:	fldenv ss:[edi]
  421e3a:	or     edi,ecx
  421e3c:	out    dx,eax
  421e3d:	mov    dl,0x11
  421e3f:	pop    edx
  421e40:	sub    al,0x4
  421e42:	lahf   
  421e43:	pushf  
  421e44:	cmp    al,0x1b
  421e46:	pop    es
  421e47:	push   0xb137c965
  421e4c:	and    esp,ebx
  421e4e:	ret    0xbdac
  421e51:	jmp    0x421de0
  421e53:	push   eax
  421e54:	xchg   ecx,esp
  421e56:	and    al,0xe5
  421e58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e59:	jecxz  0x421eaf
  421e5b:	mov    edx,0x2eb94e9e
  421e60:	inc    ebp
  421e61:	and    ah,BYTE PTR [ebp-0x44]
  421e64:	xchg   ebx,eax
  421e65:	pop    esp
  421e66:	xchg   esi,eax
  421e67:	jle    0x421eaf
  421e69:	rcl    DWORD PTR [ecx],0x99
  421e6c:	push   esi
  421e6d:	add    ecx,DWORD PTR [ebx+0x4d]
  421e70:	fsub   QWORD PTR [esi]
  421e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e73:	icebp  
  421e74:	jae    0x421e51
  421e76:	(bad)  
  421e77:	jns    0x421e60
  421e79:	repz ficom DWORD PTR [ebx+0x43f4ab90]
  421e80:	test   al,0x6f
  421e82:	mov    dl,0x2b
  421e84:	out    dx,eax
  421e85:	fcom   QWORD PTR [esi-0x39]
  421e88:	call   0xbcf8:0x7af311da
  421e8f:	(bad)
  421e92:	retf   0x7b88
  421e95:	fild   WORD PTR [ecx+ecx*2+0x49]
  421e99:	test   DWORD PTR [ebp-0x6f1c2daa],esp
  421e9f:	sbb    eax,0x636bddb
  421ea4:	pop    ds
  421ea5:	enter  0xfe85,0x67
  421ea9:	push   ecx
  421eaa:	dec    edi
  421eab:	out    0x55,eax
  421ead:	stc    
  421eae:	hlt    
  421eaf:	scas   al,BYTE PTR es:[edi]
  421eb0:	add    eax,0x3f3b0df6
  421eb5:	mov    ah,0xf3
  421eb7:	mov    edx,DWORD PTR ds:0xe6580ee
  421ebd:	pop    ds
  421ebe:	mov    esi,0x1f3e91c5
  421ec3:	adc    BYTE PTR [eax-0x1b],0x82
  421ec7:	call   0xfcae:0x6095319a
  421ece:	loop   0x421eb6
  421ed0:	xchg   BYTE PTR [edi+0x168fab48],bl
  421ed6:	push   esp
  421ed7:	jns    0x421e90
  421ed9:	sub    cl,dl
  421edb:	fldl2e 
  421edd:	ror    DWORD PTR [eax],cl
  421edf:	lods   eax,DWORD PTR ds:[esi]
  421ee0:	repz arpl si,si
  421ee3:	call   0x33351d99
  421ee8:	adc    eax,0x9f2c9d33
  421eed:	push   ecx
  421eee:	cmp    DWORD PTR [esi+0x27],ebp
  421ef1:	outs   dx,BYTE PTR ds:[esi]
  421ef2:	jae    0x421ec8
  421ef4:	mov    ch,0x23
  421ef6:	or     eax,0x7d61cddf
  421efb:	leave  
  421efc:	int    0x9a
  421efe:	push   0x5d
  421f00:	aad    0x79
  421f02:	mov    edi,0x2401b2d8
  421f07:	pop    esi
  421f08:	fmul   DWORD PTR [ecx]
  421f0a:	loop   0x421eef
  421f0c:	iret   
  421f0d:	cdq    
  421f0e:	mov    ds:0x973e1a2a,eax
  421f13:	iret   
  421f14:	push   ebp
  421f15:	and    DWORD PTR [ebp-0x49e6e36e],ecx
  421f1b:	xchg   ebx,eax
  421f1c:	push   ecx
  421f1d:	test   BYTE PTR [ebx],dl
  421f1f:	xchg   ecx,edx
  421f21:	pop    eax
  421f22:	inc    esp
  421f23:	or     al,0xb7
  421f25:	or     eax,0xf99fefb5
  421f2a:	loop   0x421f7d
  421f2c:	push   0x74
  421f2e:	int3   
  421f2f:	xor    esi,0x2a
  421f32:	bound  esi,QWORD PTR [bx+di]
  421f35:	data16 mov cl,0x17
  421f38:	stos   BYTE PTR es:[edi],al
  421f39:	push   0xe8b2dda7
  421f3e:	sbb    al,0xc8
  421f40:	or     ch,0xf8
  421f43:	in     eax,dx
  421f44:	inc    edx
  421f45:	loopne 0x421fa2
  421f47:	sbb    esi,esp
  421f49:	adc    al,0x4
  421f4b:	dec    eax
  421f4c:	outs   dx,DWORD PTR ds:[esi]
  421f4d:	pop    ds
  421f4e:	mov    ds:0xa482bbd,eax
  421f53:	dec    esi
  421f54:	aaa    
  421f55:	adc    eax,0x95c43346
  421f5a:	outs   dx,DWORD PTR ds:[esi]
  421f5b:	inc    ecx
  421f5c:	add    al,0x26
  421f5e:	mov    ebp,0xc2c82b9a
  421f63:	call   0x2ce80ed8
  421f68:	mov    edi,0x542772b2
  421f6d:	pop    es
  421f6e:	in     eax,dx
  421f6f:	call   DWORD PTR es:[edx-0x7c]
  421f73:	cs jmp 0x8e74:0x976fb921
  421f7b:	pop    ss
  421f7c:	mov    esi,0xe51dec3b
  421f81:	mov    cl,0x7e
  421f83:	push   esi
  421f84:	or     DWORD PTR [edx],edx
  421f86:	mov    DWORD PTR [edi+eax*4],ebx
  421f89:	sub    eax,0x85a6900e
  421f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f8f:	dec    esi
  421f90:	arpl   WORD PTR [eax-0x78],bp
  421f93:	push   0xd04ca088
  421f98:	adc    BYTE PTR [eax-0xdf82e8f],bh
  421f9e:	adc    ecx,DWORD PTR [ecx-0x51e07881]
  421fa4:	push   0x7d93bd46
  421fa9:	mov    edx,0xff5e1f54
  421fae:	push   ecx
  421faf:	idiv   DWORD PTR fs:[esi+0x4e]
  421fb3:	inc    eax
  421fb4:	xchg   esp,eax
  421fb5:	aad    0xa
  421fb7:	ss dec edx
  421fb9:	ret    
  421fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fbb:	addr16 and al,0x6d
  421fbe:	scas   eax,DWORD PTR es:[edi]
  421fbf:	or     BYTE PTR [ebx],dh
  421fc1:	test   eax,0xf431a28a
  421fc6:	mov    ebp,0xa7ced2cf
  421fcb:	rol    DWORD PTR [ecx+0x63],0xef
  421fcf:	in     al,0x58
  421fd1:	push   es
  421fd2:	adc    eax,0x2513bf2d
  421fd7:	xchg   edi,eax
  421fd8:	and    BYTE PTR ds:0x6a1c92ac,0x18
  421fdf:	inc    edx
  421fe0:	repz mov edi,0xf12b7765
  421fe6:	cmpxchg DWORD PTR [edi+0x24a8a2f2],ecx
  421fed:	mov    ch,0x91
  421fef:	or     dh,bh
  421ff1:	repnz cwde 
  421ff3:	jns    0x42202f
  421ff5:	sub    eax,0x5fc10af0
  421ffa:	inc    esp
  421ffb:	xchg   edi,eax
  421ffc:	or     ebx,ebx
  421ffe:	outs   dx,BYTE PTR ds:[esi]
  421fff:	adc    al,0x1e
  422001:	fild   WORD PTR [ecx+0x746e4678]
  422007:	mov    dh,0x2
  422009:	rol    DWORD PTR [ecx-0x234633a6],0x8d
  422010:	inc    ecx
  422011:	(bad)  
  422012:	pop    esp
  422013:	xchg   esp,eax
  422014:	or     DWORD PTR [eax],ebx
  422016:	in     eax,dx
  422017:	mov    esp,0x50a7fb49
  42201c:	(bad)  
  42201d:	and    BYTE PTR [eax],0x94
  422020:	push   esp
  422021:	sbb    DWORD PTR [edi],ebx
  422023:	mul    BYTE PTR [ebp-0x143f3e75]
  422029:	out    0x12,al
  42202b:	cs mov esp,0x99de7ae9
  422031:	mov    BYTE PTR [ebp+0x43f260ec],ah
  422037:	push   ebx
  422038:	mov    esp,0xd037f6f5
  42203d:	inc    ecx
  42203e:	lds    ecx,FWORD PTR [eax-0x35c00e0c]
  422044:	xchg   ecx,eax
  422045:	test   al,0x91
  422047:	push   ebp
  422048:	daa    
  422049:	sahf   
  42204a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42204b:	retf   
  42204c:	pop    esp
  42204d:	(bad)  
  42204e:	sbb    BYTE PTR [eax-0x59],bl
  422051:	retf   
  422052:	dec    esi
  422053:	cs je  0x4220cb
  422056:	in     al,dx
  422057:	in     al,0x34
  422059:	xchg   esp,eax
  42205a:	scas   eax,DWORD PTR es:[edi]
  42205b:	or     ebp,DWORD PTR [ebx]
  42205d:	test   eax,0x5b4da4d2
  422062:	or     DWORD PTR [ebx+eiz*8],esp
  422065:	add    eax,0x6bb3afa1
  42206a:	inc    edx
  42206b:	xchg   ebp,eax
  42206c:	sub    eax,0x16c02e2c
  422072:	xor    esi,ecx
  422074:	call   0xd3ae:0xe22d819
  42207b:	dec    esp
  42207c:	cmp    bh,BYTE PTR [ecx-0x29]
  42207f:	vaddss xmm2,xmm2,DWORD PTR [edi]
  422083:	aam    0xf7
  422085:	out    0x7d,al
  422087:	dec    ebx
  422088:	and    DWORD PTR [edx+0x1e],ebx
  42208b:	aam    0xb5
  42208d:	mov    al,ds:0xf831320d
  422092:	int3   
  422093:	dec    eax
  422094:	rol    BYTE PTR [eax+0x385c5acb],cl
  42209a:	lock dec ecx
  42209c:	leave  
  42209d:	test   al,0x87
  42209f:	bound  ebx,QWORD PTR [esi]
  4220a1:	pusha  
  4220a2:	lods   eax,DWORD PTR ds:[esi]
  4220a3:	xor    al,0x5b
  4220a5:	xchg   ebx,eax
  4220a6:	repz xchg esi,eax
  4220a8:	or     al,0xa6
  4220aa:	rdmsr  
  4220ac:	pop    ecx
  4220ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220ae:	cld    
  4220af:	pop    ebx
  4220b0:	and    esi,DWORD PTR [edx+0x6e]
  4220b3:	add    DWORD PTR [ebx],ebp
  4220b5:	test   eax,0xe342b227
  4220ba:	lods   al,BYTE PTR ds:[esi]
  4220bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220bc:	fmulp  st(3),st
  4220be:	or     dh,BYTE PTR [ebp+0x58535d75]
  4220c4:	shl    dh,1
  4220c6:	enter  0x18d4,0xa2
  4220ca:	in     eax,dx
  4220cb:	imul   esp,DWORD PTR [ebx+ecx*2],0xb2e53f2e
  4220d2:	fnstenv [esp+eiz*8-0x1e]
  4220d6:	mov    ?,ebx
  4220d8:	(bad)  
  4220d9:	ins    BYTE PTR es:[edi],dx
  4220da:	push   ebp
  4220db:	test   esp,eax
  4220dd:	shl    BYTE PTR ds:0x7000260c,1
  4220e3:	inc    edx
  4220e4:	push   ss
  4220e5:	and    eax,0x86b5bbac
  4220ea:	and    DWORD PTR [ebp-0x71],ebx
  4220ed:	imul   ecx,ebp,0x72
  4220f0:	inc    ecx
  4220f1:	fdiv   st,st(6)
  4220f3:	dec    esi
  4220f4:	sub    ebx,DWORD PTR [edi+edi*1+0x127a1627]
  4220fb:	ins    BYTE PTR es:[edi],dx
  4220fc:	jmp    0x42208e
  4220fe:	mov    edx,ebx
  422100:	and    DWORD PTR [ebx-0x2bd3ab89],ebx
  422106:	fiadd  DWORD PTR [ebx]
  422108:	loope  0x422120
  42210a:	mov    ebx,0x22c6f42
  42210f:	loopne 0x42212d
  422111:	out    0x52,al
  422113:	cli    
  422114:	lock gs xchg ebp,ecx
  422118:	aad    0xcc
  42211a:	fwait
  42211b:	and    esi,edx
  42211d:	nop
  42211e:	sub    cl,bl
  422120:	or     DWORD PTR [edi-0x9],edi
  422123:	sub    eax,0xa1c99959
  422128:	and    eax,0xefcf4b6b
  42212d:	fwait
  42212e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42212f:	cld    
  422130:	retf   0x42a8
  422133:	sub    eax,0x24b76a0d
  422138:	fbstp  TBYTE PTR cs:[eax]
  42213b:	pop    ecx
  42213c:	xor    eax,0x5096bb1f
  422141:	xchg   ebp,eax
  422142:	or     cl,dh
  422144:	mov    ds:0xb2dacd41,al
  422149:	inc    edi
  42214a:	jbe    0x422190
  42214c:	aas    
  42214d:	push   cs
  42214e:	xchg   esp,eax
  42214f:	data16 lods al,BYTE PTR ds:[esi]
  422151:	clc    
  422152:	and    eax,0xf247e86f
  422157:	js     0x4220dc
  422159:	ins    DWORD PTR es:[edi],dx
  42215a:	or     BYTE PTR [edi],dh
  42215c:	push   es
  42215d:	add    eax,ebp
  42215f:	(bad)  
  422160:	into   
  422161:	xor    al,0x78
  422163:	cld    
  422164:	jae    0x42210d
  422166:	loop   0x422180
  422168:	xor    eax,0x1d234a21
  42216d:	mov    BYTE PTR [edx*1+0x3da1cece],al
  422174:	ds jge 0x4221c8
  422177:	inc    ebp
  422178:	out    dx,al
  422179:	ss pop es
  42217b:	sbb    esp,DWORD PTR [eax+0x27]
  42217e:	test   al,0xfb
  422180:	fcomp  DWORD PTR [ebp-0x3b]
  422183:	add    BYTE PTR [edx+0x51],cl
  422186:	scas   al,BYTE PTR es:[edi]
  422187:	scas   eax,DWORD PTR es:[edi]
  422188:	dec    eax
  422189:	cld    
  42218a:	or     al,0x1e
  42218c:	adc    eax,0x9875acba
  422191:	or     ecx,ecx
  422193:	jg     0x4221d4
  422195:	mov    ?,WORD PTR [edx-0x44]
  422198:	enter  0xdbd6,0x5c
  42219c:	mov    ecx,0x7861e8d4
  4221a1:	icebp  
  4221a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221a3:	sub    BYTE PTR [edx+0x2d08c574],ch
  4221a9:	push   eax
  4221aa:	retf   
  4221ab:	dec    di
  4221ad:	pop    eax
  4221ae:	(bad)  
  4221af:	jno    0x4221d8
  4221b1:	push   edi
  4221b2:	mov    ds:0x20daf42d,al
  4221b7:	jg     0x42216c
  4221b9:	aaa    
  4221ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221bb:	cmp    DWORD PTR [ecx],ebx
  4221bd:	push   es
  4221be:	pop    esp
  4221bf:	cwde   
  4221c0:	stos   DWORD PTR es:[edi],eax
  4221c1:	int    0xb5
  4221c3:	lods   al,BYTE PTR ds:[esi]
  4221c4:	or     DWORD PTR [ebp-0x4],0xdcbad492
  4221cb:	aaa    
  4221cc:	lock adc edi,DWORD PTR [esi*1-0x3d3f428c]
  4221d4:	jns    0x422179
  4221d6:	lahf   
  4221d7:	sbb    ebp,DWORD PTR [ebp+0x4ae01e01]
  4221dd:	fdiv   QWORD PTR [ecx]
  4221df:	xchg   DWORD PTR [ecx-0x34],ebp
  4221e2:	ret    0x74a6
  4221e5:	xor    DWORD PTR [edi+edx*8],0xffffff90
  4221e9:	popa   
  4221ea:	sub    al,0x30
  4221ec:	out    dx,al
  4221ed:	pop    ebx
  4221ee:	in     eax,0xd5
  4221f0:	cdq    
  4221f1:	iret   
  4221f2:	inc    edx
  4221f3:	mov    ebx,0xc3f898dd
  4221f8:	out    0xfc,al
  4221fa:	and    BYTE PTR [ecx-0x37],ah
  4221fd:	pop    eax
  4221fe:	aam    0xd7
  422200:	fisttp QWORD PTR [eax+0x3c]
  422203:	push   edi
  422204:	xor    BYTE PTR [eax-0x122ebb38],bh
  42220a:	and    al,0x9d
  42220c:	and    al,0xb8
  42220e:	or     bl,BYTE PTR [ebx+0x6f45930c]
  422214:	ds out 0x8,eax
  422217:	loop   0x4221d3
  422219:	fnsave [edx]
  42221b:	sti    
  42221c:	adc    eax,0x29ad16a5
  422221:	pop    ebx
  422222:	out    dx,al
  422223:	outs   dx,BYTE PTR ds:[esi]
  422224:	add    BYTE PTR ds:0x1417c402,dh
  42222a:	pop    es
  42222b:	mov    ebp,0x2cb3090a
  422230:	cmp    cl,BYTE PTR [ebp-0x470c80c9]
  422236:	ss and al,0xde
  422239:	add    bl,BYTE PTR [esi+0x5096fe6]
  42223f:	or     eax,0xc981d7b3
  422244:	and    cl,BYTE PTR [edi]
  422246:	(bad)  
  422247:	test   BYTE PTR [esp+ebx*2+0x1877e93],0x53
  42224f:	push   ebp
  422250:	in     al,0x72
  422252:	push   ds
  422253:	test   al,0x0
  422255:	(bad)  
  422256:	mov    esi,0xa4d7f8fc
  42225b:	hlt    
  42225c:	ror    DWORD PTR [eax-0x29ad53c7],cl
  422262:	jg     0x422285
  422264:	mov    dl,0x90
  422266:	scas   al,BYTE PTR es:[edi]
  422267:	stos   DWORD PTR es:[edi],eax
  422268:	out    dx,eax
  422269:	dec    edx
  42226a:	cmp    ecx,edi
  42226c:	ins    DWORD PTR es:[edi],dx
  42226d:	cdq    
  42226e:	or     DWORD PTR [eax+0x49],esp
  422271:	add    edi,DWORD PTR fs:[ecx]
  422274:	lods   al,BYTE PTR ds:[esi]
  422275:	and    esi,DWORD PTR [ebx+0x12]
  422278:	jno    0x4222bb
  42227a:	pop    es
  42227b:	call   0x96aa:0xab0528b
  422282:	sbb    bh,BYTE PTR [ebx+ebp*1-0x30f4e6b3]
  422289:	mov    edx,0x4a5ac954
  42228e:	scas   al,BYTE PTR es:[edi]
  42228f:	int    0x52
  422291:	xor    al,0x6e
  422293:	jne    0x422288
  422295:	shrd   DWORD PTR [esi],eax,0x3b
  422299:	nop
  42229a:	mov    eax,0xb446f1b8
  42229f:	gs ja  0x422296
  4222a2:	cmp    al,0xba
  4222a4:	sub    esp,DWORD PTR [ebx-0x4c70e9b7]
  4222aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222ab:	push   ecx
  4222ac:	jmp    0x966e:0x7317fabd
  4222b3:	pop    ebx
  4222b4:	xlat   BYTE PTR ds:[ebx]
  4222b5:	adc    cl,BYTE PTR [ebp-0x56]
  4222b8:	scas   al,BYTE PTR es:[edi]
  4222b9:	retf   
  4222ba:	fs stos DWORD PTR es:[edi],eax
  4222bc:	mov    eax,ds:0xa1857995
  4222c1:	scas   eax,DWORD PTR es:[edi]
  4222c2:	out    0x33,eax
  4222c4:	push   eax
  4222c5:	sahf   
  4222c6:	fsub   QWORD PTR [edi+0x22]
  4222c9:	sbb    eax,0x5559a0c2
  4222ce:	pop    ecx
  4222cf:	nop
  4222d0:	lock jae 0x4222bf
  4222d3:	(bad)  
  4222d4:	lock pop ebx
  4222d6:	pusha  
  4222d7:	or     ch,al
  4222d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222da:	mov    dl,0x69
  4222dc:	xor    DWORD PTR [eax],edx
  4222de:	cmp    dl,BYTE PTR ds:0xbe8e
  4222e3:	xor    eax,0xc36ce5b9
  4222e8:	jnp    0x4222d9
  4222ea:	cmp    DWORD PTR [edx],0x29041f8f
  4222f0:	mov    esi,0x89c5483e
  4222f5:	sub    BYTE PTR [esi-0x1e],0xab
  4222f9:	ins    DWORD PTR es:[edi],dx
  4222fa:	imul   BYTE PTR [esi]
  4222fc:	xor    BYTE PTR [esp],cl
  4222ff:	inc    esi
  422300:	push   0x3c
  422302:	daa    
  422303:	mov    ds:0xdf621145,al
  422308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422309:	shl    DWORD PTR [ecx+0x414e9ffe],1
  42230f:	push   cs
  422310:	test   esp,esp
  422312:	div    DWORD PTR fs:[ebp+0x50]
  422316:	mov    cl,0xb4
  422318:	in     al,0x14
  42231a:	int3   
  42231b:	inc    ebx
  42231c:	and    BYTE PTR [ebx],ah
  42231e:	outs   dx,DWORD PTR ds:[esi]
  42231f:	cmp    eax,0x9491383f
  422324:	push   cs
  422325:	in     eax,0x78
  422327:	pop    esi
  422328:	and    BYTE PTR [ecx+0x26],bl
  42232b:	push   esi
  42232c:	daa    
  42232d:	icebp  
  42232e:	push   es
  42232f:	fwait
  422330:	xor    BYTE PTR [ebx-0x7f],cl
  422333:	xchg   esi,eax
  422334:	(bad)  
  422335:	into   
  422336:	mov    ds:0x7da30db,eax
  42233b:	scas   eax,DWORD PTR es:[edi]
  42233c:	fidivr DWORD PTR [eax-0x1ed3371e]
  422342:	imul   ebx,DWORD PTR [edx-0x666c0d6d],0x73
  422349:	pop    ds
  42234a:	fs stc 
  42234c:	retf   0x3d70
  42234f:	jl     0x422390
  422351:	(bad)  
  422352:	jge    0x4222ea
  422354:	(bad)  
  422355:	cdq    
  422356:	cwde   
  422357:	(bad)  
  422358:	push   0x5c82d6e0
  42235d:	jnp    0x4223aa
  42235f:	pop    ds
  422360:	sti    
  422361:	pop    ecx
  422362:	inc    ecx
  422363:	inc    esp
  422364:	nop
  422365:	hlt    
  422366:	scas   eax,DWORD PTR es:[edi]
  422367:	sbb    bh,BYTE PTR [eax+eiz*1+0x19]
  42236b:	sbb    BYTE PTR gs:[edi-0x7e],bl
  42236f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422370:	bound  esp,QWORD PTR [ecx-0x70]
  422373:	int    0x55
  422375:	push   ds
  422376:	ret    0x3336
  422379:	daa    
  42237a:	add    ecx,DWORD PTR [ecx]
  42237c:	pusha  
  42237d:	(bad)  
  42237e:	repnz inc eax
  422380:	pop    ebx
  422381:	retf   
  422382:	(bad)  
  422383:	fxch   st(2)
  422385:	sub    DWORD PTR [ebx-0x4c85aea1],ebp
  42238b:	xchg   DWORD PTR [ebp+eiz*2-0x3d],ebx
  42238f:	not    esi
  422391:	fistp  DWORD PTR [edi-0x78]
  422394:	and    esp,DWORD PTR es:[esp+ebp*2-0x51]
  422399:	or     DWORD PTR [ecx+ebx*4-0x1c],eax
  42239d:	aad    0xc3
  42239f:	out    dx,eax
  4223a0:	fbld   TBYTE PTR [esp+ecx*4]
  4223a3:	in     al,0x99
  4223a5:	lods   eax,DWORD PTR ds:[esi]
  4223a6:	out    dx,eax
  4223a7:	cmc    
  4223a8:	add    eax,0xd0b3617d
  4223ad:	jae    0x422370
  4223af:	dec    edi
  4223b0:	mov    gs,WORD PTR [esi-0x2e48e945]
  4223b6:	fdivr  DWORD PTR [ebp+0x4]
  4223b9:	dec    ebp
  4223ba:	bswap  ebx
  4223bc:	(bad)  
  4223bd:	cmc    
  4223be:	retf   
  4223bf:	cli    
  4223c0:	xor    BYTE PTR [ebx],al
  4223c2:	adc    esi,DWORD PTR [edx-0x65]
  4223c5:	retf   
  4223c6:	js     0x42240b
  4223c8:	adc    edi,DWORD PTR [edx-0x1e]
  4223cb:	mov    ah,dh
  4223cd:	sbb    BYTE PTR [ecx],al
  4223cf:	(bad)  
  4223d0:	push   ss
  4223d1:	lahf   
  4223d2:	fdiv   st(2),st
  4223d4:	scas   eax,DWORD PTR es:[edi]
  4223d5:	sbb    esp,edi
  4223d7:	cwde   
  4223d8:	mov    al,ds:0x6d85074
  4223dd:	push   esp
  4223de:	stos   DWORD PTR es:[edi],eax
  4223df:	ret    
  4223e0:	push   edx
  4223e1:	stc    
  4223e2:	adc    ebx,DWORD PTR [ecx]
  4223e4:	xchg   esi,eax
  4223e5:	bound  ebp,QWORD PTR [esi-0x3a]
  4223e8:	push   ebp
  4223e9:	mov    eax,DWORD PTR [eax-0x7b]
  4223ec:	pop    ss
  4223ed:	fstp   st(4)
  4223ef:	(bad)  
  4223f1:	mov    cl,0x48
  4223f3:	jecxz  0x4223ff
  4223f5:	pop    es
  4223f6:	adc    edi,eax
  4223f8:	inc    esi
  4223f9:	jno    0x42243b
  4223fb:	add    eax,0x415c03f1
  422400:	sub    al,0x6b
  422402:	dec    ecx
  422403:	fdivr  DWORD PTR [ebp-0x63cf0f72]
  422409:	call   0xaa57ce8e
  42240e:	sbb    bl,BYTE PTR [esi]
  422410:	aam    0x53
  422412:	add    BYTE PTR [esi+0xc8cca62],dl
  422418:	cmp    BYTE PTR [eax-0x6],bh
  42241b:	pop    esp
  42241c:	sub    BYTE PTR [ecx+0x4f],ch
  42241f:	mov    fs,WORD PTR [ebx-0x171b46e5]
  422425:	cs (bad) 
  422427:	xor    BYTE PTR [edx-0x24],dh
  42242a:	push   0x86073485
  42242f:	icebp  
  422430:	lods   al,BYTE PTR ds:[esi]
  422431:	out    0xf3,al
  422433:	shl    BYTE PTR [edx-0x7980b6f0],0xd1
  42243a:	in     al,dx
  42243b:	xor    DWORD PTR [esi],ebx
  42243d:	popa   
  42243e:	jns    0x42245b
  422440:	mov    al,0xe8
  422442:	gs mov ebp,0xd151892d
  422448:	lods   eax,DWORD PTR ds:[esi]
  422449:	push   DWORD PTR [esi]
  42244b:	rcl    DWORD PTR [edx-0x21fcb211],0xf3
  422452:	test   eax,0xf24e36e7
  422457:	xchg   edx,eax
  422458:	push   ss
  422459:	aaa    
  42245a:	dec    esp
  42245b:	outs   dx,BYTE PTR ds:[esi]
  42245c:	lock not DWORD PTR [edi]
  42245f:	xor    dl,0x90
  422462:	or     DWORD PTR [ecx],edi
  422464:	xchg   ecx,eax
  422465:	das    
  422466:	mov    ah,0xe3
  422468:	xor    BYTE PTR [esi],bl
  42246a:	jns    0x42243d
  42246c:	out    dx,eax
  42246d:	or     esp,DWORD PTR [esi]
  42246f:	icebp  
  422470:	mov    al,0x18
  422472:	out    dx,eax
  422473:	ret    0xcd6
  422476:	dec    edi
  422477:	cmp    esi,DWORD PTR gs:[edi-0x5f]
  42247b:	dec    edx
  42247c:	jmp    DWORD PTR [esi-0x6ba565bb]
  422482:	mul    DWORD PTR [ebx+0x6]
  422485:	xor    DWORD PTR [ebx-0x72],edx
  422488:	mov    bl,0x46
  42248a:	push   edx
  42248b:	mov    dh,0xc3
  42248d:	sub    eax,0xfe84b
  422492:	retf   0xee6d
  422495:	sahf   
  422496:	fadd   QWORD PTR [ebx+edi*2-0x5c0f065f]
  42249d:	popf   
  42249e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42249f:	jbe    0x4224a1
  4224a1:	mov    esp,0x4e0371c0
  4224a6:	inc    esp
  4224a7:	xlat   BYTE PTR ds:[ebx]
  4224a8:	cwde   
  4224a9:	cmc    
  4224aa:	jecxz  0x422483
  4224ac:	aaa    
  4224ad:	pushf  
  4224ae:	pop    esp
  4224af:	repnz mov ch,BYTE PTR [esi+0x79407f72]
  4224b6:	ror    BYTE PTR [ecx-0x72],cl
  4224b9:	inc    ecx
  4224ba:	fstp   QWORD PTR [ebp*2-0x52fc6034]
  4224c1:	mov    DWORD PTR [edx+0xec35e01],ecx
  4224c7:	adc    eax,0x633a909b
  4224cc:	dec    edi
  4224cd:	inc    ebx
  4224ce:	mov    ebx,0x85e34721
  4224d3:	mov    dl,0x49
  4224d5:	add    ah,BYTE PTR [edi+0x7b]
  4224d8:	xchg   edi,eax
  4224d9:	cli    
  4224da:	xor    DWORD PTR [edx-0x9637779],0xcf462d7f
  4224e4:	and    esp,esi
  4224e6:	pop    esp
  4224e7:	jns    0x422469
  4224e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224ea:	adc    ch,BYTE PTR ds:0x8a60f6ee
  4224f0:	bound  edx,QWORD PTR [eax-0x2c]
  4224f3:	fdiv   QWORD PTR [ecx-0x146d042b]
  4224f9:	and    bl,bl
  4224fb:	hlt    
  4224fc:	mov    dh,0x80
  4224fe:	cmp    al,0x3d
  422501:	mov    ch,0xe7
  422503:	lds    edi,FWORD PTR [esi+ebx*1-0x4964e2d9]
  42250a:	jl     0x42249a
  42250c:	cmp    BYTE PTR [ecx-0x518eaf81],al
  422512:	pop    ecx
  422513:	mov    ebx,DWORD PTR [ecx-0x391abafe]
  422519:	enter  0x8402,0x5b
  42251d:	jno    0x42259e
  42251f:	ret    
  422520:	fimul  WORD PTR [edx-0x14]
  422523:	dec    edx
  422524:	mov    ecx,0x47db0505
  422529:	aaa    
  42252a:	(bad)  
  42252b:	shr    BYTE PTR [edx],1
  42252d:	fldenv [eax]
  42252f:	push   cs
  422530:	xchg   ecx,eax
  422531:	call   0x2360:0xb3ac8acd
  422538:	sub    edi,DWORD PTR [ebx-0x4f675996]
  42253e:	jbe    0x422573
  422540:	lea    edx,[eax-0xe62acf5]
  422546:	mov    esp,0x4b151d98
  42254b:	pushf  
  42254c:	or     bh,BYTE PTR [edi+0x77a2ea76]
  422552:	sbb    al,0xfd
  422554:	inc    ebx
  422555:	or     edi,ebx
  422557:	lods   al,BYTE PTR ds:[esi]
  422558:	adc    eax,0xf52da019
  42255d:	retf   
  42255e:	retf   
  42255f:	jp     0x422562
  422561:	scas   al,BYTE PTR es:[edi]
  422562:	enter  0xd948,0x4d
  422566:	call   0xd11b:0xc1ad655
  42256d:	std    
  42256e:	inc    ebx
  42256f:	aas    
  422570:	cs push ebp
  422572:	scas   eax,DWORD PTR es:[edi]
  422573:	mov    esi,0x99eb83c9
  422578:	in     al,dx
  422579:	cld    
  42257a:	adc    eax,0xc8a681e5
  42257f:	loopne 0x4225c8
  422581:	and    cl,BYTE PTR [ebx]
  422583:	pushf  
  422584:	mov    edi,0x27fed68a
  422589:	sti    
  42258a:	ins    BYTE PTR es:[edi],dx
  42258b:	ss cdq 
  42258d:	push   cs
  42258e:	and    al,0x9a
  422590:	aaa    
  422591:	hlt    
  422592:	popf   
  422593:	sub    eax,0x123dcef8
  422598:	neg    DWORD PTR [edi+0x644c051]
  42259e:	(bad)  
  42259f:	loop   0x4225e4
  4225a1:	xchg   ebp,eax
  4225a2:	inc    BYTE PTR [edi-0x71]
  4225a5:	inc    esi
  4225a6:	add    eax,0x130ca88a
  4225ab:	shr    DWORD PTR [eax-0x10],1
  4225ae:	iret   
  4225af:	shl    bh,cl
  4225b1:	rol    edi,0x2f
  4225b4:	out    dx,eax
  4225b5:	ss arpl bp,dx
  4225b8:	jne    0x422552
  4225ba:	fisttp QWORD PTR [edx+0x56a9e262]
  4225c0:	fcmovnb st,st(7)
  4225c2:	out    0x51,eax
  4225c4:	fwait
  4225c5:	test   esp,ebp
  4225c7:	mov    bh,0x69
  4225c9:	nop
  4225ca:	(bad)  
  4225cb:	mov    eax,ds:0xc86aa54d
  4225d0:	and    DWORD PTR [edx+eax*2+0x32305812],eax
  4225d7:	test   al,0x63
  4225d9:	mov    eax,0x35a07a8f
  4225de:	hlt    
  4225df:	xor    bl,BYTE PTR [edx]
  4225e1:	mov    edi,0xbcf490cb
  4225e6:	js     0x422638
  4225e8:	js     0x422585
  4225ea:	scas   al,BYTE PTR es:[edi]
  4225eb:	in     al,dx
  4225ec:	push   0x1c8fc1ad
  4225f1:	ret    
  4225f2:	and    BYTE PTR [ecx-0x7],cl
  4225f5:	and    BYTE PTR [ecx+edx*4+0x43],ah
  4225f9:	push   ds
  4225fa:	lock sbb BYTE PTR [esi+0x4c2bff1a],bl
  422601:	pop    esp
  422602:	mov    cl,0xe9
  422604:	hlt    
  422605:	lds    esp,FWORD PTR [ecx-0x12cba3d2]
  42260b:	das    
  42260c:	and    edx,DWORD PTR [edx+0x244dfacf]
  422612:	leave  
  422613:	sbb    al,0x96
  422615:	push   esp
  422616:	lods   eax,DWORD PTR ds:[esi]
  422617:	aad    0xa9
  422619:	xor    ah,al
  42261b:	sar    DWORD PTR [eax],0xa8
  42261e:	pop    edi
  42261f:	in     eax,dx
  422620:	ins    DWORD PTR es:[edi],dx
  422621:	xor    BYTE PTR [edi+0x5e],bh
  422624:	ins    DWORD PTR es:[edi],dx
  422625:	pop    edi
  422626:	push   0xffffffa1
  422628:	mov    bh,0x6
  42262a:	push   esi
  42262b:	jle    0x42261d
  42262d:	inc    edi
  42262e:	xchg   esp,eax
  42262f:	mov    cl,0x60
  422631:	scas   al,BYTE PTR es:[edi]
  422632:	(bad)  
  422633:	or     al,0x4f
  422635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422636:	jbe    0x4225c7
  422638:	adc    BYTE PTR [eax-0x68],bl
  42263b:	std    
  42263c:	jp     0x4226a4
  42263e:	mov    esi,0x4d803a80
  422643:	leave  
  422644:	pop    ebp
  422645:	cmp    al,0xe8
  422647:	push   edi
  422648:	cmp    DWORD PTR [ebp+0x4],edx
  42264b:	dec    ebx
  42264c:	pop    esp
  42264d:	maskmovq mm4,(bad)
  42264e:	mul    DWORD PTR [ecx+0x1e]
  422651:	add    ecx,esi
  422653:	xor    al,0xb
  422655:	test   DWORD PTR [ecx],eax
  422657:	mov    WORD PTR [edx+ebp*2-0x8d0bc1d],cs
  42265e:	fdivr  st(5),st
  422660:	inc    edx
  422661:	inc    ecx
  422662:	mov    dh,0xef
  422664:	test   al,0x3d
  422666:	xor    al,0x95
  422668:	jae    0x4226c6
  42266a:	js     0x4226b2
  42266c:	jno    0x422656
  42266e:	mul    BYTE PTR [edx+0x14]
  422671:	xor    ch,BYTE PTR [edx]
  422673:	(bad)  
  422674:	nop
  422675:	les    ebx,FWORD PTR [ebx+0x6c]
  422678:	(bad)  
  422679:	jno    0x422638
  42267b:	aas    
  42267c:	mov    edx,0xc1d1df3d
  422681:	lds    esp,FWORD PTR [edx+0x3e]
  422684:	cld    
  422685:	repnz jmp 0x17ac:0xb500f99e
  42268d:	icebp  
  42268e:	push   edi
  42268f:	jno    0x422685
  422691:	fstp   DWORD PTR [ecx]
  422693:	dec    ecx
  422694:	scas   al,BYTE PTR es:[edi]
  422695:	jb     0x422711
  422697:	jne    0x422642
  422699:	sbb    BYTE PTR [esi],dl
  42269b:	loopne 0x4226f5
  42269d:	xor    DWORD PTR [eax+0x741bf302],esi
  4226a3:	int    0x8d
  4226a5:	ret    0x60ed
  4226a8:	or     eax,0x5c30af7d
  4226ad:	aas    
  4226ae:	clc    
  4226af:	pop    edi
  4226b0:	mov    ds:0xd064de9c,eax
  4226b5:	xchg   esi,eax
  4226b6:	mov    esi,0x61543bc0
  4226bb:	dec    ebp
  4226bc:	xchg   ebp,eax
  4226bd:	and    al,0x9
  4226bf:	inc    edx
  4226c0:	xchg   DWORD PTR [esi],ebx
  4226c2:	fstp   TBYTE PTR [esi+0x38]
  4226c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226c6:	xor    dh,bh
  4226c8:	lock stos DWORD PTR es:[edi],eax
  4226ca:	jp     0x42273a
  4226cc:	jp     0x42271e
  4226ce:	xchg   BYTE PTR [edi],al
  4226d0:	xchg   ebx,eax
  4226d1:	xchg   ah,ah
  4226d3:	sub    bh,cl
  4226d5:	pop    esp
  4226d6:	icebp  
  4226d7:	fldcw  WORD PTR [edx]
  4226d9:	cmp    DWORD PTR [esi-0x4705aac],esp
  4226df:	push   edx
  4226e0:	mov    dl,0xa5
  4226e2:	mov    esi,0x5e6cfc08
  4226e7:	sub    al,al
  4226e9:	arpl   WORD PTR [edx-0xaaa481f],sp
  4226ef:	mov    ebp,0xe174532
  4226f4:	adc    eax,0xf89246ce
  4226f9:	les    ebx,FWORD PTR [eax-0x17646347]
  4226ff:	pusha  
  422700:	cmp    eax,0x5fe0b046
  422705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422706:	mov    ah,0xfd
  422708:	push   ebx
  422709:	jp     0x42275c
  42270b:	jmp    0xfa183215
  422710:	cli    
  422711:	les    esi,FWORD PTR [ebx]
  422713:	xlat   BYTE PTR ds:[ebx]
  422714:	out    dx,eax
  422715:	sub    eax,0xb5a9f99c
  42271a:	push   ss
  42271b:	or     ebx,DWORD PTR ds:0xb58ea521
  422721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422722:	loop   0x4226f2
  422724:	icebp  
  422725:	jp     0x4226eb
  422727:	in     al,dx
  422728:	jo     0x4226cf
  42272a:	jno    0x422717
  42272c:	and    eax,0x811710b8
  422731:	cmp    edx,DWORD PTR [eax+0x7e425d25]
  422737:	mov    esp,0x9b12875e
  42273c:	or     al,0xdc
  42273e:	and    DWORD PTR [ebp-0x6a29c65],eax
  422744:	cwde   
  422745:	imul   eax,DWORD PTR [eax-0x64d1a79],0x53
  42274c:	call   DWORD PTR [ebx-0x4e]
  42274f:	xchg   DWORD PTR [edi+0x1f32b14],ebx
  422755:	nop
  422756:	into   
  422757:	or     ebx,DWORD PTR [edi-0x6e9ac89b]
  42275d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42275e:	imul   ebx,DWORD PTR [eax-0x1f],0x1bc793f
  422765:	cwde   
  422766:	fwait
  422767:	mov    ah,0xe9
  422769:	or     bh,BYTE PTR [ebx-0x23]
  42276c:	jmp    0x53e4697f
  422771:	in     al,0x6b
  422773:	xchg   ebp,eax
  422774:	and    ch,ch
  422776:	push   cs
  422777:	xor    cl,BYTE PTR [ecx-0x2]
  42277a:	sbb    BYTE PTR [ebx+0x32826f5d],0x5d
  422781:	leave  
  422782:	jp     0x2b9e2ebb
  422788:	stc    
  422789:	js     0x42272b
  42278b:	pop    ebx
  42278c:	jno    0x422749
  42278e:	add    DWORD PTR [edi+0x1bf42408],edi
  422794:	bound  edx,QWORD PTR [ebp-0x7bcff94c]
  42279a:	add    eax,0x5ad7a12f
  42279f:	imul   esp,DWORD PTR ds:0xe8ef1fea,0xd2c471df
  4227a9:	mov    dl,0xee
  4227ab:	icebp  
  4227ac:	leave  
  4227ad:	sbb    esp,DWORD PTR [ebx]
  4227af:	push   ds
  4227b0:	sub    edi,DWORD PTR [ebx+0x4b18a658]
  4227b6:	aaa    
  4227b7:	(bad)  
  4227b8:	sub    cl,BYTE PTR [ecx+0x54af63a5]
  4227be:	or     al,0xdb
  4227c0:	xchg   esp,eax
  4227c1:	mov    dl,BYTE PTR [edi+0x7d]
  4227c4:	xchg   DWORD PTR [edi-0x3ad15ac1],edi
  4227ca:	dec    edi
  4227cb:	add    DWORD PTR [edi],edx
  4227cd:	add    al,0x67
  4227cf:	dec    ebx
  4227d0:	jge    0x4227be
  4227d2:	jns    0x422797
  4227d4:	pop    ds
  4227d5:	add    eax,0x5d4ce9df
  4227da:	pop    ebp
  4227db:	or     eax,0x8d819672
  4227e0:	ror    DWORD PTR [edx],cl
  4227e2:	cmp    al,0x26
  4227e4:	mov    ebp,0x3fb89bc6
  4227e9:	sub    ebp,eax
  4227eb:	push   esi
  4227ec:	ret    
  4227ed:	push   esi
  4227ee:	xor    DWORD PTR [edi+ebp*8],esp
  4227f1:	lock call 0xbfbf:0xa14fdd8d
  4227f9:	cli    
  4227fa:	cmp    dl,BYTE PTR ss:[edi]
  4227fd:	jmp    0x6db2:0xbf02a8fc
  422804:	dec    edx
  422805:	js     0x4227a6
  422807:	sbb    DWORD PTR [ecx+0x3998947],esp
  42280d:	out    0xf8,eax
  42280f:	add    DWORD PTR [ebx-0x1789ca64],ebp
  422815:	pop    ds
  422816:	jl     0x42286e
  422818:	in     al,dx
  422819:	dec    ecx
  42281a:	cmc    
  42281b:	mov    bl,0xb
  42281d:	cmp    dh,BYTE PTR [esi+0x15f0a886]
  422823:	test   eax,0xa7009205
  422828:	gs xchg esi,eax
  42282a:	cwde   
  42282b:	jp     0xf42fea10
  422831:	fs push eax
  422833:	mov    ebx,0x6c7b86e0
  422838:	sbb    al,0x26
  42283a:	sti    
  42283b:	mov    al,0x69
  42283d:	or     al,0xf1
  42283f:	pop    ss
  422840:	ins    BYTE PTR es:[edi],dx
  422841:	jns    0x422856
  422843:	shr    BYTE PTR [ebx],cl
  422845:	ss jo  0x422842
  422848:	inc    esp
  422849:	sub    eax,0x51e51a75
  42284e:	push   0xf0e19267
  422853:	pop    esp
  422854:	push   0x6e
  422856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422857:	stc    
  422858:	retf   0x830c
  42285b:	pop    ds
  42285c:	test   ebx,eax
  42285e:	adc    esp,DWORD PTR [ebx]
  422860:	ja     0x4228c3
  422862:	inc    ecx
  422863:	lods   al,BYTE PTR ds:[esi]
  422864:	enter  0xe442,0x6
  422868:	retf   
  422869:	xor    ecx,eax
  42286b:	sub    al,0xe3
  42286d:	jl     0x4228de
  42286f:	imul   ebp,DWORD PTR [ebx-0x6eddf1f5],0xffffffaf
  422876:	adc    al,0x60
  422878:	push   esi
  422879:	mov    bh,dl
  42287b:	jmp    0x8664fbd4
  422880:	or     al,0x63
  422882:	push   ebx
  422883:	mov    dh,0x22
  422885:	ss pop es
  422887:	daa    
  422888:	or     dh,BYTE PTR [esi+0x70]
  42288b:	shl    DWORD PTR [ecx],0xde
  42288e:	ret    0x2400
  422891:	ret    0x646a
  422894:	aam    0xb9
  422896:	shl    BYTE PTR [edx-0xcc7429a],0xea
  42289d:	bound  edx,QWORD PTR [ebx+edi*1]
  4228a0:	push   cs
  4228a1:	cmp    ebp,DWORD PTR [esi]
  4228a3:	pop    ebp
  4228a4:	push   edx
  4228a5:	pop    esi
  4228a6:	pop    ecx
  4228a7:	cmove  edi,DWORD PTR [ecx-0x49]
  4228ab:	out    dx,al
  4228ac:	add    al,0x26
  4228ae:	mov    dh,0x50
  4228b0:	xor    DWORD PTR [ebp+0x3a],ebx
  4228b3:	push   0xaff949d5
  4228b8:	clc    
  4228b9:	push   eax
  4228ba:	pop    ss
  4228bb:	sbb    esp,DWORD PTR [eax+0x7e]
  4228be:	jne    0x42284e
  4228c0:	ds aaa 
  4228c2:	sti    
  4228c3:	stc    
  4228c4:	mov    edi,?
  4228c6:	clc    
  4228c7:	fdivrp st(5),st
  4228c9:	pop    ebx
  4228ca:	arpl   sp,dx
  4228cc:	add    bh,BYTE PTR [edi+0x701611a8]
  4228d2:	data16 ins BYTE PTR es:[edi],dx
  4228d4:	ror    DWORD PTR [ebx],1
  4228d6:	push   eax
  4228d7:	push   cs
  4228d8:	or     al,dh
  4228da:	cmp    bh,BYTE PTR [ebx+esi*2+0x74]
  4228de:	paddb  mm5,mm2
  4228e1:	clc    
  4228e2:	or     dh,BYTE PTR [edi-0xb79358f]
  4228e8:	mov    al,0xac
  4228ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228eb:	add    al,0x40
  4228ed:	fs sub eax,0x2578aa68
  4228f3:	das    
  4228f4:	cld    
  4228f5:	cmp    al,0xbd
  4228f7:	retf   0x1f17
  4228fa:	jle    0x4228a5
  4228fc:	and    eax,0x3903da31
  422901:	and    BYTE PTR [edi+0x4e],ch
  422904:	fwait
  422905:	sub    ch,BYTE PTR [edx+0x6204fef4]
  42290b:	pop    edx
  42290c:	(bad)  
  42290d:	push   esi
  42290e:	aam    0x9f
  422910:	cdq    
  422911:	inc    edx
  422912:	mov    ch,0x7a
  422914:	addr16 mov ebx,0x42d4e27c
  42291a:	inc    edi
  42291b:	xchg   edi,eax
  42291c:	pop    ss
  42291d:	push   eax
  42291e:	ds mov bl,0x69
  422921:	and    al,0xda
  422923:	sub    esi,DWORD PTR [ebp-0x58]
  422926:	cmp    al,0x93
  422928:	push   edi
  422929:	idiv   BYTE PTR [ebx]
  42292b:	xor    BYTE PTR [ebx],ah
  42292d:	jns    0x42292b
  42292f:	mov    WORD PTR ds:0xc898eb90,es
  422935:	inc    esp
  422936:	ins    DWORD PTR es:[edi],dx
  422937:	ss cmp eax,0x98d95800
  42293d:	pop    eax
  42293e:	test   al,0xce
  422940:	mov    bl,0xd1
  422942:	xchg   esp,eax
  422943:	cmc    
  422944:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  422946:	push   edi
  422947:	cmp    al,0x4c
  422949:	call   FWORD PTR [esi]
  42294b:	or     DWORD PTR [edi-0x5c707f89],eax
  422951:	cmc    
  422952:	and    ch,al
  422954:	jmp    0x42299f
  422956:	lahf   
  422957:	xchg   ebp,eax
  422958:	cwde   
  422959:	pop    esp
  42295a:	xor    eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
