
4841ee4f19bca8e7be520c0430fd71ef3a7d0ff96195f0e5c564617cd33771b9.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xc
  401006:	mov    eax,DWORD PTR [ebp+0x8]
  401009:	mov    DWORD PTR [ebp-0x8],eax
  40100c:	mov    ecx,DWORD PTR [ebp+0xc]
  40100f:	mov    DWORD PTR [ebp-0xc],ecx
  401012:	mov    DWORD PTR [ebp-0x4],0x22b
  401019:	mov    edx,DWORD PTR [ebp-0x8]
  40101c:	cmp    edx,DWORD PTR [ebp-0xc]
  40101f:	jae    0x40102f
  401021:	mov    DWORD PTR [ebp-0x4],0x22b
  401028:	mov    eax,DWORD PTR [ebp-0x8]
  40102b:	jmp    0x401039
  40102d:	jmp    0x401039
  40102f:	mov    DWORD PTR [ebp-0x4],0x22b
  401036:	mov    eax,DWORD PTR [ebp-0xc]
  401039:	mov    esp,ebp
  40103b:	pop    ebp
  40103c:	ret    
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	sub    esp,0xc
  401046:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  40104d:	mov    DWORD PTR [ebp-0xc],0x3000
  401054:	mov    DWORD PTR [ebp-0x4],0x40
  40105b:	mov    eax,DWORD PTR [ebp-0x4]
  40105e:	push   eax
  40105f:	mov    ecx,DWORD PTR [ebp-0xc]
  401062:	push   ecx
  401063:	mov    edx,DWORD PTR [ebp+0x8]
  401066:	push   edx
  401067:	push   0x0
  401069:	push   0xffffffff
  40106b:	call   DWORD PTR ds:0x4222c8
  401071:	mov    esp,ebp
  401073:	pop    ebp
  401074:	ret    
  401075:	int3   
  401076:	int3   
  401077:	int3   
  401078:	int3   
  401079:	int3   
  40107a:	int3   
  40107b:	int3   
  40107c:	int3   
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	pop    ebp
  401084:	ret    
  401085:	int3   
  401086:	int3   
  401087:	int3   
  401088:	int3   
  401089:	int3   
  40108a:	int3   
  40108b:	int3   
  40108c:	int3   
  40108d:	int3   
  40108e:	int3   
  40108f:	int3   
  401090:	push   ebp
  401091:	mov    ebp,esp
  401093:	push   ecx
  401094:	mov    DWORD PTR [ebp-0x4],0x4
  40109b:	mov    eax,DWORD PTR [ebp-0x4]
  40109e:	add    eax,0x401b20
  4010a3:	mov    ds:0x422b8c,eax
  4010a8:	mov    esp,ebp
  4010aa:	pop    ebp
  4010ab:	ret    
  4010ac:	int3   
  4010ad:	int3   
  4010ae:	int3   
  4010af:	int3   
  4010b0:	push   ebp
  4010b1:	mov    ebp,esp
  4010b3:	push   ecx
  4010b4:	mov    DWORD PTR [ebp-0x4],0x4
  4010bb:	mov    eax,DWORD PTR [ebp-0x4]
  4010be:	add    eax,0x421a74
  4010c3:	mov    ds:0x422b8c,eax
  4010c8:	mov    esp,ebp
  4010ca:	pop    ebp
  4010cb:	ret    
  4010cc:	int3   
  4010cd:	int3   
  4010ce:	int3   
  4010cf:	int3   
  4010d0:	push   ebp
  4010d1:	mov    ebp,esp
  4010d3:	mov    eax,DWORD PTR [ebp+0x8]
  4010d6:	mov    eax,DWORD PTR [eax-0x4]
  4010d9:	pop    ebp
  4010da:	ret    
  4010db:	int3   
  4010dc:	int3   
  4010dd:	int3   
  4010de:	int3   
  4010df:	int3   
  4010e0:	push   ebp
  4010e1:	mov    ebp,esp
  4010e3:	mov    eax,DWORD PTR [ebp+0xc]
  4010e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4010e9:	movzx  eax,WORD PTR [ecx+eax*2]
  4010ed:	pop    ebp
  4010ee:	ret    
  4010ef:	int3   
  4010f0:	push   ebp
  4010f1:	mov    ebp,esp
  4010f3:	mov    esp,ecx
  4010f5:	pop    ecx
  4010f6:	jmp    eax
  4010f8:	pop    ebp
  4010f9:	ret    
  4010fa:	int3   
  4010fb:	int3   
  4010fc:	int3   
  4010fd:	int3   
  4010fe:	int3   
  4010ff:	int3   
  401100:	push   ebp
  401101:	mov    ebp,esp
  401103:	sub    esp,0x30
  401106:	mov    DWORD PTR [ebp-0x8],0x11cb
  40110d:	mov    DWORD PTR [ebp-0x10],0x0
  401114:	jmp    0x40111f
  401116:	mov    eax,DWORD PTR [ebp-0x10]
  401119:	add    eax,0x4
  40111c:	mov    DWORD PTR [ebp-0x10],eax
  40111f:	mov    ecx,DWORD PTR [ebp-0x10]
  401122:	cmp    ecx,DWORD PTR [ebp+0xc]
  401125:	jae    0x4011e6
  40112b:	mov    DWORD PTR [ebp-0x8],0x4189
  401132:	mov    edx,DWORD PTR [ebp-0x10]
  401135:	add    edx,0x563
  40113b:	mov    DWORD PTR [ebp-0x28],edx
  40113e:	mov    eax,DWORD PTR [ebp-0x28]
  401141:	mov    DWORD PTR [ebp-0x24],eax
  401144:	mov    ecx,DWORD PTR [ebp-0x24]
  401147:	mov    DWORD PTR [ebp-0x20],ecx
  40114a:	mov    edx,DWORD PTR [ebp-0x20]
  40114d:	mov    DWORD PTR [ebp-0x1c],edx
  401150:	cmp    DWORD PTR [ebp-0x10],0x0
  401154:	jne    0x4011a6
  401156:	push   0x104
  40115b:	push   0x422b90
  401160:	call   DWORD PTR ds:0x4222cc
  401166:	push   0x422000
  40116b:	push   0x422b90
  401170:	call   DWORD PTR ds:0x4222d0
  401176:	push   0x0
  401178:	push   0x80
  40117d:	push   0x3
  40117f:	push   0x0
  401181:	push   0x3
  401183:	push   0x1
  401185:	push   0x422b90
  40118a:	call   DWORD PTR ds:0x4222d4
  401190:	mov    DWORD PTR [ebp-0x4],eax
  401193:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  401197:	je     0x40119f
  401199:	cmp    DWORD PTR [ebp-0x4],0x0
  40119d:	jne    0x4011a6
  40119f:	mov    eax,0x42
  4011a4:	jmp    0x4011e6
  4011a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4011a9:	mov    DWORD PTR [ebp-0x30],eax
  4011ac:	mov    ecx,DWORD PTR [ebp-0x30]
  4011af:	mov    DWORD PTR [ebp-0x14],ecx
  4011b2:	mov    edx,DWORD PTR [ebp-0x10]
  4011b5:	mov    DWORD PTR [ebp-0x18],edx
  4011b8:	mov    eax,DWORD PTR [ebp+0x8]
  4011bb:	add    eax,DWORD PTR [ebp-0x10]
  4011be:	mov    DWORD PTR [ebp-0x2c],eax
  4011c1:	mov    ecx,DWORD PTR [ebp-0x2c]
  4011c4:	mov    edx,DWORD PTR [ecx]
  4011c6:	add    edx,DWORD PTR [ebp-0x18]
  4011c9:	mov    eax,DWORD PTR [ebp-0x2c]
  4011cc:	mov    DWORD PTR [eax],edx
  4011ce:	mov    ecx,DWORD PTR [ebp+0x8]
  4011d1:	add    ecx,DWORD PTR [ebp-0x10]
  4011d4:	mov    edx,DWORD PTR [ecx]
  4011d6:	xor    edx,DWORD PTR [ebp-0x14]
  4011d9:	mov    eax,DWORD PTR [ebp+0x8]
  4011dc:	add    eax,DWORD PTR [ebp-0x10]
  4011df:	mov    DWORD PTR [eax],edx
  4011e1:	jmp    0x401116
  4011e6:	mov    esp,ebp
  4011e8:	pop    ebp
  4011e9:	ret    
  4011ea:	int3   
  4011eb:	int3   
  4011ec:	int3   
  4011ed:	int3   
  4011ee:	int3   
  4011ef:	int3   
  4011f0:	push   ebp
  4011f1:	mov    ebp,esp
  4011f3:	sub    esp,0x14
  4011f6:	mov    eax,DWORD PTR [ebp+0x8]
  4011f9:	cmp    DWORD PTR [eax+0x4],0x0
  4011fd:	je     0x401247
  4011ff:	mov    DWORD PTR [ebp-0x14],0x2a1
  401206:	mov    ecx,DWORD PTR [ebp+0x8]
  401209:	mov    edx,DWORD PTR [ecx+0x4]
  40120c:	sub    edx,0x8
  40120f:	shr    edx,1
  401211:	mov    DWORD PTR [ebp-0xc],edx
  401214:	mov    eax,DWORD PTR [ebp+0x8]
  401217:	add    eax,0x8
  40121a:	mov    DWORD PTR [ebp-0x10],eax
  40121d:	mov    ecx,DWORD PTR [ebp+0x8]
  401220:	push   ecx
  401221:	mov    edx,DWORD PTR [ebp+0x10]
  401224:	push   edx
  401225:	mov    eax,DWORD PTR [ebp+0xc]
  401228:	push   eax
  401229:	mov    ecx,DWORD PTR [ebp-0x10]
  40122c:	push   ecx
  40122d:	mov    edx,DWORD PTR [ebp-0xc]
  401230:	push   edx
  401231:	call   0x401250
  401236:	add    esp,0x14
  401239:	mov    eax,DWORD PTR [ebp+0x8]
  40123c:	mov    ecx,DWORD PTR [ebp+0x8]
  40123f:	add    ecx,DWORD PTR [eax+0x4]
  401242:	mov    DWORD PTR [ebp+0x8],ecx
  401245:	jmp    0x4011f6
  401247:	mov    esp,ebp
  401249:	pop    ebp
  40124a:	ret    
  40124b:	int3   
  40124c:	int3   
  40124d:	int3   
  40124e:	int3   
  40124f:	int3   
  401250:	push   ebp
  401251:	mov    ebp,esp
  401253:	sub    esp,0xc
  401256:	mov    DWORD PTR [ebp-0x4],0x0
  40125d:	jmp    0x401268
  40125f:	mov    eax,DWORD PTR [ebp-0x4]
  401262:	add    eax,0x1
  401265:	mov    DWORD PTR [ebp-0x4],eax
  401268:	mov    ecx,DWORD PTR [ebp-0x4]
  40126b:	cmp    ecx,DWORD PTR [ebp+0x8]
  40126e:	jae    0x4012d3
  401270:	mov    edx,DWORD PTR [ebp-0x4]
  401273:	push   edx
  401274:	mov    eax,DWORD PTR [ebp+0xc]
  401277:	push   eax
  401278:	call   0x4010e0
  40127d:	add    esp,0x8
  401280:	sar    eax,0xc
  401283:	cmp    eax,0x3
  401286:	jne    0x4012d1
  401288:	mov    DWORD PTR [ebp-0xc],0xfff
  40128f:	mov    ecx,DWORD PTR [ebp-0x4]
  401292:	push   ecx
  401293:	mov    edx,DWORD PTR [ebp+0xc]
  401296:	push   edx
  401297:	call   0x4010e0
  40129c:	add    esp,0x8
  40129f:	and    eax,DWORD PTR [ebp-0xc]
  4012a2:	add    eax,0x2d23
  4012a7:	mov    DWORD PTR [ebp-0x8],eax
  4012aa:	mov    eax,DWORD PTR [ebp+0x18]
  4012ad:	mov    ecx,DWORD PTR [ebp+0x10]
  4012b0:	add    ecx,DWORD PTR [eax]
  4012b2:	mov    edx,DWORD PTR [ebp-0x8]
  4012b5:	mov    eax,DWORD PTR [ecx+edx*1-0x2d23]
  4012bc:	add    eax,DWORD PTR [ebp+0x14]
  4012bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4012c2:	mov    edx,DWORD PTR [ebp+0x10]
  4012c5:	add    edx,DWORD PTR [ecx]
  4012c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4012ca:	mov    DWORD PTR [edx+ecx*1-0x2d23],eax
  4012d1:	jmp    0x40125f
  4012d3:	mov    esp,ebp
  4012d5:	pop    ebp
  4012d6:	ret    
  4012d7:	int3   
  4012d8:	int3   
  4012d9:	int3   
  4012da:	int3   
  4012db:	int3   
  4012dc:	int3   
  4012dd:	int3   
  4012de:	int3   
  4012df:	int3   
  4012e0:	push   ebp
  4012e1:	mov    ebp,esp
  4012e3:	sub    esp,0x22c
  4012e9:	mov    DWORD PTR [ebp-0x220],0x7c
  4012f3:	mov    DWORD PTR [ebp-0x214],0x0
  4012fd:	mov    eax,ds:0x4222cc
  401302:	mov    DWORD PTR [ebp-0x4],eax
  401305:	push   0x104
  40130a:	lea    ecx,[ebp-0x210]
  401310:	push   ecx
  401311:	call   DWORD PTR [ebp-0x4]
  401314:	mov    edx,DWORD PTR ds:0x4222d0
  40131a:	mov    DWORD PTR [ebp-0x224],edx
  401320:	mov    eax,ds:0x4222d4
  401325:	mov    DWORD PTR [ebp-0x218],eax
  40132b:	mov    DWORD PTR [ebp-0x228],0x0
  401335:	jmp    0x401346
  401337:	mov    ecx,DWORD PTR [ebp-0x228]
  40133d:	add    ecx,0x1
  401340:	mov    DWORD PTR [ebp-0x228],ecx
  401346:	mov    edx,DWORD PTR [ebp-0x228]
  40134c:	cmp    edx,DWORD PTR [ebp+0x10]
  40134f:	jge    0x40138a
  401351:	mov    eax,DWORD PTR [ebp+0xc]
  401354:	add    eax,DWORD PTR [ebp-0x228]
  40135a:	movzx  ecx,BYTE PTR [eax]
  40135d:	mov    DWORD PTR [ebp-0x22c],ecx
  401363:	mov    DWORD PTR [ebp-0x220],0x7c
  40136d:	mov    edx,DWORD PTR [ebp+0x8]
  401370:	add    edx,DWORD PTR [ebp-0x228]
  401376:	mov    al,BYTE PTR [ebp-0x22c]
  40137c:	mov    BYTE PTR [edx],al
  40137e:	mov    DWORD PTR [ebp-0x220],0x33
  401388:	jmp    0x401337
  40138a:	mov    esp,ebp
  40138c:	pop    ebp
  40138d:	ret    
  40138e:	int3   
  40138f:	int3   
  401390:	push   ebp
  401391:	mov    ebp,esp
  401393:	sub    esp,0x50
  401396:	mov    eax,DWORD PTR [ebp+0xc]
  401399:	mov    DWORD PTR [ebp-0x50],eax
  40139c:	cmp    DWORD PTR [ebp-0x50],0x200
  4013a3:	ja     0x4013cd
  4013a5:	cmp    DWORD PTR [ebp-0x50],0x200
  4013ac:	je     0x401411
  4013ae:	cmp    DWORD PTR [ebp-0x50],0x1
  4013b2:	je     0x4013e8
  4013b4:	cmp    DWORD PTR [ebp-0x50],0x2
  4013b8:	je     0x40158b
  4013be:	cmp    DWORD PTR [ebp-0x50],0xf
  4013c2:	je     0x4014cd
  4013c8:	jmp    0x401597
  4013cd:	cmp    DWORD PTR [ebp-0x50],0x201
  4013d4:	je     0x4013f2
  4013d6:	cmp    DWORD PTR [ebp-0x50],0x202
  4013dd:	je     0x4014b8
  4013e3:	jmp    0x401597
  4013e8:	mov    eax,0x1
  4013ed:	jmp    0x4015ad
  4013f2:	mov    DWORD PTR ds:0x422b80,0x0
  4013fc:	push   0x1
  4013fe:	push   0x0
  401400:	mov    ecx,DWORD PTR [ebp+0x8]
  401403:	push   ecx
  401404:	call   DWORD PTR ds:0x422310
  40140a:	xor    eax,eax
  40140c:	jmp    0x4015ad
  401411:	mov    edx,DWORD PTR [ebp+0x10]
  401414:	and    edx,0x1
  401417:	je     0x4014b1
  40141d:	cmp    DWORD PTR ds:0x422b80,0x3e8
  401427:	jge    0x4014b1
  40142d:	mov    eax,DWORD PTR [ebp+0x14]
  401430:	and    eax,0xffff
  401435:	movzx  ecx,ax
  401438:	mov    edx,DWORD PTR ds:0x422b80
  40143e:	mov    DWORD PTR [edx*8+0x422b84],ecx
  401445:	mov    eax,DWORD PTR [ebp+0x14]
  401448:	shr    eax,0x10
  40144b:	and    eax,0xffff
  401450:	movzx  ecx,ax
  401453:	mov    edx,DWORD PTR ds:0x422b80
  401459:	mov    DWORD PTR [edx*8+0x422b88],ecx
  401460:	mov    eax,ds:0x422b80
  401465:	add    eax,0x1
  401468:	mov    ds:0x422b80,eax
  40146d:	mov    ecx,DWORD PTR [ebp+0x8]
  401470:	push   ecx
  401471:	call   DWORD PTR ds:0x422314
  401477:	mov    DWORD PTR [ebp-0x4c],eax
  40147a:	push   0x0
  40147c:	mov    edx,DWORD PTR [ebp+0x14]
  40147f:	shr    edx,0x10
  401482:	and    edx,0xffff
  401488:	movzx  eax,dx
  40148b:	push   eax
  40148c:	mov    ecx,DWORD PTR [ebp+0x14]
  40148f:	and    ecx,0xffff
  401495:	movzx  edx,cx
  401498:	push   edx
  401499:	mov    eax,DWORD PTR [ebp-0x4c]
  40149c:	push   eax
  40149d:	call   DWORD PTR ds:0x422410
  4014a3:	mov    ecx,DWORD PTR [ebp-0x4c]
  4014a6:	push   ecx
  4014a7:	mov    edx,DWORD PTR [ebp+0x8]
  4014aa:	push   edx
  4014ab:	call   DWORD PTR ds:0x422318
  4014b1:	xor    eax,eax
  4014b3:	jmp    0x4015ad
  4014b8:	push   0x0
  4014ba:	push   0x0
  4014bc:	mov    eax,DWORD PTR [ebp+0x8]
  4014bf:	push   eax
  4014c0:	call   DWORD PTR ds:0x422310
  4014c6:	xor    eax,eax
  4014c8:	jmp    0x4015ad
  4014cd:	lea    ecx,[ebp-0x40]
  4014d0:	push   ecx
  4014d1:	mov    edx,DWORD PTR [ebp+0x8]
  4014d4:	push   edx
  4014d5:	call   DWORD PTR ds:0x42231c
  4014db:	mov    DWORD PTR [ebp-0x4c],eax
  4014de:	push   0x7f02
  4014e3:	push   0x0
  4014e5:	call   DWORD PTR ds:0x422320
  4014eb:	push   eax
  4014ec:	call   DWORD PTR ds:0x422324
  4014f2:	push   0x1
  4014f4:	call   DWORD PTR ds:0x422328
  4014fa:	mov    DWORD PTR [ebp-0x44],0x0
  401501:	jmp    0x40150c
  401503:	mov    eax,DWORD PTR [ebp-0x44]
  401506:	add    eax,0x1
  401509:	mov    DWORD PTR [ebp-0x44],eax
  40150c:	mov    ecx,DWORD PTR ds:0x422b80
  401512:	sub    ecx,0x1
  401515:	cmp    DWORD PTR [ebp-0x44],ecx
  401518:	jge    0x40155d
  40151a:	mov    edx,DWORD PTR [ebp-0x44]
  40151d:	add    edx,0x1
  401520:	mov    DWORD PTR [ebp-0x48],edx
  401523:	jmp    0x40152e
  401525:	mov    eax,DWORD PTR [ebp-0x48]
  401528:	add    eax,0x1
  40152b:	mov    DWORD PTR [ebp-0x48],eax
  40152e:	mov    ecx,DWORD PTR [ebp-0x48]
  401531:	cmp    ecx,DWORD PTR ds:0x422b80
  401537:	jge    0x40155b
  401539:	mov    edx,DWORD PTR [ebp-0x48]
  40153c:	mov    eax,DWORD PTR [edx*8+0x422b88]
  401543:	push   eax
  401544:	mov    ecx,DWORD PTR [ebp-0x48]
  401547:	mov    edx,DWORD PTR [ecx*8+0x422b84]
  40154e:	push   edx
  40154f:	mov    eax,DWORD PTR [ebp-0x4c]
  401552:	push   eax
  401553:	call   DWORD PTR ds:0x422414
  401559:	jmp    0x401525
  40155b:	jmp    0x401503
  40155d:	push   0x0
  40155f:	call   DWORD PTR ds:0x422328
  401565:	push   0x7f00
  40156a:	push   0x0
  40156c:	call   DWORD PTR ds:0x422320
  401572:	push   eax
  401573:	call   DWORD PTR ds:0x422324
  401579:	lea    ecx,[ebp-0x40]
  40157c:	push   ecx
  40157d:	mov    edx,DWORD PTR [ebp+0x8]
  401580:	push   edx
  401581:	call   DWORD PTR ds:0x42232c
  401587:	xor    eax,eax
  401589:	jmp    0x4015ad
  40158b:	push   0x0
  40158d:	call   DWORD PTR ds:0x422330
  401593:	xor    eax,eax
  401595:	jmp    0x4015ad
  401597:	mov    eax,DWORD PTR [ebp+0x14]
  40159a:	push   eax
  40159b:	mov    ecx,DWORD PTR [ebp+0x10]
  40159e:	push   ecx
  40159f:	mov    edx,DWORD PTR [ebp+0xc]
  4015a2:	push   edx
  4015a3:	mov    eax,DWORD PTR [ebp+0x8]
  4015a6:	push   eax
  4015a7:	call   DWORD PTR ds:0x422334
  4015ad:	mov    esp,ebp
  4015af:	pop    ebp
  4015b0:	ret    0x10
  4015b3:	int3   
  4015b4:	int3   
  4015b5:	int3   
  4015b6:	int3   
  4015b7:	int3   
  4015b8:	int3   
  4015b9:	int3   
  4015ba:	int3   
  4015bb:	int3   
  4015bc:	int3   
  4015bd:	int3   
  4015be:	int3   
  4015bf:	int3   
  4015c0:	push   ebp
  4015c1:	mov    ebp,esp
  4015c3:	sub    esp,0xc8
  4015c9:	push   ebx
  4015ca:	push   esi
  4015cb:	push   edi
  4015cc:	mov    DWORD PTR ds:0x422c94,ebp
  4015d2:	pusha  
  4015d3:	mov    DWORD PTR [ebp-0x4c],0x30
  4015da:	mov    DWORD PTR [ebp-0x48],0x3
  4015e1:	mov    DWORD PTR [ebp-0x44],0x401390
  4015e8:	mov    DWORD PTR [ebp-0x40],0x0
  4015ef:	mov    DWORD PTR [ebp-0x3c],0x0
  4015f6:	mov    DWORD PTR [ebp-0x38],0x1
  4015fd:	push   0x7f00
  401602:	push   0x0
  401604:	call   DWORD PTR ds:0x422338
  40160a:	mov    DWORD PTR [ebp-0x34],eax
  40160d:	push   0x7f00
  401612:	push   0x0
  401614:	call   DWORD PTR ds:0x422320
  40161a:	mov    DWORD PTR [ebp-0x30],eax
  40161d:	push   0x0
  40161f:	call   DWORD PTR ds:0x422418
  401625:	mov    DWORD PTR [ebp-0x2c],eax
  401628:	mov    DWORD PTR [ebp-0x28],0x0
  40162f:	mov    DWORD PTR [ebp-0x24],0x42202c
  401636:	push   0x7f00
  40163b:	push   0x0
  40163d:	call   DWORD PTR ds:0x422338
  401643:	mov    DWORD PTR [ebp-0x20],eax
  401646:	lea    eax,[ebp-0x4c]
  401649:	push   eax
  40164a:	call   DWORD PTR ds:0x42233c
  401650:	push   0x0
  401652:	push   0x1
  401654:	push   0x0
  401656:	push   0x0
  401658:	push   0x80000000
  40165d:	push   0x80000000
  401662:	push   0x80000000
  401667:	push   0x80000000
  40166c:	push   0xcf0000
  401671:	push   0x422030
  401676:	push   0x42202c
  40167b:	push   0x0
  40167d:	call   DWORD PTR ds:0x422340
  401683:	mov    DWORD PTR [ebp-0x84],eax
  401689:	call   DWORD PTR ds:0x4222d8
  40168f:	mov    DWORD PTR [ebp-0x8c],0x0
  401699:	mov    DWORD PTR [ebp-0xa0],0x80000002
  4016a3:	mov    ecx,DWORD PTR ds:0x422474
  4016a9:	mov    DWORD PTR [ebp-0xb4],ecx
  4016af:	lea    edx,[ebp-0xb0]
  4016b5:	push   edx
  4016b6:	push   0x422038
  4016bb:	push   0x80000000
  4016c0:	call   DWORD PTR [ebp-0xb4]
  4016c6:	test   eax,eax
  4016c8:	je     0x4016d1
  4016ca:	xor    eax,eax
  4016cc:	jmp    0x401998
  4016d1:	call   0x401090
  4016d6:	mov    DWORD PTR [ebp-0x80],0x64
  4016dd:	mov    DWORD PTR [ebp-0x1c],0x32
  4016e4:	mov    DWORD PTR [ebp-0x8c],0x0
  4016ee:	mov    DWORD PTR [ebp-0x54],0x0
  4016f5:	mov    DWORD PTR [ebp-0x7c],0x1
  4016fc:	mov    DWORD PTR [ebp-0x14],0x0
  401703:	mov    DWORD PTR [ebp-0x80],0x64
  40170a:	mov    DWORD PTR [ebp-0x1c],0x32
  401711:	mov    DWORD PTR [ebp-0x8c],0x0
  40171b:	mov    DWORD PTR [ebp-0x54],0x0
  401722:	mov    DWORD PTR [ebp-0x7c],0x1
  401729:	mov    DWORD PTR [ebp-0x18],0x3
  401730:	mov    DWORD PTR [ebp-0x14],0x0
  401737:	mov    DWORD PTR [ebp-0x80],0x64
  40173e:	mov    DWORD PTR [ebp-0x1c],0x32
  401745:	mov    DWORD PTR [ebp-0x8c],0x0
  40174f:	mov    DWORD PTR [ebp-0x54],0x0
  401756:	mov    DWORD PTR [ebp-0x7c],0x1
  40175d:	mov    DWORD PTR [ebp-0x18],0x3
  401764:	mov    eax,ds:0x422b8c
  401769:	push   eax
  40176a:	call   0x4010d0
  40176f:	add    esp,0x4
  401772:	mov    DWORD PTR [ebp-0x90],eax
  401778:	mov    ecx,DWORD PTR [ebp-0x90]
  40177e:	push   ecx
  40177f:	call   0x401040
  401784:	add    esp,0x4
  401787:	mov    DWORD PTR [ebp-0x88],eax
  40178d:	mov    edx,DWORD PTR [ebp-0x90]
  401793:	push   edx
  401794:	push   0x0
  401796:	mov    eax,DWORD PTR [ebp-0x88]
  40179c:	push   eax
  40179d:	call   0x401080
  4017a2:	add    esp,0xc
  4017a5:	mov    ecx,DWORD PTR [ebp-0x90]
  4017ab:	mov    DWORD PTR [ebp-0x98],ecx
  4017b1:	mov    edx,DWORD PTR [ebp-0x8c]
  4017b7:	cmp    edx,DWORD PTR [ebp-0x90]
  4017bd:	jae    0x40182c
  4017bf:	mov    eax,DWORD PTR [ebp-0x98]
  4017c5:	push   eax
  4017c6:	mov    ecx,DWORD PTR [ebp-0x80]
  4017c9:	push   ecx
  4017ca:	call   0x401000
  4017cf:	add    esp,0x8
  4017d2:	mov    DWORD PTR [ebp-0x9c],eax
  4017d8:	mov    edx,DWORD PTR [ebp-0x9c]
  4017de:	push   edx
  4017df:	mov    eax,ds:0x422b8c
  4017e4:	add    eax,DWORD PTR [ebp-0x54]
  4017e7:	push   eax
  4017e8:	mov    ecx,DWORD PTR [ebp-0x88]
  4017ee:	add    ecx,DWORD PTR [ebp-0x8c]
  4017f4:	push   ecx
  4017f5:	call   0x4012e0
  4017fa:	add    esp,0xc
  4017fd:	mov    edx,DWORD PTR [ebp-0x1c]
  401800:	add    edx,DWORD PTR [ebp-0x80]
  401803:	add    edx,DWORD PTR [ebp-0x54]
  401806:	mov    DWORD PTR [ebp-0x54],edx
  401809:	mov    eax,DWORD PTR [ebp-0x8c]
  40180f:	add    eax,DWORD PTR [ebp-0x80]
  401812:	mov    DWORD PTR [ebp-0x8c],eax
  401818:	mov    ecx,DWORD PTR [ebp-0x98]
  40181e:	sub    ecx,DWORD PTR [ebp-0x9c]
  401824:	mov    DWORD PTR [ebp-0x98],ecx
  40182a:	jmp    0x4017b1
  40182c:	mov    edx,DWORD PTR [ebp-0x90]
  401832:	push   edx
  401833:	mov    eax,DWORD PTR [ebp-0x88]
  401839:	push   eax
  40183a:	call   0x401100
  40183f:	add    esp,0x8
  401842:	mov    DWORD PTR [ebp-0x54],0x0
  401849:	mov    DWORD PTR [ebp-0xb8],0x0
  401853:	call   0x4010b0
  401858:	mov    ecx,DWORD PTR ds:0x422b8c
  40185e:	push   ecx
  40185f:	call   0x4010d0
  401864:	add    esp,0x4
  401867:	mov    DWORD PTR [ebp-0xbc],eax
  40186d:	mov    edx,DWORD PTR [ebp-0xbc]
  401873:	push   edx
  401874:	call   0x401040
  401879:	add    esp,0x4
  40187c:	mov    DWORD PTR [ebp-0x50],eax
  40187f:	mov    eax,DWORD PTR [ebp-0xbc]
  401885:	push   eax
  401886:	push   0x0
  401888:	mov    ecx,DWORD PTR [ebp-0x50]
  40188b:	push   ecx
  40188c:	call   0x401080
  401891:	add    esp,0xc
  401894:	mov    edx,DWORD PTR [ebp-0xbc]
  40189a:	mov    DWORD PTR [ebp-0xc4],edx
  4018a0:	mov    eax,DWORD PTR [ebp-0xb8]
  4018a6:	cmp    eax,DWORD PTR [ebp-0xbc]
  4018ac:	jae    0x401919
  4018ae:	mov    ecx,DWORD PTR [ebp-0xc4]
  4018b4:	push   ecx
  4018b5:	mov    edx,DWORD PTR [ebp-0x80]
  4018b8:	push   edx
  4018b9:	call   0x401000
  4018be:	add    esp,0x8
  4018c1:	mov    DWORD PTR [ebp-0xc8],eax
  4018c7:	mov    eax,DWORD PTR [ebp-0xc8]
  4018cd:	push   eax
  4018ce:	mov    ecx,DWORD PTR ds:0x422b8c
  4018d4:	add    ecx,DWORD PTR [ebp-0x54]
  4018d7:	push   ecx
  4018d8:	mov    edx,DWORD PTR [ebp-0x50]
  4018db:	add    edx,DWORD PTR [ebp-0xb8]
  4018e1:	push   edx
  4018e2:	call   0x4012e0
  4018e7:	add    esp,0xc
  4018ea:	mov    eax,DWORD PTR [ebp-0x1c]
  4018ed:	add    eax,DWORD PTR [ebp-0x80]
  4018f0:	add    eax,DWORD PTR [ebp-0x54]
  4018f3:	mov    DWORD PTR [ebp-0x54],eax
  4018f6:	mov    ecx,DWORD PTR [ebp-0xb8]
  4018fc:	add    ecx,DWORD PTR [ebp-0x80]
  4018ff:	mov    DWORD PTR [ebp-0xb8],ecx
  401905:	mov    edx,DWORD PTR [ebp-0xc4]
  40190b:	sub    edx,DWORD PTR [ebp-0xc8]
  401911:	mov    DWORD PTR [ebp-0xc4],edx
  401917:	jmp    0x4018a0
  401919:	mov    eax,DWORD PTR [ebp-0xbc]
  40191f:	push   eax
  401920:	mov    ecx,DWORD PTR [ebp-0x50]
  401923:	push   ecx
  401924:	call   0x401100
  401929:	add    esp,0x8
  40192c:	mov    edx,DWORD PTR [ebp-0x88]
  401932:	mov    eax,DWORD PTR [ebp-0x50]
  401935:	mov    DWORD PTR [edx],eax
  401937:	push   0x17000
  40193c:	call   0x401040
  401941:	add    esp,0x4
  401944:	mov    DWORD PTR [ebp-0xc],eax
  401947:	push   0x15500
  40194c:	mov    ecx,DWORD PTR [ebp-0x88]
  401952:	push   ecx
  401953:	mov    edx,DWORD PTR [ebp-0xc]
  401956:	add    edx,0x200
  40195c:	push   edx
  40195d:	call   0x4012e0
  401962:	add    esp,0xc
  401965:	mov    eax,DWORD PTR [ebp-0xc]
  401968:	sub    eax,0x400000
  40196d:	push   eax
  40196e:	mov    ecx,DWORD PTR [ebp-0xc]
  401971:	push   ecx
  401972:	mov    edx,DWORD PTR [ebp-0x50]
  401975:	push   edx
  401976:	call   0x4011f0
  40197b:	add    esp,0xc
  40197e:	popa   
  40197f:	mov    eax,ds:0x422c94
  401984:	mov    ecx,eax
  401986:	xor    eax,eax
  401988:	je     0x40198b
  40198a:	ret    
  40198b:	mov    eax,DWORD PTR [ebp-0xc]
  40198e:	add    eax,0x15350
  401993:	jmp    0x4010f0
  401998:	pop    edi
  401999:	pop    esi
  40199a:	pop    ebx
  40199b:	mov    esp,ebp
  40199d:	pop    ebp
  40199e:	ret    
  40199f:	int3   
  4019a0:	inc    esp
  4019a1:	and    eax,DWORD PTR [edx+0x0]
  4019a4:	dec    eax
  4019a5:	and    eax,DWORD PTR [edx+0x0]
  4019a8:	adc    BYTE PTR [ebx],ah
  4019aa:	inc    edx
  4019ab:	add    BYTE PTR [eax],dh
  4019ad:	and    eax,DWORD PTR [edx+0x0]
  4019b0:	dec    esp
  4019b1:	and    eax,DWORD PTR [edx+0x0]
  4019b4:	push   eax
  4019b5:	and    eax,DWORD PTR [edx+0x0]
  4019b8:	push   esp
  4019b9:	and    eax,DWORD PTR [edx+0x0]
  4019bc:	pop    eax
  4019bd:	and    eax,DWORD PTR [edx+0x0]
  4019c0:	pop    esp
  4019c1:	and    eax,DWORD PTR [edx+0x0]
  4019c4:	pusha  
  4019c5:	and    eax,DWORD PTR [edx+0x0]
  4019c8:	and    eax,DWORD PTR fs:[edx+0x0]
  4019cc:	push   0x6c004223
  4019d1:	and    eax,DWORD PTR [edx+0x0]
  4019d4:	adc    al,0x23
  4019d6:	inc    edx
  4019d7:	add    BYTE PTR [eax],bl
  4019d9:	and    eax,DWORD PTR [edx+0x0]
  4019dc:	jo     0x401a01
  4019de:	inc    edx
  4019df:	add    BYTE PTR [ebx+eiz*1+0x42],dh
  4019e3:	add    BYTE PTR [eax+0x23],bh
  4019e6:	inc    edx
  4019e7:	add    BYTE PTR [ebx+eiz*1+0x42],bh
  4019eb:	add    BYTE PTR [eax-0x7bffbddd],al
  4019f1:	and    eax,DWORD PTR [edx+0x0]
  4019f4:	sub    BYTE PTR [ebx],ah
  4019f6:	inc    edx
  4019f7:	add    BYTE PTR [eax-0x73ffbddd],cl
  4019fd:	and    eax,DWORD PTR [edx+0x0]
  401a00:	nop
  401a01:	and    eax,DWORD PTR [edx+0x0]
  401a04:	xchg   esp,eax
  401a05:	and    eax,DWORD PTR [edx+0x0]
  401a08:	cwde   
  401a09:	and    eax,DWORD PTR [edx+0x0]
  401a0c:	pushf  
  401a0d:	and    eax,DWORD PTR [edx+0x0]
  401a10:	mov    al,ds:0xa4004223
  401a15:	and    eax,DWORD PTR [edx+0x0]
  401a18:	test   al,0x23
  401a1a:	inc    edx
  401a1b:	add    BYTE PTR [ebx+eiz*1+0x23b00042],ch
  401a22:	inc    edx
  401a23:	add    BYTE PTR [ebx+eiz*1+0x23b80042],dh
  401a2a:	inc    edx
  401a2b:	add    BYTE PTR [ebx+eiz*1+0x23c00042],bh
  401a32:	inc    edx
  401a33:	add    BYTE PTR [ebx+eiz*1],bl
  401a36:	inc    edx
  401a37:	add    ah,al
  401a39:	and    eax,DWORD PTR [edx+0x0]
  401a3c:	enter  0x4223,0x0
  401a40:	int3   
  401a41:	and    eax,DWORD PTR [edx+0x0]
  401a44:	shl    BYTE PTR [ebx],1
  401a46:	inc    edx
  401a47:	add    ah,dl
  401a49:	and    eax,DWORD PTR [edx+0x0]
  401a4c:	fsub   DWORD PTR [ebx]
  401a4e:	inc    edx
  401a4f:	add    ah,bl
  401a51:	and    eax,DWORD PTR [edx+0x0]
  401a54:	loopne 0x401a79
  401a56:	inc    edx
  401a57:	add    ah,ah
  401a59:	and    eax,DWORD PTR [edx+0x0]
  401a5c:	call   0xec405c84
  401a61:	and    eax,DWORD PTR [edx+0x0]
  401a64:	lock and eax,DWORD PTR [edx+0x0]
  401a68:	hlt    
  401a69:	and    eax,DWORD PTR [edx+0x0]
  401a6c:	clc    
  401a6d:	and    eax,DWORD PTR [edx+0x0]
  401a70:	cld    
  401a71:	and    eax,DWORD PTR [edx+0x0]
  401a74:	add    BYTE PTR [edx+eax*2],ah
  401a77:	add    BYTE PTR [ebx+eiz*1],ch
  401a7a:	inc    edx
  401a7b:	add    BYTE PTR [esp],al
  401a7e:	inc    edx
  401a7f:	add    BYTE PTR [eax],cl
  401a81:	and    al,0x42
  401a83:	add    BYTE PTR [esp],bl
  401a86:	inc    edx
  401a87:	add    BYTE PTR [eax],ah
  401a89:	and    al,0x42
  401a8b:	add    BYTE PTR [esp],ah
  401a8e:	inc    edx
  401a8f:	add    BYTE PTR [eax],ch
  401a91:	and    al,0x42
  401a93:	add    BYTE PTR [esp],ch
  401a96:	inc    edx
  401a97:	add    BYTE PTR [eax],bl
  401a99:	and    al,0x42
  401a9b:	add    BYTE PTR [eax],dh
  401a9d:	and    al,0x42
  401a9f:	add    BYTE PTR [esp],dh
  401aa2:	inc    edx
  401aa3:	add    BYTE PTR [eax],dl
  401aa5:	and    al,0x42
  401aa7:	add    BYTE PTR [eax],bh
  401aa9:	and    al,0x42
  401aab:	add    BYTE PTR [esp],bh
  401aae:	inc    edx
  401aaf:	add    BYTE PTR [eax+0x24],al
  401ab2:	inc    edx
  401ab3:	add    BYTE PTR [esp+0x42],al
  401ab7:	add    BYTE PTR [eax+0x24],cl
  401aba:	inc    edx
  401abb:	add    BYTE PTR [esp+0x42],cl
  401abf:	add    BYTE PTR [eax+0x24],dl
  401ac2:	inc    edx
  401ac3:	add    BYTE PTR [esp+0x42],dl
  401ac7:	add    BYTE PTR [eax+0x24],bl
  401aca:	inc    edx
  401acb:	add    BYTE PTR [esp],dl
  401ace:	inc    edx
  401acf:	add    BYTE PTR [esp+0x42],bl
  401ad3:	add    BYTE PTR [eax+0x24],ah
  401ad6:	inc    edx
  401ad7:	add    BYTE PTR [eax+0x68004224],cl
  401add:	and    al,0x42
  401adf:	add    BYTE PTR [esp+0x42],ch
  401ae3:	add    BYTE PTR [eax+0x24],bh
  401ae6:	inc    edx
  401ae7:	add    BYTE PTR [esp+0x42],bh
  401aeb:	add    BYTE PTR [eax-0x23ffbddc],al
  401af1:	and    al,BYTE PTR [edx+0x0]
  401af4:	loopne 0x401b18
  401af6:	inc    edx
  401af7:	add    ah,ah
  401af9:	and    al,BYTE PTR [edx+0x0]
  401afc:	call   0xec405d23
  401b01:	and    al,BYTE PTR [edx+0x0]
  401b04:	lock and al,BYTE PTR [edx+0x0]
  401b08:	hlt    
  401b09:	and    al,BYTE PTR [edx+0x0]
  401b0c:	clc    
  401b0d:	and    al,BYTE PTR [edx+0x0]
  401b10:	cld    
  401b11:	and    al,BYTE PTR [edx+0x0]
  401b14:	add    BYTE PTR [ebx],ah
  401b16:	inc    edx
  401b17:	add    BYTE PTR [ebx+eiz*1],al
  401b1a:	inc    edx
  401b1b:	add    BYTE PTR [eax],cl
  401b1d:	and    eax,DWORD PTR [edx+0x0]
  401b20:	add    BYTE PTR [ebp+0x1],dl
  401b23:	add    BYTE PTR [ebx+0x52],ah
  401b26:	inc    ecx
  401b27:	add    BYTE PTR [eax+eiz*2],bl
  401b2a:	je     0x401b7c
  401b2c:	adc    DWORD PTR [edx+0x63],ebp
  401b2f:	inc    ecx
  401b30:	jmp    DWORD PTR [eax+0x72]
  401b33:	gs lock jne 0x401b37
  401b37:	add    BYTE PTR [edi],ah
  401b39:	push   0x61
  401b3b:	fs pop ds
  401b3d:	ins    BYTE PTR es:[edi],dx
  401b3e:	bound  esi,QWORD PTR [edx+0x2]
  401b41:	ja     0x401bbc
  401b43:	inc    ebp
  401b44:	fild   DWORD PTR [eax+eax*1+0x0]
  401b48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b49:	push   0x61
  401b4b:	fs lahf 
  401b4d:	ins    BYTE PTR es:[edi],dx
  401b4e:	bound  esi,QWORD PTR [edx-0x3e]
  401b51:	ja     0x401bcc
  401b53:	inc    ebp
  401b54:	mov    ebx,0x9c000052
  401b59:	pusha  
  401b5a:	je     0x401ba9
  401b5c:	mov    esp,0xbe6c7561
  401b61:	dec    ebp
  401b62:	popa   
  401b63:	outs   dx,BYTE PTR ds:[esi]
  401b64:	xchg   DWORD PTR [ecx+0x65],ebp
  401b67:	inc    ecx
  401b68:	arpl   WORD PTR ds:0x77a00000,ax
  401b6e:	gs popa 
  401b70:	(bad)  
  401b71:	pusha  
  401b72:	inc    esi
  401b73:	imul   ecx,DWORD PTR [edi-0x78ffbea0],0x80727476
  401b7d:	fs je  0x401bc1
  401b80:	arpl   WORD PTR ds:0x60240000,ax
  401b86:	je     0x401bdf
	...
  401bb8:	add    BYTE PTR [eax],al
  401bba:	dec    edx
  401bbb:	imul   esp,DWORD PTR [edi+ebp*2+0x54],0x76
  401bc0:	inc    esp
  401bc1:	imul   edx,DWORD PTR [ecx+0x60],0x774c7463
  401bc8:	jns    0x401c0b
  401bca:	arpl   WORD PTR ds:0x60240000,ax
  401bd0:	je     0x401c1f
  401bd2:	xor    al,0x61
  401bd4:	jne    0x401c42
  401bd6:	push   es
  401bd7:	dec    ebp
  401bd8:	popa   
  401bd9:	outs   dx,BYTE PTR ds:[esi]
  401bda:	jmp    FWORD PTR [eax+0x65]
  401bdd:	push   edi
  401bde:	arpl   WORD PTR ds:0x75f0000,ax
  401be4:	inc    eax
  401be5:	add    BYTE PTR [edi+0x7],dl
  401be8:	inc    eax
  401be9:	add    BYTE PTR [edi],bh
  401beb:	pop    es
  401bec:	inc    eax
  401bed:	add    BYTE PTR [edi],dh
  401bef:	pop    es
  401bf0:	inc    eax
  401bf1:	add    BYTE PTR [ebx],bl
  401bf3:	pop    es
  401bf4:	inc    eax
  401bf5:	add    BYTE PTR [edi-0x3cffbffd],dh
  401bfb:	add    eax,DWORD PTR [eax+0x0]
  401bfe:	retf   
  401bff:	add    eax,DWORD PTR [eax+0x0]
  401c02:	pushf  
  401c03:	bound  esi,QWORD PTR [eax+edx*2-0x4f]
  401c07:	push   0x61bf4163
  401c0c:	jb     0x401c73
  401c0e:	mov    al,0x74
  401c10:	add    BYTE PTR [eax],al
  401c12:	xchg   edi,eax
  401c13:	push   0x6eaf6461
  401c18:	bound  esi,QWORD PTR [edx-0x7e]
  401c1b:	jae    0x401c96
  401c1d:	inc    ebp
	...
  401c4e:	add    BYTE PTR [eax],al
  401c50:	mov    eax,DWORD PTR [esi+0x0]
  401c53:	add    BYTE PTR [eax+0x62],bh
  401c56:	jb     0x401cc6
  401c58:	xchg   BYTE PTR [ecx+0x33],ch
  401c5b:	xor    al,BYTE PTR [ebp+0x61]
  401c5e:	ins    BYTE PTR es:[edi],dx
  401c5f:	ins    BYTE PTR es:[edi],dx
  401c60:	arpl   WORD PTR ds:0x74760000,ax
  401c66:	jbe    0x401ccb
  401c68:	push   ecx
  401c69:	jno    0x401c99
  401c6b:	fs inc edi
  401c6d:	imul   eax,DWORD PTR [eax],0x6d623e00
  401c73:	jae    0x401cb3
  401c75:	jno    0x401c77
  401c77:	add    BYTE PTR [esi+0x74],cl
  401c7a:	jbe    0x401cdf
  401c7c:	xor    DWORD PTR [ecx+0x2e],esi
  401c7f:	fs aas 
  401c81:	imul   eax,DWORD PTR [eax],0x6d623600
  401c87:	arpl   WORD PTR [ebx],dx
  401c89:	jle    0x401c8b
  401c8b:	add    BYTE PTR ds:0x1674726e,ch
  401c91:	data16 ins BYTE PTR es:[edi],dx
  401c93:	inc    ecx
  401c94:	imul   DWORD PTR [eax+0x6f]
  401c97:	arpl   WORD PTR [ebx+0x5],sp
  401c9a:	add    BYTE PTR [eax],al
  401c9c:	or     eax,0xf674726e
  401ca1:	gs ins BYTE PTR es:[edi],dx
  401ca3:	inc    ecx
  401ca4:	imul   DWORD PTR [eax+0x6f]
  401ca7:	arpl   WORD PTR [ebx+0x5],sp
  401caa:	add    BYTE PTR [eax],al
  401cac:	scas   al,BYTE PTR es:[edi]
  401cad:	ins    DWORD PTR es:[di],dx
  401caf:	popa   
  401cb0:	ror    DWORD PTR [edi+0x69],cl
  401cb3:	add    BYTE PTR gs:[eax],al
	...
  401ce6:	int3   
  401ce7:	dec    eax
  401ce8:	inc    si
  401cea:	retf   0x6569
  401ced:	add    BYTE PTR [ebp-0x498b8d92],cl
  401cf3:	data16 ins BYTE PTR es:[edi],dx
  401cf5:	push   eax
  401cf6:	mov    cl,0x68
  401cf8:	je     0x401d5f
  401cfa:	xor    BYTE PTR [ecx+0x0],0x0
  401cfe:	stos   DWORD PTR es:[edi],eax
  401cff:	bound  esp,QWORD PTR [ecx+0x70]
  401d02:	mov    ds:0x806f6c69,al
  401d07:	add    eax,0x62880000
  401d0c:	jb     0x401d7c
  401d0e:	jle    0x401d79
  401d10:	xor    esi,DWORD PTR [edx]
  401d12:	cmp    eax,0x636c6c61
  401d17:	add    eax,0x62240000
  401d1c:	je     0x401d6e
  401d1e:	push   ecx
  401d1f:	push   0x74506563
  401d24:	dec    eax
  401d25:	gs inc edx
  401d27:	jne    0x401d29
  401d29:	add    BYTE PTR [ebx+0x5],ah
  401d2c:	inc    esp
  401d2d:	add    DWORD PTR [ebx-0x5f],esp
  401d30:	pop    ecx
  401d31:	nop
  401d32:	arpl   bx,bp
  401d34:	add    eax,DWORD PTR [eax]
  401d36:	arpl   dx,bp
  401d38:	add    eax,DWORD PTR [eax]
  401d3a:	arpl   di,si
  401d3c:	sti    
  401d3d:	add    BYTE PTR [ebx+0x36],ah
  401d40:	add    eax,DWORD PTR [eax]
  401d42:	arpl   si,bp
  401d44:	add    eax,DWORD PTR [eax]
  401d46:	arpl   WORD PTR [esi],bp
  401d48:	add    al,0x0
	...
  401d7a:	add    BYTE PTR [eax],al
  401d7c:	arpl   si,bp
  401d7e:	add    eax,DWORD PTR [eax]
  401d80:	arpl   si,bp
  401d82:	add    eax,DWORD PTR [eax]
  401d84:	arpl   si,bp
  401d86:	add    eax,DWORD PTR [eax]
  401d88:	arpl   si,bp
  401d8a:	add    eax,DWORD PTR [eax]
  401d8c:	arpl   sp,bp
  401d8e:	add    eax,DWORD PTR [eax]
  401d90:	arpl   sp,bp
  401d92:	add    eax,DWORD PTR [eax]
  401d94:	arpl   sp,bp
  401d96:	add    eax,DWORD PTR [eax]
  401d98:	arpl   sp,bp
  401d9a:	add    eax,DWORD PTR [eax]
  401d9c:	arpl   WORD PTR [esp+eax*1+0x0],bp
  401da0:	arpl   si,bx
  401da2:	sbb    bh,BYTE PTR [edx+0x9afec5d]
  401da8:	push   ss
  401da9:	into   
  401daa:	mov    ebx,0x25a9af01
  401daf:	push   esp
  401db0:	mov    eax,DWORD PTR ds:0xfa932077
  401db6:	push   0x67
  401db8:	xchg   ecx,eax
  401db9:	int    0x68
  401dbb:	and    BYTE PTR [eax-0x7b919633],al
  401dc1:	fsub   DWORD PTR [ebx]
  401dc3:	bound  eax,QWORD PTR [esi+0x7575760c]
  401dc9:	or     al,0x6d
  401dcb:	outs   dx,BYTE PTR ds:[esi]
  401dcc:	and    DWORD PTR [eax-0x3e7cacb6],0x6a
  401dd3:	fs inc esi
  401dd5:	test   BYTE PTR [eax],0xd
  401dd8:	pop    ecx
  401dd9:	add    eax,0x56303cd
  401dde:	jmp    0x401de6
	...
  401e0f:	add    BYTE PTR [eax],al
  401e11:	add    BYTE PTR [ebx+0x5],ah
  401e14:	mov    ecx,0x9d056340
  401e19:	add    al,0x60
  401e1b:	add    eax,0x46c2b821
  401e20:	jmp    0xe9458128
  401e25:	add    esp,DWORD PTR [ebx+0x5]
  401e28:	or     DWORD PTR [esp+edx*2],eax
  401e2b:	add    al,0xf2
  401e2d:	add    al,0x61
  401e2f:	xor    ebp,ecx
  401e31:	stc    
  401e32:	arpl   WORD PTR ds:0x5634de9,ax
  401e38:	jmp    0x55458140
  401e3d:	in     eax,dx
  401e3e:	arpl   WORD PTR ds:0x56313e9,ax
  401e44:	jmp    0xe945805c
  401e49:	add    esp,DWORD PTR [ebx+0x6313e905]
  401e4f:	add    eax,0x56305e9
  401e54:	in     eax,dx
  401e55:	add    esp,DWORD PTR [ebx+0x5]
  401e58:	jmp    0xed458160
  401e5d:	add    esp,DWORD PTR [ebx+0x5]
  401e60:	jmp    0xe9458168
  401e65:	jae    0x401ec9
  401e67:	add    eax,0x56305e9
  401e6c:	fisubr DWORD PTR [edx+eiz*2+0x5]
  401e70:	jmp    0x401e75
  401e72:	arpl   WORD PTR ds:0x3e9,ax
	...
  401ea8:	push   ebx
  401ea9:	add    eax,0x56313e9
  401eae:	jmp    0xe94591b6
  401eb3:	adc    esp,DWORD PTR [ebx+0x5]
  401eb6:	add    cl,ch
  401eb8:	pusha  
  401eb9:	add    eax,0x560d900
  401ebe:	add    cl,ch
  401ec0:	pusha  
  401ec1:	add    eax,0x560e900
  401ec6:	add    BYTE PTR ds:0x21000412,bl
  401ecc:	pusha  
  401ecd:	add    eax,0x560e900
  401ed2:	add    cl,ch
  401ed4:	pusha  
  401ed5:	add    eax,0x560e900
  401eda:	add    cl,ch
  401edc:	pusha  
  401edd:	add    eax,0x560e900
  401ee2:	add    cl,ch
  401ee4:	pusha  
  401ee5:	add    eax,0x560e900
  401eea:	add    cl,ch
  401eec:	pusha  
  401eed:	add    eax,0x560e900
  401ef2:	add    cl,ch
  401ef4:	pusha  
  401ef5:	add    eax,0x560e900
  401efa:	add    cl,ch
  401efc:	pusha  
  401efd:	add    eax,0x560e900
  401f02:	add    cl,ch
  401f04:	pusha  
  401f05:	add    eax,0x560e900
  401f0a:	add    cl,ch
	...
  401f3c:	add    BYTE PTR [eax],al
  401f3e:	pusha  
  401f3f:	add    eax,0x560e900
  401f44:	add    cl,ch
  401f46:	pusha  
  401f47:	add    eax,0x560e900
  401f4c:	add    cl,ch
  401f4e:	pusha  
  401f4f:	add    eax,0x699b100
  401f54:	add    BYTE PTR [ebp+0x60],ch
  401f57:	add    eax,0x560e900
  401f5c:	add    cl,ch
  401f5e:	pusha  
  401f5f:	add    eax,0x8ca0000
  401f64:	add    BYTE PTR [eax],al
  401f66:	retf   0x8
  401f69:	add    BYTE PTR [edx-0x45fffff8],bh
  401f6f:	or     BYTE PTR [eax],al
  401f71:	add    BYTE PTR [esp+eiz*2+0x8ce7865],dl
  401f78:	add    BYTE PTR [eax],al
  401f7a:	inc    ecx
  401f7b:	cld    
  401f7c:	add    BYTE PTR [eax],al
  401f7e:	mov    edx,0x8a000018
  401f83:	out    dx,al
  401f84:	add    BYTE PTR [eax],al
  401f86:	mov    cl,BYTE PTR [edx]
  401f88:	add    BYTE PTR [eax],al
  401f8a:	jp     0x401f94
  401f8c:	add    BYTE PTR [eax],al
  401f8e:	jp     0x401f98
  401f90:	add    BYTE PTR [eax],al
  401f92:	mov    cl,BYTE PTR [eax]
  401f94:	add    BYTE PTR [eax],al
  401f96:	push   0x9
  401f98:	add    BYTE PTR [eax+0x64],ah
  401f9b:	jnp    0x402001
  401f9d:	popa   
  401f9e:	push   cs
  401f9f:	push   0x0
	...
  401fd4:	dec    edx
  401fd5:	pop    es
  401fd6:	add    BYTE PTR [eax],al
  401fd8:	dec    edx
  401fd9:	sbb    BYTE PTR [ecx],al
  401fdb:	add    BYTE PTR [edx],bh
  401fdd:	or     al,BYTE PTR [eax]
  401fdf:	add    BYTE PTR [edx],bh
  401fe1:	or     BYTE PTR [ecx],al
  401fe3:	add    BYTE PTR [edx+0x8],cl
  401fe6:	add    BYTE PTR [eax],al
  401fe8:	dec    edx
  401fe9:	or     BYTE PTR [eax],al
  401feb:	add    BYTE PTR [edx],bh
  401fed:	or     BYTE PTR [eax],al
  401fef:	add    BYTE PTR [edx+0x9],bh
  401ff2:	add    BYTE PTR [eax+0x34],al
  401ff5:	push   esp
  401ff6:	popa   
  401ff7:	je     0x402064
  401ff9:	or     DWORD PTR [eax],eax
  401ffb:	add    BYTE PTR [edx-0x5ffffba],al
  402001:	daa    
  402002:	add    DWORD PTR [eax],eax
  402004:	or     cl,BYTE PTR [edx+0x0]
  402007:	add    BYTE PTR [edx],cl
  402009:	or     al,BYTE PTR [ecx]
  40200b:	add    BYTE PTR [ebx-0x22],ah
  40200e:	add    eax,DWORD PTR [eax]
  402010:	arpl   si,bx
  402012:	add    eax,DWORD PTR [eax]
  402014:	arpl   si,bx
  402016:	add    eax,DWORD PTR [eax]
  402018:	arpl   WORD PTR [esi-0x225cfffd],bx
  40201e:	add    eax,DWORD PTR [eax]
  402020:	arpl   si,bx
  402022:	add    eax,DWORD PTR [eax]
  402024:	arpl   si,bx
  402026:	add    eax,DWORD PTR [eax]
  402028:	arpl   si,bx
  40202a:	add    eax,DWORD PTR [eax]
  40202c:	arpl   WORD PTR [ecx-0x2ec41374],si
  402032:	adc    eax,DWORD PTR [eax+0x63]
  402035:	push   es
  402036:	jne    0x402039
	...
  402068:	add    BYTE PTR [eax],al
  40206a:	mov    al,ds:0x5b75f7f2
  40206f:	mov    BYTE PTR [edx],al
  402071:	push   0x63
  402073:	push   es
  402074:	mov    esp,0xccde63da
  402079:	ret    0xde5f
  40207c:	push   eax
  40207d:	mov    edi,DWORD PTR [edi+0x45]
  402080:	sub    dl,BYTE PTR [eax]
  402082:	and    ebx,esi
  402084:	sti    
  402085:	jb     0x4020e9
  402087:	lahf   
  402088:	test   DWORD PTR [ebx+0x7403f4d6],0x8516758
  402092:	fmul   st,st(6)
  402094:	div    BYTE PTR [ebp+0x6b]
  402097:	stos   DWORD PTR es:[edi],eax
  402098:	push   edx
  402099:	or     BYTE PTR [edx],ch
  40209b:	lahf   
  40209c:	add    BYTE PTR [eax],al
  40209e:	xchg   esi,eax
  40209f:	addr16 call 0x6cd54028
  4020a5:	dec    edi
  4020a6:	jae    0x4020c4
  4020a8:	add    al,0xf8
  4020aa:	xchg   ecx,eax
  4020ab:	ffree  st(2)
  4020ad:	dec    DWORD PTR [edx+esi*8]
  4020b0:	pop    es
  4020b1:	(bad)  
  4020b2:	sahf   
  4020b3:	je     0x402074
  4020b5:	inc    ebp
  4020b6:	inc    DWORD PTR ds:0x56303e9
  4020bc:	jb     0x40210f
  4020be:	pop    ebx
  4020bf:	jle    0x4020bc
  4020c1:	imul   esp,DWORD PTR [ebx-0xe],0x78dc13d4
  4020c8:	inc    ebp
  4020c9:	test   DWORD PTR [esi-0x13],0x713e
	...
  402100:	pop    ebx
  402101:	repnz fwait
  402103:	setp   bh
  402106:	fld    QWORD PTR [ebx]
  402108:	push   ss
  402109:	jle    0x402120
  40210b:	sbb    DWORD PTR [edi+0x537d91ed],0x45
  402112:	jmp    0x2a445312
  402117:	mul    DWORD PTR [eax+ecx*2+0x5630401]
  40211e:	jmp    0xea3147e1
  402123:	add    esp,DWORD PTR [ebx+0x5]
  402126:	bound  edx,QWORD PTR [ecx+0x6b]
  402129:	jle    0x402126
  40212b:	mov    BYTE PTR [esi],bl
  40212d:	in     eax,dx
  40212e:	cmp    DWORD PTR [edx+0x61],ebp
  402131:	repnz pop esp
  402133:	clc    
  402134:	fs js  0x402108
  402137:	not    dh
  402139:	std    
  40213a:	lds    edx,FWORD PTR [ecx+0x6f]
  40213d:	jle    0x402163
  40213f:	cld    
  402140:	sbb    al,bh
  402142:	in     eax,dx
  402143:	add    ebp,DWORD PTR [esi+0x2782bd7e]
  402149:	in     eax,dx
  40214a:	adc    edx,eax
  40214c:	push   ebx
  40214d:	inc    ebp
  40214e:	jmp    0xaa44d34e
  402153:	neg    BYTE PTR [eax+ecx*2]
  402156:	xchg   ecx,eax
  402157:	add    esp,DWORD PTR [ebx+0x5]
  40215a:	jmp    0xea31c01d
  40215f:	add    esp,DWORD PTR [ebx+0x5]
  402162:	add    BYTE PTR [edx+0x0],ah
	...
  402195:	add    BYTE PTR [ebx-0x14247503],dh
  40219b:	inc    edi
  40219c:	clc    
  40219d:	mov    ecx,0xd4ff048a
  4021a2:	hlt    
  4021a3:	icebp  
  4021a4:	jne    0x4021f7
  4021a6:	in     eax,dx
  4021a7:	ja     0x4021b1
  4021a9:	dec    esi
  4021aa:	xor    bl,BYTE PTR [ecx]
  4021ac:	(bad)  
  4021ad:	mov    esp,0x3e87dd68
  4021b2:	aad    0xf1
  4021b4:	push   eax
  4021b5:	bound  esi,QWORD PTR [ebx]
  4021b7:	std    
  4021b8:	mov    bl,bl
  4021ba:	dec    edx
  4021bb:	add    eax,0x77ade96a
  4021c0:	cld    
  4021c1:	push   ds
  4021c2:	xor    ebp,ebp
  4021c4:	call   FWORD PTR [eax+ebx*2+0x38f552f2]
  4021cb:	jle    0x402222
  4021cd:	add    DWORD PTR [ecx+0x58],esp
  4021d0:	or     al,0xc2
  4021d2:	mov    al,0x7a
  4021d4:	push   es
  4021d5:	ret    0xbba0
  4021d8:	ret    0x60e1
  4021db:	lods   eax,DWORD PTR ds:[esi]
  4021dc:	add    ecx,ebp
  4021de:	pusha  
  4021df:	add    eax,0x55fabc9
  4021e4:	push   ebp
  4021e5:	bound  edi,QWORD PTR [ebx-0x7b]
  4021e8:	(bad)  
  4021e9:	int    0xcf
  4021eb:	and    BYTE PTR [ecx],dl
  4021ed:	sub    DWORD PTR [edi-0x13],ebx
  4021f0:	jb     0x4021da
  4021f2:	and    esi,ecx
  4021f4:	(bad)  
  4021f5:	cmp    al,0x6f
  4021f7:	lock jne 0x4021db
	...
  40222a:	add    BYTE PTR [eax],al
  40222c:	dec    eax
  40222d:	outs   dx,BYTE PTR ds:[esi]
  40222e:	jmp    DWORD PTR [esi+0x14bffd2e]
  402234:	arpl   WORD PTR [esi+0x7c60e5c2],di
  40223a:	push   ebp
  40223b:	loope  0x402228
  40223d:	adc    ecx,DWORD PTR [ebp+0x50ed4700]
  402243:	call   DWORD PTR [edi]
  402245:	adc    eax,0xf9fe75ff
  40224a:	jne    0x402254
  40224c:	lea    edx,[ebx+0xc]
  40224f:	test   DWORD PTR [edx+0x71],ecx
  402252:	adc    ecx,DWORD PTR [ebx+0x453bf8c7]
  402258:	jmp    0x4:0xcbb8075f
  40225f:	add    BYTE PTR [ecx],dh
  402261:	out    dx,eax
  402262:	sub    al,al
  402264:	xor    DWORD PTR [ebx],eax
  402266:	sub    eax,eax
  402268:	add    ebx,0xc
  40226b:	add    bh,dl
  40226d:	jge    0x40225b
  40226f:	add    DWORD PTR [esi+0x476856ed],0x14
  402276:	inc    eax
  402277:	add    BYTE PTR [edx+0x73],dl
  40227a:	add    ebx,eax
  40227c:	ins    DWORD PTR es:[edi],dx
  40227d:	xchg   BYTE PTR [ebp+0xc],bh
  402280:	mov    ah,BYTE PTR [eax+0x6]
  402283:	or     DWORD PTR [edi],0xfffffffc
  402286:	push   DWORD PTR [ebp+esi*2+0x1d]
  40228a:	rcr    BYTE PTR [esi+0x43],0xc3
  40228e:	or     al,0x0
	...
  4022c0:	add    BYTE PTR [eax],al
  4022c2:	or     DWORD PTR [edi+0x10],esi
  4022c5:	add    BYTE PTR [edi],dl
  4022c7:	sti    
  4022c8:	mov    bh,0x1
  4022ca:	jp     0x4022d0
  4022cc:	add    BYTE PTR [esi+0x3],bl
  4022cf:	(bad)  
  4022d0:	or     al,0x0
  4022d2:	rcr    DWORD PTR [edi+0xc],1
  4022d5:	mov    DWORD PTR [edi+0x3a0000ed],0x42558b04
  4022df:	jge    0x4022f3
  4022e1:	lea    eax,[edi+0x57ff50ed]
  4022e7:	sbb    DWORD PTR [esi-0x1],edx
  4022ea:	arpl   WORD PTR [ecx],dx
  4022ec:	or     al,0xff
  4022ee:	mov    cl,0xee
  4022f0:	jle    0x4022b2
  4022f2:	call   0xc1b5:0xadc028df
  4022f9:	or     al,0x63
  4022fb:	pop    ebx
  4022fc:	jbe    0x4022fa
  4022fe:	arpl   cx,di
  402300:	cld    
  402301:	sub    ah,BYTE PTR [ebx]
  402303:	enter  0xc2ca,0x5f
  402307:	fimul  WORD PTR [eax-0xc2518bb]
  40230d:	sub    DWORD PTR [esi],esp
  40230f:	out    dx,al
  402310:	outs   dx,BYTE PTR ds:[esi]
  402311:	les    ebx,FWORD PTR [ebx]
  402313:	fld    QWORD PTR [ebx]
  402315:	add    BYTE PTR [ebx-0x70],ah
  402318:	retf   0x57c2
  40231b:	fimul  WORD PTR [esi-0x75]
  40231e:	iret   
  40231f:	pop    esp
  402320:	mov    edi,0xf426c4f8
  402325:	push   0x0
	...
  402356:	add    BYTE PTR [eax],al
  402358:	addr16 in al,dx
  40235a:	inc    ebx
  40235b:	add    BYTE PTR [ebx-0x633cfd75],ch
  402361:	add    DWORD PTR [ebx],0x6a
  402364:	arpl   WORD PTR [eax+eax*1+0x94636a],dx
  40236b:	push   0x8003de63
  402370:	jl     0x4023ea
  402372:	or     ebp,eax
  402374:	loop   0x402324
  402376:	add    al,0x0
  402378:	fisubr DWORD PTR [eax]
  40237a:	lock inc eax
  40237c:	out    dx,al
  40237d:	loope  0x40233b
  40237f:	ret    0xdc6b
  402382:	pop    ebp
  402383:	add    dh,ah
  402385:	and    esp,ebp
  402387:	push   eax
  402388:	mov    ebx,0x630013dc
  40238d:	imul   ecx,DWORD PTR [ecx-0xc5fb308],0x1c063450
  402397:	lock cmp esp,DWORD PTR [ebx-0x4a]
  40239b:	add    al,0x63
  40239d:	cli    
  40239e:	test   al,0x79
  4023a0:	ins    DWORD PTR es:[edi],dx
  4023a1:	out    dx,al
  4023a2:	adc    al,0xf0
  4023a4:	or     edx,DWORD PTR [ecx-0x62]
  4023a7:	add    al,0x63
  4023a9:	sbb    ch,BYTE PTR [ecx-0x1701de43]
  4023af:	bnd jbe 0x40239f
  4023b2:	pop    esp
  4023b3:	mov    ebx,edi
  4023b5:	fisub  WORD PTR [esi-0xd]
  4023b8:	xchg   ebx,eax
  4023b9:	out    dx,al
  4023ba:	aam    0xff
	...
  4023ec:	add    BYTE PTR [eax],al
  4023ee:	cld    
  4023ef:	adc    al,0x56
  4023f1:	repz fadd QWORD PTR [edx+0x7863ebcc]
  4023f8:	test   ebx,esi
  4023fa:	push   esi
  4023fb:	icebp  
  4023fc:	push   ecx
  4023fd:	cmp    ebp,DWORD PTR [ebp+eax*1+0x562abe9]
  402404:	jmp    0xf203ce0c
  402409:	add    edx,DWORD PTR [esi]
  40240b:	jp     0x40241a
  40240d:	pop    esp
  40240e:	fcom   QWORD PTR [ebx]
  402410:	test   eax,0xe8739b03
  402415:	(bad)  
  402416:	xchg   esp,eax
  402417:	pop    ebx
  402418:	jmp    0x402477
  40241a:	arpl   si,bp
  40241c:	je     0x402419
  40241e:	jl     0x4023c1
  402420:	hlt    
  402421:	bnd jl 0x4023e0
  402424:	sub    ecx,DWORD PTR [eax]
  402426:	arpl   WORD PTR [eax+0x72],bx
  402429:	(bad)  
  40242b:	test   al,0xfb
  40242d:	inc    ebx
  40242e:	arpl   bp,bp
  402430:	pop    ebx
  402431:	add    eax,0x443ee20
  402436:	leave  
  402437:	add    eax,0xdd5b78c6
  40243c:	outs   dx,BYTE PTR ds:[esi]
  40243d:	lock inc esp
  40243f:	out    dx,al
  402440:	add    BYTE PTR [eax+0x14000926],ah
  402446:	mov    ah,0xe1
  402448:	sub    DWORD PTR [ebp-0x43ba2c8],0xffffffa0
  40244f:	add    eax,0x1bf8
	...
  402484:	retw   0x8eff
  402488:	fwait
  402489:	add    DWORD PTR [edi+0x45c5ff2c],ecx
  40248f:	jge    0x4024f1
  402491:	add    eax,0x59ee900
  402496:	push   esp
  402498:	hlt    
  402499:	out    dx,al
  40249a:	jne    0x40248d
  40249c:	or     BYTE PTR [ebp+edi*8+0x5e],ah
  4024a0:	icebp  
  4024a1:	jns    0x4024f8
  4024a3:	loope  0x402502
  4024a5:	adc    edi,edi
  4024a7:	aam    0xc4
  4024a9:	in     eax,dx
  4024aa:	jne    0x4024ed
  4024ac:	shl    DWORD PTR [edi+0x8],1
  4024af:	ds cs or eax,0xedb82bc9
  4024b6:	push   esp
  4024b7:	bound  edx,QWORD PTR [esp+ebx*2+0x520fa00]
  4024be:	clc    
  4024bf:	fwait
  4024c0:	pop    edi
  4024c1:	ret    0x83ff
  4024c4:	pusha  
  4024c5:	out    dx,al
  4024c6:	jne    0x4024a9
  4024c8:	mov    eax,0x9106ff9a
  4024cd:	mov    ebx,0x5860e5c2
  4024d2:	mov    eax,DWORD PTR ds:0x6a1457fd
  4024d8:	inc    esi
  4024d9:	add    eax,0xc2a9ed75
  4024de:	adc    cl,ch
  4024e0:	jae    0x402559
  4024e2:	adc    dh,dl
  4024e4:	aam    0xf9
  4024e6:	(bad)  
  4024e7:	push   esp
	...
  402518:	add    BYTE PTR [eax],al
  40251a:	push   edi
  40251b:	in     eax,0xf4
  40251d:	add    BYTE PTR [edi],ah
  40251f:	idiv   edi
  402521:	mov    ebp,DWORD PTR [edi+0xd]
  402524:	and    DWORD PTR [edx],eax
  402526:	add    eax,esp
  402528:	adc    BYTE PTR [eax],al
  40252a:	dec    edi
  40252b:	push   0xffffffec
  40252d:	cmp    esi,0xfffffff5
  402530:	push   DWORD PTR [ebp+0x36]
  402533:	dec    ebx
  402534:	add    al,0x8d
  402536:	dec    edi
  402537:	cmc    
  402538:	push   eax
  402539:	jmp    FWORD PTR [edi-0x17]
  40253c:	out    0xc3,eax
  40253e:	in     eax,0xf6
  402540:	dec    DWORD PTR [ebx+0x3883053f]
  402546:	or     dh,BYTE PTR [ebp+0x7]
  402549:	mov    edi,DWORD PTR [edi]
  40254b:	cmc    
  40254c:	bswap  eax
  40254e:	xchg   ecx,eax
  40254f:	add    ebp,DWORD PTR [ebx]
  402551:	shl    BYTE PTR [ebx],0xc3
  402554:	or     BYTE PTR [eax],al
  402556:	pop    ds
  402557:	push   0xffffffec
  402559:	cmp    DWORD PTR [esi-0xb],0xffffffff
  40255d:	jne    0x402535
  40255f:	dec    edx
  402560:	add    cl,BYTE PTR [ebp-0xaf0901]
  402566:	push   eax
  402568:	out    0x97,eax
  40256a:	test   esi,esi
  40256c:	dec    DWORD PTR [ebx+0x3882ecff]
  402572:	mov    edx,0x3d0f0874
  402577:	inc    esp
  402578:	inc    BYTE PTR [esi+0x2b02ca3e]
	...
  4025ae:	add    BYTE PTR [eax],al
  4025b0:	cmp    dh,BYTE PTR [eax+0x537a08c2]
  4025b6:	mov    ebp,esp
  4025b8:	or     DWORD PTR [ebp-0x14100004],edi
  4025be:	imul   eax,DWORD PTR [ecx],0x50ff42f7
  4025c4:	test   DWORD PTR [ebx+0x8],esi
  4025c7:	call   0x316e2f
  4025cc:	push   esp
  4025cd:	addr16 inc esi
  4025cf:	or     al,0xe0
  4025d1:	add    eax,0xdb5d7404
  4025d6:	mov    ecx,0x5c73c45
  4025db:	sub    esp,DWORD PTR [ebx]
  4025dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025de:	lds    ecx,FWORD PTR [eax]
  4025e0:	arpl   WORD PTR [ecx],bp
  4025e2:	jge    0x4025d0
  4025e4:	fdiv   DWORD PTR [eax]
  4025e6:	adc    al,0x83
  4025e8:	pop    ecx
  4025e9:	fidiv  WORD PTR [esi+0x4]
  4025ec:	sub    ah,BYTE PTR [eax-0x16f20001]
  4025f2:	(bad)  
  4025f3:	dec    BYTE PTR [esi-0x1f240a]
  4025f9:	jb     0x4025eb
  4025fb:	or     esp,DWORD PTR [ebx]
  4025fd:	icebp  
  4025fe:	cld    
  4025ff:	mov    dl,BYTE PTR [esi+0x6302c8ee]
  402605:	fiadd  WORD PTR [ebx]
  402607:	add    al,cl
  402609:	loopne 0x402668
  40260b:	add    esp,edx
  40260d:	sar    bh,1
  40260f:	(bad)  
  402610:	push   esi
  402611:	neg    bl
  402613:	push   ecx
	...
  402644:	add    BYTE PTR [eax],al
  402646:	(bad)  
  402647:	sub    dh,al
  402649:	leave  
  40264a:	mov    eax,ds:0xe85503e1
  40264f:	sub    DWORD PTR [esp+eax*8+0x757cabaf],eax
  402656:	push   edi
  402657:	cwde   
  402658:	add    ecx,DWORD PTR [ebp-0xacedda]
  40265e:	push   cs
  40265f:	out    dx,al
  402660:	pop    ecx
  402661:	call   DWORD PTR [esi]
  402663:	neg    bl
  402665:	mov    al,ds:0xb03ddae
  40266a:	mov    ds:0xf6830969,eax
  40266f:	fld    DWORD PTR [edx]
  402671:	jne    0x4026d7
  402673:	add    eax,0xbe05c412
  402678:	stos   DWORD PTR es:[edi],eax
  402679:	add    BYTE PTR [ebx+0x7e],ah
  40267c:	sub    al,0xf0
  40267e:	pusha  
  40267f:	cmc    
  402680:	add    BYTE PTR [ecx+0x73],cl
  402683:	jo     0x40261f
  402685:	lods   al,BYTE PTR ds:[esi]
  402686:	bound  eax,QWORD PTR ds:0xbc9d03e9
  40268c:	stos   DWORD PTR es:[edi],eax
  40268d:	add    BYTE PTR [ebx+0x50],ah
  402690:	(bad)  
  402691:	loopne 0x402675
  402693:	shl    DWORD PTR [ecx],0xef
  402696:	and    al,0xeb
  402698:	cmp    bl,BYTE PTR [ebx]
  40269a:	cmp    BYTE PTR [eax-0x17],ah
  40269d:	pop    ecx
  40269e:	arpl   WORD PTR [edi-0x15],bx
  4026a1:	pop    ecx
  4026a2:	arpl   WORD PTR [edi-0x16],bx
  4026a5:	pop    ebx
  4026a6:	arpl   WORD PTR ds:0xc3e9,ax
	...
  4026dc:	cld    
  4026dd:	jo     0x4026c4
  4026df:	fistp  DWORD PTR [ebp-0x25fc1630]
  4026e5:	inc    eax
  4026e6:	gs inc esp
  4026e8:	outs   dx,DWORD PTR ds:[esi]
  4026e9:	push   esi
  4026ea:	pop    esi
  4026eb:	jns    0x402758
  4026ed:	fstp   QWORD PTR [edx]
  4026ef:	out    dx,al
  4026f0:	aam    0xea
  4026f2:	es dec ecx
  4026f4:	retf   
  4026f5:	add    eax,0x7e6303e9
  4026fa:	xchg   esp,eax
  4026fb:	sti    
  4026fc:	jmp    0xbb898b18
  402701:	push   ebp
  402702:	rol    DWORD PTR [ebx-0x7f16fa9d],0xde
  402709:	ins    DWORD PTR es:[edi],dx
  40270a:	push   ds
  40270b:	out    dx,eax
  40270c:	pushf  
  40270d:	push   ebp
  40270e:	push   ss
  40270f:	jns    0x40277c
  402711:	jmp    0x401:0x68e1ffbb
  402718:	push   cs
  402719:	push   es
  40271a:	stos   BYTE PTR es:[edi],al
  40271b:	ficomp DWORD PTR [ebx-0x16]
  40271e:	add    BYTE PTR [eax+ecx*4+0x78],bh
  402722:	test   DWORD PTR [ecx+0x7d],esi
  402725:	jmp    0xd1fc:0x707439ff
  40272c:	mov    bh,0xea
  40272e:	call   esi
  402730:	pop    ecx
  402731:	stos   BYTE PTR es:[edi],al
  402732:	je     0x40271f
  402734:	sub    DWORD PTR [eax-0x22acc301],ebp
  40273a:	stc    
  40273b:	xchg   ebp,eax
  40273c:	pusha  
  40273d:	add    eax,0xaa8b
	...
  402772:	test   eax,0x60e1c2bc
  402777:	push   eax
  402778:	mov    edx,DWORD PTR [ebp-0x61073f1f]
  40277e:	fwait
  40277f:	stc    
  402780:	out    0x5b,eax
  402782:	or     edx,ebp
  402784:	jmp    DWORD PTR [eax-0x65]
  402787:	in     eax,dx
  402788:	(bad)  
  402789:	sub    al,0x13
  40278b:	add    eax,0xea60e900
  402790:	jne    0x402777
  402792:	sbb    ah,al
  402794:	std    
  402795:	outs   dx,BYTE PTR ds:[esi]
  402796:	std    
  402797:	jge    0x4027ee
  402799:	cmc    
  40279a:	imul   edx,DWORD PTR [edi],0x53ae96a
  4027a0:	(bad)  
  4027a1:	fadd   st(4),st
  4027a3:	jmp    0x6ffd791d
  4027a8:	or     BYTE PTR [esi+0x4b],al
  4027ab:	stc    
  4027ac:	(bad)  
  4027ad:	fwait
  4027ae:	ins    BYTE PTR es:[edi],dx
  4027af:	mov    esp,0x5060e1c2
  4027b4:	mov    edi,DWORD PTR ds:0x2ef8c0e1
  4027ba:	sbb    ebp,ebp
  4027bc:	add    cl,ch
  4027be:	pusha  
  4027bf:	add    eax,0x484acc7
  4027c4:	add    cl,ch
  4027c6:	pusha  
  4027c7:	jle    0x40281e
  4027c9:	add    BYTE PTR [edx-0x3872ed92],dl
  4027cf:	fst    QWORD PTR [eax+0x6a]
  4027d2:	mov    ebx,edx
  4027d4:	jne    0x4027d2
	...
  402806:	add    BYTE PTR [eax],al
  402808:	jge    0x40287b
  40280a:	clc    
  40280b:	inc    DWORD PTR [edi]
  40280d:	jmp    0x6e967b10
  402812:	inc    ebp
  402813:	clc    
  402814:	add    eax,esp
  402816:	add    al,0x0
  402818:	xchg   edi,eax
  402819:	outs   dx,BYTE PTR ds:[esi]
  40281a:	in     al,dx
  40281b:	push   0x3b
  40281d:	push   0xda5a0c45
  402822:	jne    0x40282c
  402824:	and    bl,BYTE PTR [ebx]
  402826:	cld    
  402827:	(bad)  
  402828:	std    
  402829:	lods   al,BYTE PTR ds:[esi]
  40282a:	ret    0x3a08
  40282d:	push   eax
  40282e:	mov    ebp,esp
  402830:	jo     0x40282f
  402832:	mov    WORD PTR [ebp-0x2],es
  402835:	push   esp
  402836:	push   DWORD PTR [ebp+0x2]
  402839:	int    0x2a
  40283b:	cld    
  40283c:	fstp   st(2)
  40283e:	leave  
  40283f:	ret    0x4f2
  402842:	push   ebp
  402843:	mov    ebx,esi
  402845:	xchg   BYTE PTR [ebp+0xc],bh
  402848:	cli    
  402849:	jo     0x40285f
  40284b:	cmp    edi,0x14
  40284e:	add    BYTE PTR [esp+ecx*8-0x27],dh
  402852:	jne    0x402864
  402854:	sub    eax,0xb7ff0c70
  402859:	in     al,dx
  40285a:	out    0x9,eax
  40285c:	push   ds
  40285d:	(bad)  
  40285f:	leave  
  402860:	mov    BYTE PTR ds:0xe5415500,al
  402866:	push   DWORD PTR [ebp-0x76]
  402869:	fnstenv [ebp+0x8]
	...
  40289c:	add    BYTE PTR [eax],al
  40289e:	push   edx
  40289f:	mov    ch,0xff
  4028a1:	(bad)  
  4028a2:	jge    0x40282a
  4028a4:	jge    0x4028b6
  4028a6:	arpl   si,bx
  4028a8:	ja     0x4028be
  4028aa:	loopne 0x402925
  4028ac:	(bad)  
  4028ad:	call   DWORD PTR [eax]
  4028af:	lock in al,dx
  4028b1:	jne    0x402906
  4028b3:	out    0x76,eax
  4028b5:	or     al,0x74
  4028b7:	imul   edi,ebx,0xecd7b4e7
  4028bd:	call   FWORD PTR [edx-0x48000064]
  4028c3:	jae    0x4028a4
  4028c5:	adc    esi,0xffffffe2
  4028c8:	add    esi,DWORD PTR [ecx+ebx*2-0x49]
  4028cc:	jbe    0x4028da
  4028ce:	cmp    esi,esi
  4028d0:	xlat   BYTE PTR ds:[ebx]
  4028d1:	add    BYTE PTR [ebx-0x2d],ah
  4028d4:	add    DWORD PTR [ebx],ebp
  4028d6:	and    ecx,DWORD PTR [esi]
  4028d8:	in     eax,dx
  4028d9:	jne    0x40293a
  4028db:	xchg   edi,eax
  4028dc:	jbe    0x4028e6
  4028de:	cmp    ecx,DWORD PTR [ebx-0x14]
  4028e1:	call   FWORD PTR [esi*4+0x296308c1]
  4028e8:	jns    0x4028d6
  4028ea:	loopne 0x4028e4
  4028ec:	adc    edi,edi
  4028ee:	mov    ?,ecx
  4028f0:	in     al,dx
  4028f1:	jne    0x402962
  4028f3:	addr16 jbe 0x4028fe
  4028f6:	or     edx,DWORD PTR [edi-0x7d130014]
  4028fc:	std    
  4028fd:	(bad)  
  4028fe:	outs   dx,BYTE PTR ds:[esi]
  4028ff:	out    dx,al
  402900:	in     al,dx
  402901:	jne    0x402903
	...
  402933:	add    BYTE PTR [edi+0x47],ch
  402936:	jbe    0x402940
  402938:	retf   
  402939:	(bad)  
  40293a:	in     al,dx
  40293b:	dec    esp
  40293d:	and    al,0xc1
  40293f:	or     al,0x63
  402941:	mov    DWORD PTR [eax-0x14],edi
  402944:	mov    esp,0xb4e7fbb0
  402949:	das    
  40294a:	in     al,dx
  40294b:	call   DWORD PTR [ebx]
  40294d:	(bad)  
  40294e:	sti    
  40294f:	imul   eax,DWORD PTR [di],0xffffffd1
  402953:	inc    edx
  402954:	arpl   ax,bp
  402956:	xchg   esp,eax
  402957:	sti    
  402958:	jl     0x402995
  40295a:	push   ss
  40295b:	in     al,dx
  40295c:	mov    WORD PTR [edx-0x17],ds
  40295f:	in     al,dx
  402960:	push   cs
  402961:	std    
  402962:	adc    BYTE PTR [edi],bl
  402964:	jl     0x40294d
  402966:	(bad)  
  402967:	pop    eax
  402968:	popa   
  402969:	jp     0x402917
  40296b:	call   FWORD PTR [eax+ebp*8]
  40296e:	je     0x40296b
  402970:	jl     0x4029a5
  402972:	out    0xeb,al
  402974:	pop    esp
  402975:	pop    esp
  402976:	jmp    0x4029f0
  402978:	sahf   
  402979:	adc    eax,0xfdd6eb39
  40297e:	shl    BYTE PTR [ecx],0x44
  402981:	out    0xc6,eax
  402983:	dec    esp
  402984:	sub    al,ah
  402986:	in     eax,dx
  402987:	add    ecx,DWORD PTR [esi+0x2787c57a]
  40298d:	jmp    0xede3:0xdd5b71ae
  402994:	sbb    al,0xe7
  402996:	rol    BYTE PTR [eax+0x0],cl
	...
  4029c9:	add    BYTE PTR [edi+0x7c],ah
  4029cc:	sub    al,0xe8
  4029ce:	loopne 0x402a10
  4029d0:	(bad)  
  4029d2:	jp     0x4029d9
  4029d4:	xchg   BYTE PTR [ecx+0x6f],dh
  4029d7:	out    0xf4,al
  4029d9:	sti    
  4029da:	cld    
  4029db:	fnstenv [eax-0x15]
  4029de:	in     al,dx
  4029df:	out    0xf4,al
  4029e1:	out    0xe4,eax
  4029e3:	jo     0x4029d6
  4029e5:	fstp   TBYTE PTR [eax-0x2b14a119]
  4029eb:	jo     0x4029ce
  4029ed:	(bad)  [edi-0x17]
  4029f0:	dec    esi
  4029f1:	jmp    0x4029cb
  4029f3:	inc    eax
  4029f4:	inc    ebp
  4029f5:	mov    ebp,0x50e8fda1
  4029fa:	call   0xa3aa2ad8
  4029ff:	icebp  
  402a00:	(bad)  
  402a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a02:	mov    ah,0x5
  402a04:	add    cl,ch
  402a06:	pusha  
  402a07:	js     0x402a4e
  402a09:	sbb    eax,0xe175e62f
  402a0e:	test   al,0x51
  402a10:	aam    0xe9
  402a12:	pusha  
  402a13:	add    al,0x81
  402a16:	pop    ebx
  402a17:	out    0x75,al
  402a19:	icebp  
  402a1a:	cwde   
  402a1b:	loope  0x402a16
  402a1d:	idiv   BYTE PTR [ecx+0x7c]
  402a20:	inc    ebp
  402a21:	icebp  
  402a22:	jns    0x402a94
  402a24:	cld    
  402a25:	shr    DWORD PTR [ebx-0x2e],1
  402a28:	add    cl,ch
  402a2a:	push   ebp
  402a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a2c:	je     0x402a2d
	...
  402a5e:	add    BYTE PTR [eax],al
  402a60:	cmp    DWORD PTR [eax-0x8],esi
  402a63:	cmp    DWORD PTR [ebp+0x6238e805],esp
  402a69:	add    eax,0xf1a37000
  402a6e:	(bad)  
  402a6f:	cmp    al,0x3b
  402a71:	fisttp QWORD PTR [ecx]
  402a73:	call   0xde1f:0x1cff0560
  402a7a:	mov    ebx,0x8be609a2
  402a7f:	sub    al,0x13
  402a81:	test   bh,0x96
  402a84:	xor    BYTE PTR [ebp-0x1],dl
  402a87:	cld    
  402a88:	clc    
  402a89:	(bad)  [edx+0x7f]
  402a8c:	or     esi,esp
  402a8e:	leave  
  402a8f:	stos   DWORD PTR es:[edi],eax
  402a90:	in     al,dx
  402a91:	in     eax,0x54
  402a93:	bound  ecx,QWORD PTR [edx+eax*4]
  402a96:	les    ebx,FWORD PTR [ecx-0x5f]
  402a99:	aas    
  402a9a:	hlt    
  402a9b:	jmp    0x64403000
  402aa0:	and    ebp,ecx
  402aa2:	push   eax
  402aa3:	dec    esi
  402aa4:	push   ebx
  402aa5:	std    
  402aa6:	out    0x0,eax
  402aa8:	adc    al,0xcf
  402aaa:	add    BYTE PTR [eax],al
  402aac:	aas    
  402aad:	ret    0x4d78
  402ab0:	jne    0x402b27
  402ab2:	or     al,ch
  402ab4:	hlt    
  402ab5:	fdivr  st,st(7)
  402ab7:	call   DWORD PTR [ebx]
  402ab9:	inc    ebp
  402aba:	clc    
  402abb:	xor    edi,0xffffffd9
  402abe:	add    al,0x72
  402ac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ac1:	jle    0x402b30
  402ac3:	clc    
	...
  402af4:	add    BYTE PTR [eax],al
  402af6:	jle    0x402ad2
  402af8:	jne    0x402af6
  402afa:	push   edx
  402afb:	(bad)  
  402afc:	rol    BYTE PTR [eax],cl
  402afe:	mov    ah,dh
  402b00:	mov    edi,0x75daa874
  402b05:	clc    
  402b06:	retf   0x47
  402b09:	call   0x400f59
  402b0e:	inc    ebp
  402b0f:	mov    eax,ds:0x24c3d0f7
  402b14:	hlt    
  402b15:	jmp    FWORD PTR [edi-0x276a1713]
  402b1b:	or     DWORD PTR [eax],eax
  402b1d:	jmp    0x402b2b
  402b1f:	out    dx,al
  402b20:	jne    0x402b2a
  402b22:	and    ah,BYTE PTR ds:0x2f5fffb
  402b28:	ror    cl,0xc8
  402b2b:	add    eax,0x1fceb00
  402b30:	ror    cl,0xb8
  402b33:	add    eax,0x42f86a00
  402b38:	cld    
  402b39:	(bad)  
  402b3a:	jmp    eax
  402b3c:	out    0xf0,eax
  402b3e:	loop   0x402b2e
  402b40:	inc    edi
  402b42:	aas    
  402b43:	fld    DWORD PTR [ecx]
  402b45:	add    dl,bh
  402b47:	or     BYTE PTR [ebp-0xc6c5bb],cl
  402b4d:	jne    0x402b21
  402b4f:	rcl    dl,0xfb
  402b52:	arpl   WORD PTR [ebx],di
  402b54:	jmp    0x47e71dc
  402b59:	je     0x402b5b
	...
  402b8b:	add    BYTE PTR [ecx-0x25],dl
  402b8e:	mov    ebx,0x6f1a1e3b
  402b93:	pop    es
  402b94:	jmp    0x402b83
  402b96:	add    eax,DWORD PTR [eax]
  402b98:	arpl   WORD PTR [edi+0x2],ax
  402b9b:	sub    esp,DWORD PTR [ebx-0x5cd4fa09]
  402ba1:	adc    eax,0xa16304c6
  402ba6:	jl     0x402b94
  402ba8:	loopne 0x402bd4
  402baa:	in     al,dx
  402bab:	lea    esp,[esi]
  402bad:	or     dl,BYTE PTR [edi+edi*8-0x12]
  402bb1:	aad    0xdb
  402bb3:	dec    eax
  402bb4:	nop
  402bb5:	out    dx,al
  402bb6:	add    eax,DWORD PTR [ebp-0xe3a95d]
  402bbc:	(bad)  
  402bbd:	(bad)  
  402bbe:	fcmovnu st,st(0)
  402bc0:	pop    ebx
  402bc1:	ret    
  402bc2:	call   0xe8f6d250
  402bc7:	jne    0x402c10
  402bc9:	(bad)  
  402bca:	adc    dl,dl
  402bcc:	arpl   si,bp
  402bce:	cld    
  402bcf:	mov    edi,0x75e8baaf
  402bd4:	pop    edi
  402bd5:	fwait
  402bd6:	outs   dx,BYTE PTR ds:[esi]
  402bd7:	clc    
  402bd8:	xchg   ebx,eax
  402bd9:	(bad)  
  402bda:	pop    ss
  402bdb:	or     esp,DWORD PTR [ebx-0x12]
  402bde:	call   0xe8b64358
  402be3:	shl    DWORD PTR [ebx-0x12],1
  402be6:	call   0xb2c68760
  402beb:	cli    
  402bec:	cld    
  402bed:	mov    bh,BYTE PTR [edx+0xc2]
	...
  402c1f:	add    BYTE PTR [eax],al
  402c21:	add    BYTE PTR [ebx-0x12],ch
  402c24:	dec    esi
  402c25:	mov    edi,edi
  402c27:	outs   dx,BYTE PTR ds:[esi]
  402c28:	mov    edi,0xccc790e8
  402c2d:	lea    esp,[esi]
  402c2f:	add    eax,0x59d45365
  402c34:	icebp  
  402c35:	fcmovne st,st(3)
  402c37:	mov    dh,0xe9
  402c39:	add    ebx,esi
  402c3b:	(bad)  
  402c3c:	fidivr WORD PTR [ebx-0xc]
  402c3f:	add    al,0xe9
  402c41:	add    esi,DWORD PTR [ecx+ebx*2-0x2318240f]
  402c48:	ss call 0xe8757628
  402c4e:	push   ss
  402c4f:	loope  0x402c62
  402c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c52:	mov    dl,0x4
  402c54:	jmp    0x6d53f955
  402c59:	xchg   DWORD PTR [ebx+0x5],esp
  402c5c:	jmp    0x71552db
  402c61:	outs   dx,BYTE PTR ds:[esi]
  402c62:	outs   dx,DWORD PTR ds:[esi]
  402c63:	in     al,dx
  402c64:	sub    ebx,edx
  402c66:	arpl   WORD PTR ds:0xa5fbf6a,ax
  402c6c:	jmp    0x3945df74
  402c71:	fmul   QWORD PTR [edx]
  402c73:	push   es
  402c74:	jmp    0xc589067c
  402c79:	out    0xce,eax
  402c7b:	fld    st(1)
  402c7d:	xchg   edi,eax
  402c7e:	dec    edx
  402c7f:	push   es
  402c80:	jmp    0xe44a4c07
  402c85:	add    eax,DWORD PTR [eax]
	...
  402cb7:	add    BYTE PTR [ebx-0xb],ah
  402cba:	call   0xe9b66812
  402cbf:	add    esp,DWORD PTR [ebx-0x74]
  402cc2:	sub    al,0xdc
  402cc4:	mov    DWORD PTR ds:0xe2ff719e,eax
  402cca:	sbb    al,0xf0
  402ccc:	add    al,0x59
  402cce:	and    edi,0x8d91d576
  402cd4:	or     al,BYTE PTR [esi]
  402cd6:	jmp    0x3a545d
  402cdb:	pop    edi
  402cdc:	mov    ds:0xc4f4ffdd,al
  402ce1:	in     eax,dx
  402ce2:	cmp    BYTE PTR gs:[edi+0x5],bl
  402ce6:	call   esp
  402ce8:	enter  0x90ea,0x53
  402cec:	mov    esp,0x18e16ae2
  402cf1:	jmp    DWORD PTR [edi]
  402cf3:	test   al,0x60
  402cf5:	loop   0x402d6c
  402cf7:	icebp  
  402cf8:	mov    cl,al
  402cfa:	cld    
  402cfb:	ss mov esp,0x122ed80e
  402d01:	fcos   
  402d03:	pushf  
  402d04:	cwde   
  402d05:	jmp    0x3123:0xe2841dba
  402d0c:	jl     0x402d66
  402d0e:	clc    
  402d0f:	push   cs
  402d10:	repnz in al,dx
  402d12:	(bad)  
  402d13:	jl     0x402d8d
  402d15:	jmp    0x1123:0xe285fde0
	...
  402d4c:	add    BYTE PTR [eax],al
  402d4e:	jl     0x402da8
  402d50:	in     al,dx
  402d51:	add    DWORD PTR [ebp+eax*1+0x0],ebp
  402d55:	jmp    0xd2288597
  402d5a:	push   ebp
  402d5b:	loop   0x402d5c
  402d5d:	jmp    0xc148859f
  402d62:	pop    ss
  402d63:	fdiv   st(7),st
  402d65:	(bad)  
  402d66:	mov    ecx,0x22b05bc6
  402d6b:	or     DWORD PTR [eax],eax
  402d6d:	sbb    al,0xa8
  402d6f:	icebp  
  402d70:	sub    DWORD PTR [edi+ebx*1],0xffffffe2
  402d74:	jae    0x402d67
  402d76:	std    
  402d77:	push   edi
  402d78:	or     BYTE PTR [ecx-0x16ff4b9d],dl
  402d7e:	imul   eax,ebp,0xe1fcabc9
  402d84:	push   esp
  402d85:	add    BYTE PTR [ecx-0x46],dh
  402d88:	mov    eax,DWORD PTR [ebp-0xe]
  402d8b:	add    al,0x80
  402d8d:	add    dl,bh
  402d8f:	add    eax,0xc18a6a50
  402d94:	repnz ror dl,1
  402d97:	add    eax,0x5c6c2c9
  402d9c:	push   ebp
  402d9d:	mov    ebx,DWORD PTR [esi]
  402d9f:	push   ebx
  402da0:	cld    
  402da1:	mov    ebp,DWORD PTR [edi-0x51b27523]
  402da7:	out    0xe,al
  402da9:	push   ecx
  402daa:	jnp    0x402d6d
  402dac:	add    ch,BYTE PTR [ebx]
  402dae:	jp     0x402d87
  402db0:	stos   DWORD PTR es:[edi],eax
  402db1:	pop    ecx
	...
  402de2:	add    BYTE PTR [eax],al
  402de4:	or     ecx,ebp
  402de6:	add    esi,ebx
  402de8:	xor    BYTE PTR [ebx-0x37],cl
  402deb:	ret    0x592
  402dee:	push   ebp
  402def:	mov    ebx,DWORD PTR [esi+0x50]
  402df2:	push   edi
  402df3:	mov    ebp,edi
  402df5:	fsincos 
  402df7:	mov    esi,edi
  402df9:	fisttp QWORD PTR [edx+0x2e68a4d]
  402dff:	repz push ss
  402e01:	dec    ebx
  402e02:	pop    esi
  402e03:	leave  
  402e04:	mov    al,bl
  402e06:	call   DWORD PTR [ecx+edx*8-0x43]
  402e0a:	push   esi
  402e0b:	push   edi
  402e0c:	shl    DWORD PTR [eax+0x8],1
  402e0f:	cld    
  402e10:	rcr    DWORD PTR [eax],0x10
  402e13:	sub    ecx,DWORD PTR [edx]
  402e15:	pop    edi
  402e16:	jge    0x402e24
  402e18:	sub    DWORD PTR [ebx+esi*8],eax
  402e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e1c:	xor    DWORD PTR [ebp+esi*2+0x5e4a7a01],ebx
  402e23:	leave  
  402e24:	enter  0xffdd,0x54
  402e28:	xchg   ecx,eax
  402e29:	mov    ebp,0x4feec483
  402e2e:	push   edi
  402e2f:	push   ebx
  402e30:	arpl   WORD PTR [esi],ax
  402e32:	add    al,BYTE PTR [ecx]
  402e34:	arpl   si,bp
  402e36:	in     al,0x75
  402e38:	imul   esi,DWORD PTR [esi-0x6d],0xffffffff
  402e3c:	in     al,dx
  402e3d:	pop    edi
  402e3e:	jns    0x402ebd
  402e40:	pop    ebx
  402e41:	das    
  402e42:	cmp    eax,0x415b12b
  402e47:	add    DWORD PTR [eax],eax
	...
  402e79:	add    BYTE PTR [ebx-0x12],ah
  402e7c:	jnp    0x402e92
  402e7e:	mov    DWORD PTR [eax-0x3e],eax
  402e81:	loop   0x402e4d
  402e83:	arpl   WORD PTR [edi+0x8],sp
  402e86:	and    al,0xa7
  402e88:	js     0x402eff
  402e8a:	xor    BYTE PTR [bx],bh
  402e8d:	(bad)  
  402e8e:	arpl   bx,si
  402e90:	mov    edx,0x64882b
  402e95:	cmp    ebp,ebx
  402e97:	test   eax,0x281e00e4
  402e9c:	jp     0x402ea2
  402e9e:	push   edx
  402e9f:	out    dx,al
  402ea0:	ds (bad) 
  402ea2:	push   esp
  402ea3:	inc    eax
  402ea4:	dec    edi
  402ea5:	(bad)  
  402ea6:	jmp    0x5fc85895
  402eab:	ret    
  402eac:	jns    0x402ef3
  402eae:	ins    BYTE PTR es:[edi],dx
  402eaf:	push   esi
  402eb0:	add    BYTE PTR [edx],bh
  402eb2:	and    dl,BYTE PTR [ebx-0x132eefca]
  402eb8:	sbb    cl,cl
  402eba:	push   ebp
  402ebb:	stos   DWORD PTR es:[edi],eax
  402ebc:	outs   dx,BYTE PTR ds:[esi]
  402ebd:	aad    0xa8
  402ebf:	pop    ds
  402ec0:	inc    esi
  402ec1:	leave  
  402ec2:	and    edx,ebp
  402ec4:	add    edx,DWORD PTR [ebp-0x18]
  402ec7:	mov    eax,ds:0xfb3bc480
  402ecc:	dec    ebp
  402ecd:	push   edi
  402ece:	sub    al,0x19
  402ed0:	cld    
  402ed1:	pop    edx
  402ed2:	fldl2e 
  402ed4:	jnp    0x402f1b
  402ed6:	push   ds
  402ed7:	fs inc eax
  402ed9:	add    ebx,ebp
  402edb:	add    al,0x2c
  402edd:	call   0x402ee2
	...
  402f0e:	add    BYTE PTR [eax],al
  402f10:	fcomp  st(3)
  402f12:	es cmp eax,0xbce559d8
  402f18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f19:	fucomp st(1)
  402f1b:	add    esp,DWORD PTR [ebx+0x5]
  402f1e:	jb     0x402f56
  402f20:	push   ebx
  402f21:	in     al,0x29
  402f23:	out    0x9e,al
  402f25:	loop   0x402f0d
  402f27:	lods   eax,DWORD PTR ds:[esi]
  402f28:	es loop 0x402f09
  402f2b:	lods   eax,DWORD PTR ds:[esi]
  402f2c:	outs   dx,DWORD PTR ds:[esi]
  402f2d:	sbb    eax,0x4cc4e71
  402f32:	mov    ah,0xe7
  402f34:	push   esp
  402f35:	xchg   edi,eax
  402f36:	lods   al,BYTE PTR ds:[esi]
  402f37:	out    0xe9,eax
  402f39:	clc    
  402f3a:	adc    BYTE PTR [esi+ecx*1-0x21],bh
  402f3e:	imul   BYTE PTR [ebp+0xf71e226]
  402f44:	imul   edx,DWORD PTR [eax],0x7f
  402f47:	ds lahf 
  402f49:	mov    dl,BYTE PTR [esp+eiz*8+0x79e0f8eb]
  402f50:	ss loopne 0x402f3e
  402f53:	dec    esi
  402f54:	test   DWORD PTR [edx+0x49e829fd],ecx
  402f5a:	adc    DWORD PTR [ebx],esi
  402f5c:	dec    edi
  402f5d:	adc    eax,0xe26b3e06
  402f62:	sub    DWORD PTR [ecx+0x1e],edi
  402f65:	loop   0x402fc8
  402f67:	add    cl,ch
  402f69:	dec    eax
  402f6a:	in     eax,dx
  402f6b:	jp     0x402f0d
  402f6d:	add    al,0x46
  402f6f:	inc    edx
  402f70:	test   al,0xcc
  402f72:	stos   DWORD PTR es:[edi],eax
  402f73:	adc    BYTE PTR [eax],al
	...
  402fa5:	add    BYTE PTR [ebx+0x38],ah
  402fa8:	(bad)  
  402fa9:	lock loop 0x402f75
  402fac:	mov    ebp,0x1adf34e2
  402fb1:	das    
  402fb2:	or     BYTE PTR [ecx-0x216c1fdc],dl
  402fb8:	add    BYTE PTR [edi+ebp*2],bh
  402fbb:	in     eax,dx
  402fbc:	mov    ds:0x85055f99,eax
  402fc1:	test   eax,0xe9968d70
  402fc6:	pusha  
  402fc7:	add    eax,0xed6f1cff
  402fcc:	das    
  402fcd:	xchg   edi,eax
  402fce:	add    bh,bl
  402fd0:	mov    DWORD PTR [ebx+ecx*1],ebp
  402fd3:	fbstp  TBYTE PTR [ebp+0x7d]
  402fd6:	imul   DWORD PTR [ebp-0x31]
  402fd9:	jmp    0xf6003a3e
  402fde:	inc    ecx
  402fdf:	mov    WORD PTR [ebp+0x59],es
  402fe2:	rcr    BYTE PTR [eax-0xc],0x51
  402fe6:	cmp    edi,ebx
  402fe8:	call   DWORD PTR [esi-0x12]
  402feb:	dec    eax
  402fec:	clc    
  402fed:	dec    esi
  402fee:	sbb    bl,cl
  402ff0:	(bad)  
  402ff1:	mov    esp,0x3975de88
  402ff6:	mov    bh,0x91
  402ff8:	(bad)  
  402ff9:	ss sbb dh,0x75
  402ffd:	sub    eax,0xe9cf4787
  403002:	pusha  
  403003:	fidiv  WORD PTR [ebp-0x13]
  403006:	js     0x40301b
  403008:	iret   
  403009:	jmp    0x40300e
	...
  40303a:	add    BYTE PTR [eax],al
  40303c:	pusha  
  40303d:	xor    eax,0x906494ff
  403042:	test   DWORD PTR [edi],edx
  403044:	sbb    esi,0xa87899ff
  40304a:	(bad)  
  40304b:	test   BYTE PTR [ecx-0x22],0x75
  40304f:	cmc    
  403050:	inc    ecx
  403051:	pop    eax
  403052:	clc    
  403053:	je     0x403030
  403055:	out    dx,al
  403056:	(bad)  
  403057:	fiadd  WORD PTR [ecx+0x35]
  40305a:	call   0x1e7336
  40305f:	into   
  403060:	fwait
  403061:	or     eax,0xc17d00e8
  403066:	(bad)  
  403067:	call   DWORD PTR [eax+0x62256811]
  40306d:	dec    eax
  40306e:	add    bh,bh
  403070:	dec    edi
  403071:	adc    eax,ebp
  403073:	xchg   ebx,eax
  403074:	shl    dl,0xff
  403077:	or     esp,DWORD PTR [edx]
  403079:	jecxz  0x4030f0
  40307b:	hlt    
  40307c:	aad    0x3c
  40307e:	clc    
  40307f:	dec    DWORD PTR [edi+0x11]
  403082:	call   0x23110a
  403087:	and    eax,edx
  403089:	loop   0x403100
  40308b:	clc    
  40308c:	loop   0x40302c
  40308e:	std    
  40308f:	inc    DWORD PTR [ebp-0x1d]
  403092:	jne    0x40309c
  403094:	xor    al,BYTE PTR [ebp-0x70da0009]
  40309a:	ret    
  40309b:	pop    ebx
  40309c:	or     eax,0x8
	...
  4030cf:	add    BYTE PTR [eax],al
  4030d1:	add    bh,ch
  4030d3:	mov    gs,esp
  4030d5:	cmp    DWORD PTR [esi-0x4a],0x57
  4030d9:	mov    edi,edi
  4030db:	aad    0xa
  4030dd:	rcr    dh,0xb
  4030e0:	mov    DWORD PTR [eax],0x18a
  4030e6:	mov    cl,0xe2
  4030e8:	cmp    DWORD PTR [ebp+0x62],0x8
  4030ec:	jne    0x4030f5
  4030ee:	adc    BYTE PTR [edx],al
  4030f0:	add    al,BYTE PTR [eax]
  4030f2:	mov    ch,dh
  4030f4:	jae    0x75420ae1
  4030fa:	jge    0x40317b
  4030fc:	add    BYTE PTR [ecx],al
  4030fe:	dec    edx
  4030ff:	or     ebx,ebp
  403101:	add    ah,BYTE PTR [ecx]
  403103:	xchg   ebx,eax
  403104:	or     edx,0x20163
  40310a:	mov    bh,0x44
  40310c:	cld    
  40310d:	push   eax
  40310e:	arpl   WORD PTR [eax],sp
  403110:	outs   dx,BYTE PTR ds:[esi]
  403111:	add    BYTE PTR [edx+esi*1],dh
  403114:	adc    bh,bh
  403116:	mov    dh,0xd6
  403118:	jmp    0x4030ea
  40311a:	adc    al,0xef
  40311c:	add    ecx,DWORD PTR [ebx]
  40311e:	and    ebx,DWORD PTR [edx]
  403120:	jno    0x4030af
  403122:	sahf   
  403123:	xchg   esi,eax
  403124:	xor    al,0x6a
  403126:	arpl   WORD PTR [ecx+0x47],dx
  403129:	hlt    
  40312a:	mov    bl,0xf8
  40312c:	add    edi,edi
  40312e:	jbe    0x40310e
  403130:	loopne 0x4031a7
  403132:	test   DWORD PTR [esi+0xcf9d],0x0
	...
  403168:	arpl   si,bp
  40316a:	or     al,0xc0
  40316c:	outs   dx,BYTE PTR ds:[esi]
  40316d:	sub    al,BYTE PTR [ebp+0x57eedb7d]
  403173:	inc    esi
  403174:	loopne 0x40315f
  403176:	xlat   BYTE PTR ds:[ebx]
  403177:	add    DWORD PTR [esi-0x14],edx
  40317a:	test   BYTE PTR [ebp-0x35],bh
  40317d:	in     eax,dx
  40317e:	push   edi
  40317f:	cmp    ch,al
  403181:	test   eax,0x461340db
  403186:	inc    edx
  403187:	std    
  403188:	lods   al,BYTE PTR ds:[esi]
  403189:	inc    ebx
  40318a:	(bad)  
  40318b:	clc    
  40318c:	(bad)  
  40318d:	mov    eax,ds:0xc83450db
  403192:	add    ebp,DWORD PTR [edx+0x63]
  403195:	sub    edx,DWORD PTR [edi+0x10]
  403198:	mov    WORD PTR [ecx-0x21],?
  40319b:	call   0x445d7e
  4031a0:	push   0xc0a582e
  4031a5:	push   es
  4031a6:	sub    ebp,edi
  4031a8:	ins    BYTE PTR es:[edi],dx
  4031a9:	add    ebp,DWORD PTR ds:0x8cea78ff
  4031af:	inc    ebp
  4031b0:	ja     0x403199
  4031b2:	ret    
  4031b3:	je     0x403213
  4031b5:	jmp    0x40320d
  4031b7:	clc    
  4031b8:	fadd   QWORD PTR [ecx+ebp*8]
  4031bb:	loopne 0x40318b
  4031bd:	(bad)  
  4031bf:	push   0x2c
  4031c1:	add    eax,0x101c8ce9
  4031c6:	test   eax,0x44884f56
  4031cb:	cld    
	...
  4031fc:	add    BYTE PTR [eax],al
  4031fe:	bound  ebx,QWORD PTR [eax-0x29]
  403201:	mov    WORD PTR [esi+0x143428fd],fs
  403207:	push   edx
  403208:	aad    0xe0
  40320a:	xchg   esi,eax
  40320b:	cmc    
  40320c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40320d:	push   esi
  40320e:	push   edi
  40320f:	fcom   QWORD PTR [esp+ecx*1]
  403212:	or     esp,DWORD PTR [esi]
  403214:	xchg   esi,eax
  403215:	loopne 0x40320b
  403217:	cmp    esp,DWORD PTR [eax+0x1c0557c5]
  40321d:	(bad)  
  40321e:	test   DWORD PTR [ebp+0x5620bfc],0xe4e83e9
  403228:	outs   dx,BYTE PTR ds:[esi]
  403229:	push   ss
  40322a:	test   BYTE PTR [esi],ch
  40322c:	test   al,0x3
  40322e:	aam    0x41
  403230:	icebp  
  403231:	ins    DWORD PTR es:[edi],dx
  403232:	arpl   sp,bx
  403234:	fdivr  st(7),st
  403236:	mov    ch,0x51
  403238:	stc    
  403239:	loopne 0x403271
  40323b:	or     DWORD PTR [esi+0x56],eax
  40323e:	pop    ebx
  40323f:	in     eax,dx
  403240:	xor    eax,0x20db9ce1
  403245:	lds    esi,FWORD PTR [ebx+0x5]
  403248:	add    al,ah
  40324a:	fdiv   DWORD PTR [eax+edi*1-0x16f2351b]
  403251:	add    esp,DWORD PTR [ebx-0x4a]
  403254:	add    edx,DWORD PTR [edi+eiz*2-0x7a]
  403258:	sbb    edx,DWORD PTR [edx]
  40325a:	shr    DWORD PTR [ebp-0xa8e7dfb],1
  403260:	xlat   BYTE PTR ds:[ebx]
  403261:	repnz add BYTE PTR [eax],al
	...
  403294:	jae    0x40327d
  403296:	add    BYTE PTR [edi],al
  403298:	jmp    0xc209b78e
  40329d:	inc    esp
  40329e:	add    bh,ah
  4032a0:	pop    ds
  4032a1:	push   ecx
  4032a2:	fisubr DWORD PTR [edx+0x3eec8e7a]
  4032a8:	call   0xf8163aed
  4032ad:	mov    ?,WORD PTR [ebp-0xb]
  4032b0:	(bad)  [eax+0x10]
  4032b3:	repnz das 
  4032b5:	push   edx
  4032b6:	sbb    BYTE PTR [edx-0x31],ah
  4032b9:	(bad)  
  4032ba:	jmp    0x5fa6:0x250272e1
  4032c1:	add    eax,0x806b7200
  4032c6:	and    BYTE PTR [eax],cl
  4032c8:	sahf   
  4032c9:	add    eax,0xe7a4ab33
  4032ce:	call   0xc97ae251
  4032d3:	stos   DWORD PTR es:[edi],eax
  4032d4:	jae    0x4032db
  4032d6:	push   ebp
  4032d7:	(bad)
  4032dc:	pop    eax
  4032dd:	add    eax,0x409dee75
  4032e2:	or     BYTE PTR [ebx+0x6a00448f],al
  4032e8:	inc    edx
  4032e9:	or     DWORD PTR [eax],eax
  4032eb:	aam    0x65
  4032ed:	ret    0xf545
  4032f0:	sub    ch,BYTE PTR ds:0x50bde941
  4032f6:	or     BYTE PTR [ecx+0x0],al
	...
  403329:	add    BYTE PTR [eax+ecx*8+0x0],dh
  40332d:	jmp    0x9d3ff10b
  403332:	push   esp
  403333:	in     eax,dx
  403334:	xor    eax,0x305672c
  403339:	xor    DWORD PTR [eax],esp
  40333b:	ss call 0x1ac00f
  403341:	add    cl,dh
  403343:	cwde   
  403344:	push   DWORD PTR [ebp+0x52]
  403347:	pop    ss
  403348:	call   0x41b28c
  40334d:	call   edi
  40334f:	or     dl,BYTE PTR [ebx-0x18]
  403352:	jle    0x403308
  403354:	add    BYTE PTR [eax],al
  403356:	mov    cl,0xc7
  403358:	pop    ebx
  403359:	leave  
  40335a:	or     BYTE PTR [esi],cl
  40335c:	add    BYTE PTR [ebp-0x3f],dl
  40335f:	jmp    0x7500:0x99f8353
  403366:	add    eax,0xb00845c3
  40336b:	cs inc ecx
  40336d:	add    BYTE PTR [ecx+0x65],bh
  403370:	or     al,0x0
  403372:	addr16 add al,bh
  403375:	inc    ebp
  403376:	push   cs
  403377:	pop    esp
  403378:	sub    BYTE PTR [ecx+0xa],al
  40337b:	mov    ebx,0xeee20875
  403380:	int3   
  403381:	add    dl,bh
  403383:	mov    ds,eax
  403385:	call   edi
  403387:	or     eax,ebp
  403389:	loope  0x403389
  40338b:	add    eax,0x300
	...
  4033c0:	repnz inc esi
  4033c2:	push   ebx
  4033c3:	call   0x3ff2f9
  4033c8:	xor    DWORD PTR [esi+0x16c275ff],ebx
  4033ce:	call   0x4682be
  4033d3:	jmp    edi
  4033d5:	or     DWORD PTR [ebx-0x18],edx
  4033d8:	xor    cl,dl
  4033da:	add    BYTE PTR [eax],al
  4033dc:	dec    ebp
  4033dd:	cmp    eax,0xbf12e808
  4033e2:	(bad)  
  4033e3:	call   DWORD PTR [ecx]
  4033e5:	(bad)  
  4033e6:	pop    ebx
  4033e7:	leave  
  4033e8:	dec    eax
  4033e9:	push   cs
  4033ea:	add    BYTE PTR [ebp+0x63],dl
  4033ed:	addr16 out dx,eax
  4033ef:	and    DWORD PTR [edi+0x5e683607],0xffffffed
  4033f6:	add    eax,DWORD PTR [eax]
  4033f8:	dec    ebx
  4033f9:	adc    dl,bl
  4033fb:	call   DWORD PTR [esi+eiz*2+0x48]
  4033ff:	cld    
  403400:	loopne 0x4033ab
  403402:	dec    esp
  403403:	sub    DWORD PTR [edx+0x617503ee],esp
  403409:	mov    bl,0xf6
  40340b:	(bad)  
  40340c:	scas   al,BYTE PTR es:[edi]
  40340d:	mov    dl,0x6a
  40340f:	add    BYTE PTR [ecx+0x5b75dcee],bh
  403415:	xor    al,0x4
  403417:	push   DWORD PTR [esi+0x15]
  40341a:	sub    eax,DWORD PTR [ecx+0x63]
  40341d:	imul   eax,esp,0x57a79b79
  403423:	cld    
	...
  403454:	add    BYTE PTR [eax],al
  403456:	sti    
  403457:	cli    
  403458:	fdivr  st,st(7)
  40345a:	cld    
  40345b:	lahf   
  40345c:	inc    edi
  40345d:	cld    
  40345e:	arpl   si,bp
  403460:	add    eax,DWORD PTR [eax]
  403462:	lods   al,BYTE PTR ds:[esi]
  403463:	stc    
  403464:	sub    al,BYTE PTR [ecx+0x63]
  403467:	jae    0x403498
  403469:	mov    esi,DWORD PTR [ebx+edx*2+0x47]
  40346d:	or     BYTE PTR [esi+0x4f],bh
  403470:	pop    ebp
  403471:	dec    esp
  403473:	xchg   ebp,eax
  403474:	inc    ecx
  403475:	add    al,0x4e
  403477:	add    ebp,DWORD PTR [edx+0x0]
  40347a:	out    dx,al
  40347b:	lods   al,BYTE PTR ds:[esi]
  40347c:	or     edx,DWORD PTR [eax+0x4b]
  40347f:	push   ebp
  403480:	sub    al,BYTE PTR [ecx+0x63]
  403483:	inc    edi
  403484:	adc    ch,al
  403486:	push   es
  403487:	inc    eax
  403488:	(bad)  
  40348a:	push   0xea05582e
  40348f:	test   eax,0x6b5bebdf
  403494:	lds    eax,FWORD PTR [eax+eiz*8]
  403497:	add    eax,0xc6f603e6
  40349c:	jb     0x4034e5
  40349e:	ja     0x4034d8
  4034a0:	and    dl,al
  4034a2:	addr16 add eax,0x347788b4
  4034a8:	jb     0x4034f1
  4034aa:	imul   ecx,DWORD PTR [ecx+ebp*1],0x58
  4034ae:	pop    esi
  4034af:	test   DWORD PTR [ecx+0x310bd603],esi
  4034b5:	add    al,0x63
  4034b7:	add    eax,0x38e9
	...
  4034ec:	sub    al,bl
  4034ee:	in     eax,0x3
  4034f0:	leave  
  4034f1:	add    eax,0x4b90443
  4034f6:	inc    ebx
  4034f7:	add    al,0xb9
  4034f9:	add    eax,0x5638451
  4034fe:	jmp    0xc14dc3df
  403503:	in     al,0x18
  403505:	add    eax,0x2c2b88e9
  40350a:	test   eax,0x3a0c7740
  40350f:	in     al,dx
  403510:	std    
  403511:	retf   
  403512:	jmp    0xe945e01a
  403517:	add    esp,DWORD PTR [ebx+0x3c]
  40351a:	mov    al,0xc1
  40351c:	addr16 add eax,0x8bc78914
  403522:	sub    al,0xc
  403524:	pop    eax
  403525:	(bad)
  403528:	jecxz  0x403546
  40352a:	jmp    0xe9dd9f85
  40352f:	add    esp,DWORD PTR [ebx+0x5]
  403532:	and    cl,al
  403534:	addr16 add eax,0xed5b564e
  40353a:	cmp    ecx,eax
  40353c:	arpl   WORD PTR ds:0x5094db6a,ax
  403542:	add    ah,ah
  403544:	mov    ecx,0x60e8fff4
  403549:	or     BYTE PTR [ebp-0x3f7090d7],dl
  40354f:	adc    al,BYTE PTR [eax]
	...
  403581:	add    BYTE PTR [ebp-0x63],bl
  403584:	add    cl,ch
  403586:	pusha  
  403587:	add    eax,0x55c2bc9
  40358c:	push   ebp
  40358d:	jb     0x4035db
  40358f:	add    esp,0xfffffffd
  403592:	retf   
  403593:	add    eax,0x512fe96a
  403598:	or     BYTE PTR [ecx],al
  40359a:	sbb    ecx,ebx
  40359c:	add    cl,ch
  40359e:	ins    DWORD PTR es:[edi],dx
  40359f:	lds    esi,FWORD PTR [ebx+edx*1+0x6f]
  4035a3:	xor    eax,0xd70d8ae8
  4035a8:	jmp    DWORD PTR [eax-0x5e]
  4035ab:	fstp   DWORD PTR [eax+0x19]
  4035ae:	cmp    BYTE PTR [ecx-0x4],dl
  4035b1:	mov    esi,0x79e80db2
  4035b6:	sbb    al,0x6
  4035b8:	add    dl,ah
  4035ba:	and    BYTE PTR [ecx+0xc],dl
  4035bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035be:	xchg   edx,eax
  4035bf:	fld1   
  4035c1:	sbb    DWORD PTR ds:0x20c2ffd7,edx
  4035c7:	jmp    0x4035cc
  4035c9:	bound  esp,QWORD PTR [edx+0x63abc9d9]
  4035cf:	add    eax,0x32cb7255
  4035d4:	mov    edx,DWORD PTR [ebx+ebx*2]
  4035d7:	imul   edx,DWORD PTR [eax],0x1a
  4035da:	mov    bh,0x81
  4035dc:	cli    
  4035dd:	cbw    
  4035df:	imul   eax,DWORD PTR [eax],0xffffffd3
  4035e2:	pusha  
  4035e3:	imul   eax,DWORD PTR [ebx],0xffffffc3
	...
  403616:	add    BYTE PTR [eax],al
  403618:	pusha  
  403619:	imul   eax,DWORD PTR [ebx],0xffffffc1
  40361c:	pusha  
  40361d:	add    eax,0xba0a0000
  403622:	jne    0x40362c
  403624:	xor    ah,BYTE PTR [esi]
  403626:	retf   
  403627:	add    BYTE PTR [edx-0x77],bh
  40362a:	add    eax,DWORD PTR [eax-0x32]
  40362d:	push   cs
  40362e:	push   0x0
  403630:	mov    edx,0x8acb6cea
  403635:	add    cl,BYTE PTR [ecx+0x688643]
  40363b:	push   0x7a
  40363d:	push   0x68486a00
  403642:	add    bh,bh
  403644:	sbb    edx,ebp
  403646:	pop    esi
  403647:	retf   
  403648:	cmp    al,BYTE PTR [edx]
  40364a:	or     eax,eax
  40364c:	into   
  40364d:	sub    ecx,DWORD PTR [ecx+0x684e43]
  403653:	push   0x4a
  403655:	push   0x123e6a00
  40365a:	call   0x4237ae
  40365f:	mov    DWORD PTR [ecx+0x9],ecx
  403662:	or     eax,eax
  403664:	dec    edi
  403665:	and    eax,0xe9fe73ff
  40366a:	repnz retf 0x1fa
  40366e:	push   DWORD PTR [ebx]
  403670:	shl    dh,cl
  403672:	retf   0xa00
  403675:	ret    
  403676:	add    edi,edi
  403678:	aad    0xba
  40367a:	(bad)  
  40367b:	jmp    0x40367d
	...
  4036ad:	add    BYTE PTR [edi],al
  4036af:	mov    ebx,0xc806e833
  4036b4:	add    BYTE PTR [eax],al
  4036b6:	std    
  4036b7:	(bad)  
  4036b8:	(bad)  
  4036b9:	call   DWORD PTR [ebp-0x45]
  4036bc:	sub    eax,eax
  4036be:	adc    edi,DWORD PTR [edi]
  4036c0:	or     BYTE PTR [edi],cl
  4036c2:	aas    
  4036c3:	ret    0xc95b
  4036c6:	mov    BYTE PTR [edx],cl
  4036c8:	add    BYTE PTR [ebp+0x63],dl
  4036cb:	arpl   di,sp
  4036cd:	push   ebx
  4036ce:	fsubr  DWORD PTR [eax+0x3f58830b]
  4036d4:	dec    edi
  4036d5:	pop    ss
  4036d6:	xchg   esp,eax
  4036d7:	call   0x3:0x235ae80b
  4036de:	test   BYTE PTR [edx+0x11cee7ff],bl
  4036e4:	add    eax,DWORD PTR [eax]
  4036e6:	je     0x4036a2
  4036e8:	jmp    0x403690
  4036ea:	cdq    
  4036eb:	jmp    0x4036f0
  4036ed:	pop    ebx
  4036ee:	call   0xe757:0xb7ffff29
  4036f5:	sbb    DWORD PTR [edi],0x4cffe9ff
  4036fb:	jne    0x40372f
  4036fd:	add    DWORD PTR [esi+0x63412b9e],0xffffffde
  403704:	dec    edi
  403705:	adc    eax,0x2843fa34
  40370a:	mov    ds:0x2a8aebde,al
  40370f:	(bad)  
  403710:	fld    st(7)
	...
  403742:	add    BYTE PTR [eax],al
  403744:	pushw  ds
  403746:	sub    al,0x41
  403748:	arpl   si,bx
  40374a:	add    eax,DWORD PTR [eax]
  40374c:	arpl   WORD PTR [edi+0x17],bx
  40374f:	inc    esp
  403750:	cmp    ebx,DWORD PTR ds:0xd1770004
  403756:	fdiv   DWORD PTR ds:0x42b69f
  40375c:	sti    
  40375d:	or     bl,bl
  40375f:	jmp    esp
  403761:	stos   DWORD PTR es:[edi],eax
  403762:	inc    DWORD PTR [ebx-0x75]
  403765:	sbb    eax,0xde630004
  40376a:	add    ecx,DWORD PTR [ebp-0x16b11a]
  403770:	(bad)  
  403771:	out    dx,al
  403772:	jmp    0x40371a
  403774:	mov    bl,0x5
  403776:	data16 (bad) 
  403779:	mov    cl,BYTE PTR [ebp-0x17]
  40377c:	lods   al,BYTE PTR ds:[esi]
  40377d:	aam    0xb9
  40377f:	jmp    0x40374a
  403781:	aad    0x4e
  403783:	fldz   
  403785:	dec    edx
  403786:	inc    ebp
  403787:	xor    al,0xb
  403789:	cmp    eax,0x5d634311
  40378e:	jmp    0x403793
  403790:	arpl   WORD PTR [ebp+0x5a87141],ax
  403796:	jmp    0x6444daa7
  40379b:	cmp    eax,0xc0e90562
  4037a0:	fcompp 
  4037a2:	(bad)  
  4037a3:	fcomp  DWORD PTR [ebp+eax*1-0x17]
  4037a7:	add    eax,DWORD PTR [eax]
	...
  4037d9:	add    BYTE PTR [ebx-0x34],ah
  4037dc:	fdivr  QWORD PTR fs:[esp+edx*8]
  4037e0:	neg    al
  4037e2:	push   esp
  4037e3:	add    eax,0x5f636de9
  4037e8:	jmp    0xe99f9b5a
  4037ed:	xchg   dh,ah
  4037ef:	int3   
  4037f0:	(bad)  
  4037f1:	fsub   DWORD PTR [esi*1-0x1be081a4]
  4037f8:	(bad)  
  4037f9:	fdiv   DWORD PTR [ebx-0x3308b2c]
  4037ff:	shl    DWORD PTR [esi-0x3e2e7128],cl
  403805:	sub    BYTE PTR ss:0x4230ce9,al
  40380c:	fs hlt 
  40380e:	arpl   WORD PTR ds:0x1ccb6be9,ax
  403814:	sub    BYTE PTR [ebx+ecx*2],al
  403817:	cmp    eax,0xdd6342d1
  40381c:	(bad)  
  40381d:	xlat   BYTE PTR ds:[ebx]
  40381e:	int3   
  40381f:	rol    DWORD PTR [eax],cl
  403821:	loop   0x4037c3
  403823:	add    eax,DWORD PTR [eax+edi*2+0x72000560]
  40382a:	lock add DWORD PTR [ebp-0x2c44a3],0xbcdd6eb9
  403835:	dec    ebp
  403836:	mov    ebx,0x6b290bd3
  40383b:	mov    edx,ebx
  40383d:	jmp    0x403842
	...
  40386e:	add    BYTE PTR [eax],al
  403870:	pusha  
  403871:	add    eax,0xe3806c89
  403876:	jmp    FWORD PTR [esi]
  403878:	in     eax,0x89
  40387a:	call   0x5113d395
  40387f:	xchg   ecx,eax
  403880:	adc    al,0x1d
  403882:	inc    ecx
  403883:	jmp    0xff20d213
  403888:	xor    al,0xd3
  40388a:	push   0x800560eb
  40388f:	adc    ebx,esi
  403891:	into   
  403892:	push   esi
  403894:	pop    eax
  403895:	lds    ecx,FWORD PTR [edi]
  403897:	fld    QWORD PTR gs:0xcde1e900
  40389e:	add    esi,ebp
  4038a0:	scas   al,BYTE PTR es:[edi]
  4038a1:	jno    0x4038a3
  4038a3:	jmp    0x953f6e08
  4038a8:	pavgw  mm7,mm7
  4038ab:	(bad)  
  4038ac:	dec    edi
  4038ad:	shl    BYTE PTR [ebp-0x2cfb47],cl
  4038b3:	rol    DWORD PTR [esi],0xda
  4038b6:	jmp    FWORD PTR [esi-0x69177716]
  4038bc:	or     al,0xd3
  4038be:	push   eax
  4038bf:	adc    ebx,ebx
  4038c1:	sbb    eax,0x990de941
  4038c6:	loopne 0x403946
  4038c8:	mov    ah,0xd2
  4038ca:	push   0x6c800
  4038cf:	xor    dl,0x42
  4038d2:	sti    
  4038d3:	inc    DWORD PTR [eax]
	...
  403905:	add    BYTE PTR [ebp-0x2],cl
  403908:	mov    edi,0xbd868674
  40390d:	call   0x23ff31f
  403912:	xchg   esp,eax
  403913:	out    dx,eax
  403914:	dec    edi
  403915:	push   eax
  403916:	aas    
  403917:	test   ah,bh
  403919:	out    dx,eax
  40391a:	sub    eax,0xd2e850ba
  40391f:	rol    DWORD PTR [eax],0x0
  403922:	jmp    0xffba:0x1dfc857d
  403929:	push   eax
  40392a:	dec    ebp
  40392b:	je     0x403919
  40392d:	out    dx,eax
  40392e:	cmp    eax,0x56cfe8ba
  403933:	mov    edx,0x744d58ff
  403938:	call   0x50faa72c
  40393d:	call   DWORD PTR [edi+0x4dffefdd]
  403943:	fidivr WORD PTR [esp+esi*8+0x19e8bb4d]
  40394a:	xor    bh,BYTE PTR [ebx+0x7c6aebff]
  403950:	test   esp,edi
  403952:	sbb    eax,0x2250ffbb
  403957:	or     ecx,ecx
  403959:	add    BYTE PTR [edx],cl
  40395b:	inc    esi
  40395c:	push   eax
  40395d:	lea    eax,[edi-0x32001046]
  403963:	adc    eax,0xeb1eb5ff
  403968:	(bad)  
  403969:	inc    DWORD PTR [eax]
	...
  40399b:	add    BYTE PTR [edx],ah
  40399d:	push   ebp
  40399e:	hlt    
  40399f:	(bad)  
  4039a0:	mov    ebp,0xcdf7f2dd
  4039a5:	mov    edx,0x7c63b5ff
  4039aa:	out    0xff,al
  4039ac:	fadd   QWORD PTR [ebx-0x752b0822]
  4039b2:	(bad)  
  4039b3:	test   edi,edx
  4039b5:	adc    dh,0xff
  4039b8:	mov    edx,0xbcffd512
  4039bd:	bound  edx,QWORD PTR [eax-0x4]
  4039c0:	retf   
  4039c1:	stc    
  4039c2:	leave  
  4039c3:	add    BYTE PTR [ebx-0x4a],ah
  4039c6:	add    edi,edi
  4039c8:	out    dx,al
  4039c9:	sub    esp,esi
  4039cb:	call   FWORD PTR [ebx+eax*2+0x4a94f433]
  4039d2:	imul   eax,DWORD PTR [eax],0xefe7588c
  4039d8:	test   BYTE PTR [edx],bl
  4039da:	jmp    0x403a1f
  4039dc:	ja     0x403a00
  4039de:	(bad)  
  4039df:	(bad)  
  4039e0:	fdivp  st(7),st
  4039e2:	in     eax,0xff
  4039e4:	ins    BYTE PTR es:[edi],dx
  4039e5:	mov    edx,esi
  4039e7:	mov    ch,0x73
  4039e9:	or     dl,dh
  4039eb:	dec    DWORD PTR [ebx+0xd]
  4039ee:	int3   
  4039ef:	add    BYTE PTR [ebx+0x61],ah
  4039f2:	ret    
  4039f3:	js     0x40398d
  4039f5:	iret   
  4039f6:	(bad)  
  4039f7:	lock xor al,0xd8
  4039fa:	aad    0xe8
  4039fc:	pushf  
  4039fd:	iret   
  4039fe:	aad    0xff
	...
  403a30:	add    BYTE PTR [eax],al
  403a32:	jmp    0xd5b0:0x2cefec61
  403a39:	mov    ch,0x3b
  403a3b:	enter  0xffd5,0xb
  403a3f:	pusha  
  403a40:	int    0xff
  403a42:	adc    al,0x7c
  403a44:	inc    esp
  403a45:	sub    BYTE PTR [edx-0x4a2b22],ah
  403a4b:	(bad)  
  403a4c:	aad    0xff
  403a4e:	or     ebx,DWORD PTR [ebp-0x34]
  403a51:	add    BYTE PTR [ebx+0x5],ah
  403a54:	bnd ret 
  403a56:	ja     0x403a44
  403a58:	jno    0x4039e1
  403a5a:	sti    
  403a5b:	loopne 0x4039f3
  403a5d:	aad    0xe8
  403a5f:	aad    0x62
  403a61:	pop    ss
  403a62:	and    ebx,DWORD PTR ds:0xa9d00428
  403a68:	jle    0x4039f9
  403a6a:	mov    edi,0xcbd576e0
  403a6f:	pop    esi
  403a70:	mov    eax,ds:0x6c826304
  403a75:	loopne 0x403a33
  403a77:	rcr    BYTE PTR [esi+0x34],1
  403a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a7b:	call   0x5341:0xd09ce545
  403a82:	stos   BYTE PTR es:[edi],al
  403a83:	add    eax,0x4da37ee9
  403a88:	mov    dl,0xd4
  403a8a:	into   
  403a8b:	loope  0x403ad3
  403a8d:	aad    0x7c
  403a8f:	(bad)  [edi]
  403a91:	out    0x74,al
  403a93:	shl    BYTE PTR [eax+0x7f],1
	...
  403ac6:	add    BYTE PTR [eax],al
  403ac8:	jnp    0x403aaa
  403aca:	push   ds
  403acb:	aad    0x64
  403acd:	call   0x1601:0xd05ce501
  403ad4:	dec    esp
  403ad5:	rol    BYTE PTR [esi],1
  403ad7:	mov    eax,ds:0x3a81da7
  403adc:	inc    esp
  403add:	call   0x2301:0xd03ce50d
  403ae4:	sub    eax,DWORD PTR ds:0x592308e9
  403aea:	add    cl,BYTE PTR [ecx-0x2b39232a]
  403af0:	sbb    al,0x7c
  403af2:	(bad)  [eax+0x43114956]
  403af8:	arpl   sp,dx
  403afa:	test   esp,edx
  403afc:	into   
  403afd:	call   0xd0580102
  403b02:	call   0x4563e8
  403b07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b08:	fst    st(4)
  403b0a:	out    dx,eax
  403b0b:	sahf   
  403b0c:	paddusw mm3,QWORD PTR [edx-0x79]
  403b10:	mov    bh,0xcf
  403b12:	call   DWORD PTR [esp+edi*4-0x21]
  403b16:	inc    DWORD PTR [esi+0x7eee3fb8]
  403b1c:	scas   eax,DWORD PTR es:[edi]
  403b1d:	das    
  403b1e:	pop    esi
  403b1f:	mov    al,ds:0x7d8b39a3
  403b24:	dec    edx
  403b25:	std    
  403b26:	out    0x52,eax
  403b28:	sahf   
  403b29:	iret   
  403b2a:	push   DWORD PTR [edx+0x0]
	...
  403b5d:	add    al,dh
  403b5f:	iret   
  403b60:	xor    eax,0x464877
  403b65:	pop    esi
  403b66:	(bad)  
  403b67:	shl    BYTE PTR [ebp-0xf],1
  403b6a:	out    0x42,eax
  403b6c:	add    al,0x70
  403b6e:	jne    0x403be1
  403b70:	sub    BYTE PTR [eax-0x1a3d41a0],ch
  403b76:	pusha  
  403b77:	cmp    cl,BYTE PTR [ebx-0x7371ceb]
  403b7d:	mov    dh,0xa7
  403b7f:	dec    ecx
  403b80:	clc    
  403b81:	jmp    0x6a4040e6
  403b86:	lods   eax,DWORD PTR ds:[esi]
  403b87:	std    
  403b88:	(bad)  
  403b89:	jl     0x403bdd
  403b8b:	shl    BYTE PTR [ebp-0x13],1
  403b8e:	das    
  403b8f:	pop    ecx
  403b90:	or     BYTE PTR [ebx-0xcf922a0],al
  403b96:	adc    bh,cl
  403b98:	mov    DWORD PTR [ebx+edx*1],ebp
  403b9b:	fild   DWORD PTR [edi]
  403b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b9e:	call   0x8b05:0x60e900d1
  403ba5:	or     al,0x91
  403ba7:	sbb    eax,0xaffa0041
  403bac:	adc    ecx,DWORD PTR [ebx+0x473bb53f]
  403bb2:	push   cs
  403bb3:	cs or  edi,eax
  403bb6:	aas    
  403bb7:	rol    DWORD PTR [ecx],0x0
  403bba:	cli    
  403bbb:	add    ch,bl
  403bbd:	push   es
  403bbe:	jno    0x403bb2
  403bc0:	or     bh,bh
	...
  403bf2:	add    BYTE PTR [eax],al
  403bf4:	jg     0x403ba6
  403bf6:	cmp    DWORD PTR [ebp-0xe],0x9
  403bfa:	jne    0x403c04
  403bfc:	in     eax,0x2c
  403bfe:	cld    
  403bff:	call   0x3fee3c
  403c04:	inc    ecx
  403c05:	cmp    al,0xf8
  403c07:	pop    edi
  403c08:	add    ecx,eax
  403c0a:	or     BYTE PTR [eax],al
  403c0c:	in     eax,dx
  403c0d:	dec    edi
  403c0e:	cmp    eax,0x48529e
  403c13:	jmp    0x403b97
  403c15:	or     ecx,DWORD PTR [ebx-0x9c5ddc1]
  403c1b:	jmp    DWORD PTR ds:0x4e75fece
  403c21:	mov    edx,0x48629e05
  403c26:	add    BYTE PTR [eax],al
  403c28:	mov    al,BYTE PTR [edx]
  403c2a:	add    BYTE PTR [edi+0x39],bl
  403c2d:	or     al,0x8b
  403c2f:	in     al,dx
  403c30:	lods   eax,DWORD PTR ds:[esi]
  403c31:	or     al,0x6a
  403c33:	add    BYTE PTR [ebp+0x2c],dh
  403c36:	or     al,ch
  403c38:	jge    0x403bfa
  403c3a:	(bad)  
  403c3b:	call   ecx
  403c3d:	sar    edi,0x75
  403c40:	push   edx
  403c41:	stos   BYTE PTR es:[edi],al
  403c42:	and    al,bh
  403c44:	dec    edx
  403c45:	add    al,BYTE PTR [ebx+0xf2c4bf8]
  403c4b:	push   edi
  403c4c:	mov    edx,0x327521f3
  403c51:	mov    esi,0xdd63778d
  403c56:	jle    0x403c20
	...
  403c88:	add    BYTE PTR [eax],al
  403c8a:	adc    BYTE PTR [eax-0xaa197ce],cl
  403c90:	inc    esp
  403c91:	add    BYTE PTR [esp+esi*4-0x239c3792],ch
  403c98:	(bad)  
  403c99:	mov    edi,0x40c9e86f
  403c9e:	fcomp  QWORD PTR [di+0x5c]
  403ca2:	jns    0x403c80
  403ca4:	cmp    ch,al
  403ca6:	in     al,dx
  403ca7:	mov    ds:0x9c680003,eax
  403cac:	push   edi
  403cad:	add    eax,0xeb03dba5
  403cb2:	pusha  
  403cb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cb4:	or     al,BYTE PTR [eax]
  403cb6:	adc    al,0x84
  403cb8:	mov    dl,0xc6
  403cba:	arpl   sp,bx
  403cbc:	xchg   al,bh
  403cbe:	pusha  
  403cbf:	scas   eax,DWORD PTR es:[edi]
  403cc0:	push   es
  403cc1:	(bad)  
  403cc2:	pop    esp
  403cc3:	fdivr  QWORD PTR [esi-0x39]
  403cc6:	cmp    eax,0x5fc2bc97
  403ccb:	fdivr  QWORD PTR [eax]
  403ccd:	mov    edi,DWORD PTR [edi+0x5a]
  403cd0:	(bad)  
  403cd1:	cld    
  403cd2:	fsubr  DWORD PTR [eax-0x539cfb01]
  403cd8:	add    eax,DWORD PTR [eax]
  403cda:	adc    eax,DWORD PTR [ecx+eax*8-0xb]
  403cde:	ins    BYTE PTR es:[edi],dx
  403cdf:	es jl  0x403d27
  403ce2:	addr16 out dx,al
  403ce4:	push   edi
  403ce5:	or     al,0x5c
  403ce7:	push   0xffffffcf
  403ce9:	dec    esi
  403ceb:	out    0xdb,al
  403ced:	hlt    
	...
  403d1e:	add    BYTE PTR [eax],al
  403d20:	push   esi
  403d21:	add    al,0xd2
  403d23:	dec    esi
  403d25:	scas   al,BYTE PTR es:[edi]
  403d26:	shl    BYTE PTR [ebp+0x6f],cl
  403d29:	rcl    DWORD PTR [edi-0x4],cl
  403d2c:	dec    ebx
  403d2d:	or     BYTE PTR [bx+si],al
  403d30:	arpl   WORD PTR ds:0xde2757e6,ax
  403d36:	jns    0x403d0f
  403d38:	sbb    al,0xcd
  403d3a:	mov    al,ds:0x3a0567c6
  403d3f:	pop    esp
  403d40:	stc    
  403d41:	sbb    eax,0xb8fb0428
  403d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d47:	add    al,0x63
  403d49:	add    BYTE PTR [ecx-0x6e7faea8],ch
  403d4f:	pop    esp
  403d50:	cmc    
  403d51:	sbb    eax,0xdd900428
  403d56:	mov    cl,0xca
  403d58:	arpl   WORD PTR ds:0x468bfb4a,ax
  403d5e:	jmp    0x7272dd8f
  403d63:	loopne 0x403d92
  403d65:	cmp    BYTE PTR [esi],dl
  403d67:	shl    DWORD PTR [esi],1
  403d69:	std    
  403d6a:	sbb    BYTE PTR [edi+0x73e9059d],0x58
  403d71:	(bad)
  403d74:	add    al,0x30
  403d76:	mov    edi,0xe8fda1ba
  403d7b:	jl     0x403d93
  403d7d:	std    
  403d7e:	js     0x403dfd
  403d80:	stos   DWORD PTR es:[edi],eax
  403d81:	jne    0x403df5
  403d83:	push   edi
	...
  403db4:	add    BYTE PTR [eax],al
  403db6:	push   edi
  403db7:	and    BYTE PTR [ecx],ch
  403db9:	sar    BYTE PTR [edx+0x74d136cc],1
  403dbf:	jne    0x403dfc
  403dc1:	mov    ds:0x3e685d3,al
  403dc6:	out    dx,eax
  403dc7:	in     eax,dx
  403dc8:	mov    ch,0x34
  403dca:	dec    ebx
  403dcb:	sub    BYTE PTR [edi],0x4
  403dce:	arpl   WORD PTR [eax],ax
  403dd0:	sub    DWORD PTR [edi+0x64],edx
  403dd3:	sub    al,0xa2
  403dd5:	xor    DWORD PTR [edx],ebx
  403dd7:	(bad)  
  403dd8:	icebp  
  403dd9:	add    ebp,edx
  403ddb:	add    al,BYTE PTR [eax]
  403ddd:	push   0x29
  403ddf:	add    ebx,ebp
  403de1:	pop    ss
  403de2:	fild   WORD PTR ds:0x2c60e900
  403de8:	pop    ebx
  403de9:	aas    
  403dea:	fadd   st,st(6)
  403dec:	or     cl,ch
  403dee:	dec    ebp
  403def:	sub    ah,0x62
  403df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403df3:	std    
  403df4:	or     ch,BYTE PTR [ecx+0x18002ac]
  403dfa:	addr16 push edx
  403dfc:	or     DWORD PTR [ecx+0x60],esi
  403dff:	add    eax,0xc6a9e900
  403e04:	add    al,0xe9
  403e06:	inc    edi
  403e07:	mov    bh,0xeb
  403e09:	mul    al
  403e0b:	or     al,0x5c
  403e0d:	sbb    eax,0xbe38855c
  403e12:	xor    eax,0x60e8ba04
  403e17:	add    eax,0x9200
	...
  403e4c:	pop    DWORD PTR gs:[eax]
  403e4f:	jmp    0x698043b4
  403e54:	pop    eax
  403e55:	add    eax,0xc7274d75
  403e5a:	leave  
  403e5b:	sub    esp,DWORD PTR [ebp+eax*1+0x55]
  403e5f:	bound  esi,QWORD PTR [ebx+esi*1+0x420fba56]
  403e66:	or     al,0xec
  403e68:	pusha  
  403e69:	add    DWORD PTR [eax],eax
  403e6b:	jmp    0x41912321
  403e70:	scas   al,BYTE PTR es:[edi]
  403e71:	sar    bh,1
  403e73:	cs out dx,eax
  403e75:	int3   
  403e76:	mov    eax,DWORD PTR [ecx-0x19]
  403e79:	push   ecx
  403e7a:	or     BYTE PTR [edx-0x63],dh
  403e7d:	stc    
  403e7e:	jmp    0xb420:0xb3cfceb
  403e85:	add    BYTE PTR [eax+0x74c91c00],al
  403e8b:	cmc    
  403e8c:	xor    DWORD PTR [eax+0xfa60274],edx
  403e92:	sub    eax,eax
  403e94:	mov    al,ds:0x1475c983
  403e99:	dec    edi
  403e9a:	ret    
  403e9b:	pop    ebx
  403e9c:	pop    esp
  403e9d:	sbb    cl,cl
  403e9f:	ret    0x702
  403ea2:	push   ebx
  403ea3:	push   esi
  403ea4:	repz std 
  403ea6:	(bad)  
  403ea7:	(bad)  
  403ea8:	cli    
  403ea9:	push   esi
  403eaa:	xor    edx,edx
  403eac:	call   0x0:0x90daf6
	...
  403edf:	add    BYTE PTR [eax],al
  403ee1:	add    dh,bl
  403ee3:	push   ecx
  403ee4:	movzx  edi,BYTE PTR [edx+0x6a2b3c51]
  403eeb:	sub    al,0x6
  403eed:	nop
  403eee:	dec    ecx
  403eef:	(bad)  
  403ef0:	ds nop
  403ef2:	mov    ebp,esi
  403ef4:	cs nop
  403ef6:	ja     0x403efb
  403ef8:	nop
  403ef9:	cmp    eax,0xfffffffa
  403efc:	pop    DWORD PTR [ebx-0x2]
  403eff:	test   BYTE PTR [edi+0x38fac07c],0x90
  403f06:	mov    ebp,0xb90403fd
  403f0b:	xchg   esi,eax
  403f0c:	inc    ebx
  403f0d:	cmp    al,0xcb
  403f0f:	push   esi
  403f10:	jl     0x403f1d
  403f12:	outs   dx,BYTE PTR ds:[esi]
  403f13:	pop    ds
  403f14:	nop
  403f15:	jg     0x403e9b
  403f17:	jmp    0x3c43:0x96799040
  403f1e:	stos   DWORD PTR es:[edi],eax
  403f1f:	push   esi
  403f20:	jl     0x403f2c
  403f22:	outs   dx,BYTE PTR ds:[esi]
  403f23:	cmp    al,0x90
  403f25:	jg     0x403eae
  403f27:	jmp    0xc2c1:0x462a0346
  403f2e:	inc    esp
  403f2f:	in     al,0xb1
  403f31:	shl    DWORD PTR [ebx+0x26],0x6
  403f35:	mov    esp,DWORD PTR [ecx]
  403f37:	stos   DWORD PTR es:[edi],eax
  403f38:	mov    ebx,0x3ad43bc1
  403f3d:	nop
  403f3e:	call   0x989eb359
  403f43:	pop    ds
  403f44:	cmp    DWORD PTR [ebx+0x0],ecx
	...
  403f76:	add    BYTE PTR [eax],al
  403f78:	aas    
  403f79:	outs   dx,DWORD PTR ds:[esi]
  403f7a:	ss push esi
  403f7c:	daa    
  403f7d:	push   edi
  403f7e:	pop    eax
  403f7f:	or     bl,dh
  403f81:	push   esi
  403f82:	push   eax
  403f83:	adc    bl,dh
  403f85:	inc    ax
  403f87:	or     al,0xf3
  403f89:	out    dx,al
  403f8a:	stos   BYTE PTR es:[edi],al
  403f8b:	jecxz  0x403fce
  403f8d:	sub    al,0x34
  403f8f:	nop
  403f90:	or     ecx,DWORD PTR [esi]
  403f92:	iret   
  403f93:	push   esp
  403f95:	sub    ecx,DWORD PTR [eax-0x661b9237]
  403f9b:	sar    ebx,0xd3
  403f9e:	jae    0x403fe3
  403fa0:	shl    DWORD PTR [ebx+0x5ef35973],0xc5
  403fa7:	add    al,0xf3
  403fa9:	pop    esi
  403faa:	fadd   QWORD PTR [ebx+esi*8]
  403fad:	add    ch,BYTE PTR [esi+0x739ee890]
  403fb3:	pop    esi
  403fb4:	adc    al,0xf7
  403fb6:	mov    esp,0x38dc5fc2
  403fbb:	mov    esi,DWORD PTR [edi-0x621338a4]
  403fc1:	sub    cl,dh
  403fc3:	push   ebx
  403fc4:	dec    eax
  403fc5:	pop    ss
  403fc6:	add    BYTE PTR [ebp-0x71],0x8b
  403fca:	pop    ebx
  403fcb:	adc    bh,BYTE PTR [edx]
  403fcd:	popf   
  403fce:	add    edi,edi
  403fd0:	add    ebx,DWORD PTR ss:0x26446341
  403fd7:	(bad)  
  403fd8:	arpl   sp,bx
  403fda:	cli    
  403fdb:	mov    edi,0x0
	...
  40400c:	add    BYTE PTR [eax],al
  40400e:	out    dx,al
  40400f:	add    al,0xcb
  404011:	into   
  404012:	(bad)  
  404013:	cmc    
  404014:	sbb    eax,0xea5b6758
  404019:	pop    ecx
  40401a:	arpl   ax,cx
  40401c:	xchg   esp,eax
  40401d:	sti    
  40401e:	inc    ebp
  40401f:	push   ebx
  404020:	add    eax,0xe9bf57db
  404025:	add    ebp,DWORD PTR [eax-0x3b]
  404028:	jl     0x40402e
  40402a:	mov    al,ds:0x3bcf74c8
  40402f:	fldcw  WORD PTR [esp+eax*1-0x23e039d]
  404036:	ffreep st(2)
  404038:	jmp    0x64baa340
  40403d:	rol    DWORD PTR ds:0x8b34c6c9,1
  404043:	add    eax,ebp
  404045:	add    esp,DWORD PTR [ebx-0x23]
  404048:	xchg   ebx,eax
  404049:	enter  0x563,0xe2
  40404d:	ret    
  40404e:	push   esp
  40404f:	adc    DWORD PTR [ebp+0x4],0x7dc0563
  404056:	bound  eax,QWORD PTR ds:0xa6e5fce9
  40405c:	jmp    0xe99ba364
  404061:	jle    0x404049
  404063:	aam    0x7f
  404065:	int    0xb4
  404067:	xor    eax,0x5a78d81
  40406c:	jmp    0x68151eef
  404071:	int    0x0
	...
  4040a3:	add    BYTE PTR [ebp+esi*1-0x376abbaf],bl
  4040aa:	push   esi
  4040ab:	stc    
  4040ac:	int3   
  4040ad:	push   edx
  4040ae:	in     eax,dx
  4040af:	pop    ebx
  4040b0:	jmp    0x4040cf
  4040b2:	test   al,0x3
  4040b4:	out    dx,al
  4040b5:	cmp    BYTE PTR [edx],0xce
  4040b8:	je     0x404082
  4040ba:	add    BYTE PTR [ecx+0x2ef6ae88],bl
  4040c0:	xchg   esi,eax
  4040c1:	enter  0xf175,0x90
  4040c5:	frstor [esi+edx*1]
  4040c8:	es enter 0xe6eb,0x1f
  4040cd:	push   edx
  4040ce:	or     BYTE PTR [esp+ebx*8-0x2d],bl
  4040d2:	inc    BYTE PTR [esi]
  4040d4:	cs xor eax,0xc80d3ee8
  4040da:	jmp    DWORD PTR [eax-0x1c]
  4040dd:	fdivr  st,st(6)
  4040df:	out    dx,al
  4040e0:	pop    ss
  4040e1:	pop    ebx
  4040e2:	add    BYTE PTR [ebx+0x67],dl
  4040e5:	pop    ebx
  4040e6:	add    dl,BYTE PTR [ebx+0x5f]
  4040e9:	pop    ebx
  4040ea:	add    eax,DWORD PTR [ecx+0x67]
  4040ed:	add    eax,0x9217a900
  4040f2:	in     al,dx
  4040f3:	(bad)  
  4040f4:	das    
  4040f5:	enter  0xcde8,0x23
  4040f9:	add    eax,0xcda56000
  4040fe:	inc    eax
  4040ff:	xor    eax,0xf975c6f7
  404104:	scas   eax,DWORD PTR es:[edi]
  404105:	push   ecx
  404106:	or     al,0x9e
	...
  404138:	add    BYTE PTR [eax],al
  40413a:	sub    eax,0xaec7e8cd
  40413f:	(bad)  
  404140:	jmp    DWORD PTR [edx-0x8]
  404143:	(bad)  
  404144:	jne    0x4040c7
  404146:	cwde   
  404147:	stos   BYTE PTR es:[edi],al
  404148:	ret    
  404149:	jmp    0xfd1b3dae
  40414e:	stos   DWORD PTR es:[edi],eax
  40414f:	(bad)  
  404150:	mov    ch,0x7d
  404152:	xchg   esi,eax
  404153:	(bad)  
  404154:	call   DWORD PTR [ecx+0x6d]
  404157:	rol    DWORD PTR [eax],0xe9
  40415a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40415b:	xchg   ecx,eax
  40415c:	in     al,dx
  40415d:	push   edi
  40415e:	lahf   
  40415f:	(bad)  
  404160:	call   0x7f386
  404165:	add    cl,dh
  404167:	les    ebx,FWORD PTR [ebx-0x37]
  40416a:	dec    eax
  40416b:	enter  0x54ff,0x1
  40416f:	test   al,0x81
  404171:	les    esp,FWORD PTR [esi]
  404173:	mov    edx,0xba19ffff
  404178:	jne    0x404186
  40417a:	jne    0x4041ab
  40417c:	or     BYTE PTR [eax+0x48],ch
  40417f:	in     al,dx
  404180:	inc    eax
  404181:	add    BYTE PTR [ebp-0x11],dl
  404184:	sub    DWORD PTR es:[ebx],ecx
  404187:	add    ebp,eax
  404189:	mov    ecx,0xbffbb2f
  40418e:	jp     0x404159
  404190:	test   dl,bl
  404192:	cmp    al,BYTE PTR [ebx]
  404194:	add    BYTE PTR [ebx],ch
  404196:	and    DWORD PTR [ebp-0x7b],ecx
  404199:	out    dx,eax
  40419a:	xor    al,0xbb
  40419c:	call   DWORD PTR [eax+0x0]
	...
  4041cf:	add    BYTE PTR [edx-0x5fffefb],ah
  4041d5:	stos   BYTE PTR es:[edi],al
  4041d6:	in     al,0xc3
  4041d8:	or     al,BYTE PTR [ebx]
  4041da:	or     eax,eax
  4041dc:	add    eax,0xfa00bd47
  4041e1:	add    bh,BYTE PTR ds:0x2fb04
  4041e7:	cmovge ebp,DWORD PTR [edi+0x0]
  4041eb:	add    dl,cl
  4041ed:	dec    ebp
  4041ee:	inc    ebp
  4041ef:	cld    
  4041f0:	mov    ch,BYTE PTR [ecx-0x452a1646]
  4041f6:	lea    eax,[ebp-0x442b]
  4041fc:	pop    edx
  4041fd:	test   eax,0xba35fd4f
  404202:	or     eax,eax
  404204:	scas   eax,DWORD PTR es:[edi]
  404205:	fisub  WORD PTR [edi-0x68]
  404208:	jb     0x40424a
  40420a:	add    BYTE PTR [ebp-0x15601],cl
  404210:	arpl   WORD PTR [edi],bp
  404212:	xor    al,0xe8
  404214:	jnp    0x404247
  404216:	retf   
  404217:	(bad)  
  404218:	jl     0x4041a3
  40421a:	sti    
  40421b:	dec    edi
  40421c:	mov    ecx,ebx
  40421e:	sar    edi,1
  404220:	ins    BYTE PTR es:[edi],dx
  404221:	inc    ebx
  404222:	sti    
  404223:	(bad)  
  404224:	out    dx,al
  404225:	jecxz  0x40429f
  404227:	test   DWORD PTR [esi+ebx*1-0x35],ecx
  40422b:	push   DWORD PTR [ebx+0x4cf5b9f4]
  404231:	out    dx,eax
  404232:	xor    edi,edi
	...
  404264:	add    BYTE PTR [eax],al
  404266:	into   
  404267:	clc    
  404268:	xor    ebp,eax
  40426a:	(bad)
  40426d:	jmp    FWORD PTR [eax+0x1c]
  404270:	push   eax
  404271:	push   ebx
  404272:	sub    al,0x49
  404274:	(bad)  
  404275:	call   0xb477e
  40427a:	jmp    0x3e4:0x9683cc18
  404281:	je     0x404224
  404283:	popa   
  404284:	inc    eax
  404285:	hlt    
  404286:	mov    bl,0xb7
  404288:	push   eax
  404289:	cld    
  40428a:	or     ebp,esi
  40428c:	mov    edi,0xc3616300
  404291:	js     0x4042c4
  404293:	(bad)  
  404294:	push   eax
  404295:	hlt    
  404296:	sti    
  404297:	fld    st(6)
  404299:	add    BYTE PTR [ebx-0x2d],ah
  40429c:	ret    
  40429d:	je     0x40431c
  40429f:	or     al,0xcb
  4042a1:	jne    0x40426e
  4042a3:	add    DWORD PTR ds:0x7e76c4f2,0xffffffd8
  4042aa:	sbb    edi,DWORD PTR [edi+0x50]
  4042ad:	clc    
  4042ae:	adc    ah,ch
  4042b0:	fld    TBYTE PTR [ecx+esi*4]
  4042b3:	dec    esi
  4042b4:	retf   0x2eff
  4042b7:	push   eax
  4042b8:	(bad)  
  4042ba:	mov    eax,ds:0xe803e904
  4042bf:	aas    
  4042c0:	in     eax,dx
  4042c1:	retf   0xcd16
  4042c4:	add    di,WORD PTR [ebx-0x45]
  4042c8:	pop    eax
  4042c9:	retf   0x0
	...
  4042fc:	jl     0x4042c3
  4042fe:	mov    esp,0x50168bc7
  404303:	retf   0x796c
  404306:	sub    ch,BYTE PTR [esi]
  404308:	call   0x1590:0xb603e1c2
  40430f:	xor    ch,al
  404311:	inc    edx
  404312:	icebp  
  404313:	fidiv  WORD PTR [edx+0x5c]
  404316:	add    al,BYTE PTR [ecx]
  404318:	(bad)  [eax+ebp*8+0x7b]
  40431c:	fs dec esp
  40431e:	imul   ecx,DWORD PTR [edx],0x29f43a63
  404324:	pushf  
  404325:	dec    esp
  404326:	imul   ecx,DWORD PTR [edx],0x83033983
  40432c:	pop    esp
  40432d:	adc    bl,BYTE PTR [ebp-0x21]
  404330:	jecxz  0x404336
  404332:	repz dec edi
  404334:	add    eax,DWORD PTR [esi-0x1f6f04ea]
  40433a:	bound  eax,QWORD PTR [edi+0x6b]
  40433d:	les    edi,FWORD PTR [esp+edi*8]
  404340:	cld    
  404341:	mov    ch,BYTE PTR [ebx-0x4e779cfc]
  404347:	add    al,0x6d
  404349:	in     al,dx
  40434a:	push   0xc9c49b48
  40434f:	dec    edi
  404350:	outs   dx,BYTE PTR ds:[esi]
  404351:	test   DWORD PTR ds:0x1d12cc0c,ebx
  404357:	cli    
  404358:	inc    esp
  404359:	inc    ecx
  40435a:	ror    eax,1
  40435c:	imul   edi,DWORD PTR [ecx],0x83ee
	...
  404392:	aaa    
  404393:	std    
  404394:	jge    0x404391
  404396:	aaa    
  404397:	or     al,0x0
  404399:	scas   eax,DWORD PTR es:[edi]
  40439a:	and    edi,ebp
  40439c:	(bad)  
  40439d:	jmp    0xec2b4b61
  4043a2:	mov    bh,0xd1
  4043a4:	pop    edi
  4043a5:	xor    BYTE PTR [ebp+0x7bc0009],ah
  4043ab:	mov    cl,0x83
  4043ad:	and    eax,0x4835883
  4043b2:	mov    ah,0xf3
  4043b4:	inc    eax
  4043b5:	jmp    0x6a527d1a
  4043ba:	pop    esp
  4043bb:	into   
  4043bc:	cs test al,0x60
  4043bf:	add    eax,0x1dff074
  4043c4:	mov    cl,0xcf
  4043c6:	mov    eax,ds:0x639c0005
  4043cb:	lock mov edi,0x8c6f9b2
  4043d1:	jmp    0xa508242d
  4043d6:	sbb    al,0x5
  4043d8:	add    cl,ch
  4043da:	pusha  
  4043db:	xchg   edx,eax
  4043dc:	inc    ebp
  4043dd:	icebp  
  4043de:	push   eax
  4043df:	les    esi,FWORD PTR [ebp-0xf]
  4043e2:	mov    dh,0x5
  4043e4:	push   esp
  4043e6:	int    0xf2
  4043e8:	inc    eax
  4043e9:	jmp    0x32b4c7f5
  4043ee:	pop    ds
  4043ef:	cmp    eax,edx
  4043f1:	jmp    0x6d10d456
	...
  404426:	add    BYTE PTR [eax],al
  404428:	sub    eax,0x3f4350b9
  40442d:	push   edi
  40442e:	call   esp
  404430:	icebp  
  404431:	repnz inc eax
  404433:	jmp    0xd0b4c80f
  404438:	mov    ds:0x60e8e449,eax
  40443d:	add    eax,0xbd2d8e00
  404442:	pop    DWORD PTR [eax]
  404444:	xchg   ecx,esp
  404446:	push   DWORD PTR [ebp+0x2e]
  404449:	cmp    eax,0x4b39ec45
  40444e:	or     al,0x0
  404450:	xchg   esi,eax
  404451:	mov    esi,0xa3a45c6
  404456:	add    BYTE PTR [eax],al
  404458:	jp     0x40443a
  40445a:	pop    es
  40445b:	(bad)  
  40445c:	mov    bh,0xd7
  40445e:	add    BYTE PTR [eax],al
  404460:	mov    al,BYTE PTR [edi]
  404462:	push   0x0
  404464:	nop
  404465:	pop    es
  404466:	push   0x10
  404468:	inc    DWORD PTR [edx]
  40446a:	in     al,0x50
  40446c:	mov    al,ds:0x9675ff07
  404471:	int    0x15
  404473:	leave  
  404474:	sub    al,0x48
  404476:	add    BYTE PTR [ebx],cl
  404478:	jp     0x4044cc
  40447a:	add    DWORD PTR [ebx-0x47],eax
  40447d:	dec    ebx
  40447e:	hlt    
  40447f:	add    dh,dl
  404481:	mov    esi,0xe03675fe
  404486:	call   0xc3:0x8b073ac1
	...
  4044bd:	add    cl,dl
  4044bf:	jg     0x404483
  4044c1:	or     BYTE PTR [edx],cl
  4044c3:	hlt    
  4044c4:	mov    ch,ah
  4044c6:	std    
  4044c7:	push   esp
  4044c8:	or     al,ch
  4044ca:	xchg   esi,eax
  4044cb:	enter  0x0,0x3a
  4044cf:	stc    
  4044d0:	out    0xa0,eax
  4044d2:	sbb    cl,bl
  4044d4:	call   DWORD PTR [eax+0x1d]
  4044d7:	push   ebp
  4044d8:	or     BYTE PTR [eax+0x12],dl
  4044db:	imul   eax,ecx,0xc8eefa00
  4044e1:	ret    0x6c6
  4044e4:	push   ebp
  4044e5:	mov    ebp,esi
  4044e7:	xchg   ah,al
  4044e9:	cld    
  4044ea:	mov    DWORD PTR [esi-0x539cf783],eax
  4044f0:	push   eax
  4044f1:	pop    es
  4044f2:	mov    BYTE PTR [ebx+ebp*1-0x37],ch
  4044f6:	mov    eax,ds:0x882b03b0
  4044fb:	push   ss
  4044fc:	add    al,0x6a
  4044fe:	arpl   WORD PTR [esi],ax
  404500:	add    al,0x6a
  404502:	arpl   WORD PTR [esi],ax
  404504:	(bad)  
  404505:	dec    DWORD PTR [esi]
  404507:	mov    ah,0x59
  404509:	add    cl,bh
  40450b:	stos   DWORD PTR es:[edi],eax
  40450c:	fcmovnb st,st(4)
  40450e:	mov    ds:0xa30b03ac,al
  404513:	fcom   DWORD PTR [edx]
  404515:	mov    DWORD PTR [esi],ebx
  404517:	dec    eax
  404518:	(bad)  
  404519:	jne    0x40458a
  40451b:	push   esp
  40451c:	cs lock fs sti 
  404520:	cli    
  404521:	mov    edi,0x0
	...
  404552:	add    BYTE PTR [eax],al
  404554:	xlat   BYTE PTR ds:[ebx]
  404555:	or     BYTE PTR [ebx-0x28],bh
  404558:	leave  
  404559:	lods   al,BYTE PTR ds:[esi]
  40455a:	pop    ecx
  40455b:	add    BYTE PTR [ecx+ebx*4-0x39],cl
  40455f:	push   ebx
  404560:	mov    ecx,0x6b75c71b
  404565:	xchg   BYTE PTR [ebx],al
  404567:	push   0x63
  404569:	adc    al,0x6d
  40456b:	shl    DWORD PTR [ebx-0x54],0xfa
  40456f:	mov    edi,0xe832a4ae
  404574:	jp     0x404532
  404576:	(bad)  
  404577:	dec    DWORD PTR [eax-0x39]
  40457a:	jp     0x40453f
  40457c:	test   al,0x75
  40457e:	rol    DWORD PTR [ebx+eiz*2],0x1
  404582:	jnp    0x404570
  404584:	loopne 0x4045ed
  404586:	xlat   BYTE PTR ds:[ebx]
  404587:	push   eax
  404588:	nop
  404589:	sbb    eax,0x37955732
  40458e:	inc    eax
  40458f:	or     al,0xd6
  404591:	and    eax,DWORD PTR [ebx+0x78ac6300]
  404597:	adc    al,0x9e
  404599:	add    al,0xe9
  40459b:	add    esp,DWORD PTR [ebx+0x5]
  40459e:	jb     0x40454b
  4045a0:	fmul   st,st(4)
  4045a2:	test   al,0xdb
  4045a4:	mov    WORD PTR gs:[eax+ebx*8],fs
  4045a8:	call   0xaa4336ec
  4045ad:	retf   0x83e6
  4045b0:	loopne 0x404557
  4045b2:	mov    dh,0x1a
  4045b4:	cwde   
  4045b5:	test   DWORD PTR [edx+0xb],esi
	...
  4045e8:	add    BYTE PTR [eax],al
  4045ea:	adc    DWORD PTR [ebx],edx
  4045ec:	jmp    0x6303:0xe944cbca
  4045f3:	out    dx,al
  4045f4:	sub    DWORD PTR [edx],eax
  4045f6:	jnp    0x4045b9
  4045f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045f9:	xlat   BYTE PTR ds:[ebx]
  4045fa:	jmp    0x26b4:0xf6790159
  404601:	std    
  404602:	arpl   si,sp
  404604:	stos   DWORD PTR es:[edi],eax
  404605:	pop    esi
  404606:	and    al,0x48
  404608:	in     eax,0x7c
  40460a:	or     bl,dl
  40460c:	push   ss
  40460d:	mov    esi,0xa71f0da5
  404612:	or     DWORD PTR [esi+0x376f3d2e],ebx
  404618:	mov    ch,0x11
  40461a:	push   ebx
  40461b:	sar    BYTE PTR [edi+edx*8+0x2c],0x3b
  404620:	icebp  
  404621:	js     0x4045c1
  404623:	mov    ch,0x99
  404625:	(bad)  [esi+0x5]
  404628:	jmp    0xedbf5d30
  40462d:	add    esp,DWORD PTR [ebx+0x5]
  404630:	jb     0x404679
  404632:	jae    0x4045e8
  404634:	mov    WORD PTR [esi],fs
  404636:	pushf  
  404637:	pop    ebx
  404638:	xor    BYTE PTR [ecx],ch
  40463a:	fwait
  40463b:	into   
  40463c:	stos   DWORD PTR es:[edi],eax
  40463d:	clc    
  40463e:	in     al,dx
  40463f:	pop    ecx
  404640:	jb     0x40461a
  404642:	loopne 0x40460d
  404644:	add    BYTE PTR [ebp+0x1a50588d],dh
  40464a:	nop
  40464b:	push   ebx
  40464c:	mov    ebx,DWORD PTR [eax+eax*1]
	...
  40467f:	add    bl,cl
  404681:	mov    edi,DWORD PTR [ebp-0xf]
  404684:	dec    ebx
  404685:	dec    edx
  404686:	adc    BYTE PTR [eax+0x7c],ah
  404689:	ror    DWORD PTR [ebx+0x4603be6],0x72
  404690:	jbe    0x40469f
  404692:	mov    edx,DWORD PTR [esi]
  404694:	stos   DWORD PTR es:[edi],eax
  404695:	mov    edi,ecx
  404697:	mov    edx,0xbafae4aa
  40469c:	stos   BYTE PTR es:[edi],al
  40469d:	xchg   edx,eax
  40469e:	test   dh,ch
  4046a0:	sbb    BYTE PTR [ecx+0x6a],ch
  4046a3:	bound  eax,QWORD PTR ss:[edi]
  4046a6:	shr    DWORD PTR [ecx],0x7e
  4046a9:	add    eax,ebx
  4046ab:	bound  ebp,QWORD PTR [edx-0x60f5070c]
  4046b1:	hlt    
  4046b2:	clc    
  4046b3:	ins    BYTE PTR es:[edi],dx
  4046b4:	repz pop ss
  4046b6:	push   esi
  4046b7:	jle    0x4046d7
  4046b9:	lods   eax,DWORD PTR ds:[esi]
  4046ba:	add    edx,DWORD PTR [edi-0xa3d3aac]
  4046c0:	arpl   bp,dx
  4046c2:	mov    esp,DWORD PTR [ecx]
  4046c4:	jb     0x404682
  4046c6:	and    edx,DWORD PTR [ebx]
  4046c8:	push   edx
  4046c9:	mov    esp,0xdb2e5d8d
  4046ce:	jo     0x404699
  4046d0:	dec    esp
  4046d1:	add    al,0x4e
  4046d3:	icebp  
  4046d4:	and    esi,eax
  4046d6:	adc    edx,ebp
  4046d8:	fimul  DWORD PTR [ebx-0x1bd74506]
  4046de:	clc    
  4046df:	sbb    bl,BYTE PTR [edi]
  4046e1:	xchg   edx,eax
  4046e2:	pushf  
  4046e3:	inc    BYTE PTR [eax]
	...
  404715:	add    BYTE PTR [esi],ch
  404717:	iret   
  404718:	mov    ebp,0xc5f63a8
  40471d:	test   al,0x23
  40471f:	pop    ss
  404720:	add    eax,DWORD PTR [eax]
  404722:	ret    
  404723:	cmp    al,0xf9
  404725:	xor    esp,DWORD PTR [eax]
  404727:	in     eax,0xfa
  404729:	xor    edx,DWORD PTR [eax]
  40472b:	aaa    
  40472c:	test   BYTE PTR [edi],al
  40472e:	push   ebp
  40472f:	mov    ecx,0x1b9f57b
  404734:	adc    cl,al
  404736:	cli    
  404737:	rol    BYTE PTR [edx],0xc3
  40473a:	inc    ecx
  40473b:	int    0x33
  40473d:	stc    
  40473e:	test   eax,0x37f933cb
  404743:	xor    BYTE PTR [edi],dl
  404745:	sub    bh,ah
  404747:	inc    eax
  404748:	inc    edi
  404749:	add    edi,DWORD PTR [ebp+esi*4-0x40]
  40474d:	ret    0x4b6
  404750:	ror    BYTE PTR [ebx+0x23fb1502],1
  404756:	add    BYTE PTR ds:0xb9068dfb,dl
  40475c:	adc    al,BYTE PTR [esi+0x5a]
  40475f:	mov    eax,ds:0xc2824e03
  404764:	rcl    DWORD PTR [ecx],0x79
  404767:	jge    0x4046f4
  404769:	cli    
  40476a:	pop    ecx
  40476b:	retf   
  40476c:	and    edi,ecx
  40476e:	pop    ecx
  40476f:	retf   
  404770:	lea    ebx,[ebp+eiz*2+0x67469502]
  404777:	add    eax,0x1c5e
	...
  4047ac:	mov    eax,ebp
  4047ae:	push   ss
  4047af:	add    esi,DWORD PTR [ebx+0x3d]
  4047b2:	stc    
  4047b3:	xor    esp,DWORD PTR [eax-0x1b]
  4047b6:	cli    
  4047b7:	xor    esp,DWORD PTR [eax+0x37]
  4047ba:	test   BYTE PTR [edi],al
  4047bc:	jb     0x4047e8
  4047be:	sub    BYTE PTR [ecx+0x9],0x1
  4047c2:	and    cl,al
  4047c4:	mov    edx,0x91c3030a
  4047c9:	jle    0x4047fe
  4047cb:	stc    
  4047cc:	arpl   WORD PTR [ebx],cx
  4047ce:	mov    esp,0x9861fa33
  4047d3:	pop    ss
  4047d4:	mov    esp,0x608b487f
  4047d9:	push   ss
  4047da:	call   0x6e8e99f
  4047df:	shr    al,1
  4047e1:	je     0x4047da
  4047e3:	cli    
  4047e4:	and    BYTE PTR [edx-0x9],0xfa
  4047e8:	(bad)  
  4047e9:	xor    BYTE PTR [ebx],dl
  4047eb:	mov    cl,0x18
  4047ed:	xchg   edi,eax
  4047ee:	ret    
  4047ef:	add    esp,DWORD PTR ds:0x52c1c4c4
  4047f5:	stos   DWORD PTR es:[edi],eax
  4047f6:	int    0x8b
  4047f8:	test   eax,0x9a23bb7b
  4047fd:	jnp    0x4047ba
  4047ff:	(bad)  
  404800:	test   edi,0x352fd781
  404806:	pop    es
  404807:	pop    esi
  404808:	aaa    
  404809:	in     eax,dx
  40480a:	(bad)  
  40480b:	push   ss
  40480c:	pusha  
  40480d:	cmc    
  40480e:	mov    ?,ecx
	...
  404840:	add    BYTE PTR [eax],al
  404842:	xor    BYTE PTR [edx-0x19],dl
  404845:	cli    
  404846:	xor    BYTE PTR [edx-0x6f],al
  404849:	test   BYTE PTR [edx+ecx*1+0x15],bl
  40484d:	nop
  40484e:	enter  0x49ab,0x30
  404852:	and    ch,ah
  404854:	or     al,BYTE PTR [ebx]
  404856:	and    BYTE PTR [ebx],dh
  404858:	mov    edi,0xbbcb4a33
  40485d:	xor    edi,DWORD PTR [edx]
  40485f:	sub    DWORD PTR [eax-0x64632fe9],ebx
  404865:	std    
  404866:	pusha  
  404867:	sahf   
  404868:	test   eax,0xd006b021
  40486e:	call   0x413b3f26
  404873:	mov    dl,0xf6
  404875:	cli    
  404876:	fiadd  WORD PTR [esi*2+0x6041d512]
  40487d:	push   0x60
  40487f:	dec    edi
  404880:	adc    ebp,eax
  404882:	and    dl,BYTE PTR [edx+ebp*8]
  404885:	int    0xd8
  404887:	mov    edx,0xbc40bbfa
  40488c:	cli    
  40488d:	mov    ebx,0xe4d6a0ee
  404892:	pop    esp
  404893:	jns    0x4048b5
  404895:	pop    es
  404896:	sub    eax,0x6dc6a801
  40489b:	add    al,al
  40489d:	mov    ?,WORD PTR [edx-0x45196e0f]
  4048a3:	icebp  
  4048a4:	(bad)  
  4048a5:	nop
	...
  4048d6:	add    BYTE PTR [eax],al
  4048d8:	out    0x5,eax
  4048da:	or     ebp,ecx
  4048dc:	inc    esi
  4048dd:	mov    bh,0xea
  4048df:	dec    ecx
  4048e0:	les    ebp,FWORD PTR [bx+di+0x6008]
  4048e5:	ret    0xbe62
  4048e8:	push   eax
  4048e9:	mov    ebp,0xba50bd0a
  4048ee:	ins    BYTE PTR es:[edi],dx
  4048ef:	xchg   edi,eax
  4048f0:	push   esp
  4048f1:	inc    ebp
  4048f2:	call   0xa21b:0xb701a343
  4048f9:	ret    0x6f0
  4048fc:	xchg   ebx,eax
  4048fd:	mov    DWORD PTR [ecx-0xa],eax
  404900:	pop    edx
  404901:	jmp    0x8b8d3f37
  404906:	pop    ebp
  404907:	adc    dh,BYTE PTR [edx+0x61e9c75f]
  40490d:	dec    ebx
  40490e:	int    0xc4
  404910:	and    cl,BYTE PTR [edx+ebp*8]
  404913:	int    0xe8
  404915:	mov    edi,0xbd80bcda
  40491a:	mov    edx,0xde99d6bd
  40491f:	ins    DWORD PTR es:[edi],dx
  404920:	and    al,0x74
  404922:	add    BYTE PTR [eax],al
  404924:	pop    ebp
  404925:	sbb    eax,ecx
  404927:	sub    dh,BYTE PTR [eax+ecx*1-0x27]
  40492b:	jb     0x4048f5
  40492d:	clc    
  40492e:	cli    
  40492f:	or     bh,BYTE PTR [ebp-0x149b0708]
  404935:	add    al,0x5d
  404937:	stc    
  404938:	repz rol BYTE PTR [ebx],cl
  40493b:	das    
	...
  40496c:	add    BYTE PTR [eax],al
  40496e:	dec    ebx
  40496f:	mov    al,0xe4
  404972:	addr16 enter 0xb28b,0xce
  404977:	mov    ah,0x23
  404979:	mov    al,0xd6
  40497b:	mov    edi,0x586a7d8d
  404980:	adc    al,0x25
  404982:	or     BYTE PTR gs:[esi-0x3f],dl
  404986:	mov    eax,ds:0x90ea09c7
  40498b:	nop
  40498c:	clc    
  40498d:	mov    edx,0xbafae8e6
  404992:	fmul   DWORD PTR [edx-0x5c1e1974]
  404998:	mov    eax,ds:0x3c4b6691
  40499d:	sub    BYTE PTR [eax-0x11ccfcf5],ah
  4049a3:	mov    edi,0xb47e5033
  4049a8:	xor    edx,DWORD PTR [ebx-0x24]
  4049ab:	cdq    
  4049ac:	pop    ds
  4049ad:	xor    DWORD PTR [esi-0x3d151828],esp
  4049b3:	adc    eax,0x87b2ac1
  4049b8:	fldenv [edx+0x8]
  4049bb:	clc    
  4049bc:	cli    
  4049bd:	retf   0xf806
  4049c0:	clc    
  4049c1:	ins    BYTE PTR es:[edi],dx
  4049c2:	jmp    0x4049c7
  4049c4:	out    0x24,al
  4049c6:	add    dh,ah
  4049c8:	add    ah,BYTE PTR [edi+0xc0c544]
  4049ce:	aaa    
  4049cf:	add    ebx,eax
  4049d1:	mov    eax,DWORD PTR [eax]
	...
  404a03:	add    BYTE PTR [ecx-0x4e],ah
  404a06:	mul    DWORD PTR [ebx]
  404a08:	adc    esi,DWORD PTR [ecx+0x1eb68dfa]
  404a0e:	(bad)  
  404a0f:	pop    es
  404a10:	gs ret 0x5603
  404a14:	inc    edx
  404a15:	enter  0x9c2,0x9
  404a19:	fmul   DWORD PTR [ebx+0x237b49f8]
  404a1f:	sti    
  404a20:	jmp    0xcdccd7a4
  404a25:	mov    WORD PTR ds:0x4e0116d5,cs
  404a2b:	or     al,0xfb
  404a2d:	(bad)  
  404a2e:	push   cs
  404a2f:	add    edx,DWORD PTR [eax]
  404a31:	mov    edx,edi
  404a33:	xor    eax,DWORD PTR [ebx]
  404a35:	mov    eax,ds:0x8ad033f7
  404a3a:	pushf  
  404a3b:	pop    ds
  404a3c:	das    
  404a3d:	adc    al,0x5a
  404a3f:	inc    ebp
  404a40:	mov    ecx,0xc9c12025
  404a45:	adc    eax,DWORD PTR [ebx]
  404a47:	fld    DWORD PTR [ecx]
  404a49:	jg     0x404a7e
  404a4b:	sti    
  404a4c:	cdq    
  404a4d:	jns    0x404a82
  404a4f:	stc    
  404a50:	je     0x61534f5d
  404a56:	test   eax,0xc0b3c403
  404a5b:	rol    BYTE PTR [edi+0x218bc300],0xb1
  404a62:	mul    DWORD PTR [ebx]
  404a64:	mov    ds:0x8dfab1,eax
	...
  404a99:	add    BYTE PTR [esi-0x725c07e3],dh
  404a9f:	jp     0x404aa4
  404aa1:	push   esi
  404aa2:	push   edx
  404aa3:	enter  0x9c2,0x49
  404aa7:	xlat   BYTE PTR ds:[ebx]
  404aa8:	mov    edi,eax
  404aaa:	arpl   di,bx
  404aac:	mov    ebp,0xbbe02823
  404ab1:	(bad)  
  404ab2:	xlat   BYTE PTR ds:[ebx]
  404ab3:	mov    bl,0xda
  404ab5:	add    cl,BYTE PTR [ebx+eax*4-0x1288b1fc]
  404abc:	ror    DWORD PTR [esi],0x60
  404abf:	out    0x8b,al
  404ac1:	cli    
  404ac2:	push   eax
  404ac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ac4:	jecxz  0x404abd
  404ac6:	xor    BYTE PTR [esi+0x26549c91],ah
  404acc:	push   eax
  404acd:	sub    bl,dh
  404acf:	scas   eax,DWORD PTR es:[edi]
  404ad0:	pop    ebp
  404ad1:	xor    BYTE PTR [edx],ah
  404ad3:	jo     0x404aed
  404ad5:	add    edi,DWORD PTR [edx-0x26cc42c9]
  404adb:	mov    edi,0xa3e78dba
  404ae0:	inc    ecx
  404ae1:	cmp    ecx,ecx
  404ae3:	arpl   WORD PTR [ebx],ax
  404ae5:	inc    esi
  404ae6:	push   edi
  404ae7:	ins    DWORD PTR es:[edi],dx
  404ae8:	les    eax,FWORD PTR [eax+eiz*2]
  404aeb:	outs   dx,DWORD PTR ds:[esi]
  404aec:	mov    edi,ebx
  404aee:	jo     0x404a85
  404af0:	repz not esi
  404af3:	pop    eax
  404af4:	pop    ss
  404af5:	adc    DWORD PTR [ebp+0x2d0386bd],0xc2c4cc
	...
  404b2f:	add    BYTE PTR [eax-0x51],bl
  404b32:	ror    DWORD PTR [ebx+0x33bb1f8b],cl
  404b38:	jns    0x404b63
  404b3a:	nop
  404b3b:	cmovno ecx,ebp
  404b3e:	mov    al,ds:0xef9a606d
  404b43:	shl    BYTE PTR [edx-0x1735fd24],0x45
  404b4a:	repz not DWORD PTR [eax+0x6c9c90f5]
  404b51:	fdivr  st,st(3)
  404b53:	in     al,0x46
  404b55:	add    eax,0xc47b5dea
  404b5a:	sub    dl,BYTE PTR [edi]
  404b5c:	pusha  
  404b5d:	fsub   QWORD PTR [edx-0x43]
  404b60:	jo     0x404b21
  404b62:	fidivr DWORD PTR [edx+0x47ee80d6]
  404b68:	or     DWORD PTR [ebx+0x45],edi
  404b6b:	add    ebx,DWORD PTR [ebp+0x67c42801]
  404b71:	push   es
  404b72:	sub    cl,BYTE PTR [ebx-0xd2009f8]
  404b78:	hlt    
  404b79:	xchg   DWORD PTR [ebp+0x16],esi
  404b7c:	retf   0xb7c9
  404b7f:	dec    edx
  404b80:	pusha  
  404b81:	push   ebx
  404b82:	stc    
  404b83:	les    esp,FWORD PTR [ecx]
  404b85:	push   cs
  404b86:	jmp    0x90ba:0xfabce8d3
  404b8d:	mov    edi,0x255c8f64
  404b92:	and    bh,BYTE PTR [ebx+0x0]
	...
  404bc5:	add    ch,cl
  404bc7:	add    eax,0xc3a22037
  404bcc:	stc    
  404bcd:	add    ch,BYTE PTR [ecx-0x4b0d6c73]
  404bd3:	cmc    
  404bd4:	(bad)  
  404bd5:	nop
  404bd6:	(bad)  
  404bd7:	sbb    ecx,edi
  404bd9:	jg     0x404bb7
  404bdb:	jp     0x404bc7
  404bdd:	pop    ebp
  404bde:	dec    ebx
  404bdf:	les    ebp,FWORD PTR [edx+0x62dc6016]
  404be5:	mov    esp,0xbb1abf50
  404bea:	out    dx,al
  404beb:	and    dh,0xc5
  404bee:	cmc    
  404bef:	popf   
  404bf0:	add    DWORD PTR [ebx],eax
  404bf2:	and    eax,0x5fc327f1
  404bf7:	push   es
  404bf8:	sub    cl,BYTE PTR [edx-0xdc00aa8]
  404bfe:	dec    esp
  404bff:	mov    eax,DWORD PTR [eax]
  404c01:	pop    ebp
  404c02:	jne    0x404bbf
  404c04:	daa    
  404c05:	mov    dl,bh
  404c07:	add    al,0x16
  404c09:	sub    BYTE PTR [edx],ah
  404c0b:	or     eax,0xbde93903
  404c10:	xor    edx,DWORD PTR [edx]
  404c12:	xor    DWORD PTR [edi-0x7daaa273],edi
  404c18:	xor    BYTE PTR [esi],dl
  404c1a:	xor    al,0x5
  404c1c:	dec    esi
  404c1d:	in     eax,dx
  404c1e:	pop    ds
  404c1f:	(bad)  
  404c20:	adc    dl,ch
  404c22:	sbb    cl,BYTE PTR [ebp-0xb374506]
  404c28:	clc    
  404c29:	je     0x404c2b
	...
  404c5b:	add    bl,al
  404c5d:	sbb    BYTE PTR ds:0x301e8fc,al
  404c63:	aaa    
  404c64:	dec    edi
  404c65:	mov    bl,0xf6
  404c68:	arpl   si,bx
  404c6a:	mov    eax,eax
  404c6c:	sar    BYTE PTR [esi-0x7e1b3dcd],cl
  404c72:	pop    es
  404c73:	lock mov al,0xd1
  404c76:	fldl2e 
  404c78:	push   ds
  404c79:	loope  0x404c3b
  404c7b:	test   eax,0x72c3046b
  404c80:	cli    
  404c81:	hlt    
  404c82:	clc    
  404c83:	(bad)  
  404c85:	mov    dl,BYTE PTR [esi+esi*8-0x70246103]
  404c8c:	bound  ecx,QWORD PTR [edi+0x30]
  404c8f:	test   al,0xa1
  404c91:	or     al,0x3
  404c93:	cdq    
  404c94:	fidivr DWORD PTR [ebp-0x416d8dcd]
  404c9a:	lea    esi,[ebp+0x6e]
  404c9d:	mov    ebp,0x4568b7c
  404ca2:	dec    esi
  404ca3:	adc    eax,0xea10c6a0
  404ca8:	call   0x337c:0x5900fa8c
  404caf:	stc    
  404cb0:	(bad)  
  404cb1:	gs pop ds
  404cb3:	gs in  al,dx
  404cb5:	daa    
  404cb6:	les    eax,FWORD PTR [ebx]
  404cb8:	aam    0xb
  404cba:	rol    ebx,0x3d
  404cbd:	add    eax,0xbfd9
	...
  404cf2:	push   ebp
  404cf3:	jp     0x404cf4
  404cf5:	dec    DWORD PTR [ecx]
  404cf7:	jle    0x404d04
  404cf9:	sti    
  404cfa:	or     DWORD PTR [ebx-0x73],edi
  404cfd:	test   BYTE PTR ds:0xe292240,cl
  404d03:	add    eax,0xff3ac106
  404d08:	add    al,bl
  404d0a:	xor    eax,0x5ffff7a
  404d0f:	mov    ch,0xf8
  404d11:	or     eax,DWORD PTR [edx]
  404d13:	mov    ch,0xfa
  404d15:	lea    ebp,[esi+0x11]
  404d18:	xchg   edi,eax
  404d19:	jmp    DWORD PTR [eax+0x46]
  404d1c:	add    edx,DWORD PTR [esi-0x3a]
  404d1f:	ret    0xac2
  404d22:	leave  
  404d23:	sar    DWORD PTR [edi-0x86ea01],cl
  404d29:	xor    edx,DWORD PTR [ecx]
  404d2b:	or     eax,0x870233fa
  404d30:	mov    WORD PTR [edi],cs
  404d32:	sbb    eax,0xb9ab93a5
  404d37:	dec    ecx
  404d38:	cmp    cl,al
  404d3a:	sti    
  404d3b:	or     BYTE PTR [ebx],al
  404d3d:	retf   0x7925
  404d40:	(bad)  
  404d41:	call   DWORD PTR ds:0x130bf7b5
  404d47:	mov    ch,0xf9
  404d49:	lea    edx,[esi]
  404d4b:	sbb    DWORD PTR [ecx],edi
  404d4d:	mov    al,ds:0x5e0377f9
  404d52:	outs   dx,BYTE PTR ds:[esi]
  404d53:	ret    0x15c3
	...
  404d86:	add    BYTE PTR [eax],al
  404d88:	arpl   WORD PTR [ebx+0x4664bfda],bp
  404d8e:	mov    esp,0x84290ff
  404d93:	sti    
  404d94:	nop
  404d95:	inc    ebp
  404d96:	mov    es,WORD PTR [esp+eiz*2-0x41a4a615]
  404d9d:	stos   DWORD PTR es:[edi],eax
  404d9e:	inc    ebp
  404d9f:	xor    BYTE PTR [edx],ah
  404da1:	in     eax,dx
  404da2:	add    al,0x3
  404da4:	and    BYTE PTR [eax-0x44],bl
  404da7:	jmp    FWORD PTR [eax+edx*1]
  404daa:	lock clc 
  404dac:	pop    eax
  404dad:	adc    al,0xf0
  404daf:	cli    
  404db0:	out    dx,al
  404db1:	pop    eax
  404db2:	adc    al,0x92
  404db4:	daa    
  404db5:	test   eax,0xa0b5038c
  404dba:	ret    0x59c2
  404dbd:	stos   DWORD PTR es:[edi],eax
  404dbe:	sar    DWORD PTR [edi-0x446004],cl
  404dc4:	xor    BYTE PTR [ebx-0x2bcf05f1],ah
  404dca:	mov    DWORD PTR [esp+edx*2-0x23104fb7],ecx
  404dd1:	stos   DWORD PTR es:[edi],eax
  404dd2:	dec    ecx
  404dd3:	sub    BYTE PTR [edx-0x66fcf493],ah
  404dd9:	das    
  404dda:	mov    ebx,0xf767c4ff
  404ddf:	imul   DWORD PTR [eax+0x65]
  404de2:	idiv   ecx
  404de4:	out    0x38,al
  404de6:	sbb    edx,ecx
  404de8:	push   cs
  404de9:	sub    BYTE PTR [ecx+0x3],al
	...
  404e1b:	add    BYTE PTR [eax],al
  404e1d:	add    BYTE PTR ds:0x76c3c4a0,al
  404e23:	stos   DWORD PTR es:[edi],eax
  404e24:	fdivr  QWORD PTR [edi-0x44c86c]
  404e2a:	push   eax
  404e2b:	xor    cl,BYTE PTR [edi]
  404e2d:	sti    
  404e2e:	push   eax
  404e2f:	xor    eax,0x5648489
  404e34:	mov    dh,0x39
  404e36:	retf   
  404e37:	es jmp 0x6002:0x29c44341
  404e3f:	ret    0xbb8e
  404e42:	pop    esp
  404e43:	mov    dh,0x46
  404e45:	neg    DWORD PTR [ebx+0xa]
  404e48:	inc    ecx
  404e49:	test   DWORD PTR [ecx-0x78],0x9f43135d
  404e50:	std    
  404e51:	mov    ecx,0xc4e54f60
  404e56:	and    DWORD PTR [ebx],ecx
  404e58:	jmp    0x24bb:0x16b5ecd3
  404e5f:	repnz adc DWORD PTR [edi],ecx
  404e62:	sbb    edx,esi
  404e64:	add    BYTE PTR [ecx+0x46d505e7],cl
  404e6a:	bound  esp,QWORD PTR [edx-0x16]
  404e6d:	dec    ecx
  404e6e:	imul   eax,esp,0x28
  404e71:	or     esp,DWORD PTR [eax-0x35]
  404e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e75:	mov    edx,0xf6deb5f4
  404e7a:	hlt    
  404e7b:	or     eax,edx
  404e7d:	imul   dl
  404e7f:	xchg   DWORD PTR [ebp+0x1a],ebp
	...
  404eb2:	add    BYTE PTR [eax],al
  404eb4:	add    dl,BYTE PTR [ecx+esi*8]
  404eb7:	dec    ecx
  404eb8:	pusha  
  404eb9:	push   edi
  404eba:	cmc    
  404ebb:	les    esp,FWORD PTR [eax+0x4dcea0f]
  404ec1:	mov    dh,0xae
  404ec3:	mov    edx,0xea2f1bc
  404ec8:	mov    eax,0xe7889ff1
  404ecd:	std    
  404ece:	push   0x39
  404ed0:	adc    BYTE PTR [esi-0x3b8cbe16],ch
  404ed6:	test   eax,0x3ec26001
  404edb:	mov    edx,0x7600b58c
  404ee0:	lea    edi,[ebx+ecx*1-0x72458a8f]
  404ee7:	jge    0x404f3a
  404ee9:	lock icebp 
  404eeb:	and    ebp,edx
  404eed:	add    DWORD PTR [esi+0x5],edx
  404ef0:	sahf   
  404ef1:	ret    0xea0a
  404ef4:	xor    BYTE PTR [ebp-0x1],dh
  404ef7:	inc    esi
  404ef8:	sbb    DWORD PTR [ebp-0x50a2bdcd],esi
  404efe:	xor    esi,DWORD PTR [ecx]
  404f00:	fild   DWORD PTR [ecx-0x22e98df1]
  404f06:	sub    ch,dl
  404f08:	stos   BYTE PTR es:[edi],al
  404f09:	std    
  404f0a:	shr    BYTE PTR [eax],0x59
  404f0d:	or     dl,cl
  404f0f:	push   esi
  404f10:	jmp    0x154f4ec9
  404f15:	mov    ebp,0xb
	...
  404f4a:	or     eax,0x695d8daf
  404f4f:	xchg   esi,eax
  404f50:	shr    DWORD PTR [edi-0x4b],cl
  404f53:	or     BYTE PTR [esi-0x3b],bl
  404f56:	daa    
  404f57:	leave  
  404f58:	adc    eax,0x7d8119ea
  404f5d:	icebp  
  404f5e:	popa   
  404f5f:	or     al,0x1
  404f61:	arpl   WORD PTR ss:[esi],ax
  404f64:	dec    edi
  404f65:	loope  0x404fc8
  404f67:	pop    esp
  404f68:	or     al,0xc6
  404f6a:	sbb    al,0xb1
  404f6c:	lea    esi,[edi]
  404f6e:	daa    
  404f6f:	add    al,0x89
  404f71:	out    0x6,al
  404f73:	mov    ch,0xff
  404f75:	adc    ebx,DWORD PTR [eax]
  404f77:	push   eax
  404f78:	pop    eax
  404f79:	inc    esi
  404f7a:	sbb    DWORD PTR [esi+0x5a60edc2],edi
  404f80:	mov    eax,DWORD PTR [ebp+0x36f8c9de]
  404f86:	xor    DWORD PTR [eax-0x39],ebx
  404f89:	add    BYTE PTR [edi+0x6d],al
  404f8c:	add    BYTE PTR [eax],al
  404f8e:	jp     0x404f98
  404f90:	push   DWORD PTR [ebp+0x7e]
  404f93:	jge    0x404fda
  404f95:	clc    
  404f96:	lds    esi,FWORD PTR [edi+ebx*1+0x108cb65]
  404f9d:	and    eax,edi
  404f9f:	in     eax,0xc6
  404fa1:	add    eax,0x411456
  404fa6:	ret    
  404fa7:	and    cl,ch
  404fa9:	out    dx,eax
  404faa:	test   DWORD PTR [edi+eiz*1+0x65],esi
	...
  404fdd:	add    BYTE PTR [eax],al
  404fdf:	add    bl,bh
  404fe1:	pop    es
  404fe2:	(bad)  
  404fe3:	(bad)  
  404fe5:	xchg   ecx,eax
  404fe6:	mov    DWORD PTR ds:0x41133e,0x103243d4
  404ff0:	test   DWORD PTR [edi+ebp*1-0xff8049b],esi
  404ff7:	loope  0x405051
  404ff9:	retf   0x1ceb
  404ffc:	xchg   ecx,eax
  404ffd:	hlt    
  404ffe:	pop    es
  404fff:	add    eax,edi
  405001:	jnp    0x40506d
  405003:	inc    eax
  405004:	loop   0x404fa9
  405006:	fs inc ecx
  405008:	or     bl,BYTE PTR [eax-0x18]
  40500b:	arpl   WORD PTR [ebx],dx
  40500d:	ins    DWORD PTR es:[edi],dx
  40500e:	inc    DWORD PTR [ebx-0x17bf92b9]
  405014:	mov    esi,0x49000007
  405019:	jmp    0x405012
  40501b:	inc    eax
  40501c:	cdq    
  40501d:	iret   
  40501e:	mov    ebx,DWORD PTR [ebp-0x5e]
  405021:	mov    bl,al
  405023:	inc    eax
  405024:	inc    ecx
  405025:	repz pop es
  405027:	add    eax,DWORD PTR [edi-0x6997ac93]
  40502d:	adc    al,BYTE PTR [ecx+0x0]
  405030:	push   0x61
  405032:	cmp    al,0xe9
  405034:	arpl   WORD PTR [ebx-0x7dc1fe48],bx
  40503a:	rol    DWORD PTR [ebx+0x43014f],0xe3
  405041:	push   ds
  405042:	lods   al,BYTE PTR ds:[esi]
  405043:	aaa    
	...
  405074:	add    BYTE PTR [eax],al
  405076:	or     eax,0x6beb84d7
  40507b:	mov    edx,0xd1c0800d
  405080:	push   ds
  405081:	inc    ecx
  405082:	arpl   WORD PTR [esi+0x456d7844],bx
  405088:	mov    WORD PTR [eax],es
  40508a:	arpl   WORD PTR [esp+edi*2-0x47b3ab38],bx
  405091:	jmp    0x4050f4
  405093:	js     0x4050a2
  405095:	add    BYTE PTR [eax],0xc9
  405098:	push   ds
  405099:	inc    ecx
  40509a:	arpl   WORD PTR [esp+eax*2+0x3e382d78],bx
  4050a1:	or     al,0xea
  4050a3:	mov    ah,0x3
  4050a5:	add    BYTE PTR [ebx-0x31],ah
  4050a8:	aad    0xf7
  4050aa:	add    dl,ah
  4050ac:	retf   
  4050ad:	movaps XMMWORD PTR [eax+0x33],xmm0
  4050b1:	mov    gs:0x77158a9c,al
  4050b7:	add    DWORD PTR [edx+0x0],0x3950b
  4050be:	arpl   WORD PTR [ebp-0x1c],di
  4050c1:	mov    fs:0x3f158a9c,al
  4050c7:	inc    ecx
  4050c8:	inc    ebp
  4050c9:	add    al,ch
  4050cb:	shr    ebx,1
  4050cd:	and    bl,BYTE PTR fs:[esi+eax*1+0x7765cc8]
  4050d5:	leave  
  4050d6:	add    ch,bh
  4050d8:	and    BYTE PTR [ecx+0x0],al
	...
  40510b:	add    BYTE PTR [ebx+0x25],ah
  40510e:	adc    DWORD PTR [esi+edi*1],esp
  405111:	add    eax,0xda0428
  405116:	shl    DWORD PTR [eax],1
  405118:	and    al,BYTE PTR ds:0x4407e848
  40511e:	jmp    0xc35bfad
  405123:	inc    ebp
  405124:	arpl   WORD PTR [edx],ax
  405126:	mov    cl,0x7
  405128:	cdq    
  405129:	lds    sp,DWORD PTR [eax]
  40512c:	and    al,BYTE PTR ds:0x28331160
  405132:	test   al,0x3
  405134:	stc    
  405135:	sbb    BYTE PTR [esi+0x31],bl
  405138:	push   ebx
  405139:	sbb    eax,0x5a22109
  40513e:	inc    ecx
  40513f:	xchg   ecx,eax
  405140:	dec    ebx
  405141:	mov    dl,0x46
  405143:	pop    ebx
  405144:	lods   eax,DWORD PTR ds:[esi]
  405145:	push   edx
  405146:	xor    dl,al
  405148:	push   edi
  405149:	add    eax,0x864f8a9c
  40514e:	and    eax,0x26acfabc
  405153:	mov    bh,0x2c
  405155:	jle    0x40513c
  405157:	enter  0x28af,0xa8
  40515b:	add    ebp,eax
  40515d:	sbb    BYTE PTR [esp+edi*1],bl
  405160:	jle    0x4051a6
  405162:	jmp    0x33426c6d
  405167:	lea    ebx,[edi-0x40]
  40516a:	jge    0x40518c
  40516c:	mov    ds:0x106005,al
	...
  4051a1:	add    BYTE PTR [esi],ah
  4051a3:	sub    eax,0x4463454c
  4051a8:	push   esp
  4051a9:	fldcw  WORD PTR [edx-0x2349293c]
  4051af:	jge    0x405196
  4051b1:	mov    BYTE PTR [ebx+0x2b],cl
  4051b4:	sub    BYTE PTR [eax+ebx*8],al
  4051b7:	sbb    BYTE PTR [edi+ecx*2+0x3d],ch
  4051bb:	inc    esp
  4051bc:	add    cl,ch
  4051be:	mov    cl,0x5
  4051c0:	(bad)  
  4051c1:	in     eax,dx
  4051c2:	push   esi
  4051c3:	inc    esp
  4051c4:	add    dl,bl
  4051c6:	pop    esp
  4051c7:	xor    BYTE PTR [edi+eax*1],0x1e
  4051cb:	add    eax,0xc4b7ab33
  4051d0:	mov    ebp,esp
  4051d2:	jmp    0x40520c
  4051d4:	data16 sub BYTE PTR [edi+0x44],ah
  4051d8:	jne    0x405171
  4051da:	(bad)  [edi]
  4051dc:	and    BYTE PTR [esi+eiz*1],cl
  4051df:	add    eax,0x2894b48b
  4051e4:	inc    ecx
  4051e5:	jmp    0xc46841c3
  4051ea:	pop    ds
  4051eb:	add    eax,0x2a4b1cff
  4051f0:	inc    ecx
  4051f1:	jmp    0x473c9cd3
  4051f6:	push   ebx
  4051f7:	loope  0x40525d
  4051f9:	test   al,0x60
  4051fb:	add    BYTE PTR [ebp+0x31],0xbf
  4051ff:	mov    eax,ds:0x7ced2eff
  405204:	(bad)  
  405205:	jb     0x405207
	...
  405237:	add    ch,ch
  405239:	mov    eax,0xe4e6cad2
  40523e:	push   esp
  40523f:	adc    eax,0xe503c369
  405244:	jmp    0x4051cf
  405246:	gs test al,0x60
  405249:	add    al,0x45
  40524b:	add    DWORD PTR [ebx-0x72],esp
  40524e:	jns    0x4052bb
  405250:	call   0xf84a:0xdeed75b0
  405257:	jo     0x40528d
  405259:	mov    cl,0xc1
  40525b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40525c:	dec    ebp
  40525d:	jl     0x40525d
  40525f:	bound  edx,QWORD PTR [edx]
  405261:	mov    ebx,0x41cd63e4
  405267:	add    BYTE PTR [edi+0x5ecb9bd],cl
  40526d:	jnp    0x40526e
  40526f:	mov    ecx,DWORD PTR [edi+edi*2]
  405272:	xlat   BYTE PTR ds:[ebx]
  405273:	xor    edi,DWORD PTR [edi+0x6d]
  405276:	xor    eax,edx
  405278:	mov    ecx,0x5fd48cb0
  40527d:	inc    esp
  40527e:	add    BYTE PTR [ebx],al
  405280:	dec    edi
  405281:	jno    0x405288
  405283:	mov    eax,ds:0xff6ecce1
  405288:	(bad)  
  405289:	js     0x40521a
  40528b:	inc    ebp
  40528c:	loop   0x40530a
  40528e:	jge    0x40528c
  405290:	retf   
  405291:	outs   dx,DWORD PTR ds:[esi]
  405292:	push   ds
  405293:	mov    eax,DWORD PTR [esi+edi*2]
  405296:	repz sar DWORD PTR [ecx],0xb0
  40529a:	add    bl,al
	...
  4052cc:	add    BYTE PTR [eax],al
  4052ce:	mov    ebx,0xa6b9cfdf
  4052d3:	jp     0x4052d4
  4052d5:	inc    ecx
  4052d7:	jb     0x405264
  4052d9:	push   ebp
  4052da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052db:	inc    BYTE PTR [esp+edi*8+0x59]
  4052df:	ret    0xc623
  4052e2:	inc    ecx
  4052e3:	mov    BYTE PTR [ebx],0x4
  4052e6:	xchg   edi,eax
  4052e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052e8:	gs inc ecx
  4052ea:	cmp    al,BYTE PTR ds:0xd83ff845
  4052f0:	mov    esp,0x757a851b
  4052f5:	cld    
  4052f6:	mov    ch,0xf0
  4052f8:	test   DWORD PTR [ecx-0x393e8819],0x8bfe7d24
  405302:	stc    
  405303:	ret    0x5c3
  405306:	or     esp,ecx
  405308:	inc    ecx
  405309:	jne    0x4052bc
  40530b:	sub    ch,ah
  40530d:	inc    DWORD PTR ds:0x63c68b79
  405313:	and    ecx,esp
  405315:	xor    ebx,DWORD PTR [esi]
  405317:	ret    0xc1f0
  40531a:	pusha  
  40531b:	mov    ds:0xdd3d7486,al
  405320:	add    eax,DWORD PTR [ebx]
  405322:	es jbe 0x405323
  405325:	aad    0xa2
  405327:	cmp    ecx,edx
  405329:	push   DWORD PTR [esi]
  40532b:	push   0xffffff84
  40532d:	inc    ebp
  40532e:	stos   DWORD PTR es:[edi],eax
  40532f:	xor    al,0x36
  405331:	cld    
	...
  405362:	add    BYTE PTR [eax],al
  405364:	mov    ds:0x958b155f,al
  405369:	and    dh,BYTE PTR [eax+0xa0a0c1]
  40536f:	fsub   DWORD PTR [edx]
  405371:	mov    ecx,0xbe5e01d3
  405376:	push   ds
  405377:	inc    ecx
  405378:	arpl   WORD PTR [ebp+0x5d0623ee],bx
  40537e:	add    eax,DWORD PTR [ecx]
  405380:	es push ss
  405382:	pop    ds
  405383:	inc    ecx
  405384:	arpl   WORD PTR [ebx],sp
  405386:	ds cld 
  405388:	bound  ebp,QWORD PTR [ecx-0x635d9b19]
  40538e:	mov    BYTE PTR [ebp+0x4b],al
  405391:	sahf   
  405392:	(bad)  
  405393:	das    
  405394:	(bad)  
  405395:	pop    ebp
  405396:	add    ecx,ecx
  405398:	and    BYTE PTR [edx-0x6dd31378],bl
  40539e:	or     ebp,eax
  4053a0:	mov    dl,0x25
  4053a2:	add    eax,DWORD PTR [eax]
  4053a4:	loopne 0x4053ba
  4053a6:	mov    ah,0x75
  4053a8:	cmp    eax,0xfb082dff
  4053ad:	xchg   edx,eax
  4053ae:	jp     0x4053b0
  4053b0:	arpl   WORD PTR [ebx-0xb9b8a3d],si
  4053b6:	mov    bl,0xff
  4053b8:	hlt    
  4053b9:	lahf   
  4053ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053bb:	adc    ebx,eax
  4053bd:	add    eax,0xfad30029
  4053c2:	test   al,0x39
  4053c4:	fs ins DWORD PTR es:[edi],dx
  4053c6:	(bad)  
  4053c7:	mov    bl,0x0
	...
  4053f9:	add    ah,dl
  4053fb:	scas   al,BYTE PTR es:[edi]
  4053fc:	ret    0xd808
  4053ff:	add    eax,0xc39a0472
  405404:	in     eax,0x3
  405406:	push   ss
  405407:	jp     0x4053ce
  405409:	xchg   DWORD PTR [edi-0x7608e54b],ebx
  40540f:	sbb    ebp,edi
  405411:	sbb    eax,0x9beb1b62
  405416:	pop    ecx
  405417:	ins    BYTE PTR es:[edi],dx
  405418:	jmp    0x8eee3420
  40541d:	cmp    DWORD PTR [ecx-0x66],esp
  405420:	or     edi,DWORD PTR [edi-0x55]
  405423:	sbb    ebx,ecx
  405425:	and    BYTE PTR [esi],0xb5
  405428:	sbb    DWORD PTR [ebx+ebp*8+0x5b36ea7],ebx
  40542f:	(bad)  
  405430:	lods   al,BYTE PTR ds:[esi]
  405431:	mov    bl,0x61
  405433:	add    eax,0x87734172
  405438:	and    al,0x2a
  40543a:	jmp    0xe901:0xce875b3f
  405441:	aaa    
  405442:	pop    esi
  405443:	jp     0x4053e9
  405445:	dec    DWORD PTR [ecx+0xe]
  405448:	push   0x31
  40544a:	addr16 add eax,0x2fe1fdb4
  405450:	icebp  
  405451:	add    ebp,DWORD PTR [esi+0x9e91209]
  405457:	(bad)  
  405458:	adc    eax,0x7d9d6b39
  40545d:	mov    dl,0x0
	...
  40548f:	add    BYTE PTR [esi+ebp*4],cl
  405492:	push   0xffffffac
  405494:	add    al,0x38
  405496:	jmp    0x405436
  405498:	push   edi
  405499:	jl     0x40549b
  40549b:	lods   al,BYTE PTR ds:[esi]
  40549c:	lods   al,BYTE PTR ds:[esi]
  40549d:	sbb    dl,BYTE PTR [eax]
  40549f:	pop    esp
  4054a0:	call   0xb8a8:0xc73a50b5
  4054a7:	jmp    0xd738d70c
  4054ac:	fwait
  4054ad:	std    
  4054ae:	push   edx
  4054af:	shl    DWORD PTR [ecx-0x3216ff94],0xca
  4054b6:	mov    ebp,DWORD PTR [edx-0x1a3d43d3]
  4054bc:	pusha  
  4054bd:	pop    eax
  4054be:	mov    edi,DWORD PTR [ebp+0x24835615]
  4054c4:	dec    edi
  4054c5:	add    eax,0x408f275
  4054ca:	add    cl,ch
  4054cc:	pusha  
  4054cd:	dec    esi
  4054ce:	pop    ebx
  4054cf:	mov    al,ds:0x720000a6
  4054d4:	push   ebx
  4054d5:	add    DWORD PTR [ebx+0x560e9],edi
  4054db:	add    ebx,DWORD PTR [edi-0x52]
  4054de:	jne    0x4054b9
  4054e0:	or     DWORD PTR [esi+0x74c8f175],ebp
  4054e6:	mov    eax,0xc08260e9
  4054eb:	xlat   BYTE PTR ds:[ebx]
  4054ec:	ins    BYTE PTR es:[edi],dx
  4054ed:	or     al,bh
  4054ef:	add    BYTE PTR [edx+0xc48315],bl
	...
  405525:	add    BYTE PTR [eax+0x5],dh
  405528:	jne    0x405510
  40552a:	int    0x6
  40552c:	add    cl,ch
  40552e:	pusha  
  40552f:	mov    al,ds:0x811e4202
  405534:	ret    
  405535:	(bad)  
  405536:	xchg   ebp,eax
  405537:	mov    esi,0x5260edc2
  40553c:	mov    eax,DWORD PTR ds:0xff4c1df
  405542:	shr    DWORD PTR [edi+edi*8-0x71537900],1
  405549:	test   esi,esi
  40554b:	jne    0x40554c
  40554d:	inc    DWORD PTR [ebp+0x7d]
  405550:	clc    
  405551:	(bad)  
  405552:	std    
  405553:	jbe    0x405555
  405555:	add    dl,bh
  405557:	or     bh,al
  405559:	test   DWORD PTR [esi-0x34000089],edi
  40555f:	or     BYTE PTR [eax],al
  405561:	add    BYTE PTR [edi],ch
  405563:	test   BYTE PTR [eax],al
  405565:	call   FWORD PTR [ebp-0x4d8a008a]
  40556b:	test   DWORD PTR [eax],eax
  40556d:	lea    eax,[edi+0x6d]
  405570:	(bad)  
  405571:	(bad)  
  405572:	std    
  405573:	push   ecx
  405574:	push   0x0
  405576:	push   eax
  405577:	add    DWORD PTR [ebp-0x88017b],ecx
  40557d:	call   FWORD PTR [edx+0xb]
  405580:	add    al,ch
  405582:	outs   dx,BYTE PTR ds:[esi]
  405583:	sbb    DWORD PTR [eax],eax
  405585:	add    cl,bh
  405587:	pop    eax
  405588:	push   DWORD PTR [eax+eax*1+0x0]
	...
  4055bc:	xchg   BYTE PTR [ecx-0x4e798a41],ch
  4055c2:	mov    edi,0x12087eb
  4055c7:	add    BYTE PTR [edx+0x8],bh
  4055ca:	leave  
  4055cb:	ret    0x852
  4055ce:	push   ebp
  4055cf:	mov    ebx,DWORD PTR [esi+0x9fcc482]
  4055d5:	leave  
  4055d6:	fisubr DWORD PTR [edx+0x0]
  4055d9:	jne    0x405650
  4055db:	or     BYTE PTR [edx+0x6dffff2c],dl
  4055e1:	stos   BYTE PTR es:[edi],al
  4055e2:	mov    edi,0x5a09d674
  4055e7:	inc    edi
  4055e9:	scas   eax,DWORD PTR es:[edi]
  4055ea:	out    0x7f,eax
  4055ec:	jge    0x405664
  4055ee:	dec    DWORD PTR [ebx]
  4055f0:	arpl   si,bx
  4055f2:	ss add bh,al
  4055f5:	popa   
  4055f6:	sbb    eax,0x7e9d7900
  4055fb:	inc    ebp
  4055fc:	cld    
  4055fd:	lea    esi,[eax+0x7066b75]
  405603:	mov    eax,0xc0869e63
  405608:	gs push cs
  40560a:	jge    0x405651
  40560c:	ja     0x4055f4
  40560e:	inc    esi
  40560f:	dec    DWORD PTR [esi-0x60]
  405612:	je     0x405615
  405614:	fdiv   st,st(0)
  405616:	dec    DWORD PTR [edx+0x6a045871]
  40561c:	bound  ebx,QWORD PTR [ecx]
  40561e:	inc    esi
  40561f:	inc    DWORD PTR [eax]
	...
  405651:	add    BYTE PTR [ebx],dl
  405653:	jae    0x40568b
  405655:	or     al,0xac
  405657:	unpcklps xmm7,xmm7
  40565a:	cs mov dl,0x9b
  40565d:	mov    eax,0x3bb08abf
  405662:	push   ds
  405663:	scas   al,BYTE PTR es:[edi]
  405664:	xor    eax,0x86a17802
  405669:	fisttp DWORD PTR [edi]
  40566b:	push   edx
  40566c:	jl     0x405631
  40566e:	sbb    BYTE PTR [ebp-0x3b],dh
  405671:	adc    al,0x63
  405673:	or     DWORD PTR [ebp-0x14],edi
  405676:	loop   0x4056d9
  405678:	add    edi,eax
  40567a:	and    dl,BYTE PTR fs:[ebx+ebp*1+0x38]
  40567f:	xlat   BYTE PTR ds:[ebx]
  405680:	dec    ebp
  405681:	dec    esi
  405683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405684:	fwait
  405685:	sbb    BYTE PTR [esp+edi*1-0x50],cl
  405689:	or     esp,DWORD PTR [ebx]
  40568b:	imul   ebp,DWORD PTR [eax],0x35eb996a
  405691:	or     BYTE PTR [ebx-0x59],cl
  405694:	mov    al,0xff
  405696:	sub    al,0xa8
  405698:	ret    
  405699:	jne    0x4056fc
  40569b:	add    eax,0x28e25812
  4056a0:	stc    
  4056a1:	add    ebp,DWORD PTR [ebx+0x5]
  4056a4:	jmp    0xe9adbae2
  4056a9:	sti    
  4056aa:	add    al,0xab
  4056ac:	adc    al,BYTE PTR [eax+ebp*8]
  4056af:	inc    eax
  4056b0:	fstp   DWORD PTR ds:0x86645563
	...
  4056e6:	add    BYTE PTR [eax],al
  4056e8:	arpl   WORD PTR [ebp-0x556c5012],bp
  4056ee:	pop    esp
  4056ef:	cld    
  4056f0:	les    ebp,FWORD PTR [esi]
  4056f2:	xchg   esi,eax
  4056f3:	add    al,0x63
  4056f5:	sub    BYTE PTR [ecx-0x2619ed3],0x38
  4056fc:	pusha  
  4056fd:	inc    esi
  4056fe:	shl    bh,cl
  405700:	sub    al,0x7e
  405702:	adc    al,0x0
  405704:	call   0x13449a20
  405709:	js     0x40576f
  40570b:	add    al,0xab
  40570d:	stos   BYTE PTR es:[edi],al
  40570e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40570f:	push   esp
  405710:	pushf  
  405711:	xor    ch,ch
  405713:	scas   al,BYTE PTR es:[edi]
  405714:	xor    DWORD PTR ds:0x1527dd31,edx
  40571a:	push   0x31
  40571c:	jae    0x405723
  40571e:	cld    
  40571f:	add    ah,BYTE PTR [eax]
  405721:	sahf   
  405722:	in     eax,0x88
  405724:	cwde   
  405725:	xor    DWORD PTR [eax+0x7b],edx
  405728:	mov    al,ds:0x57c2a04e
  40572d:	add    eax,0x864f7abc
  405732:	and    eax,0x55f6acac
  405737:	sbb    ah,BYTE PTR [ebx+0x52]
  40573a:	dec    esi
  40573b:	cmp    DWORD PTR [ebx-0x63],ebx
  40573e:	sbb    cl,bl
  405740:	cmp    al,0xaa
  405742:	es dec ecx
  405744:	aaa    
  405745:	add    eax,0x560e900
  40574a:	mov    edx,DWORD PTR [eax+eax*1+0x0]
	...
  40577d:	add    BYTE PTR [eax],ch
  40577f:	jg     0x405793
  405781:	je     0x40572d
  405783:	lods   eax,DWORD PTR ds:[esi]
  405784:	push   eax
  405785:	xchg   ebx,eax
  405786:	pop    esp
  405787:	js     0x4057ce
  405789:	adc    eax,0xe175aab7
  40578e:	mov    ch,0x56
  405790:	or     al,0xae
  405792:	out    0x27,eax
  405794:	cld    
  405795:	in     al,dx
  405796:	cli    
  405797:	clc    
  405798:	or     DWORD PTR [ebp-0x16],edi
  40579b:	xchg   BYTE PTR [ebp-0xf],bh
  40579e:	pusha  
  40579f:	xor    cl,cl
  4057a1:	sbb    ah,BYTE PTR [edi-0x628dfa63]
  4057a7:	test   eax,eax
  4057a9:	jmp    0x5060:0xe5c2bc1d
  4057b0:	mov    edx,ebp
  4057b2:	loope  0x405774
  4057b4:	hlt    
  4057b5:	sbb    cl,BYTE PTR [ebx*1+0x560f398]
  4057bc:	call   0xffea549f
  4057c1:	jo     0x4057ee
  4057c3:	test   eax,0x54db248d
  4057c8:	call   0xffe9f1a2
  4057cd:	ficomp DWORD PTR [ecx+0x79131e1e]
  4057d3:	and    DWORD PTR [eax],eax
  4057d5:	and    DWORD PTR [eax+0x5],0xffffffff
  4057d9:	cld    
  4057da:	mov    ah,0xa9
  4057dc:	jne    0x4057bf
  4057de:	enter  0xfe80,0x66
	...
  405812:	add    BYTE PTR [eax],al
  405814:	or     eax,0xdceec083
  405819:	cmc    
  40581a:	add    cl,ch
  40581c:	pusha  
  40581d:	test   al,0x75
  40581f:	push   ebp
  405820:	call   0xa541339e
  405825:	push   edi
  405826:	cmp    eax,0x4a000
  40582b:	jbe    0x40586c
  40582d:	mov    bl,BYTE PTR [ecx+eax*1]
  405830:	cmp    al,BYTE PTR ds:0x8c7e75ff
  405836:	pop    edx
  405837:	push   DWORD PTR [ebp+0x57]
  40583a:	test   eax,eax
  40583c:	out    dx,al
  40583d:	sar    bh,0x75
  405840:	outs   dx,BYTE PTR ds:[esi]
  405841:	mov    WORD PTR [ebp-0x74a89a23],cs
  405847:	push   ebp
  405848:	out    dx,al
  405849:	adc    ch,BYTE PTR cs:[edx-0x6]
  40584d:	or     al,0x34
  40584f:	and    edx,edi
  405851:	add    al,0xff
  405853:	jne    0x40581b
  405855:	pop    edx
  405856:	jne    0x40584c
  405858:	mov    ch,0x53
  40585a:	or     al,0xc7
  40585c:	jg     0x4058b7
  40585e:	add    BYTE PTR [eax],al
  405860:	mov    edx,0x51ce6804
  405865:	inc    esp
  405866:	add    bh,bh
  405868:	outs   dx,DWORD PTR ds:[esi]
  405869:	jne    0x405853
  40586b:	sbb    DWORD PTR [ecx+eax*1],ebp
  40586e:	add    BYTE PTR [ebx-0x3f],dl
  405871:	les    esi,FWORD PTR [esi+esi*1+0x11]
  405875:	pop    ecx
  405876:	push   0xce
	...
  4058a7:	add    BYTE PTR [eax],al
  4058a9:	add    BYTE PTR [ecx+0x6ae80043],dh
  4058af:	sub    eax,0x5c790000
  4058b4:	push   edi
  4058b5:	inc    edi
  4058b6:	icebp  
  4058b7:	mov    ecx,0x49b94b9
  4058bc:	add    BYTE PTR [eax-0x47518979],dh
  4058c2:	push   cs
  4058c3:	adc    al,0x0
  4058c5:	add    BYTE PTR [ecx-0x3c],dh
  4058c8:	mov    BYTE PTR [edi-0x4b],0x1
  4058cc:	push   edi
  4058cd:	push   ebx
  4058ce:	arpl   WORD PTR [esi-0x4f],ax
  4058d1:	mov    ch,0x63
  4058d3:	sahf   
  4058d4:	jp     0x40591b
  4058d6:	cmp    ebx,DWORD PTR [edi-0x3b]
  4058d9:	inc    edi
  4058da:	xor    al,0x99
  4058dc:	dec    esp
  4058dd:	pop    ebx
  4058de:	mov    ebx,0x6340d910
  4058e3:	xlat   BYTE PTR ds:[ebx]
  4058e4:	ss cld 
  4058e6:	or     ebp,esi
  4058e8:	jbe    0x4058ea
  4058ea:	arpl   WORD PTR [ebx-0x8],bp
  4058ed:	mov    edi,0xf8785a97
  4058f2:	jnp    0x4058cc
  4058f4:	fadd   DWORD PTR [eax+0x63]
  4058f7:	push   ss
  4058f8:	in     eax,0xb3
  4058fa:	arpl   WORD PTR [esi+0x5794f800],bx
  405900:	js     0x4058e1
  405902:	stos   BYTE PTR es:[edi],al
  405903:	push   ecx
  405904:	adc    eax,DWORD PTR [eax]
  405906:	arpl   WORD PTR [esi+0x6605f1fe],cx
  40590c:	xchg   edi,eax
  40590d:	adc    DWORD PTR [eax],eax
	...
  40593f:	add    BYTE PTR [ebx-0x62],ah
  405942:	fadd   st,st(0)
  405944:	popf   
  405945:	fisubr WORD PTR [eax+eax*1+0x679c0b14]
  40594c:	mov    cl,0x66
  40594e:	lods   al,BYTE PTR ds:[esi]
  40594f:	mov    edx,DWORD PTR [esi]
  405951:	into   
  405952:	clc    
  405953:	shr    DWORD PTR [edi],1
  405955:	mov    ds:0x9788027a,al
  40595a:	push   ebx
  40595b:	call   0xffecd4f2
  405960:	sub    al,0x58
  405962:	inc    esp
  405963:	call   DWORD PTR [esi-0x29]
  405966:	dec    eax
  405967:	push   esi
  405969:	sub    DWORD PTR [ebx-0x53d969db],ebx
  40596f:	sub    esi,0x35
  405972:	add    esi,DWORD PTR [edi+0x5c]
  405975:	pop    edi
  405976:	inc    esi
  405977:	clc    
  405978:	arpl   WORD PTR ds:0xa66363e9,ax
  40597e:	aam    0xab
  405980:	dec    esp
  405981:	xor    DWORD PTR [ebp-0x54],ebx
  405984:	into   
  405985:	std    
  405986:	inc    eax
  405987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40598a:	inc    esi
  40598b:	lods   al,BYTE PTR ds:[esi]
  40598c:	scas   al,BYTE PTR es:[edi]
  40598d:	mov    cl,0x51
  40598f:	xchg   BYTE PTR [ecx],cl
  405991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405992:	ss clc 
  405994:	in     al,0x30
  405996:	jmp    0x405930
  405998:	js     0x405994
  40599a:	sub    BYTE PTR [edi],dh
  40599c:	ins    BYTE PTR es:[edi],dx
  40599d:	jp     0x405953
  40599f:	mov    bh,0xd8
  4059a1:	adc    edx,DWORD PTR [esi]
  4059a3:	add    BYTE PTR ss:[eax],al
	...
  4059d6:	push   edi
  4059d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059d8:	xchg   esp,eax
  4059d9:	mov    bh,0xfc
  4059db:	push   ebx
  4059dc:	mov    ebp,0xe42e2386
  4059e1:	push   0x3e90562
  4059e6:	fcom   DWORD PTR [eax-0xb]
  4059e9:	ja     0x405a5c
  4059eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059ec:	pop    esp
  4059ed:	mov    al,0xd4
  4059ef:	push   ebx
  4059f0:	icebp  
  4059f1:	stos   BYTE PTR es:[edi],al
  4059f2:	push   esi
  4059f3:	test   eax,0xa6c17fc1
  4059f8:	into   
  4059f9:	jg     0x40599b
  4059fb:	inc    esi
  4059fc:	and    bh,BYTE PTR [ebp+0x50e8f9a1]
  405a02:	fcomp  DWORD PTR [ecx+0x4ef3c06a]
  405a08:	sbb    bl,bh
  405a0a:	mov    ecx,0x94e3e91d
  405a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a10:	xchg   ecx,eax
  405a11:	add    BYTE PTR [ecx+0x1e7d96a6],0xa9
  405a18:	add    DWORD PTR [ebx+eax*2],eax
  405a1b:	add    eax,0xa2fa9be9
  405a20:	jle    0x4059cd
  405a22:	fiadd  DWORD PTR [eax+0x0]
  405a25:	cmp    eax,0xe9200547
  405a2a:	pusha  
  405a2b:	popf   
  405a2c:	ins    BYTE PTR es:[edi],dx
  405a2d:	dec    ebx
  405a2e:	or     BYTE PTR [esi+0x78c4a489],ah
  405a34:	jge    0x405a5f
  405a36:	mov    dh,0xe9
  405a38:	(bad)  
  405a39:	call   0x405a3e
	...
  405a6a:	add    BYTE PTR [eax],al
  405a6c:	pusha  
  405a6d:	repnz mov edi,0x45be953a
  405a73:	sub    DWORD PTR [ebx],edi
  405a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a76:	(bad)  
  405a77:	jmp    0x2f149a9d
  405a7c:	push   0xa22e0005
  405a81:	mov    ch,0xff
  405a83:	(bad)  
  405a84:	pusha  
  405a85:	add    eax,0x75bc9cff
  405a8a:	inc    ebp
  405a8b:	cmp    eax,ecx
  405a8d:	das    
  405a8e:	mov    ah,0x76
  405a90:	mov    ds:0x20a48d99,al
  405a95:	push   ebp
  405a96:	push   0x800560e9
  405a9b:	and    DWORD PTR [eax-0x5a],0x75
  405a9f:	icebp  
  405aa0:	clc    
  405aa1:	bound  esi,QWORD PTR [ecx+ebp*8+0x5dbffa60]
  405aa8:	popa   
  405aa9:	cmp    BYTE PTR [ebp-0x47],0x60
  405aad:	xor    BYTE PTR ds:0x4fad0,al
  405ab3:	jmp    0xb6f09a59
  405ab8:	pop    ecx
  405ab9:	add    eax,0x75235c00
  405abe:	push   eax
  405abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ac0:	push   ebx
  405ac1:	imul   ebp,DWORD PTR [eax-0x17],0x64800560
  405ac8:	and    eax,ebp
  405aca:	push   eax
  405acb:	or     DWORD PTR [ebx+0x71],0x0
	...
  405b02:	mov    ah,BYTE PTR [esi-0x77788a41]
  405b08:	test   eax,0x8b017a00
  405b0d:	inc    ebp
  405b0e:	xchg   esi,eax
  405b0f:	mov    BYTE PTR [eax],0x0
  405b12:	iret   
  405b13:	in     eax,dx
  405b14:	mov    edi,0x96eb9
  405b19:	add    BYTE PTR [ecx-0x37],ch
  405b1c:	rep stos BYTE PTR es:[edi],al
  405b1e:	test   DWORD PTR [ebp-0x40],eax
  405b21:	cmp    al,0x4a
  405b23:	or     DWORD PTR [eax],eax
  405b25:	push   edi
  405b27:	xor    al,0x8f
  405b29:	inc    ebp
  405b2a:	sahf   
  405b2b:	mov    DWORD PTR [ebp-0x2c],0xf4d
  405b32:	inc    ebp
  405b33:	inc    ebp
  405b34:	lock dec DWORD PTR ds:0xb78d0009
  405b3b:	enter  0x6a50,0xa
  405b3f:	add    eax,DWORD PTR [eax]
  405b41:	push   DWORD PTR [edi+0x2c]
  405b44:	call   0x48917a
  405b49:	or     edi,DWORD PTR [edx]
  405b4b:	hlt    
  405b4c:	add    eax,0xb84f83
  405b51:	jne    0x405b1b
  405b53:	and    DWORD PTR [eax-0x1],0x75ff6d37
  405b5a:	out    0x1,al
  405b5c:	call   0xff49e68c
  405b61:	jne    0x405b41
  405b63:	or     edx,0xb3
	...
  405b95:	add    BYTE PTR [eax],al
  405b97:	add    BYTE PTR [edx-0x753b7cf8],bh
  405b9d:	popf   
  405b9e:	mov    dh,0x45
  405ba0:	repnz cmp DWORD PTR [edx+0x0],ebp
  405ba4:	mov    ebp,0xdce8fbf4
  405ba9:	jae    0x405baa
  405bab:	jmp    DWORD PTR [ebx-0x59]
  405bae:	ret    
  405baf:	jne    0x405c12
  405bb1:	xchg   edi,ebp
  405bb3:	mov    BYTE PTR [esi],bl
  405bb5:	inc    esi
  405bb6:	test   eax,0x2576af75
  405bbb:	mov    dl,0x63
  405bbd:	scas   al,BYTE PTR es:[edi]
  405bbe:	push   ebx
  405bbf:	call   esi
  405bc1:	repnz test al,0x75
  405bc4:	sbb    esi,DWORD PTR [esi]
  405bc6:	dec    edi
  405bc7:	sti    
  405bc8:	dec    esp
  405bc9:	inc    ebx
  405bca:	std    
  405bcb:	mov    edi,0x109cb0ce
  405bd0:	cmp    al,0xb9
  405bd2:	adc    edi,edi
  405bd4:	scas   al,BYTE PTR es:[edi]
  405bd5:	call   0xfcef:0x35eb75a8
  405bdc:	and    al,0xdb
  405bde:	jl     0x405bb8
  405be0:	sbb    al,0x59
  405be2:	imul   ebp,eax,0x66
  405be5:	inc    edx
  405be6:	add    al,0x0
  405be8:	or     al,0x79
  405bea:	outs   dx,DWORD PTR ds:[esi]
  405beb:	call   0xffe96926
  405bf0:	cld    
  405bf1:	js     0x405c5a
  405bf3:	call   0xffe96936
  405bf8:	in     al,dx
  405bf9:	sbb    BYTE PTR [edi+0xe8],ah
	...
  405c2b:	add    BYTE PTR [eax],al
  405c2d:	add    BYTE PTR [esi+0xd],al
  405c30:	test   eax,0x4ceee8ff
  405c35:	pop    edi
  405c36:	stos   BYTE PTR es:[edi],al
  405c37:	outs   dx,DWORD PTR ds:[esi]
  405c38:	idiv   edi
  405c3a:	aaa    
  405c3b:	pop    ss
  405c3c:	xchg   edi,eax
  405c3d:	sbb    DWORD PTR [edi+0x6f457cb9],0xffffffa7
  405c44:	ret    
  405c45:	je     0x405ca4
  405c47:	jae    0x405c4c
  405c49:	add    BYTE PTR [ebx-0x52],ah
  405c4c:	add    eax,edi
  405c4e:	push   ds
  405c4f:	pop    edx
  405c50:	add    eax,DWORD PTR [eax]
  405c52:	arpl   WORD PTR [esi+0x4974576],bp
  405c58:	cmp    DWORD PTR [ecx+0x2e9e1116],ebp
  405c5e:	pop    ebx
  405c5f:	lods   eax,DWORD PTR ds:[esi]
  405c60:	add    BYTE PTR [edx+0x266aa37c],ch
  405c66:	ja     0x405c6c
  405c68:	std    
  405c69:	adc    cl,bh
  405c6b:	add    al,0x7e
  405c6d:	cs push edi
  405c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c70:	cld    
  405c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c72:	dec    ebx
  405c73:	cmp    al,0x6f
  405c75:	test   al,0x54
  405c77:	ss cs dec di
  405c7b:	scas   al,BYTE PTR es:[edi]
  405c7c:	cmp    DWORD PTR [ebx-0x454e5cbc],esp
  405c82:	and    DWORD PTR [esi],ecx
  405c84:	jmp    0x6af244d7
  405c89:	mov    edi,0x3e262c2f
  405c8e:	daa    
  405c8f:	add    eax,0x21e9
	...
  405cc4:	and    al,0x49
  405cc6:	das    
  405cc7:	or     DWORD PTR [ebx+0x2f],esp
  405cca:	in     eax,dx
  405ccb:	jbe    0x405c73
  405ccd:	mov    eax,ds:0x5e31bb9
  405cd2:	jmp    0xee2e7da
  405cd7:	add    esp,DWORD PTR [ebx-0x5e]
  405cda:	jl     0x405cd7
  405cdc:	add    al,0x75
  405cde:	cmp    al,BYTE PTR [ebx]
  405ce0:	arpl   sp,cx
  405ce2:	sub    edi,edi
  405ce4:	fdivr  QWORD PTR [ecx]
  405ce6:	bound  edx,QWORD PTR [edi+0x4f95c9e0]
  405cec:	xor    dl,cl
  405cee:	and    al,0x58
  405cf0:	arpl   WORD PTR ds:0xbe7003e9,ax
  405cf6:	inc    ecx
  405cf7:	add    al,0x53
  405cf9:	add    eax,0xa5ca9be9
  405cfe:	mov    esi,0x48daa7
  405d03:	test   eax,0xe910057f
  405d08:	pusha  
  405d09:	lods   eax,DWORD PTR ds:[esi]
  405d0a:	mov    WORD PTR [ecx+0x2489a2c4],cs
  405d10:	imul   DWORD PTR [eax+eax*1]
  405d13:	stc    
  405d14:	pusha  
  405d15:	add    eax,0xa2bf0ee8
  405d1a:	push   DWORD PTR [eax+0x22]
  405d1d:	popa   
  405d1e:	(bad)  
  405d1f:	cld    
  405d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d21:	pop    esp
  405d22:	cmp    al,0xe9
  405d24:	pusha  
  405d25:	add    eax,0xa933
	...
  405d5a:	adc    BYTE PTR [edi-0x39],ch
  405d5d:	lods   al,BYTE PTR ds:[esi]
  405d5e:	or     al,0xe1
  405d60:	(bad)  
  405d61:	call   0x29b5ffc6
  405d66:	mov    ah,0x48
  405d68:	aam    0x4e
  405d6a:	jb     0x405dc9
  405d6c:	(bad)  
  405d6d:	lods   al,BYTE PTR ds:[esi]
  405d6e:	lock leave 
  405d70:	inc    ebp
  405d71:	and    esp,edi
  405d73:	adc    DWORD PTR [eax],eax
  405d75:	jmp    0x2f34a557
  405d7a:	or     al,0xa2
  405d7c:	push   DWORD PTR [edx+eiz*4-0x37]
  405d80:	push   eax
  405d81:	xchg   ecx,eax
  405d82:	pusha  
  405d83:	add    eax,0x5596900
  405d88:	call   DWORD PTR [eax+edi*8+0x673bb5a9]
  405d8f:	add    eax,0xb33290b
  405d94:	xor    DWORD PTR [esp+ebp*4+0x4],0x75
  405d99:	in     al,0xf7
  405d9b:	lahf   
  405d9c:	add    cl,ch
  405d9e:	pusha  
  405d9f:	retf   0x9945
  405da2:	std    
  405da3:	adc    DWORD PTR [eax],eax
  405da5:	jmp    0x39f0a5e5
  405daa:	cld    
  405dab:	pop    ss
  405dac:	mov    esp,0x91200
  405db1:	add    BYTE PTR [edx],bh
  405db3:	sbb    eax,0x817ac445
  405db8:	nop
  405db9:	mov    dl,0x8a
  405dbb:	add    eax,0xc00b
	...
  405df0:	outs   dx,DWORD PTR ds:[esi]
  405df1:	add    al,0xe9
  405df3:	fdivr  DWORD PTR [edx+0x5]
  405df6:	add    BYTE PTR [ebx+0xc6314f],cl
  405dfc:	mov    bl,BYTE PTR [edi*2-0x55dc3c]
  405e03:	(bad)  
  405e04:	jp     0x405d9c
  405e06:	mov    edi,0x455fa0f3
  405e0b:	les    eax,FWORD PTR [esi]
  405e0d:	add    eax,0xd5c50000
  405e12:	mov    bh,0x8f
  405e14:	call   DWORD PTR [edi+eax*8+0x45]
  405e18:	jb     0x405e81
  405e1a:	str    WORD PTR [edx+0x60]
  405e1e:	inc    ebp
  405e1f:	hlt    
  405e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e21:	xchg   edi,eax
  405e22:	(bad)  
  405e23:	push   DWORD PTR [edi+0x2050c445]
  405e29:	add    eax,0xd545006a
  405e2e:	mov    ebx,0x16bee8
  405e33:	add    BYTE PTR [ecx],dl
  405e35:	lds    esi,FWORD PTR [esi+eax*1-0x77]
  405e39:	in     eax,dx
  405e3a:	rol    DWORD PTR [eax],cl
  405e3c:	iret   
  405e3d:	add    eax,0x4fa8ce9
  405e42:	add    bh,bh
  405e44:	outs   dx,DWORD PTR ds:[esi]
  405e45:	hlt    
  405e46:	(bad)  
  405e47:	jne    0x405dd3
  405e49:	addr16 jne 0x405e04
  405e4c:	loop   0x405e1c
  405e4e:	sub    al,BYTE PTR [ecx-0x46]
  405e51:	imul   esi,DWORD PTR [ebp-0x44],0x0
	...
  405e84:	add    BYTE PTR [eax],al
  405e86:	mov    dl,0xd2
  405e88:	mov    cl,0x0
  405e8a:	arpl   WORD PTR [esi-0x40b03b80],bp
  405e90:	ins    BYTE PTR es:[edi],dx
  405e91:	inc    ebp
  405e92:	(bad)  
  405e93:	(bad)  
  405e94:	sbb    DWORD PTR [eax],eax
  405e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e97:	fld    st(3)
  405e99:	call   0xffe5b536
  405e9e:	push   0x78022f6e
  405ea3:	dec    eax
  405ea4:	jnp    0x405eeb
  405ea6:	iret   
  405ea7:	jg     0x405ed8
  405ea9:	mov    ah,0x8b
  405eab:	dec    ebp
  405eac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ead:	push   DWORD PTR [edi+ecx*4+0x2f]
  405eb1:	mov    esp,0x73f67b
  405eb6:	arpl   si,di
  405eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eb9:	jne    0x405eda
  405ebb:	pop    ss
  405ebc:	das    
  405ebd:	mov    ah,0x4b
  405ebf:	hlt    
  405ec0:	stos   BYTE PTR es:[edi],al
  405ec1:	dec    DWORD PTR [ebx+edx*4-0x3d]
  405ec5:	jne    0x405f28
  405ec7:	xor    esi,ebx
  405ec9:	cmp    BYTE PTR [esi+0x4f74039e],0x4f
  405ed0:	das    
  405ed1:	adc    BYTE PTR [ecx+eiz*2],ch
  405ed4:	idiv   esi
  405ed6:	scas   al,BYTE PTR es:[edi]
  405ed7:	sbb    bl,BYTE PTR [eax+eax*2+0xba4d71a]
  405ede:	and    ebx,DWORD PTR [ecx+0x1]
  405ee1:	jmp    0x405f57
  405ee3:	adc    ecx,esp
  405ee5:	or     ebp,DWORD PTR [eax]
  405ee7:	jp     0x405efb
  405ee9:	lea    eax,[eax]
	...
  405f1b:	add    BYTE PTR [esi+0x6eff544a],ah
  405f21:	call   0xfb0a:0xf5b775a4
  405f28:	in     al,0x9e
  405f2a:	js     0x405f04
  405f2c:	fsub   QWORD PTR [eax]
  405f2e:	outs   dx,DWORD PTR ds:[esi]
  405f2f:	call   0x443c06
  405f34:	int3   
  405f35:	add    al,0x5c
  405f37:	les    edi,FWORD PTR [ebx-0x435b420b]
  405f3d:	lahf   
  405f3e:	pop    esp
  405f3f:	push   0xa4ae0dcb
  405f44:	lods   al,BYTE PTR ds:[esi]
  405f45:	lahf   
  405f46:	cmp    al,0x6c
  405f48:	mov    ebx,0x9ca49e05
  405f4d:	xor    DWORD PTR [eax+ebx*2],0x63
  405f51:	sbb    ecx,esp
  405f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f54:	push   ss
  405f55:	jno    0x405ee8
  405f57:	mov    al,0xa5
  405f59:	lahf   
  405f5a:	sahf   
  405f5b:	js     0x405efd
  405f5d:	cmp    esi,DWORD PTR [esi]
  405f5f:	mov    ebx,0x4ee8f4a1
  405f64:	fdiv   DWORD PTR [eax+0x336bbf6a]
  405f6a:	ror    al,cl
  405f6c:	loopne 0x405f8e
  405f6e:	in     eax,0x3
  405f70:	iret   
  405f71:	dec    edi
  405f72:	push   0x26
  405f74:	jae    0x405f7b
  405f76:	fnstsw WORD PTR [ebx]
  405f78:	(bad)  
  405f79:	dec    eax
  405f7a:	pop    ebp
  405f7b:	push   ebx
  405f7c:	cmp    al,0x19
  405f7e:	in     eax,0x9b
	...
  405fb0:	add    BYTE PTR [eax],al
  405fb2:	das    
  405fb3:	push   esi
  405fb4:	jmp    0xc20645bc
  405fb9:	repz and eax,0xe79bed19
  405fbf:	mov    bh,0x36
  405fc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fc2:	jmp    0x11a1:0x96a43148
  405fc9:	data16 mov ah,0x5
  405fcc:	jmp    0xf05a1cc9
  405fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fd2:	outs   dx,BYTE PTR ds:[esi]
  405fd3:	cmc    
  405fd4:	or     eax,0x635eb2e
  405fd9:	cs pop ebx
  405fdb:	lods   eax,DWORD PTR ds:[esi]
  405fdc:	jmp    0xa862:0x9edca5
  405fe3:	sahf   
  405fe4:	jne    0x405fd3
  405fe6:	jmp    0x612a0f52
  405feb:	sahf   
  405fec:	jne    0x405fdb
  405fee:	or     BYTE PTR [esi],bh
  405ff0:	fcom   st(6)
  405ff2:	add    BYTE PTR [ebx-0x3c61cd3d],cl
  405ff8:	or     al,0xe9
  405ffa:	imul   ecx,DWORD PTR [edx+0x15ab68ec],0xfffffffe
  406001:	mov    dh,0xc0
  406003:	nop
  406004:	test   DWORD PTR [ebx],edi
  406006:	rcr    DWORD PTR [esi+0x43739ff],0x1
  40600d:	jmp    0x58a40d72
  406012:	pop    edi
  406013:	add    eax,0xaac9
	...
  406048:	sub    cl,BYTE PTR [edx+0xd426aec]
  40604e:	add    ch,dh
  406050:	popa   
  406051:	cmp    BYTE PTR [ebp-0x27],0x60
  406055:	sbb    DWORD PTR [ecx],ebx
  406057:	outs   dx,BYTE PTR ds:[esi]
  406058:	push   0xfffffff9
  40605a:	(bad)  
  40605b:	fcomp  QWORD PTR [eax-0x53]
  40605e:	fiadd  DWORD PTR [ebx+0x0]
  406061:	sahf   
  406062:	(bad)  
  406063:	fdiv   QWORD PTR [eax]
  406065:	lahf   
  406066:	jne    0x406045
  406068:	add    DWORD PTR [eax],ebx
  40606a:	or     BYTE PTR [ecx+0x5d],dl
  40606d:	mov    edx,0xc32e3eff
  406072:	adc    cl,ch
  406074:	pop    ebx
  406075:	mov    ch,ah
  406077:	push   0x42
  406079:	or     eax,0x83049d00
  40607e:	jge    0x40606d
  406080:	pusha  
  406081:	sbb    DWORD PTR [esi],edx
  406083:	push   ss
  406084:	pop    edx
  406085:	cmc    
  406086:	(bad)  
  406087:	xchg   esp,eax
  406088:	pop    eax
  406089:	lods   eax,DWORD PTR ds:[esi]
  40608a:	scas   al,BYTE PTR es:[edi]
  40608b:	add    BYTE PTR [eax+0x62],al
  40608e:	(bad)  
  40608f:	call   DWORD PTR [edi+0xe]
  406092:	push   DWORD PTR [ebp-0x3e]
  406095:	imul   eax,DWORD PTR ds:0xc962bddb,0x5501cec2
  40609f:	mov    ebp,DWORD PTR [esi-0x720f3b7a]
  4060a5:	cld    
  4060a6:	or     ebp,eax
  4060a8:	jge    0x406110
  4060aa:	(bad)  
  4060ab:	inc    DWORD PTR [eax]
	...
  4060dd:	add    BYTE PTR [ebx],dh
  4060df:	dec    ebp
  4060e0:	or     al,0x83
  4060e2:	pop    edi
  4060e3:	cmc    
  4060e4:	push   DWORD PTR [ebx+0x74]
  4060e7:	bound  esi,QWORD PTR [ebp+0xc]
  4060ea:	mov    ds:0xbdffe2ce,al
  4060ef:	push   cs
  4060f0:	shl    BYTE PTR [eax+ecx*2+0x74],0x45
  4060f5:	lock cmp ah,BYTE PTR [edx+0x75]
  4060f9:	or     al,0xe2
  4060fb:	xchg   ebx,esp
  4060fd:	(bad)  
  4060fe:	fisttp QWORD PTR [esi]
  406100:	shl    BYTE PTR [eax+ebx*1-0x7e],0x7d
  406105:	cld    
  406106:	dec    edx
  406107:	or     DWORD PTR [eax],edx
  406109:	add    BYTE PTR [ecx-0x57],cl
  40610c:	(bad)  
  40610d:	jne    0x4060cd
  40610f:	addr16 jne 0x40610a
  406112:	xchg   edx,eax
  406113:	popf   
  406114:	out    0xff,al
  406116:	lea    ecx,[ebx]
  406118:	shl    BYTE PTR [ebp+0x2b],0x68
  40611c:	jne    0x40612e
  40611e:	popf   
  40611f:	std    
  406120:	sti    
  406121:	call   edi
  406123:	cmp    bh,0x75
  406126:	add    dh,BYTE PTR [ecx+0x4f]
  406129:	(bad)  
  40612a:	cmp    eax,0x6a458d67
  40612f:	fsub   st,st(7)
  406131:	loopne 0x40619c
  406133:	addr16 (bad) 
  406135:	jmp    DWORD PTR [ebx+0x79]
  406138:	psubsb mm7,QWORD PTR [edx+0x1affa1e9]
  40613f:	icebp  
  406140:	push   cs
	...
  406171:	add    BYTE PTR [eax],al
  406173:	add    BYTE PTR [esi],dh
  406175:	pop    ss
  406176:	scas   eax,DWORD PTR es:[edi]
  406177:	sbb    DWORD PTR [edi+0x5f75a19e],0x6
  40617e:	mov    cl,0xe2
  406180:	les    esp,FWORD PTR [ebx+0x2f6f458b]
  406186:	pop    ds
  406187:	or     al,0x63
  406189:	cmp    cl,BYTE PTR [ecx-0x1]
  40618c:	ss mov edx,0xc3c15aab
  406192:	mov    eax,ds:0xd4d2a30b
  406197:	mov    WORD PTR [esi],ds
  406199:	pop    esi
  40619a:	xor    al,0xff
  40619c:	push   ss
  40619d:	mov    edx,0x638011ab
  4061a2:	mov    eax,ds:0xe4f2a30b
  4061a7:	xor    dh,0x71
  4061aa:	add    al,0x0
  4061ac:	push   ebx
  4061ad:	scas   al,BYTE PTR es:[edi]
  4061ae:	adc    al,0x11
  4061b0:	fs cdq 
  4061b2:	repz (bad) 
  4061b4:	(bad)  
  4061b5:	sbb    ah,BYTE PTR [ecx+0x17135b75]
  4061bb:	or     BYTE PTR [ebx],bh
  4061bd:	sbb    DWORD PTR [edx+0x471144ff],esp
  4061c3:	lock xchg ebx,eax
  4061c5:	ss and ah,bl
  4061c8:	xor    al,0x33
  4061ca:	mov    eax,ds:0x49465f75
  4061cf:	frstor [ebx+eax*2]
  4061d2:	retf   
  4061d3:	ret    0xae6f
  4061d6:	mov    eax,DWORD PTR ss:[eax]
	...
  406209:	add    BYTE PTR [edi],al
  40620b:	das    
  40620c:	enter  0xb0f0,0x7
  406210:	mov    ebp,0xf1058eff
  406215:	stos   DWORD PTR es:[edi],eax
  406216:	jmp    0xe141:0xeaa11ea6
  40621d:	test   BYTE PTR [esi+0xd],ch
  406220:	jmp    0x7cdcff3c
  406225:	or     ecx,ebx
  406227:	xchg   ecx,eax
  406228:	or     BYTE PTR [ecx+0x18290fd4],ah
  40622e:	xchg   ecx,eax
  40622f:	mov    ah,BYTE PTR [ebx+edx*4+0xc5c9c33]
  406236:	retf   
  406237:	push   0xfb4a0cb
  40623c:	test   eax,0x4c868117
  406241:	mov    al,ds:0x3d90563
  406246:	adc    ch,dh
  406248:	mov    ebp,0x3c9b9716
  40624d:	pushf  
  40624e:	jnp    0x40622b
  406250:	(bad)  
  406251:	mov    al,ds:0x17a90f84
  406256:	bound  ecx,QWORD PTR [eax+0x6c]
  406259:	inc    esi
  40625a:	jae    0x406290
  40625c:	cmp    ebp,0xa08e9b81
  406262:	out    dx,al
  406263:	or     al,0x91
  406265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406266:	aas    
  406267:	fwait
  406268:	jle    0x4061f6
  40626a:	and    BYTE PTR [edi],bh
  40626c:	mov    al,ds:0xc5
	...
  40629d:	add    BYTE PTR [eax],al
  40629f:	add    BYTE PTR [edi+0x5],ah
  4062a2:	adc    al,0x8d
  4062a4:	aaa    
  4062a5:	test   DWORD PTR ds:0x5e9b3d57,ebp
  4062ab:	enter  0x5dde,0x57
  4062af:	mov    al,ds:0x3e9062c
  4062b4:	arpl   WORD PTR [esi-0x3a97f054],cx
  4062ba:	mov    ch,0x6
  4062bc:	jecxz  0x40629b
  4062be:	(bad)  
  4062bf:	call   0xb2296339
  4062c4:	popa   
  4062c5:	add    eax,0x9552600
  4062ca:	call   0xffdb2e17
  4062cf:	loop   0x4062f1
  4062d1:	adc    DWORD PTR [edi],ecx
  4062d3:	sbb    ecx,0x3e940e9
  4062d9:	adc    DWORD PTR [ecx+edx*1],ecx
  4062dc:	ret    0xffba
  4062df:	idiv   al
  4062e1:	or     BYTE PTR [eax+0x5f],ch
  4062e4:	mov    ah,0x45
  4062e6:	add    dh,ah
  4062e8:	pop    edx
  4062e9:	or     eax,ebp
  4062eb:	push   cs
  4062ec:	call   FWORD PTR [edx+0x5dda60ff]
  4062f2:	dec    dh
  4062f4:	les    ebp,FWORD PTR ds:0x560e83e
  4062fa:	lea    esp,[ecx+eiz*4-0x65]
  4062fe:	push   DWORD PTR [esi-0x725852a9]
	...
  406334:	add    BYTE PTR [eax],al
  406336:	in     al,0x9a
  406338:	lea    ebp,[ecx+eiz*4-0x65]
  40633c:	call   FWORD PTR [esi+0x51b59a2f]
  406342:	int    0x9a
  406344:	inc    DWORD PTR [ecx-0x16ff9740]
  40634a:	out    dx,eax
  40634b:	jg     0x406309
  40634d:	jg     0x406343
  40634f:	cdq    
  406350:	inc    eax
  406351:	out    0xe4,al
  406353:	inc    BYTE PTR [eax]
  406355:	jmp    0x2bd5ebba
  40635a:	fstp   QWORD PTR [ecx-0xa9ea901]
  406360:	(bad)  
  406361:	call   0x6ac46dc6
  406366:	pop    edi
  406367:	add    eax,0x47970000
  40636c:	sub    al,0x50
  40636e:	xor    al,BYTE PTR [edx+0x6dfa412c]
  406374:	mov    esp,0xb05faad
  406379:	rcr    bh,0xc
  40637c:	jmp    0x466e4d
  406381:	lea    ebp,[edi-0x39]
  406384:	(bad)  
  406385:	call   DWORD PTR [ebp+0x74]
  406388:	inc    edx
  406389:	sub    al,0xfa
  40638b:	in     eax,dx
  40638c:	test   DWORD PTR [ebx+ecx*1],ebp
  40638f:	push   es
  406390:	call   0x418b34
  406395:	or     edi,DWORD PTR [edx-0x4]
  406398:	add    al,0xe9
	...
  4063ca:	add    BYTE PTR [eax],al
  4063cc:	aad    0x5
  4063ce:	add    BYTE PTR [eax],al
  4063d0:	xchg   ebp,eax
  4063d1:	cld    
  4063d2:	or     ebp,eax
  4063d4:	xchg   edi,eax
  4063d5:	pop    edi
  4063d6:	(bad)  
  4063d7:	inc    ecx
  4063d9:	lds    esi,FWORD PTR [ebp+0xf]
  4063dc:	xor    bl,BYTE PTR [ecx]
  4063de:	sub    BYTE PTR [ecx-0x76],al
  4063e1:	jp     0x406458
  4063e3:	or     al,0xa2
  4063e5:	sbb    ebx,edi
  4063e7:	push   DWORD PTR [ebp-0x7595f592]
  4063ed:	jp     0x406464
  4063ef:	or     al,0xd2
  4063f1:	xchg   edi,ebx
  4063f3:	call   ebp
  4063f5:	je     0x40638c
  4063f7:	ret    0x7ad4
  4063fa:	dec    DWORD PTR [ebp+0x50519578]
  406400:	repnz push esi
  406402:	(bad)  
  406404:	aad    0xd4
  406406:	(bad)  
  406407:	jne    0x40643b
  406409:	js     0x406480
  40640b:	adc    al,0xc5
  40640d:	std    
  40640e:	(bad)  
  406410:	xchg   ebp,eax
  406411:	std    
  406412:	pop    es
  406413:	call   0xffdda27b
  406418:	and    al,0x47
  40641a:	(bad)  
  40641b:	fistp  DWORD PTR [eax+eax*2]
  40641e:	stos   BYTE PTR es:[edi],al
  40641f:	pusha  
  406420:	out    0x6c,al
  406422:	out    dx,eax
  406423:	mov    dh,ah
  406425:	sbb    bl,BYTE PTR [ebp+0x202c04ff]
  40642b:	adc    BYTE PTR [ebx+0x79],ah
  40642e:	add    ebx,ebp
	...
  406460:	add    BYTE PTR [eax],al
  406462:	push   ecx
  406463:	not    DWORD PTR [edi]
  406465:	adc    ah,ch
  406467:	cmp    DWORD PTR [edi-0x2],edx
  40646a:	in     al,0x7
  40646c:	stos   DWORD PTR es:[edi],eax
  40646d:	inc    edx
  40646e:	or     eax,0xa30b03af
  406473:	adc    ah,al
  406475:	addr16 jmp 0x40643e
  406478:	inc    esp
  406479:	add    ah,al
  40647b:	adc    DWORD PTR [edi],ecx
  40647d:	call   0xffde23f9
  406482:	mov    ah,0x71
  406484:	pop    eax
  406485:	(bad)  
  406486:	lods   al,BYTE PTR ds:[esi]
  406487:	scas   eax,DWORD PTR es:[edi]
  406488:	xor    al,0xe8
  40648a:	daa    
  40648b:	addr16 popf 
  40648d:	push   DWORD PTR [ebx]
  40648f:	sub    ebx,DWORD PTR [edi]
  406491:	sbb    BYTE PTR [ebx-0x2e],ah
  406494:	ud0    edx,DWORD PTR [esi]
  406497:	mov    edx,0xa60eff33
  40649c:	pushf  
  40649d:	push   ebp
  40649e:	pop    ebx
  40649f:	jae    0x4064b1
  4064a1:	(bad)  
  4064a2:	out    dx,al
  4064a3:	xchg   ecx,eax
  4064a4:	xor    edi,edi
  4064a6:	mul    BYTE PTR [ebp-0x7899ab55]
  4064ac:	popf   
  4064ad:	call   0xffddc878
  4064b2:	out    0x20,al
  4064b4:	ret    0x4cfe
  4064b7:	sysenter 
  4064b9:	dec    DWORD PTR [esi]
  4064bb:	jmp    0xb951:0x53cff9d
  4064c2:	pop    es
  4064c3:	add    eax,0x86e9
	...
  4064f8:	and    ecx,DWORD PTR [eax]
  4064fa:	ins    BYTE PTR es:[edi],dx
  4064fb:	xchg   ebx,eax
  4064fc:	and    eax,0xd69d4e98
  406501:	pop    eax
  406502:	inc    edi
  406503:	popf   
  406504:	adc    al,0xad
  406506:	das    
  406507:	jo     0x40656c
  406509:	add    eax,0x96cb5736
  40650e:	cs popf 
  406510:	or     edx,edx
  406512:	inc    ecx
  406513:	popf   
  406514:	hlt    
  406515:	int    0x2b
  406517:	clc    
  406518:	in     al,dx
  406519:	xor    BYTE PTR [edx-0x50],ah
  40651c:	jns    0x406523
  40651e:	push   cs
  40651f:	pop    ss
  406520:	ja     0x4064ba
  406522:	jl     0x406517
  406524:	aad    0x11
  406526:	in     eax,dx
  406527:	pushf  
  406528:	push   esi
  406529:	or     eax,0x97c6dd01
  40652e:	out    dx,al
  40652f:	retf   0xf4a1
  406532:	call   0xdee94d6d
  406537:	push   ss
  406538:	pop    edi
  406539:	lods   eax,DWORD PTR ds:[esi]
  40653a:	xor    bh,BYTE PTR [ebp-0x3c1d685c]
  406540:	pop    ss
  406541:	test   ebp,0xd1357316
  406547:	xchg   ecx,eax
  406548:	lods   eax,DWORD PTR ds:[esi]
  406549:	xchg   edi,eax
  40654a:	mov    dh,0x33
  40654c:	test   BYTE PTR [ecx],dl
  40654e:	rcr    DWORD PTR [esi+esi*8-0x1162c710],1
  406555:	or     al,0x91
  406557:	pop    ebp
  406558:	ins    BYTE PTR es:[edi],dx
  406559:	xchg   edi,eax
  40655a:	xchg   esi,eax
  40655b:	stos   DWORD PTR es:[edi],eax
	...
  40658c:	add    BYTE PTR [eax],al
  40658e:	jns    0x40654a
  406590:	mov    ds,WORD PTR [edx+ebp*1-0x51fc223c]
  406597:	mov    cl,BYTE PTR [ebp-0xe2964]
  40659d:	jne    0x40660c
  40659f:	cmc    
  4065a0:	(bad)  
  4065a1:	hlt    
  4065a2:	ins    BYTE PTR es:[edi],dx
  4065a3:	sub    ebx,DWORD PTR [edx]
  4065a5:	dec    bp
  4065a7:	or     eax,0x96cfa0e8
  4065ac:	call   DWORD PTR [esi+0x4d]
  4065af:	icebp  
  4065b0:	(bad)  
  4065b1:	aam    0x10
  4065b3:	cwde   
  4065b4:	jne    0x4065ab
  4065b6:	dec    edx
  4065b7:	loop   0x4065b7
  4065b9:	mov    ah,0x58
  4065bb:	lods   eax,DWORD PTR ds:[esi]
  4065bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065bd:	ss out 0x96,eax
  4065c0:	push   DWORD PTR [esp+esi*8-0x28068a69]
  4065c7:	adc    BYTE PTR [ebx+edx*4],cl
  4065ca:	in     al,dx
  4065cb:	xchg   edi,eax
  4065cc:	jne    0x4065af
  4065ce:	mov    eax,0xff0eff72
  4065d3:	int3   
  4065d4:	ret    0x60d9
  4065d7:	xor    BYTE PTR [ebx-0xf3e1cf3],cl
  4065dd:	call   0x40eb:0x122b2e8e
  4065e4:	or     al,0xe6
  4065e6:	pop    DWORD PTR [edi+0x10c8e145]
  4065ec:	or     BYTE PTR [esi+0x22],ah
  4065ef:	cdq    
  4065f0:	(bad)  
  4065f1:	and    al,0x0
	...
  406623:	add    bl,dh
  406625:	add    eax,0x8260e900
  40662a:	cmp    eax,0x457ff0
  40662f:	jmp    0x2cc39f88
  406634:	outs   dx,DWORD PTR ds:[esi]
  406635:	add    eax,0x40ea3f74
  40663a:	lock cmp DWORD PTR ds:0x36e96a04,edi
  406641:	add    eax,0x96570c83
  406646:	jae    0x406648
  406648:	inc    edi
  406649:	jnp    0x4066c0
  40664b:	adc    cl,dh
  40664d:	(bad)  
  40664e:	imul   eax,DWORD PTR [eax],0x458d0160
  406654:	mov    dl,0xd1
  406656:	(bad)  
  406657:	adc    eax,0x40a933
  40665c:	xor    edx,eax
  40665e:	je     0x40668f
  406660:	mov    ecx,0x3600f3fc
  406665:	test   eax,0x870e458a
  40666a:	dec    ebp
  40666b:	lock popa 
  40666d:	or     DWORD PTR [edi+0x17],esi
  406670:	mov    ecx,0x36758b6d
  406675:	xchg   BYTE PTR [ebp+0x8],bh
  406678:	jno    0x4066c6
  40667a:	lock jecxz 0x406675
  40667d:	outs   dx,BYTE PTR ds:[esi]
  40667e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40667f:	mov    esi,DWORD PTR [edi+0x7a75fefd]
  406685:	mov    al,BYTE PTR [eax]
  406687:	inc    DWORD PTR [eax]
	...
  4066b9:	add    BYTE PTR [edi-0x7a],dl
  4066bc:	call   0x4197f8
  4066c1:	mov    edi,DWORD PTR [ecx-0x26]
  4066c4:	pop    ebp
  4066c5:	pop    ebx
  4066c6:	cmp    DWORD PTR [edi-0x7988fff4],0xffffffec
  4066cd:	add    DWORD PTR [esi],0x6e
  4066d0:	push   ebx
  4066d1:	push   esi
  4066d2:	gs jmp 0x18b9600
  4066d8:	call   0x425876
  4066dd:	mov    eax,edx
  4066df:	ret    0xfc45
  4066e2:	jp     0x4066e5
  4066e4:	add    BYTE PTR [eax],al
  4066e6:	add    ecx,0x94523e74
  4066ec:	cs inc ecx
  4066ee:	jp     0x4066be
  4066f0:	out    0x45,eax
  4066f2:	arpl   WORD PTR [ebx+0x3],ax
  4066f5:	add    BYTE PTR [eax+0x5e],ch
  4066f8:	comiss xmm5,xmm0
  4066fb:	push   cs
  4066fc:	sub    esi,DWORD PTR [esi]
  4066fe:	jl     0x4066dd
  406700:	add    edx,DWORD PTR [ebx+0x3b]
  406703:	push   ebx
  406704:	outs   dx,BYTE PTR ds:[esi]
  406705:	add    BYTE PTR [ebx-0x59],ah
  406708:	ret    
  406709:	je     0x406760
  40670b:	pop    ss
  40670c:	fwait
  40670d:	lea    esp,[esi+0x66e83332]
  406713:	xchg   DWORD PTR [ebx],eax
  406715:	add    BYTE PTR [ebx-0x697c4dbd],dh
  40671b:	dec    edx
  40671c:	add    esi,DWORD PTR [eax+eax*1+0x0]
	...
  406750:	pop    ecx
  406751:	xchg   BYTE PTR [eax+eax*1],al
  406754:	arpl   WORD PTR [esi-0x1a67a1c6],bx
  40675a:	lds    edi,FWORD PTR [eax+0x39e63]
  406760:	mov    WORD PTR [esi+edi*1-0x37],ss
  406764:	and    BYTE PTR [edx-0x72],dl
  406767:	in     al,dx
  406768:	loopne 0x406754
  40676a:	xchg   edx,eax
  40676b:	adc    DWORD PTR [esi+0x6340e915],0xffffff9e
  406772:	movhlps xmm4,xmm0
  406775:	pop    ecx
  406776:	mov    BYTE PTR [esi],ch
  406778:	and    bl,BYTE PTR [esi+0x1f6a7403]
  40677e:	xlat   BYTE PTR ds:[ebx]
  40677f:	nop
  406780:	jge    0x40675f
  406782:	add    eax,DWORD PTR [eax]
  406784:	mov    cs:0x9e63015b,eax
  40678a:	add    ecx,ecx
  40678c:	mov    al,ds:0xa5fa3f19
  406791:	sahf   
  406792:	add    eax,esi
  406794:	and    ebx,DWORD PTR [ebp-0x5fdc39fd]
  40679a:	add    eax,esi
  40679c:	and    eax,DWORD PTR ds:0x45a503ea
  4067a2:	in     eax,0x3
  4067a4:	popf   
  4067a5:	inc    ebp
  4067a6:	in     al,dx
  4067a7:	(bad)  
  4067a8:	out    dx,eax
  4067a9:	dec    ecx
  4067aa:	xchg   ebp,eax
  4067ab:	xor    al,0xc9
  4067ad:	add    eax,0x5b90413
  4067b2:	adc    eax,DWORD PTR [eax+eax*1]
	...
  4067e5:	add    BYTE PTR [ecx-0x34fbfcfb],bh
  4067eb:	in     eax,0xea
  4067ed:	add    esp,DWORD PTR [ebx+0x1f]
  4067f0:	or     DWORD PTR [esi],ebp
  4067f2:	popa   
  4067f3:	and    BYTE PTR [ebp+ebx*4-0x75036b6d],0x4d
  4067fb:	inc    esi
  4067fc:	jmp    0xeb5a8b0d
  406801:	retf   0xcc20
  406804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406805:	xchg   ebx,eax
  406806:	arpl   WORD PTR ds:0x49ee03e9,ax
  40680c:	cmp    DWORD PTR [esp+esi*8],esi
  40680f:	sbb    DWORD PTR ds:0xf494632e,ebx
  406815:	xchg   BYTE PTR ds:0xa30ce946,dh
  40681b:	sbb    esi,esp
  40681d:	rcr    BYTE PTR [esi],0x95
  406820:	jmp    0xfe45cb28
  406825:	push   cs
  406826:	iret   
  406827:	xchg   ebx,eax
  406828:	fdiv   QWORD PTR [edx-0x73]
  40682b:	inc    esi
  40682c:	jmp    0xb0d586bd
  406831:	les    edx,FWORD PTR [esi]
  406833:	or     ch,0x84
  406836:	lahf   
  406837:	jl     0x40689d
  406839:	ds jmp 0x406870
  40683c:	inc    ecx
  40683d:	mov    bh,0x45
  40683f:	inc    esi
  406840:	jmp    0xbeeb8af0
  406845:	cwde   
  406846:	xor    eax,DWORD PTR [eax]
  406848:	add    BYTE PTR [ecx+0x0],ch
	...
  40687a:	add    BYTE PTR [eax],al
  40687c:	ins    BYTE PTR es:[edi],dx
  40687d:	or     eax,DWORD PTR [ebx+0x76f8e72c]
  406883:	adc    ah,ah
  406885:	dec    ecx
  406886:	lock cmp DWORD PTR [edi+0x60e9aaf2],esi
  40688d:	mov    al,al
  40688f:	adc    DWORD PTR [ecx-0x15d349fe],ebx
  406895:	xor    eax,0x9385370f
  40689a:	push   eax
  40689b:	out    0x92,al
  40689d:	dec    eax
  40689e:	std    
  40689f:	sbb    DWORD PTR [edx+0x5b],ebp
  4068a2:	inc    ebp
  4068a3:	gs jo  0x4068a8
  4068a6:	mov    dh,0xa4
  4068a8:	(bad)  
  4068a9:	xor    eax,0x8f5d9f0f
  4068ae:	push   eax
  4068af:	fidiv  WORD PTR [edx+0x5b99f948]
  4068b5:	pop    ebx
  4068b6:	inc    ebp
  4068b7:	inc    ecx
  4068b8:	push   eax
  4068b9:	add    dh,BYTE PTR [edi+0xf35d2ac]
  4068bf:	jbe    0x4068f6
  4068c1:	cdq    
  4068c2:	push   eax
  4068c3:	es pop ebp
  4068c5:	xchg   ebp,eax
  4068c6:	push   0x45fa0b
  4068cb:	fs popf 
  4068cd:	adc    DWORD PTR [eax+0x1],0xe900600b
  4068d4:	out    0xc9,eax
  4068d6:	xor    al,0x6c
  4068d8:	test   DWORD PTR [ecx+0x5c3b0150],eax
  4068de:	add    cl,ch
	...
  406910:	add    BYTE PTR [eax],al
  406912:	jo     0x406894
  406914:	inc    ebp
  406915:	jne    0x40698e
  406917:	sbb    eax,0x51e0fdd
  40691c:	call   0xffd32cb9
  406921:	rcl    DWORD PTR [ebp*4-0x3f5aff01],0xc3
  406929:	push   ebp
  40692a:	adc    DWORD PTR [ebp-0x7f],ebx
  40692d:	les    esp,FWORD PTR [esi+0x7a]
  406930:	(bad)  
  406931:	call   FWORD PTR [ecx-0x1e]
  406934:	imul   eax,DWORD PTR [eax],0x75ff0950
  40693a:	jb     0x40699a
  40693c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40693d:	aad    0xf5
  40693f:	jns    0x4068ca
  406941:	inc    ebp
  406942:	out    0xe0,al
  406944:	add    BYTE PTR [eax],al
  406946:	cmc    
  406947:	cmp    bh,bh
  406949:	jne    0x40699d
  40694b:	pop    esi
  40694c:	out    0xd4,eax
  40694e:	mov    ch,0x7a
  406950:	push   0x64a9c
  406955:	lea    edi,[edi-0x7a000117]
  40695b:	(bad)  
  40695d:	jnp    0x4069b1
  40695f:	jp     0x406960
  406961:	(bad)  
  406962:	jg     0x40694d
  406964:	(bad)  
  406965:	jmp    DWORD PTR [ebp-0x5fffff3]
  40696b:	jl     0x4068f2
  40696d:	pusha  
  40696e:	xor    eax,0xa250ff7a
  406973:	pop    eax
  406974:	test   eax,0x0
	...
  4069a5:	add    BYTE PTR [eax],al
  4069a7:	add    dl,bh
  4069a9:	sahf   
  4069aa:	enter  0x282b,0x7c
  4069ae:	mov    ebp,0xff7a7574
  4069b3:	jmp    0x40698e
  4069b5:	test   DWORD PTR [edi],edi
  4069b7:	add    BYTE PTR [edi+0x5],cl
  4069ba:	mov    edx,0x5ba01
  4069bf:	or     ebx,DWORD PTR [eax-0xb]
  4069c2:	add    al,dh
  4069c4:	mov    ebp,0x3b414705
  4069c9:	jno    0x40694b
  4069cb:	add    BYTE PTR [edx+0x63e57205],bh
  4069d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069d2:	ret    
  4069d3:	je     0x406a42
  4069d5:	inc    esp
  4069d6:	js     0x4069d8
  4069d8:	arpl   WORD PTR [eax+ecx*4-0x69acfc7b],bx
  4069df:	call   DWORD PTR [ebx]
  4069e1:	pop    ebx
  4069e2:	adc    BYTE PTR [eax],cl
  4069e4:	mov    ebx,DWORD PTR [edx]
  4069e6:	scas   eax,DWORD PTR es:[edi]
  4069e7:	jmp    FWORD PTR [esi+esi*2+0x7]
  4069eb:	push   0x63
  4069ed:	test   BYTE PTR [ebx],0xff
  4069f0:	(bad)  
  4069f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069f2:	stos   DWORD PTR es:[edi],eax
  4069f3:	test   eax,0xe896802f
  4069f8:	push   ds
  4069f9:	mov    dl,BYTE PTR [esi+0x100fb3ff]
  4069ff:	or     BYTE PTR [ebx+0x2],cl
  406a02:	mov    al,0xff
  406a04:	xor    al,0x7
  406a06:	add    al,0x4
  406a08:	arpl   WORD PTR [esi+0xe9ab],bx
	...
  406a3e:	or     al,0x30
  406a40:	xchg   esi,eax
  406a41:	mov    esi,esp
  406a43:	pop    edx
  406a44:	xchg   esi,eax
  406a45:	call   DWORD PTR [edi+eax*8]
  406a48:	xchg   esi,eax
  406a49:	add    esp,DWORD PTR [ebx-0x62]
  406a4c:	xchg   esi,eax
  406a4d:	mov    ch,0xa7
  406a4f:	iret   
  406a50:	xchg   ebp,eax
  406a51:	dec    DWORD PTR [ebx-0xb000c64]
  406a57:	mov    BYTE PTR [ebx],0x4
  406a5a:	arpl   WORD PTR [esi-0x6145ad55],bx
  406a60:	add    edx,DWORD PTR [eax-0x24]
  406a63:	xor    DWORD PTR [edi],esi
  406a65:	call   esp
  406a67:	call   DWORD PTR [ebp+0x20f65b75]
  406a6d:	aam    0xc4
  406a6f:	(bad)  
  406a73:	sahf   
  406a74:	add    edi,edi
  406a76:	out    dx,al
  406a77:	adc    BYTE PTR [esi+0x5105acff],0x3
  406a7e:	push   ebx
  406a7f:	add    eax,0x9632be9
  406a84:	jmp    0x801ef58c
  406a89:	add    al,0x63
  406a8b:	xor    eax,0x90274fc6
  406a90:	mov    esi,0xe11a7c95
  406a95:	stos   DWORD PTR es:[edi],eax
  406a96:	cmp    bh,BYTE PTR [ecx-0x35846a52]
  406a9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a9d:	xchg   ebp,eax
  406a9e:	fs xor eax,0xf9e
	...
  406ad4:	imul   ebx,DWORD PTR [ebp-0x6fab4e64],0xffffff81
  406adb:	xor    ecx,DWORD PTR [ebp-0x70]
  406ade:	xchg   BYTE PTR [edi-0x6a81d322],al
  406ae4:	cmp    al,0x35
  406ae6:	add    DWORD PTR [edi-0x5416b97b],esi
  406aec:	(bad)  
  406aed:	test   al,0x66
  406aef:	xchg   ebp,eax
  406af0:	fimul  DWORD PTR [ecx-0x6fe36b4b]
  406af6:	push   0x57
  406af8:	scas   eax,DWORD PTR es:[edi]
  406af9:	nop
  406afa:	dec    esi
  406afb:	xchg   ebp,eax
  406afc:	arpl   WORD PTR [ecx],bx
  406afe:	lods   al,BYTE PTR ds:[esi]
  406aff:	add    dh,0x2c
  406b02:	ds xchg ebp,eax
  406b04:	cld    
  406b05:	clc    
  406b06:	mov    edx,0x9189e1d7
  406b0b:	xchg   esp,eax
  406b0c:	in     al,dx
  406b0d:	(bad)  
  406b0e:	in     eax,dx
  406b0f:	xchg   esp,eax
  406b10:	scas   al,BYTE PTR es:[edi]
  406b11:	sub    al,0x1e
  406b13:	xchg   ebp,eax
  406b14:	fmul   QWORD PTR [edi+0x52cb0b9c]
  406b1a:	cmp    dl,BYTE PTR [ebp+0x3c5483cc]
  406b20:	les    ecx,FWORD PTR [edi-0x6fb50002]
  406b26:	add    dh,dh
  406b28:	gs std 
  406b2a:	out    0x48,eax
  406b2c:	repnz (bad) 
  406b2e:	jmp    esi
  406b30:	adc    eax,0xf7deff2d
  406b35:	(bad)  
  406b36:	mov    ch,0x3d
	...
  406b68:	add    BYTE PTR [eax],al
  406b6a:	out    dx,al
  406b6b:	(bad)  
  406b6c:	dec    esi
  406b6e:	pop    ebp
  406b6f:	std    
  406b70:	out    0x8b,eax
  406b72:	ror    DWORD PTR [edi+0x1b64d2ff],cl
  406b78:	add    BYTE PTR [ebx+0x5f],al
  406b7b:	nop
  406b7c:	jne    0x406b5f
  406b7e:	mov    eax,0xcfa6d359
  406b83:	(bad)  
  406b84:	mov    ch,0x35
  406b86:	test   BYTE PTR [esi-0x47f47e01],0xff
  406b8d:	mov    ?,edi
  406b8f:	pop    eax
  406b90:	pop    esp
  406b91:	xchg   bh,ch
  406b93:	mov    gs,eax
  406b95:	mov    DWORD PTR [esi],ecx
  406b97:	(bad)  
  406b98:	inc    edx
  406b9a:	sti    
  406b9b:	sbb    eax,0x5a1be29
  406ba0:	call   0x462476
  406ba5:	jo     0x406b44
  406ba7:	loope  0x406ba7
  406ba9:	push   esi
  406baa:	out    dx,eax
  406bab:	cmp    BYTE PTR [ebp-0x710803],0xe9
  406bb2:	push   esp
  406bb3:	out    dx,eax
  406bb4:	addr16 aam 0x7
  406bb7:	inc    esi
  406bb8:	add    BYTE PTR [esi],dh
  406bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bbb:	loope  0x406bbb
  406bbd:	xlat   BYTE PTR cs:[ebx]
  406bbf:	popf   
  406bc0:	or     eax,0xb056051
  406bc5:	sub    DWORD PTR [ebx+edi*8-0x74],ebp
  406bc9:	jl     0x406b7b
  406bcb:	(bad)  
  406bcc:	dec    DWORD PTR [esi]
	...
  406bfe:	add    BYTE PTR [eax],al
  406c00:	xchg   edx,eax
  406c01:	mov    ss,eax
  406c03:	add    cl,bh
  406c05:	std    
  406c06:	fidiv  DWORD PTR [ebp-0x32]
  406c09:	xchg   DWORD PTR [ebp-0x8d52d0],eax
  406c0f:	push   eax
  406c10:	bound  esi,QWORD PTR [edi-0xf45ff59]
  406c16:	and    ecx,DWORD PTR [ebp-0x146f9]
  406c1c:	lods   eax,DWORD PTR ds:[esi]
  406c1d:	fsin   
  406c1f:	jne    0x406ba3
  406c21:	push   0x45
  406c23:	rcr    DWORD PTR [ebp-0x418a008e],cl
  406c29:	jb     0x406ca0
  406c2b:	or     BYTE PTR [edx-0x42002c80],ah
  406c31:	rcr    BYTE PTR [edx-0x37],cl
  406c34:	mov    eax,0xd154fffd
  406c39:	gs add esp,0xffff69e2
  406c40:	scas   eax,DWORD PTR es:[edi]
  406c41:	cmp    al,0xfc
  406c43:	push   eax
  406c44:	fucomp st(3)
  406c46:	or     edi,edi
  406c48:	neg    DWORD PTR [edx+0x6a4a4128]
  406c4e:	mov    edx,0xb023aa8
  406c53:	shr    BYTE PTR ds:0xa00e77d,0x2
  406c5a:	mov    DWORD PTR [ebp-0x4e],0xfa000009
  406c61:	mov    edx,0xf445
	...
  406c96:	popf   
  406c97:	cli    
  406c98:	(bad)  
  406c99:	call   DWORD PTR [eax]
  406c9b:	add    ch,BYTE PTR [edx+0x0]
  406c9e:	jg     0x406d1c
  406ca0:	in     al,dx
  406ca1:	idiv   DWORD PTR ds:0xfa6a5072
  406ca7:	test   BYTE PTR [ebp-0xc],al
  406caa:	sbb    al,BYTE PTR [ebp-0x109c0b7b]
  406cb0:	xchg   edx,eax
  406cb1:	push   DWORD PTR [ebx]
  406cb3:	call   FWORD PTR [eax]
  406cb5:	clc    
  406cb6:	les    edx,FWORD PTR [eax]
  406cb8:	(bad)
  406cbc:	add    al,0x0
  406cbe:	push   0xba0517dc
  406cc3:	dec    eax
  406cc4:	add    al,0x0
  406cc6:	arpl   WORD PTR [ebx],bx
  406cc8:	push   eax
  406cc9:	in     al,dx
  406cca:	xchg   esp,eax
  406ccb:	scas   al,BYTE PTR es:[edi]
  406ccc:	xchg   edx,eax
  406ccd:	add    DWORD PTR [edi],ecx
  406ccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cd0:	xchg   BYTE PTR [ebp-0x6d4981],bh
  406cd6:	pop    esp
  406cd7:	ror    BYTE PTR [eax],1
  406cd9:	jmp    DWORD PTR [esi]
  406cdb:	les    ebx,FWORD PTR [esi-0x1d37f44a]
  406ce1:	inc    eax
  406ce2:	arpl   WORD PTR [ecx],si
  406ce4:	mov    ah,dh
  406ce6:	ins    BYTE PTR es:[edi],dx
  406ce7:	xchg   dx,ax
  406ce9:	push   eax
  406cea:	dec    ebx
  406ceb:	sbb    ebx,DWORD PTR [ebx+0x0]
  406cee:	arpl   WORD PTR [edi+0x29d274c3],sp
  406cf4:	mov    al,ch
  406cf6:	dec    esp
  406cf7:	test   BYTE PTR [edx+0x50],dl
	...
  406d29:	add    BYTE PTR [eax],al
  406d2b:	add    dh,ch
  406d2d:	and    DWORD PTR [edi+0x331434f7],edx
  406d33:	push   DWORD PTR [esi+0x7c3592aa]
  406d39:	cmc    
  406d3a:	inc    esp
  406d3b:	add    BYTE PTR [ebx],cl
  406d3d:	aaa    
  406d3e:	stos   DWORD PTR es:[edi],eax
  406d3f:	call   DWORD PTR [eax+ebp*4]
  406d42:	ret    
  406d43:	je     0x406cf7
  406d45:	and    eax,0x440cf088
  406d4a:	xchg   edx,eax
  406d4b:	push   0xbea29e62
  406d50:	hlt    
  406d51:	dec    ecx
  406d52:	sti    
  406d53:	out    0xa1,eax
  406d55:	lock xchg ecx,eax
  406d57:	jmp    eax
  406d59:	add    eax,0x8cd49f64
  406d5e:	push   ds
  406d5f:	add    al,0x4e
  406d61:	stc    
  406d62:	add    BYTE PTR [ebx],0xcc
  406d65:	adc    ah,cl
  406d67:	fwait
  406d68:	je     0x406d21
  406d6a:	push   es
  406d6b:	xchg   edx,eax
  406d6c:	enter  0x92ff,0x4
  406d70:	mov    ah,0x12
  406d72:	loope  0x406d0f
  406d74:	xor    BYTE PTR [edi+0x52a491ee],0xd1
  406d7b:	cdq    
  406d7c:	pushf  
  406d7d:	mov    esi,ds
  406d7f:	push   edi
  406d80:	xchg   ebx,eax
  406d81:	xchg   esp,eax
  406d82:	(bad)  
  406d83:	xchg   ecx,eax
  406d84:	mov    WORD PTR [edx],ss
  406d86:	loope  0x406d23
  406d88:	push   ds
  406d89:	mov    bh,0xc6
  406d8b:	xchg   ecx,eax
  406d8c:	jl     0x406de0
  406d8e:	mov    ecx,0x99
	...
  406dbf:	add    BYTE PTR [eax],al
  406dc1:	add    BYTE PTR [esp+ecx*4-0x3f],dh
  406dc5:	or     eax,0x91ae8c96
  406dca:	push   ds
  406dcb:	lea    edx,[eax-0x6173a224]
  406dd1:	xchg   ecx,eax
  406dd2:	into   
  406dd3:	mov    DWORD PTR [ecx-0x16fafb39],eax
  406dd9:	mov    edx,0x36e8fd21
  406dde:	call   0x4008d67b
  406de3:	xchg   esp,eax
  406de4:	jbe    0x406d77
  406de6:	fiadd  WORD PTR [ecx+0x6d]
  406de9:	xor    al,0x24
  406deb:	adc    dh,ch
  406ded:	nop
  406dee:	push   esi
  406def:	in     al,0xf
  406df1:	inc    ebx
  406df2:	arpl   WORD PTR [ebp+0x5636985],bx
  406df8:	loop   0x406dbd
  406dfa:	push   esp
  406dfb:	sbb    BYTE PTR [edx+0x26056302],0x47
  406e02:	sti    
  406e03:	add    al,0x0
  406e05:	jmp    0xa507736a
  406e0a:	int3   
  406e0b:	mov    eax,DWORD PTR [edi]
  406e0d:	jmp    0x93408d72
  406e12:	pusha  
  406e13:	pop    ds
  406e14:	add    BYTE PTR [ebx+0x15457a60],al
  406e1a:	(bad)  
  406e1b:	jp     0x406da2
  406e1d:	std    
  406e1e:	fisttp DWORD PTR [ebx+0x11d399ff]
  406e24:	clc    
  406e25:	test   BYTE PTR [eax],0x0
	...
  406e58:	push   ebp
  406e59:	mov    eax,ebp
  406e5b:	outs   dx,DWORD PTR ds:[esi]
  406e5c:	cmp    eax,DWORD PTR ds:0x10a0f200
  406e62:	add    eax,0x49ad0
  406e67:	jmp    0x2868dbd4
  406e6c:	pop    edi
  406e6d:	mov    WORD PTR [ebp-0xb],?
  406e70:	fsub   DWORD PTR [ebp-0x28]
  406e73:	mov    esi,0x998b34d3
  406e78:	in     eax,dx
  406e79:	xor    esp,0x508bd3b6
  406e7f:	cmp    edi,edi
  406e81:	je     0x406e5b
  406e83:	sahf   
  406e84:	repz jl 0x406e0c
  406e87:	cdq    
  406e88:	jmp    0x406e14
  406e8a:	inc    DWORD PTR [ecx-0x79004e05]
  406e90:	pop    esi
  406e91:	add    eax,0x46439468
  406e96:	add    BYTE PTR [esi-0x6b],dh
  406e99:	xchg   ebp,eax
  406e9a:	imul   DWORD PTR [esi-0x2d]
  406e9d:	mov    dh,BYTE PTR ds:0x46380e
  406ea3:	push   ecx
  406ea4:	retf   
  406ea5:	mov    dl,0xff
  406ea7:	push   esi
  406ea8:	mov    DWORD PTR [eax-0x750ca91c],eax
  406eae:	push   0x0
  406eb0:	or     ch,bh
  406eb2:	(bad)  [edi]
  406eb4:	retf   
  406eb5:	push   es
  406eb6:	push   DWORD PTR [ebp-0x92d6]
	...
  406eec:	add    BYTE PTR [eax],al
  406eee:	xor    eax,0xb2926b3
  406ef3:	pop    es
  406ef4:	call   0xffb5fcc2
  406ef9:	mov    DWORD PTR [edi],edi
  406efb:	push   0xfffffff7
  406efd:	call   DWORD PTR [ebp-0x18]
  406f00:	jmp    DWORD PTR [edi+0x6d]
  406f03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f04:	inc    eax
  406f05:	add    BYTE PTR [ebp-0x4a080fd0],dh
  406f0b:	jp     0x406f0c
  406f0d:	xor    eax,0x40af9d
  406f12:	mov    dl,0x2e
  406f14:	xlat   BYTE PTR ds:[ebx]
  406f15:	push   DWORD PTR [ebp-0x52177af8]
  406f1b:	jp     0x406f1c
  406f1d:	adc    edi,0x5d
  406f20:	idiv   edi
  406f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f23:	add    DWORD PTR [ecx+ecx*2+0x9],esi
  406f27:	xor    al,0xec
  406f29:	div    DWORD PTR [ebp+0x3a74007a]
  406f2f:	xchg   BYTE PTR [ebp-0x860218],bh
  406f35:	add    BYTE PTR [esi-0x4e],ch
  406f38:	add    BYTE PTR [bp+si],bh
  406f3b:	imul   edi,DWORD PTR [esi-0x18769001],0xffffffee
  406f42:	fidivr DWORD PTR [ecx-0x1]
  406f45:	jmp    FWORD PTR [edi+0x65]
  406f48:	idiv   edi
  406f4a:	mov    ch,0x7a
  406f4c:	jne    0x406f56
  406f4e:	loop   0x406f96
  406f50:	sar    edi,1
	...
  406f82:	add    BYTE PTR [eax],al
  406f84:	test   DWORD PTR [edx-0x4b],edi
  406f87:	call   0x3fea39
  406f8c:	arpl   WORD PTR [ecx-0x32b01805],bp
  406f92:	mov    ?,edi
  406f94:	cld    
  406f95:	or     BYTE PTR [eax-0x71350b09],ch
  406f9b:	jne    0x406ff8
  406f9d:	inc    esp
  406f9e:	out    0xd0,al
  406fa0:	in     al,0xda
  406fa2:	mov    ?,WORD PTR [ebp-0x711539]
  406fa8:	retf   
  406fa9:	stos   DWORD PTR es:[edi],eax
  406faa:	mov    bh,0xff
  406fac:	int3   
  406fad:	repnz pop eax
  406faf:	in     al,dx
  406fb0:	int3   
  406fb1:	cli    
  406fb2:	mov    gs,eax
  406fb4:	xchg   al,ch
  406fb6:	mov    ?,edi
  406fb8:	mov    ah,0xd0
  406fba:	fwait
  406fbb:	imul   DWORD PTR [edx+edx*4-0x6570e565]
  406fc2:	mov    ?,edi
  406fc4:	(bad)  
  406fc5:	stos   DWORD PTR es:[edi],eax
  406fc6:	xchg   esi,eax
  406fc7:	call   DWORD PTR [edx+ebp*4+0x787b0818]
  406fce:	(bad)  
  406fcf:	inc    DWORD PTR [edx+edi*4-0x3d8b0fa8]
  406fd6:	mov    gs,eax
  406fd8:	bound  esi,QWORD PTR [eax-0x72]
  406fdb:	jmp    FWORD PTR [eax+ebx*8-0x75]
  406fdf:	jmp    0xffcec98b
  406fe4:	pop    esp
  406fe5:	jmp    0x0:0xe88f
	...
  407018:	add    BYTE PTR [eax],al
  40701a:	test   al,0x40
  40701c:	add    eax,DWORD PTR [eax]
  40701e:	sbb    bl,BYTE PTR [ebp-0x5]
  407021:	jmp    FWORD PTR [edi+0x27839f23]
  407027:	sbb    DWORD PTR [ecx],0x0
  40702a:	leave  
  40702b:	popf   
  40702c:	mov    ?,WORD PTR [ebp+0x5b]
  40702f:	xchg   dl,dh
  407031:	shl    BYTE PTR [eax+ebx*1],1
  407034:	jl     0x40707b
  407036:	pop    ds
  407037:	push   es
  407038:	ror    DWORD PTR [eax+0x44],1
  40703b:	inc    esi
  40703c:	jmp    0x413e06cf
  407041:	daa    
  407042:	add    eax,0x871b4e89
  407047:	fsub   DWORD PTR [edi-0xeed0bfd]
  40704d:	fwait
  40704e:	xchg   esp,eax
  40704f:	xchg   DWORD PTR [esi],esi
  407051:	mov    ?,WORD PTR [ebx-0x7f]
  407054:	inc    BYTE PTR [ebx+eiz*2-0x78]
  407058:	pushf  
  407059:	sti    
  40705a:	mov    esp,0xcc8e1bc9
  40705f:	sbb    eax,0x523de45
  407064:	push   cs
  407065:	sbb    BYTE PTR [ebx-0x63],ch
  407068:	(bad)  
  407069:	nop
  40706a:	mov    ah,0x88
  40706c:	(bad)  
  40706d:	pop    ss
  40706e:	scas   eax,DWORD PTR es:[edi]
  40706f:	mov    BYTE PTR [ebx+edi*8-0x44],bh
  407073:	lock pop ss
  407075:	mov    ds,WORD PTR [esi+edi*4+0x326308ab]
  40707c:	jb     0x40701e
	...
  4070ae:	add    BYTE PTR [eax],al
  4070b0:	sti    
  4070b1:	add    al,0xe9
  4070b3:	pushf  
  4070b4:	lds    ecx,FWORD PTR [eax+0x127c0054]
  4070ba:	icebp  
  4070bb:	fwait
  4070bc:	pop    es
  4070bd:	xchg   edx,eax
  4070be:	mov    esi,0xe1c39a8d
  4070c3:	add    ecx,DWORD PTR [esi]
  4070c5:	jl     0x407084
  4070c7:	sbb    esi,0xe0fce8f9
  4070cd:	loop   0x4070b6
  4070cf:	add    esp,DWORD PTR [ebx-0x78]
  4070d2:	sbb    al,0x0
  4070d4:	cmp    ebp,DWORD PTR [ebx]
  4070d6:	scas   eax,DWORD PTR es:[edi]
  4070d7:	lea    edi,[esp+edi*8]
  4070da:	test   al,0x17
  4070dc:	push   ebx
  4070dd:	sbb    eax,0x5a3dc61
  4070e2:	add    BYTE PTR [esi+0x4c],dh
  4070e5:	stc    
  4070e6:	out    0x22,eax
  4070e8:	(bad)  
  4070e9:	xchg   edi,edi
  4070eb:	jo     0x407089
  4070ed:	stc    
  4070ee:	imul   ebp,ecx,0xa82ff668
  4070f4:	pusha  
  4070f5:	sbb    eax,0x5a0191c
  4070fa:	(bad)  
  4070fb:	cld    
  4070fc:	(bad)  
  4070fd:	fadd   QWORD PTR [eax-0x17]
  407100:	enter  0xd62e,0x36
  407104:	(bad)  
  407105:	sti    
  407106:	mov    edi,0x5037ceb5
  40710b:	es ins BYTE PTR es:[edi],dx
  40710d:	stc    
  40710e:	out    0x2e,eax
  407110:	adc    eax,0xb9ff88
	...
  407145:	add    BYTE PTR [eax-0x271e8a78],dl
  40714b:	jne    0x40714c
  40714d:	push   es
  40714e:	out    0x9c,al
  407150:	and    DWORD PTR [edx],ebx
  407152:	fiadd  WORD PTR [edi-0x780c2a18]
  407158:	inc    DWORD PTR [ebx+0x19111d60]
  40715e:	and    BYTE PTR ds:0x44b0fd68,al
  407164:	add    BYTE PTR [ecx+0x61],al
  407167:	add    eax,0xe6d86900
  40716c:	aad    0xc6
  40716e:	out    0xfb,eax
  407170:	mov    edi,0x50377d35
  407175:	mov    dh,0x4d
  407177:	stc    
  407178:	out    0x56,eax
  40717a:	push   ss
  40717b:	xchg   edi,edi
  40717d:	cmp    DWORD PTR [edi-0x170e8a7a],ecx
  407183:	sub    al,0xff
  407185:	xchg   esi,eax
  407186:	xlat   BYTE PTR ds:[ebx]
  407187:	popf   
  407188:	jmp    0xe8c76148
  40718d:	add    dh,ah
  40718f:	push   esp
  407190:	(bad)  
  407191:	call   DWORD PTR [eax+0x1]
  407194:	push   0x43ea11
  407199:	push   0x40b2cd
  40719e:	jge    0x40714f
  4071a0:	sub    DWORD PTR es:[ebx+0x47e5e802],edi
  4071a7:	jns    0x4071a8
  4071a9:	or     eax,DWORD PTR [eax]
	...
  4071db:	add    BYTE PTR [edx-0x12],cl
  4071de:	sbb    eax,0x7579da50
  4071e3:	or     al,0x92
  4071e5:	fcom   st(5)
  4071e7:	jmp    FWORD PTR ds:0x17ff4fd2
  4071ed:	mov    esp,edi
  4071ef:	and    BYTE PTR [ebp+0x79],bh
  4071f2:	(bad)  
  4071f3:	call   0x3fc622
  4071f8:	bound  ebp,QWORD PTR ds:0xec6dffd2
  4071fe:	jmp    DWORD PTR [edi-0x65]
  407201:	mov    dl,0x40
  407203:	add    dl,dl
  407205:	mov    ecx,0xeaba412f
  40720a:	add    DWORD PTR [eax],eax
  40720c:	mov    al,BYTE PTR [edx+0x7ad7ade8]
  407212:	dec    DWORD PTR [ebx]
  407214:	mov    edx,0x4a501df5
  407219:	jp     0x407290
  40721b:	or     al,0xa2
  40721d:	mov    ds:0xd19dffd5,eax
  407222:	dec    edi
  407223:	push   DWORD PTR [edi]
  407225:	mov    edi,esp
  407227:	call   0xe93fecd8
  40722c:	xchg   edx,eax
  40722d:	dec    edi
  40722e:	(bad)  
  40722f:	push   edx
  407231:	in     eax,dx
  407232:	sar    edi,1
  407234:	in     eax,dx
  407235:	call   0xdda3a22a
  40723a:	add    edi,edi
  40723c:	mov    dh,0xa8
  40723e:	fwait
  40723f:	add    eax,0x0
	...
  407270:	add    BYTE PTR [eax],al
  407272:	or     eax,0x93508b7f
  407277:	pop    es
  407278:	adc    DWORD PTR [eax],ecx
  40727a:	cmp    edx,DWORD PTR [edi-0x76]
  40727d:	call   FWORD PTR [esp+eax*4]
  407280:	xor    edx,edx
  407282:	adc    al,0x1f
  407284:	mov    esi,DWORD PTR [ebp+0x5f]
  407287:	xor    al,0x3b
  407289:	rol    BYTE PTR [edi+ebp*1],cl
  40728c:	mov    ebp,0x309c6bc2
  407291:	mov    eax,DWORD PTR [edi]
  407293:	sbb    eax,eax
  407295:	hlt    
  407296:	jns    0x407234
  407298:	sbb    eax,0xfb48e402
  40729d:	out    0x52,eax
  40729f:	out    0x8a,eax
  4072a1:	(bad)  
  4072a2:	jmp    0x39d:0x66688758
  4072a9:	add    BYTE PTR [ebx-0x43004aa6],bh
  4072af:	and    al,0x41
  4072b1:	clc    
  4072b2:	dec    ebx
  4072b3:	cwde   
  4072b4:	add    al,0x0
  4072b6:	arpl   WORD PTR [edi-0x1c4407f0],ax
  4072bc:	data16 add BYTE PTR [ebx-0x5d],ah
  4072c0:	ret    
  4072c1:	je     0x407332
  4072c3:	loope  0x4072c4
  4072c5:	add    BYTE PTR [ebx-0x64],ah
  4072c8:	adc    cl,BYTE PTR ds:0xff8c2884
  4072ce:	mul    BYTE PTR [ebx-0x418a7765]
  4072d4:	mov    ch,bl
	...
  407306:	add    BYTE PTR [eax],al
  407308:	pop    ebx
  407309:	inc    edi
  40730a:	adc    al,bh
  40730c:	jnp    0x40735d
  40730e:	mov    ah,0xff
  407310:	pop    esp
  407311:	leave  
  407312:	(bad)  
  407314:	lahf   
  407315:	add    eax,0xd64c8abf
  40731a:	popf   
  40731b:	adc    BYTE PTR [ebx+0x6d],bl
  40731e:	pop    es
  40731f:	mov    bh,BYTE PTR [eax*4+0x3a3cee03]
  407326:	lahf   
  407327:	mov    ch,BYTE PTR [ecx+edx*1]
  40732a:	test   eax,0x73ed4f0f
  40732f:	fisub  DWORD PTR [ebx+0x2a9c1905]
  407335:	pop    ebx
  407336:	data16 mov dh,BYTE PTR [ebx-0x3042b7c]
  40733d:	aam    0x56
  40733f:	mov    bh,ah
  407341:	out    dx,eax
  407342:	or     DWORD PTR [esi+ecx*2+0x588a465b],ebx
  407349:	inc    ebp
  40734a:	mov    ch,0xef
  40734c:	jl     0x4072d0
  40734e:	push   es
  40734f:	inc    ebp
  407350:	arpl   bp,dx
  407352:	inc    eax
  407353:	pop    ebp
  407354:	scas   al,BYTE PTR es:[edi]
  407355:	test   BYTE PTR [esi],ah
  407357:	xor    ecx,esp
  407359:	cli    
  40735a:	lock fwait
  40735c:	xchg   ebx,eax
  40735d:	adc    DWORD PTR [esi],0xffffff8a
  407360:	dec    ecx
  407361:	and    DWORD PTR [ecx],eax
  407363:	xchg   ecx,eax
  407364:	mov    es,WORD PTR [esi+eax*1-0x2b061302]
  40736b:	sbb    eax,DWORD PTR [eax]
	...
  40739d:	add    BYTE PTR [esi+0x3303a834],ah
  4073a3:	ins    DWORD PTR es:[edi],dx
  4073a4:	bound  esi,QWORD PTR [eax-0x76c67b6c]
  4073aa:	push   ss
  4073ab:	or     eax,0x8486f3d1
  4073b0:	(bad)  
  4073b1:	push   ds
  4073b2:	arpl   bp,bp
  4073b4:	out    0xd3,al
  4073b6:	and    eax,DWORD PTR ds:0xc63ce851
  4073bc:	call   0x6ca249
  4073c1:	add    BYTE PTR [eax+0x1359e805],ah
  4073c7:	test   bh,bh
  4073c9:	cmp    edx,ebx
  4073cb:	stc    
  4073cc:	pop    es
  4073cd:	xchg   ecx,eax
  4073ce:	lock cmp edi,0x68055d96
  4073d5:	clc    
  4073d6:	adc    ch,al
  4073d8:	call   DWORD PTR [eax]
  4073da:	cmp    esi,DWORD PTR [ecx+eax*2]
  4073dd:	jmp    0xc067adbd
  4073e2:	mov    eax,ds:0xc4f9e805
  4073e7:	cmp    edi,0xfffffff2
  4073ea:	and    cl,bh
  4073ec:	adc    eax,0xff794470
  4073f1:	fsub   st(4),st
  4073f3:	xor    DWORD PTR [ebp-0x1f],0xffffffd8
  4073f7:	mov    ch,0xfd
  4073f9:	inc    esi
  4073fa:	fiadd  DWORD PTR [ebx+0x42c73575]
  407400:	shl    DWORD PTR [esi],1
	...
  407432:	add    BYTE PTR [eax],al
  407434:	jmp    0x4135:0x62c0ffee
  40743b:	jmp    0xa870b8a8
  407440:	pusha  
  407441:	test   BYTE PTR ds:0xffc499ce,dh
  407447:	add    BYTE PTR [edx+0x7706ff57],ch
  40744d:	test   BYTE PTR [ebp-0xf],dh
  407450:	enter  0xfda4,0xf6
  407454:	jmp    0x407444
  407456:	inc    DWORD PTR [eax-0x16becc6f]
  40745c:	push   0x5f283044
  407461:	test   BYTE PTR ds:0xffc4980e,dh
  407467:	ror    BYTE PTR [ebx-0x5aff00a9],0x80
  40746e:	mov    edi,0x44fe8c74
  407473:	hlt    
  407474:	adc    eax,0x8ffff414
  407479:	and    edi,0xff8e0760
  40747f:	jmp    FWORD PTR [edi-0x6b]
  407482:	call   0xffce6f74
  407487:	push   0x4a
  407489:	pop    ds
  40748a:	push   es
  40748b:	xor    BYTE PTR [ebx+0x9],bh
  40748e:	push   0xffc7ea1c
  407493:	or     BYTE PTR [bx],al
  407496:	add    BYTE PTR [eax+0x0],al
	...
  4074c8:	add    BYTE PTR [eax],al
  4074ca:	loop   0x407469
  4074cc:	sar    edi,cl
  4074ce:	test   DWORD PTR [esi],esi
  4074d0:	push   DWORD PTR [ebp+0x12]
  4074d3:	lahf   
  4074d4:	push   eax
  4074d5:	std    
  4074d6:	xchg   ebp,eax
  4074d7:	lea    ebp,[edx+0x0]
  4074da:	and    bh,BYTE PTR [eax+0x2f]
  4074dd:	inc    ecx
  4074de:	cli    
  4074df:	push   ds
  4074e0:	sbb    al,0x30
  4074e2:	mov    ebx,0xca026806
  4074e7:	push   es
  4074e8:	sub    al,0x7a
  4074eb:	mov    ecx,0x46d1ffff
  4074f0:	je     0x407508
  4074f2:	push   ebx
  4074f3:	inc    ebx
  4074f4:	hlt    
  4074f5:	(bad)  
  4074f6:	fist   WORD PTR [edx-0x613d8a01]
  4074fc:	adc    ebp,edi
  4074fe:	gs (bad) 
  407500:	push   DWORD PTR [ebp-0x52]
  407503:	lahf   
  407504:	sahf   
  407505:	rcl    BYTE PTR [ebp-0x1dff9576],1
  40750b:	add    al,0x30
  40750d:	inc    ecx
  40750e:	jp     0x40752e
  407510:	aas    
  407511:	xor    BYTE PTR [ebx],bh
  407513:	or     DWORD PTR [eax+0x2],ebp
  407516:	arpl   WORD PTR [ebx+eax*1-0x80],bp
  40751a:	mov    ecx,DWORD PTR [ebx+esi*4-0x78e39301]
  407521:	jne    0x40757e
  407523:	push   esp
  407524:	add    eax,0x1abb5cfd
  407529:	add    bl,cl
  40752b:	pop    ebp
  40752c:	rol    DWORD PTR [eax+0x0],cl
	...
  40755f:	add    BYTE PTR [ebx+0x14],ah
  407562:	(bad)  
  407563:	das    
  407564:	mov    ds:0x63021b6c,al
  407569:	ins    BYTE PTR es:[edi],dx
  40756a:	sub    eax,0xffffffe2
  40756d:	mov    esi,0xac58ff87
  407572:	adc    BYTE PTR [esi],dl
  407574:	fisubr DWORD PTR [eax]
  407576:	nop
  407577:	call   DWORD PTR [esi+0x6b758700]
  40757d:	test   dl,al
  40757f:	cld    
  407580:	or     al,0xeb
  407582:	xchg   BYTE PTR [ebp+0xf],dh
  407585:	aam    0x36
  407587:	sar    ah,1
  407589:	fiadd  DWORD PTR [esi+0x10d2f775]
  40758f:	or     bl,bh
  407591:	sub    eax,0x34e4ffb9
  407596:	ret    0x6304
  407599:	mov    eax,ds:0x6c4bec7a
  40759e:	add    ebp,edi
  4075a0:	or     eax,0xc40c112b
  4075a5:	cwde   
  4075a6:	sti    
  4075a7:	out    0x54,eax
  4075a9:	push   ds
  4075aa:	xchg   edi,edi
  4075ac:	stos   BYTE PTR es:[edi],al
  4075ad:	sub    eax,0xf717fffc
  4075b2:	xchg   edi,eax
  4075b3:	sbb    DWORD PTR [edi-0x630079c9],0x95b88132
  4075bd:	jb     0x407545
  4075bf:	add    BYTE PTR [ebx+0x5],ah
  4075c2:	jmp    0x4075ca
	...
  4075f3:	add    BYTE PTR [eax],al
  4075f5:	add    al,bl
  4075f7:	(bad)  
  4075f8:	in     al,dx
  4075f9:	cli    
  4075fa:	mov    esp,0x3b83ebf8
  4075ff:	add    eax,0xdb7a0154
  407604:	out    0x3,eax
  407606:	arpl   WORD PTR [edx+0x7044f834],ax
  40760c:	xchg   ebx,eax
  40760d:	xchg   BYTE PTR [ebp+ecx*1-0x57],dl
  407611:	adc    BYTE PTR [ebp+ebp*8+0x6f],bl
  407615:	xlat   BYTE PTR ds:[ebx]
  407616:	mov    ds:0x6f109e05,eax
  40761b:	ins    DWORD PTR es:[edi],dx
  40761c:	bound  esi,QWORD PTR [edx-0x77d7ecc]
  407622:	les    ecx,FWORD PTR [edi-0x7f9cbb2b]
  407628:	hlt    
  407629:	test   DWORD PTR [edx+eax*1],0x8f14869a
  407630:	fs dec ebx
  407632:	or     eax,0x451b6681
  407637:	push   es
  407638:	jmp    0x2bcb6440
  40763d:	test   esp,esi
  40763f:	cmp    BYTE PTR [ecx+0x4650f79b],0x86
  407646:	(bad)  
  407647:	mov    ch,BYTE PTR [ebx]
  407649:	test   esp,ebx
  40764b:	sbb    BYTE PTR [ecx+0x2fbe0e86],0x86
  407652:	int3   
  407653:	ins    DWORD PTR es:[edi],dx
  407654:	fldenv [ebx+eiz*2+0x5]
  407658:	jo     0x4075da
	...
  40768a:	add    BYTE PTR [eax],al
  40768c:	(bad)  
  40768d:	jg     0x4076a5
  40768f:	xchg   BYTE PTR [ebx],ah
  407691:	adc    BYTE PTR [ebp-0x76],ah
  407694:	arpl   WORD PTR ds:0x43ce78e9,ax
  40769a:	inc    DWORD PTR [ebp-0x14ff8764]
  4076a0:	nop
  4076a1:	cmp    bh,0xe9
  4076a4:	pop    esp
  4076a5:	jmp    0x6567:0xd0ab2b8c
  4076ac:	fwait
  4076ad:	(bad)  
  4076b0:	ins    BYTE PTR es:[edi],dx
  4076b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076b2:	add    cl,ch
  4076b4:	imul   eax,eax,0x75
  4076b7:	in     al,dx
  4076b8:	leave  
  4076b9:	mov    dh,0x0
  4076bb:	jmp    0xabd60920
  4076c0:	fnstsw WORD PTR [edi-0x1]
  4076c3:	pop    esp
  4076c4:	mov    eax,ds:0xc5115031
  4076c9:	xor    DWORD PTR [ecx-0x17],eax
  4076cc:	fdiv   DWORD PTR [eax+eiz*4-0x17]
  4076d0:	pusha  
  4076d1:	or     al,0xc0
  4076d3:	adc    al,0x2c
  4076d5:	ins    DWORD PTR es:[edi],dx
  4076d6:	xchg   esp,eax
  4076d7:	jmp    0x61a87c3c
  4076dc:	aas    
  4076dd:	(bad)  
  4076e0:	fs adc eax,ebp
  4076e3:	jbe    0x4076b6
  4076e5:	jg     0x4076e6
  4076e7:	je     0x40775d
  4076e9:	inc    ebx
  4076ea:	(bad)  
  4076eb:	pop    esi
  4076ec:	out    0x91,al
  4076ee:	push   edx
  4076ef:	add    eax,0x0
	...
  407720:	add    BYTE PTR [eax],al
  407722:	xor    ebp,edx
  407724:	out    0x12,eax
  407726:	mov    dl,0x7f
  407728:	call   FWORD PTR [ecx-0x66f00621]
  40772e:	out    0xf9,eax
  407730:	pop    es
  407731:	inc    ecx
  407732:	sar    DWORD PTR [esi-0x1],1
  407735:	cs out dx,eax
  407737:	ss iret 
  407739:	fisubr WORD PTR es:[ebx+0x63]
  40773d:	ins    BYTE PTR es:[edi],dx
  40773e:	and    DWORD PTR [ecx],esi
  407740:	mov    DWORD PTR [ebx+edx*1+0x7f],ebp
  407744:	dec    DWORD PTR [esi]
  407746:	dec    edi
  407747:	mov    WORD PTR [eax],?
  407749:	add    bl,bh
  40774b:	add    edi,edi
  40774d:	mov    ch,0x56
  40774f:	xchg   edi,edi
  407751:	jmp    DWORD PTR [edx-0x2e]
  407754:	mov    al,ds:0xbf7c7a00
  407759:	je     0x40778f
  40775b:	and    DWORD PTR [eax-0xf6b4d8],ebx
  407761:	jne    0x4077e1
  407763:	fwait
  407764:	test   eax,0xff889dd2
  407769:	mov    ch,0xe6
  40776b:	mov    edi,edi
  40776d:	(bad)  
  40776e:	jp     0x407711
  407770:	icebp  
  407771:	ror    BYTE PTR ds:0xb950508a,cl
  407777:	pop    es
  407778:	adc    BYTE PTR [eax],al
  40777a:	data16 jbe 0x4077e4
  40777d:	push   0x1a
  40777f:	(bad)  
  407780:	dec    DWORD PTR [edi-0x1e]
  407783:	add    DWORD PTR [ecx+0x0],esp
	...
  4077b5:	add    BYTE PTR [eax],al
  4077b7:	add    BYTE PTR [edx],bh
  4077b9:	sahf   
  4077ba:	add    eax,0x33bb8
  4077bf:	add    BYTE PTR [eax+0x7c],al
  4077c2:	mov    edi,0xff350374
  4077c7:	jne    0x4077cb
  4077c9:	fwait
  4077ca:	xchg   esi,eax
  4077cb:	(bad)  
  4077cc:	jge    0x407757
  4077ce:	call   0xffc9c4a4
  4077d3:	lea    eax,[edi-0x620001bc]
  4077d9:	xor    bh,bh
  4077db:	mov    ch,0xde
  4077dd:	mov    bh,bh
  4077df:	push   DWORD PTR [edx]
  4077e1:	inc    ecx
  4077e2:	mov    al,ds:0xbfffca00
  4077e7:	cmova  esi,DWORD PTR [edx-0x2]
  4077eb:	(bad)  
  4077ec:	jge    0x407777
  4077ee:	mov    ch,0xbc
  4077f0:	pop    esp
  4077f1:	mov    edi,edi
  4077f3:	call   0xa3ca5b
  4077f8:	arpl   WORD PTR [edi],cx
  4077fa:	dec    esi
  4077fb:	mov    eax,0xe88407a5
  407800:	ret    0x842e
  407803:	jmp    FWORD PTR [edx+0x37fff72a]
  407809:	jecxz  0x4077a1
  40780b:	sbb    DWORD PTR [edi+0x7f454b68],0x6c
  407812:	add    eax,DWORD PTR [eax]
  407814:	arpl   WORD PTR [edi-0x7],dx
  407817:	or     edi,DWORD PTR [ebx-0x49]
  40781a:	push   esi
  40781b:	inc    DWORD PTR [eax]
	...
  40784d:	add    BYTE PTR [ebx+esi*2+0x43],ah
  407851:	je     0x4078cc
  407853:	cmc    
  407854:	enter  0x54fb,0x41
  407858:	adc    al,0xff
  40785a:	(bad)  
  40785b:	mov    al,0x6c
  40785d:	adc    eax,0x5083a731
  407862:	cmp    al,0x19
  407864:	sub    al,0xc6
  407867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407868:	cmp    edi,0xffffffdc
  40786b:	sub    BYTE PTR [eax-0x6789d96],al
  407871:	sti    
  407872:	sbb    al,0x79
  407874:	or     ebp,eax
  407876:	dec    edi
  407877:	test   BYTE PTR [edx+0x7f790cff],0xe8
  40787e:	scas   al,BYTE PTR es:[edi]
  40787f:	ss cmp edi,0x2a
  407883:	sub    dl,BYTE PTR [eax]
  407885:	add    BYTE PTR [esi+0x27816fe3],cl
  40788b:	fadd   QWORD PTR [ecx+0x351e4ff]
  407891:	push   0x60
  407893:	aas    
  407894:	stc    
  407895:	pop    es
  407896:	retf   
  407897:	mov    edi,0xe4ccff4e
  40789c:	enter  0x3bfb,0x5
  4078a0:	in     eax,dx
  4078a1:	add    al,0x63
  4078a3:	add    eax,0x7eac896c
  4078a8:	push   ss
  4078a9:	adc    DWORD PTR [ebx],0x6d
  4078ac:	xor    eax,0xf20563a3
  4078b1:	inc    ebx
	...
  4078e2:	add    BYTE PTR [eax],al
  4078e4:	ins    BYTE PTR es:[edi],dx
  4078e5:	mov    DWORD PTR [edx+0x4],ecx
  4078e8:	arpl   WORD PTR ds:0x56207b4,ax
  4078ee:	jmp    0xe9dd5505
  4078f3:	add    esp,DWORD PTR [ebx-0x13]
  4078f6:	push   0x33
  4078f8:	and    al,BYTE PTR ds:0x7e748864
  4078fe:	into   
  4078ff:	adc    BYTE PTR [ebx],0x6d
  407902:	mov    dl,BYTE PTR [esp+ebx*2+0x7d]
  407906:	jo     0x407890
  407908:	push   ebx
  407909:	jl     0x4078c1
  40790b:	or     BYTE PTR [ebx+esi*4-0x47],0x81
  407910:	inc    esp
  407911:	jge    0x407924
  407913:	or     BYTE PTR [edx+0x5],ah
  407916:	jmp    0x97b557ab
  40791b:	sub    BYTE PTR [esi+edx*8],0x0
  40791f:	sahf   
  407920:	jnp    0x4078e8
  407922:	call   0x28766f12
  407927:	add    al,0x8b
  407929:	xchg   ebp,eax
  40792a:	mov    ecx,0x63650cc4
  40792f:	mov    ds:0x43f20563,al
  407934:	ja     0x40794c
  407936:	rol    DWORD PTR [ebx],cl
  407938:	out    0x82,al
  40793a:	pop    esi
  40793b:	sub    esp,0x6e82b97c
  407941:	or     eax,0x7cde9d51
  407946:	add    BYTE PTR ds:[eax],0x0
	...
  40797a:	push   cs
  40797b:	jbe    0x40797d
  40797d:	aaa    
  40797e:	loope  0x4079fc
  407980:	push   0x55fe5
  407985:	je     0x407972
  407987:	je     0x407987
  407989:	push   ds
  40798a:	loope  0x407961
  40798c:	addr16 jae 0x407a07
  40798f:	(bad)  
  407990:	inc    DWORD PTR [eax-0x16beca3b]
  407996:	mov    BYTE PTR [eax+esi*1+0x4f6d60a8],cl
  40799d:	push   esi
  40799e:	pusha  
  40799f:	add    eax,0x158c290b
  4079a4:	push   0xffffffe9
  4079a6:	in     eax,dx
  4079a7:	xor    bh,0xdf
  4079aa:	loop   0x407a28
  4079ac:	push   eax
  4079ad:	(bad)  
  4079ae:	je     0x4079b4
  4079b0:	call   0xffbc5de3
  4079b5:	(bad)  
  4079b6:	adc    al,0x75
  4079b8:	(bad)  
  4079b9:	mov    esi,0xa47d6ce2
  4079be:	loop   0x407a3b
  4079c0:	push   0x2
  4079c2:	mov    bh,0x42
  4079c4:	shl    DWORD PTR [esi+0x15c00fe2],1
  4079ca:	sub    ebp,0x70
  4079cd:	fldenv [ecx]
  4079cf:	jl     0x407a20
  4079d1:	add    DWORD PTR ds:0x3786ff55,0xe218ffee
  4079db:	icebp  
  4079dc:	pop    es
  4079dd:	add    DWORD PTR [eax],0x0
	...
  407a0f:	add    BYTE PTR [ebp+0x7a],dl
  407a12:	jmp    FWORD PTR [esi+0x77]
  407a15:	ror    esp,cl
  407a17:	data16 loop 0x407a06
  407a1a:	pop    edi
  407a1b:	sbb    DWORD PTR [eax],esp
  407a1d:	jl     0x407a88
  407a1f:	repz jecxz 0x407a13
  407a22:	pop    es
  407a23:	inc    ecx
  407a24:	mov    ch,0x7a
  407a26:	inc    DWORD PTR [eax]
  407a28:	and    eax,0xb305f69
  407a2d:	or     BYTE PTR [edx+0x23],ch
  407a30:	xchg   ebp,eax
  407a31:	je     0x407a3a
  407a33:	call   0x400169
  407a38:	shl    BYTE PTR [edi+0x2f],cl
  407a3b:	inc    ecx
  407a3c:	retf   0x1b69
  407a3f:	dec    edi
  407a41:	psubsb mm1,QWORD PTR [esp+edx*2+0x1fffff86]
  407a49:	cld    
  407a4a:	(bad)  
  407a4b:	jne    0x4079df
  407a4d:	out    dx,eax
  407a4e:	fwait
  407a4f:	retf   0x8495
  407a52:	leave  
  407a53:	ret    0x77e
  407a56:	push   ebp
  407a57:	mov    edx,DWORD PTR [esi-0x5a000091]
  407a5d:	inc    ebp
  407a5e:	push   DWORD PTR [ebp-0x7a]
  407a61:	test   BYTE PTR [ebp+0x8],dh
  407a64:	mov    ds:0x25ffedf6,al
  407a69:	rol    cl,1
  407a6b:	or     BYTE PTR [edx+0x54],cl
  407a6e:	mov    ch,ah
  407a70:	mov    ecx,0xc7f7c2
	...
  407aa5:	add    BYTE PTR [edi-0x7b],bh
  407aa8:	add    BYTE PTR [eax],al
  407aaa:	dec    edx
  407aab:	pop    es
  407aac:	lea    eax,[ebp-0x2a]
  407aaf:	push   esi
  407ab0:	stos   BYTE PTR es:[di],al
  407ab2:	or     cl,BYTE PTR [eax-0x1]
  407ab5:	dec    BYTE PTR [edi+0x15]
  407ab8:	push   DWORD PTR ds:0x41302d
  407abe:	repnz std 
  407ac0:	into   
  407ac1:	call   DWORD PTR [ebp+0x1474c009]
  407ac7:	nop
  407ac8:	inc    ebp
  407ac9:	clc    
  407aca:	adc    cl,BYTE PTR [eax]
  407acc:	add    bh,ch
  407ace:	aam    0x85
  407ad0:	jne    0x407ace
  407ad2:	arpl   bx,dx
  407ad4:	cmc    
  407ad5:	mul    esp
  407ad7:	push   ecx
  407ad8:	or     ebp,eax
  407ada:	cmp    edx,edx
  407adc:	jg     0x407add
  407ade:	aam    0xb1
  407ae0:	jnp    0x407aca
  407ae2:	push   cs
  407ae3:	and    DWORD PTR [eax+0xb2e9aff],eax
  407ae9:	add    BYTE PTR [esi],dl
  407aeb:	imul   DWORD PTR [esi-0x7f]
  407aee:	lahf   
  407aef:	rol    BYTE PTR [eax-0x79d45301],1
  407af5:	mov    eax,0x800ba5
  407afa:	arpl   WORD PTR [ebx+eax*1-0x75],bp
  407afe:	push   ds
  407aff:	push   0x6917c00c
  407b04:	cmp    DWORD PTR [eax],0x63
  407b07:	icebp  
  407b08:	add    eax,0xe9
	...
  407b39:	add    BYTE PTR [eax],al
  407b3b:	add    BYTE PTR [edi+0x6d],ah
  407b3e:	add    eax,DWORD PTR [eax]
  407b40:	je     0x407b13
  407b42:	adc    edi,edi
  407b44:	neg    BYTE PTR [edi+0x6b]
  407b47:	sub    DWORD PTR [ebx-0x4caf80b5],edx
  407b4d:	inc    ebx
  407b4e:	stc    
  407b4f:	pop    es
  407b50:	dec    ebx
  407b51:	ret    0xff7e
  407b54:	dec    esp
  407b55:	inc    esp
  407b56:	sti    
  407b57:	retf   
  407b58:	inc    esp
  407b59:	stos   DWORD PTR es:[edi],eax
  407b5a:	in     al,dx
  407b5b:	mov    BYTE PTR [edi-0x5100fbd3],cl
  407b61:	push   0x93130d6b
  407b66:	jg     0x407af1
  407b68:	(bad)  
  407b6a:	jge    0x407b6b
  407b6c:	sbb    al,0x14
  407b6e:	add    DWORD PTR ds:[ebx+0x6c],esp
  407b72:	nop
  407b73:	test   DWORD PTR [ecx],esp
  407b75:	bnd jle 0x407b77
  407b78:	mov    bl,0x84
  407b7a:	mov    esp,ecx
  407b7c:	cld    
  407b7d:	add    al,0x66
  407b7f:	xchg   ecx,eax
  407b80:	fiadd  WORD PTR [esi+0x5f]
  407b83:	jg     0x407b71
  407b85:	aam    0x55
  407b87:	mov    ecx,0x7f4e7aab
  407b8c:	retf   
  407b8d:	inc    ebx
  407b8e:	fs add al,0x63
  407b91:	mov    WORD PTR [eax+eax*8-0x33],fs
  407b95:	jns    0x407bcd
  407b97:	les    edx,FWORD PTR [ebp-0x7f]
  407b9a:	xchg   BYTE PTR [ebx+eiz*2],al
  407b9d:	add    eax,0x9974
	...
  407bd2:	mov    eax,ds:0xb47f1e7a
  407bd7:	push   es
  407bd8:	stc    
  407bd9:	add    esp,DWORD PTR [ebx+0x5]
  407bdc:	xchg   ebp,eax
  407bdd:	imul   edi
  407bdf:	(bad)  
  407be0:	sub    edi,DWORD PTR [esi-0x6c]
  407be3:	jns    0x407c51
  407be5:	ret    0xd538
  407be8:	add    BYTE PTR [edi+0x6be8c437],0xdb
  407bef:	xchg   edi,eax
  407bf0:	jmp    0x5485e3f8
  407bf5:	add    bh,BYTE PTR [eax-0x22]
  407bf8:	arpl   WORD PTR [eax+0x7ece7aa1],bx
  407bfe:	out    dx,al
  407bff:	ret    
  407c00:	adc    al,0xd4
  407c02:	mov    esp,0x4cc50d7f
  407c07:	popa   
  407c08:	aaa    
  407c09:	mov    eax,ds:0x43e20563
  407c0e:	mov    dh,0x3
  407c10:	xchg   edx,eax
  407c11:	ret    
  407c12:	out    0x92,eax
  407c14:	stos   DWORD PTR es:[edi],eax
  407c15:	jge    0x407c43
  407c17:	jns    0x407c7d
  407c19:	sar    DWORD PTR [eax-0x72],0x64
  407c1d:	mov    bh,0x1d
  407c1f:	jns    0x407ba7
  407c21:	jmp    0x407c0f
  407c23:	sub    eax,0xf30c0428
  407c28:	jmp    esp
  407c2a:	js     0x407c2a
  407c2c:	into   
  407c2d:	outs   dx,BYTE PTR ds:[esi]
  407c2e:	jge    0x407ca8
  407c30:	mov    ch,0x9d
  407c32:	jbe    0x407cac
  407c34:	(bad)  
  407c35:	mov    ecx,0x0
	...
  407c66:	add    BYTE PTR [eax],al
  407c68:	js     0x407cb0
  407c6a:	iret   
  407c6b:	push   esi
  407c6c:	gs js  0x407ce4
  407c6f:	stc    
  407c70:	mov    al,0x60
  407c72:	mov    eax,0x50785536
  407c77:	cdq    
  407c78:	dec    ebp
  407c79:	repnz pop es
  407c7b:	inc    ecx
  407c7c:	push   DWORD PTR [edi-0x1]
  407c7f:	cs dec eax
  407c81:	scas   eax,DWORD PTR es:[edi]
  407c82:	retf   
  407c83:	es xor eax,0x2e2b858a
  407c89:	js     0x407c8a
  407c8b:	mov    ecx,0xfbcb225
  407c90:	sbb    eax,0xc3d5e878
  407c95:	add    eax,0x8206400
  407c9a:	test   DWORD PTR [ebp-0x110087fb],ecx
  407ca0:	mov    ah,0xb9
  407ca2:	(bad)  
  407ca3:	out    0xf6,al
  407ca5:	ins    BYTE PTR es:[edi],dx
  407ca6:	pop    ds
  407ca7:	jl     0x407d10
  407ca9:	add    eax,0x77a79cff
  407cae:	dec    esi
  407cb0:	iret   
  407cb1:	jg     0x407c7e
  407cb3:	(bad)  
  407cb4:	(bad)  
  407cb5:	dec    esi
  407cb6:	ret    0x60ed
  407cb9:	ror    BYTE PTR [edx-0x3bf1d3b],cl
  407cbf:	scas   al,BYTE PTR es:[edi]
  407cc0:	xor    al,0xc
  407cc2:	call   0xffb92371
  407cc7:	jo     0x407ced
  407cc9:	jl     0x407cd6
  407ccb:	test   eax,0x0
	...
  407cfc:	add    BYTE PTR [eax],al
  407cfe:	push   esi
  407cff:	or     DWORD PTR [ecx+ebp*8+0x680560],0x4133ea
  407d0a:	lea    esi,[eax-0x5]
  407d0d:	call   0x3f44a3
  407d12:	pop    edx
  407d13:	imul   esi,DWORD PTR [eax],0x5003cb32
  407d19:	call   DWORD PTR [edi]
  407d1b:	or     al,0xe8
  407d1d:	xchg   esp,eax
  407d1e:	mov    edx,?
  407d20:	(bad)  
  407d21:	call   0x3f4a28
  407d26:	mov    dl,0xee
  407d28:	xor    BYTE PTR [ecx-0x46],al
  407d2b:	clc    
  407d2c:	je     0x407d2a
  407d2e:	and    bl,bl
  407d30:	int    0xff
  407d32:	lea    edx,[ecx+0x67]
  407d35:	xor    DWORD PTR [eax+0x4d4fff42],ebx
  407d3b:	jo     0x407d44
  407d3d:	call   0x3f770b
  407d42:	bound  esp,QWORD PTR [edx]
  407d44:	retf   
  407d45:	call   FWORD PTR [ebp+0x69]
  407d48:	or     eax,0xff03bb32
  407d4d:	jne    0x407cdd
  407d4f:	jmp    0x407d09
  407d51:	into   
  407d52:	(bad)  
  407d53:	clc    
  407d54:	dec    edi
  407d55:	push   0x41335b
  407d5a:	sub    bh,dl
  407d5c:	je     0x407d66
  407d5e:	mov    ds:0xfffd55,al
	...
  407d93:	add    BYTE PTR ds:0x1dcb05eb,ch
  407d99:	cli    
  407d9a:	sub    BYTE PTR [bx+si+0x44],cl
  407d9e:	(bad)  
  407d9f:	inc    BYTE PTR [edi-0x2367177b]
  407da5:	stc    
  407da6:	(bad)  
  407da7:	push   eax
  407da8:	push   edx
  407da9:	xor    dh,BYTE PTR [edx]
  407dab:	inc    ecx
  407dac:	cmp    dl,BYTE PTR [ebx-0x2]
  407daf:	jne    0x407e14
  407db1:	imul   esi,DWORD PTR fs:[ecx],0x1d
  407db5:	mov    BYTE PTR [eax+ebp*8-0x2],bh
  407db9:	mov    dl,0x7c
  407dbb:	dec    DWORD PTR [edx+esi*2]
  407dbe:	jg     0x407da8
  407dc0:	mov    es:0xab2aff7c,eax
  407dc6:	or     eax,DWORD PTR [eax]
  407dc8:	mov    ?,ebx
  407dca:	outs   dx,BYTE PTR ds:[esi]
  407dcb:	and    DWORD PTR [edi],0xffffffd9
  407dce:	shr    DWORD PTR [ecx+0x63],cl
  407dd1:	inc    edx
  407dd2:	pop    es
  407dd3:	call   DWORD PTR [esi+0x64]
  407dd6:	imul   edi,esi,0xffffff9c
  407dd9:	mov    edi,0x3826897b
  407dde:	mov    BYTE PTR ds:0xffc30423,bh
  407de4:	cmp    al,0x67
  407de6:	add    esi,DWORD PTR [eax+edi*2-0x6c]
  407dea:	mov    eax,ds:0xd46c2230
  407def:	out    0x1a,eax
  407df1:	icebp  
  407df2:	add    al,BYTE PTR [eax]
  407df4:	push   0x1df72c
	...
  407e29:	add    BYTE PTR [esp+edx*1],ch
  407e2c:	out    dx,eax
  407e2d:	ror    DWORD PTR [edi+esi*2+0x580fc007],cl
  407e34:	shl    DWORD PTR [edi+0x32],cl
  407e37:	mov    edx,0x5f24ffc2
  407e3c:	icebp  
  407e3d:	pop    es
  407e3e:	jnp    0x407def
  407e40:	jns    0x407e41
  407e42:	fs inc esp
  407e44:	(bad)
  407e48:	js     0x407e7d
  407e4a:	and    eax,DWORD PTR [ebp-0x48b30085]
  407e50:	jbe    0x407e00
  407e52:	mov    esp,DWORD PTR [edi-0x10]
  407e55:	(bad)  
  407e56:	leave  
  407e57:	push   edx
  407e58:	jp     0x407ecf
  407e5a:	imul   eax,DWORD PTR ds:0x762d7591,0xffffff9e
  407e61:	out    dx,al
  407e62:	xor    DWORD PTR [esi+0x1c],0x8f5e0b0c
  407e69:	jnp    0x407e7f
  407e6b:	jmp    0x407e51
  407e6d:	jp     0x407e05
  407e6f:	or     eax,0x76055991
  407e74:	jbe    0x407e64
  407e76:	inc    esi
  407e77:	jbe    0x407e6d
  407e79:	or     ecx,DWORD PTR [ebx]
  407e7b:	push   edx
  407e7c:	addr16 jnp 0x407e6b
  407e7f:	in     al,dx
  407e80:	xchg   esp,eax
  407e81:	xor    al,0xa2
  407e83:	add    eax,0x6d64f156
  407e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e89:	js     0x407e5f
  407e8b:	jne    0x407e5e
  407e8d:	add    BYTE PTR gs:[eax],al
	...
  407ec0:	xchg   ebx,eax
  407ec1:	(bad)  
  407ec2:	call   0x414dcd41
  407ec7:	cmp    al,0xbe
  407ec9:	jne    0x407ef9
  407ecb:	in     al,dx
  407ecc:	dec    esp
  407ecd:	xor    al,0xa8
  407ecf:	add    ebp,DWORD PTR [edi+ebp*8+0x78786bf0]
  407ed6:	push   ss
  407ed7:	jnp    0x407ee4
  407ed9:	mov    edi,0x7694c4d7
  407ede:	jl     0x407eeb
  407ee0:	jnp    0x407ef8
  407ee2:	cld    
  407ee3:	jp     0x407e69
  407ee5:	in     al,dx
  407ee6:	je     0x407f1c
  407ee8:	and    al,BYTE PTR ds:0x6d5cf0ee
  407eee:	clc    
  407eef:	js     0x407f5d
  407ef1:	jne    0x407f44
  407ef3:	scas   al,BYTE PTR es:[edi]
  407ef4:	xor    al,ah
  407ef6:	call   0xc13e5575
  407efb:	call   DWORD PTR [edi+0x75]
  407efe:	(bad)  
  407eff:	jp     0x407ed7
  407f01:	jno    0x407ec1
  407f03:	lock pop esp
  407f05:	pop    ebp
  407f06:	add    BYTE PTR [ebx],dh
  407f08:	mov    al,ds:0xa60eff74
  407f0d:	inc    edi
  407f0e:	add    al,0xe9
  407f10:	adc    eax,DWORD PTR [eax+0x12b6aec]
  407f16:	add    BYTE PTR ds:0xf9757471,bl
  407f1c:	cdq    
  407f1d:	cli    
  407f1e:	or     eax,DWORD PTR [esi-0x4c17f2ed]
	...
  407f54:	add    BYTE PTR [eax],al
  407f56:	jne    0x407fcc
  407f58:	push   DWORD PTR [esi-0xd]
  407f5b:	add    al,ch
  407f5d:	xchg   ecx,eax
  407f5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f5f:	je     0x407f60
  407f61:	xor    BYTE PTR [esi-0x2a4bffff],ah
  407f67:	popa   
  407f68:	sub    DWORD PTR ds:0x4dffdf54,0xffffffd3
  407f6f:	sbb    bh,bh
  407f71:	mov    esp,0xed757470
  407f76:	cmp    BYTE PTR [ebx-0x34],bl
  407f79:	cmp    DWORD PTR ss:[eax],eax
  407f7c:	shl    BYTE PTR [ebp+0x25457d8c],0xb8
  407f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f84:	xor    ch,BYTE PTR [eax+0x15757460]
  407f8a:	or     BYTE PTR [esi-0x22e6f134],bh
  407f90:	(bad)  
  407f91:	call   0xfe91328f
  407f96:	je     0x407fa4
  407f98:	call   0xffb478e9
  407f9d:	or     ebx,0xebe94137
  407fa3:	stc    
  407fa4:	sti    
  407fa5:	sar    DWORD PTR [ecx],1
  407fa7:	inc    edx
  407fa8:	call   esi
  407faa:	dec    edi
  407fab:	add    eax,0xd519be00
  407fb0:	inc    BYTE PTR [eax]
  407fb2:	pop    DWORD PTR [ecx]
  407fb4:	call   0xff2e8543
  407fb9:	push   0x0
	...
  407fea:	add    BYTE PTR [eax],al
  407fec:	mov    dl,0x3b
  407fee:	inc    ecx
  407fef:	add    BYTE PTR ds:0x29e8fb64,al
  407ff5:	retf   
  407ff6:	(bad)  
  407ff7:	call   DWORD PTR [edx+0xb]
  407ffa:	add    bh,ch
  407ffc:	mov    ah,0x59
  407ffe:	(bad)  
  407fff:	jne    0x408003
  408001:	loopne 0x408071
  408003:	jmp    ebp
  408005:	in     eax,dx
  408006:	(bad)  
  408007:	jne    0x407f8f
  408009:	loope  0x408068
  40800b:	leave  
  40800c:	jne    0x407ffc
  40800e:	enter  0x1ac2,0x8
  408012:	push   ebp
  408013:	mov    edx,DWORD PTR [esi-0x44cd3b9f]
  408019:	pop    es
  40801a:	push   DWORD PTR [ebp-0x3a]
  40801d:	fucomip st,st(0)
  40801f:	int3   
  408020:	and    eax,0xaa75feee
  408025:	push   edi
  408026:	out    0x34,eax
  408028:	ja     0x408018
  40802a:	(bad)  
  40802b:	(bad)  
  40802c:	inc    DWORD PTR [ebx]
  40802e:	push   eax
  40802f:	(bad)  
  408030:	out    dx,eax
  408031:	jmp    edi
  408033:	ds test esi,ebp
  408036:	(bad)  
  408037:	push   0x413b6b
  40803c:	jne    0x4080a2
  40803e:	or     ebp,eax
  408040:	cmp    eax,0x65fffebd
  408045:	fs (bad) 
  408048:	jb     0x408065
  40804a:	int    0xff
  40804c:	jne    0x40803a
  40804e:	je     0x408064
	...
  408080:	add    BYTE PTR [eax],al
  408082:	(bad)  
  408084:	je     0x40808e
  408086:	xchg   edx,eax
  408087:	sbb    edi,edi
  408089:	inc    DWORD PTR [ebp+0x6310c1be]
  40808f:	pop    esp
  408090:	into   
  408091:	mov    al,BYTE PTR [edi-0x20]
  408094:	ds cld 
  408096:	dec    esp
  408097:	xor    cl,BYTE PTR [eax]
  408099:	call   0xffb92251
  40809e:	push   0xea49ef9c
  4080a3:	sub    DWORD PTR [eax+0x68],edi
  4080a6:	arpl   WORD PTR [eax+ebp*2-0x42],bx
  4080aa:	mov    ebx,0x634134be
  4080af:	fwait
  4080b0:	out    dx,al
  4080b1:	sti    
  4080b2:	adc    al,0x1a
  4080b4:	or     al,0xe8
  4080b6:	fmul   DWORD PTR [ebx+0x5d7bff78]
  4080bc:	add    ebp,edi
  4080be:	mov    ebp,0xa232a704
  4080c3:	pop    esp
  4080c4:	js     0x40813b
  4080c6:	out    dx,eax
  4080c7:	jmp    0x4080b6
  4080c9:	pop    es
  4080ca:	sti    
  4080cb:	pop    edx
  4080cc:	js     0x4080cd
  4080ce:	fadd   QWORD PTR [ebp+eax*1+0x0]
  4080d2:	les    eax,FWORD PTR [edx-0x626e4815]
  4080d8:	add    edi,edi
  4080da:	dec    esi
  4080db:	xor    BYTE PTR [eax+0x75],bh
  4080de:	imul   eax,esp,0xffffffe1
  4080e1:	(bad)  
  4080e2:	mov    ah,0x23
  4080e4:	js     0x40815b
	...
  408116:	add    BYTE PTR [eax],al
  408118:	scas   eax,DWORD PTR es:[edi]
  408119:	adc    al,0xb4
  40811b:	enter  0x13a4,0x4a
  40811f:	ret    0x5c6b
  408122:	into   
  408123:	mov    al,BYTE PTR [edi-0x603c121]
  408129:	pop    ebx
  40812a:	in     eax,dx
  40812b:	add    al,0x84
  40812d:	stc    
  40812e:	or     ch,al
  408130:	xchg   esi,eax
  408131:	and    DWORD PTR [eax-0x1],edi
  408134:	jmp    0x1b04:0xf06877a9
  40813b:	lds    esp,FWORD PTR [edx+ebp*8+0x1f]
  40813f:	xor    ah,BYTE PTR [edx+0x7c31d605]
  408145:	sbb    al,0x28
  408147:	add    al,0x4c
  408149:	clc    
  40814a:	lock imul esi,ebp,0x72
  40814e:	mov    esi,0xfb88cb77
  408153:	les    esi,FWORD PTR [edx+ebp*8]
  408156:	sbb    esi,DWORD PTR [edx]
  408158:	mov    ds:0x7c31a605,al
  40815d:	sbb    al,0x28
  40815f:	add    al,0x1c
  408161:	clc    
  408162:	loopne 0x4081cf
  408164:	in     eax,dx
  408165:	jb     0x4080f5
  408167:	ja     0x4081e4
  408169:	jg     0x408126
  40816b:	les    eax,FWORD PTR [edx+ebp*8]
  40816e:	mov    edi,0x7605a231
  408173:	xor    DWORD PTR [esp+ebx*1],edi
  408176:	sub    BYTE PTR [esp+ebp*8],al
  408179:	div    eax
  40817b:	imul   eax,DWORD PTR [eax],0x0
	...
  4081ae:	gs jae 0x40820f
  4081b1:	ja     0x4081fe
  4081b3:	call   0x320f:0xe9d4c51b
  4081ba:	and    al,BYTE PTR ds:0x1c7c3146
  4081c0:	test   al,0x3
  4081c2:	mov    esp,0x3d6be0f7
  4081c7:	jae    0x4081f7
  4081c9:	ja     0x408206
  4081cb:	neg    dl
  4081cd:	les    esp,FWORD PTR [ecx+ebp*8+0x52231bd]
  4081d4:	push   ss
  4081d5:	xor    DWORD PTR [esp+ebx*1],edi
  4081d8:	test   al,0x3
  4081da:	mov    edi,?
  4081dc:	lock imul edx,DWORD PTR ds:0xb76fe73,0xffffff88
  4081e4:	add    BYTE PTR [ebx-0x71988e61],bh
  4081ea:	xor    al,ah
  4081ec:	jmp    ebp
  4081ee:	xor    ebp,DWORD PTR [edx]
  4081f0:	sub    DWORD PTR [eax],ebp
  4081f2:	addr16 jo 0x40826a
  4081f5:	loope  0x4081bf
  4081f7:	aaa    
  4081f8:	dec    dh
  4081fa:	aad    0xdd
  4081fc:	mov    ebx,edi
  4081fe:	pop    ds
  4081ff:	jno    0x408268
  408201:	push   ds
  408202:	jno    0x4081ca
  408204:	push   DWORD PTR [ebp+0x28292873]
  40820a:	addr16 jo 0x408282
  40820d:	icebp  
  40820e:	mov    eax,0x9efe0f
	...
  408243:	add    BYTE PTR [ebp+0x1fdb96dd],dl
  408249:	jno    0x4082b2
  40824b:	cs push ecx
  40824d:	(bad)  
  40824e:	inc    DWORD PTR [ebp+0x28292853]
  408254:	addr16 jo 0x4082cc
  408257:	loope  0x4081e1
  408259:	pop    es
  40825a:	(bad)  
  40825b:	outs   dx,BYTE PTR ds:[esi]
  40825c:	jne    0x40823b
  40825e:	jb     0x40827b
  408260:	push   ds
  408261:	jno    0x4082ca
  408263:	and    BYTE PTR [ecx+0x62c0ffc6],dl
  408269:	add    eax,0xfa556900
  40826e:	pop    es
  40826f:	push   ecx
  408270:	cmp    eax,0xc83eff72
  408275:	mov    DWORD PTR [edx],esi
  408277:	test   al,0x60
  408279:	fisttp QWORD PTR [ebx+edi*8-0x59]
  40827d:	jo     0x4082e6
  40827f:	jmp    0x4082e1
  408281:	add    eax,0x8931e80
  408286:	call   0xffb09dbc
  40828b:	sbb    edx,0x7a004133
  408291:	pop    esp
  408292:	cmp    BYTE PTR [edx],dh
  408294:	retf   
  408295:	add    al,0x68
  408297:	add    cl,BYTE PTR [edx-0x8007ffc]
  40829d:	sti    
  40829e:	out    0xc1,eax
  4082a0:	jg     0x40829c
  4082a2:	(bad)  
  4082a3:	push   0x4133d5
	...
  4082d8:	add    BYTE PTR [eax],al
  4082da:	mov    ds:0x3a41322c,al
  4082df:	pop    esp
  4082e0:	add    DWORD PTR [eax],eax
  4082e2:	cmp    al,BYTE PTR [edi+edi*8-0x5623cd8b]
  4082e9:	std    
  4082ea:	in     eax,dx
  4082eb:	stc    
  4082ec:	addr16 jae 0x408317
  4082ef:	inc    ebx
  4082f0:	jmp    DWORD PTR [edi-0x63]
  4082f3:	xor    eax,DWORD PTR [ecx+0x0]
  4082f6:	jb     0x4082fb
  4082f8:	add    BYTE PTR [eax],al
  4082fa:	mov    bh,dl
  4082fc:	je     0x408306
  4082fe:	loop   0x408295
  408300:	std    
  408301:	(bad)  
  408302:	frstor [eax-0x7c]
  408305:	xor    cl,BYTE PTR [ebx+0x9]
  408308:	push   0xff42b85f
  40830d:	addr16 clc 
  40830f:	add    eax,DWORD PTR [eax]
  408311:	cmp    BYTE PTR [ebp+0x60],0x7
  408315:	call   0x3f79d8
  40831a:	mov    ds:0xba41327d,al
  40831f:	pop    ebx
  408320:	pop    esi
  408321:	xor    bh,bl
  408323:	add    ebp,DWORD PTR [eax+0x2]
  408326:	retf   0x8003
  408329:	push   edi
  40832b:	sti    
  40832c:	out    0x65,eax
  40832e:	jg     0x40832a
  408330:	(bad)  
  408331:	push   0x413325
  408336:	repnz pop eax
  408338:	xor    DWORD PTR [ecx+0x63],eax
  40833b:	pop    esi
  40833c:	jmp    0x40833f
	...
  40836e:	add    BYTE PTR [eax],al
  408370:	arpl   WORD PTR [esi-0x7d],bx
  408373:	dec    DWORD PTR [esi]
  408375:	jbe    0x4083e2
  408377:	dec    esi
  408378:	jle    0x4083e8
  40837a:	je     0x4083e6
  40837c:	pop    ecx
  40837d:	ja     0x40836d
  40837f:	pop    es
  408380:	jnp    0x4083e6
  408382:	jne    0x408383
  408384:	shl    DWORD PTR fs:[eax],cl
  408387:	call   esi
  408389:	je     0x4083f6
  40838b:	call   DWORD PTR [esi+0x58]
  40838e:	je     0x4083fa
  408390:	outs   dx,DWORD PTR ds:[esi]
  408391:	aas    
  408392:	out    dx,al
  408393:	pop    es
  408394:	cmp    esi,DWORD PTR [edx-0x4fc3008a]
  40839a:	out    dx,al
  40839b:	sti    
  40839c:	xor    al,0x32
  40839e:	or     al,0xe8
  4083a0:	mov    ah,0xa8
  4083a2:	je     0x4083a3
  4083a4:	sbb    bl,BYTE PTR [ebx-0xc480001]
  4083aa:	adc    WORD PTR [esi-0x7f8bfc98],0x4
  4083b2:	ins    BYTE PTR es:[edi],dx
  4083b3:	xor    ah,BYTE PTR [edx+0x6f75745c]
  4083b9:	xchg   esp,eax
  4083ba:	cmc    
  4083bb:	leave  
  4083bc:	hlt    
  4083bd:	not    edx
  4083bf:	arpl   WORD PTR [si+0x64],bx
  4083c3:	mov    esi,0x7ede793
  4083c8:	retf   
  4083c9:	mov    ds:0xc4d4ff6b,al
  4083ce:	inc    edi
  4083cf:	(bad)  
  4083d0:	int3   
  4083d1:	mov    edi,0xf8ea
	...
  408406:	xchg   ecx,eax
  408407:	popf   
  408408:	add    edi,edi
  40840a:	ss pusha 
  40840c:	imul   ebx,DWORD PTR [ebp-0x57],0x37
  408410:	je     0x408462
  408412:	cmp    ebx,DWORD PTR [ebp+0x3]
  408415:	out    dx,eax
  408416:	in     eax,0x5
  408418:	mov    ecx,0x10fd1674
  40841d:	call   0x47b9:0x6b166e8b
  408424:	push   cs
  408425:	je     0x408422
  408427:	add    BYTE PTR [edx+0x746f7cc2],bh
  40842d:	pop    es
  40842e:	mov    esi,DWORD PTR [ecx]
  408430:	and    esi,DWORD PTR [esp+ebp*2-0x2b]
  408434:	add    BYTE PTR [ecx],0x63
  408437:	pop    esi
  408438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408439:	aam    0x5d
  40843b:	clc    
  40843c:	lock pop ebx
  40843e:	fistp  DWORD PTR [ebp-0x2a]
  408441:	jae    0x40847e
  408443:	jl     0x4083ec
  408445:	jae    0x40848b
  408447:	cmp    al,0xab
  408449:	cld    
  40844a:	cmp    al,0xd9
  40844c:	jno    0x4084ae
  40844e:	xor    al,0xf8
  408450:	in     al,0x5b
  408452:	sbb    bh,BYTE PTR [ebx]
  408454:	scas   al,BYTE PTR es:[edi]
  408455:	jae    0x4084af
  408457:	inc    ebp
  408458:	sbb    eax,0xdb508b0e
  40845d:	les    edx,FWORD PTR [esi+edi*4]
  408460:	adc    dl,0x1a
  408463:	outs   dx,BYTE PTR ds:[esi]
  408464:	mov    ss,esp
  408466:	xchg   esp,eax
  408467:	outs   dx,BYTE PTR ds:[esi]
  408468:	cld    
  408469:	sti    
	...
  40849a:	add    BYTE PTR [eax],al
  40849c:	add    al,0xe1
  40849e:	jge    0x408513
  4084a0:	hlt    
  4084a1:	pop    esp
  4084a2:	adc    eax,0xa06dec4a
  4084a7:	inc    esi
  4084a8:	pop    ebx
  4084a9:	add    eax,0x81cf7ebc
  4084ae:	and    eax,0x56054964
  4084b3:	stc    
  4084b4:	pop    esp
  4084b5:	outs   dx,BYTE PTR ds:[esi]
  4084b6:	aam    0xff
  4084b8:	lds    esi,FWORD PTR [edi]
  4084ba:	push   cs
  4084bb:	sbb    eax,0xdb510522
  4084c0:	stos   DWORD PTR es:[edi],eax
  4084c1:	ins    DWORD PTR es:[edi],dx
  4084c2:	add    BYTE PTR [esi],dh
  4084c4:	cs enter 0xc3f3,0x60
  4084c9:	outs   dx,BYTE PTR ds:[esi]
  4084ca:	jne    0x4084c9
  4084cc:	adc    eax,edi
  4084ce:	or     ebx,DWORD PTR [esi]
  4084d0:	pop    edx
  4084d1:	sub    DWORD PTR es:[eax+0x20415d60],ebp
  4084d8:	adc    BYTE PTR [esi-0x77],ch
  4084db:	lods   al,BYTE PTR ds:[esi]
  4084dc:	or     al,0xdb
  4084de:	(bad)  
  4084df:	std    
  4084e0:	jnp    0x4084f7
  4084e2:	(bad)  
  4084e3:	jl     0x408551
  4084e5:	outs   dx,BYTE PTR ds:[esi]
  4084e6:	xor    eax,0xffc447c6
  4084eb:	sar    BYTE PTR [ebp+0x3e],1
  4084ee:	(bad)  
  4084ef:	(bad)  
  4084f1:	ret    0x64f7
  4084f4:	sbb    esp,DWORD PTR [ebp+0x50]
  4084f7:	into   
  4084f8:	dec    ebx
  4084f9:	adc    edi,edi
  4084fb:	cmp    al,0x63
  4084fd:	ins    BYTE PTR es:[edi],dx
  4084fe:	xor    eax,0x6
	...
  40852f:	add    BYTE PTR [eax],al
  408531:	add    BYTE PTR [esi-0x3a],dl
  408534:	inc    eax
  408536:	push   ebp
  408537:	jmp    FWORD PTR ds:[esi+0x13efc2a7]
  40853e:	ins    BYTE PTR es:[di],dx
  408540:	jne    0x40850b
  408542:	xchg   ecx,eax
  408543:	repnz or edx,DWORD PTR [esi+0x2829244b]
  40854a:	pop    edi
  40854b:	pop    ebp
  40854c:	std    
  40854d:	mov    cl,0x71
  40854f:	ins    BYTE PTR es:[edi],dx
  408550:	mov    DWORD PTR [ebx+eax*4],esp
  408553:	jp     0x40859a
  408555:	mov    DWORD PTR [eax],edx
  408557:	ins    BYTE PTR es:[edi],dx
  408558:	jne    0x40851f
  40855a:	jno    0x40854e
  40855c:	or     esp,DWORD PTR [esi-0x65]
  40855f:	and    al,0x29
  408561:	test   al,0x60
  408563:	pop    ebp
  408564:	in     eax,0x21
  408566:	push   ecx
  408567:	ins    BYTE PTR es:[edi],dx
  408568:	mov    DWORD PTR [esp+edi*1+0x26007d88],esp
  40856f:	or     BYTE PTR [edi],cl
  408571:	test   BYTE PTR [esi],cl
  408573:	or     BYTE PTR [eax],al
  408575:	add    BYTE PTR [ecx],bh
  408577:	jne    0x408570
  408579:	add    BYTE PTR [ebp-0x75ff757c],al
  40857f:	or     BYTE PTR [ebx+0xf086e7d],al
  408585:	test   dl,bh
  408587:	pop    es
  408588:	add    BYTE PTR [eax],al
  40858a:	push   ebp
  40858b:	ins    DWORD PTR es:[edi],dx
  40858c:	daa    
  40858d:	(bad)  
  40858e:	jmp    FWORD PTR [edi-0x19]
  408591:	sub    cl,BYTE PTR [eax-0x9]
  408594:	(bad)  
  408595:	inc    DWORD PTR [eax]
	...
  4085c7:	add    bh,ch
  4085c9:	(bad)  
  4085cb:	jne    0x40854f
  4085cd:	rol    BYTE PTR [eax-0x109ba3e],1
  4085d3:	jne    0x408617
  4085d5:	div    BYTE PTR [eax+ecx*1+0x22]
  4085d9:	outs   dx,DWORD PTR ds:[esi]
  4085da:	sar    edi,0x15
  4085dd:	div    BYTE PTR [esp+esi*8+0x25]
  4085e1:	je     0x4085ea
  4085e3:	call   0x3f4979
  4085e8:	mov    ebx,0x3a13275c
  4085ed:	in     eax,0xbd
  4085ef:	jne    0x408608
  4085f1:	cmc    
  4085f2:	je     0x4085e4
  4085f4:	cmc    
  4085f5:	jae    0x4085fe
  4085f7:	call   0x3f4949
  4085fc:	loope  0x408604
  4085fe:	push   DWORD PTR [ebp-0x2e]
  408601:	cmc    
  408602:	je     0x4085f4
  408604:	jne    0x40867a
  408606:	pop    es
  408607:	call   0x3f481d
  40860c:	jne    0x408682
  40860e:	jmp    0x40860f
  408610:	mov    edi,0x883ce76f
  408615:	idiv   dh
  408617:	and    DWORD PTR [ebx+0x51],0x67
  40861b:	add    BYTE PTR [edi+0x71],cl
  40861e:	test   BYTE PTR [ebp-0x3d],bh
  408621:	pop    ecx
  408622:	test   BYTE PTR [esi],0xe8
  408625:	mov    al,ds:0x3373ff67
  40862a:	test   DWORD PTR [edi],0x0
	...
  40865c:	add    BYTE PTR [eax],al
  40865e:	mov    ebx,0x9cff431c
  408663:	push   ss
  408664:	(bad)  
  408665:	imul   esp,DWORD PTR [ebx+0xb],0xc87b07f7
  40866c:	inc    edx
  40866d:	inc    DWORD PTR [edx+edi*8+0x398bf3f6]
  408674:	inc    esi
  408675:	push   DWORD PTR [edx+ebp*2-0xa]
  408679:	sti    
  40867a:	jnp    0x4086cd
  40867c:	inc    esi
  40867d:	jmp    DWORD PTR [edx+ebx*2-0xa]
  408681:	test   DWORD PTR [ebx+0x69],0x4c54ff46
  408688:	imul   bh
  40868a:	cmp    esp,DWORD PTR [ecx+0x46]
  40868d:	inc    DWORD PTR [esp+edi*1-0xa]
  408691:	jmp    0x4086de
  408693:	pop    ecx
  408694:	inc    esi
  408695:	push   DWORD PTR [esp+ebp*4]
  408698:	mul    bl
  40869a:	cmp    esi,DWORD PTR [ecx-0x59db00b9]
  4086a0:	inc    ebp
  4086a1:	and    al,0x63
  4086a3:	sub    DWORD PTR [ebp-0x14],edi
  4086a6:	loop   0x408648
  4086a8:	jae    0x4086a1
  4086aa:	or     al,0x94
  4086ac:	fist   DWORD PTR [edx]
  4086ae:	arpl   bx,bp
  4086b0:	mov    al,0x68
  4086b2:	jo     0x408663
  4086b4:	ret    0x7cff
  4086b7:	adc    al,0x35
  4086b9:	inc    ecx
  4086ba:	arpl   WORD PTR [eiz*8-0x24a35dce],ax
  4086c1:	pop    eax
	...
  4086f2:	add    BYTE PTR [eax],al
  4086f4:	nop
  4086f5:	add    eax,0xd14b03a8
  4086fa:	sbb    ebx,eax
  4086fc:	int3   
  4086fd:	loop   0x4086b5
  4086ff:	xor    al,0x22
  408701:	add    eax,0x6a68f64e
  408706:	mov    esp,0x3edcbcfb
  40870b:	jo     0x4086b9
  40870d:	fstp   st(1)
  40870f:	add    esi,DWORD PTR [ebx+ebp*4-0x3baf483f]
  408716:	call   0xa8774cf6
  40871b:	add    edi,ebx
  40871d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40871e:	fcmovb st,st(2)
  408720:	test   dl,ah
  408722:	popa   
  408723:	xor    al,0x22
  408725:	add    eax,0xc431f091
  40872a:	call   0xa8775d0a
  40872f:	add    esp,DWORD PTR [eax+esi*8-0x24]
  408733:	jo     0x40870b
  408735:	std    
  408736:	shr    BYTE PTR [ebx],1
  408738:	push   ebp
  408739:	push   0xffffffde
  40873b:	fdiv   QWORD PTR [eax+0x5]
  40873e:	(bad)  
  40873f:	scas   al,BYTE PTR es:[edi]
  408740:	mov    ebx,0x3cc51511
  408745:	loop   0x408730
  408747:	aaa    
  408748:	mov    ds:0x70725105,al
  40874d:	(bad)  
  40874e:	call   0x28769c2e
  408753:	add    al,0x8b
  408755:	stos   BYTE PTR es:[edi],al
  408756:	fcmovb st,st(4)
	...
  408788:	add    BYTE PTR [eax],al
  40878a:	adc    al,0xe2
  40878c:	xchg   DWORD PTR [ebx],esi
  40878e:	mov    ds:0x58f99605,al
  408793:	push   0x14
  408795:	cld    
  408796:	add    al,0xf8
  408798:	xchg   BYTE PTR [edi-0xc],ch
  40879b:	ja     0x4087c1
  40879d:	jo     0x408732
  40879f:	push   0x0
  4087a1:	cld    
  4087a2:	in     al,0x6a
  4087a4:	xor    eax,0xffc47fc6
  4087a9:	push   eax
  4087aa:	adc    BYTE PTR [ebx-0x56361700],dl
  4087b0:	jne    0x408785
  4087b2:	sbb    eax,0x60e9f7c0
  4087b7:	add    eax,0x75aa2e00
  4087bc:	jmp    esi
  4087be:	pusha  
  4087bf:	add    eax,0x698ae96a
  4087c4:	imul   ebp,ecx,0xac8c69ba
  4087ca:	or     al,0xd5
  4087cc:	mov    WORD PTR [ebx+ecx*1+0x72],fs
  4087d0:	call   DWORD PTR [esi]
  4087d2:	scas   eax,DWORD PTR es:[edi]
  4087d3:	push   0x75
  4087d5:	adc    DWORD PTR [eax+esi*8],ecx
  4087d8:	sti    
  4087d9:	adc    esi,esi
  4087db:	xchg   edx,eax
  4087dc:	add    cl,ch
  4087de:	imul   ebp,DWORD PTR [ecx-0x3af6148c],0xc67f5167
  4087e8:	jmp    ebp
  4087ea:	pop    ebx
  4087eb:	std    
  4087ec:	out    0x8e,eax
	...
  40881e:	add    BYTE PTR [eax],al
  408820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408821:	push   0x7ab062ff
  408826:	test   ebp,edx
  408828:	mov    ch,0x68
  40882a:	call   FWORD PTR [ecx]
  40882c:	adc    DWORD PTR [ecx-0xc],esp
  40882f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408830:	mov    ebp,0xb06c8968
  408835:	jo     0x408836
  408837:	scas   al,BYTE PTR es:[edi]
  408838:	lea    esi,[edx+0x68859ef0]
  40883e:	call   DWORD PTR [edi+ecx*1]
  408841:	popa   
  408842:	cmc    
  408843:	xchg   edi,eax
  408844:	jne    0x4088ae
  408846:	call   DWORD PTR [eax+esi*2+0x70]
  40884a:	inc    DWORD PTR [eax]
  40884c:	(bad)  
  40884e:	loope  0x408813
  408850:	ins    DWORD PTR es:[edi],dx
  408851:	xlat   BYTE PTR ds:[ebx]
  408852:	inc    BYTE PTR [ebp+0x72]
  408855:	retf   
  408856:	xchg   esp,eax
  408857:	call   edi
  408859:	fsub   st,st(7)
  40885b:	das    
  40885c:	push   esp
  40885d:	add    al,0x0
  40885f:	leave  
  408860:	js     0x4088ce
  408862:	call   DWORD PTR [ecx+eax*2-0x38]
  408866:	add    ah,0x2e
  408869:	dec    esi
  40886a:	jmp    FWORD PTR [ecx-0x3c]
  40886d:	xlat   BYTE PTR ds:[ebx]
  40886e:	je     0x408878
  408870:	adc    ch,bh
  408872:	mov    edi,0x44e96dff
  408877:	cld    
  408878:	mov    ds:0x8a4132fb,al
  40887d:	xlat   BYTE PTR ds:[ebx]
  40887e:	je     0x408888
  408880:	jb     0x408831
  408882:	(bad)  
  408883:	inc    DWORD PTR [eax]
	...
  4088b5:	add    BYTE PTR [ebp+0x4e],ch
  4088b8:	jmp    DWORD PTR [edi-0x3e]
  4088bb:	xor    eax,DWORD PTR [ecx+0x0]
  4088be:	sar    bl,cl
  4088c0:	xor    al,BYTE PTR [ecx+0x7a]
  4088c3:	xlat   BYTE PTR ds:[ebx]
  4088c4:	xor    al,0x27
  4088c6:	mov    ds:0x9ae7ff41,eax
  4088cb:	ret    0xfffe
  4088ce:	push   ecx
  4088cf:	les    esi,FWORD PTR [ebx+0xf]
  4088d2:	mov    dl,BYTE PTR [ecx-0x2]
  4088d5:	jne    0x408919
  4088d7:	int3   
  4088d8:	xchg   esp,eax
  4088d9:	cld    
  4088da:	sub    eax,0x985e7da
  4088df:	(bad)  
  4088e1:	push   0x3a
  4088e3:	dec    esp
  4088e4:	cdq    
  4088e5:	sub    BYTE PTR [ebx+0x1],bh
  4088e8:	push   0xff43192e
  4088ed:	(bad)  
  4088ee:	aaa    
  4088ef:	and    DWORD PTR [ecx],ebp
  4088f1:	inc    ecx
  4088f2:	cli    
  4088f3:	retf   
  4088f4:	test   esi,eax
  4088f6:	arpl   WORD PTR [edi+0x12230b6d],cx
  4088fc:	std    
  4088fd:	dec    edi
  4088fe:	xchg   ebx,eax
  4088ff:	jg     0x4088f8
  408901:	pop    es
  408902:	sti    
  408903:	adc    dh,BYTE PTR [eax-0x1]
  408906:	in     al,0x85
  408908:	leave  
  408909:	ret    0xd6dc
  40890c:	fcos   
  40890e:	cmp    al,0xb6
  408910:	xor    BYTE PTR [ecx+0x63],al
  408913:	push   esi
  408914:	or     BYTE PTR [ebx],dh
  408916:	and    bl,BYTE PTR [esi-0x25]
  408919:	add    DWORD PTR [eax],eax
	...
  40894b:	add    BYTE PTR [ebx+0x5e],ah
  40894e:	sub    eax,0x16
  408951:	sbb    BYTE PTR [ebp-0x1],ch
  408954:	pop    eax
  408955:	push   ds
  408956:	clc    
  408957:	push   cs
  408958:	adc    ecx,DWORD PTR [esi-0x39948a94]
  40895e:	sar    ebx,0x94
  408961:	push   ds
  408962:	pop    esp
  408963:	xor    ah,BYTE PTR [eax+0x636a6d06]
  408969:	xchg   BYTE PTR [ecx-0x24a1ddd8],cl
  40896f:	sub    eax,0x68039d30
  408974:	popa   
  408975:	pop    esi
  408976:	add    eax,DWORD PTR [eax-0xba5685]
  40897c:	pop    esp
  40897d:	fs inc ebx
  40897f:	je     0x4089e5
  408981:	sub    al,0xd4
  408983:	(bad)  
  408984:	(bad)  
  408985:	je     0x4089e2
  408987:	sbb    DWORD PTR [edi+0x50],eax
  40898a:	ins    BYTE PTR es:[edi],dx
  40898b:	call   0xffad24fa
  408990:	leave  
  408991:	bound  ebp,QWORD PTR [ebp+esi*2+0x5b]
  408995:	push   esp
  408996:	jmp    0xd9f0ae96
  40899b:	and    bl,BYTE PTR [edx+esi*1]
  40899e:	cld    
  40899f:	out    0x93,eax
  4089a1:	add    eax,0xdc0c6ca5
  4089a6:	cld    
  4089a7:	ins    BYTE PTR es:[edi],dx
  4089a8:	mov    ?,ebp
  4089aa:	and    ch,0xf8
  4089ad:	data16 mov gs,WORD PTR [eax+eax*1+0x0]
	...
  4089e2:	outs   dx,BYTE PTR ds:[esi]
  4089e3:	imul   eax,DWORD PTR [esi+0x1f5d64f6],0xa066e444
  4089ed:	inc    ecx
  4089ee:	addr16 add eax,0x82c77914
  4089f4:	sub    eax,0xd2ce356f
  4089f9:	add    edi,DWORD PTR [ecx]
  4089fb:	(bad)  
  4089fc:	push   ebp
  4089fd:	mul    BYTE PTR [ebp+ebx*2-0x17]
  408a01:	inc    ebx
  408a02:	mov    ah,0x66
  408a04:	jo     0x4089cc
  408a06:	test   al,0x7a
  408a08:	hlt    
  408a09:	ret    
  408a0a:	jl     0x4089d0
  408a0c:	call   0x101e889
  408a11:	ret    
  408a12:	xchg   esp,eax
  408a13:	out    0xe5,al
  408a15:	add    edx,DWORD PTR [edi]
  408a17:	repnz nop
  408a19:	es dec edi
  408a1b:	(bad)  
  408a1c:	call   0x74010ef5
  408a21:	add    esp,DWORD PTR [ebx-0x6]
  408a24:	sub    bh,dh
  408a26:	dec    ebp
  408a27:	iret   
  408a28:	adc    bl,bl
  408a2a:	cwde   
  408a2b:	data16 not dl
  408a2e:	les    eax,FWORD PTR ds:0xdd155ce9
  408a34:	daa    
  408a35:	xor    BYTE PTR [edx-0x3194c6fb],ah
  408a3b:	std    
  408a3c:	ror    dh,0x45
  408a3f:	data16 into 
  408a41:	pop    esp
  408a42:	fld    QWORD PTR [edx-0x3a]
  408a45:	imul   eax,DWORD PTR [eax],0x0
	...
  408a78:	mov    ebx,0x24c4f532
  408a7d:	iret   
  408a7e:	inc    eax
  408a80:	jo     0x408a12
  408a82:	add    cl,ch
  408a84:	adc    eax,0x310674a6
  408a89:	pop    esi
  408a8a:	cmp    ch,BYTE PTR [ebp+0x1506678]
  408a90:	addr16 add eax,0xc5174fef
  408a96:	xor    ebp,DWORD PTR [eax]
  408a98:	addr16 aad 0xfe
  408a9b:	hlt    
  408a9c:	call   0x48ceb6fe
  408aa1:	callw  0xa7b6
  408aa5:	call   WORD PTR [edx+0x66]
  408aa9:	mov    edi,0xf05f1f7f
  408aae:	stc    
  408aaf:	scas   eax,DWORD PTR es:[edi]
  408ab0:	inc    esp
  408ab1:	xor    al,al
  408ab3:	nop
  408ab4:	dec    eax
  408ab5:	inc    WORD PTR [esi+0x35]
  408ab9:	xchg   edi,eax
  408aba:	cmp    dh,ah
  408abc:	mov    bl,0x78
  408abe:	(bad)  
  408abf:	mov    esp,0xe1756604
  408ac4:	cmp    BYTE PTR [ecx-0x3a07d941],dh
  408aca:	pop    ebp
  408acb:	xor    BYTE PTR ds:0xfdbc0001,bl
  408ad1:	pop    eax
  408ad2:	push   0xbe5660e9
  408ad7:	xchg   ecx,eax
  408ad8:	test   DWORD PTR [ecx],esi
  408ada:	inc    ecx
  408adb:	jmp    0x408ae0
	...
  408b0c:	add    BYTE PTR [eax],al
  408b0e:	stc    
  408b0f:	out    dx,eax
  408b10:	or     esi,esi
  408b12:	push   ebx
  408b13:	or     eax,0x64c106e8
  408b18:	call   DWORD PTR [ecx+0x66]
  408b1b:	add    eax,0xed289fef
  408b20:	xor    ebp,DWORD PTR [eax]
  408b22:	addr16 fs jne 0x408b03
  408b26:	leave  
  408b27:	fiadd  DWORD PTR [edi]
  408b29:	add    BYTE PTR [edx],dl
  408b2b:	mov    ebx,0x21e5ffe5
  408b30:	ret    0xa08
  408b33:	ss mov ch,ah
  408b36:	lds    edx,FWORD PTR [ebp+0xb]
  408b39:	call   0x3f5277
  408b3e:	adc    ecx,ecx
  408b40:	jae    0x408b5c
  408b42:	bound  ebx,QWORD PTR [esi+0x390a4133]
  408b48:	out    0xd8,eax
  408b4a:	mov    edi,0x4a50feef
  408b4f:	lock je 0x408b5a
  408b52:	loop   0x408ad7
  408b54:	(bad)  
  408b55:	inc    DWORD PTR [ebp-0x40]
  408b58:	aad    0xc1
  408b5a:	inc    ebp
  408b5b:	out    dx,eax
  408b5c:	enter  0xd2c2,0x8
  408b60:	push   ebp
  408b61:	mov    esp,DWORD PTR [esi]
  408b63:	mov    eax,esp
  408b65:	cld    
  408b66:	mov    al,ds:0x25086a08
  408b6b:	push   ebp
  408b6c:	pop    es
  408b6d:	call   0x403994
	...
  408ba2:	add    BYTE PTR [eax],al
  408ba4:	add    eax,DWORD PTR [ebp-0x5]
  408ba7:	push   0xffffff8a
  408ba9:	inc    eax
  408baa:	aas    
  408bab:	xor    eax,0x6d6808bb
  408bb0:	scas   al,BYTE PTR es:[edi]
  408bb1:	dec    ecx
  408bb2:	(bad)  
  408bb3:	(bad)  
  408bb4:	lahf   
  408bb5:	daa    
  408bb6:	sub    DWORD PTR [ecx-0x76],eax
  408bb9:	sar    BYTE PTR [ebp+0xaef65c4],0xc0
  408bc0:	out    dx,al
  408bc1:	adc    edx,DWORD PTR [eax+0x68]
  408bc4:	dec    ebx
  408bc5:	or     bh,ch
  408bc7:	mov    esi,0x874eefa
  408bcc:	xor    ch,BYTE PTR [edx+eiz*8-0x1]
  408bd0:	and    eax,0x63c18dc1
  408bd5:	cmp    ebp,DWORD PTR [ecx+0x6a]
  408bd8:	arpl   si,ax
  408bda:	ret    
  408bdb:	xor    al,0xa2
  408bdd:	outs   dx,BYTE PTR ds:[esi]
  408bde:	fist   DWORD PTR [ecx-0xfbd291]
  408be4:	push   esi
  408be5:	adc    ebx,DWORD PTR [ebx]
  408be7:	inc    ecx
  408be8:	arpl   WORD PTR [esi+0x79],ax
  408beb:	les    ecx,FWORD PTR [ebx+ebp*4]
  408bee:	std    
  408bef:	mov    edi,0x67d35a8f
  408bf4:	bound  ebp,QWORD PTR [esi+0x58]
  408bf7:	mov    esi,0x7ef9393
  408bfc:	sti    
  408bfd:	sbb    esp,DWORD PTR [ebp-0x1]
  408c00:	in     al,0x75
  408c02:	leave  
  408c03:	rcr    ah,0xda
  408c06:	(bad)  
	...
  408c38:	add    BYTE PTR [eax],al
  408c3a:	cmp    al,0xfe
  408c3c:	cs inc ecx
  408c3e:	arpl   WORD PTR [esi],si
  408c40:	aaa    
  408c41:	xor    al,0x22
  408c43:	outs   dx,BYTE PTR ds:[esi]
  408c44:	push   0xc3058435
  408c49:	(bad)  
  408c4a:	mov    esp,0xacff3f4d
  408c4f:	push   esi
  408c50:	inc    ebx
  408c51:	je     0x408ca7
  408c53:	jle    0x408c28
  408c55:	(bad)  
  408c56:	push   ss
  408c57:	pop    bx
  408c59:	or     dl,BYTE PTR [edx+esi*1+0x2d56e869]
  408c60:	imul   edi,edi,0x4fdb6df9
  408c66:	lods   eax,DWORD PTR ss:[esi]
  408c68:	add    ebp,DWORD PTR [eax+0x6f]
  408c6b:	cmp    edx,eax
  408c6d:	jmp    FWORD PTR [ebp-0x60]
  408c70:	and    BYTE PTR [ecx],ch
  408c72:	and    ch,BYTE PTR [esi+0x5b]
  408c75:	ss daa 
  408c77:	pop    esp
  408c78:	push   0xf7d9230b
  408c7d:	dec    edi
  408c7e:	mov    bl,0x5
  408c80:	out    0xee,al
  408c82:	pop    esp
  408c83:	ins    DWORD PTR es:[edi],dx
  408c84:	leave  
  408c85:	imul   edi,DWORD PTR [ebx+eiz*2],0x6323fcc1
  408c8c:	into   
  408c8d:	(bad)  [ebx+ebp*8]
  408c90:	pop    ds
  408c91:	das    
  408c92:	mov    ds:0x56335105,al
  408c97:	(bad)  
  408c98:	call   0x6adb05
  408c9d:	ret    
	...
  408cce:	add    BYTE PTR [eax],al
  408cd0:	or     al,0x6b
  408cd2:	cmc    
  408cd3:	aas    
  408cd4:	add    al,0x63
  408cd6:	repnz inc ebx
  408cd8:	ja     0x408cec
  408cda:	cmp    esp,edx
  408cdc:	cmc    
  408cdd:	fsub   st,st(0)
  408cdf:	pop    ebx
  408ce0:	mov    ch,0x63
  408ce2:	xchg   BYTE PTR [eax-0x5],ch
  408ce5:	fs test eax,0xd4efdc68
  408ceb:	push   0x4b810d4e
  408cf0:	int    0x62
  408cf2:	data16 (bad) [edx+0x62]
  408cf6:	aam    0xfb
  408cf8:	les    edx,FWORD PTR [ebx+0x57]
  408cfb:	push   0x6909efb4
  408d00:	ss or  eax,0x62a53f51
  408d06:	ds push 0xee366116
  408d0c:	pop    esp
  408d0d:	ins    DWORD PTR es:[edi],dx
  408d0e:	imul   DWORD PTR [ecx+0x4530628c]
  408d14:	pop    edi
  408d15:	add    eax,0x628f7cb4
  408d1a:	pushf  
  408d1b:	idiv   DWORD PTR [ebp+ebx*2+0x25]
  408d1f:	push   0xef290e6c
  408d24:	push   ss
  408d25:	in     eax,dx
  408d26:	xchg   edx,eax
  408d27:	mov    cs:0xb8990005,al
  408d2d:	nop
  408d2e:	(bad)  
  408d2f:	out    dx,al
  408d30:	les    esi,FWORD PTR [ebp+0x394f]
	...
  408d66:	daa    
  408d67:	(bad)  
  408d68:	dec    esi
  408d6a:	add    eax,0x1e1c64ed
  408d6f:	bound  ecx,QWORD PTR [edi-0x32]
  408d72:	xor    cl,BYTE PTR [edx]
  408d74:	call   0xffa34f93
  408d79:	and    DWORD PTR [edi],edi
  408d7b:	add    eax,0xecbdc600
  408d80:	jae    0x408d76
  408d82:	daa    
  408d83:	bound  ecx,QWORD PTR [edi-0x5a]
  408d86:	adc    cl,BYTE PTR [edx]
  408d88:	call   0xffa3116b
  408d8d:	xor    DWORD PTR [edi],edx
  408d8f:	add    al,0x0
  408d91:	jle    0x408d58
  408d93:	in     al,dx
  408d94:	cmp    DWORD PTR [edi+ebx*1-0x2d81b09e],0x43c2e809
  408d9f:	(bad)  
  408da0:	inc    DWORD PTR [ecx+0x66ffa19c]
  408da6:	xchg   BYTE PTR [edi+0x8],al
  408da9:	jmp    0x6b2d1c41
  408dae:	and    esp,DWORD PTR [ecx+0x6a]
  408db1:	jmp    0xbd3f9a40
  408db6:	test   al,0x69
  408db8:	jns    0x408e36
  408dba:	add    al,0x62
  408dbc:	mov    DWORD PTR [esp+edi*8-0x6dd1e612],ebp
  408dc3:	or     eax,ebp
  408dc5:	imul   edi,esp,0x93ff61
	...
  408dfb:	add    BYTE PTR [ecx+0x62],al
  408dfe:	jne    0x408de1
  408e00:	sbb    bl,bl
  408e02:	dec    BYTE PTR [esi]
  408e04:	add    al,0xef
  408e06:	sbb    eax,DWORD PTR [eax]
  408e08:	pop    ebp
  408e09:	push   esp
  408e0a:	pop    es
  408e0b:	call   0x3f75fe
  408e10:	dec    ebp
  408e11:	push   esi
  408e12:	sti    
  408e13:	call   edi
  408e15:	pop    esp
  408e16:	out    0x93,eax
  408e18:	jmp    edi
  408e1a:	dec    cl
  408e1c:	or     BYTE PTR [ecx-0x1],ah
  408e1f:	push   esp
  408e20:	sar    DWORD PTR [eax-0x575dff97],0x35
  408e27:	inc    ecx
  408e28:	cmp    bh,BYTE PTR ds:0x94b35ac
  408e2e:	push   DWORD PTR ds:0x410265
  408e34:	and    bl,BYTE PTR [eax-0x3e]
  408e37:	(bad)  
  408e38:	mov    ebp,0xf774bf5b
  408e3d:	xor    al,0xfe
  408e3f:	jne    0x408e3b
  408e41:	out    0x74,eax
  408e43:	or     al,0x2a
  408e45:	call   0x971296be
  408e4a:	in     al,0xff
  408e4c:	pop    ebp
  408e4d:	mov    esp,0xe74dbfdd
  408e52:	imul   eax,DWORD PTR [eax],0x4135a862
  408e58:	mov    edx,0xb35ac3c
  408e5d:	add    eax,0x268
	...
  408e92:	retf   0x8004
  408e95:	call   0x3f54b4
  408e9a:	mov    cl,0xc4
  408e9c:	jae    0x408eb3
  408e9e:	cli    
  408e9f:	out    0x74,eax
  408ea1:	adc    BYTE PTR [ebp+0x55],cl
  408ea4:	or     edx,DWORD PTR [eax+0x3d]
  408ea7:	push   ebp
  408ea8:	pop    es
  408ea9:	call   0x3f4ea7
  408eae:	push   edx
  408eaf:	ja     0x408e70
  408eb1:	jmp    DWORD PTR [ebx-0x9]
  408eb4:	gs jne 0x408f0a
  408eb7:	(bad)  
  408eb9:	or     edi,ebx
  408ebb:	retf   0x412f
  408ebe:	arpl   WORD PTR [edi-0x11],bx
  408ec1:	pop    es
  408ec2:	dec    ebx
  408ec3:	and    BYTE PTR [edi-0x1],bl
  408ec6:	dec    esp
  408ec7:	and    eax,0x21630c41
  408ecc:	jns    0x408eba
  408ece:	loopne 0x408e79
  408ed0:	push   0xf9c4636a
  408ed5:	(bad)  
  408ed6:	mov    dh,0x66
  408ed8:	pop    ebx
  408ed9:	mov    esi,0x896546e7
  408ede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408edf:	mov    ds:0x4714ffdc,al
  408ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ee5:	push   0xffc258dd
  408eea:	add    eax,0x83e7fc01
  408eef:	jg     0x408f56
  408ef1:	dec    DWORD PTR [ebx+0xef036d]
	...
  408f27:	add    BYTE PTR [ebp-0x5dca74fb],ch
  408f2d:	outs   dx,BYTE PTR ds:[esi]
  408f2e:	fs jne 0x408f9c
  408f31:	jbe    0x408ee9
  408f33:	(bad)  
  408f34:	aam    0xd6
  408f36:	fs jne 0x408f08
  408f39:	out    dx,al
  408f3a:	out    dx,al
  408f3b:	pop    es
  408f3c:	mov    ebx,0xbcffa81b
  408f41:	adc    al,0x42
  408f43:	add    al,0x63
  408f45:	mov    eax,ds:0x29e2ec78
  408f4a:	dec    esp
  408f4b:	mul    DWORD PTR [esi+eax*8+0x7d9f4576]
  408f52:	fs jne 0x408fbc
  408f55:	pop    ss
  408f56:	das    
  408f57:	daa    
  408f58:	cmp    ch,BYTE PTR [ebp+0x4eee803]
  408f5e:	js     0x408f64
  408f60:	arpl   WORD PTR [ecx+ebp*1],cx
  408f63:	cmc    
  408f64:	fistp  QWORD PTR [eax+ebp*8]
  408f67:	add    esp,DWORD PTR [ebx+0x48]
  408f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f6b:	imul   esp,DWORD PTR [ebx+0x5],0xffffffe9
  408f6f:	add    esp,DWORD PTR [ecx+ecx*8]
  408f72:	hlt    
  408f73:	fs pop esp
  408f75:	add    eax,0xed4cd9e9
  408f7a:	call   0xe92dd458
  408f7f:	jbe    0x408f27
  408f81:	pop    ecx
  408f82:	cmp    DWORD PTR [edi-0x22],esi
  408f85:	pop    ecx
  408f86:	fisub  WORD PTR [esp+ebp*1-0x4a]
  408f8a:	int    0xee
	...
  408fbc:	add    BYTE PTR [eax],al
  408fbe:	sub    al,0x5f
  408fc0:	cmp    al,0x68
  408fc2:	or     esp,edi
  408fc4:	push   edi
  408fc5:	add    esp,DWORD PTR [ebx+0xa]
  408fc8:	test   eax,0x526c67ef
  408fcd:	add    ah,BYTE PTR [ebx+0x5]
  408fd0:	adc    DWORD PTR [ebx+ecx*2+0x6e64e8c4],ecx
  408fd7:	adc    DWORD PTR [ecx-0x71a0de87],eax
  408fdd:	rcr    ecx,cl
  408fdf:	xor    eax,0x56d77e74
  408fe4:	jle    0x40904a
  408fe6:	xor    esi,DWORD PTR [ebx+0x5ea2e980]
  408fec:	outs   dx,BYTE PTR ds:[esi]
  408fed:	jp     0x408fcd
  408fef:	push   ebp
  408ff0:	pop    esi
  408ff1:	fs mov esp,0xb4a5396d
  408ff7:	pop    esi
  408ff8:	ret    
  408ff9:	add    edi,DWORD PTR [ebx]
  408ffb:	sti    
  408ffc:	push   ss
  408ffd:	ret    
  408ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fff:	pop    edi
  409000:	jl     0x409075
  409002:	xchg   esp,eax
  409003:	pop    esi
  409004:	ds fs dec esi
  409007:	add    BYTE PTR es:[eax],al
  40900a:	mov    al,ds:0x2119e75e
  40900f:	pop    esi
  409010:	push   DWORD PTR [eax-0x3]
  409013:	push   0xeaff1ef7
  409018:	inc    DWORD PTR [eax-0x16bee8ac]
  40901e:	call   DWORD PTR [edi+0xfef0]
	...
  409054:	rcr    BYTE PTR [esi-0x1],0xb4
  409058:	ja     0x409086
  40905a:	inc    ecx
  40905b:	jmp    0xef022408
  409060:	ror    BYTE PTR [ebp+eax*4-0xa1672b],0x53
  409068:	pop    edi
  409069:	in     eax,dx
  40906a:	and    bl,BYTE PTR [edi]
  40906c:	es pop esi
  40906e:	(bad)  
  40906f:	xchg   esp,eax
  409070:	(bad)  
  409071:	push   esi
  409072:	inc    esi
  409074:	sbb    BYTE PTR [eax],0x27
  409077:	adc    BYTE PTR [esi],bl
  409079:	pop    esi
  40907a:	out    0x5d,eax
  40907c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40907d:	pop    esi
  40907e:	jmp    DWORD PTR [eax-0x26]
  409081:	ins    BYTE PTR es:[edi],dx
  409082:	mul    DWORD PTR [esi+0x10ffeb80]
  409088:	pop    edx
  409089:	pop    ss
  40908a:	inc    ecx
  40908b:	jmp    0x97312911
  409090:	sbb    BYTE PTR [esi-0x1],0xbc
  409094:	mov    DWORD PTR [ecx+eax*2],ebp
  409097:	jmp    0x770167e4
  40909c:	inc    eax
  40909d:	mov    WORD PTR [ebp-0xa1d777],es
  4090a3:	je     0x40908f
  4090a5:	cmp    al,0xf7
  4090a7:	pop    esi
  4090a8:	inc    eax
  4090a9:	mov    ch,0x67
  4090ab:	push   ss
  4090ac:	dec    ecx
  4090ad:	(bad)  
  4090ae:	dec    DWORD PTR [ebp-0x36]
  4090b1:	push   esp
  4090b2:	test   DWORD PTR [eax],0x35fee225
	...
  4090e8:	add    BYTE PTR [eax],al
  4090ea:	pop    ebp
  4090eb:	xor    BYTE PTR [ecx+0x0],al
  4090ee:	and    dl,BYTE PTR [esi+0xe35ffc0]
  4090f4:	shl    BYTE PTR [ebx+eiz*2-0x7a],0xbd
  4090f9:	fmul   DWORD PTR [ebp-0x1e]
  4090fc:	inc    BYTE PTR [edi+ecx*8]
  4090ff:	push   ecx
  409100:	(bad)  
  409101:	xor    BYTE PTR ds:0x65f7dc8c,al
  409107:	call   0xa76b795b
  40910c:	(bad)  
  40910d:	jmp    DWORD PTR [ecx+0x5d]
  409110:	or     al,al
  409112:	into   
  409113:	push   cs
  409114:	push   eax
  409115:	call   0x403858
  40911a:	std    
  40911b:	(bad)  
  40911c:	fdivr  st(7),st
  40911e:	adc    eax,0x3a0014e8
  409123:	or     DWORD PTR [ebx-0x13fd143],eax
  409129:	dec    DWORD PTR [edx]
  40912b:	xor    eax,0xec978364
  409130:	idiv   bh
  409132:	mov    ch,0x8
  409134:	je     0x409192
  409136:	mov    DWORD PTR [ebp-0x182a0818],esp
  40913c:	push   DWORD PTR [ebx+0x29]
  40913f:	imul   edi,edi,0xffa665ff
  409145:	jne    0x409119
  409147:	lock push 0xffffffba
  40914a:	push   ebp
  40914b:	out    0xfe,eax
  40914d:	mov    ch,0x0
	...
  40917f:	add    dh,ah
  409181:	mov    edi,0x3d35fffe
  409186:	pop    es
  409187:	call   0x400c91
  40918c:	adc    eax,0x63f7e87d
  409191:	mov    bl,0x61
  409193:	jmp    FWORD PTR [esi]
  409195:	imul   si,WORD PTR [ecx-0x9e3c27],0xffce
  40919d:	ret    0xff59
  4091a0:	mov    WORD PTR [ebx],ss
  4091a2:	fadd   DWORD PTR [edi]
  4091a4:	jnp    0x409135
  4091a6:	popf   
  4091a7:	(bad)  
  4091a8:	jl     0x4091cd
  4091aa:	cwde   
  4091ab:	loopne 0x409219
  4091ad:	sti    
  4091ae:	popa   
  4091af:	push   esi
  4091b1:	imul   edx,DWORD PTR gs:[ebp-0x9df457],0x16
  4091b9:	and    bl,BYTE PTR [edx-0x1]
  4091bc:	push   esp
  4091bd:	pop    ebx
  4091be:	xlat   BYTE PTR ds:[ebx]
  4091bf:	pop    es
  4091c0:	cmp    ecx,DWORD PTR [ecx-0x63]
  4091c3:	inc    DWORD PTR [ebx+ebp*2-0x69]
  4091c7:	in     al,0x34
  4091c9:	arpl   WORD PTR [ecx-0x18],sp
  4091cc:	sar    BYTE PTR [eax+0x61],cl
  4091cf:	jmp    FWORD PTR [ecx+edi*2]
  4091d2:	jo     0x4091cb
  4091d4:	and    al,0x4b
  4091d6:	ins    BYTE PTR es:[edi],dx
  4091d7:	xchg   dh,bl
  4091d9:	inc    edx
  4091da:	popa   
  4091db:	dec    esi
  4091dd:	xor    eax,0x460cff59
  4091e2:	fnstsw WORD PTR [eax+eax*1+0x0]
	...
  409215:	add    BYTE PTR [ebx+ebp*4],al
  409218:	popa   
  409219:	mov    ch,0x3
  40921b:	jnp    0x40927e
  40921d:	dec    DWORD PTR [ebx]
  40921f:	(bad)  
  409220:	sahf   
  409221:	(bad)  
  409222:	in     al,dx
  409223:	jb     0x4091bc
  409225:	lock in al,dx
  409227:	mov    ah,BYTE PTR [ecx-0x18]
  40922a:	inc    esi
  40922b:	shl    DWORD PTR [eax-0x1],0xd4
  40922f:	and    BYTE PTR [ecx+ebp*8-0x6c],bl
  409233:	aam    0x60
  409235:	inc    esp
  409237:	push   eax
  409238:	pop    edi
  409239:	call   0x4b6974a
  40923e:	arpl   WORD PTR [esi+0x2b],cx
  409241:	or     al,0x63
  409243:	mov    dl,0x61
  409245:	jo     0x409227
  409247:	inc    eax
  409248:	push   ecx
  409249:	out    dx,al
  40924a:	pushf  
  40924b:	in     eax,dx
  40924c:	icebp  
  40924d:	pusha  
  40924e:	push   cs
  40924f:	or     eax,0x5bcad951
  409254:	mov    ebx,DWORD PTR ss:[esi]
  409257:	pop    ecx
  409258:	pop    esp
  409259:	(bad)  
  40925a:	je     0x409210
  40925c:	nop
  40925d:	inc    eax
  40925e:	cs (bad) 
  409260:	call   0xa8522c50
  409265:	add    esp,DWORD PTR [ecx+edx*1-0x3a]
  409269:	sub    ah,BYTE PTR [edx+0x231d1105]
  40926f:	pop    ebx
  409270:	dec    BYTE PTR [ebx+eiz*1]
  409273:	rcr    ch,cl
  409275:	mov    bl,0xbc
  409277:	add    al,0xe9
  409279:	jo     0x40927b
	...
  4092ab:	add    ch,bh
  4092ad:	pop    edx
  4092ae:	pop    esp
  4092af:	pop    esp
  4092b0:	xchg   ebx,eax
  4092b1:	pop    edx
  4092b2:	push   esp
  4092b3:	or     al,0x3b
  4092b5:	test   al,0xb7
  4092b7:	pusha  
  4092b8:	and    al,0x6e
  4092ba:	loope  0x40925a
  4092bc:	sbb    al,0x5b
  4092be:	je     0x409286
  4092c0:	or     al,0xb6
  4092c2:	push   eax
  4092c3:	jb     0x40931b
  4092c5:	(bad)  
  4092c6:	call   0x2851acb6
  4092cb:	add    al,0xfc
  4092cd:	adc    dh,cl
  4092cf:	sub    ah,BYTE PTR [edx+0x23089105]
  4092d5:	pop    ebx
  4092d6:	xchg   esi,eax
  4092d7:	or     al,0x23
  4092d9:	shl    ch,cl
  4092db:	mov    bl,0x44
  4092dd:	pop    es
  4092de:	jmp    0xf49ba853
  4092e3:	pop    ebx
  4092e4:	xor    ebx,DWORD PTR [edx+0x0]
  4092e7:	cld    
  4092e8:	pop    eax
  4092e9:	ins    DWORD PTR es:[edi],dx
  4092ea:	outs   dx,BYTE PTR ds:[esi]
  4092eb:	pop    DWORD PTR [ebx+0x5a]
  4092ee:	call   0xff9b6730
  4092f3:	rol    DWORD PTR [edx+0x10],1
  4092f6:	inc    ecx
  4092f7:	jmp    0x4148633f
  4092fc:	mov    ebx,0x346ff59
  409301:	sar    bl,1
  409303:	ds mov ch,0x2
  409306:	call   0xff9b79fe
  40930b:	and    BYTE PTR [esi],ah
  40930d:	add    DWORD PTR [eax],eax
  40930f:	mov    esp,0x0
	...
  409340:	add    BYTE PTR [eax],al
  409342:	out    0x69,eax
  409344:	and    DWORD PTR ds:0x16ff522c,0xb9fbc0d5
  40934e:	ret    
  40934f:	ror    BYTE PTR [ebx],1
  409351:	push   es
  409352:	ins    DWORD PTR es:[edi],dx
  409353:	and    ch,BYTE PTR [ecx]
  409355:	test   al,0x60
  409357:	ins    DWORD PTR es:[edi],dx
  409358:	std    
  409359:	addr16 pusha 
  40935b:	add    eax,0x8053290b
  409360:	shr    eax,0x60
  409363:	add    eax,0x58f24c7
  409368:	add    cl,ch
  40936a:	pusha  
  40936b:	inc    edx
  40936c:	inc    ebp
  40936d:	aad    0xbc
  40936f:	add    al,BYTE PTR [eax]
  409371:	jmp    0xe9a9ed80
  409376:	cli    
  409377:	pop    ecx
  409378:	imul   ebp,ecx,0x19f3bff3
  40937e:	sar    BYTE PTR [edi-0xc],cl
  409381:	sahf   
  409382:	xchg   esp,eax
  409383:	pop    edx
  409384:	push   eax
  409385:	sahf   
  409386:	or     dl,BYTE PTR [edx-0x1]
  409389:	sbb    al,0x83
  40938b:	ins    DWORD PTR es:[edi],dx
  40938c:	iret   
  40938d:	pop    edi
  40938e:	addr16 add eax,0x3d0a000b
  409394:	add    al,0xe9
  409396:	inc    esi
  409397:	add    BYTE PTR [eax],al
  409399:	add    BYTE PTR [edx-0x27],ah
  40939c:	daa    
  40939d:	inc    ecx
  40939e:	retf   0x74ba
  4093a1:	or     al,0x12
  4093a3:	mov    bh,0xbe
  4093a5:	inc    DWORD PTR [eax]
	...
  4093d7:	add    BYTE PTR ds:0x3fd08a91,cl
  4093dd:	mov    esp,?
  4093df:	imul   DWORD PTR ds:0x32524fba
  4093e5:	out    0xbe,eax
  4093e7:	dec    DWORD PTR [ebp-0x78]
  4093ea:	test   eax,esi
  4093ec:	inc    ebp
  4093ed:	mov    edx,0x7972e8fe
  4093f2:	(bad)  
  4093f3:	call   eax
  4093f5:	add    eax,0x40945b68
  4093fa:	(bad)  
  4093fb:	inc    BYTE PTR [edi]
  4093fd:	mov    cl,0xf6
  4093ff:	jmp    FWORD PTR [ebp-0x48]
  409402:	xor    al,0x27
  409404:	xor    eax,DWORD PTR [edx-0x1]
  409407:	out    0x22,eax
  409409:	js     0x40940a
  40940b:	inc    ebx
  40940d:	mov    fs,esp
  40940f:	test   DWORD PTR [ebp-0x48],0x4d920069
  409416:	xor    eax,0xb4b83a41
  40941b:	lock add eax,0x77fffeb8
  409421:	and    BYTE PTR [ecx],ch
  409423:	inc    ecx
  409424:	or     ch,ch
  409426:	sbb    DWORD PTR [edi-0x7a774833],edi
  40942c:	push   ds
  40942d:	mov    al,0xfe
  40942f:	jmp    DWORD PTR [eax+0x144d6801]
  409435:	inc    edx
  409436:	(bad)  
  409437:	(bad)  
  409438:	xchg   edi,eax
  409439:	mov    ah,0xf6
  40943b:	inc    DWORD PTR [eax]
	...
  40946d:	add    BYTE PTR [ebx+0x6f],ah
  409470:	pop    esi
  409471:	xor    eax,0xffc44584
  409476:	mov    esp,0xccff9d82
  40947b:	aad    0x87
  40947d:	loopne 0x40944b
  40947f:	iret   
  409480:	pop    ebp
  409481:	push   0x63
  409483:	push   es
  409484:	mov    dl,0x35
  409486:	and    ch,BYTE PTR [esi+0x5e]
  409489:	mov    ch,0xb3
  40948b:	scas   eax,DWORD PTR es:[edi]
  40948c:	pop    ebp
  40948d:	jmp    DWORD PTR [ecx+edi*8+0x6e222926]
  409494:	imul   ebx,esi,0xffffffd5
  409497:	mov    edi,0xb6e6895d
  40949c:	push   ebp
  40949d:	inc    DWORD PTR [esp+eax*2+0x50076803]
  4094a4:	(bad)  
  4094a5:	push   DWORD PTR [ebp-0x47]
  4094a8:	push   edx
  4094a9:	imul   DWORD PTR [edi+esi*8+0x5d]
  4094ad:	xor    eax,0xffc4453c
  4094b2:	inc    esp
  4094b3:	cs popf 
  4094b5:	call   DWORD PTR [ebp+edx*8-0x79]
  4094b9:	fcom   QWORD PTR [edi+edx*2+0x5d]
  4094bd:	add    DWORD PTR [esi],0xa
  4094c0:	push   esi
  4094c1:	(bad)  
  4094c2:	cmp    al,0x6e
  4094c4:	xlat   BYTE PTR ds:[ebx]
  4094c5:	fs loopne 0x409468
  4094c8:	jo     0x4094c1
  4094ca:	sub    al,0x37
  4094cc:	add    al,0x74
  4094ce:	xchg   ebx,ebp
  4094d0:	sahf   
  4094d1:	call   0x4094d6
	...
  409502:	add    BYTE PTR [eax],al
  409504:	adc    al,0x47
  409506:	pop    ebp
  409507:	add    BYTE PTR [edi+0xcffebfb],cl
  40950d:	inc    edi
  40950e:	sahf   
  40950f:	dec    DWORD PTR [esi-0x44fc949a]
  409515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409516:	pop    ebp
  409517:	jmp    FWORD PTR [esi-0x13aa6afc]
  40951d:	push   edi
  40951e:	sahf   
  40951f:	xlat   BYTE PTR ds:[ebx]
  409520:	pop    esp
  409521:	ins    DWORD PTR es:[edi],dx
  409522:	ds pushf 
  409524:	fcom   QWORD PTR [edi-0x72]
  409527:	xchg   edi,eax
  409528:	retf   
  409529:	dec    edi
  40952a:	xchg   BYTE PTR [ebp-0x34],bl
  40952d:	shl    eax,1
  40952f:	imul   ebx,DWORD PTR [edx],0xffffff9d
  409532:	jbe    0x409591
  409534:	mov    esp,0xb4558591
  409539:	push   edi
  40953a:	data16 xlat BYTE PTR ds:[ebx]
  40953c:	fs ins DWORD PTR es:[edi],dx
  40953e:	and    bl,BYTE PTR [esp+eiz*4-0x7c68a9a9]
  409545:	dec    edi
  409546:	dec    esi
  409547:	pop    ebp
  409548:	xchg   esp,eax
  409549:	shl    eax,1
  40954b:	imul   edi,DWORD PTR [esi],0xffffff9d
  40954e:	ds pop ebp
  409550:	test   BYTE PTR [ecx+0x577c5515],dl
  409556:	xlat   BYTE PTR cs:[ebx]
  409558:	pop    esp
  409559:	ins    DWORD PTR es:[edi],dx
  40955a:	push   es
  40955b:	pushf  
  40955c:	ins    BYTE PTR es:[edi],dx
  40955d:	push   edi
  40955e:	push   ds
  40955f:	xchg   edi,eax
  409560:	jg     0x4095b1
  409562:	push   ss
  409563:	pop    ebp
  409564:	dec    ebx
  409565:	sub    eax,0x5d52
	...
  40959a:	push   esp
  40959b:	push   edi
  40959c:	cmp    al,0x70
  40959e:	push   esp
  40959f:	push   edi
  4095a0:	(bad)  
  4095a1:	imul   esp,DWORD PTR [ebp-0x66],0xfffffff6
  4095a5:	pop    esp
  4095a6:	cmp    al,0x91
  4095a8:	add    DWORD PTR [ebp+0x34],edx
  4095ab:	push   edi
  4095ac:	shl    eax,1
  4095ae:	jmp    0xee9d7409
  4095b3:	ficomp WORD PTR gs:[esp+ebx*1+0x6e]
  4095b8:	loope  0x409552
  4095ba:	adc    al,0x57
  4095bc:	(bad)  
  4095bd:	xchg   esi,eax
  4095be:	das    
  4095bf:	dec    edi
  4095c0:	mov    esi,0x58fb5c
  4095c5:	jae    0x409566
  4095c7:	push   esi
  4095c8:	push   DWORD PTR [eax+edx*4+0x4e]
  4095cc:	jmp    DWORD PTR [esi-0x6ef82f71]
  4095d2:	dec    edi
  4095d3:	push   edi
  4095d4:	call   DWORD PTR [esi-0x690f6fc1]
  4095da:	aaa    
  4095db:	push   esi
  4095dc:	call   0xff97806e
  4095e1:	jle    0x409580
  4095e3:	dec    esi
  4095e4:	jmp    0xff96b310
  4095e9:	outs   dx,BYTE PTR ds:[esi]
  4095ea:	lea    ebx,[edx-0x18]
  4095ed:	pop    ss
  4095ee:	fadd   QWORD PTR ds:0xd223000
  4095f4:	add    BYTE PTR [ebx+ebp*8+0x34258369],bh
  4095fb:	jmp    0x4095fc
  4095fd:	rol    BYTE PTR [eax],cl
	...
  40962f:	add    BYTE PTR [esi+edx*2+0x75],bl
  409633:	icebp  
  409634:	clc    
  409635:	dec    esi
  409636:	mov    bh,0x36
  409638:	pop    ds
  409639:	mov    WORD PTR [ebp+0x2d],es
  40963c:	mov    dh,ah
  40963e:	xor    eax,0x755660a8
  409643:	icebp  
  409644:	clc    
  409645:	dec    esi
  409646:	std    
  409647:	push   ss
  409648:	mov    edi,0xb70d7556
  40964d:	rol    BYTE PTR [edi],1
  40964f:	adc    DWORD PTR [ecx-0x65010063],eax
  409655:	inc    ebx
  409656:	add    al,0xe9
  409658:	cmc    
  409659:	mov    ch,ah
  40965b:	push   0xe6f7359c
  409660:	mov    BYTE PTR [eax+0x56efdd45],cl
  409666:	jne    0x40964d
  409668:	mov    ecx,0x1e002710
  40966d:	push   esi
  40966e:	out    0x0,eax
  409670:	push   ds
  409671:	lea    eax,[eax]
  409673:	add    BYTE PTR [ecx],dl
  409675:	ret    0x850e
  409678:	lock (bad) 
  40967a:	(bad)  
  40967b:	(bad)  
  40967c:	mov    ebp,0xfa00f743
  409681:	add    DWORD PTR [eax],eax
  409683:	(bad)  
  409684:	aas    
  409685:	mov    ch,0xfe
  409687:	pop    es
  409688:	retf   0x6a01
  40968b:	add    BYTE PTR [eax+0x1],ah
  40968e:	push   0x0
  409690:	jo     0x409693
  409692:	lea    eax,[ebp+0x0]
	...
  4096c5:	add    BYTE PTR [esi-0x6f],cl
  4096c8:	mov    WORD PTR [ebp-0x14dc2],es
  4096ce:	pop    edx
  4096cf:	mov    edx,0x3445f874
  4096d4:	sti    
  4096d5:	call   0x4123a6
  4096da:	add    ecx,0xbc230573
  4096e0:	add    BYTE PTR [eax],al
  4096e2:	jp     0x40974d
  4096e4:	xchg   edi,eax
  4096e5:	sub    BYTE PTR [ebx-0x798a00ff],bh
  4096eb:	jmp    0xba8654c8
  4096f0:	mov    dl,al
  4096f2:	test   DWORD PTR [ebx-0x45ba080c],0x4f62524f
  4096fc:	mov    ebp,0x858265ff
  409701:	lock dec ebp
  409703:	mov    al,0xfe
  409705:	push   0x3a
  409707:	popa   
  409708:	retf   
  409709:	or     ecx,DWORD PTR ss:[ecx]
  40970c:	push   DWORD PTR [ebp-0x147c6]
  409712:	inc    ebp
  409713:	mul    BYTE PTR [esi]
  409715:	sub    DWORD PTR [ebx+0x9],edi
  409718:	call   0x5ab9fa42
  40971d:	(bad)  
  40971e:	jmp    0xed4c:0xcf75ee9
  409725:	(bad)  
  409726:	jl     0x4096f9
  409728:	adc    BYTE PTR [ecx+0x0],al
	...
  40975b:	add    BYTE PTR [ebx-0x65],ah
  40975e:	nop
  40975f:	lock in al,dx
  409761:	mov    ds:0x4336ff5a,eax
  409766:	sub    al,0x41
  409768:	arpl   WORD PTR [esi+0x2],si
  40976b:	mov    ebp,0x858c7bdc
  409770:	(bad)  
  409771:	jnp    0x4097cd
  409773:	(bad)  
  409774:	cmp    DWORD PTR [esi-0x15],ebx
  409777:	ror    DWORD PTR [ebp-0x900fbe3],0xce
  40977e:	push   ecx
  40977f:	push   DWORD PTR [ebx+eiz*8-0x6285d8f1]
  409786:	add    ebp,eax
  409788:	mov    edx,0xeaff5a72
  40978d:	loope  0x4097f9
  40978f:	not    DWORD PTR [ebx+eax*8+0x1b04ffec]
  409796:	adc    DWORD PTR [ecx+0x63],eax
  409799:	adc    edx,DWORD PTR [eax+0x5a1b74f0]
  40979f:	jmp    FWORD PTR [esi]
  4097a1:	or     ebp,DWORD PTR ds:0x4df66341
  4097a7:	mov    esp,0x858bf364
  4097ac:	inc    ebx
  4097ad:	repz pop ecx
  4097af:	jmp    esi
  4097b1:	call   0xb8d8ee4
  4097b6:	mov    bl,0x67
  4097b8:	sbb    al,0x9c
  4097ba:	(bad)  
  4097bb:	(bad)  
  4097bc:	cmp    eax,0xf75311
	...
  4097f1:	add    BYTE PTR [ebx+eiz*2],dh
  4097f4:	pop    ecx
  4097f5:	xor    eax,0xc3100584
  4097fa:	and    al,0x6c
  4097fc:	xchg   ecx,eax
  4097fd:	cwde   
  4097fe:	sbb    al,0x54
  409800:	loop   0x409845
  409802:	(bad)  
  409803:	out    dx,al
  409804:	imul   edx,DWORD PTR [edi+0x59c65c37],0x58d8da5f
  40980e:	xor    eax,DWORD PTR [esp+ebp*2-0x51ac13c8]
  409815:	mov    ah,0x4
  409817:	ficomp DWORD PTR [edi+0x59]
  40981a:	in     al,0x5f
  40981c:	cmc    
  40981d:	or     al,0xa3
  40981f:	fsubr  st,st(6)
  409821:	mov    bl,0xbc
  409823:	fisttp QWORD PTR [edi+0x59]
  409826:	int3   
  409827:	dec    ebx
  409828:	ins    BYTE PTR es:[edi],dx
  409829:	cmp    ah,cl
  40982b:	push   ebx
  40982c:	jle    0x40981d
  40982e:	mov    esp,0xde86e953
  409833:	xor    al,0x76
  409835:	pop    ecx
  409836:	lods   al,BYTE PTR ds:[esi]
  409837:	mov    ah,0xd0
  409839:	das    
  40983a:	ins    DWORD PTR es:[edi],dx
  40983b:	(bad)  
  40983c:	call   0x5e956e99
  409841:	pop    ecx
  409842:	xchg   esp,eax
  409843:	push   ebx
  409844:	adc    al,0x21
  409846:	cmp    al,dh
  409848:	call   0x3ed1c1b8
  40984d:	pop    ecx
  40984e:	jmp    0x6a53:0x74511189
  409855:	xchg   edi,eax
	...
  409886:	add    BYTE PTR [eax],al
  409888:	xchg   DWORD PTR [ebx+0x26],ebx
  40988b:	pop    ecx
  40988c:	arpl   WORD PTR [eiz*2-0x16fa9c83],ax
  409893:	test   BYTE PTR [esi],dl
  409895:	bound  edx,QWORD PTR [esi]
  409897:	pop    ecx
  409898:	dec    esp
  409899:	push   es
  40989a:	idiv   BYTE PTR [edi-0x2b]
  40989d:	add    eax,0x90e003e9
  4098a2:	add    BYTE PTR [ecx],al
  4098a4:	xchg   edx,eax
  4098a5:	push   edx
  4098a6:	(bad)  
  4098a7:	jmp    0xe9c22207
  4098ac:	pusha  
  4098ad:	add    eax,0x6260f968
  4098b2:	mov    esi,0xe80b25d6
  4098b7:	js     0x409896
  4098b9:	push   edx
  4098ba:	inc    esi
  4098bc:	aad    0x61
  4098be:	idiv   DWORD PTR [esi-0x1e8aad65]
  4098c4:	mov    BYTE PTR [eax-0x4b],ch
  4098c7:	scas   al,BYTE PTR es:[edi]
  4098c8:	mov    edx,DWORD PTR [edx-0x4b]
  4098cb:	xchg   ecx,eax
  4098cc:	xchg   ebx,eax
  4098cd:	push   edx
  4098ce:	call   FWORD PTR [esi-0x4117f553]
  4098d4:	in     eax,0x52
  4098d6:	dec    DWORD PTR [esi-0x79089623]
  4098dc:	sub    edx,DWORD PTR [edx+0x75]
  4098df:	icebp  
  4098e0:	dec    eax
  4098e1:	cmp    al,0xb5
  4098e3:	jbe    0x409900
  4098e5:	push   edx
  4098e6:	mov    ch,0x8d
  4098e8:	adc    edx,DWORD PTR [edx-0x1]
  4098eb:	data16 add BYTE PTR [eax],al
	...
  40991e:	xchg   ebp,eax
  40991f:	or     ch,al
  409921:	shr    ch,0x52
  409924:	call   DWORD PTR [esi-0x1b]
  409927:	test   DWORD PTR gs:[esi+0x2b],0xf8f17552
  40992f:	lahf   
  409930:	mov    ch,0x3e
  409932:	sbb    eax,DWORD PTR [esi+0x521311bd]
  409938:	(bad)  
  409939:	jmp    0x64c388da
  40993e:	xor    BYTE PTR [edx-0x1],bl
  409941:	push   ds
  409942:	pop    esp
  409943:	fst    DWORD PTR [ecx]
  409945:	(bad)  
  409946:	aad    0x2d
  409948:	test   DWORD PTR [esi],0x3052ab
  40994e:	pop    ebp
  40994f:	inc    ebx
  409950:	pop    es
  409951:	call   0x401c69
  409956:	popa   
  409957:	add    BYTE PTR [edx+0x0],ch
  40995a:	cmp    eax,0x5fe80740
  40995f:	je     0x409960
  409961:	(bad)  
  409962:	cmp    eax,0x2df7e474
  409967:	mov    edx,0xb9f289e7
  40996c:	(bad)  
  40996d:	inc    DWORD PTR [edi-0x42000923]
  409973:	loopne 0x4099f2
  409975:	mov    eax,0xb5feb9ad
  40997a:	and    al,dl
  40997c:	(bad)  
  40997d:	call   edx
  40997f:	xor    eax,0xffb7
	...
  4099b4:	std    
  4099b5:	mov    ecx,0xb9f5e0b4
  4099ba:	(bad)  
  4099bb:	call   0x400b22
  4099c0:	fnsave [ebx-0x28]
  4099c3:	idiv   DWORD PTR ds:0x725de7ba
  4099c9:	mov    edx,0xb977fffe
  4099ce:	idiv   bh
  4099d0:	cmp    eax,0x3db851e1
  4099d5:	mov    edx,0xe03245fe
  4099da:	aam    0xfd
  4099dc:	sbb    eax,0x1e75feba
  4099e1:	loope  0x40997e
  4099e3:	mov    cl,BYTE PTR [edx-0x7d3d36fb]
  4099e9:	add    eax,0x862e8b55
  4099ee:	(bad)  
  4099ef:	cld    
  4099f0:	rol    BYTE PTR ds:0x367d0d6a,1
  4099f6:	pop    es
  4099f7:	call   0xffd11c5f
  4099fc:	dec    esp
  4099fd:	out    0xc0,al
  4099ff:	sti    
  409a00:	mov    ebx,0x63410de8
  409a05:	dec    edi
  409a06:	rol    BYTE PTR [edi],1
  409a08:	dec    ebx
  409a09:	ficom  DWORD PTR [edi-0x1]
  409a0c:	sub    al,0x60
  409a0e:	sar    bl,1
  409a10:	and    al,0xb2
  409a12:	or     ebp,eax
  409a14:	in     al,dx
  409a15:	jns    0x409a6d
  409a17:	inc    DWORD PTR [eax]
	...
  409a49:	add    BYTE PTR [edx],ch
  409a4b:	popf   
  409a4c:	(bad)  
  409a4d:	push   DWORD PTR [edi+0x1f8166e3]
  409a53:	fwait
  409a54:	dec    esi
  409a55:	(bad)  
  409a56:	cld    
  409a57:	loope  0x409a18
  409a59:	sti    
  409a5a:	xchg   ebx,eax
  409a5b:	xchg   edi,eax
  409a5c:	ror    BYTE PTR [ebx],1
  409a5e:	in     al,dx
  409a5f:	pop    ecx
  409a60:	push   ds
  409a61:	sub    DWORD PTR [edx-0x16ad94a2],esp
  409a67:	pop    esi
  409a68:	add    ecx,DWORD PTR [ebx]
  409a6a:	mov    ds:0x615f8067,eax
  409a6f:	pop    esi
  409a70:	add    eax,edi
  409a72:	push   ds
  409a73:	xchg   BYTE PTR [ebx],al
  409a75:	add    BYTE PTR [ebx+0x5e],ah
  409a78:	ds inc ebp
  409a7a:	scas   eax,DWORD PTR es:[edi]
  409a7b:	xlat   BYTE PTR ds:[ebx]
  409a7c:	std    
  409a7d:	jmp    FWORD PTR [esp+eax*1+0x34636a04]
  409a84:	add    ebp,DWORD PTR [edx+0x63]
  409a87:	loope  0x409a48
  409a89:	repz xor ebp,ecx
  409a8c:	jg     0x409a82
  409a8e:	xchg   esp,eax
  409a8f:	mov    edi,0x91845055
  409a94:	pop    ebx
  409a95:	push   esi
  409a97:	adc    DWORD PTR [ebx+0x24],ebp
  409a9a:	jmp    0xa34b9dfd
  409a9f:	call   0x3eb:0x541e900
  409aa6:	arpl   bp,bx
  409aa8:	sub    BYTE PTR [ebx],0xa2
  409aab:	add    eax,0xd016
	...
  409ae0:	pop    eax
  409ae1:	pop    ebp
  409ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ae3:	call   0x89ee:0x33725044
  409aea:	cmc    
  409aeb:	dec    ebp
  409aec:	xor    al,0x50
  409aee:	cdq    
  409aef:	mov    cl,0x44
  409af1:	xor    DWORD PTR [edx],0x6c7e2456
  409af7:	push   esp
  409af8:	adc    al,0x50
  409afa:	fiadd  WORD PTR [edi+0x55de40de]
  409b00:	or     al,0xb5
  409b02:	inc    eax
  409b03:	scas   al,BYTE PTR es:[edi]
  409b04:	dec    ebp
  409b05:	(bad)  
  409b06:	call   0xb695515f
  409b0b:	push   ebp
  409b0c:	hlt    
  409b0d:	dec    edi
  409b0e:	cld    
  409b0f:	sbb    al,0x3a
  409b11:	(bad)  
  409b12:	call   0xa6cb7082
  409b17:	push   ebp
  409b18:	jmp    0x34f:0xd44d8589
  409b1f:	add    al,0x3b
  409b21:	loope  0x409af8
  409b23:	ret    0x4ec4
  409b26:	cmp    al,0x54
  409b28:	mov    ah,0x4f
  409b2a:	jle    0x409b81
  409b2c:	outs   dx,BYTE PTR ds:[esi]
  409b2d:	sub    al,al
  409b2f:	ret    0x67ac
  409b32:	stc    
  409b33:	cdq    
  409b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b35:	dec    edi
  409b36:	jo     0x409bb7
  409b38:	(bad)  
  409b39:	push   edi
  409b3a:	pop    esi
  409b3b:	push   ebp
  409b3c:	or     DWORD PTR ds:0xc655d2c1,eax
  409b42:	call   0x409b9b
	...
  409b73:	add    BYTE PTR [eax],al
  409b75:	add    dh,cl
  409b77:	push   esp
  409b78:	ds push ebp
  409b7a:	jl     0x409bcb
  409b7c:	hlt    
  409b7d:	sbb    al,0x4a
  409b7f:	(bad)  
  409b80:	(bad)  
  409b81:	call   0x2efa4e7e
  409b86:	push   cs
  409b87:	jle    0x409b0e
  409b89:	adc    DWORD PTR [esi+0x6093ff4e],ebp
  409b8f:	fnstsw WORD PTR [ebx-0x22]
  409b92:	and    DWORD PTR [edi-0x2],ecx
  409b95:	push   esp
  409b96:	scas   eax,DWORD PTR es:[edi]
  409b97:	push   esi
  409b98:	inc    DWORD PTR [esi]
  409b9a:	xchg   esi,eax
  409b9b:	sbb    BYTE PTR [edi],ah
  409b9d:	shl    BYTE PTR [ecx],1
  409b9f:	dec    edi
  409ba0:	out    0xbd,eax
  409ba2:	retf   0xff4e
  409ba5:	pusha  
  409ba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ba7:	gs mul esi
  409baa:	mov    bh,0x80
  409bac:	test   ecx,eax
  409bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409baf:	dec    esi
  409bb0:	(bad)  
  409bb1:	cmp    edi,edi
  409bb3:	xlat   BYTE PTR ds:[ebx]
  409bb4:	sub    BYTE PTR ss:[edi+0x4e],bl
  409bb8:	mov    ch,0xb9
  409bba:	scas   eax,DWORD PTR es:[edi]
  409bbb:	dec    esi
  409bbc:	(bad)  
  409bbd:	mov    esi,0x28292665
  409bc2:	addr16 pop ebp
  409bc4:	adc    DWORD PTR [ebx-0x71],esi
  409bc7:	dec    esi
  409bc8:	or     ebp,DWORD PTR [ecx+0x5c82f3ac]
  409bce:	cwde   
  409bcf:	push   esi
  409bd0:	call   DWORD PTR [esi-0x71f62634]
  409bd6:	jo     0x409c56
  409bd8:	test   DWORD PTR [ebp+0x0],esp
	...
  409c0a:	add    BYTE PTR [eax],al
  409c0c:	das    
  409c0d:	dec    esi
  409c0e:	call   DWORD PTR [edx-0x6a7ab996]
  409c14:	pop    ds
  409c15:	dec    esi
  409c16:	call   esp
  409c18:	pusha  
  409c19:	add    eax,0x3308b900
  409c1e:	mov    dh,0x5e
  409c20:	das    
  409c21:	add    BYTE PTR [ebp-0xb1e0c7],0xb9
  409c28:	js     0x409bd9
  409c2a:	ss add bl,cl
  409c2d:	add    bh,bh
  409c2f:	mov    ch,0x3a
  409c31:	sar    esi,0xff
  409c34:	xor    eax,0xbb2926ff
  409c39:	add    ch,al
  409c3b:	int    0xc3
  409c3d:	mov    ecx,0x3e8a0bfe
  409c42:	adc    al,BYTE PTR [ebx-0x8ed49]
  409c48:	push   ebp
  409c49:	dec    esi
  409c4a:	je     0x409c56
  409c4c:	repnz mov es,WORD PTR gs:[ebp-0x13eb2]
  409c54:	popa   
  409c55:	cld    
  409c56:	mov    BYTE PTR [ebp-0x13eb2],0xa
  409c5d:	add    al,BYTE PTR [eax]
  409c5f:	add    BYTE PTR [edx-0x4f],bl
  409c62:	lea    esi,[esi-0x427d4dcb]
  409c68:	push   ds
  409c69:	stos   BYTE PTR es:[edi],al
  409c6a:	(bad)  
  409c6b:	dec    DWORD PTR [edx]
  409c6d:	ss add DWORD PTR ds:[eax],0x0
	...
  409ca2:	ja     0x409cb1
  409ca4:	idiv   edi
  409ca6:	mov    ch,0x6
  409ca8:	jne    0x409ce0
  409caa:	mov    al,ds:0x16858d09
  409caf:	stos   BYTE PTR es:[edi],al
  409cb0:	(bad)  
  409cb1:	call   FWORD PTR [edx-0x121b4b4e]
  409cb7:	mov    cl,0xfe
  409cb9:	call   0x3fbab6
  409cbe:	mov    cl,0xc1
  409cc0:	jae    0x409ccb
  409cc2:	dec    ecx
  409cc3:	je     0x409c91
  409cc5:	div    DWORD PTR ds:0x8f74ffb2
  409ccb:	mov    dl,0xb4
  409ccd:	in     al,0x3d
  409ccf:	mov    dl,0xfe
  409cd1:	call   0x4008b0
  409cd6:	arpl   WORD PTR [edi],bx
  409cd8:	mov    esp,esp
  409cda:	mov    WORD PTR [esi+0x5c630052],?
  409ce0:	add    eax,DWORD PTR [ebx-0xa5384a]
  409ce6:	ins    BYTE PTR es:[edi],dx
  409ce7:	pop    ebx
  409ce8:	xlat   BYTE PTR ds:[ebx]
  409ce9:	push   0xffffffe0
  409ceb:	loopne 0x409d4c
  409ced:	neg    DWORD PTR [esp+0x4]
  409cf1:	je     0x409cb4
  409cf3:	fist   WORD PTR [eax+0x52f454e8]
  409cf9:	add    bh,cl
  409cfb:	xchg   ebp,eax
  409cfc:	fild   DWORD PTR [ecx]
  409cfe:	arpl   bx,si
  409d00:	xchg   ecx,eax
  409d01:	jmp    FWORD PTR [esi+0xa75b56]
	...
  409d37:	add    cl,dh
  409d39:	push   ebx
  409d3a:	push   edx
  409d3b:	(bad)  
  409d3c:	out    dx,al
  409d3d:	dec    edx
  409d3e:	pop    edx
  409d3f:	call   FWORD PTR [esp+eiz*2]
  409d42:	fadd   DWORD PTR [edi]
  409d44:	or     ebp,DWORD PTR [eax-0x6b]
  409d47:	dec    DWORD PTR [esp+esi*1]
  409d4a:	cwde   
  409d4b:	call   0xff92d95c
  409d50:	jbe    0x409da8
  409d52:	pop    ebx
  409d53:	in     eax,dx
  409d54:	mov    cl,0x8b
  409d56:	push   edx
  409d57:	push   DWORD PTR [esi-0x1b00a55e]
  409d5d:	fwait
  409d5e:	cwde   
  409d5f:	in     al,0xd4
  409d61:	mov    ds:0x564eff52,eax
  409d66:	pop    ebx
  409d67:	lods   eax,DWORD PTR ds:[esi]
  409d68:	adc    DWORD PTR [edx+edx*2-0x1],esi
  409d6c:	push   cs
  409d6d:	fwait
  409d6e:	pop    edx
  409d6f:	(bad)  
  409d70:	mov    esp,0xcb07d883
  409d75:	cmc    
  409d76:	xchg   ebp,eax
  409d77:	jmp    FWORD PTR [ebx+edx*8-0x24531f69]
  409d7e:	push   ecx
  409d7f:	call   DWORD PTR [esi]
  409d81:	add    eax,0x97d65bf1
  409d86:	pop    esi
  409d87:	push   edx
  409d88:	mov    WORD PTR [edx+0x4c845a4d],ss
  409d8e:	inc    ecx
  409d8f:	dec    edx
  409d90:	mov    dh,0x4c
  409d92:	inc    esi
  409d93:	push   edx
  409d94:	scas   al,BYTE PTR es:[edi]
  409d95:	pop    ecx
  409d96:	ss push edx
  409d98:	ins    BYTE PTR es:[edi],dx
  409d99:	pop    ebp
  409d9a:	jne    0x409d34
	...
  409dcc:	add    BYTE PTR [eax],al
  409dce:	fs dec esp
  409dd0:	cs cwde 
  409dd2:	dec    ebx
  409dd3:	push   esp
  409dd4:	es push edx
  409dd6:	dec    ebx
  409dd7:	xchg   esi,eax
  409dd8:	push   esp
  409dd9:	push   edx
  409dda:	dec    esp
  409ddb:	dec    esp
  409ddc:	pop    esp
  409ddd:	arpl   WORD PTR [esp+ecx*2+0xe],cx
  409de1:	pop    ebx
  409de2:	add    eax,0x34520692
  409de7:	xchg   edx,eax
  409de8:	stc    
  409de9:	pop    ecx
  409dea:	sub    al,0x4c
  409dec:	add    DWORD PTR [esi-0x12],ebp
  409def:	dec    ebx
  409df0:	out    dx,al
  409df1:	push   ecx
  409df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409df3:	dec    ebp
  409df4:	rcl    BYTE PTR [esi+edx*1-0x69ae21b4],1
  409dfb:	dec    ecx
  409dfc:	shl    DWORD PTR [edi-0x24],0x4
  409e00:	jmp    0xe93dbf3f
  409e05:	mov    dh,0xe9
  409e07:	pop    eax
  409e08:	push   0x48
  409e0a:	neg    esi
  409e0c:	call   0x348cf4ee
  409e11:	cld    
  409e12:	les    ebx,FWORD PTR [ecx+0x7dd4515b]
  409e18:	and    al,0x50
  409e1a:	cmp    eax,DWORD PTR ds:0xdd0560e9
  409e20:	mov    al,0x1a
  409e22:	and    al,BYTE PTR ds:0xc66d6711
  409e28:	call   0x3dd47d
  409e2d:	or     BYTE PTR [ebp+ebp*1+0x6eff],0x0
	...
  409e61:	add    BYTE PTR [eax],al
  409e63:	add    BYTE PTR [edx+eax*8],bl
  409e66:	idiv   DWORD PTR [ecx-0x57c8e548]
  409e6c:	pusha  
  409e6d:	(bad)  
  409e6f:	pop    ds
  409e70:	mov    al,ds:0x4a14fe4b
  409e75:	push   ds
  409e76:	inc    ecx
  409e77:	jmp    0x3ef84d94
  409e7c:	adc    al,BYTE PTR [eax]
  409e7e:	sar    BYTE PTR [ebp+0x35457e3a],0x3f
  409e85:	push   es
  409e86:	add    BYTE PTR [esi],dl
  409e88:	icebp  
  409e89:	dec    edx
  409e8a:	jne    0x409e7d
  409e8c:	test   al,0x92
  409e8e:	mov    cl,0x16
  409e90:	mov    dl,0x4a
  409e92:	jne    0x409ea5
  409e94:	xchg   edx,eax
  409e95:	shl    bl,1
  409e97:	push   es
  409e98:	or     al,0x3
  409e9a:	call   0xff8b6ebd
  409e9f:	test   BYTE PTR ds:0xf5d1e857,0x4a
  409ea6:	call   DWORD PTR [ecx+0x7a]
  409ea9:	adc    al,BYTE PTR [ecx-0x17]
  409eac:	mov    bl,0xd0
  409eae:	pop    es
  409eaf:	shl    DWORD PTR [edx-0x6c3100b7],0xd0
  409eb6:	sti    
  409eb7:	(bad)  
  409eb8:	or     eax,0xd53fe803
  409ebd:	dec    edx
  409ebe:	jmp    DWORD PTR [eax+0x1400019e]
  409ec4:	pop    esi
  409ec5:	pop    ecx
  409ec6:	sub    DWORD PTR [ebp+0x0],0x0
	...
  409ef9:	add    BYTE PTR [edi+ebx*8],ah
  409efc:	call   DWORD PTR [edx]
  409efe:	bound  ecx,QWORD PTR [edx+0x75]
  409f01:	loope  0x409f2b
  409f03:	daa    
  409f04:	mov    dl,0x8e
  409f06:	adc    edi,DWORD PTR [ebp+eax*2+0x0]
  409f0a:	fisubr WORD PTR [esi]
  409f0c:	(bad)  
  409f0d:	(bad)  
  409f0e:	fnsave [eax+ebp*2-0x78]
  409f12:	in     eax,0x47
  409f14:	jmp    DWORD PTR [edi+0x36]
  409f17:	in     eax,dx
  409f18:	inc    eax
  409f19:	add    ch,bh
  409f1b:	xor    al,BYTE PTR [edi]
  409f1d:	call   0x3fbe52
  409f22:	sub    eax,0x97fffb33
  409f27:	dec    esi
  409f28:	out    0x43,eax
  409f2a:	clc    
  409f2b:	mov    ah,0xfe
  409f2d:	leave  
  409f2e:	cmp    BYTE PTR [edx],al
  409f30:	add    BYTE PTR [ebp+0x1],dl
  409f33:	stos   BYTE PTR es:[edi],al
  409f34:	add    ah,0x8e
  409f37:	sub    bh,bh
  409f39:	imul   ebx,DWORD PTR [edx-0x4b],0xdd720874
  409f40:	mov    al,0xff
  409f42:	ins    DWORD PTR es:[edi],dx
  409f43:	iret   
  409f44:	inc    esp
  409f45:	cld    
  409f46:	loop   0x409f4d
  409f48:	add    bh,ch
  409f4a:	pushf  
  409f4b:	cs popf 
  409f4d:	aaa    
  409f4e:	sti    
  409f4f:	add    eax,0x46e5a368
  409f54:	(bad)  
  409f55:	(bad)  
  409f56:	xchg   edi,eax
  409f57:	dec    esi
  409f58:	out    0xaf,eax
  409f5a:	and    edi,DWORD PTR [edx+0x6afe]
	...
  409f90:	cli    
  409f91:	sub    eax,0x13b37df
  409f96:	push   0xff4055c6
  409f9b:	(bad)  
  409f9c:	mul    DWORD PTR [edx]
  409f9e:	sub    DWORD PTR [ecx-0x6],eax
  409fa1:	lods   eax,DWORD PTR ds:[esi]
  409fa2:	xchg   ebp,eax
  409fa3:	mov    bh,0xad
  409fa5:	mov    ecx,0x1d96c00a
  409faa:	push   0xff40b5bc
  409faf:	dec    edi
  409fb0:	repnz data16 mov bh,0xff
  409fb4:	arpl   WORD PTR [ebx-0x4c],si
  409fb7:	arpl   WORD PTR [si+0x5e],bx
  409fbb:	mov    esi,0x4116e24b
  409fc0:	arpl   sp,bp
  409fc2:	dec    esi
  409fc3:	jne    0x40a020
  409fc5:	test   BYTE PTR [edx],bl
  409fc7:	fstp   DWORD PTR [edx+ebx*8-0x1d30a9a5]
  409fce:	dec    esi
  409fcf:	call   DWORD PTR [esi]
  409fd1:	test   al,0x4e
  409fd3:	jne    0x40a030
  409fd5:	les    edi,FWORD PTR [ecx+esi*4]
  409fd8:	jl     0x409f94
  409fda:	cmp    al,0xc2
  409fdc:	pop    edi
  409fdd:	pop    esp
  409fde:	mov    eax,0x47de7f8a
  409fe3:	cld    
  409fe4:	or     eax,0xcaffd96b
  409fe9:	sub    eax,0xf66b754e
  409fee:	fidiv  DWORD PTR [eax+0x457ce84c]
	...
  40a024:	add    BYTE PTR [eax],al
  40a026:	inc    edi
  40a027:	in     al,0x18
  40a029:	inc    eax
  40a02a:	mov    ebx,DWORD PTR [ebp-0x658974fd]
  40a030:	sbb    eax,DWORD PTR [ecx+0x63]
  40a033:	fimul  WORD PTR [esi]
  40a035:	add    BYTE PTR [edi+0x54ebdba3],ch
  40a03b:	popf   
  40a03c:	add    edx,DWORD PTR [edi+0xb]
  40a03f:	outs   dx,DWORD PTR ds:[esi]
  40a040:	test   DWORD PTR [eax],eax
  40a042:	arpl   WORD PTR [ebx+0x43],dx
  40a045:	je     0x40a085
  40a047:	or     BYTE PTR [ebx+edx*8-0x42],bl
  40a04b:	aaa    
  40a04c:	dec    esi
  40a04d:	push   0xffc447ee
  40a052:	pushf  
  40a053:	ss push ecx
  40a055:	mov    bh,0xe4
  40a057:	(bad)  
  40a058:	mov    bl,0x67
  40a05a:	arpl   WORD PTR [esi+0x5e],bx
  40a05d:	mov    esi,0xd8a60533
  40a062:	fs pop ebp
  40a064:	ret    
  40a065:	cmp    ah,al
  40a067:	dec    eax
  40a068:	sbb    DWORD PTR [edx-0x10],0x625a8e48
  40a06f:	mov    edi,0xd2630d68
  40a074:	add    ch,0xa8
  40a077:	adc    al,0xa9
  40a079:	mov    WORD PTR [eax+ecx*2-0x686eb192],ds
  40a080:	and    DWORD PTR [edi],eax
  40a082:	push   ss
  40a083:	xchg   edx,eax
  40a084:	pop    esi
  40a085:	fmul   DWORD PTR [eax+0xfbdc48]
	...
  40a0bb:	add    BYTE PTR [eax+eax*8-0x578bb169],al
  40a0c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0c3:	cmp    al,0xa1
  40a0c5:	add    ecx,ebp
  40a0c7:	mov    eax,0x476a59d9
  40a0cc:	pop    edi
  40a0cd:	fucomi st,st(0)
  40a0cf:	fnstenv [edx+0x48]
  40a0d2:	pushf  
  40a0d3:	sti    
  40a0d4:	inc    esp
  40a0d5:	pop    esi
  40a0d6:	pop    ecx
  40a0d7:	dec    esi
  40a0d8:	inc    esp
  40a0d9:	jle    0x40a087
  40a0db:	dec    edi
  40a0dc:	retf   
  40a0dd:	add    eax,0xdcf55ee9
  40a0e2:	out    dx,eax
  40a0e3:	or     esp,DWORD PTR [edx+0x6b039105]
  40a0e9:	(bad)  
  40a0ea:	call   0x13e373d
  40a0ef:	xchg   esp,eax
  40a0f0:	cmp    ecx,DWORD PTR [eax-0x1a]
  40a0f3:	dec    ebp
  40a0f4:	xchg   esi,eax
  40a0f5:	dec    ecx
  40a0f6:	(bad)  
  40a0f8:	pop    esp
  40a0f9:	pop    ebp
  40a0fa:	jecxz  0x40a08e
  40a0fc:	cld    
  40a0fd:	inc    edi
  40a0fe:	mov    al,ds:0x1c055f42
  40a103:	jns    0x40a104
  40a105:	test   DWORD PTR [ebp+0x47ec30],esp
  40a10b:	mov    dh,0x5c
  40a10d:	ret    0x19fb
  40a110:	ror    BYTE PTR es:[ebx],cl
  40a113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a114:	je     0x40a136
  40a116:	sub    DWORD PTR [eax],ebp
  40a118:	pop    edi
  40a119:	pop    ebp
  40a11a:	int    0x6c
  40a11c:	addr16 add eax,0xa90b
	...
  40a152:	mov    dh,0x80
  40a154:	mov    eax,ds:0xc70560e8
  40a159:	and    al,0x17
  40a15b:	add    eax,0x4060e900
  40a160:	inc    ebp
  40a161:	jne    0x40a189
  40a163:	add    BYTE PTR [eax],al
  40a165:	jmp    0xe9a9e914
  40a16a:	stos   BYTE PTR es:[edi],al
  40a16b:	inc    edi
  40a16c:	imul   ebp,ecx,0xb9f3c1fd
  40a172:	cmc    
  40a173:	xor    esp,0x50481e3e
  40a179:	mov    WORD PTR ds:[edi-0x1],cs
  40a17d:	mov    esp,0x649f5dac
  40a182:	pop    edi
  40a183:	add    eax,0x22b290b
  40a188:	jmp    0x460312
  40a18d:	or     eax,0xa7e9411d
  40a193:	ror    BYTE PTR [ebx],1
  40a195:	adc    DWORD PTR [ecx-0xf010071],esp
  40a19b:	jnp    0x40a16d
  40a19d:	fs in  al,0x51
  40a1a0:	imul   esi
  40a1a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1a3:	mov    ch,0x51
  40a1a5:	shl    edx,1
  40a1a7:	(bad)  
  40a1a8:	(bad)  
  40a1a9:	fimul  WORD PTR [ecx-0x50210f80]
  40a1af:	inc    esi
  40a1b0:	call   0xff877596
	...
  40a1e5:	add    BYTE PTR [eax],al
  40a1e7:	add    BYTE PTR [eax+0x62266801],dl
  40a1ed:	inc    edx
  40a1ee:	(bad)  
  40a1ef:	(bad)  
  40a1f0:	pop    edi
  40a1f1:	mov    dl,0xf6
  40a1f3:	inc    DWORD PTR ds:0xb32734ba
  40a1f9:	inc    ebx
  40a1fa:	jmp    edi
  40a1fc:	shl    BYTE PTR [eax-0x1],cl
  40a1ff:	inc    DWORD PTR [ebx+0x7f]
  40a202:	in     al,0xf7
  40a204:	in     eax,0xb9
  40a206:	imul   eax,DWORD PTR [eax],0x41374f52
  40a20c:	mov    edx,0x1df0b4b9
  40a211:	mov    ecx,0x21cffffe
  40a216:	sub    DWORD PTR [ecx+0x7a],eax
  40a219:	stos   BYTE PTR es:[edi],al
  40a21a:	jmp    0x88f9c7d4
  40a21f:	test   DWORD PTR [esi],esp
  40a221:	mov    cl,0xfe
  40a223:	jmp    DWORD PTR [eax+0x621d6802]
  40a229:	inc    edx
  40a22a:	(bad)  
  40a22b:	(bad)  
  40a22c:	out    dx,eax
  40a22d:	mov    cl,0xf6
  40a22f:	call   DWORD PTR [ebp+0x632734b9]
  40a235:	inc    edx
  40a236:	jmp    edi
  40a238:	xchg   esi,eax
  40a239:	outs   dx,DWORD PTR ds:[esi]
  40a23a:	(bad)  
  40a23b:	call   ebx
  40a23d:	jg     0x40a227
  40a23f:	not    DWORD PTR [ebp-0x47]
  40a242:	mov    WORD PTR [ebp-0x14e7a],es
  40a248:	retf   0x2e29
  40a24b:	cmp    BYTE PTR [eax],al
	...
  40a27d:	add    bl,bh
  40a27f:	add    edi,edi
  40a281:	mov    ch,0x1a
  40a283:	mov    dl,0xfe
  40a285:	inc    DWORD PTR ds:0x3b2926f0
  40a28b:	add    eax,ebp
  40a28d:	test   eax,0xbfeb9ef
  40a292:	arpl   WORD PTR [eax+edx*8+0x2878e018],bx
  40a299:	imul   esp
  40a29b:	add    BYTE PTR ds:[ebp+0x53],dh
  40a29f:	xchg   DWORD PTR [edi+ecx*4],edx
  40a2a2:	out    0x3b,al
  40a2a4:	push   ebx
  40a2a5:	call   esp
  40a2a7:	jmp    0x40a304
  40a2a9:	jbe    0x40a2bc
  40a2ab:	lahf   
  40a2ac:	dec    ebx
  40a2ad:	jmp    0x40a31e
  40a2af:	push   ebx
  40a2b0:	inc    ebx
  40a2b1:	je     0x40a318
  40a2b3:	or     al,0x5c
  40a2b5:	push   0xfffffff1
  40a2b7:	jbe    0x40a304
  40a2b9:	(bad)  
  40a2ba:	out    0x7b,al
  40a2bc:	push   ebx
  40a2bd:	jmp    DWORD PTR [eax+esi*1-0x249cfffd]
  40a2c4:	mov    ah,ah
  40a2c6:	mov    esi,ss
  40a2c8:	dec    edx
  40a2c9:	add    BYTE PTR [edi],dl
  40a2cb:	xchg   DWORD PTR [esi+0x4aae77bd],eax
  40a2d1:	jmp    DWORD PTR [ebx+0x28]
  40a2d4:	mov    ecx,0x52c3b682
  40a2d9:	jmp    FWORD PTR [ebx+ebx*2-0x31]
  40a2dd:	inc    esp
  40a2de:	sti    
  40a2df:	pop    ebx
  40a2e0:	add    ebp,edi
	...
  40a312:	add    BYTE PTR [eax],al
  40a314:	sbb    eax,0x4b07d0fc
  40a319:	out    dx,al
  40a31a:	cdq    
  40a31b:	dec    DWORD PTR [esp+ebp*8-0x70]
  40a31f:	in     al,dx
  40a320:	dec    esp
  40a321:	and    al,0x4b
  40a323:	push   DWORD PTR [esi+0x4155b26]
  40a329:	adc    al,0x4b
  40a32b:	push   esi
  40a32d:	push   ss
  40a32e:	push   ebx
  40a32f:	jmp    DWORD PTR [esp+eax*2]
  40a332:	rol    BYTE PTR [edi],1
  40a334:	or     esi,DWORD PTR [edx+ebx*4]
  40a337:	call   DWORD PTR [esp+esi*1]
  40a33a:	nop
  40a33b:	in     al,0x14
  40a33d:	push   es
  40a33e:	out    0x4a,al
  40a340:	add    al,0xbb
  40a342:	lock pop ebx
  40a344:	cli    
  40a345:	jae    0x40a31d
  40a347:	dec    edx
  40a348:	hlt    
  40a349:	jp     0x40a314
  40a34b:	push   edx
  40a34c:	in     al,dx
  40a34d:	inc    esp
  40a34e:	(bad)  
  40a34f:	rcr    BYTE PTR [ebp+ebp*1+0x70],1
  40a353:	cdq    
  40a354:	fadd   QWORD PTR [esi+esi*4-0x70]
  40a358:	mov    edi,0xbb4aae3c
  40a35d:	cmp    bl,BYTE PTR [eax+0x4a]
  40a360:	les    eax,FWORD PTR [esp+edx*2+0x57]
  40a364:	mov    ah,0x44
  40a366:	xchg   esi,eax
  40a367:	pop    ebx
  40a368:	leave  
  40a369:	jbe    0x40a2f9
  40a36b:	dec    edx
  40a36c:	lods   al,BYTE PTR ds:[esi]
  40a36d:	jp     0x40a300
  40a36f:	push   edx
  40a370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a371:	inc    esp
  40a372:	xchg   ecx,eax
  40a373:	sub    dl,dl
  40a375:	inc    esp
  40a376:	jbe    0x40a3c2
	...
  40a3a8:	add    BYTE PTR [eax],al
  40a3aa:	into   
  40a3ab:	xor    eax,0x2d8c4a76
  40a3b0:	cmp    eax,0x5e448494
  40a3b5:	shl    BYTE PTR [esi+ebp*1-0x39],0x49
  40a3ba:	je     0x40a400
  40a3bc:	dec    esi
  40a3bd:	shr    BYTE PTR [eax+0x2d],1
  40a3c0:	out    0x7f,eax
  40a3c2:	arpl   WORD PTR ds:0x56b4530,ax
  40a3c8:	pushf  
  40a3c9:	jle    0x40a412
  40a3cb:	mov    BYTE PTR ds:0x9305b947,ah
  40a3d1:	test   BYTE PTR [ebp-0x46],0xf0
  40a3d5:	pop    ebx
  40a3d6:	inc    ebp
  40a3d7:	jae    0x40a3ef
  40a3d9:	dec    edx
  40a3da:	jmp    0xa7fd:0x75db0cc9
  40a3e1:	add    esp,DWORD PTR [edx+edi*4]
  40a3e4:	lock pop ebx
  40a3e6:	jne    0x40a42b
  40a3e8:	add    dh,dh
  40a3ea:	stos   BYTE PTR es:[edi],al
  40a3eb:	inc    esp
  40a3ec:	jne    0x40a3db
  40a3ee:	call   0xff73:0x10d107ba
  40a3f5:	fidivr WORD PTR [eax]
  40a3f7:	inc    edi
  40a3f8:	add    al,0xe9
  40a3fa:	lds    ecx,FWORD PTR [esi+0x41a36aec]
  40a400:	push   0xffffffe9
  40a402:	push   es
  40a403:	sbb    bh,bh
  40a405:	xor    al,0xdf
  40a407:	sub    esi,DWORD PTR [ebp-0x76bbd579]
  40a40d:	and    al,0x0
	...
  40a43f:	add    BYTE PTR [ebx],bl
  40a441:	lods   eax,DWORD PTR ds:[esi]
  40a442:	(bad)  
  40a443:	call   0x8a92773
  40a448:	outs   dx,DWORD PTR ds:[esi]
  40a449:	(bad)  
  40a44a:	inc    DWORD PTR [eax]
  40a44c:	repnz sti 
  40a44e:	inc    eax
  40a44f:	jmp    0x91485e6f
  40a454:	pushf  
  40a455:	pop    ecx
  40a456:	(bad)  
  40a457:	jle    0x40a483
  40a459:	mov    edx,0xba476fb
  40a45e:	call   0xff848dfa
  40a463:	xor    BYTE PTR ds:0xffb40009,bl
  40a469:	xor    BYTE PTR [ecx-0xc3b8d3],al
  40a46f:	dec    esi
  40a470:	hlt    
  40a471:	leave  
  40a472:	sti    
  40a473:	cdq    
  40a474:	sbb    edi,DWORD PTR [edx-0x1593c1f5]
  40a47a:	sub    BYTE PTR [eax+0x6a992d60],ch
  40a480:	addr16 add eax,0x8a4a290b
  40a486:	int    0xe8
  40a488:	pusha  
  40a489:	add    eax,0x5a8acc7
  40a48e:	add    cl,ch
  40a490:	pusha  
  40a491:	dec    edx
  40a492:	inc    ebp
  40a493:	add    BYTE PTR [esi],ah
  40a495:	into   
  40a496:	push   es
  40a497:	add    BYTE PTR [edx],cl
  40a499:	popa   
  40a49a:	jmp    FWORD PTR [ecx+0xa]
  40a49d:	popa   
  40a49e:	jmp    FWORD PTR [ecx-0x6]
  40a4a1:	mov    ebx,0xf444
	...
  40a4d6:	dec    edx
  40a4d7:	mov    edx,0xce15f484
  40a4dc:	(bad)  
  40a4dd:	push   eax
  40a4de:	or     eax,0x97fff754
  40a4e3:	int    0xe7
  40a4e5:	imul   edi,DWORD PTR [ecx+0x6],0x0
  40a4e9:	or     ecx,DWORD PTR [edx]
  40a4eb:	push   ebx
  40a4ec:	add    al,0xe9
  40a4ee:	cmp    al,BYTE PTR [edi]
  40a4f0:	add    BYTE PTR [eax],al
  40a4f2:	and    dh,BYTE PTR [ecx-0x3245bed9]
  40a4f8:	je     0x40a506
  40a4fa:	sar    BYTE PTR [ebx+esi*4-0x75893201],cl
  40a501:	ror    BYTE PTR [edi],1
  40a503:	ret    
  40a504:	repz neg ebp
  40a507:	int    0x4f
  40a509:	push   edx
  40a50a:	repnz dec esp
  40a50c:	mov    bl,0xff
  40a50e:	or     eax,0x15f084bf
  40a513:	int    0xfe
  40a515:	call   0x403b60
  40a51a:	(bad)  
  40a51c:	xlat   BYTE PTR ds:[ebx]
  40a51d:	test   DWORD PTR ds:0x9d684fcd,0x1d00410e
  40a527:	xchg   ebx,eax
  40a528:	lock neg DWORD PTR [ebp+0x6535fecd]
  40a52f:	push   ds
  40a530:	inc    ecx
  40a531:	add    BYTE PTR [edx+0x7dffb2fd],ah
  40a537:	mov    edi,0xe484
	...
  40a56c:	push   ebp
  40a56d:	int    0xfe
  40a56f:	push   0x63
  40a571:	sub    al,0xdb
  40a573:	ins    BYTE PTR es:[edi],dx
  40a574:	imul   ebp,DWORD PTR [ebp+0x3],0xffffffff
  40a578:	out    dx,al
  40a579:	cmp    ecx,DWORD PTR [edi-0x1]
  40a57c:	sbb    al,0x43
  40a57e:	or     eax,0x36d4a27
  40a583:	call   0xff88a45a
  40a588:	fidiv  DWORD PTR [eax+0x62fcf757]
  40a58e:	(bad)  
  40a590:	jl     0x40a574
  40a592:	or     eax,DWORD PTR [ecx+0x63]
  40a595:	push   ebx
  40a596:	xchg   ecx,eax
  40a597:	lock in al,dx
  40a599:	dec    edx
  40a59a:	inc    edi
  40a59b:	call   DWORD PTR [esi+0x63411d0b]
  40a5a1:	inc    esp
  40a5a2:	jae    0x40a557
  40a5a4:	int3   
  40a5a5:	jb     0x40a624
  40a5a7:	test   DWORD PTR [ebx-0x1100b85e],edi
  40a5ad:	test   al,0x27
  40a5af:	div    DWORD PTR [edx+ebx*4+0x53db67b4]
  40a5b6:	(bad)  
  40a5b7:	jmp    DWORD PTR [ebp-0x6308ac00]
  40a5bd:	ret    0x3546
  40a5c0:	cmp    al,0x45
  40a5c2:	(bad)  
  40a5c3:	inc    DWORD PTR [ebx+edi*1+0x3684ff92]
  40a5ca:	inc    ebx
  40a5cb:	je     0x40a627
  40a5cd:	scas   eax,DWORD PTR es:[edi]
  40a5ce:	mov    ah,bl
	...
  40a600:	add    BYTE PTR [eax],al
  40a602:	ins    BYTE PTR es:[edi],dx
  40a603:	fiadd  DWORD PTR [esi+0x4]
  40a606:	idiv   BYTE PTR [ebx]
  40a608:	inc    esi
  40a609:	xor    ah,dl
  40a60b:	mov    al,0x63
  40a60d:	neg    DWORD PTR [eax+eax*1-0x4c]
  40a611:	out    0x96,eax
  40a613:	mov    esi,0x5b38ff46
  40a618:	cli    
  40a619:	mov    edi,0xb3ef05cf
  40a61e:	inc    esp
  40a61f:	neg    DWORD PTR [eax+0x47]
  40a622:	xor    al,0x49
  40a624:	ins    BYTE PTR es:[edi],dx
  40a625:	fs xor al,0x41
  40a628:	push   cs
  40a629:	icebp  
  40a62a:	and    al,0x41
  40a62c:	jmp    0xf66a84b3
  40a631:	inc    esi
  40a632:	adc    al,0x6
  40a634:	jge    0x40a5fb
  40a636:	loope  0x40a5ba
  40a638:	std    
  40a639:	dec    esi
  40a63a:	add    al,0x41
  40a63c:	jmp    0x9cc51e10
  40a641:	pop    ebx
  40a642:	in     al,dx
  40a643:	inc    eax
  40a644:	(bad)  
  40a645:	add    esi,DWORD PTR [edi-0x4f]
  40a648:	inc    edx
  40a649:	add    al,0xd6
  40a64b:	mov    ah,BYTE PTR [ecx+0x1940dc4e]
  40a651:	inc    edi
  40a652:	push   cs
  40a653:	sub    bh,BYTE PTR [esi+0x1b2dcc46]
  40a659:	xor    esp,eax
  40a65b:	inc    eax
  40a65c:	repnz inc ebx
  40a65e:	aaa    
  40a65f:	fldcw  WORD PTR [ecx-0x78]
  40a662:	fwait
  40a663:	cmp    BYTE PTR [esi+0x46],dl
	...
  40a695:	add    BYTE PTR [eax],al
  40a697:	add    BYTE PTR [ebx-0x47],ah
  40a69a:	and    esp,ebx
  40a69c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a69d:	inc    eax
  40a69e:	xchg   esi,eax
  40a69f:	test   DWORD PTR [edx+edi*4+0x70fc5bf0],ebx
  40a6a6:	jbe    0x40a6ee
  40a6a8:	mov    WORD PTR [edx+0x7d],?
  40a6ab:	dec    esi
  40a6ac:	test   BYTE PTR [eax+0x66],al
  40a6af:	shl    BYTE PTR [ebp+ebp*1-0x5e],1
  40a6b3:	xchg   edi,eax
  40a6b4:	je     0x40a6f6
  40a6b6:	push   esi
  40a6b7:	nop
  40a6b8:	jnp    0x40a6f2
  40a6ba:	dec    esi
  40a6bb:	inc    esi
  40a6bc:	fs mov edx,0x710e5bf0
  40a6c2:	ds inc esi
  40a6c4:	push   esp
  40a6c5:	jp     0x40a6c7
  40a6c7:	adc    DWORD PTR [ebp-0xcd100c0],ebx
  40a6cd:	sub    bh,dh
  40a6cf:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40a6d1:	inc    eax
  40a6d2:	jne    0x40a6c5
  40a6d4:	cwde   
  40a6d5:	mov    dl,0xab
  40a6d7:	push   ss
  40a6d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6d9:	inc    eax
  40a6da:	mov    ch,0x9
  40a6dc:	xchg   ebp,eax
  40a6dd:	inc    eax
  40a6de:	inc    DWORD PTR [esi]
  40a6e0:	xor    ecx,DWORD PTR [eax]
  40a6e2:	call   0xff8093b7
  40a6e7:	neg    ah
  40a6e9:	sub    bh,dh
  40a6eb:	out    dx,al
  40a6ec:	sahf   
  40a6ed:	sub    eax,0x40a69695
  40a6f2:	call   DWORD PTR [ebx+ebx*4-0x702900c8]
  40a6f9:	mov    ebp,DWORD PTR [edi+0xce]
	...
  40a72b:	add    BYTE PTR [eax],al
  40a72d:	add    BYTE PTR [esi+0x2ed1b540],bl
  40a733:	inc    eax
  40a734:	call   ecx
  40a736:	sahf   
  40a737:	outs   dx,BYTE PTR ds:[esi]
  40a738:	push   DWORD PTR [esi-0x490f85da]
  40a73e:	push   ds
  40a73f:	inc    eax
  40a740:	call   0xff807d62
  40a745:	sahf   
  40a746:	hlt    
  40a747:	aaa    
  40a748:	jmp    0xff80cc78
  40a74d:	mov    ss,WORD PTR [ebx+edi*1+0x4e047e8]
  40a754:	add    BYTE PTR [eax+0x1c000d21],dh
  40a75a:	or     dh,BYTE PTR [ecx]
  40a75c:	and    DWORD PTR [ebp-0xa8abfcd],0x18
  40a763:	xlat   BYTE PTR ds:[ebx]
  40a764:	jg     0x40a74f
  40a766:	pusha  
  40a767:	mov    es,WORD PTR [ebp+0x51]
  40a76a:	es mov edx,0x6ebd41f7
  40a770:	inc    DWORD PTR [eax]
  40a772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a773:	mov    edx,0x4e95fc44
  40a778:	sti    
  40a779:	dec    DWORD PTR [edi]
  40a77b:	retf   
  40a77c:	(bad)  
  40a77d:	jne    0x40a7a5
  40a77f:	fist   DWORD PTR [esi]
  40a781:	mov    ebx,0xc00ac885
  40a786:	into   
  40a787:	or     BYTE PTR [ecx-0xa4b1bb],cl
  40a78d:	mov    edi,?
  40a78f:	into   
  40a790:	dec    edi
  40a791:	inc    DWORD PTR [eax]
	...
  40a7c3:	add    BYTE PTR [edi+0x6e7be7c6],bl
  40a7c9:	enter  0xbfe,0x3a
  40a7cd:	push   ebp
  40a7ce:	sub    BYTE PTR [eax-0x6],ch
  40a7d1:	xor    ch,dh
  40a7d3:	mov    esi,0xe8075005
  40a7d8:	jecxz  0x40a777
  40a7da:	(bad)  
  40a7db:	call   DWORD PTR ds:0x8ffff750
  40a7e1:	cmp    eax,0xdad275fe
  40a7e6:	shr    BYTE PTR [ebx+0x75feca15],0xe
  40a7ed:	retf   0xfc74
  40a7f0:	cmc    
  40a7f1:	dec    edi
  40a7f2:	pop    es
  40a7f3:	call   0x404511
  40a7f8:	aad    0x4f
  40a7fa:	sti    
  40a7fb:	call   0x4040e6
  40a800:	add    eax,ebp
  40a802:	pop    es
  40a803:	add    BYTE PTR [edi-0x44],bh
  40a806:	jmp    0x40a78b
  40a808:	mov    esi,0x8fff55da
  40a80d:	ss out 0xad,eax
  40a810:	dec    ecx
  40a811:	leave  
  40a812:	dec    BYTE PTR [ebx]
  40a814:	dec    edx
  40a815:	dec    edi
  40a816:	add    al,0x5e
  40a818:	xor    eax,esp
  40a81a:	pop    es
  40a81b:	add    BYTE PTR [ebx-0x57],ah
  40a81e:	mov    ebp,0xcdcf13ef
  40a823:	or     ecx,DWORD PTR [ebx+0x67]
  40a826:	(bad)  
  40a827:	inc    DWORD PTR [eax]
	...
  40a859:	add    BYTE PTR [ebx+esi*1+0x43],dl
  40a85d:	movntq (bad),mm2
  40a85e:	out    0xd1,eax
  40a860:	add    al,BYTE PTR [eax]
  40a862:	arpl   di,bp
  40a864:	int    0xfb
  40a866:	dec    ebx
  40a867:	repz xchg esp,eax
  40a869:	push   DWORD PTR [esi*4-0x5ed31443]
  40a870:	inc    edi
  40a871:	jmp    FWORD PTR [esi+0x1b754340]
  40a877:	adc    al,0x52
  40a879:	scas   al,BYTE PTR es:[edi]
  40a87a:	adc    al,0x3f
  40a87c:	ja     0x40a8f3
  40a87e:	inc    DWORD PTR [edx]
  40a880:	mov    edx,0xc2742267
  40a885:	call   DWORD PTR [esi+0x6380c554]
  40a88b:	sub    al,0xe
  40a88d:	shl    BYTE PTR [esi+0x2a],0x2e
  40a891:	cmp    eax,0xc0ac5bd8
  40a896:	fwait
  40a897:	in     eax,dx
  40a898:	add    ebp,eax
  40a89a:	fdivp  st(6),st
  40a89c:	add    eax,DWORD PTR [eax]
  40a89e:	pusha  
  40a89f:	jl     0x40a82e
  40a8a1:	jne    0x40a85e
  40a8a3:	ret    
  40a8a4:	push   ebx
  40a8a5:	cmp    BYTE PTR [edx],ah
  40a8a7:	sub    al,0xd9
  40a8a9:	out    0x54,eax
  40a8ab:	lods   eax,DWORD PTR ds:[esi]
  40a8ac:	add    eax,DWORD PTR [eax]
  40a8ae:	pop    eax
  40a8af:	ins    BYTE PTR es:[edi],dx
  40a8b0:	mov    ecx,0x8d32b801
  40a8b5:	adc    BYTE PTR [ebp+0x3150032b],ah
  40a8bb:	mov    edi,0xe7b8
	...
  40a8f0:	mov    WORD PTR [eax+0xb],es
  40a8f3:	call   0xff835682
  40a8f8:	sbb    DWORD PTR ds:0x85538bc1,eax
  40a8fe:	pop    ds
  40a8ff:	add    al,0xf6
  40a901:	jb     0x40a8c4
  40a903:	add    al,0x53
  40a905:	pop    DWORD PTR cs:[ebx-0x2a]
  40a909:	or     eax,0x3d095051
  40a90e:	ds inc ebx
  40a910:	(bad)  
  40a911:	cmp    DWORD PTR [esi],esi
  40a913:	mov    ecx,0xbb43d38
  40a918:	dec    ebx
  40a919:	xor    dl,BYTE PTR [ebx+0x43]
  40a91c:	xor    al,0x3d
  40a91e:	xchg   esp,eax
  40a91f:	das    
  40a920:	cmp    ebp,ebx
  40a922:	inc    esi
  40a923:	inc    ebx
  40a924:	and    al,0x8b
  40a926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a927:	xor    esi,DWORD PTR [ebx+0x14779a2d]
  40a92d:	cmp    eax,0x4ead0412
  40a932:	sub    ecx,DWORD PTR [ebx+eiz*2]
  40a935:	shl    BYTE PTR [ecx+0x30],cl
  40a938:	loopne 0x40a97b
  40a93a:	in     eax,0xad
  40a93c:	hlt    
  40a93d:	scas   al,BYTE PTR es:[edi]
  40a93e:	repz inc edx
  40a940:	jbe    0x40a94f
  40a942:	rol    esi,0xb9
  40a945:	cmp    al,0xce
  40a947:	mov    WORD PTR [esi],fs
  40a949:	cmp    DWORD PTR [ecx-0x6f],edx
  40a94c:	fwait
  40a94d:	(bad)  
  40a94e:	call   0xc14dff95
  40a953:	push   0x0
	...
  40a985:	add    bh,al
  40a987:	cmp    al,0xae
  40a989:	lods   eax,DWORD PTR ds:[esi]
  40a98a:	mov    esp,0x23fb8da4
  40a98f:	add    eax,0xc66b5711
  40a994:	call   0xc02517db
  40a999:	les    ebx,FWORD PTR [esp+0x3c947385]
  40a9a0:	repnz inc ebx
  40a9a2:	pop    ss
  40a9a3:	pop    ds
  40a9a4:	add    BYTE PTR [ecx],al
  40a9a6:	or     ebp,edi
  40a9a8:	inc    eax
  40a9a9:	jmp    0x9908ce3e
  40a9ae:	and    DWORD PTR [eax+edx*2],edi
  40a9b1:	mov    ecx,0x4107b221
  40a9b6:	cmp    eax,0x884eff3b
  40a9bb:	inc    ebx
  40a9bc:	lods   eax,DWORD PTR ds:[esi]
  40a9bd:	inc    esi
  40a9be:	mov    eax,ds:0x725119af
  40a9c3:	ja     0x40a9c4
  40a9c5:	ss push ebp
  40a9c7:	inc    ebp
  40a9c8:	je     0x40a9ce
  40a9ca:	movd   mm7,DWORD PTR [eax]
  40a9cd:	test   al,0x60
  40a9cf:	aad    0xe7
  40a9d1:	dec    edx
  40a9d2:	mov    bh,0x3c
  40a9d4:	inc    DWORD PTR [ecx-0x16bf0256]
  40a9da:	xor    BYTE PTR [eax+ebx*4],ah
  40a9dd:	cmp    BYTE PTR [ecx-0x5e66afc4],ah
  40a9e3:	mov    dl,0x7
  40a9e5:	add    DWORD PTR [ebp+0xeeff3b],ecx
	...
  40aa1b:	add    BYTE PTR [ecx-0x6d],cl
  40aa1e:	lods   eax,DWORD PTR ds:[esi]
  40aa1f:	out    0xa2,al
  40aa21:	scas   eax,DWORD PTR es:[edi]
  40aa22:	sbb    edx,ecx
  40aa24:	xor    DWORD PTR [esi-0x1],0x744556d6
  40aa2b:	add    al,0xf
  40aa2d:	outs   dx,BYTE PTR ds:[esi]
  40aa2e:	cmp    BYTE PTR [eax],ch
  40aa30:	pop    edi
  40aa31:	aad    0xe7
  40aa33:	cmp    dl,BYTE PTR [eax+0x3c]
  40aa36:	inc    DWORD PTR [ecx+0x49]
  40aa39:	std    
  40aa3a:	inc    eax
  40aa3b:	jmp    0x58a8cdd0
  40aa40:	and    bh,BYTE PTR [eax+edx*2]
  40aa43:	cmp    DWORD PTR [edx],esp
  40aa45:	mov    dl,0x7
  40aa47:	sbb    esi,0x4f8eff3a
  40aa4d:	mov    ds:0xc5dd00ac,eax
  40aa52:	imul   esp,DWORD PTR [ebx],0xffb0b6f2
  40aa58:	or     eax,0xa774c00a
  40aa5d:	outs   dx,DWORD PTR ds:[esi]
  40aa5e:	test   eax,0x5007cb38
  40aa63:	call   0x3f6121
  40aa68:	mov    ds:0x4a4137bd,al
  40aa6d:	push   edi
  40aa6e:	out    0x38,eax
  40aa70:	fcmovnb st,st(4)
  40aa72:	(bad)  
  40aa73:	push   eax
  40aa74:	jmp    0xfd50:0xa20874c5
  40aa7b:	dec    DWORD PTR [ebp+0xad35e9]
	...
  40aab1:	add    BYTE PTR [ebp-0x3c],bh
  40aab4:	(bad)  
  40aab5:	jne    0x40ab05
  40aab7:	les    esi,FWORD PTR [eax+ecx*1+0x62]
  40aabb:	scas   al,BYTE PTR es:[edi]
  40aabc:	test   eax,0xc1ce6dff
  40aac1:	add    al,0xa
  40aac3:	push   esp
  40aac4:	mov    ch,ah
  40aac6:	jnp    0x40aa95
  40aac8:	fcomi  st,st(7)
  40aaca:	or     eax,0xe458cc6
  40aacf:	push   edi
  40aad0:	(bad)  
  40aad1:	jne    0x40aacd
  40aad3:	lds    esi,FWORD PTR [esp+ecx*1+0x12]
  40aad7:	jbe    0x40ab57
  40aad9:	add    dl,bh
  40aadb:	or     eax,eax
  40aadd:	cmova  eax,DWORD PTR [ecx+eax*1+0x44cdca00]
  40aae5:	clc    
  40aae6:	mov    edx,0xf5000006
  40aaeb:	inc    ebx
  40aaec:	repz inc ebp
  40aaef:	push   es
  40aaf0:	add    BYTE PTR [edx-0x36],ch
  40aaf3:	push   0x68ba69ff
  40aaf8:	dec    DWORD PTR [ebx+eiz*2-0x11afc817]
  40aaff:	mov    eax,ds:0x8394f736
  40ab04:	sar    esi,cl
  40ab06:	push   ss
  40ab07:	test   BYTE PTR [eax+0x75],al
  40ab0a:	xchg   DWORD PTR [edx+eax*8+0xc2c637e],eax
  40ab11:	shr    bh,0x28
  40ab14:	sub    al,BYTE PTR [ecx+0x0]
	...
  40ab46:	add    BYTE PTR [eax],al
  40ab48:	bound  ebp,QWORD PTR [ebx+eax*1]
  40ab4b:	push   0xffc304cb
  40ab50:	pop    ebp
  40ab51:	push   ecx
  40ab52:	adc    ebp,eax
  40ab54:	mov    edi,0xb3ff3fbc
  40ab59:	mov    bh,0x52
  40ab5b:	(bad)  
  40ab5c:	fdivrp st(7),st
  40ab5e:	aaa    
  40ab5f:	(bad)  
  40ab60:	cmp    al,0x9c
  40ab62:	aad    0xe7
  40ab64:	(bad)  
  40ab65:	fdivr  QWORD PTR [edi]
  40ab67:	(bad)  
  40ab68:	fisub  DWORD PTR [eax+0x1324f732]
  40ab6e:	sub    ebp,DWORD PTR [edx+0x6a400acf]
  40ab74:	arpl   WORD PTR [eax+ecx*1+0x402ca239],dx
  40ab7b:	mov    ch,0x13
  40ab7d:	cmp    edi,DWORD PTR [edi]
  40ab7f:	(bad)  
  40ab80:	cld    
  40ab81:	mov    al,0xe
  40ab83:	call   0xff803e4e
  40ab88:	fisub  DWORD PTR [eax+0x52e4f727]
  40ab8e:	stos   BYTE PTR es:[edi],al
  40ab8f:	inc    DWORD PTR [esp+edi*1-0x4]
  40ab93:	inc    eax
  40ab94:	arpl   WORD PTR [ebx+0x79],ax
  40ab97:	lock aam 0x7a
  40ab9a:	aas    
  40ab9b:	dec    DWORD PTR [esi+0x20]
  40ab9e:	sub    edx,DWORD PTR [edx-0x76c094f4]
  40aba4:	fiadd  WORD PTR [ecx+ecx*4]
  40aba7:	aaa    
  40aba8:	lods   al,BYTE PTR ds:[esi]
  40aba9:	cmp    DWORD PTR [ebx],edx
  40abab:	add    al,0x0
	...
  40abdd:	add    BYTE PTR [ebx],bh
  40abdf:	xor    dl,cl
  40abe1:	les    ebx,FWORD PTR [edx+edi*1+0x398c3454]
  40abe8:	xchg   BYTE PTR [edi],bh
  40abea:	push   ss
  40abeb:	or     DWORD PTR [ecx+0x7639b5b7],edx
  40abf1:	(bad)  
  40abf2:	out    0x28,al
  40abf4:	jbe    0x40ac35
  40abf6:	je     0x40aba6
  40abf8:	call   0xa83d1aa8
  40abfd:	add    esp,DWORD PTR [edi+ebp*2+0x59]
  40ac01:	aaa    
  40ac02:	pop    esp
  40ac03:	cmp    DWORD PTR [esi-0x47],ecx
  40ac06:	push   0x4c6ea52d
  40ac0b:	cmp    DWORD PTR [eax-0x77],esi
  40ac0e:	cmp    esi,DWORD PTR [ecx]
  40ac10:	ss aas 
  40ac12:	leave  
  40ac13:	add    eax,0xc67a19c1
  40ac18:	call   0x1676a25b
  40ac1d:	aas    
  40ac1e:	and    al,0x39
  40ac20:	pushf  
  40ac21:	ud2    
  40ac23:	(bad)  
  40ac24:	cmp    eax,0x6c8f143f
  40ac29:	pusha  
  40ac2a:	adc    al,0x39
  40ac2c:	inc    BYTE PTR [edx+0x3efe21c6]
  40ac32:	cld    
  40ac33:	add    eax,0x7ae00c74
  40ac38:	leave  
  40ac39:	ss in  al,dx
  40ac3b:	cmp    cl,ch
  40ac3d:	mov    bh,0x7f
  40ac3f:	test   BYTE PTR [edi+ebp*1+0x0],dl
	...
  40ac72:	add    BYTE PTR [eax],al
  40ac74:	aam    0x38
  40ac76:	into   
  40ac77:	add    ecx,DWORD PTR [edi-0x27]
  40ac7a:	imul   eax,DWORD PTR [eax+0x3ebe30bb],0x19ffb163
  40ac84:	(bad)  
  40ac86:	(bad)  
  40ac87:	mov    esi,0xf1753836
  40ac8c:	js     0x40ac4a
  40ac8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac8f:	sahf   
  40ac90:	cmp    BYTE PTR gs:[ebp-0xc7aa7b],dh
  40ac97:	mov    ds,ebx
  40ac99:	add    al,ch
  40ac9b:	mov    dh,0xf8
  40ac9d:	aaa    
  40ac9e:	(bad)  
  40ac9f:	jle    0x40acac
  40aca1:	sub    eax,0x383d76f7
  40aca6:	jne    0x40ac89
  40aca8:	dec    eax
  40aca9:	inc    esi
  40acaa:	test   al,0x66
  40acac:	sub    eax,0x2d45b538
  40acb1:	cmp    bh,bh
  40acb3:	push   esi
  40acb4:	sbb    eax,DWORD PTR [eax]
  40acb6:	call   0xff797555
  40acbb:	inc    esi
  40acbc:	retf   
  40acbd:	and    eax,0x38853ef7
  40acc2:	jne    0x40aca5
  40acc4:	mov    BYTE PTR [edx-0x58],ah
  40acc7:	cs jne 0x40ad02
  40acca:	mov    ch,0x45
  40accc:	jne    0x40ad06
  40acce:	call   FWORD PTR [esi]
  40acd0:	jmp    0x40acd1
  40acd2:	out    0x7e,eax
  40acd4:	mov    BYTE PTR [eax],bh
  40acd6:	dec    DWORD PTR [esi]
	...
  40ad08:	add    BYTE PTR [eax],al
  40ad0a:	fwait
  40ad0b:	and    edi,esi
  40ad0d:	push   es
  40ad0e:	dec    ebp
  40ad0f:	sub    eax,0x384552a1
  40ad14:	(bad)  
  40ad15:	cmp    al,0x40
  40ad17:	xor    bh,bh
  40ad19:	out    dx,al
  40ad1a:	dec    ecx
  40ad1b:	(bad)  
  40ad1c:	stos   DWORD PTR es:[edi],eax
  40ad1d:	out    0x2e,al
  40ad1f:	cmp    BYTE PTR [ebp-0xc7d133],dh
  40ad25:	shr    edx,0x6b
  40ad28:	dec    esi
  40ad2a:	xchg   esi,eax
  40ad2b:	jb     0x40ad15
  40ad2d:	add    BYTE PTR ds:0x3ae8fefa,cl
  40ad33:	scas   al,BYTE PTR es:[edi]
  40ad34:	(bad)  
  40ad35:	push   ebp
  40ad37:	scas   eax,DWORD PTR es:[edi]
  40ad38:	fcomi  st,st(7)
  40ad3a:	add    eax,0x1175e7fa
  40ad3f:	cli    
  40ad40:	(bad)  
  40ad41:	dec    DWORD PTR [edi]
  40ad43:	icebp  
  40ad44:	idiv   bh
  40ad46:	cmc    
  40ad47:	stc    
  40ad48:	je     0x40ad56
  40ad4a:	in     eax,0x6f
  40ad4c:	pop    es
  40ad4d:	call   0x3fa6f9
  40ad52:	add    eax,0xf5f7efb0
  40ad57:	stc    
  40ad58:	out    0x59,eax
  40ad5a:	and    edx,edi
  40ad5c:	(bad)  
  40ad5d:	(bad)  
  40ad5e:	mov    edi,0x451e8fb
  40ad63:	cli    
  40ad64:	(bad)  
  40ad65:	(bad)  
  40ad66:	aas    
  40ad67:	mul    edi
  40ad69:	mov    ds:0xc9000327,eax
	...
  40ad9e:	add    BYTE PTR [eax],al
  40ada0:	js     0x40adb7
  40ada2:	add    BYTE PTR [ebp-0x2f],dl
  40ada5:	cmc    
  40ada6:	add    ah,0x76
  40ada9:	imul   edi,edi,0x69
  40adac:	or     al,0xfa
  40adae:	je     0x40adb8
  40adb0:	push   edx
  40adb1:	ins    BYTE PTR es:[edi],dx
  40adb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adb3:	inc    DWORD PTR [ebp-0x76]
  40adb6:	inc    ebp
  40adb7:	cld    
  40adb8:	loop   0x40add8
  40adba:	cmp    BYTE PTR [ecx+0xa],al
  40adbd:	imul   eax,DWORD PTR [ecx],0x0
  40adc0:	cli    
  40adc1:	cmp    bh,0x75
  40adc4:	adc    ch,bl
  40adc6:	idiv   ch
  40adc8:	cmc    
  40adc9:	stc    
  40adca:	addr16 and al,0xb3
  40adcd:	inc    ebx
  40adce:	(bad)  
  40adcf:	dec    BYTE PTR [edi+0x20]
  40add2:	sub    BYTE PTR [ecx-0x6],al
  40add5:	stc    
  40add6:	je     0x40ade0
  40add8:	arpl   WORD PTR [edi+eiz*1-0x3],ax
  40addc:	aam    0x47
  40adde:	cmp    al,0x75
  40ade0:	iret   
  40ade1:	aas    
  40ade2:	mov    dh,0x7
  40ade4:	mov    ebx,0xbcff6bf6
  40ade9:	gs inc ecx
  40adeb:	add    al,0x63
  40aded:	adc    DWORD PTR [ecx+0x5f68e2ec],ecx
  40adf3:	mul    DWORD PTR [edi+edx*4-0x360ba72]
  40adfa:	cmp    al,0x75
  40adfc:	jae    0x40ad85
  40adfe:	mov    dh,0xb
  40ae00:	jnp    0x40adea
  40ae02:	mov    esi,0xff
	...
  40ae33:	add    BYTE PTR [eax],al
  40ae35:	add    BYTE PTR [ebx+esi*1-0x1119f0bd],al
  40ae3c:	add    DWORD PTR [eax],eax
  40ae3e:	arpl   WORD PTR [edi-0x3a],bx
  40ae41:	mul    DWORD PTR [ebx+0x2c]
  40ae44:	add    eax,DWORD PTR [eax]
  40ae46:	pushf  
  40ae47:	popa   
  40ae48:	aaa    
  40ae49:	jmp    DWORD PTR [esp+ebp*1+0x3]
  40ae4d:	push   0x63
  40ae4f:	inc    edx
  40ae50:	add    ebp,DWORD PTR [edx+0x63]
  40ae53:	push   edx
  40ae54:	add    ecx,DWORD PTR [ebp-0x732d0f62]
  40ae5a:	out    0xf7,al
  40ae5c:	xor    edi,edi
  40ae5e:	xor    al,0x9c
  40ae60:	cmp    al,0x75
  40ae62:	sub    ebx,edi
  40ae64:	mov    ch,0xfb
  40ae66:	cmp    ebp,DWORD PTR [esi]
  40ae68:	mov    esi,0x43231cff
  40ae6d:	je     0x40aecd
  40ae6f:	add    eax,0x2c630182
  40ae74:	stos   DWORD PTR es:[edi],eax
  40ae75:	xchg   edi,eax
  40ae76:	cmp    ebp,DWORD PTR [ebp+0x3]
  40ae79:	push   DWORD PTR [esi+0x5c]
  40ae7c:	sub    edi,DWORD PTR [ecx]
  40ae7e:	lds    esp,FWORD PTR [esi]
  40ae80:	cmp    edx,DWORD PTR [eax-0x28]
  40ae83:	add    al,0xb9
  40ae85:	mov    esi,ebx
  40ae87:	xor    dh,dl
  40ae89:	cmp    ebx,esp
  40ae8b:	aam    0x3a
  40ae8d:	sub    al,0x8a
  40ae8f:	addr16 into 
  40ae91:	cmp    ebx,edx
  40ae93:	jg     0x40ae4e
  40ae95:	xor    eax,esp
  40ae97:	xor    eax,0xbbd1
	...
  40aecc:	or     dh,BYTE PTR [esi]
  40aece:	mov    dh,0xae
  40aed0:	mov    ah,0x9d
  40aed2:	inc    ebp
  40aed3:	std    
  40aed4:	and    eax,DWORD PTR ds:0x2db371a6
  40aeda:	sahf   
  40aedb:	cmp    ebx,DWORD PTR [edi+ebp*4+0x67e12be4]
  40aee2:	mov    ?,WORD PTR [ebx]
  40aee4:	fidivr DWORD PTR [edi-0x73]
  40aee7:	xor    eax,DWORD PTR [ebp+esi*1-0x4df4fbed]
  40aeee:	scas   eax,DWORD PTR es:[edi]
  40aeef:	les    esi,FWORD PTR [esi+esi*1+0x34]
  40aef3:	xor    al,0x74
  40aef5:	xor    eax,0x8ee3b66
  40aefa:	push   ecx
  40aefb:	mov    ds:0x8d56350f,eax
  40af00:	fisub  WORD PTR ds:0xa04c3b56
  40af06:	call   0xa82f62b6
  40af0b:	add    edi,DWORD PTR [ebx+edi*2]
  40af0e:	cmp    DWORD PTR [ebx],esi
  40af10:	xor    al,0x35
  40af12:	cs mov cl,0x58
  40af15:	sbb    eax,0x352468b5
  40af1a:	jo     0x40ae9d
  40af1c:	(bad)  
  40af1e:	push   ss
  40af1f:	cmp    ecx,DWORD PTR [ecx+0x4bde8105]
  40af25:	(bad)  
  40af26:	call   0xf6767d65
  40af2b:	cmp    bh,ah
  40af2d:	xor    al,0x0
  40af2f:	jl     0x40af31
	...
  40af61:	add    BYTE PTR [ebp+ebx*1+0x31],bl
  40af65:	cmp    al,0x28
  40af67:	xor    al,0x89
  40af69:	ins    BYTE PTR es:[edi],dx
  40af6a:	cmp    BYTE PTR [edi+edi*8],bh
  40af6d:	fimul  WORD PTR [esi]
  40af6f:	xor    eax,0xc5d76967
  40af74:	dec    ebp
  40af76:	push   ebx
  40af77:	xor    eax,0x3489c6f7
  40af7c:	jne    0x40af6b
  40af7e:	mov    BYTE PTR [ebx],bl
  40af80:	lods   eax,DWORD PTR ds:[esi]
  40af81:	mov    dh,0x79
  40af83:	jle    0x40af0a
  40af85:	lea    esi,[ecx+0x34]
  40af88:	jmp    FWORD PTR [edx+0x2b]
  40af8b:	sub    edi,esi
  40af8d:	sahf   
  40af8e:	pop    ecx
  40af8f:	add    eax,0x72dde075
  40af94:	loopne 0x40af2c
  40af96:	dec    ecx
  40af97:	xor    al,0x0
  40af99:	std    
  40af9a:	ret    
  40af9b:	xchg   DWORD PTR [ebp-0xcbce73],edi
  40afa1:	jmp    0x2cc3806a
  40afa6:	cmp    BYTE PTR [edi+edi*8],bh
  40afa9:	pushaw 
  40afab:	mov    ecx,0x560d152
  40afb0:	out    dx,eax
  40afb1:	xchg   edi,eax
  40afb2:	cdq    
  40afb3:	mov    edx,0x6a304107
  40afb8:	inc    DWORD PTR [esi-0x77]
  40afbb:	jp     0x40afa9
  40afbd:	ss jns 0x40aff4
  40afc0:	(bad)  
  40afc1:	mov    esp,0x87a41d68
	...
  40aff6:	add    BYTE PTR [eax],al
  40aff8:	imul   esi,DWORD PTR [edi+edi*8],0xff3c785c
  40afff:	push   ds
  40b000:	pop    ecx
  40b001:	mov    edx,0x6af20107
  40b006:	dec    DWORD PTR [esi]
  40b008:	dec    ecx
  40b009:	jp     0x40afef
  40b00b:	add    BYTE PTR ds:0x77fffeee,al
  40b011:	add    al,ch
  40b013:	mov    BYTE PTR [edi+ebp*8-0x17c80002],ah
  40b01a:	idiv   bh
  40b01c:	std    
  40b01d:	in     eax,dx
  40b01e:	je     0x40b028
  40b020:	mov    dl,0x72
  40b022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b023:	jmp    FWORD PTR [ebp-0x4a234b13]
  40b029:	in     eax,dx
  40b02a:	(bad)  
  40b02b:	inc    DWORD PTR [edi-0x1b9317ff]
  40b031:	in     eax,dx
  40b032:	(bad)  
  40b033:	push   DWORD PTR [edi]
  40b035:	in     eax,0xf6
  40b037:	(bad)  
  40b038:	std    
  40b039:	loopne 0x40b0b0
  40b03b:	test   eax,0xb5feedfd
  40b040:	jmp    0xa861:0xe2fffef5
  40b047:	(bad)  
  40b048:	fucomp st(5)
  40b04a:	mov    ah,0xec
  40b04c:	add    eax,0x6ae8feee
  40b051:	mov    al,ds:0xa3edfffe
  40b056:	out    0xf7,eax
  40b058:	std    
  40b059:	in     eax,dx
  40b05a:	out    0x55,eax
	...
  40b08c:	add    BYTE PTR [eax],al
  40b08e:	shr    ebp,cl
  40b090:	(bad)  
  40b091:	push   edi
  40b093:	int    0xf6
  40b095:	jmp    FWORD PTR [ebp-0x6256b61f]
  40b09b:	in     al,dx
  40b09c:	(bad)  
  40b09d:	mov    ch,0x8a
  40b09f:	hlt    
  40b0a0:	(bad)  
  40b0a1:	(bad)  
  40b0a2:	jge    0x40b106
  40b0a4:	or     edi,edi
  40b0a6:	idiv   esi
  40b0a8:	out    0x3d,eax
  40b0aa:	jl     0x40b098
  40b0ac:	(bad)  
  40b0ad:	inc    DWORD PTR [edi+0x7dfff6f9]
  40b0b3:	loope  0x40b0e2
  40b0b5:	test   eax,0xff391b63
  40b0ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0bb:	adc    al,0x2b
  40b0bd:	push   ecx
  40b0be:	add    eax,0x76ff390c
  40b0c3:	xor    BYTE PTR [ebx],ch
  40b0c5:	js     0x40b13f
  40b0c7:	sbb    al,0x3
  40b0c9:	leave  
  40b0ca:	and    DWORD PTR [ecx+0x3],edx
  40b0cd:	push   ebp
  40b0ce:	fcomp  DWORD PTR [eax-0x7c]
  40b0d1:	(bad)  
  40b0d2:	(bad)  
  40b0d4:	add    ebp,DWORD PTR [edx+0x6c]
  40b0d7:	pop    ebx
  40b0d8:	scas   al,BYTE PTR es:[edi]
  40b0d9:	pop    es
  40b0da:	mov    ebx,0xc4ff61dc
  40b0df:	mov    ch,0xbd
  40b0e1:	sti    
  40b0e2:	dec    ebx
  40b0e3:	mov    eax,ds:0x7b6340f9
  40b0e8:	out    dx,al
  40b0e9:	es jp  0x40b0c9
  40b0ec:	add    edi,edi
  40b0ee:	cs xor al,0x2b
  40b0f1:	test   BYTE PTR [eax],0x0
	...
  40b124:	sahf   
  40b125:	xchg   ebx,eax
  40b126:	cmp    BYTE PTR [eax-0x1a],ch
  40b129:	push   ebp
  40b12a:	ret    0x4ff
  40b12d:	push   ds
  40b12e:	add    eax,DWORD PTR [eax]
  40b130:	jecxz  0x40b0bd
  40b132:	scas   al,BYTE PTR es:[edi]
  40b133:	pop    es
  40b134:	mov    ecx,DWORD PTR [eax-0x448b00ca]
  40b13a:	lods   eax,DWORD PTR ds:[esi]
  40b13b:	sti    
  40b13c:	ins    BYTE PTR es:[edi],dx
  40b13d:	cmp    DWORD PTR [ebx],ecx
  40b13f:	call   0xff793354
  40b144:	sub    bl,dh
  40b146:	(bad)  
  40b147:	jmp    FWORD PTR [edi+0x278126a7]
  40b14d:	lock das 
  40b14f:	inc    DWORD PTR [ecx+edi*4-0x43]
  40b153:	sti    
  40b154:	xchg   ebx,eax
  40b155:	rep lods eax,DWORD PTR ds:[esi]
  40b157:	sysenter 
  40b159:	jno    0x40b162
  40b15b:	call   0x4428aa
  40b160:	pop    eax
  40b161:	add    eax,0x81e60829
  40b166:	jmp    0xac8b146e
  40b16b:	cmp    esp,DWORD PTR [ebx+0x5]
  40b16e:	jmp    0xfd08cd76
  40b173:	aaa    
  40b174:	fs add eax,0x9bf4ade9
  40b17a:	call   0xe8dc9e2c
  40b17f:	xchg   BYTE PTR [esi-0x1976c6c7],bl
  40b185:	cmp    dh,dl
  40b187:	aaa    
	...
  40b1b8:	add    BYTE PTR [eax],al
  40b1ba:	aam    0xd4
  40b1bc:	aad    0xb1
  40b1be:	aam    0x31
  40b1c0:	push   esp
  40b1c1:	cmp    BYTE PTR [ebx+0x6304432f],bh
  40b1c7:	(bad)  
  40b1c8:	test   al,0xb0
  40b1ca:	bound  ebx,QWORD PTR [esi]
  40b1cc:	sbb    al,0x89
  40b1ce:	out    0x20,al
  40b1d0:	mov    dh,0x37
  40b1d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1d3:	aam    0x73
  40b1d5:	adc    DWORD PTR [edi+0x33379e39],0x8c141c32
  40b1df:	mov    bh,0xdc
  40b1e1:	sub    eax,DWORD PTR ds:0xea37865e
  40b1e7:	xchg   DWORD PTR [ecx+0x2f],edi
  40b1ea:	je     0x40b21d
  40b1ec:	loop   0x40b231
  40b1ee:	mul    esi
  40b1f0:	imul   edi,DWORD PTR [ecx+0x77],0x63376639
  40b1f7:	mov    ecx,0x3154abff
  40b1fc:	inc    esi
  40b1fd:	jbe    0x40b24b
  40b1ff:	jnp    0x40b23e
  40b201:	das    
  40b202:	inc    esp
  40b203:	xor    DWORD PTR [esi+0x71],eax
  40b206:	xor    edi,DWORD PTR [ecx]
  40b208:	ds aaa 
  40b20a:	xor    al,0xbb
  40b20c:	jmp    eax
  40b20e:	js     0x40b250
  40b210:	leave  
  40b211:	cs ins BYTE PTR es:[edi],dx
  40b213:	xor    BYTE PTR [ebp-0xcfb3e7],dh
  40b219:	adc    esp,edi
  40b21b:	push   0x16ff
	...
  40b250:	push   esp
  40b251:	retf   0x2f7
  40b254:	fbstp  TBYTE PTR [eax]
  40b256:	jne    0x40b25d
  40b258:	dec    edi
  40b259:	mov    cl,0x79
  40b25b:	jmp    0xe602f0c0
  40b260:	pusha  
  40b261:	fimul  DWORD PTR [edx-0x3b61e03]
  40b267:	push   ebx
  40b268:	addr16 fwait
  40b26a:	pop    ss
  40b26b:	ficom  WORD PTR [ebx]
  40b26d:	or     eax,ebp
  40b26f:	sub    eax,0x60ff3042
  40b274:	mov    ds:0xbf7b682c,eax
  40b279:	(bad)  
  40b27c:	mov    bl,0xe7
  40b27e:	sub    BYTE PTR [eax],ch
  40b280:	xor    BYTE PTR [di-0x1f],dh
  40b284:	js     0x40b270
  40b286:	(bad)  
  40b287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b288:	push   ebp
  40b289:	popf   
  40b28a:	mov    cl,0xe0
  40b28c:	lahf   
  40b28d:	xor    BYTE PTR [edi-0x15],ah
  40b290:	pusha  
  40b291:	add    eax,0x8d38e80
  40b296:	call   0xff70e875
  40b29b:	adc    DWORD PTR [eax],ebp
  40b29d:	out    dx,al
  40b29e:	inc    eax
  40b29f:	jmp    0xc067acd9
  40b2a4:	lahf   
  40b2a5:	xor    dh,bh
  40b2a7:	fsubr  QWORD PTR [eax+0x1d]
  40b2aa:	add    BYTE PTR [esi-0x73],bl
  40b2ad:	xor    BYTE PTR [eax+0x22],ch
  40b2b0:	dec    edi
  40b2b1:	(bad)  
	...
  40b2e4:	add    BYTE PTR [eax],al
  40b2e6:	bound  eax,QWORD PTR ds:0xf7ca0000
  40b2ec:	je     0x40b2f6
  40b2ee:	xchg   edx,eax
  40b2ef:	jmp    0xfc74:0xf775fffd
  40b2f6:	jne    0x40b36d
  40b2f8:	pop    es
  40b2f9:	call   0x3f5836
  40b2fe:	push   ebx
  40b2ff:	mov    BYTE PTR [ebx],0x0
  40b302:	iret   
  40b303:	jp     0x40b2f1
  40b305:	(bad)  
  40b306:	out    dx,eax
  40b307:	pop    es
  40b308:	call   0xff384501
  40b30d:	or     ecx,DWORD PTR [edx+0x60]
  40b310:	cmp    BYTE PTR [eax-0xe],ch
  40b313:	sub    eax,DWORD PTR [eax+0x0]
  40b316:	retf   0x88db
  40b319:	stos   DWORD PTR es:[edi],eax
  40b31a:	(bad)  
  40b31d:	push   eax
  40b31e:	xor    cl,BYTE PTR [ecx]
  40b320:	add    bh,ch
  40b322:	hlt    
  40b323:	pusha  
  40b324:	in     eax,dx
  40b325:	cmp    DWORD PTR [ebx+0x9],edi
  40b328:	push   eax
  40b329:	(bad)  
  40b32a:	jg     0x40b32d
  40b32c:	call   0xff3ab981
  40b331:	pop    eax
  40b332:	and    al,BYTE PTR [eax+eax*1]
  40b335:	out    dx,eax
  40b336:	xor    al,0x61
  40b338:	repnz cmp DWORD PTR [ebx+0x9],ecx
  40b33c:	push   eax
  40b33d:	jmp    FWORD PTR [edi+0x1]
  40b340:	call   0xff3a7981
  40b345:	call   0x3f85ac
	...
  40b37a:	add    BYTE PTR [eax],al
  40b37c:	mov    bl,0xc2
  40b37e:	pop    es
  40b37f:	add    BYTE PTR [edi+0x7e],cl
  40b382:	in     al,dx
  40b383:	cmp    DWORD PTR [esi+0x600069ec],0xc
  40b38a:	push   DWORD PTR [ebp+0x52]
  40b38d:	fisttp DWORD PTR [ecx-0x77074a5c]
  40b393:	inc    ebp
  40b394:	arpl   ax,bx
  40b396:	test   eax,0xb5a4419
  40b39b:	call   0xff757b76
  40b3a0:	leave  
  40b3a1:	sti    
  40b3a2:	xor    al,0x75
  40b3a4:	pop    ebx
  40b3a5:	les    ecx,FWORD PTR [eax-0x561fdb01]
  40b3ab:	sbb    ebx,DWORD PTR [edx+edx*4]
  40b3ae:	or     ebp,eax
  40b3b0:	loop   0x40b3c1
  40b3b2:	xor    eax,0x37920cff
  40b3b7:	dec    DWORD PTR [esi-0x385bd4dc]
  40b3bd:	pop    es
  40b3be:	xor    eax,0x32921c9
  40b3c3:	push   ebp
  40b3c4:	fmul   DWORD PTR [eax]
  40b3c6:	add    esp,0xbae1fe7
  40b3cc:	retf   
  40b3cd:	mov    ebx,0x33d4ff68
  40b3d2:	inc    ebx
  40b3d3:	movntq QWORD PTR [ebx+0x3],mm7
  40b3d7:	add    BYTE PTR [ebx-0x5b],ah
  40b3da:	mov    ebp,0x13c9e0fb
	...
  40b40f:	add    BYTE PTR [eax],al
  40b411:	add    BYTE PTR [edi],ch
  40b413:	push   ds
  40b414:	xor    al,0x75
  40b416:	push   ebx
  40b417:	ja     0x40b3c7
  40b419:	sti    
  40b41a:	mov    ebx,0x9cff6943
  40b41f:	mov    ch,0xbd
  40b421:	sti    
  40b422:	or     ebp,DWORD PTR [ebx]
  40b424:	stc    
  40b425:	inc    eax
  40b426:	arpl   WORD PTR [edi-0x58840452],dx
  40b42c:	push   0xac0c7cff
  40b431:	push   DWORD PTR [edi+edi*2+0x75]
  40b435:	push   eax
  40b436:	ins    BYTE PTR es:[edi],dx
  40b437:	xor    DWORD PTR [ebx],ecx
  40b439:	call   0xff7518de
  40b43e:	dec    ebx
  40b43f:	add    eax,0x2e545d3d
  40b444:	rol    edx,1
  40b446:	mov    al,ah
  40b448:	call   0x41728281
  40b44d:	popf   
  40b44e:	or     ch,BYTE PTR [esi]
  40b450:	inc    esi
  40b451:	sar    DWORD PTR [esp+eax*1-0x2b12db17],cl
  40b458:	xor    eax,0x8b1d5cae
  40b45d:	dec    ebx
  40b45e:	sbb    al,0x2e
  40b460:	adc    DWORD PTR [eax-0x43],esi
  40b463:	sub    eax,0xeb45ab1e
  40b468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b469:	add    eax,DWORD PTR [eax+edi*4]
  40b46c:	or     al,0x2b
  40b46e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b46f:	pop    ebx
  40b470:	push   es
  40b471:	xor    al,0x93
  40b473:	popf   
  40b474:	call   0x40b47c
	...
  40b4a5:	add    BYTE PTR [eax],al
  40b4a7:	add    ah,bh
  40b4a9:	outs   dx,BYTE PTR ds:[esi]
  40b4aa:	cdq    
  40b4ab:	xor    al,0x6e
  40b4ad:	std    
  40b4ae:	add    BYTE PTR [edx+0x1ce62dab],al
  40b4b4:	icebp  
  40b4b5:	data16 fidiv WORD PTR [ebx]
  40b4b8:	cmp    ecx,ebp
  40b4ba:	adc    al,ch
  40b4bc:	les    ebp,FWORD PTR [esi]
  40b4be:	push   esp
  40b4bf:	xor    bl,cl
  40b4c1:	call   0xd4f4e858
  40b4c6:	push   eax
  40b4c7:	add    eax,0xd4771e63
  40b4cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4cd:	mov    bh,0xe0
  40b4cf:	sbb    eax,DWORD PTR [ebx]
  40b4d1:	cmp    eax,0xb38b33a6
  40b4d6:	inc    esi
  40b4d7:	xor    ecx,DWORD PTR [ebp+ebp*1-0x6484cfe4]
  40b4de:	inc    esi
  40b4df:	xor    edi,DWORD PTR [ebx+edi*1-0x55]
  40b4e3:	add    BYTE PTR [ebx-0x28],ah
  40b4e6:	jno    0x40b508
  40b4e8:	loopne 0x40b532
  40b4ea:	add    BYTE PTR [ebp-0x3b],dh
  40b4ed:	sub    eax,0xb291d369
  40b4f2:	pop    es
  40b4f3:	push   ecx
  40b4f4:	aam    0x68
  40b4f6:	call   FWORD PTR [esi-0x32]
  40b4f9:	ret    0xc3fb
  40b4fc:	pusha  
  40b4fd:	lahf   
  40b4fe:	sbb    DWORD PTR [esi-0x6],ecx
  40b501:	add    al,0xe8
  40b503:	or     esi,DWORD PTR [eax+0x2c]
  40b506:	call   ebx
  40b508:	pusha  
  40b509:	lahf   
  40b50a:	and    dh,BYTE PTR [esi]
	...
  40b53c:	add    BYTE PTR [eax],al
  40b53e:	jmp    0xff2c:0x51d7e804
  40b545:	xchg   ebx,eax
  40b546:	pusha  
  40b547:	lahf   
  40b548:	sbb    ebx,DWORD PTR [esi]
  40b54a:	retf   0xe804
  40b54d:	jecxz  0x40b5a0
  40b54f:	sub    al,0xff
  40b551:	cmp    DWORD PTR [ebx-0x2916bf12],0xe874ff0e
  40b55b:	and    al,0xfb
  40b55d:	div    DWORD PTR [ecx]
  40b55f:	sub    al,0x68
  40b561:	je     0x40b531
  40b563:	(bad)  
  40b566:	mov    esp,0x68f1752b
  40b56b:	sbb    esi,edi
  40b56d:	(bad)  
  40b56e:	xchg   ecx,eax
  40b56f:	popf   
  40b570:	je     0x40b585
  40b572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b573:	sub    al,0x69
  40b575:	in     eax,0x71
  40b577:	mov    dl,0x7
  40b579:	rcl    DWORD PTR [ebx],1
  40b57b:	sub    edi,edi
  40b57d:	mov    dh,0x71
  40b57f:	mov    dl,0xfb
  40b581:	scas   al,BYTE PTR es:[edi]
  40b582:	fild   DWORD PTR [eax+ebp*8]
  40b585:	sbb    edi,esp
  40b587:	sub    edi,edi
  40b589:	mov    al,0x26
  40b58b:	add    DWORD PTR [eax],eax
  40b58d:	cmp    al,0x4
  40b58f:	sbb    DWORD PTR [ecx-0xcba75b],eax
  40b595:	add    ch,bl
  40b597:	test   DWORD PTR [ebp-0x4],eax
  40b59a:	dec    edx
  40b59b:	clc    
  40b59c:	je     0x40b5ae
  40b59e:	in     eax,dx
  40b59f:	ins    BYTE PTR es:[edi],dx
  40b5a0:	or     ebp,eax
	...
  40b5d2:	add    BYTE PTR [eax],al
  40b5d4:	adc    ah,BYTE PTR [eax-0x1]
  40b5d7:	call   DWORD PTR [ecx-0x38]
  40b5da:	push   cs
  40b5db:	test   DWORD PTR ds:0x75000001,eax
  40b5e1:	cmp    eax,0x84a00f7
  40b5e6:	add    bh,al
  40b5e8:	pop    es
  40b5e9:	hlt    
  40b5ea:	inc    BYTE PTR [edi]
  40b5ec:	cmp    cl,BYTE PTR [eax]
  40b5ee:	push   0x0
  40b5f0:	and    BYTE PTR [eax],cl
  40b5f2:	push   0x0
  40b5f4:	and    BYTE PTR [eax],cl
  40b5f6:	lea    eax,[ebp+0x76]
  40b5f9:	pop    eax
  40b5fa:	mov    WORD PTR [ebp-0x1108a],es
  40b600:	retf   0x74f6
  40b603:	clc    
  40b604:	ins    DWORD PTR es:[edi],dx
  40b605:	ins    DWORD PTR es:[edi],dx
  40b606:	sti    
  40b607:	call   0x4015fc
  40b60c:	icebp  
  40b60d:	(bad)  
  40b60e:	jae    0x40b615
  40b610:	arpl   WORD PTR [edx],bp
  40b612:	add    BYTE PTR [eax],al
  40b614:	retf   0x978f
  40b617:	sub    BYTE PTR [ebx-0x358a00ff],cl
  40b61d:	cvtps2pi mm5,QWORD PTR [ecx-0x74b00a53]
  40b624:	cli    
  40b625:	stos   DWORD PTR es:[edi],eax
  40b626:	test   ah,dh
  40b628:	cmc    
  40b629:	cmc    
  40b62a:	(bad)  
  40b62b:	push   eax
  40b62c:	dec    eax
  40b62d:	or     DWORD PTR ds:0x88f5eda9,ebx
  40b633:	test   edx,ebx
  40b635:	in     eax,dx
  40b636:	(bad)  
  40b637:	inc    DWORD PTR [eax]
	...
  40b669:	add    dl,dh
  40b66b:	jno    0x40b611
  40b66d:	(bad)  
  40b66e:	in     eax,dx
  40b66f:	mov    bh,bh
  40b671:	arpl   WORD PTR [bp+si-0x12],bp
  40b675:	inc    eax
  40b676:	arpl   WORD PTR [ebx+0x77],di
  40b679:	lock ins BYTE PTR es:[edi],dx
  40b67b:	xor    BYTE PTR [ecx],0xff
  40b67e:	neg    BYTE PTR [ecx]
  40b680:	sbb    esi,DWORD PTR [esi-0x45]
  40b683:	mov    dl,0x30
  40b685:	mov    esi,esp
  40b687:	test   al,0x38
  40b689:	call   DWORD PTR [edi+edx*2+0x3]
  40b68d:	push   0xffc2e743
  40b692:	inc    ebp
  40b693:	mov    dh,BYTE PTR [edi+esi*8]
  40b696:	cmp    al,0xbc
  40b698:	xor    BYTE PTR [ebp+0x67],dh
  40b69b:	aam    0xcc
  40b69d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b69e:	sub    al,0xec
  40b6a0:	jp     0x40b627
  40b6a2:	cmp    ebp,esp
  40b6a4:	xor    bh,bh
  40b6a6:	loopne 0x40b641
  40b6a8:	pop    ds
  40b6a9:	not    DWORD PTR [esp+eiz*8]
  40b6ac:	add    esi,DWORD PTR [ebx+edx*2-0x6c]
  40b6b0:	add    eax,DWORD PTR [eax]
  40b6b2:	hlt    
  40b6b3:	rcr    BYTE PTR [ebx+0x35d399b],cl
  40b6b9:	jmp    FWORD PTR [esi-0x1300c6f0]
  40b6bf:	sub    esi,DWORD PTR [esi+0x3b07fb07]
  40b6c5:	(bad)  
  40b6c6:	fadd   QWORD PTR [edx+eax*1-0x649d3c00]
  40b6cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  40b6fe:	add    BYTE PTR [eax],al
  40b700:	mov    ebp,ebx
  40b702:	add    edi,edi
  40b704:	push   cs
  40b705:	inc    ecx
  40b706:	cmp    bh,bh
  40b708:	mov    esp,0xcb07b63b
  40b70d:	(bad)  
  40b70e:	cmp    bh,bh
  40b710:	lods   al,BYTE PTR ds:[esi]
  40b711:	lahf   
  40b712:	ins    DWORD PTR es:[edi],dx
  40b713:	call   0x712ac4
  40b718:	pop    ss
  40b719:	sub    al,0x9b
  40b71b:	call   DWORD PTR [ebp+eax*1-0x77048e6a]
  40b722:	jecxz  0x40b6e6
  40b724:	test   BYTE PTR [ebx],ch
  40b726:	pop    esp
  40b727:	sbb    esi,DWORD PTR [edx+ebp*1-0x72]
  40b72b:	xor    dh,ch
  40b72d:	cld    
  40b72e:	nop
  40b72f:	jne    0x40b6cb
  40b731:	sub    bh,BYTE PTR [esi-0x65]
  40b734:	arpl   WORD PTR ds:0x63cb7186,ax
  40b73a:	mov    bl,0xc2
  40b73c:	push   esp
  40b73d:	sub    ebx,DWORD PTR [ebx+ebx*1+0x305e2a54]
  40b744:	into   
  40b745:	std    
  40b746:	inc    eax
  40b747:	lea    ebp,[edx]
  40b749:	sub    cl,BYTE PTR [esi+0x30]
  40b74c:	out    dx,al
  40b74d:	sbb    BYTE PTR [esi],bh
  40b74f:	xor    BYTE PTR [ebx*1+0x2a246729],ch
  40b756:	ss jbe 0x40b764
  40b759:	xor    ch,BYTE PTR [esi]
  40b75b:	xor    BYTE PTR [ebx],cl
  40b75d:	jo     0x40b7ac
  40b75f:	xor    BYTE PTR [edx+ebp*1],cl
  40b762:	push   esp
  40b763:	xor    eax,DWORD PTR [eax]
	...
  40b795:	add    BYTE PTR [edx+ebp*1],cl
  40b798:	push   ss
  40b799:	xor    BYTE PTR [esi-0x7],dh
  40b79c:	or     eax,0x3d1d5cb6
  40b7a1:	xor    esp,ebp
  40b7a3:	sub    esi,edi
  40b7a5:	jne    0x40b79a
  40b7a7:	xor    esi,esi
  40b7a9:	das    
  40b7aa:	retf   
  40b7ab:	mov    eax,DWORD PTR [ebp+0x30]
  40b7ae:	aam    0x29
  40b7b0:	sub    al,0x2c
  40b7b2:	mov    edx,0xc42fdf3c
  40b7b7:	sub    DWORD PTR [eax+esi*1-0x35],ebx
  40b7bb:	and    eax,0x3c630457
  40b7c0:	stos   DWORD PTR es:[edi],eax
  40b7c1:	add    BYTE PTR [ebx-0x30],ah
  40b7c4:	jno    0x40b7e6
  40b7c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7c7:	scas   eax,DWORD PTR es:[edi]
  40b7c8:	jmp    esp
  40b7ca:	js     0x40b808
  40b7cc:	test   al,0xae
  40b7ce:	inc    esp
  40b7cf:	(bad)  
  40b7d0:	mov    edi,0xafa17e1d
  40b7d5:	jecxz  0x40b776
  40b7d7:	sub    DWORD PTR [edi-0x7f],ecx
  40b7da:	lods   eax,DWORD PTR ds:[esi]
  40b7db:	popa   
  40b7dc:	dec    DWORD PTR [esi-0x16984671]
  40b7e2:	pusha  
  40b7e3:	sbb    bh,BYTE PTR [esi+0x40eed311]
  40b7e9:	jmp    0xe1b5e01e
  40b7ee:	js     0x40b7d2
  40b7f0:	enter  0x7c66,0xcd
  40b7f4:	addr16 call 0xc1fed05a
	...
  40b82a:	add    BYTE PTR [eax],al
  40b82c:	(bad)  
  40b82d:	jmp    0x40b86f
  40b82f:	jmp    0xf1b5e044
  40b834:	dec    eax
  40b835:	push   ss
  40b836:	leave  
  40b837:	ds je  0x40b857
  40b83a:	cmp    eax,0xc9284c8d
  40b83f:	sub    edx,DWORD PTR [edi]
  40b841:	sub    DWORD PTR [edx+esi*2+0x43],edx
  40b845:	test   ah,al
  40b847:	sbb    eax,0xe969d02d
  40b84c:	fimul  DWORD PTR [ebx]
  40b84e:	call   DWORD PTR [eax+edi*8+0x3c485d20]
  40b855:	sub    BYTE PTR [ecx+0x357c34a4],cl
  40b85b:	test   eax,0x61ffc5b8
  40b860:	rol    ah,cl
  40b862:	daa    
  40b863:	sub    BYTE PTR [edi-0x7b],ah
  40b866:	aas    
  40b867:	jmp    0xe9fc3d31
  40b86c:	pusha  
  40b86d:	add    eax,0xc5ca7868
  40b872:	(bad)  
  40b873:	dec    DWORD PTR [ecx+ecx*1-0x50]
  40b877:	jbe    0x40b833
  40b879:	add    al,0xb
  40b87b:	rcr    BYTE PTR [esi+0x67],0x3f
  40b87f:	adc    BYTE PTR [edx-0x27bf0fc],0x3
  40b886:	add    BYTE PTR [eax],al
  40b888:	dec    edx
  40b889:	mov    DWORD PTR [eax-0x17feb4c6],edx
  40b88f:	in     eax,dx
	...
  40b8c0:	add    BYTE PTR [eax],al
  40b8c2:	dec    esi
  40b8c3:	add    DWORD PTR [eax],eax
  40b8c5:	pop    edx
  40b8c6:	jns    0x40b88e
  40b8c8:	dec    edi
  40b8c9:	call   0x3f5de1
  40b8ce:	jp     0x40b921
  40b8d0:	add    BYTE PTR [bp+si+0x7],cl
  40b8d4:	mov    esi,0x401de668
  40b8d9:	add    BYTE PTR [edx],cl
  40b8db:	xlat   BYTE PTR ds:[ebx]
  40b8dc:	je     0x40b8e6
  40b8de:	mov    ds:0xa5ffc87e,al
  40b8e3:	cmp    al,0x67
  40b8e5:	add    DWORD PTR [edx],edi
  40b8e7:	pop    es
  40b8e8:	mov    esi,0x401ddc68
  40b8ed:	add    dl,bh
  40b8ef:	(bad)  
  40b8f0:	je     0x40b8fa
  40b8f2:	mov    ds:0x45ffc882,al
  40b8f7:	or     al,0xb2
  40b8f9:	mov    ds:0x43ead765,eax
  40b8fe:	loop   0x40b8a8
  40b900:	cmp    DWORD PTR [ecx+0xa],eax
  40b903:	dec    edi
  40b904:	out    0x41,eax
  40b906:	ins    BYTE PTR es:[edi],dx
  40b907:	add    al,0x0
  40b909:	or     edi,DWORD PTR [edx]
  40b90b:	jo     0x40b940
  40b90d:	push   esi
  40b90e:	bound  esp,QWORD PTR [eax-0x54]
  40b911:	inc    ebp
  40b913:	push   edx
  40b914:	dec    edi
  40b915:	push   0xbeef03ba
  40b91a:	xor    dl,BYTE PTR [ebp+0x1e63413a]
  40b920:	sar    esi,cl
  40b922:	cs sbb edx,DWORD PTR es:[ebp+0x0]
	...
  40b957:	add    BYTE PTR [ebx+0x3b582d3e],bl
  40b95d:	sbb    eax,0xc5ddef03
  40b962:	cmp    ah,BYTE PTR gs:[edx]
  40b965:	push   ds
  40b966:	sar    esi,cl
  40b968:	push   ss
  40b969:	sbb    eax,DWORD PTR ss:[ecx-0x65]
  40b96d:	xchg   BYTE PTR ds:0x2cbb0ee8,ch
  40b973:	dec    DWORD PTR [eax+0x2d7fc51c]
  40b979:	push   ds
  40b97a:	mov    dh,0xf9
  40b97c:	sbb    eax,0x1abff0aa
  40b981:	mov    al,0x2c
  40b983:	call   DWORD PTR [ebx+ebp*4+0x5d]
  40b987:	cmp    BYTE PTR [edi+ebp*1-0x7a],ah
  40b98b:	inc    ebp
  40b98c:	inc    esp
  40b98d:	enter  0x6a2c,0x59
  40b991:	iret   
  40b992:	mov    dh,0x7
  40b994:	dec    ebx
  40b995:	fsubr  QWORD PTR ds:0xe0532cff
  40b99b:	(bad)  
  40b99c:	scas   al,BYTE PTR es:[edi]
  40b99d:	xor    al,0x1b
  40b99f:	mov    ecx,0x6a2cf01d
  40b9a4:	ja     0x40b97d
  40b9a6:	mov    dh,0x7
  40b9a8:	sti    
  40b9a9:	iret   
  40b9aa:	sub    eax,0x419504ff
  40b9af:	cmp    ah,BYTE PTR [edx+0x3c352c1c]
  40b9b5:	inc    ebp
  40b9b6:	ret    0xedff
  40b9b9:	test   eax,0xe7fa
	...
  40b9ee:	xor    ch,BYTE PTR [ecx]
  40b9f0:	sub    al,0xff
  40b9f2:	dec    ebx
  40b9f3:	fucompp 
  40b9f5:	inc    eax
  40b9f6:	arpl   WORD PTR [ecx+eax*1+0x69056300],ax
  40b9fd:	sub    al,0x4e
  40b9ff:	std    
  40ba00:	ror    BYTE PTR [esi+edi*4],1
  40ba03:	es (bad) 
  40ba05:	sub    al,0x2e
  40ba07:	sub    esi,ecx
  40ba09:	mov    dh,0x64
  40ba0b:	sbb    eax,0x26a4636b
  40ba10:	push   ds
  40ba11:	into   
  40ba12:	stos   DWORD PTR es:[edi],eax
  40ba13:	inc    ebx
  40ba14:	in     eax,dx
  40ba15:	add    ebp,DWORD PTR [esi]
  40ba17:	jp     0x40b9d6
  40ba19:	and    BYTE PTR [edi-0x7bd361ab],0x78
  40ba20:	and    al,0x30
  40ba22:	adc    esp,DWORD PTR [esi]
  40ba24:	sbb    al,0x14
  40ba26:	je     0x40b9d8
  40ba28:	fcomp  QWORD PTR [ebx]
  40ba2a:	and    eax,0x5803e8b0
  40ba2f:	inc    ebp
  40ba30:	out    dx,al
  40ba31:	xchg   BYTE PTR [ecx+0x1c03e903],ah
  40ba37:	shl    BYTE PTR [eax+0x3],0x63
  40ba3b:	add    eax,0x319e44e9
  40ba40:	pop    esi
  40ba41:	add    al,0x63
  40ba43:	add    eax,0x5c903c3
  40ba48:	ret    
  40ba49:	add    edi,DWORD PTR [ecx+0x30c67405]
  40ba4f:	aad    0x6b
  40ba51:	xchg   BYTE PTR [eax],al
	...
  40ba83:	add    BYTE PTR [edi],dl
  40ba85:	cs ss sub al,0xb3
  40ba89:	es mov ah,0x2b
  40ba8c:	or     al,0xb0
  40ba8e:	and    al,0x1b
  40ba90:	imul   esi,DWORD PTR [eax+0x456803e8],0xffffff9d
  40ba97:	push   es
  40ba98:	or     al,BYTE PTR [eax]
  40ba9a:	jmp    0x40ba9f
  40ba9c:	arpl   WORD PTR [ebp+0x5a3db60],bx
  40baa2:	(bad)  
  40baa3:	mov    ch,0x6c
  40baa5:	sbb    eax,0x263eb200
  40baaa:	call   FWORD PTR [ecx+0x6c8d554b]
  40bab0:	xchg   ebx,eax
  40bab1:	cs (bad) 
  40bab3:	ficom  WORD PTR [edi+0x4102e7d3]
  40bab9:	jmp    DWORD PTR es:[eax-0x1e]
  40babd:	xor    al,0xf7
  40babf:	(bad)  
  40bac0:	js     0x40badf
  40bac2:	or     DWORD PTR [ebx-0x1695d9b8],0x283a1df8
  40bacc:	addr16 es mov ch,0x99
  40bad0:	push   eax
  40bad1:	call   FWORD PTR es:[esi+0x6de7f9b2]
  40bad8:	add    ah,BYTE PTR [esi]
  40bada:	jmp    DWORD PTR [eax-0x1e]
  40badd:	and    bh,dh
  40badf:	xchg   BYTE PTR [eax],bh
  40bae1:	fwait
  40bae2:	call   DWORD PTR [eax]
  40bae4:	xchg   esi,eax
  40bae5:	fild   WORD PTR [eax-0x17]
	...
  40bb18:	add    BYTE PTR [eax],al
  40bb1a:	mov    DWORD PTR [edx-0x10],ebx
  40bb1d:	jbe    0x40bb97
  40bb1f:	and    al,0xff
  40bb21:	fmul   QWORD PTR [ebp+ebp*1+0x69]
  40bb25:	test   BYTE PTR [eax+0x5b6c8924],cl
  40bb2b:	sbb    al,0xff
  40bb2d:	dec    esi
  40bb2e:	int    0x24
  40bb30:	addr16 inc ebx
  40bb32:	xor    eax,0x923dffc6
  40bb37:	adc    eax,0x244836f7
  40bb3c:	jne    0x40bb1b
  40bb3e:	push   0x3826a4d3
  40bb43:	mov    es,WORD PTR [ebp-0xdbcfef]
  40bb49:	and    DWORD PTR [eax-0x53],0x2
  40bb4d:	shl    BYTE PTR [edi],cl
  40bb4f:	and    eax,0xd92700fe
  40bb54:	idiv   bh
  40bb56:	fucomp st(7)
  40bb58:	je     0x40bb66
  40bb5a:	bound  ebx,QWORD PTR [esp+eiz*4]
  40bb5d:	(bad)  
  40bb5e:	mov    ebp,0xa5dc84a1
  40bb63:	out    dx,eax
  40bb64:	dec    BYTE PTR [ebp-0x917b9]
  40bb6a:	lea    edi,[eax]
  40bb6c:	adc    edx,DWORD PTR [bx+di+0x4a]
  40bb70:	(bad)  
  40bb71:	(bad)  
  40bb72:	daa    
  40bb73:	fdiv   st,st(6)
  40bb75:	(bad)  
  40bb76:	fucomp st(7)
  40bb78:	xor    al,0x27
  40bb7a:	arpl   WORD PTR [edx-0x1],cx
  40bb7d:	out    0x0,eax
	...
  40bbaf:	add    BYTE PTR [edx-0x6e00015b],ch
  40bbb5:	enter  0x1973,0x9
  40bbb9:	lods   eax,DWORD PTR ds:[esi]
  40bbba:	fcomip st,st(7)
  40bbbc:	int    0xef
  40bbbe:	add    esi,DWORD PTR [ebp+0x6a]
  40bbc1:	out    dx,eax
  40bbc2:	das    
  40bbc3:	(bad)  
  40bbc4:	test   edi,0x38ddfff6
  40bbca:	out    0xdd,eax
  40bbcc:	stos   DWORD PTR es:[edi],eax
  40bbcd:	out    dx,eax
  40bbce:	(bad)  
  40bbcf:	jmp    0x40bc07
  40bbd1:	and    edi,DWORD PTR [edi-0x18c7cb8c]
  40bbd7:	shr    ebx,1
  40bbd9:	out    dx,al
  40bbda:	inc    bh
  40bbdc:	(bad)  
  40bbdd:	shl    dh,1
  40bbdf:	call   FWORD PTR [ebp+0x3afffff5]
  40bbe5:	popf   
  40bbe6:	test   al,dl
  40bbe8:	push   ebp
  40bbe9:	out    dx,eax
  40bbea:	(bad)  
  40bbeb:	push   eax
  40bbec:	and    cl,BYTE PTR [esi]
  40bbee:	cmp    eax,DWORD PTR [ecx-0x6]
  40bbf1:	out    dx,al
  40bbf2:	mov    ah,0xf0
  40bbf4:	gs out dx,eax
  40bbf6:	(bad)  
  40bbf7:	call   edi
  40bbf9:	sbb    esp,edi
  40bbfb:	lds    esp,FWORD PTR [ebx-0x2e]
  40bbfe:	sub    edi,edi
  40bc00:	fisubr DWORD PTR [eax+0xae4f74e]
  40bc06:	xchg   BYTE PTR [ebp-0xd6e539],bh
  40bc0c:	arpl   WORD PTR [ebx],bp
  40bc0e:	jg     0x40bbab
  40bc10:	arpl   WORD PTR [esi],bp
  40bc12:	add    eax,DWORD PTR [ebx+0x0]
	...
  40bc44:	add    BYTE PTR [eax],al
  40bc46:	push   es
  40bc47:	cmp    dh,BYTE PTR [ecx]
  40bc49:	(bad)  
  40bc4a:	mov    esp,0xe583f82d
  40bc4f:	sub    eax,0x90e00003
  40bc54:	sbb    al,0xf7
  40bc56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc57:	dec    edx
  40bc58:	add    al,0xf
  40bc5a:	out    0xac,eax
  40bc5c:	add    eax,DWORD PTR [eax]
  40bc5e:	arpl   si,ax
  40bc60:	adc    eax,DWORD PTR [eax]
  40bc62:	jl     0x40bc17
  40bc64:	sub    BYTE PTR [ebp+0x5b],dh
  40bc67:	jbe    0x40bc91
  40bc69:	popf   
  40bc6a:	jl     0x40bbee
  40bc6c:	sub    DWORD PTR [ebp-0xd67d79],esi
  40bc72:	ins    BYTE PTR es:[edi],dx
  40bc73:	clc    
  40bc74:	sti    
  40bc75:	out    0x13,eax
  40bc77:	lods   al,BYTE PTR ds:[esi]
  40bc78:	sub    bh,bh
  40bc7a:	pop    esp
  40bc7b:	ficomp DWORD PTR [ebx]
  40bc7d:	not    DWORD PTR [esp+ebx*4+0x28]
  40bc81:	jne    0x40bcde
  40bc83:	test   dh,al
  40bc85:	popf   
  40bc86:	inc    esp
  40bc87:	lods   al,BYTE PTR ds:[esi]
  40bc88:	sub    BYTE PTR [ebp-0xd743b9],dh
  40bc8e:	xor    al,0x42
  40bc90:	sti    
  40bc91:	out    0x77,eax
  40bc93:	mov    dl,0x28
  40bc95:	jmp    DWORD PTR [edx+eiz*4]
  40bc98:	dec    ebx
  40bc99:	neg    DWORD PTR [esp+eiz*8]
  40bc9c:	sub    BYTE PTR [ebp+0x6b],dh
  40bc9f:	les    edi,FWORD PTR [edi]
  40bca1:	popf   
  40bca2:	or     al,0xf4
  40bca4:	sub    BYTE PTR [ebp+0x291e0627],dh
	...
  40bcda:	add    BYTE PTR [eax],al
  40bcdc:	cld    
  40bcdd:	and    dl,BYTE PTR [ebx+edi*8+0x2976fdfc]
  40bce4:	in     al,dx
  40bce5:	xchg   BYTE PTR [eax+edx*2-0x14],cl
  40bce9:	and    al,BYTE PTR [esi]
  40bceb:	add    al,0x57
  40bced:	(bad)  
  40bcee:	imul   esp,DWORD PTR [edi-0x4d],0x6728f61a
  40bcf5:	cwde   
  40bcf6:	fidivr DWORD PTR [esi+ebx*8+0x39]
  40bcfa:	fisubr WORD PTR [eax]
  40bcfc:	mov    esp,0x2e291922
  40bd01:	or     eax,0x22ce8fc1
  40bd06:	into   
  40bd07:	sbb    al,0x59
  40bd09:	scas   eax,DWORD PTR es:[edi]
  40bd0a:	call   0xd14dd337
  40bd0f:	jnp    0x40bd07
  40bd11:	and    dh,BYTE PTR [esi-0x49d629d8]
  40bd17:	sub    BYTE PTR [ebp+ebp*1+0x227c639d],al
  40bd1e:	sahf   
  40bd1f:	outs   dx,BYTE PTR ds:[esi]
  40bd20:	xchg   DWORD PTR [edx],ebx
  40bd22:	xchg   esi,eax
  40bd23:	sub    BYTE PTR [ebx+0x2c],bh
  40bd26:	dec    ecx
  40bd27:	sub    BYTE PTR [edx+eiz*1+0x3c],ah
  40bd2b:	sbb    edx,DWORD PTR [edx+eiz*1+0x7e]
  40bd2f:	sbb    esi,DWORD PTR ds:0x4c287665
  40bd35:	pop    eax
  40bd36:	lea    esi,[eax]
  40bd38:	inc    esp
  40bd39:	and    dl,BYTE PTR [ecx+0x54]
  40bd3c:	add    esp,DWORD PTR [edx]
  40bd3e:	pop    esi
  40bd3f:	sub    BYTE PTR [eax],al
	...
  40bd71:	add    dh,ch
  40bd73:	cmp    BYTE PTR [esi+0x28],bl
  40bd76:	sub    al,0x2d
  40bd78:	and    DWORD PTR [ebx+0x24],esp
  40bd7b:	and    al,BYTE PTR [esi+0x6e]
  40bd7e:	adc    ebx,DWORD PTR [edx]
  40bd80:	sub    BYTE PTR ds:[eax+ebx*4],dl
  40bd84:	jmp    esp
  40bd86:	cmp    ebx,DWORD PTR [eax+0x20794107]
  40bd8c:	jmp    DWORD PTR [esi]
  40bd8e:	dec    ebx
  40bd8f:	pop    eax
  40bd90:	lock push ss
  40bd92:	dec    ebx
  40bd93:	and    ch,al
  40bd95:	inc    ebp
  40bd96:	and    BYTE PTR [edx],0xff
  40bd99:	push   cs
  40bd9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd9b:	sbb    ecx,ebp
  40bd9d:	xor    al,0x85
  40bd9f:	and    bh,bh
  40bda1:	inc    BYTE PTR [esi]
  40bda3:	push   ds
  40bda4:	call   0xff62d5a8
  40bda9:	and    BYTE PTR [esi],bl
  40bdab:	adc    DWORD PTR [eax],eax
  40bdad:	cmp    al,0x38
  40bdaf:	xor    DWORD PTR [ebx-0x50745b],eax
  40bdb5:	inc    edx
  40bdb6:	pop    ebx
  40bdb7:	and    dh,BYTE PTR [ebp-0x1f]
  40bdba:	dec    eax
  40bdbb:	arpl   WORD PTR [ebp+0x458c44c6],bx
  40bdc1:	mov    ebp,0x283aecf7
  40bdc6:	and    dh,BYTE PTR [di]
  40bdc9:	push   es
  40bdca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdcb:	(bad)  
  40bdcc:	jmp    DWORD PTR [ebp+0x1be809b2]
  40bdd2:	dec    edx
  40bdd3:	and    bh,bh
  40bdd5:	add    DWORD PTR [eax],eax
	...
  40be07:	add    BYTE PTR [esi-0x3716bf22],cl
  40be0d:	add    eax,DWORD PTR [eax]
  40be0f:	jmp    0xf1b5def4
  40be14:	js     0x40bdbb
  40be16:	cld    
  40be17:	jbe    0x40bd9d
  40be19:	and    BYTE PTR [ebp+0x6d],dh
  40be1c:	jl     0x40bdb8
  40be1e:	pop    es
  40be1f:	push   ecx
  40be20:	xchg   esi,eax
  40be21:	cmp    bh,0x5e
  40be24:	jbe    0x40be69
  40be26:	add    al,0xe9
  40be28:	adc    ecx,DWORD PTR [esp+ebp*8-0x1e65c98]
  40be2f:	add    BYTE PTR [ebp+0x300069e8],ah
  40be35:	push   cs
  40be36:	push   DWORD PTR [ebp+0x2]
  40be39:	std    
  40be3a:	jno    0x40bdd9
  40be3c:	xor    eax,0x464588e8
  40be41:	add    DWORD PTR [ebx],0x8d050a01
  40be47:	test   DWORD PTR [ebp-0x19],ecx
  40be4a:	(bad)  
  40be4b:	jmp    FWORD PTR [edx-0x358e2e04]
  40be51:	add    al,0xb
  40be53:	ror    BYTE PTR [esi+0x38],0x3c
  40be57:	add    al,0xbb
  40be59:	add    al,0x0
  40be5b:	ja     0x40bdfc
  40be5d:	jl     0x40be9f
  40be5f:	cmp    ecx,DWORD PTR [ebx-0x727a72f7]
  40be65:	jmp    0xa3a9:0x16afffe
	...
  40be9c:	add    BYTE PTR [eax],al
  40be9e:	xchg   ebp,eax
  40be9f:	out    0x4f,eax
  40bea1:	push   0xbeef048a
  40bea6:	jp     0x40be90
  40bea8:	je     0x40beb2
  40beaa:	mov    ds:0xb5ffc0e5,al
  40beaf:	cld    
  40beb0:	cmc    
  40beb1:	lahf   
  40beb2:	(bad)
  40beb5:	jne    0x40be8d
  40beb7:	out    0x74,eax
  40beb9:	or     dl,ah
  40bebb:	sbb    DWORD PTR [edi+edi*8+0x4c1e1d5],0xec8a354a
  40bec6:	leave  
  40bec7:	loopne 0x40bec4
  40bec9:	push   0x3a
  40becb:	jle    0x40beea
  40becd:	dec    DWORD PTR [edi+0x1c]
  40bed0:	out    0xd,eax
  40bed2:	out    0xe6,eax
  40bed4:	dec    BYTE PTR [ecx+0x67e7ff]
  40beda:	arpl   WORD PTR [esi],bp
  40bedc:	push   ss
  40bedd:	mov    esi,0x40ea7fbb
  40bee2:	arpl   WORD PTR [esi],si
  40bee4:	retf   0xa23a
  40bee7:	cs es jne 0x40bf46
  40beeb:	(bad)  
  40beec:	dec    edi
  40beed:	les    eax,FWORD PTR [edi+ebp*8]
  40bef0:	and    eax,0xafe6ff75
  40bef5:	pop    es
  40bef6:	or     edx,DWORD PTR [eax-0x78]
  40bef9:	(bad)  
  40befa:	in     al,dx
  40befb:	in     al,0x40
  40befd:	add    al,0x63
  40beff:	pop    ecx
  40bf00:	jp     0x40beee
	...
  40bf32:	add    BYTE PTR [eax],al
  40bf34:	loop   0x40bf27
  40bf36:	dec    esi
  40bf37:	not    esp
  40bf39:	push   ds
  40bf3a:	ja     0x40bf81
  40bf3c:	iret   
  40bf3d:	jge    0x40bf65
  40bf3f:	jne    0x40bfb4
  40bf41:	das    
  40bf42:	scas   eax,DWORD PTR es:[edi]
  40bf43:	or     ecx,ebx
  40bf45:	inc    ecx
  40bf46:	mov    bl,0xff
  40bf48:	mov    ah,0x12
  40bf4a:	inc    ebx
  40bf4b:	(bad)  
  40bf4d:	inc    ecx
  40bf4e:	add    eax,DWORD PTR [eax]
  40bf50:	arpl   WORD PTR [edi-0x41],sp
  40bf53:	mul    DWORD PTR [ebx+0x2e]
  40bf56:	add    eax,DWORD PTR [eax]
  40bf58:	pushf  
  40bf59:	call   0x2ea5be8d
  40bf5e:	add    ebp,DWORD PTR [edx+0x63]
  40bf61:	les    eax,FWORD PTR [ebx]
  40bf63:	push   0x63
  40bf65:	hlt    
  40bf66:	add    ecx,DWORD PTR [ebp-0x732b85e2]
  40bf6c:	out    0x81,al
  40bf6e:	sub    eax,0x24dd64ff
  40bf73:	jne    0x40bfd0
  40bf75:	mov    BYTE PTR [edi-0x4c98b405],ch
  40bf7b:	dec    DWORD PTR [esp+0x43]
  40bf7f:	je     0x40bfdf
  40bf81:	test   DWORD PTR [ebp+0x1],ebp
  40bf84:	arpl   WORD PTR ds:0xedcc9be9,ax
  40bf8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf8b:	add    ebp,DWORD PTR [ecx+ebx*4]
  40bf8e:	clc    
  40bf8f:	sbb    edi,DWORD PTR [edx]
  40bf91:	fs dec esi
  40bf93:	and    eax,0x77198ab3
	...
  40bfc8:	add    BYTE PTR [eax],al
  40bfca:	ficomp WORD PTR [ecx]
  40bfcc:	ss and eax,0x1b9ab60c
  40bfd2:	sub    ah,BYTE PTR [esi+ebp*1+0x25]
  40bfd6:	jmp    0x111e:0xf42d1988
  40bfdd:	aad    0xcd
  40bfdf:	push   ds
  40bfe0:	push   ss
  40bfe1:	ja     0x40bfc1
  40bfe3:	and    eax,0xb5dc2516
  40bfe8:	nop
  40bfe9:	sahf   
  40bfea:	cdq    
  40bfeb:	(bad)  
  40bfec:	call   0xfe56d615
  40bff1:	and    al,0xc4
  40bff3:	push   ds
  40bff4:	je     0x40bfed
  40bff6:	(bad)  
  40bff7:	lock mov ah,BYTE PTR [esp+esi*4]
  40bffb:	mov    WORD PTR [edi+ebx*1-0x4c],fs
  40bfff:	push   ds
  40c000:	(bad)  
  40c001:	cdq    
  40c002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c004:	ds jmp 0x6f06c52d
  40c00a:	xchg   ebx,eax
  40c00b:	push   ss
  40c00c:	mov    esi,0xe4988c24
  40c011:	sbb    esi,DWORD PTR [ecx+0x63]
  40c014:	scas   al,BYTE PTR es:[edi]
  40c015:	and    al,0xea
  40c017:	mov    BYTE PTR [ebp+0x131e742c],dl
  40c01d:	add    al,0xfb
  40c01f:	xchg   edx,eax
  40c020:	rol    edx,1
  40c022:	fs pop ds
  40c024:	push   esp
  40c025:	xor    edx,DWORD PTR [esi+ebx*1-0x7a]
  40c029:	and    al,0xce
  40c02b:	adc    DWORD PTR [ecx+0x2c],edx
	...
  40c05d:	add    BYTE PTR [eax],al
  40c05f:	add    BYTE PTR [edx],al
  40c061:	push   ds
  40c062:	add    BYTE PTR [esi-0x37],dh
  40c065:	mov    al,ch
  40c067:	jbe    0x40bff0
  40c069:	push   ds
  40c06a:	push   0xffffffe9
  40c06c:	fcomp  DWORD PTR [edx+0x1e60a83a]
  40c072:	mov    ch,0x59
  40c074:	ja     0x40c094
  40c076:	dec    DWORD PTR [esi-0x33]
  40c079:	or     eax,ebp
  40c07b:	and    eax,0x70ff1e81
  40c080:	lea    eax,[ecx-0x9]
  40c083:	ss aas 
  40c085:	stos   DWORD PTR es:[edi],eax
  40c086:	inc    eax
  40c088:	jns    0x40c064
  40c08a:	inc    eax
  40c08b:	jmp    0x173118cf
  40c090:	inc    edi
  40c091:	push   ds
  40c092:	call   FWORD PTR [esp+ebp*8-0x78b73edb]
  40c099:	push   ds
  40c09a:	mov    DWORD PTR [eax+ebp*1+0x16],ebp
  40c09e:	(bad)  
  40c09f:	(bad)  
  40c0a0:	jmp    0x40c0bf
  40c0a2:	addr16 sub al,0xbb
  40c0a5:	(bad)  
  40c0a6:	(bad)  
  40c0a7:	in     eax,dx
  40c0a8:	dec    esi
  40c0a9:	adc    eax,0x1e80e6f7
  40c0ae:	jne    0x40c09d
  40c0b0:	js     0x40c119
  40c0b2:	mov    eax,ds:0x858c80d6
  40c0b7:	mov    ch,0x78
  40c0b9:	push   ds
  40c0ba:	jmp    FWORD PTR [edx+0x2]
  40c0bd:	sub    edi,esi
  40c0bf:	mov    esi,0x30740540
	...
  40c0f4:	add    BYTE PTR [eax],al
  40c0f6:	fcomp  QWORD PTR [edi-0x14]
  40c0f9:	mov    dh,0x40
  40c0fb:	push   ds
  40c0fc:	add    BYTE PTR ds:0x91bd82cf,bl
  40c102:	dec    eax
  40c103:	push   ds
  40c104:	(bad)  
  40c105:	jmp    0xf9a867d6
  40c10a:	pusha  
  40c10b:	sub    al,0xbe
  40c10d:	add    ch,bl
  40c10f:	jle    0x40c118
  40c111:	call   0x3f5d09
  40c116:	int    0xbe
  40c118:	jmp    0x40c111
  40c11a:	int    0xe8
  40c11c:	(bad)  
  40c11d:	jne    0x40c151
  40c11f:	icebp  
  40c120:	cmp    al,0x9b
  40c122:	(bad)  
  40c123:	call   0xe37726
  40c128:	(bad)  
  40c129:	jmp    FWORD PTR [ebp+0x6de8077e]
  40c12f:	pushf  
  40c130:	(bad)  
  40c131:	dec    DWORD PTR [ebp-0x42]
  40c134:	fcomip st,st(7)
  40c136:	dec    ebp
  40c137:	call   0xe7773a
  40c13c:	(bad)  
  40c13d:	(bad)  
  40c13e:	cmp    eax,0x5de8077e
  40c143:	fwait
  40c144:	(bad)  
  40c145:	dec    DWORD PTR [ebp-0x42]
  40c148:	xlat   BYTE PTR ds:[ebx]
  40c149:	imul   DWORD PTR [ebp-0x18]
  40c14c:	(bad)  
  40c14d:	jne    0x40c121
  40c14f:	lock or al,0x9b
  40c152:	int    0xe7
  40c154:	(bad)  
  40c155:	mov    ch,0x6e
  40c157:	add    bh,bh
  40c159:	inc    DWORD PTR [eax]
	...
  40c18b:	add    ch,cl
  40c18d:	jge    0x40c196
  40c18f:	call   0x3f5c51
  40c194:	lea    edi,[ebp-0x1872082d]
  40c19a:	(bad)  
  40c19b:	jne    0x40c11f
  40c19d:	lock lock call 0xffa6:0xb5fee79d
  40c1a6:	(bad)  
  40c1a7:	jmp    DWORD PTR [edx-0x32006305]
  40c1ad:	out    0xb4,eax
  40c1af:	in     al,dx
  40c1b0:	aad    0xe7
  40c1b2:	(bad)  
  40c1b3:	call   0x404782
  40c1b8:	arpl   WORD PTR [ebx+0x58],si
  40c1bb:	call   0xe8634d14
  40c1c0:	mov    eax,ds:0xd14cff21
  40c1c6:	test   DWORD PTR ds:[ebx+edx*4+0x2a],0x21aadeda
  40c1cf:	(bad)  
  40c1d0:	out    dx,al
  40c1d1:	lds    ebx,FWORD PTR [ecx]
  40c1d3:	jmp    FWORD PTR [esi+esi*4]
  40c1d6:	push   ecx
  40c1d7:	popf   
  40c1d8:	and    al,0xb3
  40c1da:	and    DWORD PTR [ebp-0xde4cc9],esi
  40c1e0:	or     ebp,edx
  40c1e2:	jg     0x40c1e3
  40c1e4:	or     al,0xdb
  40c1e6:	push   edi
  40c1e7:	lock or al,0xd3
  40c1ea:	and    edi,edi
  40c1ec:	jbe    0x40c228
  40c1ee:	and    dh,BYTE PTR [ebp+0x0]
	...
  40c221:	add    BYTE PTR [ebx-0xa],ch
  40c224:	or     esi,edi
  40c226:	in     al,dx
  40c227:	cli    
  40c228:	and    DWORD PTR [ebp-0xde050d],esi
  40c22e:	retf   
  40c22f:	lds    edi,FWORD PTR [edi-0x1]
  40c232:	aam    0x2
  40c234:	enter  0xbaf7,0x26
  40c238:	and    edi,edi
  40c23a:	les    edx,FWORD PTR [edx]
  40c23c:	xchg   edi,eax
  40c23d:	sti    
  40c23e:	retf   
  40c23f:	pop    ds
  40c240:	mov    cl,0xff
  40c242:	mov    ah,0x54
  40c244:	inc    esi
  40c245:	or     al,0x63
  40c247:	ror    DWORD PTR [esp+ebp*8+0x6a2069e0],1
  40c24e:	arpl   ax,cx
  40c250:	add    bh,bh
  40c252:	push   cs
  40c253:	push   ss
  40c254:	sub    edi,DWORD PTR [edx-0x76dea517]
  40c25a:	push   ds
  40c25b:	push   edx
  40c25c:	lods   al,BYTE PTR ds:[esi]
  40c25d:	lea    edi,[eax]
  40c25f:	in     eax,dx
  40c260:	add    edi,edi
  40c262:	cs add eax,0x523eace
  40c268:	sahf   
  40c269:	xchg   edi,eax
  40c26a:	pop    esp
  40c26b:	sub    eax,0x1b5c1fa9
  40c270:	add    DWORD PTR [edx-0x54173b68],edx
  40c276:	bound  eax,QWORD PTR ds:0x914483e9
  40c27c:	loopne 0x40c2a9
  40c27e:	or     eax,0x34216e19
  40c283:	xchg   ecx,eax
  40c284:	and    DWORD PTR fs:[eax],eax
	...
  40c2b7:	add    BYTE PTR [esi-0x36b0aef3],dh
  40c2bd:	sbb    dl,BYTE PTR [esi+0x4b]
  40c2c0:	and    DWORD PTR [edx],eax
  40c2c2:	jmp    0x6a6aac7d
  40c2c7:	dec    eax
  40c2c8:	lfs    edx,FWORD PTR [ebp+0x8ad04ad]
  40c2cf:	and    DWORD PTR [esi+0xd],esi
  40c2d2:	inc    ecx
  40c2d3:	mov    cl,0xda
  40c2d5:	sbb    ah,BYTE PTR [esi]
  40c2d7:	mov    esp,DWORD PTR [esi+0x24d77219]
  40c2dd:	in     eax,dx
  40c2de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2df:	add    ebp,eax
  40c2e1:	fsub   DWORD PTR [ebx+ebp*8-0x1e96fadd]
  40c2e8:	int3   
  40c2e9:	xchg   esi,eax
  40c2ea:	xchg   DWORD PTR [ebx+0x3a7dea8],ebp
  40c2f0:	adc    eax,0xb4b1352d
  40c2f5:	sbb    bh,BYTE PTR [ecx]
  40c2f7:	lods   al,BYTE PTR ds:[esi]
  40c2f8:	pushf  
  40c2f9:	fisub  WORD PTR [edi]
  40c2fb:	add    al,0xc
  40c2fd:	sub    eax,0x1a9cb081
  40c302:	xor    ecx,DWORD PTR ds:0xcec90a3
  40c308:	mov    cl,0x91
  40c30a:	adc    bh,BYTE PTR [edx-0x70ffbc84]
  40c310:	inc    ebx
  40c311:	sbb    ch,BYTE PTR [eax-0x3f]
  40c314:	xchg   edi,eax
  40c315:	(bad)  
  40c318:	aas    
  40c319:	and    BYTE PTR [eax+0x9e],ah
	...
  40c34b:	add    BYTE PTR [eax],al
  40c34d:	add    BYTE PTR [ebx-0x4b],al
  40c350:	addr16 jmp 0x1feedb6
  40c356:	jle    0x40c336
  40c358:	inc    eax
  40c359:	jmp    0xf1b5de6e
  40c35e:	js     0x40c3c8
  40c360:	shl    DWORD PTR [esi-0x7d],0x2d
  40c364:	(bad)  [ebp-0x7d]
  40c367:	sbb    ch,bl
  40c369:	call   0xe97e5d88
  40c36e:	int    0x1b
  40c370:	inc    esi
  40c371:	push   ebp
  40c372:	aaa    
  40c373:	pop    edx
  40c374:	mov    ecx,0xff1a434e
  40c379:	cmp    edx,DWORD PTR [edx-0x1c4bf923]
  40c37f:	sbb    DWORD PTR [ebp+0x35],esi
  40c382:	inc    ebx
  40c383:	nop
  40c384:	pop    es
  40c385:	inc    ecx
  40c386:	or     eax,0x2326ff7c
  40c38b:	mov    eax,0x55c2bc8
  40c390:	push   ebp
  40c391:	bound  ecx,QWORD PTR [esi+eax*4-0x6f7cf23c]
  40c398:	or     eax,DWORD PTR [esi]
  40c39a:	cmc    
  40c39b:	add    eax,ebp
  40c39d:	lds    ecx,FWORD PTR [ebx+0x1a]
  40c3a0:	jmp    DWORD PTR [eax-0x5b]
  40c3a3:	sbb    eax,0x1a5474ff
  40c3a8:	jne    0x40c39b
  40c3aa:	js     0x40c41d
  40c3ac:	xchg   esp,eax
  40c3ad:	fiadd  WORD PTR [esi+ecx*4+0x4d]
  40c3b1:	in     eax,0x0
	...
  40c3e3:	add    BYTE PTR [ecx+0x45],ch
  40c3e6:	je     0x40c413
  40c3e8:	loopne 0x40c3c5
  40c3ea:	(bad)  
  40c3eb:	dec    DWORD PTR [esi+0x24]
  40c3ee:	(bad)  
  40c3ef:	jne    0x40c3b7
  40c3f1:	call   0xf9f6608a
  40c3f6:	dec    edi
  40c3f7:	jmp    FWORD PTR [edi]
  40c3f9:	cmc    
  40c3fa:	(bad)  
  40c3fb:	jne    0x40c3c3
  40c3fd:	push   eax
  40c3fe:	(bad)  
  40c3ff:	jne    0x40c473
  40c401:	in     eax,dx
  40c402:	retf   
  40c403:	xchg   esi,eax
  40c404:	cmc    
  40c405:	clc    
  40c406:	pop    ecx
  40c407:	mov    esi,DWORD PTR [edi-0xb]
  40c40a:	cmp    BYTE PTR [ecx],0x3a
  40c40d:	jle    0x40c418
  40c40f:	push   edx
  40c410:	repnz pop eax
  40c412:	fwait
  40c413:	push   DWORD PTR [ebp+0xeebbf2c]
  40c419:	test   BYTE PTR [ebp+0x10],bh
  40c41c:	cmp    dh,BYTE PTR [ecx+0x7]
  40c41f:	mov    edi,edi
  40c421:	adc    al,0xfe
  40c423:	jne    0x40c3db
  40c425:	mov    BYTE PTR [eax],al
  40c427:	mov    ecx,DWORD PTR [eax-0x14]
  40c42a:	add    DWORD PTR [ebx],ebp
  40c42c:	cmp    cl,dl
  40c42e:	ror    DWORD PTR [edx+edi*8],0x5d
  40c432:	mov    ch,ah
  40c434:	xor    eax,0xafff0b7e
  40c439:	or     al,0xe8
  40c43b:	mov    ecx,0xfffef86c
  40c440:	iret   
  40c441:	or     BYTE PTR [eax-0x1],dl
  40c444:	dec    DWORD PTR [eax+ebp*8]
  40c447:	xor    DWORD PTR [eax],eax
	...
  40c479:	add    BYTE PTR [ebp-0x8],cl
  40c47c:	dec    cl
  40c47e:	js     0x40c489
  40c480:	add    BYTE PTR [ebp+0x51],dl
  40c483:	aad    0x82
  40c485:	les    ecx,FWORD PTR [edx+0x4953564f]
  40c48b:	popw   es
  40c48d:	add    BYTE PTR [esi],cl
  40c48f:	adc    eax,DWORD PTR [edx+0x7404b67d]
  40c495:	or     al,0x63
  40c497:	stos   DWORD PTR es:[edi],eax
  40c498:	lahf   
  40c499:	packsswb mm6,QWORD PTR [edx+0x3a0e8305]
  40c4a0:	add    esi,DWORD PTR [ebp+0x5a]
  40c4a3:	repz inc ebx
  40c4a5:	pop    ebx
  40c4a6:	sbb    al,0xf0
  40c4a8:	dec    esp
  40c4a9:	ret    0x2e53
  40c4ac:	mov    al,BYTE PTR [ebp+0x5f]
  40c4af:	stos   DWORD PTR es:[edi],eax
  40c4b0:	and    al,BYTE PTR [edi]
  40c4b2:	loopne 0x40c4ad
  40c4b4:	lldt   di
  40c4b7:	sub    cl,BYTE PTR [edx]
  40c4b9:	ror    bh,0x25
  40c4bc:	jmp    0x21c8:0xbddfa8bf
  40c4c3:	add    ecx,DWORD PTR ds:[ebx-0x1f7dc55a]
  40c4ca:	pop    esp
  40c4cb:	stos   DWORD PTR es:[edi],eax
  40c4cc:	lahf   
  40c4cd:	adc    esp,DWORD PTR [ebx+0x3a]
  40c4d0:	pop    es
  40c4d1:	or     esp,DWORD PTR [ebx]
  40c4d3:	xor    cl,BYTE PTR [ebx+ebp*1]
  40c4d6:	and    edx,DWORD PTR [ebx-0x42]
  40c4d9:	pop    ebp
  40c4da:	sub    ch,ah
  40c4dc:	repnz inc DWORD PTR [eax]
	...
  40c50f:	add    BYTE PTR [ecx],bh
  40c511:	jecxz  0x40c530
  40c513:	jne    0x40c56c
  40c515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c516:	(bad)  
  40c517:	mov    edi,0xb4368e0
  40c51c:	hlt    
  40c51d:	push   eax
  40c51e:	inc    ebx
  40c51f:	call   0xff5f4843
  40c524:	out    0x94,eax
  40c526:	mov    ebx,0xbe4770e8
  40c52c:	shl    DWORD PTR [edx],1
  40c52e:	(bad)  
  40c52f:	dec    DWORD PTR [ebx]
  40c531:	adc    eax,DWORD PTR [ebx]
  40c533:	add    BYTE PTR [ebx+0x1b],ah
  40c536:	mov    si,WORD PTR [esi]
  40c539:	mov    cl,BYTE PTR es:[ebp+0x67]
  40c53d:	sbb    esp,DWORD PTR [esi-0x73]
  40c540:	es add eax,0x91a5b4d9
  40c546:	test   al,0x1d
  40c548:	push   ss
  40c549:	inc    ecx
  40c54a:	rol    DWORD PTR [esi+edi*4+0x17],0xce
  40c54f:	sbb    eax,0x81d14116
  40c554:	call   0xf65e8370
  40c559:	or     BYTE PTR [esi-0x39],ah
  40c55c:	mov    ah,0x83
  40c55e:	and    al,0x44
  40c560:	dec    eax
  40c561:	sbb    BYTE PTR [esp+eax*2],bl
  40c564:	jnp    0x40c4f2
  40c566:	sbb    BYTE PTR ds:0x482c8d5c,0x57
  40c56d:	lea    esp,[eax+ecx*2]
  40c570:	ficom  WORD PTR [eax+0x8978]
	...
  40c5a6:	mov    BYTE PTR [ecx+0x40],0xf4
  40c5aa:	cmp    al,0x17
  40c5ac:	jmp    0x7b98c4c1
  40c5b1:	fldenv [ebx+0x6309a005]
  40c5b7:	add    eax,0x8ac710e9
  40c5bc:	fmul   QWORD PTR [ebx]
  40c5be:	call   0xc751a28b
  40c5c3:	mov    BYTE PTR [ebx+eiz*1+0x43b416b3],ch
  40c5ca:	cld    
  40c5cb:	nop
  40c5cc:	sub    al,0x2c
  40c5ce:	test   BYTE PTR [eax+0x2e],ah
  40c5d1:	sbb    eax,0x2c2c90ec
  40c5d6:	xor    DWORD PTR [edx+0x1e],edi
  40c5d9:	sbb    eax,0x139c88df
  40c5de:	out    0x98,al
  40c5e0:	and    BYTE PTR [ebx+0x73],bl
  40c5e3:	add    eax,0x61d003e9
  40c5e8:	ins    BYTE PTR es:[edi],dx
  40c5e9:	xchg   edi,eax
  40c5ea:	pushf  
  40c5eb:	pop    esp
  40c5ec:	add    cl,ah
  40c5ee:	pusha  
  40c5ef:	add    eax,0xab44fa00
  40c5f4:	add    BYTE PTR [ebp+ebx*4+0x3e],dh
  40c5f8:	push   eax
  40c5f9:	ror    DWORD PTR [edx-0x77],1
  40c5fc:	add    cl,ch
  40c5fe:	jmp    0x40c590
  40c600:	punpckldq mm5,mm5
  40c603:	repnz rcl dh,0x63
  40c607:	or     bh,bh
  40c609:	xor    eax,0x0
	...
  40c63a:	add    BYTE PTR [eax],al
  40c63c:	(bad)  
  40c63d:	sub    ecx,DWORD PTR [edi]
  40c63f:	fs popf 
  40c641:	push   ds
  40c642:	push   eax
  40c643:	pop    ss
  40c644:	mov    ch,0x1e
  40c646:	jnp    0x40c6be
  40c648:	pusha  
  40c649:	add    eax,0xc668a783
  40c64e:	or     dl,BYTE PTR [esi+0x570f28ed]
  40c654:	es pop ss
  40c656:	add    DWORD PTR [ecx-0x2dfe71a8],0x50
  40c65d:	jmp    0xe96a:0x2771d974
  40c664:	cli    
  40c665:	adc    eax,0x15fae969
  40c66a:	push   ebp
  40c66b:	pop    esi
  40c66c:	cmc    
  40c66d:	add    eax,0x15cae96a
  40c672:	out    0xf,eax
  40c674:	rcl    DWORD PTR ds:0x91a0f2ff,cl
  40c67a:	sub    BYTE PTR [ecx+0x53d41db0],bl
  40c680:	push   edi
  40c681:	push   ss
  40c682:	mov    edx,DWORD PTR [ecx]
  40c684:	test   eax,0x6092ffab
  40c689:	mov    ah,0x52
  40c68b:	mov    bh,0x7f
  40c68d:	nop
  40c68e:	jae    0x14071f4
  40c694:	int    0xa9
  40c696:	(bad)  
  40c697:	(bad)  
  40c698:	mov    edx,0xb275c00c
  40c69d:	push   esp
  40c69e:	out    0x9d,eax
	...
  40c6d0:	add    BYTE PTR [eax],al
  40c6d2:	adc    cl,bh
  40c6d4:	(bad)  
  40c6d5:	sub    edx,DWORD PTR [ecx-0x73]
  40c6d8:	ret    
  40c6d9:	pop    ebx
  40c6da:	sbb    eax,0x9ac2c85b
  40c6df:	add    DWORD PTR [ebp-0x75],edx
  40c6e2:	sahf   
  40c6e3:	jge    0x40c6a9
  40c6e5:	lock push ebp
  40c6e7:	dec    esi
  40c6e8:	sub    bl,bl
  40c6ea:	popf   
  40c6eb:	jae    0x40c6f8
  40c6ed:	push   DWORD PTR [edi]
  40c6ef:	or     eax,ebp
  40c6f1:	add    DWORD PTR [edi],edx
  40c6f3:	cli    
  40c6f4:	(bad)  
  40c6f5:	push   eax
  40c6f6:	mov    ebp,0x4e80773
  40c6fb:	xchg   ebx,eax
  40c6fc:	(bad)  
  40c6fd:	call   ecx
  40c6ff:	icebp  
  40c700:	push   edi
  40c701:	add    esi,edx
  40c703:	add    al,0xc0
  40c705:	je     0x40c68c
  40c707:	jle    0x40c74e
  40c709:	hlt    
  40c70a:	push   0xfffffff0
  40c70c:	je     0x40c71a
  40c70e:	mov    ebp,0xa1e80776
  40c713:	out    dx,al
  40c714:	(bad)  
  40c715:	inc    ebx
  40c717:	inc    esi
  40c718:	sti    
  40c719:	(bad)  
  40c71a:	idiv   eax
  40c71c:	dec    edi
  40c71d:	push   DWORD PTR [edi]
  40c71f:	or     eax,0xe10275ff
  40c724:	cwde   
  40c725:	std    
  40c726:	popf   
  40c727:	lock mov BYTE PTR [ebp-0x5e],al
  40c72b:	lock je 0x40c71e
  40c72e:	cmp    eax,0xb7fff776
  40c733:	add    al,0xff
  40c735:	jne    0x40c737
	...
  40c767:	add    BYTE PTR [esi],bh
  40c769:	loope  0x40c77b
  40c76b:	(bad)  
  40c76c:	cmp    eax,0x7dd88af0
  40c771:	jbe    0x40c76e
  40c773:	call   0xffbe11db
  40c778:	int3   
  40c779:	add    edx,DWORD PTR [ecx+0x7d42bbf7]
  40c77f:	(bad)  
  40c780:	mov    esp,0xb4570378
  40c785:	xchg   ecx,eax
  40c786:	or     ch,al
  40c788:	sti    
  40c789:	lods   eax,DWORD PTR ds:[esi]
  40c78a:	sbb    bh,bh
  40c78c:	fcomp  DWORD PTR [edi-0x42]
  40c78f:	pop    esi
  40c790:	stos   BYTE PTR es:[edi],al
  40c791:	pusha  
  40c792:	or     eax,DWORD PTR [eax]
  40c794:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40c796:	or     DWORD PTR es:[esi],0x32
  40c79a:	add    DWORD PTR [edx+0x42],esi
  40c79d:	dec    ebx
  40c79e:	nop
  40c79f:	(bad)  
  40c7a1:	(bad)  [ebx]
  40c7a3:	call   0xff5a7a8a
  40c7a8:	ins    BYTE PTR es:[edi],dx
  40c7a9:	fpatan 
  40c7ab:	(bad)  
  40c7ac:	out    dx,al
  40c7ad:	adc    eax,0x735eaf2b
  40c7b2:	sbb    bh,bh
  40c7b4:	into   
  40c7b5:	push   cs
  40c7b6:	sbb    dh,BYTE PTR [ebp+0x5b]
  40c7b9:	xchg   BYTE PTR [edi-0x3],bl
  40c7bc:	inc    esp
  40c7bd:	mov    ebx,DWORD PTR [edx]
  40c7bf:	jne    0x40c814
  40c7c1:	xchg   ebx,eax
  40c7c2:	pop    DWORD PTR [edi]
  40c7c4:	dec    ebx
  40c7c5:	call   0xa76dc6e4
  40c7ca:	scas   eax,DWORD PTR es:[edi]
  40c7cb:	adc    eax,DWORD PTR [eax]
	...
  40c7fd:	add    dl,bl
  40c7ff:	pop    ds
  40c800:	sbb    dh,BYTE PTR [ebp+0x73]
  40c803:	mov    bl,0x8f
  40c805:	pop    es
  40c806:	or     esp,DWORD PTR [ebp-0x60f300e9]
  40c80c:	xchg   edi,eax
  40c80d:	or     esp,DWORD PTR [eax+0x54]
  40c810:	icebp  
  40c811:	(bad)  
  40c812:	jbe    0x40c842
  40c814:	sbb    dh,BYTE PTR [ebp+0x6b]
  40c817:	(bad)  
  40c818:	call   0x5375:0x19e2ecfc
  40c81f:	add    eax,0x1d649026
  40c824:	mov    WORD PTR [eax],ds
  40c826:	aam    0x13
  40c828:	push   ss
  40c829:	nop
  40c82a:	pop    esp
  40c82b:	lahf   
  40c82c:	lock sbb cl,BYTE PTR [esi-0x3]
  40c830:	adc    BYTE PTR [esi-0x29],ch
  40c833:	adc    edi,esi
  40c835:	sbb    DWORD PTR [esi],ebp
  40c837:	cmc    
  40c838:	cmc    
  40c839:	(bad)  
  40c83a:	fs sbb eax,0x13a46fcd
  40c840:	mov    al,0x46
  40c842:	jae    0x40c849
  40c844:	xor    al,0x8d
  40c846:	xchg   DWORD PTR [ebx],edx
  40c848:	pop    esp
  40c849:	or     cl,bh
  40c84b:	add    eax,0x1d5c8fce
  40c850:	jne    0x40c8c2
  40c852:	jl     0x40c867
  40c854:	mov    esi,0x3c14688f
  40c859:	or     al,0x7b
  40c85b:	sub    ebp,DWORD PTR [edi+0x3c7f6419]
  40c861:	hlt    
	...
  40c892:	add    BYTE PTR [eax],al
  40c894:	jmp    0x40c89d
  40c896:	sahf   
  40c897:	(bad)
  40c89b:	or     al,0x3b
  40c89d:	cmp    ecx,DWORD PTR [edi+0x1c7f4419]
  40c8a3:	lock jmp 0x40c8ad
  40c8a6:	jle    0x40c837
  40c8a8:	push   0x3b0bfc12
  40c8ad:	dec    ebx
  40c8ae:	outs   dx,DWORD PTR ds:[esi]
  40c8af:	sbb    DWORD PTR [edi+edi*2],esp
  40c8b2:	mov    esp,0x3007ebfb
  40c8b7:	inc    esi
  40c8b8:	outs   dx,DWORD PTR ds:[esi]
  40c8b9:	add    eax,0x86ff8cbc
  40c8be:	and    eax,0x45baad28
  40c8c3:	(bad)  
  40c8c4:	push   eax
  40c8c5:	lahf   
  40c8c6:	out    0x18,eax
  40c8c8:	outs   dx,BYTE PTR ds:[esi]
  40c8c9:	std    
  40c8ca:	inc    DWORD PTR [eax+0x26]
  40c8cd:	ja     0x40c8ce
  40c8cf:	cs dec edx
  40c8d1:	cwde   
  40c8d2:	adc    esp,DWORD PTR [esi]
  40c8d4:	in     al,dx
  40c8d5:	or     ch,al
  40c8d7:	push   ebp
  40c8d8:	dec    esi
  40c8d9:	adc    bh,bh
  40c8db:	bound  esi,QWORD PTR [edi+0x1c]
  40c8de:	cmp    ebp,eax
  40c8e0:	pusha  
  40c8e1:	add    eax,0x87ccac8b
  40c8e6:	cmp    cl,ch
  40c8e8:	in     eax,0x9
  40c8ea:	jmp    0x462aae
  40c8ef:	es in  al,0xe
  40c8f2:	add    cl,ch
  40c8f4:	pusha  
  40c8f5:	add    eax,0x248d
	...
  40c92a:	jnp    0x40c8e1
  40c92c:	(bad)  
  40c92d:	pop    esp
  40c92e:	xchg   ebx,eax
  40c92f:	adc    esi,DWORD PTR [ebp-0x7]
  40c932:	imul   ebx,DWORD PTR [eax+0x1356d107],0xffffffff
  40c939:	mov    esi,0x34830de7
  40c93e:	dec    ebx
  40c93f:	add    eax,0x11b70a74
  40c944:	cmp    ebp,DWORD PTR [eax]
  40c946:	adc    dh,BYTE PTR [di-0x63]
  40c94a:	mov    BYTE PTR [edi+0x6b],bh
  40c94d:	jmp    0x1500c7b2
  40c952:	pop    esp
  40c953:	popf   
  40c954:	add    al,0xc5
  40c956:	and    DWORD PTR [edx],edx
  40c958:	(bad)  
  40c959:	hlt    
  40c95a:	dec    esp
  40c95b:	sbb    eax,0x5670279
  40c960:	mov    DWORD PTR [ebx+edi*2],esp
  40c963:	push   ds
  40c964:	pop    es
  40c965:	fstp   QWORD PTR cs:0x560e900
  40c96c:	adc    esp,0x44
  40c96f:	add    eax,0x4b8f174
  40c974:	add    BYTE PTR [eax],al
  40c976:	xchg   ebp,eax
  40c977:	lods   al,BYTE PTR ds:[esi]
  40c978:	(bad)  
  40c979:	jne    0x40c981
  40c97b:	fiadd  WORD PTR [esi-0x6b]
  40c97e:	xor    eax,0x3675feed
  40c983:	in     eax,dx
  40c984:	je     0x40c992
  40c986:	jb     0x40c914
  40c988:	xchg   esp,eax
  40c989:	push   DWORD PTR [ebp-0x21]
  40c98c:	mov    al,BYTE PTR [eax]
	...
  40c9be:	add    BYTE PTR [eax],al
  40c9c0:	mov    edx,0xce458b05
  40c9c5:	mov    BYTE PTR [eax],bh
  40c9c7:	add    BYTE PTR [edi],bh
  40c9c9:	adc    ebp,eax
  40c9cb:	xchg   dl,cl
  40c9cd:	add    eax,0xedffc700
  40c9d2:	(bad)  
  40c9d3:	(bad)  
  40c9d4:	mov    edx,0xbe45c705
  40c9d9:	or     BYTE PTR [eax],al
  40c9db:	add    BYTE PTR [edx+0x7af044d2],cl
  40c9e1:	add    eax,0x44270000
  40c9e6:	out    dx,eax
  40c9e7:	push   eax
  40c9e8:	test   DWORD PTR [ebx-0xd],0xf7440750
  40c9ef:	push   eax
  40c9f0:	mov    ch,0x73
  40c9f2:	adc    edi,edi
  40c9f4:	das    
  40c9f5:	add    eax,ebp
  40c9f7:	loope  0x40c9fd
  40c9f9:	stc    
  40c9fa:	inc    BYTE PTR [ebx+0x73ffdd77]
  40ca00:	sub    DWORD PTR [ebp+edi*2+0x2c813af8],eax
  40ca07:	and    DWORD PTR [edi-0xb],0xffffffff
  40ca0b:	je     0x40ca49
  40ca0d:	test   BYTE PTR [ebp-0x10],bh
  40ca10:	cmp    al,BYTE PTR [ecx-0x12d000e0]
  40ca16:	(bad)  
  40ca17:	jne    0x40ca2f
  40ca19:	fnstsw WORD PTR [edx*4+0x75fef8b5]
  40ca20:	arpl   WORD PTR [edx+0x7516],si
	...
  40ca56:	push   edi
  40ca57:	(bad)  
  40ca58:	rcl    DWORD PTR [esp+edi*8-0xc8ae939],1
  40ca5f:	iret   
  40ca60:	nop
  40ca61:	or     edi,ebx
  40ca63:	push   DWORD PTR [eax-0x1]
  40ca66:	in     al,0xdf
  40ca68:	nop
  40ca69:	test   ebx,0xd4ff7b32
  40ca6f:	out    dx,eax
  40ca70:	nop
  40ca71:	repz mov ebx,0xc4ff7b4a
  40ca77:	call   DWORD PTR [eax+0x7b42cbef]
  40ca7d:	push   DWORD PTR [edi+ebx*2-0x5ea300f6]
  40ca84:	test   al,0xfe
  40ca86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca87:	pop    ds
  40ca88:	cmp    BYTE PTR [ebp-0x71],0x1e
  40ca8c:	(bad)  
  40ca8d:	sbb    eax,0x75161e09
  40ca92:	pop    edi
  40ca93:	inc    esi
  40ca94:	outs   dx,DWORD PTR ds:[esi]
  40ca95:	xchg   esp,eax
  40ca96:	test   BYTE PTR [edi],bh
  40ca98:	test   eax,0x7d17dff
  40ca9d:	call   0xff56858b
  40caa2:	stc    
  40caa3:	sbb    eax,0x46577516
  40caa8:	adc    DWORD PTR [esp+ebx*2+0x57751667],0x76
  40cab0:	es xchg edi,eax
  40cab2:	dec    esp
  40cab3:	ja     0x40ca7a
  40cab5:	or     cl,BYTE PTR [ebp+0x2f]
  40cab8:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  40caeb:	add    BYTE PTR ds:0x955f1687,bh
  40caf1:	push   ebp
  40caf2:	inc    ecx
  40caf3:	adc    BYTE PTR [ebx-0xf],ah
  40caf6:	mov    ch,ah
  40caf8:	loopne 0x40cb63
  40cafa:	pop    ds
  40cafb:	push   esi
  40cafc:	sbb    al,0x5
  40cafe:	fmul   QWORD PTR [ebx]
  40cb00:	or     edi,DWORD PTR [eax+0x6e]
  40cb03:	push   ss
  40cb04:	or     al,0x7e
  40cb06:	lods   al,BYTE PTR ds:[esi]
  40cb07:	pavgb  mm2,QWORD PTR [ecx-0x48e0cac]
  40cb0e:	add    BYTE PTR [ebx+eiz*2],0x5
  40cb12:	jmp    0xe183e6cc
  40cb17:	add    esp,esp
  40cb19:	cdq    
  40cb1a:	loopne 0x40cb47
  40cb1c:	(bad)  
  40cb1d:	jne    0x40cb45
  40cb1f:	push   ss
  40cb20:	pushf  
  40cb21:	leave  
  40cb22:	and    BYTE PTR [ebx+eiz*2],al
  40cb25:	add    eax,0xd1e88e9
  40cb2a:	mov    ecx,0x10fd3616
  40cb2f:	(bad)  
  40cb31:	paddd  mm1,QWORD PTR [ebx-0x6795eeda]
  40cb38:	lods   al,BYTE PTR ds:[esi]
  40cb39:	add    al,0x75
  40cb3b:	pop    es
  40cb3c:	loopne 0x40cacf
  40cb3e:	in     al,0x2
  40cb40:	adc    DWORD PTR [edi],eax
  40cb42:	push   0xffffff97
  40cb44:	mov    BYTE PTR [esi],al
  40cb46:	pop    edi
  40cb47:	or     cl,bl
  40cb49:	add    eax,0xaf6303e9
  40cb4e:	scas   eax,DWORD PTR es:[edi]
  40cb4f:	inc    edx
	...
  40cb80:	add    BYTE PTR [eax],al
  40cb82:	imul   eax,DWORD PTR ds:0xb474bf6c,0xffffffb5
  40cb89:	(bad)  
  40cb8a:	pop    esp
  40cb8b:	sbb    eax,0xf5c73ad
  40cb90:	push   0xffffff97
  40cb92:	dec    esp
  40cb93:	push   es
  40cb94:	adc    eax,0x1d455800
  40cb99:	or     cl,BYTE PTR [ebx]
  40cb9b:	add    eax,0xaf6303e9
  40cba0:	scas   eax,DWORD PTR es:[edi]
  40cba1:	inc    edx
  40cba2:	imul   eax,DWORD PTR ds:0x928976a,0x0
  40cba9:	sti    
  40cbaa:	das    
  40cbab:	add    BYTE PTR [ebp+0x71],0xd7
  40cbaf:	pushf  
  40cbb0:	pop    ss
  40cbb1:	data16 in al,0x6
  40cbb4:	call   0xff4f5e7a
  40cbb9:	les    edx,FWORD PTR fs:[esi]
  40cbbc:	push   eax
  40cbbd:	dec    esi
  40cbbe:	in     al,dx
  40cbbf:	push   es
  40cbc0:	call   0xff4f3bf6
  40cbc5:	jo     0x40cb73
  40cbc7:	and    ch,bl
  40cbc9:	aam    0xdd
  40cbcb:	enter  0x99f7,0x77
  40cbcf:	cwde   
  40cbd0:	pop    es
  40cbd1:	adc    DWORD PTR [esi],esp
  40cbd3:	je     0x40cbd4
  40cbd5:	push   ds
  40cbd6:	fmul   st,st(0)
  40cbd8:	jecxz  0x40cc3e
  40cbda:	add    al,0x17
  40cbdc:	push   eax
  40cbdd:	cmp    DWORD PTR [edi+ecx*1-0x24770e8b],0xffffff91
  40cbe5:	inc    BYTE PTR [eax]
	...
  40cc17:	add    BYTE PTR [edi-0x80],dl
  40cc1a:	inc    ebp
  40cc1b:	icebp  
  40cc1c:	lock pcmpeqw mm4,mm1
  40cc20:	dec    eax
  40cc21:	xor    bh,dl
  40cc23:	out    0x6f,al
  40cc25:	cmp    BYTE PTR [ebp-0x3b],0x61
  40cc29:	cwde   
  40cc2a:	sbb    eax,0x5016c564
  40cc2f:	into   
  40cc30:	in     eax,dx
  40cc31:	or     bh,bh
  40cc33:	cmp    al,0x6b
  40cc35:	push   cs
  40cc36:	jne    0x40cc29
  40cc38:	cmp    BYTE PTR [edi-0x3],bl
  40cc3b:	mov    dh,0x4f
  40cc3d:	add    BYTE PTR [ebp-0x4f],0x10
  40cc41:	pcmpeqw mm6,mm1
  40cc44:	mov    BYTE PTR [esi-0x6],bl
  40cc47:	sahf   
  40cc48:	ja     0x40cbcc
  40cc4a:	jge    0x40cbdd
  40cc4c:	pusha  
  40cc4d:	cwde   
  40cc4e:	or     DWORD PTR [ecx+0x60],edx
  40cc51:	add    eax,0x584a0000
  40cc56:	enter  0x32c2,0x2
  40cc5a:	lea    eax,[ebp-0x4e]
  40cc5d:	push   edx
  40cc5e:	(bad)  
  40cc5f:	jne    0x40cbef
  40cc61:	stc    
  40cc62:	je     0x40cc70
  40cc64:	jge    0x40cce5
  40cc66:	pop    es
  40cc67:	call   0x3fc3e6
  40cc6c:	jns    0x40cce5
  40cc6e:	test   DWORD PTR [eax],0xb7fc17
  40cc74:	or     al,BYTE PTR [edx]
  40cc76:	add    BYTE PTR [esi+0x33],bl
  40cc79:	les    eax,FWORD PTR [edi]
	...
  40ccab:	add    BYTE PTR [eax],al
  40ccad:	add    BYTE PTR [edi+0x4f],bh
  40ccb0:	not    DWORD PTR [eax-0x73]
  40ccb3:	jg     0x40ccbc
  40ccb5:	call   0x3f5f7c
  40ccba:	push   ecx
  40ccbb:	bnd call 0x4287bc
  40ccc1:	call   edi
  40ccc3:	stc    
  40ccc4:	out    0xe7,eax
  40ccc6:	sbb    cl,bh
  40ccc8:	(bad)  
  40ccc9:	cmp    eax,DWORD PTR [edi]
  40cccb:	(bad)  
  40cccc:	je     0x40ccd3
  40ccce:	arpl   WORD PTR [ecx],ax
  40ccd0:	add    BYTE PTR [eax],al
  40ccd2:	mov    al,BYTE PTR [ebp+edi*2+0x237784fc]
  40ccd9:	lea    eax,[edi+0x1]
  40ccdc:	push   eax
  40ccdd:	jmp    DWORD PTR [edi]
  40ccdf:	adc    edi,esp
  40cce1:	or     eax,0x8dfef1fb
  40cce6:	inc    edi
  40cce7:	add    DWORD PTR [eax-0x1],edx
  40ccea:	aaa    
  40cceb:	adc    edi,esp
  40cced:	cmp    dh,BYTE PTR [eax-0x7872010f]
  40ccf3:	stc    
  40ccf4:	dec    edi
  40ccf5:	push   DWORD PTR [edi+0x9]
  40ccf8:	out    0x2e,eax
  40ccfa:	add    cl,bh
  40ccfc:	dec    BYTE PTR [ebp+0x500bd963]
  40cd02:	cmp    al,0xf2
  40cd04:	sti    
  40cd05:	out    0x10,eax
  40cd07:	mov    BYTE PTR [ebx],dl
  40cd09:	(bad)  
  40cd0a:	(bad)  
  40cd0c:	adc    ecx,DWORD PTR [ebp-0x14c6962]
	...
  40cd42:	add    BYTE PTR [eax],al
  40cd44:	xchg   esi,eax
  40cd45:	es sbb eax,esp
  40cd48:	sbb    BYTE PTR [edx+edx*1-0x7f455977],ah
  40cd4f:	inc    ebp
  40cd50:	or     ecx,DWORD PTR [edi+0x12]
  40cd53:	jne    0x40cdc0
  40cd55:	(bad)  
  40cd56:	pop    eax
  40cd57:	sti    
  40cd58:	hlt    
  40cd59:	ret    
  40cd5a:	jl     0x40cda1
  40cd5c:	sti    
  40cd5d:	lahf   
  40cd5e:	nop
  40cd5f:	out    dx,eax
  40cd60:	arpl   WORD PTR [edx-0x6a],cx
  40cd63:	sbb    BYTE PTR [esi-0x36],0x3
  40cd67:	je     0x40cdaf
  40cd69:	lahf   
  40cd6a:	nop
  40cd6b:	out    0x63,eax
  40cd6d:	jb     0x40cd19
  40cd6f:	add    BYTE PTR [esi-0xa],0x3
  40cd73:	je     0x40cdb7
  40cd75:	xchg   BYTE PTR [ecx],al
  40cd77:	cmp    al,0x22
  40cd79:	push   ds
  40cd7a:	adc    dh,BYTE PTR [ebp-0x4d]
  40cd7d:	test   BYTE PTR [esi+0x68],0x63
  40cd81:	push   ds
  40cd82:	(bad)  
  40cd83:	mov    edi,0xfc9b3c16
  40cd88:	pop    eax
  40cd89:	fld    QWORD PTR [ebx]
  40cd8b:	call   DWORD PTR [esi]
  40cd8d:	sbb    ebp,DWORD PTR cs:[edx+0xb031dfb]
  40cd94:	mov    ds:0x5e6800b1,eax
  40cd99:	add    al,ch
  40cd9b:	jmp    FWORD PTR [ebp-0x2f]
  40cd9e:	adc    ebp,eax
  40cda0:	retf   0x3c6
  40cda3:	add    BYTE PTR [eax+0x5e],ch
  40cda6:	xchg   edi,eax
  40cda7:	sub    eax,0x0
	...
  40cdd8:	add    BYTE PTR [eax],al
  40cdda:	retf   
  40cddb:	add    eax,0x4b3c03e9
  40cde0:	sahf   
  40cde1:	cwde   
  40cde2:	pop    eax
  40cde3:	sbb    eax,0xc3c761c
  40cde8:	mov    ds,WORD PTR [eax-0x3f3bc]
  40cdee:	inc    esp
  40cdef:	cmp    DWORD PTR [ebx+0x12],ebx
  40cdf2:	and    al,0xc
  40cdf4:	cld    
  40cdf5:	pop    ds
  40cdf6:	sbb    al,0x92
  40cdf8:	fcomp  QWORD PTR [ebx]
  40cdfa:	and    dh,BYTE PTR [edi+0x66]
  40cdfd:	adc    cl,BYTE PTR [edx+edx*4]
  40ce00:	push   eax
  40ce01:	adc    cl,BYTE PTR [esi-0x2ea6bf07]
  40ce07:	or     ecx,DWORD PTR [esi+0x12]
  40ce0a:	outs   dx,BYTE PTR ds:[esi]
  40ce0b:	adc    eax,0xbd64651
  40ce10:	adc    ch,BYTE PTR ds:[esi+0x19]
  40ce14:	inc    ecx
  40ce15:	dec    esi
  40ce16:	test   BYTE PTR [ebx],0x2e
  40ce19:	adc    cl,BYTE PTR [esi+0x1d]
  40ce1c:	adc    DWORD PTR [esi-0xa],edx
  40ce1f:	or     ebx,DWORD PTR [esi]
  40ce21:	shl    ecx,0x89
  40ce24:	adc    BYTE PTR [ebx],al
  40ce26:	aaa    
  40ce27:	std    
  40ce28:	loope  0x40ce43
  40ce2a:	fs cmp dh,0x10
  40ce2e:	lods   al,BYTE PTR ds:[esi]
  40ce2f:	or     esi,DWORD PTR [edx-0x38]
  40ce32:	lods   al,BYTE PTR ds:[esi]
  40ce33:	stos   BYTE PTR es:[edi],al
  40ce34:	pop    ds
  40ce35:	inc    ebp
  40ce36:	imul   eax,DWORD PTR ds:0x87877e94,0xffffffad
  40ce3d:	adc    BYTE PTR [eax],al
	...
  40ce6f:	add    BYTE PTR [ecx+edx*4+0x4d181bec],cl
  40ce76:	(bad)  
  40ce77:	adc    DWORD PTR [eax+0x45],ebp
  40ce7a:	push   esp
  40ce7b:	shl    edi,1
  40ce7d:	rol    esp,0xb4
  40ce80:	test   BYTE PTR ds:0xb64116d,dh
  40ce86:	add    BYTE PTR [ebx+esi*2],bh
  40ce89:	or     dh,BYTE PTR [ebp-0x23]
  40ce8c:	js     0x40cee0
  40ce8e:	mov    fs,WORD PTR [esi+0x15bffe72]
  40ce94:	push   edx
  40ce95:	or     al,0x75
  40ce97:	loope  0x40ceec
  40ce99:	nop
  40ce9a:	sti    
  40ce9b:	sub    edx,0x2e86ff08
  40cea1:	dec    ebx
  40cea2:	jne    0x40ce7d
  40cea4:	enter  0xf0a,0x86
  40cea8:	mov    cl,0xa
  40ceaa:	jne    0x40ce89
  40ceac:	jae    0x40ce3e
  40ceae:	pop    es
  40ceaf:	push   ecx
  40ceb0:	adc    DWORD PTR [edx-0x1],0xfb90725e
  40ceb7:	inc    ecx
  40ceb8:	scas   eax,DWORD PTR es:[edi]
  40ceb9:	jns    0x40ceba
  40cebb:	dec    esi
  40cebc:	cmp    BYTE PTR [edi+0x8],al
  40cebf:	jmp    0x692d4e79
  40cec4:	fwait
  40cec5:	push   ecx
  40cec6:	(bad)  
  40cec7:	ss jb  0x40cf0c
  40ceca:	test   DWORD PTR [ecx+0x71],esi
  40cecd:	or     bh,bh
  40cecf:	jmp    0x7240d434
	...
  40cf04:	add    BYTE PTR [eax],al
  40cf06:	pushf  
  40cf07:	dec    BYTE PTR [edx]
  40cf09:	sub    ebx,ebx
  40cf0b:	add    DWORD PTR [eax+0x49060d1],eax
  40cf11:	adc    al,dh
  40cf13:	add    eax,0x9053e900
  40cf18:	or     eax,DWORD PTR [ecx]
  40cf1a:	arpl   WORD PTR [ebp-0x1],sp
  40cf1d:	out    dx,al
  40cf1e:	xchg   edi,eax
  40cf1f:	dec    edx
  40cf20:	jne    0x40cf18
  40cf22:	call   0x5f68fba4
  40cf27:	or     dh,BYTE PTR [ebp-0x1b]
  40cf2a:	pop    eax
  40cf2b:	pop    esp
  40cf2c:	cwde   
  40cf2d:	into   
  40cf2e:	push   ebx
  40cf2f:	push   ds
  40cf30:	or     eax,0x2c871200
  40cf35:	inc    ecx
  40cf36:	jp     0x40cf2d
  40cf38:	je     0x40cf46
  40cf3a:	and    bl,BYTE PTR [eax-0x70fa0069]
  40cf40:	test   BYTE PTR [eax+0x68fef504],bh
  40cf46:	and    al,0x7
  40cf48:	add    BYTE PTR [eax],al
  40cf4a:	mov    DWORD PTR [ebx-0xb1a013e],0x9308e84f
  40cf54:	(bad)  
  40cf55:	push   DWORD PTR [edi-0x6a013d7d]
  40cf5b:	cmc    
  40cf5c:	dec    edi
  40cf5d:	dec    DWORD PTR [edi-0x42]
  40cf60:	std    
  40cf61:	inc    DWORD PTR [ebp-0x599b212]
  40cf67:	add    eax,0x8589
	...
  40cf9c:	(bad)  
  40cf9d:	repz (bad) 
  40cf9f:	dec    edx
  40cfa1:	add    al,0x84
  40cfa3:	repz cli 
  40cfa5:	add    eax,0xc08f8d00
  40cfaa:	std    
  40cfab:	call   DWORD PTR [ebp-0x35effe13]
  40cfb1:	add    eax,0x8b077400
  40cfb6:	inc    ecx
  40cfb7:	sub    al,0xa
  40cfb9:	outs   dx,BYTE PTR ds:[esi]
  40cfba:	sub    DWORD PTR [ebx+ecx*1],0x6
  40cfbe:	call   0x46abee
  40cfc3:	or     edi,DWORD PTR [edx+0x73]
  40cfc6:	add    al,0xe9
  40cfc8:	adc    eax,DWORD PTR [esi]
  40cfca:	add    BYTE PTR [eax],al
  40cfcc:	pop    es
  40cfcd:	xchg   ebx,eax
  40cfce:	sar    esi,0x85
  40cfd1:	stc    
  40cfd2:	mov    WORD PTR [edx+0x76],es
  40cfd5:	push   ecx
  40cfd6:	xchg   BYTE PTR [bp+0x40],dl
  40cfda:	jmp    edi
  40cfdc:	arpl   WORD PTR [edx],sp
  40cfde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfdf:	push   DWORD PTR [esi+eiz*1+0x43]
  40cfe3:	jne    0x40d04b
  40cfe5:	xor    eax,0x1c630080
  40cfea:	push   cs
  40cfeb:	jne    0x40d05c
  40cfed:	inc    esi
  40cfee:	mov    al,ds:0xfb58549e
  40cff3:	mov    edi,0x979b0fd6
  40cff8:	jnp    0x40cfd7
  40cffa:	add    edi,edi
  40cffc:	mov    dh,0x22
  40cffe:	sbb    ecx,DWORD PTR [ecx]
	...
  40d030:	add    BYTE PTR [eax],al
  40d032:	(bad)  [edi+0xf]
  40d035:	jmp    0x40d090
  40d037:	hlt    
  40d038:	add    edi,edi
  40d03a:	scas   al,BYTE PTR es:[edi]
  40d03b:	sbb    bl,BYTE PTR [ebx]
  40d03d:	std    
  40d03e:	hlt    
  40d03f:	(bad)  
  40d040:	push   cs
  40d041:	(bad)  
  40d042:	out    dx,al
  40d043:	pop    esp
  40d044:	push   cs
  40d045:	dec    DWORD PTR [edx+edx*4]
  40d048:	mov    cl,0x2b
  40d04a:	mov    cl,0x4e
  40d04c:	sbb    eax,DWORD PTR [ecx-0x25]
  40d04f:	scas   eax,DWORD PTR es:[edi]
  40d050:	push   cs
  40d051:	push   eax
  40d052:	hlt    
  40d053:	xor    ebx,esi
  40d055:	dec    edi
  40d056:	in     al,dx
  40d057:	dec    ecx
  40d058:	sti    
  40d059:	out    0xe9,eax
  40d05b:	enter  0xff0e,0xcb
  40d05f:	adc    dh,BYTE PTR [edi-0x1]
  40d062:	aam    0xc3
  40d064:	ret    0x218c
  40d067:	xor    bh,BYTE PTR [ebp+eax*4+0xf]
  40d06b:	jmp    0x69fdcf7e
  40d070:	repz (bad) 
  40d072:	out    dx,al
  40d073:	mov    dl,0xd
  40d075:	jmp    FWORD PTR [esi+esi*8+0x1e63664e]
  40d07c:	cli    
  40d07d:	mov    edi,0x979b4617
  40d082:	dec    ebx
  40d083:	pop    ebp
  40d084:	add    edi,edi
  40d086:	push   ss
  40d087:	add    eax,0x70d21bf5
  40d08c:	fimul  WORD PTR [esi]
  40d08e:	jl     0x40d0e2
  40d090:	popf   
  40d091:	or     eax,0x1c390874
	...
  40d0c6:	add    BYTE PTR [eax],al
  40d0c8:	push   0x70
  40d0ca:	(bad)  
  40d0cb:	push   cs
  40d0cc:	adc    esi,DWORD PTR [ebp+0x1d6498bd]
  40d0d2:	dec    ecx
  40d0d3:	push   cs
  40d0d4:	push   esp
  40d0d5:	or     cl,al
  40d0d7:	push   ss
  40d0d8:	lock pop es
  40d0da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0db:	sbb    dh,0x42
  40d0de:	lahf   
  40d0df:	push   cs
  40d0e0:	cmp    al,0xb5
  40d0e2:	xchg   ebp,eax
  40d0e3:	pop    eax
  40d0e4:	test   DWORD PTR [esi],0x9a3b0e8e
  40d0ea:	or     eax,DWORD PTR [ebx+eiz*2]
  40d0ed:	sub    BYTE PTR [ecx+0x75ece7fe],0xe
  40d0f4:	adc    al,0x8
  40d0f6:	xor    al,0x4f
  40d0f8:	or     eax,0x831b6608
  40d0fd:	mov    ds:0x51fc03e8,al
  40d102:	xchg   ecx,eax
  40d103:	or     eax,0x464107f4
  40d108:	rol    BYTE PTR [edi],1
  40d10a:	inc    esi
  40d10b:	cmp    al,0x21
  40d10d:	stc    
  40d10e:	call   0x6859bacb
  40d113:	inc    edi
  40d114:	adc    eax,DWORD PTR [edi]
  40d116:	cs push cs
  40d118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d119:	and    DWORD PTR [ecx+0xd],0x3e907c4
  40d120:	arpl   WORD PTR ds:0xfc68c862,ax
  40d126:	sub    BYTE PTR [edi+0x3c18567],dl
	...
  40d15c:	add    BYTE PTR [eax],al
  40d15e:	add    dl,BYTE PTR cs:[eax]
  40d161:	cld    
  40d162:	arpl   WORD PTR ds:0x7cf8e900,ax
  40d168:	sub    al,0xa8
  40d16a:	pusha  
  40d16b:	or     BYTE PTR [ebp-0xb],dh
  40d16e:	push   0x6ede96d6
  40d173:	jle    0x40d0fa
  40d175:	xchg   ecx,eax
  40d176:	gs or  bh,bh
  40d179:	inc    ecx
  40d17a:	popf   
  40d17b:	add    al,0x0
  40d17d:	jmp    0xc0035367
  40d182:	outs   dx,BYTE PTR ds:[esi]
  40d183:	push   es
  40d184:	push   eax
  40d185:	sar    DWORD PTR [eax-0x3351008e],0x80
  40d18c:	ret    0x56a7
  40d18f:	push   es
  40d190:	push   eax
  40d191:	sahf   
  40d192:	xchg   esp,eax
  40d193:	dec    ebp
  40d194:	(bad)  
  40d195:	xchg   esi,eax
  40d196:	sbb    ax,0x5e5
  40d19a:	addr16 add eax,0x7936c89
  40d1a0:	(bad)  
  40d1a1:	jle    0x40d1ca
  40d1a3:	clc    
  40d1a4:	sub    DWORD PTR [edi+0x5c00055f],0xffffff94
  40d1ab:	inc    ebx
  40d1ac:	(bad)  
  40d1ad:	push   si
  40d1af:	push   cs
  40d1b0:	add    bh,cl
  40d1b2:	pusha  
  40d1b3:	add    eax,0x76dce600
  40d1b8:	add    cl,ch
  40d1ba:	pusha  
  40d1bb:	js     0x40d152
  40d1bd:	sub    edx,DWORD PTR [ebp+0x6]
  40d1c0:	jmp    FWORD PTR [eax+eax*1+0x0]
	...
  40d1f4:	mov    eax,ds:0xdcc14fda
  40d1f9:	fld    DWORD PTR [eax-0x17]
  40d1fc:	push   0x60e9644d
  40d201:	cli    
  40d202:	mov    edi,0x751a6294
  40d207:	fs sub al,0x43
  40d20a:	dec    BYTE PTR [esi]
  40d20c:	pop    esi
  40d20d:	js     0x40d251
  40d20f:	add    BYTE PTR [esi-0x517998ae],cl
  40d215:	inc    ebx
  40d216:	jmp    edi
  40d218:	sub    al,0x5d
  40d21a:	(bad)  
  40d21b:	inc    DWORD PTR [ecx-0x4efd8b3e]
  40d221:	pop    ebp
  40d222:	mov    WORD PTR [ebp-0x10738],ss
  40d228:	inc    DWORD PTR [ebx+0x2b]
  40d22b:	mov    DWORD PTR [edi],eax
  40d22d:	scas   al,BYTE PTR es:[edi]
  40d22e:	std    
  40d22f:	call   FWORD PTR [ebp-0x74d76896]
  40d235:	add    edi,edi
  40d237:	jne    0x40d277
  40d239:	jmp    0xb5fe:0xf8fd9698
  40d240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d241:	clc    
  40d242:	(bad)  
  40d243:	(bad)  
  40d244:	jp     0x40d22f
  40d246:	loopne 0x40d1de
  40d248:	int    0xf8
  40d24a:	mov    BYTE PTR [ebp-0x10776],al
  40d250:	dec    edx
  40d251:	imul   edx,DWORD PTR [esp+edi*1],0xb5ff014b
	...
  40d288:	add    BYTE PTR [eax],al
  40d28a:	pop    edx
  40d28b:	clc    
  40d28c:	(bad)  
  40d28d:	jmp    edx
  40d28f:	je     0x40d2f5
  40d291:	add    dl,bh
  40d293:	or     al,0xbf
  40d295:	je     0x40d290
  40d297:	imul   ebx,DWORD PTR [edx],0xff01cb3c
  40d29d:	mov    ch,0xca
  40d29f:	idiv   esi
  40d2a1:	call   FWORD PTR [ebp-0x5c17f891]
  40d2a7:	idiv   dh
  40d2a9:	jmp    DWORD PTR [edx]
  40d2ab:	mov    ebp,0x877dff91
  40d2b0:	test   dl,al
  40d2b2:	jl     0x40d2ad
  40d2b4:	(bad)  
  40d2b5:	push   eax
  40d2b6:	pop    ebp
  40d2b7:	scas   eax,DWORD PTR es:[edi]
  40d2b8:	mov    ebx,0xbef63fe
  40d2bd:	call   0x445334
  40d2c2:	(bad)  
  40d2c4:	sti    
  40d2c5:	test   BYTE PTR [esi],ah
  40d2c7:	pop    es
  40d2c8:	or     edi,edi
  40d2ca:	xchg   esp,eax
  40d2cb:	enter  0xfe4e,0x8c
  40d2cf:	push   ss
  40d2d0:	sbb    ah,BYTE PTR [edi+edi*8]
  40d2d3:	sbb    eax,DWORD PTR [ebx]
  40d2d5:	push   DWORD PTR [esi+0x74ff0a63]
  40d2db:	inc    ebx
  40d2dc:	jg     0x40d270
  40d2de:	ins    BYTE PTR es:[edi],dx
  40d2df:	ss cmp eax,0xb01c5bc2
  40d2e5:	mov    cl,BYTE PTR [edi-0x3c]
  40d2e8:	nop
  40d2e9:	or     ecx,DWORD PTR [ebx-0x58]
  40d2ec:	jno    0x40d2ed
	...
  40d31e:	add    BYTE PTR [eax],al
  40d320:	dec    esp
  40d321:	call   0x3e954768
  40d326:	mov    ah,0xfe
  40d328:	mov    dh,0xf6
  40d32a:	sbb    ch,BYTE PTR [ebx-0x17f563cb]
  40d330:	mov    edx,0x1aff0b80
  40d335:	mov    cl,0xfb
  40d337:	push   DWORD PTR [edi+0x1f831877]
  40d33d:	jnp    0x40d2dd
  40d33f:	(bad)  
  40d340:	jp     0x40d30f
  40d342:	or     DWORD PTR [ebp+0x5b],esi
  40d345:	push   esi
  40d346:	jg     0x40d2d7
  40d348:	cld    
  40d349:	arpl   WORD PTR [ebp+0x45],di
  40d34c:	test   eax,0xe676feec
  40d352:	sbb    bh,BYTE PTR [edi+0x6a0b4be4]
  40d358:	add    BYTE PTR [ebx-0x6f],0x7
  40d35c:	retf   
  40d35d:	or     DWORD PTR [ebx],0xe6c8ccff
  40d363:	dec    BYTE PTR [esi+0x5]
  40d366:	icebp  
  40d367:	sbb    ecx,DWORD PTR [eax]
  40d369:	add    eax,0x5490b1e
  40d36e:	or     eax,0x9be94668
  40d374:	jg     0x40d3b7
  40d376:	test   al,0x3
  40d378:	pushf  
  40d379:	cmp    al,dh
  40d37b:	fsub   QWORD PTR [ebx]
  40d37d:	add    eax,0x4f7d701
  40d382:	out    dx,al
  40d383:	inc    BYTE PTR [eax]
	...
  40d3b5:	add    ah,al
  40d3b7:	jns    0x40d3b6
  40d3b9:	mov    bl,0x4
  40d3bb:	and    BYTE PTR ds:0xd65474c5,bl
  40d3c1:	nop
  40d3c2:	fs in  eax,dx
  40d3c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3c5:	pop    es
  40d3c6:	fs add al,0xd1
  40d3c9:	push   es
  40d3ca:	icebp  
  40d3cb:	add    edi,DWORD PTR [esi+0x246c549d]
  40d3d1:	enter  0x5a3,0x41
  40d3d5:	loope  0x40d35f
  40d3d7:	inc    esi
  40d3d8:	jmp    0xd06d49e7
  40d3dd:	les    esi,FWORD PTR [esp+ebp*8]
  40d3e0:	in     al,dx
  40d3e1:	jo     0x40d40f
  40d3e3:	add    al,0xe2
  40d3e5:	inc    ebx
  40d3e6:	scas   eax,DWORD PTR es:[edi]
  40d3e7:	sbb    DWORD PTR [ecx],ebx
  40d3e9:	pushf  
  40d3ea:	jns    0x40d42d
  40d3ec:	sub    BYTE PTR [ebx+esi*4],al
  40d3ef:	add    al,0xfc
  40d3f1:	sti    
  40d3f2:	add    al,0x97
  40d3f4:	ins    BYTE PTR es:[edi],dx
  40d3f5:	or     al,BYTE PTR [ebp*8+0x3fc743c]
  40d3fc:	rol    DWORD PTR [ebx],cl
  40d3fe:	mov    DWORD PTR ds:0x4628aac1,eax
  40d404:	jmp    0xe944b8a4
  40d409:	or     ebx,0xffffffdd
  40d40c:	push   esp
  40d40d:	or     dl,ah
  40d40f:	verw   WORD PTR [ecx]
  40d412:	fsub   QWORD PTR [edi]
  40d414:	push   eax
  40d415:	cdq    
  40d416:	push   0x269b84
	...
  40d44b:	add    BYTE PTR [ecx+0x10],ch
  40d44e:	rcl    BYTE PTR [ebp-0xd97ac3c],0xa4
  40d455:	inc    esp
  40d456:	add    BYTE PTR [ecx+0x11087a59],bh
  40d45c:	(bad)  
  40d45d:	(bad)  
  40d45e:	(bad)  
  40d45f:	(bad)  
  40d460:	jns    0x40d405
  40d462:	nop
  40d463:	neg    BYTE PTR [edx-0x13]
  40d466:	cwde   
  40d467:	pop    eax
  40d468:	pop    ecx
  40d469:	add    al,0xff
  40d46b:	pop    esp
  40d46c:	imul   eax,DWORD PTR [esi*2-0x70eea70f],0xffffffd6
  40d474:	pop    edx
  40d475:	into   
  40d476:	shl    ebp,0x60
  40d479:	pop    edx
  40d47a:	mov    edx,ebp
  40d47c:	loopne 0x40d447
  40d47e:	jmp    0x40d436
  40d480:	push   0x2
  40d482:	lea    ebp,[ebx+ebx*2]
  40d485:	push   ebp
  40d486:	push   DWORD PTR [edi+ecx*2]
  40d489:	add    al,0x75
  40d48b:	cmc    
  40d48c:	pop    eax
  40d48d:	xlat   BYTE PTR ds:[ebx]
  40d48e:	(bad)  
  40d48f:	jmp    0xe700e2f4
  40d494:	lods   eax,DWORD PTR ds:[esi]
  40d495:	into   
  40d496:	(bad)  
  40d497:	call   0x81859efc
  40d49c:	addr16 add eax,0x48a3e900
  40d4a2:	hlt    
  40d4a3:	jbe    0x40d507
  40d4a5:	add    eax,0x6f5f0300
  40d4aa:	add    bl,dl
  40d4ac:	pusha  
  40d4ad:	outs   dx,DWORD PTR ds:[esi]
  40d4ae:	add    BYTE PTR [eax+eax*1+0x0],ch
	...
  40d4e2:	mov    ah,0xf6
  40d4e4:	dec    edi
  40d4e5:	fs ins BYTE PTR es:[edi],dx
  40d4e7:	stc    
  40d4e8:	test   BYTE PTR [esi+0x5a],0x55
  40d4ec:	inc    DWORD PTR [eax]
  40d4ee:	pop    ds
  40d4ef:	ud0    esi,DWORD PTR [ebp-0x6a]
  40d4f3:	and    DWORD PTR [ebx+eiz*2-0x3ff4f946],esp
  40d4fa:	push   cs
  40d4fb:	add    al,0xe8
  40d4fd:	mov    cs,edx
  40d4ff:	push   es
  40d500:	add    BYTE PTR [eax-0x1e],ch
  40d503:	loope  0x40d544
  40d505:	add    BYTE PTR [ebp-0x6e],dl
  40d508:	push   cs
  40d509:	call   0x404a8b
  40d50e:	cli    
  40d50f:	adc    eax,0xf714ff8d
  40d515:	call   DWORD PTR [ebp+0x4de850b6]
  40d51b:	jne    0x40d51c
  40d51d:	push   ebx
  40d51f:	xor    al,0xf7
  40d522:	xchg   ebp,eax
  40d523:	or     eax,0xceb0de8
  40d528:	jmp    FWORD PTR [edx+0x7a]
  40d52b:	sahf   
  40d52c:	mov    ds:0xff098b3c,eax
  40d531:	mov    ch,0x1a
  40d533:	adc    eax,0x9315ffff
  40d538:	or     ch,al
  40d53a:	sub    dh,BYTE PTR [edx-0x1]
  40d53d:	push   DWORD PTR [ebx-0x2a08137d]
  40d543:	or     al,0x83
  40d545:	mov    ebp,0x0
	...
  40d576:	add    BYTE PTR [eax],al
  40d578:	out    0x14,al
  40d57a:	(bad)  
  40d57b:	(bad)  
  40d57c:	cmp    dl,BYTE PTR [edx+0x60b6811]
  40d582:	out    dx,eax
  40d583:	mov    esi,0xf7ec5395
  40d588:	xchg   ebp,eax
  40d589:	or     eax,0x1e0275ff
  40d58e:	xchg   edi,eax
  40d58f:	mov    dl,0x85
  40d591:	or     eax,0x15a6b5ff
  40d596:	(bad)  
  40d597:	jmp    DWORD PTR [ebx+0x44]
  40d59a:	cmp    al,0x90
  40d59c:	in     al,0x52
  40d59e:	or     BYTE PTR [ebp-0xf7bd2d],dh
  40d5a4:	aam    0xb8
  40d5a6:	idiv   dh
  40d5a8:	push   esi
  40d5a9:	in     al,0x1a
  40d5ab:	xor    ah,al
  40d5ad:	xor    cl,BYTE PTR [eax]
  40d5af:	push   esi
  40d5b1:	sbb    edx,DWORD PTR [eax]
  40d5b3:	push   DWORD PTR [ebx+edx*1+0x1aac9058]
  40d5ba:	or     BYTE PTR [ebp-0x55],al
  40d5bd:	add    al,0xbf
  40d5bf:	(bad)  
  40d5c0:	pushf  
  40d5c1:	or     cl,BYTE PTR [eax]
  40d5c3:	jne    0x40d55c
  40d5c5:	adc    ecx,DWORD PTR [edx]
  40d5c7:	bound  esp,QWORD PTR [ebx-0x14]
  40d5ca:	cmp    edx,eax
  40d5cc:	push   edi
  40d5cd:	in     al,dx
  40d5ce:	lods   eax,DWORD PTR ds:[esi]
  40d5cf:	mov    cl,BYTE PTR [edi+0x6ce8406c]
  40d5d5:	loop   0x40d5dd
  40d5d7:	lea    esp,[esi]
  40d5d9:	fdiv   DWORD PTR [ebx+0xfe]
	...
  40d60b:	add    BYTE PTR [eax],al
  40d60d:	add    dh,ch
  40d60f:	sti    
  40d610:	add    eax,0x22d66f75
  40d615:	bound  esp,QWORD PTR [ebx-0x12]
  40d618:	stc    
  40d619:	mov    edi,0xe6715c
  40d61e:	arpl   si,bp
  40d620:	cmp    eax,0x2ef3b45
  40d625:	add    BYTE PTR [ebx-0x59],ah
  40d628:	shl    bl,0x2c
  40d62b:	lock add al,BYTE PTR [eax]
  40d62e:	mov    ecx,0x8aff98ee
  40d633:	out    dx,al
  40d634:	cwde   
  40d635:	jmp    edi
  40d637:	sub    DWORD PTR [eax],edx
  40d639:	push   eax
  40d63a:	fidiv  WORD PTR [ecx+0x10]
  40d63d:	test   DWORD PTR [eax+esi*2],0x576feb4
  40d644:	popa   
  40d645:	pop    es
  40d646:	outs   dx,BYTE PTR ds:[esi]
  40d647:	add    DWORD PTR [ecx+0x51],edx
  40d64a:	add    DWORD PTR ds:0x79a4fae9,0x5c21ce4
  40d654:	jmp    0x10de215c
  40d659:	(bad)
  40d65c:	mov    ebx,0x59ddbcf3
  40d661:	pop    es
  40d662:	mov    esp,0xe6347255
  40d667:	mov    dl,BYTE PTR [edi+ecx*1]
  40d66a:	lods   al,BYTE PTR ds:[esi]
  40d66b:	add    BYTE PTR [ecx+0x79cdbcb1],bh
  40d671:	pop    es
	...
  40d6a2:	add    BYTE PTR [eax],al
  40d6a4:	pushf  
  40d6a5:	mov    gs,WORD PTR [ebx+0x14]
  40d6a8:	mov    WORD PTR [eax],es
  40d6aa:	(bad)  
  40d6ab:	sbb    ebp,DWORD PTR [ebp-0x6b]
  40d6ae:	cmc    
  40d6af:	push   es
  40d6b0:	stc    
  40d6b1:	add    al,0x83
  40d6b3:	add    edi,DWORD PTR [edx+edi*4-0x28]
  40d6b7:	push   cs
  40d6b8:	je     0x40d6ba
  40d6ba:	ficom  WORD PTR [eax+0x730ced58]
  40d6c0:	add    BYTE PTR fs:[eax-0x80],ah
  40d6c4:	dec    edi
  40d6c5:	clc    
  40d6c6:	lds    eax,FWORD PTR [esi]
  40d6c8:	push   esp
  40d6c9:	mov    edx,0x4c0ecc
  40d6ce:	sar    DWORD PTR [edi],0xea
  40d6d1:	jmp    FWORD PTR [ebp+0xa78fcfa]
  40d6d7:	mov    ah,0xeb
  40d6d9:	mov    DWORD PTR [eax-0x69ffd3f2],edx
  40d6df:	push   eax
  40d6e0:	cmp    edi,eax
  40d6e2:	lea    eax,[esi]
  40d6e4:	or     eax,DWORD PTR [esi]
  40d6e6:	pop    esp
  40d6e7:	push   es
  40d6e8:	adc    al,0xc
  40d6ea:	test   eax,0x6da48f
  40d6ef:	jmp    0x40d751
  40d6f1:	lock mov ebp,0x41411e01
  40d6f7:	jmp    0x57289159
  40d6fc:	gs add bh,bh
  40d6ff:	fsub   st(0),st
  40d701:	out    0x97,eax
  40d703:	xchg   ebp,eax
  40d704:	add    BYTE PTR gs:[eax-0x15],ch
	...
  40d738:	add    BYTE PTR [eax],al
  40d73a:	pusha  
  40d73b:	lock mov ebp,0x41409fd1
  40d741:	jmp    0x372891a3
  40d746:	gs add bh,bh
  40d749:	pushf  
  40d74a:	mov    eax,0x65557fe7
  40d74f:	add    BYTE PTR [eax-0x17],ch
  40d752:	pusha  
  40d753:	lock mov ebp,0x413beb81
  40d759:	jmp    0xf72891bb
  40d75e:	data16 add bh,bh
  40d761:	jl     0x40d6eb
  40d763:	out    0x67,eax
  40d765:	xor    eax,0x7de80065
  40d76a:	out    dx,al
  40d76b:	(bad)  
  40d76c:	(bad)  
  40d76d:	ficomp WORD PTR [ecx+esi*8]
  40d770:	not    dh
  40d772:	pop    esi
  40d773:	in     eax,dx
  40d774:	mov    BYTE PTR [esi+0x66],bl
  40d777:	(bad)  
  40d778:	(bad)  
  40d779:	jl     0x40d7ea
  40d77b:	idiv   dh
  40d77d:	mov    esi,0xb60c7866
  40d782:	aam    0x6
  40d784:	call   0xff3f3d15
  40d789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d78a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d78b:	cmc    
  40d78c:	neg    BYTE PTR [esi+0x666ced66]
  40d792:	pop    esi
  40d793:	(bad)  
  40d794:	(bad)  
  40d795:	and    al,0x6f
  40d797:	in     al,dx
  40d798:	lock add ah,bl
  40d79b:	or     bh,bh
  40d79d:	inc    DWORD PTR [eax]
	...
  40d7cf:	add    BYTE PTR [edi],dl
  40d7d1:	pop    es
  40d7d2:	call   0x4a338e
  40d7d7:	leave  
  40d7d8:	enter  0xfefd,0x54
  40d7dc:	jno    0x40d7fb
  40d7de:	add    esp,0xffffff8e
  40d7e1:	fwait
  40d7e2:	(bad)  
  40d7e3:	imul   ebx,DWORD PTR [eax+0x8],0x88220875
  40d7ea:	mov    bh,bh
  40d7ec:	sbb    eax,0xb2fc457a
  40d7f1:	add    al,BYTE PTR [eax]
  40d7f3:	out    dx,eax
  40d7f4:	dec    esp
  40d7f5:	mov    eax,ds:0x30b3c7b
  40d7fa:	push   0xfec3be8d
  40d7ff:	(bad)  
  40d800:	xlat   BYTE PTR ds:[ebx]
  40d801:	cli    
  40d802:	out    0x47,al
  40d804:	push   es
  40d805:	or     bh,bh
  40d807:	push   0x3fcd17
  40d80c:	pop    ebp
  40d80d:	into   
  40d80e:	and    eax,0xff02bb29
  40d813:	jne    0x40d797
  40d815:	sbb    dl,BYTE PTR [eax+0x68098dfd]
  40d81b:	xchg   ebp,eax
  40d81c:	ds ret 0x67fe
  40d820:	js     0x40d824
  40d822:	add    BYTE PTR [eax-0x17f97073],al
  40d828:	lods   al,BYTE PTR ds:[esi]
  40d829:	push   es
  40d82a:	(bad)  
  40d82b:	push   DWORD PTR [edx+0x3a413c5a]
  40d831:	call   0x0:0x0
	...
  40d864:	add    BYTE PTR [eax],al
  40d866:	cmp    al,BYTE PTR [edx+0x1a4275fe]
  40d86c:	pop    ebx
  40d86d:	(bad)  
  40d86e:	std    
  40d86f:	or     BYTE PTR [eax-0x17],ch
  40d872:	push   cs
  40d873:	ret    
  40d874:	(bad)  
  40d875:	addr16 arpl dx,bp
  40d878:	add    al,BYTE PTR [eax]
  40d87a:	jecxz  0x40d80a
  40d87c:	lea    eax,[edi]
  40d87e:	or     esi,DWORD PTR ds:0x7f0cff06
  40d884:	mov    ?,ebx
  40d886:	add    al,0x1
  40d888:	sti    
  40d889:	out    0x94,eax
  40d88b:	pusha  
  40d88c:	add    al,0xff
  40d88e:	sub    ch,BYTE PTR [edx]
  40d890:	(bad)  
  40d891:	call   DWORD PTR [edi+0x6eff1773]
  40d897:	call   0x4f30f1b6
  40d89c:	add    al,0xb
  40d89e:	mov    ds:0x4167c9bf,eax
  40d8a3:	add    edx,eax
  40d8a5:	call   DWORD PTR [esp+eax*2]
  40d8a8:	push   ebp
  40d8a9:	xchg   edx,eax
  40d8aa:	mov    esp,0x4b4fb32e
  40d8af:	in     al,dx
  40d8b0:	add    ch,bh
  40d8b2:	in     eax,dx
  40d8b3:	xchg   ebx,eax
  40d8b4:	mov    ebp,0xb2ec223c
  40d8b9:	(bad)  
  40d8ba:	push   ss
  40d8bb:	in     al,0x1a
  40d8bd:	jne    0x40d88f
  40d8bf:	push   es
  40d8c0:	add    al,0x58
  40d8c2:	sti    
  40d8c3:	in     al,dx
  40d8c4:	add    ch,bh
  40d8c6:	lds    eax,FWORD PTR [ebx+0x3cae]
	...
  40d8fc:	and    ch,ah
  40d8fe:	mov    dl,0xfe
  40d900:	out    dx,al
  40d901:	repz jmp 0xd6e8:0x2deb060
  40d909:	gs add edi,edi
  40d90c:	sub    dh,BYTE PTR [ecx+0x77ae000b]
  40d912:	lock and BYTE PTR [edi],0xbb
  40d916:	ins    DWORD PTR es:[edi],dx
  40d917:	add    BYTE PTR [ecx+0x6b75030f],bh
  40d91d:	(bad)  
  40d91e:	mov    dl,0x8a
  40d920:	xor    al,0x6
  40d922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d923:	lea    esp,[edi+0x241e12f9]
  40d929:	jae    0x40d90c
  40d92b:	jmp    0x40d924
  40d92d:	cld    
  40d92e:	lea    eax,[ebx]
  40d930:	mov    DWORD PTR [eax],ebp
  40d932:	xchg   BYTE PTR [ecx+0x5b],bh
  40d935:	in     eax,dx
  40d936:	jno    0x40d93b
  40d938:	add    al,0xfd
  40d93a:	add    ah,BYTE PTR [eax]
  40d93c:	cld    
  40d93d:	jb     0x40d920
  40d93f:	jmp    0x40d924
  40d941:	cld    
  40d942:	gs add ebp,esp
  40d945:	jb     0x40d9a4
  40d947:	add    ebp,DWORD PTR [esi+0xd]
  40d94a:	inc    ecx
  40d94b:	int    0xe9
  40d94d:	cld    
  40d94e:	dec    ebp
  40d94f:	int    0xa2
  40d951:	add    ecx,ebp
  40d953:	pop    eax
  40d954:	fsubr  st,st(1)
  40d956:	cdq    
  40d957:	retf   0x195f
  40d95a:	test   BYTE PTR [ebx+eiz*2+0x5],0xe9
  40d95f:	add    eax,DWORD PTR [eax]
	...
  40d991:	add    BYTE PTR [ebx+0x30],ah
  40d994:	inc    edx
  40d995:	add    esi,DWORD PTR [esi]
  40d997:	or     eax,0x5043711
  40d99c:	jmp    0x6a4e112f
  40d9a1:	cld    
  40d9a2:	bound  esi,QWORD PTR [ebx-0x28]
  40d9a5:	push   es
  40d9a6:	mov    bl,0x88
  40d9a8:	adc    al,BYTE PTR [esi]
  40d9aa:	std    
  40d9ab:	test   DWORD PTR [edx-0x1b8de0a1],esi
  40d9b1:	imul   ebx,DWORD PTR [edi+eax*1+0x726c0445],0x5c9eebed
  40d9bc:	jmp    0xf47a4c4
  40d9c1:	inc    ebp
  40d9c2:	arpl   WORD PTR [ebp+0x38],bp
  40d9c5:	inc    ecx
  40d9c6:	mov    ds:0xec99d105,al
  40d9cb:	sti    
  40d9cc:	push   DWORD PTR [ebp+0x4473c56d]
  40d9d2:	pusha  
  40d9d3:	jb     0x40d9dd
  40d9d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9d6:	dec    ebx
  40d9d7:	push   es
  40d9d8:	sub    BYTE PTR ds:[edi-0x78],bl
  40d9dc:	ret    
  40d9dd:	in     eax,dx
  40d9de:	ins    DWORD PTR es:[edi],dx
  40d9df:	lds    esi,FWORD PTR [esp+esi*1+0x60]
  40d9e3:	adc    dl,BYTE PTR [ecx]
  40d9e5:	(bad)  
  40d9e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9e7:	add    eax,0x46a1dda3
  40d9ec:	add    BYTE PTR [edx-0x5d],ch
  40d9ef:	sbb    DWORD PTR [edi],edi
  40d9f1:	sub    BYTE PTR [edi+0x5],bl
  40d9f4:	jne    0x40d9e7
	...
  40da26:	add    BYTE PTR [eax],al
  40da28:	popa   
  40da29:	adc    al,BYTE PTR ds:0xeb059e1f
  40da2f:	adc    BYTE PTR [ebp+0x5],cl
  40da32:	push   0xffffffe8
  40da34:	popa   
  40da35:	xor    bl,BYTE PTR [esi+eax*1]
  40da38:	es add eax,0x3b6bd4ff
  40da3e:	inc    ecx
  40da3f:	jmp    0xe24ca229
  40da44:	mov    al,ds:0x6b262177
  40da49:	sbb    DWORD PTR [edi],edi
  40da4b:	test   al,0x60
  40da4d:	cld    
  40da4e:	adc    al,0xf4
  40da50:	and    al,BYTE PTR [esi+0x0]
  40da53:	push   0xffffff9c
  40da55:	pop    es
  40da56:	(bad)  
  40da57:	fcomp  QWORD PTR [ebx+0x3b]
  40da5a:	inc    ecx
  40da5b:	jmp    0xb65cdaf9
  40da60:	daa    
  40da61:	add    eax,0x560e900
  40da66:	jmp    0x40da50
  40da68:	daa    
  40da69:	nop
  40da6a:	ret    0x9842
  40da6d:	lds    eax,FWORD PTR [edi]
  40da6f:	jmp    0xe5d145b
  40da74:	mov    al,ds:0x8e000005
  40da79:	and    al,0xff
  40da7b:	xor    eax,0x414626
  40da80:	cmc    
  40da81:	adc    bl,BYTE PTR ds:0x83018b3e
  40da87:	les    edi,FWORD PTR [esi]
  40da89:	push   es
  40da8a:	adc    eax,0x5
	...
  40dabb:	add    BYTE PTR [eax],al
  40dabd:	add    BYTE PTR [eax+ecx*2],al
  40dac0:	add    bh,al
  40dac2:	bndstx [edi],(bad)
  40dac5:	inc    ecx
  40dac6:	or     al,BYTE PTR [edi]
  40dac8:	add    BYTE PTR [eax],al
  40daca:	cli    
  40dacb:	rcl    DWORD PTR [ebx-0x75],0xd6
  40dacf:	add    dl,0xf0
  40dad2:	pop    ecx
  40dad3:	mov    BYTE PTR [ebx+0x8],al
  40dad6:	add    edi,eax
  40dad8:	jb     0x40dae5
  40dada:	jns    0x40db56
  40dadc:	or     al,0x0
  40dade:	push   cs
  40dadf:	add    al,0x80
  40dae1:	cmp    dl,cl
  40dae3:	jae    0x40daec
  40dae5:	sub    ecx,DWORD PTR [edx-0x2d3d36a8]
  40daeb:	push   es
  40daec:	cmp    BYTE PTR [eax],0x4
  40daef:	jae    0x40db01
  40daf1:	xor    DWORD PTR [edi-0x35bec0e6],0x6
  40daf8:	jne    0x40db01
  40dafa:	xchg   ecx,eax
  40dafb:	(bad)  
  40dafc:	pop    ecx
  40dafd:	leave  
  40dafe:	js     0x40db09
  40db00:	add    BYTE PTR [eax+0x3e7484b2],al
  40db06:	add    DWORD PTR [edx+0xc],edx
  40db09:	dec    edx
  40db0a:	stc    
  40db0b:	loop   0x40db0e
  40db0d:	or     ebp,DWORD PTR [eax+0x72]
  40db10:	push   es
  40db11:	xor    edi,0x9
  40db14:	add    DWORD PTR [ebp+0x7e],esi
  40db17:	sub    eax,eax
  40db19:	jmp    0x40db79
  40db1b:	add    al,0x4d
  40db1d:	or     al,0xf1
  40db1f:	inc    edx
  40db20:	or     al,0x5
	...
  40db52:	add    BYTE PTR [eax],al
  40db54:	arpl   sp,bp
  40db56:	push   es
  40db57:	add    BYTE PTR [ebx-0x53],ah
  40db5a:	loop   0x40db5d
  40db5c:	mov    bl,0xd4
  40db5e:	sbb    al,0x8d
  40db60:	inc    esp
  40db61:	mov    ebx,0xe4968b52
  40db66:	inc    esp
  40db67:	push   eax
  40db68:	xor    al,0x31
  40db6a:	adc    BYTE PTR [edx+0x3b],dl
  40db6d:	mov    ecx,0x4424fe9a
  40db72:	pop    ebp
  40db73:	leave  
  40db74:	and    esp,esp
  40db76:	add    ch,BYTE PTR [ebx]
  40db78:	cmp    BYTE PTR [ebx-0x6f3f38b],cl
  40db7e:	or     ch,BYTE PTR [edx+0x63]
  40db81:	push   ss
  40db82:	add    al,0xff
  40db84:	push   esi
  40db85:	in     eax,0x40
  40db87:	inc    ecx
  40db88:	arpl   WORD PTR [edi-0x39],bp
  40db8b:	addps  xmm5,XMMWORD PTR [edi+esi*2]
  40db8f:	fisub  DWORD PTR gs:[eax+0x616f69fe]
  40db96:	inc    esi
  40db97:	lock xor eax,DWORD PTR [esi+esi*8-0x75]
  40db9c:	int3   
  40db9d:	inc    edx
  40db9e:	ins    DWORD PTR es:[edi],dx
  40db9f:	add    dh,dl
  40dba1:	mov    al,ds:0xb8bc4ff2
  40dba6:	(bad)  
  40dba7:	dec    BYTE PTR [esi-0x2b]
  40dbaa:	inc    eax
  40dbab:	inc    ecx
  40dbac:	arpl   WORD PTR [edi-0x39],bp
  40dbaf:	or     ebx,DWORD PTR [eax+0x2c]
  40dbb2:	jbe    0x40dbe7
  40dbb4:	out    dx,al
  40dbb5:	test   al,0xf2
  40dbb7:	add    BYTE PTR [eax],0x0
	...
  40dbea:	sbb    esp,eax
  40dbec:	add    dh,BYTE PTR [eax+ebp*2+0x77]
  40dbf0:	inc    ebx
  40dbf1:	or     BYTE PTR [ebx],ah
  40dbf3:	pushf  
  40dbf4:	jmp    0x9b8a:0xfef2efb4
  40dbfb:	pop    eax
  40dbfc:	inc    esi
  40dbfd:	lock ins BYTE PTR es:[edi],dx
  40dbff:	add    al,0x59
  40dc01:	or     al,0x10
  40dc03:	cli    
  40dc04:	pop    eax
  40dc05:	or     BYTE PTR [ebx-0x23],cl
  40dc08:	call   DWORD PTR fs:[ebp+0x6c]
  40dc0c:	jmp    0x193683a1
  40dc11:	jmp    FWORD PTR [edi+0xa]
  40dc14:	inc    DWORD PTR [ebx+eiz*2-0x7c]
  40dc18:	lods   al,BYTE PTR ds:[esi]
  40dc19:	or     al,0xc9
  40dc1b:	push   es
  40dc1c:	scas   al,BYTE PTR es:[edi]
  40dc1d:	jns    0x40dc4e
  40dc1f:	stc    
  40dc20:	sti    
  40dc21:	adc    BYTE PTR [ebp+0x46],ah
  40dc24:	jmp    0x624efcab
  40dc29:	ret    
  40dc2a:	mov    ecx,0x630caace
  40dc2f:	push   edx
  40dc30:	jb     0x40dc22
  40dc32:	add    eax,0x77feed73
  40dc37:	or     eax,0x384f1976
  40dc3c:	sub    BYTE PTR [eax+eiz*8],al
  40dc3f:	shl    eax,0x53
  40dc42:	in     al,0x72
  40dc44:	in     eax,dx
  40dc45:	(bad)  
  40dc46:	push   edi
  40dc47:	or     eax,0x38731956
  40dc4c:	test   al,0x3
	...
  40dc7e:	add    BYTE PTR [eax],al
  40dc80:	loopne 0x40dc43
  40dc82:	lock mov ch,BYTE PTR [edi]
  40dc85:	adc    eax,0xce1b0270
  40dc8a:	sub    dl,BYTE PTR [eax]
  40dc8c:	arpl   WORD PTR [edx+0x62],dx
  40dc8f:	lock loope 0x40dc53
  40dc92:	adc    bh,bh
  40dc94:	das    
  40dc95:	or     DWORD PTR [ecx],edx
  40dc97:	add    esi,edx
  40dc99:	clc    
  40dc9a:	adc    eax,0xe572a30b
  40dc9f:	int3   
  40dca0:	mov    ds:0xffee915,al
  40dca5:	or     DWORD PTR [ecx],edx
  40dca7:	loopne 0x40dc77
  40dca9:	clc    
  40dcaa:	push   ebp
  40dcac:	imul   eax,ebp,0xc69fe573
  40dcb2:	psubsw mm4,QWORD PTR [ebp+0x71]
  40dcb6:	adc    al,0xde
  40dcb8:	fist   DWORD PTR ds:0xf863ace8
  40dcbe:	(bad)  
  40dcbf:	loop   0x40dce1
  40dcc1:	jno    0x40dcc7
  40dcc3:	mov    al,0x22
  40dcc5:	or     BYTE PTR [eax],al
  40dcc7:	push   ecx
  40dcc8:	cmp    BYTE PTR [bx+di-0x17],al
  40dccc:	enter  0x3d88,0x28
  40dcd0:	addr16 in eax,dx
  40dcd2:	mov    edi,DWORD PTR [edi+0x25]
  40dcd5:	test   DWORD PTR [edx],0x68089ba9
  40dcdb:	jmp    0x1412335
  40dce0:	inc    esi
  40dce1:	aaa    
  40dce2:	inc    ecx
  40dce3:	jmp    0x40dce8
	...
  40dd14:	add    BYTE PTR [eax],al
  40dd16:	clc    
  40dd17:	jl     0x40dcaf
  40dd19:	jle    0x40dd18
  40dd1b:	or     al,al
  40dd1d:	out    0xdc,al
  40dd1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd20:	add    cl,ch
  40dd22:	pusha  
  40dd23:	mov    al,BYTE PTR [ebp+eiz*2-0x70]
  40dd27:	clc    
  40dd28:	je     0x40dd17
  40dd2a:	fst    QWORD PTR [eax]
  40dd2c:	add    BYTE PTR [esi],dl
  40dd2e:	push   ds
  40dd2f:	add    eax,0xc582583
  40dd34:	shl    dh,0xdb
  40dd37:	mov    es,WORD PTR [eax]
  40dd39:	jmp    0x6441489e
  40dd3e:	sub    edi,ebp
  40dd40:	dec    edi
  40dd41:	ret    
  40dd42:	lods   eax,DWORD PTR ds:[esi]
  40dd43:	pop    edi
  40dd44:	nop
  40dd45:	out    0x1f,al
  40dd47:	add    eax,0xf69c94ff
  40dd4c:	adc    al,0xe1
  40dd4e:	push   ebp
  40dd4f:	inc    esi
  40dd50:	add    BYTE PTR [edx-0x5c],ch
  40dd53:	adc    ecx,DWORD PTR [ebx]
  40dd55:	add    BYTE PTR [edx],bh
  40dd57:	pop    es
  40dd58:	test   DWORD PTR [edx-0x75],ebp
  40dd5b:	add    eax,DWORD PTR [eax]
  40dd5d:	push   edi
  40dd5f:	sti    
  40dd60:	std    
  40dd61:	adc    eax,0x41368e
  40dd66:	stc    
  40dd67:	int3   
  40dd68:	add    al,BYTE PTR [ebx+0x5746e42]
  40dd6e:	and    ebx,DWORD PTR [esi+0x1]
  40dd71:	add    BYTE PTR [edx],bh
  40dd73:	mov    BYTE PTR [ebx-0xc],al
  40dd76:	push   0x6b
  40dd78:	add    bh,bh
	...
  40ddaa:	add    BYTE PTR [eax],al
  40ddac:	ja     0x40dda7
  40ddae:	out    0x14,al
  40ddb0:	in     eax,dx
  40ddb1:	clc    
  40ddb2:	std    
  40ddb3:	or     edi,edx
  40ddb5:	or     BYTE PTR [ecx+edi*1-0x7cfffcc5],al
  40ddbc:	jg     0x40ddbb
  40ddbe:	dec    BYTE PTR [esi]
  40ddc0:	xchg   BYTE PTR [eax],ch
  40ddc2:	add    DWORD PTR [eax],eax
  40ddc4:	cli    
  40ddc5:	xor    BYTE PTR [esi],0x0
  40ddc8:	or     eax,0xa01247f
  40ddcd:	add    edx,DWORD PTR [eax-0x75]
  40ddd0:	push   edi
  40ddd1:	std    
  40ddd2:	inc    eax
  40ddd3:	push   edx
  40ddd4:	loop   0x40de3d
  40ddd6:	mov    edi,edi
  40ddd8:	jge    0x40de35
  40ddda:	mov    DWORD PTR [ebp+0x32],eax
  40dddd:	clc    
  40ddde:	jae    0x40ddd4
  40dde0:	sub    eax,0x2252e86e
  40dde5:	mov    cs,WORD PTR [ecx+0x43c01dff]
  40ddeb:	lock retf 0x2
  40ddef:	add    BYTE PTR [ebp-0x45ff13c2],al
  40ddf5:	add    al,BYTE PTR [eax]
  40ddf7:	cmp    DWORD PTR [edi-0x75bec0e6],0x2
  40ddfe:	jne    0x40de52
  40de00:	arpl   WORD PTR [ebp+eax*1-0x1513ddc0],ax
  40de07:	sub    DWORD PTR [edi],esp
  40de09:	in     al,dx
  40de0a:	add    dl,BYTE PTR [eax+0xb]
  40de0d:	loope  0x40de51
  40de0f:	inc    ecx
	...
  40de40:	add    BYTE PTR [eax],al
  40de42:	arpl   di,bp
  40de44:	jne    0x40de2e
  40de46:	jnp    0x40de60
  40de48:	pop    edi
  40de49:	add    BYTE PTR [ebx-0xd],ah
  40de4c:	ret    0x7b73
  40de4f:	push   esp
  40de50:	adc    BYTE PTR [eax-0x5e],al
  40de53:	in     al,dx
  40de54:	jmp    0xbb50:0x2ecaf0d
  40de5b:	lock inc edx
  40de5d:	inc    ecx
  40de5e:	arpl   WORD PTR [edi+0x7c4be875],si
  40de64:	pop    esi
  40de65:	add    BYTE PTR [ebx-0x1d],ah
  40de68:	ret    0x7173
  40de6b:	adc    al,0x18
  40de6d:	inc    eax
  40de6e:	mov    ds:0xb8f1eaec,al
  40de73:	in     al,dx
  40de74:	add    dl,BYTE PTR [eax+0x7b]
  40de77:	lock inc edx
  40de79:	inc    ecx
  40de7a:	arpl   WORD PTR [edi+0x75],di
  40de7d:	call   0x9f2e8d
  40de82:	arpl   WORD PTR [ebx+0x2c4e681a],ax
  40de88:	inc    ebx
  40de89:	add    bl,bh
  40de8b:	inc    ebx
  40de8c:	pop    eax
  40de8d:	add    BYTE PTR [ebx-0x44],ah
  40de90:	push   0x1d
  40de92:	and    ebp,DWORD PTR [ebp+0x4456ff02]
  40de98:	jmp    0x40df13
  40de9a:	es in  al,dx
  40de9c:	add    cl,BYTE PTR [ebx]
  40de9e:	mov    ds:0x1e8d6cb0,eax
  40dea3:	cmp    BYTE PTR [ebx+0x6a],dl
	...
  40ded6:	add    BYTE PTR [eax],al
  40ded8:	bound  esp,QWORD PTR [edi]
  40deda:	jbe    0x40ded4
  40dedc:	mov    ebx,0x9dfdb204
  40dee1:	cmc    
  40dee2:	sbb    eax,0x1548f76
  40dee7:	inc    esi
  40dee8:	mov    ?,ebp
  40deea:	or     eax,0x73f51f8a
  40deef:	inc    esi
  40def0:	ja     0x40df46
  40def2:	xchg   ebx,eax
  40def3:	add    DWORD PTR [edi+ebp*2-0xf],esi
  40def7:	jmp    0x6f65:0xfbedf733
  40defe:	fst    QWORD PTR [ebx+ecx*2+0x21]
  40df02:	fdiv   st(3),st
  40df04:	push   ebp
  40df05:	jg     0x40df32
  40df07:	call   0x50251ed
  40df0c:	iret   
  40df0d:	cmp    DWORD PTR [edx+0x79],ebp
  40df10:	dec    edi
  40df11:	push   es
  40df12:	xor    eax,0xe905cb2a
  40df17:	jmp    0xf43b:0xc33f4ee
  40df1e:	outs   dx,BYTE PTR ds:[esi]
  40df1f:	sti    
  40df20:	sbb    eax,0x15ec13f5
  40df25:	jnp    0x40df08
  40df27:	jmp    0x40dee0
  40df29:	mov    WORD PTR [ebp+0x797b05fb],cs
  40df2f:	sti    
  40df30:	ja     0x40df2f
  40df32:	nop
  40df33:	dec    esi
  40df34:	fdivr  st(4),st
  40df36:	jne    0x40df33
  40df38:	ja     0x40df1b
  40df3a:	ins    DWORD PTR es:[edi],dx
  40df3b:	jno    0x40df3d
	...
  40df6d:	add    BYTE PTR [ebx-0x23],bl
  40df70:	and    eax,0x5df4dd83
  40df75:	jno    0x40df4a
  40df77:	frstor [ebp+ecx*4+0x714df4cd]
  40df7e:	mov    bh,0xdd
  40df80:	lods   al,BYTE PTR ds:[esi]
  40df81:	lea    edi,[ebp-0x348ec20c]
  40df87:	(bad)  
  40df89:	hlt    
  40df8a:	fdivrp st(3),st
  40df8c:	inc    BYTE PTR [eax-0x2f]
  40df8f:	repnz (bad) 
  40df91:	es cwde 
  40df93:	jns    0x40df91
  40df95:	push   ds
  40df96:	jb     0x40dfa1
  40df98:	aas    
  40df99:	test   al,0x60
  40df9b:	mov    bl,al
  40df9d:	in     eax,0x78
  40df9f:	fwait
  40dfa0:	sti    
  40dfa1:	push   es
  40dfa2:	js     0x40df61
  40dfa4:	rcr    ecx,0x60
  40dfa7:	pop    edx
  40dfa8:	mov    eax,DWORD PTR ds:0xee005f14
  40dfae:	repz cld 
  40dfb0:	out    0x9a,eax
  40dfb2:	jmp    0x40dfa6
  40dfb4:	(bad)  
  40dfb5:	jb     0x40dfef
  40dfb7:	push   edi
  40dfb8:	call   0x468db6
  40dfbd:	loop   0x40dfdf
  40dfbf:	js     0x40dfdc
  40dfc1:	jmp    0x3be0:0xdbeb4c25
  40dfc8:	or     eax,0x3785623d
  40dfcd:	jecxz  0x40df82
  40dfcf:	or     al,dh
  40dfd1:	jmp    0x40dfd6
	...
  40e002:	add    BYTE PTR [eax],al
  40e004:	pusha  
  40e005:	loopne 0x40e008
  40e007:	xchg   edx,eax
  40e008:	arpl   WORD PTR ds:0xdf95aa3b,di
  40e00e:	mov    ch,BYTE PTR [edx-0x123e415b]
  40e014:	pusha  
  40e015:	pop    edx
  40e016:	mov    ecx,DWORD PTR [ebp+0x1eb3c7dd]
  40e01c:	call   0xb5c1ec99
  40e021:	cmp    esi,0x74c56d66
  40e027:	in     al,0x39
  40e029:	mov    esi,0xf460f9c1
  40e02e:	je     0x40e00d
  40e030:	mov    eax,0x2500ab86
  40e035:	out    dx,eax
  40e036:	or     eax,eax
  40e038:	out    dx,al
  40e039:	add    al,0x5f
  40e03b:	leave  
  40e03c:	js     0x40e056
  40e03e:	add    bh,bh
  40e040:	out    dx,eax
  40e041:	add    edi,edi
  40e043:	jne    0x40dfdf
  40e045:	fild   QWORD PTR [ecx-0x5]
  40e048:	jne    0x40e039
  40e04a:	mov    eax,DWORD PTR [ebp+0x6a]
  40e04d:	pop    eax
  40e04e:	push   DWORD PTR [ebp-0x5a]
  40e051:	fistp  QWORD PTR [edi]
  40e053:	(bad)  
  40e054:	gs out dx,eax
  40e056:	or     eax,eax
  40e058:	test   DWORD PTR [ebx-0x6],esi
  40e05b:	add    bh,BYTE PTR [edx+0x7]
  40e05e:	push   DWORD PTR [ebp+0x76]
  40e061:	in     eax,dx
  40e062:	jae    0x40e05c
  40e064:	xor    cl,ah
  40e066:	xchg   edx,eax
  40e067:	inc    DWORD PTR [eax]
	...
  40e099:	add    BYTE PTR ds:0xbe0fc001,dh
  40e09f:	int3   
  40e0a0:	add    BYTE PTR [eax],al
  40e0a2:	cmp    al,BYTE PTR [eax-0xe4e13bd]
  40e0a8:	jle    0x40e0e9
  40e0aa:	dec    edx
  40e0ab:	inc    BYTE PTR [ebx+0x738c9]
  40e0b1:	push   edi
  40e0b2:	and    al,BYTE PTR [ebx-0x1]
  40e0b5:	inc    ebp
  40e0b7:	jle    0x40e0fc
  40e0b9:	shl    ch,1
  40e0bb:	(bad)  
  40e0bc:	shr    BYTE PTR [eax+0x7e],1
  40e0bf:	sub    al,0x41
  40e0c1:	add    dl,ah
  40e0c3:	adc    bl,BYTE PTR [ebx+0x0]
  40e0c6:	or     dl,BYTE PTR [edi-0x1]
  40e0c9:	jne    0x40e0a5
  40e0cb:	popa   
  40e0cc:	mov    BYTE PTR [edi],bh
  40e0ce:	cmp    ecx,DWORD PTR [ecx]
  40e0d0:	call   0x4a31ec
  40e0d5:	push   eax
  40e0d6:	inc    ebp
  40e0d7:	(bad)  
  40e0d8:	shr    BYTE PTR [eax+0x46],1
  40e0db:	sub    al,0x41
  40e0dd:	add    BYTE PTR [ebx+0x44],ah
  40e0e0:	or     ebx,DWORD PTR [ebx+0x63]
  40e0e3:	fcomp  QWORD PTR [ecx+ebx*2+0x68]
  40e0e7:	sbb    al,0x70
  40e0e9:	or     al,0x68
  40e0eb:	push   cs
  40e0ec:	jo     0x40e0f6
  40e0ee:	pop    eax
  40e0ef:	and    eax,0xde268509
  40e0f4:	add    al,BYTE PTR [eax]
  40e0f6:	push   0x9c096f35
  40e0fb:	test   eax,0xae
	...
  40e130:	arpl   sp,bx
  40e132:	add    ch,bl
  40e134:	pop    esp
  40e135:	sub    edi,DWORD PTR [edi]
  40e137:	mov    ah,0x63
  40e139:	fadd   QWORD PTR [edx]
  40e13b:	add    BYTE PTR [edi-0x51],dh
  40e13e:	ret    0x6cb8
  40e141:	sti    
  40e142:	idiv   esi
  40e144:	jno    0x40e178
  40e146:	cmp    al,0x7
  40e148:	(bad)  
  40e149:	fdivr  QWORD PTR [edi+0x2dc4b44]
  40e14f:	add    BYTE PTR [ebx+0x5c],ah
  40e152:	cmp    BYTE PTR [eax],al
  40e154:	push   esp
  40e155:	push   0xdc63024c
  40e15a:	dec    edi
  40e15b:	call   0xff389374
  40e160:	fisub  DWORD PTR [eax]
  40e162:	enter  0xa682,0xc4
  40e166:	add    dh,BYTE PTR [ebp+0x42]
  40e169:	adc    al,0x80
  40e16b:	sub    esp,DWORD PTR [edx+0x1f74f7dc]
  40e171:	test   BYTE PTR [ecx+0xbdc6359],ch
  40e177:	shr    BYTE PTR [ecx+eiz*2+0x6],0x2
  40e17c:	arpl   sp,bx
  40e17e:	mov    edi,0x2dcfb44
  40e183:	add    BYTE PTR [ebx-0x7b],ah
  40e186:	add    DWORD PTR [edx],eax
  40e188:	arpl   WORD PTR ds:0xdd5784e9,ax
  40e18e:	out    0x6e,eax
  40e190:	pop    esp
  40e191:	jl     0x40e166
  40e193:	fild   WORD PTR [eax]
	...
  40e1c5:	add    BYTE PTR [ebp+0x63054147],bl
  40e1cb:	add    eax,0x3eeeae9
  40e1d0:	jmp    0x41b0c1d8
  40e1d5:	add    eax,0x7660022e
  40e1da:	or     ecx,0xffffffab
  40e1dd:	jmp    0x40e240
  40e1df:	add    eax,0xa37a03e9
  40e1e4:	out    0x3,eax
  40e1e6:	arpl   WORD PTR [esi+0x7861eb8b],ax
  40e1ec:	test   BYTE PTR [edx+0x3e25d0f7],0x7b
  40e1f3:	or     cl,ch
  40e1f5:	add    esp,DWORD PTR [ebx-0x24]
  40e1f8:	pop    esp
  40e1f9:	add    ah,BYTE PTR [ebx+0x5]
  40e1fc:	push   0x79
  40e1fe:	dec    ebx
  40e1ff:	or     dl,BYTE PTR [edi+eax*1-0x26]
  40e203:	jb     0x40e1b6
  40e205:	mov    edi,0x3e3dd9f
  40e20a:	arpl   WORD PTR ds:0x5626fd0,ax
  40e210:	jmp    0xec1e9197
  40e215:	push   es
  40e216:	fisub  WORD PTR [ebp-0x18]
  40e219:	add    esp,DWORD PTR [ebx+0x7e]
  40e21c:	and    edx,eax
  40e21e:	loope  0x40e292
  40e220:	push   ebp
  40e221:	add    al,0x97
  40e223:	(bad)  
  40e224:	lods   eax,DWORD PTR ds:[esi]
  40e225:	inc    ecx
  40e226:	sti    
  40e227:	add    ebp,ecx
  40e229:	add    eax,DWORD PTR [eax]
	...
  40e25b:	add    BYTE PTR [ebx-0x24],ah
  40e25e:	in     eax,dx
  40e25f:	mov    esi,0x3e6dd9f
  40e264:	arpl   WORD PTR ds:0xc5a2ae00,ax
  40e26a:	(bad)  
  40e26b:	call   0xad07e7d0
  40e270:	test   al,0xf0
  40e272:	(bad)  
  40e273:	jmp    0x2d85aad8
  40e278:	pop    edi
  40e279:	add    eax,0x49fde900
  40e27e:	mov    esp,0x560e9
  40e283:	and    ch,BYTE PTR es:[ebp+0x560e8ff]
  40e28a:	push   DWORD PTR [esp+edi*4-0x73d8ed18]
  40e291:	out    dx,eax
  40e292:	mov    BYTE PTR [eax+eiz*4+0x773574ef],ah
  40e299:	or     dh,bh
  40e29b:	push   cs
  40e29c:	je     0x40e31b
  40e29e:	inc    esp
  40e29f:	xor    DWORD PTR [ecx+edi*2-0x2c],ebp
  40e2a3:	adc    DWORD PTR [edx-0xf],ebp
  40e2a6:	(bad)  
  40e2a7:	not    bh
  40e2a9:	dec    ecx
  40e2aa:	les    ebp,FWORD PTR [edx-0x66]
  40e2ad:	or     eax,0x55f283f
  40e2b2:	jne    0x40e2ef
  40e2b4:	mov    edi,0x5f28400a
  40e2b9:	fisttp QWORD PTR [eax+esi*1]
  40e2bc:	addr16 add eax,0x5150
	...
  40e2f2:	bound  eax,QWORD PTR [ebp+0x41]
  40e2f5:	jmp    0xc2015c2f
  40e2fa:	std    
  40e2fb:	dec    ebp
  40e2fc:	add    cl,ch
  40e2fe:	imul   eax,ebp,0x1870173
  40e304:	inc    eax
  40e305:	sub    BYTE PTR [edi-0x23],ah
  40e308:	lock xor DWORD PTR [edi+0x5],ebx
  40e30c:	push   eax
  40e30d:	add    DWORD PTR [ebx+0x45],ebp
  40e310:	inc    ecx
  40e311:	add    BYTE PTR [edx],cl
  40e313:	div    DWORD PTR [ebx-0x40]
  40e316:	rcl    BYTE PTR [edx-0x505ffa8],cl
  40e31c:	mov    edi,0x145c1874
  40e321:	inc    eax
  40e322:	or     eax,DWORD PTR [eax+ebp*8]
  40e325:	aad    0xa2
  40e327:	add    eax,DWORD PTR [eax]
  40e329:	push   eax
  40e32a:	mov    ds:0xca413fff,al
  40e32f:	div    BYTE PTR [ebx-0x40]
  40e332:	adc    bl,BYTE PTR [edi+0x5a]
  40e335:	add    BYTE PTR [edx-0x7097e926],bh
  40e33b:	inc    ebx
  40e33c:	inc    ecx
  40e33d:	add    BYTE PTR [edx],ah
  40e33f:	stos   DWORD PTR es:[edi],eax
  40e340:	push   esi
  40e341:	add    BYTE PTR [edx-0x45e297ad],cl
  40e347:	dec    eax
  40e348:	add    bh,bh
  40e34a:	out    0xc3,eax
  40e34c:	out    0x5d,al
  40e34e:	mov    al,0x3
  40e350:	add    BYTE PTR [ebx],cl
  40e352:	dec    edx
  40e353:	jne    0x40e3b7
  40e355:	inc    DWORD PTR [eax]
	...
  40e387:	add    bh,dh
  40e389:	mov    ebx,0x3d2a1e6
  40e38e:	add    BYTE PTR [eax+0x4d],dl
  40e391:	pop    edi
  40e392:	enter  0x6ce8,0xeb
  40e396:	std    
  40e397:	call   ebx
  40e399:	cs mov esp,0xe6c5a7ff
  40e39f:	lea    esi,[edx+0x9]
  40e3a2:	add    BYTE PTR [eax+0x1d],dl
  40e3a5:	pop    edi
  40e3a6:	(bad)  
  40e3a7:	call   0x3ed0ec
  40e3ac:	ret    
  40e3ad:	cs mov eax,0xfec94f83
  40e3b3:	jae    0x40e3eb
  40e3b5:	xchg   BYTE PTR [ebx-0x48],bh
  40e3b8:	cli    
  40e3b9:	pop    esi
  40e3ba:	cs push 0xef02dc63
  40e3c0:	mov    ebp,0xb086e7f
  40e3c5:	call   0xc06f:0x6fecfe80
  40e3cc:	in     al,0xf1
  40e3ce:	or     ch,al
  40e3d0:	daa    
  40e3d1:	push   0xd1d4fef5
  40e3d6:	mov    dh,0xfe
  40e3d8:	push   esi
  40e3d9:	hlt    
  40e3da:	jmp    0x36fe:0xf557df38
  40e3e1:	xchg   esp,eax
  40e3e2:	hlt    
  40e3e3:	je     0x40e450
  40e3e5:	push   esp
  40e3e6:	test   BYTE PTR es:[edi+ebp*1+0x74f5],ch
	...
  40e41e:	mov    ds:0x9c873944,eax
  40e423:	pop    ds
  40e424:	cmc    
  40e425:	je     0x40e3d2
  40e427:	adc    al,0x31
  40e429:	xchg   DWORD PTR [edi+ecx*1+0x49f74f5],ecx
  40e430:	sub    DWORD PTR [edi+0x74f4ff7c],eax
  40e436:	mov    bh,0x14
  40e438:	and    DWORD PTR [edi+0x74f3ef6c],eax
  40e43e:	stos   DWORD PTR es:[edi],eax
  40e43f:	add    al,0x19
  40e441:	xchg   DWORD PTR [edi+ebx*8-0x19],ebx
  40e445:	or     al,0xe0
  40e447:	push   0xe7d605ec
  40e44c:	mov    ebx,0x2da3b44
  40e451:	add    BYTE PTR [ebx+0x5b],ah
  40e454:	jbe    0x40e43e
  40e456:	arpl   WORD PTR [eax],si
  40e458:	xor    al,0x68
  40e45a:	out    0xff,eax
  40e45c:	inc    edx
  40e45d:	add    BYTE PTR [ecx+esi*1],ah
  40e460:	enter  0xd4e7,0x13
  40e464:	add    al,0x0
  40e466:	push   0x646ea905
  40e46b:	(bad)  
  40e46c:	and    ebp,esp
  40e46e:	arpl   WORD PTR ds:0x48b03e9,ax
  40e474:	sub    DWORD PTR [ebx+0x63],eax
  40e477:	out    dx,al
  40e478:	sti    
  40e479:	mov    DWORD PTR [esi+ecx*4],0xfa630420
  40e480:	test   al,0x6e
	...
  40e4b2:	add    BYTE PTR [eax],al
  40e4b4:	fs (bad) 
  40e4b6:	and    ebp,esp
  40e4b8:	bound  eax,QWORD PTR ds:0x77cc03e9
  40e4be:	sub    eax,0x558696eb
  40e4c3:	hlt    
  40e4c4:	mov    eax,0xb5ba2931
  40e4c9:	in     eax,dx
  40e4ca:	inc    ebp
  40e4cb:	hlt    
  40e4cc:	mov    dl,0x9e
  40e4ce:	add    ch,bh
  40e4d0:	push   ebp
  40e4d1:	mov    BYTE PTR [esi+esi*8+0x6e2ded9d],al
  40e4d8:	mov    bl,0xdc
  40e4da:	pop    esp
  40e4db:	jge    0x40e46a
  40e4dd:	in     eax,dx
  40e4de:	sbb    eax,0x44dc776e
  40e4e3:	jge    0x40e562
  40e4e5:	in     eax,dx
  40e4e6:	pop    ebx
  40e4e7:	ds jae 0x40e53e
  40e4ea:	adc    ecx,edx
  40e4ec:	fsubr  st,st(5)
  40e4ee:	std    
  40e4ef:	jmp    0xbebd:0xf3f5ec55
  40e4f6:	sub    dl,BYTE PTR [ebx]
  40e4f8:	arpl   WORD PTR [edx+0x72],dx
  40e4fb:	loopne 0x40e4e0
  40e4fd:	rcl    DWORD PTR [edx+esi*8-0x765212bb],0xf4
  40e505:	jmp    0x40e4d4
  40e507:	repz xor al,0xed
  40e50a:	call   0xd583bd12
  40e50f:	(bad)  
  40e510:	in     al,0x71
  40e512:	add    ah,ch
  40e514:	loopne 0x40e54a
  40e516:	add    BYTE PTR [eax+eax*1],dh
	...
  40e549:	add    BYTE PTR [edx-0x22],ch
  40e54c:	hlt    
  40e54d:	call   0x153feab2
  40e552:	imul   ebx,ebp,0x5d
  40e555:	js     0x40e547
  40e557:	jmp    0x40e563
  40e559:	test   eax,0x7067fc7a
  40e55e:	inc    ebx
  40e55f:	inc    esi
  40e560:	add    BYTE PTR [esi+0x6a],bh
  40e563:	adc    eax,ebp
  40e565:	jb     0x40e5c5
  40e567:	jmp    0x40e567
  40e569:	and    BYTE PTR [edx+0x5d],0x8e
  40e56d:	adc    eax,0xd4ff0526
  40e572:	ins    BYTE PTR es:[edi],dx
  40e573:	fucomp st(3)
  40e575:	pusha  
  40e576:	mov    al,0xeb
  40e578:	mov    BYTE PTR [edi+eax*1-0x15],ah
  40e57c:	inc    BYTE PTR [esi+0xf]
  40e57f:	sub    eax,DWORD PTR [ecx]
  40e581:	jmp    0x2bc55fe6
  40e586:	xchg   ecx,eax
  40e587:	jmp    0x40e587
  40e589:	cdq    
  40e58a:	mov    eax,0x90268668
  40e58f:	jns    0x40e515
  40e591:	sub    edx,DWORD PTR [ecx+0x71b9feeb]
  40e597:	mov    cl,0xb7
  40e599:	pshufw mm5,mm3,0xe7
  40e59d:	dec    ecx
  40e59e:	or     BYTE PTR ds:0xb0da7000,al
  40e5a4:	std    
  40e5a5:	not    BYTE PTR [ecx+0x2c]
  40e5a8:	pcmpgtw mm7,mm0
  40e5ab:	add    al,0x0
  40e5ad:	jmp    0x40e5b2
	...
  40e5de:	add    BYTE PTR [eax],al
  40e5e0:	jecxz  0x40e572
  40e5e2:	rcr    edi,0x51
  40e5e5:	jmp    0x40e5dd
  40e5e7:	jmp    0x40e639
  40e5e9:	add    eax,0x8161e900
  40e5ee:	add    BYTE PTR [eax],0x3a
  40e5f1:	or     BYTE PTR [eax],al
  40e5f3:	lea    edi,[eax+0x25]
  40e5f6:	push   eax
  40e5f7:	push   0x410c8e
  40e5fc:	and    bl,BYTE PTR [ecx+0x57]
  40e5ff:	add    dl,bh
  40e601:	jmp    0x147:0xc8ff75be
  40e608:	or     cl,BYTE PTR [eax]
  40e60a:	lea    edx,[ebp-0x20a38]
  40e610:	ja     0x40e654
  40e612:	sub    al,0x50
  40e614:	push   edx
  40e615:	jg     0x40e641
  40e617:	inc    ecx
  40e618:	retf   0x5acf
  40e61b:	push   edi
  40e61c:	retf   0xb07
  40e61f:	shr    BYTE PTR [edi-0x44d31704],0x7
  40e626:	add    bh,bh
  40e628:	lahf   
  40e629:	adc    ebp,eax
  40e62b:	mov    edx,0xbfdf73a
  40e630:	jp     0x40e69f
  40e632:	punpckhbw mm0,QWORD PTR [edx+0x10]
  40e636:	inc    ecx
  40e637:	add    BYTE PTR [ebp+0x6d],dl
  40e63a:	adc    al,0xe8
  40e63c:	in     eax,dx
  40e63d:	push   0xea71fffe
  40e642:	push   0x0
	...
  40e673:	add    BYTE PTR [eax],al
  40e675:	add    BYTE PTR [ebp+0x6d],ah
  40e678:	adc    al,0xe8
  40e67a:	shr    DWORD PTR [eax-0x2],0xff
  40e67e:	pop    ss
  40e67f:	(bad)  
  40e680:	sar    dh,0x65
  40e683:	test   DWORD PTR [ebx+0x50519652],0xfe69c5e8
  40e68d:	(bad)  
  40e68e:	cli    
  40e68f:	push   esi
  40e690:	push   DWORD PTR [ebp+0x4a]
  40e693:	div    BYTE PTR [ebx+0xc]
  40e696:	and    eax,0x63e80873
  40e69b:	iret   
  40e69c:	icebp  
  40e69d:	(bad)  
  40e69e:	xor    al,0xc5
  40e6a0:	mov    BYTE PTR [esp+ebp*1+0x63dcdac4],al
  40e6a7:	fadd   QWORD PTR [edx]
  40e6a9:	lea    esp,[ecx-0x307b8500]
  40e6af:	call   0x4131:0x337bfef0
  40e6b6:	arpl   WORD PTR [ebx-0x6c024c4a],cx
  40e6bc:	lock out 0x5e,eax
  40e6bf:	xor    al,0x4
  40e6c1:	add    BYTE PTR [eax-0x64],bl
  40e6c4:	ja     0x40e6f4
  40e6c6:	jnp    0x40e72c
  40e6c8:	sbb    al,0x41
  40e6ca:	arpl   WORD PTR [ebx+0x77],si
  40e6cd:	adc    al,0xcb
  40e6cf:	jae    0x40e74d
  40e6d1:	dec    ah
  40e6d3:	arpl   WORD PTR [edi-0xeb43a4d],si
  40e6d9:	dec    edi
	...
  40e70a:	add    BYTE PTR [eax],al
  40e70c:	retf   
  40e70d:	adc    edi,DWORD PTR [ebx-0x2]
  40e710:	mov    ah,0xac
  40e712:	out    dx,eax
  40e713:	je     0x40e768
  40e715:	inc    ebx
  40e716:	ja     0x40e724
  40e718:	adc    ebp,DWORD PTR [ebx]
  40e71a:	ja     0x40e724
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	in     al,dx
  40e71f:	(bad)  
  40e720:	xchg   esp,eax
  40e721:	inc    esp
  40e722:	cmp    DWORD PTR [ebp-0x4b0edc74],eax
  40e728:	iret   
  40e729:	or     dh,cl
  40e72b:	dec    BYTE PTR [ebx+0x630058cc]
  40e731:	pop    edi
  40e732:	in     al,dx
  40e733:	add    ecx,esi
  40e735:	(bad)  
  40e736:	jnp    0x40e6cc
  40e738:	scas   eax,DWORD PTR es:[edi]
  40e739:	jmp    0xe985:0xc60feef
  40e740:	popa   
  40e741:	add    BYTE PTR [ecx+0x5a057d39],0x77
  40e748:	popa   
  40e749:	fisubr WORD PTR [eax]
  40e74b:	pop    esp
  40e74c:	popf   
  40e74d:	sub    ch,BYTE PTR [eax]
  40e74f:	add    al,0x34
  40e751:	mov    al,0x94
  40e753:	icebp  
  40e754:	sub    eax,0x8d90d0ea
  40e759:	add    eax,0x5f8b53e9
  40e75e:	test   BYTE PTR [edx+0x63],0xea
  40e762:	jae    0x40e71b
  40e764:	push   cs
  40e765:	jmp    0x3e9:0x51d6dba5
  40e76c:	xchg   ebx,eax
  40e76d:	pop    ebp
  40e76e:	push   ds
  40e76f:	xor    DWORD PTR [eax],eax
	...
  40e7a1:	add    BYTE PTR [edx-0x4f4971fb],ah
  40e7a7:	jmp    0x416:0x67fcf085
  40e7ae:	arpl   WORD PTR [edi+0x10],cx
  40e7b1:	std    
  40e7b2:	adc    al,0x70
  40e7b4:	loope  0x40e7b2
  40e7b6:	mov    dl,0x6f
  40e7b8:	in     eax,dx
  40e7b9:	cld    
  40e7ba:	fwait
  40e7bb:	jo     0x40e7cc
  40e7bd:	pop    esp
  40e7be:	fistp  DWORD PTR [eax+ebp*4]
  40e7c1:	add    esi,DWORD PTR [edi+ebp*2+0x7d47dbf5]
  40e7c8:	inc    ebp
  40e7c9:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7cb:	scas   eax,DWORD PTR es:[edi]
  40e7cc:	je     0x40e7bf
  40e7ce:	popf   
  40e7cf:	jmp    0x7d08c36c
  40e7d4:	sub    eax,0x9bea1cf0
  40e7d9:	adc    eax,DWORD PTR [edi+ebp*2+0x6f7c53ed]
  40e7e0:	loope  0x40e7bd
  40e7e2:	mov    al,ds:0x84f00dee
  40e7e7:	lahf   
  40e7e8:	ins    BYTE PTR es:[edi],dx
  40e7e9:	lock gs ja 0x40e850
  40e7ed:	lds    ebx,FWORD PTR [esi-0x17]
  40e7f0:	push   ebp
  40e7f2:	mov    cl,0xe8
  40e7f4:	mov    ah,0x2d
  40e7f6:	push   edx
  40e7f7:	call   0x4f99b9fa
  40e7fc:	add    cl,ch
  40e7fe:	jmp    0x40e7a8
  40e800:	push   cs
  40e801:	ins    BYTE PTR es:[edi],dx
  40e802:	mov    ebx,0xcefee7
	...
  40e837:	add    BYTE PTR [edx+esi*4],bh
  40e83a:	mov    ebx,0xe7e834c7
  40e83f:	out    dx,eax
  40e840:	mov    dh,0x5
  40e842:	add    BYTE PTR [esi-0x51024f26],dh
  40e848:	cld    
  40e849:	loopne 0x40e8bf
  40e84b:	ins    DWORD PTR es:[edi],dx
  40e84c:	hlt    
  40e84d:	out    0xc8,eax
  40e84f:	stos   DWORD PTR es:[edi],eax
  40e850:	push   edi
  40e851:	add    eax,0xe8036255
  40e856:	je     0x40e835
  40e858:	std    
  40e859:	jno    0x40e86b
  40e85b:	xchg   BYTE PTR [edx-0x7],ch
  40e85e:	(bad)  
  40e85f:	hlt    
  40e860:	fsub   st,st(0)
  40e862:	ret    
  40e863:	je     0x40e829
  40e865:	out    0xc8,eax
  40e867:	stos   DWORD PTR es:[edi],eax
  40e868:	arpl   WORD PTR ds:0x83c37255,ax
  40e86e:	ret    
  40e86f:	pop    ecx
  40e870:	adc    al,0xe8
  40e872:	je     0x40e859
  40e874:	cwde   
  40e875:	bound  ecx,QWORD PTR [ecx-0x400443b2]
  40e87b:	mov    esp,0x2bc9485b
  40e880:	arpl   WORD PTR ds:0xdd70bcff,ax
  40e886:	push   esp
  40e887:	pusha  
  40e888:	jl     0x40e871
  40e88a:	or     ch,BYTE PTR [ecx]
  40e88c:	or     al,BYTE PTR [edx]
  40e88e:	pop    edi
  40e88f:	xor    BYTE PTR [ecx-0x5ea0004],ah
  40e895:	clc    
  40e896:	out    0xf0,eax
  40e898:	in     eax,dx
  40e899:	out    0xfe,al
	...
  40e8cb:	add    BYTE PTR [eax],al
  40e8cd:	add    BYTE PTR [ecx-0x3c],dh
  40e8d0:	jae    0x40e8e1
  40e8d2:	bnd jnp 0x40e8fb
  40e8d5:	inc    ecx
  40e8d6:	dec    edx
  40e8d7:	xlat   BYTE PTR ds:[ebx]
  40e8d8:	jae    0x40e8e6
  40e8da:	bound  ebp,QWORD PTR [edi-0x34c2007b]
  40e8e0:	or     BYTE PTR [edx+0x4a],ch
  40e8e3:	xlat   BYTE PTR ds:[ebx]
  40e8e4:	jae    0x40e8f2
  40e8e6:	and    cl,BYTE PTR [esi+0x691dff85]
  40e8ec:	inc    esp
  40e8ed:	hlt    
  40e8ee:	xchg   edx,eax
  40e8ef:	and    DWORD PTR [edi],edi
  40e8f1:	inc    ecx
  40e8f2:	or     dl,bh
  40e8f4:	jae    0x40e8ea
  40e8f6:	and    bh,BYTE PTR [esi-0x7b]
  40e8f9:	(bad)  
  40e8fa:	mov    ebp,0x72f84468
  40e8ff:	retf   
  40e900:	sti    
  40e901:	add    BYTE PTR [edx],cl
  40e903:	int3   
  40e904:	add    eax,DWORD PTR [ebp+ecx*8-0x21ba782a]
  40e90b:	dec    ebx
  40e90c:	add    BYTE PTR [eax],dl
  40e90e:	cli    
  40e90f:	add    ebp,eax
  40e911:	clc    
  40e912:	dec    ecx
  40e913:	xlat   BYTE PTR ds:[ebx]
  40e914:	std    
  40e915:	mov    DWORD PTR [edi+0x5275fdf1],eax
  40e91b:	int3   
  40e91c:	test   al,0x88
  40e91e:	cmp    eax,0xcdc009d7
  40e923:	jg     0x40e8e0
  40e925:	add    dl,cl
  40e927:	add    edi,edi
  40e929:	jne    0x40e93d
  40e92b:	dec    esp
  40e92c:	call   0xff44a42e
  40e931:	jne    0x40e933
	...
  40e963:	add    BYTE PTR [esi-0x34],bl
  40e966:	adc    BYTE PTR [ebp-0x76],0x3
  40e96a:	cmp    eax,0x78
  40e96d:	out    0x84,al
  40e96f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e970:	jp     0x40e975
  40e972:	add    BYTE PTR [ebx+0x3f7ed7df],cl
  40e978:	arpl   si,bx
  40e97a:	std    
  40e97b:	or     ebx,0xffffffdd
  40e97e:	add    al,BYTE PTR [eax]
  40e980:	sti    
  40e981:	shr    BYTE PTR ds:0xda8f6341,1
  40e987:	cmp    DWORD PTR [ebp+0x230b02dc],ebp
  40e98d:	jno    0x40ea05
  40e98f:	dec    esi
  40e991:	in     al,0x5b
  40e993:	jmp    FWORD PTR [esp+ebx*8+0x2]
  40e997:	jmp    FWORD PTR [esi+0x7b9a5bcc]
  40e99d:	sbb    eax,0xffa36804
  40e9a2:	inc    edx
  40e9a3:	add    BYTE PTR [esp+edx*8-0x239caace],dh
  40e9aa:	idiv   DWORD PTR [edi+0x74ed1497]
  40e9b0:	or     edx,DWORD PTR [ebx]
  40e9b2:	add    ebp,DWORD PTR [eax+0x36]
  40e9b5:	mov    DWORD PTR [ecx+0x0],0x5536848c
  40e9bc:	arpl   sp,bx
  40e9be:	jg     0x40e9b7
  40e9c0:	(bad)  
  40e9c1:	jmp    0x6c97e8fb
  40e9c6:	in     eax,dx
  40e9c7:	je     0x40e9c9
	...
  40e9f9:	add    bh,cl
  40e9fb:	test   cl,ch
  40e9fd:	test   esp,ecx
  40e9ff:	push   edi
  40ea00:	push   esp
  40ea01:	mov    esi,DWORD PTR [ebx+0x797ffb53]
  40ea07:	div    DWORD PTR [esi+0x3]
  40ea0a:	popf   
  40ea0b:	fimul  DWORD PTR [esi+0x42]
  40ea0e:	pop    eax
  40ea0f:	sub    bh,BYTE PTR [eax+0x5]
  40ea12:	jecxz  0x40ea16
  40ea14:	add    al,0x75
  40ea16:	lea    esp,[edi]
  40ea18:	ja     0x40ea2a
  40ea1a:	xor    ebp,DWORD PTR [edi]
  40ea1c:	ja     0x40ea26
  40ea1e:	jnp    0x40ea3f
  40ea20:	out    dx,al
  40ea21:	inc    BYTE PTR [ebp+eax*1-0x191fceef]
  40ea28:	sbb    eax,0x9be666d9
  40ea2d:	adc    ebp,DWORD PTR [eax+esi*2+0x19]
  40ea31:	in     eax,dx
  40ea32:	out    dx,eax
  40ea33:	cld    
  40ea34:	adc    BYTE PTR [edx-0x100219a2],dh
  40ea3a:	xchg   ecx,eax
  40ea3b:	lds    ebp,FWORD PTR [edi]
  40ea3d:	in     eax,dx
  40ea3e:	dec    ebp
  40ea3f:	out    0xed,al
  40ea41:	icebp  
  40ea42:	imul   BYTE PTR [esi+ebp*8]
  40ea45:	cld    
  40ea46:	out    0x5c,eax
  40ea48:	fsubp  st(4),st
  40ea4a:	xor    eax,0x44f85be6
  40ea4f:	cld    
  40ea50:	imul   ebp,esp,0xf43be625
  40ea56:	add    al,0x4
  40ea58:	push   0xffffffec
  40ea5a:	adc    eax,0xec3be6
	...
  40ea8f:	add    BYTE PTR [esp+ebp*8],al
  40ea92:	push   0xffffffec
  40ea94:	add    eax,0x4f01be6
  40ea99:	hlt    
  40ea9a:	push   0xffffffec
  40ea9c:	cmc    
  40ea9d:	in     eax,0x1b
  40ea9f:	adc    al,0xec
  40eaa1:	outs   dx,DWORD PTR ds:[esi]
  40eaa2:	fucomp st(4)
  40eaa4:	outs   dx,DWORD PTR ds:[esi]
  40eaa5:	std    
  40eaa6:	nop
  40eaa7:	jno    0x40ea86
  40eaa9:	in     eax,0x7d
  40eaab:	dec    esp
  40eaac:	stos   BYTE PTR es:[edi],al
  40eaad:	ret    0x3e4
  40eab0:	ss jp  0x40eb2f
  40eab3:	and    BYTE PTR [eax+0x577665dc],0xe6
  40eaba:	rcl    DWORD PTR [ebx],cl
  40eabc:	retf   
  40eabd:	pop    ebx
  40eabe:	mov    esp,0x28fa6303
  40eac3:	ja     0x40ead1
  40eac5:	pop    ebx
  40eac6:	jmp    0xa8671126
  40eacb:	add    edx,DWORD PTR [edi+ebp*2+0x707fd900]
  40ead2:	or     al,0x41
  40ead4:	mov    DWORD PTR [eax-0x5a84d902],0x5510a873
  40eade:	call   0xff27d77f
  40eae3:	loop   0x40ea85
  40eae5:	jno    0x40eb18
  40eae7:	jo     0x40ea8e
  40eae9:	in     eax,dx
  40eaea:	imul   esp,ebx,0xf685f238
  40eaf0:	cmp    BYTE PTR [eax],dl
  40eaf2:	shl    BYTE PTR [ebp+0x0],0x0
	...
  40eb26:	pop    ebx
  40eb27:	in     al,0x74
  40eb29:	add    DWORD PTR [edi+0x486783ed],edx
  40eb2f:	in     al,0x4f
  40eb31:	(bad)  
  40eb32:	mov    dl,0xed
  40eb34:	dec    edi
  40eb35:	into   
  40eb36:	mov    dl,0xd
  40eb38:	call   0xff24f44f
  40eb3d:	ror    DWORD PTR [eax-0x7490179],1
  40eb43:	pop    ecx
  40eb44:	call   0xfec87c0a
  40eb49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb4a:	pop    ds
  40eb4b:	push   edi
  40eb4c:	sbb    BYTE PTR [esi-0x1eff92f8],0x60
  40eb53:	add    eax,0xe3dd0ee8
  40eb58:	(bad)  
  40eb59:	jo     0x40eb7d
  40eb5b:	fisttp QWORD PTR [esp-0x300ab35]
  40eb62:	jo     0x40eb48
  40eb64:	je     0x40eb43
  40eb66:	test   al,0x9a
  40eb68:	push   ebx
  40eb69:	jmp    0xd500fbce
  40eb6e:	xor    ah,cl
  40eb70:	inc    esp
  40eb71:	pop    ecx
  40eb72:	addr16 add eax,0x49a1e900
  40eb78:	hlt    
  40eb79:	add    BYTE PTR ds:0xb0000008,ah
  40eb7f:	or     BYTE PTR [edx+0x0],ch
  40eb82:	mov    al,ds:0x27006a08
  40eb87:	inc    esi
  40eb88:	hlt    
  40eb89:	push   eax
	...
  40ebba:	add    BYTE PTR [eax],al
  40ebbc:	inc    ebp
  40ebbd:	push   esi
  40ebbe:	clc    
  40ebbf:	dec    edi
  40ebc1:	fdivr  st,st(5)
  40ebc3:	jne    0x40ec1b
  40ebc5:	ror    DWORD PTR [esi+0xb087a54],0xc0
  40ebcc:	fimul  WORD PTR [edx]
  40ebce:	jmp    0x40ec0a
  40ebd0:	repnz (bad) 
  40ebd2:	es inc ecx
  40ebd4:	cmp    ch,bh
  40ebd6:	jae    0x40ebe8
  40ebd8:	bound  edx,QWORD PTR [edi-0x10ba007d]
  40ebde:	jae    0x40ebd8
  40ebe0:	jp     0x40eba3
  40ebe2:	inc    DWORD PTR [ebp+0x4587ef15]
  40ebe8:	out    0xee,al
  40ebea:	jae    0x40ec04
  40ebec:	and    eax,0x4fff1455
  40ebf1:	mov    ebp,0xef0675fd
  40ebf6:	jae    0x40ec00
  40ebf8:	and    dl,BYTE PTR [ecx]
  40ebfa:	(bad)  
  40ebfb:	inc    ebp
  40ebfd:	out    dx,al
  40ebfe:	jae    0x40ebec
  40ec00:	sar    BYTE PTR [esi-0x112a0081],cl
  40ec06:	inc    ebx
  40ec07:	lock loope 0x40eb98
  40ec0a:	std    
  40ec0b:	jne    0x40ebf3
  40ec0d:	mov    edi,0x7ca543a
  40ec12:	push   DWORD PTR [ebp+0x52]
  40ec15:	rcr    al,0x81
  40ec18:	xor    eax,0xbec2c7ef
  40ec1d:	pop    es
  40ec1e:	push   ebp
  40ec1f:	mov    eax,DWORD PTR [eax]
	...
  40ec51:	add    BYTE PTR [esi],ah
  40ec53:	mov    edx,eax
  40ec55:	hlt    
  40ec56:	arpl   WORD PTR [edx+ebp*8],di
  40ec59:	(bad)  
  40ec5a:	cmp    esi,ebp
  40ec5c:	pop    esp
  40ec5d:	and    al,0x9c
  40ec5f:	mov    al,ds:0xa39ae7fa
  40ec64:	jmp    0xe6f1c767
  40ec69:	(bad)  
  40ec6a:	pop    esi
  40ec6b:	mov    dh,0x29
  40ec6d:	inc    ecx
  40ec6e:	arpl   si,bp
  40ec70:	add    al,BYTE PTR [eax]
  40ec72:	arpl   WORD PTR [ecx-0x80],si
  40ec75:	imul   BYTE PTR [ebp-0x6]
  40ec78:	jmp    0x42ae7cc
  40ec7d:	add    BYTE PTR [ebx-0xc],ah
  40ec80:	jne    0x40ecd5
  40ec82:	arpl   sp,bp
  40ec84:	pop    edx
  40ec85:	fimul  WORD PTR [ebp+ebp*4-0x4bd297fe]
  40ec8c:	inc    ebx
  40ec8d:	add    bl,cl
  40ec8f:	mov    esp,0xc3634128
  40ec94:	cs daa 
  40ec96:	jp     0x40ecc5
  40ec98:	add    al,0xff
  40ec9a:	scas   al,BYTE PTR es:[edi]
  40ec9b:	in     al,0xda
  40ec9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec9e:	sbb    eax,0x3567e8cc
  40eca3:	in     al,0x41
  40eca5:	add    BYTE PTR [ebx-0x7e],bh
  40eca8:	sub    BYTE PTR [ecx+0x63],al
  40ecab:	inc    esp
  40ecac:	hlt    
  40ecad:	mov    ds:0x63025aec,al
  40ecb3:	in     al,dx
  40ecb4:	cmp    dh,0x0
	...
  40ece7:	add    BYTE PTR [esi-0x1c],dh
  40ecea:	fimul  DWORD PTR [ebx-0x73176c1b]
  40ecf0:	out    0x63,al
  40ecf2:	jmp    0x3015:0xdbfcd4fe
  40ecf9:	in     al,dx
  40ecfa:	add    bh,bh
  40ecfc:	dec    esi
  40ecfd:	jo     0x40ece8
  40ecff:	je     0x40ed6c
  40ed01:	add    eax,0xe236d351
  40ed06:	pop    ebp
  40ed07:	mov    ebx,0x4ee909a2
  40ed0c:	fdiv   st,st(1)
  40ed0e:	rcl    BYTE PTR [bx+si+0x45e3],0xe9
  40ed14:	or     al,BYTE PTR ds:0x588c1ed3
  40ed1a:	loope  0x40ecf7
  40ed1c:	adc    ah,BYTE PTR [ebx+0x2e]
  40ed1f:	jmp    0x5e66360f
  40ed24:	pop    ecx
  40ed25:	in     eax,dx
  40ed26:	popf   
  40ed27:	jle    0x40ed96
  40ed29:	loop   0x40ed0c
  40ed2b:	ret    
  40ed2c:	lock sub BYTE PTR [ecx-0x16bb6237],al
  40ed33:	push   ebx
  40ed34:	dec    ebx
  40ed35:	stc    
  40ed36:	arpl   cx,bp
  40ed38:	dec    ebp
  40ed39:	xor    eax,0xf2730381
  40ed3e:	cs pop esp
  40ed40:	add    DWORD PTR [ebp+0x28],0x53e29304
  40ed47:	cld    
  40ed48:	inc    esp
  40ed49:	ror    DWORD PTR [ebx+0xe8],0x0
	...
  40ed7c:	add    BYTE PTR [eax],al
  40ed7e:	and    eax,0x1d82e0ed
  40ed83:	loop   0x40ed32
  40ed85:	(bad)  
  40ed86:	ins    BYTE PTR es:[edi],dx
  40ed87:	and    ch,BYTE PTR [eax]
  40ed89:	add    al,0x62
  40ed8b:	add    eax,0x87d603e9
  40ed90:	mov    ch,0xe9
  40ed92:	std    
  40ed93:	loope  0x40edcd
  40ed95:	pop    esp
  40ed96:	pop    edi
  40ed97:	add    al,0xe9
  40ed99:	add    edi,ebx
  40ed9b:	lahf   
  40ed9c:	cmp    al,BYTE PTR [ebx+eiz*2]
  40ed9f:	ins    DWORD PTR es:[edi],dx
  40eda0:	scas   eax,DWORD PTR es:[edi]
  40eda1:	sub    BYTE PTR [edx],ah
  40eda3:	add    eax,0x4495d211
  40eda8:	jmp    0x62c108
  40edad:	sub    BYTE PTR [edi-0x1e],bl
  40edb0:	xor    al,0xc6
  40edb2:	pop    ecx
  40edb3:	inc    esp
  40edb4:	add    BYTE PTR [esi+0x45],ah
  40edb7:	or     eax,0xe2c55be8
  40edbc:	inc    cl
  40edbe:	call   0x3ebb:0x38e94122
  40edc5:	test   al,0x60
  40edc7:	ins    DWORD PTR es:[edi],dx
  40edc8:	lock (bad) 
  40edca:	and    DWORD PTR ds:0x560eb68,eax
  40edd0:	sub    BYTE PTR [esi],0xd
  40edd3:	or     eax,0xe27d3fe8
  40edd8:	(bad)  
  40edd9:	ins    BYTE PTR es:[edi],dx
  40edda:	in     eax,dx
  40eddb:	(bad)  
  40eddd:	push   ss
  40edde:	jnp    0x40ee31
  40ede0:	call   0x40ee6e
	...
  40ee11:	add    BYTE PTR [eax],al
  40ee13:	add    BYTE PTR [esi-0x3af9fffb],dh
  40ee19:	loope  0x40ee19
  40ee1b:	je     0x40ee65
  40ee1d:	jmp    0xe07c653c
  40ee22:	enter  0x3c2b,0xe1
  40ee26:	push   ebx
  40ee27:	jb     0x40ee44
  40ee29:	xchg   bl,al
  40ee2b:	aad    0x45
  40ee2d:	loopne 0x40ee2d
  40ee2f:	inc    ebx
  40ee30:	pop    edi
  40ee31:	imul   esp,DWORD PTR [esi],0xffffffce
  40ee34:	xchg   edx,eax
  40ee35:	or     eax,0xe08a85e8
  40ee3a:	(bad)  
  40ee3b:	jo     0x40eddf
  40ee3d:	loope  0x40ee05
  40ee3f:	in     al,dx
  40ee40:	pop    eax
  40ee41:	and    BYTE PTR [ecx-0x17],al
  40ee44:	pusha  
  40ee45:	add    eax,0x897be900
  40ee4a:	neg    BYTE PTR [edi+0x14fe004]
  40ee50:	arpl   WORD PTR [esi],ax
  40ee52:	add    cl,ch
  40ee54:	mov    eax,0xca00521a
  40ee59:	add    al,0x68
  40ee5b:	cmp    eax,0x68004a7a
  40ee60:	or     DWORD PTR [ebp+0x41],eax
  40ee63:	add    BYTE PTR [edx-0x27],ah
  40ee66:	cmp    eax,0x33e7ca41
  40ee6b:	daa    
  40ee6c:	push   ebx
  40ee6d:	dec    edx
  40ee6e:	add    bh,bh
  40ee70:	xchg   esp,ebx
  40ee72:	out    0x6b,al
  40ee74:	das    
  40ee75:	call   0x415777
	...
  40eeaa:	pop    edi
  40eeab:	dec    ecx
  40eeac:	inc    ecx
  40eead:	add    BYTE PTR [edx+0x7a414013],dh
  40eeb3:	cmp    al,0xf0
  40eeb5:	aas    
  40eeb6:	retf   
  40eeb7:	add    al,0x68
  40eeb9:	add    cl,BYTE PTR [edx-0x28007ffc]
  40eebf:	fsubr  st(6),st
  40eec1:	dec    edi
  40eec2:	dec    edi
  40eec3:	call   0xf1087cc5
  40eec8:	cld    
  40eec9:	call   FWORD PTR [ebp+0x39]
  40eecc:	call   0x44daaa
  40eed1:	inc    edi
  40eed3:	call   0xbc8364d5
  40eed8:	xchg   edx,eax
  40eed9:	jge    0x40ef18
  40eedb:	out    0xc7,eax
  40eedd:	ret    0x446
  40eee0:	push   ebp
  40eee1:	mov    ebx,DWORD PTR [esi]
  40eee3:	mov    edx,eax
  40eee5:	hlt    
  40eee6:	sub    al,0xe7
  40eee8:	std    
  40eee9:	push   0xa
  40eeeb:	ds daa 
  40eeed:	call   DWORD PTR [edi-0x1f]
  40eef0:	out    0x35,al
  40eef2:	dec    edi
  40eef3:	call   0xed8878f5
  40eef8:	lds    eax,FWORD PTR ds:0x412862
  40eefe:	cli    
  40eeff:	add    eax,DWORD PTR [eax]
  40ef01:	add    BYTE PTR [ebx+0x69],ah
  40ef04:	xor    dh,0xdd
  40ef07:	mov    fs,ebp
  40ef09:	dec    edi
  40ef0a:	dec    ebx
  40ef0b:	repnz add eax,DWORD PTR [eax]
	...
  40ef3e:	add    BYTE PTR [eax],al
  40ef40:	arpl   WORD PTR [esi-0x6b],si
  40ef43:	push   eax
  40ef44:	arpl   si,bp
  40ef46:	pop    edx
  40ef47:	push   edi
  40ef48:	and    ebp,DWORD PTR ds:0xae126804
  40ef4e:	inc    ebx
  40ef4f:	add    BYTE PTR [ebx],bh
  40ef51:	ds es inc ecx
  40ef54:	arpl   WORD PTR [edi],si
  40ef56:	xor    BYTE PTR [edi],ah
  40ef58:	dec    edx
  40ef59:	lods   eax,DWORD PTR ds:[esi]
  40ef5a:	add    bh,bh
  40ef5c:	push   cs
  40ef5d:	(bad)  
  40ef5e:	(bad)  
  40ef60:	(bad)  
  40ef61:	push   ds
  40ef62:	out    0x67,al
  40ef64:	sub    al,0xae
  40ef66:	inc    ebx
  40ef67:	add    BYTE PTR [ebx],cl
  40ef69:	jge    0x40efad
  40ef6b:	inc    ecx
  40ef6c:	arpl   WORD PTR [esi-0xe],si
  40ef6f:	ds and ch,dh
  40ef72:	pop    edx
  40ef73:	add    ah,BYTE PTR [ebx-0x12]
  40ef76:	cmp    dh,0xd6
  40ef79:	in     al,0xda
  40ef7b:	(bad)  
  40ef7c:	push   edi
  40ef7d:	or     dh,ah
  40ef7f:	mov    esi,fs
  40ef81:	xlat   BYTE PTR ds:[ebx]
  40ef82:	jecxz  0x40ef82
  40ef84:	inc    esp
  40ef85:	jge    0x40ef61
  40ef87:	push   ecx
  40ef88:	xchg   edx,eax
  40ef89:	in     al,dx
  40ef8a:	add    bh,bh
  40ef8c:	scas   al,BYTE PTR es:[edi]
  40ef8d:	call   0xb49c6476
  40ef92:	idiv   BYTE PTR [esp-0x48]
  40ef96:	mov    edx,0x4dec67c1
  40ef9b:	mov    eax,DWORD PTR [edi]
  40ef9d:	outs   dx,BYTE PTR ds:[esi]
  40ef9e:	shl    bl,0xd
  40efa1:	mov    al,ds:0x69e4
	...
  40efd6:	arpl   WORD PTR [edx+0x1c],ax
  40efd9:	push   DWORD PTR [esi-0x1c]
  40efdc:	fisubr DWORD PTR [ebp-0x1a59fa89]
  40efe2:	fisttp DWORD PTR [eax-0x63]
  40efe5:	mov    ebp,0x42d5fd5f
  40efea:	arpl   WORD PTR ds:0x906303e9,ax
  40eff0:	imul   ebp,ebp,0xffffffce
  40eff3:	fidivr WORD PTR [ebp+0x54]
  40eff6:	cmp    ecx,DWORD PTR [ecx]
  40eff8:	call   0xc12e5300
  40effd:	push   edx
  40effe:	arpl   WORD PTR ds:0x442354d1,ax
  40f004:	jmp    0xa8862c64
  40f009:	add    ecx,DWORD PTR [ebx]
  40f00b:	aad    0xd
  40f00d:	inc    ebx
  40f00e:	arpl   si,bx
  40f010:	sti    
  40f011:	sbb    al,0x3a
  40f013:	inc    esp
  40f014:	jmp    0x414dfffd
  40f019:	inc    edi
  40f01a:	jg     0x40effa
  40f01c:	sub    eax,0xa845045c
  40f021:	add    edi,ebx
  40f023:	gs test eax,0x196d6342
  40f029:	and    eax,0x18105a2
  40f02e:	arpl   WORD PTR ds:0xdd7e569,ax
  40f034:	adc    DWORD PTR [ebx+0x47],eax
  40f037:	fdivrp st(5),st
  40f039:	jbe    0x40f03b
	...
  40f06b:	add    bh,ah
  40f06d:	aad    0xee
  40f06f:	in     al,0x35
  40f071:	xor    eax,0x59cb8d1
  40f076:	jmp    0xd622a05f
  40f07b:	outs   dx,BYTE PTR ds:[esi]
  40f07c:	imul   ebp,ebp,0x66
  40f07f:	addr16 adc al,0xde
  40f082:	scas   eax,DWORD PTR es:[edi]
  40f083:	shl    DWORD PTR [eax+0x5],0x14
  40f087:	jns    0x40f081
  40f089:	cmp    edi,0x6c04ac
  40f08f:	inc    ebx
  40f090:	pop    eax
  40f091:	fidiv  WORD PTR [ecx+esi*8+0x8]
  40f095:	sub    al,0x7c
  40f097:	sahf   
  40f098:	dec    DWORD PTR [esp+eax*2+0x68053a95]
  40f09f:	jne    0x40f0c1
  40f0a1:	inc    esp
  40f0a2:	add    BYTE PTR [ecx],dl
  40f0a4:	loope  0x40f0c3
  40f0a6:	inc    ecx
  40f0a7:	jmp    0xc068096b
  40f0ac:	and    DWORD PTR ds:0xdee179e8,eax
  40f0b2:	(bad)  
  40f0b3:	repnz mov al,ds:0x8b91951
  40f0b9:	add    eax,0x65c64600
  40f0be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0bf:	test   eax,0x46500521
  40f0c4:	std    
  40f0c5:	or     al,0xe8
  40f0c7:	outs   dx,BYTE PTR ds:[esi]
  40f0c8:	ret    
  40f0c9:	fdivp  st(6),st
  40f0cb:	inc    ecx
  40f0cc:	retf   
  40f0cd:	pop    edi
  40f0ce:	jmp    FWORD PTR [esi]
	...
  40f100:	add    BYTE PTR [eax],al
  40f102:	sbb    al,BYTE PTR ds:0x44208268
  40f108:	add    BYTE PTR [ecx-0x16bee21e],dl
  40f10e:	inc    edi
  40f10f:	adc    ah,BYTE PTR [edi]
  40f111:	shl    BYTE PTR [ecx-0x1eba17fb],0xdb
  40f118:	(bad)  
  40f119:	repnz and BYTE PTR [ecx+0x19],bl
  40f11d:	cdq    
  40f11e:	cwde   
  40f11f:	add    eax,0x64fffe00
  40f124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f125:	sub    DWORD PTR [esi-0x7521affb],esp
  40f12b:	or     eax,0xdbc432e8
  40f130:	inc    cl
  40f132:	call   0x2541f091
  40f137:	jmp    0x3f06edaf
  40f13c:	or     al,ch
  40f13e:	mov    al,0x3c
  40f140:	(bad)  
  40f141:	inc    ebx
  40f143:	ret    
  40f144:	add    al,BYTE PTR [eax]
  40f146:	das    
  40f147:	mov    edx,gs
  40f149:	cmp    DWORD PTR [esi+0x605754e5],0x1
  40f150:	push   0x2a
  40f152:	in     eax,0x3e
  40f154:	or     al,ch
  40f156:	inc    esi
  40f157:	cmp    al,0xff
  40f159:	call   DWORD PTR [ebx+0x4e]
  40f15c:	cld    
  40f15d:	push   0xffffffca
  40f15f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f161:	add    BYTE PTR [ebp-0x18],0x9
  40f165:	rol    BYTE PTR [eax],0x0
	...
  40f198:	mov    ds,ecx
  40f19a:	dec    esi
  40f19b:	push   0xbeef08ba
  40f1a0:	mov    ds:0x8a413e71,al
  40f1a5:	sbb    bh,bh
  40f1a7:	jne    0x40f13b
  40f1a9:	lock bt DWORD PTR [ebp-0x18],eax
  40f1ae:	out    0x3d,al
  40f1b0:	mov    ah,0xe7
  40f1b2:	std    
  40f1b3:	mov    ebp,DWORD PTR [edi+0x48]
  40f1b6:	sub    BYTE PTR [ecx+0x7a],al
  40f1b9:	mov    edi,DWORD PTR [ebx]
  40f1bb:	inc    esp
  40f1bc:	xchg   edx,eax
  40f1bd:	inc    ecx
  40f1be:	add    BYTE PTR [eax+0x45740835],al
  40f1c4:	loop   0x40f16b
  40f1c6:	ds inc ecx
  40f1c8:	cmp    bl,BYTE PTR [edi]
  40f1ca:	call   0x48dc8c
  40f1cf:	or     ecx,DWORD PTR [edx+0x62561f3d]
  40f1d5:	loope  0x40f15c
  40f1d7:	inc    DWORD PTR [ebp+0x18]
  40f1da:	push   0xbcd73a00
  40f1df:	push   0x41427d63
  40f1e4:	arpl   WORD PTR [esi],bx
  40f1e6:	jecxz  0x40f25c
  40f1e8:	pop    ebx
  40f1e9:	mov    dh,0xb4
  40f1eb:	mov    eax,ds:0xfdea9b04
  40f1f0:	jle    0x40f185
  40f1f2:	loope  0x40f1de
  40f1f4:	bound  esp,QWORD PTR [esp+eax*4]
  40f1f7:	cmp    eax,0x45ddf963
	...
  40f22c:	add    BYTE PTR [eax],al
  40f22e:	out    0xbe,eax
  40f230:	ret    0xdcb8
  40f233:	jb     0x40f216
  40f235:	(bad)  
  40f236:	rcr    DWORD PTR [ebx],1
  40f238:	sbb    eax,DWORD PTR [edi]
  40f23a:	push   esi
  40f23b:	inc    edi
  40f23c:	loop   0x40f2b2
  40f23e:	(bad)  
  40f23f:	pop    edx
  40f240:	pop    eax
  40f241:	or     bl,cl
  40f243:	neg    DWORD PTR [esi-0x1]
  40f246:	mov    ah,0xa
  40f248:	inc    edx
  40f249:	leave  
  40f24a:	mov    eax,ds:0xd85502e9
  40f24f:	dec    ecx
  40f250:	xchg   bl,al
  40f252:	lahf   
  40f253:	fwait
  40f254:	cmp    DWORD PTR [edx+0x63],ebp
  40f257:	enter  0xff2d,0x16
  40f25b:	(bad)  
  40f25c:	jmp    0x2688:0xe21b09f9
  40f263:	adc    cl,BYTE PTR [esi+0x45062334]
  40f269:	add    al,bl
  40f26b:	loopne 0x40f2b3
  40f26d:	sub    BYTE PTR [edx],ah
  40f26f:	out    dx,al
  40f270:	cmp    BYTE PTR [esi],0x63
  40f273:	js     0x40f2bc
  40f275:	push   0x43ad32
  40f27a:	mov    ah,0xf4
  40f27c:	and    DWORD PTR [eax+0x63],edx
  40f27f:	in     al,dx
  40f280:	or     eax,0x38b3b7c0
  40f285:	call   0xff23564b
  40f28a:	xchg   ebx,eax
  40f28b:	add    eax,0xea630451
  40f290:	sahf   
  40f291:	ins    BYTE PTR es:[edi],dx
	...
  40f2c2:	add    BYTE PTR [eax],al
  40f2c4:	and    BYTE PTR [esi+0x28],al
  40f2c7:	add    al,0xb3
  40f2c9:	ficom  DWORD PTR [ebx+0xc]
  40f2cc:	sti    
  40f2cd:	xor    DWORD PTR [ebx+0x68ee05e1],ecx
  40f2d3:	pop    edi
  40f2d4:	cld    
  40f2d5:	fcmovb st,st(1)
  40f2d7:	add    ebx,DWORD PTR [ebp+0x7603ee85]
  40f2dd:	fild   QWORD PTR [esi]
  40f2df:	loopne 0x40f312
  40f2e1:	lds    ebx,FWORD PTR [edi-0x1f]
  40f2e4:	fstp   st(2)
  40f2e6:	xchg   ebp,eax
  40f2e7:	(bad)  
  40f2e8:	push   es
  40f2e9:	push   ds
  40f2ea:	out    0x56,al
  40f2ec:	or     bl,bl
  40f2ee:	sti    
  40f2ef:	ffreep st(5)
  40f2f1:	push   eax
  40f2f2:	icebp  
  40f2f3:	jmp    0x40f28d
  40f2f5:	pop    edi
  40f2f6:	jbe    0x40f2d9
  40f2f8:	adc    eax,0x60c6a03b
  40f2fd:	add    eax,0x86b88cbc
  40f302:	and    al,0xe0
  40f304:	or     al,BYTE PTR ds:0x50942fc3
  40f30a:	loope  0x40f2f7
  40f30c:	push   cs
  40f30d:	pop    edi
  40f30e:	inc    esi
  40f30f:	loope  0x40f2ec
  40f311:	inc    eax
  40f312:	cmp    eax,0xe96f636e
  40f317:	imul   eax,DWORD PTR [edx-0x4fc57bb],0x4
  40f31e:	jmp    0xb12ed626
  40f323:	sbb    DWORD PTR [ebp-0x26],0xffffffe1
  40f327:	ret    
	...
  40f358:	add    BYTE PTR [eax],al
  40f35a:	sar    dl,1
  40f35c:	mov    eax,0x5833deb
  40f361:	loope  0x40f2f7
  40f363:	ins    DWORD PTR es:[edi],dx
  40f364:	jmp    0xffdc3f6c
  40f369:	cmp    al,0x19
  40f36c:	inc    ecx
  40f36d:	jmp    0xf1b5cde2
  40f372:	cmp    ch,ah
  40f374:	mov    al,ds:0xce203de
  40f379:	push   esp
  40f37a:	add    bl,bl
  40f37c:	(bad)  
  40f37d:	push   esp
  40f37e:	add    ebx,ebx
  40f380:	je     0x40f373
  40f382:	clc    
  40f383:	pop    ecx
  40f384:	jp     0x40f344
  40f386:	add    ecx,ebp
  40f388:	shr    ebp,0x60
  40f38b:	xor    BYTE PTR [ebx-0x43a1843],cl
  40f391:	adc    ebx,DWORD PTR [edi+0x6f]
  40f394:	sub    eax,0xe80d359e
  40f399:	int    0x36
  40f39b:	(bad)  
  40f39d:	pusha  
  40f39e:	and    eax,0x60e967d9
  40f3a3:	jmp    0xe941:0x44bc11bd
  40f3aa:	dec    eax
  40f3ab:	sub    al,0x41
  40f3ad:	sub    BYTE PTR [edi-0x26],ah
  40f3b0:	je     0x40f3a3
  40f3b2:	mov    eax,0x835ea0ed
  40f3b7:	fidiv  DWORD PTR [ebp+edx*2-0x7d]
  40f3bb:	push   eax
  40f3bc:	or     BYTE PTR [ecx+0x0],al
	...
  40f3ef:	add    BYTE PTR ds:0x9946ff5f,ah
  40f3f5:	ret    
  40f3f6:	add    ebp,ecx
  40f3f8:	xor    eax,0x9c6aeb8e
  40f3fd:	(bad)  [ecx-0x17]
  40f400:	(bad)  
  40f401:	sub    bh,bh
  40f403:	pushf  
  40f404:	pop    eax
  40f405:	in     eax,dx
  40f406:	call   0x891937ab
  40f40b:	lods   al,BYTE PTR ds:[esi]
  40f40c:	xor    al,0x61
  40f40e:	add    cl,ch
  40f410:	push   ebx
  40f411:	fwait
  40f412:	add    BYTE PTR ds:0x4144,al
  40f417:	add    dl,dl
  40f419:	dec    ebx
  40f41a:	inc    ecx
  40f41b:	inc    ecx
  40f41c:	dec    edx
  40f41d:	out    0x73,al
  40f41f:	or     BYTE PTR [edx+0x73],ah
  40f422:	lahf   
  40f423:	(bad)  
  40f424:	cmp    eax,0x2d00006a
  40f429:	js     0x40f491
  40f42b:	aas    
  40f42c:	dec    ebx
  40f42d:	inc    edx
  40f42e:	add    BYTE PTR [eax+0x43],ch
  40f431:	inc    edx
  40f432:	inc    ecx
  40f433:	add    BYTE PTR ds:0x80e8083f,bl
  40f439:	mov    ds:0x3eadfffd,al
  40f43e:	cld    
  40f43f:	push   DWORD PTR [edi]
  40f441:	or     eax,ebp
  40f443:	repz inc ebx
  40f445:	mov    eax,0xe08c9fd
  40f44a:	add    BYTE PTR [ebp+0x41],dl
  40f44d:	aad    0x81
  40f44f:	(bad)  
  40f450:	fimul  WORD PTR [ebx+edx*2+0x10]
	...
  40f483:	add    BYTE PTR [eax],al
  40f485:	add    BYTE PTR [ecx-0x2d],dl
  40f488:	push   0xfc4e4f00
  40f48d:	push   eax
  40f48e:	sub    eax,0xba6a083e
  40f493:	mov    bh,0x73
  40f495:	adc    BYTE PTR ds:0x4a851c13,bh
  40f49b:	ds daa 
  40f49d:	mov    edx,edi
  40f49f:	mov    eax,0x6e7a6a8e
  40f4a4:	add    BYTE PTR [eax+0x1d],ch
  40f4a7:	add    al,0x0
  40f4a9:	add    BYTE PTR ds:0x2d6a0c3e,bh
  40f4af:	mov    eax,0x4a00470
  40f4b4:	push   0x0
  40f4b6:	push   edx
  40f4b7:	stos   BYTE PTR es:[edi],al
  40f4b8:	dec    ebx
  40f4b9:	add    BYTE PTR [edx+0x54],cl
  40f4bc:	(bad)  
  40f4bd:	jne    0x40f522
  40f4bf:	bnd jmp 0x40f521
  40f4c2:	popf   
  40f4c3:	out    dx,al
  40f4c4:	add    cl,cl
  40f4c6:	and    edx,edx
  40f4c8:	add    dl,BYTE PTR [ebp-0x18]
  40f4cb:	or     DWORD PTR [ebx+0x396337c3],eax
  40f4d1:	adc    al,0xd8
  40f4d3:	mov    ebx,0x28d60068
  40f4d8:	loopne 0x40f529
  40f4da:	sbb    al,0x31
  40f4dc:	adc    bh,bh
  40f4de:	mov    fs,esi
  40f4e0:	push   0xf8310c00
  40f4e5:	(bad)  
  40f4e6:	mov    cl,0xf6
  40f4e8:	mov    BYTE PTR [edi+0x0],bh
	...
  40f51a:	add    BYTE PTR [eax],al
  40f51c:	jbe    0x40f51d
  40f51e:	mov    dl,BYTE PTR [edi+esi*8+0x3d]
  40f522:	imul   eax,DWORD PTR [eax],0xff6aee79
  40f528:	pusha  
  40f529:	out    dx,al
  40f52a:	add    bh,bh
  40f52c:	push   esi
  40f52d:	fisubr WORD PTR [eax-0x1]
  40f530:	aam    0xfb
  40f532:	pop    es
  40f533:	push   0x63
  40f535:	add    al,0x4
  40f537:	call   0x450664
  40f53c:	rcl    DWORD PTR [esi+0x58],cl
  40f53f:	cld    
  40f540:	retf   
  40f541:	mov    ebx,0xa563004c
  40f546:	ror    BYTE PTR [edi],0x63
  40f549:	cdq    
  40f54a:	mov    ebx,ebp
  40f54c:	pushf  
  40f54d:	mov    al,0xa
  40f54f:	dec    DWORD PTR [esi]
  40f551:	(bad)  
  40f552:	jmp    0xefe:0xde470b52
  40f559:	shr    dl,cl
  40f55b:	xchg   edi,eax
  40f55c:	cs out dx,al
  40f55e:	add    dl,cl
  40f560:	sub    DWORD PTR [edx-0x3d],0x1
  40f564:	adc    esp,DWORD PTR [edi]
  40f566:	pop    eax
  40f567:	or     al,0x64
  40f569:	add    al,0x9c
  40f56b:	sti    
  40f56c:	inc    esp
  40f56d:	push   esi
  40f56e:	mov    eax,ds:0x9bd755de
  40f573:	test   DWORD PTR [ebp+0x51],0xfdcfdef9
  40f57a:	adc    BYTE PTR [ecx-0x45],ah
  40f57d:	(bad)  
  40f57e:	std    
  40f57f:	retf   
	...
  40f5b0:	add    BYTE PTR [eax],al
  40f5b2:	and    dh,dl
  40f5b4:	call   0xee2acdf1
  40f5b9:	push   edi
  40f5ba:	pop    ebx
  40f5bb:	(bad)  
  40f5bc:	pop    ebx
  40f5bd:	cld    
  40f5be:	add    al,0xfc
  40f5c0:	pusha  
  40f5c1:	fst    QWORD PTR ds:0xfb105bd7
  40f5c7:	mov    BYTE PTR [esp+eax*1],bl
  40f5ca:	arpl   WORD PTR [ebp+0x19],ax
  40f5cd:	fnsave [edi+0x9]
  40f5d0:	mov    esi,0xf1ed5b57
  40f5d5:	pop    ebx
  40f5d6:	in     al,dx
  40f5d7:	(bad)  
  40f5d8:	lods   eax,DWORD PTR ds:[esi]
  40f5d9:	push   edi
  40f5da:	dec    edi
  40f5db:	(bad)  
  40f5dc:	sbb    esi,esp
  40f5de:	fst    QWORD PTR [eax+0x1]
  40f5e1:	in     al,dx
  40f5e2:	xchg   DWORD PTR [ebp-0x6a],ebx
  40f5e5:	fstp   QWORD PTR [ebx+0x2e03f4c3]
  40f5eb:	mov    dl,BYTE PTR [ebx+eax*4-0x22864e60]
  40f5f2:	mov    ch,0xd6
  40f5f4:	sti    
  40f5f5:	sti    
  40f5f6:	fild   WORD PTR [eax-0x295a2018]
  40f5fc:	mov    eax,0x510d17dc
  40f601:	mov    esi,0xdd55d696
  40f606:	pop    ss
  40f607:	std    
  40f608:	pop    ebx
  40f609:	xchg   DWORD PTR [esi+ecx*8-0x29d322bb],eax
  40f610:	mov    bl,0xf
  40f612:	je     0x40f664
  40f614:	add    cl,ah
	...
  40f646:	add    BYTE PTR [eax],al
  40f648:	js     0x40f63c
  40f64a:	(bad)  
  40f64b:	xchg   BYTE PTR cs:[eax+eax*1-0x6d],ch
  40f650:	pusha  
  40f651:	ins    DWORD PTR es:[edi],dx
  40f652:	(bad)  
  40f653:	jmp    0xd167:0x6c8d0560
  40f65a:	dec    BYTE PTR [esi]
  40f65c:	(bad)  
  40f65d:	imul   edi,edi,0x6
  40f660:	xchg   esp,eax
  40f661:	cmc    
  40f662:	imul   ebp,ecx,0x5be805ca
  40f668:	xchg   ebx,eax
  40f669:	add    eax,0xe5dc2600
  40f66e:	repnz out 0x3f,al
  40f671:	push   es
  40f672:	add    cl,ch
  40f674:	pusha  
  40f675:	mov    esi,0xd733dd84
  40f67a:	(bad)  
  40f67b:	jmp    0x40f6dd
  40f67d:	add    eax,0xcde5ae00
  40f682:	repnz mov esi,0xe9fed617
  40f688:	pusha  
  40f689:	mov    esi,0xd713ad84
  40f68e:	(bad)  
  40f68f:	jmp    0x7240fbf4
  40f694:	(bad)  
  40f695:	std    
  40f696:	mov    bh,bl
  40f698:	cmp    al,BYTE PTR ds:0xd2b0648d
  40f69e:	inc    BYTE PTR [esi-0x727b7790]
  40f6a4:	xchg   ebx,eax
  40f6a5:	(bad)  
  40f6a6:	(bad)  
  40f6a7:	sbb    esp,ebx
  40f6a9:	and    bh,0x7a
	...
  40f6dc:	add    BYTE PTR [eax],al
  40f6de:	xchg   esi,edx
  40f6e0:	dec    edi
  40f6e1:	xor    ax,0xfef5
  40f6e5:	aam    0x64
  40f6e7:	(bad)  
  40f6e8:	je     0x40f6cb
  40f6ea:	cli    
  40f6eb:	add    al,0xff
  40f6ed:	aam    0x88
  40f6ef:	(bad)  
  40f6f0:	push   ecx
  40f6f1:	add    dh,cl
  40f6f3:	test   BYTE PTR [ebx-0x246c618],bh
  40f6f9:	add    BYTE PTR [ebp+0x7a011a7d],al
  40f6ff:	add    DWORD PTR [ebx-0x24a8943],eax
  40f705:	dec    DWORD PTR [edx+0x2]
  40f708:	test   BYTE PTR [edi],cl
  40f70a:	cmp    ecx,DWORD PTR [ecx]
  40f70c:	add    bh,al
  40f70e:	mov    edi,0x65fff19c
  40f713:	or     BYTE PTR [eax],al
  40f715:	out    dx,eax
  40f716:	je     0x40f778
  40f718:	pop    eax
  40f719:	inc    ecx
  40f71a:	sti    
  40f71b:	or     BYTE PTR [ebp-0x24ac57b],cl
  40f721:	call   FWORD PTR [edx-0x1f]
  40f724:	adc    cl,BYTE PTR [edx+ecx*1+0x9]
  40f728:	test   eax,eax
  40f72a:	scas   al,BYTE PTR es:[edi]
  40f72b:	dec    ebx
  40f72c:	mov    DWORD PTR [ebp-0x24332],0xbeef090b
  40f736:	xchg   edx,eax
  40f737:	arpl   WORD PTR [ecx+0x41],ax
  40f73a:	cli    
  40f73b:	jge    0x40f6c0
  40f73d:	add    BYTE PTR [esi+0x50fdb0],dh
	...
  40f773:	add    dl,dh
  40f775:	mov    dh,0x49
  40f777:	add    dl,cl
  40f779:	test   DWORD PTR [esi-0x7c38668c],edi
  40f77f:	aam    0xe9
  40f781:	mov    al,0xfd
  40f783:	add    cl,dl
  40f785:	fistp  QWORD PTR [eax+ebp*2+0x414a48]
  40f78c:	inc    edi
  40f78d:	xchg   dh,bh
  40f78f:	sti    
  40f790:	xor    eax,0x5ce84eb0
  40f795:	inc    esp
  40f796:	add    BYTE PTR [eax],al
  40f798:	dec    eax
  40f79a:	or     eax,0x37f6385
  40f79f:	add    BYTE PTR [ebx-0x3a],ah
  40f7a2:	jo     0x40f7e4
  40f7a4:	and    bl,dh
  40f7a6:	xchg   DWORD PTR [ebx+eiz*2+0x13fedb1a],eax
  40f7ad:	inc    esi
  40f7ae:	mov    bl,0x4b
  40f7b0:	arpl   si,bx
  40f7b2:	or     eax,0x856dd7c0
  40f7b7:	cmp    al,0x42
  40f7b9:	popf   
  40f7ba:	inc    ebx
  40f7bb:	add    BYTE PTR [ebx-0x15],ah
  40f7be:	jle    0x40f740
  40f7c0:	arpl   si,bx
  40f7c2:	add    bh,bh
  40f7c4:	div    ch
  40f7c6:	(bad)  
  40f7c7:	(bad)  
  40f7c8:	xor    al,0x63
  40f7ca:	sbb    edi,0xfed9db30
  40f7d0:	out    dx,al
  40f7d1:	rcl    ebp,1
  40f7d3:	(bad)  
  40f7d4:	sbb    al,0x5b
  40f7d6:	and    bl,0x0
	...
  40f809:	add    BYTE PTR [eax],dl
  40f80b:	mov    bl,0xd9
  40f80d:	mov    esi,fs
  40f80f:	xchg   ebp,eax
  40f810:	aad    0xfe
  40f812:	add    al,0xe
  40f814:	outs   dx,BYTE PTR ds:[esi]
  40f815:	add    DWORD PTR [ecx-0x76ff9322],ecx
  40f81b:	fisubr WORD PTR [eax+eax*1-0x22]
  40f81f:	pusha  
  40f820:	jecxz  0x40f814
  40f822:	in     al,0xa2
  40f824:	xor    bh,bh
  40f826:	jbe    0x40f8a5
  40f828:	inc    ebx
  40f829:	inc    ecx
  40f82a:	arpl   di,dx
  40f82c:	ret    0x2473
  40f82f:	jnp    0x40f880
  40f831:	adc    al,0xc4
  40f833:	cmp    BYTE PTR [ebx-0x2675430e],bh
  40f839:	mov    ah,0x97
  40f83b:	dec    esi
  40f83c:	(bad)  
  40f83e:	lods   al,BYTE PTR ds:[esi]
  40f83f:	shl    dl,1
  40f841:	(bad)  
  40f842:	out    dx,al
  40f843:	jns    0x40f81a
  40f845:	(bad)  
  40f846:	pushf  
  40f847:	add    al,0x51
  40f849:	ficom  WORD PTR [edi-0x2825a22d]
  40f84f:	mov    al,0x59
  40f851:	fiadd  DWORD PTR [ebp+0x634d2edc]
  40f857:	add    eax,0x5975f852
  40f85c:	aad    0xda
  40f85e:	mov    bh,0xdc
  40f860:	cmp    edx,ebx
  40f862:	shl    DWORD PTR gs:[ebx-0x19],cl
  40f866:	push   ecx
  40f867:	shl    DWORD PTR ds:0x1df5cfda,cl
  40f86d:	nop
	...
  40f89e:	add    BYTE PTR [eax],al
  40f8a0:	xor    bh,dl
  40f8a2:	adc    eax,0xbb53cda
  40f8a7:	fidivr DWORD PTR ds:0x31e73bd3
  40f8ad:	sar    ebp,cl
  40f8af:	jmp    0xc81a:0x3e93f10
  40f8b6:	aam    0x3
  40f8b8:	mov    dh,0x7e
  40f8ba:	aam    0x85
  40f8bc:	and    BYTE PTR [esi-0x64872cb],cl
  40f8c2:	popa   
  40f8c3:	not    bh
  40f8c5:	dec    eax
  40f8c6:	xchg   ecx,eax
  40f8c7:	xor    al,0x89
  40f8c9:	add    eax,0xd2674fc6
  40f8ce:	xor    ecx,DWORD PTR [ecx+edi*2]
  40f8d1:	add    eax,0xd24f4fb6
  40f8d6:	sbb    dh,BYTE PTR [eax]
  40f8d8:	out    0xc5,al
  40f8da:	sbb    esi,DWORD PTR [eax]
  40f8dc:	pushf  
  40f8dd:	dec    eax
  40f8de:	pop    ebp
  40f8df:	add    al,0x63
  40f8e1:	add    eax,0x8d2f8ce9
  40f8e6:	popa   
  40f8e7:	imul   bh
  40f8e9:	dec    eax
  40f8ea:	inc    ebp
  40f8eb:	xor    al,0xe6
  40f8ed:	dec    eax
  40f8ee:	test   eax,0xfff53934
  40f8f3:	jne    0x40f909
  40f8f5:	(bad)  
  40f8f6:	(bad)  
  40f8f7:	sbb    ebp,DWORD PTR [ebx-0x7a]
  40f8fa:	jl     0x40f8a1
  40f8fc:	pop    edi
  40f8fd:	pop    ecx
  40f8fe:	daa    
  40f8ff:	ins    BYTE PTR es:[edi],dx
  40f900:	xor    al,0xc5
  40f902:	(bad)  
  40f903:	fadd   QWORD PTR [eax]
	...
  40f935:	add    BYTE PTR [ebx+edx*8+0x74],dh
  40f939:	stc    
  40f93a:	fwait
  40f93b:	sbb    edi,edi
  40f93d:	mov    esp,0xf174d25c
  40f942:	js     0x40f8fa
  40f944:	cld    
  40f945:	ss mov dl,bl
  40f948:	ss inc ecx
  40f94a:	les    edi,FWORD PTR [esi]
  40f94c:	add    cl,ch
  40f94e:	(bad)  
  40f950:	add    ebx,DWORD PTR [esi]
  40f952:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f953:	xchg   ecx,eax
  40f954:	je     0x40f98d
  40f956:	ss fwait
  40f958:	mov    dh,BYTE PTR [eax+ebx*8-0x5bf9ee82]
  40f95f:	(bad)  
  40f960:	(bad)  
  40f961:	fwait
  40f962:	pop    eax
  40f963:	xor    cl,cl
  40f965:	sub    ebp,DWORD PTR [edi]
  40f967:	rcl    BYTE PTR [ebx+0x62],cl
  40f96a:	or     eax,DWORD PTR [ebp-0x2cc51e3d]
  40f970:	(bad)  
  40f971:	fidivr WORD PTR ss:[eax]
  40f974:	adc    BYTE PTR [edx+0xe],ah
  40f977:	add    DWORD PTR [ecx+edx*8+0x19fed31a],0x34ff0585
  40f982:	pop    edi
  40f983:	pop    edi
  40f984:	add    BYTE PTR [esi+0x1bfef595],dh
  40f98a:	jnp    0x40f914
  40f98c:	mov    edi,0x84ca421c
  40f991:	popf   
  40f992:	stos   BYTE PTR es:[edi],al
  40f993:	sar    dh,cl
  40f995:	jmp    0x6240fefa
	...
  40f9ca:	add    BYTE PTR [eax],al
  40f9cc:	dec    ebp
  40f9cd:	(bad)  
  40f9cf:	add    ch,bl
  40f9d1:	lods   al,BYTE PTR ds:[esi]
  40f9d2:	mov    DWORD PTR [edx],edx
  40f9d4:	aas    
  40f9d5:	push   ebx
  40f9d6:	sti    
  40f9d7:	(bad)  
  40f9d8:	sub    eax,0x78d4ead
  40f9dd:	push   es
  40f9de:	(bad)  
  40f9df:	(bad)  
  40f9e0:	std    
  40f9e1:	adc    eax,0x832d106a
  40f9e6:	idiv   dh
  40f9e8:	sub    eax,0x9e52fdad
  40f9ed:	mov    BYTE PTR [ebx-0x252e304],bh
  40f9f3:	add    BYTE PTR [esi+0x7abd8d27],dh
  40f9f9:	lods   al,BYTE PTR ds:[esi]
  40f9fa:	std    
  40f9fb:	dec    DWORD PTR [ebp-0x800efc1]
  40fa01:	or     BYTE PTR [edi-0x1],dl
  40fa04:	idiv   esp
  40fa06:	out    0x13,eax
  40fa08:	ins    DWORD PTR es:[edi],dx
  40fa09:	lods   eax,DWORD PTR ds:[esi]
  40fa0a:	std    
  40fa0b:	add    DWORD PTR [ebp+0x5e8dfdd4],0xffffffae
  40fa12:	std    
  40fa13:	push   DWORD PTR [edi-0x3e55161a]
  40fa19:	pop    edi
  40fa1a:	idiv   esi
  40fa1c:	or     eax,0xfd1289b9
  40fa21:	jbe    0x40fa19
  40fa23:	(bad)  
  40fa24:	sub    eax,0x252fdb9
  40fa29:	sbb    cl,cl
  40fa2b:	ret    0x51e
  40fa2e:	push   ebp
  40fa2f:	mov    eax,DWORD PTR [eax]
	...
  40fa61:	add    BYTE PTR [esi],cl
  40fa63:	mov    eax,edx
  40fa65:	clc    
  40fa66:	lods   al,BYTE PTR ds:[esi]
  40fa67:	mov    eax,0x168157fd
  40fa6c:	or     al,0x8b
  40fa6e:	mov    eax,0xfcf8837d
  40fa73:	mov    eax,0x97050fd
  40fa78:	push   0x0
  40fa7a:	arpl   WORD PTR [edi+0x50],si
  40fa7d:	or     al,0xbc
  40fa7f:	or     al,0x1c
  40fa81:	test   DWORD PTR [ebx+0x26c735d1],esp
  40fa87:	push   edx
  40fa88:	add    al,0x0
  40fa8a:	arpl   si,bx
  40fa8c:	jb     0x40fa18
  40fa8e:	not    BYTE PTR [esi-0x2a]
  40fa91:	(bad)  
  40fa92:	xchg   esp,eax
  40fa93:	push   ebx
  40fa94:	repnz mov WORD PTR [esi],fs
  40fa97:	xor    dh,BYTE PTR [ecx*4-0x129c522]
  40fa9e:	jl     0x40fa2e
  40faa0:	push   0xdc517410
  40faa5:	std    
  40faa6:	ins    BYTE PTR es:[edi],dx
  40faa7:	(bad)  
  40faa9:	push   ecx
  40faaa:	push   edi
  40faab:	cmp    DWORD PTR cs:[edi+ebx*2-0x22],0x72
  40fab1:	jae    0x40fa36
  40fab3:	pop    ecx
  40fab4:	cdq    
  40fab5:	sti    
  40fab6:	dec    ebp
  40fab7:	out    dx,eax
  40fab8:	(bad)  
  40fab9:	pop    DWORD PTR [ecx+esi*2+0x6]
  40fabd:	push   DWORD PTR [esi+0x6be82de6]
  40fac3:	pop    es
  40fac4:	xlat   BYTE PTR ds:[ebx]
  40fac5:	inc    BYTE PTR [eax]
	...
  40faf7:	add    al,ah
  40faf9:	es hlt 
  40fafb:	(bad)  
  40fafc:	and    al,0xa9
  40fafe:	(bad)  
  40faff:	(bad)  
  40fb00:	xchg   esi,eax
  40fb01:	add    eax,0x52d1ea74
  40fb06:	jo     0x40faff
  40fb08:	or     eax,0x718ad5af
  40fb0d:	mov    bh,0x8f
  40fb0f:	idiv   ebp
  40fb11:	mov    esi,0xd691fed5
  40fb16:	xor    eax,0x2d621c9
  40fb1b:	push   ebp
  40fb1c:	fmul   st,st(1)
  40fb1e:	add    ebx,0x74d6f813
  40fb24:	addr16 add eax,0x51bcc91
  40fb2a:	jmp    0xec9a9e39
  40fb2f:	xor    eax,0x3dcc2aa
  40fb34:	xchg   edx,eax
  40fb35:	in     al,0x69
  40fb37:	ret    
  40fb38:	bound  edi,QWORD PTR [eax+ebx*4-0x78]
  40fb3c:	pop    ds
  40fb3d:	loope  0x40fb57
  40fb3f:	xor    bl,BYTE PTR [ecx+ebx*2+0x7f00ebdd]
  40fb46:	gs (bad) 
  40fb48:	cmp    DWORD PTR [esi-0x2450b791],edi
  40fb4e:	loop   0x40fb5d
  40fb50:	ins    BYTE PTR es:[edi],dx
  40fb51:	xchg   edi,eax
  40fb52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb53:	sub    al,0x87
  40fb55:	add    eax,0x8423afac
  40fb5a:	aas    
  40fb5b:	out    dx,eax
	...
  40fb8c:	add    BYTE PTR [eax],al
  40fb8e:	repnz aad 0x1
  40fb91:	into   
  40fb92:	jmp    0x40fbec
  40fb94:	sbb    edx,ebp
  40fb96:	jl     0x40fbaf
  40fb98:	test   BYTE PTR [ebp+0x330d1fa0],0xbb
  40fb9f:	lock stos BYTE PTR es:[edi],al
  40fba1:	inc    esp
  40fba2:	arpl   WORD PTR [eax-0x225b445d],ax
  40fba8:	adc    al,0x4c
  40fbaa:	arpl   WORD PTR ds:0x8058bf6a,ax
  40fbb0:	stos   DWORD PTR es:[edi],eax
  40fbb1:	mov    ebx,0xb373ceac
  40fbb6:	cld    
  40fbb7:	jge    0x40fc1a
  40fbb9:	aad    0xd
  40fbbb:	jge    0x40fbe0
  40fbbd:	mov    ah,0x9e
  40fbbf:	adc    dh,0xf0
  40fbc2:	jb     0x40fb76
  40fbc4:	addr16 pop edi
  40fbc6:	bswap  edi
  40fbc8:	call   0x340f5ed0
  40fbcd:	mov    al,0x7c
  40fbcf:	lock jmp FWORD PTR [edx]
  40fbd2:	and    BYTE PTR ds:0x3f17248d,al
  40fbd8:	call   0x461442
  40fbdd:	push   0xffffffa3
  40fbdf:	cli    
  40fbe0:	mov    WORD PTR [edi+edi*8],gs
  40fbe3:	notrack call DWORD PTR [edi+ebp*8]
  40fbe7:	out    0x57,al
  40fbe9:	add    dl,BYTE PTR [esi-0x10db7731]
  40fbef:	add    DWORD PTR [ebp+eiz*4+0x0],0x0
	...
  40fc23:	add    BYTE PTR [edi-0x32],dl
  40fc26:	je     0x40fbc1
  40fc28:	pop    es
  40fc29:	and    eax,DWORD PTR [edx-0x58]
  40fc2c:	pusha  
  40fc2d:	into   
  40fc2e:	xor    al,0x6
  40fc30:	cmp    BYTE PTR [eax+eax*1+0x41],al
  40fc34:	add    cl,BYTE PTR [ebx-0x1]
  40fc37:	dec    esi
  40fc38:	push   0xffffffc5
  40fc3a:	push   cs
  40fc3b:	ins    DWORD PTR es:[edi],dx
  40fc3c:	dec    ch
  40fc3e:	(bad)  
  40fc3f:	jmp    0x6b09461d
  40fc44:	mov    ah,0xc1
  40fc46:	(bad)  
  40fc47:	fst    st(4)
  40fc49:	test   bh,bh
  40fc4b:	call   0xedb5cab0
  40fc50:	cmp    BYTE PTR [edx],al
  40fc52:	dec    ecx
  40fc53:	jmp    0x6b20b0b8
  40fc58:	pop    ds
  40fc59:	add    al,0x89
  40fc5b:	lods   al,BYTE PTR ds:[esi]
  40fc5c:	ror    dh,1
  40fc5e:	je     0x40fc4d
  40fc60:	fisttp WORD PTR [eax-0x4c]
  40fc63:	imul   BYTE PTR [ebp+0x20a48ec1]
  40fc69:	iret   
  40fc6a:	je     0x40fc1d
  40fc6c:	out    0x48,eax
  40fc6e:	les    esp,FWORD PTR [esi-0x17006ebb]
  40fc74:	pusha  
  40fc75:	add    eax,0x1c680c83
  40fc7a:	inc    ecx
  40fc7b:	add    dl,bh
  40fc7d:	add    DWORD PTR [eax+edx*2+0x77],esi
  40fc81:	(bad)  
  40fc83:	push   eax
  40fc84:	and    BYTE PTR [edx],al
  40fc86:	push   0x0
	...
  40fcb8:	add    BYTE PTR [eax],al
  40fcba:	and    BYTE PTR [ecx],cl
  40fcbc:	lea    eax,[ebp+0x2a]
  40fcbf:	adc    ch,BYTE PTR [edx+0x0]
  40fcc2:	aaa    
  40fcc3:	xadd   BYTE PTR [eax-0x2b],dl
  40fcc7:	fiadd  WORD PTR [edi]
  40fcc9:	sub    DWORD PTR [ebx-0x513ff4f7],ecx
  40fccf:	repz cmp BYTE PTR [ebp+0x66],0x2
  40fcd4:	je     0x40fd02
  40fcd6:	or     DWORD PTR [edi],esi
  40fcd8:	adc    BYTE PTR [eax],al
  40fcda:	mov    ?,ecx
  40fcdc:	mov    dl,BYTE PTR [ebp-0x76]
  40fcdf:	das    
  40fce0:	mov    DWORD PTR [edx],0x75ff0965
  40fce6:	cmp    BYTE PTR [eax+0x3f25b873],0xbc
  40fced:	jmp    FWORD PTR [edi+0x7a036805]
  40fcf3:	call   0xaeefe5b4
  40fcf8:	std    
  40fcf9:	inc    DWORD PTR [ebp-0x6f1743c5]
  40fcff:	or     DWORD PTR [eax],eax
  40fd01:	add    BYTE PTR [ebp+0x3b],ah
  40fd04:	enter  0xa6e8,0x3a
  40fd08:	(bad)  
  40fd09:	jmp    DWORD PTR [ebp+0x3b]
  40fd0c:	shr    al,1
  40fd0e:	sahf   
  40fd0f:	cmp    bh,bh
  40fd11:	inc    esp
  40fd13:	mov    edi,0x1c0a0cc0
  40fd18:	mov    ebp,esp
  40fd1a:	mov    DWORD PTR [esi+eax*8+0x8d],ecx
	...
  40fd4d:	add    BYTE PTR [eax],al
  40fd4f:	add    BYTE PTR [edi],bh
  40fd51:	mov    ch,0x4e
  40fd53:	push   0x414303
  40fd58:	arpl   WORD PTR [eax+0x9],cx
  40fd5b:	push   0x63
  40fd5d:	inc    esi
  40fd5e:	fld    QWORD PTR [eax-0x5e]
  40fd61:	(bad)  
  40fd63:	mov    ebp,0x8502de9b
  40fd68:	mov    ds:0x63bf7ae3,eax
  40fd6d:	fiadd  WORD PTR [edx]
  40fd6f:	mov    esi,DWORD PTR [esi]
  40fd71:	mov    ds:0x21d6117e,al
  40fd76:	int3   
  40fd77:	dec    edi
  40fd78:	mov    esp,0x11fecfe9
  40fd7d:	fiadd  DWORD PTR [edi+0x72565cbf]
  40fd83:	jmp    DWORD PTR [esi+ebx*8-0x2164837b]
  40fd8a:	add    DWORD PTR [edi+ebp*8-0x5bfffd22],eax
  40fd91:	cdq    
  40fd92:	mov    dh,0xff
  40fd94:	test   dh,bl
  40fd96:	add    al,bh
  40fd98:	es push ss
  40fd9a:	add    al,0x0
  40fd9c:	arpl   si,bx
  40fd9e:	leave  
  40fd9f:	inc    esp
  40fda0:	xchg   ebx,eax
  40fda1:	test   BYTE PTR [ebx],0x0
  40fda4:	arpl   WORD PTR [ebx],sp
  40fda6:	dec    ecx
  40fda7:	int3   
  40fda8:	arpl   si,bx
  40fdaa:	add    al,BYTE PTR [eax]
  40fdac:	call   0x71cbc821
  40fdb1:	push   ecx
  40fdb2:	dec    ecx
  40fdb3:	int3   
	...
  40fde4:	add    BYTE PTR [eax],al
  40fde6:	mov    bl,0x59
  40fde8:	dec    ecx
  40fde9:	rcl    BYTE PTR [ebx-0x5100fc78],1
  40fdef:	not    dl
  40fdf1:	push   ecx
  40fdf2:	pop    edi
  40fdf3:	xlat   BYTE PTR ds:[ebx]
  40fdf4:	ret    0x8f74
  40fdf7:	pop    edi
  40fdf8:	push   ecx
  40fdf9:	int3   
  40fdfa:	bound  ecx,QWORD PTR [ecx+0x41]
  40fdfd:	adc    DWORD PTR [esi-0x5a8bfc0e],0x5
  40fe04:	push   ecx
  40fe05:	in     eax,dx
  40fe06:	mov    ds:0x77d2e946,al
  40fe0b:	mov    cl,0xc0
  40fe0d:	enter  0x59c,0xe9
  40fe11:	(bad)  
  40fe12:	lods   al,BYTE PTR ds:[esi]
  40fe13:	push   eax
  40fe14:	repz imul ebx,DWORD PTR [eax*1+0x41ea03e9],0xc45ddea1
  40fe20:	and    edi,DWORD PTR [esp+ecx*8-0x3bfc1735]
  40fe27:	push   ecx
  40fe28:	mov    cl,0xd2
  40fe2a:	aaa    
  40fe2b:	mov    cl,0x95
  40fe2d:	pop    eax
  40fe2e:	imul   ebx,ebp,0xffffff86
  40fe31:	shr    BYTE PTR [ebp-0x70a77a35],1
  40fe37:	(bad)  
  40fe39:	cmp    esp,DWORD PTR [ebx+0x5]
  40fe3c:	push   0x50
  40fe3e:	mov    ebx,0x8dfbf504
  40fe43:	push   ecx
  40fe44:	inc    ecx
  40fe45:	fistp  DWORD PTR [ebp+edi*1-0x17]
  40fe49:	add    eax,DWORD PTR [eax]
	...
  40fe7b:	add    BYTE PTR [eax+0x7b386178],cl
  40fe81:	jg     0x40fe7d
  40fe83:	shl    bh,cl
  40fe85:	int3   
  40fe86:	inc    ebp
  40fe87:	xor    eax,0xcf93805b
  40fe8c:	jmp    0x57993488
  40fe91:	retf   
  40fe92:	call   0xae03:0xecc81bfb
  40fe99:	jle    0x40fea7
  40fe9b:	xchg   BYTE PTR [eax],ah
  40fe9d:	out    0xbe,al
  40fe9f:	xchg   BYTE PTR [edi+0x28],dh
  40fea2:	stos   DWORD PTR es:[edi],eax
  40fea3:	inc    esp
  40fea4:	arpl   WORD PTR ds:0x11df17c,ax
  40feaa:	pushf  
  40feab:	inc    ebp
  40feac:	mov    ds:0x60e80005,al
  40feb1:	add    eax,0x47872f00
  40feb6:	inc    ecx
  40feb7:	jmp    0xa8a702e3
  40febc:	dec    ecx
  40febd:	pop    es
  40febe:	sub    DWORD PTR [edi+0xf83635d],0x67
  40fec5:	push   eax
  40fec6:	repz push 0x54
  40fec9:	ins    BYTE PTR es:[edi],dx
  40feca:	sub    eax,0xf056728
  40fecf:	ins    DWORD PTR es:[edi],dx
  40fed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fed1:	retf   0xe9fe
  40fed4:	out    0x9,eax
  40fed6:	xchg   ebp,eax
  40fed7:	xlat   BYTE PTR ds:[ebx]
  40fed8:	and    DWORD PTR ds:0xd8e4ee00,eax
  40fede:	(bad)  
  40fedf:	call   0x40fee4
	...
  40ff10:	add    BYTE PTR [eax],al
  40ff12:	pusha  
  40ff13:	xchg   BYTE PTR [eax+eiz*8],bh
  40ff16:	dec    ecx
  40ff17:	inc    esp
  40ff18:	add    cl,ch
  40ff1a:	arpl   WORD PTR [ecx+0x560e9e0],ax
  40ff20:	(bad)  
  40ff21:	sub    al,0xb3
  40ff23:	retf   0xe9fe
  40ff26:	pusha  
  40ff27:	ret    0x6144
  40ff2a:	pop    edi
  40ff2b:	add    eax,0x40fde900
  40ff30:	cld    
  40ff31:	mov    ecx,0xb9f840f5
  40ff36:	push   cs
  40ff37:	add    eax,0x441d9268
  40ff3c:	add    BYTE PTR [esi],bh
  40ff3e:	push   esp
  40ff3f:	jno    0x40ff6e
  40ff41:	test   al,0x60
  40ff43:	(bad)  
  40ff44:	mov    edi,0xff8fe4de
  40ff49:	call   0x21bd85ae
  40ff4e:	addr16 cli 
  40ff50:	add    DWORD PTR [ebp+0x5f],0x5
  40ff54:	add    BYTE PTR [edx-0x64],ch
  40ff57:	leave  
  40ff58:	(bad)  
  40ff59:	jmp    FWORD PTR ds:0xa00a082
  40ff5f:	push   es
  40ff60:	mov    esi,DWORD PTR [ebp+0xe]
  40ff63:	scas   eax,DWORD PTR es:[edi]
  40ff64:	add    BYTE PTR [eax],0xfa
  40ff67:	add    eax,0xb4648b56
  40ff6c:	je     0x40ff86
  40ff6e:	lea    eax,[ebx-0x10]
  40ff71:	call   DWORD PTR [ebp+edx*8+0x458d]
	...
  40ffa8:	push   ss
  40ffa9:	cs popa 
  40ffab:	inc    edx
  40ffac:	cmp    eax,DWORD PTR [ecx]
  40ffae:	call   0x42848a
  40ffb3:	shr    DWORD PTR [edx+0x4302be80],1
  40ffb9:	inc    ebx
  40ffba:	loopne 0x410024
  40ffbc:	pop    ebx
  40ffbd:	inc    ebx
  40ffbe:	inc    ecx
  40ffbf:	add    BYTE PTR [ebp+0x43],cl
  40ffc2:	in     al,0xc7
  40ffc4:	xchg   ebp,esp
  40ffc6:	(bad)  
  40ffc7:	(bad)  
  40ffc8:	mov    edx,0xd2458d05
  40ffcd:	adc    eax,0x170016a
  40ffd2:	push   0x0
  40ffd4:	inc    DWORD PTR [edx-0x20]
  40ffd7:	push   eax
  40ffd8:	pusha  
  40ffd9:	add    DWORD PTR [ebp-0xe9d5bb],ecx
  40ffdf:	adc    eax,0x40ee73
  40ffe4:	add    ebp,0x3af92d72
  40ffea:	in     al,dx
  40ffeb:	add    BYTE PTR [esi+0x4a01b81c],ah
  40fff1:	add    eax,0x308a0b00
  40fff6:	push   ss
  40fff7:	call   DWORD PTR [edi]
  40fff9:	int    0xfd
  40fffb:	jne    0x41006f
  40fffd:	mov    ch,0x73
  40ffff:	in     al,dx
  410000:	pop    ebp
  410001:	or     BYTE PTR cs:[eax+0x63],ch
  410005:	fiadd  DWORD PTR [edx]
  410007:	out    dx,eax
  410008:	in     eax,dx
  410009:	push   es
  41000a:	sti    
  41000b:	clc    
	...
  41003c:	add    BYTE PTR [eax],al
  41003e:	and    al,0x0
  410040:	shl    BYTE PTR [edi+ecx*1-0x9],1
  410044:	xchg   ebp,eax
  410045:	inc    esp
  410046:	arpl   si,bx
  410048:	xor    bh,bh
  41004a:	sahf   
  41004b:	(bad)  
  41004c:	add    ch,0x5f
  41004f:	pop    ebx
  410050:	push   ecx
  410051:	clc    
  410052:	arpl   WORD PTR [edx],si
  410054:	std    
  410055:	xor    BYTE PTR ds:0x7c84fdde,0xb7
  41005c:	into   
  41005d:	(bad)  
  41005e:	in     al,0x9
  410060:	sar    dh,1
  410062:	jbe    0x4100c9
  410064:	push   ds
  410065:	inc    ecx
  410066:	arpl   ax,si
  410068:	mov    esp,0x37de67c1
  41006d:	mov    esi,DWORD PTR [edi+0x49f7c85b]
  410073:	ficomp WORD PTR [eax+0x2f]
  410076:	mov    ah,0xe9
  410078:	sti    
  410079:	out    0x2,eax
  41007b:	out    dx,al
  41007c:	into   
  41007d:	(bad)  
  41007e:	ficomp DWORD PTR [ecx]
  410080:	sar    BYTE PTR [edi+0x5e],1
  410083:	jle    0x4100c9
  410085:	inc    ecx
  410086:	arpl   si,bx
  410088:	push   edi
  410089:	sub    ebx,edi
  41008b:	add    BYTE PTR [ecx+eax*2+0x63],0xb6
  410090:	ins    BYTE PTR es:[edi],dx
  410091:	inc    eax
  410092:	and    bl,dh
  410094:	(bad)  
  410096:	cmc    
  410097:	cs iret 
  410099:	test   BYTE PTR [ebx-0x7d97d44e],ah
  41009f:	popf   
  4100a0:	inc    ebx
	...
  4100d1:	add    BYTE PTR [eax],al
  4100d3:	add    bl,cl
  4100d5:	push   ds
  4100d6:	inc    ebp
  4100d7:	inc    ecx
  4100d8:	arpl   WORD PTR [esi-0x4e],ax
  4100db:	jge    0x410129
  4100dd:	pop    ss
  4100de:	mov    BYTE PTR [ebx+eax*2],0x5
  4100e2:	test   al,0x44
  4100e4:	arpl   WORD PTR [esi],ax
  4100e6:	push   0x11
  4100e8:	ds inc esi
  4100ea:	test   al,0x3
  4100ec:	arpl   WORD PTR [ecx-0x2d],dx
  4100ef:	(bad)  
  4100f0:	lahf   
  4100f1:	int    0xe8
  4100f3:	add    esp,DWORD PTR [ebx+0x5]
  4100f6:	rol    bl,cl
  4100f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100f9:	xor    eax,0xcdb78099
  4100fe:	call   0x6345:0x27e26fce
  410105:	sub    BYTE PTR [eax-0x9239eb4],0x82
  41010c:	outs   dx,DWORD PTR ds:[esi]
  41010d:	int    0xe8
  41010f:	pop    eax
  410110:	popa   
  410111:	(bad)  
  410113:	into   
  410114:	push   edi
  410115:	int    0xbd
  410117:	pop    eax
  410118:	imul   ebx,ebp,0x3a
  41011b:	retf   
  41011c:	int    0xc7
  41011e:	popa   
  41011f:	cmp    bl,cl
  410121:	jnp    0x41011d
  410123:	into   
  410124:	aaa    
  410125:	int    0x9d
  410127:	xor    DWORD PTR [ebx-0x38],ebp
  41012a:	sbb    edi,esp
  41012c:	les    edi,FWORD PTR [edx]
  41012e:	mov    esi,cs
  410130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410131:	(bad)  
  410132:	sti    
  410133:	sti    
  410134:	test   BYTE PTR [ebx],bl
  410136:	jg     0x410106
	...
  410168:	add    BYTE PTR [eax],al
  41016a:	xchg   ebp,eax
  41016b:	(bad)  
  41016c:	sti    
  41016d:	iret   
  41016e:	lea    edx,[ecx-0x1f]
  410171:	(bad)  [eax]
  410173:	push   esi
  410174:	data16 into 
  410176:	stos   DWORD PTR es:[edi],eax
  410177:	ret    0x3e4
  41017a:	push   cs
  41017b:	jl     0x4101c1
  41017d:	and    BYTE PTR [eax+0x1036b6d4],0x7c
  410184:	fwait
  410185:	jmp    DWORD PTR ds:0x6303e904
  41018b:	add    eax,0xfdab3600
  410190:	out    0x6d,eax
  410192:	pushf  
  410193:	add    eax,0x6286a00
  410198:	ja     0x41018a
  41019a:	pop    ecx
  41019b:	lds    ebx,FWORD PTR [edx-0x4a]
  41019e:	jle    0x41015c
  4101a0:	shl    ecx,0x60
  4101a3:	mov    ah,0xe7
  4101a5:	jb     0x410202
  4101a7:	stc    
  4101a8:	mov    bl,ch
  4101aa:	cdq    
  4101ab:	scas   al,BYTE PTR es:[edi]
  4101ac:	push   cs
  4101ad:	imul   edi,DWORD PTR [edx-0x7616013a],0x51
  4101b4:	or     BYTE PTR [edx-0x54],dh
  4101b7:	std    
  4101b8:	jmp    0x1369:0x57a7d43
  4101bf:	pop    ss
  4101c0:	jb     0x4101a5
  4101c2:	loopne 0x41018e
  4101c4:	cmp    BYTE PTR [esi],bh
  4101c6:	fs test ebx,ebp
  4101c9:	stc    
  4101ca:	mov    ebx,0xb57feb
	...
  4101ff:	add    BYTE PTR [eax],ah
  410201:	push   ebx
  410202:	or     eax,0x7740b369
  410207:	icebp  
  410208:	loopne 0x4101e4
  41020a:	inc    eax
  41020b:	imul   ebp,DWORD PTR [ebx+0x4be0eafc],0x752e5ac5
  410215:	mov    esp,0x960f1c1
  41021a:	xor    bl,bh
  41021c:	cwde   
  41021d:	or     bh,BYTE PTR [ecx]
  41021f:	(bad)  
  410220:	sbb    DWORD PTR fs:[eax],esi
  410223:	or     BYTE PTR [esi+0x7adb410a],0xa
  41022a:	inc    esi
  41022b:	(bad)  
  41022c:	pop    esi
  41022d:	sbb    DWORD PTR [ecx-0x13],eax
  410230:	push   0xffffffdb
  410232:	or     BYTE PTR [edx],al
  410234:	lahf   
  410235:	sub    ebx,DWORD PTR [edi+0x0]
  410238:	add    al,0x8b
  41023a:	ror    BYTE PTR [eax],0x4a
  41023d:	ret    0x4de
  410240:	inc    eax
  410241:	mov    esi,0xbfb94ba8
  410246:	add    BYTE PTR [ebx],cl
  410248:	mov    eax,ds:0xff8ba22e
  41024d:	(bad)  
  410250:	lds    edi,FWORD PTR [esi]
  410252:	clc    
  410253:	dec    edi
  410255:	leave  
  410256:	lea    eax,[ebp+0x66]
  410259:	rol    BYTE PTR [ebx-0xc],0xa
  41025d:	add    al,BYTE PTR [eax]
  41025f:	add    BYTE PTR [ecx-0xa],bh
  410262:	or     BYTE PTR [ecx],ch
	...
  410294:	add    BYTE PTR [eax],al
  410296:	mov    ebx,0x3c740001
  41029b:	inc    esi
  41029c:	inc    esp
  41029d:	lock cmp ch,BYTE PTR [ebx]
  4102a0:	add    DWORD PTR [edx-0x6],ebp
  4102a3:	sub    eax,DWORD PTR [eax]
  4102a5:	push   0xfffffffa
  4102a7:	sub    eax,DWORD PTR [eax]
  4102a9:	lea    ecx,[edi-0x5000b147]
  4102af:	retf   0x4127
  4102b2:	mov    edx,0xd074becc
  4102b7:	test   BYTE PTR [ebx-0xc],bh
  4102ba:	retf   0x342d
  4102bd:	mov    edi,DWORD PTR [edi+0x5]
  4102c0:	mov    ecx,DWORD PTR [ebp-0x36]
  4102c3:	cld    
  4102c4:	pop    es
  4102c5:	ja     0x410267
  4102c7:	mov    ch,0x89
  4102c9:	jne    0x4102e9
  4102cb:	dec    ebp
  4102cc:	jl     0x4102d6
  4102ce:	adc    DWORD PTR [edi],eax
  4102d0:	lock jecxz 0x41034b
  4102d3:	mov    ah,0xa2
  4102d5:	mov    edi,DWORD PTR [edi]
  4102d7:	add    eax,0x491a75ff
  4102dc:	(bad)  
  4102dd:	dec    BYTE PTR [edi+0x63e3e6ad]
  4102e3:	fwait
  4102e4:	add    al,BYTE PTR [eax]
  4102e6:	stos   DWORD PTR es:[edi],eax
  4102e7:	fadd   QWORD PTR [edx]
  4102e9:	add    BYTE PTR [ebx+0x67],ah
  4102ec:	sub    ebx,DWORD PTR [esi+0x2a]
  4102ef:	icebp  
  4102f0:	cli    
  4102f1:	(bad)  
  4102f2:	jns    0x4102e2
  4102f4:	daa    
  4102f5:	pop    edi
  4102f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102f7:	in     eax,0xc0
  4102f9:	pop    es
	...
  41032a:	add    BYTE PTR [eax],al
  41032c:	arpl   WORD PTR [ecx-0x151f1489],ax
  410332:	ret    0x6367
  410335:	into   
  410336:	add    al,BYTE PTR [eax]
  410338:	cmp    edx,DWORD PTR [ecx+edx*2-0x1]
  41033c:	sbb    al,0x36
  41033e:	inc    esi
  41033f:	cld    
  410340:	mov    ebp,DWORD PTR [esi+0x6630022]
  410346:	xchg   ecx,eax
  410347:	jno    0x41034d
  410349:	mov    ah,0x78
  41034b:	inc    esp
  41034c:	sti    
  41034d:	push   esi
  41034e:	add    al,0x20
  410350:	arpl   WORD PTR [esi-0x248e5b26],bp
  410356:	retf   0x9e88
  410359:	ficomp DWORD PTR [ebx+0x0]
  41035c:	sub    DWORD PTR [esi+0xfbe802],0xffffffcb
  410363:	(bad)  
  410364:	(bad)  
  410366:	shl    DWORD PTR [edi+0x63],cl
  410369:	push   cs
  41036a:	add    al,0x0
  41036c:	retf   
  41036d:	aaa    
  41036e:	push   esi
  41036f:	push   DWORD PTR [ebp+esi*1-0x51c413bf]
  410376:	and    al,BYTE PTR [eax]
  410378:	arpl   WORD PTR [esi-0x74638db7],ax
  41037e:	jl     0x4103c4
  410380:	mov    edx,DWORD PTR [esi]
  410382:	add    al,0x20
  410384:	arpl   WORD PTR [esi+0x331170da],bp
  41038a:	retf   
  41038b:	mov    BYTE PTR [esi],ah
  41038d:	add    eax,0xcb4d
	...
  4103c2:	out    dx,eax
  4103c3:	adc    al,0xd1
  4103c5:	(bad)  [edx]
  4103c7:	inc    esi
  4103c8:	jmp    0x4101f397
  4103cd:	jnp    0x41036f
  4103cf:	add    eax,0x112086e9
  4103d4:	ds push ecx
  4103d6:	jae    0x410405
  4103d8:	xor    al,BYTE PTR [esi-0x5e]
  4103db:	add    eax,0xad3b512e
  4103e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103e1:	aas    
  4103e2:	arpl   WORD PTR ds:0xc458c06a,ax
  4103e8:	fwait
  4103e9:	repz mov esp,0x6344aa15
  4103ef:	les    edi,FWORD PTR [ebx-0x31]
  4103f2:	cld    
  4103f3:	sub    eax,0x886303a5
  4103f8:	sub    al,0xf8
  4103fa:	add    eax,0x4c5bd93a
  4103ff:	dec    eax
  410400:	sub    BYTE PTR [esp+esi*8],al
  410403:	cmp    ecx,ebx
  410405:	fist   DWORD PTR [esi-0x1ffc16b7]
  41040b:	enter  0xcadc,0x57
  41040f:	adc    eax,0x46204651
  410414:	jmp    0xc0f25be3
  410419:	inc    esi
  41041a:	pop    ds
  41041b:	add    eax,0x10a086e9
  410420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410421:	push   eax
  410422:	addr16 sub eax,0x4741
	...
  410458:	and    al,BYTE PTR ds:0xacbb5096
  41045e:	fdivr  DWORD PTR [edi]
  410460:	arpl   WORD PTR ds:0xc468bf6a,ax
  410466:	repz repz add al,0x29
  41046a:	add    BYTE PTR [edx],ch
  41046c:	push   ds
  41046d:	add    eax,0xab9cf4ff
  410472:	sbb    al,0xad
  410474:	pusha  
  410475:	add    eax,0x2d742583
  41047a:	add    BYTE PTR [esi+0x13],dl
  41047d:	sar    esi,0xd4
  410480:	push   esp
  410481:	les    esi,FWORD PTR [esi+ecx*1]
  410484:	jbe    0x4104ca
  410486:	add    BYTE PTR [ecx+0x11],dl
  410489:	aaa    
  41048a:	push   DWORD PTR [esi]
  41048c:	(bad)  
  41048d:	dec    ecx
  41048e:	loopne 0x410453
  410490:	pusha  
  410491:	ret    0x2174
  410494:	sub    DWORD PTR [edx],edi
  410496:	or     al,0x1e
  410498:	push   ebx
  410499:	jmp    0x95c0:0xad60a828
  4104a0:	sub    esp,eax
  4104a2:	mov    BYTE PTR [esp+edi*4-0x6301ffd4],ch
  4104a9:	mov    ecx,0xc40c7cfe
  4104ae:	xor    al,0xc6
  4104b0:	pop    edi
  4104b1:	inc    esp
  4104b2:	add    cl,dl
  4104b4:	(bad)  
  4104b5:	ss (bad) 
  4104b7:	fisubr WORD PTR [eax+0x49]
  4104ba:	fadd   DWORD PTR [ebx+0x0]
	...
  4104ed:	add    BYTE PTR [edi-0x3e],bl
  4104f0:	je     0x4104cb
  4104f2:	stos   BYTE PTR es:[edi],al
  4104f3:	cmp    eax,ebp
  4104f5:	(bad)  
  4104f6:	fs jmp 0x3d94:0xad672828
  4104fe:	call   0x2c:0xf32488c3
  410505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410506:	and    al,0xb1
  410508:	(bad)  
  410509:	adc    al,0x8f
  41050b:	ret    
  41050c:	xor    al,0xce
  41050e:	dec    ecx
  41050f:	inc    esp
  410510:	add    BYTE PTR [ecx+0xff392a],al
  410516:	fnstsw WORD PTR [esi]
  410518:	inc    esp
  410519:	sar    bh,1
  41051b:	add    eax,eax
  41051d:	push   eax
  41051e:	or     eax,0x77ffe452
  410523:	mov    edx,0x1e6535fd
  410528:	inc    ecx
  410529:	add    BYTE PTR [edx],dl
  41052b:	and    al,0x74
  41052d:	dec    DWORD PTR ds:0xc9cc443e
  410533:	dec    edx
  410534:	loopne 0x410536
  410536:	dec    ebp
  410537:	inc    edx
  410538:	mov    dh,0x0
  41053a:	cmp    al,BYTE PTR [esi]
  41053c:	cmp    DWORD PTR [ebp+0x66],0x9
  410540:	je     0x410f05
  410546:	leave  
  410547:	dec    edx
  410548:	rol    BYTE PTR [eax],1
  41054a:	cmp    eax,0x3a00a242
  41054f:	push   es
  410550:	lea    eax,[ebp+0x0]
	...
  410583:	add    BYTE PTR [esi-0x7],al
  410586:	(bad)  
  410587:	jne    0x4105ff
  410589:	loope  0x4105d9
  41058b:	std    
  41058c:	or     eax,0xfdc009cd
  410591:	inc    ecx
  410592:	mov    es,WORD PTR [eax]
  410594:	or     al,BYTE PTR [esi]
  410596:	cmp    DWORD PTR [ebp-0x3a],0x5
  41059a:	je     0x410c27
  4105a0:	jg     0x4105a5
  4105a2:	enter  0xad50,0x52
  4105a6:	shr    al,1
  4105a8:	fmul   st,st(2)
  4105aa:	std    
  4105ab:	call   ecx
  4105ad:	lds    esi,FWORD PTR [edx+0x75]
  4105b0:	cmp    DWORD PTR [ebx-0x38],ecx
  4105b3:	add    BYTE PTR [esi+0x5c],dh
  4105b6:	push   0xbcdcca10
  4105bb:	call   DWORD PTR [edi-0x3f]
  4105be:	out    0x76,al
  4105c0:	arpl   WORD PTR [ecx],cx
  4105c2:	leave  
  4105c3:	(bad)  
  4105c4:	pushf  
  4105c5:	sbb    ah,ah
  4105c7:	dec    BYTE PTR [esi]
  4105c9:	mov    ah,0xda
  4105cb:	int3   
  4105cc:	inc    BYTE PTR [edx-0x38]
  4105cf:	dec    BYTE PTR [esi]
  4105d1:	cwde   
  4105d2:	(bad)  
  4105d3:	je     0x410640
  4105d5:	test   ah,al
  4105d7:	ins    BYTE PTR es:[edi],dx
  4105d8:	je     0x410604
  4105da:	enter  0x8b74,0x62
  4105de:	dec    esi
  4105df:	or     BYTE PTR [ebx-0x5e],bh
  4105e2:	push   ebp
  4105e3:	call   FWORD PTR [eax+edx*2+0x4e]
  4105e7:	les    eax,FWORD PTR [eax]
	...
  410619:	add    BYTE PTR [edx+eax*4-0x52],dl
  41061d:	(bad)  
  41061e:	(bad)  
  41061f:	mov    dh,0xda
  410621:	jl     0x4105d9
  410623:	test   edi,0xc7e6b6fe
  410629:	je     0x41063e
  41062b:	call   0x907c0e7d
  410630:	push   ebp
  410631:	jmp    DWORD PTR [esp+ebp*1]
  410634:	inc    esi
  410635:	int3   
  410636:	arpl   WORD PTR [edx-0x11697d13],bx
  41063c:	(bad)  
  41063d:	je     0x41069b
  41063f:	xor    edi,DWORD PTR [esi]
  410641:	int3   
  410642:	add    al,0x7f
  410644:	(bad)  
  410645:	je     0x4106b2
  410647:	push   es
  410648:	and    ebp,DWORD PTR [ebp-0xc]
  41064b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41064c:	fimul  DWORD PTR [ecx]
  41064e:	jns    0x4105fe
  410650:	lds    esi,FWORD PTR [ebx+ebx*2-0x3a]
  410654:	out    dx,eax
  410655:	ins    BYTE PTR es:[edi],dx
  410656:	fmul   st(7),st
  410658:	(bad)  
  410659:	je     0x410632
  41065b:	(bad)  
  41065c:	sub    BYTE PTR [edi-0x34],0x7f
  410660:	(bad)  
  410661:	je     0x41062e
  410663:	(bad)  
  410664:	dec    edx
  410665:	jo     0x410623
  410667:	outs   dx,DWORD PTR ds:[esi]
  410668:	(bad)  
  410669:	je     0x41061a
  41066b:	add    eax,0xc0335391
  410670:	popf   
  410671:	(bad)  
  410672:	das    
  410673:	mov    ch,0x80
  410675:	pop    ebx
  410676:	adc    eax,eax
  410678:	(bad)  
  410679:	(bad)  
  41067a:	cmpxchg DWORD PTR [eax+0x63],edx
	...
  4106ad:	add    BYTE PTR [eax],al
  4106af:	add    BYTE PTR [ebx],dl
  4106b1:	sar    BYTE PTR [ebp-0x39],0xf
  4106b5:	lods   eax,DWORD PTR ds:[esi]
  4106b6:	sub    BYTE PTR [ebx],0xf3
  4106b9:	mov    edi,0xa8efc76d
  4106be:	push   eax
  4106bf:	xor    esi,ebx
  4106c1:	mov    edi,0xa4efc75d
  4106c6:	inc    eax
  4106c7:	cmp    edx,ebx
  4106c9:	ror    BYTE PTR [ebp-0x39],0xcf
  4106cd:	loope  0x41071f
  4106cf:	inc    ebx
  4106d0:	rol    eax,cl
  4106d2:	cmp    eax,0x40ddcfc7
  4106d7:	or     esi,DWORD PTR [ebx-0x5038d240]
  4106dd:	fst    DWORD PTR [eax]
  4106df:	adc    esi,DWORD PTR [ebx-0x5038e240]
  4106e5:	aad    0x0
  4106e7:	sbb    edx,DWORD PTR [ebx-0x7038f240]
  4106ed:	rcl    DWORD PTR [eax],1
  4106ef:	and    edx,DWORD PTR [ebx+0x22bcfdc0]
  4106f5:	adc    ecx,ebp
  4106f7:	xor    al,ch
  4106f9:	mov    al,0x67
  4106fb:	sar    ah,0xb7
  4106fe:	in     eax,0xc6
  410700:	fisttp WORD PTR [ecx-0x23]
  410703:	xor    esp,esp
  410705:	cmp    ebp,esp
  410707:	(bad)  
  410708:	xchg   edi,eax
  410709:	call   0xada44c0d
  41070e:	dec    esp
  41070f:	inc    edx
  410710:	arpl   WORD PTR ds:0xc3f2,ax
	...
  410746:	push   ebp
  410747:	mov    bh,bh
  410749:	fsub   QWORD PTR [edi+0x5]
  41074c:	add    BYTE PTR [esi-0x170042dd],ah
  410752:	pusha  
  410753:	add    eax,0xbe9324c7
  410758:	push   es
  410759:	jmp    0x34132be
  41075e:	pop    edi
  41075f:	sub    eax,DWORD PTR [eax]
  410761:	adc    esp,DWORD PTR [edi-0x6e]
  410764:	inc    esp
  410765:	jne    0x4107b7
  410767:	xchg   edx,eax
  410768:	test   BYTE PTR [ecx-0x53],bh
  41076b:	mov    esi,0x389c19fe
  410770:	clc    
  410771:	adc    ax,cx
  410774:	out    0x17,eax
  410776:	and    DWORD PTR ds:0x3320e200,eax
  41077c:	add    eax,0xfebf0540
  410781:	jmp    0xa868a52e
  410786:	pusha  
  410787:	mov    esi,0x5e18e574
  41078c:	jae    0x4107bc
  41078e:	sbb    eax,0xab398b4f
  410793:	mov    edi,ebp
  410795:	push   ss
  410796:	sbb    eax,0x38bb4fc0
  41079b:	dec    esi
  41079c:	jae    0x4107ac
  41079e:	sbb    eax,0x1d11848e
  4107a3:	sar    dh,0x11
  4107a6:	jge    0x4107d7
  4107a8:	push   esi
	...
  4107da:	add    BYTE PTR [eax],al
  4107dc:	je     0x410827
  4107de:	lock cdq 
  4107e0:	cwde   
  4107e1:	loope  0x410824
  4107e3:	sub    BYTE PTR [edi-0x42],ah
  4107e6:	mov    ah,0xd1
  4107e8:	push   ss
  4107e9:	sar    dh,0xd6
  4107ec:	ins    BYTE PTR es:[edi],dx
  4107ed:	out    0x28,al
  4107ef:	sub    BYTE PTR [edi-0x53],bl
  4107f2:	pushf  
  4107f3:	add    BYTE PTR [eax+0x3f89fdc8],cl
  4107f9:	(bad)  
  4107fb:	push   ebp
  4107fd:	test   BYTE PTR [ebx-0x2371214],bh
  410803:	add    BYTE PTR [esi-0x15],cl
  410806:	cmp    BYTE PTR [ebp-0x36],0x5
  41080a:	jne    0x410855
  41080c:	add    DWORD PTR [esi],edi
  41080e:	jmp    0x410807
  410810:	in     eax,0xc8
  410812:	std    
  410813:	xor    BYTE PTR ds:0x5f7eb3e,dl
  410819:	enter  0xbd7f,0xe6
  41081d:	sar    ch,1
  41081f:	jmp    edx
  410821:	add    al,0x0
  410823:	add    BYTE PTR [esp+edi*4-0x2fe97a3b],cl
  41082a:	std    
  41082b:	jmp    DWORD PTR [edx-0x5efffffc]
  410831:	stos   DWORD PTR es:[edi],eax
  410832:	std    
  410833:	lea    esi,[esi-0x7a000230]
  410839:	mov    gs,edx
  41083b:	div    DWORD PTR [ebp-0x38]
  41083e:	std    
  41083f:	mov    ch,0x0
	...
  410871:	add    BYTE PTR [edx-0x7a000230],ah
  410877:	dec    esi
  410878:	or     al,ch
  41087a:	add    al,dh
  41087c:	std    
  41087d:	dec    DWORD PTR [ecx+0x65f7ea86]
  410883:	enter  0x74fe,0x47
  410887:	enter  0xecb3,0xd
  41088b:	leave  
  41088c:	std    
  41088d:	call   0x4061a8
  410892:	add    eax,0x5f7ea8f
  410897:	leave  
  410898:	out    0x11,al
  41089a:	xchg   ebp,eax
  41089b:	enter  0xfffd,0x63
  41089f:	mov    eax,ds:0xced4f6da
  4108a4:	ret    
  4108a5:	je     0x410902
  4108a7:	aam    0xde
  4108a9:	std    
  4108aa:	les    edi,FWORD PTR [esi-0x3d]
  4108ad:	mov    ah,0xcb
  4108af:	jle    0x410874
  4108b1:	dec    bl
  4108b3:	jae    0x410909
  4108b5:	jmp    FWORD PTR [esi+eiz*2+0x62baf83d]
  4108bc:	(bad)  
  4108bd:	(bad)  
  4108be:	pushf  
  4108bf:	xchg   esi,eax
  4108c0:	dec    ebp
  4108c1:	cld    
  4108c2:	mov    ebp,ecx
  4108c4:	inc    edx
  4108c5:	add    BYTE PTR [ebx+0x75],ah
  4108c8:	rol    BYTE PTR [edi],0x63
  4108cb:	sbb    DWORD PTR [ecx-0x15],edi
  4108ce:	loopne 0x41093f
  4108d0:	(bad)  
  4108d1:	imul   esp,DWORD PTR [ebx+0x2],0xff14
	...
  410908:	div    BYTE PTR [ebx+0x5ef709da]
  41090e:	les    ecx,FWORD PTR [eax-0x39a4ad5a]
  410914:	mov    eax,ds:0xd6ff026d
  410919:	mov    dh,0xda
  41091b:	mov    ds:0xfec3fc45,al
  410920:	mov    dh,0xf2
  410922:	ret    
  410923:	je     0x410990
  410925:	inc    esi
  410926:	push   cs
  410927:	ins    BYTE PTR es:[edi],dx
  410928:	sub    al,0xe4
  41092a:	mov    ecx,0x2dae5fc1
  41092f:	mov    ecx,DWORD PTR [edi]
  410931:	xor    BYTE PTR [edi+0x5873adfb],bh
  410937:	add    BYTE PTR [ecx+0x7d],bh
  41093a:	ret    
  41093b:	je     0x410998
  41093d:	push   ss
  41093e:	lods   al,BYTE PTR ds:[esi]
  41093f:	push   0xfffffffc
  410941:	mov    bl,0x78
  410943:	inc    esp
  410944:	mul    DWORD PTR [edi]
  410946:	push   cs
  410947:	inc    eax
  410948:	cmp    eax,DWORD PTR ds:0xfad80428
  41094e:	and    al,0xec
  410950:	and    eax,DWORD PTR ds:0x31630369
  410956:	and    al,0x2c
  410958:	push   esp
  410959:	dec    eax
  41095a:	sub    BYTE PTR [esp+ebp*1],al
  41095d:	lods   eax,DWORD PTR ds:[esi]
  41095e:	fadd   QWORD PTR [ebx+eiz*2+0x5]
  410962:	loop   0x410927
  410964:	xor    BYTE PTR [edi+edx*1],bl
  410967:	lods   al,BYTE PTR ds:[esi]
  410968:	ins    DWORD PTR es:[edi],dx
  410969:	cmp    eax,0xc3a6
	...
  41099e:	adc    al,0x2d
  4109a0:	jmp    0xbc95a8
  4109a5:	test   DWORD PTR [ecx],esp
  4109a7:	inc    esi
  4109a8:	jmp    0xf1739600
  4109ad:	stos   DWORD PTR es:[edi],eax
  4109ae:	push   ebx
  4109af:	cwde   
  4109b0:	jge    0x410975
  4109b2:	test   BYTE PTR [edx+0x7],bl
  4109b5:	ret    
  4109b6:	jne    0x410968
  4109b8:	out    0x49,eax
  4109ba:	jecxz  0x4109b7
  4109bc:	call   0x5d8472f9
  4109c1:	neg    DWORD PTR [esi+edi*2]
  4109c4:	push   ebp
  4109c5:	ret    
  4109c6:	push   ebp
  4109c7:	mov    esp,0x494725a
  4109cc:	mov    esp,0x3d32457e
  4109d1:	ret    
  4109d2:	mov    bh,0xd
  4109d4:	inc    ecx
  4109d5:	jge    0x4109a0
  4109d7:	mov    esp,0xce8d632d
  4109dc:	sub    cl,BYTE PTR [eax]
  4109de:	arpl   WORD PTR [edx+0x72],dx
  4109e1:	mov    al,0xe1
  4109e3:	rcl    BYTE PTR [eax],0x57
  4109e6:	sbb    al,0x42
  4109e8:	adc    DWORD PTR [ebx+eiz*2],eax
  4109eb:	add    eax,0xb99fcae9
  4109f0:	call   0x466cf8
  4109f5:	bound  ebp,QWORD PTR [edx+0x60b18309]
  4109fb:	xor    cl,BYTE PTR [ecx]
  4109fd:	adc    bl,BYTE PTR [edi]
  4109ff:	out    dx,eax
  410a00:	rol    DWORD PTR [edx+0x0],1
	...
  410a33:	add    BYTE PTR [esi+0x55e90bc5],ch
  410a39:	add    eax,0xb060e900
  410a3e:	pusha  
  410a3f:	push   0x23
  410a41:	adc    eax,0x906a3500
  410a46:	inc    esp
  410a47:	(bad)  
  410a49:	adc    edi,edi
  410a4b:	xor    al,0x53
  410a4d:	mov    esp,0xcaf8f174
  410a52:	addr16 sahf 
  410a54:	mov    eax,ds:0x5be0fa86
  410a59:	add    cl,BYTE PTR [ecx]
  410a5b:	and    al,0xcf
  410a5d:	scas   al,BYTE PTR es:[edi]
  410a5e:	inc    ebp
  410a5f:	sbb    DWORD PTR [edx+0x3a],edi
  410a62:	(bad)  
  410a63:	jle    0x410a06
  410a65:	or     al,0x45
  410a67:	jno    0x410a81
  410a69:	outs   dx,BYTE PTR ds:[esi]
  410a6a:	jg     0x410a55
  410a6c:	pusha  
  410a6d:	add    eax,0xf6b5eb75
  410a72:	and    BYTE PTR [edx+0x68],0x30
  410a76:	adc    eax,0x8abdab62
  410a7b:	mov    ah,0xc
  410a7d:	or     al,0xa4
  410a7f:	sub    ebx,DWORD PTR [eax-0x3c]
  410a82:	fcomip st,st(1)
  410a84:	out    dx,eax
  410a85:	inc    ecx
  410a86:	clc    
  410a87:	pusha  
  410a88:	fwait
  410a89:	mov    ecx,0x41dddaea
  410a8e:	clc    
  410a8f:	jb     0x410a1c
  410a91:	mov    ecx,0x426450e
  410a96:	ror    DWORD PTR [ecx],0x0
	...
  410ac9:	add    BYTE PTR [ecx-0x74],ch
  410acc:	inc    esp
  410acd:	adc    edi,ebx
  410acf:	push   ecx
  410ad0:	cld    
  410ad1:	add    BYTE PTR [ecx+0x7409f983],bh
  410ad7:	cwde   
  410ad8:	mov    DWORD PTR [ebp-0x2],eax
  410adb:	xor    DWORD PTR [esi],0x0
  410ade:	ja     0x410aec
  410ae0:	sub    eax,eax
  410ae2:	push   ecx
  410ae3:	shr    ecx,cl
  410ae5:	push   es
  410ae6:	push   ecx
  410ae7:	inc    edx
  410ae8:	clc    
  410ae9:	mov    edx,DWORD PTR [edi-0x736a63b]
  410aef:	adc    eax,0x75515500
  410af4:	add    esp,0x667326f6
  410afa:	mov    eax,DWORD PTR [ecx]
  410afc:	cmp    DWORD PTR [ebp-0x72],eax
  410aff:	cld    
  410b00:	add    eax,0xc0cefa2b
  410b05:	adc    BYTE PTR [edx+0x647433c5],cl
  410b0b:	inc    esi
  410b0c:	add    al,ch
  410b0e:	pop    ebp
  410b0f:	jmp    0x8df8:0x4213fffe
  410b16:	inc    edi
  410b17:	lds    ecx,FWORD PTR [esi-0x18]
  410b1a:	push   ds
  410b1b:	in     eax,dx
  410b1c:	(bad)  
  410b1d:	(bad)  
  410b1e:	std    
  410b1f:	icebp  
  410b20:	adc    edi,edi
  410b22:	xchg   DWORD PTR [edx],ecx
  410b24:	push   DWORD PTR [ebp-0x3e]
  410b27:	les    esi,FWORD PTR [ebx+0x8]
  410b2a:	mov    ds:0xff662e,al
	...
  410b5f:	add    BYTE PTR [ebp-0x49f03ff8],bl
  410b65:	das    
  410b66:	(bad)  
  410b67:	dec    DWORD PTR [edx-0x3b]
  410b6a:	jae    0x410b78
  410b6c:	ins    DWORD PTR es:[edi],dx
  410b6d:	repnz idiv edi
  410b70:	idiv   DWORD PTR [ecx-0x1a]
  410b73:	stc    
  410b74:	xlat   BYTE PTR ds:[ebx]
  410b75:	(bad)  
  410b76:	std    
  410b77:	mov    eax,edi
  410b79:	or     DWORD PTR [ebx],edi
  410b7b:	inc    ebp
  410b7c:	arpl   WORD PTR [edi+ecx*1+0x2abc783],di
  410b83:	add    BYTE PTR [ecx+edi*1],al
  410b86:	pop    ss
  410b87:	push   DWORD PTR [esi-0x4c]
  410b8a:	stos   BYTE PTR es:[edi],al
  410b8b:	mov    eax,ds:0x88bfb37c
  410b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b91:	mov    al,0xab
  410b93:	jae    0x410b79
  410b95:	lock mov bh,0x2a
  410b98:	mov    cl,0x36
  410b9a:	inc    esi
  410b9b:	hlt    
  410b9c:	int3   
  410b9d:	or     BYTE PTR [eax],bh
  410b9f:	data16 and ch,BYTE PTR [ebx+ecx*1-0x5451b02e]
  410ba7:	addr16 dec ecx
  410ba9:	lods   al,BYTE PTR ds:[esi]
  410baa:	push   edx
  410bab:	jmp    FWORD PTR [esi]
  410bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bae:	stos   BYTE PTR es:[edi],al
  410baf:	mov    BYTE PTR [edi+0x6b],al
  410bb2:	mov    edi,0xbfb82efe
  410bb7:	je     0x410c24
  410bb9:	xchg   esp,eax
  410bba:	xor    esp,DWORD PTR [edi-0x6c]
  410bbd:	xchg   edx,eax
  410bbe:	mov    edx,DWORD PTR [edi+esi*2+0x2f]
  410bc2:	std    
  410bc3:	inc    DWORD PTR [eax]
	...
  410bf5:	add    BYTE PTR [edi],cl
  410bf7:	scas   al,BYTE PTR es:[edi]
  410bf8:	stos   DWORD PTR es:[edi],eax
  410bf9:	inc    edi
  410bfa:	jmp    0x28b8:0x668ab7e0
  410c01:	inc    ecx
  410c02:	arpl   WORD PTR [edi],bp
  410c04:	stos   BYTE PTR es:[edi],al
  410c05:	add    edx,DWORD PTR [edx]
  410c07:	and    esi,DWORD PTR [esi]
  410c09:	adc    al,0xb2
  410c0b:	push   edi
  410c0c:	ss clc 
  410c0e:	push   esp
  410c0f:	fimul  DWORD PTR [edx]
  410c11:	call   0xff00cb9a
  410c16:	stos   BYTE PTR es:[edi],al
  410c17:	mov    bl,0xc2
  410c19:	je     0x410c7c
  410c1b:	push   ebx
  410c1c:	out    0x50,al
  410c1e:	xor    al,0x7a
  410c20:	mov    edx,0xaaeab6fe
  410c25:	jns    0x410be5
  410c27:	add    eax,0x331dc026
  410c2c:	sbb    eax,0x162190ab
  410c31:	ror    BYTE PTR [edi+0x5],0xe9
  410c35:	inc    ebx
  410c36:	pop    ebp
  410c37:	das    
  410c38:	jmp    0x410be6
  410c3a:	test   BYTE PTR fs:[ebx-0x49],bh
  410c3e:	hlt    
  410c3f:	xor    DWORD PTR [edi-0x54],ebp
  410c42:	push   esp
  410c43:	mov    eax,0x3fcbf73
  410c48:	dec    ebp
  410c49:	mov    edi,0xc023c0dd
  410c4e:	aam    0xb8
  410c50:	call   0xf583e458
  410c55:	mov    ah,0xb8
  410c58:	call   0x410c60
	...
  410c89:	add    BYTE PTR [eax],al
  410c8b:	add    BYTE PTR [ebx-0x48],ah
  410c8e:	xor    edi,DWORD PTR [esp+edi*4-0x5240bac6]
  410c95:	mov    WORD PTR [ebx],fs
  410c97:	rcr    BYTE PTR [ebx+0x3603f8c3],0x8c
  410c9e:	mov    WORD PTR [edi-0x18],ss
  410ca1:	inc    edx
  410ca2:	in     eax,0x82
  410ca4:	int3   
  410ca5:	or     eax,0x2907ac39
  410caa:	xchg   BYTE PTR [edi+0x397dbde9],bh
  410cb0:	addr16 mov ch,ch
  410cb3:	mov    esi,0x475e14f7
  410cb8:	pop    edi
  410cb9:	test   bl,ah
  410cbb:	packsswb mm6,QWORD PTR [ecx]
  410cbe:	out    dx,al
  410cbf:	mov    esi,0x476409cf
  410cc4:	pop    ebx
  410cc5:	push   ebp
  410cc6:	dec    esi
  410cc7:	cmp    DWORD PTR [ebx-0x53],ebx
  410cca:	pop    edx
  410ccb:	xor    BYTE PTR [eax+edi*4],bh
  410cce:	jno    0x410d19
  410cd0:	dec    edi
  410cd1:	mov    ?,edi
  410cd3:	lock test al,0x5
  410cd6:	add    cl,ch
  410cd8:	pusha  
  410cd9:	pop    eax
  410cda:	leave  
  410cdb:	sub    esi,DWORD PTR [edi+0x5]
  410cde:	push   ebp
  410cdf:	jb     0x410cb4
  410ce1:	add    bl,0x1d
  410ce4:	fcom   DWORD PTR [eax+0x14]
  410ce7:	es popa 
  410ce9:	add    eax,0xec60e900
  410cee:	shl    esi,1
	...
  410d20:	add    BYTE PTR [eax],al
  410d22:	stos   DWORD PTR es:[edi],eax
  410d23:	or     DWORD PTR [ecx],eax
  410d25:	jmp    0x5550128a
  410d2a:	and    DWORD PTR [ebx+0x3260f57c],eax
  410d30:	adc    ebx,esi
  410d32:	fwait
  410d33:	adc    DWORD PTR [edx-0x16],ebp
  410d36:	jp     0x410d3d
  410d38:	push   0xffffffe9
  410d3a:	clc    
  410d3b:	xchg   esi,edi
  410d3d:	(bad)  
  410d3e:	std    
  410d3f:	lods   al,BYTE PTR ds:[esi]
  410d40:	sub    bl,ch
  410d42:	pusha  
  410d43:	add    eax,0x6533483
  410d48:	jne    0x410d54
  410d4a:	in     al,0x30
  410d4c:	adc    BYTE PTR [esi-0x5317f2a5],ah
  410d52:	ds mov eax,0xb91b60fe
  410d58:	(bad)  
  410d59:	adc    al,0x6b
  410d5b:	sub    eax,DWORD PTR [eax]
  410d5d:	adc    ebp,DWORD PTR [ebx-0x76]
  410d60:	inc    esp
  410d61:	jge    0x410d73
  410d63:	lods   eax,DWORD PTR ds:[esi]
  410d64:	data16 jbe 0x410d14
  410d67:	mov    dh,0xe8
  410d69:	jmp    0x6a4112d0
  410d6e:	mov    ds:0x41d40209,eax
  410d73:	mov    eax,0x320df974
  410d78:	or     BYTE PTR [ecx-0x73],al
  410d7b:	pop    ds
  410d7c:	inc    DWORD PTR [eax]
  410d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d7f:	mov    DWORD PTR [ebx-0x4],eax
  410d82:	jne    0x410d81
  410d84:	adc    ebp,DWORD PTR [edx+0x0]
	...
  410db7:	add    BYTE PTR [edx],bh
  410db9:	in     eax,dx
  410dba:	add    ecx,DWORD PTR [ebp-0x17b18901]
  410dc0:	add    al,0x78
  410dc2:	std    
  410dc3:	push   DWORD PTR [ebx-0x31]
  410dc6:	(bad)  
  410dc7:	(bad)  
  410dc8:	cli    
  410dc9:	cmp    DWORD PTR [ebx+0xc],0xfffffff9
  410dcd:	std    
  410dce:	pop    ds
  410dcf:	(bad)  
  410dd0:	jg     0x410de4
  410dd2:	push   0x3
  410dd4:	cmc    
  410dd5:	out    dx,al
  410dd6:	pop    es
  410dd7:	call   0x3fee7a
  410ddc:	cmc    
  410ddd:	out    dx,al
  410dde:	adc    ebp,DWORD PTR [edx-0x37]
  410de1:	in     al,dx
  410de2:	jmp    FWORD PTR [ecx-0x36]
  410de5:	push   0x16
  410de7:	push   DWORD PTR [ebp-0x444e1888]
  410ded:	add    al,BYTE PTR [eax]
  410def:	and    DWORD PTR [edi],0x15
  410df2:	add    al,0x75
  410df4:	imul   edi,DWORD PTR [eax+0x73],0x7eef510
  410dfb:	call   0x3fecf6
  410e00:	adc    edi,DWORD PTR [esi]
  410e02:	cld    
  410e03:	jmp    FWORD PTR [edi+0x1d]
  410e06:	push   0x0
  410e08:	pusha  
  410e09:	or     eax,0x51d6458d
  410e0e:	call   0xfdb9f302
  410e13:	jmp    0x41100a
  410e18:	stc    
  410e19:	cmc    
  410e1a:	or     eax,DWORD PTR ds:0x0
	...
  410e4c:	add    BYTE PTR [eax],al
  410e4e:	outs   dx,DWORD PTR ds:[esi]
  410e4f:	adc    edi,edi
  410e51:	jne    0x410ead
  410e53:	in     al,dx
  410e54:	add    eax,0xe80a2fff
  410e59:	push   ebp
  410e5a:	arpl   si,ax
  410e5c:	mov    ebx,0x2ad0bfe
  410e61:	add    BYTE PTR [ebx+0x55],ah
  410e64:	sub    DWORD PTR [ecx],eax
  410e66:	arpl   WORD PTR [edi+edi*2+0x35a65f7c],bp
  410e6d:	and    BYTE PTR [ecx+esi*2],ah
  410e70:	adc    ch,BYTE PTR [edx+0x6b]
  410e73:	fbstp  TBYTE PTR [esi]
  410e75:	or     BYTE PTR [ebx],cl
  410e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e78:	and    al,0xff
  410e7a:	or     al,0xf
  410e7c:	aaa    
  410e7d:	adc    al,0x79
  410e7f:	stos   DWORD PTR es:[edi],eax
  410e80:	sub    BYTE PTR [eax],al
  410e82:	mov    DWORD PTR [edx+ebp*4-0x44490a55],ebp
  410e89:	call   0x43bc34
  410e8e:	loopne 0x410eb8
  410e90:	sysret 
  410e92:	push   esi
  410e93:	or     al,0xbd
  410e95:	je     0x410f0a
  410e97:	push   edx
  410e98:	or     al,0xff
  410e9a:	push   esi
  410e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e9c:	stos   BYTE PTR es:[edi],al
  410e9d:	adc    DWORD PTR ds:0x36febbc7,edi
  410ea3:	fsubr  DWORD PTR [eax]
  410ea5:	add    ecx,DWORD PTR [ecx-0x54]
  410ea8:	sub    BYTE PTR [eax],al
  410eaa:	mov    ebx,0xa4febd25
  410eaf:	les    ebx,FWORD PTR [ebx]
  410eb1:	add    DWORD PTR [eax],eax
	...
  410ee3:	add    BYTE PTR [ebx-0x54],ah
  410ee6:	jg     0x410f64
  410ee8:	addr16 mov ah,0x35
  410eeb:	sbb    al,0xa4
  410eed:	call   0xabc60eb1
  410ef2:	add    bh,bh
  410ef4:	not    bh
  410ef6:	sub    BYTE PTR [eax],al
  410ef8:	or     DWORD PTR [eax+0x1b6f448d],esp
  410efe:	lods   al,BYTE PTR ds:[esi]
  410eff:	arpl   WORD PTR [ebp+0x26],sp
  410f02:	mov    esp,0xe9065ee8
  410f07:	add    esp,DWORD PTR [ebx-0x78]
  410f0a:	fisttp DWORD PTR [edi]
  410f0c:	pop    edx
  410f0d:	cmp    dh,ch
  410f0f:	les    ebx,FWORD PTR [edi+0x6303e7b1]
  410f15:	add    eax,0x1f4f3646
  410f1a:	jmp    0xabc37648
  410f1f:	mov    edi,0xbdaa9d94
  410f24:	sbb    eax,0x14d80fb5
  410f29:	mov    ch,0xe8
  410f2b:	or     BYTE PTR [edi+0x5936e301],0x6d
  410f32:	call   0x1046723a
  410f37:	enter  0xb4f4,0xe8
  410f3b:	sub    BYTE PTR [edi+0x1],0xe2
  410f3f:	ss pop ecx
  410f41:	ins    DWORD PTR es:[edi],dx
  410f42:	call   0xd046724a
  410f47:	jg     0x410f49
	...
  410f79:	add    ah,dl
  410f7b:	mov    ah,0xe8
  410f7d:	xchg   BYTE PTR [edi+0x1],cl
  410f80:	in     eax,0x35
  410f82:	add    BYTE PTR cs:[ebx+0x43861230],bh
  410f89:	or     BYTE PTR [ebx+0x5],ah
  410f8c:	sub    DWORD PTR [edx],eax
  410f8e:	xor    BYTE PTR ds:0x845731b6,bh
  410f94:	and    esi,DWORD PTR [eax+0x89d22e1]
  410f9a:	mov    dl,0x22
  410f9c:	xchg   ebp,eax
  410f9d:	mov    ebx,0x8680b917
  410fa2:	cli    
  410fa3:	mov    bl,0x8d
  410fa5:	lea    esp,[edi]
  410fa7:	lods   eax,DWORD PTR ds:[esi]
  410fa8:	test   DWORD PTR [ecx],esi
  410faa:	push   ebx
  410fab:	mov    ah,0xf3
  410fad:	scas   eax,DWORD PTR es:[edi]
  410fae:	ins    DWORD PTR es:[edi],dx
  410faf:	cmp    al,BYTE PTR [eax]
  410fb1:	jno    0x410f5b
  410fb3:	cmp    DWORD PTR [eax],ecx
  410fb5:	adc    edx,0x1866ff28
  410fbb:	cmp    DWORD PTR [ebx+edx*8],edx
  410fbe:	data16 mov ah,0x74
  410fc1:	pop    ebp
  410fc2:	or     BYTE PTR [ecx],bh
  410fc4:	clc    
  410fc5:	inc    ecx
  410fc6:	push   ss
  410fc7:	mov    cl,0xfe
  410fc9:	inc    esi
  410fca:	clc    
  410fcb:	cmp    al,bh
  410fcd:	push   ecx
  410fce:	sub    BYTE PTR [esi],bl
  410fd0:	push   DWORD PTR [esi]
  410fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fd3:	add    eax,0xa060e900
  410fd8:	pop    edi
  410fd9:	push   0x5a
  410fdb:	add    DWORD PTR ds:0x9b,ecx
	...
  41100d:	add    BYTE PTR [eax],al
  41100f:	add    BYTE PTR [ebx-0x50632e00],dh
  411015:	xchg   BYTE PTR [ebp+ebx*8+0x60],bh
  411019:	add    eax,0x3d2def40
  41101e:	push   DWORD PTR [esp+eiz*2-0x7c]
  411022:	inc    esp
  411023:	std    
  411024:	frstor [eax]
  411026:	hlt    
  411027:	fdiv   QWORD PTR [edi-0x6c190be0]
  41102d:	mov    ecx,0xb47d06e7
  411032:	(bad)  
  411033:	pusha  
  411034:	and    ebp,DWORD PTR [ebp-0x4ba8ab02]
  41103a:	je     0x410ff9
  41103c:	stc    
  41103d:	cmp    al,bh
  41103f:	mov    esi,0x13e7fd73
  411044:	xor    DWORD PTR [esi+edi*8+0x6a1953ae],0xffffffe8
  41104c:	fnstcw WORD PTR [eax]
  41104e:	hlt    
  41104f:	sahf   
  411050:	push   ebx
  411051:	lods   eax,DWORD PTR ds:[esi]
  411052:	out    0x1f,eax
  411054:	retf   0xfeb2
  411057:	mov    ?,WORD PTR [ebx]
  411059:	lods   eax,DWORD PTR ds:[esi]
  41105a:	out    0x0,eax
  41105c:	out    0xe0,al
  41105e:	(bad)  
  41105f:	jmp    DWORD PTR [edx]
  411061:	or     DWORD PTR [eax],eax
  411063:	add    BYTE PTR [edx+0x62],bh
  411066:	add    edi,DWORD PTR [eax+0x74a]
  41106c:	xchg   ebx,eax
  41106d:	enter  0xe,0x17
  411071:	test   dl,ch
  411073:	push   esi
	...
  4110a4:	add    BYTE PTR [eax],al
  4110a6:	mov    ecx,0x170007ed
  4110ab:	push   es
  4110ac:	pop    esi
  4110ad:	leave  
  4110ae:	mov    BYTE PTR [edx-0x1087502],dh
  4110b4:	jmp    0x23b9:0xe6b46d0a
  4110bb:	jo     0x4110ba
  4110bd:	add    DWORD PTR [edx+esi*4-0x7f],0x3e
  4110c2:	cli    
  4110c3:	cmc    
  4110c4:	lock jmp edi
  4110c7:	(bad)  
  4110c8:	out    0xa9,eax
  4110ca:	jecxz  0x41113b
  4110cc:	std    
  4110cd:	pop    esi
  4110ce:	xor    ecx,eax
  4110d0:	add    al,BYTE PTR [eax]
  4110d2:	xlat   BYTE PTR ds:[ebx]
  4110d3:	sub    edx,0xffffff8b
  4110d6:	mov    bh,0xfe
  4110d8:	mov    dl,BYTE PTR [ebp-0x42]
  4110db:	add    DWORD PTR [edx],0xffffff90
  4110de:	dec    ecx
  4110df:	cli    
  4110e0:	(bad)  
  4110e2:	ss add al,0x8b
  4110e5:	push   ebp
  4110e6:	retf   0x2e6d
  4110e9:	(bad)
  4110ed:	adc    al,0xca
  4110ef:	loop   0x4110f8
  4110f1:	mov    edx,DWORD PTR [edi+0x15]
  4110f4:	push   DWORD PTR [eax-0x4a]
  4110f7:	jge    0x4110f9
  4110f9:	or     DWORD PTR [edi+0x11],0x0
  4110fd:	je     0x411092
  4110ff:	adc    DWORD PTR [ebx+0x18],0x83007c4a
  411106:	arpl   WORD PTR [esi+0xc90a],bx
	...
  41113c:	mov    eax,ds:0xe85502b8
  411141:	cwde   
  411142:	test   bl,al
  411144:	(bad)  
  411145:	sbb    edx,DWORD PTR [edx-0x75]
  411148:	push   ds
  411149:	int3   
  41114a:	mov    edi,0x29c5cff
  41114f:	add    al,ch
  411151:	pusha  
  411152:	push   es
  411153:	(bad)  
  411154:	arpl   WORD PTR [edx+eax*1+0x371f6300],bx
  41115b:	or     BYTE PTR [ebx-0x27],ah
  41115e:	or     ch,BYTE PTR [ebx]
  411160:	and    ebp,DWORD PTR [edx+0x57]
  411163:	leave  
  411164:	and    DWORD PTR [eax-0x5b5100fe],esp
  41116a:	stos   BYTE PTR es:[edi],al
  41116b:	inc    DWORD PTR [ebx+0x230ab8e3]
  411171:	xchg   ecx,eax
  411172:	or     ch,BYTE PTR [ebx]
  411174:	and    esi,DWORD PTR [edx+0x57]
  411177:	leave  
  411178:	and    DWORD PTR [eax+0x14a68902],ebp
  41117e:	mov    ecx,0xe146b74
  411183:	arpl   sp,bp
  411185:	mov    dl,0xbf
  411187:	inc    esp
  411188:	out    dx,eax
  411189:	pushf  
  41118a:	add    al,BYTE PTR [eax]
  41118c:	arpl   WORD PTR [ecx+0x3f],dx
  41118f:	in     al,dx
  411190:	xor    edi,DWORD PTR [ecx]
  411192:	ds hlt 
  411194:	xor    edx,ebx
  411196:	sub    eax,0xbc72bb08
  41119b:	(bad)  
  41119c:	mov    esp,0xec3f14
	...
  4111d1:	add    BYTE PTR [esi+esi*4],ch
  4111d4:	cmp    DWORD PTR [edi+esi*4-0x65],0x2e
  4111d9:	add    al,0x58
  4111db:	mov    gs,WORD PTR [esi]
  4111dd:	or     BYTE PTR [eax+0x5c],cl
  4111e0:	pop    eax
  4111e1:	pop    edi
  4111e2:	stos   BYTE PTR es:[edi],al
  4111e3:	add    al,0xab
  4111e5:	pop    es
  4111e6:	arpl   si,bx
  4111e8:	and    ebp,DWORD PTR [eax-0x7d7eb825]
  4111ee:	call   FWORD PTR [eax+ebp*8-0xfb3cfd]
  4111f5:	or     edi,DWORD PTR [eax]
  4111f7:	lds    ebx,FWORD PTR [esi]
  4111f9:	pop    ecx
  4111fa:	call   0x814a:0xe803e4c6
  411201:	ret    0x434
  411204:	mov    ecx,0x5e1e3bab
  411209:	mov    eax,0x8c554adb
  41120e:	xor    al,0xc9
  411210:	mov    ds:0xe8b1349f,eax
  411215:	add    edi,DWORD PTR [eax]
  411217:	cmc    
  411218:	imul   edi,DWORD PTR [esi],0x33
  41121b:	push   esi
  41121c:	fs ds pop ss
  41121f:	push   esi
  411220:	cs imul ebx,DWORD PTR cs:[ebp-0x4ef2425b],0x71
  411229:	inc    esi
  41122a:	adc    ebp,ebp
  41122c:	mov    ds:0xe20975ab,eax
  411231:	aad    0x70
  411233:	adc    eax,0x2e06
	...
  411268:	out    dx,eax
  411269:	popf   
  41126a:	dec    eax
  41126b:	sub    esp,esp
  41126d:	mov    al,0xc1
  41126f:	ret    
  411270:	ds push eax
  411272:	and    ch,al
  411274:	push   0xbb491005
  411279:	mov    al,0x23
  41127b:	mov    al,ds:0xac5384f9
  411280:	mov    esp,0x3782e73a
  411285:	mov    ecx,0x84a230e8
  41128a:	cmp    ebp,DWORD PTR [esp+eiz*4-0x1e10ffc7]
  411291:	xor    esp,esi
  411293:	jmp    0x1d4027eb
  411298:	retf   
  411299:	test   al,0x70
  41129b:	adc    esp,ecx
  41129d:	scas   eax,DWORD PTR es:[edi]
  41129e:	sub    ch,BYTE PTR [ecx-0x5436afeb]
  4112a4:	imul   eax,DWORD PTR ds:0xb0c30483,0x73
  4112ab:	in     al,0xb7
  4112ad:	jnp    0x4112ae
  4112af:	call   0xd9858f14
  4112b4:	or     eax,0x6776e439
  4112b9:	jl     0x4112ff
  4112bb:	inc    ebp
  4112bc:	push   ds
  4112bd:	rol    BYTE PTR [ecx],1
  4112bf:	mov    ecx,0x4e682508
  4112c4:	in     al,dx
  4112c5:	jl     0x41130b
  4112c7:	and    eax,0x72dc30d8
	...
  4112fc:	add    BYTE PTR [eax],al
  4112fe:	jb     0x4112b1
  411300:	jmp    0xa226:0xcf7b8b91
  411307:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411308:	(bad)  
  411309:	call   0xa4ce186e
  41130e:	sar    BYTE PTR [edi],0x8d
  411311:	lods   al,BYTE PTR ds:[esi]
  411312:	int3   
  411313:	aas    
  411314:	push   edx
  411315:	push   cs
  411316:	xor    bh,ch
  411318:	out    0x16,eax
  41131a:	test   al,0xae
  41131c:	(bad)  
  41131d:	repnz and BYTE PTR [esp+ecx*1],dh
  411321:	push   0xffffff9a
  411323:	mov    ecx,0x82d674ff
  411328:	jl     0x4112f3
  41132a:	pusha  
  41132b:	cmp    ah,BYTE PTR [esi]
  41132d:	push   0xffffff8b
  41132f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411330:	call   FWORD PTR [edi+ebp*2-0x50]
  411334:	je     0x4112ff
  411336:	or     BYTE PTR [edx],cl
  411338:	push   0xfd76a500
  41133d:	jne    0x411305
  41133f:	pop    ebx
  411340:	sub    dh,bh
  411342:	aad    0x76
  411344:	std    
  411345:	jne    0x41130d
  411347:	pop    ebx
  411348:	hlt    
  411349:	lds    esi,FWORD PTR [bp+0x29]
  41134d:	rol    BYTE PTR [eax+ebx*2-0x37],0xc2
  411352:	xchg   BYTE PTR [ebx],al
  411354:	mov    eax,DWORD PTR [ebp-0x16]
  411357:	sbb    bh,dh
  411359:	dec    ebp
  41135a:	fiadd  WORD PTR [edx-0x20851b85]
  411360:	add    eax,0x83
	...
  411391:	add    BYTE PTR [eax],al
  411393:	add    BYTE PTR [edi+0x5f],dl
  411396:	(bad)  
  411397:	je     0x41133f
  411399:	jnp    0x4113de
  41139b:	or     al,0xc5
  41139d:	cmc    
  41139e:	fisttp DWORD PTR [edi-0x38c87c6]
  4113a4:	mov    ds:0xa5ff65bb,al
  4113a9:	sub    al,BYTE PTR [eax]
  4113ab:	add    BYTE PTR [edx],bh
  4113ad:	add    ebx,DWORD PTR [esi+0x5f]
  4113b0:	jae    0x411376
  4113b2:	or     al,BYTE PTR [eax]
  4113b4:	(bad)  
  4113b5:	jnp    0x4113a1
  4113b7:	cmp    DWORD PTR [esi],0xffffffba
  4113ba:	push   ebp
  4113bb:	add    edi,0x12
  4113be:	add    BYTE PTR [ebp+0x10],dh
  4113c1:	sub    eax,DWORD PTR [eax]
  4113c3:	add    BYTE PTR [edx],cl
  4113c5:	add    ebx,DWORD PTR [edi-0x37]
  4113c8:	dec    eax
  4113c9:	(bad)  
  4113ca:	(bad)  
  4113cb:	(bad)  
  4113cc:	mov    bh,0x12
  4113ce:	sub    edx,edx
  4113d0:	jno    0x411417
  4113d2:	adc    bh,dh
  4113d4:	scas   eax,DWORD PTR es:[edi]
  4113d5:	fisub  WORD PTR [ebp+0x41]
  4113d8:	retf   0x4381
  4113db:	lock xor BYTE PTR [ecx],cl
  4113de:	push   DWORD PTR [ebp-0x56]
  4113e1:	js     0x411456
  4113e3:	or     BYTE PTR [ebx-0x3c],ah
  4113e6:	sbb    DWORD PTR [edi-0x4c],ebx
  4113e9:	mov    edi,0x9c537c80
  4113ee:	sub    eax,0x289d390c
  4113f3:	fs pushf 
  4113f5:	icebp  
  4113f6:	or     ebp,eax
	...
  411428:	add    BYTE PTR [eax],al
  41142a:	imul   edi,edi,0xffffffb4
  41142d:	dec    BYTE PTR [ecx+edx*1-0x4bf100f0]
  411434:	stos   BYTE PTR es:[edi],al
  411435:	dec    edx
  411436:	add    DWORD PTR [edi-0x7fe1774c],edx
  41143c:	mov    ah,0x74
  41143e:	push   edi
  41143f:	xchg   DWORD PTR [esi],ebp
  411441:	or     BYTE PTR [ebx-0x34],bh
  411444:	and    bh,bh
  411446:	pop    esp
  411447:	aaa    
  411448:	das    
  411449:	adc    al,0x54
  41144b:	mov    ecx,0xba66e80a
  411450:	mov    bl,0xfe
  411452:	fisubr DWORD PTR [eax-0x46]
  411455:	(bad)  
  411456:	mov    dh,0xb0
  411458:	mov    bl,0x74
  41145a:	imul   eax,DWORD PTR [ebp+ebp*4+0x60],0x2c
  41145f:	inc    edi
  411460:	mov    ch,0x74
  411462:	dec    edi
  411463:	out    dx,eax
  411464:	or     BYTE PTR cs:[ebx],cl
  411467:	aad    0x20
  411469:	call   DWORD PTR [ebx+eiz*1]
  41146c:	aas    
  41146d:	adc    al,0xe0
  41146f:	mov    ds:0x1b577402,eax
  411474:	aaa    
  411475:	cld    
  411476:	outs   dx,BYTE PTR ds:[esi]
  411477:	nop
  411478:	add    eax,0xff007683
  41147d:	jae    0x4114e3
  41147f:	rol    edx,cl
  411481:	pop    esi
  411482:	sbb    bl,dl
  411484:	sldt   WORD PTR [edx]
  411487:	xor    BYTE PTR ds:0xac0d6341,bl
  41148d:	cmp    BYTE PTR [eax],al
	...
  4114bf:	add    BYTE PTR [esi],ah
  4114c1:	add    eax,0xda5c2de1
  4114c6:	test   al,0x54
  4114c8:	stos   BYTE PTR es:[edi],al
  4114c9:	ret    0x3fc
  4114cc:	loopne 0x4114fd
  4114ce:	int    0xfe
  4114d0:	aaa    
  4114d1:	inc    ebp
  4114d3:	cs dec edi
  4114d5:	scas   al,BYTE PTR es:[edi]
  4114d6:	xor    ecx,DWORD PTR [ebx+ecx*4]
  4114d9:	add    DWORD PTR [edi-0x4b],0xffffff95
  4114dd:	jnp    0x411502
  4114df:	int3   
  4114e0:	add    al,0x5
  4114e2:	jmp    0xe5de77e9
  4114e7:	sbb    al,0x7c
  4114e9:	lods   eax,DWORD PTR ds:[esi]
  4114ea:	pop    edi
  4114eb:	outs   dx,DWORD PTR ds:[esi]
  4114ed:	(bad)  [ebp-0x451ad58]
  4114f3:	pcmpgtb mm6,QWORD PTR [edi]
  4114f6:	icebp  
  4114f7:	stos   DWORD PTR es:[edi],eax
  4114f8:	out    dx,al
  4114f9:	es jbe 0x4114b0
  4114fc:	jmp    0x60cb8a53
  411501:	outs   dx,DWORD PTR ds:[esi]
  411502:	lods   eax,DWORD PTR ds:[esi]
  411503:	clc    
  411504:	(bad)  
  411505:	lods   eax,DWORD PTR ds:[esi]
  411506:	fisubr DWORD PTR [edx-0x7f02bd17]
  41150c:	ins    BYTE PTR es:[edi],dx
  41150d:	add    eax,0x332c04d4
  411512:	cmp    eax,0x3e2422ab
  411517:	mov    ah,0x49
  411519:	lds    edx,FWORD PTR [ebp-0x16eddd36]
  41151f:	or     BYTE PTR [edi+0x4eba9],0x0
	...
  411556:	fisub  WORD PTR [eax+ebp*8+0x3]
  41155a:	arpl   ax,sp
  41155c:	adc    eax,0xb38086a8
  411561:	scas   eax,DWORD PTR es:[edi]
  411562:	fld    DWORD PTR [ecx]
  411564:	inc    ebx
  411565:	add    BYTE PTR [esi+0x330392b5],bl
  41156b:	lods   al,BYTE PTR ds:[esi]
  41156c:	(bad)  
  41156d:	jnp    0x4115d7
  41156f:	popf   
  411570:	daa    
  411571:	(bad)  
  411572:	pop    ss
  411573:	lods   al,BYTE PTR ds:[esi]
  411574:	(bad)  
  411575:	pop    esp
  411576:	imul   ebp,DWORD PTR [esp+esi*2+0x6116d8f1],0xffffffd6
  41157e:	lock jge 0x4115c5
  411581:	popf   
  411582:	dec    ebp
  411583:	add    eax,0xac4b3cff
  411588:	je     0x41157b
  41158a:	clc    
  41158b:	cmp    eax,0x7fd0b6f8
  411590:	dec    esp
  411591:	aad    0xe5
  411593:	in     eax,dx
  411594:	call   FWORD PTR [ebx]
  411596:	pusha  
  411597:	lods   al,BYTE PTR ds:[esi]
  411598:	je     0x41152f
  41159a:	fistp  WORD PTR [edx]
  41159c:	xchg   si,ax
  41159e:	mov    al,0xdf
  4115a0:	mov    edi,0x13c6ae2e
  4115a5:	jmp    0x7e59475b
  4115aa:	call   0x74ab:0x14fcff11
  4115b1:	fst    QWORD PTR [ecx]
  4115b3:	xor    DWORD PTR [eax],ecx
  4115b5:	push   ecx
  4115b6:	in     al,dx
  4115b7:	test   eax,0x5efe
	...
  4115ec:	cmp    al,0x6c
  4115ee:	je     0x4115d6
  4115f0:	icebp  
  4115f1:	xor    ah,dh
  4115f3:	inc    ecx
  4115f4:	cwde   
  4115f5:	and    edi,edi
  4115f7:	inc    esi
  4115f8:	add    al,0x6c
  4115fa:	pop    esi
  4115fb:	xor    BYTE PTR ds:0x5ae0018,ah
  411601:	sub    eax,edi
  411603:	mov    ebx,0x174aae3
  411608:	shl    BYTE PTR [eax],1
  41160a:	adc    al,0x1e
  41160c:	cmp    bh,BYTE PTR [ebp-0x550b6302]
  411612:	je     0x4115f5
  411614:	enter  0xfe21,0x0
  411618:	pop    ebp
  411619:	js     0x411624
  41161b:	ror    ch,0x7c
  41161e:	push   eax
  41161f:	add    edx,ecx
  411621:	pop    es
  411622:	push   DWORD PTR [ebp-0x2a]
  411625:	(bad)  
  411626:	adc    al,0x66
  411628:	mov    ebp,0x7dc02976
  41162d:	push   0xffffffc0
  41162f:	adc    al,0xca
  411631:	mov    BYTE PTR [ecx+eax*1],bh
  411634:	mov    edx,0x9e7d8307
  411639:	add    al,0xf
  41163b:	test   DWORD PTR [esi+0x61000000],edx
  411641:	js     0x41162a
  411643:	and    al,0x7b
  411645:	pop    es
  411646:	add    BYTE PTR [ebx+0x4896d47],cl
  41164c:	add    BYTE PTR [ebx],al
  41164e:	inc    ebp
  41164f:	lock add BYTE PTR [eax],al
	...
  411682:	pusha  
  411683:	add    DWORD PTR [eax-0x1],edx
  411686:	push   edi
  411687:	test   eax,0x783f74e6
  41168c:	std    
  41168d:	push   0x4a
  41168f:	js     0x411704
  411691:	adc    al,0xcd
  411693:	in     eax,dx
  411694:	pop    es
  411695:	call   0x3e8633
  41169a:	rol    DWORD PTR [ebp+0x14],1
  41169d:	add    DWORD PTR [ebx-0x72f08aff],0xffffffed
  4116a4:	repz call 0x3ff42c
  4116aa:	push   ecx
  4116ab:	rcr    DWORD PTR [ebp-0x37],0x48
  4116af:	adc    al,BYTE PTR [eax]
  4116b1:	or     edi,DWORD PTR [eax-0xe]
  4116b4:	add    al,0xe9
  4116b6:	dec    esi
  4116b7:	push   es
  4116b8:	add    BYTE PTR [eax],al
  4116ba:	xchg   ebx,eax
  4116bb:	cmp    eax,0x780a6aec
  4116c0:	jae    0x4116d6
  4116c2:	arpl   WORD PTR [ebx],dx
  4116c4:	cmp    BYTE PTR [eax],cl
  4116c6:	sti    
  4116c7:	(bad)  
  4116c8:	mov    ecx,0x4037e4fe
  4116cd:	adc    al,0xe0
  4116cf:	lds    eax,FWORD PTR [edx]
  4116d1:	jne    0x411737
  4116d3:	mov    bl,0x36
  4116d5:	hlt    
  4116d6:	mov    ebx,0xc4ff2854
  4116db:	pop    ss
  4116dc:	les    ebx,FWORD PTR [esi-0x56]
  4116df:	pop    esi
  4116e0:	pop    ss
  4116e1:	add    BYTE PTR [ecx+ecx*1+0x6638],dh
	...
  411718:	and    bl,BYTE PTR [edi+edi*2+0x4737bb44]
  41171f:	call   0xc140ec04
  411724:	sbb    DWORD PTR [ecx+0x5bcad1db],0x3
  41172b:	add    BYTE PTR [ebx-0x75],ah
  41172e:	mov    dl,0x82
  411730:	mov    esi,DWORD PTR [ebx+0x1f834479]
  411736:	pop    ds
  411737:	call   0xec883e7c
  41173c:	sub    cl,bl
  41173e:	fwait
  41173f:	jbe    0x4117a2
  411741:	xchg   edi,eax
  411742:	fisubr DWORD PTR [edx]
  411744:	xor    DWORD PTR [edi],esp
  411746:	inc    edi
  411747:	in     al,dx
  411748:	js     0x41172b
  41174a:	mov    ds:0x8554968a,eax
  41174f:	rol    BYTE PTR [eax+0x2c039b1f],0x4d
  411756:	add    eax,0x57254355
  41175b:	in     al,0xd8
  41175d:	pop    eax
  41175e:	call   0xe805:0x3540a63a
  411765:	pop    eax
  411766:	mov    ds:0x472760ea,al
  41176b:	in     al,0x4
  41176d:	add    eax,0x2ffc179c
  411772:	or     eax,0xe12ff454
  411777:	fwait
  411778:	ret    
  411779:	mov    cl,0xd
  41177b:	mov    cl,0x0
	...
  4117ad:	add    BYTE PTR [ecx-0x3b],bl
  4117b0:	jnp    0x4117b2
  4117b2:	fsubr  QWORD PTR [edi]
  4117b4:	cmc    
  4117b5:	fwait
  4117b6:	jbe    0x4117d8
  4117b8:	div    BYTE PTR [eax-0x45723a87]
  4117be:	mov    ds:0x277ae910,al
  4117c3:	leave  
  4117c4:	jno    0x411799
  4117c6:	out    0x3f,eax
  4117c8:	mov    ebp,0xb13fde53
  4117cd:	push   ebx
  4117ce:	adc    DWORD PTR [ebp-0x5662539e],ebx
  4117d4:	outs   dx,DWORD PTR ds:[esi]
  4117d5:	inc    esi
  4117d6:	mov    bl,0xa9
  4117d8:	cmp    edx,eax
  4117da:	test   BYTE PTR [edx],ah
  4117dc:	or     eax,0x238585b1
  4117e1:	aam    0x7c
  4117e3:	xor    eax,0xccf784fc
  4117e8:	call   0x13eb6c24
  4117ed:	fsub   DWORD PTR [ebp+0x2f]
  4117f0:	mov    eax,ds:0x7df9d7b0
  4117f5:	imul   ebp,DWORD PTR ss:[eax+0x334c0c1b],0xffffff91
  4117fd:	fwait
  4117fe:	bound  ebp,QWORD PTR [ebp+eiz*2-0x24135a50]
  411805:	stos   DWORD PTR es:[edi],eax
  411806:	cmp    DWORD PTR gs:[ecx],0xffffffb1
  41180a:	sub    eax,0x2f364da9
  41180f:	sahf   
  411810:	sub    al,0x27
	...
  411842:	add    BYTE PTR [eax],al
  411844:	sbb    al,0xa9
  411846:	add    BYTE PTR [edx],0x63
  411849:	add    eax,0xbeb3e900
  41184e:	rcl    ebp,0x60
  411851:	push   edx
  411852:	mov    edx,DWORD PTR ds:0xf174a89b
  411858:	fdiv   DWORD PTR [ecx+esi*2-0x46df4cea]
  41185f:	stos   BYTE PTR es:[edi],al
  411860:	mov    eax,ds:0xd87cff05
  411865:	mov    al,ds:0x560b63c
  41186a:	or     ebp,DWORD PTR [ecx]
  41186c:	xchg   ebp,eax
  41186d:	add    bl,BYTE PTR [edi+0x20]
  411870:	sahf   
  411871:	add    BYTE PTR [eax],al
  411873:	scas   eax,DWORD PTR es:[edi]
  411874:	addr16 add eax,0xa0b754ff
  41187a:	rcr    BYTE PTR [ebx-0x4],cl
  41187d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41187e:	mov    esi,0x462092
  411883:	(bad)  
  411884:	pop    edx
  411885:	std    
  411886:	push   esi
  411887:	rcr    DWORD PTR [esi-0x11],1
  41188a:	(bad)  
  41188b:	call   0xe4b58119
  411890:	adc    eax,0x60f1c1be
  411895:	test   eax,0xa706a932
  41189a:	(bad)  
  41189b:	xchg   esi,eax
  41189c:	mov    esp,0x5dd1adb6
  4118a1:	xor    ah,al
  4118a3:	xchg   BYTE PTR [edx+0x5e7fd],bl
	...
  4118d9:	add    BYTE PTR [edx-0x58],bl
  4118dc:	(bad)  
  4118dd:	loop   0x4118ff
  4118df:	xor    DWORD PTR ds:0x7c6060e,eax
  4118e5:	jmp    0xa883b542
  4118ea:	pusha  
  4118eb:	test   al,0x74
  4118ed:	loope  0x4118b7
  4118ef:	mov    ebx,0xfc60e934
  4118f4:	mov    edi,0xfda8df00
  4118f9:	jne    0x411901
  4118fb:	daa    
  4118fc:	add    al,0x7c
  4118fe:	sbb    al,0x41
  411900:	add    BYTE PTR [eax+0x4c],ch
  411903:	inc    esp
  411904:	inc    ecx
  411905:	add    BYTE PTR [ebp-0x12],al
  411908:	pop    es
  411909:	call   0x3fc7a6
  41190e:	add    esp,eax
  411910:	jae    0x41191b
  411912:	push   ebp
  411913:	out    dx,al
  411914:	or     ecx,DWORD PTR [edi+0x416483cf]
  41191a:	retf   0x50b
  41191d:	inc    esp
  41191e:	sti    
  41191f:	add    edi,edi
  411921:	jne    0x4118e5
  411923:	mov    edx,DWORD PTR [esi+0xb03ca35]
  411929:	ror    BYTE PTR [edi],0xaa
  41192c:	std    
  41192d:	jne    0x4118f5
  41192f:	es add al,0x84
  411932:	sbb    al,0x42
  411934:	add    BYTE PTR [eax+0x38b],bh
  41193a:	jne    0x4119a6
  41193c:	ror    BYTE PTR [eax],0x0
	...
  41196f:	add    BYTE PTR [edx+0x4c],bh
  411972:	mov    ebp,esp
  411974:	stc    
  411975:	mov    edi,0x93d56f2
  41197a:	mov    ch,0x43
  41197c:	dec    ebx
  41197d:	add    edi,edi
  41197f:	jne    0x411903
  411981:	mov    eax,DWORD PTR [esi+esi*1-0x3ff4fc86]
  411988:	pop    edi
  411989:	add    DWORD PTR [edi+0x5e],ebx
  41198c:	adc    eax,ebp
  41198e:	add    al,BYTE PTR [eax]
  411990:	jp     0x4119bc
  411992:	out    dx,eax
  411993:	mov    esi,DWORD PTR [edi]
  411995:	stos   DWORD PTR es:[edi],eax
  411996:	jmp    0x3cc4079c
  41199b:	add    BYTE PTR [edi],cl
  41199d:	pop    ebp
  41199e:	mov    ds:0x41876368,al
  4119a3:	inc    ecx
  4119a4:	arpl   WORD PTR [edi],si
  4119a6:	cmp    BYTE PTR [eax],cl
  4119a8:	or     edi,DWORD PTR [ebp-0x4beb000c]
  4119ae:	ret    0x6574
  4119b1:	(bad)  
  4119b2:	dec    esp
  4119b3:	leave  
  4119b4:	and    DWORD PTR [ecx-0x4b8174fe],esp
  4119ba:	cdq    
  4119bb:	and    ebx,esp
  4119bd:	(bad)  
  4119be:	sti    
  4119bf:	jae    0x411a0b
  4119c1:	sbb    al,0xee
  4119c3:	or     al,0x6f
  4119c5:	mov    al,0x82
  4119c7:	imul   ebp,DWORD PTR ds:[eax],0x63947ffe
  4119ce:	ss or  ah,bl
  4119d1:	outs   dx,DWORD PTR ds:[esi]
  4119d2:	dec    edi
  4119d3:	je     0x4119d5
	...
  411a05:	add    BYTE PTR [esi+0x1c],bl
  411a08:	out    dx,al
  411a09:	pop    edi
  411a0a:	ss fwait
  411a0c:	les    eax,FWORD PTR [esi]
  411a0e:	sbb    edi,0xffffff83
  411a11:	arpl   WORD PTR ds:[ecx-0x35],cx
  411a15:	(bad)  
  411a16:	push   ds
  411a17:	mov    eax,0x9c630003
  411a1c:	ret    
  411a1d:	inc    esp
  411a1e:	fwait
  411a1f:	pushf  
  411a20:	add    al,BYTE PTR [eax]
  411a22:	arpl   WORD PTR [ebx],sp
  411a24:	das    
  411a25:	or     BYTE PTR [eax-0x1d],bh
  411a28:	cmp    DWORD PTR [esi],0x44
  411a2b:	or     ecx,ebx
  411a2d:	xor    dh,0x87
  411a30:	add    esi,DWORD PTR [ebp+0x51]
  411a33:	xchg   DWORD PTR [esi-0x8],eax
  411a36:	bound  ebx,QWORD PTR [edx+eax*1-0x3c5f2a00]
  411a3d:	inc    esp
  411a3e:	push   edi
  411a3f:	popf   
  411a40:	add    al,BYTE PTR [eax]
  411a42:	arpl   WORD PTR [ebx+0x349ef710],ax
  411a48:	add    eax,DWORD PTR [eax]
  411a4a:	arpl   WORD PTR ds:0xbf6936e9,ax
  411a50:	in     eax,0xe3
  411a52:	and    eax,0x63045540
  411a57:	add    eax,0x495d83e9
  411a5c:	mov    esp,0x41401406
  411a61:	cdq    
  411a62:	gs mov esi,0xa604abab
  411a68:	call   0x411a70
	...
  411a99:	add    BYTE PTR [eax],al
  411a9b:	add    al,ah
  411a9d:	daa    
  411a9e:	and    eax,0x27026e03
  411aa3:	add    eax,0xed693e43
  411aa8:	in     al,0x30
  411aaa:	pop    ecx
  411aab:	jns    0x411b0c
  411aad:	std    
  411aae:	adc    DWORD PTR [eax],edx
  411ab0:	jecxz  0x411a97
  411ab2:	enter  0x7536,0x85
  411ab6:	jne    0x411aba
  411ab8:	xor    DWORD PTR [eax],0xffffffd9
  411abb:	push   esp
  411abc:	enter  0x72fe,0x44
  411ac0:	bound  edi,QWORD PTR [ebp-0x1b]
  411ac3:	inc    esp
  411ac4:	jecxz  0x411aab
  411ac6:	call   0x1e86c901
  411acb:	inc    ebp
  411acc:	jecxz  0x411ab3
  411ace:	call   0x23fecf09
  411ad3:	mov    eax,0x3e8a58c
  411ad8:	fsubr  DWORD PTR [edi]
  411ada:	loope  0x411b54
  411adc:	(bad)  
  411add:	cld    
  411ade:	xchg   ecx,eax
  411adf:	loope  0x411ad5
  411ae1:	in     eax,0xcc
  411ae3:	ss dec edi
  411ae5:	mov    edi,0x2f6403ed
  411aea:	xchg   ebp,eax
  411aeb:	push   ebp
  411aec:	dec    ebx
  411aed:	icebp  
  411aee:	xchg   BYTE PTR [ebp+edx*2+0x6536a911],ch
  411af5:	inc    esp
  411af6:	add    BYTE PTR [edi],dl
  411af8:	or     bh,al
  411afa:	add    ebp,ecx
  411afc:	mov    ebx,0x66459b
	...
  411b31:	add    BYTE PTR [ebp+0x3f694699],bl
  411b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b38:	jae    0x411b6a
  411b3a:	neg    DWORD PTR [ecx]
  411b3c:	hlt    
  411b3d:	mov    bh,0xf8
  411b3f:	adc    dh,bh
  411b41:	inc    esi
  411b42:	mov    DWORD PTR [ebx+0x5e],0x92230
  411b49:	pushf  
  411b4a:	mov    esi,DWORD PTR [eax+0x3ab82582]
  411b50:	push   edi
  411b51:	push   0x45
  411b53:	stc    
  411b54:	call   DWORD PTR [ecx+ebp*8+0x9e03c87]
  411b5b:	inc    esi
  411b5c:	add    cl,ch
  411b5e:	xchg   ebp,eax
  411b5f:	or     ebx,DWORD PTR [edi-0x59]
  411b62:	sbb    edi,eax
  411b64:	psubsw mm1,QWORD PTR [ebx+0x49]
  411b68:	adc    al,0xb0
  411b6a:	pop    ebp
  411b6b:	and    DWORD PTR [esi-0x58],esp
  411b6e:	pusha  
  411b6f:	adc    al,0x83
  411b71:	mov    bl,BYTE PTR [esi+0x5]
  411b74:	add    BYTE PTR [eax],ah
  411b76:	bound  eax,QWORD PTR [ebp+0x145f2865]
  411b7c:	xor    DWORD PTR [esi+0x66],0x5
  411b80:	add    BYTE PTR [eax],al
  411b82:	bound  ecx,QWORD PTR [ecx+0x14672865]
  411b88:	and    DWORD PTR [edx+0x5e],0x5
  411b8c:	add    BYTE PTR [edx+eiz*1-0x67],bl
  411b90:	dec    edi
  411b91:	je     0x411bb5
  411b93:	popf   
  411b94:	dec    edi
  411b95:	ins    BYTE PTR es:[edi],dx
	...
  411bc6:	add    BYTE PTR [eax],al
  411bc8:	and    ah,BYTE PTR [ecx+0x2072964f]
  411bce:	data16 sub BYTE PTR [edi-0x5c],ah
  411bd2:	je     0x411bd4
  411bd4:	cmp    al,BYTE PTR [eax+0x70cdf8bc]
  411bda:	mov    eax,DWORD PTR [ebp-0x1e]
  411bdd:	cmp    BYTE PTR [ebp-0x72c641bb],cl
  411be3:	inc    ebp
  411be4:	call   0x40e7:0xc635ff39
  411beb:	add    BYTE PTR [ebp-0x1917f02a],cl
  411bf1:	jo     0x411bf0
  411bf3:	dec    DWORD PTR [edi+0x7f50dc46]
  411bf9:	inc    esi
  411bfa:	loopne 0x411c4c
  411bfc:	jg     0x411c44
  411bfe:	in     al,0x50
  411c00:	dec    ebp
  411c01:	xchg   esi,eax
  411c02:	jle    0x411c6a
  411c04:	retf   
  411c05:	pop    es
  411c06:	push   DWORD PTR [ebp-0x16]
  411c09:	jg     0x411b93
  411c0b:	clc    
  411c0c:	dec    ebp
  411c0d:	jo     0x411c0c
  411c0f:	jne    0x411c77
  411c11:	and    BYTE PTR [esp+edx*8+0x5d],al
  411c15:	(bad)  
  411c16:	fisttp DWORD PTR [edi+0x45c5d007]
  411c1c:	push   0x9
  411c1e:	add    BYTE PTR [eax],al
  411c20:	retf   0x441c
  411c23:	int3   
  411c24:	jp     0x411c29
  411c26:	add    DWORD PTR [edx-0x46],ebp
  411c29:	add    DWORD PTR [eax],eax
  411c2b:	push   0x0
	...
  411c5d:	add    BYTE PTR [edx+0x478d0001],bh
  411c63:	mov    ch,0x4e
  411c65:	push   DWORD PTR [edi+0x7a4127a0]
  411c6b:	mov    ds:0xa1f60fbe,al
  411c70:	(bad)  
  411c71:	dec    DWORD PTR [edx-0x752f8476]
  411c77:	sahf   
  411c78:	add    BYTE PTR [eax],0x7b
  411c7b:	pop    es
  411c7c:	add    BYTE PTR [ebx+0x3ab7e963],cl
  411c82:	scas   al,BYTE PTR es:[edi]
  411c83:	mov    cl,bh
  411c85:	xchg   BYTE PTR [edi-0x53],cl
  411c88:	add    al,BYTE PTR [eax]
  411c8a:	dec    edi
  411c8b:	sbb    BYTE PTR [eax],dh
  411c8d:	rcr    al,1
  411c8f:	cdq    
  411c90:	(bad)  
  411c91:	mov    ch,BYTE PTR [esi+0x3001a580]
  411c97:	xchg   ecx,eax
  411c98:	test   eax,0x40341f74
  411c9d:	in     al,0x24
  411c9f:	ret    0xe7d2
  411ca2:	cmp    al,0xff
  411ca4:	add    eax,DWORD PTR [eax]
  411ca6:	loopne 0x411c71
  411ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ca9:	call   FWORD PTR [ebp+0x28]
  411cac:	mov    ecx,0x85ad04ff
  411cb1:	jl     0x411ca6
  411cb3:	lods   al,BYTE PTR ds:[esi]
  411cb4:	stc    
  411cb5:	sbb    DWORD PTR [edi],0xffffffad
  411cb8:	add    al,BYTE PTR [eax]
  411cba:	loopne 0x411c3d
  411cbc:	sahf   
  411cbd:	call   DWORD PTR [ebp+0x30]
  411cc0:	ins    DWORD PTR es:[edi],dx
  411cc1:	inc    DWORD PTR [eax]
	...
  411cf3:	add    ah,bl
  411cf5:	lods   al,BYTE PTR ds:[esi]
  411cf6:	test   eax,0x6cf4d774
  411cfb:	pusha  
  411cfc:	int3   
  411cfd:	mov    ds:0x9b9b447a,eax
  411d02:	cs cld 
  411d04:	mov    esp,0x2efebb19
  411d09:	rcr    BYTE PTR [ebx-0x573cbd21],0x67
  411d10:	dec    edi
  411d11:	lock inc edx
  411d13:	add    BYTE PTR [ebx-0x6b0009c0],cl
  411d19:	cld    
  411d1a:	sbb    edx,DWORD PTR [edi+eiz*1]
  411d1d:	in     eax,dx
  411d1e:	add    edi,edi
  411d20:	push   cs
  411d21:	fs fwait
  411d23:	sub    eax,0xb02ac37
  411d28:	mov    ds:0xfb0c1d05,eax
  411d2d:	std    
  411d2e:	and    al,0x43
  411d30:	arpl   WORD PTR [ebp-0x5da309e8],bp
  411d36:	cmp    BYTE PTR [eax+edi*2],bl
  411d39:	dec    ecx
  411d3a:	sub    BYTE PTR [esp+ecx*2],al
  411d3d:	sbb    BYTE PTR [ecx-0x17268d64],dh
  411d43:	add    ebp,DWORD PTR [eax-0x3b]
  411d46:	hlt    
  411d47:	or     ecx,ebx
  411d49:	out    0xac,al
  411d4b:	inc    edx
  411d4c:	arpl   WORD PTR [ebp-0x5ddb0a4c],bp
  411d52:	mov    eax,0xa849401b
  411d57:	add    eax,DWORD PTR [eax]
	...
  411d89:	add    BYTE PTR [eax+ebx*1],dl
  411d8c:	xor    DWORD PTR [esi+edx*1+0x5803e8d6],ebx
  411d93:	lds    edi,FWORD PTR [ebx-0x16fa74c2]
  411d99:	cwde   
  411d9a:	mov    dh,0xa1
  411d9c:	fwait
  411d9d:	test   DWORD PTR [edi+ebx*2],0xa1e5a8bb
  411da4:	fld    TBYTE PTR [ebx]
  411da6:	inc    ebp
  411da7:	inc    esp
  411da8:	jmp    0x11526d55
  411dad:	pop    eax
  411dae:	das    
  411daf:	mov    ds:0xa14fa8fd,al
  411db4:	cmc    
  411db5:	cs mov bh,0xa1
  411db8:	jae    0x411db1
  411dba:	mov    esp,0xada943b8
  411dbf:	mov    eax,ds:0x17a5b453
  411dc4:	shr    DWORD PTR [eax-0x3e3eeee9],0x37
  411dcb:	mov    ds:0xa917a8c5,al
  411dd0:	mov    ebp,0xffa1a72e
  411dd5:	cmp    edi,DWORD PTR [ebx-0x57]
  411dd8:	mov    bh,0xc
  411dda:	retf   0xfea2
  411ddd:	sbb    al,0xaf
  411ddf:	test   eax,0xa2ba09f0
  411de4:	pop    esi
  411de5:	aaa    
  411de6:	sbb    bh,al
  411de8:	psubsw mm4,QWORD PTR [ebp+0x6aeb8c]
	...
  411e1f:	add    BYTE PTR [ecx+ebp*4],cl
  411e22:	cmp    ah,0x54
  411e25:	or     cl,BYTE PTR [edi]
  411e27:	ins    BYTE PTR es:[edi],dx
  411e28:	push   edi
  411e29:	push   es
  411e2a:	add    cl,ch
  411e2c:	lods   eax,DWORD PTR ds:[esi]
  411e2d:	dec    ecx
  411e2e:	hlt    
  411e2f:	mov    ecx,0xb9f849b5
  411e34:	lods   eax,DWORD PTR ds:[esi]
  411e35:	dec    ecx
  411e36:	cld    
  411e37:	mov    ecx,0xd4ff037e
  411e3c:	jo     0x411deb
  411e3e:	and    BYTE PTR [esi],bh
  411e40:	mov    ebx,0xb8bc829f
  411e45:	add    eax,0xa0b76c0f
  411e4a:	(bad)  
  411e4b:	jmp    0x7735381b
  411e50:	sub    eax,0x9f056795
  411e55:	inc    esi
  411e56:	add    BYTE PTR [esi],dl
  411e58:	lea    edx,[ebp-0x5f313c19]
  411e5e:	(bad)  
  411e5f:	repnz mov al,ds:0x6021850f
  411e65:	add    eax,0x997d6400
  411e6a:	dec    edi
  411e6b:	pop    esp
  411e6c:	jne    0x411e0b
  411e6e:	dec    edi
  411e6f:	je     0x411e93
  411e71:	mov    eax,ds:0xa05f534f
  411e76:	je     0x411e71
  411e78:	clc    
  411e79:	stos   BYTE PTR es:[edi],al
  411e7a:	cmc    
  411e7b:	into   
  411e7c:	mov    esp,0xa2007c83
  411e81:	or     cl,BYTE PTR [edi]
  411e83:	test   DWORD PTR [eax],eax
	...
  411eb5:	add    dl,ah
  411eb7:	or     DWORD PTR [eax],eax
  411eb9:	add    BYTE PTR [ebp-0xa970c2a],dh
  411ebf:	inc    ebx
  411ec0:	inc    ecx
  411ec1:	add    dl,dl
  411ec3:	call   0xfbe:0x9b7a0030
  411eca:	iret   
  411ecb:	and    al,0xff
  411ecd:	dec    DWORD PTR [edx+0x1d]
  411ed0:	inc    esp
  411ed1:	hlt    
  411ed2:	push   0x1e
  411ed4:	inc    esp
  411ed5:	clc    
  411ed6:	push   0x1e
  411ed8:	inc    esp
  411ed9:	cld    
  411eda:	pop    edx
  411edb:	sti    
  411edc:	add    bh,bh
  411ede:	das    
  411edf:	hlt    
  411ee0:	out    0xb1,eax
  411ee2:	mov    WORD PTR [eax-0x3],gs
  411ee5:	add    DWORD PTR [edi],0x6c
  411ee8:	dec    BYTE PTR [esi]
  411eea:	pop    DWORD PTR [esi+edi*8+0x441b0aff]
  411ef1:	hlt    
  411ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ef3:	cdq    
  411ef4:	lea    eax,[ebp-0x6a]
  411ef7:	push   ds
  411ef8:	inc    esp
  411ef9:	hlt    
  411efa:	ficomp DWORD PTR [esp+eax*2]
  411efd:	clc    
  411efe:	ficomp DWORD PTR [esp+eax*2]
  411f01:	cld    
  411f02:	stos   BYTE PTR es:[edi],al
  411f03:	std    
  411f04:	add    edi,edi
  411f06:	iret   
  411f07:	repz out 0x89,eax
  411f0a:	jl     0x411f74
  411f0c:	std    
  411f0d:	and    edi,0x6b
  411f10:	push   DWORD PTR [ebp+eax*1+0x5f]
  411f14:	add    edi,DWORD PTR [esp+ebx*8+0x48]
  411f18:	add    bh,bh
	...
  411f4a:	add    BYTE PTR [eax],al
  411f4c:	mov    ch,0x66
  411f4e:	std    
  411f4f:	(bad)  
  411f50:	mov    edi,0xba416483
  411f55:	data16 std 
  411f57:	inc    DWORD PTR [ebp+0x6384035e]
  411f5d:	push   eax
  411f5e:	inc    ebp
  411f5f:	add    BYTE PTR [esi+ecx*8-0x1f73015b],dl
  411f66:	scas   eax,DWORD PTR es:[edi]
  411f67:	out    0x61,eax
  411f69:	bound  esp,QWORD PTR [ebp-0x640f5b02]
  411f6f:	add    BYTE PTR [ebx-0x52],ah
  411f72:	add    al,BYTE PTR [ebx+0x411dea2e]
  411f78:	arpl   WORD PTR [edi+0x2e],di
  411f7b:	sub    eax,esp
  411f7d:	mov    ecx,0xaca26582
  411f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f83:	jae    0x411f08
  411f85:	sub    ebp,eax
  411f87:	cmp    DWORD PTR [ebp-0x4800fc13],0xffffffbf
  411f8e:	sbb    dh,al
  411f90:	out    dx,al
  411f91:	in     al,dx
  411f92:	add    ecx,DWORD PTR [ebp-0xaccb5a]
  411f98:	scas   al,BYTE PTR es:[edi]
  411f99:	push   eax
  411f9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f9b:	je     0x41200c
  411f9d:	aaa    
  411f9e:	xor    BYTE PTR [eax],cl
  411fa0:	or     esp,DWORD PTR [ebp-0x29f30156]
  411fa6:	ror    BYTE PTR [edi],0x63
  411fa9:	jns    0x412024
  411fab:	jmp    0x411f8d
  411fad:	lock xchg esi,eax
  411faf:	inc    BYTE PTR [eax]
	...
  411fe1:	add    BYTE PTR [esi-0x5c],ch
  411fe4:	call   0x5369:0xa5e78a9c
  411feb:	xor    DWORD PTR [eax-0x10],eax
  411fee:	xor    esi,edi
  411ff0:	das    
  411ff1:	or     bl,cl
  411ff3:	xchg   edi,eax
  411ff4:	dec    edx
  411ff5:	dec    esp
  411ff7:	xchg   ebx,eax
  411ff8:	ret    0x5f74
  411ffb:	aad    0xc0
  411ffd:	pop    es
  411ffe:	arpl   WORD PTR [edx+0x6bd46812],ax
  412004:	inc    ebx
  412005:	add    dh,bl
  412007:	add    eax,0xad14b42c
  41200c:	aad    0x45
  41200e:	pushf  
  41200f:	sahf   
  412010:	loope  0x411fd5
  412012:	wbinvd 
  412014:	mov    al,ds:0xae0564c2
  412019:	aas    
  41201a:	ja     0x412020
  41201c:	jmp    0x2bd18324
  412021:	cwde   
  412022:	and    al,0x9e
  412024:	xor    edi,esp
  412026:	test   al,ch
  412028:	inc    edx
  412029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41202a:	or     ch,BYTE PTR gs:[ecx+0x13826530]
  412031:	cwde   
  412032:	push   esp
  412033:	sbb    edi,esp
  412035:	fmul   DWORD PTR [esp+ecx*8]
  412038:	stos   BYTE PTR es:[edi],al
  412039:	cld    
  41203a:	inc    esp
  41203b:	dec    esi
  41203c:	sar    BYTE PTR [edx-0x6367f7b7],cl
  412042:	mov    cl,0x4
  412044:	sub    cl,bh
	...
  412076:	add    BYTE PTR [eax],al
  412078:	in     al,dx
  412079:	pop    ss
  41207a:	pop    esi
  41207b:	dec    esp
  41207c:	loopne 0x41201a
  41207e:	out    0x2e,eax
  412080:	pop    bp
  412082:	call   0x6a46828a
  412087:	stos   DWORD PTR es:[edi],eax
  412088:	arpl   WORD PTR [ecx],bx
  41208a:	out    dx,eax
  41208b:	fadd   st,st(4)
  41208d:	retf   
  41208e:	sub    bh,ah
  412090:	cld    
  412091:	bound  edi,QWORD PTR [ebp+ebx*1+0x3f5c05a2]
  412098:	push   DWORD PTR [esi+eiz*1]
  41209b:	das    
  41209c:	pop    ebx
  41209d:	lods   eax,DWORD PTR ds:[esi]
  41209e:	jmp    0x4120e9
  4120a0:	fcomp  QWORD PTR [ebp+0x1963ac69]
  4120a6:	in     al,0x80
  4120a8:	aam    0x2
  4120aa:	jl     0x4120a9
  4120ac:	loope  0x4120cd
  4120ae:	or     eax,0x73604
  4120b3:	ret    0xcca0
  4120b6:	shl    ecx,0x60
  4120b9:	nop
  4120ba:	inc    esp
  4120bb:	aad    0x10
  4120bd:	sahf   
  4120be:	je     0x4120b1
  4120c0:	clc    
  4120c1:	stos   BYTE PTR es:[edi],al
  4120c2:	pop    eax
  4120c3:	(bad)  
  4120c4:	mov    edi,0x3ce8f782
  4120c9:	or     BYTE PTR [ebx+0x61862c1],al
  4120cf:	push   0x45
  4120d1:	mov    cl,0xff
  4120d3:	cmp    esi,DWORD PTR [ebp-0x16]
  4120d6:	mov    edi,0x5a2a0
  4120db:	je     0x4120dd
	...
  41210d:	add    BYTE PTR ds:0x8d9e4fb1,ah
  412113:	or     eax,0x9ca9a0e8
  412118:	(bad)  
  412119:	loop   0x41213b
  41211b:	adc    al,BYTE PTR [esi]
  41211d:	push   0x7d
  41211f:	test   eax,0xf03ef3ff
  412124:	mov    edi,0x522a0
  412129:	pop    esp
  41212a:	ins    DWORD PTR es:[edi],dx
  41212b:	test   eax,0xd75664f
  412130:	call   0xfeddcac1
  412135:	push   0xffffffc8
  412137:	fdiv   QWORD PTR [edi+eiz*8-0x1d]
  41213b:	sbb    esp,ebp
  41213d:	jmp    0x296c2477
  412142:	mov    ecx,0x6de907c6
  412147:	inc    ecx
  412148:	in     al,dx
  412149:	cdq    
  41214a:	(bad)  
  41214b:	adc    DWORD PTR [eax],ecx
  41214d:	adc    eax,edx
  41214f:	cmp    eax,0x94e31eff
  412154:	pop    ds
  412155:	pushf  
  412156:	(bad)  
  412157:	xchg   DWORD PTR [ebp+edi*8+0x61],edi
  41215b:	adc    al,BYTE PTR [esi]
  41215d:	add    BYTE PTR [ecx-0x4d3d3838],dh
  412163:	or     BYTE PTR [ebp-0xc7a1bb],cl
  412169:	jne    0x41212d
  41216b:	xor    BYTE PTR [ecx+0x59],0xbd
  41216f:	push   0xf881
	...
  4121a4:	push   0xfffffffe
  4121a6:	add    eax,0xfe552f83
  4121ab:	je     0x412131
  4121ad:	stos   DWORD PTR es:[edi],eax
  4121ae:	mov    esi,0x9b8c9
  4121b3:	lea    eax,[edi+0x55]
  4121b6:	dec    esi
  4121b7:	push   0x6a
  4121b9:	push   0xe8a20873
  4121be:	pop    eax
  4121bf:	(bad)  
  4121c0:	mov    ebp,0x9aec4376
  4121c5:	push   0x57e20873
  4121ca:	push   esi
  4121cb:	(bad)  
  4121cc:	fld    QWORD PTR [ebx+0xb4801f6]
  4121d2:	cmp    eax,0x49
  4121d5:	inc    DWORD PTR ds:0xfe6c2f83
  4121db:	je     0x412221
  4121dd:	stos   DWORD PTR es:[edi],eax
  4121de:	mov    esi,0x978c9
  4121e3:	mov    ds:0x40ee02,eax
  4121e8:	jg     0x412238
  4121ea:	in     al,dx
  4121eb:	push   eax
  4121ec:	and    BYTE PTR [eax+0x701275fd],dh
  4121f2:	dec    eax
  4121f3:	pop    ecx
  4121f4:	cmp    eax,0x75c56668
  4121f9:	inc    ecx
  4121fa:	add    BYTE PTR [ebp+0x6a4e6bc7],cl
  412200:	sti    
  412201:	data16 jae 0x412210
  412204:	jge    0x412204
  412206:	pop    es
  412207:	call   0x41220c
	...
  412238:	add    BYTE PTR [eax],al
  41223a:	arpl   WORD PTR [edx-0x1b330168],ax
  412240:	lds    eax,FWORD PTR [edi]
  412242:	arpl   WORD PTR [ecx-0x73],di
  412245:	jmp    0x412227
  412247:	loope  0x4121e8
  412249:	mov    WORD PTR [esi],ds
  41224b:	xchg   edx,eax
  41224c:	xor    ch,al
  41224e:	cmp    dh,BYTE PTR [ecx-0x5f]
  412251:	(bad)  
  412252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412253:	cmp    BYTE PTR [eax-0x5555e902],ah
  412259:	dec    esi
  41225a:	sub    al,0xb3
  41225c:	mov    eax,ds:0x1331a30a
  412261:	dec    DWORD PTR [esi]
  412263:	xchg   esi,eax
  412264:	mov    eax,ds:0xddb57f74
  412269:	std    
  41226a:	je     0x4122be
  41226c:	or     eax,0xa1adf6c0
  412271:	je     0x4122da
  412273:	jne    0x412297
  412275:	push   ebp
  412276:	pop    esp
  412277:	jl     0x412244
  412279:	shl    DWORD PTR [edi-0x54],0x37
  41227d:	mov    edi,DWORD PTR [edi]
  41227f:	mov    WORD PTR [edi],ss
  412281:	or     al,0x3b
  412283:	pusha  
  412284:	and    al,0xff
  412286:	cmp    al,0x98
  412288:	ret    0x8073
  41228b:	adc    ebx,DWORD PTR [eax]
  41228d:	adc    BYTE PTR [ebx+0x2460cc84],dl
  412293:	and    al,0x33
  412295:	push   0x4266eb
  41229a:	adc    al,0xba
  41229c:	cli    
  41229d:	inc    BYTE PTR [eax]
	...
  4122cf:	add    BYTE PTR [esi-0x7100cd70],dl
  4122d5:	xchg   esp,eax
  4122d6:	stos   BYTE PTR es:[edi],al
  4122d7:	in     eax,0xe3
  4122d9:	(bad)  [ecx-0x5e8e4919]
  4122df:	(bad)  
  4122e0:	sbb    ch,bh
  4122e2:	idiv   bh
  4122e4:	pop    DWORD PTR ds:0x544af72
  4122ea:	jmp    0x626f39a1
  4122ef:	inc    esi
  4122f0:	and    al,BYTE PTR ds:0x2f57180e
  4122f6:	jecxz  0x41229a
  4122f8:	aaa    
  4122f9:	or     eax,0x9ab55311
  4122fe:	cmc    
  4122ff:	sub    ah,BYTE PTR [ebx+0x5]
  412302:	(bad)  
  412303:	pusha  
  412304:	cmp    al,0x71
  412306:	sub    DWORD PTR [ebx+0x63],eax
  412309:	call   0x17d5:0xff091053
  412310:	pop    ebx
  412311:	lods   eax,DWORD PTR ds:[esi]
  412312:	outs   dx,DWORD PTR ds:[esi]
  412313:	mov    eax,ds:0x4509a85
  412318:	arpl   WORD PTR [edx+0x46e82c7e],bp
  41231e:	sub    BYTE PTR [esp+ebp*2],al
  412321:	adc    ch,bl
  412323:	sub    eax,0xc1b9a47
  412328:	dec    ebx
  412329:	xchg   DWORD PTR [ebp-0x16d2aa5f],ebx
  41232f:	add    edi,DWORD PTR [ebx+ebx*2]
  412332:	add    BYTE PTR [eax+0x0],bh
	...
  412365:	add    BYTE PTR [ecx-0x485f16bc],ah
  41236b:	or     DWORD PTR [ebx],edx
  41236d:	add    BYTE PTR [eax+edx*1],dh
  412370:	loope  0x41231d
  412372:	mov    ecx,0xbca16d9a
  412377:	add    eax,0x2cdeb0e9
  41237c:	jb     0x4123c3
  41237e:	mov    ds:0x5f175605,al
  412383:	das    
  412384:	or     ah,BYTE PTR [ecx+0x38510d8f]
  41238a:	cld    
  41238b:	cdq    
  41238c:	cmp    eax,0x5632c
  412391:	inc    esi
  412392:	and    DWORD PTR [edx],0x5a1aa94
  412398:	call   FWORD PTR [esp+ebp*2+0x6c1e232f]
  41239f:	or     eax,0x9b03d4e8
  4123a4:	(bad)  
  4123a5:	and    BYTE PTR [ebp-0x1063ffff],bl
  4123ab:	lods   eax,DWORD PTR ds:[esi]
  4123ac:	and    BYTE PTR ds:0x83002c03,0x96
  4123b3:	call   0xe65a:0x47f8e174
  4123ba:	ret    
  4123bb:	mov    WORD PTR [ebp+ebx*8+0x48],es
  4123bf:	jmp    0x9aa84c07
  4123c4:	je     0x4123a7
  4123c6:	mov    eax,0xc6ff48
	...
  4123fb:	add    bl,al
  4123fd:	call   0xc108:0x10c3bd74
  412404:	dec    ecx
  412405:	aas    
  412406:	jmp    FWORD PTR [esi-0x16fc3c67]
  41240c:	xchg   ebp,eax
  41240d:	mov    ebx,gs
  41240f:	push   0x1c
  412411:	popf   
  412412:	imul   ebp,ecx,0x14fed47e
  412418:	push   edi
  412419:	lods   eax,DWORD PTR ds:[esi]
  41241a:	sbb    al,0x23
  41241c:	add    bl,BYTE PTR [eax+0x21032488]
  412422:	cmp    ebp,DWORD PTR ds:0xf4ff05a0
  412428:	pop    eax
  412429:	lods   eax,DWORD PTR ds:[esi]
  41242a:	sbb    esp,DWORD PTR [esi-0x3d]
  41242d:	xchg   edi,eax
  41242e:	(bad)  
  41242f:	aam    0xf4
  412431:	xchg   edi,eax
  412432:	je     0x412415
  412434:	mov    eax,0xc34e5a40
  412439:	int    0xc1
  41243b:	add    BYTE PTR [esi],cl
  41243d:	add    eax,0x81a68b55
  412442:	ret    0x20f8
  412445:	add    eax,0xef35346a
  41244a:	pop    es
  41244b:	call   0x3fffc6
  412450:	push   ebx
  412451:	aas    
  412452:	cld    
  412453:	push   0x4140ff
  412458:	push   ebp
  412459:	out    dx,eax
  41245a:	pop    es
  41245b:	call   0x3e8ab1
	...
  412490:	add    BYTE PTR [eax],al
  412492:	rol    BYTE PTR [eax+ebp*2],1
  412495:	inc    BYTE PTR gs:[ebx+0x0]
  412499:	push   0x4140cb
  41249e:	test   DWORD PTR [esi+0x14b2925],edi
  4124a4:	call   0xfdb97a4e
  4124a9:	or     edi,DWORD PTR [edx+0x4f893efd]
  4124af:	jns    0x412517
  4124b1:	mov    al,ah
  4124b3:	inc    ecx
  4124b4:	add    BYTE PTR [eax+0x7a],ch
  4124b7:	add    al,0xef
  4124b9:	mov    esi,0x41418c22
  4124be:	dec    edx
  4124bf:	ja     0x412534
  4124c1:	clc    
  4124c2:	cmc    
  4124c3:	std    
  4124c4:	pop    es
  4124c5:	call   0x401d94
  4124ca:	bound  ecx,QWORD PTR [ecx-0x13b5bf48]
  4124d0:	(bad)  
  4124d1:	jmp    ebp
  4124d3:	ss addr16 xchg esp,eax
  4124d6:	jns    0x41251a
  4124d8:	add    bh,bh
  4124da:	das    
  4124db:	jl     0x4124da
  4124dd:	jne    0x4124f1
  4124df:	ins    BYTE PTR es:[edi],dx
  4124e0:	je     0x412561
  4124e2:	mov    ch,0x78
  4124e4:	std    
  4124e5:	jne    0x41254a
  4124e7:	lods   al,BYTE PTR ss:[esi]
  4124e9:	dec    ecx
  4124ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124eb:	inc    edi
  4124ec:	lahf   
  4124ed:	(bad)  
  4124ee:	jbe    0x412532
  4124f0:	lahf   
  4124f1:	je     0x41255e
  4124f3:	ss popa 
  4124f5:	pop    eax
	...
  412526:	add    BYTE PTR [eax],al
  412528:	in     al,dx
  412529:	into   
  41252a:	int3   
  41252b:	rcr    DWORD PTR [edi-0x52],0x37
  41252f:	mov    ecx,edi
  412531:	sub    cl,al
  412533:	sti    
  412534:	dec    ecx
  412535:	scas   al,BYTE PTR es:[edi]
  412536:	sub    BYTE PTR ds:0xe80a78cc,dh
  41253c:	inc    edx
  41253d:	push   ebp
  41253e:	popf   
  41253f:	(bad)  
  412540:	jmp    0x4362:0x32679e68
  412547:	add    BYTE PTR [eax+ebx*1-0x57bc17f5],ch
  41254e:	popf   
  41254f:	(bad)  
  412550:	pushf  
  412551:	cmp    BYTE PTR [eax-0x5569f102],ah
  412557:	mov    ebp,DWORD PTR [edx]
  412559:	scas   eax,DWORD PTR es:[edi]
  41255a:	popf   
  41255b:	enter  0xa1a1,0x2
  41255f:	push   ebp
  412560:	call   0x7804a716
  412565:	xor    eax,DWORD PTR [edx+ebp*2]
  412568:	xor    eax,0x7b08174f
  41256d:	popf   
  41256e:	cmp    edi,edi
  412570:	pop    esp
  412571:	push   ss
  412572:	dec    eax
  412573:	cld    
  412574:	retf   
  412575:	loop   0x4125be
  412577:	inc    ecx
  412578:	arpl   WORD PTR [edi+0x17],bp
  41257b:	or     BYTE PTR [ebx],bh
  41257d:	pop    eax
  41257e:	pushf  
  41257f:	(bad)  
  412580:	cmp    al,0x80
  412582:	pop    ss
  412583:	cld    
  412584:	xor    al,0x92
  412586:	or     ch,al
  412588:	mov    ch,dh
  41258a:	sahf   
  41258b:	inc    BYTE PTR [eax]
	...
  4125bd:	add    BYTE PTR [edx],bl
  4125bf:	imul   eax,DWORD PTR [esi],0x0
  4125c2:	mov    dh,0x5
  4125c4:	jb     0x412575
  4125c6:	loope  0x412589
  4125c8:	pop    esp
  4125c9:	sub    DWORD PTR [ebx+0x2b],esp
  4125cc:	push   ds
  4125cd:	lahf   
  4125ce:	(bad)  
  4125cf:	or     eax,0x96949e41
  4125d4:	inc    ebp
  4125d5:	mov    WORD PTR [edi-0x5f782f67],ds
  4125db:	inc    esp
  4125dc:	jmp    0x414e957f
  4125e1:	popf   
  4125e2:	fist   WORD PTR [esi-0x66b061db]
  4125e8:	sbb    eax,0xc2ad5b18
  4125ed:	cmp    al,0xc4
  4125ef:	xchg   esi,eax
  4125f0:	pop    ds
  4125f1:	shl    DWORD PTR [eax+0x5],0x9c
  4125f5:	mov    cl,al
  4125f7:	and    BYTE PTR [edi+ebx*4],0x3a
  4125fb:	add    eax,0x10a5db83
  412600:	loope  0x4125ad
  412602:	scas   al,BYTE PTR es:[edi]
  412603:	cmp    eax,0x40eb9de6
  412608:	(bad)  [edi+ebx*8]
  41260b:	inc    ecx
  41260c:	sub    BYTE PTR [esp+eax*4],al
  41260f:	adc    cl,ah
  412611:	stos   DWORD PTR es:[edi],eax
  412612:	scas   eax,DWORD PTR es:[edi]
  412613:	cwde   
  412614:	lds    ebx,FWORD PTR [ebp-0x6242ef8b]
  41261a:	test   DWORD PTR [ecx+eax*8],0xad960c9b
  412621:	retf   
	...
  412652:	add    BYTE PTR [eax],al
  412654:	and    al,BYTE PTR [ecx]
  412656:	jmp    0x9dea0e91
  41265b:	pop    ss
  41265c:	pop    edi
  41265d:	lods   eax,DWORD PTR ds:[esi]
  41265e:	push   ecx
  41265f:	cmp    eax,0xc3e19644
  412664:	mov    al,0xf8
  412666:	adc    BYTE PTR [ebp-0x60],bh
  412669:	inc    esp
  41266a:	jmp    0x7661a2
  41266f:	push   ss
  412670:	(bad)  
  412671:	xchg   esi,eax
  412672:	dec    edi
  412673:	outs   dx,BYTE PTR ds:[esi]
  412674:	je     0x41266b
  412676:	dec    edi
  412677:	data16 ins BYTE PTR es:[edi],dx
  412679:	or     eax,0x96d556e8
  41267e:	inc    BYTE PTR [ecx-0x66]
  412681:	cmp    bh,bh
  412683:	dec    esi
  412684:	sub    ah,al
  412686:	or     ebp,ecx
  412688:	sub    eax,0x1b6aeb8a
  41268d:	mov    ss,WORD PTR [esi-0x3d]
  412690:	pusha  
  412691:	sub    edi,DWORD PTR [ecx]
  412693:	cs je  0x4126a3
  412696:	call   0xfed7bf30
  41269b:	jo     0x4126c1
  41269d:	cdq    
  41269e:	mov    dl,ah
  4126a0:	and    ch,ch
  4126a2:	inc    eax
  4126a3:	jmp    0x7d40fd88
  4126a8:	push   esp
  4126a9:	sub    eax,0x521a596
  4126ae:	push   edi
  4126af:	add    DWORD PTR [esi],ecx
  4126b1:	jmp    0xc5ad0fb5
  4126b6:	jae    0x4126fe
	...
  4126e8:	add    BYTE PTR [eax],al
  4126ea:	dec    esi
  4126eb:	lods   eax,DWORD PTR ds:[esi]
  4126ec:	fld    DWORD PTR [ebp-0x12]
  4126ef:	xchg   esi,eax
  4126f0:	or     ch,BYTE PTR [ecx+0x2489306c]
  4126f6:	fist   WORD PTR [esi-0x4b53e8c]
  4126fc:	(bad)  
  4126fd:	xor    al,0x5f
  4126ff:	lods   eax,DWORD PTR ds:[esi]
  412700:	test   DWORD PTR [esi+0x34fe96c7],esi
  412706:	call   FWORD PTR [esi]
  412708:	sbb    al,0xa6
  41270a:	ins    DWORD PTR es:[edi],dx
  41270b:	std    
  41270c:	out    0x20,eax
  41270e:	out    dx,al
  41270f:	xchg   ebx,eax
  412710:	(bad)  
  412711:	xchg   esi,eax
  412712:	ins    DWORD PTR es:[edi],dx
  412713:	lea    ebp,[ecx-0x36]
  412716:	fistp  WORD PTR [ecx]
  412718:	or     BYTE PTR [eax],al
  41271a:	shl    ah,cl
  41271c:	(bad)  
  41271d:	jmp    FWORD PTR [ebp+0x7b44a8e0]
  412723:	or     edi,edi
  412725:	jne    0x4126b9
  412727:	pusha  
  412728:	jae    0x412788
  41272a:	jge    0x41279d
  41272c:	or     eax,eax
  41272e:	ss xchg edi,eax
  412730:	dec    esi
  412731:	jmp    DWORD PTR [edi]
  412733:	jno    0x412783
  412735:	call   DWORD PTR [edi]
  412737:	add    eax,ebp
  412739:	ins    BYTE PTR es:[edi],dx
  41273a:	push   esp
  41273b:	jno    0x41273a
  41273d:	call   0x3ff57c
  412742:	sub    eax,0x52e8f7fb
  412747:	into   
  412748:	(bad)  
  412749:	(bad)  
  41274a:	jle    0x412701
  41274c:	mov    esi,0xb9
	...
  41277d:	add    BYTE PTR [eax],al
  41277f:	add    BYTE PTR [ebp+0x71],ch
  412782:	std    
  412783:	jmp    FWORD PTR [eax+0x22]
  412786:	aaa    
  412787:	pop    es
  412788:	xlat   BYTE PTR ds:[ebx]
  412789:	mov    ebp,?
  41278b:	jne    0x4127eb
  41278d:	jno    0x412802
  41278f:	or     BYTE PTR [edx-0x6d],dl
  412792:	push   esi
  412793:	jmp    FWORD PTR [ebp-0x793d3730]
  412799:	or     BYTE PTR [ebp-0x75],dl
  41279c:	scas   al,BYTE PTR es:[edi]
  41279d:	jo     0x412812
  41279f:	or     al,0xb2
  4127a1:	dec    edi
  4127a2:	pop    esp
  4127a3:	jmp    FWORD PTR [ebp-0x708b3ffc]
  4127a9:	loopne 0x412762
  4127ab:	inc    esp
  4127ac:	dec    ebx
  4127ad:	or     DWORD PTR [eax-0x18],edx
  4127b0:	sub    edi,ecx
  4127b2:	(bad)  
  4127b3:	dec    DWORD PTR [edx+0x70]
  4127b6:	jae    0x4127c8
  4127b8:	jp     0x41282a
  4127ba:	jae    0x4127c4
  4127bc:	repnz xchg edx,eax
  4127be:	aam    0xff
  4127c0:	in     eax,dx
  4127c1:	pusha  
  4127c2:	ins    BYTE PTR es:[edi],dx
  4127c3:	pop    edx
  4127c4:	arpl   WORD PTR [ebx-0x66],di
  4127c7:	enter  0xb221,0x2
  4127cb:	push   ebp
  4127cc:	call   0x2c04ae4a
  4127d1:	sti    
  4127d2:	sub    eax,0x9958b900
  4127d7:	je     0x412844
  4127d9:	xchg   BYTE PTR [edx-0x72d4ebaa],cl
  4127df:	inc    esp
  4127e0:	(bad)  
  4127e2:	fnstcw WORD PTR [edi]
	...
  412814:	add    BYTE PTR [eax],al
  412816:	cmp    ebx,DWORD PTR [ebp+0x2]
  412819:	cmp    BYTE PTR [esi+ebx*4],0xe
  41281d:	pop    ecx
  41281e:	mov    ecx,DWORD PTR [edi]
  412820:	inc    eax
  412821:	inc    ecx
  412822:	arpl   WORD PTR [ebx-0x56],di
  412825:	fnstenv [edi]
  412827:	sahf   
  412828:	add    cl,BYTE PTR [ebx]
  41282a:	mov    ds:0xcb56d659,eax
  41282f:	call   0x970e275a
  412834:	ret    0x9173
  412837:	and    eax,0x78bcf841
  41283c:	call   0xbb08:0x110b5969
  412843:	sub    ebx,DWORD PTR [ebx+0xf9aa4fe]
  412849:	clc    
  41284a:	or     edx,eax
  41284c:	cdq    
  41284d:	je     0x4128ba
  41284f:	mov    dh,0x1b
  412851:	dec    DWORD PTR [edx+esi*4+0x478b7499]
  412858:	out    0xfe,eax
  41285a:	mul    BYTE PTR [ebp-0x358b9456]
  412860:	cdq    
  412861:	(bad)  
  412862:	test   ch,0xaa
  412865:	std    
  412866:	or     bl,BYTE PTR [ebx-0x67]
  412869:	sti    
  41286a:	nop
  41286b:	pop    esp
  41286c:	pop    ebx
  41286d:	(bad)  
  41286e:	push   esp
  41286f:	push   es
  412870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412871:	call   0x6ace:0x2e06452
  412878:	xchg   ebp,eax
  412879:	adc    BYTE PTR [eax],al
	...
  4128ab:	add    BYTE PTR [edi],bh
  4128ad:	xchg   ebx,eax
  4128ae:	adc    ecx,DWORD PTR [ebx+ecx*2]
  4128b1:	daa    
  4128b2:	push   ds
  4128b3:	fwait
  4128b4:	sub    eax,0x60c5b033
  4128b9:	add    eax,0x87088f1c
  4128be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128bf:	xchg   edi,eax
  4128c0:	lods   eax,DWORD PTR ds:[esi]
  4128c1:	pop    ds
  4128c2:	jmp    0xd3d370f4
  4128c7:	or     edi,ebx
  4128c9:	or     BYTE PTR [esi-0x5c830266],bh
  4128cf:	xchg   edi,eax
  4128d0:	jmp    0xa42cd1a5
  4128d5:	add    eax,0x16e4da69
  4128da:	test   eax,0xa849a02b
  4128df:	add    ebp,DWORD PTR [ebx*4-0x6d331848]
  4128e6:	icebp  
  4128e7:	ret    
  4128e8:	push   eax
  4128e9:	out    0xbd,al
  4128eb:	stos   DWORD PTR es:[edi],eax
  4128ec:	xor    DWORD PTR [esi],esp
  4128ee:	push   cs
  4128ef:	call   0x1d1c:0xfc7cc569
  4128f6:	jmp    0x8094dcfe
  4128fb:	enter  0x4420,0xe9
  4128ff:	xor    edx,DWORD PTR [eax+ebx*1+0x1303abf1]
  412906:	ficomp WORD PTR [ecx-0x66d07f84]
  41290c:	jge    0x41289f
  41290e:	sbb    esp,eax
	...
  412940:	add    BYTE PTR [eax],al
  412942:	mov    ebx,0x6d99c592
  412947:	xchg   edi,eax
  412948:	mov    ds,esp
  41294a:	pop    ebp
  41294b:	sbb    BYTE PTR [eax],al
  41294d:	test   eax,0xaefc18fa
  412952:	fs std 
  412954:	out    0x9b,eax
  412956:	xchg   ecx,eax
  412957:	xchg   edx,eax
  412958:	(bad)  
  412959:	ds sbb ah,al
  41295c:	add    ebp,ecx
  41295e:	lea    edi,[esi-0x15]
  412961:	push   0x23
  412963:	stos   BYTE PTR es:[edi],al
  412964:	add    ah,0xad
  412967:	loopne 0x4129a9
  412969:	jmp    0xa04541ce
  41296e:	and    eax,0x5f02fffe
  412973:	pop    ds
  412974:	add    bl,dl
  412976:	jmp    0x41290a
  412978:	je     0x412967
  41297a:	ss add eax,0xe7c8e96a
  412980:	sub    ch,cl
  412982:	pusha  
  412983:	jl     0x4129c9
  412985:	inc    ecx
  412986:	retf   0xf818
  412989:	push   ecx
  41298a:	xor    DWORD PTR [edi+edi*8],ebp
  41298d:	ss call 0x647025db
  412993:	(bad)  
  412994:	(bad)  
  412995:	pushf  
  412996:	hlt    
  412997:	sbb    edi,edi
  412999:	push   ds
  41299a:	push   esp
  41299b:	add    DWORD PTR [edx-0x17],ebp
  41299e:	mov    es,WORD PTR ds:0x91c7e5e8
  4129a4:	(bad)  
  4129a5:	je     0x4129a7
	...
  4129d7:	add    BYTE PTR [ecx+ebx*4+0x4f],ch
  4129db:	xchg   ebx,eax
  4129dc:	pusha  
  4129dd:	pop    ds
  4129de:	add    BYTE PTR [ebx-0x11ffe46a],al
  4129e4:	gs xchg ecx,eax
  4129e6:	(bad)  
  4129e7:	cld    
  4129e8:	or     eax,0x5e940e0
  4129ed:	push   edx
  4129ee:	push   cs
  4129ef:	popa   
  4129f0:	call   0xe82b2886
  4129f5:	cmp    ah,dh
  4129f7:	add    cl,dh
  4129f9:	xchg   edi,eax
  4129fa:	mov    eax,DWORD PTR [ebp-0x56]
  4129fd:	aad    0x69
  4129ff:	add    BYTE PTR [eax-0x5dff9769],ah
  412a05:	ja     0x412a49
  412a07:	inc    ecx
  412a08:	cmp    ch,BYTE PTR [esi+0x73]
  412a0b:	hlt    
  412a0c:	in     eax,0xda
  412a0e:	jne    0xffa0171e
  412a14:	dec    edi
  412a15:	jns    0x4129fd
  412a17:	stos   DWORD PTR es:[edi],eax
  412a18:	dec    edx
  412a19:	outs   dx,BYTE PTR ds:[esi]
  412a1a:	std    
  412a1b:	mov    DWORD PTR [edi+0x61],edi
  412a1e:	or     eax,eax
  412a20:	push   ds
  412a21:	cmp    eax,0x5ce275ff
  412a26:	jmp    0x412a80
  412a28:	test   DWORD PTR [ebp-0x79],ebp
  412a2b:	inc    ebp
  412a2c:	xchg   esi,eax
  412a2d:	ins    DWORD PTR es:[edi],dx
  412a2e:	jae    0x412a20
  412a30:	mov    ds:0xa5ff513a,al
  412a35:	ins    DWORD PTR es:[edi],dx
  412a36:	jae    0x412a20
  412a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a39:	(bad)  
  412a3a:	jmp    0x412a3b
	...
  412a6c:	add    BYTE PTR [eax],al
  412a6e:	scas   eax,DWORD PTR es:[edi]
  412a6f:	je     0x412a57
  412a71:	sub    al,0xfb
  412a73:	ins    DWORD PTR es:[edi],dx
  412a74:	std    
  412a75:	or     ecx,DWORD PTR [edx-0x4597e500]
  412a7b:	add    al,0xef
  412a7d:	mov    esi,0xe807ff65
  412a82:	lahf   
  412a83:	(bad)  
  412a85:	jmp    DWORD PTR [ebp-0x1]
  412a88:	out    0xff,eax
  412a8a:	das    
  412a8b:	push   0x5cb275fd
  412a90:	pop    ebx
  412a91:	push   ebp
  412a92:	xchg   ebp,eax
  412a93:	js     0x412a92
  412a95:	jne    0x412a2d
  412a97:	pop    ebx
  412a98:	xchg   esp,eax
  412a99:	pop    eax
  412a9a:	test   DWORD PTR [eax-0x3],edi
  412a9d:	jne    0x412a49
  412a9f:	popa   
  412aa0:	stc    
  412aa1:	dec    edi
  412aa2:	arpl   WORD PTR [edi-0x45f1756a],si
  412aa8:	mov    dl,BYTE PTR [ecx]
  412aaa:	ins    BYTE PTR es:[edi],dx
  412aab:	ror    DWORD PTR [edi-0x6a69ee02],1
  412ab1:	je     0x412b12
  412ab3:	(bad)  
  412ab4:	sbb    bl,BYTE PTR [eax+0x54]
  412ab7:	pop    edi
  412ab8:	int3   
  412ab9:	rcr    DWORD PTR [edi-0x62],0x2f
  412abd:	mov    esi,DWORD PTR [edi]
  412abf:	outs   dx,DWORD PTR ds:[esi]
  412ac0:	adc    BYTE PTR [ebx+ecx*2],cl
  412ac3:	xor    edi,DWORD PTR [eax]
  412ac5:	push   DWORD PTR [ebx+eiz*4]
  412ac8:	ret    0x7a73
  412acb:	imul   BYTE PTR [esi+0x329ea243]
  412ad1:	call   0x412ad6
	...
  412b02:	add    BYTE PTR [eax],al
  412b04:	mov    bl,0xfa
  412b06:	xchg   esi,eax
  412b07:	(bad)  
  412b08:	mov    bl,0x6
  412b0a:	inc    ebp
  412b0b:	mov    edi,0x2a9ea3
  412b10:	arpl   WORD PTR [edi],di
  412b12:	push   esi
  412b13:	addr16 push cs
  412b15:	bound  eax,QWORD PTR [ebx+0x0]
  412b18:	xchg   ebx,eax
  412b19:	aas    
  412b1a:	adc    DWORD PTR [eax],ecx
  412b1c:	sti    
  412b1d:	mov    ch,0x19
  412b1f:	jmp    esp
  412b21:	xor    eax,0xd6dc57d7
  412b26:	xchg   esi,eax
  412b27:	je     0x412b90
  412b29:	inc    esi
  412b2a:	jle    0x412b87
  412b2c:	int3   
  412b2d:	out    0xa,al
  412b2f:	ror    BYTE PTR [edi-0x4b],0x2a
  412b33:	fisub  WORD PTR [edi]
  412b35:	pop    ebp
  412b36:	add    dl,BYTE PTR [eax-0x35]
  412b39:	xchg   edx,eax
  412b3a:	jmp    FWORD PTR ss:[ebp+ebp*2+0x5de4412a]
  412b42:	add    ch,BYTE PTR [eax+0x63]
  412b45:	sahf   
  412b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b47:	mov    ebp,0x413e910b
  412b4c:	arpl   WORD PTR ds:0xfd0f9739,ax
  412b52:	rcl    dl,1
  412b54:	stc    
  412b55:	(bad)  
  412b56:	aad    0xab
  412b58:	push   0x2d
  412b5a:	into   
  412b5b:	xchg   esi,eax
  412b5c:	fwait
  412b5d:	ret    0x3f0
  412b60:	push   cs
  412b61:	jl     0x412b2f
  412b63:	and    BYTE PTR [eax],0x92
  412b66:	inc    edx
  412b67:	add    al,0x0
	...
  412b99:	add    cl,cl
  412b9b:	shr    DWORD PTR [ebp-0x2b62a4f0],1
  412ba1:	xor    BYTE PTR [edi+ecx*4+0x6f],al
  412ba5:	inc    eax
  412ba6:	aas    
  412ba7:	sbb    al,0xf3
  412ba9:	xchg   esi,eax
  412baa:	scas   eax,DWORD PTR es:[edi]
  412bab:	std    
  412bac:	adc    BYTE PTR [ebx],0x2c
  412baf:	pop    DWORD PTR [ebp-0xc717fd7]
  412bb5:	or     ecx,DWORD PTR [ebx]
  412bb7:	sub    BYTE PTR [esi-0x6a],dh
  412bba:	adc    eax,0x9796cd1c
  412bbf:	std    
  412bc0:	push   eax
  412bc1:	aaa    
  412bc2:	add    al,0x8f
  412bc4:	pop    ebp
  412bc5:	xchg   esi,eax
  412bc6:	ja     0x412b59
  412bc8:	push   ebp
  412bc9:	adc    BYTE PTR [ebx-0x63],ch
  412bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bcd:	xor    ah,ch
  412bcf:	mov    gs,WORD PTR [edi]
  412bd1:	shl    DWORD PTR [eax+0x5],0x94
  412bd5:	mov    cl,al
  412bd7:	mov    ?,WORD PTR [ebx-0x730234f9]
  412bdd:	xchg   esi,eax
  412bde:	int    0xfa
  412be0:	sub    BYTE PTR [edi],cl
  412be2:	jg     0x412c01
  412be4:	in     eax,0x40
  412be6:	and    al,BYTE PTR ds:0x2ad7abb9
  412bec:	push   cs
  412bed:	xchg   esi,eax
  412bee:	sbb    al,0x1d
  412bf0:	jmp    0x9090dff8
  412bf5:	out    dx,al
  412bf6:	daa    
  412bf7:	inc    esp
  412bf8:	add    cl,ch
  412bfa:	push   eax
  412bfb:	mov    ?,WORD PTR [ecx+eiz*8+0x0]
	...
  412c2f:	add    BYTE PTR [eax-0x111983d7],bh
  412c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c36:	nop
  412c37:	ss (bad) 
  412c39:	(bad)
  412c3d:	add    eax,0x83bb6255
  412c42:	ret    
  412c43:	lds    edi,FWORD PTR [ecx]
  412c45:	add    eax,0x18f7fc6a
  412c4a:	or     cl,al
  412c4c:	mov    dl,0x32
  412c4e:	jmp    FWORD PTR [esi+0x13fc48d8]
  412c54:	dec    ecx
  412c55:	(bad)  
  412c56:	je     0x412c49
  412c58:	or     BYTE PTR [esi+edi*8-0x6a],bl
  412c5c:	into   
  412c5d:	sbb    esp,DWORD PTR [ebx]
  412c5f:	mov    ds,WORD PTR [ebp+edi*8-0x19]
  412c63:	dec    ecx
  412c64:	into   
  412c65:	mov    ?,esi
  412c67:	adc    ebx,DWORD PTR [ebx]
  412c69:	(bad)  
  412c6a:	je     0x412c4d
  412c6c:	enter  0xfe77,0x6e
  412c70:	test   BYTE PTR [esi+0x18ee6574],0x8
  412c77:	push   ecx
  412c78:	and    al,0x32
  412c7a:	call   DWORD PTR [esi+0x28]
  412c7d:	les    eax,FWORD PTR [ebx]
  412c7f:	jmp    0x6b2ca6c1
  412c84:	and    edx,DWORD PTR [esi+0x1b60d356]
  412c8a:	ds ss fs std 
  412c8e:	out    0xb9,eax
  412c90:	jl     0x412c20
  412c92:	(bad)  
  412c93:	jo     0x412c95
	...
  412cc5:	add    BYTE PTR [ecx+edx*4-0x22df2376],al
  412ccc:	inc    eax
  412ccd:	jmp    0x9540fbb2
  412cd2:	outs   dx,DWORD PTR ds:[esi]
  412cd3:	sbb    eax,0x42f7001f
  412cd8:	add    BYTE PTR [edi+0x72],dl
  412cdb:	sub    al,0x28
  412cdd:	add    BYTE PTR [edx-0x5f8b4004],cl
  412ce3:	loopne 0x412ccc
  412ce5:	ficomp WORD PTR [edx]
  412ce7:	js     0x412ce6
  412ce9:	or     ecx,edx
  412ceb:	std    
  412cec:	pop    ds
  412ced:	mov    DWORD PTR [edi+0x71],eax
  412cf0:	data16 add BYTE PTR [edx+0x68],bh
  412cf4:	mov    esp,0x40ce5268
  412cf9:	add    BYTE PTR ds:0x97fff7fc,bl
  412cff:	stc    
  412d00:	out    0xc8,eax
  412d02:	xchg   ecx,eax
  412d03:	jb     0x412d02
  412d05:	jmp    DWORD PTR [edi+0x69]
  412d08:	out    0xf1,al
  412d0a:	je     0x412d7e
  412d0c:	std    
  412d0d:	cld    
  412d0e:	sbb    ecx,ecx
  412d10:	mov    bh,0xff
  412d12:	fnsave [ecx-0x3]
  412d15:	repnz mov WORD PTR [eax+0x71a37505],?
  412d1c:	jae    0x412d1a
  412d1e:	(bad)  
  412d1f:	sti    
  412d20:	pop    es
  412d21:	call   0x40029a
  412d26:	sbb    eax,0x4c0c0
	...
  412d5b:	add    BYTE PTR [edx],cl
  412d5d:	fmul   QWORD PTR [edx-0x1db37614]
  412d63:	push   edi
  412d64:	and    BYTE PTR [ecx],cl
  412d66:	push   0x3f
  412d68:	popf   
  412d69:	sti    
  412d6a:	pop    es
  412d6b:	call   0x400292
  412d70:	inc    ebx
  412d71:	retf   
  412d72:	sti    
  412d73:	mov    edi,DWORD PTR [edi-0x45bed7b8]
  412d79:	mov    BYTE PTR ds:0x67c9d600,bh
  412d7f:	sub    eax,0x415963
  412d84:	adc    al,0x6
  412d86:	inc    eax
  412d87:	sub    DWORD PTR [ebx-0x62],esp
  412d8a:	pop    es
  412d8b:	rcl    BYTE PTR [edi],0xb8
  412d8e:	sub    ebp,eax
  412d90:	std    
  412d91:	jge    0x412d26
  412d93:	(bad)  
  412d94:	pop    eax
  412d95:	fimul  WORD PTR [esi]
  412d97:	and    dl,bl
  412d99:	(bad)  [ebx-0x5e619c99]
  412d9f:	mov    ebp,0x4148ec0b
  412da4:	arpl   WORD PTR [ebx-0x369b07e8],di
  412daa:	sti    
  412dab:	out    0xb3,eax
  412dad:	inc    edi
  412dae:	xchg   ebx,eax
  412daf:	(bad)  
  412db0:	push   esp
  412db1:	leave  
  412db2:	mov    esp,edi
  412db4:	retf   0x92f4
  412db7:	inc    BYTE PTR [edi-0x51]
  412dba:	ret    0x3cb8
  412dbd:	imul   edx,DWORD PTR [edx+0xfe],0x0
	...
  412df0:	add    BYTE PTR [eax],al
  412df2:	xor    DWORD PTR [esp+ecx*8+0x6],eax
  412df6:	mov    dh,0x35
  412df8:	sbb    al,0x0
  412dfa:	arpl   WORD PTR [ebx+0x51],si
  412dfd:	addr16 push ebp
  412dff:	loope  0x412e45
  412e01:	add    BYTE PTR [ebx+0x63414923],cl
  412e07:	sbb    ebx,DWORD PTR [ecx]
  412e09:	or     bl,bh
  412e0b:	mov    bl,0xd
  412e0d:	(bad)  
  412e0e:	cld    
  412e0f:	mov    bh,0x2
  412e11:	push   0x435934
  412e16:	jnp    0x412de0
  412e18:	inc    edi
  412e19:	inc    ecx
  412e1a:	arpl   WORD PTR [ebx-0x27],ax
  412e1d:	mov    bl,BYTE PTR es:[ebp+0x2]
  412e21:	call   0xfed2a354
  412e26:	fisub  DWORD PTR [eax-0x62]
  412e29:	imul   esp,DWORD PTR [ebx+0x5],0x46263f91
  412e30:	jmp    0xa8837750
  412e35:	add    ebp,DWORD PTR [ecx+edx*8+0x523dcc5]
  412e3c:	adc    edi,ecx
  412e3e:	cmp    ecx,DWORD PTR [ebp+edi*8-0x7d6ee084]
  412e45:	add    edi,ebx
  412e47:	sub    al,0xa4
  412e49:	inc    esp
  412e4a:	arpl   WORD PTR ds:0x5224953,bx
  412e50:	(bad)  
  412e52:	cmp    eax,0x427de
	...
  412e87:	add    BYTE PTR [ebx-0x1b],bh
  412e8a:	das    
  412e8b:	xchg   ebx,eax
  412e8c:	gs jge 0x412eba
  412e8f:	xchg   esp,eax
  412e90:	out    dx,eax
  412e91:	inc    eax
  412e92:	lds    esi,FWORD PTR [ebx]
  412e94:	retf   
  412e95:	and    al,0x2c
  412e97:	inc    ebp
  412e98:	arpl   WORD PTR ds:0x5a24943,bx
  412e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e9f:	fadd   DWORD PTR [ebp+0x4b0427dc]
  412ea5:	add    DWORD PTR [eax],esi
  412ea7:	xchg   ebx,eax
  412ea8:	sub    eax,0xe19c237d
  412ead:	or     BYTE PTR [ebp+0x3],bh
  412eb0:	xchg   edi,eax
  412eb1:	cmp    eax,0x613106a
  412eb6:	std    
  412eb7:	inc    ebp
  412eb8:	loopne 0x412ec2
  412eba:	jge    0x412ebf
  412ebc:	(bad)
  412ec0:	arpl   WORD PTR [edx-0x2906d62],bx
  412ec6:	inc    eax
  412ec7:	aaa    
  412ec8:	xchg   ecx,eax
  412ec9:	mov    cl,BYTE PTR [ebp-0x6e]
  412ecc:	outs   dx,DWORD PTR ds:[esi]
  412ecd:	xchg   ecx,eax
  412ece:	inc    ebp
  412ecf:	sbb    BYTE PTR [ebx-0x63],ch
  412ed2:	xchg   ecx,eax
  412ed3:	xor    eax,0x35ff8ad4
  412ed8:	imul   edx,DWORD PTR [ebp-0x5d374b02],0xffffff9f
  412edf:	mov    ebx,0x94fe8bd1
  412ee4:	aam    0x8b
  412ee6:	je     0x412ec9
  412ee8:	enter  0x5171,0xe
	...
  412f1c:	add    BYTE PTR [eax],al
  412f1e:	ror    DWORD PTR [ebx+0x11f10d74],1
  412f24:	call   0xe83e9c27
  412f29:	xchg   edx,eax
  412f2a:	push   esi
  412f2b:	mov    bh,dh
  412f2d:	out    dx,al
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	cdq    
  412f30:	out    0x7d,eax
  412f32:	xor    al,0x8a
  412f34:	(bad)  
  412f35:	fimul  WORD PTR [ecx+edx*4-0x19]
  412f39:	gs xor al,0x8a
  412f3c:	dec    dh
  412f3e:	dec    esp
  412f3f:	xchg   ebp,eax
  412f40:	out    0x6d,eax
  412f42:	xchg   esp,eax
  412f43:	mov    bh,dh
  412f45:	mov    esi,0x35e79d6c
  412f4a:	xchg   esp,eax
  412f4b:	mov    bh,dh
  412f4d:	scas   al,BYTE PTR es:[edi]
  412f4e:	ins    BYTE PTR es:[edi],dx
  412f4f:	mov    esi,edi
  412f51:	sbb    al,0x3f
  412f53:	mov    ds:0x8ad23bee,al
  412f58:	pop    esi
  412f59:	mov    al,ds:0x34000625
  412f5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f5f:	sahf   
  412f60:	sub    BYTE PTR [ebp+0x13001bf3],0x9f
  412f67:	mov    dh,BYTE PTR [ecx+eiz*8-0x18]
  412f6b:	jae    0x412fbe
  412f6d:	outs   dx,BYTE PTR ds:[esi]
  412f6e:	bnd jl 0x412fb5
  412f71:	gs pop ebp
  412f73:	add    eax,0x6b58e96a
  412f78:	inc    esp
  412f79:	test   al,0x60
  412f7b:	sbb    eax,0x8560e900
  412f80:	out    0x0,eax
	...
  412fb2:	add    BYTE PTR [eax],al
  412fb4:	push   es
  412fb5:	fdivp  st(6),st
  412fb7:	call   ecx
  412fb9:	lds    esi,FWORD PTR [edx+0x23]
  412fbc:	jmp    0x974:0x755f016d
  412fc3:	rcr    dh,0x9e
  412fc6:	dec    esi
  412fc7:	push   0xbeef05ca
  412fcc:	loop   0x412fec
  412fce:	inc    esp
  412fcf:	inc    ecx
  412fd0:	mov    edx,0x9275fed5
  412fd5:	ins    DWORD PTR es:[edi],dx
  412fd6:	out    dx,eax
  412fd7:	jns    0x412f6e
  412fd9:	je     0x412fc1
  412fdb:	sbb    eax,0xfffd74ef
  412fe0:	(bad)  
  412fe2:	std    
  412fe3:	jne    0x413057
  412fe5:	ins    DWORD PTR es:[edi],dx
  412fe6:	mov    ss,WORD PTR [edx-0x6b]
  412fe9:	je     0x412fb2
  412feb:	ret    0x57e
  412fee:	push   ebp
  412fef:	mov    esp,DWORD PTR [esi+0x7dfcc280]
  412ff5:	out    0xff,eax
  412ff7:	imul   ecx,DWORD PTR [ebx+0x22087376],0xf5ff50b2
  413001:	or     eax,DWORD PTR [esp+edi*8-0x4f]
  413005:	mov    bh,0x3e
  413007:	sub    BYTE PTR [ebx+0x3a3f8001],cl
  41300d:	icebp  
  41300e:	aas    
  41300f:	push   0x413f96
  413014:	jge    0x41307f
  413016:	jl     0x41303f
	...
  413048:	add    BYTE PTR [eax],al
  41304a:	or     al,BYTE PTR ds:0xa20ec00b
  413050:	push   ebp
  413051:	call   0x4006f1
  413056:	icebp  
  413057:	les    esi,FWORD PTR [edx+0x19]
  41305a:	mov    edx,0x63ffffec
  41305f:	aas    
  413060:	push   ecx
  413061:	and    DWORD PTR [bp+si+0x41],esp
  413065:	add    BYTE PTR [ebx],dh
  413067:	aas    
  413068:	push   ss
  413069:	or     bl,cl
  41306b:	pop    ss
  41306c:	or     bh,bh
  41306e:	int3   
  41306f:	inc    esi
  413070:	dec    esp
  413071:	push   ebx
  413072:	(bad)  
  413073:	xlat   BYTE PTR ds:[ebx]
  413074:	mov    ?,WORD PTR [edx]
  413076:	mov    ds:0xb4fe9025,eax
  41307b:	out    0x94,eax
  41307d:	lods   eax,DWORD PTR ds:[esi]
  41307e:	imul   edx,DWORD PTR [edi+0x71a4c015],0xffffff8e
  413085:	(bad)  
  413086:	push   ss
  413087:	xchg   esi,eax
  413088:	call   0x9a5e:0x8e87311f
  41308f:	fadd   QWORD PTR [esi]
  413091:	add    BYTE PTR [esi],ch
  413093:	and    ebx,DWORD PTR [edi+0x36a2a782]
  413099:	push   0x63
  41309b:	xor    al,0x42
  41309d:	push   esi
  41309f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130a0:	call   0xa688:0x8eb712c1
  4130a7:	ret    0x3c7a
  4130aa:	mov    ds:0x44f6,eax
	...
  4130df:	add    bl,ah
  4130e1:	mov    es,WORD PTR [edx]
  4130e3:	je     0x413088
  4130e5:	inc    esi
  4130e6:	mov    dl,0x44
  4130e8:	mov    ds:0x66e8359e,al
  4130ed:	mov    edi,0x5e580002
  4130f2:	pop    ss
  4130f3:	and    ecx,DWORD PTR [esi+eax*4+0x7f1c5dd3]
  4130fa:	cli    
  4130fb:	mov    edi,0x6832a58f
  413100:	arpl   WORD PTR [esi+0x757bbd9d],bx
  413106:	dec    eax
  413107:	inc    ecx
  413108:	arpl   WORD PTR ds:0xfd6f8eb9,ax
  41310e:	push   eax
  41310f:	out    dx,al
  413110:	imul   ecx,DWORD PTR [eax+0x319a9c55],0x4e
  413117:	(bad)  
  413118:	fcom   st(3)
  41311a:	sub    BYTE PTR [ebp-0x2b],cl
  41311d:	xchg   DWORD PTR ds:0xf056d28f,edi
  413123:	push   es
  413124:	dec    esi
  413125:	(bad)
  413128:	les    eax,FWORD PTR [eax-0x44a7140]
  41312e:	sub    BYTE PTR [eax],bl
  413130:	xchg   DWORD PTR ds:0x522490a,ebx
  413136:	mov    ecx,0x62d7b9b
  41313b:	(bad)  
  41313c:	and    al,0x1d
  41313e:	jmp    0x8087ad46
  413143:	lods   al,BYTE PTR ds:[esi]
	...
  413174:	add    BYTE PTR [eax],al
  413176:	pop    ds
  413177:	inc    esi
  413178:	jmp    0xf152adb0
  41317d:	fwait
  41317e:	or     DWORD PTR [esi+ebx*8],0xffffff8e
  413182:	test   cl,bh
  413184:	cmp    al,0x8f
  413186:	sbb    cl,BYTE PTR gs:[edx]
  413189:	pushf  
  41318a:	mov    bh,0x2d
  41318c:	(bad)  
  41318d:	mov    gs,WORD PTR [ecx-0x3b]
  413190:	xor    al,0xe8
  413192:	les    ebx,FWORD PTR [edx+0x3563452b]
  413198:	rcr    DWORD PTR [ecx+0x33a58695],0xcb
  41319f:	add    eax,0x1dee9ee9
  4131a4:	mov    al,0x48
  4131a6:	mov    ds:0x978f3905,al
  4131ab:	std    
  4131ac:	nop
  4131ad:	push   ecx
  4131ae:	mov    WORD PTR [esi+0x332e9b7d],es
  4131b4:	add    BYTE PTR [esi-0x2b],dh
  4131b7:	xchg   DWORD PTR [ebp+ebp*2-0x13],esi
  4131bb:	adc    DWORD PTR [eax],ecx
  4131bd:	push   ecx
  4131be:	das    
  4131bf:	xor    al,0xff
  4131c1:	pop    esi
  4131c2:	cmp    eax,0x60edc1bc
  4131c7:	xor    BYTE PTR [ebx-0x103d1ec3],cl
  4131cd:	je     0x4131fa
  4131cf:	xchg   ebp,eax
  4131d0:	dec    edi
  4131d1:	ds imul edi,ecx,0xffffffe7
  4131d5:	sahf   
  4131d6:	ja     0x41315e
  4131d8:	(bad)  
  4131d9:	loop   0x4131db
	...
  41320b:	add    BYTE PTR [eax+0x536a3212],ah
  413211:	mov    DWORD PTR [ecx],eax
  413213:	xchg   edi,eax
  413214:	sar    DWORD PTR [ebx+0x44],0x11
  413218:	jle    0x41319e
  41321a:	aaa    
  41321b:	mov    ebp,0x6191182
  413220:	jnp    0x413217
  413222:	(bad)  
  413223:	je     0x4131ad
  413225:	sahf   
  413226:	and    eax,0xfe87d599
  41322b:	je     0x413219
  41322d:	xchg   DWORD PTR [ecx+eiz*8-0x1a],esi
  413231:	adc    DWORD PTR [eax],ecx
  413233:	shr    DWORD PTR ds:0xe4d6ff35,1
  413239:	inc    eax
  41323a:	lock cmp edi,edi
  41323d:	push   eax
  41323e:	pop    eax
  41323f:	(bad)  
  413240:	out    0xbc,al
  413242:	shr    ebp,0x60
  413245:	xor    BYTE PTR [ebx-0x83e1d3b],cl
  41324b:	inc    ebx
  41324c:	sbb    eax,DWORD PTR [bp+di-0x5a]
  413250:	dec    esp
  413251:	std    
  413252:	out    0x51,eax
  413254:	ja     0x4131dc
  413256:	(bad)  
  413257:	pusha  
  413258:	pushf  
  413259:	mov    DWORD PTR [ecx-0x17],ebp
  41325c:	jp     0x413263
  41325e:	push   0x413de300
  413263:	add    BYTE PTR [edx+0x3],dh
  413266:	add    BYTE PTR [eax],al
  413268:	jp     0x4132d3
  41326a:	jo     0x4132c2
  41326c:	lea    edi,[eax+0x9]
  41326f:	rol    BYTE PTR [eax],0x0
	...
  4132a2:	push   ss
  4132a3:	mov    ecx,0xe9824587
  4132a8:	inc    esp
  4132a9:	inc    esi
  4132aa:	mov    ebx,0x3275ff01
  4132af:	imul   esp,eax,0xb01ca25
  4132b5:	rcl    BYTE PTR [esi],0xa5
  4132b8:	std    
  4132b9:	jne    0x41324d
  4132bb:	imul   eax,DWORD PTR [ecx],0x4e788d5d
  4132c1:	push   0x3ebd68
  4132c6:	rol    BYTE PTR [ecx],cl
  4132c8:	add    bh,ch
  4132ca:	or     al,0xeb
  4132cc:	dec    DWORD PTR [edi+0x6d]
  4132cf:	out    dx,al
  4132d0:	pop    es
  4132d1:	call   0x4022a8
  4132d6:	jb     0x413270
  4132d8:	push   ecx
  4132d9:	dec    DWORD PTR [ebp+0x62f87378]
  4132df:	nop
  4132e0:	push   ecx
  4132e1:	(bad)  
  4132e2:	jge    0x41335c
  4132e4:	jae    0x4132e2
  4132e6:	(bad)  
  4132e7:	out    dx,al
  4132e8:	pop    es
  4132e9:	call   0x4004ee
  4132ee:	add    eax,DWORD PTR [edi+0x2]
  4132f1:	add    BYTE PTR [edi-0x2],dh
  4132f4:	jmp    0xa000:0x68950683
  4132fb:	int    0xfe
  4132fd:	jne    0x413341
  4132ff:	mov    eax,ds:0x91fd502c
  413304:	xchg   DWORD PTR [ebp+0x0],eax
	...
  413337:	add    dh,cl
  413339:	and    BYTE PTR [eax],al
  41333b:	add    BYTE PTR [ebx-0x75],ah
  41333e:	dec    esp
  41333f:	addr16 mov ebx,0x8b00432c
  413345:	cmp    DWORD PTR [esi+0x41],eax
  413348:	arpl   WORD PTR [ebx],ax
  41334a:	push   ss
  41334b:	or     bl,bh
  41334d:	add    al,0x14
  41334f:	(bad)  
  413350:	cld    
  413351:	repz adc eax,0xfa61f4fc
  413357:	out    0x9c,eax
  413359:	mov    esi,0x311afe8b
  41335e:	pop    es
  41335f:	add    BYTE PTR [esi],dh
  413361:	out    0x9e,eax
  413363:	sbb    BYTE PTR [edi+0x63001ac6],0xd3
  41336a:	dec    esp
  41336b:	dec    BYTE PTR [esi+0x66]
  41336e:	call   0x2efe:0x8c332c42
  413375:	jp     0x413302
  413377:	je     0x4133d4
  413379:	push   ss
  41337a:	imul   ecx,DWORD PTR [esi-0x5c],0x73748c1b
  413381:	adc    edx,DWORD PTR [esi]
  413383:	or     BYTE PTR [ebx-0x7300c405],cl
  413389:	adc    DWORD PTR [eax+ebx*1],0xffffff84
  41338d:	add    edi,esi
  41338f:	(bad)  
  413390:	mul    BYTE PTR [ebp-0x66]
  413393:	push   esp
  413394:	and    al,0x6b
  413396:	mov    ah,BYTE PTR [edi-0x2c]
  413399:	sub    al,0x45
	...
  4133cb:	add    BYTE PTR [eax],al
  4133cd:	add    BYTE PTR [ecx+eiz*8-0xd],ah
  4133d1:	out    0x86,eax
  4133d3:	or     DWORD PTR [eax+eax*1],eax
  4133d6:	push   0xbb6510ae
  4133db:	in     eax,0x41
  4133dd:	inc    ecx
  4133de:	arpl   WORD PTR [esi+0xa],ax
  4133e1:	and    esp,DWORD PTR [ebx+0x6e]
  4133e4:	jnp    0x41342a
  4133e6:	cmp    eax,DWORD PTR ds:0xc6a66d11
  4133ec:	call   0x8156e37b
  4133f1:	add    eax,DWORD PTR [esi+0x5]
  4133f4:	jmp    0xef3a08f7
  4133f9:	push   es
  4133fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133fb:	jge    0x41346c
  4133fd:	inc    ecx
  4133fe:	jae    0x413384
  413400:	sti    
  413401:	repz add al,0xa2
  413404:	add    DWORD PTR [ebx-0x749f780b],ecx
  41340a:	jo     0x413445
  41340c:	jo     0x41344f
  41340e:	out    0xec,eax
  413410:	out    0x3,eax
  413412:	int3   
  413413:	ret    0x114d
  413416:	imul   ebp,DWORD PTR [ebp+0x33],0x3a
  41341a:	int3   
  41341b:	cmp    DWORD PTR ds:0xbb845711,0xfffffffb
  413422:	les    ebp,FWORD PTR [eax]
  413424:	sahf   
  413425:	mov    dh,BYTE PTR [ebp-0x5278647d]
  41342b:	stc    
  41342c:	lock fwait
  41342e:	in     eax,dx
  41342f:	rcl    BYTE PTR ds:0x8b,cl
	...
  413461:	add    BYTE PTR [eax],al
  413463:	add    BYTE PTR [ebp+0xf8af0f9],bl
  413469:	sbb    DWORD PTR [esi],eax
  41346b:	adc    DWORD PTR [ebx+0x6d],ebx
  41346e:	sbb    eax,0x1f83843a
  413473:	(bad)  
  413474:	push   eax
  413475:	add    eax,0x87887e94
  41347a:	lods   al,BYTE PTR ds:[esi]
  41347b:	mov    edx,DWORD PTR [esi]
  41347d:	mov    BYTE PTR [ebx],bl
  41347f:	ins    DWORD PTR es:[edi],dx
  413480:	ss (bad) 
  413482:	call   0x6a430b8a
  413487:	enter  0x33ef,0x28
  41348b:	add    al,0x63
  41348d:	stc    
  41348e:	cmp    DWORD PTR [edi+0xc87],eax
  413494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413495:	add    eax,0x4a553500
  41349a:	inc    esp
  41349b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41349c:	pusha  
  41349d:	add    eax,0xca21e900
  4134a2:	imul   ecx
  4134a4:	pusha  
  4134a5:	add    eax,0x81a35c00
  4134aa:	dec    edi
  4134ab:	je     0x413450
  4134ad:	jge    0x4134fe
  4134af:	adc    ebx,DWORD PTR [edi-0x13]
  4134b2:	popa   
  4134b3:	das    
  4134b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134b5:	add    eax,0x3073d4ff
  4134ba:	inc    ecx
  4134bb:	jmp    0xaab4f7ad
  4134c0:	fld    QWORD PTR [ecx]
  4134c2:	clc    
  4134c3:	jmp    0xccc47534
	...
  4134f8:	add    BYTE PTR [eax],al
  4134fa:	fadd   QWORD PTR [edx-0x6b2018e]
  413500:	sti    
  413501:	push   edx
  413502:	mov    edx,0xe9ff8ad8
  413507:	clc    
  413508:	pop    ss
  413509:	cs push edx
  41350b:	and    edi,edi
  41350d:	lahf   
  41350e:	test   al,0x83
  413510:	jne    0x4134eb
  413512:	fyl2xp1 
  413514:	pop    es
  413515:	add    edx,ecx
  413517:	cmp    dh,0xe
  41351a:	dec    edx
  41351b:	or     BYTE PTR [ecx+eax*1-0x1b],0x48
  413520:	add    ebp,DWORD PTR [edx+0x5b]
  413523:	jge    0x413524
  413525:	jl     0x41358a
  413527:	xchg   BYTE PTR ds:0xfe5a53e9,bh
  41352d:	pop    esp
  41352e:	fild   DWORD PTR [ebx-0x3a767fec]
  413534:	push   DWORD PTR [esi]
  413536:	sbb    BYTE PTR [ebx+eax*1-0x17],al
  41353a:	test   DWORD PTR [esi+0x45b900eb],ecx
  413540:	repnz push ebx
  413542:	std    
  413543:	inc    ecx
  413544:	clc    
  413545:	add    BYTE PTR [edx+0x6],cl
  413548:	add    bh,al
  41354a:	jg     0x4134e1
  41354c:	(bad)  
  41354d:	(bad)  
  41354e:	cmp    al,BYTE PTR [esi]
  413550:	push   DWORD PTR [ebp+0x2a]
  413553:	std    
  413554:	inc    ebx
  413555:	cld    
  413556:	fistp  DWORD PTR [ecx]
  413558:	cld    
  413559:	push   0xa
  41355b:	and    BYTE PTR [eax],al
  41355d:	push   0x0
	...
  41358f:	add    dl,bh
  413591:	pop    ds
  413592:	add    bh,bh
  413594:	jp     0x2047ab97
  41359a:	add    BYTE PTR [edx+0xa],ch
  41359d:	sahf   
  41359e:	retf   0xfa22
  4135a1:	add    eax,0x530ec00b
  4135a6:	dec    esi
  4135a7:	push   eax
  4135a8:	and    ch,BYTE PTR [ebx]
  4135aa:	push   ecx
  4135ab:	jmp    DWORD PTR ds:0x3f843fe
  4135b1:	and    BYTE PTR [eax],al
  4135b3:	push   0xffffffba
  4135b5:	push   DWORD PTR ss:[ebp+0x72]
  4135b9:	mov    WORD PTR [ebx-0x4],?
  4135bc:	test   DWORD PTR [edx],edx
  4135be:	or     al,0x6a
  4135c0:	mov    edx,0x1ce8001f
  4135c5:	imul   edi,esi,0xffffffff
  4135c8:	add    DWORD PTR [ebp+0x73],0xf812650f
  4135cf:	call   0x406c72
  4135d4:	cmp    eax,0x8a00f842
  4135d9:	add    eax,0x8e078300
  4135de:	(bad)  
  4135df:	jae    0x413615
  4135e1:	mov    WORD PTR [ebx+0x8],?
  4135e4:	test   DWORD PTR [edx],edx
  4135e6:	clc    
  4135e7:	call   0x24bc4f
  4135ec:	push   esp
  4135ed:	fs ret 0x8c73
  4135f1:	push   ds
  4135f2:	mov    DWORD PTR [eax+eax*1+0x0],esi
	...
  413626:	pop    ebx
  413627:	push   esi
  413628:	add    esp,DWORD PTR [edx]
  41362a:	arpl   WORD PTR [esi+0x29],bp
  41362d:	add    esp,DWORD PTR [edx]
  41362f:	in     al,0xaa
  413631:	jmp    0x4aae:0xccaee79
  413638:	sar    bh,0x1c
  41363b:	cmp    al,0x9c
  41363d:	in     eax,dx
  41363e:	inc    edx
  41363f:	outs   dx,BYTE PTR ds:[esi]
  413640:	add    cl,BYTE PTR [ebx]
  413642:	and    eax,DWORD PTR [ebx-0x694cb013]
  413648:	nop
  413649:	dec    edi
  41364a:	cld    
  41364b:	idiv   DWORD PTR [ecx+0x44]
  41364e:	out    dx,eax
  41364f:	adc    eax,0xe276ff33
  413654:	xor    ebp,eax
  413656:	inc    esp
  413657:	mov    ebp,0x70c8fe87
  41365c:	inc    edx
  41365d:	sbb    BYTE PTR [ebx-0x332ef292],0xc1
  413664:	mov    ah,bh
  413666:	mov    ds:0xe8fe879e,al
  41366b:	mov    cl,0x8e
  41366d:	pop    edx
  41366e:	stos   BYTE PTR es:[edi],al
  41366f:	sub    al,0xf7
  413671:	call   DWORD PTR [edi]
  413673:	repz xchg esi,eax
  413675:	sbb    BYTE PTR [edi-0x1fa8cec6],0x59
  41367c:	stc    
  41367d:	sub    BYTE PTR [edx],ah
  41367f:	outs   dx,BYTE PTR ds:[esi]
  413680:	add    dh,BYTE PTR [ebp+0x65]
  413683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413684:	sub    cl,cl
  413686:	mov    eax,ds:0x8d0272
	...
  4136bb:	add    BYTE PTR [esi],ah
  4136bd:	jle    0x4136f0
  4136bf:	(bad)  
  4136c0:	out    dx,al
  4136c1:	popa   
  4136c2:	call   0x5987:0xe6051530
  4136c9:	inc    ebp
  4136ca:	in     eax,dx
  4136cb:	jg     0x41365c
  4136cd:	push   es
  4136ce:	jmp    0xcd4318d6
  4136d3:	add    al,0x63
  4136d5:	adc    eax,0x17e1f6e9
  4136da:	call   0x3bc199e2
  4136df:	mov    BYTE PTR ds:0xe89cb0fa,dh
  4136e5:	frstor [ebp-0x12baa679]
  4136eb:	and    BYTE PTR [eax+0x6],0xe9
  4136ef:	add    edx,DWORD PTR [edx+edi*8]
  4136f2:	mov    WORD PTR [edi+0xb107d97],es
  4136f8:	popf   
  4136f9:	(bad)  
  4136fa:	call   0x75c0489a
  4136ff:	xchg   ebx,ebp
  413701:	leave  
  413702:	jl     0x41368b
  413704:	ja     0x413687
  413706:	gs adc ebx,ebp
  413709:	in     al,dx
  41370a:	int3   
  41370b:	cmp    eax,0xc4410522
  413710:	(bad)  
  413711:	jg     0x413760
  413713:	jge    0x41373c
  413715:	ins    DWORD PTR es:[edi],dx
  413716:	inc    ebp
  413717:	adc    edi,eax
  413719:	jg     0x4136ce
  41371b:	mov    eax,DWORD PTR [eax+ecx*4-0x52]
  41371f:	inc    esp
	...
  413750:	add    BYTE PTR [eax],al
  413752:	arpl   WORD PTR [ebp+0x7b],bp
  413755:	xchg   BYTE PTR [ebp-0x40be9081],ch
  41375b:	sbb    DWORD PTR [ebx+0x6d0e9c97],0x5d
  413762:	xchg   esp,eax
  413763:	jg     0x41374d
  413765:	or     BYTE PTR [edi],0x6d
  413768:	call   0xe8e11863
  41376d:	add    esp,DWORD PTR [ebx-0x7c]
  413770:	push   DWORD PTR [ebx-0x2c]
  413773:	jg     0x413782
  413775:	gs bnd jg 0x413777
  413779:	jmp    0xd229305b
  41377e:	push   ecx
  41377f:	es add cl,ch
  413782:	fyl2xp1 
  413784:	out    0x62,eax
  413786:	out    0x8b,al
  413788:	(bad)  
  413789:	cwde   
  41378a:	out    0xd5,eax
  41378c:	jmp    0x52f9:0x3bb05d0f
  413793:	or     eax,0x95df03c
  413798:	sub    al,0xd9
  41379a:	leave  
  41379b:	add    ch,BYTE PTR [eax+ebp*1]
  41379e:	arpl   WORD PTR [ebx],cx
  4137a0:	adc    BYTE PTR [ebp+0x6909f530],0xe4
  4137a7:	cmp    eax,0x6ae0ec77
  4137ac:	das    
  4137ad:	xchg   edx,eax
  4137ae:	(bad)  
  4137af:	(bad)  
  4137b0:	jmp    0x4137da
  4137b2:	fild   WORD PTR [edx+0x9]
  4137b5:	test   eax,0x0
	...
  4137e6:	add    BYTE PTR [eax],al
  4137e8:	rol    BYTE PTR [edx],0xa
  4137eb:	sub    eax,0x300acd8a
  4137f0:	jae    0x413841
  4137f2:	pop    eax
  4137f3:	pusha  
  4137f4:	fwait
  4137f5:	popa   
  4137f6:	(bad)  
  4137f7:	aam    0xe8
  4137f9:	pop    DWORD PTR [ecx+ecx*2+0x5]
  4137fd:	retf   0xe9d7
  413800:	pusha  
  413801:	add    eax,0x59236400
  413806:	dec    edi
  413807:	ret    
  413808:	addr16 jmp 0x41380a
  41380b:	xchg   edx,eax
  41380c:	pusha  
  41380d:	jmp    0x41380e
  41380f:	xchg   edx,eax
  413810:	pusha  
  413811:	nop
  413812:	inc    esp
  413813:	xor    eax,0xe0147e50
  413818:	scas   eax,DWORD PTR es:[edi]
  413819:	(bad)  
  41381c:	xchg   ecx,eax
  41381d:	inc    edx
  41381e:	jb     0x413842
  413820:	or     DWORD PTR ds:0x65f600d8,ecx
  413826:	std    
  413827:	jne    0x41387f
  413829:	xchg   DWORD PTR [ebx-0x28],esi
  41382c:	jge    0x41383c
  41382e:	in     al,0xff
  413830:	mov    bh,0x9d
  413832:	std    
  413833:	jne    0x413877
  413835:	call   0x75fd:0x881dfcbb
  41383c:	add    ah,BYTE PTR [ecx+0x24a2096]
  413842:	push   DWORD PTR [ebp+0x1e]
  413845:	mov    eax,ds:0x87fd4f78
  41384a:	std    
  41384b:	jne    0x41384d
	...
  41387d:	add    dl,dl
  41387f:	mov    al,ds:0x87fd4f70
  413884:	std    
  413885:	jne    0x41386d
  413887:	mov    al,ds:0x87dd4f68
  41388c:	mov    eax,DWORD PTR [ebp-0x76]
  41388f:	cmp    eax,ebp
  413891:	nop
  413892:	push   edi
  413893:	mov    ch,bh
  413895:	pop    edi
  413896:	dec    esp
  413897:	mov    edx,0x2efa0cc0
  41389c:	mov    ebp,esp
  41389e:	jns    0x4138e5
  4138a0:	cli    
  4138a1:	push   0xffffffca
  4138a3:	sbb    eax,DWORD PTR [ebp-0x1]
  4138a6:	mov    bh,0x79
  4138a8:	out    0x81,al
  4138aa:	out    dx,al
  4138ab:	mov    ch,bh
  4138ad:	mov    edi,esi
  4138af:	test   ebp,edi
  4138b1:	jne    0x413865
  4138b3:	cdq    
  4138b4:	and    ch,bh
  4138b6:	ins    DWORD PTR es:[edi],dx
  4138b7:	mov    BYTE PTR [eax+0x5],ch
  4138ba:	and    bh,bh
  4138bc:	push   ecx
  4138bd:	(bad)  
  4138be:	jge    0x41393c
  4138c0:	mov    esi,0x68319c74
  4138c5:	mul    DWORD PTR [ebx+0x2f]
  4138c8:	inc    esp
  4138c9:	add    bl,bh
  4138cb:	imul   eax,DWORD PTR [edx],0xffffffef
  4138ce:	lds    edx,FWORD PTR [ebx+0x6c224625]
  4138d4:	xor    bh,bh
  4138d6:	out    dx,al
  4138d7:	arpl   WORD PTR [edx-0x7c910ec3],bx
  4138dd:	out    0x4e,eax
  4138df:	aaa    
  4138e0:	test   esi,edi
	...
  413912:	add    BYTE PTR [eax],al
  413914:	pop    esp
  413915:	rol    BYTE PTR [edi-0x65993102],cl
  41391b:	xchg   DWORD PTR [edi+0x21c8834b],ebx
  413921:	imul   eax,DWORD PTR [edx],0x55
  413924:	call   0x3804b873
  413929:	sbb    al,0x1a
  41392b:	add    BYTE PTR [ecx+0x5b748524],bh
  413931:	xchg   esi,eax
  413932:	xlat   BYTE PTR ds:[ebx]
  413933:	dec    ebx
  413934:	sbb    al,0x9c
  413936:	jns    0x41397c
  413938:	pop    ss
  413939:	call   0x2d7c7903
  41393e:	add    al,0x80
  413940:	inc    esp
  413941:	outs   dx,BYTE PTR ds:[esi]
  413942:	push   cs
  413943:	push   ecx
  413944:	mov    ebx,eax
  413946:	cmp    al,0x41
  413948:	arpl   WORD PTR [ebx],bx
  41394a:	pushf  
  41394b:	jne    0x41398f
  41394d:	outs   dx,BYTE PTR ds:[esi]
  41394e:	add    cl,BYTE PTR [ebx]
  413950:	and    ebx,DWORD PTR [ebx+0x0]
  413953:	jmp    0x4139c1
  413955:	push   esi
  413956:	pusha  
  413957:	inc    ebp
  413958:	and    ch,BYTE PTR [esi+0x2b]
  41395b:	call   0x4546a6
  413960:	pop    eax
  413961:	cs mov db2,esp
  413965:	(bad)  
  413966:	jp     0x4139bf
  413968:	mov    ah,0x33
  41396a:	clc    
  41396b:	mov    edi,0x68325537
  413970:	arpl   WORD PTR ds:0xedde94e9,ax
  413976:	push   edi
  413977:	cmp    eax,0x0
	...
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	and    al,BYTE PTR ds:0xd1784b9
  4139b0:	add    DWORD PTR ds:0x9b057c10,ecx
  4139b6:	ret    0xfdcb
  4139b9:	cmp    DWORD PTR [eax+0x38],0x29
  4139bd:	dec    edx
  4139be:	ins    DWORD PTR es:[edi],dx
  4139bf:	jl     0x4139ae
  4139c1:	xor    DWORD PTR [edx-0x55],0x20
  4139c5:	or     edx,esi
  4139c7:	lods   al,BYTE PTR ds:[esi]
  4139c8:	(bad)  
  4139ca:	pop    eax
  4139cb:	jl     0x413a28
  4139cd:	or     al,0x3b
  4139cf:	add    al,0x1d
  4139d1:	add    DWORD PTR [ebp-0x24],0xffffffaf
  4139d5:	inc    esi
  4139d6:	pusha  
  4139d7:	add    eax,0x86488f14
  4139dc:	lods   al,BYTE PTR ds:[esi]
  4139dd:	push   esp
  4139de:	xor    eax,0x9f91ad7c
  4139e3:	jns    0x413a1d
  4139e5:	adc    DWORD PTR [edi+0x68f99e15],0x6d
  4139ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139ed:	and    al,0x63
  4139ef:	add    eax,0x825543e2
  4139f4:	mov    ebx,0xa6056305
  4139f9:	leave  
  4139fa:	in     al,dx
  4139fb:	add    al,0xe9
  4139fd:	add    esp,DWORD PTR [ebx+0x44]
  413a00:	and    esi,DWORD PTR [ebp+eiz*8+0x3]
  413a04:	jmp    0xd346830c
  413a09:	add    ecx,DWORD PTR [ecx+0x5]
  413a0c:	ret    
  413a0d:	add    eax,DWORD PTR [eax]
	...
  413a3f:	add    dh,bl
  413a41:	rcr    DWORD PTR [eax-0x2c],0xd7
  413a45:	cmp    DWORD PTR [eax],0x987bbd7b
  413a4b:	sub    BYTE PTR [edi],0x7d
  413a4e:	push   DWORD PTR ds:0x4fe77faa
  413a54:	jg     0x413a5b
  413a56:	add    dl,dh
  413a58:	and    al,bh
  413a5a:	add    al,0x10
  413a5c:	pop    ss
  413a5d:	add    eax,0x9378e900
  413a62:	daa    
  413a63:	test   al,0x60
  413a65:	jl     0x413adb
  413a67:	(bad)  [eax]
  413a69:	inc    ebp
  413a6a:	push   eax
  413a6b:	(bad)  
  413a6c:	loope  0x413a39
  413a6e:	mov    bl,BYTE PTR [ecx]
  413a70:	rol    BYTE PTR [eax+0x7ae1f6ef],cl
  413a76:	dec    edi
  413a77:	cmp    ecx,edi
  413a79:	mov    ch,0x50
  413a7b:	fsubrp st(1),st
  413a7d:	lea    eax,[ebp+eax*8-0x3e018437]
  413a84:	pop    ecx
  413a85:	retf   
  413a86:	inc    dh
  413a88:	rol    ecx,cl
  413a8a:	repz sbb DWORD PTR [edi+0xc],eax
  413a8e:	inc    edi
  413a8f:	sub    BYTE PTR [edi+0x7a],ah
  413a92:	mov    ah,0xbd
  413a94:	test   eax,0x1ba6fe7b
  413a99:	psubsb mm6,mm1
  413a9c:	das    
  413a9d:	jl     0x413a9d
  413a9f:	pusha  
  413aa0:	fist   DWORD PTR [edx-0xa]
  413aa3:	mov    es,WORD PTR [eax]
	...
  413ad5:	add    cl,ah
  413ad7:	in     al,dx
  413ad8:	call   DWORD PTR [eax]
  413ada:	pop    edi
  413adb:	ret    0xe940
  413ade:	loope  0x413a91
  413ae0:	jmp    0x413b60
  413ae2:	loope  0x413b5f
  413ae4:	(bad)  
  413ae5:	hlt    
  413ae6:	push   esp
  413ae7:	ins    DWORD PTR es:[edi],dx
  413ae8:	in     al,dx
  413ae9:	mov    ecx,0x64887be1
  413aee:	dec    eax
  413aef:	jae    0x413aef
  413af1:	push   esi
  413af2:	mov    esi,0x980a667a
  413af7:	(bad)  
  413afa:	and    eax,0x75f7eabd
  413aff:	xchg   ebp,edi
  413b01:	jne    0x413ac9
  413b03:	out    dx,al
  413b04:	rcl    BYTE PTR [eax+0x75],1
  413b07:	xchg   DWORD PTR [edi-0x200917b],eax
  413b0d:	inc    DWORD PTR [edi]
  413b0f:	(bad)  
  413b10:	shl    bh,cl
  413b12:	jne    0x413a9b
  413b14:	dec    esi
  413b15:	push   0x3f4fb1
  413b1a:	gs mov ebp,0x8475f7ea
  413b20:	std    
  413b21:	jne    0x413aa9
  413b23:	out    dx,al
  413b24:	mov    al,0x50
  413b26:	jne    0x413aac
  413b28:	or     eax,eax
  413b2a:	mov    esi,0xebd831e
  413b2f:	cld    
  413b30:	std    
  413b31:	(bad)  
  413b32:	ds jae 0x413b43
  413b35:	jmp    FWORD PTR [edx-0x6c]
  413b38:	and    eax,0x0
	...
  413b6b:	add    ch,bh
  413b6d:	cmp    ebp,0x50
  413b70:	adc    al,BYTE PTR [ecx*2+0x12e7f5ff]
  413b77:	or     edi,edx
  413b79:	jl     0x413b7f
  413b7b:	push   eax
  413b7c:	repnz outs dx,DWORD PTR ds:[esi]
  413b7e:	dec    ebx
  413b7f:	push   ebp
  413b81:	retf   
  413b82:	and    eax,0xffffffed
  413b85:	cmp    ebp,0x15
  413b88:	cli    
  413b89:	add    eax,0x6e0a6a00
  413b8e:	sub    BYTE PTR [edi+0x4b],al
  413b91:	add    edi,edi
  413b93:	mov    ch,0xe6
  413b95:	sti    
  413b96:	std    
  413b97:	push   DWORD PTR [ebp+0x72]
  413b9a:	or     ch,al
  413b9c:	mov    dh,0x55
  413b9e:	std    
  413b9f:	call   DWORD PTR [ebx-0x7e]
  413ba2:	(bad)  
  413ba4:	arpl   bx,dx
  413ba6:	sub    BYTE PTR [ecx+0x63],0x44
  413baa:	enter  0x2246,0x6c
  413bae:	jg     0x413b64
  413bb0:	(bad)  
  413bb1:	xor    al,BYTE PTR [ecx+0xeb8acfe]
  413bb7:	call   0xfec0d7ce
  413bbc:	jmp    0x851a:0x94f653e8
  413bc3:	mov    esp,0xfe811aab
  413bc8:	arpl   WORD PTR [ebx-0x7a],bx
  413bcb:	xchg   ebx,eax
  413bcc:	arpl   WORD PTR [edx+eax*1+0x68],bp
	...
  413c00:	add    BYTE PTR [eax],al
  413c02:	adc    ah,BYTE PTR [ebx-0x5720003f]
  413c08:	jbe    0x413c59
  413c0a:	xor    BYTE PTR fs:[esi+esi*8+0x5c],bl
  413c0f:	pusha  
  413c10:	push   0x6b
  413c12:	rcl    DWORD PTR [edi+0x7f],1
  413c15:	or     ah,BYTE PTR [ebx]
  413c17:	(bad)  
  413c19:	add    dh,0x52
  413c1c:	add    dh,BYTE PTR [ebp+esi*4-0x15]
  413c20:	mov    ebp,0x7fb82ce3
  413c25:	push   DWORD PTR [eax+0x3bbc84c1]
  413c2b:	mov    al,0x7f
  413c2d:	(bad)  
  413c2e:	arpl   WORD PTR [edx],bx
  413c30:	call   0x6fafaf9c
  413c35:	mov    ebp,0xe80c1a0c
  413c3a:	xchg   ecx,eax
  413c3b:	and    eax,0x39fcfe81
  413c40:	imul   esi,esi,0xfffffff4
  413c43:	idiv   DWORD PTR [edi+0x74]
  413c46:	pop    ebx
  413c47:	xchg   BYTE PTR [eax+0x48],cl
  413c4a:	in     al,0xe7
  413c4c:	jg     0x413c02
  413c4e:	mov    DWORD PTR ds:0x78d5805e,0xbdbb0bd3
  413c58:	lahf   
  413c59:	add    ch,0x78
  413c5c:	shl    DWORD PTR [edi-0x43],cl
  413c5f:	mov    dl,0x20
  413c61:	js     0x413c18
  413c63:	js     0x413ca2
  413c65:	test   BYTE PTR [eax],0x0
	...
  413c98:	fs ins DWORD PTR es:[edi],dx
  413c9a:	mov    cl,0xca
  413c9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c9d:	js     0x413ccc
  413c9f:	mov    dh,0xbc
  413ca1:	jo     0x413cc8
  413ca3:	adc    BYTE PTR [ebp+0x556bf0f2],0xce
  413caa:	adc    eax,0x2cb28580
  413caf:	js     0x413d2e
  413cb1:	js     0x413cb8
  413cb3:	neg    BYTE PTR [ebp+ebp*2+0x71]
  413cb7:	retf   0x786d
  413cba:	cmc    
  413cbb:	mov    ch,0x94
  413cbd:	jo     0x413cac
  413cbf:	jg     0x413d1e
  413cc1:	repnz lock imul edx,edi,0xffffffce
  413cc6:	fnstsw WORD PTR [edi+0x4d]
  413cc9:	mov    dl,0xb0
  413ccb:	ja     0x413d12
  413ccd:	js     0x413c8f
  413ccf:	xchg   DWORD PTR [eax-0x10803a88],ebp
  413cd5:	ins    BYTE PTR es:[edi],dx
  413cd6:	mov    ch,0x7f
  413cd8:	sub    eax,0x25d0346d
  413cdd:	js     0x413c8c
  413cdf:	mov    ecx,0x7fa57038
  413ce4:	cld    
  413ce5:	cmc    
  413ce6:	sub    al,0x7f
  413ce8:	or     eax,0xd685b78
  413ced:	js     0x413c7c
  413cef:	ins    BYTE PTR es:[edi],dx
  413cf0:	xchg   cl,cl
  413cf2:	test   DWORD PTR [edi-0xb],edi
  413cf5:	mov    cl,0x98
  413cf7:	ja     0x413ce6
  413cf9:	ja     0x413cfa
  413cfb:	add    BYTE PTR [eax],0x0
	...
  413d2e:	or     ah,cl
  413d30:	(bad)  
  413d31:	outs   dx,BYTE PTR ds:[esi]
  413d32:	pop    esp
  413d33:	mov    cl,0xeb
  413d35:	pop    esi
  413d36:	push   esp
  413d37:	ja     0x413d37
  413d39:	aam    0x5c
  413d3b:	js     0x413db1
  413d3d:	loope  0x413d77
  413d3f:	inc    edx
  413d40:	cld    
  413d41:	dec    esi
  413d42:	cmp    al,0x77
  413d44:	mov    ah,0x55
  413d46:	sub    al,0x77
  413d48:	(bad)  
  413d49:	push   ecx
  413d4a:	ins    BYTE PTR es:[edi],dx
  413d4b:	leave  
  413d4c:	(bad)  
  413d4d:	ss and al,0xc1
  413d50:	test   DWORD PTR [eax+0x39],0x1426fe79
  413d57:	icebp  
  413d58:	sti    
  413d59:	adc    esi,ebx
  413d5b:	sbb    DWORD PTR [eax],eax
  413d5d:	jmp    0xe94c8379
  413d62:	fwait
  413d63:	mov    ch,bl
  413d65:	push   0x2b
  413d67:	mov    WORD PTR fs:[esp+ebp*8-0x610c9839],fs
  413d6f:	(bad)  
  413d70:	inc    DWORD PTR [eax-0x16bf3ee7]
  413d76:	aad    0xf1
  413d78:	or     edx,ecx
  413d7a:	test   esi,eax
  413d7c:	(bad)  
  413d7d:	(bad)  
  413d7e:	pop    ecx
  413d7f:	inc    ebp
  413d80:	jae    0x413dc4
  413d82:	pop    ss
  413d83:	test   BYTE PTR [ebp+eax*8+0x5c],bh
  413d87:	lock pop esi
  413d89:	mov    esi,0xb1448670
  413d8e:	(bad)  
  413d90:	div    DWORD PTR [ebp+0x0]
	...
  413dc2:	add    BYTE PTR [eax],al
  413dc4:	addr16 add eax,0x3e5c1f00
  413dca:	inc    esp
  413dcb:	mov    eax,ds:0xe9000594
  413dd0:	jns    0x413d96
  413dd2:	(bad)  
  413dd3:	adc    al,0x7f
  413dd5:	fiadd  WORD PTR [ebx]
  413dd7:	add    BYTE PTR [ebp+0x40],al
  413dda:	dec    BYTE PTR [edi+eax*2+0x16e84eed]
  413de1:	sbb    DWORD PTR [eax],eax
  413de3:	add    BYTE PTR [ecx-0x42],cl
  413de6:	or     ch,BYTE PTR [edx-0x36]
  413de9:	xchg   ebp,eax
  413dea:	inc    ebx
  413deb:	in     al,0xa
  413ded:	imul   edi,DWORD PTR [ecx-0xfd04ba],0x75
  413df4:	sahf   
  413df5:	jmp    0xc009:0xf71d4edc
  413dfc:	test   BYTE PTR [esi],0x50
  413dff:	push   0xbeef02bb
  413e04:	cli    
  413e05:	div    DWORD PTR [ebx+0x8]
  413e08:	jb     0x413daf
  413e0a:	imul   edi,edi,0x6d
  413e0d:	jmp    0x4dfd:0xf76d4bac
  413e14:	push   edx
  413e15:	cmp    DWORD PTR [ebx-0x8],0xffffff8a
  413e19:	jge    0x413dd1
  413e1b:	call   0x3e893a
  413e20:	inc    ebx
  413e21:	les    eax,FWORD PTR [esi]
  413e23:	add    bh,dh
  413e25:	mov    ch,dl
  413e27:	add    DWORD PTR [eax],0x0
	...
  413e5a:	push   es
  413e5b:	test   DWORD PTR [eax+0x0],ebp
  413e5e:	mov    al,0x40
  413e60:	std    
  413e61:	jne    0x413ea5
  413e63:	jmp    0x4587:0xf82d48c0
  413e6a:	push   ds
  413e6b:	imul   edx,edi,0xff017b46
  413e71:	xor    eax,0x412a55
  413e76:	int    0x6d
  413e78:	push   es
  413e79:	call   0x3ec378
  413e7e:	jb     0x413e5a
  413e80:	inc    esp
  413e81:	inc    ecx
  413e82:	arpl   WORD PTR [edx+ebp*8+0x1],bp
  413e86:	arpl   WORD PTR [edx+eax*4-0x2],bp
  413e8a:	outs   dx,BYTE PTR ds:[esi]
  413e8b:	je     0x413ef7
  413e8d:	fucomp st(7)
  413e8f:	idiv   BYTE PTR [esi+edi*8+0x2e]
  413e93:	inc    edi
  413e94:	sub    DWORD PTR [ecx+0x63],eax
  413e97:	out    0xf6,eax
  413e99:	pop    es
  413e9a:	retf   
  413e9b:	adc    al,0x7d
  413e9d:	dec    ah
  413e9f:	push   ebx
  413ea0:	add    BYTE PTR [eax],al
  413ea2:	arpl   sp,bp
  413ea4:	jl     0x413f1a
  413ea6:	imul   eax,esp,0x1f
  413ea9:	push   DWORD PTR [esi+edi*4+0x36af747c]
  413eb0:	test   DWORD PTR [edi],0xfecbf1bb
  413eb6:	pushf  
  413eb7:	and    al,0x42
  413eb9:	add    esp,DWORD PTR [ebx-0x47]
  413ebc:	xchg   ebx,ebp
	...
  413eee:	add    BYTE PTR [eax],al
  413ef0:	loopne 0x413f11
  413ef2:	pusha  
  413ef3:	push   ebp
  413ef4:	sub    al,0x82
  413ef6:	add    ch,BYTE PTR [edx+0x2b]
  413ef9:	pop    es
  413efa:	test   DWORD PTR [edi],0xfeca9f8b
  413f00:	ins    BYTE PTR es:[edi],dx
  413f01:	hlt    
  413f02:	(bad)  
  413f03:	sti    
  413f04:	loopne 0x413eb6
  413f06:	dec    ebp
  413f07:	sub    eax,0xf025ea2
  413f0c:	fistp  QWORD PTR [ecx-0x209cffff]
  413f12:	cmp    eax,0x41d75d1
  413f17:	add    BYTE PTR [edx+ebp*8+0x42],ch
  413f1b:	add    BYTE PTR [ebx+0x5e],ah
  413f1e:	jg     0x413f5c
  413f20:	or     al,BYTE PTR ds:0x6c24ffc3
  413f26:	xchg   BYTE PTR [edx-0x7cfda19e],dh
  413f2c:	push   esi
  413f2d:	add    eax,0x5a22d84
  413f32:	jmp    0xe7ed1e43
  413f37:	add    esp,DWORD PTR [ebx-0x78]
  413f3a:	retf   
  413f3b:	mov    ds:0x3e8c646,al
  413f40:	pop    esp
  413f41:	mov    DWORD PTR [edi+0x2],ebx
  413f44:	arpl   WORD PTR ds:0x24063e6a,ax
  413f4a:	sub    BYTE PTR [ebx+eiz*2],al
  413f4d:	add    al,0x6d
  413f4f:	(bad)  
  413f50:	arpl   WORD PTR ds:0x80e9,ax
	...
  413f86:	xchg   DWORD PTR [esi+0x74bcc306],ebx
  413f8c:	fld    QWORD PTR [edi+0x3e90635]
  413f92:	loopne 0x413fc6
  413f94:	adc    al,0x2d
  413f96:	and    al,BYTE PTR ds:0xf7e70ce9
  413f9c:	out    0x3,eax
  413f9e:	arpl   bp,bx
  413fa0:	pop    esp
  413fa2:	and    eax,DWORD PTR ds:0x1a840393
  413fa8:	and    al,0x2d
  413faa:	and    al,BYTE PTR ds:0x886cc660
  413fb0:	cmp    DWORD PTR [ebx+0x6c],0x3
  413fb4:	(bad)  gs:[ebx+0x5]
  413fb8:	jmp    0xee1c94e5
  413fbd:	cmc    
  413fbe:	dec    esp
  413fbf:	je     0x413fbc
  413fc1:	push   esp
  413fc2:	jle    0x413f8a
  413fc4:	call   0xdf417457
  413fc9:	icebp  
  413fca:	addr16 pop esi
  413fcc:	push   ss
  413fcd:	add    eax,0xd2720563
  413fd2:	pop    eax
  413fd3:	xor    BYTE PTR [edx],0xec
  413fd6:	fldz   
  413fd8:	inc    DWORD PTR [esi+ebp*8-0x40]
  413fdc:	repz loop 0x413f78
  413fdf:	add    eax,DWORD PTR [esp+eax*1-0x6ffffa9a]
  413fe6:	pop    ecx
  413fe7:	push   es
  413fe8:	add    cl,ch
	...
  41401a:	add    BYTE PTR [eax],al
  41401c:	or     al,ah
  41401e:	inc    esi
  41401f:	sub    BYTE PTR [edi+0x74],bl
  414022:	ss xchg ecx,eax
  414024:	inc    esi
  414025:	adc    DWORD PTR [eax],eax
  414027:	jmp    0x6c4f8581
  41402c:	push   ebx
  41402d:	je     0x41402d
  41402f:	jmp    0xe9493311
  414034:	pop    ecx
  414035:	mov    ecx,ebp
  414037:	jmp    0xdf40459c
  41403c:	push   0x39a35f5d
  414041:	jae    0x413fcb
  414043:	lods   al,BYTE PTR ds:[esi]
  414044:	xor    BYTE PTR [ebx+0x76],dh
  414047:	icebp  
  414048:	sub    ecx,edi
  41404a:	out    dx,eax
  41404b:	ss nop
  41404d:	jmp    edi
  41404f:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  414051:	jb     0x414051
  414053:	xchg   ecx,eax
  414054:	xchg   edx,eax
  414055:	retf   0xe940
  414058:	or     ecx,edi
  41405a:	out    dx,eax
  41405b:	add    DWORD PTR [esi],ecx
  41405d:	verw   cx
  414060:	gs inc ebp
  414062:	push   cs
  414063:	ins    BYTE PTR es:[edi],dx
  414064:	mov    bl,0x73
  414066:	(bad)  
  414067:	jmp    0xacccb3e2
  41406c:	enter  0x8cc2,0xa4
  414070:	mov    esp,0x3ee969c2
  414075:	jae    0x4140cb
  414077:	fidiv  WORD PTR [ebx+0x4c]
  41407a:	sub    eax,0xbffe6728
  41407f:	fiadd  WORD PTR [eax]
	...
  4140b1:	add    BYTE PTR [ebx+ebx*4+0x73affff],dh
  4140b8:	lea    eax,[ebp+0x1e]
  4140bb:	push   edi
  4140bc:	std    
  4140bd:	jne    0x4140e1
  4140bf:	lock jae 0x4140ae
  4140c2:	lds    edx,FWORD PTR ds:0x93b2e9d
  4140c8:	or     eax,eax
  4140ca:	outs   dx,BYTE PTR ds:[esi]
  4140cb:	jno    0x414058
  4140cd:	inc    ebp
  4140ce:	jmp    0x6a09:0x60006856
  4140d5:	pop    es
  4140d6:	push   eax
  4140d7:	or     edi,edi
  4140d9:	jne    0x4140b9
  4140db:	out    dx,eax
  4140dc:	adc    esp,DWORD PTR [ecx+0xafe49a4]
  4140e2:	or     ah,BYTE PTR [ebx+0x54]
  4140e5:	jmp    FWORD PTR [edi+0x13e8e6e6]
  4140eb:	lock std 
  4140ed:	mov    DWORD PTR [edi],ecx
  4140ef:	fisttp DWORD PTR [ebx-0x2a9d5bb]
  4140f5:	jne    0x41407d
  4140f7:	pusha  
  4140f8:	(bad)  
  4140f9:	imul   edi,DWORD PTR [ebp-0x200101a0],0xeb15fdd2
  414103:	sbb    al,0x41
  414105:	add    BYTE PTR [ecx-0xdd68d3a],dl
  41410b:	push   es
  41410c:	add    bh,ch
  41410e:	adc    al,0xef
  414110:	jae    0x41411a
  414112:	bound  esi,QWORD PTR [esi]
  414114:	inc    esi
  414115:	inc    DWORD PTR [eax]
	...
  414147:	add    BYTE PTR [ebp-0x11],ah
  41414a:	je     0x414154
  41414c:	gs jne 0x414151
  41414f:	(bad)  
  414150:	(bad)  
  414152:	out    0x58,eax
  414154:	cld    
  414155:	out    dx,al
  414156:	std    
  414157:	jmp    FWORD PTR [edi+0x675fde9]
  41415d:	in     al,dx
  41415e:	jae    0x414168
  414160:	arpl   WORD PTR [ebp+ecx*8+0x45],ax
  414164:	xor    al,0x43
  414166:	js     0x4141dc
  414168:	andps  xmm0,XMMWORD PTR [eax+ecx*2+0x7478b324]
  414170:	pop    es
  414171:	mov    ebx,0x1d45a50e
  414176:	add    al,0x6a
  414178:	arpl   WORD PTR [ebx+0x7904ebee],bp
  41417e:	test   eax,0x775ca22d
  414183:	je     0x414178
  414185:	and    eax,0x48
  414188:	in     al,dx
  414189:	mov    al,BYTE PTR [esi+eax*8-0xc390cad]
  414190:	loopne 0x41420a
  414192:	outs   dx,BYTE PTR ds:[esi]
  414193:	jmp    DWORD PTR [ebp-0x17]
  414196:	imul   edi,ebp,0xffffffcc
  414199:	jmp    0x6978:0xd2c5b46a
  4141a0:	arpl   bx,bx
  4141a2:	out    dx,al
  4141a3:	div    DWORD PTR [eax+edi*2+0x5c222d4d]
  4141aa:	ja     0x414220
	...
  4141dc:	add    BYTE PTR [eax],al
  4141de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141df:	xor    ch,bh
  4141e1:	pop    es
  4141e2:	mov    esi,ebp
  4141e4:	sar    esi,0x94
  4141e7:	sbb    al,0xc8
  4141ea:	mov    eax,ds:0xd855025f
  4141ef:	inc    DWORD PTR [edx+0x79129fc3]
  4141f5:	(bad)  
  4141f6:	out    0xa8,al
  4141f8:	jbe    0x414249
  4141fa:	ins    BYTE PTR es:[edi],dx
  4141fb:	lock push es
  4141fd:	jmp    FWORD PTR [esi]
  4141ff:	dec    ebx
  414200:	sub    DWORD PTR [ecx+0x63],eax
  414203:	push   es
  414204:	std    
  414205:	sbb    ah,BYTE PTR [ebx+0x5e]
  414208:	or     eax,eax
  41420a:	pop    esp
  41420b:	add    eax,0x563a86c
  414210:	jmp    0xe8aee955
  414215:	add    esp,DWORD PTR [ebx+0x5]
  414218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414219:	mov    esi,0x3ed7130
  41421e:	arpl   bx,bx
  414220:	call   0xe9205f12
  414225:	in     eax,dx
  414226:	adc    al,0x82
  414228:	and    esi,DWORD PTR [eax-0x64]
  41422b:	sub    BYTE PTR [ebx+0x6f],0xd
  41422f:	jno    0x4141ce
  414231:	sar    ebp,cl
  414233:	cli    
  414234:	nop
  414235:	js     0x4142a6
  414237:	jno    0x4141b9
  414239:	(bad)  
  41423a:	dec    ecx
  41423b:	add    eax,0xfa230ce9
  414240:	jecxz  0x4142ac
	...
  414272:	add    BYTE PTR [eax],al
  414274:	push   edx
  414275:	push   es
  414276:	jmp    0xc0ce8d7e
  41427b:	ret    0x6fcc
  41427e:	fild   DWORD PTR [edi]
  414280:	mov    ebx,0xbd78acf5
  414285:	aad    0x61
  414287:	push   ebx
  414288:	out    0x8a,eax
  41428a:	push   esp
  41428b:	jo     0x41423a
  41428d:	jo     0x414227
  41428f:	aad    0xbc
  414291:	in     eax,0xac
  414293:	js     0x414232
  414295:	jle    0x414302
  414297:	push   edi
  414298:	lea    esi,[eax+0x2d]
  41429b:	imul   edx,esi,0xffffffbd
  41429e:	and    eax,0x9104fa78
  4142a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142a4:	and    eax,0xaf78e8c6
  4142a9:	push   ecx
  4142aa:	adc    eax,0xbb706d78
  4142af:	and    BYTE PTR [edx],bh
  4142b1:	(bad)  
  4142b2:	call   0xfffd5922
  4142b7:	cmc    
  4142b8:	int3   
  4142b9:	jge    0x41423f
  4142bb:	stc    
  4142bc:	mov    esp,0x5f53fe6f
  4142c1:	frstor [esi-0x28fd9da]
  4142c7:	pushf  
  4142c8:	fwait
  4142c9:	ja     0x4142c9
  4142cb:	into   
  4142cc:	mov    ah,0x39
  4142ce:	daa    
  4142cf:	adc    BYTE PTR [esi],bl
  4142d1:	jo     0x4142b9
  4142d3:	popa   
  4142d4:	sub    BYTE PTR [edi-0x2],ch
  4142d7:	pusha  
	...
  414308:	add    BYTE PTR [eax],al
  41430a:	loop   0x414367
  41430c:	imul   BYTE PTR [esi+0x10ffde94]
  414312:	mov    ebx,0x75e940c6
  414317:	mov    ecx,0x6f6c9edb
  41431c:	(bad)  
  41431d:	aam    0x4d
  41431f:	push   ds
  414320:	inc    ecx
  414321:	jmp    0x7e8c319e
  414326:	push   esp
  414327:	jge    0x4142ad
  414329:	add    DWORD PTR [edi+ebp*2-0x2],0xb0dd6703
  414331:	scas   al,BYTE PTR es:[edi]
  414332:	lahf   
  414333:	outs   dx,DWORD PTR ds:[esi]
  414334:	std    
  414335:	xchg   esp,eax
  414336:	sbb    esi,DWORD PTR [edi-0x2]
  414339:	push   esi
  41433a:	sub    al,0x39
  41433c:	daa    
  41433d:	add    BYTE PTR [esi-0x665a1991],ah
  414343:	outs   dx,BYTE PTR ds:[esi]
  414344:	(bad)  
  414345:	jo     0x414329
  414347:	arpl   si,si
  414349:	ss or  al,0xde
  41434c:	inc    eax
  41434e:	mov    esi,0xde940c6
  414353:	mov    ecx,0x6ef416db
  414358:	(bad)  
  414359:	fcom   QWORD PTR [ebp+0x1e]
  41435c:	inc    ecx
  41435d:	jmp    0x8c755a
  414362:	pop    ebp
  414363:	clc    
  414364:	xchg   DWORD PTR [ebp-0x22196],eax
  41436a:	leave  
  41436b:	lods   al,BYTE PTR ds:[esi]
  41436c:	jmp    0x0:0xf7
	...
  41439f:	add    BYTE PTR ds:0x8973fef8,bh
  4143a5:	popa   
  4143a6:	(bad)  
  4143a7:	jmp    FWORD PTR ds:0x4275fdb9
  4143ad:	fist   DWORD PTR [ecx-0x207e2bc]
  4143b3:	mov    ch,0xea
  4143b5:	(bad)  
  4143b7:	(bad)  
  4143b8:	fnsave [ebp+0x6]
  4143bb:	call   0x3ef2e5
  4143c0:	mov    ebp,0xbdf7eab5
  4143c5:	idiv   ebp
  4143c7:	jne    0x4143bb
  4143c9:	fcmovbe st,st(7)
  4143cb:	inc    esp
  4143cc:	int    0xf7
  4143ce:	std    
  4143cf:	mov    ch,0xe2
  4143d1:	(bad)  
  4143d3:	(bad)  
  4143d4:	fnsave [ebp+0x6]
  4143d7:	call   0x3ef2ed
  4143dc:	dec    ebp
  4143dd:	mov    ch,0xe2
  4143df:	idiv   DWORD PTR ds:0xd275fdf7
  4143e5:	fidivr DWORD PTR [ebx-0x208e2bc]
  4143eb:	mov    ch,0x2a
  4143ed:	(bad)  
  4143ef:	call   FWORD PTR ds:0xcde80675
  4143f5:	scas   al,BYTE PTR es:[edi]
  4143f6:	std    
  4143f7:	call   FWORD PTR [ebp-0x4b]
  4143fa:	(bad)  
  4143fc:	dec    ebp
  4143fd:	idiv   ebp
  4143ff:	jne    0x414383
  414401:	fidivr DWORD PTR [esi-0x2]
	...
  414434:	add    BYTE PTR [eax],al
  414436:	cmp    eax,0x3eb5fdf7
  41443b:	(bad)  
  41443d:	jmp    DWORD PTR [ebx+0x4]
  414440:	stos   BYTE PTR es:[edi],al
  414441:	inc    esi
  414442:	ins    BYTE PTR es:[edi],dx
  414443:	push   DWORD PTR [ebp-0x4c]
  414446:	jae    0x4144b7
  414448:	je     0x414448
  41444a:	dec    ebx
  41444b:	mov    esp,0x7754febd
  414450:	scas   al,BYTE PTR es:[edi]
  414451:	jmp    0x4144a7
  414453:	pop    edi
  414454:	je     0x41443d
  414456:	out    dx,al
  414457:	push   ds
  414458:	jne    0x414458
  41445a:	cmp    al,0x99
  41445c:	imul   esi,esi,0x34
  41445f:	push   edi
  414460:	imul   ecx,DWORD PTR [ecx-0x18bc05c],0xffffffee
  414467:	aas    
  414468:	ins    BYTE PTR es:[edi],dx
  414469:	(bad)  
  41446a:	sbb    al,0x54
  41446c:	hlt    
  41446d:	inc    esi
  41446e:	adc    al,0xb7
  414470:	je     0x414426
  414472:	add    esi,DWORD PTR [edi+0xffbfe74]
  414478:	mov    ebp,0xbe8efcfe
  41447d:	test   DWORD PTR [edx],0xecfe75fc
  414483:	jle    0x414473
  414485:	sti    
  414486:	sti    
  414487:	lds    ebx,FWORD PTR [edx]
  414489:	add    BYTE PTR [ebx-0x4b],ah
  41448c:	inc    ecx
  41448d:	pop    es
  41448e:	arpl   WORD PTR [ecx],dx
  414490:	mov    ebx,ebp
  414492:	loopne 0x41443b
  414494:	ja     0x4144ff
  414496:	arpl   WORD PTR [edx-0x37],dx
  414499:	inc    BYTE PTR [eax]
	...
  4144cb:	add    BYTE PTR [esi],dh
  4144cd:	je     0x414539
  4144cf:	test   DWORD PTR [edi],ebx
  4144d1:	xlat   BYTE PTR ds:[ebx]
  4144d2:	je     0x41445c
  4144d4:	es shr bl,0x82
  4144d8:	sbb    al,0x9d
  4144da:	add    bh,bh
  4144dc:	push   ss
  4144dd:	je     0x414549
  4144df:	pop    es
  4144e0:	xchg   ebp,eax
  4144e1:	ss jne 0x4144e2
  4144e4:	push   ss
  4144e5:	and    BYTE PTR [ebp+0x74],dh
  4144e8:	pop    ebx
  4144e9:	add    eax,0x6e20b311
  4144ee:	sbb    eax,0xe908a24b
  4144f3:	into   
  4144f4:	fldenv [eax+0x69]
  4144f7:	inc    eax
  4144f8:	jo     0x414567
  4144fa:	jnp    0x414503
  4144fc:	dec    ebx
  4144fd:	and    esp,ecx
  4144ff:	add    esp,DWORD PTR [ebx+0x0]
  414502:	sub    edi,ebp
  414504:	pusha  
  414505:	sub    cl,BYTE PTR ds:[eax]
  414508:	arpl   WORD PTR [ebx+ebx*2+0x14],bp
  41450c:	dec    ebx
  41450d:	adc    eax,DWORD PTR [ecx]
  41450f:	add    al,0x63
  414511:	add    BYTE PTR [ecx-0x55c19f12],ch
  414517:	pop    es
  414518:	arpl   WORD PTR [esi+0x2b],di
  41451b:	jl     0x41453a
  41451d:	repz shr BYTE PTR [ebx+0x6f],0xc4
  414522:	mov    ch,0x74
  414524:	fcmovnb st,st(2)
  414526:	lods   al,BYTE PTR ds:[esi]
  414527:	je     0x4144b8
  414529:	imul   esp,DWORD PTR [ebp+0x136cf4ee],0x14
	...
  41455f:	add    BYTE PTR [eax],al
  414561:	add    BYTE PTR [ebx],cl
  414563:	cmp    al,0x3a
  414565:	jne    0x414554
  414567:	add    BYTE PTR [ecx+0x2b7e29ef],ch
  41456d:	jo     0x4145b9
  41456f:	add    eax,0xd5d0be6c
  414574:	jne    0x414564
  414576:	enter  0xba5d,0xe7
  41457a:	lds    ebp,FWORD PTR [ecx+esi*8+0x43]
  41457e:	xor    BYTE PTR [ebx],ah
  414580:	rol    DWORD PTR [ebx],1
  414582:	push   ebx
  414583:	pop    esp
  414584:	xchg   esi,eax
  414585:	je     0x4145be
  414587:	std    
  414588:	inc    eax
  414589:	shl    DWORD PTR [ecx],cl
  41458b:	ins    BYTE PTR es:[edi],dx
  41458c:	inc    ebp
  41458d:	je     0x4145a6
  41458f:	stc    
  414590:	cmp    eax,0xff5d5cee
  414595:	lea    esp,[ebx+0x752efe6b]
  41459b:	js     0x41459b
  41459d:	pushf  
  41459e:	hlt    
  41459f:	push   0x74
  4145a1:	icebp  
  4145a2:	or     cl,bl
  4145a4:	inc    edx
  4145a5:	push   ss
  4145a6:	imul   DWORD PTR [edx+0x74]
  4145a9:	or     eax,0x645a1f8
  4145ae:	xlat   BYTE PTR ds:[ebx]
  4145af:	cmp    eax,0xd260edc1
  4145b4:	mov    al,BYTE PTR ds:0x97d347e3
  4145ba:	iret   
  4145bb:	icebp  
  4145bc:	or     edx,ecx
  4145be:	dec    eax
  4145bf:	mov    edi,0xac34defe
  4145c4:	je     0x4145b2
	...
  4145f6:	add    BYTE PTR [eax],al
  4145f8:	adc    bh,BYTE PTR ds:0x7a60ddc1
  4145fe:	inc    esp
  4145ff:	mov    ecx,0xed746b37
  414604:	mov    eax,0x90b64c0d
  414609:	(bad)  
  41460a:	mov    edi,0xff4bdcde
  41460f:	call   0x9db5b274
  414614:	xchg   edi,eax
  414615:	add    DWORD PTR [ebp-0x6a],0x7d447d70
  41461c:	jo     0x41460f
  41461e:	sti    
  41461f:	xchg   dl,bl
  414621:	pop    edi
  414622:	(bad)  
  414623:	hlt    
  414624:	dec    eax
  414625:	fs stos BYTE PTR es:[edi],al
  414627:	das    
  414628:	push   eax
  414629:	imul   ecx,DWORD PTR [edx-0x5da2db0c],0xffffffe9
  414630:	pusha  
  414631:	add    eax,0xc4a83f68
  414636:	(bad)  
  414637:	mov    esi,0xe9177408
  41463c:	pusha  
  41463d:	add    al,al
  41463f:	add    bh,bl
  414641:	cld    
  414642:	call   0x48d0df
  414647:	mov    ecx,DWORD PTR [edx+0x49]
  41464a:	fadd   QWORD PTR [edi-0x45]
  41464d:	pop    es
  41464e:	call   0x48c38c
  414653:	add    ebx,DWORD PTR [edx-0x16]
  414656:	jae    0x414640
  414658:	loop   0x41463f
  41465a:	inc    ebp
  41465b:	inc    ecx
	...
  41468c:	add    BYTE PTR [eax],al
  41468e:	jp     0x4146dd
  414690:	out    0xd3,al
  414692:	inc    edx
  414693:	pop    es
  414694:	add    BYTE PTR [ebx],cl
  414696:	mov    ch,BYTE PTR [eax+eax*1-0x15]
  41469a:	int3   
  41469b:	call   0xe430ceae
  4146a0:	xchg   DWORD PTR [ebp+0x2e],eax
  4146a3:	dec    edi
  4146a4:	out    dx,al
  4146a5:	inc    edi
  4146a6:	mov    eax,DWORD PTR [ecx]
  4146a8:	push   esi
  4146a9:	call   0x41457e
  4146ae:	inc    ecx
  4146af:	(bad)  
  4146b0:	jae    0x4146b4
  4146b2:	xor    DWORD PTR [esi-0x77],edx
  4146b5:	lock mov dl,0xf1
  4146b8:	inc    ebp
  4146b9:	inc    ecx
  4146ba:	cli    
  4146bb:	into   
  4146bc:	cld    
  4146bd:	push   ss
  4146be:	cli    
  4146bf:	push   es
  4146c0:	add    esi,eax
  4146c2:	jae    0x414731
  4146c4:	fisubr DWORD PTR [eax-0x1c]
  4146c7:	aas    
  4146c8:	aas    
  4146c9:	add    BYTE PTR [ecx+ecx*8],ch
  4146cc:	xchg   esi,eax
  4146cd:	sbb    dl,bh
  4146cf:	push   es
  4146d0:	or     eax,eax
  4146d2:	fild   WORD PTR [eax]
  4146d4:	jmp    0x414711
  4146d6:	push   eax
  4146d7:	push   ss
  4146d8:	mov    BYTE PTR [ebp-0x13],dl
  4146db:	jmp    0x3d831f23
  4146e0:	loop   0x4146a8
  4146e2:	retf   0x8b06
  4146e5:	inc    ebp
  4146e6:	and    bh,BYTE PTR [esi+edi*8-0x82c9c01]
  4146ed:	(bad)  [ecx+edx*2+0xfe5a]
	...
  414724:	push   ss
  414725:	je     0x414781
  414727:	xchg   edx,eax
  414728:	xchg   ebp,eax
  414729:	sub    esi,DWORD PTR [edx-0x77]
  41472c:	ss mov edi,0xe47f447d
  414732:	adc    cl,BYTE PTR [edx+0x447e2b16]
  414738:	fwait
  414739:	hlt    
  41473a:	adc    al,BYTE PTR [eax-0x7afea3d3]
  414740:	psubq  mm6,QWORD PTR [ecx-0x2]
  414744:	pop    esp
  414745:	jmp    0xa1442ea8
  41474a:	jno    0x41474a
  41474c:	ficomp WORD PTR [eax+0x233b4f72]
  414752:	mov    esi,0x3573cfe
  414757:	pop    esi
  414758:	sub    bl,BYTE PTR [esi-0x18690001]
  41475e:	pop    edi
  41475f:	(bad)  
  414760:	scas   al,BYTE PTR es:[edi]
  414761:	dec    eax
  414762:	pop    edx
  414763:	aam    0xaa
  414765:	inc    ebx
  414766:	jo     0x414772
  414768:	and    esi,DWORD PTR [eax]
  41476a:	sbb    ebp,DWORD PTR [eax+0x22]
  41476d:	sbb    eax,ebx
  41476f:	call   DWORD PTR [esp+eax*2-0x5d03b723]
  414776:	shl    DWORD PTR [edi+0x65],cl
  414779:	scas   al,BYTE PTR es:[edi]
  41477a:	ret    
  41477b:	inc    DWORD PTR [esp+ebx*2+0x3a5ef02]
  414782:	push   esi
  414783:	inc    esi
  414784:	and    bl,BYTE PTR [edx+edx*8-0x2]
	...
  4147b8:	add    BYTE PTR [eax],al
  4147ba:	dec    esi
  4147bb:	je     0x414817
  4147bd:	cmp    DWORD PTR [ebx],0x2ae770f3
  4147c3:	and    DWORD PTR [ecx-0x2],esi
  4147c6:	stos   BYTE PTR es:[edi],al
  4147c7:	add    al,0x2b
  4147c9:	cld    
  4147ca:	mov    ah,0xd0
  4147cc:	jno    0x41482e
  4147ce:	loope  0x414810
  4147d0:	push   esp
  4147d1:	fisub  WORD PTR [ebx+ebx*8-0x2e88f5e]
  4147d8:	push   eax
  4147d9:	in     eax,dx
  4147da:	and    ch,BYTE PTR [edx+0x3d]
  4147dd:	jnp    0x414806
  4147df:	imul   eax,edx,0xe0ef840d
  4147e5:	pop    ebx
  4147e6:	(bad)  
  4147e7:	imul   esp,DWORD PTR ds:0x1e260a71,0x715d64f7
  4147f1:	jno    0x414858
  4147f3:	imul   eax,DWORD PTR [edx-0xf0ca3f1],0xfd68f35b
  4147fd:	jo     0x4147c3
  4147ff:	add    eax,0xde0660e9
  414804:	sbb    al,0xc9
  414806:	mov    ds:0x9d435105,eax
  41480b:	(bad)  
  41480c:	call   0xc13eff81
  414811:	es mov ecx,0x9770cd68
  414817:	imul   eax,ebp,0x3e5d5cf6
  41481d:	mov    BYTE PTR [eax],0x0
	...
  414850:	or     eax,0x60459f69
  414855:	add    eax,0x87087d14
  41485a:	lods   al,BYTE PTR ds:[esi]
  41485b:	dec    ebx
  41485c:	in     eax,dx
  41485d:	push   0x69a77e9d
  414862:	cmp    BYTE PTR [ecx+0x6f],dh
  414865:	stc    
  414866:	(bad)  
  414867:	mul    BYTE PTR [ebp+ebx*2+0x2c]
  41486b:	sbb    DWORD PTR [ebx+0x5],esp
  41486e:	repnz inc ebx
  414870:	pop    ebp
  414871:	cmp    bh,0xa8
  414874:	popa   
  414875:	add    eax,0x70a5a600
  41487a:	(bad)  
  41487b:	call   0xa5084de0
  414880:	xor    al,0x67
  414882:	push   es
  414883:	jmp    0xc34123e8
  414888:	pusha  
  414889:	(bad)  
  41488b:	shl    BYTE PTR [eax+0x7a],cl
  41488e:	inc    esp
  41488f:	xor    eax,0x3d8479b0
  414894:	or     esp,DWORD PTR [edi-0x2]
  414897:	cdq    
  414898:	repz lock mul DWORD PTR [esi]
  41489c:	ins    DWORD PTR es:[edi],dx
  41489d:	ins    BYTE PTR es:[edi],dx
  41489e:	out    0xf7,eax
  4148a0:	dec    ebx
  4148a1:	add    eax,0xf420e200
  4148a6:	add    al,0x0
  4148a8:	out    0x4,eax
  4148aa:	add    cl,ch
  4148ac:	cmp    BYTE PTR [eax+0x6860a827],dl
  4148b2:	je     0x414899
	...
  4148e4:	add    BYTE PTR [eax],al
  4148e6:	test   al,0x2d
  4148e8:	dec    eax
  4148e9:	out    dx,al
  4148ea:	int3   
  4148eb:	mov    eax,0x80e2b98a
  4148f0:	repz (bad) 
  4148f2:	mov    esp,0x873b4f67
  4148f7:	sbb    eax,0x7d8cce48
  4148fc:	test   BYTE PTR [ecx-0x2e019874],ah
  414902:	cld    
  414903:	ret    
  414904:	(bad)  
  414905:	mov    dh,0x29
  414907:	push   0xc4b8cd66
  41490c:	jmp    DWORD PTR [ebp-0x6109b046]
  414912:	jl     0x41497b
  414914:	je     0x4148f7
  414916:	mov    BYTE PTR [esi+0x7d4c8e46],al
  41491c:	test   BYTE PTR [eax],al
  41491e:	pop    edx
  41491f:	lock std 
  414921:	push   DWORD PTR [eax+0x1]
  414924:	push   0xfe428225
  414929:	(bad)  
  41492a:	ja     0x4148e5
  41492c:	cmc    
  41492d:	(bad)  
  41492e:	cmp    eax,0x120873d8
  414933:	pusha  
  414934:	inc    ebp
  414935:	dec    DWORD PTR ds:0x35ec83ea
  41493b:	fdivr  st,st(5)
  41493d:	push   0xffffff8a
  41493f:	dec    ebx
  414940:	sub    al,0x48
  414942:	mov    ebx,0x72b5ff03
  414947:	lock std 
  414949:	inc    DWORD PTR [eax]
	...
  41497b:	add    BYTE PTR [ebp+0x6e],cl
  41497e:	push   es
  41497f:	call   0x3e8832
  414984:	repz jge 0x41496d
  414987:	test   DWORD PTR [ebp-0x28],0xee8e858b
  41498e:	std    
  41498f:	(bad)  
  414990:	cli    
  414991:	dec    edx
  414992:	xor    eax,0xff02fb48
  414997:	mov    ch,0x72
  414999:	out    dx,al
  41499a:	std    
  41499b:	dec    DWORD PTR [ebp+0x6e]
  41499e:	push   es
  41499f:	call   0x3e87f2
  4149a4:	mov    bl,0x7d
  4149a6:	loop   0x41499f
  4149a8:	or     eax,0xa20068d8
  4149ad:	inc    ebx
  4149ae:	inc    esi
  4149af:	inc    ecx
  4149b0:	or     bl,al
  4149b2:	mov    bl,0xd8
  4149b4:	aad    0xd7
  4149b6:	std    
  4149b7:	inc    DWORD PTR [edi+0x69]
  4149ba:	out    0x11,al
  4149bc:	inc    ebp
  4149bd:	(bad)  
  4149be:	std    
  4149bf:	mov    DWORD PTR [edi-0x32000a1e],eax
  4149c5:	cmp    DWORD PTR [ebx+0x6d8763f0],0xfffffffe
  4149cc:	arpl   WORD PTR [eax],dx
  4149ce:	fild   DWORD PTR [edx-0x18a6eea]
  4149d4:	int3   
  4149d5:	pop    esp
  4149d6:	mul    BYTE PTR [ecx-0x20]
  4149d9:	xor    DWORD PTR [ebx-0xa],ebx
  4149dc:	mov    esp,0x7402d7
	...
  414a11:	add    BYTE PTR [edx],bl
  414a13:	push   esp
  414a14:	add    al,BYTE PTR [eax]
  414a16:	mov    esp,0x53746d86
  414a1b:	(bad)  
  414a1c:	(bad)  
  414a1d:	aas    
  414a1e:	pushf  
  414a1f:	mov    bh,0x6d
  414a21:	mov    ah,0x93
  414a23:	daa    
  414a24:	outs   dx,BYTE PTR ds:[esi]
  414a25:	dec    BYTE PTR [ecx+esi*4-0x634417ee]
  414a2c:	ins    DWORD PTR es:[edi],dx
  414a2d:	(bad)  
  414a2e:	jl     0x414a21
  414a30:	pop    esi
  414a31:	div    BYTE PTR [edi+ebx*1+0x6e]
  414a35:	je     0x414a8a
  414a37:	adc    al,0x89
  414a39:	aas    
  414a3a:	movd   mm6,DWORD PTR fs:[ebx+ecx*2+0x54fe6e0f]
  414a43:	jmp    0x9c21325a
  414a48:	ins    DWORD PTR es:[edi],dx
  414a49:	inc    BYTE PTR [ecx+ebp*1+0x4f]
  414a4d:	idiv   BYTE PTR [edi+edx*2]
  414a50:	ins    BYTE PTR es:[edi],dx
  414a51:	mov    ah,0x3f
  414a53:	inc    edi
  414a54:	ins    BYTE PTR es:[edi],dx
  414a55:	(bad)  
  414a56:	sub    al,0xd1
  414a58:	adc    ebp,eax
  414a5a:	xchg   edi,eax
  414a5b:	sbb    al,0x6d
  414a5d:	(bad)  
  414a5e:	sbb    al,0x91
  414a60:	arpl   si,si
  414a62:	adc    al,0x3f
  414a64:	ins    BYTE PTR es:[edi],dx
  414a65:	je     0x414ada
  414a67:	push   esp
  414a68:	fnstcw WORD PTR [edi]
  414a6a:	add    al,0xaf
  414a6c:	ins    BYTE PTR es:[edi],dx
  414a6d:	je     0x414ac2
  414a6f:	xchg   edi,eax
  414a70:	mov    dh,0xd7
  414a72:	in     al,dx
  414a73:	add    al,0xa6
  414a75:	ins    DWORD PTR es:[edi],dx
	...
  414aa6:	add    BYTE PTR [eax],al
  414aa8:	in     eax,dx
  414aa9:	out    dx,eax
  414aaa:	lock pop ebx
  414aac:	jb     0x414b15
  414aae:	xchg   ebp,eax
  414aaf:	ins    DWORD PTR es:[edi],dx
  414ab0:	(bad)  [edi+0x65d575b0]
  414ab6:	nop
  414ab7:	loope  0x414ada
  414ab9:	data16 jge 0x414b29
  414abc:	pcmpeqw mm7,QWORD PTR [ebp+0x6d]
  414ac0:	mov    ebp,0xb5c1105c
  414ac5:	gs gs mov bh,0xb8
  414ac9:	ins    DWORD PTR es:[edi],dx
  414aca:	pop    ebp
  414acb:	ins    DWORD PTR es:[edi],dx
  414acc:	mov    esp,0x9d6ca9b7
  414ad1:	gs xchg ebx,eax
  414ad3:	pop    esp
  414ad4:	lea    esp,[ebp+0x45]
  414ad7:	pop    esp
  414ad8:	and    al,dl
  414ada:	cmp    eax,0x4caf856d
  414adf:	jne    0x414b5e
  414ae1:	gs inc eax
  414ae3:	xor    eax,0x6d256620
  414ae8:	mov    bh,0x64
  414aea:	adc    eax,0xc45c656d
  414aef:	rcr    BYTE PTR [ebp+0x65],0xd
  414af3:	(bad)  
  414af4:	dec    esp
  414af5:	outs   dx,DWORD PTR ds:[esi]
  414af6:	mov    ch,0x6d
  414af8:	dec    ebp
  414af9:	gs std 
  414afb:	test   BYTE PTR [eax+0x6e],0x7e
  414aff:	push   ss
  414b00:	arpl   WORD PTR ds:0x5684220,ax
  414b06:	cmp    al,0x79
  414b08:	cmp    BYTE PTR [ecx+0x6fa4],cl
	...
  414b3e:	mov    edx,0x1db94305
  414b43:	fneni(8087 only) 
  414b45:	pop    ebx
  414b46:	push   esi
  414b47:	vpunpcklqdq ymm3,ymm7,ymm3
  414b4b:	retf   0x6cbc
  414b4e:	(bad)  
  414b4f:	or     eax,0xcb8f4100
  414b54:	inc    eax
  414b55:	jmp    0xd06864e1
  414b5a:	and    DWORD PTR [ebp-0x1a],esp
  414b5d:	xchg   ebp,eax
  414b5e:	jne    0x414bc3
  414b60:	(bad)  
  414b61:	xchg   esi,eax
  414b62:	aad    0xc
  414b64:	push   0xffc59f91
  414b69:	adc    BYTE PTR [ecx+0x5],ah
  414b6c:	add    BYTE PTR [ecx+0x28],ch
  414b6f:	data16 cld 
  414b71:	jbe    0x414bc2
  414b73:	arpl   WORD PTR [ebp+ebp*2+0x47],si
  414b77:	fld    DWORD PTR [edi]
  414b79:	push   ecx
  414b7a:	xchg   ecx,eax
  414b7b:	and    al,0xff
  414b7d:	pop    esi
  414b7e:	imul   eax,DWORD PTR [esi+0x3],0xeb8fb5e9
  414b85:	push   0x1c
  414b87:	pusha  
  414b88:	imul   ebp,ecx,0xb4fed0aa
  414b8e:	mov    BYTE PTR [esp+esi*8-0xa],ch
  414b92:	packsswb mm1,QWORD PTR [eax-0x13fb5c]
  414b99:	call   0xaea8edad
  414b9e:	test   al,0xc5
  414ba0:	inc    DWORD PTR [eax+0x0]
	...
  414bd2:	add    BYTE PTR [eax],al
  414bd4:	sub    cl,ah
  414bd6:	inc    eax
  414bd7:	jmp    0x114925a3
  414bdc:	std    
  414bdd:	jmp    0xf6fb:0xd9b8fefe
  414be4:	ss or  al,0xe8
  414be7:	xlat   BYTE PTR ds:[ebx]
  414be8:	and    BYTE PTR [ebx-0x2],ah
  414beb:	mov    al,0xa5
  414bed:	or     BYTE PTR [eax],al
  414bef:	xor    al,0xa4
  414bf1:	jo     0x414b73
  414bf3:	lods   eax,DWORD PTR ds:[esi]
  414bf4:	mov    bh,0x5b
  414bf6:	dec    dh
  414bf8:	call   0x73f0:0x6a00fbc9
  414bff:	or     al,0xc5
  414c01:	push   ebp
  414c02:	push   es
  414c03:	call   0x4140de
  414c08:	add    eax,ecx
  414c0a:	or     eax,0x9ef85
  414c0f:	add    BYTE PTR [ebp-0x35ff09bb],bh
  414c15:	pop    es
  414c16:	add    bh,al
  414c18:	jg     0x414bef
  414c1a:	std    
  414c1b:	pop    es
  414c1c:	mov    edx,0x70006a07
  414c21:	or     DWORD PTR [edx+0x0],ebp
  414c24:	pusha  
  414c25:	or     DWORD PTR [ebp-0x74c6d1bb],ecx
  414c2b:	test   DWORD PTR [esi],ecx
  414c2d:	fdivr  st,st(5)
  414c2f:	(bad)  
  414c30:	jmp    0xfa56:0x35f873ee
  414c37:	call   0x414c3c
	...
  414c68:	add    BYTE PTR [eax],al
  414c6a:	adc    al,0xf5
  414c6c:	(bad)  
  414c6d:	call   DWORD PTR [ecx+0x330572c7]
  414c73:	sar    edi,1
  414c75:	dec    DWORD PTR [edx-0x34d769c1]
  414c7b:	pop    es
  414c7c:	push   DWORD PTR [ebp+0x76]
  414c7f:	mov    edi,0xf04545cf
  414c84:	dec    esi
  414c85:	mov    ebx,DWORD PTR [edx+0x6df483dc]
  414c8b:	out    dx,al
  414c8c:	std    
  414c8d:	push   eax
  414c8e:	call   0x45870c51
  414c93:	lock xchg DWORD PTR [ebp-0x229ae],eax
  414c9a:	(bad)  
  414c9b:	test   BYTE PTR [ecx-0x1],0x45
  414c9f:	inc    ecx
  414ca0:	(bad)  
  414ca1:	addr16 mov ebx,0x63003f9e
  414ca7:	cmp    ebp,DWORD PTR [edi+0x69540cd7]
  414cad:	(bad)  
  414cae:	xchg   esi,eax
  414caf:	push   esp
  414cb0:	pop    edx
  414cb1:	sbb    DWORD PTR [esi-0x1977965d],ebx
  414cb7:	pushf  
  414cb8:	jno    0x414cb8
  414cba:	hlt    
  414cbb:	mov    BYTE PTR [ebx],0x68
  414cbe:	retf   
  414cbf:	adc    al,0xc5
  414cc1:	jmp    ebp
  414cc3:	mov    ecx,0x7bdcf64a
  414cc8:	imul   esi,DWORD PTR [ebx+ebp*2-0x7c],0x4369
	...
  414d00:	int3   
  414d01:	mov    edi,DWORD PTR [ebx-0x7c]
  414d04:	mov    bh,0xdb
  414d06:	imul   edi,esi,0xacda6c49
  414d0c:	sub    ebp,DWORD PTR ds:0xc4f6ff04
  414d12:	jno    0x414d12
  414d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d15:	ret    
  414d16:	out    dx,eax
  414d17:	pop    es
  414d18:	mov    edx,eax
  414d1a:	mov    esi,0x7fe594fe
  414d1f:	out    0x94,eax
  414d21:	retf   
  414d22:	imul   ecx,DWORD PTR [esi+ebx*8+0x7cfe7200],0x2bc5da7c
  414d2d:	lods   eax,DWORD PTR ds:[esi]
  414d2e:	add    bh,bh
  414d30:	mov    dh,0xc4
  414d32:	jno    0x414d32
  414d34:	fs add esi,eax
  414d37:	pop    es
  414d38:	dec    ebx
  414d39:	xor    BYTE PTR [edi+0x7fe554fe],bh
  414d3f:	jecxz  0x414d95
  414d41:	or     ebp,DWORD PTR [edx+0x69]
  414d44:	arpl   WORD PTR [ebp+ecx*2+0x47],si
  414d48:	mov    ds:0x1bb4696c,al
  414d4d:	pop    ebx
  414d4e:	push   0x5c052cfe
  414d53:	cld    
  414d54:	cmp    al,0xac
  414d56:	and    al,0x69
  414d58:	sbb    eax,0xd646b8c
  414d5d:	(bad)  
  414d5e:	int    0x77
  414d60:	out    0x34,eax
  414d62:	mov    ebp,0x69
	...
  414d93:	add    BYTE PTR [eax],al
  414d95:	add    BYTE PTR ds:0xa47550b5,al
  414d9b:	(bad)  
  414d9c:	call   0xb57dfd09
  414da1:	imul   ebp,ebp,0xfcfc1b61
  414da7:	mov    esp,DWORD PTR [ecx+ebp*2]
  414daa:	fisttp QWORD PTR [ebx+0x61cd506b]
  414db0:	lea    eax,[ebp+0x697d550f]
  414db6:	lds    eax,FWORD PTR [esi*8-0x7b601e24]
  414dbd:	jno    0x414d74
  414dbf:	popa   
  414dc0:	call   0xa3c790b4
  414dc5:	pop    esp
  414dc6:	lods   eax,DWORD PTR ds:[esi]
  414dc7:	popa   
  414dc8:	pop    ebp
  414dc9:	add    al,0x17
  414dcb:	mov    esp,0x726303c0
  414dd0:	mov    gs,WORD PTR [ecx+0x17]
  414dd3:	cmc    
  414dd4:	push   eax
  414dd5:	cmp    BYTE PTR [edi+0x62],al
  414dd8:	cmp    eax,0x3d54b769
  414ddd:	imul   esi,DWORD PTR [ebp+0x61],0x247b13b3
  414de4:	out    0x68,eax
  414de6:	gs popa 
  414de8:	push   ebx
  414de9:	pop    eax
  414dea:	push   ebp
  414deb:	popa   
  414dec:	adc    eax,0xf5cf69
  414df1:	push   ss
  414df2:	lea    esp,[eax+0x5]
  414df5:	imul   ecx,DWORD PTR [edi],0x68f56e
	...
  414e2b:	add    BYTE PTR ds:0x507bff61,bh
  414e31:	ins    DWORD PTR es:[edi],dx
  414e32:	add    ebp,DWORD PTR [edi-0x6301a045]
  414e38:	pushf  
  414e39:	push   edi
  414e3a:	(bad)  
  414e3b:	fimul  WORD PTR [ebx-0x74211c67]
  414e41:	pop    edi
  414e42:	(bad)  
  414e43:	push   esp
  414e44:	ja     0x414eb3
  414e46:	ret    
  414e47:	add    al,0x7a
  414e49:	pop    edi
  414e4a:	(bad)  
  414e4b:	je     0x414dcd
  414e4d:	push   edi
  414e4e:	(bad)  
  414e4f:	mov    dh,0x8b
  414e51:	(bad)  [edi]
  414e53:	rol    DWORD PTR [esi-0x205900df],0xa1
  414e5a:	iret   
  414e5b:	xchg   esi,eax
  414e5c:	dec    ebx
  414e5d:	pop    edi
  414e5e:	call   FWORD PTR [eax+eax*4]
  414e61:	in     eax,dx
  414e62:	add    cl,ch
  414e64:	sub    esp,DWORD PTR [edx+0x6d70fcfe]
  414e6a:	imul   edi,DWORD PTR [ebx+ecx*2+0x103cfe5f],0x3b6efe57
  414e75:	cdq    
  414e76:	rcr    DWORD PTR [esi+0x3b],cl
  414e79:	pop    edi
  414e7a:	(bad)  
  414e7b:	aam    0x70
  414e7d:	ins    DWORD PTR es:[edi],dx
  414e7e:	mov    edx,DWORD PTR [edx+ecx*1]
  414e81:	pop    edi
  414e82:	(bad)  
  414e83:	aam    0x70
  414e85:	pusha  
  414e86:	mov    ah,0x21
  414e88:	adc    ebx,DWORD PTR [edi-0x2]
  414e8b:	lea    ecx,ds:[eax]
  414e8e:	call   0x414e94
	...
  414ebf:	add    BYTE PTR [eax],al
  414ec1:	add    BYTE PTR [ecx],cl
  414ec3:	pop    edi
  414ec4:	(bad)  
  414ec5:	cs mov ebp,0xfb26f638
  414ecb:	addr16 mov al,0xa9
  414ece:	retf   
  414ecf:	pop    edi
  414ed0:	(bad)  
  414ed1:	pop    esp
  414ed2:	rcl    BYTE PTR [edi-0x2],1
  414ed5:	push   cs
  414ed6:	test   al,0xaa
  414ed8:	aas    
  414ed9:	add    BYTE PTR [ebp-0x13],bl
  414edc:	std    
  414edd:	mov    ch,0x6e
  414edf:	aad    0xfd
  414ee1:	jmp    DWORD PTR [edx-0x6f]
  414ee4:	ds (bad) 
  414ee6:	cmp    eax,0x5e8b3e8
  414eeb:	call   0x49dc37ed
  414ef0:	std    
  414ef1:	jmp    FWORD PTR ds:0x1df7e296
  414ef7:	call   0xe87bd4e2
  414efc:	std    
  414efd:	push   DWORD PTR [edi-0x17]
  414f00:	cmc    
  414f01:	jmp    FWORD PTR [ebp-0x42bf8740]
  414f07:	out    0xfd,eax
  414f09:	mov    ch,0xa6
  414f0b:	out    dx,eax
  414f0c:	std    
  414f0d:	push   edx
  414f0f:	aaa    
  414f10:	ds (bad) 
  414f12:	in     eax,dx
  414f13:	out    0x43,eax
  414f15:	clc    
  414f16:	jecxz  0x414f02
  414f18:	sti    
  414f19:	(bad)  
  414f1a:	fucom  st(7)
  414f1c:	jae    0x414f1a
  414f1e:	shl    BYTE PTR [ecx+0x20ca0010],cl
  414f24:	ror    DWORD PTR [eax+eax*1],0x0
	...
  414f58:	mov    edx,0x39ec8934
  414f5d:	(bad)  
  414f60:	mov    bh,BYTE PTR ds:0x5bb7ff4b
  414f66:	out    0x81,al
  414f68:	pop    edi
  414f69:	call   0xe7f8d96b
  414f6e:	std    
  414f6f:	jne    0x414fe3
  414f71:	cmp    esp,DWORD PTR [ebx+0x48]
  414f74:	retf   
  414f75:	add    edi,edi
  414f77:	xor    eax,0x410265
  414f7c:	push   edx
  414f7d:	mov    bl,bh
  414f7f:	(bad)  
  414f80:	jge    0x414f68
  414f82:	jae    0x414f8c
  414f84:	arpl   WORD PTR [edi+ebx*8-0x25935db9],ax
  414f8b:	add    DWORD PTR [ebx+0x6c],esp
  414f8e:	and    bh,0xee
  414f91:	popa   
  414f92:	gs (bad) 
  414f94:	xor    al,0xe2
  414f96:	data16 (bad) 
  414f98:	mov    dh,0x64
  414f9a:	pop    edx
  414f9b:	xchg   ebx,eax
  414f9c:	addr16 gs enterw 0x6921,0x2
  414fa3:	push   ebp
  414fa4:	call   0x1004d0f1
  414fa9:	pop    ss
  414faa:	iret   
  414fab:	imul   esp,DWORD PTR [ebx-0x4e],0x5476feb5
  414fb2:	pop    edx
  414fb3:	xor    eax,0x88659736
  414fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fb9:	mov    al,0x79
  414fbb:	xor    al,0x0
	...
  414fed:	add    BYTE PTR [ebx-0x16003ccc],ah
  414ff3:	inc    ecx
  414ff4:	mov    esi,0x826c2227
  414ff9:	ds arpl ax,di
  414ffc:	shl    BYTE PTR [edi+0x63],0x15
  415000:	vunpckhps ymm6,ymm0,YMMWORD PTR [ecx+ebp*8+0x11]
  415006:	arpl   WORD PTR [ecx+edi*8-0x41],bp
  41500a:	aaa    
  41500b:	dec    edi
  41500c:	int3   
  41500d:	out    0xc5,eax
  41500f:	xchg   ebp,eax
  415010:	gs (bad) 
  415012:	xor    esi,DWORD PTR [edx+eax*1]
  415015:	add    BYTE PTR [esi+esi*2-0x52e5f726],al
  41501c:	add    dl,BYTE PTR [eax-0x7c]
  41501f:	mov    eax,ds:0x48d3e7fa
  415024:	dec    BYTE PTR gs:[ebx+0x6cff25d8]
  41502b:	ret    
  41502c:	add    eax,DWORD PTR [esi-0x1d]
  41502f:	add    eax,0x5bd603e7
  415034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415035:	addr16 xchg ecx,eax
  415037:	inc    ebp
  415038:	dec    edi
  415039:	dec    bp
  41503b:	pop    esi
  41503c:	or     eax,0xee1cf671
  415041:	lock stc 
  415043:	pop    ebp
  415044:	jae    0x4150ad
  415046:	xor    eax,0x545be0d8
  41504b:	and    dh,ch
  41504d:	test   DWORD PTR gs:[edi+0x42af],edi
	...
  415084:	pusha  
  415085:	add    eax,0x82087934
  41508a:	lods   al,BYTE PTR ds:[esi]
  41508b:	push   0xb543057a
  415090:	add    eax,0xba5bf0d8
  415095:	and    BYTE PTR [esi-0x4b38149b],bh
  41509b:	(bad)  
  41509d:	in     eax,0xf6
  41509f:	mov    edx,0xe1105a3
  4150a4:	sub    al,ah
  4150a6:	call   0xc067e00f
  4150ab:	ret    0x65cc
  4150ae:	push   0xf15dc5c2
  4150b3:	inc    ebx
  4150b4:	xor    ah,bh
  4150b6:	sbb    ah,bl
  4150b8:	mov    ah,0x5d
  4150ba:	test   DWORD PTR [esi-0x3ce039bc],esp
  4150c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150c1:	int    0x65
  4150c3:	out    dx,eax
  4150c4:	fs ins DWORD PTR es:[edi],dx
  4150c6:	std    
  4150c7:	fist   WORD PTR [ebp+0x4db9405d]
  4150cd:	pop    esi
  4150ce:	dec    ebp
  4150cf:	fadd   QWORD PTR [ebp+ebx*2-0x39fb59ab]
  4150d6:	scas   eax,DWORD PTR es:[edi]
  4150d7:	ret    0xe574
  4150da:	push   esi
  4150dc:	test   eax,0x742dffc4
  4150e1:	add    eax,0x5c3cb7e8
  4150e6:	(bad)  
  4150e7:	push   ds
	...
  415118:	add    BYTE PTR [eax],al
  41511a:	inc    esp
  41511b:	popa   
  41511c:	(bad)  
  41511d:	pushf  
  41511e:	dec    eax
  41511f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  415121:	int    0xbf
  415123:	pop    ebx
  415124:	enter  0x632b,0x5
  415128:	push   ebp
  415129:	jb     0x4150c6
  41512b:	xchg   ebx,eax
  41512d:	cmc    
  41512e:	push   ds
  41512f:	mov    ah,0x69
  415131:	jmp    0x5d401e40
  415136:	pop    ds
  415137:	gs dec eax
  415139:	sbb    eax,0x2c885b7e
  41513e:	jnp    0x4150cf
  415140:	xor    al,0x29
  415142:	addr16 (bad) 
  415144:	push   DWORD PTR [ecx+0x45]
  415147:	shl    DWORD PTR [edi],0x28
  41514a:	pop    edi
  41514b:	test   DWORD PTR [esi],edi
  41514d:	jmp    0x17a9134e
  415152:	test   al,0xc5
  415154:	(bad)  
  415155:	cmp    eax,0xe9108a3f
  41515a:	pusha  
  41515b:	adc    al,al
  41515d:	sbb    eax,0x58e7b366
  415162:	or     BYTE PTR [esi+edi*8+0x19],bl
  415166:	lahf   
  415167:	pop    esp
  415168:	dec    BYTE PTR [esi+0x205fe4fe]
  41516e:	mov    al,ds:0xb56e4e5c
  415173:	add    al,0xe8
  415175:	mov    al,BYTE PTR [ebx+0x4f51fe5b]
  41517b:	sbb    bh,bh
  41517d:	push   esi
	...
  4151ae:	add    BYTE PTR [eax],al
  4151b0:	sub    eax,DWORD PTR ds:0x53e6946
  4151b6:	jne    0x4151b8
  4151b8:	and    BYTE PTR [edx-0x50b5cc06],bl
  4151be:	std    
  4151bf:	push   DWORD PTR ds:0x72aef0e1
  4151c5:	pop    ecx
  4151c6:	jae    0x415183
  4151c8:	test   DWORD PTR [ebx-0x6],ebp
  4151cb:	(bad)  
  4151cc:	out    dx,eax
  4151cd:	pop    edi
  4151ce:	out    0x2b,al
  4151d0:	ss loope 0x4151d0
  4151d3:	pop    edi
  4151d4:	hlt    
  4151d5:	push   ds
  4151d6:	rol    DWORD PTR [edx+ecx*2],0x4b
  4151da:	mov    esp,ebp
  4151dc:	leave  
  4151dd:	sbb    al,0xfb
  4151df:	push   esi
  4151e0:	int    0x3d
  4151e2:	(bad)  
  4151e3:	imul   ecx,ebx,0x320873e0
  4151e9:	int3   
  4151ea:	cmp    edi,edi
  4151ec:	xor    eax,0x81fc438a
  4151f1:	(bad)  
  4151f2:	aas    
  4151f3:	sub    BYTE PTR [ebx],bh
  4151f5:	add    DWORD PTR [ebx+0x41294e3d],ecx
  4151fb:	add    BYTE PTR [edx+0x3f740028],cl
  415201:	imul   ebp,DWORD PTR [edx+0x49],0xe857013b
  415208:	ficom  DWORD PTR [eax-0x2]
  41520b:	call   ecx
  41520d:	(bad)  
  41520e:	jb     0x41522f
  415210:	mov    ecx,gs
  415212:	xor    DWORD PTR [eax+0x0],ecx
	...
  415245:	add    ch,dl
  415247:	out    0x4e,eax
  415249:	push   0xbeef07ca
  41524e:	push   edx
  41524f:	addr16 inc edi
  415251:	inc    ecx
  415252:	mov    edx,0xc275fd97
  415257:	out    dx,eax
  415258:	and    esp,DWORD PTR [ebx+0x5]
  41525b:	call   0xe8b5a446
  415260:	std    
  415261:	jmp    0x4152c6
  415263:	ins    DWORD PTR es:[edi],dx
  415264:	enter  0x457f,0x6e
  415268:	xlat   BYTE PTR ds:[ebx]
  415269:	stc    
  41526a:	and    eax,0xbac016c2
  41526f:	sbb    ah,BYTE PTR [ebx-0x2]
  415272:	ins    BYTE PTR es:[edi],dx
  415273:	pop    ds
  415274:	mov    dl,0x37
  415276:	pop    esp
  415277:	xchg   ecx,eax
  415278:	popf   
  415279:	(bad)  
  41527a:	(bad)  
  41527b:	and    BYTE PTR [ebx+0x74],ah
  41527e:	imul   esi,esp,0xffffffb0
  415281:	cmp    cl,BYTE PTR [esp+esi*8-0x3e]
  415285:	pop    ebp
  415286:	sbb    ch,BYTE PTR [edi]
  415288:	or     BYTE PTR [eax],al
  41528a:	xchg   esi,eax
  41528b:	xlat   BYTE PTR ds:[ebx]
  41528c:	outs   dx,DWORD PTR ds:[esi]
  41528d:	sbb    BYTE PTR [edi],0x59
  415290:	in     al,dx
  415291:	(bad)  
  415292:	mov    edx,0x5b74617e
  415297:	add    al,0xd3
  415299:	cmp    bl,BYTE PTR [esp+eiz*2]
  41529c:	mov    eax,DWORD PTR [edi+edx*1-0x4b]
  4152a0:	mov    WORD PTR [eax-0x5e],cs
  4152a3:	ins    BYTE PTR es:[edi],dx
  4152a4:	popa   
  4152a5:	je     0x415302
  4152a7:	inc    esp
  4152a8:	rcr    bh,1
	...
  4152da:	add    BYTE PTR [eax],al
  4152dc:	cld    
  4152dd:	inc    ebx
  4152de:	popa   
  4152df:	je     0x4152d8
  4152e1:	fwait
  4152e2:	xlat   BYTE PTR ds:[ebx]
  4152e3:	pop    es
  4152e4:	sti    
  4152e5:	push   ss
  4152e6:	pop    ds
  4152e7:	jmp    esp
  4152e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152ea:	inc    esp
  4152eb:	add    esp,DWORD PTR [ebx+0x19]
  4152ee:	(bad)  
  4152ef:	jmp    0x4152d1
  4152f1:	mov    al,ds:0xa53b565e
  4152f6:	cmp    al,0x3f
  4152f8:	arpl   WORD PTR [esp+edx*8+0x0],si
  4152fc:	mov    al,ds:0xb7444983
  415301:	ins    BYTE PTR es:[edi],dx
  415302:	add    al,BYTE PTR [eax]
  415304:	arpl   WORD PTR [ebx],dx
  415306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415307:	dec    eax
  415308:	and    ch,BYTE PTR [ecx+eiz*2+0x74]
  41530c:	imul   eax,DWORD PTR ds:0xcf8e0876,0xffffffa7
  415313:	add    eax,DWORD PTR [edi]
  415315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415316:	sbb    BYTE PTR [ebx+eiz*2],al
  415319:	add    eax,0x562db69
  41531e:	mov    ebp,0xf0d0740b
  415323:	imul   edi,DWORD PTR [ecx],0x10
  415326:	bound  edi,QWORD PTR ss:[ebx-0x63]
  41532a:	call   0xc4aeb632
  41532f:	retf   0x5a55
  415332:	sbb    eax,0x66d64d8
  415337:	sbb    al,0x44
  415339:	pop    edx
  41533a:	dec    ecx
  41533b:	push   esp
  41533c:	stos   BYTE PTR es:[edi],al
  41533d:	(bad)  
  41533e:	call   0x41542a
	...
  41536f:	add    BYTE PTR [eax],al
  415371:	add    BYTE PTR ds:0x6303e910,dh
  415377:	add    eax,0x5ac04762
  41537c:	mov    bl,0x3
  41537e:	arpl   WORD PTR ds:0xeda4b6e9,ax
  415384:	cmp    DWORD PTR ds:0xc241054c,0x29
  41538b:	(bad)
  41538e:	or     BYTE PTR [ebx+ecx*1-0x16fa9cfc],0x60
  415396:	ja     0x4153a5
  415398:	mov    dh,0xf9
  41539a:	jecxz  0x4153b5
  41539c:	add    al,ah
  41539e:	pushf  
  41539f:	add    eax,0x5ce0011d
  4153a4:	clc    
  4153a5:	xlat   BYTE PTR ds:[ebx]
  4153a6:	pop    ebx
  4153a7:	inc    edx
  4153a8:	sub    esp,DWORD PTR [eax+0x63]
  4153ab:	add    eax,0xf3c803e9
  4153b0:	test   DWORD PTR [edi],edx
  4153b2:	mov    dl,0xce
  4153b4:	daa    
  4153b5:	add    al,0xac
  4153b7:	(bad)  
  4153b9:	jl     0x415350
  4153bb:	(bad)  
  4153bc:	inc    DWORD PTR [eax+0x66ff12de]
  4153c2:	fiadd  WORD PTR [ebp+0x17]
  4153c5:	push   edx
  4153c6:	call   0xbb0:0xd6458ab0
  4153cd:	bound  esp,QWORD PTR [ecx+ecx*1-0x75974401]
  4153d4:	jg     0x415357
	...
  415406:	add    BYTE PTR [eax],al
  415408:	addr16 add eax,0xd8d3600
  41540e:	(bad)
  415412:	(bad)  
  415413:	jmp    0x6e512adb
  415418:	out    0x94,eax
  41541a:	(bad)  
  41541b:	call   0x147dd880
  415420:	sub    eax,0xce8ffc6
  415425:	idiv   dh
  415427:	mov    ah,0x91
  415429:	into   
  41542a:	inc    eax
  41542b:	jmp    0xa43665f3
  415430:	and    DWORD PTR [ecx-0x1a],ebx
  415433:	add    DWORD PTR [edx+0x58],edi
  415436:	(bad)  
  415437:	mov    eax,ds:0xe9000560
  41543c:	lds    eax,FWORD PTR [esi+0x23]
  41543f:	jmp    0xe945dc48
  415444:	pusha  
  415445:	add    eax,0x49b6a00
  41544a:	xor    esi,0x60
  41544d:	or     BYTE PTR [ebp-0x1a8bc12],al
  415453:	jb     0x4153f2
  415455:	pop    esp
  415456:	pop    esi
  415457:	mov    al,0x26
  415459:	add    al,0x0
  41545b:	aas    
  41545c:	mov    bh,0x4b
  41545e:	fisubr DWORD PTR [ecx]
  415460:	addr16 pop ebp
  415462:	jno    0x415464
  415464:	retf   
  415465:	sar    ebp,0x8b
  415468:	repz sub esi,esi
  41546b:	mov    eax,DWORD PTR [eax]
	...
  41549d:	add    BYTE PTR [ebx],al
  41549f:	ins    DWORD PTR es:[edi],dx
  4154a0:	jle    0x41544a
  4154a2:	mov    eax,0x9cc98b03
  4154a7:	mov    edi,eax
  4154a9:	jmp    0x41550d
  4154ab:	mov    al,bh
  4154ad:	add    esi,DWORD PTR [ecx+ecx*4]
  4154b0:	(bad)  
  4154b1:	push   eax
  4154b2:	add    ebx,ecx
  4154b4:	out    0xa7,al
  4154b6:	ins    BYTE PTR es:[edi],dx
  4154b7:	add    al,0x0
  4154b9:	mov    esi,DWORD PTR [ebx]
  4154bb:	pushf  
  4154bc:	mov    ecx,ecx
  4154be:	jns    0x415482
  4154c0:	mov    ecx,ecx
  4154c2:	cld    
  4154c3:	or     dh,dh
  4154c5:	jne    0x41552d
  4154c7:	inc    esi
  4154c8:	rcl    DWORD PTR [ebp-0x2f],0xe8
  4154cc:	data16 or BYTE PTR [esi-0x270801bc],cl
  4154d3:	add    al,bl
  4154d5:	push   DWORD PTR [ecx+0x7a0b063f]
  4154db:	xor    BYTE PTR [edx],cl
  4154dd:	jmp    0x415516
  4154df:	out    0x6,al
  4154e1:	inc    BYTE PTR [edx]
  4154e3:	inc    esp
  4154e4:	jle    0x41551e
  4154e6:	or     bh,BYTE PTR ds:0xcb8c9f4
  4154ec:	add    BYTE PTR [ebp-0x7f],dl
  4154ef:	aad    0x81
  4154f1:	les    edx,FWORD PTR [esi]
  4154f3:	xchg   esp,eax
  4154f4:	data16 xor BYTE PTR [esi+0x28f7fe40],bh
  4154fb:	add    al,bl
  4154fd:	push   DWORD PTR [ebp+0xf24d]
	...
  415533:	add    dl,cl
  415535:	add    eax,DWORD PTR [eax]
  415537:	sub    esp,DWORD PTR [ecx-0x7503bc8b]
  41553d:	mov    eax,0x86630873
  415542:	js     0x415551
  415544:	arpl   WORD PTR [esi-0x79],bp
  415547:	mov    edi,0x745d993b
  41554c:	pop    ebx
  41554d:	jbe    0x415577
  41554f:	xor    al,0xa4
  415551:	into   
  415552:	mov    WORD PTR [ebx+ebx*4+0x2d],es
  415556:	mov    ah,0xe7
  415558:	pop    es
  415559:	and    bl,BYTE PTR [edi-0x2]
  41555c:	fisub  DWORD PTR [eax-0x4df101aa]
  415562:	imul   edx,DWORD PTR [ebx+0x6e],0x6e
  415566:	add    cl,BYTE PTR [ebx]
  415568:	mov    ds:0xf6fef699,eax
  41556d:	lds    ebx,FWORD PTR [esi+0x74]
  415570:	outs   dx,DWORD PTR ds:[esi]
  415571:	jge    0x4155dd
  415573:	xchg   DWORD PTR [edi-0x3101a0d9],ebx
  415579:	and    BYTE PTR [ecx+eax*2+0x5e],ch
  41557d:	ins    BYTE PTR es:[edi],dx
  41557e:	add    bh,bh
  415580:	into   
  415581:	fs push 0xfffffff3
  415584:	jbe    0x41558d
  415586:	pop    edi
  415587:	xor    BYTE PTR [esi+0x4d740258],0x74
  41558e:	cmovnp esp,DWORD PTR [edx+0x17745d6c]
  415595:	add    eax,0xd93
	...
  4155ca:	arpl   WORD PTR [ecx+ecx*1-0x40],bp
  4155ce:	xchg   edi,eax
  4155cf:	popa   
  4155d0:	cdq    
  4155d1:	add    BYTE PTR [ebx+0x6c],ah
  4155d4:	add    bh,bh
  4155d6:	jbe    0x415608
  4155d8:	push   0x5
  4155da:	aaa    
  4155db:	aas    
  4155dc:	pop    ebp
  4155dd:	mov    ah,BYTE PTR [eax]
  4155df:	and    al,0x4d
  4155e1:	rcr    DWORD PTR [edi+0x6c],0xb7
  4155e5:	mov    cl,bh
  4155e7:	les    ebx,FWORD PTR [ebp-0x16fadc25]
  4155ed:	pop    ebx
  4155ee:	push   edx
  4155ef:	add    al,0xaa
  4155f1:	pop    esi
  4155f2:	(bad)
  4155f5:	imul   ecx,DWORD PTR [edi+0x4a5e8e0f],0xd
  4155fc:	adc    DWORD PTR [edi],ecx
  4155fe:	jnp    0x4155c4
  415600:	call   0x814e8563
  415605:	fcom   QWORD PTR [esi+edx*2+0x6d]
  415609:	jmp    0x2c5a436a
  41560e:	and    al,BYTE PTR ds:0x6d5cd85e
  415614:	ret    0x7c1b
  415617:	push   esi
  415618:	dec    ebp
  415619:	fcomp  DWORD PTR [ebp+ebp*2+0x34]
  41561d:	pusha  
  41561e:	ins    DWORD PTR es:[edi],dx
  41561f:	push   esi
  415620:	add    BYTE PTR [ebx+eiz*2],0x5
  415624:	jmp    0xe9427875
  415629:	mov    eax,0x476968e9
	...
  41565e:	add    BYTE PTR [eax],al
  415660:	push   esp
  415661:	in     eax,dx
  415662:	jecxz  0x4156a4
  415664:	test   BYTE PTR ds:0x4263d111,al
  41566a:	or     eax,0x609af5e
  41566f:	fsub   DWORD PTR [ebp+ebp*2+0x78]
  415673:	sbb    DWORD PTR [esi+edx*2],esp
  415676:	sub    eax,0xe90418c8
  41567b:	add    esp,DWORD PTR [ebx-0x78]
  41567e:	sub    ebx,DWORD PTR [esp+ebx*4-0x13]
  415682:	out    0xc8,eax
  415684:	mov    ds:0xa44ac105,eax
  415689:	push   esi
  41568a:	int    0x9
  41568c:	and    edx,ecx
  41568e:	or     dh,BYTE PTR [ecx+eiz*8+0x6ff4c0d7]
  415695:	out    dx,eax
  415696:	inc    DWORD PTR [edx-0x29]
  415699:	(bad)  
  41569c:	jae    0x41570b
  41569e:	fnclex 
  4156a0:	das    
  4156a1:	push   edi
  4156a2:	or     ch,BYTE PTR [ecx+0x2cc6feab]
  4156a8:	inc    ebx
  4156a9:	push   esi
  4156aa:	(bad)  
  4156ab:	jmp    0xc2a5c410
  4156b0:	xorps  xmm1,XMMWORD PTR [edx-0x3eb2bcdc]
  4156b7:	loope  0x415719
  4156b9:	mov    al,0x8a
  4156bb:	jge    0x41568f
  4156bd:	fstp   QWORD PTR [edi+0x44]
  4156c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156c1:	push   ebp
  4156c2:	neg    bl
	...
  4156f4:	add    BYTE PTR [eax],al
  4156f6:	popa   
  4156f7:	inc    edx
  4156f8:	inc    BYTE PTR [edx]
  4156fa:	cmp    dl,BYTE PTR [edi+0x74]
  4156fd:	loope  0x415707
  4156ff:	mov    edi,0xb0e46fe
  415704:	shr    dh,0xdc
  415707:	outs   dx,DWORD PTR ds:[esi]
  415708:	(bad)  
  415709:	call   0xe1b5ab6e
  41570e:	enter  0x3150,0x26
  415712:	scas   al,BYTE PTR es:[edi]
  415713:	(bad)  
  415714:	mov    edi,0x895e5d94
  415719:	jmp    0x95405c7e
  41571e:	fs push esp
  415720:	je     0x415713
  415722:	mov    eax,0x87fefeeb
  415727:	push   ebx
  415728:	je     0x41570b
  41572a:	mov    BYTE PTR [ebx],bl
  41572c:	cmp    ch,dh
  41572e:	mov    bh,0xff
  415730:	mov    edi,0x7060615c
  415735:	fisubr WORD PTR ds:0x58a0e80d
  41573b:	push   esp
  41573c:	(bad)  
  41573d:	loop   0x4156df
  41573f:	fld    DWORD PTR [ecx]
  415741:	add    BYTE PTR [ecx],dl
  415743:	data16 std 
  415745:	jne    0x415739
  415747:	loopne 0x415768
  415749:	cmp    DWORD PTR ds:0x8fc009b2,edx
  41574f:	pop    es
  415750:	jmp    0x4157a7
  415752:	jb     0x4156ef
  415754:	and    eax,0x73b1ba41
  415759:	or     BYTE PTR [eax],al
	...
  41578b:	add    dl,ah
  41578d:	mov    ?,WORD PTR [edx]
  41578f:	jmp    ebp
  415791:	std    
  415792:	mov    edi,0x40ddb875
  415797:	jmp    FWORD PTR [edi-0x2d651800]
  41579d:	mov    cl,0xfd
  41579f:	or     ecx,edx
  4157a1:	cmp    eax,DWORD PTR [eax]
  4157a3:	jmp    0x415813
  4157a5:	mov    dl,0x73
  4157a7:	or     BYTE PTR [edx],dh
  4157a9:	mov    dh,0x36
  4157ab:	call   DWORD PTR ds:0x8875bffd
  4157b1:	frstor [edi+edi*8]
  4157b4:	scas   eax,DWORD PTR es:[edi]
  4157b5:	add    al,ch
  4157b7:	xchg   DWORD PTR [eax-0x4f],ebp
  4157ba:	std    
  4157bb:	adc    DWORD PTR [edx+0x61027728],0xffffffc9
  4157c2:	or     eax,eax
  4157c4:	out    dx,al
  4157c5:	push   esp
  4157c6:	cmp    eax,DWORD PTR [eax]
  4157c8:	cmp    bl,BYTE PTR [eax-0x2]
  4157cb:	jb     0x415813
  4157cd:	ins    DWORD PTR es:[edi],dx
  4157ce:	(bad)  
  4157cf:	dec    DWORD PTR [edx+0x8]
  4157d2:	jmp    0x4157d9
  4157d4:	mov    eax,ds:0x3a000005
  4157d9:	jge    0x41579c
  4157db:	pop    ebx
  4157dc:	inc    ebx
  4157dd:	mov    BYTE PTR [esi],0x0
  4157e0:	out    dx,eax
  4157e1:	jl     0x4157cd
  4157e3:	push   0x3f0f5b
  4157e8:	add    bh,BYTE PTR [ebx]
  4157ea:	inc    edx
  4157ec:	arpl   WORD PTR [ebx],di
  4157ee:	pop    edx
  4157ef:	je     0x4157f1
	...
  415821:	add    BYTE PTR [edi+0x43],ah
  415824:	rol    BYTE PTR [edi],1
  415826:	sti    
  415827:	add    ebx,DWORD PTR [ebx-0x2]
  41582a:	in     al,0x56
  41582c:	inc    edx
  41582d:	je     0x4158a8
  41582f:	fwait
  415830:	ror    BYTE PTR [ebx],1
  415832:	aam    0x18
  415834:	or     al,0xe8
  415836:	je     0x4157e3
  415838:	pop    edx
  415839:	(bad)  
  41583a:	pop    eax
  41583b:	sahf   
  41583c:	ror    BYTE PTR [edx],1
  41583e:	mov    esp,0x2eff07f0
  415843:	pushw  0x7
  415846:	lods   al,BYTE PTR ds:[esi]
  415847:	mov    bl,BYTE PTR [edx-0x38]
  41584a:	mov    eax,ds:0xe8550255
  41584f:	mov    DWORD PTR [esi-0x4d11803d],eax
  415855:	addr16 add ecx,esp
  415858:	ret    
  415859:	dec    DWORD PTR [edi+ebp*1+0x67cc303]
  415860:	aas    
  415861:	out    0xa1,eax
  415863:	xchg   esi,eax
  415864:	pop    ecx
  415865:	(bad)  
  415866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415867:	mov    al,ds:0x5d64ff66
  41586c:	add    cl,BYTE PTR [ebp-0x184c375a]
  415872:	jmp    0x66a9:0xe0fe594d
  415879:	dec    edi
  41587b:	add    al,0x89
  41587d:	inc    esp
  41587e:	dec    edi
  41587f:	lea    ebp,[edx+0x79]
  415882:	jb     0x415887
  415884:	pop    ebx
  415885:	add    BYTE PTR [eax],0x0
	...
  4158b8:	scas   al,BYTE PTR es:[edi]
  4158b9:	clc    
  4158ba:	add    esi,DWORD PTR [ebp+0x5a]
  4158bd:	loope  0x41587f
  4158bf:	jmp    0x415874
  4158c1:	add    al,0xef
  4158c3:	xor    BYTE PTR [esp+eiz*2],dl
  4158c6:	test   DWORD PTR [edi+edi*8+0x5],edi
  4158ca:	jmp    0xe8c537d9
  4158cf:	add    esp,DWORD PTR [ebx-0x80]
  4158d2:	sub    edx,DWORD PTR [esp+eiz*4+0x52]
  4158d6:	push   ebx
  4158d7:	push   0x5ac5dd04
  4158dc:	in     eax,0x86
  4158de:	rol    BYTE PTR [esi+edx*2],0xd0
  4158e2:	jne    0x4158c9
  4158e4:	jge    0x4158aa
  4158e6:	call   0x2b8b8459
  4158eb:	pusha  
  4158ec:	pop    edx
  4158ed:	add    eax,0xc8a403e9
  4158f2:	add    BYTE PTR [ebx],0x63
  4158f5:	add    eax,0x5d2788e9
  4158fa:	sbb    BYTE PTR [ebx+0x2f],bl
  4158fd:	popa   
  4158fe:	adc    eax,0x75af916c
  415903:	pop    edx
  415904:	imul   eax,DWORD PTR [ebp-0xc],0x50d0e1f3
  41590b:	add    ecx,DWORD PTR [edi]
  41590d:	call   FWORD PTR [ebp-0x30]
  415910:	test   BYTE PTR [ebp+0x11],bl
  415913:	pop    ecx
  415914:	jne    0x415968
  415916:	popa   
  415917:	cmp    ebp,DWORD PTR [ebp-0x28]
  41591a:	push   eax
  41591b:	imul   eax,DWORD PTR [eax],0x0
	...
  41594e:	xor    eax,0x695a3e14
  415953:	cs mov ebx,0x44cfe1f0
  415959:	add    edx,edi
  41595b:	add    ah,BYTE PTR [esi]
  41595d:	enter  0xdd40,0x70
  415961:	idiv   BYTE PTR [edx+edx*2]
  415964:	add    BYTE PTR [esi+0x69],dh
  415967:	add    eax,0x5df56ee9
  41596c:	out    0xc2,eax
  41596e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41596f:	adc    ch,cl
  415971:	rcr    BYTE PTR [edx],1
  415973:	retf   0x68ff
  415976:	jns    0x41597d
  415978:	je     0x41595f
  41597a:	pop    ebp
  41597b:	cs jae 0x415905
  41597e:	push   esi
  41597f:	cs jae 0x41597b
  415982:	push   cs
  415983:	add    cl,BYTE PTR [ebp+0x67c28f2c]
  415989:	call   0xd1411ead
  41598e:	mov    bh,0xc8
  415990:	(bad)  
  415991:	mov    esi,0xc1ebd93a
  415996:	inc    edi
  415997:	and    bh,bh
  415999:	scas   al,BYTE PTR es:[edi]
  41599a:	fiadd  WORD PTR [esi+0x5e]
  41599d:	inc    edx
  41599e:	sbb    BYTE PTR [edi+0x54],al
  4159a1:	jb     0x4159ee
  4159a3:	test   ebx,eax
  4159a5:	dec    ecx
  4159a6:	sbb    DWORD PTR [ebx-0x2],edx
  4159a9:	ss icebp 
  4159ab:	jmp    0x51e0ffff
  4159b0:	idiv   bl
	...
  4159e2:	add    BYTE PTR [eax],al
  4159e4:	popa   
  4159e5:	inc    esi
  4159e6:	(bad)  
  4159e7:	ss in  al,0x2a
  4159ea:	inc    ecx
  4159eb:	jmp    0xf6416cd0
  4159f0:	add    al,0x3f
  4159f2:	add    cl,ch
  4159f4:	pusha  
  4159f5:	add    BYTE PTR [ebp+ebx*2-0x4601ace7],0xb3
  4159fd:	imul   ebp,DWORD PTR [edi],0xa530ba1
  415a03:	sub    DWORD PTR [edx-0x77],ebp
  415a06:	mov    ds:0x830560e8,eax
  415a0b:	ins    BYTE PTR es:[edi],dx
  415a0c:	mov    bl,0x52
  415a0e:	(bad)  
  415a0f:	es pop edi
  415a11:	add    BYTE PTR [esi+esi*2+0x64000560],al
  415a18:	mov    ah,0xa8
  415a1a:	std    
  415a1b:	push   cs
  415a1c:	mov    al,al
  415a1e:	inc    BYTE PTR [eax]
  415a20:	addr16 mov ch,0xfc
  415a23:	call   FWORD PTR ds:0xd37ecdd
  415a29:	scas   al,BYTE PTR es:[edi]
  415a2a:	sub    esi,esi
  415a2c:	add    DWORD PTR [eax-0x5202015e],0xffffffe9
  415a33:	aaa    
  415a34:	push   esp
  415a35:	(bad)  
  415a36:	mov    ch,0x84
  415a38:	pop    esp
  415a39:	mov    eax,ds:0x951dfffc
  415a3e:	and    ax,0x4431
  415a42:	dec    BYTE PTR [edi+eax*2+0xfffcca]
	...
  415a79:	add    BYTE PTR ds:0xc141e695,cl
  415a7f:	add    al,0x0
  415a81:	xor    esi,0x8
  415a84:	lea    eax,[ebp-0x250f8]
  415a8a:	jp     0x415a3a
  415a8c:	mov    bl,0xa4
  415a8e:	fsubr  QWORD PTR [ebp-0x73a1703]
  415a94:	(bad)  
  415a95:	call   DWORD PTR [ebx]
  415a97:	iret   
  415a98:	mov    ds:0x44ad0dfe,al
  415a9d:	cmp    esp,0x53
  415aa0:	jo     0x415a66
  415aa2:	std    
  415aa3:	jle    0x415a97
  415aa5:	(bad)  
  415aa6:	sbb    eax,0x58b4e6ad
  415aab:	scas   al,BYTE PTR es:[edi]
  415aac:	std    
  415aad:	mov    DWORD PTR [edi],0x1dfffc6c
  415ab3:	add    al,0x0
  415ab5:	add    BYTE PTR [edx+0x62],cl
  415ab8:	add    BYTE PTR [ebp-0x39339],cl
  415abe:	jge    0x415a54
  415ac0:	std    
  415ac1:	mov    ch,0x66
  415ac3:	scas   al,BYTE PTR es:[edi]
  415ac4:	std    
  415ac5:	call   DWORD PTR [edx+0x4e]
  415ac8:	das    
  415ac9:	jmp    DWORD PTR [ebx-0x9]
  415acc:	or     eax,eax
  415ace:	pop    esp
  415acf:	jmp    0xbc81:0x5e24ff5a
  415ad6:	fisttp DWORD PTR [edi+0x56]
  415ad9:	(bad)  
  415ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415adb:	je     0x415adf
	...
  415b0d:	add    BYTE PTR [eax],al
  415b0f:	add    BYTE PTR [ecx+ebp*8+0x6a],bl
  415b13:	inc    DWORD PTR [esi+ebx*2]
  415b16:	xchg   DWORD PTR [eax+edi*8-0x6c01a9d1],eax
  415b1d:	(bad)  
  415b1e:	inc    DWORD PTR [eax]
  415b20:	arpl   WORD PTR [esi+0x6a],bx
  415b23:	jecxz  0x415b7f
  415b25:	pop    esi
  415b26:	add    cl,BYTE PTR [ebx]
  415b28:	mov    ds:0x63ce7e5e,eax
  415b2d:	pop    esi
  415b2e:	add    bh,BYTE PTR ds:0x25d67
  415b34:	push   esp
  415b35:	fistp  QWORD PTR [edi]
  415b37:	(bad)  
  415b38:	mov    esp,0x694f6a5d
  415b3d:	pop    esi
  415b3e:	add    dl,BYTE PTR [eax+0x3b]
  415b41:	pusha  
  415b42:	leave  
  415b43:	inc    eax
  415b44:	arpl   cx,bx
  415b46:	add    cl,0x9d
  415b49:	into   
  415b4a:	push   esi
  415b4b:	dec    edi
  415b4c:	mov    eax,ecx
  415b4e:	or     DWORD PTR [eax],eax
  415b50:	arpl   bx,bx
  415b52:	aas    
  415b53:	or     edi,ecx
  415b55:	pop    ebp
  415b56:	xchg   DWORD PTR [eax+edi*2+0x13fe56af],eax
  415b5d:	(bad)  
  415b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b5f:	or     BYTE PTR [ebx+0x5e],ah
  415b62:	xchg   DWORD PTR [eax+ebp*2-0x4c01a939],eax
  415b69:	mov    ah,0x13
  415b6b:	inc    ebx
  415b6c:	push   esp
  415b6d:	sbb    BYTE PTR [ebx],cl
  415b6f:	rcl    dh,0xfc
  415b72:	jmp    0x415b0b
	...
  415ba4:	add    BYTE PTR [eax],al
  415ba6:	jnp    0x415bad
  415ba8:	test   al,0x3
  415baa:	out    dx,al
  415bab:	mov    BYTE PTR [ecx],ah
  415bad:	push   esi
  415bae:	xor    eax,0x1b6bb84f
  415bb3:	or     ecx,DWORD PTR [esi]
  415bb5:	push   edi
  415bb6:	xlat   BYTE PTR ds:[ebx]
  415bb7:	js     0x415be3
  415bb9:	push   esi
  415bba:	sbb    eax,0xfcb39a4f
  415bbf:	cmc    
  415bc0:	mov    ah,0x56
  415bc2:	or     eax,0xdf88d95b
  415bc7:	inc    ebx
  415bc8:	out    0x56,al
  415bca:	std    
  415bcb:	mov    ch,0x6b
  415bcd:	cmp    cl,0x4f
  415bd0:	aad    0x56
  415bd2:	pushf  
  415bd3:	pop    ebp
  415bd4:	test   DWORD PTR [edx],ebx
  415bd6:	in     al,0x4e
  415bd8:	outs   dx,DWORD PTR ds:[esi]
  415bd9:	sbb    BYTE PTR [eax],0x50
  415bdc:	mov    ebp,0x7498d556
  415be1:	push   ebp
  415be2:	int    0x4e
  415be4:	lods   eax,DWORD PTR ds:[esi]
  415be5:	nop
  415be6:	ror    BYTE PTR [edi-0x5b],1
  415be9:	push   esi
  415bea:	(bad)  
  415beb:	(bad)  
  415bed:	push   esi
  415bee:	mov    ch,0xfa
  415bf0:	test   al,0xcf
  415bf2:	jno    0x415bd1
  415bf4:	ret    0x23ca
  415bf7:	add    eax,0x5645e91
  415bfc:	jmp    0x225c58b4
  415c01:	lds    ecx,FWORD PTR [edi+ecx*2+0x4e869f33]
  415c08:	imul   eax,DWORD PTR gs:[eax],0x0
	...
  415c3c:	jne    0x415c00
  415c3e:	pop    ebp
  415c3f:	push   esi
  415c40:	or     al,BYTE PTR [ebx+eax*8]
  415c43:	add    edi,ecx
  415c45:	add    al,0x4e
  415c47:	nop
  415c48:	test   al,0x4f
  415c4a:	inc    ebp
  415c4b:	push   esi
  415c4c:	les    esp,FWORD PTR [ebx]
  415c4e:	adc    ch,al
  415c50:	push   esp
  415c51:	fdiv   st(7),st
  415c53:	call   0xe94b1f10
  415c58:	pusha  
  415c59:	dec    esi
  415c5a:	mov    ah,0x65
  415c5c:	xchg   esi,eax
  415c5d:	dec    edi
  415c5e:	(bad)  
  415c5f:	adc    ebp,edi
  415c61:	push   ss
  415c62:	call   DWORD PTR [esi]
  415c64:	xchg   ebp,eax
  415c65:	cdq    
  415c66:	mov    ds:0xe74f8d0f,eax
  415c6b:	dec    ebp
  415c6c:	ins    DWORD PTR es:[edi],dx
  415c6d:	dec    esi
  415c6e:	(bad)  
  415c6f:	(bad)  
  415c70:	in     al,0x51
  415c72:	std    
  415c73:	div    BYTE PTR [esi-0x5241fa9a]
  415c79:	dec    edi
  415c7a:	sti    
  415c7b:	sbb    ah,BYTE PTR [edi-0x71210173]
  415c81:	dec    edi
  415c82:	icebp  
  415c83:	xchg   DWORD PTR [edi+0x6],ecx
  415c86:	pcmpgtb mm2,QWORD PTR [edi+ecx*2-0x2]
  415c8b:	(bad)  
  415c8c:	adc    eax,0x4aac8af
  415c91:	jnp    0x415c7e
  415c93:	push   0x23
  415c95:	pop    esi
  415c96:	addr16 in al,dx
  415c98:	inc    ecx
  415c99:	push   cs
  415c9a:	add    BYTE PTR [ecx-0x613cfb6f],ah
	...
  415cd0:	add    BYTE PTR [eax],al
  415cd2:	jmp    0x5:0x61ec6733
  415cd9:	or     DWORD PTR [ebp-0x157900ea],0x3b248833
  415ce3:	jnp    0x415cb6
  415ce5:	add    DWORD PTR [esp+eax*1-0x1f071700],ecx
  415cec:	ss pushw ss
  415cef:	jnp    0x415cc2
  415cf1:	jo     0x415ca7
  415cf3:	pop    ebp
  415cf4:	addr16 in al,dx
  415cf6:	popa   
  415cf7:	add    eax,0x16ad4100
  415cfc:	inc    DWORD PTR [eax]
  415cfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cff:	jle    0x415cd1
  415d01:	mov    edi,DWORD PTR [eax-0x80]
  415d04:	inc    ebx
  415d05:	clc    
  415d06:	rcl    DWORD PTR [edi],0x8a
  415d09:	shl    BYTE PTR [edx],cl
  415d0b:	dec    ebp
  415d0c:	(bad)  
  415d0d:	dec    DWORD PTR [edx-0x4e]
  415d10:	jae    0x415d0e
  415d12:	ror    BYTE PTR [eax],1
  415d14:	call   0x4aa034
  415d19:	mov    ebp,DWORD PTR [eax+0x7e]
  415d1c:	sar    bh,1
  415d1e:	lahf   
  415d1f:	mov    eax,0x90b0466
  415d24:	add    al,ch
  415d26:	nop
  415d27:	add    BYTE PTR [eax],al
  415d29:	add    BYTE PTR [ecx],al
  415d2b:	leave  
  415d2c:	jb     0x415d3d
  415d2e:	jno    0x415d46
  415d30:	addr16 das 
  415d32:	xor    DWORD PTR [eax-0x2],ecx
  415d35:	inc    BYTE PTR [eax]
	...
  415d67:	add    BYTE PTR [edi+0x231e6b1],cl
  415d6d:	or     DWORD PTR [eax],eax
  415d6f:	mov    edi,eax
  415d71:	pop    esi
  415d72:	(bad)  
  415d73:	imul   ecx,edx,0xba6a005e
  415d79:	pop    esi
  415d7a:	add    DWORD PTR [eax-0x46],ebp
  415d7d:	or     BYTE PTR [eax],al
  415d7f:	rol    BYTE PTR ds:0xf6e8ee3c,0x49
  415d86:	(bad)  
  415d87:	inc    DWORD PTR [ebx-0x75]
  415d8a:	repnz inc eax
  415d8c:	ror    eax,0x73
  415d8f:	inc    esp
  415d90:	in     eax,0x3b
  415d92:	cli    
  415d93:	dec    DWORD PTR [edi+0x7dffe6b8]
  415d99:	or     BYTE PTR [eax],al
  415d9b:	push   0x56
  415d9d:	pop    edi
  415d9e:	(bad)  
  415d9f:	(bad)  
  415da0:	lahf   
  415da1:	mov    eax,0x87373e6
  415da6:	add    BYTE PTR [ebx],cl
  415da8:	arpl   WORD PTR [esi],bx
  415daa:	iret   
  415dab:	or     esp,DWORD PTR [ebx]
  415dad:	inc    esi
  415dae:	and    ecx,DWORD PTR [ebx-0x5e]
  415db1:	pop    esi
  415db2:	mov    dl,0xe7
  415db4:	inc    eax
  415db5:	arpl   WORD PTR [edx],ax
  415db7:	add    BYTE PTR [ecx-0x450017a2],bh
  415dbd:	pusha  
  415dbe:	call   0xeaa128c2
  415dc3:	push   DWORD PTR [esi+ebx*2]
  415dc6:	inc    edx
  415dc7:	(bad)  
  415dc8:	mov    dh,0xee
  415dca:	push   0xffffff95
	...
  415dfc:	add    BYTE PTR [eax],al
  415dfe:	pop    esp
  415dff:	pop    esi
  415e00:	add    cl,BYTE PTR [ecx+0x73c14aa6]
  415e06:	mov    BYTE PTR [esi+0xb],dh
  415e09:	dec    ebx
  415e0a:	mov    ds:0x5c9d6a5e,al
  415e0f:	pop    esi
  415e10:	add    dl,BYTE PTR [eax-0x75]
  415e13:	jmp    0x415dd3
  415e15:	inc    eax
  415e16:	arpl   WORD PTR [ebx],bp
  415e18:	fdiv   st,st(3)
  415e1a:	sti    
  415e1b:	mov    ds:0xde4ff14,eax
  415e20:	push   ebx
  415e21:	je     0x415dfa
  415e23:	xor    eax,0x5e6306ce
  415e28:	stos   BYTE PTR es:[edi],al
  415e29:	or     ah,BYTE PTR [ebx+0x20eb0608]
  415e2f:	fdivr  st,st(3)
  415e32:	dec    ebx
  415e33:	and    edi,DWORD PTR [edi-0x27949cc0]
  415e39:	idiv   DWORD PTR [ebx-0x5b000457]
  415e3f:	fiadd  WORD PTR [edi+0xb]
  415e42:	or     esp,ebp
  415e44:	mov    esi,0x94766340
  415e49:	push   es
  415e4a:	arpl   WORD PTR [esi-0x3],bx
  415e4d:	mov    edi,0x8ada400f
  415e52:	sub    BYTE PTR ds:0x5d1303a8,al
  415e58:	nop
  415e59:	or     esp,DWORD PTR [ebx+0x5]
  415e5c:	loop   0x415ea1
  415e5e:	lock test edx,0x3
	...
  415e91:	add    BYTE PTR [eax],al
  415e93:	add    cl,cl
  415e95:	add    eax,0x4b4cd946
  415e9a:	mov    bl,0x53
  415e9c:	les    esp,FWORD PTR [edi]
  415e9e:	add    ch,al
  415ea0:	inc    esp
  415ea1:	fucomp st(0)
  415ea3:	push   edx
  415ea4:	sub    al,0x4b
  415ea6:	fwait
  415ea7:	dec    edi
  415ea8:	cmp    al,0x15
  415eaa:	xlat   BYTE PTR ds:[ebx]
  415eab:	push   edx
  415eac:	sub    eax,0x3c539b4b
  415eb1:	sbb    eax,0x4b1d52d7
  415eb6:	jnp    0x415f03
  415eb8:	cld    
  415eb9:	and    al,0xb7
  415ebb:	push   edx
  415ebc:	or     eax,0xb1bb293d
  415ec1:	fisttp QWORD PTR [ebx+0x66]
  415ec4:	cmp    al,0x5
  415ec6:	loope  0x415e9d
  415ec8:	arpl   WORD PTR [esi-0x23],ax
  415ecb:	mov    fs,WORD PTR [ebx+0x5]
  415ece:	jmp    0x21cc02d6
  415ed3:	(bad)
  415ed6:	out    0xba,eax
  415ed8:	mov    esp,0xcd532494
  415edd:	es xchg ecx,eax
  415edf:	dec    edi
  415ee0:	xchg   ecx,eax
  415ee1:	inc    ebp
  415ee2:	outs   dx,DWORD PTR ds:[esi]
  415ee3:	push   edx
  415ee4:	mov    ebp,0x655a54a
  415ee9:	push   cs
  415eea:	out    0xd8,al
  415eec:	les    edi,FWORD PTR [esi-0x57]
  415eef:	scas   al,BYTE PTR es:[edi]
  415ef0:	add    eax,0x887f3346
  415ef5:	xchg   BYTE PTR [ebx+edx*2+0x0],ch
	...
  415f28:	add    BYTE PTR [eax],al
  415f2a:	xor    ebp,ebx
  415f2c:	xchg   ebx,eax
  415f2d:	gs dec esp
  415f2f:	add    eax,0x5ae7100
  415f34:	ret    
  415f35:	outs   dx,BYTE PTR ds:[esi]
  415f36:	in     eax,0x9
  415f38:	mov    cl,0x17
  415f3a:	sahf   
  415f3b:	dec    edx
  415f3c:	(bad)  
  415f3d:	aad    0x76
  415f3f:	xchg   DWORD PTR [eax+edx*4],edi
  415f42:	inc    edx
  415f43:	(bad)  
  415f44:	(bad)  
  415f45:	call   0x4c45c7e
  415f4a:	repnz pop ss
  415f4c:	inc    ecx
  415f4d:	jmp    0x2462fb2
  415f52:	lahf   
  415f53:	scas   eax,DWORD PTR es:[edi]
  415f54:	enter  0x5d2a,0x2e
  415f58:	out    0xcd,eax
  415f5a:	imul   eax,DWORD PTR ds:0x4deb6c00,0xba288351
  415f64:	(bad)  
  415f65:	hlt    
  415f66:	not    DWORD PTR [edi]
  415f68:	inc    ecx
  415f69:	jmp    0x654fe983
  415f6e:	nop
  415f6f:	dec    edx
  415f70:	(bad)  
  415f71:	jmp    0xea39210f
  415f76:	pusha  
  415f77:	add    eax,0x521c7400
  415f7c:	dec    edi
  415f7d:	push   ebx
  415f7e:	addr16 (bad) 
  415f81:	inc    edx
  415f82:	pusha  
  415f83:	dec    edx
  415f84:	je     0x415f53
  415f86:	xor    dh,cl
  415f88:	mov    eax,0x949a017
  415f8d:	test   eax,0x0
	...
  415fbe:	add    BYTE PTR [eax],al
  415fc0:	mov    ah,0xdb
  415fc2:	out    0x39,eax
  415fc4:	pop    edx
  415fc5:	add    eax,0xcc2f6a00
  415fca:	je     0x415fd5
  415fcc:	fmulp  st(0),st
  415fce:	imul   ecx
  415fd0:	xchg   esp,eax
  415fd1:	stos   DWORD PTR es:[edi],eax
  415fd2:	(bad)  
  415fd3:	sbb    al,0x17
  415fd5:	bound  edi,QWORD PTR [edi-0x2c]
  415fd8:	xor    ecx,DWORD PTR [ebx-0x78]
  415fdb:	add    BYTE PTR [edi-0x53],al
  415fde:	mov    eax,DWORD PTR [ebp-0x1e]
  415fe1:	nop
  415fe2:	std    
  415fe3:	jne    0x415ff7
  415fe5:	mov    ah,0x73
  415fe7:	hlt    
  415fe8:	pusha  
  415fe9:	push   es
  415fea:	push   DWORD PTR [ebp-0x2]
  415fed:	mov    bl,0x13
  415fef:	mov    ecx,0xafe465c
  415ff4:	cmp    ch,BYTE PTR ds:0xb1078b2c
  415ffa:	mov    DWORD PTR [eax],edx
  415ffc:	iret   
  415ffd:	inc    eax
  415ffe:	out    dx,al
  415fff:	push   eax
  416000:	call   0x5cfe73ba
  416005:	inc    esp
  416006:	dec    BYTE PTR [edx]
  416008:	mov    ch,BYTE PTR ds:0x8a986818
  41600e:	aas    
  41600f:	add    BYTE PTR [ebp+0x30],cl
  416012:	out    dx,al
  416013:	call   0x415b78
  416018:	add    ebp,eax
  41601a:	jae    0x41601d
  41601c:	leave  
  41601d:	mov    ch,0x73
  41601f:	lock jb 0x416012
  416022:	add    eax,0x0
	...
  416053:	add    BYTE PTR [eax],al
  416055:	add    dl,bh
  416057:	mov    ch,0x73
  416059:	hlt    
  41605a:	bound  ecx,QWORD PTR [esi+0x33]
  41605d:	(bad)  
  41605e:	std    
  41605f:	mov    ch,0x73
  416061:	cld    
  416062:	adc    bh,dh
  416064:	add    eax,0xc1c9fa00
  416069:	pop    ebx
  41606a:	add    eax,edx
  41606c:	push   ebx
  41606d:	mov    ebp,DWORD PTR [esi+0xcc0c283]
  416073:	mov    dh,0xfd
  416075:	push   ebx
  416076:	and    dh,BYTE PTR [edi-0x1f]
  416079:	inc    eax
  41607a:	retf   0x70bc
  41607d:	add    DWORD PTR [ecx],ecx
  41607f:	mov    dh,0x81
  416081:	cmp    eax,0x40ecd8
  416086:	arpl   WORD PTR [esi-0x2a],bx
  416089:	sbb    ah,al
  41608b:	cmp    DWORD PTR [eax+0x27],ebp
  41608e:	and    bl,BYTE PTR [esi+0x2]
  416091:	je     0x416104
  416093:	fisttp DWORD PTR ds:0x41d35b1
  416099:	add    bh,dh
  41609b:	cmp    DWORD PTR fs:[esi+ebp*4],0xfffffff0
  4160a0:	ret    0x6cff
  4160a3:	xor    DWORD PTR ds:0x3993a32b,eax
  4160a9:	ret    0x1388
  4160ac:	push   eax
  4160ad:	adc    al,0x41
  4160af:	test   dl,0xff
  4160b2:	(bad)  [eax+0x21dec656]
  4160b8:	push   ecx
  4160b9:	inc    BYTE PTR [eax]
	...
  4160eb:	add    BYTE PTR [esi+eax*1],bh
  4160ee:	add    eax,DWORD PTR [eax]
  4160f0:	arpl   WORD PTR [edx+eax*1+0x6a],si
  4160f4:	popa   
  4160f5:	neg    BYTE PTR [ecx-0x7ca19cfb]
  4160fb:	neg    DWORD PTR [edi+eiz*1]
  4160fe:	xchg   BYTE PTR ds:0x89025e62,bl
  416104:	out    0x15,al
  416106:	push   ecx
  416107:	inc    BYTE PTR [ecx+eiz*8]
  41610a:	test   ebx,ecx
  41610c:	std    
  41610d:	push   esi
  41610e:	dec    esi
  41610f:	dec    edi
  416110:	hlt    
  416111:	push   0x26ecfd3b
  416116:	pop    ebx
  416117:	lea    ebx,[ebp+0x5e]
  41611a:	add    cl,BYTE PTR [ebx]
  41611c:	mov    ds:0x63f28626,eax
  416121:	pop    esi
  416122:	add    ch,BYTE PTR [eax+0x6]
  416125:	adc    eax,ebp
  416127:	call   edi
  416129:	fcom   DWORD PTR [ebx-0x3]
  41612c:	mov    esp,0x52e7b396
  416131:	add    eax,0xfc6303ee
  416136:	test   al,0xff
  416138:	loopne 0x41617d
  41613a:	call   0x6381c442
  41613f:	dec    eax
  416140:	xchg   esi,eax
  416141:	inc    edi
  416142:	test   DWORD PTR [ebx+eiz*2],eax
  416145:	add    eax,0x40df80e9
  41614a:	jbe    0x41619b
  41614c:	jge    0x416102
  41614e:	ins    DWORD PTR es:[edi],dx
  41614f:	cdq    
	...
  416180:	add    BYTE PTR [eax],al
  416182:	nop
  416183:	inc    esi
  416184:	gs dec edi
  416186:	ins    DWORD PTR es:[edi],dx
  416187:	icebp  
  416188:	inc    esi
  416189:	sbb    al,0x22
  41618b:	add    eax,0x48207962
  416190:	dec    ebp
  416191:	dec    edi
  416192:	imul   eax,DWORD PTR [ebp-0xb],0xe905f487
  416199:	add    ecx,DWORD PTR [eax-0x1800c350]
  41619f:	jbe    0x416189
  4161a1:	add    esp,DWORD PTR [ebx+0x46]
  4161a4:	pop    ebx
  4161a5:	cmp    BYTE PTR [esi],ch
  4161a7:	inc    edi
  4161a8:	sbb    eax,0xe8df24da
  4161ad:	add    esp,DWORD PTR [ebx+0x3]
  4161b0:	add    DWORD PTR [ecx],esp
  4161b2:	pop    ebp
  4161b3:	add    eax,0xd1ccfae9
  4161b8:	jg     0x416236
  4161ba:	lahf   
  4161bb:	dec    ebp
  4161bc:	arpl   cx,cx
  4161be:	clc    
  4161bf:	mov    ch,0x80
  4161c1:	pop    edx
  4161c2:	arpl   WORD PTR [ebx],ax
  4161c4:	jmp    0xdd8ed917
  4161c9:	clc    
  4161ca:	mov    bl,0x17
  4161cc:	sub    BYTE PTR [eax+ebp*2],al
  4161cf:	inc    ebp
  4161d0:	push   esp
  4161d1:	lods   al,BYTE PTR ds:[esi]
  4161d2:	aad    0xd0
  4161d4:	les    ecx,FWORD PTR [esi+0x77]
  4161d7:	nop
  4161d8:	push   cs
  4161d9:	(bad)
  4161dc:	jmp    FWORD PTR [eax-0x59bcf26c]
  4161e2:	jmp    0x41616a
  4161e4:	std    
  4161e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  416216:	add    BYTE PTR [eax],al
  416218:	sbb    eax,0x60e9fe46
  41621d:	js     0x4161a3
  41621f:	test   eax,0x39fe472e
  416224:	mov    bh,0x7
  416226:	add    dh,dh
  416228:	pusha  
  416229:	pop    ebp
  41622a:	pop    esi
  41622b:	out    0x60,eax
  41622d:	add    eax,0xf19ba90b
  416232:	sub    BYTE PTR [eax+eiz*1],0x48
  416236:	(bad)  
  416237:	pushaw 
  416239:	ror    DWORD PTR [ebx],1
  41623b:	pop    esi
  41623c:	retf   
  41623d:	xchg   ch,bh
  41623f:	push   esi
  416240:	lods   eax,DWORD PTR ds:[esi]
  416241:	ja     0x416247
  416243:	push   es
  416244:	jbe    0x41620a
  416246:	call   DWORD PTR [ecx+0x71]
  416249:	pop    edx
  41624a:	sbb    DWORD PTR [esi],edi
  41624c:	sub    ecx,DWORD PTR [edx-0x19]
  41624f:	jge    0x4162b5
  416251:	add    eax,0x4e1b2e00
  416256:	out    0x55,eax
  416258:	fs add eax,0x47281200
  41625e:	je     0x416271
  416260:	mov    eax,0x60e903a4
  416265:	js     0x4161eb
  416267:	xor    eax,0x99fe479e
  41626c:	xchg   ebp,eax
  41626d:	xchg   ecx,eax
  41626e:	(bad)  
  41626f:	imul   DWORD PTR [esi+0x6b45e747]
  416275:	add    eax,0x4664d000
  41627a:	(bad)  
  41627b:	fiadd  WORD PTR [eax]
	...
  4162ad:	add    BYTE PTR [esi+0x2ed7c791],dl
  4162b3:	inc    edi
  4162b4:	out    0x69,eax
  4162b6:	imul   eax,DWORD PTR ds:0xc4510000,0x59
  4162bd:	leave  
  4162be:	stc    
  4162bf:	lea    ecx,[ecx-0x2142b614]
  4162c5:	push   ebx
  4162c6:	and    dh,bh
  4162c8:	in     al,0x40
  4162ca:	mov    edx,0xf90170b9
  4162cf:	mov    bh,0x81
  4162d1:	cmp    eax,0x40e70b
  4162d6:	mov    ch,BYTE PTR ds:0x36a78307
  4162dc:	sub    al,0x41
  4162de:	jp     0x4162e1
  4162e0:	jne    0x4162e7
  4162e2:	mov    eax,ds:0xc9c959c1
  4162e7:	mov    edi,0x17afc43
  4162ec:	add    BYTE PTR [eax],al
  4162ee:	cmp    eax,0x4a00f63e
  4162f3:	or     DWORD PTR [eax],eax
  4162f5:	(bad)  
  4162f6:	jmp    esp
  4162f8:	(bad)  
  4162f9:	(bad)  
  4162fa:	cmp    cl,BYTE PTR [ecx]
  4162fc:	mov    DWORD PTR [ebp-0x72],0x4a000009
  416303:	retf   0xf043
  416306:	dec    edx
  416307:	or     DWORD PTR [eax],eax
  416309:	add    BYTE PTR [edi-0x48af11b4],dh
  41630f:	dec    esp
  416310:	repnz push eax
	...
  416342:	add    BYTE PTR [eax],al
  416344:	xchg   DWORD PTR [edx+ebp*8+0x50],ecx
  416348:	loopne 0x41631b
  41634a:	mov    eax,DWORD PTR [ebp+0x66]
  41634d:	jns    0x4163b7
  41634f:	add    dh,al
  416351:	add    eax,0x3bf5006a
  416356:	jg     0x416386
  416358:	retf   
  416359:	or     BYTE PTR [ecx+0x7b861245],cl
  41635f:	call   0x8148c05e
  416364:	arpl   cx,bx
  416366:	pop    ebx
  416367:	jmp    0x754391cf
  41636c:	push   edi
  41636d:	dec    ebx
  41636e:	aad    0xfb
  416370:	aam    0xe9
  416372:	dec    ebx
  416373:	cmp    BYTE PTR [esi],0x76
  416376:	add    dh,BYTE PTR [ecx+ebx*1-0x59]
  41637a:	lods   eax,DWORD PTR ds:[esi]
  41637b:	idiv   DWORD PTR [eax+0x3b724b2b]
  416381:	xchg   esi,eax
  416382:	aad    0x41
  416384:	pushf  
  416385:	fwait
  416386:	jns    0x4163cc
  416388:	adc    DWORD PTR [ebx-0x100717f1],0x4c
  41638f:	(bad)  
  416390:	pop    eax
  416391:	outs   dx,BYTE PTR ds:[esi]
  416392:	(bad)  
  416393:	and    ch,dl
  416395:	icebp  
  416396:	imul   esp,DWORD PTR [bx-0x7a],0xab6c315c
  41639e:	dec    ebx
  41639f:	je     0x416324
  4163a1:	mov    bl,0xc2
  4163a3:	pop    es
  4163a4:	pop    esp
  4163a5:	popa   
  4163a6:	data16 mov es,WORD PTR [eax]
	...
  4163d9:	add    BYTE PTR [ebx+0x4a344b2a],ah
  4163df:	js     0x4163a2
  4163e1:	call   ebp
  4163e3:	sub    eax,0x6da9f89f
  4163e8:	add    al,BYTE PTR [ebx+0x4c4b7a20]
  4163ee:	aas    
  4163ef:	scas   eax,DWORD PTR es:[edi]
  4163f0:	int    0xeb
  4163f2:	arpl   WORD PTR [ecx+0x1a96fe87],bx
  4163f8:	dec    esp
  4163f9:	adc    al,0x96
  4163fb:	test   cl,al
  4163fd:	jmp    DWORD PTR ds:0x4ff4e71
  416403:	add    al,BYTE PTR cs:[ecx-0xa6f982]
  41640a:	hlt    
  41640b:	sub    eax,0x4fa04d5
  416410:	inc    ebp
  416411:	dec    ebx
  416412:	in     eax,0x43
  416414:	imul   ecx,ecx,0xfd5d04d8
  41641a:	aad    0xb9
  41641c:	int3   
  41641d:	dec    ebx
  41641e:	ja     0x4163e2
  416420:	push   ss
  416421:	(bad)
  416424:	out    0x3,eax
  416426:	arpl   WORD PTR ds:0xd9a13d12,ax
  41642c:	popa   
  41642d:	pop    eax
  41642e:	loope  0x416478
  416430:	mov    esp,0x23ad0db7
  416435:	bound  ebx,QWORD PTR [ebp+eax*1-0x6f]
  416439:	(bad)  
  41643a:	arpl   WORD PTR [eax-0x73],cx
  41643d:	xchg   DWORD PTR [eax],eax
	...
  41646f:	add    BYTE PTR [edi+0x7a],cl
  416472:	(bad)  
  416473:	les    eax,FWORD PTR [ebx+eax*2+0x1e1fcf4]
  41647a:	test   al,0x1a
  41647c:	and    al,BYTE PTR ds:0xf066d0e9
  416482:	sub    BYTE PTR [ebx+0x7f294e09],ch
  416488:	jg     0x4164c6
  41648a:	mov    ds:0x772e54c4,al
  41648f:	add    eax,0x20510563
  416494:	inc    edi
  416495:	inc    ebx
  416496:	cmp    eax,0xa2407f87
  41649b:	les    esi,FWORD PTR [ebx+eax*2]
  41649e:	mov    ah,0xf2
  4164a0:	sub    eax,0x6f4aecb7
  4164a5:	inc    eax
  4164a6:	mov    dl,0xc4
  4164a8:	sbb    al,0x2b
  4164aa:	inc    esi
  4164ab:	pop    es
  4164ac:	arpl   WORD PTR ds:0x89743e2,ax
  4164b2:	adc    dh,bl
  4164b4:	arpl   WORD PTR ds:0x41a742e9,ax
  4164ba:	(bad)  
  4164bb:	call   0x5c416a20
  4164c0:	and    bh,BYTE PTR [edi]
  4164c2:	dec    edi
  4164c3:	push   ebx
  4164c4:	pop    edi
  4164c5:	scas   eax,DWORD PTR es:[edi]
  4164c6:	add    esi,ebx
  4164c8:	mov    ch,0x6
  4164ca:	push   0xffffffe9
  4164cc:	sub    DWORD PTR [edi+0x45d3ce03],esi
  4164d2:	sub    eax,0x28
	...
  416503:	add    BYTE PTR [eax],al
  416505:	add    BYTE PTR [edi+0xe],bl
  416508:	shl    BYTE PTR ds:0xe9882c62,0x60
  41650f:	add    eax,0x2d633aff
  416514:	pop    ecx
  416515:	sub    BYTE PTR [eax],bl
  416517:	inc    ebx
  416518:	mov    BYTE PTR [edi+ebp*1],ah
  41651b:	inc    ebx
  41651c:	jb     0x41650b
  41651e:	cmp    BYTE PTR [eax],dh
  416520:	add    ecx,ebp
  416522:	pusha  
  416523:	aad    0xfe
  416525:	cld    
  416526:	sbb    dl,dl
  416528:	(bad)  
  416529:	cli    
  41652a:	jl     0x4164d6
  41652c:	jmp    edi
  41652e:	pusha  
  41652f:	add    eax,0x426ce968
  416534:	(bad)  
  416535:	push   ecx
  416536:	add    eax,DWORD PTR [edi]
  416538:	add    cl,ch
  41653a:	pop    ebp
  41653b:	xor    BYTE PTR [ebx+0x2],0xa0
  41653f:	leave  
  416540:	sti    
  416541:	jmp    0x74416aa6
  416546:	and    edi,DWORD PTR [esi]
  416548:	dec    edi
  416549:	shl    DWORD PTR [eax-0x51],cl
  41654c:	add    DWORD PTR [esi],esi
  41654e:	adc    edi,DWORD PTR [edx]
  416550:	imul   ebp,ecx,0x2603b799
  416556:	xor    eax,DWORD PTR [ebp+0x2d]
  416559:	test   al,0x60
  41655b:	push   cs
  41655c:	rcr    BYTE PTR [ebp+0x11744316],0xa8
  416563:	push   0xcf5d0030
  416568:	jmp    0x41659d
	...
  416599:	add    BYTE PTR [eax],al
  41659b:	add    ch,bh
  41659d:	push   ecx
  41659e:	imul   al
  4165a0:	mov    ds,WORD PTR [ecx]
  4165a2:	(bad)  
  4165a3:	(bad)  
  4165a4:	cmp    eax,0xfa412006
  4165a9:	les    eax,FWORD PTR [ebx-0x4]
  4165ac:	retf   0x5
  4165af:	add    BYTE PTR [edi],bh
  4165b1:	cmp    dl,0x50
  4165b4:	and    BYTE PTR [ecx],cl
  4165b6:	push   0x2
  4165b8:	gs arpl si,di
  4165bb:	(bad)  
  4165bc:	jns    0x4165c3
  4165be:	call   DWORD PTR ds:0x411f0b
  4165c4:	rol    ebp,0xd
  4165c7:	test   BYTE PTR [ebx],dl
  4165c9:	or     DWORD PTR [eax],eax
  4165cb:	add    ch,al
  4165cd:	adc    esi,0x58a20
  4165d3:	mov    DWORD PTR [edi-0x13],0x57affff
  4165da:	push   DWORD PTR [ebx-0x7a]
  4165dd:	mov    esp,0x57ede043
  4165e2:	push   es
  4165e3:	pop    DWORD PTR [edi-0x5b]
  4165e6:	lds    eax,FWORD PTR [ebp+0x12]
  4165e9:	or     DWORD PTR [eax],eax
  4165eb:	add    BYTE PTR [edx-0x3a],cl
  4165ee:	inc    ebx
  4165ef:	in     al,dx
  4165f0:	dec    edx
  4165f1:	add    eax,0x80850000
  4165f6:	out    dx,al
  4165f7:	add    BYTE PTR [edx],bh
  4165f9:	add    eax,0xd107c700
  4165fe:	(bad)  
  4165ff:	inc    DWORD PTR [eax]
	...
  416631:	add    BYTE PTR [edx+0x5],cl
  416634:	lea    eax,[ebp+0x52]
  416637:	jns    0x416636
  416639:	jne    0x4166b9
  41663b:	loope  0x416669
  41663d:	add    al,0xa
  41663f:	add    eax,0xa263c00b
  416644:	jmp    0x5a74:0x41a8e82
  41664b:	pop    es
  41664c:	iret   
  41664d:	repz in al,dx
  41664f:	sub    DWORD PTR [edi],ebx
  416651:	sub    DWORD PTR [edx+0x17443f2e],esp
  416657:	add    al,BYTE PTR cs:[eax]
  41665a:	arpl   WORD PTR [ebx-0x1],dx
  41665d:	(bad)  
  41665e:	es jp  0x416663
  416661:	add    BYTE PTR [ebx+0x2e],ah
  416664:	inc    edi
  416665:	je     0x416636
  416667:	dec    edi
  416668:	in     eax,dx
  416669:	mov    ah,0x75
  41666b:	in     eax,dx
  41666c:	add    ecx,DWORD PTR [ebx]
  41666e:	mov    ds:0xd8e7e9fa,eax
  416673:	add    BYTE PTR [edi-0x2],0xe0
  416677:	xor    DWORD PTR [ebp+0x22e222d],edx
  41667d:	je     0x4166e4
  41667f:	lahf   
  416680:	in     eax,dx
  416681:	lods   al,BYTE PTR ds:[esi]
  416682:	inc    ebp
  416683:	in     eax,dx
  416684:	add    eax,edi
  416686:	inc    di
  416688:	sbb    DWORD PTR [ecx+0x63],eax
  41668b:	sub    eax,0xabe30002
  416690:	(bad)
  416693:	inc    edx
  416694:	sti    
  416695:	inc    BYTE PTR [eax]
	...
  4166c7:	add    dh,dh
  4166c9:	mov    ecx,0xd6677447
  4166ce:	sub    eax,0x472e6302
  4166d3:	je     0x41672c
  4166d5:	mov    BYTE PTR [ebx+0x0],0x63
  4166d9:	cs inc esi
  4166db:	xor    ah,BYTE PTR [ebx]
  4166dd:	test   DWORD PTR [edi-0x2],eax
  4166e0:	cmp    al,0xff
  4166e2:	push   esp
  4166e3:	lods   eax,DWORD PTR ds:[esi]
  4166e4:	jnp    0x416715
  4166e6:	test   DWORD PTR [ecx+eax*4-0x2701b811],0x39fd0204
  4166f1:	adc    BYTE PTR [eax+eiz*8+0x16],ah
  4166f5:	inc    eax
  4166f6:	adc    eax,0xe905638b
  4166fb:	add    esp,DWORD PTR [esp+ebx*8-0x7368bbd1]
  416702:	or     al,0x84
  416704:	and    BYTE PTR [ecx-0x80],al
  416707:	in     eax,dx
  416708:	add    al,0xc5
  41670a:	call   0xaa47d95a
  41670f:	inc    edi
  416710:	dec    edx
  416711:	add    eax,0x56235d1
  416716:	jmp    0xce3c3576
  41671b:	inc    edi
  41671c:	mov    esp,0xbd47b999
  416721:	lods   al,BYTE PTR ds:[esi]
  416722:	arpl   WORD PTR [esi],dx
  416724:	and    al,BYTE PTR ds:0xc6788941
  41672a:	call   0x41678a
	...
  41675b:	add    BYTE PTR [eax],al
  41675d:	add    BYTE PTR [edi-0x4],dl
  416760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416761:	inc    edi
  416762:	add    al,0x52
  416764:	into   
  416765:	les    edx,FWORD PTR [edi+eiz*4+0x52215e6]
  41676c:	add    DWORD PTR [esi+0x4a],0xebdc8540
  416773:	out    dx,al
  416774:	daa    
  416775:	add    al,0xb
  416777:	pop    eax
  416778:	(bad)  
  416779:	les    ebp,FWORD PTR [edi+eiz*1+0x7d]
  41677d:	or     ah,BYTE PTR [edi+edi*1-0x30]
  416781:	mov    esp,0xdbe8c48b
  416786:	mov    esp,ebp
  416788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416789:	add    edi,DWORD PTR [ebx]
  41678b:	adc    al,BYTE PTR es:[edi+0x45]
  41678f:	scas   al,BYTE PTR es:[edi]
  416790:	ret    
  416791:	adc    eax,0x71d105a2
  416796:	mov    ah,al
  416798:	(bad)  
  416799:	call   0x2e7abd26
  41679e:	pushf  
  41679f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167a0:	loope  0x416773
  4167a2:	daa    
  4167a3:	aas    
  4167a4:	dec    bx
  4167a6:	ja     0x41676c
  4167a8:	inc    DWORD PTR [eax]
  4167aa:	mov    eax,ds:0xa70efefc
  4167af:	pop    es
  4167b0:	cli    
  4167b1:	push   es
  4167b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167b3:	es xor al,0x3
  4167b6:	pushf  
  4167b7:	aas    
  4167b8:	or     ch,BYTE PTR [ecx]
  4167ba:	adc    edx,DWORD PTR [eax+ebp*8]
  4167bd:	fistp  WORD PTR [ecx+0xf2fe3f]
	...
  4167f3:	add    BYTE PTR [eax],ah
  4167f5:	mov    dl,0x9
  4167f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167f8:	arpl   WORD PTR [edx+0x4a],di
  4167fb:	sub    BYTE PTR [edi+0x4],ah
  4167fe:	add    cl,ch
  416800:	pusha  
  416801:	lods   eax,DWORD PTR ds:[esi]
  416802:	add    al,ch
  416804:	pusha  
  416805:	add    eax,0x3e50d6e8
  41680a:	dec    BYTE PTR [edx-0x16bf33e5]
  416810:	gs leave 
  416812:	sti    
  416813:	call   0x6c416d7f
  416818:	mov    ds:0x73964f3a,eax
  41681d:	inc    eax
  41681e:	dec    ecx
  41681f:	sub    BYTE PTR [edi+0x2d],bl
  416822:	push   0xb0560eb
  416827:	test   eax,0xbcff1993
  41682c:	sbb    ecx,esp
  41682e:	inc    eax
  41682f:	jmp    0x666fc03c
  416834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416835:	inc    edi
  416836:	add    al,0x5c
  416838:	sbb    al,ch
  41683a:	(bad)  
  41683b:	call   0x41416da0
  416840:	ds clc 
  416842:	inc    BYTE PTR [eax]
  416844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416845:	fiadd  DWORD PTR [ebx+esi*1]
  416848:	jne    0x416811
  41684a:	push   si
  41684c:	pop    ebp
  41684d:	dec    eax
  41684e:	(bad)  
  41684f:	out    0x39,eax
  416851:	sar    ebp,cl
  416853:	call   DWORD PTR [ebx-0x3d]
  416856:	push   ebx
  416857:	mov    eax,DWORD PTR [eax]
	...
  416889:	add    BYTE PTR [esi+0x5a],ah
  41688c:	add    eax,0xf801bae9
  416891:	jb     0x41688e
  416893:	ret    0x6afd
  416896:	or     bl,dl
  416898:	mov    eax,0xb8020a01
  41689d:	add    dl,bh
  41689f:	add    DWORD PTR [eax],eax
  4168a1:	leave  
  4168a2:	cmp    BYTE PTR [esi],bh
  4168a4:	(bad)  
  4168a5:	addr16 imul ebx,edx,0x3e
  4168a9:	add    dl,al
  4168ab:	push   edx
  4168ac:	inc    edx
  4168ae:	mov    ch,0x60
  4168b0:	clc    
  4168b1:	call   0xa4297230
  4168b6:	retf   
  4168b7:	add    DWORD PTR [eax],eax
  4168b9:	call   0x3f2fbe
  4168be:	mov    ds:0xf5fff0bb,al
  4168c3:	loopne 0x4168d7
  4168c5:	cmc    
  4168c6:	(bad)
  4168c9:	cld    
  4168ca:	out    dx,eax
  4168cb:	(bad)  
  4168cc:	std    
  4168cd:	xor    DWORD PTR [edi+0x7a41498c],0x1
  4168d4:	je     0x4168ef
  4168d6:	or     DWORD PTR [esi],eax
  4168d8:	lods   eax,DWORD PTR ds:[esi]
  4168d9:	cs dec ebx
  4168db:	or     DWORD PTR [eax],eax
  4168dd:	je     0x41695b
  4168df:	enter  0xad13,0xa4
  4168e3:	inc    edx
  4168e4:	inc    dh
  4168e6:	dec    edi
  4168e7:	sbb    ch,BYTE PTR [ecx]
  4168e9:	inc    ecx
  4168ea:	dec    edx
  4168eb:	or     BYTE PTR [eax],al
	...
  41691d:	add    BYTE PTR [eax],al
  41691f:	add    BYTE PTR [ebx-0x52],ah
  416922:	pop    ebx
  416923:	(bad)  
  416924:	dec    eax
  416925:	int3   
  416926:	inc    esp
  416927:	out    0x2b,eax
  416929:	ret    
  41692a:	inc    esp
  41692b:	(bad)  
  41692c:	and    BYTE PTR [edi-0x34],dl
  41692f:	call   0x718b97d7
  416934:	(bad)  
  416935:	out    dx,eax
  416936:	inc    esp
  416937:	out    0x74,eax
  416939:	sub    eax,0x21890002
  41693e:	test   eax,0x531c312a
  416943:	or     BYTE PTR [ecx],0x23
  416946:	int    0x1
  416948:	or     BYTE PTR [ecx],dh
  41694a:	push   edi
  41694b:	jmp    0x6ec:0xfe44a40b
  416952:	ins    BYTE PTR es:[edi],dx
  416953:	mul    ah
  416955:	sub    ebx,eax
  416957:	inc    esp
  416959:	adc    al,BYTE PTR [ebx]
  41695b:	add    BYTE PTR [ebx+0x5b],ah
  41695e:	sbb    eax,0x3ed2a48
  416963:	(bad)  
  416964:	jle    0x416980
  416966:	stos   DWORD PTR es:[edi],eax
  416967:	inc    eax
  416968:	arpl   WORD PTR [ebx+0x1d],ax
  41696b:	push   eax
  41696c:	sbb    ch,ch
  41696e:	add    edi,edi
  416970:	xchg   BYTE PTR [edx],bl
  416972:	stos   DWORD PTR es:[edi],eax
  416973:	inc    eax
  416974:	arpl   WORD PTR [ebx+0x1d],bp
  416977:	pop    eax
  416978:	cmp    ch,ch
  41697a:	add    edi,edi
  41697c:	ds cli 
  41697e:	stos   BYTE PTR es:[edi],al
  41697f:	inc    eax
  416980:	arpl   WORD PTR [ebx+0x601d],dx
	...
  4169b6:	sub    ch,ch
  4169b8:	add    edi,edi
  4169ba:	inc    esi
  4169bb:	or     ch,BYTE PTR [ebx+0x1dbb6340]
  4169c1:	push   0xff03ed0a
  4169c6:	cmp    ch,BYTE PTR ds:[ecx+0x66056340]
  4169cd:	push   ds
  4169ce:	rcr    esi,cl
  4169d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169d1:	add    ecx,DWORD PTR [edx+eiz*8-0x24]
  4169d5:	stos   BYTE PTR es:[edi],al
  4169d6:	mov    ds:0xbb1e4e05,eax
  4169db:	fisub  WORD PTR [edi-0x431dcbfd]
  4169e1:	stos   BYTE PTR es:[edi],al
  4169e2:	mov    ds:0xe31e3605,eax
  4169e7:	frstor [edi+0x6ce21c03]
  4169ed:	stos   BYTE PTR es:[edi],al
  4169ee:	mov    ds:0xdb1e1e05,eax
  4169f3:	frstor [edi+0x5ce20403]
  4169f9:	stos   BYTE PTR es:[edi],al
  4169fa:	mov    ds:0xd31e0605,eax
  4169ff:	frstor [edi+0x5ce1ec03]
  416a05:	stos   BYTE PTR es:[edi],al
  416a06:	mov    ds:0xfb1dee05,eax
  416a0b:	frstor [edi]
  416a0d:	add    al,0xd4
  416a0f:	loope  0x416a8d
  416a11:	frstor [ebx]
  416a13:	add    eax,0xdde4e9d6
  416a18:	daa    
  416a19:	add    al,0x0
	...
  416a4b:	add    BYTE PTR [ecx+eiz*8+0x523dd8c],bh
  416a52:	mov    esi,0x27de04e9
  416a57:	add    al,0xa4
  416a59:	loope  0x416ad7
  416a5b:	frstor [ebx]
  416a5d:	add    eax,0xddc4e9a6
  416a62:	daa    
  416a63:	add    al,0x8c
  416a65:	loope  0x416ac3
  416a67:	frstor [ebx]
  416a69:	add    eax,0xddb4e98e
  416a6e:	daa    
  416a6f:	add    al,0x74
  416a71:	loope  0x416aaf
  416a73:	frstor [ebx]
  416a75:	add    eax,0x7b7a7600
  416a7a:	pop    eax
  416a7b:	sub    BYTE PTR [edi+0x3a],ah
  416a7e:	and    al,0x2d
  416a80:	ss (bad) 
  416a82:	call   FWORD PTR [ebp+0x3a]
  416a85:	inc    ebx
  416a86:	pop    eax
  416a87:	test   al,0x60
  416a89:	cmp    ah,BYTE PTR [ebx*1+0x45ffc61e]
  416a90:	dec    edx
  416a91:	dec    ebx
  416a92:	pop    eax
  416a93:	test   al,0x60
  416a95:	cmp    ah,BYTE PTR [ebx*1+0x2dffc606]
  416a9c:	or     dl,BYTE PTR [ebx+0x58]
  416a9f:	test   al,0x60
  416aa1:	cmp    ah,BYTE PTR [edi*1+0x15ffc62e]
  416aa8:	cli    
  416aa9:	pop    edx
  416aaa:	pop    eax
  416aab:	test   al,0x60
  416aad:	cmp    ah,BYTE PTR [ecx*1+0x0]
	...
  416ae0:	add    BYTE PTR [eax],al
  416ae2:	push   ss
  416ae3:	(bad)  
  416ae4:	(bad)  
  416ae5:	std    
  416ae6:	sti    
  416ae7:	and    bl,BYTE PTR [eax-0x58]
  416aea:	pusha  
  416aeb:	cmp    ah,BYTE PTR [edi*8-0x1a003a41]
  416af2:	retf   
  416af3:	sub    bl,BYTE PTR [eax+0x28]
  416af6:	cmp    ah,BYTE PTR [si]
  416af9:	frstor [edi-0x3432003b]
  416aff:	xor    bl,BYTE PTR [eax+0x28]
  416b02:	pop    edi
  416b03:	cmp    ah,BYTE PTR [edi*4-0x4a003a71]
  416b0a:	mov    ebx,0x6728583a
  416b0f:	cmp    ah,BYTE PTR [ebp*8-0x62003a4a]
  416b16:	jnp    0x416b1a
  416b18:	pop    edx
  416b19:	sub    BYTE PTR [edi+0x3a],bl
  416b1c:	and    al,0xdd
  416b1e:	sahf   
  416b1f:	(bad)  
  416b22:	(bad)  ds:0x13b5a0e
  416b28:	jmp    DWORD PTR ds:0x3f5886
  416b2e:	int    0x2d
  416b30:	sbb    bl,BYTE PTR [edx+0xb]
  416b33:	push   es
  416b34:	jmp    DWORD PTR ds:0x3f5b5a
  416b3a:	lods   eax,DWORD PTR ds:[esi]
  416b3b:	sub    eax,0x60b5a22
  416b40:	jmp    DWORD PTR ds:0x3f5b52
	...
  416b76:	add    BYTE PTR [eax],al
  416b78:	ins    DWORD PTR es:[edi],dx
  416b79:	sub    eax,0x5fb5a2a
  416b7e:	jmp    DWORD PTR ds:0x3f581a
  416b84:	cmp    eax,0xbb5a362d
  416b89:	add    eax,0x57ba25ff
  416b8e:	aas    
  416b8f:	add    BYTE PTR [ebp+0x2d],ch
  416b92:	inc    edx
  416b93:	pop    edx
  416b94:	retf   
  416b95:	add    eax,0x57b225ff
  416b9a:	aas    
  416b9b:	add    ch,ch
  416b9d:	and    DWORD PTR [edx+0x5a],ecx
  416ba0:	or     eax,DWORD PTR [esi]
  416ba2:	jmp    DWORD PTR ds:0x3f5b9a
  416ba8:	lods   eax,DWORD PTR ds:[esi]
  416ba9:	and    DWORD PTR [edx+0x5a],edx
  416bac:	jnp    0x416baf
  416bae:	jmp    DWORD PTR ds:0x3f5b72
  416bb4:	popf   
  416bb5:	and    DWORD PTR [edx+0x5a],ebx
  416bb8:	jnp    0x416bbb
  416bba:	jmp    DWORD PTR ds:0x3f5b1a
  416bc0:	int    0x21
  416bc2:	bound  ebx,QWORD PTR [edx+0x4b]
  416bc5:	add    edi,edi
  416bc7:	and    eax,0x3f5b5e
  416bcc:	arpl   WORD PTR [ebx-0x12e68c1a],dx
  416bd2:	add    edi,edi
  416bd4:	ds add al,0xde
  416bd7:	inc    eax
  416bd8:	arpl   WORD PTR [ebx+0x7fe6],di
	...
  416c0e:	or     ebp,ebp
  416c10:	add    edi,edi
  416c12:	xchg   BYTE PTR [edx-0x609cbf23],ah
  416c18:	out    0x87,al
  416c1a:	test   eax,0x7eff026d
  416c1f:	mov    ds:0xc76340dd,al
  416c24:	out    0x8f,al
  416c26:	cdq    
  416c27:	ins    DWORD PTR es:[edi],dx
  416c28:	add    bh,bh
  416c2a:	xchg   dl,dl
  416c2c:	fld    QWORD PTR [eax+0x63]
  416c2f:	out    dx,eax
  416c30:	out    0x9b,al
  416c32:	mov    ecx,0x3eff026d
  416c37:	into   
  416c38:	fld    QWORD PTR [eax+0x63]
  416c3b:	pop    ss
  416c3c:	out    0xa3,eax
  416c3e:	test   eax,0x46ff026d
  416c43:	(bad)  
  416c44:	fld    QWORD PTR [eax+0x63]
  416c47:	jmp    esi
  416c49:	stos   DWORD PTR es:[edi],eax
  416c4a:	mov    DWORD PTR [ebp+0x2],ebp
  416c4d:	(bad)  
  416c4e:	ds (bad) 
  416c50:	fld    QWORD PTR [eax+0x63]
  416c53:	daa    
  416c54:	in     eax,0xb3
  416c56:	cmp    ebp,ebp
  416c58:	add    edi,edi
  416c5a:	xchg   BYTE PTR [esi-0x24],ah
  416c5d:	inc    eax
  416c5e:	arpl   WORD PTR [edi-0x1b],cx
  416c61:	mov    ebx,0xff03ed19
  416c66:	jle    0x416cd6
  416c68:	fadd   QWORD PTR [eax+0x63]
  416c6b:	ja     0x416c52
  416c6d:	(bad)  
  416c6e:	or     ebp,ebp
  416c70:	add    edi,edi
	...
  416ca2:	add    BYTE PTR [eax],al
  416ca4:	inc    esi
  416ca5:	call   0x4fb5:0x56340dc
  416cac:	cwde   
  416cad:	dec    ecx
  416cae:	lods   al,BYTE PTR ds:[esi]
  416caf:	dec    edi
  416cb0:	cwde   
  416cb1:	dec    ecx
  416cb2:	popa   
  416cb3:	mov    DWORD PTR [eax+0x1],0xba623b6a
  416cba:	lock jnp 0x416cbd
  416cbd:	add    eax,0x1a103e9
  416cc2:	jmp    0xec42c14b
  416cc7:	or     ebx,DWORD PTR [ebx]
  416cc9:	add    ebp,ecx
  416ccb:	add    esp,DWORD PTR [ebx+0x43]
  416cce:	in     al,0x3
  416cd0:	loopne 0x416d0e
  416cd2:	loopne 0x416c92
  416cd4:	fs jge 0x416cbb
  416cd7:	add    esp,DWORD PTR [ebx+0x5]
  416cda:	sub    eax,DWORD PTR [edi]
  416cdc:	arpl   WORD PTR [eax+eax*2+0x710da613],ax
  416ce3:	or     DWORD PTR [ebx+0x5],esp
  416ce6:	jmp    0x6a46cd30
  416ceb:	cmp    ebp,DWORD PTR [edx+edi*4-0x10]
  416cef:	jnp    0x416d4d
  416cf1:	add    eax,0x12103e9
  416cf6:	jmp    0x8406597f
  416cfb:	or     ebp,DWORD PTR [ebx+0x6303e90a]
  416d01:	inc    ebx
  416d02:	in     al,dx
  416d03:	add    ebx,DWORD PTR [esi+0x3e885]
	...
  416d39:	add    BYTE PTR [ebx-0x46],ah
  416d3c:	lock jnp 0x416d97
  416d3f:	add    eax,0xa103e9
  416d44:	jmp    0xe947d049
  416d49:	add    esi,DWORD PTR [esi]
  416d4b:	or     eax,0x5630e81
  416d50:	jmp    0x46cd96
  416d55:	hlt    
  416d56:	pusha  
  416d57:	add    eax,DWORD PTR [eax]
  416d59:	jmp    0xf9f96d01
  416d5e:	pusha  
  416d5f:	add    eax,0x55bab00
  416d64:	cmp    eax,0x564e9
  416d69:	or     al,0x67
  416d6b:	jge    0x416d7e
  416d6d:	jmp    0xe60372d2
  416d72:	pusha  
  416d73:	cli    
  416d74:	jmp    eax
  416d76:	pusha  
  416d77:	add    eax,0x12d8e17d
  416d7c:	add    cl,ch
  416d7e:	pusha  
  416d7f:	inc    ebx
  416d80:	add    ebp,ecx
  416d82:	arpl   WORD PTR ds:0xb860e910,ax
  416d88:	pop    es
  416d89:	xchg   ecx,eax
  416d8a:	dec    ebp
  416d8b:	add    eax,0x2a2e900
  416d90:	add    ah,bh
  416d92:	pusha  
  416d93:	in     eax,0xff
  416d95:	call   0xd1f96cbd
  416d9a:	pusha  
  416d9b:	add    eax,0x2b00
	...
  416dd0:	pop    ebx
  416dd1:	add    eax,0x3720e93d
  416dd6:	(bad)  
  416dd7:	xchg   esp,eax
  416dd8:	push   0x60e9197d
  416ddd:	add    eax,0xf860edc2
  416de2:	jmp    FWORD PTR [eax+0x5f]
  416de5:	add    eax,0x1a58e17d
  416dea:	add    cl,ch
  416dec:	pusha  
  416ded:	inc    ebx
  416dee:	add    ebp,ecx
  416df0:	ror    DWORD PTR [ebp+0x3c],1
  416df3:	jmp    0xe6417258
  416df8:	add    eax,DWORD PTR [esi-0x74]
  416dfb:	sbb    eax,0x8b1766
  416e00:	sti    
  416e01:	les    eax,FWORD PTR [edx]
  416e03:	add    BYTE PTR [ecx],bh
  416e05:	sbb    DWORD PTR [edx],0xff028a04
  416e0b:	jne    0x416db4
  416e0d:	mov    edi,DWORD PTR [edi+0x10]
  416e10:	jle    0x416e14
  416e12:	add    BYTE PTR [ecx+0x419fb],cl
  416e18:	mov    al,BYTE PTR [edx-0x3b]
  416e1b:	add    DWORD PTR [esi+0x72fffffe],0xf3000002
  416e25:	or     BYTE PTR [esi],0x4
  416e28:	dec    edx
  416e29:	add    al,BYTE PTR [ebx-0x1e184]
  416e2f:	mov    dl,bl
  416e31:	sbb    al,BYTE PTR [eax+eax*1]
	...
  416e64:	add    BYTE PTR [eax],al
  416e66:	cmp    ch,BYTE PTR [esi+0x9]
  416e69:	mov    cl,BYTE PTR [ebx+0x4]
  416e6c:	sar    dh,0x8a
  416e6f:	mov    bh,bh
  416e71:	sar    DWORD PTR [esi],0x2
  416e74:	shl    BYTE PTR [ecx],1
  416e76:	js     0x416e76
  416e78:	inc    DWORD PTR [edx+0x4168b]
  416e7e:	or     dh,bh
  416e80:	jae    0x416e9f
  416e82:	xchg   ecx,eax
  416e83:	or     DWORD PTR [esi],0x8901fa04
  416e89:	xor    edx,0xcafffffd
  416e8f:	mov    esi,0x1fe1c7f
  416e94:	add    BYTE PTR [eax],cl
  416e96:	cli    
  416e97:	add    DWORD PTR [eax],eax
  416e99:	mov    DWORD PTR [ebx+0x12],ecx
  416e9c:	add    al,0x0
  416e9e:	retf   0x878a
  416ea1:	sbb    BYTE PTR [esi+0x5bd00001],bh
  416ea7:	les    eax,FWORD PTR [ecx+0x6306381]
  416ead:	add    BYTE PTR [ebx+0x47],ah
  416eb0:	mov    dh,0x1c
  416eb2:	fsubr  DWORD PTR [ebx+edx*1-0x76d39cfc]
  416eb9:	cmp    BYTE PTR [ebx+0x28],0x2
  416ebd:	add    BYTE PTR [ebx],ah
  416ebf:	pop    edi
  416ec0:	sbb    BYTE PTR [ebx],0x67
  416ec3:	sub    al,0x2
  416ec5:	or     BYTE PTR [ebx+0x2c],ah
  416ec8:	add    cl,BYTE PTR [ecx+0x0]
	...
  416efa:	add    BYTE PTR [eax],al
  416efc:	loop   0x416f39
  416efe:	push   es
  416eff:	add    BYTE PTR [ebx-0x5d],ah
  416f02:	mov    dl,BYTE PTR [edi]
  416f04:	addr16 sub al,0x2
  416f07:	mov    ah,BYTE PTR [edx+0x2a]
  416f0a:	inc    edx
  416f0b:	std    
  416f0c:	and    esp,DWORD PTR [edi-0x15173cfe]
  416f12:	out    0x3,eax
  416f14:	fdiv   DWORD PTR [edx-0x1a]
  416f17:	add    ebp,DWORD PTR [esi+0x3532d37c]
  416f1d:	stos   BYTE PTR es:[edi],al
  416f1e:	retf   0xe9ff
  416f21:	(bad)  
  416f22:	and    dh,0x62
  416f25:	or     eax,0x5ad6452c
  416f2a:	rol    DWORD PTR [edx-0x104ce1e5],cl
  416f30:	loopne 0x416f26
  416f32:	add    bh,BYTE PTR [ebp-0x1c313f4]
  416f38:	(bad)  
  416f39:	xchg   ecx,eax
  416f3a:	or     DWORD PTR [ecx+esi*2+0x6f],esi
  416f3e:	xchg   esi,edi
  416f40:	(bad)  
  416f41:	lds    ebx,FWORD PTR [edi]
  416f43:	add    al,0x63
  416f45:	push   ds
  416f46:	mov    ch,0x18
  416f48:	fcomp  DWORD PTR [ebp+0x1e630413]
  416f4e:	mov    DWORD PTR [eax+0x22a7b],eax
  416f54:	and    eax,DWORD PTR ds:0x9687a70
  416f5a:	jmp    0xf8c85962
  416f5f:	pop    es
	...
  416f90:	add    BYTE PTR [eax],al
  416f92:	arpl   WORD PTR ds:0x9548262,ax
  416f98:	jmp    0xe7891ca0
  416f9d:	mov    bh,0x6a
  416f9f:	jg     0x416f71
  416fa1:	add    DWORD PTR [eax+0x748ba933],edi
  416fa7:	and    dl,ch
  416fa9:	push   ebx
  416faa:	fs push es
  416fac:	push   eax
  416fad:	pop    ds
  416fae:	addr16 add eax,0x805bb6e9
  416fb4:	adc    esp,DWORD PTR [bx+0x5]
  416fb8:	jmp    0xe54f5347
  416fbd:	add    esp,DWORD PTR [ebx-0x3b]
  416fc0:	pop    edi
  416fc1:	jp     0x41703b
  416fc3:	or     ecx,ebp
  416fc5:	add    ebx,edx
  416fc7:	test   eax,edi
  416fc9:	pop    es
  416fca:	arpl   WORD PTR ds:0x9548272,ax
  416fd0:	jmp    0xeb4e58d8
  416fd5:	pop    eax
  416fd6:	cs dec eax
  416fd8:	pop    ss
  416fd9:	sub    ecx,esp
  416fdb:	and    ah,bh
  416fdd:	mov    esi,DWORD PTR [edx+edi*4+0x5a]
  416fe1:	fsub   DWORD PTR [ebx+0x5e]
  416fe4:	int3   
  416fe5:	pop    es
  416fe6:	arpl   WORD PTR ds:0x85d81a9c,ax
  416fec:	clc    
  416fed:	pop    es
  416fee:	arpl   WORD PTR ds:0x94c8260,ax
  416ff4:	jmp    0x416ffc
	...
  417025:	add    BYTE PTR [eax],al
  417027:	add    BYTE PTR [ebx+0x5f1f3f7e],ah
  41702d:	add    eax,0x14e38ae9
  417032:	add    ch,ch
  417034:	pusha  
  417035:	add    eax,0x968688b
  41703a:	add    cl,ch
  41703c:	xchg   edx,eax
  41703d:	inc    esi
  41703e:	add    BYTE PTR [ebp+0x6d],dl
  417041:	jg     0x417052
  417043:	jmp    0x417053
  417045:	xor    al,cl
  417047:	popa   
  417048:	push   edi
  417049:	and    BYTE PTR [ecx],al
  41704b:	cdq    
  41704c:	mov    edi,0x9cdda904
  417051:	xor    edi,esi
  417053:	cmp    al,0x76
  417055:	add    BYTE PTR [eax-0x1cc7327],0x70
  41705c:	ficomp WORD PTR [ebx]
  41705e:	add    al,0xe9
  417060:	pusha  
  417061:	lds    ecx,FWORD PTR [eax+0x95b50]
  417067:	jmp    0xed50f54b
  41706c:	pusha  
  41706d:	add    eax,0x97f708b
  417072:	add    cl,ch
  417074:	mov    al,0xe5
  417076:	pop    esi
  417077:	cvtpi2ps xmm0,QWORD PTR [ebp+0x3]
  41707b:	jmp    0xcdcc4aad
  417080:	sbb    al,0x3
  417082:	push   esi
  417083:	sbb    bl,BYTE PTR [edi+0x584c82db]
  417089:	mov    ebx,0x8404
	...
  4170be:	pop    eax
  4170bf:	add    eax,0xaeede900
  4170c4:	and    ebx,ebp
  4170c6:	in     eax,0x3b
  4170c8:	sub    dh,BYTE PTR [edx+ebx*8]
  4170cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170cc:	and    ebp,ecx
  4170ce:	(bad)  
  4170cf:	adc    eax,DWORD PTR [edx+eax*2+0x248b12b3]
  4170d6:	in     al,0x58
  4170d8:	mov    WORD PTR [edx+0x67],?
  4170db:	add    eax,0x30fa0000
  4170e0:	sbb    BYTE PTR [esp+eax*8+0x41],dh
  4170e4:	inc    eax
  4170e5:	test   DWORD PTR [ebx+0x7a83f474],eax
  4170eb:	push   es
  4170ec:	test   ecx,ecx
  4170ee:	daa    
  4170ef:	add    DWORD PTR [ebx+0x1e3c8c0],eax
  4170f5:	or     DWORD PTR [edx],0x8
  4170f8:	inc    edi
  4170f9:	inc    esi
  4170fa:	cmp    DWORD PTR [edx+0x22],ebp
  4170fd:	sbb    al,0xbb
  4170ff:	jne    0x4170cd
  417101:	pop    edi
  417102:	jl     0x417150
  417104:	pop    ecx
  417105:	ret    0x67e
  417108:	mov    edx,DWORD PTR [esi+eiz*2+0x5]
  41710c:	push   ebp
  41710d:	push   esi
  41710e:	adc    ecx,edi
  417110:	lds    eax,FWORD PTR [esi-0x1cd6e]
  417116:	mov    al,BYTE PTR [esi]
  417118:	add    BYTE PTR [eax],al
  41711a:	add    BYTE PTR [eax],al
  41711c:	test   cl,cl
  41711e:	ins    DWORD PTR es:[edi],dx
  41711f:	mov    dl,0x2e
  417121:	add    DWORD PTR [eax],eax
	...
  417153:	add    BYTE PTR [edx+0x6],cl
  417156:	push   edi
  417157:	mov    ecx,DWORD PTR [esi+0x52]
  41715a:	adc    al,BYTE PTR [ebx+0x575ffbd]
  417160:	std    
  417161:	(bad)  
  417162:	(bad)  
  417163:	dec    DWORD PTR [edx-0x7d]
  417166:	shr    BYTE PTR [ebx],0x85
  417169:	xchg   esi,eax
  41716a:	cmp    BYTE PTR [eax],cl
  41716c:	push   ss
  41716d:	inc    eax
  41716e:	dec    ebp
  41716f:	inc    eax
  417170:	mov    bh,0xef
  417172:	jae    0x41716a
  417174:	mov    DWORD PTR [edx+ebx*1-0xf9f5fc],eax
  41717b:	jne    0x41719c
  41717d:	add    DWORD PTR [eax+edx*1-0x76fffa0a],0xffffff84
  417185:	push   cs
  417186:	add    al,0x0
  417188:	arpl   WORD PTR [edx+eax*8],bx
  41718b:	(bad)  
  41718c:	in     eax,0x1f
  41718e:	(bad)  
  41718f:	jmp    esp
  417191:	xor    eax,DWORD PTR [edx]
  417193:	add    BYTE PTR [ebx-0x4b],ah
  417196:	or     BYTE PTR [edi],0x5f
  417199:	sbb    al,0x2
  41719b:	mov    esp,ebp
  41719d:	push   ebx
  41719e:	(bad)  
  41719f:	inc    esp
  4171a1:	imul   esp,ebx,0xffffff8a
  4171a4:	in     eax,0x2b
  4171a6:	(bad)  
  4171a7:	push   DWORD PTR [ebp+eiz*4+0x23db5f0d]
  4171ae:	aaa    
  4171af:	test   DWORD PTR [ebx+0x20],edx
  4171b2:	add    al,BYTE PTR [eax]
  4171b4:	cmp    eax,0x74611
	...
  4171e9:	add    BYTE PTR [ebx-0x5f],ah
  4171ec:	cmp    BYTE PTR [ebx-0x35],dh
  4171ef:	sahf   
  4171f0:	dec    edx
  4171f1:	(bad)  
  4171f2:	bound  edi,QWORD PTR [edx+0x1c630417]
  4171f8:	test   DWORD PTR [eax+0x6a],ebp
  4171fb:	adc    DWORD PTR [ebx],ebx
  4171fd:	mov    esp,ebp
  4171ff:	sub    edi,esi
  417201:	jmp    DWORD PTR [esp+esi*4-0x7f]
  417205:	pop    ss
  417206:	addr16 push ds
  417208:	add    al,BYTE PTR [eax-0x16]
  41720b:	enter  0x417,0x63
  41720f:	push   ds
  417210:	mov    DWORD PTR [ebp+0x22273],eax
  417216:	call   0x63458dc3
  41721b:	push   ds
  41721c:	mov    WORD PTR [edi],cs
  41721e:	popa   
  41721f:	in     al,dx
  417220:	cmp    ecx,eax
  417222:	fisttp DWORD PTR [esi+0x1]
  417225:	mov    ?,WORD PTR [edi+0x2a]
  417228:	add    al,BYTE PTR [eax]
  41722a:	mov    ss,WORD PTR [ebp-0x75]
  41722d:	test   DWORD PTR [ebx+0x2a],esi
  417230:	add    al,BYTE PTR [eax]
  417232:	fiadd  DWORD PTR ds:0x5671c6f
  417238:	jmp    0xf4a15e00
  41723d:	(bad)  
  41723e:	in     al,dx
  41723f:	xor    BYTE PTR [edi-0x7e],bl
  417242:	push   esp
  417243:	or     ecx,ebp
  417245:	add    ebp,eax
  417247:	xchg   eax,esp
  417249:	call   esp
  41724b:	xor    BYTE PTR [edx+0x14],ah
	...
  41727e:	add    BYTE PTR [eax],al
  417280:	popa   
  417281:	push   ebx
  417282:	out    dx,al
  417283:	inc    ebp
  417284:	fcom   QWORD PTR ds:0x95889e8
  41728a:	jmp    0x624fa092
  41728f:	sbb    DWORD PTR [ecx+ecx*1-0x17],0xe087da03
  417297:	call   FWORD PTR [eax+esi*1+0x11c68b28]
  41729e:	in     eax,dx
  41729f:	add    esp,DWORD PTR [ebx+0x7e]
  4172a2:	adc    bx,WORD PTR [edi+0x5]
  4172a6:	jmp    0xe54f5937
  4172ab:	add    esp,DWORD PTR [ebx+0x7b]
  4172ae:	loopne 0x4172b5
  4172b0:	call   0x9be4:0x8d8ca72f
  4172b7:	mov    esp,DWORD PTR [ebx+edx*8+0x71]
  4172bb:	dec    ecx
  4172bc:	cmp    al,0x4e
  4172be:	je     0x4172f8
  4172c0:	dec    ebp
  4172c1:	jl     0x417268
  4172c3:	test   BYTE PTR [ecx+ecx*1],ah
  4172c6:	mov    ecx,0x2c1d2e8c
  4172cb:	aaa    
  4172cc:	xor    eax,0xe1486130
  4172d1:	and    eax,0x3ed9d2ea
  4172d6:	push   eax
  4172d7:	js     0x4172f1
  4172d9:	xor    BYTE PTR ds:0x5fd84,bh
  4172df:	sahf   
  4172e0:	fild   WORD PTR [ecx-0x19]
  4172e3:	jne    0x4172e5
	...
  417315:	add    BYTE PTR [edi+ebp*1-0x2],cl
  417319:	(bad)  
  41731a:	sbb    dl,cl
  41731c:	shl    ecx,0x60
  41731f:	test   al,cl
  417321:	push   ss
  417322:	popa   
  417323:	jg     0x417340
  417325:	in     eax,0x60
  417327:	add    eax,0xba69908d
  41732c:	sbb    BYTE PTR [edx-0x1e],dh
  41732f:	inc    DWORD PTR [ebx]
  417331:	jmp    0xd1c6f196
  417336:	les    ebp,FWORD PTR [edi]
  417338:	(bad)  
  417339:	sub    esi,ebp
  41733b:	popa   
  41733c:	sbb    esp,ebp
  41733e:	pusha  
  41733f:	add    eax,0x9576f89
  417344:	add    cl,ch
  417346:	(bad)  [ecx+0x560ed17]
  41734c:	mov    bl,cl
  41734e:	bound  edx,QWORD PTR [ebx-0x3]
  417351:	stos   DWORD PTR es:[edi],eax
  417352:	(bad)  
  417354:	add    BYTE PTR [edi+0x6b],bl
  417357:	or     DWORD PTR [eax],eax
  417359:	jmp    0x67cc8011
  41735e:	dec    edi
  41735f:	or     DWORD PTR [eax],eax
  417361:	jmp    0xe558fd45
  417366:	pusha  
  417367:	add    eax,0xac57040
  41736c:	add    al,0xe9
  41736e:	pusha  
  41736f:	jl     0x4172f6
  417371:	(bad)  [edi+ebp*1-0x2]
  417375:	(bad)  
  417376:	lds    edx,FWORD PTR [esi]
  417378:	add    al,0xe9
	...
  4173aa:	add    BYTE PTR [eax],al
  4173ac:	pusha  
  4173ad:	jnp    0x4173be
  4173af:	jmp    0x417343
  4173b1:	xor    cl,al
  4173b3:	popa   
  4173b4:	push   edi
  4173b5:	add    al,0x8e
  4173b7:	in     eax,dx
  4173b8:	and    al,0x2f
  4173ba:	inc    BYTE PTR [eax]
  4173bc:	fist   WORD PTR [ecx]
  4173be:	mov    eax,DWORD PTR [esi-0x1d0c6]
  4173c4:	sub    DWORD PTR [edi+0x2fa0416],0x40
  4173cb:	mov    DWORD PTR [ebp+ecx*1-0x7df5fffc],edx
  4173d2:	test   BYTE PTR [eax],dl
  4173d4:	inc    BYTE PTR [edx]
  4173d6:	add    BYTE PTR [ebx+0x4117c],cl
  4173dc:	retf   0xe7c
  4173df:	add    bh,BYTE PTR [eax-0x9]
  4173e2:	ror    BYTE PTR [eax+0x1c8e09aa],0xbe
  4173e9:	add    al,BYTE PTR [eax]
  4173eb:	jne    0x417450
  4173ed:	jp     0x417373
  4173ef:	adc    BYTE PTR [esi+0x3c890002],bh
  4173f5:	or     al,BYTE PTR [eax+eax*1]
  4173f8:	mov    edx,0x86ae8742
  4173fd:	cs (bad) 
  4173ff:	call   DWORD PTR [ebx]
  417401:	mov    al,0xe
  417403:	add    al,0x7a
  417405:	add    cl,BYTE PTR [ebx-0x1d14d7a]
  41740b:	(bad)  
  41740c:	mov    edx,0x8dff22
	...
  417441:	add    BYTE PTR [esi+0x2e],dh
  417444:	(bad)  
  417445:	dec    DWORD PTR [edi+0x10]
  417448:	mov    eax,DWORD PTR [esi-0x1d196]
  41744e:	shl    DWORD PTR [eax+0x24a0416],cl
  417454:	inc    eax
  417455:	mov    DWORD PTR [esi+edx*1-0x7ec5fffc],esp
  41745c:	test   BYTE PTR [eax],dl
  41745e:	dec    esi
  41745f:	add    al,BYTE PTR [eax]
  417461:	mov    edi,DWORD PTR [edx+ecx*1+0x1c630004]
  417468:	push   edx
  417469:	pop    ds
  41746a:	(bad)  
  41746b:	into   
  41746c:	push   ss
  41746d:	add    al,0x63
  41746f:	sbb    al,0xaf
  417471:	sbb    al,ch
  417473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417474:	adc    al,BYTE PTR [ebx+eiz*2]
  417477:	sbb    al,0x8b
  417479:	test   DWORD PTR [ebx+0x28],ebp
  41747c:	add    al,BYTE PTR [eax]
  41747e:	mov    ds:0x5f1b64b5,eax
  417483:	sbb    al,0x2
  417485:	mov    ebp,esp
  417487:	sub    edi,esi
  417489:	jmp    esp
  41748b:	mov    ds:0x1c67177c,al
  417490:	add    dl,al
  417492:	sbb    DWORD PTR ds:0x1c671b84,0x2
  417499:	jne    0x417505
  41749b:	mov    ds:0x1c670f7c,eax
  4174a0:	add    cl,BYTE PTR [ecx+0x3dd]
	...
  4174d6:	add    BYTE PTR [eax],al
  4174d8:	arpl   sp,bx
  4174da:	mov    ch,BYTE PTR [ebp+0x22847]
  4174e0:	jmp    0x871c:0x6304139d
  4174e7:	mov    ch,0x6b
  4174e9:	and    BYTE PTR [edx],al
  4174eb:	add    BYTE PTR [ebx-0x5ea329fb],dh
  4174f1:	xor    eax,DWORD PTR [edx]
  4174f3:	mov    ebx,DWORD PTR [edi]
  4174f5:	dec    eax
  4174f6:	(bad)  
  4174f7:	push   ebp
  4174f8:	adc    al,0xa3
  4174fa:	mov    bh,0x23
  4174fc:	push   ebx
  4174fd:	mov    ds:0x1ee33c32,eax
  417502:	add    al,BYTE PTR [eax]
  417504:	ror    BYTE PTR [edx+0x7f],1
  417507:	(bad)  
  417508:	addr16 das 
  41750a:	or     edi,DWORD PTR [ebx]
  41750c:	fld    QWORD PTR [edx-0x2]
  41750f:	(bad)  
  417510:	cmp    al,0x6
  417512:	(bad)  
  417514:	sub    eax,0xe144014e
  417519:	and    eax,0x45e1d4ee
  41751e:	jecxz  0x4174f5
  417520:	and    bh,dh
  417522:	call   0xe523541f
  417527:	add    esp,DWORD PTR [ebx-0x4f]
  41752a:	repz test BYTE PTR [ebp+eax*1+0x27003e9],0x6a
  417533:	and    eax,0xf6f82062
  417538:	in     al,dx
  417539:	add    ecx,ebp
  41753b:	add    eax,DWORD PTR [eax]
	...
  41756d:	add    BYTE PTR [ecx+0x6],dh
  417570:	sahf   
  417571:	neg    ah
  417573:	test   eax,0x65103e8
  417578:	scas   al,BYTE PTR es:[edi]
  417579:	inc    edx
  41757a:	(bad)  
  41757b:	std    
  41757c:	cdq    
  41757d:	add    BYTE PTR [ecx+ecx*1],0x99
  417581:	sub    eax,DWORD PTR [esi+0xd34e52f]
  417587:	sub    BYTE PTR [esi-0xbe26b78],0x39
  41758e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41758f:	sub    al,0x5b
  417591:	mov    edi,0xd521ff74
  417596:	ss inc edi
  417598:	lock add esi,DWORD PTR [ebx*1+0x2c8539e4]
  4175a0:	or     eax,0x4701bc81
  4175a5:	inc    edx
  4175a6:	pop    esp
  4175a7:	add    eax,0xe108893a
  4175ac:	loopne 0x41757c
  4175ae:	push   cs
  4175af:	adc    BYTE PTR [edi-0x1322e180],0x3
  4175b6:	arpl   WORD PTR ds:0xfe70516,ax
  4175bc:	add    al,ch
  4175be:	pusha  
  4175bf:	add    eax,0x2be07281
  4175c4:	(bad)  
  4175c5:	jmp    0xddc43abd
  4175ca:	or     al,0x14
  4175cc:	add    al,0xda
  4175ce:	sub    ah,BYTE PTR [esi+esi*1]
  4175d1:	push   edx
	...
  417602:	add    BYTE PTR [eax],al
  417604:	push   edi
  417605:	sub    ecx,DWORD PTR [edx-0x523b7c9]
  41760b:	ds push edi
  41760d:	jg     0x4175dc
  41760f:	inc    ecx
  417610:	dec    edx
  417611:	cs (bad) 
  417613:	cs jmp 0xf91:0xea0123c7
  41761b:	in     eax,0x60
  41761d:	add    eax,0x504228a
  417622:	add    ah,BYTE PTR [eax]
  417624:	bound  eax,QWORD PTR [esi+0x5e]
  417627:	jno    0x41768b
  417629:	sub    al,0x85
  41762b:	fxch   st(4)
  41762d:	sub    edi,esi
  41762f:	pusha  
  417630:	out    dx,al
  417631:	out    0x3,eax
  417633:	jmp    0x429e4198
  417638:	sbb    eax,0x206a0004
  41763d:	sub    eax,DWORD PTR [eax]
  41763f:	xchg   edi,eax
  417640:	push   ebx
  417641:	add    DWORD PTR [eax],eax
  417643:	jmp    0x3c4a112b
  417648:	data16 add BYTE PTR [ebp+0x564d9],0x60
  417650:	fst    DWORD PTR [ebx]
  417652:	add    al,0xe9
  417654:	pusha  
  417655:	lds    ecx,FWORD PTR [eax+0x15357]
  41765b:	jmp    0xed50f84f
  417660:	pusha  
  417661:	add    eax,0x16f678b
	...
  41769a:	dec    edx
  41769b:	test   eax,0xf8130206
  4176a0:	mov    edi,0xbe024288
  4176a5:	sbb    al,0x46
  4176a7:	pop    es
  4176a8:	add    BYTE PTR [ebp+0x63],dh
  4176ab:	stos   BYTE PTR es:[edi],al
  4176ac:	test   BYTE PTR [eax],dl
  4176ae:	inc    esi
  4176af:	pop    es
  4176b0:	add    BYTE PTR [ecx+0x3f9b4],cl
  4176b6:	or     al,BYTE PTR [edi-0x79]
  4176b9:	scas   al,BYTE PTR es:[edi]
  4176ba:	inc    BYTE PTR [edx]
  4176bc:	add    BYTE PTR [eax],al
  4176be:	xchg   ebx,eax
  4176bf:	jg     0x4176cf
  4176c1:	add    al,0xfa
  4176c3:	push   es
  4176c4:	mov    eax,DWORD PTR [esi+0x312]
  4176ca:	cmp    ah,BYTE PTR [ecx]
  4176cc:	mov    ebx,edx
  4176ce:	cmp    ecx,DWORD PTR [ebx]
  4176d0:	pop    es
  4176d1:	cmp    DWORD PTR [eax],0x3
  4176d4:	push   edx
  4176d5:	mov    edi,DWORD PTR [ecx+ecx*1-0x38]
  4176d9:	cli    
  4176da:	pop    ebp
  4176db:	test   BYTE PTR [ecx+0x2aa86],0x0
  4176e2:	inc    edx
  4176e3:	stc    
  4176e4:	mov    bh,0x1
  4176e6:	retf   0x6
  4176e9:	add    DWORD PTR [esi+edx*1+0x4],eax
  4176ed:	add    BYTE PTR [edx-0x49db6357],bh
  4176f3:	push   es
  4176f4:	add    BYTE PTR [ecx-0x1794f],al
  4176fa:	mov    dh,BYTE PTR [ebx+0x16]
  4176fd:	add    DWORD PTR [eax],0x0
	...
  417730:	push   ds
  417731:	sbb    eax,0x6a010216
  417736:	and    bl,BYTE PTR [eax]
  417738:	pop    ebx
  417739:	stos   BYTE PTR es:[edi],al
  41773a:	int3   
  41773b:	call   0x3f4f35
  417740:	sub    eax,0x635b5b57
  417745:	pop    esi
  417746:	cli    
  417747:	jmp    ebx
  417749:	xchg   esi,eax
  41774a:	add    al,BYTE PTR ds:0x3b41c63
  417750:	jp     0x417732
  417752:	out    0x17,eax
  417754:	loop   0x41770c
  417756:	add    bh,BYTE PTR [ebp+0x63]
  417759:	sbb    al,0xb4
  41775b:	add    ecx,DWORD PTR [edx-0x27e819a8]
  417761:	push   edi
  417762:	out    0x17,al
  417764:	xchg   edx,eax
  417765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417766:	inc    eax
  417767:	out    0x8f,eax
  417769:	(bad)  
  41776a:	xor    esi,edi
  41776c:	mov    ah,0x62
  41776e:	iret   
  41776f:	pop    edx
  417770:	and    DWORD PTR [edx+eax*1],esi
  417773:	(bad)  
  417774:	fld    QWORD PTR [ebx]
  417776:	or     BYTE PTR [eax],al
  417778:	arpl   WORD PTR ds:0x9d630002,bx
  41777e:	sub    eax,0x21c637f
  417783:	jae    0x41771f
  417785:	lahf   
  417786:	scas   al,BYTE PTR es:[edi]
  417787:	and    edi,DWORD PTR [ebx+0x20]
  41778a:	mov    ch,0x41
  41778c:	cwde   
  41778d:	mov    ds:0x1c6303e6,al
  417792:	mov    dh,0x39
	...
  4177c4:	add    BYTE PTR [eax],al
  4177c6:	mov    ebx,0xbcfe2c25
  4177cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177cc:	inc    eax
  4177cd:	out    0x60,eax
  4177cf:	es xor dh,bh
  4177d2:	fcomp  DWORD PTR [ecx+0x1b]
  4177d5:	int3   
  4177d6:	stos   BYTE PTR es:[edi],al
  4177d7:	push   edx
  4177d8:	xor    BYTE PTR [ecx-0x74f3ffd9],cl
  4177de:	in     eax,0x4b
  4177e0:	push   es
  4177e1:	add    BYTE PTR [ebx-0x4a],ah
  4177e4:	push   esp
  4177e5:	and    esp,DWORD PTR [edx+0x1e]
  4177e8:	push   esp
  4177e9:	add    DWORD PTR [ecx+0x74007bfa],esp
  4177ef:	add    al,0x6f
  4177f1:	adc    al,0x67
  4177f3:	add    eax,0xe0c67ae9
  4177f8:	in     al,dx
  4177f9:	add    esp,DWORD PTR [ebx-0x39]
  4177fc:	sub    ecx,ebp
  4177fe:	and    bh,dh
  417800:	call   0xe76a9589
  417805:	jno    0x41786f
  417807:	add    ecx,ebp
  417809:	add    ebp,esi
  41780b:	cwde   
  41780c:	fbstp  TBYTE PTR [esi+0x146e7c5b]
  417812:	addr16 add eax,0xdde7ae9
  417818:	in     eax,dx
  417819:	add    esp,DWORD PTR [ebx-0x3b]
  41781c:	pop    edi
  41781d:	bound  edi,QWORD PTR [eax+0x1]
  417820:	jmp    0xd8c15228
  417825:	pop    es
  417826:	arpl   WORD PTR ds:0x8a62,ax
	...
  41785c:	push   esp
  41785d:	add    ecx,ebp
  41785f:	add    ebp,ecx
  417861:	adc    eax,0x43ee55eb
  417866:	jo     0x41787c
  417868:	bound  esp,QWORD PTR [edi-0xc]
  41786b:	pop    es
  41786c:	arpl   WORD PTR ds:0x7fe80a94,ax
  417872:	fadd   DWORD PTR [edi]
  417874:	arpl   WORD PTR ds:0x16c8a70,ax
  41787a:	jmp    0x3ebf9b82
  41787f:	adc    BYTE PTR [edi+0x5],bl
  417882:	jmp    0xe5575f01
  417887:	add    esp,DWORD PTR [ebx+0x7c]
  41788a:	outs   dx,BYTE PTR ds:[esi]
  41788b:	or     esp,DWORD PTR [edi+0x5]
  41788e:	jmp    0x672dece6
  417893:	out    0x60,eax
  417895:	add    eax,0x7c12b7e9
  41789a:	jmp    FWORD PTR [ecx+0x6a072021]
  4178a0:	and    BYTE PTR [ebx],al
  4178a2:	push   eax
  4178a3:	xchg   ecx,eax
  4178a4:	retf   0xfe2d
  4178a7:	sahf   
  4178a8:	out    0x79,eax
  4178aa:	paddsw mm4,QWORD PTR [eax+0x5]
  4178ae:	mov    al,dh
  4178b0:	enter  0x5,0xe9
  4178b4:	pusha  
  4178b5:	push   es
  4178b6:	xchg   cl,bl
  4178b8:	pop    esp
  4178b9:	add    eax,0xe3d26000
  4178be:	add    ebp,ecx
	...
  4178f0:	add    BYTE PTR [eax],al
  4178f2:	pusha  
  4178f3:	xchg   dl,bh
  4178f5:	imul   esp,DWORD PTR [eax+0x5],0x8458da00
  4178fc:	imul   ecx,DWORD PTR ds:0xb58b036f,0xfffffffc
  417903:	rsqrtps xmm6,XMMWORD PTR [edx-0x5e]
  417907:	and    BYTE PTR [ebx+0x40],ah
  41790a:	push   ebx
  41790b:	daa    
  41790c:	pop    esi
  41790d:	xchg   edi,eax
  41790e:	sub    eax,0x60e1c1cb
  417913:	xchg   dl,bh
  417915:	jmp    0x9b417e7f
  41791a:	pop    esp
  41791b:	fiadd  WORD PTR [ebx-0x33]
  41791e:	push   0x5e9fa86
  417923:	sub    dh,bh
  417925:	jnp    0x417910
  417927:	fadd   QWORD PTR [ebx-0x3b]
  41792a:	pop    eax
  41792b:	jl     0x417980
  41792d:	int    0x68
  41792f:	ror    DWORD PTR [edx-0x712a7e1],cl
  417935:	out    0x7c,al
  417937:	(bad)  
  417938:	pop    ebp
  417939:	cmp    al,0x98
  41793b:	inc    ebp
  41793c:	pop    es
  41793d:	jmp    0xe55ce0a9
  417942:	pusha  
  417943:	add    eax,0xaa830075
  417948:	test   BYTE PTR [eax],dl
  41794a:	jle    0x41794f
  41794c:	add    BYTE PTR [ecx+0x3f90c],cl
  417952:	mov    al,BYTE PTR [ebx-0x79]
  417955:	scas   al,BYTE PTR es:[edi]
	...
  417986:	add    BYTE PTR [eax],al
  417988:	data16 std 
  41798a:	(bad)  
  41798b:	push   ebx
  41798d:	jle    0x41799d
  41798f:	add    al,0x4a
  417991:	add    ecx,DWORD PTR [ebx-0xad7a]
  417997:	(bad)  
  417998:	jmp    0xffff:0x26bdff21
  41799f:	(bad)  
  4179a0:	aas    
  4179a1:	cli    
  4179a2:	mov    al,BYTE PTR [esi-0xe6]
  4179a8:	mov    bl,0x7f
  4179aa:	push   ss
  4179ab:	add    al,0x3a
  4179ad:	add    eax,DWORD PTR [eax-0x77]
  4179b0:	in     al,0x15
  4179b2:	add    al,0x0
  4179b4:	or     ch,BYTE PTR [edx+0x2fe1084]
  4179ba:	add    BYTE PTR [ebx+0x3f97c],cl
  4179c0:	or     dl,bl
  4179c2:	push   ds
  4179c3:	mov    ecx,esi
  4179c5:	push   ds
  4179c6:	push   ss
  4179c7:	push   edx
  4179c8:	jno    0x4179b1
  4179ca:	out    0xd4,al
  4179cc:	inc    edx
  4179cd:	(bad)  
  4179ce:	std    
  4179cf:	pop    edi
  4179d0:	adc    al,0x56
  4179d2:	pop    ecx
  4179d3:	ret    0x2c2
  4179d6:	mov    eax,DWORD PTR [esi+ebx*4-0x2]
  4179da:	mov    WORD PTR [eax-0x7546],ss
  4179e0:	icebp  
  4179e1:	xchg   ecx,eax
  4179e2:	add    al,BYTE PTR [edx+ecx*8]
  4179e5:	add    dh,BYTE PTR [esi+0x19]
  4179e8:	xor    DWORD PTR [ecx+0x40a],ebp
	...
  417a1e:	mov    edx,0x63c13b02
  417a23:	(bad)  
  417a24:	or     BYTE PTR [ebx],ch
  417a26:	mov    ds:0x3800065a,al
  417a2b:	pop    ebp
  417a2c:	pop    es
  417a2d:	add    bl,bh
  417a2f:	sbb    al,0x2
  417a31:	ret    0x1c67
  417a34:	icebp  
  417a35:	mov    edi,0x830220a1
  417a3a:	jg     0x417a68
  417a3c:	rcl    DWORD PTR [eax+ebx*8-0x8],1
  417a40:	out    0x1f,eax
  417a42:	mov    ch,0x4b
  417a44:	dec    ecx
  417a45:	mov    dl,BYTE PTR [edx-0x11]
  417a48:	jl     0x417aa5
  417a4a:	xchg   DWORD PTR [ebx+edi*2+0x5b],ecx
  417a4e:	jg     0x417a74
  417a50:	jmp    0x4179ff
  417a52:	imul   ebx,DWORD PTR [eax],0x2
  417a55:	add    BYTE PTR [ebx+ebx*4+0x61],ah
  417a59:	jmp    FWORD PTR [esp+ebx*1]
  417a5c:	sbb    DWORD PTR [edx],ecx
  417a5e:	(bad)  
  417a5f:	jg     0x417a47
  417a61:	call   FWORD PTR [esp+ebx*1]
  417a64:	add    cl,BYTE PTR [ebp-0x74fbff81]
  417a6a:	in     eax,0x17
  417a6c:	push   es
  417a6d:	add    BYTE PTR [ebx-0x67],ah
  417a70:	jp     0x417a71
  417a72:	test   BYTE PTR ds:0x6e2b3b02,bl
  417a78:	adc    eax,0x62fdd8b
  417a7d:	add    BYTE PTR [ebx+0x23],ah
  417a80:	inc    ebx
  417a81:	jne    0x417a83
	...
  417ab3:	add    BYTE PTR [edi+0x43],ah
  417ab6:	inc    ebx
  417ab7:	jmp    0x9463:0x4434368
  417abe:	add    eax,DWORD PTR [eax]
  417ac0:	mov    eax,0xe8bff119
  417ac5:	popf   
  417ac6:	cli    
  417ac7:	add    esp,DWORD PTR [ebx+0x1c]
  417aca:	std    
  417acb:	mov    ch,0x52
  417acd:	add    eax,0x41b75f6
  417ad2:	jb     0x417aac
  417ad4:	test   BYTE PTR [eax],0x62
  417ad7:	add    cl,ch
  417ad9:	jns    0x417ae9
  417adb:	jnp    0x417b35
  417add:	jle    0x417b50
  417adf:	xchg   BYTE PTR [ecx+eax*1-0x17],bl
  417ae3:	add    ebp,DWORD PTR [edi+ebp*2-0x28]
  417ae7:	cld    
  417ae8:	scas   al,BYTE PTR es:[edi]
  417ae9:	(bad)  
  417aea:	out    0x78,eax
  417aec:	sbb    BYTE PTR [edi+0xce78ec],cl
  417af2:	in     eax,0x3
  417af4:	arpl   WORD PTR [esi+0x71b82fc],cx
  417afa:	jmp    0x7747de02
  417aff:	or     BYTE PTR [edi+0x5],bl
  417b02:	jmp    0xed4f6809
  417b07:	add    esp,DWORD PTR [ebx-0x70]
  417b0a:	data16 or BYTE PTR [edi+0x5],ah
  417b0e:	jmp    0x6f32978b
  417b13:	add    BYTE PTR [edi+0x5],ah
  417b16:	jmp    0x417b9d
	...
  417b47:	add    BYTE PTR [eax],al
  417b49:	add    BYTE PTR [ebx],bl
  417b4b:	push   es
  417b4c:	rol    DWORD PTR [edx],0x63
  417b4f:	fwait
  417b50:	in     eax,dx
  417b51:	mov    ebx,0x7ec8bdb
  417b56:	arpl   WORD PTR ds:0x95c5df0,ax
  417b5c:	jmp    0x92c8d764
  417b61:	sub    al,0xe5
  417b63:	and    al,0x71
  417b65:	enter  0xd580,0x52
  417b69:	add    al,0x3c
  417b6b:	push   es
  417b6c:	jmp    0xeedd1e59
  417b71:	jp     0x417ba3
  417b73:	jmp    0x88ac9430
  417b78:	push   eax
  417b7a:	popa   
  417b7b:	adc    al,0x86
  417b7d:	and    esp,DWORD PTR [eax+0x5]
  417b80:	add    dh,dh
  417b82:	cs leave 
  417b84:	(bad)  
  417b85:	in     eax,dx
  417b86:	push   ss
  417b87:	rol    DWORD PTR [eax],1
  417b89:	bound  ebx,QWORD PTR [edx+ecx*4-0x73839dfd]
  417b90:	cmp    al,dl
  417b92:	xchg   DWORD PTR [eax+0x560e8b2],ecx
  417b98:	mov    esp,DWORD PTR [edi-0x80]
  417b9b:	or     BYTE PTR [eax],al
  417b9d:	jmp    0xae50838f
  417ba2:	pushf  
  417ba3:	call   0x249a64c3
  417ba8:	(bad)  
  417ba9:	rcr    BYTE PTR [ebp+0x623996],cl
	...
  417bdf:	add    BYTE PTR [edi-0x21],bh
  417be2:	cli    
  417be3:	std    
  417be4:	dec    esp
  417be5:	xchg   ecx,eax
  417be6:	xchg   cl,ch
  417be8:	fadd   DWORD PTR [eax+eax*1]
  417beb:	mov    dl,0xde
  417bed:	pop    es
  417bee:	add    al,0xe9
  417bf0:	pusha  
  417bf1:	fwait
  417bf2:	pop    ss
  417bf3:	jb     0x417bd3
  417bf5:	(bad)  
  417bf7:	jmp    0xe0395c5c
  417bfc:	pop    esp
  417bfd:	lock test DWORD PTR [edx+0xc],0x9f68f7ef
  417c05:	and    al,0x66
  417c07:	call   0xfa42ac6c
  417c0c:	inc    edi
  417c0d:	pop    DWORD PTR ds:0x8c5bfc62
  417c13:	in     eax,dx
  417c14:	out    0xde,eax
  417c16:	les    ebx,FWORD PTR [edx-0x32ac2268]
  417c1c:	mov    ah,0x99
  417c1e:	add    esp,DWORD PTR [eax-0x4c]
  417c21:	out    0x2b,eax
  417c23:	add    BYTE PTR [ecx-0x277bf214],ah
  417c29:	push   es
  417c2a:	add    BYTE PTR [eax],al
  417c2c:	aas    
  417c2d:	(bad)  
  417c2e:	(bad)  
  417c2f:	(bad)  
  417c30:	mov    edx,0x51cd8b07
  417c35:	loope  0x417bbe
  417c37:	dec    esp
  417c38:	data16 cmc 
  417c3a:	cmp    cl,BYTE PTR [esi+eiz*2+0x3d]
  417c3e:	or     eax,0xa7087
	...
  417c73:	add    BYTE PTR [eax],al
  417c75:	add    BYTE PTR [ecx],dl
  417c77:	pop    ebp
  417c78:	and    dl,BYTE PTR [eax]
  417c7a:	lock hlt 
  417c7c:	add    BYTE PTR [edx],bh
  417c7e:	push   esi
  417c7f:	push   ds
  417c80:	dec    BYTE PTR [edx-0x44eddab2]
  417c86:	js     0x417c8f
  417c88:	add    BYTE PTR [eax],al
  417c8a:	jbe    0x417ca9
  417c8c:	cmp    DWORD PTR [esi-0x1dcda],ecx
  417c92:	sub    eax,0x3a00c886
  417c97:	pop    es
  417c98:	mov    edx,DWORD PTR [esi+eiz*1+0x17]
  417c9c:	cmp    edx,ebx
  417c9e:	cmp    DWORD PTR [edx],ebp
  417ca0:	mov    ecx,DWORD PTR [ebp+0x38]
  417ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ca4:	out    0x2b,al
  417ca6:	push   cs
  417ca7:	inc    ebx
  417ca8:	es mov al,dh
  417cab:	sbb    eax,0x560b39fe
  417cb0:	add    al,0x43
  417cb2:	mov    ebx,0x4872d833
  417cb7:	mov    ds:0xa416244a,al
  417cbc:	push   0x24
  417cbe:	bound  esi,QWORD PTR [edx]
  417cc0:	fmul   DWORD PTR [edi]
  417cc2:	xchg   al,ch
  417cc4:	(bad)  
  417cc5:	(bad)  
  417cc6:	cli    
  417cc7:	xor    ebx,DWORD PTR [edx+0x24]
  417cca:	ficom  DWORD PTR [ebp+eax*2+0x53]
  417cce:	arpl   WORD PTR [ebp+0x7d],bx
  417cd1:	int    0xbb
  417cd3:	mov    esi,0x97c4fe2d
  417cd8:	mov    bh,0x23
	...
  417d0a:	add    BYTE PTR [eax],al
  417d0c:	push   ebx
  417d0d:	xchg   edi,eax
  417d0e:	iret   
  417d0f:	and    ebx,DWORD PTR [ebx+0x7d]
  417d12:	aam    0x8a
  417d14:	popf   
  417d15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d16:	sbb    esp,edi
  417d18:	les    esp,FWORD PTR [esi]
  417d1a:	sub    esi,edi
  417d1c:	dec    eax
  417d1d:	xor    al,0x7d
  417d1f:	dec    ebx
  417d20:	aas    
  417d21:	and    BYTE PTR ds:0x1803cbed,al
  417d27:	ret    
  417d28:	adc    eax,0xf8a1763
  417d2d:	or     ah,bl
  417d2f:	sar    BYTE PTR [ecx+0x2e],0x7d
  417d33:	shl    DWORD PTR [edx-0x5efcf6bc],0x2f
  417d3a:	mov    esi,0x4a277323
  417d3f:	jne    0x417d9e
  417d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d42:	mov    dh,0x23
  417d44:	imul   eax,DWORD PTR [edi+0x4fd53abc],0xfffffffe
  417d4b:	(bad)  
  417d4c:	cmp    al,0x19
  417d4e:	rcl    BYTE PTR [edx-0x6e],0xa7
  417d52:	cmp    bh,ah
  417d54:	rcl    BYTE PTR [esi+0x5fd8fe29],0xde
  417d5b:	psubsb mm6,QWORD PTR [ebx+0x143f437d]
  417d62:	aam    0x4f
  417d64:	fadd   DWORD PTR [ecx]
  417d66:	sbb    ecx,DWORD PTR [edi+0x9]
  417d69:	retf   
  417d6a:	sub    DWORD PTR [edx-0x75c708d5],ecx
	...
  417da0:	add    BYTE PTR [eax],al
  417da2:	xchg   DWORD PTR [eax],edx
  417da4:	fdiv   QWORD PTR [edi+0x295c85b8]
  417daa:	in     al,dx
  417dab:	add    al,0x10
  417dad:	jle    0x417d59
  417daf:	inc    ebx
  417db0:	(bad)  
  417db2:	pusha  
  417db3:	dec    edi
  417db4:	jmp    0xc51306f7
  417db9:	adc    edx,DWORD PTR [ecx+0x11]
  417dbc:	jb     0x417d8d
  417dbe:	cmp    cl,0x6f
  417dc1:	iret   
  417dc2:	cmp    ch,0x5f
  417dc5:	mov    DWORD PTR [eax-0x5b7da40b],0x5803e7a9
  417dcf:	mov    esp,esp
  417dd1:	call   DWORD PTR [ecx+eiz*1-0x7527f3a2]
  417dd8:	fdiv   st(7),st
  417dda:	test   BYTE PTR [ecx],ah
  417ddc:	add    DWORD PTR [esi+esi*8],ebp
  417ddf:	or     BYTE PTR [edx],dl
  417de1:	sub    al,0x89
  417de3:	adc    BYTE PTR [edx],al
  417de5:	sub    al,0xe3
  417de7:	dec    ecx
  417de8:	call   0x9246e188
  417ded:	push   es
  417dee:	nop
  417def:	and    BYTE PTR [ecx-0x6],dh
  417df2:	jmp    0xe6becdd8
  417df7:	in     eax,0xe4
  417df9:	add    esp,DWORD PTR [ebx+0x4]
  417dfc:	scas   al,BYTE PTR es:[edi]
  417dfd:	test   eax,ecx
  417dff:	jmp    0xf3f080e0
  417e04:	imul   ebp,DWORD PTR [ecx],0x0
	...
  417e37:	add    BYTE PTR [ebp-0x76],bl
  417e3a:	sub    ah,BYTE PTR cs:0xebfc5121
  417e41:	rol    DWORD PTR [esp+ecx*1],1
  417e44:	jmp    0x4c9:0xd8140cc1
  417e4b:	loopne 0x417e26
  417e4d:	mov    ecx,0xd1e8140c
  417e52:	add    al,0xc
  417e54:	xchg   esp,eax
  417e55:	mov    edi,0xd06993ff
  417e5a:	add    esp,DWORD PTR [eax-0x19]
  417e5d:	mov    ebx,0x43772d82
  417e62:	psubsw mm3,mm7
  417e65:	sub    al,0x37
  417e67:	push   0xfffffffb
  417e69:	in     al,0x43
  417e6b:	jmp    0x7d320a22
  417e70:	mov    ecx,0xdf9fbfd3
  417e75:	inc    esp
  417e76:	aaa    
  417e77:	sub    ebx,DWORD PTR [edi+0x5]
  417e7a:	mov    esp,DWORD PTR [ebp-0x567b1f7c]
  417e80:	int    0xe
  417e82:	xor    DWORD PTR [ecx-0x527d3db5],0x78
  417e89:	inc    esi
  417e8a:	pop    ss
  417e8b:	jmp    0x2d654a97
  417e90:	cld    
  417e91:	dec    esp
  417e92:	jae    0x417e63
  417e94:	div    DWORD PTR [ebx+0x35ec2523]
  417e9a:	jae    0x417e63
	...
  417ecc:	add    BYTE PTR [eax],al
  417ece:	jmp    0x612e925c
  417ed3:	add    eax,0xffe27048
  417ed8:	add    ebp,ecx
  417eda:	pusha  
  417edb:	mov    cs,WORD PTR [ebp-0x1dfbb07]
  417ee1:	inc    ecx
  417ee2:	pop    edx
  417ee3:	sbb    ebp,ebp
  417ee5:	push   edx
  417ee6:	das    
  417ee7:	dec    ebp
  417ee8:	push   esi
  417ee9:	out    0xb2,al
  417eeb:	pop    ebp
  417eec:	(bad)  
  417eed:	fsub   DWORD PTR [ecx]
  417eef:	and    bh,cl
  417ef1:	sub    DWORD PTR [edi],edx
  417ef3:	inc    edi
  417ef4:	push   cs
  417ef5:	xchg   edi,eax
  417ef6:	mov    DWORD PTR ds:0x3660a810,eax
  417efc:	mov    edi,0xb60fa21a
  417f01:	add    bl,ah
  417f03:	or     DWORD PTR [eax],edx
  417f05:	inc    ecx
  417f06:	or     dh,BYTE PTR [ebx+0x1d3d33be]
  417f0c:	mov    ah,0xb9
  417f0e:	stc    
  417f0f:	repz inc eax
  417f11:	add    BYTE PTR [ebx-0x413e7e3c],bl
  417f17:	sbb    ch,al
  417f19:	xor    DWORD PTR [ebx+0x4],0x59ba0001
  417f20:	mov    DWORD PTR [ebp-0x447ce276],0x530003b3
  417f2a:	inc    ebx
  417f2b:	test   BYTE PTR [esi+ecx*2+0x18c082be],0x0
	...
  417f63:	add    dl,ch
  417f65:	add    eax,0x88abf00
  417f6a:	add    BYTE PTR [eax],al
  417f6c:	pop    es
  417f6d:	push   ecx
  417f6e:	call   DWORD PTR [ebx+eax*1-0x6]
  417f72:	xor    al,al
  417f74:	pop    DWORD PTR [ebx]
  417f76:	add    BYTE PTR [eax],al
  417f78:	mov    bl,BYTE PTR [edx+0x63ec727]
  417f7e:	add    BYTE PTR [eax],al
  417f80:	jp     0x417f85
  417f82:	add    BYTE PTR [ebx+0x3d060a],al
  417f88:	add    eax,DWORD PTR ds:[eax]
  417f8b:	jb     0x417f73
  417f8d:	mov    al,al
  417f8f:	add    BYTE PTR [esi],bh
  417f91:	add    eax,DWORD PTR [eax]
  417f93:	or     DWORD PTR [ebx],0x6
  417f96:	sub    edi,ebx
  417f98:	das    
  417f99:	ror    DWORD PTR [ecx-0x1e0f172],1
  417f9f:	inc    ecx
  417fa1:	jae    0x84e2056f
  417fa7:	and    al,0xfe
  417fa9:	add    al,BYTE PTR [eax]
  417fab:	mov    DWORD PTR [ebx-0x5a],esp
  417fae:	sti    
  417faf:	add    esp,DWORD PTR [ebx+0x2c]
  417fb2:	jnp    0x417f51
  417fb4:	xor    BYTE PTR [bp+si],al
  417fb7:	add    dl,ch
  417fb9:	sahf   
  417fba:	test   DWORD PTR [ebx],0x397b2c63
  417fc0:	fdivr  DWORD PTR [esi+0x2c63040f]
  417fc6:	jns    0x417f5d
	...
  417ff8:	add    BYTE PTR [eax],al
  417ffa:	jae    0x418024
  417ffc:	add    al,BYTE PTR [eax]
  417ffe:	fidiv  DWORD PTR [esi+0x2c6303db]
  418004:	js     0x41800e
  418006:	jmp    0xde68:0xe81bde70
  41800d:	push   ebx
  41800e:	(bad)  [edx]
  418010:	add    ebx,DWORD PTR [esi+0x2284f]
  418016:	bound  eax,QWORD PTR [esi+0x2c630412]
  41801c:	mov    edx,0x14100f88
  418021:	mov    DWORD PTR [edi],eax
  418023:	or     BYTE PTR [ecx+ecx*4],cl
  418026:	(bad)  [eax]
  418028:	(bad)  
  418029:	push   DWORD PTR [ebp+edx*4-0x3a]
  41802d:	and    ecx,DWORD PTR [ebx]
  41802f:	adc    eax,DWORD PTR [ecx+0xe]
  418032:	fstp   QWORD PTR [ebx-0x3]
  418035:	call   FWORD PTR [ecx+ebx*4-0x77]
  418039:	call   DWORD PTR [esp+ebp*1+0x2]
  41803d:	mov    esp,DWORD PTR [edi+0x2384c650]
  418043:	clc    
  418044:	jmp    0xa922fd3
  418049:	inc    ecx
  41804a:	jmp    0xaf64:0xe717dfef
  418051:	sub    al,0xd8
  418053:	neg    edi
  418055:	pop    edi
  418056:	call   0x5f54f75f
  41805b:	add    eax,0xdae9
	...
  418090:	cwde   
  418091:	jmp    0x771b524e
  418096:	hlt    
  418097:	(bad)  
  418098:	cld    
  418099:	sbb    eax,0xb540d011
  41809e:	xchg   edi,eax
  41809f:	jp     0x418039
  4180a1:	jmp    0x1ed5523a
  4180a6:	sbb    BYTE PTR [edx+0x436bf4a0],al
  4180ac:	mov    DWORD PTR gs:[ebx-0x2ee23302],edx
  4180b3:	mov    DWORD PTR [eax-0x17ee6bff],0xe9bfccb0
  4180bd:	mov    eax,0xb0dbc3c4
  4180c2:	int3   
  4180c3:	xlat   BYTE PTR ds:[ebx]
  4180c4:	fstp   TBYTE PTR [eax-0x276243c]
  4180ca:	jno    0x41808c
  4180cc:	inc    eax
  4180cd:	mov    ecx,0x9707671
  4180d2:	jmp    0x3883b8da
  4180d7:	rcl    DWORD PTR [ebx],1
  4180d9:	nop
  4180da:	sbb    al,0xe0
  4180dc:	xor    BYTE PTR [ebx-0x7e7bc98f],dh
  4180e2:	mov    cl,0x25
  4180e4:	mov    DWORD PTR gs:[eax+eiz*8],edi
  4180e8:	mov    BYTE PTR [eax-0x769bfd5d],cl
  4180ee:	inc    esi
  4180ef:	dec    DWORD PTR [ebp+ebx*1+0x61]
  4180f3:	jle    0x4180f5
	...
  418125:	add    BYTE PTR [eax+0x2403e901],al
  41812b:	ret    0xfcc
  41812e:	arpl   WORD PTR ds:0xc16a03e9,ax
  418134:	dec    esp
  418136:	or     BYTE PTR [edx+0x5466a61],dl
  41813c:	movq   mm6,QWORD PTR [ecx]
  41813f:	or     BYTE PTR [eax],al
  418141:	jmp    0x11654a3f
  418146:	push   cs
  418147:	mov    DWORD PTR [edi-0x16],eax
  41814a:	pusha  
  41814b:	add    eax,0xd14ad8b
  418150:	push   edi
  418151:	adc    ah,BYTE PTR [esi+0x2d624fb7]
  418157:	and    al,0xe1
  418159:	xor    eax,0xb58a1b86
  41815e:	mov    ah,0xd4
  418160:	push   esi
  418161:	mov    eax,0x318a4a4b
  418166:	addr16 pop eax
  418168:	test   BYTE PTR [esi],0x86
  41816b:	ffreep st(2)
  41816d:	imul   BYTE PTR ds:0x60e902f9
  418173:	nop
  418174:	inc    ebx
  418175:	int    0xb8
  418177:	fcos   
  418179:	jecxz  0x4181db
  41817b:	add    eax,0x1be3f07c
  418180:	add    esi,ebp
  418182:	or     al,0xd
  418184:	add    ebp,ecx
  418186:	pusha  
  418187:	(bad)  
  418189:	dec    ebx
	...
  4181ba:	add    BYTE PTR [eax],al
  4181bc:	addr16 add eax,0x1be3f07c
  4181c2:	add    ch,dh
  4181c4:	in     al,dx
  4181c5:	sbb    al,0x1
  4181c7:	jmp    0x59d122c
  4181cc:	das    
  4181cd:	pop    DWORD PTR [ebx-0x33]
  4181d0:	and    al,0x8f
  4181d2:	xchg   ebp,eax
  4181d3:	cmc    
  4181d4:	dec    esp
  4181d5:	sbb    al,0xfe
  4181d7:	ret    0x8da3
  4181da:	inc    ebx
  4181db:	lds    eax,FWORD PTR [eax-0x3c]
  4181de:	dec    edi
  4181df:	add    BYTE PTR [edi+0x7850ff5d],ch
  4181e5:	aaa    
  4181e6:	mov    eax,DWORD PTR [esi+edx*1+0x54]
  4181ea:	dec    esi
  4181eb:	mov    edi,esp
  4181ed:	(bad)  
  4181ee:	(bad)  
  4181f0:	jge    0x4181d3
  4181f2:	mov    DWORD PTR [esi+eiz*2+0x39],ecx
  4181f6:	aaa    
  4181f7:	dec    esp
  4181f8:	push   esi
  4181f9:	inc    ecx
  4181fa:	mov    eax,DWORD PTR [ebx+0xb]
  4181fd:	lahf   
  4181fe:	inc    edx
  4181ff:	and    al,0xfe
  418201:	dec    edx
  418202:	jp     0x41823d
  418204:	jno    0x4181bd
  418206:	push   eax
  418207:	mov    edi,DWORD PTR [eax+eax*1]
  41820a:	inc    ebx
  41820b:	test   DWORD PTR [ebp-0x59b3761f],0xa6448747
  418215:	cmp    ecx,DWORD PTR [ecx+0x4e5b9644]
  41821b:	push   ecx
  41821c:	inc    ecx
  41821d:	shl    dh,cl
  41821f:	das    
	...
  418250:	add    BYTE PTR [eax],al
  418252:	mov    ch,0xe7
  418254:	std    
  418255:	mov    edi,esi
  418257:	cmp    esp,DWORD PTR [edx]
  418259:	sub    eax,DWORD PTR [edx-0x2c4736fb]
  41825f:	xchg   ecx,eax
  418260:	loope  0x41829a
  418262:	mov    ch,0xe9
  418264:	iret   
  418265:	cli    
  418266:	adc    ebx,eax
  418268:	mov    edi,0xc2028de8
  41826d:	jmp    0x4182c9
  41826f:	mov    WORD PTR [edx+0x24],cs
  418272:	dec    esi
  418273:	push   edx
  418274:	mov    esi,ecx
  418276:	xchg   edx,eax
  418277:	or     edi,esi
  418279:	jmp    FWORD PTR [ebp-0x79dbad75]
  41827f:	mov    dl,dh
  418281:	mov    eax,DWORD PTR [esi-0x75adc1d3]
  418287:	mov    cl,ah
  418289:	call   0xfe5afcf1
  41828e:	cmp    al,0x48
  418290:	cmp    cl,BYTE PTR [edx+0x23bf9820]
  418296:	mov    esp,DWORD PTR [ebp+0x2f60e186]
  41829c:	inc    esp
  41829d:	rcr    BYTE PTR [ebx],0x2f
  4182a0:	add    eax,0xdd683f44
  4182a5:	out    0x8e,eax
  4182a7:	adc    al,0x49
  4182a9:	inc    ebx
  4182aa:	aas    
  4182ab:	sbb    BYTE PTR [ebx],al
  4182ad:	add    BYTE PTR [ebx+0x2c],ah
  4182b0:	xchg   esi,edi
  4182b2:	ins    DWORD PTR es:[edi],dx
  4182b3:	add    al,0xdd
  4182b5:	imul   eax,DWORD PTR [eax],0x0
	...
  4182e8:	inc    edi
  4182e9:	pusha  
  4182ea:	sahf   
  4182eb:	das    
  4182ec:	fsub   DWORD PTR [eax-0x1a]
  4182ef:	daa    
  4182f0:	ss jge 0x418280
  4182f3:	int    0xcb
  4182f5:	mov    ds:0x97ccfe19,al
  4182fa:	mov    bh,0x23
  4182fc:	pop    ds
  4182fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182fe:	cmp    ecx,DWORD PTR [edx+0x51c24027]
  418304:	adc    edx,DWORD PTR [edi+0x12f8e751]
  41830a:	and    esi,edi
  41830c:	push   0x475b8eef
  418311:	je     0x4182b2
  418313:	pop    es
  418314:	pushf  
  418315:	call   0x2ca39701
  41831a:	add    al,BYTE PTR [eax]
  41831c:	fidiv  WORD PTR [ebx]
  41831e:	xchg   edi,eax
  41831f:	dec    esp
  418320:	cmp    bl,al
  418322:	out    0x43,eax
  418324:	imul   dl
  418326:	mov    cs,WORD PTR [ebp+0x22057]
  41832c:	stc    
  41832d:	sub    al,0xb5
  41832f:	push   eax
  418330:	call   0x50dfadae
  418335:	add    eax,0xb0d922a6
  41833a:	(bad)  
  41833b:	(bad)  
  41833c:	fnstcw WORD PTR [ecx+eiz*2]
  41833f:	mov    DWORD PTR [eax-0x164bc53b],0x36b0904a
  418349:	sbb    bh,BYTE PTR [ebp-0x72]
	...
  41837c:	add    BYTE PTR [eax],al
  41837e:	cwde   
  41837f:	loope  0x418341
  418381:	mov    eax,0x909e8eb3
  418386:	mov    eax,0xa82be7fd
  41838b:	adc    ebx,DWORD PTR [ebp+0x22]
  41838e:	dec    ecx
  41838f:	cmp    eax,0xbd40bf61
  418394:	into   
  418395:	or     eax,0xf80cc11c
  41839a:	in     al,dx
  41839b:	sbb    eax,ebp
  41839d:	add    edi,eax
  41839f:	or     eax,0xf1809f6a
  4183a4:	call   0xe98c61bb
  4183a9:	add    esp,DWORD PTR [ebx-0x7a]
  4183ac:	sbb    eax,DWORD PTR ds:0x4418b54
  4183b2:	arpl   WORD PTR ds:0xe580b762,ax
  4183b8:	jno    0x418343
  4183ba:	push   eax
  4183bb:	add    ecx,ebp
  4183bd:	add    esp,eax
  4183bf:	inc    esi
  4183c0:	div    BYTE PTR [ecx+eiz*8-0x1e4915bb]
  4183c7:	inc    esp
  4183c8:	jmp    0x33e0:0x4c8dfb3
  4183cf:	mov    fs,WORD PTR [esi-0x32e413d4]
  4183d5:	and    ecx,ebp
  4183d7:	ror    BYTE PTR [esp+edx*8],0x29
  4183db:	rol    DWORD PTR [esp+ebp*8],0xd9
  4183df:	mov    al,0xff
  4183e1:	or     al,0x0
	...
  418413:	add    BYTE PTR [ebx],bh
  418415:	mov    bh,0x8a
  418417:	lahf   
  418418:	setge  BYTE PTR [edx]
  41841b:	xchg   ecx,eax
  41841c:	ins    BYTE PTR es:[edi],dx
  41841d:	adc    esi,edi
  41841f:	sahf   
  418420:	(bad)  
  418421:	xor    BYTE PTR [edx+0x54e14b2d],cl
  418427:	cmp    esi,esp
  418429:	dec    edx
  41842a:	out    0x97,eax
  41842c:	push   esp
  41842d:	pop    ss
  41842e:	(bad)  
  41842f:	rcr    BYTE PTR [edi+0x668b827d],cl
  418435:	add    al,0xc2
  418437:	bound  esp,QWORD PTR [edi+0x3febf845]
  41843d:	out    dx,al
  41843e:	out    0x43,eax
  418440:	ins    BYTE PTR es:[edi],dx
  418441:	pop    ss
  418442:	(bad)  
  418443:	bound  edi,QWORD PTR [edi]
  418445:	mov    eax,DWORD PTR [ebx+0x5]
  418448:	pop    es
  418449:	mov    dl,0x4f
  41844b:	jb     0x4183de
  41844d:	and    dl,cl
  41844f:	xor    al,0x42
  418451:	pop    ss
  418452:	mov    ah,BYTE PTR [ecx]
  418454:	into   
  418455:	dec    ebx
  418456:	add    ah,BYTE PTR [eax]
  418458:	aaa    
  418459:	sub    eax,0xfd172a1
  41845e:	call   0xc9cce99b
  418463:	sub    BYTE PTR [eax-0x19dcfd09],cl
  418469:	les    esp,FWORD PTR [ebx]
  41846b:	mov    ebp,0x103a4d67
  418470:	les    eax,FWORD PTR [eax]
  418472:	(bad)  
  418473:	lods   eax,DWORD PTR ds:[esi]
  418474:	test   ah,dh
  418476:	add    cl,ch
	...
  4184a8:	add    BYTE PTR [eax],al
  4184aa:	pusha  
  4184ab:	add    eax,0xe0eae685
  4184b0:	cmp    ah,BYTE PTR [esp+eiz*8-0x74c2751c]
  4184b7:	call   0x4b27c00b
  4184bc:	out    0x0,eax
  4184be:	hlt    
  4184bf:	out    dx,al
  4184c0:	std    
  4184c1:	push   ecx
  4184c3:	fisttp DWORD PTR [ecx+0x53296e44]
  4184c9:	push   eax
  4184ca:	shl    DWORD PTR [esi-0x1b10801a],0xfd
  4184d1:	cmp    esp,DWORD PTR [edx]
  4184d3:	cmc    
  4184d4:	mov    eax,DWORD PTR [edx]
  4184d6:	dec    ecx
  4184d7:	add    al,0x0
  4184d9:	and    DWORD PTR [esi+0x2d],0x12
  4184dd:	add    BYTE PTR ds:0x3a02f57f,dh
  4184e3:	add    al,0x83
  4184e5:	std    
  4184e6:	or     ebp,esi
  4184e8:	(bad)  
  4184e9:	aam    0xa
  4184eb:	add    al,0x0
  4184ed:	mov    edx,esi
  4184ef:	pop    ds
  4184f0:	push   ds
  4184f1:	mov    ecx,esi
  4184f3:	pop    ds
  4184f4:	push   esi
  4184f5:	mov    ecx,DWORD PTR [eax+edx*1-0x7ef5fffe]
  4184fc:	mov    edi,0xc080cbfd
  418501:	add    ecx,eax
  418503:	cmp    BYTE PTR [esi+0x4a86fa03],0x24
  41850a:	(bad)  
  41850b:	push   edx
  41850c:	mov    esi,ecx
	...
  41853e:	add    BYTE PTR [eax],al
  418540:	jb     0x4184fd
  418542:	idiv   bh
  418544:	mov    DWORD PTR gs:[edx+0x24],eax
  418548:	call   0x5a88:0x8e245288
  41854f:	and    al,0x92
  418551:	cmp    cl,al
  418553:	push   edx
  418554:	xor    DWORD PTR [esi-0x145083b2],esi
  41855a:	and    dh,ch
  41855c:	test   edi,esi
  41855e:	push   ebx
  41855f:	push   ebx
  418560:	adc    edi,eax
  418562:	xchg   DWORD PTR [esi+ebx*2+0x15],eax
  418566:	out    0x17,al
  418568:	arpl   WORD PTR [ecx],di
  41856a:	push   ds
  41856b:	(bad)  
  41856c:	call   0x38656d6a
  418571:	ins    DWORD PTR es:[edi],dx
  418572:	jl     0x4184f6
  418574:	sub    DWORD PTR [edx],0x64e8c201
  41857a:	inc    esp
  41857b:	clc    
  41857c:	popa   
  41857d:	inc    ebx
  41857e:	out    dx,eax
  41857f:	out    0x4c,eax
  418581:	jns    0x4185a1
  418583:	(bad)  
  418584:	scas   al,BYTE PTR es:[edi]
  418585:	fisttp DWORD PTR [edx-0x18171533]
  41858b:	sub    ecx,DWORD PTR [ebx+0x7b]
  41858e:	pop    ss
  41858f:	(bad)  
  418590:	sub    al,0x94
  418592:	dec    ebx
  418593:	mov    bl,BYTE PTR [edi+0x2b2ae640]
  418599:	sub    al,0x4b
  41859b:	mov    bh,0xa
  41859d:	retf   
  41859e:	mov    ch,BYTE PTR ds:0xf934b614
	...
  4185d4:	add    BYTE PTR [eax],al
  4185d6:	fcom   st(2)
  4185d8:	inc    esp
  4185d9:	call   0x8a89b13a
  4185de:	lahf   
  4185df:	add    al,bl
  4185e1:	add    bl,BYTE PTR [ebx]
  4185e3:	add    al,0x2d
  4185e5:	jl     0x418642
  4185e7:	ffreep st(7)
  4185e9:	and    esi,DWORD PTR [edi+0x2d]
  4185ec:	add    al,BYTE PTR [eax]
  4185ee:	arpl   WORD PTR [ecx+0x237b751e],sp
  4185f4:	inc    edi
  4185f5:	jnp    0x418676
  4185f7:	xchg   ebx,eax
  4185f8:	mov    bh,0x23
  4185fa:	jae    0x418658
  4185fc:	mov    al,0x8a
  4185fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185ff:	add    al,0x55
  418601:	rep lods al,BYTE PTR ds:[esi]
  418603:	dec    DWORD PTR [edx-0x199f2729]
  418609:	daa    
  41860a:	ss jl  0x418596
  41860d:	int    0x8b
  41860f:	retf   0xfe17
  418612:	mov    WORD PTR ds:0x89553c22,es
  418618:	add    eax,DWORD PTR [edx]
  41861a:	arpl   WORD PTR ds:0xf1409f6a,ax
  418620:	call   0xeb3d6c33
  418625:	add    esp,DWORD PTR [ebx-0x76]
  418628:	sbb    al,0xe8
  41862a:	mov    ah,0x80
  41862c:	mov    ch,0xe
  41862e:	fild   QWORD PTR [ecx-0x7d9cfc19]
  418634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418635:	add    al,0x54
  418637:	jg     0x418671
  418639:	add    eax,0x0
	...
  41866a:	add    BYTE PTR [eax],al
  41866c:	arpl   WORD PTR ds:0xb180b762,ax
  418672:	popa   
  418673:	dec    esi
  418674:	jns    0x4186c0
  418676:	jae    0x41867f
  418678:	pop    ecx
  418679:	fisub  DWORD PTR [ebp-0x52759d6b]
  41867f:	mov    bl,0xe9
  418681:	rol    ah,0xf7
  418684:	cmp    DWORD PTR [esi],esi
  418686:	mov    ecx,0x4c8d7b3
  41868b:	loopne 0x418620
  41868d:	mov    ah,BYTE PTR [esi]
  41868f:	mov    WORD PTR [eax+0x182c04e1],ds
  418695:	push   cs
  418696:	inc    ebp
  418697:	push   ds
  418698:	sub    ebx,DWORD PTR [ecx-0x2ead27fc]
  41869e:	popa   
  41869f:	mov    bh,0x80
  4186a1:	aad    0x95
  4186a3:	mov    cl,0xd9
  4186a5:	inc    esi
  4186a6:	adc    al,ah
  4186a8:	rcl    BYTE PTR ds:0x89948a1d,1
  4186ae:	lods   al,BYTE PTR ds:[esi]
  4186af:	out    0x6c,eax
  4186b1:	scas   al,BYTE PTR es:[edi]
  4186b2:	mov    eax,0xd62c9e8a
  4186b7:	pop    ss
  4186b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186b9:	adc    eax,0xb8e942c1
  4186be:	dec    esp
  4186c0:	mov    WORD PTR [edi-0x1e639df1],ss
  4186c6:	das    
  4186c7:	jb     0x418694
  4186c9:	loope  0x4186fe
  4186cb:	jo     0x418660
  4186cd:	loope  0x418706
  4186cf:	pusha  
	...
  418700:	add    BYTE PTR [eax],al
  418702:	mov    ebx,0x9b623be1
  418707:	loope  0x418718
  418709:	push   ds
  41870a:	mov    dl,0xc5
  41870c:	mov    ch,BYTE PTR [edi-0x490f1471]
  418712:	jbe    0x418793
  418714:	dec    ebx
  418715:	add    eax,0x7250bc2f
  41871a:	xchg   ebp,eax
  41871b:	jg     0x4186f4
  41871d:	xchg   ecx,eax
  41871e:	pop    eax
  41871f:	pop    ss
  418720:	(bad)  
  418721:	xchg   esi,eax
  418722:	sbb    cl,BYTE PTR [eax+0xe]
  418725:	pop    esp
  418726:	(bad)  
  418727:	adc    al,0xfe
  418729:	jmp    0xd1653809
  41872e:	cmp    esi,DWORD PTR [ebx+0x23]
  418731:	in     eax,dx
  418732:	pusha  
  418733:	add    eax,0xb8da1175
  418738:	and    edi,ebp
  41873a:	fcmovne st,st(0)
  41873c:	and    edi,ecx
  41873e:	mov    bh,0xb6
  418740:	dec    edi
  418741:	bound  esp,QWORD PTR [ebp+0x4e59f12c]
  418747:	adc    edx,DWORD PTR [edx+ebx*4-0x25]
  41874b:	inc    edx
  41874c:	mov    BYTE PTR [ebp+0x2fe7e0c4],ah
  418752:	jb     0x418767
  418754:	(bad)  
  418755:	bound  esi,QWORD PTR [ebx+0x18ea23e8]
  41875b:	jg     0x41872f
  41875d:	mov    ah,0xa2
  41875f:	jge    0x4187ac
  418761:	int    0xc8
  418763:	mov    dh,0x8a
  418765:	pop    ds
	...
  418796:	add    BYTE PTR [eax],al
  418798:	jg     0x4187fe
  41879a:	repnz add BYTE PTR [ebp-0xe],bl
  41879e:	mov    eax,ebx
  4187a0:	adc    DWORD PTR ds:0x58f53822,edi
  4187a6:	mov    esi,ecx
  4187a8:	bound  ebp,QWORD PTR [eax+0x7d7dfff1]
  4187ae:	push   0x24
  4187b0:	outs   dx,BYTE PTR ds:[esi]
  4187b1:	push   es
  4187b2:	fmul   DWORD PTR [ebx+0x3b221d46]
  4187b8:	mov    ecx,0x42245a7d
  4187bd:	jae    0x418806
  4187bf:	jmp    0x418807
  4187c1:	jge    0x41881d
  4187c3:	and    al,0x72
  4187c5:	jle    0x418809
  4187c7:	and    al,0x52
  4187c9:	sub    eax,0x8362484
  4187ce:	add    BYTE PTR [ebp+0x33],dh
  4187d1:	test   DWORD PTR [eax+ebp*1+0x846],edi
  4187d8:	push   esi
  4187d9:	push   cs
  4187da:	cmp    eax,DWORD PTR [eax]
  4187dc:	aaa    
  4187dd:	or     BYTE PTR [eax],al
  4187df:	jl     0x4187e8
  4187e1:	test   ebp,edi
  4187e3:	add    dl,BYTE PTR [esi]
  4187e5:	es jg  0x418864
  4187e8:	es xor dh,bh
  4187eb:	jl     0x4187e7
  4187ed:	pop    es
  4187ee:	jl     0x4187f5
  4187f0:	mov    ecx,esi
  4187f2:	add    DWORD PTR [ecx+edi*8+0x7c],esi
  4187f6:	dec    edx
  4187f7:	and    al,0x52
  4187f9:	pop    edx
  4187fa:	dec    edi
  4187fb:	mov    eax,DWORD PTR [eax]
	...
  41882d:	add    BYTE PTR [eax+eiz*8],ch
  418830:	int3   
  418831:	repz popf 
  418833:	icebp  
  418834:	jmp    0x2295c969
  418839:	pop    eax
  41883a:	inc    ecx
  41883b:	dec    esp
  41883c:	and    dl,BYTE PTR [eax]
  41883e:	push   ecx
  41883f:	aad    0x29
  418841:	xlat   BYTE PTR ds:[ebx]
  418842:	clc    
  418843:	push   edi
  418844:	mov    esi,ecx
  418846:	arpl   WORD PTR [esi],ax
  418848:	outs   dx,BYTE PTR ds:[esi]
  418849:	out    dx,eax
  41884a:	lods   al,BYTE PTR ds:[esi]
  41884b:	add    bl,BYTE PTR [ebx+eax*2]
  41884e:	jg     0x41887e
  418850:	jg     0x418840
  418852:	bound  ebx,QWORD PTR [ecx-0x588e15dc]
  418858:	mov    dh,0x23
  41885a:	jae    0x41880d
  41885c:	(bad)  
  41885d:	(bad)  
  41885e:	xor    dl,al
  418860:	mov    cs,ebp
  418862:	mov    ecx,DWORD PTR [edi-0x118b01ed]
  418868:	sbb    al,BYTE PTR [edx-0x70f6e192]
  41886e:	loop   0x41888d
  418870:	add    al,BYTE PTR [eax]
  418872:	call   0x63457821
  418877:	sbb    al,0xaf
  418879:	push   edx
  41887a:	mov    bl,0xa7
  41887c:	dec    ecx
  41887d:	out    0x65,eax
  41887f:	ins    BYTE PTR es:[edi],dx
  418880:	sbb    bh,dh
  418882:	call   0x8e696867
  418887:	int    0x8e
  418889:	int    0xd8
  41888b:	push   esp
  41888c:	sub    ebp,edi
  41888e:	xor    DWORD PTR [edx+ebx*1+0x3a],ecx
	...
  4188c1:	add    BYTE PTR [eax],al
  4188c3:	add    BYTE PTR [eax],ah
  4188c5:	adc    al,0xea
  4188c7:	mov    bl,BYTE PTR [edi-0x1ac515c0]
  4188cd:	dec    eax
  4188ce:	(bad)  
  4188cf:	inc    DWORD PTR [edx+esi*1]
  4188d2:	or     eax,DWORD PTR [ebx-0xb43]
  4188d8:	arpl   WORD PTR [esi+ecx*4],bx
  4188db:	inc    esp
  4188dc:	cs sbb al,0xff
  4188df:	jmp    DWORD PTR [ebx+0x48]
  4188e2:	inc    DWORD PTR [edx+0x68e1ede]
  4188e8:	xchg   esi,eax
  4188e9:	sbb    al,0x97
  4188eb:	dec    esp
  4188ed:	pusha  
  4188ee:	aam    0x8a
  4188f0:	daa    
  4188f1:	add    eax,0xa1ebbbcd
  4188f6:	(bad)  
  4188f7:	out    dx,eax
  4188f8:	fbld   TBYTE PTR [eax]
  4188fa:	pushf  
  4188fb:	jecxz  0x4188d6
  4188fd:	jnp    0x4188f3
  4188ff:	jmp    DWORD PTR [edx+edx*1+0x43e9b599]
  418906:	adc    ch,ah
  418908:	test   BYTE PTR [edx],dl
  41890a:	cmc    
  41890b:	pop    ebx
  41890c:	arpl   WORD PTR ds:0x8b6203e9,ax
  418912:	cld    
  418913:	(bad)  
  418914:	jl     0x418928
  418916:	xadd   BYTE PTR [eax-0x7],al
  41891a:	pop    ebx
  41891b:	and    al,0xdf
  41891d:	mov    cl,0xeb
  41891f:	sbb    bh,BYTE PTR [ecx-0x51]
  418922:	jno    0x4188db
  418924:	sub    BYTE PTR [ebp+0xbf71],0x0
	...
  418957:	add    BYTE PTR [eax],al
  418959:	add    BYTE PTR [eax-0x264be423],al
  41895f:	inc    edx
  418960:	rol    BYTE PTR [esi],0x50
  418963:	adc    ah,BYTE PTR [ebp-0x1b06f2fc]
  418969:	add    esp,DWORD PTR [ebx-0x80]
  41896c:	xor    al,0xf9
  41896e:	sub    eax,0x888ecb1e
  418973:	jmp    0x985f0a98
  418978:	(bad)  
  418979:	mov    gs,WORD PTR [eax-0x9713f17]
  41897f:	clc    
  418980:	in     al,0x3
  418982:	arpl   WORD PTR [esp+edx*8-0x21],di
  418986:	cmp    BYTE PTR [esp+ebp*4-0x21],bh
  41898a:	sub    al,0x7c
  41898c:	mov    esp,0x41ca5cdf
  418991:	icebp  
  418992:	fist   WORD PTR [ecx]
  418994:	mov    esp,0xed1e2406
  418999:	mov    ds,esi
  41899b:	clc    
  41899c:	(bad)  
  41899d:	in     al,dx
  41899e:	pusha  
  41899f:	add    eax,0x3fd59953
  4189a4:	out    0x5f,eax
  4189a6:	mov    DWORD PTR [ebx],edx
  4189a8:	(bad)  
  4189a9:	push   ds
  4189aa:	loop   0x4189a1
  4189ac:	add    ebp,ecx
  4189ae:	pusha  
  4189af:	mov    dh,bh
  4189b1:	fisub  WORD PTR [edi+ebx*1]
  4189b4:	(bad)  
  4189b5:	call   0xc5bd581a
  4189ba:	lods   al,BYTE PTR ds:[esi]
  4189bb:	add    al,BYTE PTR [ebp+0x8]
	...
  4189ed:	add    BYTE PTR [eax],al
  4189ef:	add    BYTE PTR [eax+0x5],ah
  4189f2:	add    BYTE PTR [edx-0x4c],ah
  4189f5:	in     eax,0x53
  4189f7:	jb     0x418a23
  4189f9:	(bad)  
  4189fb:	ins    BYTE PTR es:[edi],dx
  4189fc:	arpl   di,di
  4189fe:	cmp    ch,BYTE PTR [esi-0x5974fc2f]
  418a04:	scas   eax,DWORD PTR es:[edi]
  418a05:	jle    0x418a4a
  418a07:	or     eax,0x12ea7c53
  418a0c:	mov    bh,BYTE PTR [ecx-0x1ae49bb1]
  418a12:	cmp    ebx,DWORD PTR [eax]
  418a14:	(bad)  
  418a15:	inc    edx
  418a16:	mov    BYTE PTR ds:0x17e7e543,dl
  418a1c:	fs paddd mm2,mm0
  418a20:	aam    0xe4
  418a22:	xor    ebx,DWORD PTR [ebx]
  418a24:	adc    edi,DWORD PTR [ebx+edx*2-0x33]
  418a28:	xor    BYTE PTR [eax+0x28a97251],bh
  418a2e:	out    0x78,al
  418a30:	push   0xf
  418a32:	mov    al,BYTE PTR [ecx+0x2123c4d6]
  418a38:	mov    dl,0xc0
  418a3a:	mov    ch,BYTE PTR [edi]
  418a3c:	inc    edi
  418a3d:	cmp    al,dh
  418a3f:	push   esi
  418a40:	dec    edx
  418a41:	retf   
  418a42:	les    esp,FWORD PTR [edx-0x45]
  418a45:	in     al,0x13
  418a47:	add    BYTE PTR [esp+edx*1+0x395e4c89],ah
  418a4e:	mov    DWORD PTR [esi+ebx*2+0x35],edx
  418a52:	xchg   DWORD PTR [eax+eax*1+0x0],ecx
	...
  418a86:	pop    esi
  418a87:	xor    DWORD PTR [edi-0x76c751ac],eax
  418a8d:	inc    esp
  418a8e:	sahf   
  418a8f:	adc    al,0x55
  418a91:	push   ebp
  418a92:	jmp    0xfddb:0x6be8cc81
  418a99:	call   DWORD PTR [ecx]
  418a9b:	cmp    eax,0x53ed3822
  418aa0:	mov    esi,ecx
  418aa2:	add    ecx,esp
  418aa4:	out    0xa3,al
  418aa6:	mov    ebp,ebp
  418aa8:	std    
  418aa9:	cmp    ecx,edi
  418aab:	ja     0x418ae5
  418aad:	mov    edi,DWORD PTR [esi]
  418aaf:	and    eax,0x2ffc3b36
  418ab4:	add    al,BYTE PTR [eax]
  418ab6:	jp     0x418b37
  418ab8:	pop    es
  418ab9:	and    esp,0x1b
  418abc:	add    al,BYTE PTR [eax]
  418abe:	dec    edx
  418abf:	add    al,0x74
  418ac1:	sbb    BYTE PTR [edi+0x4],dl
  418ac4:	add    eax,0x3783a00
  418ac9:	add    DWORD PTR ds:0x1719740a,0x4
  418ad0:	jge    0x418ad2
  418ad2:	cmp    bh,BYTE PTR [eax+0x3]
  418ad5:	adc    ebp,0x8
  418ad8:	je     0x418ae7
  418ada:	jge    0x418b35
  418adc:	mov    esi,ecx
  418ade:	repnz loopne 0x418ad0
  418ae1:	call   DWORD PTR [ebp+0x1aebfd39]
  418ae7:	sub    DWORD PTR [edx+0x24],0x0
	...
  418b1a:	add    BYTE PTR [eax],al
  418b1c:	cli    
  418b1d:	push   cs
  418b1e:	(bad)  
  418b1f:	dec    DWORD PTR [edx]
  418b21:	add    al,0x8b
  418b23:	shl    DWORD PTR [ebx+0x3],cl
  418b26:	xor    DWORD PTR [ecx-0x72],edx
  418b29:	mov    ds:0xb7a4e748,eax
  418b2e:	pop    ss
  418b2f:	(bad)  
  418b30:	push   ds
  418b31:	fwait
  418b32:	daa    
  418b33:	add    BYTE PTR [esi-0x37],dl
  418b36:	mov    DWORD PTR [ebx+0x7f],ebp
  418b39:	mov    eax,DWORD PTR cs:[ebx-0x79]
  418b3d:	push   edx
  418b3e:	ret    
  418b3f:	inc    edi
  418b40:	jmp    0x7d6:0x6857de51
  418b47:	sub    ah,0xf5
  418b4a:	pop    ss
  418b4b:	(bad)  
  418b4c:	out    0x6,al
  418b4e:	or     BYTE PTR [edi+esi*8-0x1ffffde3],al
  418b55:	push   ss
  418b56:	add    BYTE PTR [edi],cl
  418b58:	fstp   QWORD PTR [edx-0x6c9cfffe]
  418b5e:	(bad)  
  418b5f:	and    edx,DWORD PTR [ebx-0x29]
  418b62:	mov    al,dl
  418b64:	cmp    BYTE PTR [edi-0x4d],bl
  418b67:	push   eax
  418b68:	fsubr  DWORD PTR [edi+0x2b]
  418b6b:	cs dec ebp
  418b6d:	dec    eax
  418b6e:	push   ss
  418b6f:	mov    ch,BYTE PTR [edi-0x4ea923f8]
  418b75:	mov    ds:0x453b8a45,eax
  418b7a:	add    al,0xf1
  418b7c:	cmp    al,0x68
  418b7e:	fcmovb st,st(4)
	...
  418bb0:	add    BYTE PTR [eax],al
  418bb2:	mov    ah,0xe9
  418bb4:	mov    al,BYTE PTR [ebx-0x79]
  418bb7:	xor    al,0xd9
  418bb9:	test   DWORD PTR [edi+0x28],edi
  418bbc:	add    al,BYTE PTR [eax]
  418bbe:	xchg   esi,eax
  418bbf:	adc    eax,0x284bbd81
  418bc4:	add    al,BYTE PTR [eax]
  418bc6:	arpl   WORD PTR [eax],dx
  418bc8:	cli    
  418bc9:	cmp    al,0x63
  418bcb:	sub    DWORD PTR [edx],eax
  418bcd:	add    BYTE PTR [edi+0x5],bh
  418bd0:	in     al,dx
  418bd1:	xor    ch,0x3
  418bd4:	aad    0xdf
  418bd6:	das    
  418bd7:	add    eax,0x916303d4
  418bdc:	jecxz  0x418b60
  418bde:	fld    QWORD PTR [edx]
  418be0:	mov    ebp,0x71b52dfb
  418be5:	inc    esi
  418be6:	les    edi,FWORD PTR [edi+esi*1-0x9e53ae9]
  418bed:	mov    eax,0x4c69ae19
  418bf2:	mov    ch,0xaf
  418bf4:	imul   eax,DWORD PTR [eax+0x74],0xd803f043
  418bfb:	mov    eax,ds:0x42e9f3c4
  418c00:	sar    DWORD PTR [esi],1
  418c02:	and    al,0xb8
  418c04:	jno    0x418c4c
  418c06:	test   dh,ch
  418c08:	push   es
  418c09:	pop    ss
  418c0a:	test   eax,ecx
  418c0c:	imul   esp,DWORD PTR [edi],0x2ad39863
  418c12:	fs jp  0x418c49
  418c15:	loopne 0x418c17
	...
  418c47:	add    BYTE PTR [eax+eax*4+0x21],bl
  418c4b:	pop    ss
  418c4c:	adc    esi,DWORD PTR [ebx+0x6444561]
  418c52:	xlat   BYTE PTR ds:[ebx]
  418c53:	push   ss
  418c54:	push   ebp
  418c55:	jp     0x418c93
  418c57:	loopne 0x418c09
  418c59:	push   eax
  418c5a:	out    0x3,eax
  418c5c:	arpl   WORD PTR ds:0xe4b136f2,ax
  418c62:	jae    0x418cde
  418c64:	xor    al,0xe
  418c66:	call   0xfcc8646e
  418c6b:	jmp    DWORD PTR [esi+ecx*1]
  418c6e:	cmp    DWORD PTR [ecx+ebp*8+0x720903e],esi
  418c75:	push   cs
  418c76:	jge    0x418c7c
  418c78:	mov    ebp,0x60ecfff8
  418c7d:	add    eax,0x2f198c03
  418c82:	jno    0x418cd0
  418c84:	loope  0x418cc0
  418c86:	(bad)  
  418c87:	call   0xe9457702
  418c8c:	pusha  
  418c8d:	or     BYTE PTR [edx-0x20],0xf3
  418c91:	in     al,dx
  418c92:	mov    ch,BYTE PTR [edi-0x30]
  418c95:	add    DWORD PTR [eax],eax
  418c97:	jmp    0xed59147b
  418c9c:	pusha  
  418c9d:	add    eax,0xe9e66040
  418ca2:	add    ebp,ecx
  418ca4:	pusha  
  418ca5:	jl     0x418c2c
  418ca7:	stc    
  418ca8:	lods   al,BYTE PTR ds:[esi]
  418ca9:	or     eax,0x62fe
	...
  418cde:	test   BYTE PTR es:[ebx],0xe9
  418ce2:	pusha  
  418ce3:	jnp    0x418cf4
  418ce5:	jmp    0x418d39
  418ce7:	adc    cl,al
  418ce9:	jno    0x418c7b
  418ceb:	add    al,0x9e
  418ced:	aad    0x84
  418cef:	or     eax,0x7a7f74fe
  418cf4:	test   ecx,edi
  418cf6:	je     0x418d05
  418cf8:	(bad)  
  418cf9:	jo     0x418ce8
  418cfb:	cmc    
  418cfc:	add    ebp,ecx
  418cfe:	pusha  
  418cff:	lds    ecx,FWORD PTR [eax+0x95b5f]
  418d05:	jmp    0xe5510ff3
  418d0a:	pusha  
  418d0b:	add    eax,0x9476f8b
  418d10:	add    cl,ch
  418d12:	jmp    0x8746:0x4dbb01fc
  418d19:	stc    
  418d1a:	popa   
  418d1b:	imul   ebx,DWORD PTR [ebx],0xffffffed
  418d1e:	pusha  
  418d1f:	add    eax,0x82ebf075
  418d24:	sldt   WORD PTR [esi]
  418d27:	or     DWORD PTR [eax],eax
  418d29:	mov    DWORD PTR [ecx+ecx*1+0x48fa0002],eax
  418d30:	xchg   DWORD PTR [esi-0x1f2d2],ecx
  418d36:	jae    0x418cc3
  418d38:	push   cs
  418d39:	add    al,0xfa
  418d3b:	or     BYTE PTR [ebx-0x1f30d7a],cl
  418d41:	inc    DWORD PTR [eax]
	...
  418d73:	add    BYTE PTR [edx-0x457976df],bl
  418d79:	or     al,0xfe
  418d7b:	inc    DWORD PTR [ecx+eax*1+0xd3c8b00]
  418d82:	add    al,BYTE PTR [eax]
  418d84:	retf   0x847d
  418d87:	sbb    dh,al
  418d89:	or     BYTE PTR [eax],al
  418d8b:	add    DWORD PTR [ecx+edx*1],ebx
  418d8e:	add    al,BYTE PTR [eax]
  418d90:	mov    edx,0xaad2cb1d
  418d95:	jge    0x418dd9
  418d97:	and    al,0xbe
  418d99:	mov    edi,DWORD PTR [esi+0x4a7dcb74]
  418d9f:	and    al,0xda
  418da1:	jge    0x418d37
  418da3:	adc    BYTE PTR [esi+0x362b0008],al
  418da9:	and    eax,0x81f1514e
  418dae:	adc    al,BYTE PTR [edx+edi*2]
  418db1:	or     BYTE PTR [ebx],ch
  418db3:	dec    esp
  418db4:	push   cx
  418db6:	push   eax
  418db7:	push   ecx
  418db8:	jne    0x418dac
  418dba:	into   
  418dbb:	add    DWORD PTR [esi],0x18
  418dbe:	add    eax,0xffffff87
  418dc1:	std    
  418dc2:	pop    esp
  418dc3:	mov    ecx,DWORD PTR [ecx]
  418dc5:	dec    ebp
  418dc6:	pop    ebp
  418dc7:	pop    esi
  418dc8:	leave  
  418dc9:	int3   
  418dca:	ss ret 0x162
  418dce:	mov    eax,DWORD PTR [esi-0x1f19d]
  418dd4:	sbb    al,0x47
  418dd6:	mov    esi,0x23
	...
  418e07:	add    BYTE PTR [eax],al
  418e09:	add    BYTE PTR [ebx-0x52a1471f],dh
  418e0f:	lahf   
  418e10:	ds aaa 
  418e12:	and    DWORD PTR [esi],esi
  418e14:	add    bh,BYTE PTR [eax+0x81e63]
  418e1a:	and    BYTE PTR [edi-0x6898dc42],dl
  418e20:	dec    edx
  418e21:	sar    dl,0x1e
  418e24:	test   DWORD PTR [ebx+0x6b],eax
  418e27:	pop    esi
  418e28:	aas    
  418e29:	mov    bl,BYTE PTR [edi]
  418e2b:	cli    
  418e2c:	pop    es
  418e2d:	cmp    DWORD PTR [edi+0x63fffff9],0x64744299
  418e37:	popf   
  418e38:	sub    ebx,DWORD PTR ds:[edi+0x1e]
  418e3c:	add    al,bl
  418e3e:	fcomp  DWORD PTR [ecx+0x1e5f43de]
  418e44:	add    cl,BYTE PTR [ebx+0x3c241f7]
  418e4a:	arpl   WORD PTR [esi],bx
  418e4c:	mov    cl,0x8a
  418e4e:	fild   WORD PTR [ecx-0x3e]
  418e51:	add    esp,DWORD PTR [ebx+0x1e]
  418e54:	mov    al,0x8a
  418e56:	xlat   BYTE PTR ds:[ebx]
  418e57:	inc    ecx
  418e58:	(bad)  
  418e59:	add    esp,DWORD PTR [ebx+0x1e]
  418e5c:	mov    bl,0x4f
  418e5e:	fsub   DWORD PTR [ecx+0x1e5f3fe7]
  418e64:	add    dl,BYTE PTR [edx-0x4d]
  418e67:	test   eax,0x347b23bf
  418e6c:	mov    bl,0xf4
	...
  418e9e:	add    BYTE PTR [eax],al
  418ea0:	dec    esp
  418ea1:	dec    esp
  418ea2:	test   bl,al
  418ea4:	ja     0x418ebe
  418ea6:	add    al,BYTE PTR [eax]
  418ea8:	and    BYTE PTR [ecx+0x3f],ch
  418eab:	retf   
  418eac:	daa    
  418ead:	push   es
  418eae:	mov    ch,0x40
  418eb0:	sbb    BYTE PTR [edx],bh
  418eb2:	lods   al,BYTE PTR ds:[esi]
  418eb3:	inc    eax
  418eb4:	sbb    BYTE PTR [edx],bh
  418eb6:	cmp    edi,DWORD PTR [ebp+0x7]
  418eb9:	test   DWORD PTR [esp+edx*1+0x14],edi
  418ebd:	or     ebp,eax
  418ebf:	mov    dh,0xb6
  418ec1:	mov    dl,0x71
  418ec3:	mov    ecx,0x391d45c
  418ec8:	mov    ch,0x56
  418eca:	in     al,dx
  418ecb:	shl    DWORD PTR [ebx+0x23147005],0xe
  418ed2:	jmp    0xf9433bd9
  418ed7:	jl     0x418eac
  418ed9:	xchg   BYTE PTR [edi+0xb],al
  418edc:	fs push edx
  418ede:	je     0x418edd
  418ee0:	pop    eax
  418ee1:	mov    ebx,0x3dde03a7
  418ee6:	in     eax,0x78
  418ee8:	xchg   ebx,eax
  418ee9:	cli    
  418eea:	jbe    0x418f31
  418eec:	fadd   st(1),st
  418eee:	add    edi,DWORD PTR [ecx+eiz*1]
  418ef1:	xchg   BYTE PTR [ecx],ah
  418ef3:	int3   
  418ef4:	sub    BYTE PTR [edi+edx*8],dh
  418ef7:	xor    eax,0xff8b8606
  418efc:	arpl   WORD PTR [eax+0x129c7cf2],dx
  418f02:	and    BYTE PTR [ecx+0x0],al
	...
  418f34:	add    BYTE PTR [eax],al
  418f36:	sbb    BYTE PTR ds:0x78611ed7,al
  418f3c:	fdivr  st(5),st
  418f3e:	out    0x8c,eax
  418f40:	out    0x86,eax
  418f42:	ror    BYTE PTR [eax-0x8],0x12
  418f46:	gs or  ch,al
  418f49:	xchg   BYTE PTR [eax],al
  418f4b:	js     0x418f45
  418f4d:	adc    dl,BYTE PTR [ebp+0xa]
  418f50:	call   0x773bb929
  418f55:	test   DWORD PTR [eax],edx
  418f57:	mov    ebx,0x786727ff
  418f5c:	xor    edx,ecx
  418f5e:	fld    QWORD PTR [edi]
  418f60:	sbb    esp,DWORD PTR [ebp*1+0x68d4437c]
  418f67:	add    BYTE PTR [ebx-0xc],0x90
  418f6b:	pop    ds
  418f6c:	pop    es
  418f6d:	arpl   WORD PTR [ecx+edx*8],bx
  418f70:	stos   DWORD PTR es:[edi],eax
  418f71:	jno    0x418f97
  418f73:	jmp    0xf1dba07
  418f78:	sbb    esi,ebp
  418f7a:	dec    edi
  418f7b:	dec    edi
  418f7c:	sbb    ebp,ecx
  418f7e:	pusha  
  418f7f:	add    eax,0x55e69f0f
  418f84:	dec    ebp
  418f85:	test   al,0x60
  418f87:	js     0x418fbc
  418f89:	icebp  
  418f8a:	in     eax,0x7
  418f8c:	aaa    
  418f8d:	int3   
  418f8e:	(bad)  
  418f8f:	jnp    0x418fd4
  418f91:	cld    
  418f92:	mov    BYTE PTR [edx+0x1f50dc43],al
  418f98:	pop    es
  418f99:	arpl   WORD PTR [eax],ax
	...
  418fcb:	add    BYTE PTR [eax+edx*8-0x17639e55],ah
  418fd2:	(bad)
  418fd6:	aaa    
  418fd7:	popf   
  418fd8:	ja     0x418faf
  418fda:	(bad)  
  418fdc:	cmp    al,BYTE PTR [edi+0x99f9fc3]
  418fe2:	jle    0x418f69
  418fe4:	pop    ebx
  418fe5:	jne    0x418fe6
  418fe7:	je     0x41904b
  418fe9:	jle    0x418fee
  418feb:	push   esp
  418fec:	mov    WORD PTR [edi-0x7a8816c0],?
  418ff2:	mov    ecx,?
  418ff4:	push   ebx
  418ff5:	or     edi,esi
  418ff7:	out    dx,al
  418ff8:	or     al,BYTE PTR [edi+0x92027db]
  418ffe:	jle    0x41904d
  419000:	pop    esp
  419001:	jne    0x419002
  419003:	dec    DWORD PTR [esi-0x58fb74fd]
  419009:	adc    eax,0xc4a414c
  41900e:	cmp    BYTE PTR [ebp-0x209e6],0x79
  419015:	cmp    cl,0x18
  419018:	inc    esi
  419019:	mov    edi,0x11f08340
  41901e:	or     eax,0xfdf6308c
  419023:	call   DWORD PTR [edi-0x7a00f180]
  419029:	test   BYTE PTR [esi-0x18],0x3
  41902d:	add    eax,0x0
	...
  419062:	gs push ebx
  419064:	pop    ecx
  419065:	mov    DWORD PTR [esi-0x5f73fa8],edx
  41906b:	dec    edi
  41906c:	xchg   ebp,esp
  41906e:	dec    ebx
  41906f:	in     eax,0x7e
  419071:	add    dl,cl
  419073:	add    al,0x53
  419075:	push   esi
  419076:	in     eax,dx
  419077:	mov    DWORD PTR [ebx+0x8],eax
  41907a:	aaa    
  41907b:	push   eax
  41907c:	jle    0x419037
  41907e:	call   0x81c2:0x43000004
  419085:	sar    BYTE PTR [esi+0x5c813189],0x1
  41908c:	add    ah,bh
  41908e:	mov    al,bl
  419090:	in     al,0x6
  419092:	add    DWORD PTR [edx],edi
  419094:	jg     0x41907d
  419096:	cmp    al,BYTE PTR [esi]
  419098:	add    BYTE PTR [eax],al
  41909a:	cmp    ebx,esi
  41909c:	or     BYTE PTR [ecx],cl
  41909e:	je     0x419029
  4190a0:	sbb    DWORD PTR ss:[ebp+0x1],0xc37afc00
  4190a8:	in     eax,dx
  4190a9:	or     dh,BYTE PTR [ebx-0xa]
  4190ac:	xchg   DWORD PTR [edx],esi
  4190ae:	arpl   WORD PTR [ebp+0x22218238],sp
  4190b4:	jnp    0x4190ed
  4190b6:	loop   0x4190ee
  4190b8:	inc    edx
  4190b9:	push   cs
  4190ba:	arpl   WORD PTR [esi],bx
  4190bc:	inc    ecx
  4190bd:	out    dx,al
  4190be:	gs and edx,eax
  4190c1:	mov    BYTE PTR [ebp-0x5d],dh
  4190c4:	rol    DWORD PTR [eax+0x0],cl
	...
  4190f6:	add    BYTE PTR [eax],al
  4190f8:	inc    ebp
  4190f9:	push   ds
  4190fa:	adc    al,BYTE PTR [edx]
  4190fc:	arpl   WORD PTR [ebp+0x28],bx
  4190ff:	or     ebp,eax
  419101:	adc    al,BYTE PTR [ebx+0x235d54e2]
  419107:	cvtps2pd xmm4,QWORD PTR [eax+0x7b]
  41910b:	pop    ss
  41910c:	loop   0x419188
  41910e:	add    dh,al
  419110:	pusha  
  419111:	push   ds
  419112:	inc    ecx
  419113:	jmp    0x9531:0x8830255f
  41911a:	xor    eax,DWORD PTR [edx+0x2f7b2221]
  419120:	loopne 0x4190d9
  419122:	iret   
  419123:	or     dl,BYTE PTR [eax-0x1fb72c5b]
  419129:	fld    QWORD PTR [esi]
  41912b:	test   DWORD PTR [edx+0x268c8850],ebx
  419131:	sahf   
  419132:	mov    dl,0xe7
  419134:	jl     0x419154
  419136:	add    al,BYTE PTR [eax]
  419138:	or     al,0x40
  41913a:	stos   DWORD PTR es:[edi],eax
  41913b:	mov    BYTE PTR [edi+0x63034448],dh
  419141:	mov    ds:0xb45f23c6,eax
  419146:	xchg   esi,eax
  419147:	dec    ebx
  419148:	and    bl,BYTE PTR [esi]
  41914a:	jnp    0x419155
  41914c:	ficom  DWORD PTR ds:0x9b67c183
  419152:	inc    edx
  419153:	add    esp,edx
  419155:	adc    edx,DWORD PTR ds:0xe905224b
  41915b:	xchg   ecx,eax
	...
  41918c:	add    BYTE PTR [eax],al
  41918e:	jbe    0x4191d2
  419190:	in     al,0x3
  419192:	call   0x19499e58
  419197:	xchg   edx,eax
  419198:	sbb    al,0xc5
  41919a:	dec    esp
  41919b:	jl     0x41918d
  41919d:	jl     0x4191f9
  41919f:	sub    BYTE PTR [eax-0x13bc1ff8],0x84
  4191a6:	cmp    dl,BYTE PTR [edx]
  4191a8:	sbb    al,0xc5
  4191aa:	sub    al,0x95
  4191ac:	xchg   esi,eax
  4191ad:	inc    edx
  4191ae:	pusha  
  4191af:	add    eax,0xb6077d34
  4191b4:	cmp    BYTE PTR [ebx+0x7ae0c0e9],dh
  4191ba:	scas   eax,DWORD PTR es:[edi]
  4191bb:	stc    
  4191bc:	jae    0x419177
  4191be:	or     al,0xb4
  4191c0:	sbb    BYTE PTR [ebx*2-0x74fc16fb],bl
  4191c7:	xchg   ecx,eax
  4191c8:	sbb    al,0xc5
  4191ca:	in     al,dx
  4191cb:	jns    0x419178
  4191cd:	or     edx,DWORD PTR [ebp+ebx*1+0x563042f]
  4191d4:	mov    edx,0xb80d1f80
  4191d9:	sbb    edi,DWORD PTR [eax*1+0x7c2803e9]
  4191e0:	dec    esp
  4191e1:	mov    cl,0xa2
  4191e3:	std    
  4191e4:	call   0x5037b9b
  4191e9:	cld    
  4191ea:	fnstenv [ecx+0x44dbffcc]
  4191f0:	test   al,0xfe
	...
  419222:	add    BYTE PTR [eax],al
  419224:	(bad)  
  419225:	cld    
  419226:	daa    
  419227:	and    eax,0x7ce27c6c
  41922c:	mov    ds:0x5b55f5c5,eax
  419231:	inc    esp
  419232:	pop    es
  419233:	hlt    
  419234:	imul   edi,ebx,0x7d795fff
  41923a:	shr    BYTE PTR [ecx-0x57f7af93],0x3f
  419241:	dec    BYTE PTR [edx]
  419243:	repz (bad) 
  419246:	mov    BYTE PTR [eax+0x600343e1],bh
  41924c:	mov    eax,ds:0x397f0ec6
  419251:	std    
  419252:	sbb    BYTE PTR [eax-0x59],dh
  419255:	(bad)  
  419256:	push   cs
  419257:	jg     0x419290
  419259:	inc    ebp
  41925a:	loopne 0x41922d
  41925c:	scas   eax,DWORD PTR es:[edi]
  41925d:	cld    
  41925e:	mov    BYTE PTR [eax-0xf4a08e0],ch
  419264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419265:	and    eax,0x7d1ae20f
  41926a:	or     DWORD PTR [eax-0x59],esp
  41926d:	(bad)  
  41926e:	push   cs
  41926f:	aas    
  419270:	pop    es
  419271:	inc    ebp
  419272:	loopne 0x419265
  419274:	stc    
  419275:	sti    
  419276:	push   cs
  419277:	aas    
  419278:	pusha  
  419279:	cld    
  41927a:	shl    BYTE PTR [eax-0x16],0xaa
  41927e:	shl    ecx,0x60
  419281:	mov    dl,0x8a
  419283:	mov    ch,0xc4
  419285:	std    
  419286:	mov    ah,BYTE PTR [ebp+0x0]
	...
  4192b8:	add    BYTE PTR [eax],al
  4192ba:	mov    esp,0x27eb8af9
  4192bf:	push   ds
  4192c0:	pop    ss
  4192c1:	jno    0x419322
  4192c3:	les    ecx,FWORD PTR [edx+0xf1e27eb]
  4192c9:	popa   
  4192ca:	pop    edi
  4192cb:	les    ecx,FWORD PTR [edx+0x71e27eb]
  4192d1:	jno    0x419332
  4192d3:	les    ecx,FWORD PTR [eax-0x308358ce]
  4192d9:	push   0x22
  4192db:	add    cl,BYTE PTR [ebx-0x74fcf717]
  4192e1:	add    BYTE PTR [eax-0x40],bh
  4192e4:	out    0x18,al
  4192e6:	repnz add BYTE PTR [ecx-0x75],al
  4192ea:	mov    al,al
  4192ec:	out    0x10,al
  4192ee:	add    al,BYTE PTR [ecx]
  4192f0:	inc    ecx
  4192f1:	mov    edi,DWORD PTR [eax-0x3e]
  4192f4:	out    0x8,al
  4192f6:	ror    BYTE PTR [eax],cl
  4192f8:	aas    
  4192f9:	mov    ebx,DWORD PTR [eax-0x7f]
  4192fc:	int    0x88
  4192fe:	cmp    ebp,DWORD PTR [esi-0x43c5f741]
  419304:	mov    ch,ah
  419306:	leave  
  419307:	and    eax,0xba545309
  41930c:	mov    al,BYTE PTR [ebp+0xe]
  41930f:	jle    0x419365
  419311:	or     BYTE PTR [ecx+0x124d8af7],dh
  419317:	jle    0x419361
  419319:	add    al,0x83
  41931b:	ss shr bl,0x0
	...
  41934f:	add    BYTE PTR [esi],al
  419351:	fmul   st,st(2)
  419353:	sbb    ecx,0xd0f0f02
  419359:	fcomp  st(0)
  41935b:	mov    esp,ecx
  41935d:	dec    eax
  41935e:	jecxz  0x419364
  419360:	stos   DWORD PTR es:[edi],eax
  419361:	push   ss
  419362:	mov    dh,dl
  419364:	cmp    esp,DWORD PTR [ebx]
  419366:	or     eax,0xf2808c31
  41936b:	sub    DWORD PTR [ecx],0xba00fe12
  419371:	xlat   BYTE PTR ds:[ebx]
  419372:	fmul   DWORD PTR [ecx+0x10e3487c]
  419378:	mov    ebx,0x8bce8816
  41937d:	and    edi,edi
  41937f:	xor    BYTE PTR [eax+eax*4-0xe],dl
  419383:	sbb    DWORD PTR [ecx-0x2a],0xd7b93332
  41938a:	xlat   BYTE PTR ds:[ebx]
  41938b:	mov    DWORD PTR [ebx+0x3c],esp
  41938e:	inc    ecx
  41938f:	in     eax,0x61
  419391:	fst    QWORD PTR [edx]
  419393:	mov    BYTE PTR [ebp+0x32071e2d],dl
  419399:	sbb    al,0x79
  41939b:	repnz loop 0x4193ad
  41939e:	or     edi,edi
  4193a0:	ins    DWORD PTR es:[edi],dx
  4193a1:	out    dx,al
  4193a2:	rcr    cl,cl
  4193a4:	fcmove st,st(4)
  4193a6:	inc    edx
  4193a7:	in     eax,0x6b
  4193a9:	sbb    eax,0xdace883e
  4193ae:	add    dh,dh
  4193b0:	fcom   DWORD PTR [eax+0x10]
  4193b3:	rol    BYTE PTR [eax],0x0
	...
  4193e6:	xor    al,0xeb
  4193e8:	and    dh,0x62
  4193eb:	jne    0x4193ff
  4193ed:	or     BYTE PTR [edx],bh
  4193ef:	xor    esi,DWORD PTR gs:[eax]
  4193f2:	sbb    eax,0x40801065
  4193f7:	pop    eax
  4193f8:	push   edi
  4193f9:	test   eax,0x3027dcc9
  4193fe:	cmp    ch,BYTE PTR [ecx-0x2b]
  419401:	adc    edx,ebx
  419403:	mov    edx,0x6f64ee42
  419408:	and    al,0x0
  41940a:	jmp    0xc31:0x1cf9fa7f
  419411:	pop    es
  419412:	arpl   si,bp
  419414:	add    DWORD PTR [ecx+0x1b232d15],ecx
  41941a:	jmp    0x1065:0x5fee4232
  419421:	or     al,cl
  419423:	fs inc ebx
  419425:	and    BYTE PTR [ebx-0x15e22f0f],0x23
  41942c:	and    ch,0x74
  41942f:	addr16 aad 0xb4
  419432:	mov    bh,0x99
  419434:	ret    0xdbff
  419437:	add    al,0x46
  419439:	inc    edx
  41943a:	lea    ecx,[edx]
  41943c:	push   0xe7049824
  419441:	add    ebx,DWORD PTR [eax-0x44]
  419444:	adc    esi,DWORD PTR [ecx+0x2c700523]
	...
  41947a:	add    BYTE PTR [eax],al
  41947c:	mov    ds:0x7d82edf3,eax
  419481:	add    al,ch
  419483:	add    esp,DWORD PTR [ebx+0x10]
  419486:	ss pop ss
  419488:	adc    al,0x46
  41948a:	out    0x7c,eax
  41948c:	cmp    eax,0xe3f2cec5
  419491:	jmp    0x52e2:0x56304d3
  419498:	push   eax
  419499:	push   esp
  41949a:	sub    BYTE PTR [edx+ebp*8],al
  41949d:	js     0x419452
  41949f:	jge    0x4194bf
  4194a1:	xchg   DWORD PTR [edi-0x5312600],esp
  4194a7:	jmp    0x22ac7887
  4194ac:	pop    ebp
  4194ad:	mov    ss,ebx
  4194af:	push   eax
  4194b0:	adc    BYTE PTR [ecx+0x28],bl
  4194b3:	add    al,0x58
  4194b5:	js     0x41944a
  4194b7:	jge    0x4194de
  4194b9:	lds    edx,FWORD PTR [esi+0x7beae202]
  4194bf:	add    al,0x63
  4194c1:	add    eax,0x56f052e2
  4194c6:	sub    BYTE PTR [edx+ebx*8],al
  4194c9:	loop   0x4194f3
  4194cb:	sbb    ebp,DWORD PTR [esi-0x7c]
  4194ce:	inc    esi
  4194cf:	or     ah,dl
  4194d1:	add    ch,al
  4194d3:	(bad)  
  4194d4:	adc    eax,0xc4c4b8fa
  4194d9:	lea    esp,[esi]
  4194db:	inc    ebp
  4194dc:	int    0x1b
  4194de:	push   0x23
	...
  41950f:	add    BYTE PTR [eax],al
  419511:	add    BYTE PTR [eax+0x60e90005],bh
  419517:	push   cs
  419518:	mov    ch,0x35
  41951a:	call   0x77199564
  41951f:	(bad)  
  419520:	(bad)  
  419521:	sub    BYTE PTR [ecx+0x1e],al
  419524:	xchg   DWORD PTR [esi],edi
  419526:	es repz add al,0x60
  41952a:	ins    BYTE PTR es:[edi],dx
  41952b:	or     eax,0x872170f9
  419530:	shl    ch,0x8d
  419533:	and    BYTE PTR [edi+0x3de8e417],al
  419539:	bound  edx,QWORD PTR [ebx+0x263df4b9]
  41953f:	add    cl,BYTE PTR [ecx+0x6f39fbe]
  419545:	push   0xe900fe81
  41954a:	pusha  
  41954b:	push   cs
  41954c:	mov    ch,0xbd
  41954e:	test   BYTE PTR [eax+eax*1+0x70],0x89
  419553:	(bad)
  419556:	out    0xea,eax
  419558:	cld    
  419559:	jmp    0x5e4a9abe
  41955e:	ins    BYTE PTR es:[edi],dx
  41955f:	push   edx
  419560:	aas    
  419561:	jmp    0x870178fd
  419566:	adc    al,BYTE PTR [ebp+0x5608de5]
  41956c:	add    dl,dh
  41956e:	xchg   ecx,eax
  41956f:	test   BYTE PTR [esi+0x28],0x5f
  419573:	mov    WORD PTR [ebx+0x7d],?
	...
  4195a6:	add    BYTE PTR [eax],al
  4195a8:	outs   dx,DWORD PTR ds:[esi]
  4195a9:	enter  0xa981,0xe4
  4195ad:	mov    ecx,ss
  4195af:	sbb    cl,cl
  4195b1:	mov    esi,ds
  4195b3:	push   0xffffff82
  4195b5:	inc    ebx
  4195b6:	mov    DWORD PTR ds:0xa853f632,ebx
  4195bc:	pusha  
  4195bd:	push   cs
  4195be:	jae    0x4195c0
  4195c0:	jle    0x419543
  4195c2:	faddp  st(1),st
  4195c4:	and    eax,0x76e77f04
  4195c9:	push   es
  4195ca:	add    BYTE PTR [eax],al
  4195cc:	rcl    DWORD PTR [esi-0xf],0x53
  4195d0:	retf   
  4195d1:	add    eax,0x1f4bdf87
  4195d6:	or     eax,DWORD PTR [ecx-0x2f5a3]
  4195dc:	jp     0x4195e0
  4195de:	mov    bh,0xf4
  4195e0:	fcmovne st,st(0)
  4195e2:	std    
  4195e3:	mov    BYTE PTR [ebp+0x49],dl
  4195e6:	out    dx,al
  4195e7:	push   ss
  4195e8:	sti    
  4195e9:	es stc 
  4195eb:	add    BYTE PTR [edx+0x5],bh
  4195ee:	or     DWORD PTR [edi+0x40bf3e],esi
  4195f4:	jnp    0x41960a
  4195f6:	dec    BYTE PTR [ebp+0x32]
  4195f9:	mov    edi,DWORD PTR [eax+edi*8+0x3a]
  4195fd:	inc    BYTE PTR [ebx+ebp*4-0x7601f0dc]
  419604:	repnz inc esp
  419606:	fstp   QWORD PTR [edi]
  419608:	ret    
  419609:	cmp    edx,eax
  41960b:	out    dx,al
	...
  41963c:	add    BYTE PTR [eax],al
  41963e:	ret    
  41963f:	inc    esp
  419640:	or     cl,dh
  419642:	xchg   ebx,eax
  419643:	cmp    DWORD PTR [eax],esi
  419645:	enter  0x4a93,0x80
  419649:	jecxz  0x4195eb
  41964b:	pop    edi
  41964c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41964d:	stos   BYTE PTR es:[edi],al
  41964e:	sub    esi,DWORD PTR [ebx]
  419650:	xor    cl,bl
  419652:	jae    0x41968d
  419654:	shl    al,0x15
  419657:	jl     0x41962c
  419659:	shl    esp,1
  41965b:	jl     0x41961c
  41965d:	or     DWORD PTR [eax+0x7c],ebp
  419660:	int    0xc1
  419662:	xor    al,BYTE PTR [ecx]
  419664:	xor    eax,ecx
  419666:	push   ebx
  419667:	dec    edx
  419668:	and    bl,0x63
  41966b:	push   edi
  41966c:	add    al,0xff
  41966e:	arpl   WORD PTR ds:0x2d9b8829,bx
  419674:	and    al,0x7
  419676:	jb     0x4196a4
  419678:	jns    0x419649
  41967a:	mov    ds:0x9b310646,al
  41967f:	gs inc ebx
  419681:	add    BYTE PTR [eax+0x5032d4db],0xdd
  419688:	sub    cl,BYTE PTR [eax+0x1242dab]
  41968e:	push   edx
  41968f:	sub    al,0x79
  419691:	(bad)  
  419692:	mov    ds:0x9330f416,al
  419697:	jne    0x4196dc
  419699:	add    BYTE PTR [eax+0x64ff08f7],0xbd
  4196a0:	sub    ecx,DWORD PTR [eax+0x0]
	...
  4196d2:	add    BYTE PTR [eax],al
  4196d4:	cmp    ebp,DWORD PTR [ebp-0x526df0df]
  4196da:	jp     0x4196a3
  4196dc:	and    al,dh
  4196de:	std    
  4196df:	xor    BYTE PTR [ebx],dh
  4196e1:	gs inc esp
  4196e3:	add    BYTE PTR [eax-0x9],0xf8
  4196e7:	push   cs
  4196e8:	fs std 
  4196ea:	sub    ecx,DWORD PTR [edx-0x1dbd195a]
  4196f0:	pop    edi
  4196f1:	std    
  4196f2:	cmp    al,0x88
  4196f4:	jnp    0x419761
  4196f6:	mov    esi,0xbe735f07
  4196fb:	pop    es
  4196fc:	(bad)  
  4196fe:	test   al,0x5d
  419700:	test   al,0x65
  419702:	adc    eax,0x1f6215c
  419707:	push   ebx
  419708:	lea    esi,[ebx-0x5b]
  41970b:	and    ebx,DWORD PTR [edi+0x10]
  41970e:	jnp    0x419783
  419710:	aas    
  419711:	ficomp WORD PTR [edi-0x9fb2a7c]
  419717:	outs   dx,DWORD PTR ds:[esi]
  419718:	mov    bl,0xf
  41971a:	xchg   ebp,eax
  41971b:	inc    edx
  41971c:	pop    ebp
  41971d:	mov    eax,0x43d7b327
  419722:	fbstp  TBYTE PTR [ebx+0x84159c4]
  419728:	mov    ch,0x6c
  41972a:	xor    esi,DWORD PTR [edi-0x3c0fadd]
  419730:	test   al,0xff
  419732:	cs clc 
  419734:	aad    0xf6
  419736:	mov    ebp,0xb4
	...
  419767:	add    BYTE PTR [eax],al
  419769:	add    BYTE PTR [ebp+eax*2+0x21],bh
  41976d:	or     BYTE PTR [ebp+0x23b69b6c],cl
  419773:	add    eax,0xff790fff
  419778:	push   es
  419779:	test   eax,0x3efc319
  41977e:	push   ss
  41977f:	mov    cs,WORD PTR [ebx+esi*4]
  419782:	adc    al,0x54
  419784:	bound  edi,QWORD PTR [esi-0x7bb759c]
  41978a:	out    0x58,eax
  41978c:	fbstp  TBYTE PTR [edx+0x824ed9c]
  419792:	inc    ebp
  419793:	(bad)  
  419794:	aas    
  419795:	nop
  419796:	test   al,0x44
  419798:	out    0x78,eax
  41979a:	lahf   
  41979b:	std    
  41979c:	pop    ss
  41979d:	sbb    al,0x35
  41979f:	add    dh,BYTE PTR [edi+0x1bf9bc07]
  4197a5:	lds    ebx,FWORD PTR [edx+edx*4]
  4197a8:	sub    al,0xc
  4197aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197ab:	in     eax,dx
  4197ac:	nop
  4197ad:	or     BYTE PTR ds:0x978fffff,cl
  4197b3:	inc    esp
  4197b4:	out    0x78,eax
  4197b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197b7:	std    
  4197b8:	pop    ss
  4197b9:	sbb    al,0x19
  4197bb:	add    bh,BYTE PTR [edi+0x7]
  4197be:	xchg   ecx,eax
  4197bf:	nop
  4197c0:	add    BYTE PTR [edi+edx*2],ch
  4197c3:	dec    esi
  4197c4:	call   0xfe410334
  4197c9:	ret    0xea57
  4197cc:	pop    ebx
  4197cd:	sub    eax,DWORD PTR [eax]
	...
  4197ff:	add    bh,cl
  419801:	(bad)  
  419802:	push   esp
  419803:	pusha  
  419804:	add    BYTE PTR [ebx+0x58f1f9ec],0x89
  41980b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41980c:	mov    eax,0x2bed738b
  419811:	dec    ecx
  419812:	clc    
  419813:	cdq    
  419814:	icebp  
  419815:	out    0xfa,al
  419817:	xor    ah,BYTE PTR [edi+edi*8-0x75]
  41981b:	lods   al,BYTE PTR ds:[esi]
  41981c:	jo     0x41986c
  41981e:	sub    DWORD PTR [edx],0x4e8538f
  419824:	pop    eax
  419825:	(bad)  
  419826:	std    
  419827:	sub    esp,0xfbe93f4a
  41982d:	dec    eax
  41982e:	clc    
  41982f:	cdq    
  419830:	dec    eax
  419831:	xchg   edi,eax
  419832:	cld    
  419833:	neg    BYTE PTR [ebp+0x66]
  419836:	je     0x4197d5
  419838:	daa    
  419839:	dec    BYTE PTR [esp+ebp*1+0x70e84e6f]
  419840:	fs (bad) 
  419842:	std    
  419843:	(bad)  
  419844:	sti    
  419845:	stc    
  419846:	mov    DWORD PTR [edi+edx*2],esp
  419849:	lea    eax,[ebx-0x3b]
  41984c:	mov    bh,0x61
  41984e:	lock push ecx
  419850:	push   ebx
  419851:	dec    edx
  419852:	aas    
  419853:	jmp    0x1a39e203
  419858:	jg     0x4198c9
  41985a:	cld    
  41985b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41985c:	pop    ebp
  41985d:	data16 hlt 
  41985f:	sub    eax,0x2c8cfe26
	...
  419894:	add    BYTE PTR [eax],al
  419896:	outs   dx,DWORD PTR ds:[esi]
  419897:	dec    esi
  419898:	call   0xfe4103a5
  41989d:	add    BYTE PTR [ecx-0x53],dh
  4198a0:	stc    
  4198a1:	mov    eax,DWORD PTR [edi+0x19]
  4198a4:	mov    BYTE PTR [ebp+0x6e],al
  4198a7:	sbb    DWORD PTR [eax+esi*8+0x62],0xca414c95
  4198af:	jl     0x4198f5
  4198b1:	clc    
  4198b2:	or     bl,BYTE PTR [edx]
  4198b4:	inc    esi
  4198b5:	cld    
  4198b6:	sub    eax,0xdf746507
  4198bb:	enter  0x8cfd,0x7
  4198bf:	adc    cl,BYTE PTR [ebp-0x18]
  4198c2:	arpl   WORD PTR ds:0x7cc4fffe,cx
  4198c8:	inc    esp
  4198c9:	clc    
  4198ca:	cli    
  4198cb:	sbb    ebp,ebx
  4198cd:	sti    
  4198ce:	cmp    eax,0x92c68207
  4198d3:	scas   eax,DWORD PTR es:[edi]
  4198d4:	mov    WORD PTR [ebp+0x6a],es
  4198d7:	mov    dl,0xe5
  4198d9:	rcl    DWORD PTR [ecx+0x7],cl
  4198dc:	(bad)  
  4198dd:	pop    esi
  4198de:	rol    DWORD PTR [eax-0x5c7a217],0xfd
  4198e5:	push   esp
  4198e6:	add    esp,DWORD PTR ds:0x1beec80
  4198ec:	add    BYTE PTR [eax],al
  4198ee:	cdq    
  4198ef:	stos   DWORD PTR es:[edi],eax
  4198f0:	push   esi
  4198f1:	mov    ecx,DWORD PTR [edi+0x3e758af9]
  4198f7:	je     0x41987d
  4198f9:	add    BYTE PTR [eax],0x0
	...
  41992c:	sub    al,0x3
  41992e:	(bad)  
  41992f:	push   eax
  419930:	adc    al,BYTE PTR [ebp+0x0]
  419933:	add    BYTE PTR [edx],bh
  419935:	lahf   
  419936:	std    
  419937:	addr16 out 0xb4,al
  41993a:	inc    eax
  41993b:	add    BYTE PTR [edx],ah
  41993d:	jns    0x41993a
  41993f:	(bad)  
  419940:	mov    ebp,0x788acfd8
  419945:	adc    eax,0xee63414c
  41994a:	jns    0x41994f
  41994c:	xor    DWORD PTR [eax],esi
  41994e:	jg     0x419949
  419950:	imul   eax,DWORD PTR [edx],0x11
  419953:	(bad)  
  419954:	out    0x6,al
  419956:	push   es
  419957:	(bad)  
  419958:	in     al,0xed
  41995a:	add    DWORD PTR [eax],eax
  41995c:	arpl   WORD PTR [edi+0x75d388b0],ax
  419962:	jge    0x4199d7
  419964:	int    0x5b
  419966:	add    esi,DWORD PTR [eax]
  419968:	mov    cl,0x47
  41996a:	aam    0x8a
  41996c:	out    0xd2,al
  41996e:	add    edi,esi
  419970:	mov    ah,0x75
  419972:	jge    0x4199ef
  419974:	lods   eax,DWORD PTR ds:[esi]
  419975:	cmp    eax,DWORD PTR [ebx]
  419977:	(bad)  
  419978:	fidivr WORD PTR [edx+0x679cfe03]
  41997e:	jne    0x4199fb
  419980:	xchg   ebp,eax
  419981:	and    eax,DWORD PTR [ebx]
  419983:	push   cs
  419984:	int    0xef
  419986:	sbb    bh,0x4
  419989:	addr16 inc ebp
  41998b:	jnp    0x419a0a
  41998d:	or     eax,DWORD PTR [ebx]
  41998f:	push   cs
	...
  4199c0:	add    BYTE PTR [eax],al
  4199c2:	lods   eax,DWORD PTR ds:[esi]
  4199c3:	ret    
  4199c4:	shl    bh,cl
  4199c6:	fucomi st,st(5)
  4199c8:	cmp    eax,DWORD PTR [edx]
  4199ca:	arpl   WORD PTR [edi-0x19a67d41],bp
  4199d0:	xchg   BYTE PTR [ebx+eiz*8],al
  4199d3:	es add al,0x75
  4199d6:	and    eax,0xb8e7ae34
  4199db:	aam    0x4
  4199dd:	(bad)  
  4199de:	loopne 0x419960
  4199e0:	mov    ebp,edi
  4199e2:	xor    al,0xc3
  4199e4:	add    DWORD PTR [eax-0x59711198],eax
  4199ea:	loopne 0x419a5c
  4199ec:	mov    ebp,edi
  4199ee:	sbb    al,0xab
  4199f0:	add    DWORD PTR [ebp-0xb],esi
  4199f3:	add    al,0x74
  4199f5:	jle    0x419983
  4199f7:	sti    
  4199f8:	sahf   
  4199f9:	add    al,0x94
  4199fb:	in     eax,dx
  4199fc:	push   cs
  4199fd:	add    esp,DWORD PTR [ebx+0x5]
  419a00:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  419a02:	cdq    
  419a03:	mov    ss,WORD PTR [ebx-0x18f2dd5a]
  419a09:	scas   al,BYTE PTR es:[edi]
  419a0a:	fndisi(8087 only) 
  419a0c:	push   0xe705e817
  419a11:	add    esi,DWORD PTR [eax]
  419a13:	push   ebx
  419a14:	mov    esi,0x720d2f78
  419a19:	mov    ds,WORD PTR [eax-0x76]
  419a1c:	ins    BYTE PTR es:[edi],dx
  419a1d:	cmp    DWORD PTR [esi-0x434cb105],0xfffffffb
  419a24:	out    0x3,eax
	...
  419a56:	add    BYTE PTR [eax],al
  419a58:	arpl   WORD PTR [edi-0x19],bp
  419a5b:	fwait
  419a5c:	mov    al,0x49
  419a5e:	test   al,0x3
  419a60:	mov    edx,edi
  419a62:	sub    al,0x4
  419a64:	xchg   ebp,eax
  419a65:	xor    eax,0xf0e27939
  419a6a:	lods   al,BYTE PTR ds:[esi]
  419a6b:	ret    0x8384
  419a6e:	jmp    0x419a41
  419a70:	and    cl,BYTE PTR [eax-0xa070cef]
  419a76:	cs jle 0x419a6d
  419a79:	cli    
  419a7a:	inc    BYTE PTR [ebx]
  419a7c:	arpl   WORD PTR ds:0x524803e7,ax
  419a82:	pusha  
  419a83:	adc    ebp,ebx
  419a85:	sbb    BYTE PTR [ebx+0x2],0x4d
  419a89:	sti    
  419a8a:	sbb    dh,dl
  419a8c:	cmp    dh,BYTE PTR [esi]
  419a8e:	bound  ecx,QWORD PTR [ecx+0x3cefbb7]
  419a94:	jmp    0x419a16
  419a96:	inc    ebx
  419a97:	add    ch,BYTE PTR ds:0xaf89befb
  419a9d:	sti    
  419a9e:	add    BYTE PTR [esi+0x2d8b8f60],dh
  419aa4:	popa   
  419aa5:	sti    
  419aa6:	std    
  419aa7:	mul    BYTE PTR [edx]
  419aa9:	add    eax,0x8ce08981
  419aae:	mov    ebx,0xfdfb6115
  419ab3:	fidivr WORD PTR [edx-0x207ed0c8]
  419ab9:	cli    
  419aba:	ret    
  419abb:	jmp    0x0:0x0
	...
  419aee:	pusha  
  419aef:	inc    esp
  419af0:	inc    edx
  419af1:	push   0xffffffdd
  419af3:	adc    eax,0x3ce0e47b
  419af8:	add    ah,bl
  419afa:	call   0xfdf9:0x61515653
  419b01:	push   esi
  419b02:	in     al,0xa6
  419b04:	js     0x419b55
  419b06:	pusha  
  419b07:	sti    
  419b08:	add    BYTE PTR [ecx+0x6c],ch
  419b0b:	add    eax,0xbedc8673
  419b10:	js     0x419b49
  419b12:	pusha  
  419b13:	sti    
  419b14:	add    BYTE PTR [edx+eax*8+0x6169838e],dh
  419b1b:	sti    
  419b1c:	std    
  419b1d:	mov    ecx,0xe900a278
  419b22:	pusha  
  419b23:	pop    eax
  419b24:	pop    esi
  419b25:	mov    dl,0xe7
  419b27:	jmp    0x5a0c687
  419b2c:	push   ecx
  419b2d:	xchg   edi,eax
  419b2e:	or     DWORD PTR [esp+eax*2-0x769c8f33],ecx
  419b35:	lea    edi,[ecx+edx*1+0x66]
  419b39:	ins    BYTE PTR es:[edi],dx
  419b3a:	sub    eax,0x1a700976
  419b3f:	mov    ?,WORD PTR [eax-0x7]
  419b42:	retf   0xffbf
  419b45:	call   0xcca88f
  419b4a:	push   0x11
  419b4c:	test   edi,eax
  419b4e:	pushf  
  419b4f:	xor    dl,dl
  419b51:	sldt   WORD PTR [eax]
	...
  419b84:	popf   
  419b85:	rcl    BYTE PTR [edx-0x7d],1
  419b88:	retf   0x500d
  419b8b:	call   0x3d9b0e
  419b90:	jb     0x419b8f
  419b92:	dec    esp
  419b93:	inc    ecx
  419b94:	or     ch,dh
  419b96:	cmp    bh,cl
  419b98:	in     eax,0x6
  419b9a:	push   cs
  419b9b:	mov    bh,0xc1
  419b9d:	push   edx
  419b9e:	push   ebx
  419b9f:	call   0x3d9a8e
  419ba4:	bound  edi,QWORD PTR [ebp+0x49]
  419ba7:	inc    ecx
  419ba8:	retf   0x26ed
  419bab:	stc    
  419bac:	inc    ebp
  419bad:	pop    es
  419bae:	push   cs
  419baf:	mov    bh,0x21
  419bb1:	push   ebx
  419bb2:	push   esi
  419bb3:	call   0x3d9aae
  419bb8:	add    eax,0xb2c25764
  419bbd:	add    eax,0x21c68b4f
  419bc2:	or     BYTE PTR [ebx+0x22],dl
  419bc5:	or     esi,ebp
  419bc7:	inc    DWORD PTR [ebp-0x7f]
  419bca:	mov    edi,0x57a80
  419bcf:	mov    eax,0x3d4a6e
  419bd4:	add    DWORD PTR [esi],edx
  419bd6:	test   DWORD PTR [ebx],edx
  419bd8:	or     esi,eax
  419bda:	add    al,0x83
  419bdc:	cmp    DWORD PTR [edx],eax
  419bde:	cmp    DWORD PTR [edi+esi*4+0x40],esi
  419be2:	add    BYTE PTR [edx+0x65],dh
  419be5:	mov    esp,0x4d74
	...
  419c1a:	or     eax,DWORD PTR ds:0x12d31087
  419c20:	jg     0x419be2
  419c22:	cmp    BYTE PTR ds:[edi-0x7ee9cfc],0x4b
  419c2a:	mov    ds:0x88ed73ee,al
  419c2f:	lods   al,BYTE PTR ds:[esi]
  419c30:	or     BYTE PTR [eax],al
  419c32:	nop
  419c33:	jae    0x419c95
  419c35:	and    al,0x6b
  419c37:	sbb    ebp,esp
  419c39:	call   0x80414459
  419c3e:	and    BYTE PTR [edi+0x4],ch
  419c41:	add    BYTE PTR [ebx+0x66],ah
  419c44:	clc    
  419c45:	dec    esp
  419c46:	mov    ds:0xea118cee,al
  419c4b:	inc    BYTE PTR [ecx+eax*8+0x4c46b67]
  419c52:	es repnz dec esi
  419c55:	aas    
  419c56:	arpl   sp,di
  419c58:	lock mov eax,0x41194f
  419c5e:	fdivr  st,st(3)
  419c60:	mov    dl,BYTE PTR [eax]
  419c62:	loopne 0x419c8f
  419c64:	or     BYTE PTR [ecx-0xbc1155d],al
  419c6a:	lods   eax,DWORD PTR es:[esi]
  419c6c:	add    DWORD PTR [edx-0x44],esi
  419c6f:	mov    ds:0x916304c3,eax
  419c74:	mov    ah,bl
  419c76:	loopne 0x419cba
  419c78:	sbb    al,0x51
  419c7a:	sub    eax,0x85d63
	...
  419caf:	add    al,bl
  419cb1:	cdq    
  419cb2:	or     eax,0x54261e8b
  419cb7:	push   ecx
  419cb8:	mov    eax,DWORD PTR [ecx]
  419cba:	cld    
  419cbb:	std    
  419cbc:	je     0x419d17
  419cbe:	inc    ebp
  419cbf:	lock adc esi,DWORD PTR [ecx+0x43]
  419cc3:	or     BYTE PTR [ebx],dl
  419cc5:	push   ss
  419cc6:	in     al,0xf8
  419cc8:	pop    esp
  419cc9:	out    dx,eax
  419cca:	mov    es,WORD PTR [ebx+0x4b]
  419ccd:	sahf   
  419cce:	test   cl,al
  419cd0:	jae    0x419cd7
  419cd2:	cmp    ch,ah
  419cd4:	xor    bh,ch
  419cd6:	fiadd  WORD PTR [eax]
  419cd8:	retf   0x2371
  419cdb:	inc    ebx
  419cdc:	arpl   WORD PTR [edx-0x126c03dc],cx
  419ce2:	inc    esp
  419ce3:	sti    
  419ce4:	es clc 
  419ce6:	dec    edi
  419ce7:	js     0x419c98
  419ce9:	inc    esi
  419cea:	out    0x8e,eax
  419cec:	mov    al,ds:0x7eec17f5
  419cf1:	(bad)  
  419cf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cf3:	add    BYTE PTR [edx+0x71],bh
  419cf6:	sub    eax,DWORD PTR [ebx+0x63]
  419cf9:	mov    ch,BYTE PTR [esp+ebp*8]
  419cfc:	xchg   ebx,eax
  419cfd:	in     eax,dx
  419cfe:	or     bl,bh
  419d00:	out    dx,al
  419d01:	div    DWORD PTR [edx+0x5e]
  419d04:	out    0x8b,eax
  419d06:	and    al,0xf4
  419d08:	in     al,0x41
  419d0a:	jae    0x419c96
  419d0c:	cmp    ch,dh
  419d0e:	bound  ebx,QWORD PTR [esi-0x29]
  419d11:	mov    ebp,DWORD PTR [ebx+ebp*8+0x0]
	...
  419d44:	add    BYTE PTR [eax],al
  419d46:	fadd   QWORD PTR [ecx+0x53]
  419d49:	mov    bl,BYTE PTR [eax]
  419d4b:	in     eax,dx
  419d4c:	mov    edi,0xe74627f7
  419d51:	mov    fs,WORD PTR [eax]
  419d53:	std    
  419d54:	xchg   edi,eax
  419d55:	jmp    0x419dc1
  419d57:	(bad)  
  419d58:	add    BYTE PTR ds:[edx],cl
  419d5b:	icebp  
  419d5c:	mov    ds:0xa48a6342,eax
  419d61:	repz xor ebp,ebp
  419d64:	aam    0xfa
  419d66:	xchg   bh,dh
  419d68:	(bad)  
  419d69:	imul   DWORD PTR [edi]
  419d6b:	inc    esi
  419d6c:	out    0x8e,eax
  419d6e:	and    ch,ch
  419d70:	mov    bh,0xeb
  419d72:	dec    esi
  419d73:	inc    BYTE PTR [esi]
  419d75:	add    cl,bl
  419d77:	pop    ecx
  419d78:	sti    
  419d79:	mov    esp,DWORD PTR [eax-0x629fff0b]
  419d7f:	stc    
  419d80:	xchg   DWORD PTR [eax+edx*2-0x2722a473],ecx
  419d87:	inc    edx
  419d88:	call   0x883347fd
  419d8d:	xor    al,0x47
  419d8f:	outs   dx,BYTE PTR ds:[esi]
  419d90:	je     0x419dae
  419d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d93:	add    eax,0x56272c8b
  419d98:	call   0xfe3abd5d
  419d9d:	inc    ecx
  419d9e:	fwait
  419d9f:	dec    edx
  419da0:	aas    
  419da1:	jmp    0x3a31e099
  419da6:	imul   esp
  419da8:	clc    
  419da9:	sahf   
	...
  419dda:	add    BYTE PTR [eax],al
  419ddc:	cld    
  419ddd:	ins    DWORD PTR es:[edi],dx
  419dde:	je     0x419e04
  419de0:	sahf   
  419de1:	add    eax,0x55ff248b
  419de6:	call   0xfe3a858f
  419deb:	pop    ss
  419dec:	repnz inc edx
  419dee:	clc    
  419def:	sbb    edi,eax
  419df1:	cmp    eax,0x468acc6e
  419df7:	icebp  
  419df8:	xor    BYTE PTR [edx-0x12e8a6bd],cl
  419dfe:	jne    0x419e51
  419e00:	mov    ah,0xf8
  419e02:	and    DWORD PTR [edi],0xac8b4f57
  419e08:	mov    eax,0x98d3e855
  419e0d:	clc    
  419e0e:	std    
  419e0f:	xchg   edi,eax
  419e10:	cmp    DWORD PTR [esi-0x14],edi
  419e13:	mov    WORD PTR [edx-0x2843fff3],fs
  419e19:	loop   0x419e9a
  419e1b:	or     eax,0xe9fdf6d3
  419e20:	adc    DWORD PTR [edi+0x55],ecx
  419e23:	bound  eax,QWORD PTR [edx]
  419e25:	or     eax,0x5e70089
  419e2a:	mov    DWORD PTR [ebp-0x40836],eax
  419e30:	cli    
  419e31:	jmp    0xf77f9c8a
  419e36:	push   0x0
  419e38:	mov    dl,0xfd
  419e3a:	dec    ecx
  419e3b:	inc    ecx
  419e3c:	dec    edx
  419e3d:	jmp    0x0:0xfde5
	...
  419e70:	add    BYTE PTR [eax],al
  419e72:	or     eax,0xc0d22df7
  419e77:	test   ah,dh
  419e79:	dec    ebp
  419e7a:	jnp    0x419e7d
  419e7c:	mov    BYTE PTR [eax+ebx*1],al
  419e7f:	inc    esp
  419e80:	jg     0x419e7c
  419e82:	xor    dh,BYTE PTR [esi-0x13]
  419e85:	mov    DWORD PTR [edi-0x42000186],0xa000000
  419e8f:	jmp    0x419ee5
  419e91:	mov    edx,ebx
  419e93:	mov    BYTE PTR [ecx-0x409238c],al
  419e99:	xor    eax,ecx
  419e9b:	jmp    0xfffe:0x6e478b30
  419ea2:	dec    ebp
  419ea3:	mov    DWORD PTR [ecx-0x408c384],eax
  419ea9:	push   DWORD PTR [edi]
  419eab:	outs   dx,BYTE PTR ds:[esi]
  419eac:	(bad)  
  419ead:	call   FWORD PTR ds:0xc7c898b
  419eb3:	idiv   ebx
  419eb5:	paddusb mm0,QWORD PTR [edx]
  419eb8:	jg     0x419e9a
  419eba:	popf   
  419ebb:	mov    bh,BYTE PTR [ecx-0x408a384]
  419ec1:	unpcklps xmm6,XMMWORD PTR [edi]
  419ec4:	sub    eax,0xc60102f8
  419ec9:	add    edi,DWORD PTR [edx+0x42]
  419ecc:	inc    edx
  419ecd:	add    DWORD PTR [eax+0x1a],0x79
  419ed1:	add    eax,0x3a6c63
	...
  419f06:	add    BYTE PTR [eax],al
  419f08:	neg    BYTE PTR ds:0x8b7b5653
  419f0e:	sti    
  419f0f:	std    
  419f10:	pop    esp
  419f11:	pusha  
  419f12:	test   al,0x78
  419f14:	push   ebp
  419f15:	cld    
  419f16:	sti    
  419f17:	add    bl,ah
  419f19:	mov    bh,0x1
  419f1b:	jae    0x419f19
  419f1d:	pop    edi
  419f1e:	mov    ebp,0xfbd43d78
  419f23:	add    BYTE PTR [esi-0x1c7c7284],ch
  419f29:	(bad)  
  419f2a:	sti    
  419f2b:	std    
  419f2c:	xchg   ebx,eax
  419f2d:	(bad)  
  419f2e:	(bad)  
  419f2f:	sti    
  419f30:	sbb    al,0xb4
  419f32:	pop    ebx
  419f33:	pop    esi
  419f34:	mov    eax,0x215bf065
  419f39:	out    0x1,eax
  419f3b:	push   ebx
  419f3c:	fiadd  DWORD PTR [ecx+0x3c905054]
  419f42:	xchg   DWORD PTR [ebx+0x6b],edx
  419f45:	addr16 pop ebp
  419f47:	or     al,0xd8
  419f49:	sbb    DWORD PTR [edi+ebp*1],edx
  419f4c:	sbb    bh,BYTE PTR [ecx+0x8]
  419f4f:	por    mm5,QWORD PTR [edx]
  419f52:	or     eax,0x12e2e9f8
  419f57:	mov    BYTE PTR [edi-0x2b],ah
  419f5a:	inc    edx
  419f5b:	or     edx,0x10eb7df6
  419f61:	mov    al,0xe9
  419f63:	lods   al,BYTE PTR ds:[esi]
  419f64:	mov    ecx,0x912ffb5b
  419f69:	push   ecx
  419f6a:	adc    BYTE PTR [edx],bl
	...
  419f9c:	add    BYTE PTR [eax],al
  419f9e:	(bad)  
  419fa0:	das    
  419fa1:	xor    ah,BYTE PTR [edx+0x76]
  419fa4:	add    DWORD PTR [edx-0x20],eax
  419fa7:	cmp    BYTE PTR [esp+edi*2],cl
  419faa:	xchg   ebx,eax
  419fab:	in     eax,dx
  419fac:	iret   
  419fad:	mov    bl,BYTE PTR [edi]
  419faf:	add    eax,0x9ebfbfc
  419fb4:	fld    DWORD PTR [ecx-0x1e]
  419fb7:	out    dx,eax
  419fb8:	fistp  QWORD PTR [edi+0x72]
  419fbb:	push   ebx
  419fbc:	mov    dl,0x8a
  419fbe:	ja     0x41a012
  419fc0:	sub    DWORD PTR [eax],edx
  419fc2:	arpl   WORD PTR ds:0x56303e7,ax
  419fc8:	out    0x3,eax
  419fca:	arpl   WORD PTR ds:0x56303e7,ax
  419fd0:	out    0x3,eax
  419fd2:	arpl   WORD PTR ds:0x56303e7,ax
  419fd8:	out    0x3,eax
  419fda:	arpl   WORD PTR ds:0x56303e7,ax
  419fe0:	out    0x3,eax
  419fe2:	arpl   WORD PTR ds:0x56303e7,ax
  419fe8:	out    0x3,eax
  419fea:	arpl   WORD PTR ds:0x56303e7,ax
  419ff0:	out    0x3,eax
  419ff2:	arpl   WORD PTR ds:0x56303e7,ax
  419ff8:	out    0x3,eax
  419ffa:	arpl   WORD PTR ds:0x56303e7,ax
  41a000:	out    0x3,eax
	...
  41a032:	add    BYTE PTR [eax],al
  41a034:	arpl   WORD PTR ds:0x56303e7,ax
  41a03a:	out    0x3,eax
  41a03c:	arpl   WORD PTR ds:0x56303e7,ax
  41a042:	out    0x3,eax
  41a044:	arpl   WORD PTR ds:0x56303e7,ax
  41a04a:	out    0x3,eax
  41a04c:	arpl   WORD PTR ds:0x56303e7,ax
  41a052:	out    0x3,eax
  41a054:	arpl   WORD PTR ds:0x56303e7,ax
  41a05a:	add    cl,ch
  41a05c:	pusha  
  41a05d:	add    eax,0x560e900
  41a062:	add    cl,ch
  41a064:	pusha  
  41a065:	add    eax,0x560e900
  41a06a:	add    ah,ah
  41a06c:	pop    edx
  41a06d:	add    BYTE PTR [edx],cl
  41a06f:	mov    BYTE PTR [eax],dl
  41a071:	inc    ecx
  41a072:	mov    eax,DWORD PTR [bx+si+0x2f7b]
  41a077:	iret   
  41a078:	nop
  41a079:	and    ah,BYTE PTR [eax]
  41a07b:	leave  
  41a07c:	jge    0x41a0a3
  41a07e:	and    BYTE PTR [ebp-0x48],dh
  41a081:	data16 and BYTE PTR [edx-0x36],bl
  41a085:	push   edx
  41a086:	ins    BYTE PTR es:[edi],dx
  41a087:	dec    ebp
  41a088:	ret    0x2077
  41a08b:	pop    ebp
  41a08c:	mov    edi,0xc24b2066
  41a091:	jns    0x41a107
  41a093:	dec    esp
  41a094:	xchg   ebp,eax
  41a095:	and    eax,0x103a
	...
  41a0ca:	push   0xffffffff
  41a0cc:	inc    eax
  41a0cd:	inc    esi
  41a0ce:	xchg   edi,eax
  41a0cf:	jp     0x41a143
  41a0d1:	inc    eax
  41a0d2:	sbb    BYTE PTR [ebp+0x74],0xc9
  41a0d6:	dec    eax
  41a0d7:	fs daa 
  41a0d9:	leave  
  41a0da:	das    
  41a0db:	cmp    dh,BYTE PTR [edi]
  41a0dd:	sar    DWORD PTR [ebx],1
  41a0df:	aaa    
  41a0e0:	xor    cl,bl
  41a0e2:	daa    
  41a0e3:	and    eax,0x3f870062
  41a0e8:	ins    DWORD PTR es:[edi],dx
  41a0e9:	add    al,0x4d
  41a0eb:	push   0x4a870763
  41a0f0:	(bad)  
  41a0f1:	cli    
  41a0f2:	inc    ebx
  41a0f3:	arpl   WORD PTR [ecx+ecx*1],bp
  41a0f6:	es popa 
  41a0f8:	ins    BYTE PTR es:[edi],dx
  41a0f9:	or     DWORD PTR ds:0x3cc1656a,ecx
  41a0ff:	je     0x41a121
  41a101:	mov    ebx,0x637443
  41a106:	fdiv   DWORD PTR [ecx+eiz*2+0x64]
  41a10a:	fs cld 
  41a10c:	or     DWORD PTR ds:0x726b3d80,ecx
  41a112:	lahf   
  41a113:	es outs dx,BYTE PTR gs:[esi]
  41a116:	in     al,dx
  41a117:	pop    edi
  41a118:	jb     0x41a187
  41a11a:	jmp    0x41a17e
  41a11c:	outs   dx,DWORD PTR gs:[esi]
  41a11e:	in     al,0x30
  41a120:	and    BYTE PTR [eax-0x32],ch
  41a123:	bound  esi,QWORD PTR [eax+0x3a]
  41a126:	xor    eax,0xcd77731f
  41a12b:	sbb    al,0x65
  41a12d:	bound  eax,QWORD PTR [eax]
	...
  41a15f:	add    cl,cl
  41a161:	outs   dx,BYTE PTR gs:[esi]
  41a163:	jae    0x41a12a
  41a165:	fs je  0x41a1df
  41a168:	stos   DWORD PTR es:[edi],eax
  41a169:	jnp    0x41a1cc
  41a16b:	cs test eax,0x472f695e
  41a171:	add    BYTE PTR [ecx],cl
  41a173:	or     bh,BYTE PTR [edx]
  41a175:	push   es
  41a176:	add    BYTE PTR [eax],al
  41a178:	or     al,BYTE PTR [esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	or     al,BYTE PTR [esi]
  41a17e:	add    BYTE PTR [eax],al
  41a180:	cli    
  41a181:	add    eax,0x5fa0000
  41a186:	add    BYTE PTR [eax],al
  41a188:	or     al,BYTE PTR [esi]
  41a18a:	add    BYTE PTR [eax],al
  41a18c:	or     al,BYTE PTR [esi]
  41a18e:	add    BYTE PTR [eax],al
  41a190:	cli    
  41a191:	add    eax,0x5fa0000
  41a196:	add    BYTE PTR [eax],al
  41a198:	retf   0x5
  41a19b:	add    dl,cl
  41a19d:	add    eax,0x5ba0000
  41a1a2:	add    BYTE PTR [eax],al
  41a1a4:	mov    edx,0xca000005
  41a1a9:	add    eax,0x5ca0000
  41a1ae:	add    BYTE PTR [eax],al
  41a1b0:	arpl   WORD PTR [ecx+0x1d384eb2],bx
  41a1b6:	and    BYTE PTR [ebx],ch
  41a1b8:	addr16 xor cl,bh
  41a1bb:	push   esp
  41a1bc:	xchg   DWORD PTR [eax],edx
  41a1be:	mov    ds:0x80cb3e62,eax
  41a1c3:	or     DWORD PTR [eax],eax
	...
  41a1f5:	add    BYTE PTR [ecx+esi*8],ch
  41a1f8:	or     ecx,DWORD PTR [eax]
  41a1fa:	push   edx
  41a1fb:	mov    al,ds:0xb37f680a
  41a200:	jnp    0x41a253
  41a202:	fstp   st(3)
  41a204:	add    DWORD PTR [eax],eax
  41a206:	arpl   sp,bx
  41a208:	add    DWORD PTR [eax],eax
  41a20a:	arpl   si,bx
  41a20c:	add    DWORD PTR [eax],eax
  41a20e:	arpl   si,bx
  41a210:	add    DWORD PTR [eax],eax
  41a212:	arpl   si,bx
  41a214:	add    DWORD PTR [eax],eax
  41a216:	arpl   si,bx
  41a218:	add    DWORD PTR [eax],eax
  41a21a:	arpl   si,bx
  41a21c:	add    DWORD PTR [eax],eax
  41a21e:	arpl   si,bx
  41a220:	add    DWORD PTR [eax],eax
  41a222:	arpl   si,bx
  41a224:	add    DWORD PTR [eax],eax
  41a226:	arpl   si,bx
  41a228:	add    DWORD PTR [eax],eax
  41a22a:	arpl   si,bx
  41a22c:	add    DWORD PTR [eax],eax
  41a22e:	arpl   si,bx
  41a230:	add    DWORD PTR [eax],eax
  41a232:	arpl   si,bx
  41a234:	add    DWORD PTR [eax],eax
  41a236:	arpl   si,bx
  41a238:	add    DWORD PTR [eax],eax
  41a23a:	arpl   si,bx
  41a23c:	add    DWORD PTR [eax],eax
  41a23e:	arpl   si,bx
  41a240:	add    DWORD PTR [eax],eax
  41a242:	arpl   si,bx
  41a244:	add    DWORD PTR [eax],eax
  41a246:	arpl   si,bx
  41a248:	add    DWORD PTR [eax],eax
  41a24a:	arpl   si,bx
  41a24c:	add    DWORD PTR [eax],eax
  41a24e:	arpl   si,bx
  41a250:	add    DWORD PTR [eax],eax
  41a252:	arpl   si,bx
  41a254:	add    DWORD PTR [eax],eax
  41a256:	arpl   si,bx
  41a258:	add    DWORD PTR [eax],eax
	...
  41a28a:	add    BYTE PTR [eax],al
  41a28c:	arpl   WORD PTR ds:0x56303e7,ax
  41a292:	out    0x3,eax
  41a294:	arpl   WORD PTR ds:0x56303e7,ax
  41a29a:	out    0x3,eax
  41a29c:	arpl   WORD PTR ds:0x56303e7,ax
  41a2a2:	out    0x3,eax
  41a2a4:	arpl   WORD PTR ds:0x56303e7,ax
  41a2aa:	out    0x3,eax
  41a2ac:	arpl   WORD PTR ds:0x56303e7,ax
  41a2b2:	out    0x3,eax
  41a2b4:	arpl   WORD PTR ds:0x56303e7,ax
  41a2ba:	out    0x3,eax
  41a2bc:	arpl   WORD PTR ds:0x56303e7,ax
  41a2c2:	out    0x3,eax
  41a2c4:	arpl   WORD PTR ds:0x56303e7,ax
  41a2ca:	out    0x3,eax
  41a2cc:	arpl   WORD PTR ds:0x56303e7,ax
  41a2d2:	out    0x3,eax
  41a2d4:	arpl   WORD PTR ds:0x56303e7,ax
  41a2da:	out    0x3,eax
  41a2dc:	arpl   WORD PTR ds:0x56303e7,ax
  41a2e2:	out    0x3,eax
  41a2e4:	arpl   WORD PTR ds:0x56303e7,ax
  41a2ea:	out    0x3,eax
  41a2ec:	arpl   WORD PTR ds:0x3e7,ax
	...
  41a322:	arpl   WORD PTR ds:0x56303e7,ax
  41a328:	out    0x3,eax
  41a32a:	arpl   WORD PTR ds:0x56303e7,ax
  41a330:	out    0x3,eax
  41a332:	arpl   WORD PTR ds:0x56303e7,ax
  41a338:	add    cl,ch
  41a33a:	pusha  
  41a33b:	add    eax,0x560e900
  41a340:	add    cl,ch
  41a342:	pusha  
  41a343:	add    eax,0x560e900
  41a348:	add    cl,ch
  41a34a:	pusha  
  41a34b:	add    eax,0x560e900
  41a350:	add    cl,ch
  41a352:	pusha  
  41a353:	add    eax,0x560e900
  41a358:	add    cl,ch
  41a35a:	pusha  
  41a35b:	add    eax,0x560e900
  41a360:	add    cl,ch
  41a362:	pusha  
  41a363:	add    eax,0x560e900
  41a368:	add    al,bl
  41a36a:	cs ss xor al,0xd4
  41a36e:	xchg   edx,eax
  41a36f:	add    eax,0x74cf8870
  41a374:	jne    0x41a304
  41a376:	(bad)  
  41a377:	imul   eax,DWORD PTR [eax],0x6275b879
  41a37d:	mov    esp,DWORD PTR [eax+0x5e]
  41a380:	jne    0x41a3ce
  41a382:	mov    cl,0x79
  41a384:	ja     0x41a36f
	...
  41a3b6:	add    BYTE PTR [eax],al
  41a3b8:	ja     0x41a3ed
  41a3ba:	xor    DWORD PTR ds:0x446a0572,ebx
  41a3c0:	nop
  41a3c1:	jb     0x41a434
  41a3c3:	jmp    0xf572d717
  41a3c8:	push   ebx
  41a3c9:	aaa    
  41a3ca:	xor    eax,0x321e60f1
  41a3cf:	cli    
  41a3d0:	dec    esp
  41a3d1:	add    eax,0x1e800b5f
  41a3d6:	xor    bl,dl
  41a3d8:	pusha  
  41a3d9:	popa   
  41a3da:	arpl   WORD PTR ds:0xff67627a,bx
  41a3e0:	pusha  
  41a3e1:	jns    0x41a446
  41a3e3:	add    cl,bl
  41a3e5:	pop    esi
  41a3e6:	add    BYTE PTR [ebp+ebx*2+0x5f],ch
  41a3ea:	popa   
  41a3eb:	add    BYTE PTR [ebx],cl
  41a3ed:	xor    eax,0x69ba002f
  41a3f2:	outs   dx,DWORD PTR ds:[esi]
  41a3f3:	jae    0x41a38a
  41a3f5:	addr16 jb 0x41a45c
  41a3f8:	dec    ebx
  41a3f9:	or     DWORD PTR [eax+0x65],ebp
  41a3fc:	sahf   
  41a3fd:	imul   ax,WORD PTR [eax],0xffdf
  41a401:	outs   dx,BYTE PTR ds:[si]
  41a403:	imul   esp,DWORD PTR [edi-0x379bff8f],0x69
  41a40a:	arpl   WORD PTR [edi-0x64],bp
  41a40d:	add    dh,BYTE PTR [edx+esi*2-0x49]
  41a411:	jae    0x41a487
  41a413:	outs   dx,BYTE PTR ds:[esi]
  41a414:	int    0x39
  41a416:	add    BYTE PTR [ecx],dh
  41a418:	mov    edi,DWORD PTR [ecx]
  41a41a:	sub    eax,0x31
	...
  41a44b:	add    BYTE PTR [eax],al
  41a44d:	add    BYTE PTR [ebx-0x22939afe],cl
  41a453:	pusha  
  41a454:	popa   
  41a455:	jns    0x41a444
  41a457:	je     0x41a459
  41a459:	xor    DWORD PTR [eax],ecx
  41a45b:	xor    esi,DWORD PTR [esi*1+0x73001f04]
  41a462:	loop   0x41a4cc
  41a464:	outs   dx,DWORD PTR fs:[esi]
  41a466:	xchg   ebp,eax
  41a467:	or     DWORD PTR ds:0x31354932,ebp
  41a46d:	ss inc ebp
  41a46f:	xor    DWORD PTR ds:0x7261a900,esi
  41a475:	imul   ebx,DWORD PTR [ecx+0x75],0x67577300
  41a47c:	outs   dx,DWORD PTR ds:[esi]
  41a47d:	push   0x6167a3
  41a482:	aas    
  41a483:	push   0x7367746f
  41a488:	add    BYTE PTR [ebx+0x5d],ah
  41a48b:	pop    esp
  41a48c:	jo     0x41a503
  41a48e:	arpl   WORD PTR [eax],dx
  41a490:	pop    edi
  41a491:	jb     0x41a4f6
  41a493:	or     al,0x72
  41a495:	addr16 inc ebp
  41a497:	sti    
  41a498:	pop    esi
  41a499:	jno    0x41a4eb
  41a49b:	fsubr  QWORD PTR [ebp+0x67]
  41a49e:	cmp    al,0xff
  41a4a0:	pop    esi
  41a4a1:	jb     0x41a506
  41a4a3:	push   es
  41a4a4:	gs ins DWORD PTR es:[edi],dx
  41a4a6:	das    
  41a4a7:	mov    edx,0xdc3f6c64
  41a4ac:	outs   dx,BYTE PTR fs:[esi]
  41a4ae:	cmp    al,0xc1
  41a4b0:	add    BYTE PTR gs:[eax],al
	...
  41a4e3:	add    BYTE PTR [ecx],cl
  41a4e5:	leave  
  41a4e6:	jb     0x41a55b
  41a4e8:	adc    ch,ch
  41a4ea:	add    DWORD PTR [edi],ebp
  41a4ec:	push   ecx
  41a4ed:	jmp    0x41a523
  41a4ef:	xor    dl,BYTE PTR [eax-0x24]
  41a4f2:	outs   dx,BYTE PTR ds:[esi]
  41a4f3:	push   0x7660b802
  41a4f8:	dec    BYTE PTR [ecx-0x770e99ff]
  41a4fe:	pusha  
  41a4ff:	fs hlt 
  41a501:	mov    BYTE PTR [ecx],al
  41a503:	imul   ecx,edx,0xd163656a
  41a509:	fisub  WORD PTR [ecx+esi*2-0x39]
  41a50d:	test   BYTE PTR [ecx],al
  41a50f:	jno    0x41a4c5
  41a511:	jg     0x41a575
  41a513:	arpl   WORD PTR [ecx-0x4c8c8d22],si
  41a519:	cmp    DWORD PTR [edx+0x6b],esi
  41a51c:	ret    0x43c
  41a51f:	imul   edi,DWORD PTR [edx-0x79a093c1],0x2a
  41a526:	add    al,0x61
  41a528:	mov    edi,DWORD PTR [ecx]
  41a52a:	pop    ebp
  41a52b:	jno    0x41a4b3
  41a52d:	fisubr WORD PTR [edx+0x6e]
  41a530:	(bad)  
  41a531:	cmp    DWORD PTR [edx+0x6e],esi
  41a534:	xchg   BYTE PTR [edx],dh
  41a536:	add    al,0x6a
  41a538:	test   BYTE PTR ds:0x66706c1a,al
  41a53e:	out    0x5d,eax
  41a540:	jo     0x41a5aa
  41a542:	add    bh,BYTE PTR [ebx+0x4e]
  41a545:	jb     0x41a52e
  41a547:	popa   
	...
  41a578:	add    BYTE PTR [eax],al
  41a57a:	inc    edi
  41a57b:	(bad)  
  41a57c:	cli    
  41a57d:	jo     0x41a5bf
  41a57f:	popa   
  41a580:	out    0x61,eax
  41a582:	and    al,0x78
  41a584:	or     al,0x62
  41a586:	sbb    al,0x59
  41a588:	sti    
  41a589:	add    esi,DWORD PTR [edx]
  41a58b:	jno    0x41a555
  41a58d:	jno    0x41a5c5
  41a58f:	fnstenvw [eax+0x63]
  41a593:	xor    eax,0x35533417
  41a598:	pop    ss
  41a599:	add    al,0x13
  41a59b:	jb     0x41a556
  41a59d:	jae    0x41a59e
  41a59f:	popa   
  41a5a0:	out    0x69,eax
  41a5a2:	div    BYTE PTR [esi-0x35]
  41a5a5:	bound  ecx,QWORD PTR ds:0xfc62c505
  41a5ab:	jo     0x41a53c
  41a5ad:	add    esi,edx
  41a5af:	jno    0x41a53d
  41a5b1:	data16 add BYTE PTR [edi-0x19],dh
  41a5b5:	(bad)
  41a5ba:	int3   
  41a5bb:	add    eax,0x71d26e89
  41a5c0:	test   BYTE PTR [ecx+0x63],dh
  41a5c3:	pop    ebp
  41a5c4:	mov    WORD PTR [edx-0x4b],fs
  41a5c7:	bound  edi,QWORD PTR [ebp+0x3]
  41a5ca:	mov    bl,0x62
  41a5cc:	push   edi
  41a5cd:	je     0x41a58f
  41a5cf:	ja     0x41a5b8
  41a5d1:	sub    al,0x6e
  41a5d3:	xor    al,0x1e
  41a5d5:	sub    eax,0x6be73456
  41a5da:	nop
  41a5db:	pop    ebx
  41a5dc:	cmp    ebx,DWORD PTR [edi+0x0]
	...
  41a60f:	add    BYTE PTR [ecx-0x729ab4fb],dl
  41a615:	bound  eax,QWORD PTR [eax]
  41a617:	inc    ebp
  41a618:	js     0x41a61f
  41a61a:	pop    edi
  41a61b:	aas    
  41a61c:	xor    DWORD PTR [edi+0x63],0x1e
  41a620:	addr16 jno 0x41a68b
  41a623:	push   cs
  41a624:	jl     0x41a672
  41a626:	jno    0x41a611
  41a628:	inc    ecx
  41a629:	pop    ebx
  41a62a:	gs add al,0x4b
  41a62d:	jbe    0x41a62f
  41a62f:	or     bh,BYTE PTR [edi]
  41a631:	dec    esp
  41a632:	jb     0x41a641
  41a634:	cmp    BYTE PTR [eax+0x0],ch
  41a637:	or     eax,0x4675b40
  41a63c:	dec    ebx
  41a63d:	add    eax,0x1c70182f
  41a642:	add    bl,dl
  41a644:	add    eax,0x3ec06e5b
  41a649:	push   0x6413e972
  41a64e:	outs   dx,BYTE PTR ds:[esi]
  41a64f:	into   
  41a650:	add    al,0x68
  41a652:	add    cl,dl
  41a654:	add    DWORD PTR [ebx+0x6e],ebx
  41a657:	enter  0x508,0x6f
  41a65b:	enter  0x71fa,0x71
  41a65f:	mov    eax,ds:0x995f5d60
  41a664:	lock jae 0x41a667
  41a667:	test   cl,al
  41a669:	jno    0x41a6dd
  41a66b:	sbb    al,0x5
  41a66e:	jo     0x41a5f8
  41a670:	shl    DWORD PTR [eax+eax*1-0x78],cl
	...
  41a6a4:	add    BYTE PTR [eax],al
  41a6a6:	ror    DWORD PTR [edx+0x5f],0x88
  41a6aa:	rol    DWORD PTR ds:0x3484b436,0x32
  41a6b1:	sbb    BYTE PTR [edi+0x4a],ah
  41a6b4:	imul   ecx,DWORD PTR [eax-0x3f],0x61
  41a6b8:	pop    edi
  41a6b9:	jmp    0x41b5ff40
  41a6be:	mov    dh,0x5b
  41a6c0:	gs add dl,bh
  41a6c3:	pop    edi
  41a6c4:	outs   dx,BYTE PTR gs:[esi]
  41a6c6:	popf   
  41a6c7:	pop    esp
  41a6c8:	jb     0x41a6ca
  41a6ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6cb:	data16 je 0x41a736
  41a6ce:	lahf   
  41a6cf:	jae    0x41a6d1
  41a6d1:	jae    0x41a727
  41a6d3:	imul   si,WORD PTR [eax+0x43],0x1
  41a6d8:	push   0x65
  41a6da:	jns    0x41a74e
  41a6dc:	arpl   WORD PTR gs:[ebx+0x1],bp
  41a6e0:	jae    0x41a747
  41a6e2:	jbe    0x41a746
  41a6e4:	imul   ebp,DWORD PTR [ebp+0x5f],0x1
  41a6e8:	jo     0x41a759
  41a6ea:	popa   
  41a6eb:	pop    esp
  41a6ec:	imul   ebp,DWORD PTR [edi-0x4c],0x956c6506
  41a6f3:	ins    BYTE PTR es:[edi],dx
  41a6f4:	popa   
  41a6f5:	jns    0x41a68c
  41a6f7:	ins    DWORD PTR es:[edi],dx
  41a6f8:	sub    eax,0x2d307b00
  41a6fd:	xor    DWORD PTR [ebx+0x1],edi
  41a700:	imul   esi,DWORD PTR [ebp-0x37],0x9d6e5d72
  41a707:	push   es
  41a708:	push   0x65
	...
  41a739:	add    BYTE PTR [eax],al
  41a73b:	add    BYTE PTR [esi-0x759a968a],ah
  41a741:	dec    eax
  41a742:	jno    0x41a7b7
  41a744:	into   
  41a745:	dec    ecx
  41a746:	outs   dx,BYTE PTR ds:[esi]
  41a747:	add    al,dl
  41a749:	popa   
  41a74a:	outs   dx,DWORD PTR ds:[esi]
  41a74b:	ins    DWORD PTR es:[edi],dx
  41a74c:	jecxz  0x41a7b1
  41a74e:	popa   
  41a74f:	add    ch,dl
  41a751:	jo     0x41a7b0
  41a753:	outs   dx,BYTE PTR ds:[esi]
  41a754:	fstp   QWORD PTR [eax+eax*1+0x74]
  41a758:	fbstp  TBYTE PTR [edx+0x74]
  41a75b:	imul   esp,esp,0xba61005e
  41a761:	jbe    0x41a7cf
  41a763:	cmp    ah,BYTE PTR gs:[ebp+0x65]
  41a767:	arpl   WORD PTR [edx+0x636c6c5c],dx
  41a76d:	cmp    DWORD PTR [eax+esi*2],eax
  41a770:	jle    0x41a7af
  41a772:	arpl   WORD PTR gs:[ebx+0x2f],sp
  41a776:	addr16 popa 
  41a778:	xchg   ecx,eax
  41a779:	inc    ecx
  41a77a:	js     0x41a77c
  41a77c:	xor    bl,ah
  41a77e:	push   0x72
  41a780:	cmp    BYTE PTR [edi],0x67
  41a783:	add    BYTE PTR [ebp+edx*1+0x60],dh
  41a787:	ins    BYTE PTR es:[edi],dx
  41a788:	jp     0x41a787
  41a78a:	pop    esi
  41a78b:	add    BYTE PTR [edx+0x0],cl
  41a78e:	popa   
  41a78f:	jbe    0x41a7cf
  41a791:	adc    eax,0xdc917361
  41a796:	pop    edi
  41a797:	addr16 inc eax
  41a799:	sti    
  41a79a:	pop    edi
  41a79b:	arpl   WORD PTR [ebx-0x56],sp
  41a79e:	aaa    
  41a79f:	add    BYTE PTR ss:[eax],al
	...
  41a7d2:	ins    DWORD PTR es:[edi],dx
  41a7d3:	mov    dl,0x37
  41a7d5:	add    BYTE PTR [esi],bh
  41a7d7:	leave  
  41a7d8:	data16 cmp bh,BYTE PTR [bp+si+0x6501]
  41a7de:	add    cl,al
  41a7e0:	push   0x1d50275
  41a7e5:	pushw  ss
  41a7e7:	mov    edi,0xb0f4775e
  41a7ec:	xor    al,0x0
  41a7ee:	add    ch,BYTE PTR [edi-0x57fb978a]
  41a7f4:	push   0x597cfb00
  41a7f9:	pop    edi
  41a7fa:	sti    
  41a7fb:	jl     0x41a7fe
  41a7fd:	jo     0x41a7cb
  41a7ff:	jg     0x41a872
  41a801:	add    cl,al
  41a803:	push   0x68
  41a805:	jno    0x41a7d7
  41a807:	xchg   ebp,eax
  41a808:	pop    edi
  41a809:	arpl   WORD PTR gs:[ebp+ebx*2+0x5f],di
  41a80e:	retf   
  41a80f:	jl     0x41a86e
  41a811:	pop    edi
  41a812:	retf   
  41a813:	fisub  WORD PTR [eax+0x77]
  41a816:	mov    al,0x5
  41a818:	push   edi
  41a819:	arpl   dx,ax
  41a81b:	bound  ebx,QWORD PTR [eax]
  41a81d:	add    al,0x88
  41a81f:	pop    bx
  41a821:	js     0x41a7ae
  41a823:	bound  edx,QWORD PTR [esi+0x4]
  41a826:	and    BYTE PTR [esi+0x55],0x63
  41a82a:	jg     0x41a892
  41a82c:	out    0x74,eax
  41a82e:	test   BYTE PTR [ecx+0x3d],bl
  41a831:	addr16 jno 0x41a839
  41a834:	cmp    DWORD PTR [ecx+0x0],esp
	...
  41a867:	add    BYTE PTR [ecx+0x63781962],al
  41a86d:	pop    edi
  41a86e:	push   cs
  41a86f:	jbe    0x41a8b1
  41a871:	outs   dx,DWORD PTR ds:[esi]
  41a872:	or     al,0x76
  41a874:	arpl   WORD PTR [esi+0x1a],sp
  41a877:	push   0x40f6045
  41a87c:	push   ecx
  41a87d:	data16 or bl,BYTE PTR [eax+eax*2+0x59]
  41a882:	out    0x75,eax
  41a884:	adc    al,0x5e
  41a886:	std    
  41a887:	gs ds jo 0x41a872
  41a88b:	push   0x62d35e30
  41a890:	adc    DWORD PTR ds:0x573466d7,eax
  41a896:	aam    0x77
  41a898:	arpl   WORD PTR [ebx-0x38],sp
  41a89b:	ja     0x41a895
  41a89d:	gs int 0x3
  41a8a0:	add    bl,BYTE PTR [eax-0x3a]
  41a8a3:	pop    esp
  41a8a4:	cld    
  41a8a5:	popa   
  41a8a6:	out    0x65,eax
  41a8a8:	or     al,0x5e
  41a8aa:	xchg   ebx,eax
  41a8ab:	data16 in al,dx
  41a8ad:	add    al,0x9a
  41a8af:	pusha  
  41a8b0:	ret    0x8c64
  41a8b3:	jne    0x41a839
  41a8b5:	add    eax,0x5cc25a7c
  41a8ba:	mov    WORD PTR [edx+0x63],gs
  41a8bd:	arpl   WORD PTR [eax+0x5ac077],dx
  41a8c3:	mov    WORD PTR [eax+0x5d],fs
  41a8c6:	arpl   WORD PTR [ebp-0x74],di
  41a8c9:	pop    edx
  41a8ca:	das    
  41a8cb:	jmp    0x41a8d0
	...
  41a8fc:	add    BYTE PTR [eax],al
  41a8fe:	mov    ebp,0x844f675c
  41a903:	pop    esp
  41a904:	add    BYTE PTR [ebp-0x80],cl
  41a907:	pop    esi
  41a908:	ins    DWORD PTR es:[edi],dx
  41a909:	push   ebp
  41a90a:	add    BYTE PTR ds:0x48a44871,0x6e
  41a911:	xor    eax,0x4a00489f
  41a916:	sbb    BYTE PTR [eax+esi*2+0x48],0x70
  41a91b:	add    eax,0x5c801064
  41a920:	ins    DWORD PTR es:[edi],dx
  41a921:	cmovnp eax,DWORD PTR ds:0x59480874
  41a928:	ins    DWORD PTR es:[edi],dx
  41a929:	sbb    esp,DWORD PTR [edi+0x5f]
  41a92c:	ins    DWORD PTR es:[edi],dx
  41a92d:	sti    
  41a92e:	dec    ebp
  41a92f:	pop    esp
  41a930:	add    BYTE PTR [ebx],dl
  41a932:	inc    edx
  41a933:	pop    ebp
  41a934:	outs   dx,BYTE PTR ds:[esi]
  41a935:	mov    edx,0xfb002f71
  41a93a:	or     DWORD PTR [esi+0x68],esp
  41a93d:	enter  0x612e,0x0
  41a941:	retf   
  41a942:	cmp    al,0x60
  41a944:	outs   dx,BYTE PTR ds:[esi]
  41a945:	ret    0x2d51
  41a948:	xor    ch,cl
  41a94a:	adc    BYTE PTR [edi+ebx*2-0x36],ah
  41a94e:	sub    BYTE PTR [ecx+esi*2-0x17],ah
  41a952:	pop    es
  41a953:	pop    edx
  41a954:	ins    DWORD PTR es:[edi],dx
  41a955:	lds    esp,FWORD PTR [eax+0x5f]
  41a958:	ins    BYTE PTR es:[edi],dx
  41a959:	mov    esi,0xe97263eb
  41a95e:	out    dx,eax
  41a95f:	gs ins DWORD PTR es:[edi],dx
  41a961:	mov    es,WORD PTR [eax]
	...
  41a993:	add    ah,dl
  41a995:	bound  esi,QWORD PTR [edx-0x17]
  41a998:	mov    esi,0xc2886e46
  41a99d:	inc    esi
  41a99e:	add    BYTE PTR [eax],al
  41a9a0:	lock arpl WORD PTR [ecx+0x65],bp
  41a9a4:	mov    ecx,0xe6735d02
  41a9a9:	pop    esp
  41a9aa:	pop    ebp
  41a9ab:	jae    0x41a993
  41a9ad:	pop    esp
  41a9ae:	add    BYTE PTR [esi-0x6d],dh
  41a9b1:	bound  esi,QWORD PTR [edi+ebp*2-0x48]
  41a9b5:	pop    eax
  41a9b6:	add    BYTE PTR [ebp+ebx*4+0x47],ch
  41a9ba:	outs   dx,DWORD PTR fs:[esi]
  41a9bc:	dec    esp
  41a9bd:	add    DWORD PTR ds:0x73720932,ebp
  41a9c3:	or     dh,BYTE PTR gs:[edx]
  41a9c6:	xor    dh,BYTE PTR [ebx]
  41a9c8:	stc    
  41a9c9:	xor    al,0x2d
  41a9cb:	add    BYTE PTR [ecx],ch
  41a9cd:	ins    DWORD PTR es:[edi],dx
  41a9ce:	pop    ebp
  41a9cf:	jb     0x41aa17
  41a9d1:	jae    0x41aa34
  41a9d3:	imul   ecx,edx,0x5f
  41a9d6:	popa   
  41a9d7:	outs   dx,DWORD PTR ds:[esi]
  41a9d8:	js     0x41aa38
  41a9da:	popa   
  41a9db:	add    BYTE PTR [ebp+0x48],dh
  41a9de:	outs   dx,BYTE PTR ds:[esi]
  41a9df:	outs   dx,BYTE PTR ds:[esi]
  41a9e0:	push   edi
  41a9e1:	jae    0x41a9e3
  41a9e3:	ins    DWORD PTR es:[edi],dx
  41a9e4:	imul   ebx,DWORD PTR [esi+0x63],0x69
  41a9e8:	add    DWORD PTR [si+0x72],esi
  41a9ec:	arpl   WORD PTR [edi+0x65],ax
  41a9ef:	je     0x41a9b4
  41a9f1:	add    ch,BYTE PTR [ebx+0x6e]
  41a9f4:	scas   al,BYTE PTR es:[edi]
  41a9f5:	dec    ecx
  41a9f6:	outs   dx,BYTE PTR ds:[esi]
  41a9f7:	add    BYTE PTR gs:[eax],al
	...
  41aa2a:	mov    dh,BYTE PTR [ecx]
  41aa2c:	xor    dh,BYTE PTR [ebx]
  41aa2e:	fwait
  41aa2f:	fs pop edi
  41aa31:	add    BYTE PTR [ecx-0x6e9c9ab6],bl
  41aa37:	pop    ebp
  41aa38:	outs   dx,BYTE PTR ds:[esi]
  41aa39:	add    BYTE PTR [eax-0x52969193],ah
  41aa3f:	je     0x41aa41
  41aa41:	arpl   dx,dx
  41aa43:	je     0x41aaaa
  41aa45:	jae    0x41aa91
  41aa47:	jb     0x41aaa6
  41aa49:	jae    0x41aaae
  41aa4b:	mov    esi,DWORD PTR [esi+0x30]
  41aa4e:	rol    DWORD PTR [eax+0x6bce5f01],1
  41aa54:	jne    0x41aabd
  41aa56:	int    0xdc
  41aa58:	jb     0x41aaca
  41aa5a:	ret    0x5a6a
  41aa5d:	ja     0x41aac2
  41aa5f:	jge    0x41aac6
  41aa61:	imul   edi,DWORD PTR [edx-0x7994fbb2],0x4a
  41aa68:	pusha  
  41aa69:	addr16 test esp,ebx
  41aa6c:	ins    WORD PTR es:[edi],dx
  41aa6e:	jl     0x41aaaf
  41aa70:	pusha  
  41aa71:	arpl   WORD PTR [ebx+0x36],sp
  41aa74:	jb     0x41aadd
  41aa76:	xchg   BYTE PTR [esi],dh
  41aa78:	push   0x5d446371
  41aa7d:	jo     0x41aa05
  41aa7f:	fdiv   QWORD PTR [edx+0x68]
  41aa82:	adc    BYTE PTR [eax],0x5d
  41aa85:	imul   esp,DWORD PTR [ebx-0xa],0x5a
  41aa89:	outs   dx,BYTE PTR ds:[esi]
  41aa8a:	dec    edi
  41aa8b:	stc    
  41aa8c:	pop    ebp
  41aa8d:	add    BYTE PTR fs:[eax],al
	...
  41aac0:	cmp    al,0xdc
  41aac2:	pop    ebp
  41aac3:	ins    DWORD PTR es:[edi],dx
  41aac4:	xor    al,0x13
  41aac6:	pop    ebx
  41aac7:	outs   dx,BYTE PTR ds:[esi]
  41aac8:	inc    esp
  41aac9:	fcomp  QWORD PTR [ecx+0x5f]
  41aacc:	xor    DWORD PTR [eax],eax
  41aace:	addr16 ja 0x41ab34
  41aad1:	jmp    0x41ab33
  41aad3:	ins    DWORD PTR es:[edi],dx
  41aad4:	cmp    BYTE PTR [ecx+0xf54006c],bh
  41aada:	xor    eax,0x5ec26335
  41aadf:	jno    0x41aae7
  41aae1:	int3   
  41aae2:	pop    ecx
  41aae3:	add    bh,dh
  41aae5:	test   al,0x62
  41aae7:	imul   edi,edx,0xfc6765db
  41aaed:	les    esi,FWORD PTR [ebp+0x5f]
  41aaf0:	(bad)  
  41aaf1:	(bad)  [eax+eax*1-0x11]
  41aaf5:	add    al,0x8f
  41aaf7:	js     0x41aac6
  41aaf9:	imul   eax,DWORD PTR [ecx+esi*2+0x5c975863],0x3936ed1
  41ab04:	shl    DWORD PTR [esi-0x6b],0x67
  41ab08:	les    ebx,FWORD PTR [ecx-0x19]
  41ab0b:	push   0x718c59c5
  41ab10:	arpl   WORD PTR [esi+0x7d],sp
  41ab13:	ja     0x41aad0
  41ab15:	je     0x41ab6c
  41ab17:	imul   esp,DWORD PTR [ebx+0x68],0x4e
  41ab1b:	jb     0x41aaaa
  41ab1d:	push   0x5b
  41ab1f:	js     0x41aaa1
  41ab21:	add    eax,0x5d3f
	...
  41ab56:	xor    BYTE PTR [eax+0x4c],0x6b
  41ab5a:	arpl   WORD PTR [ebp+0x4e],dx
  41ab5d:	jne    0x41aadf
  41ab5f:	push   edi
  41ab60:	out    0x61,eax
  41ab62:	xor    BYTE PTR [ebx+0x41],0x63
  41ab66:	js     0x41abd6
  41ab68:	adc    eax,0xe714404
  41ab6d:	jbe    0x41abaf
  41ab6f:	pop    esi
  41ab70:	push   es
  41ab71:	ja     0x41abdf
  41ab73:	add    eax,0x5c9172d8
  41ab78:	mov    edx,0x105b6366
  41ab7d:	je     0x41abbf
  41ab7f:	push   edi
  41ab80:	out    0x64,eax
  41ab82:	inc    eax
  41ab83:	jae    0x41ab89
  41ab85:	jno    0x41abc3
  41ab87:	pop    eax
  41ab88:	out    0x58,eax
  41ab8a:	or     eax,0xf5bc66e
  41ab8f:	add    eax,0x570074d8
  41ab94:	shr    DWORD PTR [edx+0x34],cl
  41ab97:	add    eax,0x660071ca
  41ab9c:	mov    bl,0x5a
  41ab9e:	in     eax,dx
  41ab9f:	imul   eax,DWORD PTR [eax],0x6d7206e9
  41aba5:	retf   
  41aba6:	add    DWORD PTR [edi+0x0],edx
  41aba9:	mov    ah,al
  41abab:	ins    BYTE PTR es:[edi],dx
  41abac:	fs mov bl,dl
  41abaf:	add    eax,0x6cd48672
  41abb4:	imul   eax,DWORD PTR [eax-0x7793a9a0],0x0
	...
  41abeb:	add    cl,cl
  41abed:	push   0x6cafe972
  41abf2:	jno    0x41ab81
  41abf4:	(bad)  
  41abf5:	jo     0x41abf7
  41abf7:	jns    0x41abab
  41abf9:	inc    esp
  41abfa:	addr16 pop edx
  41abfc:	test   BYTE PTR ds:0x5b82617a,al
  41ac02:	bound  eax,QWORD PTR [edi-0x54]
  41ac05:	add    eax,0x58a44871
  41ac0a:	arpl   WORD PTR [ebp+0x67],dx
  41ac0d:	jo     0x41ac76
  41ac0f:	push   edx
  41ac10:	jl     0x41ac17
  41ac12:	fs dec eax
  41ac14:	xor    DWORD PTR [ecx+0x5f],0x3a
  41ac18:	pop    edi
  41ac19:	push   0x72
  41ac1b:	or     al,0x44
  41ac1d:	jae    0x41ac1f
  41ac1f:	adc    eax,0x1d74563c
  41ac24:	inc    esp
  41ac25:	push   esi
  41ac26:	je     0x41ac11
  41ac28:	and    eax,0x310c7644
  41ac2d:	ins    BYTE PTR es:[edi],dx
  41ac2e:	popa   
  41ac2f:	adc    bl,BYTE PTR [edi+0x72]
  41ac32:	outs   dx,BYTE PTR ds:[esi]
  41ac33:	or     al,0x43
  41ac35:	jb     0x41acad
  41ac37:	add    al,0x5f
  41ac39:	imul   ebx,DWORD PTR [edi-0x21],0xcc006939
  41ac40:	or     DWORD PTR [ecx+0x6d],esi
  41ac43:	fild   WORD PTR ds:0xdc16105
  41ac49:	push   edi
  41ac4a:	popa   
  41ac4b:	add    BYTE PTR [edx+0x726607],dl
	...
  41ac81:	add    BYTE PTR [ebx+0x7a646e6a],dl
  41ac87:	push   0x6b7a646b
  41ac8c:	popa   
  41ac8d:	jae    0x41ac8d
  41ac8f:	aas    
  41ac90:	outs   dx,BYTE PTR ds:[esi]
  41ac91:	jns    0x41acdd
  41ac93:	inc    ecx
  41ac94:	imul   ebp,DWORD PTR [esi-0x21],0x6
  41ac98:	imul   ebp,DWORD PTR [ecx-0x27],0xd5736b54
  41ac9f:	push   0x14f80074
  41aca4:	xor    dh,BYTE PTR [edx]
  41aca6:	call   0xafa3acbf
  41acab:	bound  ebp,QWORD PTR fs:[edi+ebp*4+0x5a]
  41acb0:	add    BYTE PTR [ecx],dh
  41acb2:	jnp    0x41accc
  41acb4:	sub    eax,0x2d186b31
  41acb9:	add    BYTE PTR [ecx-0x569ea0c2],bl
  41acbf:	ds ins BYTE PTR es:[edi],dx
  41acc1:	popa   
  41acc2:	or     al,BYTE PTR [ecx+0x6b]
  41acc5:	jb     0x41ac65
  41acc7:	push   0x6e9326e
  41accc:	gs ins BYTE PTR es:[edi],dx
  41acce:	jne    0x41ad27
  41acd0:	popa   
  41acd1:	gs add BYTE PTR gs:[bp+0x65],ah
  41acd7:	ds je  0x41ad3c
  41acda:	pop    ebx
  41acdb:	cmp    eax,0x3aca316c
  41ace0:	imul   esi,DWORD PTR [esi+0x53],0x3f
  41ace4:	arpl   WORD PTR [eax],ax
	...
  41ad16:	add    BYTE PTR [eax],al
  41ad18:	fs push 0x3f5b6874
  41ad1e:	add    BYTE PTR [ebp-0x49],ah
  41ad21:	cmp    eax,0x65af6e5d
  41ad26:	ins    BYTE PTR es:[edi],dx
  41ad27:	add    BYTE PTR [ebx-0x41],ah
  41ad2a:	ins    WORD PTR es:[edi],dx
  41ad2c:	hlt    
  41ad2d:	int    0x6c
  41ad2f:	add    BYTE PTR ds:0x46966a1,al
  41ad35:	retf   0x5f
  41ad38:	lock int3 
  41ad3a:	pop    eax
  41ad3b:	imul   ebp,edx,0xffffffeb
  41ad3e:	pop    eax
  41ad3f:	pop    edi
  41ad40:	fild   DWORD PTR [ebx-0x133893a0]
  41ad46:	pop    ebx
  41ad47:	pop    edi
  41ad48:	ror    BYTE PTR [ebx+0x63b90057],1
  41ad4e:	pop    ecx
  41ad4f:	outs   dx,BYTE PTR ds:[esi]
  41ad50:	arpl   WORD PTR [ebp-0x6053cd8c],bx
  41ad56:	pusha  
  41ad57:	xor    al,0xb1
  41ad59:	in     al,dx
  41ad5a:	arpl   WORD PTR [edi-0x3f],bx
  41ad5d:	push   ebp
  41ad5e:	add    DWORD PTR [edx-0x7a],esi
  41ad61:	push   eax
  41ad62:	xor    esi,DWORD PTR [edx]
  41ad64:	push   eax
  41ad65:	in     al,dx
  41ad66:	arpl   WORD PTR [edx+eax*4+0x4e],bp
  41ad6a:	pop    eax
  41ad6b:	pop    edi
  41ad6c:	arpl   WORD PTR [esi+esi*2],di
  41ad6f:	lea    ecx,[bx+0x5f]
  41ad73:	add    BYTE PTR [edx+0x1b],dh
  41ad76:	pop    edi
  41ad77:	jb     0x41adf0
  41ad79:	in     al,dx
  41ad7a:	pushw  0x0
	...
  41adae:	jle    0x41add0
  41adb0:	jne    0x41ae15
  41adb2:	inc    edx
  41adb3:	in     al,dx
  41adb4:	xor    BYTE PTR [ebx],dh
  41adb6:	mov    ?,WORD PTR [ecx+0xa420030]
  41adbc:	popa   
  41adbd:	arpl   WORD PTR [edi],si
  41adbf:	mov    ebp,0xde426801
  41adc4:	pop    ebp
  41adc5:	popa   
  41adc6:	inc    esp
  41adc7:	fisub  WORD PTR [eax+0x0]
  41adca:	inc    edi
  41adcb:	adc    DWORD PTR [esp+esi*2+0x3e],ebp
  41adcf:	fiadd  WORD PTR [ecx]
  41add1:	jno    0x41add5
  41add3:	add    eax,0x4ff60dd
  41add8:	sbb    BYTE PTR ds:0x371a1751,dh
  41adde:	arpl   WORD PTR [ebp-0x38],bp
  41ade1:	push   edi
  41ade2:	psrad  mm7,0x5d
  41ade6:	adc    al,0x56
  41ade8:	mov    bh,0x60
  41adea:	icebp  
  41adeb:	add    al,0xcb
  41aded:	fs cmc 
  41adef:	imul   eax,esp,0x57
  41adf2:	iret   
  41adf3:	push   0xffffffe7
  41adf5:	pop    esi
  41adf6:	mov    esp,0xbd609359
  41adfb:	add    eax,0x54d2648a
  41ae00:	and    BYTE PTR [eax+0x63],0x54
  41ae04:	jnp    0x41ae66
  41ae06:	(bad)  
  41ae07:	jno    0x41ad91
  41ae09:	add    esi,DWORD PTR [ebx-0x3f9377ad]
  41ae0f:	push   ebx
  41ae10:	out    0x5b,eax
	...
  41ae42:	add    BYTE PTR [eax],al
  41ae44:	mov    ds,WORD PTR [ecx+0x4b]
  41ae47:	pop    ecx
  41ae48:	jle    0x41ae4f
  41ae4a:	push   esi
  41ae4b:	pop    ebx
  41ae4c:	jge    0x41aeb7
  41ae4e:	inc    esi
  41ae4f:	jno    0x41ade3
  41ae51:	add    eax,0x59726f3c
  41ae56:	dec    ebx
  41ae57:	pop    ebx
  41ae58:	add    BYTE PTR ds:0x6a776346,0x3a
  41ae5f:	add    al,0x81
  41ae61:	outs   dx,BYTE PTR ds:[esi]
  41ae62:	cmp    ebx,DWORD PTR [eax+0x46]
  41ae65:	sbb    bx,WORD PTR [edi+0x52]
  41ae69:	add    eax,0x69415c06
  41ae6e:	sbb    ebx,DWORD PTR [edx+0x63]
  41ae71:	push   0x6c495c05
  41ae76:	adc    al,0x4
  41ae78:	test   BYTE PTR [ebx],dl
  41ae7a:	mov    edx,0x17702f
  41ae7f:	mov    esi,0xe9301878
  41ae84:	pusha  
  41ae85:	fs je  0x41ae6a
  41ae88:	push   cs
  41ae89:	push   edi
  41ae8a:	imul   ecx,esi,0xdc756f16
  41ae90:	pusha  
  41ae91:	ins    DWORD PTR es:[edi],dx
  41ae92:	je     0x41ae69
  41ae94:	lock sbb ch,BYTE PTR ds:0x2e304816
  41ae9b:	clc    
  41ae9c:	xor    BYTE PTR ss:[esi],ch
  41ae9f:	lock das 
  41aea1:	das    
  41aea2:	das    
  41aea3:	test   BYTE PTR [eax+0xd9381b],0x0
	...
  41aeda:	mov    BYTE PTR ds:0x6fab992d,dl
  41aee0:	ja     0x41aea8
  41aee2:	ret    
  41aee3:	inc    eax
  41aee4:	je     0x41ae6a
  41aee6:	pop    edx
  41aee7:	push   ebp
  41aee8:	push   0x746d6079
  41aeed:	jne    0x41ae9f
  41aeef:	sbb    ebp,DWORD PTR ds:0x7254c1c6
  41aef5:	add    BYTE PTR [ecx-0x7fb29c91],0x6c
  41aefc:	arpl   WORD PTR [ebx+0x69],sp
  41aeff:	addr16 jb 0x41af15
  41af02:	aaa    
  41af03:	adc    eax,0x555a1938
  41af08:	ins    DWORD PTR es:[edi],dx
  41af09:	push   edi
  41af0a:	mov    BYTE PTR [edx],dh
  41af0c:	gs dec eax
  41af0e:	jae    0x41af74
  41af10:	cmp    DWORD PTR cs:[edi+0x38e90055],eax
  41af17:	pop    ecx
  41af18:	je     0x41af33
  41af1a:	test   DWORD PTR [edx],esi
  41af1c:	sub    eax,0x67552e08
  41af21:	pop    es
  41af22:	inc    eax
  41af23:	push   ebx
  41af24:	ins    BYTE PTR es:[edi],dx
  41af25:	(bad)  
  41af26:	push   ds
  41af27:	push   0x3ab60071
  41af2c:	addr16 cs pop esp
  41af2f:	inc    eax
  41af30:	je     0x41af61
  41af32:	pop    edi
  41af33:	cmp    BYTE PTR [edi],ch
  41af35:	gs jg  0x41af6c
  41af38:	bound  edi,QWORD PTR [edx+0x6d]
  41af3b:	dec    edx
  41af3c:	imul   esp,DWORD PTR [edx+0x0],0x0
	...
  41af6f:	add    BYTE PTR [edi-0x68879f03],bl
  41af75:	add    ebp,DWORD PTR [eax+0x74]
  41af78:	xchg   esi,eax
  41af79:	push   ebx
  41af7a:	cmp    ch,BYTE PTR [edi]
  41af7c:	dec    ebp
  41af7d:	push   edi
  41af7e:	js     0x41afe4
  41af80:	test   al,0x62
  41af82:	jae    0x41afe9
  41af84:	test   al,0xfd
  41af86:	pop    esi
  41af87:	outs   dx,DWORD PTR ds:[esi]
  41af88:	pop    ds
  41af89:	inc    BYTE PTR [edx+0x4b]
  41af8c:	out    0x4b,al
  41af8e:	inc    ebx
  41af8f:	inc    esp
  41af90:	pop    ss
  41af91:	outs   dx,DWORD PTR ds:[esi]
  41af92:	sub    edx,DWORD PTR [ecx+ecx*1+0x1d]
  41af96:	fs inc edx
  41af98:	adc    eax,DWORD PTR [ebp+0x2e]
  41af9b:	gs loop 0x41afdd
  41af9e:	add    BYTE PTR [eax],al
  41afa0:	add    edx,DWORD PTR [eax+0x45]
  41afa3:	push   eax
  41afa4:	lds    ebx,FWORD PTR [esi]
  41afa6:	inc    esi
  41afa7:	dec    ecx
  41afa8:	(bad)  
  41afa9:	pop    ds
  41afaa:	xor    BYTE PTR [ecx+0x57],bl
  41afad:	and    BYTE PTR [eax+0x4b],dl
  41afb0:	inc    esi
  41afb1:	pop    ds
  41afb2:	inc    ebp
  41afb3:	dec    esp
  41afb4:	aaa    
  41afb5:	sbb    DWORD PTR [ebp+0x55],edx
  41afb8:	inc    ebx
  41afb9:	inc    edx
  41afba:	push   edx
  41afbb:	pop    ecx
  41afbc:	pop    edx
  41afbd:	xor    eax,0x51ea4441
  41afc2:	push   ecx
  41afc3:	dec    ecx
  41afc4:	jmp    0x41afbe
  41afc6:	das    
  41afc7:	add    dl,cl
  41afc9:	add    al,BYTE PTR [eax]
  41afcb:	add    al,cl
  41afcd:	add    cl,BYTE PTR [ecx+0x4f]
  41afd0:	xchg   BYTE PTR [edi*8+0x0],dh
	...
  41b003:	add    BYTE PTR [eax],al
  41b005:	add    BYTE PTR [ebx-0x14],ah
  41b008:	add    DWORD PTR [eax],eax
  41b00a:	arpl   sp,bp
  41b00c:	add    DWORD PTR [eax],eax
  41b00e:	arpl   bx,di
  41b010:	xor    al,0x46
  41b012:	pop    ss
  41b013:	test   DWORD PTR [edx+0x52],0x6736f81e
  41b01a:	add    dl,bl
  41b01c:	push   esi
  41b01d:	jno    0x41b023
  41b01f:	into   
  41b020:	ins    DWORD PTR es:[edi],dx
  41b021:	pop    esp
  41b022:	xor    al,0xb5
  41b024:	push   ebx
  41b025:	fs hlt 
  41b027:	mov    esi,0xb9205c72
  41b02c:	outs   dx,DWORD PTR ds:[esi]
  41b02d:	jb     0x41b02d
  41b02f:	mov    ch,0x6d
  41b031:	push   esi
  41b032:	push   es
  41b033:	call   0x5345:0xc5f46772
  41b03a:	int    0xc5
  41b03c:	push   ebx
  41b03d:	jno    0x41b00e
  41b03f:	lea    edx,[ebp+0x6c]
  41b042:	arpl   WORD PTR [ecx+0x7bb56753],bx
  41b048:	ins    DWORD PTR es:[edi],dx
  41b049:	pop    edi
  41b04a:	iret   
  41b04b:	pusha  
  41b04c:	push   edx
  41b04d:	je     0x41b000
  41b04f:	jne    0x41b0a4
  41b051:	arpl   WORD PTR gs:[eax-0x774c8ea4],bp
  41b058:	fs ja  0x41b008
  41b05b:	lea    ebx,[eax+0x63]
  41b05e:	arpl   WORD PTR [eax+0x4],cx
  41b061:	add    BYTE PTR [ebx-0x14],ah
  41b064:	add    DWORD PTR [eax],eax
  41b066:	arpl   sp,bp
  41b068:	add    DWORD PTR [ecx+0x0],ebp
	...
  41b09b:	add    BYTE PTR [esi-0x789ca9c6],al
  41b0a1:	fld    TBYTE PTR [edi]
  41b0a3:	xchg   DWORD PTR cs:[eax+0x58],edx
  41b0a7:	add    BYTE PTR [eax+eax*1+0x18464551],cl
  41b0ae:	inc    ebx
  41b0af:	popa   
  41b0b0:	dec    edi
  41b0b1:	add    eax,0x42406e10
  41b0b6:	push   cs
  41b0b7:	push   esi
  41b0b8:	push   edx
  41b0b9:	outs   dx,BYTE PTR ds:[esi]
  41b0ba:	add    esp,DWORD PTR [ecx+0x12]
  41b0bd:	push   0x6e3c731a
  41b0c2:	adc    eax,0x1705473d
  41b0c7:	jb     0x41b0ff
  41b0c9:	bound  ecx,QWORD PTR [ebx+esi*2]
  41b0cc:	adc    cl,BYTE PTR [ebx+eax*1+0x50]
  41b0d0:	push   es
  41b0d1:	xor    cl,ah
  41b0d3:	jb     0x41b0e7
  41b0d5:	ins    BYTE PTR es:[edi],dx
  41b0d6:	into   
  41b0d7:	push   ebp
  41b0d8:	sbb    al,0x69
  41b0da:	out    0x3,eax
  41b0dc:	arpl   WORD PTR ds:0x56303e7,ax
  41b0e2:	out    0x3,eax
  41b0e4:	add    dl,BYTE PTR [ebx-0x40]
  41b0e7:	jae    0x41b0d8
  41b0e9:	adc    ecx,edi
  41b0eb:	adc    eax,0x3bb69c7
  41b0f0:	mov    ds:0xd773a057,al
  41b0f5:	xor    cl,BYTE PTR [ebp-0x64932e8d]
  41b0fb:	pusha  
  41b0fc:	ret    0xa351
  41b0ff:	add    BYTE PTR fs:[eax],al
	...
  41b132:	scas   eax,DWORD PTR es:[edi]
  41b133:	out    0x3,ax
  41b136:	arpl   WORD PTR ds:0x5dc015e7,ax
  41b13c:	mov    WORD PTR [ebx],es
  41b13e:	mov    dl,0x6c
  41b140:	test   DWORD PTR [edi-0x72],ebp
  41b143:	pop    cx
  41b145:	pop    edi
  41b146:	scas   eax,DWORD PTR es:[edi]
  41b147:	xor    al,0x50
  41b149:	push   esi
  41b14a:	mov    cl,0x46
  41b14c:	cmp    DWORD PTR [esi+ecx*4],eax
  41b14f:	push   ebp
  41b150:	inc    esp
  41b151:	push   esi
  41b152:	arpl   WORD PTR [esi],ax
  41b154:	out    0x3,eax
  41b156:	jecxz  0x41b1b0
  41b158:	dec    edi
  41b159:	pop    edi
  41b15a:	ja     0x41b1c5
  41b15c:	add    dl,bh
  41b15e:	xchg   edx,eax
  41b15f:	sub    esp,DWORD PTR [ebp+edi*1+0x3b]
  41b163:	add    eax,0x688e3151
  41b168:	je     0x41b191
  41b16a:	imul   esp,DWORD PTR cs:[esp+ecx*1+0x31],0x17155f35
  41b173:	sbb    al,0x0
  41b175:	jmp    0xe941b6da
  41b17a:	and    eax,0xeae93f24
  41b17f:	and    al,0x3f
  41b181:	jmp    0xe980d680
  41b186:	mov    al,ds:0xcee93f24
  41b18b:	and    al,0x3f
  41b18d:	jmp    0xe980d638
  41b192:	mov    fs,WORD PTR [edi+edi*1]
  41b195:	jmp    0x41b19a
	...
  41b1c6:	add    BYTE PTR [eax],al
  41b1c8:	arpl   WORD PTR [edi],bp
  41b1ca:	aas    
  41b1cb:	jmp    0xe980e12a
  41b1d0:	jbe    0x41b201
  41b1d2:	aas    
  41b1d3:	jmp    0xe980e16f
  41b1d8:	stos   DWORD PTR es:[edi],eax
  41b1d9:	das    
  41b1da:	aas    
  41b1db:	jmp    0xe980e1a8
  41b1e0:	pusha  
  41b1e1:	add    eax,0x561e900
  41b1e6:	add    BYTE PTR [ecx+0x2c],ch
  41b1e9:	fdiv   st(5),st
  41b1eb:	jmp    0xad62065d
  41b1f0:	mov    bh,0x66
  41b1f2:	jae    0x41b270
  41b1f4:	mov    ch,0x6b
  41b1f6:	je     0x41b252
  41b1f8:	addr16 fdiv st(5),st
  41b1fb:	jmp    0xe941b0e0
  41b200:	pusha  
  41b201:	sbb    al,0x70
  41b203:	pop    ecx
  41b204:	mov    ds:0x9b00743c,eax
  41b209:	add    ebp,edi
  41b20b:	(bad)  
  41b20c:	cli    
  41b20d:	xchg   DWORD PTR [eax+eax*1],ebx
  41b210:	retf   0x4c07
  41b213:	outs   dx,DWORD PTR ds:[esi]
  41b214:	sub    DWORD PTR [eax+0x6c],ebp
  41b217:	and    BYTE PTR [ebx+0x51],bh
  41b21a:	jo     0x41b260
  41b21c:	pop    ebx
  41b21d:	push   ebp
  41b21e:	pop    ebp
  41b21f:	add    bl,cl
  41b221:	pop    es
  41b222:	add    BYTE PTR [eax+0x7aa],al
  41b228:	jns    0x41b292
  41b22a:	pop    edi
  41b22b:	push   0x0
	...
  41b25c:	add    BYTE PTR [eax],al
  41b25e:	pop    edi
  41b25f:	add    ebp,edi
  41b261:	dec    DWORD PTR [edx-0x75ffe279]
  41b267:	pop    es
  41b268:	aas    
  41b269:	outs   dx,DWORD PTR ds:[esi]
  41b26a:	mov    ch,0x3c
  41b26c:	gs gs test eax,0x8afffd07
  41b273:	xchg   DWORD PTR [edx],esp
  41b275:	add    BYTE PTR [edx-0x5696b7f9],cl
  41b27b:	imul   ebp,DWORD PTR [ebx+0x72],0xffffffa3
  41b27f:	pop    es
  41b280:	add    al,BYTE PTR [eax]
  41b282:	dec    edx
  41b283:	xchg   DWORD PTR [ecx],eax
  41b285:	add    BYTE PTR [edx+0x7],cl
  41b288:	dec    ecx
  41b289:	jns    0x41b2a5
  41b28b:	sbb    ebp,DWORD PTR [ebx+0x63]
  41b28e:	out    dx,eax
  41b28f:	xor    esp,DWORD PTR [ecx+0x6e]
  41b292:	ficom  WORD PTR [ebp+0x0]
  41b295:	add    cl,BYTE PTR [edx+0x7]
  41b298:	and    BYTE PTR [ebx],0x3a
  41b29b:	pop    es
  41b29c:	add    BYTE PTR [ebx-0x2b],al
  41b29f:	xor    ebp,DWORD PTR [ecx+0x6f]
  41b2a2:	in     al,0x26
  41b2a4:	cmp    eax,0x5d1a9a70
  41b2a9:	je     0x41b246
  41b2ab:	add    ebp,edi
  41b2ad:	(bad)  
  41b2ae:	cli    
  41b2af:	xchg   BYTE PTR [ebx],ah
  41b2b1:	add    BYTE PTR [ebx-0x14],ah
  41b2b4:	add    DWORD PTR [ebx+0x7a],ecx
  41b2b7:	or     al,0x34
  41b2b9:	sbb    BYTE PTR [bx+si],0x57
  41b2bd:	jb     0x41b33d
  41b2bf:	pop    ds
  41b2c0:	add    al,0x2
	...
  41b2f2:	add    BYTE PTR [eax],al
  41b2f4:	arpl   sp,bp
  41b2f6:	sub    DWORD PTR [esi],0x4101ec63
  41b2fc:	cmp    al,0xf1
  41b2fe:	outs   dx,BYTE PTR ds:[esi]
  41b2ff:	ins    DWORD PTR es:[edi],dx
  41b300:	xor    eax,0x406d45cc
  41b305:	stc    
  41b306:	outs   dx,BYTE PTR ds:[esi]
  41b307:	arpl   WORD PTR [ebp-0x10],ax
  41b30a:	push   esp
  41b30b:	add    BYTE PTR [ecx-0x14],ah
  41b30e:	add    DWORD PTR [eax+0x1ec74],eax
  41b314:	and    BYTE PTR [ebx],al
  41b316:	outs   dx,DWORD PTR ds:[esi]
  41b317:	imul   eax,DWORD PTR [edx+ebx*8],0x21
  41b31b:	aas    
  41b31c:	pop    es
  41b31d:	mov    cl,0x6c
  41b31f:	outs   dx,BYTE PTR ds:[esi]
  41b320:	cli    
  41b321:	mov    esi,0xb8027255
  41b326:	ins    BYTE PTR es:[edi],dx
  41b327:	jbe    0x41b327
  41b329:	or     edi,DWORD PTR [eax]
  41b32b:	ins    DWORD PTR es:[edi],dx
  41b32c:	cld    
  41b32d:	scas   eax,DWORD PTR es:[edi]
  41b32e:	push   esi
  41b32f:	add    BYTE PTR [edx-0x14],ah
  41b332:	add    DWORD PTR [eax+0x1ec93],eax
  41b338:	mov    ds:0xbd6770c0,al
  41b33d:	jne    0x41b395
  41b33f:	je     0x41b312
  41b341:	lea    edx,[ebp+0x67]
  41b344:	mov    ch,0x89
  41b346:	and    DWORD PTR [esp+eax*8+0x5b],edx
  41b34a:	ins    DWORD PTR es:[edi],dx
  41b34b:	jno    0x41b3b0
  41b34d:	in     eax,dx
  41b34e:	add    DWORD PTR [eax],eax
  41b350:	jecxz  0x41b332
  41b352:	add    DWORD PTR [eax],eax
  41b354:	arpl   WORD PTR [eax+ebp*2+0x72],di
	...
  41b388:	add    BYTE PTR [eax],al
  41b38a:	nop
  41b38b:	pop    ebx
  41b38c:	outs   dx,DWORD PTR ds:[esi]
  41b38d:	pop    edi
  41b38e:	jg     0x41b395
  41b390:	out    0x36,eax
  41b392:	jbe    0x41b3f7
  41b394:	push   ebx
  41b395:	pop    ebx
  41b396:	pushf  
  41b397:	push   edi
  41b398:	dec    esp
  41b399:	inc    eax
  41b39a:	test   al,0x6c
  41b39c:	dec    edx
  41b39d:	push   esi
  41b39e:	jle    0x41b3f6
  41b3a0:	push   esi
  41b3a1:	push   0x6f
  41b3a3:	cmp    DWORD PTR [esi],edx
  41b3a5:	ins    DWORD PTR es:[edi],dx
  41b3a6:	dec    ebp
  41b3a7:	popa   
  41b3a8:	inc    esi
  41b3a9:	pop    ebx
  41b3aa:	push   edx
  41b3ab:	cmp    DWORD PTR [edx],ebp
  41b3ad:	pop    ecx
  41b3ae:	push   ecx
  41b3af:	push   edi
  41b3b0:	or     al,0x72
  41b3b2:	dec    edi
  41b3b3:	xor    eax,DWORD PTR [esi+edx*2]
  41b3b6:	xor    ch,BYTE PTR [esi+eax*1+0x72]
  41b3ba:	pop    ss
  41b3bb:	inc    eax
  41b3bc:	andps  xmm7,XMMWORD PTR [edi]
  41b3bf:	push   0xfffffff9
  41b3c1:	push   0x6c1a3931
  41b3c6:	add    BYTE PTR [ecx+0x3],ch
  41b3c9:	and    al,0x1d
  41b3cb:	push   0xfffffffb
  41b3cd:	add    BYTE PTR [bx-0x26],dl
  41b3d1:	add    esi,DWORD PTR [ebx]
  41b3d3:	dec    edx
  41b3d4:	mov    edx,0xda204337
  41b3d9:	and    ebp,DWORD PTR [ebx]
  41b3db:	xor    DWORD PTR [ebx+0x15143e33],esi
  41b3e1:	adc    al,0x58
  41b3e3:	imul   esi,DWORD PTR [edx-0x2e]
  41b3e7:	push   ecx
  41b3e8:	icebp  
  41b3e9:	and    eax,DWORD PTR [eax+0xddc54]
	...
  41b41f:	add    BYTE PTR [esp+eiz*2+0x51d3688a],cl
  41b426:	loope  0x41b44b
  41b428:	mov    DWORD PTR [eax],ebp
  41b42a:	rcl    DWORD PTR [eax],0x69
  41b42d:	inc    esi
  41b42e:	mov    ah,BYTE PTR [esi-0x40]
  41b431:	push   ebp
  41b432:	jnp    0x41b464
  41b434:	mov    al,ds:0x87728a67
  41b439:	outs   dx,BYTE PTR ds:[esi]
  41b43a:	add    BYTE PTR [edi-0x7fdfe477],al
  41b440:	test   BYTE PTR [esi+ebp*2+0x5d],ah
  41b444:	js     0x41b497
  41b446:	ja     0x41b455
  41b448:	inc    edi
  41b449:	sub    edi,DWORD PTR [ecx]
  41b44b:	pop    eax
  41b44c:	push   esp
  41b44d:	adc    eax,0x6aa7e30b
  41b452:	outs   dx,BYTE PTR ds:[esi]
  41b453:	cmp    eax,0xc74677c
  41b458:	xor    esp,DWORD PTR [esi+ebp*2+0x4e]
  41b45c:	cmp    ebp,DWORD PTR [ebp+0x3a]
  41b45f:	or     DWORD PTR [ecx+ebp*2+0x4656f473],eax
  41b466:	ins    DWORD PTR es:[edi],dx
  41b467:	rdtsc  
  41b469:	fs popa 
  41b46b:	sbb    eax,0xd36e6a48
  41b470:	and    BYTE PTR [esi+0x6c],0x16
  41b474:	push   cs
  41b475:	fs or  esi,ebx
  41b478:	daa    
  41b479:	push   0x6e
  41b47b:	std    
  41b47c:	std    
  41b47d:	data16 je 0x41b43c
  41b480:	push   esp
  41b481:	push   eax
  41b482:	jo     0x41b450
	...
  41b4b4:	add    BYTE PTR [eax],al
  41b4b6:	and    ax,0xd95f
  41b4ba:	adc    BYTE PTR [ecx+0x67],ch
  41b4bd:	retf   0x5101
  41b4c0:	addr16 mov esi,0xca6d29f2
  41b4c6:	or     al,0x64
  41b4c8:	je     0x41b4d6
  41b4ca:	mov    dh,0x51
  41b4cc:	jb     0x41b49a
  41b4ce:	shr    DWORD PTR [ebx+ecx*1-0x1d],0xa7
  41b4d3:	push   0x6e
  41b4d5:	popf   
  41b4d6:	mov    ebp,0xa5cc7467
  41b4db:	addr16 popa 
  41b4dd:	xchg   BYTE PTR [eax+eiz*2+0x254e866e],bh
  41b4e4:	bound  eax,QWORD PTR [eax]
  41b4e6:	rcl    DWORD PTR [ebp+0x5d],cl
  41b4e9:	jb     0x41b4ce
  41b4eb:	push   es
  41b4ec:	or     dl,BYTE PTR [ebp-0x67]
  41b4ef:	pop    edi
  41b4f0:	jb     0x41b51f
  41b4f2:	mov    ebx,0xa66e616c
  41b4f7:	neg    DWORD PTR [edi]
  41b4f9:	dec    ebp
  41b4fa:	lods   eax,DWORD PTR ds:[esi]
  41b4fb:	aaa    
  41b4fc:	gs ins BYTE PTR es:[edi],dx
  41b4fe:	sahf   
  41b4ff:	sub    esi,DWORD PTR fs:[esp+ebp*8]
  41b503:	repz pop ds
  41b505:	sub    BYTE PTR [ecx+0x2b706956],bl
  41b50b:	cmp    eax,0x601e6265
  41b510:	aaa    
  41b511:	and    BYTE PTR [edi+0x12],ch
  41b514:	inc    ebp
  41b515:	inc    ebp
  41b516:	call   0x0:0x302dee
	...
  41b549:	add    BYTE PTR [eax],al
  41b54b:	add    cl,al
  41b54d:	and    edx,DWORD PTR [ebx+0x69]
  41b550:	pop    esp
  41b551:	ins    DWORD PTR es:[edi],dx
  41b552:	imul   esi,DWORD PTR [edi+0x49],0x21
  41b556:	xor    eax,0xa069338
  41b55b:	or     eax,0x6f3f0390
  41b560:	pop    esp
  41b561:	cmp    eax,0x26966e61
  41b566:	dec    esp
  41b567:	lods   al,BYTE PTR gs:[esi]
  41b569:	ins    BYTE PTR es:[edi],dx
  41b56a:	je     0x41b5d4
  41b56c:	inc    eax
  41b56d:	add    DWORD PTR [edi+ebp*2-0x57],ecx
  41b571:	bound  esi,QWORD PTR [ecx+ebp*2-0x53]
  41b575:	push   ebp
  41b576:	cmp    al,BYTE PTR [eax]
  41b578:	mov    ch,0x3e
  41b57a:	push   esp
  41b57b:	and    BYTE PTR [edi+0x30],ah
  41b57e:	and    BYTE PTR [eax-0xa],cl
  41b581:	push   cs
  41b582:	push   eax
  41b583:	das    
  41b584:	dec    ebx
  41b585:	adc    eax,0x4b500d30
  41b58a:	imul   esi,DWORD PTR [ebx-0x2a],0xfffffff8
  41b58e:	pop    ds
  41b58f:	and    eax,0xa0e7b63
  41b594:	mov    ds:0xb363648b,al
  41b599:	pop    eax
  41b59a:	sbb    esp,DWORD PTR [eax]
  41b59c:	dec    ecx
  41b59d:	(bad)  
  41b59e:	sub    ecx,DWORD PTR [ebx]
  41b5a0:	imul   ebp,DWORD PTR [ebp+0x5c866164],0x2e9e2b55
  41b5aa:	popa   
  41b5ab:	ins    DWORD PTR es:[edi],dx
  41b5ac:	xchg   DWORD PTR ds:0x656e,esi
	...
  41b5e2:	cmp    DWORD PTR [ebx+ebp*2],ecx
  41b5e5:	xchg   BYTE PTR fs:[esi],dl
  41b5e8:	pop    eax
  41b5e9:	outs   dx,DWORD PTR ds:[si]
  41b5eb:	inc    ebp
  41b5ec:	xor    BYTE PTR [eax],ah
  41b5ee:	mov    DWORD PTR [ebx],eax
  41b5f0:	push   ebx
  41b5f1:	cmp    edx,DWORD PTR [ebx+0x3c4107e1]
  41b5f7:	push   ss
  41b5f8:	outs   dx,BYTE PTR ds:[esi]
  41b5f9:	arpl   WORD PTR [eax-0x8],ax
  41b5fc:	push   0x6d
  41b5fe:	dec    ebp
  41b5ff:	loop   0x41b622
  41b601:	popa   
  41b602:	inc    edi
  41b603:	call   DWORD PTR [eax+0x63]
  41b606:	pop    esi
  41b607:	loop   0x41b641
  41b609:	jno    0x41b649
  41b60b:	fidiv  DWORD PTR [eax]
  41b60d:	aas    
  41b60e:	add    al,0x1
  41b610:	outs   dx,BYTE PTR ds:[esi]
  41b611:	je     0x41b66c
  41b613:	int3   
  41b614:	push   eax
  41b615:	ins    DWORD PTR es:[edi],dx
  41b616:	or     DWORD PTR ds:0xef026c70,eax
  41b61c:	pop    ss
  41b61d:	xor    ecx,DWORD PTR cs:[esp+ebp*1]
  41b621:	popa   
  41b622:	add    al,0xc1
  41b624:	push   ecx
  41b625:	pop    edi
  41b626:	test   esp,0x2fe6c5f
  41b62c:	and    al,0x4b
  41b62e:	mov    al,0x95
  41b630:	dec    eax
  41b631:	and    BYTE PTR [esi-0x7cc6ec02],cl
  41b637:	outs   dx,DWORD PTR ds:[esi]
  41b638:	ins    BYTE PTR es:[edi],dx
  41b639:	outs   dx,BYTE PTR ds:[esi]
  41b63a:	mov    edi,0xb2569605
  41b63f:	and    eax,0x87c1be0
  41b644:	loope  0x41b656
	...
  41b676:	add    BYTE PTR [eax],al
  41b678:	pop    ecx
  41b679:	add    eax,0x277503bd
  41b67e:	out    0x3f,eax
  41b680:	dec    ecx
  41b681:	daa    
  41b682:	rol    DWORD PTR [ebx],1
  41b684:	dec    ecx
  41b685:	daa    
  41b686:	rol    DWORD PTR [ebx],0x7d
  41b689:	pusha  
  41b68a:	jae    0x41b6f0
  41b68c:	xchg   ebx,eax
  41b68d:	ins    BYTE PTR es:[edi],dx
  41b68e:	sbb    dl,BYTE PTR [edx]
  41b690:	dec    ebp
  41b691:	popa   
  41b692:	dec    ebx
  41b693:	jo     0x41b6f8
  41b695:	inc    edi
  41b696:	dec    esp
  41b697:	pop    eax
  41b698:	sub    al,0x55
  41b69a:	inc    eax
  41b69b:	inc    edx
  41b69c:	jo     0x41b6fd
  41b69e:	dec    ebp
  41b69f:	imul   edx,DWORD PTR [ecx+0x3f],0x5406939
  41b6a6:	and    eax,0x3a305769
  41b6ab:	imul   edx,DWORD PTR [ecx+0x40],0x5485915
  41b6b2:	out    0x6e,eax
  41b6b4:	inc    edi
  41b6b5:	pusha  
  41b6b6:	ficom  DWORD PTR [ecx]
  41b6b8:	jge    0x41b71b
  41b6ba:	sti    
  41b6bb:	outs   dx,DWORD PTR ds:[esi]
  41b6bc:	arpl   WORD PTR [edx],si
  41b6be:	sti    
  41b6bf:	cs push bp
  41b6c2:	add    al,0x6e
  41b6c4:	xor    dl,BYTE PTR [ecx+0x6]
  41b6c7:	push   edx
  41b6c8:	sub    al,0x5e
  41b6ca:	add    al,0x4
  41b6cc:	arpl   WORD PTR [ebx+ecx*8+0x55],sp
  41b6d0:	sbb    al,0x55
  41b6d2:	rcl    BYTE PTR [edx],1
  41b6d4:	xor    DWORD PTR [edi],esp
  41b6d6:	retf   
  41b6d7:	outs   dx,DWORD PTR ds:[esi]
  41b6d8:	inc    DWORD PTR [eax+ebp*4]
  41b6db:	outs   dx,DWORD PTR ds:[esi]
	...
  41b70c:	add    BYTE PTR [eax],al
  41b70e:	mul    DWORD PTR [ebp-0x36]
  41b711:	xlat   BYTE PTR fs:[ebx]
  41b713:	push   0xffffffa8
  41b715:	ins    DWORD PTR es:[edi],dx
  41b716:	mov    edi,0xbfc7003e
  41b71b:	pop    ecx
  41b71c:	addr16 enter 0x6cb4,0x7a
  41b721:	mov    WORD PTR [ecx+0x6c],?
  41b724:	fs jmp 0x8aa514cb
  41b72a:	mov    ecx,0xbb826d39
  41b72f:	arpl   WORD PTR [ebx-0x74],cx
  41b732:	xchg   ebx,eax
  41b733:	arpl   WORD PTR [bp+di-0x4f],di
  41b737:	pop    ebp
  41b738:	addr16 jns 0x41b79b
  41b73b:	dec    ebx
  41b73c:	jb     0x41b6c2
  41b73e:	jnp    0x41b776
  41b740:	addr16 dec ebp
  41b742:	addr16 inc esi
  41b744:	jb     0x41b78a
  41b746:	mov    ecx,DWORD PTR [eax+0x6e]
  41b749:	pop    esp
  41b74a:	jl     0x41b7b4
  41b74c:	jb     0x41b796
  41b74e:	mov    ebp,DWORD PTR [eax+0x3f]
  41b751:	jmp    0x45a50e79
  41b756:	sbb    eax,0x674c6357
  41b75b:	inc    esi
  41b75c:	jb     0x41b78e
  41b75e:	das    
  41b75f:	pop    ecx
  41b760:	inc    ebp
  41b761:	or     al,0x1b
  41b763:	cmp    BYTE PTR [ecx+0x4],dh
  41b766:	adc    DWORD PTR [esi],edi
  41b768:	arpl   WORD PTR [eax],dx
  41b76a:	addr16 inc esi
  41b76c:	jb     0x41b77e
  41b76e:	mulps  xmm0,XMMWORD PTR [ebx+0x1]
	...
  41b7a2:	add    BYTE PTR [eax],al
  41b7a4:	aaa    
  41b7a5:	bound  esi,QWORD PTR [edx-0xb]
  41b7a8:	sub    ebp,DWORD PTR [eax+0x77]
  41b7ab:	jmp    0xf9b90ed3
  41b7b0:	sub    al,0x49
  41b7b2:	arpl   dx,bx
  41b7b4:	adc    al,0x57
  41b7b6:	ins    DWORD PTR es:[edi],dx
  41b7b7:	loopne 0x41b7e4
  41b7b9:	push   0x5723e977
  41b7be:	ja     0x41b799
  41b7c0:	or     al,0x37
  41b7c2:	arpl   WORD PTR [eax],ax
  41b7c4:	imul   ebx,DWORD PTR ss:[ebp+0x73],0x1f
  41b7c9:	inc    ebp
  41b7ca:	imul   ebp,DWORD PTR [esi+0xe],0x6b
  41b7ce:	js     0x41b844
  41b7d0:	cmp    dl,BYTE PTR [esi]
  41b7d2:	popa   
  41b7d3:	jbe    0x41b7c4
  41b7d5:	xor    eax,0x14e55474
  41b7da:	popa   
  41b7db:	ins    BYTE PTR es:[edi],dx
  41b7dc:	fadd   QWORD PTR [edi]
  41b7de:	dec    ebx
  41b7df:	jo     0x41b7c0
  41b7e1:	popa   
  41b7e2:	push   eax
  41b7e3:	jb     0x41b7da
  41b7e5:	fs popa 
  41b7e7:	jae    0x41b782
  41b7e9:	sbb    al,0x6b
  41b7eb:	imul   ebx,edi,0x61
  41b7ee:	add    BYTE PTR [ecx-0x79],cl
  41b7f1:	cmp    BYTE PTR [ecx+0x72],ah
  41b7f4:	cdq    
  41b7f5:	bound  ebp,QWORD PTR [esi+0x61]
  41b7f8:	mov    gs,WORD PTR [esp+ecx*2+0x6f]
  41b7fc:	popf   
  41b7fd:	push   0x61
  41b7ff:	fs inc ebp
  41b801:	arpl   WORD PTR [ecx+0x73],dx
  41b804:	das    
  41b805:	aaa    
  41b806:	add    BYTE PTR [edi+0x0],al
	...
  41b839:	add    BYTE PTR [edi],bl
  41b83b:	sub    eax,0x6c216f54
  41b840:	outs   dx,BYTE PTR ds:[esi]
  41b841:	dec    ecx
  41b842:	test   BYTE PTR [ebx+0x6b],ch
  41b845:	jb     0x41b89e
  41b847:	push   0x63656974
  41b84c:	add    BYTE PTR [ebx+0x65],al
  41b84f:	arpl   WORD PTR [esi+0x65],si
  41b852:	dec    eax
  41b853:	sub    eax,0xd6e694f
  41b858:	imul   edx,DWORD PTR [ebx-0x72],0x35
  41b85c:	outs   dx,BYTE PTR gs:[esi]
  41b85e:	pop    ebp
  41b85f:	push   ss
  41b860:	gs cmp ecx,DWORD PTR fs:[ecx]
  41b864:	dec    esp
  41b865:	outs   dx,DWORD PTR ds:[esi]
  41b866:	lods   eax,DWORD PTR ds:[esi]
  41b867:	pusha  
  41b868:	outs   dx,BYTE PTR ds:[esi]
  41b869:	push   ebp
  41b86a:	cdq    
  41b86b:	push   0x72
  41b86d:	inc    ecx
  41b86e:	arpl   si,bx
  41b870:	dec    ebp
  41b871:	ins    DWORD PTR es:[edi],dx
  41b872:	hlt    
  41b873:	(bad)  
  41b874:	push   esi
  41b875:	jo     0x41b82a
  41b877:	mov    gs,WORD PTR [edx+0x76]
  41b87a:	retf   0x66c0
  41b87d:	gs (bad) 
  41b87f:	jb     0x41b8e3
  41b881:	ins    BYTE PTR es:[edi],dx
  41b882:	into   
  41b883:	leave  
  41b884:	inc    edx
  41b885:	add    BYTE PTR [edx-0x4f8c9880],ah
  41b88b:	js     0x41b8c2
  41b88d:	ins    DWORD PTR es:[edi],dx
  41b88e:	mov    eax,0xb1506b81
  41b893:	test   DWORD PTR [ebx+0x67],edx
  41b896:	pop    DWORD PTR [ecx-0x236f9c9c]
  41b89c:	add    DWORD PTR [ecx+0x0],esp
	...
  41b8cf:	add    BYTE PTR [ecx+0x50745155],dl
  41b8d5:	mov    gs,WORD PTR [ebx]
  41b8d7:	fs (bad) 
  41b8d9:	cmp    BYTE PTR [ecx+eax*2],al
  41b8dc:	jle    0x41b90c
  41b8de:	push   eax
  41b8df:	dec    ebp
  41b8e0:	jae    0x41b923
  41b8e2:	push   0x51
  41b8e4:	push   0x2f
  41b8e6:	push   eax
  41b8e7:	arpl   WORD PTR [esi-0x11],cx
  41b8ea:	dec    edi
  41b8eb:	ins    DWORD PTR es:[edi],dx
  41b8ec:	push   ecx
  41b8ed:	dec    ecx
  41b8ee:	inc    ebx
  41b8ef:	add    BYTE PTR [eax],ah
  41b8f1:	inc    ecx
  41b8f2:	push   esi
  41b8f3:	je     0x41b913
  41b8f5:	adc    cl,BYTE PTR [edi+0x6b]
  41b8f8:	and    BYTE PTR [ecx],al
  41b8fa:	push   esi
  41b8fb:	je     0x41b947
  41b8fd:	or     ch,BYTE PTR [ebx+0x61]
  41b900:	inc    edx
  41b901:	lock pop esi
  41b903:	jno    0x41b91f
  41b905:	shl    BYTE PTR [esi],cl
  41b907:	je     0x41b915
  41b909:	into   
  41b90a:	pusha  
  41b90b:	add    BYTE PTR [eax],ah
  41b90d:	or     DWORD PTR [esi+0x74],edx
  41b910:	and    BYTE PTR [eax],cl
  41b912:	imul   esi,DWORD PTR [ecx-0x2],0xf16d4fee
  41b919:	add    al,0xcc
  41b91b:	add    esp,DWORD PTR [edx]
  41b91d:	push   edi
  41b91e:	loopne 0x41b973
  41b920:	test   DWORD PTR [ebx-0x36],0xd95bf054
  41b927:	pusha  
  41b928:	mov    ds:0xbc4fb968,al
  41b92d:	imul   edx,eax,0x66
  41b930:	lods   al,BYTE PTR ds:[esi]
  41b931:	pop    ecx
  41b932:	int3   
  41b933:	xor    eax,DWORD PTR [eax]
	...
  41b965:	add    cl,dl
  41b967:	pop    esp
  41b968:	mov    ch,0x64
  41b96a:	mov    bh,0x68
  41b96c:	mov    dl,0x60
  41b96e:	lods   al,BYTE PTR ds:[esi]
  41b96f:	add    eax,0x56303e7
  41b974:	out    0x3,eax
  41b976:	arpl   WORD PTR ds:0x56303e7,ax
  41b97c:	out    0x3,eax
  41b97e:	arpl   WORD PTR ds:0x56303e7,ax
  41b984:	out    0x3,eax
  41b986:	arpl   WORD PTR ds:0x56303e7,ax
  41b98c:	out    0x3,eax
  41b98e:	arpl   WORD PTR ds:0x56303e7,ax
  41b994:	out    0x3,eax
  41b996:	arpl   WORD PTR ds:0x56303e7,ax
  41b99c:	out    0x3,eax
  41b99e:	arpl   WORD PTR ds:0x56303e7,ax
  41b9a4:	out    0x3,eax
  41b9a6:	arpl   WORD PTR ds:0x56303e7,ax
  41b9ac:	out    0x3,eax
  41b9ae:	arpl   WORD PTR ds:0x56303e7,ax
  41b9b4:	out    0x3,eax
  41b9b6:	arpl   WORD PTR ds:0x56303e7,ax
  41b9bc:	out    0x3,eax
  41b9be:	arpl   WORD PTR ds:0x56303e7,ax
  41b9c4:	add    cl,ch
  41b9c6:	pusha  
  41b9c7:	add    eax,0xe900
	...
  41b9fc:	pusha  
  41b9fd:	add    eax,0x560e900
  41ba02:	add    cl,ch
  41ba04:	sbb    BYTE PTR [eax],bh
  41ba06:	inc    edi
  41ba07:	lods   eax,DWORD PTR ds:[esi]
  41ba08:	pusha  
  41ba09:	dec    esp
  41ba0a:	and    ebx,DWORD PTR [ecx]
  41ba0c:	jg     0x41ba3b
  41ba0e:	sub    ecx,DWORD PTR [edi+ebp*2]
  41ba11:	sbb    DWORD PTR [eax+0xc],ebx
  41ba14:	adc    BYTE PTR ds:0x247b9134,0x30
  41ba1b:	sti    
  41ba1c:	js     0x41ba42
  41ba1e:	xor    bl,bl
  41ba20:	js     0x41ba3e
  41ba22:	and    ebx,ecx
  41ba24:	push   esi
  41ba25:	sub    eax,0x2d4ed923
  41ba2a:	and    ebx,ecx
  41ba2c:	jbe    0x41ba5b
  41ba2e:	and    edi,DWORD PTR [ecx-0x46dcd292]
  41ba34:	jbe    0x41ba63
  41ba36:	and    edi,DWORD PTR [ecx-0x1684d292]
  41ba3c:	mov    eax,ds:0x80377464
  41ba41:	pop    ecx
  41ba42:	addr16 push edi
  41ba44:	mov    WORD PTR [esi],?
  41ba46:	ja     0x41baa2
  41ba48:	xchg   ebx,eax
  41ba49:	imul   esp,DWORD PTR fs:[eax],0x49
  41ba4d:	ins    DWORD PTR es:[di],dx
  41ba4f:	jmp    0x4fb41e9b
  41ba54:	sub    al,0x61
  41ba56:	xor    ebx,edi
  41ba58:	jp     0x41bac3
  41ba5a:	ins    BYTE PTR es:[edi],dx
  41ba5b:	cmp    eax,0x3e714867
	...
  41ba90:	add    BYTE PTR [eax],al
  41ba92:	dec    edx
  41ba93:	pop    edx
  41ba94:	ss aad 0x70
  41ba97:	push   ebx
  41ba98:	ins    DWORD PTR es:[edi],dx
  41ba99:	or     al,BYTE PTR [esi+edx*2]
  41ba9c:	jno    0x41ba87
  41ba9e:	push   edi
  41ba9f:	bound  esp,QWORD PTR [esi+0x0]
  41baa2:	xchg   esi,eax
  41baa3:	xor    eax,0xd67725d
  41baa8:	inc    esi
  41baa9:	popa   
  41baaa:	mov    BYTE PTR [eax],bl
  41baac:	push   eax
  41baad:	ins    BYTE PTR es:[edi],dx
  41baae:	ja     0x41bb15
  41bab0:	outs   dx,BYTE PTR gs:[esi]
  41bab2:	cdq    
  41bab3:	sbb    BYTE PTR [esi+0x54],al
  41bab6:	stos   BYTE PTR es:[edi],al
  41bab7:	sbb    BYTE PTR [eax+0x6f],cl
  41baba:	mov    DWORD PTR [eax+0x6f],eax
  41babd:	add    BYTE PTR [ecx],bl
  41babf:	pop    ebp
  41bac0:	data16 je 0x41bad8
  41bac3:	arpl   WORD PTR [edx+0x65],si
  41bac6:	out    dx,al
  41bac7:	inc    ebp
  41bac8:	pop    ebp
  41bac9:	jb     0x41bb13
  41bacb:	sbb    BYTE PTR [eax+0x6c],dl
  41bace:	mul    DWORD PTR [ebp+eiz*2+0x6e]
  41bad2:	fst    DWORD PTR [edi]
  41bad4:	inc    esi
  41bad5:	push   esp
  41bad6:	jmp    0x6f3f:0xc96f4817
  41badd:	add    cl,bl
  41badf:	pop    esp
  41bae0:	data16 je 0x41ba78
  41bae3:	arpl   WORD PTR [edx+0x65],si
  41bae6:	out    dx,al
  41bae7:	inc    ebp
  41bae8:	pop    ebp
  41bae9:	jb     0x41bad9
  41baeb:	sbb    BYTE PTR [ebp+0x76],bl
  41baee:	out    0x2f,eax
  41baf0:	inc    esp
  41baf1:	imul   ebp,DWORD PTR [ebx+0x676b5d],0x0
	...
  41bb27:	add    BYTE PTR [edx],dh
  41bb29:	pop    esp
  41bb2a:	outs   dx,DWORD PTR ds:[esi]
  41bb2b:	je     0x41baca
  41bb2d:	aaa    
  41bb2e:	jne    0x41bb8c
  41bb30:	test   BYTE PTR ds:0x3a2d4850,dl
  41bb36:	je     0x41bb38
  41bb38:	imul   ebx,DWORD PTR [esi+0x66],0x72648574
  41bb3f:	outs   dx,BYTE PTR gs:[esi]
  41bb41:	inc    ebx
  41bb42:	pop    ebp
  41bb43:	jb     0x41badd
  41bb45:	pop    ss
  41bb46:	dec    edi
  41bb47:	popa   
  41bb48:	push   esp
  41bb49:	xor    BYTE PTR [esp+eax*2+0x63],ah
  41bb4d:	add    eax,0x70c6c61
  41bb52:	dec    esp
  41bb53:	addr16 adc dl,dl
  41bb56:	push   0x41f20a72
  41bb5b:	push   esp
  41bb5c:	xor    esp,DWORD PTR [esi]
  41bb5e:	addr16 jno 0x41bb58
  41bb61:	fnsave [ecx]
  41bb63:	pop    edi
  41bb64:	lock stos BYTE PTR es:[edi],al
  41bb66:	push   eax
  41bb67:	ins    DWORD PTR es:[edi],dx
  41bb68:	icebp  
  41bb69:	leave  
  41bb6a:	add    DWORD PTR [eax-0xc],ecx
  41bb6d:	stos   BYTE PTR es:[edi],al
  41bb6e:	dec    ebp
  41bb6f:	dec    esi
  41bb70:	ret    0x5e91
  41bb73:	add    BYTE PTR [esi+0x63725e8b],ch
  41bb79:	mov    al,ds:0xdcbe6e6a
  41bb7e:	push   eax
  41bb7f:	popa   
  41bb80:	mov    ebx,0xb3745f7f
  41bb85:	mov    dh,0x6a
  41bb87:	outs   dx,BYTE PTR ds:[esi]
  41bb88:	mov    edx,0x4535dc
	...
  41bbbd:	add    BYTE PTR [ebx-0x59b3cb5b],bl
  41bbc3:	mov    al,BYTE PTR [ecx]
  41bbc5:	inc    edi
  41bbc6:	test   DWORD PTR [ebx+0x4d],ecx
  41bbc9:	pop    edi
  41bbca:	jg     0x41bb4c
  41bbcc:	cmp    eax,0x3fdc9167
  41bbd1:	je     0x41bc46
  41bbd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbd4:	addr16 movs DWORD PTR es:[di],DWORD PTR ds:[si]
  41bbd7:	cmp    eax,0xb636367
  41bbdc:	outs   dx,WORD PTR gs:[esi]
  41bbdf:	das    
  41bbe0:	arpl   WORD PTR [edx+0x46],si
  41bbe3:	and    BYTE PTR ds:0x680b4a68,bh
  41bbe9:	arpl   WORD PTR [ecx-0x10],dx
  41bbec:	sub    al,0x67
  41bbee:	xor    eax,0x30756540
  41bbf3:	cld    
  41bbf4:	inc    eax
  41bbf5:	ins    DWORD PTR es:[edi],dx
  41bbf6:	inc    esi
  41bbf7:	add    eax,0x693d6514
  41bbfc:	add    al,0x52
  41bbfe:	arpl   WORD PTR [edx],si
  41bc00:	push   es
  41bc01:	pop    esi
  41bc02:	pop    ss
  41bc03:	push   esi
  41bc04:	or     BYTE PTR [edx+0x0],dl
  41bc07:	xor    DWORD PTR [esi],ebp
  41bc09:	ins    BYTE PTR es:[edi],dx
  41bc0a:	add    al,0x52
  41bc0c:	or     esp,DWORD PTR [ecx+0x11]
  41bc0f:	xor    DWORD PTR [ebx],ebx
  41bc11:	mul    DWORD PTR [bp+di-0x5]
  41bc15:	and    esp,DWORD PTR [edx]
  41bc17:	pop    esi
  41bc18:	aam    0x68
  41bc1a:	or     al,0x5f
  41bc1c:	ret    
  41bc1d:	pusha  
  41bc1e:	icebp  
  41bc1f:	add    al,0xb3
  41bc21:	dec    esp
	...
  41bc52:	add    BYTE PTR [eax],al
  41bc54:	rcl    DWORD PTR [edx-0x2a],cl
  41bc57:	ins    BYTE PTR es:[edi],dx
  41bc58:	iret   
  41bc59:	(bad)  
  41bc5a:	iret   
  41bc5b:	add    esi,DWORD PTR [edx-0x2d9f4ca4]
  41bc61:	xor    edi,esp
  41bc63:	aaa    
  41bc64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc65:	push   ebp
  41bc66:	mov    edx,0x8a59bc4e
  41bc6b:	imul   ecx,DWORD PTR [edi-0x62c945ca],0x39
  41bc72:	mov    bh,0x3
  41bc74:	mov    edi,0x45658056
  41bc79:	pop    esp
  41bc7a:	xchg   ebp,eax
  41bc7b:	ins    BYTE PTR es:[edi],dx
  41bc7c:	arpl   WORD PTR [edi],bx
  41bc7e:	nop
  41bc7f:	gs jl  0x41bc87
  41bc82:	sahf   
  41bc83:	xor    bl,BYTE PTR [esi+0x63339347]
  41bc89:	dec    ecx
  41bc8a:	xor    BYTE PTR [edx],dh
  41bc8c:	arpl   WORD PTR [ecx+0x24],cx
  41bc8f:	ds lahf 
  41bc91:	cmp    al,0x39
  41bc93:	add    al,0x22
  41bc95:	cmp    BYTE PTR [ebx],dh
  41bc97:	inc    ecx
  41bc98:	sbb    eax,0x1c041739
  41bc9d:	inc    edx
  41bc9e:	das    
  41bc9f:	ins    DWORD PTR es:[edi],dx
  41bca0:	push   edx
  41bca1:	pop    ecx
  41bca2:	add    BYTE PTR [esi+0x11],al
  41bca5:	push   esi
  41bca6:	add    BYTE PTR [edx],bl
  41bca8:	cmp    al,0x67
  41bcaa:	je     0x41bcca
  41bcac:	inc    esi
  41bcad:	push   ebx
  41bcae:	arpl   WORD PTR ds:0xb6d6164,di
  41bcb4:	push   es
  41bcb5:	popa   
  41bcb6:	push   ecx
  41bcb7:	sub    al,BYTE PTR [eax]
	...
  41bce9:	add    BYTE PTR [esi],bl
  41bceb:	xor    eax,0x52202543
  41bcf0:	je     0x41bcf6
  41bcf2:	inc    ebp
  41bcf3:	cmp    DWORD PTR [eax-0x37],edx
  41bcf6:	outs   dx,BYTE PTR ds:[esi]
  41bcf7:	and    eax,0x620bfe48
  41bcfc:	pop    esp
  41bcfd:	mov    eax,0xce6d3921
  41bd02:	cld    
  41bd03:	bound  ebx,QWORD PTR [edi-0x25]
  41bd06:	pusha  
  41bd07:	ss ins DWORD PTR es:[edi],dx
  41bd09:	(bad)  
  41bd0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd0b:	push   edx
  41bd0c:	pop    edi
  41bd0d:	mov    ebx,0xcd4529c3
  41bd12:	mov    ebp,0x71c55f67
  41bd17:	inc    esi
  41bd18:	aas    
  41bd19:	cdq    
  41bd1a:	mov    ds:0x9c9c4129,eax
  41bd1f:	push   0x2570b546
  41bd24:	ss leave 
  41bd26:	push   eax
  41bd27:	push   edi
  41bd28:	ins    DWORD PTR es:[edi],dx
  41bd29:	xchg   DWORD PTR [ebx-0x7a6f8eaa],eax
  41bd2f:	pop    ebx
  41bd30:	pop    edi
  41bd31:	lea    ecx,[esp+edi*1+0x41]
  41bd35:	popf   
  41bd36:	test   DWORD PTR [edx+0x6c],ebx
  41bd39:	mov    edi,DWORD PTR [edi+0x57]
  41bd3c:	add    BYTE PTR [edx],bh
  41bd3e:	xchg   BYTE PTR [ebx+0x74],ah
  41bd41:	push   esi
  41bd42:	adc    BYTE PTR [edi+0x63],0x35
  41bd46:	sahf   
  41bd47:	pop    ecx
  41bd48:	ins    DWORD PTR es:[edi],dx
  41bd49:	dec    ebx
  41bd4a:	inc    eax
  41bd4b:	pop    ecx
  41bd4c:	push   ecx
	...
  41bd7d:	add    BYTE PTR [eax],al
  41bd7f:	add    BYTE PTR [ecx+0x48],bh
  41bd82:	push   eax
  41bd83:	inc    ebp
  41bd84:	inc    si
  41bd86:	jno    0x41bdfc
  41bd88:	das    
  41bd89:	or     edx,DWORD PTR [eax+edx*2+0x6a]
  41bd8d:	cli    
  41bd8e:	pop    ds
  41bd8f:	dec    eax
  41bd90:	push   ebp
  41bd91:	fs popa 
  41bd93:	pop    esp
  41bd94:	imul   eax,DWORD PTR [esi+0x54],0x6f
  41bd98:	gs pop ebp
  41bd9a:	bound  esp,QWORD PTR [ecx+0x78]
  41bd9d:	add    DWORD PTR [edi+0x6f],ecx
  41bda0:	pop    esp
  41bda1:	xor    eax,0x2b886173
  41bda6:	pop    esp
  41bda7:	inc    edi
  41bda8:	bound  sp,DWORD PTR [edx+0x61]
  41bdac:	jbe    0x41bdc3
  41bdae:	aas    
  41bdaf:	inc    ecx
  41bdb0:	stos   BYTE PTR es:[edi],al
  41bdb1:	or     ebx,DWORD PTR [ebx+eax*2-0x71]
  41bdb5:	cmp    al,0x61
  41bdb7:	inc    esi
  41bdb8:	push   ds
  41bdb9:	sbb    BYTE PTR [eax],ah
  41bdbb:	aaa    
  41bdbc:	push   0x11
  41bdbe:	jb     0x41be2f
  41bdc0:	sbb    al,0x2b
  41bdc2:	outs   dx,DWORD PTR ds:[esi]
  41bdc3:	jae    0x41bdf8
  41bdc5:	popa   
  41bdc6:	outs   dx,BYTE PTR ds:[esi]
  41bdc7:	popa   
  41bdc8:	es adc al,0x4d
  41bdcb:	inc    ebx
  41bdcc:	into   
  41bdcd:	pusha  
  41bdce:	imul   ebp,DWORD PTR [eax+ebx*8+0x66],0x72
  41bdd3:	add    cl,ch
  41bdd5:	pusha  
  41bdd6:	data16 je 0x41bdd6
  41bdd9:	data16 jb 0x41be41
  41bddc:	(bad)  
  41bddd:	or     BYTE PTR [edi+ebp*2-0x28],ch
  41bde1:	data16 ins BYTE PTR es:[edi],dx
  41bde3:	push   ebx
	...
  41be14:	add    BYTE PTR [eax],al
  41be16:	mov    ecx,0xd6455046
  41be1b:	inc    esp
  41be1c:	jno    0x41be92
  41be1e:	fisttp WORD PTR [ecx]
  41be20:	push   esp
  41be21:	push   eax
  41be22:	pop    edx
  41be23:	jmp    0x64d70647
  41be28:	popa   
  41be29:	pop    esp
  41be2a:	arpl   WORD PTR ds:0xb44543f,cx
  41be30:	push   0x4104262
  41be35:	push   ecx
  41be36:	xor    al,0x44
  41be38:	push   eax
  41be39:	jne    0x41be7d
  41be3b:	adc    BYTE PTR [ebp+0x5c],bl
  41be3e:	sbb    al,0xa
  41be40:	arpl   WORD PTR [edx+0x42],sp
  41be43:	repnz cs inc ecx
  41be46:	and    cl,BYTE PTR [esi]
  41be48:	cmp    eax,0x4fe9205c
  41be4d:	arpl   WORD PTR ds:0x4b203412,bx
  41be53:	mov    esi,0x3f47231
  41be58:	pop    ebp
  41be59:	jno    0x41be4b
  41be5b:	add    al,0x63
  41be5d:	outs   dx,BYTE PTR ds:[esi]
  41be5e:	add    cl,dl
  41be60:	xor    eax,0x648a204f
  41be65:	ins    DWORD PTR es:[edi],dx
  41be66:	idiv   DWORD PTR [edi-0x6f9c8d9e]
  41be6c:	cmp    al,0x6c
  41be6e:	les    edi,FWORD PTR [esi-0x604f939e]
  41be74:	inc    edx
  41be75:	push   eax
  41be76:	sahf   
  41be77:	push   0x7340
	...
  41beac:	mov    bh,0xb9
  41beae:	cmp    edx,DWORD PTR [ebx+edx*4-0x24]
  41beb2:	xor    eax,0x5f73bf45
  41beb7:	pop    edi
  41beb8:	mov    bh,0x8f
  41beba:	inc    eax
  41bebb:	aas    
  41bebc:	mov    bl,0x99
  41bebe:	xor    eax,0x5e708e41
  41bec3:	inc    esi
  41bec4:	mov    bh,0x6c
  41bec6:	and    DWORD PTR [eax-0x6f],edx
  41bec9:	jnp    0x41becc
  41becb:	pop    esp
  41becc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41becd:	and    BYTE PTR [edx+eiz*2-0x7e],0x48
  41bed2:	xor    BYTE PTR [ecx-0x5e],al
  41bed5:	add    eax,0x46874937
  41beda:	push   esp
  41bedb:	pop    eax
  41bedc:	inc    eax
  41bedd:	inc    ebx
  41bede:	cmp    esi,DWORD PTR [ebx+eax*4]
  41bee1:	cmp    DWORD PTR [eax+0x58],eax
  41bee4:	inc    eax
  41bee5:	add    eax,0x51504723
  41beea:	inc    esp
  41beeb:	dec    edx
  41beec:	pop    ss
  41beed:	xor    eax,0x58322fe7
  41bef2:	std    
  41bef3:	addr16 or al,0x51
  41bef6:	out    0x36,eax
  41bef8:	arpl   WORD PTR ss:[ebx],dx
  41befb:	pop    ebx
  41befc:	cmp    al,0x57
  41befe:	or     al,0x30
  41bf00:	sbb    eax,0xfb570859
  41bf05:	inc    edx
  41bf06:	pop    ds
  41bf07:	xor    al,0x27
  41bf09:	push   ss
  41bf0a:	out    0x36,eax
  41bf0c:	push   cs
  41bf0d:	arpl   bx,di
  41bf0f:	pop    edx
	...
  41bf40:	add    BYTE PTR [eax],al
  41bf42:	adc    al,0x57
  41bf44:	add    al,0x30
  41bf46:	and    eax,0xfb56c859
  41bf4b:	inc    edx
  41bf4c:	mov    edi,0xc6366333
  41bf51:	imul   ecx,edi,0xc055c852
  41bf57:	sub    DWORD PTR [ebp-0x30a95ba1],ebp
  41bf5d:	dec    ecx
  41bf5e:	fwait
  41bf5f:	xor    eax,0x3c631793
  41bf64:	mov    ebp,0x9364b756
  41bf69:	pop    edi
  41bf6a:	rcl    BYTE PTR [edi-0x5d],0x64
  41bf6e:	xchg   edi,eax
  41bf6f:	pop    ebp
  41bf70:	mov    bh,0x64
  41bf72:	(bad)  
  41bf73:	pop    ebp
  41bf74:	out    0x53,eax
  41bf76:	lods   al,BYTE PTR ds:[esi]
  41bf77:	push   ecx
  41bf78:	pop    DWORD PTR [ebx]
  41bf7a:	pushf  
  41bf7b:	pop    ebx
  41bf7c:	jp     0x41bfd5
  41bf7e:	pushf  
  41bf7f:	pop    ecx
  41bf80:	add    BYTE PTR [ebp+0x755f3540],al
  41bf86:	mov    BYTE PTR ds:0x2a8b4844,al
  41bf8c:	inc    esi
  41bf8d:	dec    esi
  41bf8e:	inc    ebx
  41bf8f:	popa   
  41bf90:	arpl   WORD PTR [ebx+0x5f],bx
  41bf93:	sub    DWORD PTR [ecx+0x40],edx
  41bf96:	sub    esp,DWORD PTR [esi+0x71]
  41bf99:	pop    ss
  41bf9a:	cmp    ebp,DWORD PTR [edx]
  41bf9c:	je     0x41bf87
  41bf9e:	mov    WORD PTR [edx],?
  41bfa0:	jae    0x41bfe2
  41bfa2:	cmp    al,0x5c
  41bfa4:	cs inc ebp
	...
  41bfd6:	add    BYTE PTR [eax],al
  41bfd8:	inc    esi
  41bfd9:	push   ecx
  41bfda:	add    BYTE PTR [ebp+0x67],al
  41bfdd:	bound  esi,QWORD PTR [ecx+0x15]
  41bfe0:	add    BYTE PTR [edi+0x77],dl
  41bfe3:	(bad)  
  41bfe4:	cld    
  41bfe5:	sub    DWORD PTR [ecx+ebp*8+0x3c],esi
  41bfe9:	inc    ebx
  41bfea:	ins    BYTE PTR es:[edi],dx
  41bfeb:	or     BYTE PTR [ebx*2+0x29372146],ch
  41bff2:	xor    ecx,ebp
  41bff4:	inc    esp
  41bff5:	inc    ebx
  41bff6:	ins    BYTE PTR es:[edi],dx
  41bff7:	or     BYTE PTR [ebx*2+0x2930c146],dl
  41bffe:	xor    al,0xe9
  41c000:	mov    WORD PTR [edi],?
  41c002:	(bad)
  41c006:	addr16 mov ebp,0xa50028ac
  41c00c:	lods   eax,DWORD PTR ds:[esi]
  41c00d:	pusha  
  41c00e:	je     0x41bfd4
  41c010:	ret    
  41c011:	sub    BYTE PTR [esi-0x38],ch
  41c014:	leave  
  41c015:	fs jb  0x41c017
  41c018:	cwde   
  41c019:	pop    esp
  41c01a:	ins    BYTE PTR es:[edi],dx
  41c01b:	jmp    0x8aa51394
  41c020:	mov    edx,DWORD PTR [edi+0x74]
  41c023:	call   0x56b6:0x8476538b
  41c02a:	cs add dl,ah
  41c02d:	gs ins BYTE PTR es:[edi],dx
  41c02f:	add    dh,bl
  41c031:	pop    esi
  41c032:	gs ins BYTE PTR es:[edi],dx
  41c034:	out    0x3a,eax
  41c036:	gs ins BYTE PTR es:[edi],dx
  41c038:	outs   dx,BYTE PTR ds:[esi]
  41c039:	popa   
  41c03a:	cs js  0x41c03d
	...
  41c06d:	add    BYTE PTR [edi+0x2d530065],cl
  41c073:	pop    ebx
  41c074:	je     0x41c0ed
  41c076:	sub    ebp,DWORD PTR [edi]
  41c078:	popa   
  41c079:	pop    esp
  41c07a:	test   BYTE PTR [esp+ebp*2],ch
  41c07d:	sub    BYTE PTR gs:[esp+ebp*2],0x6c
  41c082:	sub    eax,DWORD PTR [ecx]
  41c084:	dec    edi
  41c085:	outs   dx,DWORD PTR ds:[esi]
  41c086:	and    al,0x2d
  41c088:	jae    0x41c0eb
  41c08a:	push   0x53465c60
  41c08f:	gs popa 
  41c091:	pop    edx
  41c092:	jae    0x41c0f9
  41c094:	ins    BYTE PTR es:[edi],dx
  41c095:	popa   
  41c096:	stos   BYTE PTR es:[edi],al
  41c097:	inc    ecx
  41c098:	ins    BYTE PTR es:[edi],dx
  41c099:	imul   esp,DWORD PTR [edi+0x63],0x63530074
  41c0a0:	outs   dx,DWORD PTR ds:[esi]
  41c0a1:	je     0x41c10e
  41c0a3:	gs ins BYTE PTR es:[edi],dx
  41c0a5:	pop    edi
  41c0a6:	inc    esi
  41c0a7:	sub    al,0x72
  41c0a9:	add    BYTE PTR [edx+0x66],al
  41c0ac:	outs   dx,DWORD PTR ds:[esi]
  41c0ad:	je     0x41c129
  41c0af:	movq   mm4,QWORD PTR [ebp+0x38]
  41c0b3:	add    al,0x50
  41c0b5:	popa   
  41c0b6:	cmp    DWORD PTR [ecx],esi
  41c0b8:	add    BYTE PTR [eax+0xd],dl
  41c0bb:	xor    dh,BYTE PTR [eax+eax*1-0x18]
  41c0bf:	pop    esi
  41c0c0:	imul   ebp,DWORD PTR [edi-0xa],0x2344205e
  41c0c7:	xor    al,BYTE PTR [eax]
  41c0c9:	push   ebx
  41c0ca:	daa    
  41c0cb:	xor    dh,BYTE PTR [esi+0x65]
  41c0ce:	enter  0x5423,0x79
	...
  41c102:	add    BYTE PTR [eax],al
  41c104:	cli    
  41c105:	pop    esi
  41c106:	add    BYTE PTR [ebx+0x63],dl
  41c109:	jns    0x41c15e
  41c10b:	jbe    0x41c093
  41c10d:	ins    BYTE PTR es:[edi],dx
  41c10e:	pop    ds
  41c10f:	dec    eax
  41c110:	je     0x41c15d
  41c112:	push   ebp
  41c113:	add    BYTE PTR [eax+0x7e765381],dl
  41c119:	dec    esp
  41c11a:	pop    ds
  41c11b:	push   ebx
  41c11c:	jo     0x41c09f
  41c11e:	push   ebx
  41c11f:	add    BYTE PTR [eax+0x46765639],dl
  41c125:	sub    al,0x22
  41c127:	push   eax
  41c128:	inc    edx
  41c129:	sub    edx,DWORD PTR [ebx+0x0]
  41c12c:	xor    BYTE PTR [ecx+0x56],al
  41c12f:	jbe    0x41c16f
  41c131:	or     al,0x22
  41c133:	push   eax
  41c134:	dec    esp
  41c135:	or     al,0x58
  41c137:	add    BYTE PTR [ebx],dl
  41c139:	cmp    eax,0xeb636858
  41c13e:	fs jb  0x41c16e
  41c141:	stc    
  41c142:	push   ebp
  41c143:	push   esp
  41c144:	sbb    ch,dh
  41c146:	add    BYTE PTR fs:[edi],ah
  41c149:	std    
  41c14a:	push   edx
  41c14b:	je     0x41c190
  41c14d:	or     esp,DWORD PTR [ebp+0x72]
  41c150:	or     eax,0x2b2055f9
  41c155:	not    DWORD PTR [edx+0x74]
  41c158:	arpl   WORD PTR [edx],sp
  41c15a:	popa   
  41c15b:	jno    0x41c154
  41c15d:	mov    ebp,0xa7f16334
  41c162:	data16 jb 0x41c0e8
  41c165:	xchg   ecx,eax
  41c166:	push   esp
  41c167:	arpl   WORD PTR [eax],ax
	...
  41c199:	add    cl,dl
  41c19b:	fdivr  QWORD PTR ds:0x21b0d05f
  41c1a1:	push   ecx
  41c1a2:	mov    esi,0xb163578a
  41c1a7:	cld    
  41c1a8:	xor    ebx,DWORD PTR [edi-0x50]
  41c1ab:	mov    eax,DWORD PTR [ecx]
  41c1ad:	dec    esp
  41c1ae:	ret    0x558b
  41c1b1:	and    BYTE PTR [eax-0x6aaa73fb],dl
  41c1b7:	pusha  
  41c1b8:	cdq    
  41c1b9:	and    esi,DWORD PTR [ebx+0x63579956]
  41c1bf:	cmp    DWORD PTR [eax-0x65da70ac],ecx
  41c1c5:	data16 jno 0x41c217
  41c1c8:	test   BYTE PTR [ebp+0x43],dl
  41c1cb:	xor    eax,0x57b5788
  41c1d0:	fwait
  41c1d1:	bound  esi,QWORD PTR [edx+0x51]
  41c1d4:	pop    es
  41c1d5:	xor    eax,DWORD PTR [eax+0x53]
  41c1d8:	push   ebp
  41c1d9:	imul   edx,DWORD PTR [ecx+0x25],0x60534d3b
  41c1e0:	out    0x45,eax
  41c1e2:	das    
  41c1e3:	xor    eax,0x4f1c3e07
  41c1e8:	push   eax
  41c1e9:	addr16 adc al,0x51
  41c1ec:	inc    esi
  41c1ed:	push   edx
  41c1ee:	arpl   WORD PTR [edi],di
  41c1f0:	adc    esi,DWORD PTR [ebx+eax*4]
  41c1f3:	inc    edx
  41c1f4:	push   ss
  41c1f5:	popa   
  41c1f6:	or     BYTE PTR [ebp+ecx*1+0x68],ah
  41c1fa:	add    BYTE PTR [ebx-0x19],dl
  41c1fd:	add    BYTE PTR gs:[eax],al
	...
  41c230:	pop    ss
  41c231:	push   ebp
  41c232:	sti    
  41c233:	pop    esp
  41c234:	adc    dl,BYTE PTR [ecx-0x2b]
  41c237:	push   edi
  41c238:	sti    
  41c239:	push   eax
  41c23a:	out    0x2f,eax
  41c23c:	and    DWORD PTR [eax+0x3],edx
  41c23f:	pusha  
  41c240:	add    BYTE PTR [ecx+0x17],dl
  41c243:	push   edx
  41c244:	not    BYTE PTR [ebp-0x33]
  41c247:	and    esi,DWORD PTR [edx-0x31a83aaa]
  41c24d:	fldcw  WORD PTR fs:[eax+0x63]
  41c251:	pop    ss
  41c252:	ret    
  41c253:	fs iret 
  41c255:	add    eax,0x52b36215
  41c25a:	out    0x32,eax
  41c25c:	(bad)  
  41c25d:	pop    edi
  41c25e:	add    BYTE PTR [ebp-0x3b8dd96b],bh
  41c264:	je     0x41c2a9
  41c266:	push   eax
  41c267:	scas   eax,DWORD PTR es:[edi]
  41c268:	push   esp
  41c269:	xor    eax,0x59bbab5c
  41c26e:	ins    BYTE PTR es:[edi],dx
  41c26f:	mov    WORD PTR [ebp+eiz*1+0x58a59b50],?
  41c276:	leavew 
  41c278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c279:	xor    DWORD PTR [eax-0x63],edx
  41c27c:	mov    ds:0x60876726,eax
  41c281:	xor    al,0x6d
  41c283:	xchg   DWORD PTR [eax+edx*2+0x294a5b5f],ecx
  41c28a:	inc    edx
  41c28b:	push   esp
  41c28c:	inc    ebx
  41c28d:	pop    ecx
  41c28e:	arpl   WORD PTR [ebp-0x69],bx
  41c291:	push   ebx
  41c292:	ins    DWORD PTR es:[edi],dx
  41c293:	add    BYTE PTR ds:[eax],al
	...
  41c2c6:	cmp    eax,0x45565125
  41c2cb:	push   ecx
  41c2cc:	jne    0x41c316
  41c2ce:	adc    DWORD PTR [edx+0x5c],esp
  41c2d1:	sub    ecx,DWORD PTR [edx]
  41c2d3:	pop    ecx
  41c2d4:	ins    BYTE PTR es:[edi],dx
  41c2d5:	inc    esp
  41c2d6:	or     esi,DWORD PTR ds:0x5f3c1672
  41c2dc:	and    BYTE PTR [edi],ah
  41c2de:	pop    ebx
  41c2df:	xor    eax,0x5e032a20
  41c2e4:	arpl   di,di
  41c2e6:	sub    al,0x29
  41c2e8:	dec    ebx
  41c2e9:	or     BYTE PTR [esi],bl
  41c2eb:	push   edi
  41c2ec:	add    BYTE PTR [edx],bl
  41c2ee:	adc    al,0x5f
  41c2f0:	je     0x41c2f0
  41c2f2:	pop    es
  41c2f3:	push   ebx
  41c2f4:	arpl   WORD PTR ds:0xbd463521,cx
  41c2fa:	nop
  41c2fb:	popa   
  41c2fc:	inc    edx
  41c2fd:	aam    0xb4
  41c2ff:	xor    DWORD PTR [ebx-0x23],esp
  41c302:	adc    BYTE PTR [ebp+0x72],0xbe
  41c306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c307:	sub    esp,DWORD PTR [eax]
  41c309:	add    BYTE PTR [edi*8+0x59055c4f],cl
  41c310:	je     0x41c37b
  41c312:	and    eax,0xc9006f63
  41c317:	arpl   WORD PTR [esi+0x74],sp
  41c31a:	std    
  41c31b:	sub    DWORD PTR [edx+0x65],esi
  41c31e:	(bad)  
  41c31f:	inc    esi
  41c320:	jno    0x41c38e
  41c322:	out    0x2d,al
  41c324:	je     0x41c376
  41c326:	call   0xa82e8e
	...
  41c35b:	add    BYTE PTR [edx],ch
  41c35d:	clc    
  41c35e:	push   0x66
  41c360:	outs   dx,BYTE PTR ds:[esi]
  41c361:	pop    ebx
  41c362:	pop    ebp
  41c363:	jb     0x41c344
  41c365:	hlt    
  41c366:	inc    ecx
  41c367:	jne    0x41c3cf
  41c369:	fs popa 
  41c36b:	je     0x41c307
  41c36d:	push   edi
  41c36e:	imul   ebp,DWORD PTR [edi+0x1c],0xffffffe9
  41c372:	inc    ebp
  41c373:	push   esp
  41c374:	mov    ch,cl
  41c376:	ds ins BYTE PTR es:[edi],dx
  41c378:	and    ebp,DWORD PTR [esi+ebp*2]
  41c37b:	je     0x41c303
  41c37d:	add    dh,BYTE PTR [eax+0x74]
  41c380:	adc    esp,DWORD PTR [edx+0x6e]
  41c383:	jae    0x41c33f
  41c385:	cmc    
  41c386:	push   0x66
  41c388:	outs   dx,BYTE PTR ds:[esi]
  41c389:	pop    edx
  41c38a:	pop    ebp
  41c38b:	jb     0x41c3fc
  41c38d:	cmc    
  41c38e:	inc    ecx
  41c38f:	push   eax
  41c390:	cmp    al,0xfd
  41c392:	dec    edi
  41c393:	add    BYTE PTR [esi+0x28],al
  41c396:	outs   dx,DWORD PTR ds:[esi]
  41c397:	je     0x41c3e2
  41c399:	sub    al,0x6f
  41c39b:	jae    0x41c3f0
  41c39d:	bound  ebp,QWORD PTR [esi+0x46]
  41c3a0:	push   ebx
  41c3a1:	and    eax,0x60490061
  41c3a6:	je     0x41c40d
  41c3a8:	imul   ecx,DWORD PTR [ebp+eiz*2+0x72],0x736dff4a
  41c3b0:	cs daa 
  41c3b2:	ins    BYTE PTR es:[edi],dx
  41c3b3:	ins    BYTE PTR es:[edi],dx
  41c3b4:	arpl   WORD PTR [edx+0x5a],si
  41c3b7:	jb     0x41c34b
  41c3b9:	scas   al,BYTE PTR es:[edi]
  41c3ba:	sbb    edi,DWORD PTR [eax-0x32]
  41c3bd:	fiadd  DWORD PTR [ecx]
  41c3bf:	pop    esp
	...
  41c3f0:	add    BYTE PTR [eax],al
  41c3f2:	nop
  41c3f3:	shl    DWORD PTR [edx+0x72],1
  41c3f6:	mov    bh,0x74
  41c3f8:	xor    eax,0x626c6350
  41c3fd:	jbe    0x41c38b
  41c3ff:	mov    al,ds:0x9f7e745a
  41c404:	sbb    esp,DWORD PTR [edx+eax*4-0x5e]
  41c408:	add    DWORD PTR [eax+0x7a],ecx
  41c40b:	lahf   
  41c40c:	push   ebp
  41c40d:	ins    DWORD PTR es:[edi],dx
  41c40e:	jno    0x41c395
  41c410:	sbb    esp,DWORD PTR [edx+eax*4+0x3a]
  41c414:	add    DWORD PTR [edi-0x79],ebx
  41c417:	xchg   edx,eax
  41c418:	dec    edi
  41c419:	bound  edi,QWORD PTR [eax-0x7c]
  41c41c:	gs pop edi
  41c41e:	push   edi
  41c41f:	scas   al,BYTE PTR es:[edi]
  41c420:	push   edx
  41c421:	jae    0x41c46d
  41c423:	dec    edi
  41c424:	push   edi
  41c425:	cs inc edi
  41c427:	dec    ebp
  41c428:	pop    eax
  41c429:	add    BYTE PTR [edi],ah
  41c42b:	cli    
  41c42c:	push   esp
  41c42d:	jb     0x41c470
  41c42f:	pop    ebx
  41c430:	inc    esi
  41c431:	push   esp
  41c432:	adc    ebp,DWORD PTR [esi+0x2456d30]
  41c438:	push   ebx
  41c439:	pop    edi
  41c43a:	xor    DWORD PTR [ecx+0x30],ecx
  41c43d:	push   esp
  41c43e:	push   ss
  41c43f:	and    BYTE PTR [edx+0x6d],ah
  41c442:	sbb    eax,0xfa0033fa
  41c447:	or     ecx,DWORD PTR [edi+0x74]
  41c44a:	add    al,dl
  41c44c:	pop    ebp
  41c44d:	jo     0x41c451
  41c44f:	ret    0x59
  41c452:	adc    BYTE PTR [ebx],dl
  41c454:	data16 je 0x41c457
	...
  41c487:	add    ah,dh
  41c489:	or     al,0x52
  41c48b:	arpl   WORD PTR [edi],ax
  41c48d:	pop    ds
  41c48e:	pop    ebx
  41c48f:	je     0x41c453
  41c491:	add    eax,0x4b9d45c3
  41c496:	mov    bl,0x33
  41c498:	arpl   WORD PTR [esi-0x27],ax
  41c49b:	mov    di,0xbd28
  41c49f:	push   edi
  41c4a0:	les    esp,FWORD PTR [ebx+edx*8]
  41c4a3:	xor    BYTE PTR [ecx+esi*1+0x37a203b3],dl
  41c4aa:	int3   
  41c4ab:	shl    BYTE PTR [bp+di],0xb3
  41c4af:	pop    edx
  41c4b0:	mov    esp,0x805baa31
  41c4b5:	es xchg edx,eax
  41c4b7:	add    esi,DWORD PTR [edx-0x71a872ce]
  41c4bd:	and    al,0x99
  41c4bf:	data16 lahf 
  41c4c1:	push   esi
  41c4c2:	xchg   esi,eax
  41c4c3:	push   edi
  41c4c4:	xchg   esp,eax
  41c4c5:	popa   
  41c4c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4c7:	inc    ebp
  41c4c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4c9:	pop    ecx
  41c4ca:	xchg   edi,eax
  41c4cb:	das    
  41c4cc:	xchg   esi,eax
  41c4cd:	xor    eax,0x334e5a73
  41c4d2:	pop    edx
  41c4d3:	add    al,0x33
  41c4d5:	and    al,0x5a
  41c4d7:	push   edi
  41c4d8:	push   esi
  41c4d9:	xor    bl,BYTE PTR [ecx+0x60]
  41c4dc:	arpl   WORD PTR [eax+0x5a],bx
  41c4df:	popa   
  41c4e0:	xor    DWORD PTR [ebx+0x48],edx
  41c4e3:	pop    ecx
  41c4e4:	inc    eax
  41c4e5:	add    eax,0x39325b2f
  41c4ea:	sub    BYTE PTR [eax+0x0],ah
	...
  41c51d:	add    BYTE PTR [ecx],dh
  41c51f:	ss out 0x35,eax
  41c522:	add    BYTE PTR [eax],dh
  41c524:	push   ss
  41c525:	push   eax
  41c526:	add    BYTE PTR [ecx+0x10],cl
  41c529:	push   esi
  41c52a:	arpl   WORD PTR [ebp+0x6],dx
  41c52d:	push   esi
  41c52e:	syscall 
  41c530:	pop    ds
  41c531:	pop    ebx
  41c532:	repnz cmp BYTE PTR ds:0xe7280865,dh
  41c539:	xor    edi,esi
  41c53b:	ss add ch,bh
  41c53e:	pusha  
  41c53f:	push   esi
  41c540:	jno    0x41c546
  41c542:	mov    ch,0x33
  41c544:	pop    edi
  41c545:	aam    0xc3
  41c547:	add    eax,0x34b5c850
  41c54c:	jne    0x41c514
  41c54e:	scas   al,BYTE PTR es:[edi]
  41c54f:	sub    DWORD PTR [eax],eax
  41c551:	mov    eax,ds:0xad743499
  41c556:	xchg   edi,eax
  41c557:	aaa    
  41c558:	dec    esi
  41c559:	enter  0x268b,0x0
  41c55d:	call   0x3787:0xb6742b89
  41c564:	arpl   bp,ax
  41c566:	popf   
  41c567:	xor    BYTE PTR [esi-0x79],ah
  41c56a:	and    DWORD PTR [esi],0x41
  41c56d:	pushf  
  41c56e:	mov    al,0xe5
  41c570:	push   eax
  41c571:	jle    0x41c4f5
  41c573:	cmp    DWORD PTR [ebp-0x78],esi
  41c576:	mov    fs,WORD PTR [esi]
  41c578:	pop    esp
  41c579:	mov    al,0x8a
  41c57b:	cmp    DWORD PTR [ebx+0x7b],esp
  41c57e:	mov    ah,BYTE PTR [esi]
  41c580:	je     0x41c50f
	...
  41c5b2:	add    BYTE PTR [eax],al
  41c5b4:	nop
  41c5b5:	aaa    
  41c5b6:	ins    DWORD PTR es:[edi],dx
  41c5b7:	dec    edi
  41c5b8:	xor    DWORD PTR ss:[ebx+0x5a],esp
  41c5bc:	addr16 push esp
  41c5be:	ins    DWORD PTR es:[edi],dx
  41c5bf:	dec    edi
  41c5c0:	xor    edi,DWORD PTR [eax]
  41c5c2:	pop    edi
  41c5c3:	pop    ebx
  41c5c4:	inc    edx
  41c5c5:	popa   
  41c5c6:	inc    esi
  41c5c7:	sbb    eax,0x3b5f586f
  41c5cc:	inc    edx
  41c5cd:	popa   
  41c5ce:	inc    ecx
  41c5cf:	es ins DWORD PTR es:[edi],dx
  41c5d1:	inc    esi
  41c5d2:	inc    esi
  41c5d3:	adc    eax,0x10516157
  41c5d8:	xor    esp,DWORD PTR [esi]
  41c5da:	jno    0x41c5c5
  41c5dc:	dec    eax
  41c5dd:	xor    BYTE PTR [ecx+0x1d],dh
  41c5e0:	pop    edi
  41c5e1:	push   esi
  41c5e2:	jno    0x41c5e8
  41c5e4:	adc    eax,0x4d005005
  41c5e9:	pop    ebx
  41c5ea:	je     0x41c5ec
  41c5ec:	dec    edx
  41c5ed:	idiv   bh
  41c5ef:	dec    edi
  41c5f0:	pop    bp
  41c5f2:	push   edx
  41c5f3:	add    BYTE PTR [ecx-0x8],bh
  41c5f6:	inc    edi
  41c5f7:	add    BYTE PTR [edx],bh
  41c5f9:	pop    ebx
  41c5fa:	imul   esp,DWORD PTR [esi+0x33],0x59
  41c5fe:	popa   
  41c5ff:	jae    0x41c65d
  41c601:	push   ecx
  41c602:	imul   ebp,DWORD PTR [edx+ecx*2-0x17],0xe4da5445
  41c60a:	inc    eax
  41c60b:	js     0x41c5f7
  41c60d:	pop    eax
  41c60e:	imul   esi,DWORD PTR [edx+0x17],0x5b
  41c612:	add    BYTE PTR [ebx-0x23],dl
  41c615:	es je  0x41c68f
	...
  41c648:	add    BYTE PTR [eax],al
  41c64a:	jmp    0x41c6a6
  41c64c:	popa   
  41c64d:	pop    esp
  41c64e:	(bad)  
  41c64f:	lock dec edi
  41c651:	and    BYTE PTR [edi+0x7d6c704c],dh
  41c657:	pop    edx
  41c658:	popa   
  41c659:	jb     0x41c619
  41c65b:	inc    esi
  41c65c:	push   esp
  41c65d:	push   eax
  41c65e:	sbb    al,BYTE PTR [esi+0x78]
  41c661:	jo     0x41c641
  41c663:	pop    ebx
  41c664:	jb     0x41c6cb
  41c666:	pop    eax
  41c667:	call   0x627a35be
  41c66c:	outs   dx,DWORD PTR ds:[esi]
  41c66d:	jo     0x41c68a
  41c66f:	sub    ah,BYTE PTR [ecx+0x5c]
  41c672:	jg     0x41c6b7
  41c674:	aas    
  41c675:	push   esp
  41c676:	jge    0x41c6d6
  41c678:	ins    BYTE PTR es:[edi],dx
  41c679:	inc    edx
  41c67a:	sub    edx,DWORD PTR [edi+0x29]
  41c67d:	xor    ch,BYTE PTR [eax+0x67420010]
  41c683:	push   ebp
  41c684:	je     0x41c6f5
  41c686:	pop    esp
  41c687:	pop    edx
  41c688:	add    BYTE PTR [ebx+0x6d],dl
  41c68b:	and    esi,DWORD PTR [edi+esi*2+0x5b]
  41c68f:	push   edi
  41c690:	popa   
  41c691:	pop    esp
  41c692:	arpl   ax,si
  41c694:	das    
  41c695:	push   eax
  41c696:	inc    ebx
  41c697:	jmp    0x174936e7
  41c69c:	push   esi
  41c69d:	arpl   cx,si
  41c69f:	and    DWORD PTR [edx+esi*2],esi
  41c6a2:	hlt    
  41c6a3:	mulps  xmm5,XMMWORD PTR [esi+eax*8-0x45]
  41c6a8:	add    DWORD PTR [eax-0x3e],edx
  41c6ab:	fist   DWORD PTR [ebp+esi*2+0x0]
	...
  41c6df:	add    BYTE PTR [esp+ebx*8-0x324cffa3],bh
  41c6e6:	push   esp
  41c6e7:	jno    0x41c69d
  41c6e9:	jg     0x41c73e
  41c6eb:	fs pop ebp
  41c6ee:	push   ecx
  41c6ef:	arpl   WORD PTR [ebx+0x76],sp
  41c6f2:	pop    eax
  41c6f3:	jno    0x41c6a4
  41c6f5:	scas   al,BYTE PTR es:[edi]
  41c6f6:	xor    eax,0x57c5846d
  41c6fb:	add    BYTE PTR [ebx+0x63745397],dh
  41c701:	jne    0x41c75a
  41c703:	pop    DWORD PTR [di+0x6c62]
  41c708:	xchg   ebx,eax
  41c709:	lea    ecx,[ebp+0x68]
  41c70c:	arpl   WORD PTR [eax+0x4d],si
  41c70f:	jo     0x41c6a1
  41c711:	xchg   ebp,eax
  41c712:	dec    ebp
  41c713:	arpl   WORD PTR ds:0x636c5636,si
  41c719:	xchg   edx,eax
  41c71a:	aas    
  41c71b:	jb     0x41c767
  41c71d:	dec    edi
  41c71e:	popa   
  41c71f:	je     0x41c767
  41c721:	sbb    eax,DWORD PTR [esi+ebp*1]
  41c724:	cmp    cl,BYTE PTR [eax+0x59]
  41c727:	add    BYTE PTR [edi],bl
  41c729:	clc    
  41c72a:	pusha  
  41c72b:	outs   dx,BYTE PTR ds:[esi]
  41c72c:	pop    ds
  41c72d:	inc    ebp
  41c72e:	pop    ebx
  41c72f:	arpl   WORD PTR [edi],cx
  41c731:	jmp    0x41c789
  41c733:	outs   dx,BYTE PTR ds:[esi]
  41c734:	cmp    eax,0x305c5f45
  41c739:	dec    ecx
  41c73a:	push   ebx
  41c73b:	jno    0x41c747
  41c73d:	add    eax,0x5125a16
  41c742:	cmp    esi,DWORD PTR ds:0x0
	...
  41c774:	add    BYTE PTR [eax],al
  41c776:	add    BYTE PTR [edx+ebx*1],dh
  41c779:	pop    ebx
  41c77a:	push   cs
  41c77b:	das    
  41c77c:	sbb    al,BYTE PTR [edx+edx*1]
  41c77f:	xor    BYTE PTR ds:0xf925f650,cl
  41c785:	pop    esi
  41c786:	pop    es
  41c787:	push   edi
  41c788:	or     BYTE PTR [edx-0x59],bl
  41c78b:	cmp    al,0x2
  41c78d:	pop    edi
  41c78e:	mov    bh,0x52
  41c790:	int3   
  41c791:	shl    BYTE PTR fs:[ebx],1
  41c794:	les    eax,FWORD PTR [ecx-0x55]
  41c797:	add    eax,0x27cd58aa
  41c79c:	shl    BYTE PTR [eax-0x7d],0x55
  41c7a0:	enter  0xbb4f,0x5
  41c7a4:	xchg   esp,eax
  41c7a5:	push   edi
  41c7a6:	scas   eax,DWORD PTR es:[edi]
  41c7a7:	xor    ecx,eax
  41c7a9:	inc    ecx
  41c7aa:	mov    ebx,0x9227e755
  41c7af:	sub    al,0x9b
  41c7b1:	pop    esi
  41c7b2:	xchg   edx,eax
  41c7b3:	out    dx,eax
  41c7b4:	sahf   
  41c7b5:	push   esi
  41c7b6:	ja     0x41c7bd
  41c7b8:	mov    bl,0x41
  41c7ba:	xchg   edi,eax
  41c7bb:	push   ebp
  41c7bc:	mov    ecx,0xe72d724e
  41c7c1:	xor    eax,0x348f3270
  41c7c6:	jl     0x41c801
  41c7c8:	mov    WORD PTR [ecx],ds
  41c7ca:	pop    ebx
  41c7cb:	xor    BYTE PTR [ebx+0x3],bh
  41c7ce:	xor    ch,BYTE PTR [eax]
  41c7d0:	pop    ecx
  41c7d1:	dec    esi
  41c7d2:	inc    eax
  41c7d3:	xor    esp,edi
  41c7d5:	xor    BYTE PTR [edx+0x28],dl
  41c7d8:	pop    ecx
  41c7d9:	push   esi
	...
  41c80a:	add    BYTE PTR [eax],al
  41c80c:	sbb    al,0x30
  41c80e:	inc    esp
  41c80f:	add    al,0x13
  41c811:	and    al,0x3a
  41c813:	push   ebx
  41c814:	ss cmp DWORD PTR cs:[eax+0x63],esp
  41c819:	inc    edi
  41c81a:	add    BYTE PTR ds:0x3b6d5537,bh
  41c820:	xor    eax,DWORD PTR ds:0x392d1651
  41c826:	jne    0x41c830
  41c828:	xor    DWORD PTR [edx],esp
  41c82a:	pop    esp
  41c82b:	sub    dl,BYTE PTR [ecx]
  41c82d:	arpl   WORD PTR ss:[ebx],bx
  41c830:	dec    ebx
  41c831:	pop    eax
  41c832:	arpl   WORD PTR [ebx],cx
  41c834:	xor    BYTE PTR [esi],ah
  41c836:	je     0x41c83c
  41c838:	das    
  41c839:	xor    ah,BYTE PTR [edx+0x5]
  41c83c:	mov    esi,0xb1046834
  41c841:	add    eax,0x39afab5c
  41c846:	dec    ecx
  41c847:	shr    BYTE PTR [esi-0x3d1687de],1
  41c84d:	es je  0x41c812
  41c850:	xchg   edi,eax
  41c851:	das    
  41c852:	arpl   cx,ax
  41c854:	push   esi
  41c855:	sub    DWORD PTR [ecx-0x17],esi
  41c858:	push   0xb6bd7130
  41c85d:	pop    esi
  41c85e:	imul   eax,esp,0x60
  41c861:	push   edx
  41c862:	jno    0x41c7f0
  41c864:	mov    dl,0x2f
  41c866:	pop    edi
  41c867:	mov    WORD PTR [ebx-0x6e77affb],es
  41c86d:	xor    al,0x75
  41c86f:	jle    0x41c871
	...
  41c8a1:	add    BYTE PTR [edx-0x6a66ffd7],dl
  41c8a7:	xor    esi,DWORD PTR [ecx+ebp*8+0x31]
  41c8ab:	xor    BYTE PTR [esi+0x7d],ah
  41c8ae:	sub    eax,0x7c84725e
  41c8b3:	inc    edx
  41c8b4:	js     0x41c90f
  41c8b6:	inc    esi
  41c8b7:	das    
  41c8b8:	inc    esp
  41c8b9:	pop    ebx
  41c8ba:	es aaa 
  41c8bc:	arpl   WORD PTR ds:0x5a712270,si
  41c8c2:	push   ss
  41c8c3:	xor    BYTE PTR [esi+0x0],ch
  41c8c6:	imul   ecx,DWORD PTR [ecx],0x5922455c
  41c8cc:	pop    ebp
  41c8cd:	outs   dx,BYTE PTR ds:[esi]
  41c8ce:	dec    esi
  41c8cf:	push   ebx
  41c8d0:	gs jbe 0x41c8f2
  41c8d3:	or     DWORD PTR [esp+eiz*2+0x68],ebx
  41c8d7:	pusha  
  41c8d8:	jbe    0x41c93f
  41c8da:	imul   edx,DWORD PTR [edi],0xe38a736a
  41c8e0:	outs   dx,DWORD PTR ds:[esi]
  41c8e1:	popa   
  41c8e2:	pop    ecx
  41c8e3:	push   edx
  41c8e4:	jae    0x41c955
  41c8e6:	push   0xa020225d
  41c8eb:	loope  0x41c90e
  41c8ed:	add    BYTE PTR [eax],ch
  41c8ef:	adc    eax,0x5b555300
  41c8f4:	je     0x41c96d
  41c8f6:	sbb    edx,DWORD PTR [edi+0x61]
  41c8f9:	pop    esp
  41c8fa:	call   DWORD PTR [eax+0x70]
  41c8fd:	popa   
  41c8fe:	and    al,0xfd
  41c900:	jno    0x41c96b
  41c902:	or     al,0x26
  41c904:	add    BYTE PTR [ebp+0x0],al
	...
  41c937:	add    BYTE PTR [edx],ah
  41c939:	pop    ecx
  41c93a:	pop    ebp
  41c93b:	outs   dx,BYTE PTR ds:[esi]
  41c93c:	(bad)  
  41c93d:	push   esi
  41c93e:	gs jbe 0x41c970
  41c941:	in     al,0x47
  41c943:	outs   dx,DWORD PTR ds:[esi]
  41c944:	xlat   BYTE PTR ds:[ebx]
  41c945:	and    eax,0x56df5300
  41c94a:	jbe    0x41c9b1
  41c94c:	call   0xefb51a59
  41c951:	push   esi
  41c952:	dec    esi
  41c953:	popa   
  41c954:	ja     0x41c97b
  41c956:	add    BYTE PTR [eax-0x25],dl
  41c959:	push   edi
  41c95a:	outs   dx,DWORD PTR ds:[esi]
  41c95b:	ja     0x41c932
  41c95d:	push   esi
  41c95e:	fs add ch,dh
  41c961:	clc    
  41c962:	pop    esp
  41c963:	jae    0x41c9be
  41c965:	dec    ebx
  41c966:	imul   esi,DWORD PTR [edx+0x1e],0x1
  41c96a:	inc    esp
  41c96b:	imul   ebp,DWORD PTR [eax],0x63745f5c
  41c971:	inc    ebx
  41c972:	push   edx
  41c973:	ja     0x41c9d8
  41c975:	call   DWORD PTR [edx+0x66]
  41c978:	aaa    
  41c979:	sti    
  41c97a:	pusha  
  41c97b:	jb     0x41c9bb
  41c97d:	sbb    dh,BYTE PTR [esi]
  41c97f:	inc    ecx
  41c980:	sub    ecx,DWORD PTR [esi]
  41c982:	das    
  41c983:	ins    DWORD PTR es:[edi],dx
  41c984:	std    
  41c985:	icebp  
  41c986:	dec    edx
  41c987:	pop    edi
  41c988:	adc    DWORD PTR [ecx],ecx
  41c98a:	sub    BYTE PTR [ecx-0x9],al
  41c98d:	or     al,0x4f
  41c98f:	jno    0x41c99b
  41c991:	(bad)  
  41c993:	push   esp
  41c994:	adc    ebp,edx
  41c996:	cmp    eax,0x5eed1354
  41c99b:	popa   
	...
  41c9cc:	add    BYTE PTR [eax],al
  41c9ce:	hlt    
  41c9cf:	mov    al,0x53
  41c9d1:	je     0x41c9a3
  41c9d3:	scas   al,BYTE PTR es:[edi]
  41c9d4:	cmp    esi,DWORD PTR [ebx+edx*8+0x1f]
  41c9d8:	pop    ebp
  41c9d9:	jb     0x41c9b0
  41c9db:	leave  
  41c9dc:	dec    edi
  41c9dd:	add    BYTE PTR [ebp-0x4facae2e],bl
  41c9e3:	leave  
  41c9e4:	dec    edi
  41c9e5:	dec    esi
  41c9e6:	ret    0x5e79
  41c9e9:	add    BYTE PTR [ebp-0x3dafae86],ah
  41c9ef:	jg     0x41ca41
  41c9f1:	jne    0x41c97f
  41c9f3:	sbb    BYTE PTR [ebp+0x0],0xb4
  41c9f7:	fs dec ebp
  41c9f9:	jo     0x41c9ae
  41c9fb:	lea    edx,[eax+0x71]
  41c9fe:	mov    WORD PTR [ebx+0x6c63644f],cs
  41ca04:	dec    ebp
  41ca05:	jo     0x41c9a6
  41ca07:	test   DWORD PTR [edi+0x63],ecx
  41ca0a:	cmp    BYTE PTR [edx],0x54
  41ca0d:	jb     0x41ca79
  41ca0f:	scas   al,BYTE PTR es:[edi]
  41ca10:	xor    BYTE PTR [ebp+0x25],cl
  41ca13:	call   0x4e25:0x61313f2c
  41ca1a:	and    BYTE PTR ds:0x2c32242f,al
  41ca20:	inc    ebp
  41ca21:	push   eax
  41ca22:	ss es pop ecx
  41ca25:	pop    edi
  41ca26:	pop    ss
  41ca27:	inc    ebx
  41ca28:	cmp    ebx,DWORD PTR [ebx+0x3d]
  41ca2b:	and    al,0x23
  41ca2d:	inc    ebx
  41ca2e:	inc    edx
  41ca2f:	sub    BYTE PTR [esi+0x4f],cl
	...
  41ca62:	add    BYTE PTR [eax],al
  41ca64:	or     eax,0x32043a31
  41ca69:	sub    al,0x45
  41ca6b:	push   eax
  41ca6c:	push   ss
  41ca6d:	sbb    DWORD PTR es:[edi+0x27],ebx
  41ca71:	inc    ebx
  41ca72:	xor    esi,DWORD PTR [edx+eiz*1]
  41ca75:	sub    DWORD PTR [eax],eax
  41ca77:	pop    edi
  41ca78:	add    eax,0x4312b31
  41ca7d:	xor    DWORD PTR [ecx+edx*2],ecx
  41ca80:	arpl   WORD PTR [eax+0xe],bx
  41ca83:	pop    esi
  41ca84:	xlat   BYTE PTR ds:[ebx]
  41ca85:	xor    cl,BYTE PTR [eax]
  41ca87:	push   edx
  41ca88:	rcr    BYTE PTR [ecx+0x1a],0x55
  41ca8c:	lds    esi,FWORD PTR [ecx]
  41ca8e:	mov    edi,0xc637b615
  41ca93:	daa    
  41ca94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca95:	push   ecx
  41ca96:	mov    bh,0x40
  41ca98:	(bad)  
  41ca99:	sub    al,0xc4
  41ca9b:	push   ebp
  41ca9c:	mov    bh,0x59
  41ca9e:	call   0x4d03:0xba20af5a
  41caa5:	sub    ch,BYTE PTR [edi-0x42149ca0]
  41caab:	push   edi
  41caac:	jg     0x41cab3
  41caae:	ret    
  41caaf:	cmp    al,0xb3
  41cab1:	push   esi
  41cab2:	mov    ds,WORD PTR [ebp+0x77]
  41cab5:	xor    cl,BYTE PTR [eax-0x5ca67faf]
  41cabb:	pop    edx
  41cabc:	jno    0x41cade
  41cabe:	mov    cl,BYTE PTR [edi+0x76]
  41cac1:	aaa    
  41cac2:	and    BYTE PTR [ebx],0x2e
  41cac5:	xor    eax,0x7c00
	...
  41cafa:	xor    eax,DWORD PTR ds:0x5a289a5c
  41cb00:	jb     0x41cb4e
  41cb02:	jnp    0x41cb58
  41cb04:	arpl   WORD PTR [ebp+0x7b],dx
  41cb07:	and    ch,BYTE PTR [esi+0x4e]
  41cb0a:	ins    BYTE PTR es:[edi],dx
  41cb0b:	jmp    0x41cb6d
  41cb0d:	dec    edx
  41cb0e:	je     0x41cb15
  41cb10:	pop    esp
  41cb11:	sbb    dh,BYTE PTR [edi+0x5a]
  41cb14:	jb     0x41cb5a
  41cb16:	dec    ebx
  41cb17:	push   esp
  41cb18:	arpl   WORD PTR ds:0x466e225b,di
  41cb1e:	push   esp
  41cb1f:	pop    eax
  41cb20:	das    
  41cb21:	inc    esi
  41cb22:	(bad)  
  41cb23:	pop    ecx
  41cb24:	xor    ecx,edi
  41cb26:	inc    ebp
  41cb27:	and    al,0x71
  41cb29:	jmp    0x8aa1f42
  41cb2e:	xor    eax,0x3a1a6426
  41cb33:	xor    DWORD PTR [eax+edx*1-0x6f],esi
  41cb37:	and    BYTE PTR [ecx-0x39],dh
  41cb3a:	lea    ebp,[edx]
  41cb3c:	ins    BYTE PTR es:[edi],dx
  41cb3d:	add    BYTE PTR [ebx-0x523affda],cl
  41cb43:	sub    eax,0x218bdb5f
  41cb48:	push   ecx
  41cb49:	int3   
  41cb4a:	ins    BYTE PTR es:[edi],dx
  41cb4b:	xor    DWORD PTR [edi-0x41],esp
  41cb4e:	jns    0x41cb84
  41cb50:	pop    ebp
  41cb51:	clc    
  41cb52:	shl    ebp,0x5c
  41cb55:	hlt    
  41cb56:	adc    dh,BYTE PTR ds:0x3147c56f
  41cb5c:	arpl   cx,bp
	...
  41cb8e:	add    BYTE PTR [eax],al
  41cb90:	lods   al,BYTE PTR ds:[esi]
  41cb91:	inc    esp
  41cb92:	ins    DWORD PTR es:[edi],dx
  41cb93:	(bad)  
  41cb94:	cmp    ah,BYTE PTR [esi]
  41cb96:	arpl   WORD PTR [edx-0x45dfcac5],bp
  41cb9c:	xor    DWORD PTR [ebx],esp
  41cb9e:	je     0x41cb36
  41cba0:	inc    edi
  41cba1:	aaa    
  41cba2:	arpl   WORD PTR [eax],ax
  41cba4:	cli    
  41cba5:	jmp    0xec9c2d0a
  41cbaa:	jae    0x41cc1c
  41cbac:	retf   0x6dfc
  41cbaf:	ins    BYTE PTR es:[edi],dx
  41cbb0:	out    0xe0,eax
  41cbb2:	outs   dx,DWORD PTR ds:[esi]
  41cbb3:	cs pop ss
  41cbb5:	stc    
  41cbb6:	pusha  
  41cbb7:	add    BYTE PTR [ecx],bl
  41cbb9:	call   0xb75b3131
  41cbbe:	popa   
  41cbbf:	popa   
  41cbc0:	push   ss
  41cbc1:	add    DWORD PTR [edi+0x69],ebp
  41cbc4:	data16 in al,dx
  41cbc6:	outs   dx,BYTE PTR ds:[esi]
  41cbc7:	cs xor esi,edi
  41cbca:	add    BYTE PTR fs:[esi+0x55],ch
  41cbce:	popa   
  41cbcf:	popa   
  41cbd0:	dec    edx
  41cbd1:	pop    esi
  41cbd2:	pop    ebp
  41cbd3:	jb     0x41cc2c
  41cbd5:	and    eax,0xf16b654c
  41cbda:	inc    ebp
  41cbdb:	push   esp
  41cbdc:	cmp    al,BYTE PTR [ecx]
  41cbde:	dec    edi
  41cbdf:	dec    edi
  41cbe0:	inc    esp
  41cbe1:	pop    ebp
  41cbe2:	push   ebx
  41cbe3:	inc    ecx
  41cbe4:	dec    eax
  41cbe5:	dec    esp
  41cbe6:	pop    esp
  41cbe7:	dec    esp
  41cbe8:	addr16 loop 0x41cc5a
  41cbeb:	push   edi
  41cbec:	imul   ebp,edi,0x60
  41cbef:	add    BYTE PTR [ebx+0x746ef3],al
	...
  41cc25:	add    BYTE PTR [ebx],bl
  41cc27:	jmp    0xf16d1c97
  41cc2c:	add    BYTE PTR ds:0x73e2,al
  41cc31:	popa   
  41cc32:	push   es
  41cc33:	jmp    0x736e:0xe1ca0071
  41cc3a:	aad    0xf3
  41cc3c:	jno    0x41cca2
  41cc3e:	or     cl,BYTE PTR [ebp+0x6b]
  41cc41:	jae    0x41cc19
  41cc43:	push   esi
  41cc44:	pop    ebp
  41cc45:	ins    DWORD PTR es:[edi],dx
  41cc46:	xlat   BYTE PTR ds:[ebx]
  41cc47:	add    al,0x51
  41cc49:	jae    0x41cc32
  41cc4b:	repnz dec ebp
  41cc4d:	popa   
  41cc4e:	arpl   WORD PTR [ecx-0x7e6effd8],ax
  41cc54:	xor    BYTE PTR [ebp+0x6f],ch
  41cc57:	mov    DWORD PTR [ebp+0x67],eax
  41cc5a:	push   ecx
  41cc5b:	and    DWORD PTR [esi],0x3c3c4474
  41cc61:	add    BYTE PTR [ebx],dh
  41cc63:	aaa    
  41cc64:	xor    esi,DWORD PTR [ebp+edx*1+0x59]
  41cc68:	sub    eax,0x45c4662
  41cc6d:	inc    esi
  41cc6e:	adc    dh,bh
  41cc70:	xor    eax,0x22f7376d
  41cc75:	ins    DWORD PTR es:[edi],dx
  41cc76:	aaa    
  41cc77:	scas   al,BYTE PTR es:[edi]
  41cc78:	push   esp
  41cc79:	ins    DWORD PTR es:[edi],dx
  41cc7a:	add    eax,0x115f36f2
  41cc7f:	dec    ecx
  41cc80:	pusha  
  41cc81:	dec    ebx
  41cc82:	add    bh,ah
  41cc84:	aaa    
  41cc85:	addr16 cmc 
  41cc87:	int    0x51
  41cc89:	jb     0x41cc8b
	...
  41ccbb:	add    BYTE PTR [edx],cl
  41ccbd:	adc    esi,DWORD PTR [esi]
  41ccbf:	ja     0x41ccc8
  41ccc1:	scas   al,BYTE PTR es:[edi]
  41ccc2:	pop    ebp
  41ccc3:	xor    DWORD PTR [ecx],esi
  41ccc5:	in     al,dx
  41ccc6:	sub    BYTE PTR [ebp+ebx*1-0x46],dh
  41ccca:	xor    DWORD PTR [esi],ebp
  41cccc:	retf   0x2908
  41cccf:	add    BYTE PTR [ebp-0x2898ad16],ah
  41ccd5:	add    DWORD PTR [ebx],esi
  41ccd7:	cs mov edx,0x9f002ad0
  41ccdd:	push   0xdc9f7426
  41cce2:	sub    dh,BYTE PTR [esi-0x3a]
  41cce5:	scas   al,BYTE PTR es:[edi]
  41cce6:	push   ecx
  41cce7:	pop    edi
  41cce8:	mov    al,0x7b
  41ccea:	pop    eax
  41cceb:	ins    DWORD PTR es:[edi],dx
  41ccec:	xchg   ecx,eax
  41cced:	ret    0x5301
  41ccf0:	xchg   ecx,eax
  41ccf1:	ret    0x5301
  41ccf4:	nop
  41ccf5:	shl    DWORD PTR [ebx],0x4e
  41ccf8:	add    BYTE PTR ds:0x53632694,0x8e
  41ccff:	xor    BYTE PTR [edi+0x41],ch
  41cd02:	xor    BYTE PTR ds:0x30932480,0x71
  41cd09:	ds out 0x53,eax
  41cd0c:	dec    esi
  41cd0d:	xor    esi,DWORD PTR [ebx+0x3]
  41cd10:	xor    ch,BYTE PTR [eax]
  41cd12:	lea    esi,[edi]
  41cd14:	push   esi
  41cd15:	es jns 0x41cd3e
  41cd18:	daa    
  41cd19:	push   esp
  41cd1a:	push   esi
  41cd1b:	aaa    
  41cd1c:	aaa    
  41cd1d:	sub    eax,0x5607
	...
  41cd52:	cmp    al,0x2f
  41cd54:	dec    esp
  41cd55:	adc    DWORD PTR ss:[ecx+0x44],0x25
  41cd5a:	cmp    esp,DWORD PTR [edi]
  41cd5c:	push   esi
  41cd5d:	xor    BYTE PTR [esi],cl
  41cd5f:	and    BYTE PTR [eax+0x27],dl
  41cd62:	adc    bl,BYTE PTR [ecx+0x1e]
  41cd65:	daa    
  41cd66:	add    DWORD PTR [ecx+0x39],eax
  41cd69:	sub    ecx,DWORD PTR ds:0xe454322
  41cd6f:	daa    
  41cd70:	or     eax,0x310227
  41cd75:	xor    ebp,edi
  41cd77:	xor    esp,edi
  41cd79:	push   esp
  41cd7a:	add    BYTE PTR [ebx],dh
  41cd7c:	std    
  41cd7d:	rcl    DWORD PTR es:[ecx+0x0],1
  41cd81:	xor    al,0xc0
  41cd83:	add    eax,0xe5b3582d
  41cd88:	sub    DWORD PTR [ecx-0x6b],edx
  41cd8b:	push   ecx
  41cd8c:	mov    ecx,0xa505af50
  41cd91:	push   edi
  41cd92:	xchg   ebx,eax
  41cd93:	inc    edx
  41cd94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd95:	push   ecx
  41cd96:	arpl   di,sp
  41cd98:	(bad)  
  41cd99:	xor    eax,0x53a305bd
  41cd9e:	xchg   ecx,eax
  41cd9f:	lds    ebp,FWORD PTR es:[edx]
  41cda2:	xchg   DWORD PTR [eax],esp
  41cda4:	add    BYTE PTR [edx+0x2d7b8460],bh
  41cdaa:	jae    0x41cd33
  41cdac:	mov    cl,0x11
  41cdae:	dec    ecx
  41cdaf:	xor    al,0xad
  41cdb1:	push   ds
  41cdb2:	dec    eax
  41cdb3:	xor    DWORD PTR [ecx+ebx*4+0x0],esi
	...
  41cde7:	add    dh,ch
  41cde9:	jmp    0x317ab71a
  41cdee:	je     0x41ce69
  41cdf0:	xchg   edi,eax
  41cdf1:	sti    
  41cdf2:	sub    al,0xce
  41cdf4:	pusha  
  41cdf5:	pop    ds
  41cdf6:	je     0x41ce71
  41cdf8:	into   
  41cdf9:	jmp    0x35d5b72a
  41cdfe:	arpl   WORD PTR [ebx-0x7a],bx
  41ce01:	add    eax,0x21854875
  41ce06:	cs dec ebp
  41ce08:	xchg   BYTE PTR [ecx],dh
  41ce0a:	add    BYTE PTR [esi],ch
  41ce0c:	adc    BYTE PTR [eax],ch
  41ce0e:	cmp    ax,0x5654
  41ce12:	jb     0x41ce58
  41ce14:	add    ecx,DWORD PTR [eax+0x70]
  41ce17:	dec    esp
  41ce18:	push   ecx
  41ce19:	push   esi
  41ce1a:	and    BYTE PTR [edx],bl
  41ce1c:	xor    al,0x1f
  41ce1e:	je     0x41ce3e
  41ce20:	inc    esi
  41ce21:	xor    esp,DWORD PTR [ebx-0x17]
  41ce24:	and    al,0x56
  41ce26:	jno    0x41ce45
  41ce28:	xchg   DWORD PTR [edx+0x67],eax
  41ce2b:	sbb    edi,DWORD PTR [edx]
  41ce2d:	and    al,0x74
  41ce2f:	push   ss
  41ce30:	xchg   ecx,eax
  41ce31:	cs xor ecx,ebp
  41ce34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce35:	push   esi
  41ce36:	jno    0x41ce35
  41ce38:	inc    eax
  41ce39:	aas    
  41ce3a:	outs   dx,BYTE PTR ds:[esi]
  41ce3b:	cli    
  41ce3c:	mov    WORD PTR [esi+0x6c],ss
  41ce3f:	aad    0x40
  41ce41:	inc    esi
  41ce42:	pop    edi
  41ce43:	aad    0x88
  41ce45:	add    eax,0x337bd94d
  41ce4a:	pop    edi
  41ce4b:	inc    DWORD PTR [eax]
	...
  41ce7d:	add    BYTE PTR [eax-0x29ffb4af],bl
  41ce83:	push   ebp
  41ce84:	outs   dx,DWORD PTR ds:[esi]
  41ce85:	push   0x5c6be61f
  41ce8a:	and    eax,0xd66e60f2
  41ce8f:	loop   0x41cefb
  41ce91:	ins    DWORD PTR es:[edi],dx
  41ce92:	xlat   BYTE PTR ds:[ebx]
  41ce93:	loopne 0x41cf02
  41ce95:	fs or  ch,bh
  41ce98:	fs jae 0x41ce7a
  41ce9b:	fbstp  TBYTE PTR [ebx+0x70]
  41ce9e:	leave  
  41ce9f:	repz jne 0x41cf15
  41cea2:	mov    ah,0xe3
  41cea4:	outs   dx,BYTE PTR fs:[esi]
  41cea6:	retf   0x3d55
  41cea9:	arpl   di,bx
  41ceab:	inc    ebx
  41ceac:	inc    ebp
  41cead:	push   esp
  41ceae:	mov    edx,0x1e666b52
  41ceb3:	out    dx,al
  41ceb4:	pop    esp
  41ceb5:	jb     0x41ced6
  41ceb7:	and    eax,0x431f633d
  41cebc:	inc    ebp
  41cebd:	push   esp
  41cebe:	mov    edx,0x8a555254
  41cec3:	push   edx
  41cec4:	dec    ebx
  41cec5:	inc    esi
  41cec6:	outs   dx,BYTE PTR ds:[esi]
  41cec7:	dec    esi
  41cec8:	cmp    eax,0x3f253f52
  41cecd:	ins    BYTE PTR es:[edi],dx
  41cece:	sbb    esi,edx
  41ced0:	outs   dx,BYTE PTR ds:[esi]
  41ced1:	gs pop ecx
  41ced3:	and    eax,0xec5a7954
  41ced8:	dec    ebx
  41ced9:	imul   ebx,DWORD PTR [eax+0x25],0xb0384377
  41cee0:	inc    ebx
  41cee1:	xor    al,BYTE PTR [eax]
	...
  41cf13:	add    BYTE PTR [ecx+0x222d43b9],cl
  41cf19:	mov    ecx,0xbd273436
  41cf1e:	ds inc ecx
  41cf20:	jns    0x41ced8
  41cf22:	aas    
  41cf23:	inc    ebx
  41cf24:	or     al,0xae
  41cf26:	sub    dh,BYTE PTR [ebx+ebx*2]
  41cf29:	dec    edx
  41cf2a:	ss xor al,0x63
  41cf2d:	popa   
  41cf2e:	out    dx,eax
  41cf2f:	xor    al,0x9d
  41cf31:	sbb    esi,ebp
  41cf33:	xor    al,0x9e
  41cf35:	sahf   
  41cf36:	push   edx
  41cf37:	dec    ebp
  41cf38:	popf   
  41cf39:	call   0x415d:0x61b13f56
  41cf40:	ja     0x41ceff
  41cf42:	xor    dh,BYTE PTR [ecx-0x7a]
  41cf45:	(bad)  
  41cf46:	pop    ebp
  41cf47:	push   esp
  41cf48:	jp     0x41ced8
  41cf4a:	sub    BYTE PTR [edx+edi*2-0x80],cl
  41cf4e:	pop    ebp
  41cf4f:	jns    0x41cf7b
  41cf51:	imul   eax,DWORD PTR [ebx+esi*1-0x6a],0x8636ef71
  41cf59:	imul   esi,esp,0xf5c99131
  41cf5f:	xor    al,0x8e
  41cf61:	jnp    0x41cf53
  41cf63:	inc    ecx
  41cf64:	and    BYTE PTR [ebx],dl
  41cf66:	stc    
  41cf67:	sub    bl,BYTE PTR [esi]
  41cf69:	sbb    bh,ah
  41cf6b:	xor    DWORD PTR [esi-0x1c],esi
  41cf6e:	sti    
  41cf6f:	das    
  41cf70:	ins    BYTE PTR es:[edi],dx
  41cf71:	pslld  mm0,QWORD PTR [eax+0x1e]
  41cf75:	sahf   
  41cf76:	xor    al,0x67
	...
  41cfa8:	add    BYTE PTR [eax],al
  41cfaa:	adc    BYTE PTR [ecx+0x26],cl
  41cfad:	je     0x41cfc2
  41cfaf:	out    dx,eax
  41cfb0:	xor    DWORD PTR [esi+0x10],esi
  41cfb3:	mov    ah,0x2a
  41cfb5:	outs   dx,BYTE PTR ds:[esi]
  41cfb6:	or     bl,BYTE PTR [esi+0x8f06734]
  41cfbc:	es je  0x41cfb2
  41cfbf:	retf   
  41cfc0:	sub    ch,BYTE PTR [esi-0x6]
  41cfc3:	popf   
  41cfc4:	inc    ebx
  41cfc5:	push   esp
  41cfc6:	mov    bl,0x14
  41cfc8:	sub    esi,DWORD PTR [edi-0x3e]
  41cfcb:	or     esp,DWORD PTR ds:0x38047d72
  41cfd1:	jo     0x41d036
  41cfd3:	in     al,dx
  41cfd4:	push   edi
  41cfd5:	push   eax
  41cfd6:	xchg   ebp,eax
  41cfd7:	add    eax,0x2c943ad6
  41cfdc:	les    esi,FWORD PTR [ecx]
  41cfde:	jge    0x41d016
  41cfe0:	retf   0x8703
  41cfe3:	push   edi
  41cfe4:	mov    edi,0x9a248d2a
  41cfe9:	sub    al,0x7d
  41cfeb:	cmp    DWORD PTR ds:0xe7227e21,ecx
  41cff1:	sub    eax,0xedfa3892
  41cff6:	and    BYTE PTR [ecx],0x93
  41cff9:	add    esp,DWORD PTR [ebp-0x5ba345a8]
  41cfff:	and    eax,DWORD PTR [eax-0x45bc9cc9]
  41d005:	push   eax
  41d006:	ds pop eax
  41d008:	(bad)  
  41d009:	ss dec edi
  41d00b:	sub    DWORD PTR [esi+0x34],ecx
	...
  41d03d:	add    BYTE PTR [eax],al
  41d03f:	add    BYTE PTR ds:0x3250a505,bh
  41d045:	inc    edi
  41d046:	mov    BYTE PTR [eax],dh
  41d048:	inc    eax
  41d049:	sti    
  41d04a:	sbb    bl,BYTE PTR [ebp+0x1f]
  41d04d:	sub    cl,BYTE PTR [edx+0x2d]
  41d050:	inc    edi
  41d051:	sub    ch,BYTE PTR [ecx]
  41d053:	aaa    
  41d054:	cmp    eax,0x6332442b
  41d059:	pop    eax
  41d05a:	sub    al,0x41
  41d05c:	sbb    al,0x59
  41d05e:	and    al,0x4f
  41d060:	cs dec ebx
  41d062:	cmp    DWORD PTR [edi],esp
  41d064:	add    BYTE PTR [esi],bh
  41d066:	xor    esp,DWORD PTR [edi]
  41d068:	or     BYTE PTR ds:0xf6444937,al
  41d06e:	cmp    eax,0x20390045
  41d073:	cs out dx,eax
  41d075:	sub    DWORD PTR [ecx],ebx
  41d077:	cs mov esp,0xcc273221
  41d07d:	push   esi
  41d07e:	or     ebp,DWORD PTR ds:0x190005d7
  41d084:	call   0x7436:0xa00e2ee2
  41d08b:	sar    DWORD PTR [ebp+0x23],1
  41d08e:	je     0x41d060
  41d090:	adc    DWORD PTR [edx+0x74],0xffffffcc
  41d094:	pusha  
  41d095:	push   ebp
  41d096:	dec    ecx
  41d097:	sbb    BYTE PTR [eax],dl
  41d099:	push   esi
  41d09a:	inc    esp
  41d09b:	fwait
  41d09c:	mov    bh,0x49
  41d09e:	arpl   dx,cx
  41d0a0:	push   edx
  41d0a1:	cmp    dh,BYTE PTR [eax-0x43]
	...
  41d0d4:	add    BYTE PTR [eax],al
  41d0d6:	pusha  
  41d0d7:	push   ebp
  41d0d8:	dec    ecx
  41d0d9:	clc    
  41d0da:	icebp  
  41d0db:	push   ecx
  41d0dc:	inc    esi
  41d0dd:	fwait
  41d0de:	cmp    eax,0x3f8d5126
  41d0e3:	cmp    DWORD PTR [eax],eax
  41d0e5:	jmp    0xe941d64a
  41d0ea:	pusha  
  41d0eb:	add    eax,0x560e900
  41d0f0:	add    cl,ch
  41d0f2:	pusha  
  41d0f3:	add    eax,0x560e900
  41d0f8:	add    cl,ch
  41d0fa:	pusha  
  41d0fb:	add    eax,0x560e900
  41d100:	add    cl,ch
  41d102:	pusha  
  41d103:	add    eax,0x226de900
  41d108:	ins    BYTE PTR es:[edi],dx
  41d109:	inc    eax
  41d10a:	push   ebx
  41d10b:	xor    DWORD PTR es:[edi],edx
  41d10e:	inc    ebx
  41d10f:	and    DWORD PTR [ecx+ebp*8+0x55],ebp
  41d113:	and    ch,BYTE PTR [eax+eax*2+0x53]
  41d117:	xor    DWORD PTR es:[esi],ecx
  41d11a:	dec    eax
  41d11b:	xor    eax,0x345f1763
  41d120:	outs   dx,DWORD PTR ds:[esi]
  41d121:	or     eax,0xda63393e
  41d126:	or     DWORD PTR [esp+ebp*2],esp
  41d129:	(bad)  
  41d12a:	xchg   ebp,eax
  41d12b:	add    BYTE PTR es:[eax],al
  41d12e:	pop    ecx
  41d12f:	stc    
  41d130:	imul   ebp,DWORD PTR [ecx+0x56],0xffffffe5
  41d134:	cs pop edi
  41d136:	dec    edx
  41d137:	clc    
  41d138:	pusha  
  41d139:	jo     0x41d13b
	...
  41d16b:	add    BYTE PTR [ebx-0x5],ch
  41d16e:	pusha  
  41d16f:	add    BYTE PTR [ecx],bl
  41d171:	stc    
  41d172:	imul   ebp,DWORD PTR [ecx+0x16],0xffffffe5
  41d176:	cs pop edi
  41d178:	or     edx,esp
  41d17a:	pusha  
  41d17b:	jo     0x41d187
  41d17d:	sti    
  41d17e:	ins    BYTE PTR es:[edi],dx
  41d17f:	ins    BYTE PTR es:[edi],dx
  41d180:	xor    esp,edx
  41d182:	pusha  
  41d183:	xor    ebp,ebp
  41d185:	jmp    0x5f6d:0xdcc76c6a
  41d18c:	sub    cl,dh
  41d18e:	jae    0x41d1f5
  41d190:	fld    DWORD PTR ds:0xe0de716f
  41d196:	jae    0x41d1fd
  41d198:	or     DWORD PTR [edi+0x5f],ecx
  41d19b:	outs   dx,DWORD PTR ds:[esi]
  41d19c:	pop    esi
  41d19d:	cmc    
  41d19e:	push   0x6be7fd6e
  41d1a3:	outs   dx,DWORD PTR ds:[esi]
  41d1a4:	fadd   DWORD PTR ds:0xefdd6d00
  41d1aa:	outs   dx,BYTE PTR ds:[esi]
  41d1ab:	jno    0x41d1eb
  41d1ad:	loope  0x41d222
  41d1af:	gs pop ecx
  41d1b1:	lahf   
  41d1b2:	popa   
  41d1b3:	ins    BYTE PTR es:[edi],dx
  41d1b4:	push   ds
  41d1b5:	or     DWORD PTR [edi+0x71],ebp
  41d1b8:	push   ds
  41d1b9:	loopne 0x41d22e
  41d1bb:	gs jns 0x41d20c
  41d1be:	imul   esi,DWORD PTR [eax+0x27],0xffffffdf
  41d1c2:	push   DWORD PTR [edx+0x4b]
  41d1c5:	frstor [esp+esi*2+0x17]
  41d1c9:	mov    edx,0xde3e635c
  41d1ce:	outs   dx,BYTE PTR ds:[esi]
  41d1cf:	add    BYTE PTR gs:[eax],al
	...
  41d202:	mov    bh,dl
  41d204:	ins    BYTE PTR es:[edi],dx
  41d205:	ins    BYTE PTR es:[edi],dx
  41d206:	push   ebx
  41d207:	cmc    
  41d208:	pusha  
  41d209:	xor    esp,DWORD PTR [ebx-0x5]
  41d20c:	xor    esi,DWORD PTR [edx-0x3a]
  41d20f:	push   cs
  41d210:	and    esi,DWORD PTR [edx-0x42]
  41d213:	sahf   
  41d214:	outs   dx,DWORD PTR ss:[esi]
  41d216:	mov    edi,0x90633015
  41d21b:	pop    ss
  41d21c:	xor    eax,0x1aec674
  41d221:	jno    0x41d1d5
  41d223:	fisubr DWORD PTR [esp+esi*2]
  41d226:	(bad)  
  41d227:	or     ebx,DWORD PTR [ecx+0x61]
  41d22a:	mov    ah,0xca
  41d22c:	xor    BYTE PTR [ebx-0x73],ch
  41d22f:	pop    edi
  41d230:	and    esi,DWORD PTR [edi-0x71]
  41d233:	shl    DWORD PTR [esi],0x0
  41d236:	nop
  41d237:	ins    DWORD PTR es:[edi],dx
  41d238:	and    eax,0xf6c18f67
  41d23d:	pop    esp
  41d23e:	sub    BYTE PTR [edi+0x25],0x73
  41d242:	xchg   BYTE PTR [eax+0x7f7f625a],bl
  41d248:	and    eax,DWORD PTR [eax]
  41d24a:	arpl   WORD PTR [esi-0x619cffff],bx
  41d250:	add    DWORD PTR [eax],eax
  41d252:	arpl   WORD PTR [esi-0x619cffff],bx
  41d258:	add    DWORD PTR [eax],eax
  41d25a:	arpl   WORD PTR [esi-0x619cffff],bx
  41d260:	add    DWORD PTR [eax],eax
  41d262:	arpl   WORD PTR [esi+0x1],bx
	...
  41d298:	arpl   WORD PTR [esi+0x4e630001],bx
  41d29e:	ss ins DWORD PTR es:[edi],dx
  41d2a0:	add    eax,0x10632845
  41d2a5:	sbb    BYTE PTR [ecx],ch
  41d2a7:	outs   dx,BYTE PTR ds:[esi]
  41d2a8:	cli    
  41d2a9:	popf   
  41d2aa:	push   ecx
  41d2ab:	jb     0x41d2a1
  41d2ad:	aas    
  41d2ae:	sub    DWORD PTR [esi+eax*1-0x62],ebp
  41d2b2:	dec    edx
  41d2b3:	jno    0x41d2c6
  41d2b5:	add    eax,0x390c280c
  41d2ba:	adc    BYTE PTR [edx],dh
  41d2bc:	add    BYTE PTR ds:0x1dd72337,al
  41d2c2:	out    0x53,eax
  41d2c4:	mov    ah,0x39
  41d2c6:	(bad)  
  41d2c8:	mov    esi,0x631eff4a
  41d2cd:	xor    al,0x0
  41d2cf:	and    ebp,ecx
  41d2d1:	and    ch,bh
  41d2d3:	xor    al,0x85
  41d2d5:	xor    al,0xd8
  41d2d7:	daa    
  41d2d8:	les    edi,FWORD PTR [ecx]
  41d2da:	les    eax,FWORD PTR [ebx]
  41d2dc:	mov    dl,0x1e
  41d2de:	into   
  41d2df:	sub    DWORD PTR [esi-0x6f1625e1],ecx
  41d2e5:	sub    eax,0x1e9203bb
  41d2ea:	(bad)  
  41d2eb:	sub    DWORD PTR [esi+0x1f],esi
  41d2ee:	mov    edx,0xaf394ef5
  41d2f3:	das    
  41d2f4:	arpl   WORD PTR [eax+edx*4],si
  41d2f7:	and    BYTE PTR [ebp+0x20],bh
  41d2fa:	lea    esi,[eax+eax*1]
	...
  41d32d:	add    BYTE PTR [edx],dh
  41d32f:	fistp  WORD PTR [edx-0x35faa8c5]
  41d335:	cmc    
  41d336:	inc    ebx
  41d337:	add    eax,0x540f5ca
  41d33c:	retf   0x41f5
  41d33f:	add    eax,0x4a2f3e9a
  41d344:	stos   BYTE PTR es:[edi],al
  41d345:	dec    edi
  41d346:	sbb    DWORD PTR ds:0x1f373556,0x48
  41d34d:	daa    
  41d34e:	inc    eax
  41d34f:	loope  0x41d357
  41d351:	pop    ds
  41d352:	or     eax,0x133b5924
  41d357:	cmp    DWORD PTR [eax+eiz*1+0x30],ecx
  41d35b:	xor    al,0x44
  41d35d:	ss cmc 
  41d35f:	and    eax,0xe15c4400
  41d364:	pop    ds
  41d365:	inc    esp
  41d366:	dec    ecx
  41d367:	es jb  0x41d38a
  41d36a:	aaa    
  41d36b:	cmp    DWORD PTR [ebx+0x5],esp
  41d36e:	(bad)  
  41d370:	jno    0x41d38c
  41d372:	xchg   edx,eax
  41d373:	and    BYTE PTR [edx+0x5],dh
  41d376:	aas    
  41d377:	dec    ecx
  41d378:	push   edx
  41d379:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41d37b:	in     eax,0x6a
  41d37d:	push   cs
  41d37e:	test   DWORD PTR [eax+0x6c],edx
  41d381:	push   es
  41d382:	and    BYTE PTR [esi],0x6e
  41d385:	cli    
  41d386:	pusha  
  41d387:	inc    edi
  41d388:	fisttp DWORD PTR [di+0x27]
  41d38c:	ins    DWORD PTR es:[edi],dx
  41d38d:	loope  0x41d3ef
  41d38f:	push   ecx
  41d390:	dec    ebx
  41d391:	mov    BYTE PTR [eax],0x0
	...
  41d3c4:	pop    esi
  41d3c5:	es ins BYTE PTR es:[edi],dx
  41d3c7:	mov    ebp,0xd0465141
  41d3cc:	push   esi
  41d3cd:	and    ah,BYTE PTR [esi-0x32]
  41d3d0:	dec    eax
  41d3d1:	push   ecx
  41d3d2:	add    BYTE PTR [edx-0x498bd8b5],bl
  41d3d8:	inc    ecx
  41d3d9:	xor    esp,DWORD PTR [ebx-0x3b]
  41d3dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3dd:	and    BYTE PTR [edx-0x70],bh
  41d3e0:	cmp    al,0x21
  41d3e2:	pop    edi
  41d3e3:	jmp    0xe96cafad
  41d3e8:	cmp    BYTE PTR [ecx],0x70
  41d3eb:	ret    
  41d3ec:	mov    ebx,0x7490ffe1
  41d3f1:	cmp    DWORD PTR [eax-0x4d],esi
  41d3f4:	retf   
  41d3f5:	loope  0x41d3f6
  41d3f7:	add    BYTE PTR [ecx+edi*1-0x1e56a590],0x2c
  41d3ff:	jmp    0x7b20d4a
  41d404:	addr16 daa 
  41d406:	addr16 pop ebx
  41d408:	inc    edx
  41d409:	inc    edi
  41d40a:	push   esp
  41d40b:	add    BYTE PTR [edx-0xe],ch
  41d40e:	fs je  0x41d430
  41d411:	repnz sub eax,0xfff52b64
  41d417:	push   edx
  41d418:	pop    ds
  41d419:	call   0xda964366
  41d41e:	pusha  
  41d41f:	jns    0x41d49b
  41d421:	push   esi
  41d422:	dec    ecx
  41d423:	outs   dx,DWORD PTR ds:[esi]
  41d424:	jo     0x41d406
  41d426:	imul   ebp,DWORD PTR [eax+eax*1+0x0],0x0
	...
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [ebx+0x4d],ch
  41d45c:	dec    edi
  41d45d:	gs pop ebx
  41d45f:	cmp    al,0x6b
  41d461:	outs   dx,BYTE PTR ds:[esi]
  41d462:	jno    0x41d448
  41d464:	je     0x41d4c2
  41d466:	dec    edx
  41d467:	lock imul ebp,DWORD PTR [edi+0x69],0xffffffda
  41d46c:	call   FWORD PTR [ebx-0x4]
  41d46f:	in     eax,0x6a
  41d471:	arpl   WORD PTR [ecx],dx
  41d473:	push   esi
  41d474:	inc    edx
  41d475:	jb     0x41d49c
  41d477:	fild   QWORD PTR [esi+0x65]
  41d47a:	cmp    BYTE PTR [esi+0x0],dl
  41d47d:	dec    ebp
  41d47e:	xor    eax,0x166c64ec
  41d483:	jmp    0xe7093087
  41d488:	jns    0x41d4f3
  41d48a:	mov    dh,0xe5
  41d48c:	pop    esp
  41d48d:	pop    esp
  41d48e:	stos   BYTE PTR es:[edi],al
  41d48f:	repz push 0x66
  41d492:	shl    ebp,cl
  41d494:	pusha  
  41d495:	jae    0x41d4ad
  41d497:	add    cl,BYTE PTR [edi+0x6f]
  41d49a:	(bad)  
  41d49c:	jb     0x41d4ff
  41d49e:	dec    eax
  41d49f:	in     eax,0x5b
  41d4a1:	dec    esp
  41d4a2:	(bad)  
  41d4a4:	pop    esi
  41d4a5:	push   0x503e0c
  41d4aa:	or     esi,edx
  41d4ac:	outs   dx,DWORD PTR ds:[esi]
  41d4ad:	inc    esp
  41d4ae:	adc    esi,ebx
  41d4b0:	dec    DWORD PTR [ebx+0x15]
  41d4b3:	loop   0x41d511
  41d4b5:	ins    BYTE PTR es:[edi],dx
  41d4b6:	arpl   ax,sp
  41d4b8:	sub    dh,BYTE PTR [edx+0x63]
  41d4bb:	cmp    ah,BYTE PTR ds:0x6d
	...
  41d4ed:	add    BYTE PTR [eax],al
  41d4ef:	add    al,bh
  41d4f1:	pop    eax
  41d4f2:	and    esi,DWORD PTR [edx-0x8]
  41d4f5:	std    
  41d4f6:	pop    ds
  41d4f7:	pop    edi
  41d4f8:	neg    DWORD PTR [ebx+0x48ef6752]
  41d4fe:	dec    ebx
  41d4ff:	outs   dx,BYTE PTR ds:[esi]
  41d500:	add    eax,0x1d4ee617
  41d505:	in     al,dx
  41d506:	add    ecx,DWORD PTR [ebp-0x39]
  41d509:	add    eax,0xfd9d0026
  41d50e:	sub    eax,0x3015d16d
  41d513:	arpl   ax,dx
  41d515:	mov    esp,0x9eb75f1d
  41d51a:	dec    esi
  41d51b:	(bad)
  41d51f:	push   eax
  41d520:	arpl   di,cx
  41d522:	sub    al,0x74
  41d524:	mov    esi,0x8163e3cf
  41d529:	sahf   
  41d52a:	inc    edx
  41d52b:	dec    esp
  41d52c:	mov    al,0x65
  41d52e:	cmp    eax,0xf4ad885c
  41d533:	inc    eax
  41d534:	push   edx
  41d535:	(bad)  
  41d536:	out    dx,al
  41d537:	xor    esi,DWORD PTR [edx]
  41d539:	add    DWORD PTR [ebx+0x37],eax
  41d53c:	cs pusha 
  41d53e:	call   0xefbc0771
  41d543:	sub    ch,BYTE PTR [ebx]
  41d545:	pop    ebp
  41d546:	stc    
  41d547:	das    
  41d548:	mov    cs,esi
  41d54a:	icebp  
  41d54b:	aaa    
  41d54c:	xchg   ebx,eax
  41d54d:	pop    ebp
  41d54e:	cmp    eax,0x3b709042
  41d553:	inc    esi
	...
  41d584:	add    BYTE PTR [eax],al
  41d586:	(bad)
  41d58a:	dec    ebp
  41d58b:	mov    gs,WORD PTR [edi]
  41d58d:	ins    DWORD PTR es:[edi],dx
  41d58e:	inc    eax
  41d58f:	(bad)  
  41d590:	and    BYTE PTR [edx+0x35],dh
  41d593:	add    eax,0xf772324c
  41d598:	out    0x30,al
  41d59a:	add    BYTE PTR [edi],dh
  41d59c:	pop    ebp
  41d59d:	pop    ds
  41d59e:	adc    DWORD PTR [eax],edi
  41d5a0:	std    
  41d5a1:	cmp    edi,eax
  41d5a3:	sbb    bh,ah
  41d5a5:	push   edi
  41d5a6:	sbb    eax,0x3d1751
  41d5ab:	xor    DWORD PTR [ebx],edi
  41d5ad:	pop    ds
  41d5ae:	icebp  
  41d5af:	add    al,0x24
  41d5b1:	push   ecx
  41d5b2:	pop    ss
  41d5b3:	and    DWORD PTR [ecx],ecx
  41d5b5:	repnz and DWORD PTR ss:[eax],ecx
  41d5b9:	xor    BYTE PTR [ebx+0x56],ah
  41d5bc:	sub    esp,DWORD PTR [ebx]
  41d5be:	iret   
  41d5bf:	es mov ebp,0xe731ac1f
  41d5c5:	push   edi
  41d5c6:	mov    al,ds:0xce30f338
  41d5cb:	and    edi,ebx
  41d5cd:	push   edi
  41d5ce:	je     0x41d609
  41d5d0:	and    eax,0xb0059350
  41d5d5:	and    eax,0x25d922af
  41d5da:	xor    BYTE PTR [ecx],0x7
  41d5dd:	aas    
  41d5de:	fwait
  41d5df:	xor    eax,0x229124bb
  41d5e4:	mov    ecx,0xcd1eae03
  41d5e9:	sub    al,BYTE PTR [eax]
	...
  41d61b:	add    BYTE PTR [ebp-0x6bbf44de],cl
  41d621:	sub    BYTE PTR [edi-0x73c85de2],bh
  41d627:	pop    ds
  41d628:	sbb    BYTE PTR [ebx],0x93
  41d62b:	sub    bh,BYTE PTR [ecx+ebx*1]
  41d62e:	call   0x204a:0xc7582803
  41d635:	in     eax,0xac
  41d637:	dec    edi
  41d638:	xor    esp,ebp
  41d63a:	xchg   esi,eax
  41d63b:	and    dh,BYTE PTR [edx]
  41d63d:	cmp    BYTE PTR [eax],al
  41d63f:	jle    0x41d6c0
  41d641:	aaa    
  41d642:	fs jp  0x41d6a5
  41d645:	inc    ecx
  41d646:	push   eax
  41d647:	sub    BYTE PTR [edi],cl
  41d649:	inc    esp
  41d64a:	cmp    cl,BYTE PTR [ecx]
  41d64c:	addr16 xor eax,0x373e5d71
  41d652:	arpl   WORD PTR [edx-0x7b],cx
  41d655:	daa    
  41d656:	ins    BYTE PTR es:[edi],dx
  41d657:	push   ebp
  41d658:	pop    edi
  41d659:	push   ebp
  41d65a:	push   ecx
  41d65b:	xor    eax,0x2a633746
  41d660:	xor    DWORD PTR [eax],ebp
  41d662:	pop    edi
  41d663:	xor    eax,0x1a6e444c
  41d668:	xor    ecx,DWORD PTR [esi+ebp*2+0xa]
  41d66c:	jl     0x41d673
  41d66e:	add    BYTE PTR [edx],cl
  41d670:	xchg   ecx,eax
  41d671:	xor    dh,BYTE PTR [eax+0x15]
  41d674:	push   edx
  41d675:	cmc    
  41d676:	sub    eax,0x197b0d
  41d67b:	sub    dh,BYTE PTR [ecx+0x32]
  41d67e:	jo     0x41d67d
	...
  41d6b0:	add    BYTE PTR [eax],al
  41d6b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6b3:	sbb    esi,DWORD PTR [eax-0x5]
  41d6b6:	xchg   DWORD PTR [ecx],esi
  41d6b8:	arpl   dx,cx
  41d6ba:	je     0x41d6fd
  41d6bc:	pop    edi
  41d6bd:	aad    0x41
  41d6bf:	add    eax,0x560e900
  41d6c4:	add    cl,ch
  41d6c6:	pusha  
  41d6c7:	add    eax,0x3fa0e900
  41d6cc:	xor    eax,0xcd6fdcfd
  41d6d1:	fsubr  DWORD PTR [edi+0x2e]
  41d6d4:	add    BYTE PTR [ebx+0x17462260],al
  41d6da:	mov    eax,ds:0xfcdd353f
  41d6df:	outs   dx,DWORD PTR ds:[esi]
  41d6e0:	int    0xf8
  41d6e2:	dec    edi
  41d6e3:	add    BYTE PTR cs:[ebx+0x60],al
  41d6e7:	and    al,BYTE PTR [esi+0x0]
  41d6ea:	ins    BYTE PTR es:[edi],dx
  41d6eb:	inc    esp
  41d6ec:	dec    edx
  41d6ed:	aaa    
  41d6ee:	dec    BYTE PTR [edx+0x319bcfba]
  41d6f4:	jns    0x41d6f6
  41d6f6:	and    BYTE PTR [esi],al
  41d6f8:	gs inc esi
  41d6fa:	mov    WORD PTR [esi-0x62750003],?
  41d700:	sub    eax,0x4f015232
  41d705:	outs   dx,DWORD PTR ds:[esi]
  41d706:	and    al,0xed
  41d708:	jb     0x41d76b
  41d70a:	dec    eax
  41d70b:	fcomp  QWORD PTR [ebx+0x4d]
  41d70e:	adc    esp,edx
  41d710:	jno    0x41d781
  41d712:	cmp    esi,esp
  41d714:	gs je  0x41d717
	...
  41d747:	add    BYTE PTR [esi-0x18],bl
  41d74a:	ins    DWORD PTR es:[edi],dx
  41d74b:	je     0x41d7a4
  41d74d:	rep ins DWORD PTR es:[edi],dx
  41d74f:	gs jbe 0x41d6f3
  41d752:	inc    edx
  41d753:	js     0x41d7cf
  41d755:	in     eax,0x6a
  41d757:	jb     0x41d7c0
  41d759:	repz pop ebx
  41d75b:	dec    ecx
  41d75c:	ins    BYTE PTR es:[edi],dx
  41d75d:	in     eax,dx
  41d75e:	pusha  
  41d75f:	ins    BYTE PTR es:[edi],dx
  41d760:	outs   dx,BYTE PTR ds:[esi]
  41d761:	or     BYTE PTR [esi+0x6f],al
  41d764:	cmp    ch,ah
  41d766:	outs   dx,BYTE PTR ds:[esi]
  41d767:	pop    esp
  41d768:	dec    ecx
  41d769:	in     eax,dx
  41d76a:	push   0x72
  41d76c:	sbb    ebx,edi
  41d76e:	pusha  
  41d76f:	xor    cl,BYTE PTR [edx]
  41d771:	push   es
  41d772:	add    BYTE PTR [eax],al
  41d774:	or     ah,cl
  41d776:	jmp    DWORD PTR [ecx-0x6]
  41d779:	fdiv   st(7),st
  41d77b:	xor    edx,edi
  41d77d:	popf   
  41d77e:	std    
  41d77f:	xor    eax,0x65fd990a
  41d784:	or     ah,BYTE PTR [ebp-0x2005c703]
  41d78a:	push   DWORD PTR [ebx]
  41d78c:	cli    
  41d78d:	scas   al,BYTE PTR es:[edi]
  41d78e:	std    
  41d78f:	sub    al,0xca
  41d791:	mov    cl,0xfd
  41d793:	bound  esp,QWORD PTR [ebx-0x64]
  41d796:	and    eax,0xe09c8a00
  41d79b:	inc    DWORD PTR [ebx-0x64]
  41d79e:	idiv   bh
  41d7a0:	ja     0x41d73e
  41d7a2:	jmp    0x26de5fa6
  41d7a7:	add    BYTE PTR [ecx-0x64],dh
  41d7aa:	repz inc DWORD PTR [eax]
	...
  41d7dd:	add    BYTE PTR [ebx-0x64],ch
  41d7e0:	icebp  
  41d7e1:	call   DWORD PTR [eax-0x64]
  41d7e4:	and    eax,0x249c0100
  41d7e9:	add    BYTE PTR [esp+ebx*4+0x27],dl
  41d7ed:	add    BYTE PTR [esp+ebx*4+0x1],cl
  41d7f1:	add    BYTE PTR [esi],ch
  41d7f3:	push   ebp
  41d7f4:	and    eax,0x20ef0472
  41d7f9:	idiv   dx
  41d7fc:	pop    eax
  41d7fd:	addr16 cmc 
  41d7ff:	hlt    
  41d800:	and    DWORD PTR [ebx-0x29],esp
  41d803:	out    0xdd,eax
  41d805:	(bad)  
  41d806:	mov    esi,0x7c3a340a
  41d80b:	add    DWORD PTR [bx+di-0x4c],edx
  41d80f:	clc    
  41d810:	aaa    
  41d811:	jne    0x41d7d5
  41d813:	lods   al,BYTE PTR ds:[esi]
  41d814:	sub    BYTE PTR [edx+eiz*4-0x6],bl
  41d818:	and    BYTE PTR [edx-0x3a],ah
  41d81b:	cli    
  41d81c:	inc    esp
  41d81d:	ins    DWORD PTR es:[edi],dx
  41d81e:	mov    dh,0xd1
  41d820:	and    ch,BYTE PTR [esi+0x63]
  41d823:	imul   ebx,DWORD PTR [esp+esi*2],0x7e
  41d827:	imul   ebp,DWORD PTR [eax],0x72
  41d82a:	xchg   ebp,eax
  41d82b:	shl    DWORD PTR [ebx],0x71
  41d82e:	arpl   WORD PTR [ebx-0x74798be4],cx
  41d834:	sub    BYTE PTR [edx+0x6d],dh
  41d837:	mov    ecx,0xc2462033
  41d83c:	dec    ebp
  41d83d:	dec    eax
  41d83e:	je     0x41d845
  41d840:	call   0x0:0x37
	...
  41d873:	add    BYTE PTR [ebx+0x54],ah
  41d876:	nop
  41d877:	aaa    
  41d878:	inc    eax
  41d879:	push   esp
  41d87a:	mov    WORD PTR ds:0xe3992255,?
  41d880:	and    DWORD PTR [ecx],0x23405aa3
  41d886:	xchg   esp,eax
  41d887:	xor    eax,0x1c9a0547
  41d88c:	aaa    
  41d88d:	and    bl,BYTE PTR [edx+0x4c2f3128]
  41d893:	ss inc ebx
  41d895:	loop   0x41d8d9
  41d897:	push   eax
  41d898:	xor    DWORD PTR [edx],esp
  41d89a:	inc    esp
  41d89b:	and    DWORD PTR [edi],edx
  41d89d:	and    al,BYTE PTR [edi]
  41d89f:	dec    eax
  41d8a0:	cld    
  41d8a1:	xor    cl,BYTE PTR [ebp+eiz*1-0x9]
  41d8a5:	pop    ss
  41d8a6:	cmp    DWORD PTR [ebx],ebp
  41d8a8:	arpl   WORD PTR [eax+eax*2+0x38],dx
  41d8ac:	add    BYTE PTR [esp+eax*2+0x36],dl
  41d8b0:	in     eax,dx
  41d8b1:	and    DWORD PTR [ecx],ebx
  41d8b3:	in     al,0x81
  41d8b5:	and    esp,ecx
  41d8b7:	push   esi
  41d8b8:	shl    BYTE PTR [edx],cl
  41d8ba:	sbb    DWORD PTR [edx+esi*4],eax
  41d8bd:	push   ds
  41d8be:	adc    esp,DWORD PTR [edi]
  41d8c0:	mov    dl,0x22
  41d8c2:	stc    
  41d8c3:	cmp    eax,eax
  41d8c5:	xor    eax,edi
  41d8c7:	out    0xc0,al
  41d8c9:	ficomp DWORD PTR [ebx]
  41d8cb:	xor    eax,0x53c733c0
  41d8d0:	mov    es,WORD PTR ds:0x3cbf350c
  41d8d6:	les    ebp,FWORD PTR [edx]
	...
  41d908:	add    BYTE PTR [eax],al
  41d90a:	sbb    BYTE PTR ds:0x57d1ac8,0xba
  41d911:	sbb    cl,BYTE PTR [edi+0x71269a22]
  41d917:	das    
  41d918:	les    esi,FWORD PTR ds:0xccffe243
  41d91e:	pushf  
  41d91f:	push   esi
  41d920:	inc    esi
  41d921:	xchg   ebp,eax
  41d922:	nop
  41d923:	add    eax,0x347c8c44
  41d928:	js     0x41d8ae
  41d92a:	sub    dl,BYTE PTR [ecx+0x50]
  41d92d:	jmp    0x84b5f9c9
  41d932:	(bad)  
  41d933:	xlat   BYTE PTR ds:[ebx]
  41d934:	ja     0x41d8ca
  41d936:	pop    esp
  41d937:	add    eax,0xe57e8455
  41d93c:	inc    ebx
  41d93d:	mov    BYTE PTR [eax+ecx*2+0x0],dh
  41d941:	popf   
  41d942:	and    DWORD PTR [edx],0x67
  41d945:	push   edi
  41d946:	xchg   DWORD PTR [ebx+0x5f],eax
  41d949:	push   ebp
  41d94a:	inc    eax
  41d94b:	add    eax,0x20233851
  41d950:	je     0x41d996
  41d952:	jg     0x41d975
  41d954:	ins    DWORD PTR es:[edi],dx
  41d955:	cmp    ebx,DWORD PTR [eax+ecx*2+0x74]
  41d959:	or     DWORD PTR [esi-0x59],ebp
  41d95c:	jno    0x41d9a6
  41d95e:	inc    ebp
  41d95f:	sbb    DWORD PTR [ebx-0x17],esp
  41d962:	mov    BYTE PTR [edi-0x58bf16d8],ah
  41d968:	inc    edx
  41d969:	mov    eax,cs:0x3b5454
	...
  41d99f:	add    BYTE PTR [eax+0x5f354e3e],ah
  41d9a5:	push   ebp
  41d9a6:	push   edx
  41d9a7:	xor    BYTE PTR [esi+eiz*8+0x51],bh
  41d9ab:	and    BYTE PTR [edi+0x52],bl
  41d9ae:	dec    esi
  41d9af:	and    BYTE PTR [eax-0x6016bcae],dl
  41d9b5:	cmp    eax,0x55faa43
  41d9ba:	inc    esi
  41d9bb:	scas   al,BYTE PTR es:[edi]
  41d9bc:	scas   al,BYTE PTR es:[edi]
  41d9bd:	inc    edx
  41d9be:	inc    edi
  41d9bf:	scas   al,BYTE PTR es:[edi]
  41d9c0:	mov    ds:0x43bd0005,al
  41d9c5:	and    BYTE PTR [edi+0x0],ah
  41d9c8:	adc    al,0xf2
  41d9ca:	jmp    FWORD PTR [esi-0x48]
  41d9cd:	or     esp,DWORD PTR [ebx+0x69]
  41d9d0:	and    al,0x56
  41d9d2:	jno    0x41da46
  41d9d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9d5:	add    dh,BYTE PTR [eax+0x61]
  41d9d8:	stc    
  41d9d9:	icebp  
  41d9da:	jb     0x41da4b
  41d9dc:	clc    
  41d9dd:	ficomp WORD PTR [edx+0x76]
  41d9e0:	fild   DWORD PTR [esi]
  41d9e2:	jno    0x41da49
  41d9e4:	mov    edx,0x38656eef
  41d9e9:	in     al,0x5c
  41d9eb:	ins    DWORD PTR es:[edi],dx
  41d9ec:	fist   WORD PTR [ebp+0x76]
  41d9ef:	popa   
  41d9f0:	out    0xef,al
  41d9f2:	pusha  
  41d9f3:	add    ah,bl
  41d9f5:	out    dx,al
  41d9f6:	outs   dx,DWORD PTR ds:[esi]
  41d9f7:	cmp    dh,BYTE PTR [ebp-0x3a]
  41d9fa:	std    
  41d9fb:	addr16 cs in eax,dx
  41d9fe:	outs   dx,DWORD PTR ds:[esi]
  41d9ff:	cmp    ah,BYTE PTR [ebp-0x3a]
  41da02:	std    
  41da03:	add    BYTE PTR [bx+si],al
	...
  41da36:	cs in  eax,dx
  41da38:	outs   dx,DWORD PTR ds:[esi]
  41da39:	jae    0x41da9b
  41da3b:	(bad)  
  41da3c:	sub    al,0x0
  41da3e:	push   esi
  41da3f:	imul   ebp,DWORD PTR ds:[edi+0x1d],0xffffffe5
  41da44:	pusha  
  41da45:	pop    esp
  41da46:	cmp    DWORD PTR [ecx],ecx
  41da48:	jb     0x41dab9
  41da4a:	ja     0x41da28
  41da4c:	call   FWORD PTR [ebx-0x77]
  41da4f:	or     DWORD PTR [edx+0x6f],esi
  41da52:	or     BYTE PTR [bx+di+0x6d],dh
  41da56:	cmp    dh,BYTE PTR [esi]
  41da58:	aas    
  41da59:	push   0x65690738
  41da5e:	pop    edx
  41da5f:	in     eax,0x70
  41da61:	jae    0x41da9d
  41da63:	push   ebx
  41da64:	imul   esp,DWORD PTR [esi+0x2e],0xffffffef
  41da68:	pop    esp
  41da69:	jb     0x41da9a
  41da6b:	ss aas 
  41da6d:	push   0x65690738
  41da72:	arpl   WORD PTR [ebp+ebx*1+0x73],bp
  41da76:	nop
  41da77:	pushf  
  41da78:	cmp    al,0x6e
  41da7a:	jo     0x41dae4
  41da7c:	and    al,0x6c
  41da7e:	xchg   DWORD PTR [edi-0x638e98bb],eax
  41da84:	dec    ebp
  41da85:	inc    edx
  41da86:	jno    0x41daef
  41da88:	and    BYTE PTR [edi+0x56],ah
  41da8b:	xchg   ecx,eax
  41da8c:	add    DWORD PTR [ebp+eiz*1-0x6b],ebx
  41da90:	and    ch,BYTE PTR [eax+0x51]
  41da93:	jg     0x41dab5
  41da95:	arpl   WORD PTR [ebx+0x58],sp
  41da98:	inc    edx
  41da99:	ins    DWORD PTR es:[edi],dx
	...
  41daca:	add    BYTE PTR [eax],al
  41dacc:	dec    esi
  41dacd:	(bad)  
  41dace:	and    eax,0x4f88636d
  41dad3:	ins    DWORD PTR es:[edi],dx
  41dad4:	inc    eax
  41dad5:	add    DWORD PTR [eax+0x63],0x37
  41dad9:	xor    BYTE PTR [ecx],al
  41dadb:	dec    ecx
  41dadc:	dec    esi
  41dadd:	icebp  
  41dade:	es ins BYTE PTR es:[edi],dx
  41dae0:	(bad)  
  41dae1:	ss push ds
  41dae3:	add    BYTE PTR [edi],ch
  41dae5:	jecxz  0x41dac5
  41dae7:	dec    edx
  41dae8:	(bad)  
  41dae9:	out    0x26,eax
  41daeb:	ins    DWORD PTR es:[edi],dx
  41daec:	or     eax,0xf1504d9c
  41daf1:	ss es addr16 (bad) 
  41daf5:	cmp    BYTE PTR [ecx],dh
  41daf7:	add    BYTE PTR [esi],bl
  41daf9:	in     al,dx
  41dafa:	sbb    ah,BYTE PTR [ecx+0x63]
  41dafd:	dec    edx
  41dafe:	inc    edi
  41daff:	jo     0x41dacb
  41db01:	(bad)  
  41db03:	inc    ebx
  41db04:	rol    DWORD PTR ds:0xfab00021,cl
  41db0a:	and    ah,BYTE PTR [esi-0x3b]
  41db0d:	mov    ecx,0xae935443
  41db12:	xor    ah,BYTE PTR [edi-0x49]
  41db15:	adc    DWORD PTR [ecx],esi
  41db17:	cs mov edx,0xbf001ca4
  41db1d:	add    eax,0x2a8f1cba
  41db22:	fiadd  DWORD PTR [ebx]
  41db24:	scas   eax,DWORD PTR es:[edi]
  41db25:	cmp    eax,eax
  41db27:	xor    bh,BYTE PTR [eax+ebp*1-0x42]
  41db2b:	and    BYTE PTR [ebx+0x52],al
  41db2e:	int3   
  41db2f:	daa    
	...
  41db60:	add    BYTE PTR [eax],al
  41db62:	jl     0x41db8a
  41db64:	out    0xdd,eax
  41db66:	xchg   BYTE PTR [ecx],bl
  41db68:	mov    bh,0x3
  41db6a:	xchg   edx,eax
  41db6b:	add    eax,0x55703c4
  41db70:	fwait
  41db71:	add    edi,DWORD PTR [eax*1+0x546038d]
  41db78:	call   0x4f46:0xab056303
  41db7f:	xor    al,0x89
  41db81:	and    al,0x47
  41db83:	in     eax,0xa2
  41db85:	push   ds
  41db86:	xor    eax,DWORD PTR ss:[ebx-0x7bd6fbe2]
  41db8d:	xor    DWORD PTR [ebx+0x38],esp
  41db90:	xor    al,0xde
  41db92:	xor    eax,0x631c4a17
  41db97:	dec    ebx
  41db98:	pop    ecx
  41db99:	daa    
  41db9a:	adc    ch,BYTE PTR ds:0x5135825
  41dba0:	adc    eax,0xe74b2851
  41dba5:	inc    ecx
  41dba6:	jmp    DWORD PTR ds:0x191d2731
  41dbac:	aaa    
  41dbad:	add    al,0xd2
  41dbaf:	sbb    esp,DWORD PTR cs:[edi]
  41dbb2:	test   DWORD PTR [ecx],ebp
  41dbb4:	or     BYTE PTR [eax],bh
  41dbb6:	arpl   WORD PTR [ecx+0x8],dx
  41dbb9:	xor    edi,ecx
  41dbbb:	xor    eax,0x1cb23108
  41dbc0:	push   ss
  41dbc1:	xor    bh,BYTE PTR [edi+0x232b05]
	...
  41dbf7:	add    BYTE PTR [edx+0x7b280019],dh
  41dbfd:	sub    DWORD PTR [edx+0x4],esi
  41dc00:	push   edx
  41dc01:	push   ss
  41dc02:	add    BYTE PTR [ebp-0x4b8be9bf],dh
  41dc08:	push   ebx
  41dc09:	sub    BYTE PTR [edx-0x17],dh
  41dc0c:	inc    esp
  41dc0d:	inc    esp
  41dc0e:	jno    0x41dbe5
  41dc10:	nop
  41dc11:	xor    dh,BYTE PTR [edx-0x43]
  41dc14:	pusha  
  41dc15:	ss ins DWORD PTR es:[edi],dx
  41dc17:	(bad)  
  41dc18:	xor    al,0x1a
  41dc1a:	pop    edi
  41dc1b:	mov    ebx,0xbd46413d
  41dc20:	adc    DWORD PTR [esi],0x447db968
  41dc26:	imul   edi,DWORD PTR [ebp-0x6ca0cede],0x99744b7d
  41dc30:	sub    al,0x36
  41dc32:	arpl   WORD PTR [ebp+0x6c],di
  41dc35:	sub    al,0x6e
  41dc37:	xchg   BYTE PTR [ebx+0x5],dh
  41dc3a:	pop    esp
  41dc3b:	stos   DWORD PTR es:[edi],eax
  41dc3c:	inc    esp
  41dc3d:	inc    esp
  41dc3e:	jp     0x41dbc4
  41dc40:	sbb    DWORD PTR es:[eax-0x17],esi
  41dc44:	mov    dh,0x29
  41dc46:	jo     0x41dc95
  41dc48:	addr16 dec ebx
  41dc4a:	push   esp
  41dc4b:	cmp    DWORD PTR [edx+0x581d2dec],ebp
  41dc51:	xor    ebp,DWORD PTR [ecx+0x25]
  41dc54:	xor    ch,BYTE PTR ds:0x41434d63
  41dc5a:	ins    DWORD PTR es:[edi],dx
  41dc5b:	cmp    DWORD PTR [eax],eax
	...
  41dc8d:	add    BYTE PTR [ebx+esi*1],bh
  41dc90:	pop    esp
  41dc91:	dec    edx
  41dc92:	jle    0x41dcc2
  41dc94:	imul   ecx,DWORD PTR [eax],0x75
  41dc97:	sub    DWORD PTR [eax],eax
  41dc99:	outs   dx,BYTE PTR es:[esi]
  41dc9b:	dec    ebx
  41dc9c:	push   esp
  41dc9d:	cmp    DWORD PTR [edi+0x44],ebx
  41dca0:	ins    DWORD PTR es:[edi],dx
  41dca1:	call   FWORD PTR [esi+0x26]
  41dca4:	popa   
  41dca5:	add    BYTE PTR [esi],dh
  41dca7:	add    BYTE PTR [ebx+0x6e],ch
  41dcaa:	sub    ecx,eax
  41dcac:	jno    0x41dd26
  41dcae:	es pop es
  41dcb0:	das    
  41dcb1:	inc    esp
  41dcb2:	fisttp WORD PTR [eax+0x54]
  41dcb5:	push   eax
  41dcb6:	or     dl,dh
  41dcb8:	fs je  0x41dce2
  41dcbb:	(bad)  
  41dcbc:	sub    eax,0x1c69
  41dcc1:	pop    esp
  41dcc2:	pop    ecx
  41dcc3:	dec    ebp
  41dcc4:	sub    DWORD PTR [esi-0x2a],eax
  41dcc7:	add    BYTE PTR ss:[ecx+ecx*8-0x1],bl
  41dccc:	jae    0x41dd33
  41dcce:	mov    dh,0xeb
  41dcd0:	outs   dx,BYTE PTR ds:[esi]
  41dcd1:	imul   esp,DWORD PTR [ebp-0x358d9f00],0x16464b35
  41dcdb:	cmp    bh,BYTE PTR ds:0x3f52f752
  41dce1:	ins    BYTE PTR es:[edi],dx
  41dce2:	jmp    0x41dcb9
  41dce4:	outs   dx,BYTE PTR ds:[esi]
  41dce5:	cmp    DWORD PTR gs:[edx+0x54],edx
  41dce9:	jns    0x41dd15
  41dceb:	jmp    0x41dd38
  41dced:	imul   ebx,eax,0x467752
	...
  41dd23:	add    bl,dl
  41dd25:	xchg   esi,eax
  41dd26:	xor    DWORD PTR [ebx],esi
  41dd28:	dec    ecx
  41dd29:	mov    cl,0x35
  41dd2b:	sub    eax,0x32439744
  41dd30:	pop    edi
  41dd31:	cwde   
  41dd32:	sub    eax,0x3ebc4b31
  41dd37:	xor    ecx,DWORD PTR [ecx-0x50]
  41dd3a:	sub    dh,BYTE PTR [eax]
  41dd3c:	bound  ebx,QWORD PTR [ecx-0x64c7cdd3]
  41dd42:	inc    ebx
  41dd43:	xor    al,0x53
  41dd45:	inc    esp
  41dd46:	inc    edx
  41dd47:	jge    0x41dce7
  41dd49:	cwde   
  41dd4a:	sub    esi,DWORD PTR [edx]
  41dd4c:	mov    ds,WORD PTR [ecx+0x5637759]
  41dd52:	sbb    dh,BYTE PTR [ecx]
  41dd54:	jno    0x41dd02
  41dd56:	inc    eax
  41dd57:	pop    edi
  41dd58:	mov    al,0x5
  41dd5a:	inc    edx
  41dd5b:	push   esp
  41dd5c:	xchg   ebx,eax
  41dd5d:	lods   al,BYTE PTR ds:[esi]
  41dd5e:	inc    ebp
  41dd5f:	dec    esi
  41dd60:	mov    esi,0x915f56a0
  41dd65:	or     eax,0xfa63651a
  41dd6a:	sub    esp,DWORD PTR [esi-0x6d]
  41dd6d:	lods   al,BYTE PTR ds:[esi]
  41dd6e:	xlat   BYTE PTR ds:[ebx]
  41dd6f:	jno    0x41ddf0
  41dd71:	mov    esp,0x5ea65401
  41dd76:	cmp    BYTE PTR [ecx-0x6f],dl
  41dd79:	sbb    dl,0x29
  41dd7c:	arpl   WORD PTR [esp+0x71],bx
  41dd80:	jo     0x41dde5
  41dd82:	sbb    dh,BYTE PTR [edx+0x47]
  41dd85:	or     al,0xef
  41dd87:	add    BYTE PTR cs:[eax],al
	...
  41ddba:	cdq    
  41ddbb:	mov    gs,ebx
  41ddbd:	call   DWORD PTR [edi+0x7f]
  41ddc0:	and    BYTE PTR [edx+0x35],dh
  41ddc3:	lea    ebx,[eax]
  41ddc5:	arpl   WORD PTR [ecx+0x7f],di
  41ddc8:	jmp    0x41ddc9
  41ddca:	and    DWORD PTR ds:0x1d8d836c,edx
  41ddd1:	xor    DWORD PTR fs:[ecx+0x1f597136],edx
  41ddd8:	jmp    0x41ddd9
  41ddda:	inc    esi
  41dddb:	lods   al,BYTE PTR ds:[esi]
  41dddc:	dec    ebp
  41dddd:	inc    ebx
  41ddde:	xor    ecx,esi
  41dde0:	push   esp
  41dde1:	push   edx
  41dde2:	sub    eax,0x1746040b
  41dde7:	fsubr  st(3),st
  41dde9:	dec    ebp
  41ddea:	add    al,0xe3
  41ddec:	add    eax,DWORD PTR [esi+0x17]
  41ddef:	cld    
  41ddf0:	cmp    DWORD PTR [ebp-0x14],ebp
  41ddf3:	stos   DWORD PTR es:[edi],eax
  41ddf4:	xlat   BYTE PTR ss:[bx]
  41ddf7:	dec    ecx
  41ddf8:	xor    eax,0x1405db2e
  41ddfd:	sbb    BYTE PTR [ebx+0x34],ah
  41de00:	cs inc edx
  41de02:	scas   eax,DWORD PTR es:[edi]
  41de03:	cmp    BYTE PTR [eax],ch
  41de05:	push   esi
  41de06:	mov    al,ds:0xc11b3941
  41de0b:	xor    ah,dl
  41de0d:	inc    ecx
  41de0e:	xchg   edi,eax
  41de0f:	xor    eax,0xd876f6c7
  41de14:	adc    dl,BYTE PTR [edi-0x7e]
  41de17:	adc    eax,DWORD PTR [eax]
  41de19:	xor    al,0x8f
  41de1b:	adc    al,0xe7
  41de1d:	push   esi
	...
  41de4e:	add    BYTE PTR [eax],al
  41de50:	sahf   
  41de51:	inc    edi
  41de52:	mov    bl,0x52
  41de54:	inc    esp
  41de55:	xor    ebp,DWORD PTR [edi+eax*2+0x1ac93091]
  41de5c:	dec    eax
  41de5d:	inc    edi
  41de5e:	fwait
  41de5f:	push   ebx
  41de60:	inc    ebx
  41de61:	aam    0xc
  41de63:	xrelease mov BYTE PTR [edi-0x65],al
  41de67:	push   ebx
  41de68:	xor    ch,BYTE PTR [edx]
  41de6a:	mov    ecx,0x9a134031
  41de6f:	add    esp,DWORD PTR ds:0x23e3b739
  41de75:	xor    BYTE PTR [ecx+ebx*1+0x4fa50537],bl
  41de7c:	adc    esp,ebp
  41de7e:	lods   al,BYTE PTR ds:[esi]
  41de7f:	sbb    al,0x3f
  41de81:	sub    al,ah
  41de83:	pop    ds
  41de84:	arpl   WORD PTR ds:0x18123688,si
  41de8a:	jle    0x41dec1
  41de8c:	inc    DWORD PTR [edx+edi*1]
  41de8f:	pop    ds
  41de90:	adc    DWORD PTR [edi],edx
  41de92:	inc    esp
  41de93:	ss adc eax,0x631f4426
  41de99:	cmp    bl,BYTE PTR [edx+0x1f]
  41de9c:	icebp  
  41de9d:	dec    ebp
  41de9e:	sub    eax,DWORD PTR [esp]
  41dea1:	das    
  41dea2:	push   eax
  41dea3:	xor    ah,bh
  41dea5:	and    eax,0x28a34500
  41deaa:	jb     0x41def0
  41deac:	jle    0x41dec7
  41deae:	ins    DWORD PTR es:[edi],dx
  41deaf:	sbb    edi,DWORD PTR [eax+0x5]
  41deb2:	push   eax
  41deb3:	push   cs
	...
  41dee4:	add    BYTE PTR [eax],al
  41dee6:	lea    ebx,[ecx]
  41dee8:	dec    esi
  41dee9:	sbb    al,0x54
  41deeb:	and    esp,DWORD PTR [ebx+0x1b]
  41deee:	pop    edi
  41deef:	ss arpl bx,di
  41def2:	jb     0x41df18
  41def4:	jb     0x41df0b
  41def6:	js     0x41df0d
  41def8:	arpl   cx,bp
  41defa:	jo     0x41df01
  41defc:	add    cl,ch
  41defe:	test   eax,0x6ee93f4a
  41df03:	and    al,0x8f
  41df05:	fsubr  st(1),st
  41df07:	dec    ecx
  41df08:	dec    esp
  41df09:	push   es
  41df0a:	jno    0x41dec4
  41df0c:	add    eax,0xd1a3c789
  41df11:	iret   
  41df12:	xor    eax,0xafb0038
  41df17:	shr    DWORD PTR ds:0x30f1c9fb,cl
  41df1d:	mul    BYTE PTR [eax-0x2b]
  41df20:	or     edi,ebp
  41df22:	enter  0x5ec,0xe8
  41df26:	lds    eax,FWORD PTR [edx]
  41df28:	add    eax,0x510567ea
  41df2d:	jle    0x41deb1
  41df2f:	sbb    DWORD PTR [ebp-0x78],esi
  41df32:	jbe    0x41df58
  41df34:	pop    esp
  41df35:	lods   eax,DWORD PTR ds:[esi]
  41df36:	dec    ecx
  41df37:	das    
  41df38:	pop    edi
  41df39:	jp     0x41df5d
  41df3b:	cmp    DWORD PTR [eax-0x73],edx
  41df3e:	das    
  41df3f:	sub    BYTE PTR [esp+ecx*2-0x79],dh
  41df43:	dec    edx
  41df44:	pop    edi
  41df45:	dec    edi
  41df46:	inc    eax
  41df47:	sub    ah,BYTE PTR [ebx+0x5b]
	...
  41df7a:	add    BYTE PTR [eax],al
  41df7c:	addr16 dec ebp
  41df7e:	ins    DWORD PTR es:[edi],dx
  41df7f:	pop    edx
  41df80:	xor    eax,DWORD PTR ds:0x290053
  41df86:	jb     0x41df88
  41df88:	dec    edx
  41df89:	in     al,0x6e
  41df8b:	jae    0x41dfd7
  41df8d:	xor    ebp,DWORD PTR [ebx+0x72]
  41df90:	mov    cs,WORD PTR [ecx]
  41df92:	push   edx
  41df93:	gs ja  0x41df92
  41df96:	jae    0x41dffd
  41df98:	sbb    bl,bh
  41df9a:	fs jb  0x41dfe7
  41df9d:	inc    edi
  41df9e:	aas    
  41df9f:	jns    0x41e009
  41dfa1:	(bad)  
  41dfa2:	jno    0x41e008
  41dfa4:	das    
  41dfa5:	jmp    0x6370:0xff140066
  41dfac:	popa   
  41dfad:	or     DWORD PTR [ecx+0x73],esi
  41dfb0:	pop    edi
  41dfb1:	xlat   BYTE PTR ds:[ebx]
  41dfb2:	sub    eax,0x65fd3563
  41dfb7:	imul   ebx,DWORD PTR ds:0x2f733c03,0xb46973ef
  41dfc1:	in     eax,0x1f
  41dfc3:	outs   dx,BYTE PTR ds:[esi]
  41dfc4:	sbb    edi,eax
  41dfc6:	pusha  
  41dfc7:	cmp    eax,0x220958
  41dfcc:	sbb    al,0xe4
  41dfce:	imul   esi,DWORD PTR [ebp-0x61],0xffffffa7
  41dfd2:	pop    ds
  41dfd3:	add    BYTE PTR [ecx],cl
  41dfd5:	(bad)  
  41dfd6:	gs je  0x41dfc6
  41dfd9:	jecxz  0x41e04c
  41dfdb:	idiv   BYTE PTR gs:[ecx]
  41dfde:	gs ins DWORD PTR es:[edi],dx
	...
  41e010:	add    BYTE PTR [eax],al
  41e012:	xor    eax,0x2e6153fc
  41e017:	cli    
  41e018:	pop    esp
  41e019:	ins    DWORD PTR es:[edi],dx
  41e01a:	(bad)  
  41e01b:	xor    dh,BYTE PTR [ecx+0x54]
  41e01e:	dec    BYTE PTR [ebx+0x5c]
  41e021:	push   ebx
  41e022:	(bad)  
  41e024:	outs   dx,BYTE PTR ds:[esi]
  41e025:	imul   esi,DWORD PTR ds:0x52006ef7,0x63746ef6
  41e02f:	out    0x22,al
  41e031:	imul   edi,esi,0xffffffab
  41e034:	push   eax
  41e035:	jno    0x41e03d
  41e037:	fidiv  DWORD PTR ds:0x448f65f
  41e03d:	push   eax
  41e03e:	ret    0x30db
  41e041:	jne    0x41e007
  41e043:	ficomp DWORD PTR [edi]
  41e045:	add    BYTE PTR [ebx-0x6a8bce09],dh
  41e04b:	stc    
  41e04c:	push   ss
  41e04d:	(bad)  
  41e04e:	(bad)  
  41e04f:	cli    
  41e050:	add    edx,DWORD PTR [esi+edi*4-0x6]
  41e054:	push   ss
  41e055:	addr16 mov ebp,0xaa54180d
  41e05b:	pushf  
  41e05c:	and    BYTE PTR [eax],al
  41e05e:	lods   eax,DWORD PTR ds:[esi]
  41e05f:	pushf  
  41e060:	xor    DWORD PTR [esi-0x51],eax
  41e063:	cld    
  41e064:	aad    0x77
  41e066:	jle    0x41e020
  41e068:	add    DWORD PTR [ebp+edx*4-0x31],ebx
  41e06c:	sub    eax,0x1dcd7363
  41e071:	sub    DWORD PTR [eax-0x54],ecx
  41e074:	push   edx
  41e075:	ins    DWORD PTR es:[edi],dx
	...
  41e0a6:	add    BYTE PTR [eax],al
  41e0a8:	test   DWORD PTR [eax+0x2e],esp
  41e0ab:	pop    edi
  41e0ac:	jno    0x41e077
  41e0ae:	inc    ebp
  41e0af:	inc    ecx
  41e0b0:	dec    esp
  41e0b1:	into   
  41e0b2:	sbb    esp,DWORD PTR [ebx+0x3e]
  41e0b5:	imul   esi,DWORD PTR [eax],0x70
  41e0b8:	sbb    DWORD PTR [ebx+0x16],0x66
  41e0bc:	dec    edi
  41e0bd:	ja     0x41e0e3
  41e0bf:	jb     0x41e107
  41e0c1:	lods   al,BYTE PTR ds:[esi]
  41e0c2:	cmp    edx,DWORD PTR [ebx+edx*1-0x34]
  41e0c6:	sbb    eax,0x1c203063
  41e0cb:	outs   dx,BYTE PTR ds:[esi]
  41e0cc:	inc    edx
  41e0cd:	sbb    BYTE PTR [ebp*2+0x6332cc0d],bl
  41e0d4:	adc    DWORD PTR [esi],edx
  41e0d6:	and    BYTE PTR [edx+0x63],dh
  41e0d9:	add    eax,0xe533502d
  41e0de:	inc    edx
  41e0df:	and    edx,esi
  41e0e1:	sbb    BYTE PTR [eax+0x16],al
  41e0e4:	adc    al,0x19
  41e0e6:	inc    eax
  41e0e7:	pop    ss
  41e0e8:	std    
  41e0e9:	in     al,0x3b
  41e0eb:	xor    eax,DWORD PTR [eax]
  41e0ed:	adc    esp,edi
  41e0ef:	cmp    eax,0x200735b7
  41e0f4:	rcr    BYTE PTR [eax],0x33
  41e0f7:	sbb    eax,0x1d1b26bd
  41e0fc:	mov    dh,0x2b
  41e0fe:	(bad)  
  41e0ff:	xor    ebx,DWORD PTR [eax+ebx*1+0x17c62f1a]
  41e106:	add    eax,DWORD PTR [eiz*4+0xe41731]
	...
  41e13d:	add    al,al
  41e13f:	and    bh,dl
  41e141:	das    
  41e142:	test   BYTE PTR [ebx],ch
  41e144:	or     BYTE PTR [eax],dh
  41e146:	jl     0x41e174
  41e148:	std    
  41e149:	jecxz  0x41e1c7
  41e14b:	sub    al,0xd9
  41e14d:	das    
  41e14e:	arpl   WORD PTR [ebx-0x4d],ax
  41e151:	push   ebx
  41e152:	inc    ebx
  41e153:	and    esp,ecx
  41e155:	xor    ch,BYTE PTR [edi+0x2e]
  41e158:	mov    ebp,0xd62e7724
  41e15d:	adc    eax,0x2fc82843
  41e162:	cmp    al,0x29
  41e164:	(bad)  
  41e165:	push   ds
  41e166:	arpl   WORD PTR [ebx-0x6d],ax
  41e169:	push   ebx
  41e16a:	adc    DWORD PTR ds:0x2e3d1699,0xffffff8b
  41e171:	and    BYTE PTR [edx],dh
  41e173:	add    eax,0x38134fad
  41e178:	jg     0x41e19a
  41e17a:	aas    
  41e17b:	sub    edi,esp
  41e17d:	sbb    eax,0x1b7a152f
  41e182:	add    BYTE PTR [ecx],ch
  41e184:	add    BYTE PTR [ebp-0x7f8edd52],al
  41e18a:	pusha  
  41e18b:	ss ins DWORD PTR es:[edi],dx
  41e18d:	dec    edi
  41e18e:	push   ebx
  41e18f:	adc    bl,BYTE PTR [edi+0x5b]
  41e192:	pop    esp
  41e193:	cmp    DWORD PTR [ebx+0x28],ecx
  41e196:	adc    dh,al
  41e198:	push   eax
  41e199:	ds dec ebp
  41e19b:	adc    DWORD PTR [edi+ebp*1+0x13],ebx
  41e19f:	xor    eax,0x4f47
	...
  41e1d4:	jge    0x41e200
  41e1d6:	pop    esp
  41e1d7:	sbb    dh,BYTE PTR [ecx+edx*1+0x73]
  41e1db:	cmp    DWORD PTR [edi+0x41],esp
  41e1de:	pop    edi
  41e1df:	sbb    eax,0x1b674180
  41e1e4:	cmp    DWORD PTR [bp+0x3d],eax
  41e1e8:	pop    DWORD PTR [esi+ebp*2+0x7]
  41e1ec:	push   esi
  41e1ed:	add    eax,0x13710c51
  41e1f2:	arpl   bx,di
  41e1f4:	push   esp
  41e1f5:	and    al,0x71
  41e1f7:	std    
  41e1f8:	cs adc al,0x6b
  41e1fb:	std    
  41e1fc:	pusha  
  41e1fd:	dec    ebx
  41e1fe:	arpl   cx,sp
  41e200:	xor    eax,0x54d04616
  41e205:	sub    BYTE PTR [eax],al
  41e207:	iret   
  41e208:	inc    esp
  41e209:	adc    eax,0x283cc071
  41e20e:	ror    BYTE PTR cs:[esi+0x24],1
  41e212:	add    BYTE PTR [edi-0x658be97f],ah
  41e218:	test   BYTE PTR [edx],ch
  41e21a:	outs   dx,BYTE PTR ds:[esi]
  41e21b:	(bad)  
  41e21c:	rol    BYTE PTR [ebp+0x72],0x96
  41e220:	ja     0x41e238
  41e222:	arpl   WORD PTR [ebx-0x46abbca0],bx
  41e228:	ins    BYTE PTR es:[edi],dx
  41e229:	and    al,0x71
  41e22b:	xchg   ebp,eax
  41e22c:	xchg   esi,eax
  41e22d:	daa    
  41e22e:	bound  eax,QWORD PTR [eax]
  41e230:	mov    edx,0x1a614943
  41e235:	hlt    
  41e236:	pusha  
  41e237:	push   ebx
	...
  41e268:	add    BYTE PTR [eax],al
  41e26a:	push   ss
  41e26b:	jmp    0x41e2d0
  41e26d:	imul   ecx,DWORD PTR ds:0x28683f44,0x3a6568f2
  41e277:	std    
  41e278:	jo     0x41e2ed
  41e27a:	mov    bh,BYTE PTR [ebp+edi*1+0x44c47a40]
  41e281:	inc    eax
  41e282:	jp     0x41e27e
  41e284:	inc    ebp
  41e285:	inc    eax
  41e286:	dec    edx
  41e287:	inc    edx
  41e288:	dec    edx
  41e289:	inc    eax
  41e28a:	dec    edx
  41e28b:	retf   0x4049
  41e28e:	cmp    cl,BYTE PTR [eax]
  41e290:	push   eax
  41e291:	inc    eax
  41e292:	cmp    al,dl
  41e294:	push   esp
  41e295:	inc    eax
  41e296:	dec    edx
  41e297:	retf   
  41e298:	push   ecx
  41e299:	inc    eax
  41e29a:	dec    edx
  41e29b:	rcl    DWORD PTR [esi+0x40],0x3a
  41e29f:	inc    esp
  41e2a0:	pop    eax
  41e2a1:	inc    eax
  41e2a2:	cmp    cl,BYTE PTR [edi]
  41e2a4:	push   ebp
  41e2a5:	inc    eax
  41e2a6:	or     al,BYTE PTR [edx+0x57]
  41e2a9:	inc    eax
  41e2aa:	or     ah,BYTE PTR [edi+0x59]
  41e2ad:	inc    eax
  41e2ae:	cli    
  41e2af:	aam    0x5f
  41e2b1:	inc    eax
  41e2b2:	cli    
  41e2b3:	mov    edi,0x2b0a4060
  41e2b8:	pop    edi
  41e2b9:	inc    eax
  41e2ba:	or     dh,BYTE PTR [edx+0x5f]
  41e2bd:	inc    eax
  41e2be:	cli    
  41e2bf:	jmp    DWORD PTR [ebx+0x40]
  41e2c2:	cli    
  41e2c3:	jae    0x41e329
  41e2c5:	inc    eax
  41e2c6:	retf   0x6656
  41e2c9:	inc    eax
  41e2ca:	retf   0x64a7
  41e2cd:	inc    eax
	...
  41e2fe:	add    BYTE PTR [eax],al
  41e300:	mov    edx,0xba406a75
  41e305:	std    
  41e306:	push   0x6b88ca40
  41e30b:	inc    eax
  41e30c:	arpl   WORD PTR [edi+ecx*4+0x35ac2370],bp
  41e313:	outs   dx,DWORD PTR ds:[esi]
  41e314:	and    ebp,DWORD PTR [eax+edi*1+0x2cac2372]
  41e31b:	je     0x41e340
  41e31d:	lods   al,BYTE PTR ds:[esi]
  41e31e:	or     DWORD PTR [eax+0x23],edi
  41e321:	lods   al,BYTE PTR ds:[esi]
  41e322:	and    bh,BYTE PTR [eax+0x23]
  41e325:	lods   al,BYTE PTR ds:[esi]
  41e326:	int3   
  41e327:	js     0x41e34c
  41e329:	lods   al,BYTE PTR ds:[esi]
  41e32a:	std    
  41e32b:	js     0x41e350
  41e32d:	lods   al,BYTE PTR ds:[esi]
  41e32e:	sub    BYTE PTR [ecx+0x23],bh
  41e331:	lods   al,BYTE PTR ds:[esi]
  41e332:	dec    esi
  41e333:	xchg   BYTE PTR [ebx],ah
  41e335:	lods   al,BYTE PTR ds:[esi]
  41e336:	cmp    al,BYTE PTR [edi-0x7615535d]
  41e33c:	mov    ds:0xa396bbac,eax
  41e341:	lods   al,BYTE PTR ds:[esi]
  41e342:	and    al,0x95
  41e344:	mov    ds:0xa397faac,eax
  41e349:	lods   al,BYTE PTR ds:[esi]
  41e34a:	jg     0x41e2e4
  41e34c:	mov    ds:0xa396e8ac,eax
  41e351:	lods   al,BYTE PTR ds:[esi]
  41e352:	ins    DWORD PTR es:[edi],dx
  41e353:	xchg   edi,eax
  41e354:	mov    ds:0xa399d9ac,eax
  41e359:	lods   al,BYTE PTR ds:[esi]
  41e35a:	mov    ebx,0x39aca39a
  41e35f:	cdq    
  41e360:	mov    ds:0x9953ac,eax
	...
  41e395:	add    BYTE PTR [ebx-0x5c664f54],ah
  41e39b:	lods   al,BYTE PTR ds:[esi]
  41e39c:	fsub   DWORD PTR [ebx-0x5832535d]
  41e3a2:	mov    ds:0xa3a7a0ac,eax
  41e3a7:	lods   al,BYTE PTR ds:[esi]
  41e3a8:	mov    DWORD PTR [ecx-0x46a353dd],edi
  41e3ae:	and    ebp,DWORD PTR [ebx+ebp*4+0x18ac23b9]
  41e3b5:	mov    esp,0x69e70523
  41e3ba:	inc    DWORD PTR [edi+eiz*8-0x46]
  41e3be:	test   DWORD PTR [edi+eiz*8+0xb],0x2ce744e8
  41e3c6:	call   0xdd8bcb0f
  41e3cb:	inc    esp
  41e3cc:	out    0xb3,eax
  41e3ce:	aad    0x44
  41e3d0:	out    0x6d,eax
  41e3d2:	mov    ds:0xc5e6e744,eax
  41e3d7:	inc    esp
  41e3d8:	out    0x28,eax
  41e3da:	mov    esp,0xb4c0e744
  41e3df:	inc    esp
  41e3e0:	out    0x47,eax
  41e3e2:	mov    ds:0xa265e744,al
  41e3e7:	inc    esp
  41e3e8:	out    0xf6,eax
  41e3ea:	and    BYTE PTR [esi-0x19],al
  41e3ed:	icebp  
  41e3ee:	and    DWORD PTR [esi-0x19],eax
  41e3f1:	imul   esp,DWORD PTR [eax],0x46
  41e3f4:	out    0x38,eax
  41e3f6:	sbb    al,0x46
  41e3f8:	out    0x6d,eax
	...
  41e42a:	add    BYTE PTR [eax],al
  41e42c:	and    al,0x46
  41e42e:	out    0xf7,eax
  41e430:	sub    DWORD PTR [esi-0x19],eax
  41e433:	sbb    ebx,DWORD PTR [eax]
  41e435:	inc    esi
  41e436:	out    0x33,eax
  41e438:	adc    al,0x46
  41e43a:	out    0x3e,eax
  41e43c:	xor    al,BYTE PTR [esi-0x19]
  41e43f:	jnp    0x41e471
  41e441:	inc    esi
  41e442:	out    0xa4,eax
  41e444:	xor    BYTE PTR [esi-0x19],al
  41e447:	cmp    BYTE PTR [ebx],ch
  41e449:	inc    esi
  41e44a:	out    0x81,eax
  41e44c:	sbb    eax,DWORD PTR [esi-0x19]
  41e44f:	dec    DWORD PTR ds:0x148ee746
  41e455:	inc    esi
  41e456:	out    0xc,eax
  41e458:	or     DWORD PTR [esi-0x19],eax
  41e45b:	mov    bh,BYTE PTR [ecx+0x6303e745]
  41e461:	add    eax,0x560e900
  41e466:	add    cl,ch
  41e468:	pusha  
  41e469:	add    eax,0x560e900
  41e46e:	add    cl,ch
  41e470:	pusha  
  41e471:	add    eax,0x2925e900
  41e476:	test   BYTE PTR [bp+si+0x11],dh
  41e47a:	and    BYTE PTR [ecx-0x1697e9b9],dh
  41e480:	dec    ebp
  41e481:	xor    DWORD PTR [edi],edi
  41e483:	popf   
  41e484:	dec    ebx
  41e485:	sub    esp,DWORD PTR ss:[eax+0x3b4d3533]
  41e48c:	cmp    ebp,esp
  41e48e:	dec    esp
  41e48f:	xor    al,BYTE PTR [eax]
	...
  41e4c1:	add    BYTE PTR [edi-0x1c],bl
  41e4c4:	arpl   WORD PTR [edi],ax
  41e4c6:	inc    esp
  41e4c7:	sbb    eax,0xe87de963
  41e4cc:	xor    DWORD PTR [ecx],esp
  41e4ce:	adc    DWORD PTR [bp+si+0x34],esi
  41e4d2:	jl     0x41e4d9
  41e4d4:	ins    DWORD PTR es:[edi],dx
  41e4d5:	inc    eax
  41e4d6:	jnp    0x41e4bf
  41e4d8:	popa   
  41e4d9:	dec    eax
  41e4da:	imul   eax,DWORD PTR ds:0xb6df007,0xb
  41e4e1:	repz imul esp,ebp,0x28540639
  41e4e8:	and    ah,bl
  41e4ea:	push   esi
  41e4eb:	in     eax,0x63
  41e4ed:	or     al,0x53
  41e4ef:	in     eax,0x6
  41e4f1:	les    esi,FWORD PTR [ecx]
  41e4f3:	clc    
  41e4f4:	pop    ds
  41e4f5:	in     al,0x5e
  41e4f7:	add    BYTE PTR [edi+0x7],ah
  41e4fa:	(bad)  
  41e4fb:	(bad)  
  41e4fc:	pop    ds
  41e4fd:	int3   
  41e4fe:	pop    eax
  41e4ff:	and    BYTE PTR [ecx-0x2b],dh
  41e502:	add    bh,bh
  41e504:	pop    ds
  41e505:	or     DWORD PTR [edi+eiz*8],eax
  41e508:	pop    ds
  41e509:	loopne 0x41e50b
  41e50b:	clc    
  41e50c:	add    BYTE PTR fs:[ebp-0x2cdf9511],dh
  41e513:	mov    ds:0xb0b756c,eax
  41e518:	or     DWORD PTR [edx],ecx
  41e51a:	pop    edx
  41e51b:	in     eax,dx
  41e51c:	pusha  
  41e51d:	ins    BYTE PTR es:[edi],dx
  41e51e:	stos   BYTE PTR es:[edi],al
  41e51f:	or     ah,BYTE PTR [eax]
  41e521:	and    eax,0x1ffda39a
	...
  41e556:	add    BYTE PTR [eax],al
  41e558:	call   0x1da3:0x987322a1
  41e55f:	and    BYTE PTR [edx-0xdad025d],ch
  41e565:	fisubr WORD PTR [ebx+0x6c]
  41e568:	mov    edi,0xf6360fb
  41e56d:	lock pusha 
  41e56f:	inc    ecx
  41e570:	mov    dh,al
  41e572:	addr16 gs es aad 0x2e
  41e577:	xor    ah,BYTE PTR [ebp+ebp*8+0x6b]
  41e57b:	ins    BYTE PTR es:[edi],dx
  41e57c:	jp     0x41e55c
  41e57e:	ja     0x41e5f0
  41e580:	mov    dh,0xd4
  41e582:	jno    0x41e5e9
  41e584:	cwde   
  41e585:	xchg   ebx,eax
  41e586:	bound  edi,QWORD PTR [eax-0x61]
  41e589:	add    DWORD PTR [edi+0x2d],ecx
  41e58c:	dec    ebx
  41e58d:	test   al,0x32
  41e58f:	sub    eax,0xfffdbb1b
  41e594:	dec    edx
  41e595:	add    eax,DWORD PTR [eax]
  41e597:	push   ebx
  41e598:	pop    edi
  41e599:	dec    edx
  41e59a:	imul   esi,DWORD PTR [eax+0x5f],0x746f6eef
  41e5a1:	loop   0x41e616
  41e5a3:	gs jp  0x41e595
  41e5a6:	fs jbe 0x41e60c
  41e5a9:	aad    0x60
  41e5ab:	addr16 pop edi
  41e5ad:	add    DWORD PTR [edi+0x65],ecx
  41e5b0:	mov    esi,0x185061e1
  41e5b5:	in     al,dx
  41e5b6:	jne    0x41e621
  41e5b8:	arpl   ax,ax
  41e5ba:	es add BYTE PTR gs:[eax],al
	...
  41e5ee:	jle    0x41e59c
  41e5f0:	xor    al,0x63
  41e5f2:	and    BYTE PTR [edx+eiz*1+0x4fc13c6e],dh
  41e5f9:	ins    DWORD PTR es:[edi],dx
  41e5fa:	push   edi
  41e5fb:	lds    esp,FWORD PTR [edi]
  41e5fd:	ja     0x41e632
  41e5ff:	pop    edx
  41e600:	sub    dh,BYTE PTR [esi+0x4a]
  41e603:	jo     0x41e62b
  41e605:	gs lods al,BYTE PTR ds:[esi]
  41e608:	xor    al,0x63
  41e60a:	and    BYTE PTR [edx+0x26],bh
  41e60d:	pop    edi
  41e60e:	das    
  41e60f:	xor    DWORD PTR ds:0x2f89086d,0x17751150
  41e619:	dec    DWORD PTR [bx+si+0x6328]
  41e61e:	arpl   WORD PTR [ebx+0x26],di
  41e621:	inc    edx
  41e622:	add    cl,BYTE PTR [ebx+0x29]
  41e625:	jae    0x41e61a
  41e627:	fist   DWORD PTR [ecx]
  41e629:	addr16 cmc 
  41e62b:	inc    esp
  41e62c:	xor    BYTE PTR [ebx-0x4],ah
  41e62f:	inc    eax
  41e630:	add    al,0x51
  41e632:	(bad)  
  41e633:	cli    
  41e634:	es jno 0x41e606
  41e637:	inc    edi
  41e638:	adc    ah,BYTE PTR [ebx-0x4d]
  41e63b:	fisubr DWORD PTR [edx]
  41e63d:	jbe    0x41e5f9
  41e63f:	fsub   DWORD PTR [esi]
  41e641:	gs (bad) 
  41e643:	lods   al,BYTE PTR ds:[esi]
  41e644:	xor    ah,BYTE PTR [ebx-0x56]
  41e647:	push   es
  41e648:	and    DWORD PTR [edx-0x3a],esi
  41e64b:	or     eax,0xf1926311
  41e650:	sub    al,0x74
	...
  41e682:	add    BYTE PTR [eax],al
  41e684:	cmp    ah,0x11
  41e687:	addr16 (bad) 
  41e689:	cmc    
  41e68a:	das    
  41e68b:	arpl   WORD PTR [ecx+ecx*1-0x1281aefc],ax
  41e692:	adc    BYTE PTR [ecx-0x76],dh
  41e695:	add    eax,0x13932dce
  41e69a:	shl    BYTE PTR [eax],1
  41e69c:	mov    WORD PTR [ebx],ss
  41e69e:	shl    BYTE PTR [edi],1
  41e6a0:	jbe    0x41e6cc
  41e6a2:	les    ebp,FWORD PTR ds:0x15d01333
  41e6a8:	cmp    al,0x29
  41e6aa:	les    esp,FWORD PTR [esi]
  41e6ac:	inc    eax
  41e6ad:	add    eax,0x56303e7
  41e6b2:	out    0x3,eax
  41e6b4:	arpl   WORD PTR ds:0x56303e7,ax
  41e6ba:	out    0x3,eax
  41e6bc:	arpl   WORD PTR ds:0x56303e7,ax
  41e6c2:	out    0x3,eax
  41e6c4:	arpl   WORD PTR ds:0x56303e7,ax
  41e6ca:	out    0x3,eax
  41e6cc:	arpl   WORD PTR ds:0x56303e7,ax
  41e6d2:	out    0x3,eax
  41e6d4:	arpl   WORD PTR ds:0x56303e7,ax
  41e6da:	out    0x3,eax
  41e6dc:	arpl   WORD PTR ds:0x56303e7,ax
  41e6e2:	out    0x3,eax
  41e6e4:	arpl   WORD PTR ds:0x3e7,ax
	...
  41e71a:	arpl   WORD PTR ds:0x56303e7,ax
  41e720:	out    0x3,eax
  41e722:	arpl   WORD PTR ds:0x56303e7,ax
  41e728:	out    0x3,eax
  41e72a:	arpl   WORD PTR ds:0x56303e7,ax
  41e730:	out    0x3,eax
  41e732:	arpl   WORD PTR ds:0x56303e7,ax
  41e738:	out    0x3,eax
  41e73a:	arpl   WORD PTR ds:0x56303e7,ax
  41e740:	add    cl,ch
  41e742:	pusha  
  41e743:	add    eax,0x560e900
  41e748:	add    cl,ch
  41e74a:	pusha  
  41e74b:	add    eax,0x560e900
  41e750:	add    cl,ch
  41e752:	pusha  
  41e753:	add    eax,0x560e900
  41e758:	add    cl,ch
  41e75a:	pusha  
  41e75b:	add    eax,0x560e900
  41e760:	add    cl,ch
  41e762:	pusha  
  41e763:	add    eax,0x560e900
  41e768:	add    cl,ch
  41e76a:	pusha  
  41e76b:	add    eax,0x560e900
  41e770:	add    cl,ch
  41e772:	pusha  
  41e773:	add    eax,0x560e900
  41e778:	add    cl,ch
  41e77a:	pusha  
  41e77b:	add    eax,0xe900
	...
  41e7b0:	pusha  
  41e7b1:	add    eax,0x560e900
  41e7b6:	add    cl,ch
  41e7b8:	pusha  
  41e7b9:	add    eax,0x560e900
  41e7be:	add    cl,ch
  41e7c0:	pusha  
  41e7c1:	add    eax,0x560e900
  41e7c6:	add    cl,ch
  41e7c8:	pusha  
  41e7c9:	add    eax,0x560e900
  41e7ce:	add    cl,ch
  41e7d0:	pusha  
  41e7d1:	add    eax,0x560e900
  41e7d6:	add    cl,ch
  41e7d8:	pusha  
  41e7d9:	add    eax,0x560e900
  41e7de:	add    cl,ch
  41e7e0:	pusha  
  41e7e1:	add    eax,0x560e900
  41e7e6:	add    cl,ch
  41e7e8:	pusha  
  41e7e9:	add    eax,0x80a0000
  41e7ee:	add    BYTE PTR [eax],al
  41e7f0:	cli    
  41e7f1:	pop    es
  41e7f2:	add    BYTE PTR [eax],al
  41e7f4:	cli    
  41e7f5:	pop    es
  41e7f6:	add    BYTE PTR [eax],al
  41e7f8:	or     cl,BYTE PTR [eax]
  41e7fa:	add    BYTE PTR [eax],al
  41e7fc:	or     cl,BYTE PTR [eax]
  41e7fe:	add    BYTE PTR [eax],al
  41e800:	cli    
  41e801:	pop    es
  41e802:	add    BYTE PTR [eax],al
  41e804:	cli    
  41e805:	pop    es
  41e806:	add    BYTE PTR [eax],al
  41e808:	retf   0x7
  41e80b:	add    dl,cl
  41e80d:	pop    es
  41e80e:	add    BYTE PTR [eax],al
  41e810:	mov    edx,0x7
	...
  41e845:	add    BYTE PTR [edx-0x35fffff9],bh
  41e84b:	pop    es
  41e84c:	add    BYTE PTR [eax],al
  41e84e:	retf   0x7
  41e851:	add    BYTE PTR [edx-0x45fffff9],bh
  41e857:	pop    es
  41e858:	add    BYTE PTR [eax],al
  41e85a:	mov    al,BYTE PTR [edi]
  41e85c:	add    BYTE PTR [eax],al
  41e85e:	mov    al,BYTE PTR [edi]
  41e860:	add    BYTE PTR [eax],al
  41e862:	jp     0x41e86b
  41e864:	add    BYTE PTR [eax],al
  41e866:	jp     0x41e86f
  41e868:	add    BYTE PTR [eax],al
  41e86a:	mov    al,BYTE PTR [edi]
  41e86c:	add    BYTE PTR [eax],al
  41e86e:	mov    al,BYTE PTR [edi]
  41e870:	add    BYTE PTR [eax],al
  41e872:	jp     0x41e87b
  41e874:	add    BYTE PTR [eax],al
  41e876:	jp     0x41e87f
  41e878:	add    BYTE PTR [eax],al
  41e87a:	dec    edx
  41e87b:	pop    es
  41e87c:	add    BYTE PTR [eax],al
  41e87e:	dec    edx
  41e87f:	pop    es
  41e880:	add    BYTE PTR [eax],al
  41e882:	cmp    al,BYTE PTR [edi]
  41e884:	add    BYTE PTR [eax],al
  41e886:	cmp    al,BYTE PTR [edi]
  41e888:	add    BYTE PTR [eax],al
  41e88a:	dec    edx
  41e88b:	pop    es
  41e88c:	add    BYTE PTR [eax],al
  41e88e:	dec    edx
  41e88f:	pop    es
  41e890:	add    BYTE PTR [eax],al
  41e892:	cmp    al,BYTE PTR [edi]
  41e894:	add    BYTE PTR [eax],al
  41e896:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41e89d:	add    BYTE PTR [ebx-0x64],ah
  41e8a0:	add    DWORD PTR [eax],eax
  41e8a2:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
	...
  41e8d9:	add    BYTE PTR [eax],al
  41e8db:	add    BYTE PTR [ebx-0x64],ah
  41e8de:	add    DWORD PTR [eax],eax
  41e8e0:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41e8e7:	add    BYTE PTR [ebx-0x64],ah
  41e8ea:	add    DWORD PTR [eax],eax
  41e8ec:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41e8f3:	add    BYTE PTR [ebx-0x64],ah
  41e8f6:	add    DWORD PTR [eax],eax
  41e8f8:	arpl   WORD PTR [ecx+eax*1-0x1f629d00],bx
  41e8ff:	inc    edx
  41e900:	cmp    al,0x15
  41e902:	push   0xbcf2bccb
  41e907:	mov    edx,0x323572cb
  41e90c:	jae    0x41e933
  41e90e:	push   0xe09d84cb
  41e913:	inc    edx
  41e914:	add    al,0x1c
  41e916:	add    DWORD PTR [eax+0x63],eax
  41e919:	mov    esp,0xa4631001
  41e91e:	add    DWORD PTR [ebx+eiz*2],eax
  41e921:	sahf   
  41e922:	add    edi,edi
  41e924:	ins    BYTE PTR es:[edi],dx
  41e925:	pushf  
  41e926:	add    DWORD PTR [eax+0x40019c63],eax
  41e92c:	arpl   WORD PTR [ecx+eax*1+0x19c6320],bx
  41e933:	adc    BYTE PTR [ebx-0x64],ah
  41e936:	add    DWORD PTR [eax],ecx
  41e938:	arpl   WORD PTR [ecx+eax*1+0x19c6304],bx
  41e93f:	add    al,BYTE PTR [eax]
	...
  41e971:	add    BYTE PTR [ebx+0x5],ah
  41e974:	out    0x3,eax
  41e976:	sub    al,0x92
  41e978:	out    0x83,eax
  41e97a:	arpl   WORD PTR ds:0x56343e7,ax
  41e980:	out    0xe3,eax
  41e982:	adc    al,0x92
  41e984:	out    0xf3,eax
  41e986:	or     al,0x92
  41e988:	out    0xb,eax
  41e98a:	arpl   WORD PTR ds:0x91fcffe7,ax
  41e990:	out    0x5,eax
  41e992:	arpl   WORD PTR ds:0x56304e7,ax
  41e998:	addr16 add al,0x63
  41e99b:	add    eax,0x56303a7
  41e9a0:	pop    es
  41e9a1:	add    al,0x63
  41e9a3:	add    eax,0x56303d7
  41e9a8:	out    dx,eax
  41e9a9:	add    esp,DWORD PTR [ebx+0x5]
  41e9ac:	jmp    0x41e9b1
  41e9ae:	arpl   WORD PTR ds:0x56303e9,ax
  41e9b4:	call   0xdf474cbc
  41e9b9:	sar    DWORD PTR [ebp+eiz*8-0x12],cl
  41e9bd:	repz fs add eax,0xe43dd4d0
  41e9c4:	fcomip st,st(4)
  41e9c6:	gs add al,0xc1
  41e9c9:	aad    0x3a
  41e9cb:	out    0xd0,eax
  41e9cd:	cmc    
  41e9ce:	push   0x7
  41e9d0:	mov    dl,0xd6
  41e9d2:	dec    ebx
  41e9d3:	out    0x24,al
  41e9d5:	rol    BYTE PTR [eax],cl
	...
  41ea07:	add    BYTE PTR [esi],bh
  41ea09:	jmp    0x41ea07
  41ea0b:	icebp  
  41ea0c:	push   esi
  41ea0d:	or     edx,DWORD PTR [ecx+edx*8]
  41ea10:	mov    edx,ebp
  41ea12:	jmp    0x41ea04
  41ea14:	imul   ecx,DWORD PTR [edx],0xe978d003
  41ea1a:	(bad)  
  41ea1c:	pop    eax
  41ea1d:	or     DWORD PTR [eax],eax
  41ea1f:	shl    BYTE PTR ds:0x5ee800fe,cl
  41ea25:	or     DWORD PTR [esi],eax
  41ea27:	icebp  
  41ea28:	pop    esi
  41ea29:	add    DWORD PTR [esi],ecx
  41ea2b:	out    dx,al
  41ea2c:	das    
  41ea2d:	not    BYTE PTR [edx]
  41ea2f:	(bad)  
  41ea30:	pop    ds
  41ea31:	out    dx,al
  41ea32:	sbb    ebx,esp
  41ea34:	adc    bh,bh
  41ea36:	adc    al,0xe9
  41ea38:	or     al,0x7
  41ea3a:	sbb    edi,ebp
  41ea3c:	arpl   cx,di
  41ea3e:	push   es
  41ea3f:	fcomip st,st(6)
  41ea41:	std    
  41ea42:	add    al,dl
  41ea44:	popa   
  41ea45:	add    al,BYTE PTR [esi]
  41ea47:	add    esi,esp
  41ea49:	cld    
  41ea4a:	(bad)  
  41ea4b:	adc    BYTE PTR [ebx+esi*8],cl
  41ea4e:	and    eax,DWORD PTR [edi]
  41ea50:	mov    cl,0xeb
  41ea52:	and    al,0x1b
  41ea54:	retf   
  41ea55:	lock sub al,0x12
  41ea58:	mov    bh,0xea
  41ea5a:	xor    al,0x8
  41ea5c:	mov    bl,0xdb
  41ea5e:	es clc 
  41ea60:	(bad)
  41ea63:	jmp    0xe9427a1c
  41ea68:	pusha  
  41ea69:	add    eax,0xe900
	...
  41ea9e:	pusha  
  41ea9f:	nop
  41eaa0:	std    
  41eaa1:	in     eax,dx
  41eaa2:	pushf  
  41eaa3:	pop    DWORD PTR [eax]
  41eaa5:	in     eax,0x60
  41eaa7:	nop
  41eaa8:	add    ch,ch
  41eaaa:	mov    WORD PTR [edi+0x560e5fd],cs
  41eab0:	add    cl,ch
  41eab2:	pusha  
  41eab3:	nop
  41eab4:	std    
  41eab5:	jmp    0xea3f7b2e
  41eaba:	ins    BYTE PTR es:[edi],dx
  41eabb:	pop    DWORD PTR [eax]
  41eabd:	in     eax,0x64
  41eabf:	pop    DWORD PTR [eax]
  41eac1:	jmp    0xe63f7b22
  41eac6:	push   esp
  41eac7:	nop
  41eac8:	add    BYTE PTR [eax],al
  41eaca:	ds add al,0xfd
  41eacd:	add    BYTE PTR [edx],bh
  41eacf:	add    al,0x0
  41ead1:	add    DWORD PTR [esi+0x4],ecx
  41ead4:	add    BYTE PTR [eax],al
  41ead6:	ds nop
  41ead8:	std    
  41ead9:	(bad)  
  41eada:	cmp    dl,BYTE PTR [eax-0x6fc5ff03]
  41eae0:	std    
  41eae1:	add    BYTE PTR [edx],cl
  41eae3:	nop
  41eae4:	(bad)  
  41eae5:	dec    DWORD PTR [edx]
  41eae7:	nop
  41eae8:	(bad)  
  41eae9:	(bad)  
  41eaea:	cli    
  41eaeb:	add    edi,ebp
  41eaed:	add    dl,bh
  41eaef:	add    edi,ebp
  41eaf1:	add    BYTE PTR [esi],cl
  41eaf3:	nop
  41eaf4:	std    
  41eaf5:	add    dh,bh
  41eaf7:	add    edi,ebp
  41eaf9:	(bad)  
  41eafa:	inc    BYTE PTR [ebx]
  41eafc:	add    BYTE PTR [ecx],al
  41eafe:	inc    BYTE PTR [ebx]
  41eb00:	add    BYTE PTR [ecx],al
	...
  41eb32:	add    BYTE PTR [eax],al
  41eb34:	into   
  41eb35:	add    edi,ebp
  41eb37:	dec    edx
  41eb39:	add    eax,DWORD PTR [eax]
  41eb3b:	add    BYTE PTR [esi-0x41000271],bh
  41eb41:	(bad)  
  41eb42:	(bad)  
  41eb43:	dec    edx
  41eb45:	add    eax,DWORD PTR [eax]
  41eb47:	add    edx,ecx
  41eb49:	add    edi,ebp
  41eb4b:	(bad)  
  41eb4c:	mov    esi,0xbe00fe8f
  41eb51:	add    eax,DWORD PTR [eax]
  41eb53:	add    BYTE PTR [edx-0x75ff02fd],cl
  41eb59:	(bad)  
  41eb5a:	inc    BYTE PTR [eax]
  41eb5c:	jp     0x41eb61
  41eb5e:	add    BYTE PTR [ecx],al
  41eb60:	jp     0x41eb65
  41eb62:	add    BYTE PTR [ecx],al
  41eb64:	mov    cl,BYTE PTR [edi+0x37efffd]
  41eb6a:	std    
  41eb6b:	add    BYTE PTR [edx+0x3],bh
  41eb6e:	std    
  41eb6f:	(bad)  
  41eb70:	jp     0x41eb01
  41eb72:	(bad)  
  41eb73:	jmp    DWORD PTR [ebx-0x60]
  41eb76:	add    DWORD PTR [eax],eax
  41eb78:	bound  ebx,QWORD PTR [ebp+edi*8+0x1a14cff]
  41eb7f:	add    BYTE PTR [ebx-0x58],ah
  41eb82:	std    
  41eb83:	jmp    DWORD PTR [ebx-0x60]
  41eb86:	std    
  41eb87:	(bad)  
  41eb88:	xor    al,0xa9
  41eb8a:	std    
  41eb8b:	(bad)  
  41eb8c:	arpl   WORD PTR [eax-0x62db00ff],sp
  41eb92:	add    edi,edi
  41eb94:	arpl   WORD PTR [eax+0xfffd],sp
	...
  41ebca:	arpl   WORD PTR [eax-0x5f9dffff],bp
  41ebd0:	std    
  41ebd1:	inc    DWORD PTR [ecx+ebp*4]
  41ebd4:	std    
  41ebd5:	(bad)  
  41ebd6:	cld    
  41ebd7:	pushf  
  41ebd8:	std    
  41ebd9:	(bad)  
  41ebda:	arpl   WORD PTR [eax-0x63130003],bp
  41ebe0:	std    
  41ebe1:	jmp    DWORD PTR [ebx-0x64]
  41ebe4:	std    
  41ebe5:	jmp    DWORD PTR [ebx-0x64]
  41ebe8:	add    DWORD PTR [eax],eax
  41ebea:	arpl   WORD PTR [eax-0x633300ff],bp
  41ebf0:	std    
  41ebf1:	inc    ah
  41ebf3:	pushf  
  41ebf4:	add    DWORD PTR [eax],eax
  41ebf6:	arpl   WORD PTR [eax-0x39c00ff],sp
  41ebfc:	adc    DWORD PTR [eax],0xffffffe3
  41ebff:	pushf  
  41ec00:	add    DWORD PTR [eax],0x819ce3
  41ec06:	arpl   WORD PTR [ecx+eax*4+0x19c6310],di
  41ec0d:	adc    BYTE PTR [ebx-0x44],ah
  41ec10:	add    DWORD PTR [eax],eax
  41ec12:	arpl   WORD PTR [ecx+eax*1-0x7e431cf0],di
  41ec19:	add    bl,ah
  41ec1b:	mov    esp,0x5e30001
  41ec20:	pop    es
  41ec21:	test   BYTE PTR [ebx-0x7b],dl
  41ec24:	out    0x83,eax
  41ec26:	jae    0x41ebad
  41ec28:	out    0x3,eax
  41ec2a:	arpl   WORD PTR [ebp+0x83e7],ax
	...
  41ec60:	arpl   WORD PTR [ebp+0x57303e7],ax
  41ec66:	pop    es
  41ec67:	add    al,0x63
  41ec69:	add    eax,0x85530407
  41ec6e:	out    0x83,eax
  41ec70:	push   ebx
  41ec71:	add    eax,0x55303c7
  41ec76:	mov    DWORD PTR [ebx+0x3e78563],0x3e70563
  41ec80:	arpl   WORD PTR [ebp+0x56383e7],ax
  41ec86:	mov    DWORD PTR [ebx+0x3e70553],0x3c78553
  41ec90:	push   ebx
  41ec91:	add    eax,0x85630407
  41ec96:	out    0x3,eax
  41ec98:	arpl   WORD PTR ds:0x57383e7,ax
  41ec9e:	pop    es
  41ec9f:	test   BYTE PTR [ebx+0x5],ah
  41eca2:	out    0x83,eax
  41eca4:	jae    0x41ec2b
  41eca6:	out    0x3,eax
  41eca8:	push   ebx
  41eca9:	test   DWORD PTR [edi],eax
  41ecab:	test   BYTE PTR [ebx+0x5],ah
  41ecae:	out    0x3,eax
  41ecb0:	arpl   WORD PTR ds:0x55383c7,ax
  41ecb6:	mov    DWORD PTR [ebx],0x3e78573
  41ecbc:	jae    0x41ecc3
  41ecbe:	mov    DWORD PTR [ebx+0x3e78563],0x0
	...
  41ecf4:	add    BYTE PTR [eax],al
  41ecf6:	jae    0x41ec7d
  41ecf8:	out    0x83,eax
  41ecfa:	push   ebx
  41ecfb:	test   DWORD PTR [eax],eax
  41ecfd:	jmp    0xe941f1e2
  41ed02:	pusha  
  41ed03:	cmc    
  41ed04:	jg     0x41ecef
  41ed06:	loopne 0x41ed0c
  41ed08:	or     BYTE PTR [ecx],0x67
  41ed0b:	add    eax,0xf5df0900
  41ed10:	jg     0x41ed1b
  41ed12:	out    0xf5,eax
  41ed14:	dec    DWORD PTR [eax]
  41ed16:	pop    edi
  41ed17:	add    eax,0x5e0e900
  41ed1c:	add    cl,ch
  41ed1e:	pusha  
  41ed1f:	add    eax,0x5e70980
  41ed24:	add    cl,ch
  41ed26:	loopne 0x41ed1d
  41ed28:	jg     0x41ed13
  41ed2a:	pusha  
  41ed2b:	cmc    
  41ed2c:	dec    eax
  41ed2e:	pusha  
  41ed2f:	add    eax,0xf560c980
  41ed34:	dec    eax
  41ed36:	loopne 0x41ed3d
  41ed38:	or     cl,0x60
  41ed3b:	add    eax,0xf560c980
  41ed40:	(bad)  
  41ed41:	call   0xe941e326
  41ed46:	pusha  
  41ed47:	add    eax,0x5e0e900
  41ed4c:	or     BYTE PTR [ecx],0xdf
  41ed4f:	add    eax,0x560e900
  41ed54:	or     BYTE PTR [ecx],0x5f
  41ed57:	cmc    
  41ed58:	jg     0x41ed63
	...
  41ed8a:	add    BYTE PTR [eax],al
  41ed8c:	out    0xf5,eax
  41ed8e:	jg     0x41ed79
  41ed90:	loopne 0x41ed87
  41ed92:	jmp    eax
  41ed94:	bound  eax,QWORD PTR ds:0x762e900
  41ed9a:	or     cl,ch
  41ed9c:	pusha  
  41ed9d:	add    eax,0x760e100
  41eda2:	or     cl,ch
  41eda4:	bound  eax,QWORD PTR ds:0x87a0008
  41edaa:	add    BYTE PTR [eax],al
  41edac:	jb     0x41edb4
  41edae:	add    al,BYTE PTR [eax]
  41edb0:	mov    al,BYTE PTR [esi]
  41edb2:	add    BYTE PTR [eax],cl
  41edb4:	or     BYTE PTR [eax],0x2
  41edb7:	add    BYTE PTR [edx+0x8],dh
  41edba:	add    BYTE PTR [eax],cl
  41edbc:	push   edx
  41edbd:	or     BYTE PTR [eax],al
  41edbf:	or     BYTE PTR [edx+0x8],cl
  41edc2:	add    al,BYTE PTR [eax]
  41edc4:	inc    edx
  41edc5:	push   es
  41edc6:	add    cl,BYTE PTR [eax]
  41edc8:	push   edx
  41edc9:	or     BYTE PTR [edx],al
  41edcb:	add    BYTE PTR [edx+0x8],cl
  41edce:	add    cl,BYTE PTR [eax]
  41edd0:	inc    edx
  41edd1:	push   es
  41edd2:	add    BYTE PTR [eax],al
  41edd4:	cmp    cl,BYTE PTR [eax]
  41edd6:	add    BYTE PTR [eax],cl
  41edd8:	xor    cl,BYTE PTR [eax]
  41edda:	add    BYTE PTR [eax],al
  41eddc:	or     al,BYTE PTR [esi]
  41edde:	add    cl,BYTE PTR [eax]
  41ede0:	or     al,BYTE PTR [esi]
  41ede2:	add    BYTE PTR [eax],al
  41ede4:	cli    
  41ede5:	add    eax,0x7fa0002
  41edea:	add    cl,BYTE PTR [eax]
  41edec:	repnz pop es
  41edee:	add    cl,BYTE PTR [eax]
	...
  41ee20:	add    BYTE PTR [eax],al
  41ee22:	add    al,BYTE PTR [esi]
  41ee24:	add    al,BYTE PTR [eax]
  41ee26:	add    al,BYTE PTR [esi]
  41ee28:	add    BYTE PTR [eax],cl
  41ee2a:	cli    
  41ee2b:	add    eax,0x7ca0002
  41ee30:	add    al,BYTE PTR [eax]
  41ee32:	ret    0x5
  41ee35:	or     dl,al
  41ee37:	pop    es
  41ee38:	add    BYTE PTR [eax],al
  41ee3a:	rol    BYTE PTR ds:0x5ca0802,cl
  41ee40:	add    BYTE PTR [eax],al
  41ee42:	retf   0x7
  41ee45:	or     BYTE PTR [edx-0x45f7fdfb],bh
  41ee4b:	pop    es
  41ee4c:	add    BYTE PTR [eax],cl
  41ee4e:	xchg   edx,eax
  41ee4f:	pop    es
  41ee50:	add    al,BYTE PTR [eax]
  41ee52:	arpl   WORD PTR [esi-0x619c0001],sp
  41ee58:	add    DWORD PTR [edx],eax
  41ee5a:	arpl   WORD PTR [esi-0x6194fe01],bx
  41ee60:	(bad)  
  41ee61:	jmp    FWORD PTR [ebx-0x62]
  41ee64:	add    DWORD PTR [eax],eax
  41ee66:	arpl   WORD PTR [esi-0x699c0001],bx
  41ee6c:	add    DWORD PTR [edx],eax
  41ee6e:	arpl   WORD PTR [edi+edi*8-0x6394ff],dx
  41ee75:	call   FWORD PTR [ebx-0x5c]
  41ee78:	add    DWORD PTR [eax],eax
  41ee7a:	pop    ebx
  41ee7b:	pushf  
  41ee7c:	(bad)  
  41ee7d:	jmp    DWORD PTR [ebx-0x64]
  41ee80:	add    DWORD PTR [eax],eax
  41ee82:	arpl   WORD PTR [ecx+eax*1+0x2],sp
	...
  41eeb5:	add    BYTE PTR [eax],al
  41eeb7:	add    BYTE PTR [ebx-0x5c],bl
  41eeba:	(bad)  
  41eebb:	call   FWORD PTR [ebx-0x64]
  41eebe:	add    DWORD PTR [edx],eax
  41eec0:	arpl   WORD PTR [ecx+eax*1-0x5b9500],bx
  41eec7:	add    DWORD PTR [ebx-0x5c],ebx
  41eeca:	add    DWORD PTR [eax],eax
  41eecc:	arpl   WORD PTR [edi+edi*8-0x639cff],dx
  41eed3:	add    DWORD PTR [ebx-0x5c],esp
  41eed6:	add    DWORD PTR [eax],eax
  41eed8:	pop    ebx
  41eed9:	pushf  
  41eeda:	add    DWORD PTR [edx],eax
  41eedc:	pop    ebx
  41eedd:	xchg   esp,eax
  41eede:	(bad)  
  41eedf:	jmp    FWORD PTR [ebx-0x6c]
  41eee2:	(bad)  
  41eee3:	jmp    DWORD PTR [ebx-0x64]
  41eee6:	add    DWORD PTR [edx],eax
  41eee8:	pop    ebx
  41eee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeea:	inc    DWORD PTR [ecx]
  41eeec:	arpl   WORD PTR [ecx+eax*1+0x1946300],dx
  41eef3:	add    ch,BYTE PTR [ebx-0x64]
  41eef6:	inc    DWORD PTR [ecx]
  41eef8:	arpl   WORD PTR [ebp+0x5637fe1],bx
  41eefe:	push   0x688a9ce3
  41ef03:	jecxz  0x41ee99
  41ef05:	mov    ah,BYTE PTR [edi+0x3]
  41ef08:	arpl   WORD PTR ds:0x504e367,ax
  41ef0e:	push   0xe805e303
  41ef13:	add    esp,ebx
  41ef15:	add    eax,0x8a6ce3e8
  41ef1a:	out    0x3,eax
	...
  41ef4c:	add    BYTE PTR [eax],al
  41ef4e:	arpl   WORD PTR ds:0x5dce3e7,ax
  41ef54:	out    0xe3,eax
  41ef56:	aam    0x5
  41ef58:	push   0x6805cce4
  41ef5d:	add    al,0x63
  41ef5f:	add    eax,0x56303e7
  41ef64:	addr16 add al,0xe3
  41ef67:	add    al,0xe8
  41ef69:	add    esp,ebx
  41ef6b:	add    al,0xe8
  41ef6d:	add    esp,DWORD PTR [ebx+0x5]
  41ef70:	out    0xe3,eax
  41ef72:	sbb    al,0x8a
  41ef74:	out    0x3,eax
  41ef76:	jecxz  0x41ef7c
  41ef78:	call   0x67477c60
  41ef7d:	add    al,0x63
  41ef7f:	add    eax,0x4e303e7
  41ef84:	call   0x67cbe46c
  41ef89:	in     al,0xec
  41ef8b:	mov    DWORD PTR [eax+0x4],ebp
  41ef8e:	jecxz  0x41ef94
  41ef90:	call   0x67475298
  41ef95:	in     al,0xd4
  41ef97:	mov    DWORD PTR [edi+0x4],esp
  41ef9a:	jecxz  0x41efa0
  41ef9c:	out    0xe3,eax
  41ef9e:	les    ecx,FWORD PTR [ecx+0x53ce467]
  41efa4:	push   0x534e4
  41efa9:	push   0x69000567
  41efae:	pop    edi
  41efaf:	test   DWORD PTR [eax],eax
  41efb1:	call   0x41efb6
	...
  41efe2:	add    BYTE PTR [eax],al
  41efe4:	pusha  
  41efe5:	test   DWORD PTR [eax],eax
  41efe7:	jmp    0x6841f96c
  41efec:	xchg   DWORD PTR [ecx],ecx
  41efee:	add    BYTE PTR [eax+0x5f],ch
  41eff1:	add    eax,0x560e900
  41eff6:	add    cl,ch
  41eff8:	pusha  
  41eff9:	add    eax,0x980e900
  41effe:	add    BYTE PTR [ecx+0x7f],ch
  41f001:	mov    ebp,edi
  41f003:	imul   esp,DWORD PTR [eax-0x7b],0x85606800
  41f00a:	add    al,ch
  41f00c:	pusha  
  41f00d:	add    eax,0x940e800
  41f012:	add    BYTE PTR [eax+0x40],ch
  41f015:	mov    ebp,edi
  41f017:	push   0x69fd8940
  41f01c:	pusha  
  41f01d:	add    eax,0x9406800
  41f022:	add    BYTE PTR [eax+0x60],ch
  41f025:	add    eax,0x560e800
  41f02a:	add    cl,ch
  41f02c:	add    BYTE PTR [ecx-0x7a9f1703],cl
  41f032:	add    al,ch
  41f034:	add    BYTE PTR [ecx+0x90069fd],cl
  41f03a:	add    BYTE PTR [eax+0x60],ch
  41f03d:	test   DWORD PTR [eax],eax
  41f03f:	call   0x6a3f7944
  41f044:	ror    BYTE PTR [eax+0xe9fd],0x0
	...
  41f077:	add    BYTE PTR [eax],al
  41f079:	add    BYTE PTR [eax-0x7b],ah
  41f07c:	add    al,ch
  41f07e:	ror    BYTE PTR [eax],0x0
  41f081:	imul   esp,DWORD PTR [eax+0x5],0x4ca0000
  41f088:	add    BYTE PTR [eax],0xca
  41f08b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f08c:	std    
  41f08d:	(bad)  
  41f08e:	cmp    ah,BYTE PTR [ebp+edi*2+0x1ba00]
  41f095:	add    BYTE PTR [edx-0x75fdf7ff],cl
  41f09b:	add    al,0x8
  41f09d:	add    bh,BYTE PTR [edx+0x1]
  41f0a0:	add    BYTE PTR [edx+0x7a],al
  41f0a3:	add    al,0x8
  41f0a5:	add    BYTE PTR [edx-0x75ffffff],cl
  41f0ab:	add    al,0x0
  41f0ad:	inc    eax
  41f0ae:	jp     0x41f0b4
  41f0b0:	or     BYTE PTR [edx],al
  41f0b2:	jp     0x41f0b5
  41f0b4:	or     BYTE PTR [eax+0x4a],al
  41f0b7:	add    al,0x8
  41f0b9:	add    BYTE PTR [edx+0x3],cl
  41f0bc:	add    BYTE PTR [edx],al
  41f0be:	cmp    al,BYTE PTR [ebx]
  41f0c0:	or     BYTE PTR [eax+0x3a],al
  41f0c3:	add    eax,DWORD PTR [eax]
  41f0c5:	inc    edx
  41f0c6:	dec    edx
  41f0c7:	add    al,0x8
  41f0c9:	inc    edx
  41f0ca:	dec    edx
  41f0cb:	add    ecx,DWORD PTR [eax]
  41f0cd:	add    BYTE PTR [edx],bh
  41f0cf:	add    al,0x0
  41f0d1:	inc    eax
  41f0d2:	cmp    al,BYTE PTR [eax+eax*1]
  41f0d5:	add    cl,BYTE PTR [edx]
  41f0d7:	add    al,0x8
  41f0d9:	inc    eax
  41f0da:	or     al,BYTE PTR [eax+ecx*1]
  41f0dd:	inc    eax
	...
  41f10e:	add    BYTE PTR [eax],al
  41f110:	cli    
  41f111:	add    eax,DWORD PTR [eax]
  41f113:	add    dl,bh
  41f115:	add    al,BYTE PTR [eax]
  41f117:	inc    eax
  41f118:	or     al,BYTE PTR [ebx]
  41f11a:	or     BYTE PTR [edx+0xa],al
  41f11d:	add    ecx,DWORD PTR [eax]
  41f11f:	inc    edx
  41f120:	cli    
  41f121:	add    al,BYTE PTR [eax]
  41f123:	add    bh,dl
  41f125:	add    ecx,DWORD PTR [eax]
  41f127:	inc    edx
  41f128:	retf   0x2
  41f12b:	inc    eax
  41f12c:	retf   0x3
  41f12f:	add    BYTE PTR [ebx-0x62],ah
  41f132:	add    DWORD PTR [eax],eax
  41f134:	and    DWORD PTR [esi-0x619ef7fe],ebx
  41f13a:	add    DWORD PTR [eax],eax
  41f13c:	popa   
  41f13d:	sahf   
  41f13e:	add    DWORD PTR [eax],eax
  41f140:	and    DWORD PTR [esi-0x619cf7fe],ebx
  41f146:	add    DWORD PTR [eax],ecx
  41f148:	arpl   WORD PTR [esi-0x61defffe],bx
  41f14e:	add    al,BYTE PTR [eax]
  41f150:	arpl   WORD PTR [esi-0x619effff],bx
  41f156:	add    DWORD PTR [eax],eax
  41f158:	and    ebx,DWORD PTR [esi-0x619ef7ff]
  41f15e:	add    al,BYTE PTR [eax]
  41f160:	and    DWORD PTR [esi-0x61dcf7fe],ebx
  41f166:	add    al,BYTE PTR [eax]
  41f168:	popa   
  41f169:	pushf  
  41f16a:	add    DWORD PTR [eax],eax
  41f16c:	mov    ds:0xa108019c,eax
  41f171:	pushf  
  41f172:	add    cl,BYTE PTR [eax]
	...
  41f1a4:	add    BYTE PTR [eax],al
  41f1a6:	popa   
  41f1a7:	pushf  
  41f1a8:	add    cl,BYTE PTR [eax]
  41f1aa:	mov    ds:0x6300029c,eax
  41f1af:	pushf  
  41f1b0:	add    DWORD PTR [eax],eax
  41f1b2:	popa   
  41f1b3:	pushf  
  41f1b4:	add    DWORD PTR [eax],ecx
  41f1b6:	mov    eax,ds:0xa108029c
  41f1bb:	pushf  
  41f1bc:	add    cl,BYTE PTR [eax]
  41f1be:	arpl   WORD PTR [ecx+eax*1+0x29ca100],bx
  41f1c5:	or     BYTE PTR [ecx+0x6108019c],ah
  41f1cb:	pushf  
  41f1cc:	add    DWORD PTR [eax],eax
  41f1ce:	arpl   WORD PTR [ecx+eax*1+0x19ca308],bx
  41f1d5:	add    BYTE PTR [ecx+0x6308029c],ah
  41f1db:	add    eax,0x36302e7
  41f1e0:	out    0x2,eax
  41f1e2:	arpl   WORD PTR [ebp-0x19],ax
  41f1e5:	add    ebx,DWORD PTR [ebx+0x5]
  41f1e8:	out    0x3,eax
  41f1ea:	arpl   WORD PTR ds:0x456b03e7,ax
  41f1f0:	out    0x2,eax
  41f1f2:	pop    ebx
  41f1f3:	add    esp,edi
  41f1f5:	add    ah,BYTE PTR [ebx+0x45]
  41f1f8:	xlat   BYTE PTR ds:[ebx]
  41f1f9:	add    esp,DWORD PTR [ebx-0x1b]
  41f1fc:	out    0x3,al
  41f1fe:	and    esp,ebp
  41f200:	out    0x43,al
  41f202:	arpl   WORD PTR ds:0xe52343f7,ax
  41f208:	out    0x3,al
	...
  41f23a:	add    BYTE PTR [eax],al
  41f23c:	and    esp,ebp
  41f23e:	(bad)  
  41f23f:	add    esp,DWORD PTR [ebx+0x5]
  41f242:	xlat   BYTE PTR ds:[ebx]
  41f243:	inc    ebx
  41f244:	and    esp,ebp
  41f246:	out    0x3,al
  41f248:	and    eax,DWORD PTR ds:0xe56343e7
  41f24e:	test   BYTE PTR [ebx-0x5d],0x5
  41f252:	out    0x3,eax
  41f254:	mov    ds:0x6303f705,eax
  41f259:	in     eax,0xf6
  41f25b:	add    esp,DWORD PTR [ebx+0x6343e705]
  41f261:	in     eax,0xe6
  41f263:	add    esp,DWORD PTR [ebx-0x1b]
  41f266:	(bad)  
  41f267:	inc    ebx
  41f268:	arpl   WORD PTR ds:0x56303e7,ax
  41f26e:	test   DWORD PTR [ebx],0x43f705a3
  41f274:	arpl   bp,sp
  41f276:	out    0x43,al
  41f278:	arpl   WORD PTR ds:0x5a343e7,ax
  41f27e:	xlat   BYTE PTR ds:[ebx]
  41f27f:	inc    ebx
  41f280:	arpl   bp,sp
  41f282:	(bad)  
  41f283:	add    esp,DWORD PTR [ebx+0x5]
  41f286:	add    cl,bl
  41f288:	pusha  
  41f289:	inc    ebp
  41f28a:	and    cl,bl
  41f28c:	pusha  
  41f28d:	inc    ebp
  41f28e:	and    cl,ch
  41f290:	pusha  
  41f291:	add    eax,0x4520f900
  41f296:	add    cl,ch
  41f298:	and    BYTE PTR [ebp+0x20],al
  41f29b:	stc    
  41f29c:	and    BYTE PTR ds:0xe900,al
	...
  41f2d2:	and    BYTE PTR [ebp+0x0],al
  41f2d5:	jmp    0xe96237fa
  41f2da:	pusha  
  41f2db:	add    eax,0x520e920
  41f2e0:	and    cl,bh
  41f2e2:	pusha  
  41f2e3:	add    eax,0x4560f900
  41f2e8:	and    cl,ch
  41f2ea:	and    BYTE PTR [ebp+0x0],al
  41f2ed:	stc    
  41f2ee:	and    BYTE PTR [ebp+0x20],al
  41f2f1:	jmp    0xd9423856
  41f2f6:	and    BYTE PTR ds:0x560d900,al
  41f2fc:	and    cl,ch
  41f2fe:	pusha  
  41f2ff:	(bad)  
  41f302:	mov    al,ds:0x60e92005
  41f307:	add    eax,0x5a0f920
  41f30c:	add    cl,bh
  41f30e:	pusha  
  41f30f:	add    eax,0xc5a0d920
  41f314:	pop    ds
  41f315:	jmp    0xe941b8ba
  41f31a:	pusha  
  41f31b:	lds    ebx,FWORD PTR [edi]
  41f31d:	fldenv [eax-0x5f17003b]
  41f323:	lds    ebx,FWORD PTR [edi]
  41f325:	jmp    0xf941f88a
  41f32a:	pusha  
  41f32b:	lds    ebx,FWORD PTR [edi]
  41f32d:	stc    
  41f32e:	pusha  
  41f32f:	add    eax,0xc90a0000
  41f334:	(bad)  
  41f335:	inc    DWORD PTR [eax]
	...
  41f367:	add    dl,bh
  41f369:	or     BYTE PTR [eax+0x20],al
  41f36c:	or     cl,cl
  41f36e:	aas    
  41f36f:	add    dl,cl
  41f371:	enter  0xffff,0xda
  41f375:	or     BYTE PTR [eax+0x0],al
  41f378:	retf   0xffc8
  41f37b:	pop    ds
  41f37c:	mov    edx,0xca000008
  41f381:	enter  0x203f,0xca
  41f385:	or     BYTE PTR [eax],al
  41f387:	and    BYTE PTR [edx-0x75ffbff8],cl
  41f38d:	enter  0x1fff,0x8a
  41f391:	or     BYTE PTR [eax],ah
  41f393:	add    BYTE PTR [eax+0x78042008],cl
  41f399:	cmp    ch,0x3
  41f39c:	jp     0x41f3a6
  41f39e:	add    BYTE PTR [eax],al
  41f3a0:	mov    al,BYTE PTR [eax-0x7f770003]
  41f3a6:	std    
  41f3a7:	add    edi,DWORD PTR [eax-0x80]
  41f3aa:	sbb    eax,0x1d807a00
  41f3af:	add    al,0x48
  41f3b1:	sbb    BYTE PTR ds:0x20084a04,0x0
  41f3b8:	cmp    cl,BYTE PTR [eax]
  41f3ba:	add    BYTE PTR [eax],al
  41f3bc:	cmp    BYTE PTR [eax],cl
  41f3be:	add    BYTE PTR [eax+ecx*2],al
  41f3c1:	or     BYTE PTR [eax],al
  41f3c3:	add    BYTE PTR [edx+0x8],cl
  41f3c6:	add    BYTE PTR [eax+edi*1],al
  41f3c9:	or     BYTE PTR [eax],ah
  41f3cb:	add    al,0x0
	...
  41f3fd:	add    BYTE PTR [eax],bh
  41f3ff:	cmp    ch,0xff
  41f402:	or     al,BYTE PTR [eax-0x7ff7fc03]
  41f408:	sbb    eax,0x2007f800
  41f40d:	add    BYTE PTR [ebx+0x6e],ah
  41f410:	stc    
  41f411:	jmp    DWORD PTR [eax+0x70]
  41f414:	add    DWORD PTR [eax],eax
  41f416:	pop    edi
  41f417:	outs   dx,BYTE PTR ds:[esi]
  41f418:	add    DWORD PTR [eax],esp
  41f41a:	outs   dx,BYTE PTR ds:[si]
  41f41c:	stc    
  41f41d:	pop    ds
  41f41e:	pop    edi
  41f41f:	jo     0x41f422
  41f421:	and    BYTE PTR [ebx+0x6e],ah
  41f424:	add    DWORD PTR [eax],esp
  41f426:	pop    edi
  41f427:	outs   dx,BYTE PTR ds:[esi]
  41f428:	stc    
  41f429:	dec    esp
  41f42b:	outs   dx,DWORD PTR ds:[esi]
  41f42c:	stc    
  41f42d:	inc    esp
  41f42f:	outs   dx,DWORD PTR ds:[esi]
  41f430:	stc    
  41f431:	pop    ds
  41f432:	outs   dx,BYTE PTR ds:[si]
  41f434:	stc    
  41f435:	pop    ds
  41f436:	arpl   WORD PTR [eax+0x1],si
  41f439:	add    BYTE PTR [ebx+0x6e],ah
  41f43c:	add    DWORD PTR [eax],eax
  41f43e:	pop    edi
  41f43f:	outs   dx,BYTE PTR ds:[esi]
  41f440:	stc    
  41f441:	pop    ds
  41f442:	arpl   WORD PTR [esi+0x1],bp
  41f445:	add    BYTE PTR [edi+0x6e],bl
  41f448:	stc    
  41f449:	pop    ds
  41f44a:	arpl   WORD PTR [esi+0x1],bp
  41f44d:	and    BYTE PTR [ebx+0x70],ah
  41f450:	stc    
  41f451:	jmp    DWORD PTR [eax+0x70]
  41f454:	stc    
  41f455:	jmp    DWORD PTR [eax+0x70]
  41f458:	add    DWORD PTR [eax],esp
  41f45a:	addr16 jo 0x41f45e
  41f45d:	and    BYTE PTR [edi+0x70],bl
  41f460:	add    DWORD PTR [eax],eax
	...
  41f492:	add    BYTE PTR [eax],al
  41f494:	arpl   WORD PTR [esi+0x1],bp
  41f497:	and    BYTE PTR [ebx+0x6c],ah
  41f49a:	add    DWORD PTR [eax],eax
  41f49c:	ins    BYTE PTR es:[di],dx
  41f49e:	stc    
  41f49f:	jmp    DWORD PTR [eax+0x6c]
  41f4a2:	add    DWORD PTR [eax],esp
  41f4a4:	arpl   WORD PTR [ecx+edi*8+0x1f],bp
  41f4a8:	pop    edi
  41f4a9:	outs   dx,BYTE PTR ds:[esi]
  41f4aa:	stc    
  41f4ab:	jmp    FWORD PTR [edi+ebp*2]
  41f4ae:	stc    
  41f4af:	pop    ds
  41f4b0:	arpl   WORD PTR [ecx+edi*8+0x1f],bp
  41f4b4:	outs   dx,BYTE PTR ds:[si]
  41f4b6:	stc    
  41f4b7:	call   DWORD PTR [esi+eax*1]
  41f4ba:	jmp    0xe94b57c2
  41f4bf:	sti    
  41f4c0:	fs or  edi,esp
  41f4c3:	add    eax,DWORD PTR [ebx+0x9]
  41f4c6:	out    0xfb,eax
  41f4c8:	push   esp
  41f4c9:	add    eax,0x56303e7
  41f4ce:	jmp    0xe94757d6
  41f4d3:	sti    
  41f4d4:	jl     0x41f4df
  41f4d6:	out    0x3,eax
  41f4d8:	arpl   WORD PTR ds:0x56cfbe9,ax
  41f4de:	out    0x3,eax
  41f4e0:	or     DWORD PTR [ecx],0xffffffe7
  41f4e3:	sti    
  41f4e4:	mov    esp,0x6303e982
  41f4e9:	or     edi,esp
  41f4eb:	sti    
  41f4ec:	lods   al,BYTE PTR ds:[esi]
  41f4ed:	push   es
  41f4ee:	out    0xfb,eax
  41f4f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4f1:	sub    cl,0x3
  41f4f4:	inc    ebx
  41f4f5:	add    eax,0xf3a7
	...
  41f52a:	xchg   esp,eax
  41f52b:	adc    ah,bh
  41f52d:	repz mov WORD PTR [edx+0x55f03e7],es
  41f534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f535:	repz pusha 
  41f537:	adc    eax,0x156303e7
  41f53c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f53d:	rep ins BYTE PTR es:[edi],dx
  41f53f:	adc    ah,BYTE PTR [edi-0x18fa9cfd]
  41f545:	add    esp,DWORD PTR [ebx+0x15]
  41f548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f549:	add    ebx,DWORD PTR [edi+0x5]
  41f54c:	out    0x3,eax
  41f54e:	addr16 adc eax,0x1560f427
  41f554:	out    0xf3,eax
  41f556:	pusha  
  41f557:	add    eax,0x1560f3e7
  41f55c:	daa    
  41f55d:	hlt    
  41f55e:	pusha  
  41f55f:	add    eax,0x8224f3e7
  41f564:	add    BYTE PTR [ecx],ch
  41f566:	addr16 add eax,0x960e900
  41f56c:	adc    BYTE PTR [ecx],ch
  41f56e:	addr16 add eax,0x8210e910
  41f574:	or     eax,0xfd81f729
  41f579:	jmp    0x2941fb6e
  41f57e:	or     DWORD PTR [bx+si],eax
  41f581:	sub    DWORD PTR [edi+0x9],ebx
  41f584:	adc    cl,ch
  41f586:	rol    BYTE PTR ds:0x81cf2910,1
  41f58c:	std    
  41f58d:	jmp    0x41f592
	...
  41f5be:	add    BYTE PTR [eax],al
  41f5c0:	pusha  
  41f5c1:	add    eax,0x560e900
  41f5c6:	add    BYTE PTR [ecx-0x56eff6a0],ch
  41f5cc:	pusha  
  41f5cd:	add    eax,0x81b0e910
  41f5d2:	or     eax,0x5b0a9
  41f5d7:	jmp    0xa941ff3c
  41f5dc:	nop
  41f5dd:	add    eax,0x960e900
  41f5e2:	add    cl,ch
  41f5e4:	nop
  41f5e5:	add    eax,0x8170e910
  41f5ea:	std    
  41f5eb:	test   eax,0xa9000560
  41f5f0:	pusha  
  41f5f1:	or     DWORD PTR [eax],edx
  41f5f3:	jmp    0xaa3f7768
  41f5f8:	push   eax
  41f5f9:	add    eax,0x8150e900
  41f5fe:	or     eax,0x56729
  41f603:	sub    DWORD PTR [edi+0x5],ebx
  41f606:	adc    cl,ch
  41f608:	pusha  
  41f609:	or     DWORD PTR [eax],edx
  41f60b:	sub    DWORD PTR [edi+0x9],ebx
  41f60e:	adc    BYTE PTR [eax],al
  41f610:	cmp    al,BYTE PTR ds:0x53a1000
  41f616:	add    al,0x0
  41f618:	dec    edx
  41f619:	jns    0x41f618
  41f61b:	(bad)  
  41f61d:	add    eax,0x793a0000
  41f622:	add    DWORD PTR [eax],edx
	...
  41f654:	add    BYTE PTR [eax],al
  41f656:	cmp    cl,BYTE PTR [ecx]
  41f658:	add    al,0x0
  41f65a:	dec    edx
  41f65b:	or     DWORD PTR [eax],eax
  41f65d:	adc    BYTE PTR [edx],cl
  41f65f:	add    eax,0x74fa1004
  41f664:	std    
  41f665:	(bad)  
  41f668:	std    
  41f669:	bswap  edx
  41f66b:	add    al,0x0
  41f66d:	add    BYTE PTR [edx-0x45effe87],cl
  41f673:	je     0x41f676
  41f675:	add    BYTE PTR [edx+0xa000174],bh
  41f67b:	jne    0x41f67a
  41f67d:	dec    DWORD PTR [edx]
  41f67f:	jne    0x41f67e
  41f681:	(bad)  
  41f682:	cli    
  41f683:	add    al,0x4
  41f685:	add    BYTE PTR [edx-0x75effffc],bh
  41f68b:	je     0x41f68e
  41f68d:	adc    BYTE PTR [esi],al
  41f68f:	xor    edi,ebp
  41f691:	(bad)  
  41f692:	jp     0x41f698
  41f694:	add    BYTE PTR [eax],al
  41f696:	jp     0x41f69c
  41f698:	add    BYTE PTR [eax],al
  41f69a:	out    0x2e,al
  41f69c:	std    
  41f69d:	inc    edx
  41f69f:	xor    ebp,edi
  41f6a1:	dec    DWORD PTR [edx]
  41f6a3:	sub    al,0xfd
  41f6a5:	(bad)  
  41f6a6:	jp     0x41f6ac
  41f6a8:	add    BYTE PTR [eax],al
  41f6aa:	dec    edx
  41f6ab:	add    al,0x0
  41f6ad:	add    BYTE PTR [ebp+ebp*1-0x3],dl
  41f6b1:	jmp    DWORD PTR [esi+0x2f]
  41f6b4:	std    
  41f6b5:	call   esi
  41f6b7:	xor    ch,bh
  41f6b9:	inc    DWORD PTR [eax]
	...
  41f6eb:	add    BYTE PTR [ebx+0x6e],ah
  41f6ee:	add    DWORD PTR [eax],eax
  41f6f0:	arpl   WORD PTR [esi+0x1],bp
  41f6f3:	add    BYTE PTR [ebx+0x72],ah
  41f6f6:	sub    bh,bh
  41f6f8:	and    al,0x6
  41f6fa:	call   FWORD PTR cs:[edx+eax*1]
  41f6fe:	sub    al,0xff
  41f700:	adc    al,0x6e
  41f702:	add    DWORD PTR [eax],eax
  41f704:	arpl   WORD PTR [esi+0x1],bp
  41f707:	add    BYTE PTR [ebx-0x1a],ah
  41f70a:	es (bad) 
  41f70c:	cld    
  41f70d:	sub    eax,0x8df4ff2e
  41f712:	sub    al,0xff
  41f714:	in     al,dx
  41f715:	ins    DWORD PTR es:[edi],dx
  41f716:	add    DWORD PTR [eax],eax
  41f718:	arpl   WORD PTR [esi+0x1],bp
  41f71b:	add    BYTE PTR [ebx-0x60],ah
  41f71e:	daa    
  41f71f:	call   esp
  41f721:	sub    DWORD PTR [ebx],0x2bd5ccff
  41f727:	inc    esp
  41f729:	ins    DWORD PTR es:[edi],dx
  41f72a:	add    DWORD PTR [eax],eax
  41f72c:	arpl   WORD PTR [esi+0x1],bp
  41f72f:	add    BYTE PTR [ebx+0x62],ah
  41f732:	and    edi,edi
  41f734:	lods   al,BYTE PTR ds:[esi]
  41f735:	shr    DWORD PTR [ebx],0xff
  41f738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f739:	cmp    DWORD PTR [edi+edi*8],ebp
  41f73c:	pushf  
  41f73d:	ins    DWORD PTR es:[edi],dx
  41f73e:	add    DWORD PTR [eax],eax
  41f740:	arpl   WORD PTR [esi+0x1],bp
  41f743:	add    BYTE PTR [ebx+0x48],ah
  41f746:	and    edi,edi
  41f748:	test   ch,ch
  41f74a:	sub    eax,0x2a7d7cff
  41f74f:	inc    DWORD PTR [eax]
	...
  41f781:	add    BYTE PTR [ebp+ebp*2+0x1],dh
  41f785:	add    BYTE PTR [ebx+0x6e],ah
  41f788:	add    DWORD PTR [eax],eax
  41f78a:	arpl   WORD PTR [eax],sp
  41f78c:	and    al,0xff
  41f78e:	pop    esp
  41f78f:	fldcw  WORD PTR ds:0x2ab154ff
  41f795:	dec    DWORD PTR [esi+eax*1-0x19]
  41f799:	add    esp,DWORD PTR [ebx+0x5]
  41f79c:	out    0x3,eax
  41f79e:	arpl   WORD PTR ds:0x7f3422f9,ax
  41f7a4:	lahf   
  41f7a5:	sub    eax,0x3e77f2c
  41f7aa:	arpl   WORD PTR ds:0x56303e7,ax
  41f7b0:	out    0x3,eax
  41f7b2:	arpl   WORD PTR ds:0x56303e7,ax
  41f7b8:	out    0x3,eax
  41f7ba:	arpl   WORD PTR ds:0x7efc2db3,ax
  41f7c0:	mov    DWORD PTR ds:0x2d7d7ef4,ebp
  41f7c6:	in     al,dx
  41f7c7:	jle    0x41f74c
  41f7c9:	sub    eax,0x2cef7ee4
  41f7ce:	fdivr  QWORD PTR [esi-0x25]
  41f7d1:	sub    al,0xd4
  41f7d3:	jle    0x41f79e
  41f7d5:	sub    al,0xcc
  41f7d7:	jle    0x41f7f2
  41f7d9:	sub    eax,0x2d1d7ec4
  41f7de:	mov    esp,0xb42ca37e
  41f7e3:	jle    0x41f794
  41f7e5:	sub    al,0x0
	...
  41f817:	add    BYTE PTR [esi+edi*2+0x7ea42ccb],ch
  41f81e:	shr    DWORD PTR [esp+ebx*4],0x7e
  41f822:	pop    ebp
  41f823:	sub    al,0x94
  41f825:	jle    0x41f7aa
  41f827:	sub    al,0x8c
  41f829:	jle    0x41f88c
  41f82b:	sub    al,0x84
  41f82d:	jle    0x41f860
  41f82f:	sub    al,0x7c
  41f831:	jle    0x41f866
  41f833:	sub    al,0x74
  41f835:	jle    0x41f832
  41f837:	sub    ebp,DWORD PTR [esi+edi*2+0x5]
  41f83b:	sub    al,0x64
  41f83d:	jle    0x41f82c
  41f83f:	daa    
  41f840:	pop    esp
  41f841:	jle    0x41f843
  41f843:	retf   
  41f844:	jl     0x41f8c4
  41f846:	std    
  41f847:	mov    ecx,0x2dfd7e84
  41f84c:	jnp    0x41f8cc
  41f84e:	std    
  41f84f:	inc    ebx
  41f850:	mov    edi,DWORD PTR [esi-0x3]
  41f853:	inc    ebp
  41f854:	mov    edi,DWORD PTR [esi-0x3]
  41f857:	push   ecx
  41f858:	jnp    0x41f8d8
  41f85a:	std    
  41f85b:	jno    0x41f8d8
  41f85d:	jle    0x41f85c
  41f85f:	push   ebp
  41f860:	dec    ebx
  41f861:	jle    0x41f860
  41f863:	or     DWORD PTR [ebx+0x7e],0x7e3b71fd
  41f86a:	std    
  41f86b:	mov    bl,0x3b
  41f86d:	jle    0x41f86c
  41f86f:	ret    
  41f870:	dec    ebx
  41f871:	jle    0x41f870
  41f873:	fwait
  41f874:	dec    ebx
  41f875:	jle    0x41f874
  41f877:	fistp  QWORD PTR [ebx]
  41f879:	jle    0x41f878
  41f87b:	iret   
	...
  41f8ac:	add    BYTE PTR [eax],al
  41f8ae:	cmp    edi,DWORD PTR [esi-0x3]
  41f8b1:	mov    ebx,0x1dfd7e8b
  41f8b6:	mov    bh,BYTE PTR [esi-0x3]
  41f8b9:	std    
  41f8ba:	jnp    0x41f93a
  41f8bc:	std    
  41f8bd:	ins    DWORD PTR es:[edi],dx
  41f8be:	jp     0x41f93e
  41f8c0:	std    
  41f8c1:	jns    0x41f84d
  41f8c3:	jle    0x41f8c2
  41f8c5:	(bad)  
  41f8c9:	xchg   edi,eax
  41f8ca:	jp     0x41f94a
  41f8cc:	std    
  41f8cd:	xchg   DWORD PTR [edx+0x7e],edi
  41f8d0:	std    
  41f8d1:	adc    eax,0x4dfd7e4a
  41f8d6:	dec    edx
  41f8d7:	jle    0x41f8d6
  41f8d9:	jmp    0xfc3f7724
  41f8de:	ds jle 0x41f8de
  41f8e1:	leave  
  41f8e2:	inc    esi
  41f8e3:	jle    0x41f8e2
  41f8e5:	fnstcw WORD PTR [esi]
  41f8e7:	jle    0x41f8e6
  41f8e9:	test   eax,0xfd7e46
  41f8ee:	lods   al,BYTE PTR ds:[esi]
  41f8ef:	daa    
  41f8f0:	std    
  41f8f1:	dec    DWORD PTR [edx+0x9]
  41f8f4:	add    BYTE PTR [eax],al
  41f8f6:	shl    BYTE PTR [edx],1
  41f8f8:	std    
  41f8f9:	jmp    FWORD PTR [eax-0xf0002dd]
  41f8ff:	and    bh,ch
  41f901:	inc    DWORD PTR [eax]
  41f903:	and    edi,ebp
  41f905:	inc    DWORD PTR [eax]
  41f907:	and    edi,ebp
  41f909:	(bad)  
  41f90a:	cld    
  41f90b:	and    bh,ch
  41f90d:	(bad)  
  41f90e:	cmp    cl,BYTE PTR [ecx]
	...
  41f944:	and    ah,BYTE PTR [ebx]
  41f946:	std    
  41f947:	dec    DWORD PTR [edx]
  41f949:	or     DWORD PTR [eax],eax
  41f94b:	add    BYTE PTR [edx],ch
  41f94d:	and    al,0xfd
  41f94f:	call   FWORD PTR [edx]
  41f951:	and    al,0xfd
  41f953:	call   DWORD PTR [esi]
  41f955:	and    al,0xfd
  41f957:	dec    DWORD PTR [eax+0x24]
  41f95a:	std    
  41f95b:	jmp    FWORD PTR [edx]
  41f95d:	and    al,0xfd
  41f95f:	call   FWORD PTR [edx+0x24]
  41f962:	std    
  41f963:	(bad)  
  41f964:	fisub  DWORD PTR [ebx]
  41f966:	std    
  41f967:	dec    DWORD PTR [eax+0x23]
  41f96a:	std    
  41f96b:	jmp    FWORD PTR [eax]
  41f96d:	and    edi,ebp
  41f96f:	push   edx
  41f971:	and    edi,ebp
  41f973:	dec    edx
  41f975:	or     BYTE PTR [eax],al
  41f977:	add    BYTE PTR [ebx+eiz*1+0x8bafffd],al
  41f97e:	add    BYTE PTR [eax],al
  41f980:	sbb    BYTE PTR [ebx],ah
  41f982:	std    
  41f983:	call   DWORD PTR [ebx+eiz*1-0x3]
  41f987:	dec    DWORD PTR [edx-0x4dfffff8]
  41f98d:	sub    ch,bh
  41f98f:	call   DWORD PTR [esi-0x650002d8]
  41f995:	sub    ch,bh
  41f997:	jmp    DWORD PTR [ebx+0x52]
  41f99a:	and    edi,edi
  41f99c:	ins    BYTE PTR es:[edi],dx
  41f99d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f99e:	and    edi,edi
  41f9a0:	mov    al,fs:0x6e5cff21
  41f9a6:	add    DWORD PTR [eax],eax
	...
  41f9d8:	add    BYTE PTR [eax],al
  41f9da:	arpl   WORD PTR [eax-0xbb300df],cx
  41f9e0:	and    bh,bh
  41f9e2:	inc    esp
  41f9e3:	in     al,dx
  41f9e4:	and    edi,edi
  41f9e6:	cmp    al,0xfe
  41f9e8:	and    edi,edi
  41f9ea:	xor    al,0xf8
  41f9ec:	and    edi,edi
  41f9ee:	sub    al,0x86
  41f9f0:	and    al,0xff
  41f9f2:	and    al,0xfe
  41f9f4:	and    edi,edi
  41f9f6:	sbb    al,0x88
  41f9f8:	and    al,0xff
  41f9fa:	adc    al,0xb0
  41f9fc:	and    al,0xff
  41f9fe:	or     al,0x9e
  41fa00:	and    al,0xff
  41fa02:	add    al,0x6e
  41fa04:	add    DWORD PTR [eax],eax
  41fa06:	arpl   WORD PTR [eax-0x6c0b00dc],bx
  41fa0c:	and    al,0xff
  41fa0e:	in     al,dx
  41fa0f:	ins    DWORD PTR es:[edi],dx
  41fa10:	add    DWORD PTR [eax],eax
  41fa12:	arpl   WORD PTR [edx-0x702300d6],bx
  41fa18:	sub    bh,bh
  41fa1a:	aam    0x83
  41fa1c:	sub    bh,bh
  41fa1e:	int3   
  41fa1f:	jmp    0x7606f94d
  41fa24:	sub    bh,bh
  41fa26:	mov    esp,0xb4ff2871
  41fa2b:	(bad)  
  41fa2d:	jmp    FWORD PTR [edi+ebx*1+0x3a4ff27]
  41fa34:	daa    
  41fa35:	call   FWORD PTR [ecx+ebp*4-0x6a6b00d8]
  41fa3c:	sub    bh,bh
	...
  41fa6e:	add    BYTE PTR [eax],al
  41fa70:	mov    WORD PTR [ecx+0x28],es
  41fa73:	inc    DWORD PTR [esp+eax*1+0x7b7c28a1]
  41fa7a:	jne    0x41faa5
  41fa7c:	je     0x41faf9
  41fa7e:	dec    ebx
  41fa7f:	sub    DWORD PTR [ebx+edi*2+0x51],ebp
  41fa83:	sub    DWORD PTR [ebx+edi*2+0x31],esp
  41fa87:	sub    DWORD PTR [ebx+edi*2+0x1b],ebx
  41fa8b:	sub    DWORD PTR [ebx+edi*2+0x3],edx
  41fa8f:	sub    DWORD PTR [ebx+edi*2-0x13],ecx
  41fa93:	sub    BYTE PTR [ebx+edi*2-0xb],al
  41fa97:	daa    
  41fa98:	cmp    al,0x7b
  41fa9a:	or     DWORD PTR [eax],ebp
  41fa9c:	xor    al,0x7b
  41fa9e:	pop    ss
  41fa9f:	sub    BYTE PTR [ebx+edi*2],ch
  41faa2:	and    ebp,DWORD PTR [eax]
  41faa4:	and    al,0x7b
  41faa6:	and    DWORD PTR [eax],ebp
  41faa8:	sbb    al,0x7b
  41faaa:	dec    ebx
  41faab:	sub    BYTE PTR [ebx+edi*2],dl
  41faae:	das    
  41faaf:	sub    BYTE PTR [ebx+edi*2],cl
  41fab2:	pop    edi
  41fab3:	daa    
  41fab4:	add    al,0x7b
  41fab6:	jnp    0x41fadf
  41fab8:	cld    
  41fab9:	jp     0x41fb0a
  41fabb:	daa    
  41fabc:	hlt    
  41fabd:	jp     0x41fb0e
  41fabf:	daa    
  41fac0:	in     al,dx
  41fac1:	jp     0x41fa64
  41fac3:	daa    
  41fac4:	in     al,0x7a
  41fac6:	mov    eax,ds:0x797adc27
  41facb:	daa    
  41facc:	aam    0x7a
  41face:	in     eax,0x26
  41fad0:	int3   
  41fad1:	jp     0x41fa98
  41fad3:	add    BYTE PTR es:[eax],al
	...
  41fb06:	les    edi,FWORD PTR [edx+0x19]
  41fb09:	daa    
  41fb0a:	mov    esp,0xb426b37a
  41fb0f:	jp     0x41fad4
  41fb11:	lods   al,BYTE PTR es:[esi]
  41fb13:	jp     0x41fb78
  41fb15:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41fb17:	jp     0x41fb70
  41fb19:	es pushf 
  41fb1b:	jp     0x41faa2
  41fb1d:	es xchg esp,eax
  41fb1f:	jp     0x41fb21
  41fb21:	jg     0x41fb68
  41fb23:	jp     0x41fb22
  41fb25:	outs   dx,DWORD PTR ds:[esi]
  41fb26:	cmp    eax,0x453dfd7a
  41fb2b:	jp     0x41fb2a
  41fb2d:	add    eax,0xe9fd7a3d
  41fb32:	inc    esi
  41fb33:	jp     0x41fb32
  41fb35:	sti    
  41fb36:	ds jp  0x41fb36
  41fb39:	leave  
  41fb3a:	xchg   BYTE PTR [edx-0x3],bh
  41fb3d:	mov    ecx,0xa9fd7a7e
  41fb42:	xchg   BYTE PTR [edx-0x3],bh
  41fb45:	lahf   
  41fb46:	jle    0x41fbc2
  41fb48:	std    
  41fb49:	jmp    0x634200ae
  41fb4e:	inc    ecx
  41fb4f:	jnp    0x41fb4e
  41fb51:	jnp    0x41fb94
  41fb53:	jnp    0x41fb52
  41fb55:	add    DWORD PTR [ecx+0x7b],0xfffffffd
  41fb59:	add    DWORD PTR [ecx],0x7b
  41fb5c:	std    
  41fb5d:	mov    bl,0x1
  41fb5f:	jnp    0x41fb5e
  41fb61:	xchg   edi,eax
  41fb62:	add    DWORD PTR [ebx-0x3],edi
  41fb65:	jmp    0xa14200ca
	...
  41fb9a:	add    BYTE PTR [eax],al
  41fb9c:	add    DWORD PTR [ebx-0x3],edi
  41fb9f:	jmp    0xf9420104
  41fba4:	add    DWORD PTR [ebx-0x3],edi
  41fba7:	leave  
  41fba8:	add    DWORD PTR [ebx-0x3],edi
  41fbab:	mov    ebp,0x2bfd7ac1
  41fbb0:	sar    BYTE PTR [edx-0x3],0x19
  41fbb4:	sar    BYTE PTR [edx-0x3],0x9
  41fbb8:	sar    BYTE PTR [edx-0x3],0xd9
  41fbbc:	sar    DWORD PTR [edx-0x3],0x6b
  41fbc0:	sar    BYTE PTR [edx-0x3],0x7b
  41fbc4:	sar    BYTE PTR [edx-0x3],0x81
  41fbc8:	sar    BYTE PTR [edx-0x3],0x0
  41fbcc:	mov    al,BYTE PTR ds:0x663c0000
  41fbd2:	(bad)  
  41fbd3:	(bad)  
  41fbd4:	jp     0x41fbdb
  41fbd6:	add    BYTE PTR [eax],al
  41fbd8:	sbb    BYTE PTR [esi-0x2],ah
  41fbdb:	call   FWORD PTR [esi+eiz*2-0x2]
  41fbdf:	dec    DWORD PTR [edx+0x72000005]
  41fbe5:	gs (bad) 
  41fbe7:	call   FWORD PTR [esi+0x1afffe65]
  41fbed:	gs (bad) 
  41fbef:	call   DWORD PTR [esi]
  41fbf1:	gs (bad) 
  41fbf3:	(bad)  
  41fbf4:	cld    
  41fbf5:	fs (bad) 
  41fbf7:	(bad)  
  41fbf8:	call   0x4b41fa61
  41fbfd:	add    eax,0x0
	...
  41fc32:	nop
  41fc33:	popa   
  41fc34:	(bad)  
  41fc35:	dec    DWORD PTR [ecx+eiz*2+0x64bcfffe]
  41fc3c:	(bad)  
  41fc3d:	(bad)  
  41fc3e:	mov    edx,0x80fffe64
  41fc43:	fs (bad) 
  41fc45:	jmp    edx
  41fc47:	fs (bad) 
  41fc49:	dec    DWORD PTR [edx-0x7f00019c]
  41fc4f:	fs (bad) 
  41fc51:	dec    eax
  41fc53:	fs (bad) 
  41fc55:	jmp    FWORD PTR [edx-0x500019c]
  41fc5b:	add    al,0x0
  41fc5d:	add    al,dh
  41fc5f:	fs (bad) 
  41fc61:	call   DWORD PTR [esp+eiz*2-0x2]
  41fc65:	(bad)  
  41fc66:	mov    edx,0xf7000004
  41fc6b:	add    al,0x3f
  41fc6d:	jb     0x41fc1e
  41fc6f:	popa   
  41fc70:	jno    0x41fcd7
  41fc72:	cld    
  41fc73:	imul   ebp,DWORD PTR [ecx+0x65],0x3f01ad63
  41fc7a:	popa   
  41fc7b:	mov    esp,0xa8075ee8
  41fc80:	in     al,dx
  41fc81:	imul   edi,esi,0x6d
  41fc84:	add    DWORD PTR [ecx],esp
  41fc86:	arpl   WORD PTR [ebx+0x41106ced],bp
  41fc8c:	leave  
  41fc8d:	pop    esi
  41fc8e:	or     eax,0x6362ed8a
  41fc93:	and    eax,DWORD PTR [ebx]
  41fc95:	push   ebp
	...
  41fcc6:	add    BYTE PTR [eax],al
  41fcc8:	icebp  
  41fcc9:	test   ch,dh
  41fccb:	bound  ebx,QWORD PTR ds:0x6362ed85
  41fcd1:	popa   
  41fcd2:	push   es
  41fcd3:	ins    BYTE PTR es:[edi],dx
  41fcd4:	shl    dl,1
  41fcd6:	repnz imul eax,esi,0xffffff80
  41fcda:	(bad)  
  41fcdb:	inc    DWORD PTR [esi+edi*1+0x4]
  41fcdf:	inc    ebp
  41fce0:	iret   
  41fce1:	iret   
  41fce2:	in     eax,0x5e
  41fce4:	(bad)  
  41fce5:	sub    ch,bh
  41fce7:	pusha  
  41fce8:	mov    eax,0x62b5016e
  41fced:	pop    ds
  41fcee:	lock ins BYTE PTR es:[edi],dx
  41fcf0:	or     ebp,0xca8552ef
  41fcf6:	out    dx,al
  41fcf7:	pusha  
  41fcf8:	js     0x41fd68
  41fcfa:	add    esp,esi
  41fcfc:	bound  ebx,QWORD PTR [edx]
  41fcfe:	out    dx,eax
  41fcff:	pusha  
  41fd00:	adc    BYTE PTR [edx],0xca
  41fd03:	jno    0x41fd83
  41fd05:	add    DWORD PTR [eax+esi*8],eax
  41fd08:	bound  esp,QWORD PTR [edx]
  41fd0a:	out    dx,eax
  41fd0b:	pusha  
  41fd0c:	cmp    BYTE PTR [edx-0x3e],0x6b
  41fd10:	dec    edi
  41fd11:	pavgw  mm7,mm7
  41fd14:	aam    0x64
  41fd16:	add    al,0x6c
  41fd18:	push   eax
  41fd19:	jp     0x41fd0e
  41fd1b:	pusha  
  41fd1c:	push   ebx
  41fd1d:	jne    0x41fce1
  41fd1f:	(bad)  
  41fd20:	mov    esp,0x4704fa04
  41fd25:	hlt    
  41fd26:	shl    ch,cl
  41fd28:	inc    ebx
  41fd29:	out    0xda,al
  41fd2b:	ret    0x0
	...
  41fd5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd5f:	ja     0x41fd57
  41fd61:	add    ah,BYTE PTR [esi]
  41fd63:	loop   0x41fd1f
  41fd65:	leave  
  41fd66:	std    
  41fd67:	call   0xf152c02f
  41fd6c:	mov    eax,0xb2f202ea
  41fd71:	out    0xf3,al
  41fd73:	(bad)
  41fd76:	fadd   DWORD PTR [esp+eiz*4]
  41fd79:	sti    
  41fd7a:	cld    
  41fd7b:	in     eax,0x84
  41fd7d:	out    0x21,eax
  41fd7f:	out    0x94,eax
  41fd81:	jmp    0xe7c1:0xee94e6d2
  41fd88:	jb     0x41fd5e
  41fd8a:	shl    bl,1
  41fd8c:	jg     0x41fd7f
  41fd8e:	mov    edi,0x5f03a7f2
  41fd93:	add    al,0x2e
  41fd95:	out    0xb0,eax
  41fd97:	mov    edi,0xd2c1f04f
  41fd9c:	aas    
  41fd9d:	inc    cl
  41fd9f:	add    eax,0xf3a2040d
  41fda4:	dec    ebx
  41fda5:	jecxz  0x41fd37
  41fda7:	loopne 0x41fdcd
  41fda9:	jmp    0x41fe23
  41fdab:	loopne 0x41fdd0
  41fdad:	jecxz  0x41fe23
  41fdaf:	cmc    
  41fdb0:	aas    
  41fdb1:	repnz xchg esp,eax
  41fdb4:	out    0x3,al
  41fdb6:	arpl   WORD PTR [ebx],ax
  41fdb8:	sub    al,0xe3
  41fdba:	jl     0x41fd8b
  41fdbc:	jmp    esi
  41fdbe:	outs   dx,DWORD PTR ds:[esi]
  41fdbf:	mov    BYTE PTR [edx+ecx*8],0x0
	...
  41fdf3:	add    BYTE PTR [ebp-0x17],al
  41fdf6:	or     eax,DWORD PTR [edx+esi*4]
  41fdf9:	add    edx,DWORD PTR [edx+esi*8]
  41fdfc:	cmp    esp,esp
  41fdfe:	(bad)  
  41fdff:	clc    
  41fe00:	stos   BYTE PTR es:[edi],al
  41fe01:	fbld   TBYTE PTR [edx-0xa]
  41fe04:	xchg   ebx,eax
  41fe05:	loopne 0x41fe4c
  41fe07:	rol    ah,1
  41fe09:	jecxz  0x41fe0a
  41fe0b:	push   edx
  41fe0c:	popa   
  41fe0d:	leave  
  41fe0e:	ins    BYTE PTR es:[edi],dx
  41fe0f:	enter  0xcabc,0x66
  41fe13:	retf   
  41fe14:	xchg   esi,eax
  41fe15:	xlat   BYTE PTR ds:[ebx]
  41fe16:	jno    0x41fdd8
  41fe18:	mov    eax,ds:0x619afd76
  41fe1d:	shl    BYTE PTR [edx-0x43],0xb0
  41fe21:	hlt    
  41fe22:	ins    BYTE PTR es:[edi],dx
  41fe23:	retf   0xe2a1
  41fe26:	arpl   WORD PTR [ebx-0x168f0a83],bx
  41fe2c:	pusha  
  41fe2d:	cmp    edi,0x53f27dad
  41fe33:	test   BYTE PTR [ebp-0x1a],cl
  41fe36:	dec    edi
  41fe37:	mov    BYTE PTR [esi+ebx*8+0x3e],cl
  41fe3b:	jmp    0xaa4230a0
  41fe40:	dec    esi
  41fe41:	jecxz  0x41fea1
  41fe43:	jne    0x41fe8a
  41fe45:	ret    0x5b66
  41fe48:	dec    edx
  41fe49:	in     eax,0x73
  41fe4b:	dec    esi
  41fe4c:	xor    edi,ebp
  41fe4e:	ds jmp 0x2541dcb4
  41fe54:	or     ch,dl
  41fe56:	bound  edi,QWORD PTR ds:0x0
	...
  41fe88:	add    BYTE PTR [eax],al
  41fe8a:	or     al,al
  41fe8c:	dec    bp
  41fe8e:	cli    
  41fe8f:	ss add cl,ch
  41fe92:	pop    edi
  41fe93:	shl    BYTE PTR [edx+0x35],0x20
  41fe97:	repz jno 0x41feb5
  41fe9a:	or     ch,al
  41fe9c:	jae    0x41fed7
  41fe9e:	icebp  
  41fe9f:	call   0xf5320b04
  41fea4:	call   FWORD PTR [eax+0x66d061]
  41feaa:	data16 ins BYTE PTR es:[edi],dx
  41feac:	inc    eax
  41fead:	push   0x6f51735b
  41feb2:	jg     0x41ff30
  41feb4:	imul   esi,DWORD PTR [ebx+eiz*2+0x43],0x1a77476
  41febc:	lods   eax,DWORD PTR ds:[esi]
  41febd:	add    BYTE PTR [ecx+ebp*2],al
  41fec0:	imul   esp,DWORD PTR [esp+esi*8+0x68],0x6f
  41fec5:	jae    0x41fe7d
  41fec7:	aas    
  41fec8:	data16 ins BYTE PTR es:[edi],dx
  41feca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fecb:	inc    eax
  41fecc:	std    
  41fecd:	push   DWORD PTR [ebp-0x398c93fe]
  41fed3:	jae    0x41ff35
  41fed5:	ins    DWORD PTR es:[edi],dx
  41fed6:	mov    edx,0x3e68
  41fedb:	add    DWORD PTR [esi+0x69],eax
  41fede:	fcomp  QWORD PTR [ebp+0x4b]
  41fee1:	shr    BYTE PTR gs:[ebp+0x43],cl
  41fee5:	imul   ebx,esi,0xaf003e5d
  41feeb:	or     DWORD PTR [esi+0x69],eax
	...
  41ff1e:	add    BYTE PTR [eax],al
  41ff20:	fsubr  QWORD PTR [eax+eax*2+0x6c]
  41ff24:	fnsave [edi+0x62]
  41ff27:	add    dh,dh
  41ff29:	or     DWORD PTR [ebx+0x65],eax
  41ff2c:	xchg   esi,eax
  41ff2d:	push   esi
  41ff2e:	ins    BYTE PTR es:[edi],dx
  41ff2f:	fs xchg edi,eax
  41ff31:	jne    0x41ff95
  41ff33:	dec    eax
  41ff34:	fwait
  41ff35:	arpl   WORD PTR [ecx+0x6c],sp
  41ff38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff39:	dec    edx
  41ff3a:	std    
  41ff3b:	push   DWORD PTR [ecx+ecx*1+0x5b566543]
  41ff42:	bound  esi,QWORD PTR [edx+0x49]
  41ff45:	bound  ebp,QWORD PTR [esi+ebp*2+0x47]
  41ff49:	jno    0x41ff89
  41ff4b:	add    BYTE PTR [eax],dl
  41ff4d:	or     al,BYTE PTR [ebx+0x65]
  41ff50:	push   esi
  41ff51:	push   ebp
  41ff52:	ins    BYTE PTR es:[edi],dx
  41ff53:	arpl   WORD PTR [ebx-0x3],sp
  41ff56:	out    dx,eax
  41ff57:	bound  ebp,QWORD PTR [edx]
  41ff59:	je     0x41ff3e
  41ff5b:	ins    BYTE PTR es:[edi],dx
  41ff5c:	and    bl,BYTE PTR [esi+0x1]
  41ff5f:	je     0x41ffc3
  41ff61:	sub    esp,edi
  41ff63:	jae    0x41ff95
  41ff65:	jne    0x41ff59
  41ff67:	jae    0x41ffaf
  41ff69:	jno    0x41ff37
  41ff6b:	ins    DWORD PTR es:[edi],dx
  41ff6c:	cmp    eax,0x62a0015b
  41ff71:	stos   DWORD PTR es:[edi],eax
  41ff72:	call   0xeb870bea
  41ff77:	arpl   WORD PTR [ebx+ebx*2],cx
  41ff7a:	repnz inc ebx
  41ff7c:	or     dh,BYTE PTR [eax+0x431760e8]
  41ff82:	out    dx,eax
  41ff83:	jbe    0x41ff85
	...
  41ffb5:	add    BYTE PTR [edx],ah
  41ffb7:	pop    esi
  41ffb8:	add    DWORD PTR [ebp+0x62],ecx
  41ffbb:	stos   DWORD PTR es:[edi],eax
  41ffbc:	call   0xecd21334
  41ffc1:	jne    0x41ffc5
  41ffc3:	call   0x66e3:0x8af14fe8
  41ffca:	iret   
  41ffcb:	mov    edx,edx
  41ffcd:	jae    0x41ffa0
  41ffcf:	xchg   ebp,eax
  41ffd0:	jmp    0x420036
  41ffd2:	mov    ds:0x617a015e,al
  41ffd7:	(bad)
  41ffdb:	stc    
  41ffdc:	out    dx,al
  41ffdd:	jno    0x41ff9d
  41ffdf:	fdivr  st(7),st
  41ffe1:	inc    ebx
  41ffe2:	mov    edx,0xaf60e4d0
  41ffe7:	retf   
  41ffe8:	icebp  
  41ffe9:	jbe    0x41ff8d
  41ffeb:	pop    esi
  41ffec:	add    DWORD PTR [ebx],edx
  41ffee:	pusha  
  41ffef:	(bad)  
  41fff1:	jae    0x41ff84
  41fff3:	mov    edi,0x5ea26fec
  41fff8:	add    DWORD PTR [edx+eiz*2+0x2b],ecx
  41fffc:	in     eax,0x73
  41fffe:	xchg   ebx,eax
  41ffff:	add    eax,0xe676eb19
  420004:	adc    ah,bh
  420006:	xchg   esp,eax
  420007:	test   DWORD PTR ds:0x3e145e6,0xfae841d1
  420011:	jmp    0xea39:0xe32ce33f
  420018:	stc    
  420019:	ret    0x0
	...
  42004c:	mov    esp,0x1e032073
  420051:	jmp    0xe2d4:0xde32d3da
  420058:	xor    dl,ch
  42005a:	mov    dh,0xf1
  42005c:	por    mm7,QWORD PTR [edi-0x2b41fe11]
  420063:	test   DWORD PTR [ebp+0x5],0xea1e043d
  42006a:	mov    edx,0xb8f6f1c0
  42006f:	out    0x6,al
  420071:	stc    
  420072:	stos   BYTE PTR es:[edi],al
  420073:	jmp    0xf6f7:0xf789e9f2
  42007a:	pop    edx
  42007c:	pop    esp
  42007d:	jae    0x42006c
  42007f:	add    bh,al
  420081:	idiv   BYTE PTR [edx-0xf]
  420084:	mov    eax,0x44d48ce8
  420089:	jae    0x42006f
  42008b:	add    DWORD PTR [eax-0x42088508],ebp
  420091:	(bad)  
  420092:	pop    edi
  420093:	clc    
  420094:	rcr    ecx,0x4d
  420097:	aad    0xbd
  420099:	jmp    0xe4c6c1e9
  42009e:	pop    eax
  42009f:	add    al,0xe8
  4200a1:	add    al,0x2e
  4200a3:	out    0x90,eax
  4200a5:	(bad)  [edi-0x1f]
  4200a8:	jnp    0x420070
  4200aa:	inc    DWORD PTR [ebp-0xc]
  4200ad:	loopne 0x420122
  4200af:	jmp    0x4200b4
	...
  4200e0:	add    BYTE PTR [eax],al
  4200e2:	pusha  
  4200e3:	lods   al,BYTE PTR ds:[esi]
  4200e4:	add    bh,BYTE PTR [edx]
  4200e6:	repz out 0x62,eax
  4200e9:	sbb    DWORD PTR [edi+0x37],ebx
  4200ec:	jmp    FWORD PTR ds:0xfe4af6c4
  4200f2:	mov    esp,0xa50c6bf7
  4200f7:	jmp    0x420164
  4200f9:	add    al,0x95
  4200fb:	shr    DWORD PTR [edx+0xc],cl
  4200fe:	mov    al,ds:0x61c1fd72
  420103:	enter  0xdd62,0x9c
  420107:	shl    DWORD PTR [eax-0x2b],cl
  42010a:	popf   
  42010b:	hlt    
  42010c:	jno    0x4200d4
  42010e:	xchg   edx,eax
  42010f:	jb     0x42010e
  420111:	mov    al,0x60
  420113:	les    esi,FWORD PTR [ecx-0x34]
  420116:	xor    esi,0xe1779562
  42011c:	imul   eax,ecx,0xffffff85
  42011f:	fisubr WORD PTR [edi-0x6]
  420122:	xor    dl,ah
  420124:	ins    DWORD PTR es:[edi],dx
  420125:	mov    BYTE PTR [eax-0xb],dh
  420128:	mov    gs,WORD PTR [si+0x72]
  42012c:	std    
  42012d:	int3   
  42012e:	(bad)  
  42012f:	aad    0x71
  420131:	jle    0x420176
  420133:	out    0x70,eax
  420135:	jp     0x4200ca
  420137:	aaa    
  420138:	inc    esi
  420139:	nop
  42013a:	push   edx
  42013b:	cmc    
  42013c:	jae    0x420127
  42013e:	pusha  
  42013f:	or     eax,0xe7309e02
  420144:	ins    DWORD PTR es:[edi],dx
  420145:	cmp    DWORD PTR [eax],eax
	...
  420177:	add    BYTE PTR ds:0x2c4460e1,dh
  42017d:	cmc    
  42017e:	dec    DWORD PTR ds:0x3e71d565
  420184:	cld    
  420185:	out    0x70,al
  420187:	add    BYTE PTR [ecx+0x3a],cl
  42018a:	xor    cl,BYTE PTR [esi-0x61]
  42018d:	jno    0x420200
  42018f:	add    BYTE PTR ds:0x57434c08,ch
  420195:	push   0x7b4e536d
  42019a:	data16 outs dx,BYTE PTR ds:[esi]
  42019c:	pop    ebp
  42019d:	dec    eax
  42019e:	std    
  42019f:	call   DWORD PTR [ecx+0x9]
  4201a2:	inc    ecx
  4201a3:	js     0x420208
  4201a5:	jne    0x4201f4
  4201a7:	jb     0x42021e
  4201a9:	push   0x62
  4201ab:	jae    0x420176
  4201ad:	add    eax,0x645902ad
  4201b2:	jno    0x420209
  4201b4:	mov    ah,0x5d
  4201b6:	pop    esi
  4201b7:	outs   dx,BYTE PTR ds:[esi]
  4201b8:	sahf   
  4201b9:	imul   esp,DWORD PTR [edx+0x64],0x65606dff
  4201c0:	mov    edx,0xd46f6661
  4201c5:	inc    ebx
  4201c6:	data16 ins BYTE PTR es:[edi],dx
  4201c8:	into   
  4201c9:	outs   dx,DWORD PTR fs:[esi]
  4201cb:	add    BYTE PTR [ecx-0x5091909c],dh
  4201d1:	imul   esi,DWORD PTR [eax],0x69517432
  4201d7:	ins    BYTE PTR es:[edi],dx
  4201d8:	jp     0x4201df
  4201da:	xchg   DWORD PTR [eax],eax
	...
  42020c:	add    BYTE PTR [eax],al
  42020e:	mov    ecx,0xfe616277
  420213:	gs push eax
  420215:	je     0x42020f
  420217:	gs pop esi
  420219:	ins    DWORD PTR es:[edi],dx
  42021a:	adc    eax,0xd647455f
  42021f:	pop    ebx
  420220:	pop    edi
  420221:	popa   
  420222:	out    0x4,al
  420224:	xchg   ebx,eax
  420225:	add    ch,bh
  420227:	gs jno 0x420272
  42022a:	jge    0x420289
  42022c:	ins    BYTE PTR es:[edi],dx
  42022d:	bound  ebx,QWORD PTR [ebx+0x6372435d]
  420233:	(bad)  
  420234:	out    0x50,al
  420236:	(bad)  
  420237:	int3   
  420238:	ficomp WORD PTR [esi+0x7e]
  42023b:	pop    esi
  42023c:	add    DWORD PTR [esi],ecx
  42023e:	arpl   WORD PTR [ebx],bx
  420240:	jmp    0xe3037385
  420245:	jae    0x4202c5
  420247:	daa    
  420248:	out    dx,eax
  420249:	xchg   WORD PTR [esi+0x1],bx
  42024d:	pusha  
  42024e:	arpl   WORD PTR [ebx],bx
  420250:	jmp    0xed4d44a8
  420255:	dec    edx
  420256:	ds jno 0x420218
  420259:	jno    0x4202a1
  42025b:	add    DWORD PTR [ecx*1+0x40e91b63],eax
  420262:	xor    DWORD PTR [ecx],eax
  420264:	jecxz  0x4202d9
  420266:	ds and eax,0x3d3770ea
  42026c:	out    0x60,eax
  42026e:	ds pop esi
  420270:	add    ecx,esi
	...
  4202a2:	add    BYTE PTR [eax],al
  4202a4:	arpl   WORD PTR [edi-0x4fd59d1b],sp
  4202aa:	in     al,dx
  4202ab:	jae    0x4202a7
  4202ad:	cmp    al,0xe5
  4202af:	or     WORD PTR [ecx+0x1],cx
  4202b3:	ins    DWORD PTR es:[edi],dx
  4202b4:	cmovno esi,DWORD PTR [esi]
  4202b7:	xor    al,BYTE PTR [ebp+0x4a]
  4202ba:	in     eax,0x6b
  4202bc:	arpl   WORD PTR [ecx-0x720f8afd],bp
  4202c2:	repz data16 int 0x92
  4202c6:	fistp  QWORD PTR [esi]
  4202c8:	arpl   WORD PTR [ecx-0x542e9d0a],bx
  4202ce:	xor    ebp,DWORD PTR [esi]
  4202d0:	mov    edi,0x3cffe582
  4202d5:	push   cs
  4202d6:	add    al,0x52
  4202d8:	mov    esi,0xc66fca87
  4202dd:	add    eax,0xeec1cd55
  4202e2:	and    edi,esp
  4202e4:	pop    ebp
  4202e5:	add    eax,0xeab103b1
  4202ea:	inc    ebp
  4202eb:	rcl    DWORD PTR [ecx-0x5104c716],cl
  4202f1:	out    0x4a,al
  4202f3:	out    dx,eax
  4202f4:	or     edx,0x6ff4c32e
  4202fa:	jbe    0x4202ff
  4202fc:	xchg   ecx,eax
  4202fd:	jmp    0xdf19:0xe078c50d
  420304:	sub    ebp,edx
  420306:	(bad)  
	...
  420338:	add    BYTE PTR [eax],al
  42033a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42033b:	add    eax,0xc047df39
  420340:	neg    dh
  420342:	ss mov esp,0x57dfb03
  420348:	stos   DWORD PTR es:[edi],eax
  420349:	add    edx,DWORD PTR [ecx]
  42034b:	jmp    0xccd3:0xfa3ebf05
  420352:	inc    ecx
  420353:	out    dx,al
  420354:	mov    ds:0x91055dfb,eax
  420359:	add    esi,DWORD PTR [ecx]
  42035b:	jmp    0xefc7:0xea12c4c5
  420362:	add    DWORD PTR [ebx+eax*8+0x4e053dfa],edi
  420369:	add    edx,DWORD PTR [ecx]
  42036b:	jmp    0xe2bc:0xf901d4c5
  420372:	clc    
  420373:	stc    
  420374:	cmp    DWORD PTR [esi+0x3e6c4d4],0x1e
  42037b:	add    eax,0xc8c7deb9
  420380:	xchg   esp,eax
  420381:	out    dx,al
  420382:	mov    ecx,0xb1e787d7
  420387:	call   0x3fa2ab8b
  42038c:	call   FWORD PTR [edx+0x594cea0d]
  420392:	add    al,0xe1
  420394:	inc    eax
  420395:	push   esp
  420396:	adc    eax,0x134762f5
  42039b:	aam    0x70
  42039d:	inc    esp
	...
  4203ce:	add    BYTE PTR [eax],al
  4203d0:	adc    eax,0x61e2fd6f
  4203d5:	enter  0x3562,0x2c
  4203d9:	mul    BYTE PTR [edx+0x3b]
  4203dc:	sub    eax,edx
  4203de:	push   0x44
  4203e0:	and    BYTE PTR [edi-0x3],ch
  4203e3:	or     BYTE PTR [ebx],al
  4203e5:	stc    
  4203e6:	pop    esi
  4203e7:	sbb    eax,ecx
  4203e9:	xor    eax,0xdab4c732
  4203ee:	imul   ebp,ecx,0x60
  4203f1:	push   esi
  4203f2:	add    BYTE PTR [edx],bl
  4203f4:	mov    bh,0xe3
  4203f6:	imul   ecx,DWORD PTR ds:0xa62f6fc,0xffffffc4
  4203fd:	repnz bound ebp,QWORD PTR [eax]
  420400:	addr16 hlt 
  420402:	addr16 int3 
  420404:	mov    esp,0x491b30da
  420409:	jmp    0xf6a2c979
  42040e:	call   FWORD PTR [edi-0x449d0d86]
  420414:	jp     0x4203f9
  420416:	jae    0x4203c2
  420418:	jbe    0x4203e9
  42041a:	pusha  
  42041b:	ret    0xf4a5
  42041e:	imul   ebp,DWORD PTR [eax-0x500013a0],0x7a
  420425:	repnz bound ebx,QWORD PTR [ebx-0x558c1cb6]
  42042c:	dec    esi
  42042d:	jecxz  0x42048d
  42042f:	xchg   ebp,eax
  420430:	sub    eax,0x71d3
	...
  420465:	add    dh,ch
  420467:	inc    edx
  420468:	std    
  420469:	push   DWORD PTR [ebp-0x239694a5]
  42046f:	dec    esi
  420470:	jno    0x4204a0
  420472:	out    0x65,al
  420474:	imul   eax,DWORD PTR [eax],0x744f092f
  42047a:	mov    eax,0x43727152
  42047f:	dec    eax
  420480:	std    
  420481:	(bad)  
  420482:	cli    
  420483:	or     BYTE PTR [edi+0x74],cl
  420486:	dec    eax
  420487:	push   ebx
  420488:	inc    eax
  420489:	push   0x3e4038
  42048e:	push   ss
  42048f:	or     DWORD PTR [edi+0x74],ecx
  420492:	sub    BYTE PTR [ebp+0x6c],dl
  420495:	dec    ecx
  420496:	dec    esp
  420497:	jne    0x4204d7
  420499:	add    dh,cl
  42049b:	or     BYTE PTR [edi+0x74],cl
  42049e:	js     0x4204f2
  4204a0:	jno    0x420514
  4204a2:	jnp    0x4204ad
  4204a4:	jmp    0x6f43:0x6f756900
  4204ab:	jns    0x4204f8
  4204ad:	dec    ecx
  4204ae:	mov    ecx,DWORD PTR [ecx]
  4204b0:	push   cs
  4204b1:	add    DWORD PTR [ecx+0x75],ecx
  4204b4:	outs   dx,DWORD PTR ds:[esi]
  4204b5:	push   ebx
  4204b6:	xchg   BYTE PTR [ebx+0x46],dh
  4204b9:	push   edi
  4204ba:	mov    al,BYTE PTR [ecx]
  4204bc:	outs   dx,DWORD PTR ds:[esi]
  4204bd:	push   0x705e5e9e
  4204c2:	mov    ds:0xae6c6427,eax
  4204c7:	add    DWORD PTR [esi],esi
	...
  4204f9:	add    BYTE PTR [eax],al
  4204fb:	add    BYTE PTR [ebx-0x328b9d99],dl
  420501:	push   0x1a86461
  420506:	sub    al,BYTE PTR [eax]
  420508:	aad    0x64
  42050a:	jno    0x420574
  42050c:	in     eax,dx
  42050d:	ja     0x420580
  42050f:	bound  esp,QWORD PTR [ebx-0x6b]
  420512:	jecxz  0x420572
  420514:	mov    esi,0x63470181
  420519:	out    dx,eax
  42051a:	in     eax,0x60
  42051c:	enter  0xed81,0xff
  420520:	xor    al,0x3c
  420522:	add    DWORD PTR [ecx-0x44],esp
  420525:	in     al,dx
  420526:	loop   0x42058a
  420528:	ror    dl,0x3
  42052b:	arpl   WORD PTR es:[edi-0x466f9319],di
  420532:	lock ins BYTE PTR es:[edi],dx
  420534:	add    bh,0xde
  420537:	jae    0x42059c
  420539:	sbb    al,BYTE PTR [ecx+esi*2]
  42053c:	xchg   BYTE PTR [edi+ebx*8+0x41ff4ff],bh
  420543:	jno    0x4204cb
  420545:	sub    bl,bh
  420547:	pusha  
  420548:	outs   dx,DWORD PTR ds:[esi]
  420549:	pop    esi
  42054a:	add    DWORD PTR [esi],edi
  42054c:	arpl   WORD PTR [eax],dx
  42054e:	fbld   TBYTE PTR [eax+0x4d]
  420551:	pop    esi
  420552:	add    DWORD PTR [ebp+0x63],eax
  420555:	pandn  mm6,QWORD PTR [ebx+0x50]
  420559:	adc    esp,ecx
  42055b:	push   0xffed6e4c
	...
  420590:	add    BYTE PTR [eax],al
  420592:	mov    ah,0x3d
  420594:	add    DWORD PTR [ebp+0x10],edx
  420597:	sbb    eax,0x504273d1
  42059c:	in     eax,dx
  42059d:	jb     0x4205b2
  42059f:	pop    esi
  4205a0:	add    DWORD PTR [ebp+0x10],esi
  4205a3:	inc    ebx
  4205a4:	loop   0x42060e
  4205a6:	push   eax
  4205a7:	adc    BYTE PTR [esi],ah
  4205a9:	not    DWORD PTR fs:[ecx+0x1]
  4205ad:	dec    ebx
  4205ae:	arpl   WORD PTR [edx-0x7700a11a],bx
  4205b4:	(bad)
  4205ba:	std    
  4205bb:	add    al,0x90
  4205bd:	out    0xc1,eax
  4205bf:	(bad)  
  4205c0:	out    0x3,al
  4205c2:	mov    ah,0x5
  4205c4:	mov    esp,0x87dcb8e5
  4205c9:	fbstp  TBYTE PTR [ecx-0x530e7408]
  4205cf:	test   DWORD PTR [ebp-0x74264223],0x83f8b003
  4205d9:	icebp  
  4205da:	rcr    ebx,0x5c
  4205dd:	es xchg ecx,ebx
  4205e0:	dec    edx
  4205e1:	add    al,0x63
  4205e3:	add    eax,0x56303e7
  4205e8:	out    0x3,eax
  4205ea:	arpl   WORD PTR ds:0x56303e7,ax
  4205f0:	out    0x3,eax
  4205f2:	arpl   WORD PTR ds:0x3e7,ax
	...
  420628:	arpl   WORD PTR ds:0x56303e7,ax
  42062e:	out    0x3,eax
  420630:	arpl   WORD PTR ds:0x56303e7,ax
  420636:	out    0x3,eax
  420638:	arpl   WORD PTR ds:0x56303e7,ax
  42063e:	out    0x3,eax
  420640:	arpl   WORD PTR ds:0x56303e7,ax
  420646:	out    0x3,eax
  420648:	arpl   WORD PTR ds:0x56303e7,ax
  42064e:	out    0x3,eax
  420650:	arpl   WORD PTR ds:0x56303e7,ax
  420656:	out    0x3,eax
  420658:	arpl   WORD PTR ds:0x56303e7,ax
  42065e:	out    0x3,eax
  420660:	arpl   WORD PTR ds:0x56303e7,ax
  420666:	add    cl,ch
  420668:	pusha  
  420669:	add    eax,0x560e900
  42066e:	add    cl,ch
  420670:	pusha  
  420671:	add    eax,0x560e900
  420676:	add    cl,ch
  420678:	pusha  
  420679:	add    eax,0x560e900
  42067e:	add    cl,ch
  420680:	pusha  
  420681:	add    eax,0x560e900
  420686:	add    cl,ch
  420688:	pusha  
  420689:	add    eax,0xe900
	...
  4206be:	pusha  
  4206bf:	add    eax,0x560e900
  4206c4:	add    cl,ch
  4206c6:	pusha  
  4206c7:	add    eax,0x560e900
  4206cc:	add    cl,ch
  4206ce:	pusha  
  4206cf:	add    eax,0x560e900
  4206d4:	add    cl,ch
  4206d6:	pusha  
  4206d7:	add    eax,0x560e900
  4206dc:	add    cl,ch
  4206de:	pusha  
  4206df:	add    eax,0x560e900
  4206e4:	add    cl,ch
  4206e6:	pusha  
  4206e7:	add    eax,0x560e900
  4206ec:	add    cl,ch
  4206ee:	pusha  
  4206ef:	add    eax,0x560e900
  4206f4:	add    cl,ch
  4206f6:	pusha  
  4206f7:	add    eax,0x560e900
  4206fc:	add    cl,ch
  4206fe:	pusha  
  4206ff:	add    eax,0x560e900
  420704:	add    cl,ch
  420706:	pusha  
  420707:	add    eax,0x560e900
  42070c:	add    cl,ch
  42070e:	pusha  
  42070f:	add    eax,0x68a0000
  420714:	add    BYTE PTR [eax],al
  420716:	mov    al,BYTE PTR [esi]
  420718:	add    BYTE PTR [eax],al
  42071a:	jp     0x420722
  42071c:	add    BYTE PTR [eax],al
  42071e:	jp     0x420726
	...
  420754:	dec    edx
  420755:	push   es
  420756:	add    BYTE PTR [eax],al
  420758:	dec    edx
  420759:	push   es
  42075a:	add    BYTE PTR [eax],al
  42075c:	pop    ds
  42075d:	cmp    esp,ecx
  42075f:	int3   
  420760:	pop    ss
  420761:	cmp    esp,ecx
  420763:	int3   
  420764:	xchg   esi,eax
  420765:	jle    0x420753
  420767:	push   ecx
  420768:	call   0x5bcc0f2c
  42076d:	jge    0x4207ba
  42076f:	(bad)  
  420770:	fcomp  DWORD PTR [edi+0x5b]
  420773:	ret    
  420774:	mov    dh,0x7e
  420776:	in     al,dx
  420777:	push   ecx
  420778:	lods   eax,DWORD PTR ds:[esi]
  420779:	shl    BYTE PTR [eax],cl
  42077b:	leave  
  42077c:	xchg   DWORD PTR [esi+0x6f],edi
  42077f:	xor    al,bl
  420781:	repnz or ecx,DWORD PTR [ebx+0x46890975]
  420788:	imul   edi,DWORD PTR [ebx+eax*2-0x4],0xffffffd8
  42078d:	jmp    0x6b3d:0x852d8b1f
  420794:	push   edi
  420795:	add    al,BYTE PTR [eax+0x1f1283f]
  42079b:	jmp    0x420757
  42079d:	leave  
  42079e:	pop    ebp
  42079f:	mov    edi,DWORD PTR [esi+0x16ccc0c7]
  4207a5:	jle    0x420793
  4207a7:	add    edi,0x20
  4207aa:	mov    DWORD PTR [ebp+0x5b],eax
  4207ad:	jl     0x4207f2
  4207af:	loopne 0x420789
  4207b1:	mov    bh,0xdf
  4207b3:	mov    esi,DWORD PTR [esi]
  4207b5:	add    DWORD PTR gs:[ecx+0x0],edx
	...
  4207e9:	add    BYTE PTR [edi+0x7c],dl
  4207ec:	push   ebx
  4207ed:	in     al,0xd8
  4207ef:	mov    edi,0xed1b8be3
  4207f4:	add    BYTE PTR [ebp+0x6b],cl
  4207f7:	jl     0x420844
  4207f9:	clc    
  4207fa:	call   0x21cdffce
  4207ff:	and    DWORD PTR [ecx],eax
  420801:	inc    ebp
  420802:	pop    ebx
  420803:	jl     0x420848
  420805:	call   0x8c39c2f2
  42080a:	mov    dl,0x25
  42080c:	add    DWORD PTR [ebp+0x5b],edx
  42080f:	jle    0x420864
  420811:	lock fadd st,st(2)
  420814:	test   DWORD PTR [ebx+0x4d0109ab],0xfc4b7e6b
  42081e:	and    al,0xc3
  420820:	repz add BYTE PTR [ebx+0x5],ah
  420824:	add    bl,ch
  420826:	push   0x7c
  420828:	push   ebx
  420829:	hlt    
  42082a:	loopne 0x42086f
  42082c:	dec    DWORD PTR [eax+0x458971b6]
  420832:	or     edi,DWORD PTR [ebp+0x4b]
  420835:	hlt    
  420836:	cmp    BYTE PTR [ebp+0x7cab7317],bh
  42083c:	push   ebx
  42083d:	lock fadd DWORD PTR [ebx]
  420840:	add    DWORD PTR [ebp+0x5b],eax
  420843:	jle    0x420888
  420845:	fmul   QWORD PTR [ecx-0x9]
  420848:	lods   al,BYTE PTR ds:[si]
  42084a:	popa   
  42084b:	(bad)  
	...
  42087e:	add    BYTE PTR [eax],al
  420880:	push   ds
  420881:	dec    ecx
  420882:	dec    edi
  420883:	call   0x420ebb
  420888:	loopne 0x4208cb
  42088a:	or     al,0x85
  42088c:	mov    ds:0x168b18f2,eax
  420891:	jno    0x42081c
  420893:	inc    ebp
  420894:	mov    ebx,0x330cb4f8
  420899:	jle    0x4208e6
  42089b:	in     al,dx
  42089c:	call   0x26cdf473
  4208a1:	imul   ecx,DWORD PTR [ecx+0x4304f304],0x88fa8808
  4208ab:	dec    ebp
  4208ac:	jae    0x420832
  4208ae:	mov    edi,0xefbada04
  4208b3:	jmp    0x420874
  4208b5:	xor    al,0xc0
  4208b7:	mov    eax,DWORD PTR [esi-0x36]
  4208ba:	ror    ah,0x27
  4208bd:	cmp    esp,ecx
  4208bf:	int3   
  4208c0:	pop    ds
  4208c1:	cmp    esp,ecx
  4208c3:	int3   
  4208c4:	pop    ss
  4208c5:	cmp    esp,ecx
  4208c7:	int3   
  4208c8:	xchg   esi,eax
  4208c9:	jl     0x4208b7
  4208cb:	add    DWORD PTR [edi+0xd],0xffffffe8
  4208cf:	add    eax,0x89fd682c
  4208d4:	sahf   
  4208d5:	pop    ebp
  4208d6:	mov    DWORD PTR [ebp+0xb],eax
  4208d9:	aad    0xe7
  4208db:	sub    DWORD PTR [eax+ebp*2],edx
  4208de:	std    
  4208df:	and    DWORD PTR [edi],0x1
  4208e2:	mov    eax,ds:0xb4
	...
  420913:	add    BYTE PTR [eax],al
  420915:	add    BYTE PTR [esi-0x4098003a],ch
  42091b:	add    al,BYTE PTR [eax+0x0]
  42091e:	call   0xec93f0dc
  420923:	adc    DWORD PTR [ebp+edx*2-0x475efa5e],esi
  42092a:	ss (bad) 
  42092c:	jmp    FWORD PTR [ecx+0x63]
  42092f:	(bad)  
  420931:	addr16 lahf 
  420933:	add    al,BYTE PTR [eax+0x0]
  420936:	les    edx,FWORD PTR [ecx]
  420938:	mov    eax,0x87052255
  42093d:	inc    ebp
  42093e:	retf   
  42093f:	aas    
  420940:	inc    ebx
  420941:	cld    
  420942:	arpl   WORD PTR ds:0xfdb80000,ax
  420948:	mov    BYTE PTR [ebp-0x61],dl
  42094b:	add    edx,0x1
  42094e:	jmp    0x869:0xe83fbd1
  420955:	jae    0x420999
  420957:	jl     0x42099c
  420959:	cld    
  42095a:	call   0x61ce8c57
  42095f:	vmovmskps ebx,ymm0
  420963:	shl    edi,1
  420965:	push   edx
  420966:	adc    DWORD PTR fs:[ebp+edx*2+0x4d8905a2],esi
  42096e:	push   edi
  42096f:	jge    0x420975
  420971:	lea    edx,[edi]
  420973:	sar    DWORD PTR [esi],1
  420975:	add    BYTE PTR [eax],bh
  420977:	push   esi
  420978:	mov    ebp,esp
	...
  4209aa:	add    BYTE PTR [eax],al
  4209ac:	sahf   
  4209ad:	inc    edx
  4209ae:	int3   
  4209af:	int3   
  4209b0:	daa    
  4209b1:	cmp    cl,ah
  4209b3:	int3   
  4209b4:	pop    ds
  4209b5:	cmp    cl,ah
  4209b7:	int3   
  4209b8:	pop    ss
  4209b9:	cmp    cl,ah
  4209bb:	int3   
  4209bc:	mov    dh,0x7a
  4209be:	in     al,dx
  4209bf:	mov    eax,ds:0x3ecf73
  4209c4:	dec    ebp
  4209c5:	jp     0x420a07
  4209c7:	xor    al,bl
  4209c9:	mov    eax,0xbdea3e07
  4209ce:	pop    es
  4209cf:	pop    ebp
  4209d0:	and    BYTE PTR [edx],bh
  4209d2:	int3   
  4209d3:	int3   
  4209d4:	pop    ds
  4209d5:	cmp    cl,ah
  4209d7:	int3   
  4209d8:	pop    ss
  4209d9:	cmp    cl,ah
  4209db:	int3   
  4209dc:	ss jp  0x4209cb
  4209df:	mov    ebx,DWORD PTR [esi]
  4209e1:	stc    
  4209e2:	dec    edi
  4209e3:	mov    ebx,DWORD PTR [esi]
  4209e5:	std    
  4209e6:	dec    esi
  4209e7:	jmp    FWORD PTR [esi-0x4f]
  4209ea:	push   ebx
  4209eb:	inc    ecx
  4209ec:	arpl   ax,cx
  4209ee:	ror    ah,0xa7
  4209f1:	cmp    esp,ecx
  4209f3:	int3   
  4209f4:	lahf   
  4209f5:	cmp    esp,ecx
  4209f7:	int3   
  4209f8:	xchg   edi,eax
  4209f9:	cmp    esp,ecx
  4209fb:	int3   
  4209fc:	ss jp  0x4209eb
  4209ff:	add    DWORD PTR [edi-0x6ff9603],0x4
  420a06:	push   0xffc561dc
  420a0b:	(bad)  
  420a0c:	push   esi
  420a0d:	lods   eax,DWORD PTR ds:[esi]
  420a0e:	push   ebx
  420a0f:	inc    ecx
	...
  420a40:	add    BYTE PTR [eax],al
  420a42:	arpl   WORD PTR [ebx+eax*2-0x8],di
  420a46:	sti    
  420a47:	pop    esp
  420a48:	add    al,BYTE PTR [eax+0x63]
  420a4b:	jp     0x420a90
  420a4d:	clc    
  420a4e:	mov    bl,0x5d
  420a50:	mov    edx,0x816654ff
  420a55:	les    ebx,FWORD PTR [ebx+0x7c]
  420a58:	inc    ebx
  420a59:	cld    
  420a5a:	fdiv   DWORD PTR [edi-0x3017aef1]
  420a60:	or     edx,DWORD PTR [edx-0x18]
  420a63:	mov    edi,0xd02c5007
  420a68:	sti    
  420a69:	mov    edi,DWORD PTR [esi]
  420a6b:	enter  0xccc0,0xb6
  420a6f:	jp     0x420a5d
  420a71:	push   ecx
  420a72:	sbb    al,0xc0
  420a74:	sti    
  420a75:	add    BYTE PTR [ebx+0x5],ah
  420a78:	add    bl,ch
  420a7a:	pop    edx
  420a7b:	jp     0x420ac0
  420a7d:	cld    
  420a7e:	loopne 0x420ac4
  420a80:	dec    DWORD PTR [eax+0x4d89699e]
  420a86:	out    dx,eax
  420a87:	sub    DWORD PTR [ebx+0x10],ecx
  420a8a:	jo     0x420a92
  420a8c:	mov    DWORD PTR [ebp+0x6b],edx
  420a8f:	add    dl,BYTE PTR [ebx-0x4]
  420a92:	fs scas eax,DWORD PTR es:[edi]
  420a94:	add    cl,BYTE PTR [ebx+0x4d00f91e]
  420a9a:	(bad)  
  420a9b:	cmc    
  420a9c:	mov    ch,0x11
  420a9e:	js     0x420ae3
  420aa0:	je     0x420aa9
  420aa2:	sti    
  420aa3:	add    eax,DWORD PTR [eax]
	...
  420ad5:	add    BYTE PTR [eax],al
  420ad7:	add    BYTE PTR [ebx+0x5a],ah
  420ada:	add    al,0xeb
  420adc:	xchg   ebx,eax
  420add:	xor    eax,eax
  420adf:	mov    eax,DWORD PTR [esi-0x58333f39]
  420ae5:	cmp    ah,cl
  420ae7:	int3   
  420ae8:	lahf   
  420ae9:	cmp    ah,cl
  420aeb:	int3   
  420aec:	xchg   edi,eax
  420aed:	cmp    ah,cl
  420aef:	int3   
  420af0:	push   ss
  420af1:	jp     0x420adf
  420af3:	mov    ecx,0x55b
  420af8:	pop    es
  420af9:	jp     0x420b02
  420afb:	mov    DWORD PTR [esi+0x15],edx
  420afe:	push   esi
  420aff:	inc    ecx
  420b00:	arpl   dx,ax
  420b02:	ror    ah,0x27
  420b05:	push   edx
  420b06:	int3   
  420b07:	int3   
  420b08:	pop    ds
  420b09:	push   edx
  420b0a:	int3   
  420b0b:	int3   
  420b0c:	pop    ss
  420b0d:	push   edx
  420b0e:	int3   
  420b0f:	int3   
  420b10:	xchg   esi,eax
  420b11:	nop
  420b12:	in     al,dx
  420b13:	add    DWORD PTR [edi-0xa],0xffffff88
  420b17:	inc    ebp
  420b18:	pop    ebx
  420b19:	mov    BYTE PTR [eax+0x4],bh
  420b1c:	arpl   WORD PTR [esp+eax*4],dx
  420b1f:	mov    BYTE PTR [ebx+0x5],ah
  420b22:	add    BYTE PTR [ebx+0x51890da6],cl
  420b28:	addr16 mov dl,ch
  420b2b:	or     BYTE PTR [edx],dh
  420b2d:	jo     0x420ab6
  420b2f:	push   ebp
  420b30:	not    DWORD PTR [eax+0x45e00843]
  420b36:	or     BYTE PTR [ecx+0x45c555a6],cl
	...
  420b6c:	add    BYTE PTR [eax],al
  420b6e:	out    0x5,eax
  420b70:	add    BYTE PTR [eax],al
  420b72:	arpl   WORD PTR [eax+0x7],si
  420b75:	mov    esp,DWORD PTR [esi]
  420b77:	popa   
  420b78:	add    ecx,0xfc4b8e62
  420b7e:	fdivr  DWORD PTR [edx+0x59163bfb]
  420b84:	jno    0x420bcc
  420b86:	call   0x1ece0755
  420b8b:	push   ebp
  420b8c:	or     eax,0xbec64fb7
  420b91:	cli    
  420b92:	outs   dx,DWORD PTR ds:[esi]
  420b93:	mov    dl,bh
  420b95:	add    ecx,DWORD PTR [esi]
  420b97:	pop    ss
  420b98:	mov    DWORD PTR [ebp-0x71],eax
  420b9b:	nop
  420b9c:	dec    ebx
  420b9d:	lock push esp
  420b9f:	pushf  
  420ba0:	adc    al,0x41
  420ba2:	loop   0x420c0b
  420ba4:	std    
  420ba5:	packsswb mm0,QWORD PTR ds:0x906b5587
  420bac:	inc    ebx
  420bad:	or     al,bl
  420baf:	ror    BYTE PTR [ebx],cl
  420bb1:	add    ebp,DWORD PTR [ebx-0x70]
  420bb4:	push   ebx
  420bb5:	clc    
  420bb6:	call   0xa6451ac3
  420bbb:	cmc    
  420bbc:	mov    BYTE PTR [ebp+0x5b],cl
  420bbf:	nop
  420bc0:	push   ebx
  420bc1:	or     al,0x60
  420bc3:	test   BYTE PTR [eax+0x48e3b4d],0xa
  420bca:	cmp    BYTE PTR [esi-0x6fa4aa77],ch
  420bd0:	inc    ebx
  420bd1:	or     BYTE PTR [eax],al
	...
  420c03:	add    BYTE PTR [eax-0x39],ah
  420c06:	add    ecx,DWORD PTR [ecx+0x6be70d9e]
  420c0c:	or     al,0x64
  420c0e:	std    
  420c0f:	mov    edi,esi
  420c11:	rol    eax,0xcc
  420c14:	xchg   esi,eax
  420c15:	nop
  420c16:	in     al,dx
  420c17:	add    DWORD PTR [edi],0x29
  420c1a:	mov    DWORD PTR [ebp+0x5b],eax
  420c1d:	mov    es,WORD PTR [ebx-0x1c]
  420c20:	fcom   st(1)
  420c22:	jecxz  0x420baf
  420c24:	imul   eax,DWORD PTR ss:[ecx],0x538e9751
  420c2b:	call   0x8c29d608
  420c30:	fild   DWORD PTR [eax+eax*1+0x4b8e6300]
  420c37:	lock loopne 0x420c1b
  420c3a:	out    dx,eax
  420c3b:	add    BYTE PTR [ecx+ecx*4-0x7],bl
  420c3f:	add    BYTE PTR [ebx+0x5],ah
  420c42:	mov    DWORD PTR [ebp+0x6b],edx
  420c45:	or     BYTE PTR [ebx-0x10],dl
  420c48:	jmp    0x8165:0x268bdfb9
  420c4f:	js     0x420cc4
  420c51:	add    eax,0x486840d
  420c56:	add    BYTE PTR [eax],al
  420c58:	or     DWORD PTR ds:0xd1d8006a,eax
  420c5e:	fisttp WORD PTR [ebx+0x51010d0e]
  420c64:	outs   dx,DWORD PTR ds:[esi]
  420c65:	mov    bh,0xfc
  420c67:	adc    eax,0x0
	...
  420c98:	add    BYTE PTR [eax],al
  420c9a:	sbb    edi,DWORD PTR [ecx-0x3725ffc2]
  420ca0:	sti    
  420ca1:	mov    ebx,DWORD PTR [esi+0x63388165]
  420ca7:	fst    DWORD PTR [esi]
  420ca9:	mov    esp,DWORD PTR [esi+0x5b558965]
  420caf:	push   es
  420cb0:	jns    0x45cb7e44
  420cb6:	add    ecx,DWORD PTR [edi-0x329ff7b5]
  420cbc:	jns    0x182b6660
  420cc2:	fdivr  DWORD PTR [eax+0xda68bdf]
  420cc8:	add    DWORD PTR [edx+0x53],eax
  420ccb:	mov    WORD PTR [ebx-0xc],es
  420cce:	fcom   st(0)
  420cd0:	fisttp WORD PTR [ebx+0x11010d8e]
  420cd6:	jmp    0x5d:0x1ec7ebb8
  420cdd:	add    BYTE PTR [ebx+0x5],ah
  420ce0:	mov    DWORD PTR [ebp-0x3d],eax
  420ce3:	xchg   BYTE PTR [eax+0x10],bh
  420ce6:	arpl   cx,bx
  420ce8:	or     al,0x8b
  420cea:	es cmp DWORD PTR gs:[ecx],0xc704d963
  420cf2:	push   ds
  420cf3:	pop    ebp
  420cf4:	(bad)  
  420cf5:	jmp    DWORD PTR [ebx+0x5]
  420cf8:	mov    DWORD PTR [ebp-0x71],edx
  420cfb:	xchg   BYTE PTR [edx],bh
	...
  420d2d:	add    BYTE PTR [eax],al
  420d2f:	add    BYTE PTR [edi],dl
  420d31:	in     al,0x88
  420d33:	inc    ebp
  420d34:	(bad)  
  420d35:	mov    cs,WORD PTR [eax]
  420d37:	add    DWORD PTR [edx-0x1cfffffb],0x168b1bd9
  420d41:	pop    ecx
  420d42:	mov    DWORD PTR [edx],eax
  420d44:	ds (bad) 
  420d46:	std    
  420d47:	(bad)  
  420d48:	fdiv   QWORD PTR [ebp-0x4ba8b278]
  420d4e:	out    0xb5,eax
  420d50:	dec    esi
  420d51:	(bad)  
  420d52:	std    
  420d53:	sbb    DWORD PTR [edi],0xd
  420d56:	xchg   DWORD PTR [ebp+0x1f],eax
  420d59:	outs   dx,BYTE PTR ds:[esi]
  420d5a:	sbb    al,0x8b
  420d5c:	mov    ds,WORD PTR [ecx-0x77]
  420d5f:	add    bl,al
  420d61:	iret   
  420d62:	pop    es
  420d63:	lea    ecx,[edi-0x17adfdf3]
  420d69:	(bad)  
  420d6a:	sti    
  420d6b:	push   eax
  420d6c:	or     edi,DWORD PTR [edx-0x5]
  420d6f:	dec    DWORD PTR [esi+eax*4]
  420d72:	les    ecx,FWORD PTR [eax]
  420d74:	fcmovb st,st(7)
  420d76:	fisttp DWORD PTR [ebx+0x558959ae]
  420d7c:	pop    ss
  420d7d:	mov    WORD PTR [edi],cs
  420d7f:	mov    esp,DWORD PTR [esi+0x5fc08159]
  420d85:	mov    WORD PTR [ebx-0xc],es
  420d88:	call   0xa2c5f95c
  420d8d:	or     BYTE PTR [edi-0x6a9240b3],al
  420d93:	mov    eax,DWORD PTR [eax]
	...
  420dc5:	add    BYTE PTR [esi],ch
  420dc7:	gs add edx,0xe0538c57
  420dce:	retf   0xfd12
  420dd1:	jmp    FWORD PTR [ebp+ecx*4+0x50a05de3]
  420dd8:	int3   
  420dd9:	int3   
  420dda:	ss mov gs,esp
  420ddd:	add    DWORD PTR [edi+0x61f0680c],0xffffffc5
  420de4:	(bad)  
  420de5:	(bad)  
  420de6:	outs   dx,BYTE PTR ds:[esi]
  420de7:	inc    ebp
  420de8:	push   ebx
  420de9:	inc    ecx
  420dea:	arpl   WORD PTR [ebx+eax*2+0x2610bf8],cx
  420df1:	inc    eax
  420df2:	arpl   WORD PTR [esi+0x6d13f843],cx
  420df8:	ds std 
  420dfa:	pop    esp
  420dfb:	popa   
  420dfc:	add    esp,0xfc438e6b
  420e02:	fcom   st(2)
  420e04:	sqrtps xmm3,xmm0
  420e07:	mov    edx,0xcae8520b
  420e0c:	pop    es
  420e0d:	push   eax
  420e0e:	xor    al,0xbb
  420e10:	sti    
  420e11:	mov    eax,DWORD PTR [esi-0x3d]
  420e14:	ror    ah,0x17
  420e17:	push   edx
  420e18:	int3   
  420e19:	int3   
  420e1a:	mov    dh,0x8c
  420e1c:	in     al,dx
  420e1d:	mov    eax,ds:0x3eb777
  420e22:	and    eax,0x6e8b6806
  420e27:	stc    
  420e28:	push   ebp
  420e29:	inc    ecx
	...
  420e5a:	add    BYTE PTR [eax],al
  420e5c:	arpl   WORD PTR [esi+0x44b10150],cx
  420e62:	mov    BYTE PTR [eax+0x66],dl
  420e65:	ret    0xccc0
  420e68:	pop    ss
  420e69:	push   edx
  420e6a:	int3   
  420e6b:	int3   
  420e6c:	ss mov esp,gs
  420e6f:	add    edi,0x11
  420e72:	lahf   
  420e73:	adc    BYTE PTR ds:0xb18affc6,dh
  420e79:	adc    al,0xc7
  420e7b:	ds call 0x91cd3e46
  420e81:	mov    edx,ss
  420e83:	ds fmul st,st(5)
  420e86:	or     ecx,DWORD PTR [ebx-0xbb4716f]
  420e8c:	call   0x2bce025b
  420e91:	adc    DWORD PTR [edi+0x538c8b4d],eax
  420e97:	clc    
  420e98:	fidivr DWORD PTR [edx+0x562b8fb]
  420e9e:	add    BYTE PTR [eax],al
  420ea0:	fiadd  WORD PTR [ebp+0x74]
  420ea3:	inc    esp
  420ea4:	loopne 0x420e88
  420ea6:	test   DWORD PTR [eax],0xc03108ee
  420eac:	dec    eax
  420ead:	and    DWORD PTR [ecx+0x4f8c5b4d],ecx
  420eb3:	sbb    BYTE PTR [eax+0x6a7507ba],cl
  420eb9:	mov    WORD PTR [ebx-0x8],es
  420ebc:	call   0xcb1a92
	...
  420ef1:	add    BYTE PTR [ebx+0x2b558901],ch
  420ef7:	mov    WORD PTR [ebx+0x10],es
  420efa:	fcmovb st,st(2)
  420efc:	pop    ss
  420efd:	mov    eax,0x562
  420f02:	or     ch,bh
  420f04:	mov    BYTE PTR [ebp+0xb],cl
  420f07:	mov    WORD PTR [edi],cs
  420f09:	mov    DWORD PTR [esi-0x4ba76a3],ebp
  420f0f:	sbb    eax,DWORD PTR [ebx-0x4]
  420f12:	outs   dx,BYTE PTR ds:[esi]
  420f13:	or     DWORD PTR [ecx],esi
  420f15:	sar    al,0x8
  420f18:	jmp    0x89873fd0
  420f1d:	in     eax,0x3e
  420f1f:	inc    esp
  420f20:	int3   
  420f21:	int3   
  420f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f23:	push   eax
  420f24:	int3   
  420f25:	int3   
  420f26:	lahf   
  420f27:	push   eax
  420f28:	int3   
  420f29:	int3   
  420f2a:	xchg   edi,eax
  420f2b:	push   eax
  420f2c:	int3   
  420f2d:	int3   
  420f2e:	push   ss
  420f2f:	mov    esp,gs
  420f31:	add    edi,0xfffffffc
  420f34:	les    eax,FWORD PTR [ebp-0x55]
  420f37:	add    al,0x30
  420f39:	add    BYTE PTR [ebx-0x13],ah
  420f3c:	add    eax,DWORD PTR [ebx]
  420f3e:	and    eax,DWORD PTR ds:0xc62efc9f
  420f44:	dec    DWORD PTR [edi+0x7b]
  420f47:	mov    bl,0xfb
  420f49:	inc    DWORD PTR [ebx+eax*4-0x3615f73c]
  420f50:	repz push 0x23
  420f53:	mov    WORD PTR [ebx-0x8],cs
	...
  420f86:	add    BYTE PTR [eax],al
  420f88:	adc    cl,BYTE PTR [ebx+edx*1-0x39f124]
  420f8f:	mov    ah,BYTE PTR [ecx+0x636a4fb5]
  420f95:	pop    esi
  420f96:	push   ebx
  420f97:	hlt    
  420f98:	add    BYTE PTR [edx],bh
  420f9a:	push   ebx
  420f9b:	inc    ecx
  420f9c:	arpl   WORD PTR [edx-0x3b692bc5],ax
  420fa2:	(bad)  
  420fa3:	jmp    FWORD PTR [esi+0x6302b806]
  420fa9:	add    eax,0x8ab9eb00
  420fae:	or     eax,DWORD PTR [eax]
  420fb0:	popa   
  420fb1:	(bad)  
  420fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fb5:	push   ebp
  420fb6:	push   0x4b600
  420fbb:	push   0x400363
  420fc0:	call   0xa297e3bd
  420fc5:	add    eax,0x363c27f
  420fca:	add    BYTE PTR [eax],al
  420fcc:	xchg   ecx,eax
  420fcd:	ins    DWORD PTR es:[edi],dx
  420fce:	sahf   
  420fcf:	(bad)  
  420fd0:	fcomp  QWORD PTR [esi-0x7f]
  420fd3:	les    esp,FWORD PTR [edi-0x63]
  420fd6:	add    BYTE PTR [edx],al
  420fd8:	and    eax,DWORD PTR ds:0x561002b
  420fde:	add    BYTE PTR [ebx+0x4153396e],cl
  420fe4:	arpl   WORD PTR [edx],bp
  420fe6:	enter  0x5e89,0x9
  420fea:	push   esi
  420feb:	inc    ecx
	...
  42101c:	add    BYTE PTR [eax],al
  42101e:	arpl   WORD PTR [edx-0x3bcafbed],cx
  421024:	call   DWORD PTR [ecx-0x3e]
  421027:	cmp    DWORD PTR [ebx+0x41],edx
  42102a:	arpl   WORD PTR [ebp-0x4b6cb278],si
  421030:	out    0x9d,eax
  421032:	jg     0x421092
  421034:	std    
  421035:	sbb    DWORD PTR [edi-0x68ea76ef],0xffffffb8
  42103c:	add    BYTE PTR ds:[eax-0x48],ah
  421040:	pop    es
  421041:	mov    DWORD PTR [esi+0x4b55896d],esi
  421047:	pop    esi
  421048:	loop   0x420fd5
  42104a:	inc    esi
  42104b:	rol    al,0xcc
  42104e:	pop    ss
  42104f:	push   ecx
  421050:	int3   
  421051:	int3   
  421052:	xchg   esi,eax
  421053:	mov    ch,ah
  421055:	mov    ebx,DWORD PTR [esi+0x5f45390d]
  42105b:	rol    BYTE PTR [ebx+ecx*4],cl
  42105e:	sahf   
  42105f:	or     eax,0x20805e9
  421064:	mov    DWORD PTR [ebp+0x67],eax
  421067:	rol    al,0xcc
  42106a:	pop    ds
  42106b:	push   ecx
  42106c:	int3   
  42106d:	int3   
  42106e:	pop    ss
  42106f:	push   ecx
  421070:	int3   
  421071:	int3   
  421072:	xchg   esi,eax
  421073:	mov    ch,ah
  421075:	add    DWORD PTR [edi],0x31
  421078:	lds    eax,FWORD PTR [ebp-0x11]
  42107b:	add    al,0x70
  42107d:	add    DWORD PTR [ebx-0x76],esp
  421080:	inc    ebx
  421081:	or     BYTE PTR [eax],al
	...
  4210b3:	add    dl,ch
  4210b5:	(bad)  
  4210b6:	xlat   BYTE PTR ds:[ebx]
  4210b7:	mov    esp,DWORD PTR [esi]
  4210b9:	cmp    eax,0x25b5589
  4210be:	dec    edi
  4210bf:	cmp    al,0xda
  4210c1:	mov    bh,0xdf
  4210c3:	mov    esp,DWORD PTR [esi]
  4210c5:	gs or  eax,0x88f92bb7
  4210cb:	push   ebp
  4210cc:	ret    
  4210cd:	pop    DWORD PTR [edx+ecx*1+0x4b]
  4210d1:	mov    WORD PTR [ebx-0x18],es
  4210d4:	or     edi,ecx
  4210d6:	add    BYTE PTR [eax+0x63],al
  4210d9:	mov    cl,BYTE PTR [ebx]
  4210db:	cld    
  4210dc:	ss (bad) 
  4210de:	call   DWORD PTR [eax+0x7b]
  4210e1:	int    0xf8
  4210e3:	(bad)  
  4210e4:	jl     0x421067
  4210e6:	les    ecx,FWORD PTR [eax]
  4210e8:	jmp    0xffed:0x236aefc7
  4210ef:	das    
  4210f0:	arpl   WORD PTR ds:0x6d30068,ax
  4210f6:	add    BYTE PTR [edx+0x63],ch
  4210f9:	pop    esp
  4210fa:	push   ebx
  4210fb:	lock fcmovb st,st(2)
  4210fe:	jecxz  0x42108b
  421100:	scas   al,BYTE PTR es:[edi]
  421101:	mov    DWORD PTR gs:[edx-0x69],eax
  421105:	mov    ch,0x88
  421107:	dec    ebp
  421108:	imul   esi,DWORD PTR [esi-0x47b8aa78],0xffffffe7
  42110f:	shl    DWORD PTR [esi],0x5d
  421112:	std    
  421113:	and    DWORD PTR [edi],0xa
  421116:	lds    eax,FWORD PTR [ebp+0x0]
	...
  421149:	add    BYTE PTR [edi],cl
  42114b:	push   es
  42114c:	add    BYTE PTR [eax],al
  42114e:	arpl   WORD PTR [eax+0x7],si
  421151:	mov    ebx,DWORD PTR [esi+0x62c08151]
  421157:	mov    es,WORD PTR [ebx-0xc]
  42115a:	call   0xb451f129
  42115f:	mov    dh,0x5
  421161:	cmp    DWORD PTR [esi-0x17a68eaf],ecx
  421167:	ret    0x83e7
  42116a:	pop    ebx
  42116b:	icebp  
  42116c:	push   DWORD PTR [ebx+0x26]
  42116f:	nop
  421170:	dec    ebx
  421171:	call   0x51f056
  421176:	aaa    
  421177:	sbb    DWORD PTR [ecx+0x4290cb55],ecx
  42117d:	adc    al,bl
  42117f:	retf   0x8bdf
  421182:	adc    bl,BYTE PTR [ecx]
  421184:	mov    eax,DWORD PTR [ebx+esi*2+0x5c]
  421188:	mov    DWORD PTR [ebp-0x7d],ecx
  42118b:	sbb    dl,dl
  42118d:	not    DWORD PTR [edx]
  42118f:	sbb    DWORD PTR [ecx-0x52f37cab],ecx
  421195:	inc    edx
  421196:	aas    
  421197:	mov    ch,0x88
  421199:	inc    ebp
  42119a:	mov    edx,DWORD PTR [eax-0x329ff7b5]
  4211a0:	adc    edx,DWORD PTR [ecx-0x28]
  4211a3:	mov    dl,0xe7
  4211a5:	mov    esp,DWORD PTR [esi+0x67420161]
  4211ab:	mov    ch,0xe7
  4211ad:	push   ebp
	...
  4211de:	add    BYTE PTR [eax],al
  4211e0:	dec    esi
  4211e1:	pop    esp
  4211e2:	std    
  4211e3:	sbb    DWORD PTR [edi],0x9
  4211e6:	mov    DWORD PTR [ebp+0x4b],ecx
  4211e9:	mov    BYTE PTR [edi-0x183615d8],bh
  4211ef:	jmp    0x4211c2
  4211f1:	(bad)  
  4211f2:	push   ebx
  4211f3:	in     al,0x91
  4211f5:	ins    DWORD PTR es:[edi],dx
  4211f6:	push   cs
  4211f7:	cld    
  4211f8:	sbb    al,0x5c
  4211fa:	add    esp,0x323ed5f
  421200:	mov    ds:0xaefc9f05,eax
  421205:	(bad)  
  421206:	dec    DWORD PTR [edi+0xb]
  421209:	nop
  42120a:	cli    
  42120b:	push   esp
  42120d:	xchg   esp,eax
  42120f:	or     dl,bl
  421211:	rcr    ebx,0x83
  421214:	es pop ebp
  421216:	push   ebx
  421217:	inc    ecx
  421218:	arpl   WORD PTR ds:0x9e80a73,ax
  42121e:	lock push ebp
  421220:	and    al,BYTE PTR ds:0x392eff4f
  421226:	cmp    DWORD PTR ds:0x3eb1bb,0x6a1bd263
  421230:	and    ebp,ebp
  421232:	jmp    FWORD PTR [edi]
  421234:	arpl   WORD PTR ds:0xb69f5589,ax
  42123a:	mov    BYTE PTR [ebp-0x7d],al
  42123d:	(bad)
  421241:	pop    esp
  421242:	push   ebx
  421243:	lock add BYTE PTR [eax],al
	...
  421276:	shl    BYTE PTR [eax],0x53
  421279:	inc    ecx
  42127a:	arpl   WORD PTR [eax+0x13],si
  42127d:	push   0x23
  42127f:	in     eax,dx
  421280:	jmp    FWORD PTR [edi]
  421282:	arpl   WORD PTR ds:0xb6675589,ax
  421288:	imul   eax,DWORD PTR [eax],0xa3efb15c
  42128e:	das    
  42128f:	mov    cl,0x3e
  421291:	add    al,ah
  421293:	sbb    ah,dl
  421295:	push   ebp
  421296:	mov    ds:0x56750005,al
  42129b:	out    dx,eax
  42129c:	aas    
  42129d:	push   0x1563
  4212a2:	fadd   st,st(0)
  4212a4:	sti    
  4212a5:	push   eax
  4212a6:	mov    ecx,0x1355fd05
  4212ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212ac:	aam    0x55
  4212ae:	mov    ds:0x74d8905,al
  4212b3:	lea    ecx,[ebx-0x28]
  4212b6:	fdiv   DWORD PTR [eax+0x3da68bd7]
  4212bc:	add    DWORD PTR [edx+0x37],eax
  4212bf:	mov    WORD PTR [ebx-0x20],es
  4212c2:	fmul   st,st(0)
  4212c4:	sti    
  4212c5:	push   ecx
  4212c6:	fdiv   DWORD PTR [eax+0x320252e3]
  4212cc:	push   ebx
  4212cd:	inc    ecx
  4212ce:	arpl   WORD PTR [ebp+0x5acf95e7],si
  4212d4:	std    
  4212d5:	sbb    DWORD PTR [edi+0x4d8909],0x0
	...
  42130c:	ret    
  42130d:	xchg   BYTE PTR [edi+0x563a4],dh
  421313:	add    BYTE PTR [edi],dh
  421315:	pop    ds
  421316:	mov    DWORD PTR [ebp-0x3d],edx
  421319:	mov    es,WORD PTR [ebx-0x28]
  42131c:	pusha  
  42131d:	xchg   DWORD PTR [eax-0x78fa9d00],esp
  421323:	inc    ebp
  421324:	jg     0x4212b4
  421326:	dec    ebx
  421327:	loopne 0x421301
  421329:	lock rcl DWORD PTR [ebp+0x22],cl
  42132d:	add    eax,0x8c2f5129
  421332:	adc    eax,DWORD PTR [edx*1+0x5fa0ffc4]
  421339:	mov    bl,0x3e
  42133b:	add    BYTE PTR [ebx-0x512bf472],dh
  421341:	(bad)  
  421342:	call   DWORD PTR [eax-0x28]
  421345:	scas   eax,DWORD PTR es:[edi]
  421346:	jmp    0x42139a
  421348:	cmp    ebx,edx
  42134a:	stc    
  42134b:	(bad)  
  42134c:	cmp    al,0x86
  42134e:	les    ecx,FWORD PTR [eax+ebp*8]
  421351:	mov    edi,0x315e8bdf
  421356:	push   ebx
  421357:	inc    ecx
  421358:	arpl   WORD PTR [esi],ax
  42135a:	dec    eax
  42135b:	sub    dl,ch
  42135d:	pop    es
  42135e:	adc    al,0x56
  421360:	mov    ds:0xb3d8105,al
  421365:	mov    al,0x3e
  421367:	add    BYTE PTR [ebx-0x30],ah
  42136a:	sub    cl,BYTE PTR [ebx+0x41533156]
	...
  4213a0:	add    BYTE PTR [eax],al
  4213a2:	arpl   WORD PTR [edi-0x3b6aeb62],si
  4213a8:	dec    DWORD PTR [edi-0x28]
  4213ab:	pop    es
  4213ac:	lock push ebp
  4213ae:	and    al,BYTE PTR ds:0x595be84f
  4213b4:	std    
  4213b5:	jmp    eax
  4213b7:	inc    eax
  4213b8:	or     al,0x8b
  4213ba:	outs   dx,BYTE PTR ds:[esi]
  4213bb:	xor    DWORD PTR [ebx+0x41],edx
  4213be:	arpl   WORD PTR [edi+0x59ba49e7],si
  4213c4:	std    
  4213c5:	and    DWORD PTR [edi+0x3b61e900],0x11
  4213cc:	add    DWORD PTR [eax+0x63],eax
  4213cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213d0:	cld    
  4213d1:	push   ebp
  4213d2:	and    al,BYTE PTR ds:0x5c37e850
  4213d8:	std    
  4213d9:	jmp    eax
  4213db:	inc    eax
  4213dc:	or     BYTE PTR [ecx+0xd893126],cl
  4213e2:	(bad)  
  4213e3:	scas   eax,DWORD PTR es:[edi]
  4213e4:	add    BYTE PTR ds:[edx],dl
  4213e7:	mov    ss,WORD PTR [ebx-0x20]
  4213ea:	ret    0x5330
  4213ed:	inc    ecx
  4213ee:	arpl   WORD PTR [edx+eax*2],ax
  4213f1:	sub    BYTE PTR [ebx-0x490ff474],dh
  4213f7:	(bad)  
  4213f8:	call   DWORD PTR [eax+0x3b]
  4213fb:	sub    esp,edi
  4213fd:	(bad)  
  4213fe:	cmp    al,0x85
  421400:	les    ecx,FWORD PTR [eax+ebp*8]
  421403:	repnz out dx,eax
  421405:	push   ebp
	...
  421436:	add    BYTE PTR [eax],al
  421438:	mov    ds:0x93c27f05,al
  42143d:	mov    ah,0xfe
  42143f:	(bad)  
  421440:	jmp    0x8b05:0xa2561bf2
  421447:	inc    ebp
  421448:	or     esi,DWORD PTR [esi-0x86bf97]
  42144e:	mov    BYTE PTR ds:0x3eaf5f,cl
  421454:	xchg   edx,eax
  421455:	pop    eax
  421456:	push   ebx
  421457:	aam    0xfb
  421459:	fs stc 
  42145b:	jmp    esp
  42145d:	popf   
  42145e:	(bad)  
  42145f:	jmp    DWORD PTR [ebx+0x5]
  421462:	mov    ebp,esp
  421464:	ss inc ebx
  421466:	add    al,0x0
  421468:	lahf   
  421469:	dec    ecx
  42146a:	int3   
  42146b:	int3   
  42146c:	xchg   edi,eax
  42146d:	dec    ecx
  42146e:	int3   
  42146f:	int3   
  421470:	push   ss
  421471:	mov    esp,gs
  421473:	mov    ebx,DWORD PTR [esi]
  421475:	or     eax,0xbaaf4089
  42147a:	ror    ah,0x97
  42147d:	dec    ecx
  42147e:	int3   
  42147f:	int3   
  421480:	ss mov esp,gs
  421483:	push   ebx
  421484:	sub    eax,0x833d88b0
  421489:	mov    dl,0x3e
  42148b:	add    al,bl
  42148d:	cli    
  42148e:	jmp    0x4214e5
  421490:	and    al,BYTE PTR ds:0xb29b3589
  421496:	add    BYTE PTR ds:[edi+esi*4],cl
  42149a:	pop    eax
  42149b:	pop    ebp
	...
  4214cc:	add    BYTE PTR [eax],al
  4214ce:	mov    al,ds:0xb6cccc49
  4214d3:	mov    esp,gs
  4214d5:	push   ecx
  4214d6:	retf   
  4214d7:	rol    DWORD PTR [eax],0x40
  4214da:	arpl   WORD PTR [esi+0x5a255fc],sp
  4214e0:	push   eax
  4214e1:	call   0x3f71f5
  4214e6:	loopne 0x421528
  4214e8:	or     BYTE PTR [ecx+0x4d8959a6],cl
  4214ee:	pop    ebx
  4214ef:	mov    dh,0x69
  4214f1:	add    al,ch
  4214f3:	icebp  
  4214f4:	pop    ss
  4214f5:	push   esi
  4214f6:	mov    ds:0xb6ff5205,al
  4214fb:	pop    ecx
  4214fc:	mov    ebp,esp
  4214fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214ff:	inc    esp
  421500:	int3   
  421501:	int3   
  421502:	xchg   esi,eax
  421503:	mov    esp,gs
  421505:	add    DWORD PTR [edi],0x21
  421508:	lds    eax,FWORD PTR [ebp-0x15]
  42150b:	add    al,0x0
  42150d:	add    BYTE PTR [ebx+0x40],ah
  421510:	inc    ebx
  421511:	fcomp  QWORD PTR [ebx+0x5]
  421514:	add    BYTE PTR [eax],al
  421516:	pushf  
  421517:	shl    ebx,0x1
  42151a:	arpl   WORD PTR ds:0x591ec700,ax
  421520:	add    BYTE PTR [eax],al
  421522:	arpl   WORD PTR ds:0x4bf45c5,ax
  421528:	add    BYTE PTR [eax],al
  42152a:	arpl   WORD PTR [ebx+ecx*2-0xff625f8],cx
  421531:	push   ebp
	...
  421562:	add    BYTE PTR [eax],al
  421564:	and    al,BYTE PTR ds:0x578ca9e8
  42156a:	std    
  42156b:	mov    eax,ds:0x3eb193
  421570:	ds pop eax
  421572:	std    
  421573:	add    BYTE PTR [ebx-0x2f],ah
  421576:	or     eax,edi
  421578:	pop    esi
  421579:	pop    ebp
  42157a:	push   ebx
  42157b:	inc    ecx
  42157c:	arpl   WORD PTR ds:0x6c630000,ax
  421582:	or     al,bh
  421584:	pop    bp
  421586:	push   ebx
  421587:	inc    ecx
  421588:	arpl   WORD PTR [eax+eax*1],ax
  42158b:	add    BYTE PTR [ebx-0x7e],ah
  42158e:	cmp    esi,eax
  421590:	scas   al,BYTE PTR es:[edi]
  421591:	(bad)  
  421592:	(bad)  
  421593:	push   DWORD PTR [esi+0x3b05c50b]
  421599:	mov    cl,0x3e
  42159b:	add    BYTE PTR [ebx+0x5],ah
  42159e:	add    BYTE PTR [eax],al
  4215a0:	loopne 0x4215ba
  4215a2:	clc    
  4215a3:	push   ebp
  4215a4:	mov    ds:0x66750005,al
  4215a9:	jmp    0x4215aa
  4215ab:	(bad)  
  4215ac:	jbe    0x4215f3
  4215ae:	push   ebx
  4215af:	inc    ecx
  4215b0:	arpl   WORD PTR [edx+0x5a255f0],sp
  4215b6:	mov    DWORD PTR ds:0x3eb0f3,ecx
  4215bc:	fcmove st,st(0)
  4215be:	out    0x8b,eax
  4215c0:	dec    esi
  4215c1:	push   ebp
  4215c2:	push   ebx
  4215c3:	inc    ecx
  4215c4:	arpl   WORD PTR [edx+0xe843],cx
	...
  4215fa:	pusha  
  4215fb:	ret    
  4215fc:	cmp    ecx,DWORD PTR [ecx+0x4d896d26]
  421602:	mov    ebx,0x16dc0b8c
  421607:	(bad)  
  421608:	jmp    DWORD PTR [edi+0x13]
  42160b:	add    al,BYTE PTR [eax+0x0]
  42160e:	lods   al,BYTE PTR ds:[esi]
  42160f:	lock mov edi,0xa1052255
  421615:	cld    
  421616:	ss (bad) 
  421618:	inc    esi
  42161a:	pop    esi
  42161b:	or     DWORD PTR [esi+0x41],edx
  42161e:	arpl   ax,dx
  421620:	add    BYTE PTR [eax+0x63],al
  421623:	in     eax,dx
  421624:	pop    edi
  421625:	add    esp,DWORD PTR [ebx]
  421627:	add    eax,0xb0771589
  42162c:	add    BYTE PTR ds:[ecx],dl
  42162f:	ins    DWORD PTR es:[edi],dx
  421630:	ret    0x64f7
  421633:	push   esi
  421634:	add    esp,0x5608a26b
  42163a:	mov    ds:0x5b15fd05,al
  42163f:	scas   eax,DWORD PTR es:[edi]
  421640:	add    BYTE PTR ds:[eax],al
  421643:	std    
  421644:	push   ebp
  421645:	inc    ecx
  421646:	arpl   WORD PTR [esp+ecx*1+0x5005a256],sp
  42164d:	call   0x3f6d49
  421652:	loopne 0x421694
  421654:	add    al,0x89
  421656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421657:	push   ebp
  421658:	mov    DWORD PTR [ebp+0x13],ecx
  42165b:	mov    ah,0xe7
  42165d:	aad    0x0
	...
  42168f:	add    BYTE PTR ds:0x1f83fd56,cl
  421695:	add    DWORD PTR [ecx-0x3b690c],esp
  42169b:	mov    cl,BYTE PTR [esi+0x636a5255]
  4216a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216a2:	hlt    
  4216a3:	push   ebp
  4216a4:	mov    ds:0xffe85005,al
  4216a9:	dec    ebp
  4216aa:	std    
  4216ab:	jmp    eax
  4216ad:	inc    eax
  4216ae:	or     al,0x8b
  4216b0:	push   ds
  4216b1:	push   ebp
  4216b2:	xchg   DWORD PTR [ebp-0x3d],ecx
  4216b5:	mov    DWORD PTR [ebx-0x4],edx
  4216b8:	js     0x42166a
  4216ba:	out    dx,eax
  4216bb:	jae    0x4216d6
  4216bd:	mov    al,BYTE PTR [ebx-0x20]
  4216c0:	adc    ecx,DWORD PTR [edx+0x6d12dc4b]
  4216c6:	scas   al,BYTE PTR es:[edi]
  4216c7:	sti    
  4216c8:	pushf  
  4216c9:	push   ebp
  4216ca:	add    esp,0x5600a26b
  4216d0:	and    al,BYTE PTR ds:0xaf631589
  4216d6:	add    BYTE PTR ds:[ecx],dl
  4216d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216da:	or     al,0x56
  4216dc:	and    al,BYTE PTR ds:0xb4874501
  4216e2:	mov    BYTE PTR ds:0x3eaf6f,cl
  4216e8:	pusha  
  4216e9:	ret    0x51fb
  4216ec:	dec    ebx
  4216ed:	cmp    eax,0x894cfff7
  4216f2:	les    ecx,FWORD PTR [eax+eax*1]
	...
  421725:	add    al,bl
  421727:	mov    edx,0x319603f3
  42172c:	add    DWORD PTR [ebp+0x3f],edx
  42172f:	jg     0x421784
  421731:	in     al,0xd8
  421733:	retf   0x3fb
  421736:	sahf   
  421737:	xor    DWORD PTR [edi+0x4b811f45],eax
  42173d:	loopne 0x421787
  42173f:	add    al,BYTE PTR [eax]
  421741:	push   esi
  421742:	mov    ds:0x34d8705,al
  421747:	popa   
  421748:	sahf   
  421749:	(bad)  
  42174a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42174b:	dec    ebp
  42174c:	add    BYTE PTR [eax],al
  42174e:	arpl   WORD PTR ds:0xbad809e9,ax
  421754:	test   DWORD PTR [ebx+0x55870a21],0xf84380db
  42175e:	cwde   
  42175f:	retf   0x73ef
  421762:	mov    eax,DWORD PTR [eax-0x39d10bf5]
  421768:	inc    DWORD PTR [edx]
  42176a:	cs dec ebp
  42176c:	mov    DWORD PTR [ecx],edx
  42176e:	pusha  
  42176f:	mov    edx,0xbab7a1f7
  421774:	add    BYTE PTR ds:[eax-0x36],ah
  421778:	test   DWORD PTR [ecx-0x7b47f8d],0x3e746e2
  421782:	arpl   WORD PTR ds:0xba8f1589,ax
  421788:	add    BYTE PTR ds:[eax],al
	...
  4217bb:	add    BYTE PTR [eax-0x46],ah
  4217be:	div    DWORD PTR [ebx]
  4217c0:	imul   esp,DWORD PTR [esi+0x52255f4],0x7e6b4501
  4217ca:	or     bl,ch
  4217cc:	adc    al,0x7e
  4217ce:	sub    esp,esp
  4217d0:	scas   al,BYTE PTR es:[edi]
  4217d1:	(bad)  
  4217d2:	dec    DWORD PTR [eax+0x4153658e]
  4217d8:	arpl   WORD PTR [eax],bx
  4217da:	(bad)  
  4217db:	mov    DWORD PTR [esi+0x2d],esi
  4217de:	push   ebx
  4217df:	inc    ecx
  4217e0:	arpl   WORD PTR [eax],bx
  4217e2:	(bad)  
  4217e3:	mov    DWORD PTR [esi+0x61],ecx
  4217e6:	push   ebx
  4217e7:	inc    ecx
  4217e8:	arpl   WORD PTR [ebp+0x4e],bx
  4217eb:	neg    DWORD PTR [esp+edx*2]
  4217ee:	mov    ecx,DWORD PTR ds:0x3eba84
  4217f4:	fcmovb st,st(1)
  4217f6:	idiv   DWORD PTR [ecx+0x400763]
  4217fc:	loop   0x42185b
  4217fe:	add    BYTE PTR [edx],al
  421800:	arpl   WORD PTR ds:0x1feb5589,ax
  421806:	iret   
  421807:	mov    DWORD PTR [esi+0x5d],ecx
  42180a:	push   ebx
  42180b:	inc    ecx
  42180c:	arpl   WORD PTR [esi+0x52255e8],sp
  421812:	push   eax
  421813:	call   0x3f677f
  421818:	loopne 0x421862
  42181a:	add    al,0x8b
  42181c:	outs   dx,BYTE PTR ds:[esi]
  42181d:	pop    ecx
  42181e:	push   ebx
  42181f:	inc    ecx
	...
  421850:	add    BYTE PTR [eax],al
  421852:	arpl   WORD PTR [esi+0x53a9d5e7],si
  421858:	std    
  421859:	test   DWORD PTR [ebx-0x5cccfc27],esp
  42185f:	pop    edi
  421860:	sub    cl,BYTE PTR [ebx+0x4153693e]
  421866:	arpl   WORD PTR [eax+0x11e004c4],cx
  42186c:	clc    
  42186d:	push   ebp
  42186e:	and    al,BYTE PTR ds:0xa66a7400
  421874:	aam    0x55
  421876:	and    al,BYTE PTR ds:0x93f4487
  42187c:	call   0xfd9576de
  421881:	mov    ebp,DWORD PTR [esi-0x7]
  421884:	push   ebp
  421885:	inc    ecx
  421886:	arpl   WORD PTR [edi+0x7f2333c0],si
  42188c:	jecxz  0x4218eb
  42188e:	and    BYTE PTR [edx-0x34],al
  421891:	int3   
  421892:	arpl   WORD PTR ds:0x5630000,ax
  421898:	add    BYTE PTR [eax],al
  42189a:	arpl   WORD PTR ds:0x5630000,ax
  4218a0:	add    BYTE PTR [eax],al
  4218a2:	arpl   WORD PTR ds:0x5630000,ax
  4218a8:	add    BYTE PTR [eax],al
  4218aa:	arpl   WORD PTR ds:0x5630000,ax
  4218b0:	add    BYTE PTR [eax],al
  4218b2:	arpl   WORD PTR ds:0x0,ax
	...
  4218e8:	arpl   WORD PTR ds:0x5630000,ax
  4218ee:	add    BYTE PTR [eax],al
  4218f0:	arpl   WORD PTR ds:0x5630000,ax
  4218f6:	add    BYTE PTR [eax],al
  4218f8:	arpl   WORD PTR ds:0x5630000,ax
  4218fe:	add    BYTE PTR [eax],al
  421900:	arpl   WORD PTR ds:0x5630000,ax
  421906:	add    BYTE PTR [eax],al
  421908:	arpl   WORD PTR ds:0x5630000,ax
  42190e:	add    BYTE PTR [eax],al
  421910:	arpl   WORD PTR ds:0x5630000,ax
  421916:	add    BYTE PTR [eax],al
  421918:	arpl   WORD PTR ds:0x5630000,ax
  42191e:	add    BYTE PTR [eax],al
  421920:	arpl   WORD PTR ds:0x5630000,ax
  421926:	add    BYTE PTR [eax],al
  421928:	arpl   WORD PTR ds:0x5630000,ax
  42192e:	add    BYTE PTR [eax],al
  421930:	arpl   WORD PTR ds:0x5630000,ax
  421936:	add    BYTE PTR [eax],al
  421938:	arpl   WORD PTR ds:0x5630000,ax
  42193e:	add    BYTE PTR [eax],al
  421940:	arpl   WORD PTR ds:0x5630000,ax
  421946:	add    BYTE PTR [eax],al
  421948:	arpl   WORD PTR ds:0x0,ax
	...
  42197e:	arpl   WORD PTR ds:0x5630000,ax
  421984:	add    BYTE PTR [eax],al
  421986:	arpl   WORD PTR ds:0x5630000,ax
  42198c:	add    BYTE PTR [eax],al
  42198e:	arpl   WORD PTR ds:0x5630000,ax
  421994:	add    BYTE PTR [eax],al
  421996:	arpl   WORD PTR ds:0x5630000,ax
  42199c:	add    BYTE PTR [eax],al
  42199e:	arpl   WORD PTR ds:0x5630000,ax
  4219a4:	add    BYTE PTR [eax],al
  4219a6:	arpl   WORD PTR ds:0x5630000,ax
  4219ac:	add    BYTE PTR [eax],al
  4219ae:	arpl   WORD PTR ds:0x5630000,ax
  4219b4:	add    BYTE PTR [eax],al
  4219b6:	arpl   WORD PTR ds:0x5630000,ax
  4219bc:	add    BYTE PTR [eax],al
  4219be:	arpl   WORD PTR ds:0x5630000,ax
  4219c4:	add    BYTE PTR [eax],al
  4219c6:	arpl   WORD PTR ds:0x5630000,ax
  4219cc:	add    BYTE PTR [eax],al
  4219ce:	arpl   WORD PTR ds:0x5630000,ax
  4219d4:	add    BYTE PTR [eax],al
  4219d6:	arpl   WORD PTR ds:0x5630000,ax
  4219dc:	add    BYTE PTR [eax],al
  4219de:	arpl   WORD PTR ds:0x0,ax
	...
  421a14:	arpl   WORD PTR ds:0x5630000,ax
  421a1a:	add    BYTE PTR [eax],al
  421a1c:	arpl   WORD PTR ds:0x5630000,ax
  421a22:	add    BYTE PTR [eax],al
  421a24:	arpl   WORD PTR ds:0x5630000,ax
  421a2a:	add    BYTE PTR [eax],al
  421a2c:	arpl   WORD PTR ds:0x5630000,ax
  421a32:	add    BYTE PTR [eax],al
  421a34:	arpl   WORD PTR ds:0x5630000,ax
  421a3a:	add    BYTE PTR [eax],al
  421a3c:	arpl   WORD PTR ds:0x5630000,ax
  421a42:	add    BYTE PTR [eax],al
  421a44:	arpl   WORD PTR ds:0x5630000,ax
  421a4a:	add    BYTE PTR [eax],al
  421a4c:	arpl   WORD PTR ds:0x5630000,ax
  421a52:	add    BYTE PTR [eax],al
  421a54:	arpl   WORD PTR ds:0x5630000,ax
  421a5a:	add    BYTE PTR [eax],al
  421a5c:	arpl   WORD PTR ds:0x5630000,ax
  421a62:	add    BYTE PTR [eax],al
  421a64:	arpl   WORD PTR ds:0x5630000,ax
  421a6a:	add    BYTE PTR [eax],al
  421a6c:	arpl   WORD PTR ds:0x5630000,ax
  421a72:	add    BYTE PTR [eax],al
  421a74:	add    BYTE PTR [edx],al
  421a76:	add    BYTE PTR [eax],al
  421a78:	arpl   WORD PTR ds:0x57b0000,ax
  421a7e:	add    BYTE PTR [eax],al
  421a80:	fbstp  TBYTE PTR [edi]
  421a82:	nop
  421a83:	xor    ch,bh
  421a85:	aaa    
  421a86:	cwde   
  421a87:	xor    bl,bh
  421a89:	aaa    
  421a8a:	mov    al,ds:0xa837bf32
  421a8f:	xor    ah,BYTE PTR [ebx+0x45]
  421a92:	add    DWORD PTR [eax],eax
  421a94:	adc    eax,DWORD PTR ds:0x3f400000
  421a9a:	dec    ebx
  421a9b:	cmp    esi,DWORD PTR [ebx-0x53c4a5c2]
  421aa1:	ds push 0x933eb53b
  421aa7:	cmp    ebx,ebp
  421aa9:	cmp    eax,0x3e1f3ba8
  421aae:	in     eax,dx
  421aaf:	cmp    ebx,DWORD PTR [eax+0x39]
  421ab2:	adc    DWORD PTR [edx+ecx*2],edi
  421ab5:	cmp    DWORD PTR [ebp-0x78c838c4],ebx
  421abb:	ds out 0x3a,al
  421abe:	xchg   ebp,eax
  421abf:	ds daa 
  421ac1:	cmp    ecx,ebp
  421ac3:	ds cld 
  421ac5:	cmp    bh,BYTE PTR [esi+0x3f]
  421ac8:	loopne 0x421b03
  421aca:	fwait
  421acb:	aas    
  421acc:	retf   0xaf39
  421acf:	aas    
  421ad0:	lods   al,BYTE PTR ds:[esi]
  421ad1:	cmp    esp,ecx
  421ad3:	aas    
  421ad4:	adc    DWORD PTR [edx],edi
  421ad6:	out    0x3f,al
  421ad8:	sar    BYTE PTR [ecx],cl
  421ada:	stc    
  421adb:	aas    
	...
  421b0c:	add    BYTE PTR [eax],al
  421b0e:	aam    0x39
  421b10:	add    BYTE PTR [eax],al
  421b12:	arpl   WORD PTR [ebp+0x1],dx
  421b15:	add    BYTE PTR [edi],cl
  421b17:	add    eax,0x35660000
  421b1c:	sbb    BYTE PTR [eax],dh
  421b1e:	loop   0x421b54
  421b20:	xchg   DWORD PTR [eax],esi
  421b22:	and    eax,0x6314b34
  421b27:	xor    al,0x66
  421b29:	xor    DWORD PTR [ebx],edx
  421b2b:	xor    al,0x8d
  421b2d:	xor    DWORD PTR [edi-0x5ece55cd],edi
  421b33:	xor    esp,ecx
  421b35:	xor    DWORD PTR [ebp+0x37],edx
  421b38:	pop    ss
  421b39:	xor    bl,BYTE PTR [edi+0x37]
  421b3c:	and    esi,DWORD PTR [edx]
  421b3e:	cmp    dh,BYTE PTR [edi]
  421b40:	inc    edx
  421b41:	xor    bl,BYTE PTR [ebx]
  421b43:	aaa    
  421b44:	push   ecx
  421b45:	xor    cl,BYTE PTR [edi+esi*1]
  421b48:	pop    esi
  421b49:	xor    cl,dh
  421b4b:	xor    edi,DWORD PTR [ebp+0x32]
  421b4e:	loope  0x421b83
  421b50:	xchg   esp,eax
  421b51:	xor    ch,dh
  421b53:	xor    esp,DWORD PTR [edi-0x3dcbf2ce]
  421b59:	xor    dl,BYTE PTR [ebx]
  421b5b:	xor    al,0x8
  421b5d:	xor    esp,DWORD PTR [ebp+0x34]
  421b60:	adc    al,0x33
  421b62:	xchg   BYTE PTR [edx+ebp*1],dh
  421b65:	xor    esp,DWORD PTR [ecx-0x14cc81cc]
  421b6b:	xor    al,0x95
  421b6d:	xor    eax,edx
  421b6f:	xor    al,0xab
  421b71:	xor    eax,DWORD PTR [eax]
	...
  421ba3:	add    bh,dl
  421ba5:	xor    al,0xbe
  421ba7:	xor    ebx,DWORD PTR [edx]
  421ba9:	xor    eax,0x351733ce
  421bae:	fnsave [ebx]
  421bb0:	add    al,0x35
  421bb2:	hlt    
  421bb3:	xor    ebp,ecx
  421bb5:	xor    al,0xff
  421bb7:	xor    ebx,DWORD PTR [esi+0x31]
  421bba:	or     DWORD PTR [ebp*2-0x7ecbebcf],esi
  421bc1:	xor    DWORD PTR [eax],ebp
  421bc3:	xor    al,0x7e
  421bc5:	xor    DWORD PTR [edx],esi
  421bc7:	xor    al,0x14
  421bc9:	xor    DWORD PTR [edx+0x34],ebx
  421bcc:	in     eax,0x31
  421bce:	mov    WORD PTR [ecx+edx*8],?
  421bd1:	xor    DWORD PTR [esp+esi*1+0x34eb31a5],ebx
  421bd8:	stos   DWORD PTR es:[edi],eax
  421bd9:	xor    DWORD PTR [esi*1+0x35233275],ecx
  421be0:	dec    edx
  421be1:	xor    dh,BYTE PTR [ecx]
  421be3:	xor    eax,0x3544324a
  421be8:	pop    ss
  421be9:	xor    bl,BYTE PTR [ebp+0x35]
  421bec:	add    DWORD PTR [edx],esi
  421bee:	jno    0x421c25
  421bf0:	fidiv  WORD PTR [edx]
  421bf2:	mov    ?,WORD PTR ds:0x35a532d5
  421bf8:	arpl   WORD PTR ds:0x5630000,ax
  421bfe:	add    BYTE PTR [eax],al
  421c00:	arpl   WORD PTR ds:0x5630000,ax
	...
  421c3a:	arpl   WORD PTR ds:0x5630000,ax
  421c40:	add    BYTE PTR [eax],al
  421c42:	arpl   WORD PTR ds:0x5630000,ax
  421c48:	add    BYTE PTR [eax],al
  421c4a:	arpl   WORD PTR ds:0x5630000,ax
  421c50:	add    BYTE PTR [eax],al
  421c52:	arpl   WORD PTR ds:0x5630000,ax
  421c58:	add    BYTE PTR [eax],al
  421c5a:	arpl   WORD PTR ds:0x5630000,ax
  421c60:	add    BYTE PTR [eax],al
  421c62:	arpl   WORD PTR ds:0x5630000,ax
  421c68:	add    BYTE PTR [eax],al
  421c6a:	arpl   WORD PTR ds:0x5630000,ax
  421c70:	add    BYTE PTR [eax],al
  421c72:	arpl   WORD PTR ds:0x5630000,ax
  421c78:	add    BYTE PTR [eax],al
  421c7a:	arpl   WORD PTR ds:0x5630000,ax
  421c80:	add    BYTE PTR [eax],al
  421c82:	arpl   WORD PTR ds:0x5630000,ax
  421c88:	add    BYTE PTR [eax],al
  421c8a:	arpl   WORD PTR ds:0x5630000,ax
  421c90:	add    BYTE PTR [eax],al
  421c92:	arpl   WORD PTR ds:0x5630000,ax
  421c98:	add    BYTE PTR [eax],al
  421c9a:	arpl   WORD PTR ds:0x0,ax
	...
  421cd0:	arpl   WORD PTR ds:0x5630000,ax
  421cd6:	add    BYTE PTR [eax],al
  421cd8:	arpl   WORD PTR ds:0x5630000,ax
  421cde:	add    BYTE PTR [eax],al
  421ce0:	arpl   WORD PTR ds:0x5630000,ax
  421ce6:	add    BYTE PTR [eax],al
  421ce8:	arpl   WORD PTR ds:0x5630000,ax
  421cee:	add    BYTE PTR [eax],al
  421cf0:	arpl   WORD PTR ds:0x5630000,ax
  421cf6:	add    BYTE PTR [eax],al
  421cf8:	arpl   WORD PTR ds:0x5630000,ax
  421cfe:	add    BYTE PTR [eax],al
  421d00:	arpl   WORD PTR ds:0x5630000,ax
  421d06:	add    BYTE PTR [eax],al
  421d08:	arpl   WORD PTR ds:0x5630000,ax
  421d0e:	add    BYTE PTR [eax],al
  421d10:	arpl   WORD PTR ds:0x5630000,ax
  421d16:	add    BYTE PTR [eax],al
  421d18:	arpl   WORD PTR ds:0x5630000,ax
  421d1e:	add    BYTE PTR [eax],al
  421d20:	arpl   WORD PTR ds:0x5630000,ax
  421d26:	add    BYTE PTR [eax],al
  421d28:	arpl   WORD PTR ds:0x5630000,ax
  421d2e:	add    BYTE PTR [eax],al
  421d30:	arpl   WORD PTR ds:0x0,ax
	...
  421d66:	arpl   WORD PTR ds:0x5630000,ax
  421d6c:	add    BYTE PTR [eax],al
  421d6e:	arpl   WORD PTR ds:0x25ff0000,ax
  421d74:	enter  0x4222,0x0
  421d78:	jmp    DWORD PTR ds:0x4222cc
  421d7e:	jmp    DWORD PTR ds:0x4222d0
  421d84:	jmp    DWORD PTR ds:0x4222d4
  421d8a:	jmp    DWORD PTR ds:0x4222d8
  421d90:	jmp    DWORD PTR ds:0x4222dc
  421d96:	jmp    DWORD PTR ds:0x4222e0
  421d9c:	jmp    DWORD PTR ds:0x4222e4
  421da2:	jmp    DWORD PTR ds:0x4222e8
  421da8:	jmp    DWORD PTR ds:0x4222ec
  421dae:	jmp    DWORD PTR ds:0x4222f0
  421db4:	jmp    DWORD PTR ds:0x4222f4
  421dba:	jmp    DWORD PTR ds:0x4222f8
  421dc0:	jmp    DWORD PTR ds:0x4222fc
  421dc6:	jmp    DWORD PTR ds:0x422300
  421dcc:	jmp    DWORD PTR ds:0x422304
  421dd2:	jmp    DWORD PTR ds:0x422308
  421dd8:	jmp    DWORD PTR ds:0x422310
  421dde:	jmp    DWORD PTR ds:0x422314
  421de4:	jmp    DWORD PTR ds:0x422318
  421dea:	jmp    DWORD PTR ds:0x42231c
  421df0:	jmp    DWORD PTR ds:0x422320
  421df6:	jmp    DWORD PTR ds:0x422324
  421dfc:	jmp    DWORD PTR ds:0x422328
  421e02:	jmp    DWORD PTR ds:0x42232c
  421e08:	jmp    DWORD PTR ds:0x422330
  421e0e:	jmp    DWORD PTR ds:0x422334
  421e14:	jmp    DWORD PTR ds:0x422338
  421e1a:	jmp    DWORD PTR ds:0x42233c
  421e20:	jmp    DWORD PTR ds:0x422340
  421e26:	jmp    DWORD PTR ds:0x422344
  421e2c:	jmp    DWORD PTR ds:0x422348
  421e32:	jmp    DWORD PTR ds:0x42234c
  421e38:	jmp    DWORD PTR ds:0x422350
  421e3e:	jmp    DWORD PTR ds:0x422354
  421e44:	jmp    DWORD PTR ds:0x422358
  421e4a:	jmp    DWORD PTR ds:0x42235c
  421e50:	jmp    DWORD PTR ds:0x422360
  421e56:	jmp    DWORD PTR ds:0x422364
  421e5c:	jmp    DWORD PTR ds:0x422368
  421e62:	jmp    DWORD PTR ds:0x42236c
  421e68:	jmp    DWORD PTR ds:0x422370
  421e6e:	jmp    DWORD PTR ds:0x422374
  421e74:	jmp    DWORD PTR ds:0x422378
  421e7a:	jmp    DWORD PTR ds:0x42237c
  421e80:	jmp    DWORD PTR ds:0x422380
  421e86:	jmp    DWORD PTR ds:0x422384
  421e8c:	jmp    DWORD PTR ds:0x422388
  421e92:	jmp    DWORD PTR ds:0x42238c
  421e98:	jmp    DWORD PTR ds:0x422390
  421e9e:	jmp    DWORD PTR ds:0x422394
  421ea4:	jmp    DWORD PTR ds:0x422398
  421eaa:	jmp    DWORD PTR ds:0x42239c
  421eb0:	jmp    DWORD PTR ds:0x4223a0
  421eb6:	jmp    DWORD PTR ds:0x4223a4
  421ebc:	jmp    DWORD PTR ds:0x4223a8
  421ec2:	jmp    DWORD PTR ds:0x4223ac
  421ec8:	jmp    DWORD PTR ds:0x4223b0
  421ece:	jmp    DWORD PTR ds:0x4223b4
  421ed4:	jmp    DWORD PTR ds:0x4223b8
  421eda:	jmp    DWORD PTR ds:0x4223bc
  421ee0:	jmp    DWORD PTR ds:0x4223c0
  421ee6:	jmp    DWORD PTR ds:0x4223c4
  421eec:	jmp    DWORD PTR ds:0x4223c8
  421ef2:	jmp    DWORD PTR ds:0x4223cc
  421ef8:	jmp    DWORD PTR ds:0x4223d0
  421efe:	jmp    DWORD PTR ds:0x4223d4
  421f04:	jmp    DWORD PTR ds:0x4223d8
  421f0a:	jmp    DWORD PTR ds:0x4223dc
  421f10:	jmp    DWORD PTR ds:0x4223e0
  421f16:	jmp    DWORD PTR ds:0x4223e4
  421f1c:	jmp    DWORD PTR ds:0x4223e8
  421f22:	jmp    DWORD PTR ds:0x4223ec
  421f28:	jmp    DWORD PTR ds:0x4223f0
  421f2e:	jmp    DWORD PTR ds:0x4223f4
  421f34:	jmp    DWORD PTR ds:0x4223f8
  421f3a:	jmp    DWORD PTR ds:0x4223fc
  421f40:	jmp    DWORD PTR ds:0x422400
  421f46:	jmp    DWORD PTR ds:0x422404
  421f4c:	jmp    DWORD PTR ds:0x422408
  421f52:	jmp    DWORD PTR ds:0x422410
  421f58:	jmp    DWORD PTR ds:0x422414
  421f5e:	jmp    DWORD PTR ds:0x422418
  421f64:	jmp    DWORD PTR ds:0x42241c
  421f6a:	jmp    DWORD PTR ds:0x422420
  421f70:	jmp    DWORD PTR ds:0x422424
  421f76:	jmp    DWORD PTR ds:0x422428
  421f7c:	jmp    DWORD PTR ds:0x42242c
  421f82:	jmp    DWORD PTR ds:0x422430
  421f88:	jmp    DWORD PTR ds:0x422434
  421f8e:	jmp    DWORD PTR ds:0x422438
  421f94:	jmp    DWORD PTR ds:0x42243c
  421f9a:	jmp    DWORD PTR ds:0x422440
  421fa0:	jmp    DWORD PTR ds:0x422444
  421fa6:	jmp    DWORD PTR ds:0x422448
  421fac:	jmp    DWORD PTR ds:0x42244c
  421fb2:	jmp    DWORD PTR ds:0x422450
  421fb8:	jmp    DWORD PTR ds:0x422454
  421fbe:	jmp    DWORD PTR ds:0x422458
  421fc4:	jmp    DWORD PTR ds:0x42245c
  421fca:	jmp    DWORD PTR ds:0x422460
  421fd0:	jmp    DWORD PTR ds:0x422468
  421fd6:	jmp    DWORD PTR ds:0x42246c
  421fdc:	jmp    DWORD PTR ds:0x422474
  421fe2:	jmp    DWORD PTR ds:0x422478
  421fe8:	jmp    DWORD PTR ds:0x42247c
  421fee:	jmp    DWORD PTR ds:0x422480
  421ff4:	jmp    DWORD PTR ds:0x422488
